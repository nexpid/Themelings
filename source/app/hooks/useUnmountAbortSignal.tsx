// app/hooks/useUnmountAbortSignal.tsx
export default (function(_, argBar, argBaz, __, ___, argFre, argPlu) {
    report = argBar;
    zuuluu = argFre;
    tangon = argPlu;
    var _closure1_slot0 = report;
    entity = argBaz;
    var _closure1_slot1 = entity;
    var _closure1_slot2 = tangon;
    entity = global;
    option = entity.Object;
    golfie = option.defineProperty;
    oscard = {};
    entity = true;
    oscard['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(option)(zuuluu, entity, oscard);
    entity = 2;
    tangon = tangon[entity];
    entity = undefined;
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'hooks/useUnmountAbortSignal.tsx';
    tangon = report.bind(oscard)(tangon);
    michal = function() { // Original name: useUnmountAbortSignal
        tangon = _closure1_slot1;
        oscard = _closure1_slot2;
        entity = 0;
        entity = oscard[entity];
        report = undefined;
        tangon = tangon.bind(report)(entity);
        entity = function() {
            entity = global;
            entity = entity.AbortController;
            michal = entity.prototype;
            michal = Object.create(michal, {constructor: {value: entity}});
            zuuluu = michal;
            entity = new zuuluu[entity](michal);
            entity = entity instanceof Object ? entity : michal;
            return entity;
        };
        entity = tangon.bind(report)(entity);
        var _closure2_slot0 = entity;
        tangon = _closure1_slot0;
        zuuluu = 1;
        zuuluu = oscard[zuuluu];
        tangon = tangon.bind(report)(zuuluu);
        zuuluu = tangon.useUnmountEffect;
        michal = function() {
            michal = _closure2_slot0;
            entity = michal.abort;
            entity = entity.bind(michal)();
            entity = undefined;
            return entity;
        };
        michal = zuuluu.bind(tangon)(michal);
        entity = entity.signal;
        return entity;
    };
    zuuluu['default'] = michal;
    return entity;
})();