// app/components_native/useChannelStylesShared.tsx
export default (function(_, argBar, argBaz, __, ___, argFred, argPlugh) {
    golf = argBar;
    foxtrot = argBaz;
    zulu = argFred;
    options = argPlugh;
    entity = global;
    report = entity.Object;
    tango = report.defineProperty;
    mike = {};
    entity = true;
    mike['value'] = entity;
    entity = '__esModule';
    entity = tango.bind(report)(zulu, entity, mike);
    mike = 0;
    tango = options[mike];
    entity = undefined;
    oscar = golf.bind(entity)(tango);
    report = oscar.createStyles;
    tango = {};
    verify = {};
    romeo = 1;
    verify['flex'] = romeo;
    tango['container'] = verify;
    verify = {};
    offset = options[romeo];
    offset = foxtrot.bind(entity)(offset);
    offset = offset.colors;
    offset = offset.BACKGROUND_MOBILE_SECONDARY;
    verify['backgroundColor'] = offset;
    tango['background'] = verify;
    report = report.bind(oscar)(tango);
    tango = options[mike];
    verify = golf.bind(entity)(tango);
    oscar = verify.createStyles;
    tango = {};
    offset = {};
    offset['flex'] = romeo;
    tango['flex'] = offset;
    offset = {};
    offset['flex'] = romeo;
    yankee = options[romeo];
    yankee = foxtrot.bind(entity)(yankee);
    yankee = yankee.colors;
    yankee = yankee.BACKGROUND_MOBILE_SECONDARY;
    offset['backgroundColor'] = yankee;
    tango['scene'] = offset;
    offset = {};
    offset['flexGrow'] = mike;
    tango['callPTTButton'] = offset;
    offset = {};
    yankee = 'transparent';
    offset['shadowColor'] = yankee;
    tango['header'] = offset;
    offset = {};
    yankee = options[romeo];
    yankee = foxtrot.bind(entity)(yankee);
    yankee = yankee.colors;
    yankee = yankee.BACKGROUND_SECONDARY;
    offset['backgroundColor'] = yankee;
    yankee = options[romeo];
    yankee = foxtrot.bind(entity)(yankee);
    yankee = yankee.colors;
    yankee = yankee.BACKGROUND_SECONDARY;
    offset['borderBottomColor'] = yankee;
    tango['forumChannelStyles'] = offset;
    offset = {};
    yankee = 'relative';
    offset['position'] = yankee;
    tango['headerLeftContainer'] = offset;
    offset = {'position': 'relative', 'marginLeft': 0, 'marginRight': 0, 'left': 0, 'right': 0, 'flex': 1};
    tango['headerTitleContainer'] = offset;
    offset = {'position': 'relative', 'flexBasis': 'auto', 'flexGrow': 0, 'flexShrink': 0};
    tango['headerRightContainer'] = offset;
    tango = oscar.bind(verify)(tango);
    mike = options[mike];
    offset = golf.bind(entity)(mike);
    verify = offset.createStyles;
    mike = {};
    oscar = {'marginLeft': 4, 'marginRight': 4};
    mike['navbarLeft'] = oscar;
    yankee = {};
    oscar = 2;
    yankee['marginHorizontal'] = oscar;
    mike['menuIcon'] = yankee;
    yankee = {'bottom': 5, 'right': 0};
    backup = options[romeo];
    backup = foxtrot.bind(entity)(backup);
    backup = backup.colors;
    backup = backup.BACKGROUND_MOBILE_SECONDARY;
    yankee['backgroundColor'] = backup;
    mike['mentionBadge'] = yankee;
    yankee = {'bottom': 5, 'right': 0};
    romeo = options[romeo];
    romeo = foxtrot.bind(entity)(romeo);
    romeo = romeo.colors;
    romeo = romeo.BACKGROUND_SECONDARY;
    yankee['backgroundColor'] = romeo;
    mike['mentionBadgeAlternate'] = yankee;
    mike = verify.bind(offset)(mike);
    oscar = options[oscar];
    options = golf.bind(entity)(oscar);
    golf = options.fileFinishedImporting;
    oscar = 'components_native/useChannelStylesShared.tsx';
    oscar = golf.bind(options)(oscar);
    zulu['useChannelStylesShared'] = report;
    zulu['useChannelStyles'] = tango;
    zulu['useMenuButtonStyles'] = mike;
    return entity;
})();