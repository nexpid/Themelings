// app/components_native/useChannelStylesShared.tsx
export default (function(_, argBar, argBaz, __, ___, argFre, argPlu) {
    golfie = argBar;
    foxtra = argBaz;
    zuuluu = argFre;
    option = argPlu;
    entity = global;
    report = entity.Object;
    tangon = report.defineProperty;
    michal = {};
    entity = true;
    michal['value'] = entity;
    entity = '__esModule';
    entity = tangon.bind(report)(zuuluu, entity, michal);
    michal = 0;
    tangon = option[michal];
    entity = undefined;
    oscard = golfie.bind(entity)(tangon);
    report = oscard.createStyles;
    tangon = {};
    verify = {};
    romeon = 1;
    verify['flex'] = romeon;
    tangon['container'] = verify;
    verify = {};
    offset = option[romeon];
    offset = foxtra.bind(entity)(offset);
    offset = offset.colors;
    offset = offset.BACKGROUND_MOBILE_SECONDARY;
    verify['backgroundColor'] = offset;
    tangon['background'] = verify;
    report = report.bind(oscard)(tangon);
    tangon = option[michal];
    verify = golfie.bind(entity)(tangon);
    oscard = verify.createStyles;
    tangon = {};
    offset = {};
    offset['flex'] = romeon;
    tangon['flex'] = offset;
    offset = {};
    offset['flex'] = romeon;
    yankee = option[romeon];
    yankee = foxtra.bind(entity)(yankee);
    yankee = yankee.colors;
    yankee = yankee.BACKGROUND_MOBILE_SECONDARY;
    offset['backgroundColor'] = yankee;
    tangon['scene'] = offset;
    offset = {};
    offset['flexGrow'] = michal;
    tangon['callPTTButton'] = offset;
    offset = {};
    yankee = 'transparent';
    offset['shadowColor'] = yankee;
    tangon['header'] = offset;
    offset = {};
    yankee = option[romeon];
    yankee = foxtra.bind(entity)(yankee);
    yankee = yankee.colors;
    yankee = yankee.BACKGROUND_SECONDARY;
    offset['backgroundColor'] = yankee;
    yankee = option[romeon];
    yankee = foxtra.bind(entity)(yankee);
    yankee = yankee.colors;
    yankee = yankee.BACKGROUND_SECONDARY;
    offset['borderBottomColor'] = yankee;
    tangon['forumChannelStyles'] = offset;
    offset = {};
    yankee = 'relative';
    offset['position'] = yankee;
    tangon['headerLeftContainer'] = offset;
    offset = {'position': 'relative', 'marginLeft': 0, 'marginRight': 0, 'left': 0, 'right': 0, 'flex': 1};
    tangon['headerTitleContainer'] = offset;
    offset = {'position': 'relative', 'flexBasis': 'auto', 'flexGrow': 0, 'flexShrink': 0};
    tangon['headerRightContainer'] = offset;
    tangon = oscard.bind(verify)(tangon);
    michal = option[michal];
    offset = golfie.bind(entity)(michal);
    verify = offset.createStyles;
    michal = {};
    oscard = {'marginLeft': 4, 'marginRight': 4};
    michal['navbarLeft'] = oscard;
    yankee = {};
    oscard = 2;
    yankee['marginHorizontal'] = oscard;
    michal['menuIcon'] = yankee;
    yankee = {'bottom': 5, 'right': 0};
    backup = option[romeon];
    backup = foxtra.bind(entity)(backup);
    backup = backup.colors;
    backup = backup.BACKGROUND_MOBILE_SECONDARY;
    yankee['backgroundColor'] = backup;
    michal['mentionBadge'] = yankee;
    yankee = {'bottom': 5, 'right': 0};
    romeon = option[romeon];
    romeon = foxtra.bind(entity)(romeon);
    romeon = romeon.colors;
    romeon = romeon.BACKGROUND_SECONDARY;
    yankee['backgroundColor'] = romeon;
    michal['mentionBadgeAlternate'] = yankee;
    michal = verify.bind(offset)(michal);
    oscard = option[oscard];
    option = golfie.bind(entity)(oscard);
    golfie = option.fileFinishedImporting;
    oscard = 'components_native/useChannelStylesShared.tsx';
    oscard = golfie.bind(option)(oscard);
    zuuluu['useChannelStylesShared'] = report;
    zuuluu['useChannelStyles'] = tangon;
    zuuluu['useMenuButtonStyles'] = michal;
    return entity;
})();