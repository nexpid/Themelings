// app/components_native/AppShare.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    report = argBar;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    entity = argBaz;
    var _closure1_slot1 = entity;
    var _closure1_slot2 = oscard;
    entity = global;
    option = entity.Object;
    golfie = option.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(option)(zuuluu, entity, tangon);
    entity = 0;
    golfie = oscard[entity];
    tangon = argCor;
    entity = undefined;
    tangon = tangon.bind(entity)(golfie);
    offset = 1;
    tangon = oscard[offset];
    tangon = report.bind(entity)(tangon);
    option = tangon.StyleSheet;
    tangon = tangon.View;
    var _closure1_slot3 = tangon;
    tangon = 2;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = 3;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = 4;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = 5;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = 6;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = 7;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = 8;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = 9;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = 10;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = 11;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = 12;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = 13;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = 14;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = 15;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.AnalyticEvents;
    var _closure1_slot4 = tangon;
    tangon = 16;
    golfie = oscard[tangon];
    golfie = report.bind(entity)(golfie);
    golfie = golfie.jsx;
    var _closure1_slot5 = golfie;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.jsxs;
    var _closure1_slot6 = tangon;
    golfie = option.create;
    tangon = {};
    verify = {};
    verify['flex'] = offset;
    tangon['flex'] = verify;
    tangon = golfie.bind(option)(tangon);
    var _closure1_slot7 = tangon;
    tangon = 25;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'components_native/AppShare.tsx';
    tangon = report.bind(oscard)(tangon);
    michal = function(argFoo) { // Original name: AppShare
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            romeon = argFoo;
            var _closure2_slot0 = romeon;
            report = romeon.initialized;
            michal = _closure1_slot1;
            golfie = _closure1_slot2;
            zuuluu = 19;
            zuuluu = golfie[zuuluu];
            tangon = undefined;
            zuuluu = michal.bind(tangon)(zuuluu);
            zuuluu = zuuluu.bind(tangon)();
            zuuluu = 20;
            zuuluu = golfie[zuuluu];
            zuuluu = michal.bind(tangon)(zuuluu);
            entity = function() {
                entity = {};
                michal = _closure2_slot0;
                zuuluu = michal.attachments;
                zuuluu = zuuluu.length;
                entity['numAttachments'] = zuuluu;
                tangon = michal.attachments;
                zuuluu = tangon.map;
                michal = function(argFoo) {
                    _fun00003: for(var _fun00004_ip = 0; ; ) switch(_fun00004_ip) {
 0:
                        entity = argFoo;
                        michal = entity.mimeType;
                        entity = null;
                        zuuluu = entity != michal;
                        entity = 'unknown';
                        if(!zuuluu) { _fun00004_ip = 25; continue _fun00003 }
 22:
                        entity = michal;
 25:
                        return entity;
                    }
                };
                michal = zuuluu.bind(tangon)(michal);
                entity['mimeTypes'] = michal;
                option = entity.numAttachments;
                zuuluu = entity.mimeTypes;
                oscard = _closure1_slot0;
                report = _closure1_slot2;
                entity = 17;
                tangon = report[entity];
                entity = undefined;
                golfie = oscard.bind(entity)(tangon);
                oscard = golfie.trackAppUIViewed;
                tangon = {};
                tangon['share_num_attachments'] = option;
                tangon['share_attachment_mimetypes'] = zuuluu;
                zuuluu = 'share';
                zuuluu = oscard.bind(golfie)(zuuluu, tangon);
                tangon = _closure1_slot1;
                zuuluu = 18;
                zuuluu = report[zuuluu];
                report = tangon.bind(entity)(zuuluu);
                tangon = report.track;
                michal = _closure1_slot4;
                zuuluu = michal.SHARE_SHEET_ACTION;
                michal = {};
                oscard = 'sheet_opened';
                michal['action'] = oscard;
                michal = tangon.bind(report)(zuuluu, michal);
                return entity;
            };
            entity = zuuluu.bind(tangon)(entity);
            zuuluu = _closure1_slot6;
            entity = 21;
            entity = golfie[entity];
            michal = michal.bind(tangon)(entity);
            entity = {};
            golfie = 'old-share';
            entity['appEntryKey'] = golfie;
            verify = _closure1_slot5;
            if(report) { _fun00002_ip = 140; continue _fun00001 }
 104:
            golfie = _closure1_slot0;
            option = _closure1_slot2;
            report = 23;
            report = option[report];
            report = golfie.bind(tangon)(report);
            golfie = report.SceneLoadingIndicator;
            report = {};
            golfie = verify.bind(tangon)(golfie, report);
            _fun00002_ip = 207; continue _fun00001;
 140:
            option = _closure1_slot3;
            report = {};
            offset = _closure1_slot7;
            offset = offset.flex;
            report['style'] = offset;
            yankee = _closure1_slot1;
            foxtra = _closure1_slot2;
            offset = 22;
            offset = foxtra[offset];
            yankee = yankee.bind(tangon)(offset);
            offset = {};
            kiloes = offset;
            backup = romeon;
            romeon = copyDataProperties(kiloes, backup);
            offset = verify.bind(tangon)(yankee, offset);
            report['children'] = offset;
            golfie = verify.bind(tangon)(option, report);
 207:
            report = new Array(2);
            report[0] = golfie;
            option = _closure1_slot5;
            golfie = _closure1_slot1;
            verify = _closure1_slot2;
            oscard = 24;
            oscard = verify[oscard];
            golfie = golfie.bind(tangon)(oscard);
            oscard = {};
            oscard = option.bind(tangon)(golfie, oscard);
            report[1] = oscard;
            entity['children'] = report;
            entity = zuuluu.bind(tangon)(michal, entity);
            return entity;
        }
    };
    zuuluu['default'] = michal;
    return entity;
})();