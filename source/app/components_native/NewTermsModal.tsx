// app/components_native/NewTermsModal.tsx
export default (function(_, argBar, argBaz, argCorge, __, argFred, argPlugh) {
    report = argBar;
    yankee = argBaz;
    zulu = argFred;
    oscar = argPlugh;
    var _closure1_slot0 = report;
    var _closure1_slot1 = yankee;
    var _closure1_slot2 = oscar;
    entity = function() { // Original name: handleTouch
        mike = _closure1_slot7;
        entity = mike.dismiss;
        entity = entity.bind(mike)();
        entity = undefined;
        return entity;
    };
    var _closure1_slot15 = entity;
    entity = function() { // Original name: handleMoreActions
        verify = _closure1_slot0;
        offset = _closure1_slot2;
        entity = 9;
        mike = offset[entity];
        entity = undefined;
        tango = verify.bind(entity)(mike);
        zulu = tango.showSimpleActionSheet;
        mike = {};
        report = 'NewTermsModalMore';
        mike['key'] = report;
        oscar = {};
        report = 10;
        golf = offset[report];
        golf = verify.bind(entity)(golf);
        options = golf.intl;
        golf = options.string;
        report = offset[report];
        report = verify.bind(entity)(report);
        report = report.t;
        report = report.2jxGen;
        report = golf.bind(options)(report);
        oscar['label'] = report;
        report = true;
        oscar['isDestructive'] = report;
        report = function() { // Original name: onPress
            zulu = _closure1_slot1;
            mike = _closure1_slot2;
            entity = 11;
            mike = mike[entity];
            entity = undefined;
            mike = zulu.bind(entity)(mike);
            entity = mike.logout;
            entity = entity.bind(mike)();
            return entity;
        };
        oscar['onPress'] = report;
        report = new Array(1);
        report[0] = oscar;
        mike['options'] = report;
        mike = zulu.bind(tango)(mike);
        return entity;
    };
    var _closure1_slot16 = entity;
    entity = global;
    options = entity.Object;
    golf = options.defineProperty;
    tango = {};
    entity = true;
    tango['value'] = entity;
    entity = '__esModule';
    entity = golf.bind(options)(zulu, entity, tango);
    entity = 0;
    tango = oscar[entity];
    entity = undefined;
    tango = yankee.bind(entity)(tango);
    var _closure1_slot3 = tango;
    tango = 1;
    tango = oscar[tango];
    tango = yankee.bind(entity)(tango);
    var _closure1_slot4 = tango;
    tango = 2;
    golf = oscar[tango];
    tango = argCorge;
    tango = tango.bind(entity)(golf);
    var _closure1_slot5 = tango;
    tango = 3;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    golf = tango.View;
    var _closure1_slot6 = golf;
    golf = tango.Keyboard;
    var _closure1_slot7 = golf;
    tango = tango.ScrollView;
    var _closure1_slot8 = tango;
    tango = 4;
    tango = oscar[tango];
    tango = yankee.bind(entity)(tango);
    var _closure1_slot9 = tango;
    tango = 5;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    golf = tango.MarketingURLs;
    var _closure1_slot10 = golf;
    tango = tango.UserRequiredActions;
    var _closure1_slot11 = tango;
    tango = 6;
    golf = oscar[tango];
    golf = report.bind(entity)(golf);
    golf = golf.jsx;
    var _closure1_slot12 = golf;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.jsxs;
    var _closure1_slot13 = tango;
    tango = 7;
    tango = oscar[tango];
    options = report.bind(entity)(tango);
    golf = options.createStyles;
    tango = {};
    verify = {'paddingHorizontal': 16, 'flexGrow': 1, 'display': 'flex', 'alignContent': 'center', 'justifyContent': 'center'};
    tango['contentContainer'] = verify;
    verify = {};
    offset = 8;
    romeo = oscar[offset];
    romeo = yankee.bind(entity)(romeo);
    romeo = romeo.colors;
    romeo = romeo.BACKGROUND_PRIMARY;
    verify['backgroundColor'] = romeo;
    tango['container'] = verify;
    verify = {};
    romeo = 24;
    verify['marginTop'] = romeo;
    tango['button'] = verify;
    verify = {'marginTop': 24, 'marginBottom': 24};
    tango['description'] = verify;
    verify = {};
    verify['marginTop'] = romeo;
    tango['agreementDescription'] = verify;
    verify = {'position': 'absolute', 'top': 0, 'right': 0};
    offset = oscar[offset];
    offset = yankee.bind(entity)(offset);
    offset = offset.colors;
    offset = offset.INTERACTIVE_NORMAL;
    verify['tintColor'] = offset;
    tango['navbarRight'] = verify;
    verify = {'height': 120, 'resizeMode': 'contain', 'alignSelf': 'center'};
    tango['headerImage'] = verify;
    tango = golf.bind(options)(tango);
    var _closure1_slot14 = tango;
    tango = 21;
    tango = oscar[tango];
    oscar = report.bind(entity)(tango);
    report = oscar.fileFinishedImporting;
    tango = 'components_native/NewTermsModal.tsx';
    tango = report.bind(oscar)(tango);
    mike = function() { // Original name: NewTermsModal
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            entity = _closure1_slot14;
            report = undefined;
            romeo = entity.bind(report)();
            zulu = _closure1_slot1;
            golf = _closure1_slot2;
            entity = 12;
            entity = golf[entity];
            entity = zulu.bind(report)(entity);
            entity = entity.bind(report)();
            options = entity.bottom;
            verify = entity.top;
            offset = _closure1_slot5;
            tango = offset.useMemo;
            mike = function() {
                mike = _closure1_slot9;
                entity = mike.getAction;
                entity = entity.bind(mike)();
                return entity;
            };
            entity = new Array(0);
            mike = tango.bind(offset)(mike, entity);
            var _closure2_slot0 = mike;
            tango = offset.useState;
            entity = false;
            oscar = tango.bind(offset)(entity);
            tango = _closure1_slot4;
            entity = 2;
            tango = tango.bind(report)(oscar, entity);
            entity = 0;
            result = tango[entity];
            entity = 1;
            entity = tango[entity];
            var _closure2_slot1 = entity;
            oscar = offset.useCallback;
            tango = _closure1_slot3;
            entity = function* () {
                entity = function* () { // Original name: ?anon_0_
                    _fun00003: for(var _fun00004_ip = 0; ; ) switch(_fun00004_ip) {
 0:
                        StartGenerator();
                        ResumeGenerator(result_out_reg=0, return_bool_out_reg=1);
                        if(mike) { _fun00004_ip = 81; continue _fun00003 }
 7:
                        report = _closure2_slot1;
                        zulu = undefined;
                        mike = true;
                        mike = report.bind(zulu)(mike);
                        report = _closure1_slot0;
                        oscar = _closure1_slot2;
                        mike = 13;
                        mike = oscar[mike];
                        report = report.bind(zulu)(mike);
                        mike = report.acceptAgreements;
                        mike = mike.bind(report)();
                        SaveGenerator(address=60);
 58:
                        return mike;
 60:
                        ResumeGenerator(result_out_reg=1, return_bool_out_reg=4);
                        if(report) { _fun00004_ip = 78; continue _fun00003 }
 66:
                        tango = _closure2_slot1;
                        tango = tango.bind(zulu)(mike);
                        return zulu;
 78:
                        return mike;
 81:
                        return entity;
                    }
                };
                return entity;
            };
            tango = tango.bind(report)(entity);
            entity = new Array(0);
            entity = oscar.bind(offset)(tango, entity);
            var _closure2_slot2 = entity;
            entity = 14;
            entity = golf[entity];
            oscar = zulu.bind(report)(entity);
            tango = {};
            zulu = _closure1_slot0;
            entity = 15;
            offset = golf[entity];
            offset = zulu.bind(report)(offset);
            offset = offset.ImpressionTypes;
            offset = offset.VIEW;
            tango['type'] = offset;
            entity = golf[entity];
            entity = zulu.bind(report)(entity);
            entity = entity.ImpressionNames;
            entity = entity.USER_AGREEMENTS;
            tango['name'] = entity;
            entity = {};
            entity['required_action'] = mike;
            tango['properties'] = entity;
            zulu = {};
            entity = new Array(0);
            entity = oscar.bind(report)(tango, zulu, entity);
            entity = null;
            mike = entity == mike;
            if(mike) { _fun00002_ip = 1275; continue _fun00001 }
 264:
            tango = _closure1_slot13;
            zulu = _closure1_slot8;
            mike = {};
            golf = romeo.container;
            oscar = new Array(2);
            oscar[0] = golf;
            golf = {};
            golf['paddingTop'] = verify;
            golf['paddingBottom'] = options;
            oscar[1] = golf;
            mike['style'] = oscar;
            oscar = romeo.contentContainer;
            mike['contentContainerStyle'] = oscar;
            oscar = _closure1_slot15;
            mike['onTouchStart'] = oscar;
            verify = _closure1_slot12;
            foxtrot = _closure1_slot0;
            backup = _closure1_slot2;
            golf = 16;
            oscar = backup[golf];
            oscar = foxtrot.bind(report)(oscar);
            options = oscar.Text;
            oscar = {'maxFontSizeMultiplier': 2, 'variant': 'heading-xxl/bold'};
            offset = 10;
            kilo = backup[offset];
            kilo = foxtrot.bind(report)(kilo);
            echo = kilo.intl;
            sizing = echo.string;
            kilo = backup[offset];
            kilo = foxtrot.bind(report)(kilo);
            kilo = kilo.t;
            kilo = kilo.7glvXl;
            kilo = sizing.bind(echo)(kilo);
            oscar['children'] = kilo;
            options = verify.bind(report)(options, oscar);
            oscar = new Array(9);
            oscar[0] = options;
            options = 17;
            kilo = backup[options];
            kilo = foxtrot.bind(report)(kilo);
            echo = kilo.TextWithIOSLinkWorkaround;
            sizing = {};
            kilo = 'text-md/normal';
            sizing['variant'] = kilo;
            update = romeo.description;
            sizing['style'] = update;
            update = backup[offset];
            update = foxtrot.bind(report)(update);
            vacuum = update.intl;
            control = vacuum.format;
            update = backup[offset];
            update = foxtrot.bind(report)(update);
            update = update.t;
            source = update.zHolhY;
            update = {};
            update = control.bind(vacuum)(source, update);
            sizing['children'] = update;
            sizing = verify.bind(report)(echo, sizing);
            oscar[1] = sizing;
            sizing = backup[options];
            sizing = foxtrot.bind(report)(sizing);
            echo = sizing.TextWithIOSLinkWorkaround;
            sizing = {};
            sizing['variant'] = kilo;
            update = backup[offset];
            update = foxtrot.bind(report)(update);
            sequence = update.intl;
            control = sequence.format;
            update = backup[offset];
            update = foxtrot.bind(report)(update);
            update = update.t;
            source = update.iw0hFh;
            update = {};
            vacuum = _closure1_slot10;
            config = vacuum.TERMS;
            update['url'] = config;
            update = control.bind(sequence)(source, update);
            sizing['children'] = update;
            sizing = verify.bind(report)(echo, sizing);
            oscar[2] = sizing;
            sizing = backup[options];
            sizing = foxtrot.bind(report)(sizing);
            echo = sizing.TextWithIOSLinkWorkaround;
            sizing = {};
            sizing['variant'] = kilo;
            update = backup[offset];
            update = foxtrot.bind(report)(update);
            sequence = update.intl;
            control = sequence.format;
            update = backup[offset];
            update = foxtrot.bind(report)(update);
            update = update.t;
            source = update.36klnJ;
            update = {};
            config = vacuum.PAID_TERMS;
            update['url'] = config;
            update = control.bind(sequence)(source, update);
            sizing['children'] = update;
            sizing = verify.bind(report)(echo, sizing);
            oscar[3] = sizing;
            sizing = backup[options];
            sizing = foxtrot.bind(report)(sizing);
            echo = sizing.TextWithIOSLinkWorkaround;
            sizing = {};
            sizing['variant'] = kilo;
            update = backup[offset];
            update = foxtrot.bind(report)(update);
            sequence = update.intl;
            control = sequence.format;
            update = backup[offset];
            update = foxtrot.bind(report)(update);
            update = update.t;
            source = update.TquFBA;
            update = {};
            config = vacuum.PRIVACY;
            update['url'] = config;
            update = control.bind(sequence)(source, update);
            sizing['children'] = update;
            sizing = verify.bind(report)(echo, sizing);
            oscar[4] = sizing;
            options = backup[options];
            options = foxtrot.bind(report)(options);
            sizing = options.TextWithIOSLinkWorkaround;
            options = {};
            options['variant'] = kilo;
            echo = backup[offset];
            echo = foxtrot.bind(report)(echo);
            control = echo.intl;
            source = control.format;
            echo = backup[offset];
            echo = foxtrot.bind(report)(echo);
            echo = echo.t;
            update = echo.ia96TU;
            echo = {};
            vacuum = vacuum.GUIDELINES;
            echo['url'] = vacuum;
            echo = source.bind(control)(update, echo);
            options['children'] = echo;
            options = verify.bind(report)(sizing, options);
            oscar[5] = options;
            golf = backup[golf];
            golf = foxtrot.bind(report)(golf);
            options = golf.Text;
            golf = {};
            golf['variant'] = kilo;
            kilo = romeo.agreementDescription;
            golf['style'] = kilo;
            kilo = backup[offset];
            kilo = foxtrot.bind(report)(kilo);
            echo = kilo.intl;
            sizing = echo.string;
            kilo = backup[offset];
            kilo = foxtrot.bind(report)(kilo);
            kilo = kilo.t;
            kilo = kilo.+USXQE;
            kilo = sizing.bind(echo)(kilo);
            golf['children'] = kilo;
            golf = verify.bind(report)(options, golf);
            oscar[6] = golf;
            options = _closure1_slot6;
            golf = {};
            kilo = romeo.button;
            golf['style'] = kilo;
            kilo = 18;
            kilo = backup[kilo];
            kilo = foxtrot.bind(report)(kilo);
            sizing = kilo.Button;
            kilo = {};
            kilo['loading'] = result;
            output = function() { // Original name: onPress
                _fun00005: for(var _fun00006_ip = 0; ; ) switch(_fun00006_ip) {
 0:
                    zulu = _closure2_slot0;
                    mike = _closure1_slot11;
                    mike = mike.AGREEMENTS;
                    if(!(zulu === mike)) { _fun00006_ip = 34; continue _fun00005 }
 24:
                    mike = _closure2_slot2;
                    entity = undefined;
                    entity = mike.bind(entity)();
 34:
                    entity = undefined;
                    return entity;
                }
            };
            kilo['onPress'] = output;
            output = backup[offset];
            output = foxtrot.bind(report)(output);
            echo = output.intl;
            result = echo.string;
            output = backup[offset];
            output = foxtrot.bind(report)(output);
            output = output.t;
            output = output.+TBKLy;
            output = result.bind(echo)(output);
            kilo['text'] = output;
            kilo = verify.bind(report)(sizing, kilo);
            golf['children'] = kilo;
            golf = verify.bind(report)(options, golf);
            oscar[7] = golf;
            sizing = _closure1_slot1;
            golf = 19;
            golf = backup[golf];
            options = sizing.bind(report)(golf);
            golf = {};
            kilo = romeo.navbarRight;
            golf['style'] = kilo;
            kilo = 20;
            kilo = backup[kilo];
            kilo = sizing.bind(report)(kilo);
            golf['source'] = kilo;
            romeo = romeo.navbarRight;
            romeo = romeo.tintColor;
            golf['color'] = romeo;
            yankee = _closure1_slot16;
            golf['onPress'] = yankee;
            yankee = 'button';
            golf['accessibilityRole'] = yankee;
            yankee = backup[offset];
            yankee = foxtrot.bind(report)(yankee);
            romeo = yankee.intl;
            yankee = romeo.string;
            offset = backup[offset];
            offset = foxtrot.bind(report)(offset);
            offset = offset.t;
            offset = offset.UKOtz8;
            offset = yankee.bind(romeo)(offset);
            golf['accessibilityLabel'] = offset;
            golf = verify.bind(report)(options, golf);
            oscar[8] = golf;
            mike['children'] = oscar;
            entity = tango.bind(report)(zulu, mike);
 1275:
            return entity;
        }
    };
    zulu['default'] = mike;
    return entity;
})();