// app/components_native/calls/stream/StreamReportProblemActionSheet.tsx
export default (function(argFoo, argBar, argBaz, argCorge, _, argFred, argPlugh) {
    report = argBar;
    yankee = argBaz;
    zulu = argFred;
    oscar = argPlugh;
    var _closure1_slot0 = report;
    var _closure1_slot1 = yankee;
    var _closure1_slot2 = oscar;
    entity = global;
    options = entity.Object;
    golf = options.defineProperty;
    tango = {};
    entity = true;
    tango['value'] = entity;
    entity = '__esModule';
    entity = golf.bind(options)(zulu, entity, tango);
    entity = 0;
    golf = oscar[entity];
    tango = argCorge;
    entity = undefined;
    tango = tango.bind(entity)(golf);
    tango = 1;
    tango = oscar[tango];
    tango = yankee.bind(entity)(tango);
    var _closure1_slot3 = tango;
    tango = 2;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.AnalyticEvents;
    var _closure1_slot4 = tango;
    tango = 3;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.jsx;
    var _closure1_slot5 = tango;
    tango = 4;
    tango = oscar[tango];
    options = report.bind(entity)(tango);
    golf = options.createStyles;
    tango = {};
    verify = {};
    offset = 16;
    verify['padding'] = offset;
    offset = 5;
    offset = oscar[offset];
    offset = yankee.bind(entity)(offset);
    offset = offset.colors;
    offset = offset.BACKGROUND_SECONDARY;
    verify['backgroundColor'] = offset;
    tango['container'] = verify;
    tango = golf.bind(options)(tango);
    var _closure1_slot6 = tango;
    tango = 18;
    tango = oscar[tango];
    oscar = report.bind(entity)(tango);
    report = oscar.fileFinishedImporting;
    tango = 'components_native/calls/stream/StreamReportProblemActionSheet.tsx';
    tango = report.bind(oscar)(tango);
    mike = function(argFoo) { // Original name: ReportProblem
        entity = argFoo;
        zulu = entity.stream;
        var _closure2_slot0 = zulu;
        entity = entity.analyticsData;
        var _closure2_slot1 = entity;
        zulu = _closure1_slot6;
        tango = undefined;
        golf = zulu.bind(tango)();
        report = _closure1_slot1;
        offset = _closure1_slot2;
        zulu = 6;
        zulu = offset[zulu];
        oscar = report.bind(tango)(zulu);
        zulu = function() {
            _fun103617: for(var _fun103617_ip = 0; ; ) switch(_fun103617_ip) {
 0:
                tango = _closure1_slot0;
                report = _closure1_slot2;
                entity = 7;
                zulu = report[entity];
                entity = undefined;
                golf = tango.bind(entity)(zulu);
                tango = golf.getStreamerApplication;
                oscar = _closure2_slot0;
                zulu = _closure1_slot3;
                golf = tango.bind(golf)(oscar, zulu);
                tango = _closure1_slot1;
                zulu = 8;
                zulu = report[zulu];
                report = tango.bind(entity)(zulu);
                tango = report.track;
                mike = _closure1_slot4;
                zulu = mike.OPEN_POPOUT;
                mike = {};
                options = 'Stream Issue Sheet';
                mike['type'] = options;
                oscar = oscar.ownerId;
                mike['other_user_id'] = oscar;
                oscar = null;
                verify = oscar != golf;
                options = null;
                if(!verify) { _fun103617_ip = 118; continue _fun103617 }
 113:
                options = golf.id;
 118:
                mike['application_id'] = options;
                verify = oscar != golf;
                options = null;
                if(!verify) { _fun103617_ip = 137; continue _fun103617 }
 132:
                options = golf.name;
 137:
                mike['application_name'] = options;
                options = oscar != golf;
                oscar = null;
                if(!options) { _fun103617_ip = 156; continue _fun103617 }
 151:
                oscar = golf.id;
 156:
                mike['game_id'] = oscar;
                mike = tango.bind(report)(zulu, mike);
                return entity;
            }
        };
        zulu = oscar.bind(tango)(zulu);
        zulu = 12;
        zulu = offset[zulu];
        report = report.bind(tango)(zulu);
        zulu = false;
        report = report.bind(tango)(zulu, zulu);
        zulu = report.map;
        mike = function(argFoo, argBar) {
            mike = argFoo;
            zulu = mike.value;
            var _closure3_slot0 = zulu;
            oscar = mike.label;
            report = _closure1_slot5;
            zulu = _closure1_slot0;
            tango = _closure1_slot2;
            mike = 13;
            mike = tango[mike];
            tango = undefined;
            mike = zulu.bind(tango)(mike);
            zulu = mike.ActionSheetRow;
            mike = {};
            mike['label'] = oscar;
            oscar = true;
            mike['arrow'] = oscar;
            entity = function() { // Original name: onPress
                mike = _closure3_slot0;
                report = _closure1_slot1;
                tango = _closure1_slot2;
                entity = 9;
                entity = tango[entity];
                zulu = undefined;
                oscar = report.bind(zulu)(entity);
                entity = {};
                entity['problem'] = mike;
                yankee = _closure2_slot0;
                entity['stream'] = yankee;
                mike = '';
                entity['feedback'] = mike;
                mike = _closure1_slot0;
                verify = 7;
                verify = tango[verify];
                offset = mike.bind(zulu)(verify);
                verify = offset.getStreamerApplication;
                options = _closure1_slot3;
                options = verify.bind(offset)(yankee, options);
                entity['streamApplication'] = options;
                golf = _closure2_slot1;
                entity['analyticsData'] = golf;
                golf = 'Stream';
                entity['location'] = golf;
                entity = oscar.bind(zulu)(entity);
                entity = 10;
                entity = tango[entity];
                report = report.bind(zulu)(entity);
                entity = report.hideActionSheet;
                entity = entity.bind(report)();
                entity = 11;
                entity = tango[entity];
                mike = mike.bind(zulu)(entity);
                entity = mike.presentFeedbackSent;
                entity = entity.bind(mike)();
                entity = undefined;
                return entity;
            };
            mike['onPress'] = entity;
            entity = argBar;
            entity = report.bind(tango)(zulu, mike, entity);
            return entity;
        };
        verify = zulu.bind(report)(mike);
        zulu = _closure1_slot5;
        options = _closure1_slot0;
        entity = 14;
        entity = offset[entity];
        entity = options.bind(tango)(entity);
        mike = entity.ActionSheet;
        entity = {};
        report = true;
        entity['scrollable'] = report;
        report = 15;
        report = offset[report];
        report = options.bind(tango)(report);
        oscar = report.BottomSheetTitleHeader;
        report = {};
        yankee = 16;
        romeo = offset[yankee];
        romeo = options.bind(tango)(romeo);
        foxtrot = romeo.intl;
        romeo = foxtrot.string;
        yankee = offset[yankee];
        yankee = options.bind(tango)(yankee);
        yankee = yankee.t;
        yankee = yankee.XuqqwM;
        yankee = romeo.bind(foxtrot)(yankee);
        report['title'] = yankee;
        report = zulu.bind(tango)(oscar, report);
        entity['header'] = report;
        report = 17;
        report = offset[report];
        report = options.bind(tango)(report);
        oscar = report.BottomSheetScrollView;
        report = {};
        golf = golf.container;
        report['style'] = golf;
        golf = 13;
        golf = offset[golf];
        golf = options.bind(tango)(golf);
        golf = golf.ActionSheetRow;
        options = golf.Group;
        golf = {};
        golf['children'] = verify;
        golf = zulu.bind(tango)(options, golf);
        report['children'] = golf;
        report = zulu.bind(tango)(oscar, report);
        entity['children'] = report;
        entity = zulu.bind(tango)(mike, entity);
        return entity;
    };
    zulu['default'] = mike;
    return entity;
})();