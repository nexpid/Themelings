// app/components_native/calls/stream/StreamFullAlert.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    report = argBar;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    entity = argBaz;
    var _closure1_slot1 = entity;
    var _closure1_slot2 = oscard;
    entity = global;
    option = entity.Object;
    golfie = option.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(option)(zuuluu, entity, tangon);
    entity = 0;
    golfie = oscard[entity];
    tangon = argCor;
    entity = undefined;
    tangon = tangon.bind(entity)(golfie);
    tangon = 1;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.Image;
    var _closure1_slot3 = tangon;
    tangon = 2;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.jsx;
    var _closure1_slot4 = tangon;
    tangon = {};
    golfie = {'alignSelf': 'center', 'marginTop': 32};
    tangon['image'] = golfie;
    var _closure1_slot5 = tangon;
    tangon = 6;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'components_native/calls/stream/StreamFullAlert.tsx';
    tangon = report.bind(oscard)(tangon);
    michal = function(argFoo) { // Original name: StreamFullAlert
        tangon = _closure1_slot4;
        verify = _closure1_slot1;
        offset = _closure1_slot2;
        entity = 3;
        entity = offset[entity];
        zuuluu = undefined;
        michal = verify.bind(zuuluu)(entity);
        entity = {};
        foxtra = argFoo;
        backup = entity;
        report = copyDataProperties(backup, foxtra);
        yankee = _closure1_slot0;
        report = 4;
        oscard = offset[report];
        oscard = yankee.bind(zuuluu)(oscard);
        romeon = oscard.intl;
        option = romeon.string;
        oscard = offset[report];
        oscard = yankee.bind(zuuluu)(oscard);
        oscard = oscard.t;
        oscard = oscard.GzjdOz;
        option = option.bind(romeon)(oscard);
        oscard = 'title';
        entity[oscard] = option;
        oscard = offset[report];
        oscard = yankee.bind(zuuluu)(oscard);
        option = oscard.intl;
        oscard = option.string;
        report = offset[report];
        report = yankee.bind(zuuluu)(report);
        report = report.t;
        report = report.VVZDBA;
        oscard = oscard.bind(option)(report);
        report = 'body';
        entity[report] = oscard;
        oscard = _closure1_slot3;
        report = {};
        option = 5;
        option = offset[option];
        option = verify.bind(zuuluu)(option);
        report['source'] = option;
        golfie = _closure1_slot5;
        golfie = golfie.image;
        report['style'] = golfie;
        oscard = tangon.bind(zuuluu)(oscard, report);
        report = 'children';
        entity[report] = oscard;
        entity = tangon.bind(zuuluu)(michal, entity);
        return entity;
    };
    zuuluu['default'] = michal;
    return entity;
})();