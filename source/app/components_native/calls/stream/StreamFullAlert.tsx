// app/components_native/calls/stream/StreamFullAlert.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    report = argBar;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    entity = argBaz;
    var _closure1_slot1 = entity;
    var _closure1_slot2 = oscard;
    entity = global;
    option = entity.Object;
    golfie = option.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(option)(zuuluu, entity, tangon);
    entity = 0;
    golfie = oscard[entity];
    tangon = argCor;
    entity = undefined;
    tangon = tangon.bind(entity)(golfie);
    tangon = 1;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.Image;
    var _closure1_slot3 = tangon;
    tangon = 2;
    golfie = oscard[tangon];
    golfie = report.bind(entity)(golfie);
    golfie = golfie.jsx;
    var _closure1_slot4 = golfie;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.jsxs;
    var _closure1_slot5 = tangon;
    tangon = {};
    golfie = {'alignSelf': 'center', 'marginTop': 32};
    tangon['image'] = golfie;
    golfie = {};
    option = 16;
    golfie['marginTop'] = option;
    tangon['body'] = golfie;
    var _closure1_slot6 = tangon;
    tangon = 9;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'components_native/calls/stream/StreamFullAlert.tsx';
    tangon = report.bind(oscard)(tangon);
    michal = function(argFoo) { // Original name: StreamFullAlert
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            oscard = _closure1_slot0;
            golfie = _closure1_slot2;
            entity = 3;
            entity = golfie[entity];
            tangon = undefined;
            zuuluu = oscard.bind(tangon)(entity);
            michal = zuuluu.useAVErrorExperiment;
            entity = {};
            report = 'StreamWarning';
            entity['location'] = report;
            entity = michal.bind(zuuluu)(entity);
            report = entity.avErrorUIEnabled;
            entity = 4;
            michal = golfie[entity];
            zuuluu = oscard.bind(tangon)(michal);
            michal = zuuluu.getErrorInfo;
            entity = golfie[entity];
            entity = oscard.bind(tangon)(entity);
            entity = entity.AVError;
            entity = entity.STREAM_FULL;
            entity = michal.bind(zuuluu)(entity);
            michal = null;
            michal = michal == entity;
            golfie = undefined;
            if(michal) { _fun00002_ip = 115; continue _fun00001 }
 109:
            golfie = entity.errorCode;
 115:
            kiloes = _closure1_slot0;
            sizing = _closure1_slot2;
            offset = 5;
            entity = sizing[offset];
            entity = kiloes.bind(tangon)(entity);
            oscard = entity.intl;
            zuuluu = oscard.formatToPlainString;
            entity = sizing[offset];
            entity = kiloes.bind(tangon)(entity);
            entity = entity.t;
            michal = entity.ejOT9/;
            entity = {};
            entity['errorCode'] = golfie;
            yankee = zuuluu.bind(oscard)(michal, entity);
            zuuluu = _closure1_slot5;
            michal = _closure1_slot1;
            entity = 6;
            entity = sizing[entity];
            michal = michal.bind(tangon)(entity);
            entity = {};
            output = argFoo;
            result = entity;
            oscard = copyDataProperties(result, output);
            oscard = sizing[offset];
            oscard = kiloes.bind(tangon)(oscard);
            option = oscard.intl;
            golfie = option.string;
            oscard = sizing[offset];
            oscard = kiloes.bind(tangon)(oscard);
            oscard = oscard.t;
            oscard = oscard.GzjdOz;
            golfie = golfie.bind(option)(oscard);
            oscard = 'title';
            entity[oscard] = golfie;
            option = _closure1_slot4;
            romeon = 7;
            oscard = sizing[romeon];
            oscard = kiloes.bind(tangon)(oscard);
            golfie = oscard.Text;
            oscard = {};
            foxtra = 'text-md/normal';
            oscard['variant'] = foxtra;
            foxtra = _closure1_slot6;
            foxtra = foxtra.body;
            oscard['style'] = foxtra;
            foxtra = sizing[offset];
            foxtra = kiloes.bind(tangon)(foxtra);
            backup = foxtra.intl;
            foxtra = backup.string;
            offset = sizing[offset];
            offset = kiloes.bind(tangon)(offset);
            offset = offset.t;
            offset = offset.VVZDBA;
            offset = foxtra.bind(backup)(offset);
            oscard['children'] = offset;
            golfie = option.bind(tangon)(golfie, oscard);
            oscard = new Array(3);
            oscard[0] = golfie;
            if(!report) { _fun00002_ip = 441; continue _fun00001 }
 378:
            offset = _closure1_slot4;
            option = _closure1_slot0;
            golfie = _closure1_slot2;
            golfie = golfie[romeon];
            golfie = option.bind(tangon)(golfie);
            option = golfie.Text;
            golfie = {'variant': 'text-md/normal', 'selectable': true, 'color': 'text-muted'};
            romeon = _closure1_slot6;
            romeon = romeon.body;
            golfie['style'] = romeon;
            golfie['children'] = yankee;
            report = offset.bind(tangon)(option, golfie);
 441:
            oscard[1] = report;
            option = _closure1_slot4;
            golfie = _closure1_slot3;
            report = {};
            yankee = _closure1_slot1;
            romeon = _closure1_slot2;
            offset = 8;
            offset = romeon[offset];
            offset = yankee.bind(tangon)(offset);
            report['source'] = offset;
            verify = _closure1_slot6;
            verify = verify.image;
            report['style'] = verify;
            report = option.bind(tangon)(golfie, report);
            oscard[2] = report;
            report = 'children';
            entity[report] = oscard;
            entity = zuuluu.bind(tangon)(michal, entity);
            return entity;
        }
    };
    zuuluu['default'] = michal;
    return entity;
})();