// app/components_native/RemoteAuthModal.tsx
export default (function(argFoo, argBar, argBaz, argCorge, _, argFred, argPlugh) {
    oscar = argBar;
    kilo = argBaz;
    zulu = argFred;
    golf = argPlugh;
    var _closure1_slot0 = oscar;
    var _closure1_slot1 = kilo;
    var _closure1_slot2 = golf;
    entity = function(argFoo) { // Original name: RemoteAuthBody
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            entity = argFoo;
            yankee = entity.remoteAuthFingerprint;
            var _closure2_slot0 = yankee;
            report = _closure1_slot4;
            tango = report.useState;
            mike = _closure1_slot14;
            mike = mike.LOADING;
            report = tango.bind(report)(mike);
            mike = _closure1_slot3;
            tango = undefined;
            offset = 2;
            mike = mike.bind(tango)(report, offset);
            options = 0;
            report = mike[options];
            golf = 1;
            mike = mike[golf];
            var _closure2_slot1 = mike;
            verify = _closure1_slot4;
            oscar = verify.useState;
            mike = null;
            verify = oscar.bind(verify)(mike);
            oscar = _closure1_slot3;
            oscar = oscar.bind(tango)(verify, offset);
            options = oscar[options];
            oscar = oscar[golf];
            var _closure2_slot2 = oscar;
            golf = function(argFoo) { // Original name: transitionStep
                zulu = _closure2_slot1;
                entity = undefined;
                mike = argFoo;
                mike = zulu.bind(entity)(mike);
                zulu = _closure1_slot0;
                tango = _closure1_slot2;
                mike = 10;
                mike = tango[mike];
                zulu = zulu.bind(entity)(mike);
                mike = zulu.DeprecatedLayoutAnimation;
                mike = mike.bind(zulu)();
                return entity;
            };
            var _closure2_slot3 = golf;
            offset = _closure1_slot4;
            verify = offset.useEffect;
            oscar = new Array(1);
            oscar[0] = yankee;
            zulu = function() {
                tango = _closure1_slot0;
                zulu = _closure1_slot2;
                entity = 11;
                zulu = zulu[entity];
                entity = undefined;
                zulu = tango.bind(entity)(zulu);
                report = zulu.HTTP;
                tango = report.post;
                zulu = {};
                oscar = _closure1_slot9;
                oscar = oscar.REMOTE_AUTH_INITIALIZE;
                zulu['url'] = oscar;
                oscar = {};
                golf = _closure2_slot0;
                oscar['fingerprint'] = golf;
                zulu['body'] = oscar;
                oscar = true;
                zulu['oldFormErrors'] = oscar;
                zulu['rejectWithError'] = oscar;
                report = tango.bind(report)(zulu);
                tango = report.then;
                zulu = function(argFoo) {
                    tango = _closure2_slot2;
                    entity = argFoo;
                    entity = entity.body;
                    zulu = entity.handshake_token;
                    entity = undefined;
                    zulu = tango.bind(entity)(zulu);
                    zulu = _closure2_slot3;
                    mike = _closure1_slot14;
                    mike = mike.LOADED;
                    mike = zulu.bind(entity)(mike);
                    return entity;
                };
                tango = tango.bind(report)(zulu);
                zulu = tango.catch;
                mike = function() {
                    zulu = _closure2_slot3;
                    entity = _closure1_slot14;
                    mike = entity.NOT_FOUND;
                    entity = undefined;
                    mike = zulu.bind(entity)(mike);
                    return entity;
                };
                mike = zulu.bind(tango)(mike);
                return entity;
            };
            zulu = verify.bind(offset)(zulu, oscar);
            zulu = _closure1_slot14;
            zulu = zulu.LOADING;
            if(!(zulu !== report)) { _fun00002_ip = 294; continue _fun00001 }
 170:
            zulu = _closure1_slot14;
            zulu = zulu.LOADED;
            if(!(zulu !== report)) { _fun00002_ip = 244; continue _fun00001 }
 184:
            zulu = _closure1_slot14;
            zulu = zulu.SUCCEEDED;
            if(!(zulu !== report)) { _fun00002_ip = 226; continue _fun00001 }
 198:
            zulu = _closure1_slot14;
            zulu = zulu.NOT_FOUND;
            oscar = _closure1_slot10;
            report = _closure1_slot19;
            zulu = {};
            zulu = oscar.bind(tango)(report, zulu);
            return zulu;
 226:
            oscar = _closure1_slot10;
            report = _closure1_slot18;
            zulu = {};
            zulu = oscar.bind(tango)(report, zulu);
            return zulu;
 244:
            if(!(mike == options)) { _fun00002_ip = 266; continue _fun00001 }
 248:
            report = _closure1_slot10;
            zulu = _closure1_slot19;
            mike = {};
            mike = report.bind(tango)(zulu, mike);
            _fun00002_ip = 292; continue _fun00001;
 266:
            oscar = _closure1_slot10;
            report = _closure1_slot16;
            zulu = {};
            zulu['handshakeToken'] = options;
            zulu['setAuthStep'] = golf;
            mike = oscar.bind(tango)(report, zulu);
 292:
            return mike;
 294:
            zulu = _closure1_slot10;
            mike = _closure1_slot20;
            entity = {};
            entity = zulu.bind(tango)(mike, entity);
            return entity;
        }
    };
    var _closure1_slot15 = entity;
    entity = function(argFoo) { // Original name: ExperimentConnectedRemoteAuthLogin
        _fun00003: for(var _fun00004_ip = 0; ; ) switch(_fun00004_ip) {
 0:
            zulu = _closure1_slot1;
            tango = _closure1_slot2;
            mike = 12;
            mike = tango[mike];
            tango = undefined;
            oscar = zulu.bind(tango)(mike);
            report = oscar.useExperiment;
            zulu = {};
            mike = '204185_1';
            zulu['location'] = mike;
            mike = {};
            golf = false;
            mike['autoTrackExposure'] = golf;
            mike = report.bind(oscar)(zulu, mike);
            mike = mike.showDelayedLogin;
            zulu = _closure1_slot10;
            if(mike) { _fun00004_ip = 77; continue _fun00003 }
 71:
            mike = _closure1_slot17;
            _fun00004_ip = 97; continue _fun00003;
 77:
            report = _closure1_slot1;
            oscar = _closure1_slot2;
            entity = 13;
            entity = oscar[entity];
            mike = report.bind(tango)(entity);
 97:
            entity = {};
            options = argFoo;
            verify = entity;
            report = copyDataProperties(verify, options);
            entity = zulu.bind(tango)(mike, entity);
            return entity;
        }
    };
    var _closure1_slot16 = entity;
    entity = function(argFoo) { // Original name: RemoteAuthLogin
        _fun00005: for(var _fun00006_ip = 0; ; ) switch(_fun00006_ip) {
 0:
            entity = argFoo;
            mike = entity.handshakeToken;
            var _closure2_slot0 = mike;
            entity = entity.setAuthStep;
            var _closure2_slot1 = entity;
            entity = _closure1_slot13;
            tango = undefined;
            romeo = entity.bind(tango)();
            mike = _closure1_slot4;
            entity = mike.useState;
            golf = false;
            mike = entity.bind(mike)(golf);
            entity = _closure1_slot3;
            oscar = 2;
            entity = entity.bind(tango)(mike, oscar);
            zulu = 0;
            echo = entity[zulu];
            mike = 1;
            result = entity[mike];
            report = _closure1_slot4;
            entity = report.useState;
            report = entity.bind(report)(golf);
            entity = _closure1_slot3;
            entity = entity.bind(tango)(report, oscar);
            offset = entity[zulu];
            entity = entity[mike];
            var _closure2_slot2 = entity;
            report = _closure1_slot4;
            entity = report.useState;
            report = entity.bind(report)(golf);
            entity = _closure1_slot3;
            entity = entity.bind(tango)(report, oscar);
            kilo = entity[zulu];
            entity = entity[mike];
            var _closure2_slot3 = entity;
            report = _closure1_slot4;
            zulu = report.useEffect;
            mike = function() {
                mike = global;
                report = mike.setTimeout;
                tango = undefined;
                zulu = function() {
                    zulu = _closure2_slot2;
                    entity = undefined;
                    mike = true;
                    mike = zulu.bind(entity)(mike);
                    return entity;
                };
                mike = 1000;
                mike = report.bind(tango)(zulu, mike);
                var _closure3_slot0 = mike;
                entity = function() {
                    entity = global;
                    zulu = entity.clearTimeout;
                    mike = _closure3_slot0;
                    entity = undefined;
                    entity = zulu.bind(entity)(mike);
                    return entity;
                };
                return entity;
            };
            entity = new Array(0);
            entity = zulu.bind(report)(mike, entity);
            golf = _closure1_slot1;
            output = _closure1_slot2;
            entity = 14;
            entity = output[entity];
            oscar = golf.bind(tango)(entity);
            report = oscar.throttle;
            zulu = function() {
                zulu = _closure2_slot3;
                entity = undefined;
                oscar = true;
                zulu = zulu.bind(entity)(oscar);
                tango = _closure1_slot0;
                report = _closure1_slot2;
                zulu = 11;
                zulu = report[zulu];
                zulu = tango.bind(entity)(zulu);
                report = zulu.HTTP;
                tango = report.post;
                zulu = {};
                golf = _closure1_slot9;
                golf = golf.REMOTE_AUTH_FINISH;
                zulu['url'] = golf;
                golf = {};
                options = _closure2_slot0;
                golf['handshake_token'] = options;
                options = false;
                golf['temporary_token'] = options;
                zulu['body'] = golf;
                zulu['oldFormErrors'] = oscar;
                zulu['rejectWithError'] = oscar;
                report = tango.bind(report)(zulu);
                tango = report.then;
                zulu = function() {
                    zulu = _closure2_slot1;
                    entity = _closure1_slot14;
                    mike = entity.SUCCEEDED;
                    entity = undefined;
                    mike = zulu.bind(entity)(mike);
                    return entity;
                };
                tango = tango.bind(report)(zulu);
                zulu = tango.catch;
                mike = function() {
                    zulu = _closure2_slot1;
                    entity = _closure1_slot14;
                    mike = entity.NOT_FOUND;
                    entity = undefined;
                    mike = zulu.bind(entity)(mike);
                    return entity;
                };
                mike = zulu.bind(tango)(mike);
                return entity;
            };
            mike = 1000;
            entity = {'leading': true, 'trailing': false};
            sizing = report.bind(oscar)(zulu, mike, entity);
            zulu = _closure1_slot11;
            mike = _closure1_slot12;
            entity = {};
            options = _closure1_slot10;
            oscar = _closure1_slot6;
            report = {};
            foxtrot = 15;
            foxtrot = output[foxtrot];
            foxtrot = golf.bind(tango)(foxtrot);
            report['source'] = foxtrot;
            foxtrot = romeo.mainImage;
            report['style'] = foxtrot;
            oscar = options.bind(tango)(oscar, report);
            report = new Array(6);
            report[0] = oscar;
            foxtrot = _closure1_slot10;
            update = _closure1_slot0;
            oscar = 16;
            oscar = output[oscar];
            oscar = update.bind(tango)(oscar);
            options = oscar.Text;
            oscar = {};
            backup = romeo.header;
            oscar['style'] = backup;
            backup = 'heading-xl/extrabold';
            oscar['variant'] = backup;
            backup = 17;
            source = output[backup];
            source = update.bind(tango)(source);
            vacuum = source.intl;
            control = vacuum.string;
            source = output[backup];
            source = update.bind(tango)(source);
            source = source.t;
            source = source.jD2pqK;
            source = control.bind(vacuum)(source);
            oscar['children'] = source;
            oscar = foxtrot.bind(tango)(options, oscar);
            report[1] = oscar;
            foxtrot = _closure1_slot10;
            oscar = 18;
            oscar = output[oscar];
            oscar = update.bind(tango)(oscar);
            options = oscar.LegacyText;
            oscar = {};
            source = romeo.warningCaption;
            oscar['style'] = source;
            source = output[backup];
            source = update.bind(tango)(source);
            vacuum = source.intl;
            control = vacuum.string;
            source = output[backup];
            source = update.bind(tango)(source);
            source = source.t;
            source = source.hcd/kp;
            source = control.bind(vacuum)(source);
            oscar['children'] = source;
            oscar = foxtrot.bind(tango)(options, oscar);
            report[2] = oscar;
            foxtrot = _closure1_slot10;
            oscar = 19;
            oscar = output[oscar];
            oscar = update.bind(tango)(oscar);
            options = oscar.FormSwitchRow;
            oscar = {};
            source = output[backup];
            source = update.bind(tango)(source);
            vacuum = source.intl;
            control = vacuum.string;
            source = output[backup];
            source = update.bind(tango)(source);
            source = source.t;
            source = source.UpAoQk;
            source = control.bind(vacuum)(source);
            oscar['label'] = source;
            source = romeo.temporaryToggle;
            oscar['DEPRECATED_style'] = source;
            oscar['value'] = echo;
            oscar['onValueChange'] = result;
            oscar = foxtrot.bind(tango)(options, oscar);
            report[3] = oscar;
            options = _closure1_slot10;
            foxtrot = 20;
            oscar = output[foxtrot];
            golf = golf.bind(tango)(oscar);
            oscar = {};
            echo = romeo.button;
            result = new Array(2);
            result[0] = echo;
            echo = romeo.loginButton;
            result[1] = echo;
            oscar['style'] = result;
            result = output[backup];
            result = update.bind(tango)(result);
            echo = result.intl;
            result = echo.string;
            output = output[backup];
            output = update.bind(tango)(output);
            output = output.t;
            output = output.N3qV8f;
            output = result.bind(echo)(output);
            oscar['text'] = output;
            oscar['onPress'] = sizing;
            offset = !offset;
            if(!offset) { _fun00006_ip = 702; continue _fun00005 }
 699:
            offset = !kilo;
 702:
            oscar['disabled'] = offset;
            oscar = options.bind(tango)(golf, oscar);
            report[4] = oscar;
            options = _closure1_slot10;
            kilo = _closure1_slot1;
            offset = _closure1_slot2;
            oscar = offset[foxtrot];
            golf = kilo.bind(tango)(oscar);
            oscar = {};
            foxtrot = offset[foxtrot];
            foxtrot = kilo.bind(tango)(foxtrot);
            foxtrot = foxtrot.Colors;
            foxtrot = foxtrot.TRANSPARENT;
            oscar['color'] = foxtrot;
            romeo = romeo.button;
            oscar['style'] = romeo;
            foxtrot = _closure1_slot0;
            yankee = offset[backup];
            yankee = foxtrot.bind(tango)(yankee);
            romeo = yankee.intl;
            yankee = romeo.string;
            offset = offset[backup];
            offset = foxtrot.bind(tango)(offset);
            offset = offset.t;
            offset = offset.ETE/oK;
            offset = yankee.bind(romeo)(offset);
            oscar['text'] = offset;
            verify = function() { // Original name: onPress
                report = _closure1_slot0;
                tango = _closure1_slot2;
                entity = 11;
                zulu = tango[entity];
                entity = undefined;
                zulu = report.bind(entity)(zulu);
                oscar = zulu.HTTP;
                report = oscar.post;
                zulu = {};
                golf = _closure1_slot9;
                golf = golf.REMOTE_AUTH_CANCEL;
                zulu['url'] = golf;
                golf = {};
                options = _closure2_slot0;
                golf['handshake_token'] = options;
                zulu['body'] = golf;
                golf = true;
                zulu['oldFormErrors'] = golf;
                zulu['rejectWithError'] = golf;
                zulu = report.bind(oscar)(zulu);
                zulu = _closure1_slot1;
                mike = 21;
                mike = tango[mike];
                zulu = zulu.bind(entity)(mike);
                mike = zulu.pop;
                mike = mike.bind(zulu)();
                return entity;
            };
            oscar['onPress'] = verify;
            oscar = options.bind(tango)(golf, oscar);
            report[5] = oscar;
            entity['children'] = report;
            entity = zulu.bind(tango)(mike, entity);
            return entity;
        }
    };
    var _closure1_slot17 = entity;
    entity = function() { // Original name: RemoteAuthLoginSucceeded
        entity = _closure1_slot13;
        tango = undefined;
        romeo = entity.bind(tango)();
        zulu = _closure1_slot11;
        mike = _closure1_slot12;
        entity = {};
        options = _closure1_slot10;
        golf = _closure1_slot6;
        report = {};
        offset = _closure1_slot1;
        yankee = _closure1_slot2;
        verify = 22;
        verify = yankee[verify];
        verify = offset.bind(tango)(verify);
        report['source'] = verify;
        verify = romeo.mainImage;
        report['style'] = verify;
        golf = options.bind(tango)(golf, report);
        report = new Array(4);
        report[0] = golf;
        kilo = _closure1_slot10;
        backup = _closure1_slot0;
        golf = 16;
        options = yankee[golf];
        options = backup.bind(tango)(options);
        foxtrot = options.Text;
        options = {};
        verify = romeo.header;
        options['style'] = verify;
        verify = 'heading-xl/extrabold';
        options['variant'] = verify;
        verify = 17;
        sizing = yankee[verify];
        sizing = backup.bind(tango)(sizing);
        result = sizing.intl;
        output = result.string;
        sizing = yankee[verify];
        sizing = backup.bind(tango)(sizing);
        sizing = sizing.t;
        sizing = sizing.up6YpK;
        sizing = output.bind(result)(sizing);
        options['children'] = sizing;
        options = kilo.bind(tango)(foxtrot, options);
        report[1] = options;
        foxtrot = _closure1_slot10;
        golf = yankee[golf];
        golf = backup.bind(tango)(golf);
        options = golf.Text;
        golf = {'style': null, 'variant': 'text-md/medium', 'color': 'text-muted'};
        kilo = romeo.caption;
        golf['style'] = kilo;
        kilo = yankee[verify];
        kilo = backup.bind(tango)(kilo);
        output = kilo.intl;
        sizing = output.string;
        kilo = yankee[verify];
        kilo = backup.bind(tango)(kilo);
        kilo = kilo.t;
        kilo = kilo.Lb3Boq;
        kilo = sizing.bind(output)(kilo);
        golf['children'] = kilo;
        golf = foxtrot.bind(tango)(options, golf);
        report[2] = golf;
        options = _closure1_slot10;
        oscar = 20;
        oscar = yankee[oscar];
        golf = offset.bind(tango)(oscar);
        oscar = {};
        romeo = romeo.button;
        oscar['style'] = romeo;
        romeo = yankee[verify];
        romeo = backup.bind(tango)(romeo);
        foxtrot = romeo.intl;
        romeo = foxtrot.string;
        verify = yankee[verify];
        verify = backup.bind(tango)(verify);
        verify = verify.t;
        verify = verify.pYWLAw;
        verify = romeo.bind(foxtrot)(verify);
        oscar['text'] = verify;
        verify = 21;
        verify = yankee[verify];
        verify = offset.bind(tango)(verify);
        verify = verify.pop;
        oscar['onPress'] = verify;
        oscar = options.bind(tango)(golf, oscar);
        report[3] = oscar;
        entity['children'] = report;
        entity = zulu.bind(tango)(mike, entity);
        return entity;
    };
    var _closure1_slot18 = entity;
    entity = function() { // Original name: RemoteAuthNotFound
        entity = _closure1_slot13;
        tango = undefined;
        romeo = entity.bind(tango)();
        zulu = _closure1_slot11;
        mike = _closure1_slot12;
        entity = {};
        options = _closure1_slot10;
        golf = _closure1_slot6;
        report = {};
        offset = _closure1_slot1;
        yankee = _closure1_slot2;
        verify = 23;
        verify = yankee[verify];
        verify = offset.bind(tango)(verify);
        report['source'] = verify;
        verify = romeo.mainImage;
        report['style'] = verify;
        golf = options.bind(tango)(golf, report);
        report = new Array(4);
        report[0] = golf;
        kilo = _closure1_slot10;
        backup = _closure1_slot0;
        golf = 16;
        options = yankee[golf];
        options = backup.bind(tango)(options);
        foxtrot = options.Text;
        options = {};
        verify = romeo.header;
        options['style'] = verify;
        verify = 'heading-xl/extrabold';
        options['variant'] = verify;
        verify = 17;
        sizing = yankee[verify];
        sizing = backup.bind(tango)(sizing);
        result = sizing.intl;
        output = result.string;
        sizing = yankee[verify];
        sizing = backup.bind(tango)(sizing);
        sizing = sizing.t;
        sizing = sizing.HEZYRU;
        sizing = output.bind(result)(sizing);
        options['children'] = sizing;
        options = kilo.bind(tango)(foxtrot, options);
        report[1] = options;
        foxtrot = _closure1_slot10;
        golf = yankee[golf];
        golf = backup.bind(tango)(golf);
        options = golf.Text;
        golf = {'style': null, 'variant': 'text-md/medium', 'color': 'text-muted'};
        kilo = romeo.caption;
        golf['style'] = kilo;
        kilo = yankee[verify];
        kilo = backup.bind(tango)(kilo);
        output = kilo.intl;
        sizing = output.string;
        kilo = yankee[verify];
        kilo = backup.bind(tango)(kilo);
        kilo = kilo.t;
        kilo = kilo.qW4FVl;
        kilo = sizing.bind(output)(kilo);
        golf['children'] = kilo;
        golf = foxtrot.bind(tango)(options, golf);
        report[2] = golf;
        options = _closure1_slot10;
        oscar = 20;
        oscar = yankee[oscar];
        golf = offset.bind(tango)(oscar);
        oscar = {};
        romeo = romeo.button;
        oscar['style'] = romeo;
        romeo = yankee[verify];
        romeo = backup.bind(tango)(romeo);
        foxtrot = romeo.intl;
        romeo = foxtrot.string;
        verify = yankee[verify];
        verify = backup.bind(tango)(verify);
        verify = verify.t;
        verify = verify.ETE/oK;
        verify = romeo.bind(foxtrot)(verify);
        oscar['text'] = verify;
        verify = 21;
        verify = yankee[verify];
        verify = offset.bind(tango)(verify);
        verify = verify.pop;
        oscar['onPress'] = verify;
        oscar = options.bind(tango)(golf, oscar);
        report[3] = oscar;
        entity['children'] = report;
        entity = zulu.bind(tango)(mike, entity);
        return entity;
    };
    var _closure1_slot19 = entity;
    entity = function() { // Original name: RemoteAuthLoading
        entity = _closure1_slot13;
        tango = undefined;
        golf = entity.bind(tango)();
        zulu = _closure1_slot10;
        mike = _closure1_slot12;
        entity = {};
        oscar = _closure1_slot7;
        report = {};
        golf = golf.loadingContainer;
        report['style'] = golf;
        verify = _closure1_slot10;
        options = _closure1_slot8;
        golf = {'animating': true, 'color': null, 'size': 'large'};
        yankee = _closure1_slot1;
        romeo = _closure1_slot2;
        offset = 6;
        offset = romeo[offset];
        offset = yankee.bind(tango)(offset);
        offset = offset.unsafe_rawColors;
        offset = offset.BRAND_500;
        golf['color'] = offset;
        golf = verify.bind(tango)(options, golf);
        report['children'] = golf;
        report = zulu.bind(tango)(oscar, report);
        entity['children'] = report;
        entity = zulu.bind(tango)(mike, entity);
        return entity;
    };
    var _closure1_slot20 = entity;
    entity = global;
    options = entity.Object;
    report = options.defineProperty;
    mike = {};
    entity = true;
    mike['value'] = entity;
    entity = '__esModule';
    entity = report.bind(options)(zulu, entity, mike);
    yankee = 0;
    mike = golf[yankee];
    entity = undefined;
    mike = kilo.bind(entity)(mike);
    var _closure1_slot3 = mike;
    offset = 1;
    report = golf[offset];
    mike = argCorge;
    mike = mike.bind(entity)(report);
    var _closure1_slot4 = mike;
    verify = 2;
    mike = golf[verify];
    mike = oscar.bind(entity)(mike);
    report = mike.ImageBackground;
    var _closure1_slot5 = report;
    report = mike.Image;
    var _closure1_slot6 = report;
    report = mike.View;
    var _closure1_slot7 = report;
    mike = mike.ActivityIndicator;
    var _closure1_slot8 = mike;
    options = 3;
    mike = golf[options];
    mike = oscar.bind(entity)(mike);
    mike = mike.Endpoints;
    var _closure1_slot9 = mike;
    mike = 4;
    report = golf[mike];
    report = oscar.bind(entity)(report);
    report = report.jsx;
    var _closure1_slot10 = report;
    report = golf[mike];
    report = oscar.bind(entity)(report);
    report = report.jsxs;
    var _closure1_slot11 = report;
    mike = golf[mike];
    mike = oscar.bind(entity)(mike);
    mike = mike.Fragment;
    var _closure1_slot12 = mike;
    mike = 5;
    mike = golf[mike];
    romeo = oscar.bind(entity)(mike);
    report = romeo.createStyles;
    mike = {};
    foxtrot = {'width': '100%', 'height': '100%'};
    mike['background'] = foxtrot;
    backup = 'center';
    foxtrot = {'flex': 1, 'alignItems': 'stretch', 'alignContent': 'center'};
    mike['container'] = foxtrot;
    foxtrot = {};
    sizing = 'cover';
    foxtrot['resizeMode'] = sizing;
    mike['imageStyle'] = foxtrot;
    sizing = 32;
    foxtrot = {'position': 'absolute', 'top': 16, 'alignSelf': 'center', 'width': 32, 'height': 32};
    mike['logo'] = foxtrot;
    foxtrot = {'marginTop': 16, 'marginBottom': 32};
    mike['mainImage'] = foxtrot;
    foxtrot = {};
    foxtrot['textAlign'] = backup;
    mike['header'] = foxtrot;
    foxtrot = {'fontSize': 16, 'lineHeight': 20, 'color': null, 'textAlign': 'center', 'marginTop': 8, 'marginBottom': 32};
    backup = 6;
    output = golf[backup];
    output = kilo.bind(entity)(output);
    output = output.unsafe_rawColors;
    output = output.RED_400;
    foxtrot['color'] = output;
    output = 8;
    mike['warningCaption'] = foxtrot;
    foxtrot = {'lineHeight': 20, 'textAlign': 'center', 'marginTop': 8, 'marginBottom': 32};
    mike['caption'] = foxtrot;
    foxtrot = {'display': 'flex', 'flexDirection': 'column', 'alignItems': 'center', 'backgroundColor': null, 'marginTop': 'auto', 'marginBottom': 'auto', 'marginLeft': 16, 'marginRight': 16, 'borderRadius': null, 'padding': 16, 'shadowColor': null, 'shadowOpacity': 0.16, 'shadowRadius': 2};
    result = golf[backup];
    result = kilo.bind(entity)(result);
    result = result.colors;
    result = result.BACKGROUND_PRIMARY;
    foxtrot['backgroundColor'] = result;
    result = golf[backup];
    result = kilo.bind(entity)(result);
    result = result.radii;
    result = result.sm;
    foxtrot['borderRadius'] = result;
    result = golf[backup];
    result = kilo.bind(entity)(result);
    result = result.colors;
    result = result.BLACK;
    foxtrot['shadowColor'] = result;
    result = {'height': 2, 'width': 0};
    foxtrot['shadowOffset'] = result;
    mike['mainCard'] = foxtrot;
    foxtrot = {};
    foxtrot['flexGrow'] = yankee;
    mike['button'] = foxtrot;
    foxtrot = {};
    foxtrot['marginBottom'] = output;
    mike['loginButton'] = foxtrot;
    foxtrot = {};
    output = golf[backup];
    output = kilo.bind(entity)(output);
    output = output.radii;
    output = output.xs;
    foxtrot['borderRadius'] = output;
    foxtrot['marginBottom'] = sizing;
    backup = golf[backup];
    backup = kilo.bind(entity)(backup);
    backup = backup.colors;
    backup = backup.BACKGROUND_SECONDARY;
    foxtrot['backgroundColor'] = backup;
    backup = 'none';
    foxtrot['display'] = backup;
    mike['temporaryToggle'] = foxtrot;
    foxtrot = {'height': 300, 'justifyContent': 'center'};
    mike['loadingContainer'] = foxtrot;
    mike = report.bind(romeo)(mike);
    var _closure1_slot13 = mike;
    mike = {};
    mike['LOADING'] = yankee;
    report = 'LOADING';
    mike[yankee] = report;
    mike['NOT_FOUND'] = offset;
    report = 'NOT_FOUND';
    mike[offset] = report;
    mike['LOADED'] = verify;
    report = 'LOADED';
    mike[verify] = report;
    mike['SUCCEEDED'] = options;
    report = 'SUCCEEDED';
    mike[options] = report;
    var _closure1_slot14 = mike;
    report = 24;
    report = golf[report];
    golf = oscar.bind(entity)(report);
    oscar = golf.fileFinishedImporting;
    report = 'components_native/RemoteAuthModal.tsx';
    report = oscar.bind(golf)(report);
    tango = function(argFoo) { // Original name: RemoteAuth
        entity = _closure1_slot13;
        tango = undefined;
        foxtrot = entity.bind(tango)();
        verify = _closure1_slot1;
        offset = _closure1_slot2;
        entity = 7;
        entity = offset[entity];
        entity = verify.bind(tango)(entity);
        entity = entity.bind(tango)();
        backup = entity.top;
        zulu = _closure1_slot11;
        mike = _closure1_slot5;
        entity = {};
        report = 8;
        report = offset[report];
        report = verify.bind(tango)(report);
        entity['source'] = report;
        report = foxtrot.imageStyle;
        entity['imageStyle'] = report;
        report = foxtrot.background;
        entity['style'] = report;
        golf = _closure1_slot10;
        oscar = _closure1_slot6;
        report = {};
        yankee = foxtrot.logo;
        options = new Array(2);
        options[0] = yankee;
        yankee = {};
        yankee['marginTop'] = backup;
        options[1] = yankee;
        report['style'] = options;
        options = 9;
        options = offset[options];
        options = verify.bind(tango)(options);
        report['source'] = options;
        oscar = golf.bind(tango)(oscar, report);
        report = new Array(2);
        report[0] = oscar;
        options = _closure1_slot10;
        golf = _closure1_slot7;
        oscar = {};
        verify = foxtrot.container;
        oscar['style'] = verify;
        yankee = _closure1_slot10;
        offset = _closure1_slot7;
        verify = {};
        foxtrot = foxtrot.mainCard;
        verify['style'] = foxtrot;
        backup = _closure1_slot10;
        foxtrot = _closure1_slot15;
        romeo = {};
        sizing = argFoo;
        output = romeo;
        kilo = copyDataProperties(output, sizing);
        romeo = backup.bind(tango)(foxtrot, romeo);
        verify['children'] = romeo;
        verify = yankee.bind(tango)(offset, verify);
        oscar['children'] = verify;
        oscar = options.bind(tango)(golf, oscar);
        report[1] = oscar;
        entity['children'] = report;
        entity = zulu.bind(tango)(mike, entity);
        return entity;
    };
    zulu['default'] = tango;
    zulu['RemoteAuthSteps'] = mike;
    return entity;
})();