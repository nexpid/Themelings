// app/components_native/RemoteAuthModal.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    oscard = argBar;
    kiloes = argBaz;
    zuuluu = argFre;
    golfie = argPlu;
    var _closure1_slot0 = oscard;
    var _closure1_slot1 = kiloes;
    var _closure1_slot2 = golfie;
    entity = function(argFoo) { // Original name: RemoteAuthBody
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            entity = argFoo;
            yankee = entity.remoteAuthFingerprint;
            var _closure2_slot0 = yankee;
            report = _closure1_slot4;
            tangon = report.useState;
            michal = _closure1_slot14;
            michal = michal.LOADING;
            report = tangon.bind(report)(michal);
            michal = _closure1_slot3;
            tangon = undefined;
            offset = 2;
            michal = michal.bind(tangon)(report, offset);
            option = 0;
            report = michal[option];
            golfie = 1;
            michal = michal[golfie];
            var _closure2_slot1 = michal;
            verify = _closure1_slot4;
            oscard = verify.useState;
            michal = null;
            verify = oscard.bind(verify)(michal);
            oscard = _closure1_slot3;
            oscard = oscard.bind(tangon)(verify, offset);
            option = oscard[option];
            oscard = oscard[golfie];
            var _closure2_slot2 = oscard;
            golfie = function(argFoo) { // Original name: transitionStep
                zuuluu = _closure2_slot1;
                entity = undefined;
                michal = argFoo;
                michal = zuuluu.bind(entity)(michal);
                zuuluu = _closure1_slot0;
                tangon = _closure1_slot2;
                michal = 10;
                michal = tangon[michal];
                zuuluu = zuuluu.bind(entity)(michal);
                michal = zuuluu.DeprecatedLayoutAnimation;
                michal = michal.bind(zuuluu)();
                return entity;
            };
            var _closure2_slot3 = golfie;
            offset = _closure1_slot4;
            verify = offset.useEffect;
            oscard = new Array(1);
            oscard[0] = yankee;
            zuuluu = function() {
                tangon = _closure1_slot0;
                zuuluu = _closure1_slot2;
                entity = 11;
                zuuluu = zuuluu[entity];
                entity = undefined;
                zuuluu = tangon.bind(entity)(zuuluu);
                report = zuuluu.HTTP;
                tangon = report.post;
                zuuluu = {};
                oscard = _closure1_slot9;
                oscard = oscard.REMOTE_AUTH_INITIALIZE;
                zuuluu['url'] = oscard;
                oscard = {};
                golfie = _closure2_slot0;
                oscard['fingerprint'] = golfie;
                zuuluu['body'] = oscard;
                oscard = true;
                zuuluu['oldFormErrors'] = oscard;
                zuuluu['rejectWithError'] = oscard;
                report = tangon.bind(report)(zuuluu);
                tangon = report.then;
                zuuluu = function(argFoo) {
                    tangon = _closure2_slot2;
                    entity = argFoo;
                    entity = entity.body;
                    zuuluu = entity.handshake_token;
                    entity = undefined;
                    zuuluu = tangon.bind(entity)(zuuluu);
                    zuuluu = _closure2_slot3;
                    michal = _closure1_slot14;
                    michal = michal.LOADED;
                    michal = zuuluu.bind(entity)(michal);
                    return entity;
                };
                tangon = tangon.bind(report)(zuuluu);
                zuuluu = tangon.catch;
                michal = function() {
                    zuuluu = _closure2_slot3;
                    entity = _closure1_slot14;
                    michal = entity.NOT_FOUND;
                    entity = undefined;
                    michal = zuuluu.bind(entity)(michal);
                    return entity;
                };
                michal = zuuluu.bind(tangon)(michal);
                return entity;
            };
            zuuluu = verify.bind(offset)(zuuluu, oscard);
            zuuluu = _closure1_slot14;
            zuuluu = zuuluu.LOADING;
            if(!(zuuluu !== report)) { _fun00002_ip = 294; continue _fun00001 }
 170:
            zuuluu = _closure1_slot14;
            zuuluu = zuuluu.LOADED;
            if(!(zuuluu !== report)) { _fun00002_ip = 244; continue _fun00001 }
 184:
            zuuluu = _closure1_slot14;
            zuuluu = zuuluu.SUCCEEDED;
            if(!(zuuluu !== report)) { _fun00002_ip = 226; continue _fun00001 }
 198:
            zuuluu = _closure1_slot14;
            zuuluu = zuuluu.NOT_FOUND;
            oscard = _closure1_slot10;
            report = _closure1_slot19;
            zuuluu = {};
            zuuluu = oscard.bind(tangon)(report, zuuluu);
            return zuuluu;
 226:
            oscard = _closure1_slot10;
            report = _closure1_slot18;
            zuuluu = {};
            zuuluu = oscard.bind(tangon)(report, zuuluu);
            return zuuluu;
 244:
            if(!(michal == option)) { _fun00002_ip = 266; continue _fun00001 }
 248:
            report = _closure1_slot10;
            zuuluu = _closure1_slot19;
            michal = {};
            michal = report.bind(tangon)(zuuluu, michal);
            _fun00002_ip = 292; continue _fun00001;
 266:
            oscard = _closure1_slot10;
            report = _closure1_slot16;
            zuuluu = {};
            zuuluu['handshakeToken'] = option;
            zuuluu['setAuthStep'] = golfie;
            michal = oscard.bind(tangon)(report, zuuluu);
 292:
            return michal;
 294:
            zuuluu = _closure1_slot10;
            michal = _closure1_slot20;
            entity = {};
            entity = zuuluu.bind(tangon)(michal, entity);
            return entity;
        }
    };
    var _closure1_slot15 = entity;
    entity = function(argFoo) { // Original name: ExperimentConnectedRemoteAuthLogin
        _fun00003: for(var _fun00004_ip = 0; ; ) switch(_fun00004_ip) {
 0:
            zuuluu = _closure1_slot1;
            tangon = _closure1_slot2;
            michal = 12;
            michal = tangon[michal];
            tangon = undefined;
            oscard = zuuluu.bind(tangon)(michal);
            report = oscard.useExperiment;
            zuuluu = {};
            michal = '204185_1';
            zuuluu['location'] = michal;
            michal = {};
            golfie = false;
            michal['autoTrackExposure'] = golfie;
            michal = report.bind(oscard)(zuuluu, michal);
            michal = michal.showDelayedLogin;
            zuuluu = _closure1_slot10;
            if(michal) { _fun00004_ip = 77; continue _fun00003 }
 71:
            michal = _closure1_slot17;
            _fun00004_ip = 97; continue _fun00003;
 77:
            report = _closure1_slot1;
            oscard = _closure1_slot2;
            entity = 13;
            entity = oscard[entity];
            michal = report.bind(tangon)(entity);
 97:
            entity = {};
            option = argFoo;
            verify = entity;
            report = copyDataProperties(verify, option);
            entity = zuuluu.bind(tangon)(michal, entity);
            return entity;
        }
    };
    var _closure1_slot16 = entity;
    entity = function(argFoo) { // Original name: RemoteAuthLogin
        _fun00005: for(var _fun00006_ip = 0; ; ) switch(_fun00006_ip) {
 0:
            entity = argFoo;
            michal = entity.handshakeToken;
            var _closure2_slot0 = michal;
            entity = entity.setAuthStep;
            var _closure2_slot1 = entity;
            entity = _closure1_slot13;
            tangon = undefined;
            romeon = entity.bind(tangon)();
            michal = _closure1_slot4;
            entity = michal.useState;
            golfie = false;
            michal = entity.bind(michal)(golfie);
            entity = _closure1_slot3;
            oscard = 2;
            entity = entity.bind(tangon)(michal, oscard);
            zuuluu = 0;
            echoed = entity[zuuluu];
            michal = 1;
            result = entity[michal];
            report = _closure1_slot4;
            entity = report.useState;
            report = entity.bind(report)(golfie);
            entity = _closure1_slot3;
            entity = entity.bind(tangon)(report, oscard);
            offset = entity[zuuluu];
            entity = entity[michal];
            var _closure2_slot2 = entity;
            report = _closure1_slot4;
            entity = report.useState;
            report = entity.bind(report)(golfie);
            entity = _closure1_slot3;
            entity = entity.bind(tangon)(report, oscard);
            kiloes = entity[zuuluu];
            entity = entity[michal];
            var _closure2_slot3 = entity;
            report = _closure1_slot4;
            zuuluu = report.useEffect;
            michal = function() {
                michal = global;
                report = michal.setTimeout;
                tangon = undefined;
                zuuluu = function() {
                    zuuluu = _closure2_slot2;
                    entity = undefined;
                    michal = true;
                    michal = zuuluu.bind(entity)(michal);
                    return entity;
                };
                michal = 1000;
                michal = report.bind(tangon)(zuuluu, michal);
                var _closure3_slot0 = michal;
                entity = function() {
                    entity = global;
                    zuuluu = entity.clearTimeout;
                    michal = _closure3_slot0;
                    entity = undefined;
                    entity = zuuluu.bind(entity)(michal);
                    return entity;
                };
                return entity;
            };
            entity = new Array(0);
            entity = zuuluu.bind(report)(michal, entity);
            golfie = _closure1_slot1;
            output = _closure1_slot2;
            entity = 14;
            entity = output[entity];
            oscard = golfie.bind(tangon)(entity);
            report = oscard.throttle;
            zuuluu = function() {
                zuuluu = _closure2_slot3;
                entity = undefined;
                oscard = true;
                zuuluu = zuuluu.bind(entity)(oscard);
                tangon = _closure1_slot0;
                report = _closure1_slot2;
                zuuluu = 11;
                zuuluu = report[zuuluu];
                zuuluu = tangon.bind(entity)(zuuluu);
                report = zuuluu.HTTP;
                tangon = report.post;
                zuuluu = {};
                golfie = _closure1_slot9;
                golfie = golfie.REMOTE_AUTH_FINISH;
                zuuluu['url'] = golfie;
                golfie = {};
                option = _closure2_slot0;
                golfie['handshake_token'] = option;
                option = false;
                golfie['temporary_token'] = option;
                zuuluu['body'] = golfie;
                zuuluu['oldFormErrors'] = oscard;
                zuuluu['rejectWithError'] = oscard;
                report = tangon.bind(report)(zuuluu);
                tangon = report.then;
                zuuluu = function() {
                    zuuluu = _closure2_slot1;
                    entity = _closure1_slot14;
                    michal = entity.SUCCEEDED;
                    entity = undefined;
                    michal = zuuluu.bind(entity)(michal);
                    return entity;
                };
                tangon = tangon.bind(report)(zuuluu);
                zuuluu = tangon.catch;
                michal = function() {
                    zuuluu = _closure2_slot1;
                    entity = _closure1_slot14;
                    michal = entity.NOT_FOUND;
                    entity = undefined;
                    michal = zuuluu.bind(entity)(michal);
                    return entity;
                };
                michal = zuuluu.bind(tangon)(michal);
                return entity;
            };
            michal = 1000;
            entity = {'leading': true, 'trailing': false};
            sizing = report.bind(oscard)(zuuluu, michal, entity);
            zuuluu = _closure1_slot11;
            michal = _closure1_slot12;
            entity = {};
            option = _closure1_slot10;
            oscard = _closure1_slot6;
            report = {};
            foxtra = 15;
            foxtra = output[foxtra];
            foxtra = golfie.bind(tangon)(foxtra);
            report['source'] = foxtra;
            foxtra = romeon.mainImage;
            report['style'] = foxtra;
            oscard = option.bind(tangon)(oscard, report);
            report = new Array(6);
            report[0] = oscard;
            foxtra = _closure1_slot10;
            update = _closure1_slot0;
            oscard = 16;
            oscard = output[oscard];
            oscard = update.bind(tangon)(oscard);
            option = oscard.Text;
            oscard = {};
            backup = romeon.header;
            oscard['style'] = backup;
            backup = 'heading-xl/extrabold';
            oscard['variant'] = backup;
            backup = 17;
            source = output[backup];
            source = update.bind(tangon)(source);
            vacuum = source.intl;
            ctrled = vacuum.string;
            source = output[backup];
            source = update.bind(tangon)(source);
            source = source.t;
            source = source.jD2pqK;
            source = ctrled.bind(vacuum)(source);
            oscard['children'] = source;
            oscard = foxtra.bind(tangon)(option, oscard);
            report[1] = oscard;
            foxtra = _closure1_slot10;
            oscard = 18;
            oscard = output[oscard];
            oscard = update.bind(tangon)(oscard);
            option = oscard.LegacyText;
            oscard = {};
            source = romeon.warningCaption;
            oscard['style'] = source;
            source = output[backup];
            source = update.bind(tangon)(source);
            vacuum = source.intl;
            ctrled = vacuum.string;
            source = output[backup];
            source = update.bind(tangon)(source);
            source = source.t;
            source = source.hcd/kp;
            source = ctrled.bind(vacuum)(source);
            oscard['children'] = source;
            oscard = foxtra.bind(tangon)(option, oscard);
            report[2] = oscard;
            foxtra = _closure1_slot10;
            oscard = 19;
            oscard = output[oscard];
            oscard = update.bind(tangon)(oscard);
            option = oscard.FormSwitchRow;
            oscard = {};
            source = output[backup];
            source = update.bind(tangon)(source);
            vacuum = source.intl;
            ctrled = vacuum.string;
            source = output[backup];
            source = update.bind(tangon)(source);
            source = source.t;
            source = source.UpAoQk;
            source = ctrled.bind(vacuum)(source);
            oscard['label'] = source;
            source = romeon.temporaryToggle;
            oscard['DEPRECATED_style'] = source;
            oscard['value'] = echoed;
            oscard['onValueChange'] = result;
            oscard = foxtra.bind(tangon)(option, oscard);
            report[3] = oscard;
            option = _closure1_slot10;
            foxtra = 20;
            oscard = output[foxtra];
            golfie = golfie.bind(tangon)(oscard);
            oscard = {};
            echoed = romeon.button;
            result = new Array(2);
            result[0] = echoed;
            echoed = romeon.loginButton;
            result[1] = echoed;
            oscard['style'] = result;
            result = output[backup];
            result = update.bind(tangon)(result);
            echoed = result.intl;
            result = echoed.string;
            output = output[backup];
            output = update.bind(tangon)(output);
            output = output.t;
            output = output.N3qV8f;
            output = result.bind(echoed)(output);
            oscard['text'] = output;
            oscard['onPress'] = sizing;
            offset = !offset;
            if(!offset) { _fun00006_ip = 702; continue _fun00005 }
 699:
            offset = !kiloes;
 702:
            oscard['disabled'] = offset;
            oscard = option.bind(tangon)(golfie, oscard);
            report[4] = oscard;
            option = _closure1_slot10;
            kiloes = _closure1_slot1;
            offset = _closure1_slot2;
            oscard = offset[foxtra];
            golfie = kiloes.bind(tangon)(oscard);
            oscard = {};
            foxtra = offset[foxtra];
            foxtra = kiloes.bind(tangon)(foxtra);
            foxtra = foxtra.Colors;
            foxtra = foxtra.TRANSPARENT;
            oscard['color'] = foxtra;
            romeon = romeon.button;
            oscard['style'] = romeon;
            foxtra = _closure1_slot0;
            yankee = offset[backup];
            yankee = foxtra.bind(tangon)(yankee);
            romeon = yankee.intl;
            yankee = romeon.string;
            offset = offset[backup];
            offset = foxtra.bind(tangon)(offset);
            offset = offset.t;
            offset = offset.ETE/oK;
            offset = yankee.bind(romeon)(offset);
            oscard['text'] = offset;
            verify = function() { // Original name: onPress
                report = _closure1_slot0;
                tangon = _closure1_slot2;
                entity = 11;
                zuuluu = tangon[entity];
                entity = undefined;
                zuuluu = report.bind(entity)(zuuluu);
                oscard = zuuluu.HTTP;
                report = oscard.post;
                zuuluu = {};
                golfie = _closure1_slot9;
                golfie = golfie.REMOTE_AUTH_CANCEL;
                zuuluu['url'] = golfie;
                golfie = {};
                option = _closure2_slot0;
                golfie['handshake_token'] = option;
                zuuluu['body'] = golfie;
                golfie = true;
                zuuluu['oldFormErrors'] = golfie;
                zuuluu['rejectWithError'] = golfie;
                zuuluu = report.bind(oscard)(zuuluu);
                zuuluu = _closure1_slot1;
                michal = 21;
                michal = tangon[michal];
                zuuluu = zuuluu.bind(entity)(michal);
                michal = zuuluu.pop;
                michal = michal.bind(zuuluu)();
                return entity;
            };
            oscard['onPress'] = verify;
            oscard = option.bind(tangon)(golfie, oscard);
            report[5] = oscard;
            entity['children'] = report;
            entity = zuuluu.bind(tangon)(michal, entity);
            return entity;
        }
    };
    var _closure1_slot17 = entity;
    entity = function() { // Original name: RemoteAuthLoginSucceeded
        entity = _closure1_slot13;
        tangon = undefined;
        romeon = entity.bind(tangon)();
        zuuluu = _closure1_slot11;
        michal = _closure1_slot12;
        entity = {};
        option = _closure1_slot10;
        golfie = _closure1_slot6;
        report = {};
        offset = _closure1_slot1;
        yankee = _closure1_slot2;
        verify = 22;
        verify = yankee[verify];
        verify = offset.bind(tangon)(verify);
        report['source'] = verify;
        verify = romeon.mainImage;
        report['style'] = verify;
        golfie = option.bind(tangon)(golfie, report);
        report = new Array(4);
        report[0] = golfie;
        kiloes = _closure1_slot10;
        backup = _closure1_slot0;
        golfie = 16;
        option = yankee[golfie];
        option = backup.bind(tangon)(option);
        foxtra = option.Text;
        option = {};
        verify = romeon.header;
        option['style'] = verify;
        verify = 'heading-xl/extrabold';
        option['variant'] = verify;
        verify = 17;
        sizing = yankee[verify];
        sizing = backup.bind(tangon)(sizing);
        result = sizing.intl;
        output = result.string;
        sizing = yankee[verify];
        sizing = backup.bind(tangon)(sizing);
        sizing = sizing.t;
        sizing = sizing.up6YpK;
        sizing = output.bind(result)(sizing);
        option['children'] = sizing;
        option = kiloes.bind(tangon)(foxtra, option);
        report[1] = option;
        foxtra = _closure1_slot10;
        golfie = yankee[golfie];
        golfie = backup.bind(tangon)(golfie);
        option = golfie.Text;
        golfie = {'style': null, 'variant': 'text-md/medium', 'color': 'text-muted'};
        kiloes = romeon.caption;
        golfie['style'] = kiloes;
        kiloes = yankee[verify];
        kiloes = backup.bind(tangon)(kiloes);
        output = kiloes.intl;
        sizing = output.string;
        kiloes = yankee[verify];
        kiloes = backup.bind(tangon)(kiloes);
        kiloes = kiloes.t;
        kiloes = kiloes.Lb3Boq;
        kiloes = sizing.bind(output)(kiloes);
        golfie['children'] = kiloes;
        golfie = foxtra.bind(tangon)(option, golfie);
        report[2] = golfie;
        option = _closure1_slot10;
        oscard = 20;
        oscard = yankee[oscard];
        golfie = offset.bind(tangon)(oscard);
        oscard = {};
        romeon = romeon.button;
        oscard['style'] = romeon;
        romeon = yankee[verify];
        romeon = backup.bind(tangon)(romeon);
        foxtra = romeon.intl;
        romeon = foxtra.string;
        verify = yankee[verify];
        verify = backup.bind(tangon)(verify);
        verify = verify.t;
        verify = verify.pYWLAw;
        verify = romeon.bind(foxtra)(verify);
        oscard['text'] = verify;
        verify = 21;
        verify = yankee[verify];
        verify = offset.bind(tangon)(verify);
        verify = verify.pop;
        oscard['onPress'] = verify;
        oscard = option.bind(tangon)(golfie, oscard);
        report[3] = oscard;
        entity['children'] = report;
        entity = zuuluu.bind(tangon)(michal, entity);
        return entity;
    };
    var _closure1_slot18 = entity;
    entity = function() { // Original name: RemoteAuthNotFound
        entity = _closure1_slot13;
        tangon = undefined;
        romeon = entity.bind(tangon)();
        zuuluu = _closure1_slot11;
        michal = _closure1_slot12;
        entity = {};
        option = _closure1_slot10;
        golfie = _closure1_slot6;
        report = {};
        offset = _closure1_slot1;
        yankee = _closure1_slot2;
        verify = 23;
        verify = yankee[verify];
        verify = offset.bind(tangon)(verify);
        report['source'] = verify;
        verify = romeon.mainImage;
        report['style'] = verify;
        golfie = option.bind(tangon)(golfie, report);
        report = new Array(4);
        report[0] = golfie;
        kiloes = _closure1_slot10;
        backup = _closure1_slot0;
        golfie = 16;
        option = yankee[golfie];
        option = backup.bind(tangon)(option);
        foxtra = option.Text;
        option = {};
        verify = romeon.header;
        option['style'] = verify;
        verify = 'heading-xl/extrabold';
        option['variant'] = verify;
        verify = 17;
        sizing = yankee[verify];
        sizing = backup.bind(tangon)(sizing);
        result = sizing.intl;
        output = result.string;
        sizing = yankee[verify];
        sizing = backup.bind(tangon)(sizing);
        sizing = sizing.t;
        sizing = sizing.HEZYRU;
        sizing = output.bind(result)(sizing);
        option['children'] = sizing;
        option = kiloes.bind(tangon)(foxtra, option);
        report[1] = option;
        foxtra = _closure1_slot10;
        golfie = yankee[golfie];
        golfie = backup.bind(tangon)(golfie);
        option = golfie.Text;
        golfie = {'style': null, 'variant': 'text-md/medium', 'color': 'text-muted'};
        kiloes = romeon.caption;
        golfie['style'] = kiloes;
        kiloes = yankee[verify];
        kiloes = backup.bind(tangon)(kiloes);
        output = kiloes.intl;
        sizing = output.string;
        kiloes = yankee[verify];
        kiloes = backup.bind(tangon)(kiloes);
        kiloes = kiloes.t;
        kiloes = kiloes.qW4FVl;
        kiloes = sizing.bind(output)(kiloes);
        golfie['children'] = kiloes;
        golfie = foxtra.bind(tangon)(option, golfie);
        report[2] = golfie;
        option = _closure1_slot10;
        oscard = 20;
        oscard = yankee[oscard];
        golfie = offset.bind(tangon)(oscard);
        oscard = {};
        romeon = romeon.button;
        oscard['style'] = romeon;
        romeon = yankee[verify];
        romeon = backup.bind(tangon)(romeon);
        foxtra = romeon.intl;
        romeon = foxtra.string;
        verify = yankee[verify];
        verify = backup.bind(tangon)(verify);
        verify = verify.t;
        verify = verify.ETE/oK;
        verify = romeon.bind(foxtra)(verify);
        oscard['text'] = verify;
        verify = 21;
        verify = yankee[verify];
        verify = offset.bind(tangon)(verify);
        verify = verify.pop;
        oscard['onPress'] = verify;
        oscard = option.bind(tangon)(golfie, oscard);
        report[3] = oscard;
        entity['children'] = report;
        entity = zuuluu.bind(tangon)(michal, entity);
        return entity;
    };
    var _closure1_slot19 = entity;
    entity = function() { // Original name: RemoteAuthLoading
        entity = _closure1_slot13;
        tangon = undefined;
        report = entity.bind(tangon)();
        zuuluu = _closure1_slot10;
        michal = _closure1_slot7;
        entity = {};
        report = report.loadingContainer;
        entity['style'] = report;
        golfie = _closure1_slot10;
        oscard = _closure1_slot8;
        report = {'animating': true, 'color': null, 'size': 'large'};
        verify = _closure1_slot1;
        offset = _closure1_slot2;
        option = 6;
        option = offset[option];
        option = verify.bind(tangon)(option);
        option = option.unsafe_rawColors;
        option = option.BRAND_500;
        report['color'] = option;
        report = golfie.bind(tangon)(oscard, report);
        entity['children'] = report;
        entity = zuuluu.bind(tangon)(michal, entity);
        return entity;
    };
    var _closure1_slot20 = entity;
    entity = global;
    option = entity.Object;
    report = option.defineProperty;
    michal = {};
    entity = true;
    michal['value'] = entity;
    entity = '__esModule';
    entity = report.bind(option)(zuuluu, entity, michal);
    yankee = 0;
    michal = golfie[yankee];
    entity = undefined;
    michal = kiloes.bind(entity)(michal);
    var _closure1_slot3 = michal;
    offset = 1;
    report = golfie[offset];
    michal = argCor;
    michal = michal.bind(entity)(report);
    var _closure1_slot4 = michal;
    verify = 2;
    michal = golfie[verify];
    michal = oscard.bind(entity)(michal);
    report = michal.ImageBackground;
    var _closure1_slot5 = report;
    report = michal.Image;
    var _closure1_slot6 = report;
    report = michal.View;
    var _closure1_slot7 = report;
    michal = michal.ActivityIndicator;
    var _closure1_slot8 = michal;
    option = 3;
    michal = golfie[option];
    michal = oscard.bind(entity)(michal);
    michal = michal.Endpoints;
    var _closure1_slot9 = michal;
    michal = 4;
    report = golfie[michal];
    report = oscard.bind(entity)(report);
    report = report.jsx;
    var _closure1_slot10 = report;
    report = golfie[michal];
    report = oscard.bind(entity)(report);
    report = report.jsxs;
    var _closure1_slot11 = report;
    michal = golfie[michal];
    michal = oscard.bind(entity)(michal);
    michal = michal.Fragment;
    var _closure1_slot12 = michal;
    michal = 5;
    michal = golfie[michal];
    romeon = oscard.bind(entity)(michal);
    report = romeon.createStyles;
    michal = {};
    foxtra = {'width': '100%', 'height': '100%'};
    michal['background'] = foxtra;
    backup = 'center';
    foxtra = {'flex': 1, 'alignItems': 'stretch', 'alignContent': 'center'};
    michal['container'] = foxtra;
    foxtra = {};
    sizing = 'cover';
    foxtra['resizeMode'] = sizing;
    michal['imageStyle'] = foxtra;
    sizing = 32;
    foxtra = {'position': 'absolute', 'top': 16, 'alignSelf': 'center', 'width': 32, 'height': 32};
    michal['logo'] = foxtra;
    foxtra = {'marginTop': 16, 'marginBottom': 32};
    michal['mainImage'] = foxtra;
    foxtra = {};
    foxtra['textAlign'] = backup;
    michal['header'] = foxtra;
    foxtra = {'fontSize': 16, 'lineHeight': 20, 'color': null, 'textAlign': 'center', 'marginTop': 8, 'marginBottom': 32};
    backup = 6;
    output = golfie[backup];
    output = kiloes.bind(entity)(output);
    output = output.unsafe_rawColors;
    output = output.RED_400;
    foxtra['color'] = output;
    output = 8;
    michal['warningCaption'] = foxtra;
    foxtra = {'lineHeight': 20, 'textAlign': 'center', 'marginTop': 8, 'marginBottom': 32};
    michal['caption'] = foxtra;
    foxtra = {'display': 'flex', 'flexDirection': 'column', 'alignItems': 'center', 'backgroundColor': null, 'marginTop': 'auto', 'marginBottom': 'auto', 'marginLeft': 16, 'marginRight': 16, 'borderRadius': null, 'padding': 16, 'shadowColor': null, 'shadowOpacity': 0.16, 'shadowRadius': 2};
    result = golfie[backup];
    result = kiloes.bind(entity)(result);
    result = result.colors;
    result = result.BACKGROUND_PRIMARY;
    foxtra['backgroundColor'] = result;
    result = golfie[backup];
    result = kiloes.bind(entity)(result);
    result = result.radii;
    result = result.sm;
    foxtra['borderRadius'] = result;
    result = golfie[backup];
    result = kiloes.bind(entity)(result);
    result = result.colors;
    result = result.BLACK;
    foxtra['shadowColor'] = result;
    result = {'height': 2, 'width': 0};
    foxtra['shadowOffset'] = result;
    michal['mainCard'] = foxtra;
    foxtra = {};
    foxtra['flexGrow'] = yankee;
    michal['button'] = foxtra;
    foxtra = {};
    foxtra['marginBottom'] = output;
    michal['loginButton'] = foxtra;
    foxtra = {};
    output = golfie[backup];
    output = kiloes.bind(entity)(output);
    output = output.radii;
    output = output.xs;
    foxtra['borderRadius'] = output;
    foxtra['marginBottom'] = sizing;
    backup = golfie[backup];
    backup = kiloes.bind(entity)(backup);
    backup = backup.colors;
    backup = backup.BACKGROUND_SECONDARY;
    foxtra['backgroundColor'] = backup;
    backup = 'none';
    foxtra['display'] = backup;
    michal['temporaryToggle'] = foxtra;
    foxtra = {'height': 300, 'justifyContent': 'center'};
    michal['loadingContainer'] = foxtra;
    michal = report.bind(romeon)(michal);
    var _closure1_slot13 = michal;
    michal = {};
    michal['LOADING'] = yankee;
    report = 'LOADING';
    michal[yankee] = report;
    michal['NOT_FOUND'] = offset;
    report = 'NOT_FOUND';
    michal[offset] = report;
    michal['LOADED'] = verify;
    report = 'LOADED';
    michal[verify] = report;
    michal['SUCCEEDED'] = option;
    report = 'SUCCEEDED';
    michal[option] = report;
    var _closure1_slot14 = michal;
    report = 24;
    report = golfie[report];
    golfie = oscard.bind(entity)(report);
    oscard = golfie.fileFinishedImporting;
    report = 'components_native/RemoteAuthModal.tsx';
    report = oscard.bind(golfie)(report);
    tangon = function(argFoo) { // Original name: RemoteAuth
        entity = _closure1_slot13;
        tangon = undefined;
        foxtra = entity.bind(tangon)();
        verify = _closure1_slot1;
        offset = _closure1_slot2;
        entity = 7;
        entity = offset[entity];
        entity = verify.bind(tangon)(entity);
        entity = entity.bind(tangon)();
        backup = entity.top;
        zuuluu = _closure1_slot11;
        michal = _closure1_slot5;
        entity = {};
        report = 8;
        report = offset[report];
        report = verify.bind(tangon)(report);
        entity['source'] = report;
        report = foxtra.imageStyle;
        entity['imageStyle'] = report;
        report = foxtra.background;
        entity['style'] = report;
        golfie = _closure1_slot10;
        oscard = _closure1_slot6;
        report = {};
        yankee = foxtra.logo;
        option = new Array(2);
        option[0] = yankee;
        yankee = {};
        yankee['marginTop'] = backup;
        option[1] = yankee;
        report['style'] = option;
        option = 9;
        option = offset[option];
        option = verify.bind(tangon)(option);
        report['source'] = option;
        oscard = golfie.bind(tangon)(oscard, report);
        report = new Array(2);
        report[0] = oscard;
        option = _closure1_slot10;
        golfie = _closure1_slot7;
        oscard = {};
        verify = foxtra.container;
        oscard['style'] = verify;
        yankee = _closure1_slot10;
        offset = _closure1_slot7;
        verify = {};
        foxtra = foxtra.mainCard;
        verify['style'] = foxtra;
        backup = _closure1_slot10;
        foxtra = _closure1_slot15;
        romeon = {};
        sizing = argFoo;
        output = romeon;
        kiloes = copyDataProperties(output, sizing);
        romeon = backup.bind(tangon)(foxtra, romeon);
        verify['children'] = romeon;
        verify = yankee.bind(tangon)(offset, verify);
        oscard['children'] = verify;
        oscard = option.bind(tangon)(golfie, oscard);
        report[1] = oscard;
        entity['children'] = report;
        entity = zuuluu.bind(tangon)(michal, entity);
        return entity;
    };
    zuuluu['default'] = tangon;
    zuuluu['RemoteAuthSteps'] = michal;
    return entity;
})();