// app/components_native/warnings/GuildNSFW.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    report = argBar;
    golfie = argBaz;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    var _closure1_slot1 = golfie;
    var _closure1_slot2 = oscard;
    entity = global;
    verify = entity.Object;
    option = verify.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = option.bind(verify)(zuuluu, entity, tangon);
    entity = 0;
    option = oscard[entity];
    tangon = argCor;
    entity = undefined;
    tangon = tangon.bind(entity)(option);
    var _closure1_slot3 = tangon;
    tangon = 1;
    tangon = oscard[tangon];
    tangon = golfie.bind(entity)(tangon);
    var _closure1_slot4 = tangon;
    tangon = 2;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.HelpdeskArticles;
    var _closure1_slot5 = tangon;
    tangon = 3;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.jsx;
    var _closure1_slot6 = tangon;
    tangon = 15;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'components_native/warnings/GuildNSFW.tsx';
    tangon = report.bind(oscard)(tangon);
    michal = function(argFoo) { // Original name: GuildNSFW
        michal = argFoo;
        var _closure2_slot0 = michal;
        tangon = _closure1_slot0;
        golfie = _closure1_slot2;
        zuuluu = 4;
        report = golfie[zuuluu];
        zuuluu = undefined;
        verify = tangon.bind(zuuluu)(report);
        option = verify.useStateFromStores;
        report = _closure1_slot4;
        oscard = new Array(1);
        oscard[0] = report;
        report = function() {
            _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
                michal = _closure1_slot4;
                entity = michal.getCurrentUser;
                entity = entity.bind(michal)();
                michal = null;
                zuuluu = michal == entity;
                michal = undefined;
                if(zuuluu) { _fun00002_ip = 33; continue _fun00001 }
 27:
                michal = entity.nsfwAllowed;
 33:
                entity = false;
                entity = entity === michal;
                return entity;
            }
        };
        oscard = option.bind(verify)(oscard, report);
        report = 5;
        report = golfie[report];
        option = tangon.bind(zuuluu)(report);
        report = option.useShouldAgeVerifyForAgeGate;
        report = report.bind(option)();
        option = function() { // Original name: handleDisagree
            _fun00003: for(var _fun00004_ip = 0; ; ) switch(_fun00004_ip) {
 0:
                zuuluu = _closure1_slot1;
                michal = _closure1_slot2;
                entity = 6;
                michal = michal[entity];
                entity = undefined;
                oscard = zuuluu.bind(entity)(michal);
                report = oscard.nsfwReturnToSafety;
                zuuluu = _closure2_slot0;
                tangon = zuuluu.guildId;
                tangon = report.bind(oscard)(tangon);
                tangon = zuuluu.onReturnToSafety;
                zuuluu = null;
                if(!(zuuluu != tangon)) { _fun00004_ip = 74; continue _fun00003 }
 60:
                zuuluu = _closure2_slot0;
                michal = zuuluu.onReturnToSafety;
                michal = michal.bind(zuuluu)();
 74:
                return entity;
            }
        };
        var _closure2_slot1 = option;
        option = function() { // Original name: handleAgree
            zuuluu = _closure1_slot1;
            michal = _closure1_slot2;
            entity = 6;
            michal = michal[entity];
            entity = undefined;
            tangon = zuuluu.bind(entity)(michal);
            zuuluu = tangon.nsfwAgree;
            michal = _closure2_slot0;
            michal = michal.guildId;
            michal = zuuluu.bind(tangon)(michal);
            return entity;
        };
        var _closure2_slot2 = option;
        offset = _closure1_slot3;
        verify = offset.useCallback;
        option = function() {
            tangon = _closure1_slot1;
            oscard = _closure1_slot2;
            entity = 7;
            zuuluu = oscard[entity];
            entity = undefined;
            tangon = tangon.bind(entity)(zuuluu);
            zuuluu = tangon.showAgeVerificationGetStartedModal;
            report = _closure1_slot0;
            michal = 8;
            michal = oscard[michal];
            michal = report.bind(entity)(michal);
            michal = michal.AgeVerificationModalEntryPoint;
            michal = michal.NSFW_GUILD;
            michal = zuuluu.bind(tangon)(michal);
            return entity;
        };
        michal = new Array(0);
        michal = verify.bind(offset)(option, michal);
        var _closure2_slot3 = michal;
        michal = 9;
        michal = golfie[michal];
        option = tangon.bind(zuuluu)(michal);
        michal = option.useNsfwSource;
        michal = michal.bind(option)();
        var _closure2_slot4 = michal;
        michal = 10;
        michal = golfie[michal];
        tangon = tangon.bind(zuuluu)(michal);
        zuuluu = tangon.match;
        michal = {};
        michal['isUnderageForNSFW'] = oscard;
        michal['shouldPawtect'] = report;
        report = zuuluu.bind(tangon)(michal);
        tangon = report.with;
        zuuluu = {};
        michal = true;
        zuuluu['shouldPawtect'] = michal;
        michal = function() {
            tangon = _closure1_slot6;
            michal = _closure1_slot1;
            offset = _closure1_slot2;
            entity = 11;
            entity = offset[entity];
            zuuluu = undefined;
            michal = michal.bind(zuuluu)(entity);
            entity = {};
            golfie = _closure2_slot0;
            option = golfie.guildId;
            entity['guildId'] = option;
            golfie = golfie.channelId;
            entity['channelId'] = golfie;
            verify = _closure1_slot0;
            oscard = 8;
            oscard = offset[oscard];
            oscard = verify.bind(zuuluu)(oscard);
            oscard = oscard.NsfwSpaceWarningModalType;
            oscard = oscard.NSFW_CHANNEL_AGE_VERIFY;
            entity['modalType'] = oscard;
            oscard = _closure2_slot4;
            entity['source'] = oscard;
            oscard = 12;
            golfie = offset[oscard];
            golfie = verify.bind(zuuluu)(golfie);
            yankee = golfie.intl;
            option = yankee.string;
            golfie = offset[oscard];
            golfie = verify.bind(zuuluu)(golfie);
            golfie = golfie.t;
            golfie = golfie.ZmwvDQ;
            golfie = option.bind(yankee)(golfie);
            entity['title'] = golfie;
            golfie = offset[oscard];
            golfie = verify.bind(zuuluu)(golfie);
            yankee = golfie.intl;
            option = yankee.string;
            golfie = offset[oscard];
            golfie = verify.bind(zuuluu)(golfie);
            golfie = golfie.t;
            golfie = golfie.NjO/s7;
            golfie = option.bind(yankee)(golfie);
            entity['description'] = golfie;
            golfie = offset[oscard];
            golfie = verify.bind(zuuluu)(golfie);
            yankee = golfie.intl;
            option = yankee.string;
            golfie = offset[oscard];
            golfie = verify.bind(zuuluu)(golfie);
            golfie = golfie.t;
            golfie = golfie.SFWVER;
            golfie = option.bind(yankee)(golfie);
            entity['agreement'] = golfie;
            golfie = offset[oscard];
            golfie = verify.bind(zuuluu)(golfie);
            option = golfie.intl;
            golfie = option.string;
            oscard = offset[oscard];
            oscard = verify.bind(zuuluu)(oscard);
            oscard = oscard.t;
            oscard = oscard.f3Pet7;
            oscard = golfie.bind(option)(oscard);
            entity['disagreement'] = oscard;
            oscard = _closure2_slot3;
            entity['onAgree'] = oscard;
            report = _closure2_slot1;
            entity['onDisagree'] = report;
            entity = tangon.bind(zuuluu)(michal, entity);
            return entity;
        };
        report = tangon.bind(report)(zuuluu, michal);
        tangon = report.with;
        zuuluu = {'isUnderageForNSFW': true, 'shouldPawtect': false};
        michal = function() {
            tangon = _closure1_slot6;
            kiloes = _closure1_slot1;
            offset = _closure1_slot2;
            entity = 11;
            entity = offset[entity];
            zuuluu = undefined;
            michal = kiloes.bind(zuuluu)(entity);
            entity = {};
            oscard = _closure2_slot0;
            golfie = oscard.guildId;
            entity['guildId'] = golfie;
            oscard = oscard.channelId;
            entity['channelId'] = oscard;
            verify = _closure1_slot0;
            oscard = 8;
            oscard = offset[oscard];
            oscard = verify.bind(zuuluu)(oscard);
            oscard = oscard.NsfwSpaceWarningModalType;
            oscard = oscard.NSFW_CHANNEL_UNDERAGE;
            entity['modalType'] = oscard;
            oscard = 13;
            oscard = offset[oscard];
            oscard = kiloes.bind(zuuluu)(oscard);
            entity['source'] = oscard;
            oscard = 12;
            golfie = offset[oscard];
            golfie = verify.bind(zuuluu)(golfie);
            yankee = golfie.intl;
            option = yankee.string;
            golfie = offset[oscard];
            golfie = verify.bind(zuuluu)(golfie);
            golfie = golfie.t;
            golfie = golfie.NEabBQ;
            golfie = option.bind(yankee)(golfie);
            entity['title'] = golfie;
            golfie = offset[oscard];
            golfie = verify.bind(zuuluu)(golfie);
            romeon = golfie.intl;
            yankee = romeon.format;
            golfie = offset[oscard];
            golfie = verify.bind(zuuluu)(golfie);
            golfie = golfie.t;
            option = golfie.2kHZen;
            golfie = {};
            backup = 14;
            backup = offset[backup];
            kiloes = kiloes.bind(zuuluu)(backup);
            backup = kiloes.getArticleURL;
            foxtra = _closure1_slot5;
            foxtra = foxtra.NSFW_AGE_GATING;
            foxtra = backup.bind(kiloes)(foxtra);
            golfie['helpURL'] = foxtra;
            golfie = yankee.bind(romeon)(option, golfie);
            entity['description'] = golfie;
            golfie = 'primary';
            entity['disagreementButtonVariant'] = golfie;
            golfie = offset[oscard];
            golfie = verify.bind(zuuluu)(golfie);
            option = golfie.intl;
            golfie = option.string;
            oscard = offset[oscard];
            oscard = verify.bind(zuuluu)(oscard);
            oscard = oscard.t;
            oscard = oscard.13/7kZ;
            oscard = golfie.bind(option)(oscard);
            entity['disagreement'] = oscard;
            report = _closure2_slot1;
            entity['onDisagree'] = report;
            entity = tangon.bind(zuuluu)(michal, entity);
            return entity;
        };
        zuuluu = tangon.bind(report)(zuuluu, michal);
        michal = zuuluu.otherwise;
        entity = function() {
            tangon = _closure1_slot6;
            michal = _closure1_slot1;
            offset = _closure1_slot2;
            entity = 11;
            entity = offset[entity];
            zuuluu = undefined;
            michal = michal.bind(zuuluu)(entity);
            entity = {};
            golfie = _closure2_slot0;
            option = golfie.guildId;
            entity['guildId'] = option;
            golfie = golfie.channelId;
            entity['channelId'] = golfie;
            verify = _closure1_slot0;
            oscard = 8;
            oscard = offset[oscard];
            oscard = verify.bind(zuuluu)(oscard);
            oscard = oscard.NsfwSpaceWarningModalType;
            oscard = oscard.NSFW_CHANNEL_VERIFIED;
            entity['modalType'] = oscard;
            oscard = _closure2_slot4;
            entity['source'] = oscard;
            oscard = 12;
            golfie = offset[oscard];
            golfie = verify.bind(zuuluu)(golfie);
            yankee = golfie.intl;
            option = yankee.string;
            golfie = offset[oscard];
            golfie = verify.bind(zuuluu)(golfie);
            golfie = golfie.t;
            golfie = golfie.ZmwvDQ;
            golfie = option.bind(yankee)(golfie);
            entity['title'] = golfie;
            golfie = offset[oscard];
            golfie = verify.bind(zuuluu)(golfie);
            yankee = golfie.intl;
            option = yankee.string;
            golfie = offset[oscard];
            golfie = verify.bind(zuuluu)(golfie);
            golfie = golfie.t;
            golfie = golfie.E4Cd5O;
            golfie = option.bind(yankee)(golfie);
            entity['description'] = golfie;
            golfie = offset[oscard];
            golfie = verify.bind(zuuluu)(golfie);
            yankee = golfie.intl;
            option = yankee.string;
            golfie = offset[oscard];
            golfie = verify.bind(zuuluu)(golfie);
            golfie = golfie.t;
            golfie = golfie.wVq7ur;
            golfie = option.bind(yankee)(golfie);
            entity['agreement'] = golfie;
            golfie = 'destructive';
            entity['agreementButtonVariant'] = golfie;
            golfie = offset[oscard];
            golfie = verify.bind(zuuluu)(golfie);
            option = golfie.intl;
            golfie = option.string;
            oscard = offset[oscard];
            oscard = verify.bind(zuuluu)(oscard);
            oscard = oscard.t;
            oscard = oscard.hg1uxs;
            oscard = golfie.bind(option)(oscard);
            entity['disagreement'] = oscard;
            oscard = _closure2_slot2;
            entity['onAgree'] = oscard;
            report = _closure2_slot1;
            entity['onDisagree'] = report;
            entity = tangon.bind(zuuluu)(michal, entity);
            return entity;
        };
        entity = michal.bind(zuuluu)(entity);
        return entity;
    };
    zuuluu['default'] = michal;
    return entity;
})();