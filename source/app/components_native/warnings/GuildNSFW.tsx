// app/components_native/warnings/GuildNSFW.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    report = argBar;
    golfie = argBaz;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    var _closure1_slot1 = golfie;
    var _closure1_slot2 = oscard;
    entity = global;
    verify = entity.Object;
    option = verify.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = option.bind(verify)(zuuluu, entity, tangon);
    entity = 0;
    option = oscard[entity];
    tangon = argCor;
    entity = undefined;
    tangon = tangon.bind(entity)(option);
    var _closure1_slot3 = tangon;
    tangon = 1;
    tangon = oscard[tangon];
    tangon = golfie.bind(entity)(tangon);
    var _closure1_slot4 = tangon;
    tangon = 2;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.HelpdeskArticles;
    var _closure1_slot5 = tangon;
    tangon = 3;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.jsx;
    var _closure1_slot6 = tangon;
    tangon = 14;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'components_native/warnings/GuildNSFW.tsx';
    tangon = report.bind(oscard)(tangon);
    michal = function(argFoo) { // Original name: GuildNSFW
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            yankee = argFoo;
            var _closure2_slot0 = yankee;
            zuuluu = _closure1_slot0;
            kiloes = _closure1_slot2;
            entity = 4;
            entity = kiloes[entity];
            tangon = undefined;
            golfie = zuuluu.bind(tangon)(entity);
            oscard = golfie.useStateFromStores;
            entity = _closure1_slot4;
            michal = new Array(1);
            michal[0] = entity;
            entity = function() {
                _fun00003: for(var _fun00004_ip = 0; ; ) switch(_fun00004_ip) {
 0:
                    michal = _closure1_slot4;
                    entity = michal.getCurrentUser;
                    entity = entity.bind(michal)();
                    michal = null;
                    zuuluu = michal == entity;
                    michal = undefined;
                    if(zuuluu) { _fun00004_ip = 33; continue _fun00003 }
 27:
                    michal = entity.nsfwAllowed;
 33:
                    entity = false;
                    entity = entity === michal;
                    return entity;
                }
            };
            entity = oscard.bind(golfie)(michal, entity);
            michal = 5;
            oscard = kiloes[michal];
            golfie = zuuluu.bind(tangon)(oscard);
            oscard = golfie.useShouldAgeVerifyForAgeGate;
            foxtra = oscard.bind(golfie)();
            michal = kiloes[michal];
            oscard = zuuluu.bind(tangon)(michal);
            michal = oscard.useAgeGateVerifyContent;
            michal = michal.bind(oscard)();
            verify = michal.verifyAgreementButtonText;
            offset = michal.verifyGateDescription;
            oscard = function() { // Original name: handleDisagree
                _fun00005: for(var _fun00006_ip = 0; ; ) switch(_fun00006_ip) {
 0:
                    zuuluu = _closure1_slot1;
                    michal = _closure1_slot2;
                    entity = 6;
                    michal = michal[entity];
                    entity = undefined;
                    oscard = zuuluu.bind(entity)(michal);
                    report = oscard.nsfwReturnToSafety;
                    zuuluu = _closure2_slot0;
                    tangon = zuuluu.guildId;
                    tangon = report.bind(oscard)(tangon);
                    tangon = zuuluu.onReturnToSafety;
                    zuuluu = null;
                    if(!(zuuluu != tangon)) { _fun00006_ip = 74; continue _fun00005 }
 60:
                    zuuluu = _closure2_slot0;
                    michal = zuuluu.onReturnToSafety;
                    michal = michal.bind(zuuluu)();
 74:
                    return entity;
                }
            };
            backup = _closure1_slot3;
            option = backup.useCallback;
            golfie = function() {
                tangon = _closure1_slot1;
                oscard = _closure1_slot2;
                entity = 7;
                zuuluu = oscard[entity];
                entity = undefined;
                tangon = tangon.bind(entity)(zuuluu);
                zuuluu = tangon.showAgeVerificationGetStartedModal;
                report = _closure1_slot0;
                michal = 8;
                michal = oscard[michal];
                michal = report.bind(entity)(michal);
                michal = michal.AgeVerificationModalEntryPoint;
                michal = michal.NSFW_GUILD;
                michal = zuuluu.bind(tangon)(michal);
                return entity;
            };
            michal = new Array(0);
            golfie = option.bind(backup)(golfie, michal);
            michal = 9;
            michal = kiloes[michal];
            zuuluu = zuuluu.bind(tangon)(michal);
            michal = zuuluu.useNsfwSource;
            option = michal.bind(zuuluu)();
            zuuluu = _closure1_slot6;
            backup = _closure1_slot1;
            michal = 10;
            michal = kiloes[michal];
            michal = backup.bind(tangon)(michal);
            if(foxtra) { _fun00002_ip = 787; continue _fun00001 }
 198:
            if(entity) { _fun00002_ip = 495; continue _fun00001 }
 204:
            entity = {};
            foxtra = yankee.guildId;
            entity['guildId'] = foxtra;
            foxtra = yankee.channelId;
            entity['channelId'] = foxtra;
            sizing = _closure1_slot0;
            output = _closure1_slot2;
            foxtra = 8;
            foxtra = output[foxtra];
            foxtra = sizing.bind(tangon)(foxtra);
            foxtra = foxtra.NsfwSpaceWarningModalType;
            foxtra = foxtra.NSFW_CHANNEL_VERIFIED;
            entity['modalType'] = foxtra;
            entity['source'] = option;
            foxtra = 11;
            backup = output[foxtra];
            backup = sizing.bind(tangon)(backup);
            result = backup.intl;
            kiloes = result.string;
            backup = output[foxtra];
            backup = sizing.bind(tangon)(backup);
            backup = backup.t;
            backup = backup.ZmwvDQ;
            backup = kiloes.bind(result)(backup);
            entity['title'] = backup;
            backup = output[foxtra];
            backup = sizing.bind(tangon)(backup);
            result = backup.intl;
            kiloes = result.string;
            backup = output[foxtra];
            backup = sizing.bind(tangon)(backup);
            backup = backup.t;
            backup = backup.E4Cd5O;
            backup = kiloes.bind(result)(backup);
            entity['description'] = backup;
            backup = output[foxtra];
            backup = sizing.bind(tangon)(backup);
            result = backup.intl;
            kiloes = result.string;
            backup = output[foxtra];
            backup = sizing.bind(tangon)(backup);
            backup = backup.t;
            backup = backup.wVq7ur;
            backup = kiloes.bind(result)(backup);
            entity['agreement'] = backup;
            backup = 'destructive';
            entity['agreementButtonVariant'] = backup;
            backup = output[foxtra];
            backup = sizing.bind(tangon)(backup);
            kiloes = backup.intl;
            backup = kiloes.string;
            foxtra = output[foxtra];
            foxtra = sizing.bind(tangon)(foxtra);
            foxtra = foxtra.t;
            foxtra = foxtra./g10LC;
            foxtra = backup.bind(kiloes)(foxtra);
            entity['disagreement'] = foxtra;
            report = function() { // Original name: onAgree
                zuuluu = _closure1_slot1;
                michal = _closure1_slot2;
                entity = 6;
                michal = michal[entity];
                entity = undefined;
                tangon = zuuluu.bind(entity)(michal);
                zuuluu = tangon.nsfwAgree;
                michal = _closure2_slot0;
                michal = michal.guildId;
                michal = zuuluu.bind(tangon)(michal);
                return entity;
            };
            entity['onAgree'] = report;
            entity['onDisagree'] = oscard;
            _fun00002_ip = 782; continue _fun00001;
 495:
            report = {};
            foxtra = yankee.guildId;
            report['guildId'] = foxtra;
            foxtra = yankee.channelId;
            report['channelId'] = foxtra;
            sizing = _closure1_slot0;
            output = _closure1_slot2;
            foxtra = 8;
            foxtra = output[foxtra];
            foxtra = sizing.bind(tangon)(foxtra);
            foxtra = foxtra.NsfwSpaceWarningModalType;
            foxtra = foxtra.NSFW_CHANNEL_UNDERAGE;
            report['modalType'] = foxtra;
            source = _closure1_slot1;
            foxtra = 12;
            foxtra = output[foxtra];
            foxtra = source.bind(tangon)(foxtra);
            report['source'] = foxtra;
            foxtra = 11;
            backup = output[foxtra];
            backup = sizing.bind(tangon)(backup);
            result = backup.intl;
            kiloes = result.string;
            backup = output[foxtra];
            backup = sizing.bind(tangon)(backup);
            backup = backup.t;
            backup = backup.NEabBQ;
            backup = kiloes.bind(result)(backup);
            report['title'] = backup;
            backup = output[foxtra];
            backup = sizing.bind(tangon)(backup);
            echoed = backup.intl;
            result = echoed.format;
            backup = output[foxtra];
            backup = sizing.bind(tangon)(backup);
            backup = backup.t;
            kiloes = backup.2kHZen;
            backup = {};
            update = 13;
            update = output[update];
            ctrled = source.bind(tangon)(update);
            source = ctrled.getArticleURL;
            update = _closure1_slot5;
            update = update.NSFW_AGE_GATING;
            update = source.bind(ctrled)(update);
            backup['helpURL'] = update;
            backup = result.bind(echoed)(kiloes, backup);
            report['description'] = backup;
            backup = 'primary';
            report['disagreementButtonVariant'] = backup;
            backup = output[foxtra];
            backup = sizing.bind(tangon)(backup);
            kiloes = backup.intl;
            backup = kiloes.string;
            foxtra = output[foxtra];
            foxtra = sizing.bind(tangon)(foxtra);
            foxtra = foxtra.t;
            foxtra = foxtra./g10LC;
            foxtra = backup.bind(kiloes)(foxtra);
            report['disagreement'] = foxtra;
            report['onDisagree'] = oscard;
            entity = report;
 782:
            _fun00002_ip = 970; continue _fun00001;
 787:
            report = {};
            foxtra = yankee.guildId;
            report['guildId'] = foxtra;
            yankee = yankee.channelId;
            report['channelId'] = yankee;
            yankee = _closure1_slot0;
            romeon = _closure1_slot2;
            foxtra = 8;
            foxtra = romeon[foxtra];
            foxtra = yankee.bind(tangon)(foxtra);
            foxtra = foxtra.NsfwSpaceWarningModalType;
            foxtra = foxtra.NSFW_CHANNEL_AGE_VERIFY;
            report['modalType'] = foxtra;
            report['source'] = option;
            option = 11;
            foxtra = romeon[option];
            foxtra = yankee.bind(tangon)(foxtra);
            kiloes = foxtra.intl;
            backup = kiloes.string;
            foxtra = romeon[option];
            foxtra = yankee.bind(tangon)(foxtra);
            foxtra = foxtra.t;
            foxtra = foxtra.ZmwvDQ;
            foxtra = backup.bind(kiloes)(foxtra);
            report['title'] = foxtra;
            report['description'] = offset;
            report['agreement'] = verify;
            verify = romeon[option];
            verify = yankee.bind(tangon)(verify);
            offset = verify.intl;
            verify = offset.string;
            option = romeon[option];
            option = yankee.bind(tangon)(option);
            option = option.t;
            option = option./g10LC;
            option = verify.bind(offset)(option);
            report['disagreement'] = option;
            report['onAgree'] = golfie;
            report['onDisagree'] = oscard;
            entity = report;
 970:
            entity = zuuluu.bind(tangon)(michal, entity);
            return entity;
        }
    };
    zuuluu['default'] = michal;
    return entity;
})();