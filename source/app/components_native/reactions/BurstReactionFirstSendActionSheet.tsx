// app/components_native/reactions/BurstReactionFirstSendActionSheet.tsx
export default (function(argFoo, argBar, argBaz, argCorge, _, argFred, argPlugh) {
    report = argBar;
    yankee = argBaz;
    zulu = argFred;
    oscar = argPlugh;
    var _closure1_slot0 = report;
    var _closure1_slot1 = yankee;
    var _closure1_slot2 = oscar;
    entity = function() { // Original name: onDismiss
        zulu = _closure1_slot1;
        mike = _closure1_slot2;
        entity = 5;
        mike = mike[entity];
        entity = undefined;
        zulu = zulu.bind(entity)(mike);
        mike = zulu.hideActionSheet;
        mike = mike.bind(zulu)();
        return entity;
    };
    var _closure1_slot7 = entity;
    entity = global;
    options = entity.Object;
    golf = options.defineProperty;
    tango = {};
    entity = true;
    tango['value'] = entity;
    entity = '__esModule';
    entity = golf.bind(options)(zulu, entity, tango);
    entity = 0;
    golf = oscar[entity];
    tango = argCorge;
    entity = undefined;
    tango = tango.bind(entity)(golf);
    romeo = 1;
    tango = oscar[romeo];
    tango = report.bind(entity)(tango);
    offset = tango.StyleSheet;
    tango = tango.View;
    var _closure1_slot3 = tango;
    tango = 2;
    golf = oscar[tango];
    golf = report.bind(entity)(golf);
    golf = golf.jsx;
    var _closure1_slot4 = golf;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.jsxs;
    var _closure1_slot5 = tango;
    tango = 3;
    tango = oscar[tango];
    options = report.bind(entity)(tango);
    golf = options.createStyles;
    tango = {};
    verify = {'paddingTop': 24, 'paddingBottom': 24, 'paddingLeft': 12, 'paddingRight': 12};
    tango['container'] = verify;
    verify = {};
    backup = offset.absoluteFillObject;
    kilo = verify;
    offset = copyDataProperties(kilo, backup);
    offset = 'flex';
    verify[offset] = romeo;
    romeo = 'center';
    offset = 'alignItems';
    verify[offset] = romeo;
    offset = 'justifyContent';
    verify[offset] = romeo;
    romeo = -120;
    offset = 'top';
    verify[offset] = romeo;
    tango['fill'] = verify;
    verify = {'tintColor': null, 'width': 37.5, 'height': 37.5};
    offset = 4;
    offset = oscar[offset];
    offset = yankee.bind(entity)(offset);
    offset = offset.colors;
    offset = offset.HEADER_SECONDARY;
    verify['tintColor'] = offset;
    tango['nitroWheel'] = verify;
    verify = {'flexDirection': 'row', 'flexShrink': 1, 'alignItems': 'center', 'alignSelf': 'center', 'textAlign': 'center'};
    tango['textContainer'] = verify;
    verify = {'paddingTop': 8, 'paddingBottom': 18};
    tango['body'] = verify;
    verify = {};
    offset = 16;
    verify['paddingHorizontal'] = offset;
    tango['content'] = verify;
    tango = golf.bind(options)(tango);
    var _closure1_slot6 = tango;
    tango = 19;
    tango = oscar[tango];
    oscar = report.bind(entity)(tango);
    report = oscar.fileFinishedImporting;
    tango = 'components_native/reactions/BurstReactionFirstSendActionSheet.tsx';
    tango = report.bind(oscar)(tango);
    tango = function(argFoo) { // Original name: BurstReactionFirstSendActionSheet
        entity = argFoo;
        yankee = entity.emoji;
        backup = entity.channelId;
        offset = entity.messageId;
        entity = _closure1_slot6;
        tango = undefined;
        sizing = entity.bind(tango)();
        zulu = _closure1_slot4;
        result = _closure1_slot0;
        foxtrot = _closure1_slot2;
        entity = 6;
        entity = foxtrot[entity];
        entity = result.bind(tango)(entity);
        mike = entity.BottomSheet;
        entity = {};
        oscar = 7;
        oscar = foxtrot[oscar];
        oscar = result.bind(tango)(oscar);
        oscar = oscar.BACKDROP_OPACITY;
        entity['backdropOpacity'] = oscar;
        oscar = sizing.content;
        entity['contentStyles'] = oscar;
        golf = _closure1_slot3;
        oscar = {};
        options = sizing.fill;
        oscar['style'] = options;
        romeo = _closure1_slot1;
        options = 8;
        options = foxtrot[options];
        verify = romeo.bind(tango)(options);
        options = {};
        options['channelId'] = backup;
        options['emoji'] = yankee;
        options['messageId'] = offset;
        offset = 9;
        offset = foxtrot[offset];
        offset = result.bind(tango)(offset);
        offset = offset.ReactionTypes;
        offset = offset.BURST;
        options['reactionType'] = offset;
        options = zulu.bind(tango)(verify, options);
        oscar['children'] = options;
        oscar = zulu.bind(tango)(golf, oscar);
        entity['backdropChildren'] = oscar;
        backup = _closure1_slot7;
        entity['onDismiss'] = backup;
        oscar = _closure1_slot5;
        report = {};
        options = sizing.container;
        report['style'] = options;
        options = {};
        verify = sizing.textContainer;
        options['style'] = verify;
        verify = 10;
        verify = foxtrot[verify];
        offset = romeo.bind(tango)(verify);
        verify = {};
        yankee = sizing.nitroWheel;
        verify['style'] = yankee;
        offset = zulu.bind(tango)(offset, verify);
        verify = new Array(2);
        verify[0] = offset;
        offset = 11;
        yankee = foxtrot[offset];
        yankee = result.bind(tango)(yankee);
        output = yankee.Text;
        yankee = {};
        kilo = 'heading-xl/bold';
        yankee['variant'] = kilo;
        kilo = 12;
        echo = foxtrot[kilo];
        echo = result.bind(tango)(echo);
        source = echo.intl;
        update = source.string;
        echo = foxtrot[kilo];
        echo = result.bind(tango)(echo);
        echo = echo.t;
        echo = echo.NX7HIy;
        echo = update.bind(source)(echo);
        yankee['children'] = echo;
        yankee = zulu.bind(tango)(output, yankee);
        verify[1] = yankee;
        options['children'] = verify;
        verify = oscar.bind(tango)(golf, options);
        options = new Array(3);
        options[0] = verify;
        verify = {};
        yankee = sizing.body;
        verify['style'] = yankee;
        offset = foxtrot[offset];
        offset = result.bind(tango)(offset);
        yankee = offset.Text;
        offset = {};
        sizing = sizing.textContainer;
        offset['style'] = sizing;
        sizing = 'text-md/normal';
        offset['variant'] = sizing;
        sizing = foxtrot[kilo];
        sizing = result.bind(tango)(sizing);
        echo = sizing.intl;
        output = echo.string;
        sizing = foxtrot[kilo];
        sizing = result.bind(tango)(sizing);
        sizing = sizing.t;
        sizing = sizing.2Yp7dH;
        sizing = output.bind(echo)(sizing);
        offset['children'] = sizing;
        offset = zulu.bind(tango)(yankee, offset);
        verify['children'] = offset;
        verify = zulu.bind(tango)(golf, verify);
        options[1] = verify;
        yankee = 13;
        verify = foxtrot[yankee];
        offset = romeo.bind(tango)(verify);
        verify = {};
        sizing = foxtrot[kilo];
        sizing = result.bind(tango)(sizing);
        output = sizing.intl;
        sizing = output.string;
        kilo = foxtrot[kilo];
        kilo = result.bind(tango)(kilo);
        kilo = kilo.t;
        kilo = kilo.+IrDzM;
        kilo = sizing.bind(output)(kilo);
        verify['text'] = kilo;
        verify['onPress'] = backup;
        yankee = foxtrot[yankee];
        yankee = romeo.bind(tango)(yankee);
        yankee = yankee.Colors;
        yankee = yankee.BRAND;
        verify['color'] = yankee;
        verify = zulu.bind(tango)(offset, verify);
        options[2] = verify;
        report['children'] = options;
        report = oscar.bind(tango)(golf, report);
        entity['children'] = report;
        entity = zulu.bind(tango)(mike, entity);
        return entity;
    };
    zulu['default'] = tango;
    mike = function(argFoo) { // Original name: openBurstReactionFirstSendActionSheet
        _fun44736: for(var _fun44736_ip = 0; ; ) switch(_fun44736_ip) {
 0:
            entity = argFoo;
            golf = entity.channelId;
            oscar = entity.messageId;
            report = entity.emoji;
            verify = _closure1_slot1;
            zulu = _closure1_slot2;
            tango = 5;
            options = zulu[tango];
            entity = undefined;
            verify = verify.bind(entity)(options);
            options = verify.hideActionSheet;
            options = options.bind(verify)();
            romeo = _closure1_slot0;
            offset = 14;
            options = zulu[offset];
            yankee = romeo.bind(entity)(options);
            options = yankee.isDismissibleContentDismissed;
            verify = 15;
            zulu = zulu[verify];
            zulu = romeo.bind(entity)(zulu);
            zulu = zulu.DismissibleContent;
            zulu = zulu.SUPER_REACTIONS_FIRST_SENT;
            zulu = options.bind(yankee)(zulu);
            if(zulu) { _fun44736_ip = 239; continue _fun44736 }
 111:
            options = _closure1_slot0;
            zulu = _closure1_slot2;
            offset = zulu[offset];
            yankee = options.bind(entity)(offset);
            offset = yankee.markDismissibleContentAsDismissed;
            verify = zulu[verify];
            verify = options.bind(entity)(verify);
            verify = verify.DismissibleContent;
            verify = verify.SUPER_REACTIONS_FIRST_SENT;
            verify = offset.bind(yankee)(verify);
            verify = _closure1_slot1;
            tango = zulu[tango];
            offset = verify.bind(entity)(tango);
            verify = offset.openLazy;
            tango = 17;
            tango = zulu[tango];
            options = options.bind(entity)(tango);
            tango = 16;
            tango = zulu[tango];
            zulu = zulu.paths;
            options = options.bind(entity)(tango, zulu);
            tango = {};
            tango['channelId'] = golf;
            tango['messageId'] = oscar;
            tango['emoji'] = report;
            zulu = 'BurstReactionFirstSendActionSheet';
            zulu = verify.bind(offset)(options, zulu, tango);
            _fun44736_ip = 294; continue _fun44736;
 239:
            zulu = _closure1_slot1;
            tango = _closure1_slot2;
            mike = 18;
            mike = tango[mike];
            tango = zulu.bind(entity)(mike);
            zulu = tango.dispatch;
            mike = {};
            options = 'BURST_REACTION_EFFECT_SEND';
            mike['type'] = options;
            mike['channelId'] = golf;
            mike['messageId'] = oscar;
            mike['emoji'] = report;
            mike = zulu.bind(tango)(mike);
 294:
            return entity;
        }
    };
    zulu['openBurstReactionFirstSendActionSheet'] = mike;
    return entity;
})();