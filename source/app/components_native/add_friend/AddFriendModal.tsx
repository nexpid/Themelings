// app/components_native/add_friend/AddFriendModal.tsx
export default (function(argFoo, argBar, argBaz, argCorge, _, argFred, argPlugh) {
    report = argBar;
    foxtrot = argBaz;
    zulu = argFred;
    oscar = argPlugh;
    var _closure1_slot0 = report;
    var _closure1_slot1 = foxtrot;
    var _closure1_slot2 = oscar;
    entity = function(argFoo) { // Original name: AddFriendModalScene
        _fun107403: for(var _fun107403_ip = 0; ; ) switch(_fun107403_ip) {
 0:
            entity = argFoo;
            mike = entity.onSkip;
            var _closure2_slot0 = mike;
            entity = entity.sourceMetadata;
            var _closure2_slot1 = entity;
            tango = undefined;
            var _closure2_slot2 = tango;
            entity = function(argFoo) { // Original name: studentHubCTA
                report = argFoo;
                var _closure3_slot0 = report;
                tango = _closure1_slot13;
                options = _closure1_slot0;
                verify = _closure1_slot2;
                entity = 25;
                entity = verify[entity];
                zulu = undefined;
                entity = options.bind(zulu)(entity);
                mike = entity.FormCTA;
                entity = {};
                oscar = function() { // Original name: onPress
                    _fun107405: for(var _fun107405_ip = 0; ; ) switch(_fun107405_ip) {
 0:
                        entity = _closure3_slot0;
                        report = entity.id;
                        tango = _closure1_slot1;
                        oscar = _closure1_slot2;
                        entity = 15;
                        zulu = oscar[entity];
                        entity = undefined;
                        verify = tango.bind(entity)(zulu);
                        options = verify.track;
                        zulu = _closure1_slot10;
                        golf = zulu.ADD_FRIEND_OTHER_PLACES_HUB_CLICKED;
                        zulu = {};
                        zulu['guild_id'] = report;
                        zulu = options.bind(verify)(golf, zulu);
                        zulu = 17;
                        zulu = oscar[zulu];
                        tango = tango.bind(entity)(zulu);
                        zulu = tango.pop;
                        zulu = zulu.bind(tango)();
                        tango = _closure1_slot7;
                        zulu = tango.getDefaultChannel;
                        zulu = zulu.bind(tango)(report);
                        tango = null;
                        oscar = tango == zulu;
                        tango = undefined;
                        if(oscar) { _fun107405_ip = 117; continue _fun107405 }
 112:
                        tango = zulu.id;
 117:
                        zulu = _closure1_slot0;
                        oscar = _closure1_slot2;
                        mike = 24;
                        mike = oscar[mike];
                        zulu = zulu.bind(entity)(mike);
                        mike = zulu.transitionToGuild;
                        mike = mike.bind(zulu)(report, tango);
                        return entity;
                    }
                };
                entity['onPress'] = oscar;
                golf = _closure2_slot2;
                golf = golf.rowContainer;
                entity['style'] = golf;
                offset = report.getIconSource;
                golf = 128;
                golf = offset.bind(report)(golf);
                entity['iconSource'] = golf;
                oscar = _closure2_slot2;
                oscar = oscar.hubIcon;
                entity['iconStyle'] = oscar;
                report = report.name;
                entity['title'] = report;
                report = 19;
                oscar = verify[report];
                oscar = options.bind(zulu)(oscar);
                golf = oscar.intl;
                oscar = golf.string;
                report = verify[report];
                report = options.bind(zulu)(report);
                report = report.t;
                report = report.P3mDzc;
                report = oscar.bind(golf)(report);
                entity['subtitle'] = report;
                entity = tango.bind(zulu)(mike, entity);
                return entity;
            };
            var _closure2_slot8 = entity;
            entity = _closure1_slot15;
            output = entity.bind(tango)();
            _closure2_slot2 = output;
            update = _closure1_slot0;
            source = _closure1_slot2;
            entity = 12;
            zulu = source[entity];
            report = update.bind(tango)(zulu);
            zulu = report.useContactSyncAccount;
            golf = zulu.bind(report)();
            var _closure2_slot3 = golf;
            report = _closure1_slot4;
            zulu = report.useState;
            entity = source[entity];
            oscar = update.bind(tango)(entity);
            entity = oscar.isContactSyncEnabled;
            entity = entity.bind(oscar)(golf);
            entity = !entity;
            report = zulu.bind(report)(entity);
            zulu = _closure1_slot3;
            entity = 2;
            zulu = zulu.bind(tango)(report, entity);
            entity = 0;
            backup = zulu[entity];
            entity = 1;
            entity = zulu[entity];
            var _closure2_slot4 = entity;
            golf = _closure1_slot1;
            entity = 13;
            entity = source[entity];
            zulu = golf.bind(tango)(entity);
            entity = function() {
                zulu = _closure1_slot0;
                tango = _closure1_slot2;
                entity = 14;
                report = tango[entity];
                entity = undefined;
                report = zulu.bind(entity)(report);
                golf = report.ContactSyncBaseExperiment;
                oscar = golf.trackExposure;
                report = {};
                options = 'Add Friend Modal';
                report['location'] = options;
                report = oscar.bind(golf)(report);
                oscar = _closure1_slot1;
                report = 15;
                report = tango[report];
                golf = oscar.bind(entity)(report);
                oscar = golf.track;
                mike = _closure1_slot10;
                report = mike.FRIEND_ADD_VIEWED;
                mike = _closure2_slot1;
                mike = oscar.bind(golf)(report, mike);
                mike = 12;
                mike = tango[mike];
                zulu = zulu.bind(entity)(mike);
                mike = zulu.checkContactPermissions;
                tango = mike.bind(zulu)();
                zulu = tango.then;
                mike = function(argFoo) {
                    _fun107407: for(var _fun107407_ip = 0; ; ) switch(_fun107407_ip) {
 0:
                        tango = argFoo;
                        mike = _closure1_slot12;
                        mike = mike.NOT_DETERMINED;
                        zulu = tango === mike;
                        mike = _closure1_slot12;
                        mike = mike.UNAUTHORIZED;
                        mike = tango === mike;
                        if(zulu) { _fun107407_ip = 40; continue _fun107407 }
 37:
                        zulu = mike;
 40:
                        if(zulu) { _fun107407_ip = 86; continue _fun107407 }
 43:
                        tango = _closure1_slot0;
                        mike = _closure1_slot2;
                        entity = 12;
                        mike = mike[entity];
                        entity = undefined;
                        tango = tango.bind(entity)(mike);
                        mike = tango.isContactSyncEnabled;
                        entity = _closure2_slot3;
                        entity = mike.bind(tango)(entity);
                        zulu = !entity;
 86:
                        mike = _closure2_slot4;
                        entity = undefined;
                        mike = mike.bind(entity)(zulu);
                        return entity;
                    }
                };
                mike = zulu.bind(tango)(mike);
                return entity;
            };
            entity = zulu.bind(tango)(entity);
            entity = 16;
            entity = source[entity];
            zulu = update.bind(tango)(entity);
            entity = zulu.useNavigation;
            entity = entity.bind(zulu)();
            var _closure2_slot5 = entity;
            oscar = _closure1_slot4;
            report = oscar.useCallback;
            zulu = new Array(1);
            zulu[0] = mike;
            mike = function() {
                _fun107408: for(var _fun107408_ip = 0; ; ) switch(_fun107408_ip) {
 0:
                    zulu = _closure2_slot0;
                    mike = null;
                    if(!(mike != zulu)) { _fun107408_ip = 23; continue _fun107408 }
 13:
                    mike = _closure2_slot0;
                    entity = undefined;
                    entity = mike.bind(entity)();
 23:
                    zulu = _closure1_slot1;
                    mike = _closure1_slot2;
                    entity = 17;
                    mike = mike[entity];
                    entity = undefined;
                    zulu = zulu.bind(entity)(mike);
                    mike = zulu.pop;
                    mike = mike.bind(zulu)();
                    return entity;
                }
            };
            options = report.bind(oscar)(mike, zulu);
            var _closure2_slot6 = options;
            oscar = _closure1_slot4;
            report = oscar.useCallback;
            zulu = function() {
                _fun107409: for(var _fun107409_ip = 0; ; ) switch(_fun107409_ip) {
 0:
                    zulu = _closure1_slot9;
                    entity = zulu.getCurrentUser;
                    report = entity.bind(zulu)();
                    entity = null;
                    zulu = entity != report;
                    entity = undefined;
                    verify = undefined;
                    if(!zulu) { _fun107409_ip = 60; continue _fun107409 }
 29:
                    tango = _closure1_slot1;
                    oscar = _closure1_slot2;
                    zulu = 18;
                    zulu = oscar[zulu];
                    tango = tango.bind(entity)(zulu);
                    zulu = tango.getUserTag;
                    verify = zulu.bind(tango)(report);
 60:
                    report = _closure1_slot1;
                    tango = _closure1_slot2;
                    zulu = 15;
                    zulu = tango[zulu];
                    options = report.bind(entity)(zulu);
                    golf = options.track;
                    zulu = _closure1_slot10;
                    oscar = zulu.FRIEND_ADD_VIEWED;
                    report = 'Add Friend Modal';
                    zulu = {'friend_add_type': 'Invite', 'source_page': 'Add Friend Modal'};
                    zulu = golf.bind(options)(oscar, zulu);
                    zulu = _closure1_slot0;
                    mike = 19;
                    oscar = tango[mike];
                    oscar = zulu.bind(entity)(oscar);
                    options = oscar.intl;
                    golf = options.formatToPlainString;
                    mike = tango[mike];
                    mike = zulu.bind(entity)(mike);
                    mike = mike.t;
                    oscar = mike.6E9a1N;
                    mike = {};
                    offset = 'https://discord.com/';
                    mike['url'] = offset;
                    mike['username'] = verify;
                    oscar = golf.bind(options)(oscar, mike);
                    mike = 20;
                    mike = tango[mike];
                    tango = zulu.bind(entity)(mike);
                    zulu = tango.showShareActionSheet;
                    mike = {};
                    mike['message'] = oscar;
                    mike = zulu.bind(tango)(mike, report);
                    return entity;
                }
            };
            mike = new Array(0);
            oscar = report.bind(oscar)(zulu, mike);
            var _closure2_slot7 = oscar;
            report = _closure1_slot4;
            zulu = report.useLayoutEffect;
            mike = new Array(3);
            mike[0] = options;
            mike[1] = oscar;
            mike[2] = entity;
            entity = function() {
                tango = _closure2_slot5;
                zulu = tango.setOptions;
                mike = {};
                entity = function() { // Original name: headerRight
                    tango = _closure1_slot13;
                    options = _closure1_slot0;
                    verify = _closure1_slot2;
                    entity = 21;
                    entity = verify[entity];
                    zulu = undefined;
                    entity = options.bind(zulu)(entity);
                    mike = entity.HeaderActionButton;
                    entity = {};
                    oscar = _closure1_slot1;
                    report = 22;
                    report = verify[report];
                    report = oscar.bind(zulu)(report);
                    entity['source'] = report;
                    report = _closure2_slot7;
                    entity['onPress'] = report;
                    report = 19;
                    oscar = verify[report];
                    oscar = options.bind(zulu)(oscar);
                    golf = oscar.intl;
                    oscar = golf.string;
                    report = verify[report];
                    report = options.bind(zulu)(report);
                    report = report.t;
                    report = report.RDE0SU;
                    report = oscar.bind(golf)(report);
                    entity['accessibilityLabel'] = report;
                    entity = tango.bind(zulu)(mike, entity);
                    return entity;
                };
                mike['headerRight'] = entity;
                golf = _closure1_slot0;
                oscar = _closure1_slot2;
                entity = 23;
                oscar = oscar[entity];
                entity = undefined;
                golf = golf.bind(entity)(oscar);
                oscar = golf.getHeaderCloseButton;
                report = _closure2_slot6;
                report = oscar.bind(golf)(report);
                mike['headerLeft'] = report;
                mike = zulu.bind(tango)(mike);
                return entity;
            };
            entity = zulu.bind(report)(entity, mike);
            entity = global;
            zulu = entity.Object;
            mike = zulu.values;
            report = _closure1_slot8;
            entity = report.getGuilds;
            entity = entity.bind(report)();
            zulu = mike.bind(zulu)(entity);
            mike = zulu.filter;
            entity = function(argFoo) {
                zulu = argFoo;
                mike = zulu.hasFeature;
                entity = _closure1_slot11;
                entity = entity.HUB;
                entity = mike.bind(zulu)(entity);
                return entity;
            };
            foxtrot = mike.bind(zulu)(entity);
            zulu = _closure1_slot14;
            mike = _closure1_slot6;
            entity = {};
            report = 'handled';
            entity['keyboardShouldPersistTaps'] = report;
            options = _closure1_slot13;
            verify = 26;
            report = source[verify];
            report = update.bind(tango)(report);
            oscar = report.Text;
            report = {'style': null, 'accessibilityRole': 'header', 'variant': 'heading-xl/extrabold', 'color': 'header-primary'};
            romeo = output.headerText;
            report['style'] = romeo;
            sizing = 19;
            romeo = source[sizing];
            romeo = update.bind(tango)(romeo);
            result = romeo.intl;
            kilo = result.string;
            romeo = source[sizing];
            romeo = update.bind(tango)(romeo);
            romeo = romeo.t;
            romeo = romeo.GWMTSE;
            romeo = kilo.bind(result)(romeo);
            report['children'] = romeo;
            oscar = options.bind(tango)(oscar, report);
            report = new Array(4);
            report[0] = oscar;
            romeo = _closure1_slot13;
            oscar = source[verify];
            oscar = update.bind(tango)(oscar);
            options = oscar.Text;
            oscar = {'style': null, 'variant': 'text-sm/medium', 'color': 'header-secondary'};
            kilo = output.subheaderText;
            oscar['style'] = kilo;
            kilo = source[sizing];
            kilo = update.bind(tango)(kilo);
            echo = kilo.intl;
            result = echo.string;
            kilo = source[sizing];
            kilo = update.bind(tango)(kilo);
            kilo = kilo.t;
            kilo = kilo.Rn/sLi;
            kilo = result.bind(echo)(kilo);
            oscar['children'] = kilo;
            oscar = romeo.bind(tango)(options, oscar);
            report[1] = oscar;
            options = _closure1_slot13;
            oscar = 27;
            oscar = source[oscar];
            golf = golf.bind(tango)(oscar);
            oscar = {};
            romeo = output.input;
            oscar['style'] = romeo;
            romeo = false;
            oscar['autoFocusInput'] = romeo;
            oscar = options.bind(tango)(golf, oscar);
            report[2] = oscar;
            options = _closure1_slot14;
            golf = _closure1_slot5;
            oscar = {};
            romeo = output.otherOptionsContainer;
            oscar['style'] = romeo;
            kilo = _closure1_slot13;
            verify = source[verify];
            verify = update.bind(tango)(verify);
            romeo = verify.Text;
            verify = {'accessibilityRole': 'header', 'variant': 'eyebrow', 'color': 'header-secondary'};
            result = source[sizing];
            result = update.bind(tango)(result);
            echo = result.intl;
            result = echo.string;
            sizing = source[sizing];
            sizing = update.bind(tango)(sizing);
            sizing = sizing.t;
            sizing = sizing.dukg0d;
            sizing = result.bind(echo)(sizing);
            verify['children'] = sizing;
            romeo = kilo.bind(tango)(romeo, verify);
            verify = new Array(3);
            verify[0] = romeo;
            romeo = null;
            if(!backup) { _fun107403_ip = 813; continue _fun107403 }
 761:
            sizing = _closure1_slot13;
            kilo = _closure1_slot1;
            result = _closure1_slot2;
            backup = 28;
            backup = result[backup];
            kilo = kilo.bind(tango)(backup);
            backup = {};
            output = output.rowContainer;
            backup['style'] = output;
            output = 'Add Friend Modal';
            backup['location'] = output;
            romeo = sizing.bind(tango)(kilo, backup);
 813:
            verify[1] = romeo;
            romeo = _closure1_slot0;
            backup = _closure1_slot2;
            offset = 29;
            offset = backup[offset];
            romeo = romeo.bind(tango)(offset);
            offset = romeo.backToSchoolEnabled;
            offset = offset.bind(romeo)();
            if(!offset) { _fun107403_ip = 867; continue _fun107403 }
 850:
            romeo = foxtrot.map;
            yankee = function(argFoo) {
                zulu = _closure2_slot8;
                mike = undefined;
                entity = argFoo;
                entity = zulu.bind(mike)(entity);
                return entity;
            };
            offset = romeo.bind(foxtrot)(yankee);
 867:
            verify[2] = offset;
            oscar['children'] = verify;
            oscar = options.bind(tango)(golf, oscar);
            report[3] = oscar;
            entity['children'] = report;
            entity = zulu.bind(tango)(mike, entity);
            return entity;
        }
    };
    var _closure1_slot16 = entity;
    entity = global;
    options = entity.Object;
    golf = options.defineProperty;
    tango = {};
    entity = true;
    tango['value'] = entity;
    entity = '__esModule';
    entity = golf.bind(options)(zulu, entity, tango);
    entity = 0;
    tango = oscar[entity];
    entity = undefined;
    tango = foxtrot.bind(entity)(tango);
    var _closure1_slot3 = tango;
    tango = 1;
    golf = oscar[tango];
    tango = argCorge;
    tango = tango.bind(entity)(golf);
    var _closure1_slot4 = tango;
    tango = 2;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    golf = tango.Platform;
    golf = tango.View;
    var _closure1_slot5 = golf;
    kilo = tango.StyleSheet;
    tango = tango.ScrollView;
    var _closure1_slot6 = tango;
    tango = 3;
    tango = oscar[tango];
    tango = foxtrot.bind(entity)(tango);
    var _closure1_slot7 = tango;
    tango = 4;
    tango = oscar[tango];
    tango = foxtrot.bind(entity)(tango);
    var _closure1_slot8 = tango;
    tango = 5;
    tango = oscar[tango];
    tango = foxtrot.bind(entity)(tango);
    var _closure1_slot9 = tango;
    tango = 6;
    tango = oscar[tango];
    golf = report.bind(entity)(tango);
    tango = golf.AnalyticEvents;
    var _closure1_slot10 = tango;
    tango = golf.Fonts;
    golf = golf.GuildFeatures;
    var _closure1_slot11 = golf;
    golf = 7;
    golf = oscar[golf];
    golf = report.bind(entity)(golf);
    golf = golf.ContactPermissions;
    var _closure1_slot12 = golf;
    yankee = 8;
    golf = oscar[yankee];
    golf = report.bind(entity)(golf);
    golf = golf.jsx;
    var _closure1_slot13 = golf;
    golf = oscar[yankee];
    golf = report.bind(entity)(golf);
    golf = golf.jsxs;
    var _closure1_slot14 = golf;
    golf = 9;
    golf = oscar[golf];
    verify = report.bind(entity)(golf);
    options = verify.createStyles;
    golf = {};
    offset = {};
    romeo = 10;
    romeo = oscar[romeo];
    output = foxtrot.bind(entity)(romeo);
    sizing = tango.DISPLAY_EXTRABOLD;
    romeo = 11;
    tango = oscar[romeo];
    tango = foxtrot.bind(entity)(tango);
    tango = tango.colors;
    backup = tango.HEADER_PRIMARY;
    tango = 24;
    echo = output.bind(entity)(sizing, backup, tango);
    update = offset;
    tango = copyDataProperties(update, echo);
    tango = 32;
    backup = 'marginTop';
    offset[backup] = tango;
    backup = 16;
    sizing = 'marginHorizontal';
    offset[sizing] = backup;
    output = 'center';
    sizing = 'textAlign';
    offset[sizing] = output;
    golf['headerText'] = offset;
    offset = {'lineHeight': 18, 'marginVertical': 8, 'marginHorizontal': 16, 'textAlign': 'center'};
    golf['subheaderText'] = offset;
    offset = {'marginTop': 16, 'paddingHorizontal': 16};
    golf['friendInviteContainer'] = offset;
    offset = {'fontSize': 12, 'lineHeight': 16, 'color': null, 'marginTop': 4};
    sizing = 12;
    output = oscar[romeo];
    output = foxtrot.bind(entity)(output);
    output = output.colors;
    output = output.HEADER_SECONDARY;
    offset['color'] = output;
    golf['friendInviteSubtext'] = offset;
    offset = {};
    output = oscar[romeo];
    output = foxtrot.bind(entity)(output);
    output = output.unsafe_rawColors;
    output = output.RED_400;
    offset['color'] = output;
    golf['friendInviteRevoke'] = offset;
    offset = {};
    offset['marginTop'] = sizing;
    kilo = kilo.hairlineWidth;
    offset['height'] = kilo;
    kilo = oscar[romeo];
    kilo = foxtrot.bind(entity)(kilo);
    kilo = kilo.colors;
    kilo = kilo.BACKGROUND_MODIFIER_ACCENT;
    offset['backgroundColor'] = kilo;
    golf['divider'] = offset;
    offset = {};
    offset['marginTop'] = backup;
    golf['input'] = offset;
    offset = {'marginTop': 16, 'paddingHorizontal': 16};
    golf['otherOptionsContainer'] = offset;
    offset = {};
    romeo = oscar[romeo];
    romeo = foxtrot.bind(entity)(romeo);
    romeo = romeo.colors;
    romeo = romeo.BACKGROUND_SECONDARY;
    offset['backgroundColor'] = romeo;
    offset['marginTop'] = yankee;
    golf['rowContainer'] = offset;
    offset = {};
    yankee = 20;
    offset['borderRadius'] = yankee;
    golf['hubIcon'] = offset;
    golf = options.bind(verify)(golf);
    var _closure1_slot15 = golf;
    tango = oscar[tango];
    oscar = report.bind(entity)(tango);
    report = oscar.fileFinishedImporting;
    tango = 'components_native/add_friend/AddFriendModal.tsx';
    tango = report.bind(oscar)(tango);
    mike = function(argFoo) { // Original name: AddFriendModal
        verify = argFoo;
        var _closure2_slot0 = verify;
        report = _closure1_slot1;
        golf = _closure1_slot2;
        zulu = 30;
        zulu = golf[zulu];
        tango = undefined;
        zulu = report.bind(tango)(zulu);
        zulu = zulu.bind(tango)();
        report = zulu.top;
        options = _closure1_slot4;
        oscar = options.useMemo;
        zulu = new Array(1);
        zulu[0] = verify;
        mike = function() {
            zulu = _closure2_slot0;
            mike = function(argFoo) { // Original name: getScreens
                entity = {};
                mike = {};
                zulu = true;
                mike['ignoreKeyboard'] = zulu;
                golf = _closure1_slot0;
                options = _closure1_slot2;
                zulu = 19;
                tango = options[zulu];
                oscar = undefined;
                tango = golf.bind(oscar)(tango);
                report = tango.intl;
                tango = report.string;
                zulu = options[zulu];
                zulu = golf.bind(oscar)(zulu);
                zulu = zulu.t;
                zulu = zulu.w5uwoK;
                zulu = tango.bind(report)(zulu);
                mike['title'] = zulu;
                zulu = argFoo;
                mike['initialParams'] = zulu;
                zulu = function(argFoo) { // Original name: render
                    tango = _closure1_slot13;
                    zulu = _closure1_slot16;
                    mike = {};
                    report = argFoo;
                    oscar = mike;
                    entity = copyDataProperties(oscar, report);
                    entity = undefined;
                    entity = tango.bind(entity)(zulu, mike);
                    return entity;
                };
                mike['render'] = zulu;
                entity['ADD_FRIEND'] = mike;
                return entity;
            };
            entity = undefined;
            entity = mike.bind(entity)(zulu);
            return entity;
        };
        oscar = oscar.bind(options)(mike, zulu);
        zulu = _closure1_slot13;
        mike = _closure1_slot0;
        entity = 31;
        entity = golf[entity];
        entity = mike.bind(tango)(entity);
        mike = entity.Navigator;
        entity = {};
        entity['screens'] = oscar;
        oscar = 'ADD_FRIEND';
        entity['initialRouteName'] = oscar;
        entity['headerStatusBarHeight'] = report;
        entity = zulu.bind(tango)(mike, entity);
        return entity;
    };
    zulu['default'] = mike;
    return entity;
})();