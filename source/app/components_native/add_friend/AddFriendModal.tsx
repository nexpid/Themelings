// app/components_native/add_friend/AddFriendModal.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    report = argBar;
    foxtra = argBaz;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    var _closure1_slot1 = foxtra;
    var _closure1_slot2 = oscard;
    entity = function(argFoo) { // Original name: AddFriendModalScene
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            entity = argFoo;
            michal = entity.onSkip;
            var _closure2_slot0 = michal;
            entity = entity.sourceMetadata;
            var _closure2_slot1 = entity;
            tangon = undefined;
            var _closure2_slot2 = tangon;
            entity = function(argFoo) { // Original name: studentHubCTA
                report = argFoo;
                var _closure3_slot0 = report;
                tangon = _closure1_slot13;
                option = _closure1_slot0;
                verify = _closure1_slot2;
                entity = 25;
                entity = verify[entity];
                zuuluu = undefined;
                entity = option.bind(zuuluu)(entity);
                michal = entity.FormCTA;
                entity = {};
                oscard = function() { // Original name: onPress
                    _fun00003: for(var _fun00004_ip = 0; ; ) switch(_fun00004_ip) {
 0:
                        entity = _closure3_slot0;
                        report = entity.id;
                        tangon = _closure1_slot1;
                        oscard = _closure1_slot2;
                        entity = 15;
                        zuuluu = oscard[entity];
                        entity = undefined;
                        verify = tangon.bind(entity)(zuuluu);
                        option = verify.track;
                        zuuluu = _closure1_slot10;
                        golfie = zuuluu.ADD_FRIEND_OTHER_PLACES_HUB_CLICKED;
                        zuuluu = {};
                        zuuluu['guild_id'] = report;
                        zuuluu = option.bind(verify)(golfie, zuuluu);
                        zuuluu = 17;
                        zuuluu = oscard[zuuluu];
                        tangon = tangon.bind(entity)(zuuluu);
                        zuuluu = tangon.pop;
                        zuuluu = zuuluu.bind(tangon)();
                        tangon = _closure1_slot7;
                        zuuluu = tangon.getDefaultChannel;
                        zuuluu = zuuluu.bind(tangon)(report);
                        tangon = null;
                        oscard = tangon == zuuluu;
                        tangon = undefined;
                        if(oscard) { _fun00004_ip = 117; continue _fun00003 }
 112:
                        tangon = zuuluu.id;
 117:
                        zuuluu = _closure1_slot0;
                        oscard = _closure1_slot2;
                        michal = 24;
                        michal = oscard[michal];
                        zuuluu = zuuluu.bind(entity)(michal);
                        michal = zuuluu.transitionToGuild;
                        michal = michal.bind(zuuluu)(report, tangon);
                        return entity;
                    }
                };
                entity['onPress'] = oscard;
                golfie = _closure2_slot2;
                golfie = golfie.rowContainer;
                entity['style'] = golfie;
                offset = report.getIconSource;
                golfie = 128;
                golfie = offset.bind(report)(golfie);
                entity['iconSource'] = golfie;
                oscard = _closure2_slot2;
                oscard = oscard.hubIcon;
                entity['iconStyle'] = oscard;
                report = report.name;
                entity['title'] = report;
                report = 19;
                oscard = verify[report];
                oscard = option.bind(zuuluu)(oscard);
                golfie = oscard.intl;
                oscard = golfie.string;
                report = verify[report];
                report = option.bind(zuuluu)(report);
                report = report.t;
                report = report.P3mDzc;
                report = oscard.bind(golfie)(report);
                entity['subtitle'] = report;
                entity = tangon.bind(zuuluu)(michal, entity);
                return entity;
            };
            var _closure2_slot8 = entity;
            entity = _closure1_slot15;
            output = entity.bind(tangon)();
            _closure2_slot2 = output;
            update = _closure1_slot0;
            source = _closure1_slot2;
            entity = 12;
            zuuluu = source[entity];
            report = update.bind(tangon)(zuuluu);
            zuuluu = report.useContactSyncAccount;
            golfie = zuuluu.bind(report)();
            var _closure2_slot3 = golfie;
            report = _closure1_slot4;
            zuuluu = report.useState;
            entity = source[entity];
            oscard = update.bind(tangon)(entity);
            entity = oscard.isContactSyncEnabled;
            entity = entity.bind(oscard)(golfie);
            entity = !entity;
            report = zuuluu.bind(report)(entity);
            zuuluu = _closure1_slot3;
            entity = 2;
            zuuluu = zuuluu.bind(tangon)(report, entity);
            entity = 0;
            backup = zuuluu[entity];
            entity = 1;
            entity = zuuluu[entity];
            var _closure2_slot4 = entity;
            golfie = _closure1_slot1;
            entity = 13;
            entity = source[entity];
            zuuluu = golfie.bind(tangon)(entity);
            entity = function() {
                zuuluu = _closure1_slot0;
                tangon = _closure1_slot2;
                entity = 14;
                report = tangon[entity];
                entity = undefined;
                report = zuuluu.bind(entity)(report);
                golfie = report.ContactSyncBaseExperiment;
                oscard = golfie.trackExposure;
                report = {};
                option = 'Add Friend Modal';
                report['location'] = option;
                report = oscard.bind(golfie)(report);
                oscard = _closure1_slot1;
                report = 15;
                report = tangon[report];
                golfie = oscard.bind(entity)(report);
                oscard = golfie.track;
                michal = _closure1_slot10;
                report = michal.FRIEND_ADD_VIEWED;
                michal = _closure2_slot1;
                michal = oscard.bind(golfie)(report, michal);
                michal = 12;
                michal = tangon[michal];
                zuuluu = zuuluu.bind(entity)(michal);
                michal = zuuluu.checkContactPermissions;
                tangon = michal.bind(zuuluu)();
                zuuluu = tangon.then;
                michal = function(argFoo) {
                    _fun00005: for(var _fun00006_ip = 0; ; ) switch(_fun00006_ip) {
 0:
                        tangon = argFoo;
                        michal = _closure1_slot12;
                        michal = michal.NOT_DETERMINED;
                        zuuluu = tangon === michal;
                        michal = _closure1_slot12;
                        michal = michal.UNAUTHORIZED;
                        michal = tangon === michal;
                        if(zuuluu) { _fun00006_ip = 40; continue _fun00005 }
 37:
                        zuuluu = michal;
 40:
                        if(zuuluu) { _fun00006_ip = 86; continue _fun00005 }
 43:
                        tangon = _closure1_slot0;
                        michal = _closure1_slot2;
                        entity = 12;
                        michal = michal[entity];
                        entity = undefined;
                        tangon = tangon.bind(entity)(michal);
                        michal = tangon.isContactSyncEnabled;
                        entity = _closure2_slot3;
                        entity = michal.bind(tangon)(entity);
                        zuuluu = !entity;
 86:
                        michal = _closure2_slot4;
                        entity = undefined;
                        michal = michal.bind(entity)(zuuluu);
                        return entity;
                    }
                };
                michal = zuuluu.bind(tangon)(michal);
                return entity;
            };
            entity = zuuluu.bind(tangon)(entity);
            entity = 16;
            entity = source[entity];
            zuuluu = update.bind(tangon)(entity);
            entity = zuuluu.useNavigation;
            entity = entity.bind(zuuluu)();
            var _closure2_slot5 = entity;
            oscard = _closure1_slot4;
            report = oscard.useCallback;
            zuuluu = new Array(1);
            zuuluu[0] = michal;
            michal = function() {
                _fun00007: for(var _fun00008_ip = 0; ; ) switch(_fun00008_ip) {
 0:
                    zuuluu = _closure2_slot0;
                    michal = null;
                    if(!(michal != zuuluu)) { _fun00008_ip = 23; continue _fun00007 }
 13:
                    michal = _closure2_slot0;
                    entity = undefined;
                    entity = michal.bind(entity)();
 23:
                    zuuluu = _closure1_slot1;
                    michal = _closure1_slot2;
                    entity = 17;
                    michal = michal[entity];
                    entity = undefined;
                    zuuluu = zuuluu.bind(entity)(michal);
                    michal = zuuluu.pop;
                    michal = michal.bind(zuuluu)();
                    return entity;
                }
            };
            option = report.bind(oscard)(michal, zuuluu);
            var _closure2_slot6 = option;
            oscard = _closure1_slot4;
            report = oscard.useCallback;
            zuuluu = function() {
                _fun00009: for(var _fun00010_ip = 0; ; ) switch(_fun00010_ip) {
 0:
                    zuuluu = _closure1_slot9;
                    entity = zuuluu.getCurrentUser;
                    report = entity.bind(zuuluu)();
                    entity = null;
                    zuuluu = entity != report;
                    entity = undefined;
                    verify = undefined;
                    if(!zuuluu) { _fun00010_ip = 60; continue _fun00009 }
 29:
                    tangon = _closure1_slot1;
                    oscard = _closure1_slot2;
                    zuuluu = 18;
                    zuuluu = oscard[zuuluu];
                    tangon = tangon.bind(entity)(zuuluu);
                    zuuluu = tangon.getUserTag;
                    verify = zuuluu.bind(tangon)(report);
 60:
                    report = _closure1_slot1;
                    tangon = _closure1_slot2;
                    zuuluu = 15;
                    zuuluu = tangon[zuuluu];
                    option = report.bind(entity)(zuuluu);
                    golfie = option.track;
                    zuuluu = _closure1_slot10;
                    oscard = zuuluu.FRIEND_ADD_VIEWED;
                    report = 'Add Friend Modal';
                    zuuluu = {'friend_add_type': 'Invite', 'source_page': 'Add Friend Modal'};
                    zuuluu = golfie.bind(option)(oscard, zuuluu);
                    zuuluu = _closure1_slot0;
                    michal = 19;
                    oscard = tangon[michal];
                    oscard = zuuluu.bind(entity)(oscard);
                    option = oscard.intl;
                    golfie = option.formatToPlainString;
                    michal = tangon[michal];
                    michal = zuuluu.bind(entity)(michal);
                    michal = michal.t;
                    oscard = michal.6E9a1N;
                    michal = {};
                    offset = 'https://discord.com/';
                    michal['url'] = offset;
                    michal['username'] = verify;
                    oscard = golfie.bind(option)(oscard, michal);
                    michal = 20;
                    michal = tangon[michal];
                    tangon = zuuluu.bind(entity)(michal);
                    zuuluu = tangon.showShareActionSheet;
                    michal = {};
                    michal['message'] = oscard;
                    michal = zuuluu.bind(tangon)(michal, report);
                    return entity;
                }
            };
            michal = new Array(0);
            oscard = report.bind(oscard)(zuuluu, michal);
            var _closure2_slot7 = oscard;
            report = _closure1_slot4;
            zuuluu = report.useLayoutEffect;
            michal = new Array(3);
            michal[0] = option;
            michal[1] = oscard;
            michal[2] = entity;
            entity = function() {
                tangon = _closure2_slot5;
                zuuluu = tangon.setOptions;
                michal = {};
                entity = function() { // Original name: headerRight
                    tangon = _closure1_slot13;
                    option = _closure1_slot0;
                    verify = _closure1_slot2;
                    entity = 21;
                    entity = verify[entity];
                    zuuluu = undefined;
                    entity = option.bind(zuuluu)(entity);
                    michal = entity.HeaderActionButton;
                    entity = {};
                    oscard = _closure1_slot1;
                    report = 22;
                    report = verify[report];
                    report = oscard.bind(zuuluu)(report);
                    entity['source'] = report;
                    report = _closure2_slot7;
                    entity['onPress'] = report;
                    report = 19;
                    oscard = verify[report];
                    oscard = option.bind(zuuluu)(oscard);
                    golfie = oscard.intl;
                    oscard = golfie.string;
                    report = verify[report];
                    report = option.bind(zuuluu)(report);
                    report = report.t;
                    report = report.RDE0SU;
                    report = oscard.bind(golfie)(report);
                    entity['accessibilityLabel'] = report;
                    entity = tangon.bind(zuuluu)(michal, entity);
                    return entity;
                };
                michal['headerRight'] = entity;
                golfie = _closure1_slot0;
                oscard = _closure1_slot2;
                entity = 23;
                oscard = oscard[entity];
                entity = undefined;
                golfie = golfie.bind(entity)(oscard);
                oscard = golfie.getHeaderCloseButton;
                report = _closure2_slot6;
                report = oscard.bind(golfie)(report);
                michal['headerLeft'] = report;
                michal = zuuluu.bind(tangon)(michal);
                return entity;
            };
            entity = zuuluu.bind(report)(entity, michal);
            entity = global;
            zuuluu = entity.Object;
            michal = zuuluu.values;
            report = _closure1_slot8;
            entity = report.getGuilds;
            entity = entity.bind(report)();
            zuuluu = michal.bind(zuuluu)(entity);
            michal = zuuluu.filter;
            entity = function(argFoo) {
                zuuluu = argFoo;
                michal = zuuluu.hasFeature;
                entity = _closure1_slot11;
                entity = entity.HUB;
                entity = michal.bind(zuuluu)(entity);
                return entity;
            };
            foxtra = michal.bind(zuuluu)(entity);
            zuuluu = _closure1_slot14;
            michal = _closure1_slot6;
            entity = {};
            report = 'handled';
            entity['keyboardShouldPersistTaps'] = report;
            option = _closure1_slot13;
            verify = 26;
            report = source[verify];
            report = update.bind(tangon)(report);
            oscard = report.Text;
            report = {'style': null, 'accessibilityRole': 'header', 'variant': 'heading-xl/extrabold', 'color': 'header-primary'};
            romeon = output.headerText;
            report['style'] = romeon;
            sizing = 19;
            romeon = source[sizing];
            romeon = update.bind(tangon)(romeon);
            result = romeon.intl;
            kiloes = result.string;
            romeon = source[sizing];
            romeon = update.bind(tangon)(romeon);
            romeon = romeon.t;
            romeon = romeon.GWMTSE;
            romeon = kiloes.bind(result)(romeon);
            report['children'] = romeon;
            oscard = option.bind(tangon)(oscard, report);
            report = new Array(4);
            report[0] = oscard;
            romeon = _closure1_slot13;
            oscard = source[verify];
            oscard = update.bind(tangon)(oscard);
            option = oscard.Text;
            oscard = {'style': null, 'variant': 'text-sm/medium', 'color': 'header-secondary'};
            kiloes = output.subheaderText;
            oscard['style'] = kiloes;
            kiloes = source[sizing];
            kiloes = update.bind(tangon)(kiloes);
            echoed = kiloes.intl;
            result = echoed.string;
            kiloes = source[sizing];
            kiloes = update.bind(tangon)(kiloes);
            kiloes = kiloes.t;
            kiloes = kiloes.Rn/sLi;
            kiloes = result.bind(echoed)(kiloes);
            oscard['children'] = kiloes;
            oscard = romeon.bind(tangon)(option, oscard);
            report[1] = oscard;
            option = _closure1_slot13;
            oscard = 27;
            oscard = source[oscard];
            golfie = golfie.bind(tangon)(oscard);
            oscard = {};
            romeon = output.input;
            oscard['style'] = romeon;
            romeon = false;
            oscard['autoFocusInput'] = romeon;
            oscard = option.bind(tangon)(golfie, oscard);
            report[2] = oscard;
            option = _closure1_slot14;
            golfie = _closure1_slot5;
            oscard = {};
            romeon = output.otherOptionsContainer;
            oscard['style'] = romeon;
            kiloes = _closure1_slot13;
            verify = source[verify];
            verify = update.bind(tangon)(verify);
            romeon = verify.Text;
            verify = {'accessibilityRole': 'header', 'variant': 'eyebrow', 'color': 'header-secondary'};
            result = source[sizing];
            result = update.bind(tangon)(result);
            echoed = result.intl;
            result = echoed.string;
            sizing = source[sizing];
            sizing = update.bind(tangon)(sizing);
            sizing = sizing.t;
            sizing = sizing.dukg0d;
            sizing = result.bind(echoed)(sizing);
            verify['children'] = sizing;
            romeon = kiloes.bind(tangon)(romeon, verify);
            verify = new Array(3);
            verify[0] = romeon;
            romeon = null;
            if(!backup) { _fun00002_ip = 809; continue _fun00001 }
 757:
            sizing = _closure1_slot13;
            kiloes = _closure1_slot1;
            result = _closure1_slot2;
            backup = 28;
            backup = result[backup];
            kiloes = kiloes.bind(tangon)(backup);
            backup = {};
            output = output.rowContainer;
            backup['style'] = output;
            output = 'Add Friend Modal';
            backup['location'] = output;
            romeon = sizing.bind(tangon)(kiloes, backup);
 809:
            verify[1] = romeon;
            romeon = _closure1_slot0;
            backup = _closure1_slot2;
            offset = 29;
            offset = backup[offset];
            romeon = romeon.bind(tangon)(offset);
            offset = romeon.backToSchoolEnabled;
            offset = offset.bind(romeon)();
            if(!offset) { _fun00002_ip = 863; continue _fun00001 }
 846:
            romeon = foxtra.map;
            yankee = function(argFoo) {
                zuuluu = _closure2_slot8;
                michal = undefined;
                entity = argFoo;
                entity = zuuluu.bind(michal)(entity);
                return entity;
            };
            offset = romeon.bind(foxtra)(yankee);
 863:
            verify[2] = offset;
            oscard['children'] = verify;
            oscard = option.bind(tangon)(golfie, oscard);
            report[3] = oscard;
            entity['children'] = report;
            entity = zuuluu.bind(tangon)(michal, entity);
            return entity;
        }
    };
    var _closure1_slot16 = entity;
    entity = global;
    option = entity.Object;
    golfie = option.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(option)(zuuluu, entity, tangon);
    entity = 0;
    tangon = oscard[entity];
    entity = undefined;
    tangon = foxtra.bind(entity)(tangon);
    var _closure1_slot3 = tangon;
    tangon = 1;
    golfie = oscard[tangon];
    tangon = argCor;
    tangon = tangon.bind(entity)(golfie);
    var _closure1_slot4 = tangon;
    tangon = 2;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    golfie = tangon.Platform;
    golfie = tangon.View;
    var _closure1_slot5 = golfie;
    kiloes = tangon.StyleSheet;
    tangon = tangon.ScrollView;
    var _closure1_slot6 = tangon;
    tangon = 3;
    tangon = oscard[tangon];
    tangon = foxtra.bind(entity)(tangon);
    var _closure1_slot7 = tangon;
    tangon = 4;
    tangon = oscard[tangon];
    tangon = foxtra.bind(entity)(tangon);
    var _closure1_slot8 = tangon;
    tangon = 5;
    tangon = oscard[tangon];
    tangon = foxtra.bind(entity)(tangon);
    var _closure1_slot9 = tangon;
    tangon = 6;
    tangon = oscard[tangon];
    golfie = report.bind(entity)(tangon);
    tangon = golfie.AnalyticEvents;
    var _closure1_slot10 = tangon;
    tangon = golfie.Fonts;
    golfie = golfie.GuildFeatures;
    var _closure1_slot11 = golfie;
    golfie = 7;
    golfie = oscard[golfie];
    golfie = report.bind(entity)(golfie);
    golfie = golfie.ContactPermissions;
    var _closure1_slot12 = golfie;
    yankee = 8;
    golfie = oscard[yankee];
    golfie = report.bind(entity)(golfie);
    golfie = golfie.jsx;
    var _closure1_slot13 = golfie;
    golfie = oscard[yankee];
    golfie = report.bind(entity)(golfie);
    golfie = golfie.jsxs;
    var _closure1_slot14 = golfie;
    golfie = 9;
    golfie = oscard[golfie];
    verify = report.bind(entity)(golfie);
    option = verify.createStyles;
    golfie = {};
    offset = {};
    romeon = 10;
    romeon = oscard[romeon];
    output = foxtra.bind(entity)(romeon);
    sizing = tangon.DISPLAY_EXTRABOLD;
    romeon = 11;
    tangon = oscard[romeon];
    tangon = foxtra.bind(entity)(tangon);
    tangon = tangon.colors;
    backup = tangon.HEADER_PRIMARY;
    tangon = 24;
    echoed = output.bind(entity)(sizing, backup, tangon);
    update = offset;
    tangon = copyDataProperties(update, echoed);
    tangon = 32;
    backup = 'marginTop';
    offset[backup] = tangon;
    backup = 16;
    sizing = 'marginHorizontal';
    offset[sizing] = backup;
    output = 'center';
    sizing = 'textAlign';
    offset[sizing] = output;
    golfie['headerText'] = offset;
    offset = {'lineHeight': 18, 'marginVertical': 8, 'marginHorizontal': 16, 'textAlign': 'center'};
    golfie['subheaderText'] = offset;
    offset = {'marginTop': 16, 'paddingHorizontal': 16};
    golfie['friendInviteContainer'] = offset;
    offset = {'fontSize': 12, 'lineHeight': 16, 'color': null, 'marginTop': 4};
    sizing = 12;
    output = oscard[romeon];
    output = foxtra.bind(entity)(output);
    output = output.colors;
    output = output.HEADER_SECONDARY;
    offset['color'] = output;
    golfie['friendInviteSubtext'] = offset;
    offset = {};
    output = oscard[romeon];
    output = foxtra.bind(entity)(output);
    output = output.unsafe_rawColors;
    output = output.RED_400;
    offset['color'] = output;
    golfie['friendInviteRevoke'] = offset;
    offset = {};
    offset['marginTop'] = sizing;
    kiloes = kiloes.hairlineWidth;
    offset['height'] = kiloes;
    kiloes = oscard[romeon];
    kiloes = foxtra.bind(entity)(kiloes);
    kiloes = kiloes.colors;
    kiloes = kiloes.BACKGROUND_MODIFIER_ACCENT;
    offset['backgroundColor'] = kiloes;
    golfie['divider'] = offset;
    offset = {};
    offset['marginTop'] = backup;
    golfie['input'] = offset;
    offset = {'marginTop': 16, 'paddingHorizontal': 16};
    golfie['otherOptionsContainer'] = offset;
    offset = {};
    romeon = oscard[romeon];
    romeon = foxtra.bind(entity)(romeon);
    romeon = romeon.colors;
    romeon = romeon.BACKGROUND_SECONDARY;
    offset['backgroundColor'] = romeon;
    offset['marginTop'] = yankee;
    golfie['rowContainer'] = offset;
    offset = {};
    yankee = 20;
    offset['borderRadius'] = yankee;
    golfie['hubIcon'] = offset;
    golfie = option.bind(verify)(golfie);
    var _closure1_slot15 = golfie;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'components_native/add_friend/AddFriendModal.tsx';
    tangon = report.bind(oscard)(tangon);
    michal = function(argFoo) { // Original name: AddFriendModal
        verify = argFoo;
        var _closure2_slot0 = verify;
        report = _closure1_slot1;
        golfie = _closure1_slot2;
        zuuluu = 30;
        zuuluu = golfie[zuuluu];
        tangon = undefined;
        zuuluu = report.bind(tangon)(zuuluu);
        zuuluu = zuuluu.bind(tangon)();
        report = zuuluu.top;
        option = _closure1_slot4;
        oscard = option.useMemo;
        zuuluu = new Array(1);
        zuuluu[0] = verify;
        michal = function() {
            zuuluu = _closure2_slot0;
            michal = function(argFoo) { // Original name: getScreens
                entity = {};
                michal = {};
                zuuluu = true;
                michal['ignoreKeyboard'] = zuuluu;
                golfie = _closure1_slot0;
                option = _closure1_slot2;
                zuuluu = 19;
                tangon = option[zuuluu];
                oscard = undefined;
                tangon = golfie.bind(oscard)(tangon);
                report = tangon.intl;
                tangon = report.string;
                zuuluu = option[zuuluu];
                zuuluu = golfie.bind(oscard)(zuuluu);
                zuuluu = zuuluu.t;
                zuuluu = zuuluu.w5uwoK;
                zuuluu = tangon.bind(report)(zuuluu);
                michal['title'] = zuuluu;
                zuuluu = argFoo;
                michal['initialParams'] = zuuluu;
                zuuluu = function(argFoo) { // Original name: render
                    tangon = _closure1_slot13;
                    zuuluu = _closure1_slot16;
                    michal = {};
                    report = argFoo;
                    oscard = michal;
                    entity = copyDataProperties(oscard, report);
                    entity = undefined;
                    entity = tangon.bind(entity)(zuuluu, michal);
                    return entity;
                };
                michal['render'] = zuuluu;
                entity['ADD_FRIEND'] = michal;
                return entity;
            };
            entity = undefined;
            entity = michal.bind(entity)(zuuluu);
            return entity;
        };
        oscard = oscard.bind(option)(michal, zuuluu);
        zuuluu = _closure1_slot13;
        michal = _closure1_slot0;
        entity = 31;
        entity = golfie[entity];
        entity = michal.bind(tangon)(entity);
        michal = entity.Navigator;
        entity = {};
        entity['screens'] = oscard;
        oscard = 'ADD_FRIEND';
        entity['initialRouteName'] = oscard;
        entity['headerStatusBarHeight'] = report;
        entity = zuuluu.bind(tangon)(michal, entity);
        return entity;
    };
    zuuluu['default'] = michal;
    return entity;
})();