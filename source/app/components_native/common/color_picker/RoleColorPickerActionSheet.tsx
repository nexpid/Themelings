// app/components_native/common/color_picker/RoleColorPickerActionSheet.tsx
export default (function(argFoo, argBar, argBaz, argCorge, _, argFred, argPlugh) {
    report = argBar;
    yankee = argBaz;
    zulu = argFred;
    oscar = argPlugh;
    var _closure1_slot0 = report;
    var _closure1_slot1 = yankee;
    var _closure1_slot2 = oscar;
    entity = global;
    options = entity.Object;
    golf = options.defineProperty;
    tango = {};
    entity = true;
    tango['value'] = entity;
    entity = '__esModule';
    entity = golf.bind(options)(zulu, entity, tango);
    verify = 0;
    tango = oscar[verify];
    entity = undefined;
    tango = yankee.bind(entity)(tango);
    var _closure1_slot3 = tango;
    tango = 1;
    golf = oscar[tango];
    tango = argCorge;
    tango = tango.bind(entity)(golf);
    var _closure1_slot4 = tango;
    tango = 2;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    golf = tango.View;
    var _closure1_slot5 = golf;
    tango = tango.Pressable;
    var _closure1_slot6 = tango;
    tango = 3;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    golf = tango.DEFAULT_ROLE_COLOR;
    var _closure1_slot7 = golf;
    foxtrot = tango.ROLE_COLORS;
    tango = 4;
    golf = oscar[tango];
    golf = report.bind(entity)(golf);
    golf = golf.jsx;
    var _closure1_slot8 = golf;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.jsxs;
    var _closure1_slot9 = tango;
    golf = foxtrot.slice;
    tango = 5;
    kilo = golf.bind(foxtrot)(verify, tango);
    golf = new Array(0);
    sizing = golf;
    backup = 0;
    backup = arraySpread(sizing, kilo, backup);
    options = foxtrot.slice;
    offset = 10;
    romeo = 15;
    kilo = options.bind(foxtrot)(offset, romeo);
    sizing = golf;
    backup = arraySpread(sizing, kilo, backup);
    options = foxtrot.slice;
    kilo = options.bind(foxtrot)(tango, offset);
    sizing = golf;
    backup = arraySpread(sizing, kilo, backup);
    offset = foxtrot.slice;
    options = 18;
    kilo = offset.bind(foxtrot)(romeo, options);
    sizing = golf;
    options = arraySpread(sizing, kilo, backup);
    var _closure1_slot10 = golf;
    tango = oscar[tango];
    options = report.bind(entity)(tango);
    golf = options.createStyles;
    tango = {};
    verify = {'paddingVertical': null, 'flexGrow': 1, 'justifyContent': 'center', 'alignItems': 'center'};
    offset = 6;
    romeo = oscar[offset];
    romeo = yankee.bind(entity)(romeo);
    romeo = romeo.spacing;
    romeo = romeo.PX_16;
    verify['paddingVertical'] = romeo;
    tango['body'] = verify;
    verify = {'flexGrow': 1, 'flexDirection': 'row', 'flexWrap': 'wrap', 'justifyContent': 'center', 'maxWidth': 340};
    offset = oscar[offset];
    offset = yankee.bind(entity)(offset);
    offset = offset.spacing;
    offset = offset.PX_16;
    verify['marginBottom'] = offset;
    tango['colorWrap'] = verify;
    tango = golf.bind(options)(tango);
    var _closure1_slot11 = tango;
    tango = 16;
    tango = oscar[tango];
    oscar = report.bind(entity)(tango);
    report = oscar.fileFinishedImporting;
    tango = 'components_native/common/color_picker/RoleColorPickerActionSheet.tsx';
    tango = report.bind(oscar)(tango);
    mike = function(argFoo) { // Original name: RoleColorPickerActionSheet
        entity = argFoo;
        oscar = entity.color;
        var _closure2_slot0 = oscar;
        entity = entity.onSelect;
        var _closure2_slot1 = entity;
        mike = _closure1_slot11;
        tango = undefined;
        offset = mike.bind(tango)();
        report = _closure1_slot4;
        mike = report.useState;
        golf = mike.bind(report)(oscar);
        zulu = _closure1_slot3;
        mike = 2;
        golf = zulu.bind(tango)(golf, mike);
        mike = 0;
        mike = golf[mike];
        var _closure2_slot2 = mike;
        zulu = 1;
        zulu = golf[zulu];
        var _closure2_slot3 = zulu;
        kilo = _closure1_slot0;
        sizing = _closure1_slot2;
        zulu = 7;
        zulu = sizing[zulu];
        golf = kilo.bind(tango)(zulu);
        zulu = golf.useIsWindowSmall;
        zulu = zulu.bind(golf)();
        var _closure2_slot4 = zulu;
        options = report.useMemo;
        golf = new Array(1);
        golf[0] = zulu;
        zulu = function() {
            _fun114324: for(var _fun114324_ip = 0; ; ) switch(_fun114324_ip) {
 0:
                entity = _closure2_slot4;
                tango = _closure1_slot0;
                zulu = _closure1_slot2;
                mike = 8;
                zulu = zulu[mike];
                mike = undefined;
                mike = tango.bind(mike)(zulu);
                mike = mike.styles;
                zulu = mike.colorBlock;
                if(entity) { _fun114324_ip = 52; continue _fun114324 }
 47:
                entity = zulu;
                _fun114324_ip = 88; continue _fun114324;
 52:
                mike = {};
                oscar = mike;
                report = zulu;
                zulu = copyDataProperties(oscar, report);
                tango = 38;
                zulu = 'minWidth';
                mike[zulu] = tango;
                zulu = 'height';
                mike[zulu] = tango;
                entity = mike;
 88:
                return entity;
            }
        };
        result = options.bind(report)(zulu, golf);
        var _closure2_slot5 = result;
        golf = report.useCallback;
        zulu = new Array(2);
        zulu[0] = mike;
        zulu[1] = entity;
        mike = function() {
            zulu = _closure2_slot1;
            mike = _closure2_slot2;
            entity = undefined;
            mike = zulu.bind(entity)(mike);
            zulu = _closure1_slot1;
            tango = _closure1_slot2;
            mike = 9;
            mike = tango[mike];
            zulu = zulu.bind(entity)(mike);
            mike = zulu.hideActionSheet;
            mike = mike.bind(zulu)();
            return entity;
        };
        backup = golf.bind(report)(mike, zulu);
        golf = report.useCallback;
        zulu = function(argFoo) {
            zulu = _closure2_slot3;
            entity = undefined;
            mike = argFoo;
            mike = zulu.bind(entity)(mike);
            return entity;
        };
        mike = new Array(0);
        mike = golf.bind(report)(zulu, mike);
        var _closure2_slot6 = mike;
        zulu = report.useCallback;
        mike = new Array(2);
        mike[0] = oscar;
        mike[1] = entity;
        entity = function() {
            zulu = _closure1_slot1;
            mike = _closure1_slot2;
            entity = 10;
            mike = mike[entity];
            entity = undefined;
            zulu = zulu.bind(entity)(mike);
            mike = {};
            report = _closure2_slot0;
            mike['color'] = report;
            tango = _closure2_slot1;
            mike['onSelect'] = tango;
            mike = zulu.bind(entity)(mike);
            return entity;
        };
        output = zulu.bind(report)(entity, mike);
        zulu = _closure1_slot8;
        entity = 11;
        entity = sizing[entity];
        entity = kilo.bind(tango)(entity);
        mike = entity.BottomSheet;
        entity = {};
        report = 12;
        report = sizing[report];
        report = kilo.bind(tango)(report);
        oscar = report.BottomSheetTitleHeader;
        report = {};
        romeo = 13;
        golf = sizing[romeo];
        golf = kilo.bind(tango)(golf);
        verify = golf.intl;
        options = verify.string;
        golf = sizing[romeo];
        golf = kilo.bind(tango)(golf);
        golf = golf.t;
        golf = golf.WTqQ5e;
        golf = options.bind(verify)(golf);
        report['title'] = golf;
        verify = 14;
        golf = sizing[verify];
        golf = kilo.bind(tango)(golf);
        options = golf.Button;
        golf = {'variant': 'secondary', 'size': 'sm'};
        echo = sizing[romeo];
        echo = kilo.bind(tango)(echo);
        source = echo.intl;
        update = source.string;
        echo = sizing[romeo];
        echo = kilo.bind(tango)(echo);
        echo = echo.t;
        echo = echo.R3BPHx;
        echo = update.bind(source)(echo);
        golf['text'] = echo;
        golf['onPress'] = backup;
        golf = zulu.bind(tango)(options, golf);
        report['trailing'] = golf;
        report = zulu.bind(tango)(oscar, report);
        entity['header'] = report;
        golf = _closure1_slot9;
        oscar = _closure1_slot5;
        report = {};
        options = offset.body;
        report['style'] = options;
        options = {};
        offset = offset.colorWrap;
        options['style'] = offset;
        echo = _closure1_slot10;
        backup = echo.map;
        offset = function(argFoo) {
            report = argFoo;
            tango = _closure1_slot8;
            mike = _closure1_slot1;
            zulu = _closure1_slot2;
            entity = 8;
            entity = zulu[entity];
            zulu = undefined;
            mike = mike.bind(zulu)(entity);
            entity = {};
            entity['color'] = report;
            golf = _closure2_slot5;
            entity['style'] = golf;
            golf = _closure2_slot2;
            golf = report === golf;
            entity['selected'] = golf;
            oscar = _closure2_slot6;
            entity['onSelect'] = oscar;
            entity = tango.bind(zulu)(mike, entity, report);
            return entity;
        };
        backup = backup.bind(echo)(offset);
        offset = new Array(2);
        offset[0] = backup;
        backup = _closure1_slot6;
        foxtrot = {};
        foxtrot['style'] = result;
        foxtrot['onPress'] = output;
        output = 15;
        output = sizing[output];
        output = kilo.bind(tango)(output);
        result = output.EyeDropperIcon;
        output = {};
        echo = 'lg';
        output['size'] = echo;
        output = zulu.bind(tango)(result, output);
        foxtrot['children'] = output;
        foxtrot = zulu.bind(tango)(backup, foxtrot);
        offset[1] = foxtrot;
        options['children'] = offset;
        offset = golf.bind(tango)(oscar, options);
        options = new Array(2);
        options[0] = offset;
        verify = sizing[verify];
        verify = kilo.bind(tango)(verify);
        offset = verify.Button;
        verify = {};
        foxtrot = sizing[romeo];
        foxtrot = kilo.bind(tango)(foxtrot);
        backup = foxtrot.intl;
        foxtrot = backup.string;
        romeo = sizing[romeo];
        romeo = kilo.bind(tango)(romeo);
        romeo = romeo.t;
        romeo = romeo.yBZMsb;
        romeo = foxtrot.bind(backup)(romeo);
        verify['text'] = romeo;
        yankee = function() { // Original name: onPress
            zulu = _closure2_slot3;
            mike = _closure1_slot7;
            entity = undefined;
            mike = zulu.bind(entity)(mike);
            return entity;
        };
        verify['onPress'] = yankee;
        verify = zulu.bind(tango)(offset, verify);
        options[1] = verify;
        report['children'] = options;
        report = golf.bind(tango)(oscar, report);
        entity['children'] = report;
        entity = zulu.bind(tango)(mike, entity);
        return entity;
    };
    zulu['default'] = mike;
    return entity;
})();