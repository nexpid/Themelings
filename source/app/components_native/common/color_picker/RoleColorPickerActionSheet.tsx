// app/components_native/common/color_picker/RoleColorPickerActionSheet.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    report = argBar;
    yankee = argBaz;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    var _closure1_slot1 = yankee;
    var _closure1_slot2 = oscard;
    entity = global;
    option = entity.Object;
    golfie = option.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(option)(zuuluu, entity, tangon);
    verify = 0;
    tangon = oscard[verify];
    entity = undefined;
    tangon = yankee.bind(entity)(tangon);
    var _closure1_slot3 = tangon;
    tangon = 1;
    golfie = oscard[tangon];
    tangon = argCor;
    tangon = tangon.bind(entity)(golfie);
    var _closure1_slot4 = tangon;
    tangon = 2;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    golfie = tangon.View;
    var _closure1_slot5 = golfie;
    tangon = tangon.Pressable;
    var _closure1_slot6 = tangon;
    tangon = 3;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    golfie = tangon.DEFAULT_ROLE_COLOR;
    var _closure1_slot7 = golfie;
    foxtra = tangon.ROLE_COLORS;
    tangon = 4;
    golfie = oscard[tangon];
    golfie = report.bind(entity)(golfie);
    golfie = golfie.jsx;
    var _closure1_slot8 = golfie;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.jsxs;
    var _closure1_slot9 = tangon;
    golfie = foxtra.slice;
    tangon = 5;
    kiloes = golfie.bind(foxtra)(verify, tangon);
    golfie = new Array(0);
    sizing = golfie;
    backup = 0;
    backup = arraySpread(sizing, kiloes, backup);
    option = foxtra.slice;
    offset = 10;
    romeon = 15;
    kiloes = option.bind(foxtra)(offset, romeon);
    sizing = golfie;
    backup = arraySpread(sizing, kiloes, backup);
    option = foxtra.slice;
    kiloes = option.bind(foxtra)(tangon, offset);
    sizing = golfie;
    backup = arraySpread(sizing, kiloes, backup);
    offset = foxtra.slice;
    option = 18;
    kiloes = offset.bind(foxtra)(romeon, option);
    sizing = golfie;
    option = arraySpread(sizing, kiloes, backup);
    var _closure1_slot10 = golfie;
    tangon = oscard[tangon];
    option = report.bind(entity)(tangon);
    golfie = option.createStyles;
    tangon = {};
    verify = {'paddingVertical': null, 'flexGrow': 1, 'justifyContent': 'center', 'alignItems': 'center'};
    offset = 6;
    romeon = oscard[offset];
    romeon = yankee.bind(entity)(romeon);
    romeon = romeon.spacing;
    romeon = romeon.PX_16;
    verify['paddingVertical'] = romeon;
    tangon['body'] = verify;
    verify = {'flexGrow': 1, 'flexDirection': 'row', 'flexWrap': 'wrap', 'justifyContent': 'center', 'maxWidth': 340};
    offset = oscard[offset];
    offset = yankee.bind(entity)(offset);
    offset = offset.spacing;
    offset = offset.PX_16;
    verify['marginBottom'] = offset;
    tangon['colorWrap'] = verify;
    tangon = golfie.bind(option)(tangon);
    var _closure1_slot11 = tangon;
    tangon = 16;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'components_native/common/color_picker/RoleColorPickerActionSheet.tsx';
    tangon = report.bind(oscard)(tangon);
    michal = function(argFoo) { // Original name: RoleColorPickerActionSheet
        entity = argFoo;
        oscard = entity.color;
        var _closure2_slot0 = oscard;
        entity = entity.onSelect;
        var _closure2_slot1 = entity;
        michal = _closure1_slot11;
        tangon = undefined;
        offset = michal.bind(tangon)();
        report = _closure1_slot4;
        michal = report.useState;
        golfie = michal.bind(report)(oscard);
        zuuluu = _closure1_slot3;
        michal = 2;
        golfie = zuuluu.bind(tangon)(golfie, michal);
        michal = 0;
        michal = golfie[michal];
        var _closure2_slot2 = michal;
        zuuluu = 1;
        zuuluu = golfie[zuuluu];
        var _closure2_slot3 = zuuluu;
        kiloes = _closure1_slot0;
        sizing = _closure1_slot2;
        zuuluu = 7;
        zuuluu = sizing[zuuluu];
        golfie = kiloes.bind(tangon)(zuuluu);
        zuuluu = golfie.useIsWindowSmall;
        zuuluu = zuuluu.bind(golfie)();
        var _closure2_slot4 = zuuluu;
        option = report.useMemo;
        golfie = new Array(1);
        golfie[0] = zuuluu;
        zuuluu = function() {
            _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
                entity = _closure2_slot4;
                tangon = _closure1_slot0;
                zuuluu = _closure1_slot2;
                michal = 8;
                zuuluu = zuuluu[michal];
                michal = undefined;
                michal = tangon.bind(michal)(zuuluu);
                michal = michal.styles;
                zuuluu = michal.colorBlock;
                if(entity) { _fun00002_ip = 52; continue _fun00001 }
 47:
                entity = zuuluu;
                _fun00002_ip = 88; continue _fun00001;
 52:
                michal = {};
                oscard = michal;
                report = zuuluu;
                zuuluu = copyDataProperties(oscard, report);
                tangon = 38;
                zuuluu = 'minWidth';
                michal[zuuluu] = tangon;
                zuuluu = 'height';
                michal[zuuluu] = tangon;
                entity = michal;
 88:
                return entity;
            }
        };
        result = option.bind(report)(zuuluu, golfie);
        var _closure2_slot5 = result;
        golfie = report.useCallback;
        zuuluu = new Array(2);
        zuuluu[0] = michal;
        zuuluu[1] = entity;
        michal = function() {
            zuuluu = _closure2_slot1;
            michal = _closure2_slot2;
            entity = undefined;
            michal = zuuluu.bind(entity)(michal);
            zuuluu = _closure1_slot1;
            tangon = _closure1_slot2;
            michal = 9;
            michal = tangon[michal];
            zuuluu = zuuluu.bind(entity)(michal);
            michal = zuuluu.hideActionSheet;
            michal = michal.bind(zuuluu)();
            return entity;
        };
        backup = golfie.bind(report)(michal, zuuluu);
        golfie = report.useCallback;
        zuuluu = function(argFoo) {
            zuuluu = _closure2_slot3;
            entity = undefined;
            michal = argFoo;
            michal = zuuluu.bind(entity)(michal);
            return entity;
        };
        michal = new Array(0);
        michal = golfie.bind(report)(zuuluu, michal);
        var _closure2_slot6 = michal;
        zuuluu = report.useCallback;
        michal = new Array(2);
        michal[0] = oscard;
        michal[1] = entity;
        entity = function() {
            zuuluu = _closure1_slot1;
            michal = _closure1_slot2;
            entity = 10;
            michal = michal[entity];
            entity = undefined;
            zuuluu = zuuluu.bind(entity)(michal);
            michal = {};
            report = _closure2_slot0;
            michal['color'] = report;
            tangon = _closure2_slot1;
            michal['onSelect'] = tangon;
            michal = zuuluu.bind(entity)(michal);
            return entity;
        };
        output = zuuluu.bind(report)(entity, michal);
        zuuluu = _closure1_slot8;
        entity = 11;
        entity = sizing[entity];
        entity = kiloes.bind(tangon)(entity);
        michal = entity.BottomSheet;
        entity = {};
        report = 12;
        report = sizing[report];
        report = kiloes.bind(tangon)(report);
        oscard = report.BottomSheetTitleHeader;
        report = {};
        romeon = 13;
        golfie = sizing[romeon];
        golfie = kiloes.bind(tangon)(golfie);
        verify = golfie.intl;
        option = verify.string;
        golfie = sizing[romeon];
        golfie = kiloes.bind(tangon)(golfie);
        golfie = golfie.t;
        golfie = golfie.WTqQ5e;
        golfie = option.bind(verify)(golfie);
        report['title'] = golfie;
        verify = 14;
        golfie = sizing[verify];
        golfie = kiloes.bind(tangon)(golfie);
        option = golfie.Button;
        golfie = {'variant': 'secondary', 'size': 'sm'};
        echoed = sizing[romeon];
        echoed = kiloes.bind(tangon)(echoed);
        source = echoed.intl;
        update = source.string;
        echoed = sizing[romeon];
        echoed = kiloes.bind(tangon)(echoed);
        echoed = echoed.t;
        echoed = echoed.R3BPHx;
        echoed = update.bind(source)(echoed);
        golfie['text'] = echoed;
        golfie['onPress'] = backup;
        golfie = zuuluu.bind(tangon)(option, golfie);
        report['trailing'] = golfie;
        report = zuuluu.bind(tangon)(oscard, report);
        entity['header'] = report;
        golfie = _closure1_slot9;
        oscard = _closure1_slot5;
        report = {};
        option = offset.body;
        report['style'] = option;
        option = {};
        offset = offset.colorWrap;
        option['style'] = offset;
        echoed = _closure1_slot10;
        backup = echoed.map;
        offset = function(argFoo) {
            report = argFoo;
            tangon = _closure1_slot8;
            michal = _closure1_slot1;
            zuuluu = _closure1_slot2;
            entity = 8;
            entity = zuuluu[entity];
            zuuluu = undefined;
            michal = michal.bind(zuuluu)(entity);
            entity = {};
            entity['color'] = report;
            golfie = _closure2_slot5;
            entity['style'] = golfie;
            golfie = _closure2_slot2;
            golfie = report === golfie;
            entity['selected'] = golfie;
            oscard = _closure2_slot6;
            entity['onSelect'] = oscard;
            entity = tangon.bind(zuuluu)(michal, entity, report);
            return entity;
        };
        backup = backup.bind(echoed)(offset);
        offset = new Array(2);
        offset[0] = backup;
        backup = _closure1_slot6;
        foxtra = {};
        foxtra['style'] = result;
        foxtra['onPress'] = output;
        output = 15;
        output = sizing[output];
        output = kiloes.bind(tangon)(output);
        result = output.EyeDropperIcon;
        output = {};
        echoed = 'lg';
        output['size'] = echoed;
        output = zuuluu.bind(tangon)(result, output);
        foxtra['children'] = output;
        foxtra = zuuluu.bind(tangon)(backup, foxtra);
        offset[1] = foxtra;
        option['children'] = offset;
        offset = golfie.bind(tangon)(oscard, option);
        option = new Array(2);
        option[0] = offset;
        verify = sizing[verify];
        verify = kiloes.bind(tangon)(verify);
        offset = verify.Button;
        verify = {};
        foxtra = sizing[romeon];
        foxtra = kiloes.bind(tangon)(foxtra);
        backup = foxtra.intl;
        foxtra = backup.string;
        romeon = sizing[romeon];
        romeon = kiloes.bind(tangon)(romeon);
        romeon = romeon.t;
        romeon = romeon.yBZMsb;
        romeon = foxtra.bind(backup)(romeon);
        verify['text'] = romeon;
        yankee = function() { // Original name: onPress
            zuuluu = _closure2_slot3;
            michal = _closure1_slot7;
            entity = undefined;
            michal = zuuluu.bind(entity)(michal);
            return entity;
        };
        verify['onPress'] = yankee;
        verify = zuuluu.bind(tangon)(offset, verify);
        option[1] = verify;
        report['children'] = option;
        report = golfie.bind(tangon)(oscard, report);
        entity['children'] = report;
        entity = zuuluu.bind(tangon)(michal, entity);
        return entity;
    };
    zuuluu['default'] = michal;
    return entity;
})();