// app/components_native/common/DescriptionEllipsis.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    report = argBar;
    yankee = argBaz;
    zuuluu = argFre;
    oscard = argPlu;
    entity = global;
    option = entity.Object;
    golfie = option.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(option)(zuuluu, entity, tangon);
    entity = 0;
    golfie = oscard[entity];
    tangon = argCor;
    entity = undefined;
    tangon = tangon.bind(entity)(golfie);
    tangon = 1;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.View;
    var _closure1_slot0 = tangon;
    tangon = 2;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    golfie = tangon.jsx;
    var _closure1_slot1 = golfie;
    tangon = tangon.jsxs;
    var _closure1_slot2 = tangon;
    tangon = 3;
    tangon = oscard[tangon];
    option = report.bind(entity)(tangon);
    golfie = option.createStyles;
    tangon = {};
    verify = {'backgroundColor': null, 'justifyContent': 'center', 'alignItems': 'center', 'flexDirection': 'row', 'borderRadius': null, 'marginTop': 4, 'height': 12, 'width': 24};
    offset = 4;
    romeon = oscard[offset];
    romeon = yankee.bind(entity)(romeon);
    romeon = romeon.colors;
    romeon = romeon.BACKGROUND_TERTIARY;
    verify['backgroundColor'] = romeon;
    romeon = oscard[offset];
    romeon = yankee.bind(entity)(romeon);
    romeon = romeon.radii;
    romeon = romeon.xs;
    verify['borderRadius'] = romeon;
    tangon['topicEllipsis'] = verify;
    verify = {'backgroundColor': null, 'borderRadius': 2, 'margin': 1, 'height': 4, 'width': 4};
    offset = oscard[offset];
    offset = yankee.bind(entity)(offset);
    offset = offset.colors;
    offset = offset.TEXT_MUTED;
    verify['backgroundColor'] = offset;
    tangon['topicEllipsisDot'] = verify;
    tangon = golfie.bind(option)(tangon);
    var _closure1_slot3 = tangon;
    tangon = 5;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'components_native/common/DescriptionEllipsis.tsx';
    tangon = report.bind(oscard)(tangon);
    michal = function(argFoo) { // Original name: _default
        entity = argFoo;
        golfie = entity.style;
        verify = entity.dotStyle;
        entity = _closure1_slot3;
        tangon = undefined;
        option = entity.bind(tangon)();
        zuuluu = _closure1_slot2;
        michal = _closure1_slot0;
        entity = {};
        offset = option.topicEllipsis;
        oscard = new Array(2);
        oscard[0] = offset;
        oscard[1] = golfie;
        entity['style'] = oscard;
        golfie = _closure1_slot1;
        report = {};
        offset = option.topicEllipsisDot;
        oscard = new Array(2);
        oscard[0] = offset;
        oscard[1] = verify;
        report['style'] = oscard;
        oscard = golfie.bind(tangon)(michal, report);
        report = new Array(3);
        report[0] = oscard;
        oscard = {};
        yankee = option.topicEllipsisDot;
        offset = new Array(2);
        offset[0] = yankee;
        offset[1] = verify;
        oscard['style'] = offset;
        oscard = golfie.bind(tangon)(michal, oscard);
        report[1] = oscard;
        oscard = {};
        offset = option.topicEllipsisDot;
        option = new Array(2);
        option[0] = offset;
        option[1] = verify;
        oscard['style'] = option;
        oscard = golfie.bind(tangon)(michal, oscard);
        report[2] = oscard;
        entity['children'] = report;
        entity = zuuluu.bind(tangon)(michal, entity);
        return entity;
    };
    zuuluu['default'] = michal;
    return entity;
})();