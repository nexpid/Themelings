// app/components_native/common/DescriptionEllipsis.tsx
export default (function(argFoo, argBar, argBaz, argCorge, _, argFred, argPlugh) {
    report = argBar;
    yankee = argBaz;
    zulu = argFred;
    oscar = argPlugh;
    entity = global;
    options = entity.Object;
    golf = options.defineProperty;
    tango = {};
    entity = true;
    tango['value'] = entity;
    entity = '__esModule';
    entity = golf.bind(options)(zulu, entity, tango);
    entity = 0;
    golf = oscar[entity];
    tango = argCorge;
    entity = undefined;
    tango = tango.bind(entity)(golf);
    tango = 1;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.View;
    var _closure1_slot0 = tango;
    tango = 2;
    golf = oscar[tango];
    golf = report.bind(entity)(golf);
    golf = golf.jsx;
    var _closure1_slot1 = golf;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.jsxs;
    var _closure1_slot2 = tango;
    tango = 3;
    tango = oscar[tango];
    options = report.bind(entity)(tango);
    golf = options.createStyles;
    tango = {};
    verify = {'backgroundColor': null, 'justifyContent': 'center', 'alignItems': 'center', 'flexDirection': 'row', 'borderRadius': null, 'marginTop': 4, 'height': 12, 'width': 24};
    offset = 4;
    romeo = oscar[offset];
    romeo = yankee.bind(entity)(romeo);
    romeo = romeo.colors;
    romeo = romeo.BACKGROUND_TERTIARY;
    verify['backgroundColor'] = romeo;
    romeo = oscar[offset];
    romeo = yankee.bind(entity)(romeo);
    romeo = romeo.radii;
    romeo = romeo.xs;
    verify['borderRadius'] = romeo;
    tango['topicEllipsis'] = verify;
    verify = {'backgroundColor': null, 'borderRadius': 2, 'margin': 1, 'height': 4, 'width': 4};
    offset = oscar[offset];
    offset = yankee.bind(entity)(offset);
    offset = offset.colors;
    offset = offset.TEXT_MUTED;
    verify['backgroundColor'] = offset;
    tango['topicEllipsisDot'] = verify;
    tango = golf.bind(options)(tango);
    var _closure1_slot3 = tango;
    tango = 5;
    tango = oscar[tango];
    oscar = report.bind(entity)(tango);
    report = oscar.fileFinishedImporting;
    tango = 'components_native/common/DescriptionEllipsis.tsx';
    tango = report.bind(oscar)(tango);
    mike = function(argFoo) { // Original name: _default
        entity = argFoo;
        golf = entity.style;
        verify = entity.dotStyle;
        entity = _closure1_slot3;
        tango = undefined;
        options = entity.bind(tango)();
        zulu = _closure1_slot2;
        mike = _closure1_slot0;
        entity = {};
        offset = options.topicEllipsis;
        oscar = new Array(2);
        oscar[0] = offset;
        oscar[1] = golf;
        entity['style'] = oscar;
        golf = _closure1_slot1;
        report = {};
        offset = options.topicEllipsisDot;
        oscar = new Array(2);
        oscar[0] = offset;
        oscar[1] = verify;
        report['style'] = oscar;
        oscar = golf.bind(tango)(mike, report);
        report = new Array(3);
        report[0] = oscar;
        oscar = {};
        yankee = options.topicEllipsisDot;
        offset = new Array(2);
        offset[0] = yankee;
        offset[1] = verify;
        oscar['style'] = offset;
        oscar = golf.bind(tango)(mike, oscar);
        report[1] = oscar;
        oscar = {};
        offset = options.topicEllipsisDot;
        options = new Array(2);
        options[0] = offset;
        options[1] = verify;
        oscar['style'] = options;
        oscar = golf.bind(tango)(mike, oscar);
        report[2] = oscar;
        entity['children'] = report;
        entity = zulu.bind(tango)(mike, entity);
        return entity;
    };
    zulu['default'] = mike;
    return entity;
})();