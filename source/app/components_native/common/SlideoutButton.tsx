// app/components_native/common/SlideoutButton.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    report = argBar;
    romeon = argBaz;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    var _closure1_slot1 = romeon;
    var _closure1_slot2 = oscard;
    entity = global;
    option = entity.Object;
    golfie = option.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(option)(zuuluu, entity, tangon);
    entity = 0;
    golfie = oscard[entity];
    tangon = argCor;
    entity = undefined;
    tangon = tangon.bind(entity)(golfie);
    tangon = 1;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    golfie = tangon.View;
    var _closure1_slot3 = golfie;
    option = tangon.StyleSheet;
    tangon = 2;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    offset = tangon.Fonts;
    tangon = 3;
    golfie = oscard[tangon];
    golfie = report.bind(entity)(golfie);
    golfie = golfie.jsx;
    var _closure1_slot4 = golfie;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.jsxs;
    var _closure1_slot5 = tangon;
    golfie = option.create;
    tangon = {};
    verify = {'alignSelf': 'flex-end', 'justifyContent': 'center', 'alignItems': 'center'};
    tangon['button'] = verify;
    verify = {'color': null, 'fontSize': 12, 'fontFamily': null, 'marginTop': 2, 'marginHorizontal': 2, 'textAlign': 'center'};
    yankee = 4;
    yankee = oscard[yankee];
    backup = report.bind(entity)(yankee);
    foxtra = backup.hexWithOpacity;
    yankee = 5;
    yankee = oscard[yankee];
    yankee = romeon.bind(entity)(yankee);
    yankee = yankee.unsafe_rawColors;
    romeon = yankee.WHITE_500;
    yankee = 0.6;
    yankee = foxtra.bind(backup)(romeon, yankee);
    verify['color'] = yankee;
    offset = offset.PRIMARY_SEMIBOLD;
    verify['fontFamily'] = offset;
    tangon['buttonText'] = verify;
    tangon = golfie.bind(option)(tangon);
    var _closure1_slot6 = tangon;
    michal = function(argFoo) { // Original name: SlideoutButton
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            entity = argFoo;
            report = entity.onPress;
            output = entity.color;
            backup = entity.icon;
            romeon = entity.title;
            sizing = entity.height;
            tangon = undefined;
            if(!(sizing === tangon)) { _fun00002_ip = 37; continue _fun00001 }
 34:
            sizing = 60;
 37:
            zuuluu = _closure1_slot4;
            offset = _closure1_slot0;
            foxtra = _closure1_slot2;
            entity = 6;
            entity = foxtra[entity];
            entity = offset.bind(tangon)(entity);
            michal = entity.PressableOpacity;
            entity = {};
            oscard = 'button';
            entity['accessibilityRole'] = oscard;
            entity['onPress'] = report;
            golfie = _closure1_slot5;
            oscard = _closure1_slot3;
            report = {};
            yankee = _closure1_slot6;
            kiloes = yankee.button;
            verify = new Array(2);
            verify[0] = kiloes;
            kiloes = {};
            kiloes['backgroundColor'] = output;
            output = 72;
            kiloes['width'] = output;
            kiloes['height'] = sizing;
            verify[1] = kiloes;
            report['style'] = verify;
            kiloes = _closure1_slot1;
            option = 7;
            option = foxtra[option];
            verify = kiloes.bind(tangon)(option);
            option = {};
            option['source'] = backup;
            backup = 5;
            backup = foxtra[backup];
            backup = kiloes.bind(tangon)(backup);
            backup = backup.unsafe_rawColors;
            backup = backup.WHITE_500;
            option['color'] = backup;
            verify = zuuluu.bind(tangon)(verify, option);
            option = new Array(2);
            option[0] = verify;
            verify = 8;
            verify = foxtra[verify];
            verify = offset.bind(tangon)(verify);
            offset = verify.LegacyText;
            verify = {};
            yankee = yankee.buttonText;
            verify['style'] = yankee;
            yankee = romeon.toUpperCase;
            yankee = yankee.bind(romeon)();
            verify['children'] = yankee;
            verify = zuuluu.bind(tangon)(offset, verify);
            option[1] = verify;
            report['children'] = option;
            report = golfie.bind(tangon)(oscard, report);
            entity['children'] = report;
            entity = zuuluu.bind(tangon)(michal, entity);
            return entity;
        }
    };
    tangon = 72;
    michal['width'] = tangon;
    tangon = 9;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'components_native/common/SlideoutButton.tsx';
    tangon = report.bind(oscard)(tangon);
    zuuluu['default'] = michal;
    return entity;
})();