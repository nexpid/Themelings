// app/components_native/common/SlideoutButton.tsx
export default (function(argFoo, argBar, argBaz, argCorge, _, argFred, argPlugh) {
    report = argBar;
    romeo = argBaz;
    zulu = argFred;
    oscar = argPlugh;
    var _closure1_slot0 = report;
    var _closure1_slot1 = romeo;
    var _closure1_slot2 = oscar;
    entity = global;
    options = entity.Object;
    golf = options.defineProperty;
    tango = {};
    entity = true;
    tango['value'] = entity;
    entity = '__esModule';
    entity = golf.bind(options)(zulu, entity, tango);
    entity = 0;
    golf = oscar[entity];
    tango = argCorge;
    entity = undefined;
    tango = tango.bind(entity)(golf);
    tango = 1;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    golf = tango.View;
    var _closure1_slot3 = golf;
    options = tango.StyleSheet;
    tango = 2;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    offset = tango.Fonts;
    tango = 3;
    golf = oscar[tango];
    golf = report.bind(entity)(golf);
    golf = golf.jsx;
    var _closure1_slot4 = golf;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.jsxs;
    var _closure1_slot5 = tango;
    golf = options.create;
    tango = {};
    verify = {'alignSelf': 'flex-end', 'justifyContent': 'center', 'alignItems': 'center'};
    tango['button'] = verify;
    verify = {'color': null, 'fontSize': 12, 'fontFamily': null, 'marginTop': 2, 'marginHorizontal': 2, 'textAlign': 'center'};
    yankee = 4;
    yankee = oscar[yankee];
    backup = report.bind(entity)(yankee);
    foxtrot = backup.hexWithOpacity;
    yankee = 5;
    yankee = oscar[yankee];
    yankee = romeo.bind(entity)(yankee);
    yankee = yankee.unsafe_rawColors;
    romeo = yankee.WHITE_500;
    yankee = 0.6;
    yankee = foxtrot.bind(backup)(romeo, yankee);
    verify['color'] = yankee;
    offset = offset.PRIMARY_SEMIBOLD;
    verify['fontFamily'] = offset;
    tango['buttonText'] = verify;
    tango = golf.bind(options)(tango);
    var _closure1_slot6 = tango;
    mike = function(argFoo) { // Original name: SlideoutButton
        _fun88381: for(var _fun88381_ip = 0; ; ) switch(_fun88381_ip) {
 0:
            entity = argFoo;
            report = entity.onPress;
            output = entity.color;
            backup = entity.icon;
            romeo = entity.title;
            sizing = entity.height;
            tango = undefined;
            if(!(sizing === tango)) { _fun88381_ip = 37; continue _fun88381 }
 34:
            sizing = 60;
 37:
            zulu = _closure1_slot4;
            offset = _closure1_slot0;
            foxtrot = _closure1_slot2;
            entity = 6;
            entity = foxtrot[entity];
            entity = offset.bind(tango)(entity);
            mike = entity.PressableOpacity;
            entity = {};
            oscar = 'button';
            entity['accessibilityRole'] = oscar;
            entity['onPress'] = report;
            golf = _closure1_slot5;
            oscar = _closure1_slot3;
            report = {};
            yankee = _closure1_slot6;
            kilo = yankee.button;
            verify = new Array(2);
            verify[0] = kilo;
            kilo = {};
            kilo['backgroundColor'] = output;
            output = 72;
            kilo['width'] = output;
            kilo['height'] = sizing;
            verify[1] = kilo;
            report['style'] = verify;
            kilo = _closure1_slot1;
            options = 7;
            options = foxtrot[options];
            verify = kilo.bind(tango)(options);
            options = {};
            options['source'] = backup;
            backup = 5;
            backup = foxtrot[backup];
            backup = kilo.bind(tango)(backup);
            backup = backup.unsafe_rawColors;
            backup = backup.WHITE_500;
            options['color'] = backup;
            verify = zulu.bind(tango)(verify, options);
            options = new Array(2);
            options[0] = verify;
            verify = 8;
            verify = foxtrot[verify];
            verify = offset.bind(tango)(verify);
            offset = verify.LegacyText;
            verify = {};
            yankee = yankee.buttonText;
            verify['style'] = yankee;
            yankee = romeo.toUpperCase;
            yankee = yankee.bind(romeo)();
            verify['children'] = yankee;
            verify = zulu.bind(tango)(offset, verify);
            options[1] = verify;
            report['children'] = options;
            report = golf.bind(tango)(oscar, report);
            entity['children'] = report;
            entity = zulu.bind(tango)(mike, entity);
            return entity;
        }
    };
    tango = 72;
    mike['width'] = tango;
    tango = 9;
    tango = oscar[tango];
    oscar = report.bind(entity)(tango);
    report = oscar.fileFinishedImporting;
    tango = 'components_native/common/SlideoutButton.tsx';
    tango = report.bind(oscar)(tango);
    zulu['default'] = mike;
    return entity;
})();