// app/components_native/common/ActionButton.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    report = argBar;
    yankee = argBaz;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    var _closure1_slot1 = yankee;
    var _closure1_slot2 = oscard;
    entity = global;
    option = entity.Object;
    golfie = option.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(option)(zuuluu, entity, tangon);
    entity = 0;
    tangon = oscard[entity];
    entity = undefined;
    tangon = yankee.bind(entity)(tangon);
    var _closure1_slot3 = tangon;
    tangon = 1;
    golfie = oscard[tangon];
    tangon = argCor;
    tangon = tangon.bind(entity)(golfie);
    tangon = 2;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.View;
    var _closure1_slot4 = tangon;
    tangon = 3;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.jsx;
    var _closure1_slot5 = tangon;
    tangon = 4;
    tangon = oscard[tangon];
    option = report.bind(entity)(tangon);
    golfie = option.createStyles;
    tangon = {};
    verify = {'tintColor': null, 'backgroundColor': null, 'borderRadius': null, 'alignItems': 'center', 'justifyContent': 'center', 'width': 32, 'height': 32};
    offset = 5;
    romeon = oscard[offset];
    romeon = yankee.bind(entity)(romeon);
    romeon = romeon.colors;
    romeon = romeon.INTERACTIVE_NORMAL;
    verify['tintColor'] = romeon;
    romeon = oscard[offset];
    romeon = yankee.bind(entity)(romeon);
    romeon = romeon.colors;
    romeon = romeon.BACKGROUND_SECONDARY;
    verify['backgroundColor'] = romeon;
    romeon = oscard[offset];
    romeon = yankee.bind(entity)(romeon);
    romeon = romeon.radii;
    romeon = romeon.lg;
    verify['borderRadius'] = romeon;
    tangon['actionButtonContainer'] = verify;
    verify = {};
    romeon = oscard[offset];
    romeon = yankee.bind(entity)(romeon);
    romeon = romeon.colors;
    romeon = romeon.BUTTON_POSITIVE_BACKGROUND;
    verify['backgroundColor'] = romeon;
    tangon['actionButtonContainerPositive'] = verify;
    verify = {};
    offset = oscard[offset];
    offset = yankee.bind(entity)(offset);
    offset = offset.colors;
    offset = offset.WHITE;
    verify['tintColor'] = offset;
    tangon['actionButtonIconPositive'] = verify;
    verify = {};
    tangon['actionButtonIconNeutral'] = verify;
    verify = {};
    tangon['actionButtonContainerNeutral'] = verify;
    tangon = golfie.bind(option)(tangon);
    var _closure1_slot6 = tangon;
    tangon = 8;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'components_native/common/ActionButton.tsx';
    tangon = report.bind(oscard)(tangon);
    michal = function(argFoo) { // Original name: ActionButton
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            foxtra = argFoo;
            entity = _closure1_slot6;
            tangon = undefined;
            golfie = entity.bind(tangon)();
            offset = foxtra.IconComponent;
            michal = foxtra.type;
            entity = 'neutral';
            if(!(entity !== michal)) { _fun00002_ip = 63; continue _fun00001 }
 37:
            entity = golfie.actionButtonIconPositive;
            zuuluu = new Array(2);
            zuuluu[0] = entity;
            entity = golfie.actionButtonContainerPositive;
            zuuluu[1] = entity;
            _fun00002_ip = 90; continue _fun00001;
 63:
            michal = golfie.actionButtonIconNeutral;
            entity = new Array(2);
            entity[0] = michal;
            michal = golfie.actionButtonContainerNeutral;
            entity[1] = michal;
            zuuluu = entity;
 90:
            michal = _closure1_slot3;
            entity = 2;
            michal = michal.bind(tangon)(zuuluu, entity);
            entity = 0;
            yankee = michal[entity];
            entity = 1;
            verify = michal[entity];
            zuuluu = _closure1_slot5;
            michal = _closure1_slot4;
            entity = {};
            report = foxtra.styles;
            entity['style'] = report;
            oscard = _closure1_slot0;
            romeon = _closure1_slot2;
            report = 6;
            report = romeon[report];
            report = oscard.bind(tangon)(report);
            oscard = report.PressableOpacity;
            report = {'onPress': null, 'accessibilityElementsHidden': true, 'importantForAccessibility': 'no-hide-descendants'};
            romeon = foxtra.onPress;
            report['onPress'] = romeon;
            romeon = golfie.actionButtonContainer;
            golfie = new Array(3);
            golfie[0] = romeon;
            golfie[1] = verify;
            verify = foxtra.containerStyles;
            golfie[2] = verify;
            report['style'] = golfie;
            golfie = null;
            if(!(golfie == offset)) { _fun00002_ip = 304; continue _fun00001 }
 225:
            romeon = _closure1_slot5;
            kiloes = _closure1_slot1;
            sizing = _closure1_slot2;
            backup = 7;
            golfie = sizing[backup];
            verify = kiloes.bind(tangon)(golfie);
            golfie = {};
            backup = sizing[backup];
            backup = kiloes.bind(tangon)(backup);
            backup = backup.Sizes;
            backup = backup.SMALL;
            golfie['size'] = backup;
            backup = false;
            golfie['disableColor'] = backup;
            foxtra = foxtra.source;
            golfie['source'] = foxtra;
            golfie['style'] = yankee;
            golfie = romeon.bind(tangon)(verify, golfie);
            _fun00002_ip = 328; continue _fun00001;
 304:
            verify = _closure1_slot5;
            option = {};
            romeon = 'sm';
            option['size'] = romeon;
            option['style'] = yankee;
            golfie = verify.bind(tangon)(offset, option);
 328:
            report['children'] = golfie;
            report = zuuluu.bind(tangon)(oscard, report);
            entity['children'] = report;
            entity = zuuluu.bind(tangon)(michal, entity);
            return entity;
        }
    };
    zuuluu['default'] = michal;
    return entity;
})();