// app/components_native/MainChannels.tsx
export default (function(argFoo, argBar, argBaz, argCorge, _, argFred, argPlugh) {
    report = argBar;
    romeo = argBaz;
    zulu = argFred;
    oscar = argPlugh;
    var _closure1_slot0 = report;
    var _closure1_slot1 = romeo;
    var _closure1_slot2 = oscar;
    entity = global;
    options = entity.Object;
    golf = options.defineProperty;
    tango = {};
    entity = true;
    tango['value'] = entity;
    entity = '__esModule';
    entity = golf.bind(options)(zulu, entity, tango);
    entity = 0;
    golf = oscar[entity];
    tango = argCorge;
    entity = undefined;
    golf = tango.bind(entity)(golf);
    var _closure1_slot3 = golf;
    tango = 1;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    options = tango.View;
    var _closure1_slot4 = options;
    tango = tango.StyleSheet;
    var _closure1_slot5 = tango;
    tango = 2;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    yankee = tango.DM_WIDTH;
    tango = tango.ME;
    var _closure1_slot6 = tango;
    tango = 3;
    options = oscar[tango];
    options = report.bind(entity)(options);
    options = options.jsx;
    var _closure1_slot7 = options;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.jsxs;
    var _closure1_slot8 = tango;
    tango = 6;
    tango = oscar[tango];
    verify = report.bind(entity)(tango);
    options = verify.createStyles;
    tango = {};
    offset = {'position': 'absolute', 'top': 0, 'left': null, 'bottom': 0, 'right': 0, 'flexDirection': 'row'};
    offset['left'] = yankee;
    tango['sideContainer'] = offset;
    offset = {};
    yankee = 7;
    foxtrot = oscar[yankee];
    foxtrot = romeo.bind(entity)(foxtrot);
    foxtrot = foxtrot.radii;
    foxtrot = foxtrot.xl;
    offset['borderTopLeftRadius'] = foxtrot;
    foxtrot = oscar[yankee];
    foxtrot = romeo.bind(entity)(foxtrot);
    foxtrot = foxtrot.radii;
    foxtrot = foxtrot.none;
    offset['borderTopRightRadius'] = foxtrot;
    tango['side'] = offset;
    offset = {};
    foxtrot = oscar[yankee];
    foxtrot = romeo.bind(entity)(foxtrot);
    foxtrot = foxtrot.radii;
    foxtrot = foxtrot.sm;
    offset['borderTopRightRadius'] = foxtrot;
    tango['sideTablet'] = offset;
    offset = {};
    foxtrot = oscar[yankee];
    foxtrot = romeo.bind(entity)(foxtrot);
    foxtrot = foxtrot.radii;
    foxtrot = foxtrot.none;
    offset['borderTopLeftRadius'] = foxtrot;
    yankee = oscar[yankee];
    yankee = romeo.bind(entity)(yankee);
    yankee = yankee.radii;
    yankee = yankee.none;
    offset['borderTopRightRadius'] = yankee;
    tango['squareEdges'] = offset;
    tango = options.bind(verify)(tango);
    var _closure1_slot9 = tango;
    options = golf.memo;
    tango = function(argFoo) { // Original name: LeftMenuTabsInner
        _fun114074: for(var _fun114074_ip = 0; ; ) switch(_fun114074_ip) {
 0:
            mike = argFoo;
            foxtrot = mike.maxWidth;
            mike = _closure1_slot9;
            tango = undefined;
            result = mike.bind(tango)();
            var _closure2_slot0 = result;
            mike = function() { // Original name: useMainChannelsRouteInfo
                _fun114075: for(var _fun114075_ip = 0; ; ) switch(_fun114075_ip) {
 0:
                    verify = _closure1_slot3;
                    zulu = verify.useContext;
                    tango = _closure1_slot1;
                    oscar = _closure1_slot2;
                    mike = 4;
                    mike = oscar[mike];
                    oscar = undefined;
                    mike = tango.bind(oscar)(mike);
                    mike = zulu.bind(verify)(mike);
                    tango = mike.guildId;
                    var _closure3_slot0 = tango;
                    mike = mike.channelId;
                    zulu = verify.useRef;
                    zulu = zulu.bind(verify)(tango);
                    var _closure3_slot1 = zulu;
                    options = verify.useEffect;
                    golf = new Array(1);
                    golf[0] = tango;
                    report = function() {
                        mike = _closure3_slot1;
                        entity = _closure3_slot0;
                        mike['current'] = entity;
                        entity = undefined;
                        return entity;
                    };
                    report = options.bind(verify)(report, golf);
                    report = null;
                    report = report != tango;
                    if(!report) { _fun114075_ip = 113; continue _fun114075 }
 105:
                    golf = _closure1_slot6;
                    report = tango !== golf;
 113:
                    golf = _closure1_slot1;
                    options = _closure1_slot2;
                    entity = 5;
                    entity = options[entity];
                    entity = golf.bind(oscar)(entity);
                    zulu = entity.bind(oscar)(zulu);
                    entity = {};
                    entity['isGuildSelected'] = report;
                    if(!report) { _fun114075_ip = 151; continue _fun114075 }
 148:
                    zulu = tango;
 151:
                    entity['selectedGuildId'] = zulu;
                    entity['selectedChannelId'] = mike;
                    return entity;
                }
            };
            mike = mike.bind(tango)();
            output = mike.isGuildSelected;
            update = mike.selectedGuildId;
            echo = mike.selectedChannelId;
            romeo = _closure1_slot1;
            sizing = _closure1_slot2;
            mike = 8;
            mike = sizing[mike];
            mike = romeo.bind(tango)(mike);
            mike = mike.bind(tango)();
            oscar = mike.isChatBesideChannelList;
            var _closure2_slot1 = oscar;
            report = _closure1_slot3;
            zulu = report.useMemo;
            mike = new Array(2);
            mike[0] = result;
            mike[1] = oscar;
            entity = function() {
                _fun114077: for(var _fun114077_ip = 0; ; ) switch(_fun114077_ip) {
 0:
                    entity = _closure2_slot0;
                    mike = entity.side;
                    entity = new Array(2);
                    entity[0] = mike;
                    mike = _closure2_slot1;
                    if(!mike) { _fun114077_ip = 38; continue _fun114077 }
 28:
                    zulu = _closure2_slot0;
                    mike = zulu.sideTablet;
 38:
                    entity[1] = mike;
                    return entity;
                }
            };
            source = zulu.bind(report)(entity, mike);
            backup = _closure1_slot0;
            entity = 9;
            mike = sizing[entity];
            zulu = backup.bind(tango)(mike);
            mike = zulu.useHomeGesture;
            mike = mike.bind(zulu)();
            golf = mike.gesture;
            control = mike.panelStyles;
            report = mike.homeDrawerState;
            zulu = _closure1_slot7;
            entity = sizing[entity];
            entity = backup.bind(tango)(entity);
            entity = entity.HomeDrawerStateContext;
            mike = entity.Provider;
            entity = {};
            entity['value'] = report;
            report = 10;
            report = sizing[report];
            report = backup.bind(tango)(report);
            oscar = report.GestureDetector;
            report = {};
            report['gesture'] = golf;
            verify = _closure1_slot8;
            options = _closure1_slot4;
            golf = {};
            offset = _closure1_slot5;
            yankee = offset.absoluteFill;
            offset = new Array(2);
            offset[0] = yankee;
            yankee = {};
            yankee['width'] = foxtrot;
            offset[1] = yankee;
            golf['style'] = offset;
            offset = 11;
            offset = sizing[offset];
            offset = backup.bind(tango)(offset);
            yankee = offset.HomePanelContent;
            offset = {};
            yankee = zulu.bind(tango)(yankee, offset);
            offset = new Array(2);
            offset[0] = yankee;
            yankee = 12;
            yankee = sizing[yankee];
            yankee = romeo.bind(tango)(yankee);
            romeo = yankee.View;
            yankee = {};
            foxtrot = new Array(2);
            foxtrot[0] = control;
            result = result.sideContainer;
            foxtrot[1] = result;
            yankee['style'] = foxtrot;
            foxtrot = 'box-none';
            yankee['pointerEvents'] = foxtrot;
            foxtrot = 13;
            foxtrot = sizing[foxtrot];
            foxtrot = backup.bind(tango)(foxtrot);
            backup = foxtrot.NativeFreezeScreens;
            foxtrot = {};
            sizing = 0;
            if(!output) { _fun114074_ip = 381; continue _fun114074 }
 378:
            sizing = 1;
 381:
            foxtrot['activeIndex'] = sizing;
            result = _closure1_slot7;
            output = _closure1_slot1;
            control = _closure1_slot2;
            kilo = 14;
            kilo = control[kilo];
            sizing = output.bind(tango)(kilo);
            kilo = {};
            kilo['style'] = source;
            sizing = result.bind(tango)(sizing, kilo);
            kilo = new Array(2);
            kilo[0] = sizing;
            sizing = 15;
            sizing = control[sizing];
            output = output.bind(tango)(sizing);
            sizing = {};
            sizing['style'] = source;
            sizing['selectedGuildId'] = update;
            sizing['selectedChannelId'] = echo;
            sizing = result.bind(tango)(output, sizing);
            kilo[1] = sizing;
            foxtrot['children'] = kilo;
            foxtrot = verify.bind(tango)(backup, foxtrot);
            yankee['children'] = foxtrot;
            yankee = zulu.bind(tango)(romeo, yankee);
            offset[1] = yankee;
            golf['children'] = offset;
            golf = verify.bind(tango)(options, golf);
            report['children'] = golf;
            report = zulu.bind(tango)(oscar, report);
            entity['children'] = report;
            entity = zulu.bind(tango)(mike, entity);
            return entity;
        }
    };
    tango = options.bind(golf)(tango);
    var _closure1_slot10 = tango;
    tango = golf.memo;
    mike = function(argFoo) { // Original name: MainChannelsRedesignInner
        entity = argFoo;
        golf = entity.maxWidth;
        tango = _closure1_slot7;
        mike = _closure1_slot1;
        verify = _closure1_slot2;
        oscar = 16;
        entity = verify[oscar];
        zulu = undefined;
        mike = mike.bind(zulu)(entity);
        entity = {};
        options = _closure1_slot0;
        oscar = verify[oscar];
        oscar = options.bind(zulu)(oscar);
        oscar = oscar.Profiles;
        oscar = oscar.LeftPanel;
        entity['profile'] = oscar;
        oscar = _closure1_slot10;
        report = {};
        report['maxWidth'] = golf;
        report = tango.bind(zulu)(oscar, report);
        entity['children'] = report;
        entity = tango.bind(zulu)(mike, entity);
        return entity;
    };
    mike = tango.bind(golf)(mike);
    tango = 17;
    tango = oscar[tango];
    oscar = report.bind(entity)(tango);
    report = oscar.fileFinishedImporting;
    tango = 'components_native/MainChannels.tsx';
    tango = report.bind(oscar)(tango);
    zulu['default'] = mike;
    return entity;
})();