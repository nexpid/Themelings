// app/components_native/MainChannels.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    report = argBar;
    romeon = argBaz;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    var _closure1_slot1 = romeon;
    var _closure1_slot2 = oscard;
    entity = global;
    option = entity.Object;
    golfie = option.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(option)(zuuluu, entity, tangon);
    entity = 0;
    golfie = oscard[entity];
    tangon = argCor;
    entity = undefined;
    golfie = tangon.bind(entity)(golfie);
    var _closure1_slot3 = golfie;
    tangon = 1;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    option = tangon.View;
    var _closure1_slot4 = option;
    tangon = tangon.StyleSheet;
    var _closure1_slot5 = tangon;
    tangon = 2;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    yankee = tangon.DM_WIDTH;
    tangon = tangon.ME;
    var _closure1_slot6 = tangon;
    tangon = 3;
    option = oscard[tangon];
    option = report.bind(entity)(option);
    option = option.jsx;
    var _closure1_slot7 = option;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.jsxs;
    var _closure1_slot8 = tangon;
    tangon = 6;
    tangon = oscard[tangon];
    verify = report.bind(entity)(tangon);
    option = verify.createStyles;
    tangon = {};
    offset = {'position': 'absolute', 'top': 0, 'left': null, 'bottom': 0, 'right': 0, 'flexDirection': 'row'};
    offset['left'] = yankee;
    tangon['sideContainer'] = offset;
    offset = {};
    yankee = 7;
    foxtra = oscard[yankee];
    foxtra = romeon.bind(entity)(foxtra);
    foxtra = foxtra.radii;
    foxtra = foxtra.xl;
    offset['borderTopLeftRadius'] = foxtra;
    foxtra = oscard[yankee];
    foxtra = romeon.bind(entity)(foxtra);
    foxtra = foxtra.radii;
    foxtra = foxtra.none;
    offset['borderTopRightRadius'] = foxtra;
    tangon['side'] = offset;
    offset = {};
    foxtra = oscard[yankee];
    foxtra = romeon.bind(entity)(foxtra);
    foxtra = foxtra.radii;
    foxtra = foxtra.sm;
    offset['borderTopRightRadius'] = foxtra;
    tangon['sideTablet'] = offset;
    offset = {};
    foxtra = oscard[yankee];
    foxtra = romeon.bind(entity)(foxtra);
    foxtra = foxtra.radii;
    foxtra = foxtra.none;
    offset['borderTopLeftRadius'] = foxtra;
    yankee = oscard[yankee];
    yankee = romeon.bind(entity)(yankee);
    yankee = yankee.radii;
    yankee = yankee.none;
    offset['borderTopRightRadius'] = yankee;
    tangon['squareEdges'] = offset;
    tangon = option.bind(verify)(tangon);
    var _closure1_slot9 = tangon;
    option = golfie.memo;
    tangon = function(argFoo) { // Original name: LeftMenuTabsInner
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            michal = argFoo;
            foxtra = michal.maxWidth;
            michal = _closure1_slot9;
            tangon = undefined;
            result = michal.bind(tangon)();
            var _closure2_slot0 = result;
            michal = function() { // Original name: useMainChannelsRouteInfo
                _fun00003: for(var _fun00004_ip = 0; ; ) switch(_fun00004_ip) {
 0:
                    verify = _closure1_slot3;
                    zuuluu = verify.useContext;
                    tangon = _closure1_slot1;
                    oscard = _closure1_slot2;
                    michal = 4;
                    michal = oscard[michal];
                    oscard = undefined;
                    michal = tangon.bind(oscard)(michal);
                    michal = zuuluu.bind(verify)(michal);
                    tangon = michal.guildId;
                    var _closure3_slot0 = tangon;
                    michal = michal.channelId;
                    zuuluu = verify.useRef;
                    zuuluu = zuuluu.bind(verify)(tangon);
                    var _closure3_slot1 = zuuluu;
                    option = verify.useEffect;
                    golfie = new Array(1);
                    golfie[0] = tangon;
                    report = function() {
                        michal = _closure3_slot1;
                        entity = _closure3_slot0;
                        michal['current'] = entity;
                        entity = undefined;
                        return entity;
                    };
                    report = option.bind(verify)(report, golfie);
                    report = null;
                    report = report != tangon;
                    if(!report) { _fun00004_ip = 113; continue _fun00003 }
 105:
                    golfie = _closure1_slot6;
                    report = tangon !== golfie;
 113:
                    golfie = _closure1_slot1;
                    option = _closure1_slot2;
                    entity = 5;
                    entity = option[entity];
                    entity = golfie.bind(oscard)(entity);
                    zuuluu = entity.bind(oscard)(zuuluu);
                    entity = {};
                    entity['isGuildSelected'] = report;
                    if(!report) { _fun00004_ip = 151; continue _fun00003 }
 148:
                    zuuluu = tangon;
 151:
                    entity['selectedGuildId'] = zuuluu;
                    entity['selectedChannelId'] = michal;
                    return entity;
                }
            };
            michal = michal.bind(tangon)();
            output = michal.isGuildSelected;
            update = michal.selectedGuildId;
            echoed = michal.selectedChannelId;
            romeon = _closure1_slot1;
            sizing = _closure1_slot2;
            michal = 8;
            michal = sizing[michal];
            michal = romeon.bind(tangon)(michal);
            michal = michal.bind(tangon)();
            oscard = michal.isChatBesideChannelList;
            var _closure2_slot1 = oscard;
            report = _closure1_slot3;
            zuuluu = report.useMemo;
            michal = new Array(2);
            michal[0] = result;
            michal[1] = oscard;
            entity = function() {
                _fun00005: for(var _fun00006_ip = 0; ; ) switch(_fun00006_ip) {
 0:
                    entity = _closure2_slot0;
                    michal = entity.side;
                    entity = new Array(2);
                    entity[0] = michal;
                    michal = _closure2_slot1;
                    if(!michal) { _fun00006_ip = 38; continue _fun00005 }
 28:
                    zuuluu = _closure2_slot0;
                    michal = zuuluu.sideTablet;
 38:
                    entity[1] = michal;
                    return entity;
                }
            };
            source = zuuluu.bind(report)(entity, michal);
            backup = _closure1_slot0;
            entity = 9;
            michal = sizing[entity];
            zuuluu = backup.bind(tangon)(michal);
            michal = zuuluu.useHomeGesture;
            michal = michal.bind(zuuluu)();
            golfie = michal.gesture;
            ctrled = michal.panelStyles;
            report = michal.homeDrawerState;
            zuuluu = _closure1_slot7;
            entity = sizing[entity];
            entity = backup.bind(tangon)(entity);
            entity = entity.HomeDrawerStateContext;
            michal = entity.Provider;
            entity = {};
            entity['value'] = report;
            report = 10;
            report = sizing[report];
            report = backup.bind(tangon)(report);
            oscard = report.GestureDetector;
            report = {};
            report['gesture'] = golfie;
            verify = _closure1_slot8;
            option = _closure1_slot4;
            golfie = {};
            offset = _closure1_slot5;
            yankee = offset.absoluteFill;
            offset = new Array(2);
            offset[0] = yankee;
            yankee = {};
            yankee['width'] = foxtra;
            offset[1] = yankee;
            golfie['style'] = offset;
            offset = 11;
            offset = sizing[offset];
            offset = backup.bind(tangon)(offset);
            yankee = offset.HomePanelContent;
            offset = {};
            yankee = zuuluu.bind(tangon)(yankee, offset);
            offset = new Array(2);
            offset[0] = yankee;
            yankee = 12;
            yankee = sizing[yankee];
            yankee = romeon.bind(tangon)(yankee);
            romeon = yankee.View;
            yankee = {};
            foxtra = new Array(2);
            foxtra[0] = ctrled;
            result = result.sideContainer;
            foxtra[1] = result;
            yankee['style'] = foxtra;
            foxtra = 'box-none';
            yankee['pointerEvents'] = foxtra;
            foxtra = 13;
            foxtra = sizing[foxtra];
            foxtra = backup.bind(tangon)(foxtra);
            backup = foxtra.NativeFreezeScreens;
            foxtra = {};
            sizing = 0;
            if(!output) { _fun00002_ip = 381; continue _fun00001 }
 378:
            sizing = 1;
 381:
            foxtra['activeIndex'] = sizing;
            result = _closure1_slot7;
            output = _closure1_slot1;
            ctrled = _closure1_slot2;
            kiloes = 14;
            kiloes = ctrled[kiloes];
            sizing = output.bind(tangon)(kiloes);
            kiloes = {};
            kiloes['style'] = source;
            sizing = result.bind(tangon)(sizing, kiloes);
            kiloes = new Array(2);
            kiloes[0] = sizing;
            sizing = 15;
            sizing = ctrled[sizing];
            output = output.bind(tangon)(sizing);
            sizing = {};
            sizing['style'] = source;
            sizing['selectedGuildId'] = update;
            sizing['selectedChannelId'] = echoed;
            sizing = result.bind(tangon)(output, sizing);
            kiloes[1] = sizing;
            foxtra['children'] = kiloes;
            foxtra = verify.bind(tangon)(backup, foxtra);
            yankee['children'] = foxtra;
            yankee = zuuluu.bind(tangon)(romeon, yankee);
            offset[1] = yankee;
            golfie['children'] = offset;
            golfie = verify.bind(tangon)(option, golfie);
            report['children'] = golfie;
            report = zuuluu.bind(tangon)(oscard, report);
            entity['children'] = report;
            entity = zuuluu.bind(tangon)(michal, entity);
            return entity;
        }
    };
    tangon = option.bind(golfie)(tangon);
    var _closure1_slot10 = tangon;
    tangon = golfie.memo;
    michal = function(argFoo) { // Original name: MainChannelsRedesignInner
        entity = argFoo;
        golfie = entity.maxWidth;
        tangon = _closure1_slot7;
        michal = _closure1_slot1;
        verify = _closure1_slot2;
        oscard = 16;
        entity = verify[oscard];
        zuuluu = undefined;
        michal = michal.bind(zuuluu)(entity);
        entity = {};
        option = _closure1_slot0;
        oscard = verify[oscard];
        oscard = option.bind(zuuluu)(oscard);
        oscard = oscard.Profiles;
        oscard = oscard.LeftPanel;
        entity['profile'] = oscard;
        oscard = _closure1_slot10;
        report = {};
        report['maxWidth'] = golfie;
        report = tangon.bind(zuuluu)(oscard, report);
        entity['children'] = report;
        entity = tangon.bind(zuuluu)(michal, entity);
        return entity;
    };
    michal = tangon.bind(golfie)(michal);
    tangon = 17;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'components_native/MainChannels.tsx';
    tangon = report.bind(oscard)(tangon);
    zuuluu['default'] = michal;
    return entity;
})();