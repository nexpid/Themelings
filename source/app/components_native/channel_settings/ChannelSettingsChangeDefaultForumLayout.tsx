// app/components_native/channel_settings/ChannelSettingsChangeDefaultForumLayout.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    oscard = argBar;
    romeon = argBaz;
    zuuluu = argFre;
    golfie = argPlu;
    var _closure1_slot0 = oscard;
    var _closure1_slot1 = romeon;
    var _closure1_slot2 = golfie;
    michal = function(argFoo) { // Original name: ChannelSettingsChangeDefaultForumLayout
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            entity = argFoo;
            entity = entity.channel;
            var _closure2_slot0 = entity;
            michal = _closure1_slot9;
            tangon = undefined;
            backup = michal.bind(tangon)();
            report = _closure1_slot4;
            zuuluu = report.useState;
            michal = entity.defaultForumLayout;
            report = zuuluu.bind(report)(michal);
            zuuluu = _closure1_slot3;
            michal = 2;
            zuuluu = zuuluu.bind(tangon)(report, michal);
            michal = 0;
            yankee = zuuluu[michal];
            michal = 1;
            michal = zuuluu[michal];
            var _closure2_slot1 = michal;
            report = _closure1_slot4;
            zuuluu = report.useCallback;
            entity = entity.id;
            michal = new Array(1);
            michal[0] = entity;
            entity = function(argFoo) {
                oscard = argFoo;
                zuuluu = _closure2_slot1;
                entity = undefined;
                zuuluu = zuuluu.bind(entity)(oscard);
                tangon = _closure1_slot1;
                report = _closure1_slot2;
                zuuluu = 7;
                golfie = report[zuuluu];
                verify = tangon.bind(entity)(golfie);
                option = verify.updateChannel;
                golfie = {};
                golfie['defaultForumLayout'] = oscard;
                golfie = option.bind(verify)(golfie);
                zuuluu = report[zuuluu];
                report = tangon.bind(entity)(zuuluu);
                tangon = report.saveChannel;
                michal = _closure2_slot0;
                zuuluu = michal.id;
                michal = {};
                michal['defaultForumLayout'] = oscard;
                michal = tangon.bind(report)(zuuluu, michal);
                return entity;
            };
            entity = zuuluu.bind(report)(entity, michal);
            var _closure2_slot2 = entity;
            zuuluu = _closure1_slot8;
            michal = _closure1_slot5;
            entity = {};
            report = backup.container;
            entity['style'] = report;
            option = _closure1_slot7;
            oscard = _closure1_slot5;
            report = {};
            result = _closure1_slot8;
            echoed = _closure1_slot0;
            verify = _closure1_slot2;
            romeon = 8;
            romeon = verify[romeon];
            romeon = echoed.bind(tangon)(romeon);
            output = romeon.TableRadioGroup;
            kiloes = {};
            sizing = 9;
            romeon = verify[sizing];
            romeon = echoed.bind(tangon)(romeon);
            foxtra = romeon.intl;
            romeon = foxtra.string;
            verify = verify[sizing];
            verify = echoed.bind(tangon)(verify);
            verify = verify.t;
            verify = verify.mFMDSk;
            verify = romeon.bind(foxtra)(verify);
            kiloes['title'] = verify;
            romeon = null;
            verify = yankee;
            if(!(romeon == verify)) { _fun00002_ip = 269; continue _fun00001 }
 237:
            foxtra = _closure1_slot0;
            echoed = _closure1_slot2;
            romeon = 10;
            romeon = echoed[romeon];
            romeon = foxtra.bind(tangon)(romeon);
            romeon = romeon.ForumLayout;
            verify = romeon.LIST;
 269:
            kiloes['value'] = verify;
            golfie = function(argFoo) { // Original name: onChange
                zuuluu = _closure2_slot2;
                michal = undefined;
                entity = argFoo;
                entity = zuuluu.bind(michal)(entity);
                return entity;
            };
            kiloes['onChange'] = golfie;
            source = _closure1_slot7;
            romeon = _closure1_slot0;
            foxtra = _closure1_slot2;
            golfie = 11;
            verify = foxtra[golfie];
            verify = romeon.bind(tangon)(verify);
            update = verify.TableRadioRow;
            echoed = {};
            vacuum = _closure1_slot7;
            verify = 12;
            verify = foxtra[verify];
            verify = romeon.bind(tangon)(verify);
            ctrled = verify.GridSquareIcon;
            verify = {};
            verify = vacuum.bind(tangon)(ctrled, verify);
            echoed['icon'] = verify;
            verify = foxtra[sizing];
            verify = romeon.bind(tangon)(verify);
            vacuum = verify.intl;
            ctrled = vacuum.string;
            verify = foxtra[sizing];
            verify = romeon.bind(tangon)(verify);
            verify = verify.t;
            verify = verify.U+rQfX;
            verify = ctrled.bind(vacuum)(verify);
            echoed['label'] = verify;
            verify = 10;
            ctrled = foxtra[verify];
            ctrled = romeon.bind(tangon)(ctrled);
            ctrled = ctrled.ForumLayout;
            ctrled = ctrled.GRID;
            echoed['value'] = ctrled;
            update = source.bind(tangon)(update, echoed);
            echoed = new Array(2);
            echoed[0] = update;
            ctrled = _closure1_slot7;
            golfie = foxtra[golfie];
            golfie = romeon.bind(tangon)(golfie);
            source = golfie.TableRadioRow;
            update = {};
            config = _closure1_slot7;
            golfie = _closure1_slot1;
            vacuum = 13;
            vacuum = foxtra[vacuum];
            sequen = golfie.bind(tangon)(vacuum);
            vacuum = {};
            record = 14;
            record = foxtra[record];
            record = golfie.bind(tangon)(record);
            vacuum['source'] = record;
            vacuum = config.bind(tangon)(sequen, vacuum);
            update['icon'] = vacuum;
            vacuum = foxtra[sizing];
            vacuum = romeon.bind(tangon)(vacuum);
            config = vacuum.intl;
            sequen = config.string;
            vacuum = foxtra[sizing];
            vacuum = romeon.bind(tangon)(vacuum);
            vacuum = vacuum.t;
            vacuum = vacuum.tuHPRU;
            vacuum = sequen.bind(config)(vacuum);
            update['label'] = vacuum;
            vacuum = foxtra[verify];
            vacuum = romeon.bind(tangon)(vacuum);
            vacuum = vacuum.ForumLayout;
            vacuum = vacuum.LIST;
            update['value'] = vacuum;
            update = ctrled.bind(tangon)(source, update);
            echoed[1] = update;
            kiloes['children'] = echoed;
            kiloes = result.bind(tangon)(output, kiloes);
            report['children'] = kiloes;
            oscard = option.bind(tangon)(oscard, report);
            report = new Array(4);
            report[0] = oscard;
            kiloes = _closure1_slot7;
            oscard = 15;
            oscard = foxtra[oscard];
            oscard = romeon.bind(tangon)(oscard);
            option = oscard.Text;
            oscard = {'style': null, 'variant': 'text-sm/medium', 'color': 'text-muted'};
            output = backup.description;
            oscard['style'] = output;
            output = foxtra[sizing];
            output = romeon.bind(tangon)(output);
            echoed = output.intl;
            result = echoed.string;
            output = foxtra[sizing];
            output = romeon.bind(tangon)(output);
            output = output.t;
            output = output.MbX5Hh;
            output = result.bind(echoed)(output);
            oscard['children'] = output;
            oscard = kiloes.bind(tangon)(option, oscard);
            report[1] = oscard;
            kiloes = _closure1_slot7;
            oscard = 16;
            oscard = foxtra[oscard];
            oscard = romeon.bind(tangon)(oscard);
            option = oscard.TableRowGroupTitle;
            oscard = {};
            output = foxtra[sizing];
            output = romeon.bind(tangon)(output);
            result = output.intl;
            output = result.string;
            sizing = foxtra[sizing];
            sizing = romeon.bind(tangon)(sizing);
            sizing = sizing.t;
            sizing = sizing.e4oMl5;
            sizing = output.bind(result)(sizing);
            oscard['title'] = sizing;
            oscard = kiloes.bind(tangon)(option, oscard);
            report[2] = oscard;
            option = _closure1_slot7;
            oscard = 17;
            oscard = foxtra[oscard];
            golfie = golfie.bind(tangon)(oscard);
            oscard = {};
            backup = backup.thumbnailImagePortrait;
            oscard['style'] = backup;
            verify = foxtra[verify];
            verify = romeon.bind(tangon)(verify);
            verify = verify.ForumLayout;
            verify = verify.GRID;
            if(!(yankee !== verify)) { _fun00002_ip = 890; continue _fun00001 }
 868:
            yankee = _closure1_slot1;
            romeon = _closure1_slot2;
            verify = 19;
            verify = romeon[verify];
            verify = yankee.bind(tangon)(verify);
            _fun00002_ip = 910; continue _fun00001;
 890:
            yankee = _closure1_slot1;
            romeon = _closure1_slot2;
            offset = 18;
            offset = romeon[offset];
            verify = yankee.bind(tangon)(offset);
 910:
            oscard['source'] = verify;
            oscard = option.bind(tangon)(golfie, oscard);
            report[3] = oscard;
            entity['children'] = report;
            entity = zuuluu.bind(tangon)(michal, entity);
            return entity;
        }
    };
    var _closure1_slot10 = michal;
    entity = global;
    verify = entity.Object;
    option = verify.defineProperty;
    report = {};
    entity = true;
    report['value'] = entity;
    entity = '__esModule';
    entity = option.bind(verify)(zuuluu, entity, report);
    entity = 0;
    report = golfie[entity];
    entity = undefined;
    report = romeon.bind(entity)(report);
    var _closure1_slot3 = report;
    yankee = 1;
    option = golfie[yankee];
    report = argCor;
    report = report.bind(entity)(option);
    var _closure1_slot4 = report;
    report = 2;
    report = golfie[report];
    report = oscard.bind(entity)(report);
    report = report.View;
    var _closure1_slot5 = report;
    report = 3;
    report = golfie[report];
    report = romeon.bind(entity)(report);
    var _closure1_slot6 = report;
    report = 4;
    option = golfie[report];
    option = oscard.bind(entity)(option);
    option = option.jsx;
    var _closure1_slot7 = option;
    report = golfie[report];
    report = oscard.bind(entity)(report);
    report = report.jsxs;
    var _closure1_slot8 = report;
    report = 5;
    report = golfie[report];
    verify = oscard.bind(entity)(report);
    option = verify.createStyles;
    report = {};
    offset = {};
    offset['flex'] = yankee;
    yankee = 6;
    foxtra = golfie[yankee];
    foxtra = romeon.bind(entity)(foxtra);
    foxtra = foxtra.colors;
    foxtra = foxtra.BG_BASE_PRIMARY;
    offset['backgroundColor'] = foxtra;
    foxtra = golfie[yankee];
    foxtra = romeon.bind(entity)(foxtra);
    foxtra = foxtra.spacing;
    foxtra = foxtra.PX_16;
    offset['paddingHorizontal'] = foxtra;
    foxtra = golfie[yankee];
    foxtra = romeon.bind(entity)(foxtra);
    foxtra = foxtra.spacing;
    foxtra = foxtra.PX_16;
    offset['paddingTop'] = foxtra;
    report['container'] = offset;
    offset = {};
    foxtra = golfie[yankee];
    foxtra = romeon.bind(entity)(foxtra);
    foxtra = foxtra.spacing;
    foxtra = foxtra.PX_8;
    offset['paddingTop'] = foxtra;
    yankee = golfie[yankee];
    yankee = romeon.bind(entity)(yankee);
    yankee = yankee.spacing;
    yankee = yankee.PX_16;
    offset['paddingBottom'] = yankee;
    report['description'] = offset;
    offset = {};
    yankee = 'center';
    offset['alignSelf'] = yankee;
    report['thumbnailImagePortrait'] = offset;
    report = option.bind(verify)(report);
    var _closure1_slot9 = report;
    report = 21;
    report = golfie[report];
    golfie = oscard.bind(entity)(report);
    oscard = golfie.fileFinishedImporting;
    report = 'components_native/channel_settings/ChannelSettingsChangeDefaultForumLayout.tsx';
    report = oscard.bind(golfie)(report);
    tangon = function(argFoo) { // Original name: ConnectedChannelSettingsChangeDefaultForumLayout
        _fun00003: for(var _fun00004_ip = 0; ; ) switch(_fun00004_ip) {
 0:
            michal = argFoo;
            michal = michal.channelId;
            var _closure2_slot0 = michal;
            tangon = _closure1_slot0;
            report = _closure1_slot2;
            zuuluu = 20;
            zuuluu = report[zuuluu];
            report = undefined;
            oscard = tangon.bind(report)(zuuluu);
            tangon = oscard.useStateFromStores;
            golfie = _closure1_slot6;
            zuuluu = new Array(1);
            zuuluu[0] = golfie;
            entity = function() {
                zuuluu = _closure1_slot6;
                michal = zuuluu.getChannel;
                entity = _closure2_slot0;
                entity = michal.bind(zuuluu)(entity);
                return entity;
            };
            oscard = tangon.bind(oscard)(zuuluu, entity);
            entity = null;
            zuuluu = entity == oscard;
            if(zuuluu) { _fun00004_ip = 98; continue _fun00003 }
 78:
            tangon = _closure1_slot7;
            zuuluu = _closure1_slot10;
            michal = {};
            michal['channel'] = oscard;
            entity = tangon.bind(report)(zuuluu, michal);
 98:
            return entity;
        }
    };
    zuuluu['default'] = tangon;
    zuuluu['ChannelSettingsChangeDefaultForumLayout'] = michal;
    return entity;
})();