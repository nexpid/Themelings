// app/components_native/channel_settings/ChannelSettingsChangeDefaultForumLayout.tsx
export default (function(argFoo, argBar, argBaz, argCorge, _, argFred, argPlugh) {
    oscar = argBar;
    romeo = argBaz;
    zulu = argFred;
    golf = argPlugh;
    var _closure1_slot0 = oscar;
    var _closure1_slot1 = romeo;
    var _closure1_slot2 = golf;
    mike = function(argFoo) { // Original name: ChannelSettingsChangeDefaultForumLayout
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            entity = argFoo;
            entity = entity.channel;
            var _closure2_slot0 = entity;
            mike = _closure1_slot9;
            tango = undefined;
            backup = mike.bind(tango)();
            report = _closure1_slot4;
            zulu = report.useState;
            mike = entity.defaultForumLayout;
            report = zulu.bind(report)(mike);
            zulu = _closure1_slot3;
            mike = 2;
            zulu = zulu.bind(tango)(report, mike);
            mike = 0;
            yankee = zulu[mike];
            mike = 1;
            mike = zulu[mike];
            var _closure2_slot1 = mike;
            report = _closure1_slot4;
            zulu = report.useCallback;
            entity = entity.id;
            mike = new Array(1);
            mike[0] = entity;
            entity = function(argFoo) {
                oscar = argFoo;
                zulu = _closure2_slot1;
                entity = undefined;
                zulu = zulu.bind(entity)(oscar);
                tango = _closure1_slot1;
                report = _closure1_slot2;
                zulu = 7;
                golf = report[zulu];
                verify = tango.bind(entity)(golf);
                options = verify.updateChannel;
                golf = {};
                golf['defaultForumLayout'] = oscar;
                golf = options.bind(verify)(golf);
                zulu = report[zulu];
                report = tango.bind(entity)(zulu);
                tango = report.saveChannel;
                mike = _closure2_slot0;
                zulu = mike.id;
                mike = {};
                mike['defaultForumLayout'] = oscar;
                mike = tango.bind(report)(zulu, mike);
                return entity;
            };
            entity = zulu.bind(report)(entity, mike);
            var _closure2_slot2 = entity;
            zulu = _closure1_slot8;
            mike = _closure1_slot5;
            entity = {};
            report = backup.container;
            entity['style'] = report;
            options = _closure1_slot7;
            oscar = _closure1_slot5;
            report = {};
            result = _closure1_slot8;
            echo = _closure1_slot0;
            verify = _closure1_slot2;
            romeo = 8;
            romeo = verify[romeo];
            romeo = echo.bind(tango)(romeo);
            output = romeo.TableRadioGroup;
            kilo = {};
            sizing = 9;
            romeo = verify[sizing];
            romeo = echo.bind(tango)(romeo);
            foxtrot = romeo.intl;
            romeo = foxtrot.string;
            verify = verify[sizing];
            verify = echo.bind(tango)(verify);
            verify = verify.t;
            verify = verify.mFMDSk;
            verify = romeo.bind(foxtrot)(verify);
            kilo['title'] = verify;
            romeo = null;
            verify = yankee;
            if(!(romeo == verify)) { _fun00002_ip = 269; continue _fun00001 }
 237:
            foxtrot = _closure1_slot0;
            echo = _closure1_slot2;
            romeo = 10;
            romeo = echo[romeo];
            romeo = foxtrot.bind(tango)(romeo);
            romeo = romeo.ForumLayout;
            verify = romeo.LIST;
 269:
            kilo['value'] = verify;
            golf = function(argFoo) { // Original name: onChange
                zulu = _closure2_slot2;
                mike = undefined;
                entity = argFoo;
                entity = zulu.bind(mike)(entity);
                return entity;
            };
            kilo['onChange'] = golf;
            source = _closure1_slot7;
            romeo = _closure1_slot0;
            foxtrot = _closure1_slot2;
            golf = 11;
            verify = foxtrot[golf];
            verify = romeo.bind(tango)(verify);
            update = verify.TableRadioRow;
            echo = {};
            vacuum = _closure1_slot7;
            verify = 12;
            verify = foxtrot[verify];
            verify = romeo.bind(tango)(verify);
            control = verify.GridSquareIcon;
            verify = {};
            verify = vacuum.bind(tango)(control, verify);
            echo['icon'] = verify;
            verify = foxtrot[sizing];
            verify = romeo.bind(tango)(verify);
            vacuum = verify.intl;
            control = vacuum.string;
            verify = foxtrot[sizing];
            verify = romeo.bind(tango)(verify);
            verify = verify.t;
            verify = verify.U+rQfX;
            verify = control.bind(vacuum)(verify);
            echo['label'] = verify;
            verify = 10;
            control = foxtrot[verify];
            control = romeo.bind(tango)(control);
            control = control.ForumLayout;
            control = control.GRID;
            echo['value'] = control;
            update = source.bind(tango)(update, echo);
            echo = new Array(2);
            echo[0] = update;
            control = _closure1_slot7;
            golf = foxtrot[golf];
            golf = romeo.bind(tango)(golf);
            source = golf.TableRadioRow;
            update = {};
            config = _closure1_slot7;
            golf = _closure1_slot1;
            vacuum = 13;
            vacuum = foxtrot[vacuum];
            sequence = golf.bind(tango)(vacuum);
            vacuum = {};
            record = 14;
            record = foxtrot[record];
            record = golf.bind(tango)(record);
            vacuum['source'] = record;
            vacuum = config.bind(tango)(sequence, vacuum);
            update['icon'] = vacuum;
            vacuum = foxtrot[sizing];
            vacuum = romeo.bind(tango)(vacuum);
            config = vacuum.intl;
            sequence = config.string;
            vacuum = foxtrot[sizing];
            vacuum = romeo.bind(tango)(vacuum);
            vacuum = vacuum.t;
            vacuum = vacuum.tuHPRU;
            vacuum = sequence.bind(config)(vacuum);
            update['label'] = vacuum;
            vacuum = foxtrot[verify];
            vacuum = romeo.bind(tango)(vacuum);
            vacuum = vacuum.ForumLayout;
            vacuum = vacuum.LIST;
            update['value'] = vacuum;
            update = control.bind(tango)(source, update);
            echo[1] = update;
            kilo['children'] = echo;
            kilo = result.bind(tango)(output, kilo);
            report['children'] = kilo;
            oscar = options.bind(tango)(oscar, report);
            report = new Array(4);
            report[0] = oscar;
            kilo = _closure1_slot7;
            oscar = 15;
            oscar = foxtrot[oscar];
            oscar = romeo.bind(tango)(oscar);
            options = oscar.Text;
            oscar = {'style': null, 'variant': 'text-sm/medium', 'color': 'text-muted'};
            output = backup.description;
            oscar['style'] = output;
            output = foxtrot[sizing];
            output = romeo.bind(tango)(output);
            echo = output.intl;
            result = echo.string;
            output = foxtrot[sizing];
            output = romeo.bind(tango)(output);
            output = output.t;
            output = output.MbX5Hh;
            output = result.bind(echo)(output);
            oscar['children'] = output;
            oscar = kilo.bind(tango)(options, oscar);
            report[1] = oscar;
            kilo = _closure1_slot7;
            oscar = 16;
            oscar = foxtrot[oscar];
            oscar = romeo.bind(tango)(oscar);
            options = oscar.TableRowGroupTitle;
            oscar = {};
            output = foxtrot[sizing];
            output = romeo.bind(tango)(output);
            result = output.intl;
            output = result.string;
            sizing = foxtrot[sizing];
            sizing = romeo.bind(tango)(sizing);
            sizing = sizing.t;
            sizing = sizing.e4oMl5;
            sizing = output.bind(result)(sizing);
            oscar['title'] = sizing;
            oscar = kilo.bind(tango)(options, oscar);
            report[2] = oscar;
            options = _closure1_slot7;
            oscar = 17;
            oscar = foxtrot[oscar];
            golf = golf.bind(tango)(oscar);
            oscar = {};
            backup = backup.thumbnailImagePortrait;
            oscar['style'] = backup;
            verify = foxtrot[verify];
            verify = romeo.bind(tango)(verify);
            verify = verify.ForumLayout;
            verify = verify.GRID;
            if(!(yankee !== verify)) { _fun00002_ip = 882; continue _fun00001 }
 860:
            yankee = _closure1_slot1;
            romeo = _closure1_slot2;
            verify = 19;
            verify = romeo[verify];
            verify = yankee.bind(tango)(verify);
            _fun00002_ip = 902; continue _fun00001;
 882:
            yankee = _closure1_slot1;
            romeo = _closure1_slot2;
            offset = 18;
            offset = romeo[offset];
            verify = yankee.bind(tango)(offset);
 902:
            oscar['source'] = verify;
            oscar = options.bind(tango)(golf, oscar);
            report[3] = oscar;
            entity['children'] = report;
            entity = zulu.bind(tango)(mike, entity);
            return entity;
        }
    };
    var _closure1_slot10 = mike;
    entity = global;
    verify = entity.Object;
    options = verify.defineProperty;
    report = {};
    entity = true;
    report['value'] = entity;
    entity = '__esModule';
    entity = options.bind(verify)(zulu, entity, report);
    entity = 0;
    report = golf[entity];
    entity = undefined;
    report = romeo.bind(entity)(report);
    var _closure1_slot3 = report;
    yankee = 1;
    options = golf[yankee];
    report = argCorge;
    report = report.bind(entity)(options);
    var _closure1_slot4 = report;
    report = 2;
    report = golf[report];
    report = oscar.bind(entity)(report);
    report = report.View;
    var _closure1_slot5 = report;
    report = 3;
    report = golf[report];
    report = romeo.bind(entity)(report);
    var _closure1_slot6 = report;
    report = 4;
    options = golf[report];
    options = oscar.bind(entity)(options);
    options = options.jsx;
    var _closure1_slot7 = options;
    report = golf[report];
    report = oscar.bind(entity)(report);
    report = report.jsxs;
    var _closure1_slot8 = report;
    report = 5;
    report = golf[report];
    verify = oscar.bind(entity)(report);
    options = verify.createStyles;
    report = {};
    offset = {};
    offset['flex'] = yankee;
    yankee = 6;
    foxtrot = golf[yankee];
    foxtrot = romeo.bind(entity)(foxtrot);
    foxtrot = foxtrot.colors;
    foxtrot = foxtrot.BG_BASE_PRIMARY;
    offset['backgroundColor'] = foxtrot;
    foxtrot = golf[yankee];
    foxtrot = romeo.bind(entity)(foxtrot);
    foxtrot = foxtrot.spacing;
    foxtrot = foxtrot.PX_16;
    offset['paddingHorizontal'] = foxtrot;
    foxtrot = golf[yankee];
    foxtrot = romeo.bind(entity)(foxtrot);
    foxtrot = foxtrot.spacing;
    foxtrot = foxtrot.PX_16;
    offset['paddingTop'] = foxtrot;
    report['container'] = offset;
    offset = {};
    foxtrot = golf[yankee];
    foxtrot = romeo.bind(entity)(foxtrot);
    foxtrot = foxtrot.spacing;
    foxtrot = foxtrot.PX_8;
    offset['paddingTop'] = foxtrot;
    yankee = golf[yankee];
    yankee = romeo.bind(entity)(yankee);
    yankee = yankee.spacing;
    yankee = yankee.PX_16;
    offset['paddingBottom'] = yankee;
    report['description'] = offset;
    offset = {};
    yankee = 'center';
    offset['alignSelf'] = yankee;
    report['thumbnailImagePortrait'] = offset;
    report = options.bind(verify)(report);
    var _closure1_slot9 = report;
    report = 21;
    report = golf[report];
    golf = oscar.bind(entity)(report);
    oscar = golf.fileFinishedImporting;
    report = 'components_native/channel_settings/ChannelSettingsChangeDefaultForumLayout.tsx';
    report = oscar.bind(golf)(report);
    tango = function(argFoo) { // Original name: ConnectedChannelSettingsChangeDefaultForumLayout
        _fun00003: for(var _fun00004_ip = 0; ; ) switch(_fun00004_ip) {
 0:
            mike = argFoo;
            mike = mike.channelId;
            var _closure2_slot0 = mike;
            tango = _closure1_slot0;
            report = _closure1_slot2;
            zulu = 20;
            zulu = report[zulu];
            report = undefined;
            oscar = tango.bind(report)(zulu);
            tango = oscar.useStateFromStores;
            golf = _closure1_slot6;
            zulu = new Array(1);
            zulu[0] = golf;
            entity = function() {
                zulu = _closure1_slot6;
                mike = zulu.getChannel;
                entity = _closure2_slot0;
                entity = mike.bind(zulu)(entity);
                return entity;
            };
            oscar = tango.bind(oscar)(zulu, entity);
            entity = null;
            zulu = entity == oscar;
            if(zulu) { _fun00004_ip = 98; continue _fun00003 }
 78:
            tango = _closure1_slot7;
            zulu = _closure1_slot10;
            mike = {};
            mike['channel'] = oscar;
            entity = tango.bind(report)(zulu, mike);
 98:
            return entity;
        }
    };
    zulu['default'] = tango;
    zulu['ChannelSettingsChangeDefaultForumLayout'] = mike;
    return entity;
})();