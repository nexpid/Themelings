// app/components_native/channel_settings/ChannelSettingsIntegrationsOverview.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    report = argBar;
    yankee = argBaz;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    var _closure1_slot1 = yankee;
    var _closure1_slot2 = oscard;
    entity = function(argFoo) { // Original name: LinkedLobbyFormSection
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            entity = argFoo;
            entity = entity.channel;
            var _closure2_slot0 = entity;
            zuuluu = _closure1_slot0;
            tangon = _closure1_slot2;
            michal = 4;
            michal = tangon[michal];
            report = undefined;
            oscard = zuuluu.bind(report)(michal);
            michal = oscard.useNavigation;
            michal = michal.bind(oscard)();
            var _closure2_slot1 = michal;
            michal = 5;
            michal = tangon[michal];
            tangon = zuuluu.bind(report)(michal);
            zuuluu = tangon.useGetOrFetchApplication;
            oscard = entity.linkedLobby;
            entity = null;
            golfie = entity == oscard;
            michal = undefined;
            if(golfie) { _fun00002_ip = 94; continue _fun00001 }
 88:
            michal = oscard.application_id;
 94:
            source = zuuluu.bind(tangon)(michal);
            michal = entity == source;
            entity = null;
            if(michal) { _fun00002_ip = 396; continue _fun00001 }
 111:
            tangon = _closure1_slot5;
            yankee = _closure1_slot0;
            foxtra = _closure1_slot2;
            offset = 6;
            michal = foxtra[offset];
            michal = yankee.bind(report)(michal);
            zuuluu = michal.FormSection;
            michal = {};
            oscard = 7;
            golfie = foxtra[oscard];
            golfie = yankee.bind(report)(golfie);
            option = golfie.intl;
            golfie = option.string;
            oscard = foxtra[oscard];
            oscard = yankee.bind(report)(oscard);
            oscard = oscard.t;
            oscard = oscard.oAvIAg;
            oscard = golfie.bind(option)(oscard);
            michal['title'] = oscard;
            option = _closure1_slot5;
            oscard = foxtra[offset];
            oscard = yankee.bind(report)(oscard);
            golfie = oscard.FormRow;
            oscard = {};
            backup = source.name;
            oscard['label'] = backup;
            sizing = _closure1_slot5;
            echoed = _closure1_slot1;
            output = 8;
            backup = foxtra[output];
            kiloes = echoed.bind(report)(backup);
            backup = {};
            result = 9;
            result = foxtra[result];
            update = echoed.bind(report)(result);
            echoed = update.getApplicationIconSource;
            result = {};
            ctrled = source.id;
            result['id'] = ctrled;
            source = source.icon;
            result['icon'] = source;
            result = echoed.bind(update)(result);
            backup['source'] = result;
            output = foxtra[output];
            output = yankee.bind(report)(output);
            output = output.AvatarSizes;
            output = output.REFRESH_MEDIUM_32;
            backup['size'] = output;
            backup = sizing.bind(report)(kiloes, backup);
            oscard['leading'] = backup;
            romeon = _closure1_slot5;
            offset = foxtra[offset];
            offset = yankee.bind(report)(offset);
            offset = offset.FormRow;
            yankee = offset.Arrow;
            offset = {};
            offset = romeon.bind(report)(yankee, offset);
            oscard['trailing'] = offset;
            verify = function() { // Original name: onPress
                tangon = _closure2_slot1;
                zuuluu = tangon.push;
                entity = _closure1_slot4;
                michal = entity.EDIT_LINKED_LOBBY;
                entity = {};
                report = _closure2_slot0;
                entity['channel'] = report;
                report = 1;
                entity['numScreensToPop'] = report;
                entity = zuuluu.bind(tangon)(michal, entity);
                entity = undefined;
                return entity;
            };
            oscard['onPress'] = verify;
            oscard = option.bind(report)(golfie, oscard);
            michal['children'] = oscard;
            entity = tangon.bind(report)(zuuluu, michal);
 396:
            return entity;
        }
    };
    var _closure1_slot8 = entity;
    entity = global;
    option = entity.Object;
    golfie = option.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(option)(zuuluu, entity, tangon);
    entity = 0;
    golfie = oscard[entity];
    tangon = argCor;
    entity = undefined;
    tangon = tangon.bind(entity)(golfie);
    offset = 1;
    tangon = oscard[offset];
    tangon = yankee.bind(entity)(tangon);
    var _closure1_slot3 = tangon;
    tangon = 2;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.ChannelSettingsSections;
    var _closure1_slot4 = tangon;
    tangon = 3;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    golfie = tangon.jsx;
    var _closure1_slot5 = golfie;
    tangon = tangon.jsxs;
    var _closure1_slot6 = tangon;
    tangon = 10;
    tangon = oscard[tangon];
    option = report.bind(entity)(tangon);
    golfie = option.createStyles;
    tangon = {};
    verify = {};
    verify['flex'] = offset;
    offset = 11;
    offset = oscard[offset];
    offset = yankee.bind(entity)(offset);
    offset = offset.colors;
    offset = offset.BG_BASE_PRIMARY;
    verify['backgroundColor'] = offset;
    tangon['screenContainer'] = verify;
    tangon = golfie.bind(option)(tangon);
    var _closure1_slot7 = tangon;
    tangon = 16;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'components_native/channel_settings/ChannelSettingsIntegrationsOverview.tsx';
    tangon = report.bind(oscard)(tangon);
    michal = function(argFoo) { // Original name: ConnectedChannelSettingsIntegrationsOverview
        _fun00003: for(var _fun00004_ip = 0; ; ) switch(_fun00004_ip) {
 0:
            entity = argFoo;
            michal = entity.channelId;
            var _closure2_slot0 = michal;
            romeon = entity.canManageWebhooks;
            offset = entity.canUnlinkLobby;
            michal = _closure1_slot0;
            zuuluu = _closure1_slot2;
            entity = 4;
            entity = zuuluu[entity];
            report = undefined;
            tangon = michal.bind(report)(entity);
            entity = tangon.useNavigation;
            entity = entity.bind(tangon)();
            var _closure2_slot1 = entity;
            entity = 12;
            entity = zuuluu[entity];
            tangon = michal.bind(report)(entity);
            zuuluu = tangon.useStateFromStores;
            entity = _closure1_slot3;
            michal = new Array(1);
            michal[0] = entity;
            entity = function() {
                zuuluu = _closure1_slot3;
                michal = zuuluu.getChannel;
                entity = _closure2_slot0;
                entity = michal.bind(zuuluu)(entity);
                return entity;
            };
            backup = zuuluu.bind(tangon)(michal, entity);
            entity = _closure1_slot7;
            verify = entity.bind(report)();
            foxtra = null;
            michal = foxtra == backup;
            entity = null;
            if(michal) { _fun00004_ip = 715; continue _fun00003 }
 129:
            tangon = _closure1_slot5;
            golfie = _closure1_slot0;
            oscard = _closure1_slot2;
            michal = 13;
            michal = oscard[michal];
            michal = golfie.bind(report)(michal);
            zuuluu = michal.RedesignCompat;
            michal = {};
            option = _closure1_slot6;
            config = 6;
            oscard = oscard[config];
            oscard = golfie.bind(report)(oscard);
            golfie = oscard.Form;
            oscard = {};
            verify = verify.screenContainer;
            oscard['style'] = verify;
            if(!romeon) { _fun00004_ip = 647; continue _fun00003 }
 201:
            sizing = _closure1_slot6;
            vacuum = _closure1_slot0;
            ctrled = _closure1_slot2;
            verify = ctrled[config];
            verify = vacuum.bind(report)(verify);
            kiloes = verify.FormSection;
            verify = {};
            echoed = _closure1_slot5;
            output = ctrled[config];
            output = vacuum.bind(report)(output);
            result = output.FormRow;
            output = {};
            sequen = 7;
            update = ctrled[sequen];
            update = vacuum.bind(report)(update);
            cntext = update.intl;
            record = cntext.string;
            update = ctrled[sequen];
            update = vacuum.bind(report)(update);
            update = update.t;
            update = update.jp25IS;
            update = record.bind(cntext)(update);
            output['label'] = update;
            update = ctrled[sequen];
            update = vacuum.bind(report)(update);
            cntext = update.intl;
            record = cntext.string;
            update = ctrled[sequen];
            update = vacuum.bind(report)(update);
            update = update.t;
            update = update.mKIOkJ;
            update = record.bind(cntext)(update);
            output['subLabel'] = update;
            update = 14;
            update = ctrled[update];
            update = vacuum.bind(report)(update);
            update = update.WebhookIcon;
            output['leading'] = update;
            cntext = _closure1_slot5;
            update = ctrled[config];
            update = vacuum.bind(report)(update);
            update = update.FormRow;
            record = update.Arrow;
            update = {};
            update = cntext.bind(report)(record, update);
            output['trailing'] = update;
            update = function() { // Original name: onPress
                zuuluu = _closure2_slot1;
                michal = zuuluu.push;
                entity = _closure1_slot4;
                entity = entity.WEBHOOKS;
                entity = michal.bind(zuuluu)(entity);
                return entity;
            };
            output['onPress'] = update;
            result = echoed.bind(report)(result, output);
            output = new Array(2);
            output[0] = result;
            update = _closure1_slot5;
            result = ctrled[config];
            result = vacuum.bind(report)(result);
            echoed = result.FormRow;
            result = {};
            record = ctrled[sequen];
            record = vacuum.bind(report)(record);
            papara = record.intl;
            cntext = papara.string;
            record = ctrled[sequen];
            record = vacuum.bind(report)(record);
            record = record.t;
            record = record.OrV60t;
            record = cntext.bind(papara)(record);
            result['label'] = record;
            record = ctrled[sequen];
            record = vacuum.bind(report)(record);
            cntext = record.intl;
            record = cntext.string;
            sequen = ctrled[sequen];
            sequen = vacuum.bind(report)(sequen);
            sequen = sequen.t;
            sequen = sequen.rQREJi;
            sequen = record.bind(cntext)(sequen);
            result['subLabel'] = sequen;
            sequen = 15;
            sequen = ctrled[sequen];
            sequen = vacuum.bind(report)(sequen);
            sequen = sequen.ChannelsFollowedIcon;
            result['leading'] = sequen;
            sequen = _closure1_slot5;
            ctrled = ctrled[config];
            ctrled = vacuum.bind(report)(ctrled);
            ctrled = ctrled.FormRow;
            vacuum = ctrled.Arrow;
            ctrled = {};
            ctrled = sequen.bind(report)(vacuum, ctrled);
            result['trailing'] = ctrled;
            source = function() { // Original name: onPress
                zuuluu = _closure2_slot1;
                michal = zuuluu.push;
                entity = _closure1_slot4;
                entity = entity.CHANNELS_FOLLOWED;
                entity = michal.bind(zuuluu)(entity);
                return entity;
            };
            result['onPress'] = source;
            result = update.bind(report)(echoed, result);
            output[1] = result;
            verify['children'] = output;
            romeon = sizing.bind(report)(kiloes, verify);
 647:
            verify = new Array(2);
            verify[0] = romeon;
            if(!offset) { _fun00004_ip = 668; continue _fun00003 }
 658:
            romeon = backup.linkedLobby;
            offset = foxtra != romeon;
 668:
            if(!offset) { _fun00004_ip = 691; continue _fun00003 }
 671:
            foxtra = _closure1_slot5;
            romeon = _closure1_slot8;
            yankee = {};
            yankee['channel'] = backup;
            offset = foxtra.bind(report)(romeon, yankee);
 691:
            verify[1] = offset;
            oscard['children'] = verify;
            oscard = option.bind(report)(golfie, oscard);
            michal['children'] = oscard;
            entity = tangon.bind(report)(zuuluu, michal);
 715:
            return entity;
        }
    };
    zuuluu['default'] = michal;
    return entity;
})();