// app/components_native/channel_settings/ChannelSettingsIntegrationsOverview.tsx
export default (function(argFoo, argBar, argBaz, argCorge, _, argFred, argPlugh) {
    report = argBar;
    golf = argBaz;
    zulu = argFred;
    oscar = argPlugh;
    var _closure1_slot0 = report;
    var _closure1_slot1 = golf;
    var _closure1_slot2 = oscar;
    entity = function(argFoo) { // Original name: LinkedLobbyFormSection
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            entity = argFoo;
            entity = entity.channel;
            var _closure2_slot0 = entity;
            zulu = _closure1_slot0;
            tango = _closure1_slot2;
            mike = 4;
            mike = tango[mike];
            report = undefined;
            oscar = zulu.bind(report)(mike);
            mike = oscar.useNavigation;
            mike = mike.bind(oscar)();
            var _closure2_slot1 = mike;
            mike = 5;
            mike = tango[mike];
            tango = zulu.bind(report)(mike);
            zulu = tango.useGetOrFetchApplication;
            oscar = entity.linkedLobby;
            entity = null;
            golf = entity == oscar;
            mike = undefined;
            if(golf) { _fun00002_ip = 94; continue _fun00001 }
 88:
            mike = oscar.application_id;
 94:
            source = zulu.bind(tango)(mike);
            mike = entity == source;
            entity = null;
            if(mike) { _fun00002_ip = 396; continue _fun00001 }
 111:
            tango = _closure1_slot5;
            yankee = _closure1_slot0;
            foxtrot = _closure1_slot2;
            offset = 6;
            mike = foxtrot[offset];
            mike = yankee.bind(report)(mike);
            zulu = mike.FormSection;
            mike = {};
            oscar = 7;
            golf = foxtrot[oscar];
            golf = yankee.bind(report)(golf);
            options = golf.intl;
            golf = options.string;
            oscar = foxtrot[oscar];
            oscar = yankee.bind(report)(oscar);
            oscar = oscar.t;
            oscar = oscar.oAvIAg;
            oscar = golf.bind(options)(oscar);
            mike['title'] = oscar;
            options = _closure1_slot5;
            oscar = foxtrot[offset];
            oscar = yankee.bind(report)(oscar);
            golf = oscar.FormRow;
            oscar = {};
            backup = source.name;
            oscar['label'] = backup;
            sizing = _closure1_slot5;
            echo = _closure1_slot1;
            output = 8;
            backup = foxtrot[output];
            kilo = echo.bind(report)(backup);
            backup = {};
            result = 9;
            result = foxtrot[result];
            update = echo.bind(report)(result);
            echo = update.getApplicationIconSource;
            result = {};
            control = source.id;
            result['id'] = control;
            source = source.icon;
            result['icon'] = source;
            result = echo.bind(update)(result);
            backup['source'] = result;
            output = foxtrot[output];
            output = yankee.bind(report)(output);
            output = output.AvatarSizes;
            output = output.REFRESH_MEDIUM_32;
            backup['size'] = output;
            backup = sizing.bind(report)(kilo, backup);
            oscar['leading'] = backup;
            romeo = _closure1_slot5;
            offset = foxtrot[offset];
            offset = yankee.bind(report)(offset);
            offset = offset.FormRow;
            yankee = offset.Arrow;
            offset = {};
            offset = romeo.bind(report)(yankee, offset);
            oscar['trailing'] = offset;
            verify = function() { // Original name: onPress
                tango = _closure2_slot1;
                zulu = tango.push;
                entity = _closure1_slot4;
                mike = entity.EDIT_LINKED_LOBBY;
                entity = {};
                report = _closure2_slot0;
                entity['channel'] = report;
                report = 1;
                entity['numScreensToPop'] = report;
                entity = zulu.bind(tango)(mike, entity);
                entity = undefined;
                return entity;
            };
            oscar['onPress'] = verify;
            oscar = options.bind(report)(golf, oscar);
            mike['children'] = oscar;
            entity = tango.bind(report)(zulu, mike);
 396:
            return entity;
        }
    };
    var _closure1_slot7 = entity;
    entity = global;
    verify = entity.Object;
    options = verify.defineProperty;
    tango = {};
    entity = true;
    tango['value'] = entity;
    entity = '__esModule';
    entity = options.bind(verify)(zulu, entity, tango);
    entity = 0;
    options = oscar[entity];
    tango = argCorge;
    entity = undefined;
    tango = tango.bind(entity)(options);
    tango = 1;
    tango = oscar[tango];
    tango = golf.bind(entity)(tango);
    var _closure1_slot3 = tango;
    tango = 2;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.ChannelSettingsSections;
    var _closure1_slot4 = tango;
    tango = 3;
    golf = oscar[tango];
    golf = report.bind(entity)(golf);
    golf = golf.jsx;
    var _closure1_slot5 = golf;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.jsxs;
    var _closure1_slot6 = tango;
    tango = 14;
    tango = oscar[tango];
    oscar = report.bind(entity)(tango);
    report = oscar.fileFinishedImporting;
    tango = 'components_native/channel_settings/ChannelSettingsIntegrationsOverview.tsx';
    tango = report.bind(oscar)(tango);
    mike = function(argFoo) { // Original name: ConnectedChannelSettingsIntegrationsOverview
        _fun00003: for(var _fun00004_ip = 0; ; ) switch(_fun00004_ip) {
 0:
            entity = argFoo;
            mike = entity.channelId;
            var _closure2_slot0 = mike;
            romeo = entity.canManageWebhooks;
            offset = entity.canUnlinkLobby;
            mike = _closure1_slot0;
            zulu = _closure1_slot2;
            entity = 4;
            entity = zulu[entity];
            report = undefined;
            tango = mike.bind(report)(entity);
            entity = tango.useNavigation;
            entity = entity.bind(tango)();
            var _closure2_slot1 = entity;
            entity = 10;
            entity = zulu[entity];
            tango = mike.bind(report)(entity);
            zulu = tango.useStateFromStores;
            entity = _closure1_slot3;
            mike = new Array(1);
            mike[0] = entity;
            entity = function() {
                zulu = _closure1_slot3;
                mike = zulu.getChannel;
                entity = _closure2_slot0;
                entity = mike.bind(zulu)(entity);
                return entity;
            };
            backup = zulu.bind(tango)(mike, entity);
            foxtrot = null;
            mike = foxtrot == backup;
            entity = null;
            if(mike) { _fun00004_ip = 697; continue _fun00003 }
 121:
            tango = _closure1_slot5;
            golf = _closure1_slot0;
            oscar = _closure1_slot2;
            mike = 11;
            mike = oscar[mike];
            mike = golf.bind(report)(mike);
            zulu = mike.RedesignCompat;
            mike = {};
            options = _closure1_slot6;
            config = 6;
            oscar = oscar[config];
            oscar = golf.bind(report)(oscar);
            golf = oscar.Form;
            oscar = {};
            if(!romeo) { _fun00004_ip = 629; continue _fun00003 }
 183:
            sizing = _closure1_slot6;
            vacuum = _closure1_slot0;
            control = _closure1_slot2;
            verify = control[config];
            verify = vacuum.bind(report)(verify);
            kilo = verify.FormSection;
            verify = {};
            echo = _closure1_slot5;
            output = control[config];
            output = vacuum.bind(report)(output);
            result = output.FormRow;
            output = {};
            sequence = 7;
            update = control[sequence];
            update = vacuum.bind(report)(update);
            context = update.intl;
            record = context.string;
            update = control[sequence];
            update = vacuum.bind(report)(update);
            update = update.t;
            update = update.jp25IS;
            update = record.bind(context)(update);
            output['label'] = update;
            update = control[sequence];
            update = vacuum.bind(report)(update);
            context = update.intl;
            record = context.string;
            update = control[sequence];
            update = vacuum.bind(report)(update);
            update = update.t;
            update = update.mKIOkJ;
            update = record.bind(context)(update);
            output['subLabel'] = update;
            update = 12;
            update = control[update];
            update = vacuum.bind(report)(update);
            update = update.WebhookIcon;
            output['leading'] = update;
            context = _closure1_slot5;
            update = control[config];
            update = vacuum.bind(report)(update);
            update = update.FormRow;
            record = update.Arrow;
            update = {};
            update = context.bind(report)(record, update);
            output['trailing'] = update;
            update = function() { // Original name: onPress
                zulu = _closure2_slot1;
                mike = zulu.push;
                entity = _closure1_slot4;
                entity = entity.WEBHOOKS;
                entity = mike.bind(zulu)(entity);
                return entity;
            };
            output['onPress'] = update;
            result = echo.bind(report)(result, output);
            output = new Array(2);
            output[0] = result;
            update = _closure1_slot5;
            result = control[config];
            result = vacuum.bind(report)(result);
            echo = result.FormRow;
            result = {};
            record = control[sequence];
            record = vacuum.bind(report)(record);
            papa = record.intl;
            context = papa.string;
            record = control[sequence];
            record = vacuum.bind(report)(record);
            record = record.t;
            record = record.OrV60t;
            record = context.bind(papa)(record);
            result['label'] = record;
            record = control[sequence];
            record = vacuum.bind(report)(record);
            context = record.intl;
            record = context.string;
            sequence = control[sequence];
            sequence = vacuum.bind(report)(sequence);
            sequence = sequence.t;
            sequence = sequence.rQREJi;
            sequence = record.bind(context)(sequence);
            result['subLabel'] = sequence;
            sequence = 13;
            sequence = control[sequence];
            sequence = vacuum.bind(report)(sequence);
            sequence = sequence.ChannelsFollowedIcon;
            result['leading'] = sequence;
            sequence = _closure1_slot5;
            control = control[config];
            control = vacuum.bind(report)(control);
            control = control.FormRow;
            vacuum = control.Arrow;
            control = {};
            control = sequence.bind(report)(vacuum, control);
            result['trailing'] = control;
            source = function() { // Original name: onPress
                zulu = _closure2_slot1;
                mike = zulu.push;
                entity = _closure1_slot4;
                entity = entity.CHANNELS_FOLLOWED;
                entity = mike.bind(zulu)(entity);
                return entity;
            };
            result['onPress'] = source;
            result = update.bind(report)(echo, result);
            output[1] = result;
            verify['children'] = output;
            romeo = sizing.bind(report)(kilo, verify);
 629:
            verify = new Array(2);
            verify[0] = romeo;
            if(!offset) { _fun00004_ip = 650; continue _fun00003 }
 640:
            romeo = backup.linkedLobby;
            offset = foxtrot != romeo;
 650:
            if(!offset) { _fun00004_ip = 673; continue _fun00003 }
 653:
            foxtrot = _closure1_slot5;
            romeo = _closure1_slot7;
            yankee = {};
            yankee['channel'] = backup;
            offset = foxtrot.bind(report)(romeo, yankee);
 673:
            verify[1] = offset;
            oscar['children'] = verify;
            oscar = options.bind(report)(golf, oscar);
            mike['children'] = oscar;
            entity = tango.bind(report)(zulu, mike);
 697:
            return entity;
        }
    };
    zulu['default'] = mike;
    return entity;
})();