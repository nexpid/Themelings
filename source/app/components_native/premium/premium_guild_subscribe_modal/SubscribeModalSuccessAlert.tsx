// app/components_native/premium/premium_guild_subscribe_modal/SubscribeModalSuccessAlert.tsx
export default (function(argFoo, argBar, argBaz, argCorge, _, argFred, argPlugh) {
    report = argBar;
    romeo = argBaz;
    zulu = argFred;
    oscar = argPlugh;
    var _closure1_slot0 = report;
    var _closure1_slot1 = romeo;
    var _closure1_slot2 = oscar;
    entity = global;
    options = entity.Object;
    golf = options.defineProperty;
    tango = {};
    entity = true;
    tango['value'] = entity;
    entity = '__esModule';
    entity = golf.bind(options)(zulu, entity, tango);
    entity = 0;
    tango = oscar[entity];
    entity = undefined;
    tango = romeo.bind(entity)(tango);
    var _closure1_slot3 = tango;
    tango = 1;
    golf = oscar[tango];
    tango = argCorge;
    tango = tango.bind(entity)(golf);
    var _closure1_slot4 = tango;
    tango = 2;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    golf = tango.View;
    var _closure1_slot5 = golf;
    tango = tango.Image;
    var _closure1_slot6 = tango;
    tango = 3;
    tango = oscar[tango];
    tango = romeo.bind(entity)(tango);
    var _closure1_slot7 = tango;
    tango = 4;
    golf = oscar[tango];
    golf = report.bind(entity)(golf);
    golf = golf.jsx;
    var _closure1_slot8 = golf;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.jsxs;
    var _closure1_slot9 = tango;
    tango = 5;
    tango = oscar[tango];
    options = report.bind(entity)(tango);
    golf = options.createStyles;
    tango = {};
    offset = 24;
    verify = {'paddingHorizontal': 24, 'paddingBottom': 16, 'paddingTop': 4, 'alignItems': 'stretch'};
    tango['wrapper'] = verify;
    verify = {'width': 'auto', 'height': 112, 'alignSelf': 'center'};
    tango['animation'] = verify;
    verify = {'lineHeight': 18, 'textAlign': 'center'};
    tango['text'] = verify;
    verify = {'padding': 2, 'borderRadius': null, 'marginTop': 8};
    yankee = 6;
    foxtrot = oscar[yankee];
    foxtrot = romeo.bind(entity)(foxtrot);
    foxtrot = foxtrot.radii;
    foxtrot = foxtrot.xs;
    verify['borderRadius'] = foxtrot;
    tango['activated'] = verify;
    verify = {'backgroundColor': null, 'paddingVertical': 12, 'paddingHorizontal': 20, 'alignItems': 'center'};
    yankee = oscar[yankee];
    yankee = romeo.bind(entity)(yankee);
    yankee = yankee.colors;
    yankee = yankee.BACKGROUND_PRIMARY;
    verify['backgroundColor'] = yankee;
    tango['activatedBackground'] = verify;
    verify = {};
    yankee = 220;
    verify['width'] = yankee;
    tango['activatedImage'] = verify;
    verify = {};
    verify['marginTop'] = offset;
    tango['successInfo'] = verify;
    tango = golf.bind(options)(tango);
    var _closure1_slot10 = tango;
    golf = {};
    tango = 'entry';
    golf['ENTRY'] = tango;
    tango = 'idle';
    golf['IDLE'] = tango;
    tango = {};
    verify = golf.ENTRY;
    options = {'BEG': 0, 'END': 180};
    tango[verify] = options;
    verify = golf.IDLE;
    options = {'BEG': 180, 'END': 360};
    tango[verify] = options;
    var _closure1_slot11 = tango;
    tango = function(argFoo) { // Original name: PremiumPaymentGuildAnimation
        entity = argFoo;
        offset = entity.nextScene;
        verify = entity.onSceneComplete;
        options = entity.loop;
        entity = _closure1_slot10;
        tango = undefined;
        oscar = entity.bind(tango)();
        zulu = _closure1_slot8;
        mike = _closure1_slot1;
        golf = _closure1_slot2;
        entity = 7;
        entity = golf[entity];
        mike = mike.bind(tango)(entity);
        entity = {};
        entity['nextScene'] = offset;
        entity['onSceneComplete'] = verify;
        entity['loop'] = options;
        options = _closure1_slot11;
        entity['sceneSegments'] = options;
        oscar = oscar.animation;
        entity['style'] = oscar;
        oscar = _closure1_slot0;
        report = 8;
        report = golf[report];
        report = oscar.bind(tango)(report);
        entity['source'] = report;
        entity = zulu.bind(tango)(mike, entity);
        return entity;
    };
    var _closure1_slot12 = tango;
    tango['Scenes'] = golf;
    tango = 21;
    tango = oscar[tango];
    oscar = report.bind(entity)(tango);
    report = oscar.fileFinishedImporting;
    tango = 'components_native/premium/premium_guild_subscribe_modal/SubscribeModalSuccessAlert.tsx';
    tango = report.bind(oscar)(tango);
    mike = function(argFoo) { // Original name: SubscribeModalSuccessAlert
        _fun105381: for(var _fun105381_ip = 0; ; ) switch(_fun105381_ip) {
 0:
            entity = argFoo;
            mike = entity.guildId;
            var _closure2_slot0 = mike;
            vacuum = entity.previousGuildSubscriptionSlot;
            entity = _closure1_slot10;
            tango = undefined;
            echo = entity.bind(tango)();
            sizing = _closure1_slot0;
            result = _closure1_slot2;
            entity = 9;
            entity = result[entity];
            report = sizing.bind(tango)(entity);
            zulu = report.useStateFromStores;
            entity = _closure1_slot7;
            mike = new Array(1);
            mike[0] = entity;
            entity = function() {
                zulu = _closure1_slot7;
                mike = zulu.getGuild;
                entity = _closure2_slot0;
                entity = mike.bind(zulu)(entity);
                return entity;
            };
            source = zulu.bind(report)(mike, entity);
            verify = _closure1_slot4;
            mike = verify.useState;
            oscar = _closure1_slot12;
            entity = oscar.Scenes;
            entity = entity.ENTRY;
            entity = mike.bind(verify)(entity);
            report = _closure1_slot3;
            zulu = 2;
            entity = report.bind(tango)(entity, zulu);
            mike = 0;
            yankee = entity[mike];
            update = 1;
            entity = entity[update];
            var _closure2_slot1 = entity;
            options = verify.useState;
            entity = false;
            entity = options.bind(verify)(entity);
            entity = report.bind(tango)(entity, zulu);
            options = entity[mike];
            entity = entity[update];
            var _closure2_slot2 = entity;
            verify = _closure1_slot1;
            entity = 10;
            entity = result[entity];
            entity = verify.bind(tango)(entity);
            output = entity.bind(tango)();
            zulu = _closure1_slot9;
            entity = 11;
            entity = result[entity];
            mike = verify.bind(tango)(entity);
            entity = {};
            report = echo.wrapper;
            entity['style'] = report;
            control = 12;
            report = result[control];
            report = sizing.bind(tango)(report);
            romeo = report.intl;
            offset = romeo.string;
            report = result[control];
            report = sizing.bind(tango)(report);
            report = report.t;
            report = report.YKxJCA;
            report = offset.bind(romeo)(report);
            entity['confirmText'] = report;
            report = function() { // Original name: onConfirm
                report = _closure1_slot1;
                tango = _closure1_slot2;
                entity = 13;
                zulu = tango[entity];
                entity = undefined;
                report = report.bind(entity)(zulu);
                zulu = report.close;
                zulu = zulu.bind(report)();
                zulu = _closure1_slot0;
                mike = 14;
                mike = tango[mike];
                zulu = zulu.bind(entity)(mike);
                mike = zulu.closeApplyBoostModal;
                mike = mike.bind(zulu)();
                return entity;
            };
            entity['onConfirm'] = report;
            offset = _closure1_slot8;
            report = {};
            report['nextScene'] = yankee;
            report['loop'] = options;
            golf = function(argFoo) { // Original name: onSceneComplete
                _fun105384: for(var _fun105384_ip = 0; ; ) switch(_fun105384_ip) {
 0:
                    zulu = argFoo;
                    mike = _closure1_slot12;
                    mike = mike.Scenes;
                    mike = mike.ENTRY;
                    if(!(mike !== zulu)) { _fun105384_ip = 68; continue _fun105384 }
 26:
                    mike = _closure1_slot12;
                    mike = mike.Scenes;
                    mike = mike.IDLE;
                    if(!(mike !== zulu)) { _fun105384_ip = 50; continue _fun105384 }
 46:
                    mike = undefined;
                    return mike;
 50:
                    tango = _closure2_slot2;
                    zulu = undefined;
                    mike = true;
                    mike = tango.bind(zulu)(mike);
                    return mike;
 68:
                    zulu = _closure2_slot1;
                    entity = _closure1_slot12;
                    entity = entity.Scenes;
                    mike = entity.IDLE;
                    entity = undefined;
                    entity = zulu.bind(entity)(mike);
                    return entity;
                }
            };
            report['onSceneComplete'] = golf;
            oscar = offset.bind(tango)(oscar, report);
            report = new Array(2);
            report[0] = oscar;
            golf = _closure1_slot5;
            oscar = {};
            options = 15;
            options = result[options];
            verify = verify.bind(tango)(options);
            options = {};
            yankee = echo.activated;
            options['style'] = yankee;
            yankee = 16;
            romeo = result[yankee];
            romeo = sizing.bind(tango)(romeo);
            romeo = romeo.HorizontalGradient;
            romeo = romeo.START;
            options['start'] = romeo;
            romeo = result[yankee];
            romeo = sizing.bind(tango)(romeo);
            romeo = romeo.HorizontalGradient;
            romeo = romeo.END;
            options['end'] = romeo;
            yankee = result[yankee];
            yankee = sizing.bind(tango)(yankee);
            yankee = yankee.Gradients;
            yankee = yankee.PREMIUM_GUILD;
            options['colors'] = yankee;
            yankee = {};
            romeo = echo.activatedBackground;
            yankee['style'] = romeo;
            foxtrot = _closure1_slot6;
            romeo = {};
            kilo = echo.activatedImage;
            romeo['style'] = kilo;
            kilo = 17;
            kilo = result[kilo];
            sizing = sizing.bind(tango)(kilo);
            kilo = sizing.isThemeLight;
            kilo = kilo.bind(sizing)(output);
            output = _closure1_slot1;
            result = _closure1_slot2;
            if(kilo) { _fun105381_ip = 511; continue _fun105381 }
 497:
            kilo = 19;
            kilo = result[kilo];
            kilo = output.bind(tango)(kilo);
            _fun105381_ip = 523; continue _fun105381;
 511:
            sizing = 18;
            sizing = result[sizing];
            kilo = output.bind(tango)(sizing);
 523:
            romeo['source'] = kilo;
            romeo = offset.bind(tango)(foxtrot, romeo);
            yankee['children'] = romeo;
            yankee = offset.bind(tango)(golf, yankee);
            options['children'] = yankee;
            verify = offset.bind(tango)(verify, options);
            options = new Array(2);
            options[0] = verify;
            yankee = _closure1_slot9;
            offset = _closure1_slot5;
            verify = {};
            romeo = echo.successInfo;
            verify['style'] = romeo;
            sizing = _closure1_slot8;
            kilo = _closure1_slot0;
            romeo = _closure1_slot2;
            foxtrot = 20;
            romeo = romeo[foxtrot];
            romeo = kilo.bind(tango)(romeo);
            kilo = romeo.Text;
            romeo = {};
            output = echo.text;
            romeo['style'] = output;
            result = 'text-sm/medium';
            romeo['variant'] = result;
            output = null;
            if(!(output == vacuum)) { _fun105381_ip = 689; continue _fun105381 }
 635:
            config = _closure1_slot0;
            output = _closure1_slot2;
            vacuum = output[control];
            vacuum = config.bind(tango)(vacuum);
            sequence = vacuum.intl;
            vacuum = sequence.string;
            output = output[control];
            output = config.bind(tango)(output);
            output = output.t;
            output = output.d81BkZ;
            output = vacuum.bind(sequence)(output);
            _fun105381_ip = 741; continue _fun105381;
 689:
            record = _closure1_slot0;
            vacuum = _closure1_slot2;
            sequence = vacuum[control];
            sequence = record.bind(tango)(sequence);
            config = sequence.intl;
            sequence = config.string;
            vacuum = vacuum[control];
            vacuum = record.bind(tango)(vacuum);
            vacuum = vacuum.t;
            vacuum = vacuum.RMmWY2;
            output = sequence.bind(config)(vacuum);
 741:
            romeo['children'] = output;
            kilo = sizing.bind(tango)(kilo, romeo);
            romeo = new Array(2);
            romeo[0] = kilo;
            kilo = _closure1_slot8;
            output = _closure1_slot0;
            sizing = _closure1_slot2;
            foxtrot = sizing[foxtrot];
            foxtrot = output.bind(tango)(foxtrot);
            backup = foxtrot.Text;
            foxtrot = {};
            echo = echo.text;
            foxtrot['style'] = echo;
            foxtrot['variant'] = result;
            result = sizing[control];
            result = output.bind(tango)(result);
            echo = result.intl;
            result = echo.format;
            sizing = sizing[control];
            sizing = output.bind(tango)(sizing);
            sizing = sizing.t;
            output = sizing.r0IGsL;
            sizing = {};
            source = source.name;
            sizing['guildName'] = source;
            sizing['guildSubscriptionQuantity'] = update;
            sizing = result.bind(echo)(output, sizing);
            foxtrot['children'] = sizing;
            foxtrot = kilo.bind(tango)(backup, foxtrot);
            romeo[1] = foxtrot;
            verify['children'] = romeo;
            verify = yankee.bind(tango)(offset, verify);
            options[1] = verify;
            oscar['children'] = options;
            oscar = zulu.bind(tango)(golf, oscar);
            report[1] = oscar;
            entity['children'] = report;
            entity = zulu.bind(tango)(mike, entity);
            return entity;
        }
    };
    zulu['default'] = mike;
    return entity;
})();