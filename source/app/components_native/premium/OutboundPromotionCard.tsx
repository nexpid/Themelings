// app/components_native/premium/OutboundPromotionCard.tsx
export default (function(argFoo, argBar, argBaz, argCorge, _, argFred, argPlugh) {
    report = argBar;
    romeo = argBaz;
    zulu = argFred;
    oscar = argPlugh;
    var _closure1_slot0 = report;
    var _closure1_slot1 = romeo;
    var _closure1_slot2 = oscar;
    entity = function(argFoo) { // Original name: TermsAndConditionsActionSheet
        entity = argFoo;
        romeo = entity.termsAndConditions;
        entity = _closure1_slot9;
        tango = undefined;
        verify = entity.bind(tango)();
        zulu = _closure1_slot7;
        oscar = _closure1_slot0;
        offset = _closure1_slot2;
        entity = 8;
        entity = offset[entity];
        entity = oscar.bind(tango)(entity);
        mike = entity.BottomSheet;
        entity = {};
        yankee = _closure1_slot7;
        report = 9;
        report = offset[report];
        report = oscar.bind(tango)(report);
        golf = report.BottomSheetTitleHeader;
        report = {};
        foxtrot = 10;
        backup = offset[foxtrot];
        backup = oscar.bind(tango)(backup);
        kilo = backup.intl;
        backup = kilo.string;
        foxtrot = offset[foxtrot];
        foxtrot = oscar.bind(tango)(foxtrot);
        foxtrot = foxtrot.t;
        foxtrot = foxtrot.PdKWVV;
        foxtrot = backup.bind(kilo)(foxtrot);
        report['title'] = foxtrot;
        report = yankee.bind(tango)(golf, report);
        entity['header'] = report;
        golf = _closure1_slot7;
        report = 11;
        report = offset[report];
        report = oscar.bind(tango)(report);
        oscar = report.Text;
        report = {};
        verify = verify.termsAndConditionsText;
        report['style'] = verify;
        verify = 'text-sm/medium';
        report['variant'] = verify;
        verify = _closure1_slot1;
        options = 12;
        options = offset[options];
        yankee = verify.bind(tango)(options);
        offset = yankee.parse;
        verify = {};
        options = true;
        verify['allowLinks'] = options;
        options = false;
        options = offset.bind(yankee)(romeo, options, verify);
        report['children'] = options;
        report = golf.bind(tango)(oscar, report);
        entity['children'] = report;
        entity = zulu.bind(tango)(mike, entity);
        return entity;
    };
    var _closure1_slot10 = entity;
    entity = global;
    options = entity.Object;
    golf = options.defineProperty;
    tango = {};
    entity = true;
    tango['value'] = entity;
    entity = '__esModule';
    entity = golf.bind(options)(zulu, entity, tango);
    entity = 0;
    tango = oscar[entity];
    entity = undefined;
    tango = romeo.bind(entity)(tango);
    var _closure1_slot3 = tango;
    tango = 1;
    golf = oscar[tango];
    tango = argCorge;
    tango = tango.bind(entity)(golf);
    var _closure1_slot4 = tango;
    tango = 2;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    golf = tango.View;
    var _closure1_slot5 = golf;
    tango = tango.Image;
    var _closure1_slot6 = tango;
    tango = 3;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    offset = tango.USER_SETTINGS_CONTAINER_HORIZONTAL_PADDING;
    tango = 4;
    golf = oscar[tango];
    golf = report.bind(entity)(golf);
    golf = golf.jsx;
    var _closure1_slot7 = golf;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.jsxs;
    var _closure1_slot8 = tango;
    tango = 5;
    tango = oscar[tango];
    options = report.bind(entity)(tango);
    golf = options.createStyles;
    tango = {};
    verify = {'flex': 1, 'flexDirection': 'column', 'paddingHorizontal': null, 'paddingVertical': 12, 'backgroundColor': null, 'marginTop': 8};
    verify['paddingHorizontal'] = offset;
    offset = 12;
    yankee = 6;
    foxtrot = oscar[yankee];
    foxtrot = romeo.bind(entity)(foxtrot);
    foxtrot = foxtrot.colors;
    foxtrot = foxtrot.BACKGROUND_MOBILE_SECONDARY;
    verify['backgroundColor'] = foxtrot;
    tango['card'] = verify;
    verify = {'flex': 1, 'flexDirection': 'row', 'alignItems': 'center', 'justifyContent': 'space-between'};
    tango['mainContainer'] = verify;
    verify = {'flexDirection': 'row', 'flexShrink': 1, 'alignItems': 'center'};
    tango['textContainer'] = verify;
    verify = {'width': 32, 'height': 32, 'marginRight': 8, 'borderRadius': null, 'alignItems': 'center', 'justifyContent': 'center'};
    yankee = oscar[yankee];
    yankee = romeo.bind(entity)(yankee);
    yankee = yankee.radii;
    yankee = yankee.xs;
    verify['borderRadius'] = yankee;
    yankee = 7;
    yankee = oscar[yankee];
    yankee = report.bind(entity)(yankee);
    yankee = yankee.DARK_BLACK_500_LIGHT_PRIMARY_100;
    verify['backgroundColor'] = yankee;
    tango['imageContainer'] = verify;
    verify = {'width': 28, 'height': 28, 'resizeMode': 'contain'};
    tango['image'] = verify;
    verify = {};
    yankee = 20;
    verify['lineHeight'] = yankee;
    tango['title'] = verify;
    verify = {};
    yankee = 18;
    verify['lineHeight'] = yankee;
    tango['subText'] = verify;
    verify = {};
    verify['paddingHorizontal'] = offset;
    tango['claimButton'] = verify;
    verify = {};
    offset = 40;
    verify['marginLeft'] = offset;
    tango['moreDetails'] = verify;
    verify = {'paddingHorizontal': 16, 'paddingTop': 16};
    tango['termsAndConditionsText'] = verify;
    verify = {'flexGrow': 1, 'flexDirection': 'row', 'marginLeft': 4, 'justifyContent': 'flex-end'};
    tango['buttonContainer'] = verify;
    tango = golf.bind(options)(tango);
    var _closure1_slot9 = tango;
    tango = 22;
    tango = oscar[tango];
    oscar = report.bind(entity)(tango);
    report = oscar.fileFinishedImporting;
    tango = 'components_native/premium/OutboundPromotionCard.tsx';
    tango = report.bind(oscar)(tango);
    mike = function(argFoo) { // Original name: OutboundPromotionCard
        _fun96289: for(var _fun96289_ip = 0; ; ) switch(_fun96289_ip) {
 0:
            mike = argFoo;
            source = mike.outboundPromotion;
            var _closure2_slot0 = source;
            entity = mike.code;
            var _closure2_slot1 = entity;
            golf = mike.addClaimedOutboundPromotionCode;
            var _closure2_slot2 = golf;
            tango = undefined;
            var _closure2_slot3 = tango;
            var _closure2_slot4 = tango;
            mike = _closure1_slot9;
            foxtrot = mike.bind(tango)();
            zulu = _closure1_slot1;
            report = _closure1_slot2;
            mike = 13;
            mike = report[mike];
            mike = zulu.bind(tango)(mike);
            offset = mike.bind(tango)();
            options = _closure1_slot0;
            mike = 14;
            mike = report[mike];
            verify = options.bind(tango)(mike);
            options = verify.getPromotionImageURL;
            mike = source.id;
            sizing = options.bind(verify)(mike, offset);
            mike = null;
            options = mike != entity;
            mike = 15;
            mike = report[mike];
            mike = zulu.bind(tango)(mike);
            offset = mike.bind(tango)(source, options);
            zulu = _closure1_slot0;
            mike = _closure1_slot2;
            kilo = 10;
            report = mike[kilo];
            report = zulu.bind(tango)(report);
            verify = report.intl;
            report = verify.formatToPlainString;
            mike = mike[kilo];
            mike = zulu.bind(tango)(mike);
            mike = mike.t;
            if(options) { _fun96289_ip = 204; continue _fun96289 }
 183:
            yankee = mike./XWgfH;
            zulu = {};
            zulu['endDate'] = offset;
            control = report.bind(verify)(yankee, zulu);
            _fun96289_ip = 223; continue _fun96289;
 204:
            zulu = mike.VaD05u;
            mike = {};
            mike['endDate'] = offset;
            control = report.bind(verify)(zulu, mike);
 223:
            verify = _closure1_slot0;
            mike = _closure1_slot2;
            zulu = mike[kilo];
            zulu = verify.bind(tango)(zulu);
            report = zulu.intl;
            zulu = report.string;
            mike = mike[kilo];
            mike = verify.bind(tango)(mike);
            mike = mike.t;
            if(options) { _fun96289_ip = 280; continue _fun96289 }
 267:
            options = mike.O13yh4;
            echo = zulu.bind(report)(options);
            _fun96289_ip = 291; continue _fun96289;
 280:
            mike = mike.2cHUtr;
            echo = zulu.bind(report)(mike);
 291:
            report = _closure1_slot4;
            zulu = report.useState;
            mike = false;
            options = zulu.bind(report)(mike);
            zulu = _closure1_slot3;
            mike = 2;
            zulu = zulu.bind(tango)(options, mike);
            mike = 0;
            options = zulu[mike];
            _closure2_slot3 = options;
            mike = 1;
            mike = zulu[mike];
            _closure2_slot4 = mike;
            zulu = report.useLayoutEffect;
            mike = new Array(4);
            mike[0] = options;
            mike[1] = golf;
            mike[2] = entity;
            mike[3] = source;
            entity = function() {
                _fun96290: for(var _fun96290_ip = 0; ; ) switch(_fun96290_ip) {
 0:
                    entity = _closure2_slot3;
                    if(!entity) { _fun96290_ip = 62; continue _fun96290 }
 10:
                    zulu = _closure1_slot1;
                    mike = _closure1_slot2;
                    entity = 16;
                    mike = mike[entity];
                    entity = undefined;
                    zulu = zulu.bind(entity)(mike);
                    mike = zulu.openLazy;
                    entity = {};
                    tango = function() { // Original name: importer
                        zulu = _closure1_slot0;
                        entity = _closure1_slot2;
                        mike = 18;
                        mike = entity[mike];
                        tango = undefined;
                        zulu = zulu.bind(tango)(mike);
                        mike = 17;
                        mike = entity[mike];
                        entity = entity.paths;
                        zulu = zulu.bind(tango)(mike, entity);
                        mike = zulu.then;
                        entity = function(argFoo) {
                            mike = argFoo;
                            mike = mike.default;
                            var _closure5_slot0 = mike;
                            entity = function(argFoo) {
                                tango = _closure1_slot7;
                                zulu = _closure5_slot0;
                                mike = {};
                                golf = argFoo;
                                options = mike;
                                entity = copyDataProperties(options, golf);
                                report = function() { // Original name: onCancel
                                    zulu = _closure1_slot1;
                                    mike = _closure1_slot2;
                                    entity = 16;
                                    mike = mike[entity];
                                    entity = undefined;
                                    zulu = zulu.bind(entity)(mike);
                                    mike = zulu.close;
                                    mike = mike.bind(zulu)();
                                    zulu = _closure2_slot4;
                                    mike = false;
                                    mike = zulu.bind(entity)(mike);
                                    return entity;
                                };
                                entity = 'onCancel';
                                mike[entity] = report;
                                oscar = _closure2_slot2;
                                report = 'onClaim';
                                mike[report] = oscar;
                                oscar = _closure2_slot1;
                                report = 'code';
                                mike[report] = oscar;
                                report = _closure2_slot0;
                                entity = 'outboundPromotion';
                                mike[entity] = report;
                                entity = undefined;
                                entity = tango.bind(entity)(zulu, mike);
                                return entity;
                            };
                            return entity;
                        };
                        entity = mike.bind(zulu)(entity);
                        return entity;
                    };
                    entity['importer'] = tango;
                    entity = mike.bind(zulu)(entity);
 62:
                    entity = undefined;
                    return entity;
                }
            };
            entity = zulu.bind(report)(entity, mike);
            zulu = _closure1_slot8;
            mike = _closure1_slot5;
            entity = {};
            report = foxtrot.card;
            entity['style'] = report;
            report = {};
            golf = foxtrot.mainContainer;
            report['style'] = golf;
            options = _closure1_slot7;
            golf = {};
            verify = foxtrot.imageContainer;
            golf['style'] = verify;
            yankee = _closure1_slot7;
            offset = _closure1_slot6;
            verify = {};
            romeo = foxtrot.image;
            verify['style'] = romeo;
            romeo = {};
            romeo['uri'] = sizing;
            verify['source'] = romeo;
            verify = yankee.bind(tango)(offset, verify);
            golf['children'] = verify;
            options = options.bind(tango)(mike, golf);
            golf = new Array(3);
            golf[0] = options;
            verify = _closure1_slot7;
            options = {};
            offset = foxtrot.textContainer;
            options['style'] = offset;
            sizing = {};
            update = _closure1_slot7;
            yankee = _closure1_slot0;
            offset = _closure1_slot2;
            romeo = 11;
            output = offset[romeo];
            output = yankee.bind(tango)(output);
            result = output.Text;
            output = {'style': null, 'accessibilityRole': 'header', 'variant': 'text-md/semibold', 'color': 'header-primary'};
            vacuum = foxtrot.title;
            output['style'] = vacuum;
            source = source.outboundTitle;
            output['children'] = source;
            result = update.bind(tango)(result, output);
            output = new Array(2);
            output[0] = result;
            source = _closure1_slot7;
            romeo = offset[romeo];
            romeo = yankee.bind(tango)(romeo);
            update = romeo.Text;
            result = {'style': null, 'variant': 'text-sm/medium', 'color': 'header-secondary'};
            romeo = foxtrot.subText;
            result['style'] = romeo;
            romeo = 'text-sm/medium';
            result['children'] = control;
            result = source.bind(tango)(update, result);
            output[1] = result;
            sizing['children'] = output;
            sizing = zulu.bind(tango)(mike, sizing);
            options['children'] = sizing;
            options = verify.bind(tango)(mike, options);
            golf[1] = options;
            verify = _closure1_slot7;
            options = {};
            sizing = foxtrot.buttonContainer;
            options['style'] = sizing;
            result = _closure1_slot7;
            source = _closure1_slot1;
            update = 19;
            sizing = offset[update];
            output = source.bind(tango)(sizing);
            sizing = {};
            update = offset[update];
            update = source.bind(tango)(update);
            update = update.Sizes;
            update = update.XSMALL;
            sizing['size'] = update;
            sizing['text'] = echo;
            echo = true;
            sizing['shrink'] = echo;
            echo = foxtrot.claimButton;
            sizing['style'] = echo;
            echo = function() { // Original name: onPress
                zulu = _closure2_slot4;
                mike = undefined;
                entity = true;
                entity = zulu.bind(mike)(entity);
                return entity;
            };
            sizing['onPress'] = echo;
            sizing = result.bind(tango)(output, sizing);
            options['children'] = sizing;
            options = verify.bind(tango)(mike, options);
            golf[2] = options;
            report['children'] = golf;
            golf = zulu.bind(tango)(mike, report);
            report = new Array(2);
            report[0] = golf;
            golf = _closure1_slot7;
            oscar = {};
            options = 20;
            options = offset[options];
            options = yankee.bind(tango)(options);
            verify = options.TextWithIOSLinkWorkaround;
            options = {};
            foxtrot = foxtrot.moreDetails;
            options['style'] = foxtrot;
            options['variant'] = romeo;
            romeo = offset[kilo];
            romeo = yankee.bind(tango)(romeo);
            foxtrot = romeo.intl;
            romeo = foxtrot.format;
            offset = offset[kilo];
            offset = yankee.bind(tango)(offset);
            offset = offset.t;
            yankee = offset.sCm3ZW;
            offset = {};
            backup = function() { // Original name: onClick
                zulu = _closure1_slot1;
                tango = _closure1_slot2;
                mike = 21;
                report = tango[mike];
                entity = undefined;
                oscar = zulu.bind(entity)(report);
                report = oscar.hideActionSheet;
                report = report.bind(oscar)();
                mike = tango[mike];
                oscar = zulu.bind(entity)(mike);
                report = oscar.openLazy;
                mike = _closure2_slot0;
                golf = mike.id;
                zulu = global;
                zulu = zulu.HermesInternal;
                tango = zulu.concat;
                zulu = 'OutboundPromotionTermsAndConditions-';
                tango = tango.bind(zulu)(golf);
                zulu = {};
                mike = mike.outboundTermsAndConditions;
                zulu['termsAndConditions'] = mike;
                mike = function() {
                    entity = global;
                    zulu = entity.Promise;
                    mike = zulu.resolve;
                    entity = _closure1_slot10;
                    entity = mike.bind(zulu)(entity);
                    return entity;
                };
                mike = report.bind(oscar)(mike, tango, zulu);
                return entity;
            };
            offset['onClick'] = backup;
            offset = romeo.bind(foxtrot)(yankee, offset);
            options['children'] = offset;
            options = golf.bind(tango)(verify, options);
            oscar['children'] = options;
            oscar = golf.bind(tango)(mike, oscar);
            report[1] = oscar;
            entity['children'] = report;
            entity = zulu.bind(tango)(mike, entity);
            return entity;
        }
    };
    zulu['default'] = mike;
    return entity;
})();