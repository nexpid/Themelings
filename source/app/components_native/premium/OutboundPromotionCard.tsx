// app/components_native/premium/OutboundPromotionCard.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    report = argBar;
    romeon = argBaz;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    var _closure1_slot1 = romeon;
    var _closure1_slot2 = oscard;
    entity = function(argFoo) { // Original name: TermsAndConditionsActionSheet
        entity = argFoo;
        romeon = entity.termsAndConditions;
        entity = _closure1_slot9;
        tangon = undefined;
        verify = entity.bind(tangon)();
        zuuluu = _closure1_slot7;
        oscard = _closure1_slot0;
        offset = _closure1_slot2;
        entity = 8;
        entity = offset[entity];
        entity = oscard.bind(tangon)(entity);
        michal = entity.BottomSheet;
        entity = {};
        yankee = _closure1_slot7;
        report = 9;
        report = offset[report];
        report = oscard.bind(tangon)(report);
        golfie = report.BottomSheetTitleHeader;
        report = {};
        foxtra = 10;
        backup = offset[foxtra];
        backup = oscard.bind(tangon)(backup);
        kiloes = backup.intl;
        backup = kiloes.string;
        foxtra = offset[foxtra];
        foxtra = oscard.bind(tangon)(foxtra);
        foxtra = foxtra.t;
        foxtra = foxtra.PdKWVV;
        foxtra = backup.bind(kiloes)(foxtra);
        report['title'] = foxtra;
        report = yankee.bind(tangon)(golfie, report);
        entity['header'] = report;
        golfie = _closure1_slot7;
        report = 11;
        report = offset[report];
        report = oscard.bind(tangon)(report);
        oscard = report.Text;
        report = {};
        verify = verify.termsAndConditionsText;
        report['style'] = verify;
        verify = 'text-sm/medium';
        report['variant'] = verify;
        verify = _closure1_slot1;
        option = 12;
        option = offset[option];
        yankee = verify.bind(tangon)(option);
        offset = yankee.parse;
        verify = {};
        option = true;
        verify['allowLinks'] = option;
        option = false;
        option = offset.bind(yankee)(romeon, option, verify);
        report['children'] = option;
        report = golfie.bind(tangon)(oscard, report);
        entity['children'] = report;
        entity = zuuluu.bind(tangon)(michal, entity);
        return entity;
    };
    var _closure1_slot10 = entity;
    entity = global;
    option = entity.Object;
    golfie = option.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(option)(zuuluu, entity, tangon);
    entity = 0;
    tangon = oscard[entity];
    entity = undefined;
    tangon = romeon.bind(entity)(tangon);
    var _closure1_slot3 = tangon;
    tangon = 1;
    golfie = oscard[tangon];
    tangon = argCor;
    tangon = tangon.bind(entity)(golfie);
    var _closure1_slot4 = tangon;
    tangon = 2;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    golfie = tangon.View;
    var _closure1_slot5 = golfie;
    tangon = tangon.Image;
    var _closure1_slot6 = tangon;
    tangon = 3;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    offset = tangon.USER_SETTINGS_CONTAINER_HORIZONTAL_PADDING;
    tangon = 4;
    golfie = oscard[tangon];
    golfie = report.bind(entity)(golfie);
    golfie = golfie.jsx;
    var _closure1_slot7 = golfie;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.jsxs;
    var _closure1_slot8 = tangon;
    tangon = 5;
    tangon = oscard[tangon];
    option = report.bind(entity)(tangon);
    golfie = option.createStyles;
    tangon = {};
    verify = {'flex': 1, 'flexDirection': 'column', 'paddingHorizontal': null, 'paddingVertical': 12, 'backgroundColor': null, 'marginTop': 8};
    verify['paddingHorizontal'] = offset;
    offset = 12;
    yankee = 6;
    foxtra = oscard[yankee];
    foxtra = romeon.bind(entity)(foxtra);
    foxtra = foxtra.colors;
    foxtra = foxtra.BACKGROUND_MOBILE_SECONDARY;
    verify['backgroundColor'] = foxtra;
    tangon['card'] = verify;
    verify = {'flex': 1, 'flexDirection': 'row', 'alignItems': 'center', 'justifyContent': 'space-between'};
    tangon['mainContainer'] = verify;
    verify = {'flexDirection': 'row', 'flexShrink': 1, 'alignItems': 'center'};
    tangon['textContainer'] = verify;
    verify = {'width': 32, 'height': 32, 'marginRight': 8, 'borderRadius': null, 'alignItems': 'center', 'justifyContent': 'center'};
    yankee = oscard[yankee];
    yankee = romeon.bind(entity)(yankee);
    yankee = yankee.radii;
    yankee = yankee.xs;
    verify['borderRadius'] = yankee;
    yankee = 7;
    yankee = oscard[yankee];
    yankee = report.bind(entity)(yankee);
    yankee = yankee.DARK_BLACK_500_LIGHT_PRIMARY_100;
    verify['backgroundColor'] = yankee;
    tangon['imageContainer'] = verify;
    verify = {'width': 28, 'height': 28, 'resizeMode': 'contain'};
    tangon['image'] = verify;
    verify = {};
    yankee = 20;
    verify['lineHeight'] = yankee;
    tangon['title'] = verify;
    verify = {};
    yankee = 18;
    verify['lineHeight'] = yankee;
    tangon['subText'] = verify;
    verify = {};
    verify['paddingHorizontal'] = offset;
    tangon['claimButton'] = verify;
    verify = {};
    offset = 40;
    verify['marginLeft'] = offset;
    tangon['moreDetails'] = verify;
    verify = {'paddingHorizontal': 16, 'paddingTop': 16};
    tangon['termsAndConditionsText'] = verify;
    verify = {'flexGrow': 1, 'flexDirection': 'row', 'marginLeft': 4, 'justifyContent': 'flex-end'};
    tangon['buttonContainer'] = verify;
    tangon = golfie.bind(option)(tangon);
    var _closure1_slot9 = tangon;
    tangon = 22;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'components_native/premium/OutboundPromotionCard.tsx';
    tangon = report.bind(oscard)(tangon);
    michal = function(argFoo) { // Original name: OutboundPromotionCard
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            michal = argFoo;
            source = michal.outboundPromotion;
            var _closure2_slot0 = source;
            entity = michal.code;
            var _closure2_slot1 = entity;
            golfie = michal.addClaimedOutboundPromotionCode;
            var _closure2_slot2 = golfie;
            tangon = undefined;
            var _closure2_slot3 = tangon;
            var _closure2_slot4 = tangon;
            michal = _closure1_slot9;
            foxtra = michal.bind(tangon)();
            zuuluu = _closure1_slot1;
            report = _closure1_slot2;
            michal = 13;
            michal = report[michal];
            michal = zuuluu.bind(tangon)(michal);
            offset = michal.bind(tangon)();
            option = _closure1_slot0;
            michal = 14;
            michal = report[michal];
            verify = option.bind(tangon)(michal);
            option = verify.getPromotionImageURL;
            michal = source.id;
            sizing = option.bind(verify)(michal, offset);
            michal = null;
            option = michal != entity;
            michal = 15;
            michal = report[michal];
            michal = zuuluu.bind(tangon)(michal);
            offset = michal.bind(tangon)(source, option);
            zuuluu = _closure1_slot0;
            michal = _closure1_slot2;
            kiloes = 10;
            report = michal[kiloes];
            report = zuuluu.bind(tangon)(report);
            verify = report.intl;
            report = verify.formatToPlainString;
            michal = michal[kiloes];
            michal = zuuluu.bind(tangon)(michal);
            michal = michal.t;
            if(option) { _fun00002_ip = 206; continue _fun00001 }
 183:
            yankee = michal./XWgfH;
            zuuluu = {};
            zuuluu['endDate'] = offset;
            ctrled = report.bind(verify)(yankee, zuuluu);
            _fun00002_ip = 227; continue _fun00001;
 206:
            zuuluu = michal.VaD05u;
            michal = {};
            michal['endDate'] = offset;
            ctrled = report.bind(verify)(zuuluu, michal);
 227:
            verify = _closure1_slot0;
            michal = _closure1_slot2;
            zuuluu = michal[kiloes];
            zuuluu = verify.bind(tangon)(zuuluu);
            report = zuuluu.intl;
            zuuluu = report.string;
            michal = michal[kiloes];
            michal = verify.bind(tangon)(michal);
            michal = michal.t;
            if(option) { _fun00002_ip = 286; continue _fun00001 }
 271:
            option = michal.O13yh4;
            echoed = zuuluu.bind(report)(option);
            _fun00002_ip = 299; continue _fun00001;
 286:
            michal = michal.2cHUtr;
            echoed = zuuluu.bind(report)(michal);
 299:
            report = _closure1_slot4;
            zuuluu = report.useState;
            michal = false;
            option = zuuluu.bind(report)(michal);
            zuuluu = _closure1_slot3;
            michal = 2;
            zuuluu = zuuluu.bind(tangon)(option, michal);
            michal = 0;
            option = zuuluu[michal];
            _closure2_slot3 = option;
            michal = 1;
            michal = zuuluu[michal];
            _closure2_slot4 = michal;
            zuuluu = report.useLayoutEffect;
            michal = new Array(4);
            michal[0] = option;
            michal[1] = golfie;
            michal[2] = entity;
            michal[3] = source;
            entity = function() {
                _fun00003: for(var _fun00004_ip = 0; ; ) switch(_fun00004_ip) {
 0:
                    entity = _closure2_slot3;
                    if(!entity) { _fun00004_ip = 62; continue _fun00003 }
 10:
                    zuuluu = _closure1_slot1;
                    michal = _closure1_slot2;
                    entity = 16;
                    michal = michal[entity];
                    entity = undefined;
                    zuuluu = zuuluu.bind(entity)(michal);
                    michal = zuuluu.openLazy;
                    entity = {};
                    tangon = function() { // Original name: importer
                        zuuluu = _closure1_slot0;
                        entity = _closure1_slot2;
                        michal = 18;
                        michal = entity[michal];
                        tangon = undefined;
                        zuuluu = zuuluu.bind(tangon)(michal);
                        michal = 17;
                        michal = entity[michal];
                        entity = entity.paths;
                        zuuluu = zuuluu.bind(tangon)(michal, entity);
                        michal = zuuluu.then;
                        entity = function(argFoo) {
                            michal = argFoo;
                            michal = michal.default;
                            var _closure5_slot0 = michal;
                            entity = function(argFoo) {
                                tangon = _closure1_slot7;
                                zuuluu = _closure5_slot0;
                                michal = {};
                                golfie = argFoo;
                                option = michal;
                                entity = copyDataProperties(option, golfie);
                                report = function() { // Original name: onCancel
                                    zuuluu = _closure1_slot1;
                                    michal = _closure1_slot2;
                                    entity = 16;
                                    michal = michal[entity];
                                    entity = undefined;
                                    zuuluu = zuuluu.bind(entity)(michal);
                                    michal = zuuluu.close;
                                    michal = michal.bind(zuuluu)();
                                    zuuluu = _closure2_slot4;
                                    michal = false;
                                    michal = zuuluu.bind(entity)(michal);
                                    return entity;
                                };
                                entity = 'onCancel';
                                michal[entity] = report;
                                oscard = _closure2_slot2;
                                report = 'onClaim';
                                michal[report] = oscard;
                                oscard = _closure2_slot1;
                                report = 'code';
                                michal[report] = oscard;
                                report = _closure2_slot0;
                                entity = 'outboundPromotion';
                                michal[entity] = report;
                                entity = undefined;
                                entity = tangon.bind(entity)(zuuluu, michal);
                                return entity;
                            };
                            return entity;
                        };
                        entity = michal.bind(zuuluu)(entity);
                        return entity;
                    };
                    entity['importer'] = tangon;
                    entity = michal.bind(zuuluu)(entity);
 62:
                    entity = undefined;
                    return entity;
                }
            };
            entity = zuuluu.bind(report)(entity, michal);
            zuuluu = _closure1_slot8;
            michal = _closure1_slot5;
            entity = {};
            report = foxtra.card;
            entity['style'] = report;
            report = {};
            golfie = foxtra.mainContainer;
            report['style'] = golfie;
            option = _closure1_slot7;
            golfie = {};
            verify = foxtra.imageContainer;
            golfie['style'] = verify;
            yankee = _closure1_slot7;
            offset = _closure1_slot6;
            verify = {};
            romeon = foxtra.image;
            verify['style'] = romeon;
            romeon = {};
            romeon['uri'] = sizing;
            verify['source'] = romeon;
            verify = yankee.bind(tangon)(offset, verify);
            golfie['children'] = verify;
            option = option.bind(tangon)(michal, golfie);
            golfie = new Array(3);
            golfie[0] = option;
            verify = _closure1_slot7;
            option = {};
            offset = foxtra.textContainer;
            option['style'] = offset;
            sizing = {};
            update = _closure1_slot7;
            yankee = _closure1_slot0;
            offset = _closure1_slot2;
            romeon = 11;
            output = offset[romeon];
            output = yankee.bind(tangon)(output);
            result = output.Text;
            output = {'style': null, 'accessibilityRole': 'header', 'variant': 'text-md/semibold', 'color': 'header-primary'};
            vacuum = foxtra.title;
            output['style'] = vacuum;
            source = source.outboundTitle;
            output['children'] = source;
            result = update.bind(tangon)(result, output);
            output = new Array(2);
            output[0] = result;
            source = _closure1_slot7;
            romeon = offset[romeon];
            romeon = yankee.bind(tangon)(romeon);
            update = romeon.Text;
            result = {'style': null, 'variant': 'text-sm/medium', 'color': 'header-secondary'};
            romeon = foxtra.subText;
            result['style'] = romeon;
            romeon = 'text-sm/medium';
            result['children'] = ctrled;
            result = source.bind(tangon)(update, result);
            output[1] = result;
            sizing['children'] = output;
            sizing = zuuluu.bind(tangon)(michal, sizing);
            option['children'] = sizing;
            option = verify.bind(tangon)(michal, option);
            golfie[1] = option;
            verify = _closure1_slot7;
            option = {};
            sizing = foxtra.buttonContainer;
            option['style'] = sizing;
            result = _closure1_slot7;
            source = _closure1_slot1;
            update = 19;
            sizing = offset[update];
            output = source.bind(tangon)(sizing);
            sizing = {};
            update = offset[update];
            update = source.bind(tangon)(update);
            update = update.Sizes;
            update = update.XSMALL;
            sizing['size'] = update;
            sizing['text'] = echoed;
            echoed = true;
            sizing['shrink'] = echoed;
            echoed = foxtra.claimButton;
            sizing['style'] = echoed;
            echoed = function() { // Original name: onPress
                zuuluu = _closure2_slot4;
                michal = undefined;
                entity = true;
                entity = zuuluu.bind(michal)(entity);
                return entity;
            };
            sizing['onPress'] = echoed;
            sizing = result.bind(tangon)(output, sizing);
            option['children'] = sizing;
            option = verify.bind(tangon)(michal, option);
            golfie[2] = option;
            report['children'] = golfie;
            golfie = zuuluu.bind(tangon)(michal, report);
            report = new Array(2);
            report[0] = golfie;
            golfie = _closure1_slot7;
            oscard = {};
            option = 20;
            option = offset[option];
            option = yankee.bind(tangon)(option);
            verify = option.TextWithIOSLinkWorkaround;
            option = {};
            foxtra = foxtra.moreDetails;
            option['style'] = foxtra;
            option['variant'] = romeon;
            romeon = offset[kiloes];
            romeon = yankee.bind(tangon)(romeon);
            foxtra = romeon.intl;
            romeon = foxtra.format;
            offset = offset[kiloes];
            offset = yankee.bind(tangon)(offset);
            offset = offset.t;
            yankee = offset.sCm3ZW;
            offset = {};
            backup = function() { // Original name: onClick
                zuuluu = _closure1_slot1;
                tangon = _closure1_slot2;
                michal = 21;
                report = tangon[michal];
                entity = undefined;
                oscard = zuuluu.bind(entity)(report);
                report = oscard.hideActionSheet;
                report = report.bind(oscard)();
                michal = tangon[michal];
                oscard = zuuluu.bind(entity)(michal);
                report = oscard.openLazy;
                michal = _closure2_slot0;
                golfie = michal.id;
                zuuluu = global;
                zuuluu = zuuluu.HermesInternal;
                tangon = zuuluu.concat;
                zuuluu = 'OutboundPromotionTermsAndConditions-';
                tangon = tangon.bind(zuuluu)(golfie);
                zuuluu = {};
                michal = michal.outboundTermsAndConditions;
                zuuluu['termsAndConditions'] = michal;
                michal = function() {
                    entity = global;
                    zuuluu = entity.Promise;
                    michal = zuuluu.resolve;
                    entity = _closure1_slot10;
                    entity = michal.bind(zuuluu)(entity);
                    return entity;
                };
                michal = report.bind(oscard)(michal, tangon, zuuluu);
                return entity;
            };
            offset['onClick'] = backup;
            offset = romeon.bind(foxtra)(yankee, offset);
            option['children'] = offset;
            option = golfie.bind(tangon)(verify, option);
            oscard['children'] = option;
            oscard = golfie.bind(tangon)(michal, oscard);
            report[1] = oscard;
            entity['children'] = report;
            entity = zuuluu.bind(tangon)(michal, entity);
            return entity;
        }
    };
    zuuluu['default'] = michal;
    return entity;
})();