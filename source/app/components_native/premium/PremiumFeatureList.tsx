// app/components_native/premium/PremiumFeatureList.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    report = argBar;
    yankee = argBaz;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    var _closure1_slot1 = yankee;
    var _closure1_slot2 = oscard;
    entity = global;
    option = entity.Object;
    golfie = option.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(option)(zuuluu, entity, tangon);
    entity = 0;
    golfie = oscard[entity];
    tangon = argCor;
    entity = undefined;
    tangon = tangon.bind(entity)(golfie);
    var _closure1_slot3 = tangon;
    tangon = 1;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.View;
    var _closure1_slot4 = tangon;
    tangon = 2;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    offset = tangon.Fonts;
    tangon = 3;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    golfie = tangon.jsx;
    var _closure1_slot5 = golfie;
    tangon = tangon.jsxs;
    var _closure1_slot6 = tangon;
    tangon = 4;
    tangon = oscard[tangon];
    option = report.bind(entity)(tangon);
    golfie = option.createStyles;
    tangon = {};
    verify = {'backgroundColor': 'transparent', 'paddingHorizontal': 0, 'paddingVertical': 8, 'flexDirection': 'row', 'alignItems': 'center'};
    tangon['item'] = verify;
    verify = {};
    romeon = 5;
    romeon = oscard[romeon];
    kiloes = yankee.bind(entity)(romeon);
    backup = offset.PRIMARY_NORMAL;
    offset = 6;
    romeon = oscard[offset];
    romeon = yankee.bind(entity)(romeon);
    romeon = romeon.colors;
    foxtra = romeon.TEXT_NORMAL;
    romeon = 14;
    output = kiloes.bind(entity)(backup, foxtra, romeon);
    result = verify;
    romeon = copyDataProperties(result, output);
    tangon['label'] = verify;
    verify = {'width': 24, 'height': 24};
    tangon['icon'] = verify;
    verify = {};
    offset = oscard[offset];
    offset = yankee.bind(entity)(offset);
    offset = offset.spacing;
    offset = offset.PX_16;
    verify['marginEnd'] = offset;
    tangon['iconMargin'] = verify;
    tangon = golfie.bind(option)(tangon);
    var _closure1_slot7 = tangon;
    tangon = 9;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'components_native/premium/PremiumFeatureList.tsx';
    tangon = report.bind(oscard)(tangon);
    michal = function(argFoo) { // Original name: _default
        entity = argFoo;
        golfie = entity.features;
        oscard = entity.style;
        michal = entity.separator;
        var _closure2_slot0 = michal;
        michal = entity.iconStyle;
        var _closure2_slot1 = michal;
        michal = entity.labelStyle;
        var _closure2_slot2 = michal;
        entity = entity.rowStyle;
        var _closure2_slot3 = entity;
        michal = _closure1_slot7;
        tangon = undefined;
        michal = michal.bind(tangon)();
        var _closure2_slot4 = michal;
        zuuluu = golfie.filter;
        michal = function(argFoo) {
            entity = argFoo;
            entity = entity.hidden;
            entity = !entity;
            return entity;
        };
        golfie = zuuluu.bind(golfie)(michal);
        zuuluu = _closure1_slot5;
        michal = _closure1_slot4;
        entity = {};
        entity['style'] = oscard;
        oscard = golfie.map;
        report = function(argFoo, argBar) {
            _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
                verify = argFoo;
                report = argBar;
                kiloes = verify.IconComponent;
                tangon = _closure1_slot6;
                michal = _closure1_slot3;
                zuuluu = michal.Fragment;
                michal = {};
                golfie = _closure1_slot4;
                oscard = {};
                offset = _closure2_slot4;
                yankee = offset.item;
                offset = new Array(2);
                offset[0] = yankee;
                yankee = _closure2_slot3;
                offset[1] = yankee;
                oscard['style'] = offset;
                offset = null;
                if(!(offset == kiloes)) { _fun00002_ip = 209; continue _fun00001 }
 77:
                backup = _closure1_slot5;
                output = _closure1_slot1;
                result = _closure1_slot2;
                sizing = 7;
                yankee = result[sizing];
                foxtra = undefined;
                romeon = output.bind(foxtra)(yankee);
                yankee = {};
                update = _closure2_slot4;
                source = update.icon;
                echoed = new Array(3);
                echoed[0] = source;
                update = update.iconMargin;
                echoed[1] = update;
                update = _closure2_slot1;
                echoed[2] = update;
                yankee['style'] = echoed;
                echoed = verify.color;
                echoed = offset == echoed;
                yankee['disableColor'] = echoed;
                echoed = verify.color;
                yankee['color'] = echoed;
                sizing = result[sizing];
                sizing = output.bind(foxtra)(sizing);
                sizing = sizing.Sizes;
                sizing = sizing.MEDIUM;
                yankee['size'] = sizing;
                sizing = verify.icon;
                yankee['source'] = sizing;
                romeon = backup.bind(foxtra)(romeon, yankee);
                _fun00002_ip = 270; continue _fun00001;
 209:
                backup = _closure1_slot5;
                foxtra = {};
                yankee = 'md';
                foxtra['size'] = yankee;
                yankee = verify.color;
                foxtra['color'] = yankee;
                yankee = _closure2_slot4;
                sizing = yankee.iconMargin;
                yankee = new Array(2);
                yankee[0] = sizing;
                sizing = _closure2_slot1;
                yankee[1] = sizing;
                foxtra['style'] = yankee;
                yankee = undefined;
                romeon = backup.bind(yankee)(kiloes, foxtra);
 270:
                yankee = new Array(2);
                yankee[0] = romeon;
                backup = _closure1_slot5;
                foxtra = _closure1_slot0;
                romeon = _closure1_slot2;
                entity = 8;
                romeon = romeon[entity];
                entity = undefined;
                romeon = foxtra.bind(entity)(romeon);
                romeon = romeon.FormRow;
                foxtra = romeon.Label;
                romeon = {};
                kiloes = 2;
                romeon['numberOfLines'] = kiloes;
                kiloes = _closure2_slot4;
                sizing = kiloes.label;
                kiloes = new Array(2);
                kiloes[0] = sizing;
                sizing = _closure2_slot2;
                kiloes[1] = sizing;
                romeon['style'] = kiloes;
                kiloes = verify.label;
                romeon['text'] = kiloes;
                romeon = backup.bind(entity)(foxtra, romeon);
                yankee[1] = romeon;
                oscard['children'] = yankee;
                golfie = tangon.bind(entity)(golfie, oscard, report);
                oscard = new Array(2);
                oscard[0] = golfie;
                golfie = _closure2_slot0;
                yankee = offset != golfie;
                golfie = null;
                if(!yankee) { _fun00002_ip = 437; continue _fun00001 }
 406:
                romeon = _closure2_slot0;
                yankee = '';
                golfie = null;
                if(!(yankee !== romeon)) { _fun00002_ip = 437; continue _fun00001 }
 420:
                verify = verify.renderSeparatorBelow;
                golfie = null;
                if(!verify) { _fun00002_ip = 437; continue _fun00001 }
 433:
                golfie = _closure2_slot0;
 437:
                oscard[1] = golfie;
                michal['children'] = oscard;
                entity = tangon.bind(entity)(zuuluu, michal, report);
                return entity;
            }
        };
        report = oscard.bind(golfie)(report);
        entity['children'] = report;
        entity = zuuluu.bind(tangon)(michal, entity);
        return entity;
    };
    zuuluu['default'] = michal;
    return entity;
})();