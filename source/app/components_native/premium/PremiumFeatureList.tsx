// app/components_native/premium/PremiumFeatureList.tsx
export default (function(argFoo, argBar, argBaz, argCorge, _, argFred, argPlugh) {
    report = argBar;
    yankee = argBaz;
    zulu = argFred;
    oscar = argPlugh;
    var _closure1_slot0 = report;
    var _closure1_slot1 = yankee;
    var _closure1_slot2 = oscar;
    entity = global;
    options = entity.Object;
    golf = options.defineProperty;
    tango = {};
    entity = true;
    tango['value'] = entity;
    entity = '__esModule';
    entity = golf.bind(options)(zulu, entity, tango);
    entity = 0;
    golf = oscar[entity];
    tango = argCorge;
    entity = undefined;
    tango = tango.bind(entity)(golf);
    var _closure1_slot3 = tango;
    tango = 1;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.View;
    var _closure1_slot4 = tango;
    tango = 2;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    offset = tango.Fonts;
    tango = 3;
    golf = oscar[tango];
    golf = report.bind(entity)(golf);
    golf = golf.jsx;
    var _closure1_slot5 = golf;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.jsxs;
    var _closure1_slot6 = tango;
    tango = 4;
    tango = oscar[tango];
    options = report.bind(entity)(tango);
    golf = options.createStyles;
    tango = {};
    verify = {'backgroundColor': 'transparent', 'paddingHorizontal': 0, 'paddingVertical': 8, 'flexDirection': 'row', 'alignItems': 'center'};
    tango['item'] = verify;
    verify = {};
    romeo = 5;
    romeo = oscar[romeo];
    kilo = yankee.bind(entity)(romeo);
    backup = offset.PRIMARY_NORMAL;
    offset = 6;
    romeo = oscar[offset];
    romeo = yankee.bind(entity)(romeo);
    romeo = romeo.colors;
    foxtrot = romeo.TEXT_NORMAL;
    romeo = 14;
    output = kilo.bind(entity)(backup, foxtrot, romeo);
    result = verify;
    romeo = copyDataProperties(result, output);
    tango['label'] = verify;
    verify = {'width': 24, 'height': 24};
    tango['icon'] = verify;
    verify = {};
    offset = oscar[offset];
    offset = yankee.bind(entity)(offset);
    offset = offset.spacing;
    offset = offset.PX_16;
    verify['marginEnd'] = offset;
    tango['iconMargin'] = verify;
    tango = golf.bind(options)(tango);
    var _closure1_slot7 = tango;
    tango = 9;
    tango = oscar[tango];
    oscar = report.bind(entity)(tango);
    report = oscar.fileFinishedImporting;
    tango = 'components_native/premium/PremiumFeatureList.tsx';
    tango = report.bind(oscar)(tango);
    mike = function(argFoo) { // Original name: _default
        entity = argFoo;
        golf = entity.features;
        oscar = entity.style;
        mike = entity.separator;
        var _closure2_slot0 = mike;
        mike = entity.iconStyle;
        var _closure2_slot1 = mike;
        mike = entity.labelStyle;
        var _closure2_slot2 = mike;
        entity = entity.rowStyle;
        var _closure2_slot3 = entity;
        mike = _closure1_slot7;
        tango = undefined;
        mike = mike.bind(tango)();
        var _closure2_slot4 = mike;
        zulu = golf.filter;
        mike = function(argFoo) {
            entity = argFoo;
            entity = entity.hidden;
            entity = !entity;
            return entity;
        };
        golf = zulu.bind(golf)(mike);
        zulu = _closure1_slot5;
        mike = _closure1_slot4;
        entity = {};
        entity['style'] = oscar;
        oscar = golf.map;
        report = function(argFoo, argBar) {
            _fun75664: for(var _fun75664_ip = 0; ; ) switch(_fun75664_ip) {
 0:
                verify = argFoo;
                report = argBar;
                kilo = verify.IconComponent;
                tango = _closure1_slot6;
                mike = _closure1_slot3;
                zulu = mike.Fragment;
                mike = {};
                golf = _closure1_slot4;
                oscar = {};
                offset = _closure2_slot4;
                yankee = offset.item;
                offset = new Array(2);
                offset[0] = yankee;
                yankee = _closure2_slot3;
                offset[1] = yankee;
                oscar['style'] = offset;
                offset = null;
                if(!(offset == kilo)) { _fun75664_ip = 209; continue _fun75664 }
 77:
                backup = _closure1_slot5;
                output = _closure1_slot1;
                result = _closure1_slot2;
                sizing = 7;
                yankee = result[sizing];
                foxtrot = undefined;
                romeo = output.bind(foxtrot)(yankee);
                yankee = {};
                update = _closure2_slot4;
                source = update.icon;
                echo = new Array(3);
                echo[0] = source;
                update = update.iconMargin;
                echo[1] = update;
                update = _closure2_slot1;
                echo[2] = update;
                yankee['style'] = echo;
                echo = verify.color;
                echo = offset == echo;
                yankee['disableColor'] = echo;
                echo = verify.color;
                yankee['color'] = echo;
                sizing = result[sizing];
                sizing = output.bind(foxtrot)(sizing);
                sizing = sizing.Sizes;
                sizing = sizing.MEDIUM;
                yankee['size'] = sizing;
                sizing = verify.icon;
                yankee['source'] = sizing;
                romeo = backup.bind(foxtrot)(romeo, yankee);
                _fun75664_ip = 270; continue _fun75664;
 209:
                backup = _closure1_slot5;
                foxtrot = {};
                yankee = 'md';
                foxtrot['size'] = yankee;
                yankee = verify.color;
                foxtrot['color'] = yankee;
                yankee = _closure2_slot4;
                sizing = yankee.iconMargin;
                yankee = new Array(2);
                yankee[0] = sizing;
                sizing = _closure2_slot1;
                yankee[1] = sizing;
                foxtrot['style'] = yankee;
                yankee = undefined;
                romeo = backup.bind(yankee)(kilo, foxtrot);
 270:
                yankee = new Array(2);
                yankee[0] = romeo;
                backup = _closure1_slot5;
                foxtrot = _closure1_slot0;
                romeo = _closure1_slot2;
                entity = 8;
                romeo = romeo[entity];
                entity = undefined;
                romeo = foxtrot.bind(entity)(romeo);
                romeo = romeo.FormRow;
                foxtrot = romeo.Label;
                romeo = {};
                kilo = 2;
                romeo['numberOfLines'] = kilo;
                kilo = _closure2_slot4;
                sizing = kilo.label;
                kilo = new Array(2);
                kilo[0] = sizing;
                sizing = _closure2_slot2;
                kilo[1] = sizing;
                romeo['style'] = kilo;
                kilo = verify.label;
                romeo['text'] = kilo;
                romeo = backup.bind(entity)(foxtrot, romeo);
                yankee[1] = romeo;
                oscar['children'] = yankee;
                golf = tango.bind(entity)(golf, oscar, report);
                oscar = new Array(2);
                oscar[0] = golf;
                golf = _closure2_slot0;
                yankee = offset != golf;
                golf = null;
                if(!yankee) { _fun75664_ip = 437; continue _fun75664 }
 406:
                romeo = _closure2_slot0;
                yankee = '';
                golf = null;
                if(!(yankee !== romeo)) { _fun75664_ip = 437; continue _fun75664 }
 420:
                verify = verify.renderSeparatorBelow;
                golf = null;
                if(!verify) { _fun75664_ip = 437; continue _fun75664 }
 433:
                golf = _closure2_slot0;
 437:
                oscar[1] = golf;
                mike['children'] = oscar;
                entity = tango.bind(entity)(zulu, mike, report);
                return entity;
            }
        };
        report = oscar.bind(golf)(report);
        entity['children'] = report;
        entity = zulu.bind(tango)(mike, entity);
        return entity;
    };
    zulu['default'] = mike;
    return entity;
})();