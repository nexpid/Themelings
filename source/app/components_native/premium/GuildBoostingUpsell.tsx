// app/components_native/premium/GuildBoostingUpsell.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    oscard = argBar;
    romeon = argBaz;
    zuuluu = argFre;
    golfie = argPlu;
    var _closure1_slot0 = oscard;
    var _closure1_slot1 = romeon;
    var _closure1_slot2 = golfie;
    entity = global;
    option = entity.Object;
    report = option.defineProperty;
    michal = {};
    entity = true;
    michal['value'] = entity;
    entity = '__esModule';
    entity = report.bind(option)(zuuluu, entity, michal);
    entity = 0;
    report = golfie[entity];
    michal = argCor;
    entity = undefined;
    michal = michal.bind(entity)(report);
    michal = 1;
    michal = golfie[michal];
    michal = oscard.bind(entity)(michal);
    yankee = michal.StyleSheet;
    report = michal.View;
    var _closure1_slot3 = report;
    michal = michal.Image;
    var _closure1_slot4 = michal;
    foxtra = 2;
    michal = golfie[foxtra];
    michal = romeon.bind(entity)(michal);
    var _closure1_slot5 = michal;
    michal = 3;
    michal = golfie[michal];
    michal = oscard.bind(entity)(michal);
    michal = michal.FractionalPremiumStates;
    var _closure1_slot6 = michal;
    michal = 4;
    michal = golfie[michal];
    michal = oscard.bind(entity)(michal);
    report = michal.jsx;
    var _closure1_slot7 = report;
    michal = michal.jsxs;
    var _closure1_slot8 = michal;
    michal = 5;
    michal = golfie[michal];
    option = oscard.bind(entity)(michal);
    report = option.createStyles;
    michal = {};
    kiloes = 16;
    offset = 32;
    verify = {'paddingHorizontal': 16, 'paddingVertical': 32};
    michal['root'] = verify;
    verify = {};
    verify['marginTop'] = kiloes;
    michal['title'] = verify;
    verify = {};
    verify['marginTop'] = kiloes;
    michal['features'] = verify;
    backup = 'center';
    verify = {'lineHeight': 20, 'marginTop': 8, 'textAlign': 'center'};
    michal['cardText'] = verify;
    verify = {};
    verify['marginTop'] = kiloes;
    michal['guildList'] = verify;
    kiloes = '100%';
    verify = {'resizeMode': 'contain', 'width': '100%', 'height': 34, 'maxWidth': 320, 'marginTop': 16};
    michal['logoPremiumGuild'] = verify;
    verify = {};
    verify['width'] = kiloes;
    michal['shortWidthLogoPremiumGuild'] = verify;
    verify = {'width': 95, 'height': 65};
    michal['imgPremiumGuild'] = verify;
    verify = {'width': 178, 'height': 112, 'marginTop': 32};
    michal['imgNoGuilds'] = verify;
    verify = {};
    verify['alignItems'] = backup;
    michal['header'] = verify;
    verify = {'marginTop': 32, 'paddingTop': 16};
    yankee = yankee.hairlineWidth;
    yankee = foxtra * yankee;
    verify['borderTopWidth'] = yankee;
    yankee = 6;
    yankee = golfie[yankee];
    yankee = romeon.bind(entity)(yankee);
    yankee = yankee.colors;
    yankee = yankee.BACKGROUND_MODIFIER_ACCENT;
    verify['borderTopColor'] = yankee;
    michal['upsell'] = verify;
    verify = {};
    verify['marginTop'] = offset;
    michal['subscriptionUpsell'] = verify;
    michal = report.bind(option)(michal);
    var _closure1_slot9 = michal;
    michal = function() { // Original name: FEATURES_PREMIUM_GUILD_USER
        michal = {};
        golfie = _closure1_slot1;
        oscard = _closure1_slot2;
        zuuluu = 7;
        zuuluu = oscard[zuuluu];
        report = undefined;
        zuuluu = golfie.bind(report)(zuuluu);
        michal['icon'] = zuuluu;
        tangon = _closure1_slot0;
        option = 8;
        entity = oscard[option];
        entity = tangon.bind(report)(entity);
        verify = entity.intl;
        zuuluu = verify.string;
        entity = oscard[option];
        entity = tangon.bind(report)(entity);
        entity = entity.t;
        entity = entity.GS+bLy;
        entity = zuuluu.bind(verify)(entity);
        michal['label'] = entity;
        entity = 9;
        entity = oscard[entity];
        entity = tangon.bind(report)(entity);
        entity = entity.BoostTier2Icon;
        michal['IconComponent'] = entity;
        zuuluu = 6;
        entity = oscard[zuuluu];
        entity = golfie.bind(report)(entity);
        entity = entity.unsafe_rawColors;
        entity = entity.GUILD_BOOSTING_PINK;
        michal['color'] = entity;
        entity = new Array(3);
        entity[0] = michal;
        michal = {};
        verify = 10;
        verify = oscard[verify];
        verify = golfie.bind(report)(verify);
        michal['icon'] = verify;
        verify = oscard[option];
        verify = tangon.bind(report)(verify);
        yankee = verify.intl;
        offset = yankee.string;
        verify = oscard[option];
        verify = tangon.bind(report)(verify);
        verify = verify.t;
        verify = verify.a7LWeH;
        verify = offset.bind(yankee)(verify);
        michal['label'] = verify;
        verify = function(argFoo) { // Original name: IconComponent
            tangon = _closure1_slot7;
            michal = _closure1_slot0;
            golfie = _closure1_slot2;
            entity = 11;
            entity = golfie[entity];
            zuuluu = undefined;
            entity = michal.bind(zuuluu)(entity);
            michal = entity.BoostTier3Icon;
            entity = {};
            option = argFoo;
            verify = entity;
            oscard = copyDataProperties(verify, option);
            oscard = _closure1_slot1;
            report = 6;
            report = golfie[report];
            report = oscard.bind(zuuluu)(report);
            report = report.unsafe_rawColors;
            oscard = report.GUILD_BOOSTING_PINK;
            report = 'color';
            entity[report] = oscard;
            entity = tangon.bind(zuuluu)(michal, entity);
            return entity;
        };
        michal['IconComponent'] = verify;
        entity[1] = michal;
        michal = {};
        verify = 12;
        verify = oscard[verify];
        verify = golfie.bind(report)(verify);
        michal['icon'] = verify;
        verify = oscard[option];
        verify = tangon.bind(report)(verify);
        offset = verify.intl;
        verify = offset.string;
        option = oscard[option];
        option = tangon.bind(report)(option);
        option = option.t;
        option = option.E76jz8;
        option = verify.bind(offset)(option);
        michal['label'] = option;
        zuuluu = oscard[zuuluu];
        zuuluu = golfie.bind(report)(zuuluu);
        zuuluu = zuuluu.unsafe_rawColors;
        zuuluu = zuuluu.YELLOW_300;
        michal['color'] = zuuluu;
        zuuluu = 13;
        zuuluu = oscard[zuuluu];
        zuuluu = tangon.bind(report)(zuuluu);
        zuuluu = zuuluu.ShieldUserIcon;
        michal['IconComponent'] = zuuluu;
        entity[2] = michal;
        return entity;
    };
    var _closure1_slot10 = michal;
    report = 37;
    report = golfie[report];
    golfie = oscard.bind(entity)(report);
    oscard = golfie.fileFinishedImporting;
    report = 'components_native/premium/GuildBoostingUpsell.tsx';
    report = oscard.bind(golfie)(report);
    tangon = function(argFoo) { // Original name: _default
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            entity = argFoo;
            sizing = entity.onLearnMorePremium;
            echoed = entity.fractionalState;
            result = entity.isInReverseTrial;
            michal = entity.hasAvailableSlots;
            entity = _closure1_slot9;
            report = undefined;
            kiloes = entity.bind(report)();
            zuuluu = _closure1_slot0;
            tangon = _closure1_slot2;
            entity = 24;
            entity = tangon[entity];
            option = zuuluu.bind(report)(entity);
            golfie = option.useStateFromStores;
            entity = _closure1_slot5;
            oscard = new Array(1);
            oscard[0] = entity;
            entity = function() {
                michal = _closure1_slot5;
                entity = michal.getFlattenedGuildIds;
                entity = entity.bind(michal)();
                michal = entity.length;
                entity = 0;
                entity = michal > entity;
                return entity;
            };
            output = golfie.bind(option)(oscard, entity);
            entity = 25;
            entity = tangon[entity];
            oscard = zuuluu.bind(report)(entity);
            entity = oscard.useSubscriptionPlansLoaded;
            foxtra = entity.bind(oscard)();
            entity = 26;
            entity = tangon[entity];
            zuuluu = zuuluu.bind(report)(entity);
            entity = zuuluu.useGuildSubscriptionNoGuildsSource;
            vacuum = entity.bind(zuuluu)();
            zuuluu = _closure1_slot1;
            entity = 27;
            entity = tangon[entity];
            entity = zuuluu.bind(report)(entity);
            update = entity.bind(report)();
            entity = _closure1_slot6;
            entity = entity.NONE;
            if(!(echoed !== entity)) { _fun00002_ip = 179; continue _fun00001 }
 168:
            if(result) { _fun00002_ip = 179; continue _fun00001 }
 171:
            entity = null;
            if(!michal) { _fun00002_ip = 2158; continue _fun00001 }
 179:
            tangon = _closure1_slot8;
            zuuluu = _closure1_slot3;
            michal = {};
            oscard = kiloes.root;
            michal['style'] = oscard;
            oscard = {};
            golfie = kiloes.header;
            oscard['style'] = golfie;
            offset = _closure1_slot7;
            verify = _closure1_slot4;
            golfie = {};
            option = kiloes.imgPremiumGuild;
            golfie['style'] = option;
            yankee = _closure1_slot1;
            source = _closure1_slot2;
            option = 28;
            option = source[option];
            option = yankee.bind(report)(option);
            golfie['source'] = option;
            option = offset.bind(report)(verify, golfie);
            golfie = new Array(4);
            golfie[0] = option;
            option = {};
            yankee = kiloes.logoPremiumGuild;
            option['style'] = yankee;
            backup = _closure1_slot0;
            yankee = 29;
            yankee = source[yankee];
            backup = backup.bind(report)(yankee);
            yankee = backup.isThemeDark;
            yankee = yankee.bind(backup)(update);
            update = _closure1_slot1;
            source = _closure1_slot2;
            if(yankee) { _fun00002_ip = 332; continue _fun00001 }
 318:
            yankee = 31;
            yankee = source[yankee];
            yankee = update.bind(report)(yankee);
            _fun00002_ip = 344; continue _fun00001;
 332:
            backup = 30;
            backup = source[backup];
            yankee = update.bind(report)(backup);
 344:
            option['source'] = yankee;
            option = offset.bind(report)(verify, option);
            golfie[1] = option;
            verify = _closure1_slot7;
            config = _closure1_slot0;
            source = _closure1_slot2;
            ctrled = 32;
            option = source[ctrled];
            option = config.bind(report)(option);
            offset = option.Text;
            option = {'style': null, 'accessibilityRole': 'header', 'variant': 'heading-lg/semibold', 'color': 'header-primary'};
            yankee = kiloes.title;
            option['style'] = yankee;
            record = 8;
            yankee = source[record];
            yankee = config.bind(report)(yankee);
            update = yankee.intl;
            backup = update.string;
            yankee = source[record];
            yankee = config.bind(report)(yankee);
            yankee = yankee.t;
            yankee = yankee.hw6WTU;
            yankee = backup.bind(update)(yankee);
            option['children'] = yankee;
            option = verify.bind(report)(offset, option);
            golfie[2] = option;
            option = source[ctrled];
            option = config.bind(report)(option);
            offset = option.Text;
            option = {};
            yankee = kiloes.cardText;
            option['style'] = yankee;
            cntext = 'text-md/medium';
            option['variant'] = cntext;
            yankee = source[record];
            yankee = config.bind(report)(yankee);
            update = yankee.intl;
            backup = update.string;
            yankee = source[record];
            yankee = config.bind(report)(yankee);
            yankee = yankee.t;
            yankee = yankee.K5jBdH;
            yankee = backup.bind(update)(yankee);
            option['children'] = yankee;
            option = verify.bind(report)(offset, option);
            golfie[3] = option;
            oscard['children'] = golfie;
            golfie = tangon.bind(report)(zuuluu, oscard);
            oscard = new Array(6);
            oscard[0] = golfie;
            golfie = source[ctrled];
            golfie = config.bind(report)(golfie);
            option = golfie.Text;
            golfie = {'style': null, 'accessibilityRole': 'header', 'variant': 'heading-lg/semibold', 'color': 'header-primary'};
            offset = kiloes.title;
            golfie['style'] = offset;
            offset = source[record];
            offset = config.bind(report)(offset);
            backup = offset.intl;
            yankee = backup.string;
            offset = source[record];
            offset = config.bind(report)(offset);
            offset = offset.t;
            offset = offset.RvfRTE;
            offset = yankee.bind(backup)(offset);
            golfie['children'] = offset;
            golfie = verify.bind(report)(option, golfie);
            oscard[1] = golfie;
            update = _closure1_slot1;
            golfie = 33;
            option = source[golfie];
            offset = update.bind(report)(option);
            option = {};
            yankee = kiloes.features;
            option['style'] = yankee;
            yankee = _closure1_slot10;
            yankee = yankee.bind(report)();
            option['features'] = yankee;
            option = verify.bind(report)(offset, option);
            oscard[2] = option;
            option = source[ctrled];
            option = config.bind(report)(option);
            offset = option.Text;
            option = {'style': null, 'accessibilityRole': 'header', 'variant': 'heading-lg/semibold', 'color': 'header-primary'};
            yankee = kiloes.title;
            option['style'] = yankee;
            yankee = source[record];
            yankee = config.bind(report)(yankee);
            sequen = yankee.intl;
            backup = sequen.string;
            yankee = source[record];
            yankee = config.bind(report)(yankee);
            yankee = yankee.t;
            yankee = yankee./pVhjY;
            yankee = backup.bind(sequen)(yankee);
            option['children'] = yankee;
            option = verify.bind(report)(offset, option);
            oscard[3] = option;
            golfie = source[golfie];
            option = update.bind(report)(golfie);
            golfie = {};
            offset = kiloes.features;
            golfie['style'] = offset;
            yankee = {};
            offset = 14;
            offset = source[offset];
            offset = update.bind(report)(offset);
            yankee['icon'] = offset;
            offset = source[record];
            offset = config.bind(report)(offset);
            sequen = offset.intl;
            backup = sequen.string;
            offset = source[record];
            offset = config.bind(report)(offset);
            offset = offset.t;
            offset = offset.Ts7BVF;
            offset = backup.bind(sequen)(offset);
            yankee['label'] = offset;
            offset = 15;
            offset = source[offset];
            offset = config.bind(report)(offset);
            offset = offset.ReactionIcon;
            yankee['IconComponent'] = offset;
            backup = 6;
            offset = source[backup];
            offset = update.bind(report)(offset);
            offset = offset.unsafe_rawColors;
            offset = offset.PREMIUM_PERK_YELLOW;
            yankee['color'] = offset;
            offset = new Array(5);
            offset[0] = yankee;
            yankee = {};
            sequen = 16;
            sequen = source[sequen];
            sequen = update.bind(report)(sequen);
            yankee['icon'] = sequen;
            sequen = source[record];
            sequen = config.bind(report)(sequen);
            target = sequen.intl;
            papara = target.string;
            sequen = source[record];
            sequen = config.bind(report)(sequen);
            sequen = sequen.t;
            sequen = sequen.QcJbt7;
            sequen = papara.bind(target)(sequen);
            yankee['label'] = sequen;
            sequen = 17;
            sequen = source[sequen];
            sequen = config.bind(report)(sequen);
            sequen = sequen.StickerIcon;
            yankee['IconComponent'] = sequen;
            sequen = source[backup];
            sequen = update.bind(report)(sequen);
            sequen = sequen.unsafe_rawColors;
            sequen = sequen.PREMIUM_PERK_PURPLE;
            yankee['color'] = sequen;
            offset[1] = yankee;
            yankee = {};
            sequen = 18;
            sequen = source[sequen];
            sequen = update.bind(report)(sequen);
            yankee['icon'] = sequen;
            sequen = source[record];
            sequen = config.bind(report)(sequen);
            target = sequen.intl;
            papara = target.string;
            sequen = source[record];
            sequen = config.bind(report)(sequen);
            sequen = sequen.t;
            sequen = sequen.rFNkf3;
            sequen = papara.bind(target)(sequen);
            yankee['label'] = sequen;
            sequen = '#4173da';
            yankee['color'] = sequen;
            sequen = 19;
            sequen = source[sequen];
            sequen = config.bind(report)(sequen);
            sequen = sequen.HeadphonesIcon;
            yankee['IconComponent'] = sequen;
            offset[2] = yankee;
            yankee = {};
            sequen = 20;
            sequen = source[sequen];
            sequen = update.bind(report)(sequen);
            yankee['icon'] = sequen;
            sequen = source[record];
            sequen = config.bind(report)(sequen);
            target = sequen.intl;
            papara = target.string;
            sequen = source[record];
            sequen = config.bind(report)(sequen);
            sequen = sequen.t;
            sequen = sequen.BpjjS0;
            sequen = papara.bind(target)(sequen);
            yankee['label'] = sequen;
            sequen = 21;
            sequen = source[sequen];
            sequen = config.bind(report)(sequen);
            sequen = sequen.UploadIcon;
            yankee['IconComponent'] = sequen;
            sequen = source[backup];
            sequen = update.bind(report)(sequen);
            sequen = sequen.unsafe_rawColors;
            sequen = sequen.GUILD_BOOSTING_PINK;
            yankee['color'] = sequen;
            offset[3] = yankee;
            yankee = {};
            sequen = 22;
            sequen = source[sequen];
            sequen = update.bind(report)(sequen);
            yankee['icon'] = sequen;
            sequen = source[record];
            sequen = config.bind(report)(sequen);
            target = sequen.intl;
            papara = target.string;
            sequen = source[record];
            sequen = config.bind(report)(sequen);
            sequen = sequen.t;
            sequen = sequen.9g5LgY;
            sequen = papara.bind(target)(sequen);
            yankee['label'] = sequen;
            sequen = 23;
            sequen = source[sequen];
            sequen = config.bind(report)(sequen);
            sequen = sequen.StarIcon;
            yankee['IconComponent'] = sequen;
            backup = source[backup];
            backup = update.bind(report)(backup);
            backup = backup.unsafe_rawColors;
            backup = backup.PREMIUM_PERK_GOLD;
            yankee['color'] = backup;
            offset[4] = yankee;
            golfie['features'] = offset;
            golfie = verify.bind(report)(option, golfie);
            oscard[4] = golfie;
            verify = _closure1_slot8;
            option = _closure1_slot3;
            golfie = {};
            offset = kiloes.upsell;
            golfie['style'] = offset;
            backup = null;
            if(!foxtra) { _fun00002_ip = 1533; continue _fun00001 }
 1485:
            offset = _closure1_slot6;
            offset = offset.NONE;
            backup = null;
            if(!(echoed === offset)) { _fun00002_ip = 1533; continue _fun00001 }
 1501:
            update = _closure1_slot7;
            echoed = _closure1_slot1;
            source = _closure1_slot2;
            offset = 34;
            offset = source[offset];
            echoed = echoed.bind(report)(offset);
            offset = {};
            backup = update.bind(report)(echoed, offset);
 1533:
            offset = new Array(3);
            offset[0] = backup;
            backup = null;
            if(result) { _fun00002_ip = 2074; continue _fun00001 }
 1549:
            echoed = _closure1_slot8;
            result = _closure1_slot3;
            update = {};
            sequen = _closure1_slot7;
            if(output) { _fun00002_ip = 1817; continue _fun00001 }
 1569:
            source = _closure1_slot4;
            output = {};
            config = kiloes.imgNoGuilds;
            output['style'] = config;
            output['source'] = vacuum;
            source = sequen.bind(report)(source, output);
            output = new Array(3);
            output[0] = source;
            status = _closure1_slot0;
            config = _closure1_slot2;
            source = config[ctrled];
            source = status.bind(report)(source);
            vacuum = source.Text;
            source = {};
            target = kiloes.cardText;
            papara = new Array(1);
            papara[0] = target;
            source['style'] = papara;
            papara = 'text-md/bold';
            source['variant'] = papara;
            papara = config[record];
            papara = status.bind(report)(papara);
            sierra = papara.intl;
            target = sierra.string;
            papara = config[record];
            papara = status.bind(report)(papara);
            papara = papara.t;
            papara = papara.FHm4bW;
            papara = target.bind(sierra)(papara);
            source['children'] = papara;
            source = sequen.bind(report)(vacuum, source);
            output[1] = source;
            source = config[ctrled];
            source = status.bind(report)(source);
            vacuum = source.Text;
            source = {};
            papara = kiloes.cardText;
            source['style'] = papara;
            source['variant'] = cntext;
            papara = config[record];
            papara = status.bind(report)(papara);
            target = papara.intl;
            papara = target.string;
            config = config[record];
            config = status.bind(report)(config);
            config = config.t;
            config = config.PSLiio;
            config = papara.bind(target)(config);
            source['children'] = config;
            source = sequen.bind(report)(vacuum, source);
            output[2] = source;
            update['children'] = output;
            output = update;
            _fun00002_ip = 2068; continue _fun00001;
 1817:
            target = _closure1_slot0;
            config = _closure1_slot2;
            source = config[ctrled];
            source = target.bind(report)(source);
            vacuum = source.Text;
            source = {};
            papara = kiloes.cardText;
            source['style'] = papara;
            source['variant'] = cntext;
            cntext = config[record];
            cntext = target.bind(report)(cntext);
            status = cntext.intl;
            papara = status.string;
            cntext = config[record];
            cntext = target.bind(report)(cntext);
            cntext = cntext.t;
            cntext = cntext.WRzob2;
            cntext = papara.bind(status)(cntext);
            source['children'] = cntext;
            vacuum = sequen.bind(report)(vacuum, source);
            source = new Array(3);
            source[0] = vacuum;
            ctrled = config[ctrled];
            ctrled = target.bind(report)(ctrled);
            vacuum = ctrled.Text;
            ctrled = {};
            papara = kiloes.cardText;
            cntext = new Array(1);
            cntext[0] = papara;
            ctrled['style'] = cntext;
            cntext = 'text-md/bold';
            ctrled['variant'] = cntext;
            cntext = config[record];
            cntext = target.bind(report)(cntext);
            papara = cntext.intl;
            cntext = papara.string;
            record = config[record];
            record = target.bind(report)(record);
            record = record.t;
            record = record.j4bXcn;
            record = cntext.bind(papara)(record);
            ctrled['children'] = record;
            ctrled = sequen.bind(report)(vacuum, ctrled);
            source[1] = ctrled;
            vacuum = _closure1_slot1;
            ctrled = 35;
            ctrled = config[ctrled];
            vacuum = vacuum.bind(report)(ctrled);
            ctrled = {};
            config = kiloes.guildList;
            ctrled['style'] = config;
            ctrled = sequen.bind(report)(vacuum, ctrled);
            source[2] = ctrled;
            update['children'] = source;
            output = update;
 2068:
            backup = echoed.bind(report)(result, output);
 2074:
            offset[1] = backup;
            yankee = null;
            if(!foxtra) { _fun00002_ip = 2130; continue _fun00001 }
 2083:
            backup = _closure1_slot7;
            foxtra = _closure1_slot1;
            output = _closure1_slot2;
            romeon = 36;
            romeon = output[romeon];
            foxtra = foxtra.bind(report)(romeon);
            romeon = {};
            romeon['onLearnMorePremium'] = sizing;
            kiloes = kiloes.subscriptionUpsell;
            romeon['style'] = kiloes;
            yankee = backup.bind(report)(foxtra, romeon);
 2130:
            offset[2] = yankee;
            golfie['children'] = offset;
            golfie = verify.bind(report)(option, golfie);
            oscard[5] = golfie;
            michal['children'] = oscard;
            entity = tangon.bind(report)(zuuluu, michal);
 2158:
            return entity;
        }
    };
    zuuluu['default'] = tangon;
    zuuluu['FEATURES_PREMIUM_GUILD_USER'] = michal;
    return entity;
})();