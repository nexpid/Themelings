// app/components_native/premium/OutboundPromotionClaimAlert.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    report = argBar;
    romeon = argBaz;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    var _closure1_slot1 = romeon;
    var _closure1_slot2 = oscard;
    entity = global;
    option = entity.Object;
    golfie = option.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(option)(zuuluu, entity, tangon);
    entity = 0;
    tangon = oscard[entity];
    entity = undefined;
    tangon = romeon.bind(entity)(tangon);
    var _closure1_slot3 = tangon;
    offset = 1;
    golfie = oscard[offset];
    tangon = argCor;
    tangon = tangon.bind(entity)(golfie);
    var _closure1_slot4 = tangon;
    tangon = 2;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    golfie = tangon.ActivityIndicator;
    var _closure1_slot5 = golfie;
    golfie = tangon.View;
    var _closure1_slot6 = golfie;
    golfie = tangon.Image;
    var _closure1_slot7 = golfie;
    tangon = tangon.ScrollView;
    var _closure1_slot8 = tangon;
    tangon = 3;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    foxtra = tangon.Fonts;
    tangon = 4;
    golfie = oscard[tangon];
    golfie = report.bind(entity)(golfie);
    golfie = golfie.jsx;
    var _closure1_slot9 = golfie;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.jsxs;
    var _closure1_slot10 = tangon;
    tangon = 5;
    tangon = oscard[tangon];
    option = report.bind(entity)(tangon);
    golfie = option.createStyles;
    tangon = {};
    verify = {};
    yankee = 80;
    verify['marginVertical'] = yankee;
    tangon['loading'] = verify;
    verify = {};
    yankee = 'center';
    verify['alignItems'] = yankee;
    tangon['body'] = verify;
    verify = {'fontSize': 24, 'lineHeight': 30, 'color': null, 'fontFamily': null, 'marginBottom': 8};
    yankee = 6;
    backup = oscard[yankee];
    backup = romeon.bind(entity)(backup);
    backup = backup.colors;
    backup = backup.HEADER_PRIMARY;
    verify['color'] = backup;
    foxtra = foxtra.PRIMARY_BOLD;
    verify['fontFamily'] = foxtra;
    tangon['title'] = verify;
    verify = {'lineHeight': 24, 'marginBottom': 8};
    tangon['errorTitle'] = verify;
    verify = {'textAlign': 'center', 'lineHeight': 20};
    tangon['bodyText'] = verify;
    verify = {'backgroundColor': null, 'marginTop': 16, 'padding': 12};
    foxtra = oscard[yankee];
    foxtra = romeon.bind(entity)(foxtra);
    foxtra = foxtra.colors;
    foxtra = foxtra.BACKGROUND_SECONDARY;
    verify['backgroundColor'] = foxtra;
    foxtra = oscard[yankee];
    foxtra = romeon.bind(entity)(foxtra);
    foxtra = foxtra.radii;
    foxtra = foxtra.sm;
    verify['borderRadius'] = foxtra;
    tangon['copyInputContainer'] = verify;
    verify = {'lineHeight': 20, 'marginBottom': 8};
    tangon['copyInputLabel'] = verify;
    verify = {'borderWidth': 1, 'borderColor': null, 'borderRadius': null, 'padding': 8, 'marginBottom': 8, 'flexDirection': 'row', 'alignItems': 'center', 'justifyContent': 'space-between'};
    foxtra = oscard[yankee];
    foxtra = romeon.bind(entity)(foxtra);
    foxtra = foxtra.colors;
    foxtra = foxtra.BACKGROUND_TERTIARY;
    verify['borderColor'] = foxtra;
    foxtra = oscard[yankee];
    foxtra = romeon.bind(entity)(foxtra);
    foxtra = foxtra.radii;
    foxtra = foxtra.xs;
    verify['borderRadius'] = foxtra;
    tangon['copyInput'] = verify;
    verify = {};
    yankee = oscard[yankee];
    yankee = romeon.bind(entity)(yankee);
    yankee = yankee.colors;
    yankee = yankee.INFO_POSITIVE_FOREGROUND;
    verify['borderColor'] = yankee;
    tangon['copyInputCopied'] = verify;
    verify = {};
    verify['flex'] = offset;
    tangon['codeTextContainer'] = verify;
    verify = {'paddingHorizontal': 8, 'marginLeft': 8};
    tangon['copyButton'] = verify;
    verify = {'width': 200, 'height': 100, 'marginBottom': 20};
    tangon['promotionArt'] = verify;
    verify = {'width': 141, 'height': 99, 'marginBottom': 20};
    tangon['errorArt'] = verify;
    tangon = golfie.bind(option)(tangon);
    var _closure1_slot11 = tangon;
    tangon = 18;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'components_native/premium/OutboundPromotionClaimAlert.tsx';
    tangon = report.bind(oscard)(tangon);
    michal = function(argFoo) { // Original name: OutboundPromotionClaimAlert
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            michal = argFoo;
            romeon = michal.onCancel;
            var _closure2_slot0 = romeon;
            entity = michal.onClaim;
            var _closure2_slot1 = entity;
            cntext = michal.code;
            var _closure2_slot2 = cntext;
            sizing = michal.outboundPromotion;
            var _closure2_slot3 = sizing;
            michal = _closure1_slot11;
            tangon = undefined;
            echoed = michal.bind(tangon)();
            report = _closure1_slot4;
            michal = report.useState;
            option = null;
            michal = michal.bind(report)(option);
            offset = _closure1_slot3;
            oscard = 2;
            michal = offset.bind(tangon)(michal, oscard);
            zuuluu = 0;
            golfie = michal[zuuluu];
            vacuum = 1;
            michal = michal[vacuum];
            var _closure2_slot4 = michal;
            foxtra = _closure1_slot1;
            backup = _closure1_slot2;
            michal = 7;
            michal = backup[michal];
            backup = foxtra.bind(tangon)(michal);
            foxtra = false;
            michal = 2000;
            michal = backup.bind(tangon)(foxtra, michal);
            michal = offset.bind(tangon)(michal, oscard);
            kiloes = michal[zuuluu];
            michal = michal[vacuum];
            var _closure2_slot5 = michal;
            offset = option != cntext;
            var _closure2_slot6 = offset;
            zuuluu = report.useEffect;
            michal = new Array(3);
            michal[0] = offset;
            oscard = sizing.id;
            michal[1] = oscard;
            michal[2] = entity;
            entity = function() {
                _fun00003: for(var _fun00004_ip = 0; ; ) switch(_fun00004_ip) {
 0:
                    zuuluu = _closure2_slot6;
                    if(zuuluu) { _fun00004_ip = 92; continue _fun00003 }
 12:
                    report = _closure1_slot0;
                    tangon = _closure1_slot2;
                    zuuluu = 8;
                    tangon = tangon[zuuluu];
                    zuuluu = undefined;
                    tangon = report.bind(zuuluu)(tangon);
                    zuuluu = tangon.claimOutboundPromotion;
                    michal = _closure2_slot3;
                    michal = michal.id;
                    tangon = zuuluu.bind(tangon)(michal);
                    zuuluu = tangon.then;
                    michal = function(argFoo) {
                        zuuluu = _closure2_slot1;
                        michal = undefined;
                        entity = argFoo;
                        entity = zuuluu.bind(michal)(entity);
                        return entity;
                    };
                    zuuluu = zuuluu.bind(tangon)(michal);
                    michal = zuuluu.catch;
                    entity = function(argFoo) {
                        zuuluu = _closure2_slot4;
                        michal = undefined;
                        entity = argFoo;
                        entity = zuuluu.bind(michal)(entity);
                        return entity;
                    };
                    entity = michal.bind(zuuluu)(entity);
 92:
                    entity = undefined;
                    return entity;
                }
            };
            entity = zuuluu.bind(report)(entity, michal);
            if(!(option == cntext)) { _fun00002_ip = 239; continue _fun00001 }
 208:
            zuuluu = _closure1_slot9;
            michal = _closure1_slot5;
            entity = {};
            report = echoed.loading;
            entity['style'] = report;
            report = zuuluu.bind(tangon)(michal, entity);
            _fun00002_ip = 1017; continue _fun00001;
 239:
            zuuluu = _closure1_slot10;
            michal = _closure1_slot6;
            entity = {};
            oscard = echoed.body;
            entity['style'] = oscard;
            output = _closure1_slot9;
            foxtra = _closure1_slot7;
            oscard = {};
            result = _closure1_slot1;
            update = _closure1_slot2;
            backup = 9;
            backup = update[backup];
            backup = result.bind(tangon)(backup);
            oscard['source'] = backup;
            backup = echoed.promotionArt;
            oscard['style'] = backup;
            foxtra = output.bind(tangon)(foxtra, oscard);
            oscard = new Array(4);
            oscard[0] = foxtra;
            sequen = _closure1_slot0;
            foxtra = 10;
            foxtra = update[foxtra];
            foxtra = sequen.bind(tangon)(foxtra);
            backup = foxtra.LegacyText;
            foxtra = {};
            result = echoed.title;
            foxtra['style'] = result;
            result = 'header';
            foxtra['accessibilityRole'] = result;
            status = 11;
            result = update[status];
            result = sequen.bind(tangon)(result);
            ctrled = result.intl;
            source = ctrled.string;
            result = update[status];
            result = sequen.bind(tangon)(result);
            result = result.t;
            result = result.23BfZm;
            result = source.bind(ctrled)(result);
            foxtra['children'] = result;
            foxtra = output.bind(tangon)(backup, foxtra);
            oscard[1] = foxtra;
            result = 12;
            foxtra = update[result];
            foxtra = sequen.bind(tangon)(foxtra);
            backup = foxtra.Text;
            foxtra = {};
            source = echoed.bodyText;
            foxtra['style'] = source;
            source = 'text-md/medium';
            foxtra['variant'] = source;
            sizing = sizing.outboundRedemptionModalBody;
            foxtra['children'] = sizing;
            foxtra = output.bind(tangon)(backup, foxtra);
            oscard[2] = foxtra;
            foxtra = {};
            backup = echoed.copyInputContainer;
            foxtra['style'] = backup;
            backup = update[result];
            backup = sequen.bind(tangon)(backup);
            sizing = backup.Text;
            backup = {'style': null, 'variant': 'text-md/semibold', 'color': 'header-primary'};
            source = echoed.copyInputLabel;
            backup['style'] = source;
            source = update[status];
            source = sequen.bind(tangon)(source);
            ctrled = source.intl;
            source = ctrled.string;
            update = update[status];
            update = sequen.bind(tangon)(update);
            update = update.t;
            update = update.s9LFQk;
            update = source.bind(ctrled)(update);
            backup['children'] = update;
            sizing = output.bind(tangon)(sizing, backup);
            backup = new Array(3);
            backup[0] = sizing;
            sizing = {};
            source = echoed.copyInput;
            if(kiloes) { _fun00002_ip = 609; continue _fun00001 }
 604:
            output = source;
            _fun00002_ip = 637; continue _fun00001;
 609:
            update = {};
            limora = update;
            sierra = source;
            source = copyDataProperties(limora, sierra);
            sierra = echoed.copyInputCopied;
            limora = update;
            source = copyDataProperties(limora, sierra);
            output = update;
 637:
            sizing['style'] = output;
            ctrled = _closure1_slot9;
            update = _closure1_slot8;
            output = {'style': null, 'horizontal': true, 'showsHorizontalScrollIndicator': false};
            source = {};
            source['flex'] = vacuum;
            output['style'] = source;
            source = _closure1_slot6;
            sequen = {};
            vacuum = function() { // Original name: onStartShouldSetResponderCapture
                entity = true;
                return entity;
            };
            sequen['onStartShouldSetResponderCapture'] = vacuum;
            record = _closure1_slot0;
            vacuum = _closure1_slot2;
            config = vacuum[result];
            config = record.bind(tangon)(config);
            record = config.Text;
            config = {'lineClamp': 1, 'variant': 'text-sm/medium', 'color': 'interactive-active'};
            config['children'] = cntext;
            config = ctrled.bind(tangon)(record, config);
            sequen['children'] = config;
            sequen = ctrled.bind(tangon)(source, sequen);
            output['children'] = sequen;
            update = ctrled.bind(tangon)(update, output);
            output = new Array(2);
            output[0] = update;
            update = {};
            sequen = _closure1_slot1;
            config = 13;
            vacuum = vacuum[config];
            sequen = sequen.bind(tangon)(vacuum);
            vacuum = {};
            target = _closure1_slot0;
            record = _closure1_slot2;
            cntext = record[status];
            cntext = target.bind(tangon)(cntext);
            papara = cntext.intl;
            cntext = papara.string;
            record = record[status];
            record = target.bind(tangon)(record);
            record = record.t;
            if(kiloes) { _fun00002_ip = 844; continue _fun00001 }
 831:
            kiloes = record.OpuAlJ;
            kiloes = cntext.bind(papara)(kiloes);
            _fun00002_ip = 855; continue _fun00001;
 844:
            record = record.t5VZ8/;
            kiloes = cntext.bind(papara)(record);
 855:
            vacuum['text'] = kiloes;
            record = _closure1_slot1;
            kiloes = _closure1_slot2;
            config = kiloes[config];
            config = record.bind(tangon)(config);
            config = config.Sizes;
            config = config.XSMALL;
            vacuum['size'] = config;
            config = echoed.copyButton;
            vacuum['style'] = config;
            config = function() { // Original name: onPress
                zuuluu = _closure1_slot0;
                michal = _closure1_slot2;
                entity = 14;
                michal = michal[entity];
                entity = undefined;
                report = zuuluu.bind(entity)(michal);
                tangon = report.copy;
                zuuluu = _closure2_slot2;
                zuuluu = tangon.bind(report)(zuuluu);
                zuuluu = _closure2_slot5;
                michal = true;
                michal = zuuluu.bind(entity)(michal);
                return entity;
            };
            vacuum['onPress'] = config;
            vacuum = ctrled.bind(tangon)(sequen, vacuum);
            update['children'] = vacuum;
            update = ctrled.bind(tangon)(source, update);
            output[1] = update;
            sizing['children'] = output;
            sizing = zuuluu.bind(tangon)(michal, sizing);
            backup[1] = sizing;
            output = _closure1_slot9;
            sizing = _closure1_slot0;
            kiloes = kiloes[result];
            kiloes = sizing.bind(tangon)(kiloes);
            sizing = kiloes.Text;
            kiloes = {'variant': 'text-sm/medium', 'color': 'text-muted', 'children': 'This code is included in your confirmation email'};
            kiloes = output.bind(tangon)(sizing, kiloes);
            backup[2] = kiloes;
            foxtra['children'] = backup;
            foxtra = zuuluu.bind(tangon)(michal, foxtra);
            oscard[3] = foxtra;
            entity['children'] = oscard;
            report = zuuluu.bind(tangon)(michal, entity);
 1017:
            backup = _closure1_slot10;
            oscard = _closure1_slot6;
            entity = {};
            michal = echoed.body;
            entity['style'] = michal;
            zuuluu = _closure1_slot9;
            sizing = _closure1_slot7;
            kiloes = {};
            michal = _closure1_slot1;
            foxtra = _closure1_slot2;
            output = 15;
            output = foxtra[output];
            output = michal.bind(tangon)(output);
            kiloes['source'] = output;
            output = echoed.errorArt;
            kiloes['style'] = output;
            kiloes = zuuluu.bind(tangon)(sizing, kiloes);
            sizing = new Array(3);
            sizing[0] = kiloes;
            ctrled = _closure1_slot0;
            output = 12;
            kiloes = foxtra[output];
            kiloes = ctrled.bind(tangon)(kiloes);
            update = kiloes.Text;
            result = {'style': null, 'variant': 'text-lg/bold', 'color': 'header-primary'};
            kiloes = echoed.errorTitle;
            result['style'] = kiloes;
            kiloes = 11;
            source = foxtra[kiloes];
            source = ctrled.bind(tangon)(source);
            sequen = source.intl;
            vacuum = sequen.string;
            source = foxtra[kiloes];
            source = ctrled.bind(tangon)(source);
            source = source.t;
            source = source.iufib2;
            source = vacuum.bind(sequen)(source);
            result['children'] = source;
            result = zuuluu.bind(tangon)(update, result);
            sizing[1] = result;
            output = foxtra[output];
            output = ctrled.bind(tangon)(output);
            result = output.Text;
            output = {};
            echoed = echoed.bodyText;
            output['style'] = echoed;
            echoed = 'text-md/medium';
            output['variant'] = echoed;
            echoed = foxtra[kiloes];
            echoed = ctrled.bind(tangon)(echoed);
            source = echoed.intl;
            update = source.string;
            echoed = foxtra[kiloes];
            echoed = ctrled.bind(tangon)(echoed);
            echoed = echoed.t;
            echoed = echoed.eAn6z8;
            echoed = update.bind(source)(echoed);
            output['children'] = echoed;
            output = zuuluu.bind(tangon)(result, output);
            sizing[2] = output;
            entity['children'] = sizing;
            oscard = backup.bind(tangon)(oscard, entity);
            entity = 16;
            entity = foxtra[entity];
            michal = michal.bind(tangon)(entity);
            entity = {};
            entity['onCancel'] = romeon;
            if(!(option == golfie)) { _fun00002_ip = 1381; continue _fun00001 }
 1327:
            sizing = _closure1_slot0;
            romeon = _closure1_slot2;
            foxtra = romeon[kiloes];
            foxtra = sizing.bind(tangon)(foxtra);
            backup = foxtra.intl;
            foxtra = backup.string;
            romeon = romeon[kiloes];
            romeon = sizing.bind(tangon)(romeon);
            romeon = romeon.t;
            romeon = romeon.+zx47e;
            romeon = foxtra.bind(backup)(romeon);
            _fun00002_ip = 1433; continue _fun00001;
 1381:
            output = _closure1_slot0;
            foxtra = _closure1_slot2;
            backup = foxtra[kiloes];
            backup = output.bind(tangon)(backup);
            sizing = backup.intl;
            backup = sizing.string;
            foxtra = foxtra[kiloes];
            foxtra = output.bind(tangon)(foxtra);
            foxtra = foxtra.t;
            foxtra = foxtra.cpT0Cg;
            romeon = backup.bind(sizing)(foxtra);
 1433:
            entity['confirmText'] = romeon;
            verify = function() { // Original name: onConfirm
                _fun00005: for(var _fun00006_ip = 0; ; ) switch(_fun00006_ip) {
 0:
                    zuuluu = _closure2_slot2;
                    michal = null;
                    if(!(michal != zuuluu)) { _fun00006_ip = 85; continue _fun00005 }
 13:
                    tangon = _closure1_slot0;
                    oscard = _closure1_slot2;
                    zuuluu = 8;
                    zuuluu = oscard[zuuluu];
                    report = undefined;
                    option = tangon.bind(report)(zuuluu);
                    golfie = option.getOutboundPromotionRedemptionUrl;
                    tangon = _closure2_slot2;
                    zuuluu = _closure2_slot3;
                    tangon = golfie.bind(option)(tangon, zuuluu);
                    zuuluu = _closure1_slot1;
                    michal = 17;
                    michal = oscard[michal];
                    zuuluu = zuuluu.bind(report)(michal);
                    michal = zuuluu.openURL;
                    michal = michal.bind(zuuluu)(tangon);
 85:
                    michal = _closure2_slot0;
                    entity = undefined;
                    michal = michal.bind(entity)();
                    return entity;
                }
            };
            entity['onConfirm'] = verify;
            romeon = option != golfie;
            verify = undefined;
            if(romeon) { _fun00002_ip = 1511; continue _fun00001 }
 1459:
            backup = _closure1_slot0;
            yankee = _closure1_slot2;
            romeon = yankee[kiloes];
            romeon = backup.bind(tangon)(romeon);
            foxtra = romeon.intl;
            romeon = foxtra.string;
            yankee = yankee[kiloes];
            yankee = backup.bind(tangon)(yankee);
            yankee = yankee.t;
            yankee = yankee.TulDPj;
            verify = romeon.bind(foxtra)(yankee);
 1511:
            entity['cancelText'] = verify;
            verify = !offset;
            if(offset) { _fun00002_ip = 1526; continue _fun00001 }
 1522:
            verify = option == golfie;
 1526:
            entity['noDefaultButtons'] = verify;
            if(!(option != golfie)) { _fun00002_ip = 1538; continue _fun00001 }
 1535:
            report = oscard;
 1538:
            entity['children'] = report;
            entity = zuuluu.bind(tangon)(michal, entity);
            return entity;
        }
    };
    zuuluu['default'] = michal;
    return entity;
})();