// app/components_native/premium/OutboundPromotionClaimAlert.tsx
export default (function(argFoo, argBar, argBaz, argCorge, _, argFred, argPlugh) {
    report = argBar;
    romeo = argBaz;
    zulu = argFred;
    oscar = argPlugh;
    var _closure1_slot0 = report;
    var _closure1_slot1 = romeo;
    var _closure1_slot2 = oscar;
    entity = global;
    options = entity.Object;
    golf = options.defineProperty;
    tango = {};
    entity = true;
    tango['value'] = entity;
    entity = '__esModule';
    entity = golf.bind(options)(zulu, entity, tango);
    entity = 0;
    tango = oscar[entity];
    entity = undefined;
    tango = romeo.bind(entity)(tango);
    var _closure1_slot3 = tango;
    offset = 1;
    golf = oscar[offset];
    tango = argCorge;
    tango = tango.bind(entity)(golf);
    var _closure1_slot4 = tango;
    tango = 2;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    golf = tango.ActivityIndicator;
    var _closure1_slot5 = golf;
    golf = tango.View;
    var _closure1_slot6 = golf;
    golf = tango.Image;
    var _closure1_slot7 = golf;
    tango = tango.ScrollView;
    var _closure1_slot8 = tango;
    tango = 3;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    foxtrot = tango.Fonts;
    tango = 4;
    golf = oscar[tango];
    golf = report.bind(entity)(golf);
    golf = golf.jsx;
    var _closure1_slot9 = golf;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.jsxs;
    var _closure1_slot10 = tango;
    tango = 5;
    tango = oscar[tango];
    options = report.bind(entity)(tango);
    golf = options.createStyles;
    tango = {};
    verify = {};
    yankee = 80;
    verify['marginVertical'] = yankee;
    tango['loading'] = verify;
    verify = {};
    yankee = 'center';
    verify['alignItems'] = yankee;
    tango['body'] = verify;
    verify = {'fontSize': 24, 'lineHeight': 30, 'color': null, 'fontFamily': null, 'marginBottom': 8};
    yankee = 6;
    backup = oscar[yankee];
    backup = romeo.bind(entity)(backup);
    backup = backup.colors;
    backup = backup.HEADER_PRIMARY;
    verify['color'] = backup;
    foxtrot = foxtrot.PRIMARY_BOLD;
    verify['fontFamily'] = foxtrot;
    tango['title'] = verify;
    verify = {'lineHeight': 24, 'marginBottom': 8};
    tango['errorTitle'] = verify;
    verify = {'textAlign': 'center', 'lineHeight': 20};
    tango['bodyText'] = verify;
    verify = {'backgroundColor': null, 'marginTop': 16, 'padding': 12};
    foxtrot = oscar[yankee];
    foxtrot = romeo.bind(entity)(foxtrot);
    foxtrot = foxtrot.colors;
    foxtrot = foxtrot.BACKGROUND_SECONDARY;
    verify['backgroundColor'] = foxtrot;
    foxtrot = oscar[yankee];
    foxtrot = romeo.bind(entity)(foxtrot);
    foxtrot = foxtrot.radii;
    foxtrot = foxtrot.sm;
    verify['borderRadius'] = foxtrot;
    tango['copyInputContainer'] = verify;
    verify = {'lineHeight': 20, 'marginBottom': 8};
    tango['copyInputLabel'] = verify;
    verify = {'borderWidth': 1, 'borderColor': null, 'borderRadius': null, 'padding': 8, 'marginBottom': 8, 'flexDirection': 'row', 'alignItems': 'center', 'justifyContent': 'space-between'};
    foxtrot = oscar[yankee];
    foxtrot = romeo.bind(entity)(foxtrot);
    foxtrot = foxtrot.colors;
    foxtrot = foxtrot.BACKGROUND_TERTIARY;
    verify['borderColor'] = foxtrot;
    foxtrot = oscar[yankee];
    foxtrot = romeo.bind(entity)(foxtrot);
    foxtrot = foxtrot.radii;
    foxtrot = foxtrot.xs;
    verify['borderRadius'] = foxtrot;
    tango['copyInput'] = verify;
    verify = {};
    yankee = oscar[yankee];
    yankee = romeo.bind(entity)(yankee);
    yankee = yankee.colors;
    yankee = yankee.INFO_POSITIVE_FOREGROUND;
    verify['borderColor'] = yankee;
    tango['copyInputCopied'] = verify;
    verify = {};
    verify['flex'] = offset;
    tango['codeTextContainer'] = verify;
    verify = {'paddingHorizontal': 8, 'marginLeft': 8};
    tango['copyButton'] = verify;
    verify = {'width': 200, 'height': 100, 'marginBottom': 20};
    tango['promotionArt'] = verify;
    verify = {'width': 141, 'height': 99, 'marginBottom': 20};
    tango['errorArt'] = verify;
    tango = golf.bind(options)(tango);
    var _closure1_slot11 = tango;
    tango = 18;
    tango = oscar[tango];
    oscar = report.bind(entity)(tango);
    report = oscar.fileFinishedImporting;
    tango = 'components_native/premium/OutboundPromotionClaimAlert.tsx';
    tango = report.bind(oscar)(tango);
    mike = function(argFoo) { // Original name: OutboundPromotionClaimAlert
        _fun96302: for(var _fun96302_ip = 0; ; ) switch(_fun96302_ip) {
 0:
            mike = argFoo;
            romeo = mike.onCancel;
            var _closure2_slot0 = romeo;
            entity = mike.onClaim;
            var _closure2_slot1 = entity;
            context = mike.code;
            var _closure2_slot2 = context;
            sizing = mike.outboundPromotion;
            var _closure2_slot3 = sizing;
            mike = _closure1_slot11;
            tango = undefined;
            echo = mike.bind(tango)();
            report = _closure1_slot4;
            mike = report.useState;
            options = null;
            mike = mike.bind(report)(options);
            offset = _closure1_slot3;
            oscar = 2;
            mike = offset.bind(tango)(mike, oscar);
            zulu = 0;
            golf = mike[zulu];
            vacuum = 1;
            mike = mike[vacuum];
            var _closure2_slot4 = mike;
            foxtrot = _closure1_slot1;
            backup = _closure1_slot2;
            mike = 7;
            mike = backup[mike];
            backup = foxtrot.bind(tango)(mike);
            foxtrot = false;
            mike = 2000;
            mike = backup.bind(tango)(foxtrot, mike);
            mike = offset.bind(tango)(mike, oscar);
            kilo = mike[zulu];
            mike = mike[vacuum];
            var _closure2_slot5 = mike;
            offset = options != context;
            var _closure2_slot6 = offset;
            zulu = report.useEffect;
            mike = new Array(3);
            mike[0] = offset;
            oscar = sizing.id;
            mike[1] = oscar;
            mike[2] = entity;
            entity = function() {
                _fun96303: for(var _fun96303_ip = 0; ; ) switch(_fun96303_ip) {
 0:
                    zulu = _closure2_slot6;
                    if(zulu) { _fun96303_ip = 92; continue _fun96303 }
 12:
                    report = _closure1_slot0;
                    tango = _closure1_slot2;
                    zulu = 8;
                    tango = tango[zulu];
                    zulu = undefined;
                    tango = report.bind(zulu)(tango);
                    zulu = tango.claimOutboundPromotion;
                    mike = _closure2_slot3;
                    mike = mike.id;
                    tango = zulu.bind(tango)(mike);
                    zulu = tango.then;
                    mike = function(argFoo) {
                        zulu = _closure2_slot1;
                        mike = undefined;
                        entity = argFoo;
                        entity = zulu.bind(mike)(entity);
                        return entity;
                    };
                    zulu = zulu.bind(tango)(mike);
                    mike = zulu.catch;
                    entity = function(argFoo) {
                        zulu = _closure2_slot4;
                        mike = undefined;
                        entity = argFoo;
                        entity = zulu.bind(mike)(entity);
                        return entity;
                    };
                    entity = mike.bind(zulu)(entity);
 92:
                    entity = undefined;
                    return entity;
                }
            };
            entity = zulu.bind(report)(entity, mike);
            if(!(options == context)) { _fun96302_ip = 239; continue _fun96302 }
 208:
            zulu = _closure1_slot9;
            mike = _closure1_slot5;
            entity = {};
            report = echo.loading;
            entity['style'] = report;
            report = zulu.bind(tango)(mike, entity);
            _fun96302_ip = 1009; continue _fun96302;
 239:
            zulu = _closure1_slot10;
            mike = _closure1_slot6;
            entity = {};
            oscar = echo.body;
            entity['style'] = oscar;
            output = _closure1_slot9;
            foxtrot = _closure1_slot7;
            oscar = {};
            result = _closure1_slot1;
            update = _closure1_slot2;
            backup = 9;
            backup = update[backup];
            backup = result.bind(tango)(backup);
            oscar['source'] = backup;
            backup = echo.promotionArt;
            oscar['style'] = backup;
            foxtrot = output.bind(tango)(foxtrot, oscar);
            oscar = new Array(4);
            oscar[0] = foxtrot;
            sequence = _closure1_slot0;
            foxtrot = 10;
            foxtrot = update[foxtrot];
            foxtrot = sequence.bind(tango)(foxtrot);
            backup = foxtrot.LegacyText;
            foxtrot = {};
            result = echo.title;
            foxtrot['style'] = result;
            result = 'header';
            foxtrot['accessibilityRole'] = result;
            status = 11;
            result = update[status];
            result = sequence.bind(tango)(result);
            control = result.intl;
            source = control.string;
            result = update[status];
            result = sequence.bind(tango)(result);
            result = result.t;
            result = result.23BfZm;
            result = source.bind(control)(result);
            foxtrot['children'] = result;
            foxtrot = output.bind(tango)(backup, foxtrot);
            oscar[1] = foxtrot;
            result = 12;
            foxtrot = update[result];
            foxtrot = sequence.bind(tango)(foxtrot);
            backup = foxtrot.Text;
            foxtrot = {};
            source = echo.bodyText;
            foxtrot['style'] = source;
            source = 'text-md/medium';
            foxtrot['variant'] = source;
            sizing = sizing.outboundRedemptionModalBody;
            foxtrot['children'] = sizing;
            foxtrot = output.bind(tango)(backup, foxtrot);
            oscar[2] = foxtrot;
            foxtrot = {};
            backup = echo.copyInputContainer;
            foxtrot['style'] = backup;
            backup = update[result];
            backup = sequence.bind(tango)(backup);
            sizing = backup.Text;
            backup = {'style': null, 'variant': 'text-md/semibold', 'color': 'header-primary'};
            source = echo.copyInputLabel;
            backup['style'] = source;
            source = update[status];
            source = sequence.bind(tango)(source);
            control = source.intl;
            source = control.string;
            update = update[status];
            update = sequence.bind(tango)(update);
            update = update.t;
            update = update.s9LFQk;
            update = source.bind(control)(update);
            backup['children'] = update;
            sizing = output.bind(tango)(sizing, backup);
            backup = new Array(3);
            backup[0] = sizing;
            sizing = {};
            source = echo.copyInput;
            if(kilo) { _fun96302_ip = 605; continue _fun96302 }
 600:
            output = source;
            _fun96302_ip = 633; continue _fun96302;
 605:
            update = {};
            lima = update;
            sierra = source;
            source = copyDataProperties(lima, sierra);
            sierra = echo.copyInputCopied;
            lima = update;
            source = copyDataProperties(lima, sierra);
            output = update;
 633:
            sizing['style'] = output;
            control = _closure1_slot9;
            update = _closure1_slot8;
            output = {'style': null, 'horizontal': true, 'showsHorizontalScrollIndicator': false};
            source = {};
            source['flex'] = vacuum;
            output['style'] = source;
            source = _closure1_slot6;
            sequence = {};
            vacuum = function() { // Original name: onStartShouldSetResponderCapture
                entity = true;
                return entity;
            };
            sequence['onStartShouldSetResponderCapture'] = vacuum;
            record = _closure1_slot0;
            vacuum = _closure1_slot2;
            config = vacuum[result];
            config = record.bind(tango)(config);
            record = config.Text;
            config = {'lineClamp': 1, 'variant': 'text-sm/medium', 'color': 'interactive-active'};
            config['children'] = context;
            config = control.bind(tango)(record, config);
            sequence['children'] = config;
            sequence = control.bind(tango)(source, sequence);
            output['children'] = sequence;
            update = control.bind(tango)(update, output);
            output = new Array(2);
            output[0] = update;
            update = {};
            sequence = _closure1_slot1;
            config = 13;
            vacuum = vacuum[config];
            sequence = sequence.bind(tango)(vacuum);
            vacuum = {};
            target = _closure1_slot0;
            record = _closure1_slot2;
            context = record[status];
            context = target.bind(tango)(context);
            papa = context.intl;
            context = papa.string;
            record = record[status];
            record = target.bind(tango)(record);
            record = record.t;
            if(kilo) { _fun96302_ip = 836; continue _fun96302 }
 823:
            kilo = record.OpuAlJ;
            kilo = context.bind(papa)(kilo);
            _fun96302_ip = 847; continue _fun96302;
 836:
            record = record.t5VZ8/;
            kilo = context.bind(papa)(record);
 847:
            vacuum['text'] = kilo;
            record = _closure1_slot1;
            kilo = _closure1_slot2;
            config = kilo[config];
            config = record.bind(tango)(config);
            config = config.Sizes;
            config = config.XSMALL;
            vacuum['size'] = config;
            config = echo.copyButton;
            vacuum['style'] = config;
            config = function() { // Original name: onPress
                zulu = _closure1_slot0;
                mike = _closure1_slot2;
                entity = 14;
                mike = mike[entity];
                entity = undefined;
                report = zulu.bind(entity)(mike);
                tango = report.copy;
                zulu = _closure2_slot2;
                zulu = tango.bind(report)(zulu);
                zulu = _closure2_slot5;
                mike = true;
                mike = zulu.bind(entity)(mike);
                return entity;
            };
            vacuum['onPress'] = config;
            vacuum = control.bind(tango)(sequence, vacuum);
            update['children'] = vacuum;
            update = control.bind(tango)(source, update);
            output[1] = update;
            sizing['children'] = output;
            sizing = zulu.bind(tango)(mike, sizing);
            backup[1] = sizing;
            output = _closure1_slot9;
            sizing = _closure1_slot0;
            kilo = kilo[result];
            kilo = sizing.bind(tango)(kilo);
            sizing = kilo.Text;
            kilo = {'variant': 'text-sm/medium', 'color': 'text-muted', 'children': 'This code is included in your confirmation email'};
            kilo = output.bind(tango)(sizing, kilo);
            backup[2] = kilo;
            foxtrot['children'] = backup;
            foxtrot = zulu.bind(tango)(mike, foxtrot);
            oscar[3] = foxtrot;
            entity['children'] = oscar;
            report = zulu.bind(tango)(mike, entity);
 1009:
            backup = _closure1_slot10;
            oscar = _closure1_slot6;
            entity = {};
            mike = echo.body;
            entity['style'] = mike;
            zulu = _closure1_slot9;
            sizing = _closure1_slot7;
            kilo = {};
            mike = _closure1_slot1;
            foxtrot = _closure1_slot2;
            output = 15;
            output = foxtrot[output];
            output = mike.bind(tango)(output);
            kilo['source'] = output;
            output = echo.errorArt;
            kilo['style'] = output;
            kilo = zulu.bind(tango)(sizing, kilo);
            sizing = new Array(3);
            sizing[0] = kilo;
            control = _closure1_slot0;
            output = 12;
            kilo = foxtrot[output];
            kilo = control.bind(tango)(kilo);
            update = kilo.Text;
            result = {'style': null, 'variant': 'text-lg/bold', 'color': 'header-primary'};
            kilo = echo.errorTitle;
            result['style'] = kilo;
            kilo = 11;
            source = foxtrot[kilo];
            source = control.bind(tango)(source);
            sequence = source.intl;
            vacuum = sequence.string;
            source = foxtrot[kilo];
            source = control.bind(tango)(source);
            source = source.t;
            source = source.iufib2;
            source = vacuum.bind(sequence)(source);
            result['children'] = source;
            result = zulu.bind(tango)(update, result);
            sizing[1] = result;
            output = foxtrot[output];
            output = control.bind(tango)(output);
            result = output.Text;
            output = {};
            echo = echo.bodyText;
            output['style'] = echo;
            echo = 'text-md/medium';
            output['variant'] = echo;
            echo = foxtrot[kilo];
            echo = control.bind(tango)(echo);
            source = echo.intl;
            update = source.string;
            echo = foxtrot[kilo];
            echo = control.bind(tango)(echo);
            echo = echo.t;
            echo = echo.eAn6z8;
            echo = update.bind(source)(echo);
            output['children'] = echo;
            output = zulu.bind(tango)(result, output);
            sizing[2] = output;
            entity['children'] = sizing;
            oscar = backup.bind(tango)(oscar, entity);
            entity = 16;
            entity = foxtrot[entity];
            mike = mike.bind(tango)(entity);
            entity = {};
            entity['onCancel'] = romeo;
            if(!(options == golf)) { _fun96302_ip = 1373; continue _fun96302 }
 1319:
            sizing = _closure1_slot0;
            romeo = _closure1_slot2;
            foxtrot = romeo[kilo];
            foxtrot = sizing.bind(tango)(foxtrot);
            backup = foxtrot.intl;
            foxtrot = backup.string;
            romeo = romeo[kilo];
            romeo = sizing.bind(tango)(romeo);
            romeo = romeo.t;
            romeo = romeo.+zx47e;
            romeo = foxtrot.bind(backup)(romeo);
            _fun96302_ip = 1425; continue _fun96302;
 1373:
            output = _closure1_slot0;
            foxtrot = _closure1_slot2;
            backup = foxtrot[kilo];
            backup = output.bind(tango)(backup);
            sizing = backup.intl;
            backup = sizing.string;
            foxtrot = foxtrot[kilo];
            foxtrot = output.bind(tango)(foxtrot);
            foxtrot = foxtrot.t;
            foxtrot = foxtrot.cpT0Cg;
            romeo = backup.bind(sizing)(foxtrot);
 1425:
            entity['confirmText'] = romeo;
            verify = function() { // Original name: onConfirm
                _fun96308: for(var _fun96308_ip = 0; ; ) switch(_fun96308_ip) {
 0:
                    zulu = _closure2_slot2;
                    mike = null;
                    if(!(mike != zulu)) { _fun96308_ip = 85; continue _fun96308 }
 13:
                    tango = _closure1_slot0;
                    oscar = _closure1_slot2;
                    zulu = 8;
                    zulu = oscar[zulu];
                    report = undefined;
                    options = tango.bind(report)(zulu);
                    golf = options.getOutboundPromotionRedemptionUrl;
                    tango = _closure2_slot2;
                    zulu = _closure2_slot3;
                    tango = golf.bind(options)(tango, zulu);
                    zulu = _closure1_slot1;
                    mike = 17;
                    mike = oscar[mike];
                    zulu = zulu.bind(report)(mike);
                    mike = zulu.openURL;
                    mike = mike.bind(zulu)(tango);
 85:
                    mike = _closure2_slot0;
                    entity = undefined;
                    mike = mike.bind(entity)();
                    return entity;
                }
            };
            entity['onConfirm'] = verify;
            romeo = options != golf;
            verify = undefined;
            if(romeo) { _fun96302_ip = 1503; continue _fun96302 }
 1451:
            backup = _closure1_slot0;
            yankee = _closure1_slot2;
            romeo = yankee[kilo];
            romeo = backup.bind(tango)(romeo);
            foxtrot = romeo.intl;
            romeo = foxtrot.string;
            yankee = yankee[kilo];
            yankee = backup.bind(tango)(yankee);
            yankee = yankee.t;
            yankee = yankee.TulDPj;
            verify = romeo.bind(foxtrot)(yankee);
 1503:
            entity['cancelText'] = verify;
            verify = !offset;
            if(offset) { _fun96302_ip = 1518; continue _fun96302 }
 1514:
            verify = options == golf;
 1518:
            entity['noDefaultButtons'] = verify;
            if(!(options != golf)) { _fun96302_ip = 1530; continue _fun96302 }
 1527:
            report = oscar;
 1530:
            entity['children'] = report;
            entity = zulu.bind(tango)(mike, entity);
            return entity;
        }
    };
    zulu['default'] = mike;
    return entity;
})();