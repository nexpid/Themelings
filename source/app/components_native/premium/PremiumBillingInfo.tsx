// app/components_native/premium/PremiumBillingInfo.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    oscard = argBar;
    backup = argBaz;
    zuuluu = argFre;
    golfie = argPlu;
    var _closure1_slot0 = oscard;
    var _closure1_slot1 = backup;
    var _closure1_slot2 = golfie;
    michal = function(argFoo) { // Original name: GoogleManagementLink
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            entity = argFoo;
            golfie = entity.style;
            offset = entity.subscription;
            zuuluu = _closure1_slot0;
            tangon = _closure1_slot2;
            entity = 7;
            entity = tangon[entity];
            report = undefined;
            zuuluu = zuuluu.bind(report)(entity);
            entity = zuuluu.isAndroid;
            zuuluu = entity.bind(zuuluu)();
            entity = null;
            if(!zuuluu) { _fun00002_ip = 229; continue _fun00001 }
 56:
            zuuluu = offset.isPurchasedViaGoogle;
            entity = null;
            if(!zuuluu) { _fun00002_ip = 229; continue _fun00001 }
 70:
            tangon = _closure1_slot5;
            romeon = _closure1_slot0;
            foxtra = _closure1_slot2;
            michal = 8;
            michal = foxtra[michal];
            michal = romeon.bind(report)(michal);
            zuuluu = michal.TextWithIOSLinkWorkaround;
            michal = {'style': null, 'variant': 'text-sm/medium', 'color': 'text-link'};
            oscard = new Array(1);
            oscard[0] = golfie;
            michal['style'] = oscard;
            oscard = 9;
            golfie = foxtra[oscard];
            golfie = romeon.bind(report)(golfie);
            verify = golfie.intl;
            option = verify.format;
            oscard = foxtra[oscard];
            oscard = romeon.bind(report)(oscard);
            oscard = oscard.t;
            golfie = oscard.9NPc+P;
            oscard = {};
            yankee = 10;
            yankee = foxtra[yankee];
            foxtra = romeon.bind(report)(yankee);
            romeon = foxtra.getExternalSubscriptionMethodUrl;
            yankee = offset.paymentGateway;
            offset = 'SUBSCRIPTION_MANAGEMENT';
            offset = romeon.bind(foxtra)(yankee, offset);
            oscard['onClick'] = offset;
            oscard = option.bind(verify)(golfie, oscard);
            michal['children'] = oscard;
            entity = tangon.bind(report)(zuuluu, michal);
 229:
            return entity;
        }
    };
    var _closure1_slot8 = michal;
    entity = global;
    verify = entity.Object;
    option = verify.defineProperty;
    report = {};
    entity = true;
    report['value'] = entity;
    entity = '__esModule';
    entity = option.bind(verify)(zuuluu, entity, report);
    entity = 0;
    report = golfie[entity];
    entity = undefined;
    report = backup.bind(entity)(report);
    var _closure1_slot3 = report;
    report = 1;
    option = golfie[report];
    report = argCor;
    report = report.bind(entity)(option);
    report = 2;
    report = golfie[report];
    report = oscard.bind(entity)(report);
    report = report.View;
    var _closure1_slot4 = report;
    report = 3;
    report = golfie[report];
    report = oscard.bind(entity)(report);
    yankee = report.USER_SETTINGS_CONTAINER_HORIZONTAL_PADDING;
    foxtra = 4;
    report = golfie[foxtra];
    report = oscard.bind(entity)(report);
    option = report.jsx;
    var _closure1_slot5 = option;
    report = report.jsxs;
    var _closure1_slot6 = report;
    report = 5;
    report = golfie[report];
    offset = oscard.bind(entity)(report);
    verify = offset.createStyles;
    option = {};
    report = {};
    report['paddingHorizontal'] = yankee;
    option['title'] = report;
    report = {};
    romeon = 8;
    report['marginTop'] = romeon;
    report['paddingHorizontal'] = yankee;
    option['externalSubtext'] = report;
    yankee = {'backgroundColor': null, 'padding': 16, 'marginTop': 8};
    report = 6;
    report = golfie[report];
    report = backup.bind(entity)(report);
    report = report.colors;
    report = report.BACKGROUND_SECONDARY;
    yankee['backgroundColor'] = report;
    report = 16;
    option['billingContainer'] = yankee;
    yankee = {};
    yankee['marginTop'] = foxtra;
    option['billingRenewalInfo'] = yankee;
    yankee = {};
    yankee['marginTop'] = romeon;
    option['billingManageGoogle'] = yankee;
    option = verify.bind(offset)(option);
    var _closure1_slot7 = option;
    report = golfie[report];
    golfie = oscard.bind(entity)(report);
    oscard = golfie.fileFinishedImporting;
    report = 'components_native/premium/PremiumBillingInfo.tsx';
    report = oscard.bind(golfie)(report);
    tangon = function(argFoo) { // Original name: PremiumBillingInfo
        _fun00003: for(var _fun00004_ip = 0; ; ) switch(_fun00004_ip) {
 0:
            entity = argFoo;
            oscard = entity.style;
            output = entity.subscription;
            entity = _closure1_slot7;
            report = undefined;
            foxtra = entity.bind(report)();
            michal = _closure1_slot0;
            verify = _closure1_slot2;
            entity = 11;
            entity = verify[entity];
            zuuluu = michal.bind(report)(entity);
            michal = zuuluu.useSubscriptionInvoicePreview;
            entity = {'subscriptionId': null, 'renewal': true, 'applyEntitlements': true};
            tangon = output.id;
            entity['subscriptionId'] = tangon;
            golfie = _closure1_slot1;
            tangon = 12;
            tangon = verify[tangon];
            tangon = golfie.bind(report)(tangon);
            tangon = tangon.bind(report)();
            entity['analyticsLocations'] = tangon;
            tangon = 13;
            tangon = verify[tangon];
            tangon = golfie.bind(report)(tangon);
            tangon = tangon.PREMIUM_BILLING_INFO;
            entity['analyticsLocation'] = tangon;
            zuuluu = michal.bind(zuuluu)(entity);
            michal = _closure1_slot3;
            entity = 1;
            michal = michal.bind(report)(zuuluu, entity);
            entity = 0;
            update = michal[entity];
            entity = null;
            if(!(entity != update)) { _fun00004_ip = 619; continue _fun00003 }
 159:
            echoed = _closure1_slot0;
            source = _closure1_slot2;
            michal = 14;
            michal = source[michal];
            zuuluu = echoed.bind(report)(michal);
            michal = zuuluu.getExternalManagementMessage;
            yankee = michal.bind(zuuluu)(output);
            tangon = _closure1_slot6;
            zuuluu = _closure1_slot4;
            michal = {};
            michal['style'] = oscard;
            verify = _closure1_slot5;
            backup = 15;
            oscard = source[backup];
            oscard = echoed.bind(report)(oscard);
            golfie = oscard.Text;
            oscard = {'style': null, 'accessibilityRole': 'header', 'variant': 'eyebrow', 'color': 'header-secondary'};
            offset = foxtra.title;
            oscard['style'] = offset;
            kiloes = 9;
            offset = source[kiloes];
            offset = echoed.bind(report)(offset);
            sizing = offset.intl;
            romeon = sizing.string;
            offset = source[kiloes];
            offset = echoed.bind(report)(offset);
            offset = offset.t;
            offset = offset.Sb6wIy;
            offset = romeon.bind(sizing)(offset);
            oscard['children'] = offset;
            golfie = verify.bind(report)(golfie, oscard);
            oscard = new Array(3);
            oscard[0] = golfie;
            golfie = {};
            verify = foxtra.billingContainer;
            golfie['style'] = verify;
            romeon = _closure1_slot5;
            verify = source[backup];
            verify = echoed.bind(report)(verify);
            offset = verify.Text;
            verify = {};
            sizing = 'text-md/semibold';
            verify['variant'] = sizing;
            sizing = source[kiloes];
            sizing = echoed.bind(report)(sizing);
            result = sizing.intl;
            sizing = result.string;
            kiloes = source[kiloes];
            kiloes = echoed.bind(report)(kiloes);
            kiloes = kiloes.t;
            kiloes = kiloes.KXQjfX;
            kiloes = sizing.bind(result)(kiloes);
            verify['children'] = kiloes;
            offset = romeon.bind(report)(offset, verify);
            verify = new Array(3);
            verify[0] = offset;
            sizing = _closure1_slot5;
            offset = source[backup];
            offset = echoed.bind(report)(offset);
            kiloes = offset.Text;
            offset = {};
            romeon = foxtra.billingRenewalInfo;
            offset['style'] = romeon;
            romeon = 'text-sm/medium';
            offset['variant'] = romeon;
            result = 10;
            result = source[result];
            echoed = echoed.bind(report)(result);
            result = echoed.getBillingInformationString;
            result = result.bind(echoed)(output, update);
            offset['children'] = result;
            offset = sizing.bind(report)(kiloes, offset);
            verify[1] = offset;
            sizing = _closure1_slot5;
            kiloes = _closure1_slot8;
            offset = {};
            result = foxtra.billingManageGoogle;
            offset['style'] = result;
            offset['subscription'] = output;
            offset = sizing.bind(report)(kiloes, offset);
            verify[2] = offset;
            golfie['children'] = verify;
            golfie = tangon.bind(report)(zuuluu, golfie);
            oscard[1] = golfie;
            verify = entity != yankee;
            golfie = null;
            if(!verify) { _fun00004_ip = 603; continue _fun00003 }
 551:
            offset = _closure1_slot5;
            verify = _closure1_slot0;
            option = _closure1_slot2;
            option = option[backup];
            option = verify.bind(report)(option);
            verify = option.Text;
            option = {};
            foxtra = foxtra.externalSubtext;
            option['style'] = foxtra;
            option['variant'] = romeon;
            option['children'] = yankee;
            golfie = offset.bind(report)(verify, option);
 603:
            oscard[2] = golfie;
            michal['children'] = oscard;
            michal = tangon.bind(report)(zuuluu, michal);
            return michal;
 619:
            return entity;
        }
    };
    zuuluu['default'] = tangon;
    zuuluu['GoogleManagementLink'] = michal;
    return entity;
})();