// app/components_native/premium/PremiumSubscriptionUpsell.tsx
export default (function(argFoo, argBar, argBaz, argCorge, _, argFred, argPlugh) {
    report = argBar;
    yankee = argBaz;
    zulu = argFred;
    oscar = argPlugh;
    var _closure1_slot0 = report;
    var _closure1_slot1 = yankee;
    var _closure1_slot2 = oscar;
    entity = global;
    options = entity.Object;
    golf = options.defineProperty;
    tango = {};
    entity = true;
    tango['value'] = entity;
    entity = '__esModule';
    entity = golf.bind(options)(zulu, entity, tango);
    entity = 0;
    golf = oscar[entity];
    tango = argCorge;
    entity = undefined;
    tango = tango.bind(entity)(golf);
    tango = 1;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    golf = tango.View;
    var _closure1_slot3 = golf;
    golf = tango.Image;
    var _closure1_slot4 = golf;
    foxtrot = tango.StyleSheet;
    kilo = 2;
    tango = oscar[kilo];
    tango = yankee.bind(entity)(tango);
    var _closure1_slot5 = tango;
    tango = 3;
    tango = oscar[tango];
    tango = yankee.bind(entity)(tango);
    var _closure1_slot6 = tango;
    tango = 4;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    backup = tango.Fonts;
    tango = 5;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    golf = tango.NUM_FREE_GUILD_BOOSTS_WITH_PREMIUM;
    var _closure1_slot7 = golf;
    tango = tango.GUILD_BOOST_COST_FOR_PREMIUM_USER_DISCOUNT_PERCENT;
    var _closure1_slot8 = tango;
    tango = 6;
    golf = oscar[tango];
    golf = report.bind(entity)(golf);
    golf = golf.jsx;
    var _closure1_slot9 = golf;
    golf = oscar[tango];
    golf = report.bind(entity)(golf);
    golf = golf.Fragment;
    var _closure1_slot10 = golf;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.jsxs;
    var _closure1_slot11 = tango;
    tango = 7;
    tango = oscar[tango];
    options = report.bind(entity)(tango);
    golf = options.createStyles;
    tango = {};
    verify = {};
    offset = 'center';
    verify['textAlign'] = offset;
    tango['title'] = verify;
    romeo = 20;
    offset = 8;
    verify = {'lineHeight': 20, 'marginTop': 8, 'textAlign': 'center'};
    tango['subtitle'] = verify;
    verify = {};
    sizing = 32;
    verify['paddingTop'] = sizing;
    foxtrot = foxtrot.hairlineWidth;
    foxtrot = kilo * foxtrot;
    verify['borderTopWidth'] = foxtrot;
    foxtrot = oscar[offset];
    foxtrot = yankee.bind(entity)(foxtrot);
    foxtrot = foxtrot.colors;
    foxtrot = foxtrot.BACKGROUND_MODIFIER_ACCENT;
    verify['borderTopColor'] = foxtrot;
    tango['upsell'] = verify;
    verify = {'borderRadius': null, 'padding': 16, 'alignItems': 'center'};
    foxtrot = oscar[offset];
    foxtrot = yankee.bind(entity)(foxtrot);
    foxtrot = foxtrot.radii;
    foxtrot = foxtrot.xs;
    verify['borderRadius'] = foxtrot;
    foxtrot = 16;
    tango['upsellCard'] = verify;
    verify = {'borderRadius': null, 'padding': 16, 'marginTop': 12, 'alignSelf': 'stretch'};
    kilo = oscar[offset];
    kilo = yankee.bind(entity)(kilo);
    kilo = kilo.radii;
    kilo = kilo.sm;
    verify['borderRadius'] = kilo;
    kilo = oscar[offset];
    kilo = yankee.bind(entity)(kilo);
    kilo = kilo.colors;
    kilo = kilo.BACKGROUND_MODIFIER_ACCENT;
    verify['backgroundColor'] = kilo;
    tango['upsellFeatures'] = verify;
    verify = {'alignSelf': 'center', 'height': 10, 'width': 54};
    tango['upsellFeatureSubLogo'] = verify;
    verify = {};
    verify['marginTop'] = offset;
    tango['upsellFeatureList'] = verify;
    verify = {};
    verify['marginTop'] = foxtrot;
    tango['upsellButton'] = verify;
    verify = {'alignSelf': 'center', 'height': 20, 'marginTop': 6, 'width': 84};
    tango['upsellFeatureLogoTier2'] = verify;
    verify = {};
    kilo = oscar[offset];
    kilo = yankee.bind(entity)(kilo);
    kilo = kilo.unsafe_rawColors;
    kilo = kilo.WHITE_500;
    verify['color'] = kilo;
    backup = backup.PRIMARY_SEMIBOLD;
    verify['fontFamily'] = backup;
    verify['fontSize'] = foxtrot;
    verify['lineHeight'] = romeo;
    tango['upsellLabel'] = verify;
    verify = {'paddingVertical': 0, 'marginTop': 8};
    romeo = oscar[offset];
    romeo = yankee.bind(entity)(romeo);
    romeo = romeo.unsafe_rawColors;
    romeo = romeo.WHITE_500;
    verify['color'] = romeo;
    tango['upsellRow'] = verify;
    verify = {};
    romeo = 9;
    romeo = oscar[romeo];
    foxtrot = report.bind(entity)(romeo);
    romeo = foxtrot.hexWithOpacity;
    offset = oscar[offset];
    offset = yankee.bind(entity)(offset);
    offset = offset.unsafe_rawColors;
    yankee = offset.WHITE_500;
    offset = 0.5;
    offset = romeo.bind(foxtrot)(yankee, offset);
    verify['color'] = offset;
    tango['upsellLabelMuted'] = verify;
    tango = golf.bind(options)(tango);
    var _closure1_slot12 = tango;
    tango = 22;
    tango = oscar[tango];
    oscar = report.bind(entity)(tango);
    report = oscar.fileFinishedImporting;
    tango = 'components_native/premium/PremiumSubscriptionUpsell.tsx';
    tango = report.bind(oscar)(tango);
    mike = function(argFoo) { // Original name: _default
        _fun96141: for(var _fun96141_ip = 0; ; ) switch(_fun96141_ip) {
 0:
            entity = argFoo;
            kilo = entity.onLearnMorePremium;
            golf = entity.style;
            entity = _closure1_slot12;
            report = undefined;
            foxtrot = entity.bind(report)();
            zulu = _closure1_slot0;
            entity = _closure1_slot2;
            mike = 13;
            mike = entity[mike];
            oscar = zulu.bind(report)(mike);
            tango = oscar.useStateFromStores;
            mike = _closure1_slot6;
            zulu = new Array(1);
            zulu[0] = mike;
            mike = function() {
                mike = _closure1_slot6;
                entity = mike.getCurrentUser;
                entity = entity.bind(mike)();
                return entity;
            };
            yankee = tango.bind(oscar)(zulu, mike);
            mike = _closure1_slot1;
            romeo = 14;
            entity = entity[romeo];
            mike = mike.bind(report)(entity);
            entity = mike.canUsePremiumGuildMemberProfile;
            mike = entity.bind(mike)(yankee);
            entity = null;
            if(mike) { _fun96141_ip = 1249; continue _fun96141 }
 114:
            tango = _closure1_slot9;
            zulu = _closure1_slot3;
            mike = {};
            options = foxtrot.upsell;
            oscar = new Array(2);
            oscar[0] = options;
            oscar[1] = golf;
            mike['style'] = oscar;
            options = _closure1_slot11;
            offset = _closure1_slot1;
            verify = _closure1_slot2;
            oscar = 15;
            oscar = verify[oscar];
            golf = offset.bind(report)(oscar);
            oscar = {};
            backup = foxtrot.upsellCard;
            oscar['style'] = backup;
            sizing = _closure1_slot0;
            backup = 16;
            output = verify[backup];
            output = sizing.bind(report)(output);
            output = output.HorizontalGradient;
            output = output.START;
            oscar['start'] = output;
            output = verify[backup];
            output = sizing.bind(report)(output);
            output = output.HorizontalGradient;
            output = output.END;
            oscar['end'] = output;
            backup = verify[backup];
            backup = sizing.bind(report)(backup);
            backup = backup.Gradients;
            backup = backup.PREMIUM_GUILD;
            oscar['colors'] = backup;
            verify = verify[romeo];
            offset = offset.bind(report)(verify);
            verify = offset.isPremium;
            verify = verify.bind(offset)(yankee);
            if(verify) { _fun96141_ip = 403; continue _fun96141 }
 287:
            yankee = _closure1_slot9;
            output = _closure1_slot0;
            result = _closure1_slot2;
            verify = 17;
            verify = result[verify];
            verify = output.bind(report)(verify);
            offset = verify.Text;
            verify = {'style': null, 'accessibilityRole': 'header', 'variant': 'heading-lg/semibold', 'color': 'always-white'};
            romeo = foxtrot.title;
            verify['style'] = romeo;
            romeo = 11;
            backup = result[romeo];
            backup = output.bind(report)(backup);
            sizing = backup.intl;
            backup = sizing.string;
            romeo = result[romeo];
            romeo = output.bind(report)(romeo);
            romeo = romeo.t;
            romeo = romeo.qUl+Ky;
            romeo = backup.bind(sizing)(romeo);
            verify['children'] = romeo;
            offset = yankee.bind(report)(offset, verify);
            _fun96141_ip = 652; continue _fun96141;
 403:
            romeo = _closure1_slot11;
            yankee = _closure1_slot10;
            verify = {};
            result = _closure1_slot9;
            update = _closure1_slot0;
            vacuum = _closure1_slot2;
            sizing = 17;
            backup = vacuum[sizing];
            backup = update.bind(report)(backup);
            output = backup.Text;
            backup = {'style': null, 'accessibilityRole': 'header', 'variant': 'heading-lg/semibold', 'color': 'always-white'};
            echo = foxtrot.title;
            backup['style'] = echo;
            echo = 11;
            source = vacuum[echo];
            source = update.bind(report)(source);
            sequence = source.intl;
            control = sequence.string;
            source = vacuum[echo];
            source = update.bind(report)(source);
            source = source.t;
            source = source.YYfHl5;
            source = control.bind(sequence)(source);
            backup['children'] = source;
            output = result.bind(report)(output, backup);
            backup = new Array(2);
            backup[0] = output;
            sizing = vacuum[sizing];
            sizing = update.bind(report)(sizing);
            output = sizing.Text;
            sizing = {'style': null, 'variant': 'text-md/semibold', 'color': 'always-white'};
            source = foxtrot.subtitle;
            sizing['style'] = source;
            source = vacuum[echo];
            source = update.bind(report)(source);
            control = source.intl;
            source = control.format;
            echo = vacuum[echo];
            echo = update.bind(report)(echo);
            echo = echo.t;
            update = echo.Af0zER;
            echo = {};
            vacuum = _closure1_slot7;
            echo['numFreeGuildSubscriptions'] = vacuum;
            echo = source.bind(control)(update, echo);
            sizing['children'] = echo;
            sizing = result.bind(report)(output, sizing);
            backup[1] = sizing;
            verify['children'] = backup;
            offset = romeo.bind(report)(yankee, verify);
 652:
            verify = new Array(3);
            verify[0] = offset;
            backup = _closure1_slot11;
            romeo = _closure1_slot3;
            offset = {};
            yankee = foxtrot.upsellFeatures;
            offset['style'] = yankee;
            yankee = _closure1_slot9;
            result = _closure1_slot4;
            sizing = {};
            output = foxtrot.upsellFeatureSubLogo;
            sizing['style'] = output;
            config = _closure1_slot1;
            update = _closure1_slot2;
            output = 18;
            output = update[output];
            output = config.bind(report)(output);
            sizing['source'] = output;
            sizing = yankee.bind(report)(result, sizing);
            output = new Array(3);
            output[0] = sizing;
            sizing = {};
            echo = foxtrot.upsellFeatureLogoTier2;
            sizing['style'] = echo;
            echo = 19;
            echo = update[echo];
            echo = config.bind(report)(echo);
            sizing['source'] = echo;
            sizing = yankee.bind(report)(result, sizing);
            output[1] = sizing;
            sizing = 20;
            sizing = update[sizing];
            source = config.bind(report)(sizing);
            result = {};
            sizing = foxtrot.upsellFeatureList;
            result['style'] = sizing;
            vacuum = {};
            record = 10;
            sizing = update[record];
            sizing = config.bind(report)(sizing);
            vacuum['icon'] = sizing;
            echo = _closure1_slot0;
            sizing = 11;
            control = update[sizing];
            control = echo.bind(report)(control);
            papa = control.intl;
            context = papa.formatToPlainString;
            control = update[sizing];
            control = echo.bind(report)(control);
            control = control.t;
            sequence = control.P3aEj4;
            control = {};
            target = 12;
            target = update[target];
            whiskey = echo.bind(report)(target);
            lima = whiskey.formatPercent;
            target = _closure1_slot5;
            sierra = target.locale;
            equality = _closure1_slot8;
            target = 100;
            target = equality / target;
            target = lima.bind(whiskey)(sierra, target);
            control['discountPercentage'] = target;
            control = context.bind(papa)(sequence, control);
            vacuum['label'] = control;
            sequence = 8;
            control = update[sequence];
            control = config.bind(report)(control);
            control = control.unsafe_rawColors;
            control = control.WHITE_500;
            vacuum['color'] = control;
            control = new Array(2);
            control[0] = vacuum;
            vacuum = {};
            record = update[record];
            record = config.bind(report)(record);
            vacuum['icon'] = record;
            record = update[sizing];
            record = echo.bind(report)(record);
            target = record.intl;
            papa = target.formatToPlainString;
            record = update[sizing];
            record = echo.bind(report)(record);
            record = record.t;
            context = record.NtlzbW;
            record = {};
            status = _closure1_slot7;
            record['numFreeGuildSubscriptions'] = status;
            record = papa.bind(target)(context, record);
            vacuum['label'] = record;
            sequence = update[sequence];
            sequence = config.bind(report)(sequence);
            sequence = sequence.unsafe_rawColors;
            sequence = sequence.WHITE_500;
            vacuum['color'] = sequence;
            control[1] = vacuum;
            result['features'] = control;
            control = foxtrot.upsellLabel;
            result['labelStyle'] = control;
            control = foxtrot.upsellRow;
            result['rowStyle'] = control;
            result = yankee.bind(report)(source, result);
            output[2] = result;
            offset['children'] = output;
            offset = backup.bind(report)(romeo, offset);
            verify[1] = offset;
            offset = {};
            foxtrot = foxtrot.upsellButton;
            offset['style'] = foxtrot;
            foxtrot = 21;
            foxtrot = update[foxtrot];
            foxtrot = echo.bind(report)(foxtrot);
            backup = foxtrot.Button;
            foxtrot = {};
            output = 'experimental_premium-secondary';
            foxtrot['variant'] = output;
            output = update[sizing];
            output = echo.bind(report)(output);
            result = output.intl;
            output = result.string;
            sizing = update[sizing];
            sizing = echo.bind(report)(sizing);
            sizing = sizing.t;
            sizing = sizing.fJOECg;
            sizing = output.bind(result)(sizing);
            foxtrot['text'] = sizing;
            foxtrot['onPress'] = kilo;
            foxtrot = yankee.bind(report)(backup, foxtrot);
            offset['children'] = foxtrot;
            offset = yankee.bind(report)(romeo, offset);
            verify[2] = offset;
            oscar['children'] = verify;
            oscar = options.bind(report)(golf, oscar);
            mike['children'] = oscar;
            entity = tango.bind(report)(zulu, mike);
 1249:
            return entity;
        }
    };
    zulu['default'] = mike;
    return entity;
})();