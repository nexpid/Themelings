// app/components_native/premium/ShineAnimation.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    report = argBar;
    foxtra = argBaz;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    var _closure1_slot1 = foxtra;
    var _closure1_slot2 = oscard;
    tangon = global;
    verify = tangon.Object;
    option = verify.defineProperty;
    golfie = {};
    entity = true;
    golfie['value'] = entity;
    entity = '__esModule';
    entity = option.bind(verify)(zuuluu, entity, golfie);
    entity = 0;
    option = oscard[entity];
    golfie = argCor;
    entity = undefined;
    golfie = golfie.bind(entity)(option);
    var _closure1_slot3 = golfie;
    yankee = 1;
    option = oscard[yankee];
    option = report.bind(entity)(option);
    verify = option.Image;
    var _closure1_slot4 = verify;
    romeon = option.StyleSheet;
    option = option.View;
    var _closure1_slot5 = option;
    option = 2;
    option = oscard[option];
    option = report.bind(entity)(option);
    verify = option.jsx;
    var _closure1_slot6 = verify;
    option = option.jsxs;
    var _closure1_slot7 = option;
    verify = tangon.Object;
    option = verify.freeze;
    tangon = {'FLASH_TIME_PERCENT': 0.72, 'FLASH_DURATION_PERCENT': 0.08};
    tangon = option.bind(verify)(tangon);
    var _closure1_slot8 = tangon;
    tangon = 3;
    tangon = oscard[tangon];
    verify = report.bind(entity)(tangon);
    option = verify.createStyles;
    tangon = {};
    offset = {};
    backup = 'hidden';
    offset['overflow'] = backup;
    tangon['container'] = offset;
    offset = {};
    sizing = romeon.absoluteFillObject;
    output = offset;
    romeon = copyDataProperties(output, sizing);
    tangon['shineContainer'] = offset;
    offset = {'transform': null, 'width': 56, 'flex': 0, 'height': '300%', 'top': '-10%'};
    backup = {};
    romeon = '30deg';
    backup['rotate'] = romeon;
    romeon = new Array(1);
    romeon[0] = backup;
    offset['transform'] = romeon;
    tangon['shine'] = offset;
    offset = {};
    romeon = 4;
    romeon = oscard[romeon];
    romeon = foxtra.bind(entity)(romeon);
    romeon = romeon.colors;
    romeon = romeon.REDESIGN_BUTTON_SELECTED_BACKGROUND;
    offset['backgroundColor'] = romeon;
    offset['flex'] = yankee;
    tangon['shineInner'] = offset;
    tangon = option.bind(verify)(tangon);
    var _closure1_slot9 = tangon;
    tangon = {};
    option = 'function ShineAnimationTsx1(){const{interpolate,progress}=this.__closure;const widthPercent=interpolate(progress.get(),[0,1],[20,160]);return{width:widthPercent+"%"};}';
    tangon['code'] = option;
    var _closure1_slot10 = tangon;
    tangon = {};
    option = 'function ShineAnimationTsx2(){const{ShineAnimationConfig,interpolateColor,progress,flashStartColor,flashEndColor}=this.__closure;const startTime=ShineAnimationConfig.FLASH_TIME_PERCENT;const duration=ShineAnimationConfig.FLASH_DURATION_PERCENT;return{backgroundColor:interpolateColor(progress.get(),[0,startTime,startTime,startTime+duration,1],[flashStartColor,flashStartColor,flashEndColor,flashEndColor,flashStartColor])};}';
    tangon['code'] = option;
    var _closure1_slot11 = tangon;
    tangon = golfie.memo;
    michal = function(argFoo) { // Original name: ShineAnimation
        michal = argFoo;
        verify = michal.source;
        option = michal.style;
        michal = _closure1_slot9;
        tangon = undefined;
        foxtra = michal.bind(tangon)();
        result = _closure1_slot0;
        backup = _closure1_slot2;
        offset = 5;
        michal = backup[offset];
        report = result.bind(tangon)(michal);
        zuuluu = report.useSharedValue;
        michal = 0;
        sizing = zuuluu.bind(report)(michal);
        var _closure2_slot0 = sizing;
        golfie = _closure1_slot3;
        report = golfie.useEffect;
        zuuluu = new Array(1);
        zuuluu[0] = sizing;
        michal = function() {
            tangon = _closure2_slot0;
            zuuluu = tangon.set;
            report = _closure1_slot0;
            option = _closure1_slot2;
            michal = 5;
            oscard = option[michal];
            entity = undefined;
            golfie = report.bind(entity)(oscard);
            oscard = golfie.withDelay;
            michal = option[michal];
            offset = report.bind(entity)(michal);
            verify = offset.withRepeat;
            michal = 6;
            michal = option[michal];
            yankee = report.bind(entity)(michal);
            option = yankee.withTiming;
            report = {};
            michal = 1000;
            report['duration'] = michal;
            michal = 1;
            option = option.bind(yankee)(michal, report);
            report = -1;
            michal = false;
            report = verify.bind(offset)(option, report, michal);
            michal = 400;
            michal = oscard.bind(golfie)(michal, report);
            michal = zuuluu.bind(tangon)(michal);
            return entity;
        };
        michal = report.bind(golfie)(michal, zuuluu);
        michal = backup[offset];
        report = result.bind(tangon)(michal);
        zuuluu = report.useAnimatedStyle;
        michal = function() { // Original name: p
            entity = {};
            tangon = _closure1_slot0;
            zuuluu = _closure1_slot2;
            michal = 5;
            zuuluu = zuuluu[michal];
            michal = undefined;
            oscard = tangon.bind(michal)(zuuluu);
            report = oscard.interpolate;
            zuuluu = _closure2_slot0;
            michal = zuuluu.get;
            tangon = michal.bind(zuuluu)();
            zuuluu = [0, 1];
            michal = [20, 160];
            report = report.bind(oscard)(tangon, zuuluu, michal);
            michal = global;
            michal = michal.HermesInternal;
            tangon = michal.concat;
            zuuluu = '';
            michal = '%';
            michal = tangon.bind(zuuluu)(report, michal);
            entity['width'] = michal;
            return entity;
        };
        golfie = {};
        yankee = backup[offset];
        yankee = result.bind(tangon)(yankee);
        yankee = yankee.interpolate;
        golfie['interpolate'] = yankee;
        golfie['progress'] = sizing;
        michal['__closure'] = golfie;
        golfie = 4072719467417.0;
        michal['__workletHash'] = golfie;
        golfie = _closure1_slot10;
        michal['__initData'] = golfie;
        romeon = zuuluu.bind(report)(michal);
        yankee = _closure1_slot1;
        zuuluu = 7;
        michal = backup[zuuluu];
        golfie = yankee.bind(tangon)(michal);
        michal = 4;
        report = backup[michal];
        report = yankee.bind(tangon)(report);
        report = report.unsafe_rawColors;
        report = report.BRAND_360;
        kiloes = golfie.bind(tangon)(report);
        golfie = kiloes.alpha;
        report = 0.2;
        golfie = golfie.bind(kiloes)(report);
        report = golfie.hex;
        kiloes = report.bind(golfie)();
        var _closure2_slot1 = kiloes;
        zuuluu = backup[zuuluu];
        zuuluu = yankee.bind(tangon)(zuuluu);
        michal = backup[michal];
        michal = yankee.bind(tangon)(michal);
        michal = michal.unsafe_rawColors;
        michal = michal.BRAND_360;
        report = zuuluu.bind(tangon)(michal);
        zuuluu = report.alpha;
        michal = 1;
        zuuluu = zuuluu.bind(report)(michal);
        michal = zuuluu.hex;
        golfie = michal.bind(zuuluu)();
        var _closure2_slot2 = golfie;
        michal = backup[offset];
        zuuluu = result.bind(tangon)(michal);
        michal = zuuluu.useAnimatedStyle;
        entity = function() { // Original name: A
            entity = _closure1_slot8;
            golfie = entity.FLASH_TIME_PERCENT;
            michal = entity.FLASH_DURATION_PERCENT;
            entity = {};
            report = _closure1_slot0;
            tangon = _closure1_slot2;
            zuuluu = 5;
            tangon = tangon[zuuluu];
            zuuluu = undefined;
            oscard = report.bind(zuuluu)(tangon);
            report = oscard.interpolateColor;
            tangon = _closure2_slot0;
            zuuluu = tangon.get;
            tangon = zuuluu.bind(tangon)();
            zuuluu = [0];
            zuuluu[1] = golfie;
            zuuluu[2] = golfie;
            michal = golfie + michal;
            zuuluu[3] = michal;
            michal = 1;
            zuuluu[4] = michal;
            golfie = _closure2_slot1;
            michal = new Array(5);
            michal[0] = golfie;
            michal[1] = golfie;
            option = _closure2_slot2;
            michal[2] = option;
            michal[3] = option;
            michal[4] = golfie;
            michal = report.bind(oscard)(tangon, zuuluu, michal);
            entity['backgroundColor'] = michal;
            return entity;
        };
        report = {};
        output = _closure1_slot8;
        report['ShineAnimationConfig'] = output;
        output = backup[offset];
        output = result.bind(tangon)(output);
        output = output.interpolateColor;
        report['interpolateColor'] = output;
        report['progress'] = sizing;
        report['flashStartColor'] = kiloes;
        report['flashEndColor'] = golfie;
        entity['__closure'] = report;
        report = 9845866779228.0;
        entity['__workletHash'] = report;
        report = _closure1_slot11;
        entity['__initData'] = report;
        golfie = michal.bind(zuuluu)(entity);
        zuuluu = _closure1_slot7;
        entity = backup[offset];
        entity = yankee.bind(tangon)(entity);
        michal = entity.View;
        entity = {};
        kiloes = foxtra.container;
        report = new Array(3);
        report[0] = kiloes;
        report[1] = option;
        report[2] = golfie;
        entity['style'] = report;
        golfie = _closure1_slot5;
        report = {};
        option = foxtra.shineContainer;
        report['style'] = option;
        option = _closure1_slot6;
        offset = backup[offset];
        offset = yankee.bind(tangon)(offset);
        yankee = offset.View;
        offset = {};
        offset['style'] = romeon;
        yankee = option.bind(tangon)(yankee, offset);
        offset = new Array(2);
        offset[0] = yankee;
        yankee = {};
        romeon = foxtra.shine;
        yankee['style'] = romeon;
        romeon = {};
        foxtra = foxtra.shineInner;
        romeon['style'] = foxtra;
        romeon = option.bind(tangon)(golfie, romeon);
        yankee['children'] = romeon;
        yankee = option.bind(tangon)(golfie, yankee);
        offset[1] = yankee;
        report['children'] = offset;
        golfie = zuuluu.bind(tangon)(golfie, report);
        report = new Array(2);
        report[0] = golfie;
        golfie = _closure1_slot4;
        oscard = {};
        oscard['source'] = verify;
        oscard = option.bind(tangon)(golfie, oscard);
        report[1] = oscard;
        entity['children'] = report;
        entity = zuuluu.bind(tangon)(michal, entity);
        return entity;
    };
    michal = tangon.bind(golfie)(michal);
    tangon = 8;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'components_native/premium/ShineAnimation.tsx';
    tangon = report.bind(oscard)(tangon);
    zuuluu['default'] = michal;
    return entity;
})();