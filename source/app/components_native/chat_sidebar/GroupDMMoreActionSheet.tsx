// app/components_native/chat_sidebar/GroupDMMoreActionSheet.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    report = argBar;
    golfie = argBaz;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    var _closure1_slot1 = golfie;
    var _closure1_slot2 = oscard;
    entity = global;
    verify = entity.Object;
    option = verify.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = option.bind(verify)(zuuluu, entity, tangon);
    entity = 0;
    option = oscard[entity];
    tangon = argCor;
    entity = undefined;
    tangon = tangon.bind(entity)(option);
    var _closure1_slot3 = tangon;
    tangon = 1;
    tangon = oscard[tangon];
    tangon = golfie.bind(entity)(tangon);
    var _closure1_slot4 = tangon;
    tangon = 2;
    tangon = oscard[tangon];
    tangon = golfie.bind(entity)(tangon);
    var _closure1_slot5 = tangon;
    tangon = 3;
    tangon = oscard[tangon];
    tangon = golfie.bind(entity)(tangon);
    var _closure1_slot6 = tangon;
    tangon = 4;
    golfie = oscard[tangon];
    golfie = report.bind(entity)(golfie);
    golfie = golfie.jsx;
    var _closure1_slot7 = golfie;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.jsxs;
    var _closure1_slot8 = tangon;
    tangon = 24;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'components_native/chat_sidebar/GroupDMMoreActionSheet.tsx';
    tangon = report.bind(oscard)(tangon);
    michal = function(argFoo) { // Original name: _default
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            michal = argFoo;
            entity = michal.channel;
            var _closure2_slot0 = entity;
            michal = michal.navigation;
            var _closure2_slot1 = michal;
            oscard = _closure1_slot0;
            report = _closure1_slot2;
            michal = 5;
            michal = report[michal];
            tangon = undefined;
            michal = oscard.bind(tangon)(michal);
            zuuluu = michal.DeveloperMode;
            michal = zuuluu.useSetting;
            option = michal.bind(zuuluu)();
            michal = 6;
            michal = report[michal];
            verify = oscard.bind(tangon)(michal);
            golfie = verify.useStateFromStores;
            michal = _closure1_slot4;
            zuuluu = new Array(1);
            zuuluu[0] = michal;
            michal = function() {
                zuuluu = _closure2_slot0;
                michal = zuuluu.isOwner;
                tangon = _closure1_slot4;
                entity = tangon.getId;
                entity = entity.bind(tangon)();
                entity = michal.bind(zuuluu)(entity);
                return entity;
            };
            offset = golfie.bind(verify)(zuuluu, michal);
            michal = function() { // Original name: close
                zuuluu = _closure1_slot1;
                michal = _closure1_slot2;
                entity = 7;
                michal = michal[entity];
                entity = undefined;
                zuuluu = zuuluu.bind(entity)(michal);
                michal = zuuluu.hideActionSheet;
                michal = michal.bind(zuuluu)();
                return entity;
            };
            var _closure2_slot2 = michal;
            golfie = _closure1_slot3;
            zuuluu = golfie.useCallback;
            michal = new Array(1);
            michal[0] = entity;
            entity = function() {
                _fun00003: for(var _fun00004_ip = 0; ; ) switch(_fun00004_ip) {
 0:
                    michal = _closure2_slot2;
                    entity = undefined;
                    michal = michal.bind(entity)();
                    zuuluu = _closure1_slot0;
                    michal = _closure1_slot2;
                    report = 8;
                    report = michal[report];
                    verify = zuuluu.bind(entity)(report);
                    option = verify.computeChannelName;
                    report = _closure2_slot0;
                    golfie = _closure1_slot6;
                    tangon = _closure1_slot5;
                    yankee = option.bind(verify)(report, golfie, tangon);
                    verify = 9;
                    tangon = michal[verify];
                    tangon = zuuluu.bind(entity)(tangon);
                    offset = tangon.intl;
                    option = offset.formatToPlainString;
                    tangon = michal[verify];
                    tangon = zuuluu.bind(entity)(tangon);
                    tangon = tangon.t;
                    golfie = tangon.hJ5Ap6;
                    tangon = {};
                    tangon['name'] = yankee;
                    tangon = option.bind(offset)(golfie, tangon);
                    golfie = michal[verify];
                    golfie = zuuluu.bind(entity)(golfie);
                    option = golfie.intl;
                    golfie = option.format;
                    michal = michal[verify];
                    michal = zuuluu.bind(entity)(michal);
                    michal = michal.t;
                    zuuluu = michal.SSIVOj;
                    michal = {};
                    michal['name'] = yankee;
                    golfie = golfie.bind(option)(zuuluu, michal);
                    michal = report.isManaged;
                    michal = michal.bind(report)();
                    option = tangon;
                    if(!michal) { _fun00004_ip = 292; continue _fun00003 }
 182:
                    tangon = _closure1_slot0;
                    michal = _closure1_slot2;
                    zuuluu = michal[verify];
                    zuuluu = tangon.bind(entity)(zuuluu);
                    romeon = zuuluu.intl;
                    offset = romeon.formatToPlainString;
                    zuuluu = michal[verify];
                    zuuluu = tangon.bind(entity)(zuuluu);
                    zuuluu = zuuluu.t;
                    report = zuuluu.hVGjER;
                    zuuluu = {};
                    zuuluu['name'] = yankee;
                    option = offset.bind(romeon)(report, zuuluu);
                    report = michal[verify];
                    report = tangon.bind(entity)(report);
                    offset = report.intl;
                    report = offset.format;
                    michal = michal[verify];
                    michal = tangon.bind(entity)(michal);
                    michal = michal.t;
                    tangon = michal.IK1Qvr;
                    michal = {};
                    michal['name'] = yankee;
                    golfie = report.bind(offset)(tangon, michal);
 292:
                    zuuluu = _closure1_slot1;
                    report = _closure1_slot2;
                    michal = 10;
                    michal = report[michal];
                    tangon = zuuluu.bind(entity)(michal);
                    zuuluu = tangon.show;
                    michal = {};
                    michal['title'] = option;
                    michal['body'] = golfie;
                    option = _closure1_slot0;
                    oscard = report[verify];
                    oscard = option.bind(entity)(oscard);
                    offset = oscard.intl;
                    golfie = offset.string;
                    oscard = report[verify];
                    oscard = option.bind(entity)(oscard);
                    oscard = oscard.t;
                    oscard = oscard.p89ACg;
                    oscard = golfie.bind(offset)(oscard);
                    michal['confirmText'] = oscard;
                    oscard = report[verify];
                    oscard = option.bind(entity)(oscard);
                    golfie = oscard.intl;
                    oscard = golfie.string;
                    report = report[verify];
                    report = option.bind(entity)(report);
                    report = report.t;
                    report = report.gm1Ven;
                    report = oscard.bind(golfie)(report);
                    michal['cancelText'] = report;
                    report = function() { // Original name: onConfirm
                        zuuluu = _closure1_slot1;
                        michal = _closure1_slot2;
                        entity = 11;
                        michal = michal[entity];
                        entity = undefined;
                        tangon = zuuluu.bind(entity)(michal);
                        zuuluu = tangon.closePrivateChannel;
                        entity = _closure2_slot0;
                        michal = entity.id;
                        entity = true;
                        entity = zuuluu.bind(tangon)(michal, entity);
                        return entity;
                    };
                    michal['onConfirm'] = report;
                    michal = zuuluu.bind(tangon)(michal);
                    return entity;
                }
            };
            romeon = zuuluu.bind(golfie)(entity, michal);
            zuuluu = _closure1_slot7;
            entity = 12;
            entity = report[entity];
            entity = oscard.bind(tangon)(entity);
            michal = entity.ActionSheet;
            entity = {};
            golfie = true;
            entity['showGradient'] = golfie;
            golfie = _closure1_slot8;
            backup = 13;
            report = report[backup];
            report = oscard.bind(tangon)(report);
            report = report.ActionSheetRow;
            oscard = report.Group;
            report = {};
            yankee = null;
            if(!option) { _fun00002_ip = 367; continue _fun00001 }
 217:
            sizing = _closure1_slot7;
            source = _closure1_slot0;
            ctrled = _closure1_slot2;
            option = ctrled[backup];
            option = source.bind(tangon)(option);
            foxtra = option.ActionSheetRow;
            option = {};
            output = ctrled[backup];
            output = source.bind(tangon)(output);
            output = output.ActionSheetRow;
            echoed = output.Icon;
            output = {};
            vacuum = _closure1_slot1;
            update = 14;
            update = ctrled[update];
            update = vacuum.bind(tangon)(update);
            output['source'] = update;
            output = sizing.bind(tangon)(echoed, output);
            option['icon'] = output;
            output = 9;
            echoed = ctrled[output];
            echoed = source.bind(tangon)(echoed);
            update = echoed.intl;
            echoed = update.string;
            output = ctrled[output];
            output = source.bind(tangon)(output);
            output = output.t;
            output = output.gFHI3t;
            output = echoed.bind(update)(output);
            option['label'] = output;
            output = function() { // Original name: onPress
                zuuluu = _closure2_slot2;
                entity = undefined;
                zuuluu = zuuluu.bind(entity)();
                zuuluu = _closure1_slot0;
                tangon = _closure1_slot2;
                report = 15;
                report = tangon[report];
                oscard = zuuluu.bind(entity)(report);
                report = oscard.copy;
                michal = _closure2_slot0;
                michal = michal.id;
                michal = report.bind(oscard)(michal);
                michal = 16;
                michal = tangon[michal];
                zuuluu = zuuluu.bind(entity)(michal);
                michal = zuuluu.presentIdCopied;
                michal = michal.bind(zuuluu)();
                return entity;
            };
            option['onPress'] = output;
            yankee = sizing.bind(tangon)(foxtra, option);
 367:
            option = new Array(4);
            option[0] = yankee;
            sizing = _closure1_slot7;
            ctrled = _closure1_slot0;
            echoed = _closure1_slot2;
            yankee = echoed[backup];
            yankee = ctrled.bind(tangon)(yankee);
            foxtra = yankee.ActionSheetRow;
            yankee = {};
            output = echoed[backup];
            output = ctrled.bind(tangon)(output);
            output = output.ActionSheetRow;
            update = output.Icon;
            output = {};
            vacuum = _closure1_slot1;
            source = 17;
            source = echoed[source];
            source = vacuum.bind(tangon)(source);
            output['source'] = source;
            output = sizing.bind(tangon)(update, output);
            yankee['icon'] = output;
            output = 9;
            update = echoed[output];
            update = ctrled.bind(tangon)(update);
            source = update.intl;
            update = source.string;
            echoed = echoed[output];
            echoed = ctrled.bind(tangon)(echoed);
            echoed = echoed.t;
            echoed = echoed.1r5E+v;
            echoed = update.bind(source)(echoed);
            yankee['label'] = echoed;
            echoed = function() { // Original name: onPress
                _fun00005: for(var _fun00006_ip = 0; ; ) switch(_fun00006_ip) {
 0:
                    zuuluu = _closure2_slot1;
                    entity = null;
                    if(!(entity != zuuluu)) { _fun00006_ip = 27; continue _fun00005 }
 13:
                    zuuluu = _closure2_slot1;
                    entity = zuuluu.pop;
                    entity = entity.bind(zuuluu)();
 27:
                    oscard = _closure1_slot1;
                    zuuluu = _closure1_slot2;
                    entity = 7;
                    report = zuuluu[entity];
                    entity = undefined;
                    oscard = oscard.bind(entity)(report);
                    report = oscard.openLazy;
                    golfie = _closure1_slot0;
                    tangon = 19;
                    tangon = zuuluu[tangon];
                    golfie = golfie.bind(entity)(tangon);
                    tangon = 18;
                    tangon = zuuluu[tangon];
                    zuuluu = zuuluu.paths;
                    tangon = golfie.bind(entity)(tangon, zuuluu);
                    zuuluu = {};
                    michal = _closure2_slot0;
                    michal = michal.id;
                    zuuluu['channelId'] = michal;
                    michal = 'CustomizeGroupDM';
                    michal = report.bind(oscard)(tangon, michal, zuuluu);
                    return entity;
                }
            };
            yankee['onPress'] = echoed;
            yankee = sizing.bind(tangon)(foxtra, yankee);
            option[1] = yankee;
            verify = null;
            if(!offset) { _fun00002_ip = 684; continue _fun00001 }
 537:
            foxtra = _closure1_slot7;
            source = _closure1_slot0;
            sizing = _closure1_slot2;
            offset = sizing[backup];
            offset = source.bind(tangon)(offset);
            yankee = offset.ActionSheetRow;
            offset = {};
            echoed = sizing[backup];
            echoed = source.bind(tangon)(echoed);
            echoed = echoed.ActionSheetRow;
            update = echoed.Icon;
            echoed = {};
            vacuum = _closure1_slot1;
            ctrled = 20;
            ctrled = sizing[ctrled];
            ctrled = vacuum.bind(tangon)(ctrled);
            echoed['source'] = ctrled;
            echoed = foxtra.bind(tangon)(update, echoed);
            offset['icon'] = echoed;
            echoed = sizing[output];
            echoed = source.bind(tangon)(echoed);
            update = echoed.intl;
            echoed = update.string;
            sizing = sizing[output];
            sizing = source.bind(tangon)(sizing);
            sizing = sizing.t;
            sizing = sizing.OQ9MKi;
            sizing = echoed.bind(update)(sizing);
            offset['label'] = sizing;
            kiloes = function() { // Original name: onPress
                michal = _closure2_slot2;
                entity = undefined;
                michal = michal.bind(entity)();
                report = _closure1_slot1;
                michal = _closure1_slot2;
                tangon = 21;
                tangon = michal[tangon];
                report = report.bind(entity)(tangon);
                tangon = report.pushLazy;
                golfie = _closure1_slot0;
                zuuluu = 19;
                zuuluu = michal[zuuluu];
                golfie = golfie.bind(entity)(zuuluu);
                zuuluu = 22;
                zuuluu = michal[zuuluu];
                michal = michal.paths;
                zuuluu = golfie.bind(entity)(zuuluu, michal);
                michal = {};
                oscard = _closure2_slot0;
                oscard = oscard.id;
                michal['channelId'] = oscard;
                michal = tangon.bind(report)(zuuluu, michal);
                return entity;
            };
            offset['onPress'] = kiloes;
            verify = foxtra.bind(tangon)(yankee, offset);
 684:
            option[2] = verify;
            yankee = _closure1_slot7;
            sizing = _closure1_slot0;
            foxtra = _closure1_slot2;
            verify = foxtra[backup];
            verify = sizing.bind(tangon)(verify);
            offset = verify.ActionSheetRow;
            verify = {};
            backup = foxtra[backup];
            backup = sizing.bind(tangon)(backup);
            backup = backup.ActionSheetRow;
            kiloes = backup.Icon;
            backup = {};
            echoed = _closure1_slot1;
            result = 23;
            result = foxtra[result];
            result = echoed.bind(tangon)(result);
            backup['source'] = result;
            backup = yankee.bind(tangon)(kiloes, backup);
            verify['icon'] = backup;
            backup = foxtra[output];
            backup = sizing.bind(tangon)(backup);
            kiloes = backup.intl;
            backup = kiloes.string;
            foxtra = foxtra[output];
            foxtra = sizing.bind(tangon)(foxtra);
            foxtra = foxtra.t;
            foxtra = foxtra.26C4oq;
            foxtra = backup.bind(kiloes)(foxtra);
            verify['label'] = foxtra;
            verify['onPress'] = romeon;
            verify = yankee.bind(tangon)(offset, verify);
            option[3] = verify;
            report['children'] = option;
            report = golfie.bind(tangon)(oscard, report);
            entity['children'] = report;
            entity = zuuluu.bind(tangon)(michal, entity);
            return entity;
        }
    };
    zuuluu['default'] = michal;
    return entity;
})();