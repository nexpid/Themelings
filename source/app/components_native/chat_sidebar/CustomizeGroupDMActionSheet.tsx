// app/components_native/chat_sidebar/CustomizeGroupDMActionSheet.tsx
export default (function(argFoo, argBar, argBaz, argCorge, _, argFred, argPlugh) {
    report = argBar;
    yankee = argBaz;
    zulu = argFred;
    oscar = argPlugh;
    var _closure1_slot0 = report;
    var _closure1_slot1 = yankee;
    var _closure1_slot2 = oscar;
    entity = global;
    options = entity.Object;
    golf = options.defineProperty;
    tango = {};
    entity = true;
    tango['value'] = entity;
    entity = '__esModule';
    entity = golf.bind(options)(zulu, entity, tango);
    entity = 0;
    tango = oscar[entity];
    entity = undefined;
    tango = yankee.bind(entity)(tango);
    var _closure1_slot3 = tango;
    offset = 1;
    golf = oscar[offset];
    tango = argCorge;
    tango = tango.bind(entity)(golf);
    var _closure1_slot4 = tango;
    tango = 2;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.View;
    var _closure1_slot5 = tango;
    tango = 3;
    tango = oscar[tango];
    tango = yankee.bind(entity)(tango);
    var _closure1_slot6 = tango;
    tango = 4;
    golf = oscar[tango];
    golf = report.bind(entity)(golf);
    golf = golf.jsx;
    var _closure1_slot7 = golf;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.jsxs;
    var _closure1_slot8 = tango;
    tango = 5;
    tango = oscar[tango];
    options = report.bind(entity)(tango);
    golf = options.createStyles;
    tango = {};
    verify = {};
    verify['flex'] = offset;
    offset = 6;
    offset = oscar[offset];
    offset = yankee.bind(entity)(offset);
    offset = offset.colors;
    offset = offset.BACKGROUND_SECONDARY;
    verify['backgroundColor'] = offset;
    tango['container'] = verify;
    verify = {'marginTop': 24, 'alignSelf': 'center'};
    tango['iconUploader'] = verify;
    verify = {'marginHorizontal': 8, 'paddingHorizontal': 8};
    tango['textInput'] = verify;
    tango = golf.bind(options)(tango);
    var _closure1_slot9 = tango;
    tango = 18;
    tango = oscar[tango];
    oscar = report.bind(entity)(tango);
    report = oscar.fileFinishedImporting;
    tango = 'components_native/chat_sidebar/CustomizeGroupDMActionSheet.tsx';
    tango = report.bind(oscar)(tango);
    mike = function(argFoo) { // Original name: _default
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            entity = argFoo;
            options = entity.channelId;
            var _closure2_slot0 = options;
            report = undefined;
            var _closure2_slot2 = report;
            var _closure2_slot3 = report;
            var _closure2_slot4 = report;
            entity = _closure1_slot9;
            offset = entity.bind(report)();
            mike = _closure1_slot0;
            zulu = _closure1_slot2;
            entity = 7;
            entity = zulu[entity];
            oscar = mike.bind(report)(entity);
            tango = oscar.useStateFromStores;
            entity = _closure1_slot6;
            mike = new Array(1);
            mike[0] = entity;
            entity = function() {
                zulu = _closure1_slot6;
                mike = zulu.getChannel;
                entity = _closure2_slot0;
                entity = mike.bind(zulu)(entity);
                return entity;
            };
            result = tango.bind(oscar)(mike, entity);
            var _closure2_slot1 = result;
            mike = _closure1_slot1;
            entity = 8;
            entity = zulu[entity];
            entity = mike.bind(report)(entity);
            zulu = entity.bind(report)(result);
            entity = null;
            tango = entity != zulu;
            mike = '';
            if(!tango) { _fun00002_ip = 130; continue _fun00001 }
 127:
            mike = zulu;
 130:
            _closure2_slot2 = mike;
            oscar = _closure1_slot4;
            zulu = oscar.useState;
            verify = zulu.bind(oscar)(mike);
            tango = _closure1_slot3;
            zulu = 2;
            tango = tango.bind(report)(verify, zulu);
            zulu = 0;
            foxtrot = tango[zulu];
            _closure2_slot3 = foxtrot;
            zulu = 1;
            romeo = tango[zulu];
            tango = oscar.useCallback;
            zulu = new Array(4);
            zulu[0] = result;
            zulu[1] = options;
            zulu[2] = mike;
            zulu[3] = foxtrot;
            mike = function() {
                _fun00003: for(var _fun00004_ip = 0; ; ) switch(_fun00004_ip) {
 0:
                    zulu = _closure2_slot1;
                    mike = null;
                    mike = mike != zulu;
                    if(!mike) { _fun00004_ip = 28; continue _fun00003 }
 16:
                    tango = _closure2_slot2;
                    zulu = _closure2_slot3;
                    mike = tango !== zulu;
 28:
                    if(!mike) { _fun00004_ip = 76; continue _fun00003 }
 31:
                    tango = _closure1_slot1;
                    zulu = _closure1_slot2;
                    mike = 9;
                    zulu = zulu[mike];
                    mike = undefined;
                    tango = tango.bind(mike)(zulu);
                    zulu = tango.setName;
                    mike = _closure2_slot0;
                    entity = _closure2_slot3;
                    entity = zulu.bind(tango)(mike, entity);
 76:
                    entity = undefined;
                    return entity;
                }
            };
            oscar = tango.bind(oscar)(mike, zulu);
            _closure2_slot4 = oscar;
            mike = entity == result;
            entity = null;
            if(mike) { _fun00002_ip = 615; continue _fun00001 }
 232:
            tango = _closure1_slot8;
            yankee = _closure1_slot0;
            backup = _closure1_slot2;
            mike = 10;
            mike = backup[mike];
            mike = yankee.bind(report)(mike);
            zulu = mike.BottomSheet;
            mike = {};
            mike['onDismiss'] = oscar;
            verify = _closure1_slot7;
            oscar = 11;
            oscar = backup[oscar];
            oscar = yankee.bind(report)(oscar);
            options = oscar.BottomSheetTitleHeader;
            oscar = {};
            sizing = 12;
            kilo = backup[sizing];
            kilo = yankee.bind(report)(kilo);
            update = kilo.intl;
            echo = update.string;
            kilo = backup[sizing];
            kilo = yankee.bind(report)(kilo);
            kilo = kilo.t;
            kilo = kilo.1r5E+v;
            kilo = echo.bind(update)(kilo);
            oscar['title'] = kilo;
            options = verify.bind(report)(options, oscar);
            oscar = new Array(4);
            oscar[0] = options;
            kilo = _closure1_slot1;
            options = 13;
            options = backup[options];
            kilo = kilo.bind(report)(options);
            options = {};
            echo = offset.iconUploader;
            options['style'] = echo;
            echo = function(argFoo) { // Original name: onUpload
                zulu = _closure2_slot4;
                entity = undefined;
                zulu = zulu.bind(entity)();
                tango = _closure1_slot1;
                report = _closure1_slot2;
                zulu = 14;
                zulu = report[zulu];
                oscar = tango.bind(entity)(zulu);
                zulu = oscar.hideActionSheet;
                zulu = zulu.bind(oscar)();
                zulu = 9;
                zulu = report[zulu];
                report = tango.bind(entity)(zulu);
                tango = report.setIcon;
                zulu = _closure2_slot0;
                mike = argFoo;
                mike = tango.bind(report)(zulu, mike);
                return entity;
            };
            options['onUpload'] = echo;
            echo = function() { // Original name: onChangeIconPress
                zulu = _closure1_slot1;
                mike = _closure1_slot2;
                entity = 14;
                mike = mike[entity];
                entity = undefined;
                zulu = zulu.bind(entity)(mike);
                mike = zulu.hideActionSheet;
                mike = mike.bind(zulu)();
                return entity;
            };
            options['onChangeIconPress'] = echo;
            echo = result.icon;
            options['icon'] = echo;
            output = function(argFoo) { // Original name: makeURL
                zulu = _closure1_slot1;
                mike = _closure1_slot2;
                entity = 15;
                mike = mike[entity];
                entity = undefined;
                zulu = zulu.bind(entity)(mike);
                mike = zulu.getChannelIconURL;
                entity = {};
                report = _closure2_slot1;
                tango = report.id;
                entity['id'] = tango;
                tango = argFoo;
                entity['icon'] = tango;
                tango = report.getApplicationId;
                tango = tango.bind(report)();
                entity['applicationId'] = tango;
                tango = 64;
                entity['size'] = tango;
                entity = mike.bind(zulu)(entity);
                return entity;
            };
            options['makeURL'] = output;
            output = result.isManaged;
            output = output.bind(result)();
            options['disabled'] = output;
            options = verify.bind(report)(kilo, options);
            oscar[1] = options;
            options = 16;
            options = backup[options];
            options = yankee.bind(report)(options);
            kilo = options.FormTitle;
            options = {};
            output = backup[sizing];
            output = yankee.bind(report)(output);
            result = output.intl;
            output = result.string;
            sizing = backup[sizing];
            sizing = yankee.bind(report)(sizing);
            sizing = sizing.t;
            sizing = sizing.GEGW3N;
            sizing = output.bind(result)(sizing);
            options['title'] = sizing;
            options = verify.bind(report)(kilo, options);
            oscar[2] = options;
            options = _closure1_slot5;
            golf = {};
            offset = offset.textInput;
            golf['style'] = offset;
            offset = 17;
            offset = backup[offset];
            offset = yankee.bind(report)(offset);
            yankee = offset.TextInput;
            offset = {};
            offset['value'] = foxtrot;
            offset['onChange'] = romeo;
            romeo = true;
            offset['isClearable'] = romeo;
            offset = verify.bind(report)(yankee, offset);
            golf['children'] = offset;
            golf = verify.bind(report)(options, golf);
            oscar[3] = golf;
            mike['children'] = oscar;
            entity = tango.bind(report)(zulu, mike);
 615:
            return entity;
        }
    };
    zulu['default'] = mike;
    return entity;
})();