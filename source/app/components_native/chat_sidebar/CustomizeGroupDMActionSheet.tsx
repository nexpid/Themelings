// app/components_native/chat_sidebar/CustomizeGroupDMActionSheet.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    report = argBar;
    yankee = argBaz;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    var _closure1_slot1 = yankee;
    var _closure1_slot2 = oscard;
    entity = global;
    option = entity.Object;
    golfie = option.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(option)(zuuluu, entity, tangon);
    entity = 0;
    tangon = oscard[entity];
    entity = undefined;
    tangon = yankee.bind(entity)(tangon);
    var _closure1_slot3 = tangon;
    offset = 1;
    golfie = oscard[offset];
    tangon = argCor;
    tangon = tangon.bind(entity)(golfie);
    var _closure1_slot4 = tangon;
    tangon = 2;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.View;
    var _closure1_slot5 = tangon;
    tangon = 3;
    tangon = oscard[tangon];
    tangon = yankee.bind(entity)(tangon);
    var _closure1_slot6 = tangon;
    tangon = 4;
    golfie = oscard[tangon];
    golfie = report.bind(entity)(golfie);
    golfie = golfie.jsx;
    var _closure1_slot7 = golfie;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.jsxs;
    var _closure1_slot8 = tangon;
    tangon = 5;
    tangon = oscard[tangon];
    option = report.bind(entity)(tangon);
    golfie = option.createStyles;
    tangon = {};
    verify = {};
    verify['flex'] = offset;
    offset = 6;
    offset = oscard[offset];
    offset = yankee.bind(entity)(offset);
    offset = offset.colors;
    offset = offset.BACKGROUND_SECONDARY;
    verify['backgroundColor'] = offset;
    tangon['container'] = verify;
    verify = {'marginTop': 24, 'alignSelf': 'center'};
    tangon['iconUploader'] = verify;
    verify = {'marginHorizontal': 8, 'paddingHorizontal': 8};
    tangon['textInput'] = verify;
    tangon = golfie.bind(option)(tangon);
    var _closure1_slot9 = tangon;
    tangon = 18;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'components_native/chat_sidebar/CustomizeGroupDMActionSheet.tsx';
    tangon = report.bind(oscard)(tangon);
    michal = function(argFoo) { // Original name: _default
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            entity = argFoo;
            option = entity.channelId;
            var _closure2_slot0 = option;
            report = undefined;
            var _closure2_slot2 = report;
            var _closure2_slot3 = report;
            var _closure2_slot4 = report;
            entity = _closure1_slot9;
            offset = entity.bind(report)();
            michal = _closure1_slot0;
            zuuluu = _closure1_slot2;
            entity = 7;
            entity = zuuluu[entity];
            oscard = michal.bind(report)(entity);
            tangon = oscard.useStateFromStores;
            entity = _closure1_slot6;
            michal = new Array(1);
            michal[0] = entity;
            entity = function() {
                zuuluu = _closure1_slot6;
                michal = zuuluu.getChannel;
                entity = _closure2_slot0;
                entity = michal.bind(zuuluu)(entity);
                return entity;
            };
            result = tangon.bind(oscard)(michal, entity);
            var _closure2_slot1 = result;
            michal = _closure1_slot1;
            entity = 8;
            entity = zuuluu[entity];
            entity = michal.bind(report)(entity);
            zuuluu = entity.bind(report)(result);
            entity = null;
            tangon = entity != zuuluu;
            michal = '';
            if(!tangon) { _fun00002_ip = 130; continue _fun00001 }
 127:
            michal = zuuluu;
 130:
            _closure2_slot2 = michal;
            oscard = _closure1_slot4;
            zuuluu = oscard.useState;
            verify = zuuluu.bind(oscard)(michal);
            tangon = _closure1_slot3;
            zuuluu = 2;
            tangon = tangon.bind(report)(verify, zuuluu);
            zuuluu = 0;
            foxtra = tangon[zuuluu];
            _closure2_slot3 = foxtra;
            zuuluu = 1;
            romeon = tangon[zuuluu];
            tangon = oscard.useCallback;
            zuuluu = new Array(4);
            zuuluu[0] = result;
            zuuluu[1] = option;
            zuuluu[2] = michal;
            zuuluu[3] = foxtra;
            michal = function() {
                _fun00003: for(var _fun00004_ip = 0; ; ) switch(_fun00004_ip) {
 0:
                    zuuluu = _closure2_slot1;
                    michal = null;
                    michal = michal != zuuluu;
                    if(!michal) { _fun00004_ip = 28; continue _fun00003 }
 16:
                    tangon = _closure2_slot2;
                    zuuluu = _closure2_slot3;
                    michal = tangon !== zuuluu;
 28:
                    if(!michal) { _fun00004_ip = 76; continue _fun00003 }
 31:
                    tangon = _closure1_slot1;
                    zuuluu = _closure1_slot2;
                    michal = 9;
                    zuuluu = zuuluu[michal];
                    michal = undefined;
                    tangon = tangon.bind(michal)(zuuluu);
                    zuuluu = tangon.setName;
                    michal = _closure2_slot0;
                    entity = _closure2_slot3;
                    entity = zuuluu.bind(tangon)(michal, entity);
 76:
                    entity = undefined;
                    return entity;
                }
            };
            oscard = tangon.bind(oscard)(michal, zuuluu);
            _closure2_slot4 = oscard;
            michal = entity == result;
            entity = null;
            if(michal) { _fun00002_ip = 617; continue _fun00001 }
 232:
            tangon = _closure1_slot8;
            yankee = _closure1_slot0;
            backup = _closure1_slot2;
            michal = 10;
            michal = backup[michal];
            michal = yankee.bind(report)(michal);
            zuuluu = michal.BottomSheet;
            michal = {};
            michal['onDismiss'] = oscard;
            verify = _closure1_slot7;
            oscard = 11;
            oscard = backup[oscard];
            oscard = yankee.bind(report)(oscard);
            option = oscard.BottomSheetTitleHeader;
            oscard = {};
            sizing = 12;
            kiloes = backup[sizing];
            kiloes = yankee.bind(report)(kiloes);
            update = kiloes.intl;
            echoed = update.string;
            kiloes = backup[sizing];
            kiloes = yankee.bind(report)(kiloes);
            kiloes = kiloes.t;
            kiloes = kiloes.1r5E+v;
            kiloes = echoed.bind(update)(kiloes);
            oscard['title'] = kiloes;
            option = verify.bind(report)(option, oscard);
            oscard = new Array(4);
            oscard[0] = option;
            kiloes = _closure1_slot1;
            option = 13;
            option = backup[option];
            kiloes = kiloes.bind(report)(option);
            option = {};
            echoed = offset.iconUploader;
            option['style'] = echoed;
            echoed = function(argFoo) { // Original name: onUpload
                zuuluu = _closure2_slot4;
                entity = undefined;
                zuuluu = zuuluu.bind(entity)();
                tangon = _closure1_slot1;
                report = _closure1_slot2;
                zuuluu = 14;
                zuuluu = report[zuuluu];
                oscard = tangon.bind(entity)(zuuluu);
                zuuluu = oscard.hideActionSheet;
                zuuluu = zuuluu.bind(oscard)();
                zuuluu = 9;
                zuuluu = report[zuuluu];
                report = tangon.bind(entity)(zuuluu);
                tangon = report.setIcon;
                zuuluu = _closure2_slot0;
                michal = argFoo;
                michal = tangon.bind(report)(zuuluu, michal);
                return entity;
            };
            option['onUpload'] = echoed;
            echoed = function() { // Original name: onChangeIconPress
                zuuluu = _closure1_slot1;
                michal = _closure1_slot2;
                entity = 14;
                michal = michal[entity];
                entity = undefined;
                zuuluu = zuuluu.bind(entity)(michal);
                michal = zuuluu.hideActionSheet;
                michal = michal.bind(zuuluu)();
                return entity;
            };
            option['onChangeIconPress'] = echoed;
            echoed = result.icon;
            option['icon'] = echoed;
            output = function(argFoo) { // Original name: makeURL
                zuuluu = _closure1_slot1;
                michal = _closure1_slot2;
                entity = 15;
                michal = michal[entity];
                entity = undefined;
                zuuluu = zuuluu.bind(entity)(michal);
                michal = zuuluu.getChannelIconURL;
                entity = {};
                report = _closure2_slot1;
                tangon = report.id;
                entity['id'] = tangon;
                tangon = argFoo;
                entity['icon'] = tangon;
                tangon = report.getApplicationId;
                tangon = tangon.bind(report)();
                entity['applicationId'] = tangon;
                tangon = 64;
                entity['size'] = tangon;
                entity = michal.bind(zuuluu)(entity);
                return entity;
            };
            option['makeURL'] = output;
            output = result.isManaged;
            output = output.bind(result)();
            option['disabled'] = output;
            option = verify.bind(report)(kiloes, option);
            oscard[1] = option;
            option = 16;
            option = backup[option];
            option = yankee.bind(report)(option);
            kiloes = option.FormTitle;
            option = {};
            output = backup[sizing];
            output = yankee.bind(report)(output);
            result = output.intl;
            output = result.string;
            sizing = backup[sizing];
            sizing = yankee.bind(report)(sizing);
            sizing = sizing.t;
            sizing = sizing.GEGW3N;
            sizing = output.bind(result)(sizing);
            option['title'] = sizing;
            option = verify.bind(report)(kiloes, option);
            oscard[2] = option;
            option = _closure1_slot5;
            golfie = {};
            offset = offset.textInput;
            golfie['style'] = offset;
            offset = 17;
            offset = backup[offset];
            offset = yankee.bind(report)(offset);
            yankee = offset.TextInput;
            offset = {};
            offset['value'] = foxtra;
            offset['onChange'] = romeon;
            romeon = true;
            offset['isClearable'] = romeon;
            offset = verify.bind(report)(yankee, offset);
            golfie['children'] = offset;
            golfie = verify.bind(report)(option, golfie);
            oscard[3] = golfie;
            michal['children'] = oscard;
            entity = tangon.bind(report)(zuuluu, michal);
 617:
            return entity;
        }
    };
    zuuluu['default'] = michal;
    return entity;
})();