// app/design/components/ButtonGroup/native/ButtonGroup.native.tsx
export default (function(argFoo, argBar, _, argCorge, __, argFred, argPlugh) {
    report = argBar;
    zulu = argFred;
    oscar = argPlugh;
    var _closure1_slot0 = report;
    var _closure1_slot1 = oscar;
    entity = global;
    options = entity.Object;
    golf = options.defineProperty;
    tango = {};
    entity = true;
    tango['value'] = entity;
    entity = '__esModule';
    entity = golf.bind(options)(zulu, entity, tango);
    entity = 0;
    golf = oscar[entity];
    tango = argCorge;
    entity = undefined;
    tango = tango.bind(entity)(golf);
    tango = 1;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.jsx;
    var _closure1_slot2 = tango;
    tango = 2;
    tango = oscar[tango];
    options = report.bind(entity)(tango);
    golf = options.createStyles;
    tango = {};
    verify = {};
    offset = 16;
    verify['paddingVertical'] = offset;
    tango['container'] = verify;
    tango = golf.bind(options)(tango);
    var _closure1_slot3 = tango;
    tango = 4;
    tango = oscar[tango];
    oscar = report.bind(entity)(tango);
    report = oscar.fileFinishedImporting;
    tango = 'design/components/ButtonGroup/native/ButtonGroup.native.tsx';
    tango = report.bind(oscar)(tango);
    mike = function(argFoo) { // Original name: ButtonGroup
        zulu = argFoo;
        oscar = zulu.children;
        report = zulu.style;
        entity = null;
        mike = Object.create(entity);
        entity = 0;
        mike['children'] = entity;
        mike['style'] = entity;
        romeo = {};
        yankee = zulu;
        offset = mike;
        yankee = copyDataProperties(romeo, yankee, offset);
        mike = _closure1_slot3;
        tango = undefined;
        golf = mike.bind(tango)();
        zulu = _closure1_slot2;
        mike = _closure1_slot0;
        verify = _closure1_slot1;
        entity = 3;
        entity = verify[entity];
        entity = mike.bind(tango)(entity);
        mike = entity.Stack;
        entity = {};
        romeo = entity;
        options = copyDataProperties(romeo, yankee);
        verify = 12;
        options = 'spacing';
        entity[options] = verify;
        options = golf.container;
        golf = new Array(2);
        golf[0] = options;
        golf[1] = report;
        report = 'style';
        entity[report] = golf;
        report = 'children';
        entity[report] = oscar;
        entity = zulu.bind(tango)(mike, entity);
        return entity;
    };
    zulu['ButtonGroup'] = mike;
    return entity;
})();