// app/design/components/ButtonGroup/native/ButtonGroup.native.tsx
export default (function(argFoo, argBar, _, argCor, __, argFre, argPlu) {
    report = argBar;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    var _closure1_slot1 = oscard;
    entity = global;
    option = entity.Object;
    golfie = option.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(option)(zuuluu, entity, tangon);
    entity = 0;
    golfie = oscard[entity];
    tangon = argCor;
    entity = undefined;
    tangon = tangon.bind(entity)(golfie);
    tangon = 1;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.jsx;
    var _closure1_slot2 = tangon;
    tangon = 2;
    tangon = oscard[tangon];
    option = report.bind(entity)(tangon);
    golfie = option.createStyles;
    tangon = {};
    verify = {};
    offset = 16;
    verify['paddingVertical'] = offset;
    tangon['container'] = verify;
    tangon = golfie.bind(option)(tangon);
    var _closure1_slot3 = tangon;
    tangon = 4;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'design/components/ButtonGroup/native/ButtonGroup.native.tsx';
    tangon = report.bind(oscard)(tangon);
    michal = function(argFoo) { // Original name: ButtonGroup
        zuuluu = argFoo;
        oscard = zuuluu.children;
        report = zuuluu.style;
        entity = null;
        michal = Object.create(entity);
        entity = 0;
        michal['children'] = entity;
        michal['style'] = entity;
        romeon = {};
        yankee = zuuluu;
        offset = michal;
        yankee = copyDataProperties(romeon, yankee, offset);
        michal = _closure1_slot3;
        tangon = undefined;
        golfie = michal.bind(tangon)();
        zuuluu = _closure1_slot2;
        michal = _closure1_slot0;
        verify = _closure1_slot1;
        entity = 3;
        entity = verify[entity];
        entity = michal.bind(tangon)(entity);
        michal = entity.Stack;
        entity = {};
        romeon = entity;
        option = copyDataProperties(romeon, yankee);
        verify = 12;
        option = 'spacing';
        entity[option] = verify;
        option = golfie.container;
        golfie = new Array(2);
        golfie[0] = option;
        golfie[1] = report;
        report = 'style';
        entity[report] = golfie;
        report = 'children';
        entity[report] = oscard;
        entity = zuuluu.bind(tangon)(michal, entity);
        return entity;
    };
    zuuluu['ButtonGroup'] = michal;
    return entity;
})();