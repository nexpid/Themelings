// app/design/components/Modal/native/ModalContent.native.tsx
export default (function(argFoo, argBar, _, argCorge, __, argFred, argPlugh) {
    report = argBar;
    zulu = argFred;
    oscar = argPlugh;
    entity = global;
    options = entity.Object;
    golf = options.defineProperty;
    tango = {};
    entity = true;
    tango['value'] = entity;
    entity = '__esModule';
    entity = golf.bind(options)(zulu, entity, tango);
    entity = 0;
    golf = oscar[entity];
    tango = argCorge;
    entity = undefined;
    golf = tango.bind(entity)(golf);
    yankee = 1;
    tango = oscar[yankee];
    tango = report.bind(entity)(tango);
    tango = tango.ScrollView;
    var _closure1_slot0 = tango;
    tango = 2;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.jsx;
    var _closure1_slot1 = tango;
    tango = 3;
    tango = oscar[tango];
    verify = report.bind(entity)(tango);
    options = verify.createStyles;
    tango = {};
    offset = {};
    offset['flex'] = yankee;
    tango['scrollContainer'] = offset;
    offset = {'flexDirection': 'column', 'paddingTop': 24, 'paddingHorizontal': 16, 'alignItems': 'center', 'flexGrow': 1};
    tango['contentContainer'] = offset;
    tango = options.bind(verify)(tango);
    var _closure1_slot2 = tango;
    tango = golf.forwardRef;
    mike = function(argFoo, argBar) {
        entity = argFoo;
        report = entity.children;
        mike = _closure1_slot2;
        tango = undefined;
        oscar = mike.bind(tango)();
        zulu = _closure1_slot1;
        mike = _closure1_slot0;
        entity = {};
        golf = oscar.scrollContainer;
        entity['style'] = golf;
        oscar = oscar.contentContainer;
        entity['contentContainerStyle'] = oscar;
        oscar = false;
        entity['showsVerticalScrollIndicator'] = oscar;
        oscar = 'handled';
        entity['keyboardShouldPersistTaps'] = oscar;
        oscar = argBar;
        entity['ref'] = oscar;
        entity['children'] = report;
        entity = zulu.bind(tango)(mike, entity);
        return entity;
    };
    mike = tango.bind(golf)(mike);
    tango = 4;
    tango = oscar[tango];
    oscar = report.bind(entity)(tango);
    report = oscar.fileFinishedImporting;
    tango = 'design/components/Modal/native/ModalContent.native.tsx';
    tango = report.bind(oscar)(tango);
    zulu['ModalContent'] = mike;
    return entity;
})();