// app/design/components/Modal/native/ModalFloatingAction.native.tsx
export default (function(argFoo, argBar, argBaz, argCorge, _, argFred, argPlugh) {
    report = argBar;
    zulu = argFred;
    oscar = argPlugh;
    var _closure1_slot0 = report;
    entity = argBaz;
    var _closure1_slot1 = entity;
    var _closure1_slot2 = oscar;
    entity = global;
    options = entity.Object;
    golf = options.defineProperty;
    tango = {};
    entity = true;
    tango['value'] = entity;
    entity = '__esModule';
    entity = golf.bind(options)(zulu, entity, tango);
    entity = 0;
    golf = oscar[entity];
    tango = argCorge;
    entity = undefined;
    tango = tango.bind(entity)(golf);
    var _closure1_slot3 = tango;
    tango = 1;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    golf = tango.StyleSheet;
    var _closure1_slot4 = golf;
    tango = tango.View;
    var _closure1_slot5 = tango;
    tango = 2;
    golf = oscar[tango];
    golf = report.bind(entity)(golf);
    golf = golf.jsx;
    var _closure1_slot6 = golf;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.jsxs;
    var _closure1_slot7 = tango;
    tango = 3;
    tango = oscar[tango];
    options = report.bind(entity)(tango);
    golf = options.createStyles;
    tango = {};
    verify = {'position': 'absolute', 'bottom': 0, 'width': '100%', 'paddingHorizontal': 16};
    tango['floating'] = verify;
    verify = {};
    offset = 96;
    verify['height'] = offset;
    tango['spacer'] = verify;
    tango = golf.bind(options)(tango);
    var _closure1_slot8 = tango;
    tango = {};
    golf = 'function ModalFloatingActionNativeTsx1(){const{interpolate,sharedValue,floatingBackgroundColor,useReducedMotion}=this.__closure;return{opacity:interpolate(sharedValue.get(),[0,1],[0,1]),borderBottomColor:floatingBackgroundColor,borderBottomWidth:16,transform:[{translateY:interpolate(sharedValue.get(),[useReducedMotion?0.999999:0,1],[32,0])}]};}';
    tango['code'] = golf;
    var _closure1_slot9 = tango;
    tango = 12;
    tango = oscar[tango];
    oscar = report.bind(entity)(tango);
    report = oscar.fileFinishedImporting;
    tango = 'design/components/Modal/native/ModalFloatingAction.native.tsx';
    tango = report.bind(oscar)(tango);
    tango = function(argFoo) { // Original name: ModalFloatingAction
        _fun99396: for(var _fun99396_ip = 0; ; ) switch(_fun99396_ip) {
 0:
            tango = argFoo;
            golf = tango.isVisible;
            var _closure2_slot0 = golf;
            romeo = tango.floatingBackgroundColor;
            var _closure2_slot1 = romeo;
            entity = null;
            mike = Object.create(entity);
            backup = 0;
            mike['isVisible'] = backup;
            mike['floatingBackgroundColor'] = backup;
            control = {};
            source = tango;
            update = mike;
            verify = copyDataProperties(control, source, update);
            tango = undefined;
            var _closure2_slot2 = tango;
            var _closure2_slot3 = tango;
            entity = _closure1_slot8;
            options = entity.bind(tango)();
            mike = _closure1_slot0;
            entity = _closure1_slot2;
            report = 4;
            entity = entity[report];
            offset = mike.bind(tango)(entity);
            mike = offset.useSharedValue;
            entity = 0;
            if(!golf) { _fun99396_ip = 108; continue _fun99396 }
 105:
            entity = 1;
 108:
            output = mike.bind(offset)(entity);
            _closure2_slot2 = output;
            result = _closure1_slot3;
            offset = result.useContext;
            echo = _closure1_slot0;
            entity = _closure1_slot2;
            mike = 5;
            mike = entity[mike];
            mike = echo.bind(tango)(mike);
            mike = mike.AccessibilityPreferencesContext;
            mike = offset.bind(result)(mike);
            mike = mike.reducedMotion;
            sizing = mike.enabled;
            _closure2_slot3 = sizing;
            mike = _closure1_slot1;
            offset = 6;
            offset = entity[offset];
            offset = mike.bind(tango)(offset);
            offset = offset.bind(tango)();
            kilo = result.useEffect;
            foxtrot = new Array(2);
            foxtrot[0] = golf;
            foxtrot[1] = output;
            yankee = function() {
                _fun99397: for(var _fun99397_ip = 0; ; ) switch(_fun99397_ip) {
 0:
                    tango = _closure2_slot2;
                    zulu = tango.set;
                    golf = _closure1_slot0;
                    oscar = _closure1_slot2;
                    entity = 7;
                    oscar = oscar[entity];
                    entity = undefined;
                    options = golf.bind(entity)(oscar);
                    golf = options.withSpring;
                    report = _closure2_slot0;
                    oscar = 0;
                    if(!report) { _fun99397_ip = 54; continue _fun99397 }
 51:
                    oscar = 1;
 54:
                    report = _closure1_slot0;
                    verify = _closure1_slot2;
                    mike = 8;
                    mike = verify[mike];
                    mike = report.bind(entity)(mike);
                    report = mike.SUBTLE_SPRING;
                    mike = 'animate-always';
                    mike = golf.bind(options)(oscar, report, mike);
                    mike = zulu.bind(tango)(mike);
                    return entity;
                }
            };
            yankee = kilo.bind(result)(yankee, foxtrot);
            yankee = entity[report];
            foxtrot = echo.bind(tango)(yankee);
            yankee = foxtrot.useAnimatedStyle;
            zulu = function() { // Original name: y
                _fun99398: for(var _fun99398_ip = 0; ; ) switch(_fun99398_ip) {
 0:
                    entity = {};
                    oscar = _closure1_slot0;
                    golf = _closure1_slot2;
                    tango = 4;
                    mike = golf[tango];
                    report = undefined;
                    yankee = oscar.bind(report)(mike);
                    offset = yankee.interpolate;
                    options = _closure2_slot2;
                    zulu = options.get;
                    verify = zulu.bind(options)();
                    options = [0, 1];
                    zulu = [0, 1];
                    zulu = offset.bind(yankee)(verify, options, zulu);
                    entity['opacity'] = zulu;
                    zulu = _closure2_slot1;
                    entity['borderBottomColor'] = zulu;
                    zulu = 16;
                    entity['borderBottomWidth'] = zulu;
                    zulu = {};
                    tango = golf[tango];
                    golf = oscar.bind(report)(tango);
                    oscar = golf.interpolate;
                    report = _closure2_slot2;
                    tango = report.get;
                    report = tango.bind(report)();
                    tango = _closure2_slot3;
                    mike = 0;
                    if(!tango) { _fun99398_ip = 146; continue _fun99398 }
 136:
                    mike = 0.999999;
 146:
                    tango = new Array(2);
                    tango[0] = mike;
                    mike = 1;
                    tango[1] = mike;
                    mike = [32, 0];
                    mike = oscar.bind(golf)(report, tango, mike);
                    zulu['translateY'] = mike;
                    mike = new Array(1);
                    mike[0] = zulu;
                    entity['transform'] = mike;
                    return entity;
                }
            };
            kilo = {};
            result = entity[report];
            result = echo.bind(tango)(result);
            result = result.interpolate;
            kilo['interpolate'] = result;
            kilo['sharedValue'] = output;
            kilo['floatingBackgroundColor'] = romeo;
            kilo['useReducedMotion'] = sizing;
            zulu['__closure'] = kilo;
            kilo = 1679390676673.0;
            zulu['__workletHash'] = kilo;
            kilo = _closure1_slot9;
            zulu['__initData'] = kilo;
            yankee = yankee.bind(foxtrot)(zulu);
            zulu = _closure1_slot7;
            entity = entity[report];
            entity = mike.bind(tango)(entity);
            mike = entity.View;
            entity = {};
            report = new Array(3);
            report[0] = yankee;
            options = options.floating;
            report[1] = options;
            options = {};
            offset = offset.bottom;
            options['paddingBottom'] = offset;
            report[2] = options;
            entity['style'] = report;
            report = 'none';
            if(!golf) { _fun99396_ip = 388; continue _fun99396 }
 384:
            report = 'auto';
 388:
            entity['pointerEvents'] = report;
            options = _closure1_slot6;
            foxtrot = _closure1_slot1;
            offset = _closure1_slot2;
            report = 9;
            report = offset[report];
            golf = foxtrot.bind(tango)(report);
            report = {};
            yankee = 10;
            yankee = offset[yankee];
            yankee = foxtrot.bind(tango)(yankee);
            foxtrot = yankee.bind(tango)(romeo);
            yankee = foxtrot.alpha;
            foxtrot = yankee.bind(foxtrot)(backup);
            yankee = foxtrot.hex;
            foxtrot = yankee.bind(foxtrot)();
            yankee = new Array(2);
            yankee[0] = foxtrot;
            yankee[1] = romeo;
            report['colors'] = yankee;
            yankee = [0, 0.5];
            report['locations'] = yankee;
            yankee = _closure1_slot4;
            yankee = yankee.absoluteFill;
            report['style'] = yankee;
            golf = options.bind(tango)(golf, report);
            report = new Array(2);
            report[0] = golf;
            golf = _closure1_slot0;
            oscar = 11;
            oscar = offset[oscar];
            oscar = golf.bind(tango)(oscar);
            golf = oscar.ModalActionButton;
            oscar = {};
            control = oscar;
            source = verify;
            verify = copyDataProperties(control, source);
            offset = 'primary';
            verify = 'variant';
            oscar[verify] = offset;
            oscar = options.bind(tango)(golf, oscar);
            report[1] = oscar;
            entity['children'] = report;
            entity = zulu.bind(tango)(mike, entity);
            return entity;
        }
    };
    zulu['ModalFloatingAction'] = tango;
    mike = function() { // Original name: ModalFloatingActionSpacer
        mike = _closure1_slot8;
        tango = undefined;
        report = mike.bind(tango)();
        zulu = _closure1_slot6;
        mike = _closure1_slot5;
        entity = {};
        report = report.spacer;
        entity['style'] = report;
        entity = zulu.bind(tango)(mike, entity);
        return entity;
    };
    zulu['ModalFloatingActionSpacer'] = mike;
    return entity;
})();