// app/design/components/TableRow/native/TableCheckboxRow.native.tsx
export default (function(global, require, metroImportDefault, metroImportAll, moduleObject, exports, dependencyMap) {
    var5 = require;
    var3 = exports;
    var6 = dependencyMap;
    var _closure1_slot0 = var5;
    var _closure1_slot1 = var6;
    var1 = global;
    var8 = var1.Object;
    var7 = var8.defineProperty;
    var4 = {};
    var1 = true;
    var4['value'] = var1;
    var1 = '__esModule';
    var1 = var7.bind(var8)(var3, var1, var4);
    var1 = 0;
    var7 = var6[var1];
    var4 = metroImportAll;
    var1 = undefined;
    var4 = var4.bind(var1)(var7);
    var _closure1_slot2 = var4;
    var4 = 1;
    var4 = var6[var4];
    var4 = var5.bind(var1)(var4);
    var4 = var4.Platform;
    var4 = 2;
    var4 = var6[var4];
    var4 = var5.bind(var1)(var4);
    var4 = var4.jsx;
    var _closure1_slot3 = var4;
    var4 = 7;
    var4 = var6[var4];
    var6 = var5.bind(var1)(var4);
    var5 = var6.fileFinishedImporting;
    var4 = 'design/components/TableRow/native/TableCheckboxRow.native.tsx';
    var4 = var5.bind(var6)(var4);
    var2 = function TableCheckboxRow(arg1) {
        _fun0001: for(var _fun0001_ip = 0; ; ) switch(_fun0001_ip) {
 0:
            var5 = arg1;
            var8 = var5.checked;
            var _closure2_slot0 = var8;
            var16 = var5.label;
            var15 = var5.subLabel;
            var12 = var5.disabled;
            var4 = undefined;
            if(!(var12 === var4)) { _fun0001_ip = 39; continue _fun0001 }
 37:
            var12 = false;
 39:
            var18 = var5.onPress;
            var _closure2_slot1 = var18;
            var10 = var5.accessibilityHint;
            var3 = {'checked': 0, 'label': 0, 'subLabel': 0, 'disabled': 0, 'onPress': 0, 'accessibilityHint': 0};
            var11 = null;
            var21 = var3;
            var20 = null;
            var2 = silentSetPrototypeOf(var21, var20);
            var7 = 0;
            var21 = {};
            var20 = var5;
            var19 = var3;
            var13 = copyDataProperties(var21, var20, var19);
            var _closure2_slot2 = var4;
            var2 = _closure1_slot0;
            var17 = _closure1_slot1;
            var3 = 3;
            var3 = var17[var3];
            var6 = var2.bind(var4)(var3);
            var3 = var6.useSharedValue;
            var14 = var3.bind(var6)(var7);
            _closure2_slot2 = var14;
            var7 = _closure1_slot2;
            var9 = var7.useCallback;
            var6 = new Array(1);
            var6[0] = var14;
            var3 = function() {
                var3 = _closure2_slot2;
                var2 = var3.set;
                var1 = 1;
                var1 = var2.bind(var3)(var1);
                var1 = undefined;
                return var1;
            };
            var9 = var9.bind(var7)(var3, var6);
            var6 = var7.useCallback;
            var3 = new Array(3);
            var3[0] = var18;
            var3[1] = var14;
            var3[2] = var8;
            var1 = function() {
                var4 = _closure2_slot2;
                var3 = var4.set;
                var2 = 0;
                var2 = var3.bind(var4)(var2);
                var3 = _closure2_slot1;
                var1 = _closure2_slot0;
                var2 = !var1;
                var1 = undefined;
                var2 = var3.bind(var1)(var2);
                return var1;
            };
            var7 = var6.bind(var7)(var1, var3);
            var1 = 4;
            var3 = var17[var1];
            var6 = var2.bind(var4)(var3);
            var3 = var6.getNodeText;
            var14 = var3.bind(var6)(var16);
            var1 = var17[var1];
            var3 = var2.bind(var4)(var1);
            var1 = var3.getNodeText;
            var6 = var1.bind(var3)(var15);
            var3 = _closure1_slot3;
            var1 = 5;
            var1 = var17[var1];
            var1 = var2.bind(var4)(var1);
            var2 = var1.TableRow;
            var1 = {};
            var21 = var1;
            var20 = var13;
            var13 = copyDataProperties(var21, var20);
            var17 = false;
            var13 = 'arrow';
            var1[var13] = var17;
            var13 = 'label';
            var1[var13] = var16;
            var13 = 'subLabel';
            var1[var13] = var15;
            var13 = 'disabled';
            var1[var13] = var12;
            var13 = {};
            var13['disabled'] = var12;
            var13['checked'] = var8;
            var12 = 'accessibilityState';
            var1[var12] = var13;
            var13 = true;
            var12 = 'accessible';
            var1[var12] = var13;
            var13 = 'checkbox';
            var12 = 'accessibilityRole';
            var1[var12] = var13;
            var11 = var11 != var6;
            var13 = '';
            var12 = var13;
            if(!var11) { _fun0001_ip = 374; continue _fun0001 }
 371:
            var12 = var6;
 374:
            var6 = global;
            var6 = var6.HermesInternal;
            var11 = var6.concat;
            var6 = ', ';
            var11 = var11.bind(var13)(var14, var6, var12);
            var6 = 'accessibilityLabel';
            var1[var6] = var11;
            var6 = 'accessibilityHint';
            var1[var6] = var10;
            var6 = 'onPressIn';
            var1[var6] = var9;
            var6 = 'onPress';
            var1[var6] = var7;
            var7 = _closure1_slot3;
            var6 = _closure1_slot0;
            var9 = _closure1_slot1;
            var5 = 6;
            var5 = var9[var5];
            var5 = var6.bind(var4)(var5);
            var6 = var5.FormCheckbox;
            var5 = {};
            var5['checked'] = var8;
            var6 = var7.bind(var4)(var6, var5);
            var5 = 'trailing';
            var1[var5] = var6;
            var1 = var3.bind(var4)(var2, var1);
            return var1;
        }
    };
    var3['TableCheckboxRow'] = var2;
    return var1;
})();