// app/design/components/Icon/native/redesign/generated/CircleWarningIcon.tsx
export default (function(argFoo, argBar, argBaz, argCorge, _, argFred, argPlugh) {
    report = argBar;
    zulu = argFred;
    oscar = argPlugh;
    var _closure1_slot0 = report;
    entity = argBaz;
    var _closure1_slot1 = entity;
    var _closure1_slot2 = oscar;
    entity = global;
    options = entity.Object;
    golf = options.defineProperty;
    tango = {};
    entity = true;
    tango['value'] = entity;
    entity = '__esModule';
    entity = golf.bind(options)(zulu, entity, tango);
    entity = 0;
    golf = oscar[entity];
    tango = argCorge;
    entity = undefined;
    tango = tango.bind(entity)(golf);
    tango = 1;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.View;
    var _closure1_slot3 = tango;
    tango = 2;
    golf = oscar[tango];
    golf = report.bind(entity)(golf);
    golf = golf.jsx;
    var _closure1_slot4 = golf;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.jsxs;
    var _closure1_slot5 = tango;
    tango = 7;
    tango = oscar[tango];
    oscar = report.bind(entity)(tango);
    report = oscar.fileFinishedImporting;
    tango = 'design/components/Icon/native/redesign/generated/CircleWarningIcon.tsx';
    tango = report.bind(oscar)(tango);
    mike = function(argFoo) {
        _fun63641: for(var _fun63641_ip = 0; ; ) switch(_fun63641_ip) {
 0:
            zulu = argFoo;
            offset = zulu.style;
            foxtrot = zulu.secondaryColor;
            tango = undefined;
            if(!(foxtrot === tango)) { _fun63641_ip = 24; continue _fun63641 }
 20:
            foxtrot = 'transparent';
 24:
            yankee = zulu.color;
            if(!(yankee === tango)) { _fun63641_ip = 67; continue _fun63641 }
 33:
            mike = _closure1_slot1;
            report = _closure1_slot2;
            entity = 3;
            entity = report[entity];
            entity = mike.bind(tango)(entity);
            entity = entity.colors;
            yankee = entity.INTERACTIVE_NORMAL;
 67:
            mike = {'style': 0, 'secondaryColor': 0, 'color': 0};
            result = null;
            echo = mike;
            entity = silentSetPrototypeOf(echo, result);
            echo = {};
            result = zulu;
            output = mike;
            verify = copyDataProperties(echo, result, output);
            zulu = _closure1_slot5;
            mike = _closure1_slot3;
            entity = {};
            options = _closure1_slot4;
            backup = _closure1_slot0;
            kilo = _closure1_slot2;
            oscar = 4;
            report = kilo[oscar];
            report = backup.bind(tango)(report);
            golf = report.BaseIconImage;
            report = {};
            sizing = 5;
            sizing = kilo[sizing];
            sizing = backup.bind(tango)(sizing);
            report['source'] = sizing;
            report['color'] = foxtrot;
            report['style'] = offset;
            echo = report;
            result = verify;
            foxtrot = copyDataProperties(echo, result);
            golf = options.bind(tango)(golf, report);
            report = new Array(2);
            report[0] = golf;
            oscar = kilo[oscar];
            oscar = backup.bind(tango)(oscar);
            golf = oscar.BaseIconImage;
            oscar = {};
            foxtrot = 6;
            foxtrot = kilo[foxtrot];
            foxtrot = backup.bind(tango)(foxtrot);
            oscar['source'] = foxtrot;
            oscar['color'] = yankee;
            yankee = new Array(1);
            yankee[0] = offset;
            offset = yankee.flat;
            result = offset.bind(yankee)();
            offset = new Array(1);
            echo = offset;
            output = 0;
            romeo = arraySpread(echo, result, output);
            yankee = {'position': 'absolute', 'top': 0};
            offset[romeo] = yankee;
            yankee = 1;
            yankee = romeo + yankee;
            oscar['style'] = offset;
            echo = oscar;
            result = verify;
            verify = copyDataProperties(echo, result);
            oscar = options.bind(tango)(golf, oscar);
            report[1] = oscar;
            entity['children'] = report;
            entity = zulu.bind(tango)(mike, entity);
            return entity;
        }
    };
    zulu['CircleWarningIcon'] = mike;
    return entity;
})();