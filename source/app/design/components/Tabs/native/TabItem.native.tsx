// app/design/components/Tabs/native/TabItem.native.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    report = argBar;
    offset = argBaz;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    var _closure1_slot1 = offset;
    var _closure1_slot2 = oscard;
    entity = function(argFoo) { // Original name: useAnimatedTextStyle
        michal = argFoo;
        offset = michal.index;
        var _closure2_slot0 = offset;
        oscard = michal.activeIndex;
        var _closure2_slot1 = oscard;
        yankee = michal.pressed;
        var _closure2_slot2 = yankee;
        michal = _closure1_slot10;
        option = undefined;
        romeon = michal.bind(option)();
        var _closure2_slot3 = romeon;
        golfie = _closure1_slot0;
        verify = _closure1_slot2;
        michal = 3;
        michal = verify[michal];
        zuuluu = golfie.bind(option)(michal);
        michal = zuuluu.useAnimatedStyle;
        entity = function() { // Original name: o
            _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
                michal = _closure2_slot3;
                oscard = michal.inactive;
                zuuluu = _closure2_slot2;
                michal = zuuluu.get;
                tangon = michal.bind(zuuluu)();
                michal = 0;
                tangon = tangon >= michal;
                michal = zuuluu.get;
                report = michal.bind(zuuluu)();
                zuuluu = _closure2_slot0;
                michal = global;
                option = michal.Math;
                golfie = option.round;
                verify = _closure2_slot1;
                michal = verify.get;
                michal = michal.bind(verify)();
                michal = golfie.bind(option)(michal);
                if(!(report !== zuuluu)) { _fun00002_ip = 111; continue _fun00001 }
 80:
                if(tangon) { _fun00002_ip = 99; continue _fun00001 }
 83:
                if(!(michal === zuuluu)) { _fun00002_ip = 121; continue _fun00001 }
 87:
                michal = _closure2_slot3;
                oscard = michal.active;
                _fun00002_ip = 121; continue _fun00001;
 99:
                michal = _closure2_slot3;
                oscard = michal.inactive;
                _fun00002_ip = 121; continue _fun00001;
 111:
                entity = _closure2_slot3;
                oscard = entity.pressed;
 121:
                entity = {};
                report = _closure1_slot0;
                tangon = _closure1_slot2;
                zuuluu = 6;
                tangon = tangon[zuuluu];
                zuuluu = undefined;
                report = report.bind(zuuluu)(tangon);
                tangon = report.withSpring;
                zuuluu = _closure1_slot7;
                michal = 'animate-always';
                michal = tangon.bind(report)(oscard, zuuluu, michal);
                entity['color'] = michal;
                return entity;
            }
        };
        report = {};
        report['colors'] = romeon;
        report['pressed'] = yankee;
        report['index'] = offset;
        report['activeIndex'] = oscard;
        oscard = 6;
        oscard = verify[oscard];
        oscard = golfie.bind(option)(oscard);
        oscard = oscard.withSpring;
        report['withSpring'] = oscard;
        oscard = _closure1_slot7;
        report['TEXT_SPRING_CONFIG'] = oscard;
        entity['__closure'] = report;
        report = 11643476765161.0;
        entity['__workletHash'] = report;
        tangon = _closure1_slot11;
        entity['__initData'] = tangon;
        entity = michal.bind(zuuluu)(entity);
        return entity;
    };
    var _closure1_slot14 = entity;
    entity = function(argFoo) { // Original name: TabItemCount
        entity = argFoo;
        option = entity.count;
        foxtra = entity.index;
        romeon = entity.activeIndex;
        verify = entity.pressed;
        entity = _closure1_slot9;
        tangon = undefined;
        golfie = entity.bind(tangon)();
        oscard = _closure1_slot0;
        offset = _closure1_slot2;
        entity = 3;
        zuuluu = offset[entity];
        backup = oscard.bind(tangon)(zuuluu);
        yankee = backup.useSharedValue;
        zuuluu = 0;
        kiloes = yankee.bind(backup)(zuuluu);
        var _closure2_slot0 = kiloes;
        sizing = _closure1_slot3;
        backup = sizing.useLayoutEffect;
        yankee = new Array(1);
        yankee[0] = kiloes;
        zuuluu = function() {
            zuuluu = _closure2_slot0;
            michal = zuuluu.set;
            entity = 1;
            entity = michal.bind(zuuluu)(entity);
            entity = undefined;
            return entity;
        };
        zuuluu = backup.bind(sizing)(zuuluu, yankee);
        zuuluu = offset[entity];
        yankee = oscard.bind(tangon)(zuuluu);
        zuuluu = yankee.useAnimatedStyle;
        michal = function() { // Original name: v
            entity = {};
            verify = _closure1_slot0;
            offset = _closure1_slot2;
            tangon = 6;
            zuuluu = offset[tangon];
            option = undefined;
            yankee = verify.bind(option)(zuuluu);
            oscard = yankee.withSpring;
            golfie = _closure2_slot0;
            zuuluu = golfie.get;
            report = zuuluu.bind(golfie)();
            zuuluu = _closure1_slot8;
            zuuluu = oscard.bind(yankee)(report, zuuluu);
            entity['opacity'] = zuuluu;
            zuuluu = {};
            tangon = offset[tangon];
            oscard = verify.bind(option)(tangon);
            report = oscard.withSpring;
            tangon = 3;
            tangon = offset[tangon];
            offset = verify.bind(option)(tangon);
            verify = offset.interpolate;
            tangon = golfie.get;
            option = tangon.bind(golfie)();
            golfie = new Array(2);
            tangon = -10;
            golfie[0] = tangon;
            tangon = 0;
            golfie[1] = tangon;
            tangon = [0, 1];
            tangon = verify.bind(offset)(option, tangon, golfie);
            michal = _closure1_slot8;
            michal = report.bind(oscard)(tangon, michal);
            zuuluu['translateX'] = michal;
            michal = new Array(1);
            michal[0] = zuuluu;
            entity['transform'] = michal;
            return entity;
        };
        backup = {};
        sizing = 6;
        sizing = offset[sizing];
        sizing = oscard.bind(tangon)(sizing);
        sizing = sizing.withSpring;
        backup['withSpring'] = sizing;
        backup['countAnimationState'] = kiloes;
        kiloes = _closure1_slot8;
        backup['COUNT_SPRING_CONFIG'] = kiloes;
        kiloes = offset[entity];
        kiloes = oscard.bind(tangon)(kiloes);
        kiloes = kiloes.interpolate;
        backup['interpolate'] = kiloes;
        michal['__closure'] = backup;
        backup = 16666672974627.0;
        michal['__workletHash'] = backup;
        backup = _closure1_slot12;
        michal['__initData'] = backup;
        yankee = zuuluu.bind(yankee)(michal);
        zuuluu = _closure1_slot14;
        michal = {};
        michal['index'] = foxtra;
        michal['activeIndex'] = romeon;
        michal['pressed'] = verify;
        verify = zuuluu.bind(tangon)(michal);
        zuuluu = _closure1_slot4;
        michal = _closure1_slot1;
        entity = offset[entity];
        entity = michal.bind(tangon)(entity);
        michal = entity.View;
        entity = {};
        romeon = golfie.count;
        golfie = new Array(2);
        golfie[0] = romeon;
        golfie[1] = yankee;
        entity['style'] = golfie;
        golfie = _closure1_slot4;
        report = 7;
        report = offset[report];
        report = oscard.bind(tangon)(report);
        oscard = report.Text;
        report = {'animated': true, 'variant': 'text-sm/medium', 'style': null, 'lineClamp': 1};
        report['style'] = verify;
        report['children'] = option;
        report = golfie.bind(tangon)(oscard, report);
        entity['children'] = report;
        entity = zuuluu.bind(tangon)(michal, entity);
        return entity;
    };
    var _closure1_slot15 = entity;
    entity = global;
    option = entity.Object;
    golfie = option.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(option)(zuuluu, entity, tangon);
    entity = 0;
    golfie = oscard[entity];
    tangon = argCor;
    entity = undefined;
    tangon = tangon.bind(entity)(golfie);
    var _closure1_slot3 = tangon;
    tangon = 1;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    option = tangon.Pressable;
    tangon = 2;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    golfie = tangon.jsx;
    var _closure1_slot4 = golfie;
    tangon = tangon.jsxs;
    var _closure1_slot5 = tangon;
    tangon = 3;
    tangon = oscard[tangon];
    golfie = offset.bind(entity)(tangon);
    tangon = golfie.createAnimatedComponent;
    tangon = tangon.bind(golfie)(option);
    var _closure1_slot6 = tangon;
    tangon = {'mass': 0.3, 'damping': 13, 'stiffness': 250, 'overshootClamping': true};
    var _closure1_slot7 = tangon;
    tangon = {'mass': 2, 'damping': 30, 'stiffness': 300, 'overshootClamping': true};
    var _closure1_slot8 = tangon;
    tangon = 4;
    golfie = oscard[tangon];
    yankee = report.bind(entity)(golfie);
    option = yankee.createStyles;
    golfie = {};
    verify = {'flexShrink': 0, 'flexBasis': 0, 'paddingBottom': 14, 'flexDirection': 'row', 'justifyContent': 'center'};
    golfie['item'] = verify;
    romeon = {};
    verify = 5;
    foxtra = oscard[verify];
    foxtra = offset.bind(entity)(foxtra);
    foxtra = foxtra.spacing;
    foxtra = foxtra.PX_8;
    romeon['marginLeft'] = foxtra;
    golfie['count'] = romeon;
    golfie = option.bind(yankee)(golfie);
    var _closure1_slot9 = golfie;
    tangon = oscard[tangon];
    option = report.bind(entity)(tangon);
    golfie = option.createStyleProperties;
    tangon = {};
    yankee = oscard[verify];
    yankee = offset.bind(entity)(yankee);
    yankee = yankee.colors;
    yankee = yankee.TEXT_MUTED;
    tangon['inactive'] = yankee;
    yankee = oscard[verify];
    yankee = offset.bind(entity)(yankee);
    yankee = yankee.colors;
    yankee = yankee.TEXT_BRAND;
    tangon['active'] = yankee;
    verify = oscard[verify];
    verify = offset.bind(entity)(verify);
    verify = verify.colors;
    verify = verify.TEXT_BRAND;
    tangon['pressed'] = verify;
    tangon = golfie.bind(option)(tangon);
    var _closure1_slot10 = tangon;
    tangon = {};
    golfie = "function TabItemNativeTsx1(){const{colors,pressed,index,activeIndex,withSpring,TEXT_SPRING_CONFIG}=this.__closure;let color=colors.inactive;const isPressActive=pressed.get()>=0;const isPressed=pressed.get()===index;const isActive=Math.round(activeIndex.get())===index;if(isPressed){color=colors.pressed;}else if(isPressActive){color=colors.inactive;}else if(isActive){color=colors.active;}return{color:withSpring(color,TEXT_SPRING_CONFIG,'animate-always')};}";
    tangon['code'] = golfie;
    var _closure1_slot11 = tangon;
    tangon = {};
    golfie = 'function TabItemNativeTsx2(){const{withSpring,countAnimationState,COUNT_SPRING_CONFIG,interpolate}=this.__closure;return{opacity:withSpring(countAnimationState.get(),COUNT_SPRING_CONFIG),transform:[{translateX:withSpring(interpolate(countAnimationState.get(),[0,1],[-10,0]),COUNT_SPRING_CONFIG)}]};}';
    tangon['code'] = golfie;
    var _closure1_slot12 = tangon;
    tangon = {};
    golfie = 'function TabItemNativeTsx3(){const{activeIndex,index}=this.__closure;return{accessibilityState:{selected:activeIndex.get()===index}};}';
    tangon['code'] = golfie;
    var _closure1_slot13 = tangon;
    tangon = 8;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'design/components/Tabs/native/TabItem.native.tsx';
    tangon = report.bind(oscard)(tangon);
    michal = function(argFoo) { // Original name: TabItem
        _fun00003: for(var _fun00004_ip = 0; ; ) switch(_fun00004_ip) {
 0:
            tangon = argFoo;
            backup = tangon.label;
            foxtra = tangon.count;
            romeon = tangon.index;
            var _closure2_slot0 = romeon;
            entity = tangon.state;
            offset = tangon.pressed;
            echoed = tangon.grow;
            zuuluu = {'label': 0, 'count': 0, 'index': 0, 'state': 0, 'pressed': 0, 'grow': 0};
            report = null;
            ctrled = zuuluu;
            source = null;
            michal = silentSetPrototypeOf(ctrled, source);
            ctrled = {};
            source = tangon;
            update = zuuluu;
            verify = copyDataProperties(ctrled, source, update);
            yankee = entity.activeIndex;
            var _closure2_slot1 = yankee;
            entity = entity.setItemDimensions;
            var _closure2_slot2 = entity;
            entity = _closure1_slot9;
            tangon = undefined;
            sizing = entity.bind(tangon)();
            michal = _closure1_slot0;
            zuuluu = _closure1_slot2;
            entity = 3;
            entity = zuuluu[entity];
            zuuluu = michal.bind(tangon)(entity);
            michal = zuuluu.useAnimatedProps;
            entity = function() { // Original name: I
                entity = {};
                michal = {};
                report = _closure2_slot1;
                tangon = report.get;
                tangon = tangon.bind(report)();
                zuuluu = _closure2_slot0;
                zuuluu = tangon === zuuluu;
                michal['selected'] = zuuluu;
                entity['accessibilityState'] = michal;
                return entity;
            };
            option = {};
            option['activeIndex'] = yankee;
            option['index'] = romeon;
            entity['__closure'] = option;
            option = 11618929630200.0;
            entity['__workletHash'] = option;
            option = _closure1_slot13;
            entity['__initData'] = option;
            option = michal.bind(zuuluu)(entity);
            michal = _closure1_slot14;
            entity = {};
            entity['index'] = romeon;
            entity['activeIndex'] = yankee;
            entity['pressed'] = offset;
            kiloes = michal.bind(tangon)(entity);
            zuuluu = _closure1_slot5;
            michal = _closure1_slot6;
            entity = {};
            output = sizing.item;
            sizing = new Array(2);
            sizing[0] = output;
            output = {};
            result = 0;
            if(!echoed) { _fun00004_ip = 248; continue _fun00003 }
 245:
            result = 1;
 248:
            output['flexGrow'] = result;
            sizing[1] = output;
            entity['style'] = sizing;
            ctrled = entity;
            source = verify;
            verify = copyDataProperties(ctrled, source);
            verify = function(argFoo) { // Original name: onLayout
                zuuluu = _closure1_slot0;
                michal = _closure1_slot2;
                entity = 3;
                michal = michal[entity];
                entity = undefined;
                report = zuuluu.bind(entity)(michal);
                tangon = report.runOnUI;
                zuuluu = _closure2_slot2;
                tangon = tangon.bind(report)(zuuluu);
                zuuluu = _closure2_slot0;
                michal = argFoo;
                michal = michal.nativeEvent;
                michal = michal.layout;
                michal = tangon.bind(entity)(zuuluu, michal);
                return entity;
            };
            oscard = 'onLayout';
            entity[oscard] = verify;
            verify = 'tab';
            oscard = 'accessibilityRole';
            entity[oscard] = verify;
            oscard = 'animatedProps';
            entity[oscard] = option;
            verify = _closure1_slot4;
            option = _closure1_slot0;
            sizing = _closure1_slot2;
            oscard = 7;
            oscard = sizing[oscard];
            oscard = option.bind(tangon)(oscard);
            option = oscard.Text;
            oscard = {'animated': true, 'variant': 'text-sm/semibold', 'style': null, 'lineClamp': 1};
            oscard['style'] = kiloes;
            oscard['children'] = backup;
            option = verify.bind(tangon)(option, oscard);
            oscard = new Array(2);
            oscard[0] = option;
            option = report != foxtra;
            report = null;
            if(!option) { _fun00004_ip = 417; continue _fun00003 }
 383:
            verify = _closure1_slot4;
            option = _closure1_slot15;
            golfie = {};
            golfie['count'] = foxtra;
            golfie['index'] = romeon;
            golfie['activeIndex'] = yankee;
            golfie['pressed'] = offset;
            report = verify.bind(tangon)(option, golfie);
 417:
            oscard[1] = report;
            report = 'children';
            entity[report] = oscard;
            entity = zuuluu.bind(tangon)(michal, entity);
            return entity;
        }
    };
    zuuluu['TabItem'] = michal;
    return entity;
})();