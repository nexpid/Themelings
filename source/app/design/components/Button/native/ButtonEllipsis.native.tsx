// app/design/components/Button/native/ButtonEllipsis.native.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    report = argBar;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    entity = argBaz;
    var _closure1_slot1 = entity;
    var _closure1_slot2 = oscard;
    entity = function(argFoo) { // Original name: EllipsisCircle
        entity = argFoo;
        offset = entity.variant;
        verify = entity.size;
        oscard = entity.offset;
        var _closure2_slot0 = oscard;
        option = _closure1_slot0;
        golfie = _closure1_slot2;
        entity = 6;
        entity = golfie[entity];
        tangon = undefined;
        report = option.bind(tangon)(entity);
        entity = report.useForegroundColor;
        report = entity.bind(report)(offset);
        entity = _closure1_slot6;
        report = entity.bind(tangon)(verify, oscard, report);
        entity = 2;
        oscard = golfie[entity];
        offset = option.bind(tangon)(oscard);
        verify = offset.useSharedValue;
        oscard = 0.4;
        yankee = verify.bind(offset)(oscard);
        var _closure2_slot1 = yankee;
        oscard = golfie[entity];
        offset = option.bind(tangon)(oscard);
        verify = offset.useSharedValue;
        oscard = 0.75;
        offset = verify.bind(offset)(oscard);
        var _closure2_slot2 = offset;
        oscard = 7;
        oscard = golfie[oscard];
        romeon = option.bind(tangon)(oscard);
        verify = romeon.useMountLayoutEffect;
        oscard = function() {
            option = _closure2_slot1;
            golfie = option.set;
            zuuluu = _closure1_slot8;
            oscard = _closure2_slot0;
            report = undefined;
            tangon = 1;
            zuuluu = zuuluu.bind(report)(oscard, tangon);
            zuuluu = golfie.bind(option)(zuuluu);
            zuuluu = _closure2_slot2;
            michal = zuuluu.set;
            entity = _closure1_slot8;
            entity = entity.bind(report)(oscard, tangon);
            entity = michal.bind(zuuluu)(entity);
            entity = function() {
                tangon = _closure1_slot0;
                report = _closure1_slot2;
                zuuluu = 2;
                michal = report[zuuluu];
                entity = undefined;
                option = tangon.bind(entity)(michal);
                golfie = option.cancelAnimation;
                oscard = _closure2_slot1;
                oscard = golfie.bind(option)(oscard);
                zuuluu = report[zuuluu];
                tangon = tangon.bind(entity)(zuuluu);
                zuuluu = tangon.cancelAnimation;
                michal = _closure2_slot2;
                michal = zuuluu.bind(tangon)(michal);
                return entity;
            };
            return entity;
        };
        oscard = verify.bind(romeon)(oscard);
        oscard = golfie[entity];
        option = option.bind(tangon)(oscard);
        oscard = option.useAnimatedStyle;
        zuuluu = function() { // Original name: w
            entity = {};
            tangon = _closure2_slot1;
            zuuluu = tangon.get;
            zuuluu = zuuluu.bind(tangon)();
            entity['opacity'] = zuuluu;
            zuuluu = {};
            tangon = _closure2_slot2;
            michal = tangon.get;
            michal = michal.bind(tangon)();
            zuuluu['scale'] = michal;
            michal = new Array(1);
            michal[0] = zuuluu;
            entity['transform'] = michal;
            return entity;
        };
        verify = {};
        verify['opacity'] = yankee;
        verify['scale'] = offset;
        zuuluu['__closure'] = verify;
        verify = 13371762734705.0;
        zuuluu['__workletHash'] = verify;
        verify = _closure1_slot9;
        zuuluu['__initData'] = verify;
        oscard = oscard.bind(option)(zuuluu);
        zuuluu = _closure1_slot3;
        michal = _closure1_slot1;
        entity = golfie[entity];
        entity = michal.bind(tangon)(entity);
        michal = entity.View;
        entity = {};
        golfie = report.circle;
        report = new Array(2);
        report[0] = golfie;
        report[1] = oscard;
        entity['style'] = report;
        entity = zuuluu.bind(tangon)(michal, entity);
        return entity;
    };
    var _closure1_slot10 = entity;
    entity = global;
    option = entity.Object;
    golfie = option.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(option)(zuuluu, entity, tangon);
    entity = 0;
    golfie = oscard[entity];
    tangon = argCor;
    entity = undefined;
    tangon = tangon.bind(entity)(golfie);
    tangon = 1;
    golfie = oscard[tangon];
    golfie = report.bind(entity)(golfie);
    golfie = golfie.jsx;
    var _closure1_slot3 = golfie;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.jsxs;
    var _closure1_slot4 = tangon;
    tangon = {};
    golfie = 500;
    tangon['duration'] = golfie;
    golfie = 2;
    option = oscard[golfie];
    option = report.bind(entity)(option);
    verify = option.Easing;
    option = verify.inOut;
    golfie = oscard[golfie];
    golfie = report.bind(entity)(golfie);
    golfie = golfie.Easing;
    golfie = golfie.quad;
    golfie = option.bind(verify)(golfie);
    tangon['easing'] = golfie;
    var _closure1_slot5 = tangon;
    tangon = 3;
    tangon = oscard[tangon];
    option = report.bind(entity)(tangon);
    golfie = option.createStyles;
    tangon = function(argFoo, argBar, argBaz) {
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            michal = argFoo;
            entity = 'lg';
            if(!(entity !== michal)) { _fun00002_ip = 56; continue _fun00001 }
 11:
            entity = 'md';
            if(!(entity !== michal)) { _fun00002_ip = 48; continue _fun00001 }
 19:
            entity = 'sm';
            if(!(entity !== michal)) { _fun00002_ip = 48; continue _fun00001 }
 27:
            tangon = 4;
            entity = 'xs';
            zuuluu = undefined;
            if(!(entity === michal)) { _fun00002_ip = 62; continue _fun00001 }
 40:
            zuuluu = 5;
            tangon = 3;
            _fun00002_ip = 62; continue _fun00001;
 48:
            zuuluu = 6;
            tangon = 4;
            _fun00002_ip = 62; continue _fun00001;
 56:
            zuuluu = 8;
            tangon = 4;
 62:
            entity = {};
            michal = {};
            michal['width'] = zuuluu;
            michal['height'] = zuuluu;
            oscard = _closure1_slot1;
            report = _closure1_slot2;
            zuuluu = 4;
            report = report[zuuluu];
            zuuluu = undefined;
            zuuluu = oscard.bind(zuuluu)(report);
            zuuluu = zuuluu.radii;
            zuuluu = zuuluu.round;
            michal['borderRadius'] = zuuluu;
            oscard = 2;
            report = argBar;
            zuuluu = 0;
            if(!(oscard !== report)) { _fun00002_ip = 128; continue _fun00001 }
 125:
            zuuluu = tangon;
 128:
            michal['marginEnd'] = zuuluu;
            zuuluu = argBaz;
            michal['backgroundColor'] = zuuluu;
            entity['circle'] = michal;
            return entity;
        }
    };
    tangon = golfie.bind(option)(tangon);
    var _closure1_slot6 = tangon;
    tangon = {};
    golfie = "function withEllipsisAnimation_ButtonEllipsisNativeTsx1(offset,value){const{ELLIPSIS_APPEAR_DURATION,withDelay,withRepeat,withTiming,ELLIPSIS_APPEAR_TIMING}=this.__closure;const animationTimeMs=ELLIPSIS_APPEAR_DURATION;const animationStaggerTimeMs=animationTimeMs/3;return withDelay(offset*animationStaggerTimeMs,withRepeat(withTiming(value,ELLIPSIS_APPEAR_TIMING,'animate-always'),-1,true));}";
    tangon['code'] = golfie;
    var _closure1_slot7 = tangon;
    tangon = function() {
        entity = function(argFoo, argBar) { // Original name: withEllipsisAnimation
            verify = _closure1_slot0;
            offset = _closure1_slot2;
            report = 2;
            michal = offset[report];
            oscard = undefined;
            tangon = verify.bind(oscard)(michal);
            zuuluu = tangon.withDelay;
            golfie = 166.66666666666666;
            michal = argFoo;
            michal = golfie * michal;
            report = offset[report];
            option = verify.bind(oscard)(report);
            golfie = option.withRepeat;
            report = 5;
            report = offset[report];
            offset = verify.bind(oscard)(report);
            verify = offset.withTiming;
            oscard = _closure1_slot5;
            report = argBar;
            entity = 'animate-always';
            oscard = verify.bind(offset)(report, oscard, entity);
            report = -1;
            entity = true;
            entity = golfie.bind(option)(oscard, report, entity);
            entity = zuuluu.bind(tangon)(michal, entity);
            return entity;
        };
        zuuluu = {};
        michal = 500;
        zuuluu['ELLIPSIS_APPEAR_DURATION'] = michal;
        oscard = _closure1_slot0;
        golfie = _closure1_slot2;
        tangon = 2;
        option = golfie[tangon];
        report = undefined;
        option = oscard.bind(report)(option);
        option = option.withDelay;
        zuuluu['withDelay'] = option;
        tangon = golfie[tangon];
        tangon = oscard.bind(report)(tangon);
        tangon = tangon.withRepeat;
        zuuluu['withRepeat'] = tangon;
        tangon = 5;
        tangon = golfie[tangon];
        tangon = oscard.bind(report)(tangon);
        tangon = tangon.withTiming;
        zuuluu['withTiming'] = tangon;
        tangon = _closure1_slot5;
        zuuluu['ELLIPSIS_APPEAR_TIMING'] = tangon;
        entity['__closure'] = zuuluu;
        zuuluu = 2181731162311.0;
        entity['__workletHash'] = zuuluu;
        michal = _closure1_slot7;
        entity['__initData'] = michal;
        return entity;
    };
    tangon = tangon.bind(entity)();
    var _closure1_slot8 = tangon;
    tangon = {};
    golfie = 'function ButtonEllipsisNativeTsx2(){const{opacity,scale}=this.__closure;return{opacity:opacity.get(),transform:[{scale:scale.get()}]};}';
    tangon['code'] = golfie;
    var _closure1_slot9 = tangon;
    tangon = 8;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'design/components/Button/native/ButtonEllipsis.native.tsx';
    tangon = report.bind(oscard)(tangon);
    michal = function(argFoo) { // Original name: Ellipsis
        verify = argFoo;
        tangon = _closure1_slot4;
        michal = _closure1_slot1;
        entity = _closure1_slot2;
        offset = 2;
        entity = entity[offset];
        zuuluu = undefined;
        entity = michal.bind(zuuluu)(entity);
        michal = entity.View;
        entity = {};
        report = {};
        golfie = 'row';
        report['flexDirection'] = golfie;
        entity['style'] = report;
        golfie = _closure1_slot3;
        option = _closure1_slot10;
        report = {};
        yankee = 0;
        report['offset'] = yankee;
        backup = report;
        foxtra = verify;
        yankee = copyDataProperties(backup, foxtra);
        golfie = golfie.bind(zuuluu)(option, report);
        report = new Array(3);
        report[0] = golfie;
        yankee = _closure1_slot3;
        golfie = {};
        romeon = 1;
        golfie['offset'] = romeon;
        backup = golfie;
        foxtra = verify;
        romeon = copyDataProperties(backup, foxtra);
        golfie = yankee.bind(zuuluu)(option, golfie);
        report[1] = golfie;
        golfie = _closure1_slot3;
        oscard = {};
        oscard['offset'] = offset;
        backup = oscard;
        foxtra = verify;
        verify = copyDataProperties(backup, foxtra);
        oscard = golfie.bind(zuuluu)(option, oscard);
        report[2] = oscard;
        entity['children'] = report;
        entity = tangon.bind(zuuluu)(michal, entity);
        return entity;
    };
    zuuluu['Ellipsis'] = michal;
    return entity;
})();