// app/design/components/Button/native/IconButton.native.tsx
export default (function(global, require, metroImportDefault, metroImportAll, moduleObject, exports, dependencyMap) {
    var5 = require;
    var3 = exports;
    var6 = dependencyMap;
    var _closure1_slot0 = var5;
    var1 = metroImportDefault;
    var _closure1_slot1 = var1;
    var _closure1_slot2 = var6;
    var1 = global;
    var8 = var1.Object;
    var7 = var8.defineProperty;
    var4 = {};
    var1 = true;
    var4['value'] = var1;
    var1 = '__esModule';
    var1 = var7.bind(var8)(var3, var1, var4);
    var1 = 0;
    var7 = var6[var1];
    var4 = metroImportAll;
    var1 = undefined;
    var7 = var4.bind(var1)(var7);
    var4 = 1;
    var4 = var6[var4];
    var4 = var5.bind(var1)(var4);
    var8 = var4.jsx;
    var _closure1_slot3 = var8;
    var4 = var4.jsxs;
    var _closure1_slot4 = var4;
    var4 = 2;
    var4 = var6[var4];
    var9 = var5.bind(var1)(var4);
    var8 = var9.createStyles;
    var4 = function(arg1) {
        _fun0001: for(var _fun0001_ip = 0; ; ) switch(_fun0001_ip) {
 0:
            var1 = {};
            var2 = {};
            var5 = _closure1_slot1;
            var6 = _closure1_slot2;
            var3 = 3;
            var7 = var6[var3];
            var4 = undefined;
            var7 = var5.bind(var4)(var7);
            var7 = var7.spacing;
            var7 = var7.PX_4;
            var2['paddingBottom'] = var7;
            var3 = var6[var3];
            var3 = var5.bind(var4)(var3);
            var3 = var3.spacing;
            var3 = var3.PX_8;
            var2['gap'] = var3;
            var3 = 'center';
            var2['alignItems'] = var3;
            var2['alignSelf'] = var3;
            var5 = arg1;
            var4 = 0;
            if(!var5) { _fun0001_ip = 94; continue _fun0001 }
 91:
            var4 = 1;
 94:
            var2['flexGrow'] = var4;
            var1['labelPressable'] = var2;
            var2 = {};
            var2['textAlign'] = var3;
            var1['label'] = var2;
            return var1;
        }
    };
    var4 = var8.bind(var9)(var4);
    var _closure1_slot5 = var4;
    var4 = var7.forwardRef;
    var2 = function(arg1, arg2) {
        _fun0002: for(var _fun0002_ip = 0; ; ) switch(_fun0002_ip) {
 0:
            var5 = arg1;
            var17 = arg2;
            var10 = var5.label;
            var3 = var5.grow;
            var7 = var5.accessibilityLabel;
            var11 = var5.maxFontSizeMultiplier;
            var4 = {'label': 0, 'grow': 0, 'accessibilityLabel': 0, 'maxFontSizeMultiplier': 0};
            var1 = null;
            var20 = var4;
            var19 = null;
            var2 = silentSetPrototypeOf(var20, var19);
            var20 = {};
            var19 = var5;
            var18 = var4;
            var14 = copyDataProperties(var20, var19, var18);
            var2 = _closure1_slot5;
            var5 = undefined;
            var12 = var2.bind(var5)(var3);
            if(!(var1 == var10)) { _fun0002_ip = 158; continue _fun0002 }
 83:
            var3 = _closure1_slot3;
            var2 = _closure1_slot0;
            var4 = _closure1_slot2;
            var1 = 5;
            var1 = var4[var1];
            var1 = var2.bind(var5)(var1);
            var2 = var1.BaseIconButton;
            var1 = {};
            var1['ref'] = var17;
            var20 = var1;
            var19 = var14;
            var4 = copyDataProperties(var20, var19);
            var4 = 'accessibilityLabel';
            var1[var4] = var7;
            var4 = 'maxFontSizeMultiplier';
            var1[var4] = var11;
            var1 = var3.bind(var5)(var2, var1);
            _fun0002_ip = 400; continue _fun0002;
 158:
            var4 = _closure1_slot4;
            var8 = _closure1_slot0;
            var13 = _closure1_slot2;
            var2 = 4;
            var2 = var13[var2];
            var2 = var8.bind(var5)(var2);
            var3 = var2.BaseButton;
            var2 = {};
            var9 = var12.labelPressable;
            var2['style'] = var9;
            var20 = var2;
            var19 = var14;
            var9 = copyDataProperties(var20, var19);
            var16 = 'none';
            var9 = 'variant';
            var2[var9] = var16;
            var15 = 'accessibilityLabel';
            var2[var15] = var7;
            var9 = _closure1_slot3;
            var6 = 5;
            var6 = var13[var6];
            var6 = var8.bind(var5)(var6);
            var7 = var6.BaseIconButton;
            var6 = {};
            var6['ref'] = var17;
            var20 = var6;
            var19 = var14;
            var14 = copyDataProperties(var20, var19);
            var14 = 'accessibilityRole';
            var6[var14] = var16;
            var14 = '';
            var6[var15] = var14;
            var15 = 'lg';
            var14 = 'size';
            var6[var14] = var15;
            var14 = 'maxFontSizeMultiplier';
            var6[var14] = var11;
            var6 = var9.bind(var5)(var7, var6);
            var7 = new Array(2);
            var7[0] = var6;
            var6 = 6;
            var6 = var13[var6];
            var6 = var8.bind(var5)(var6);
            var8 = var6.Text;
            var6 = {'style': null, 'variant': 'text-xs/medium', 'color': 'interactive-normal'};
            var12 = var12.label;
            var6['style'] = var12;
            var6['maxFontSizeMultiplier'] = var11;
            var6['children'] = var10;
            var6 = var9.bind(var5)(var8, var6);
            var7[1] = var6;
            var6 = 'children';
            var2[var6] = var7;
            var1 = var4.bind(var5)(var3, var2);
 400:
            return var1;
        }
    };
    var2 = var4.bind(var7)(var2);
    var4 = 7;
    var4 = var6[var4];
    var6 = var5.bind(var1)(var4);
    var5 = var6.fileFinishedImporting;
    var4 = 'design/components/Button/native/IconButton.native.tsx';
    var4 = var5.bind(var6)(var4);
    var3['IconButton'] = var2;
    return var1;
})();