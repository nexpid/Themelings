// app/design/components/Button/native/ButtonShine.native.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    oscard = argBar;
    option = argBaz;
    zuuluu = argFre;
    golfie = argPlu;
    var _closure1_slot0 = oscard;
    var _closure1_slot1 = option;
    var _closure1_slot2 = golfie;
    tangon = function(argFoo, argBar) { // Original name: useShineEffectStyles
        romeon = argFoo;
        var _closure2_slot0 = romeon;
        report = _closure1_slot0;
        oscard = _closure1_slot2;
        michal = 3;
        michal = oscard[michal];
        tangon = undefined;
        option = report.bind(tangon)(michal);
        zuuluu = option.useButtonTextColorStyles;
        michal = argBar;
        michal = zuuluu.bind(option)(michal);
        option = _closure1_slot1;
        zuuluu = 4;
        zuuluu = oscard[zuuluu];
        zuuluu = option.bind(tangon)(zuuluu);
        michal = michal.color;
        option = zuuluu.bind(tangon)(michal);
        zuuluu = option.alpha;
        michal = 0.1;
        zuuluu = zuuluu.bind(option)(michal);
        michal = zuuluu.hex;
        option = michal.bind(zuuluu)();
        verify = _closure1_slot4;
        zuuluu = verify.useContext;
        michal = 5;
        michal = oscard[michal];
        michal = report.bind(tangon)(michal);
        michal = michal.AccessibilityPreferencesContext;
        michal = zuuluu.bind(verify)(michal);
        michal = michal.reducedMotion;
        yankee = michal.enabled;
        var _closure2_slot1 = yankee;
        offset = 6;
        michal = oscard[offset];
        zuuluu = report.bind(tangon)(michal);
        michal = zuuluu.useAnimatedStyle;
        entity = function() { // Original name: o
            _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
                michal = _closure2_slot0;
                entity = null;
                if(!(entity != michal)) { _fun00002_ip = 271; continue _fun00001 }
 16:
                entity = _closure2_slot1;
                michal = {};
                tangon = {};
                if(entity) { _fun00002_ip = 231; continue _fun00001 }
 30:
                foxtra = _closure1_slot0;
                backup = _closure1_slot2;
                yankee = 6;
                entity = backup[yankee];
                offset = undefined;
                golfie = foxtra.bind(offset)(entity);
                oscard = golfie.withRepeat;
                entity = backup[yankee];
                verify = foxtra.bind(offset)(entity);
                option = verify.withSequence;
                entity = 7;
                report = backup[entity];
                output = foxtra.bind(offset)(report);
                sizing = output.withTiming;
                romeon = {};
                report = 0;
                romeon['duration'] = report;
                report = -120;
                kiloes = 'animate-always';
                report = sizing.bind(output)(report, romeon, kiloes);
                yankee = backup[yankee];
                romeon = foxtra.bind(offset)(yankee);
                yankee = romeon.withDelay;
                entity = backup[entity];
                backup = foxtra.bind(offset)(entity);
                foxtra = backup.withTiming;
                offset = _closure2_slot0;
                entity = 120;
                offset = offset + entity;
                entity = {};
                sizing = 2000;
                entity['duration'] = sizing;
                offset = foxtra.bind(backup)(offset, entity, kiloes);
                entity = 750;
                entity = yankee.bind(romeon)(entity, offset);
                report = option.bind(verify)(report, entity);
                entity = -1;
                entity = oscard.bind(golfie)(report, entity);
                tangon['translateX'] = entity;
                entity = new Array(1);
                entity[0] = tangon;
                michal['transform'] = entity;
                entity = michal;
                _fun00002_ip = 269; continue _fun00001;
 231:
                report = _closure2_slot0;
                zuuluu = 56;
                report = report - zuuluu;
                zuuluu = 2;
                zuuluu = report / zuuluu;
                tangon['translateX'] = zuuluu;
                zuuluu = new Array(1);
                zuuluu[0] = tangon;
                michal['transform'] = zuuluu;
                entity = michal;
 269:
                _fun00002_ip = 301; continue _fun00001;
 271:
                michal = {};
                tangon = {};
                zuuluu = -120;
                tangon['translateX'] = zuuluu;
                zuuluu = new Array(1);
                zuuluu[0] = tangon;
                michal['transform'] = zuuluu;
                entity = michal;
 301:
                return entity;
            }
        };
        verify = {};
        verify['width'] = romeon;
        romeon = 120;
        verify['SHINE_OFFSCREEN_OFFSET'] = romeon;
        verify['useReducedMotion'] = yankee;
        yankee = 56;
        verify['SHINE_WIDTH'] = yankee;
        yankee = oscard[offset];
        yankee = report.bind(tangon)(yankee);
        yankee = yankee.withRepeat;
        verify['withRepeat'] = yankee;
        yankee = oscard[offset];
        yankee = report.bind(tangon)(yankee);
        yankee = yankee.withSequence;
        verify['withSequence'] = yankee;
        yankee = 7;
        yankee = oscard[yankee];
        yankee = report.bind(tangon)(yankee);
        yankee = yankee.withTiming;
        verify['withTiming'] = yankee;
        offset = oscard[offset];
        offset = report.bind(tangon)(offset);
        offset = offset.withDelay;
        verify['withDelay'] = offset;
        offset = 750;
        verify['SHINE_INITIAL_ANIMATION_DELAY'] = offset;
        offset = 2000;
        verify['SHINE_ANIMATION_DURATION'] = offset;
        entity['__closure'] = verify;
        verify = 15814138938406.0;
        entity['__workletHash'] = verify;
        golfie = _closure1_slot6;
        entity['__initData'] = golfie;
        michal = michal.bind(zuuluu)(entity);
        entity = {};
        zuuluu = 8;
        zuuluu = oscard[zuuluu];
        oscard = report.bind(tangon)(zuuluu);
        report = oscard.createStyles;
        zuuluu = {};
        golfie = {'width': '100%', 'height': '200%', 'position': 'absolute', 'overflow': 'hidden'};
        zuuluu['shineContainer'] = golfie;
        golfie = {'width': 56, 'height': '500%', 'transform': null, 'backgroundColor': null, 'top': '-100%', 'alignItems': 'center'};
        offset = {};
        verify = '30deg';
        offset['rotate'] = verify;
        verify = new Array(1);
        verify[0] = offset;
        golfie['transform'] = verify;
        golfie['backgroundColor'] = option;
        zuuluu['shine'] = golfie;
        golfie = {'width': 16, 'height': '100%'};
        golfie['backgroundColor'] = option;
        zuuluu['shineInner'] = golfie;
        zuuluu = report.bind(oscard)(zuuluu);
        zuuluu = zuuluu.bind(tangon)();
        entity['shineStyles'] = zuuluu;
        entity['shineAnimatedStyle'] = michal;
        return entity;
    };
    var _closure1_slot7 = tangon;
    entity = global;
    offset = entity.Object;
    verify = offset.defineProperty;
    report = {};
    entity = true;
    report['value'] = entity;
    entity = '__esModule';
    entity = verify.bind(offset)(zuuluu, entity, report);
    entity = 0;
    report = golfie[entity];
    entity = undefined;
    report = option.bind(entity)(report);
    var _closure1_slot3 = report;
    report = 1;
    option = golfie[report];
    report = argCor;
    report = report.bind(entity)(option);
    var _closure1_slot4 = report;
    report = 2;
    report = golfie[report];
    report = oscard.bind(entity)(report);
    report = report.jsx;
    var _closure1_slot5 = report;
    report = {};
    option = "function ButtonShineNativeTsx1(){const{width,SHINE_OFFSCREEN_OFFSET,useReducedMotion,SHINE_WIDTH,withRepeat,withSequence,withTiming,withDelay,SHINE_INITIAL_ANIMATION_DELAY,SHINE_ANIMATION_DURATION}=this.__closure;if(width==null){return{transform:[{translateX:-SHINE_OFFSCREEN_OFFSET}]};}if(useReducedMotion){const centerOffset=(width-SHINE_WIDTH)/2;return{transform:[{translateX:centerOffset}]};}return{transform:[{translateX:withRepeat(withSequence(withTiming(-SHINE_OFFSCREEN_OFFSET,{duration:0},'animate-always'),withDelay(SHINE_INITIAL_ANIMATION_DELAY,withTiming(width+SHINE_OFFSCREEN_OFFSET,{duration:SHINE_ANIMATION_DURATION},'animate-always'))),-1)}]};}";
    report['code'] = option;
    var _closure1_slot6 = report;
    report = 9;
    report = golfie[report];
    golfie = oscard.bind(entity)(report);
    oscard = golfie.fileFinishedImporting;
    report = 'design/components/Button/native/ButtonShine.native.tsx';
    report = oscard.bind(golfie)(report);
    zuuluu['useShineEffectStyles'] = tangon;
    michal = function(argFoo) { // Original name: ButtonShine
        entity = argFoo;
        oscard = entity.variant;
        tangon = _closure1_slot4;
        zuuluu = tangon.useState;
        michal = null;
        golfie = zuuluu.bind(tangon)(michal);
        zuuluu = _closure1_slot3;
        tangon = undefined;
        michal = 2;
        golfie = zuuluu.bind(tangon)(golfie, michal);
        michal = 0;
        zuuluu = golfie[michal];
        michal = 1;
        michal = golfie[michal];
        var _closure2_slot0 = michal;
        michal = _closure1_slot7;
        michal = michal.bind(tangon)(zuuluu, oscard);
        verify = michal.shineStyles;
        oscard = michal.shineAnimatedStyle;
        zuuluu = _closure1_slot5;
        option = _closure1_slot1;
        offset = _closure1_slot2;
        golfie = 6;
        entity = offset[golfie];
        entity = option.bind(tangon)(entity);
        michal = entity.View;
        entity = {};
        report = function(argFoo) { // Original name: onLayout
            zuuluu = _closure2_slot0;
            entity = argFoo;
            entity = entity.nativeEvent;
            entity = entity.layout;
            michal = entity.width;
            entity = undefined;
            entity = zuuluu.bind(entity)(michal);
            return entity;
        };
        entity['onLayout'] = report;
        yankee = verify.shineContainer;
        report = new Array(2);
        report[0] = yankee;
        report[1] = oscard;
        entity['style'] = report;
        report = offset[golfie];
        report = option.bind(tangon)(report);
        oscard = report.View;
        report = {};
        yankee = verify.shine;
        report['style'] = yankee;
        golfie = offset[golfie];
        golfie = option.bind(tangon)(golfie);
        option = golfie.View;
        golfie = {};
        verify = verify.shineInner;
        golfie['style'] = verify;
        golfie = zuuluu.bind(tangon)(option, golfie);
        report['children'] = golfie;
        report = zuuluu.bind(tangon)(oscard, report);
        entity['children'] = report;
        entity = zuuluu.bind(tangon)(michal, entity);
        return entity;
    };
    zuuluu['ButtonShine'] = michal;
    return entity;
})();