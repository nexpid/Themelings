// app/design/components/Button/native/ButtonShine.native.tsx
export default (function(argFoo, argBar, argBaz, argCorge, _, argFred, argPlugh) {
    oscar = argBar;
    options = argBaz;
    zulu = argFred;
    golf = argPlugh;
    var _closure1_slot0 = oscar;
    var _closure1_slot1 = options;
    var _closure1_slot2 = golf;
    tango = function(argFoo, argBar) { // Original name: useShineEffectStyles
        romeo = argFoo;
        var _closure2_slot0 = romeo;
        report = _closure1_slot0;
        oscar = _closure1_slot2;
        mike = 3;
        mike = oscar[mike];
        tango = undefined;
        golf = report.bind(tango)(mike);
        zulu = golf.useButtonTextColorStyles;
        mike = argBar;
        mike = zulu.bind(golf)(mike);
        golf = _closure1_slot1;
        zulu = 4;
        zulu = oscar[zulu];
        zulu = golf.bind(tango)(zulu);
        mike = mike.color;
        golf = zulu.bind(tango)(mike);
        zulu = golf.alpha;
        mike = _closure1_slot11;
        zulu = zulu.bind(golf)(mike);
        mike = zulu.hex;
        options = mike.bind(zulu)();
        golf = _closure1_slot4;
        zulu = golf.useContext;
        mike = 5;
        mike = oscar[mike];
        mike = report.bind(tango)(mike);
        mike = mike.AccessibilityPreferencesContext;
        mike = zulu.bind(golf)(mike);
        mike = mike.reducedMotion;
        yankee = mike.enabled;
        var _closure2_slot1 = yankee;
        verify = 6;
        mike = oscar[verify];
        zulu = report.bind(tango)(mike);
        mike = zulu.useAnimatedStyle;
        entity = function() { // Original name: w
            _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
                mike = _closure2_slot0;
                entity = null;
                if(!(entity != mike)) { _fun00002_ip = 269; continue _fun00001 }
 16:
                entity = _closure2_slot1;
                mike = {};
                tango = {};
                if(entity) { _fun00002_ip = 228; continue _fun00001 }
 33:
                kilo = _closure1_slot0;
                sizing = _closure1_slot2;
                yankee = 6;
                entity = sizing[yankee];
                backup = undefined;
                options = kilo.bind(backup)(entity);
                golf = options.withRepeat;
                entity = sizing[yankee];
                offset = kilo.bind(backup)(entity);
                verify = offset.withSequence;
                entity = 7;
                oscar = sizing[entity];
                result = kilo.bind(backup)(oscar);
                foxtrot = result.withTiming;
                romeo = {};
                oscar = 0;
                romeo['duration'] = oscar;
                oscar = -120;
                output = 'animate-always';
                oscar = foxtrot.bind(result)(oscar, romeo, output);
                yankee = sizing[yankee];
                foxtrot = kilo.bind(backup)(yankee);
                romeo = foxtrot.withDelay;
                yankee = _closure1_slot7;
                entity = sizing[entity];
                sizing = kilo.bind(backup)(entity);
                kilo = sizing.withTiming;
                backup = _closure2_slot0;
                entity = _closure1_slot8;
                backup = backup + entity;
                entity = {};
                result = _closure1_slot6;
                entity['duration'] = result;
                entity = kilo.bind(sizing)(backup, entity, output);
                entity = romeo.bind(foxtrot)(yankee, entity);
                oscar = verify.bind(offset)(oscar, entity);
                entity = -1;
                entity = golf.bind(options)(oscar, entity);
                tango['translateX'] = entity;
                entity = new Array(1);
                entity[0] = tango;
                mike['transform'] = entity;
                entity = mike;
                _fun00002_ip = 267; continue _fun00001;
 228:
                report = _closure2_slot0;
                zulu = _closure1_slot9;
                report = report - zulu;
                zulu = 2;
                zulu = report / zulu;
                tango['translateX'] = zulu;
                zulu = new Array(1);
                zulu[0] = tango;
                mike['transform'] = zulu;
                entity = mike;
 267:
                _fun00002_ip = 299; continue _fun00001;
 269:
                mike = {};
                tango = {};
                zulu = -120;
                tango['translateX'] = zulu;
                zulu = new Array(1);
                zulu[0] = tango;
                mike['transform'] = zulu;
                entity = mike;
 299:
                return entity;
            }
        };
        golf = {};
        golf['width'] = romeo;
        romeo = _closure1_slot8;
        golf['SHINE_OFFSCREEN_OFFSET'] = romeo;
        golf['useReducedMotion'] = yankee;
        yankee = _closure1_slot9;
        golf['SHINE_WIDTH'] = yankee;
        yankee = oscar[verify];
        yankee = report.bind(tango)(yankee);
        yankee = yankee.withRepeat;
        golf['withRepeat'] = yankee;
        yankee = oscar[verify];
        yankee = report.bind(tango)(yankee);
        yankee = yankee.withSequence;
        golf['withSequence'] = yankee;
        yankee = 7;
        yankee = oscar[yankee];
        yankee = report.bind(tango)(yankee);
        yankee = yankee.withTiming;
        golf['withTiming'] = yankee;
        verify = oscar[verify];
        verify = report.bind(tango)(verify);
        verify = verify.withDelay;
        golf['withDelay'] = verify;
        verify = _closure1_slot7;
        golf['SHINE_INITIAL_ANIMATION_DELAY'] = verify;
        verify = _closure1_slot6;
        golf['SHINE_ANIMATION_DURATION'] = verify;
        entity['__closure'] = golf;
        golf = 15814138938406.0;
        entity['__workletHash'] = golf;
        golf = _closure1_slot12;
        entity['__initData'] = golf;
        mike = mike.bind(zulu)(entity);
        entity = {};
        zulu = 8;
        zulu = oscar[zulu];
        oscar = report.bind(tango)(zulu);
        report = oscar.createStyles;
        zulu = {};
        verify = '100%';
        golf = {'width': '100%', 'height': '200%', 'position': 'absolute', 'overflow': 'hidden'};
        zulu['shineContainer'] = golf;
        golf = {'width': null, 'height': '500%', 'transform': null, 'backgroundColor': null, 'top': '-100%', 'alignItems': 'center'};
        yankee = _closure1_slot9;
        golf['width'] = yankee;
        romeo = {};
        yankee = '30deg';
        romeo['rotate'] = yankee;
        yankee = new Array(1);
        yankee[0] = romeo;
        golf['transform'] = yankee;
        golf['backgroundColor'] = options;
        zulu['shine'] = golf;
        golf = {};
        offset = _closure1_slot10;
        golf['width'] = offset;
        golf['height'] = verify;
        golf['backgroundColor'] = options;
        zulu['shineInner'] = golf;
        zulu = report.bind(oscar)(zulu);
        zulu = zulu.bind(tango)();
        entity['shineStyles'] = zulu;
        entity['shineAnimatedStyle'] = mike;
        return entity;
    };
    var _closure1_slot13 = tango;
    entity = global;
    offset = entity.Object;
    verify = offset.defineProperty;
    report = {};
    entity = true;
    report['value'] = entity;
    entity = '__esModule';
    entity = verify.bind(offset)(zulu, entity, report);
    entity = 0;
    report = golf[entity];
    entity = undefined;
    report = options.bind(entity)(report);
    var _closure1_slot3 = report;
    report = 1;
    options = golf[report];
    report = argCorge;
    report = report.bind(entity)(options);
    var _closure1_slot4 = report;
    report = 2;
    report = golf[report];
    report = oscar.bind(entity)(report);
    report = report.jsx;
    var _closure1_slot5 = report;
    report = 2000;
    var _closure1_slot6 = report;
    report = 750;
    var _closure1_slot7 = report;
    report = 120;
    var _closure1_slot8 = report;
    report = 56;
    var _closure1_slot9 = report;
    report = 16;
    var _closure1_slot10 = report;
    report = 0.1;
    var _closure1_slot11 = report;
    report = {};
    options = "function ButtonShineNativeTsx1(){const{width,SHINE_OFFSCREEN_OFFSET,useReducedMotion,SHINE_WIDTH,withRepeat,withSequence,withTiming,withDelay,SHINE_INITIAL_ANIMATION_DELAY,SHINE_ANIMATION_DURATION}=this.__closure;if(width==null){return{transform:[{translateX:-SHINE_OFFSCREEN_OFFSET}]};}if(useReducedMotion){const centerOffset=(width-SHINE_WIDTH)/2;return{transform:[{translateX:centerOffset}]};}return{transform:[{translateX:withRepeat(withSequence(withTiming(-SHINE_OFFSCREEN_OFFSET,{duration:0},'animate-always'),withDelay(SHINE_INITIAL_ANIMATION_DELAY,withTiming(width+SHINE_OFFSCREEN_OFFSET,{duration:SHINE_ANIMATION_DURATION},'animate-always'))),-1)}]};}";
    report['code'] = options;
    var _closure1_slot12 = report;
    report = 9;
    report = golf[report];
    golf = oscar.bind(entity)(report);
    oscar = golf.fileFinishedImporting;
    report = 'design/components/Button/native/ButtonShine.native.tsx';
    report = oscar.bind(golf)(report);
    zulu['useShineEffectStyles'] = tango;
    mike = function(argFoo) { // Original name: ButtonShine
        entity = argFoo;
        oscar = entity.variant;
        tango = _closure1_slot4;
        zulu = tango.useState;
        mike = null;
        golf = zulu.bind(tango)(mike);
        zulu = _closure1_slot3;
        tango = undefined;
        mike = 2;
        golf = zulu.bind(tango)(golf, mike);
        mike = 0;
        zulu = golf[mike];
        mike = 1;
        mike = golf[mike];
        var _closure2_slot0 = mike;
        mike = _closure1_slot13;
        mike = mike.bind(tango)(zulu, oscar);
        verify = mike.shineStyles;
        oscar = mike.shineAnimatedStyle;
        zulu = _closure1_slot5;
        options = _closure1_slot1;
        offset = _closure1_slot2;
        golf = 6;
        entity = offset[golf];
        entity = options.bind(tango)(entity);
        mike = entity.View;
        entity = {};
        report = function(argFoo) { // Original name: onLayout
            zulu = _closure2_slot0;
            entity = argFoo;
            entity = entity.nativeEvent;
            entity = entity.layout;
            mike = entity.width;
            entity = undefined;
            entity = zulu.bind(entity)(mike);
            return entity;
        };
        entity['onLayout'] = report;
        yankee = verify.shineContainer;
        report = new Array(2);
        report[0] = yankee;
        report[1] = oscar;
        entity['style'] = report;
        report = offset[golf];
        report = options.bind(tango)(report);
        oscar = report.View;
        report = {};
        yankee = verify.shine;
        report['style'] = yankee;
        golf = offset[golf];
        golf = options.bind(tango)(golf);
        options = golf.View;
        golf = {};
        verify = verify.shineInner;
        golf['style'] = verify;
        golf = zulu.bind(tango)(options, golf);
        report['children'] = golf;
        report = zulu.bind(tango)(oscar, report);
        entity['children'] = report;
        entity = zulu.bind(tango)(mike, entity);
        return entity;
    };
    zulu['ButtonShine'] = mike;
    return entity;
})();