// app/design/components/Sheet/native/ActionSheetPresenter.native.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    report = argBar;
    golfie = argBaz;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    var _closure1_slot1 = golfie;
    var _closure1_slot2 = oscard;
    entity = global;
    verify = entity.Object;
    option = verify.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = option.bind(verify)(zuuluu, entity, tangon);
    entity = 0;
    tangon = oscard[entity];
    entity = undefined;
    tangon = golfie.bind(entity)(tangon);
    var _closure1_slot3 = tangon;
    tangon = 1;
    option = oscard[tangon];
    tangon = argCor;
    option = tangon.bind(entity)(option);
    var _closure1_slot4 = option;
    tangon = 2;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    verify = tangon.Modal;
    var _closure1_slot5 = verify;
    tangon = tangon.StyleSheet;
    var _closure1_slot6 = tangon;
    tangon = 3;
    tangon = oscard[tangon];
    tangon = golfie.bind(entity)(tangon);
    var _closure1_slot7 = tangon;
    tangon = 4;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.NOOP;
    var _closure1_slot8 = tangon;
    tangon = 5;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    golfie = tangon.jsx;
    var _closure1_slot9 = golfie;
    tangon = tangon.jsxs;
    var _closure1_slot10 = tangon;
    golfie = option.forwardRef;
    tangon = function(argFoo, argBar) {
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            michal = argFoo;
            backup = michal.sheetKey;
            var _closure2_slot0 = backup;
            foxtra = michal.content;
            sizing = michal.impressionName;
            romeon = michal.impressionProperties;
            yankee = _closure1_slot4;
            zuuluu = yankee.useState;
            michal = 'visible';
            report = zuuluu.bind(yankee)(michal);
            zuuluu = _closure1_slot3;
            tangon = undefined;
            michal = 2;
            zuuluu = zuuluu.bind(tangon)(report, michal);
            michal = 0;
            kiloes = zuuluu[michal];
            var _closure2_slot1 = kiloes;
            michal = 1;
            michal = zuuluu[michal];
            var _closure2_slot2 = michal;
            michal = yankee.useRef;
            report = _closure1_slot8;
            michal = michal.bind(yankee)(report);
            var _closure2_slot3 = michal;
            oscard = yankee.useCallback;
            zuuluu = function(argFoo) {
                michal = _closure2_slot3;
                entity = argFoo;
                michal['current'] = entity;
                entity = undefined;
                return entity;
            };
            michal = new Array(0);
            zuuluu = oscard.bind(yankee)(zuuluu, michal);
            var _closure2_slot4 = zuuluu;
            michal = yankee.useRef;
            michal = michal.bind(yankee)(report);
            var _closure2_slot5 = michal;
            oscard = yankee.useCallback;
            report = function() {
                michal = _closure2_slot5;
                entity = michal.current;
                entity = entity.bind(michal)();
                entity = undefined;
                return entity;
            };
            michal = new Array(0);
            offset = oscard.bind(yankee)(report, michal);
            var _closure2_slot6 = offset;
            michal = _closure1_slot1;
            golfie = _closure1_slot2;
            report = 6;
            report = golfie[report];
            option = michal.bind(tangon)(report);
            report = {};
            oscard = _closure1_slot0;
            output = 7;
            output = golfie[output];
            output = oscard.bind(tangon)(output);
            output = output.ImpressionTypes;
            output = output.HALFSHEET;
            report['type'] = output;
            report['name'] = sizing;
            report['properties'] = romeon;
            report = option.bind(tangon)(report);
            sizing = yankee.useImperativeHandle;
            romeon = argBar;
            option = function() {
                entity = {};
                zuuluu = function() { // Original name: componentDidEnter
                    zuuluu = _closure2_slot2;
                    entity = undefined;
                    michal = 'visible';
                    michal = zuuluu.bind(entity)(michal);
                    return entity;
                };
                entity['componentDidEnter'] = zuuluu;
                zuuluu = function(argFoo) { // Original name: componentWillLeave
                    tangon = _closure2_slot2;
                    entity = undefined;
                    zuuluu = 'exiting';
                    zuuluu = tangon.bind(entity)(zuuluu);
                    zuuluu = _closure2_slot5;
                    michal = argFoo;
                    zuuluu['current'] = michal;
                    return entity;
                };
                entity['componentWillLeave'] = zuuluu;
                michal = function() { // Original name: componentDidLeave
                    tangon = _closure2_slot2;
                    entity = undefined;
                    zuuluu = 'exited';
                    zuuluu = tangon.bind(entity)(zuuluu);
                    zuuluu = _closure2_slot5;
                    michal = _closure1_slot8;
                    zuuluu['current'] = michal;
                    return entity;
                };
                entity['componentDidLeave'] = michal;
                return entity;
            };
            report = new Array(0);
            report = sizing.bind(yankee)(romeon, option, report);
            romeon = yankee.useCallback;
            option = new Array(1);
            option[0] = backup;
            report = function() {
                zuuluu = _closure1_slot1;
                michal = _closure1_slot2;
                entity = 8;
                michal = michal[entity];
                entity = undefined;
                tangon = zuuluu.bind(entity)(michal);
                zuuluu = tangon.hideActionSheet;
                michal = _closure2_slot0;
                michal = zuuluu.bind(tangon)(michal);
                return entity;
            };
            romeon = romeon.bind(yankee)(report, option);
            var _closure2_slot7 = romeon;
            option = yankee.useMemo;
            report = new Array(4);
            report[0] = kiloes;
            report[1] = romeon;
            report[2] = offset;
            report[3] = zuuluu;
            zuuluu = function() {
                entity = {};
                zuuluu = _closure2_slot1;
                entity['transitionState'] = zuuluu;
                zuuluu = _closure2_slot7;
                entity['close'] = zuuluu;
                zuuluu = _closure2_slot6;
                entity['onLeave'] = zuuluu;
                michal = _closure2_slot4;
                entity['registerDismissHandler'] = michal;
                return entity;
            };
            report = option.bind(yankee)(zuuluu, report);
            zuuluu = _closure1_slot9;
            option = 9;
            option = golfie[option];
            option = oscard.bind(tangon)(option);
            offset = option.Dialog;
            option = {};
            option['dialogKey'] = backup;
            option['onDismiss'] = romeon;
            option['children'] = foxtra;
            foxtra = zuuluu.bind(tangon)(offset, option);
            offset = yankee.useCallback;
            option = new Array(1);
            option[0] = romeon;
            entity = function() {
                _fun00003: for(var _fun00004_ip = 0; ; ) switch(_fun00004_ip) {
 0:
                    michal = _closure2_slot3;
                    zuuluu = michal.current;
                    michal = null;
                    if(!(michal != zuuluu)) { _fun00004_ip = 31; continue _fun00003 }
 18:
                    zuuluu = _closure2_slot3;
                    michal = zuuluu.current;
                    michal = michal.bind(zuuluu)();
 31:
                    michal = _closure2_slot7;
                    entity = undefined;
                    michal = michal.bind(entity)();
                    return entity;
                }
            };
            offset = offset.bind(yankee)(entity, option);
            entity = 10;
            entity = golfie[entity];
            entity = michal.bind(tangon)(entity);
            michal = entity.Provider;
            entity = {};
            entity['value'] = report;
            report = 11;
            report = golfie[report];
            oscard = oscard.bind(tangon)(report);
            report = oscard.isAndroid;
            oscard = report.bind(oscard)();
            report = foxtra;
            if(!oscard) { _fun00002_ip = 586; continue _fun00001 }
 448:
            option = _closure1_slot9;
            golfie = _closure1_slot5;
            oscard = {'transparent': true, 'statusBarTranslucent': true, 'animationType': 'none'};
            sizing = _closure1_slot6;
            yankee = sizing.absoluteFill;
            oscard['style'] = yankee;
            oscard['onRequestClose'] = offset;
            yankee = _closure1_slot10;
            backup = _closure1_slot0;
            kiloes = _closure1_slot2;
            verify = 12;
            verify = kiloes[verify];
            verify = backup.bind(tangon)(verify);
            offset = verify.GestureHandlerRootView;
            verify = {};
            sizing = sizing.absoluteFill;
            verify['style'] = sizing;
            verify['onAccessibilityEscape'] = romeon;
            romeon = new Array(2);
            romeon[0] = foxtra;
            foxtra = 13;
            foxtra = kiloes[foxtra];
            foxtra = backup.bind(tangon)(foxtra);
            foxtra = foxtra.MOVED_TO_ACTION_SHEET_ON_ANDROID_COMPONENTS;
            romeon[1] = foxtra;
            verify['children'] = romeon;
            verify = yankee.bind(tangon)(offset, verify);
            oscard['children'] = verify;
            report = option.bind(tangon)(golfie, oscard);
 586:
            entity['children'] = report;
            entity = zuuluu.bind(tangon)(michal, entity);
            return entity;
        }
    };
    tangon = golfie.bind(option)(tangon);
    var _closure1_slot11 = tangon;
    tangon = 17;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'design/components/Sheet/native/ActionSheetPresenter.native.tsx';
    tangon = report.bind(oscard)(tangon);
    michal = function() { // Original name: ActionSheetPresenter
        golfie = _closure1_slot0;
        option = _closure1_slot2;
        michal = 14;
        michal = option[michal];
        tangon = undefined;
        offset = golfie.bind(tangon)(michal);
        verify = offset.useStateFromStoresArray;
        michal = _closure1_slot7;
        report = new Array(1);
        report[0] = michal;
        zuuluu = function() {
            michal = _closure1_slot7;
            entity = michal.getStack;
            entity = entity.bind(michal)();
            return entity;
        };
        michal = new Array(0);
        zuuluu = verify.bind(offset)(report, zuuluu, michal);
        michal = zuuluu.map;
        entity = function(argFoo) {
            entity = argFoo;
            golfie = entity.content;
            report = entity.key;
            oscard = entity.impressionName;
            entity = entity.impressionProperties;
            tangon = _closure1_slot9;
            zuuluu = _closure1_slot11;
            michal = {};
            michal['sheetKey'] = report;
            michal['content'] = golfie;
            michal['impressionName'] = oscard;
            michal['impressionProperties'] = entity;
            entity = undefined;
            entity = tangon.bind(entity)(zuuluu, michal, report);
            return entity;
        };
        report = michal.bind(zuuluu)(entity);
        zuuluu = _closure1_slot9;
        entity = 15;
        entity = option[entity];
        entity = golfie.bind(tangon)(entity);
        michal = entity.TransitionGroup;
        entity = {};
        oscard = _closure1_slot6;
        oscard = oscard.absoluteFill;
        entity['style'] = oscard;
        oscard = 16;
        oscard = option[oscard];
        oscard = golfie.bind(tangon)(oscard);
        oscard = oscard.TransitionGroupOverlayView;
        entity['component'] = oscard;
        entity['children'] = report;
        entity = zuuluu.bind(tangon)(michal, entity);
        return entity;
    };
    zuuluu['ActionSheetPresenter'] = michal;
    return entity;
})();