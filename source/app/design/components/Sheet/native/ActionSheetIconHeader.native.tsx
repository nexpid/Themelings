// app/design/components/Sheet/native/ActionSheetIconHeader.native.tsx
export default (function(argFoo, argBar, _, argCor, __, argFre, argPlu) {
    report = argBar;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    var _closure1_slot1 = oscard;
    entity = global;
    option = entity.Object;
    golfie = option.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(option)(zuuluu, entity, tangon);
    entity = 0;
    golfie = oscard[entity];
    tangon = argCor;
    entity = undefined;
    tangon = tangon.bind(entity)(golfie);
    tangon = 1;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.View;
    var _closure1_slot2 = tangon;
    tangon = 2;
    golfie = oscard[tangon];
    golfie = report.bind(entity)(golfie);
    golfie = golfie.jsx;
    var _closure1_slot3 = golfie;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.jsxs;
    var _closure1_slot4 = tangon;
    tangon = 3;
    tangon = oscard[tangon];
    option = report.bind(entity)(tangon);
    golfie = option.createStyles;
    tangon = {};
    verify = {'paddingVertical': 0, 'flexDirection': 'row', 'alignItems': 'center', 'gap': 12};
    tangon['container'] = verify;
    verify = {'justifyContent': 'center', 'flex': 1};
    tangon['titles'] = verify;
    tangon = golfie.bind(option)(tangon);
    var _closure1_slot5 = tangon;
    tangon = 5;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'design/components/Sheet/native/ActionSheetIconHeader.native.tsx';
    tangon = report.bind(oscard)(tangon);
    michal = function(argFoo) { // Original name: ActionSheetIconHeader
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            entity = argFoo;
            yankee = entity.title;
            romeon = entity.subtitle;
            oscard = entity.icon;
            entity = _closure1_slot5;
            tangon = undefined;
            golfie = entity.bind(tangon)();
            zuuluu = _closure1_slot4;
            michal = _closure1_slot2;
            entity = {};
            report = golfie.container;
            entity['style'] = report;
            offset = _closure1_slot3;
            report = {};
            report['children'] = oscard;
            oscard = offset.bind(tangon)(michal, report);
            report = new Array(2);
            report[0] = oscard;
            oscard = {};
            golfie = golfie.titles;
            oscard['style'] = golfie;
            option = _closure1_slot0;
            golfie = _closure1_slot1;
            foxtra = 4;
            golfie = golfie[foxtra];
            golfie = option.bind(tangon)(golfie);
            option = golfie.Text;
            golfie = {'variant': 'redesign/heading-18/bold', 'color': 'header-primary', 'accessibilityRole': 'header', 'lineClamp': 2};
            golfie['children'] = yankee;
            option = offset.bind(tangon)(option, golfie);
            golfie = new Array(2);
            golfie[0] = option;
            option = null;
            offset = option != romeon;
            if(!offset) { _fun00002_ip = 203; continue _fun00001 }
 153:
            yankee = _closure1_slot3;
            offset = _closure1_slot0;
            verify = _closure1_slot1;
            verify = verify[foxtra];
            verify = offset.bind(tangon)(verify);
            offset = verify.Text;
            verify = {'variant': 'text-xs/medium', 'color': 'header-secondary'};
            verify['children'] = romeon;
            option = yankee.bind(tangon)(offset, verify);
 203:
            golfie[1] = option;
            oscard['children'] = golfie;
            oscard = zuuluu.bind(tangon)(michal, oscard);
            report[1] = oscard;
            entity['children'] = report;
            entity = zuuluu.bind(tangon)(michal, entity);
            return entity;
        }
    };
    zuuluu['ActionSheetIconHeader'] = michal;
    return entity;
})();