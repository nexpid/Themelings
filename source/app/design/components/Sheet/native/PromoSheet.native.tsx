// app/design/components/Sheet/native/PromoSheet.native.tsx
export default (function(argFoo, argBar, _, argCorge, __, argFred, argPlugh) {
    report = argBar;
    zulu = argFred;
    oscar = argPlugh;
    var _closure1_slot0 = report;
    var _closure1_slot1 = oscar;
    entity = global;
    options = entity.Object;
    golf = options.defineProperty;
    tango = {};
    entity = true;
    tango['value'] = entity;
    entity = '__esModule';
    entity = golf.bind(options)(zulu, entity, tango);
    entity = 0;
    golf = oscar[entity];
    tango = argCorge;
    entity = undefined;
    tango = tango.bind(entity)(golf);
    tango = 1;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.View;
    var _closure1_slot2 = tango;
    tango = 2;
    golf = oscar[tango];
    golf = report.bind(entity)(golf);
    golf = golf.jsx;
    var _closure1_slot3 = golf;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.jsxs;
    var _closure1_slot4 = tango;
    tango = 3;
    tango = oscar[tango];
    options = report.bind(entity)(tango);
    golf = options.createStyles;
    tango = {};
    verify = {};
    offset = 20;
    verify['paddingHorizontal'] = offset;
    tango['content'] = verify;
    verify = {};
    offset = 'center';
    verify['textAlign'] = offset;
    tango['title'] = verify;
    verify = {};
    verify['textAlign'] = offset;
    tango['description'] = verify;
    verify = {'alignSelf': 'stretch', 'alignItems': 'center'};
    tango['illustration'] = verify;
    tango = golf.bind(options)(tango);
    var _closure1_slot5 = tango;
    tango = 7;
    tango = oscar[tango];
    oscar = report.bind(entity)(tango);
    report = oscar.fileFinishedImporting;
    tango = 'design/components/Sheet/native/PromoSheet.native.tsx';
    tango = report.bind(oscar)(tango);
    mike = function(argFoo) { // Original name: PromoSheet
        _fun48757: for(var _fun48757_ip = 0; ; ) switch(_fun48757_ip) {
 0:
            zulu = argFoo;
            source = zulu.title;
            result = zulu.description;
            sizing = zulu.illustration;
            verify = zulu.actions;
            mike = {'title': 0, 'description': 0, 'illustration': 0, 'actions': 0};
            backup = null;
            config = mike;
            sequence = null;
            entity = silentSetPrototypeOf(config, sequence);
            config = {};
            sequence = zulu;
            vacuum = mike;
            sequence = copyDataProperties(config, sequence, vacuum);
            entity = _closure1_slot5;
            tango = undefined;
            echo = entity.bind(tango)();
            zulu = _closure1_slot3;
            oscar = _closure1_slot0;
            report = _closure1_slot1;
            entity = 4;
            entity = report[entity];
            entity = oscar.bind(tango)(entity);
            mike = entity.BottomSheet;
            entity = {};
            config = entity;
            golf = copyDataProperties(config, sequence);
            options = true;
            golf = 'startExpanded';
            entity[golf] = options;
            options = echo.content;
            golf = 'contentStyles';
            entity[golf] = options;
            golf = _closure1_slot4;
            offset = 5;
            report = report[offset];
            report = oscar.bind(tango)(report);
            oscar = report.Stack;
            report = {};
            options = 24;
            report['spacing'] = options;
            options = backup != sizing;
            yankee = null;
            if(!options) { _fun48757_ip = 205; continue _fun48757 }
 175:
            foxtrot = _closure1_slot3;
            romeo = _closure1_slot2;
            options = {};
            output = echo.illustration;
            options['style'] = output;
            options['children'] = sizing;
            yankee = foxtrot.bind(tango)(romeo, options);
 205:
            options = new Array(3);
            options[0] = yankee;
            romeo = _closure1_slot4;
            sizing = _closure1_slot0;
            foxtrot = _closure1_slot1;
            offset = foxtrot[offset];
            offset = sizing.bind(tango)(offset);
            yankee = offset.Stack;
            offset = {};
            output = _closure1_slot3;
            update = 6;
            foxtrot = foxtrot[update];
            foxtrot = sizing.bind(tango)(foxtrot);
            sizing = foxtrot.Text;
            foxtrot = {'variant': 'heading-xl/bold', 'color': 'header-primary'};
            control = echo.title;
            foxtrot['style'] = control;
            foxtrot['children'] = source;
            sizing = output.bind(tango)(sizing, foxtrot);
            foxtrot = new Array(2);
            foxtrot[0] = sizing;
            sizing = backup != result;
            backup = null;
            if(!sizing) { _fun48757_ip = 368; continue _fun48757 }
 313:
            output = _closure1_slot3;
            sizing = _closure1_slot0;
            kilo = _closure1_slot1;
            kilo = kilo[update];
            kilo = sizing.bind(tango)(kilo);
            sizing = kilo.Text;
            kilo = {};
            update = 'text-md/medium';
            kilo['variant'] = update;
            echo = echo.description;
            kilo['style'] = echo;
            kilo['children'] = result;
            backup = output.bind(tango)(sizing, kilo);
 368:
            foxtrot[1] = backup;
            offset['children'] = foxtrot;
            offset = romeo.bind(tango)(yankee, offset);
            options[1] = offset;
            options[2] = verify;
            report['children'] = options;
            oscar = golf.bind(tango)(oscar, report);
            report = 'children';
            entity[report] = oscar;
            entity = zulu.bind(tango)(mike, entity);
            return entity;
        }
    };
    zulu['PromoSheet'] = mike;
    return entity;
})();