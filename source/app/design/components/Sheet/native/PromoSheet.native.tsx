// app/design/components/Sheet/native/PromoSheet.native.tsx
export default (function(argFoo, argBar, _, argCor, __, argFre, argPlu) {
    report = argBar;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    var _closure1_slot1 = oscard;
    entity = global;
    option = entity.Object;
    golfie = option.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(option)(zuuluu, entity, tangon);
    entity = 0;
    golfie = oscard[entity];
    tangon = argCor;
    entity = undefined;
    tangon = tangon.bind(entity)(golfie);
    tangon = 1;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.View;
    var _closure1_slot2 = tangon;
    tangon = 2;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    golfie = tangon.jsx;
    var _closure1_slot3 = golfie;
    tangon = tangon.jsxs;
    var _closure1_slot4 = tangon;
    tangon = 3;
    tangon = oscard[tangon];
    option = report.bind(entity)(tangon);
    golfie = option.createStyles;
    tangon = {};
    verify = {};
    offset = 20;
    verify['paddingHorizontal'] = offset;
    tangon['content'] = verify;
    verify = {};
    offset = 'center';
    verify['textAlign'] = offset;
    tangon['title'] = verify;
    verify = {};
    verify['textAlign'] = offset;
    tangon['description'] = verify;
    verify = {'alignSelf': 'stretch', 'alignItems': 'center'};
    tangon['illustration'] = verify;
    tangon = golfie.bind(option)(tangon);
    var _closure1_slot5 = tangon;
    tangon = 7;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'design/components/Sheet/native/PromoSheet.native.tsx';
    tangon = report.bind(oscard)(tangon);
    michal = function(argFoo) { // Original name: PromoSheet
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            zuuluu = argFoo;
            source = zuuluu.title;
            result = zuuluu.description;
            sizing = zuuluu.illustration;
            verify = zuuluu.actions;
            michal = {'title': 0, 'description': 0, 'illustration': 0, 'actions': 0};
            backup = null;
            config = michal;
            sequen = null;
            entity = silentSetPrototypeOf(config, sequen);
            config = {};
            sequen = zuuluu;
            vacuum = michal;
            sequen = copyDataProperties(config, sequen, vacuum);
            entity = _closure1_slot5;
            tangon = undefined;
            echoed = entity.bind(tangon)();
            zuuluu = _closure1_slot3;
            oscard = _closure1_slot0;
            report = _closure1_slot1;
            entity = 4;
            entity = report[entity];
            entity = oscard.bind(tangon)(entity);
            michal = entity.BottomSheet;
            entity = {};
            config = entity;
            golfie = copyDataProperties(config, sequen);
            option = true;
            golfie = 'startExpanded';
            entity[golfie] = option;
            option = echoed.content;
            golfie = 'contentStyles';
            entity[golfie] = option;
            golfie = _closure1_slot4;
            offset = 5;
            report = report[offset];
            report = oscard.bind(tangon)(report);
            oscard = report.Stack;
            report = {};
            option = 24;
            report['spacing'] = option;
            option = backup != sizing;
            yankee = null;
            if(!option) { _fun00002_ip = 205; continue _fun00001 }
 175:
            foxtra = _closure1_slot3;
            romeon = _closure1_slot2;
            option = {};
            output = echoed.illustration;
            option['style'] = output;
            option['children'] = sizing;
            yankee = foxtra.bind(tangon)(romeon, option);
 205:
            option = new Array(3);
            option[0] = yankee;
            romeon = _closure1_slot4;
            sizing = _closure1_slot0;
            foxtra = _closure1_slot1;
            offset = foxtra[offset];
            offset = sizing.bind(tangon)(offset);
            yankee = offset.Stack;
            offset = {};
            output = _closure1_slot3;
            update = 6;
            foxtra = foxtra[update];
            foxtra = sizing.bind(tangon)(foxtra);
            sizing = foxtra.Text;
            foxtra = {'variant': 'heading-xl/bold', 'color': 'header-primary'};
            ctrled = echoed.title;
            foxtra['style'] = ctrled;
            foxtra['children'] = source;
            sizing = output.bind(tangon)(sizing, foxtra);
            foxtra = new Array(2);
            foxtra[0] = sizing;
            sizing = backup != result;
            backup = null;
            if(!sizing) { _fun00002_ip = 368; continue _fun00001 }
 313:
            output = _closure1_slot3;
            sizing = _closure1_slot0;
            kiloes = _closure1_slot1;
            kiloes = kiloes[update];
            kiloes = sizing.bind(tangon)(kiloes);
            sizing = kiloes.Text;
            kiloes = {};
            update = 'text-md/medium';
            kiloes['variant'] = update;
            echoed = echoed.description;
            kiloes['style'] = echoed;
            kiloes['children'] = result;
            backup = output.bind(tangon)(sizing, kiloes);
 368:
            foxtra[1] = backup;
            offset['children'] = foxtra;
            offset = romeon.bind(tangon)(yankee, offset);
            option[1] = offset;
            option[2] = verify;
            report['children'] = option;
            oscard = golfie.bind(tangon)(oscard, report);
            report = 'children';
            entity[report] = oscard;
            entity = zuuluu.bind(tangon)(michal, entity);
            return entity;
        }
    };
    zuuluu['PromoSheet'] = michal;
    return entity;
})();