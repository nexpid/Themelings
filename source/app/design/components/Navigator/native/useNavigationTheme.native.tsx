// app/design/components/Navigator/native/useNavigationTheme.native.tsx
export default (function(argFoo, argBar, argBaz, argCorge, _, argFred, argPlugh) {
    report = argBar;
    zulu = argFred;
    oscar = argPlugh;
    var _closure1_slot0 = report;
    entity = argBaz;
    var _closure1_slot1 = entity;
    var _closure1_slot2 = oscar;
    entity = global;
    options = entity.Object;
    golf = options.defineProperty;
    tango = {};
    entity = true;
    tango['value'] = entity;
    entity = '__esModule';
    entity = golf.bind(options)(zulu, entity, tango);
    entity = 0;
    golf = oscar[entity];
    tango = argCorge;
    entity = undefined;
    tango = tango.bind(entity)(golf);
    var _closure1_slot3 = tango;
    tango = 4;
    tango = oscar[tango];
    oscar = report.bind(entity)(tango);
    report = oscar.fileFinishedImporting;
    tango = 'design/components/Navigator/native/useNavigationTheme.native.tsx';
    tango = report.bind(oscar)(tango);
    mike = function(argFoo) {
        report = argFoo;
        var _closure2_slot0 = report;
        options = _closure1_slot0;
        foxtrot = _closure1_slot2;
        tango = 1;
        zulu = foxtrot[tango];
        romeo = undefined;
        verify = options.bind(romeo)(zulu);
        golf = verify.useToken;
        yankee = _closure1_slot1;
        zulu = 2;
        oscar = foxtrot[zulu];
        oscar = yankee.bind(romeo)(oscar);
        oscar = oscar.colors;
        oscar = oscar.TEXT_PRIMARY;
        golf = golf.bind(verify)(oscar, report);
        var _closure2_slot1 = golf;
        oscar = foxtrot[tango];
        offset = options.bind(romeo)(oscar);
        verify = offset.useToken;
        oscar = foxtrot[zulu];
        oscar = yankee.bind(romeo)(oscar);
        oscar = oscar.colors;
        oscar = oscar.BORDER_SUBTLE;
        offset = verify.bind(offset)(oscar, report);
        var _closure2_slot2 = offset;
        oscar = foxtrot[tango];
        backup = options.bind(romeo)(oscar);
        verify = backup.useToken;
        oscar = foxtrot[zulu];
        oscar = yankee.bind(romeo)(oscar);
        oscar = oscar.colors;
        oscar = oscar.BG_BASE_SECONDARY;
        verify = verify.bind(backup)(oscar, report);
        var _closure2_slot3 = verify;
        oscar = foxtrot[tango];
        kilo = options.bind(romeo)(oscar);
        backup = kilo.useToken;
        oscar = foxtrot[zulu];
        oscar = yankee.bind(romeo)(oscar);
        oscar = oscar.colors;
        oscar = oscar.TEXT_MUTED;
        oscar = backup.bind(kilo)(oscar, report);
        var _closure2_slot4 = oscar;
        tango = foxtrot[tango];
        options = options.bind(romeo)(tango);
        tango = options.useToken;
        zulu = foxtrot[zulu];
        zulu = yankee.bind(romeo)(zulu);
        zulu = zulu.colors;
        zulu = zulu.STATUS_DANGER;
        options = tango.bind(options)(zulu, report);
        var _closure2_slot5 = options;
        tango = _closure1_slot3;
        zulu = tango.useMemo;
        mike = new Array(6);
        mike[0] = offset;
        mike[1] = verify;
        mike[2] = options;
        mike[3] = golf;
        mike[4] = oscar;
        mike[5] = report;
        entity = function() {
            entity = {};
            tango = _closure1_slot0;
            zulu = _closure1_slot2;
            mike = 3;
            zulu = zulu[mike];
            mike = undefined;
            report = tango.bind(mike)(zulu);
            tango = report.isThemeDark;
            mike = _closure2_slot0;
            mike = tango.bind(report)(mike);
            entity['dark'] = mike;
            mike = {};
            tango = _closure2_slot1;
            mike['primary'] = tango;
            tango = 'transparent';
            mike['background'] = tango;
            tango = _closure2_slot2;
            mike['border'] = tango;
            tango = _closure2_slot3;
            mike['card'] = tango;
            tango = _closure2_slot4;
            mike['text'] = tango;
            zulu = _closure2_slot5;
            mike['notification'] = zulu;
            entity['colors'] = mike;
            return entity;
        };
        entity = zulu.bind(tango)(entity, mike);
        return entity;
    };
    zulu['useNavigationTheme'] = mike;
    return entity;
})();