// app/design/components/Navigator/native/SceneLoadingIndicator.native.tsx
export default (function(_, argBar, argBaz, argCor, __, argFre, argPlu) {
    report = argBar;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    entity = argBaz;
    var _closure1_slot1 = entity;
    var _closure1_slot2 = oscard;
    entity = global;
    option = entity.Object;
    golfie = option.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(option)(zuuluu, entity, tangon);
    entity = 0;
    golfie = oscard[entity];
    tangon = argCor;
    entity = undefined;
    tangon = tangon.bind(entity)(golfie);
    tangon = 1;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    golfie = tangon.View;
    var _closure1_slot3 = golfie;
    golfie = tangon.ActivityIndicator;
    var _closure1_slot4 = golfie;
    option = tangon.StyleSheet;
    tangon = 2;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    golfie = tangon.jsx;
    var _closure1_slot5 = golfie;
    tangon = tangon.jsxs;
    var _closure1_slot6 = tangon;
    golfie = option.create;
    tangon = {};
    verify = {'flex': 1, 'paddingTop': 40};
    tangon['loadingContainer'] = verify;
    tangon = golfie.bind(option)(tangon);
    var _closure1_slot7 = tangon;
    tangon = 5;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'design/components/Navigator/native/SceneLoadingIndicator.native.tsx';
    tangon = report.bind(oscard)(tangon);
    michal = function() { // Original name: SceneLoadingIndicator
        tangon = _closure1_slot6;
        zuuluu = _closure1_slot3;
        michal = {};
        entity = _closure1_slot7;
        entity = entity.loadingContainer;
        michal['style'] = entity;
        option = _closure1_slot5;
        golfie = _closure1_slot4;
        report = {'animating': true, 'color': null, 'size': 'large'};
        yankee = _closure1_slot1;
        verify = _closure1_slot2;
        entity = 3;
        offset = verify[entity];
        entity = undefined;
        offset = yankee.bind(entity)(offset);
        offset = offset.unsafe_rawColors;
        offset = offset.BRAND_500;
        report['color'] = offset;
        golfie = option.bind(entity)(golfie, report);
        report = new Array(2);
        report[0] = golfie;
        golfie = _closure1_slot0;
        oscard = 4;
        oscard = verify[oscard];
        oscard = golfie.bind(entity)(oscard);
        golfie = oscard.NavScrim;
        oscard = {};
        oscard = option.bind(entity)(golfie, oscard);
        report[1] = oscard;
        michal['children'] = report;
        entity = tangon.bind(entity)(zuuluu, michal);
        return entity;
    };
    zuuluu['SceneLoadingIndicator'] = michal;
    return entity;
})();