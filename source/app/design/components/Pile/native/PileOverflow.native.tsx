// app/design/components/Pile/native/PileOverflow.native.tsx
export default (function(argFoo, argBar, argBaz, argCorge, _, argFred, argPlugh) {
    report = argBar;
    romeo = argBaz;
    zulu = argFred;
    oscar = argPlugh;
    var _closure1_slot0 = report;
    var _closure1_slot1 = oscar;
    tango = global;
    verify = tango.Object;
    options = verify.defineProperty;
    golf = {};
    entity = true;
    golf['value'] = entity;
    entity = '__esModule';
    entity = options.bind(verify)(zulu, entity, golf);
    entity = 0;
    options = oscar[entity];
    golf = argCorge;
    entity = undefined;
    golf = golf.bind(entity)(options);
    golf = 1;
    golf = oscar[golf];
    golf = report.bind(entity)(golf);
    golf = golf.View;
    var _closure1_slot2 = golf;
    golf = 2;
    golf = oscar[golf];
    golf = romeo.bind(entity)(golf);
    var _closure1_slot3 = golf;
    golf = 3;
    options = oscar[golf];
    options = report.bind(entity)(options);
    options = options.jsxs;
    var _closure1_slot4 = options;
    golf = oscar[golf];
    golf = report.bind(entity)(golf);
    golf = golf.jsx;
    var _closure1_slot5 = golf;
    golf = 4;
    golf = oscar[golf];
    verify = report.bind(entity)(golf);
    options = verify.createStyles;
    golf = {};
    offset = {'alignItems': 'center', 'justifyContent': 'center', 'backgroundColor': null, 'flexShrink': 0};
    yankee = 5;
    yankee = oscar[yankee];
    yankee = romeo.bind(entity)(yankee);
    yankee = yankee.colors;
    yankee = yankee.BG_MOD_STRONG;
    offset['backgroundColor'] = yankee;
    golf['container'] = offset;
    golf = options.bind(verify)(golf);
    var _closure1_slot6 = golf;
    options = tango.Map;
    tango = new Array(6);
    golf = [64, 'text-lg/semibold'];
    tango[0] = golf;
    golf = [48, 'text-md/semibold'];
    tango[1] = golf;
    golf = [40, 'text-md/semibold'];
    tango[2] = golf;
    golf = [30, 'text-sm/semibold'];
    tango[3] = golf;
    golf = [24, 'text-xs/semibold'];
    tango[4] = golf;
    golf = [16, 'text-xxs/semibold'];
    tango[5] = golf;
    golf = options.prototype;
    golf = Object.create(golf, {constructor: {value: options}});
    sizing = golf;
    kilo = tango;
    tango = new sizing[options](kilo, backup);
    tango = tango instanceof Object ? tango : golf;
    var _closure1_slot7 = tango;
    tango = 9;
    tango = oscar[tango];
    oscar = report.bind(entity)(tango);
    report = oscar.fileFinishedImporting;
    tango = 'design/components/Pile/native/PileOverflow.native.tsx';
    tango = report.bind(oscar)(tango);
    mike = function(argFoo) { // Original name: PileOverflow
        _fun80100: for(var _fun80100_ip = 0; ; ) switch(_fun80100_ip) {
 0:
            entity = argFoo;
            foxtrot = entity.size;
            golf = entity.borderRadius;
            yankee = entity.value;
            mike = _closure1_slot0;
            zulu = _closure1_slot1;
            entity = 6;
            entity = zulu[entity];
            tango = undefined;
            report = mike.bind(tango)(entity);
            zulu = report.useStateFromStores;
            entity = _closure1_slot3;
            mike = new Array(1);
            mike[0] = entity;
            entity = function() {
                entity = _closure1_slot3;
                entity = entity.locale;
                return entity;
            };
            offset = zulu.bind(report)(mike, entity);
            entity = _closure1_slot6;
            report = entity.bind(tango)();
            zulu = _closure1_slot5;
            mike = _closure1_slot2;
            entity = {};
            oscar = report.container;
            report = new Array(2);
            report[0] = oscar;
            oscar = {};
            oscar['borderRadius'] = golf;
            oscar['minWidth'] = foxtrot;
            oscar['height'] = foxtrot;
            golf = 32;
            verify = foxtrot >= golf;
            golf = 4;
            if(!verify) { _fun80100_ip = 137; continue _fun80100 }
 134:
            golf = 8;
 137:
            oscar['paddingHorizontal'] = golf;
            report[1] = oscar;
            entity['style'] = report;
            golf = _closure1_slot4;
            oscar = _closure1_slot0;
            verify = _closure1_slot1;
            report = 7;
            report = verify[report];
            report = oscar.bind(tango)(report);
            oscar = report.Text;
            report = {'lineClamp': 1, 'maxFontSizeMultiplier': 2};
            romeo = _closure1_slot7;
            verify = romeo.get;
            romeo = verify.bind(romeo)(foxtrot);
            verify = null;
            foxtrot = verify != romeo;
            verify = 'text-md/semibold';
            if(!foxtrot) { _fun80100_ip = 218; continue _fun80100 }
 215:
            verify = romeo;
 218:
            report['variant'] = verify;
            verify = _closure1_slot0;
            romeo = _closure1_slot1;
            options = 8;
            options = romeo[options];
            verify = verify.bind(tango)(options);
            options = verify.humanizeValue;
            verify = options.bind(verify)(yankee, offset);
            options = ['+'];
            options[1] = verify;
            report['children'] = options;
            report = golf.bind(tango)(oscar, report);
            entity['children'] = report;
            entity = zulu.bind(tango)(mike, entity);
            return entity;
        }
    };
    zulu['PileOverflow'] = mike;
    return entity;
})();