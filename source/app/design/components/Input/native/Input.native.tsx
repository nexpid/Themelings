// app/design/components/Input/native/Input.native.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    report = argBar;
    yankee = argBaz;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    var _closure1_slot1 = oscard;
    entity = global;
    option = entity.Object;
    golfie = option.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(option)(zuuluu, entity, tangon);
    entity = 0;
    golfie = oscard[entity];
    tangon = argCor;
    entity = undefined;
    tangon = tangon.bind(entity)(golfie);
    tangon = 1;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.View;
    var _closure1_slot2 = tangon;
    tangon = 2;
    golfie = oscard[tangon];
    golfie = report.bind(entity)(golfie);
    golfie = golfie.jsx;
    var _closure1_slot3 = golfie;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.jsxs;
    var _closure1_slot4 = tangon;
    tangon = 3;
    tangon = oscard[tangon];
    option = report.bind(entity)(tangon);
    golfie = option.createStyles;
    tangon = {};
    verify = {};
    offset = 'row';
    verify['flexDirection'] = offset;
    offset = 4;
    romeon = oscard[offset];
    romeon = yankee.bind(entity)(romeon);
    romeon = romeon.spacing;
    romeon = romeon.PX_8;
    verify['gap'] = romeon;
    romeon = oscard[offset];
    romeon = yankee.bind(entity)(romeon);
    romeon = romeon.spacing;
    romeon = romeon.PX_4;
    verify['marginTop'] = romeon;
    romeon = oscard[offset];
    romeon = yankee.bind(entity)(romeon);
    romeon = romeon.spacing;
    romeon = romeon.PX_4;
    verify['marginBottom'] = romeon;
    tangon['inputRow'] = verify;
    verify = {};
    romeon = oscard[offset];
    romeon = yankee.bind(entity)(romeon);
    romeon = romeon.spacing;
    romeon = romeon.PX_4;
    verify['marginBottom'] = romeon;
    tangon['label'] = verify;
    verify = {};
    romeon = oscard[offset];
    romeon = yankee.bind(entity)(romeon);
    romeon = romeon.spacing;
    romeon = romeon.PX_4;
    verify['marginTop'] = romeon;
    tangon['description'] = verify;
    verify = {};
    offset = oscard[offset];
    offset = yankee.bind(entity)(offset);
    offset = offset.spacing;
    offset = offset.PX_4;
    verify['marginTop'] = offset;
    offset = 'auto';
    verify['width'] = offset;
    tangon['error'] = verify;
    tangon = golfie.bind(option)(tangon);
    var _closure1_slot5 = tangon;
    tangon = 7;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'design/components/Input/native/Input.native.tsx';
    tangon = report.bind(oscard)(tangon);
    michal = function(argFoo) { // Original name: Input
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            entity = argFoo;
            michal = _closure1_slot5;
            tangon = undefined;
            yankee = michal.bind(tangon)();
            kiloes = entity.label;
            sizing = entity.labelId;
            backup = entity.description;
            offset = entity.errorMessage;
            foxtra = entity.children;
            report = entity.containerStyle;
            zuuluu = _closure1_slot4;
            michal = _closure1_slot2;
            entity = {};
            entity['style'] = report;
            oscard = null;
            report = oscard != kiloes;
            option = null;
            if(!report) { _fun00002_ip = 141; continue _fun00001 }
 74:
            romeon = _closure1_slot3;
            verify = _closure1_slot0;
            output = _closure1_slot1;
            report = 5;
            report = output[report];
            report = verify.bind(tangon)(report);
            verify = report.Text;
            report = {'variant': 'text-sm/semibold', 'color': 'text-secondary'};
            output = yankee.label;
            report['style'] = output;
            report['nativeID'] = sizing;
            report['children'] = kiloes;
            option = romeon.bind(tangon)(verify, report);
 141:
            report = new Array(4);
            report[0] = option;
            romeon = _closure1_slot3;
            verify = _closure1_slot2;
            option = {};
            kiloes = yankee.inputRow;
            option['style'] = kiloes;
            option['children'] = foxtra;
            option = romeon.bind(tangon)(verify, option);
            report[1] = option;
            verify = oscard != backup;
            option = null;
            if(!verify) { _fun00002_ip = 254; continue _fun00001 }
 192:
            foxtra = _closure1_slot3;
            romeon = _closure1_slot0;
            kiloes = _closure1_slot1;
            verify = 5;
            verify = kiloes[verify];
            verify = romeon.bind(tangon)(verify);
            romeon = verify.Text;
            verify = {'variant': 'text-xs/medium', 'color': 'text-muted'};
            kiloes = yankee.description;
            verify['style'] = kiloes;
            verify['children'] = backup;
            option = foxtra.bind(tangon)(romeon, verify);
 254:
            report[2] = option;
            option = oscard != offset;
            oscard = null;
            if(!option) { _fun00002_ip = 318; continue _fun00001 }
 267:
            verify = _closure1_slot3;
            option = _closure1_slot0;
            romeon = _closure1_slot1;
            golfie = 6;
            golfie = romeon[golfie];
            golfie = option.bind(tangon)(golfie);
            option = golfie.ErrorText;
            golfie = {};
            yankee = yankee.error;
            golfie['style'] = yankee;
            golfie['children'] = offset;
            oscard = verify.bind(tangon)(option, golfie);
 318:
            report[3] = oscard;
            entity['children'] = report;
            entity = zuuluu.bind(tangon)(michal, entity);
            return entity;
        }
    };
    zuuluu['Input'] = michal;
    return entity;
})();