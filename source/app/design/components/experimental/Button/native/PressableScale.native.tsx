// app/design/components/experimental/Button/native/PressableScale.native.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    report = argBar;
    option = argBaz;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    var _closure1_slot1 = oscard;
    entity = ['style'];
    var _closure1_slot2 = entity;
    entity = global;
    verify = entity.Object;
    golfie = verify.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(verify)(zuuluu, entity, tangon);
    entity = 0;
    tangon = oscard[entity];
    entity = undefined;
    tangon = option.bind(entity)(tangon);
    var _closure1_slot3 = tangon;
    tangon = 1;
    golfie = oscard[tangon];
    tangon = argCor;
    golfie = tangon.bind(entity)(golfie);
    tangon = 2;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    verify = tangon.Pressable;
    tangon = 3;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.jsx;
    var _closure1_slot4 = tangon;
    tangon = 4;
    tangon = oscard[tangon];
    option = option.bind(entity)(tangon);
    tangon = option.createAnimatedComponent;
    tangon = tangon.bind(option)(verify);
    var _closure1_slot5 = tangon;
    tangon = golfie.forwardRef;
    michal = function(argFoo, argBar) {
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            zuuluu = argFoo;
            report = zuuluu.style;
            yankee = zuuluu.scaleAmountInPx;
            tangon = undefined;
            if(!(yankee === tangon)) { _fun00002_ip = 23; continue _fun00001 }
 20:
            yankee = 8;
 23:
            offset = zuuluu.onLayout;
            kiloes = zuuluu.onPressIn;
            backup = zuuluu.onPressOut;
            michal = {'style': 0, 'scaleAmountInPx': 0, 'onLayout': 0, 'onPressIn': 0, 'onPressOut': 0};
            output = null;
            result = michal;
            entity = silentSetPrototypeOf(result, output);
            foxtra = 0;
            result = {};
            output = zuuluu;
            sizing = michal;
            oscard = copyDataProperties(result, output, sizing);
            zuuluu = _closure1_slot0;
            romeon = _closure1_slot1;
            michal = 4;
            michal = romeon[michal];
            golfie = zuuluu.bind(tangon)(michal);
            michal = golfie.useSharedValue;
            golfie = michal.bind(golfie)(foxtra);
            michal = 5;
            michal = romeon[michal];
            zuuluu = zuuluu.bind(tangon)(michal);
            michal = zuuluu.useButtonPressAnimationProps;
            echoed = zuuluu;
            result = golfie;
            output = yankee;
            sizing = offset;
            option = echoed[michal](result, output, sizing, kiloes, backup, foxtra);
            golfie = option.style;
            zuuluu = _closure1_slot3;
            michal = _closure1_slot2;
            output = zuuluu.bind(tangon)(option, michal);
            zuuluu = _closure1_slot4;
            michal = _closure1_slot5;
            entity = {};
            result = entity;
            option = copyDataProperties(result, output);
            result = entity;
            output = oscard;
            oscard = copyDataProperties(result, output);
            option = argBar;
            oscard = 'ref';
            entity[oscard] = option;
            option = 'button';
            oscard = 'accessibilityRole';
            entity[oscard] = option;
            oscard = new Array(2);
            oscard[0] = golfie;
            oscard[1] = report;
            report = 'style';
            entity[report] = oscard;
            entity = zuuluu.bind(tangon)(michal, entity);
            return entity;
        }
    };
    michal = tangon.bind(golfie)(michal);
    tangon = 6;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'design/components/experimental/Button/native/PressableScale.native.tsx';
    tangon = report.bind(oscard)(tangon);
    zuuluu['PressableScale'] = michal;
    return entity;
})();