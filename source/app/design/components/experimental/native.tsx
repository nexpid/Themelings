// app/design/components/experimental/native.tsx
export default (function(_, argBar, __, ___, ____, argFre, argPlu) {
    report = argBar;
    zuuluu = argFre;
    oscard = argPlu;
    entity = global;
    golfie = entity.Object;
    tangon = golfie.defineProperty;
    michal = {};
    entity = true;
    michal['value'] = entity;
    entity = '__esModule';
    entity = tangon.bind(golfie)(zuuluu, entity, michal);
    entity = 0;
    michal = oscard[entity];
    entity = undefined;
    michal = report.bind(entity)(michal);
    michal = michal.DRAG_HANDLE_HEIGHT;
    tangon = 1;
    tangon = oscard[tangon];
    option = report.bind(entity)(tangon);
    golfie = option.fileFinishedImporting;
    tangon = 'design/components/experimental/native.tsx';
    tangon = golfie.bind(option)(tangon);
    tangon = 2;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.TwinButtons;
    zuuluu['TwinButtons'] = tangon;
    tangon = 3;
    golfie = oscard[tangon];
    golfie = report.bind(entity)(golfie);
    golfie = golfie.HeaderButton;
    zuuluu['HeaderButton'] = golfie;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.HeaderButtonProps;
    zuuluu['HeaderButtonProps'] = tangon;
    tangon = 4;
    golfie = oscard[tangon];
    golfie = report.bind(entity)(golfie);
    golfie = golfie.InputButton;
    zuuluu['InputButton'] = golfie;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.InputButtonProps;
    zuuluu['InputButtonProps'] = tangon;
    tangon = 5;
    golfie = oscard[tangon];
    golfie = report.bind(entity)(golfie);
    golfie = golfie.PressableScale;
    zuuluu['PressableScale'] = golfie;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.PressableScaleProps;
    zuuluu['PressableScaleProps'] = tangon;
    tangon = 6;
    golfie = oscard[tangon];
    golfie = report.bind(entity)(golfie);
    golfie = golfie.CollapsibleFloatingActionButton;
    zuuluu['CollapsibleFloatingActionButton'] = golfie;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.CollapsibleFloatingActionButtonProps;
    zuuluu['CollapsibleFloatingActionButtonProps'] = tangon;
    tangon = 7;
    golfie = oscard[tangon];
    golfie = report.bind(entity)(golfie);
    golfie = golfie.useCollapsibleFloatingActionButtonState;
    zuuluu['useCollapsibleFloatingActionButtonState'] = golfie;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.useCollapsibleFloatingActionButtonScroll;
    zuuluu['useCollapsibleFloatingActionButtonScroll'] = tangon;
    tangon = 8;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.BackgroundBlurView;
    zuuluu['BackgroundBlurView'] = tangon;
    tangon = 9;
    golfie = oscard[tangon];
    golfie = report.bind(entity)(golfie);
    golfie = golfie.BackgroundBlurFill;
    zuuluu['BackgroundBlurFill'] = golfie;
    golfie = oscard[tangon];
    golfie = report.bind(entity)(golfie);
    golfie = golfie.BackgroundBlurFillAnimated;
    zuuluu['BackgroundBlurFillAnimated'] = golfie;
    golfie = oscard[tangon];
    golfie = report.bind(entity)(golfie);
    golfie = golfie.BlurTheme;
    zuuluu['BlurTheme'] = golfie;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.BlurStyle;
    zuuluu['BlurStyle'] = tangon;
    tangon = 10;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.AnimatedPressableHighlight;
    zuuluu['AnimatedPressableHighlight'] = tangon;
    tangon = 11;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.ActionSheetDragHandle;
    zuuluu['ActionSheetDragHandle'] = tangon;
    zuuluu['ACTION_SHEET_DRAG_HANDLE_HEIGHT'] = michal;
    return entity;
})();