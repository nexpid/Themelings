// app/design/components/Forms/native/FormRadio.native.tsx
export default (function(argFoo, argBar, argBaz, argCorge, _, argFred, argPlugh) {
    report = argBar;
    yankee = argBaz;
    zulu = argFred;
    oscar = argPlugh;
    var _closure1_slot0 = report;
    var _closure1_slot1 = yankee;
    var _closure1_slot2 = oscar;
    entity = global;
    options = entity.Object;
    golf = options.defineProperty;
    tango = {};
    entity = true;
    tango['value'] = entity;
    entity = '__esModule';
    entity = golf.bind(options)(zulu, entity, tango);
    entity = 0;
    golf = oscar[entity];
    tango = argCorge;
    entity = undefined;
    tango = tango.bind(entity)(golf);
    var _closure1_slot3 = tango;
    tango = 1;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.jsx;
    var _closure1_slot4 = tango;
    tango = 2;
    tango = oscar[tango];
    options = report.bind(entity)(tango);
    golf = options.createStyles;
    tango = {};
    verify = {'width': 24, 'height': 24, 'flexGrow': 0, 'flexShrink': 0, 'alignItems': 'center', 'justifyContent': 'center', 'borderRadius': null, 'borderWidth': 2};
    offset = 3;
    romeo = oscar[offset];
    romeo = yankee.bind(entity)(romeo);
    romeo = romeo.radii;
    romeo = romeo.round;
    verify['borderRadius'] = romeo;
    romeo = oscar[offset];
    romeo = yankee.bind(entity)(romeo);
    romeo = romeo.colors;
    romeo = romeo.INTERACTIVE_NORMAL;
    verify['borderColor'] = romeo;
    tango['radio'] = verify;
    verify = {};
    romeo = 'transparent';
    verify['backgroundColor'] = romeo;
    romeo = oscar[offset];
    romeo = yankee.bind(entity)(romeo);
    romeo = romeo.colors;
    romeo = romeo.INTERACTIVE_NORMAL;
    verify['borderColor'] = romeo;
    tango['unselected'] = verify;
    verify = {};
    romeo = oscar[offset];
    romeo = yankee.bind(entity)(romeo);
    romeo = romeo.colors;
    romeo = romeo.REDESIGN_INPUT_CONTROL_SELECTED;
    verify['borderColor'] = romeo;
    romeo = oscar[offset];
    romeo = yankee.bind(entity)(romeo);
    romeo = romeo.colors;
    romeo = romeo.REDESIGN_INPUT_CONTROL_SELECTED;
    verify['backgroundColor'] = romeo;
    tango['selected'] = verify;
    verify = {'width': 10, 'height': 10};
    romeo = oscar[offset];
    romeo = yankee.bind(entity)(romeo);
    romeo = romeo.colors;
    romeo = romeo.WHITE;
    verify['backgroundColor'] = romeo;
    offset = oscar[offset];
    offset = yankee.bind(entity)(offset);
    offset = offset.radii;
    offset = offset.round;
    verify['borderRadius'] = offset;
    tango['dot'] = verify;
    tango = golf.bind(options)(tango);
    var _closure1_slot5 = tango;
    tango = {};
    golf = "function FormRadioNativeTsx1(){const{withSpring,selected,selectedStyles,unselectedStyles,SUBTLE_SPRING}=this.__closure;const defaultAnimation={borderColor:withSpring(selected?selectedStyles.borderColor:unselectedStyles.borderColor,SUBTLE_SPRING,'animate-always'),backgroundColor:withSpring(selected?selectedStyles.backgroundColor:unselectedStyles.backgroundColor,SUBTLE_SPRING,'animate-always')};return defaultAnimation;}";
    tango['code'] = golf;
    var _closure1_slot6 = tango;
    tango = {};
    golf = "function FormRadioNativeTsx2(){const{withSpring,selected,SUBTLE_SPRING,useReducedMotion}=this.__closure;const defaultAnimation={opacity:withSpring(selected?1:0,SUBTLE_SPRING,'animate-always')};if(useReducedMotion){return defaultAnimation;}return{...defaultAnimation,transform:[{scale:withSpring(selected?1:0.5,SUBTLE_SPRING)}]};}";
    tango['code'] = golf;
    var _closure1_slot7 = tango;
    tango = 8;
    tango = oscar[tango];
    oscar = report.bind(entity)(tango);
    report = oscar.fileFinishedImporting;
    tango = 'design/components/Forms/native/FormRadio.native.tsx';
    tango = report.bind(oscar)(tango);
    mike = function(argFoo) { // Original name: FormRadio
        entity = argFoo;
        report = entity.selected;
        zulu = _closure1_slot5;
        tango = undefined;
        golf = zulu.bind(tango)();
        options = _closure1_slot3;
        oscar = options.useContext;
        offset = _closure1_slot0;
        verify = _closure1_slot2;
        zulu = 4;
        zulu = verify[zulu];
        zulu = offset.bind(tango)(zulu);
        zulu = zulu.AccessibilityPreferencesContext;
        zulu = oscar.bind(options)(zulu);
        zulu = zulu.reducedMotion;
        zulu = zulu.enabled;
        oscar = function(argFoo) { // Original name: useRadioStyles
            yankee = argFoo;
            var _closure3_slot0 = yankee;
            mike = _closure1_slot5;
            options = undefined;
            mike = mike.bind(options)();
            offset = mike.selected;
            var _closure3_slot1 = offset;
            oscar = mike.unselected;
            var _closure3_slot2 = oscar;
            golf = _closure1_slot0;
            verify = _closure1_slot2;
            mike = 5;
            mike = verify[mike];
            zulu = golf.bind(options)(mike);
            mike = zulu.useAnimatedStyle;
            entity = function() { // Original name: u
                _fun63774: for(var _fun63774_ip = 0; ; ) switch(_fun63774_ip) {
 0:
                    entity = {};
                    tango = _closure1_slot0;
                    zulu = _closure1_slot2;
                    report = 6;
                    zulu = zulu[report];
                    options = undefined;
                    foxtrot = tango.bind(options)(zulu);
                    romeo = foxtrot.withSpring;
                    zulu = _closure3_slot0;
                    if(zulu) { _fun63774_ip = 54; continue _fun63774 }
 42:
                    zulu = _closure3_slot2;
                    yankee = zulu.borderColor;
                    _fun63774_ip = 64; continue _fun63774;
 54:
                    zulu = _closure3_slot1;
                    yankee = zulu.borderColor;
 64:
                    tango = _closure1_slot0;
                    zulu = _closure1_slot2;
                    verify = 7;
                    oscar = zulu[verify];
                    oscar = tango.bind(options)(oscar);
                    offset = oscar.SUBTLE_SPRING;
                    oscar = 'animate-always';
                    offset = romeo.bind(foxtrot)(yankee, offset, oscar);
                    entity['borderColor'] = offset;
                    zulu = zulu[report];
                    report = tango.bind(options)(zulu);
                    tango = report.withSpring;
                    zulu = _closure3_slot0;
                    if(zulu) { _fun63774_ip = 140; continue _fun63774 }
 129:
                    zulu = _closure3_slot2;
                    zulu = zulu.backgroundColor;
                    _fun63774_ip = 149; continue _fun63774;
 140:
                    golf = _closure3_slot1;
                    zulu = golf.backgroundColor;
 149:
                    golf = _closure1_slot0;
                    mike = _closure1_slot2;
                    mike = mike[verify];
                    mike = golf.bind(options)(mike);
                    mike = mike.SUBTLE_SPRING;
                    mike = tango.bind(report)(zulu, mike, oscar);
                    entity['backgroundColor'] = mike;
                    return entity;
                }
            };
            report = {};
            romeo = 6;
            romeo = verify[romeo];
            romeo = golf.bind(options)(romeo);
            romeo = romeo.withSpring;
            report['withSpring'] = romeo;
            report['selected'] = yankee;
            report['selectedStyles'] = offset;
            report['unselectedStyles'] = oscar;
            oscar = 7;
            oscar = verify[oscar];
            oscar = golf.bind(options)(oscar);
            oscar = oscar.SUBTLE_SPRING;
            report['SUBTLE_SPRING'] = oscar;
            entity['__closure'] = report;
            report = 10943552903194.0;
            entity['__workletHash'] = report;
            tango = _closure1_slot6;
            entity['__initData'] = tango;
            entity = mike.bind(zulu)(entity);
            return entity;
        };
        yankee = oscar.bind(tango)(report);
        mike = function(argFoo, argBar) { // Original name: useRadioDotStyles
            oscar = argFoo;
            golf = argBar;
            var _closure3_slot0 = oscar;
            var _closure3_slot1 = golf;
            verify = _closure1_slot0;
            offset = _closure1_slot2;
            mike = 5;
            mike = offset[mike];
            options = undefined;
            zulu = verify.bind(options)(mike);
            mike = zulu.useAnimatedStyle;
            entity = function() { // Original name: n
                _fun63776: for(var _fun63776_ip = 0; ; ) switch(_fun63776_ip) {
 0:
                    zulu = {};
                    mike = _closure1_slot0;
                    entity = _closure1_slot2;
                    options = 6;
                    entity = entity[options];
                    verify = undefined;
                    yankee = mike.bind(verify)(entity);
                    golf = yankee.withSpring;
                    entity = _closure3_slot1;
                    oscar = 0;
                    if(!entity) { _fun63776_ip = 47; continue _fun63776 }
 44:
                    oscar = 1;
 47:
                    mike = _closure1_slot0;
                    entity = _closure1_slot2;
                    offset = 7;
                    entity = entity[offset];
                    entity = mike.bind(verify)(entity);
                    mike = entity.SUBTLE_SPRING;
                    entity = 'animate-always';
                    entity = golf.bind(yankee)(oscar, mike, entity);
                    zulu['opacity'] = entity;
                    mike = _closure3_slot0;
                    entity = zulu;
                    if(mike) { _fun63776_ip = 210; continue _fun63776 }
 100:
                    mike = {};
                    backup = mike;
                    foxtrot = zulu;
                    zulu = copyDataProperties(backup, foxtrot);
                    zulu = {};
                    golf = _closure1_slot0;
                    oscar = _closure1_slot2;
                    oscar = oscar[options];
                    golf = golf.bind(verify)(oscar);
                    oscar = golf.withSpring;
                    options = _closure3_slot1;
                    report = 0.5;
                    if(!options) { _fun63776_ip = 156; continue _fun63776 }
 153:
                    report = 1;
 156:
                    options = _closure1_slot0;
                    tango = _closure1_slot2;
                    tango = tango[offset];
                    tango = options.bind(verify)(tango);
                    tango = tango.SUBTLE_SPRING;
                    tango = oscar.bind(golf)(report, tango);
                    zulu['scale'] = tango;
                    tango = new Array(1);
                    tango[0] = zulu;
                    zulu = 'transform';
                    mike[zulu] = tango;
                    entity = mike;
 210:
                    return entity;
                }
            };
            report = {};
            yankee = 6;
            yankee = offset[yankee];
            yankee = verify.bind(options)(yankee);
            yankee = yankee.withSpring;
            report['withSpring'] = yankee;
            report['selected'] = golf;
            golf = 7;
            golf = offset[golf];
            golf = verify.bind(options)(golf);
            golf = golf.SUBTLE_SPRING;
            report['SUBTLE_SPRING'] = golf;
            report['useReducedMotion'] = oscar;
            entity['__closure'] = report;
            report = 1030512229703.0;
            entity['__workletHash'] = report;
            tango = _closure1_slot7;
            entity['__initData'] = tango;
            entity = mike.bind(zulu)(entity);
            return entity;
        };
        options = mike.bind(tango)(zulu, report);
        zulu = _closure1_slot4;
        oscar = _closure1_slot1;
        report = 5;
        entity = verify[report];
        entity = oscar.bind(tango)(entity);
        mike = entity.View;
        entity = {};
        romeo = golf.radio;
        offset = new Array(2);
        offset[0] = romeo;
        offset[1] = yankee;
        entity['style'] = offset;
        report = verify[report];
        report = oscar.bind(tango)(report);
        oscar = report.View;
        report = {};
        verify = golf.dot;
        golf = new Array(2);
        golf[0] = verify;
        golf[1] = options;
        report['style'] = golf;
        report = zulu.bind(tango)(oscar, report);
        entity['children'] = report;
        entity = zulu.bind(tango)(mike, entity);
        return entity;
    };
    zulu['FormRadio'] = mike;
    return entity;
})();