// app/design/components/Forms/native/FormCheckbox.native.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    report = argBar;
    verify = argBaz;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    var _closure1_slot1 = verify;
    var _closure1_slot2 = oscard;
    entity = global;
    option = entity.Object;
    golfie = option.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(option)(zuuluu, entity, tangon);
    entity = 0;
    golfie = oscard[entity];
    tangon = argCor;
    entity = undefined;
    tangon = tangon.bind(entity)(golfie);
    var _closure1_slot3 = tangon;
    tangon = 1;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.jsx;
    var _closure1_slot4 = tangon;
    tangon = 2;
    tangon = oscard[tangon];
    option = report.bind(entity)(tangon);
    golfie = option.createStyles;
    tangon = {};
    offset = {'width': 24, 'height': 24, 'flexGrow': 0, 'flexShrink': 0, 'alignItems': 'center', 'justifyContent': 'center', 'borderRadius': null, 'borderWidth': 2};
    yankee = 3;
    romeon = oscard[yankee];
    romeon = verify.bind(entity)(romeon);
    romeon = romeon.radii;
    romeon = romeon.sm;
    offset['borderRadius'] = romeon;
    romeon = oscard[yankee];
    romeon = verify.bind(entity)(romeon);
    romeon = romeon.colors;
    romeon = romeon.INTERACTIVE_NORMAL;
    offset['borderColor'] = romeon;
    tangon['checkbox'] = offset;
    offset = {};
    romeon = 'transparent';
    offset['backgroundColor'] = romeon;
    romeon = oscard[yankee];
    romeon = verify.bind(entity)(romeon);
    romeon = romeon.colors;
    romeon = romeon.INTERACTIVE_NORMAL;
    offset['borderColor'] = romeon;
    tangon['unselected'] = offset;
    offset = {};
    romeon = oscard[yankee];
    romeon = verify.bind(entity)(romeon);
    romeon = romeon.colors;
    romeon = romeon.REDESIGN_INPUT_CONTROL_SELECTED;
    offset['borderColor'] = romeon;
    romeon = oscard[yankee];
    romeon = verify.bind(entity)(romeon);
    romeon = romeon.colors;
    romeon = romeon.REDESIGN_INPUT_CONTROL_SELECTED;
    offset['backgroundColor'] = romeon;
    tangon['selected'] = offset;
    offset = {};
    yankee = oscard[yankee];
    yankee = verify.bind(entity)(yankee);
    yankee = yankee.colors;
    yankee = yankee.WHITE;
    offset['tintColor'] = yankee;
    tangon['checkmark'] = offset;
    tangon = golfie.bind(option)(tangon);
    var _closure1_slot5 = tangon;
    tangon = 4;
    tangon = oscard[tangon];
    option = verify.bind(entity)(tangon);
    golfie = option.createAnimatedComponent;
    tangon = 5;
    tangon = oscard[tangon];
    tangon = verify.bind(entity)(tangon);
    tangon = golfie.bind(option)(tangon);
    var _closure1_slot6 = tangon;
    tangon = {};
    golfie = "function FormCheckboxNativeTsx1(){const{withSpring,checked,selected,unselected,SUBTLE_SPRING}=this.__closure;const defaultAnimation={borderColor:withSpring(checked?selected.borderColor:unselected.borderColor,SUBTLE_SPRING,'animate-always'),backgroundColor:withSpring(checked?selected.backgroundColor:unselected.backgroundColor,SUBTLE_SPRING,'animate-always')};return defaultAnimation;}";
    tangon['code'] = golfie;
    var _closure1_slot7 = tangon;
    tangon = {};
    golfie = "function FormCheckboxNativeTsx2(){const{useReducedMotion,withSpring,checked,SUBTLE_SPRING}=this.__closure;const uncheckedScale=useReducedMotion?1:0.5;return{opacity:withSpring(checked?1:0,SUBTLE_SPRING,'animate-always'),transform:[{scale:withSpring(checked?1:uncheckedScale,SUBTLE_SPRING)}]};}";
    tangon['code'] = golfie;
    var _closure1_slot8 = tangon;
    tangon = 10;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'design/components/Forms/native/FormCheckbox.native.tsx';
    tangon = report.bind(oscard)(tangon);
    michal = function(argFoo) { // Original name: FormCheckbox
        michal = argFoo;
        zuuluu = michal.checked;
        michal = _closure1_slot5;
        tangon = undefined;
        golfie = michal.bind(tangon)();
        option = _closure1_slot3;
        oscard = option.useContext;
        verify = _closure1_slot0;
        yankee = _closure1_slot2;
        michal = 6;
        michal = yankee[michal];
        michal = verify.bind(tangon)(michal);
        michal = michal.AccessibilityPreferencesContext;
        michal = oscard.bind(option)(michal);
        michal = michal.reducedMotion;
        michal = michal.enabled;
        oscard = function(argFoo) { // Original name: useCheckboxStyles
            yankee = argFoo;
            var _closure3_slot0 = yankee;
            michal = _closure1_slot5;
            option = undefined;
            michal = michal.bind(option)();
            offset = michal.selected;
            var _closure3_slot1 = offset;
            oscard = michal.unselected;
            var _closure3_slot2 = oscard;
            golfie = _closure1_slot0;
            verify = _closure1_slot2;
            michal = 4;
            michal = verify[michal];
            zuuluu = golfie.bind(option)(michal);
            michal = zuuluu.useAnimatedStyle;
            entity = function() { // Original name: S
                _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
                    entity = {};
                    tangon = _closure1_slot0;
                    zuuluu = _closure1_slot2;
                    report = 8;
                    zuuluu = zuuluu[report];
                    option = undefined;
                    foxtra = tangon.bind(option)(zuuluu);
                    romeon = foxtra.withSpring;
                    zuuluu = _closure3_slot0;
                    if(zuuluu) { _fun00002_ip = 54; continue _fun00001 }
 42:
                    zuuluu = _closure3_slot2;
                    yankee = zuuluu.borderColor;
                    _fun00002_ip = 64; continue _fun00001;
 54:
                    zuuluu = _closure3_slot1;
                    yankee = zuuluu.borderColor;
 64:
                    tangon = _closure1_slot0;
                    zuuluu = _closure1_slot2;
                    verify = 9;
                    oscard = zuuluu[verify];
                    oscard = tangon.bind(option)(oscard);
                    offset = oscard.SUBTLE_SPRING;
                    oscard = 'animate-always';
                    offset = romeon.bind(foxtra)(yankee, offset, oscard);
                    entity['borderColor'] = offset;
                    zuuluu = zuuluu[report];
                    report = tangon.bind(option)(zuuluu);
                    tangon = report.withSpring;
                    zuuluu = _closure3_slot0;
                    if(zuuluu) { _fun00002_ip = 140; continue _fun00001 }
 129:
                    zuuluu = _closure3_slot2;
                    zuuluu = zuuluu.backgroundColor;
                    _fun00002_ip = 149; continue _fun00001;
 140:
                    golfie = _closure3_slot1;
                    zuuluu = golfie.backgroundColor;
 149:
                    golfie = _closure1_slot0;
                    michal = _closure1_slot2;
                    michal = michal[verify];
                    michal = golfie.bind(option)(michal);
                    michal = michal.SUBTLE_SPRING;
                    michal = tangon.bind(report)(zuuluu, michal, oscard);
                    entity['backgroundColor'] = michal;
                    return entity;
                }
            };
            report = {};
            romeon = 8;
            romeon = verify[romeon];
            romeon = golfie.bind(option)(romeon);
            romeon = romeon.withSpring;
            report['withSpring'] = romeon;
            report['checked'] = yankee;
            report['selected'] = offset;
            report['unselected'] = oscard;
            oscard = 9;
            oscard = verify[oscard];
            oscard = golfie.bind(option)(oscard);
            oscard = oscard.SUBTLE_SPRING;
            report['SUBTLE_SPRING'] = oscard;
            entity['__closure'] = report;
            report = 11278373524374.0;
            entity['__workletHash'] = report;
            tangon = _closure1_slot7;
            entity['__initData'] = tangon;
            entity = michal.bind(zuuluu)(entity);
            return entity;
        };
        verify = oscard.bind(tangon)(zuuluu);
        entity = function(argFoo, argBar) { // Original name: useCheckmarkStyles
            offset = argFoo;
            oscard = argBar;
            var _closure3_slot0 = offset;
            var _closure3_slot1 = oscard;
            option = _closure1_slot0;
            verify = _closure1_slot2;
            michal = 4;
            michal = verify[michal];
            golfie = undefined;
            zuuluu = option.bind(golfie)(michal);
            michal = zuuluu.useAnimatedStyle;
            entity = function() { // Original name: c
                _fun00003: for(var _fun00004_ip = 0; ; ) switch(_fun00004_ip) {
 0:
                    entity = _closure3_slot0;
                    golfie = 0.5;
                    if(!entity) { _fun00004_ip = 23; continue _fun00003 }
 20:
                    golfie = 1;
 23:
                    entity = {};
                    report = _closure1_slot0;
                    zuuluu = _closure1_slot2;
                    offset = 8;
                    zuuluu = zuuluu[offset];
                    option = undefined;
                    backup = report.bind(option)(zuuluu);
                    foxtra = backup.withSpring;
                    zuuluu = _closure3_slot1;
                    romeon = 0;
                    if(!zuuluu) { _fun00004_ip = 67; continue _fun00003 }
 64:
                    romeon = 1;
 67:
                    oscard = _closure1_slot0;
                    report = _closure1_slot2;
                    verify = 9;
                    zuuluu = report[verify];
                    zuuluu = oscard.bind(option)(zuuluu);
                    yankee = zuuluu.SUBTLE_SPRING;
                    zuuluu = 'animate-always';
                    zuuluu = foxtra.bind(backup)(romeon, yankee, zuuluu);
                    entity['opacity'] = zuuluu;
                    zuuluu = {};
                    report = report[offset];
                    oscard = oscard.bind(option)(report);
                    report = oscard.withSpring;
                    offset = _closure3_slot1;
                    tangon = 1;
                    if(offset) { _fun00004_ip = 139; continue _fun00003 }
 136:
                    tangon = golfie;
 139:
                    golfie = _closure1_slot0;
                    michal = _closure1_slot2;
                    michal = michal[verify];
                    michal = golfie.bind(option)(michal);
                    michal = michal.SUBTLE_SPRING;
                    michal = report.bind(oscard)(tangon, michal);
                    zuuluu['scale'] = michal;
                    michal = new Array(1);
                    michal[0] = zuuluu;
                    entity['transform'] = michal;
                    return entity;
                }
            };
            report = {};
            report['useReducedMotion'] = offset;
            offset = 8;
            offset = verify[offset];
            offset = option.bind(golfie)(offset);
            offset = offset.withSpring;
            report['withSpring'] = offset;
            report['checked'] = oscard;
            oscard = 9;
            oscard = verify[oscard];
            oscard = option.bind(golfie)(oscard);
            oscard = oscard.SUBTLE_SPRING;
            report['SUBTLE_SPRING'] = oscard;
            entity['__closure'] = report;
            report = 13939484082835.0;
            entity['__workletHash'] = report;
            tangon = _closure1_slot8;
            entity['__initData'] = tangon;
            entity = michal.bind(zuuluu)(entity);
            return entity;
        };
        option = entity.bind(tangon)(michal, zuuluu);
        zuuluu = _closure1_slot4;
        offset = _closure1_slot1;
        entity = 4;
        entity = yankee[entity];
        entity = offset.bind(tangon)(entity);
        michal = entity.View;
        entity = {};
        romeon = golfie.checkbox;
        oscard = new Array(2);
        oscard[0] = romeon;
        oscard[1] = verify;
        entity['style'] = oscard;
        oscard = _closure1_slot6;
        report = {};
        verify = 7;
        verify = yankee[verify];
        verify = offset.bind(tangon)(verify);
        report['source'] = verify;
        verify = 5;
        verify = yankee[verify];
        verify = offset.bind(tangon)(verify);
        verify = verify.Sizes;
        verify = verify.SMALL;
        report['size'] = verify;
        verify = golfie.checkmark;
        golfie = new Array(2);
        golfie[0] = verify;
        golfie[1] = option;
        report['style'] = golfie;
        report = zuuluu.bind(tangon)(oscard, report);
        entity['children'] = report;
        entity = zuuluu.bind(tangon)(michal, entity);
        return entity;
    };
    zuuluu['FormCheckbox'] = michal;
    return entity;
})();