// app/design/components/Forms/native/FormCheckbox.native.tsx
export default (function(argFoo, argBar, argBaz, argCorge, _, argFred, argPlugh) {
    report = argBar;
    verify = argBaz;
    zulu = argFred;
    oscar = argPlugh;
    var _closure1_slot0 = report;
    var _closure1_slot1 = verify;
    var _closure1_slot2 = oscar;
    entity = global;
    options = entity.Object;
    golf = options.defineProperty;
    tango = {};
    entity = true;
    tango['value'] = entity;
    entity = '__esModule';
    entity = golf.bind(options)(zulu, entity, tango);
    entity = 0;
    golf = oscar[entity];
    tango = argCorge;
    entity = undefined;
    tango = tango.bind(entity)(golf);
    var _closure1_slot3 = tango;
    tango = 1;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.jsx;
    var _closure1_slot4 = tango;
    tango = 2;
    tango = oscar[tango];
    options = report.bind(entity)(tango);
    golf = options.createStyles;
    tango = {};
    offset = {'width': 24, 'height': 24, 'flexGrow': 0, 'flexShrink': 0, 'alignItems': 'center', 'justifyContent': 'center', 'borderRadius': null, 'borderWidth': 2};
    yankee = 3;
    romeo = oscar[yankee];
    romeo = verify.bind(entity)(romeo);
    romeo = romeo.radii;
    romeo = romeo.sm;
    offset['borderRadius'] = romeo;
    romeo = oscar[yankee];
    romeo = verify.bind(entity)(romeo);
    romeo = romeo.colors;
    romeo = romeo.INTERACTIVE_NORMAL;
    offset['borderColor'] = romeo;
    tango['checkbox'] = offset;
    offset = {};
    romeo = 'transparent';
    offset['backgroundColor'] = romeo;
    romeo = oscar[yankee];
    romeo = verify.bind(entity)(romeo);
    romeo = romeo.colors;
    romeo = romeo.INTERACTIVE_NORMAL;
    offset['borderColor'] = romeo;
    tango['unselected'] = offset;
    offset = {};
    romeo = oscar[yankee];
    romeo = verify.bind(entity)(romeo);
    romeo = romeo.colors;
    romeo = romeo.REDESIGN_INPUT_CONTROL_SELECTED;
    offset['borderColor'] = romeo;
    romeo = oscar[yankee];
    romeo = verify.bind(entity)(romeo);
    romeo = romeo.colors;
    romeo = romeo.REDESIGN_INPUT_CONTROL_SELECTED;
    offset['backgroundColor'] = romeo;
    tango['selected'] = offset;
    offset = {};
    yankee = oscar[yankee];
    yankee = verify.bind(entity)(yankee);
    yankee = yankee.colors;
    yankee = yankee.WHITE;
    offset['tintColor'] = yankee;
    tango['checkmark'] = offset;
    tango = golf.bind(options)(tango);
    var _closure1_slot5 = tango;
    tango = 4;
    tango = oscar[tango];
    options = verify.bind(entity)(tango);
    golf = options.createAnimatedComponent;
    tango = 5;
    tango = oscar[tango];
    tango = verify.bind(entity)(tango);
    tango = golf.bind(options)(tango);
    var _closure1_slot6 = tango;
    tango = {};
    golf = "function FormCheckboxNativeTsx1(){const{withSpring,checked,selected,unselected,SUBTLE_SPRING}=this.__closure;const defaultAnimation={borderColor:withSpring(checked?selected.borderColor:unselected.borderColor,SUBTLE_SPRING,'animate-always'),backgroundColor:withSpring(checked?selected.backgroundColor:unselected.backgroundColor,SUBTLE_SPRING,'animate-always')};return defaultAnimation;}";
    tango['code'] = golf;
    var _closure1_slot7 = tango;
    tango = {};
    golf = "function FormCheckboxNativeTsx2(){const{withSpring,checked,SUBTLE_SPRING,useReducedMotion}=this.__closure;const defaultAnimation={opacity:withSpring(checked?1:0,SUBTLE_SPRING,'animate-always')};if(useReducedMotion){return defaultAnimation;}return{...defaultAnimation,transform:[{scale:withSpring(checked?1:0.5,SUBTLE_SPRING)}]};}";
    tango['code'] = golf;
    var _closure1_slot8 = tango;
    tango = 10;
    tango = oscar[tango];
    oscar = report.bind(entity)(tango);
    report = oscar.fileFinishedImporting;
    tango = 'design/components/Forms/native/FormCheckbox.native.tsx';
    tango = report.bind(oscar)(tango);
    mike = function(argFoo) { // Original name: FormCheckbox
        mike = argFoo;
        zulu = mike.checked;
        mike = _closure1_slot5;
        tango = undefined;
        golf = mike.bind(tango)();
        options = _closure1_slot3;
        oscar = options.useContext;
        verify = _closure1_slot0;
        yankee = _closure1_slot2;
        mike = 6;
        mike = yankee[mike];
        mike = verify.bind(tango)(mike);
        mike = mike.AccessibilityPreferencesContext;
        mike = oscar.bind(options)(mike);
        mike = mike.reducedMotion;
        mike = mike.enabled;
        oscar = function(argFoo) { // Original name: useCheckboxStyles
            yankee = argFoo;
            var _closure3_slot0 = yankee;
            mike = _closure1_slot5;
            options = undefined;
            mike = mike.bind(options)();
            offset = mike.selected;
            var _closure3_slot1 = offset;
            oscar = mike.unselected;
            var _closure3_slot2 = oscar;
            golf = _closure1_slot0;
            verify = _closure1_slot2;
            mike = 4;
            mike = verify[mike];
            zulu = golf.bind(options)(mike);
            mike = zulu.useAnimatedStyle;
            entity = function() { // Original name: u
                _fun76328: for(var _fun76328_ip = 0; ; ) switch(_fun76328_ip) {
 0:
                    entity = {};
                    tango = _closure1_slot0;
                    zulu = _closure1_slot2;
                    report = 8;
                    zulu = zulu[report];
                    options = undefined;
                    foxtrot = tango.bind(options)(zulu);
                    romeo = foxtrot.withSpring;
                    zulu = _closure3_slot0;
                    if(zulu) { _fun76328_ip = 54; continue _fun76328 }
 42:
                    zulu = _closure3_slot2;
                    yankee = zulu.borderColor;
                    _fun76328_ip = 64; continue _fun76328;
 54:
                    zulu = _closure3_slot1;
                    yankee = zulu.borderColor;
 64:
                    tango = _closure1_slot0;
                    zulu = _closure1_slot2;
                    verify = 9;
                    oscar = zulu[verify];
                    oscar = tango.bind(options)(oscar);
                    offset = oscar.SUBTLE_SPRING;
                    oscar = 'animate-always';
                    offset = romeo.bind(foxtrot)(yankee, offset, oscar);
                    entity['borderColor'] = offset;
                    zulu = zulu[report];
                    report = tango.bind(options)(zulu);
                    tango = report.withSpring;
                    zulu = _closure3_slot0;
                    if(zulu) { _fun76328_ip = 140; continue _fun76328 }
 129:
                    zulu = _closure3_slot2;
                    zulu = zulu.backgroundColor;
                    _fun76328_ip = 149; continue _fun76328;
 140:
                    golf = _closure3_slot1;
                    zulu = golf.backgroundColor;
 149:
                    golf = _closure1_slot0;
                    mike = _closure1_slot2;
                    mike = mike[verify];
                    mike = golf.bind(options)(mike);
                    mike = mike.SUBTLE_SPRING;
                    mike = tango.bind(report)(zulu, mike, oscar);
                    entity['backgroundColor'] = mike;
                    return entity;
                }
            };
            report = {};
            romeo = 8;
            romeo = verify[romeo];
            romeo = golf.bind(options)(romeo);
            romeo = romeo.withSpring;
            report['withSpring'] = romeo;
            report['checked'] = yankee;
            report['selected'] = offset;
            report['unselected'] = oscar;
            oscar = 9;
            oscar = verify[oscar];
            oscar = golf.bind(options)(oscar);
            oscar = oscar.SUBTLE_SPRING;
            report['SUBTLE_SPRING'] = oscar;
            entity['__closure'] = report;
            report = 11278373524374.0;
            entity['__workletHash'] = report;
            tango = _closure1_slot7;
            entity['__initData'] = tango;
            entity = mike.bind(zulu)(entity);
            return entity;
        };
        verify = oscar.bind(tango)(zulu);
        entity = function(argFoo, argBar) { // Original name: useCheckmarkStyles
            oscar = argFoo;
            golf = argBar;
            var _closure3_slot0 = oscar;
            var _closure3_slot1 = golf;
            verify = _closure1_slot0;
            offset = _closure1_slot2;
            mike = 4;
            mike = offset[mike];
            options = undefined;
            zulu = verify.bind(options)(mike);
            mike = zulu.useAnimatedStyle;
            entity = function() { // Original name: n
                _fun76330: for(var _fun76330_ip = 0; ; ) switch(_fun76330_ip) {
 0:
                    zulu = {};
                    mike = _closure1_slot0;
                    entity = _closure1_slot2;
                    options = 8;
                    entity = entity[options];
                    verify = undefined;
                    yankee = mike.bind(verify)(entity);
                    golf = yankee.withSpring;
                    entity = _closure3_slot1;
                    oscar = 0;
                    if(!entity) { _fun76330_ip = 47; continue _fun76330 }
 44:
                    oscar = 1;
 47:
                    mike = _closure1_slot0;
                    entity = _closure1_slot2;
                    offset = 9;
                    entity = entity[offset];
                    entity = mike.bind(verify)(entity);
                    mike = entity.SUBTLE_SPRING;
                    entity = 'animate-always';
                    entity = golf.bind(yankee)(oscar, mike, entity);
                    zulu['opacity'] = entity;
                    mike = _closure3_slot0;
                    entity = zulu;
                    if(mike) { _fun76330_ip = 210; continue _fun76330 }
 100:
                    mike = {};
                    backup = mike;
                    foxtrot = zulu;
                    zulu = copyDataProperties(backup, foxtrot);
                    zulu = {};
                    golf = _closure1_slot0;
                    oscar = _closure1_slot2;
                    oscar = oscar[options];
                    golf = golf.bind(verify)(oscar);
                    oscar = golf.withSpring;
                    options = _closure3_slot1;
                    report = 0.5;
                    if(!options) { _fun76330_ip = 156; continue _fun76330 }
 153:
                    report = 1;
 156:
                    options = _closure1_slot0;
                    tango = _closure1_slot2;
                    tango = tango[offset];
                    tango = options.bind(verify)(tango);
                    tango = tango.SUBTLE_SPRING;
                    tango = oscar.bind(golf)(report, tango);
                    zulu['scale'] = tango;
                    tango = new Array(1);
                    tango[0] = zulu;
                    zulu = 'transform';
                    mike[zulu] = tango;
                    entity = mike;
 210:
                    return entity;
                }
            };
            report = {};
            yankee = 8;
            yankee = offset[yankee];
            yankee = verify.bind(options)(yankee);
            yankee = yankee.withSpring;
            report['withSpring'] = yankee;
            report['checked'] = golf;
            golf = 9;
            golf = offset[golf];
            golf = verify.bind(options)(golf);
            golf = golf.SUBTLE_SPRING;
            report['SUBTLE_SPRING'] = golf;
            report['useReducedMotion'] = oscar;
            entity['__closure'] = report;
            report = 2474428445099.0;
            entity['__workletHash'] = report;
            tango = _closure1_slot8;
            entity['__initData'] = tango;
            entity = mike.bind(zulu)(entity);
            return entity;
        };
        options = entity.bind(tango)(mike, zulu);
        zulu = _closure1_slot4;
        offset = _closure1_slot1;
        entity = 4;
        entity = yankee[entity];
        entity = offset.bind(tango)(entity);
        mike = entity.View;
        entity = {};
        romeo = golf.checkbox;
        oscar = new Array(2);
        oscar[0] = romeo;
        oscar[1] = verify;
        entity['style'] = oscar;
        oscar = _closure1_slot6;
        report = {};
        verify = 7;
        verify = yankee[verify];
        verify = offset.bind(tango)(verify);
        report['source'] = verify;
        verify = 5;
        verify = yankee[verify];
        verify = offset.bind(tango)(verify);
        verify = verify.Sizes;
        verify = verify.SMALL;
        report['size'] = verify;
        verify = golf.checkmark;
        golf = new Array(2);
        golf[0] = verify;
        golf[1] = options;
        report['style'] = golf;
        report = zulu.bind(tango)(oscar, report);
        entity['children'] = report;
        entity = zulu.bind(tango)(mike, entity);
        return entity;
    };
    zulu['FormCheckbox'] = mike;
    return entity;
})();