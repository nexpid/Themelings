// app/index.native.tsx
export default (function(argFoo, argBar, _, __, ___, ____, argPlugh) {
    zulu = argBar;
    tango = argPlugh;
    var _closure1_slot0 = zulu;
    var _closure1_slot1 = tango;
    oscar = function(argFoo, argBar) { // Original name: registerHeadlessTask
        tango = argFoo;
        var _closure2_slot0 = tango;
        mike = argBar;
        var _closure2_slot1 = mike;
        zulu = _closure1_slot2;
        mike = zulu.registerHeadlessTask;
        entity = function() {
            tango = _closure1_slot0;
            zulu = _closure1_slot1;
            mike = 10;
            zulu = zulu[mike];
            mike = undefined;
            mike = tango.bind(mike)(zulu);
            mike = mike.default;
            var _closure3_slot0 = mike;
            entity = function(argFoo) {
                report = _closure3_slot0;
                tango = _closure2_slot0;
                zulu = _closure2_slot1;
                mike = undefined;
                entity = argFoo;
                entity = report.bind(mike)(tango, zulu, entity);
                return entity;
            };
            return entity;
        };
        entity = mike.bind(zulu)(tango, entity);
        entity = undefined;
        return entity;
    };
    entity = 0;
    report = tango[entity];
    entity = undefined;
    report = zulu.bind(entity)(report);
    report = 1;
    report = tango[report];
    report = zulu.bind(entity)(report);
    report = 2;
    report = tango[report];
    report = zulu.bind(entity)(report);
    report = 3;
    report = tango[report];
    report = zulu.bind(entity)(report);
    report = 4;
    golf = tango[report];
    golf = zulu.bind(entity)(golf);
    golf = golf.default;
    golf = golf.imports;
    options = golf.polyfillsEnd;
    golf = options.record;
    golf = golf.bind(options)();
    golf = 5;
    golf = tango[golf];
    golf = zulu.bind(entity)(golf);
    report = tango[report];
    report = zulu.bind(entity)(report);
    report = report.default;
    report = report.imports;
    golf = report.sentryEnd;
    report = golf.record;
    report = report.bind(golf)();
    report = 6;
    report = tango[report];
    report = zulu.bind(entity)(report);
    verify = report.AppRegistry;
    var _closure1_slot2 = verify;
    golf = verify.registerComponent;
    options = 'Discord';
    report = function() {
        zulu = _closure1_slot0;
        mike = _closure1_slot1;
        entity = 7;
        mike = mike[entity];
        entity = undefined;
        entity = zulu.bind(entity)(mike);
        entity = entity.default;
        return entity;
    };
    report = golf.bind(verify)(options, report);
    report = verify.getRunnable;
    report = report.bind(verify)(options);
    var _closure1_slot3 = report;
    golf = verify.registerRunnable;
    report = function(argFoo) {
        oscar = 0;
        mike = copyRestArgs(oscar);
        var _closure2_slot0 = mike;
        zulu = _closure1_slot0;
        tango = _closure1_slot1;
        mike = 8;
        mike = tango[mike];
        tango = undefined;
        mike = zulu.bind(tango)(mike);
        zulu = mike.default;
        mike = 'Main';
        entity = function() {
            zulu = _closure1_slot3;
            oscar = _closure2_slot0;
            mike = new Array(0);
            report = 0;
            golf = mike;
            entity = arraySpread(golf, oscar, report);
            entity = undefined;
            golf = zulu;
            oscar = mike;
            report = undefined;
            mike = apply(golf, oscar, report);
            return entity;
        };
        entity = zulu.bind(tango)(mike, entity);
        return entity;
    };
    report = golf.bind(verify)(options, report);
    golf = verify.registerComponent;
    options = 'Share';
    report = function() {
        zulu = _closure1_slot0;
        mike = _closure1_slot1;
        entity = 9;
        mike = mike[entity];
        entity = undefined;
        entity = zulu.bind(entity)(mike);
        entity = entity.default;
        return entity;
    };
    report = golf.bind(verify)(options, report);
    report = verify.getRunnable;
    report = report.bind(verify)(options);
    var _closure1_slot4 = report;
    golf = verify.registerRunnable;
    report = function(argFoo) {
        oscar = 0;
        mike = copyRestArgs(oscar);
        var _closure2_slot0 = mike;
        zulu = _closure1_slot0;
        tango = _closure1_slot1;
        mike = 8;
        mike = tango[mike];
        tango = undefined;
        mike = zulu.bind(tango)(mike);
        zulu = mike.default;
        mike = 'Share';
        entity = function() {
            zulu = _closure1_slot4;
            oscar = _closure2_slot0;
            mike = new Array(0);
            report = 0;
            golf = mike;
            entity = arraySpread(golf, oscar, report);
            report = undefined;
            golf = zulu;
            oscar = mike;
            entity = apply(golf, oscar, report);
            return entity;
        };
        entity = zulu.bind(tango)(mike, entity);
        return entity;
    };
    report = golf.bind(verify)(options, report);
    golf = 'BackgroundSync';
    report = function() {
        zulu = _closure1_slot0;
        mike = _closure1_slot1;
        entity = 11;
        mike = mike[entity];
        entity = undefined;
        entity = zulu.bind(entity)(mike);
        return entity;
    };
    report = oscar.bind(entity)(golf, report);
    golf = 'TTITestAction';
    report = function() {
        zulu = _closure1_slot0;
        mike = _closure1_slot1;
        entity = 12;
        mike = mike[entity];
        entity = undefined;
        entity = zulu.bind(entity)(mike);
        return entity;
    };
    report = oscar.bind(entity)(golf, report);
    golf = 'Disconnect';
    report = function() {
        zulu = _closure1_slot0;
        mike = _closure1_slot1;
        entity = 13;
        mike = mike[entity];
        entity = undefined;
        entity = zulu.bind(entity)(mike);
        return entity;
    };
    report = oscar.bind(entity)(golf, report);
    golf = 'MarkAsRead';
    report = function() {
        zulu = _closure1_slot0;
        mike = _closure1_slot1;
        entity = 14;
        mike = mike[entity];
        entity = undefined;
        entity = zulu.bind(entity)(mike);
        return entity;
    };
    report = oscar.bind(entity)(golf, report);
    golf = 'MuteAction';
    report = function() {
        zulu = _closure1_slot0;
        mike = _closure1_slot1;
        entity = 15;
        mike = mike[entity];
        entity = undefined;
        entity = zulu.bind(entity)(mike);
        return entity;
    };
    report = oscar.bind(entity)(golf, report);
    golf = 'ToggleDeafen';
    report = function() {
        zulu = _closure1_slot0;
        mike = _closure1_slot1;
        entity = 16;
        mike = mike[entity];
        entity = undefined;
        entity = zulu.bind(entity)(mike);
        return entity;
    };
    report = oscar.bind(entity)(golf, report);
    golf = 'ToggleSelfMute';
    report = function() {
        zulu = _closure1_slot0;
        mike = _closure1_slot1;
        entity = 17;
        mike = mike[entity];
        entity = undefined;
        entity = zulu.bind(entity)(mike);
        return entity;
    };
    report = oscar.bind(entity)(golf, report);
    golf = 'DismissCallAction';
    report = function() {
        zulu = _closure1_slot0;
        mike = _closure1_slot1;
        entity = 18;
        mike = mike[entity];
        entity = undefined;
        entity = zulu.bind(entity)(mike);
        return entity;
    };
    report = oscar.bind(entity)(golf, report);
    golf = 'DirectReply';
    report = function() {
        zulu = _closure1_slot0;
        mike = _closure1_slot1;
        entity = 19;
        mike = mike[entity];
        entity = undefined;
        entity = zulu.bind(entity)(mike);
        return entity;
    };
    report = oscar.bind(entity)(golf, report);
    golf = 'SelectChannel';
    report = function() {
        zulu = _closure1_slot0;
        mike = _closure1_slot1;
        entity = 20;
        mike = mike[entity];
        entity = undefined;
        entity = zulu.bind(entity)(mike);
        return entity;
    };
    report = oscar.bind(entity)(golf, report);
    report = 'GenerateInvite';
    mike = function() {
        zulu = _closure1_slot0;
        mike = _closure1_slot1;
        entity = 21;
        mike = mike[entity];
        entity = undefined;
        entity = zulu.bind(entity)(mike);
        return entity;
    };
    mike = oscar.bind(entity)(report, mike);
    mike = 22;
    mike = tango[mike];
    tango = zulu.bind(entity)(mike);
    zulu = tango.fileFinishedImporting;
    mike = 'index.native.tsx';
    mike = zulu.bind(tango)(mike);
    return entity;
})();