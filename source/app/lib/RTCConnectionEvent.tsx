// app/lib/RTCConnectionEvent.tsx
export default (function(native1, native2, native3, native4, native5, native6, native7) {
    var3 = native6;
    var1 = global;
    var5 = var1.Object;
    var4 = var5.defineProperty;
    var2 = {};
    var1 = true;
    var2['value'] = var1;
    var1 = '__esModule';
    var1 = var4.bind(var5)(var3, var1, var2);
    var2 = {};
    var1 = 'state';
    var2['State'] = var1;
    var1 = 'speaking';
    var2['Speaking'] = var1;
    var1 = 'video-source-quality-changed';
    var2['VideoSourceQualityChanged'] = var1;
    var1 = 'video';
    var2['Video'] = var1;
    var1 = 'flags';
    var2['Flags'] = var1;
    var1 = 'platform';
    var2['Platform'] = var1;
    var1 = 'ping';
    var2['Ping'] = var1;
    var1 = 'client-connect';
    var2['ClientConnect'] = var1;
    var1 = 'client-disconnect';
    var2['ClientDisconnect'] = var1;
    var1 = 'outboundlossrate';
    var2['OutboundLossRate'] = var1;
    var1 = 'secure-frames-update';
    var2['SecureFramesUpdate'] = var1;
    var1 = 'roster-map-update';
    var2['RosterMapUpdate'] = var1;
    var1 = 'users-merged';
    var2['UsersMerged'] = var1;
    var4 = native7;
    var1 = 0;
    var5 = var4[var1];
    var4 = native2;
    var1 = undefined;
    var6 = var4.bind(var1)(var5);
    var5 = var6.fileFinishedImporting;
    var4 = 'lib/RTCConnectionEvent.tsx';
    var4 = var5.bind(var6)(var4);
    var3['RTCConnectionEvent'] = var2;
    return var1;
})();