// app/flow/Client.tsx
export default (function(_, argBar, __, ___, ____, argFred, argPlugh) {
    zulu = argFred;
    entity = global;
    report = entity.Object;
    tango = report.defineProperty;
    mike = {};
    entity = true;
    mike['value'] = entity;
    entity = '__esModule';
    entity = tango.bind(report)(zulu, entity, mike);
    report = {};
    entity = 'ANIMATED';
    report['ANIMATED'] = entity;
    entity = 'INSTANT';
    report['INSTANT'] = entity;
    tango = {};
    oscar = 0;
    tango['UNKNOWN'] = oscar;
    entity = 'UNKNOWN';
    tango[oscar] = entity;
    yankee = 1;
    tango['WINDOWED'] = yankee;
    entity = 'WINDOWED';
    tango[yankee] = entity;
    offset = 2;
    tango['MAXIMIZED'] = offset;
    entity = 'MAXIMIZED';
    tango[offset] = entity;
    verify = 3;
    tango['BORDERLESS_FULLSCREEN'] = verify;
    entity = 'BORDERLESS_FULLSCREEN';
    tango[verify] = entity;
    options = 4;
    tango['FULLSCREEN'] = options;
    entity = 'FULLSCREEN';
    tango[options] = entity;
    golf = 5;
    tango['MINIMIZED'] = golf;
    entity = 'MINIMIZED';
    tango[golf] = entity;
    mike = {};
    romeo = -1;
    mike['QUNS_UNKNOWN'] = romeo;
    entity = 'QUNS_UNKNOWN';
    mike[romeo] = entity;
    mike['QUNS_NOT_PRESENT'] = yankee;
    entity = 'QUNS_NOT_PRESENT';
    mike[yankee] = entity;
    mike['QUNS_BUSY'] = offset;
    entity = 'QUNS_BUSY';
    mike[offset] = entity;
    mike['QUNS_RUNNING_D3D_FULL_SCREEN'] = verify;
    entity = 'QUNS_RUNNING_D3D_FULL_SCREEN';
    mike[verify] = entity;
    mike['QUNS_PRESENTATION_MODE'] = options;
    entity = 'QUNS_PRESENTATION_MODE';
    mike[options] = entity;
    mike['QUNS_ACCEPTS_NOTIFICATIONS'] = golf;
    entity = 'QUNS_ACCEPTS_NOTIFICATIONS';
    mike[golf] = entity;
    golf = 6;
    mike['QUNS_QUIET_TIME'] = golf;
    entity = 'QUNS_QUIET_TIME';
    mike[golf] = entity;
    golf = 7;
    mike['QUNS_APP'] = golf;
    entity = 'QUNS_APP';
    mike[golf] = entity;
    entity = argPlugh;
    golf = entity[oscar];
    oscar = argBar;
    entity = undefined;
    options = oscar.bind(entity)(golf);
    golf = options.fileFinishedImporting;
    oscar = 'flow/Client.tsx';
    oscar = golf.bind(options)(oscar);
    zulu['JumpTypes'] = report;
    zulu['RunningProcessFullscreenType'] = tango;
    zulu['QueryUserNotificationState'] = mike;
    mike = {'compatibilityHook': false, 'warn': false, 'enabled': false, 'enabledOOP': false, 'allowHook': true, 'supportsOutOfProcessOverlay': false};
    zulu['DEFAULT_OVERLAY_OPTIONS'] = mike;
    return entity;
})();