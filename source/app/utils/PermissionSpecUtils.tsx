// app/utils/PermissionSpecUtils.tsx
export default (function(argFoo, argBar, argBaz, argCorge, _, argFred, argPlugh) {
    report = argBar;
    golf = argBaz;
    zulu = argFred;
    oscar = argPlugh;
    var _closure1_slot0 = report;
    var _closure1_slot1 = golf;
    entity = argCorge;
    var _closure1_slot2 = entity;
    var _closure1_slot3 = oscar;
    entity = function(argFoo) { // Original name: getPermissionOptions
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            report = argFoo;
            mike = _closure1_slot0;
            tango = _closure1_slot3;
            entity = 4;
            entity = tango[entity];
            kilo = undefined;
            zulu = mike.bind(kilo)(entity);
            entity = zulu.isGuildEligibleForStageChannels;
            golf = entity.bind(zulu)(report);
            entity = 5;
            entity = tango[entity];
            zulu = mike.bind(kilo)(entity);
            entity = zulu.getEnableForumPermissions;
            oscar = entity.bind(zulu)(report);
            zulu = _closure1_slot5;
            entity = zulu.getGuild;
            zulu = entity.bind(zulu)(report);
            entity = 6;
            entity = tango[entity];
            options = mike.bind(kilo)(entity);
            report = options.getMemberVerificationRolloutEnabled;
            entity = null;
            mike = entity == zulu;
            tango = undefined;
            if(mike) { _fun00002_ip = 110; continue _fun00001 }
 105:
            tango = zulu.id;
 110:
            mike = 'permissions';
            report = report.bind(options)(tango, mike);
            if(report) { _fun00002_ip = 156; continue _fun00001 }
 123:
            tango = entity == zulu;
            mike = undefined;
            if(tango) { _fun00002_ip = 153; continue _fun00001 }
 132:
            options = zulu.hasFeature;
            tango = _closure1_slot8;
            tango = tango.MEMBER_VERIFICATION_MANUAL_APPROVAL;
            mike = options.bind(zulu)(tango);
 153:
            report = mike;
 156:
            tango = entity != zulu;
            if(!tango) { _fun00002_ip = 194; continue _fun00001 }
 163:
            mike = _closure1_slot0;
            options = _closure1_slot3;
            entity = 7;
            entity = options[entity];
            mike = mike.bind(kilo)(entity);
            entity = mike.isCreatorMonetizationEnabledGuild;
            tango = entity.bind(mike)(zulu);
 194:
            verify = _closure1_slot0;
            sizing = _closure1_slot3;
            entity = 8;
            entity = sizing[entity];
            mike = verify.bind(kilo)(entity);
            entity = mike.getClydeExperimentEnabled;
            zulu = entity.bind(mike)(zulu);
            entity = 9;
            entity = sizing[entity];
            options = verify.bind(kilo)(entity);
            mike = options.getSoundmojiRenderingExperiment;
            entity = {};
            offset = 'getPermissionOptions';
            entity['location'] = offset;
            mike = mike.bind(options)(entity);
            entity = {};
            options = 10;
            offset = sizing[options];
            offset = verify.bind(kilo)(offset);
            backup = offset.intl;
            foxtrot = backup.format;
            offset = sizing[options];
            offset = verify.bind(kilo)(offset);
            offset = offset.t;
            yankee = offset.ZuzwPz;
            offset = {};
            output = sizing[options];
            output = verify.bind(kilo)(output);
            echo = output.intl;
            result = echo.string;
            output = sizing[options];
            output = verify.bind(kilo)(output);
            output = output.t;
            output = output.DkSwJy;
            output = result.bind(echo)(output);
            offset['keybind'] = output;
            offset = foxtrot.bind(backup)(yankee, offset);
            entity['PRIORITY_SPEAKER_DESCRIPTION'] = offset;
            offset = sizing[options];
            offset = verify.bind(kilo)(offset);
            yankee = offset.intl;
            offset = yankee.format;
            options = sizing[options];
            options = verify.bind(kilo)(options);
            options = options.t;
            verify = options.fVE8y8;
            options = {};
            backup = _closure1_slot1;
            foxtrot = 11;
            foxtrot = sizing[foxtrot];
            backup = backup.bind(kilo)(foxtrot);
            foxtrot = backup.getArticleURL;
            romeo = _closure1_slot6;
            romeo = romeo.SOUNDBOARD;
            romeo = foxtrot.bind(backup)(romeo);
            options['helpCenterArticle'] = romeo;
            options = offset.bind(yankee)(verify, options);
            entity['SOUNDBOARD_DESCRIPTION'] = options;
            entity['showStageChannelPermissions'] = golf;
            golf = true;
            entity['showExperimental'] = golf;
            entity['showForumPermissions'] = oscar;
            entity['showMembershipManualApprovalPermissions'] = report;
            entity['showCreatorMonetizationAnalyticsPermission'] = tango;
            entity['showClydeAIPermissions'] = zulu;
            entity['inSoundmojiExperiment'] = mike;
            return entity;
        }
    };
    var _closure1_slot12 = entity;
    entity = function(argFoo, argBar) { // Original name: conditionalPermissionSpec
        _fun00003: for(var _fun00004_ip = 0; ; ) switch(_fun00004_ip) {
 0:
            entity = argFoo;
            if(entity) { _fun00004_ip = 12; continue _fun00003 }
 6:
            entity = new Array(0);
            _fun00004_ip = 32; continue _fun00003;
 12:
            zulu = argBar;
            mike = undefined;
            zulu = zulu.bind(mike)();
            mike = new Array(1);
            mike[0] = zulu;
            entity = mike;
 32:
            return entity;
        }
    };
    var _closure1_slot13 = entity;
    entity = global;
    verify = entity.Object;
    options = verify.defineProperty;
    mike = {};
    entity = true;
    mike['value'] = entity;
    entity = '__esModule';
    entity = options.bind(verify)(zulu, entity, mike);
    entity = 0;
    mike = oscar[entity];
    entity = undefined;
    mike = report.bind(entity)(mike);
    mike = mike.VOICE_THREAD_PARENT_CHANNEL_TYPES;
    var _closure1_slot4 = mike;
    mike = 1;
    mike = oscar[mike];
    mike = golf.bind(entity)(mike);
    var _closure1_slot5 = mike;
    mike = 2;
    mike = oscar[mike];
    mike = report.bind(entity)(mike);
    golf = mike.HelpdeskArticles;
    var _closure1_slot6 = golf;
    golf = mike.UserSettingsSections;
    golf = mike.ChannelTypes;
    var _closure1_slot7 = golf;
    golf = mike.GuildFeatures;
    var _closure1_slot8 = golf;
    golf = mike.Permissions;
    var _closure1_slot9 = golf;
    mike = mike.GuildSettingsSections;
    var _closure1_slot10 = mike;
    mike = 3;
    mike = oscar[mike];
    mike = report.bind(entity)(mike);
    mike = mike.getChannelPermissionSpecMap;
    var _closure1_slot11 = mike;
    mike = {};
    golf = function(argFoo, argBar, argBaz, argCorge) { // Original name: generateChannelPermissionSpec
        _fun00005: for(var _fun00006_ip = 0; ; ) switch(_fun00006_ip) {
 0:
            foxtrot = argFoo;
            vacuum = argBar;
            var _closure2_slot0 = foxtrot;
            mike = _closure1_slot0;
            tango = _closure1_slot3;
            golf = 5;
            entity = tango[golf];
            offset = undefined;
            report = mike.bind(offset)(entity);
            entity = report.getEnableForumPermissions;
            record = entity.bind(report)(foxtrot);
            oscar = _closure1_slot11;
            context = argBaz;
            config = argCorge;
            target = undefined;
            papa = vacuum;
            oscar = target[oscar](papa, context, record, config, sequence);
            var _closure2_slot1 = oscar;
            entity = _closure1_slot12;
            options = entity.bind(offset)(foxtrot);
            entity = 12;
            entity = tango[entity];
            entity = mike.bind(offset)(entity);
            tango = entity.VoiceInThreadsExperiment;
            mike = tango.getCurrentConfig;
            entity = {};
            entity['guildId'] = foxtrot;
            report = '3ad37d_1';
            entity['location'] = report;
            entity = mike.bind(tango)(entity);
            report = entity.enabled;
            if(!report) { _fun00006_ip = 152; continue _fun00005 }
 133:
            tango = _closure1_slot4;
            mike = tango.has;
            entity = vacuum.type;
            report = mike.bind(tango)(entity);
 152:
            tango = _closure1_slot0;
            verify = _closure1_slot3;
            entity = 13;
            entity = verify[entity];
            mike = tango.bind(offset)(entity);
            entity = mike.isStageVideoEnabled;
            sizing = entity.bind(mike)(foxtrot);
            entity = 14;
            entity = verify[entity];
            mike = tango.bind(offset)(entity);
            entity = mike.canCurrentUserManageMessageFilters;
            kilo = entity.bind(mike)(foxtrot);
            entity = vacuum.isMediaChannel;
            mike = entity.bind(vacuum)();
            var _closure2_slot2 = mike;
            yankee = _closure1_slot5;
            entity = yankee.getGuild;
            foxtrot = entity.bind(yankee)(foxtrot);
            entity = 8;
            entity = verify[entity];
            yankee = tango.bind(offset)(entity);
            entity = yankee.getClydeExperimentEnabled;
            result = entity.bind(yankee)(foxtrot);
            entity = 9;
            entity = verify[entity];
            verify = tango.bind(offset)(entity);
            tango = verify.getSoundmojiRenderingExperiment;
            entity = {};
            yankee = 'generateChannelPermissionSpec';
            entity['location'] = yankee;
            output = tango.bind(verify)(entity);
            tango = vacuum.type;
            entity = _closure1_slot7;
            entity = entity.GUILD_CATEGORY;
            if(!(entity !== tango)) { _fun00006_ip = 2318; continue _fun00005 }
 312:
            entity = _closure1_slot7;
            entity = entity.GUILD_VOICE;
            if(!(entity !== tango)) { _fun00006_ip = 1773; continue _fun00005 }
 329:
            entity = _closure1_slot7;
            entity = entity.GUILD_STAGE_VOICE;
            if(!(entity !== tango)) { _fun00006_ip = 1239; continue _fun00005 }
 346:
            entity = _closure1_slot7;
            entity = entity.GUILD_FORUM;
            if(!(entity !== tango)) { _fun00006_ip = 751; continue _fun00005 }
 363:
            entity = _closure1_slot7;
            entity = entity.GUILD_MEDIA;
            if(!(entity !== tango)) { _fun00006_ip = 751; continue _fun00005 }
 380:
            yankee = _closure1_slot2;
            update = _closure1_slot3;
            verify = 15;
            entity = update[verify];
            backup = yankee.bind(offset)(entity);
            foxtrot = backup.generateChannelGeneralSection;
            echo = _closure1_slot0;
            tango = 10;
            entity = update[tango];
            entity = echo.bind(offset)(entity);
            control = entity.intl;
            source = control.string;
            entity = update[tango];
            entity = echo.bind(offset)(entity);
            entity = entity.t;
            entity = entity.ouHggI;
            entity = source.bind(control)(entity);
            foxtrot = foxtrot.bind(backup)(oscar, entity);
            entity = new Array(4);
            entity[0] = foxtrot;
            foxtrot = update[verify];
            source = yankee.bind(offset)(foxtrot);
            backup = source.generateChannelMembershipSection;
            foxtrot = update[tango];
            foxtrot = echo.bind(offset)(foxtrot);
            sequence = foxtrot.intl;
            control = sequence.string;
            foxtrot = update[tango];
            foxtrot = echo.bind(offset)(foxtrot);
            foxtrot = foxtrot.t;
            foxtrot = foxtrot.Ny49TE;
            foxtrot = control.bind(sequence)(foxtrot);
            foxtrot = backup.bind(source)(oscar, foxtrot);
            entity[1] = foxtrot;
            foxtrot = update[verify];
            control = yankee.bind(offset)(foxtrot);
            source = control.generateChannelTextSection;
            foxtrot = update[tango];
            foxtrot = echo.bind(offset)(foxtrot);
            sequence = foxtrot.intl;
            backup = sequence.string;
            foxtrot = update[tango];
            foxtrot = echo.bind(offset)(foxtrot);
            foxtrot = foxtrot.t;
            foxtrot = foxtrot.cKobOz;
            backup = backup.bind(sequence)(foxtrot);
            foxtrot = {};
            sequence = vacuum.type;
            vacuum = _closure1_slot7;
            vacuum = vacuum.GUILD_ANNOUNCEMENT;
            vacuum = sequence !== vacuum;
            foxtrot['showPrivateThreads'] = vacuum;
            vacuum = true;
            foxtrot['showCreateThreads'] = vacuum;
            foxtrot['showClydeAIPermissions'] = result;
            foxtrot['inSoundmojiExperiment'] = output;
            foxtrot = source.bind(control)(oscar, backup, foxtrot);
            entity[2] = foxtrot;
            verify = update[verify];
            yankee = yankee.bind(offset)(verify);
            verify = yankee.generateChannelAppsSection;
            foxtrot = update[tango];
            foxtrot = echo.bind(offset)(foxtrot);
            backup = foxtrot.intl;
            foxtrot = backup.string;
            tango = update[tango];
            tango = echo.bind(offset)(tango);
            tango = tango.t;
            tango = tango.rrh/W1;
            tango = foxtrot.bind(backup)(tango);
            tango = verify.bind(yankee)(oscar, tango);
            entity[3] = tango;
            verify = _closure1_slot13;
            tango = function() {
                zulu = _closure1_slot2;
                verify = _closure1_slot3;
                mike = 15;
                mike = verify[mike];
                options = undefined;
                tango = zulu.bind(options)(mike);
                zulu = tango.generateChannelVoiceSection;
                mike = _closure2_slot1;
                golf = _closure1_slot0;
                entity = 10;
                report = verify[entity];
                report = golf.bind(options)(report);
                oscar = report.intl;
                report = oscar.string;
                entity = verify[entity];
                entity = golf.bind(options)(entity);
                entity = entity.t;
                entity = entity.46Ra1d;
                entity = report.bind(oscar)(entity);
                entity = zulu.bind(tango)(mike, entity);
                return entity;
            };
            context = verify.bind(offset)(report, tango);
            record = 4;
            papa = entity;
            tango = arraySpread(papa, context, record);
            return entity;
 751:
            yankee = _closure1_slot0;
            entity = _closure1_slot3;
            echo = 10;
            tango = entity[echo];
            tango = yankee.bind(offset)(tango);
            verify = tango.intl;
            tango = verify.string;
            entity = entity[echo];
            entity = yankee.bind(offset)(entity);
            entity = entity.t;
            if(mike) { _fun00006_ip = 813; continue _fun00005 }
 798:
            yankee = entity.TS7CnZ;
            foxtrot = tango.bind(verify)(yankee);
            _fun00006_ip = 826; continue _fun00005;
 813:
            entity = entity.aSjPg4;
            foxtrot = tango.bind(verify)(entity);
 826:
            tango = _closure1_slot0;
            entity = _closure1_slot3;
            entity = entity[echo];
            entity = tango.bind(offset)(entity);
            entity = entity.t;
            if(mike) { _fun00006_ip = 861; continue _fun00005 }
 851:
            vacuum = entity.1MTnqa;
            _fun00006_ip = 869; continue _fun00005;
 861:
            vacuum = entity.YjJTtL;
 869:
            verify = _closure1_slot2;
            mike = _closure1_slot3;
            tango = 15;
            entity = mike[tango];
            backup = verify.bind(offset)(entity);
            yankee = backup.generateChannelGeneralSection;
            sequence = _closure1_slot0;
            entity = mike[echo];
            entity = sequence.bind(offset)(entity);
            source = entity.intl;
            update = source.string;
            entity = mike[echo];
            entity = sequence.bind(offset)(entity);
            entity = entity.t;
            entity = entity.ouHggI;
            entity = update.bind(source)(entity);
            yankee = yankee.bind(backup)(oscar, entity);
            entity = new Array(4);
            entity[0] = yankee;
            yankee = mike[tango];
            update = verify.bind(offset)(yankee);
            backup = update.generateChannelMembershipSection;
            yankee = mike[echo];
            yankee = sequence.bind(offset)(yankee);
            control = yankee.intl;
            source = control.string;
            yankee = mike[echo];
            yankee = sequence.bind(offset)(yankee);
            yankee = yankee.t;
            yankee = yankee.Ny49TE;
            yankee = source.bind(control)(yankee);
            yankee = backup.bind(update)(oscar, yankee);
            entity[1] = yankee;
            mike = mike[tango];
            yankee = verify.bind(offset)(mike);
            verify = yankee.generateChannelTextSection;
            mike = {'showPrivateThreads': false, 'showCreateThreads': false};
            backup = undefined;
            if(!kilo) { _fun00006_ip = 1103; continue _fun00005 }
 1056:
            source = _closure1_slot0;
            update = _closure1_slot3;
            update = update[echo];
            update = source.bind(offset)(update);
            control = update.intl;
            source = control.format;
            update = {};
            sequence = function() { // Original name: setUpAutomod
                _fun00007: for(var _fun00008_ip = 0; ; ) switch(_fun00008_ip) {
 0:
                    entity = _closure2_slot2;
                    if(entity) { _fun00008_ip = 45; continue _fun00007 }
 10:
                    tango = _closure1_slot0;
                    mike = _closure1_slot3;
                    entity = 17;
                    mike = mike[entity];
                    entity = undefined;
                    mike = tango.bind(entity)(mike);
                    entity = mike.trackForumEnableAutomodClicked;
                    entity = entity.bind(mike)();
 45:
                    report = _closure1_slot1;
                    tango = _closure1_slot3;
                    entity = 16;
                    tango = tango[entity];
                    entity = undefined;
                    report = report.bind(entity)(tango);
                    tango = report.open;
                    zulu = _closure2_slot0;
                    mike = _closure1_slot10;
                    mike = mike.GUILD_AUTOMOD;
                    mike = tango.bind(report)(zulu, mike);
                    return entity;
                }
            };
            update['setUpAutomod'] = sequence;
            backup = source.bind(control)(vacuum, update);
 1103:
            mike['sectionDescription'] = backup;
            mike['showClydeAIPermissions'] = result;
            mike['inSoundmojiExperiment'] = output;
            mike = verify.bind(yankee)(oscar, foxtrot, mike);
            entity[2] = mike;
            verify = _closure1_slot2;
            mike = _closure1_slot3;
            tango = mike[tango];
            verify = verify.bind(offset)(tango);
            tango = verify.generateChannelAppsSection;
            backup = _closure1_slot0;
            yankee = mike[echo];
            yankee = backup.bind(offset)(yankee);
            foxtrot = yankee.intl;
            yankee = foxtrot.string;
            mike = mike[echo];
            mike = backup.bind(offset)(mike);
            mike = mike.t;
            mike = mike.rrh/W1;
            mike = yankee.bind(foxtrot)(mike);
            mike = tango.bind(verify)(oscar, mike);
            entity[3] = mike;
            tango = _closure1_slot13;
            mike = function() {
                zulu = _closure1_slot2;
                verify = _closure1_slot3;
                mike = 15;
                mike = verify[mike];
                options = undefined;
                tango = zulu.bind(options)(mike);
                zulu = tango.generateChannelVoiceSection;
                mike = _closure2_slot1;
                golf = _closure1_slot0;
                entity = 10;
                report = verify[entity];
                report = golf.bind(options)(report);
                oscar = report.intl;
                report = oscar.string;
                entity = verify[entity];
                entity = golf.bind(options)(entity);
                entity = entity.t;
                entity = entity.46Ra1d;
                entity = report.bind(oscar)(entity);
                entity = zulu.bind(tango)(mike, entity);
                return entity;
            };
            context = tango.bind(offset)(report, mike);
            record = 4;
            papa = entity;
            mike = arraySpread(papa, context, record);
            return entity;
 1239:
            report = _closure1_slot2;
            mike = _closure1_slot3;
            tango = 15;
            entity = mike[tango];
            backup = report.bind(offset)(entity);
            yankee = backup.generateChannelGeneralSection;
            foxtrot = _closure1_slot0;
            update = 10;
            entity = mike[update];
            entity = foxtrot.bind(offset)(entity);
            echo = entity.intl;
            verify = echo.string;
            entity = mike[update];
            entity = foxtrot.bind(offset)(entity);
            entity = entity.t;
            entity = entity.ouHggI;
            verify = verify.bind(echo)(entity);
            entity = {};
            echo = false;
            entity['showManageWebhooks'] = echo;
            verify = yankee.bind(backup)(oscar, verify, entity);
            entity = new Array(6);
            entity[0] = verify;
            verify = mike[tango];
            backup = report.bind(offset)(verify);
            yankee = backup.generateChannelMembershipSection;
            verify = mike[update];
            verify = foxtrot.bind(offset)(verify);
            source = verify.intl;
            echo = source.string;
            verify = mike[update];
            verify = foxtrot.bind(offset)(verify);
            verify = verify.t;
            verify = verify.Ny49TE;
            verify = echo.bind(source)(verify);
            verify = yankee.bind(backup)(oscar, verify);
            entity[1] = verify;
            verify = mike[tango];
            backup = report.bind(offset)(verify);
            yankee = backup.generateChannelStageVoiceSection;
            verify = mike[update];
            verify = foxtrot.bind(offset)(verify);
            source = verify.intl;
            echo = source.string;
            verify = mike[update];
            verify = foxtrot.bind(offset)(verify);
            verify = verify.t;
            verify = verify.46Ra1d;
            verify = echo.bind(source)(verify);
            verify = yankee.bind(backup)(oscar, verify, sizing);
            entity[2] = verify;
            verify = mike[tango];
            backup = report.bind(offset)(verify);
            yankee = backup.generateChannelStageSection;
            verify = mike[update];
            verify = foxtrot.bind(offset)(verify);
            echo = verify.intl;
            sizing = echo.string;
            verify = mike[update];
            verify = foxtrot.bind(offset)(verify);
            verify = verify.t;
            verify = verify.yniaur;
            verify = sizing.bind(echo)(verify);
            verify = yankee.bind(backup)(oscar, verify);
            entity[3] = verify;
            verify = mike[tango];
            backup = report.bind(offset)(verify);
            yankee = backup.generateChannelEventsSection;
            verify = mike[update];
            verify = foxtrot.bind(offset)(verify);
            echo = verify.intl;
            sizing = echo.string;
            verify = mike[update];
            verify = foxtrot.bind(offset)(verify);
            verify = verify.t;
            verify = verify.b8lplZ;
            verify = sizing.bind(echo)(verify);
            verify = yankee.bind(backup)(oscar, verify);
            entity[4] = verify;
            tango = mike[tango];
            verify = report.bind(offset)(tango);
            report = verify.generateChannelVoiceChatSection;
            tango = mike[update];
            tango = foxtrot.bind(offset)(tango);
            yankee = tango.intl;
            tango = yankee.string;
            mike = mike[update];
            mike = foxtrot.bind(offset)(mike);
            mike = mike.t;
            mike = mike.iqlsnJ;
            tango = tango.bind(yankee)(mike);
            mike = {};
            yankee = undefined;
            if(!kilo) { _fun00006_ip = 1750; continue _fun00005 }
 1683:
            backup = _closure1_slot0;
            foxtrot = _closure1_slot3;
            sizing = foxtrot[update];
            sizing = backup.bind(offset)(sizing);
            echo = sizing.intl;
            sizing = echo.format;
            foxtrot = foxtrot[update];
            foxtrot = backup.bind(offset)(foxtrot);
            foxtrot = foxtrot.t;
            backup = foxtrot.4Z9FbW;
            foxtrot = {};
            update = function() { // Original name: setUpAutomod
                tango = _closure1_slot1;
                zulu = _closure1_slot3;
                entity = 16;
                zulu = zulu[entity];
                entity = undefined;
                report = tango.bind(entity)(zulu);
                tango = report.open;
                zulu = _closure2_slot0;
                mike = _closure1_slot10;
                mike = mike.GUILD_AUTOMOD;
                mike = tango.bind(report)(zulu, mike);
                return entity;
            };
            foxtrot['setUpAutomod'] = update;
            yankee = sizing.bind(echo)(backup, foxtrot);
 1750:
            mike['sectionDescription'] = yankee;
            mike['inSoundmojiExperiment'] = output;
            mike = report.bind(verify)(oscar, tango, mike);
            entity[5] = mike;
            return entity;
 1773:
            verify = _closure1_slot2;
            mike = _closure1_slot3;
            tango = 15;
            entity = mike[tango];
            foxtrot = verify.bind(offset)(entity);
            yankee = foxtrot.generateChannelGeneralSection;
            sizing = _closure1_slot0;
            backup = 10;
            entity = mike[backup];
            entity = sizing.bind(offset)(entity);
            echo = entity.intl;
            report = echo.string;
            entity = mike[backup];
            entity = sizing.bind(offset)(entity);
            entity = entity.t;
            entity = entity.ouHggI;
            report = report.bind(echo)(entity);
            entity = {};
            echo = true;
            entity['showManageWebhooks'] = echo;
            report = yankee.bind(foxtrot)(oscar, report, entity);
            entity = new Array(6);
            entity[0] = report;
            report = mike[tango];
            foxtrot = verify.bind(offset)(report);
            yankee = foxtrot.generateChannelMembershipSection;
            report = mike[backup];
            report = sizing.bind(offset)(report);
            update = report.intl;
            echo = update.string;
            report = mike[backup];
            report = sizing.bind(offset)(report);
            report = report.t;
            report = report.Ny49TE;
            report = echo.bind(update)(report);
            report = yankee.bind(foxtrot)(oscar, report);
            entity[1] = report;
            report = mike[tango];
            foxtrot = verify.bind(offset)(report);
            yankee = foxtrot.generateChannelVoiceSection;
            report = mike[backup];
            report = sizing.bind(offset)(report);
            update = report.intl;
            echo = update.string;
            report = mike[backup];
            report = sizing.bind(offset)(report);
            report = report.t;
            report = report.46Ra1d;
            report = echo.bind(update)(report);
            report = yankee.bind(foxtrot)(oscar, report);
            entity[2] = report;
            report = mike[tango];
            yankee = verify.bind(offset)(report);
            verify = yankee.generateChannelVoiceChatSection;
            report = mike[backup];
            report = sizing.bind(offset)(report);
            foxtrot = report.intl;
            report = foxtrot.string;
            mike = mike[backup];
            mike = sizing.bind(offset)(mike);
            mike = mike.t;
            mike = mike.iqlsnJ;
            report = report.bind(foxtrot)(mike);
            mike = {};
            foxtrot = undefined;
            if(!kilo) { _fun00006_ip = 2145; continue _fun00005 }
 2078:
            sizing = _closure1_slot0;
            kilo = _closure1_slot3;
            echo = kilo[backup];
            echo = sizing.bind(offset)(echo);
            update = echo.intl;
            echo = update.format;
            kilo = kilo[backup];
            kilo = sizing.bind(offset)(kilo);
            kilo = kilo.t;
            sizing = kilo.4Z9FbW;
            kilo = {};
            source = function() { // Original name: setUpAutomod
                tango = _closure1_slot1;
                zulu = _closure1_slot3;
                entity = 16;
                zulu = zulu[entity];
                entity = undefined;
                report = tango.bind(entity)(zulu);
                tango = report.open;
                zulu = _closure2_slot0;
                mike = _closure1_slot10;
                mike = mike.GUILD_AUTOMOD;
                mike = tango.bind(report)(zulu, mike);
                return entity;
            };
            kilo['setUpAutomod'] = source;
            foxtrot = echo.bind(update)(sizing, kilo);
 2145:
            mike['sectionDescription'] = foxtrot;
            mike['inSoundmojiExperiment'] = output;
            mike = verify.bind(yankee)(oscar, report, mike);
            entity[3] = mike;
            report = _closure1_slot2;
            mike = _closure1_slot3;
            verify = mike[tango];
            kilo = report.bind(offset)(verify);
            yankee = kilo.generateChannelEventsSection;
            foxtrot = _closure1_slot0;
            verify = mike[backup];
            verify = foxtrot.bind(offset)(verify);
            echo = verify.intl;
            sizing = echo.string;
            verify = mike[backup];
            verify = foxtrot.bind(offset)(verify);
            verify = verify.t;
            verify = verify.b8lplZ;
            verify = sizing.bind(echo)(verify);
            verify = yankee.bind(kilo)(oscar, verify);
            entity[4] = verify;
            tango = mike[tango];
            report = report.bind(offset)(tango);
            tango = report.generateChannelAppsSection;
            verify = mike[backup];
            verify = foxtrot.bind(offset)(verify);
            yankee = verify.intl;
            verify = yankee.string;
            mike = mike[backup];
            mike = foxtrot.bind(offset)(mike);
            mike = mike.t;
            mike = mike.rrh/W1;
            mike = verify.bind(yankee)(mike);
            mike = tango.bind(report)(oscar, mike);
            entity[5] = mike;
            return entity;
 2318:
            report = _closure1_slot2;
            yankee = _closure1_slot3;
            tango = 15;
            entity = yankee[tango];
            backup = report.bind(offset)(entity);
            foxtrot = backup.generateChannelGeneralSection;
            verify = _closure1_slot0;
            mike = 10;
            entity = yankee[mike];
            entity = verify.bind(offset)(entity);
            sizing = entity.intl;
            kilo = sizing.string;
            entity = yankee[mike];
            entity = verify.bind(offset)(entity);
            entity = entity.t;
            entity = entity.AkPxc3;
            entity = kilo.bind(sizing)(entity);
            foxtrot = foxtrot.bind(backup)(oscar, entity);
            entity = new Array(6);
            entity[0] = foxtrot;
            foxtrot = yankee[tango];
            kilo = report.bind(offset)(foxtrot);
            backup = kilo.generateChannelMembershipSection;
            foxtrot = yankee[mike];
            foxtrot = verify.bind(offset)(foxtrot);
            echo = foxtrot.intl;
            sizing = echo.string;
            foxtrot = yankee[mike];
            foxtrot = verify.bind(offset)(foxtrot);
            foxtrot = foxtrot.t;
            foxtrot = foxtrot.Ny49TE;
            foxtrot = sizing.bind(echo)(foxtrot);
            foxtrot = backup.bind(kilo)(oscar, foxtrot);
            entity[1] = foxtrot;
            foxtrot = yankee[tango];
            sizing = report.bind(offset)(foxtrot);
            kilo = sizing.generateChannelTextSection;
            foxtrot = yankee[mike];
            foxtrot = verify.bind(offset)(foxtrot);
            echo = foxtrot.intl;
            backup = echo.string;
            foxtrot = yankee[mike];
            foxtrot = verify.bind(offset)(foxtrot);
            foxtrot = foxtrot.t;
            foxtrot = foxtrot.cKobOz;
            backup = backup.bind(echo)(foxtrot);
            foxtrot = {'showPrivateThreads': true, 'showCreateThreads': true};
            foxtrot['showClydeAIPermissions'] = result;
            foxtrot['inSoundmojiExperiment'] = output;
            foxtrot = kilo.bind(sizing)(oscar, backup, foxtrot);
            entity[2] = foxtrot;
            foxtrot = yankee[tango];
            kilo = report.bind(offset)(foxtrot);
            backup = kilo.generateChannelVoiceSection;
            foxtrot = yankee[mike];
            foxtrot = verify.bind(offset)(foxtrot);
            output = foxtrot.intl;
            sizing = output.string;
            foxtrot = yankee[mike];
            foxtrot = verify.bind(offset)(foxtrot);
            foxtrot = foxtrot.t;
            foxtrot = foxtrot.46Ra1d;
            foxtrot = sizing.bind(output)(foxtrot);
            foxtrot = backup.bind(kilo)(oscar, foxtrot);
            entity[3] = foxtrot;
            foxtrot = yankee[tango];
            kilo = report.bind(offset)(foxtrot);
            backup = kilo.generateChannelAppsSection;
            foxtrot = yankee[mike];
            foxtrot = verify.bind(offset)(foxtrot);
            output = foxtrot.intl;
            sizing = output.string;
            foxtrot = yankee[mike];
            foxtrot = verify.bind(offset)(foxtrot);
            foxtrot = foxtrot.t;
            foxtrot = foxtrot.rrh/W1;
            foxtrot = sizing.bind(output)(foxtrot);
            foxtrot = backup.bind(kilo)(oscar, foxtrot);
            entity[4] = foxtrot;
            romeo = _closure1_slot13;
            options = options.showStageChannelPermissions;
            zulu = function() {
                zulu = _closure1_slot2;
                verify = _closure1_slot3;
                mike = 15;
                mike = verify[mike];
                options = undefined;
                tango = zulu.bind(options)(mike);
                zulu = tango.generateChannelStageSection;
                mike = _closure2_slot1;
                golf = _closure1_slot0;
                entity = 10;
                report = verify[entity];
                report = golf.bind(options)(report);
                oscar = report.intl;
                report = oscar.string;
                entity = verify[entity];
                entity = golf.bind(options)(entity);
                entity = entity.t;
                entity = entity.yniaur;
                entity = report.bind(oscar)(entity);
                entity = zulu.bind(tango)(mike, entity);
                return entity;
            };
            context = romeo.bind(offset)(options, zulu);
            papa = entity;
            record = golf;
            zulu = arraySpread(papa, context, record);
            tango = yankee[tango];
            report = report.bind(offset)(tango);
            tango = report.generateChannelEventsSection;
            golf = yankee[mike];
            golf = verify.bind(offset)(golf);
            options = golf.intl;
            golf = options.string;
            mike = yankee[mike];
            mike = verify.bind(offset)(mike);
            mike = mike.t;
            mike = mike.b8lplZ;
            mike = golf.bind(options)(mike);
            mike = tango.bind(report)(oscar, mike);
            entity[zulu] = mike;
            mike = 1;
            mike = zulu + mike;
            return entity;
        }
    };
    mike['generateChannelPermissionSpec'] = golf;
    golf = function(argFoo) { // Original name: generateGuildPermissionSpec
        _fun00009: for(var _fun00010_ip = 0; ; ) switch(_fun00010_ip) {
 0:
            entity = argFoo;
            mike = global;
            mike = mike.Set;
            zulu = mike.prototype;
            zulu = Object.create(zulu, {constructor: {value: mike}});
            verify = zulu;
            mike = new verify[mike](options);
            tango = mike instanceof Object ? mike : zulu;
            zulu = entity.hasFeature;
            mike = _closure1_slot8;
            mike = mike.COMMUNITY;
            mike = zulu.bind(entity)(mike);
            if(mike) { _fun00010_ip = 87; continue _fun00009 }
 58:
            zulu = tango.add;
            mike = _closure1_slot9;
            report = mike.VIEW_GUILD_ANALYTICS;
            mike = report.toString;
            mike = mike.bind(report)();
            mike = zulu.bind(tango)(mike);
 87:
            report = _closure1_slot2;
            zulu = _closure1_slot3;
            mike = 15;
            mike = zulu[mike];
            zulu = undefined;
            report = report.bind(zulu)(mike);
            mike = report.generateGuildPermissionSpec;
            oscar = _closure1_slot12;
            entity = entity.id;
            entity = oscar.bind(zulu)(entity);
            mike = mike.bind(report)(entity);
            entity = function(argFoo, argBar) { // Original name: filterPermissions
                _fun00011: for(var _fun00012_ip = 0; ; ) switch(_fun00012_ip) {
 0:
                    tango = argFoo;
                    entity = argBar;
                    var _closure3_slot0 = entity;
                    report = entity.size;
                    zulu = 0;
                    entity = tango;
                    if(!(zulu !== report)) { _fun00012_ip = 43; continue _fun00011 }
 26:
                    zulu = tango.map;
                    mike = function(argFoo) {
                        mike = argFoo;
                        entity = {};
                        oscar = entity;
                        report = mike;
                        zulu = copyDataProperties(oscar, report);
                        tango = mike.permissions;
                        zulu = tango.filter;
                        mike = function(argFoo) {
                            zulu = _closure3_slot0;
                            mike = zulu.has;
                            entity = argFoo;
                            tango = entity.flag;
                            entity = tango.toString;
                            entity = entity.bind(tango)();
                            entity = mike.bind(zulu)(entity);
                            entity = !entity;
                            return entity;
                        };
                        zulu = zulu.bind(tango)(mike);
                        mike = 'permissions';
                        entity[mike] = zulu;
                        return entity;
                    };
                    entity = zulu.bind(tango)(mike);
 43:
                    return entity;
                }
            };
            entity = entity.bind(zulu)(mike, tango);
            return entity;
        }
    };
    mike['generateGuildPermissionSpec'] = golf;
    tango = function(argFoo) { // Original name: getGuildPermissionSpecMap
        zulu = _closure1_slot2;
        tango = _closure1_slot3;
        mike = 15;
        mike = tango[mike];
        report = undefined;
        zulu = zulu.bind(report)(mike);
        mike = zulu.getGuildPermissionSpec;
        tango = _closure1_slot12;
        entity = argFoo;
        entity = entity.id;
        entity = tango.bind(report)(entity);
        entity = mike.bind(zulu)(entity);
        return entity;
    };
    mike['getGuildPermissionSpecMap'] = tango;
    tango = 18;
    tango = oscar[tango];
    oscar = report.bind(entity)(tango);
    report = oscar.fileFinishedImporting;
    tango = 'utils/PermissionSpecUtils.tsx';
    tango = report.bind(oscar)(tango);
    zulu['default'] = mike;
    return entity;
})();