// app/utils/native/AvatarUtils.tsx
export default (function(global, require, metroImportDefault, metroImportAll, moduleObject, exports, dependencyMap) {
    var9 = require;
    var11 = metroImportDefault;
    var3 = exports;
    var10 = dependencyMap;
    var _closure1_slot0 = var11;
    var _closure1_slot1 = var10;
    var4 = function ensureAvatarSource(arg1) {
        _fun0001: for(var _fun0001_ip = 0; ; ) switch(_fun0001_ip) {
case 0:
            var4 = arg1;
            var2 = 'number';
            var1 = typeof var4;
            if(!(var2 !== var1)) { _fun0001_ip = 2; continue _fun0001 }
case 3:
            var1 = global;
            var2 = var1.Array;
            var1 = var2.isArray;
            var2 = var1.bind(var2)(var4);
            var1 = var4;
            if(!var2) { _fun0001_ip = 4; continue _fun0001 }
case 2:
            var3 = _closure1_slot2;
            var2 = var3.resolveAssetSource;
            var1 = var2.bind(var3)(var4);
case 4:
            return var1;
        }
    };
    var12 = global;
    var7 = var12.Object;
    var6 = var7.defineProperty;
    var5 = {};
    var1 = true;
    var5['value'] = var1;
    var1 = '__esModule';
    var1 = var6.bind(var7)(var3, var1, var5);
    var1 = 0;
    var5 = var10[var1];
    var1 = undefined;
    var5 = var9.bind(var1)(var5);
    var6 = var5.Image;
    var _closure1_slot2 = var6;
    var7 = var5.NativeModules;
    var5 = 1;
    var5 = var10[var5];
    var5 = var11.bind(var1)(var5);
    var6 = new Array(6);
    var6[0] = var5;
    var5 = 2;
    var5 = var10[var5];
    var5 = var11.bind(var1)(var5);
    var6[1] = var5;
    var5 = 3;
    var5 = var10[var5];
    var5 = var11.bind(var1)(var5);
    var6[2] = var5;
    var5 = 4;
    var5 = var10[var5];
    var5 = var11.bind(var1)(var5);
    var6[3] = var5;
    var5 = 5;
    var5 = var10[var5];
    var5 = var11.bind(var1)(var5);
    var6[4] = var5;
    var5 = 6;
    var5 = var10[var5];
    var5 = var11.bind(var1)(var5);
    var6[5] = var5;
    var5 = 7;
    var5 = var10[var5];
    var8 = var11.bind(var1)(var5);
    var5 = new Array(6);
    var5[0] = var8;
    var8 = 8;
    var8 = var10[var8];
    var8 = var11.bind(var1)(var8);
    var5[1] = var8;
    var8 = 9;
    var8 = var10[var8];
    var8 = var11.bind(var1)(var8);
    var5[2] = var8;
    var8 = 10;
    var8 = var10[var8];
    var8 = var11.bind(var1)(var8);
    var5[3] = var8;
    var8 = 11;
    var8 = var10[var8];
    var8 = var11.bind(var1)(var8);
    var5[4] = var8;
    var8 = 12;
    var8 = var10[var8];
    var8 = var11.bind(var1)(var8);
    var5[5] = var8;
    var8 = 13;
    var8 = var10[var8];
    var13 = var11.bind(var1)(var8);
    var8 = new Array(8);
    var8[0] = var13;
    var13 = 14;
    var13 = var10[var13];
    var13 = var11.bind(var1)(var13);
    var8[1] = var13;
    var13 = 15;
    var13 = var10[var13];
    var13 = var11.bind(var1)(var13);
    var8[2] = var13;
    var13 = 16;
    var13 = var10[var13];
    var13 = var11.bind(var1)(var13);
    var8[3] = var13;
    var13 = 17;
    var13 = var10[var13];
    var13 = var11.bind(var1)(var13);
    var8[4] = var13;
    var13 = 18;
    var13 = var10[var13];
    var13 = var11.bind(var1)(var13);
    var8[5] = var13;
    var13 = 19;
    var13 = var10[var13];
    var13 = var11.bind(var1)(var13);
    var8[6] = var13;
    var13 = 20;
    var13 = var10[var13];
    var13 = var11.bind(var1)(var13);
    var8[7] = var13;
    var13 = var12.Set;
    var12 = var7.MediaManager;
    var7 = var12.getConstants;
    var7 = var7.bind(var12)();
    var16 = var7.supportedExtensions;
    var12 = var13.prototype;
    var12 = Object.create(var12, {constructor: {value: var13}});
    var17 = var12;
    var7 = new var17[var13](var16, var15);
    var7 = var7 instanceof Object ? var7 : var12;
    var _closure1_slot3 = var7;
    var7 = {};
    var7['DEFAULT_AVATARS'] = var6;
    var7['DEFAULT_PROVISIONAL_AVATARS'] = var5;
    var7['DEFAULT_GROUP_DM_AVATARS'] = var8;
    var8 = {};
    var12 = 21;
    var12 = var10[var12];
    var12 = var11.bind(var1)(var12);
    var8['clyde'] = var12;
    var12 = 22;
    var12 = var10[var12];
    var12 = var11.bind(var1)(var12);
    var8['nitro_wumpus'] = var12;
    var7['BOT_AVATARS'] = var8;
    var8 = 24;
    var8 = var10[var8];
    var8 = var11.bind(var1)(var8);
    var7['DEFAULT_CHANNEL_ICON'] = var8;
    var7['ensureAvatarSource'] = var4;
    var8 = function canUseWebp() {
        var3 = _closure1_slot3;
        var2 = var3.has;
        var1 = 'webp';
        var1 = var2.bind(var3)(var1);
        return var1;
    };
    var7['canUseWebp'] = var8;
    var8 = 25;
    var8 = var10[var8];
    var10 = var9.bind(var1)(var8);
    var9 = var10.fileFinishedImporting;
    var8 = 'utils/native/AvatarUtils.tsx';
    var8 = var9.bind(var10)(var8);
    var3['default'] = var7;
    var3['DEFAULT_AVATARS'] = var6;
    var3['DEFAULT_PROVISIONAL_AVATARS'] = var5;
    var3['ensureAvatarSource'] = var4;
    var2 = function getAutomodAvatarURL() {
        var3 = _closure1_slot0;
        var2 = _closure1_slot1;
        var1 = 23;
        var2 = var2[var1];
        var1 = undefined;
        var1 = var3.bind(var1)(var2);
        return var1;
    };
    var3['getAutomodAvatarURL'] = var2;
    return var1;
})();