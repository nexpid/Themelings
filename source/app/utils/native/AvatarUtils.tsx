// app/utils/native/AvatarUtils.tsx
export default (function(argFoo, argBar, argBaz, _, __, argFred, argPlugh) {
    verify = argBar;
    yankee = argBaz;
    zulu = argFred;
    offset = argPlugh;
    var _closure1_slot0 = yankee;
    var _closure1_slot1 = offset;
    tango = function(argFoo) { // Original name: ensureAvatarSource
        _fun36261: for(var _fun36261_ip = 0; ; ) switch(_fun36261_ip) {
 0:
            tango = argFoo;
            mike = 'number';
            entity = typeof tango;
            if(!(mike !== entity)) { _fun36261_ip = 38; continue _fun36261 }
 14:
            entity = global;
            mike = entity.Array;
            entity = mike.isArray;
            mike = entity.bind(mike)(tango);
            entity = tango;
            if(!mike) { _fun36261_ip = 56; continue _fun36261 }
 38:
            zulu = _closure1_slot2;
            mike = zulu.resolveAssetSource;
            entity = mike.bind(zulu)(tango);
 56:
            return entity;
        }
    };
    romeo = global;
    golf = romeo.Object;
    oscar = golf.defineProperty;
    report = {};
    entity = true;
    report['value'] = entity;
    entity = '__esModule';
    entity = oscar.bind(golf)(zulu, entity, report);
    entity = 0;
    report = offset[entity];
    entity = undefined;
    report = verify.bind(entity)(report);
    oscar = report.Image;
    var _closure1_slot2 = oscar;
    golf = report.NativeModules;
    report = 1;
    report = offset[report];
    report = yankee.bind(entity)(report);
    oscar = new Array(6);
    oscar[0] = report;
    report = 2;
    report = offset[report];
    report = yankee.bind(entity)(report);
    oscar[1] = report;
    report = 3;
    report = offset[report];
    report = yankee.bind(entity)(report);
    oscar[2] = report;
    report = 4;
    report = offset[report];
    report = yankee.bind(entity)(report);
    oscar[3] = report;
    report = 5;
    report = offset[report];
    report = yankee.bind(entity)(report);
    oscar[4] = report;
    report = 6;
    report = offset[report];
    report = yankee.bind(entity)(report);
    oscar[5] = report;
    report = 7;
    report = offset[report];
    options = yankee.bind(entity)(report);
    report = new Array(6);
    report[0] = options;
    options = 8;
    options = offset[options];
    options = yankee.bind(entity)(options);
    report[1] = options;
    options = 9;
    options = offset[options];
    options = yankee.bind(entity)(options);
    report[2] = options;
    options = 10;
    options = offset[options];
    options = yankee.bind(entity)(options);
    report[3] = options;
    options = 11;
    options = offset[options];
    options = yankee.bind(entity)(options);
    report[4] = options;
    options = 12;
    options = offset[options];
    options = yankee.bind(entity)(options);
    report[5] = options;
    options = 13;
    options = offset[options];
    foxtrot = yankee.bind(entity)(options);
    options = new Array(8);
    options[0] = foxtrot;
    foxtrot = 14;
    foxtrot = offset[foxtrot];
    foxtrot = yankee.bind(entity)(foxtrot);
    options[1] = foxtrot;
    foxtrot = 15;
    foxtrot = offset[foxtrot];
    foxtrot = yankee.bind(entity)(foxtrot);
    options[2] = foxtrot;
    foxtrot = 16;
    foxtrot = offset[foxtrot];
    foxtrot = yankee.bind(entity)(foxtrot);
    options[3] = foxtrot;
    foxtrot = 17;
    foxtrot = offset[foxtrot];
    foxtrot = yankee.bind(entity)(foxtrot);
    options[4] = foxtrot;
    foxtrot = 18;
    foxtrot = offset[foxtrot];
    foxtrot = yankee.bind(entity)(foxtrot);
    options[5] = foxtrot;
    foxtrot = 19;
    foxtrot = offset[foxtrot];
    foxtrot = yankee.bind(entity)(foxtrot);
    options[6] = foxtrot;
    foxtrot = 20;
    foxtrot = offset[foxtrot];
    foxtrot = yankee.bind(entity)(foxtrot);
    options[7] = foxtrot;
    foxtrot = romeo.Set;
    romeo = golf.MediaManager;
    golf = romeo.getConstants;
    golf = golf.bind(romeo)();
    sizing = golf.supportedExtensions;
    romeo = foxtrot.prototype;
    romeo = Object.create(romeo, {constructor: {value: foxtrot}});
    output = romeo;
    golf = new output[foxtrot](sizing, kilo);
    golf = golf instanceof Object ? golf : romeo;
    var _closure1_slot3 = golf;
    golf = {};
    golf['DEFAULT_AVATARS'] = oscar;
    golf['DEFAULT_PROVISIONAL_AVATARS'] = report;
    golf['DEFAULT_GROUP_DM_AVATARS'] = options;
    options = {};
    romeo = 21;
    romeo = offset[romeo];
    romeo = yankee.bind(entity)(romeo);
    options['clyde'] = romeo;
    romeo = 22;
    romeo = offset[romeo];
    romeo = yankee.bind(entity)(romeo);
    options['nitro_wumpus'] = romeo;
    golf['BOT_AVATARS'] = options;
    options = 24;
    options = offset[options];
    options = yankee.bind(entity)(options);
    golf['DEFAULT_CHANNEL_ICON'] = options;
    golf['ensureAvatarSource'] = tango;
    options = function() { // Original name: canUseWebp
        zulu = _closure1_slot3;
        mike = zulu.has;
        entity = 'webp';
        entity = mike.bind(zulu)(entity);
        return entity;
    };
    golf['canUseWebp'] = options;
    options = 25;
    options = offset[options];
    offset = verify.bind(entity)(options);
    verify = offset.fileFinishedImporting;
    options = 'utils/native/AvatarUtils.tsx';
    options = verify.bind(offset)(options);
    zulu['default'] = golf;
    zulu['DEFAULT_AVATARS'] = oscar;
    zulu['DEFAULT_PROVISIONAL_AVATARS'] = report;
    zulu['ensureAvatarSource'] = tango;
    mike = function() { // Original name: getAutomodAvatarURL
        zulu = _closure1_slot0;
        mike = _closure1_slot1;
        entity = 23;
        mike = mike[entity];
        entity = undefined;
        entity = zulu.bind(entity)(mike);
        return entity;
    };
    zulu['getAutomodAvatarURL'] = mike;
    return entity;
})();