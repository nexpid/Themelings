// app/utils/native/AutocompleteUtils.tsx
export default (function(_, argBar, __, ___, ____, argFred, argPlugh) {
    report = argBar;
    zulu = argFred;
    oscar = argPlugh;
    var _closure1_slot0 = report;
    var _closure1_slot1 = oscar;
    entity = global;
    options = entity.Object;
    golf = options.defineProperty;
    mike = {};
    entity = true;
    mike['value'] = entity;
    entity = '__esModule';
    entity = golf.bind(options)(zulu, entity, mike);
    entity = 0;
    mike = oscar[entity];
    entity = undefined;
    mike = report.bind(entity)(mike);
    mike = mike.AutoCompleteResultTypes;
    var _closure1_slot2 = mike;
    mike = {};
    golf = function() { // Original name: MENTION_EVERYONE
        entity = {'type': null, 'test': 'everyone', 'text': '@everyone'};
        zulu = _closure1_slot2;
        zulu = zulu.GLOBAL;
        entity['type'] = zulu;
        oscar = _closure1_slot0;
        golf = _closure1_slot1;
        mike = 1;
        zulu = golf[mike];
        report = undefined;
        zulu = oscar.bind(report)(zulu);
        tango = zulu.intl;
        zulu = tango.string;
        mike = golf[mike];
        mike = oscar.bind(report)(mike);
        mike = mike.t;
        mike = mike.5atMLS;
        mike = zulu.bind(tango)(mike);
        entity['description'] = mike;
        return entity;
    };
    mike['MENTION_EVERYONE'] = golf;
    golf = function() { // Original name: MENTION_HERE
        entity = {'type': null, 'test': 'here', 'text': '@here'};
        zulu = _closure1_slot2;
        zulu = zulu.GLOBAL;
        entity['type'] = zulu;
        oscar = _closure1_slot0;
        golf = _closure1_slot1;
        mike = 1;
        zulu = golf[mike];
        report = undefined;
        zulu = oscar.bind(report)(zulu);
        tango = zulu.intl;
        zulu = tango.string;
        mike = golf[mike];
        mike = oscar.bind(report)(mike);
        mike = mike.t;
        mike = mike.iX9SFB;
        mike = zulu.bind(tango)(mike);
        entity['description'] = mike;
        return entity;
    };
    mike['MENTION_HERE'] = golf;
    tango = function() { // Original name: LAUNCHABLE_APPLICATIONS
        entity = new Array(0);
        return entity;
    };
    mike['LAUNCHABLE_APPLICATIONS'] = tango;
    tango = 2;
    tango = oscar[tango];
    oscar = report.bind(entity)(tango);
    report = oscar.fileFinishedImporting;
    tango = 'utils/native/AutocompleteUtils.tsx';
    tango = report.bind(oscar)(tango);
    zulu['default'] = mike;
    return entity;
})();