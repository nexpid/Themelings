// app/utils/RelationshipUtils.tsx
export default (function(argFoo, argBar, argBaz, _, __, argFre, argPlu) {
    report = argBar;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    entity = argBaz;
    var _closure1_slot1 = entity;
    var _closure1_slot2 = oscard;
    entity = function(argFoo, argBar, argBaz) { // Original name: showNotification
        michal = argFoo;
        tangon = _closure1_slot1;
        report = _closure1_slot2;
        entity = 1;
        zuuluu = report[entity];
        entity = undefined;
        option = tangon.bind(entity)(zuuluu);
        golfie = option.showNotification;
        zuuluu = 2;
        zuuluu = report[zuuluu];
        tangon = tangon.bind(entity)(zuuluu);
        zuuluu = tangon.getUserAvatarURL;
        foxtra = zuuluu.bind(tangon)(michal);
        romeon = michal.username;
        tangon = {'omitViewTracking': true, 'omitClickTracking': true, 'tag': null, 'onClick': null, 'isUserAvatar': true};
        michal = michal.id;
        tangon['tag'] = michal;
        michal = argBaz;
        tangon['onClick'] = michal;
        yankee = argBar;
        offset = {};
        backup = option;
        verify = tangon;
        michal = backup[golfie](foxtra, romeon, yankee, offset, verify, option);
        return entity;
    };
    var _closure1_slot4 = entity;
    entity = global;
    option = entity.Object;
    golfie = option.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(option)(zuuluu, entity, tangon);
    entity = 0;
    tangon = oscard[entity];
    entity = undefined;
    tangon = report.bind(entity)(tangon);
    tangon = tangon.FriendsSections;
    var _closure1_slot3 = tangon;
    tangon = 6;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'utils/RelationshipUtils.tsx';
    tangon = report.bind(oscard)(tangon);
    tangon = function(argFoo) { // Original name: showPendingNotification
        report = _closure1_slot4;
        oscard = _closure1_slot0;
        golfie = _closure1_slot2;
        michal = 3;
        zuuluu = golfie[michal];
        entity = undefined;
        zuuluu = oscard.bind(entity)(zuuluu);
        tangon = zuuluu.intl;
        zuuluu = tangon.string;
        michal = golfie[michal];
        michal = oscard.bind(entity)(michal);
        michal = michal.t;
        michal = michal.t3+Af3;
        tangon = zuuluu.bind(tangon)(michal);
        zuuluu = argFoo;
        michal = function() {
            tangon = _closure1_slot1;
            zuuluu = _closure1_slot2;
            entity = 4;
            zuuluu = zuuluu[entity];
            entity = undefined;
            report = tangon.bind(entity)(zuuluu);
            tangon = report.transitionToSection;
            michal = _closure1_slot3;
            zuuluu = michal.PENDING;
            michal = {};
            oscard = true;
            michal['explicit'] = oscard;
            michal = tangon.bind(report)(zuuluu, michal);
            return entity;
        };
        michal = report.bind(entity)(zuuluu, tangon, michal);
        return entity;
    };
    zuuluu['showPendingNotification'] = tangon;
    michal = function(argFoo) { // Original name: showAcceptedNotification
        report = argFoo;
        var _closure2_slot0 = report;
        tangon = _closure1_slot4;
        option = _closure1_slot0;
        verify = _closure1_slot2;
        zuuluu = 3;
        oscard = verify[zuuluu];
        entity = undefined;
        oscard = option.bind(entity)(oscard);
        golfie = oscard.intl;
        oscard = golfie.string;
        zuuluu = verify[zuuluu];
        zuuluu = option.bind(entity)(zuuluu);
        zuuluu = zuuluu.t;
        zuuluu = zuuluu.MYr3KS;
        zuuluu = oscard.bind(golfie)(zuuluu);
        michal = function() {
            zuuluu = _closure1_slot1;
            michal = _closure1_slot2;
            entity = 5;
            michal = michal[entity];
            entity = undefined;
            tangon = zuuluu.bind(entity)(michal);
            zuuluu = tangon.openPrivateChannel;
            michal = {};
            report = _closure2_slot0;
            report = report.id;
            michal['recipientIds'] = report;
            michal = zuuluu.bind(tangon)(michal);
            return entity;
        };
        michal = tangon.bind(entity)(report, zuuluu, michal);
        return entity;
    };
    zuuluu['showAcceptedNotification'] = michal;
    return entity;
})();