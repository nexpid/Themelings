// app/utils/RelationshipUtils.tsx
export default (function(argFoo, argBar, argBaz, _, __, argFred, argPlugh) {
    report = argBar;
    zulu = argFred;
    oscar = argPlugh;
    var _closure1_slot0 = report;
    entity = argBaz;
    var _closure1_slot1 = entity;
    var _closure1_slot2 = oscar;
    entity = function(argFoo, argBar, argBaz) { // Original name: showNotification
        mike = argFoo;
        tango = _closure1_slot1;
        report = _closure1_slot2;
        entity = 1;
        zulu = report[entity];
        entity = undefined;
        options = tango.bind(entity)(zulu);
        golf = options.showNotification;
        zulu = 2;
        zulu = report[zulu];
        tango = tango.bind(entity)(zulu);
        zulu = tango.getUserAvatarURL;
        foxtrot = zulu.bind(tango)(mike);
        romeo = mike.username;
        tango = {'omitViewTracking': true, 'omitClickTracking': true, 'tag': null, 'onClick': null, 'isUserAvatar': true};
        mike = mike.id;
        tango['tag'] = mike;
        mike = argBaz;
        tango['onClick'] = mike;
        yankee = argBar;
        offset = {};
        backup = options;
        verify = tango;
        mike = backup[golf](foxtrot, romeo, yankee, offset, verify, options);
        return entity;
    };
    var _closure1_slot5 = entity;
    entity = global;
    options = entity.Object;
    golf = options.defineProperty;
    tango = {};
    entity = true;
    tango['value'] = entity;
    entity = '__esModule';
    entity = golf.bind(options)(zulu, entity, tango);
    entity = 0;
    tango = oscar[entity];
    entity = undefined;
    tango = report.bind(entity)(tango);
    golf = tango.Routes;
    var _closure1_slot3 = golf;
    tango = tango.FriendsSections;
    var _closure1_slot4 = tango;
    tango = 7;
    tango = oscar[tango];
    oscar = report.bind(entity)(tango);
    report = oscar.fileFinishedImporting;
    tango = 'utils/RelationshipUtils.tsx';
    tango = report.bind(oscar)(tango);
    tango = function(argFoo) { // Original name: showPendingNotification
        report = _closure1_slot5;
        oscar = _closure1_slot0;
        golf = _closure1_slot2;
        mike = 3;
        zulu = golf[mike];
        entity = undefined;
        zulu = oscar.bind(entity)(zulu);
        tango = zulu.intl;
        zulu = tango.string;
        mike = golf[mike];
        mike = oscar.bind(entity)(mike);
        mike = mike.t;
        mike = mike.t3+Af3;
        tango = zulu.bind(tango)(mike);
        zulu = argFoo;
        mike = function() {
            tango = _closure1_slot0;
            report = _closure1_slot2;
            entity = 4;
            zulu = report[entity];
            entity = undefined;
            oscar = tango.bind(entity)(zulu);
            tango = oscar.transitionTo;
            zulu = _closure1_slot3;
            zulu = zulu.FRIENDS;
            zulu = tango.bind(oscar)(zulu);
            tango = _closure1_slot1;
            zulu = 5;
            zulu = report[zulu];
            tango = tango.bind(entity)(zulu);
            zulu = tango.setSection;
            mike = _closure1_slot4;
            mike = mike.PENDING;
            mike = zulu.bind(tango)(mike);
            return entity;
        };
        mike = report.bind(entity)(zulu, tango, mike);
        return entity;
    };
    zulu['showPendingNotification'] = tango;
    mike = function(argFoo) { // Original name: showAcceptedNotification
        report = argFoo;
        var _closure2_slot0 = report;
        tango = _closure1_slot5;
        options = _closure1_slot0;
        verify = _closure1_slot2;
        zulu = 3;
        oscar = verify[zulu];
        entity = undefined;
        oscar = options.bind(entity)(oscar);
        golf = oscar.intl;
        oscar = golf.string;
        zulu = verify[zulu];
        zulu = options.bind(entity)(zulu);
        zulu = zulu.t;
        zulu = zulu.MYr3KS;
        zulu = oscar.bind(golf)(zulu);
        mike = function() {
            zulu = _closure1_slot1;
            mike = _closure1_slot2;
            entity = 6;
            mike = mike[entity];
            entity = undefined;
            tango = zulu.bind(entity)(mike);
            zulu = tango.openPrivateChannel;
            mike = _closure2_slot0;
            mike = mike.id;
            mike = zulu.bind(tango)(mike);
            return entity;
        };
        mike = tango.bind(entity)(report, zulu, mike);
        return entity;
    };
    zulu['showAcceptedNotification'] = mike;
    return entity;
})();