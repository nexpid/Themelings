// app/utils/Future.tsx
export default (function(argFoo, argBar, argBaz, _, __, argFre, argPlu) {
    golfie = argBaz;
    zuuluu = argFre;
    report = argPlu;
    entity = global;
    option = entity.Object;
    tangon = option.defineProperty;
    michal = {};
    entity = true;
    michal['value'] = entity;
    entity = '__esModule';
    entity = tangon.bind(option)(zuuluu, entity, michal);
    entity = 0;
    michal = report[entity];
    entity = undefined;
    tangon = golfie.bind(entity)(michal);
    michal = 1;
    michal = report[michal];
    michal = golfie.bind(entity)(michal);
    var _closure1_slot0 = michal;
    michal = function() { // Original name: Future
        zuuluu = this;
        var _closure2_slot0 = zuuluu;
        report = _closure1_slot0;
        tangon = _closure1_slot1;
        entity = undefined;
        tangon = report.bind(entity)(zuuluu, tangon);
        tangon = global;
        report = tangon.Promise;
        tangon = report.prototype;
        tangon = Object.create(tangon, {constructor: {value: report}});
        golfie = function(argFoo, argBar) {
            michal = _closure2_slot0;
            entity = argFoo;
            michal['resolve'] = entity;
            entity = argBar;
            michal['reject'] = entity;
            entity = undefined;
            return entity;
        };
        option = tangon;
        michal = new option[report](golfie, oscard);
        michal = michal instanceof Object ? michal : tangon;
        zuuluu['promise'] = michal;
        return entity;
    };
    var _closure1_slot1 = michal;
    michal = tangon.bind(entity)(michal);
    tangon = 2;
    report = report[tangon];
    tangon = argBar;
    oscard = tangon.bind(entity)(report);
    report = oscard.fileFinishedImporting;
    tangon = 'utils/Future.tsx';
    tangon = report.bind(oscard)(tangon);
    zuuluu['Future'] = michal;
    return entity;
})();