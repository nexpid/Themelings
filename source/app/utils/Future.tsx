// app/utils/Future.tsx
export default (function(argFoo, argBar, argBaz, _, __, argFred, argPlugh) {
    golf = argBaz;
    zulu = argFred;
    report = argPlugh;
    entity = global;
    options = entity.Object;
    tango = options.defineProperty;
    mike = {};
    entity = true;
    mike['value'] = entity;
    entity = '__esModule';
    entity = tango.bind(options)(zulu, entity, mike);
    entity = 0;
    mike = report[entity];
    entity = undefined;
    tango = golf.bind(entity)(mike);
    mike = 1;
    mike = report[mike];
    mike = golf.bind(entity)(mike);
    var _closure1_slot0 = mike;
    mike = function() { // Original name: Future
        zulu = this;
        var _closure2_slot0 = zulu;
        report = _closure1_slot0;
        tango = _closure1_slot1;
        entity = undefined;
        tango = report.bind(entity)(zulu, tango);
        tango = global;
        report = tango.Promise;
        tango = report.prototype;
        tango = Object.create(tango, {constructor: {value: report}});
        golf = function(argFoo, argBar) {
            mike = _closure2_slot0;
            entity = argFoo;
            mike['resolve'] = entity;
            entity = argBar;
            mike['reject'] = entity;
            entity = undefined;
            return entity;
        };
        options = tango;
        mike = new options[report](golf, oscar);
        mike = mike instanceof Object ? mike : tango;
        zulu['promise'] = mike;
        return entity;
    };
    var _closure1_slot1 = mike;
    mike = tango.bind(entity)(mike);
    tango = 2;
    report = report[tango];
    tango = argBar;
    oscar = tango.bind(entity)(report);
    report = oscar.fileFinishedImporting;
    tango = 'utils/Future.tsx';
    tango = report.bind(oscar)(tango);
    zulu['Future'] = mike;
    return entity;
})();