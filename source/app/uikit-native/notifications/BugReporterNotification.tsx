// app/uikit-native/notifications/BugReporterNotification.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    report = argBar;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    entity = argBaz;
    var _closure1_slot1 = entity;
    var _closure1_slot2 = oscard;
    entity = global;
    option = entity.Object;
    golfie = option.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(option)(zuuluu, entity, tangon);
    entity = 0;
    golfie = oscard[entity];
    tangon = argCor;
    entity = undefined;
    tangon = tangon.bind(entity)(golfie);
    tangon = 1;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    golfie = tangon.View;
    var _closure1_slot3 = golfie;
    golfie = tangon.Image;
    var _closure1_slot4 = golfie;
    option = tangon.StyleSheet;
    tangon = 2;
    golfie = oscard[tangon];
    golfie = report.bind(entity)(golfie);
    golfie = golfie.jsx;
    var _closure1_slot5 = golfie;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.jsxs;
    var _closure1_slot6 = tangon;
    golfie = option.create;
    tangon = {};
    verify = {'padding': 8, 'flexDirection': 'row', 'paddingRight': 36, 'justifyContent': 'flex-end'};
    tangon['container'] = verify;
    verify = {'flexDirection': 'column', 'flexShrink': 2, 'maxHeight': 120, 'overflow': 'hidden'};
    tangon['content'] = verify;
    verify = {};
    offset = 4;
    verify['marginBottom'] = offset;
    tangon['text'] = verify;
    verify = {'borderRadius': 20, 'height': 40, 'width': 40, 'marginRight': 12};
    tangon['clyde'] = verify;
    verify = {'resizeMode': 'contain', 'height': 75, 'width': 40, 'marginRight': 8};
    tangon['preview'] = verify;
    tangon = golfie.bind(option)(tangon);
    var _closure1_slot7 = tangon;
    tangon = 5;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'uikit-native/notifications/BugReporterNotification.tsx';
    tangon = report.bind(oscard)(tangon);
    michal = function(argFoo) {
        entity = argFoo;
        entity = entity.notification;
        yankee = entity.imageUri;
        tangon = _closure1_slot6;
        zuuluu = _closure1_slot3;
        michal = {};
        verify = _closure1_slot7;
        entity = verify.container;
        michal['style'] = entity;
        option = _closure1_slot5;
        golfie = _closure1_slot1;
        backup = _closure1_slot2;
        entity = 3;
        report = backup[entity];
        entity = undefined;
        golfie = golfie.bind(entity)(report);
        report = {};
        offset = verify.clyde;
        report['style'] = offset;
        offset = {};
        romeon = 'https://cdn.discordapp.com/attachments/1036754139352399934/1040387636818350181/clyde.png';
        offset['uri'] = romeon;
        report['source'] = offset;
        offset = 'contain';
        report['resizeMode'] = offset;
        golfie = option.bind(entity)(golfie, report);
        report = new Array(3);
        report[0] = golfie;
        golfie = {};
        offset = verify.content;
        golfie['style'] = offset;
        foxtra = _closure1_slot0;
        romeon = 4;
        offset = backup[romeon];
        offset = foxtra.bind(entity)(offset);
        kiloes = offset.Text;
        offset = {'variant': 'text-md/semibold', 'color': 'header-primary', 'style': null, 'children': 'Bug Catcher Clyde'};
        sizing = verify.text;
        offset['style'] = sizing;
        kiloes = option.bind(entity)(kiloes, offset);
        offset = new Array(2);
        offset[0] = kiloes;
        romeon = backup[romeon];
        romeon = foxtra.bind(entity)(romeon);
        foxtra = romeon.Text;
        romeon = {'variant': 'text-md/medium', 'color': 'header-secondary', 'style': null, 'children': "Bzzz! Found a bug? Tap to submit (don't just be a fly on the wall)"};
        backup = verify.text;
        romeon['style'] = backup;
        romeon = option.bind(entity)(foxtra, romeon);
        offset[1] = romeon;
        golfie['children'] = offset;
        golfie = tangon.bind(entity)(zuuluu, golfie);
        report[1] = golfie;
        golfie = _closure1_slot4;
        oscard = {};
        offset = {};
        offset['uri'] = yankee;
        oscard['source'] = offset;
        verify = verify.preview;
        oscard['style'] = verify;
        oscard = option.bind(entity)(golfie, oscard);
        report[2] = oscard;
        michal['children'] = report;
        entity = tangon.bind(entity)(zuuluu, michal);
        return entity;
    };
    zuuluu['BugReporterNotification'] = michal;
    return entity;
})();