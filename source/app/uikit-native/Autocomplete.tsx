// app/uikit-native/Autocomplete.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    golfie = argBar;
    foxtra = argBaz;
    zuuluu = argFre;
    option = argPlu;
    var _closure1_slot0 = golfie;
    var _closure1_slot1 = foxtra;
    var _closure1_slot2 = option;
    entity = function(argFoo) { // Original name: AutocompleteLabel
        michal = _closure1_slot10;
        tangon = undefined;
        report = michal.bind(tangon)();
        zuuluu = _closure1_slot9;
        michal = _closure1_slot0;
        oscard = _closure1_slot2;
        entity = 10;
        entity = oscard[entity];
        entity = michal.bind(tangon)(entity);
        entity = entity.FormRow;
        michal = entity.Label;
        entity = {};
        report = report.leading;
        entity['style'] = report;
        report = argFoo;
        report = report.text;
        entity['text'] = report;
        entity = zuuluu.bind(tangon)(michal, entity);
        return entity;
    };
    var _closure1_slot11 = entity;
    entity = global;
    report = entity.Object;
    tangon = report.defineProperty;
    michal = {};
    entity = true;
    michal['value'] = entity;
    entity = '__esModule';
    entity = tangon.bind(report)(zuuluu, entity, michal);
    romeon = 0;
    tangon = option[romeon];
    michal = argCor;
    entity = undefined;
    michal = michal.bind(entity)(tangon);
    var _closure1_slot3 = michal;
    michal = 1;
    michal = option[michal];
    michal = golfie.bind(entity)(michal);
    michal = michal.View;
    var _closure1_slot4 = michal;
    michal = 2;
    michal = option[michal];
    michal = foxtra.bind(entity)(michal);
    var _closure1_slot5 = michal;
    michal = 3;
    michal = option[michal];
    michal = foxtra.bind(entity)(michal);
    var _closure1_slot6 = michal;
    michal = 4;
    tangon = option[michal];
    tangon = foxtra.bind(entity)(tangon);
    var _closure1_slot7 = tangon;
    tangon = 5;
    tangon = option[tangon];
    tangon = golfie.bind(entity)(tangon);
    report = tangon.ChannelTypes;
    var _closure1_slot8 = report;
    yankee = tangon.Fonts;
    tangon = 6;
    tangon = option[tangon];
    tangon = golfie.bind(entity)(tangon);
    backup = tangon.AUTOCOMPLETE_ROW_HEIGHT;
    tangon = 7;
    tangon = option[tangon];
    tangon = golfie.bind(entity)(tangon);
    tangon = tangon.jsx;
    var _closure1_slot9 = tangon;
    tangon = 8;
    tangon = option[tangon];
    offset = golfie.bind(entity)(tangon);
    verify = offset.createStyles;
    report = {};
    tangon = {};
    tangon['height'] = backup;
    tangon['paddingVertical'] = romeon;
    romeon = 9;
    backup = option[romeon];
    backup = foxtra.bind(entity)(backup);
    backup = backup.colors;
    backup = backup.BACKGROUND_SECONDARY;
    tangon['backgroundColor'] = backup;
    report['row'] = tangon;
    tangon = {};
    backup = 16;
    tangon['fontSize'] = backup;
    kiloes = option[romeon];
    kiloes = foxtra.bind(entity)(kiloes);
    kiloes = kiloes.colors;
    kiloes = kiloes.INTERACTIVE_ACTIVE;
    tangon['color'] = kiloes;
    yankee = yankee.PRIMARY_SEMIBOLD;
    tangon['fontFamily'] = yankee;
    report['leading'] = tangon;
    tangon = {};
    yankee = 14;
    tangon['fontSize'] = yankee;
    yankee = option[romeon];
    yankee = foxtra.bind(entity)(yankee);
    yankee = yankee.colors;
    yankee = yankee.TEXT_MUTED;
    tangon['color'] = yankee;
    report['trailing'] = tangon;
    tangon = {};
    yankee = option[romeon];
    yankee = foxtra.bind(entity)(yankee);
    yankee = yankee.unsafe_rawColors;
    yankee = yankee.PRIMARY_400;
    tangon['color'] = yankee;
    report['username'] = tangon;
    tangon = {'width': 32, 'height': 32};
    report['emoji'] = tangon;
    tangon = {};
    yankee = 'contain';
    tangon['resizeMode'] = yankee;
    report['emojiImage'] = tangon;
    tangon = {'lineHeight': 32, 'fontSize': 27, 'textAlign': 'center'};
    report['emojiText'] = tangon;
    yankee = {'width': 56, 'height': 56, 'marginHorizontal': 4, 'justifyContent': 'center', 'alignItems': 'center'};
    tangon = 56;
    kiloes = option[romeon];
    kiloes = foxtra.bind(entity)(kiloes);
    kiloes = kiloes.colors;
    kiloes = kiloes.BACKGROUND_SECONDARY_ALT;
    yankee['backgroundColor'] = kiloes;
    kiloes = option[romeon];
    kiloes = foxtra.bind(entity)(kiloes);
    kiloes = kiloes.radii;
    kiloes = kiloes.sm;
    yankee['borderRadius'] = kiloes;
    report['stickerContainer'] = yankee;
    yankee = {'flex': 1, 'justifyContent': 'center'};
    report['commandChoiceLoadingContainer'] = yankee;
    yankee = {};
    kiloes = option[romeon];
    kiloes = foxtra.bind(entity)(kiloes);
    kiloes = kiloes.colors;
    kiloes = kiloes.BACKGROUND_ACCENT;
    yankee['backgroundColor'] = kiloes;
    yankee['height'] = backup;
    romeon = option[romeon];
    romeon = foxtra.bind(entity)(romeon);
    romeon = romeon.radii;
    romeon = romeon.lg;
    yankee['borderRadius'] = romeon;
    romeon = 'flex-start';
    yankee['alignSelf'] = romeon;
    report['commandChoiceLoadingItem'] = yankee;
    yankee = {};
    romeon = 0.6;
    yankee['opacity'] = romeon;
    report['autocompleteIcon'] = yankee;
    report = verify.bind(offset)(report);
    var _closure1_slot10 = report;
    report = {};
    verify = function(argFoo) { // Original name: User
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            michal = argFoo;
            verify = michal.user;
            var _closure2_slot0 = verify;
            backup = michal.nick;
            kiloes = michal.status;
            foxtra = michal.guildId;
            var _closure2_slot1 = foxtra;
            oscard = michal.onPress;
            michal = _closure1_slot10;
            tangon = undefined;
            option = michal.bind(tangon)();
            michal = _closure1_slot0;
            golfie = _closure1_slot2;
            zuuluu = 11;
            zuuluu = golfie[zuuluu];
            yankee = michal.bind(tangon)(zuuluu);
            offset = yankee.useStateFromStores;
            romeon = _closure1_slot6;
            zuuluu = new Array(1);
            zuuluu[0] = romeon;
            entity = function() {
                _fun00003: for(var _fun00004_ip = 0; ; ) switch(_fun00004_ip) {
 0:
                    zuuluu = _closure2_slot1;
                    entity = null;
                    zuuluu = entity == zuuluu;
                    if(!zuuluu) { _fun00004_ip = 43; continue _fun00003 }
 16:
                    tangon = _closure1_slot6;
                    zuuluu = tangon.getNickname;
                    michal = _closure2_slot0;
                    michal = michal.id;
                    entity = zuuluu.bind(tangon)(michal);
 43:
                    return entity;
                }
            };
            yankee = offset.bind(yankee)(zuuluu, entity);
            zuuluu = _closure1_slot9;
            entity = 10;
            entity = golfie[entity];
            entity = michal.bind(tangon)(entity);
            michal = entity.FormRow;
            entity = {};
            golfie = option.row;
            entity['DEPRECATED_style'] = golfie;
            entity['onPress'] = oscard;
            offset = _closure1_slot9;
            golfie = _closure1_slot11;
            oscard = {};
            romeon = null;
            if(!(romeon != backup)) { _fun00002_ip = 160; continue _fun00001 }
 157:
            yankee = backup;
 160:
            if(!(romeon == yankee)) { _fun00002_ip = 195; continue _fun00001 }
 164:
            backup = _closure1_slot1;
            sizing = _closure1_slot2;
            romeon = 12;
            romeon = sizing[romeon];
            backup = backup.bind(tangon)(romeon);
            romeon = backup.getName;
            yankee = romeon.bind(backup)(verify);
 195:
            oscard['text'] = yankee;
            oscard = offset.bind(tangon)(golfie, oscard);
            entity['label'] = oscard;
            romeon = _closure1_slot9;
            oscard = _closure1_slot1;
            offset = _closure1_slot2;
            backup = 13;
            golfie = offset[backup];
            yankee = oscard.bind(tangon)(golfie);
            golfie = {};
            golfie['status'] = kiloes;
            golfie['user'] = verify;
            kiloes = _closure1_slot0;
            backup = offset[backup];
            backup = kiloes.bind(tangon)(backup);
            backup = backup.AvatarSizes;
            backup = backup.SMALL;
            golfie['size'] = backup;
            golfie['guildId'] = foxtra;
            foxtra = true;
            golfie['autoStatusCutout'] = foxtra;
            golfie = romeon.bind(tangon)(yankee, golfie);
            entity['leading'] = golfie;
            golfie = _closure1_slot9;
            report = 14;
            report = offset[report];
            oscard = oscard.bind(tangon)(report);
            report = {};
            report['user'] = verify;
            offset = option.trailing;
            verify = new Array(2);
            verify[0] = offset;
            offset = option.username;
            verify[1] = offset;
            report['usernameStyle'] = verify;
            option = option.trailing;
            report['discriminatorStyle'] = option;
            report = golfie.bind(tangon)(oscard, report);
            entity['trailing'] = report;
            entity = zuuluu.bind(tangon)(michal, entity);
            return entity;
        }
    };
    report['User'] = verify;
    verify = function(argFoo) { // Original name: Global
        entity = argFoo;
        romeon = entity.text;
        option = entity.description;
        golfie = entity.onPress;
        tangon = _closure1_slot9;
        oscard = _closure1_slot0;
        verify = _closure1_slot2;
        entity = 15;
        entity = verify[entity];
        zuuluu = undefined;
        entity = oscard.bind(zuuluu)(entity);
        michal = entity.TableRow;
        entity = {};
        entity['onPress'] = golfie;
        yankee = _closure1_slot9;
        offset = _closure1_slot11;
        golfie = {};
        golfie['text'] = romeon;
        golfie = yankee.bind(zuuluu)(offset, golfie);
        entity['label'] = golfie;
        golfie = _closure1_slot9;
        report = 16;
        report = verify[report];
        report = oscard.bind(zuuluu)(report);
        oscard = report.TableRowTrailingText;
        report = {};
        report['text'] = option;
        report = golfie.bind(zuuluu)(oscard, report);
        entity['trailing'] = report;
        entity = tangon.bind(zuuluu)(michal, entity);
        return entity;
    };
    report['Global'] = verify;
    verify = function(argFoo) { // Original name: Role
        _fun00005: for(var _fun00006_ip = 0; ; ) switch(_fun00006_ip) {
 0:
            entity = argFoo;
            report = entity.onPress;
            offset = entity.showDescription;
            romeon = entity.name;
            backup = entity.colorString;
            entity = _closure1_slot10;
            tangon = undefined;
            option = entity.bind(tangon)();
            zuuluu = _closure1_slot9;
            oscard = _closure1_slot0;
            yankee = _closure1_slot2;
            entity = 15;
            entity = yankee[entity];
            entity = oscard.bind(tangon)(entity);
            michal = entity.TableRow;
            entity = {};
            entity['onPress'] = report;
            golfie = _closure1_slot9;
            report = 10;
            report = yankee[report];
            report = oscard.bind(tangon)(report);
            report = report.FormRow;
            oscard = report.Label;
            report = {};
            yankee = option.leading;
            option = new Array(2);
            option[0] = yankee;
            yankee = null;
            foxtra = yankee != backup;
            yankee = undefined;
            if(!foxtra) { _fun00006_ip = 138; continue _fun00005 }
 129:
            foxtra = {};
            foxtra['color'] = backup;
            yankee = foxtra;
 138:
            option[1] = yankee;
            report['style'] = option;
            option = global;
            option = option.HermesInternal;
            yankee = option.concat;
            option = '@';
            option = yankee.bind(option)(romeon);
            report['text'] = option;
            report = golfie.bind(tangon)(oscard, report);
            entity['label'] = report;
            golfie = _closure1_slot9;
            oscard = _closure1_slot0;
            option = _closure1_slot2;
            report = 16;
            report = option[report];
            report = oscard.bind(tangon)(report);
            oscard = report.TableRowTrailingText;
            report = {};
            option = '';
            if(!offset) { _fun00006_ip = 276; continue _fun00005 }
 221:
            romeon = _closure1_slot0;
            foxtra = _closure1_slot2;
            verify = 17;
            offset = foxtra[verify];
            offset = romeon.bind(tangon)(offset);
            yankee = offset.intl;
            offset = yankee.string;
            verify = foxtra[verify];
            verify = romeon.bind(tangon)(verify);
            verify = verify.t;
            verify = verify.HrUmDA;
            option = offset.bind(yankee)(verify);
 276:
            report['text'] = option;
            report = golfie.bind(tangon)(oscard, report);
            entity['trailing'] = report;
            entity = zuuluu.bind(tangon)(michal, entity);
            return entity;
        }
    };
    report['Role'] = verify;
    verify = function(argFoo) { // Original name: Channel
        _fun00007: for(var _fun00008_ip = 0; ; ) switch(_fun00008_ip) {
 0:
            entity = argFoo;
            foxtra = entity.channel;
            verify = entity.category;
            yankee = entity.onPress;
            entity = _closure1_slot10;
            tangon = undefined;
            option = entity.bind(tangon)();
            zuuluu = _closure1_slot5;
            michal = zuuluu.getGuild;
            entity = foxtra.getGuildId;
            entity = entity.bind(foxtra)();
            zuuluu = michal.bind(zuuluu)(entity);
            michal = foxtra.type;
            entity = _closure1_slot8;
            entity = entity.GUILD_CATEGORY;
            if(!(michal !== entity)) { _fun00008_ip = 109; continue _fun00007 }
 75:
            michal = _closure1_slot0;
            oscard = _closure1_slot2;
            entity = 19;
            entity = oscard[entity];
            michal = michal.bind(tangon)(entity);
            entity = michal.getChannelIconWithGuild;
            oscard = entity.bind(michal)(foxtra, zuuluu);
            _fun00008_ip = 129; continue _fun00007;
 109:
            michal = _closure1_slot1;
            zuuluu = _closure1_slot2;
            entity = 18;
            entity = zuuluu[entity];
            oscard = michal.bind(tangon)(entity);
 129:
            zuuluu = _closure1_slot9;
            michal = _closure1_slot1;
            offset = _closure1_slot2;
            entity = 20;
            entity = offset[entity];
            michal = michal.bind(tangon)(entity);
            entity = {};
            entity['source'] = oscard;
            oscard = option.autocompleteIcon;
            entity['style'] = oscard;
            golfie = zuuluu.bind(tangon)(michal, entity);
            oscard = _closure1_slot0;
            entity = 21;
            entity = offset[entity];
            romeon = oscard.bind(tangon)(entity);
            zuuluu = romeon.computeChannelName;
            michal = _closure1_slot7;
            entity = _closure1_slot6;
            foxtra = zuuluu.bind(romeon)(foxtra, michal, entity);
            zuuluu = _closure1_slot9;
            entity = 10;
            entity = offset[entity];
            entity = oscard.bind(tangon)(entity);
            michal = entity.FormRow;
            entity = {};
            entity['onPress'] = yankee;
            entity['leading'] = golfie;
            romeon = _closure1_slot9;
            yankee = _closure1_slot11;
            golfie = {};
            golfie['text'] = foxtra;
            golfie = romeon.bind(tangon)(yankee, golfie);
            entity['label'] = golfie;
            golfie = _closure1_slot9;
            report = 22;
            report = offset[report];
            report = oscard.bind(tangon)(report);
            oscard = report.Text;
            report = {'style': null, 'variant': 'text-sm/medium', 'color': 'text-muted'};
            option = option.trailing;
            report['style'] = option;
            option = null;
            option = option != verify;
            if(!option) { _fun00008_ip = 330; continue _fun00007 }
 325:
            option = verify.name;
 330:
            report['children'] = option;
            report = golfie.bind(tangon)(oscard, report);
            entity['trailing'] = report;
            entity = zuuluu.bind(tangon)(michal, entity);
            return entity;
        }
    };
    report['Channel'] = verify;
    verify = function(argFoo) { // Original name: Emoji
        _fun00009: for(var _fun00010_ip = 0; ; ) switch(_fun00010_ip) {
 0:
            entity = argFoo;
            offset = entity.name;
            verify = entity.url;
            oscard = entity.surrogates;
            golfie = entity.onPress;
            entity = _closure1_slot10;
            tangon = undefined;
            yankee = entity.bind(tangon)();
            entity = '';
            if(!(entity === verify)) { _fun00010_ip = 123; continue _fun00009 }
 44:
            zuuluu = _closure1_slot9;
            michal = _closure1_slot0;
            option = _closure1_slot2;
            entity = 24;
            entity = option[entity];
            entity = michal.bind(tangon)(entity);
            michal = entity.LegacyText;
            entity = {};
            romeon = yankee.emoji;
            option = new Array(2);
            option[0] = romeon;
            romeon = yankee.emojiText;
            option[1] = romeon;
            entity['style'] = option;
            option = false;
            entity['allowFontScaling'] = option;
            entity['children'] = oscard;
            oscard = zuuluu.bind(tangon)(michal, entity);
            _fun00010_ip = 194; continue _fun00009;
 123:
            zuuluu = _closure1_slot9;
            michal = _closure1_slot1;
            option = _closure1_slot2;
            entity = 23;
            entity = option[entity];
            michal = michal.bind(tangon)(entity);
            entity = {};
            romeon = yankee.emoji;
            option = new Array(2);
            option[0] = romeon;
            yankee = yankee.emojiImage;
            option[1] = yankee;
            entity['style'] = option;
            option = {};
            option['uri'] = verify;
            entity['source'] = option;
            oscard = zuuluu.bind(tangon)(michal, entity);
 194:
            zuuluu = _closure1_slot9;
            michal = _closure1_slot0;
            option = _closure1_slot2;
            entity = 10;
            entity = option[entity];
            entity = michal.bind(tangon)(entity);
            michal = entity.FormRow;
            entity = {};
            entity['onPress'] = golfie;
            entity['leading'] = oscard;
            golfie = _closure1_slot9;
            oscard = _closure1_slot11;
            report = {};
            option = global;
            option = option.HermesInternal;
            verify = option.concat;
            option = ':';
            option = verify.bind(option)(offset, option);
            report['text'] = option;
            report = golfie.bind(tangon)(oscard, report);
            entity['label'] = report;
            entity = zuuluu.bind(tangon)(michal, entity);
            return entity;
        }
    };
    report['Emoji'] = verify;
    verify = function(argFoo) { // Original name: EmojiPremiumUpsell
        entity = argFoo;
        option = entity.results;
        oscard = entity.onPress;
        tangon = _closure1_slot9;
        michal = _closure1_slot0;
        verify = _closure1_slot2;
        entity = 10;
        entity = verify[entity];
        zuuluu = undefined;
        entity = michal.bind(zuuluu)(entity);
        michal = entity.FormRow;
        entity = {};
        entity['onPress'] = oscard;
        golfie = _closure1_slot9;
        oscard = _closure1_slot1;
        report = 25;
        report = verify[report];
        oscard = oscard.bind(zuuluu)(report);
        report = {};
        report['results'] = option;
        report = golfie.bind(zuuluu)(oscard, report);
        entity['label'] = report;
        entity = tangon.bind(zuuluu)(michal, entity);
        return entity;
    };
    report['EmojiPremiumUpsell'] = verify;
    verify = function(argFoo) { // Original name: Choice
        entity = argFoo;
        option = entity.choice;
        oscard = entity.onPress;
        tangon = _closure1_slot9;
        michal = _closure1_slot0;
        zuuluu = _closure1_slot2;
        entity = 10;
        entity = zuuluu[entity];
        zuuluu = undefined;
        entity = michal.bind(zuuluu)(entity);
        michal = entity.FormRow;
        entity = {};
        entity['onPress'] = oscard;
        golfie = _closure1_slot9;
        oscard = _closure1_slot11;
        report = {};
        option = option.displayName;
        report['text'] = option;
        report = golfie.bind(zuuluu)(oscard, report);
        entity['label'] = report;
        entity = tangon.bind(zuuluu)(michal, entity);
        return entity;
    };
    report['Choice'] = verify;
    verify = function() { // Original name: ChoiceLoading
        entity = _closure1_slot10;
        tangon = undefined;
        offset = entity.bind(tangon)();
        report = _closure1_slot3;
        zuuluu = report.useMemo;
        michal = function() {
            zuuluu = _closure1_slot1;
            michal = _closure1_slot2;
            entity = 29;
            michal = michal[entity];
            entity = undefined;
            tangon = zuuluu.bind(entity)(michal);
            zuuluu = tangon.random;
            michal = 100;
            entity = 300;
            entity = zuuluu.bind(tangon)(michal, entity);
            return entity;
        };
        entity = new Array(0);
        romeon = zuuluu.bind(report)(michal, entity);
        zuuluu = _closure1_slot9;
        michal = _closure1_slot0;
        report = _closure1_slot2;
        entity = 10;
        entity = report[entity];
        entity = michal.bind(tangon)(entity);
        michal = entity.FormRow;
        entity = {};
        report = offset.row;
        entity['DEPRECATED_style'] = report;
        golfie = _closure1_slot9;
        oscard = _closure1_slot4;
        report = {};
        verify = offset.commandChoiceLoadingContainer;
        report['style'] = verify;
        verify = _closure1_slot9;
        option = {};
        yankee = offset.commandChoiceLoadingItem;
        offset = new Array(2);
        offset[0] = yankee;
        yankee = {};
        yankee['width'] = romeon;
        offset[1] = yankee;
        option['style'] = offset;
        option = verify.bind(tangon)(oscard, option);
        report['children'] = option;
        report = golfie.bind(tangon)(oscard, report);
        entity['leading'] = report;
        entity = zuuluu.bind(tangon)(michal, entity);
        return entity;
    };
    report['ChoiceLoading'] = verify;
    verify = function(argFoo) { // Original name: Sticker
        entity = argFoo;
        verify = entity.sticker;
        golfie = entity.onPress;
        oscard = entity.onLongPress;
        option = entity.isInteracting;
        entity = _closure1_slot10;
        tangon = undefined;
        yankee = entity.bind(tangon)();
        michal = _closure1_slot0;
        offset = _closure1_slot2;
        entity = 26;
        entity = offset[entity];
        zuuluu = michal.bind(tangon)(entity);
        entity = zuuluu.useShouldAnimateSticker;
        option = entity.bind(zuuluu)(option);
        zuuluu = _closure1_slot9;
        entity = 27;
        entity = offset[entity];
        entity = michal.bind(tangon)(entity);
        michal = entity.PressableOpacity;
        entity = {};
        romeon = 'button';
        entity['accessibilityRole'] = romeon;
        yankee = yankee.stickerContainer;
        entity['style'] = yankee;
        entity['onPress'] = golfie;
        entity['onLongPress'] = oscard;
        oscard = 'box-only';
        entity['pointerEvents'] = oscard;
        golfie = _closure1_slot9;
        oscard = _closure1_slot1;
        report = 28;
        report = offset[report];
        oscard = oscard.bind(tangon)(report);
        report = {};
        report['sticker'] = verify;
        verify = 40;
        report['size'] = verify;
        report['animated'] = option;
        report = golfie.bind(tangon)(oscard, report);
        entity['children'] = report;
        entity = zuuluu.bind(tangon)(michal, entity);
        return entity;
    };
    report['Sticker'] = verify;
    oscard = function(argFoo) { // Original name: Label
        entity = argFoo;
        option = entity.label;
        tangon = _closure1_slot9;
        michal = _closure1_slot0;
        zuuluu = _closure1_slot2;
        entity = 10;
        entity = zuuluu[entity];
        zuuluu = undefined;
        entity = michal.bind(zuuluu)(entity);
        michal = entity.FormRow;
        entity = {};
        golfie = _closure1_slot9;
        oscard = _closure1_slot11;
        report = {};
        report['text'] = option;
        report = golfie.bind(zuuluu)(oscard, report);
        entity['label'] = report;
        entity = tangon.bind(zuuluu)(michal, entity);
        return entity;
    };
    report['Label'] = oscard;
    oscard = 30;
    oscard = option[oscard];
    option = golfie.bind(entity)(oscard);
    golfie = option.fileFinishedImporting;
    oscard = 'uikit-native/Autocomplete.tsx';
    oscard = golfie.bind(option)(oscard);
    zuuluu['default'] = report;
    zuuluu['AUTOCOMPLETE_STICKER_NODE_SIZE'] = tangon;
    zuuluu['AUTOCOMPLETE_STICKER_NODE_MARGIN'] = michal;
    return entity;
})();