// app/uikit-native/Autocomplete.tsx
export default (function(argFoo, argBar, argBaz, argCorge, _, argFred, argPlugh) {
    golf = argBar;
    foxtrot = argBaz;
    zulu = argFred;
    options = argPlugh;
    var _closure1_slot0 = golf;
    var _closure1_slot1 = foxtrot;
    var _closure1_slot2 = options;
    entity = function(argFoo) { // Original name: AutocompleteLabel
        mike = _closure1_slot10;
        tango = undefined;
        report = mike.bind(tango)();
        zulu = _closure1_slot9;
        mike = _closure1_slot0;
        oscar = _closure1_slot2;
        entity = 10;
        entity = oscar[entity];
        entity = mike.bind(tango)(entity);
        entity = entity.FormRow;
        mike = entity.Label;
        entity = {};
        report = report.leading;
        entity['style'] = report;
        report = argFoo;
        report = report.text;
        entity['text'] = report;
        entity = zulu.bind(tango)(mike, entity);
        return entity;
    };
    var _closure1_slot11 = entity;
    entity = global;
    report = entity.Object;
    tango = report.defineProperty;
    mike = {};
    entity = true;
    mike['value'] = entity;
    entity = '__esModule';
    entity = tango.bind(report)(zulu, entity, mike);
    romeo = 0;
    tango = options[romeo];
    mike = argCorge;
    entity = undefined;
    mike = mike.bind(entity)(tango);
    var _closure1_slot3 = mike;
    mike = 1;
    mike = options[mike];
    mike = golf.bind(entity)(mike);
    mike = mike.View;
    var _closure1_slot4 = mike;
    mike = 2;
    mike = options[mike];
    mike = foxtrot.bind(entity)(mike);
    var _closure1_slot5 = mike;
    mike = 3;
    mike = options[mike];
    mike = foxtrot.bind(entity)(mike);
    var _closure1_slot6 = mike;
    mike = 4;
    tango = options[mike];
    tango = foxtrot.bind(entity)(tango);
    var _closure1_slot7 = tango;
    tango = 5;
    tango = options[tango];
    tango = golf.bind(entity)(tango);
    report = tango.ChannelTypes;
    var _closure1_slot8 = report;
    yankee = tango.Fonts;
    tango = 6;
    tango = options[tango];
    tango = golf.bind(entity)(tango);
    backup = tango.AUTOCOMPLETE_ROW_HEIGHT;
    tango = 7;
    tango = options[tango];
    tango = golf.bind(entity)(tango);
    tango = tango.jsx;
    var _closure1_slot9 = tango;
    tango = 8;
    tango = options[tango];
    offset = golf.bind(entity)(tango);
    verify = offset.createStyles;
    report = {};
    tango = {};
    tango['height'] = backup;
    tango['paddingVertical'] = romeo;
    romeo = 9;
    backup = options[romeo];
    backup = foxtrot.bind(entity)(backup);
    backup = backup.colors;
    backup = backup.BACKGROUND_SECONDARY;
    tango['backgroundColor'] = backup;
    report['row'] = tango;
    tango = {};
    backup = 16;
    tango['fontSize'] = backup;
    kilo = options[romeo];
    kilo = foxtrot.bind(entity)(kilo);
    kilo = kilo.colors;
    kilo = kilo.INTERACTIVE_ACTIVE;
    tango['color'] = kilo;
    yankee = yankee.PRIMARY_SEMIBOLD;
    tango['fontFamily'] = yankee;
    report['leading'] = tango;
    tango = {};
    yankee = 14;
    tango['fontSize'] = yankee;
    yankee = options[romeo];
    yankee = foxtrot.bind(entity)(yankee);
    yankee = yankee.colors;
    yankee = yankee.TEXT_MUTED;
    tango['color'] = yankee;
    report['trailing'] = tango;
    tango = {};
    yankee = options[romeo];
    yankee = foxtrot.bind(entity)(yankee);
    yankee = yankee.unsafe_rawColors;
    yankee = yankee.PRIMARY_400;
    tango['color'] = yankee;
    report['username'] = tango;
    tango = {'width': 32, 'height': 32};
    report['emoji'] = tango;
    tango = {};
    yankee = 'contain';
    tango['resizeMode'] = yankee;
    report['emojiImage'] = tango;
    tango = {'lineHeight': 32, 'fontSize': 27, 'textAlign': 'center'};
    report['emojiText'] = tango;
    yankee = {'width': 56, 'height': 56, 'marginHorizontal': 4, 'justifyContent': 'center', 'alignItems': 'center'};
    tango = 56;
    kilo = options[romeo];
    kilo = foxtrot.bind(entity)(kilo);
    kilo = kilo.colors;
    kilo = kilo.BACKGROUND_SECONDARY_ALT;
    yankee['backgroundColor'] = kilo;
    kilo = options[romeo];
    kilo = foxtrot.bind(entity)(kilo);
    kilo = kilo.radii;
    kilo = kilo.sm;
    yankee['borderRadius'] = kilo;
    report['stickerContainer'] = yankee;
    yankee = {'flex': 1, 'justifyContent': 'center'};
    report['commandChoiceLoadingContainer'] = yankee;
    yankee = {};
    kilo = options[romeo];
    kilo = foxtrot.bind(entity)(kilo);
    kilo = kilo.colors;
    kilo = kilo.BACKGROUND_ACCENT;
    yankee['backgroundColor'] = kilo;
    yankee['height'] = backup;
    romeo = options[romeo];
    romeo = foxtrot.bind(entity)(romeo);
    romeo = romeo.radii;
    romeo = romeo.lg;
    yankee['borderRadius'] = romeo;
    romeo = 'flex-start';
    yankee['alignSelf'] = romeo;
    report['commandChoiceLoadingItem'] = yankee;
    yankee = {};
    romeo = 0.6;
    yankee['opacity'] = romeo;
    report['autocompleteIcon'] = yankee;
    report = verify.bind(offset)(report);
    var _closure1_slot10 = report;
    report = {};
    verify = function(argFoo) { // Original name: User
        _fun100814: for(var _fun100814_ip = 0; ; ) switch(_fun100814_ip) {
 0:
            mike = argFoo;
            verify = mike.user;
            var _closure2_slot0 = verify;
            backup = mike.nick;
            kilo = mike.status;
            foxtrot = mike.guildId;
            var _closure2_slot1 = foxtrot;
            oscar = mike.onPress;
            mike = _closure1_slot10;
            tango = undefined;
            options = mike.bind(tango)();
            mike = _closure1_slot0;
            golf = _closure1_slot2;
            zulu = 11;
            zulu = golf[zulu];
            yankee = mike.bind(tango)(zulu);
            offset = yankee.useStateFromStores;
            romeo = _closure1_slot6;
            zulu = new Array(1);
            zulu[0] = romeo;
            entity = function() {
                _fun100815: for(var _fun100815_ip = 0; ; ) switch(_fun100815_ip) {
 0:
                    zulu = _closure2_slot1;
                    entity = null;
                    zulu = entity == zulu;
                    if(!zulu) { _fun100815_ip = 43; continue _fun100815 }
 16:
                    tango = _closure1_slot6;
                    zulu = tango.getNickname;
                    mike = _closure2_slot0;
                    mike = mike.id;
                    entity = zulu.bind(tango)(mike);
 43:
                    return entity;
                }
            };
            yankee = offset.bind(yankee)(zulu, entity);
            zulu = _closure1_slot9;
            entity = 10;
            entity = golf[entity];
            entity = mike.bind(tango)(entity);
            mike = entity.FormRow;
            entity = {};
            golf = options.row;
            entity['DEPRECATED_style'] = golf;
            entity['onPress'] = oscar;
            offset = _closure1_slot9;
            golf = _closure1_slot11;
            oscar = {};
            romeo = null;
            if(!(romeo != backup)) { _fun100814_ip = 160; continue _fun100814 }
 157:
            yankee = backup;
 160:
            if(!(romeo == yankee)) { _fun100814_ip = 195; continue _fun100814 }
 164:
            backup = _closure1_slot1;
            sizing = _closure1_slot2;
            romeo = 12;
            romeo = sizing[romeo];
            backup = backup.bind(tango)(romeo);
            romeo = backup.getName;
            yankee = romeo.bind(backup)(verify);
 195:
            oscar['text'] = yankee;
            oscar = offset.bind(tango)(golf, oscar);
            entity['label'] = oscar;
            romeo = _closure1_slot9;
            oscar = _closure1_slot1;
            offset = _closure1_slot2;
            backup = 13;
            golf = offset[backup];
            yankee = oscar.bind(tango)(golf);
            golf = {};
            golf['status'] = kilo;
            golf['user'] = verify;
            kilo = _closure1_slot0;
            backup = offset[backup];
            backup = kilo.bind(tango)(backup);
            backup = backup.AvatarSizes;
            backup = backup.SMALL;
            golf['size'] = backup;
            golf['guildId'] = foxtrot;
            foxtrot = true;
            golf['autoStatusCutout'] = foxtrot;
            golf = romeo.bind(tango)(yankee, golf);
            entity['leading'] = golf;
            golf = _closure1_slot9;
            report = 14;
            report = offset[report];
            oscar = oscar.bind(tango)(report);
            report = {};
            report['user'] = verify;
            offset = options.trailing;
            verify = new Array(2);
            verify[0] = offset;
            offset = options.username;
            verify[1] = offset;
            report['usernameStyle'] = verify;
            options = options.trailing;
            report['discriminatorStyle'] = options;
            report = golf.bind(tango)(oscar, report);
            entity['trailing'] = report;
            entity = zulu.bind(tango)(mike, entity);
            return entity;
        }
    };
    report['User'] = verify;
    verify = function(argFoo) { // Original name: Global
        entity = argFoo;
        romeo = entity.text;
        options = entity.description;
        golf = entity.onPress;
        tango = _closure1_slot9;
        oscar = _closure1_slot0;
        verify = _closure1_slot2;
        entity = 15;
        entity = verify[entity];
        zulu = undefined;
        entity = oscar.bind(zulu)(entity);
        mike = entity.TableRow;
        entity = {};
        entity['onPress'] = golf;
        yankee = _closure1_slot9;
        offset = _closure1_slot11;
        golf = {};
        golf['text'] = romeo;
        golf = yankee.bind(zulu)(offset, golf);
        entity['label'] = golf;
        golf = _closure1_slot9;
        report = 16;
        report = verify[report];
        report = oscar.bind(zulu)(report);
        oscar = report.TableRowTrailingText;
        report = {};
        report['text'] = options;
        report = golf.bind(zulu)(oscar, report);
        entity['trailing'] = report;
        entity = tango.bind(zulu)(mike, entity);
        return entity;
    };
    report['Global'] = verify;
    verify = function(argFoo) { // Original name: Role
        _fun100817: for(var _fun100817_ip = 0; ; ) switch(_fun100817_ip) {
 0:
            entity = argFoo;
            report = entity.onPress;
            offset = entity.showDescription;
            romeo = entity.name;
            backup = entity.colorString;
            entity = _closure1_slot10;
            tango = undefined;
            options = entity.bind(tango)();
            zulu = _closure1_slot9;
            oscar = _closure1_slot0;
            yankee = _closure1_slot2;
            entity = 15;
            entity = yankee[entity];
            entity = oscar.bind(tango)(entity);
            mike = entity.TableRow;
            entity = {};
            entity['onPress'] = report;
            golf = _closure1_slot9;
            report = 10;
            report = yankee[report];
            report = oscar.bind(tango)(report);
            report = report.FormRow;
            oscar = report.Label;
            report = {};
            yankee = options.leading;
            options = new Array(2);
            options[0] = yankee;
            yankee = null;
            foxtrot = yankee != backup;
            yankee = undefined;
            if(!foxtrot) { _fun100817_ip = 138; continue _fun100817 }
 129:
            foxtrot = {};
            foxtrot['color'] = backup;
            yankee = foxtrot;
 138:
            options[1] = yankee;
            report['style'] = options;
            options = global;
            options = options.HermesInternal;
            yankee = options.concat;
            options = '@';
            options = yankee.bind(options)(romeo);
            report['text'] = options;
            report = golf.bind(tango)(oscar, report);
            entity['label'] = report;
            golf = _closure1_slot9;
            oscar = _closure1_slot0;
            options = _closure1_slot2;
            report = 16;
            report = options[report];
            report = oscar.bind(tango)(report);
            oscar = report.TableRowTrailingText;
            report = {};
            options = '';
            if(!offset) { _fun100817_ip = 276; continue _fun100817 }
 221:
            romeo = _closure1_slot0;
            foxtrot = _closure1_slot2;
            verify = 17;
            offset = foxtrot[verify];
            offset = romeo.bind(tango)(offset);
            yankee = offset.intl;
            offset = yankee.string;
            verify = foxtrot[verify];
            verify = romeo.bind(tango)(verify);
            verify = verify.t;
            verify = verify.HrUmDA;
            options = offset.bind(yankee)(verify);
 276:
            report['text'] = options;
            report = golf.bind(tango)(oscar, report);
            entity['trailing'] = report;
            entity = zulu.bind(tango)(mike, entity);
            return entity;
        }
    };
    report['Role'] = verify;
    verify = function(argFoo) { // Original name: Channel
        _fun100818: for(var _fun100818_ip = 0; ; ) switch(_fun100818_ip) {
 0:
            entity = argFoo;
            foxtrot = entity.channel;
            verify = entity.category;
            yankee = entity.onPress;
            entity = _closure1_slot10;
            tango = undefined;
            options = entity.bind(tango)();
            zulu = _closure1_slot5;
            mike = zulu.getGuild;
            entity = foxtrot.getGuildId;
            entity = entity.bind(foxtrot)();
            zulu = mike.bind(zulu)(entity);
            mike = foxtrot.type;
            entity = _closure1_slot8;
            entity = entity.GUILD_CATEGORY;
            if(!(mike !== entity)) { _fun100818_ip = 108; continue _fun100818 }
 74:
            mike = _closure1_slot0;
            oscar = _closure1_slot2;
            entity = 19;
            entity = oscar[entity];
            mike = mike.bind(tango)(entity);
            entity = mike.getChannelIconWithGuild;
            oscar = entity.bind(mike)(foxtrot, zulu);
            _fun100818_ip = 128; continue _fun100818;
 108:
            mike = _closure1_slot1;
            zulu = _closure1_slot2;
            entity = 18;
            entity = zulu[entity];
            oscar = mike.bind(tango)(entity);
 128:
            zulu = _closure1_slot9;
            mike = _closure1_slot1;
            offset = _closure1_slot2;
            entity = 20;
            entity = offset[entity];
            mike = mike.bind(tango)(entity);
            entity = {};
            entity['source'] = oscar;
            oscar = options.autocompleteIcon;
            entity['style'] = oscar;
            golf = zulu.bind(tango)(mike, entity);
            oscar = _closure1_slot0;
            entity = 21;
            entity = offset[entity];
            romeo = oscar.bind(tango)(entity);
            zulu = romeo.computeChannelName;
            mike = _closure1_slot7;
            entity = _closure1_slot6;
            foxtrot = zulu.bind(romeo)(foxtrot, mike, entity);
            zulu = _closure1_slot9;
            entity = 10;
            entity = offset[entity];
            entity = oscar.bind(tango)(entity);
            mike = entity.FormRow;
            entity = {};
            entity['onPress'] = yankee;
            entity['leading'] = golf;
            romeo = _closure1_slot9;
            yankee = _closure1_slot11;
            golf = {};
            golf['text'] = foxtrot;
            golf = romeo.bind(tango)(yankee, golf);
            entity['label'] = golf;
            golf = _closure1_slot9;
            report = 22;
            report = offset[report];
            report = oscar.bind(tango)(report);
            oscar = report.Text;
            report = {'style': null, 'variant': 'text-sm/medium', 'color': 'text-muted'};
            options = options.trailing;
            report['style'] = options;
            options = null;
            options = options != verify;
            if(!options) { _fun100818_ip = 329; continue _fun100818 }
 324:
            options = verify.name;
 329:
            report['children'] = options;
            report = golf.bind(tango)(oscar, report);
            entity['trailing'] = report;
            entity = zulu.bind(tango)(mike, entity);
            return entity;
        }
    };
    report['Channel'] = verify;
    verify = function(argFoo) { // Original name: Emoji
        _fun100819: for(var _fun100819_ip = 0; ; ) switch(_fun100819_ip) {
 0:
            entity = argFoo;
            offset = entity.name;
            verify = entity.url;
            oscar = entity.surrogates;
            golf = entity.onPress;
            entity = _closure1_slot10;
            tango = undefined;
            yankee = entity.bind(tango)();
            entity = '';
            if(!(entity === verify)) { _fun100819_ip = 123; continue _fun100819 }
 44:
            zulu = _closure1_slot9;
            mike = _closure1_slot0;
            options = _closure1_slot2;
            entity = 24;
            entity = options[entity];
            entity = mike.bind(tango)(entity);
            mike = entity.LegacyText;
            entity = {};
            romeo = yankee.emoji;
            options = new Array(2);
            options[0] = romeo;
            romeo = yankee.emojiText;
            options[1] = romeo;
            entity['style'] = options;
            options = false;
            entity['allowFontScaling'] = options;
            entity['children'] = oscar;
            oscar = zulu.bind(tango)(mike, entity);
            _fun100819_ip = 193; continue _fun100819;
 123:
            zulu = _closure1_slot9;
            mike = _closure1_slot1;
            options = _closure1_slot2;
            entity = 23;
            entity = options[entity];
            mike = mike.bind(tango)(entity);
            entity = {};
            romeo = yankee.emoji;
            options = new Array(2);
            options[0] = romeo;
            yankee = yankee.emojiImage;
            options[1] = yankee;
            entity['style'] = options;
            options = {};
            options['uri'] = verify;
            entity['source'] = options;
            oscar = zulu.bind(tango)(mike, entity);
 193:
            zulu = _closure1_slot9;
            mike = _closure1_slot0;
            options = _closure1_slot2;
            entity = 10;
            entity = options[entity];
            entity = mike.bind(tango)(entity);
            mike = entity.FormRow;
            entity = {};
            entity['onPress'] = golf;
            entity['leading'] = oscar;
            golf = _closure1_slot9;
            oscar = _closure1_slot11;
            report = {};
            options = global;
            options = options.HermesInternal;
            verify = options.concat;
            options = ':';
            options = verify.bind(options)(offset, options);
            report['text'] = options;
            report = golf.bind(tango)(oscar, report);
            entity['label'] = report;
            entity = zulu.bind(tango)(mike, entity);
            return entity;
        }
    };
    report['Emoji'] = verify;
    verify = function(argFoo) { // Original name: EmojiPremiumUpsell
        entity = argFoo;
        options = entity.results;
        oscar = entity.onPress;
        tango = _closure1_slot9;
        mike = _closure1_slot0;
        verify = _closure1_slot2;
        entity = 10;
        entity = verify[entity];
        zulu = undefined;
        entity = mike.bind(zulu)(entity);
        mike = entity.FormRow;
        entity = {};
        entity['onPress'] = oscar;
        golf = _closure1_slot9;
        oscar = _closure1_slot1;
        report = 25;
        report = verify[report];
        oscar = oscar.bind(zulu)(report);
        report = {};
        report['results'] = options;
        report = golf.bind(zulu)(oscar, report);
        entity['label'] = report;
        entity = tango.bind(zulu)(mike, entity);
        return entity;
    };
    report['EmojiPremiumUpsell'] = verify;
    verify = function(argFoo) { // Original name: Choice
        entity = argFoo;
        options = entity.choice;
        oscar = entity.onPress;
        tango = _closure1_slot9;
        mike = _closure1_slot0;
        zulu = _closure1_slot2;
        entity = 10;
        entity = zulu[entity];
        zulu = undefined;
        entity = mike.bind(zulu)(entity);
        mike = entity.FormRow;
        entity = {};
        entity['onPress'] = oscar;
        golf = _closure1_slot9;
        oscar = _closure1_slot11;
        report = {};
        options = options.displayName;
        report['text'] = options;
        report = golf.bind(zulu)(oscar, report);
        entity['label'] = report;
        entity = tango.bind(zulu)(mike, entity);
        return entity;
    };
    report['Choice'] = verify;
    verify = function() { // Original name: ChoiceLoading
        entity = _closure1_slot10;
        tango = undefined;
        offset = entity.bind(tango)();
        report = _closure1_slot3;
        zulu = report.useMemo;
        mike = function() {
            zulu = _closure1_slot1;
            mike = _closure1_slot2;
            entity = 29;
            mike = mike[entity];
            entity = undefined;
            tango = zulu.bind(entity)(mike);
            zulu = tango.random;
            mike = 100;
            entity = 300;
            entity = zulu.bind(tango)(mike, entity);
            return entity;
        };
        entity = new Array(0);
        romeo = zulu.bind(report)(mike, entity);
        zulu = _closure1_slot9;
        mike = _closure1_slot0;
        report = _closure1_slot2;
        entity = 10;
        entity = report[entity];
        entity = mike.bind(tango)(entity);
        mike = entity.FormRow;
        entity = {};
        report = offset.row;
        entity['DEPRECATED_style'] = report;
        golf = _closure1_slot9;
        oscar = _closure1_slot4;
        report = {};
        verify = offset.commandChoiceLoadingContainer;
        report['style'] = verify;
        verify = _closure1_slot9;
        options = {};
        yankee = offset.commandChoiceLoadingItem;
        offset = new Array(2);
        offset[0] = yankee;
        yankee = {};
        yankee['width'] = romeo;
        offset[1] = yankee;
        options['style'] = offset;
        options = verify.bind(tango)(oscar, options);
        report['children'] = options;
        report = golf.bind(tango)(oscar, report);
        entity['leading'] = report;
        entity = zulu.bind(tango)(mike, entity);
        return entity;
    };
    report['ChoiceLoading'] = verify;
    verify = function(argFoo) { // Original name: Sticker
        entity = argFoo;
        verify = entity.sticker;
        golf = entity.onPress;
        oscar = entity.onLongPress;
        options = entity.isInteracting;
        entity = _closure1_slot10;
        tango = undefined;
        yankee = entity.bind(tango)();
        mike = _closure1_slot0;
        offset = _closure1_slot2;
        entity = 26;
        entity = offset[entity];
        zulu = mike.bind(tango)(entity);
        entity = zulu.useShouldAnimateSticker;
        options = entity.bind(zulu)(options);
        zulu = _closure1_slot9;
        entity = 27;
        entity = offset[entity];
        entity = mike.bind(tango)(entity);
        mike = entity.PressableOpacity;
        entity = {};
        romeo = 'button';
        entity['accessibilityRole'] = romeo;
        yankee = yankee.stickerContainer;
        entity['style'] = yankee;
        entity['onPress'] = golf;
        entity['onLongPress'] = oscar;
        oscar = 'box-only';
        entity['pointerEvents'] = oscar;
        golf = _closure1_slot9;
        oscar = _closure1_slot1;
        report = 28;
        report = offset[report];
        oscar = oscar.bind(tango)(report);
        report = {};
        report['sticker'] = verify;
        verify = 40;
        report['size'] = verify;
        report['animated'] = options;
        report = golf.bind(tango)(oscar, report);
        entity['children'] = report;
        entity = zulu.bind(tango)(mike, entity);
        return entity;
    };
    report['Sticker'] = verify;
    oscar = function(argFoo) { // Original name: Label
        entity = argFoo;
        options = entity.label;
        tango = _closure1_slot9;
        mike = _closure1_slot0;
        zulu = _closure1_slot2;
        entity = 10;
        entity = zulu[entity];
        zulu = undefined;
        entity = mike.bind(zulu)(entity);
        mike = entity.FormRow;
        entity = {};
        golf = _closure1_slot9;
        oscar = _closure1_slot11;
        report = {};
        report['text'] = options;
        report = golf.bind(zulu)(oscar, report);
        entity['label'] = report;
        entity = tango.bind(zulu)(mike, entity);
        return entity;
    };
    report['Label'] = oscar;
    oscar = 30;
    oscar = options[oscar];
    options = golf.bind(entity)(oscar);
    golf = options.fileFinishedImporting;
    oscar = 'uikit-native/Autocomplete.tsx';
    oscar = golf.bind(options)(oscar);
    zulu['default'] = report;
    zulu['AUTOCOMPLETE_STICKER_NODE_SIZE'] = tango;
    zulu['AUTOCOMPLETE_STICKER_NODE_MARGIN'] = mike;
    return entity;
})();