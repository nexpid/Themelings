// app/uikit-native/refresh/EmptyState.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    oscard = argBar;
    foxtra = argBaz;
    zuuluu = argFre;
    golfie = argPlu;
    var _closure1_slot0 = oscard;
    var _closure1_slot1 = foxtra;
    var _closure1_slot2 = golfie;
    entity = global;
    option = entity.Object;
    report = option.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = report.bind(option)(zuuluu, entity, tangon);
    entity = 0;
    report = golfie[entity];
    tangon = argCor;
    entity = undefined;
    tangon = tangon.bind(entity)(report);
    tangon = 1;
    tangon = golfie[tangon];
    tangon = oscard.bind(entity)(tangon);
    report = tangon.View;
    var _closure1_slot3 = report;
    tangon = tangon.Image;
    var _closure1_slot4 = tangon;
    tangon = 2;
    tangon = golfie[tangon];
    tangon = oscard.bind(entity)(tangon);
    backup = tangon.Fonts;
    tangon = 3;
    tangon = golfie[tangon];
    tangon = oscard.bind(entity)(tangon);
    report = tangon.jsx;
    var _closure1_slot5 = report;
    tangon = tangon.jsxs;
    var _closure1_slot6 = tangon;
    tangon = 4;
    tangon = golfie[tangon];
    option = oscard.bind(entity)(tangon);
    report = option.createStyles;
    tangon = {};
    yankee = 'center';
    result = 16;
    verify = {'alignItems': 'center', 'justifyContent': 'center', 'padding': 16};
    tangon['container'] = verify;
    verify = {};
    kiloes = 5;
    offset = golfie[kiloes];
    output = foxtra.bind(entity)(offset);
    sizing = backup.DISPLAY_SEMIBOLD;
    romeon = 6;
    offset = golfie[romeon];
    offset = foxtra.bind(entity)(offset);
    offset = offset.colors;
    offset = offset.HEADER_PRIMARY;
    update = output.bind(entity)(sizing, offset, result);
    source = verify;
    offset = copyDataProperties(source, update);
    offset = 'textAlign';
    verify[offset] = yankee;
    output = 8;
    sizing = 'marginBottom';
    verify[sizing] = output;
    tangon['title'] = verify;
    verify = {};
    kiloes = golfie[kiloes];
    kiloes = foxtra.bind(entity)(kiloes);
    backup = backup.PRIMARY_MEDIUM;
    romeon = golfie[romeon];
    romeon = foxtra.bind(entity)(romeon);
    romeon = romeon.colors;
    foxtra = romeon.HEADER_SECONDARY;
    romeon = 14;
    update = kiloes.bind(entity)(backup, foxtra, romeon);
    source = verify;
    romeon = copyDataProperties(source, update);
    verify[offset] = yankee;
    tangon['body'] = verify;
    verify = {};
    offset = 32;
    verify['marginBottom'] = offset;
    tangon['image'] = verify;
    verify = {'alignSelf': 'center', 'marginTop': 16};
    tangon['cta'] = verify;
    tangon = report.bind(option)(tangon);
    var _closure1_slot7 = tangon;
    tangon = function(argFoo) { // Original name: EmptyState
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            entity = argFoo;
            romeon = entity.source;
            sizing = entity.title;
            yankee = entity.body;
            oscard = entity.containerStyle;
            output = entity.imageStyle;
            result = entity.titleStyle;
            kiloes = entity.bodyStyle;
            foxtra = entity.callToAction;
            entity = _closure1_slot7;
            tangon = undefined;
            backup = entity.bind(tangon)();
            zuuluu = _closure1_slot6;
            michal = _closure1_slot3;
            entity = {};
            option = backup.container;
            report = new Array(2);
            report[0] = option;
            report[1] = oscard;
            entity['style'] = report;
            oscard = null;
            report = oscard != romeon;
            option = null;
            if(!report) { _fun00002_ip = 145; continue _fun00001 }
 103:
            offset = _closure1_slot5;
            verify = _closure1_slot4;
            report = {};
            report['source'] = romeon;
            echoed = backup.image;
            romeon = new Array(2);
            romeon[0] = echoed;
            romeon[1] = output;
            report['style'] = romeon;
            option = offset.bind(tangon)(verify, report);
 145:
            report = new Array(4);
            report[0] = option;
            verify = oscard != sizing;
            option = null;
            if(!verify) { _fun00002_ip = 225; continue _fun00001 }
 162:
            romeon = _closure1_slot5;
            offset = _closure1_slot0;
            output = _closure1_slot2;
            verify = 7;
            verify = output[verify];
            verify = offset.bind(tangon)(verify);
            offset = verify.LegacyText;
            verify = {};
            echoed = backup.title;
            output = new Array(2);
            output[0] = echoed;
            output[1] = result;
            verify['style'] = output;
            verify['children'] = sizing;
            option = romeon.bind(tangon)(offset, verify);
 225:
            report[1] = option;
            offset = _closure1_slot5;
            verify = _closure1_slot0;
            romeon = _closure1_slot2;
            option = 7;
            option = romeon[option];
            option = verify.bind(tangon)(option);
            verify = option.LegacyText;
            option = {};
            sizing = backup.body;
            romeon = new Array(2);
            romeon[0] = sizing;
            romeon[1] = kiloes;
            option['style'] = romeon;
            option['children'] = yankee;
            option = offset.bind(tangon)(verify, option);
            report[2] = option;
            option = oscard != foxtra;
            oscard = null;
            if(!option) { _fun00002_ip = 422; continue _fun00001 }
 305:
            verify = _closure1_slot5;
            yankee = _closure1_slot1;
            romeon = _closure1_slot2;
            offset = 8;
            golfie = romeon[offset];
            option = yankee.bind(tangon)(golfie);
            golfie = {};
            kiloes = true;
            golfie['shrink'] = kiloes;
            backup = backup.cta;
            golfie['style'] = backup;
            backup = foxtra.label;
            golfie['text'] = backup;
            foxtra = foxtra.onPress;
            golfie['onPress'] = foxtra;
            foxtra = romeon[offset];
            foxtra = yankee.bind(tangon)(foxtra);
            foxtra = foxtra.Colors;
            foxtra = foxtra.BRAND;
            golfie['color'] = foxtra;
            offset = romeon[offset];
            offset = yankee.bind(tangon)(offset);
            offset = offset.Sizes;
            offset = offset.SMALL;
            golfie['size'] = offset;
            oscard = verify.bind(tangon)(option, golfie);
 422:
            report[3] = oscard;
            entity['children'] = report;
            entity = zuuluu.bind(tangon)(michal, entity);
            return entity;
        }
    };
    var _closure1_slot8 = tangon;
    report = 10;
    report = golfie[report];
    golfie = oscard.bind(entity)(report);
    oscard = golfie.fileFinishedImporting;
    report = 'uikit-native/refresh/EmptyState.tsx';
    report = oscard.bind(golfie)(report);
    zuuluu['default'] = tangon;
    michal = function(argFoo) {
        _fun00003: for(var _fun00004_ip = 0; ; ) switch(_fun00004_ip) {
 0:
            tangon = argFoo;
            michal = tangon.lightSource;
            oscard = tangon.darkSource;
            entity = null;
            zuuluu = Object.create(entity);
            entity = 0;
            zuuluu['lightSource'] = entity;
            zuuluu['darkSource'] = entity;
            foxtra = {};
            romeon = tangon;
            yankee = zuuluu;
            report = copyDataProperties(foxtra, romeon, yankee);
            golfie = _closure1_slot0;
            verify = _closure1_slot2;
            zuuluu = 9;
            option = verify[zuuluu];
            tangon = undefined;
            offset = golfie.bind(tangon)(option);
            option = offset.useThemeContext;
            option = option.bind(offset)();
            option = option.theme;
            zuuluu = verify[zuuluu];
            golfie = golfie.bind(tangon)(zuuluu);
            zuuluu = golfie.isThemeLight;
            zuuluu = zuuluu.bind(golfie)(option);
            if(!zuuluu) { _fun00004_ip = 110; continue _fun00003 }
 107:
            oscard = michal;
 110:
            zuuluu = _closure1_slot5;
            michal = _closure1_slot8;
            entity = {};
            entity['source'] = oscard;
            foxtra = entity;
            romeon = report;
            report = copyDataProperties(foxtra, romeon);
            entity = zuuluu.bind(tangon)(michal, entity);
            return entity;
        }
    };
    zuuluu['ThemedEmptyState'] = michal;
    return entity;
})();