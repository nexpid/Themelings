// app/uikit-native/refresh/form/FormText.tsx
export default (function(argFoo, argBar, argBaz, argCorge, _, argFred, argPlugh) {
    golf = argBar;
    yankee = argBaz;
    zulu = argFred;
    options = argPlugh;
    var _closure1_slot0 = golf;
    var _closure1_slot1 = options;
    entity = global;
    oscar = entity.Object;
    tango = oscar.defineProperty;
    mike = {};
    entity = true;
    mike['value'] = entity;
    entity = '__esModule';
    entity = tango.bind(oscar)(zulu, entity, mike);
    entity = 0;
    tango = options[entity];
    mike = argCorge;
    entity = undefined;
    verify = mike.bind(entity)(tango);
    mike = 1;
    mike = options[mike];
    mike = golf.bind(entity)(mike);
    oscar = mike.StyleSheet;
    mike = 2;
    mike = options[mike];
    mike = golf.bind(entity)(mike);
    mike = mike.jsx;
    var _closure1_slot2 = mike;
    mike = 3;
    mike = options[mike];
    offset = golf.bind(entity)(mike);
    tango = offset.createStyles;
    mike = {};
    romeo = {};
    foxtrot = 4;
    foxtrot = options[foxtrot];
    foxtrot = golf.bind(entity)(foxtrot);
    foxtrot = foxtrot.DARK_PRIMARY_100_LIGHT_PRIMARY_500;
    romeo['color'] = foxtrot;
    mike['primary'] = romeo;
    mike = tango.bind(offset)(mike);
    var _closure1_slot3 = mike;
    tango = oscar.create;
    mike = {};
    offset = {'fontSize': 12, 'lineHeight': 16};
    mike['SMALL'] = offset;
    offset = {'fontSize': 16, 'lineHeight': 22};
    mike['MEDIUM'] = offset;
    tango = tango.bind(oscar)(mike);
    var _closure1_slot4 = tango;
    mike = {};
    oscar = {};
    offset = 5;
    romeo = options[offset];
    romeo = yankee.bind(entity)(romeo);
    romeo = romeo.unsafe_rawColors;
    romeo = romeo.BRAND_500;
    oscar['color'] = romeo;
    mike['BRAND'] = oscar;
    oscar = {};
    romeo = options[offset];
    romeo = yankee.bind(entity)(romeo);
    romeo = romeo.unsafe_rawColors;
    romeo = romeo.RED_400;
    oscar['color'] = romeo;
    mike['RED'] = oscar;
    oscar = {};
    romeo = options[offset];
    romeo = yankee.bind(entity)(romeo);
    romeo = romeo.unsafe_rawColors;
    romeo = romeo.GREEN_360;
    oscar['color'] = romeo;
    mike['GREEN'] = oscar;
    oscar = {};
    romeo = options[offset];
    romeo = yankee.bind(entity)(romeo);
    romeo = romeo.unsafe_rawColors;
    romeo = romeo.YELLOW_300;
    oscar['color'] = romeo;
    mike['YELLOW'] = oscar;
    oscar = {};
    romeo = options[offset];
    romeo = yankee.bind(entity)(romeo);
    romeo = romeo.unsafe_rawColors;
    romeo = romeo.BLUE_345;
    oscar['color'] = romeo;
    mike['LINK'] = oscar;
    oscar = {};
    offset = options[offset];
    offset = yankee.bind(entity)(offset);
    offset = offset.unsafe_rawColors;
    offset = offset.WHITE_500;
    oscar['color'] = offset;
    mike['WHITE'] = oscar;
    oscar = verify.forwardRef;
    report = function(argFoo, argBar) {
        _fun63739: for(var _fun63739_ip = 0; ; ) switch(_fun63739_ip) {
 0:
            entity = argFoo;
            report = entity.children;
            offset = entity.size;
            tango = undefined;
            if(!(offset === tango)) { _fun63739_ip = 32; continue _fun63739 }
 19:
            mike = _closure1_slot4;
            offset = mike.MEDIUM;
 32:
            options = entity.color;
            golf = entity.style;
            mike = _closure1_slot3;
            verify = mike.bind(tango)();
            zulu = _closure1_slot2;
            mike = _closure1_slot0;
            oscar = _closure1_slot1;
            entity = 6;
            entity = oscar[entity];
            entity = mike.bind(tango)(entity);
            mike = entity.LegacyText;
            entity = {};
            oscar = argBar;
            entity['ref'] = oscar;
            oscar = new Array(3);
            oscar[0] = offset;
            offset = null;
            if(!(offset == options)) { _fun63739_ip = 112; continue _fun63739 }
 106:
            options = verify.primary;
 112:
            oscar[1] = options;
            oscar[2] = golf;
            entity['style'] = oscar;
            entity['children'] = report;
            entity = zulu.bind(tango)(mike, entity);
            return entity;
        }
    };
    report = oscar.bind(verify)(report);
    oscar = 7;
    oscar = options[oscar];
    options = golf.bind(entity)(oscar);
    golf = options.fileFinishedImporting;
    oscar = 'uikit-native/refresh/form/FormText.tsx';
    oscar = golf.bind(options)(oscar);
    zulu['default'] = report;
    zulu['FormTextSizes'] = tango;
    zulu['FormTextColors'] = mike;
    return entity;
})();