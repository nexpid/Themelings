// app/uikit-native/refresh/form/FormText.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    golfie = argBar;
    yankee = argBaz;
    zuuluu = argFre;
    option = argPlu;
    var _closure1_slot0 = golfie;
    var _closure1_slot1 = option;
    entity = global;
    oscard = entity.Object;
    tangon = oscard.defineProperty;
    michal = {};
    entity = true;
    michal['value'] = entity;
    entity = '__esModule';
    entity = tangon.bind(oscard)(zuuluu, entity, michal);
    entity = 0;
    tangon = option[entity];
    michal = argCor;
    entity = undefined;
    verify = michal.bind(entity)(tangon);
    michal = 1;
    michal = option[michal];
    michal = golfie.bind(entity)(michal);
    oscard = michal.StyleSheet;
    michal = 2;
    michal = option[michal];
    michal = golfie.bind(entity)(michal);
    michal = michal.jsx;
    var _closure1_slot2 = michal;
    michal = 3;
    michal = option[michal];
    offset = golfie.bind(entity)(michal);
    tangon = offset.createStyles;
    michal = {};
    romeon = {};
    foxtra = 4;
    foxtra = option[foxtra];
    foxtra = golfie.bind(entity)(foxtra);
    foxtra = foxtra.DARK_PRIMARY_100_LIGHT_PRIMARY_500;
    romeon['color'] = foxtra;
    michal['primary'] = romeon;
    michal = tangon.bind(offset)(michal);
    var _closure1_slot3 = michal;
    tangon = oscard.create;
    michal = {};
    offset = {'fontSize': 12, 'lineHeight': 16};
    michal['SMALL'] = offset;
    offset = {'fontSize': 16, 'lineHeight': 22};
    michal['MEDIUM'] = offset;
    tangon = tangon.bind(oscard)(michal);
    var _closure1_slot4 = tangon;
    michal = {};
    oscard = {};
    offset = 5;
    romeon = option[offset];
    romeon = yankee.bind(entity)(romeon);
    romeon = romeon.unsafe_rawColors;
    romeon = romeon.BRAND_500;
    oscard['color'] = romeon;
    michal['BRAND'] = oscard;
    oscard = {};
    romeon = option[offset];
    romeon = yankee.bind(entity)(romeon);
    romeon = romeon.unsafe_rawColors;
    romeon = romeon.RED_400;
    oscard['color'] = romeon;
    michal['RED'] = oscard;
    oscard = {};
    romeon = option[offset];
    romeon = yankee.bind(entity)(romeon);
    romeon = romeon.unsafe_rawColors;
    romeon = romeon.GREEN_360;
    oscard['color'] = romeon;
    michal['GREEN'] = oscard;
    oscard = {};
    romeon = option[offset];
    romeon = yankee.bind(entity)(romeon);
    romeon = romeon.unsafe_rawColors;
    romeon = romeon.YELLOW_300;
    oscard['color'] = romeon;
    michal['YELLOW'] = oscard;
    oscard = {};
    romeon = option[offset];
    romeon = yankee.bind(entity)(romeon);
    romeon = romeon.unsafe_rawColors;
    romeon = romeon.BLUE_345;
    oscard['color'] = romeon;
    michal['LINK'] = oscard;
    oscard = {};
    offset = option[offset];
    offset = yankee.bind(entity)(offset);
    offset = offset.unsafe_rawColors;
    offset = offset.WHITE_500;
    oscard['color'] = offset;
    michal['WHITE'] = oscard;
    oscard = verify.forwardRef;
    report = function(argFoo, argBar) {
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            entity = argFoo;
            report = entity.children;
            offset = entity.size;
            tangon = undefined;
            if(!(offset === tangon)) { _fun00002_ip = 32; continue _fun00001 }
 19:
            michal = _closure1_slot4;
            offset = michal.MEDIUM;
 32:
            option = entity.color;
            golfie = entity.style;
            michal = _closure1_slot3;
            verify = michal.bind(tangon)();
            zuuluu = _closure1_slot2;
            michal = _closure1_slot0;
            oscard = _closure1_slot1;
            entity = 6;
            entity = oscard[entity];
            entity = michal.bind(tangon)(entity);
            michal = entity.LegacyText;
            entity = {};
            oscard = argBar;
            entity['ref'] = oscard;
            oscard = new Array(3);
            oscard[0] = offset;
            offset = null;
            if(!(offset == option)) { _fun00002_ip = 112; continue _fun00001 }
 106:
            option = verify.primary;
 112:
            oscard[1] = option;
            oscard[2] = golfie;
            entity['style'] = oscard;
            entity['children'] = report;
            entity = zuuluu.bind(tangon)(michal, entity);
            return entity;
        }
    };
    report = oscard.bind(verify)(report);
    oscard = 7;
    oscard = option[oscard];
    option = golfie.bind(entity)(oscard);
    golfie = option.fileFinishedImporting;
    oscard = 'uikit-native/refresh/form/FormText.tsx';
    oscard = golfie.bind(option)(oscard);
    zuuluu['default'] = report;
    zuuluu['FormTextSizes'] = tangon;
    zuuluu['FormTextColors'] = michal;
    return entity;
})();