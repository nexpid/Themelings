// app/uikit-native/refresh/form/FormCheckboxRow.tsx
export default (function(argFoo, argBar, argBaz, argCorge, _, argFred, argPlugh) {
    report = argBar;
    zulu = argFred;
    oscar = argPlugh;
    entity = argBaz;
    var _closure1_slot0 = entity;
    var _closure1_slot1 = oscar;
    entity = global;
    options = entity.Object;
    golf = options.defineProperty;
    tango = {};
    entity = true;
    tango['value'] = entity;
    entity = '__esModule';
    entity = golf.bind(options)(zulu, entity, tango);
    offset = 0;
    golf = oscar[offset];
    tango = argCorge;
    entity = undefined;
    tango = tango.bind(entity)(golf);
    tango = 1;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.jsx;
    var _closure1_slot2 = tango;
    tango = 2;
    tango = oscar[tango];
    options = report.bind(entity)(tango);
    golf = options.createStyles;
    tango = {};
    verify = {};
    verify['flexShrink'] = offset;
    tango['checkboxWrapperStyle'] = verify;
    tango = golf.bind(options)(tango);
    var _closure1_slot3 = tango;
    tango = 5;
    tango = oscar[tango];
    oscar = report.bind(entity)(tango);
    report = oscar.fileFinishedImporting;
    tango = 'uikit-native/refresh/form/FormCheckboxRow.tsx';
    tango = report.bind(oscar)(tango);
    mike = function(argFoo) { // Original name: FormCheckboxRow
        zulu = argFoo;
        options = zulu.selected;
        entity = null;
        mike = Object.create(entity);
        entity = 0;
        mike['selected'] = entity;
        foxtrot = {};
        romeo = zulu;
        yankee = mike;
        romeo = copyDataProperties(foxtrot, romeo, yankee);
        mike = _closure1_slot3;
        tango = undefined;
        report = mike.bind(tango)();
        zulu = _closure1_slot2;
        golf = _closure1_slot0;
        verify = _closure1_slot1;
        entity = 3;
        entity = verify[entity];
        mike = golf.bind(tango)(entity);
        entity = {};
        foxtrot = entity;
        oscar = copyDataProperties(foxtrot, romeo);
        offset = 'checkbox';
        oscar = 'accessibilityRole';
        entity[oscar] = offset;
        offset = {};
        offset['checked'] = options;
        oscar = 'accessibilityState';
        entity[oscar] = offset;
        oscar = 4;
        oscar = verify[oscar];
        golf = golf.bind(tango)(oscar);
        oscar = {};
        oscar['selected'] = options;
        golf = zulu.bind(tango)(golf, oscar);
        oscar = 'trailing';
        entity[oscar] = golf;
        oscar = report.checkboxWrapperStyle;
        report = 'trailingWrapperStyle';
        entity[report] = oscar;
        entity = zulu.bind(tango)(mike, entity);
        return entity;
    };
    zulu['default'] = mike;
    return entity;
})();