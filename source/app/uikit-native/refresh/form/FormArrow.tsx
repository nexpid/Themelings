// app/uikit-native/refresh/form/FormArrow.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    report = argBar;
    yankee = argBaz;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    var _closure1_slot1 = yankee;
    var _closure1_slot2 = oscard;
    entity = global;
    option = entity.Object;
    golfie = option.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(option)(zuuluu, entity, tangon);
    entity = 0;
    golfie = oscard[entity];
    tangon = argCor;
    entity = undefined;
    tangon = tangon.bind(entity)(golfie);
    tangon = 1;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.View;
    var _closure1_slot3 = tangon;
    tangon = 2;
    golfie = oscard[tangon];
    golfie = report.bind(entity)(golfie);
    golfie = golfie.jsx;
    var _closure1_slot4 = golfie;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.jsxs;
    var _closure1_slot5 = tangon;
    tangon = 3;
    tangon = oscard[tangon];
    verify = report.bind(entity)(tangon);
    option = verify.createStyles;
    golfie = {};
    tangon = {'flexDirection': 'row', 'alignItems': 'center'};
    golfie['wrapper'] = tangon;
    offset = {'tintColor': null, 'marginRight': 4294967288, 'marginLeft': 8};
    tangon = 4;
    tangon = oscard[tangon];
    tangon = yankee.bind(entity)(tangon);
    tangon = tangon.colors;
    tangon = tangon.INTERACTIVE_NORMAL;
    offset['tintColor'] = tangon;
    tangon = 8;
    golfie['icon'] = offset;
    golfie = option.bind(verify)(golfie);
    var _closure1_slot6 = golfie;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'uikit-native/refresh/form/FormArrow.tsx';
    tangon = report.bind(oscard)(tangon);
    michal = function(argFoo) { // Original name: _default
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            entity = argFoo;
            offset = entity.label;
            backup = entity.style;
            entity = _closure1_slot6;
            report = undefined;
            foxtra = entity.bind(report)();
            entity = null;
            if(!(entity == offset)) { _fun00002_ip = 131; continue _fun00001 }
 32:
            zuuluu = _closure1_slot4;
            oscard = _closure1_slot1;
            option = _closure1_slot2;
            tangon = 6;
            entity = option[tangon];
            michal = oscard.bind(report)(entity);
            entity = {};
            yankee = foxtra.icon;
            verify = new Array(2);
            verify[0] = yankee;
            verify[1] = backup;
            entity['style'] = verify;
            verify = 7;
            verify = option[verify];
            verify = oscard.bind(report)(verify);
            entity['source'] = verify;
            tangon = option[tangon];
            tangon = oscard.bind(report)(tangon);
            tangon = tangon.Sizes;
            tangon = tangon.MEDIUM;
            entity['size'] = tangon;
            entity = zuuluu.bind(report)(michal, entity);
            _fun00002_ip = 308; continue _fun00001;
 131:
            tangon = _closure1_slot5;
            zuuluu = _closure1_slot3;
            michal = {};
            oscard = foxtra.wrapper;
            michal['style'] = oscard;
            verify = _closure1_slot4;
            option = _closure1_slot0;
            romeon = _closure1_slot2;
            oscard = 5;
            oscard = romeon[oscard];
            oscard = option.bind(report)(oscard);
            option = oscard.Text;
            oscard = {'maxFontSizeMultiplier': 1.5, 'variant': 'text-md/medium', 'color': 'text-muted'};
            oscard['children'] = offset;
            option = verify.bind(report)(option, oscard);
            oscard = new Array(2);
            oscard[0] = option;
            yankee = _closure1_slot1;
            offset = 6;
            golfie = romeon[offset];
            option = yankee.bind(report)(golfie);
            golfie = {};
            kiloes = foxtra.icon;
            foxtra = new Array(2);
            foxtra[0] = kiloes;
            foxtra[1] = backup;
            golfie['style'] = foxtra;
            foxtra = 7;
            foxtra = romeon[foxtra];
            foxtra = yankee.bind(report)(foxtra);
            golfie['source'] = foxtra;
            offset = romeon[offset];
            offset = yankee.bind(report)(offset);
            offset = offset.Sizes;
            offset = offset.MEDIUM;
            golfie['size'] = offset;
            golfie = verify.bind(report)(option, golfie);
            oscard[1] = golfie;
            michal['children'] = oscard;
            entity = tangon.bind(report)(zuuluu, michal);
 308:
            return entity;
        }
    };
    zuuluu['default'] = michal;
    return entity;
})();