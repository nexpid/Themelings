// app/uikit-native/refresh/form/FormSliderRow.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    report = argBar;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    entity = argBaz;
    var _closure1_slot1 = entity;
    var _closure1_slot2 = oscard;
    entity = global;
    option = entity.Object;
    golfie = option.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(option)(zuuluu, entity, tangon);
    entity = 0;
    golfie = oscard[entity];
    tangon = argCor;
    entity = undefined;
    tangon = tangon.bind(entity)(golfie);
    var _closure1_slot3 = tangon;
    tangon = 1;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.View;
    var _closure1_slot4 = tangon;
    tangon = 2;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    golfie = tangon.jsx;
    var _closure1_slot5 = golfie;
    golfie = tangon.jsxs;
    var _closure1_slot6 = golfie;
    tangon = tangon.Fragment;
    var _closure1_slot7 = tangon;
    tangon = 3;
    tangon = oscard[tangon];
    option = report.bind(entity)(tangon);
    golfie = option.createStyles;
    tangon = {};
    verify = {'flexDirection': 'row', 'justifyContent': 'space-between', 'alignItems': 'center'};
    tangon['labels'] = verify;
    verify = {'marginStart': 4294967292, 'marginTop': 8};
    tangon['slider'] = verify;
    tangon = golfie.bind(option)(tangon);
    var _closure1_slot8 = tangon;
    tangon = 9;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'uikit-native/refresh/form/FormSliderRow.tsx';
    tangon = report.bind(oscard)(tangon);
    michal = function(argFoo) { // Original name: FormSliderRow
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            zuuluu = argFoo;
            sizing = zuuluu.label;
            backup = zuuluu.trailing;
            entity = null;
            michal = Object.create(entity);
            entity = 0;
            michal['label'] = entity;
            michal['trailing'] = entity;
            echoed = {};
            result = zuuluu;
            output = michal;
            yankee = copyDataProperties(echoed, result, output);
            zuuluu = _closure1_slot3;
            michal = zuuluu.useContext;
            tangon = _closure1_slot0;
            report = _closure1_slot2;
            entity = 4;
            entity = report[entity];
            report = undefined;
            entity = tangon.bind(report)(entity);
            entity = entity.RedesignCompatContext;
            entity = michal.bind(zuuluu)(entity);
            michal = _closure1_slot8;
            offset = michal.bind(report)();
            tangon = _closure1_slot6;
            if(entity) { _fun00002_ip = 207; continue _fun00001 }
 103:
            michal = _closure1_slot7;
            entity = {};
            verify = _closure1_slot5;
            option = _closure1_slot1;
            romeon = _closure1_slot2;
            zuuluu = 8;
            zuuluu = romeon[zuuluu];
            oscard = option.bind(report)(zuuluu);
            zuuluu = {};
            zuuluu['label'] = sizing;
            zuuluu['trailing'] = backup;
            oscard = verify.bind(report)(oscard, zuuluu);
            zuuluu = new Array(2);
            zuuluu[0] = oscard;
            oscard = 7;
            oscard = romeon[oscard];
            option = option.bind(report)(oscard);
            oscard = {};
            echoed = oscard;
            result = yankee;
            romeon = copyDataProperties(echoed, result);
            oscard = verify.bind(report)(option, oscard);
            zuuluu[1] = oscard;
            entity['children'] = zuuluu;
            entity = tangon.bind(report)(michal, entity);
            _fun00002_ip = 389; continue _fun00001;
 207:
            kiloes = _closure1_slot0;
            romeon = _closure1_slot2;
            michal = 5;
            michal = romeon[michal];
            michal = kiloes.bind(report)(michal);
            zuuluu = michal.Card;
            michal = {};
            option = _closure1_slot4;
            oscard = {};
            verify = offset.labels;
            oscard['style'] = verify;
            verify = _closure1_slot5;
            foxtra = 6;
            foxtra = romeon[foxtra];
            foxtra = kiloes.bind(report)(foxtra);
            kiloes = foxtra.Text;
            foxtra = {'variant': 'text-md/semibold', 'color': 'header-primary'};
            foxtra['children'] = sizing;
            kiloes = verify.bind(report)(kiloes, foxtra);
            foxtra = new Array(2);
            foxtra[0] = kiloes;
            foxtra[1] = backup;
            oscard['children'] = foxtra;
            option = tangon.bind(report)(option, oscard);
            oscard = new Array(2);
            oscard[0] = option;
            option = _closure1_slot1;
            golfie = 7;
            golfie = romeon[golfie];
            option = option.bind(report)(golfie);
            golfie = {};
            echoed = golfie;
            result = yankee;
            yankee = copyDataProperties(echoed, result);
            yankee = offset.slider;
            offset = 'style';
            golfie[offset] = yankee;
            golfie = verify.bind(report)(option, golfie);
            oscard[1] = golfie;
            michal['children'] = oscard;
            entity = tangon.bind(report)(zuuluu, michal);
 389:
            return entity;
        }
    };
    zuuluu['default'] = michal;
    return entity;
})();