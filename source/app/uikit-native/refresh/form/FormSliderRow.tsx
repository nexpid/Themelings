// app/uikit-native/refresh/form/FormSliderRow.tsx
export default (function(argFoo, argBar, argBaz, argCorge, _, argFred, argPlugh) {
    report = argBar;
    zulu = argFred;
    oscar = argPlugh;
    var _closure1_slot0 = report;
    entity = argBaz;
    var _closure1_slot1 = entity;
    var _closure1_slot2 = oscar;
    entity = global;
    options = entity.Object;
    golf = options.defineProperty;
    tango = {};
    entity = true;
    tango['value'] = entity;
    entity = '__esModule';
    entity = golf.bind(options)(zulu, entity, tango);
    entity = 0;
    golf = oscar[entity];
    tango = argCorge;
    entity = undefined;
    tango = tango.bind(entity)(golf);
    var _closure1_slot3 = tango;
    tango = 1;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.View;
    var _closure1_slot4 = tango;
    tango = 2;
    golf = oscar[tango];
    golf = report.bind(entity)(golf);
    golf = golf.jsx;
    var _closure1_slot5 = golf;
    golf = oscar[tango];
    golf = report.bind(entity)(golf);
    golf = golf.jsxs;
    var _closure1_slot6 = golf;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.Fragment;
    var _closure1_slot7 = tango;
    tango = 3;
    tango = oscar[tango];
    options = report.bind(entity)(tango);
    golf = options.createStyles;
    tango = {};
    verify = {'flexDirection': 'row', 'justifyContent': 'space-between', 'alignItems': 'center'};
    tango['labels'] = verify;
    verify = {'marginStart': 4294967292, 'marginTop': 8};
    tango['slider'] = verify;
    tango = golf.bind(options)(tango);
    var _closure1_slot8 = tango;
    tango = 9;
    tango = oscar[tango];
    oscar = report.bind(entity)(tango);
    report = oscar.fileFinishedImporting;
    tango = 'uikit-native/refresh/form/FormSliderRow.tsx';
    tango = report.bind(oscar)(tango);
    mike = function(argFoo) { // Original name: FormSliderRow
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            zulu = argFoo;
            sizing = zulu.label;
            backup = zulu.trailing;
            entity = null;
            mike = Object.create(entity);
            entity = 0;
            mike['label'] = entity;
            mike['trailing'] = entity;
            echo = {};
            result = zulu;
            output = mike;
            yankee = copyDataProperties(echo, result, output);
            zulu = _closure1_slot3;
            mike = zulu.useContext;
            tango = _closure1_slot0;
            report = _closure1_slot2;
            entity = 4;
            entity = report[entity];
            report = undefined;
            entity = tango.bind(report)(entity);
            entity = entity.RedesignCompatContext;
            entity = mike.bind(zulu)(entity);
            mike = _closure1_slot8;
            offset = mike.bind(report)();
            tango = _closure1_slot6;
            if(entity) { _fun00002_ip = 207; continue _fun00001 }
 103:
            mike = _closure1_slot7;
            entity = {};
            verify = _closure1_slot5;
            options = _closure1_slot1;
            romeo = _closure1_slot2;
            zulu = 8;
            zulu = romeo[zulu];
            oscar = options.bind(report)(zulu);
            zulu = {};
            zulu['label'] = sizing;
            zulu['trailing'] = backup;
            oscar = verify.bind(report)(oscar, zulu);
            zulu = new Array(2);
            zulu[0] = oscar;
            oscar = 7;
            oscar = romeo[oscar];
            options = options.bind(report)(oscar);
            oscar = {};
            echo = oscar;
            result = yankee;
            romeo = copyDataProperties(echo, result);
            oscar = verify.bind(report)(options, oscar);
            zulu[1] = oscar;
            entity['children'] = zulu;
            entity = tango.bind(report)(mike, entity);
            _fun00002_ip = 389; continue _fun00001;
 207:
            kilo = _closure1_slot0;
            romeo = _closure1_slot2;
            mike = 5;
            mike = romeo[mike];
            mike = kilo.bind(report)(mike);
            zulu = mike.Card;
            mike = {};
            options = _closure1_slot4;
            oscar = {};
            verify = offset.labels;
            oscar['style'] = verify;
            verify = _closure1_slot5;
            foxtrot = 6;
            foxtrot = romeo[foxtrot];
            foxtrot = kilo.bind(report)(foxtrot);
            kilo = foxtrot.Text;
            foxtrot = {'variant': 'text-md/semibold', 'color': 'header-primary'};
            foxtrot['children'] = sizing;
            kilo = verify.bind(report)(kilo, foxtrot);
            foxtrot = new Array(2);
            foxtrot[0] = kilo;
            foxtrot[1] = backup;
            oscar['children'] = foxtrot;
            options = tango.bind(report)(options, oscar);
            oscar = new Array(2);
            oscar[0] = options;
            options = _closure1_slot1;
            golf = 7;
            golf = romeo[golf];
            options = options.bind(report)(golf);
            golf = {};
            echo = golf;
            result = yankee;
            yankee = copyDataProperties(echo, result);
            yankee = offset.slider;
            offset = 'style';
            golf[offset] = yankee;
            golf = verify.bind(report)(options, golf);
            oscar[1] = golf;
            mike['children'] = oscar;
            entity = tango.bind(report)(zulu, mike);
 389:
            return entity;
        }
    };
    zulu['default'] = mike;
    return entity;
})();