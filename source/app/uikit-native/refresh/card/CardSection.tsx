// app/uikit-native/refresh/card/CardSection.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    report = argBar;
    yankee = argBaz;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    var _closure1_slot1 = oscard;
    entity = global;
    option = entity.Object;
    golfie = option.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(option)(zuuluu, entity, tangon);
    entity = 0;
    golfie = oscard[entity];
    tangon = argCor;
    entity = undefined;
    tangon = tangon.bind(entity)(golfie);
    tangon = 1;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.View;
    var _closure1_slot2 = tangon;
    tangon = 2;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    verify = tangon.Fonts;
    tangon = 3;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    golfie = tangon.jsx;
    var _closure1_slot3 = golfie;
    tangon = tangon.jsxs;
    var _closure1_slot4 = tangon;
    tangon = 4;
    tangon = oscard[tangon];
    option = report.bind(entity)(tangon);
    golfie = option.createStyles;
    tangon = {};
    offset = {'paddingTop': 16, 'paddingHorizontal': 16};
    tangon['container'] = offset;
    offset = 5;
    offset = oscard[offset];
    kiloes = yankee.bind(entity)(offset);
    backup = verify.DISPLAY_EXTRABOLD;
    offset = 6;
    verify = oscard[offset];
    verify = yankee.bind(entity)(verify);
    verify = verify.colors;
    result = verify.HEADER_SECONDARY;
    output = 12;
    sizing = {'uppercase': true, 'marginBottom': 6};
    update = undefined;
    echoed = backup;
    verify = update[kiloes](echoed, result, output, sizing, kiloes);
    tangon['title'] = verify;
    verify = {};
    romeon = oscard[offset];
    romeon = yankee.bind(entity)(romeon);
    romeon = romeon.radii;
    romeon = romeon.xs;
    verify['borderRadius'] = romeon;
    romeon = 'hidden';
    verify['overflow'] = romeon;
    offset = oscard[offset];
    offset = yankee.bind(entity)(offset);
    offset = offset.colors;
    offset = offset.BACKGROUND_TERTIARY;
    verify['backgroundColor'] = offset;
    tangon['card'] = verify;
    tangon = golfie.bind(option)(tangon);
    var _closure1_slot5 = tangon;
    tangon = 8;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'uikit-native/refresh/card/CardSection.tsx';
    tangon = report.bind(oscard)(tangon);
    michal = function(argFoo) { // Original name: _default
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            entity = argFoo;
            kiloes = entity.title;
            offset = entity.children;
            verify = entity.headerComponent;
            output = entity.titleStyle;
            romeon = entity.cardStyle;
            foxtra = entity.style;
            oscard = entity.accessibilityRole;
            report = entity.accessibilityLabel;
            entity = _closure1_slot5;
            tangon = undefined;
            yankee = entity.bind(tangon)();
            zuuluu = _closure1_slot4;
            michal = _closure1_slot2;
            entity = {};
            backup = yankee.container;
            option = new Array(2);
            option[0] = backup;
            option[1] = foxtra;
            entity['style'] = option;
            entity['accessibilityRole'] = oscard;
            entity['accessibilityLabel'] = report;
            oscard = null;
            report = oscard != kiloes;
            option = null;
            if(!report) { _fun00002_ip = 180; continue _fun00001 }
 109:
            backup = _closure1_slot3;
            foxtra = _closure1_slot0;
            sizing = _closure1_slot1;
            report = 7;
            report = sizing[report];
            report = foxtra.bind(tangon)(report);
            foxtra = report.LegacyText;
            report = {};
            result = yankee.title;
            sizing = new Array(2);
            sizing[0] = result;
            sizing[1] = output;
            report['style'] = sizing;
            sizing = 'header';
            report['accessibilityRole'] = sizing;
            report['children'] = kiloes;
            option = backup.bind(tangon)(foxtra, report);
 180:
            report = new Array(3);
            report[0] = option;
            foxtra = oscard != verify;
            option = null;
            if(!foxtra) { _fun00002_ip = 200; continue _fun00001 }
 197:
            option = verify;
 200:
            report[1] = option;
            option = oscard != offset;
            oscard = null;
            if(!option) { _fun00002_ip = 255; continue _fun00001 }
 213:
            verify = _closure1_slot3;
            option = _closure1_slot2;
            golfie = {};
            foxtra = yankee.card;
            yankee = new Array(2);
            yankee[0] = foxtra;
            yankee[1] = romeon;
            golfie['style'] = yankee;
            golfie['children'] = offset;
            oscard = verify.bind(tangon)(option, golfie);
 255:
            report[2] = oscard;
            entity['children'] = report;
            entity = zuuluu.bind(tangon)(michal, entity);
            return entity;
        }
    };
    zuuluu['default'] = michal;
    return entity;
})();