// app/uikit-native/refresh/Badges.tsx
export default (function(argFoo, argBar, argBaz, argCorge, _, argFred, argPlugh) {
    oscar = argBar;
    yankee = argBaz;
    zulu = argFred;
    golf = argPlugh;
    var _closure1_slot0 = oscar;
    var _closure1_slot1 = golf;
    entity = global;
    options = entity.Object;
    report = options.defineProperty;
    tango = {};
    entity = true;
    tango['value'] = entity;
    entity = '__esModule';
    entity = report.bind(options)(zulu, entity, tango);
    entity = 0;
    report = golf[entity];
    tango = argCorge;
    entity = undefined;
    tango = tango.bind(entity)(report);
    tango = 1;
    tango = golf[tango];
    tango = oscar.bind(entity)(tango);
    tango = tango.View;
    var _closure1_slot2 = tango;
    tango = 2;
    tango = golf[tango];
    tango = oscar.bind(entity)(tango);
    tango = tango.jsx;
    var _closure1_slot3 = tango;
    tango = 3;
    report = golf[tango];
    verify = oscar.bind(entity)(report);
    options = verify.createStyles;
    report = {};
    romeo = {'borderRadius': null, 'paddingHorizontal': 4, 'paddingTop': 2};
    offset = 4;
    foxtrot = golf[offset];
    foxtrot = yankee.bind(entity)(foxtrot);
    foxtrot = foxtrot.radii;
    foxtrot = foxtrot.sm;
    romeo['borderRadius'] = foxtrot;
    report['base'] = romeo;
    romeo = {};
    foxtrot = golf[offset];
    foxtrot = yankee.bind(entity)(foxtrot);
    foxtrot = foxtrot.colors;
    foxtrot = foxtrot.STATUS_DANGER_BACKGROUND;
    romeo['backgroundColor'] = foxtrot;
    report['danger'] = romeo;
    romeo = {};
    foxtrot = golf[offset];
    foxtrot = yankee.bind(entity)(foxtrot);
    foxtrot = foxtrot.colors;
    foxtrot = foxtrot.BG_BRAND;
    romeo['backgroundColor'] = foxtrot;
    report['info'] = romeo;
    romeo = {};
    foxtrot = golf[offset];
    foxtrot = yankee.bind(entity)(foxtrot);
    foxtrot = foxtrot.unsafe_rawColors;
    foxtrot = foxtrot.BRAND_260;
    romeo['backgroundColor'] = foxtrot;
    report['brand'] = romeo;
    report = options.bind(verify)(report);
    var _closure1_slot4 = report;
    tango = golf[tango];
    options = oscar.bind(entity)(tango);
    report = options.createStyles;
    tango = {};
    verify = {'textAlign': 'center', 'textTransform': 'uppercase'};
    tango['text'] = verify;
    verify = {};
    romeo = golf[offset];
    romeo = yankee.bind(entity)(romeo);
    romeo = romeo.colors;
    romeo = romeo.STATUS_DANGER_TEXT;
    verify['color'] = romeo;
    tango['dangerText'] = verify;
    verify = {};
    romeo = golf[offset];
    romeo = yankee.bind(entity)(romeo);
    romeo = romeo.colors;
    romeo = romeo.WHITE;
    verify['color'] = romeo;
    tango['infoText'] = verify;
    verify = {};
    offset = golf[offset];
    offset = yankee.bind(entity)(offset);
    offset = offset.unsafe_rawColors;
    offset = offset.BRAND_560;
    verify['color'] = offset;
    tango['brandText'] = verify;
    tango = report.bind(options)(tango);
    var _closure1_slot5 = tango;
    tango = {};
    report = 'danger';
    tango['DANGER'] = report;
    report = 'info';
    tango['INFO'] = report;
    report = 'brand';
    tango['BRAND'] = report;
    report = 'normal';
    tango['NORMAL'] = report;
    var _closure1_slot6 = tango;
    report = 6;
    report = golf[report];
    golf = oscar.bind(entity)(report);
    oscar = golf.fileFinishedImporting;
    report = 'uikit-native/refresh/Badges.tsx';
    report = oscar.bind(golf)(report);
    zulu['BadgeColors'] = tango;
    mike = function(argFoo) { // Original name: TextBadge
        _fun62403: for(var _fun62403_ip = 0; ; ) switch(_fun62403_ip) {
 0:
            entity = argFoo;
            offset = entity.color;
            tango = undefined;
            if(!(offset === tango)) { _fun62403_ip = 27; continue _fun62403 }
 14:
            mike = _closure1_slot6;
            offset = mike.DANGER;
 27:
            yankee = entity.style;
            golf = entity.text;
            verify = entity.textStyle;
            entity = _closure1_slot4;
            oscar = entity.bind(tango)();
            entity = _closure1_slot5;
            options = entity.bind(tango)();
            romeo = oscar[offset];
            entity = global;
            entity = entity.HermesInternal;
            zulu = entity.concat;
            mike = '';
            entity = 'Text';
            entity = zulu.bind(mike)(offset, entity);
            offset = options[entity];
            zulu = _closure1_slot3;
            mike = _closure1_slot2;
            entity = {};
            foxtrot = oscar.base;
            oscar = new Array(3);
            oscar[0] = foxtrot;
            oscar[1] = romeo;
            oscar[2] = yankee;
            entity['style'] = oscar;
            oscar = _closure1_slot0;
            yankee = _closure1_slot1;
            report = 5;
            report = yankee[report];
            report = oscar.bind(tango)(report);
            oscar = report.Text;
            report = {};
            yankee = 'text-xs/bold';
            report['variant'] = yankee;
            yankee = options.text;
            options = new Array(3);
            options[0] = yankee;
            options[1] = offset;
            options[2] = verify;
            report['style'] = options;
            report['children'] = golf;
            report = zulu.bind(tango)(oscar, report);
            entity['children'] = report;
            entity = zulu.bind(tango)(mike, entity);
            return entity;
        }
    };
    zulu['TextBadge'] = mike;
    return entity;
})();