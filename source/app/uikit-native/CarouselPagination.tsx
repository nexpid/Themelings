// app/uikit-native/CarouselPagination.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    report = argBar;
    romeon = argBaz;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    var _closure1_slot1 = romeon;
    var _closure1_slot2 = oscard;
    entity = global;
    option = entity.Object;
    golfie = option.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(option)(zuuluu, entity, tangon);
    entity = 0;
    golfie = oscard[entity];
    tangon = argCor;
    entity = undefined;
    option = tangon.bind(entity)(golfie);
    tangon = 1;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.View;
    var _closure1_slot3 = tangon;
    tangon = 2;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.jsx;
    var _closure1_slot4 = tangon;
    tangon = 3;
    tangon = oscard[tangon];
    verify = report.bind(entity)(tangon);
    golfie = verify.createStyles;
    tangon = {};
    offset = {'position': 'relative', 'top': 4294967280, 'marginBottom': 4294967280};
    tangon['container'] = offset;
    offset = {'width': 8, 'height': 8, 'borderRadius': null, 'marginHorizontal': 4};
    yankee = 4;
    foxtra = oscard[yankee];
    foxtra = romeon.bind(entity)(foxtra);
    foxtra = foxtra.radii;
    foxtra = foxtra.xs;
    offset['borderRadius'] = foxtra;
    yankee = oscard[yankee];
    yankee = romeon.bind(entity)(yankee);
    yankee = yankee.colors;
    yankee = yankee.BACKGROUND_TERTIARY;
    offset['backgroundColor'] = yankee;
    tangon['dot'] = offset;
    tangon = golfie.bind(verify)(tangon);
    var _closure1_slot5 = tangon;
    tangon = {};
    golfie = "function CarouselPaginationTsx1(){const{withTiming,active,STANDARD_EASING}=this.__closure;return withTiming(active?1:0,{duration:250,easing:STANDARD_EASING},'animate-always');}";
    tangon['code'] = golfie;
    var _closure1_slot6 = tangon;
    tangon = {};
    golfie = 'function CarouselPaginationTsx2(){const{interpolate,progress,interpolateColor,backgroundColor,brand500}=this.__closure;return{width:interpolate(progress.get(),[0,1],[8,16]),backgroundColor:interpolateColor(progress.get(),[0,1],[backgroundColor,brand500])};}';
    tangon['code'] = golfie;
    var _closure1_slot7 = tangon;
    golfie = option.memo;
    tangon = function(argFoo) {
        entity = argFoo;
        yankee = entity.active;
        var _closure2_slot0 = yankee;
        entity = _closure1_slot5;
        tangon = undefined;
        report = entity.bind(tangon)();
        backup = _closure1_slot0;
        golfie = _closure1_slot2;
        entity = 5;
        michal = golfie[entity];
        verify = backup.bind(tangon)(michal);
        option = verify.useDerivedValue;
        michal = function() { // Original name: o
            _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
                zuuluu = _closure1_slot0;
                tangon = _closure1_slot2;
                michal = 6;
                michal = tangon[michal];
                golfie = undefined;
                report = zuuluu.bind(golfie)(michal);
                tangon = report.withTiming;
                michal = _closure2_slot0;
                zuuluu = 0;
                if(!michal) { _fun00002_ip = 45; continue _fun00001 }
 42:
                zuuluu = 1;
 45:
                michal = {};
                oscard = 250;
                michal['duration'] = oscard;
                oscard = _closure1_slot0;
                option = _closure1_slot2;
                entity = 7;
                entity = option[entity];
                entity = oscard.bind(golfie)(entity);
                entity = entity.STANDARD_EASING;
                michal['easing'] = entity;
                entity = 'animate-always';
                entity = tangon.bind(report)(zuuluu, michal, entity);
                return entity;
            }
        };
        offset = {};
        romeon = 6;
        romeon = golfie[romeon];
        romeon = backup.bind(tangon)(romeon);
        romeon = romeon.withTiming;
        offset['withTiming'] = romeon;
        offset['active'] = yankee;
        yankee = 7;
        yankee = golfie[yankee];
        yankee = backup.bind(tangon)(yankee);
        yankee = yankee.STANDARD_EASING;
        offset['STANDARD_EASING'] = yankee;
        michal['__closure'] = offset;
        offset = 5885711729227.0;
        michal['__workletHash'] = offset;
        offset = _closure1_slot6;
        michal['__initData'] = offset;
        foxtra = option.bind(verify)(michal);
        var _closure2_slot1 = foxtra;
        michal = _closure1_slot1;
        option = 4;
        option = golfie[option];
        option = michal.bind(tangon)(option);
        option = option.unsafe_rawColors;
        yankee = option.BRAND_500;
        var _closure2_slot2 = yankee;
        option = report.dot;
        romeon = option.backgroundColor;
        var _closure2_slot3 = romeon;
        option = golfie[entity];
        verify = backup.bind(tangon)(option);
        option = verify.useAnimatedStyle;
        oscard = function() { // Original name: c
            entity = {};
            oscard = _closure1_slot0;
            golfie = _closure1_slot2;
            zuuluu = 5;
            michal = golfie[zuuluu];
            report = undefined;
            romeon = oscard.bind(report)(michal);
            yankee = romeon.interpolate;
            tangon = _closure2_slot1;
            option = tangon.get;
            offset = option.bind(tangon)();
            verify = [0, 1];
            option = [8, 16];
            option = yankee.bind(romeon)(offset, verify, option);
            entity['width'] = option;
            zuuluu = golfie[zuuluu];
            oscard = oscard.bind(report)(zuuluu);
            report = oscard.interpolateColor;
            zuuluu = tangon.get;
            tangon = zuuluu.bind(tangon)();
            golfie = _closure2_slot3;
            zuuluu = new Array(2);
            zuuluu[0] = golfie;
            michal = _closure2_slot2;
            zuuluu[1] = michal;
            michal = [0, 1];
            michal = report.bind(oscard)(tangon, michal, zuuluu);
            entity['backgroundColor'] = michal;
            return entity;
        };
        offset = {};
        kiloes = golfie[entity];
        kiloes = backup.bind(tangon)(kiloes);
        kiloes = kiloes.interpolate;
        offset['interpolate'] = kiloes;
        offset['progress'] = foxtra;
        foxtra = golfie[entity];
        foxtra = backup.bind(tangon)(foxtra);
        foxtra = foxtra.interpolateColor;
        offset['interpolateColor'] = foxtra;
        offset['backgroundColor'] = romeon;
        offset['brand500'] = yankee;
        oscard['__closure'] = offset;
        offset = 8617913805315.0;
        oscard['__workletHash'] = offset;
        offset = _closure1_slot7;
        oscard['__initData'] = offset;
        oscard = option.bind(verify)(oscard);
        zuuluu = _closure1_slot4;
        entity = golfie[entity];
        entity = michal.bind(tangon)(entity);
        michal = entity.View;
        entity = {};
        golfie = report.dot;
        report = new Array(2);
        report[0] = golfie;
        report[1] = oscard;
        entity['style'] = report;
        entity = zuuluu.bind(tangon)(michal, entity);
        return entity;
    };
    tangon = golfie.bind(option)(tangon);
    var _closure1_slot8 = tangon;
    tangon = 9;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'uikit-native/CarouselPagination.tsx';
    tangon = report.bind(oscard)(tangon);
    michal = function(argFoo) { // Original name: CarouselPagination
        entity = argFoo;
        option = entity.numberOfItems;
        golfie = entity.currentIndex;
        offset = entity.containerStyle;
        entity = _closure1_slot5;
        tangon = undefined;
        oscard = entity.bind(tangon)();
        zuuluu = _closure1_slot4;
        michal = _closure1_slot8;
        entity = {};
        verify = zuuluu.bind(tangon)(michal, entity);
        michal = _closure1_slot3;
        entity = {};
        yankee = oscard.container;
        oscard = new Array(2);
        oscard[0] = yankee;
        oscard[1] = offset;
        entity['style'] = oscard;
        oscard = _closure1_slot0;
        offset = _closure1_slot2;
        report = 8;
        report = offset[report];
        report = oscard.bind(tangon)(report);
        oscard = report.Pagination;
        report = {};
        report['dotElement'] = verify;
        report['inactiveDotElement'] = verify;
        report['dotsLength'] = option;
        report['activeDotIndex'] = golfie;
        report = zuuluu.bind(tangon)(oscard, report);
        entity['children'] = report;
        entity = zuuluu.bind(tangon)(michal, entity);
        return entity;
    };
    zuuluu['default'] = michal;
    return entity;
})();