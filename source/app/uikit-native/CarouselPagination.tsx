// app/uikit-native/CarouselPagination.tsx
export default (function(argFoo, argBar, argBaz, argCorge, _, argFred, argPlugh) {
    report = argBar;
    romeo = argBaz;
    zulu = argFred;
    oscar = argPlugh;
    var _closure1_slot0 = report;
    var _closure1_slot1 = romeo;
    var _closure1_slot2 = oscar;
    entity = global;
    options = entity.Object;
    golf = options.defineProperty;
    tango = {};
    entity = true;
    tango['value'] = entity;
    entity = '__esModule';
    entity = golf.bind(options)(zulu, entity, tango);
    entity = 0;
    golf = oscar[entity];
    tango = argCorge;
    entity = undefined;
    options = tango.bind(entity)(golf);
    tango = 1;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.View;
    var _closure1_slot3 = tango;
    tango = 2;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.jsx;
    var _closure1_slot4 = tango;
    tango = 3;
    tango = oscar[tango];
    verify = report.bind(entity)(tango);
    golf = verify.createStyles;
    tango = {};
    offset = {'position': 'relative', 'top': 4294967280, 'marginBottom': 4294967280};
    tango['container'] = offset;
    offset = {'width': 8, 'height': 8, 'borderRadius': null, 'marginHorizontal': 4};
    yankee = 4;
    foxtrot = oscar[yankee];
    foxtrot = romeo.bind(entity)(foxtrot);
    foxtrot = foxtrot.radii;
    foxtrot = foxtrot.xs;
    offset['borderRadius'] = foxtrot;
    yankee = oscar[yankee];
    yankee = romeo.bind(entity)(yankee);
    yankee = yankee.colors;
    yankee = yankee.BACKGROUND_TERTIARY;
    offset['backgroundColor'] = yankee;
    tango['dot'] = offset;
    tango = golf.bind(verify)(tango);
    var _closure1_slot5 = tango;
    tango = {};
    golf = "function CarouselPaginationTsx1(){const{withTiming,active,STANDARD_EASING}=this.__closure;return withTiming(active?1:0,{duration:250,easing:STANDARD_EASING},'animate-always');}";
    tango['code'] = golf;
    var _closure1_slot6 = tango;
    tango = {};
    golf = 'function CarouselPaginationTsx2(){const{interpolate,progress,interpolateColor,backgroundColor,brand500}=this.__closure;return{width:interpolate(progress.get(),[0,1],[8,16]),backgroundColor:interpolateColor(progress.get(),[0,1],[backgroundColor,brand500])};}';
    tango['code'] = golf;
    var _closure1_slot7 = tango;
    golf = options.memo;
    tango = function(argFoo) {
        entity = argFoo;
        yankee = entity.active;
        var _closure2_slot0 = yankee;
        entity = _closure1_slot5;
        tango = undefined;
        report = entity.bind(tango)();
        backup = _closure1_slot0;
        golf = _closure1_slot2;
        entity = 5;
        mike = golf[entity];
        verify = backup.bind(tango)(mike);
        options = verify.useDerivedValue;
        mike = function() { // Original name: o
            _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
                zulu = _closure1_slot0;
                tango = _closure1_slot2;
                mike = 6;
                mike = tango[mike];
                golf = undefined;
                report = zulu.bind(golf)(mike);
                tango = report.withTiming;
                mike = _closure2_slot0;
                zulu = 0;
                if(!mike) { _fun00002_ip = 45; continue _fun00001 }
 42:
                zulu = 1;
 45:
                mike = {};
                oscar = 250;
                mike['duration'] = oscar;
                oscar = _closure1_slot0;
                options = _closure1_slot2;
                entity = 7;
                entity = options[entity];
                entity = oscar.bind(golf)(entity);
                entity = entity.STANDARD_EASING;
                mike['easing'] = entity;
                entity = 'animate-always';
                entity = tango.bind(report)(zulu, mike, entity);
                return entity;
            }
        };
        offset = {};
        romeo = 6;
        romeo = golf[romeo];
        romeo = backup.bind(tango)(romeo);
        romeo = romeo.withTiming;
        offset['withTiming'] = romeo;
        offset['active'] = yankee;
        yankee = 7;
        yankee = golf[yankee];
        yankee = backup.bind(tango)(yankee);
        yankee = yankee.STANDARD_EASING;
        offset['STANDARD_EASING'] = yankee;
        mike['__closure'] = offset;
        offset = 5885711729227.0;
        mike['__workletHash'] = offset;
        offset = _closure1_slot6;
        mike['__initData'] = offset;
        foxtrot = options.bind(verify)(mike);
        var _closure2_slot1 = foxtrot;
        mike = _closure1_slot1;
        options = 4;
        options = golf[options];
        options = mike.bind(tango)(options);
        options = options.unsafe_rawColors;
        yankee = options.BRAND_500;
        var _closure2_slot2 = yankee;
        options = report.dot;
        romeo = options.backgroundColor;
        var _closure2_slot3 = romeo;
        options = golf[entity];
        verify = backup.bind(tango)(options);
        options = verify.useAnimatedStyle;
        oscar = function() { // Original name: c
            entity = {};
            oscar = _closure1_slot0;
            golf = _closure1_slot2;
            zulu = 5;
            mike = golf[zulu];
            report = undefined;
            romeo = oscar.bind(report)(mike);
            yankee = romeo.interpolate;
            tango = _closure2_slot1;
            options = tango.get;
            offset = options.bind(tango)();
            verify = [0, 1];
            options = [8, 16];
            options = yankee.bind(romeo)(offset, verify, options);
            entity['width'] = options;
            zulu = golf[zulu];
            oscar = oscar.bind(report)(zulu);
            report = oscar.interpolateColor;
            zulu = tango.get;
            tango = zulu.bind(tango)();
            golf = _closure2_slot3;
            zulu = new Array(2);
            zulu[0] = golf;
            mike = _closure2_slot2;
            zulu[1] = mike;
            mike = [0, 1];
            mike = report.bind(oscar)(tango, mike, zulu);
            entity['backgroundColor'] = mike;
            return entity;
        };
        offset = {};
        kilo = golf[entity];
        kilo = backup.bind(tango)(kilo);
        kilo = kilo.interpolate;
        offset['interpolate'] = kilo;
        offset['progress'] = foxtrot;
        foxtrot = golf[entity];
        foxtrot = backup.bind(tango)(foxtrot);
        foxtrot = foxtrot.interpolateColor;
        offset['interpolateColor'] = foxtrot;
        offset['backgroundColor'] = romeo;
        offset['brand500'] = yankee;
        oscar['__closure'] = offset;
        offset = 8617913805315.0;
        oscar['__workletHash'] = offset;
        offset = _closure1_slot7;
        oscar['__initData'] = offset;
        oscar = options.bind(verify)(oscar);
        zulu = _closure1_slot4;
        entity = golf[entity];
        entity = mike.bind(tango)(entity);
        mike = entity.View;
        entity = {};
        golf = report.dot;
        report = new Array(2);
        report[0] = golf;
        report[1] = oscar;
        entity['style'] = report;
        entity = zulu.bind(tango)(mike, entity);
        return entity;
    };
    tango = golf.bind(options)(tango);
    var _closure1_slot8 = tango;
    tango = 9;
    tango = oscar[tango];
    oscar = report.bind(entity)(tango);
    report = oscar.fileFinishedImporting;
    tango = 'uikit-native/CarouselPagination.tsx';
    tango = report.bind(oscar)(tango);
    mike = function(argFoo) { // Original name: CarouselPagination
        entity = argFoo;
        options = entity.numberOfItems;
        golf = entity.currentIndex;
        offset = entity.containerStyle;
        entity = _closure1_slot5;
        tango = undefined;
        oscar = entity.bind(tango)();
        zulu = _closure1_slot4;
        mike = _closure1_slot8;
        entity = {};
        verify = zulu.bind(tango)(mike, entity);
        mike = _closure1_slot3;
        entity = {};
        yankee = oscar.container;
        oscar = new Array(2);
        oscar[0] = yankee;
        oscar[1] = offset;
        entity['style'] = oscar;
        oscar = _closure1_slot0;
        offset = _closure1_slot2;
        report = 8;
        report = offset[report];
        report = oscar.bind(tango)(report);
        oscar = report.Pagination;
        report = {};
        report['dotElement'] = verify;
        report['inactiveDotElement'] = verify;
        report['dotsLength'] = options;
        report['activeDotIndex'] = golf;
        report = zulu.bind(tango)(oscar, report);
        entity['children'] = report;
        entity = zulu.bind(tango)(mike, entity);
        return entity;
    };
    zulu['default'] = mike;
    return entity;
})();