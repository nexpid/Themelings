// app/uikit-native/color_picker/HuePicker.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    report = argBar;
    yankee = argBaz;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    var _closure1_slot1 = yankee;
    var _closure1_slot2 = oscard;
    entity = global;
    option = entity.Object;
    golfie = option.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(option)(zuuluu, entity, tangon);
    entity = 0;
    golfie = oscard[entity];
    tangon = argCor;
    entity = undefined;
    tangon = tangon.bind(entity)(golfie);
    var _closure1_slot3 = tangon;
    tangon = 1;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.View;
    var _closure1_slot4 = tangon;
    tangon = 2;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    golfie = tangon.jsx;
    var _closure1_slot5 = golfie;
    tangon = tangon.jsxs;
    var _closure1_slot6 = tangon;
    tangon = ['#ff0000', '#ffff00', '#00ff00', '#00ffff', '#0000ff', '#ff00ff', '#ff0000'];
    var _closure1_slot7 = tangon;
    tangon = 3;
    tangon = oscard[tangon];
    option = report.bind(entity)(tangon);
    golfie = option.createStyles;
    tangon = {};
    verify = {'justifyContent': 'center', 'alignItems': 'center'};
    tangon['container'] = verify;
    verify = {'left': 0, 'position': 'absolute', 'borderColor': null, 'width': 24, 'height': 36, 'borderRadius': null, 'borderWidth': 2};
    offset = 4;
    romeon = oscard[offset];
    romeon = yankee.bind(entity)(romeon);
    romeon = romeon.colors;
    romeon = romeon.HEADER_PRIMARY;
    verify['borderColor'] = romeon;
    romeon = oscard[offset];
    romeon = yankee.bind(entity)(romeon);
    romeon = romeon.radii;
    romeon = romeon.sm;
    verify['borderRadius'] = romeon;
    tangon['slider'] = verify;
    verify = {};
    offset = oscard[offset];
    offset = yankee.bind(entity)(offset);
    offset = offset.radii;
    offset = offset.xs;
    verify['borderRadius'] = offset;
    tangon['colorBar'] = verify;
    verify = {'minWidth': 240, 'height': 32};
    tangon['colorBarInner'] = verify;
    tangon = golfie.bind(option)(tangon);
    var _closure1_slot8 = tangon;
    tangon = {};
    golfie = 'function HuePickerTsx1({x:x}){const{hue,normalizeValue,barWidth}=this.__closure;hue.set(normalizeValue(x/barWidth.get())*360);}';
    tangon['code'] = golfie;
    var _closure1_slot9 = tangon;
    tangon = {};
    golfie = 'function HuePickerTsx2(){const{onPanFinalize,runOnJS}=this.__closure;onPanFinalize!=null&&runOnJS(onPanFinalize)();}';
    tangon['code'] = golfie;
    var _closure1_slot10 = tangon;
    tangon = {};
    golfie = 'function HuePickerTsx3(){const{hslToRgbWorklet,hue,barWidth}=this.__closure;const rgb=hslToRgbWorklet({h:hue.get(),s:1,l:0.5});return{backgroundColor:"rgb("+rgb[0]+", "+rgb[1]+", "+rgb[2]+")",transform:[{translateX:barWidth.get()*hue.get()/360}]};}';
    tangon['code'] = golfie;
    var _closure1_slot11 = tangon;
    tangon = {};
    golfie = 'function HuePickerTsx4(){const{sliderHeight,barHeight,sliderWidth}=this.__closure;const paddingTop=sliderHeight.get()-barHeight.get()>0?(sliderHeight.get()-barHeight.get())/2:0;const paddingLeft=sliderWidth.get()/2;return{paddingTop:paddingTop,paddingBottom:paddingTop,paddingLeft:paddingLeft,paddingRight:paddingLeft};}';
    tangon['code'] = golfie;
    var _closure1_slot12 = tangon;
    tangon = 9;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'uikit-native/color_picker/HuePicker.tsx';
    tangon = report.bind(oscard)(tangon);
    michal = function(argFoo) { // Original name: HuePicker
        michal = argFoo;
        output = michal.hue;
        var _closure2_slot0 = output;
        report = michal.onPanFinalize;
        michal = _closure1_slot8;
        tangon = undefined;
        verify = michal.bind(tangon)();
        foxtra = _closure1_slot0;
        romeon = _closure1_slot2;
        oscard = 7;
        michal = romeon[oscard];
        zuuluu = foxtra.bind(tangon)(michal);
        michal = zuuluu.useSharedValue;
        offset = 0;
        golfie = michal.bind(zuuluu)(offset);
        var _closure2_slot1 = golfie;
        michal = romeon[oscard];
        zuuluu = foxtra.bind(tangon)(michal);
        michal = zuuluu.useSharedValue;
        kiloes = michal.bind(zuuluu)(offset);
        var _closure2_slot2 = kiloes;
        michal = romeon[oscard];
        zuuluu = foxtra.bind(tangon)(michal);
        michal = zuuluu.useSharedValue;
        option = michal.bind(zuuluu)(offset);
        var _closure2_slot3 = option;
        michal = romeon[oscard];
        zuuluu = foxtra.bind(tangon)(michal);
        michal = zuuluu.useSharedValue;
        michal = michal.bind(zuuluu)(offset);
        var _closure2_slot4 = michal;
        zuuluu = function(argFoo, argBar, argBaz) { // Original name: useHuePickerGesture
            option = argFoo;
            golfie = argBar;
            oscard = argBaz;
            var _closure3_slot0 = option;
            var _closure3_slot1 = golfie;
            var _closure3_slot2 = oscard;
            entity = {};
            report = _closure1_slot3;
            tangon = report.useMemo;
            zuuluu = new Array(3);
            zuuluu[0] = option;
            zuuluu[1] = golfie;
            zuuluu[2] = oscard;
            michal = function() {
                report = function(argFoo) { // Original name: t
                    entity = argFoo;
                    golfie = entity.x;
                    tangon = _closure3_slot0;
                    zuuluu = tangon.set;
                    oscard = _closure1_slot0;
                    report = _closure1_slot2;
                    entity = 5;
                    report = report[entity];
                    entity = undefined;
                    oscard = oscard.bind(entity)(report);
                    report = oscard.normalizeValue;
                    option = _closure3_slot1;
                    michal = option.get;
                    michal = michal.bind(option)();
                    michal = golfie / michal;
                    report = report.bind(oscard)(michal);
                    michal = 360;
                    michal = michal * report;
                    michal = zuuluu.bind(tangon)(michal);
                    return entity;
                };
                michal = {};
                zuuluu = _closure3_slot0;
                michal['hue'] = zuuluu;
                option = _closure1_slot0;
                verify = _closure1_slot2;
                zuuluu = 5;
                zuuluu = verify[zuuluu];
                golfie = undefined;
                zuuluu = option.bind(golfie)(zuuluu);
                zuuluu = zuuluu.normalizeValue;
                michal['normalizeValue'] = zuuluu;
                zuuluu = _closure3_slot1;
                michal['barWidth'] = zuuluu;
                report['__closure'] = michal;
                michal = 7671468234964.0;
                report['__workletHash'] = michal;
                michal = _closure1_slot9;
                report['__initData'] = michal;
                michal = 6;
                michal = verify[michal];
                michal = option.bind(golfie)(michal);
                zuuluu = michal.Gesture;
                michal = zuuluu.Pan;
                zuuluu = michal.bind(zuuluu)();
                michal = zuuluu.onBegin;
                zuuluu = michal.bind(zuuluu)(report);
                michal = zuuluu.onUpdate;
                zuuluu = michal.bind(zuuluu)(report);
                michal = zuuluu.onFinalize;
                entity = function() { // Original name: l
                    _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
                        zuuluu = _closure3_slot2;
                        michal = null;
                        if(!(michal != zuuluu)) { _fun00002_ip = 56; continue _fun00001 }
 13:
                        tangon = _closure1_slot0;
                        zuuluu = _closure1_slot2;
                        michal = 7;
                        zuuluu = zuuluu[michal];
                        michal = undefined;
                        tangon = tangon.bind(michal)(zuuluu);
                        zuuluu = tangon.runOnJS;
                        entity = _closure3_slot2;
                        entity = zuuluu.bind(tangon)(entity);
                        entity = entity.bind(michal)();
 56:
                        entity = undefined;
                        return entity;
                    }
                };
                report = {};
                oscard = _closure3_slot2;
                report['onPanFinalize'] = oscard;
                oscard = 7;
                oscard = verify[oscard];
                oscard = option.bind(golfie)(oscard);
                oscard = oscard.runOnJS;
                report['runOnJS'] = oscard;
                entity['__closure'] = report;
                report = 182773971449.0;
                entity['__workletHash'] = report;
                tangon = _closure1_slot10;
                entity['__initData'] = tangon;
                entity = michal.bind(zuuluu)(entity);
                return entity;
            };
            michal = tangon.bind(report)(michal, zuuluu);
            entity['gesture'] = michal;
            return entity;
        };
        zuuluu = zuuluu.bind(tangon)(output, michal, report);
        backup = zuuluu.gesture;
        zuuluu = romeon[oscard];
        offset = foxtra.bind(tangon)(zuuluu);
        report = offset.useAnimatedStyle;
        zuuluu = function() { // Original name: k
            zuuluu = _closure1_slot0;
            michal = _closure1_slot2;
            entity = 5;
            michal = michal[entity];
            entity = undefined;
            oscard = zuuluu.bind(entity)(michal);
            tangon = oscard.hslToRgbWorklet;
            entity = {'h': null, 's': 1, 'l': 0.5};
            report = _closure2_slot0;
            zuuluu = report.get;
            zuuluu = zuuluu.bind(report)();
            entity['h'] = zuuluu;
            zuuluu = 1;
            tangon = tangon.bind(oscard)(entity);
            entity = {};
            oscard = 0;
            sizing = tangon[oscard];
            backup = tangon[zuuluu];
            zuuluu = 2;
            romeon = tangon[zuuluu];
            zuuluu = global;
            zuuluu = zuuluu.HermesInternal;
            golfie = zuuluu.concat;
            output = 'rgb(';
            tangon = ', ';
            yankee = ')';
            kiloes = tangon;
            foxtra = tangon;
            zuuluu = output[golfie](sizing, kiloes, backup, foxtra, romeon, yankee, offset);
            entity['backgroundColor'] = zuuluu;
            zuuluu = {};
            tangon = _closure2_slot4;
            michal = tangon.get;
            tangon = michal.bind(tangon)();
            michal = report.get;
            michal = michal.bind(report)();
            tangon = tangon * michal;
            michal = 360;
            michal = tangon / michal;
            zuuluu['translateX'] = michal;
            michal = new Array(1);
            michal[0] = zuuluu;
            entity['transform'] = michal;
            return entity;
        };
        yankee = {};
        result = 5;
        result = romeon[result];
        result = foxtra.bind(tangon)(result);
        result = result.hslToRgbWorklet;
        yankee['hslToRgbWorklet'] = result;
        yankee['hue'] = output;
        yankee['barWidth'] = michal;
        zuuluu['__closure'] = yankee;
        yankee = 774575483053.0;
        zuuluu['__workletHash'] = yankee;
        yankee = _closure1_slot11;
        zuuluu['__initData'] = yankee;
        offset = report.bind(offset)(zuuluu);
        output = _closure1_slot3;
        yankee = output.useCallback;
        report = new Array(2);
        report[0] = kiloes;
        report[1] = golfie;
        zuuluu = function(argFoo) {
            entity = argFoo;
            entity = entity.nativeEvent;
            entity = entity.layout;
            report = entity.height;
            zuuluu = entity.width;
            tangon = _closure2_slot2;
            michal = tangon.set;
            michal = michal.bind(tangon)(report);
            michal = _closure2_slot1;
            entity = michal.set;
            entity = entity.bind(michal)(zuuluu);
            entity = undefined;
            return entity;
        };
        yankee = yankee.bind(output)(zuuluu, report);
        report = output.useCallback;
        zuuluu = new Array(2);
        zuuluu[0] = option;
        zuuluu[1] = michal;
        michal = function(argFoo) {
            entity = argFoo;
            entity = entity.nativeEvent;
            entity = entity.layout;
            report = entity.height;
            zuuluu = entity.width;
            tangon = _closure2_slot3;
            michal = tangon.set;
            michal = michal.bind(tangon)(report);
            michal = _closure2_slot4;
            entity = michal.set;
            entity = entity.bind(michal)(zuuluu);
            entity = undefined;
            return entity;
        };
        result = report.bind(output)(michal, zuuluu);
        michal = romeon[oscard];
        zuuluu = foxtra.bind(tangon)(michal);
        michal = zuuluu.useAnimatedStyle;
        entity = function() { // Original name: H
            _fun00003: for(var _fun00004_ip = 0; ; ) switch(_fun00004_ip) {
 0:
                zuuluu = _closure2_slot2;
                michal = zuuluu.get;
                zuuluu = michal.bind(zuuluu)();
                tangon = _closure2_slot3;
                michal = tangon.get;
                michal = michal.bind(tangon)();
                michal = zuuluu - michal;
                zuuluu = 0;
                if(!(michal > zuuluu)) { _fun00004_ip = 76; continue _fun00003 }
 39:
                tangon = _closure2_slot2;
                michal = tangon.get;
                tangon = michal.bind(tangon)();
                report = _closure2_slot3;
                michal = report.get;
                michal = michal.bind(report)();
                tangon = tangon - michal;
                michal = 2;
                zuuluu = tangon / michal;
 76:
                michal = _closure2_slot1;
                entity = michal.get;
                michal = entity.bind(michal)();
                entity = 2;
                michal = michal / entity;
                entity = {};
                entity['paddingTop'] = zuuluu;
                entity['paddingBottom'] = zuuluu;
                entity['paddingLeft'] = michal;
                entity['paddingRight'] = michal;
                return entity;
            }
        };
        report = {};
        report['sliderHeight'] = kiloes;
        report['barHeight'] = option;
        report['sliderWidth'] = golfie;
        entity['__closure'] = report;
        report = 5225548665736.0;
        entity['__workletHash'] = report;
        report = _closure1_slot12;
        entity['__initData'] = report;
        option = michal.bind(zuuluu)(entity);
        zuuluu = _closure1_slot6;
        golfie = _closure1_slot1;
        entity = romeon[oscard];
        entity = golfie.bind(tangon)(entity);
        michal = entity.View;
        entity = {};
        kiloes = verify.container;
        report = new Array(2);
        report[0] = kiloes;
        report[1] = option;
        entity['style'] = report;
        option = _closure1_slot5;
        report = 6;
        report = romeon[report];
        report = foxtra.bind(tangon)(report);
        foxtra = report.GestureDetector;
        report = {};
        report['gesture'] = backup;
        backup = 8;
        backup = romeon[backup];
        kiloes = golfie.bind(tangon)(backup);
        backup = {};
        output = _closure1_slot7;
        backup['colors'] = output;
        output = {'x': 0, 'y': 0.5};
        backup['start'] = output;
        output = {'x': 1, 'y': 0.5};
        backup['end'] = output;
        output = verify.colorBar;
        backup['style'] = output;
        output = _closure1_slot4;
        sizing = {};
        sizing['onLayout'] = result;
        result = verify.colorBarInner;
        sizing['style'] = result;
        sizing = option.bind(tangon)(output, sizing);
        backup['children'] = sizing;
        backup = option.bind(tangon)(kiloes, backup);
        report['children'] = backup;
        foxtra = option.bind(tangon)(foxtra, report);
        report = new Array(2);
        report[0] = foxtra;
        oscard = romeon[oscard];
        oscard = golfie.bind(tangon)(oscard);
        golfie = oscard.View;
        oscard = {};
        oscard['onLayout'] = yankee;
        yankee = 'box-none';
        oscard['pointerEvents'] = yankee;
        yankee = verify.slider;
        verify = new Array(2);
        verify[0] = yankee;
        verify[1] = offset;
        oscard['style'] = verify;
        oscard = option.bind(tangon)(golfie, oscard);
        report[1] = oscard;
        entity['children'] = report;
        entity = zuuluu.bind(tangon)(michal, entity);
        return entity;
    };
    zuuluu['default'] = michal;
    return entity;
})();