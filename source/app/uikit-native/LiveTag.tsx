// app/uikit-native/LiveTag.tsx
export default (function(argFoo, argBar, argBaz, argCorge, _, argFred, argPlugh) {
    _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
        report = argBar;
        romeo = argBaz;
        zulu = argFred;
        oscar = argPlugh;
        var _closure1_slot0 = report;
        var _closure1_slot1 = oscar;
        entity = global;
        options = entity.Object;
        golf = options.defineProperty;
        tango = {};
        entity = true;
        tango['value'] = entity;
        entity = '__esModule';
        entity = golf.bind(options)(zulu, entity, tango);
        offset = 0;
        golf = oscar[offset];
        tango = argCorge;
        entity = undefined;
        tango = tango.bind(entity)(golf);
        tango = 1;
        tango = oscar[tango];
        tango = report.bind(entity)(tango);
        options = tango.StyleSheet;
        tango = tango.View;
        var _closure1_slot2 = tango;
        tango = 2;
        tango = oscar[tango];
        tango = report.bind(entity)(tango);
        tango = tango.jsx;
        var _closure1_slot3 = tango;
        golf = options.create;
        tango = {};
        verify = {'paddingHorizontal': 6, 'paddingVertical': 2, 'borderRadius': null, 'overflow': 'hidden', 'justifyContent': 'center', 'alignItems': 'center'};
        yankee = 3;
        foxtrot = oscar[yankee];
        foxtrot = romeo.bind(entity)(foxtrot);
        foxtrot = foxtrot.radii;
        foxtrot = foxtrot.round;
        verify['borderRadius'] = foxtrot;
        foxtrot = 'center';
        backup = oscar[yankee];
        backup = romeo.bind(entity)(backup);
        backup = backup.unsafe_rawColors;
        backup = backup.RED_400;
        verify['backgroundColor'] = backup;
        tango['tag'] = verify;
        verify = {};
        verify['textAlign'] = foxtrot;
        yankee = oscar[yankee];
        yankee = romeo.bind(entity)(yankee);
        yankee = yankee.unsafe_rawColors;
        yankee = yankee.WHITE_500;
        verify['color'] = yankee;
        yankee = 4;
        yankee = oscar[yankee];
        romeo = report.bind(entity)(yankee);
        yankee = romeo.isAndroid;
        yankee = yankee.bind(romeo)();
        if(!yankee) { _fun00002_ip = 259; continue _fun00001 }
 253:
        offset = -2;
 259:
        verify['marginTop'] = offset;
        tango['tagText'] = verify;
        tango = golf.bind(options)(tango);
        var _closure1_slot4 = tango;
        tango = 7;
        tango = oscar[tango];
        oscar = report.bind(entity)(tango);
        report = oscar.fileFinishedImporting;
        tango = 'uikit-native/LiveTag.tsx';
        tango = report.bind(oscar)(tango);
        mike = function(argFoo) { // Original name: LiveTag
            entity = argFoo;
            report = entity.style;
            verify = entity.textStyle;
            golf = entity.allowFontScaling;
            tango = _closure1_slot3;
            zulu = _closure1_slot2;
            mike = {};
            entity = _closure1_slot4;
            oscar = entity.tag;
            entity = new Array(2);
            entity[0] = oscar;
            entity[1] = report;
            mike['style'] = entity;
            offset = _closure1_slot0;
            yankee = _closure1_slot1;
            entity = 5;
            report = yankee[entity];
            entity = undefined;
            report = offset.bind(entity)(report);
            oscar = report.Text;
            report = {'variant': 'text-xs/bold', 'style': null, 'lineClamp': 1};
            options = _closure1_slot4;
            romeo = options.tagText;
            options = new Array(2);
            options[0] = romeo;
            options[1] = verify;
            report['style'] = options;
            report['allowFontScaling'] = golf;
            golf = 6;
            options = yankee[golf];
            options = offset.bind(entity)(options);
            verify = options.intl;
            options = verify.string;
            golf = yankee[golf];
            golf = offset.bind(entity)(golf);
            golf = golf.t;
            golf = golf.dI3q4u;
            options = options.bind(verify)(golf);
            golf = options.toUpperCase;
            golf = golf.bind(options)();
            report['children'] = golf;
            report = tango.bind(entity)(oscar, report);
            mike['children'] = report;
            entity = tango.bind(entity)(zulu, mike);
            return entity;
        };
        zulu['default'] = mike;
        return entity;
    }
})();