// app/uikit-native/SummarizedIconRow.tsx
export default (function(argFoo, argBar, argBaz, argCorge, _, argFred, argPlugh) {
    report = argBar;
    yankee = argBaz;
    zulu = argFred;
    oscar = argPlugh;
    var _closure1_slot0 = report;
    var _closure1_slot1 = oscar;
    entity = function(argFoo) { // Original name: OverflowSquircle
        entity = argFoo;
        foxtrot = entity.overflow;
        oscar = entity.style;
        entity = _closure1_slot4;
        tango = undefined;
        verify = entity.bind(tango)();
        zulu = _closure1_slot3;
        mike = _closure1_slot2;
        entity = {};
        golf = verify.overflowSquircleWrap;
        report = new Array(2);
        report[0] = golf;
        report[1] = oscar;
        entity['style'] = report;
        golf = _closure1_slot3;
        oscar = _closure1_slot2;
        report = {};
        verify = verify.overflowSquircle;
        report['style'] = verify;
        offset = _closure1_slot3;
        verify = _closure1_slot0;
        yankee = _closure1_slot1;
        options = 5;
        options = yankee[options];
        options = verify.bind(tango)(options);
        verify = options.Text;
        options = {};
        yankee = 'text-xs/medium';
        options['variant'] = yankee;
        yankee = global;
        yankee = yankee.HermesInternal;
        romeo = yankee.concat;
        yankee = '+';
        yankee = romeo.bind(yankee)(foxtrot);
        options['children'] = yankee;
        options = offset.bind(tango)(verify, options);
        report['children'] = options;
        report = golf.bind(tango)(oscar, report);
        entity['children'] = report;
        entity = zulu.bind(tango)(mike, entity);
        return entity;
    };
    var _closure1_slot5 = entity;
    entity = global;
    options = entity.Object;
    golf = options.defineProperty;
    tango = {};
    entity = true;
    tango['value'] = entity;
    entity = '__esModule';
    entity = golf.bind(options)(zulu, entity, tango);
    entity = 0;
    golf = oscar[entity];
    tango = argCorge;
    entity = undefined;
    tango = tango.bind(entity)(golf);
    tango = 1;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.View;
    var _closure1_slot2 = tango;
    tango = 2;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.jsx;
    var _closure1_slot3 = tango;
    tango = 3;
    tango = oscar[tango];
    options = report.bind(entity)(tango);
    golf = options.createStyles;
    tango = {};
    verify = {'flexDirection': 'row', 'alignItems': 'center'};
    tango['container'] = verify;
    verify = {'alignItems': 'center', 'justifyContent': 'center'};
    tango['iconWrapper'] = verify;
    verify = {};
    offset = 4;
    romeo = oscar[offset];
    romeo = yankee.bind(entity)(romeo);
    romeo = romeo.colors;
    romeo = romeo.BACKGROUND_PRIMARY;
    verify['backgroundColor'] = romeo;
    romeo = oscar[offset];
    romeo = yankee.bind(entity)(romeo);
    romeo = romeo.radii;
    romeo = romeo.md;
    verify['borderRadius'] = romeo;
    tango['overflowSquircleWrap'] = verify;
    verify = {'backgroundColor': null, 'margin': 3, 'paddingHorizontal': 8, 'height': 30, 'alignItems': 'center', 'justifyContent': 'center', 'borderRadius': 10};
    romeo = oscar[offset];
    romeo = yankee.bind(entity)(romeo);
    romeo = romeo.colors;
    romeo = romeo.BACKGROUND_TERTIARY;
    verify['backgroundColor'] = romeo;
    tango['overflowSquircle'] = verify;
    verify = {'margin': 2, 'paddingHorizontal': 8, 'height': 32, 'alignItems': 'center', 'justifyContent': 'center'};
    romeo = oscar[offset];
    romeo = yankee.bind(entity)(romeo);
    romeo = romeo.radii;
    romeo = romeo.lg;
    verify['borderRadius'] = romeo;
    romeo = oscar[offset];
    romeo = yankee.bind(entity)(romeo);
    romeo = romeo.colors;
    romeo = romeo.BACKGROUND_TERTIARY;
    verify['backgroundColor'] = romeo;
    tango['overflowTextOnly'] = verify;
    verify = {};
    romeo = oscar[offset];
    romeo = yankee.bind(entity)(romeo);
    romeo = romeo.colors;
    romeo = romeo.BACKGROUND_PRIMARY;
    verify['backgroundColor'] = romeo;
    romeo = 17;
    verify['borderRadius'] = romeo;
    tango['overflowCircleWrap'] = verify;
    verify = {'backgroundColor': null, 'margin': 2, 'paddingHorizontal': 8, 'height': 30, 'alignItems': 'center', 'justifyContent': 'center', 'borderRadius': 15};
    offset = oscar[offset];
    offset = yankee.bind(entity)(offset);
    offset = offset.colors;
    offset = offset.BACKGROUND_TERTIARY;
    verify['backgroundColor'] = offset;
    tango['overflowCircle'] = verify;
    tango = golf.bind(options)(tango);
    var _closure1_slot4 = tango;
    tango = 6;
    tango = oscar[tango];
    oscar = report.bind(entity)(tango);
    report = oscar.fileFinishedImporting;
    tango = 'uikit-native/SummarizedIconRow.tsx';
    tango = report.bind(oscar)(tango);
    tango = function(argFoo) { // Original name: SummarizedIconRow
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            entity = argFoo;
            golf = entity.items;
            var _closure2_slot0 = golf;
            zulu = entity.max;
            tango = undefined;
            if(!(zulu === tango)) { _fun00002_ip = 29; continue _fun00001 }
 26:
            zulu = 8;
 29:
            var _closure2_slot1 = zulu;
            mike = entity.renderItem;
            var _closure2_slot2 = mike;
            mike = entity.offsetAmount;
            var _closure2_slot3 = mike;
            mike = entity.iconWrapperStyle;
            var _closure2_slot4 = mike;
            mike = entity.overflowStyle;
            var _closure2_slot5 = mike;
            options = entity.style;
            entity = entity.overflowComponent;
            if(!(entity === tango)) { _fun00002_ip = 95; continue _fun00001 }
 88:
            entity = _closure1_slot5;
 95:
            var _closure2_slot6 = entity;
            var _closure2_slot7 = tango;
            var _closure2_slot8 = tango;
            mike = _closure1_slot4;
            oscar = mike.bind(tango)();
            _closure2_slot7 = oscar;
            mike = global;
            offset = mike.Math;
            verify = offset.max;
            mike = golf.length;
            zulu = mike - zulu;
            mike = 0;
            mike = verify.bind(offset)(zulu, mike);
            _closure2_slot8 = mike;
            zulu = _closure1_slot3;
            mike = _closure1_slot2;
            entity = {};
            verify = oscar.container;
            oscar = new Array(2);
            oscar[0] = verify;
            oscar[1] = options;
            entity['style'] = oscar;
            oscar = golf.map;
            report = function(argFoo, argBar) {
                _fun00003: for(var _fun00004_ip = 0; ; ) switch(_fun00004_ip) {
 0:
                    yankee = argFoo;
                    oscar = argBar;
                    entity = _closure2_slot1;
                    if(!(!(oscar >= entity))) { _fun00004_ip = 257; continue _fun00003 }
 20:
                    entity = _closure2_slot1;
                    golf = 1;
                    entity = entity - golf;
                    if(!(oscar === entity)) { _fun00004_ip = 48; continue _fun00003 }
 35:
                    zulu = _closure2_slot8;
                    entity = 0;
                    if(!(!(zulu > entity))) { _fun00004_ip = 189; continue _fun00003 }
 48:
                    entity = global;
                    report = entity.Math;
                    tango = report.min;
                    entity = _closure2_slot0;
                    zulu = entity.length;
                    entity = _closure2_slot1;
                    entity = tango.bind(report)(zulu, entity);
                    verify = entity - golf;
                    entity = null;
                    if(!yankee) { _fun00004_ip = 187; continue _fun00003 }
 89:
                    options = _closure1_slot3;
                    report = _closure1_slot2;
                    tango = {};
                    zulu = _closure2_slot7;
                    offset = zulu.iconWrapper;
                    zulu = new Array(3);
                    zulu[0] = offset;
                    offset = _closure2_slot4;
                    zulu[1] = offset;
                    offset = 0;
                    if(!(offset === oscar)) { _fun00004_ip = 138; continue _fun00003 }
 134:
                    offset = {};
                    _fun00004_ip = 152; continue _fun00003;
 138:
                    romeo = {};
                    foxtrot = _closure2_slot3;
                    romeo['marginLeft'] = foxtrot;
                    offset = romeo;
 152:
                    zulu[2] = offset;
                    tango['style'] = zulu;
                    offset = _closure2_slot2;
                    zulu = undefined;
                    verify = oscar === verify;
                    verify = offset.bind(zulu)(yankee, verify);
                    tango['children'] = verify;
                    entity = options.bind(zulu)(report, tango, oscar);
 187:
                    _fun00004_ip = 255; continue _fun00003;
 189:
                    report = _closure1_slot3;
                    tango = _closure2_slot6;
                    zulu = {};
                    verify = {};
                    options = _closure2_slot3;
                    verify['marginLeft'] = options;
                    options = new Array(2);
                    options[0] = verify;
                    verify = _closure2_slot5;
                    options[1] = verify;
                    zulu['style'] = options;
                    mike = _closure2_slot8;
                    mike = mike + golf;
                    zulu['overflow'] = mike;
                    mike = undefined;
                    entity = report.bind(mike)(tango, zulu, oscar);
 255:
                    return entity;
 257:
                    entity = undefined;
                    return entity;
                }
            };
            report = oscar.bind(golf)(report);
            entity['children'] = report;
            entity = zulu.bind(tango)(mike, entity);
            return entity;
        }
    };
    zulu['default'] = tango;
    tango = function(argFoo) { // Original name: OverflowText
        entity = argFoo;
        offset = entity.overflow;
        golf = entity.style;
        entity = _closure1_slot4;
        tango = undefined;
        oscar = entity.bind(tango)();
        zulu = _closure1_slot3;
        mike = _closure1_slot2;
        entity = {};
        options = oscar.overflowTextOnly;
        oscar = new Array(2);
        oscar[0] = options;
        oscar[1] = golf;
        entity['style'] = oscar;
        golf = _closure1_slot3;
        oscar = _closure1_slot0;
        options = _closure1_slot1;
        report = 5;
        report = options[report];
        report = oscar.bind(tango)(report);
        oscar = report.Text;
        report = {};
        options = 'text-xs/medium';
        report['variant'] = options;
        options = global;
        options = options.HermesInternal;
        verify = options.concat;
        options = '+';
        options = verify.bind(options)(offset);
        report['children'] = options;
        report = golf.bind(tango)(oscar, report);
        entity['children'] = report;
        entity = zulu.bind(tango)(mike, entity);
        return entity;
    };
    zulu['OverflowText'] = tango;
    tango = function(argFoo) { // Original name: OverflowTextSmall
        entity = argFoo;
        offset = entity.overflow;
        golf = entity.style;
        entity = _closure1_slot4;
        tango = undefined;
        oscar = entity.bind(tango)();
        zulu = _closure1_slot3;
        mike = _closure1_slot2;
        entity = {};
        options = oscar.overflowTextOnly;
        oscar = new Array(2);
        oscar[0] = options;
        oscar[1] = golf;
        entity['style'] = oscar;
        golf = _closure1_slot3;
        oscar = _closure1_slot0;
        options = _closure1_slot1;
        report = 5;
        report = options[report];
        report = oscar.bind(tango)(report);
        oscar = report.Text;
        report = {};
        options = 'text-xxs/medium';
        report['variant'] = options;
        options = global;
        options = options.HermesInternal;
        verify = options.concat;
        options = '+';
        options = verify.bind(options)(offset);
        report['children'] = options;
        report = golf.bind(tango)(oscar, report);
        entity['children'] = report;
        entity = zulu.bind(tango)(mike, entity);
        return entity;
    };
    zulu['OverflowTextSmall'] = tango;
    mike = function(argFoo) { // Original name: OverflowCircle
        entity = argFoo;
        foxtrot = entity.overflow;
        oscar = entity.style;
        entity = _closure1_slot4;
        tango = undefined;
        verify = entity.bind(tango)();
        zulu = _closure1_slot3;
        mike = _closure1_slot2;
        entity = {};
        golf = verify.overflowCircleWrap;
        report = new Array(2);
        report[0] = golf;
        report[1] = oscar;
        entity['style'] = report;
        golf = _closure1_slot3;
        oscar = _closure1_slot2;
        report = {};
        verify = verify.overflowCircle;
        report['style'] = verify;
        offset = _closure1_slot3;
        verify = _closure1_slot0;
        yankee = _closure1_slot1;
        options = 5;
        options = yankee[options];
        options = verify.bind(tango)(options);
        verify = options.Text;
        options = {};
        yankee = 'text-xs/medium';
        options['variant'] = yankee;
        yankee = global;
        yankee = yankee.HermesInternal;
        romeo = yankee.concat;
        yankee = '+';
        yankee = romeo.bind(yankee)(foxtrot);
        options['children'] = yankee;
        options = offset.bind(tango)(verify, options);
        report['children'] = options;
        report = golf.bind(tango)(oscar, report);
        entity['children'] = report;
        entity = zulu.bind(tango)(mike, entity);
        return entity;
    };
    zulu['OverflowCircle'] = mike;
    return entity;
})();