// app/uikit-native/SummarizedIconRow.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    report = argBar;
    yankee = argBaz;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    var _closure1_slot1 = oscard;
    entity = function(argFoo) { // Original name: OverflowSquircle
        entity = argFoo;
        foxtra = entity.overflow;
        oscard = entity.style;
        entity = _closure1_slot4;
        tangon = undefined;
        verify = entity.bind(tangon)();
        zuuluu = _closure1_slot3;
        michal = _closure1_slot2;
        entity = {};
        golfie = verify.overflowSquircleWrap;
        report = new Array(2);
        report[0] = golfie;
        report[1] = oscard;
        entity['style'] = report;
        golfie = _closure1_slot3;
        oscard = _closure1_slot2;
        report = {};
        verify = verify.overflowSquircle;
        report['style'] = verify;
        offset = _closure1_slot3;
        verify = _closure1_slot0;
        yankee = _closure1_slot1;
        option = 5;
        option = yankee[option];
        option = verify.bind(tangon)(option);
        verify = option.Text;
        option = {};
        yankee = 'text-xs/medium';
        option['variant'] = yankee;
        yankee = global;
        yankee = yankee.HermesInternal;
        romeon = yankee.concat;
        yankee = '+';
        yankee = romeon.bind(yankee)(foxtra);
        option['children'] = yankee;
        option = offset.bind(tangon)(verify, option);
        report['children'] = option;
        report = golfie.bind(tangon)(oscard, report);
        entity['children'] = report;
        entity = zuuluu.bind(tangon)(michal, entity);
        return entity;
    };
    var _closure1_slot5 = entity;
    entity = global;
    option = entity.Object;
    golfie = option.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(option)(zuuluu, entity, tangon);
    entity = 0;
    golfie = oscard[entity];
    tangon = argCor;
    entity = undefined;
    tangon = tangon.bind(entity)(golfie);
    tangon = 1;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.View;
    var _closure1_slot2 = tangon;
    tangon = 2;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.jsx;
    var _closure1_slot3 = tangon;
    tangon = 3;
    tangon = oscard[tangon];
    option = report.bind(entity)(tangon);
    golfie = option.createStyles;
    tangon = {};
    verify = {'flexDirection': 'row', 'alignItems': 'center'};
    tangon['container'] = verify;
    verify = {'alignItems': 'center', 'justifyContent': 'center'};
    tangon['iconWrapper'] = verify;
    verify = {};
    offset = 4;
    romeon = oscard[offset];
    romeon = yankee.bind(entity)(romeon);
    romeon = romeon.colors;
    romeon = romeon.BACKGROUND_PRIMARY;
    verify['backgroundColor'] = romeon;
    romeon = oscard[offset];
    romeon = yankee.bind(entity)(romeon);
    romeon = romeon.radii;
    romeon = romeon.md;
    verify['borderRadius'] = romeon;
    tangon['overflowSquircleWrap'] = verify;
    verify = {'backgroundColor': null, 'margin': 3, 'paddingHorizontal': 8, 'height': 30, 'alignItems': 'center', 'justifyContent': 'center', 'borderRadius': 10};
    romeon = oscard[offset];
    romeon = yankee.bind(entity)(romeon);
    romeon = romeon.colors;
    romeon = romeon.BACKGROUND_TERTIARY;
    verify['backgroundColor'] = romeon;
    tangon['overflowSquircle'] = verify;
    verify = {'margin': 2, 'paddingHorizontal': 8, 'height': 32, 'alignItems': 'center', 'justifyContent': 'center'};
    romeon = oscard[offset];
    romeon = yankee.bind(entity)(romeon);
    romeon = romeon.radii;
    romeon = romeon.lg;
    verify['borderRadius'] = romeon;
    romeon = oscard[offset];
    romeon = yankee.bind(entity)(romeon);
    romeon = romeon.colors;
    romeon = romeon.BACKGROUND_TERTIARY;
    verify['backgroundColor'] = romeon;
    tangon['overflowTextOnly'] = verify;
    verify = {};
    romeon = oscard[offset];
    romeon = yankee.bind(entity)(romeon);
    romeon = romeon.colors;
    romeon = romeon.BACKGROUND_PRIMARY;
    verify['backgroundColor'] = romeon;
    romeon = 17;
    verify['borderRadius'] = romeon;
    tangon['overflowCircleWrap'] = verify;
    verify = {'backgroundColor': null, 'margin': 2, 'paddingHorizontal': 8, 'height': 30, 'alignItems': 'center', 'justifyContent': 'center', 'borderRadius': 15};
    offset = oscard[offset];
    offset = yankee.bind(entity)(offset);
    offset = offset.colors;
    offset = offset.BACKGROUND_TERTIARY;
    verify['backgroundColor'] = offset;
    tangon['overflowCircle'] = verify;
    tangon = golfie.bind(option)(tangon);
    var _closure1_slot4 = tangon;
    tangon = 6;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'uikit-native/SummarizedIconRow.tsx';
    tangon = report.bind(oscard)(tangon);
    tangon = function(argFoo) { // Original name: SummarizedIconRow
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            entity = argFoo;
            golfie = entity.items;
            var _closure2_slot0 = golfie;
            zuuluu = entity.max;
            tangon = undefined;
            if(!(zuuluu === tangon)) { _fun00002_ip = 29; continue _fun00001 }
 26:
            zuuluu = 8;
 29:
            var _closure2_slot1 = zuuluu;
            michal = entity.renderItem;
            var _closure2_slot2 = michal;
            michal = entity.offsetAmount;
            var _closure2_slot3 = michal;
            michal = entity.iconWrapperStyle;
            var _closure2_slot4 = michal;
            michal = entity.overflowStyle;
            var _closure2_slot5 = michal;
            option = entity.style;
            entity = entity.overflowComponent;
            if(!(entity === tangon)) { _fun00002_ip = 95; continue _fun00001 }
 88:
            entity = _closure1_slot5;
 95:
            var _closure2_slot6 = entity;
            var _closure2_slot7 = tangon;
            var _closure2_slot8 = tangon;
            michal = _closure1_slot4;
            oscard = michal.bind(tangon)();
            _closure2_slot7 = oscard;
            michal = global;
            offset = michal.Math;
            verify = offset.max;
            michal = golfie.length;
            zuuluu = michal - zuuluu;
            michal = 0;
            michal = verify.bind(offset)(zuuluu, michal);
            _closure2_slot8 = michal;
            zuuluu = _closure1_slot3;
            michal = _closure1_slot2;
            entity = {};
            verify = oscard.container;
            oscard = new Array(2);
            oscard[0] = verify;
            oscard[1] = option;
            entity['style'] = oscard;
            oscard = golfie.map;
            report = function(argFoo, argBar) {
                _fun00003: for(var _fun00004_ip = 0; ; ) switch(_fun00004_ip) {
 0:
                    yankee = argFoo;
                    oscard = argBar;
                    entity = _closure2_slot1;
                    if(!(!(oscard >= entity))) { _fun00004_ip = 257; continue _fun00003 }
 20:
                    entity = _closure2_slot1;
                    golfie = 1;
                    entity = entity - golfie;
                    if(!(oscard === entity)) { _fun00004_ip = 48; continue _fun00003 }
 35:
                    zuuluu = _closure2_slot8;
                    entity = 0;
                    if(!(!(zuuluu > entity))) { _fun00004_ip = 189; continue _fun00003 }
 48:
                    entity = global;
                    report = entity.Math;
                    tangon = report.min;
                    entity = _closure2_slot0;
                    zuuluu = entity.length;
                    entity = _closure2_slot1;
                    entity = tangon.bind(report)(zuuluu, entity);
                    verify = entity - golfie;
                    entity = null;
                    if(!yankee) { _fun00004_ip = 187; continue _fun00003 }
 89:
                    option = _closure1_slot3;
                    report = _closure1_slot2;
                    tangon = {};
                    zuuluu = _closure2_slot7;
                    offset = zuuluu.iconWrapper;
                    zuuluu = new Array(3);
                    zuuluu[0] = offset;
                    offset = _closure2_slot4;
                    zuuluu[1] = offset;
                    offset = 0;
                    if(!(offset === oscard)) { _fun00004_ip = 138; continue _fun00003 }
 134:
                    offset = {};
                    _fun00004_ip = 152; continue _fun00003;
 138:
                    romeon = {};
                    foxtra = _closure2_slot3;
                    romeon['marginLeft'] = foxtra;
                    offset = romeon;
 152:
                    zuuluu[2] = offset;
                    tangon['style'] = zuuluu;
                    offset = _closure2_slot2;
                    zuuluu = undefined;
                    verify = oscard === verify;
                    verify = offset.bind(zuuluu)(yankee, verify);
                    tangon['children'] = verify;
                    entity = option.bind(zuuluu)(report, tangon, oscard);
 187:
                    _fun00004_ip = 255; continue _fun00003;
 189:
                    report = _closure1_slot3;
                    tangon = _closure2_slot6;
                    zuuluu = {};
                    verify = {};
                    option = _closure2_slot3;
                    verify['marginLeft'] = option;
                    option = new Array(2);
                    option[0] = verify;
                    verify = _closure2_slot5;
                    option[1] = verify;
                    zuuluu['style'] = option;
                    michal = _closure2_slot8;
                    michal = michal + golfie;
                    zuuluu['overflow'] = michal;
                    michal = undefined;
                    entity = report.bind(michal)(tangon, zuuluu, oscard);
 255:
                    return entity;
 257:
                    entity = undefined;
                    return entity;
                }
            };
            report = oscard.bind(golfie)(report);
            entity['children'] = report;
            entity = zuuluu.bind(tangon)(michal, entity);
            return entity;
        }
    };
    zuuluu['default'] = tangon;
    tangon = function(argFoo) { // Original name: OverflowText
        entity = argFoo;
        offset = entity.overflow;
        golfie = entity.style;
        entity = _closure1_slot4;
        tangon = undefined;
        oscard = entity.bind(tangon)();
        zuuluu = _closure1_slot3;
        michal = _closure1_slot2;
        entity = {};
        option = oscard.overflowTextOnly;
        oscard = new Array(2);
        oscard[0] = option;
        oscard[1] = golfie;
        entity['style'] = oscard;
        golfie = _closure1_slot3;
        oscard = _closure1_slot0;
        option = _closure1_slot1;
        report = 5;
        report = option[report];
        report = oscard.bind(tangon)(report);
        oscard = report.Text;
        report = {};
        option = 'text-xs/medium';
        report['variant'] = option;
        option = global;
        option = option.HermesInternal;
        verify = option.concat;
        option = '+';
        option = verify.bind(option)(offset);
        report['children'] = option;
        report = golfie.bind(tangon)(oscard, report);
        entity['children'] = report;
        entity = zuuluu.bind(tangon)(michal, entity);
        return entity;
    };
    zuuluu['OverflowText'] = tangon;
    tangon = function(argFoo) { // Original name: OverflowTextSmall
        entity = argFoo;
        offset = entity.overflow;
        golfie = entity.style;
        entity = _closure1_slot4;
        tangon = undefined;
        oscard = entity.bind(tangon)();
        zuuluu = _closure1_slot3;
        michal = _closure1_slot2;
        entity = {};
        option = oscard.overflowTextOnly;
        oscard = new Array(2);
        oscard[0] = option;
        oscard[1] = golfie;
        entity['style'] = oscard;
        golfie = _closure1_slot3;
        oscard = _closure1_slot0;
        option = _closure1_slot1;
        report = 5;
        report = option[report];
        report = oscard.bind(tangon)(report);
        oscard = report.Text;
        report = {};
        option = 'text-xxs/medium';
        report['variant'] = option;
        option = global;
        option = option.HermesInternal;
        verify = option.concat;
        option = '+';
        option = verify.bind(option)(offset);
        report['children'] = option;
        report = golfie.bind(tangon)(oscard, report);
        entity['children'] = report;
        entity = zuuluu.bind(tangon)(michal, entity);
        return entity;
    };
    zuuluu['OverflowTextSmall'] = tangon;
    michal = function(argFoo) { // Original name: OverflowCircle
        entity = argFoo;
        foxtra = entity.overflow;
        oscard = entity.style;
        entity = _closure1_slot4;
        tangon = undefined;
        verify = entity.bind(tangon)();
        zuuluu = _closure1_slot3;
        michal = _closure1_slot2;
        entity = {};
        golfie = verify.overflowCircleWrap;
        report = new Array(2);
        report[0] = golfie;
        report[1] = oscard;
        entity['style'] = report;
        golfie = _closure1_slot3;
        oscard = _closure1_slot2;
        report = {};
        verify = verify.overflowCircle;
        report['style'] = verify;
        offset = _closure1_slot3;
        verify = _closure1_slot0;
        yankee = _closure1_slot1;
        option = 5;
        option = yankee[option];
        option = verify.bind(tangon)(option);
        verify = option.Text;
        option = {};
        yankee = 'text-xs/medium';
        option['variant'] = yankee;
        yankee = global;
        yankee = yankee.HermesInternal;
        romeon = yankee.concat;
        yankee = '+';
        yankee = romeon.bind(yankee)(foxtra);
        option['children'] = yankee;
        option = offset.bind(tangon)(verify, option);
        report['children'] = option;
        report = golfie.bind(tangon)(oscard, report);
        entity['children'] = report;
        entity = zuuluu.bind(tangon)(michal, entity);
        return entity;
    };
    zuuluu['OverflowCircle'] = michal;
    return entity;
})();