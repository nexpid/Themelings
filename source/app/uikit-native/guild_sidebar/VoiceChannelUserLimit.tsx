// app/uikit-native/guild_sidebar/VoiceChannelUserLimit.tsx
export default (function(argFoo, argBar, argBaz, argCorge, _, argFred, argPlugh) {
    report = argBar;
    romeo = argBaz;
    zulu = argFred;
    oscar = argPlugh;
    var _closure1_slot0 = report;
    var _closure1_slot1 = romeo;
    var _closure1_slot2 = oscar;
    entity = global;
    options = entity.Object;
    golf = options.defineProperty;
    tango = {};
    entity = true;
    tango['value'] = entity;
    entity = '__esModule';
    entity = golf.bind(options)(zulu, entity, tango);
    entity = 0;
    golf = oscar[entity];
    tango = argCorge;
    entity = undefined;
    golf = tango.bind(entity)(golf);
    tango = 1;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.View;
    var _closure1_slot3 = tango;
    tango = 2;
    options = oscar[tango];
    options = report.bind(entity)(options);
    options = options.jsx;
    var _closure1_slot4 = options;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.jsxs;
    var _closure1_slot5 = tango;
    tango = 3;
    tango = oscar[tango];
    verify = report.bind(entity)(tango);
    options = verify.createStyles;
    tango = {};
    offset = {'height': 16, 'width': 16, 'marginRight': 4};
    yankee = 4;
    foxtrot = oscar[yankee];
    foxtrot = romeo.bind(entity)(foxtrot);
    foxtrot = foxtrot.colors;
    foxtrot = foxtrot.CHANNELS_DEFAULT;
    offset['tintColor'] = foxtrot;
    tango['videoIcon'] = offset;
    offset = {'backgroundColor': null, 'alignItems': 'center', 'flexDirection': 'row', 'borderRadius': 10, 'overflow': 'hidden'};
    foxtrot = oscar[yankee];
    foxtrot = romeo.bind(entity)(foxtrot);
    foxtrot = foxtrot.colors;
    foxtrot = foxtrot.BACKGROUND_MOBILE_PRIMARY;
    offset['backgroundColor'] = foxtrot;
    tango['wrapper'] = offset;
    offset = {'height': 20, 'flexDirection': 'row', 'paddingLeft': 6, 'alignItems': 'center', 'justifyContent': 'center'};
    foxtrot = oscar[yankee];
    foxtrot = romeo.bind(entity)(foxtrot);
    foxtrot = foxtrot.colors;
    foxtrot = foxtrot.BACKGROUND_MOBILE_PRIMARY;
    offset['backgroundColor'] = foxtrot;
    tango['left'] = offset;
    offset = {'borderTopWidth': 20, 'borderBottomWidth': 0, 'borderTopColor': 'transparent', 'borderBottomColor': 'transparent', 'borderRightWidth': 6, 'borderRightColor': null, 'paddingRight': 2};
    foxtrot = oscar[yankee];
    foxtrot = romeo.bind(entity)(foxtrot);
    foxtrot = foxtrot.colors;
    foxtrot = foxtrot.BACKGROUND_TERTIARY;
    offset['borderRightColor'] = foxtrot;
    tango['mid'] = offset;
    offset = {'height': 20, 'flexDirection': 'row', 'paddingRight': 6, 'paddingLeft': 2, 'alignItems': 'center', 'justifyContent': 'center'};
    yankee = oscar[yankee];
    yankee = romeo.bind(entity)(yankee);
    yankee = yankee.colors;
    yankee = yankee.BACKGROUND_TERTIARY;
    offset['backgroundColor'] = yankee;
    tango['right'] = offset;
    tango = options.bind(verify)(tango);
    var _closure1_slot6 = tango;
    tango = golf.memo;
    mike = function(argFoo) { // Original name: VoiceChannelUserLimit
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            entity = argFoo;
            backup = entity.users;
            romeo = entity.total;
            golf = entity.videoLimit;
            entity = _closure1_slot6;
            tango = undefined;
            kilo = entity.bind(tango)();
            zulu = _closure1_slot5;
            mike = _closure1_slot3;
            entity = {};
            report = kilo.wrapper;
            entity['style'] = report;
            report = {};
            options = kilo.left;
            report['style'] = options;
            options = null;
            if(!golf) { _fun00002_ip = 153; continue _fun00001 }
 70:
            offset = _closure1_slot4;
            foxtrot = _closure1_slot1;
            sizing = _closure1_slot2;
            yankee = 5;
            golf = sizing[yankee];
            verify = foxtrot.bind(tango)(golf);
            golf = {};
            output = 6;
            output = sizing[output];
            output = foxtrot.bind(tango)(output);
            golf['source'] = output;
            yankee = sizing[yankee];
            yankee = foxtrot.bind(tango)(yankee);
            yankee = yankee.Sizes;
            yankee = yankee.REFRESH_SMALL_16;
            golf['size'] = yankee;
            yankee = kilo.videoIcon;
            golf['style'] = yankee;
            options = offset.bind(tango)(verify, golf);
 153:
            golf = new Array(2);
            golf[0] = options;
            options = _closure1_slot4;
            offset = _closure1_slot0;
            yankee = _closure1_slot2;
            verify = 7;
            foxtrot = yankee[verify];
            foxtrot = offset.bind(tango)(foxtrot);
            output = foxtrot.Text;
            sizing = {'variant': 'text-xs/medium', 'lineClamp': 1, 'color': 'channels-default'};
            foxtrot = backup.toString;
            echo = foxtrot.bind(backup)();
            result = echo.padStart;
            backup = 2;
            foxtrot = '0';
            result = result.bind(echo)(backup, foxtrot);
            sizing['children'] = result;
            sizing = options.bind(tango)(output, sizing);
            golf[1] = sizing;
            report['children'] = golf;
            golf = zulu.bind(tango)(mike, report);
            report = new Array(3);
            report[0] = golf;
            golf = _closure1_slot3;
            oscar = {};
            sizing = kilo.mid;
            oscar['style'] = sizing;
            oscar = options.bind(tango)(golf, oscar);
            report[1] = oscar;
            oscar = {};
            kilo = kilo.right;
            oscar['style'] = kilo;
            verify = yankee[verify];
            verify = offset.bind(tango)(verify);
            offset = verify.Text;
            verify = {'variant': 'text-xs/medium', 'lineClamp': 1, 'color': 'channels-default'};
            yankee = romeo.toString;
            romeo = yankee.bind(romeo)();
            yankee = romeo.padStart;
            yankee = yankee.bind(romeo)(backup, foxtrot);
            verify['children'] = yankee;
            verify = options.bind(tango)(offset, verify);
            oscar['children'] = verify;
            oscar = options.bind(tango)(golf, oscar);
            report[2] = oscar;
            entity['children'] = report;
            entity = zulu.bind(tango)(mike, entity);
            return entity;
        }
    };
    mike = tango.bind(golf)(mike);
    tango = 8;
    tango = oscar[tango];
    oscar = report.bind(entity)(tango);
    report = oscar.fileFinishedImporting;
    tango = 'uikit-native/guild_sidebar/VoiceChannelUserLimit.tsx';
    tango = report.bind(oscar)(tango);
    zulu['default'] = mike;
    return entity;
})();