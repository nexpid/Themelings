// app/uikit-native/guild_sidebar/VoiceChannelUserLimit.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    report = argBar;
    romeon = argBaz;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    var _closure1_slot1 = romeon;
    var _closure1_slot2 = oscard;
    entity = global;
    option = entity.Object;
    golfie = option.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(option)(zuuluu, entity, tangon);
    entity = 0;
    golfie = oscard[entity];
    tangon = argCor;
    entity = undefined;
    golfie = tangon.bind(entity)(golfie);
    tangon = 1;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.View;
    var _closure1_slot3 = tangon;
    tangon = 2;
    option = oscard[tangon];
    option = report.bind(entity)(option);
    option = option.jsx;
    var _closure1_slot4 = option;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.jsxs;
    var _closure1_slot5 = tangon;
    tangon = 3;
    tangon = oscard[tangon];
    verify = report.bind(entity)(tangon);
    option = verify.createStyles;
    tangon = {};
    offset = {'height': 16, 'width': 16, 'marginRight': 4};
    yankee = 4;
    foxtra = oscard[yankee];
    foxtra = romeon.bind(entity)(foxtra);
    foxtra = foxtra.colors;
    foxtra = foxtra.CHANNELS_DEFAULT;
    offset['tintColor'] = foxtra;
    tangon['videoIcon'] = offset;
    offset = {'backgroundColor': null, 'alignItems': 'center', 'flexDirection': 'row', 'borderRadius': 10, 'overflow': 'hidden'};
    foxtra = oscard[yankee];
    foxtra = romeon.bind(entity)(foxtra);
    foxtra = foxtra.colors;
    foxtra = foxtra.BACKGROUND_MOBILE_PRIMARY;
    offset['backgroundColor'] = foxtra;
    tangon['wrapper'] = offset;
    offset = {'height': 20, 'flexDirection': 'row', 'paddingLeft': 6, 'alignItems': 'center', 'justifyContent': 'center'};
    foxtra = oscard[yankee];
    foxtra = romeon.bind(entity)(foxtra);
    foxtra = foxtra.colors;
    foxtra = foxtra.BACKGROUND_MOBILE_PRIMARY;
    offset['backgroundColor'] = foxtra;
    tangon['left'] = offset;
    offset = {'borderTopWidth': 20, 'borderBottomWidth': 0, 'borderTopColor': 'transparent', 'borderBottomColor': 'transparent', 'borderRightWidth': 6, 'borderRightColor': null, 'paddingRight': 2};
    foxtra = oscard[yankee];
    foxtra = romeon.bind(entity)(foxtra);
    foxtra = foxtra.colors;
    foxtra = foxtra.BACKGROUND_TERTIARY;
    offset['borderRightColor'] = foxtra;
    tangon['mid'] = offset;
    offset = {'height': 20, 'flexDirection': 'row', 'paddingRight': 6, 'paddingLeft': 2, 'alignItems': 'center', 'justifyContent': 'center'};
    yankee = oscard[yankee];
    yankee = romeon.bind(entity)(yankee);
    yankee = yankee.colors;
    yankee = yankee.BACKGROUND_TERTIARY;
    offset['backgroundColor'] = yankee;
    tangon['right'] = offset;
    tangon = option.bind(verify)(tangon);
    var _closure1_slot6 = tangon;
    tangon = golfie.memo;
    michal = function(argFoo) { // Original name: VoiceChannelUserLimit
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            entity = argFoo;
            backup = entity.users;
            romeon = entity.total;
            golfie = entity.videoLimit;
            entity = _closure1_slot6;
            tangon = undefined;
            kiloes = entity.bind(tangon)();
            zuuluu = _closure1_slot5;
            michal = _closure1_slot3;
            entity = {};
            report = kiloes.wrapper;
            entity['style'] = report;
            report = {};
            option = kiloes.left;
            report['style'] = option;
            option = null;
            if(!golfie) { _fun00002_ip = 153; continue _fun00001 }
 70:
            offset = _closure1_slot4;
            foxtra = _closure1_slot1;
            sizing = _closure1_slot2;
            yankee = 5;
            golfie = sizing[yankee];
            verify = foxtra.bind(tangon)(golfie);
            golfie = {};
            output = 6;
            output = sizing[output];
            output = foxtra.bind(tangon)(output);
            golfie['source'] = output;
            yankee = sizing[yankee];
            yankee = foxtra.bind(tangon)(yankee);
            yankee = yankee.Sizes;
            yankee = yankee.REFRESH_SMALL_16;
            golfie['size'] = yankee;
            yankee = kiloes.videoIcon;
            golfie['style'] = yankee;
            option = offset.bind(tangon)(verify, golfie);
 153:
            golfie = new Array(2);
            golfie[0] = option;
            option = _closure1_slot4;
            offset = _closure1_slot0;
            yankee = _closure1_slot2;
            verify = 7;
            foxtra = yankee[verify];
            foxtra = offset.bind(tangon)(foxtra);
            output = foxtra.Text;
            sizing = {'variant': 'text-xs/medium', 'lineClamp': 1, 'color': 'channels-default'};
            foxtra = backup.toString;
            echoed = foxtra.bind(backup)();
            result = echoed.padStart;
            backup = 2;
            foxtra = '0';
            result = result.bind(echoed)(backup, foxtra);
            sizing['children'] = result;
            sizing = option.bind(tangon)(output, sizing);
            golfie[1] = sizing;
            report['children'] = golfie;
            golfie = zuuluu.bind(tangon)(michal, report);
            report = new Array(3);
            report[0] = golfie;
            golfie = _closure1_slot3;
            oscard = {};
            sizing = kiloes.mid;
            oscard['style'] = sizing;
            oscard = option.bind(tangon)(golfie, oscard);
            report[1] = oscard;
            oscard = {};
            kiloes = kiloes.right;
            oscard['style'] = kiloes;
            verify = yankee[verify];
            verify = offset.bind(tangon)(verify);
            offset = verify.Text;
            verify = {'variant': 'text-xs/medium', 'lineClamp': 1, 'color': 'channels-default'};
            yankee = romeon.toString;
            romeon = yankee.bind(romeon)();
            yankee = romeon.padStart;
            yankee = yankee.bind(romeon)(backup, foxtra);
            verify['children'] = yankee;
            verify = option.bind(tangon)(offset, verify);
            oscard['children'] = verify;
            oscard = option.bind(tangon)(golfie, oscard);
            report[2] = oscard;
            entity['children'] = report;
            entity = zuuluu.bind(tangon)(michal, entity);
            return entity;
        }
    };
    michal = tangon.bind(golfie)(michal);
    tangon = 8;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'uikit-native/guild_sidebar/VoiceChannelUserLimit.tsx';
    tangon = report.bind(oscard)(tangon);
    zuuluu['default'] = michal;
    return entity;
})();