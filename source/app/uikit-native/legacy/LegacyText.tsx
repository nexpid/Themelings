// app/uikit-native/legacy/LegacyText.tsx
export default (function(argFoo, argBar, _, argCorge, __, argFred, argPlugh) {
    report = argBar;
    zulu = argFred;
    oscar = argPlugh;
    entity = global;
    options = entity.Object;
    golf = options.defineProperty;
    tango = {};
    entity = true;
    tango['value'] = entity;
    entity = '__esModule';
    entity = golf.bind(options)(zulu, entity, tango);
    entity = 0;
    golf = oscar[entity];
    tango = argCorge;
    entity = undefined;
    golf = tango.bind(entity)(golf);
    tango = 1;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    options = tango.Text;
    var _closure1_slot0 = options;
    verify = tango.StyleSheet;
    tango = 2;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    yankee = tango.Fonts;
    tango = 3;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.jsx;
    var _closure1_slot1 = tango;
    options = verify.create;
    tango = {};
    offset = {};
    yankee = yankee.PRIMARY_MEDIUM;
    offset['fontFamily'] = yankee;
    yankee = false;
    offset['includeFontPadding'] = yankee;
    tango['text'] = offset;
    tango = options.bind(verify)(tango);
    var _closure1_slot2 = tango;
    tango = golf.forwardRef;
    mike = function(argFoo, argBar) {
        tango = argFoo;
        entity = tango.style;
        report = tango.children;
        mike = null;
        zulu = Object.create(mike);
        mike = 0;
        zulu['style'] = mike;
        zulu['children'] = mike;
        yankee = {};
        offset = tango;
        verify = zulu;
        offset = copyDataProperties(yankee, offset, verify);
        tango = _closure1_slot1;
        zulu = _closure1_slot0;
        mike = {};
        options = argBar;
        mike['ref'] = options;
        yankee = mike;
        golf = copyDataProperties(yankee, offset);
        oscar = _closure1_slot2;
        golf = oscar.text;
        oscar = new Array(2);
        oscar[0] = golf;
        oscar[1] = entity;
        entity = 'style';
        mike[entity] = oscar;
        entity = 'children';
        mike[entity] = report;
        entity = undefined;
        entity = tango.bind(entity)(zulu, mike);
        return entity;
    };
    mike = tango.bind(golf)(mike);
    tango = 4;
    tango = oscar[tango];
    oscar = report.bind(entity)(tango);
    report = oscar.fileFinishedImporting;
    tango = 'uikit-native/legacy/LegacyText.tsx';
    tango = report.bind(oscar)(tango);
    zulu['default'] = mike;
    return entity;
})();