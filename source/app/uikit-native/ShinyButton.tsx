// app/uikit-native/ShinyButton.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    report = argBar;
    golfie = argBaz;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    var _closure1_slot1 = golfie;
    var _closure1_slot2 = oscard;
    entity = global;
    verify = entity.Object;
    option = verify.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = option.bind(verify)(zuuluu, entity, tangon);
    entity = 0;
    tangon = oscard[entity];
    entity = undefined;
    tangon = golfie.bind(entity)(tangon);
    var _closure1_slot3 = tangon;
    tangon = 1;
    option = oscard[tangon];
    tangon = argCor;
    tangon = tangon.bind(entity)(option);
    var _closure1_slot4 = tangon;
    tangon = 2;
    tangon = oscard[tangon];
    tangon = golfie.bind(entity)(tangon);
    var _closure1_slot5 = tangon;
    tangon = 3;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.jsx;
    var _closure1_slot6 = tangon;
    tangon = 4;
    tangon = oscard[tangon];
    option = report.bind(entity)(tangon);
    golfie = option.createStyles;
    tangon = {};
    verify = {};
    offset = 'hidden';
    verify['overflow'] = offset;
    tangon['shinyButton'] = verify;
    verify = {'width': '100%', 'height': '100%', 'position': 'absolute', 'overflow': 'hidden'};
    tangon['shineContainer'] = verify;
    verify = {'width': 56, 'height': '500%', 'transform': null, 'backgroundColor': 'rgba(255,255,255,0.1)', 'top': '-100%', 'alignItems': 'center'};
    yankee = {};
    offset = '30deg';
    yankee['rotate'] = offset;
    offset = new Array(1);
    offset[0] = yankee;
    verify['transform'] = offset;
    tangon['shine'] = verify;
    verify = {'width': 16, 'height': '100%', 'backgroundColor': 'rgba(255,255,255,0.1)'};
    tangon['shineInner'] = verify;
    tangon = golfie.bind(option)(tangon);
    var _closure1_slot7 = tangon;
    tangon = {};
    golfie = "function ShinyButtonTsx1(){const{width,OFFSCREEN_OFFSET,withRepeat,withSequence,withTiming,withDelay,INITIAL_ANIMATION_DELAY,ANIMATION_DURATION}=this.__closure;if(width==null){return{transform:[{translateX:-OFFSCREEN_OFFSET}]};}return{transform:[{translateX:withRepeat(withSequence(withTiming(-OFFSCREEN_OFFSET,{duration:0},'animate-always'),withDelay(INITIAL_ANIMATION_DELAY,withTiming(width+OFFSCREEN_OFFSET,{duration:ANIMATION_DURATION},'animate-always'))),-1)}]};}";
    tangon['code'] = golfie;
    var _closure1_slot8 = tangon;
    tangon = 9;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'uikit-native/ShinyButton.tsx';
    tangon = report.bind(oscard)(tangon);
    michal = function(argFoo) { // Original name: ShinyButton
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            oscard = argFoo;
            verify = oscard.style;
            golfie = oscard.disabled;
            var _closure2_slot0 = golfie;
            entity = oscard.submitting;
            var _closure2_slot1 = entity;
            entity = oscard.shineDisabled;
            tangon = undefined;
            if(!(entity === tangon)) { _fun00002_ip = 43; continue _fun00001 }
 41:
            entity = false;
 43:
            var _closure2_slot2 = entity;
            entity = oscard.shineStyle;
            var _closure2_slot3 = entity;
            entity = oscard.shineInnerStyle;
            var _closure2_slot4 = entity;
            zuuluu = {'style': 0, 'disabled': 0, 'submitting': 0, 'shineDisabled': 0, 'shineStyle': 0, 'shineInnerStyle': 0};
            yankee = null;
            result = zuuluu;
            output = null;
            entity = silentSetPrototypeOf(result, output);
            michal = 0;
            result = {};
            output = oscard;
            sizing = zuuluu;
            option = copyDataProperties(result, output, sizing);
            var _closure2_slot5 = tangon;
            var _closure2_slot6 = tangon;
            var _closure2_slot7 = tangon;
            var _closure2_slot8 = tangon;
            var _closure2_slot9 = tangon;
            entity = function(argFoo) { // Original name: handleLayout
                zuuluu = _closure2_slot7;
                entity = argFoo;
                entity = entity.nativeEvent;
                entity = entity.layout;
                michal = entity.width;
                entity = undefined;
                michal = zuuluu.bind(entity)(michal);
                return entity;
            };
            var _closure2_slot10 = entity;
            zuuluu = _closure1_slot7;
            oscard = zuuluu.bind(tangon)();
            _closure2_slot5 = oscard;
            offset = _closure1_slot4;
            zuuluu = offset.useState;
            yankee = zuuluu.bind(offset)(yankee);
            offset = _closure1_slot3;
            zuuluu = 2;
            zuuluu = offset.bind(tangon)(yankee, zuuluu);
            kiloes = zuuluu[michal];
            _closure2_slot6 = kiloes;
            michal = 1;
            michal = zuuluu[michal];
            _closure2_slot7 = michal;
            backup = _closure1_slot0;
            offset = _closure1_slot2;
            michal = 5;
            michal = offset[michal];
            foxtra = backup.bind(tangon)(michal);
            romeon = foxtra.useStateFromStores;
            michal = _closure1_slot5;
            yankee = new Array(1);
            yankee[0] = michal;
            zuuluu = function() {
                entity = _closure1_slot5;
                entity = entity.useReducedMotion;
                return entity;
            };
            michal = new Array(0);
            michal = romeon.bind(foxtra)(yankee, zuuluu, michal);
            _closure2_slot8 = michal;
            foxtra = 6;
            michal = offset[foxtra];
            yankee = backup.bind(tangon)(michal);
            zuuluu = yankee.useAnimatedStyle;
            michal = function() { // Original name: T
                _fun00003: for(var _fun00004_ip = 0; ; ) switch(_fun00004_ip) {
 0:
                    zuuluu = _closure2_slot6;
                    entity = null;
                    if(!(entity != zuuluu)) { _fun00004_ip = 218; continue _fun00003 }
 16:
                    entity = {};
                    zuuluu = {};
                    foxtra = _closure1_slot0;
                    kiloes = _closure1_slot2;
                    offset = 6;
                    tangon = kiloes[offset];
                    romeon = undefined;
                    oscard = foxtra.bind(romeon)(tangon);
                    report = oscard.withRepeat;
                    tangon = kiloes[offset];
                    option = foxtra.bind(romeon)(tangon);
                    golfie = option.withSequence;
                    verify = 7;
                    tangon = kiloes[verify];
                    output = foxtra.bind(romeon)(tangon);
                    sizing = output.withTiming;
                    yankee = {};
                    tangon = 0;
                    yankee['duration'] = tangon;
                    tangon = -100;
                    backup = 'animate-always';
                    tangon = sizing.bind(output)(tangon, yankee, backup);
                    offset = kiloes[offset];
                    yankee = foxtra.bind(romeon)(offset);
                    offset = yankee.withDelay;
                    verify = kiloes[verify];
                    foxtra = foxtra.bind(romeon)(verify);
                    romeon = foxtra.withTiming;
                    verify = _closure2_slot6;
                    michal = 100;
                    verify = verify + michal;
                    michal = {};
                    kiloes = 2000;
                    michal['duration'] = kiloes;
                    verify = romeon.bind(foxtra)(verify, michal, backup);
                    michal = 750;
                    michal = offset.bind(yankee)(michal, verify);
                    tangon = golfie.bind(option)(tangon, michal);
                    michal = -1;
                    michal = report.bind(oscard)(tangon, michal);
                    zuuluu['translateX'] = michal;
                    michal = new Array(1);
                    michal[0] = zuuluu;
                    entity['transform'] = michal;
                    _fun00004_ip = 248; continue _fun00003;
 218:
                    michal = {};
                    tangon = {};
                    zuuluu = -100;
                    tangon['translateX'] = zuuluu;
                    zuuluu = new Array(1);
                    zuuluu[0] = tangon;
                    michal['transform'] = zuuluu;
                    entity = michal;
 248:
                    return entity;
                }
            };
            romeon = {};
            romeon['width'] = kiloes;
            kiloes = 100;
            romeon['OFFSCREEN_OFFSET'] = kiloes;
            kiloes = offset[foxtra];
            kiloes = backup.bind(tangon)(kiloes);
            kiloes = kiloes.withRepeat;
            romeon['withRepeat'] = kiloes;
            kiloes = offset[foxtra];
            kiloes = backup.bind(tangon)(kiloes);
            kiloes = kiloes.withSequence;
            romeon['withSequence'] = kiloes;
            kiloes = 7;
            kiloes = offset[kiloes];
            kiloes = backup.bind(tangon)(kiloes);
            kiloes = kiloes.withTiming;
            romeon['withTiming'] = kiloes;
            foxtra = offset[foxtra];
            foxtra = backup.bind(tangon)(foxtra);
            foxtra = foxtra.withDelay;
            romeon['withDelay'] = foxtra;
            foxtra = 750;
            romeon['INITIAL_ANIMATION_DELAY'] = foxtra;
            foxtra = 2000;
            romeon['ANIMATION_DURATION'] = foxtra;
            michal['__closure'] = romeon;
            romeon = 5550564727650.0;
            michal['__workletHash'] = romeon;
            romeon = _closure1_slot8;
            michal['__initData'] = romeon;
            michal = zuuluu.bind(yankee)(michal);
            _closure2_slot9 = michal;
            zuuluu = _closure1_slot6;
            michal = _closure1_slot1;
            entity = 8;
            entity = offset[entity];
            michal = michal.bind(tangon)(entity);
            entity = {};
            result = entity;
            output = option;
            option = copyDataProperties(result, output);
            option = new Array(2);
            option[0] = verify;
            oscard = oscard.shinyButton;
            option[1] = oscard;
            oscard = 'style';
            entity[oscard] = option;
            oscard = 'disabled';
            entity[oscard] = golfie;
            oscard = function() { // Original name: renderShine
                _fun00005: for(var _fun00006_ip = 0; ; ) switch(_fun00006_ip) {
 0:
                    michal = _closure2_slot0;
                    entity = null;
                    if(michal) { _fun00006_ip = 244; continue _fun00005 }
 15:
                    michal = _closure2_slot1;
                    entity = null;
                    if(michal) { _fun00006_ip = 244; continue _fun00005 }
 27:
                    michal = _closure2_slot8;
                    entity = null;
                    if(michal) { _fun00006_ip = 244; continue _fun00005 }
 39:
                    michal = _closure2_slot2;
                    entity = null;
                    if(michal) { _fun00006_ip = 244; continue _fun00005 }
 51:
                    report = _closure1_slot6;
                    verify = _closure1_slot1;
                    offset = _closure1_slot2;
                    option = 6;
                    michal = offset[option];
                    tangon = undefined;
                    michal = verify.bind(tangon)(michal);
                    zuuluu = michal.View;
                    michal = {};
                    oscard = _closure2_slot10;
                    michal['onLayout'] = oscard;
                    oscard = _closure2_slot5;
                    golfie = oscard.shineContainer;
                    oscard = new Array(2);
                    oscard[0] = golfie;
                    golfie = _closure2_slot9;
                    oscard[1] = golfie;
                    michal['style'] = oscard;
                    oscard = offset[option];
                    oscard = verify.bind(tangon)(oscard);
                    golfie = oscard.View;
                    oscard = {};
                    romeon = _closure2_slot5;
                    foxtra = romeon.shine;
                    romeon = new Array(2);
                    romeon[0] = foxtra;
                    foxtra = _closure2_slot3;
                    romeon[1] = foxtra;
                    oscard['style'] = romeon;
                    option = offset[option];
                    option = verify.bind(tangon)(option);
                    verify = option.View;
                    option = {};
                    offset = _closure2_slot5;
                    romeon = offset.shineInner;
                    offset = new Array(2);
                    offset[0] = romeon;
                    yankee = _closure2_slot4;
                    offset[1] = yankee;
                    option['style'] = offset;
                    option = report.bind(tangon)(verify, option);
                    oscard['children'] = option;
                    oscard = report.bind(tangon)(golfie, oscard);
                    michal['children'] = oscard;
                    entity = report.bind(tangon)(zuuluu, michal);
 244:
                    return entity;
                }
            };
            report = 'renderShine';
            entity[report] = oscard;
            entity = zuuluu.bind(tangon)(michal, entity);
            return entity;
        }
    };
    zuuluu['default'] = michal;
    return entity;
})();