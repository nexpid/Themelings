// app/uikit-native/GradientText.tsx
export default (function(argFoo, argBar, argBaz, _, __, argFre, argPlu) {
    report = argBar;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    entity = argBaz;
    var _closure1_slot1 = entity;
    var _closure1_slot2 = oscard;
    entity = global;
    option = entity.Object;
    golfie = option.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(option)(zuuluu, entity, tangon);
    entity = 0;
    tangon = oscard[entity];
    entity = undefined;
    tangon = report.bind(entity)(tangon);
    tangon = tangon.jsx;
    var _closure1_slot3 = tangon;
    tangon = 4;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'uikit-native/GradientText.tsx';
    tangon = report.bind(oscard)(tangon);
    michal = function(argFoo) { // Original name: _default
        verify = argFoo;
        tangon = _closure1_slot3;
        oscard = _closure1_slot1;
        offset = _closure1_slot2;
        entity = 1;
        entity = offset[entity];
        zuuluu = undefined;
        michal = oscard.bind(zuuluu)(entity);
        entity = {};
        option = _closure1_slot0;
        golfie = 2;
        report = offset[golfie];
        report = option.bind(zuuluu)(report);
        yankee = report.Text;
        report = {};
        backup = report;
        foxtra = verify;
        romeon = copyDataProperties(backup, foxtra);
        report = tangon.bind(zuuluu)(yankee, report);
        entity['maskElement'] = report;
        report = 3;
        report = offset[report];
        oscard = oscard.bind(zuuluu)(report);
        report = {};
        yankee = verify.colors;
        report['colors'] = yankee;
        yankee = 0;
        romeon = {'x': 0, 'y': 0};
        report['start'] = romeon;
        romeon = {'x': 1, 'y': 0};
        report['end'] = romeon;
        golfie = offset[golfie];
        golfie = option.bind(zuuluu)(golfie);
        option = golfie.Text;
        golfie = {};
        backup = golfie;
        foxtra = verify;
        offset = copyDataProperties(backup, foxtra);
        verify = verify.style;
        offset = new Array(2);
        offset[0] = verify;
        verify = {};
        verify['opacity'] = yankee;
        offset[1] = verify;
        verify = 'style';
        golfie[verify] = offset;
        golfie = tangon.bind(zuuluu)(option, golfie);
        report['children'] = golfie;
        report = tangon.bind(zuuluu)(oscard, report);
        entity['children'] = report;
        entity = tangon.bind(zuuluu)(michal, entity);
        return entity;
    };
    zuuluu['default'] = michal;
    return entity;
})();