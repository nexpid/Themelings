// app/uikit-native/modals/AdvancedInstantInvite.tsx
export default (function(argFoo, argBar, argBaz, argCorge, _, argFred, argPlugh) {
    report = argBar;
    golf = argBaz;
    zulu = argFred;
    oscar = argPlugh;
    var _closure1_slot0 = report;
    var _closure1_slot1 = golf;
    var _closure1_slot2 = oscar;
    entity = global;
    verify = entity.Object;
    options = verify.defineProperty;
    tango = {};
    entity = true;
    tango['value'] = entity;
    entity = '__esModule';
    entity = options.bind(verify)(zulu, entity, tango);
    entity = 0;
    options = oscar[entity];
    tango = argCorge;
    entity = undefined;
    tango = tango.bind(entity)(options);
    offset = 1;
    tango = oscar[offset];
    tango = report.bind(entity)(tango);
    options = tango.View;
    var _closure1_slot3 = options;
    options = tango.StyleSheet;
    tango = 2;
    tango = oscar[tango];
    tango = golf.bind(entity)(tango);
    var _closure1_slot4 = tango;
    tango = 3;
    tango = oscar[tango];
    tango = golf.bind(entity)(tango);
    var _closure1_slot5 = tango;
    tango = 4;
    golf = oscar[tango];
    golf = report.bind(entity)(golf);
    golf = golf.jsx;
    var _closure1_slot6 = golf;
    golf = oscar[tango];
    golf = report.bind(entity)(golf);
    golf = golf.jsxs;
    var _closure1_slot7 = golf;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.Fragment;
    var _closure1_slot8 = tango;
    golf = options.create;
    tango = {};
    verify = {};
    verify['flexGrow'] = offset;
    tango['container'] = verify;
    verify = {'height': 16, 'width': 16, 'marginTop': 2};
    tango['channelIcon'] = verify;
    verify = {'position': 'absolute', 'left': 32, 'top': 28, 'height': 60, 'width': 60, 'margin': 0, 'padding': 0};
    tango['sparklesContainer'] = verify;
    verify = {'height': 60, 'width': 60};
    tango['sparkles'] = verify;
    tango = golf.bind(options)(tango);
    var _closure1_slot9 = tango;
    tango = 14;
    tango = oscar[tango];
    oscar = report.bind(entity)(tango);
    report = oscar.fileFinishedImporting;
    tango = 'uikit-native/modals/AdvancedInstantInvite.tsx';
    tango = report.bind(oscar)(tango);
    mike = function(argFoo) { // Original name: AdvancedInstantInvite
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            entity = argFoo;
            golf = entity.channel;
            zulu = entity.guild;
            oscar = entity.style;
            context = entity.maxAge;
            result = entity.onChangeMaxAge;
            vacuum = entity.maxUsesOptions;
            update = entity.maxUses;
            echo = entity.onChangeMaxUses;
            papa = entity.temporary;
            config = entity.onChangeTemporary;
            record = entity.flags;
            var _closure2_slot0 = record;
            entity = entity.onChangeFlags;
            var _closure2_slot1 = entity;
            verify = null;
            entity = verify != golf;
            equality = null;
            if(!entity) { _fun00002_ip = 138; continue _fun00001 }
 102:
            tango = _closure1_slot0;
            mike = _closure1_slot2;
            entity = 5;
            mike = mike[entity];
            entity = undefined;
            mike = tango.bind(entity)(mike);
            entity = mike.getChannelIcon;
            equality = entity.bind(mike)(golf);
 138:
            entity = verify != golf;
            output = ' ';
            if(!entity) { _fun00002_ip = 195; continue _fun00001 }
 149:
            report = _closure1_slot0;
            tango = _closure1_slot2;
            mike = 6;
            tango = tango[mike];
            mike = undefined;
            report = report.bind(mike)(tango);
            tango = report.computeChannelName;
            mike = _closure1_slot5;
            entity = _closure1_slot4;
            output = tango.bind(report)(golf, mike, entity);
 195:
            variable36 = _closure1_slot1;
            sequence = _closure1_slot2;
            entity = 7;
            entity = sequence[entity];
            tango = undefined;
            entity = variable36.bind(tango)(entity);
            target = entity.getMaxAgeOptions;
            status = _closure1_slot0;
            entity = 8;
            entity = sequence[entity];
            mike = status.bind(tango)(entity);
            entity = mike.useInviteApplicationBypassInfo;
            entity = entity.bind(mike)(zulu);
            offset = entity.canCreateApplicationBypassInvites;
            romeo = entity.isManualApprovalGuild;
            zulu = _closure1_slot6;
            mike = _closure1_slot3;
            entity = {};
            whiskey = _closure1_slot9;
            golf = whiskey.container;
            report = new Array(2);
            report[0] = golf;
            report[1] = oscar;
            entity['style'] = report;
            golf = _closure1_slot7;
            backup = 9;
            report = sequence[backup];
            report = status.bind(tango)(report);
            oscar = report.Form;
            report = {};
            options = sequence[backup];
            options = status.bind(tango)(options);
            yankee = options.FormSection;
            options = {};
            source = 10;
            kilo = sequence[source];
            kilo = status.bind(tango)(kilo);
            sierra = kilo.intl;
            sizing = sierra.string;
            kilo = sequence[source];
            kilo = status.bind(tango)(kilo);
            kilo = kilo.t;
            kilo = kilo.LUo0Q0;
            kilo = sizing.bind(sierra)(kilo);
            options['title'] = kilo;
            kilo = sequence[backup];
            kilo = status.bind(tango)(kilo);
            sizing = kilo.FormRow;
            kilo = {};
            quebec = 11;
            sierra = sequence[quebec];
            lima = variable36.bind(tango)(sierra);
            sierra = {};
            quebec = sequence[quebec];
            quebec = variable36.bind(tango)(quebec);
            quebec = quebec.Sizes;
            quebec = quebec.CUSTOM;
            sierra['size'] = quebec;
            sierra['source'] = equality;
            whiskey = whiskey.channelIcon;
            sierra['style'] = whiskey;
            sierra = zulu.bind(tango)(lima, sierra);
            kilo['leading'] = sierra;
            kilo['label'] = output;
            kilo = zulu.bind(tango)(sizing, kilo);
            options['children'] = kilo;
            yankee = zulu.bind(tango)(yankee, options);
            options = new Array(4);
            options[0] = yankee;
            yankee = sequence[backup];
            yankee = status.bind(tango)(yankee);
            kilo = yankee.FormSection;
            yankee = {};
            sizing = sequence[source];
            sizing = status.bind(tango)(sizing);
            sierra = sizing.intl;
            output = sierra.string;
            sizing = sequence[source];
            sizing = status.bind(tango)(sizing);
            sizing = sizing.t;
            sizing = sizing.4QuV7O;
            sizing = output.bind(sierra)(sizing);
            yankee['title'] = sizing;
            sizing = sequence[backup];
            sizing = status.bind(tango)(sizing);
            output = sizing.FormSelect;
            sizing = {};
            sierra = sequence[source];
            sierra = status.bind(tango)(sierra);
            whiskey = sierra.intl;
            lima = whiskey.string;
            sierra = sequence[source];
            sierra = status.bind(tango)(sierra);
            sierra = sierra.t;
            sierra = sierra.gKmKPz;
            sierra = lima.bind(whiskey)(sierra);
            sizing['label'] = sierra;
            sizing['options'] = target;
            sizing['value'] = context;
            sizing['onChange'] = result;
            output = zulu.bind(tango)(output, sizing);
            sizing = new Array(3);
            sizing[0] = output;
            output = sequence[backup];
            output = status.bind(tango)(output);
            result = output.FormDivider;
            output = {};
            output = zulu.bind(tango)(result, output);
            sizing[1] = output;
            output = sequence[backup];
            output = status.bind(tango)(output);
            result = output.FormSelect;
            output = {};
            context = sequence[source];
            context = status.bind(tango)(context);
            target = context.intl;
            context = target.string;
            sequence = sequence[source];
            sequence = status.bind(tango)(sequence);
            sequence = sequence.t;
            sequence = sequence.+3vH1t;
            sequence = context.bind(target)(sequence);
            output['label'] = sequence;
            output['options'] = vacuum;
            output['value'] = update;
            output['onChange'] = echo;
            output = zulu.bind(tango)(result, output);
            sizing[2] = output;
            yankee['children'] = sizing;
            yankee = golf.bind(tango)(kilo, yankee);
            options[1] = yankee;
            yankee = null;
            if(romeo) { _fun00002_ip = 1017; continue _fun00001 }
 795:
            sizing = _closure1_slot7;
            kilo = _closure1_slot8;
            romeo = {};
            update = _closure1_slot6;
            context = _closure1_slot0;
            vacuum = _closure1_slot2;
            output = vacuum[backup];
            output = context.bind(tango)(output);
            result = output.FormSection;
            output = {};
            echo = vacuum[backup];
            echo = context.bind(tango)(echo);
            sequence = echo.FormSwitchRow;
            echo = {};
            target = vacuum[source];
            target = context.bind(tango)(target);
            sierra = target.intl;
            status = sierra.string;
            target = vacuum[source];
            target = context.bind(tango)(target);
            target = target.t;
            target = target.dy1icn;
            target = status.bind(sierra)(target);
            echo['label'] = target;
            echo['value'] = papa;
            echo['onValueChange'] = config;
            echo = update.bind(tango)(sequence, echo);
            output['children'] = echo;
            result = update.bind(tango)(result, output);
            output = new Array(2);
            output[0] = result;
            result = vacuum[backup];
            result = context.bind(tango)(result);
            echo = result.FormHint;
            result = {};
            sequence = vacuum[source];
            sequence = context.bind(tango)(sequence);
            config = sequence.intl;
            sequence = config.string;
            vacuum = vacuum[source];
            vacuum = context.bind(tango)(vacuum);
            vacuum = vacuum.t;
            vacuum = vacuum.A53l8/;
            vacuum = sequence.bind(config)(vacuum);
            result['children'] = vacuum;
            result = update.bind(tango)(echo, result);
            output[1] = result;
            romeo['children'] = output;
            yankee = sizing.bind(tango)(kilo, romeo);
 1017:
            options[2] = yankee;
            verify = null;
            if(!offset) { _fun00002_ip = 1306; continue _fun00001 }
 1029:
            romeo = _closure1_slot7;
            yankee = _closure1_slot8;
            offset = {};
            sizing = _closure1_slot6;
            update = _closure1_slot0;
            output = _closure1_slot2;
            foxtrot = output[backup];
            foxtrot = update.bind(tango)(foxtrot);
            kilo = foxtrot.FormSection;
            foxtrot = {};
            result = output[backup];
            result = update.bind(tango)(result);
            echo = result.FormSwitchRow;
            result = {};
            vacuum = output[source];
            vacuum = update.bind(tango)(vacuum);
            config = vacuum.intl;
            sequence = config.string;
            vacuum = output[source];
            vacuum = update.bind(tango)(vacuum);
            vacuum = vacuum.t;
            vacuum = vacuum.1i1bUl;
            vacuum = sequence.bind(config)(vacuum);
            result['label'] = vacuum;
            vacuum = 12;
            vacuum = output[vacuum];
            config = update.bind(tango)(vacuum);
            sequence = config.hasFlag;
            vacuum = 13;
            vacuum = output[vacuum];
            vacuum = update.bind(tango)(vacuum);
            vacuum = vacuum.GuildInviteFlags;
            vacuum = vacuum.IS_APPLICATION_BYPASS;
            vacuum = sequence.bind(config)(record, vacuum);
            result['value'] = vacuum;
            control = function(argFoo) { // Original name: onValueChange
                zulu = _closure2_slot1;
                tango = _closure1_slot0;
                options = _closure1_slot2;
                mike = 12;
                report = options[mike];
                mike = undefined;
                golf = tango.bind(mike)(report);
                oscar = golf.setFlag;
                report = _closure2_slot0;
                entity = 13;
                entity = options[entity];
                entity = tango.bind(mike)(entity);
                entity = entity.GuildInviteFlags;
                tango = entity.IS_APPLICATION_BYPASS;
                entity = argFoo;
                entity = oscar.bind(golf)(report, tango, entity);
                entity = zulu.bind(mike)(entity);
                return entity;
            };
            result['onValueChange'] = control;
            result = sizing.bind(tango)(echo, result);
            foxtrot['children'] = result;
            kilo = sizing.bind(tango)(kilo, foxtrot);
            foxtrot = new Array(2);
            foxtrot[0] = kilo;
            backup = output[backup];
            backup = update.bind(tango)(backup);
            kilo = backup.FormHint;
            backup = {};
            result = output[source];
            result = update.bind(tango)(result);
            echo = result.intl;
            result = echo.string;
            output = output[source];
            output = update.bind(tango)(output);
            output = output.t;
            output = output.jvd/LC;
            output = result.bind(echo)(output);
            backup['children'] = output;
            backup = sizing.bind(tango)(kilo, backup);
            foxtrot[1] = backup;
            offset['children'] = foxtrot;
            verify = romeo.bind(tango)(yankee, offset);
 1306:
            options[3] = verify;
            report['children'] = options;
            report = golf.bind(tango)(oscar, report);
            entity['children'] = report;
            entity = zulu.bind(tango)(mike, entity);
            return entity;
        }
    };
    zulu['default'] = mike;
    return entity;
})();