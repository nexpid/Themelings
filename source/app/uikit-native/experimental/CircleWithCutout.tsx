// app/uikit-native/experimental/CircleWithCutout.tsx
export default (function(global, require, metroImportDefault, metroImportAll, moduleObject, exports, dependencyMap) {
    var7 = require;
    var3 = exports;
    var8 = dependencyMap;
    var _closure1_slot0 = var7;
    var1 = metroImportDefault;
    var _closure1_slot1 = var1;
    var _closure1_slot2 = var8;
    var4 = function getCutoutCenterX(arg1, arg2) {
        var2 = arg1;
        var1 = global;
        var4 = var1.Math;
        var3 = var4.sin;
        var5 = _closure1_slot5;
        var1 = arg2;
        var1 = var1 * var5;
        var1 = var3.bind(var4)(var1);
        var1 = var2 * var1;
        var1 = var2 + var1;
        return var1;
    };
    var _closure1_slot6 = var4;
    var2 = function getCutoutCenterY(arg1, arg2) {
        var2 = arg1;
        var1 = global;
        var4 = var1.Math;
        var3 = var4.cos;
        var5 = _closure1_slot5;
        var1 = arg2;
        var1 = var1 * var5;
        var1 = var3.bind(var4)(var1);
        var1 = var2 * var1;
        var1 = var2 - var1;
        return var1;
    };
    var _closure1_slot7 = var2;
    var6 = global;
    var11 = var6.Object;
    var10 = var11.defineProperty;
    var9 = {};
    var1 = true;
    var9['value'] = var1;
    var1 = '__esModule';
    var1 = var10.bind(var11)(var3, var1, var9);
    var1 = 0;
    var10 = var8[var1];
    var9 = metroImportAll;
    var1 = undefined;
    var9 = var9.bind(var1)(var10);
    var9 = 1;
    var9 = var8[var9];
    var9 = var7.bind(var1)(var9);
    var10 = var9.jsx;
    var _closure1_slot3 = var10;
    var9 = var9.jsxs;
    var _closure1_slot4 = var9;
    var6 = var6.Math;
    var9 = var6.PI;
    var6 = 180;
    var6 = var9 / var6;
    var _closure1_slot5 = var6;
    var6 = 3;
    var6 = var8[var6];
    var8 = var7.bind(var1)(var6);
    var7 = var8.fileFinishedImporting;
    var6 = 'uikit-native/experimental/CircleWithCutout.tsx';
    var6 = var7.bind(var8)(var6);
    var6 = function CircleWithCutout(arg1) {
        _fun0001: for(var _fun0001_ip = 0; ; ) switch(_fun0001_ip) {
case 0:
            var1 = arg1;
            var11 = var1.circleRadius;
            var19 = var1.cutoutRadius;
            var10 = var1.enableCutout;
            var2 = var1.cutoutPositionInDegrees;
            var9 = var1.circleFillColor;
            var12 = 2;
            var18 = var12 * var11;
            var1 = _closure1_slot6;
            var4 = undefined;
            var21 = var1.bind(var4)(var11, var2);
            var1 = _closure1_slot7;
            var20 = var1.bind(var4)(var11, var2);
            var3 = _closure1_slot4;
            var2 = _closure1_slot1;
            var6 = _closure1_slot2;
            var1 = var6[var12];
            var2 = var2.bind(var4)(var1);
            var1 = {};
            var1['height'] = var18;
            var1['width'] = var18;
            var8 = _closure1_slot3;
            var7 = _closure1_slot0;
            var5 = var6[var12];
            var5 = var7.bind(var4)(var5);
            var13 = var5.Defs;
            var5 = {};
            var14 = var6[var12];
            var14 = var7.bind(var4)(var14);
            var15 = var14.Mask;
            var14 = {};
            var16 = 'mask';
            var14['id'] = var16;
            var16 = var6[var12];
            var16 = var7.bind(var4)(var16);
            var17 = var16.Rect;
            var16 = {};
            var16['width'] = var18;
            var16['height'] = var18;
            var18 = 'white';
            var16['fill'] = var18;
            var17 = var8.bind(var4)(var17, var16);
            var16 = new Array(2);
            var16[0] = var17;
            var17 = var6[var12];
            var17 = var7.bind(var4)(var17);
            var18 = var17.Circle;
            var17 = {};
            var17['cx'] = var21;
            var17['cy'] = var20;
            var17['r'] = var19;
            var19 = 'black';
            var17['fill'] = var19;
            var17 = var8.bind(var4)(var18, var17);
            var16[1] = var17;
            var14['children'] = var16;
            var14 = var3.bind(var4)(var15, var14);
            var5['children'] = var14;
            var13 = var8.bind(var4)(var13, var5);
            var5 = new Array(2);
            var5[0] = var13;
            var6 = var6[var12];
            var6 = var7.bind(var4)(var6);
            var7 = var6.Circle;
            var6 = {};
            var6['cx'] = var11;
            var6['cy'] = var11;
            var6['r'] = var11;
            var6['fill'] = var9;
            var9 = undefined;
            if(!var10) { _fun0001_ip = 2; continue _fun0001 }
case 3:
            var9 = 'url(#mask)';
case 2:
            var6['mask'] = var9;
            var6 = var8.bind(var4)(var7, var6);
            var5[1] = var6;
            var1['children'] = var5;
            var1 = var3.bind(var4)(var2, var1);
            return var1;
        }
    };
    var3['default'] = var6;
    var6 = function getBadgeTop(arg1, arg2, arg3) {
        var4 = _closure1_slot7;
        var3 = undefined;
        var2 = arg2;
        var1 = arg3;
        var2 = var4.bind(var3)(var2, var1);
        var1 = arg1;
        var1 = var2 - var1;
        return var1;
    };
    var3['getBadgeTop'] = var6;
    var5 = function getBadgeLeft(arg1, arg2, arg3) {
        var4 = _closure1_slot6;
        var3 = undefined;
        var2 = arg2;
        var1 = arg3;
        var2 = var4.bind(var3)(var2, var1);
        var1 = arg1;
        var1 = var2 - var1;
        return var1;
    };
    var3['getBadgeLeft'] = var5;
    var3['getCutoutCenterX'] = var4;
    var3['getCutoutCenterY'] = var2;
    return var1;
})();