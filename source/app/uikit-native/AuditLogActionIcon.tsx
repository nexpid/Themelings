// app/uikit-native/AuditLogActionIcon.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    report = argBar;
    foxtra = argBaz;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    var _closure1_slot1 = foxtra;
    var _closure1_slot2 = oscard;
    entity = function(argFoo) { // Original name: AuditIcons
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            entity = argFoo;
            zuuluu = entity.action;
            entity = _closure1_slot10;
            tangon = undefined;
            offset = entity.bind(tangon)();
            entity = _closure1_slot5;
            michal = entity.bind(tangon)(zuuluu);
            entity = _closure1_slot6;
            entity = entity.CREATE;
            if(!(entity !== michal)) { _fun00002_ip = 118; continue _fun00001 }
 44:
            entity = _closure1_slot6;
            entity = entity.UPDATE;
            if(!(entity !== michal)) { _fun00002_ip = 96; continue _fun00001 }
 58:
            entity = _closure1_slot6;
            entity = entity.DELETE;
            verify = null;
            if(!(entity === michal)) { _fun00002_ip = 138; continue _fun00001 }
 74:
            michal = _closure1_slot1;
            report = _closure1_slot2;
            entity = 28;
            entity = report[entity];
            verify = michal.bind(tangon)(entity);
            _fun00002_ip = 138; continue _fun00001;
 96:
            michal = _closure1_slot1;
            report = _closure1_slot2;
            entity = 27;
            entity = report[entity];
            verify = michal.bind(tangon)(entity);
            _fun00002_ip = 138; continue _fun00001;
 118:
            michal = _closure1_slot1;
            report = _closure1_slot2;
            entity = 26;
            entity = report[entity];
            verify = michal.bind(tangon)(entity);
 138:
            entity = _closure1_slot4;
            michal = entity.bind(tangon)(zuuluu);
            entity = _closure1_slot7;
            entity = entity.MESSAGE_DELETE;
            if(!(zuuluu !== entity)) { _fun00002_ip = 255; continue _fun00001 }
 161:
            entity = _closure1_slot7;
            entity = entity.AUTO_MODERATION_BLOCK_MESSAGE;
            if(!(zuuluu !== entity)) { _fun00002_ip = 227; continue _fun00001 }
 175:
            entity = _closure1_slot7;
            entity = entity.AUTO_MODERATION_FLAG_TO_CHANNEL;
            if(!(zuuluu !== entity)) { _fun00002_ip = 227; continue _fun00001 }
 189:
            entity = _closure1_slot7;
            entity = entity.AUTO_MODERATION_USER_COMMUNICATION_DISABLED;
            if(!(zuuluu !== entity)) { _fun00002_ip = 227; continue _fun00001 }
 203:
            entity = _closure1_slot7;
            entity = entity.AUTO_MODERATION_QUARANTINE_USER;
            if(!(zuuluu !== entity)) { _fun00002_ip = 227; continue _fun00001 }
 217:
            entity = _closure1_slot11;
            option = entity[michal];
            _fun00002_ip = 253; continue _fun00001;
 227:
            michal = _closure1_slot0;
            zuuluu = _closure1_slot2;
            entity = 25;
            entity = zuuluu[entity];
            entity = michal.bind(tangon)(entity);
            option = entity.RobotIcon;
 253:
            _fun00002_ip = 281; continue _fun00001;
 255:
            michal = _closure1_slot0;
            zuuluu = _closure1_slot2;
            entity = 24;
            entity = zuuluu[entity];
            entity = michal.bind(tangon)(entity);
            option = entity.ChatIcon;
 281:
            zuuluu = _closure1_slot9;
            michal = _closure1_slot3;
            entity = {};
            report = offset.actionImageContainer;
            entity['style'] = report;
            golfie = _closure1_slot8;
            report = {};
            yankee = 'custom';
            report['size'] = yankee;
            yankee = offset.iconComponent;
            report['style'] = yankee;
            golfie = golfie.bind(tangon)(option, report);
            report = new Array(3);
            report[0] = golfie;
            yankee = _closure1_slot8;
            option = _closure1_slot3;
            golfie = {};
            foxtra = offset.actionImageOverlay;
            romeon = new Array(2);
            romeon[0] = foxtra;
            foxtra = offset.actionImage;
            romeon[1] = foxtra;
            golfie['style'] = romeon;
            golfie = yankee.bind(tangon)(option, golfie);
            report[1] = golfie;
            option = _closure1_slot8;
            golfie = _closure1_slot1;
            yankee = _closure1_slot2;
            oscard = 29;
            oscard = yankee[oscard];
            golfie = golfie.bind(tangon)(oscard);
            oscard = {};
            offset = offset.actionImage;
            oscard['style'] = offset;
            oscard['source'] = verify;
            verify = true;
            oscard['disableColor'] = verify;
            oscard = option.bind(tangon)(golfie, oscard);
            report[2] = oscard;
            entity['children'] = report;
            entity = zuuluu.bind(tangon)(michal, entity);
            return entity;
        }
    };
    var _closure1_slot12 = entity;
    entity = global;
    option = entity.Object;
    golfie = option.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(option)(zuuluu, entity, tangon);
    entity = 0;
    golfie = oscard[entity];
    tangon = argCor;
    entity = undefined;
    tangon = tangon.bind(entity)(golfie);
    tangon = 1;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.View;
    var _closure1_slot3 = tangon;
    tangon = 2;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    golfie = tangon.getTargetType;
    var _closure1_slot4 = golfie;
    tangon = tangon.getActionType;
    var _closure1_slot5 = tangon;
    tangon = 3;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    golfie = tangon.AuditLogTargetTypes;
    option = tangon.AuditLogActionTypes;
    var _closure1_slot6 = option;
    tangon = tangon.AuditLogActions;
    var _closure1_slot7 = tangon;
    tangon = 4;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    option = tangon.jsx;
    var _closure1_slot8 = option;
    tangon = tangon.jsxs;
    var _closure1_slot9 = tangon;
    tangon = 5;
    tangon = oscard[tangon];
    yankee = report.bind(entity)(tangon);
    verify = yankee.createStyles;
    tangon = {};
    option = {'height': 24, 'width': 24};
    tangon['actionImageContainer'] = option;
    option = {'borderRadius': null, 'width': 13, 'height': 13, 'bottom': 0, 'right': 0};
    romeon = 6;
    offset = oscard[romeon];
    offset = foxtra.bind(entity)(offset);
    offset = offset.radii;
    offset = offset.round;
    option['borderRadius'] = offset;
    offset = 13;
    romeon = oscard[romeon];
    romeon = foxtra.bind(entity)(romeon);
    romeon = romeon.colors;
    romeon = romeon.BACKGROUND_SECONDARY;
    option['backgroundColor'] = romeon;
    tangon['actionImageOverlay'] = option;
    option = 22;
    romeon = {'width': 22, 'height': 22};
    tangon['iconComponent'] = romeon;
    romeon = {};
    foxtra = 'absolute';
    romeon['position'] = foxtra;
    tangon['actionImage'] = romeon;
    tangon = verify.bind(yankee)(tangon);
    var _closure1_slot10 = tangon;
    tangon = {};
    yankee = golfie.ALL;
    verify = 7;
    verify = oscard[verify];
    verify = report.bind(entity)(verify);
    verify = verify.ListBulletsIcon;
    tangon[yankee] = verify;
    romeon = golfie.CHANNEL;
    verify = 8;
    yankee = oscard[verify];
    yankee = report.bind(entity)(yankee);
    yankee = yankee.ChannelListIcon;
    tangon[romeon] = yankee;
    romeon = golfie.CHANNEL_OVERWRITE;
    yankee = oscard[verify];
    yankee = report.bind(entity)(yankee);
    yankee = yankee.ChannelListIcon;
    tangon[romeon] = yankee;
    romeon = golfie.EMOJI;
    yankee = 9;
    yankee = oscard[yankee];
    yankee = report.bind(entity)(yankee);
    yankee = yankee.ReactionIcon;
    tangon[romeon] = yankee;
    foxtra = golfie.GUILD;
    yankee = 10;
    romeon = oscard[yankee];
    romeon = report.bind(entity)(romeon);
    romeon = romeon.CircleInformationIcon;
    tangon[foxtra] = romeon;
    romeon = golfie.GUILD_PROFILE;
    yankee = oscard[yankee];
    yankee = report.bind(entity)(yankee);
    yankee = yankee.CircleInformationIcon;
    tangon[romeon] = yankee;
    romeon = golfie.INTEGRATION;
    yankee = 11;
    yankee = oscard[yankee];
    yankee = report.bind(entity)(yankee);
    yankee = yankee.PuzzlePieceIcon;
    tangon[romeon] = yankee;
    romeon = golfie.INVITE;
    yankee = 12;
    yankee = oscard[yankee];
    yankee = report.bind(entity)(yankee);
    yankee = yankee.LinkIcon;
    tangon[romeon] = yankee;
    yankee = golfie.ROLE;
    offset = oscard[offset];
    offset = report.bind(entity)(offset);
    offset = offset.FlagIcon;
    tangon[yankee] = offset;
    romeon = golfie.USER;
    offset = 14;
    yankee = oscard[offset];
    yankee = report.bind(entity)(yankee);
    yankee = yankee.GroupIcon;
    tangon[romeon] = yankee;
    foxtra = golfie.WEBHOOK;
    yankee = 15;
    romeon = oscard[yankee];
    romeon = report.bind(entity)(romeon);
    romeon = romeon.WebhookIcon;
    tangon[foxtra] = romeon;
    foxtra = golfie.STAGE_INSTANCE;
    romeon = 16;
    romeon = oscard[romeon];
    romeon = report.bind(entity)(romeon);
    romeon = romeon.StageIcon;
    tangon[foxtra] = romeon;
    backup = golfie.GUILD_SCHEDULED_EVENT;
    romeon = 17;
    foxtra = oscard[romeon];
    foxtra = report.bind(entity)(foxtra);
    foxtra = foxtra.CalendarIcon;
    tangon[backup] = foxtra;
    foxtra = golfie.GUILD_SCHEDULED_EVENT_EXCEPTION;
    romeon = oscard[romeon];
    romeon = report.bind(entity)(romeon);
    romeon = romeon.CalendarIcon;
    tangon[foxtra] = romeon;
    foxtra = golfie.THREAD;
    romeon = 18;
    romeon = oscard[romeon];
    romeon = report.bind(entity)(romeon);
    romeon = romeon.ThreadIcon;
    tangon[foxtra] = romeon;
    foxtra = golfie.STICKER;
    romeon = 19;
    romeon = oscard[romeon];
    romeon = report.bind(entity)(romeon);
    romeon = romeon.StickerIcon;
    tangon[foxtra] = romeon;
    foxtra = golfie.APPLICATION_COMMAND;
    romeon = 20;
    romeon = oscard[romeon];
    romeon = report.bind(entity)(romeon);
    romeon = romeon.SlashBoxIcon;
    tangon[foxtra] = romeon;
    romeon = golfie.AUTO_MODERATION_RULE;
    yankee = oscard[yankee];
    yankee = report.bind(entity)(yankee);
    yankee = yankee.WebhookIcon;
    tangon[romeon] = yankee;
    romeon = golfie.GUILD_SOUNDBOARD;
    yankee = 21;
    yankee = oscard[yankee];
    yankee = report.bind(entity)(yankee);
    yankee = yankee.SoundboardIcon;
    tangon[romeon] = yankee;
    romeon = golfie.ONBOARDING_PROMPT;
    yankee = oscard[offset];
    yankee = report.bind(entity)(yankee);
    yankee = yankee.GroupIcon;
    tangon[romeon] = yankee;
    romeon = golfie.GUILD_ONBOARDING;
    yankee = oscard[offset];
    yankee = report.bind(entity)(yankee);
    yankee = yankee.GroupIcon;
    tangon[romeon] = yankee;
    romeon = golfie.HOME_SETTINGS;
    yankee = oscard[offset];
    yankee = report.bind(entity)(yankee);
    yankee = yankee.GroupIcon;
    tangon[romeon] = yankee;
    yankee = golfie.GUILD_MEMBER_VERIFICATION;
    offset = oscard[offset];
    offset = report.bind(entity)(offset);
    offset = offset.GroupIcon;
    tangon[yankee] = offset;
    offset = golfie.VOICE_CHANNEL_STATUS;
    verify = oscard[verify];
    verify = report.bind(entity)(verify);
    verify = verify.ChannelListIcon;
    tangon[offset] = verify;
    verify = golfie.GUILD_HOME;
    option = oscard[option];
    option = report.bind(entity)(option);
    option = option.HomeIcon;
    tangon[verify] = option;
    option = golfie.UNKNOWN;
    golfie = 23;
    golfie = oscard[golfie];
    golfie = report.bind(entity)(golfie);
    golfie = golfie.CircleQuestionIcon;
    tangon[option] = golfie;
    var _closure1_slot11 = tangon;
    tangon = 30;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'uikit-native/AuditLogActionIcon.tsx';
    tangon = report.bind(oscard)(tangon);
    michal = function(argFoo) { // Original name: AuditLogActionIcon
        entity = _closure1_slot10;
        tangon = undefined;
        oscard = entity.bind(tangon)();
        entity = argFoo;
        option = entity.action;
        zuuluu = _closure1_slot8;
        michal = _closure1_slot3;
        entity = {};
        oscard = oscard.actionImageContainer;
        entity['style'] = oscard;
        golfie = _closure1_slot8;
        oscard = _closure1_slot12;
        report = {};
        report['action'] = option;
        report = golfie.bind(tangon)(oscard, report);
        entity['children'] = report;
        entity = zuuluu.bind(tangon)(michal, entity);
        return entity;
    };
    zuuluu['default'] = michal;
    return entity;
})();