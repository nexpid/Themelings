// app/actions/MFAActionCreators.tsx
export default (function(argFoo, argBar, argBaz, _, __, argFre, argPlu) {
    report = argBar;
    golfie = argBaz;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    var _closure1_slot1 = golfie;
    var _closure1_slot2 = oscard;
    entity = function(argFoo, argBar) { // Original name: toggleSMS
        oscard = _closure1_slot1;
        report = _closure1_slot2;
        zuuluu = 3;
        zuuluu = report[zuuluu];
        tangon = undefined;
        golfie = oscard.bind(tangon)(zuuluu);
        oscard = golfie.dispatch;
        zuuluu = {};
        option = 'MFA_SMS_TOGGLE';
        zuuluu['type'] = option;
        zuuluu = oscard.bind(golfie)(zuuluu);
        zuuluu = _closure1_slot0;
        michal = 4;
        michal = report[michal];
        michal = zuuluu.bind(tangon)(michal);
        tangon = michal.HTTP;
        zuuluu = tangon.post;
        michal = {};
        report = argFoo;
        michal['url'] = report;
        report = {};
        oscard = argBar;
        report['password'] = oscard;
        michal['body'] = report;
        report = true;
        michal['oldFormErrors'] = report;
        report = false;
        michal['rejectWithError'] = report;
        tangon = zuuluu.bind(tangon)(michal);
        zuuluu = tangon.then;
        michal = function(argFoo) {
            zuuluu = _closure1_slot1;
            michal = _closure1_slot2;
            entity = 3;
            michal = michal[entity];
            entity = undefined;
            zuuluu = zuuluu.bind(entity)(michal);
            michal = zuuluu.dispatch;
            entity = {};
            tangon = 'MFA_SMS_TOGGLE_COMPLETE';
            entity['type'] = tangon;
            entity = michal.bind(zuuluu)(entity);
            entity = argFoo;
            return entity;
        };
        entity = function(argFoo) {
            zuuluu = _closure1_slot1;
            michal = _closure1_slot2;
            entity = 3;
            michal = michal[entity];
            entity = undefined;
            zuuluu = zuuluu.bind(entity)(michal);
            michal = zuuluu.dispatch;
            entity = {};
            tangon = 'MFA_SMS_TOGGLE_COMPLETE';
            entity['type'] = tangon;
            entity = michal.bind(zuuluu)(entity);
            entity = argFoo;
            throw entity;
        };
        entity = zuuluu.bind(tangon)(michal, entity);
        return entity;
    };
    var _closure1_slot6 = entity;
    entity = global;
    verify = entity.Object;
    option = verify.defineProperty;
    michal = {};
    entity = true;
    michal['value'] = entity;
    entity = '__esModule';
    entity = option.bind(verify)(zuuluu, entity, michal);
    entity = 0;
    michal = oscard[entity];
    entity = undefined;
    michal = golfie.bind(entity)(michal);
    var _closure1_slot3 = michal;
    michal = 1;
    michal = oscard[michal];
    michal = golfie.bind(entity)(michal);
    var _closure1_slot4 = michal;
    michal = 2;
    michal = oscard[michal];
    michal = report.bind(entity)(michal);
    michal = michal.Endpoints;
    var _closure1_slot5 = michal;
    michal = {};
    golfie = function(argFoo) { // Original name: enableMFAStart
        michal = argFoo;
        var _closure2_slot0 = michal;
        zuuluu = _closure1_slot3;
        michal = undefined;
        entity = function* () {
            entity = function* () { // Original name: ?anon_0_
                _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
                    StartGenerator();
                    ResumeGenerator(result_out_reg=0, return_bool_out_reg=1);
                    if(michal) { _fun00002_ip = 116; continue _fun00001 }
 7:
                    tangon = _closure1_slot0;
                    zuuluu = _closure1_slot2;
                    michal = 4;
                    zuuluu = zuuluu[michal];
                    michal = undefined;
                    michal = tangon.bind(michal)(zuuluu);
                    tangon = michal.HTTP;
                    zuuluu = tangon.post;
                    michal = {};
                    report = _closure1_slot5;
                    report = report.MFA_TOTP_ENABLE;
                    michal['url'] = report;
                    report = {};
                    oscard = _closure2_slot0;
                    report['password'] = oscard;
                    michal['body'] = report;
                    report = true;
                    michal['oldFormErrors'] = report;
                    report = false;
                    michal['rejectWithError'] = report;
                    michal = zuuluu.bind(tangon)(michal);
                    SaveGenerator(address=99);
 97:
                    return michal;
 99:
                    ResumeGenerator(result_out_reg=1, return_bool_out_reg=2);
                    if(zuuluu) { _fun00002_ip = 113; continue _fun00001 }
 105:
                    zuuluu = michal.body;
                    return zuuluu;
 113:
                    return michal;
 116:
                    return entity;
                }
            };
            return entity;
        };
        entity = zuuluu.bind(michal)(entity);
        entity = entity.bind(michal)();
        return entity;
    };
    michal['enableMFAStart'] = golfie;
    golfie = function(argFoo) { // Original name: enable
        entity = argFoo;
        report = entity.password;
        golfie = entity.code;
        oscard = entity.secret;
        zuuluu = _closure1_slot0;
        michal = _closure1_slot2;
        entity = 4;
        michal = michal[entity];
        entity = undefined;
        entity = zuuluu.bind(entity)(michal);
        zuuluu = entity.HTTP;
        michal = zuuluu.post;
        entity = {};
        tangon = _closure1_slot5;
        tangon = tangon.MFA_TOTP_ENABLE;
        entity['url'] = tangon;
        tangon = {};
        tangon['code'] = golfie;
        tangon['secret'] = oscard;
        tangon['password'] = report;
        entity['body'] = tangon;
        tangon = true;
        entity['oldFormErrors'] = tangon;
        tangon = false;
        entity['rejectWithError'] = tangon;
        zuuluu = michal.bind(zuuluu)(entity);
        michal = zuuluu.then;
        entity = function(argFoo) {
            tangon = argFoo;
            zuuluu = _closure1_slot1;
            michal = _closure1_slot2;
            entity = 3;
            michal = michal[entity];
            entity = undefined;
            zuuluu = zuuluu.bind(entity)(michal);
            michal = zuuluu.dispatch;
            entity = {};
            report = 'MFA_ENABLE_SUCCESS';
            entity['type'] = report;
            report = tangon.body;
            report = report.token;
            entity['token'] = report;
            tangon = tangon.body;
            tangon = tangon.backup_codes;
            entity['codes'] = tangon;
            entity = michal.bind(zuuluu)(entity);
            return entity;
        };
        entity = michal.bind(zuuluu)(entity);
        return entity;
    };
    michal['enable'] = golfie;
    golfie = function() { // Original name: disable
        zuuluu = _closure1_slot0;
        michal = _closure1_slot2;
        entity = 4;
        michal = michal[entity];
        entity = undefined;
        michal = zuuluu.bind(entity)(michal);
        tangon = michal.HTTP;
        zuuluu = tangon.post;
        michal = {'url': null, 'oldFormErrors': true, 'rejectWithError': false};
        report = _closure1_slot5;
        report = report.MFA_TOTP_DISABLE;
        michal['url'] = report;
        tangon = zuuluu.bind(tangon)(michal);
        zuuluu = tangon.then;
        michal = function(argFoo) {
            entity = argFoo;
            entity = entity.body;
            tangon = entity.token;
            zuuluu = _closure1_slot1;
            michal = _closure1_slot2;
            entity = 3;
            michal = michal[entity];
            entity = undefined;
            zuuluu = zuuluu.bind(entity)(michal);
            michal = zuuluu.dispatch;
            entity = {};
            report = 'MFA_DISABLE_SUCCESS';
            entity['type'] = report;
            entity['token'] = tangon;
            entity = michal.bind(zuuluu)(entity);
            return entity;
        };
        michal = zuuluu.bind(tangon)(michal);
        return entity;
    };
    michal['disable'] = golfie;
    golfie = function(argFoo) { // Original name: enableSMS
        tangon = _closure1_slot6;
        entity = _closure1_slot5;
        zuuluu = entity.MFA_SMS_ENABLE;
        michal = undefined;
        entity = argFoo;
        entity = tangon.bind(michal)(zuuluu, entity);
        return entity;
    };
    michal['enableSMS'] = golfie;
    golfie = function(argFoo) { // Original name: disableSMS
        tangon = _closure1_slot6;
        entity = _closure1_slot5;
        zuuluu = entity.MFA_SMS_DISABLE;
        michal = undefined;
        entity = argFoo;
        entity = tangon.bind(michal)(zuuluu, entity);
        return entity;
    };
    michal['disableSMS'] = golfie;
    golfie = function(argFoo) { // Original name: sendMFABackupCodesVerificationKeyEmail
        tangon = _closure1_slot0;
        zuuluu = _closure1_slot2;
        michal = 4;
        zuuluu = zuuluu[michal];
        michal = undefined;
        michal = tangon.bind(michal)(zuuluu);
        tangon = michal.HTTP;
        zuuluu = tangon.post;
        michal = {};
        report = _closure1_slot5;
        report = report.MFA_SEND_VERIFICATION_KEY;
        michal['url'] = report;
        report = {};
        oscard = argFoo;
        report['password'] = oscard;
        michal['body'] = report;
        report = true;
        michal['oldFormErrors'] = report;
        report = false;
        michal['rejectWithError'] = report;
        tangon = zuuluu.bind(tangon)(michal);
        zuuluu = tangon.then;
        michal = function(argFoo) {
            report = argFoo;
            zuuluu = _closure1_slot1;
            michal = _closure1_slot2;
            entity = 3;
            michal = michal[entity];
            entity = undefined;
            zuuluu = zuuluu.bind(entity)(michal);
            michal = zuuluu.dispatch;
            entity = {};
            tangon = 'MFA_SEND_VERIFICATION_KEY';
            entity['type'] = tangon;
            tangon = {};
            oscard = report.body;
            oscard = oscard.nonce;
            tangon['viewNonce'] = oscard;
            report = report.body;
            report = report.regenerate_nonce;
            tangon['regenerateNonce'] = report;
            entity['nonces'] = tangon;
            entity = michal.bind(zuuluu)(entity);
            return entity;
        };
        entity = function(argFoo) {
            entity = argFoo;
            throw entity;
        };
        entity = zuuluu.bind(tangon)(michal, entity);
        return entity;
    };
    michal['sendMFABackupCodesVerificationKeyEmail'] = golfie;
    golfie = function(argFoo, argBar) { // Original name: confirmViewBackupCodes
        _fun00003: for(var _fun00004_ip = 0; ; ) switch(_fun00004_ip) {
 0:
            option = argFoo;
            oscard = argBar;
            var _closure2_slot0 = option;
            zuuluu = _closure1_slot4;
            michal = zuuluu.getNonces;
            michal = michal.bind(zuuluu)();
            golfie = michal.viewNonce;
            michal = michal.regenerateNonce;
            if(!oscard) { _fun00004_ip = 49; continue _fun00003 }
 46:
            golfie = michal;
 49:
            tangon = _closure1_slot0;
            zuuluu = _closure1_slot2;
            michal = 4;
            zuuluu = zuuluu[michal];
            michal = undefined;
            michal = tangon.bind(michal)(zuuluu);
            tangon = michal.HTTP;
            zuuluu = tangon.post;
            michal = {};
            report = _closure1_slot5;
            report = report.MFA_CODES_VERIFICATION;
            michal['url'] = report;
            report = {};
            report['key'] = option;
            report['nonce'] = golfie;
            report['regenerate'] = oscard;
            michal['body'] = report;
            report = true;
            michal['oldFormErrors'] = report;
            report = false;
            michal['rejectWithError'] = report;
            tangon = zuuluu.bind(tangon)(michal);
            zuuluu = tangon.then;
            michal = function(argFoo) {
                zuuluu = _closure1_slot1;
                michal = _closure1_slot2;
                entity = 3;
                michal = michal[entity];
                entity = undefined;
                zuuluu = zuuluu.bind(entity)(michal);
                michal = zuuluu.dispatch;
                entity = {};
                tangon = 'MFA_VIEW_BACKUP_CODES';
                entity['type'] = tangon;
                tangon = argFoo;
                tangon = tangon.body;
                tangon = tangon.backup_codes;
                entity['codes'] = tangon;
                tangon = _closure2_slot0;
                entity['key'] = tangon;
                entity = michal.bind(zuuluu)(entity);
                return entity;
            };
            entity = function(argFoo) {
                entity = argFoo;
                throw entity;
            };
            entity = zuuluu.bind(tangon)(michal, entity);
            return entity;
        }
    };
    michal['confirmViewBackupCodes'] = golfie;
    tangon = function() { // Original name: clearBackupCodes
        zuuluu = _closure1_slot1;
        michal = _closure1_slot2;
        entity = 3;
        michal = michal[entity];
        entity = undefined;
        tangon = zuuluu.bind(entity)(michal);
        zuuluu = tangon.dispatch;
        michal = {};
        report = 'MFA_CLEAR_BACKUP_CODES';
        michal['type'] = report;
        michal = zuuluu.bind(tangon)(michal);
        return entity;
    };
    michal['clearBackupCodes'] = tangon;
    tangon = 5;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'actions/MFAActionCreators.tsx';
    tangon = report.bind(oscard)(tangon);
    zuuluu['default'] = michal;
    return entity;
})();