// app/actions/NotificationActionCreators.tsx
export default (function(argFoo, argBar, argBaz, argCorge, argGrault, argFred, argPlugh) {
    zulu = argFred;
    tango = argPlugh;
    mike = argBaz;
    var _closure1_slot0 = mike;
    var _closure1_slot1 = tango;
    mike = global;
    golf = mike.Object;
    oscar = golf.defineProperty;
    report = {};
    mike = true;
    report['value'] = mike;
    mike = '__esModule';
    mike = oscar.bind(golf)(zulu, mike, report);
    mike = {};
    report = function(argFoo) { // Original name: setDesktopType
        zulu = _closure1_slot0;
        mike = _closure1_slot1;
        entity = 0;
        mike = mike[entity];
        entity = undefined;
        tango = zulu.bind(entity)(mike);
        zulu = tango.dispatch;
        mike = {};
        report = 'NOTIFICATIONS_SET_DESKTOP_TYPE';
        mike['type'] = report;
        report = argFoo;
        mike['desktopType'] = report;
        mike = zulu.bind(tango)(mike);
        return entity;
    };
    mike['setDesktopType'] = report;
    report = function(argFoo) { // Original name: setTTSType
        zulu = _closure1_slot0;
        mike = _closure1_slot1;
        entity = 0;
        mike = mike[entity];
        entity = undefined;
        tango = zulu.bind(entity)(mike);
        zulu = tango.dispatch;
        mike = {};
        report = 'NOTIFICATIONS_SET_TTS_TYPE';
        mike['type'] = report;
        report = argFoo;
        mike['ttsType'] = report;
        mike = zulu.bind(tango)(mike);
        return entity;
    };
    mike['setTTSType'] = report;
    report = function(argFoo) { // Original name: setDisabledSounds
        zulu = _closure1_slot0;
        mike = _closure1_slot1;
        entity = 0;
        mike = mike[entity];
        entity = undefined;
        tango = zulu.bind(entity)(mike);
        zulu = tango.dispatch;
        mike = {};
        report = 'NOTIFICATIONS_SET_DISABLED_SOUNDS';
        mike['type'] = report;
        report = argFoo;
        mike['sounds'] = report;
        mike = zulu.bind(tango)(mike);
        return entity;
    };
    mike['setDisabledSounds'] = report;
    report = function() { // Original name: toggleDisableAllSounds
        zulu = _closure1_slot0;
        mike = _closure1_slot1;
        entity = 0;
        mike = mike[entity];
        entity = undefined;
        tango = zulu.bind(entity)(mike);
        zulu = tango.dispatch;
        mike = {};
        report = 'NOTIFICATIONS_TOGGLE_ALL_DISABLED';
        mike['type'] = report;
        mike = zulu.bind(tango)(mike);
        return entity;
    };
    mike['toggleDisableAllSounds'] = report;
    report = function(argFoo) { // Original name: setDisableUnreadBadge
        zulu = _closure1_slot0;
        mike = _closure1_slot1;
        entity = 0;
        mike = mike[entity];
        entity = undefined;
        tango = zulu.bind(entity)(mike);
        zulu = tango.dispatch;
        mike = {};
        report = 'NOTIFICATIONS_SET_DISABLE_UNREAD_BADGE';
        mike['type'] = report;
        report = argFoo;
        mike['disableUnreadBadge'] = report;
        mike = zulu.bind(tango)(mike);
        return entity;
    };
    mike['setDisableUnreadBadge'] = report;
    report = function(argFoo) { // Original name: setTaskbarFlash
        zulu = _closure1_slot0;
        mike = _closure1_slot1;
        entity = 0;
        mike = mike[entity];
        entity = undefined;
        tango = zulu.bind(entity)(mike);
        zulu = tango.dispatch;
        mike = {};
        report = 'NOTIFICATIONS_SET_TASKBAR_FLASH';
        mike['type'] = report;
        report = argFoo;
        mike['taskbarFlash'] = report;
        mike = zulu.bind(tango)(mike);
        return entity;
    };
    mike['setTaskbarFlash'] = report;
    report = function(argFoo) { // Original name: setNotifyMessagesInSelectedChannel
        zulu = _closure1_slot0;
        mike = _closure1_slot1;
        entity = 0;
        mike = mike[entity];
        entity = undefined;
        tango = zulu.bind(entity)(mike);
        zulu = tango.dispatch;
        mike = {};
        report = 'NOTIFICATIONS_SET_NOTIFY_MESSAGES_IN_SELECTED_CHANNEL';
        mike['type'] = report;
        report = argFoo;
        mike['notify'] = report;
        mike = zulu.bind(tango)(mike);
        return entity;
    };
    mike['setNotifyMessagesInSelectedChannel'] = report;
    report = function(argFoo, argBar) { // Original name: setPermissionsState
        zulu = _closure1_slot0;
        mike = _closure1_slot1;
        entity = 0;
        mike = mike[entity];
        entity = undefined;
        tango = zulu.bind(entity)(mike);
        zulu = tango.dispatch;
        mike = {};
        report = 'NOTIFICATIONS_SET_PERMISSION_STATE';
        mike['type'] = report;
        report = argFoo;
        mike['enabled'] = report;
        report = argBar;
        mike['source'] = report;
        mike = zulu.bind(tango)(mike);
        return entity;
    };
    mike['setPermissionsState'] = report;
    report = function(argFoo, argBar, argBaz, argCorge, argGrault) { // Original name: showNotification
        golf = argGrault;
        var _closure2_slot0 = golf;
        zulu = _closure1_slot0;
        mike = _closure1_slot1;
        entity = 0;
        mike = mike[entity];
        entity = undefined;
        tango = zulu.bind(entity)(mike);
        zulu = tango.dispatch;
        mike = {};
        report = 'NOTIFICATION_CREATE';
        mike['type'] = report;
        report = argFoo;
        mike['icon'] = report;
        report = argBar;
        mike['title'] = report;
        report = argBaz;
        mike['body'] = report;
        report = argCorge;
        mike['trackingProps'] = report;
        report = {};
        verify = report;
        options = golf;
        golf = copyDataProperties(verify, options);
        golf = function() { // Original name: onClick
            _fun124452: for(var _fun124452_ip = 0; ; ) switch(_fun124452_ip) {
 0:
                mike = _closure2_slot0;
                zulu = mike.onClick;
                mike = null;
                if(!(mike != zulu)) { _fun124452_ip = 33; continue _fun124452 }
 19:
                mike = _closure2_slot0;
                entity = mike.onClick;
                entity = entity.bind(mike)();
 33:
                zulu = _closure1_slot0;
                mike = _closure1_slot1;
                entity = 0;
                mike = mike[entity];
                entity = undefined;
                tango = zulu.bind(entity)(mike);
                zulu = tango.dispatch;
                mike = {};
                report = 'NOTIFICATION_CLICK';
                mike['type'] = report;
                mike = zulu.bind(tango)(mike);
                return entity;
            }
        };
        oscar = 'onClick';
        report[oscar] = golf;
        mike['options'] = report;
        mike = zulu.bind(tango)(mike);
        return entity;
    };
    mike['showNotification'] = report;
    entity = function() { // Original name: clickedNotification
        zulu = _closure1_slot0;
        mike = _closure1_slot1;
        entity = 0;
        mike = mike[entity];
        entity = undefined;
        tango = zulu.bind(entity)(mike);
        zulu = tango.dispatch;
        mike = {};
        report = 'NOTIFICATION_CLICK';
        mike['type'] = report;
        mike = zulu.bind(tango)(mike);
        return entity;
    };
    mike['clickedNotification'] = entity;
    entity = 1;
    report = tango[entity];
    tango = argBar;
    entity = undefined;
    oscar = tango.bind(entity)(report);
    report = oscar.fileFinishedImporting;
    tango = 'actions/NotificationActionCreators.tsx';
    tango = report.bind(oscar)(tango);
    zulu['default'] = mike;
    return entity;
})();