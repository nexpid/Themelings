// app/actions/native/KeyboardActionCreator.tsx
export default (function(argFoo, argBar, argBaz, _, __, argFred, argPlugh) {
    report = argBar;
    zulu = argFred;
    oscar = argPlugh;
    entity = argBaz;
    var _closure1_slot0 = entity;
    var _closure1_slot1 = oscar;
    entity = global;
    options = entity.Object;
    golf = options.defineProperty;
    tango = {};
    entity = true;
    tango['value'] = entity;
    entity = '__esModule';
    entity = golf.bind(options)(zulu, entity, tango);
    entity = 0;
    tango = oscar[entity];
    entity = undefined;
    tango = report.bind(entity)(tango);
    tango = tango.KeyboardTypes;
    var _closure1_slot2 = tango;
    tango = 2;
    tango = oscar[tango];
    oscar = report.bind(entity)(tango);
    report = oscar.fileFinishedImporting;
    tango = 'actions/native/KeyboardActionCreator.tsx';
    tango = report.bind(oscar)(tango);
    tango = function(argFoo) { // Original name: toggleKeyboard
        zulu = _closure1_slot0;
        mike = _closure1_slot1;
        entity = 1;
        mike = mike[entity];
        entity = undefined;
        tango = zulu.bind(entity)(mike);
        zulu = tango.dispatch;
        mike = {};
        report = 'KEYBOARD_TOGGLE';
        mike['type'] = report;
        report = argFoo;
        mike['params'] = report;
        mike = zulu.bind(tango)(mike);
        return entity;
    };
    zulu['toggleKeyboard'] = tango;
    mike = function(argFoo) { // Original name: toggleExpressionType
        zulu = _closure1_slot0;
        mike = _closure1_slot1;
        entity = 1;
        mike = mike[entity];
        entity = undefined;
        tango = zulu.bind(entity)(mike);
        zulu = tango.dispatch;
        mike = {};
        report = 'KEYBOARD_TOGGLE';
        mike['type'] = report;
        report = {};
        oscar = _closure1_slot2;
        oscar = oscar.EXPRESSION;
        report['keyboardType'] = oscar;
        oscar = argFoo;
        report['expressionType'] = oscar;
        mike['params'] = report;
        mike = zulu.bind(tango)(mike);
        return entity;
    };
    zulu['toggleExpressionType'] = mike;
    return entity;
})();