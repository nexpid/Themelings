// app/actions/ChangeVanityURLActionCreators.tsx
export default (function(argFoo, argBar, argBaz, _, __, argFred, argPlugh) {
    report = argBar;
    zulu = argFred;
    oscar = argPlugh;
    var _closure1_slot0 = report;
    entity = argBaz;
    var _closure1_slot1 = entity;
    var _closure1_slot2 = oscar;
    entity = global;
    options = entity.Object;
    golf = options.defineProperty;
    mike = {};
    entity = true;
    mike['value'] = entity;
    entity = '__esModule';
    entity = golf.bind(options)(zulu, entity, mike);
    entity = 0;
    mike = oscar[entity];
    entity = undefined;
    mike = report.bind(entity)(mike);
    mike = mike.Endpoints;
    var _closure1_slot3 = mike;
    mike = {};
    golf = function(argFoo, argBar) { // Original name: openModal
        zulu = _closure1_slot1;
        mike = _closure1_slot2;
        entity = 1;
        mike = mike[entity];
        entity = undefined;
        tango = zulu.bind(entity)(mike);
        zulu = tango.dispatch;
        mike = {};
        report = 'CHANGE_VANITY_URL_MODAL_OPEN';
        mike['type'] = report;
        report = argFoo;
        mike['guildId'] = report;
        report = argBar;
        mike['code'] = report;
        mike = zulu.bind(tango)(mike);
        return entity;
    };
    mike['openModal'] = golf;
    golf = function() { // Original name: closeModal
        zulu = _closure1_slot1;
        mike = _closure1_slot2;
        entity = 1;
        mike = mike[entity];
        entity = undefined;
        tango = zulu.bind(entity)(mike);
        zulu = tango.dispatch;
        mike = {};
        report = 'CHANGE_VANITY_URL_MODAL_CLOSE';
        mike['type'] = report;
        mike = zulu.bind(tango)(mike);
        return entity;
    };
    mike['closeModal'] = golf;
    golf = function(argFoo) { // Original name: removeVanityURL
        zulu = _closure1_slot0;
        mike = _closure1_slot2;
        entity = 2;
        mike = mike[entity];
        entity = undefined;
        entity = zulu.bind(entity)(mike);
        zulu = entity.HTTP;
        mike = zulu.patch;
        entity = {};
        oscar = _closure1_slot3;
        report = oscar.GUILD_VANITY_URL;
        tango = argFoo;
        tango = report.bind(oscar)(tango);
        entity['url'] = tango;
        tango = {};
        report = null;
        tango['code'] = report;
        entity['body'] = tango;
        tango = true;
        entity['oldFormErrors'] = tango;
        entity['rejectWithError'] = tango;
        zulu = mike.bind(zulu)(entity);
        mike = zulu.then;
        entity = function() {
            zulu = _closure1_slot1;
            mike = _closure1_slot2;
            entity = 1;
            mike = mike[entity];
            entity = undefined;
            tango = zulu.bind(entity)(mike);
            zulu = tango.dispatch;
            mike = {'type': 'GUILD_SETTINGS_SET_VANITY_URL', 'code': null, 'uses': 0};
            mike = zulu.bind(tango)(mike);
            return entity;
        };
        entity = mike.bind(zulu)(entity);
        return entity;
    };
    mike['removeVanityURL'] = golf;
    golf = function(argFoo, argBar) { // Original name: changeVanityURL
        mike = this;
        var _closure2_slot0 = mike;
        zulu = _closure1_slot1;
        oscar = _closure1_slot2;
        mike = 1;
        mike = oscar[mike];
        tango = undefined;
        golf = zulu.bind(tango)(mike);
        zulu = golf.dispatch;
        mike = {};
        options = 'CHANGE_VANITY_URL_MODAL_SUBMIT';
        mike['type'] = options;
        mike = zulu.bind(golf)(mike);
        zulu = _closure1_slot0;
        mike = 2;
        mike = oscar[mike];
        mike = zulu.bind(tango)(mike);
        tango = mike.HTTP;
        zulu = tango.patch;
        mike = {};
        golf = _closure1_slot3;
        oscar = golf.GUILD_VANITY_URL;
        report = argFoo;
        report = oscar.bind(golf)(report);
        mike['url'] = report;
        report = {};
        oscar = argBar;
        report['code'] = oscar;
        mike['body'] = report;
        report = true;
        mike['oldFormErrors'] = report;
        mike['rejectWithError'] = report;
        tango = zulu.bind(tango)(mike);
        zulu = tango.then;
        mike = function(argFoo) {
            entity = argFoo;
            entity = entity.body;
            oscar = entity.code;
            report = entity.uses;
            zulu = _closure1_slot1;
            mike = _closure1_slot2;
            entity = 1;
            mike = mike[entity];
            entity = undefined;
            tango = zulu.bind(entity)(mike);
            zulu = tango.dispatch;
            mike = {};
            golf = 'GUILD_SETTINGS_SET_VANITY_URL';
            mike['type'] = golf;
            mike['code'] = oscar;
            mike['uses'] = report;
            mike = zulu.bind(tango)(mike);
            zulu = _closure2_slot0;
            mike = zulu.closeModal;
            mike = mike.bind(zulu)();
            return entity;
        };
        entity = function(argFoo) {
            entity = argFoo;
            tango = _closure1_slot1;
            zulu = _closure1_slot2;
            mike = 1;
            zulu = zulu[mike];
            mike = undefined;
            tango = tango.bind(mike)(zulu);
            zulu = tango.dispatch;
            mike = {'type': 'CHANGE_VANITY_URL_MODAL_SUBMIT_FAILURE', 'error': null, 'hasError': true};
            report = entity.body;
            mike['error'] = report;
            mike = zulu.bind(tango)(mike);
            return entity;
        };
        entity = zulu.bind(tango)(mike, entity);
        return entity;
    };
    mike['changeVanityURL'] = golf;
    tango = function(argFoo, argBar) { // Original name: setVanityURL
        tango = _closure1_slot0;
        zulu = _closure1_slot2;
        mike = 2;
        zulu = zulu[mike];
        mike = undefined;
        mike = tango.bind(mike)(zulu);
        tango = mike.HTTP;
        zulu = tango.patch;
        mike = {};
        golf = _closure1_slot3;
        oscar = golf.GUILD_VANITY_URL;
        report = argFoo;
        report = oscar.bind(golf)(report);
        mike['url'] = report;
        report = {};
        oscar = argBar;
        report['code'] = oscar;
        mike['body'] = report;
        report = true;
        mike['oldFormErrors'] = report;
        report = false;
        mike['rejectWithError'] = report;
        tango = zulu.bind(tango)(mike);
        zulu = tango.then;
        mike = function(argFoo) {
            entity = argFoo;
            entity = entity.body;
            oscar = entity.code;
            report = entity.uses;
            zulu = _closure1_slot1;
            mike = _closure1_slot2;
            entity = 1;
            mike = mike[entity];
            entity = undefined;
            tango = zulu.bind(entity)(mike);
            zulu = tango.dispatch;
            mike = {};
            golf = 'GUILD_SETTINGS_SET_VANITY_URL';
            mike['type'] = golf;
            mike['code'] = oscar;
            mike['uses'] = report;
            mike = zulu.bind(tango)(mike);
            return entity;
        };
        entity = function(argFoo) {
            entity = argFoo;
            tango = _closure1_slot1;
            zulu = _closure1_slot2;
            mike = 1;
            zulu = zulu[mike];
            mike = undefined;
            tango = tango.bind(mike)(zulu);
            zulu = tango.dispatch;
            mike = {'type': 'CHANGE_VANITY_URL_MODAL_SUBMIT_FAILURE', 'error': null, 'hasError': true};
            report = entity.body;
            mike['error'] = report;
            mike = zulu.bind(tango)(mike);
            return entity;
        };
        entity = zulu.bind(tango)(mike, entity);
        return entity;
    };
    mike['setVanityURL'] = tango;
    tango = 3;
    tango = oscar[tango];
    oscar = report.bind(entity)(tango);
    report = oscar.fileFinishedImporting;
    tango = 'actions/ChangeVanityURLActionCreators.tsx';
    tango = report.bind(oscar)(tango);
    zulu['default'] = mike;
    return entity;
})();