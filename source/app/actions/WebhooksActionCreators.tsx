// app/actions/WebhooksActionCreators.tsx
export default (function(argFoo, argBar, argBaz, _, __, argFre, argPlu) {
    report = argBar;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    entity = argBaz;
    var _closure1_slot1 = entity;
    var _closure1_slot2 = oscard;
    entity = global;
    option = entity.Object;
    golfie = option.defineProperty;
    michal = {};
    entity = true;
    michal['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(option)(zuuluu, entity, michal);
    entity = 0;
    michal = oscard[entity];
    entity = undefined;
    michal = report.bind(entity)(michal);
    michal = michal.Endpoints;
    var _closure1_slot3 = michal;
    michal = ['Spidey Bot', 'Captain Hook'];
    var _closure1_slot4 = michal;
    michal = {};
    golfie = function(argFoo) { // Original name: fetchForGuild
        option = argFoo;
        var _closure2_slot0 = option;
        tangon = _closure1_slot1;
        report = _closure1_slot2;
        entity = 1;
        zuuluu = report[entity];
        entity = undefined;
        golfie = tangon.bind(entity)(zuuluu);
        tangon = golfie.dispatch;
        zuuluu = {};
        verify = 'WEBHOOKS_FETCHING';
        zuuluu['type'] = verify;
        zuuluu['guildId'] = option;
        zuuluu = tangon.bind(golfie)(zuuluu);
        tangon = _closure1_slot0;
        zuuluu = 2;
        zuuluu = report[zuuluu];
        zuuluu = tangon.bind(entity)(zuuluu);
        report = zuuluu.HTTP;
        tangon = report.get;
        zuuluu = {'url': null, 'oldFormErrors': true, 'rejectWithError': false};
        golfie = _closure1_slot3;
        oscard = golfie.GUILD_WEBHOOKS;
        oscard = oscard.bind(golfie)(option);
        zuuluu['url'] = oscard;
        report = tangon.bind(report)(zuuluu);
        tangon = report.then;
        zuuluu = function(argFoo) {
            entity = argFoo;
            tangon = entity.body;
            zuuluu = _closure1_slot1;
            michal = _closure1_slot2;
            entity = 1;
            michal = michal[entity];
            entity = undefined;
            zuuluu = zuuluu.bind(entity)(michal);
            michal = zuuluu.dispatch;
            entity = {};
            report = 'WEBHOOKS_UPDATE';
            entity['type'] = report;
            report = _closure2_slot0;
            entity['guildId'] = report;
            entity['webhooks'] = tangon;
            entity = michal.bind(zuuluu)(entity);
            return entity;
        };
        tangon = tangon.bind(report)(zuuluu);
        zuuluu = tangon.catch;
        michal = function(argFoo) {
            entity = argFoo;
            report = entity.body;
            zuuluu = _closure1_slot1;
            michal = _closure1_slot2;
            entity = 1;
            michal = michal[entity];
            entity = undefined;
            tangon = zuuluu.bind(entity)(michal);
            zuuluu = tangon.dispatch;
            michal = {};
            oscard = 'WEBHOOKS_UPDATE';
            michal['type'] = oscard;
            oscard = _closure2_slot0;
            michal['guildId'] = oscard;
            report = report.message;
            michal['error'] = report;
            michal = zuuluu.bind(tangon)(michal);
            return entity;
        };
        michal = zuuluu.bind(tangon)(michal);
        return entity;
    };
    michal['fetchForGuild'] = golfie;
    golfie = function(argFoo, argBar) { // Original name: fetchForChannel
        verify = argFoo;
        option = argBar;
        var _closure2_slot0 = verify;
        var _closure2_slot1 = option;
        tangon = _closure1_slot1;
        report = _closure1_slot2;
        entity = 1;
        zuuluu = report[entity];
        entity = undefined;
        golfie = tangon.bind(entity)(zuuluu);
        tangon = golfie.dispatch;
        zuuluu = {};
        offset = 'WEBHOOKS_FETCHING';
        zuuluu['type'] = offset;
        zuuluu['guildId'] = verify;
        zuuluu['channelId'] = option;
        zuuluu = tangon.bind(golfie)(zuuluu);
        tangon = _closure1_slot0;
        zuuluu = 2;
        zuuluu = report[zuuluu];
        zuuluu = tangon.bind(entity)(zuuluu);
        report = zuuluu.HTTP;
        tangon = report.get;
        zuuluu = {'url': null, 'oldFormErrors': true, 'rejectWithError': true};
        golfie = _closure1_slot3;
        oscard = golfie.CHANNEL_WEBHOOKS;
        oscard = oscard.bind(golfie)(option);
        zuuluu['url'] = oscard;
        report = tangon.bind(report)(zuuluu);
        tangon = report.then;
        zuuluu = function(argFoo) {
            entity = argFoo;
            tangon = entity.body;
            zuuluu = _closure1_slot1;
            michal = _closure1_slot2;
            entity = 1;
            michal = michal[entity];
            entity = undefined;
            zuuluu = zuuluu.bind(entity)(michal);
            michal = zuuluu.dispatch;
            entity = {};
            report = 'WEBHOOKS_UPDATE';
            entity['type'] = report;
            oscard = _closure2_slot0;
            entity['guildId'] = oscard;
            report = _closure2_slot1;
            entity['channelId'] = report;
            entity['webhooks'] = tangon;
            entity = michal.bind(zuuluu)(entity);
            return entity;
        };
        tangon = tangon.bind(report)(zuuluu);
        zuuluu = tangon.catch;
        michal = function(argFoo) {
            entity = argFoo;
            report = entity.body;
            zuuluu = _closure1_slot1;
            michal = _closure1_slot2;
            entity = 1;
            michal = michal[entity];
            entity = undefined;
            tangon = zuuluu.bind(entity)(michal);
            zuuluu = tangon.dispatch;
            michal = {};
            oscard = 'WEBHOOKS_UPDATE';
            michal['type'] = oscard;
            oscard = _closure2_slot0;
            michal['guildId'] = oscard;
            report = report.message;
            michal['error'] = report;
            michal = zuuluu.bind(tangon)(michal);
            return entity;
        };
        michal = zuuluu.bind(tangon)(michal);
        return entity;
    };
    michal['fetchForChannel'] = golfie;
    golfie = function(argFoo, argBar, argBaz) { // Original name: create
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            oscard = argBaz;
            michal = argFoo;
            var _closure2_slot0 = michal;
            michal = null;
            if(!(michal == oscard)) { _fun00002_ip = 77; continue _fun00001 }
 18:
            zuuluu = _closure1_slot4;
            report = _closure1_slot1;
            tangon = _closure1_slot2;
            michal = 3;
            tangon = tangon[michal];
            michal = undefined;
            golfie = report.bind(michal)(tangon);
            report = golfie.random;
            tangon = zuuluu.length;
            michal = 1;
            tangon = tangon - michal;
            michal = 0;
            michal = report.bind(golfie)(michal, tangon);
            oscard = zuuluu[michal];
 77:
            tangon = _closure1_slot0;
            zuuluu = _closure1_slot2;
            michal = 2;
            zuuluu = zuuluu[michal];
            michal = undefined;
            michal = tangon.bind(michal)(zuuluu);
            tangon = michal.HTTP;
            zuuluu = tangon.post;
            michal = {};
            option = _closure1_slot3;
            golfie = option.CHANNEL_WEBHOOKS;
            report = argBar;
            report = golfie.bind(option)(report);
            michal['url'] = report;
            report = {};
            report['name'] = oscard;
            michal['body'] = report;
            report = true;
            michal['oldFormErrors'] = report;
            report = false;
            michal['rejectWithError'] = report;
            zuuluu = zuuluu.bind(tangon)(michal);
            michal = zuuluu.then;
            entity = function(argFoo) {
                entity = argFoo;
                entity = entity.body;
                tangon = _closure1_slot1;
                zuuluu = _closure1_slot2;
                michal = 1;
                zuuluu = zuuluu[michal];
                michal = undefined;
                tangon = tangon.bind(michal)(zuuluu);
                zuuluu = tangon.dispatch;
                michal = {};
                report = 'WEBHOOK_CREATE';
                michal['type'] = report;
                report = _closure2_slot0;
                michal['guildId'] = report;
                michal['webhook'] = entity;
                michal = zuuluu.bind(tangon)(michal);
                return entity;
            };
            entity = michal.bind(zuuluu)(entity);
            return entity;
        }
    };
    michal['create'] = golfie;
    golfie = function(argFoo, argBar) { // Original name: delete
        golfie = argBar;
        michal = argFoo;
        var _closure2_slot0 = michal;
        var _closure2_slot1 = golfie;
        tangon = _closure1_slot0;
        zuuluu = _closure1_slot2;
        michal = 2;
        zuuluu = zuuluu[michal];
        michal = undefined;
        michal = tangon.bind(michal)(zuuluu);
        tangon = michal.HTTP;
        zuuluu = tangon.del;
        michal = {'url': null, 'oldFormErrors': true, 'rejectWithError': false};
        oscard = _closure1_slot3;
        report = oscard.WEBHOOK;
        report = report.bind(oscard)(golfie);
        michal['url'] = report;
        zuuluu = zuuluu.bind(tangon)(michal);
        michal = zuuluu.then;
        entity = function() {
            zuuluu = _closure1_slot1;
            michal = _closure1_slot2;
            entity = 1;
            michal = michal[entity];
            entity = undefined;
            tangon = zuuluu.bind(entity)(michal);
            zuuluu = tangon.dispatch;
            michal = {};
            report = 'WEBHOOK_DELETE';
            michal['type'] = report;
            oscard = _closure2_slot0;
            michal['guildId'] = oscard;
            report = _closure2_slot1;
            michal['webhookId'] = report;
            michal = zuuluu.bind(tangon)(michal);
            return entity;
        };
        entity = michal.bind(zuuluu)(entity);
        return entity;
    };
    michal['delete'] = golfie;
    tangon = function(argFoo, argBar, argBaz) { // Original name: update
        michal = argFoo;
        var _closure2_slot0 = michal;
        tangon = _closure1_slot0;
        zuuluu = _closure1_slot2;
        michal = 2;
        zuuluu = zuuluu[michal];
        michal = undefined;
        michal = tangon.bind(michal)(zuuluu);
        tangon = michal.HTTP;
        zuuluu = tangon.patch;
        michal = {};
        golfie = _closure1_slot3;
        oscard = golfie.WEBHOOK;
        report = argBar;
        report = oscard.bind(golfie)(report);
        michal['url'] = report;
        report = argBaz;
        michal['body'] = report;
        report = true;
        michal['oldFormErrors'] = report;
        report = false;
        michal['rejectWithError'] = report;
        zuuluu = zuuluu.bind(tangon)(michal);
        michal = zuuluu.then;
        entity = function(argFoo) {
            entity = argFoo;
            entity = entity.body;
            tangon = _closure1_slot1;
            zuuluu = _closure1_slot2;
            michal = 1;
            zuuluu = zuuluu[michal];
            michal = undefined;
            tangon = tangon.bind(michal)(zuuluu);
            zuuluu = tangon.dispatch;
            michal = {};
            report = 'WEBHOOK_UPDATE';
            michal['type'] = report;
            report = _closure2_slot0;
            michal['guildId'] = report;
            michal['webhook'] = entity;
            michal = zuuluu.bind(tangon)(michal);
            return entity;
        };
        entity = michal.bind(zuuluu)(entity);
        return entity;
    };
    michal['update'] = tangon;
    tangon = 4;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'actions/WebhooksActionCreators.tsx';
    tangon = report.bind(oscard)(tangon);
    zuuluu['default'] = michal;
    return entity;
})();