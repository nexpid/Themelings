// app/actions/WebhooksActionCreators.tsx
export default (function(argFoo, argBar, argBaz, _, __, argFred, argPlugh) {
    report = argBar;
    zulu = argFred;
    oscar = argPlugh;
    var _closure1_slot0 = report;
    entity = argBaz;
    var _closure1_slot1 = entity;
    var _closure1_slot2 = oscar;
    entity = global;
    options = entity.Object;
    golf = options.defineProperty;
    mike = {};
    entity = true;
    mike['value'] = entity;
    entity = '__esModule';
    entity = golf.bind(options)(zulu, entity, mike);
    entity = 0;
    mike = oscar[entity];
    entity = undefined;
    mike = report.bind(entity)(mike);
    mike = mike.Endpoints;
    var _closure1_slot3 = mike;
    mike = ['Spidey Bot', 'Captain Hook'];
    var _closure1_slot4 = mike;
    mike = {};
    golf = function(argFoo) { // Original name: fetchForGuild
        options = argFoo;
        var _closure2_slot0 = options;
        tango = _closure1_slot1;
        report = _closure1_slot2;
        entity = 1;
        zulu = report[entity];
        entity = undefined;
        golf = tango.bind(entity)(zulu);
        tango = golf.dispatch;
        zulu = {};
        verify = 'WEBHOOKS_FETCHING';
        zulu['type'] = verify;
        zulu['guildId'] = options;
        zulu = tango.bind(golf)(zulu);
        tango = _closure1_slot0;
        zulu = 2;
        zulu = report[zulu];
        zulu = tango.bind(entity)(zulu);
        report = zulu.HTTP;
        tango = report.get;
        zulu = {'url': null, 'oldFormErrors': true, 'rejectWithError': false};
        golf = _closure1_slot3;
        oscar = golf.GUILD_WEBHOOKS;
        oscar = oscar.bind(golf)(options);
        zulu['url'] = oscar;
        report = tango.bind(report)(zulu);
        tango = report.then;
        zulu = function(argFoo) {
            entity = argFoo;
            tango = entity.body;
            zulu = _closure1_slot1;
            mike = _closure1_slot2;
            entity = 1;
            mike = mike[entity];
            entity = undefined;
            zulu = zulu.bind(entity)(mike);
            mike = zulu.dispatch;
            entity = {};
            report = 'WEBHOOKS_UPDATE';
            entity['type'] = report;
            report = _closure2_slot0;
            entity['guildId'] = report;
            entity['webhooks'] = tango;
            entity = mike.bind(zulu)(entity);
            return entity;
        };
        tango = tango.bind(report)(zulu);
        zulu = tango.catch;
        mike = function(argFoo) {
            entity = argFoo;
            report = entity.body;
            zulu = _closure1_slot1;
            mike = _closure1_slot2;
            entity = 1;
            mike = mike[entity];
            entity = undefined;
            tango = zulu.bind(entity)(mike);
            zulu = tango.dispatch;
            mike = {};
            oscar = 'WEBHOOKS_UPDATE';
            mike['type'] = oscar;
            oscar = _closure2_slot0;
            mike['guildId'] = oscar;
            report = report.message;
            mike['error'] = report;
            mike = zulu.bind(tango)(mike);
            return entity;
        };
        mike = zulu.bind(tango)(mike);
        return entity;
    };
    mike['fetchForGuild'] = golf;
    golf = function(argFoo, argBar) { // Original name: fetchForChannel
        verify = argFoo;
        options = argBar;
        var _closure2_slot0 = verify;
        var _closure2_slot1 = options;
        tango = _closure1_slot1;
        report = _closure1_slot2;
        entity = 1;
        zulu = report[entity];
        entity = undefined;
        golf = tango.bind(entity)(zulu);
        tango = golf.dispatch;
        zulu = {};
        offset = 'WEBHOOKS_FETCHING';
        zulu['type'] = offset;
        zulu['guildId'] = verify;
        zulu['channelId'] = options;
        zulu = tango.bind(golf)(zulu);
        tango = _closure1_slot0;
        zulu = 2;
        zulu = report[zulu];
        zulu = tango.bind(entity)(zulu);
        report = zulu.HTTP;
        tango = report.get;
        zulu = {'url': null, 'oldFormErrors': true, 'rejectWithError': true};
        golf = _closure1_slot3;
        oscar = golf.CHANNEL_WEBHOOKS;
        oscar = oscar.bind(golf)(options);
        zulu['url'] = oscar;
        report = tango.bind(report)(zulu);
        tango = report.then;
        zulu = function(argFoo) {
            entity = argFoo;
            tango = entity.body;
            zulu = _closure1_slot1;
            mike = _closure1_slot2;
            entity = 1;
            mike = mike[entity];
            entity = undefined;
            zulu = zulu.bind(entity)(mike);
            mike = zulu.dispatch;
            entity = {};
            report = 'WEBHOOKS_UPDATE';
            entity['type'] = report;
            oscar = _closure2_slot0;
            entity['guildId'] = oscar;
            report = _closure2_slot1;
            entity['channelId'] = report;
            entity['webhooks'] = tango;
            entity = mike.bind(zulu)(entity);
            return entity;
        };
        tango = tango.bind(report)(zulu);
        zulu = tango.catch;
        mike = function(argFoo) {
            entity = argFoo;
            report = entity.body;
            zulu = _closure1_slot1;
            mike = _closure1_slot2;
            entity = 1;
            mike = mike[entity];
            entity = undefined;
            tango = zulu.bind(entity)(mike);
            zulu = tango.dispatch;
            mike = {};
            oscar = 'WEBHOOKS_UPDATE';
            mike['type'] = oscar;
            oscar = _closure2_slot0;
            mike['guildId'] = oscar;
            report = report.message;
            mike['error'] = report;
            mike = zulu.bind(tango)(mike);
            return entity;
        };
        mike = zulu.bind(tango)(mike);
        return entity;
    };
    mike['fetchForChannel'] = golf;
    golf = function(argFoo, argBar, argBaz) { // Original name: create
        _fun120226: for(var _fun120226_ip = 0; ; ) switch(_fun120226_ip) {
 0:
            oscar = argBaz;
            mike = argFoo;
            var _closure2_slot0 = mike;
            mike = null;
            if(!(mike == oscar)) { _fun120226_ip = 77; continue _fun120226 }
 18:
            zulu = _closure1_slot4;
            report = _closure1_slot1;
            tango = _closure1_slot2;
            mike = 3;
            tango = tango[mike];
            mike = undefined;
            golf = report.bind(mike)(tango);
            report = golf.random;
            tango = zulu.length;
            mike = 1;
            tango = tango - mike;
            mike = 0;
            mike = report.bind(golf)(mike, tango);
            oscar = zulu[mike];
 77:
            tango = _closure1_slot0;
            zulu = _closure1_slot2;
            mike = 2;
            zulu = zulu[mike];
            mike = undefined;
            mike = tango.bind(mike)(zulu);
            tango = mike.HTTP;
            zulu = tango.post;
            mike = {};
            options = _closure1_slot3;
            golf = options.CHANNEL_WEBHOOKS;
            report = argBar;
            report = golf.bind(options)(report);
            mike['url'] = report;
            report = {};
            report['name'] = oscar;
            mike['body'] = report;
            report = true;
            mike['oldFormErrors'] = report;
            report = false;
            mike['rejectWithError'] = report;
            zulu = zulu.bind(tango)(mike);
            mike = zulu.then;
            entity = function(argFoo) {
                entity = argFoo;
                entity = entity.body;
                tango = _closure1_slot1;
                zulu = _closure1_slot2;
                mike = 1;
                zulu = zulu[mike];
                mike = undefined;
                tango = tango.bind(mike)(zulu);
                zulu = tango.dispatch;
                mike = {};
                report = 'WEBHOOK_CREATE';
                mike['type'] = report;
                report = _closure2_slot0;
                mike['guildId'] = report;
                mike['webhook'] = entity;
                mike = zulu.bind(tango)(mike);
                return entity;
            };
            entity = mike.bind(zulu)(entity);
            return entity;
        }
    };
    mike['create'] = golf;
    golf = function(argFoo, argBar) { // Original name: delete
        golf = argBar;
        mike = argFoo;
        var _closure2_slot0 = mike;
        var _closure2_slot1 = golf;
        tango = _closure1_slot0;
        zulu = _closure1_slot2;
        mike = 2;
        zulu = zulu[mike];
        mike = undefined;
        mike = tango.bind(mike)(zulu);
        tango = mike.HTTP;
        zulu = tango.del;
        mike = {'url': null, 'oldFormErrors': true, 'rejectWithError': false};
        oscar = _closure1_slot3;
        report = oscar.WEBHOOK;
        report = report.bind(oscar)(golf);
        mike['url'] = report;
        zulu = zulu.bind(tango)(mike);
        mike = zulu.then;
        entity = function() {
            zulu = _closure1_slot1;
            mike = _closure1_slot2;
            entity = 1;
            mike = mike[entity];
            entity = undefined;
            tango = zulu.bind(entity)(mike);
            zulu = tango.dispatch;
            mike = {};
            report = 'WEBHOOK_DELETE';
            mike['type'] = report;
            oscar = _closure2_slot0;
            mike['guildId'] = oscar;
            report = _closure2_slot1;
            mike['webhookId'] = report;
            mike = zulu.bind(tango)(mike);
            return entity;
        };
        entity = mike.bind(zulu)(entity);
        return entity;
    };
    mike['delete'] = golf;
    tango = function(argFoo, argBar, argBaz) { // Original name: update
        mike = argFoo;
        var _closure2_slot0 = mike;
        tango = _closure1_slot0;
        zulu = _closure1_slot2;
        mike = 2;
        zulu = zulu[mike];
        mike = undefined;
        mike = tango.bind(mike)(zulu);
        tango = mike.HTTP;
        zulu = tango.patch;
        mike = {};
        golf = _closure1_slot3;
        oscar = golf.WEBHOOK;
        report = argBar;
        report = oscar.bind(golf)(report);
        mike['url'] = report;
        report = argBaz;
        mike['body'] = report;
        report = true;
        mike['oldFormErrors'] = report;
        report = false;
        mike['rejectWithError'] = report;
        zulu = zulu.bind(tango)(mike);
        mike = zulu.then;
        entity = function(argFoo) {
            entity = argFoo;
            entity = entity.body;
            tango = _closure1_slot1;
            zulu = _closure1_slot2;
            mike = 1;
            zulu = zulu[mike];
            mike = undefined;
            tango = tango.bind(mike)(zulu);
            zulu = tango.dispatch;
            mike = {};
            report = 'WEBHOOK_UPDATE';
            mike['type'] = report;
            report = _closure2_slot0;
            mike['guildId'] = report;
            mike['webhook'] = entity;
            mike = zulu.bind(tango)(mike);
            return entity;
        };
        entity = mike.bind(zulu)(entity);
        return entity;
    };
    mike['update'] = tango;
    tango = 4;
    tango = oscar[tango];
    oscar = report.bind(entity)(tango);
    report = oscar.fileFinishedImporting;
    tango = 'actions/WebhooksActionCreators.tsx';
    tango = report.bind(oscar)(tango);
    zulu['default'] = mike;
    return entity;
})();