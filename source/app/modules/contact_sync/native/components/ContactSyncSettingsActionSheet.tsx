// app/modules/contact_sync/native/components/ContactSyncSettingsActionSheet.tsx
export default (function(argFoo, argBar, argBaz, argCorge, _, argFred, argPlugh) {
    report = argBar;
    yankee = argBaz;
    zulu = argFred;
    oscar = argPlugh;
    var _closure1_slot0 = report;
    var _closure1_slot1 = oscar;
    entity = global;
    options = entity.Object;
    golf = options.defineProperty;
    tango = {};
    entity = true;
    tango['value'] = entity;
    entity = '__esModule';
    entity = golf.bind(options)(zulu, entity, tango);
    entity = 0;
    golf = oscar[entity];
    tango = argCorge;
    entity = undefined;
    tango = tango.bind(entity)(golf);
    tango = 1;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.View;
    var _closure1_slot2 = tango;
    tango = 2;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    golf = tango.setAllowEmail;
    var _closure1_slot3 = golf;
    golf = tango.setAllowPhone;
    var _closure1_slot4 = golf;
    golf = tango.setAllowSync;
    var _closure1_slot5 = golf;
    tango = tango.useContactSyncModalStore;
    var _closure1_slot6 = tango;
    tango = 3;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    romeo = tango.Fonts;
    tango = 4;
    golf = oscar[tango];
    golf = report.bind(entity)(golf);
    golf = golf.jsx;
    var _closure1_slot7 = golf;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.jsxs;
    var _closure1_slot8 = tango;
    tango = 5;
    tango = oscar[tango];
    options = report.bind(entity)(tango);
    golf = options.createStyles;
    tango = {};
    verify = {};
    offset = 6;
    foxtrot = oscar[offset];
    foxtrot = yankee.bind(entity)(foxtrot);
    foxtrot = foxtrot.colors;
    foxtrot = foxtrot.BACKGROUND_PRIMARY;
    verify['backgroundColor'] = foxtrot;
    foxtrot = 16;
    verify['paddingBottom'] = foxtrot;
    tango['container'] = verify;
    verify = {'marginTop': 8, 'paddingVertical': 16};
    foxtrot = oscar[offset];
    foxtrot = yankee.bind(entity)(foxtrot);
    foxtrot = foxtrot.colors;
    foxtrot = foxtrot.BACKGROUND_SECONDARY;
    verify['backgroundColor'] = foxtrot;
    tango['formRow'] = verify;
    verify = {};
    foxtrot = 24;
    verify['marginTop'] = foxtrot;
    tango['syncRow'] = verify;
    verify = {};
    romeo = romeo.PRIMARY_SEMIBOLD;
    verify['fontFamily'] = romeo;
    romeo = oscar[offset];
    romeo = yankee.bind(entity)(romeo);
    romeo = romeo.colors;
    romeo = romeo.INTERACTIVE_ACTIVE;
    verify['color'] = romeo;
    tango['formText'] = verify;
    verify = {'marginTop': 8, 'fontSize': 14, 'lineHeight': 18, 'paddingHorizontal': 16};
    offset = oscar[offset];
    offset = yankee.bind(entity)(offset);
    offset = offset.colors;
    offset = offset.HEADER_SECONDARY;
    verify['color'] = offset;
    tango['info'] = verify;
    tango = golf.bind(options)(tango);
    var _closure1_slot9 = tango;
    tango = 12;
    tango = oscar[tango];
    oscar = report.bind(entity)(tango);
    report = oscar.fileFinishedImporting;
    tango = 'modules/contact_sync/native/components/ContactSyncSettingsActionSheet.tsx';
    tango = report.bind(oscar)(tango);
    mike = function() { // Original name: ContactSyncSettingsActionSheet
        _fun94910: for(var _fun94910_ip = 0; ; ) switch(_fun94910_ip) {
 0:
            entity = _closure1_slot9;
            tango = undefined;
            echo = entity.bind(tango)();
            entity = _closure1_slot6;
            entity = entity.bind(tango)();
            update = entity.allowPhone;
            var _closure2_slot0 = update;
            backup = entity.allowEmail;
            var _closure2_slot1 = backup;
            kilo = update;
            if(kilo) { _fun94910_ip = 52; continue _fun94910 }
 49:
            kilo = backup;
 52:
            var _closure2_slot2 = kilo;
            options = _closure1_slot8;
            report = _closure1_slot2;
            entity = {};
            mike = echo.container;
            entity['style'] = mike;
            zulu = _closure1_slot7;
            mike = _closure1_slot0;
            golf = _closure1_slot1;
            romeo = 7;
            oscar = golf[romeo];
            oscar = mike.bind(tango)(oscar);
            verify = oscar.FormRow;
            oscar = {};
            yankee = echo.formRow;
            offset = new Array(2);
            offset[0] = yankee;
            yankee = echo.syncRow;
            offset[1] = yankee;
            oscar['DEPRECATED_style'] = offset;
            offset = golf[romeo];
            offset = mike.bind(tango)(offset);
            offset = offset.FormRow;
            yankee = offset.Label;
            offset = {};
            sizing = echo.formText;
            offset['style'] = sizing;
            output = 8;
            sizing = golf[output];
            sizing = mike.bind(tango)(sizing);
            source = sizing.intl;
            result = source.string;
            sizing = golf[output];
            sizing = mike.bind(tango)(sizing);
            sizing = sizing.t;
            sizing = sizing.a5QL29;
            sizing = result.bind(source)(sizing);
            offset['text'] = sizing;
            offset = zulu.bind(tango)(yankee, offset);
            oscar['label'] = offset;
            offset = function() { // Original name: onPress
                zulu = _closure1_slot5;
                entity = _closure2_slot2;
                mike = !entity;
                entity = undefined;
                mike = zulu.bind(entity)(mike);
                return entity;
            };
            oscar['onPress'] = offset;
            offset = golf[romeo];
            offset = mike.bind(tango)(offset);
            offset = offset.FormRow;
            yankee = offset.Checkbox;
            offset = {};
            offset['selected'] = kilo;
            offset = zulu.bind(tango)(yankee, offset);
            oscar['trailing'] = offset;
            oscar = zulu.bind(tango)(verify, oscar);
            verify = new Array(7);
            verify[0] = oscar;
            oscar = golf[romeo];
            oscar = mike.bind(tango)(oscar);
            offset = oscar.FormText;
            oscar = {};
            yankee = echo.info;
            oscar['style'] = yankee;
            yankee = golf[output];
            yankee = mike.bind(tango)(yankee);
            sizing = yankee.intl;
            kilo = sizing.string;
            yankee = golf[output];
            yankee = mike.bind(tango)(yankee);
            yankee = yankee.t;
            yankee = yankee.pfjsBw;
            yankee = kilo.bind(sizing)(yankee);
            oscar['children'] = yankee;
            oscar = zulu.bind(tango)(offset, oscar);
            verify[1] = oscar;
            oscar = golf[romeo];
            oscar = mike.bind(tango)(oscar);
            offset = oscar.FormText;
            oscar = {};
            yankee = echo.info;
            oscar['style'] = yankee;
            yankee = golf[output];
            yankee = mike.bind(tango)(yankee);
            sizing = yankee.intl;
            kilo = sizing.string;
            yankee = golf[output];
            yankee = mike.bind(tango)(yankee);
            yankee = yankee.t;
            yankee = yankee.cW1nr6;
            yankee = kilo.bind(sizing)(yankee);
            oscar['children'] = yankee;
            oscar = zulu.bind(tango)(offset, oscar);
            verify[2] = oscar;
            oscar = golf[romeo];
            oscar = mike.bind(tango)(oscar);
            offset = oscar.FormText;
            oscar = {};
            yankee = echo.info;
            oscar['style'] = yankee;
            yankee = golf[output];
            yankee = mike.bind(tango)(yankee);
            result = yankee.intl;
            sizing = result.format;
            yankee = golf[output];
            yankee = mike.bind(tango)(yankee);
            yankee = yankee.t;
            kilo = yankee.eswIfn;
            yankee = {};
            source = function(argFoo, argBar) { // Original name: learnMoreHook
                report = _closure1_slot7;
                oscar = _closure1_slot0;
                golf = _closure1_slot1;
                entity = 9;
                entity = golf[entity];
                tango = undefined;
                entity = oscar.bind(tango)(entity);
                zulu = entity.Text;
                mike = {'onPress': null, 'variant': 'text-sm/medium', 'color': 'text-link'};
                entity = 10;
                entity = golf[entity];
                entity = oscar.bind(tango)(entity);
                entity = entity.handleOpenLearnMoreLink;
                mike['onPress'] = entity;
                entity = argFoo;
                mike['children'] = entity;
                entity = argBar;
                entity = report.bind(tango)(zulu, mike, entity);
                return entity;
            };
            yankee['learnMoreHook'] = source;
            yankee = sizing.bind(result)(kilo, yankee);
            oscar['children'] = yankee;
            oscar = zulu.bind(tango)(offset, oscar);
            verify[3] = oscar;
            oscar = golf[romeo];
            oscar = mike.bind(tango)(oscar);
            yankee = oscar.FormTitle;
            offset = {};
            oscar = golf[output];
            oscar = mike.bind(tango)(oscar);
            sizing = oscar.intl;
            kilo = sizing.string;
            oscar = golf[output];
            oscar = mike.bind(tango)(oscar);
            oscar = oscar.t;
            oscar = oscar.0t2wRU;
            oscar = kilo.bind(sizing)(oscar);
            offset['title'] = oscar;
            oscar = true;
            offset['thinTitle'] = oscar;
            offset = zulu.bind(tango)(yankee, offset);
            verify[4] = offset;
            offset = golf[romeo];
            offset = mike.bind(tango)(offset);
            yankee = offset.FormRow;
            offset = {};
            kilo = echo.formRow;
            offset['DEPRECATED_style'] = kilo;
            kilo = golf[romeo];
            kilo = mike.bind(tango)(kilo);
            kilo = kilo.FormRow;
            sizing = kilo.Label;
            kilo = {};
            result = echo.formText;
            kilo['style'] = result;
            result = golf[output];
            result = mike.bind(tango)(result);
            control = result.intl;
            source = control.string;
            result = golf[output];
            result = mike.bind(tango)(result);
            result = result.t;
            result = result.eJnn09;
            result = source.bind(control)(result);
            kilo['text'] = result;
            kilo = zulu.bind(tango)(sizing, kilo);
            offset['label'] = kilo;
            kilo = 9;
            sizing = golf[kilo];
            sizing = mike.bind(tango)(sizing);
            result = sizing.Text;
            sizing = {'variant': 'text-sm/medium', 'color': 'header-secondary'};
            source = golf[output];
            source = mike.bind(tango)(source);
            vacuum = source.intl;
            control = vacuum.string;
            source = golf[output];
            source = mike.bind(tango)(source);
            source = source.t;
            source = source.X7pIKC;
            source = control.bind(vacuum)(source);
            sizing['children'] = source;
            sizing = zulu.bind(tango)(result, sizing);
            offset['subLabel'] = sizing;
            sizing = function() { // Original name: onPress
                zulu = _closure1_slot4;
                entity = _closure2_slot0;
                mike = !entity;
                entity = undefined;
                mike = zulu.bind(entity)(mike);
                return entity;
            };
            offset['onPress'] = sizing;
            sizing = golf[romeo];
            sizing = mike.bind(tango)(sizing);
            sizing = sizing.FormRow;
            result = sizing.Checkbox;
            sizing = {};
            sizing['selected'] = update;
            sizing = zulu.bind(tango)(result, sizing);
            offset['trailing'] = sizing;
            offset = zulu.bind(tango)(yankee, offset);
            verify[5] = offset;
            offset = golf[romeo];
            offset = mike.bind(tango)(offset);
            yankee = offset.FormRow;
            offset = {};
            sizing = echo.formRow;
            offset['DEPRECATED_style'] = sizing;
            sizing = golf[romeo];
            sizing = mike.bind(tango)(sizing);
            sizing = sizing.FormRow;
            result = sizing.Label;
            sizing = {};
            echo = echo.formText;
            sizing['style'] = echo;
            echo = golf[output];
            echo = mike.bind(tango)(echo);
            source = echo.intl;
            update = source.string;
            echo = golf[output];
            echo = mike.bind(tango)(echo);
            echo = echo.t;
            echo = echo.dI4d4e;
            echo = update.bind(source)(echo);
            sizing['text'] = echo;
            sizing = zulu.bind(tango)(result, sizing);
            offset['label'] = sizing;
            kilo = golf[kilo];
            kilo = mike.bind(tango)(kilo);
            sizing = kilo.Text;
            kilo = {'variant': 'text-sm/medium', 'color': 'header-secondary'};
            result = golf[output];
            result = mike.bind(tango)(result);
            echo = result.intl;
            result = echo.string;
            output = golf[output];
            output = mike.bind(tango)(output);
            output = output.t;
            output = output.ilGsHB;
            output = result.bind(echo)(output);
            kilo['children'] = output;
            kilo = zulu.bind(tango)(sizing, kilo);
            offset['subLabel'] = kilo;
            foxtrot = function() { // Original name: onPress
                zulu = _closure1_slot3;
                entity = _closure2_slot1;
                mike = !entity;
                entity = undefined;
                mike = zulu.bind(entity)(mike);
                return entity;
            };
            offset['onPress'] = foxtrot;
            romeo = golf[romeo];
            romeo = mike.bind(tango)(romeo);
            romeo = romeo.FormRow;
            foxtrot = romeo.Checkbox;
            romeo = {};
            romeo['selected'] = backup;
            romeo = zulu.bind(tango)(foxtrot, romeo);
            offset['trailing'] = romeo;
            offset = zulu.bind(tango)(yankee, offset);
            verify[6] = offset;
            entity['children'] = verify;
            report = options.bind(tango)(report, entity);
            entity = 11;
            entity = golf[entity];
            entity = mike.bind(tango)(entity);
            mike = entity.ActionSheet;
            entity = {};
            entity['startExpanded'] = oscar;
            entity['children'] = report;
            entity = zulu.bind(tango)(mike, entity);
            return entity;
        }
    };
    zulu['default'] = mike;
    return entity;
})();