// app/modules/contact_sync/native/components/ContactSyncLandingOnboardingRedesign.tsx
export default (function(argFoo, argBar, argBaz, argCorge, _, argFred, argPlugh) {
    report = argBar;
    yankee = argBaz;
    zulu = argFred;
    oscar = argPlugh;
    var _closure1_slot0 = report;
    var _closure1_slot1 = yankee;
    var _closure1_slot2 = oscar;
    entity = global;
    options = entity.Object;
    golf = options.defineProperty;
    tango = {};
    entity = true;
    tango['value'] = entity;
    entity = '__esModule';
    entity = golf.bind(options)(zulu, entity, tango);
    entity = 0;
    tango = oscar[entity];
    entity = undefined;
    tango = yankee.bind(entity)(tango);
    var _closure1_slot3 = tango;
    tango = 1;
    golf = oscar[tango];
    tango = argCorge;
    tango = tango.bind(entity)(golf);
    var _closure1_slot4 = tango;
    tango = 2;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    golf = tango.View;
    var _closure1_slot5 = golf;
    tango = tango.Image;
    var _closure1_slot6 = tango;
    tango = 3;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.NativePermissionTypes;
    var _closure1_slot7 = tango;
    tango = 4;
    golf = oscar[tango];
    golf = report.bind(entity)(golf);
    golf = golf.jsx;
    var _closure1_slot8 = golf;
    golf = oscar[tango];
    golf = report.bind(entity)(golf);
    golf = golf.jsxs;
    var _closure1_slot9 = golf;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.Fragment;
    var _closure1_slot10 = tango;
    tango = 5;
    tango = oscar[tango];
    options = report.bind(entity)(tango);
    golf = options.createStyles;
    tango = {};
    verify = {'flex': 1, 'justifyContent': 'center', 'alignItems': 'center', 'textAlign': 'center'};
    offset = 6;
    romeo = oscar[offset];
    romeo = yankee.bind(entity)(romeo);
    romeo = romeo.spacing;
    romeo = romeo.PX_32;
    foxtrot = -romeo;
    romeo = 7;
    romeo = oscar[romeo];
    romeo = report.bind(entity)(romeo);
    romeo = romeo.NAV_BAR_HEIGHT;
    romeo = foxtrot - romeo;
    verify['marginTop'] = romeo;
    tango['content'] = verify;
    verify = {'height': 135, 'width': 216};
    romeo = oscar[offset];
    romeo = yankee.bind(entity)(romeo);
    romeo = romeo.spacing;
    romeo = romeo.PX_24;
    verify['marginBottom'] = romeo;
    tango['headerImage'] = verify;
    verify = {};
    romeo = oscar[offset];
    romeo = yankee.bind(entity)(romeo);
    romeo = romeo.spacing;
    romeo = romeo.PX_8;
    verify['marginBottom'] = romeo;
    tango['title'] = verify;
    verify = {};
    romeo = oscar[offset];
    romeo = yankee.bind(entity)(romeo);
    romeo = romeo.spacing;
    romeo = romeo.PX_24;
    verify['marginBottom'] = romeo;
    tango['subtitle'] = verify;
    verify = {'height': 48, 'width': '100%'};
    romeo = oscar[offset];
    romeo = yankee.bind(entity)(romeo);
    romeo = romeo.spacing;
    romeo = romeo.PX_16;
    verify['paddingHorizontal'] = romeo;
    tango['buttonContainer'] = verify;
    verify = {};
    romeo = oscar[offset];
    romeo = yankee.bind(entity)(romeo);
    romeo = romeo.spacing;
    romeo = romeo.PX_4;
    verify['paddingBottom'] = romeo;
    romeo = 'flex-end';
    verify['justifyContent'] = romeo;
    offset = oscar[offset];
    offset = yankee.bind(entity)(offset);
    offset = offset.spacing;
    offset = offset.PX_16;
    verify['paddingHorizontal'] = offset;
    tango['trailing'] = verify;
    tango = golf.bind(options)(tango);
    var _closure1_slot11 = tango;
    tango = 15;
    tango = oscar[tango];
    oscar = report.bind(entity)(tango);
    report = oscar.fileFinishedImporting;
    tango = 'modules/contact_sync/native/components/ContactSyncLandingOnboardingRedesign.tsx';
    tango = report.bind(oscar)(tango);
    mike = function(argFoo) { // Original name: _default
        mike = argFoo;
        oscar = mike.onNext;
        var _closure2_slot0 = oscar;
        result = mike.loading;
        sizing = mike.error;
        romeo = mike.discoverabilityEnabled;
        yankee = mike.setDiscoverabilityEnabled;
        mike = _closure1_slot11;
        tango = undefined;
        verify = mike.bind(tango)();
        report = _closure1_slot4;
        zulu = report.useCallback;
        mike = _closure1_slot3;
        entity = function* () {
            entity = function* () { // Original name: ?anon_0_
                _fun94924: for(var _fun94924_ip = 0; ; ) switch(_fun94924_ip) {
 0:
                    StartGenerator();
                    ResumeGenerator(result_out_reg=0, return_bool_out_reg=1);
                    if(mike) { _fun94924_ip = 83; continue _fun94924 }
 7:
                    report = _closure1_slot1;
                    tango = _closure1_slot2;
                    zulu = 8;
                    tango = tango[zulu];
                    zulu = undefined;
                    report = report.bind(zulu)(tango);
                    tango = report.requestPermission;
                    mike = _closure1_slot7;
                    mike = mike.CONTACTS;
                    mike = tango.bind(report)(mike);
                    SaveGenerator(address=57);
 55:
                    return mike;
 57:
                    ResumeGenerator(result_out_reg=1, return_bool_out_reg=3);
                    if(tango) { _fun94924_ip = 80; continue _fun94924 }
 63:
                    if(!mike) { _fun94924_ip = 77; continue _fun94924 }
 66:
                    tango = _closure2_slot0;
                    tango = tango.bind(zulu)();
 77:
                    return zulu;
 80:
                    return mike;
 83:
                    return entity;
                }
            };
            return entity;
        };
        mike = mike.bind(tango)(entity);
        entity = new Array(1);
        entity[0] = oscar;
        echo = zulu.bind(report)(mike, entity);
        zulu = _closure1_slot9;
        mike = _closure1_slot10;
        entity = {};
        options = _closure1_slot5;
        report = {};
        oscar = verify.content;
        report['style'] = oscar;
        golf = _closure1_slot8;
        kilo = _closure1_slot6;
        oscar = {};
        offset = 'contain';
        oscar['resizeMode'] = offset;
        offset = verify.headerImage;
        oscar['style'] = offset;
        offset = _closure1_slot1;
        foxtrot = _closure1_slot2;
        output = 9;
        output = foxtrot[output];
        output = offset.bind(tango)(output);
        oscar['source'] = output;
        kilo = golf.bind(tango)(kilo, oscar);
        oscar = new Array(5);
        oscar[0] = kilo;
        vacuum = _closure1_slot0;
        backup = 10;
        kilo = foxtrot[backup];
        kilo = vacuum.bind(tango)(kilo);
        output = kilo.Text;
        kilo = {};
        update = verify.title;
        kilo['style'] = update;
        update = 'heading-xl/bold';
        kilo['variant'] = update;
        update = 11;
        source = foxtrot[update];
        source = vacuum.bind(tango)(source);
        sequence = source.intl;
        control = sequence.string;
        source = foxtrot[update];
        source = vacuum.bind(tango)(source);
        source = source.t;
        source = source./G+ncn;
        source = control.bind(sequence)(source);
        kilo['children'] = source;
        kilo = golf.bind(tango)(output, kilo);
        oscar[1] = kilo;
        backup = foxtrot[backup];
        backup = vacuum.bind(tango)(backup);
        kilo = backup.Text;
        backup = {};
        output = verify.subtitle;
        backup['style'] = output;
        output = 'text-sm/medium';
        backup['variant'] = output;
        output = foxtrot[update];
        output = vacuum.bind(tango)(output);
        control = output.intl;
        source = control.string;
        output = foxtrot[update];
        output = vacuum.bind(tango)(output);
        output = output.t;
        output = output.G8zcHh;
        output = source.bind(control)(output);
        backup['children'] = output;
        backup = golf.bind(tango)(kilo, backup);
        oscar[2] = backup;
        backup = {};
        kilo = verify.buttonContainer;
        backup['style'] = kilo;
        kilo = 12;
        kilo = foxtrot[kilo];
        kilo = vacuum.bind(tango)(kilo);
        output = kilo.Button;
        kilo = {'variant': 'primary', 'size': 'lg'};
        source = foxtrot[update];
        source = vacuum.bind(tango)(source);
        control = source.intl;
        source = control.string;
        update = foxtrot[update];
        update = vacuum.bind(tango)(update);
        update = update.t;
        update = update.LhlgY2;
        update = source.bind(control)(update);
        kilo['text'] = update;
        kilo['onPress'] = echo;
        kilo['loading'] = result;
        kilo = golf.bind(tango)(output, kilo);
        backup['children'] = kilo;
        backup = golf.bind(tango)(options, backup);
        oscar[3] = backup;
        backup = 13;
        backup = foxtrot[backup];
        kilo = offset.bind(tango)(backup);
        backup = {};
        backup['error'] = sizing;
        backup = golf.bind(tango)(kilo, backup);
        oscar[4] = backup;
        report['children'] = oscar;
        oscar = zulu.bind(tango)(options, report);
        report = new Array(2);
        report[0] = oscar;
        oscar = {};
        verify = verify.trailing;
        oscar['style'] = verify;
        verify = 14;
        verify = foxtrot[verify];
        offset = offset.bind(tango)(verify);
        verify = {};
        verify['discoverabilityEnabled'] = romeo;
        verify['onValueChanged'] = yankee;
        verify = golf.bind(tango)(offset, verify);
        oscar['children'] = verify;
        oscar = golf.bind(tango)(options, oscar);
        report[1] = oscar;
        entity['children'] = report;
        entity = zulu.bind(tango)(mike, entity);
        return entity;
    };
    zulu['default'] = mike;
    return entity;
})();