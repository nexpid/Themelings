// app/modules/contact_sync/native/components/ContactSyncLandingOnboardingRedesign.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    report = argBar;
    yankee = argBaz;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    var _closure1_slot1 = yankee;
    var _closure1_slot2 = oscard;
    entity = global;
    option = entity.Object;
    golfie = option.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(option)(zuuluu, entity, tangon);
    entity = 0;
    tangon = oscard[entity];
    entity = undefined;
    tangon = yankee.bind(entity)(tangon);
    var _closure1_slot3 = tangon;
    tangon = 1;
    golfie = oscard[tangon];
    tangon = argCor;
    tangon = tangon.bind(entity)(golfie);
    var _closure1_slot4 = tangon;
    tangon = 2;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    golfie = tangon.View;
    var _closure1_slot5 = golfie;
    tangon = tangon.Image;
    var _closure1_slot6 = tangon;
    tangon = 3;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.NativePermissionTypes;
    var _closure1_slot7 = tangon;
    tangon = 4;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    golfie = tangon.jsx;
    var _closure1_slot8 = golfie;
    golfie = tangon.jsxs;
    var _closure1_slot9 = golfie;
    tangon = tangon.Fragment;
    var _closure1_slot10 = tangon;
    tangon = 5;
    tangon = oscard[tangon];
    option = report.bind(entity)(tangon);
    golfie = option.createStyles;
    tangon = {};
    verify = {'flex': 1, 'justifyContent': 'center', 'alignItems': 'center', 'textAlign': 'center'};
    offset = 6;
    romeon = oscard[offset];
    romeon = yankee.bind(entity)(romeon);
    romeon = romeon.spacing;
    romeon = romeon.PX_32;
    foxtra = -romeon;
    romeon = 7;
    romeon = oscard[romeon];
    romeon = report.bind(entity)(romeon);
    romeon = romeon.NAV_BAR_HEIGHT;
    romeon = foxtra - romeon;
    verify['marginTop'] = romeon;
    tangon['content'] = verify;
    verify = {'height': 135, 'width': 216};
    romeon = oscard[offset];
    romeon = yankee.bind(entity)(romeon);
    romeon = romeon.spacing;
    romeon = romeon.PX_24;
    verify['marginBottom'] = romeon;
    tangon['headerImage'] = verify;
    verify = {};
    romeon = oscard[offset];
    romeon = yankee.bind(entity)(romeon);
    romeon = romeon.spacing;
    romeon = romeon.PX_8;
    verify['marginBottom'] = romeon;
    tangon['title'] = verify;
    verify = {};
    romeon = oscard[offset];
    romeon = yankee.bind(entity)(romeon);
    romeon = romeon.spacing;
    romeon = romeon.PX_24;
    verify['marginBottom'] = romeon;
    tangon['subtitle'] = verify;
    verify = {'height': 48, 'width': '100%'};
    romeon = oscard[offset];
    romeon = yankee.bind(entity)(romeon);
    romeon = romeon.spacing;
    romeon = romeon.PX_16;
    verify['paddingHorizontal'] = romeon;
    tangon['buttonContainer'] = verify;
    verify = {};
    romeon = oscard[offset];
    romeon = yankee.bind(entity)(romeon);
    romeon = romeon.spacing;
    romeon = romeon.PX_4;
    verify['paddingBottom'] = romeon;
    romeon = 'flex-end';
    verify['justifyContent'] = romeon;
    offset = oscard[offset];
    offset = yankee.bind(entity)(offset);
    offset = offset.spacing;
    offset = offset.PX_16;
    verify['paddingHorizontal'] = offset;
    tangon['trailing'] = verify;
    tangon = golfie.bind(option)(tangon);
    var _closure1_slot11 = tangon;
    tangon = 15;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/contact_sync/native/components/ContactSyncLandingOnboardingRedesign.tsx';
    tangon = report.bind(oscard)(tangon);
    michal = function(argFoo) { // Original name: _default
        michal = argFoo;
        oscard = michal.onNext;
        var _closure2_slot0 = oscard;
        result = michal.loading;
        sizing = michal.error;
        romeon = michal.discoverabilityEnabled;
        yankee = michal.setDiscoverabilityEnabled;
        michal = _closure1_slot11;
        tangon = undefined;
        verify = michal.bind(tangon)();
        report = _closure1_slot4;
        zuuluu = report.useCallback;
        michal = _closure1_slot3;
        entity = function* () {
            entity = function* () { // Original name: ?anon_0_
                _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
                    StartGenerator();
                    ResumeGenerator(result_out_reg=0, return_bool_out_reg=1);
                    if(michal) { _fun00002_ip = 83; continue _fun00001 }
 7:
                    report = _closure1_slot1;
                    tangon = _closure1_slot2;
                    zuuluu = 8;
                    tangon = tangon[zuuluu];
                    zuuluu = undefined;
                    report = report.bind(zuuluu)(tangon);
                    tangon = report.requestPermission;
                    michal = _closure1_slot7;
                    michal = michal.CONTACTS;
                    michal = tangon.bind(report)(michal);
                    SaveGenerator(address=57);
 55:
                    return michal;
 57:
                    ResumeGenerator(result_out_reg=1, return_bool_out_reg=3);
                    if(tangon) { _fun00002_ip = 80; continue _fun00001 }
 63:
                    if(!michal) { _fun00002_ip = 77; continue _fun00001 }
 66:
                    tangon = _closure2_slot0;
                    tangon = tangon.bind(zuuluu)();
 77:
                    return zuuluu;
 80:
                    return michal;
 83:
                    return entity;
                }
            };
            return entity;
        };
        michal = michal.bind(tangon)(entity);
        entity = new Array(1);
        entity[0] = oscard;
        echoed = zuuluu.bind(report)(michal, entity);
        zuuluu = _closure1_slot9;
        michal = _closure1_slot10;
        entity = {};
        option = _closure1_slot5;
        report = {};
        oscard = verify.content;
        report['style'] = oscard;
        golfie = _closure1_slot8;
        kiloes = _closure1_slot6;
        oscard = {};
        offset = 'contain';
        oscard['resizeMode'] = offset;
        offset = verify.headerImage;
        oscard['style'] = offset;
        offset = _closure1_slot1;
        foxtra = _closure1_slot2;
        output = 9;
        output = foxtra[output];
        output = offset.bind(tangon)(output);
        oscard['source'] = output;
        kiloes = golfie.bind(tangon)(kiloes, oscard);
        oscard = new Array(5);
        oscard[0] = kiloes;
        vacuum = _closure1_slot0;
        backup = 10;
        kiloes = foxtra[backup];
        kiloes = vacuum.bind(tangon)(kiloes);
        output = kiloes.Text;
        kiloes = {};
        update = verify.title;
        kiloes['style'] = update;
        update = 'heading-xl/bold';
        kiloes['variant'] = update;
        update = 11;
        source = foxtra[update];
        source = vacuum.bind(tangon)(source);
        sequen = source.intl;
        ctrled = sequen.string;
        source = foxtra[update];
        source = vacuum.bind(tangon)(source);
        source = source.t;
        source = source./G+ncn;
        source = ctrled.bind(sequen)(source);
        kiloes['children'] = source;
        kiloes = golfie.bind(tangon)(output, kiloes);
        oscard[1] = kiloes;
        backup = foxtra[backup];
        backup = vacuum.bind(tangon)(backup);
        kiloes = backup.Text;
        backup = {};
        output = verify.subtitle;
        backup['style'] = output;
        output = 'text-sm/medium';
        backup['variant'] = output;
        output = foxtra[update];
        output = vacuum.bind(tangon)(output);
        ctrled = output.intl;
        source = ctrled.string;
        output = foxtra[update];
        output = vacuum.bind(tangon)(output);
        output = output.t;
        output = output.G8zcHh;
        output = source.bind(ctrled)(output);
        backup['children'] = output;
        backup = golfie.bind(tangon)(kiloes, backup);
        oscard[2] = backup;
        backup = {};
        kiloes = verify.buttonContainer;
        backup['style'] = kiloes;
        kiloes = 12;
        kiloes = foxtra[kiloes];
        kiloes = vacuum.bind(tangon)(kiloes);
        output = kiloes.Button;
        kiloes = {'variant': 'primary', 'size': 'lg'};
        source = foxtra[update];
        source = vacuum.bind(tangon)(source);
        ctrled = source.intl;
        source = ctrled.string;
        update = foxtra[update];
        update = vacuum.bind(tangon)(update);
        update = update.t;
        update = update.LhlgY2;
        update = source.bind(ctrled)(update);
        kiloes['text'] = update;
        kiloes['onPress'] = echoed;
        kiloes['loading'] = result;
        kiloes = golfie.bind(tangon)(output, kiloes);
        backup['children'] = kiloes;
        backup = golfie.bind(tangon)(option, backup);
        oscard[3] = backup;
        backup = 13;
        backup = foxtra[backup];
        kiloes = offset.bind(tangon)(backup);
        backup = {};
        backup['error'] = sizing;
        backup = golfie.bind(tangon)(kiloes, backup);
        oscard[4] = backup;
        report['children'] = oscard;
        oscard = zuuluu.bind(tangon)(option, report);
        report = new Array(2);
        report[0] = oscard;
        oscard = {};
        verify = verify.trailing;
        oscard['style'] = verify;
        verify = 14;
        verify = foxtra[verify];
        offset = offset.bind(tangon)(verify);
        verify = {};
        verify['discoverabilityEnabled'] = romeon;
        verify['onValueChanged'] = yankee;
        verify = golfie.bind(tangon)(offset, verify);
        oscard['children'] = verify;
        oscard = golfie.bind(tangon)(option, oscard);
        report[1] = oscard;
        entity['children'] = report;
        entity = zuuluu.bind(tangon)(michal, entity);
        return entity;
    };
    zuuluu['default'] = michal;
    return entity;
})();