// app/modules/remixing/native/RemixingCanvasStore.tsx
export default (function(global, require, metroImportDefault, metroImportAll, moduleObject, exports, dependencyMap) {
    var5 = require;
    var3 = exports;
    var6 = dependencyMap;
    var _closure1_slot0 = var5;
    var _closure1_slot1 = var6;
    var1 = global;
    var8 = var1.Object;
    var7 = var8.defineProperty;
    var4 = {};
    var1 = true;
    var4['value'] = var1;
    var1 = '__esModule';
    var1 = var7.bind(var8)(var3, var1, var4);
    var1 = 0;
    var4 = var6[var1];
    var1 = undefined;
    var4 = var5.bind(var1)(var4);
    var8 = var4.Dimensions;
    var7 = var8.get;
    var4 = 'screen';
    var4 = var7.bind(var8)(var4);
    var9 = var4.width;
    var8 = var4.height;
    var4 = {};
    var7 = 1;
    var7 = var6[var7];
    var7 = var5.bind(var1)(var7);
    var7 = var7.AspectRatio;
    var7 = var7.ORIGINAL;
    var4['aspectRatio'] = var7;
    var7 = {'x': 0, 'y': 0};
    var7['width'] = var9;
    var7['height'] = var8;
    var4['rect'] = var7;
    var _closure1_slot2 = var4;
    var4 = 2;
    var4 = var6[var4];
    var7 = var5.bind(var1)(var4);
    var4 = var7.createWithEqualityFn;
    var2 = function(arg1) {
        var1 = arg1;
        var _closure2_slot0 = var1;
        var1 = {};
        var5 = _closure1_slot2;
        var6 = var1;
        var3 = copyDataProperties(var6, var5);
        var4 = function setAspectRatio(arg1) {
            var2 = arg1;
            var _closure3_slot0 = var2;
            var4 = _closure1_slot0;
            var3 = _closure1_slot1;
            var2 = 3;
            var3 = var3[var2];
            var2 = undefined;
            var3 = var4.bind(var2)(var3);
            var2 = var3.batchUpdates;
            var1 = function() {
                var3 = _closure2_slot0;
                var2 = {};
                var1 = _closure3_slot0;
                var2['aspectRatio'] = var1;
                var1 = undefined;
                var1 = var3.bind(var1)(var2);
                return var1;
            };
            var1 = var2.bind(var3)(var1);
            return var1;
        };
        var3 = 'setAspectRatio';
        var1[var3] = var4;
        var4 = function setRect(arg1) {
            var2 = arg1;
            var _closure3_slot0 = var2;
            var4 = _closure1_slot0;
            var3 = _closure1_slot1;
            var2 = 3;
            var3 = var3[var2];
            var2 = undefined;
            var3 = var4.bind(var2)(var3);
            var2 = var3.batchUpdates;
            var1 = function() {
                var3 = _closure2_slot0;
                var2 = {};
                var1 = _closure3_slot0;
                var2['rect'] = var1;
                var1 = undefined;
                var1 = var3.bind(var1)(var2);
                return var1;
            };
            var1 = var2.bind(var3)(var1);
            return var1;
        };
        var3 = 'setRect';
        var1[var3] = var4;
        var3 = function reset() {
            var3 = _closure1_slot0;
            var2 = _closure1_slot1;
            var1 = 3;
            var2 = var2[var1];
            var1 = undefined;
            var4 = var3.bind(var1)(var2);
            var3 = var4.batchUpdates;
            var2 = function() {
                var3 = _closure2_slot0;
                var2 = {};
                var4 = _closure1_slot2;
                var5 = var2;
                var1 = copyDataProperties(var5, var4);
                var1 = undefined;
                var1 = var3.bind(var1)(var2);
                return var1;
            };
            var2 = var3.bind(var4)(var2);
            return var1;
        };
        var2 = 'reset';
        var1[var2] = var3;
        return var1;
    };
    var2 = var4.bind(var7)(var2);
    var4 = 4;
    var4 = var6[var4];
    var6 = var5.bind(var1)(var4);
    var5 = var6.fileFinishedImporting;
    var4 = 'modules/remixing/native/RemixingCanvasStore.tsx';
    var4 = var5.bind(var6)(var4);
    var3['useRemixingCanvasStore'] = var2;
    return var1;
})();