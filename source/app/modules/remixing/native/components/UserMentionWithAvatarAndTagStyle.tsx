// app/modules/remixing/native/components/UserMentionWithAvatarAndTagStyle.tsx
export default (function(argFoo, argBar, argBaz, argCorge, _, argFred, argPlugh) {
    report = argBar;
    zulu = argFred;
    oscar = argPlugh;
    var _closure1_slot0 = report;
    entity = argBaz;
    var _closure1_slot1 = entity;
    var _closure1_slot2 = oscar;
    entity = global;
    options = entity.Object;
    golf = options.defineProperty;
    tango = {};
    entity = true;
    tango['value'] = entity;
    entity = '__esModule';
    entity = golf.bind(options)(zulu, entity, tango);
    entity = 0;
    golf = oscar[entity];
    tango = argCorge;
    entity = undefined;
    golf = tango.bind(entity)(golf);
    tango = 1;
    options = oscar[tango];
    options = report.bind(entity)(options);
    options = options.jsx;
    var _closure1_slot3 = options;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.jsxs;
    var _closure1_slot4 = tango;
    tango = golf.memo;
    mike = function(argFoo) {
        _fun84194: for(var _fun84194_ip = 0; ; ) switch(_fun84194_ip) {
 0:
            mike = argFoo;
            options = mike.id;
            foxtrot = mike.avatar;
            yankee = mike.font;
            entity = mike.fontSize;
            verify = mike.color;
            golf = mike.width;
            offset = mike.mentionDisplayText;
            result = mike.position;
            oscar = _closure1_slot1;
            mike = _closure1_slot2;
            zulu = 2;
            zulu = mike[zulu];
            tango = undefined;
            oscar = oscar.bind(tango)(zulu);
            zulu = '@';
            zulu = zulu + offset;
            backup = oscar.bind(tango)(options, yankee, zulu);
            zulu = _closure1_slot0;
            romeo = 3;
            oscar = mike[romeo];
            options = zulu.bind(tango)(oscar);
            oscar = options.getTextLineWidth;
            oscar = oscar.bind(options)(yankee, backup);
            mike = mike[romeo];
            zulu = zulu.bind(tango)(mike);
            mike = zulu.centerAlignText;
            config = zulu;
            sequence = oscar;
            vacuum = result;
            control = golf;
            source = entity;
            offset = config[mike](sequence, vacuum, control, source, update);
            mike = 30;
            if(!(!(entity < mike))) { _fun84194_ip = 165; continue _fun84194 }
 156:
            mike = 10;
            echo = entity / mike;
            _fun84194_ip = 175; continue _fun84194;
 165:
            mike = -entity;
            entity = 10;
            echo = mike / entity;
 175:
            zulu = _closure1_slot4;
            golf = _closure1_slot0;
            kilo = _closure1_slot2;
            oscar = 4;
            entity = kilo[oscar];
            entity = golf.bind(tango)(entity);
            mike = entity.Group;
            entity = {};
            options = _closure1_slot3;
            sizing = _closure1_slot1;
            report = 5;
            report = kilo[report];
            sizing = sizing.bind(tango)(report);
            report = {};
            report['avatarImage'] = foxtrot;
            foxtrot = 12;
            report['avatarSize'] = foxtrot;
            output = {};
            update = offset.x;
            foxtrot = 24;
            update = update - foxtrot;
            output['x'] = update;
            result = result.y;
            result = result + echo;
            output['y'] = result;
            report['position'] = output;
            sizing = options.bind(tango)(sizing, report);
            report = new Array(2);
            report[0] = sizing;
            oscar = kilo[oscar];
            oscar = golf.bind(tango)(oscar);
            golf = oscar.Text;
            oscar = {};
            oscar['text'] = backup;
            oscar['font'] = yankee;
            yankee = offset.x;
            yankee = yankee + foxtrot;
            yankee = yankee - romeo;
            oscar['x'] = yankee;
            offset = offset.y;
            oscar['y'] = offset;
            oscar['color'] = verify;
            oscar = options.bind(tango)(golf, oscar);
            report[1] = oscar;
            entity['children'] = report;
            entity = zulu.bind(tango)(mike, entity);
            return entity;
        }
    };
    mike = tango.bind(golf)(mike);
    tango = 6;
    tango = oscar[tango];
    oscar = report.bind(entity)(tango);
    report = oscar.fileFinishedImporting;
    tango = 'modules/remixing/native/components/UserMentionWithAvatarAndTagStyle.tsx';
    tango = report.bind(oscar)(tango);
    zulu['default'] = mike;
    mike = 12;
    zulu['TAG_AVATAR_SIZE'] = mike;
    return entity;
})();