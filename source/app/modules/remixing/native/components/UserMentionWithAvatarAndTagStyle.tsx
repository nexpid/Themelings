// app/modules/remixing/native/components/UserMentionWithAvatarAndTagStyle.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    report = argBar;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    entity = argBaz;
    var _closure1_slot1 = entity;
    var _closure1_slot2 = oscard;
    entity = global;
    option = entity.Object;
    golfie = option.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(option)(zuuluu, entity, tangon);
    entity = 0;
    golfie = oscard[entity];
    tangon = argCor;
    entity = undefined;
    golfie = tangon.bind(entity)(golfie);
    tangon = 1;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    option = tangon.jsx;
    var _closure1_slot3 = option;
    tangon = tangon.jsxs;
    var _closure1_slot4 = tangon;
    tangon = golfie.memo;
    michal = function(argFoo) {
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            michal = argFoo;
            option = michal.id;
            foxtra = michal.avatar;
            yankee = michal.font;
            entity = michal.fontSize;
            verify = michal.color;
            golfie = michal.width;
            offset = michal.mentionDisplayText;
            result = michal.position;
            oscard = _closure1_slot1;
            michal = _closure1_slot2;
            zuuluu = 2;
            zuuluu = michal[zuuluu];
            tangon = undefined;
            oscard = oscard.bind(tangon)(zuuluu);
            zuuluu = '@';
            zuuluu = zuuluu + offset;
            backup = oscard.bind(tangon)(option, yankee, zuuluu);
            zuuluu = _closure1_slot0;
            romeon = 3;
            oscard = michal[romeon];
            option = zuuluu.bind(tangon)(oscard);
            oscard = option.getTextLineWidth;
            oscard = oscard.bind(option)(yankee, backup);
            michal = michal[romeon];
            zuuluu = zuuluu.bind(tangon)(michal);
            michal = zuuluu.centerAlignText;
            config = zuuluu;
            sequen = oscard;
            vacuum = result;
            ctrled = golfie;
            source = entity;
            offset = config[michal](sequen, vacuum, ctrled, source, update);
            michal = 30;
            if(!(!(entity < michal))) { _fun00002_ip = 165; continue _fun00001 }
 156:
            michal = 10;
            echoed = entity / michal;
            _fun00002_ip = 175; continue _fun00001;
 165:
            michal = -entity;
            entity = 10;
            echoed = michal / entity;
 175:
            zuuluu = _closure1_slot4;
            golfie = _closure1_slot0;
            kiloes = _closure1_slot2;
            oscard = 4;
            entity = kiloes[oscard];
            entity = golfie.bind(tangon)(entity);
            michal = entity.Group;
            entity = {};
            option = _closure1_slot3;
            sizing = _closure1_slot1;
            report = 5;
            report = kiloes[report];
            sizing = sizing.bind(tangon)(report);
            report = {};
            report['avatarImage'] = foxtra;
            foxtra = 12;
            report['avatarSize'] = foxtra;
            output = {};
            update = offset.x;
            foxtra = 24;
            update = update - foxtra;
            output['x'] = update;
            result = result.y;
            result = result + echoed;
            output['y'] = result;
            report['position'] = output;
            sizing = option.bind(tangon)(sizing, report);
            report = new Array(2);
            report[0] = sizing;
            oscard = kiloes[oscard];
            oscard = golfie.bind(tangon)(oscard);
            golfie = oscard.Text;
            oscard = {};
            oscard['text'] = backup;
            oscard['font'] = yankee;
            yankee = offset.x;
            yankee = yankee + foxtra;
            yankee = yankee - romeon;
            oscard['x'] = yankee;
            offset = offset.y;
            oscard['y'] = offset;
            oscard['color'] = verify;
            oscard = option.bind(tangon)(golfie, oscard);
            report[1] = oscard;
            entity['children'] = report;
            entity = zuuluu.bind(tangon)(michal, entity);
            return entity;
        }
    };
    michal = tangon.bind(golfie)(michal);
    tangon = 6;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/remixing/native/components/UserMentionWithAvatarAndTagStyle.tsx';
    tangon = report.bind(oscard)(tangon);
    zuuluu['default'] = michal;
    michal = 12;
    zuuluu['TAG_AVATAR_SIZE'] = michal;
    return entity;
})();