// app/modules/remixing/native/components/UserMentionWithTextBackgroundStyle.tsx
export default (function(argFoo, argBar, argBaz, argCorge, _, argFred, argPlugh) {
    report = argBar;
    zulu = argFred;
    oscar = argPlugh;
    var _closure1_slot0 = report;
    entity = argBaz;
    var _closure1_slot1 = entity;
    var _closure1_slot2 = oscar;
    entity = global;
    options = entity.Object;
    golf = options.defineProperty;
    tango = {};
    entity = true;
    tango['value'] = entity;
    entity = '__esModule';
    entity = golf.bind(options)(zulu, entity, tango);
    entity = 0;
    golf = oscar[entity];
    tango = argCorge;
    entity = undefined;
    golf = tango.bind(entity)(golf);
    tango = 1;
    options = oscar[tango];
    options = report.bind(entity)(options);
    options = options.jsx;
    var _closure1_slot3 = options;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.jsxs;
    var _closure1_slot4 = tango;
    tango = golf.memo;
    mike = function(argFoo) {
        entity = argFoo;
        golf = entity.id;
        verify = entity.font;
        update = entity.fontSize;
        offset = entity.color;
        oscar = entity.width;
        options = entity.mentionDisplayText;
        entity = entity.position;
        backup = _closure1_slot1;
        foxtrot = _closure1_slot2;
        echo = 2;
        mike = foxtrot[echo];
        tango = undefined;
        zulu = backup.bind(tango)(mike);
        mike = '@';
        mike = mike + options;
        romeo = zulu.bind(tango)(golf, verify, mike);
        golf = _closure1_slot0;
        mike = 3;
        zulu = foxtrot[mike];
        options = golf.bind(tango)(zulu);
        zulu = options.getTextLineWidth;
        kilo = zulu.bind(options)(verify, romeo);
        mike = foxtrot[mike];
        zulu = golf.bind(tango)(mike);
        mike = zulu.centerAlignText;
        config = zulu;
        sequence = kilo;
        vacuum = entity;
        control = oscar;
        source = update;
        yankee = config[mike](sequence, vacuum, control, source, update);
        oscar = 4;
        mike = foxtrot[oscar];
        options = golf.bind(tango)(mike);
        zulu = options.rrect;
        mike = foxtrot[oscar];
        result = golf.bind(tango)(mike);
        output = result.rect;
        sizing = yankee.x;
        mike = 12;
        sequence = sizing - mike;
        mike = entity.y;
        entity = 30;
        entity = update - entity;
        entity = entity / oscar;
        entity = mike + entity;
        mike = 24;
        control = kilo + mike;
        mike = 15;
        source = update + mike;
        vacuum = entity - echo;
        config = result;
        mike = config[output](sequence, vacuum, control, source, update);
        entity = 7;
        kilo = zulu.bind(options)(mike, entity, entity);
        zulu = _closure1_slot4;
        entity = foxtrot[oscar];
        entity = golf.bind(tango)(entity);
        mike = entity.Group;
        entity = {};
        options = _closure1_slot3;
        report = 5;
        report = foxtrot[report];
        backup = backup.bind(tango)(report);
        report = {};
        report['backgroundRect'] = kilo;
        kilo = 1;
        report['borderSize'] = kilo;
        backup = options.bind(tango)(backup, report);
        report = new Array(2);
        report[0] = backup;
        oscar = foxtrot[oscar];
        oscar = golf.bind(tango)(oscar);
        golf = oscar.Text;
        oscar = {};
        oscar['text'] = romeo;
        romeo = yankee.x;
        oscar['x'] = romeo;
        yankee = yankee.y;
        oscar['y'] = yankee;
        oscar['color'] = offset;
        oscar['font'] = verify;
        oscar = options.bind(tango)(golf, oscar);
        report[1] = oscar;
        entity['children'] = report;
        entity = zulu.bind(tango)(mike, entity);
        return entity;
    };
    mike = tango.bind(golf)(mike);
    tango = 6;
    tango = oscar[tango];
    oscar = report.bind(entity)(tango);
    report = oscar.fileFinishedImporting;
    tango = 'modules/remixing/native/components/UserMentionWithTextBackgroundStyle.tsx';
    tango = report.bind(oscar)(tango);
    zulu['default'] = mike;
    mike = 3;
    zulu['BACKGROUND_PADDING'] = mike;
    return entity;
})();