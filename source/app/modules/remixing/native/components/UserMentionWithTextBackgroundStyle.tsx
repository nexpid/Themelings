// app/modules/remixing/native/components/UserMentionWithTextBackgroundStyle.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    report = argBar;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    entity = argBaz;
    var _closure1_slot1 = entity;
    var _closure1_slot2 = oscard;
    entity = global;
    option = entity.Object;
    golfie = option.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(option)(zuuluu, entity, tangon);
    entity = 0;
    golfie = oscard[entity];
    tangon = argCor;
    entity = undefined;
    golfie = tangon.bind(entity)(golfie);
    tangon = 1;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    option = tangon.jsx;
    var _closure1_slot3 = option;
    tangon = tangon.jsxs;
    var _closure1_slot4 = tangon;
    tangon = golfie.memo;
    michal = function(argFoo) {
        entity = argFoo;
        golfie = entity.id;
        verify = entity.font;
        update = entity.fontSize;
        offset = entity.color;
        oscard = entity.width;
        option = entity.mentionDisplayText;
        entity = entity.position;
        backup = _closure1_slot1;
        foxtra = _closure1_slot2;
        echoed = 2;
        michal = foxtra[echoed];
        tangon = undefined;
        zuuluu = backup.bind(tangon)(michal);
        michal = '@';
        michal = michal + option;
        romeon = zuuluu.bind(tangon)(golfie, verify, michal);
        golfie = _closure1_slot0;
        michal = 3;
        zuuluu = foxtra[michal];
        option = golfie.bind(tangon)(zuuluu);
        zuuluu = option.getTextLineWidth;
        kiloes = zuuluu.bind(option)(verify, romeon);
        michal = foxtra[michal];
        zuuluu = golfie.bind(tangon)(michal);
        michal = zuuluu.centerAlignText;
        config = zuuluu;
        sequen = kiloes;
        vacuum = entity;
        ctrled = oscard;
        source = update;
        yankee = config[michal](sequen, vacuum, ctrled, source, update);
        oscard = 4;
        michal = foxtra[oscard];
        option = golfie.bind(tangon)(michal);
        zuuluu = option.rrect;
        michal = foxtra[oscard];
        result = golfie.bind(tangon)(michal);
        output = result.rect;
        sizing = yankee.x;
        michal = 12;
        sequen = sizing - michal;
        michal = entity.y;
        entity = 30;
        entity = update - entity;
        entity = entity / oscard;
        entity = michal + entity;
        michal = 24;
        ctrled = kiloes + michal;
        michal = 15;
        source = update + michal;
        vacuum = entity - echoed;
        config = result;
        michal = config[output](sequen, vacuum, ctrled, source, update);
        entity = 7;
        kiloes = zuuluu.bind(option)(michal, entity, entity);
        zuuluu = _closure1_slot4;
        entity = foxtra[oscard];
        entity = golfie.bind(tangon)(entity);
        michal = entity.Group;
        entity = {};
        option = _closure1_slot3;
        report = 5;
        report = foxtra[report];
        backup = backup.bind(tangon)(report);
        report = {};
        report['backgroundRect'] = kiloes;
        kiloes = 1;
        report['borderSize'] = kiloes;
        backup = option.bind(tangon)(backup, report);
        report = new Array(2);
        report[0] = backup;
        oscard = foxtra[oscard];
        oscard = golfie.bind(tangon)(oscard);
        golfie = oscard.Text;
        oscard = {};
        oscard['text'] = romeon;
        romeon = yankee.x;
        oscard['x'] = romeon;
        yankee = yankee.y;
        oscard['y'] = yankee;
        oscard['color'] = offset;
        oscard['font'] = verify;
        oscard = option.bind(tangon)(golfie, oscard);
        report[1] = oscard;
        entity['children'] = report;
        entity = zuuluu.bind(tangon)(michal, entity);
        return entity;
    };
    michal = tangon.bind(golfie)(michal);
    tangon = 6;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/remixing/native/components/UserMentionWithTextBackgroundStyle.tsx';
    tangon = report.bind(oscard)(tangon);
    zuuluu['default'] = michal;
    michal = 3;
    zuuluu['BACKGROUND_PADDING'] = michal;
    return entity;
})();