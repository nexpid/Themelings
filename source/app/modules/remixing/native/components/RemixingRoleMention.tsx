// app/modules/remixing/native/components/RemixingRoleMention.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    report = argBar;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    entity = argBaz;
    var _closure1_slot1 = entity;
    var _closure1_slot2 = oscard;
    entity = global;
    option = entity.Object;
    golfie = option.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(option)(zuuluu, entity, tangon);
    entity = 0;
    golfie = oscard[entity];
    tangon = argCor;
    entity = undefined;
    golfie = tangon.bind(entity)(golfie);
    tangon = 1;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.jsx;
    var _closure1_slot3 = tangon;
    tangon = golfie.memo;
    michal = function(argFoo) {
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            entity = argFoo;
            tangon = entity.id;
            backup = entity.size;
            output = entity.position;
            yankee = entity.transform;
            offset = entity.transformMap;
            option = entity.fontSize;
            michal = entity.mentionDisplayText;
            verify = entity.color;
            report = _closure1_slot1;
            golfie = _closure1_slot2;
            entity = 2;
            entity = golfie[entity];
            oscard = undefined;
            entity = report.bind(oscard)(entity);
            sizing = entity.bind(oscard)(tangon, offset, yankee);
            entity = 3;
            entity = golfie[entity];
            entity = report.bind(oscard)(entity);
            entity = entity.bind(oscard)(option);
            yankee = entity.font;
            entity = 4;
            entity = golfie[entity];
            entity = report.bind(oscard)(entity);
            romeon = entity.bind(oscard)(tangon, yankee, michal);
            entity = null;
            if(!(entity !== yankee)) { _fun00002_ip = 377; continue _fun00001 }
 129:
            tangon = _closure1_slot0;
            michal = _closure1_slot2;
            kiloes = 5;
            report = michal[kiloes];
            golfie = tangon.bind(oscard)(report);
            report = golfie.getTextLineWidth;
            golfie = report.bind(golfie)(yankee, romeon);
            michal = michal[kiloes];
            report = tangon.bind(oscard)(michal);
            tangon = report.centerAlignText;
            vacuum = backup.width;
            record = report;
            config = golfie;
            sequen = output;
            ctrled = option;
            offset = record[tangon](config, sequen, vacuum, ctrled, source);
            tangon = entity == yankee;
            michal = null;
            if(tangon) { _fun00002_ip = 375; continue _fun00001 }
 209:
            report = _closure1_slot3;
            option = _closure1_slot0;
            foxtra = _closure1_slot2;
            golfie = 6;
            zuuluu = foxtra[golfie];
            zuuluu = option.bind(oscard)(zuuluu);
            tangon = zuuluu.Group;
            zuuluu = {};
            zuuluu['transform'] = sizing;
            kiloes = foxtra[kiloes];
            sizing = option.bind(oscard)(kiloes);
            kiloes = sizing.centerOfRect;
            result = foxtra[golfie];
            source = option.bind(oscard)(result);
            update = source.rect;
            config = output.x;
            sequen = output.y;
            vacuum = backup.width;
            ctrled = backup.height;
            record = source;
            backup = record[update](config, sequen, vacuum, ctrled, source);
            backup = kiloes.bind(sizing)(backup);
            zuuluu['origin'] = backup;
            golfie = foxtra[golfie];
            golfie = option.bind(oscard)(golfie);
            option = golfie.Text;
            golfie = {};
            golfie['text'] = romeon;
            golfie['font'] = yankee;
            yankee = offset.x;
            golfie['x'] = yankee;
            offset = offset.y;
            golfie['y'] = offset;
            golfie['color'] = verify;
            golfie = report.bind(oscard)(option, golfie);
            zuuluu['children'] = golfie;
            michal = report.bind(oscard)(tangon, zuuluu);
 375:
            return michal;
 377:
            return entity;
        }
    };
    michal = tangon.bind(golfie)(michal);
    tangon = 7;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/remixing/native/components/RemixingRoleMention.tsx';
    tangon = report.bind(oscard)(tangon);
    zuuluu['default'] = michal;
    return entity;
})();