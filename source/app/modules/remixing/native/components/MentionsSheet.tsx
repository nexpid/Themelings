// app/modules/remixing/native/components/MentionsSheet.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
        report = argBar;
        yankee = argBaz;
        zuuluu = argFre;
        oscard = argPlu;
        var _closure1_slot0 = report;
        var _closure1_slot1 = yankee;
        var _closure1_slot2 = oscard;
        entity = global;
        option = entity.Object;
        golfie = option.defineProperty;
        tangon = {};
        entity = true;
        tangon['value'] = entity;
        entity = '__esModule';
        entity = golfie.bind(option)(zuuluu, entity, tangon);
        backup = 0;
        tangon = oscard[backup];
        entity = undefined;
        tangon = yankee.bind(entity)(tangon);
        var _closure1_slot3 = tangon;
        tangon = 1;
        golfie = oscard[tangon];
        tangon = argCor;
        tangon = tangon.bind(entity)(golfie);
        var _closure1_slot4 = tangon;
        tangon = 2;
        tangon = oscard[tangon];
        tangon = report.bind(entity)(tangon);
        golfie = tangon.View;
        var _closure1_slot5 = golfie;
        tangon = tangon.FlatList;
        var _closure1_slot6 = tangon;
        tangon = 3;
        tangon = oscard[tangon];
        tangon = yankee.bind(entity)(tangon);
        var _closure1_slot7 = tangon;
        tangon = 4;
        tangon = oscard[tangon];
        tangon = yankee.bind(entity)(tangon);
        var _closure1_slot8 = tangon;
        tangon = 5;
        tangon = oscard[tangon];
        tangon = yankee.bind(entity)(tangon);
        var _closure1_slot9 = tangon;
        tangon = 6;
        tangon = oscard[tangon];
        tangon = yankee.bind(entity)(tangon);
        var _closure1_slot10 = tangon;
        tangon = 7;
        tangon = oscard[tangon];
        tangon = yankee.bind(entity)(tangon);
        var _closure1_slot11 = tangon;
        foxtra = 8;
        tangon = oscard[foxtra];
        tangon = report.bind(entity)(tangon);
        tangon = tangon.useRemixingMentionsStore;
        var _closure1_slot12 = tangon;
        tangon = 9;
        tangon = oscard[tangon];
        tangon = report.bind(entity)(tangon);
        golfie = tangon.AutoCompleteResultTypes;
        var _closure1_slot13 = golfie;
        romeon = tangon.Fonts;
        tangon = tangon.Permissions;
        var _closure1_slot14 = tangon;
        tangon = 10;
        tangon = oscard[tangon];
        tangon = report.bind(entity)(tangon);
        kiloes = tangon.AUTOCOMPLETE_ROW_HEIGHT;
        tangon = 11;
        tangon = oscard[tangon];
        tangon = report.bind(entity)(tangon);
        tangon = tangon.jsx;
        var _closure1_slot15 = tangon;
        tangon = 12;
        tangon = oscard[tangon];
        option = report.bind(entity)(tangon);
        golfie = option.createStyles;
        tangon = {};
        offset = '100%';
        verify = {'display': 'flex', 'alignItems': 'center', 'width': '100%', 'height': '100%', 'overflow': 'hidden'};
        tangon['iconContainer'] = verify;
        verify = {};
        verify['width'] = offset;
        offset = 13;
        offset = oscard[offset];
        sizing = report.bind(entity)(offset);
        offset = sizing.isAndroid;
        sizing = offset.bind(sizing)();
        offset = 0;
        if(!sizing) { _fun00002_ip = 383; continue _fun00001 }
 380:
        offset = foxtra;
 383:
        verify['paddingBottom'] = offset;
        tangon['safeAreaPaddingView'] = verify;
        verify = {'flexGrow': 0, 'flexShrink': 1, 'width': '100%', 'height': '100%'};
        offset = 14;
        foxtra = oscard[offset];
        foxtra = yankee.bind(entity)(foxtra);
        foxtra = foxtra.radii;
        foxtra = foxtra.md;
        verify['borderTopLeftRadius'] = foxtra;
        foxtra = oscard[offset];
        foxtra = yankee.bind(entity)(foxtra);
        foxtra = foxtra.radii;
        foxtra = foxtra.md;
        verify['borderTopRightRadius'] = foxtra;
        tangon['autocomplete'] = verify;
        verify = {'display': 'flex', 'flexDirection': 'column', 'alignItems': 'center', 'width': '100%', 'top': 12};
        tangon['keyboardAwareView'] = verify;
        foxtra = 16;
        verify = {'marginLeft': 16, 'height': 1};
        tangon['itemDivider'] = verify;
        verify = {};
        verify['height'] = kiloes;
        verify['paddingVertical'] = backup;
        tangon['row'] = verify;
        verify = {};
        verify['fontSize'] = foxtra;
        foxtra = oscard[offset];
        foxtra = yankee.bind(entity)(foxtra);
        foxtra = foxtra.colors;
        foxtra = foxtra.WHITE;
        verify['color'] = foxtra;
        romeon = romeon.PRIMARY_SEMIBOLD;
        verify['fontFamily'] = romeon;
        tangon['leading'] = verify;
        verify = {};
        verify['fontSize'] = offset;
        romeon = oscard[offset];
        romeon = yankee.bind(entity)(romeon);
        romeon = romeon.unsafe_rawColors;
        romeon = romeon.PRIMARY_360;
        verify['color'] = romeon;
        tangon['trailing'] = verify;
        verify = {};
        offset = oscard[offset];
        offset = yankee.bind(entity)(offset);
        offset = offset.unsafe_rawColors;
        offset = offset.PRIMARY_400;
        verify['color'] = offset;
        tangon['username'] = verify;
        tangon = golfie.bind(option)(tangon);
        var _closure1_slot16 = tangon;
        tangon = 'white';
        var _closure1_slot17 = tangon;
        tangon = function(argFoo) { // Original name: UserMentionItem
            _fun00003: for(var _fun00004_ip = 0; ; ) switch(_fun00004_ip) {
 0:
                michal = argFoo;
                verify = michal.user;
                var _closure2_slot0 = verify;
                foxtra = michal.canvasCenterPoint;
                var _closure2_slot1 = foxtra;
                romeon = michal.onSelect;
                var _closure2_slot2 = romeon;
                tangon = undefined;
                var _closure2_slot4 = tangon;
                var _closure2_slot5 = tangon;
                var _closure2_slot6 = tangon;
                michal = _closure1_slot16;
                option = michal.bind(tangon)();
                zuuluu = _closure1_slot0;
                oscard = _closure1_slot2;
                michal = 19;
                golfie = oscard[michal];
                backup = zuuluu.bind(tangon)(golfie);
                yankee = backup.useStateFromStoresObject;
                golfie = _closure1_slot10;
                offset = new Array(1);
                offset[0] = golfie;
                golfie = function() {
                    entity = {};
                    tangon = _closure1_slot10;
                    report = tangon.isMobileOnline;
                    michal = _closure2_slot0;
                    zuuluu = michal.id;
                    zuuluu = report.bind(tangon)(zuuluu);
                    entity['isMobileOnline'] = zuuluu;
                    zuuluu = tangon.getStatus;
                    michal = michal.id;
                    michal = zuuluu.bind(tangon)(michal);
                    entity['status'] = michal;
                    return entity;
                };
                golfie = yankee.bind(backup)(offset, golfie);
                sizing = golfie.isMobileOnline;
                kiloes = golfie.status;
                offset = _closure1_slot11;
                golfie = offset.getGuildId;
                yankee = golfie.bind(offset)();
                var _closure2_slot3 = yankee;
                michal = oscard[michal];
                golfie = zuuluu.bind(tangon)(michal);
                oscard = golfie.useStateFromStores;
                michal = _closure1_slot8;
                zuuluu = new Array(1);
                zuuluu[0] = michal;
                michal = function() {
                    _fun00005: for(var _fun00006_ip = 0; ; ) switch(_fun00006_ip) {
 0:
                        zuuluu = _closure2_slot3;
                        entity = null;
                        zuuluu = entity != zuuluu;
                        if(!zuuluu) { _fun00006_ip = 48; continue _fun00005 }
 16:
                        report = _closure1_slot8;
                        tangon = report.getMember;
                        zuuluu = _closure2_slot3;
                        michal = _closure2_slot0;
                        michal = michal.id;
                        entity = tangon.bind(report)(zuuluu, michal);
 48:
                        return entity;
                    }
                };
                michal = oscard.bind(golfie)(zuuluu, michal);
                offset = null;
                zuuluu = offset == michal;
                golfie = undefined;
                if(zuuluu) { _fun00004_ip = 191; continue _fun00003 }
 185:
                golfie = michal.colorString;
 191:
                _closure2_slot4 = golfie;
                oscard = _closure1_slot4;
                backup = oscard.useCallback;
                zuuluu = new Array(1);
                zuuluu[0] = verify;
                michal = function(argFoo) {
                    zuuluu = argFoo;
                    entity = {};
                    michal = _closure2_slot0;
                    michal = michal.username;
                    michal = michal.length;
                    tangon = michal * zuuluu;
                    michal = 1.4;
                    michal = tangon / michal;
                    entity['width'] = michal;
                    michal = 1.5;
                    michal = michal * zuuluu;
                    entity['height'] = michal;
                    return entity;
                };
                output = backup.bind(oscard)(michal, zuuluu);
                _closure2_slot5 = output;
                backup = oscard.useCallback;
                zuuluu = new Array(1);
                zuuluu[0] = verify;
                michal = function() {
                    zuuluu = _closure1_slot0;
                    michal = _closure1_slot2;
                    entity = 20;
                    michal = michal[entity];
                    entity = undefined;
                    zuuluu = zuuluu.bind(entity)(michal);
                    michal = zuuluu.getFontSizeApproximation;
                    entity = _closure2_slot0;
                    entity = entity.username;
                    entity = michal.bind(zuuluu)(entity);
                    return entity;
                };
                backup = backup.bind(oscard)(michal, zuuluu);
                _closure2_slot6 = backup;
                zuuluu = oscard.useCallback;
                michal = new Array(6);
                michal[0] = verify;
                michal[1] = output;
                michal[2] = backup;
                michal[3] = foxtra;
                michal[4] = romeon;
                michal[5] = golfie;
                entity = function() {
                    _fun00007: for(var _fun00008_ip = 0; ; ) switch(_fun00008_ip) {
 0:
                        michal = _closure2_slot6;
                        entity = undefined;
                        verify = michal.bind(entity)();
                        michal = _closure2_slot5;
                        golfie = michal.bind(entity)(verify);
                        michal = _closure2_slot0;
                        michal = michal.username;
                        offset = null;
                        tangon = offset != michal;
                        yankee = '';
                        if(!tangon) { _fun00008_ip = 47; continue _fun00007 }
 44:
                        yankee = michal;
 47:
                        michal = _closure2_slot0;
                        michal = michal.globalName;
                        backup = yankee;
                        if(!(offset != michal)) { _fun00008_ip = 67; continue _fun00007 }
 64:
                        backup = michal;
 67:
                        romeon = global;
                        michal = romeon.Map;
                        tangon = michal.prototype;
                        tangon = Object.create(tangon, {constructor: {value: michal}});
                        record = tangon;
                        michal = new record[michal](config);
                        option = michal instanceof Object ? michal : tangon;
                        result = _closure1_slot0;
                        tangon = _closure1_slot2;
                        foxtra = 15;
                        report = tangon[foxtra];
                        output = result.bind(entity)(report);
                        kiloes = output.rect;
                        vacuum = golfie.width;
                        ctrled = golfie.height;
                        record = output;
                        config = 0;
                        sequen = 0;
                        output = record[kiloes](config, sequen, vacuum, ctrled, source);
                        kiloes = option.set;
                        report = 16;
                        oscard = tangon[report];
                        oscard = result.bind(entity)(oscard);
                        oscard = oscard.MentionStyle;
                        oscard = oscard.TEXT_WITH_BACKGROUND;
                        oscard = kiloes.bind(option)(oscard, output);
                        oscard = tangon[foxtra];
                        echoed = result.bind(entity)(oscard);
                        output = echoed.rect;
                        oscard = 17;
                        oscard = tangon[oscard];
                        oscard = result.bind(entity)(oscard);
                        kiloes = oscard.TAG_AVATAR_SIZE;
                        oscard = 2;
                        kiloes = oscard * kiloes;
                        oscard = golfie.width;
                        vacuum = kiloes + oscard;
                        ctrled = golfie.height;
                        record = echoed;
                        config = 0;
                        sequen = 0;
                        output = record[output](config, sequen, vacuum, ctrled, source);
                        kiloes = option.set;
                        oscard = tangon[report];
                        oscard = result.bind(entity)(oscard);
                        oscard = oscard.MentionStyle;
                        oscard = oscard.AVATAR_AND_TAG;
                        oscard = kiloes.bind(option)(oscard, output);
                        oscard = tangon[foxtra];
                        update = result.bind(entity)(oscard);
                        echoed = update.rect;
                        output = 18;
                        oscard = tangon[output];
                        oscard = result.bind(entity)(oscard);
                        oscard = oscard.DEFAULT_AVATAR_SIZE;
                        source = 3;
                        vacuum = source * oscard;
                        oscard = tangon[output];
                        oscard = result.bind(entity)(oscard);
                        oscard = oscard.DEFAULT_AVATAR_SIZE;
                        ctrled = source * oscard;
                        record = update;
                        config = 0;
                        sequen = 0;
                        kiloes = record[echoed](config, sequen, vacuum, ctrled, source);
                        oscard = option.set;
                        tangon = tangon[report];
                        tangon = result.bind(entity)(tangon);
                        tangon = tangon.MentionStyle;
                        tangon = tangon.AVATAR;
                        tangon = oscard.bind(option)(tangon, kiloes);
                        oscard = golfie.width;
                        tangon = yankee.trim;
                        tangon = tangon.bind(yankee)();
                        tangon = tangon.length;
                        oscard = oscard / tangon;
                        tangon = backup.trim;
                        tangon = tangon.bind(backup)();
                        tangon = tangon.length;
                        oscard = tangon * oscard;
                        tangon = golfie.width;
                        if(!(!(oscard > tangon))) { _fun00008_ip = 438; continue _fun00007 }
 431:
                        kiloes = golfie.width;
                        _fun00008_ip = 472; continue _fun00007;
 438:
                        backup = _closure1_slot0;
                        tangon = _closure1_slot2;
                        tangon = tangon[output];
                        tangon = backup.bind(entity)(tangon);
                        backup = tangon.BACKGROUND_PADDING;
                        tangon = 4;
                        tangon = tangon * backup;
                        kiloes = oscard + tangon;
 472:
                        oscard = _closure1_slot0;
                        tangon = _closure1_slot2;
                        foxtra = tangon[foxtra];
                        backup = oscard.bind(entity)(foxtra);
                        foxtra = backup.rect;
                        output = golfie.height;
                        golfie = 2.5;
                        ctrled = golfie * output;
                        record = backup;
                        config = 0;
                        sequen = 0;
                        vacuum = kiloes;
                        foxtra = record[foxtra](config, sequen, vacuum, ctrled, source);
                        golfie = option.set;
                        report = tangon[report];
                        report = oscard.bind(entity)(report);
                        report = report.MentionStyle;
                        report = report.CARD;
                        report = golfie.bind(option)(report, foxtra);
                        report = 21;
                        tangon = tangon[report];
                        golfie = oscard.bind(entity)(tangon);
                        oscard = golfie.createMention;
                        tangon = {};
                        foxtra = _closure2_slot0;
                        kiloes = foxtra.id;
                        romeon = romeon.HermesInternal;
                        backup = romeon.concat;
                        foxtra = '<@';
                        romeon = '>';
                        romeon = backup.bind(foxtra)(kiloes, romeon);
                        tangon['mention'] = romeon;
                        tangon['mentionDisplayText'] = yankee;
                        yankee = _closure2_slot5;
                        yankee = yankee.bind(entity)(verify);
                        tangon['size'] = yankee;
                        yankee = _closure2_slot1;
                        tangon['canvasCenterPoint'] = yankee;
                        tangon['fontSize'] = verify;
                        verify = _closure2_slot4;
                        if(!(offset == verify)) { _fun00008_ip = 667; continue _fun00007 }
 661:
                        verify = _closure1_slot17;
                        _fun00008_ip = 671; continue _fun00007;
 667:
                        verify = _closure2_slot4;
 671:
                        tangon['color'] = verify;
                        verify = _closure1_slot13;
                        verify = verify.USER;
                        tangon['mentionType'] = verify;
                        verify = _closure2_slot0;
                        tangon['user'] = verify;
                        tangon['boundingRects'] = option;
                        golfie = oscard.bind(golfie)(tangon);
                        oscard = _closure1_slot0;
                        tangon = _closure1_slot2;
                        report = tangon[report];
                        oscard = oscard.bind(entity)(report);
                        report = oscard.addMention;
                        report = report.bind(oscard)(golfie);
                        zuuluu = _closure2_slot2;
                        zuuluu = zuuluu.bind(entity)();
                        zuuluu = _closure1_slot1;
                        michal = 22;
                        michal = tangon[michal];
                        zuuluu = zuuluu.bind(entity)(michal);
                        michal = zuuluu.hideActionSheet;
                        michal = michal.bind(zuuluu)();
                        return entity;
                    }
                };
                oscard = zuuluu.bind(oscard)(entity, michal);
                zuuluu = _closure1_slot15;
                foxtra = _closure1_slot0;
                backup = _closure1_slot2;
                entity = 23;
                entity = backup[entity];
                entity = foxtra.bind(tangon)(entity);
                michal = entity.TableRow;
                entity = {};
                entity['onPress'] = oscard;
                oscard = verify.username;
                entity['label'] = oscard;
                golfie = _closure1_slot1;
                romeon = 24;
                oscard = backup[romeon];
                golfie = golfie.bind(tangon)(oscard);
                oscard = {};
                oscard['isMobileOnline'] = sizing;
                oscard['user'] = verify;
                oscard['status'] = kiloes;
                romeon = backup[romeon];
                romeon = foxtra.bind(tangon)(romeon);
                romeon = romeon.AvatarSizes;
                romeon = romeon.SMALL;
                oscard['size'] = romeon;
                romeon = offset != yankee;
                offset = undefined;
                if(!romeon) { _fun00004_ip = 412; continue _fun00003 }
 409:
                offset = yankee;
 412:
                oscard['guildId'] = offset;
                offset = true;
                oscard['autoStatusCutout'] = offset;
                oscard = zuuluu.bind(tangon)(golfie, oscard);
                entity['icon'] = oscard;
                golfie = _closure1_slot15;
                oscard = _closure1_slot1;
                offset = _closure1_slot2;
                report = 25;
                report = offset[report];
                oscard = oscard.bind(tangon)(report);
                report = {};
                report['user'] = verify;
                offset = option.trailing;
                verify = new Array(2);
                verify[0] = offset;
                offset = option.username;
                verify[1] = offset;
                report['usernameStyle'] = verify;
                option = option.trailing;
                report['discriminatorStyle'] = option;
                report = golfie.bind(tangon)(oscard, report);
                entity['trailing'] = report;
                entity = zuuluu.bind(tangon)(michal, entity);
                return entity;
            }
        };
        var _closure1_slot18 = tangon;
        tangon = function(argFoo) { // Original name: GlobalMentionItem
            entity = argFoo;
            report = entity.text;
            var _closure2_slot0 = report;
            golfie = entity.description;
            yankee = entity.canvasCenterPoint;
            var _closure2_slot1 = yankee;
            offset = entity.onSelect;
            var _closure2_slot2 = offset;
            zuuluu = _closure1_slot16;
            tangon = undefined;
            option = zuuluu.bind(tangon)();
            zuuluu = _closure1_slot12;
            zuuluu = zuuluu.bind(tangon)();
            foxtra = zuuluu.inputWidth;
            var _closure2_slot3 = foxtra;
            zuuluu = zuuluu.mentionsText;
            var _closure2_slot4 = zuuluu;
            verify = _closure1_slot4;
            romeon = verify.useCallback;
            oscard = new Array(3);
            oscard[0] = report;
            oscard[1] = foxtra;
            oscard[2] = zuuluu;
            zuuluu = function(argFoo) {
                entity = {};
                tangon = _closure2_slot3;
                zuuluu = _closure2_slot4;
                zuuluu = zuuluu.length;
                zuuluu = tangon / zuuluu;
                michal = _closure2_slot0;
                michal = michal.length;
                zuuluu = zuuluu * michal;
                michal = 20;
                michal = zuuluu + michal;
                entity['width'] = michal;
                michal = argFoo;
                entity['height'] = michal;
                return entity;
            };
            foxtra = romeon.bind(verify)(zuuluu, oscard);
            var _closure2_slot5 = foxtra;
            romeon = verify.useCallback;
            oscard = new Array(1);
            oscard[0] = report;
            zuuluu = function() {
                zuuluu = _closure1_slot0;
                michal = _closure1_slot2;
                entity = 20;
                michal = michal[entity];
                entity = undefined;
                zuuluu = zuuluu.bind(entity)(michal);
                michal = zuuluu.getFontSizeApproximation;
                entity = _closure2_slot0;
                entity = michal.bind(zuuluu)(entity);
                return entity;
            };
            romeon = romeon.bind(verify)(zuuluu, oscard);
            var _closure2_slot6 = romeon;
            oscard = verify.useCallback;
            zuuluu = new Array(5);
            zuuluu[0] = report;
            zuuluu[1] = foxtra;
            zuuluu[2] = romeon;
            zuuluu[3] = yankee;
            zuuluu[4] = offset;
            michal = function() {
                yankee = _closure2_slot6;
                entity = undefined;
                foxtra = yankee.bind(entity)();
                oscard = _closure1_slot0;
                tangon = _closure1_slot2;
                report = 21;
                golfie = tangon[report];
                verify = oscard.bind(entity)(golfie);
                option = verify.createMention;
                golfie = {};
                kiloes = _closure2_slot0;
                offset = kiloes.substring;
                backup = 1;
                output = offset.bind(kiloes)(backup);
                offset = global;
                romeon = offset.HermesInternal;
                sizing = romeon.concat;
                romeon = '@';
                romeon = sizing.bind(romeon)(output);
                golfie['mention'] = romeon;
                romeon = kiloes.substring;
                romeon = romeon.bind(kiloes)(backup);
                golfie['mentionDisplayText'] = romeon;
                romeon = _closure2_slot5;
                romeon = romeon.bind(entity)(foxtra);
                golfie['size'] = romeon;
                romeon = _closure2_slot1;
                golfie['canvasCenterPoint'] = romeon;
                yankee = yankee.bind(entity)();
                golfie['fontSize'] = yankee;
                yankee = _closure1_slot17;
                golfie['color'] = yankee;
                yankee = _closure1_slot13;
                yankee = yankee.GLOBAL;
                golfie['mentionType'] = yankee;
                offset = offset.Map;
                yankee = offset.prototype;
                yankee = Object.create(yankee, {constructor: {value: offset}});
                echoed = yankee;
                offset = new echoed[offset](result);
                offset = offset instanceof Object ? offset : yankee;
                golfie['boundingRects'] = offset;
                golfie = option.bind(verify)(golfie);
                report = tangon[report];
                oscard = oscard.bind(entity)(report);
                report = oscard.addMention;
                report = report.bind(oscard)(golfie);
                zuuluu = _closure2_slot2;
                zuuluu = zuuluu.bind(entity)();
                zuuluu = _closure1_slot1;
                michal = 22;
                michal = tangon[michal];
                zuuluu = zuuluu.bind(entity)(michal);
                michal = zuuluu.hideActionSheet;
                michal = michal.bind(zuuluu)();
                return entity;
            };
            offset = oscard.bind(verify)(michal, zuuluu);
            zuuluu = _closure1_slot15;
            oscard = _closure1_slot0;
            verify = _closure1_slot2;
            entity = 23;
            entity = verify[entity];
            entity = oscard.bind(tangon)(entity);
            michal = entity.TableRow;
            entity = {};
            entity['onPress'] = offset;
            entity['label'] = report;
            report = 26;
            report = verify[report];
            report = oscard.bind(tangon)(report);
            oscard = report.Text;
            report = {};
            option = option.trailing;
            report['style'] = option;
            option = 'text-sm/medium';
            report['variant'] = option;
            report['children'] = golfie;
            report = zuuluu.bind(tangon)(oscard, report);
            entity['trailing'] = report;
            entity = zuuluu.bind(tangon)(michal, entity);
            return entity;
        };
        var _closure1_slot19 = tangon;
        tangon = function(argFoo) { // Original name: RoleMentionItem
            _fun00009: for(var _fun00010_ip = 0; ; ) switch(_fun00010_ip) {
 0:
                michal = argFoo;
                offset = michal.name;
                var _closure2_slot0 = offset;
                yankee = michal.colorString;
                var _closure2_slot1 = yankee;
                foxtra = michal.id;
                var _closure2_slot2 = foxtra;
                option = michal.canvasCenterPoint;
                var _closure2_slot3 = option;
                golfie = michal.onSelect;
                var _closure2_slot4 = golfie;
                michal = _closure1_slot12;
                tangon = undefined;
                michal = michal.bind(tangon)();
                romeon = michal.inputWidth;
                var _closure2_slot5 = romeon;
                michal = michal.mentionsText;
                var _closure2_slot6 = michal;
                oscard = _closure1_slot4;
                verify = oscard.useCallback;
                zuuluu = new Array(3);
                zuuluu[0] = offset;
                zuuluu[1] = romeon;
                zuuluu[2] = michal;
                michal = function(argFoo) {
                    entity = {};
                    tangon = _closure2_slot5;
                    zuuluu = _closure2_slot6;
                    zuuluu = zuuluu.length;
                    zuuluu = tangon / zuuluu;
                    michal = _closure2_slot0;
                    michal = michal.length;
                    zuuluu = zuuluu * michal;
                    michal = 20;
                    michal = zuuluu + michal;
                    entity['width'] = michal;
                    michal = argFoo;
                    entity['height'] = michal;
                    return entity;
                };
                romeon = verify.bind(oscard)(michal, zuuluu);
                var _closure2_slot7 = romeon;
                verify = oscard.useCallback;
                zuuluu = new Array(1);
                zuuluu[0] = offset;
                michal = function() {
                    zuuluu = _closure1_slot0;
                    michal = _closure1_slot2;
                    entity = 20;
                    michal = michal[entity];
                    entity = undefined;
                    zuuluu = zuuluu.bind(entity)(michal);
                    michal = zuuluu.getFontSizeApproximation;
                    entity = _closure2_slot0;
                    entity = michal.bind(zuuluu)(entity);
                    return entity;
                };
                verify = verify.bind(oscard)(michal, zuuluu);
                var _closure2_slot8 = verify;
                zuuluu = oscard.useCallback;
                michal = new Array(7);
                michal[0] = foxtra;
                michal[1] = offset;
                michal[2] = romeon;
                michal[3] = verify;
                michal[4] = yankee;
                michal[5] = option;
                michal[6] = golfie;
                entity = function() {
                    _fun00011: for(var _fun00012_ip = 0; ; ) switch(_fun00012_ip) {
 0:
                        verify = _closure2_slot8;
                        entity = undefined;
                        yankee = verify.bind(entity)();
                        oscard = _closure1_slot0;
                        tangon = _closure1_slot2;
                        report = 21;
                        tangon = tangon[report];
                        golfie = oscard.bind(entity)(tangon);
                        oscard = golfie.createMention;
                        tangon = {};
                        backup = _closure2_slot2;
                        option = global;
                        offset = option.HermesInternal;
                        foxtra = offset.concat;
                        romeon = '<@&';
                        offset = '>';
                        offset = foxtra.bind(romeon)(backup, offset);
                        tangon['mention'] = offset;
                        offset = _closure2_slot0;
                        tangon['mentionDisplayText'] = offset;
                        offset = _closure2_slot7;
                        offset = offset.bind(entity)(yankee);
                        tangon['size'] = offset;
                        offset = _closure2_slot3;
                        tangon['canvasCenterPoint'] = offset;
                        verify = verify.bind(entity)();
                        tangon['fontSize'] = verify;
                        offset = _closure2_slot1;
                        verify = null;
                        if(!(verify == offset)) { _fun00012_ip = 138; continue _fun00011 }
 132:
                        verify = _closure1_slot17;
                        _fun00012_ip = 142; continue _fun00011;
 138:
                        verify = _closure2_slot1;
 142:
                        tangon['color'] = verify;
                        verify = _closure1_slot13;
                        verify = verify.ROLE;
                        tangon['mentionType'] = verify;
                        option = option.Map;
                        verify = option.prototype;
                        verify = Object.create(verify, {constructor: {value: option}});
                        output = verify;
                        option = new output[option](sizing);
                        option = option instanceof Object ? option : verify;
                        tangon['boundingRects'] = option;
                        golfie = oscard.bind(golfie)(tangon);
                        oscard = _closure1_slot0;
                        tangon = _closure1_slot2;
                        report = tangon[report];
                        oscard = oscard.bind(entity)(report);
                        report = oscard.addMention;
                        report = report.bind(oscard)(golfie);
                        zuuluu = _closure2_slot4;
                        zuuluu = zuuluu.bind(entity)();
                        zuuluu = _closure1_slot1;
                        michal = 22;
                        michal = tangon[michal];
                        zuuluu = zuuluu.bind(entity)(michal);
                        michal = zuuluu.hideActionSheet;
                        michal = michal.bind(zuuluu)();
                        return entity;
                    }
                };
                oscard = zuuluu.bind(oscard)(entity, michal);
                zuuluu = _closure1_slot15;
                golfie = _closure1_slot0;
                option = _closure1_slot2;
                entity = 23;
                entity = option[entity];
                entity = golfie.bind(tangon)(entity);
                michal = entity.TableRow;
                entity = {};
                entity['onPress'] = oscard;
                oscard = 26;
                oscard = option[oscard];
                oscard = golfie.bind(tangon)(oscard);
                golfie = oscard.Text;
                oscard = {};
                option = 'text-md/semibold';
                oscard['variant'] = option;
                option = null;
                verify = option != yankee;
                option = undefined;
                if(!verify) { _fun00010_ip = 287; continue _fun00009 }
 278:
                verify = {};
                verify['color'] = yankee;
                option = verify;
 287:
                oscard['style'] = option;
                option = global;
                option = option.HermesInternal;
                verify = option.concat;
                option = '@';
                option = verify.bind(option)(offset);
                oscard['children'] = option;
                oscard = zuuluu.bind(tangon)(golfie, oscard);
                entity['label'] = oscard;
                option = _closure1_slot0;
                verify = _closure1_slot2;
                report = 27;
                oscard = verify[report];
                oscard = option.bind(tangon)(oscard);
                golfie = oscard.intl;
                oscard = golfie.string;
                report = verify[report];
                report = option.bind(tangon)(report);
                report = report.t;
                report = report.HrUmDA;
                report = oscard.bind(golfie)(report);
                entity['subLabel'] = report;
                entity = zuuluu.bind(tangon)(michal, entity);
                return entity;
            }
        };
        var _closure1_slot20 = tangon;
        tangon = 34;
        tangon = oscard[tangon];
        oscard = report.bind(entity)(tangon);
        report = oscard.fileFinishedImporting;
        tangon = 'modules/remixing/native/components/MentionsSheet.tsx';
        tangon = report.bind(oscard)(tangon);
        michal = function(argFoo) { // Original name: _default
            _fun00013: for(var _fun00014_ip = 0; ; ) switch(_fun00014_ip) {
 0:
                entity = argFoo;
                golfie = entity.channelId;
                var _closure2_slot0 = golfie;
                oscard = entity.canvasCenterPoint;
                var _closure2_slot1 = oscard;
                entity = entity.onSelect;
                var _closure2_slot2 = entity;
                tangon = undefined;
                var _closure2_slot7 = tangon;
                var _closure2_slot8 = tangon;
                michal = _closure1_slot16;
                backup = michal.bind(tangon)();
                var _closure2_slot3 = backup;
                zuuluu = _closure1_slot7;
                michal = zuuluu.getChannel;
                output = michal.bind(zuuluu)(golfie);
                var _closure2_slot4 = output;
                report = _closure1_slot4;
                zuuluu = report.useState;
                michal = new Array(0);
                report = zuuluu.bind(report)(michal);
                zuuluu = _closure1_slot3;
                michal = 2;
                zuuluu = zuuluu.bind(tangon)(report, michal);
                michal = 0;
                foxtra = zuuluu[michal];
                michal = 1;
                sizing = zuuluu[michal];
                var _closure2_slot5 = sizing;
                michal = _closure1_slot12;
                michal = michal.bind(tangon)();
                result = michal.mentionsText;
                var _closure2_slot6 = result;
                zuuluu = null;
                michal = zuuluu == output;
                romeon = undefined;
                if(michal) { _fun00014_ip = 164; continue _fun00013 }
 154:
                michal = output.isPrivate;
                romeon = michal.bind(output)();
 164:
                _closure2_slot7 = romeon;
                option = _closure1_slot9;
                report = option.can;
                michal = _closure1_slot14;
                michal = michal.MENTION_EVERYONE;
                michal = report.bind(option)(michal, output);
                _closure2_slot8 = michal;
                option = _closure1_slot1;
                kiloes = _closure1_slot2;
                report = 28;
                report = kiloes[report];
                offset = option.bind(tangon)(report);
                report = zuuluu != output;
                zuuluu = 'remix should be in a channel';
                zuuluu = offset.bind(tangon)(report, zuuluu);
                report = _closure1_slot4;
                offset = report.useEffect;
                zuuluu = new Array(5);
                zuuluu[0] = result;
                zuuluu[1] = output;
                zuuluu[2] = sizing;
                zuuluu[3] = romeon;
                zuuluu[4] = michal;
                michal = function() {
                    _fun00015: for(var _fun00016_ip = 0; ; ) switch(_fun00016_ip) {
 0:
                        tangon = _closure1_slot1;
                        michal = _closure1_slot2;
                        entity = 29;
                        michal = michal[entity];
                        entity = undefined;
                        golfie = tangon.bind(entity)(michal);
                        oscard = golfie.queryMentionResults;
                        tangon = {};
                        offset = _closure2_slot6;
                        verify = offset.substring;
                        option = 1;
                        option = verify.bind(offset)(option);
                        tangon['query'] = option;
                        option = _closure2_slot4;
                        tangon['channel'] = option;
                        option = _closure2_slot7;
                        if(option) { _fun00016_ip = 80; continue _fun00015 }
 76:
                        option = _closure2_slot8;
 80:
                        tangon['canMentionEveryone'] = option;
                        option = _closure2_slot7;
                        if(option) { _fun00016_ip = 96; continue _fun00015 }
 92:
                        option = _closure2_slot8;
 96:
                        tangon['canMentionHere'] = option;
                        option = true;
                        tangon['canMentionUsers'] = option;
                        tangon['canMentionRoles'] = option;
                        option = false;
                        tangon['includeNonMentionableRoles'] = option;
                        tangon['checkRecentlyTalkedOnEmptyQuery'] = option;
                        option = 15;
                        tangon['limit'] = option;
                        tangon = oscard.bind(golfie)(tangon);
                        golfie = tangon.users;
                        offset = tangon.globals;
                        option = tangon.roles;
                        tangon = _closure1_slot1;
                        oscard = _closure1_slot2;
                        zuuluu = 30;
                        zuuluu = oscard[zuuluu];
                        tangon = tangon.bind(entity)(zuuluu);
                        oscard = golfie.map;
                        zuuluu = function(argFoo) {
                            entity = {};
                            michal = _closure1_slot13;
                            michal = michal.USER;
                            entity['type'] = michal;
                            zuuluu = argFoo;
                            tangon = entity;
                            michal = copyDataProperties(tangon, zuuluu);
                            return entity;
                        };
                        romeon = oscard.bind(golfie)(zuuluu);
                        zuuluu = new Array(0);
                        yankee = 0;
                        foxtra = zuuluu;
                        yankee = arraySpread(foxtra, romeon, yankee);
                        verify = offset.map;
                        oscard = function(argFoo) {
                            entity = {};
                            michal = _closure1_slot13;
                            michal = michal.GLOBAL;
                            entity['type'] = michal;
                            zuuluu = argFoo;
                            tangon = entity;
                            michal = copyDataProperties(tangon, zuuluu);
                            return entity;
                        };
                        romeon = verify.bind(offset)(oscard);
                        foxtra = zuuluu;
                        yankee = arraySpread(foxtra, romeon, yankee);
                        golfie = option.map;
                        report = function(argFoo) {
                            entity = {};
                            michal = _closure1_slot13;
                            michal = michal.ROLE;
                            entity['type'] = michal;
                            zuuluu = argFoo;
                            tangon = entity;
                            michal = copyDataProperties(tangon, zuuluu);
                            return entity;
                        };
                        romeon = golfie.bind(option)(report);
                        foxtra = zuuluu;
                        report = arraySpread(foxtra, romeon, yankee);
                        tangon = tangon.bind(entity)(zuuluu);
                        zuuluu = tangon.value;
                        zuuluu = zuuluu.bind(tangon)();
                        michal = _closure2_slot5;
                        michal = michal.bind(entity)(zuuluu);
                        return entity;
                    }
                };
                michal = offset.bind(report)(michal, zuuluu);
                zuuluu = report.useCallback;
                michal = new Array(3);
                michal[0] = golfie;
                michal[1] = oscard;
                michal[2] = entity;
                entity = function(argFoo) {
                    _fun00017: for(var _fun00018_ip = 0; ; ) switch(_fun00018_ip) {
 0:
                        entity = argFoo;
                        entity = entity.item;
                        tangon = entity.type;
                        zuuluu = _closure1_slot13;
                        zuuluu = zuuluu.USER;
                        if(!(zuuluu !== tangon)) { _fun00018_ip = 183; continue _fun00017 }
 33:
                        zuuluu = _closure1_slot13;
                        zuuluu = zuuluu.GLOBAL;
                        if(!(zuuluu !== tangon)) { _fun00018_ip = 124; continue _fun00017 }
 47:
                        zuuluu = _closure1_slot13;
                        zuuluu = zuuluu.ROLE;
                        if(!(zuuluu !== tangon)) { _fun00018_ip = 65; continue _fun00017 }
 61:
                        zuuluu = null;
                        return zuuluu;
 65:
                        oscard = _closure1_slot15;
                        report = _closure1_slot20;
                        tangon = {};
                        offset = tangon;
                        verify = entity;
                        zuuluu = copyDataProperties(offset, verify);
                        option = _closure2_slot1;
                        golfie = 'canvasCenterPoint';
                        tangon[golfie] = option;
                        golfie = _closure2_slot2;
                        zuuluu = 'onSelect';
                        tangon[zuuluu] = golfie;
                        zuuluu = undefined;
                        zuuluu = oscard.bind(zuuluu)(report, tangon);
                        return zuuluu;
 124:
                        oscard = _closure1_slot15;
                        report = _closure1_slot19;
                        tangon = {};
                        offset = tangon;
                        verify = entity;
                        zuuluu = copyDataProperties(offset, verify);
                        option = _closure2_slot1;
                        golfie = 'canvasCenterPoint';
                        tangon[golfie] = option;
                        golfie = _closure2_slot2;
                        zuuluu = 'onSelect';
                        tangon[zuuluu] = golfie;
                        zuuluu = undefined;
                        zuuluu = oscard.bind(zuuluu)(report, tangon);
                        return zuuluu;
 183:
                        tangon = _closure1_slot15;
                        zuuluu = _closure1_slot18;
                        michal = {};
                        offset = michal;
                        verify = entity;
                        entity = copyDataProperties(offset, verify);
                        oscard = _closure2_slot0;
                        report = 'channelId';
                        michal[report] = oscard;
                        oscard = _closure2_slot1;
                        report = 'canvasCenterPoint';
                        michal[report] = oscard;
                        report = _closure2_slot2;
                        entity = 'onSelect';
                        michal[entity] = report;
                        entity = undefined;
                        entity = tangon.bind(entity)(zuuluu, michal);
                        return entity;
                    }
                };
                romeon = zuuluu.bind(report)(entity, michal);
                zuuluu = _closure1_slot15;
                michal = _closure1_slot5;
                entity = {};
                oscard = backup.iconContainer;
                report = new Array(1);
                report[0] = oscard;
                entity['style'] = report;
                report = 'box-none';
                entity['pointerEvents'] = report;
                offset = _closure1_slot0;
                report = 31;
                report = kiloes[report];
                report = offset.bind(tangon)(report);
                oscard = report.SafeAreaPaddingView;
                report = {'bottom': null, 'left': false, 'right': false};
                golfie = 13;
                golfie = kiloes[golfie];
                offset = offset.bind(tangon)(golfie);
                golfie = offset.isAndroid;
                golfie = golfie.bind(offset)();
                report['bottom'] = golfie;
                offset = false;
                golfie = backup.safeAreaPaddingView;
                report['style'] = golfie;
                golfie = 32;
                golfie = kiloes[golfie];
                option = option.bind(tangon)(golfie);
                golfie = {};
                kiloes = backup.keyboardAwareView;
                golfie['style'] = kiloes;
                golfie['disabled'] = offset;
                offset = _closure1_slot6;
                verify = {};
                backup = backup.autocomplete;
                verify['style'] = backup;
                backup = function(argFoo, argBar) { // Original name: keyExtractor
                    entity = global;
                    zuuluu = entity.String;
                    michal = undefined;
                    entity = argBar;
                    entity = zuuluu.bind(michal)(entity);
                    return entity;
                };
                verify['keyExtractor'] = backup;
                verify['data'] = foxtra;
                verify['renderItem'] = romeon;
                yankee = function() { // Original name: ItemSeparatorComponent
                    tangon = _closure1_slot15;
                    michal = _closure1_slot0;
                    zuuluu = _closure1_slot2;
                    entity = 33;
                    entity = zuuluu[entity];
                    zuuluu = undefined;
                    entity = michal.bind(zuuluu)(entity);
                    michal = entity.FormDivider;
                    entity = {};
                    report = _closure2_slot3;
                    report = report.itemDivider;
                    entity['style'] = report;
                    entity = tangon.bind(zuuluu)(michal, entity);
                    return entity;
                };
                verify['ItemSeparatorComponent'] = yankee;
                yankee = 'always';
                verify['keyboardShouldPersistTaps'] = yankee;
                verify = zuuluu.bind(tangon)(offset, verify);
                golfie['children'] = verify;
                golfie = zuuluu.bind(tangon)(option, golfie);
                report['children'] = golfie;
                report = zuuluu.bind(tangon)(oscard, report);
                entity['children'] = report;
                entity = zuuluu.bind(tangon)(michal, entity);
                return entity;
            }
        };
        zuuluu['default'] = michal;
        return entity;
    }
})();