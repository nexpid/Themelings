// app/modules/remixing/native/components/MentionsSheet.tsx
export default (function(argFoo, argBar, argBaz, argCorge, _, argFred, argPlugh) {
    _fun85200: for(var _fun85200_ip = 0; ; ) switch(_fun85200_ip) {
 0:
        report = argBar;
        yankee = argBaz;
        zulu = argFred;
        oscar = argPlugh;
        var _closure1_slot0 = report;
        var _closure1_slot1 = yankee;
        var _closure1_slot2 = oscar;
        entity = global;
        options = entity.Object;
        golf = options.defineProperty;
        tango = {};
        entity = true;
        tango['value'] = entity;
        entity = '__esModule';
        entity = golf.bind(options)(zulu, entity, tango);
        backup = 0;
        tango = oscar[backup];
        entity = undefined;
        tango = yankee.bind(entity)(tango);
        var _closure1_slot3 = tango;
        tango = 1;
        golf = oscar[tango];
        tango = argCorge;
        tango = tango.bind(entity)(golf);
        var _closure1_slot4 = tango;
        tango = 2;
        tango = oscar[tango];
        tango = report.bind(entity)(tango);
        golf = tango.View;
        var _closure1_slot5 = golf;
        tango = tango.FlatList;
        var _closure1_slot6 = tango;
        tango = 3;
        tango = oscar[tango];
        tango = yankee.bind(entity)(tango);
        var _closure1_slot7 = tango;
        tango = 4;
        tango = oscar[tango];
        tango = yankee.bind(entity)(tango);
        var _closure1_slot8 = tango;
        tango = 5;
        tango = oscar[tango];
        tango = yankee.bind(entity)(tango);
        var _closure1_slot9 = tango;
        tango = 6;
        tango = oscar[tango];
        tango = yankee.bind(entity)(tango);
        var _closure1_slot10 = tango;
        tango = 7;
        tango = oscar[tango];
        tango = yankee.bind(entity)(tango);
        var _closure1_slot11 = tango;
        foxtrot = 8;
        tango = oscar[foxtrot];
        tango = report.bind(entity)(tango);
        tango = tango.useRemixingMentionsStore;
        var _closure1_slot12 = tango;
        tango = 9;
        tango = oscar[tango];
        tango = report.bind(entity)(tango);
        golf = tango.AutoCompleteResultTypes;
        var _closure1_slot13 = golf;
        romeo = tango.Fonts;
        tango = tango.Permissions;
        var _closure1_slot14 = tango;
        tango = 10;
        tango = oscar[tango];
        tango = report.bind(entity)(tango);
        kilo = tango.AUTOCOMPLETE_ROW_HEIGHT;
        tango = 11;
        tango = oscar[tango];
        tango = report.bind(entity)(tango);
        tango = tango.jsx;
        var _closure1_slot15 = tango;
        tango = 12;
        tango = oscar[tango];
        options = report.bind(entity)(tango);
        golf = options.createStyles;
        tango = {};
        offset = '100%';
        verify = {'display': 'flex', 'alignItems': 'center', 'width': '100%', 'height': '100%', 'overflow': 'hidden'};
        tango['iconContainer'] = verify;
        verify = {};
        verify['width'] = offset;
        offset = 13;
        offset = oscar[offset];
        sizing = report.bind(entity)(offset);
        offset = sizing.isAndroid;
        sizing = offset.bind(sizing)();
        offset = 0;
        if(!sizing) { _fun85200_ip = 383; continue _fun85200 }
 380:
        offset = foxtrot;
 383:
        verify['paddingBottom'] = offset;
        tango['safeAreaPaddingView'] = verify;
        verify = {'flexGrow': 0, 'flexShrink': 1, 'width': '100%', 'height': '100%'};
        offset = 14;
        foxtrot = oscar[offset];
        foxtrot = yankee.bind(entity)(foxtrot);
        foxtrot = foxtrot.radii;
        foxtrot = foxtrot.md;
        verify['borderTopLeftRadius'] = foxtrot;
        foxtrot = oscar[offset];
        foxtrot = yankee.bind(entity)(foxtrot);
        foxtrot = foxtrot.radii;
        foxtrot = foxtrot.md;
        verify['borderTopRightRadius'] = foxtrot;
        tango['autocomplete'] = verify;
        verify = {'display': 'flex', 'flexDirection': 'column', 'alignItems': 'center', 'width': '100%', 'top': 12};
        tango['keyboardAwareView'] = verify;
        foxtrot = 16;
        verify = {'marginLeft': 16, 'height': 1};
        tango['itemDivider'] = verify;
        verify = {};
        verify['height'] = kilo;
        verify['paddingVertical'] = backup;
        tango['row'] = verify;
        verify = {};
        verify['fontSize'] = foxtrot;
        foxtrot = oscar[offset];
        foxtrot = yankee.bind(entity)(foxtrot);
        foxtrot = foxtrot.colors;
        foxtrot = foxtrot.WHITE;
        verify['color'] = foxtrot;
        romeo = romeo.PRIMARY_SEMIBOLD;
        verify['fontFamily'] = romeo;
        tango['leading'] = verify;
        verify = {};
        verify['fontSize'] = offset;
        romeo = oscar[offset];
        romeo = yankee.bind(entity)(romeo);
        romeo = romeo.unsafe_rawColors;
        romeo = romeo.PRIMARY_360;
        verify['color'] = romeo;
        tango['trailing'] = verify;
        verify = {};
        offset = oscar[offset];
        offset = yankee.bind(entity)(offset);
        offset = offset.unsafe_rawColors;
        offset = offset.PRIMARY_400;
        verify['color'] = offset;
        tango['username'] = verify;
        tango = golf.bind(options)(tango);
        var _closure1_slot16 = tango;
        tango = 'white';
        var _closure1_slot17 = tango;
        tango = function(argFoo) { // Original name: UserMentionItem
            _fun85201: for(var _fun85201_ip = 0; ; ) switch(_fun85201_ip) {
 0:
                mike = argFoo;
                verify = mike.user;
                var _closure2_slot0 = verify;
                foxtrot = mike.canvasCenterPoint;
                var _closure2_slot1 = foxtrot;
                romeo = mike.onSelect;
                var _closure2_slot2 = romeo;
                tango = undefined;
                var _closure2_slot4 = tango;
                var _closure2_slot5 = tango;
                var _closure2_slot6 = tango;
                mike = _closure1_slot16;
                options = mike.bind(tango)();
                zulu = _closure1_slot0;
                oscar = _closure1_slot2;
                mike = 19;
                golf = oscar[mike];
                backup = zulu.bind(tango)(golf);
                yankee = backup.useStateFromStoresObject;
                golf = _closure1_slot10;
                offset = new Array(1);
                offset[0] = golf;
                golf = function() {
                    entity = {};
                    tango = _closure1_slot10;
                    report = tango.isMobileOnline;
                    mike = _closure2_slot0;
                    zulu = mike.id;
                    zulu = report.bind(tango)(zulu);
                    entity['isMobileOnline'] = zulu;
                    zulu = tango.getStatus;
                    mike = mike.id;
                    mike = zulu.bind(tango)(mike);
                    entity['status'] = mike;
                    return entity;
                };
                golf = yankee.bind(backup)(offset, golf);
                sizing = golf.isMobileOnline;
                kilo = golf.status;
                offset = _closure1_slot11;
                golf = offset.getGuildId;
                yankee = golf.bind(offset)();
                var _closure2_slot3 = yankee;
                mike = oscar[mike];
                golf = zulu.bind(tango)(mike);
                oscar = golf.useStateFromStores;
                mike = _closure1_slot8;
                zulu = new Array(1);
                zulu[0] = mike;
                mike = function() {
                    _fun85203: for(var _fun85203_ip = 0; ; ) switch(_fun85203_ip) {
 0:
                        zulu = _closure2_slot3;
                        entity = null;
                        zulu = entity != zulu;
                        if(!zulu) { _fun85203_ip = 48; continue _fun85203 }
 16:
                        report = _closure1_slot8;
                        tango = report.getMember;
                        zulu = _closure2_slot3;
                        mike = _closure2_slot0;
                        mike = mike.id;
                        entity = tango.bind(report)(zulu, mike);
 48:
                        return entity;
                    }
                };
                mike = oscar.bind(golf)(zulu, mike);
                offset = null;
                zulu = offset == mike;
                golf = undefined;
                if(zulu) { _fun85201_ip = 195; continue _fun85201 }
 189:
                golf = mike.colorString;
 195:
                _closure2_slot4 = golf;
                oscar = _closure1_slot4;
                backup = oscar.useCallback;
                zulu = new Array(1);
                zulu[0] = verify;
                mike = function(argFoo) {
                    zulu = argFoo;
                    entity = {};
                    mike = _closure2_slot0;
                    mike = mike.username;
                    mike = mike.length;
                    tango = mike * zulu;
                    mike = 1.4;
                    mike = tango / mike;
                    entity['width'] = mike;
                    mike = 1.5;
                    mike = mike * zulu;
                    entity['height'] = mike;
                    return entity;
                };
                output = backup.bind(oscar)(mike, zulu);
                _closure2_slot5 = output;
                backup = oscar.useCallback;
                zulu = new Array(1);
                zulu[0] = verify;
                mike = function() {
                    zulu = _closure1_slot0;
                    mike = _closure1_slot2;
                    entity = 20;
                    mike = mike[entity];
                    entity = undefined;
                    zulu = zulu.bind(entity)(mike);
                    mike = zulu.getFontSizeApproximation;
                    entity = _closure2_slot0;
                    entity = entity.username;
                    entity = mike.bind(zulu)(entity);
                    return entity;
                };
                backup = backup.bind(oscar)(mike, zulu);
                _closure2_slot6 = backup;
                zulu = oscar.useCallback;
                mike = new Array(6);
                mike[0] = verify;
                mike[1] = output;
                mike[2] = backup;
                mike[3] = foxtrot;
                mike[4] = romeo;
                mike[5] = golf;
                entity = function() {
                    _fun85206: for(var _fun85206_ip = 0; ; ) switch(_fun85206_ip) {
 0:
                        mike = _closure2_slot6;
                        entity = undefined;
                        verify = mike.bind(entity)();
                        mike = _closure2_slot5;
                        golf = mike.bind(entity)(verify);
                        mike = _closure2_slot0;
                        mike = mike.username;
                        offset = null;
                        tango = offset != mike;
                        yankee = '';
                        if(!tango) { _fun85206_ip = 47; continue _fun85206 }
 44:
                        yankee = mike;
 47:
                        mike = _closure2_slot0;
                        mike = mike.globalName;
                        backup = yankee;
                        if(!(offset != mike)) { _fun85206_ip = 67; continue _fun85206 }
 64:
                        backup = mike;
 67:
                        romeo = global;
                        mike = romeo.Map;
                        tango = mike.prototype;
                        tango = Object.create(tango, {constructor: {value: mike}});
                        record = tango;
                        mike = new record[mike](config);
                        options = mike instanceof Object ? mike : tango;
                        result = _closure1_slot0;
                        tango = _closure1_slot2;
                        foxtrot = 15;
                        report = tango[foxtrot];
                        output = result.bind(entity)(report);
                        kilo = output.rect;
                        vacuum = golf.width;
                        control = golf.height;
                        record = output;
                        config = 0;
                        sequence = 0;
                        output = record[kilo](config, sequence, vacuum, control, source);
                        kilo = options.set;
                        report = 16;
                        oscar = tango[report];
                        oscar = result.bind(entity)(oscar);
                        oscar = oscar.MentionStyle;
                        oscar = oscar.TEXT_WITH_BACKGROUND;
                        oscar = kilo.bind(options)(oscar, output);
                        oscar = tango[foxtrot];
                        echo = result.bind(entity)(oscar);
                        output = echo.rect;
                        oscar = 17;
                        oscar = tango[oscar];
                        oscar = result.bind(entity)(oscar);
                        kilo = oscar.TAG_AVATAR_SIZE;
                        oscar = 2;
                        kilo = oscar * kilo;
                        oscar = golf.width;
                        vacuum = kilo + oscar;
                        control = golf.height;
                        record = echo;
                        config = 0;
                        sequence = 0;
                        output = record[output](config, sequence, vacuum, control, source);
                        kilo = options.set;
                        oscar = tango[report];
                        oscar = result.bind(entity)(oscar);
                        oscar = oscar.MentionStyle;
                        oscar = oscar.AVATAR_AND_TAG;
                        oscar = kilo.bind(options)(oscar, output);
                        oscar = tango[foxtrot];
                        update = result.bind(entity)(oscar);
                        echo = update.rect;
                        output = 18;
                        oscar = tango[output];
                        oscar = result.bind(entity)(oscar);
                        oscar = oscar.DEFAULT_AVATAR_SIZE;
                        source = 3;
                        vacuum = source * oscar;
                        oscar = tango[output];
                        oscar = result.bind(entity)(oscar);
                        oscar = oscar.DEFAULT_AVATAR_SIZE;
                        control = source * oscar;
                        record = update;
                        config = 0;
                        sequence = 0;
                        kilo = record[echo](config, sequence, vacuum, control, source);
                        oscar = options.set;
                        tango = tango[report];
                        tango = result.bind(entity)(tango);
                        tango = tango.MentionStyle;
                        tango = tango.AVATAR;
                        tango = oscar.bind(options)(tango, kilo);
                        oscar = golf.width;
                        tango = yankee.trim;
                        tango = tango.bind(yankee)();
                        tango = tango.length;
                        oscar = oscar / tango;
                        tango = backup.trim;
                        tango = tango.bind(backup)();
                        tango = tango.length;
                        oscar = tango * oscar;
                        tango = golf.width;
                        if(!(!(oscar > tango))) { _fun85206_ip = 438; continue _fun85206 }
 431:
                        kilo = golf.width;
                        _fun85206_ip = 472; continue _fun85206;
 438:
                        backup = _closure1_slot0;
                        tango = _closure1_slot2;
                        tango = tango[output];
                        tango = backup.bind(entity)(tango);
                        backup = tango.BACKGROUND_PADDING;
                        tango = 4;
                        tango = tango * backup;
                        kilo = oscar + tango;
 472:
                        oscar = _closure1_slot0;
                        tango = _closure1_slot2;
                        foxtrot = tango[foxtrot];
                        backup = oscar.bind(entity)(foxtrot);
                        foxtrot = backup.rect;
                        output = golf.height;
                        golf = 2.5;
                        control = golf * output;
                        record = backup;
                        config = 0;
                        sequence = 0;
                        vacuum = kilo;
                        foxtrot = record[foxtrot](config, sequence, vacuum, control, source);
                        golf = options.set;
                        report = tango[report];
                        report = oscar.bind(entity)(report);
                        report = report.MentionStyle;
                        report = report.CARD;
                        report = golf.bind(options)(report, foxtrot);
                        report = 21;
                        tango = tango[report];
                        golf = oscar.bind(entity)(tango);
                        oscar = golf.createMention;
                        tango = {};
                        foxtrot = _closure2_slot0;
                        kilo = foxtrot.id;
                        romeo = romeo.HermesInternal;
                        backup = romeo.concat;
                        foxtrot = '<@';
                        romeo = '>';
                        romeo = backup.bind(foxtrot)(kilo, romeo);
                        tango['mention'] = romeo;
                        tango['mentionDisplayText'] = yankee;
                        yankee = _closure2_slot5;
                        yankee = yankee.bind(entity)(verify);
                        tango['size'] = yankee;
                        yankee = _closure2_slot1;
                        tango['canvasCenterPoint'] = yankee;
                        tango['fontSize'] = verify;
                        verify = _closure2_slot4;
                        if(!(offset == verify)) { _fun85206_ip = 667; continue _fun85206 }
 661:
                        verify = _closure1_slot17;
                        _fun85206_ip = 671; continue _fun85206;
 667:
                        verify = _closure2_slot4;
 671:
                        tango['color'] = verify;
                        verify = _closure1_slot13;
                        verify = verify.USER;
                        tango['mentionType'] = verify;
                        verify = _closure2_slot0;
                        tango['user'] = verify;
                        tango['boundingRects'] = options;
                        golf = oscar.bind(golf)(tango);
                        oscar = _closure1_slot0;
                        tango = _closure1_slot2;
                        report = tango[report];
                        oscar = oscar.bind(entity)(report);
                        report = oscar.addMention;
                        report = report.bind(oscar)(golf);
                        zulu = _closure2_slot2;
                        zulu = zulu.bind(entity)();
                        zulu = _closure1_slot1;
                        mike = 22;
                        mike = tango[mike];
                        zulu = zulu.bind(entity)(mike);
                        mike = zulu.hideActionSheet;
                        mike = mike.bind(zulu)();
                        return entity;
                    }
                };
                oscar = zulu.bind(oscar)(entity, mike);
                zulu = _closure1_slot15;
                foxtrot = _closure1_slot0;
                backup = _closure1_slot2;
                entity = 23;
                entity = backup[entity];
                entity = foxtrot.bind(tango)(entity);
                mike = entity.TableRow;
                entity = {};
                entity['onPress'] = oscar;
                oscar = verify.username;
                entity['label'] = oscar;
                golf = _closure1_slot1;
                romeo = 24;
                oscar = backup[romeo];
                golf = golf.bind(tango)(oscar);
                oscar = {};
                oscar['isMobileOnline'] = sizing;
                oscar['user'] = verify;
                oscar['status'] = kilo;
                romeo = backup[romeo];
                romeo = foxtrot.bind(tango)(romeo);
                romeo = romeo.AvatarSizes;
                romeo = romeo.SMALL;
                oscar['size'] = romeo;
                romeo = offset != yankee;
                offset = undefined;
                if(!romeo) { _fun85201_ip = 422; continue _fun85201 }
 419:
                offset = yankee;
 422:
                oscar['guildId'] = offset;
                offset = true;
                oscar['autoStatusCutout'] = offset;
                oscar = zulu.bind(tango)(golf, oscar);
                entity['icon'] = oscar;
                golf = _closure1_slot15;
                oscar = _closure1_slot1;
                offset = _closure1_slot2;
                report = 25;
                report = offset[report];
                oscar = oscar.bind(tango)(report);
                report = {};
                report['user'] = verify;
                offset = options.trailing;
                verify = new Array(2);
                verify[0] = offset;
                offset = options.username;
                verify[1] = offset;
                report['usernameStyle'] = verify;
                options = options.trailing;
                report['discriminatorStyle'] = options;
                report = golf.bind(tango)(oscar, report);
                entity['trailing'] = report;
                entity = zulu.bind(tango)(mike, entity);
                return entity;
            }
        };
        var _closure1_slot18 = tango;
        tango = function(argFoo) { // Original name: GlobalMentionItem
            entity = argFoo;
            report = entity.text;
            var _closure2_slot0 = report;
            golf = entity.description;
            yankee = entity.canvasCenterPoint;
            var _closure2_slot1 = yankee;
            offset = entity.onSelect;
            var _closure2_slot2 = offset;
            zulu = _closure1_slot16;
            tango = undefined;
            options = zulu.bind(tango)();
            zulu = _closure1_slot12;
            zulu = zulu.bind(tango)();
            foxtrot = zulu.inputWidth;
            var _closure2_slot3 = foxtrot;
            zulu = zulu.mentionsText;
            var _closure2_slot4 = zulu;
            verify = _closure1_slot4;
            romeo = verify.useCallback;
            oscar = new Array(3);
            oscar[0] = report;
            oscar[1] = foxtrot;
            oscar[2] = zulu;
            zulu = function(argFoo) {
                entity = {};
                tango = _closure2_slot3;
                zulu = _closure2_slot4;
                zulu = zulu.length;
                zulu = tango / zulu;
                mike = _closure2_slot0;
                mike = mike.length;
                zulu = zulu * mike;
                mike = 20;
                mike = zulu + mike;
                entity['width'] = mike;
                mike = argFoo;
                entity['height'] = mike;
                return entity;
            };
            foxtrot = romeo.bind(verify)(zulu, oscar);
            var _closure2_slot5 = foxtrot;
            romeo = verify.useCallback;
            oscar = new Array(1);
            oscar[0] = report;
            zulu = function() {
                zulu = _closure1_slot0;
                mike = _closure1_slot2;
                entity = 20;
                mike = mike[entity];
                entity = undefined;
                zulu = zulu.bind(entity)(mike);
                mike = zulu.getFontSizeApproximation;
                entity = _closure2_slot0;
                entity = mike.bind(zulu)(entity);
                return entity;
            };
            romeo = romeo.bind(verify)(zulu, oscar);
            var _closure2_slot6 = romeo;
            oscar = verify.useCallback;
            zulu = new Array(5);
            zulu[0] = report;
            zulu[1] = foxtrot;
            zulu[2] = romeo;
            zulu[3] = yankee;
            zulu[4] = offset;
            mike = function() {
                yankee = _closure2_slot6;
                entity = undefined;
                foxtrot = yankee.bind(entity)();
                oscar = _closure1_slot0;
                tango = _closure1_slot2;
                report = 21;
                golf = tango[report];
                verify = oscar.bind(entity)(golf);
                options = verify.createMention;
                golf = {};
                kilo = _closure2_slot0;
                offset = kilo.substring;
                backup = 1;
                output = offset.bind(kilo)(backup);
                offset = global;
                romeo = offset.HermesInternal;
                sizing = romeo.concat;
                romeo = '@';
                romeo = sizing.bind(romeo)(output);
                golf['mention'] = romeo;
                romeo = kilo.substring;
                romeo = romeo.bind(kilo)(backup);
                golf['mentionDisplayText'] = romeo;
                romeo = _closure2_slot5;
                romeo = romeo.bind(entity)(foxtrot);
                golf['size'] = romeo;
                romeo = _closure2_slot1;
                golf['canvasCenterPoint'] = romeo;
                yankee = yankee.bind(entity)();
                golf['fontSize'] = yankee;
                yankee = _closure1_slot17;
                golf['color'] = yankee;
                yankee = _closure1_slot13;
                yankee = yankee.GLOBAL;
                golf['mentionType'] = yankee;
                offset = offset.Map;
                yankee = offset.prototype;
                yankee = Object.create(yankee, {constructor: {value: offset}});
                echo = yankee;
                offset = new echo[offset](result);
                offset = offset instanceof Object ? offset : yankee;
                golf['boundingRects'] = offset;
                golf = options.bind(verify)(golf);
                report = tango[report];
                oscar = oscar.bind(entity)(report);
                report = oscar.addMention;
                report = report.bind(oscar)(golf);
                zulu = _closure2_slot2;
                zulu = zulu.bind(entity)();
                zulu = _closure1_slot1;
                mike = 22;
                mike = tango[mike];
                zulu = zulu.bind(entity)(mike);
                mike = zulu.hideActionSheet;
                mike = mike.bind(zulu)();
                return entity;
            };
            offset = oscar.bind(verify)(mike, zulu);
            zulu = _closure1_slot15;
            oscar = _closure1_slot0;
            verify = _closure1_slot2;
            entity = 23;
            entity = verify[entity];
            entity = oscar.bind(tango)(entity);
            mike = entity.TableRow;
            entity = {};
            entity['onPress'] = offset;
            entity['label'] = report;
            report = 26;
            report = verify[report];
            report = oscar.bind(tango)(report);
            oscar = report.Text;
            report = {};
            options = options.trailing;
            report['style'] = options;
            options = 'text-sm/medium';
            report['variant'] = options;
            report['children'] = golf;
            report = zulu.bind(tango)(oscar, report);
            entity['trailing'] = report;
            entity = zulu.bind(tango)(mike, entity);
            return entity;
        };
        var _closure1_slot19 = tango;
        tango = function(argFoo) { // Original name: RoleMentionItem
            _fun85211: for(var _fun85211_ip = 0; ; ) switch(_fun85211_ip) {
 0:
                mike = argFoo;
                offset = mike.name;
                var _closure2_slot0 = offset;
                yankee = mike.colorString;
                var _closure2_slot1 = yankee;
                foxtrot = mike.id;
                var _closure2_slot2 = foxtrot;
                options = mike.canvasCenterPoint;
                var _closure2_slot3 = options;
                golf = mike.onSelect;
                var _closure2_slot4 = golf;
                mike = _closure1_slot12;
                tango = undefined;
                mike = mike.bind(tango)();
                romeo = mike.inputWidth;
                var _closure2_slot5 = romeo;
                mike = mike.mentionsText;
                var _closure2_slot6 = mike;
                oscar = _closure1_slot4;
                verify = oscar.useCallback;
                zulu = new Array(3);
                zulu[0] = offset;
                zulu[1] = romeo;
                zulu[2] = mike;
                mike = function(argFoo) {
                    entity = {};
                    tango = _closure2_slot5;
                    zulu = _closure2_slot6;
                    zulu = zulu.length;
                    zulu = tango / zulu;
                    mike = _closure2_slot0;
                    mike = mike.length;
                    zulu = zulu * mike;
                    mike = 20;
                    mike = zulu + mike;
                    entity['width'] = mike;
                    mike = argFoo;
                    entity['height'] = mike;
                    return entity;
                };
                romeo = verify.bind(oscar)(mike, zulu);
                var _closure2_slot7 = romeo;
                verify = oscar.useCallback;
                zulu = new Array(1);
                zulu[0] = offset;
                mike = function() {
                    zulu = _closure1_slot0;
                    mike = _closure1_slot2;
                    entity = 20;
                    mike = mike[entity];
                    entity = undefined;
                    zulu = zulu.bind(entity)(mike);
                    mike = zulu.getFontSizeApproximation;
                    entity = _closure2_slot0;
                    entity = mike.bind(zulu)(entity);
                    return entity;
                };
                verify = verify.bind(oscar)(mike, zulu);
                var _closure2_slot8 = verify;
                zulu = oscar.useCallback;
                mike = new Array(7);
                mike[0] = foxtrot;
                mike[1] = offset;
                mike[2] = romeo;
                mike[3] = verify;
                mike[4] = yankee;
                mike[5] = options;
                mike[6] = golf;
                entity = function() {
                    _fun85214: for(var _fun85214_ip = 0; ; ) switch(_fun85214_ip) {
 0:
                        verify = _closure2_slot8;
                        entity = undefined;
                        yankee = verify.bind(entity)();
                        oscar = _closure1_slot0;
                        tango = _closure1_slot2;
                        report = 21;
                        tango = tango[report];
                        golf = oscar.bind(entity)(tango);
                        oscar = golf.createMention;
                        tango = {};
                        backup = _closure2_slot2;
                        options = global;
                        offset = options.HermesInternal;
                        foxtrot = offset.concat;
                        romeo = '<@&';
                        offset = '>';
                        offset = foxtrot.bind(romeo)(backup, offset);
                        tango['mention'] = offset;
                        offset = _closure2_slot0;
                        tango['mentionDisplayText'] = offset;
                        offset = _closure2_slot7;
                        offset = offset.bind(entity)(yankee);
                        tango['size'] = offset;
                        offset = _closure2_slot3;
                        tango['canvasCenterPoint'] = offset;
                        verify = verify.bind(entity)();
                        tango['fontSize'] = verify;
                        offset = _closure2_slot1;
                        verify = null;
                        if(!(verify == offset)) { _fun85214_ip = 138; continue _fun85214 }
 132:
                        verify = _closure1_slot17;
                        _fun85214_ip = 142; continue _fun85214;
 138:
                        verify = _closure2_slot1;
 142:
                        tango['color'] = verify;
                        verify = _closure1_slot13;
                        verify = verify.ROLE;
                        tango['mentionType'] = verify;
                        options = options.Map;
                        verify = options.prototype;
                        verify = Object.create(verify, {constructor: {value: options}});
                        output = verify;
                        options = new output[options](sizing);
                        options = options instanceof Object ? options : verify;
                        tango['boundingRects'] = options;
                        golf = oscar.bind(golf)(tango);
                        oscar = _closure1_slot0;
                        tango = _closure1_slot2;
                        report = tango[report];
                        oscar = oscar.bind(entity)(report);
                        report = oscar.addMention;
                        report = report.bind(oscar)(golf);
                        zulu = _closure2_slot4;
                        zulu = zulu.bind(entity)();
                        zulu = _closure1_slot1;
                        mike = 22;
                        mike = tango[mike];
                        zulu = zulu.bind(entity)(mike);
                        mike = zulu.hideActionSheet;
                        mike = mike.bind(zulu)();
                        return entity;
                    }
                };
                oscar = zulu.bind(oscar)(entity, mike);
                zulu = _closure1_slot15;
                golf = _closure1_slot0;
                options = _closure1_slot2;
                entity = 23;
                entity = options[entity];
                entity = golf.bind(tango)(entity);
                mike = entity.TableRow;
                entity = {};
                entity['onPress'] = oscar;
                oscar = 26;
                oscar = options[oscar];
                oscar = golf.bind(tango)(oscar);
                golf = oscar.Text;
                oscar = {};
                options = 'text-md/semibold';
                oscar['variant'] = options;
                options = null;
                verify = options != yankee;
                options = undefined;
                if(!verify) { _fun85211_ip = 291; continue _fun85211 }
 282:
                verify = {};
                verify['color'] = yankee;
                options = verify;
 291:
                oscar['style'] = options;
                options = global;
                options = options.HermesInternal;
                verify = options.concat;
                options = '@';
                options = verify.bind(options)(offset);
                oscar['children'] = options;
                oscar = zulu.bind(tango)(golf, oscar);
                entity['label'] = oscar;
                options = _closure1_slot0;
                verify = _closure1_slot2;
                report = 27;
                oscar = verify[report];
                oscar = options.bind(tango)(oscar);
                golf = oscar.intl;
                oscar = golf.string;
                report = verify[report];
                report = options.bind(tango)(report);
                report = report.t;
                report = report.HrUmDA;
                report = oscar.bind(golf)(report);
                entity['subLabel'] = report;
                entity = zulu.bind(tango)(mike, entity);
                return entity;
            }
        };
        var _closure1_slot20 = tango;
        tango = 34;
        tango = oscar[tango];
        oscar = report.bind(entity)(tango);
        report = oscar.fileFinishedImporting;
        tango = 'modules/remixing/native/components/MentionsSheet.tsx';
        tango = report.bind(oscar)(tango);
        mike = function(argFoo) { // Original name: _default
            _fun85215: for(var _fun85215_ip = 0; ; ) switch(_fun85215_ip) {
 0:
                entity = argFoo;
                golf = entity.channelId;
                var _closure2_slot0 = golf;
                oscar = entity.canvasCenterPoint;
                var _closure2_slot1 = oscar;
                entity = entity.onSelect;
                var _closure2_slot2 = entity;
                tango = undefined;
                var _closure2_slot7 = tango;
                var _closure2_slot8 = tango;
                mike = _closure1_slot16;
                backup = mike.bind(tango)();
                var _closure2_slot3 = backup;
                zulu = _closure1_slot7;
                mike = zulu.getChannel;
                output = mike.bind(zulu)(golf);
                var _closure2_slot4 = output;
                report = _closure1_slot4;
                zulu = report.useState;
                mike = new Array(0);
                report = zulu.bind(report)(mike);
                zulu = _closure1_slot3;
                mike = 2;
                zulu = zulu.bind(tango)(report, mike);
                mike = 0;
                foxtrot = zulu[mike];
                mike = 1;
                sizing = zulu[mike];
                var _closure2_slot5 = sizing;
                mike = _closure1_slot12;
                mike = mike.bind(tango)();
                result = mike.mentionsText;
                var _closure2_slot6 = result;
                zulu = null;
                mike = zulu == output;
                romeo = undefined;
                if(mike) { _fun85215_ip = 164; continue _fun85215 }
 154:
                mike = output.isPrivate;
                romeo = mike.bind(output)();
 164:
                _closure2_slot7 = romeo;
                options = _closure1_slot9;
                report = options.can;
                mike = _closure1_slot14;
                mike = mike.MENTION_EVERYONE;
                mike = report.bind(options)(mike, output);
                _closure2_slot8 = mike;
                options = _closure1_slot1;
                kilo = _closure1_slot2;
                report = 28;
                report = kilo[report];
                offset = options.bind(tango)(report);
                report = zulu != output;
                zulu = 'remix should be in a channel';
                zulu = offset.bind(tango)(report, zulu);
                report = _closure1_slot4;
                offset = report.useEffect;
                zulu = new Array(5);
                zulu[0] = result;
                zulu[1] = output;
                zulu[2] = sizing;
                zulu[3] = romeo;
                zulu[4] = mike;
                mike = function() {
                    _fun85216: for(var _fun85216_ip = 0; ; ) switch(_fun85216_ip) {
 0:
                        tango = _closure1_slot1;
                        mike = _closure1_slot2;
                        entity = 29;
                        mike = mike[entity];
                        entity = undefined;
                        golf = tango.bind(entity)(mike);
                        oscar = golf.queryMentionResults;
                        tango = {};
                        offset = _closure2_slot6;
                        verify = offset.substring;
                        options = 1;
                        options = verify.bind(offset)(options);
                        tango['query'] = options;
                        options = _closure2_slot4;
                        tango['channel'] = options;
                        options = _closure2_slot7;
                        if(options) { _fun85216_ip = 79; continue _fun85216 }
 75:
                        options = _closure2_slot8;
 79:
                        tango['canMentionEveryone'] = options;
                        options = _closure2_slot7;
                        if(options) { _fun85216_ip = 95; continue _fun85216 }
 91:
                        options = _closure2_slot8;
 95:
                        tango['canMentionHere'] = options;
                        options = true;
                        tango['canMentionUsers'] = options;
                        tango['canMentionRoles'] = options;
                        options = false;
                        tango['includeNonMentionableRoles'] = options;
                        tango['checkRecentlyTalkedOnEmptyQuery'] = options;
                        options = 15;
                        tango['limit'] = options;
                        tango = oscar.bind(golf)(tango);
                        golf = tango.users;
                        offset = tango.globals;
                        options = tango.roles;
                        tango = _closure1_slot1;
                        oscar = _closure1_slot2;
                        zulu = 30;
                        zulu = oscar[zulu];
                        tango = tango.bind(entity)(zulu);
                        oscar = golf.map;
                        zulu = function(argFoo) {
                            entity = {};
                            mike = _closure1_slot13;
                            mike = mike.USER;
                            entity['type'] = mike;
                            zulu = argFoo;
                            tango = entity;
                            mike = copyDataProperties(tango, zulu);
                            return entity;
                        };
                        romeo = oscar.bind(golf)(zulu);
                        zulu = new Array(0);
                        yankee = 0;
                        foxtrot = zulu;
                        yankee = arraySpread(foxtrot, romeo, yankee);
                        verify = offset.map;
                        oscar = function(argFoo) {
                            entity = {};
                            mike = _closure1_slot13;
                            mike = mike.GLOBAL;
                            entity['type'] = mike;
                            zulu = argFoo;
                            tango = entity;
                            mike = copyDataProperties(tango, zulu);
                            return entity;
                        };
                        romeo = verify.bind(offset)(oscar);
                        foxtrot = zulu;
                        yankee = arraySpread(foxtrot, romeo, yankee);
                        golf = options.map;
                        report = function(argFoo) {
                            entity = {};
                            mike = _closure1_slot13;
                            mike = mike.ROLE;
                            entity['type'] = mike;
                            zulu = argFoo;
                            tango = entity;
                            mike = copyDataProperties(tango, zulu);
                            return entity;
                        };
                        romeo = golf.bind(options)(report);
                        foxtrot = zulu;
                        report = arraySpread(foxtrot, romeo, yankee);
                        tango = tango.bind(entity)(zulu);
                        zulu = tango.value;
                        zulu = zulu.bind(tango)();
                        mike = _closure2_slot5;
                        mike = mike.bind(entity)(zulu);
                        return entity;
                    }
                };
                mike = offset.bind(report)(mike, zulu);
                zulu = report.useCallback;
                mike = new Array(3);
                mike[0] = golf;
                mike[1] = oscar;
                mike[2] = entity;
                entity = function(argFoo) {
                    _fun85220: for(var _fun85220_ip = 0; ; ) switch(_fun85220_ip) {
 0:
                        entity = argFoo;
                        entity = entity.item;
                        tango = entity.type;
                        zulu = _closure1_slot13;
                        zulu = zulu.USER;
                        if(!(zulu !== tango)) { _fun85220_ip = 183; continue _fun85220 }
 33:
                        zulu = _closure1_slot13;
                        zulu = zulu.GLOBAL;
                        if(!(zulu !== tango)) { _fun85220_ip = 124; continue _fun85220 }
 47:
                        zulu = _closure1_slot13;
                        zulu = zulu.ROLE;
                        if(!(zulu !== tango)) { _fun85220_ip = 65; continue _fun85220 }
 61:
                        zulu = null;
                        return zulu;
 65:
                        oscar = _closure1_slot15;
                        report = _closure1_slot20;
                        tango = {};
                        offset = tango;
                        verify = entity;
                        zulu = copyDataProperties(offset, verify);
                        options = _closure2_slot1;
                        golf = 'canvasCenterPoint';
                        tango[golf] = options;
                        golf = _closure2_slot2;
                        zulu = 'onSelect';
                        tango[zulu] = golf;
                        zulu = undefined;
                        zulu = oscar.bind(zulu)(report, tango);
                        return zulu;
 124:
                        oscar = _closure1_slot15;
                        report = _closure1_slot19;
                        tango = {};
                        offset = tango;
                        verify = entity;
                        zulu = copyDataProperties(offset, verify);
                        options = _closure2_slot1;
                        golf = 'canvasCenterPoint';
                        tango[golf] = options;
                        golf = _closure2_slot2;
                        zulu = 'onSelect';
                        tango[zulu] = golf;
                        zulu = undefined;
                        zulu = oscar.bind(zulu)(report, tango);
                        return zulu;
 183:
                        tango = _closure1_slot15;
                        zulu = _closure1_slot18;
                        mike = {};
                        offset = mike;
                        verify = entity;
                        entity = copyDataProperties(offset, verify);
                        oscar = _closure2_slot0;
                        report = 'channelId';
                        mike[report] = oscar;
                        oscar = _closure2_slot1;
                        report = 'canvasCenterPoint';
                        mike[report] = oscar;
                        report = _closure2_slot2;
                        entity = 'onSelect';
                        mike[entity] = report;
                        entity = undefined;
                        entity = tango.bind(entity)(zulu, mike);
                        return entity;
                    }
                };
                romeo = zulu.bind(report)(entity, mike);
                zulu = _closure1_slot15;
                mike = _closure1_slot5;
                entity = {};
                oscar = backup.iconContainer;
                report = new Array(1);
                report[0] = oscar;
                entity['style'] = report;
                report = 'box-none';
                entity['pointerEvents'] = report;
                offset = _closure1_slot0;
                report = 31;
                report = kilo[report];
                report = offset.bind(tango)(report);
                oscar = report.SafeAreaPaddingView;
                report = {'bottom': null, 'left': false, 'right': false};
                golf = 13;
                golf = kilo[golf];
                offset = offset.bind(tango)(golf);
                golf = offset.isAndroid;
                golf = golf.bind(offset)();
                report['bottom'] = golf;
                offset = false;
                golf = backup.safeAreaPaddingView;
                report['style'] = golf;
                golf = 32;
                golf = kilo[golf];
                options = options.bind(tango)(golf);
                golf = {};
                kilo = backup.keyboardAwareView;
                golf['style'] = kilo;
                golf['disabled'] = offset;
                offset = _closure1_slot6;
                verify = {};
                backup = backup.autocomplete;
                verify['style'] = backup;
                backup = function(argFoo, argBar) { // Original name: keyExtractor
                    entity = global;
                    zulu = entity.String;
                    mike = undefined;
                    entity = argBar;
                    entity = zulu.bind(mike)(entity);
                    return entity;
                };
                verify['keyExtractor'] = backup;
                verify['data'] = foxtrot;
                verify['renderItem'] = romeo;
                yankee = function() { // Original name: ItemSeparatorComponent
                    tango = _closure1_slot15;
                    mike = _closure1_slot0;
                    zulu = _closure1_slot2;
                    entity = 33;
                    entity = zulu[entity];
                    zulu = undefined;
                    entity = mike.bind(zulu)(entity);
                    mike = entity.FormDivider;
                    entity = {};
                    report = _closure2_slot3;
                    report = report.itemDivider;
                    entity['style'] = report;
                    entity = tango.bind(zulu)(mike, entity);
                    return entity;
                };
                verify['ItemSeparatorComponent'] = yankee;
                yankee = 'always';
                verify['keyboardShouldPersistTaps'] = yankee;
                verify = zulu.bind(tango)(offset, verify);
                golf['children'] = verify;
                golf = zulu.bind(tango)(options, golf);
                report['children'] = golf;
                report = zulu.bind(tango)(oscar, report);
                entity['children'] = report;
                entity = zulu.bind(tango)(mike, entity);
                return entity;
            }
        };
        zulu['default'] = mike;
        return entity;
    }
})();