// app/modules/remixing/native/components/MentionUserAvatar.tsx
export default (function(argFoo, argBar, _, argCor, __, argFre, argPlu) {
    report = argBar;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    var _closure1_slot1 = oscard;
    entity = global;
    option = entity.Object;
    golfie = option.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(option)(zuuluu, entity, tangon);
    entity = 0;
    golfie = oscard[entity];
    tangon = argCor;
    entity = undefined;
    golfie = tangon.bind(entity)(golfie);
    tangon = 1;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.jsx;
    var _closure1_slot2 = tangon;
    tangon = golfie.memo;
    michal = function(argFoo) {
        entity = argFoo;
        romeon = entity.avatarImage;
        michal = entity.avatarSize;
        yankee = entity.position;
        entity = 3;
        verify = entity * michal;
        offset = entity * michal;
        tangon = _closure1_slot2;
        option = _closure1_slot0;
        foxtra = _closure1_slot1;
        golfie = 2;
        entity = foxtra[golfie];
        zuuluu = undefined;
        entity = option.bind(zuuluu)(entity);
        michal = entity.Group;
        entity = {};
        report = foxtra[golfie];
        report = option.bind(zuuluu)(report);
        oscard = report.Mask;
        report = {};
        backup = 'luminance';
        report['mode'] = backup;
        backup = foxtra[golfie];
        backup = option.bind(zuuluu)(backup);
        kiloes = backup.Group;
        backup = {};
        sizing = foxtra[golfie];
        sizing = option.bind(zuuluu)(sizing);
        output = sizing.Circle;
        sizing = {};
        echoed = yankee.x;
        result = verify / golfie;
        echoed = echoed + result;
        sizing['cx'] = echoed;
        update = yankee.y;
        echoed = offset / golfie;
        echoed = update + echoed;
        sizing['cy'] = echoed;
        sizing['r'] = result;
        result = 'white';
        sizing['color'] = result;
        sizing = tangon.bind(zuuluu)(output, sizing);
        backup['children'] = sizing;
        backup = tangon.bind(zuuluu)(kiloes, backup);
        report['mask'] = backup;
        golfie = foxtra[golfie];
        golfie = option.bind(zuuluu)(golfie);
        option = golfie.Image;
        golfie = {};
        golfie['image'] = romeon;
        romeon = 'cover';
        golfie['fit'] = romeon;
        romeon = yankee.x;
        golfie['x'] = romeon;
        yankee = yankee.y;
        golfie['y'] = yankee;
        golfie['height'] = offset;
        golfie['width'] = verify;
        golfie = tangon.bind(zuuluu)(option, golfie);
        report['children'] = golfie;
        report = tangon.bind(zuuluu)(oscard, report);
        entity['children'] = report;
        entity = tangon.bind(zuuluu)(michal, entity);
        return entity;
    };
    michal = tangon.bind(golfie)(michal);
    tangon = 3;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/remixing/native/components/MentionUserAvatar.tsx';
    tangon = report.bind(oscard)(tangon);
    zuuluu['default'] = michal;
    return entity;
})();