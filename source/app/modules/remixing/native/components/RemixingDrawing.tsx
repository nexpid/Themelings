// app/modules/remixing/native/components/RemixingDrawing.tsx
export default (function(argFoo, argBar, _, argCorge, __, argFred, argPlugh) {
    report = argBar;
    zulu = argFred;
    oscar = argPlugh;
    var _closure1_slot0 = report;
    var _closure1_slot1 = oscar;
    entity = global;
    options = entity.Object;
    golf = options.defineProperty;
    tango = {};
    entity = true;
    tango['value'] = entity;
    entity = '__esModule';
    entity = golf.bind(options)(zulu, entity, tango);
    entity = 0;
    golf = oscar[entity];
    tango = argCorge;
    entity = undefined;
    tango = tango.bind(entity)(golf);
    tango = 1;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.jsx;
    var _closure1_slot2 = tango;
    tango = 3;
    tango = oscar[tango];
    oscar = report.bind(entity)(tango);
    report = oscar.fileFinishedImporting;
    tango = 'modules/remixing/native/components/RemixingDrawing.tsx';
    tango = report.bind(oscar)(tango);
    mike = function(argFoo) { // Original name: _default
        entity = argFoo;
        options = entity.color;
        verify = entity.path;
        golf = entity.strokeWidth;
        tango = _closure1_slot2;
        oscar = _closure1_slot0;
        offset = _closure1_slot1;
        report = 2;
        entity = offset[report];
        zulu = undefined;
        entity = oscar.bind(zulu)(entity);
        mike = entity.Group;
        entity = {};
        report = offset[report];
        report = oscar.bind(zulu)(report);
        oscar = report.Path;
        report = {'path': null, 'color': null, 'style': 'stroke', 'strokeWidth': null, 'strokeCap': 'round', 'strokeJoin': 'round'};
        report['path'] = verify;
        report['color'] = options;
        report['strokeWidth'] = golf;
        report = tango.bind(zulu)(oscar, report);
        entity['children'] = report;
        entity = tango.bind(zulu)(mike, entity);
        return entity;
    };
    zulu['default'] = mike;
    return entity;
})();