// app/modules/remixing/native/components/TrashCan.tsx
export default (function(argFoo, argBar, argBaz, argCorge, _, argFred, argPlugh) {
    report = argBar;
    options = argBaz;
    zulu = argFred;
    oscar = argPlugh;
    var _closure1_slot0 = report;
    var _closure1_slot1 = options;
    var _closure1_slot2 = oscar;
    entity = global;
    verify = entity.Object;
    golf = verify.defineProperty;
    tango = {};
    entity = true;
    tango['value'] = entity;
    entity = '__esModule';
    entity = golf.bind(verify)(zulu, entity, tango);
    entity = 0;
    golf = oscar[entity];
    tango = argCorge;
    entity = undefined;
    golf = tango.bind(entity)(golf);
    tango = 1;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    verify = tango.View;
    tango = 2;
    offset = oscar[tango];
    offset = report.bind(entity)(offset);
    offset = offset.jsx;
    var _closure1_slot3 = offset;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.jsxs;
    var _closure1_slot4 = tango;
    tango = 3;
    tango = oscar[tango];
    options = options.bind(entity)(tango);
    tango = options.createAnimatedComponent;
    tango = tango.bind(options)(verify);
    var _closure1_slot5 = tango;
    tango = {};
    options = "function TrashCanTsx1(){const{top,visible,TRASH_TAP_TARGET_SIZE,TRASH_CAN_ICON_CONTAINER_SIZE}=this.__closure;return{position:'absolute',top:top,display:'flex',opacity:visible?1:0,height:TRASH_TAP_TARGET_SIZE,width:TRASH_TAP_TARGET_SIZE,left:'50%',transform:[{translateX:-TRASH_CAN_ICON_CONTAINER_SIZE/2}]};}";
    tango['code'] = options;
    var _closure1_slot6 = tango;
    tango = {};
    options = "function TrashCanTsx2(){const{focused,tokens,TRASH_CAN_ICON_CONTAINER_SIZE,TRASH_CAN_ICON_ACTIVE_SCALE}=this.__closure;return{display:focused.get()?'flex':'none',backgroundColor:tokens.unsafe_rawColors.WHITE_500,position:'absolute',height:TRASH_CAN_ICON_CONTAINER_SIZE*TRASH_CAN_ICON_ACTIVE_SCALE,width:TRASH_CAN_ICON_CONTAINER_SIZE*TRASH_CAN_ICON_ACTIVE_SCALE,borderRadius:TRASH_CAN_ICON_CONTAINER_SIZE*TRASH_CAN_ICON_ACTIVE_SCALE/2,top:-(TRASH_CAN_ICON_CONTAINER_SIZE*(TRASH_CAN_ICON_ACTIVE_SCALE-1))/2,left:-(TRASH_CAN_ICON_CONTAINER_SIZE*(TRASH_CAN_ICON_ACTIVE_SCALE-1))/2,alignSelf:'auto',alignItems:'center',justifyContent:'center'};}";
    tango['code'] = options;
    var _closure1_slot7 = tango;
    tango = {};
    options = "function TrashCanTsx3(){const{focused,TRASH_CAN_ICON_CONTAINER_SIZE}=this.__closure;return{display:!focused.get()?'flex':'none',backgroundColor:'rgba(100, 100, 100, 0.5)',position:'absolute',height:TRASH_CAN_ICON_CONTAINER_SIZE,width:TRASH_CAN_ICON_CONTAINER_SIZE,borderRadius:TRASH_CAN_ICON_CONTAINER_SIZE/2,alignSelf:'auto',alignItems:'center',justifyContent:'center'};}";
    tango['code'] = options;
    var _closure1_slot8 = tango;
    tango = golf.forwardRef;
    mike = function(argFoo, argBar) {
        mike = argFoo;
        verify = mike.visible;
        var _closure2_slot0 = verify;
        yankee = mike.focused;
        var _closure2_slot1 = yankee;
        offset = mike.top;
        var _closure2_slot2 = offset;
        romeo = _closure1_slot0;
        foxtrot = _closure1_slot2;
        oscar = 3;
        mike = foxtrot[oscar];
        tango = undefined;
        golf = romeo.bind(tango)(mike);
        zulu = golf.useAnimatedStyle;
        mike = function() { // Original name: E
            _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
                entity = {'position': 'absolute', 'top': null, 'display': 'flex'};
                zulu = _closure2_slot2;
                entity['top'] = zulu;
                zulu = _closure2_slot0;
                mike = 0;
                if(!zulu) { _fun00002_ip = 39; continue _fun00001 }
 36:
                mike = 1;
 39:
                entity['opacity'] = mike;
                report = _closure1_slot0;
                oscar = _closure1_slot2;
                mike = 4;
                zulu = oscar[mike];
                tango = undefined;
                zulu = report.bind(tango)(zulu);
                zulu = zulu.TRASH_TAP_TARGET_SIZE;
                entity['height'] = zulu;
                zulu = oscar[mike];
                zulu = report.bind(tango)(zulu);
                zulu = zulu.TRASH_TAP_TARGET_SIZE;
                entity['width'] = zulu;
                zulu = '50%';
                entity['left'] = zulu;
                zulu = {};
                mike = oscar[mike];
                mike = report.bind(tango)(mike);
                mike = mike.TRASH_CAN_ICON_CONTAINER_SIZE;
                tango = -mike;
                mike = 2;
                mike = tango / mike;
                zulu['translateX'] = mike;
                mike = new Array(1);
                mike[0] = zulu;
                entity['transform'] = mike;
                return entity;
            }
        };
        options = {};
        options['top'] = offset;
        options['visible'] = verify;
        verify = 4;
        offset = foxtrot[verify];
        offset = romeo.bind(tango)(offset);
        offset = offset.TRASH_TAP_TARGET_SIZE;
        options['TRASH_TAP_TARGET_SIZE'] = offset;
        offset = foxtrot[verify];
        offset = romeo.bind(tango)(offset);
        offset = offset.TRASH_CAN_ICON_CONTAINER_SIZE;
        options['TRASH_CAN_ICON_CONTAINER_SIZE'] = offset;
        mike['__closure'] = options;
        options = 13121566996394.0;
        mike['__workletHash'] = options;
        options = _closure1_slot6;
        mike['__initData'] = options;
        golf = zulu.bind(golf)(mike);
        mike = foxtrot[oscar];
        options = romeo.bind(tango)(mike);
        zulu = options.useAnimatedStyle;
        mike = function() { // Original name: n
            _fun00003: for(var _fun00004_ip = 0; ; ) switch(_fun00004_ip) {
 0:
                entity = {};
                zulu = _closure2_slot1;
                mike = zulu.get;
                zulu = mike.bind(zulu)();
                mike = 'none';
                if(!zulu) { _fun00004_ip = 29; continue _fun00003 }
 25:
                mike = 'flex';
 29:
                entity['display'] = mike;
                tango = _closure1_slot1;
                options = _closure1_slot2;
                zulu = 5;
                zulu = options[zulu];
                golf = undefined;
                zulu = tango.bind(golf)(zulu);
                zulu = zulu.unsafe_rawColors;
                zulu = zulu.WHITE_500;
                entity['backgroundColor'] = zulu;
                zulu = 'absolute';
                entity['position'] = zulu;
                oscar = _closure1_slot0;
                mike = 4;
                zulu = options[mike];
                zulu = oscar.bind(golf)(zulu);
                tango = zulu.TRASH_CAN_ICON_CONTAINER_SIZE;
                zulu = options[mike];
                zulu = oscar.bind(golf)(zulu);
                zulu = zulu.TRASH_CAN_ICON_ACTIVE_SCALE;
                zulu = tango * zulu;
                entity['height'] = zulu;
                zulu = options[mike];
                zulu = oscar.bind(golf)(zulu);
                tango = zulu.TRASH_CAN_ICON_CONTAINER_SIZE;
                zulu = options[mike];
                zulu = oscar.bind(golf)(zulu);
                zulu = zulu.TRASH_CAN_ICON_ACTIVE_SCALE;
                zulu = tango * zulu;
                entity['width'] = zulu;
                zulu = options[mike];
                zulu = oscar.bind(golf)(zulu);
                tango = zulu.TRASH_CAN_ICON_CONTAINER_SIZE;
                zulu = options[mike];
                zulu = oscar.bind(golf)(zulu);
                zulu = zulu.TRASH_CAN_ICON_ACTIVE_SCALE;
                tango = tango * zulu;
                zulu = 2;
                tango = tango / zulu;
                entity['borderRadius'] = tango;
                tango = options[mike];
                tango = oscar.bind(golf)(tango);
                tango = tango.TRASH_CAN_ICON_CONTAINER_SIZE;
                verify = -tango;
                tango = options[mike];
                tango = oscar.bind(golf)(tango);
                tango = tango.TRASH_CAN_ICON_ACTIVE_SCALE;
                report = 1;
                tango = tango - report;
                tango = verify * tango;
                tango = tango / zulu;
                entity['top'] = tango;
                tango = options[mike];
                tango = oscar.bind(golf)(tango);
                tango = tango.TRASH_CAN_ICON_CONTAINER_SIZE;
                tango = -tango;
                mike = options[mike];
                mike = oscar.bind(golf)(mike);
                mike = mike.TRASH_CAN_ICON_ACTIVE_SCALE;
                mike = mike - report;
                mike = tango * mike;
                mike = mike / zulu;
                entity['left'] = mike;
                mike = 'auto';
                entity['alignSelf'] = mike;
                mike = 'center';
                entity['alignItems'] = mike;
                entity['justifyContent'] = mike;
                return entity;
            }
        };
        offset = {};
        offset['focused'] = yankee;
        kilo = _closure1_slot1;
        backup = 5;
        sizing = foxtrot[backup];
        sizing = kilo.bind(tango)(sizing);
        offset['tokens'] = sizing;
        sizing = foxtrot[verify];
        sizing = romeo.bind(tango)(sizing);
        sizing = sizing.TRASH_CAN_ICON_CONTAINER_SIZE;
        offset['TRASH_CAN_ICON_CONTAINER_SIZE'] = sizing;
        sizing = foxtrot[verify];
        sizing = romeo.bind(tango)(sizing);
        sizing = sizing.TRASH_CAN_ICON_ACTIVE_SCALE;
        offset['TRASH_CAN_ICON_ACTIVE_SCALE'] = sizing;
        mike['__closure'] = offset;
        offset = 9574223373166.0;
        mike['__workletHash'] = offset;
        offset = _closure1_slot7;
        mike['__initData'] = offset;
        offset = zulu.bind(options)(mike);
        mike = foxtrot[oscar];
        zulu = romeo.bind(tango)(mike);
        mike = zulu.useAnimatedStyle;
        entity = function() { // Original name: R
            _fun00005: for(var _fun00006_ip = 0; ; ) switch(_fun00006_ip) {
 0:
                entity = {'display': null, 'backgroundColor': 'rgba(100, 100, 100, 0.5)', 'position': 'absolute'};
                zulu = _closure2_slot1;
                mike = zulu.get;
                zulu = mike.bind(zulu)();
                mike = 'flex';
                if(!zulu) { _fun00006_ip = 41; continue _fun00005 }
 37:
                mike = 'none';
 41:
                entity['display'] = mike;
                tango = _closure1_slot0;
                report = _closure1_slot2;
                mike = 4;
                oscar = report[mike];
                zulu = undefined;
                oscar = tango.bind(zulu)(oscar);
                oscar = oscar.TRASH_CAN_ICON_CONTAINER_SIZE;
                entity['height'] = oscar;
                oscar = report[mike];
                oscar = tango.bind(zulu)(oscar);
                oscar = oscar.TRASH_CAN_ICON_CONTAINER_SIZE;
                entity['width'] = oscar;
                mike = report[mike];
                mike = tango.bind(zulu)(mike);
                zulu = mike.TRASH_CAN_ICON_CONTAINER_SIZE;
                mike = 2;
                mike = zulu / mike;
                entity['borderRadius'] = mike;
                mike = 'auto';
                entity['alignSelf'] = mike;
                mike = 'center';
                entity['alignItems'] = mike;
                entity['justifyContent'] = mike;
                return entity;
            }
        };
        options = {};
        options['focused'] = yankee;
        verify = foxtrot[verify];
        verify = romeo.bind(tango)(verify);
        verify = verify.TRASH_CAN_ICON_CONTAINER_SIZE;
        options['TRASH_CAN_ICON_CONTAINER_SIZE'] = verify;
        entity['__closure'] = options;
        options = 3817445736583.0;
        entity['__workletHash'] = options;
        options = _closure1_slot8;
        entity['__initData'] = options;
        yankee = mike.bind(zulu)(entity);
        zulu = _closure1_slot4;
        mike = _closure1_slot5;
        entity = {};
        entity['style'] = golf;
        golf = argBar;
        entity['ref'] = golf;
        options = _closure1_slot3;
        report = foxtrot[oscar];
        report = kilo.bind(tango)(report);
        golf = report.View;
        report = {};
        verify = new Array(1);
        verify[0] = yankee;
        report['style'] = verify;
        yankee = 6;
        verify = foxtrot[yankee];
        output = kilo.bind(tango)(verify);
        verify = {};
        sizing = 7;
        result = foxtrot[sizing];
        result = kilo.bind(tango)(result);
        verify['source'] = result;
        result = foxtrot[backup];
        result = kilo.bind(tango)(result);
        result = result.unsafe_rawColors;
        result = result.WHITE_500;
        verify['color'] = result;
        result = foxtrot[yankee];
        result = romeo.bind(tango)(result);
        result = result.IconSizes;
        result = result.LARGE;
        verify['size'] = result;
        verify = options.bind(tango)(output, verify);
        report['children'] = verify;
        golf = options.bind(tango)(golf, report);
        report = new Array(2);
        report[0] = golf;
        oscar = foxtrot[oscar];
        oscar = kilo.bind(tango)(oscar);
        golf = oscar.View;
        oscar = {};
        verify = new Array(1);
        verify[0] = offset;
        oscar['style'] = verify;
        verify = foxtrot[yankee];
        offset = kilo.bind(tango)(verify);
        verify = {};
        sizing = foxtrot[sizing];
        sizing = kilo.bind(tango)(sizing);
        verify['source'] = sizing;
        backup = foxtrot[backup];
        backup = kilo.bind(tango)(backup);
        backup = backup.unsafe_rawColors;
        backup = backup.RED_400;
        verify['color'] = backup;
        yankee = foxtrot[yankee];
        yankee = romeo.bind(tango)(yankee);
        yankee = yankee.IconSizes;
        yankee = yankee.LARGE;
        verify['size'] = yankee;
        verify = options.bind(tango)(offset, verify);
        oscar['children'] = verify;
        oscar = options.bind(tango)(golf, oscar);
        report[1] = oscar;
        entity['children'] = report;
        entity = zulu.bind(tango)(mike, entity);
        return entity;
    };
    mike = tango.bind(golf)(mike);
    tango = 8;
    tango = oscar[tango];
    oscar = report.bind(entity)(tango);
    report = oscar.fileFinishedImporting;
    tango = 'modules/remixing/native/components/TrashCan.tsx';
    tango = report.bind(oscar)(tango);
    zulu['default'] = mike;
    return entity;
})();