// app/modules/remixing/native/components/TextBackground.tsx
export default (function(argFoo, argBar, _, argCorge, __, argFred, argPlugh) {
    report = argBar;
    zulu = argFred;
    oscar = argPlugh;
    var _closure1_slot0 = report;
    var _closure1_slot1 = oscar;
    entity = global;
    options = entity.Object;
    golf = options.defineProperty;
    tango = {};
    entity = true;
    tango['value'] = entity;
    entity = '__esModule';
    entity = golf.bind(options)(zulu, entity, tango);
    entity = 0;
    golf = oscar[entity];
    tango = argCorge;
    entity = undefined;
    tango = tango.bind(entity)(golf);
    tango = 1;
    golf = oscar[tango];
    golf = report.bind(entity)(golf);
    golf = golf.jsx;
    var _closure1_slot2 = golf;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.jsxs;
    var _closure1_slot3 = tango;
    tango = 3;
    tango = oscar[tango];
    oscar = report.bind(entity)(tango);
    report = oscar.fileFinishedImporting;
    tango = 'modules/remixing/native/components/TextBackground.tsx';
    tango = report.bind(oscar)(tango);
    mike = function(argFoo) { // Original name: _default
        entity = argFoo;
        options = entity.backgroundRect;
        yankee = entity.borderSize;
        tango = _closure1_slot2;
        offset = _closure1_slot0;
        romeo = _closure1_slot1;
        verify = 2;
        entity = romeo[verify];
        zulu = undefined;
        entity = offset.bind(zulu)(entity);
        mike = entity.Group;
        entity = {};
        golf = _closure1_slot3;
        report = romeo[verify];
        report = offset.bind(zulu)(report);
        oscar = report.Box;
        report = {'box': null, 'color': '#232428', 'opacity': 0.6};
        report['box'] = options;
        options = romeo[verify];
        options = offset.bind(zulu)(options);
        foxtrot = options.BoxShadow;
        options = {'dx': null, 'dy': null, 'blur': 0, 'color': '#94D783', 'inner': true};
        backup = -yankee;
        options['dx'] = backup;
        options['dy'] = yankee;
        foxtrot = tango.bind(zulu)(foxtrot, options);
        options = new Array(4);
        options[0] = foxtrot;
        foxtrot = romeo[verify];
        foxtrot = offset.bind(zulu)(foxtrot);
        backup = foxtrot.BoxShadow;
        foxtrot = {'dx': null, 'dy': null, 'blur': 0, 'color': '#94D783', 'inner': true};
        kilo = -yankee;
        foxtrot['dx'] = kilo;
        kilo = -yankee;
        foxtrot['dy'] = kilo;
        foxtrot = tango.bind(zulu)(backup, foxtrot);
        options[1] = foxtrot;
        foxtrot = romeo[verify];
        foxtrot = offset.bind(zulu)(foxtrot);
        backup = foxtrot.BoxShadow;
        foxtrot = {'dx': null, 'dy': null, 'blur': 0, 'color': '#94D783', 'inner': true};
        foxtrot['dx'] = yankee;
        foxtrot['dy'] = yankee;
        foxtrot = tango.bind(zulu)(backup, foxtrot);
        options[2] = foxtrot;
        verify = romeo[verify];
        verify = offset.bind(zulu)(verify);
        offset = verify.BoxShadow;
        verify = {'dx': null, 'dy': null, 'blur': 0, 'color': '#94D783', 'inner': true};
        verify['dx'] = yankee;
        yankee = -yankee;
        verify['dy'] = yankee;
        verify = tango.bind(zulu)(offset, verify);
        options[3] = verify;
        report['children'] = options;
        report = golf.bind(zulu)(oscar, report);
        entity['children'] = report;
        entity = tango.bind(zulu)(mike, entity);
        return entity;
    };
    zulu['default'] = mike;
    return entity;
})();