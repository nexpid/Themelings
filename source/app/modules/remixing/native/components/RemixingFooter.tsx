// app/modules/remixing/native/components/RemixingFooter.tsx
export default (function(argFoo, argBar, argBaz, argCorge, _, argFred, argPlugh) {
    _fun84580: for(var _fun84580_ip = 0; ; ) switch(_fun84580_ip) {
 0:
        report = argBar;
        yankee = argBaz;
        zulu = argFred;
        oscar = argPlugh;
        var _closure1_slot0 = report;
        var _closure1_slot1 = yankee;
        var _closure1_slot2 = oscar;
        entity = global;
        options = entity.Object;
        golf = options.defineProperty;
        tango = {};
        entity = true;
        tango['value'] = entity;
        entity = '__esModule';
        entity = golf.bind(options)(zulu, entity, tango);
        entity = 0;
        tango = oscar[entity];
        entity = undefined;
        tango = yankee.bind(entity)(tango);
        var _closure1_slot3 = tango;
        tango = 1;
        golf = oscar[tango];
        tango = argCorge;
        tango = tango.bind(entity)(golf);
        var _closure1_slot4 = tango;
        tango = 2;
        tango = oscar[tango];
        tango = report.bind(entity)(tango);
        options = tango.StyleSheet;
        var _closure1_slot5 = options;
        tango = tango.View;
        var _closure1_slot6 = tango;
        tango = 3;
        tango = oscar[tango];
        tango = yankee.bind(entity)(tango);
        var _closure1_slot7 = tango;
        tango = 4;
        tango = oscar[tango];
        tango = report.bind(entity)(tango);
        golf = tango.isInDrawMode;
        var _closure1_slot8 = golf;
        tango = tango.useRemixingEditorStore;
        var _closure1_slot9 = tango;
        tango = 5;
        tango = oscar[tango];
        tango = report.bind(entity)(tango);
        tango = tango.RemixMode;
        var _closure1_slot10 = tango;
        tango = 6;
        golf = oscar[tango];
        golf = report.bind(entity)(golf);
        golf = golf.jsx;
        var _closure1_slot11 = golf;
        tango = oscar[tango];
        tango = report.bind(entity)(tango);
        tango = tango.jsxs;
        var _closure1_slot12 = tango;
        golf = options.create;
        tango = {};
        verify = {'display': 'flex', 'alignItems': 'center'};
        tango['flexCenter'] = verify;
        verify = {'display': 'flex', 'flexDirection': 'row', 'justifyContent': 'space-evenly', 'borderRadius': null, 'width': 300, 'alignItems': 'center', 'marginBottom': 24, 'paddingVertical': 16, 'backgroundColor': null, 'overflow': 'hidden'};
        offset = 7;
        romeo = oscar[offset];
        romeo = yankee.bind(entity)(romeo);
        romeo = romeo.radii;
        romeo = romeo.xl;
        verify['borderRadius'] = romeo;
        romeo = 16;
        foxtrot = 8;
        backup = oscar[foxtrot];
        kilo = report.bind(entity)(backup);
        backup = kilo.isAndroid;
        sizing = backup.bind(kilo)();
        backup = 'transparent';
        kilo = backup;
        if(!sizing) { _fun84580_ip = 335; continue _fun84580 }
 329:
        kilo = 'rgba(24, 25, 28, 0.8)';
 335:
        verify['backgroundColor'] = kilo;
        tango['iconContainer'] = verify;
        verify = {};
        result = options.absoluteFillObject;
        echo = verify;
        kilo = copyDataProperties(echo, result);
        kilo = 'backgroundColor';
        verify[kilo] = backup;
        tango['visualEffectView'] = verify;
        verify = {};
        verify['backgroundColor'] = backup;
        tango['buttonContainer'] = verify;
        verify = {'backgroundColor': null, 'position': 'absolute', 'alignSelf': 'center', 'width': 40, 'height': 16, 'top': 60};
        backup = oscar[offset];
        backup = yankee.bind(entity)(backup);
        backup = backup.unsafe_rawColors;
        backup = backup.BRAND_260;
        verify['backgroundColor'] = backup;
        backup = oscar[offset];
        backup = yankee.bind(entity)(backup);
        backup = backup.radii;
        backup = backup.xs;
        verify['borderRadius'] = backup;
        tango['betaContainer'] = verify;
        verify = {'textAlign': 'center', 'fontFamily': 'gg sans', 'bottom': null, 'fontSize': 12, 'lineHeight': null, 'height': 16, 'letterSpacing': 0.5, 'fontWeight': '700', 'textTransform': 'uppercase'};
        backup = oscar[foxtrot];
        kilo = report.bind(entity)(backup);
        backup = kilo.isAndroid;
        kilo = backup.bind(kilo)();
        backup = '0%';
        if(!kilo) { _fun84580_ip = 502; continue _fun84580 }
 496:
        backup = '10%';
 502:
        verify['bottom'] = backup;
        foxtrot = oscar[foxtrot];
        backup = report.bind(entity)(foxtrot);
        foxtrot = backup.isAndroid;
        foxtrot = foxtrot.bind(backup)();
        if(!foxtrot) { _fun84580_ip = 532; continue _fun84580 }
 529:
        romeo = 18;
 532:
        verify['lineHeight'] = romeo;
        offset = oscar[offset];
        offset = yankee.bind(entity)(offset);
        offset = offset.unsafe_rawColors;
        offset = offset.BRAND_500;
        verify['color'] = offset;
        tango['betaText'] = verify;
        tango = golf.bind(options)(tango);
        var _closure1_slot13 = tango;
        tango = function() { // Original name: BetaTag
            _fun84581: for(var _fun84581_ip = 0; ; ) switch(_fun84581_ip) {
 0:
                mike = _closure1_slot0;
                zulu = _closure1_slot2;
                entity = 10;
                entity = zulu[entity];
                report = undefined;
                mike = mike.bind(report)(entity);
                entity = mike.useIsRemixANitroPerk;
                mike = entity.bind(mike)();
                entity = null;
                if(!mike) { _fun84581_ip = 196; continue _fun84581 }
 43:
                tango = _closure1_slot11;
                zulu = _closure1_slot6;
                mike = {};
                oscar = _closure1_slot13;
                oscar = oscar.betaContainer;
                mike['style'] = oscar;
                oscar = 'box-none';
                mike['pointerEvents'] = oscar;
                yankee = _closure1_slot0;
                romeo = _closure1_slot2;
                oscar = 11;
                oscar = romeo[oscar];
                oscar = yankee.bind(report)(oscar);
                golf = oscar.Text;
                oscar = {};
                verify = 'text-sm/normal';
                oscar['variant'] = verify;
                options = _closure1_slot13;
                options = options.betaText;
                oscar['style'] = options;
                options = 12;
                verify = romeo[options];
                verify = yankee.bind(report)(verify);
                offset = verify.intl;
                verify = offset.string;
                options = romeo[options];
                options = yankee.bind(report)(options);
                options = options.t;
                options = options.oW0eUV;
                options = verify.bind(offset)(options);
                oscar['children'] = options;
                oscar = tango.bind(report)(golf, oscar);
                mike['children'] = oscar;
                entity = tango.bind(report)(zulu, mike);
 196:
                return entity;
            }
        };
        var _closure1_slot14 = tango;
        tango = 32;
        tango = oscar[tango];
        oscar = report.bind(entity)(tango);
        report = oscar.fileFinishedImporting;
        tango = 'modules/remixing/native/components/RemixingFooter.tsx';
        tango = report.bind(oscar)(tango);
        mike = function(argFoo) { // Original name: _default
            entity = argFoo;
            verify = entity.channelId;
            var _closure2_slot0 = verify;
            offset = entity.clearActiveId;
            var _closure2_slot1 = offset;
            options = entity.canvasCenterPoint;
            var _closure2_slot2 = options;
            zulu = _closure1_slot9;
            kilo = _closure1_slot0;
            sizing = _closure1_slot2;
            entity = 13;
            entity = sizing[entity];
            tango = undefined;
            entity = kilo.bind(tango)(entity);
            mike = entity.shallow;
            entity = function(argFoo) {
                mike = argFoo;
                zulu = mike.currentMode;
                entity = new Array(2);
                entity[0] = zulu;
                mike = mike.setCurrentMode;
                entity[1] = mike;
                return entity;
            };
            zulu = zulu.bind(tango)(entity, mike);
            mike = _closure1_slot3;
            entity = 2;
            mike = mike.bind(tango)(zulu, entity);
            entity = 0;
            entity = mike[entity];
            var _closure2_slot3 = entity;
            entity = 1;
            entity = mike[entity];
            var _closure2_slot4 = entity;
            mike = 14;
            zulu = sizing[mike];
            report = kilo.bind(tango)(zulu);
            zulu = report.useOverlayLayoutDriver;
            report = zulu.bind(report)();
            mike = sizing[mike];
            zulu = kilo.bind(tango)(mike);
            mike = zulu.useFooterLayoutAnimation;
            golf = mike.bind(zulu)(report);
            report = _closure1_slot4;
            yankee = report.useCallback;
            zulu = new Array(3);
            zulu[0] = offset;
            zulu[1] = verify;
            zulu[2] = options;
            mike = function() {
                zulu = _closure2_slot1;
                entity = undefined;
                zulu = zulu.bind(entity)();
                oscar = _closure1_slot1;
                zulu = _closure1_slot2;
                report = 15;
                report = zulu[report];
                oscar = oscar.bind(entity)(report);
                report = oscar.openLazy;
                golf = _closure1_slot0;
                tango = 17;
                tango = zulu[tango];
                golf = golf.bind(entity)(tango);
                tango = 18;
                tango = zulu[tango];
                zulu = zulu.paths;
                tango = golf.bind(entity)(tango, zulu);
                zulu = {};
                golf = _closure2_slot0;
                zulu['channelId'] = golf;
                mike = _closure2_slot2;
                zulu['canvasCenterPoint'] = mike;
                mike = 'ExpressionPickerActionSheet';
                mike = report.bind(oscar)(tango, mike, zulu);
                return entity;
            };
            mike = yankee.bind(report)(mike, zulu);
            var _closure2_slot5 = mike;
            zulu = report.useCallback;
            mike = new Array(4);
            mike[0] = offset;
            mike[1] = verify;
            mike[2] = options;
            mike[3] = entity;
            entity = function() {
                mike = _closure2_slot1;
                entity = undefined;
                mike = mike.bind(entity)();
                oscar = _closure1_slot1;
                tango = _closure1_slot2;
                report = 15;
                report = tango[report];
                options = oscar.bind(entity)(report);
                golf = options.openLazy;
                oscar = _closure1_slot0;
                report = 17;
                report = tango[report];
                oscar = oscar.bind(entity)(report);
                report = 19;
                report = tango[report];
                tango = tango.paths;
                oscar = oscar.bind(entity)(report, tango);
                report = {};
                tango = _closure2_slot0;
                report['channelId'] = tango;
                tango = _closure2_slot2;
                report['canvasCenterPoint'] = tango;
                tango = 'RemixingMentionsActionSheet';
                tango = golf.bind(options)(oscar, tango, report);
                zulu = _closure2_slot4;
                mike = _closure1_slot10;
                mike = mike.MENTIONS_MODE;
                mike = zulu.bind(entity)(mike);
                return entity;
            };
            output = zulu.bind(report)(entity, mike);
            entity = 20;
            entity = sizing[entity];
            options = kilo.bind(tango)(entity);
            zulu = options.useStateFromStores;
            entity = _closure1_slot7;
            mike = new Array(1);
            mike[0] = entity;
            entity = function() {
                entity = _closure1_slot7;
                entity = entity.keyboardOpen;
                return entity;
            };
            entity = zulu.bind(options)(mike, entity);
            zulu = report.useEffect;
            mike = new Array(1);
            mike[0] = entity;
            entity = function() {
                _fun84587: for(var _fun84587_ip = 0; ; ) switch(_fun84587_ip) {
 0:
                    tango = _closure1_slot0;
                    zulu = _closure1_slot2;
                    mike = 8;
                    zulu = zulu[mike];
                    mike = undefined;
                    zulu = tango.bind(mike)(zulu);
                    mike = zulu.isAndroid;
                    mike = mike.bind(zulu)();
                    if(mike) { _fun84587_ip = 45; continue _fun84587 }
 39:
                    tango = new Array(0);
                    _fun84587_ip = 55; continue _fun84587;
 45:
                    tango = [250, 1000];
 55:
                    zulu = tango.map;
                    mike = function(argFoo) {
                        entity = global;
                        tango = entity.setTimeout;
                        zulu = undefined;
                        mike = function() {
                            _fun84589: for(var _fun84589_ip = 0; ; ) switch(_fun84589_ip) {
 0:
                                mike = _closure1_slot7;
                                mike = mike.keyboardOpen;
                                if(!mike) { _fun84589_ip = 48; continue _fun84589 }
 16:
                                zulu = _closure1_slot0;
                                mike = _closure1_slot2;
                                entity = 9;
                                mike = mike[entity];
                                entity = undefined;
                                mike = zulu.bind(entity)(mike);
                                entity = mike.dismissGlobalKeyboard;
                                entity = entity.bind(mike)();
 48:
                                entity = undefined;
                                return entity;
                            }
                        };
                        entity = argFoo;
                        entity = tango.bind(zulu)(mike, entity);
                        return entity;
                    };
                    mike = zulu.bind(tango)(mike);
                    var _closure3_slot0 = mike;
                    entity = function() {
                        zulu = _closure3_slot0;
                        mike = zulu.forEach;
                        entity = function(argFoo) {
                            entity = global;
                            zulu = entity.clearTimeout;
                            mike = undefined;
                            entity = argFoo;
                            entity = zulu.bind(mike)(entity);
                            return entity;
                        };
                        entity = mike.bind(zulu)(entity);
                        entity = undefined;
                        return entity;
                    };
                    return entity;
                }
            };
            entity = zulu.bind(report)(entity, mike);
            zulu = _closure1_slot12;
            result = _closure1_slot1;
            entity = 21;
            entity = sizing[entity];
            entity = result.bind(tango)(entity);
            mike = entity.View;
            entity = {};
            options = {};
            report = _closure1_slot5;
            config = report.absoluteFillObject;
            record = options;
            report = copyDataProperties(record, config);
            report = 'top';
            options[report] = tango;
            report = new Array(2);
            report[0] = options;
            report[1] = golf;
            entity['style'] = report;
            options = _closure1_slot11;
            report = 22;
            report = sizing[report];
            report = kilo.bind(tango)(report);
            golf = report.SafeAreaPaddingView;
            report = {'bottom': true, 'left': true, 'right': true, 'pointerEvents': 'box-none'};
            yankee = 'box-none';
            verify = _closure1_slot13;
            verify = verify.flexCenter;
            report['style'] = verify;
            offset = _closure1_slot6;
            verify = {};
            romeo = _closure1_slot13;
            romeo = romeo.iconContainer;
            verify['style'] = romeo;
            verify['pointerEvents'] = yankee;
            yankee = 23;
            yankee = sizing[yankee];
            romeo = result.bind(tango)(yankee);
            yankee = {};
            foxtrot = 'dark';
            yankee['blurTheme'] = foxtrot;
            foxtrot = _closure1_slot13;
            foxtrot = foxtrot.visualEffectView;
            yankee['style'] = foxtrot;
            romeo = options.bind(tango)(romeo, yankee);
            yankee = new Array(6);
            yankee[0] = romeo;
            romeo = 24;
            foxtrot = sizing[romeo];
            update = result.bind(tango)(foxtrot);
            foxtrot = {};
            echo = 12;
            backup = sizing[echo];
            backup = kilo.bind(tango)(backup);
            vacuum = backup.intl;
            control = vacuum.string;
            backup = sizing[echo];
            backup = kilo.bind(tango)(backup);
            backup = backup.t;
            backup = backup.s+dFp6;
            backup = control.bind(vacuum)(backup);
            foxtrot['accessibilityLabel'] = backup;
            backup = function() { // Original name: onPress
                zulu = _closure2_slot1;
                entity = undefined;
                zulu = zulu.bind(entity)();
                tango = _closure2_slot4;
                zulu = _closure1_slot10;
                zulu = zulu.CROP_MODE;
                zulu = tango.bind(entity)(zulu);
                report = _closure1_slot1;
                tango = _closure1_slot2;
                zulu = 15;
                zulu = tango[zulu];
                golf = report.bind(entity)(zulu);
                oscar = golf.openLazy;
                zulu = _closure1_slot0;
                mike = 17;
                mike = tango[mike];
                options = zulu.bind(entity)(mike);
                mike = 16;
                report = tango[mike];
                mike = tango.paths;
                report = options.bind(entity)(report, mike);
                mike = 'AspectRatioActionSheet';
                mike = oscar.bind(golf)(report, mike);
                mike = 25;
                mike = tango[mike];
                tango = zulu.bind(entity)(mike);
                zulu = tango.trackRemixingComponentToolOpened;
                mike = 'CROP';
                mike = zulu.bind(tango)(mike);
                return entity;
            };
            foxtrot['onPress'] = backup;
            backup = 26;
            backup = sizing[backup];
            backup = result.bind(tango)(backup);
            foxtrot['icon'] = backup;
            backup = 27;
            control = sizing[backup];
            control = kilo.bind(tango)(control);
            control = control.IconSizes;
            control = control.LARGE;
            foxtrot['iconSize'] = control;
            control = _closure1_slot13;
            control = control.buttonContainer;
            foxtrot['style'] = control;
            foxtrot = options.bind(tango)(update, foxtrot);
            yankee[1] = foxtrot;
            foxtrot = sizing[romeo];
            update = result.bind(tango)(foxtrot);
            foxtrot = {};
            control = sizing[echo];
            control = kilo.bind(tango)(control);
            sequence = control.intl;
            vacuum = sequence.string;
            control = sizing[echo];
            control = kilo.bind(tango)(control);
            control = control.t;
            control = control.1Pskj4;
            control = vacuum.bind(sequence)(control);
            foxtrot['accessibilityLabel'] = control;
            control = function() { // Original name: onPress
                _fun84593: for(var _fun84593_ip = 0; ; ) switch(_fun84593_ip) {
 0:
                    mike = _closure2_slot1;
                    entity = undefined;
                    mike = mike.bind(entity)();
                    tango = _closure2_slot4;
                    report = _closure1_slot8;
                    zulu = _closure2_slot3;
                    zulu = report.bind(entity)(zulu);
                    report = _closure1_slot10;
                    if(zulu) { _fun84593_ip = 48; continue _fun84593 }
 40:
                    zulu = report.DRAW_MODE;
                    _fun84593_ip = 54; continue _fun84593;
 48:
                    zulu = report.DEFAULT_MODE;
 54:
                    zulu = tango.bind(entity)(zulu);
                    zulu = _closure1_slot0;
                    tango = _closure1_slot2;
                    mike = 25;
                    mike = tango[mike];
                    tango = zulu.bind(entity)(mike);
                    zulu = tango.trackRemixingComponentToolOpened;
                    mike = 'DRAWING';
                    mike = zulu.bind(tango)(mike);
                    return entity;
                }
            };
            foxtrot['onPress'] = control;
            control = 28;
            control = sizing[control];
            control = result.bind(tango)(control);
            foxtrot['icon'] = control;
            control = sizing[backup];
            control = kilo.bind(tango)(control);
            control = control.IconSizes;
            control = control.LARGE;
            foxtrot['iconSize'] = control;
            control = _closure1_slot13;
            control = control.buttonContainer;
            foxtrot['style'] = control;
            foxtrot = options.bind(tango)(update, foxtrot);
            yankee[2] = foxtrot;
            foxtrot = sizing[romeo];
            update = result.bind(tango)(foxtrot);
            foxtrot = {};
            control = sizing[echo];
            control = kilo.bind(tango)(control);
            sequence = control.intl;
            vacuum = sequence.string;
            control = sizing[echo];
            control = kilo.bind(tango)(control);
            control = control.t;
            control = control.WpFYAg;
            control = vacuum.bind(sequence)(control);
            foxtrot['accessibilityLabel'] = control;
            control = function() { // Original name: onPress
                _fun84594: for(var _fun84594_ip = 0; ; ) switch(_fun84594_ip) {
 0:
                    zulu = _closure2_slot1;
                    entity = undefined;
                    zulu = zulu.bind(entity)();
                    tango = _closure2_slot4;
                    report = _closure2_slot3;
                    zulu = _closure1_slot10;
                    zulu = zulu.TEXT_MODE;
                    if(!(report !== zulu)) { _fun84594_ip = 50; continue _fun84594 }
 38:
                    zulu = _closure1_slot10;
                    zulu = zulu.TEXT_MODE;
                    _fun84594_ip = 60; continue _fun84594;
 50:
                    report = _closure1_slot10;
                    zulu = report.DEFAULT_MODE;
 60:
                    zulu = tango.bind(entity)(zulu);
                    zulu = _closure1_slot0;
                    tango = _closure1_slot2;
                    mike = 25;
                    mike = tango[mike];
                    tango = zulu.bind(entity)(mike);
                    zulu = tango.trackRemixingComponentToolOpened;
                    mike = 'TEXT';
                    mike = zulu.bind(tango)(mike);
                    return entity;
                }
            };
            foxtrot['onPress'] = control;
            control = 29;
            control = sizing[control];
            control = result.bind(tango)(control);
            foxtrot['icon'] = control;
            control = sizing[backup];
            control = kilo.bind(tango)(control);
            control = control.IconSizes;
            control = control.LARGE;
            foxtrot['iconSize'] = control;
            control = _closure1_slot13;
            control = control.buttonContainer;
            foxtrot['style'] = control;
            foxtrot = options.bind(tango)(update, foxtrot);
            yankee[3] = foxtrot;
            foxtrot = sizing[romeo];
            update = result.bind(tango)(foxtrot);
            foxtrot = {};
            control = sizing[echo];
            control = kilo.bind(tango)(control);
            sequence = control.intl;
            vacuum = sequence.string;
            control = sizing[echo];
            control = kilo.bind(tango)(control);
            control = control.t;
            control = control.3N7uLy;
            control = vacuum.bind(sequence)(control);
            foxtrot['accessibilityLabel'] = control;
            source = function() { // Original name: onPress
                mike = _closure2_slot5;
                entity = undefined;
                mike = mike.bind(entity)();
                zulu = _closure1_slot0;
                tango = _closure1_slot2;
                mike = 25;
                mike = tango[mike];
                tango = zulu.bind(entity)(mike);
                zulu = tango.trackRemixingComponentToolOpened;
                mike = 'STAMP';
                mike = zulu.bind(tango)(mike);
                return entity;
            };
            foxtrot['onPress'] = source;
            source = 30;
            source = sizing[source];
            source = result.bind(tango)(source);
            foxtrot['icon'] = source;
            source = sizing[backup];
            source = kilo.bind(tango)(source);
            source = source.IconSizes;
            source = source.LARGE;
            foxtrot['iconSize'] = source;
            source = _closure1_slot13;
            source = source.buttonContainer;
            foxtrot['style'] = source;
            foxtrot = options.bind(tango)(update, foxtrot);
            yankee[4] = foxtrot;
            romeo = sizing[romeo];
            foxtrot = result.bind(tango)(romeo);
            romeo = {};
            update = sizing[echo];
            update = kilo.bind(tango)(update);
            source = update.intl;
            update = source.string;
            echo = sizing[echo];
            echo = kilo.bind(tango)(echo);
            echo = echo.t;
            echo = echo.Hu9dUF;
            echo = update.bind(source)(echo);
            romeo['accessibilityLabel'] = echo;
            romeo['onPress'] = output;
            output = 31;
            output = sizing[output];
            output = result.bind(tango)(output);
            romeo['icon'] = output;
            backup = sizing[backup];
            backup = kilo.bind(tango)(backup);
            backup = backup.IconSizes;
            backup = backup.LARGE;
            romeo['iconSize'] = backup;
            backup = _closure1_slot13;
            backup = backup.buttonContainer;
            romeo['style'] = backup;
            romeo = options.bind(tango)(foxtrot, romeo);
            yankee[5] = romeo;
            verify['children'] = yankee;
            verify = zulu.bind(tango)(offset, verify);
            report['children'] = verify;
            golf = options.bind(tango)(golf, report);
            report = new Array(2);
            report[0] = golf;
            golf = _closure1_slot14;
            oscar = {};
            oscar = options.bind(tango)(golf, oscar);
            report[1] = oscar;
            entity['children'] = report;
            entity = zulu.bind(tango)(mike, entity);
            return entity;
        };
        zulu['default'] = mike;
        return entity;
    }
})();