// app/modules/remixing/native/components/FadeView.tsx
export default (function(argFoo, argBar, argBaz, argCorge, _, argFred, argPlugh) {
    report = argBar;
    zulu = argFred;
    oscar = argPlugh;
    var _closure1_slot0 = report;
    entity = argBaz;
    var _closure1_slot1 = entity;
    var _closure1_slot2 = oscar;
    entity = global;
    options = entity.Object;
    golf = options.defineProperty;
    tango = {};
    entity = true;
    tango['value'] = entity;
    entity = '__esModule';
    entity = golf.bind(options)(zulu, entity, tango);
    entity = 0;
    golf = oscar[entity];
    tango = argCorge;
    entity = undefined;
    tango = tango.bind(entity)(golf);
    var _closure1_slot3 = tango;
    tango = 1;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.jsx;
    var _closure1_slot4 = tango;
    tango = {};
    golf = 'function FadeViewTsx1(){const{opacity}=this.__closure;return{opacity:opacity.get()};}';
    tango['code'] = golf;
    var _closure1_slot5 = tango;
    tango = 4;
    tango = oscar[tango];
    oscar = report.bind(entity)(tango);
    report = oscar.fileFinishedImporting;
    tango = 'modules/remixing/native/components/FadeView.tsx';
    tango = report.bind(oscar)(tango);
    mike = function(argFoo) { // Original name: _default
        entity = argFoo;
        options = entity.style;
        report = entity.children;
        verify = _closure1_slot0;
        oscar = _closure1_slot2;
        entity = 2;
        golf = oscar[entity];
        tango = undefined;
        yankee = verify.bind(tango)(golf);
        offset = yankee.useSharedValue;
        golf = 0;
        yankee = offset.bind(yankee)(golf);
        var _closure2_slot0 = yankee;
        foxtrot = _closure1_slot3;
        romeo = foxtrot.useEffect;
        offset = new Array(1);
        offset[0] = yankee;
        golf = function() {
            tango = _closure2_slot0;
            zulu = tango.set;
            offset = _closure1_slot0;
            yankee = _closure1_slot2;
            entity = 3;
            mike = yankee[entity];
            entity = undefined;
            golf = offset.bind(entity)(mike);
            oscar = golf.withTiming;
            report = {};
            mike = 200;
            report['duration'] = mike;
            mike = 2;
            options = yankee[mike];
            options = offset.bind(entity)(options);
            verify = options.Easing;
            options = verify.inOut;
            mike = yankee[mike];
            mike = offset.bind(entity)(mike);
            mike = mike.Easing;
            mike = mike.ease;
            mike = options.bind(verify)(mike);
            report['easing'] = mike;
            mike = 1;
            mike = oscar.bind(golf)(mike, report);
            mike = zulu.bind(tango)(mike);
            return entity;
        };
        golf = romeo.bind(foxtrot)(golf, offset);
        golf = oscar[entity];
        verify = verify.bind(tango)(golf);
        golf = verify.useAnimatedStyle;
        zulu = function() { // Original name: l
            entity = {};
            zulu = _closure2_slot0;
            mike = zulu.get;
            mike = mike.bind(zulu)();
            entity['opacity'] = mike;
            return entity;
        };
        offset = {};
        offset['opacity'] = yankee;
        zulu['__closure'] = offset;
        offset = 17201617154550.0;
        zulu['__workletHash'] = offset;
        offset = _closure1_slot5;
        zulu['__initData'] = offset;
        golf = golf.bind(verify)(zulu);
        zulu = _closure1_slot4;
        mike = _closure1_slot1;
        entity = oscar[entity];
        entity = mike.bind(tango)(entity);
        mike = entity.View;
        entity = {};
        oscar = new Array(2);
        oscar[0] = options;
        oscar[1] = golf;
        entity['style'] = oscar;
        entity['children'] = report;
        entity = zulu.bind(tango)(mike, entity);
        return entity;
    };
    zulu['default'] = mike;
    return entity;
})();