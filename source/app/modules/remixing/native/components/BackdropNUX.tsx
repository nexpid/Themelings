// app/modules/remixing/native/components/BackdropNUX.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    report = argBar;
    verify = argBaz;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    var _closure1_slot1 = verify;
    var _closure1_slot2 = oscard;
    entity = global;
    option = entity.Object;
    golfie = option.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(option)(zuuluu, entity, tangon);
    entity = 0;
    tangon = oscard[entity];
    entity = undefined;
    tangon = verify.bind(entity)(tangon);
    var _closure1_slot3 = tangon;
    tangon = 1;
    golfie = oscard[tangon];
    tangon = argCor;
    tangon = tangon.bind(entity)(golfie);
    var _closure1_slot4 = tangon;
    tangon = 2;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    golfie = tangon.View;
    var _closure1_slot5 = golfie;
    tangon = tangon.StyleSheet;
    var _closure1_slot6 = tangon;
    tangon = 3;
    tangon = oscard[tangon];
    tangon = verify.bind(entity)(tangon);
    var _closure1_slot7 = tangon;
    tangon = 4;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    golfie = tangon.isInCropMode;
    var _closure1_slot8 = golfie;
    tangon = tangon.useRemixingEditorStore;
    var _closure1_slot9 = tangon;
    tangon = 5;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.REMIX_BACKDROP_NUX_STORAGE_KEY;
    var _closure1_slot10 = tangon;
    tangon = 6;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    golfie = tangon.jsx;
    var _closure1_slot11 = golfie;
    tangon = tangon.jsxs;
    var _closure1_slot12 = tangon;
    tangon = 7;
    golfie = oscard[tangon];
    offset = verify.bind(entity)(golfie);
    option = offset.createAnimatedComponent;
    golfie = 8;
    golfie = oscard[golfie];
    golfie = report.bind(entity)(golfie);
    golfie = golfie.Text;
    golfie = option.bind(offset)(golfie);
    var _closure1_slot13 = golfie;
    tangon = oscard[tangon];
    option = verify.bind(entity)(tangon);
    golfie = option.createAnimatedComponent;
    tangon = 9;
    tangon = oscard[tangon];
    tangon = verify.bind(entity)(tangon);
    tangon = golfie.bind(option)(tangon);
    var _closure1_slot14 = tangon;
    tangon = 10;
    tangon = oscard[tangon];
    option = report.bind(entity)(tangon);
    golfie = option.createStyles;
    tangon = function(argFoo, argBar) {
        oscard = argFoo;
        tangon = argBar;
        entity = {};
        michal = {};
        zuuluu = 'absolute';
        michal['position'] = zuuluu;
        zuuluu = 2;
        golfie = oscard / zuuluu;
        report = 160;
        golfie = golfie + report;
        michal['top'] = golfie;
        michal['width'] = tangon;
        golfie = 'center';
        michal['textAlign'] = golfie;
        entity['text'] = michal;
        michal = {'position': 'absolute', 'top': null, 'borderRadius': 48, 'width': 24, 'height': 24, 'left': null, 'margin': 'auto'};
        report = oscard - report;
        michal['top'] = report;
        tangon = tangon / zuuluu;
        zuuluu = 12;
        zuuluu = tangon - zuuluu;
        michal['left'] = zuuluu;
        report = _closure1_slot1;
        oscard = _closure1_slot2;
        zuuluu = 11;
        golfie = oscard[zuuluu];
        tangon = undefined;
        golfie = report.bind(tangon)(golfie);
        golfie = golfie.colors;
        golfie = golfie.WHITE;
        michal['backgroundColor'] = golfie;
        zuuluu = oscard[zuuluu];
        zuuluu = report.bind(tangon)(zuuluu);
        zuuluu = zuuluu.colors;
        zuuluu = zuuluu.BLACK;
        michal['tintColor'] = zuuluu;
        entity['icon'] = michal;
        return entity;
    };
    tangon = golfie.bind(option)(tangon);
    var _closure1_slot15 = tangon;
    tangon = {};
    golfie = 'function BackdropNUXTsx1(){const{withDelay,withTiming,rnOpacity}=this.__closure;return{opacity:withDelay(1200,withTiming(rnOpacity.get(),{duration:500}))};}';
    tangon['code'] = golfie;
    var _closure1_slot16 = tangon;
    tangon = function(argFoo) { // Original name: NUX
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            entity = argFoo;
            result = entity.canvasWidth;
            config = entity.canvasHeight;
            report = undefined;
            var _closure2_slot11 = report;
            var _closure2_slot12 = report;
            var _closure2_slot13 = report;
            entity = _closure1_slot15;
            offset = entity.bind(report)(config, result);
            tangon = _closure1_slot0;
            zuuluu = _closure1_slot2;
            sizing = 12;
            entity = zuuluu[sizing];
            michal = tangon.bind(report)(entity);
            entity = michal.useValue;
            option = 0;
            vacuum = entity.bind(michal)(option);
            var _closure2_slot0 = vacuum;
            entity = zuuluu[sizing];
            michal = tangon.bind(report)(entity);
            entity = michal.useValue;
            foxtra = 1;
            kiloes = entity.bind(michal)(foxtra);
            var _closure2_slot1 = kiloes;
            status = 7;
            entity = zuuluu[status];
            michal = tangon.bind(report)(entity);
            entity = michal.useSharedValue;
            target = entity.bind(michal)(option);
            var _closure2_slot2 = target;
            entity = zuuluu[sizing];
            michal = tangon.bind(report)(entity);
            entity = michal.useValue;
            ctrled = entity.bind(michal)(option);
            var _closure2_slot3 = ctrled;
            entity = zuuluu[sizing];
            oscard = tangon.bind(report)(entity);
            michal = oscard.useValue;
            output = 2;
            entity = result / output;
            verify = 25;
            entity = entity - verify;
            sequen = michal.bind(oscard)(entity);
            var _closure2_slot4 = sequen;
            entity = zuuluu[sizing];
            oscard = tangon.bind(report)(entity);
            michal = oscard.useValue;
            entity = config / output;
            entity = entity + verify;
            echoed = michal.bind(oscard)(entity);
            var _closure2_slot5 = echoed;
            entity = zuuluu[sizing];
            oscard = tangon.bind(report)(entity);
            michal = oscard.useValue;
            entity = result / output;
            entity = entity + verify;
            source = michal.bind(oscard)(entity);
            var _closure2_slot6 = source;
            entity = zuuluu[sizing];
            oscard = tangon.bind(report)(entity);
            michal = oscard.useValue;
            entity = config / output;
            entity = entity - verify;
            update = michal.bind(oscard)(entity);
            var _closure2_slot7 = update;
            oscard = _closure1_slot4;
            michal = oscard.useRef;
            entity = null;
            michal = michal.bind(oscard)(entity);
            var _closure2_slot8 = michal;
            michal = oscard.useState;
            cntext = false;
            michal = michal.bind(oscard)(cntext);
            verify = _closure1_slot3;
            oscard = verify.bind(report)(michal, output);
            michal = oscard[option];
            oscard = oscard[foxtra];
            var _closure2_slot9 = oscard;
            backup = _closure1_slot1;
            oscard = 13;
            yankee = zuuluu[oscard];
            record = backup.bind(report)(yankee);
            yankee = function() {
                entity = function() {
                    _fun00003: for(var _fun00004_ip = 0; ; ) switch(_fun00004_ip) {
 0:
                        michal = _closure2_slot0;
                        zuuluu = null;
                        if(!(zuuluu != michal)) { _fun00004_ip = 27; continue _fun00003 }
 13:
                        tangon = _closure2_slot0;
                        michal = tangon.dispose;
                        michal = michal.bind(tangon)();
 27:
                        michal = _closure2_slot1;
                        if(!(zuuluu != michal)) { _fun00004_ip = 49; continue _fun00003 }
 35:
                        tangon = _closure2_slot1;
                        michal = tangon.dispose;
                        michal = michal.bind(tangon)();
 49:
                        michal = _closure2_slot3;
                        if(!(zuuluu != michal)) { _fun00004_ip = 71; continue _fun00003 }
 57:
                        tangon = _closure2_slot3;
                        michal = tangon.dispose;
                        michal = michal.bind(tangon)();
 71:
                        michal = _closure2_slot4;
                        if(!(zuuluu != michal)) { _fun00004_ip = 93; continue _fun00003 }
 79:
                        tangon = _closure2_slot4;
                        michal = tangon.dispose;
                        michal = michal.bind(tangon)();
 93:
                        michal = _closure2_slot5;
                        if(!(zuuluu != michal)) { _fun00004_ip = 115; continue _fun00003 }
 101:
                        tangon = _closure2_slot5;
                        michal = tangon.dispose;
                        michal = michal.bind(tangon)();
 115:
                        michal = _closure2_slot6;
                        if(!(zuuluu != michal)) { _fun00004_ip = 137; continue _fun00003 }
 123:
                        tangon = _closure2_slot6;
                        michal = tangon.dispose;
                        michal = michal.bind(tangon)();
 137:
                        michal = _closure2_slot7;
                        if(!(zuuluu != michal)) { _fun00004_ip = 159; continue _fun00003 }
 145:
                        michal = _closure2_slot7;
                        entity = michal.dispose;
                        entity = entity.bind(michal)();
 159:
                        entity = undefined;
                        return entity;
                    }
                };
                return entity;
            };
            yankee = record.bind(report)(yankee);
            limora = function() { // Original name: end
                zuuluu = _closure2_slot11;
                entity = undefined;
                zuuluu = zuuluu.bind(entity)();
                zuuluu = _closure2_slot12;
                zuuluu = zuuluu.bind(entity)();
                michal = _closure2_slot13;
                michal = michal.bind(entity)();
                return entity;
            };
            var _closure2_slot10 = limora;
            oscard = zuuluu[oscard];
            yankee = backup.bind(report)(oscard);
            oscard = function() {
                _fun00005: for(var _fun00006_ip = 0; ; ) switch(_fun00006_ip) {
 0:
                    michal = _closure1_slot7;
                    michal = michal.useReducedMotion;
                    if(!michal) { _fun00006_ip = 60; continue _fun00005 }
 18:
                    zuuluu = _closure2_slot8;
                    michal = global;
                    oscard = michal.setTimeout;
                    report = undefined;
                    tangon = function() {
                        zuuluu = _closure2_slot10;
                        entity = undefined;
                        zuuluu = zuuluu.bind(entity)();
                        zuuluu = _closure2_slot8;
                        michal = null;
                        zuuluu['current'] = michal;
                        return entity;
                    };
                    michal = 4500;
                    michal = oscard.bind(report)(tangon, michal);
                    zuuluu['current'] = michal;
 60:
                    entity = function() {
                        entity = global;
                        zuuluu = entity.clearTimeout;
                        entity = _closure2_slot8;
                        michal = entity.current;
                        entity = undefined;
                        michal = zuuluu.bind(entity)(michal);
                        return entity;
                    };
                    return entity;
                }
            };
            oscard = yankee.bind(report)(oscard);
            oscard = 14;
            yankee = zuuluu[oscard];
            sierra = backup.bind(report)(yankee);
            papara = new Array(1);
            papara[0] = vacuum;
            equals = 50;
            yankee = new Array(1);
            record = {'value': 0.65, 'timing': 0, 'duration': 50};
            yankee[0] = record;
            record = new Array(1);
            record[0] = yankee;
            yankee = {};
            whisks = function() { // Original name: callback
                zuuluu = _closure2_slot2;
                michal = zuuluu.set;
                entity = 1;
                entity = michal.bind(zuuluu)(entity);
                entity = undefined;
                return entity;
            };
            yankee['callback'] = whisks;
            yankee = sierra.bind(report)(papara, record, yankee);
            yankee = verify.bind(report)(yankee, output);
            yankee = yankee[foxtra];
            _closure2_slot11 = yankee;
            yankee = zuuluu[oscard];
            sierra = backup.bind(report)(yankee);
            papara = new Array(5);
            papara[0] = ctrled;
            papara[1] = sequen;
            papara[2] = echoed;
            papara[3] = source;
            papara[4] = update;
            quebec = 100;
            yankee = new Array(2);
            record = {'value': 36, 'timing': 300, 'duration': 100};
            yankee[0] = record;
            record = {'value': 0, 'timing': 1300, 'duration': 100};
            yankee[1] = record;
            record = new Array(5);
            record[0] = yankee;
            whisks = {'value': null, 'timing': 400, 'duration': 150};
            yankee = result / output;
            yankee = yankee - equals;
            whisks['value'] = yankee;
            yankee = new Array(2);
            yankee[0] = whisks;
            whisks = {'value': null, 'timing': 550, 'duration': 200};
            variable36 = result / output;
            variable36 = variable36 - quebec;
            whisks['value'] = variable36;
            yankee[1] = whisks;
            record[1] = yankee;
            whisks = {'value': null, 'timing': 400, 'duration': 150};
            yankee = config / output;
            yankee = yankee + equals;
            whisks['value'] = yankee;
            yankee = new Array(2);
            yankee[0] = whisks;
            whisks = {'value': null, 'timing': 550, 'duration': 200};
            variable36 = config / output;
            variable36 = variable36 + quebec;
            whisks['value'] = variable36;
            yankee[1] = whisks;
            record[2] = yankee;
            whisks = {'value': null, 'timing': 400, 'duration': 150};
            yankee = result / output;
            yankee = yankee + equals;
            whisks['value'] = yankee;
            yankee = new Array(2);
            yankee[0] = whisks;
            whisks = {'value': null, 'timing': 550, 'duration': 200};
            variable36 = result / output;
            variable36 = variable36 + quebec;
            whisks['value'] = variable36;
            yankee[1] = whisks;
            record[3] = yankee;
            whisks = {'value': null, 'timing': 400, 'duration': 150};
            yankee = config / output;
            yankee = yankee - equals;
            whisks['value'] = yankee;
            yankee = new Array(2);
            yankee[0] = whisks;
            whisks = {'value': null, 'timing': 550, 'duration': 200};
            equals = config / output;
            equals = equals - quebec;
            whisks['value'] = equals;
            yankee[1] = whisks;
            record[4] = yankee;
            yankee = {'reducedMotionFreezePercent': 0.33, 'loop': true, 'delay': 300, 'loops': 3};
            yankee['callback'] = limora;
            yankee = sierra.bind(report)(papara, record, yankee);
            yankee = verify.bind(report)(yankee, output);
            yankee = yankee[foxtra];
            _closure2_slot12 = yankee;
            yankee = zuuluu[status];
            record = tangon.bind(report)(yankee);
            output = record.useAnimatedStyle;
            yankee = function() { // Original name: M
                entity = {};
                oscard = _closure1_slot0;
                golfie = _closure1_slot2;
                michal = 7;
                michal = golfie[michal];
                zuuluu = undefined;
                report = oscard.bind(zuuluu)(michal);
                tangon = report.withDelay;
                michal = 15;
                michal = golfie[michal];
                golfie = oscard.bind(zuuluu)(michal);
                oscard = golfie.withTiming;
                zuuluu = _closure2_slot2;
                michal = zuuluu.get;
                zuuluu = michal.bind(zuuluu)();
                michal = {};
                option = 500;
                michal['duration'] = option;
                zuuluu = oscard.bind(golfie)(zuuluu, michal);
                michal = 1200;
                michal = tangon.bind(report)(michal, zuuluu);
                entity['opacity'] = michal;
                return entity;
            };
            papara = {};
            status = zuuluu[status];
            status = tangon.bind(report)(status);
            status = status.withDelay;
            papara['withDelay'] = status;
            status = 15;
            status = zuuluu[status];
            status = tangon.bind(report)(status);
            status = status.withTiming;
            papara['withTiming'] = status;
            papara['rnOpacity'] = target;
            yankee['__closure'] = papara;
            papara = 14990165692296.0;
            yankee['__workletHash'] = papara;
            papara = _closure1_slot16;
            yankee['__initData'] = papara;
            yankee = output.bind(record)(yankee);
            oscard = zuuluu[oscard];
            record = backup.bind(report)(oscard);
            output = new Array(1);
            output[0] = kiloes;
            oscard = new Array(1);
            backup = {'value': 0, 'timing': 0, 'duration': 150};
            oscard[0] = backup;
            backup = new Array(1);
            backup[0] = oscard;
            oscard = {};
            oscard['autoplay'] = cntext;
            cntext = function() { // Original name: callback
                zuuluu = _closure2_slot9;
                entity = undefined;
                michal = true;
                michal = zuuluu.bind(entity)(michal);
                return entity;
            };
            oscard['callback'] = cntext;
            oscard = record.bind(report)(output, backup, oscard);
            oscard = verify.bind(report)(oscard, foxtra);
            oscard = oscard[option];
            _closure2_slot13 = oscard;
            zuuluu = zuuluu[sizing];
            oscard = tangon.bind(report)(zuuluu);
            tangon = oscard.useTouchHandler;
            zuuluu = {};
            golfie = function() { // Original name: onStart
                michal = _closure2_slot10;
                entity = undefined;
                michal = michal.bind(entity)();
                return entity;
            };
            zuuluu['onStart'] = golfie;
            option = tangon.bind(oscard)(zuuluu);
            if(michal) { _fun00002_ip = 1594; continue _fun00001 }
 1138:
            tangon = _closure1_slot12;
            zuuluu = _closure1_slot5;
            michal = {};
            oscard = _closure1_slot6;
            oscard = oscard.absoluteFill;
            michal['style'] = oscard;
            verify = _closure1_slot11;
            output = _closure1_slot0;
            backup = _closure1_slot2;
            oscard = backup[sizing];
            oscard = output.bind(report)(oscard);
            golfie = oscard.Canvas;
            oscard = {};
            foxtra = {};
            foxtra['height'] = config;
            foxtra['width'] = result;
            oscard['style'] = foxtra;
            oscard['onTouch'] = option;
            option = backup[sizing];
            option = output.bind(report)(option);
            foxtra = option.Group;
            option = {};
            option['opacity'] = kiloes;
            kiloes = backup[sizing];
            kiloes = output.bind(report)(kiloes);
            result = kiloes.Group;
            kiloes = {};
            kiloes['opacity'] = vacuum;
            vacuum = backup[sizing];
            vacuum = output.bind(report)(vacuum);
            config = vacuum.Fill;
            vacuum = {};
            record = 'black';
            vacuum['color'] = record;
            vacuum = verify.bind(report)(config, vacuum);
            kiloes['children'] = vacuum;
            result = verify.bind(report)(result, kiloes);
            kiloes = new Array(3);
            kiloes[0] = result;
            result = backup[sizing];
            result = output.bind(report)(result);
            vacuum = result.Circle;
            result = {};
            result['r'] = ctrled;
            result['cx'] = sequen;
            result['cy'] = echoed;
            echoed = 'rgba(255, 255, 255, 0.6)';
            result['color'] = echoed;
            result = verify.bind(report)(vacuum, result);
            kiloes[1] = result;
            sizing = backup[sizing];
            sizing = output.bind(report)(sizing);
            result = sizing.Circle;
            sizing = {};
            sizing['r'] = ctrled;
            sizing['cx'] = source;
            sizing['cy'] = update;
            sizing['color'] = echoed;
            sizing = verify.bind(report)(result, sizing);
            kiloes[2] = sizing;
            option['children'] = kiloes;
            option = tangon.bind(report)(foxtra, option);
            oscard['children'] = option;
            golfie = verify.bind(report)(golfie, oscard);
            oscard = new Array(3);
            oscard[0] = golfie;
            option = _closure1_slot13;
            golfie = {'variant': 'text-md/bold', 'color': 'always-white'};
            kiloes = offset.text;
            foxtra = new Array(2);
            foxtra[0] = kiloes;
            foxtra[1] = yankee;
            golfie['style'] = foxtra;
            foxtra = 16;
            kiloes = backup[foxtra];
            kiloes = output.bind(report)(kiloes);
            sizing = kiloes.intl;
            kiloes = sizing.string;
            foxtra = backup[foxtra];
            foxtra = output.bind(report)(foxtra);
            foxtra = foxtra.t;
            foxtra = foxtra.bQB2V1;
            foxtra = kiloes.bind(sizing)(foxtra);
            golfie['children'] = foxtra;
            golfie = verify.bind(report)(option, golfie);
            oscard[1] = golfie;
            option = _closure1_slot14;
            golfie = {};
            foxtra = _closure1_slot1;
            romeon = 17;
            romeon = backup[romeon];
            romeon = foxtra.bind(report)(romeon);
            golfie['source'] = romeon;
            romeon = offset.icon;
            offset = new Array(2);
            offset[0] = romeon;
            offset[1] = yankee;
            golfie['style'] = offset;
            golfie = verify.bind(report)(option, golfie);
            oscard[2] = golfie;
            michal['children'] = oscard;
            entity = tangon.bind(report)(zuuluu, michal);
 1594:
            return entity;
        }
    };
    var _closure1_slot17 = tangon;
    tangon = 19;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/remixing/native/components/BackdropNUX.tsx';
    tangon = report.bind(oscard)(tangon);
    michal = function(argFoo) { // Original name: _default
        _fun00007: for(var _fun00008_ip = 0; ; ) switch(_fun00008_ip) {
 0:
            michal = argFoo;
            golfie = michal.canvasWidth;
            oscard = michal.canvasHeight;
            offset = _closure1_slot4;
            zuuluu = offset.useState;
            tangon = false;
            verify = zuuluu.bind(offset)(tangon);
            option = _closure1_slot3;
            report = undefined;
            zuuluu = 2;
            verify = option.bind(report)(verify, zuuluu);
            zuuluu = 0;
            zuuluu = verify[zuuluu];
            option = 1;
            option = verify[option];
            var _closure2_slot0 = option;
            verify = _closure1_slot9;
            option = function(argFoo) {
                entity = argFoo;
                entity = entity.currentMode;
                return entity;
            };
            verify = verify.bind(report)(option);
            option = _closure1_slot8;
            yankee = option.bind(report)(verify);
            verify = offset.useEffect;
            option = new Array(1);
            option[0] = yankee;
            entity = function() {
                _fun00009: for(var _fun00010_ip = 0; ; ) switch(_fun00010_ip) {
 0:
                    tangon = _closure1_slot0;
                    entity = _closure1_slot2;
                    report = 18;
                    zuuluu = entity[report];
                    entity = undefined;
                    zuuluu = tangon.bind(entity)(zuuluu);
                    golfie = zuuluu.Storage;
                    oscard = golfie.get;
                    zuuluu = _closure1_slot10;
                    tangon = false;
                    zuuluu = oscard.bind(golfie)(zuuluu, tangon);
                    if(!(tangon === zuuluu)) { _fun00010_ip = 104; continue _fun00009 }
 52:
                    tangon = _closure1_slot0;
                    zuuluu = _closure1_slot2;
                    zuuluu = zuuluu[report];
                    zuuluu = tangon.bind(entity)(zuuluu);
                    report = zuuluu.Storage;
                    tangon = report.set;
                    michal = _closure1_slot10;
                    zuuluu = true;
                    michal = tangon.bind(report)(michal, zuuluu);
                    michal = _closure2_slot0;
                    michal = michal.bind(entity)(zuuluu);
 104:
                    return entity;
                }
            };
            entity = verify.bind(offset)(entity, option);
            entity = null;
            if(!(tangon !== zuuluu)) { _fun00008_ip = 151; continue _fun00007 }
 125:
            tangon = _closure1_slot11;
            zuuluu = _closure1_slot17;
            michal = {};
            michal['canvasWidth'] = golfie;
            michal['canvasHeight'] = oscard;
            entity = tangon.bind(report)(zuuluu, michal);
 151:
            return entity;
        }
    };
    zuuluu['default'] = michal;
    return entity;
})();