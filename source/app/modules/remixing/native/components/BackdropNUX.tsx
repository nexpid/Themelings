// app/modules/remixing/native/components/BackdropNUX.tsx
export default (function(argFoo, argBar, argBaz, argCorge, _, argFred, argPlugh) {
    report = argBar;
    verify = argBaz;
    zulu = argFred;
    oscar = argPlugh;
    var _closure1_slot0 = report;
    var _closure1_slot1 = verify;
    var _closure1_slot2 = oscar;
    entity = global;
    options = entity.Object;
    golf = options.defineProperty;
    tango = {};
    entity = true;
    tango['value'] = entity;
    entity = '__esModule';
    entity = golf.bind(options)(zulu, entity, tango);
    entity = 0;
    tango = oscar[entity];
    entity = undefined;
    tango = verify.bind(entity)(tango);
    var _closure1_slot3 = tango;
    tango = 1;
    golf = oscar[tango];
    tango = argCorge;
    tango = tango.bind(entity)(golf);
    var _closure1_slot4 = tango;
    tango = 2;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    golf = tango.View;
    var _closure1_slot5 = golf;
    tango = tango.StyleSheet;
    var _closure1_slot6 = tango;
    tango = 3;
    tango = oscar[tango];
    tango = verify.bind(entity)(tango);
    var _closure1_slot7 = tango;
    tango = 4;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    golf = tango.isInCropMode;
    var _closure1_slot8 = golf;
    tango = tango.useRemixingEditorStore;
    var _closure1_slot9 = tango;
    tango = 5;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.REMIX_BACKDROP_NUX_STORAGE_KEY;
    var _closure1_slot10 = tango;
    tango = 6;
    golf = oscar[tango];
    golf = report.bind(entity)(golf);
    golf = golf.jsx;
    var _closure1_slot11 = golf;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.jsxs;
    var _closure1_slot12 = tango;
    tango = 7;
    golf = oscar[tango];
    offset = verify.bind(entity)(golf);
    options = offset.createAnimatedComponent;
    golf = 8;
    golf = oscar[golf];
    golf = report.bind(entity)(golf);
    golf = golf.Text;
    golf = options.bind(offset)(golf);
    var _closure1_slot13 = golf;
    tango = oscar[tango];
    options = verify.bind(entity)(tango);
    golf = options.createAnimatedComponent;
    tango = 9;
    tango = oscar[tango];
    tango = verify.bind(entity)(tango);
    tango = golf.bind(options)(tango);
    var _closure1_slot14 = tango;
    tango = 10;
    tango = oscar[tango];
    options = report.bind(entity)(tango);
    golf = options.createStyles;
    tango = function(argFoo, argBar) {
        oscar = argFoo;
        tango = argBar;
        entity = {};
        mike = {};
        zulu = 'absolute';
        mike['position'] = zulu;
        zulu = 2;
        golf = oscar / zulu;
        report = 160;
        golf = golf + report;
        mike['top'] = golf;
        mike['width'] = tango;
        golf = 'center';
        mike['textAlign'] = golf;
        entity['text'] = mike;
        mike = {'position': 'absolute', 'top': null, 'borderRadius': 48, 'width': 24, 'height': 24, 'left': null, 'margin': 'auto'};
        report = oscar - report;
        mike['top'] = report;
        tango = tango / zulu;
        zulu = 12;
        zulu = tango - zulu;
        mike['left'] = zulu;
        report = _closure1_slot1;
        oscar = _closure1_slot2;
        zulu = 11;
        golf = oscar[zulu];
        tango = undefined;
        golf = report.bind(tango)(golf);
        golf = golf.colors;
        golf = golf.WHITE;
        mike['backgroundColor'] = golf;
        zulu = oscar[zulu];
        zulu = report.bind(tango)(zulu);
        zulu = zulu.colors;
        zulu = zulu.BLACK;
        mike['tintColor'] = zulu;
        entity['icon'] = mike;
        return entity;
    };
    tango = golf.bind(options)(tango);
    var _closure1_slot15 = tango;
    tango = {};
    golf = 'function BackdropNUXTsx1(){const{withDelay,withTiming,rnOpacity}=this.__closure;return{opacity:withDelay(1200,withTiming(rnOpacity.get(),{duration:500}))};}';
    tango['code'] = golf;
    var _closure1_slot16 = tango;
    tango = function(argFoo) { // Original name: NUX
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            entity = argFoo;
            result = entity.canvasWidth;
            config = entity.canvasHeight;
            report = undefined;
            var _closure2_slot11 = report;
            var _closure2_slot12 = report;
            var _closure2_slot13 = report;
            entity = _closure1_slot15;
            offset = entity.bind(report)(config, result);
            tango = _closure1_slot0;
            zulu = _closure1_slot2;
            sizing = 12;
            entity = zulu[sizing];
            mike = tango.bind(report)(entity);
            entity = mike.useValue;
            options = 0;
            vacuum = entity.bind(mike)(options);
            var _closure2_slot0 = vacuum;
            entity = zulu[sizing];
            mike = tango.bind(report)(entity);
            entity = mike.useValue;
            foxtrot = 1;
            kilo = entity.bind(mike)(foxtrot);
            var _closure2_slot1 = kilo;
            status = 7;
            entity = zulu[status];
            mike = tango.bind(report)(entity);
            entity = mike.useSharedValue;
            target = entity.bind(mike)(options);
            var _closure2_slot2 = target;
            entity = zulu[sizing];
            mike = tango.bind(report)(entity);
            entity = mike.useValue;
            control = entity.bind(mike)(options);
            var _closure2_slot3 = control;
            entity = zulu[sizing];
            oscar = tango.bind(report)(entity);
            mike = oscar.useValue;
            output = 2;
            entity = result / output;
            verify = 25;
            entity = entity - verify;
            sequence = mike.bind(oscar)(entity);
            var _closure2_slot4 = sequence;
            entity = zulu[sizing];
            oscar = tango.bind(report)(entity);
            mike = oscar.useValue;
            entity = config / output;
            entity = entity + verify;
            echo = mike.bind(oscar)(entity);
            var _closure2_slot5 = echo;
            entity = zulu[sizing];
            oscar = tango.bind(report)(entity);
            mike = oscar.useValue;
            entity = result / output;
            entity = entity + verify;
            source = mike.bind(oscar)(entity);
            var _closure2_slot6 = source;
            entity = zulu[sizing];
            oscar = tango.bind(report)(entity);
            mike = oscar.useValue;
            entity = config / output;
            entity = entity - verify;
            update = mike.bind(oscar)(entity);
            var _closure2_slot7 = update;
            oscar = _closure1_slot4;
            mike = oscar.useRef;
            entity = null;
            mike = mike.bind(oscar)(entity);
            var _closure2_slot8 = mike;
            mike = oscar.useState;
            context = false;
            mike = mike.bind(oscar)(context);
            verify = _closure1_slot3;
            oscar = verify.bind(report)(mike, output);
            mike = oscar[options];
            oscar = oscar[foxtrot];
            var _closure2_slot9 = oscar;
            backup = _closure1_slot1;
            oscar = 13;
            yankee = zulu[oscar];
            record = backup.bind(report)(yankee);
            yankee = function() {
                entity = function() {
                    _fun00003: for(var _fun00004_ip = 0; ; ) switch(_fun00004_ip) {
 0:
                        mike = _closure2_slot0;
                        zulu = null;
                        if(!(zulu != mike)) { _fun00004_ip = 27; continue _fun00003 }
 13:
                        tango = _closure2_slot0;
                        mike = tango.dispose;
                        mike = mike.bind(tango)();
 27:
                        mike = _closure2_slot1;
                        if(!(zulu != mike)) { _fun00004_ip = 49; continue _fun00003 }
 35:
                        tango = _closure2_slot1;
                        mike = tango.dispose;
                        mike = mike.bind(tango)();
 49:
                        mike = _closure2_slot3;
                        if(!(zulu != mike)) { _fun00004_ip = 71; continue _fun00003 }
 57:
                        tango = _closure2_slot3;
                        mike = tango.dispose;
                        mike = mike.bind(tango)();
 71:
                        mike = _closure2_slot4;
                        if(!(zulu != mike)) { _fun00004_ip = 93; continue _fun00003 }
 79:
                        tango = _closure2_slot4;
                        mike = tango.dispose;
                        mike = mike.bind(tango)();
 93:
                        mike = _closure2_slot5;
                        if(!(zulu != mike)) { _fun00004_ip = 115; continue _fun00003 }
 101:
                        tango = _closure2_slot5;
                        mike = tango.dispose;
                        mike = mike.bind(tango)();
 115:
                        mike = _closure2_slot6;
                        if(!(zulu != mike)) { _fun00004_ip = 137; continue _fun00003 }
 123:
                        tango = _closure2_slot6;
                        mike = tango.dispose;
                        mike = mike.bind(tango)();
 137:
                        mike = _closure2_slot7;
                        if(!(zulu != mike)) { _fun00004_ip = 159; continue _fun00003 }
 145:
                        mike = _closure2_slot7;
                        entity = mike.dispose;
                        entity = entity.bind(mike)();
 159:
                        entity = undefined;
                        return entity;
                    }
                };
                return entity;
            };
            yankee = record.bind(report)(yankee);
            lima = function() { // Original name: end
                zulu = _closure2_slot11;
                entity = undefined;
                zulu = zulu.bind(entity)();
                zulu = _closure2_slot12;
                zulu = zulu.bind(entity)();
                mike = _closure2_slot13;
                mike = mike.bind(entity)();
                return entity;
            };
            var _closure2_slot10 = lima;
            oscar = zulu[oscar];
            yankee = backup.bind(report)(oscar);
            oscar = function() {
                _fun00005: for(var _fun00006_ip = 0; ; ) switch(_fun00006_ip) {
 0:
                    mike = _closure1_slot7;
                    mike = mike.useReducedMotion;
                    if(!mike) { _fun00006_ip = 60; continue _fun00005 }
 18:
                    zulu = _closure2_slot8;
                    mike = global;
                    oscar = mike.setTimeout;
                    report = undefined;
                    tango = function() {
                        zulu = _closure2_slot10;
                        entity = undefined;
                        zulu = zulu.bind(entity)();
                        zulu = _closure2_slot8;
                        mike = null;
                        zulu['current'] = mike;
                        return entity;
                    };
                    mike = 4500;
                    mike = oscar.bind(report)(tango, mike);
                    zulu['current'] = mike;
 60:
                    entity = function() {
                        entity = global;
                        zulu = entity.clearTimeout;
                        entity = _closure2_slot8;
                        mike = entity.current;
                        entity = undefined;
                        mike = zulu.bind(entity)(mike);
                        return entity;
                    };
                    return entity;
                }
            };
            oscar = yankee.bind(report)(oscar);
            oscar = 14;
            yankee = zulu[oscar];
            sierra = backup.bind(report)(yankee);
            papa = new Array(1);
            papa[0] = vacuum;
            equality = 50;
            yankee = new Array(1);
            record = {'value': 0.65, 'timing': 0, 'duration': 50};
            yankee[0] = record;
            record = new Array(1);
            record[0] = yankee;
            yankee = {};
            whiskey = function() { // Original name: callback
                zulu = _closure2_slot2;
                mike = zulu.set;
                entity = 1;
                entity = mike.bind(zulu)(entity);
                entity = undefined;
                return entity;
            };
            yankee['callback'] = whiskey;
            yankee = sierra.bind(report)(papa, record, yankee);
            yankee = verify.bind(report)(yankee, output);
            yankee = yankee[foxtrot];
            _closure2_slot11 = yankee;
            yankee = zulu[oscar];
            sierra = backup.bind(report)(yankee);
            papa = new Array(5);
            papa[0] = control;
            papa[1] = sequence;
            papa[2] = echo;
            papa[3] = source;
            papa[4] = update;
            quebec = 100;
            yankee = new Array(2);
            record = {'value': 36, 'timing': 300, 'duration': 100};
            yankee[0] = record;
            record = {'value': 0, 'timing': 1300, 'duration': 100};
            yankee[1] = record;
            record = new Array(5);
            record[0] = yankee;
            whiskey = {'value': null, 'timing': 400, 'duration': 150};
            yankee = result / output;
            yankee = yankee - equality;
            whiskey['value'] = yankee;
            yankee = new Array(2);
            yankee[0] = whiskey;
            whiskey = {'value': null, 'timing': 550, 'duration': 200};
            variable36 = result / output;
            variable36 = variable36 - quebec;
            whiskey['value'] = variable36;
            yankee[1] = whiskey;
            record[1] = yankee;
            whiskey = {'value': null, 'timing': 400, 'duration': 150};
            yankee = config / output;
            yankee = yankee + equality;
            whiskey['value'] = yankee;
            yankee = new Array(2);
            yankee[0] = whiskey;
            whiskey = {'value': null, 'timing': 550, 'duration': 200};
            variable36 = config / output;
            variable36 = variable36 + quebec;
            whiskey['value'] = variable36;
            yankee[1] = whiskey;
            record[2] = yankee;
            whiskey = {'value': null, 'timing': 400, 'duration': 150};
            yankee = result / output;
            yankee = yankee + equality;
            whiskey['value'] = yankee;
            yankee = new Array(2);
            yankee[0] = whiskey;
            whiskey = {'value': null, 'timing': 550, 'duration': 200};
            variable36 = result / output;
            variable36 = variable36 + quebec;
            whiskey['value'] = variable36;
            yankee[1] = whiskey;
            record[3] = yankee;
            whiskey = {'value': null, 'timing': 400, 'duration': 150};
            yankee = config / output;
            yankee = yankee - equality;
            whiskey['value'] = yankee;
            yankee = new Array(2);
            yankee[0] = whiskey;
            whiskey = {'value': null, 'timing': 550, 'duration': 200};
            equality = config / output;
            equality = equality - quebec;
            whiskey['value'] = equality;
            yankee[1] = whiskey;
            record[4] = yankee;
            yankee = {'reducedMotionFreezePercent': 0.33, 'loop': true, 'delay': 300, 'loops': 3};
            yankee['callback'] = lima;
            yankee = sierra.bind(report)(papa, record, yankee);
            yankee = verify.bind(report)(yankee, output);
            yankee = yankee[foxtrot];
            _closure2_slot12 = yankee;
            yankee = zulu[status];
            record = tango.bind(report)(yankee);
            output = record.useAnimatedStyle;
            yankee = function() { // Original name: M
                entity = {};
                oscar = _closure1_slot0;
                golf = _closure1_slot2;
                mike = 7;
                mike = golf[mike];
                zulu = undefined;
                report = oscar.bind(zulu)(mike);
                tango = report.withDelay;
                mike = 15;
                mike = golf[mike];
                golf = oscar.bind(zulu)(mike);
                oscar = golf.withTiming;
                zulu = _closure2_slot2;
                mike = zulu.get;
                zulu = mike.bind(zulu)();
                mike = {};
                options = 500;
                mike['duration'] = options;
                zulu = oscar.bind(golf)(zulu, mike);
                mike = 1200;
                mike = tango.bind(report)(mike, zulu);
                entity['opacity'] = mike;
                return entity;
            };
            papa = {};
            status = zulu[status];
            status = tango.bind(report)(status);
            status = status.withDelay;
            papa['withDelay'] = status;
            status = 15;
            status = zulu[status];
            status = tango.bind(report)(status);
            status = status.withTiming;
            papa['withTiming'] = status;
            papa['rnOpacity'] = target;
            yankee['__closure'] = papa;
            papa = 14990165692296.0;
            yankee['__workletHash'] = papa;
            papa = _closure1_slot16;
            yankee['__initData'] = papa;
            yankee = output.bind(record)(yankee);
            oscar = zulu[oscar];
            record = backup.bind(report)(oscar);
            output = new Array(1);
            output[0] = kilo;
            oscar = new Array(1);
            backup = {'value': 0, 'timing': 0, 'duration': 150};
            oscar[0] = backup;
            backup = new Array(1);
            backup[0] = oscar;
            oscar = {};
            oscar['autoplay'] = context;
            context = function() { // Original name: callback
                zulu = _closure2_slot9;
                entity = undefined;
                mike = true;
                mike = zulu.bind(entity)(mike);
                return entity;
            };
            oscar['callback'] = context;
            oscar = record.bind(report)(output, backup, oscar);
            oscar = verify.bind(report)(oscar, foxtrot);
            oscar = oscar[options];
            _closure2_slot13 = oscar;
            zulu = zulu[sizing];
            oscar = tango.bind(report)(zulu);
            tango = oscar.useTouchHandler;
            zulu = {};
            golf = function() { // Original name: onStart
                mike = _closure2_slot10;
                entity = undefined;
                mike = mike.bind(entity)();
                return entity;
            };
            zulu['onStart'] = golf;
            options = tango.bind(oscar)(zulu);
            if(mike) { _fun00002_ip = 1596; continue _fun00001 }
 1142:
            tango = _closure1_slot12;
            zulu = _closure1_slot5;
            mike = {};
            oscar = _closure1_slot6;
            oscar = oscar.absoluteFill;
            mike['style'] = oscar;
            verify = _closure1_slot11;
            output = _closure1_slot0;
            backup = _closure1_slot2;
            oscar = backup[sizing];
            oscar = output.bind(report)(oscar);
            golf = oscar.Canvas;
            oscar = {};
            foxtrot = {};
            foxtrot['height'] = config;
            foxtrot['width'] = result;
            oscar['style'] = foxtrot;
            oscar['onTouch'] = options;
            options = backup[sizing];
            options = output.bind(report)(options);
            foxtrot = options.Group;
            options = {};
            options['opacity'] = kilo;
            kilo = backup[sizing];
            kilo = output.bind(report)(kilo);
            result = kilo.Group;
            kilo = {};
            kilo['opacity'] = vacuum;
            vacuum = backup[sizing];
            vacuum = output.bind(report)(vacuum);
            config = vacuum.Fill;
            vacuum = {};
            record = 'black';
            vacuum['color'] = record;
            vacuum = verify.bind(report)(config, vacuum);
            kilo['children'] = vacuum;
            result = verify.bind(report)(result, kilo);
            kilo = new Array(3);
            kilo[0] = result;
            result = backup[sizing];
            result = output.bind(report)(result);
            vacuum = result.Circle;
            result = {};
            result['r'] = control;
            result['cx'] = sequence;
            result['cy'] = echo;
            echo = 'rgba(255, 255, 255, 0.6)';
            result['color'] = echo;
            result = verify.bind(report)(vacuum, result);
            kilo[1] = result;
            sizing = backup[sizing];
            sizing = output.bind(report)(sizing);
            result = sizing.Circle;
            sizing = {};
            sizing['r'] = control;
            sizing['cx'] = source;
            sizing['cy'] = update;
            sizing['color'] = echo;
            sizing = verify.bind(report)(result, sizing);
            kilo[2] = sizing;
            options['children'] = kilo;
            options = tango.bind(report)(foxtrot, options);
            oscar['children'] = options;
            golf = verify.bind(report)(golf, oscar);
            oscar = new Array(3);
            oscar[0] = golf;
            options = _closure1_slot13;
            golf = {'variant': 'text-md/bold', 'color': 'always-white'};
            kilo = offset.text;
            foxtrot = new Array(2);
            foxtrot[0] = kilo;
            foxtrot[1] = yankee;
            golf['style'] = foxtrot;
            foxtrot = 16;
            kilo = backup[foxtrot];
            kilo = output.bind(report)(kilo);
            sizing = kilo.intl;
            kilo = sizing.string;
            foxtrot = backup[foxtrot];
            foxtrot = output.bind(report)(foxtrot);
            foxtrot = foxtrot.t;
            foxtrot = foxtrot.bQB2V1;
            foxtrot = kilo.bind(sizing)(foxtrot);
            golf['children'] = foxtrot;
            golf = verify.bind(report)(options, golf);
            oscar[1] = golf;
            options = _closure1_slot14;
            golf = {};
            foxtrot = _closure1_slot1;
            romeo = 17;
            romeo = backup[romeo];
            romeo = foxtrot.bind(report)(romeo);
            golf['source'] = romeo;
            romeo = offset.icon;
            offset = new Array(2);
            offset[0] = romeo;
            offset[1] = yankee;
            golf['style'] = offset;
            golf = verify.bind(report)(options, golf);
            oscar[2] = golf;
            mike['children'] = oscar;
            entity = tango.bind(report)(zulu, mike);
 1596:
            return entity;
        }
    };
    var _closure1_slot17 = tango;
    tango = 19;
    tango = oscar[tango];
    oscar = report.bind(entity)(tango);
    report = oscar.fileFinishedImporting;
    tango = 'modules/remixing/native/components/BackdropNUX.tsx';
    tango = report.bind(oscar)(tango);
    mike = function(argFoo) { // Original name: _default
        _fun00007: for(var _fun00008_ip = 0; ; ) switch(_fun00008_ip) {
 0:
            mike = argFoo;
            golf = mike.canvasWidth;
            oscar = mike.canvasHeight;
            offset = _closure1_slot4;
            zulu = offset.useState;
            tango = false;
            verify = zulu.bind(offset)(tango);
            options = _closure1_slot3;
            report = undefined;
            zulu = 2;
            verify = options.bind(report)(verify, zulu);
            zulu = 0;
            zulu = verify[zulu];
            options = 1;
            options = verify[options];
            var _closure2_slot0 = options;
            verify = _closure1_slot9;
            options = function(argFoo) {
                entity = argFoo;
                entity = entity.currentMode;
                return entity;
            };
            verify = verify.bind(report)(options);
            options = _closure1_slot8;
            yankee = options.bind(report)(verify);
            verify = offset.useEffect;
            options = new Array(1);
            options[0] = yankee;
            entity = function() {
                _fun00009: for(var _fun00010_ip = 0; ; ) switch(_fun00010_ip) {
 0:
                    tango = _closure1_slot0;
                    entity = _closure1_slot2;
                    report = 18;
                    zulu = entity[report];
                    entity = undefined;
                    zulu = tango.bind(entity)(zulu);
                    golf = zulu.Storage;
                    oscar = golf.get;
                    zulu = _closure1_slot10;
                    tango = false;
                    zulu = oscar.bind(golf)(zulu, tango);
                    if(!(tango === zulu)) { _fun00010_ip = 104; continue _fun00009 }
 52:
                    tango = _closure1_slot0;
                    zulu = _closure1_slot2;
                    zulu = zulu[report];
                    zulu = tango.bind(entity)(zulu);
                    report = zulu.Storage;
                    tango = report.set;
                    mike = _closure1_slot10;
                    zulu = true;
                    mike = tango.bind(report)(mike, zulu);
                    mike = _closure2_slot0;
                    mike = mike.bind(entity)(zulu);
 104:
                    return entity;
                }
            };
            entity = verify.bind(offset)(entity, options);
            entity = null;
            if(!(tango !== zulu)) { _fun00008_ip = 151; continue _fun00007 }
 125:
            tango = _closure1_slot11;
            zulu = _closure1_slot17;
            mike = {};
            mike['canvasWidth'] = golf;
            mike['canvasHeight'] = oscar;
            entity = tango.bind(report)(zulu, mike);
 151:
            return entity;
        }
    };
    zulu['default'] = mike;
    return entity;
})();