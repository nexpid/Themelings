// app/modules/remixing/native/components/RemixingRectangle.tsx
export default (function(argFoo, argBar, argBaz, argCorge, _, argFred, argPlugh) {
    report = argBar;
    zulu = argFred;
    oscar = argPlugh;
    var _closure1_slot0 = report;
    entity = argBaz;
    var _closure1_slot1 = entity;
    var _closure1_slot2 = oscar;
    entity = global;
    options = entity.Object;
    golf = options.defineProperty;
    tango = {};
    entity = true;
    tango['value'] = entity;
    entity = '__esModule';
    entity = golf.bind(options)(zulu, entity, tango);
    entity = 0;
    golf = oscar[entity];
    tango = argCorge;
    entity = undefined;
    tango = tango.bind(entity)(golf);
    tango = 1;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.jsx;
    var _closure1_slot3 = tango;
    tango = 5;
    tango = oscar[tango];
    oscar = report.bind(entity)(tango);
    report = oscar.fileFinishedImporting;
    tango = 'modules/remixing/native/components/RemixingRectangle.tsx';
    tango = report.bind(oscar)(tango);
    mike = function(argFoo) { // Original name: _default
        entity = argFoo;
        report = entity.id;
        offset = entity.color;
        options = entity.size;
        verify = entity.position;
        oscar = entity.transform;
        zulu = entity.transformMap;
        golf = _closure1_slot1;
        yankee = _closure1_slot2;
        mike = 2;
        mike = yankee[mike];
        tango = undefined;
        mike = golf.bind(tango)(mike);
        romeo = mike.bind(tango)(report, zulu, oscar);
        zulu = _closure1_slot3;
        golf = _closure1_slot0;
        oscar = 3;
        entity = yankee[oscar];
        entity = golf.bind(tango)(entity);
        mike = entity.Group;
        entity = {};
        entity['transform'] = romeo;
        romeo = 4;
        romeo = yankee[romeo];
        backup = golf.bind(tango)(romeo);
        foxtrot = backup.centerOfRect;
        romeo = yankee[oscar];
        echo = golf.bind(tango)(romeo);
        result = echo.rect;
        vacuum = verify.x;
        control = verify.y;
        source = options.width;
        update = options.height;
        sequence = echo;
        romeo = sequence[result](vacuum, control, source, update, echo);
        romeo = foxtrot.bind(backup)(romeo);
        entity['origin'] = romeo;
        oscar = yankee[oscar];
        oscar = golf.bind(tango)(oscar);
        golf = oscar.Rect;
        oscar = {};
        oscar['color'] = offset;
        offset = verify.x;
        oscar['x'] = offset;
        verify = verify.y;
        oscar['y'] = verify;
        verify = options.width;
        oscar['width'] = verify;
        options = options.height;
        oscar['height'] = options;
        oscar = zulu.bind(tango)(golf, oscar);
        entity['children'] = oscar;
        entity = zulu.bind(tango)(mike, entity, report);
        return entity;
    };
    zulu['default'] = mike;
    return entity;
})();