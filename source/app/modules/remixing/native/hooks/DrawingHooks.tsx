// app/modules/remixing/native/hooks/DrawingHooks.tsx
export default (function(global, require, metroImportDefault, metroImportAll, moduleObject, exports, dependencyMap) {
    var5 = require;
    var7 = metroImportDefault;
    var3 = exports;
    var6 = dependencyMap;
    var _closure1_slot0 = var5;
    var _closure1_slot1 = var6;
    var1 = global;
    var9 = var1.Object;
    var8 = var9.defineProperty;
    var4 = {};
    var1 = true;
    var4['value'] = var1;
    var1 = '__esModule';
    var1 = var8.bind(var9)(var3, var1, var4);
    var1 = 0;
    var4 = var6[var1];
    var1 = undefined;
    var4 = var7.bind(var1)(var4);
    var _closure1_slot2 = var4;
    var4 = 1;
    var8 = var6[var4];
    var4 = metroImportAll;
    var4 = var4.bind(var1)(var8);
    var _closure1_slot3 = var4;
    var4 = 2;
    var4 = var6[var4];
    var4 = var7.bind(var1)(var4);
    var _closure1_slot4 = var4;
    var4 = 5;
    var4 = var6[var4];
    var6 = var5.bind(var1)(var4);
    var5 = var6.fileFinishedImporting;
    var4 = 'modules/remixing/native/hooks/DrawingHooks.tsx';
    var4 = var5.bind(var6)(var4);
    var2 = function() {
        var10 = _closure1_slot0;
        var11 = _closure1_slot1;
        var1 = 3;
        var1 = var11[var1];
        var9 = undefined;
        var5 = var10.bind(var9)(var1);
        var4 = var5.useStateFromStoresObject;
        var1 = _closure1_slot4;
        var3 = new Array(1);
        var3[0] = var1;
        var1 = function() {
            var2 = _closure1_slot4;
            var1 = var2.getDrawingState;
            var1 = var1.bind(var2)();
            return var1;
        };
        var1 = var4.bind(var5)(var3, var1);
        var7 = var1.brushColor;
        var12 = var1.brushSize;
        var13 = _closure1_slot3;
        var3 = var13.useState;
        var1 = false;
        var1 = var3.bind(var13)(var1);
        var8 = _closure1_slot2;
        var6 = 2;
        var1 = var8.bind(var9)(var1, var6);
        var4 = 0;
        var5 = var1[var4];
        var2 = 1;
        var3 = var1[var2];
        var1 = var13.useState;
        var1 = var1.bind(var13)(var4);
        var1 = var8.bind(var9)(var1, var6);
        var4 = var1[var4];
        var2 = var1[var2];
        var8 = 4;
        var1 = var11[var8];
        var6 = var10.bind(var9)(var1);
        var1 = var6.useSharedValue;
        var6 = var1.bind(var6)(var12);
        var1 = {};
        var8 = var11[var8];
        var10 = var10.bind(var9)(var8);
        var9 = var10.useSharedValue;
        var8 = '';
        var8 = var9.bind(var10)(var8);
        var1['drawingPath'] = var8;
        var1['drawingColor'] = var7;
        var1['strokeWidth'] = var6;
        var1['isActivelyDrawing'] = var5;
        var1['carouselIndex'] = var4;
        var1['setIsActivelyDrawing'] = var3;
        var1['setCarouselIndex'] = var2;
        return var1;
    };
    var3['useDrawingHooks'] = var2;
    return var1;
})();