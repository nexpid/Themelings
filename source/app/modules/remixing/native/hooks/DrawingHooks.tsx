// app/modules/remixing/native/hooks/DrawingHooks.tsx
export default (function(_, argBar, argBaz, argCorge, __, argFred, argPlugh) {
    report = argBar;
    golf = argBaz;
    zulu = argFred;
    oscar = argPlugh;
    var _closure1_slot0 = report;
    var _closure1_slot1 = oscar;
    entity = global;
    verify = entity.Object;
    options = verify.defineProperty;
    tango = {};
    entity = true;
    tango['value'] = entity;
    entity = '__esModule';
    entity = options.bind(verify)(zulu, entity, tango);
    entity = 0;
    tango = oscar[entity];
    entity = undefined;
    tango = golf.bind(entity)(tango);
    var _closure1_slot2 = tango;
    tango = 1;
    options = oscar[tango];
    tango = argCorge;
    tango = tango.bind(entity)(options);
    var _closure1_slot3 = tango;
    tango = 2;
    tango = oscar[tango];
    tango = golf.bind(entity)(tango);
    var _closure1_slot4 = tango;
    tango = 5;
    tango = oscar[tango];
    oscar = report.bind(entity)(tango);
    report = oscar.fileFinishedImporting;
    tango = 'modules/remixing/native/hooks/DrawingHooks.tsx';
    tango = report.bind(oscar)(tango);
    mike = function() {
        offset = _closure1_slot0;
        yankee = _closure1_slot1;
        entity = 3;
        entity = yankee[entity];
        verify = undefined;
        report = offset.bind(verify)(entity);
        tango = report.useStateFromStoresObject;
        entity = _closure1_slot4;
        zulu = new Array(1);
        zulu[0] = entity;
        entity = function() {
            mike = _closure1_slot4;
            entity = mike.getDrawingState;
            entity = entity.bind(mike)();
            return entity;
        };
        entity = tango.bind(report)(zulu, entity);
        golf = entity.brushColor;
        romeo = entity.brushSize;
        foxtrot = _closure1_slot3;
        zulu = foxtrot.useState;
        entity = false;
        entity = zulu.bind(foxtrot)(entity);
        options = _closure1_slot2;
        oscar = 2;
        entity = options.bind(verify)(entity, oscar);
        tango = 0;
        report = entity[tango];
        mike = 1;
        zulu = entity[mike];
        entity = foxtrot.useState;
        entity = entity.bind(foxtrot)(tango);
        entity = options.bind(verify)(entity, oscar);
        tango = entity[tango];
        mike = entity[mike];
        options = 4;
        entity = yankee[options];
        oscar = offset.bind(verify)(entity);
        entity = oscar.useSharedValue;
        oscar = entity.bind(oscar)(romeo);
        entity = {};
        options = yankee[options];
        offset = offset.bind(verify)(options);
        verify = offset.useSharedValue;
        options = '';
        options = verify.bind(offset)(options);
        entity['drawingPath'] = options;
        entity['drawingColor'] = golf;
        entity['strokeWidth'] = oscar;
        entity['isActivelyDrawing'] = report;
        entity['carouselIndex'] = tango;
        entity['setIsActivelyDrawing'] = zulu;
        entity['setCarouselIndex'] = mike;
        return entity;
    };
    zulu['useDrawingHooks'] = mike;
    return entity;
})();