// app/modules/remixing/native/SkiaDisabledAlertModal.tsx
export default (function(_, argBar, __, argCorge, ___, argFred, argPlugh) {
    report = argBar;
    zulu = argFred;
    oscar = argPlugh;
    var _closure1_slot0 = report;
    var _closure1_slot1 = oscar;
    entity = global;
    options = entity.Object;
    golf = options.defineProperty;
    tango = {};
    entity = true;
    tango['value'] = entity;
    entity = '__esModule';
    entity = golf.bind(options)(zulu, entity, tango);
    entity = 0;
    golf = oscar[entity];
    tango = argCorge;
    entity = undefined;
    tango = tango.bind(entity)(golf);
    tango = 1;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.jsx;
    var _closure1_slot2 = tango;
    tango = 5;
    tango = oscar[tango];
    oscar = report.bind(entity)(tango);
    report = oscar.fileFinishedImporting;
    tango = 'modules/remixing/native/SkiaDisabledAlertModal.tsx';
    tango = report.bind(oscar)(tango);
    mike = function() { // Original name: SkiaDisabledAlertModal
        tango = _closure1_slot2;
        romeo = _closure1_slot0;
        foxtrot = _closure1_slot1;
        golf = 2;
        entity = foxtrot[golf];
        zulu = undefined;
        entity = romeo.bind(zulu)(entity);
        mike = entity.AlertModal;
        entity = {'title': 'Skia Disabled', 'content': 'App was built with react-native-skia disabled. Set skiaEnabled=true in gradle.properties to enable.'};
        report = 3;
        report = foxtrot[report];
        report = romeo.bind(zulu)(report);
        oscar = report.AlertActions;
        report = {};
        golf = foxtrot[golf];
        golf = romeo.bind(zulu)(golf);
        verify = golf.AlertActionButton;
        options = {};
        golf = 4;
        offset = foxtrot[golf];
        offset = romeo.bind(zulu)(offset);
        yankee = offset.intl;
        offset = yankee.string;
        golf = foxtrot[golf];
        golf = romeo.bind(zulu)(golf);
        golf = golf.t;
        golf = golf.BddRzc;
        golf = offset.bind(yankee)(golf);
        options['text'] = golf;
        golf = 'okay';
        golf = tango.bind(zulu)(verify, options, golf);
        report['children'] = golf;
        report = tango.bind(zulu)(oscar, report);
        entity['actions'] = report;
        entity = tango.bind(zulu)(mike, entity);
        return entity;
    };
    zulu['default'] = mike;
    return entity;
})();