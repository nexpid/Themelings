// app/modules/remixing/RemixingMentionsStore.tsx
export default (function(argFoo, argBar, _, __, ___, argFre, argPlu) {
    report = argBar;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    var _closure1_slot1 = oscard;
    entity = global;
    option = entity.Object;
    golfie = option.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(option)(zuuluu, entity, tangon);
    tangon = {'mentionsText': '', 'chosenMention': '', 'fontSize': 30, 'textColor': null, 'inputWidth': 160};
    entity = 0;
    golfie = oscard[entity];
    entity = undefined;
    golfie = report.bind(entity)(golfie);
    golfie = golfie.DEFAULT_TEXT_COLOR;
    tangon['textColor'] = golfie;
    var _closure1_slot2 = tangon;
    tangon = 1;
    tangon = oscard[tangon];
    golfie = report.bind(entity)(tangon);
    tangon = golfie.create;
    michal = function(argFoo) {
        entity = argFoo;
        var _closure2_slot0 = entity;
        entity = {};
        report = _closure1_slot2;
        oscard = entity;
        zuuluu = copyDataProperties(oscard, report);
        tangon = function(argFoo) { // Original name: setMentionsText
            michal = argFoo;
            var _closure3_slot0 = michal;
            tangon = _closure1_slot0;
            zuuluu = _closure1_slot1;
            michal = 2;
            zuuluu = zuuluu[michal];
            michal = undefined;
            zuuluu = tangon.bind(michal)(zuuluu);
            michal = zuuluu.batchUpdates;
            entity = function() {
                zuuluu = _closure2_slot0;
                michal = {};
                entity = _closure3_slot0;
                michal['mentionsText'] = entity;
                entity = undefined;
                entity = zuuluu.bind(entity)(michal);
                return entity;
            };
            entity = michal.bind(zuuluu)(entity);
            return entity;
        };
        zuuluu = 'setMentionsText';
        entity[zuuluu] = tangon;
        tangon = function(argFoo) { // Original name: setChosenMention
            michal = argFoo;
            var _closure3_slot0 = michal;
            tangon = _closure1_slot0;
            zuuluu = _closure1_slot1;
            michal = 2;
            zuuluu = zuuluu[michal];
            michal = undefined;
            zuuluu = tangon.bind(michal)(zuuluu);
            michal = zuuluu.batchUpdates;
            entity = function() {
                zuuluu = _closure2_slot0;
                michal = {};
                entity = _closure3_slot0;
                michal['chosenMention'] = entity;
                entity = undefined;
                entity = zuuluu.bind(entity)(michal);
                return entity;
            };
            entity = michal.bind(zuuluu)(entity);
            return entity;
        };
        zuuluu = 'setChosenMention';
        entity[zuuluu] = tangon;
        tangon = function(argFoo) { // Original name: setFontSize
            michal = argFoo;
            var _closure3_slot0 = michal;
            tangon = _closure1_slot0;
            zuuluu = _closure1_slot1;
            michal = 2;
            zuuluu = zuuluu[michal];
            michal = undefined;
            zuuluu = tangon.bind(michal)(zuuluu);
            michal = zuuluu.batchUpdates;
            entity = function() {
                zuuluu = _closure2_slot0;
                michal = {};
                entity = _closure3_slot0;
                michal['fontSize'] = entity;
                entity = undefined;
                entity = zuuluu.bind(entity)(michal);
                return entity;
            };
            entity = michal.bind(zuuluu)(entity);
            return entity;
        };
        zuuluu = 'setFontSize';
        entity[zuuluu] = tangon;
        tangon = function(argFoo) { // Original name: setInputWidth
            michal = argFoo;
            var _closure3_slot0 = michal;
            tangon = _closure1_slot0;
            zuuluu = _closure1_slot1;
            michal = 2;
            zuuluu = zuuluu[michal];
            michal = undefined;
            zuuluu = tangon.bind(michal)(zuuluu);
            michal = zuuluu.batchUpdates;
            entity = function() {
                zuuluu = _closure2_slot0;
                michal = {};
                entity = _closure3_slot0;
                michal['inputWidth'] = entity;
                entity = undefined;
                entity = zuuluu.bind(entity)(michal);
                return entity;
            };
            entity = michal.bind(zuuluu)(entity);
            return entity;
        };
        zuuluu = 'setInputWidth';
        entity[zuuluu] = tangon;
        tangon = function(argFoo) { // Original name: setTextColor
            michal = argFoo;
            var _closure3_slot0 = michal;
            tangon = _closure1_slot0;
            zuuluu = _closure1_slot1;
            michal = 2;
            zuuluu = zuuluu[michal];
            michal = undefined;
            zuuluu = tangon.bind(michal)(zuuluu);
            michal = zuuluu.batchUpdates;
            entity = function() {
                zuuluu = _closure2_slot0;
                michal = {};
                entity = _closure3_slot0;
                michal['textColor'] = entity;
                entity = undefined;
                entity = zuuluu.bind(entity)(michal);
                return entity;
            };
            entity = michal.bind(zuuluu)(entity);
            return entity;
        };
        zuuluu = 'setTextColor';
        entity[zuuluu] = tangon;
        zuuluu = function() { // Original name: reset
            zuuluu = _closure1_slot0;
            michal = _closure1_slot1;
            entity = 2;
            michal = michal[entity];
            entity = undefined;
            tangon = zuuluu.bind(entity)(michal);
            zuuluu = tangon.batchUpdates;
            michal = function() {
                zuuluu = _closure2_slot0;
                michal = _closure1_slot2;
                entity = undefined;
                entity = zuuluu.bind(entity)(michal);
                return entity;
            };
            michal = zuuluu.bind(tangon)(michal);
            return entity;
        };
        michal = 'reset';
        entity[michal] = zuuluu;
        return entity;
    };
    michal = tangon.bind(golfie)(michal);
    tangon = 3;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/remixing/RemixingMentionsStore.tsx';
    tangon = report.bind(oscard)(tangon);
    zuuluu['useRemixingMentionsStore'] = michal;
    return entity;
})();