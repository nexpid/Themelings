// app/modules/expression_picker/ExpressionPickerConstants.tsx
export default (function(_, argBar, __, ___, ____, argFred, argPlugh) {
    zulu = argFred;
    entity = global;
    report = entity.Object;
    tango = report.defineProperty;
    mike = {};
    entity = true;
    mike['value'] = entity;
    entity = '__esModule';
    entity = tango.bind(report)(zulu, entity, mike);
    oscar = {};
    entity = 'emoji';
    oscar['EMOJI'] = entity;
    entity = 'gif';
    oscar['GIF'] = entity;
    entity = 'sticker';
    oscar['STICKER'] = entity;
    entity = 'soundboard';
    oscar['SOUNDBOARD'] = entity;
    report = {};
    entity = 'min';
    report['MIN'] = entity;
    entity = 'max';
    report['MAX'] = entity;
    entity = oscar.EMOJI;
    tango = new Array(3);
    tango[0] = entity;
    entity = oscar.GIF;
    tango[1] = entity;
    entity = oscar.STICKER;
    tango[2] = entity;
    entity = oscar.EMOJI;
    mike = new Array(2);
    mike[0] = entity;
    entity = oscar.STICKER;
    mike[1] = entity;
    golf = argPlugh;
    entity = 0;
    options = golf[entity];
    golf = argBar;
    entity = undefined;
    verify = golf.bind(entity)(options);
    options = verify.fileFinishedImporting;
    golf = 'modules/expression_picker/ExpressionPickerConstants.tsx';
    golf = options.bind(verify)(golf);
    zulu['ExpressionPickerViewType'] = oscar;
    oscar = 'expression-picker-chat-input-button';
    zulu['CHAT_INPUT_BUTTON_CLASSNAME'] = oscar;
    oscar = 498;
    zulu['MIN_EXPRESSION_PICKER_WIDTH'] = oscar;
    oscar = 8;
    zulu['MIN_MARGIN'] = oscar;
    zulu['PADDING_HORIZONTAL'] = oscar;
    oscar = 4;
    zulu['PADDING_VERTICAL'] = oscar;
    zulu['ExpressionPickerWidths'] = report;
    zulu['ExpressionPickerOrder'] = tango;
    zulu['ExpressionPickerActionSheetOrder'] = mike;
    return entity;
})();