// app/modules/expression_picker/ExpressionPickerConstants.tsx
export default (function(_, argBar, __, ___, ____, argFre, argPlu) {
    zuuluu = argFre;
    entity = global;
    report = entity.Object;
    tangon = report.defineProperty;
    michal = {};
    entity = true;
    michal['value'] = entity;
    entity = '__esModule';
    entity = tangon.bind(report)(zuuluu, entity, michal);
    report = {};
    entity = 'emoji';
    report['EMOJI'] = entity;
    entity = 'gif';
    report['GIF'] = entity;
    entity = 'sticker';
    report['STICKER'] = entity;
    entity = 'soundboard';
    report['SOUNDBOARD'] = entity;
    tangon = {};
    entity = 'min';
    tangon['MIN'] = entity;
    entity = 'max';
    tangon['MAX'] = entity;
    entity = report.EMOJI;
    michal = new Array(3);
    michal[0] = entity;
    entity = report.GIF;
    michal[1] = entity;
    entity = report.STICKER;
    michal[2] = entity;
    oscard = argPlu;
    entity = 0;
    golfie = oscard[entity];
    oscard = argBar;
    entity = undefined;
    option = oscard.bind(entity)(golfie);
    golfie = option.fileFinishedImporting;
    oscard = 'modules/expression_picker/ExpressionPickerConstants.tsx';
    oscard = golfie.bind(option)(oscard);
    zuuluu['ExpressionPickerViewType'] = report;
    report = 'expression-picker-chat-input-button';
    zuuluu['CHAT_INPUT_BUTTON_CLASSNAME'] = report;
    report = 498;
    zuuluu['MIN_EXPRESSION_PICKER_WIDTH'] = report;
    report = 8;
    zuuluu['MIN_MARGIN'] = report;
    zuuluu['PADDING_HORIZONTAL'] = report;
    report = 4;
    zuuluu['PADDING_VERTICAL'] = report;
    zuuluu['ExpressionPickerWidths'] = tangon;
    zuuluu['ExpressionPickerOrder'] = michal;
    return entity;
})();