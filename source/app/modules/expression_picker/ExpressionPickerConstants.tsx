// app/modules/expression_picker/ExpressionPickerConstants.tsx
export default (function(native1, native2, native3, native4, native5, native6, native7) {
    var3 = native6;
    var1 = global;
    var5 = var1.Object;
    var4 = var5.defineProperty;
    var2 = {};
    var1 = true;
    var2['value'] = var1;
    var1 = '__esModule';
    var1 = var4.bind(var5)(var3, var1, var2);
    var5 = {};
    var1 = 'emoji';
    var5['EMOJI'] = var1;
    var1 = 'gif';
    var5['GIF'] = var1;
    var1 = 'sticker';
    var5['STICKER'] = var1;
    var1 = 'soundboard';
    var5['SOUNDBOARD'] = var1;
    var4 = {};
    var1 = 'min';
    var4['MIN'] = var1;
    var1 = 'max';
    var4['MAX'] = var1;
    var1 = var5.EMOJI;
    var2 = new Array(3);
    var2[0] = var1;
    var1 = var5.GIF;
    var2[1] = var1;
    var1 = var5.STICKER;
    var2[2] = var1;
    var6 = native7;
    var1 = 0;
    var7 = var6[var1];
    var6 = native2;
    var1 = undefined;
    var8 = var6.bind(var1)(var7);
    var7 = var8.fileFinishedImporting;
    var6 = 'modules/expression_picker/ExpressionPickerConstants.tsx';
    var6 = var7.bind(var8)(var6);
    var3['ExpressionPickerViewType'] = var5;
    var5 = 'expression-picker-chat-input-button';
    var3['CHAT_INPUT_BUTTON_CLASSNAME'] = var5;
    var5 = 498;
    var3['MIN_EXPRESSION_PICKER_WIDTH'] = var5;
    var5 = 8;
    var3['MIN_MARGIN'] = var5;
    var3['PADDING_HORIZONTAL'] = var5;
    var5 = 4;
    var3['PADDING_VERTICAL'] = var5;
    var3['ExpressionPickerWidths'] = var4;
    var3['ExpressionPickerOrder'] = var2;
    return var1;
})();