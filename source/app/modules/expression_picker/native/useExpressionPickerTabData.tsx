// app/modules/expression_picker/native/useExpressionPickerTabData.tsx
export default (function(global, require, metroImportDefault, metroImportAll, moduleObject, exports, dependencyMap) {
    var5 = require;
    var3 = exports;
    var6 = dependencyMap;
    var _closure1_slot0 = var5;
    var _closure1_slot1 = var6;
    var1 = global;
    var8 = var1.Object;
    var7 = var8.defineProperty;
    var4 = {};
    var1 = true;
    var4['value'] = var1;
    var1 = '__esModule';
    var1 = var7.bind(var8)(var3, var1, var4);
    var1 = 0;
    var7 = var6[var1];
    var4 = metroImportAll;
    var1 = undefined;
    var4 = var4.bind(var1)(var7);
    var _closure1_slot2 = var4;
    var4 = 1;
    var4 = var6[var4];
    var4 = var5.bind(var1)(var4);
    var7 = var4.ExpressionPickerOrder;
    var _closure1_slot3 = var7;
    var4 = var4.ExpressionPickerViewType;
    var _closure1_slot4 = var4;
    var4 = 3;
    var4 = var6[var4];
    var6 = var5.bind(var1)(var4);
    var5 = var6.fileFinishedImporting;
    var4 = 'modules/expression_picker/native/useExpressionPickerTabData.tsx';
    var4 = var5.bind(var6)(var4);
    var2 = function useExpressionPickerTabData(arg1) {
        _fun0001: for(var _fun0001_ip = 0; ; ) switch(_fun0001_ip) {
 0:
            var2 = arg1;
            var8 = var2.expressionType;
            var7 = var2.expressionPickerTabs;
            var _closure2_slot0 = var7;
            var4 = _closure1_slot3;
            var3 = var4.indexOf;
            var4 = var3.bind(var4)(var8);
            var3 = 0;
            var4 = var4 >= var3;
            var5 = 0;
            if(!var4) { _fun0001_ip = 65; continue _fun0001 }
 50:
            var6 = _closure1_slot3;
            var4 = var6.indexOf;
            var5 = var4.bind(var6)(var8);
 65:
            var6 = _closure1_slot2;
            var4 = var6.useMemo;
            var2 = new Array(1);
            var2[0] = var7;
            var1 = function() {
                var4 = {};
                var1 = {};
                var11 = _closure1_slot0;
                var12 = _closure1_slot1;
                var5 = 2;
                var3 = var12[var5];
                var10 = undefined;
                var3 = var11.bind(var10)(var3);
                var8 = var3.intl;
                var7 = var8.string;
                var3 = var12[var5];
                var3 = var11.bind(var10)(var3);
                var3 = var3.t;
                var3 = var3.Xu3wEx;
                var3 = var7.bind(var8)(var3);
                var1['label'] = var3;
                var3 = _closure1_slot4;
                var7 = var3.EMOJI;
                var1['viewType'] = var7;
                var8 = _closure2_slot0;
                var9 = var8.includes;
                var7 = var3.EMOJI;
                var7 = var9.bind(var8)(var7);
                var1['show'] = var7;
                var6 = _closure1_slot3;
                var9 = var6.indexOf;
                var7 = var3.EMOJI;
                var7 = var9.bind(var6)(var7);
                var1['order'] = var7;
                var4['EMOJI'] = var1;
                var1 = {};
                var7 = var12[var5];
                var7 = var11.bind(var10)(var7);
                var13 = var7.intl;
                var9 = var13.string;
                var7 = var12[var5];
                var7 = var11.bind(var10)(var7);
                var7 = var7.t;
                var7 = var7.6gUTsb;
                var7 = var9.bind(var13)(var7);
                var1['label'] = var7;
                var7 = var3.GIF;
                var1['viewType'] = var7;
                var9 = var8.includes;
                var7 = var3.GIF;
                var7 = var9.bind(var8)(var7);
                var1['show'] = var7;
                var9 = var6.indexOf;
                var7 = var3.GIF;
                var7 = var9.bind(var6)(var7);
                var1['order'] = var7;
                var4['GIF'] = var1;
                var1 = {};
                var7 = var12[var5];
                var7 = var11.bind(var10)(var7);
                var9 = var7.intl;
                var7 = var9.string;
                var5 = var12[var5];
                var5 = var11.bind(var10)(var5);
                var5 = var5.t;
                var5 = var5.nf1s3t;
                var5 = var7.bind(var9)(var5);
                var1['label'] = var5;
                var5 = var3.STICKER;
                var1['viewType'] = var5;
                var7 = var8.includes;
                var5 = var3.STICKER;
                var5 = var7.bind(var8)(var5);
                var1['show'] = var5;
                var5 = var6.indexOf;
                var3 = var3.STICKER;
                var3 = var5.bind(var6)(var3);
                var1['order'] = var3;
                var4['STICKER'] = var1;
                var1 = global;
                var3 = var1.Object;
                var1 = var3.values;
                var4 = var1.bind(var3)(var4);
                var3 = var4.filter;
                var1 = function(arg1) {
                    var1 = arg1;
                    var1 = var1.show;
                    return var1;
                };
                var4 = var3.bind(var4)(var1);
                var3 = var4.sort;
                var1 = function(arg1) {
                    var1 = arg1;
                    var1 = var1.order;
                    return var1;
                };
                var4 = var3.bind(var4)(var1);
                var1 = {};
                var1['expressionPickerTabsSorted'] = var4;
                var3 = var4.map;
                var2 = function(arg1) {
                    var1 = arg1;
                    var1 = var1.label;
                    return var1;
                };
                var2 = var3.bind(var4)(var2);
                var1['expressionPickerTabStrings'] = var2;
                return var1;
            };
            var1 = var4.bind(var6)(var1, var2);
            var4 = var1.expressionPickerTabsSorted;
            var2 = var1.expressionPickerTabStrings;
            var1 = {};
            var1['expressionPickerSelectedIndex'] = var5;
            var6 = var4.length;
            if(!(!(var5 < var6))) { _fun0001_ip = 127; continue _fun0001 }
 121:
            var3 = var4[var3];
            _fun0001_ip = 131; continue _fun0001;
 127:
            var3 = var4[var5];
 131:
            var3 = var3.viewType;
            var1['expressionPickerViewType'] = var3;
            var1['expressionPickerTabStrings'] = var2;
            return var1;
        }
    };
    var3['default'] = var2;
    return var1;
})();