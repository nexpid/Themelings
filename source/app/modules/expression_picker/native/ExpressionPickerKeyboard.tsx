// app/modules/expression_picker/native/ExpressionPickerKeyboard.tsx
export default (function(argFoo, argBar, argBaz, argCorge, _, argFred, argPlugh) {
    report = argBar;
    options = argBaz;
    zulu = argFred;
    oscar = argPlugh;
    var _closure1_slot0 = report;
    var _closure1_slot1 = options;
    var _closure1_slot2 = oscar;
    entity = global;
    verify = entity.Object;
    golf = verify.defineProperty;
    tango = {};
    entity = true;
    tango['value'] = entity;
    entity = '__esModule';
    entity = golf.bind(verify)(zulu, entity, tango);
    entity = 0;
    golf = oscar[entity];
    tango = argCorge;
    entity = undefined;
    golf = tango.bind(entity)(golf);
    var _closure1_slot3 = golf;
    tango = 1;
    tango = oscar[tango];
    tango = options.bind(entity)(tango);
    var _closure1_slot4 = tango;
    tango = 2;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.KeyboardTypes;
    var _closure1_slot5 = tango;
    tango = 3;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.KEYBOARD_ANIMATION_CONFIG;
    var _closure1_slot6 = tango;
    tango = 4;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.jsx;
    var _closure1_slot7 = tango;
    tango = {};
    options = 'function ExpressionPickerKeyboardTsx1(){const{animatedSheetIndex}=this.__closure;return Math.max(animatedSheetIndex.get(),0)>0;}';
    tango['code'] = options;
    var _closure1_slot8 = tango;
    tango = {};
    options = 'function ExpressionPickerKeyboardTsx2(){const{bottomSheetExpandingOrExpanded,maximum,minimum}=this.__closure;return{height:bottomSheetExpandingOrExpanded.get()?maximum:minimum};}';
    tango['code'] = options;
    var _closure1_slot9 = tango;
    options = golf.memo;
    tango = function(argFoo) {
        entity = argFoo;
        options = entity.channel;
        entity = entity.chatInputRef;
        var _closure2_slot0 = entity;
        romeo = _closure1_slot3;
        golf = romeo.useContext;
        oscar = _closure1_slot0;
        foxtrot = _closure1_slot2;
        tango = 5;
        report = foxtrot[tango];
        tango = undefined;
        report = oscar.bind(tango)(report);
        report = report.PortalKeyboardContext;
        report = golf.bind(romeo)(report);
        echo = report.animatedSheetIndex;
        var _closure2_slot1 = echo;
        report = report.bottomSheetRefs;
        var _closure2_slot2 = report;
        verify = romeo.useCallback;
        report = report.expression;
        golf = new Array(2);
        golf[0] = report;
        golf[1] = entity;
        report = function(argFoo) {
            _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
                tango = _closure2_slot0;
                offset = tango.current;
                verify = offset.insertText;
                report = _closure1_slot1;
                options = _closure1_slot2;
                entity = 6;
                mike = options[entity];
                entity = undefined;
                report = report.bind(entity)(mike);
                mike = argFoo;
                oscar = report.bind(entity)(mike);
                mike = null;
                report = true;
                report = verify.bind(offset)(oscar, mike, report);
                oscar = _closure1_slot0;
                report = 7;
                report = options[report];
                oscar = oscar.bind(entity)(report);
                report = oscar.dismissGlobalKeyboard;
                report = report.bind(oscar)();
                oscar = tango.current;
                report = oscar.openCustomKeyboard;
                tango = {};
                golf = _closure1_slot5;
                golf = golf.EXPRESSION;
                tango['keyboardType'] = golf;
                tango = report.bind(oscar)(tango);
                zulu = _closure2_slot2;
                zulu = zulu.expression;
                tango = zulu.current;
                if(!(mike != tango)) { _fun00002_ip = 153; continue _fun00001 }
 140:
                zulu = tango.snapToIndex;
                mike = 0;
                mike = zulu.bind(tango)(mike);
 153:
                return entity;
            }
        };
        yankee = verify.bind(romeo)(report, golf);
        verify = romeo.useCallback;
        golf = new Array(1);
        golf[0] = entity;
        report = function(argFoo) {
            entity = _closure2_slot0;
            tango = entity.current;
            zulu = tango.handleSelectGIF;
            mike = argFoo;
            mike = zulu.bind(tango)(mike);
            mike = entity.current;
            entity = mike.openSystemKeyboard;
            entity = entity.bind(mike)();
            entity = undefined;
            return entity;
        };
        offset = verify.bind(romeo)(report, golf);
        verify = romeo.useCallback;
        golf = new Array(1);
        golf[0] = entity;
        report = function(argFoo) {
            entity = _closure2_slot0;
            tango = entity.current;
            zulu = tango.handleSelectSticker;
            mike = argFoo;
            mike = zulu.bind(tango)(mike);
            zulu = entity.current;
            mike = zulu.openSystemKeyboard;
            mike = mike.bind(zulu)();
            zulu = entity.current;
            mike = zulu.setText;
            entity = '';
            entity = mike.bind(zulu)(entity);
            entity = undefined;
            return entity;
        };
        verify = verify.bind(romeo)(report, golf);
        golf = romeo.useCallback;
        report = new Array(1);
        report[0] = entity;
        entity = function() {
            entity = _closure2_slot0;
            mike = entity.current;
            entity = mike.backspace;
            entity = entity.bind(mike)();
            entity = undefined;
            return entity;
        };
        romeo = golf.bind(romeo)(entity, report);
        entity = 8;
        entity = foxtrot[entity];
        backup = oscar.bind(tango)(entity);
        golf = backup.useStateFromStoresObject;
        entity = _closure1_slot4;
        report = new Array(1);
        report[0] = entity;
        entity = function() {
            entity = {};
            mike = _closure1_slot4;
            mike = mike.expressionType;
            entity['expressionType'] = mike;
            return entity;
        };
        entity = golf.bind(backup)(report, entity);
        golf = entity.expressionType;
        entity = 9;
        entity = foxtrot[entity];
        report = oscar.bind(tango)(entity);
        entity = report.useKeyboardActionSheetHeight;
        entity = entity.bind(report)();
        kilo = entity.minimum;
        var _closure2_slot3 = kilo;
        sizing = entity.maximum;
        var _closure2_slot4 = sizing;
        entity = 10;
        report = foxtrot[entity];
        output = oscar.bind(tango)(report);
        backup = output.useDerivedValue;
        report = function() { // Original name: p
            entity = global;
            tango = entity.Math;
            zulu = tango.max;
            mike = _closure2_slot1;
            entity = mike.get;
            entity = entity.bind(mike)();
            mike = 0;
            entity = zulu.bind(tango)(entity, mike);
            entity = entity > mike;
            return entity;
        };
        result = {};
        result['animatedSheetIndex'] = echo;
        report['__closure'] = result;
        result = 9820130506520.0;
        report['__workletHash'] = result;
        result = _closure1_slot8;
        report['__initData'] = result;
        output = backup.bind(output)(report);
        var _closure2_slot5 = output;
        report = foxtrot[entity];
        oscar = oscar.bind(tango)(report);
        report = oscar.useAnimatedStyle;
        zulu = function() { // Original name: h
            _fun00003: for(var _fun00004_ip = 0; ; ) switch(_fun00004_ip) {
 0:
                entity = {};
                tango = _closure2_slot5;
                mike = tango.get;
                mike = mike.bind(tango)();
                if(mike) { _fun00004_ip = 27; continue _fun00003 }
 21:
                mike = _closure2_slot3;
                _fun00004_ip = 31; continue _fun00003;
 27:
                mike = _closure2_slot4;
 31:
                entity['height'] = mike;
                return entity;
            }
        };
        backup = {};
        backup['bottomSheetExpandingOrExpanded'] = output;
        backup['maximum'] = sizing;
        backup['minimum'] = kilo;
        zulu['__closure'] = backup;
        backup = 13253776832356.0;
        zulu['__workletHash'] = backup;
        backup = _closure1_slot9;
        zulu['__initData'] = backup;
        report = report.bind(oscar)(zulu);
        zulu = _closure1_slot7;
        oscar = _closure1_slot1;
        entity = foxtrot[entity];
        entity = oscar.bind(tango)(entity);
        mike = entity.View;
        entity = {};
        backup = 'expression-picker-sheet';
        entity['nativeID'] = backup;
        entity['style'] = report;
        report = 11;
        report = foxtrot[report];
        oscar = oscar.bind(tango)(report);
        report = {};
        report['onBackspace'] = romeo;
        report['onPressEmoji'] = yankee;
        report['onPressGIF'] = offset;
        report['onPressSticker'] = verify;
        report['channel'] = options;
        report['expressionType'] = golf;
        golf = true;
        report['inActionSheet'] = golf;
        report['inPortalKeyboard'] = golf;
        report = zulu.bind(tango)(oscar, report);
        entity['children'] = report;
        entity = zulu.bind(tango)(mike, entity);
        return entity;
    };
    tango = options.bind(golf)(tango);
    var _closure1_slot10 = tango;
    tango = golf.memo;
    mike = function(argFoo) { // Original name: ExpressionPickerKeyboard
        entity = argFoo;
        mike = entity.channel;
        var _closure2_slot0 = mike;
        verify = entity.chatInputRef;
        var _closure2_slot1 = verify;
        golf = entity.onClose;
        oscar = entity.transitionState;
        zulu = _closure1_slot3;
        mike = zulu.useContext;
        yankee = _closure1_slot0;
        offset = _closure1_slot2;
        entity = 5;
        entity = offset[entity];
        tango = undefined;
        entity = yankee.bind(tango)(entity);
        entity = entity.PortalKeyboardContext;
        entity = mike.bind(zulu)(entity);
        entity = entity.bottomSheetRefs;
        entity = entity.expression;
        var _closure2_slot2 = entity;
        zulu = _closure1_slot7;
        mike = _closure1_slot1;
        entity = 12;
        entity = offset[entity];
        mike = mike.bind(tango)(entity);
        entity = {};
        entity['chatInputRef'] = verify;
        options = _closure1_slot6;
        entity['animationConfigs'] = options;
        entity['onClose'] = golf;
        entity['transitionState'] = oscar;
        oscar = 'expression';
        entity['refKey'] = oscar;
        report = function(argFoo) { // Original name: children
            zulu = _closure2_slot2;
            mike = argFoo;
            mike = mike.current;
            zulu['current'] = mike;
            tango = _closure1_slot7;
            zulu = _closure1_slot10;
            mike = {};
            report = _closure2_slot0;
            mike['channel'] = report;
            entity = _closure2_slot1;
            mike['chatInputRef'] = entity;
            entity = undefined;
            entity = tango.bind(entity)(zulu, mike);
            return entity;
        };
        entity['children'] = report;
        entity = zulu.bind(tango)(mike, entity);
        return entity;
    };
    mike = tango.bind(golf)(mike);
    tango = 13;
    tango = oscar[tango];
    oscar = report.bind(entity)(tango);
    report = oscar.fileFinishedImporting;
    tango = 'modules/expression_picker/native/ExpressionPickerKeyboard.tsx';
    tango = report.bind(oscar)(tango);
    zulu['default'] = mike;
    return entity;
})();