// app/modules/expression_picker/native/categories/ExpressionPickerCategoriesBackdrop.tsx
export default (function(_, argBar, argBaz, argCor, __, argFre, argPlu) {
    report = argBar;
    foxtra = argBaz;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    var _closure1_slot1 = foxtra;
    var _closure1_slot2 = oscard;
    entity = global;
    option = entity.Object;
    golfie = option.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(option)(zuuluu, entity, tangon);
    entity = 0;
    golfie = oscard[entity];
    tangon = argCor;
    entity = undefined;
    golfie = tangon.bind(entity)(golfie);
    tangon = 1;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    romeon = tangon.StyleSheet;
    tangon = tangon.View;
    var _closure1_slot3 = tangon;
    tangon = 2;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    yankee = tangon.EXPRESSION_FOOTER_HEIGHT;
    tangon = 3;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.jsx;
    var _closure1_slot4 = tangon;
    tangon = 4;
    tangon = oscard[tangon];
    verify = report.bind(entity)(tangon);
    option = verify.createStyles;
    tangon = {};
    offset = {};
    output = romeon.absoluteFillObject;
    result = offset;
    backup = copyDataProperties(result, output);
    backup = romeon.hairlineWidth;
    romeon = 'borderTopWidth';
    offset[romeon] = backup;
    romeon = 5;
    backup = oscard[romeon];
    backup = foxtra.bind(entity)(backup);
    backup = backup.colors;
    kiloes = backup.BACKGROUND_TERTIARY;
    backup = 'borderTopColor';
    offset[backup] = kiloes;
    tangon['backdrop'] = offset;
    offset = {};
    romeon = oscard[romeon];
    romeon = foxtra.bind(entity)(romeon);
    romeon = romeon.colors;
    romeon = romeon.PROFILE_GRADIENT_NOTE_BACKGROUND;
    offset['backgroundColor'] = romeon;
    offset['height'] = yankee;
    offset['bottom'] = entity;
    tangon['backdropAndroid'] = offset;
    tangon = option.bind(verify)(tangon);
    var _closure1_slot5 = tangon;
    tangon = golfie.memo;
    michal = function() { // Original name: EmojiPickerCategoriesBackdrop
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            entity = _closure1_slot5;
            report = undefined;
            golfie = entity.bind(report)();
            zuuluu = _closure1_slot0;
            tangon = _closure1_slot2;
            entity = 6;
            entity = tangon[entity];
            zuuluu = zuuluu.bind(report)(entity);
            entity = zuuluu.isAndroid;
            entity = entity.bind(zuuluu)();
            tangon = _closure1_slot4;
            zuuluu = _closure1_slot3;
            if(entity) { _fun00002_ip = 115; continue _fun00001 }
 53:
            entity = {};
            oscard = golfie.backdrop;
            entity['style'] = oscard;
            oscard = _closure1_slot1;
            option = _closure1_slot2;
            michal = 7;
            michal = option[michal];
            oscard = oscard.bind(report)(michal);
            michal = {};
            option = golfie.backdrop;
            michal['style'] = option;
            michal = tangon.bind(report)(oscard, michal);
            entity['children'] = michal;
            entity = tangon.bind(report)(zuuluu, entity);
            _fun00002_ip = 151; continue _fun00001;
 115:
            michal = {};
            option = golfie.backdrop;
            oscard = new Array(2);
            oscard[0] = option;
            golfie = golfie.backdropAndroid;
            oscard[1] = golfie;
            michal['style'] = oscard;
            entity = tangon.bind(report)(zuuluu, michal);
 151:
            return entity;
        }
    };
    michal = tangon.bind(golfie)(michal);
    tangon = 8;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/expression_picker/native/categories/ExpressionPickerCategoriesBackdrop.tsx';
    tangon = report.bind(oscard)(tangon);
    zuuluu['default'] = michal;
    return entity;
})();