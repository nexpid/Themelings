// app/modules/expression_picker/native/categories/ExpressionPickerCategories.tsx
export default (function(argFoo, argBar, argBaz, argCorge, _, argFred, argPlugh) {
    report = argBar;
    yankee = argBaz;
    zulu = argFred;
    oscar = argPlugh;
    var _closure1_slot0 = report;
    var _closure1_slot1 = yankee;
    var _closure1_slot2 = oscar;
    entity = global;
    options = entity.Object;
    golf = options.defineProperty;
    tango = {};
    entity = true;
    tango['value'] = entity;
    entity = '__esModule';
    entity = golf.bind(options)(zulu, entity, tango);
    entity = 0;
    golf = oscar[entity];
    tango = argCorge;
    entity = undefined;
    tango = tango.bind(entity)(golf);
    tango = 1;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.View;
    var _closure1_slot3 = tango;
    tango = 2;
    golf = oscar[tango];
    golf = report.bind(entity)(golf);
    golf = golf.jsx;
    var _closure1_slot4 = golf;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.jsxs;
    var _closure1_slot5 = tango;
    tango = 3;
    tango = oscar[tango];
    options = report.bind(entity)(tango);
    golf = options.createStyles;
    tango = {};
    verify = {};
    offset = 4;
    romeo = oscar[offset];
    romeo = yankee.bind(entity)(romeo);
    romeo = romeo.colors;
    romeo = romeo.BACKGROUND_SECONDARY;
    verify['backgroundColor'] = romeo;
    offset = oscar[offset];
    offset = yankee.bind(entity)(offset);
    offset = offset.spacing;
    offset = offset.PX_8;
    verify['paddingHorizontal'] = offset;
    offset = 'row';
    verify['flexDirection'] = offset;
    offset = 'center';
    verify['alignItems'] = offset;
    tango['container'] = verify;
    tango = golf.bind(options)(tango);
    var _closure1_slot6 = tango;
    tango = 7;
    tango = oscar[tango];
    oscar = report.bind(entity)(tango);
    report = oscar.fileFinishedImporting;
    tango = 'modules/expression_picker/native/categories/ExpressionPickerCategories.tsx';
    tango = report.bind(oscar)(tango);
    mike = function(argFoo) { // Original name: ExpressionPickerCategories
        entity = argFoo;
        verify = entity.children;
        report = entity.portalHostName;
        romeo = entity.style;
        entity = _closure1_slot6;
        tango = undefined;
        offset = entity.bind(tango)();
        zulu = _closure1_slot4;
        mike = _closure1_slot0;
        yankee = _closure1_slot2;
        entity = 5;
        entity = yankee[entity];
        entity = mike.bind(tango)(entity);
        mike = entity.Portal;
        entity = {};
        entity['hostName'] = report;
        golf = _closure1_slot5;
        oscar = _closure1_slot3;
        report = {};
        foxtrot = offset.container;
        offset = new Array(2);
        offset[0] = foxtrot;
        offset[1] = romeo;
        report['style'] = offset;
        offset = _closure1_slot1;
        options = 6;
        options = yankee[options];
        offset = offset.bind(tango)(options);
        options = {};
        offset = zulu.bind(tango)(offset, options);
        options = new Array(2);
        options[0] = offset;
        options[1] = verify;
        report['children'] = options;
        report = golf.bind(tango)(oscar, report);
        entity['children'] = report;
        entity = zulu.bind(tango)(mike, entity);
        return entity;
    };
    zulu['default'] = mike;
    return entity;
})();