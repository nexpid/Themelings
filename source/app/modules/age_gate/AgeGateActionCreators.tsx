// app/modules/age_gate/AgeGateActionCreators.tsx
export default (function(argFoo, argBar, argBaz, _, __, argFred, argPlugh) {
    report = argBar;
    zulu = argFred;
    oscar = argPlugh;
    var _closure1_slot0 = report;
    entity = argBaz;
    var _closure1_slot1 = entity;
    var _closure1_slot2 = oscar;
    entity = global;
    options = entity.Object;
    golf = options.defineProperty;
    tango = {};
    entity = true;
    tango['value'] = entity;
    entity = '__esModule';
    entity = golf.bind(options)(zulu, entity, tango);
    entity = 0;
    tango = oscar[entity];
    entity = undefined;
    tango = report.bind(entity)(tango);
    tango = tango.AgeGateAnalyticAction;
    var _closure1_slot3 = tango;
    tango = 1;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    golf = tango.AnalyticEvents;
    var _closure1_slot4 = golf;
    tango = tango.Endpoints;
    var _closure1_slot5 = tango;
    tango = 6;
    tango = oscar[tango];
    oscar = report.bind(entity)(tango);
    report = oscar.fileFinishedImporting;
    tango = 'modules/age_gate/AgeGateActionCreators.tsx';
    tango = report.bind(oscar)(tango);
    tango = function(argFoo, argBar) { // Original name: submitDateOfBirth
        options = argFoo;
        offset = argBar;
        var _closure2_slot0 = offset;
        zulu = _closure1_slot1;
        oscar = _closure1_slot2;
        mike = 2;
        mike = oscar[mike];
        tango = undefined;
        mike = zulu.bind(tango)(mike);
        mike = mike.bind(tango)(options, offset);
        mike = 3;
        mike = oscar[mike];
        verify = zulu.bind(tango)(mike);
        golf = verify.track;
        mike = _closure1_slot4;
        zulu = mike.AGE_GATE_ACTION;
        mike = {};
        mike['source'] = offset;
        offset = _closure1_slot3;
        offset = offset.AGE_GATE_SUBMITTED;
        mike['action'] = offset;
        mike = golf.bind(verify)(zulu, mike);
        zulu = _closure1_slot0;
        mike = 4;
        mike = oscar[mike];
        mike = zulu.bind(tango)(mike);
        tango = mike.HTTP;
        zulu = tango.patch;
        mike = {};
        report = _closure1_slot5;
        report = report.ME;
        mike['url'] = report;
        report = true;
        mike['oldFormErrors'] = report;
        report = {};
        golf = options.format;
        oscar = 'YYYY-MM-DD';
        oscar = golf.bind(options)(oscar);
        report['date_of_birth'] = oscar;
        mike['body'] = report;
        report = false;
        mike['rejectWithError'] = report;
        zulu = zulu.bind(tango)(mike);
        mike = zulu.then;
        entity = function(argFoo) {
            entity = argFoo;
            options = entity.body;
            zulu = _closure1_slot1;
            tango = _closure1_slot2;
            entity = 5;
            mike = tango[entity];
            entity = undefined;
            golf = zulu.bind(entity)(mike);
            report = golf.dispatch;
            mike = {};
            verify = 'CURRENT_USER_UPDATE';
            mike['type'] = verify;
            mike['user'] = options;
            mike = report.bind(golf)(mike);
            mike = 3;
            mike = tango[mike];
            report = zulu.bind(entity)(mike);
            tango = report.track;
            mike = _closure1_slot4;
            zulu = mike.AGE_GATE_ACTION;
            mike = {};
            golf = _closure2_slot0;
            mike['source'] = golf;
            oscar = _closure1_slot3;
            oscar = oscar.AGE_GATE_SUCCESS;
            mike['action'] = oscar;
            mike = tango.bind(report)(zulu, mike);
            return entity;
        };
        entity = mike.bind(zulu)(entity);
        return entity;
    };
    zulu['submitDateOfBirth'] = tango;
    tango = function(argFoo) { // Original name: preventUnderageRegistration
        zulu = _closure1_slot1;
        tango = _closure1_slot2;
        entity = 5;
        mike = tango[entity];
        entity = undefined;
        golf = zulu.bind(entity)(mike);
        report = golf.dispatch;
        mike = {};
        options = 'AGE_GATE_PREVENT_UNDERAGE_REGISTRATION';
        mike['type'] = options;
        mike = report.bind(golf)(mike);
        mike = 3;
        mike = tango[mike];
        report = zulu.bind(entity)(mike);
        tango = report.track;
        mike = _closure1_slot4;
        zulu = mike.AGE_GATE_ACTION;
        mike = {};
        golf = argFoo;
        mike['source'] = golf;
        oscar = _closure1_slot3;
        oscar = oscar.AGE_GATE_PREVENT_UNDERAGE_REGISTRATION;
        mike['action'] = oscar;
        mike = tango.bind(report)(zulu, mike);
        return entity;
    };
    zulu['preventUnderageRegistration'] = tango;
    mike = function(argFoo) { // Original name: logoutUnderageNewUser
        zulu = _closure1_slot1;
        tango = _closure1_slot2;
        entity = 5;
        mike = tango[entity];
        entity = undefined;
        golf = zulu.bind(entity)(mike);
        report = golf.dispatch;
        mike = {};
        options = 'AGE_GATE_LOGOUT_UNDERAGE_NEW_USER';
        mike['type'] = options;
        mike = report.bind(golf)(mike);
        mike = 3;
        mike = tango[mike];
        report = zulu.bind(entity)(mike);
        tango = report.track;
        mike = _closure1_slot4;
        zulu = mike.AGE_GATE_ACTION;
        mike = {};
        golf = argFoo;
        mike['source'] = golf;
        oscar = _closure1_slot3;
        oscar = oscar.AGE_GATE_LOGOUT_UNDERAGE_NEW_USER;
        mike['action'] = oscar;
        mike = tango.bind(report)(zulu, mike);
        return entity;
    };
    zulu['logoutUnderageNewUser'] = mike;
    return entity;
})();