// app/modules/age_gate/native/components/ExistingUserAgeGateConfirm.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    report = argBar;
    golfie = argBaz;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    var _closure1_slot1 = golfie;
    var _closure1_slot2 = oscard;
    entity = global;
    verify = entity.Object;
    option = verify.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = option.bind(verify)(zuuluu, entity, tangon);
    entity = 0;
    tangon = oscard[entity];
    entity = undefined;
    tangon = golfie.bind(entity)(tangon);
    var _closure1_slot3 = tangon;
    tangon = 1;
    tangon = oscard[tangon];
    tangon = golfie.bind(entity)(tangon);
    var _closure1_slot4 = tangon;
    tangon = 2;
    golfie = oscard[tangon];
    tangon = argCor;
    tangon = tangon.bind(entity)(golfie);
    var _closure1_slot5 = tangon;
    tangon = 3;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.HelpdeskArticles;
    var _closure1_slot6 = tangon;
    tangon = 4;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    golfie = tangon.jsx;
    var _closure1_slot7 = golfie;
    tangon = tangon.jsxs;
    var _closure1_slot8 = tangon;
    tangon = 5;
    tangon = oscard[tangon];
    option = report.bind(entity)(tangon);
    golfie = option.createStyles;
    tangon = {};
    verify = {'padding': 16, 'flex': 1, 'alignItems': 'center', 'justifyContent': 'center'};
    tangon['container'] = verify;
    verify = {'textAlign': 'center', 'marginBottom': 8};
    tangon['header'] = verify;
    verify = {'textAlign': 'center', 'lineHeight': 20, 'marginBottom': 16};
    tangon['body'] = verify;
    verify = {'width': '100%', 'flexGrow': 0};
    tangon['button'] = verify;
    tangon = golfie.bind(option)(tangon);
    var _closure1_slot9 = tangon;
    tangon = 13;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/age_gate/native/components/ExistingUserAgeGateConfirm.tsx';
    tangon = report.bind(oscard)(tangon);
    michal = function(argFoo) { // Original name: ExistingUserAgeGateConfirm
        entity = argFoo;
        result = entity.age;
        entity = entity.onConfirm;
        var _closure2_slot0 = entity;
        tangon = undefined;
        var _closure2_slot1 = tangon;
        var _closure2_slot2 = tangon;
        entity = function() { // Original name: _handleConfirm
            tangon = undefined;
            entity = undefined;
            zuuluu = _closure1_slot3;
            michal = function* () {
                entity = function* () { // Original name: ?anon_0_
                    _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
                        StartGenerator();
                        ResumeGenerator(result_out_reg=0, return_bool_out_reg=1);
                        if(michal) { _fun00002_ip = 99; continue _fun00001 }
 7:
                        report = _closure2_slot2;
                        michal = undefined;
                        tangon = true;
                        tangon = report.bind(michal)(tangon);
 23: // try_start_0
                        tangon = _closure2_slot0;
                        tangon = tangon.bind(michal)();
                        SaveGenerator(address=35);
 33:
                        return tangon;
 35:
                        ResumeGenerator(result_out_reg=3, return_bool_out_reg=4);
                        if(report) { _fun00002_ip = 66; continue _fun00001 }
 41:
                        report = tangon.shouldShowError;
                        if(!report) { _fun00002_ip = 64; continue _fun00001 }
 50:
                        oscard = _closure2_slot1;
                        report = oscard.pop;
                        report = report.bind(oscard)();
 64: // try_end0
                        _fun00002_ip = 85; continue _fun00001;
 66:
                        return tangon;
 69: // catch_target0
                        CatchBlockStart(arg_register=3);
                        report = _closure2_slot1;
                        tangon = report.pop;
                        tangon = tangon.bind(report)();
 85:
                        tangon = _closure2_slot2;
                        zuuluu = false;
                        zuuluu = tangon.bind(michal)(zuuluu);
                        return michal;
 99:
                        return entity;
                    }
                };
                return entity;
            };
            tangon = zuuluu.bind(tangon)(michal);
            _closure2_slot3 = tangon;
            zuuluu = tangon.apply;
            entity = arguments;
            michal = entity;
            entity = this;
            entity = zuuluu.bind(tangon)(entity, michal);
            return entity;
        };
        var _closure2_slot3 = entity;
        entity = _closure1_slot9;
        yankee = entity.bind(tangon)();
        foxtra = _closure1_slot0;
        backup = _closure1_slot2;
        entity = 6;
        entity = backup[entity];
        michal = foxtra.bind(tangon)(entity);
        entity = michal.useNavigation;
        entity = entity.bind(michal)();
        _closure2_slot1 = entity;
        zuuluu = _closure1_slot5;
        michal = zuuluu.useState;
        entity = false;
        zuuluu = michal.bind(zuuluu)(entity);
        michal = _closure1_slot4;
        entity = 2;
        michal = michal.bind(tangon)(zuuluu, entity);
        entity = 0;
        romeon = michal[entity];
        entity = 1;
        entity = michal[entity];
        _closure2_slot2 = entity;
        zuuluu = _closure1_slot8;
        entity = 7;
        entity = backup[entity];
        entity = foxtra.bind(tangon)(entity);
        michal = entity.SafeAreaPaddingView;
        entity = {};
        report = true;
        entity['top'] = report;
        report = yankee.container;
        entity['style'] = report;
        option = _closure1_slot7;
        report = 8;
        report = backup[report];
        report = foxtra.bind(tangon)(report);
        oscard = report.Text;
        report = {'style': null, 'variant': 'heading-xl/extrabold', 'color': 'header-primary'};
        golfie = yankee.header;
        report['style'] = golfie;
        offset = 9;
        golfie = backup[offset];
        golfie = foxtra.bind(tangon)(golfie);
        output = golfie.intl;
        sizing = output.format;
        golfie = backup[offset];
        golfie = foxtra.bind(tangon)(golfie);
        golfie = golfie.t;
        kiloes = golfie.wumolZ;
        golfie = {};
        golfie['age'] = result;
        golfie = sizing.bind(output)(kiloes, golfie);
        report['children'] = golfie;
        oscard = option.bind(tangon)(oscard, report);
        report = new Array(3);
        report[0] = oscard;
        oscard = 10;
        oscard = backup[oscard];
        oscard = foxtra.bind(tangon)(oscard);
        kiloes = oscard.TextWithIOSLinkWorkaround;
        oscard = {'style': null, 'variant': 'text-md/medium', 'color': 'interactive-normal'};
        golfie = yankee.body;
        oscard['style'] = golfie;
        golfie = backup[offset];
        golfie = foxtra.bind(tangon)(golfie);
        echoed = golfie.intl;
        result = echoed.format;
        golfie = backup[offset];
        golfie = foxtra.bind(tangon)(golfie);
        golfie = golfie.t;
        output = golfie.n3QjDA;
        sizing = {};
        golfie = _closure1_slot1;
        source = 11;
        source = backup[source];
        ctrled = golfie.bind(tangon)(source);
        source = ctrled.getArticleURL;
        update = _closure1_slot6;
        update = update.AGE_GATE;
        update = source.bind(ctrled)(update);
        sizing['helpURL'] = update;
        sizing = result.bind(echoed)(output, sizing);
        oscard['children'] = sizing;
        oscard = option.bind(tangon)(kiloes, oscard);
        report[1] = oscard;
        oscard = 12;
        oscard = backup[oscard];
        golfie = golfie.bind(tangon)(oscard);
        oscard = {};
        oscard['loading'] = romeon;
        yankee = yankee.button;
        oscard['style'] = yankee;
        yankee = backup[offset];
        yankee = foxtra.bind(tangon)(yankee);
        romeon = yankee.intl;
        yankee = romeon.string;
        offset = backup[offset];
        offset = foxtra.bind(tangon)(offset);
        offset = offset.t;
        offset = offset.6tahio;
        offset = yankee.bind(romeon)(offset);
        oscard['text'] = offset;
        verify = function() { // Original name: handleConfirm
            entity = undefined;
            tangon = _closure2_slot3;
            zuuluu = tangon.apply;
            entity = arguments;
            michal = entity;
            entity = this;
            entity = zuuluu.bind(tangon)(entity, michal);
            return entity;
        };
        oscard['onPress'] = verify;
        oscard = option.bind(tangon)(golfie, oscard);
        report[2] = oscard;
        entity['children'] = report;
        entity = zuuluu.bind(tangon)(michal, entity);
        return entity;
    };
    zuuluu['default'] = michal;
    return entity;
})();