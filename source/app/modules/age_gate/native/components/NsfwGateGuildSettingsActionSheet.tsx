// app/modules/age_gate/native/components/NsfwGateGuildSettingsActionSheet.tsx
export default (function(argFoo, argBar, argBaz, argCorge, _, argFred, argPlugh) {
    report = argBar;
    zulu = argFred;
    oscar = argPlugh;
    var _closure1_slot0 = report;
    entity = argBaz;
    var _closure1_slot1 = entity;
    var _closure1_slot2 = oscar;
    entity = global;
    options = entity.Object;
    golf = options.defineProperty;
    tango = {};
    entity = true;
    tango['value'] = entity;
    entity = '__esModule';
    entity = golf.bind(options)(zulu, entity, tango);
    entity = 0;
    golf = oscar[entity];
    tango = argCorge;
    entity = undefined;
    tango = tango.bind(entity)(golf);
    tango = 1;
    golf = oscar[tango];
    golf = report.bind(entity)(golf);
    golf = golf.jsx;
    var _closure1_slot3 = golf;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.jsxs;
    var _closure1_slot4 = tango;
    tango = 10;
    tango = oscar[tango];
    oscar = report.bind(entity)(tango);
    report = oscar.fileFinishedImporting;
    tango = 'modules/age_gate/native/components/NsfwGateGuildSettingsActionSheet.tsx';
    tango = report.bind(oscar)(tango);
    mike = function(argFoo) { // Original name: NsfwGateGuildSettingsActionSheet
        entity = argFoo;
        output = entity.guild;
        var _closure2_slot0 = output;
        kilo = _closure1_slot0;
        sizing = _closure1_slot2;
        entity = 2;
        entity = sizing[entity];
        tango = undefined;
        zulu = kilo.bind(tango)(entity);
        mike = zulu.useMessageRequestPrivacyOption;
        entity = {};
        entity['guild'] = output;
        offset = mike.bind(zulu)(entity);
        zulu = _closure1_slot3;
        entity = 3;
        entity = sizing[entity];
        entity = kilo.bind(tango)(entity);
        mike = entity.ActionSheet;
        entity = {};
        oscar = 4;
        oscar = sizing[oscar];
        oscar = kilo.bind(tango)(oscar);
        golf = oscar.BottomSheetTitleHeader;
        oscar = {};
        options = output.name;
        oscar['title'] = options;
        oscar = zulu.bind(tango)(golf, oscar);
        entity['header'] = oscar;
        golf = _closure1_slot4;
        verify = 5;
        report = sizing[verify];
        report = kilo.bind(tango)(report);
        report = report.ActionSheetRow;
        oscar = report.Group;
        report = {};
        options = false;
        report['hasIcons'] = options;
        options = sizing[verify];
        options = kilo.bind(tango)(options);
        foxtrot = options.ActionSheetRow;
        options = {};
        romeo = 6;
        backup = sizing[romeo];
        backup = kilo.bind(tango)(backup);
        echo = backup.intl;
        result = echo.string;
        backup = sizing[romeo];
        backup = kilo.bind(tango)(backup);
        backup = backup.t;
        backup = backup.h850Sk;
        backup = result.bind(echo)(backup);
        options['label'] = backup;
        backup = function() { // Original name: onPress
            zulu = _closure1_slot1;
            tango = _closure1_slot2;
            entity = 7;
            mike = tango[entity];
            entity = undefined;
            report = zulu.bind(entity)(mike);
            mike = report.hideActionSheet;
            mike = mike.bind(report)();
            mike = 8;
            mike = tango[mike];
            tango = zulu.bind(entity)(mike);
            zulu = tango.open;
            mike = _closure2_slot0;
            mike = mike.id;
            mike = zulu.bind(tango)(mike);
            return entity;
        };
        options['onPress'] = backup;
        foxtrot = zulu.bind(tango)(foxtrot, options);
        options = new Array(4);
        options[0] = foxtrot;
        foxtrot = 9;
        foxtrot = sizing[foxtrot];
        foxtrot = kilo.bind(tango)(foxtrot);
        backup = foxtrot.RestrictedGuildPrivacyOption;
        foxtrot = {};
        foxtrot['guild'] = output;
        foxtrot = zulu.bind(tango)(backup, foxtrot);
        options[1] = foxtrot;
        options[2] = offset;
        verify = sizing[verify];
        verify = kilo.bind(tango)(verify);
        offset = verify.ActionSheetRow;
        verify = {};
        foxtrot = 'danger';
        verify['variant'] = foxtrot;
        foxtrot = sizing[romeo];
        foxtrot = kilo.bind(tango)(foxtrot);
        backup = foxtrot.intl;
        foxtrot = backup.string;
        romeo = sizing[romeo];
        romeo = kilo.bind(tango)(romeo);
        romeo = romeo.t;
        romeo = romeo.J2TBi4;
        romeo = foxtrot.bind(backup)(romeo);
        verify['label'] = romeo;
        yankee = function() { // Original name: onPress
            zulu = _closure1_slot0;
            mike = _closure1_slot2;
            entity = 9;
            mike = mike[entity];
            entity = undefined;
            zulu = zulu.bind(entity)(mike);
            mike = zulu.handleLeaveServer;
            entity = _closure2_slot0;
            entity = mike.bind(zulu)(entity);
            return entity;
        };
        verify['onPress'] = yankee;
        verify = zulu.bind(tango)(offset, verify);
        options[3] = verify;
        report['children'] = options;
        report = golf.bind(tango)(oscar, report);
        entity['children'] = report;
        entity = zulu.bind(tango)(mike, entity);
        return entity;
    };
    zulu['default'] = mike;
    return entity;
})();