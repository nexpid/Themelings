// app/modules/age_gate/native/components/NsfwGateGuildSettingsActionSheet.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    report = argBar;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    entity = argBaz;
    var _closure1_slot1 = entity;
    var _closure1_slot2 = oscard;
    entity = global;
    option = entity.Object;
    golfie = option.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(option)(zuuluu, entity, tangon);
    entity = 0;
    golfie = oscard[entity];
    tangon = argCor;
    entity = undefined;
    tangon = tangon.bind(entity)(golfie);
    tangon = 1;
    golfie = oscard[tangon];
    golfie = report.bind(entity)(golfie);
    golfie = golfie.jsx;
    var _closure1_slot3 = golfie;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.jsxs;
    var _closure1_slot4 = tangon;
    tangon = 10;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/age_gate/native/components/NsfwGateGuildSettingsActionSheet.tsx';
    tangon = report.bind(oscard)(tangon);
    michal = function(argFoo) { // Original name: NsfwGateGuildSettingsActionSheet
        entity = argFoo;
        output = entity.guild;
        var _closure2_slot0 = output;
        kiloes = _closure1_slot0;
        sizing = _closure1_slot2;
        entity = 2;
        entity = sizing[entity];
        tangon = undefined;
        zuuluu = kiloes.bind(tangon)(entity);
        michal = zuuluu.useMessageRequestPrivacyOption;
        entity = {};
        entity['guild'] = output;
        offset = michal.bind(zuuluu)(entity);
        zuuluu = _closure1_slot3;
        entity = 3;
        entity = sizing[entity];
        entity = kiloes.bind(tangon)(entity);
        michal = entity.ActionSheet;
        entity = {};
        oscard = 4;
        oscard = sizing[oscard];
        oscard = kiloes.bind(tangon)(oscard);
        golfie = oscard.BottomSheetTitleHeader;
        oscard = {};
        option = output.name;
        oscard['title'] = option;
        oscard = zuuluu.bind(tangon)(golfie, oscard);
        entity['header'] = oscard;
        golfie = _closure1_slot4;
        verify = 5;
        report = sizing[verify];
        report = kiloes.bind(tangon)(report);
        report = report.ActionSheetRow;
        oscard = report.Group;
        report = {};
        option = false;
        report['hasIcons'] = option;
        option = sizing[verify];
        option = kiloes.bind(tangon)(option);
        foxtra = option.ActionSheetRow;
        option = {};
        romeon = 6;
        backup = sizing[romeon];
        backup = kiloes.bind(tangon)(backup);
        echoed = backup.intl;
        result = echoed.string;
        backup = sizing[romeon];
        backup = kiloes.bind(tangon)(backup);
        backup = backup.t;
        backup = backup.h850Sk;
        backup = result.bind(echoed)(backup);
        option['label'] = backup;
        backup = function() { // Original name: onPress
            zuuluu = _closure1_slot1;
            tangon = _closure1_slot2;
            entity = 7;
            michal = tangon[entity];
            entity = undefined;
            report = zuuluu.bind(entity)(michal);
            michal = report.hideActionSheet;
            michal = michal.bind(report)();
            michal = 8;
            michal = tangon[michal];
            tangon = zuuluu.bind(entity)(michal);
            zuuluu = tangon.open;
            michal = _closure2_slot0;
            michal = michal.id;
            michal = zuuluu.bind(tangon)(michal);
            return entity;
        };
        option['onPress'] = backup;
        foxtra = zuuluu.bind(tangon)(foxtra, option);
        option = new Array(4);
        option[0] = foxtra;
        foxtra = 9;
        foxtra = sizing[foxtra];
        foxtra = kiloes.bind(tangon)(foxtra);
        backup = foxtra.RestrictedGuildPrivacyOption;
        foxtra = {};
        foxtra['guild'] = output;
        foxtra = zuuluu.bind(tangon)(backup, foxtra);
        option[1] = foxtra;
        option[2] = offset;
        verify = sizing[verify];
        verify = kiloes.bind(tangon)(verify);
        offset = verify.ActionSheetRow;
        verify = {};
        foxtra = 'danger';
        verify['variant'] = foxtra;
        foxtra = sizing[romeon];
        foxtra = kiloes.bind(tangon)(foxtra);
        backup = foxtra.intl;
        foxtra = backup.string;
        romeon = sizing[romeon];
        romeon = kiloes.bind(tangon)(romeon);
        romeon = romeon.t;
        romeon = romeon.J2TBi4;
        romeon = foxtra.bind(backup)(romeon);
        verify['label'] = romeon;
        yankee = function() { // Original name: onPress
            zuuluu = _closure1_slot0;
            michal = _closure1_slot2;
            entity = 9;
            michal = michal[entity];
            entity = undefined;
            zuuluu = zuuluu.bind(entity)(michal);
            michal = zuuluu.handleLeaveServer;
            entity = _closure2_slot0;
            entity = michal.bind(zuuluu)(entity);
            return entity;
        };
        verify['onPress'] = yankee;
        verify = zuuluu.bind(tangon)(offset, verify);
        option[3] = verify;
        report['children'] = option;
        report = golfie.bind(tangon)(oscard, report);
        entity['children'] = report;
        entity = zuuluu.bind(tangon)(michal, entity);
        return entity;
    };
    zuuluu['default'] = michal;
    return entity;
})();