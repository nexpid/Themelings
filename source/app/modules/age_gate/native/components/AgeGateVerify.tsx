// app/modules/age_gate/native/components/AgeGateVerify.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    report = argBar;
    romeon = argBaz;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    var _closure1_slot1 = romeon;
    var _closure1_slot2 = oscard;
    entity = global;
    option = entity.Object;
    golfie = option.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(option)(zuuluu, entity, tangon);
    entity = 0;
    golfie = oscard[entity];
    tangon = argCor;
    entity = undefined;
    tangon = tangon.bind(entity)(golfie);
    tangon = 1;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.Image;
    var _closure1_slot3 = tangon;
    tangon = 2;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.AgeGateSource;
    var _closure1_slot4 = tangon;
    tangon = 3;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    golfie = tangon.jsx;
    var _closure1_slot5 = golfie;
    tangon = tangon.jsxs;
    var _closure1_slot6 = tangon;
    tangon = 4;
    tangon = oscard[tangon];
    option = report.bind(entity)(tangon);
    golfie = option.createStyles;
    tangon = {};
    verify = {'padding': null, 'flex': 1, 'alignItems': 'center', 'justifyContent': 'center'};
    yankee = 5;
    offset = oscard[yankee];
    offset = romeon.bind(entity)(offset);
    offset = offset.spacing;
    offset = offset.PX_16;
    verify['padding'] = offset;
    offset = 'center';
    yankee = oscard[yankee];
    yankee = romeon.bind(entity)(yankee);
    yankee = yankee.spacing;
    yankee = yankee.PX_16;
    verify['gap'] = yankee;
    tangon['container'] = verify;
    verify = {};
    verify['textAlign'] = offset;
    tangon['header'] = verify;
    verify = {};
    verify['textAlign'] = offset;
    tangon['body'] = verify;
    verify = {'width': '100%', 'flexGrow': 0};
    tangon['button'] = verify;
    tangon = golfie.bind(option)(tangon);
    var _closure1_slot7 = tangon;
    tangon = 14;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/age_gate/native/components/AgeGateVerify.tsx';
    tangon = report.bind(oscard)(tangon);
    michal = function(argFoo) { // Original name: AgeGateVerify
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            entity = argFoo;
            michal = entity.source;
            entity = _closure1_slot7;
            tangon = undefined;
            offset = entity.bind(tangon)();
            zuuluu = _closure1_slot0;
            report = _closure1_slot2;
            entity = 6;
            entity = report[entity];
            zuuluu = zuuluu.bind(tangon)(entity);
            entity = zuuluu.useAgeGateVerifyContent;
            entity = entity.bind(zuuluu)(michal);
            verify = entity.verifyAgreementButtonText;
            foxtra = entity.verifyGateDescription;
            entity = _closure1_slot4;
            entity = entity.NSFW_SERVER;
            backup = michal === entity;
            if(backup) { _fun00002_ip = 95; continue _fun00001 }
 81:
            entity = _closure1_slot4;
            entity = entity.NSFW_SERVER_INVITE;
            backup = michal === entity;
 95:
            if(backup) { _fun00002_ip = 112; continue _fun00001 }
 98:
            entity = _closure1_slot4;
            entity = entity.NSFW_SERVER_INVITE_EMBED;
            backup = michal === entity;
 112:
            zuuluu = _closure1_slot6;
            yankee = _closure1_slot0;
            option = _closure1_slot2;
            entity = 7;
            entity = option[entity];
            entity = yankee.bind(tangon)(entity);
            michal = entity.SafeAreaPaddingView;
            entity = {};
            report = true;
            entity['top'] = report;
            report = offset.container;
            entity['style'] = report;
            romeon = _closure1_slot5;
            golfie = _closure1_slot3;
            report = {};
            sizing = _closure1_slot1;
            kiloes = 8;
            kiloes = option[kiloes];
            kiloes = sizing.bind(tangon)(kiloes);
            report['source'] = kiloes;
            golfie = romeon.bind(tangon)(golfie, report);
            report = new Array(4);
            report[0] = golfie;
            golfie = 9;
            option = option[golfie];
            option = yankee.bind(tangon)(option);
            yankee = option.Text;
            option = {'style': null, 'variant': 'heading-xl/extrabold', 'color': 'header-primary'};
            kiloes = offset.header;
            option['style'] = kiloes;
            result = _closure1_slot0;
            echoed = _closure1_slot2;
            kiloes = 10;
            sizing = echoed[kiloes];
            sizing = result.bind(tangon)(sizing);
            output = sizing.intl;
            sizing = output.string;
            kiloes = echoed[kiloes];
            kiloes = result.bind(tangon)(kiloes);
            kiloes = kiloes.t;
            if(backup) { _fun00002_ip = 301; continue _fun00001 }
 288:
            backup = kiloes.ZmwvDQ;
            backup = sizing.bind(output)(backup);
            _fun00002_ip = 314; continue _fun00001;
 301:
            kiloes = kiloes.xi46lp;
            backup = sizing.bind(output)(kiloes);
 314:
            option['children'] = backup;
            option = romeon.bind(tangon)(yankee, option);
            report[1] = option;
            option = _closure1_slot5;
            romeon = _closure1_slot0;
            yankee = _closure1_slot2;
            golfie = yankee[golfie];
            golfie = romeon.bind(tangon)(golfie);
            romeon = golfie.Text;
            golfie = {'style': null, 'variant': 'text-md/medium', 'color': 'interactive-normal'};
            backup = offset.body;
            golfie['style'] = backup;
            golfie['children'] = foxtra;
            golfie = option.bind(tangon)(romeon, golfie);
            report[2] = golfie;
            golfie = _closure1_slot1;
            oscard = 11;
            oscard = yankee[oscard];
            golfie = golfie.bind(tangon)(oscard);
            oscard = {};
            offset = offset.button;
            oscard['style'] = offset;
            oscard['text'] = verify;
            verify = function() { // Original name: onPress
                tangon = _closure1_slot1;
                oscard = _closure1_slot2;
                entity = 12;
                zuuluu = oscard[entity];
                entity = undefined;
                tangon = tangon.bind(entity)(zuuluu);
                zuuluu = tangon.showAgeVerificationGetStartedModal;
                report = _closure1_slot0;
                michal = 13;
                michal = oscard[michal];
                michal = report.bind(entity)(michal);
                michal = michal.AgeVerificationModalEntryPoint;
                michal = michal.NSFW_AGE_GATE;
                michal = zuuluu.bind(tangon)(michal);
                return entity;
            };
            oscard['onPress'] = verify;
            oscard = option.bind(tangon)(golfie, oscard);
            report[3] = oscard;
            entity['children'] = report;
            entity = zuuluu.bind(tangon)(michal, entity);
            return entity;
        }
    };
    zuuluu['default'] = michal;
    return entity;
})();