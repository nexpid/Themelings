// app/modules/age_gate/native/components/AgeGateVerify.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    report = argBar;
    romeon = argBaz;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    var _closure1_slot1 = romeon;
    var _closure1_slot2 = oscard;
    entity = global;
    option = entity.Object;
    golfie = option.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(option)(zuuluu, entity, tangon);
    entity = 0;
    golfie = oscard[entity];
    tangon = argCor;
    entity = undefined;
    tangon = tangon.bind(entity)(golfie);
    tangon = 1;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.Image;
    var _closure1_slot3 = tangon;
    tangon = 2;
    golfie = oscard[tangon];
    golfie = report.bind(entity)(golfie);
    golfie = golfie.jsx;
    var _closure1_slot4 = golfie;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.jsxs;
    var _closure1_slot5 = tangon;
    tangon = 3;
    tangon = oscard[tangon];
    option = report.bind(entity)(tangon);
    golfie = option.createStyles;
    tangon = {};
    verify = {'padding': null, 'flex': 1, 'alignItems': 'center', 'justifyContent': 'center'};
    yankee = 4;
    offset = oscard[yankee];
    offset = romeon.bind(entity)(offset);
    offset = offset.spacing;
    offset = offset.PX_16;
    verify['padding'] = offset;
    offset = 'center';
    yankee = oscard[yankee];
    yankee = romeon.bind(entity)(yankee);
    yankee = yankee.spacing;
    yankee = yankee.PX_16;
    verify['gap'] = yankee;
    tangon['container'] = verify;
    verify = {};
    verify['textAlign'] = offset;
    tangon['header'] = verify;
    verify = {};
    verify['textAlign'] = offset;
    tangon['body'] = verify;
    verify = {'width': '100%', 'flexGrow': 0};
    tangon['button'] = verify;
    tangon = golfie.bind(option)(tangon);
    var _closure1_slot6 = tangon;
    tangon = 12;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/age_gate/native/components/AgeGateVerify.tsx';
    tangon = report.bind(oscard)(tangon);
    michal = function(argFoo) { // Original name: AgeGateVerify
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            michal = argFoo;
            entity = null;
            if(!(michal != entity)) { _fun00002_ip = 427; continue _fun00001 }
 12:
            entity = _closure1_slot6;
            report = undefined;
            yankee = entity.bind(report)();
            tangon = _closure1_slot5;
            foxtra = _closure1_slot0;
            backup = _closure1_slot2;
            entity = 5;
            entity = backup[entity];
            entity = foxtra.bind(report)(entity);
            zuuluu = entity.SafeAreaPaddingView;
            entity = {};
            oscard = true;
            entity['top'] = oscard;
            oscard = yankee.container;
            entity['style'] = oscard;
            verify = _closure1_slot4;
            golfie = _closure1_slot3;
            oscard = {};
            option = _closure1_slot1;
            offset = 6;
            offset = backup[offset];
            offset = option.bind(report)(offset);
            oscard['source'] = offset;
            golfie = verify.bind(report)(golfie, oscard);
            oscard = new Array(4);
            oscard[0] = golfie;
            golfie = 7;
            offset = backup[golfie];
            offset = foxtra.bind(report)(offset);
            kiloes = offset.Text;
            romeon = {'style': null, 'variant': 'heading-xl/extrabold', 'color': 'header-primary'};
            offset = yankee.header;
            romeon['style'] = offset;
            offset = 8;
            sizing = backup[offset];
            sizing = foxtra.bind(report)(sizing);
            result = sizing.intl;
            output = result.string;
            sizing = backup[offset];
            sizing = foxtra.bind(report)(sizing);
            sizing = sizing.t;
            sizing = sizing.ZmwvDQ;
            sizing = output.bind(result)(sizing);
            romeon['children'] = sizing;
            romeon = verify.bind(report)(kiloes, romeon);
            oscard[1] = romeon;
            golfie = backup[golfie];
            golfie = foxtra.bind(report)(golfie);
            romeon = golfie.Text;
            golfie = {'style': null, 'variant': 'text-md/medium', 'color': 'interactive-normal'};
            kiloes = yankee.body;
            golfie['style'] = kiloes;
            kiloes = backup[offset];
            kiloes = foxtra.bind(report)(kiloes);
            output = kiloes.intl;
            sizing = output.string;
            kiloes = backup[offset];
            kiloes = foxtra.bind(report)(kiloes);
            kiloes = kiloes.t;
            kiloes = kiloes.NjO/s7;
            kiloes = sizing.bind(output)(kiloes);
            golfie['children'] = kiloes;
            golfie = verify.bind(report)(romeon, golfie);
            oscard[2] = golfie;
            golfie = 9;
            golfie = backup[golfie];
            option = option.bind(report)(golfie);
            golfie = {};
            yankee = yankee.button;
            golfie['style'] = yankee;
            yankee = backup[offset];
            yankee = foxtra.bind(report)(yankee);
            romeon = yankee.intl;
            yankee = romeon.string;
            offset = backup[offset];
            offset = foxtra.bind(report)(offset);
            offset = offset.t;
            offset = offset.SFWVER;
            offset = yankee.bind(romeon)(offset);
            golfie['text'] = offset;
            offset = function() { // Original name: onPress
                tangon = _closure1_slot1;
                oscard = _closure1_slot2;
                entity = 10;
                zuuluu = oscard[entity];
                entity = undefined;
                tangon = tangon.bind(entity)(zuuluu);
                zuuluu = tangon.showAgeVerificationGetStartedModal;
                report = _closure1_slot0;
                michal = 11;
                michal = oscard[michal];
                michal = report.bind(entity)(michal);
                michal = michal.AgeVerificationModalEntryPoint;
                michal = michal.NSFW_CHANNEL;
                michal = zuuluu.bind(tangon)(michal);
                return entity;
            };
            golfie['onPress'] = offset;
            golfie = verify.bind(report)(option, golfie);
            oscard[3] = golfie;
            entity['children'] = oscard;
            entity = tangon.bind(report)(zuuluu, entity);
            return entity;
 427:
            echoed = "Cannot destructure 'undefined' or 'null'.";
            update = michal;
            entity = throwTypeError(update, echoed);
            entity = undefined;
            throw entity;
        }
    };
    zuuluu['default'] = michal;
    return entity;
})();