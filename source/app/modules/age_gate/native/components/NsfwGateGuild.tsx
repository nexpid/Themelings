// app/modules/age_gate/native/components/NsfwGateGuild.tsx
export default (function(argFoo, argBar, argBaz, argCorge, _, argFred, argPlugh) {
    report = argBar;
    romeo = argBaz;
    zulu = argFred;
    oscar = argPlugh;
    var _closure1_slot0 = report;
    var _closure1_slot1 = romeo;
    var _closure1_slot2 = oscar;
    entity = global;
    options = entity.Object;
    golf = options.defineProperty;
    tango = {};
    entity = true;
    tango['value'] = entity;
    entity = '__esModule';
    entity = golf.bind(options)(zulu, entity, tango);
    entity = 0;
    golf = oscar[entity];
    tango = argCorge;
    entity = undefined;
    tango = tango.bind(entity)(golf);
    var _closure1_slot3 = tango;
    tango = 1;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    golf = tango.View;
    var _closure1_slot4 = golf;
    tango = tango.Image;
    var _closure1_slot5 = tango;
    tango = 2;
    tango = oscar[tango];
    tango = romeo.bind(entity)(tango);
    var _closure1_slot6 = tango;
    tango = 3;
    tango = oscar[tango];
    tango = romeo.bind(entity)(tango);
    var _closure1_slot7 = tango;
    tango = 4;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.NsfwGateSource;
    var _closure1_slot8 = tango;
    tango = 5;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    golf = tango.AnalyticEvents;
    var _closure1_slot9 = golf;
    tango = tango.HelpdeskArticles;
    var _closure1_slot10 = tango;
    tango = 6;
    golf = oscar[tango];
    golf = report.bind(entity)(golf);
    golf = golf.jsx;
    var _closure1_slot11 = golf;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.jsxs;
    var _closure1_slot12 = tango;
    tango = 7;
    tango = oscar[tango];
    options = report.bind(entity)(tango);
    golf = options.createStyles;
    tango = {};
    verify = {'flex': 1, 'alignItems': 'center', 'justifyContent': 'center', 'padding': 16};
    offset = 16;
    yankee = 8;
    yankee = oscar[yankee];
    yankee = romeo.bind(entity)(yankee);
    yankee = yankee.colors;
    yankee = yankee.BACKGROUND_PRIMARY;
    verify['backgroundColor'] = yankee;
    tango['container'] = verify;
    verify = {'textAlign': 'center', 'marginBottom': 8};
    tango['header'] = verify;
    verify = {'textAlign': 'center', 'marginBottom': 16};
    tango['description'] = verify;
    verify = {};
    verify['marginBottom'] = offset;
    tango['image'] = verify;
    tango = golf.bind(options)(tango);
    var _closure1_slot13 = tango;
    tango = 17;
    tango = oscar[tango];
    oscar = report.bind(entity)(tango);
    report = oscar.fileFinishedImporting;
    tango = 'modules/age_gate/native/components/NsfwGateGuild.tsx';
    tango = report.bind(oscar)(tango);
    mike = function(argFoo) { // Original name: _default
        mike = argFoo;
        backup = mike.onClose;
        options = mike.guildId;
        var _closure2_slot0 = options;
        mike = _closure1_slot13;
        tango = undefined;
        kilo = mike.bind(tango)();
        romeo = _closure1_slot0;
        foxtrot = _closure1_slot2;
        verify = 9;
        mike = foxtrot[verify];
        mike = romeo.bind(tango)(mike);
        report = mike.intl;
        zulu = report.string;
        mike = foxtrot[verify];
        mike = romeo.bind(tango)(mike);
        mike = mike.t;
        mike = mike.vAymlJ;
        result = zulu.bind(report)(mike);
        mike = foxtrot[verify];
        mike = romeo.bind(tango)(mike);
        report = mike.intl;
        zulu = report.string;
        mike = foxtrot[verify];
        mike = romeo.bind(tango)(mike);
        mike = mike.t;
        mike = mike.Crj6eH;
        output = zulu.bind(report)(mike);
        mike = foxtrot[verify];
        mike = romeo.bind(tango)(mike);
        golf = mike.intl;
        report = golf.format;
        mike = foxtrot[verify];
        mike = romeo.bind(tango)(mike);
        mike = mike.t;
        zulu = mike.Z12LNT;
        mike = {};
        yankee = _closure1_slot1;
        offset = 10;
        offset = foxtrot[offset];
        echo = yankee.bind(tango)(offset);
        sizing = echo.getArticleURL;
        offset = _closure1_slot10;
        offset = offset.NSFW_GUILD_GUIDELINES;
        offset = sizing.bind(echo)(offset);
        mike['helpURL'] = offset;
        offset = report.bind(golf)(zulu, mike);
        zulu = _closure1_slot7;
        mike = zulu.getCurrentUser;
        golf = mike.bind(zulu)();
        var _closure2_slot1 = golf;
        report = _closure1_slot3;
        zulu = report.useEffect;
        mike = new Array(2);
        mike[0] = options;
        mike[1] = golf;
        entity = function() {
            _fun78165: for(var _fun78165_ip = 0; ; ) switch(_fun78165_ip) {
 0:
                zulu = _closure1_slot1;
                mike = _closure1_slot2;
                entity = 11;
                mike = mike[entity];
                entity = undefined;
                report = zulu.bind(entity)(mike);
                tango = report.track;
                mike = _closure1_slot9;
                zulu = mike.GUILD_NSFW_GATE_VIEWED;
                mike = {};
                golf = _closure2_slot0;
                mike['guild_id'] = golf;
                golf = _closure2_slot1;
                verify = null;
                offset = verify == golf;
                golf = undefined;
                if(offset) { _fun78165_ip = 77; continue _fun78165 }
 68:
                offset = _closure2_slot1;
                golf = offset.id;
 77:
                mike['user_id'] = golf;
                romeo = _closure1_slot6;
                yankee = romeo.isMember;
                offset = _closure2_slot0;
                golf = _closure2_slot1;
                foxtrot = verify == golf;
                golf = undefined;
                if(foxtrot) { _fun78165_ip = 118; continue _fun78165 }
 109:
                foxtrot = _closure2_slot1;
                golf = foxtrot.id;
 118:
                golf = yankee.bind(romeo)(offset, golf);
                mike['is_member'] = golf;
                golf = _closure2_slot1;
                verify = verify == golf;
                golf = undefined;
                if(verify) { _fun78165_ip = 152; continue _fun78165 }
 142:
                options = _closure2_slot1;
                golf = options.nsfwAllowed;
 152:
                if(!golf) { _fun78165_ip = 191; continue _fun78165 }
 155:
                verify = _closure1_slot0;
                offset = _closure1_slot2;
                options = 12;
                options = offset[options];
                options = verify.bind(entity)(options);
                verify = options.ViewNsfwGuilds;
                options = verify.getSetting;
                golf = options.bind(verify)();
 191:
                mike['is_user_opted_in_to_age_restricted_servers'] = golf;
                oscar = _closure1_slot8;
                oscar = oscar.MODAL;
                mike['source'] = oscar;
                mike = tango.bind(report)(zulu, mike);
                return entity;
            }
        };
        entity = zulu.bind(report)(entity, mike);
        zulu = _closure1_slot12;
        mike = _closure1_slot4;
        entity = {};
        report = kilo.container;
        entity['style'] = report;
        options = _closure1_slot11;
        report = 13;
        report = foxtrot[report];
        golf = yankee.bind(tango)(report);
        report = {};
        golf = options.bind(tango)(golf, report);
        report = new Array(6);
        report[0] = golf;
        golf = _closure1_slot5;
        oscar = {};
        sizing = 14;
        sizing = foxtrot[sizing];
        sizing = yankee.bind(tango)(sizing);
        oscar['source'] = sizing;
        sizing = kilo.image;
        oscar['style'] = sizing;
        oscar = options.bind(tango)(golf, oscar);
        report[1] = oscar;
        oscar = 15;
        golf = foxtrot[oscar];
        golf = romeo.bind(tango)(golf);
        sizing = golf.Text;
        golf = {'style': null, 'variant': 'heading-xl/extrabold', 'color': 'header-primary'};
        echo = kilo.header;
        golf['style'] = echo;
        golf['children'] = result;
        golf = options.bind(tango)(sizing, golf);
        report[2] = golf;
        golf = foxtrot[oscar];
        golf = romeo.bind(tango)(golf);
        sizing = golf.Text;
        golf = {'style': null, 'variant': 'text-md/normal', 'color': 'header-secondary'};
        result = kilo.description;
        golf['style'] = result;
        golf['children'] = output;
        golf = options.bind(tango)(sizing, golf);
        report[3] = golf;
        oscar = foxtrot[oscar];
        oscar = romeo.bind(tango)(oscar);
        golf = oscar.Text;
        oscar = {'style': null, 'variant': 'text-md/normal', 'color': 'header-secondary'};
        kilo = kilo.description;
        oscar['style'] = kilo;
        oscar['children'] = offset;
        oscar = options.bind(tango)(golf, oscar);
        report[4] = oscar;
        offset = 16;
        oscar = foxtrot[offset];
        golf = yankee.bind(tango)(oscar);
        oscar = {};
        oscar['onPress'] = backup;
        backup = {};
        backup['flexGrow'] = tango;
        oscar['style'] = backup;
        backup = foxtrot[offset];
        backup = yankee.bind(tango)(backup);
        backup = backup.Colors;
        backup = backup.BRAND;
        oscar['color'] = backup;
        offset = foxtrot[offset];
        offset = yankee.bind(tango)(offset);
        offset = offset.Sizes;
        offset = offset.MEDIUM;
        oscar['size'] = offset;
        offset = foxtrot[verify];
        offset = romeo.bind(tango)(offset);
        yankee = offset.intl;
        offset = yankee.string;
        verify = foxtrot[verify];
        verify = romeo.bind(tango)(verify);
        verify = verify.t;
        verify = verify.gRqiWV;
        verify = offset.bind(yankee)(verify);
        oscar['text'] = verify;
        oscar = options.bind(tango)(golf, oscar);
        report[5] = oscar;
        entity['children'] = report;
        entity = zulu.bind(tango)(mike, entity);
        return entity;
    };
    zulu['default'] = mike;
    return entity;
})();