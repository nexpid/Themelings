// app/modules/age_gate/native/components/NsfwGateChat.tsx
export default (function(_, argBar, argBaz, argCorge, __, argFred, argPlugh) {
    report = argBar;
    yankee = argBaz;
    zulu = argFred;
    oscar = argPlugh;
    var _closure1_slot0 = report;
    var _closure1_slot1 = yankee;
    var _closure1_slot2 = oscar;
    entity = global;
    options = entity.Object;
    golf = options.defineProperty;
    tango = {};
    entity = true;
    tango['value'] = entity;
    entity = '__esModule';
    entity = golf.bind(options)(zulu, entity, tango);
    entity = 0;
    golf = oscar[entity];
    tango = argCorge;
    entity = undefined;
    tango = tango.bind(entity)(golf);
    tango = 1;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    romeo = tango.StyleSheet;
    golf = tango.View;
    var _closure1_slot3 = golf;
    tango = tango.Image;
    var _closure1_slot4 = tango;
    tango = 2;
    golf = oscar[tango];
    golf = report.bind(entity)(golf);
    golf = golf.jsx;
    var _closure1_slot5 = golf;
    golf = oscar[tango];
    golf = report.bind(entity)(golf);
    golf = golf.jsxs;
    var _closure1_slot6 = golf;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.Fragment;
    var _closure1_slot7 = tango;
    tango = 3;
    tango = oscar[tango];
    options = report.bind(entity)(tango);
    golf = options.createStyles;
    tango = {};
    verify = {'flex': 1, 'backgroundColor': null, 'alignItems': 'center', 'justifyContent': 'center'};
    offset = 4;
    foxtrot = oscar[offset];
    foxtrot = yankee.bind(entity)(foxtrot);
    foxtrot = foxtrot.colors;
    foxtrot = foxtrot.BACKGROUND_PRIMARY;
    verify['backgroundColor'] = foxtrot;
    tango['container'] = verify;
    verify = {};
    romeo = romeo.hairlineWidth;
    verify['height'] = romeo;
    offset = oscar[offset];
    offset = yankee.bind(entity)(offset);
    offset = offset.colors;
    offset = offset.BACKGROUND_TERTIARY;
    verify['backgroundColor'] = offset;
    tango['border'] = verify;
    verify = {'marginTop': 16, 'textAlign': 'center'};
    tango['description'] = verify;
    tango = golf.bind(options)(tango);
    var _closure1_slot8 = tango;
    tango = 8;
    tango = oscar[tango];
    oscar = report.bind(entity)(tango);
    report = oscar.fileFinishedImporting;
    tango = 'modules/age_gate/native/components/NsfwGateChat.tsx';
    tango = report.bind(oscar)(tango);
    mike = function() { // Original name: _default
        entity = _closure1_slot8;
        tango = undefined;
        romeo = entity.bind(tango)();
        zulu = _closure1_slot6;
        mike = _closure1_slot7;
        entity = {};
        yankee = _closure1_slot5;
        golf = _closure1_slot3;
        report = {};
        oscar = romeo.border;
        report['style'] = oscar;
        oscar = yankee.bind(tango)(golf, report);
        report = new Array(2);
        report[0] = oscar;
        oscar = {};
        options = romeo.container;
        oscar['style'] = options;
        offset = _closure1_slot4;
        options = {};
        backup = _closure1_slot1;
        sizing = _closure1_slot2;
        foxtrot = 5;
        foxtrot = sizing[foxtrot];
        foxtrot = backup.bind(tango)(foxtrot);
        options['source'] = foxtrot;
        offset = yankee.bind(tango)(offset, options);
        options = new Array(2);
        options[0] = offset;
        kilo = _closure1_slot0;
        verify = 6;
        verify = sizing[verify];
        verify = kilo.bind(tango)(verify);
        offset = verify.Text;
        verify = {'style': null, 'variant': 'text-md/medium', 'color': 'text-muted'};
        romeo = romeo.description;
        verify['style'] = romeo;
        romeo = 7;
        foxtrot = sizing[romeo];
        foxtrot = kilo.bind(tango)(foxtrot);
        backup = foxtrot.intl;
        foxtrot = backup.string;
        romeo = sizing[romeo];
        romeo = kilo.bind(tango)(romeo);
        romeo = romeo.t;
        romeo = romeo.W4Qyxs;
        romeo = foxtrot.bind(backup)(romeo);
        verify['children'] = romeo;
        verify = yankee.bind(tango)(offset, verify);
        options[1] = verify;
        oscar['children'] = options;
        oscar = zulu.bind(tango)(golf, oscar);
        report[1] = oscar;
        entity['children'] = report;
        entity = zulu.bind(tango)(mike, entity);
        return entity;
    };
    zulu['default'] = mike;
    return entity;
})();