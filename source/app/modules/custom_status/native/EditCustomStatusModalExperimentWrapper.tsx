// app/modules/custom_status/native/EditCustomStatusModalExperimentWrapper.tsx
export default (function(argFoo, argBar, argBaz, argCorge, _, argFred, argPlugh) {
    report = argBar;
    zulu = argFred;
    oscar = argPlugh;
    var _closure1_slot0 = report;
    entity = argBaz;
    var _closure1_slot1 = entity;
    var _closure1_slot2 = oscar;
    entity = global;
    options = entity.Object;
    golf = options.defineProperty;
    tango = {};
    entity = true;
    tango['value'] = entity;
    entity = '__esModule';
    entity = golf.bind(options)(zulu, entity, tango);
    entity = 0;
    golf = oscar[entity];
    tango = argCorge;
    entity = undefined;
    tango = tango.bind(entity)(golf);
    tango = 1;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.jsx;
    var _closure1_slot3 = tango;
    tango = function(argFoo, argBar) { // Original name: getScreens
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            entity = argBar;
            var _closure2_slot0 = entity;
            mike = {};
            zulu = {};
            golf = _closure1_slot0;
            offset = _closure1_slot2;
            entity = 2;
            oscar = offset[entity];
            verify = undefined;
            oscar = golf.bind(verify)(oscar);
            yankee = oscar.intl;
            options = yankee.string;
            entity = offset[entity];
            entity = golf.bind(verify)(entity);
            oscar = entity.t;
            entity = argFoo;
            if(entity) { _fun00002_ip = 163; continue _fun00001 }
 68:
            entity = oscar.PwknJC;
            entity = options.bind(yankee)(entity);
            zulu['title'] = entity;
            entity = function() { // Original name: headerTitle
                tango = _closure1_slot3;
                options = _closure1_slot0;
                verify = _closure1_slot2;
                entity = 3;
                entity = verify[entity];
                zulu = undefined;
                entity = options.bind(zulu)(entity);
                mike = entity.Text;
                entity = {'variant': 'redesign/heading-18/bold', 'accessibilityRole': 'header'};
                report = 2;
                oscar = verify[report];
                oscar = options.bind(zulu)(oscar);
                golf = oscar.intl;
                oscar = golf.string;
                report = verify[report];
                report = options.bind(zulu)(report);
                report = report.t;
                report = report.PwknJC;
                report = oscar.bind(golf)(report);
                entity['children'] = report;
                entity = tango.bind(zulu)(mike, entity);
                return entity;
            };
            zulu['headerTitle'] = entity;
            entity = 4;
            entity = offset[entity];
            foxtrot = golf.bind(verify)(entity);
            romeo = foxtrot.getHeaderCloseButton;
            backup = _closure1_slot1;
            entity = 5;
            entity = offset[entity];
            entity = backup.bind(verify)(entity);
            entity = entity.pop;
            entity = romeo.bind(foxtrot)(entity);
            zulu['headerLeft'] = entity;
            entity = function(argFoo, argBar) { // Original name: render
                tango = _closure1_slot3;
                oscar = _closure1_slot1;
                golf = _closure1_slot2;
                entity = 7;
                entity = golf[entity];
                zulu = undefined;
                mike = oscar.bind(zulu)(entity);
                entity = {};
                report = argBar;
                entity['navigation'] = report;
                report = 5;
                report = golf[report];
                report = oscar.bind(zulu)(report);
                report = report.pop;
                entity['onClose'] = report;
                report = _closure2_slot0;
                entity['analyticsLocations'] = report;
                entity = tango.bind(zulu)(mike, entity);
                return entity;
            };
            zulu['render'] = entity;
            mike['root'] = zulu;
            entity = mike;
            _fun00002_ip = 256; continue _fun00001;
 163:
            oscar = oscar.Iuzg8f;
            oscar = options.bind(yankee)(oscar);
            zulu['title'] = oscar;
            oscar = function() { // Original name: headerTitle
                tango = _closure1_slot3;
                options = _closure1_slot0;
                verify = _closure1_slot2;
                entity = 3;
                entity = verify[entity];
                zulu = undefined;
                entity = options.bind(zulu)(entity);
                mike = entity.Text;
                entity = {'variant': 'redesign/heading-18/bold', 'accessibilityRole': 'header'};
                report = 2;
                oscar = verify[report];
                oscar = options.bind(zulu)(oscar);
                golf = oscar.intl;
                oscar = golf.string;
                report = verify[report];
                report = options.bind(zulu)(report);
                report = report.t;
                report = report.Iuzg8f;
                report = oscar.bind(golf)(report);
                entity['children'] = report;
                entity = tango.bind(zulu)(mike, entity);
                return entity;
            };
            zulu['headerTitle'] = oscar;
            oscar = 4;
            oscar = offset[oscar];
            golf = golf.bind(verify)(oscar);
            oscar = golf.getHeaderCloseButton;
            options = _closure1_slot1;
            report = 5;
            report = offset[report];
            report = options.bind(verify)(report);
            report = report.pop;
            report = oscar.bind(golf)(report);
            zulu['headerLeft'] = report;
            tango = function(argFoo, argBar) { // Original name: render
                tango = _closure1_slot3;
                oscar = _closure1_slot1;
                golf = _closure1_slot2;
                entity = 6;
                entity = golf[entity];
                zulu = undefined;
                mike = oscar.bind(zulu)(entity);
                entity = {};
                report = argBar;
                entity['navigation'] = report;
                report = 5;
                report = golf[report];
                report = oscar.bind(zulu)(report);
                report = report.pop;
                entity['onClose'] = report;
                report = _closure2_slot0;
                entity['analyticsLocations'] = report;
                entity = tango.bind(zulu)(mike, entity);
                return entity;
            };
            zulu['render'] = tango;
            mike['root'] = zulu;
            entity = mike;
 256:
            return entity;
        }
    };
    var _closure1_slot4 = tango;
    tango = 10;
    tango = oscar[tango];
    oscar = report.bind(entity)(tango);
    report = oscar.fileFinishedImporting;
    tango = 'modules/custom_status/native/EditCustomStatusModalExperimentWrapper.tsx';
    tango = report.bind(oscar)(tango);
    mike = function(argFoo) { // Original name: EditCustomStatusModalExperimentWrapper
        entity = argFoo;
        verify = entity.location;
        golf = entity.analyticsLocations;
        mike = _closure1_slot0;
        options = _closure1_slot2;
        entity = 8;
        entity = options[entity];
        tango = undefined;
        oscar = mike.bind(tango)(entity);
        zulu = oscar.useIsEligibleForCustomStatusEditPreviewMobileExperiment;
        entity = {};
        entity['location'] = verify;
        oscar = zulu.bind(oscar)(entity);
        zulu = _closure1_slot3;
        entity = 9;
        entity = options[entity];
        entity = mike.bind(tango)(entity);
        mike = entity.Navigator;
        entity = {};
        options = 'root';
        entity['initialRouteName'] = options;
        report = _closure1_slot4;
        report = report.bind(tango)(oscar, golf);
        entity['screens'] = report;
        entity = zulu.bind(tango)(mike, entity);
        return entity;
    };
    zulu['default'] = mike;
    return entity;
})();