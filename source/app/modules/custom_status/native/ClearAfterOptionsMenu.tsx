// app/modules/custom_status/native/ClearAfterOptionsMenu.tsx
export default (function(argFoo, argBar, _, argCorge, __, argFred, argPlugh) {
    report = argBar;
    zulu = argFred;
    oscar = argPlugh;
    var _closure1_slot0 = report;
    var _closure1_slot1 = oscar;
    entity = global;
    options = entity.Object;
    golf = options.defineProperty;
    tango = {};
    entity = true;
    tango['value'] = entity;
    entity = '__esModule';
    entity = golf.bind(options)(zulu, entity, tango);
    entity = 0;
    golf = oscar[entity];
    tango = argCorge;
    entity = undefined;
    tango = tango.bind(entity)(golf);
    var _closure1_slot2 = tango;
    tango = 1;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.ClearAfterValues;
    var _closure1_slot3 = tango;
    tango = 2;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.jsx;
    var _closure1_slot4 = tango;
    tango = 6;
    tango = oscar[tango];
    oscar = report.bind(entity)(tango);
    report = oscar.fileFinishedImporting;
    tango = 'modules/custom_status/native/ClearAfterOptionsMenu.tsx';
    tango = report.bind(oscar)(tango);
    mike = function(argFoo) { // Original name: ClearAfterOptionsMenu
        entity = argFoo;
        options = entity.value;
        oscar = entity.onChange;
        golf = _closure1_slot2;
        tango = golf.useMemo;
        zulu = function() {
            mike = {};
            options = _closure1_slot0;
            verify = _closure1_slot1;
            tango = 3;
            zulu = verify[tango];
            golf = undefined;
            zulu = options.bind(golf)(zulu);
            oscar = zulu.intl;
            report = oscar.string;
            zulu = verify[tango];
            zulu = options.bind(golf)(zulu);
            zulu = zulu.t;
            zulu = zulu.2OyT5O;
            zulu = report.bind(oscar)(zulu);
            mike['name'] = zulu;
            zulu = _closure1_slot3;
            entity = zulu.TODAY;
            mike['value'] = entity;
            entity = new Array(5);
            entity[0] = mike;
            mike = {};
            report = verify[tango];
            report = options.bind(golf)(report);
            yankee = report.intl;
            offset = yankee.formatToPlainString;
            report = verify[tango];
            report = options.bind(golf)(report);
            report = report.t;
            oscar = report.mLs2c3;
            report = {};
            romeo = 4;
            report['hours'] = romeo;
            report = offset.bind(yankee)(oscar, report);
            mike['name'] = report;
            report = zulu.HOURS_4;
            mike['value'] = report;
            entity[1] = mike;
            mike = {};
            report = verify[tango];
            report = options.bind(golf)(report);
            yankee = report.intl;
            offset = yankee.formatToPlainString;
            report = verify[tango];
            report = options.bind(golf)(report);
            report = report.t;
            oscar = report.mLs2c3;
            report = {};
            romeo = 1;
            report['hours'] = romeo;
            report = offset.bind(yankee)(oscar, report);
            mike['name'] = report;
            report = zulu.HOURS_1;
            mike['value'] = report;
            entity[2] = mike;
            mike = {};
            report = verify[tango];
            report = options.bind(golf)(report);
            yankee = report.intl;
            offset = yankee.formatToPlainString;
            report = verify[tango];
            report = options.bind(golf)(report);
            report = report.t;
            oscar = report.pB9E0d;
            report = {};
            romeo = 30;
            report['minutes'] = romeo;
            report = offset.bind(yankee)(oscar, report);
            mike['name'] = report;
            report = zulu.MINUTES_30;
            mike['value'] = report;
            entity[3] = mike;
            mike = {};
            report = verify[tango];
            report = options.bind(golf)(report);
            oscar = report.intl;
            report = oscar.string;
            tango = verify[tango];
            tango = options.bind(golf)(tango);
            tango = tango.t;
            tango = tango.bRn8cn;
            tango = report.bind(oscar)(tango);
            mike['name'] = tango;
            zulu = zulu.DONT_CLEAR;
            mike['value'] = zulu;
            entity[4] = mike;
            return entity;
        };
        mike = new Array(0);
        golf = tango.bind(golf)(zulu, mike);
        tango = _closure1_slot4;
        romeo = _closure1_slot0;
        foxtrot = _closure1_slot1;
        entity = 4;
        entity = foxtrot[entity];
        zulu = undefined;
        entity = romeo.bind(zulu)(entity);
        mike = entity.TableRadioGroup;
        entity = {};
        verify = 3;
        offset = foxtrot[verify];
        offset = romeo.bind(zulu)(offset);
        backup = offset.intl;
        yankee = backup.string;
        offset = foxtrot[verify];
        offset = romeo.bind(zulu)(offset);
        offset = offset.t;
        offset = offset.3h5PBw;
        offset = yankee.bind(backup)(offset);
        entity['title'] = offset;
        offset = foxtrot[verify];
        offset = romeo.bind(zulu)(offset);
        yankee = offset.intl;
        offset = yankee.string;
        verify = foxtrot[verify];
        verify = romeo.bind(zulu)(verify);
        verify = verify.t;
        verify = verify.3h5PBw;
        verify = offset.bind(yankee)(verify);
        entity['accessibilityLabel'] = verify;
        entity['value'] = options;
        entity['onChange'] = oscar;
        oscar = false;
        entity['hasIcons'] = oscar;
        oscar = golf.map;
        report = function(argFoo) {
            entity = argFoo;
            report = entity.value;
            oscar = entity.name;
            tango = _closure1_slot4;
            mike = _closure1_slot0;
            zulu = _closure1_slot1;
            entity = 5;
            entity = zulu[entity];
            zulu = undefined;
            entity = mike.bind(zulu)(entity);
            mike = entity.TableRadioRow;
            entity = {};
            entity['label'] = oscar;
            entity['value'] = report;
            entity = tango.bind(zulu)(mike, entity, report);
            return entity;
        };
        report = oscar.bind(golf)(report);
        entity['children'] = report;
        entity = tango.bind(zulu)(mike, entity);
        return entity;
    };
    zulu['default'] = mike;
    return entity;
})();