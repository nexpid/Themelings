// app/modules/custom_status/native/EditCustomStatusWithPreview.tsx
export default (function(argFoo, argBar, argBaz, argCorge, _, argFred, argPlugh) {
    report = argBar;
    yankee = argBaz;
    zulu = argFred;
    oscar = argPlugh;
    var _closure1_slot0 = report;
    var _closure1_slot1 = yankee;
    var _closure1_slot2 = oscar;
    entity = function(argFoo) { // Original name: ClearInputButton
        entity = argFoo;
        oscar = entity.onPress;
        entity = _closure1_slot14;
        tango = undefined;
        yankee = entity.bind(tango)();
        zulu = _closure1_slot12;
        romeo = _closure1_slot0;
        offset = _closure1_slot2;
        entity = 10;
        entity = offset[entity];
        entity = romeo.bind(tango)(entity);
        mike = entity.PressableOpacity;
        entity = {};
        golf = {'borderRadius': 10, 'paddingLeft': 8};
        entity['style'] = golf;
        golf = 'button';
        entity['accessibilityRole'] = golf;
        golf = 11;
        options = offset[golf];
        options = romeo.bind(tango)(options);
        verify = options.intl;
        options = verify.string;
        golf = offset[golf];
        golf = romeo.bind(tango)(golf);
        golf = golf.t;
        golf = golf.VkKicX;
        golf = options.bind(verify)(golf);
        entity['accessibilityLabel'] = golf;
        entity['onPress'] = oscar;
        oscar = {'top': 8, 'bottom': 8, 'right': 8};
        entity['hitSlop'] = oscar;
        golf = _closure1_slot12;
        verify = _closure1_slot1;
        options = 12;
        report = offset[options];
        oscar = verify.bind(tango)(report);
        report = {};
        romeo = 13;
        romeo = offset[romeo];
        romeo = verify.bind(tango)(romeo);
        report['source'] = romeo;
        yankee = yankee.closeIcon;
        report['style'] = yankee;
        options = offset[options];
        options = verify.bind(tango)(options);
        options = options.Sizes;
        options = options.SMALL;
        report['size'] = options;
        report = golf.bind(tango)(oscar, report);
        entity['children'] = report;
        entity = zulu.bind(tango)(mike, entity);
        return entity;
    };
    var _closure1_slot15 = entity;
    entity = global;
    options = entity.Object;
    golf = options.defineProperty;
    tango = {};
    entity = true;
    tango['value'] = entity;
    entity = '__esModule';
    entity = golf.bind(options)(zulu, entity, tango);
    entity = 0;
    tango = oscar[entity];
    entity = undefined;
    tango = yankee.bind(entity)(tango);
    var _closure1_slot3 = tango;
    tango = 1;
    golf = oscar[tango];
    tango = argCorge;
    tango = tango.bind(entity)(golf);
    var _closure1_slot4 = tango;
    tango = 2;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    golf = tango.View;
    var _closure1_slot5 = golf;
    tango = tango.ScrollView;
    var _closure1_slot6 = tango;
    tango = 3;
    tango = oscar[tango];
    tango = yankee.bind(entity)(tango);
    var _closure1_slot7 = tango;
    tango = 4;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.STATUS_MAX_LENGTH;
    var _closure1_slot8 = tango;
    tango = 5;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    golf = tango.AnalyticEvents;
    var _closure1_slot9 = golf;
    golf = tango.AnalyticsSections;
    var _closure1_slot10 = golf;
    foxtrot = tango.Fonts;
    tango = 6;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.EmojiIntention;
    var _closure1_slot11 = tango;
    tango = 7;
    golf = oscar[tango];
    golf = report.bind(entity)(golf);
    golf = golf.jsx;
    var _closure1_slot12 = golf;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.jsxs;
    var _closure1_slot13 = tango;
    romeo = 8;
    tango = oscar[romeo];
    options = report.bind(entity)(tango);
    golf = options.createStyles;
    tango = {};
    verify = {'flexGrow': 1, 'padding': 16, 'rowGap': 24};
    tango['container'] = verify;
    verify = {};
    verify['rowGap'] = romeo;
    tango['statusSection'] = verify;
    verify = {'flexDirection': 'row', 'alignItems': 'flex-start', 'backgroundColor': null, 'borderRadius': null, 'padding': 12};
    offset = 9;
    backup = oscar[offset];
    backup = yankee.bind(entity)(backup);
    backup = backup.colors;
    backup = backup.INPUT_BACKGROUND;
    verify['backgroundColor'] = backup;
    backup = oscar[offset];
    backup = yankee.bind(entity)(backup);
    backup = backup.radii;
    backup = backup.lg;
    verify['borderRadius'] = backup;
    tango['statusInput'] = verify;
    verify = {'marginRight': 8, 'height': 20, 'width': 20};
    tango['emoji'] = verify;
    verify = {'color': null, 'lineHeight': 16, 'flexGrow': 1, 'alignSelf': 'flex-start', 'paddingVertical': 0, 'paddingHorizontal': 0};
    backup = oscar[offset];
    backup = yankee.bind(entity)(backup);
    backup = backup.colors;
    backup = backup.TEXT_PRIMARY;
    verify['color'] = backup;
    tango['status'] = verify;
    verify = {'fontSize': 16, 'lineHeight': 20, 'fontFamily': null, 'color': null, 'flexGrow': 1, 'height': 'auto'};
    foxtrot = foxtrot.PRIMARY_MEDIUM;
    verify['fontFamily'] = foxtrot;
    foxtrot = oscar[offset];
    foxtrot = yankee.bind(entity)(foxtrot);
    foxtrot = foxtrot.colors;
    foxtrot = foxtrot.TEXT_PRIMARY;
    verify['color'] = foxtrot;
    tango['statusText'] = verify;
    verify = {};
    foxtrot = oscar[offset];
    foxtrot = yankee.bind(entity)(foxtrot);
    foxtrot = foxtrot.colors;
    foxtrot = foxtrot.TEXT_MUTED;
    verify['color'] = foxtrot;
    tango['inputPlaceholder'] = verify;
    verify = {};
    verify['rowGap'] = romeo;
    tango['clearAfterSection'] = verify;
    verify = {};
    romeo = oscar[offset];
    romeo = yankee.bind(entity)(romeo);
    romeo = romeo.colors;
    romeo = romeo.INPUT_BACKGROUND;
    verify['backgroundColor'] = romeo;
    romeo = oscar[offset];
    romeo = yankee.bind(entity)(romeo);
    romeo = romeo.radii;
    romeo = romeo.lg;
    verify['borderRadius'] = romeo;
    romeo = 'hidden';
    verify['overflow'] = romeo;
    tango['clearAfterOptions'] = verify;
    verify = {};
    romeo = 'center';
    verify['alignItems'] = romeo;
    tango['previewContainer'] = verify;
    verify = {'tintColor': null, 'paddingLeft': 8, 'flexShrink': 0};
    offset = oscar[offset];
    offset = yankee.bind(entity)(offset);
    offset = offset.colors;
    offset = offset.INTERACTIVE_NORMAL;
    verify['tintColor'] = offset;
    tango['closeIcon'] = verify;
    tango = golf.bind(options)(tango);
    var _closure1_slot14 = tango;
    tango = 37;
    tango = oscar[tango];
    oscar = report.bind(entity)(tango);
    report = oscar.fileFinishedImporting;
    tango = 'modules/custom_status/native/EditCustomStatusWithPreview.tsx';
    tango = report.bind(oscar)(tango);
    mike = function(argFoo) { // Original name: EditCustomStatusWithPreview
        _fun77812: for(var _fun77812_ip = 0; ; ) switch(_fun77812_ip) {
 0:
            entity = argFoo;
            oscar = entity.navigation;
            var _closure2_slot0 = oscar;
            zulu = entity.onClose;
            var _closure2_slot1 = zulu;
            entity = entity.analyticsLocations;
            var _closure2_slot2 = entity;
            report = undefined;
            var _closure2_slot3 = report;
            var _closure2_slot4 = report;
            var _closure2_slot5 = report;
            var _closure2_slot6 = report;
            var _closure2_slot7 = report;
            var _closure2_slot8 = report;
            var _closure2_slot9 = report;
            var _closure2_slot10 = report;
            var _closure2_slot11 = report;
            var _closure2_slot12 = report;
            var _closure2_slot13 = report;
            tango = _closure1_slot4;
            golf = tango.useEffect;
            mike = new Array(1);
            mike[0] = entity;
            entity = function() {
                zulu = _closure1_slot1;
                mike = _closure1_slot2;
                entity = 14;
                mike = mike[entity];
                entity = undefined;
                report = zulu.bind(entity)(mike);
                tango = report.track;
                mike = _closure1_slot9;
                zulu = mike.OPEN_MODAL;
                mike = {};
                oscar = _closure1_slot10;
                oscar = oscar.EDIT_CUSTOM_STATUS_MODAL_WITH_PREVIEW;
                mike['type'] = oscar;
                oscar = _closure2_slot2;
                mike['location_stack'] = oscar;
                mike = tango.bind(report)(zulu, mike);
                return entity;
            };
            entity = golf.bind(tango)(entity, mike);
            entity = _closure1_slot14;
            status = entity.bind(report)();
            mike = _closure1_slot0;
            golf = _closure1_slot2;
            entity = 15;
            entity = golf[entity];
            options = mike.bind(report)(entity);
            entity = options.useCustomStatusActivity;
            romeo = entity.bind(options)();
            entity = 16;
            entity = golf[entity];
            verify = mike.bind(report)(entity);
            options = verify.useStateFromStores;
            entity = _closure1_slot7;
            mike = new Array(1);
            mike[0] = entity;
            entity = function() {
                mike = _closure1_slot7;
                entity = mike.getCurrentUser;
                entity = entity.bind(mike)();
                return entity;
            };
            update = options.bind(verify)(mike, entity);
            mike = _closure1_slot1;
            entity = 17;
            entity = golf[entity];
            entity = mike.bind(report)(entity);
            foxtrot = entity.bind(report)();
            mike = tango.useState;
            offset = null;
            entity = offset == romeo;
            golf = undefined;
            if(entity) { _fun77812_ip = 235; continue _fun77812 }
 230:
            golf = romeo.state;
 235:
            options = offset != golf;
            echo = '';
            entity = echo;
            if(!options) { _fun77812_ip = 252; continue _fun77812 }
 249:
            entity = golf;
 252:
            mike = mike.bind(tango)(entity);
            entity = _closure1_slot3;
            yankee = 2;
            entity = entity.bind(report)(mike, yankee);
            options = 0;
            result = entity[options];
            _closure2_slot3 = result;
            golf = 1;
            sierra = entity[golf];
            _closure2_slot4 = sierra;
            tango = _closure1_slot4;
            mike = tango.useState;
            entity = offset == romeo;
            verify = undefined;
            if(entity) { _fun77812_ip = 315; continue _fun77812 }
 309:
            verify = romeo.emoji;
 315:
            backup = offset != verify;
            entity = null;
            if(!backup) { _fun77812_ip = 327; continue _fun77812 }
 324:
            entity = verify;
 327:
            entity = mike.bind(tango)(entity);
            verify = _closure1_slot3;
            entity = verify.bind(report)(entity, yankee);
            sizing = entity[options];
            _closure2_slot5 = sizing;
            mike = entity[golf];
            _closure2_slot6 = mike;
            tango = _closure1_slot4;
            entity = tango.useState;
            entity = entity.bind(tango)(foxtrot);
            entity = verify.bind(report)(entity, yankee);
            papa = entity[options];
            _closure2_slot7 = papa;
            entity = entity[golf];
            _closure2_slot8 = entity;
            options = tango.useCallback;
            golf = new Array(4);
            golf[0] = result;
            golf[1] = sizing;
            golf[2] = papa;
            golf[3] = zulu;
            entity = function() {
                tango = _closure1_slot1;
                verify = _closure1_slot2;
                entity = 18;
                mike = verify[entity];
                entity = undefined;
                golf = tango.bind(entity)(mike);
                oscar = _closure2_slot3;
                report = _closure2_slot5;
                tango = _closure2_slot7;
                tango = golf.bind(entity)(oscar, report, tango);
                options = _closure1_slot0;
                zulu = 19;
                zulu = verify[zulu];
                zulu = options.bind(entity)(zulu);
                report = zulu.AccessibilityAnnouncer;
                tango = report.announce;
                zulu = 11;
                oscar = verify[zulu];
                oscar = options.bind(entity)(oscar);
                golf = oscar.intl;
                oscar = golf.string;
                zulu = verify[zulu];
                zulu = options.bind(entity)(zulu);
                zulu = zulu.t;
                zulu = zulu.Og40Ym;
                zulu = oscar.bind(golf)(zulu);
                zulu = tango.bind(report)(zulu);
                mike = _closure2_slot1;
                mike = mike.bind(entity)();
                return entity;
            };
            entity = options.bind(tango)(entity, golf);
            _closure2_slot9 = entity;
            options = tango.useCallback;
            golf = new Array(1);
            golf[0] = zulu;
            zulu = function() {
                tango = _closure1_slot1;
                options = _closure1_slot2;
                entity = 18;
                zulu = options[entity];
                entity = undefined;
                report = tango.bind(entity)(zulu);
                tango = '';
                zulu = null;
                zulu = report.bind(entity)(tango, zulu, zulu);
                golf = _closure1_slot0;
                mike = 19;
                mike = options[mike];
                mike = golf.bind(entity)(mike);
                tango = mike.AccessibilityAnnouncer;
                zulu = tango.announce;
                mike = 11;
                report = options[mike];
                report = golf.bind(entity)(report);
                oscar = report.intl;
                report = oscar.string;
                mike = options[mike];
                mike = golf.bind(entity)(mike);
                mike = mike.t;
                mike = mike.YdUwBQ;
                mike = report.bind(oscar)(mike);
                mike = zulu.bind(tango)(mike);
                mike = _closure2_slot1;
                mike = mike.bind(entity)();
                return entity;
            };
            output = options.bind(tango)(zulu, golf);
            _closure2_slot10 = output;
            options = tango.useCallback;
            golf = function(argFoo) {
                _fun77817: for(var _fun77817_ip = 0; ; ) switch(_fun77817_ip) {
 0:
                    entity = argFoo;
                    zulu = _closure2_slot6;
                    mike = {};
                    tango = entity.id;
                    mike['id'] = tango;
                    report = entity.id;
                    tango = null;
                    if(!(tango == report)) { _fun77817_ip = 54; continue _fun77817 }
 32:
                    report = entity.surrogates;
                    if(!(tango != report)) { _fun77817_ip = 54; continue _fun77817 }
 41:
                    oscar = entity.surrogates;
                    report = '';
                    if(!(report === oscar)) { _fun77817_ip = 75; continue _fun77817 }
 54:
                    report = entity.name;
                    oscar = tango != report;
                    tango = '';
                    if(!oscar) { _fun77817_ip = 73; continue _fun77817 }
 70:
                    tango = report;
 73:
                    _fun77817_ip = 80; continue _fun77817;
 75:
                    tango = entity.surrogates;
 80:
                    mike['name'] = tango;
                    entity = entity.animated;
                    mike['animated'] = entity;
                    entity = undefined;
                    mike = zulu.bind(entity)(mike);
                    return entity;
                }
            };
            zulu = new Array(0);
            zulu = options.bind(tango)(golf, zulu);
            _closure2_slot11 = zulu;
            options = tango.useCallback;
            golf = new Array(1);
            golf[0] = zulu;
            zulu = function() {
                zulu = _closure1_slot0;
                mike = _closure1_slot2;
                entity = 20;
                mike = mike[entity];
                entity = undefined;
                tango = zulu.bind(entity)(mike);
                zulu = tango.openEmojiPickerActionSheet;
                mike = {};
                oscar = _closure2_slot11;
                mike['onPressEmoji'] = oscar;
                report = _closure1_slot11;
                report = report.STATUS;
                mike['pickerIntention'] = report;
                mike = zulu.bind(tango)(mike);
                return entity;
            };
            config = options.bind(tango)(zulu, golf);
            golf = tango.useCallback;
            zulu = new Array(2);
            zulu[0] = mike;
            zulu[1] = sierra;
            mike = function() {
                tango = _closure2_slot6;
                entity = undefined;
                zulu = null;
                zulu = tango.bind(entity)(zulu);
                zulu = _closure2_slot4;
                mike = '';
                mike = zulu.bind(entity)(mike);
                return entity;
            };
            record = golf.bind(tango)(mike, zulu);
            mike = tango.useRef;
            equality = mike.bind(tango)(offset);
            _closure2_slot12 = equality;
            golf = tango.useCallback;
            zulu = function() {
                _fun77820: for(var _fun77820_ip = 0; ; ) switch(_fun77820_ip) {
 0:
                    entity = _closure2_slot12;
                    mike = entity.current;
                    entity = null;
                    if(!(entity != mike)) { _fun77820_ip = 28; continue _fun77820 }
 18:
                    entity = mike.blur;
                    entity = entity.bind(mike)();
 28:
                    entity = undefined;
                    return entity;
                }
            };
            mike = new Array(0);
            lima = golf.bind(tango)(zulu, mike);
            zulu = tango.useRef;
            mike = {};
            mike['statusText'] = result;
            mike['statusEmoji'] = sizing;
            mike['clearAfter'] = papa;
            mike = zulu.bind(tango)(mike);
            _closure2_slot13 = mike;
            zulu = tango.useEffect;
            mike = new Array(7);
            mike[0] = oscar;
            mike[1] = entity;
            mike[2] = output;
            mike[3] = result;
            mike[4] = sizing;
            mike[5] = papa;
            mike[6] = status;
            entity = function() {
                _fun77821: for(var _fun77821_ip = 0; ; ) switch(_fun77821_ip) {
 0:
                    zulu = _closure2_slot3;
                    mike = _closure2_slot13;
                    mike = mike.current;
                    mike = mike.statusText;
                    mike = zulu !== mike;
                    if(mike) { _fun77821_ip = 54; continue _fun77821 }
 31:
                    tango = _closure2_slot5;
                    zulu = _closure2_slot13;
                    zulu = zulu.current;
                    zulu = zulu.statusEmoji;
                    mike = tango !== zulu;
 54:
                    if(mike) { _fun77821_ip = 80; continue _fun77821 }
 57:
                    tango = _closure2_slot7;
                    zulu = _closure2_slot13;
                    zulu = zulu.current;
                    zulu = zulu.clearAfter;
                    mike = tango !== zulu;
 80:
                    var _closure3_slot0 = mike;
                    tango = _closure2_slot0;
                    zulu = tango.setOptions;
                    mike = {};
                    entity = function() { // Original name: headerRight
                        tango = _closure1_slot12;
                        options = _closure1_slot0;
                        verify = _closure1_slot2;
                        entity = 21;
                        entity = verify[entity];
                        zulu = undefined;
                        entity = options.bind(zulu)(entity);
                        mike = entity.HeaderTextButton;
                        entity = {};
                        report = 11;
                        oscar = verify[report];
                        oscar = options.bind(zulu)(oscar);
                        golf = oscar.intl;
                        oscar = golf.string;
                        report = verify[report];
                        report = options.bind(zulu)(report);
                        report = report.t;
                        report = report.R3BPHx;
                        report = oscar.bind(golf)(report);
                        entity['label'] = report;
                        report = _closure2_slot9;
                        entity['onPress'] = report;
                        report = _closure3_slot0;
                        report = !report;
                        entity['disabled'] = report;
                        entity = tango.bind(zulu)(mike, entity);
                        return entity;
                    };
                    mike['headerRight'] = entity;
                    golf = _closure1_slot0;
                    oscar = _closure1_slot2;
                    entity = 22;
                    oscar = oscar[entity];
                    entity = undefined;
                    golf = golf.bind(entity)(oscar);
                    oscar = golf.getHeaderConditionalBackButton;
                    report = function() {
                        entity = global;
                        zulu = entity.Promise;
                        entity = zulu.prototype;
                        mike = Object.create(entity, {constructor: {value: zulu}});
                        tango = function(argFoo) {
                            entity = argFoo;
                            var _closure5_slot0 = entity;
                            zulu = _closure1_slot1;
                            golf = _closure1_slot2;
                            entity = 23;
                            mike = golf[entity];
                            entity = undefined;
                            zulu = zulu.bind(entity)(mike);
                            mike = {};
                            oscar = _closure3_slot0;
                            mike['hasEdits'] = oscar;
                            oscar = _closure1_slot0;
                            report = 24;
                            report = golf[report];
                            report = oscar.bind(entity)(report);
                            report = report.dismissKeyboard;
                            mike['onHasEdits'] = report;
                            report = _closure2_slot10;
                            mike['resetPending'] = report;
                            tango = function() { // Original name: onConfirm
                                zulu = _closure1_slot1;
                                mike = _closure1_slot2;
                                entity = 25;
                                mike = mike[entity];
                                entity = undefined;
                                zulu = zulu.bind(entity)(mike);
                                mike = zulu.close;
                                mike = mike.bind(zulu)();
                                zulu = _closure5_slot0;
                                mike = true;
                                mike = zulu.bind(entity)(mike);
                                return entity;
                            };
                            mike['onConfirm'] = tango;
                            mike = zulu.bind(entity)(mike);
                            return entity;
                        };
                        report = mike;
                        entity = new report[zulu](tango, zulu);
                        entity = entity instanceof Object ? entity : mike;
                        return entity;
                    };
                    report = oscar.bind(golf)(report);
                    mike['headerLeft'] = report;
                    mike = zulu.bind(tango)(mike);
                    return entity;
                }
            };
            entity = zulu.bind(tango)(entity, mike);
            mike = offset == update;
            entity = null;
            if(mike) { _fun77812_ip = 1909; continue _fun77812 }
 677:
            tango = _closure1_slot12;
            zulu = _closure1_slot6;
            mike = {};
            oscar = 'always';
            mike['keyboardShouldPersistTaps'] = oscar;
            options = _closure1_slot13;
            golf = _closure1_slot5;
            oscar = {};
            verify = status.container;
            oscar['style'] = verify;
            yankee = _closure1_slot12;
            verify = {};
            foxtrot = status.previewContainer;
            verify['style'] = foxtrot;
            kilo = _closure1_slot12;
            backup = _closure1_slot1;
            context = _closure1_slot2;
            foxtrot = 26;
            foxtrot = context[foxtrot];
            backup = backup.bind(report)(foxtrot);
            foxtrot = {};
            foxtrot['user'] = update;
            foxtrot['pendingStatusText'] = result;
            foxtrot['pendingStatusEmoji'] = sizing;
            variable36 = _closure1_slot0;
            control = 11;
            update = context[control];
            update = variable36.bind(report)(update);
            target = update.intl;
            source = target.string;
            update = context[control];
            update = variable36.bind(report)(update);
            update = update.t;
            update = update.xod36+;
            update = source.bind(target)(update);
            foxtrot['placeholderText'] = update;
            foxtrot = kilo.bind(report)(backup, foxtrot);
            verify['children'] = foxtrot;
            yankee = yankee.bind(report)(golf, verify);
            verify = new Array(4);
            verify[0] = yankee;
            yankee = {};
            foxtrot = status.statusSection;
            yankee['style'] = foxtrot;
            kilo = _closure1_slot12;
            source = 27;
            foxtrot = context[source];
            foxtrot = variable36.bind(report)(foxtrot);
            backup = foxtrot.Text;
            foxtrot = {'accessibilityRole': 'header', 'variant': 'text-sm/semibold', 'color': 'header-secondary'};
            update = context[control];
            update = variable36.bind(report)(update);
            whiskey = update.intl;
            target = whiskey.string;
            update = context[control];
            update = variable36.bind(report)(update);
            update = update.t;
            update = update.UcdRn5;
            update = target.bind(whiskey)(update);
            foxtrot['children'] = update;
            backup = kilo.bind(report)(backup, foxtrot);
            foxtrot = new Array(2);
            foxtrot[0] = backup;
            backup = {};
            kilo = status.statusInput;
            backup['style'] = kilo;
            target = _closure1_slot12;
            kilo = 10;
            kilo = context[kilo];
            kilo = variable36.bind(report)(kilo);
            update = kilo.PressableOpacity;
            kilo = {};
            whiskey = context[control];
            whiskey = variable36.bind(report)(whiskey);
            quebec = whiskey.intl;
            whiskey = quebec.string;
            context = context[control];
            context = variable36.bind(report)(context);
            context = context.t;
            context = context.WkfRZG;
            context = whiskey.bind(quebec)(context);
            kilo['accessibilityLabel'] = context;
            context = {};
            quebec = offset == sizing;
            whiskey = undefined;
            if(quebec) { _fun77812_ip = 1062; continue _fun77812 }
 1057:
            whiskey = sizing.name;
 1062:
            context['text'] = whiskey;
            kilo['accessibilityValue'] = context;
            context = 'button';
            kilo['accessibilityRole'] = context;
            kilo['onPress'] = config;
            variable37 = _closure1_slot12;
            context = _closure1_slot1;
            whiskey = _closure1_slot2;
            config = 28;
            config = whiskey[config];
            variable36 = context.bind(report)(config);
            quebec = {};
            quebec['emoji'] = sizing;
            config = status.emoji;
            quebec['style'] = config;
            config = true;
            quebec['withPlaceholder'] = config;
            quebec = variable37.bind(report)(variable36, quebec);
            kilo['children'] = quebec;
            update = target.bind(report)(update, kilo);
            kilo = new Array(3);
            kilo[0] = update;
            target = _closure1_slot12;
            update = 29;
            update = whiskey[update];
            context = context.bind(report)(update);
            update = {};
            update['ref'] = equality;
            equality = _closure1_slot8;
            update['maxLength'] = equality;
            variable36 = _closure1_slot0;
            equality = whiskey[control];
            equality = variable36.bind(report)(equality);
            variable37 = equality.intl;
            quebec = variable37.string;
            equality = whiskey[control];
            equality = variable36.bind(report)(equality);
            equality = equality.t;
            equality = equality.xod36+;
            equality = quebec.bind(variable37)(equality);
            update['placeholder'] = equality;
            equality = status.inputPlaceholder;
            equality = equality.color;
            update['placeholderTextColor'] = equality;
            equality = whiskey[control];
            equality = variable36.bind(report)(equality);
            quebec = equality.intl;
            equality = quebec.string;
            whiskey = whiskey[control];
            whiskey = variable36.bind(report)(whiskey);
            whiskey = whiskey.t;
            whiskey = whiskey.xalUlZ;
            whiskey = equality.bind(quebec)(whiskey);
            update['accessibilityLabel'] = whiskey;
            update['onSubmitEditing'] = lima;
            lima = status.status;
            update['style'] = lima;
            update['value'] = result;
            update['onChange'] = sierra;
            sierra = false;
            update['autoCorrect'] = sierra;
            update['showBorder'] = sierra;
            update['showTopContainer'] = sierra;
            sierra = 'top';
            update['textAlignVertical'] = sierra;
            sierra = 'none';
            update['autoCapitalize'] = sierra;
            status = status.statusText;
            update['inputTextStyle'] = status;
            update['multiline'] = config;
            status = 'blurAndSubmit';
            update['submitBehavior'] = status;
            status = 'done';
            update['returnKeyType'] = status;
            update['autoFocus'] = config;
            update = target.bind(report)(context, update);
            kilo[1] = update;
            sizing = offset != sizing;
            if(sizing) { _fun77812_ip = 1423; continue _fun77812 }
 1419:
            sizing = echo !== result;
 1423:
            if(!sizing) { _fun77812_ip = 1446; continue _fun77812 }
 1426:
            update = _closure1_slot12;
            echo = _closure1_slot15;
            result = {};
            result['onPress'] = record;
            sizing = update.bind(report)(echo, result);
 1446:
            kilo[2] = sizing;
            backup['children'] = kilo;
            backup = options.bind(report)(golf, backup);
            foxtrot[1] = backup;
            yankee['children'] = foxtrot;
            yankee = options.bind(report)(golf, yankee);
            verify[1] = yankee;
            sizing = _closure1_slot12;
            context = _closure1_slot0;
            target = _closure1_slot2;
            yankee = 30;
            foxtrot = target[yankee];
            foxtrot = context.bind(report)(foxtrot);
            kilo = foxtrot.TableRowGroup;
            foxtrot = {};
            update = _closure1_slot12;
            backup = 31;
            result = target[backup];
            result = context.bind(report)(result);
            echo = result.TableRow;
            result = {};
            record = target[control];
            record = context.bind(report)(record);
            sierra = record.intl;
            status = sierra.string;
            record = target[control];
            record = context.bind(report)(record);
            record = record.t;
            record = record.E45wvL;
            record = status.bind(sierra)(record);
            result['label'] = record;
            result['arrow'] = config;
            vacuum = function() { // Original name: onPress
                tango = _closure1_slot0;
                mike = _closure1_slot2;
                entity = 24;
                report = mike[entity];
                entity = undefined;
                oscar = tango.bind(entity)(report);
                report = oscar.dismissKeyboard;
                report = report.bind(oscar)();
                report = _closure1_slot1;
                zulu = 32;
                zulu = mike[zulu];
                oscar = report.bind(entity)(zulu);
                report = oscar.openLazy;
                zulu = 34;
                zulu = mike[zulu];
                tango = tango.bind(entity)(zulu);
                zulu = 33;
                zulu = mike[zulu];
                mike = mike.paths;
                tango = tango.bind(entity)(zulu, mike);
                zulu = {};
                golf = _closure2_slot7;
                zulu['initialValue'] = golf;
                mike = _closure2_slot8;
                zulu['onChange'] = mike;
                mike = 'ClearAfterOptionsActionSheet';
                mike = report.bind(oscar)(tango, mike, zulu);
                return entity;
            };
            result['onPress'] = vacuum;
            config = _closure1_slot12;
            source = target[source];
            source = context.bind(report)(source);
            vacuum = source.Text;
            source = {};
            record = 'text-sm/medium';
            source['variant'] = record;
            record = 35;
            record = target[record];
            context = context.bind(report)(record);
            record = context.getLabelForClearAfterValue;
            record = record.bind(context)(papa);
            source['children'] = record;
            source = config.bind(report)(vacuum, source);
            result['trailing'] = source;
            result = update.bind(report)(echo, result);
            foxtrot['children'] = result;
            foxtrot = sizing.bind(report)(kilo, foxtrot);
            verify[2] = foxtrot;
            offset = offset != romeo;
            if(!offset) { _fun77812_ip = 1885; continue _fun77812 }
 1694:
            foxtrot = _closure1_slot12;
            source = _closure1_slot0;
            result = _closure1_slot2;
            yankee = result[yankee];
            yankee = source.bind(report)(yankee);
            romeo = yankee.TableRowGroup;
            yankee = {};
            sizing = _closure1_slot12;
            backup = result[backup];
            backup = source.bind(report)(backup);
            kilo = backup.TableRow;
            backup = {};
            vacuum = _closure1_slot12;
            echo = 36;
            echo = result[echo];
            echo = source.bind(report)(echo);
            update = echo.TrashIcon;
            echo = {};
            config = _closure1_slot1;
            sequence = 9;
            sequence = result[sequence];
            sequence = config.bind(report)(sequence);
            sequence = sequence.colors;
            sequence = sequence.TEXT_DANGER;
            echo['color'] = sequence;
            echo = vacuum.bind(report)(update, echo);
            backup['icon'] = echo;
            echo = result[control];
            echo = source.bind(report)(echo);
            update = echo.intl;
            echo = update.string;
            result = result[control];
            result = source.bind(report)(result);
            result = result.t;
            result = result.wO53tr;
            result = echo.bind(update)(result);
            backup['label'] = result;
            backup['onPress'] = output;
            output = 'danger';
            backup['variant'] = output;
            backup = sizing.bind(report)(kilo, backup);
            yankee['children'] = backup;
            offset = foxtrot.bind(report)(romeo, yankee);
 1885:
            verify[3] = offset;
            oscar['children'] = verify;
            oscar = options.bind(report)(golf, oscar);
            mike['children'] = oscar;
            entity = tango.bind(report)(zulu, mike);
 1909:
            return entity;
        }
    };
    zulu['default'] = mike;
    return entity;
})();