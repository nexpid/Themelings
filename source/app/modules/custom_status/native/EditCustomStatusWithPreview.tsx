// app/modules/custom_status/native/EditCustomStatusWithPreview.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    report = argBar;
    yankee = argBaz;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    var _closure1_slot1 = yankee;
    var _closure1_slot2 = oscard;
    entity = function(argFoo) { // Original name: ClearInputButton
        entity = argFoo;
        oscard = entity.onPress;
        entity = _closure1_slot14;
        tangon = undefined;
        yankee = entity.bind(tangon)();
        zuuluu = _closure1_slot12;
        romeon = _closure1_slot0;
        offset = _closure1_slot2;
        entity = 10;
        entity = offset[entity];
        entity = romeon.bind(tangon)(entity);
        michal = entity.PressableOpacity;
        entity = {};
        golfie = {'borderRadius': 10, 'paddingLeft': 8};
        entity['style'] = golfie;
        golfie = 'button';
        entity['accessibilityRole'] = golfie;
        golfie = 11;
        option = offset[golfie];
        option = romeon.bind(tangon)(option);
        verify = option.intl;
        option = verify.string;
        golfie = offset[golfie];
        golfie = romeon.bind(tangon)(golfie);
        golfie = golfie.t;
        golfie = golfie.VkKicX;
        golfie = option.bind(verify)(golfie);
        entity['accessibilityLabel'] = golfie;
        entity['onPress'] = oscard;
        oscard = {'top': 8, 'bottom': 8, 'right': 8};
        entity['hitSlop'] = oscard;
        golfie = _closure1_slot12;
        verify = _closure1_slot1;
        option = 12;
        report = offset[option];
        oscard = verify.bind(tangon)(report);
        report = {};
        romeon = 13;
        romeon = offset[romeon];
        romeon = verify.bind(tangon)(romeon);
        report['source'] = romeon;
        yankee = yankee.closeIcon;
        report['style'] = yankee;
        option = offset[option];
        option = verify.bind(tangon)(option);
        option = option.Sizes;
        option = option.SMALL;
        report['size'] = option;
        report = golfie.bind(tangon)(oscard, report);
        entity['children'] = report;
        entity = zuuluu.bind(tangon)(michal, entity);
        return entity;
    };
    var _closure1_slot15 = entity;
    entity = global;
    option = entity.Object;
    golfie = option.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(option)(zuuluu, entity, tangon);
    entity = 0;
    tangon = oscard[entity];
    entity = undefined;
    tangon = yankee.bind(entity)(tangon);
    var _closure1_slot3 = tangon;
    tangon = 1;
    golfie = oscard[tangon];
    tangon = argCor;
    tangon = tangon.bind(entity)(golfie);
    var _closure1_slot4 = tangon;
    tangon = 2;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    golfie = tangon.View;
    var _closure1_slot5 = golfie;
    tangon = tangon.ScrollView;
    var _closure1_slot6 = tangon;
    tangon = 3;
    tangon = oscard[tangon];
    tangon = yankee.bind(entity)(tangon);
    var _closure1_slot7 = tangon;
    tangon = 4;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.STATUS_MAX_LENGTH;
    var _closure1_slot8 = tangon;
    tangon = 5;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    golfie = tangon.AnalyticEvents;
    var _closure1_slot9 = golfie;
    golfie = tangon.AnalyticsSections;
    var _closure1_slot10 = golfie;
    backup = tangon.Fonts;
    tangon = 6;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.EmojiIntention;
    var _closure1_slot11 = tangon;
    tangon = 7;
    golfie = oscard[tangon];
    golfie = report.bind(entity)(golfie);
    golfie = golfie.jsx;
    var _closure1_slot12 = golfie;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.jsxs;
    var _closure1_slot13 = tangon;
    foxtra = 8;
    tangon = oscard[foxtra];
    option = report.bind(entity)(tangon);
    golfie = option.createStyles;
    tangon = {};
    verify = {'flexGrow': 1, 'padding': 16, 'rowGap': 24};
    tangon['container'] = verify;
    verify = {};
    verify['rowGap'] = foxtra;
    tangon['statusSection'] = verify;
    verify = {'flexDirection': 'row', 'alignItems': 'center', 'backgroundColor': null, 'borderRadius': null, 'padding': 12};
    romeon = 'center';
    offset = 9;
    kiloes = oscard[offset];
    kiloes = yankee.bind(entity)(kiloes);
    kiloes = kiloes.colors;
    kiloes = kiloes.INPUT_BACKGROUND;
    verify['backgroundColor'] = kiloes;
    kiloes = oscard[offset];
    kiloes = yankee.bind(entity)(kiloes);
    kiloes = kiloes.radii;
    kiloes = kiloes.lg;
    verify['borderRadius'] = kiloes;
    tangon['statusInput'] = verify;
    verify = {'marginRight': 8, 'height': 20, 'width': 20};
    tangon['emoji'] = verify;
    verify = {'color': null, 'lineHeight': 16, 'flexGrow': 1, 'alignSelf': 'flex-start', 'paddingVertical': 0, 'paddingHorizontal': 0};
    kiloes = oscard[offset];
    kiloes = yankee.bind(entity)(kiloes);
    kiloes = kiloes.colors;
    kiloes = kiloes.TEXT_PRIMARY;
    verify['color'] = kiloes;
    tangon['status'] = verify;
    verify = {'fontSize': 16, 'lineHeight': 20, 'fontFamily': null, 'color': null, 'flexGrow': 1, 'height': 'auto'};
    backup = backup.PRIMARY_MEDIUM;
    verify['fontFamily'] = backup;
    backup = oscard[offset];
    backup = yankee.bind(entity)(backup);
    backup = backup.colors;
    backup = backup.TEXT_PRIMARY;
    verify['color'] = backup;
    tangon['statusText'] = verify;
    verify = {};
    backup = oscard[offset];
    backup = yankee.bind(entity)(backup);
    backup = backup.colors;
    backup = backup.TEXT_MUTED;
    verify['color'] = backup;
    tangon['inputPlaceholder'] = verify;
    verify = {};
    verify['rowGap'] = foxtra;
    tangon['clearAfterSection'] = verify;
    verify = {};
    foxtra = oscard[offset];
    foxtra = yankee.bind(entity)(foxtra);
    foxtra = foxtra.colors;
    foxtra = foxtra.INPUT_BACKGROUND;
    verify['backgroundColor'] = foxtra;
    foxtra = oscard[offset];
    foxtra = yankee.bind(entity)(foxtra);
    foxtra = foxtra.radii;
    foxtra = foxtra.lg;
    verify['borderRadius'] = foxtra;
    foxtra = 'hidden';
    verify['overflow'] = foxtra;
    tangon['clearAfterOptions'] = verify;
    verify = {};
    verify['alignItems'] = romeon;
    romeon = oscard[offset];
    romeon = yankee.bind(entity)(romeon);
    romeon = romeon.shadows;
    output = romeon.SHADOW_LOW;
    result = verify;
    romeon = copyDataProperties(result, output);
    tangon['previewContainer'] = verify;
    verify = {'tintColor': null, 'paddingLeft': 8, 'flexShrink': 0};
    offset = oscard[offset];
    offset = yankee.bind(entity)(offset);
    offset = offset.colors;
    offset = offset.INTERACTIVE_NORMAL;
    verify['tintColor'] = offset;
    tangon['closeIcon'] = verify;
    tangon = golfie.bind(option)(tangon);
    var _closure1_slot14 = tangon;
    tangon = 38;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/custom_status/native/EditCustomStatusWithPreview.tsx';
    tangon = report.bind(oscard)(tangon);
    michal = function(argFoo) { // Original name: EditCustomStatusWithPreview
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            entity = argFoo;
            oscard = entity.navigation;
            var _closure2_slot0 = oscard;
            zuuluu = entity.onClose;
            var _closure2_slot1 = zuuluu;
            entity = entity.analyticsLocations;
            var _closure2_slot2 = entity;
            report = undefined;
            var _closure2_slot3 = report;
            var _closure2_slot4 = report;
            var _closure2_slot5 = report;
            var _closure2_slot6 = report;
            var _closure2_slot7 = report;
            var _closure2_slot8 = report;
            var _closure2_slot9 = report;
            var _closure2_slot10 = report;
            var _closure2_slot11 = report;
            var _closure2_slot12 = report;
            var _closure2_slot13 = report;
            tangon = _closure1_slot4;
            golfie = tangon.useEffect;
            michal = new Array(1);
            michal[0] = entity;
            entity = function() {
                zuuluu = _closure1_slot1;
                michal = _closure1_slot2;
                entity = 14;
                michal = michal[entity];
                entity = undefined;
                report = zuuluu.bind(entity)(michal);
                tangon = report.track;
                michal = _closure1_slot9;
                zuuluu = michal.OPEN_MODAL;
                michal = {};
                oscard = _closure1_slot10;
                oscard = oscard.EDIT_CUSTOM_STATUS_MODAL_WITH_PREVIEW;
                michal['type'] = oscard;
                oscard = _closure2_slot2;
                michal['location_stack'] = oscard;
                michal = tangon.bind(report)(zuuluu, michal);
                return entity;
            };
            entity = golfie.bind(tangon)(entity, michal);
            entity = _closure1_slot14;
            status = entity.bind(report)();
            michal = _closure1_slot0;
            golfie = _closure1_slot2;
            entity = 15;
            entity = golfie[entity];
            option = michal.bind(report)(entity);
            entity = option.useCustomStatusActivity;
            romeon = entity.bind(option)();
            entity = 16;
            entity = golfie[entity];
            verify = michal.bind(report)(entity);
            option = verify.useStateFromStores;
            entity = _closure1_slot7;
            michal = new Array(1);
            michal[0] = entity;
            entity = function() {
                michal = _closure1_slot7;
                entity = michal.getCurrentUser;
                entity = entity.bind(michal)();
                return entity;
            };
            update = option.bind(verify)(michal, entity);
            michal = _closure1_slot1;
            entity = 17;
            entity = golfie[entity];
            entity = michal.bind(report)(entity);
            foxtra = entity.bind(report)();
            michal = tangon.useState;
            offset = null;
            entity = offset == romeon;
            golfie = undefined;
            if(entity) { _fun00002_ip = 231; continue _fun00001 }
 226:
            golfie = romeon.state;
 231:
            option = offset != golfie;
            echoed = '';
            entity = echoed;
            if(!option) { _fun00002_ip = 248; continue _fun00001 }
 245:
            entity = golfie;
 248:
            michal = michal.bind(tangon)(entity);
            entity = _closure1_slot3;
            yankee = 2;
            entity = entity.bind(report)(michal, yankee);
            option = 0;
            result = entity[option];
            _closure2_slot3 = result;
            golfie = 1;
            sierra = entity[golfie];
            _closure2_slot4 = sierra;
            tangon = _closure1_slot4;
            michal = tangon.useState;
            entity = offset == romeon;
            verify = undefined;
            if(entity) { _fun00002_ip = 311; continue _fun00001 }
 305:
            verify = romeon.emoji;
 311:
            backup = offset != verify;
            entity = null;
            if(!backup) { _fun00002_ip = 323; continue _fun00001 }
 320:
            entity = verify;
 323:
            entity = michal.bind(tangon)(entity);
            verify = _closure1_slot3;
            entity = verify.bind(report)(entity, yankee);
            sizing = entity[option];
            _closure2_slot5 = sizing;
            michal = entity[golfie];
            _closure2_slot6 = michal;
            tangon = _closure1_slot4;
            entity = tangon.useState;
            entity = entity.bind(tangon)(foxtra);
            entity = verify.bind(report)(entity, yankee);
            papara = entity[option];
            _closure2_slot7 = papara;
            entity = entity[golfie];
            _closure2_slot8 = entity;
            option = tangon.useCallback;
            golfie = new Array(4);
            golfie[0] = result;
            golfie[1] = sizing;
            golfie[2] = papara;
            golfie[3] = zuuluu;
            entity = function() {
                tangon = _closure1_slot1;
                verify = _closure1_slot2;
                entity = 18;
                michal = verify[entity];
                entity = undefined;
                report = tangon.bind(entity)(michal);
                tangon = {};
                oscard = _closure2_slot3;
                tangon['text'] = oscard;
                oscard = _closure2_slot5;
                tangon['emojiInfo'] = oscard;
                oscard = _closure2_slot7;
                tangon['clearAfter'] = oscard;
                tangon = report.bind(entity)(tangon);
                option = _closure1_slot0;
                zuuluu = 19;
                zuuluu = verify[zuuluu];
                zuuluu = option.bind(entity)(zuuluu);
                report = zuuluu.AccessibilityAnnouncer;
                tangon = report.announce;
                zuuluu = 11;
                oscard = verify[zuuluu];
                oscard = option.bind(entity)(oscard);
                golfie = oscard.intl;
                oscard = golfie.string;
                zuuluu = verify[zuuluu];
                zuuluu = option.bind(entity)(zuuluu);
                zuuluu = zuuluu.t;
                zuuluu = zuuluu.Og40Ym;
                zuuluu = oscard.bind(golfie)(zuuluu);
                zuuluu = tangon.bind(report)(zuuluu);
                michal = _closure2_slot1;
                michal = michal.bind(entity)();
                return entity;
            };
            entity = option.bind(tangon)(entity, golfie);
            _closure2_slot9 = entity;
            option = tangon.useCallback;
            golfie = new Array(1);
            golfie[0] = zuuluu;
            zuuluu = function() {
                tangon = _closure1_slot1;
                option = _closure1_slot2;
                entity = 20;
                zuuluu = option[entity];
                entity = undefined;
                zuuluu = tangon.bind(entity)(zuuluu);
                zuuluu = zuuluu.bind(entity)();
                golfie = _closure1_slot0;
                michal = 19;
                michal = option[michal];
                michal = golfie.bind(entity)(michal);
                tangon = michal.AccessibilityAnnouncer;
                zuuluu = tangon.announce;
                michal = 11;
                report = option[michal];
                report = golfie.bind(entity)(report);
                oscard = report.intl;
                report = oscard.string;
                michal = option[michal];
                michal = golfie.bind(entity)(michal);
                michal = michal.t;
                michal = michal.YdUwBQ;
                michal = report.bind(oscard)(michal);
                michal = zuuluu.bind(tangon)(michal);
                michal = _closure2_slot1;
                michal = michal.bind(entity)();
                return entity;
            };
            output = option.bind(tangon)(zuuluu, golfie);
            _closure2_slot10 = output;
            option = tangon.useCallback;
            golfie = function(argFoo) {
                _fun00003: for(var _fun00004_ip = 0; ; ) switch(_fun00004_ip) {
 0:
                    entity = argFoo;
                    zuuluu = _closure2_slot6;
                    michal = {};
                    tangon = entity.id;
                    michal['id'] = tangon;
                    report = entity.id;
                    tangon = null;
                    if(!(tangon == report)) { _fun00004_ip = 54; continue _fun00003 }
 32:
                    report = entity.surrogates;
                    if(!(tangon != report)) { _fun00004_ip = 54; continue _fun00003 }
 41:
                    oscard = entity.surrogates;
                    report = '';
                    if(!(report === oscard)) { _fun00004_ip = 75; continue _fun00003 }
 54:
                    report = entity.name;
                    oscard = tangon != report;
                    tangon = '';
                    if(!oscard) { _fun00004_ip = 73; continue _fun00003 }
 70:
                    tangon = report;
 73:
                    _fun00004_ip = 80; continue _fun00003;
 75:
                    tangon = entity.surrogates;
 80:
                    michal['name'] = tangon;
                    entity = entity.animated;
                    michal['animated'] = entity;
                    entity = undefined;
                    michal = zuuluu.bind(entity)(michal);
                    return entity;
                }
            };
            zuuluu = new Array(0);
            zuuluu = option.bind(tangon)(golfie, zuuluu);
            _closure2_slot11 = zuuluu;
            option = tangon.useCallback;
            golfie = new Array(1);
            golfie[0] = zuuluu;
            zuuluu = function() {
                zuuluu = _closure1_slot0;
                michal = _closure1_slot2;
                entity = 21;
                michal = michal[entity];
                entity = undefined;
                tangon = zuuluu.bind(entity)(michal);
                zuuluu = tangon.openEmojiPickerActionSheet;
                michal = {};
                oscard = _closure2_slot11;
                michal['onPressEmoji'] = oscard;
                report = _closure1_slot11;
                report = report.STATUS;
                michal['pickerIntention'] = report;
                michal = zuuluu.bind(tangon)(michal);
                return entity;
            };
            config = option.bind(tangon)(zuuluu, golfie);
            golfie = tangon.useCallback;
            zuuluu = new Array(2);
            zuuluu[0] = michal;
            zuuluu[1] = sierra;
            michal = function() {
                tangon = _closure2_slot6;
                entity = undefined;
                zuuluu = null;
                zuuluu = tangon.bind(entity)(zuuluu);
                zuuluu = _closure2_slot4;
                michal = '';
                michal = zuuluu.bind(entity)(michal);
                return entity;
            };
            record = golfie.bind(tangon)(michal, zuuluu);
            michal = tangon.useRef;
            equals = michal.bind(tangon)(offset);
            _closure2_slot12 = equals;
            golfie = tangon.useCallback;
            zuuluu = function() {
                _fun00005: for(var _fun00006_ip = 0; ; ) switch(_fun00006_ip) {
 0:
                    entity = _closure2_slot12;
                    michal = entity.current;
                    entity = null;
                    if(!(entity != michal)) { _fun00006_ip = 28; continue _fun00005 }
 18:
                    entity = michal.blur;
                    entity = entity.bind(michal)();
 28:
                    entity = undefined;
                    return entity;
                }
            };
            michal = new Array(0);
            limora = golfie.bind(tangon)(zuuluu, michal);
            zuuluu = tangon.useRef;
            michal = {};
            michal['statusText'] = result;
            michal['statusEmoji'] = sizing;
            michal['clearAfter'] = papara;
            michal = zuuluu.bind(tangon)(michal);
            _closure2_slot13 = michal;
            zuuluu = tangon.useEffect;
            michal = new Array(7);
            michal[0] = oscard;
            michal[1] = entity;
            michal[2] = output;
            michal[3] = result;
            michal[4] = sizing;
            michal[5] = papara;
            michal[6] = status;
            entity = function() {
                _fun00007: for(var _fun00008_ip = 0; ; ) switch(_fun00008_ip) {
 0:
                    zuuluu = _closure2_slot3;
                    michal = _closure2_slot13;
                    michal = michal.current;
                    michal = michal.statusText;
                    michal = zuuluu !== michal;
                    if(michal) { _fun00008_ip = 54; continue _fun00007 }
 31:
                    tangon = _closure2_slot5;
                    zuuluu = _closure2_slot13;
                    zuuluu = zuuluu.current;
                    zuuluu = zuuluu.statusEmoji;
                    michal = tangon !== zuuluu;
 54:
                    if(michal) { _fun00008_ip = 80; continue _fun00007 }
 57:
                    tangon = _closure2_slot7;
                    zuuluu = _closure2_slot13;
                    zuuluu = zuuluu.current;
                    zuuluu = zuuluu.clearAfter;
                    michal = tangon !== zuuluu;
 80:
                    var _closure3_slot0 = michal;
                    tangon = _closure2_slot0;
                    zuuluu = tangon.setOptions;
                    michal = {};
                    entity = function() { // Original name: headerRight
                        tangon = _closure1_slot12;
                        option = _closure1_slot0;
                        verify = _closure1_slot2;
                        entity = 22;
                        entity = verify[entity];
                        zuuluu = undefined;
                        entity = option.bind(zuuluu)(entity);
                        michal = entity.HeaderTextButton;
                        entity = {};
                        report = 11;
                        oscard = verify[report];
                        oscard = option.bind(zuuluu)(oscard);
                        golfie = oscard.intl;
                        oscard = golfie.string;
                        report = verify[report];
                        report = option.bind(zuuluu)(report);
                        report = report.t;
                        report = report.R3BPHx;
                        report = oscard.bind(golfie)(report);
                        entity['label'] = report;
                        report = _closure2_slot9;
                        entity['onPress'] = report;
                        report = _closure3_slot0;
                        report = !report;
                        entity['disabled'] = report;
                        entity = tangon.bind(zuuluu)(michal, entity);
                        return entity;
                    };
                    michal['headerRight'] = entity;
                    golfie = _closure1_slot0;
                    oscard = _closure1_slot2;
                    entity = 23;
                    oscard = oscard[entity];
                    entity = undefined;
                    golfie = golfie.bind(entity)(oscard);
                    oscard = golfie.getHeaderConditionalBackButton;
                    report = function() {
                        entity = global;
                        zuuluu = entity.Promise;
                        entity = zuuluu.prototype;
                        michal = Object.create(entity, {constructor: {value: zuuluu}});
                        tangon = function(argFoo) {
                            entity = argFoo;
                            var _closure5_slot0 = entity;
                            zuuluu = _closure1_slot1;
                            golfie = _closure1_slot2;
                            entity = 24;
                            michal = golfie[entity];
                            entity = undefined;
                            zuuluu = zuuluu.bind(entity)(michal);
                            michal = {};
                            oscard = _closure3_slot0;
                            michal['hasEdits'] = oscard;
                            oscard = _closure1_slot0;
                            report = 25;
                            report = golfie[report];
                            report = oscard.bind(entity)(report);
                            report = report.dismissKeyboard;
                            michal['onHasEdits'] = report;
                            report = _closure2_slot10;
                            michal['resetPending'] = report;
                            tangon = function() { // Original name: onConfirm
                                zuuluu = _closure1_slot1;
                                michal = _closure1_slot2;
                                entity = 26;
                                michal = michal[entity];
                                entity = undefined;
                                zuuluu = zuuluu.bind(entity)(michal);
                                michal = zuuluu.close;
                                michal = michal.bind(zuuluu)();
                                zuuluu = _closure5_slot0;
                                michal = true;
                                michal = zuuluu.bind(entity)(michal);
                                return entity;
                            };
                            michal['onConfirm'] = tangon;
                            michal = zuuluu.bind(entity)(michal);
                            return entity;
                        };
                        report = michal;
                        entity = new report[zuuluu](tangon, zuuluu);
                        entity = entity instanceof Object ? entity : michal;
                        return entity;
                    };
                    report = oscard.bind(golfie)(report);
                    michal['headerLeft'] = report;
                    michal = zuuluu.bind(tangon)(michal);
                    return entity;
                }
            };
            entity = zuuluu.bind(tangon)(entity, michal);
            michal = offset == update;
            entity = null;
            if(michal) { _fun00002_ip = 1891; continue _fun00001 }
 659:
            tangon = _closure1_slot12;
            zuuluu = _closure1_slot6;
            michal = {};
            oscard = 'always';
            michal['keyboardShouldPersistTaps'] = oscard;
            option = _closure1_slot13;
            golfie = _closure1_slot5;
            oscard = {};
            verify = status.container;
            oscard['style'] = verify;
            yankee = _closure1_slot12;
            verify = {};
            foxtra = status.previewContainer;
            verify['style'] = foxtra;
            kiloes = _closure1_slot12;
            backup = _closure1_slot1;
            cntext = _closure1_slot2;
            foxtra = 27;
            foxtra = cntext[foxtra];
            backup = backup.bind(report)(foxtra);
            foxtra = {};
            foxtra['user'] = update;
            foxtra['pendingStatusText'] = result;
            foxtra['pendingStatusEmoji'] = sizing;
            variable36 = _closure1_slot0;
            ctrled = 11;
            update = cntext[ctrled];
            update = variable36.bind(report)(update);
            target = update.intl;
            source = target.string;
            update = cntext[ctrled];
            update = variable36.bind(report)(update);
            update = update.t;
            update = update.xod36+;
            update = source.bind(target)(update);
            foxtra['placeholderText'] = update;
            foxtra = kiloes.bind(report)(backup, foxtra);
            verify['children'] = foxtra;
            yankee = yankee.bind(report)(golfie, verify);
            verify = new Array(4);
            verify[0] = yankee;
            yankee = {};
            foxtra = status.statusSection;
            yankee['style'] = foxtra;
            kiloes = _closure1_slot12;
            source = 28;
            foxtra = cntext[source];
            foxtra = variable36.bind(report)(foxtra);
            backup = foxtra.Text;
            foxtra = {'accessibilityRole': 'header', 'variant': 'text-sm/semibold', 'color': 'header-secondary'};
            update = cntext[ctrled];
            update = variable36.bind(report)(update);
            whisks = update.intl;
            target = whisks.string;
            update = cntext[ctrled];
            update = variable36.bind(report)(update);
            update = update.t;
            update = update.UcdRn5;
            update = target.bind(whisks)(update);
            foxtra['children'] = update;
            backup = kiloes.bind(report)(backup, foxtra);
            foxtra = new Array(2);
            foxtra[0] = backup;
            backup = {};
            kiloes = status.statusInput;
            backup['style'] = kiloes;
            target = _closure1_slot12;
            kiloes = 10;
            kiloes = cntext[kiloes];
            kiloes = variable36.bind(report)(kiloes);
            update = kiloes.PressableOpacity;
            kiloes = {};
            whisks = cntext[ctrled];
            whisks = variable36.bind(report)(whisks);
            quebec = whisks.intl;
            whisks = quebec.string;
            cntext = cntext[ctrled];
            cntext = variable36.bind(report)(cntext);
            cntext = cntext.t;
            cntext = cntext.WkfRZG;
            cntext = whisks.bind(quebec)(cntext);
            kiloes['accessibilityLabel'] = cntext;
            cntext = {};
            quebec = offset == sizing;
            whisks = undefined;
            if(quebec) { _fun00002_ip = 1046; continue _fun00001 }
 1041:
            whisks = sizing.name;
 1046:
            cntext['text'] = whisks;
            kiloes['accessibilityValue'] = cntext;
            cntext = 'button';
            kiloes['accessibilityRole'] = cntext;
            kiloes['onPress'] = config;
            variable37 = _closure1_slot12;
            cntext = _closure1_slot1;
            whisks = _closure1_slot2;
            config = 29;
            config = whisks[config];
            variable36 = cntext.bind(report)(config);
            quebec = {};
            quebec['emoji'] = sizing;
            config = status.emoji;
            quebec['style'] = config;
            config = true;
            quebec['withPlaceholder'] = config;
            quebec = variable37.bind(report)(variable36, quebec);
            kiloes['children'] = quebec;
            update = target.bind(report)(update, kiloes);
            kiloes = new Array(3);
            kiloes[0] = update;
            target = _closure1_slot12;
            update = 30;
            update = whisks[update];
            cntext = cntext.bind(report)(update);
            update = {};
            update['ref'] = equals;
            equals = _closure1_slot8;
            update['maxLength'] = equals;
            variable36 = _closure1_slot0;
            equals = whisks[ctrled];
            equals = variable36.bind(report)(equals);
            variable37 = equals.intl;
            quebec = variable37.string;
            equals = whisks[ctrled];
            equals = variable36.bind(report)(equals);
            equals = equals.t;
            equals = equals.xod36+;
            equals = quebec.bind(variable37)(equals);
            update['placeholder'] = equals;
            equals = status.inputPlaceholder;
            equals = equals.color;
            update['placeholderTextColor'] = equals;
            equals = whisks[ctrled];
            equals = variable36.bind(report)(equals);
            quebec = equals.intl;
            equals = quebec.string;
            whisks = whisks[ctrled];
            whisks = variable36.bind(report)(whisks);
            whisks = whisks.t;
            whisks = whisks.xalUlZ;
            whisks = equals.bind(quebec)(whisks);
            update['accessibilityLabel'] = whisks;
            update['onSubmitEditing'] = limora;
            limora = status.status;
            update['style'] = limora;
            update['value'] = result;
            update['onChange'] = sierra;
            sierra = false;
            update['autoCorrect'] = sierra;
            update['showBorder'] = sierra;
            update['showTopContainer'] = sierra;
            sierra = 'top';
            update['textAlignVertical'] = sierra;
            sierra = 'none';
            update['autoCapitalize'] = sierra;
            status = status.statusText;
            update['inputTextStyle'] = status;
            update['multiline'] = config;
            status = 'blurAndSubmit';
            update['submitBehavior'] = status;
            status = 'done';
            update['returnKeyType'] = status;
            update['autoFocus'] = config;
            update = target.bind(report)(cntext, update);
            kiloes[1] = update;
            sizing = offset != sizing;
            if(sizing) { _fun00002_ip = 1407; continue _fun00001 }
 1403:
            sizing = echoed !== result;
 1407:
            if(!sizing) { _fun00002_ip = 1430; continue _fun00001 }
 1410:
            update = _closure1_slot12;
            echoed = _closure1_slot15;
            result = {};
            result['onPress'] = record;
            sizing = update.bind(report)(echoed, result);
 1430:
            kiloes[2] = sizing;
            backup['children'] = kiloes;
            backup = option.bind(report)(golfie, backup);
            foxtra[1] = backup;
            yankee['children'] = foxtra;
            yankee = option.bind(report)(golfie, yankee);
            verify[1] = yankee;
            sizing = _closure1_slot12;
            cntext = _closure1_slot0;
            target = _closure1_slot2;
            yankee = 31;
            foxtra = target[yankee];
            foxtra = cntext.bind(report)(foxtra);
            kiloes = foxtra.TableRowGroup;
            foxtra = {};
            update = _closure1_slot12;
            backup = 32;
            result = target[backup];
            result = cntext.bind(report)(result);
            echoed = result.TableRow;
            result = {};
            record = target[ctrled];
            record = cntext.bind(report)(record);
            sierra = record.intl;
            status = sierra.string;
            record = target[ctrled];
            record = cntext.bind(report)(record);
            record = record.t;
            record = record.E45wvL;
            record = status.bind(sierra)(record);
            result['label'] = record;
            result['arrow'] = config;
            vacuum = function() { // Original name: onPress
                tangon = _closure1_slot0;
                michal = _closure1_slot2;
                entity = 25;
                report = michal[entity];
                entity = undefined;
                oscard = tangon.bind(entity)(report);
                report = oscard.dismissKeyboard;
                report = report.bind(oscard)();
                report = _closure1_slot1;
                zuuluu = 33;
                zuuluu = michal[zuuluu];
                oscard = report.bind(entity)(zuuluu);
                report = oscard.openLazy;
                zuuluu = 35;
                zuuluu = michal[zuuluu];
                tangon = tangon.bind(entity)(zuuluu);
                zuuluu = 34;
                zuuluu = michal[zuuluu];
                michal = michal.paths;
                tangon = tangon.bind(entity)(zuuluu, michal);
                zuuluu = {};
                golfie = _closure2_slot7;
                zuuluu['initialValue'] = golfie;
                michal = _closure2_slot8;
                zuuluu['onChange'] = michal;
                michal = 'ClearAfterOptionsActionSheet';
                michal = report.bind(oscard)(tangon, michal, zuuluu);
                return entity;
            };
            result['onPress'] = vacuum;
            config = _closure1_slot12;
            source = target[source];
            source = cntext.bind(report)(source);
            vacuum = source.Text;
            source = {};
            record = 'text-sm/medium';
            source['variant'] = record;
            record = 36;
            record = target[record];
            cntext = cntext.bind(report)(record);
            record = cntext.getLabelForClearAfterValue;
            record = record.bind(cntext)(papara);
            source['children'] = record;
            source = config.bind(report)(vacuum, source);
            result['trailing'] = source;
            result = update.bind(report)(echoed, result);
            foxtra['children'] = result;
            foxtra = sizing.bind(report)(kiloes, foxtra);
            verify[2] = foxtra;
            offset = offset != romeon;
            if(!offset) { _fun00002_ip = 1867; continue _fun00001 }
 1676:
            foxtra = _closure1_slot12;
            source = _closure1_slot0;
            result = _closure1_slot2;
            yankee = result[yankee];
            yankee = source.bind(report)(yankee);
            romeon = yankee.TableRowGroup;
            yankee = {};
            sizing = _closure1_slot12;
            backup = result[backup];
            backup = source.bind(report)(backup);
            kiloes = backup.TableRow;
            backup = {};
            vacuum = _closure1_slot12;
            echoed = 37;
            echoed = result[echoed];
            echoed = source.bind(report)(echoed);
            update = echoed.TrashIcon;
            echoed = {};
            config = _closure1_slot1;
            sequen = 9;
            sequen = result[sequen];
            sequen = config.bind(report)(sequen);
            sequen = sequen.colors;
            sequen = sequen.TEXT_DANGER;
            echoed['color'] = sequen;
            echoed = vacuum.bind(report)(update, echoed);
            backup['icon'] = echoed;
            echoed = result[ctrled];
            echoed = source.bind(report)(echoed);
            update = echoed.intl;
            echoed = update.string;
            result = result[ctrled];
            result = source.bind(report)(result);
            result = result.t;
            result = result.wO53tr;
            result = echoed.bind(update)(result);
            backup['label'] = result;
            backup['onPress'] = output;
            output = 'danger';
            backup['variant'] = output;
            backup = sizing.bind(report)(kiloes, backup);
            yankee['children'] = backup;
            offset = foxtra.bind(report)(romeon, yankee);
 1867:
            verify[3] = offset;
            oscard['children'] = verify;
            oscard = option.bind(report)(golfie, oscard);
            michal['children'] = oscard;
            entity = tangon.bind(report)(zuuluu, michal);
 1891:
            return entity;
        }
    };
    zuuluu['default'] = michal;
    return entity;
})();