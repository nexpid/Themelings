// app/modules/safety_flows/native/UpdateAppScreen.tsx
export default (function(_, argBar, argBaz, __, ___, argFre, argPlu) {
    report = argBar;
    yankee = argBaz;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    var _closure1_slot1 = yankee;
    var _closure1_slot2 = oscard;
    entity = global;
    option = entity.Object;
    golfie = option.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(option)(zuuluu, entity, tangon);
    entity = 0;
    tangon = oscard[entity];
    entity = undefined;
    tangon = report.bind(entity)(tangon);
    golfie = tangon.NativeModules;
    var _closure1_slot3 = golfie;
    tangon = tangon.View;
    var _closure1_slot4 = tangon;
    tangon = 1;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    golfie = tangon.jsx;
    var _closure1_slot5 = golfie;
    tangon = tangon.jsxs;
    var _closure1_slot6 = tangon;
    tangon = 2;
    tangon = oscard[tangon];
    option = report.bind(entity)(tangon);
    golfie = option.createStyles;
    tangon = {};
    verify = {'flexDirection': 'column', 'justifyContent': 'center'};
    offset = 3;
    romeon = oscard[offset];
    romeon = yankee.bind(entity)(romeon);
    romeon = romeon.spacing;
    romeon = romeon.PX_8;
    verify['gap'] = romeon;
    tangon['container'] = verify;
    verify = {};
    offset = oscard[offset];
    offset = yankee.bind(entity)(offset);
    offset = offset.spacing;
    offset = offset.PX_8;
    verify['marginTop'] = offset;
    tangon['buttonContainer'] = verify;
    tangon = golfie.bind(option)(tangon);
    var _closure1_slot7 = tangon;
    tangon = 8;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/safety_flows/native/UpdateAppScreen.tsx';
    tangon = report.bind(oscard)(tangon);
    michal = function() { // Original name: UpdateAppScreen
        entity = _closure1_slot7;
        tangon = undefined;
        option = entity.bind(tangon)();
        zuuluu = _closure1_slot6;
        michal = _closure1_slot4;
        entity = {};
        report = option.container;
        entity['style'] = report;
        golfie = _closure1_slot5;
        romeon = _closure1_slot0;
        backup = _closure1_slot2;
        oscard = 4;
        report = backup[oscard];
        report = romeon.bind(tangon)(report);
        verify = report.Text;
        report = {};
        yankee = 'heading-lg/semibold';
        report['variant'] = yankee;
        yankee = 5;
        foxtra = backup[yankee];
        foxtra = romeon.bind(tangon)(foxtra);
        output = foxtra.intl;
        sizing = output.string;
        foxtra = _closure1_slot1;
        offset = 6;
        kiloes = backup[offset];
        kiloes = foxtra.bind(tangon)(kiloes);
        kiloes = kiloes.yxqMCA;
        kiloes = sizing.bind(output)(kiloes);
        report['children'] = kiloes;
        verify = golfie.bind(tangon)(verify, report);
        report = new Array(3);
        report[0] = verify;
        oscard = backup[oscard];
        oscard = romeon.bind(tangon)(oscard);
        verify = oscard.Text;
        oscard = {'variant': 'text-md/normal', 'color': 'text-muted'};
        kiloes = backup[yankee];
        kiloes = romeon.bind(tangon)(kiloes);
        output = kiloes.intl;
        sizing = output.string;
        kiloes = backup[offset];
        kiloes = foxtra.bind(tangon)(kiloes);
        kiloes = kiloes.VBZJJi;
        kiloes = sizing.bind(output)(kiloes);
        oscard['children'] = kiloes;
        oscard = golfie.bind(tangon)(verify, oscard);
        report[1] = oscard;
        oscard = {};
        option = option.buttonContainer;
        oscard['style'] = option;
        option = 7;
        option = backup[option];
        option = romeon.bind(tangon)(option);
        verify = option.Button;
        option = {};
        kiloes = function() { // Original name: onPress
            entity = _closure1_slot3;
            michal = entity.BundleUpdaterManager;
            entity = michal.reload;
            entity = entity.bind(michal)();
            entity = undefined;
            return entity;
        };
        option['onPress'] = kiloes;
        yankee = backup[yankee];
        yankee = romeon.bind(tangon)(yankee);
        romeon = yankee.intl;
        yankee = romeon.string;
        offset = backup[offset];
        offset = foxtra.bind(tangon)(offset);
        offset = offset.o4D6fn;
        offset = yankee.bind(romeon)(offset);
        option['text'] = offset;
        offset = 'primary';
        option['variant'] = offset;
        offset = 'md';
        option['size'] = offset;
        option = golfie.bind(tangon)(verify, option);
        oscard['children'] = option;
        oscard = golfie.bind(tangon)(michal, oscard);
        report[2] = oscard;
        entity['children'] = report;
        entity = zuuluu.bind(tangon)(michal, entity);
        return entity;
    };
    zuuluu['default'] = michal;
    return entity;
})();