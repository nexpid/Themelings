// app/modules/profile_customization/native/DMIdentities.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    report = argBar;
    yankee = argBaz;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    var _closure1_slot1 = yankee;
    var _closure1_slot2 = oscard;
    entity = global;
    option = entity.Object;
    golfie = option.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(option)(zuuluu, entity, tangon);
    entity = 0;
    golfie = oscard[entity];
    tangon = argCor;
    entity = undefined;
    tangon = tangon.bind(entity)(golfie);
    tangon = 1;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.View;
    var _closure1_slot3 = tangon;
    tangon = 2;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    golfie = tangon.jsx;
    var _closure1_slot4 = golfie;
    tangon = tangon.jsxs;
    var _closure1_slot5 = tangon;
    tangon = 3;
    tangon = oscard[tangon];
    option = report.bind(entity)(tangon);
    golfie = option.createStyles;
    tangon = {};
    offset = 4;
    verify = {'paddingHorizontal': 4, 'height': 18};
    tangon['icons'] = verify;
    verify = {'height': 18, 'width': 18};
    tangon['iconWrapper'] = verify;
    verify = {'borderColor': null, 'backgroundColor': null, 'height': 18, 'borderRadius': 9, 'paddingHorizontal': 6, 'marginLeft': 4294967291};
    romeon = oscard[offset];
    romeon = yankee.bind(entity)(romeon);
    romeon = romeon.colors;
    romeon = romeon.BACKGROUND_FLOATING;
    verify['borderColor'] = romeon;
    romeon = oscard[offset];
    romeon = yankee.bind(entity)(romeon);
    romeon = romeon.colors;
    romeon = romeon.BACKGROUND_SECONDARY;
    verify['backgroundColor'] = romeon;
    tangon['overflow'] = verify;
    verify = {'backgroundColor': null, 'alignItems': 'flex-start', 'paddingHorizontal': 6, 'overflow': 'hidden'};
    romeon = oscard[offset];
    romeon = yankee.bind(entity)(romeon);
    romeon = romeon.colors;
    romeon = romeon.BACKGROUND_SECONDARY;
    verify['backgroundColor'] = romeon;
    offset = oscard[offset];
    offset = yankee.bind(entity)(offset);
    offset = offset.radii;
    offset = offset.sm;
    verify['borderRadius'] = offset;
    tangon['badge'] = verify;
    tangon = golfie.bind(option)(tangon);
    var _closure1_slot6 = tangon;
    tangon = 11;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/profile_customization/native/DMIdentities.tsx';
    tangon = report.bind(oscard)(tangon);
    michal = function(argFoo) { // Original name: DMIdentities
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            michal = argFoo;
            entity = michal.user;
            var _closure2_slot0 = entity;
            oscard = michal.style;
            update = michal.overflowStyle;
            result = michal.iconWrapperStyle;
            michal = _closure1_slot6;
            report = undefined;
            sizing = michal.bind(report)();
            zuuluu = entity.id;
            tangon = _closure1_slot1;
            golfie = _closure1_slot2;
            michal = 5;
            michal = golfie[michal];
            michal = tangon.bind(report)(michal);
            michal = michal.bind(report)(zuuluu);
            offset = michal.nicknames;
            michal = michal.canShowNicknames;
            tangon = _closure1_slot0;
            zuuluu = 6;
            zuuluu = golfie[zuuluu];
            tangon = tangon.bind(report)(zuuluu);
            zuuluu = tangon.useAvatarsWithGuilds;
            entity = entity.id;
            kiloes = zuuluu.bind(tangon)(entity);
            entity = null;
            if(!michal) { _fun00002_ip = 474; continue _fun00001 }
 126:
            tangon = _closure1_slot5;
            zuuluu = _closure1_slot3;
            michal = {};
            michal['style'] = oscard;
            verify = _closure1_slot4;
            oscard = {};
            golfie = sizing.badge;
            oscard['style'] = golfie;
            option = _closure1_slot0;
            yankee = _closure1_slot2;
            golfie = 7;
            foxtra = yankee[golfie];
            foxtra = option.bind(report)(foxtra);
            output = foxtra.Text;
            foxtra = {'variant': 'text-xs/bold', 'color': 'text-muted'};
            echoed = 8;
            source = yankee[echoed];
            source = option.bind(report)(source);
            ctrled = source.intl;
            source = ctrled.string;
            echoed = yankee[echoed];
            echoed = option.bind(report)(echoed);
            echoed = echoed.t;
            echoed = echoed.l1QVfn;
            echoed = source.bind(ctrled)(echoed);
            foxtra['children'] = echoed;
            foxtra = verify.bind(report)(output, foxtra);
            oscard['children'] = foxtra;
            foxtra = verify.bind(report)(zuuluu, oscard);
            oscard = new Array(3);
            oscard[0] = foxtra;
            foxtra = _closure1_slot1;
            output = 9;
            romeon = yankee[output];
            foxtra = foxtra.bind(report)(romeon);
            romeon = {};
            source = sizing.overflow;
            echoed = new Array(2);
            echoed[0] = source;
            echoed[1] = update;
            romeon['overflowStyle'] = echoed;
            output = yankee[output];
            output = option.bind(report)(output);
            output = output.OverflowText;
            romeon['overflowComponent'] = output;
            echoed = sizing.iconWrapper;
            output = new Array(2);
            output[0] = echoed;
            output[1] = result;
            romeon['iconWrapperStyle'] = output;
            sizing = sizing.icons;
            romeon['style'] = sizing;
            romeon['items'] = kiloes;
            kiloes = 3;
            romeon['max'] = kiloes;
            kiloes = -5;
            romeon['offsetAmount'] = kiloes;
            backup = function(argFoo, argBar) { // Original name: renderItem
                _fun00003: for(var _fun00004_ip = 0; ; ) switch(_fun00004_ip) {
 0:
                    tangon = _closure1_slot4;
                    michal = _closure1_slot1;
                    golfie = _closure1_slot2;
                    report = 10;
                    entity = golfie[report];
                    zuuluu = undefined;
                    michal = michal.bind(zuuluu)(entity);
                    entity = {};
                    option = _closure2_slot0;
                    entity['user'] = option;
                    option = argFoo;
                    entity['guildId'] = option;
                    oscard = _closure1_slot0;
                    report = golfie[report];
                    report = oscard.bind(zuuluu)(report);
                    report = report.AvatarSizes;
                    report = report.XXSMALL;
                    entity['size'] = report;
                    oscard = argBar;
                    report = undefined;
                    if(oscard) { _fun00004_ip = 100; continue _fun00003 }
 86:
                    report = {'radius': 10, 'inset': 4294967295};
 100:
                    entity['cutout'] = report;
                    entity = tangon.bind(zuuluu)(michal, entity);
                    return entity;
                }
            };
            romeon['renderItem'] = backup;
            romeon = verify.bind(report)(foxtra, romeon);
            oscard[1] = romeon;
            golfie = yankee[golfie];
            golfie = option.bind(report)(golfie);
            option = golfie.Text;
            golfie = {'style': null, 'lineClamp': 1, 'variant': 'heading-sm/medium', 'color': 'text-normal'};
            yankee = {};
            romeon = 1;
            yankee['flex'] = romeon;
            golfie['style'] = yankee;
            golfie['children'] = offset;
            golfie = verify.bind(report)(option, golfie);
            oscard[2] = golfie;
            michal['children'] = oscard;
            entity = tangon.bind(report)(zuuluu, michal);
 474:
            return entity;
        }
    };
    zuuluu['default'] = michal;
    return entity;
})();