// app/modules/gif_picker/native/GIFPickerSearchSuggestions.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    report = argBar;
    foxtra = argBaz;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    var _closure1_slot1 = foxtra;
    var _closure1_slot2 = oscard;
    entity = global;
    option = entity.Object;
    golfie = option.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(option)(zuuluu, entity, tangon);
    entity = 0;
    golfie = oscard[entity];
    tangon = argCor;
    entity = undefined;
    golfie = tangon.bind(entity)(golfie);
    tangon = 1;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.View;
    var _closure1_slot3 = tangon;
    tangon = 2;
    tangon = oscard[tangon];
    tangon = foxtra.bind(entity)(tangon);
    var _closure1_slot4 = tangon;
    tangon = 3;
    option = oscard[tangon];
    option = report.bind(entity)(option);
    option = option.jsx;
    var _closure1_slot5 = option;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.jsxs;
    var _closure1_slot6 = tangon;
    tangon = 4;
    tangon = oscard[tangon];
    verify = report.bind(entity)(tangon);
    option = verify.createStyles;
    tangon = {};
    offset = {'justifyContent': 'center', 'flexDirection': 'row', 'flexWrap': 'wrap'};
    yankee = 'center';
    romeon = 5;
    backup = oscard[romeon];
    backup = foxtra.bind(entity)(backup);
    backup = backup.spacing;
    backup = backup.PX_8;
    offset['gap'] = backup;
    tangon['suggestionsContainer'] = offset;
    offset = {};
    backup = 'flex-start';
    offset['justifyContent'] = backup;
    backup = oscard[romeon];
    backup = foxtra.bind(entity)(backup);
    backup = backup.spacing;
    backup = backup.PX_16;
    offset['paddingVertical'] = backup;
    tangon['footerSuggestionsContainer'] = offset;
    offset = {};
    romeon = oscard[romeon];
    romeon = foxtra.bind(entity)(romeon);
    romeon = romeon.spacing;
    romeon = romeon.PX_16;
    offset['marginBottom'] = romeon;
    offset['textAlign'] = yankee;
    tangon['footerSuggestionsTitle'] = offset;
    tangon = option.bind(verify)(tangon);
    var _closure1_slot7 = tangon;
    tangon = golfie.memo;
    michal = function(argFoo) { // Original name: GIFPickerSearchSuggestions
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            entity = argFoo;
            entity = entity.onClickSuggestion;
            var _closure2_slot0 = entity;
            entity = _closure1_slot7;
            report = undefined;
            offset = entity.bind(report)();
            michal = _closure1_slot0;
            zuuluu = _closure1_slot2;
            entity = 6;
            entity = zuuluu[entity];
            tangon = michal.bind(report)(entity);
            zuuluu = tangon.useStateFromStoresArray;
            entity = _closure1_slot4;
            michal = new Array(1);
            michal[0] = entity;
            entity = function() {
                michal = _closure1_slot4;
                entity = michal.getSuggestions;
                entity = entity.bind(michal)();
                return entity;
            };
            yankee = zuuluu.bind(tangon)(michal, entity);
            zuuluu = yankee.length;
            michal = 0;
            entity = null;
            if(!(michal !== zuuluu)) { _fun00002_ip = 290; continue _fun00001 }
 95:
            tangon = _closure1_slot6;
            zuuluu = _closure1_slot3;
            michal = {};
            golfie = offset.footerSuggestionsContainer;
            michal['style'] = golfie;
            option = _closure1_slot5;
            kiloes = _closure1_slot0;
            sizing = _closure1_slot2;
            oscard = 7;
            oscard = sizing[oscard];
            oscard = kiloes.bind(report)(oscard);
            golfie = oscard.Text;
            oscard = {'style': null, 'variant': 'text-md/medium', 'color': 'header-secondary'};
            romeon = offset.footerSuggestionsTitle;
            oscard['style'] = romeon;
            romeon = 8;
            foxtra = sizing[romeon];
            foxtra = kiloes.bind(report)(foxtra);
            backup = foxtra.intl;
            foxtra = backup.string;
            romeon = sizing[romeon];
            romeon = kiloes.bind(report)(romeon);
            romeon = romeon.t;
            romeon = romeon.3JGJo6;
            romeon = foxtra.bind(backup)(romeon);
            oscard['children'] = romeon;
            golfie = option.bind(report)(golfie, oscard);
            oscard = new Array(2);
            oscard[0] = golfie;
            golfie = {};
            offset = offset.suggestionsContainer;
            golfie['style'] = offset;
            offset = yankee.map;
            verify = function(argFoo) {
                report = argFoo;
                var _closure3_slot0 = report;
                tangon = _closure1_slot5;
                michal = _closure1_slot0;
                verify = _closure1_slot2;
                entity = 9;
                entity = verify[entity];
                zuuluu = undefined;
                entity = michal.bind(zuuluu)(entity);
                michal = entity.Button;
                entity = {'size': 'sm', 'variant': 'secondary'};
                option = _closure1_slot1;
                golfie = 5;
                golfie = verify[golfie];
                golfie = option.bind(zuuluu)(golfie);
                golfie = golfie.spacing;
                golfie = golfie.PX_8;
                entity['hitSlop'] = golfie;
                entity['text'] = report;
                oscard = function() { // Original name: onPress
                    zuuluu = _closure2_slot0;
                    michal = _closure3_slot0;
                    entity = undefined;
                    entity = zuuluu.bind(entity)(michal);
                    return entity;
                };
                entity['onPress'] = oscard;
                entity = tangon.bind(zuuluu)(michal, entity, report);
                return entity;
            };
            verify = offset.bind(yankee)(verify);
            golfie['children'] = verify;
            golfie = option.bind(report)(zuuluu, golfie);
            oscard[1] = golfie;
            michal['children'] = oscard;
            entity = tangon.bind(report)(zuuluu, michal);
 290:
            return entity;
        }
    };
    michal = tangon.bind(golfie)(michal);
    tangon = 10;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/gif_picker/native/GIFPickerSearchSuggestions.tsx';
    tangon = report.bind(oscard)(tangon);
    zuuluu['default'] = michal;
    return entity;
})();