// app/modules/gif_picker/native/GIFPickerSearchSuggestions.tsx
export default (function(argFoo, argBar, argBaz, argCorge, _, argFred, argPlugh) {
    report = argBar;
    foxtrot = argBaz;
    zulu = argFred;
    oscar = argPlugh;
    var _closure1_slot0 = report;
    var _closure1_slot1 = foxtrot;
    var _closure1_slot2 = oscar;
    entity = global;
    options = entity.Object;
    golf = options.defineProperty;
    tango = {};
    entity = true;
    tango['value'] = entity;
    entity = '__esModule';
    entity = golf.bind(options)(zulu, entity, tango);
    entity = 0;
    golf = oscar[entity];
    tango = argCorge;
    entity = undefined;
    golf = tango.bind(entity)(golf);
    tango = 1;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.View;
    var _closure1_slot3 = tango;
    tango = 2;
    tango = oscar[tango];
    tango = foxtrot.bind(entity)(tango);
    var _closure1_slot4 = tango;
    tango = 3;
    options = oscar[tango];
    options = report.bind(entity)(options);
    options = options.jsx;
    var _closure1_slot5 = options;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.jsxs;
    var _closure1_slot6 = tango;
    tango = 4;
    tango = oscar[tango];
    verify = report.bind(entity)(tango);
    options = verify.createStyles;
    tango = {};
    offset = {'justifyContent': 'center', 'flexDirection': 'row', 'flexWrap': 'wrap'};
    yankee = 'center';
    romeo = 5;
    backup = oscar[romeo];
    backup = foxtrot.bind(entity)(backup);
    backup = backup.spacing;
    backup = backup.PX_8;
    offset['gap'] = backup;
    tango['suggestionsContainer'] = offset;
    offset = {};
    backup = 'flex-start';
    offset['justifyContent'] = backup;
    backup = oscar[romeo];
    backup = foxtrot.bind(entity)(backup);
    backup = backup.spacing;
    backup = backup.PX_16;
    offset['paddingVertical'] = backup;
    tango['footerSuggestionsContainer'] = offset;
    offset = {};
    romeo = oscar[romeo];
    romeo = foxtrot.bind(entity)(romeo);
    romeo = romeo.spacing;
    romeo = romeo.PX_16;
    offset['marginBottom'] = romeo;
    offset['textAlign'] = yankee;
    tango['footerSuggestionsTitle'] = offset;
    tango = options.bind(verify)(tango);
    var _closure1_slot7 = tango;
    tango = golf.memo;
    mike = function(argFoo) { // Original name: GIFPickerSearchSuggestions
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            entity = argFoo;
            entity = entity.onClickSuggestion;
            var _closure2_slot0 = entity;
            entity = _closure1_slot7;
            report = undefined;
            offset = entity.bind(report)();
            mike = _closure1_slot0;
            zulu = _closure1_slot2;
            entity = 6;
            entity = zulu[entity];
            tango = mike.bind(report)(entity);
            zulu = tango.useStateFromStoresArray;
            entity = _closure1_slot4;
            mike = new Array(1);
            mike[0] = entity;
            entity = function() {
                mike = _closure1_slot4;
                entity = mike.getSuggestions;
                entity = entity.bind(mike)();
                return entity;
            };
            yankee = zulu.bind(tango)(mike, entity);
            zulu = yankee.length;
            mike = 0;
            entity = null;
            if(!(mike !== zulu)) { _fun00002_ip = 286; continue _fun00001 }
 93:
            tango = _closure1_slot6;
            zulu = _closure1_slot3;
            mike = {};
            golf = offset.footerSuggestionsContainer;
            mike['style'] = golf;
            options = _closure1_slot5;
            kilo = _closure1_slot0;
            sizing = _closure1_slot2;
            oscar = 7;
            oscar = sizing[oscar];
            oscar = kilo.bind(report)(oscar);
            golf = oscar.Text;
            oscar = {'style': null, 'variant': 'text-md/medium', 'color': 'header-secondary'};
            romeo = offset.footerSuggestionsTitle;
            oscar['style'] = romeo;
            romeo = 8;
            foxtrot = sizing[romeo];
            foxtrot = kilo.bind(report)(foxtrot);
            backup = foxtrot.intl;
            foxtrot = backup.string;
            romeo = sizing[romeo];
            romeo = kilo.bind(report)(romeo);
            romeo = romeo.t;
            romeo = romeo.3JGJo6;
            romeo = foxtrot.bind(backup)(romeo);
            oscar['children'] = romeo;
            golf = options.bind(report)(golf, oscar);
            oscar = new Array(2);
            oscar[0] = golf;
            golf = {};
            offset = offset.suggestionsContainer;
            golf['style'] = offset;
            offset = yankee.map;
            verify = function(argFoo) {
                report = argFoo;
                var _closure3_slot0 = report;
                tango = _closure1_slot5;
                mike = _closure1_slot0;
                verify = _closure1_slot2;
                entity = 9;
                entity = verify[entity];
                zulu = undefined;
                entity = mike.bind(zulu)(entity);
                mike = entity.Button;
                entity = {'size': 'sm', 'variant': 'secondary'};
                options = _closure1_slot1;
                golf = 5;
                golf = verify[golf];
                golf = options.bind(zulu)(golf);
                golf = golf.spacing;
                golf = golf.PX_8;
                entity['hitSlop'] = golf;
                entity['text'] = report;
                oscar = function() { // Original name: onPress
                    zulu = _closure2_slot0;
                    mike = _closure3_slot0;
                    entity = undefined;
                    entity = zulu.bind(entity)(mike);
                    return entity;
                };
                entity['onPress'] = oscar;
                entity = tango.bind(zulu)(mike, entity, report);
                return entity;
            };
            verify = offset.bind(yankee)(verify);
            golf['children'] = verify;
            golf = options.bind(report)(zulu, golf);
            oscar[1] = golf;
            mike['children'] = oscar;
            entity = tango.bind(report)(zulu, mike);
 286:
            return entity;
        }
    };
    mike = tango.bind(golf)(mike);
    tango = 10;
    tango = oscar[tango];
    oscar = report.bind(entity)(tango);
    report = oscar.fileFinishedImporting;
    tango = 'modules/gif_picker/native/GIFPickerSearchSuggestions.tsx';
    tango = report.bind(oscar)(tango);
    zulu['default'] = mike;
    return entity;
})();