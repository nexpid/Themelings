// app/modules/gif_picker/native/GIFPickerCategoryView.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    report = argBar;
    yankee = argBaz;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    var _closure1_slot1 = yankee;
    var _closure1_slot2 = oscard;
    entity = global;
    option = entity.Object;
    golfie = option.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(option)(zuuluu, entity, tangon);
    entity = 0;
    golfie = oscard[entity];
    tangon = argCor;
    entity = undefined;
    tangon = tangon.bind(entity)(golfie);
    var _closure1_slot3 = tangon;
    foxtra = 1;
    tangon = oscard[foxtra];
    tangon = report.bind(entity)(tangon);
    romeon = tangon.StyleSheet;
    tangon = tangon.View;
    var _closure1_slot4 = tangon;
    tangon = 2;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.GIFPickerResultTypes;
    var _closure1_slot5 = tangon;
    tangon = 3;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    golfie = tangon.jsx;
    var _closure1_slot6 = golfie;
    tangon = tangon.jsxs;
    var _closure1_slot7 = tangon;
    tangon = 4;
    tangon = oscard[tangon];
    option = report.bind(entity)(tangon);
    golfie = option.createStyles;
    tangon = {};
    verify = {};
    offset = 5;
    backup = oscard[offset];
    backup = yankee.bind(entity)(backup);
    backup = backup.colors;
    backup = backup.BACKGROUND_MODIFIER_ACCENT;
    verify['backgroundColor'] = backup;
    backup = oscard[offset];
    backup = yankee.bind(entity)(backup);
    backup = backup.radii;
    backup = backup.xs;
    verify['borderRadius'] = backup;
    verify['flex'] = foxtra;
    tangon['container'] = verify;
    verify = {};
    verify['flex'] = foxtra;
    tangon['gifButton'] = verify;
    verify = {};
    backup = oscard[offset];
    backup = yankee.bind(entity)(backup);
    backup = backup.radii;
    backup = backup.xs;
    verify['borderRadius'] = backup;
    verify['flex'] = foxtra;
    tangon['gifImage'] = verify;
    verify = {};
    sizing = romeon.absoluteFillObject;
    output = verify;
    foxtra = copyDataProperties(output, sizing);
    foxtra = oscard[offset];
    foxtra = yankee.bind(entity)(foxtra);
    foxtra = foxtra.unsafe_rawColors;
    backup = foxtra.BLACK_500;
    foxtra = 'backgroundColor';
    verify[foxtra] = backup;
    foxtra = oscard[offset];
    foxtra = yankee.bind(entity)(foxtra);
    foxtra = foxtra.radii;
    backup = foxtra.xs;
    foxtra = 'borderRadius';
    verify[foxtra] = backup;
    backup = 0.6;
    foxtra = 'opacity';
    verify[foxtra] = backup;
    tangon['gifOverlay'] = verify;
    verify = {};
    sizing = romeon.absoluteFillObject;
    output = verify;
    romeon = copyDataProperties(output, sizing);
    romeon = oscard[offset];
    romeon = yankee.bind(entity)(romeon);
    romeon = romeon.spacing;
    foxtra = romeon.PX_8;
    romeon = 'margin';
    verify[romeon] = foxtra;
    foxtra = 'center';
    romeon = 'justifyContent';
    verify[romeon] = foxtra;
    backup = 'row';
    romeon = 'flexDirection';
    verify[romeon] = backup;
    romeon = 'alignItems';
    verify[romeon] = foxtra;
    tangon['categoryName'] = verify;
    verify = {};
    offset = oscard[offset];
    offset = yankee.bind(entity)(offset);
    offset = offset.spacing;
    offset = offset.PX_4;
    verify['marginRight'] = offset;
    tangon['categoryNameIcon'] = verify;
    tangon = golfie.bind(option)(tangon);
    var _closure1_slot8 = tangon;
    tangon = 12;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/gif_picker/native/GIFPickerCategoryView.tsx';
    tangon = report.bind(oscard)(tangon);
    michal = function(argFoo) { // Original name: GIFPickerCategoryView
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            michal = argFoo;
            oscard = michal.onSelectCategory;
            var _closure2_slot0 = oscard;
            romeon = michal.item;
            var _closure2_slot1 = romeon;
            michal = _closure1_slot8;
            tangon = undefined;
            backup = michal.bind(tangon)();
            report = _closure1_slot3;
            zuuluu = report.useCallback;
            michal = new Array(2);
            michal[0] = oscard;
            michal[1] = romeon;
            entity = function() {
                tangon = _closure2_slot0;
                entity = _closure2_slot1;
                zuuluu = entity.type;
                michal = entity.name;
                entity = undefined;
                michal = tangon.bind(entity)(zuuluu, michal);
                return entity;
            };
            report = zuuluu.bind(report)(entity, michal);
            zuuluu = _closure1_slot7;
            michal = _closure1_slot0;
            golfie = _closure1_slot2;
            entity = 6;
            entity = golfie[entity];
            entity = michal.bind(tangon)(entity);
            michal = entity.Pressable;
            entity = {};
            oscard = backup.container;
            entity['style'] = oscard;
            entity['onPress'] = report;
            option = _closure1_slot6;
            oscard = _closure1_slot1;
            report = 7;
            report = golfie[report];
            oscard = oscard.bind(tangon)(report);
            report = {};
            golfie = backup.gifImage;
            report['style'] = golfie;
            golfie = {};
            offset = romeon.src;
            golfie['uri'] = offset;
            report['source'] = golfie;
            oscard = option.bind(tangon)(oscard, report);
            report = new Array(3);
            report[0] = oscard;
            golfie = _closure1_slot4;
            oscard = {};
            offset = backup.gifOverlay;
            oscard['style'] = offset;
            oscard = option.bind(tangon)(golfie, oscard);
            report[1] = oscard;
            oscard = {};
            option = backup.categoryName;
            oscard['style'] = option;
            offset = romeon.type;
            option = _closure1_slot5;
            option = option.TRENDING_GIFS;
            if(!(offset !== option)) { _fun00002_ip = 343; continue _fun00001 }
 234:
            yankee = romeon.type;
            option = _closure1_slot5;
            option = option.FAVORITES;
            offset = null;
            if(!(yankee === option)) { _fun00002_ip = 341; continue _fun00001 }
 255:
            foxtra = _closure1_slot6;
            yankee = _closure1_slot0;
            output = _closure1_slot2;
            option = 9;
            option = output[option];
            option = yankee.bind(tangon)(option);
            yankee = option.StarIcon;
            option = {};
            kiloes = 'sm';
            option['size'] = kiloes;
            kiloes = backup.categoryNameIcon;
            option['style'] = kiloes;
            sizing = _closure1_slot1;
            kiloes = 5;
            kiloes = output[kiloes];
            kiloes = sizing.bind(tangon)(kiloes);
            kiloes = kiloes.colors;
            kiloes = kiloes.WHITE;
            option['color'] = kiloes;
            offset = foxtra.bind(tangon)(yankee, option);
 341:
            _fun00002_ip = 429; continue _fun00001;
 343:
            foxtra = _closure1_slot6;
            yankee = _closure1_slot0;
            sizing = _closure1_slot2;
            option = 8;
            option = sizing[option];
            option = yankee.bind(tangon)(option);
            yankee = option.AnalyticsIcon;
            option = {};
            kiloes = 'sm';
            option['size'] = kiloes;
            backup = backup.categoryNameIcon;
            option['style'] = backup;
            kiloes = _closure1_slot1;
            backup = 5;
            backup = sizing[backup];
            backup = kiloes.bind(tangon)(backup);
            backup = backup.colors;
            backup = backup.WHITE;
            option['color'] = backup;
            offset = foxtra.bind(tangon)(yankee, option);
 429:
            option = new Array(2);
            option[0] = offset;
            yankee = _closure1_slot6;
            backup = _closure1_slot0;
            output = _closure1_slot2;
            verify = 10;
            verify = output[verify];
            verify = backup.bind(tangon)(verify);
            offset = verify.Text;
            verify = {'variant': 'text-sm/semibold', 'color': 'always-white', 'accessibilityLabel': null, 'maxFontSizeMultiplier': 2};
            foxtra = 11;
            kiloes = output[foxtra];
            kiloes = backup.bind(tangon)(kiloes);
            sizing = kiloes.intl;
            kiloes = sizing.formatToPlainString;
            foxtra = output[foxtra];
            foxtra = backup.bind(tangon)(foxtra);
            foxtra = foxtra.t;
            backup = foxtra.j+63p6;
            foxtra = {};
            output = romeon.name;
            foxtra['categoryName'] = output;
            foxtra = kiloes.bind(sizing)(backup, foxtra);
            verify['accessibilityLabel'] = foxtra;
            romeon = romeon.name;
            verify['children'] = romeon;
            verify = yankee.bind(tangon)(offset, verify);
            option[1] = verify;
            oscard['children'] = option;
            oscard = zuuluu.bind(tangon)(golfie, oscard);
            report[2] = oscard;
            entity['children'] = report;
            entity = zuuluu.bind(tangon)(michal, entity);
            return entity;
        }
    };
    zuuluu['default'] = michal;
    return entity;
})();