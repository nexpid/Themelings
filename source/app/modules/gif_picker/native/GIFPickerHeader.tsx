// app/modules/gif_picker/native/GIFPickerHeader.tsx
export default (function(argFoo, argBar, argBaz, argCorge, _, argFred, argPlugh) {
    report = argBar;
    romeo = argBaz;
    zulu = argFred;
    oscar = argPlugh;
    var _closure1_slot0 = report;
    var _closure1_slot1 = romeo;
    var _closure1_slot2 = oscar;
    entity = global;
    options = entity.Object;
    golf = options.defineProperty;
    tango = {};
    entity = true;
    tango['value'] = entity;
    entity = '__esModule';
    entity = golf.bind(options)(zulu, entity, tango);
    entity = 0;
    golf = oscar[entity];
    tango = argCorge;
    entity = undefined;
    golf = tango.bind(entity)(golf);
    tango = 1;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.View;
    var _closure1_slot3 = tango;
    kilo = 2;
    tango = oscar[kilo];
    tango = report.bind(entity)(tango);
    tango = tango.GIFPickerResultTypes;
    var _closure1_slot4 = tango;
    tango = 3;
    options = oscar[tango];
    options = report.bind(entity)(options);
    options = options.jsx;
    var _closure1_slot5 = options;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.jsxs;
    var _closure1_slot6 = tango;
    tango = 4;
    tango = oscar[tango];
    verify = report.bind(entity)(tango);
    options = verify.createStyles;
    tango = {};
    offset = {};
    yankee = 5;
    foxtrot = oscar[yankee];
    foxtrot = romeo.bind(entity)(foxtrot);
    foxtrot = foxtrot.spacing;
    foxtrot = foxtrot.PX_8;
    offset['paddingVertical'] = foxtrot;
    tango['container'] = offset;
    offset = {'borderWidth': 1, 'borderColor': 'transparent', 'paddingHorizontal': null, 'height': null, 'flexDirection': 'row', 'alignItems': 'center'};
    foxtrot = oscar[yankee];
    foxtrot = romeo.bind(entity)(foxtrot);
    foxtrot = foxtrot.spacing;
    foxtrot = foxtrot.PX_8;
    offset['paddingHorizontal'] = foxtrot;
    foxtrot = 6;
    foxtrot = oscar[foxtrot];
    foxtrot = report.bind(entity)(foxtrot);
    foxtrot = foxtrot.InputHeights;
    backup = foxtrot.MD;
    foxtrot = oscar[yankee];
    foxtrot = romeo.bind(entity)(foxtrot);
    foxtrot = foxtrot.spacing;
    foxtrot = foxtrot.PX_4;
    foxtrot = foxtrot / kilo;
    foxtrot = backup + foxtrot;
    offset['height'] = foxtrot;
    yankee = oscar[yankee];
    yankee = romeo.bind(entity)(yankee);
    yankee = yankee.spacing;
    yankee = yankee.PX_8;
    offset['gap'] = yankee;
    tango['header'] = offset;
    tango = options.bind(verify)(tango);
    var _closure1_slot7 = tango;
    tango = golf.memo;
    mike = function(argFoo) { // Original name: GIFPickerHeader
        _fun84874: for(var _fun84874_ip = 0; ; ) switch(_fun84874_ip) {
 0:
            entity = argFoo;
            output = entity.categoryType;
            offset = entity.onQueryClear;
            yankee = entity.onQueryChange;
            verify = entity.searchInputRef;
            entity = _closure1_slot7;
            tango = undefined;
            romeo = entity.bind(tango)();
            zulu = _closure1_slot5;
            mike = _closure1_slot3;
            entity = {};
            report = romeo.container;
            entity['style'] = report;
            report = _closure1_slot4;
            report = report.SEARCH;
            if(!(output !== report)) { _fun84874_ip = 553; continue _fun84874 }
 76:
            options = _closure1_slot6;
            backup = _closure1_slot0;
            sizing = _closure1_slot2;
            report = 9;
            report = sizing[report];
            report = backup.bind(tango)(report);
            golf = report.PressableOpacity;
            report = {};
            romeo = romeo.header;
            report['style'] = romeo;
            romeo = 'button';
            report['accessibilityRole'] = romeo;
            report['onPress'] = offset;
            source = 8;
            romeo = sizing[source];
            romeo = backup.bind(tango)(romeo);
            result = romeo.intl;
            kilo = result.formatToPlainString;
            romeo = sizing[source];
            romeo = backup.bind(tango)(romeo);
            romeo = romeo.t;
            foxtrot = romeo.UTypEh;
            romeo = {};
            echo = sizing[source];
            echo = backup.bind(tango)(echo);
            control = echo.intl;
            update = control.string;
            echo = sizing[source];
            echo = backup.bind(tango)(echo);
            echo = echo.t;
            echo = echo.ffgJrq;
            echo = update.bind(control)(echo);
            romeo['destination'] = echo;
            romeo = kilo.bind(result)(foxtrot, romeo);
            report['accessibilityLabel'] = romeo;
            kilo = _closure1_slot5;
            romeo = 10;
            romeo = sizing[romeo];
            romeo = backup.bind(tango)(romeo);
            foxtrot = romeo.ChevronLargeLeftIcon;
            romeo = {};
            echo = _closure1_slot1;
            result = 5;
            result = sizing[result];
            result = echo.bind(tango)(result);
            result = result.colors;
            result = result.INTERACTIVE_ACTIVE;
            romeo['color'] = result;
            result = 'sm';
            romeo['size'] = result;
            foxtrot = kilo.bind(tango)(foxtrot, romeo);
            romeo = new Array(2);
            romeo[0] = foxtrot;
            foxtrot = 11;
            foxtrot = sizing[foxtrot];
            foxtrot = backup.bind(tango)(foxtrot);
            backup = foxtrot.Text;
            foxtrot = {'variant': 'text-sm/semibold', 'color': 'text-normal', 'maxFontSizeMultiplier': 2};
            sizing = _closure1_slot4;
            sizing = sizing.TRENDING_GIFS;
            if(!(output !== sizing)) { _fun84874_ip = 475; continue _fun84874 }
 353:
            sizing = _closure1_slot4;
            sizing = sizing.FAVORITES;
            if(!(output !== sizing)) { _fun84874_ip = 421; continue _fun84874 }
 367:
            echo = _closure1_slot0;
            sizing = _closure1_slot2;
            output = sizing[source];
            output = echo.bind(tango)(output);
            result = output.intl;
            output = result.string;
            sizing = sizing[source];
            sizing = echo.bind(tango)(sizing);
            sizing = sizing.t;
            sizing = sizing.5h0QOD;
            sizing = output.bind(result)(sizing);
            _fun84874_ip = 473; continue _fun84874;
 421:
            update = _closure1_slot0;
            output = _closure1_slot2;
            result = output[source];
            result = update.bind(tango)(result);
            echo = result.intl;
            result = echo.string;
            output = output[source];
            output = update.bind(tango)(output);
            output = output.t;
            output = output.k8fFjo;
            sizing = result.bind(echo)(output);
 473:
            _fun84874_ip = 527; continue _fun84874;
 475:
            update = _closure1_slot0;
            output = _closure1_slot2;
            result = output[source];
            result = update.bind(tango)(result);
            echo = result.intl;
            result = echo.string;
            output = output[source];
            output = update.bind(tango)(output);
            output = output.t;
            output = output.TsWCdX;
            sizing = result.bind(echo)(output);
 527:
            foxtrot['children'] = sizing;
            foxtrot = kilo.bind(tango)(backup, foxtrot);
            romeo[1] = foxtrot;
            report['children'] = romeo;
            report = options.bind(tango)(golf, report);
            _fun84874_ip = 672; continue _fun84874;
 553:
            options = _closure1_slot5;
            backup = _closure1_slot0;
            kilo = _closure1_slot2;
            oscar = 7;
            oscar = kilo[oscar];
            oscar = backup.bind(tango)(oscar);
            golf = oscar.SearchField;
            oscar = {};
            romeo = 'md';
            oscar['size'] = romeo;
            oscar['onChange'] = yankee;
            yankee = 8;
            romeo = kilo[yankee];
            romeo = backup.bind(tango)(romeo);
            foxtrot = romeo.intl;
            romeo = foxtrot.string;
            yankee = kilo[yankee];
            yankee = backup.bind(tango)(yankee);
            yankee = yankee.t;
            yankee = yankee.TnYqkZ;
            yankee = romeo.bind(foxtrot)(yankee);
            oscar['placeholder'] = yankee;
            oscar['onClear'] = offset;
            oscar['ref'] = verify;
            verify = true;
            oscar['isRound'] = verify;
            report = options.bind(tango)(golf, oscar);
 672:
            entity['children'] = report;
            entity = zulu.bind(tango)(mike, entity);
            return entity;
        }
    };
    mike = tango.bind(golf)(mike);
    tango = 12;
    tango = oscar[tango];
    oscar = report.bind(entity)(tango);
    report = oscar.fileFinishedImporting;
    tango = 'modules/gif_picker/native/GIFPickerHeader.tsx';
    tango = report.bind(oscar)(tango);
    zulu['default'] = mike;
    return entity;
})();