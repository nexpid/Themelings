// app/modules/connectivity/native/components/ConnectingBar.tsx
export default (function(argFoo, argBar, argBaz, argCorge, _, argFred, argPlugh) {
    report = argBar;
    romeo = argBaz;
    zulu = argFred;
    oscar = argPlugh;
    var _closure1_slot0 = report;
    var _closure1_slot1 = romeo;
    var _closure1_slot2 = oscar;
    entity = global;
    options = entity.Object;
    golf = options.defineProperty;
    tango = {};
    entity = true;
    tango['value'] = entity;
    entity = '__esModule';
    entity = golf.bind(options)(zulu, entity, tango);
    entity = 0;
    golf = oscar[entity];
    tango = argCorge;
    entity = undefined;
    tango = tango.bind(entity)(golf);
    var _closure1_slot3 = tango;
    tango = 1;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    golf = tango.Animated;
    var _closure1_slot4 = golf;
    tango = tango.View;
    var _closure1_slot5 = tango;
    tango = 2;
    golf = oscar[tango];
    golf = report.bind(entity)(golf);
    golf = golf.jsx;
    var _closure1_slot6 = golf;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.jsxs;
    var _closure1_slot7 = tango;
    tango = 3;
    tango = oscar[tango];
    verify = report.bind(entity)(tango);
    options = verify.createStyles;
    golf = {};
    tango = 8;
    offset = {'justifyContent': 'center', 'alignItems': 'center', 'flexDirection': 'row', 'marginRight': 8};
    golf['barContainer'] = offset;
    offset = {'borderRadius': 1, 'marginRight': 2, 'width': 3};
    golf['bar'] = offset;
    offset = {};
    yankee = 4;
    foxtrot = oscar[yankee];
    foxtrot = romeo.bind(entity)(foxtrot);
    foxtrot = foxtrot.unsafe_rawColors;
    foxtrot = foxtrot.PRIMARY_600;
    offset['backgroundColor'] = foxtrot;
    golf['barDark'] = offset;
    offset = {};
    foxtrot = oscar[yankee];
    foxtrot = romeo.bind(entity)(foxtrot);
    foxtrot = foxtrot.unsafe_rawColors;
    foxtrot = foxtrot.PRIMARY_300;
    offset['backgroundColor'] = foxtrot;
    golf['barLight'] = offset;
    offset = {'marginTop': 0, 'height': 12};
    golf['bar3'] = offset;
    offset = {'marginTop': 4, 'height': 8};
    golf['bar2'] = offset;
    offset = {'marginTop': 8, 'height': 4};
    golf['bar1'] = offset;
    offset = {};
    yankee = oscar[yankee];
    yankee = romeo.bind(entity)(yankee);
    yankee = yankee.unsafe_rawColors;
    yankee = yankee.YELLOW_300;
    offset['backgroundColor'] = yankee;
    yankee = 'absolute';
    offset['position'] = yankee;
    golf['barOverlay'] = offset;
    golf = options.bind(verify)(golf);
    var _closure1_slot8 = golf;
    tango = oscar[tango];
    oscar = report.bind(entity)(tango);
    report = oscar.fileFinishedImporting;
    tango = 'modules/connectivity/native/components/ConnectingBar.tsx';
    tango = report.bind(oscar)(tango);
    mike = function() { // Original name: _default
        _fun103784: for(var _fun103784_ip = 0; ; ) switch(_fun103784_ip) {
 0:
            mike = _closure1_slot8;
            tango = undefined;
            backup = mike.bind(tango)();
            report = _closure1_slot1;
            oscar = _closure1_slot2;
            mike = 5;
            mike = oscar[mike];
            zulu = report.bind(tango)(mike);
            mike = function() {
                mike = _closure1_slot4;
                entity = mike.Value;
                zulu = entity.prototype;
                zulu = Object.create(zulu, {constructor: {value: entity}});
                golf = zulu;
                oscar = 0;
                entity = new golf[entity](oscar, report);
                zulu = entity instanceof Object ? entity : zulu;
                entity = new Array(3);
                entity[0] = zulu;
                zulu = mike.Value;
                report = zulu.prototype;
                report = Object.create(report, {constructor: {value: zulu}});
                golf = report;
                zulu = new golf[zulu](oscar, report);
                zulu = zulu instanceof Object ? zulu : report;
                entity[1] = zulu;
                mike = mike.Value;
                zulu = mike.prototype;
                zulu = Object.create(zulu, {constructor: {value: mike}});
                golf = zulu;
                mike = new golf[mike](oscar, report);
                mike = mike instanceof Object ? mike : zulu;
                entity[2] = mike;
                return entity;
            };
            sizing = zulu.bind(tango)(mike);
            var _closure2_slot0 = sizing;
            mike = function(argFoo, argBar) { // Original name: animateBar
                options = argFoo;
                zulu = _closure1_slot4;
                mike = zulu.delay;
                entity = argBar;
                oscar = mike.bind(zulu)(entity);
                golf = function(argFoo, argBar) { // Original name: animateValue
                    tango = _closure1_slot4;
                    zulu = tango.timing;
                    mike = {'toValue': null, 'duration': 350, 'useNativeDriver': true};
                    entity = argBar;
                    mike['toValue'] = entity;
                    entity = argFoo;
                    entity = zulu.bind(tango)(entity, mike);
                    return entity;
                };
                mike = zulu.parallel;
                tango = undefined;
                entity = 1;
                report = golf.bind(tango)(options, entity);
                entity = new Array(1);
                entity[0] = report;
                report = mike.bind(zulu)(entity);
                mike = zulu.parallel;
                entity = 0;
                tango = golf.bind(tango)(options, entity);
                entity = new Array(1);
                entity[0] = tango;
                tango = mike.bind(zulu)(entity);
                mike = zulu.sequence;
                entity = new Array(3);
                entity[0] = oscar;
                entity[1] = report;
                entity[2] = tango;
                entity = mike.bind(zulu)(entity);
                return entity;
            };
            var _closure2_slot1 = mike;
            golf = _closure1_slot3;
            zulu = golf.useEffect;
            mike = new Array(2);
            mike[0] = sizing;
            options = 233.33333333333334;
            mike[1] = options;
            entity = function() {
                tango = _closure1_slot4;
                zulu = tango.loop;
                report = tango.sequence;
                mike = tango.delay;
                golf = 116.66666666666667;
                oscar = mike.bind(tango)(golf);
                mike = new Array(3);
                mike[0] = oscar;
                options = tango.parallel;
                romeo = _closure2_slot1;
                offset = _closure2_slot0;
                verify = 0;
                oscar = offset[verify];
                yankee = undefined;
                verify = romeo.bind(yankee)(oscar, verify);
                oscar = new Array(3);
                oscar[0] = verify;
                verify = 1;
                foxtrot = offset[verify];
                verify = 233.33333333333334;
                verify = romeo.bind(yankee)(foxtrot, verify);
                oscar[1] = verify;
                verify = 2;
                offset = offset[verify];
                verify = 466.6666666666667;
                verify = romeo.bind(yankee)(offset, verify);
                oscar[2] = verify;
                oscar = options.bind(tango)(oscar);
                mike[1] = oscar;
                oscar = tango.delay;
                oscar = oscar.bind(tango)(golf);
                mike[2] = oscar;
                mike = report.bind(tango)(mike);
                zulu = zulu.bind(tango)(mike);
                var _closure3_slot0 = zulu;
                mike = zulu.start;
                mike = mike.bind(zulu)();
                entity = function() {
                    mike = _closure3_slot0;
                    entity = mike.stop;
                    entity = entity.bind(mike)();
                    entity = undefined;
                    return entity;
                };
                return entity;
            };
            entity = zulu.bind(golf)(entity, mike);
            mike = _closure1_slot0;
            entity = 6;
            entity = oscar[entity];
            zulu = mike.bind(tango)(entity);
            mike = zulu.isThemeDark;
            entity = 7;
            entity = oscar[entity];
            entity = report.bind(tango)(entity);
            entity = entity.bind(tango)();
            foxtrot = mike.bind(zulu)(entity);
            zulu = _closure1_slot7;
            mike = _closure1_slot5;
            entity = {};
            report = backup.barContainer;
            entity['style'] = report;
            report = {};
            golf = _closure1_slot6;
            oscar = {};
            verify = backup.bar;
            options = new Array(3);
            options[0] = verify;
            verify = backup.bar1;
            options[1] = verify;
            if(foxtrot) { _fun103784_ip = 212; continue _fun103784 }
 204:
            verify = backup.barLight;
            _fun103784_ip = 218; continue _fun103784;
 212:
            verify = backup.barDark;
 218:
            options[2] = verify;
            oscar['style'] = options;
            golf = golf.bind(tango)(mike, oscar);
            oscar = new Array(2);
            oscar[0] = golf;
            yankee = _closure1_slot6;
            golf = _closure1_slot4;
            options = golf.View;
            golf = {};
            romeo = backup.bar;
            verify = new Array(4);
            verify[0] = romeo;
            romeo = backup.bar1;
            verify[1] = romeo;
            romeo = backup.barOverlay;
            verify[2] = romeo;
            romeo = {};
            kilo = 0;
            kilo = sizing[kilo];
            romeo['opacity'] = kilo;
            verify[3] = romeo;
            golf['style'] = verify;
            golf = yankee.bind(tango)(options, golf);
            oscar[1] = golf;
            report['children'] = oscar;
            oscar = zulu.bind(tango)(mike, report);
            report = new Array(3);
            report[0] = oscar;
            options = _closure1_slot7;
            golf = _closure1_slot5;
            oscar = {};
            verify = {};
            kilo = backup.bar;
            romeo = new Array(3);
            romeo[0] = kilo;
            kilo = backup.bar2;
            romeo[1] = kilo;
            if(foxtrot) { _fun103784_ip = 384; continue _fun103784 }
 376:
            kilo = backup.barLight;
            _fun103784_ip = 390; continue _fun103784;
 384:
            kilo = backup.barDark;
 390:
            romeo[2] = kilo;
            verify['style'] = romeo;
            yankee = yankee.bind(tango)(golf, verify);
            verify = new Array(2);
            verify[0] = yankee;
            yankee = _closure1_slot6;
            romeo = _closure1_slot4;
            kilo = romeo.View;
            romeo = {};
            result = backup.bar;
            output = new Array(4);
            output[0] = result;
            result = backup.bar2;
            output[1] = result;
            result = backup.barOverlay;
            output[2] = result;
            result = {};
            echo = 1;
            echo = sizing[echo];
            result['opacity'] = echo;
            output[3] = result;
            romeo['style'] = output;
            romeo = yankee.bind(tango)(kilo, romeo);
            verify[1] = romeo;
            oscar['children'] = verify;
            oscar = options.bind(tango)(golf, oscar);
            report[1] = oscar;
            options = _closure1_slot7;
            golf = _closure1_slot5;
            oscar = {};
            verify = {};
            kilo = backup.bar;
            romeo = new Array(3);
            romeo[0] = kilo;
            kilo = backup.bar3;
            romeo[1] = kilo;
            if(foxtrot) { _fun103784_ip = 553; continue _fun103784 }
 545:
            foxtrot = backup.barLight;
            _fun103784_ip = 559; continue _fun103784;
 553:
            foxtrot = backup.barDark;
 559:
            romeo[2] = foxtrot;
            verify['style'] = romeo;
            yankee = yankee.bind(tango)(golf, verify);
            verify = new Array(2);
            verify[0] = yankee;
            romeo = _closure1_slot6;
            offset = _closure1_slot4;
            yankee = offset.View;
            offset = {};
            kilo = backup.bar;
            foxtrot = new Array(4);
            foxtrot[0] = kilo;
            kilo = backup.bar3;
            foxtrot[1] = kilo;
            backup = backup.barOverlay;
            foxtrot[2] = backup;
            backup = {};
            kilo = 2;
            kilo = sizing[kilo];
            backup['opacity'] = kilo;
            foxtrot[3] = backup;
            offset['style'] = foxtrot;
            offset = romeo.bind(tango)(yankee, offset);
            verify[1] = offset;
            oscar['children'] = verify;
            oscar = options.bind(tango)(golf, oscar);
            report[2] = oscar;
            entity['children'] = report;
            entity = zulu.bind(tango)(mike, entity);
            return entity;
        }
    };
    zulu['default'] = mike;
    return entity;
})();