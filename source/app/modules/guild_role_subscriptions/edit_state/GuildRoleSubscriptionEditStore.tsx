// app/modules/guild_role_subscriptions/edit_state/GuildRoleSubscriptionEditStore.tsx
export default (function(argFoo, argBar, _, __, ___, argFre, argPlu) {
    oscard = argBar;
    zuuluu = argFre;
    golfie = argPlu;
    var _closure1_slot0 = oscard;
    var _closure1_slot1 = golfie;
    entity = global;
    option = entity.Object;
    report = option.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = report.bind(option)(zuuluu, entity, tangon);
    tangon = {};
    entity = 0;
    tangon['ALL_CHANNELS_ACCESS'] = entity;
    report = 'ALL_CHANNELS_ACCESS';
    tangon[entity] = report;
    option = 1;
    tangon['SOME_CHANNELS_ACCESS'] = option;
    report = 'SOME_CHANNELS_ACCESS';
    tangon[option] = report;
    report = golfie[entity];
    entity = undefined;
    option = oscard.bind(entity)(report);
    report = option.create;
    michal = function(argFoo) {
        entity = argFoo;
        var _closure2_slot0 = entity;
        entity = {};
        zuuluu = {};
        entity['listings'] = zuuluu;
        zuuluu = function(argFoo, argBar) { // Original name: setListing
            michal = argFoo;
            var _closure3_slot0 = michal;
            michal = argBar;
            var _closure3_slot1 = michal;
            tangon = _closure1_slot0;
            zuuluu = _closure1_slot1;
            michal = 1;
            zuuluu = zuuluu[michal];
            michal = undefined;
            zuuluu = tangon.bind(michal)(zuuluu);
            michal = zuuluu.batchUpdates;
            entity = function() {
                zuuluu = _closure2_slot0;
                michal = undefined;
                entity = function(argFoo) {
                    zuuluu = argFoo;
                    entity = {};
                    michal = {};
                    golfie = zuuluu.listings;
                    option = michal;
                    tangon = copyDataProperties(option, golfie);
                    tangon = _closure3_slot0;
                    oscard = _closure3_slot1;
                    zuuluu = zuuluu.listings;
                    report = zuuluu[tangon];
                    zuuluu = undefined;
                    zuuluu = oscard.bind(zuuluu)(report);
                    michal[tangon] = zuuluu;
                    entity['listings'] = michal;
                    return entity;
                };
                entity = zuuluu.bind(michal)(entity);
                return entity;
            };
            entity = michal.bind(zuuluu)(entity);
            return entity;
        };
        entity['setListing'] = zuuluu;
        zuuluu = {};
        entity['editStateIdsForGroup'] = zuuluu;
        michal = function(argFoo, argBar) { // Original name: setEditStateIdsForGroup
            michal = argFoo;
            var _closure3_slot0 = michal;
            michal = argBar;
            var _closure3_slot1 = michal;
            tangon = _closure1_slot0;
            zuuluu = _closure1_slot1;
            michal = 1;
            zuuluu = zuuluu[michal];
            michal = undefined;
            zuuluu = tangon.bind(michal)(zuuluu);
            michal = zuuluu.batchUpdates;
            entity = function() {
                zuuluu = _closure2_slot0;
                entity = undefined;
                michal = function(argFoo) {
                    zuuluu = argFoo;
                    entity = {};
                    michal = {};
                    golfie = zuuluu.editStateIdsForGroup;
                    option = michal;
                    tangon = copyDataProperties(option, golfie);
                    tangon = _closure3_slot0;
                    oscard = _closure3_slot1;
                    zuuluu = zuuluu.editStateIdsForGroup;
                    report = zuuluu[tangon];
                    zuuluu = undefined;
                    zuuluu = oscard.bind(zuuluu)(report);
                    michal[tangon] = zuuluu;
                    entity['editStateIdsForGroup'] = michal;
                    return entity;
                };
                michal = zuuluu.bind(entity)(michal);
                return entity;
            };
            entity = michal.bind(zuuluu)(entity);
            return entity;
        };
        entity['setEditStateIdsForGroup'] = michal;
        return entity;
    };
    michal = report.bind(option)(michal);
    report = 2;
    report = golfie[report];
    golfie = oscard.bind(entity)(report);
    oscard = golfie.fileFinishedImporting;
    report = 'modules/guild_role_subscriptions/edit_state/GuildRoleSubscriptionEditStore.tsx';
    report = oscard.bind(golfie)(report);
    zuuluu['AllChannelAccessOptions'] = tangon;
    zuuluu['useEditStateStore'] = michal;
    return entity;
})();