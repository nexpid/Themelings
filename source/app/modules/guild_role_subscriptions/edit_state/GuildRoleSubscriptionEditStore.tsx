// app/modules/guild_role_subscriptions/edit_state/GuildRoleSubscriptionEditStore.tsx
export default (function(argFoo, argBar, _, __, ___, argFred, argPlugh) {
    oscar = argBar;
    zulu = argFred;
    golf = argPlugh;
    var _closure1_slot0 = oscar;
    var _closure1_slot1 = golf;
    entity = global;
    options = entity.Object;
    report = options.defineProperty;
    tango = {};
    entity = true;
    tango['value'] = entity;
    entity = '__esModule';
    entity = report.bind(options)(zulu, entity, tango);
    tango = {};
    entity = 0;
    tango['ALL_CHANNELS_ACCESS'] = entity;
    report = 'ALL_CHANNELS_ACCESS';
    tango[entity] = report;
    options = 1;
    tango['SOME_CHANNELS_ACCESS'] = options;
    report = 'SOME_CHANNELS_ACCESS';
    tango[options] = report;
    report = golf[entity];
    entity = undefined;
    options = oscar.bind(entity)(report);
    report = options.create;
    mike = function(argFoo) {
        entity = argFoo;
        var _closure2_slot0 = entity;
        entity = {};
        zulu = {};
        entity['listings'] = zulu;
        zulu = function(argFoo, argBar) { // Original name: setListing
            mike = argFoo;
            var _closure3_slot0 = mike;
            mike = argBar;
            var _closure3_slot1 = mike;
            tango = _closure1_slot0;
            zulu = _closure1_slot1;
            mike = 1;
            zulu = zulu[mike];
            mike = undefined;
            zulu = tango.bind(mike)(zulu);
            mike = zulu.batchUpdates;
            entity = function() {
                zulu = _closure2_slot0;
                mike = undefined;
                entity = function(argFoo) {
                    zulu = argFoo;
                    entity = {};
                    mike = {};
                    golf = zulu.listings;
                    options = mike;
                    tango = copyDataProperties(options, golf);
                    tango = _closure3_slot0;
                    oscar = _closure3_slot1;
                    zulu = zulu.listings;
                    report = zulu[tango];
                    zulu = undefined;
                    zulu = oscar.bind(zulu)(report);
                    mike[tango] = zulu;
                    entity['listings'] = mike;
                    return entity;
                };
                entity = zulu.bind(mike)(entity);
                return entity;
            };
            entity = mike.bind(zulu)(entity);
            return entity;
        };
        entity['setListing'] = zulu;
        zulu = {};
        entity['editStateIdsForGroup'] = zulu;
        mike = function(argFoo, argBar) { // Original name: setEditStateIdsForGroup
            mike = argFoo;
            var _closure3_slot0 = mike;
            mike = argBar;
            var _closure3_slot1 = mike;
            tango = _closure1_slot0;
            zulu = _closure1_slot1;
            mike = 1;
            zulu = zulu[mike];
            mike = undefined;
            zulu = tango.bind(mike)(zulu);
            mike = zulu.batchUpdates;
            entity = function() {
                zulu = _closure2_slot0;
                entity = undefined;
                mike = function(argFoo) {
                    zulu = argFoo;
                    entity = {};
                    mike = {};
                    golf = zulu.editStateIdsForGroup;
                    options = mike;
                    tango = copyDataProperties(options, golf);
                    tango = _closure3_slot0;
                    oscar = _closure3_slot1;
                    zulu = zulu.editStateIdsForGroup;
                    report = zulu[tango];
                    zulu = undefined;
                    zulu = oscar.bind(zulu)(report);
                    mike[tango] = zulu;
                    entity['editStateIdsForGroup'] = mike;
                    return entity;
                };
                mike = zulu.bind(entity)(mike);
                return entity;
            };
            entity = mike.bind(zulu)(entity);
            return entity;
        };
        entity['setEditStateIdsForGroup'] = mike;
        return entity;
    };
    mike = report.bind(options)(mike);
    report = 2;
    report = golf[report];
    golf = oscar.bind(entity)(report);
    oscar = golf.fileFinishedImporting;
    report = 'modules/guild_role_subscriptions/edit_state/GuildRoleSubscriptionEditStore.tsx';
    report = oscar.bind(golf)(report);
    zulu['AllChannelAccessOptions'] = tango;
    zulu['useEditStateStore'] = mike;
    return entity;
})();