// app/modules/guild_role_subscriptions/ui/RoleSubscriptionsOnboardingGuildPickerFeatureSpec.tsx
export default (function(argFoo, argBar, argBaz, _, __, argFre, argPlu) {
    report = argBar;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    var _closure1_slot1 = oscard;
    entity = global;
    option = entity.Object;
    golfie = option.defineProperty;
    michal = {};
    entity = true;
    michal['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(option)(zuuluu, entity, michal);
    entity = 0;
    golfie = oscard[entity];
    michal = argBaz;
    entity = undefined;
    michal = michal.bind(entity)(golfie);
    var _closure1_slot2 = michal;
    michal = 1;
    michal = oscard[michal];
    michal = report.bind(entity)(michal);
    michal = michal.isGuildOwner;
    var _closure1_slot3 = michal;
    michal = {};
    golfie = function() { // Original name: title
        report = _closure1_slot0;
        oscard = _closure1_slot1;
        entity = 2;
        michal = oscard[entity];
        tangon = undefined;
        michal = report.bind(tangon)(michal);
        zuuluu = michal.intl;
        michal = zuuluu.string;
        entity = oscard[entity];
        entity = report.bind(tangon)(entity);
        entity = entity.t;
        entity = entity.KzCF//;
        entity = michal.bind(zuuluu)(entity);
        return entity;
    };
    michal['title'] = golfie;
    golfie = function() { // Original name: description
        report = _closure1_slot0;
        oscard = _closure1_slot1;
        entity = 2;
        michal = oscard[entity];
        tangon = undefined;
        michal = report.bind(tangon)(michal);
        zuuluu = michal.intl;
        michal = zuuluu.string;
        entity = oscard[entity];
        entity = report.bind(tangon)(entity);
        entity = entity.t;
        entity = entity.xMW8FB;
        entity = michal.bind(zuuluu)(entity);
        return entity;
    };
    michal['description'] = golfie;
    golfie = false;
    michal['canCreateGuild'] = golfie;
    tangon = function() { // Original name: useIsGuildSupported
        zuuluu = _closure1_slot0;
        golfie = _closure1_slot1;
        entity = 3;
        report = golfie[entity];
        michal = undefined;
        oscard = zuuluu.bind(michal)(report);
        report = oscard.useStateFromStores;
        option = _closure1_slot2;
        tangon = new Array(1);
        tangon[0] = option;
        entity = golfie[entity];
        entity = zuuluu.bind(michal)(entity);
        verify = entity.statesWillNeverBeEqual;
        yankee = function() {
            entity = function(argFoo, argBar) {
                _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
                    report = argFoo;
                    zuuluu = _closure1_slot3;
                    option = undefined;
                    entity = argBar;
                    entity = zuuluu.bind(option)(report, entity);
                    if(!entity) { _fun00002_ip = 226; continue _fun00001 }
 27:
                    golfie = _closure1_slot0;
                    verify = _closure1_slot1;
                    michal = 4;
                    michal = verify[michal];
                    tangon = golfie.bind(option)(michal);
                    zuuluu = tangon.canSeeGuildRoleSubscriptionSettings;
                    michal = {'guild': null, 'isOwner': true, 'canManageGuildRoleSubscriptions': true};
                    michal['guild'] = report;
                    oscard = 5;
                    offset = verify[oscard];
                    romeon = golfie.bind(option)(offset);
                    yankee = romeon.isMonetizationWaitlistEnabledForGuild;
                    offset = report.id;
                    offset = yankee.bind(romeon)(offset);
                    michal['isMonetizationWaitlistEnabledForGuild'] = offset;
                    offset = 6;
                    offset = verify[offset];
                    romeon = golfie.bind(option)(offset);
                    yankee = romeon.isGuildEligibleForRoleSubscriptions;
                    offset = report.id;
                    offset = yankee.bind(romeon)(offset);
                    michal['isGuildEligibleForRoleSubscriptions'] = offset;
                    offset = verify[oscard];
                    yankee = golfie.bind(option)(offset);
                    offset = yankee.isExpeditedMonetizationOnboardingGuild;
                    offset = offset.bind(yankee)(report);
                    michal['isExpeditedMonetizationOnboardingGuild'] = offset;
                    oscard = verify[oscard];
                    offset = golfie.bind(option)(oscard);
                    oscard = offset.isUserInCreatorMonetizationEligibleCountry;
                    oscard = oscard.bind(offset)();
                    michal['isUserInCreatorMonetizationEligibleCountry'] = oscard;
                    oscard = 7;
                    oscard = verify[oscard];
                    golfie = golfie.bind(option)(oscard);
                    oscard = golfie.shouldRestrictUpdatingCreatorMonetizationSettings;
                    report = report.id;
                    report = oscard.bind(golfie)(report);
                    michal['shouldRestrictUpdatingRoleSubscriptionSettings'] = report;
                    entity = zuuluu.bind(tangon)(michal);
 226:
                    return entity;
                }
            };
            return entity;
        };
        offset = new Array(0);
        foxtra = oscard;
        romeon = tangon;
        entity = foxtra[report](romeon, yankee, offset, verify, option);
        return entity;
    };
    michal['useIsGuildSupported'] = tangon;
    tangon = 8;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/guild_role_subscriptions/ui/RoleSubscriptionsOnboardingGuildPickerFeatureSpec.tsx';
    tangon = report.bind(oscard)(tangon);
    zuuluu['default'] = michal;
    return entity;
})();