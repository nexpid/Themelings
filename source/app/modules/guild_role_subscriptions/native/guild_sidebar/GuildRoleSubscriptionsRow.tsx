// app/modules/guild_role_subscriptions/native/guild_sidebar/GuildRoleSubscriptionsRow.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    report = argBar;
    yankee = argBaz;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    var _closure1_slot1 = yankee;
    var _closure1_slot2 = oscard;
    entity = global;
    option = entity.Object;
    golfie = option.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(option)(zuuluu, entity, tangon);
    entity = 0;
    golfie = oscard[entity];
    tangon = argCor;
    entity = undefined;
    tangon = tangon.bind(entity)(golfie);
    var _closure1_slot3 = tangon;
    tangon = 1;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.Routes;
    var _closure1_slot4 = tangon;
    tangon = 2;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.StaticChannelRoute;
    var _closure1_slot5 = tangon;
    tangon = 3;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    offset = tangon.CHANNEL_MARGIN_VERTICAL;
    tangon = 4;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.jsx;
    var _closure1_slot6 = tangon;
    tangon = 5;
    tangon = oscard[tangon];
    option = report.bind(entity)(tangon);
    golfie = option.createStyles;
    tangon = {};
    verify = {};
    verify['marginVertical'] = offset;
    offset = 8;
    verify['marginHorizontal'] = offset;
    offset = 6;
    offset = oscard[offset];
    offset = yankee.bind(entity)(offset);
    offset = offset.radii;
    offset = offset.md;
    verify['borderRadius'] = offset;
    tangon['container'] = verify;
    tangon = golfie.bind(option)(tangon);
    var _closure1_slot7 = tangon;
    tangon = 14;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/guild_role_subscriptions/native/guild_sidebar/GuildRoleSubscriptionsRow.tsx';
    tangon = report.bind(oscard)(tangon);
    michal = function(argFoo) { // Original name: GuildRoleSubscriptionsRow
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            zuuluu = argFoo;
            michal = zuuluu.guild;
            romeon = zuuluu.selected;
            zuuluu = _closure1_slot7;
            tangon = undefined;
            offset = zuuluu.bind(tangon)();
            golfie = michal.id;
            var _closure2_slot0 = golfie;
            report = _closure1_slot3;
            option = report.useCallback;
            zuuluu = new Array(1);
            zuuluu[0] = golfie;
            michal = function() {
                tangon = _closure1_slot0;
                zuuluu = _closure1_slot2;
                entity = 7;
                zuuluu = zuuluu[entity];
                entity = undefined;
                tangon = tangon.bind(entity)(zuuluu);
                zuuluu = tangon.transitionTo;
                golfie = _closure1_slot4;
                oscard = golfie.CHANNEL;
                report = _closure2_slot0;
                michal = _closure1_slot5;
                michal = michal.ROLE_SUBSCRIPTIONS;
                michal = oscard.bind(golfie)(report, michal);
                michal = zuuluu.bind(tangon)(michal);
                return entity;
            };
            foxtra = option.bind(report)(michal, zuuluu);
            zuuluu = report.useCallback;
            michal = new Array(1);
            michal[0] = golfie;
            entity = function() {
                report = _closure1_slot1;
                michal = _closure1_slot2;
                entity = 8;
                tangon = michal[entity];
                entity = undefined;
                oscard = report.bind(entity)(tangon);
                report = oscard.openLazy;
                tangon = _closure1_slot0;
                zuuluu = 10;
                zuuluu = michal[zuuluu];
                tangon = tangon.bind(entity)(zuuluu);
                zuuluu = 9;
                zuuluu = michal[zuuluu];
                michal = michal.paths;
                tangon = tangon.bind(entity)(zuuluu, michal);
                zuuluu = {};
                michal = _closure2_slot0;
                zuuluu['guildId'] = michal;
                michal = function() { // Original name: onClose
                    zuuluu = _closure1_slot1;
                    michal = _closure1_slot2;
                    entity = 8;
                    michal = michal[entity];
                    entity = undefined;
                    tangon = zuuluu.bind(entity)(michal);
                    zuuluu = tangon.hideActionSheet;
                    michal = 'role-subscriptions-channel-action-sheet';
                    michal = zuuluu.bind(tangon)(michal);
                    return entity;
                };
                zuuluu['onClose'] = michal;
                michal = 'role-subscriptions-channel-action-sheet';
                michal = report.bind(oscard)(tangon, michal, zuuluu);
                return entity;
            };
            yankee = zuuluu.bind(report)(entity, michal);
            michal = _closure1_slot0;
            entity = _closure1_slot2;
            report = 11;
            entity = entity[report];
            entity = michal.bind(tangon)(entity);
            entity = entity.ChannelModes;
            if(romeon) { _fun00002_ip = 131; continue _fun00001 }
 123:
            golfie = entity.DEFAULT;
            _fun00002_ip = 137; continue _fun00001;
 131:
            golfie = entity.SELECTED;
 137:
            zuuluu = _closure1_slot6;
            option = _closure1_slot1;
            verify = _closure1_slot2;
            entity = verify[report];
            michal = option.bind(tangon)(entity);
            entity = {};
            entity['onPress'] = foxtra;
            entity['onLongPress'] = yankee;
            offset = offset.container;
            entity['style'] = offset;
            offset = true;
            entity['accessible'] = offset;
            oscard = _closure1_slot0;
            foxtra = 12;
            yankee = verify[foxtra];
            yankee = oscard.bind(tangon)(yankee);
            kiloes = yankee.intl;
            backup = kiloes.string;
            yankee = verify[foxtra];
            yankee = oscard.bind(tangon)(yankee);
            yankee = yankee.t;
            yankee = yankee.KzCF//;
            yankee = backup.bind(kiloes)(yankee);
            entity['accessibilityLabel'] = yankee;
            yankee = {};
            yankee['selected'] = romeon;
            entity['accessibilityState'] = yankee;
            entity['mode'] = golfie;
            yankee = verify[report];
            yankee = oscard.bind(tangon)(yankee);
            romeon = yankee.BaseChannelName;
            yankee = {};
            backup = verify[foxtra];
            backup = oscard.bind(tangon)(backup);
            kiloes = backup.intl;
            backup = kiloes.string;
            foxtra = verify[foxtra];
            foxtra = oscard.bind(tangon)(foxtra);
            foxtra = foxtra.t;
            foxtra = foxtra.KzCF//;
            foxtra = backup.bind(kiloes)(foxtra);
            yankee['name'] = foxtra;
            yankee['mode'] = golfie;
            yankee = zuuluu.bind(tangon)(romeon, yankee);
            entity['name'] = yankee;
            report = verify[report];
            report = oscard.bind(tangon)(report);
            oscard = report.BaseChannelIcon;
            report = {};
            report['disableColor'] = offset;
            report['mode'] = golfie;
            golfie = 13;
            golfie = verify[golfie];
            golfie = option.bind(tangon)(golfie);
            report['source'] = golfie;
            report = zuuluu.bind(tangon)(oscard, report);
            entity['icon'] = report;
            entity = zuuluu.bind(tangon)(michal, entity);
            return entity;
        }
    };
    zuuluu['default'] = michal;
    return entity;
})();