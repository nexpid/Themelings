// app/modules/guild_role_subscriptions/native/guild_settings/welcome/EligibilityActionSheet.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    report = argBar;
    yankee = argBaz;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    var _closure1_slot1 = yankee;
    var _closure1_slot2 = oscard;
    entity = global;
    option = entity.Object;
    golfie = option.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(option)(zuuluu, entity, tangon);
    entity = 0;
    golfie = oscard[entity];
    tangon = argCor;
    entity = undefined;
    tangon = tangon.bind(entity)(golfie);
    var _closure1_slot3 = tangon;
    tangon = 1;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.UserSettingsSections;
    var _closure1_slot4 = tangon;
    tangon = 2;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    golfie = tangon.jsx;
    var _closure1_slot5 = golfie;
    tangon = tangon.jsxs;
    var _closure1_slot6 = tangon;
    tangon = 3;
    tangon = oscard[tangon];
    option = report.bind(entity)(tangon);
    golfie = option.createStyles;
    tangon = {};
    verify = {'flex': 1, 'backgroundColor': null, 'paddingHorizontal': 0};
    offset = 4;
    romeon = oscard[offset];
    romeon = yankee.bind(entity)(romeon);
    romeon = romeon.colors;
    romeon = romeon.BACKGROUND_PRIMARY;
    verify['backgroundColor'] = romeon;
    tangon['container'] = verify;
    verify = {'backgroundColor': null, 'marginHorizontal': 24, 'marginTop': 16};
    offset = oscard[offset];
    offset = yankee.bind(entity)(offset);
    offset = offset.colors;
    offset = offset.BACKGROUND_PRIMARY;
    verify['backgroundColor'] = offset;
    tangon['title'] = verify;
    tangon = golfie.bind(option)(tangon);
    var _closure1_slot7 = tangon;
    tangon = 13;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/guild_role_subscriptions/native/guild_settings/welcome/EligibilityActionSheet.tsx';
    tangon = report.bind(oscard)(tangon);
    michal = function(argFoo) { // Original name: EligibilityActionSheet
        michal = argFoo;
        zuuluu = michal.eligibility;
        option = michal.onRequireModeratorMFAClick;
        var _closure2_slot0 = option;
        michal = _closure1_slot7;
        tangon = undefined;
        offset = michal.bind(tangon)();
        golfie = _closure1_slot3;
        oscard = golfie.useMemo;
        michal = new Array(1);
        michal[0] = option;
        entity = function() {
            entity = {};
            michal = {};
            tangon = function() { // Original name: onEnableMFAClick
                zuuluu = _closure1_slot1;
                tangon = _closure1_slot2;
                entity = 5;
                michal = tangon[entity];
                entity = undefined;
                golfie = zuuluu.bind(entity)(michal);
                oscard = golfie.hideActionSheet;
                michal = 'EligibilityActionSheet';
                michal = oscard.bind(golfie)(michal);
                michal = 6;
                michal = tangon[michal];
                zuuluu = zuuluu.bind(entity)(michal);
                michal = zuuluu.close;
                michal = michal.bind(zuuluu)();
                zuuluu = _closure1_slot0;
                michal = 7;
                michal = tangon[michal];
                tangon = zuuluu.bind(entity)(michal);
                zuuluu = tangon.openUserSettings;
                michal = {};
                report = _closure1_slot4;
                report = report.ACCOUNT;
                michal['screen'] = report;
                michal = zuuluu.bind(tangon)(michal);
                return entity;
            };
            michal['onEnableMFAClick'] = tangon;
            zuuluu = function() { // Original name: onRequireModeratorMFAClick
                zuuluu = _closure1_slot1;
                michal = _closure1_slot2;
                entity = 5;
                michal = michal[entity];
                entity = undefined;
                tangon = zuuluu.bind(entity)(michal);
                zuuluu = tangon.hideActionSheet;
                michal = 'EligibilityActionSheet';
                michal = zuuluu.bind(tangon)(michal);
                michal = _closure2_slot0;
                michal = michal.bind(entity)();
                return entity;
            };
            michal['onRequireModeratorMFAClick'] = zuuluu;
            entity['actions'] = michal;
            michal = true;
            entity['sortedByIneligible'] = michal;
            return entity;
        };
        michal = oscard.bind(golfie)(entity, michal);
        golfie = _closure1_slot1;
        yankee = _closure1_slot2;
        entity = 8;
        entity = yankee[entity];
        entity = golfie.bind(tangon)(entity);
        verify = entity.bind(tangon)(zuuluu, michal);
        zuuluu = _closure1_slot6;
        kiloes = _closure1_slot0;
        entity = 9;
        entity = yankee[entity];
        entity = kiloes.bind(tangon)(entity);
        michal = entity.BottomSheet;
        entity = {};
        oscard = true;
        entity['startExpanded'] = oscard;
        option = _closure1_slot5;
        report = 10;
        report = yankee[report];
        report = kiloes.bind(tangon)(report);
        oscard = report.Text;
        report = {'style': null, 'variant': 'heading-lg/semibold', 'color': 'header-primary'};
        romeon = offset.title;
        report['style'] = romeon;
        romeon = 11;
        foxtra = yankee[romeon];
        foxtra = kiloes.bind(tangon)(foxtra);
        backup = foxtra.intl;
        foxtra = backup.string;
        romeon = yankee[romeon];
        romeon = kiloes.bind(tangon)(romeon);
        romeon = romeon.t;
        romeon = romeon.3s47iI;
        romeon = foxtra.bind(backup)(romeon);
        report['children'] = romeon;
        oscard = option.bind(tangon)(oscard, report);
        report = new Array(2);
        report[0] = oscard;
        oscard = 12;
        oscard = yankee[oscard];
        golfie = golfie.bind(tangon)(oscard);
        oscard = {};
        offset = offset.container;
        oscard['style'] = offset;
        oscard['items'] = verify;
        oscard = option.bind(tangon)(golfie, oscard);
        report[1] = oscard;
        entity['children'] = report;
        entity = zuuluu.bind(tangon)(michal, entity);
        return entity;
    };
    zuuluu['default'] = michal;
    michal = 'EligibilityActionSheet';
    zuuluu['ELIGIBILITY_ACTION_SHEET_KEY'] = michal;
    return entity;
})();