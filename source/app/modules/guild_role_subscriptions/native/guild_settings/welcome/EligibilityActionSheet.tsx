// app/modules/guild_role_subscriptions/native/guild_settings/welcome/EligibilityActionSheet.tsx
export default (function(argFoo, argBar, argBaz, argCorge, _, argFred, argPlugh) {
    report = argBar;
    yankee = argBaz;
    zulu = argFred;
    oscar = argPlugh;
    var _closure1_slot0 = report;
    var _closure1_slot1 = yankee;
    var _closure1_slot2 = oscar;
    entity = global;
    options = entity.Object;
    golf = options.defineProperty;
    tango = {};
    entity = true;
    tango['value'] = entity;
    entity = '__esModule';
    entity = golf.bind(options)(zulu, entity, tango);
    entity = 0;
    golf = oscar[entity];
    tango = argCorge;
    entity = undefined;
    tango = tango.bind(entity)(golf);
    var _closure1_slot3 = tango;
    tango = 1;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.UserSettingsSections;
    var _closure1_slot4 = tango;
    tango = 2;
    golf = oscar[tango];
    golf = report.bind(entity)(golf);
    golf = golf.jsx;
    var _closure1_slot5 = golf;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.jsxs;
    var _closure1_slot6 = tango;
    tango = 3;
    tango = oscar[tango];
    options = report.bind(entity)(tango);
    golf = options.createStyles;
    tango = {};
    verify = {'flex': 1, 'backgroundColor': null, 'paddingHorizontal': 0};
    offset = 4;
    romeo = oscar[offset];
    romeo = yankee.bind(entity)(romeo);
    romeo = romeo.colors;
    romeo = romeo.BACKGROUND_PRIMARY;
    verify['backgroundColor'] = romeo;
    tango['container'] = verify;
    verify = {'backgroundColor': null, 'marginHorizontal': 24, 'marginTop': 16};
    offset = oscar[offset];
    offset = yankee.bind(entity)(offset);
    offset = offset.colors;
    offset = offset.BACKGROUND_PRIMARY;
    verify['backgroundColor'] = offset;
    tango['title'] = verify;
    tango = golf.bind(options)(tango);
    var _closure1_slot7 = tango;
    tango = 13;
    tango = oscar[tango];
    oscar = report.bind(entity)(tango);
    report = oscar.fileFinishedImporting;
    tango = 'modules/guild_role_subscriptions/native/guild_settings/welcome/EligibilityActionSheet.tsx';
    tango = report.bind(oscar)(tango);
    mike = function(argFoo) { // Original name: EligibilityActionSheet
        mike = argFoo;
        zulu = mike.eligibility;
        options = mike.onRequireModeratorMFAClick;
        var _closure2_slot0 = options;
        mike = _closure1_slot7;
        tango = undefined;
        offset = mike.bind(tango)();
        golf = _closure1_slot3;
        oscar = golf.useMemo;
        mike = new Array(1);
        mike[0] = options;
        entity = function() {
            entity = {};
            mike = {};
            tango = function() { // Original name: onEnableMFAClick
                zulu = _closure1_slot1;
                tango = _closure1_slot2;
                entity = 5;
                mike = tango[entity];
                entity = undefined;
                golf = zulu.bind(entity)(mike);
                oscar = golf.hideActionSheet;
                mike = 'EligibilityActionSheet';
                mike = oscar.bind(golf)(mike);
                mike = 6;
                mike = tango[mike];
                zulu = zulu.bind(entity)(mike);
                mike = zulu.close;
                mike = mike.bind(zulu)();
                zulu = _closure1_slot0;
                mike = 7;
                mike = tango[mike];
                tango = zulu.bind(entity)(mike);
                zulu = tango.openUserSettings;
                mike = {};
                report = _closure1_slot4;
                report = report.ACCOUNT;
                mike['screen'] = report;
                mike = zulu.bind(tango)(mike);
                return entity;
            };
            mike['onEnableMFAClick'] = tango;
            zulu = function() { // Original name: onRequireModeratorMFAClick
                zulu = _closure1_slot1;
                mike = _closure1_slot2;
                entity = 5;
                mike = mike[entity];
                entity = undefined;
                tango = zulu.bind(entity)(mike);
                zulu = tango.hideActionSheet;
                mike = 'EligibilityActionSheet';
                mike = zulu.bind(tango)(mike);
                mike = _closure2_slot0;
                mike = mike.bind(entity)();
                return entity;
            };
            mike['onRequireModeratorMFAClick'] = zulu;
            entity['actions'] = mike;
            mike = true;
            entity['sortedByIneligible'] = mike;
            return entity;
        };
        mike = oscar.bind(golf)(entity, mike);
        golf = _closure1_slot1;
        yankee = _closure1_slot2;
        entity = 8;
        entity = yankee[entity];
        entity = golf.bind(tango)(entity);
        verify = entity.bind(tango)(zulu, mike);
        zulu = _closure1_slot6;
        kilo = _closure1_slot0;
        entity = 9;
        entity = yankee[entity];
        entity = kilo.bind(tango)(entity);
        mike = entity.BottomSheet;
        entity = {};
        oscar = true;
        entity['startExpanded'] = oscar;
        options = _closure1_slot5;
        report = 10;
        report = yankee[report];
        report = kilo.bind(tango)(report);
        oscar = report.Text;
        report = {'style': null, 'variant': 'heading-lg/semibold', 'color': 'header-primary'};
        romeo = offset.title;
        report['style'] = romeo;
        romeo = 11;
        foxtrot = yankee[romeo];
        foxtrot = kilo.bind(tango)(foxtrot);
        backup = foxtrot.intl;
        foxtrot = backup.string;
        romeo = yankee[romeo];
        romeo = kilo.bind(tango)(romeo);
        romeo = romeo.t;
        romeo = romeo.3s47iI;
        romeo = foxtrot.bind(backup)(romeo);
        report['children'] = romeo;
        oscar = options.bind(tango)(oscar, report);
        report = new Array(2);
        report[0] = oscar;
        oscar = 12;
        oscar = yankee[oscar];
        golf = golf.bind(tango)(oscar);
        oscar = {};
        offset = offset.container;
        oscar['style'] = offset;
        oscar['items'] = verify;
        oscar = options.bind(tango)(golf, oscar);
        report[1] = oscar;
        entity['children'] = report;
        entity = zulu.bind(tango)(mike, entity);
        return entity;
    };
    zulu['default'] = mike;
    mike = 'EligibilityActionSheet';
    zulu['ELIGIBILITY_ACTION_SHEET_KEY'] = mike;
    return entity;
})();