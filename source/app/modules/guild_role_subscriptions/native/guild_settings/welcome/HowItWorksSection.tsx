// app/modules/guild_role_subscriptions/native/guild_settings/welcome/HowItWorksSection.tsx
export default (function(argFoo, argBar, argBaz, argCorge, _, argFred, argPlugh) {
    report = argBar;
    yankee = argBaz;
    zulu = argFred;
    oscar = argPlugh;
    var _closure1_slot0 = report;
    var _closure1_slot1 = yankee;
    var _closure1_slot2 = oscar;
    entity = function(argFoo) { // Original name: HowItWorksCard
        entity = argFoo;
        backup = entity.cardNumber;
        result = entity.iconSource;
        verify = entity.description;
        entity = _closure1_slot6;
        tango = undefined;
        offset = entity.bind(tango)();
        zulu = _closure1_slot5;
        mike = _closure1_slot3;
        entity = {};
        report = offset.card;
        entity['style'] = report;
        foxtrot = _closure1_slot4;
        golf = _closure1_slot0;
        yankee = _closure1_slot2;
        oscar = 5;
        report = yankee[oscar];
        report = golf.bind(tango)(report);
        romeo = report.Text;
        report = {'style': null, 'variant': 'text-xs/bold', 'color': 'always-white'};
        kilo = offset.cardNumber;
        report['style'] = kilo;
        report['children'] = backup;
        romeo = foxtrot.bind(tango)(romeo, report);
        report = new Array(3);
        report[0] = romeo;
        backup = _closure1_slot4;
        foxtrot = _closure1_slot3;
        romeo = {};
        kilo = offset.container;
        romeo['style'] = kilo;
        output = _closure1_slot4;
        sizing = _closure1_slot1;
        kilo = 6;
        kilo = yankee[kilo];
        sizing = sizing.bind(tango)(kilo);
        kilo = {};
        echo = offset.howItWorksCardIcon;
        kilo['style'] = echo;
        kilo['source'] = result;
        result = 'contain';
        kilo['resizeMode'] = result;
        kilo = output.bind(tango)(sizing, kilo);
        romeo['children'] = kilo;
        romeo = backup.bind(tango)(foxtrot, romeo);
        report[1] = romeo;
        options = _closure1_slot4;
        oscar = yankee[oscar];
        oscar = golf.bind(tango)(oscar);
        golf = oscar.Text;
        oscar = {'style': null, 'variant': 'text-sm/normal', 'color': 'header-primary'};
        offset = offset.howItWorksCardDescription;
        oscar['style'] = offset;
        oscar['children'] = verify;
        oscar = options.bind(tango)(golf, oscar);
        report[2] = oscar;
        entity['children'] = report;
        entity = zulu.bind(tango)(mike, entity);
        return entity;
    };
    var _closure1_slot7 = entity;
    entity = global;
    options = entity.Object;
    golf = options.defineProperty;
    tango = {};
    entity = true;
    tango['value'] = entity;
    entity = '__esModule';
    entity = golf.bind(options)(zulu, entity, tango);
    entity = 0;
    golf = oscar[entity];
    tango = argCorge;
    entity = undefined;
    tango = tango.bind(entity)(golf);
    offset = 1;
    tango = oscar[offset];
    tango = report.bind(entity)(tango);
    tango = tango.View;
    var _closure1_slot3 = tango;
    tango = 2;
    golf = oscar[tango];
    golf = report.bind(entity)(golf);
    golf = golf.jsx;
    var _closure1_slot4 = golf;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.jsxs;
    var _closure1_slot5 = tango;
    tango = 3;
    tango = oscar[tango];
    options = report.bind(entity)(tango);
    golf = options.createStyles;
    tango = {};
    verify = {};
    verify['flex'] = offset;
    tango['container'] = verify;
    verify = {'flex': 1, 'flexDirection': 'row'};
    tango['horizontalContainer'] = verify;
    verify = {'flex': 1, 'marginVertical': 6, 'backgroundColor': null, 'alignItems': 'center', 'borderRadius': null, 'overflow': 'hidden'};
    offset = 4;
    romeo = oscar[offset];
    romeo = yankee.bind(entity)(romeo);
    romeo = romeo.colors;
    romeo = romeo.BACKGROUND_SECONDARY;
    verify['backgroundColor'] = romeo;
    romeo = oscar[offset];
    romeo = yankee.bind(entity)(romeo);
    romeo = romeo.radii;
    romeo = romeo.sm;
    verify['borderRadius'] = romeo;
    tango['card'] = verify;
    verify = {'width': 18, 'height': 18, 'position': 'absolute', 'top': 9, 'start': 9, 'textAlign': 'center', 'backgroundColor': null, 'borderRadius': 9, 'overflow': 'hidden'};
    romeo = oscar[offset];
    romeo = yankee.bind(entity)(romeo);
    romeo = romeo.colors;
    romeo = romeo.BG_BRAND;
    verify['backgroundColor'] = romeo;
    tango['cardNumber'] = verify;
    verify = {'width': '100%', 'paddingHorizontal': 18, 'paddingVertical': 8, 'textAlign': 'center', 'backgroundColor': null, 'borderBottomStartRadius': 8, 'borderBottomEndRadius': 8, 'overflow': 'hidden'};
    offset = oscar[offset];
    offset = yankee.bind(entity)(offset);
    offset = offset.colors;
    offset = offset.BACKGROUND_SECONDARY_ALT;
    verify['backgroundColor'] = offset;
    tango['howItWorksCardDescription'] = verify;
    verify = {};
    offset = 24;
    verify['marginVertical'] = offset;
    tango['howItWorksCardIcon'] = verify;
    tango = golf.bind(options)(tango);
    var _closure1_slot6 = tango;
    tango = 12;
    tango = oscar[tango];
    oscar = report.bind(entity)(tango);
    report = oscar.fileFinishedImporting;
    tango = 'modules/guild_role_subscriptions/native/guild_settings/welcome/HowItWorksSection.tsx';
    tango = report.bind(oscar)(tango);
    mike = function() { // Original name: HowItWorksSection
        entity = _closure1_slot6;
        tango = undefined;
        options = entity.bind(tango)();
        zulu = _closure1_slot5;
        mike = _closure1_slot3;
        entity = {};
        report = options.container;
        entity['style'] = report;
        romeo = _closure1_slot5;
        golf = _closure1_slot3;
        report = {};
        options = options.horizontalContainer;
        report['style'] = options;
        kilo = _closure1_slot4;
        options = _closure1_slot7;
        foxtrot = {};
        verify = 1;
        foxtrot['cardNumber'] = verify;
        backup = _closure1_slot0;
        yankee = _closure1_slot2;
        verify = 7;
        offset = yankee[verify];
        offset = backup.bind(tango)(offset);
        output = offset.intl;
        sizing = output.string;
        offset = yankee[verify];
        offset = backup.bind(tango)(offset);
        offset = offset.t;
        offset = offset.lT0ZNT;
        offset = sizing.bind(output)(offset);
        foxtrot['description'] = offset;
        offset = _closure1_slot1;
        sizing = 8;
        sizing = yankee[sizing];
        sizing = offset.bind(tango)(sizing);
        foxtrot['iconSource'] = sizing;
        kilo = kilo.bind(tango)(options, foxtrot);
        foxtrot = new Array(3);
        foxtrot[0] = kilo;
        output = _closure1_slot4;
        kilo = 9;
        kilo = yankee[kilo];
        sizing = offset.bind(tango)(kilo);
        kilo = {};
        result = 12;
        kilo['size'] = result;
        kilo = output.bind(tango)(sizing, kilo);
        foxtrot[1] = kilo;
        sizing = _closure1_slot4;
        kilo = {};
        output = 2;
        kilo['cardNumber'] = output;
        output = yankee[verify];
        output = backup.bind(tango)(output);
        echo = output.intl;
        result = echo.string;
        output = yankee[verify];
        output = backup.bind(tango)(output);
        output = output.t;
        output = output.ihN2WV;
        output = result.bind(echo)(output);
        kilo['description'] = output;
        output = 10;
        output = yankee[output];
        output = offset.bind(tango)(output);
        kilo['iconSource'] = output;
        kilo = sizing.bind(tango)(options, kilo);
        foxtrot[2] = kilo;
        report['children'] = foxtrot;
        golf = romeo.bind(tango)(golf, report);
        report = new Array(2);
        report[0] = golf;
        golf = _closure1_slot4;
        oscar = {};
        romeo = 3;
        oscar['cardNumber'] = romeo;
        romeo = yankee[verify];
        romeo = backup.bind(tango)(romeo);
        foxtrot = romeo.intl;
        romeo = foxtrot.string;
        verify = yankee[verify];
        verify = backup.bind(tango)(verify);
        verify = verify.t;
        verify = verify.c8krDQ;
        verify = romeo.bind(foxtrot)(verify);
        oscar['description'] = verify;
        verify = 11;
        verify = yankee[verify];
        verify = offset.bind(tango)(verify);
        oscar['iconSource'] = verify;
        oscar = golf.bind(tango)(options, oscar);
        report[1] = oscar;
        entity['children'] = report;
        entity = zulu.bind(tango)(mike, entity);
        return entity;
    };
    zulu['default'] = mike;
    return entity;
})();