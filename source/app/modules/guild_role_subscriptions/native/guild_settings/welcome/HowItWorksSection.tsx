// app/modules/guild_role_subscriptions/native/guild_settings/welcome/HowItWorksSection.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    report = argBar;
    yankee = argBaz;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    var _closure1_slot1 = yankee;
    var _closure1_slot2 = oscard;
    entity = function(argFoo) { // Original name: HowItWorksCard
        entity = argFoo;
        backup = entity.cardNumber;
        result = entity.iconSource;
        verify = entity.description;
        entity = _closure1_slot6;
        tangon = undefined;
        offset = entity.bind(tangon)();
        zuuluu = _closure1_slot5;
        michal = _closure1_slot3;
        entity = {};
        report = offset.card;
        entity['style'] = report;
        foxtra = _closure1_slot4;
        golfie = _closure1_slot0;
        yankee = _closure1_slot2;
        oscard = 5;
        report = yankee[oscard];
        report = golfie.bind(tangon)(report);
        romeon = report.Text;
        report = {'style': null, 'variant': 'text-xs/bold', 'color': 'always-white'};
        kiloes = offset.cardNumber;
        report['style'] = kiloes;
        report['children'] = backup;
        romeon = foxtra.bind(tangon)(romeon, report);
        report = new Array(3);
        report[0] = romeon;
        backup = _closure1_slot4;
        foxtra = _closure1_slot3;
        romeon = {};
        kiloes = offset.container;
        romeon['style'] = kiloes;
        output = _closure1_slot4;
        sizing = _closure1_slot1;
        kiloes = 6;
        kiloes = yankee[kiloes];
        sizing = sizing.bind(tangon)(kiloes);
        kiloes = {};
        echoed = offset.howItWorksCardIcon;
        kiloes['style'] = echoed;
        kiloes['source'] = result;
        result = 'contain';
        kiloes['resizeMode'] = result;
        kiloes = output.bind(tangon)(sizing, kiloes);
        romeon['children'] = kiloes;
        romeon = backup.bind(tangon)(foxtra, romeon);
        report[1] = romeon;
        option = _closure1_slot4;
        oscard = yankee[oscard];
        oscard = golfie.bind(tangon)(oscard);
        golfie = oscard.Text;
        oscard = {'style': null, 'variant': 'text-sm/normal', 'color': 'header-primary'};
        offset = offset.howItWorksCardDescription;
        oscard['style'] = offset;
        oscard['children'] = verify;
        oscard = option.bind(tangon)(golfie, oscard);
        report[2] = oscard;
        entity['children'] = report;
        entity = zuuluu.bind(tangon)(michal, entity);
        return entity;
    };
    var _closure1_slot7 = entity;
    entity = global;
    option = entity.Object;
    golfie = option.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(option)(zuuluu, entity, tangon);
    entity = 0;
    golfie = oscard[entity];
    tangon = argCor;
    entity = undefined;
    tangon = tangon.bind(entity)(golfie);
    offset = 1;
    tangon = oscard[offset];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.View;
    var _closure1_slot3 = tangon;
    tangon = 2;
    golfie = oscard[tangon];
    golfie = report.bind(entity)(golfie);
    golfie = golfie.jsx;
    var _closure1_slot4 = golfie;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.jsxs;
    var _closure1_slot5 = tangon;
    tangon = 3;
    tangon = oscard[tangon];
    option = report.bind(entity)(tangon);
    golfie = option.createStyles;
    tangon = {};
    verify = {};
    verify['flex'] = offset;
    tangon['container'] = verify;
    verify = {'flex': 1, 'flexDirection': 'row'};
    tangon['horizontalContainer'] = verify;
    verify = {'flex': 1, 'marginVertical': 6, 'backgroundColor': null, 'alignItems': 'center', 'borderRadius': null, 'overflow': 'hidden'};
    offset = 4;
    romeon = oscard[offset];
    romeon = yankee.bind(entity)(romeon);
    romeon = romeon.colors;
    romeon = romeon.BACKGROUND_SECONDARY;
    verify['backgroundColor'] = romeon;
    romeon = oscard[offset];
    romeon = yankee.bind(entity)(romeon);
    romeon = romeon.radii;
    romeon = romeon.sm;
    verify['borderRadius'] = romeon;
    tangon['card'] = verify;
    verify = {'width': 18, 'height': 18, 'position': 'absolute', 'top': 9, 'start': 9, 'textAlign': 'center', 'backgroundColor': null, 'borderRadius': 9, 'overflow': 'hidden'};
    romeon = oscard[offset];
    romeon = yankee.bind(entity)(romeon);
    romeon = romeon.colors;
    romeon = romeon.BG_BRAND;
    verify['backgroundColor'] = romeon;
    tangon['cardNumber'] = verify;
    verify = {'width': '100%', 'paddingHorizontal': 18, 'paddingVertical': 8, 'textAlign': 'center', 'backgroundColor': null, 'borderBottomStartRadius': 8, 'borderBottomEndRadius': 8, 'overflow': 'hidden'};
    offset = oscard[offset];
    offset = yankee.bind(entity)(offset);
    offset = offset.colors;
    offset = offset.BACKGROUND_SECONDARY_ALT;
    verify['backgroundColor'] = offset;
    tangon['howItWorksCardDescription'] = verify;
    verify = {};
    offset = 24;
    verify['marginVertical'] = offset;
    tangon['howItWorksCardIcon'] = verify;
    tangon = golfie.bind(option)(tangon);
    var _closure1_slot6 = tangon;
    tangon = 12;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/guild_role_subscriptions/native/guild_settings/welcome/HowItWorksSection.tsx';
    tangon = report.bind(oscard)(tangon);
    michal = function() { // Original name: HowItWorksSection
        entity = _closure1_slot6;
        tangon = undefined;
        option = entity.bind(tangon)();
        zuuluu = _closure1_slot5;
        michal = _closure1_slot3;
        entity = {};
        report = option.container;
        entity['style'] = report;
        romeon = _closure1_slot5;
        golfie = _closure1_slot3;
        report = {};
        option = option.horizontalContainer;
        report['style'] = option;
        kiloes = _closure1_slot4;
        option = _closure1_slot7;
        foxtra = {};
        verify = 1;
        foxtra['cardNumber'] = verify;
        backup = _closure1_slot0;
        yankee = _closure1_slot2;
        verify = 7;
        offset = yankee[verify];
        offset = backup.bind(tangon)(offset);
        output = offset.intl;
        sizing = output.string;
        offset = yankee[verify];
        offset = backup.bind(tangon)(offset);
        offset = offset.t;
        offset = offset.lT0ZNT;
        offset = sizing.bind(output)(offset);
        foxtra['description'] = offset;
        offset = _closure1_slot1;
        sizing = 8;
        sizing = yankee[sizing];
        sizing = offset.bind(tangon)(sizing);
        foxtra['iconSource'] = sizing;
        kiloes = kiloes.bind(tangon)(option, foxtra);
        foxtra = new Array(3);
        foxtra[0] = kiloes;
        output = _closure1_slot4;
        kiloes = 9;
        kiloes = yankee[kiloes];
        sizing = offset.bind(tangon)(kiloes);
        kiloes = {};
        result = 12;
        kiloes['size'] = result;
        kiloes = output.bind(tangon)(sizing, kiloes);
        foxtra[1] = kiloes;
        sizing = _closure1_slot4;
        kiloes = {};
        output = 2;
        kiloes['cardNumber'] = output;
        output = yankee[verify];
        output = backup.bind(tangon)(output);
        echoed = output.intl;
        result = echoed.string;
        output = yankee[verify];
        output = backup.bind(tangon)(output);
        output = output.t;
        output = output.ihN2WV;
        output = result.bind(echoed)(output);
        kiloes['description'] = output;
        output = 10;
        output = yankee[output];
        output = offset.bind(tangon)(output);
        kiloes['iconSource'] = output;
        kiloes = sizing.bind(tangon)(option, kiloes);
        foxtra[2] = kiloes;
        report['children'] = foxtra;
        golfie = romeon.bind(tangon)(golfie, report);
        report = new Array(2);
        report[0] = golfie;
        golfie = _closure1_slot4;
        oscard = {};
        romeon = 3;
        oscard['cardNumber'] = romeon;
        romeon = yankee[verify];
        romeon = backup.bind(tangon)(romeon);
        foxtra = romeon.intl;
        romeon = foxtra.string;
        verify = yankee[verify];
        verify = backup.bind(tangon)(verify);
        verify = verify.t;
        verify = verify.c8krDQ;
        verify = romeon.bind(foxtra)(verify);
        oscard['description'] = verify;
        verify = 11;
        verify = yankee[verify];
        verify = offset.bind(tangon)(verify);
        oscard['iconSource'] = verify;
        oscard = golfie.bind(tangon)(option, oscard);
        report[1] = oscard;
        entity['children'] = report;
        entity = zuuluu.bind(tangon)(michal, entity);
        return entity;
    };
    zuuluu['default'] = michal;
    return entity;
})();