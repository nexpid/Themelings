// app/modules/guild_role_subscriptions/native/guild_settings/welcome/CreatorHighlightSection.tsx
export default (function(argFoo, argBar, argBaz, argCorge, _, argFred, argPlugh) {
    report = argBar;
    romeo = argBaz;
    zulu = argFred;
    oscar = argPlugh;
    var _closure1_slot0 = report;
    var _closure1_slot1 = romeo;
    var _closure1_slot2 = oscar;
    entity = function(argFoo) { // Original name: GuildServerSubscriberCount
        entity = argFoo;
        offset = entity.subscriberCount;
        oscar = entity.style;
        entity = _closure1_slot8;
        tango = undefined;
        yankee = entity.bind(tango)();
        zulu = _closure1_slot7;
        mike = _closure1_slot4;
        entity = {};
        options = yankee.horizontalContainer;
        report = new Array(3);
        report[0] = options;
        options = yankee.subscriberCountContainer;
        report[1] = options;
        report[2] = oscar;
        entity['style'] = report;
        verify = _closure1_slot6;
        romeo = _closure1_slot0;
        foxtrot = _closure1_slot2;
        oscar = 5;
        report = foxtrot[oscar];
        report = romeo.bind(tango)(report);
        options = report.Text;
        report = {'style': null, 'variant': 'text-sm/medium', 'color': 'always-white'};
        backup = yankee.subscriberCount;
        report['style'] = backup;
        report['children'] = offset;
        options = verify.bind(tango)(options, report);
        report = new Array(3);
        report[0] = options;
        offset = _closure1_slot6;
        backup = _closure1_slot1;
        kilo = 6;
        options = foxtrot[kilo];
        verify = backup.bind(tango)(options);
        options = {};
        kilo = foxtrot[kilo];
        kilo = backup.bind(tango)(kilo);
        kilo = kilo.Sizes;
        kilo = kilo.SMALL;
        options['size'] = kilo;
        kilo = 4;
        kilo = foxtrot[kilo];
        kilo = backup.bind(tango)(kilo);
        kilo = kilo.unsafe_rawColors;
        kilo = kilo.WHITE_500;
        options['color'] = kilo;
        yankee = yankee.subscriberCountIcon;
        options['style'] = yankee;
        yankee = 7;
        yankee = foxtrot[yankee];
        yankee = backup.bind(tango)(yankee);
        options['source'] = yankee;
        options = offset.bind(tango)(verify, options);
        report[1] = options;
        options = _closure1_slot6;
        oscar = foxtrot[oscar];
        oscar = romeo.bind(tango)(oscar);
        golf = oscar.Text;
        oscar = {'variant': 'text-sm/normal', 'color': 'always-white'};
        verify = 8;
        offset = foxtrot[verify];
        offset = romeo.bind(tango)(offset);
        yankee = offset.intl;
        offset = yankee.string;
        verify = foxtrot[verify];
        verify = romeo.bind(tango)(verify);
        verify = verify.t;
        verify = verify.3NNXPT;
        verify = offset.bind(yankee)(verify);
        oscar['children'] = verify;
        oscar = options.bind(tango)(golf, oscar);
        report[2] = oscar;
        entity['children'] = report;
        entity = zulu.bind(tango)(mike, entity);
        return entity;
    };
    var _closure1_slot10 = entity;
    entity = function(argFoo) { // Original name: CreatorGuildCard
        _fun126838: for(var _fun126838_ip = 0; ; ) switch(_fun126838_ip) {
 0:
            entity = argFoo;
            entity = entity.highlightedCreatorGuild;
            mike = _closure1_slot8;
            tango = undefined;
            oscar = mike.bind(tango)();
            var _closure2_slot0 = oscar;
            golf = entity.guild_id;
            var _closure2_slot1 = golf;
            foxtrot = entity.quote;
            update = entity.quote_attribution;
            sizing = entity.quote_attribution_title;
            mike = _closure1_slot1;
            zulu = _closure1_slot2;
            entity = 9;
            entity = zulu[entity];
            zulu = mike.bind(tango)(entity);
            mike = 3;
            entity = 60;
            entity = zulu.bind(tango)(golf, mike, entity);
            var _closure2_slot2 = entity;
            zulu = entity.isLoading;
            mike = entity.hasAllImperativeDetails;
            var _closure2_slot3 = mike;
            offset = _closure1_slot3;
            verify = offset.useCallback;
            options = new Array(2);
            options[0] = mike;
            options[1] = entity;
            golf = function() {
                _fun126839: for(var _fun126839_ip = 0; ; ) switch(_fun126839_ip) {
 0:
                    mike = _closure2_slot3;
                    if(!mike) { _fun126839_ip = 68; continue _fun126839 }
 10:
                    entity = _closure2_slot2;
                    entity = entity.details;
                    zulu = entity.storePageUrl;
                    entity = null;
                    if(!(entity != zulu)) { _fun126839_ip = 68; continue _fun126839 }
 32:
                    tango = _closure1_slot0;
                    mike = _closure1_slot2;
                    entity = 10;
                    mike = mike[entity];
                    entity = undefined;
                    mike = tango.bind(entity)(mike);
                    entity = mike.openURL;
                    entity = entity.bind(mike)(zulu);
 68:
                    entity = undefined;
                    return entity;
                }
            };
            backup = verify.bind(offset)(golf, options);
            if(zulu) { _fun126838_ip = 1183; continue _fun126838 }
 152:
            if(mike) { _fun126838_ip = 159; continue _fun126838 }
 155:
            mike = null;
            return mike;
 159:
            entity = entity.details;
            sequence = entity.guildName;
            echo = entity.guildAvatarUrl;
            papa = entity.subscriberCount;
            source = entity.emojisToShow;
            config = entity.notShownEmojiCount;
            zulu = _closure1_slot7;
            mike = _closure1_slot4;
            entity = {};
            golf = oscar.cardContainer;
            entity['style'] = golf;
            verify = _closure1_slot7;
            options = _closure1_slot4;
            golf = {};
            offset = oscar.horizontalContainer;
            golf['style'] = offset;
            romeo = _closure1_slot6;
            yankee = _closure1_slot1;
            result = _closure1_slot2;
            offset = 12;
            offset = result[offset];
            yankee = yankee.bind(tango)(offset);
            offset = {};
            kilo = oscar.guildIcon;
            offset['style'] = kilo;
            kilo = {};
            kilo['uri'] = echo;
            offset['source'] = kilo;
            yankee = romeo.bind(tango)(yankee, offset);
            offset = new Array(2);
            offset[0] = yankee;
            kilo = _closure1_slot7;
            romeo = _closure1_slot4;
            yankee = {};
            echo = oscar.cardHeaderContainer;
            yankee['style'] = echo;
            control = _closure1_slot6;
            echo = _closure1_slot0;
            vacuum = 5;
            result = result[vacuum];
            result = echo.bind(tango)(result);
            echo = result.Text;
            result = {'variant': 'heading-md/extrabold', 'color': 'header-primary', 'lineClamp': 1, 'lineBreakMode': 'tail'};
            result['children'] = sequence;
            result = control.bind(tango)(echo, result);
            echo = new Array(2);
            echo[0] = result;
            result = null;
            control = result != papa;
            if(!control) { _fun126838_ip = 412; continue _fun126838 }
 381:
            context = _closure1_slot6;
            record = _closure1_slot10;
            sequence = {};
            sequence['subscriberCount'] = papa;
            papa = oscar.serverSubscriberCount;
            sequence['style'] = papa;
            control = context.bind(tango)(record, sequence);
 412:
            echo[1] = control;
            yankee['children'] = echo;
            yankee = kilo.bind(tango)(romeo, yankee);
            offset[1] = yankee;
            golf['children'] = offset;
            options = verify.bind(tango)(options, golf);
            golf = new Array(5);
            golf[0] = options;
            offset = _closure1_slot6;
            romeo = _closure1_slot0;
            yankee = _closure1_slot2;
            options = yankee[vacuum];
            options = romeo.bind(tango)(options);
            verify = options.Text;
            options = {'style': null, 'variant': 'text-md/normal', 'color': 'text-normal'};
            kilo = oscar.ownerQuote;
            options['style'] = kilo;
            options['children'] = foxtrot;
            options = offset.bind(tango)(verify, options);
            golf[1] = options;
            offset = _closure1_slot6;
            options = yankee[vacuum];
            options = romeo.bind(tango)(options);
            verify = options.Text;
            options = {'style': null, 'variant': 'text-sm/normal', 'color': 'text-normal', 'lineClamp': 1, 'lineBreakMode': 'tail'};
            foxtrot = oscar.ownerUsername;
            options['style'] = foxtrot;
            echo = 8;
            foxtrot = yankee[echo];
            foxtrot = romeo.bind(tango)(foxtrot);
            kilo = foxtrot.intl;
            foxtrot = kilo.format;
            yankee = yankee[echo];
            yankee = romeo.bind(tango)(yankee);
            yankee = yankee.t;
            romeo = yankee.m0b6Ki;
            yankee = {};
            yankee['attributionName'] = update;
            if(!(result == sizing)) { _fun126838_ip = 665; continue _fun126838 }
 613:
            record = _closure1_slot0;
            update = _closure1_slot2;
            control = update[echo];
            control = record.bind(tango)(control);
            sequence = control.intl;
            control = sequence.string;
            update = update[echo];
            update = record.bind(tango)(update);
            update = update.t;
            update = update.pclUFB;
            sizing = control.bind(sequence)(update);
 665:
            yankee['attributionTitle'] = sizing;
            yankee = foxtrot.bind(kilo)(romeo, yankee);
            options['children'] = yankee;
            options = offset.bind(tango)(verify, options);
            golf[2] = options;
            options = result != source;
            if(!options) { _fun126838_ip = 710; continue _fun126838 }
 699:
            offset = source.length;
            verify = 0;
            options = offset > verify;
 710:
            if(!options) { _fun126838_ip = 1028; continue _fun126838 }
 716:
            yankee = _closure1_slot7;
            offset = _closure1_slot4;
            verify = {};
            romeo = oscar.emojiSectionContainer;
            verify['style'] = romeo;
            kilo = _closure1_slot6;
            sequence = _closure1_slot0;
            sizing = _closure1_slot2;
            romeo = sizing[vacuum];
            romeo = sequence.bind(tango)(romeo);
            foxtrot = romeo.Text;
            romeo = {'style': null, 'variant': 'text-xs/semibold', 'color': 'text-normal'};
            update = oscar.premiumEmojisTitle;
            romeo['style'] = update;
            update = sizing[echo];
            update = sequence.bind(tango)(update);
            control = update.intl;
            update = control.string;
            sizing = sizing[echo];
            sizing = sequence.bind(tango)(sizing);
            sizing = sizing.t;
            sizing = sizing.wg53Ly;
            sizing = update.bind(control)(sizing);
            romeo['children'] = sizing;
            foxtrot = kilo.bind(tango)(foxtrot, romeo);
            romeo = new Array(2);
            romeo[0] = foxtrot;
            sizing = _closure1_slot7;
            kilo = _closure1_slot4;
            foxtrot = {};
            control = oscar.horizontalContainer;
            update = new Array(2);
            update[0] = control;
            control = oscar.emojiContainer;
            update[1] = control;
            foxtrot['style'] = update;
            update = source.map;
            output = function(argFoo) {
                entity = argFoo;
                report = _closure1_slot6;
                zulu = _closure1_slot1;
                tango = _closure1_slot2;
                mike = 13;
                mike = tango[mike];
                tango = undefined;
                zulu = zulu.bind(tango)(mike);
                mike = {};
                options = _closure2_slot0;
                verify = options.emoji;
                golf = new Array(2);
                golf[0] = verify;
                options = options.emojiListItem;
                golf[1] = options;
                mike['style'] = golf;
                golf = 24;
                mike['size'] = golf;
                golf = entity.id;
                mike['id'] = golf;
                oscar = _closure2_slot1;
                mike['guildId'] = oscar;
                entity = entity.id;
                entity = report.bind(tango)(zulu, mike, entity);
                return entity;
            };
            update = update.bind(source)(output);
            output = new Array(2);
            output[0] = update;
            result = result != config;
            if(!result) { _fun126838_ip = 1000; continue _fun126838 }
 920:
            control = _closure1_slot6;
            source = _closure1_slot0;
            update = _closure1_slot2;
            update = update[vacuum];
            update = source.bind(tango)(update);
            source = update.Text;
            update = {'style': null, 'variant': 'text-sm/semibold', 'color': 'text-normal'};
            vacuum = oscar.emojiListItem;
            update['style'] = vacuum;
            vacuum = global;
            vacuum = vacuum.HermesInternal;
            sequence = vacuum.concat;
            vacuum = '+';
            vacuum = sequence.bind(vacuum)(config);
            update['children'] = vacuum;
            result = control.bind(tango)(source, update);
 1000:
            output[1] = result;
            foxtrot['children'] = output;
            foxtrot = sizing.bind(tango)(kilo, foxtrot);
            romeo[1] = foxtrot;
            verify['children'] = romeo;
            options = yankee.bind(tango)(offset, verify);
 1028:
            golf[3] = options;
            offset = _closure1_slot6;
            verify = _closure1_slot4;
            options = {};
            yankee = oscar.viewServerButtonContainer;
            options['style'] = yankee;
            foxtrot = _closure1_slot6;
            romeo = _closure1_slot1;
            kilo = _closure1_slot2;
            yankee = 14;
            yankee = kilo[yankee];
            romeo = romeo.bind(tango)(yankee);
            yankee = {};
            sizing = oscar.viewServerButton;
            yankee['style'] = sizing;
            result = _closure1_slot0;
            sizing = kilo[echo];
            sizing = result.bind(tango)(sizing);
            output = sizing.intl;
            sizing = output.string;
            kilo = kilo[echo];
            kilo = result.bind(tango)(kilo);
            kilo = kilo.t;
            kilo = kilo.mQ2IGR;
            kilo = sizing.bind(output)(kilo);
            yankee['text'] = kilo;
            yankee['onPress'] = backup;
            backup = true;
            yankee['shrink'] = backup;
            yankee = foxtrot.bind(tango)(romeo, yankee);
            options['children'] = yankee;
            options = offset.bind(tango)(verify, options);
            golf[4] = options;
            entity['children'] = golf;
            entity = zulu.bind(tango)(mike, entity);
            return entity;
 1183:
            zulu = _closure1_slot6;
            mike = _closure1_slot4;
            entity = {};
            oscar = oscar.cardContainer;
            entity['style'] = oscar;
            golf = _closure1_slot6;
            oscar = _closure1_slot1;
            options = _closure1_slot2;
            report = 11;
            report = options[report];
            oscar = oscar.bind(tango)(report);
            report = {};
            report = golf.bind(tango)(oscar, report);
            entity['children'] = report;
            entity = zulu.bind(tango)(mike, entity);
            return entity;
        }
    };
    var _closure1_slot11 = entity;
    entity = global;
    options = entity.Object;
    golf = options.defineProperty;
    tango = {};
    entity = true;
    tango['value'] = entity;
    entity = '__esModule';
    entity = golf.bind(options)(zulu, entity, tango);
    entity = 0;
    golf = oscar[entity];
    tango = argCorge;
    entity = undefined;
    tango = tango.bind(entity)(golf);
    var _closure1_slot3 = tango;
    offset = 1;
    tango = oscar[offset];
    tango = report.bind(entity)(tango);
    golf = tango.View;
    var _closure1_slot4 = golf;
    tango = tango.FlatList;
    var _closure1_slot5 = tango;
    tango = 2;
    golf = oscar[tango];
    golf = report.bind(entity)(golf);
    golf = golf.jsx;
    var _closure1_slot6 = golf;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.jsxs;
    var _closure1_slot7 = tango;
    tango = 3;
    tango = oscar[tango];
    options = report.bind(entity)(tango);
    golf = options.createStyles;
    tango = {};
    verify = {};
    verify['flex'] = offset;
    tango['container'] = verify;
    verify = {};
    offset = 'row';
    verify['flexDirection'] = offset;
    tango['horizontalContainer'] = verify;
    verify = {};
    offset = 8;
    verify['marginTop'] = offset;
    tango['serverSubscriberCount'] = verify;
    verify = {'alignItems': 'center', 'backgroundColor': null, 'paddingEnd': 8, 'borderRadius': null, 'overflow': 'hidden'};
    yankee = 4;
    foxtrot = oscar[yankee];
    foxtrot = romeo.bind(entity)(foxtrot);
    foxtrot = foxtrot.unsafe_rawColors;
    foxtrot = foxtrot.BRAND_530;
    verify['backgroundColor'] = foxtrot;
    foxtrot = oscar[yankee];
    foxtrot = romeo.bind(entity)(foxtrot);
    foxtrot = foxtrot.radii;
    foxtrot = foxtrot.xs;
    verify['borderRadius'] = foxtrot;
    tango['subscriberCountContainer'] = verify;
    verify = {'backgroundColor': null, 'paddingHorizontal': 8, 'paddingVertical': 4};
    foxtrot = oscar[yankee];
    foxtrot = romeo.bind(entity)(foxtrot);
    foxtrot = foxtrot.unsafe_rawColors;
    foxtrot = foxtrot.BRAND_630;
    verify['backgroundColor'] = foxtrot;
    tango['subscriberCount'] = verify;
    verify = {'marginStart': 8, 'marginEnd': 6, 'marginVertical': 4, 'alignSelf': 'center'};
    tango['subscriberCountIcon'] = verify;
    verify = {'width': 276, 'marginEnd': 12, 'paddingHorizontal': 24, 'paddingVertical': 16, 'backgroundColor': null, 'borderRadius': null, 'overflow': 'hidden'};
    foxtrot = 24;
    backup = oscar[yankee];
    backup = romeo.bind(entity)(backup);
    backup = backup.colors;
    backup = backup.BACKGROUND_SECONDARY;
    verify['backgroundColor'] = backup;
    backup = oscar[yankee];
    backup = romeo.bind(entity)(backup);
    backup = backup.radii;
    backup = backup.sm;
    verify['borderRadius'] = backup;
    tango['cardContainer'] = verify;
    verify = {'flex': 1, 'justifyContent': 'flex-start', 'alignItems': 'flex-start'};
    tango['cardHeaderContainer'] = verify;
    verify = {'width': 60, 'height': 60, 'borderRadius': 6, 'marginEnd': 16};
    tango['guildIcon'] = verify;
    verify = {};
    verify['marginTop'] = foxtrot;
    tango['ownerQuote'] = verify;
    verify = {};
    verify['marginTop'] = offset;
    tango['ownerUsername'] = verify;
    verify = {'marginTop': 32, 'textTransform': 'uppercase'};
    tango['premiumEmojisTitle'] = verify;
    verify = {'flex': 1, 'justifyContent': 'flex-end'};
    tango['viewServerButtonContainer'] = verify;
    verify = {'width': '100%', 'backgroundColor': null, 'marginTop': 16};
    foxtrot = oscar[yankee];
    foxtrot = romeo.bind(entity)(foxtrot);
    foxtrot = foxtrot.colors;
    foxtrot = foxtrot.BACKGROUND_ACCENT;
    verify['backgroundColor'] = foxtrot;
    tango['viewServerButton'] = verify;
    verify = {'flex': 1, 'justifyContent': 'flex-start', 'alignItems': 'flex-start'};
    tango['emojiSectionContainer'] = verify;
    verify = {'width': '100%', 'marginTop': 8, 'paddingHorizontal': 8, 'justifyContent': 'space-around', 'backgroundColor': null, 'alignItems': 'center', 'borderRadius': null, 'overflow': 'hidden'};
    foxtrot = oscar[yankee];
    foxtrot = romeo.bind(entity)(foxtrot);
    foxtrot = foxtrot.colors;
    foxtrot = foxtrot.BACKGROUND_SECONDARY_ALT;
    verify['backgroundColor'] = foxtrot;
    yankee = oscar[yankee];
    yankee = romeo.bind(entity)(yankee);
    yankee = yankee.radii;
    yankee = yankee.sm;
    verify['borderRadius'] = yankee;
    tango['emojiContainer'] = verify;
    verify = {};
    verify['marginHorizontal'] = offset;
    tango['emojiListItem'] = verify;
    verify = {'height': 24, 'width': 24, 'marginVertical': 8};
    tango['emoji'] = verify;
    tango = golf.bind(options)(tango);
    var _closure1_slot8 = tango;
    tango = function(argFoo) { // Original name: renderItem
        entity = argFoo;
        entity = entity.item;
        tango = _closure1_slot6;
        zulu = _closure1_slot11;
        mike = {};
        mike['highlightedCreatorGuild'] = entity;
        entity = undefined;
        entity = tango.bind(entity)(zulu, mike);
        return entity;
    };
    var _closure1_slot9 = tango;
    tango = 15;
    tango = oscar[tango];
    oscar = report.bind(entity)(tango);
    report = oscar.fileFinishedImporting;
    tango = 'modules/guild_role_subscriptions/native/guild_settings/welcome/CreatorHighlightSection.tsx';
    tango = report.bind(oscar)(tango);
    mike = function(argFoo) { // Original name: CreatorHighlightSection
        entity = argFoo;
        report = entity.highlightedCreators;
        tango = _closure1_slot6;
        zulu = _closure1_slot5;
        mike = {};
        mike['data'] = report;
        report = true;
        mike['horizontal'] = report;
        report = function(argFoo) { // Original name: keyExtractor
            entity = argFoo;
            entity = entity.guild_id;
            return entity;
        };
        mike['keyExtractor'] = report;
        entity = _closure1_slot9;
        mike['renderItem'] = entity;
        entity = undefined;
        entity = tango.bind(entity)(zulu, mike);
        return entity;
    };
    zulu['default'] = mike;
    return entity;
})();