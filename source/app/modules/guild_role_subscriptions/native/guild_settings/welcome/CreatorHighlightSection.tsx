// app/modules/guild_role_subscriptions/native/guild_settings/welcome/CreatorHighlightSection.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    report = argBar;
    romeon = argBaz;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    var _closure1_slot1 = romeon;
    var _closure1_slot2 = oscard;
    entity = function(argFoo) { // Original name: GuildServerSubscriberCount
        entity = argFoo;
        offset = entity.subscriberCount;
        oscard = entity.style;
        entity = _closure1_slot8;
        tangon = undefined;
        yankee = entity.bind(tangon)();
        zuuluu = _closure1_slot7;
        michal = _closure1_slot4;
        entity = {};
        option = yankee.horizontalContainer;
        report = new Array(3);
        report[0] = option;
        option = yankee.subscriberCountContainer;
        report[1] = option;
        report[2] = oscard;
        entity['style'] = report;
        verify = _closure1_slot6;
        romeon = _closure1_slot0;
        foxtra = _closure1_slot2;
        oscard = 5;
        report = foxtra[oscard];
        report = romeon.bind(tangon)(report);
        option = report.Text;
        report = {'style': null, 'variant': 'text-sm/medium', 'color': 'always-white'};
        backup = yankee.subscriberCount;
        report['style'] = backup;
        report['children'] = offset;
        option = verify.bind(tangon)(option, report);
        report = new Array(3);
        report[0] = option;
        offset = _closure1_slot6;
        backup = _closure1_slot1;
        kiloes = 6;
        option = foxtra[kiloes];
        verify = backup.bind(tangon)(option);
        option = {};
        kiloes = foxtra[kiloes];
        kiloes = backup.bind(tangon)(kiloes);
        kiloes = kiloes.Sizes;
        kiloes = kiloes.SMALL;
        option['size'] = kiloes;
        kiloes = 4;
        kiloes = foxtra[kiloes];
        kiloes = backup.bind(tangon)(kiloes);
        kiloes = kiloes.unsafe_rawColors;
        kiloes = kiloes.WHITE_500;
        option['color'] = kiloes;
        yankee = yankee.subscriberCountIcon;
        option['style'] = yankee;
        yankee = 7;
        yankee = foxtra[yankee];
        yankee = backup.bind(tangon)(yankee);
        option['source'] = yankee;
        option = offset.bind(tangon)(verify, option);
        report[1] = option;
        option = _closure1_slot6;
        oscard = foxtra[oscard];
        oscard = romeon.bind(tangon)(oscard);
        golfie = oscard.Text;
        oscard = {'variant': 'text-sm/normal', 'color': 'always-white'};
        verify = 8;
        offset = foxtra[verify];
        offset = romeon.bind(tangon)(offset);
        yankee = offset.intl;
        offset = yankee.string;
        verify = foxtra[verify];
        verify = romeon.bind(tangon)(verify);
        verify = verify.t;
        verify = verify.3NNXPT;
        verify = offset.bind(yankee)(verify);
        oscard['children'] = verify;
        oscard = option.bind(tangon)(golfie, oscard);
        report[2] = oscard;
        entity['children'] = report;
        entity = zuuluu.bind(tangon)(michal, entity);
        return entity;
    };
    var _closure1_slot10 = entity;
    entity = function(argFoo) { // Original name: CreatorGuildCard
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            entity = argFoo;
            entity = entity.highlightedCreatorGuild;
            michal = _closure1_slot8;
            tangon = undefined;
            oscard = michal.bind(tangon)();
            var _closure2_slot0 = oscard;
            golfie = entity.guild_id;
            var _closure2_slot1 = golfie;
            foxtra = entity.quote;
            update = entity.quote_attribution;
            sizing = entity.quote_attribution_title;
            michal = _closure1_slot1;
            zuuluu = _closure1_slot2;
            entity = 9;
            entity = zuuluu[entity];
            zuuluu = michal.bind(tangon)(entity);
            michal = 3;
            entity = 60;
            entity = zuuluu.bind(tangon)(golfie, michal, entity);
            var _closure2_slot2 = entity;
            zuuluu = entity.isLoading;
            michal = entity.hasAllImperativeDetails;
            var _closure2_slot3 = michal;
            offset = _closure1_slot3;
            verify = offset.useCallback;
            option = new Array(2);
            option[0] = michal;
            option[1] = entity;
            golfie = function() {
                _fun00003: for(var _fun00004_ip = 0; ; ) switch(_fun00004_ip) {
 0:
                    michal = _closure2_slot3;
                    if(!michal) { _fun00004_ip = 68; continue _fun00003 }
 10:
                    entity = _closure2_slot2;
                    entity = entity.details;
                    zuuluu = entity.storePageUrl;
                    entity = null;
                    if(!(entity != zuuluu)) { _fun00004_ip = 68; continue _fun00003 }
 32:
                    tangon = _closure1_slot0;
                    michal = _closure1_slot2;
                    entity = 10;
                    michal = michal[entity];
                    entity = undefined;
                    michal = tangon.bind(entity)(michal);
                    entity = michal.openURL;
                    entity = entity.bind(michal)(zuuluu);
 68:
                    entity = undefined;
                    return entity;
                }
            };
            backup = verify.bind(offset)(golfie, option);
            if(zuuluu) { _fun00002_ip = 1191; continue _fun00001 }
 152:
            if(michal) { _fun00002_ip = 159; continue _fun00001 }
 155:
            michal = null;
            return michal;
 159:
            entity = entity.details;
            sequen = entity.guildName;
            echoed = entity.guildAvatarUrl;
            papara = entity.subscriberCount;
            source = entity.emojisToShow;
            config = entity.notShownEmojiCount;
            zuuluu = _closure1_slot7;
            michal = _closure1_slot4;
            entity = {};
            golfie = oscard.cardContainer;
            entity['style'] = golfie;
            verify = _closure1_slot7;
            option = _closure1_slot4;
            golfie = {};
            offset = oscard.horizontalContainer;
            golfie['style'] = offset;
            romeon = _closure1_slot6;
            yankee = _closure1_slot1;
            result = _closure1_slot2;
            offset = 12;
            offset = result[offset];
            yankee = yankee.bind(tangon)(offset);
            offset = {};
            kiloes = oscard.guildIcon;
            offset['style'] = kiloes;
            kiloes = {};
            kiloes['uri'] = echoed;
            offset['source'] = kiloes;
            yankee = romeon.bind(tangon)(yankee, offset);
            offset = new Array(2);
            offset[0] = yankee;
            kiloes = _closure1_slot7;
            romeon = _closure1_slot4;
            yankee = {};
            echoed = oscard.cardHeaderContainer;
            yankee['style'] = echoed;
            ctrled = _closure1_slot6;
            echoed = _closure1_slot0;
            vacuum = 5;
            result = result[vacuum];
            result = echoed.bind(tangon)(result);
            echoed = result.Text;
            result = {'variant': 'heading-md/extrabold', 'color': 'header-primary', 'lineClamp': 1, 'lineBreakMode': 'tail'};
            result['children'] = sequen;
            result = ctrled.bind(tangon)(echoed, result);
            echoed = new Array(2);
            echoed[0] = result;
            result = null;
            ctrled = result != papara;
            if(!ctrled) { _fun00002_ip = 412; continue _fun00001 }
 381:
            cntext = _closure1_slot6;
            record = _closure1_slot10;
            sequen = {};
            sequen['subscriberCount'] = papara;
            papara = oscard.serverSubscriberCount;
            sequen['style'] = papara;
            ctrled = cntext.bind(tangon)(record, sequen);
 412:
            echoed[1] = ctrled;
            yankee['children'] = echoed;
            yankee = kiloes.bind(tangon)(romeon, yankee);
            offset[1] = yankee;
            golfie['children'] = offset;
            option = verify.bind(tangon)(option, golfie);
            golfie = new Array(5);
            golfie[0] = option;
            offset = _closure1_slot6;
            romeon = _closure1_slot0;
            yankee = _closure1_slot2;
            option = yankee[vacuum];
            option = romeon.bind(tangon)(option);
            verify = option.Text;
            option = {'style': null, 'variant': 'text-md/normal', 'color': 'text-normal'};
            kiloes = oscard.ownerQuote;
            option['style'] = kiloes;
            option['children'] = foxtra;
            option = offset.bind(tangon)(verify, option);
            golfie[1] = option;
            offset = _closure1_slot6;
            option = yankee[vacuum];
            option = romeon.bind(tangon)(option);
            verify = option.Text;
            option = {'style': null, 'variant': 'text-sm/normal', 'color': 'text-normal', 'lineClamp': 1, 'lineBreakMode': 'tail'};
            foxtra = oscard.ownerUsername;
            option['style'] = foxtra;
            echoed = 8;
            foxtra = yankee[echoed];
            foxtra = romeon.bind(tangon)(foxtra);
            kiloes = foxtra.intl;
            foxtra = kiloes.format;
            yankee = yankee[echoed];
            yankee = romeon.bind(tangon)(yankee);
            yankee = yankee.t;
            romeon = yankee.m0b6Ki;
            yankee = {};
            yankee['attributionName'] = update;
            if(!(result == sizing)) { _fun00002_ip = 669; continue _fun00001 }
 615:
            record = _closure1_slot0;
            update = _closure1_slot2;
            ctrled = update[echoed];
            ctrled = record.bind(tangon)(ctrled);
            sequen = ctrled.intl;
            ctrled = sequen.string;
            update = update[echoed];
            update = record.bind(tangon)(update);
            update = update.t;
            update = update.pclUFB;
            sizing = ctrled.bind(sequen)(update);
 669:
            yankee['attributionTitle'] = sizing;
            yankee = foxtra.bind(kiloes)(romeon, yankee);
            option['children'] = yankee;
            option = offset.bind(tangon)(verify, option);
            golfie[2] = option;
            option = result != source;
            if(!option) { _fun00002_ip = 714; continue _fun00001 }
 703:
            offset = source.length;
            verify = 0;
            option = offset > verify;
 714:
            if(!option) { _fun00002_ip = 1034; continue _fun00001 }
 720:
            yankee = _closure1_slot7;
            offset = _closure1_slot4;
            verify = {};
            romeon = oscard.emojiSectionContainer;
            verify['style'] = romeon;
            kiloes = _closure1_slot6;
            sequen = _closure1_slot0;
            sizing = _closure1_slot2;
            romeon = sizing[vacuum];
            romeon = sequen.bind(tangon)(romeon);
            foxtra = romeon.Text;
            romeon = {'style': null, 'variant': 'text-xs/semibold', 'color': 'text-normal'};
            update = oscard.premiumEmojisTitle;
            romeon['style'] = update;
            update = sizing[echoed];
            update = sequen.bind(tangon)(update);
            ctrled = update.intl;
            update = ctrled.string;
            sizing = sizing[echoed];
            sizing = sequen.bind(tangon)(sizing);
            sizing = sizing.t;
            sizing = sizing.wg53Ly;
            sizing = update.bind(ctrled)(sizing);
            romeon['children'] = sizing;
            foxtra = kiloes.bind(tangon)(foxtra, romeon);
            romeon = new Array(2);
            romeon[0] = foxtra;
            sizing = _closure1_slot7;
            kiloes = _closure1_slot4;
            foxtra = {};
            ctrled = oscard.horizontalContainer;
            update = new Array(2);
            update[0] = ctrled;
            ctrled = oscard.emojiContainer;
            update[1] = ctrled;
            foxtra['style'] = update;
            update = source.map;
            output = function(argFoo) {
                entity = argFoo;
                report = _closure1_slot6;
                zuuluu = _closure1_slot1;
                tangon = _closure1_slot2;
                michal = 13;
                michal = tangon[michal];
                tangon = undefined;
                zuuluu = zuuluu.bind(tangon)(michal);
                michal = {};
                option = _closure2_slot0;
                verify = option.emoji;
                golfie = new Array(2);
                golfie[0] = verify;
                option = option.emojiListItem;
                golfie[1] = option;
                michal['style'] = golfie;
                golfie = 24;
                michal['size'] = golfie;
                golfie = entity.id;
                michal['id'] = golfie;
                oscard = _closure2_slot1;
                michal['guildId'] = oscard;
                entity = entity.id;
                entity = report.bind(tangon)(zuuluu, michal, entity);
                return entity;
            };
            update = update.bind(source)(output);
            output = new Array(2);
            output[0] = update;
            result = result != config;
            if(!result) { _fun00002_ip = 1006; continue _fun00001 }
 926:
            ctrled = _closure1_slot6;
            source = _closure1_slot0;
            update = _closure1_slot2;
            update = update[vacuum];
            update = source.bind(tangon)(update);
            source = update.Text;
            update = {'style': null, 'variant': 'text-sm/semibold', 'color': 'text-normal'};
            vacuum = oscard.emojiListItem;
            update['style'] = vacuum;
            vacuum = global;
            vacuum = vacuum.HermesInternal;
            sequen = vacuum.concat;
            vacuum = '+';
            vacuum = sequen.bind(vacuum)(config);
            update['children'] = vacuum;
            result = ctrled.bind(tangon)(source, update);
 1006:
            output[1] = result;
            foxtra['children'] = output;
            foxtra = sizing.bind(tangon)(kiloes, foxtra);
            romeon[1] = foxtra;
            verify['children'] = romeon;
            option = yankee.bind(tangon)(offset, verify);
 1034:
            golfie[3] = option;
            offset = _closure1_slot6;
            verify = _closure1_slot4;
            option = {};
            yankee = oscard.viewServerButtonContainer;
            option['style'] = yankee;
            foxtra = _closure1_slot6;
            romeon = _closure1_slot1;
            kiloes = _closure1_slot2;
            yankee = 14;
            yankee = kiloes[yankee];
            romeon = romeon.bind(tangon)(yankee);
            yankee = {};
            sizing = oscard.viewServerButton;
            yankee['style'] = sizing;
            result = _closure1_slot0;
            sizing = kiloes[echoed];
            sizing = result.bind(tangon)(sizing);
            output = sizing.intl;
            sizing = output.string;
            kiloes = kiloes[echoed];
            kiloes = result.bind(tangon)(kiloes);
            kiloes = kiloes.t;
            kiloes = kiloes.mQ2IGR;
            kiloes = sizing.bind(output)(kiloes);
            yankee['text'] = kiloes;
            yankee['onPress'] = backup;
            backup = true;
            yankee['shrink'] = backup;
            yankee = foxtra.bind(tangon)(romeon, yankee);
            option['children'] = yankee;
            option = offset.bind(tangon)(verify, option);
            golfie[4] = option;
            entity['children'] = golfie;
            entity = zuuluu.bind(tangon)(michal, entity);
            return entity;
 1191:
            zuuluu = _closure1_slot6;
            michal = _closure1_slot4;
            entity = {};
            oscard = oscard.cardContainer;
            entity['style'] = oscard;
            golfie = _closure1_slot6;
            oscard = _closure1_slot1;
            option = _closure1_slot2;
            report = 11;
            report = option[report];
            oscard = oscard.bind(tangon)(report);
            report = {};
            report = golfie.bind(tangon)(oscard, report);
            entity['children'] = report;
            entity = zuuluu.bind(tangon)(michal, entity);
            return entity;
        }
    };
    var _closure1_slot11 = entity;
    entity = global;
    option = entity.Object;
    golfie = option.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(option)(zuuluu, entity, tangon);
    entity = 0;
    golfie = oscard[entity];
    tangon = argCor;
    entity = undefined;
    tangon = tangon.bind(entity)(golfie);
    var _closure1_slot3 = tangon;
    offset = 1;
    tangon = oscard[offset];
    tangon = report.bind(entity)(tangon);
    golfie = tangon.View;
    var _closure1_slot4 = golfie;
    tangon = tangon.FlatList;
    var _closure1_slot5 = tangon;
    tangon = 2;
    golfie = oscard[tangon];
    golfie = report.bind(entity)(golfie);
    golfie = golfie.jsx;
    var _closure1_slot6 = golfie;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.jsxs;
    var _closure1_slot7 = tangon;
    tangon = 3;
    tangon = oscard[tangon];
    option = report.bind(entity)(tangon);
    golfie = option.createStyles;
    tangon = {};
    verify = {};
    verify['flex'] = offset;
    tangon['container'] = verify;
    verify = {};
    offset = 'row';
    verify['flexDirection'] = offset;
    tangon['horizontalContainer'] = verify;
    verify = {};
    offset = 8;
    verify['marginTop'] = offset;
    tangon['serverSubscriberCount'] = verify;
    verify = {'alignItems': 'center', 'backgroundColor': null, 'paddingEnd': 8, 'borderRadius': null, 'overflow': 'hidden'};
    yankee = 4;
    foxtra = oscard[yankee];
    foxtra = romeon.bind(entity)(foxtra);
    foxtra = foxtra.unsafe_rawColors;
    foxtra = foxtra.BRAND_530;
    verify['backgroundColor'] = foxtra;
    foxtra = oscard[yankee];
    foxtra = romeon.bind(entity)(foxtra);
    foxtra = foxtra.radii;
    foxtra = foxtra.xs;
    verify['borderRadius'] = foxtra;
    tangon['subscriberCountContainer'] = verify;
    verify = {'backgroundColor': null, 'paddingHorizontal': 8, 'paddingVertical': 4};
    foxtra = oscard[yankee];
    foxtra = romeon.bind(entity)(foxtra);
    foxtra = foxtra.unsafe_rawColors;
    foxtra = foxtra.BRAND_630;
    verify['backgroundColor'] = foxtra;
    tangon['subscriberCount'] = verify;
    verify = {'marginStart': 8, 'marginEnd': 6, 'marginVertical': 4, 'alignSelf': 'center'};
    tangon['subscriberCountIcon'] = verify;
    verify = {'width': 276, 'marginEnd': 12, 'paddingHorizontal': 24, 'paddingVertical': 16, 'backgroundColor': null, 'borderRadius': null, 'overflow': 'hidden'};
    foxtra = 24;
    backup = oscard[yankee];
    backup = romeon.bind(entity)(backup);
    backup = backup.colors;
    backup = backup.BACKGROUND_SECONDARY;
    verify['backgroundColor'] = backup;
    backup = oscard[yankee];
    backup = romeon.bind(entity)(backup);
    backup = backup.radii;
    backup = backup.sm;
    verify['borderRadius'] = backup;
    tangon['cardContainer'] = verify;
    verify = {'flex': 1, 'justifyContent': 'flex-start', 'alignItems': 'flex-start'};
    tangon['cardHeaderContainer'] = verify;
    verify = {'width': 60, 'height': 60, 'borderRadius': 6, 'marginEnd': 16};
    tangon['guildIcon'] = verify;
    verify = {};
    verify['marginTop'] = foxtra;
    tangon['ownerQuote'] = verify;
    verify = {};
    verify['marginTop'] = offset;
    tangon['ownerUsername'] = verify;
    verify = {'marginTop': 32, 'textTransform': 'uppercase'};
    tangon['premiumEmojisTitle'] = verify;
    verify = {'flex': 1, 'justifyContent': 'flex-end'};
    tangon['viewServerButtonContainer'] = verify;
    verify = {'width': '100%', 'backgroundColor': null, 'marginTop': 16};
    foxtra = oscard[yankee];
    foxtra = romeon.bind(entity)(foxtra);
    foxtra = foxtra.colors;
    foxtra = foxtra.BACKGROUND_ACCENT;
    verify['backgroundColor'] = foxtra;
    tangon['viewServerButton'] = verify;
    verify = {'flex': 1, 'justifyContent': 'flex-start', 'alignItems': 'flex-start'};
    tangon['emojiSectionContainer'] = verify;
    verify = {'width': '100%', 'marginTop': 8, 'paddingHorizontal': 8, 'justifyContent': 'space-around', 'backgroundColor': null, 'alignItems': 'center', 'borderRadius': null, 'overflow': 'hidden'};
    foxtra = oscard[yankee];
    foxtra = romeon.bind(entity)(foxtra);
    foxtra = foxtra.colors;
    foxtra = foxtra.BACKGROUND_SECONDARY_ALT;
    verify['backgroundColor'] = foxtra;
    yankee = oscard[yankee];
    yankee = romeon.bind(entity)(yankee);
    yankee = yankee.radii;
    yankee = yankee.sm;
    verify['borderRadius'] = yankee;
    tangon['emojiContainer'] = verify;
    verify = {};
    verify['marginHorizontal'] = offset;
    tangon['emojiListItem'] = verify;
    verify = {'height': 24, 'width': 24, 'marginVertical': 8};
    tangon['emoji'] = verify;
    tangon = golfie.bind(option)(tangon);
    var _closure1_slot8 = tangon;
    tangon = function(argFoo) { // Original name: renderItem
        entity = argFoo;
        entity = entity.item;
        tangon = _closure1_slot6;
        zuuluu = _closure1_slot11;
        michal = {};
        michal['highlightedCreatorGuild'] = entity;
        entity = undefined;
        entity = tangon.bind(entity)(zuuluu, michal);
        return entity;
    };
    var _closure1_slot9 = tangon;
    tangon = 15;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/guild_role_subscriptions/native/guild_settings/welcome/CreatorHighlightSection.tsx';
    tangon = report.bind(oscard)(tangon);
    michal = function(argFoo) { // Original name: CreatorHighlightSection
        entity = argFoo;
        report = entity.highlightedCreators;
        tangon = _closure1_slot6;
        zuuluu = _closure1_slot5;
        michal = {};
        michal['data'] = report;
        report = true;
        michal['horizontal'] = report;
        report = function(argFoo) { // Original name: keyExtractor
            entity = argFoo;
            entity = entity.guild_id;
            return entity;
        };
        michal['keyExtractor'] = report;
        entity = _closure1_slot9;
        michal['renderItem'] = entity;
        entity = undefined;
        entity = tangon.bind(entity)(zuuluu, michal);
        return entity;
    };
    zuuluu['default'] = michal;
    return entity;
})();