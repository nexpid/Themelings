// app/modules/guild_role_subscriptions/native/guild_settings/welcome/CreatorBenefitsSection.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    report = argBar;
    romeon = argBaz;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    var _closure1_slot1 = romeon;
    var _closure1_slot2 = oscard;
    entity = function(argFoo, argBar) { // Original name: getGreenTextStyle
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            michal = argFoo;
            tangon = _closure1_slot0;
            zuuluu = _closure1_slot2;
            entity = 6;
            zuuluu = zuuluu[entity];
            entity = undefined;
            tangon = tangon.bind(entity)(zuuluu);
            zuuluu = tangon.isThemeDark;
            entity = argBar;
            entity = zuuluu.bind(tangon)(entity);
            if(entity) { _fun00002_ip = 53; continue _fun00001 }
 45:
            entity = michal.greenTextLightMode;
            _fun00002_ip = 59; continue _fun00001;
 53:
            entity = michal.greenTextDarkMode;
 59:
            return entity;
        }
    };
    var _closure1_slot8 = entity;
    entity = function() { // Original name: EarningPreview
        _fun00003: for(var _fun00004_ip = 0; ; ) switch(_fun00004_ip) {
 0:
            michal = _closure1_slot1;
            oscard = _closure1_slot2;
            entity = 7;
            entity = oscard[entity];
            tangon = undefined;
            entity = michal.bind(tangon)(entity);
            update = entity.bind(tangon)();
            entity = _closure1_slot7;
            romeon = entity.bind(tangon)();
            zuuluu = _closure1_slot5;
            michal = _closure1_slot3;
            entity = {};
            golfie = romeon.earningMetricsShadowContainer;
            report = new Array(2);
            report[0] = golfie;
            golfie = _closure1_slot0;
            foxtra = 6;
            oscard = oscard[foxtra];
            golfie = golfie.bind(tangon)(oscard);
            oscard = golfie.isThemeDark;
            oscard = oscard.bind(golfie)(update);
            if(!oscard) { _fun00004_ip = 97; continue _fun00003 }
 91:
            oscard = romeon.earningMetricsShadowContainerDarkMode;
 97:
            report[1] = oscard;
            entity['style'] = report;
            golfie = _closure1_slot6;
            oscard = _closure1_slot3;
            report = {};
            offset = romeon.earningMetrics;
            option = new Array(3);
            option[0] = offset;
            offset = romeon.horizontalContainer;
            option[1] = offset;
            yankee = _closure1_slot0;
            offset = _closure1_slot2;
            offset = offset[foxtra];
            yankee = yankee.bind(tangon)(offset);
            offset = yankee.isThemeDark;
            offset = offset.bind(yankee)(update);
            if(offset) { _fun00004_ip = 178; continue _fun00003 }
 170:
            offset = romeon.earningMetricsLightMode;
            _fun00004_ip = 184; continue _fun00003;
 178:
            offset = romeon.earningMetricsDarkMode;
 184:
            option[2] = offset;
            report['style'] = option;
            yankee = _closure1_slot6;
            offset = _closure1_slot3;
            option = {};
            output = _closure1_slot5;
            source = _closure1_slot0;
            backup = _closure1_slot2;
            kiloes = 8;
            foxtra = backup[kiloes];
            foxtra = source.bind(tangon)(foxtra);
            sizing = foxtra.Text;
            foxtra = {'variant': 'text-sm/normal', 'color': 'header-primary'};
            result = 9;
            echoed = backup[result];
            echoed = source.bind(tangon)(echoed);
            vacuum = echoed.intl;
            ctrled = vacuum.string;
            echoed = backup[result];
            echoed = source.bind(tangon)(echoed);
            echoed = echoed.t;
            echoed = echoed.TXPK7O;
            echoed = ctrled.bind(vacuum)(echoed);
            foxtra['children'] = echoed;
            sizing = output.bind(tangon)(sizing, foxtra);
            foxtra = new Array(2);
            foxtra[0] = sizing;
            output = _closure1_slot5;
            kiloes = backup[kiloes];
            kiloes = source.bind(tangon)(kiloes);
            sizing = kiloes.Text;
            kiloes = {};
            echoed = _closure1_slot8;
            echoed = echoed.bind(tangon)(romeon, update);
            kiloes['style'] = echoed;
            echoed = 'heading-lg/extrabold';
            kiloes['variant'] = echoed;
            echoed = backup[result];
            echoed = source.bind(tangon)(echoed);
            update = echoed.intl;
            echoed = update.string;
            result = backup[result];
            result = source.bind(tangon)(result);
            result = result.t;
            result = result.LdjJGx;
            result = echoed.bind(update)(result);
            kiloes['children'] = result;
            kiloes = output.bind(tangon)(sizing, kiloes);
            foxtra[1] = kiloes;
            option['children'] = foxtra;
            offset = yankee.bind(tangon)(offset, option);
            option = new Array(2);
            option[0] = offset;
            yankee = _closure1_slot5;
            foxtra = _closure1_slot1;
            verify = 10;
            verify = backup[verify];
            offset = foxtra.bind(tangon)(verify);
            verify = {};
            romeon = romeon.earningMetricsAvatar;
            verify['style'] = romeon;
            romeon = 11;
            romeon = backup[romeon];
            romeon = foxtra.bind(tangon)(romeon);
            verify['source'] = romeon;
            verify = yankee.bind(tangon)(offset, verify);
            option[1] = verify;
            report['children'] = option;
            report = golfie.bind(tangon)(oscard, report);
            entity['children'] = report;
            entity = zuuluu.bind(tangon)(michal, entity);
            return entity;
        }
    };
    var _closure1_slot9 = entity;
    entity = function() { // Original name: ConsistentEarningBenefit
        _fun00005: for(var _fun00006_ip = 0; ; ) switch(_fun00006_ip) {
 0:
            michal = _closure1_slot1;
            sizing = _closure1_slot2;
            entity = 7;
            entity = sizing[entity];
            tangon = undefined;
            entity = michal.bind(tangon)(entity);
            kiloes = entity.bind(tangon)();
            entity = _closure1_slot7;
            yankee = entity.bind(tangon)();
            zuuluu = _closure1_slot6;
            michal = _closure1_slot3;
            entity = {};
            report = yankee.benefitCard;
            entity['style'] = report;
            golfie = _closure1_slot5;
            backup = _closure1_slot0;
            report = 8;
            report = sizing[report];
            report = backup.bind(tangon)(report);
            oscard = report.Text;
            report = {'style': null, 'variant': 'heading-md/medium', 'color': 'header-secondary'};
            option = yankee.benefitCardTitle;
            report['style'] = option;
            option = 9;
            verify = sizing[option];
            verify = backup.bind(tangon)(verify);
            romeon = verify.intl;
            verify = romeon.string;
            option = sizing[option];
            option = backup.bind(tangon)(option);
            option = option.t;
            option = option.9CdmS0;
            option = verify.bind(romeon)(option);
            report['children'] = option;
            oscard = golfie.bind(tangon)(oscard, report);
            report = new Array(3);
            report[0] = oscard;
            option = _closure1_slot5;
            golfie = _closure1_slot9;
            oscard = {};
            oscard = option.bind(tangon)(golfie, oscard);
            report[1] = oscard;
            option = _closure1_slot6;
            golfie = _closure1_slot3;
            oscard = {};
            romeon = yankee.horizontalContainer;
            verify = new Array(2);
            verify[0] = romeon;
            yankee = yankee.benefitAvatars;
            verify[1] = yankee;
            oscard['style'] = verify;
            romeon = _closure1_slot5;
            yankee = _closure1_slot13;
            verify = {};
            foxtra = 6;
            foxtra = sizing[foxtra];
            backup = backup.bind(tangon)(foxtra);
            foxtra = backup.isThemeDark;
            foxtra = foxtra.bind(backup)(kiloes);
            kiloes = _closure1_slot1;
            sizing = _closure1_slot2;
            if(foxtra) { _fun00006_ip = 291; continue _fun00005 }
 277:
            foxtra = 13;
            foxtra = sizing[foxtra];
            foxtra = kiloes.bind(tangon)(foxtra);
            _fun00006_ip = 303; continue _fun00005;
 291:
            backup = 12;
            backup = sizing[backup];
            foxtra = kiloes.bind(tangon)(backup);
 303:
            verify['avatarSource'] = foxtra;
            yankee = romeon.bind(tangon)(yankee, verify);
            verify = new Array(3);
            verify[0] = yankee;
            foxtra = _closure1_slot5;
            romeon = _closure1_slot13;
            yankee = {};
            backup = _closure1_slot1;
            kiloes = _closure1_slot2;
            sizing = 14;
            sizing = kiloes[sizing];
            sizing = backup.bind(tangon)(sizing);
            yankee['avatarSource'] = sizing;
            yankee = foxtra.bind(tangon)(romeon, yankee);
            verify[1] = yankee;
            yankee = _closure1_slot5;
            offset = {};
            foxtra = 15;
            foxtra = kiloes[foxtra];
            foxtra = backup.bind(tangon)(foxtra);
            offset['avatarSource'] = foxtra;
            offset = yankee.bind(tangon)(romeon, offset);
            verify[2] = offset;
            oscard['children'] = verify;
            oscard = option.bind(tangon)(golfie, oscard);
            report[2] = oscard;
            entity['children'] = report;
            entity = zuuluu.bind(tangon)(michal, entity);
            return entity;
        }
    };
    var _closure1_slot10 = entity;
    entity = function() { // Original name: FollowerAwardBenefit
        entity = _closure1_slot7;
        tangon = undefined;
        verify = entity.bind(tangon)();
        zuuluu = _closure1_slot6;
        michal = _closure1_slot3;
        entity = {};
        report = verify.benefitCard;
        entity['style'] = report;
        option = _closure1_slot5;
        backup = _closure1_slot0;
        yankee = _closure1_slot2;
        report = 8;
        report = yankee[report];
        report = backup.bind(tangon)(report);
        oscard = report.Text;
        report = {'style': null, 'variant': 'heading-md/medium', 'color': 'header-secondary'};
        offset = verify.benefitCardTitle;
        report['style'] = offset;
        offset = 9;
        romeon = yankee[offset];
        romeon = backup.bind(tangon)(romeon);
        foxtra = romeon.intl;
        romeon = foxtra.string;
        offset = yankee[offset];
        offset = backup.bind(tangon)(offset);
        offset = offset.t;
        offset = offset.qsKRUV;
        offset = romeon.bind(foxtra)(offset);
        report['children'] = offset;
        oscard = option.bind(tangon)(oscard, report);
        report = new Array(3);
        report[0] = oscard;
        foxtra = _closure1_slot5;
        offset = _closure1_slot1;
        oscard = 10;
        option = yankee[oscard];
        romeon = offset.bind(tangon)(option);
        option = {};
        backup = verify.socialIllo;
        option['style'] = backup;
        backup = 16;
        backup = yankee[backup];
        backup = offset.bind(tangon)(backup);
        option['source'] = backup;
        option = foxtra.bind(tangon)(romeon, option);
        report[1] = option;
        option = _closure1_slot5;
        oscard = yankee[oscard];
        golfie = offset.bind(tangon)(oscard);
        oscard = {};
        verify = verify.lanyardIllo;
        oscard['style'] = verify;
        verify = 17;
        verify = yankee[verify];
        verify = offset.bind(tangon)(verify);
        oscard['source'] = verify;
        oscard = option.bind(tangon)(golfie, oscard);
        report[2] = oscard;
        entity['children'] = report;
        entity = zuuluu.bind(tangon)(michal, entity);
        return entity;
    };
    var _closure1_slot11 = entity;
    entity = function() { // Original name: RevenueShareBenefit
        offset = _closure1_slot1;
        yankee = _closure1_slot2;
        entity = 7;
        entity = yankee[entity];
        tangon = undefined;
        entity = offset.bind(tangon)(entity);
        kiloes = entity.bind(tangon)();
        entity = _closure1_slot7;
        verify = entity.bind(tangon)();
        zuuluu = _closure1_slot6;
        michal = _closure1_slot3;
        entity = {};
        golfie = verify.benefitCard;
        report = new Array(2);
        report[0] = golfie;
        golfie = verify.revenueShareContainer;
        report[1] = golfie;
        entity['style'] = report;
        romeon = _closure1_slot5;
        sizing = _closure1_slot0;
        golfie = 8;
        report = yankee[golfie];
        report = sizing.bind(tangon)(report);
        option = report.Text;
        report = {'style': null, 'variant': 'heading-xxl/extrabold', 'color': 'status-positive'};
        backup = verify.revenueShare;
        foxtra = new Array(2);
        foxtra[0] = backup;
        backup = _closure1_slot8;
        backup = backup.bind(tangon)(verify, kiloes);
        foxtra[1] = backup;
        report['style'] = foxtra;
        backup = _closure1_slot4;
        foxtra = '%';
        foxtra = backup + foxtra;
        report['children'] = foxtra;
        option = romeon.bind(tangon)(option, report);
        report = new Array(3);
        report[0] = option;
        romeon = _closure1_slot5;
        golfie = yankee[golfie];
        golfie = sizing.bind(tangon)(golfie);
        option = golfie.Text;
        golfie = {'style': null, 'variant': 'heading-md/medium', 'color': 'header-secondary'};
        foxtra = verify.revenueShareDescription;
        golfie['style'] = foxtra;
        foxtra = 9;
        backup = yankee[foxtra];
        backup = sizing.bind(tangon)(backup);
        kiloes = backup.intl;
        backup = kiloes.string;
        foxtra = yankee[foxtra];
        foxtra = sizing.bind(tangon)(foxtra);
        foxtra = foxtra.t;
        foxtra = foxtra.AewsXF;
        foxtra = backup.bind(kiloes)(foxtra);
        golfie['children'] = foxtra;
        golfie = romeon.bind(tangon)(option, golfie);
        report[1] = golfie;
        option = _closure1_slot5;
        oscard = 10;
        oscard = yankee[oscard];
        golfie = offset.bind(tangon)(oscard);
        oscard = {};
        verify = verify.revenueShareIllo;
        oscard['style'] = verify;
        verify = 18;
        verify = yankee[verify];
        verify = offset.bind(tangon)(verify);
        oscard['source'] = verify;
        oscard = option.bind(tangon)(golfie, oscard);
        report[2] = oscard;
        entity['children'] = report;
        entity = zuuluu.bind(tangon)(michal, entity);
        return entity;
    };
    var _closure1_slot12 = entity;
    entity = function(argFoo) { // Original name: BenefitAvatar
        entity = argFoo;
        verify = entity.avatarSource;
        entity = _closure1_slot7;
        tangon = undefined;
        option = entity.bind(tangon)();
        zuuluu = _closure1_slot5;
        michal = _closure1_slot3;
        entity = {};
        oscard = option.benefitAvatarContainer;
        entity['style'] = oscard;
        golfie = _closure1_slot5;
        oscard = _closure1_slot1;
        offset = _closure1_slot2;
        report = 10;
        report = offset[report];
        oscard = oscard.bind(tangon)(report);
        report = {};
        report['source'] = verify;
        option = option.benefitAvatar;
        report['style'] = option;
        report = golfie.bind(tangon)(oscard, report);
        entity['children'] = report;
        entity = zuuluu.bind(tangon)(michal, entity);
        return entity;
    };
    var _closure1_slot13 = entity;
    entity = global;
    option = entity.Object;
    golfie = option.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(option)(zuuluu, entity, tangon);
    entity = 0;
    golfie = oscard[entity];
    tangon = argCor;
    entity = undefined;
    tangon = tangon.bind(entity)(golfie);
    tangon = 1;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.View;
    var _closure1_slot3 = tangon;
    tangon = 2;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.CREATOR_REVENUE_SHARE_PERCENTAGE;
    var _closure1_slot4 = tangon;
    tangon = 3;
    golfie = oscard[tangon];
    golfie = report.bind(entity)(golfie);
    golfie = golfie.jsx;
    var _closure1_slot5 = golfie;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.jsxs;
    var _closure1_slot6 = tangon;
    tangon = 4;
    tangon = oscard[tangon];
    option = report.bind(entity)(tangon);
    golfie = option.createStyles;
    tangon = {};
    verify = {'flex': 1, 'flexDirection': 'row'};
    tangon['horizontalContainer'] = verify;
    verify = {};
    offset = 20;
    verify['padding'] = offset;
    yankee = 5;
    offset = oscard[yankee];
    offset = romeon.bind(entity)(offset);
    offset = offset.colors;
    offset = offset.BACKGROUND_PRIMARY;
    verify['backgroundColor'] = offset;
    offset = oscard[yankee];
    offset = romeon.bind(entity)(offset);
    offset = offset.radii;
    offset = offset.sm;
    verify['borderRadius'] = offset;
    offset = 'hidden';
    verify['overflow'] = offset;
    tangon['benefitAvatarContainer'] = verify;
    verify = {};
    offset = 6;
    verify['marginVertical'] = offset;
    offset = oscard[yankee];
    offset = romeon.bind(entity)(offset);
    offset = offset.colors;
    offset = offset.BACKGROUND_SECONDARY;
    verify['backgroundColor'] = offset;
    offset = oscard[yankee];
    offset = romeon.bind(entity)(offset);
    offset = offset.radii;
    offset = offset.sm;
    verify['borderRadius'] = offset;
    tangon['benefitCard'] = verify;
    verify = {'width': 40, 'height': 40, 'marginHorizontal': 8, 'borderRadius': 20, 'overflow': 'hidden'};
    tangon['benefitAvatar'] = verify;
    offset = 24;
    verify = {'marginHorizontal': 24, 'marginBottom': 24, 'justifyContent': 'space-between'};
    tangon['benefitAvatars'] = verify;
    verify = {'marginStart': 24, 'marginEnd': 35, 'marginVertical': 24};
    tangon['benefitCardTitle'] = verify;
    verify = {'shadowColor': null, 'shadowOffset': null, 'shadowOpacity': 0.16, 'shadowRadius': 16, 'elevation': 4};
    foxtra = oscard[yankee];
    foxtra = romeon.bind(entity)(foxtra);
    foxtra = foxtra.colors;
    foxtra = foxtra.BLACK;
    verify['shadowColor'] = foxtra;
    foxtra = {'width': 0, 'height': 8};
    verify['shadowOffset'] = foxtra;
    tangon['earningMetricsShadowContainer'] = verify;
    verify = {};
    foxtra = 0.24;
    verify['shadowOpacity'] = foxtra;
    tangon['earningMetricsShadowContainerDarkMode'] = verify;
    verify = {'marginHorizontal': 24, 'marginBottom': 24, 'padding': 16, 'justifyContent': 'space-between', 'alignItems': 'center', 'borderRadius': null, 'overflow': 'hidden'};
    foxtra = oscard[yankee];
    foxtra = romeon.bind(entity)(foxtra);
    foxtra = foxtra.radii;
    foxtra = foxtra.sm;
    verify['borderRadius'] = foxtra;
    tangon['earningMetrics'] = verify;
    verify = {};
    foxtra = '#2E3638';
    verify['backgroundColor'] = foxtra;
    tangon['earningMetricsDarkMode'] = verify;
    verify = {};
    foxtra = oscard[yankee];
    foxtra = romeon.bind(entity)(foxtra);
    foxtra = foxtra.colors;
    foxtra = foxtra.BACKGROUND_PRIMARY;
    verify['backgroundColor'] = foxtra;
    tangon['earningMetricsLightMode'] = verify;
    verify = {};
    foxtra = oscard[yankee];
    foxtra = romeon.bind(entity)(foxtra);
    foxtra = foxtra.unsafe_rawColors;
    foxtra = foxtra.GREEN_230;
    verify['color'] = foxtra;
    tangon['greenTextDarkMode'] = verify;
    verify = {};
    yankee = oscard[yankee];
    yankee = romeon.bind(entity)(yankee);
    yankee = yankee.unsafe_rawColors;
    yankee = yankee.GREEN_400;
    verify['color'] = yankee;
    tangon['greenTextLightMode'] = verify;
    verify = {'width': 54, 'height': 54, 'borderRadius': 27, 'overflow': 'hidden'};
    tangon['earningMetricsAvatar'] = verify;
    verify = {'marginTop': 50, 'marginStart': 16};
    tangon['socialIllo'] = verify;
    verify = {'position': 'absolute', 'bottom': 25, 'end': 0};
    tangon['lanyardIllo'] = verify;
    verify = {'fontSize': 50, 'lineHeight': 52};
    tangon['revenueShare'] = verify;
    verify = {};
    verify['padding'] = offset;
    tangon['revenueShareContainer'] = verify;
    verify = {'marginTop': 15, 'alignSelf': 'flex-end'};
    tangon['revenueShareIllo'] = verify;
    verify = {};
    offset = 120;
    verify['marginEnd'] = offset;
    tangon['revenueShareDescription'] = verify;
    tangon = golfie.bind(option)(tangon);
    var _closure1_slot7 = tangon;
    tangon = 19;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/guild_role_subscriptions/native/guild_settings/welcome/CreatorBenefitsSection.tsx';
    tangon = report.bind(oscard)(tangon);
    michal = function() { // Original name: CreatorBenefitsSection
        tangon = _closure1_slot6;
        zuuluu = _closure1_slot3;
        michal = {};
        option = _closure1_slot5;
        golfie = _closure1_slot10;
        entity = undefined;
        report = {};
        golfie = option.bind(entity)(golfie, report);
        report = new Array(3);
        report[0] = golfie;
        verify = _closure1_slot5;
        option = _closure1_slot11;
        golfie = {};
        golfie = verify.bind(entity)(option, golfie);
        report[1] = golfie;
        option = _closure1_slot5;
        golfie = _closure1_slot12;
        oscard = {};
        oscard = option.bind(entity)(golfie, oscard);
        report[2] = oscard;
        michal['children'] = report;
        entity = tangon.bind(entity)(zuuluu, michal);
        return entity;
    };
    zuuluu['default'] = michal;
    return entity;
})();