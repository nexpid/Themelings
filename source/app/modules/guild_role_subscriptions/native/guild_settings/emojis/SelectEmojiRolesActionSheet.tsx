// app/modules/guild_role_subscriptions/native/guild_settings/emojis/SelectEmojiRolesActionSheet.tsx
export default (function(argFoo, argBar, argBaz, argCorge, _, argFred, argPlugh) {
    report = argBar;
    backup = argBaz;
    zulu = argFred;
    oscar = argPlugh;
    var _closure1_slot0 = report;
    var _closure1_slot1 = backup;
    var _closure1_slot2 = oscar;
    entity = global;
    options = entity.Object;
    golf = options.defineProperty;
    tango = {};
    kilo = true;
    tango['value'] = kilo;
    entity = '__esModule';
    entity = golf.bind(options)(zulu, entity, tango);
    entity = 0;
    tango = oscar[entity];
    entity = undefined;
    tango = backup.bind(entity)(tango);
    var _closure1_slot3 = tango;
    romeo = 1;
    golf = oscar[romeo];
    tango = argCorge;
    tango = tango.bind(entity)(golf);
    var _closure1_slot4 = tango;
    tango = 2;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.View;
    var _closure1_slot5 = tango;
    tango = 3;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    golf = tango.FORM_ROW_VERTICAL_PADDING;
    tango = 4;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    yankee = tango.Fonts;
    tango = 5;
    options = oscar[tango];
    options = report.bind(entity)(options);
    options = options.jsx;
    var _closure1_slot6 = options;
    options = oscar[tango];
    options = report.bind(entity)(options);
    options = options.jsxs;
    var _closure1_slot7 = options;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.Fragment;
    var _closure1_slot8 = tango;
    tango = 22;
    tango = golf + tango;
    var _closure1_slot9 = tango;
    tango = 6;
    tango = oscar[tango];
    options = report.bind(entity)(tango);
    golf = options.createStyles;
    tango = {};
    verify = {};
    verify['flex'] = romeo;
    offset = 7;
    foxtrot = oscar[offset];
    foxtrot = backup.bind(entity)(foxtrot);
    foxtrot = foxtrot.colors;
    foxtrot = foxtrot.BACKGROUND_MOBILE_SECONDARY;
    verify['backgroundColor'] = foxtrot;
    tango['list'] = verify;
    verify = {'flex': 1, 'flexDirection': 'row', 'alignItems': 'center'};
    tango['label'] = verify;
    verify = {};
    verify['flexShrink'] = romeo;
    romeo = 8;
    foxtrot = oscar[romeo];
    result = backup.bind(entity)(foxtrot);
    output = yankee.PRIMARY_MEDIUM;
    foxtrot = oscar[offset];
    foxtrot = backup.bind(entity)(foxtrot);
    foxtrot = foxtrot.colors;
    sizing = foxtrot.INTERACTIVE_ACTIVE;
    foxtrot = 16;
    control = result.bind(entity)(output, sizing, foxtrot);
    vacuum = verify;
    sizing = copyDataProperties(vacuum, control);
    tango['roleName'] = verify;
    verify = {'borderRadius': null, 'backgroundColor': null, 'marginLeft': 8, 'paddingHorizontal': 4, 'height': 16};
    sizing = oscar[offset];
    sizing = backup.bind(entity)(sizing);
    sizing = sizing.radii;
    sizing = sizing.round;
    verify['borderRadius'] = sizing;
    sizing = oscar[offset];
    sizing = backup.bind(entity)(sizing);
    sizing = sizing.unsafe_rawColors;
    sizing = sizing.RED_400;
    verify['backgroundColor'] = sizing;
    tango['archivedBadge'] = verify;
    verify = {};
    sizing = oscar[romeo];
    echo = backup.bind(entity)(sizing);
    result = yankee.PRIMARY_BOLD;
    sizing = oscar[offset];
    sizing = backup.bind(entity)(sizing);
    sizing = sizing.unsafe_rawColors;
    control = sizing.WHITE_500;
    sizing = {};
    sizing['uppercase'] = kilo;
    source = 12;
    sequence = undefined;
    vacuum = result;
    update = sizing;
    control = sequence[echo](vacuum, control, source, update, echo);
    vacuum = verify;
    kilo = copyDataProperties(vacuum, control);
    tango['archivedBadgeText'] = verify;
    verify = {};
    kilo = oscar[offset];
    kilo = backup.bind(entity)(kilo);
    kilo = kilo.colors;
    kilo = kilo.BACKGROUND_MODIFIER_ACCENT;
    verify['backgroundColor'] = kilo;
    tango['divider'] = verify;
    verify = {};
    romeo = oscar[romeo];
    romeo = backup.bind(entity)(romeo);
    yankee = yankee.PRIMARY_SEMIBOLD;
    offset = oscar[offset];
    offset = backup.bind(entity)(offset);
    offset = offset.colors;
    offset = offset.CONTROL_BRAND_FOREGROUND;
    control = romeo.bind(entity)(yankee, offset, foxtrot);
    vacuum = verify;
    offset = copyDataProperties(vacuum, control);
    tango['saveButton'] = verify;
    verify = {};
    offset = 0.3;
    verify['opacity'] = offset;
    tango['saveButtonDisabled'] = verify;
    tango = golf.bind(options)(tango);
    var _closure1_slot10 = tango;
    tango = 18;
    tango = oscar[tango];
    oscar = report.bind(entity)(tango);
    report = oscar.fileFinishedImporting;
    tango = 'modules/guild_role_subscriptions/native/guild_settings/emojis/SelectEmojiRolesActionSheet.tsx';
    tango = report.bind(oscar)(tango);
    mike = function(argFoo) { // Original name: SelectEmojiRolesActionSheet
        _fun127374: for(var _fun127374_ip = 0; ; ) switch(_fun127374_ip) {
 0:
            entity = argFoo;
            oscar = entity.guildId;
            mike = entity.onSave;
            var _closure2_slot0 = mike;
            backup = entity.emoji;
            var _closure2_slot1 = backup;
            report = entity.onCancel;
            entity = _closure1_slot10;
            tango = undefined;
            offset = entity.bind(tango)();
            var _closure2_slot2 = offset;
            zulu = _closure1_slot4;
            mike = zulu.useState;
            entity = function() {
                _fun127375: for(var _fun127375_ip = 0; ; ) switch(_fun127375_ip) {
 0:
                    entity = global;
                    zulu = entity.Set;
                    entity = _closure2_slot1;
                    mike = null;
                    report = mike == entity;
                    entity = undefined;
                    if(report) { _fun127375_ip = 36; continue _fun127375 }
 26:
                    tango = _closure2_slot1;
                    entity = tango.roles;
 36:
                    if(!(mike == entity)) { _fun127375_ip = 44; continue _fun127375 }
 40:
                    entity = new Array(0);
 44:
                    mike = zulu.prototype;
                    mike = Object.create(mike, {constructor: {value: zulu}});
                    golf = mike;
                    oscar = entity;
                    entity = new golf[zulu](oscar, report);
                    entity = entity instanceof Object ? entity : mike;
                    return entity;
                }
            };
            zulu = mike.bind(zulu)(entity);
            mike = _closure1_slot3;
            entity = 2;
            options = mike.bind(tango)(zulu, entity);
            mike = 0;
            entity = options[mike];
            var _closure2_slot3 = entity;
            zulu = 1;
            zulu = options[zulu];
            var _closure2_slot4 = zulu;
            entity = entity.size;
            sizing = entity > mike;
            romeo = _closure1_slot0;
            foxtrot = _closure1_slot2;
            entity = 9;
            entity = foxtrot[entity];
            zulu = romeo.bind(tango)(entity);
            mike = zulu.useSubscriptionListingsForGuild;
            yankee = true;
            entity = {'includeSoftDeleted': true, 'sortDeletedListingsLast': true};
            options = mike.bind(zulu)(oscar, entity);
            var _closure2_slot5 = options;
            zulu = _closure1_slot6;
            entity = 10;
            entity = foxtrot[entity];
            entity = romeo.bind(tango)(entity);
            mike = entity.PressableOpacity;
            entity = {};
            oscar = function() { // Original name: onPress
                zulu = _closure2_slot0;
                mike = global;
                tango = mike.Array;
                mike = tango.from;
                entity = _closure2_slot3;
                mike = mike.bind(tango)(entity);
                entity = undefined;
                mike = zulu.bind(entity)(mike);
                return entity;
            };
            entity['onPress'] = oscar;
            kilo = !sizing;
            entity['disabled'] = kilo;
            oscar = 'button';
            entity['accessibilityRole'] = oscar;
            oscar = 11;
            oscar = foxtrot[oscar];
            oscar = romeo.bind(tango)(oscar);
            romeo = oscar.LegacyText;
            oscar = {};
            output = offset.saveButton;
            foxtrot = new Array(2);
            foxtrot[0] = output;
            if(sizing) { _fun127374_ip = 262; continue _fun127374 }
 256:
            kilo = offset.saveButtonDisabled;
 262:
            foxtrot[1] = kilo;
            oscar['style'] = foxtrot;
            foxtrot = null;
            if(!(foxtrot != backup)) { _fun127374_ip = 333; continue _fun127374 }
 276:
            sizing = _closure1_slot0;
            output = _closure1_slot2;
            foxtrot = 12;
            backup = output[foxtrot];
            backup = sizing.bind(tango)(backup);
            kilo = backup.intl;
            backup = kilo.string;
            foxtrot = output[foxtrot];
            foxtrot = sizing.bind(tango)(foxtrot);
            foxtrot = foxtrot.t;
            foxtrot = foxtrot.R3BPHx;
            foxtrot = backup.bind(kilo)(foxtrot);
            _fun127374_ip = 388; continue _fun127374;
 333:
            output = _closure1_slot0;
            result = _closure1_slot2;
            backup = 12;
            kilo = result[backup];
            kilo = output.bind(tango)(kilo);
            sizing = kilo.intl;
            kilo = sizing.string;
            backup = result[backup];
            backup = output.bind(tango)(backup);
            backup = backup.t;
            backup = backup.3UB9aW;
            foxtrot = kilo.bind(sizing)(backup);
 388:
            oscar['children'] = foxtrot;
            oscar = zulu.bind(tango)(romeo, oscar);
            entity['children'] = oscar;
            foxtrot = zulu.bind(tango)(mike, entity);
            zulu = _closure1_slot6;
            mike = _closure1_slot0;
            romeo = _closure1_slot2;
            entity = 13;
            entity = romeo[entity];
            entity = mike.bind(tango)(entity);
            oscar = entity.BottomSheetTitleHeader;
            entity = {};
            backup = 12;
            kilo = romeo[backup];
            kilo = mike.bind(tango)(kilo);
            output = kilo.intl;
            sizing = output.string;
            kilo = romeo[backup];
            kilo = mike.bind(tango)(kilo);
            kilo = kilo.t;
            kilo = kilo.JPU0EB;
            kilo = sizing.bind(output)(kilo);
            entity['title'] = kilo;
            kilo = romeo[backup];
            kilo = mike.bind(tango)(kilo);
            sizing = kilo.intl;
            kilo = sizing.string;
            backup = romeo[backup];
            backup = mike.bind(tango)(backup);
            backup = backup.t;
            backup = backup.MZusPj;
            backup = kilo.bind(sizing)(backup);
            entity['subtitle'] = backup;
            entity['trailing'] = foxtrot;
            oscar = zulu.bind(tango)(oscar, entity);
            entity = 14;
            entity = romeo[entity];
            entity = mike.bind(tango)(entity);
            mike = entity.ActionSheet;
            entity = {'scrollable': true, 'header': null, 'startExpanded': true};
            entity['header'] = oscar;
            entity['onDismiss'] = report;
            oscar = _closure1_slot1;
            report = 15;
            report = romeo[report];
            oscar = oscar.bind(tango)(report);
            report = {};
            report['inActionSheet'] = yankee;
            offset = offset.list;
            report['style'] = offset;
            verify = _closure1_slot9;
            report['itemSize'] = verify;
            verify = options.length;
            options = new Array(1);
            options[0] = verify;
            report['sections'] = options;
            golf = function(argFoo, argBar) { // Original name: renderItem
                _fun127377: for(var _fun127377_ip = 0; ; ) switch(_fun127377_ip) {
 0:
                    mike = argBar;
                    entity = _closure2_slot5;
                    kilo = entity[mike];
                    var _closure3_slot0 = kilo;
                    zulu = entity.length;
                    entity = 1;
                    entity = zulu - entity;
                    options = mike === entity;
                    tango = _closure1_slot7;
                    zulu = _closure1_slot8;
                    mike = {};
                    verify = _closure1_slot6;
                    output = _closure1_slot0;
                    sizing = _closure1_slot2;
                    yankee = 16;
                    report = sizing[yankee];
                    entity = undefined;
                    report = output.bind(entity)(report);
                    oscar = report.FormRow;
                    report = {};
                    backup = _closure1_slot5;
                    foxtrot = {};
                    result = _closure2_slot2;
                    echo = result.label;
                    foxtrot['style'] = echo;
                    source = 17;
                    sizing = sizing[source];
                    sizing = output.bind(entity)(sizing);
                    output = sizing.Text;
                    sizing = {'style': null, 'lineClamp': 1, 'variant': 'text-md/medium', 'color': 'interactive-active'};
                    result = result.roleName;
                    sizing['style'] = result;
                    result = kilo.name;
                    sizing['children'] = result;
                    output = verify.bind(entity)(output, sizing);
                    sizing = new Array(2);
                    sizing[0] = output;
                    output = kilo.archived;
                    if(!output) { _fun127377_ip = 315; continue _fun127377 }
 180:
                    update = _closure1_slot6;
                    echo = _closure1_slot5;
                    result = {};
                    vacuum = _closure2_slot2;
                    control = vacuum.archivedBadge;
                    result['style'] = control;
                    record = _closure1_slot0;
                    context = _closure1_slot2;
                    source = context[source];
                    source = record.bind(entity)(source);
                    control = source.Text;
                    source = {'style': null, 'variant': 'text-xs/bold', 'color': 'always-white'};
                    vacuum = vacuum.archivedBadgeText;
                    source['style'] = vacuum;
                    vacuum = 12;
                    sequence = context[vacuum];
                    sequence = record.bind(entity)(sequence);
                    config = sequence.intl;
                    sequence = config.string;
                    vacuum = context[vacuum];
                    vacuum = record.bind(entity)(vacuum);
                    vacuum = vacuum.t;
                    vacuum = vacuum.HRtfn5;
                    vacuum = sequence.bind(config)(vacuum);
                    source['children'] = vacuum;
                    source = update.bind(entity)(control, source);
                    result['children'] = source;
                    output = update.bind(entity)(echo, result);
 315:
                    sizing[1] = output;
                    foxtrot['children'] = sizing;
                    foxtrot = tango.bind(entity)(backup, foxtrot);
                    report['label'] = foxtrot;
                    romeo = function() { // Original name: onPress
                        mike = _closure3_slot0;
                        mike = mike.role_id;
                        var _closure4_slot0 = mike;
                        zulu = _closure2_slot4;
                        mike = undefined;
                        entity = function(argFoo) {
                            _fun127379: for(var _fun127379_ip = 0; ; ) switch(_fun127379_ip) {
 0:
                                report = argFoo;
                                entity = global;
                                entity = entity.Set;
                                mike = entity.prototype;
                                mike = Object.create(mike, {constructor: {value: entity}});
                                golf = mike;
                                oscar = report;
                                entity = new golf[entity](oscar, report);
                                entity = entity instanceof Object ? entity : mike;
                                tango = report.has;
                                zulu = _closure4_slot0;
                                zulu = tango.bind(report)(zulu);
                                if(zulu) { _fun127379_ip = 70; continue _fun127379 }
 54:
                                tango = entity.add;
                                zulu = _closure4_slot0;
                                zulu = tango.bind(entity)(zulu);
                                _fun127379_ip = 84; continue _fun127379;
 70:
                                zulu = entity.delete;
                                mike = _closure4_slot0;
                                mike = zulu.bind(entity)(mike);
 84:
                                return entity;
                            }
                        };
                        entity = zulu.bind(mike)(entity);
                        return entity;
                    };
                    report['onPress'] = romeo;
                    backup = _closure1_slot6;
                    foxtrot = _closure1_slot0;
                    romeo = _closure1_slot2;
                    romeo = romeo[yankee];
                    romeo = foxtrot.bind(entity)(romeo);
                    romeo = romeo.FormRow;
                    foxtrot = romeo.Checkbox;
                    romeo = {};
                    output = _closure2_slot3;
                    sizing = output.has;
                    kilo = kilo.role_id;
                    kilo = sizing.bind(output)(kilo);
                    romeo['selected'] = kilo;
                    romeo = backup.bind(entity)(foxtrot, romeo);
                    report['trailing'] = romeo;
                    oscar = verify.bind(entity)(oscar, report);
                    report = new Array(2);
                    report[0] = oscar;
                    oscar = !options;
                    if(options) { _fun127377_ip = 484; continue _fun127377 }
 435:
                    verify = _closure1_slot6;
                    options = _closure1_slot0;
                    golf = _closure1_slot2;
                    golf = golf[yankee];
                    golf = options.bind(entity)(golf);
                    options = golf.FormDivider;
                    golf = {};
                    offset = _closure2_slot2;
                    offset = offset.divider;
                    golf['style'] = offset;
                    oscar = verify.bind(entity)(options, golf);
 484:
                    report[1] = oscar;
                    mike['children'] = report;
                    entity = tango.bind(entity)(zulu, mike);
                    return entity;
                }
            };
            report['renderItem'] = golf;
            report = zulu.bind(tango)(oscar, report);
            entity['children'] = report;
            entity = zulu.bind(tango)(mike, entity);
            return entity;
        }
    };
    zulu['default'] = mike;
    return entity;
})();