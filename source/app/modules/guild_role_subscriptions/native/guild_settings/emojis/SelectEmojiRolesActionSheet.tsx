// app/modules/guild_role_subscriptions/native/guild_settings/emojis/SelectEmojiRolesActionSheet.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    report = argBar;
    backup = argBaz;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    var _closure1_slot1 = backup;
    var _closure1_slot2 = oscard;
    entity = global;
    option = entity.Object;
    golfie = option.defineProperty;
    tangon = {};
    kiloes = true;
    tangon['value'] = kiloes;
    entity = '__esModule';
    entity = golfie.bind(option)(zuuluu, entity, tangon);
    entity = 0;
    tangon = oscard[entity];
    entity = undefined;
    tangon = backup.bind(entity)(tangon);
    var _closure1_slot3 = tangon;
    romeon = 1;
    golfie = oscard[romeon];
    tangon = argCor;
    tangon = tangon.bind(entity)(golfie);
    var _closure1_slot4 = tangon;
    tangon = 2;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.View;
    var _closure1_slot5 = tangon;
    tangon = 3;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    golfie = tangon.FORM_ROW_VERTICAL_PADDING;
    tangon = 4;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    yankee = tangon.Fonts;
    tangon = 5;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    option = tangon.jsx;
    var _closure1_slot6 = option;
    option = tangon.jsxs;
    var _closure1_slot7 = option;
    tangon = tangon.Fragment;
    var _closure1_slot8 = tangon;
    tangon = 22;
    tangon = golfie + tangon;
    var _closure1_slot9 = tangon;
    tangon = 6;
    tangon = oscard[tangon];
    option = report.bind(entity)(tangon);
    golfie = option.createStyles;
    tangon = {};
    verify = {};
    verify['flex'] = romeon;
    offset = 7;
    foxtra = oscard[offset];
    foxtra = backup.bind(entity)(foxtra);
    foxtra = foxtra.colors;
    foxtra = foxtra.BACKGROUND_MOBILE_SECONDARY;
    verify['backgroundColor'] = foxtra;
    tangon['list'] = verify;
    verify = {'flex': 1, 'flexDirection': 'row', 'alignItems': 'center'};
    tangon['label'] = verify;
    verify = {};
    verify['flexShrink'] = romeon;
    romeon = 8;
    foxtra = oscard[romeon];
    result = backup.bind(entity)(foxtra);
    output = yankee.PRIMARY_MEDIUM;
    foxtra = oscard[offset];
    foxtra = backup.bind(entity)(foxtra);
    foxtra = foxtra.colors;
    sizing = foxtra.INTERACTIVE_ACTIVE;
    foxtra = 16;
    ctrled = result.bind(entity)(output, sizing, foxtra);
    vacuum = verify;
    sizing = copyDataProperties(vacuum, ctrled);
    tangon['roleName'] = verify;
    verify = {'borderRadius': null, 'backgroundColor': null, 'marginLeft': 8, 'paddingHorizontal': 4, 'height': 16};
    sizing = oscard[offset];
    sizing = backup.bind(entity)(sizing);
    sizing = sizing.radii;
    sizing = sizing.round;
    verify['borderRadius'] = sizing;
    sizing = oscard[offset];
    sizing = backup.bind(entity)(sizing);
    sizing = sizing.unsafe_rawColors;
    sizing = sizing.RED_400;
    verify['backgroundColor'] = sizing;
    tangon['archivedBadge'] = verify;
    verify = {};
    sizing = oscard[romeon];
    echoed = backup.bind(entity)(sizing);
    result = yankee.PRIMARY_BOLD;
    sizing = oscard[offset];
    sizing = backup.bind(entity)(sizing);
    sizing = sizing.unsafe_rawColors;
    ctrled = sizing.WHITE_500;
    sizing = {};
    sizing['uppercase'] = kiloes;
    source = 12;
    sequen = undefined;
    vacuum = result;
    update = sizing;
    ctrled = sequen[echoed](vacuum, ctrled, source, update, echoed);
    vacuum = verify;
    kiloes = copyDataProperties(vacuum, ctrled);
    tangon['archivedBadgeText'] = verify;
    verify = {};
    kiloes = oscard[offset];
    kiloes = backup.bind(entity)(kiloes);
    kiloes = kiloes.colors;
    kiloes = kiloes.BACKGROUND_MODIFIER_ACCENT;
    verify['backgroundColor'] = kiloes;
    tangon['divider'] = verify;
    verify = {};
    romeon = oscard[romeon];
    romeon = backup.bind(entity)(romeon);
    yankee = yankee.PRIMARY_SEMIBOLD;
    offset = oscard[offset];
    offset = backup.bind(entity)(offset);
    offset = offset.colors;
    offset = offset.CONTROL_BRAND_FOREGROUND;
    ctrled = romeon.bind(entity)(yankee, offset, foxtra);
    vacuum = verify;
    offset = copyDataProperties(vacuum, ctrled);
    tangon['saveButton'] = verify;
    verify = {};
    offset = 0.3;
    verify['opacity'] = offset;
    tangon['saveButtonDisabled'] = verify;
    tangon = golfie.bind(option)(tangon);
    var _closure1_slot10 = tangon;
    tangon = 18;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/guild_role_subscriptions/native/guild_settings/emojis/SelectEmojiRolesActionSheet.tsx';
    tangon = report.bind(oscard)(tangon);
    michal = function(argFoo) { // Original name: SelectEmojiRolesActionSheet
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            entity = argFoo;
            oscard = entity.guildId;
            michal = entity.onSave;
            var _closure2_slot0 = michal;
            backup = entity.emoji;
            var _closure2_slot1 = backup;
            report = entity.onCancel;
            entity = _closure1_slot10;
            tangon = undefined;
            offset = entity.bind(tangon)();
            var _closure2_slot2 = offset;
            zuuluu = _closure1_slot4;
            michal = zuuluu.useState;
            entity = function() {
                _fun00003: for(var _fun00004_ip = 0; ; ) switch(_fun00004_ip) {
 0:
                    entity = global;
                    zuuluu = entity.Set;
                    entity = _closure2_slot1;
                    michal = null;
                    report = michal == entity;
                    entity = undefined;
                    if(report) { _fun00004_ip = 36; continue _fun00003 }
 26:
                    tangon = _closure2_slot1;
                    entity = tangon.roles;
 36:
                    if(!(michal == entity)) { _fun00004_ip = 44; continue _fun00003 }
 40:
                    entity = new Array(0);
 44:
                    michal = zuuluu.prototype;
                    michal = Object.create(michal, {constructor: {value: zuuluu}});
                    golfie = michal;
                    oscard = entity;
                    entity = new golfie[zuuluu](oscard, report);
                    entity = entity instanceof Object ? entity : michal;
                    return entity;
                }
            };
            zuuluu = michal.bind(zuuluu)(entity);
            michal = _closure1_slot3;
            entity = 2;
            option = michal.bind(tangon)(zuuluu, entity);
            michal = 0;
            entity = option[michal];
            var _closure2_slot3 = entity;
            zuuluu = 1;
            zuuluu = option[zuuluu];
            var _closure2_slot4 = zuuluu;
            entity = entity.size;
            sizing = entity > michal;
            romeon = _closure1_slot0;
            foxtra = _closure1_slot2;
            entity = 9;
            entity = foxtra[entity];
            zuuluu = romeon.bind(tangon)(entity);
            michal = zuuluu.useSubscriptionListingsForGuild;
            yankee = true;
            entity = {'includeSoftDeleted': true, 'sortDeletedListingsLast': true};
            option = michal.bind(zuuluu)(oscard, entity);
            var _closure2_slot5 = option;
            zuuluu = _closure1_slot6;
            entity = 10;
            entity = foxtra[entity];
            entity = romeon.bind(tangon)(entity);
            michal = entity.PressableOpacity;
            entity = {};
            oscard = function() { // Original name: onPress
                zuuluu = _closure2_slot0;
                michal = global;
                tangon = michal.Array;
                michal = tangon.from;
                entity = _closure2_slot3;
                michal = michal.bind(tangon)(entity);
                entity = undefined;
                michal = zuuluu.bind(entity)(michal);
                return entity;
            };
            entity['onPress'] = oscard;
            kiloes = !sizing;
            entity['disabled'] = kiloes;
            oscard = 'button';
            entity['accessibilityRole'] = oscard;
            oscard = 11;
            oscard = foxtra[oscard];
            oscard = romeon.bind(tangon)(oscard);
            romeon = oscard.LegacyText;
            oscard = {};
            output = offset.saveButton;
            foxtra = new Array(2);
            foxtra[0] = output;
            if(sizing) { _fun00002_ip = 258; continue _fun00001 }
 252:
            kiloes = offset.saveButtonDisabled;
 258:
            foxtra[1] = kiloes;
            oscard['style'] = foxtra;
            foxtra = null;
            if(!(foxtra != backup)) { _fun00002_ip = 329; continue _fun00001 }
 272:
            sizing = _closure1_slot0;
            output = _closure1_slot2;
            foxtra = 12;
            backup = output[foxtra];
            backup = sizing.bind(tangon)(backup);
            kiloes = backup.intl;
            backup = kiloes.string;
            foxtra = output[foxtra];
            foxtra = sizing.bind(tangon)(foxtra);
            foxtra = foxtra.t;
            foxtra = foxtra.R3BPHx;
            foxtra = backup.bind(kiloes)(foxtra);
            _fun00002_ip = 384; continue _fun00001;
 329:
            output = _closure1_slot0;
            result = _closure1_slot2;
            backup = 12;
            kiloes = result[backup];
            kiloes = output.bind(tangon)(kiloes);
            sizing = kiloes.intl;
            kiloes = sizing.string;
            backup = result[backup];
            backup = output.bind(tangon)(backup);
            backup = backup.t;
            backup = backup.3UB9aW;
            foxtra = kiloes.bind(sizing)(backup);
 384:
            oscard['children'] = foxtra;
            oscard = zuuluu.bind(tangon)(romeon, oscard);
            entity['children'] = oscard;
            foxtra = zuuluu.bind(tangon)(michal, entity);
            zuuluu = _closure1_slot6;
            michal = _closure1_slot0;
            romeon = _closure1_slot2;
            entity = 13;
            entity = romeon[entity];
            entity = michal.bind(tangon)(entity);
            oscard = entity.BottomSheetTitleHeader;
            entity = {};
            backup = 12;
            kiloes = romeon[backup];
            kiloes = michal.bind(tangon)(kiloes);
            output = kiloes.intl;
            sizing = output.string;
            kiloes = romeon[backup];
            kiloes = michal.bind(tangon)(kiloes);
            kiloes = kiloes.t;
            kiloes = kiloes.JPU0EB;
            kiloes = sizing.bind(output)(kiloes);
            entity['title'] = kiloes;
            kiloes = romeon[backup];
            kiloes = michal.bind(tangon)(kiloes);
            sizing = kiloes.intl;
            kiloes = sizing.string;
            backup = romeon[backup];
            backup = michal.bind(tangon)(backup);
            backup = backup.t;
            backup = backup.MZusPj;
            backup = kiloes.bind(sizing)(backup);
            entity['subtitle'] = backup;
            entity['trailing'] = foxtra;
            oscard = zuuluu.bind(tangon)(oscard, entity);
            entity = 14;
            entity = romeon[entity];
            entity = michal.bind(tangon)(entity);
            michal = entity.ActionSheet;
            entity = {'scrollable': true, 'header': null, 'startExpanded': true};
            entity['header'] = oscard;
            entity['onDismiss'] = report;
            oscard = _closure1_slot1;
            report = 15;
            report = romeon[report];
            oscard = oscard.bind(tangon)(report);
            report = {};
            report['inActionSheet'] = yankee;
            offset = offset.list;
            report['style'] = offset;
            verify = _closure1_slot9;
            report['itemSize'] = verify;
            verify = option.length;
            option = new Array(1);
            option[0] = verify;
            report['sections'] = option;
            golfie = function(argFoo, argBar) { // Original name: renderItem
                _fun00005: for(var _fun00006_ip = 0; ; ) switch(_fun00006_ip) {
 0:
                    michal = argBar;
                    entity = _closure2_slot5;
                    kiloes = entity[michal];
                    var _closure3_slot0 = kiloes;
                    zuuluu = entity.length;
                    entity = 1;
                    entity = zuuluu - entity;
                    option = michal === entity;
                    tangon = _closure1_slot7;
                    zuuluu = _closure1_slot8;
                    michal = {};
                    verify = _closure1_slot6;
                    output = _closure1_slot0;
                    sizing = _closure1_slot2;
                    yankee = 16;
                    report = sizing[yankee];
                    entity = undefined;
                    report = output.bind(entity)(report);
                    oscard = report.FormRow;
                    report = {};
                    backup = _closure1_slot5;
                    foxtra = {};
                    result = _closure2_slot2;
                    echoed = result.label;
                    foxtra['style'] = echoed;
                    source = 17;
                    sizing = sizing[source];
                    sizing = output.bind(entity)(sizing);
                    output = sizing.Text;
                    sizing = {'style': null, 'lineClamp': 1, 'variant': 'text-md/medium', 'color': 'interactive-active'};
                    result = result.roleName;
                    sizing['style'] = result;
                    result = kiloes.name;
                    sizing['children'] = result;
                    output = verify.bind(entity)(output, sizing);
                    sizing = new Array(2);
                    sizing[0] = output;
                    output = kiloes.archived;
                    if(!output) { _fun00006_ip = 321; continue _fun00005 }
 180:
                    update = _closure1_slot6;
                    echoed = _closure1_slot5;
                    result = {};
                    vacuum = _closure2_slot2;
                    ctrled = vacuum.archivedBadge;
                    result['style'] = ctrled;
                    record = _closure1_slot0;
                    cntext = _closure1_slot2;
                    source = cntext[source];
                    source = record.bind(entity)(source);
                    ctrled = source.Text;
                    source = {'style': null, 'variant': 'text-xs/bold', 'color': 'always-white'};
                    vacuum = vacuum.archivedBadgeText;
                    source['style'] = vacuum;
                    vacuum = 12;
                    sequen = cntext[vacuum];
                    sequen = record.bind(entity)(sequen);
                    config = sequen.intl;
                    sequen = config.string;
                    vacuum = cntext[vacuum];
                    vacuum = record.bind(entity)(vacuum);
                    vacuum = vacuum.t;
                    vacuum = vacuum.HRtfn5;
                    vacuum = sequen.bind(config)(vacuum);
                    source['children'] = vacuum;
                    source = update.bind(entity)(ctrled, source);
                    result['children'] = source;
                    output = update.bind(entity)(echoed, result);
 321:
                    sizing[1] = output;
                    foxtra['children'] = sizing;
                    foxtra = tangon.bind(entity)(backup, foxtra);
                    report['label'] = foxtra;
                    romeon = function() { // Original name: onPress
                        michal = _closure3_slot0;
                        michal = michal.role_id;
                        var _closure4_slot0 = michal;
                        zuuluu = _closure2_slot4;
                        michal = undefined;
                        entity = function(argFoo) {
                            _fun00007: for(var _fun00008_ip = 0; ; ) switch(_fun00008_ip) {
 0:
                                report = argFoo;
                                entity = global;
                                entity = entity.Set;
                                michal = entity.prototype;
                                michal = Object.create(michal, {constructor: {value: entity}});
                                golfie = michal;
                                oscard = report;
                                entity = new golfie[entity](oscard, report);
                                entity = entity instanceof Object ? entity : michal;
                                tangon = report.has;
                                zuuluu = _closure4_slot0;
                                zuuluu = tangon.bind(report)(zuuluu);
                                if(zuuluu) { _fun00008_ip = 70; continue _fun00007 }
 54:
                                tangon = entity.add;
                                zuuluu = _closure4_slot0;
                                zuuluu = tangon.bind(entity)(zuuluu);
                                _fun00008_ip = 84; continue _fun00007;
 70:
                                zuuluu = entity.delete;
                                michal = _closure4_slot0;
                                michal = zuuluu.bind(entity)(michal);
 84:
                                return entity;
                            }
                        };
                        entity = zuuluu.bind(michal)(entity);
                        return entity;
                    };
                    report['onPress'] = romeon;
                    backup = _closure1_slot6;
                    foxtra = _closure1_slot0;
                    romeon = _closure1_slot2;
                    romeon = romeon[yankee];
                    romeon = foxtra.bind(entity)(romeon);
                    romeon = romeon.FormRow;
                    foxtra = romeon.Checkbox;
                    romeon = {};
                    output = _closure2_slot3;
                    sizing = output.has;
                    kiloes = kiloes.role_id;
                    kiloes = sizing.bind(output)(kiloes);
                    romeon['selected'] = kiloes;
                    romeon = backup.bind(entity)(foxtra, romeon);
                    report['trailing'] = romeon;
                    oscard = verify.bind(entity)(oscard, report);
                    report = new Array(2);
                    report[0] = oscard;
                    oscard = !option;
                    if(option) { _fun00006_ip = 490; continue _fun00005 }
 441:
                    verify = _closure1_slot6;
                    option = _closure1_slot0;
                    golfie = _closure1_slot2;
                    golfie = golfie[yankee];
                    golfie = option.bind(entity)(golfie);
                    option = golfie.FormDivider;
                    golfie = {};
                    offset = _closure2_slot2;
                    offset = offset.divider;
                    golfie['style'] = offset;
                    oscard = verify.bind(entity)(option, golfie);
 490:
                    report[1] = oscard;
                    michal['children'] = report;
                    entity = tangon.bind(entity)(zuuluu, michal);
                    return entity;
                }
            };
            report['renderItem'] = golfie;
            report = zuuluu.bind(tangon)(oscard, report);
            entity['children'] = report;
            entity = zuuluu.bind(tangon)(michal, entity);
            return entity;
        }
    };
    zuuluu['default'] = michal;
    return entity;
})();