// app/modules/guild_role_subscriptions/native/guild_settings/emojis/GuildSettingsRoleSubscriptionEmojis.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    report = argBar;
    golfie = argBaz;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    var _closure1_slot1 = golfie;
    var _closure1_slot2 = oscard;
    entity = function(argFoo) { // Original name: GuildSettingsRoleSubscriptionEmojisInner
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            entity = argFoo;
            entity = entity.guildId;
            var _closure2_slot0 = entity;
            michal = _closure1_slot0;
            zuuluu = _closure1_slot2;
            entity = 8;
            entity = zuuluu[entity];
            report = undefined;
            tangon = michal.bind(report)(entity);
            entity = tangon.useRoleSubscriptionSettingsDisabled;
            oscard = entity.bind(tangon)();
            entity = 9;
            entity = zuuluu[entity];
            tangon = michal.bind(report)(entity);
            zuuluu = tangon.useStateFromStores;
            entity = _closure1_slot3;
            michal = new Array(1);
            michal[0] = entity;
            entity = function() {
                zuuluu = _closure1_slot3;
                michal = zuuluu.getGuild;
                entity = _closure2_slot0;
                entity = michal.bind(zuuluu)(entity);
                return entity;
            };
            offset = zuuluu.bind(tangon)(michal, entity);
            var _closure2_slot1 = offset;
            entity = null;
            if(!(entity != offset)) { _fun00002_ip = 258; continue _fun00001 }
 104:
            zuuluu = _closure1_slot0;
            yankee = _closure1_slot2;
            michal = 7;
            tangon = yankee[michal];
            tangon = zuuluu.bind(report)(tangon);
            romeon = tangon.intl;
            verify = romeon.formatToPlainString;
            michal = yankee[michal];
            michal = zuuluu.bind(report)(michal);
            michal = michal.t;
            tangon = michal.H9Jxp6;
            michal = {};
            backup = _closure1_slot1;
            foxtra = 6;
            foxtra = yankee[foxtra];
            foxtra = backup.bind(report)(foxtra);
            foxtra = foxtra.bind(report)(offset);
            michal['maxSlots'] = foxtra;
            verify = verify.bind(romeon)(tangon, michal);
            tangon = _closure1_slot4;
            michal = 5;
            michal = yankee[michal];
            michal = zuuluu.bind(report)(michal);
            zuuluu = michal.ManageEmojisModal;
            michal = {};
            michal['guild'] = offset;
            michal['headerDescription'] = verify;
            option = _closure1_slot5;
            michal['computeEmojiItems'] = option;
            golfie = function(argFoo) { // Original name: onSelectRolesForEmoji
                michal = argFoo;
                var _closure3_slot0 = michal;
                michal = global;
                zuuluu = michal.Promise;
                michal = zuuluu.prototype;
                michal = Object.create(michal, {constructor: {value: zuuluu}});
                tangon = function(argFoo, argBar) {
                    entity = argFoo;
                    var _closure4_slot0 = entity;
                    entity = argBar;
                    var _closure4_slot1 = entity;
                    report = _closure1_slot1;
                    michal = _closure1_slot2;
                    entity = 10;
                    tangon = michal[entity];
                    entity = undefined;
                    oscard = report.bind(entity)(tangon);
                    report = oscard.openLazy;
                    tangon = _closure1_slot0;
                    zuuluu = 12;
                    zuuluu = michal[zuuluu];
                    tangon = tangon.bind(entity)(zuuluu);
                    zuuluu = 11;
                    zuuluu = michal[zuuluu];
                    michal = michal.paths;
                    tangon = tangon.bind(entity)(zuuluu, michal);
                    option = _closure2_slot1;
                    verify = option.id;
                    michal = global;
                    michal = michal.HermesInternal;
                    zuuluu = michal.concat;
                    michal = 'role-subscription-emoji-';
                    zuuluu = zuuluu.bind(michal)(verify);
                    michal = {};
                    option = option.id;
                    michal['guildId'] = option;
                    option = _closure3_slot0;
                    michal['emoji'] = option;
                    option = function(argFoo) { // Original name: onSave
                        zuuluu = _closure1_slot1;
                        michal = _closure1_slot2;
                        entity = 10;
                        michal = michal[entity];
                        entity = undefined;
                        zuuluu = zuuluu.bind(entity)(michal);
                        michal = zuuluu.hideActionSheet;
                        michal = michal.bind(zuuluu)();
                        zuuluu = _closure4_slot0;
                        michal = argFoo;
                        michal = zuuluu.bind(entity)(michal);
                        return entity;
                    };
                    michal['onSave'] = option;
                    golfie = function() { // Original name: onCancel
                        zuuluu = _closure1_slot1;
                        michal = _closure1_slot2;
                        entity = 10;
                        michal = michal[entity];
                        entity = undefined;
                        zuuluu = zuuluu.bind(entity)(michal);
                        michal = zuuluu.hideActionSheet;
                        michal = michal.bind(zuuluu)();
                        zuuluu = _closure4_slot1;
                        michal = global;
                        report = michal.Error;
                        michal = report.prototype;
                        tangon = Object.create(michal, {constructor: {value: report}});
                        oscard = 'User cancelled';
                        golfie = tangon;
                        michal = new golfie[report](oscard, report);
                        michal = michal instanceof Object ? michal : tangon;
                        michal = zuuluu.bind(entity)(michal);
                        return entity;
                    };
                    michal['onCancel'] = golfie;
                    michal = report.bind(oscard)(tangon, zuuluu, michal);
                    return entity;
                };
                report = michal;
                entity = new report[zuuluu](tangon, zuuluu);
                entity = entity instanceof Object ? entity : michal;
                return entity;
            };
            michal['onSelectRolesForEmoji'] = golfie;
            michal['disabled'] = oscard;
            michal = tangon.bind(report)(zuuluu, michal);
            return michal;
 258:
            return entity;
        }
    };
    var _closure1_slot6 = entity;
    entity = global;
    verify = entity.Object;
    option = verify.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = option.bind(verify)(zuuluu, entity, tangon);
    entity = 0;
    option = oscard[entity];
    tangon = argCor;
    entity = undefined;
    tangon = tangon.bind(entity)(option);
    tangon = 1;
    tangon = oscard[tangon];
    tangon = golfie.bind(entity)(tangon);
    var _closure1_slot3 = tangon;
    tangon = 2;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.jsx;
    var _closure1_slot4 = tangon;
    tangon = 3;
    tangon = oscard[tangon];
    option = golfie.bind(entity)(tangon);
    golfie = option.memoize;
    tangon = function(argFoo, argBar) {
        _fun00003: for(var _fun00004_ip = 0; ; ) switch(_fun00004_ip) {
 0:
            zuuluu = argFoo;
            tangon = argBar;
            var _closure2_slot0 = tangon;
            michal = zuuluu.filter;
            entity = function(argFoo) {
                zuuluu = _closure1_slot0;
                michal = _closure1_slot2;
                entity = 4;
                michal = michal[entity];
                entity = undefined;
                tangon = zuuluu.bind(entity)(michal);
                zuuluu = tangon.isRoleSubscriptionEmoji;
                entity = _closure2_slot0;
                michal = entity.id;
                entity = argFoo;
                entity = zuuluu.bind(tangon)(entity, michal);
                return entity;
            };
            oscard = michal.bind(zuuluu)(entity);
            michal = oscard.length;
            entity = 0;
            if(!(entity !== michal)) { _fun00004_ip = 212; continue _fun00003 }
 43:
            report = oscard.map;
            verify = _closure1_slot0;
            offset = _closure1_slot2;
            entity = 5;
            zuuluu = offset[entity];
            option = undefined;
            zuuluu = verify.bind(option)(zuuluu);
            zuuluu = zuuluu.computeEmojiItem;
            report = report.bind(oscard)(zuuluu);
            zuuluu = report.reverse;
            zuuluu = zuuluu.bind(report)();
            report = _closure1_slot1;
            michal = 6;
            michal = offset[michal];
            michal = report.bind(option)(michal);
            oscard = michal.bind(option)(tangon);
            entity = offset[entity];
            report = verify.bind(option)(entity);
            tangon = report.computeSectionItem;
            entity = 7;
            michal = offset[entity];
            michal = verify.bind(option)(michal);
            golfie = michal.intl;
            michal = golfie.string;
            entity = offset[entity];
            entity = verify.bind(option)(entity);
            entity = entity.t;
            entity = entity.sMOuub;
            michal = michal.bind(golfie)(entity);
            entity = zuuluu.length;
            michal = tangon.bind(report)(michal, entity, oscard);
            entity = new Array(1);
            entity[0] = michal;
            yankee = 1;
            foxtra = entity;
            romeon = zuuluu;
            michal = arraySpread(foxtra, romeon, yankee);
            return entity;
 212:
            entity = new Array(0);
            return entity;
        }
    };
    tangon = golfie.bind(option)(tangon);
    var _closure1_slot5 = tangon;
    tangon = 14;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/guild_role_subscriptions/native/guild_settings/emojis/GuildSettingsRoleSubscriptionEmojis.tsx';
    tangon = report.bind(oscard)(tangon);
    michal = function(argFoo) { // Original name: GuildSettingsRoleSubscriptionEmojis
        entity = argFoo;
        option = entity.guildId;
        tangon = _closure1_slot4;
        michal = _closure1_slot1;
        zuuluu = _closure1_slot2;
        entity = 13;
        entity = zuuluu[entity];
        zuuluu = undefined;
        michal = michal.bind(zuuluu)(entity);
        entity = {};
        entity['guildId'] = option;
        golfie = _closure1_slot4;
        oscard = _closure1_slot6;
        report = {};
        report['guildId'] = option;
        report = golfie.bind(zuuluu)(oscard, report);
        entity['children'] = report;
        entity = tangon.bind(zuuluu)(michal, entity);
        return entity;
    };
    zuuluu['default'] = michal;
    return entity;
})();