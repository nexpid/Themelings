// app/modules/guild_role_subscriptions/native/guild_settings/emojis/GuildSettingsRoleSubscriptionEmojis.tsx
export default (function(argFoo, argBar, argBaz, argCorge, _, argFred, argPlugh) {
    report = argBar;
    golf = argBaz;
    zulu = argFred;
    oscar = argPlugh;
    var _closure1_slot0 = report;
    var _closure1_slot1 = golf;
    var _closure1_slot2 = oscar;
    entity = function(argFoo) { // Original name: GuildSettingsRoleSubscriptionEmojisInner
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            entity = argFoo;
            entity = entity.guildId;
            var _closure2_slot0 = entity;
            mike = _closure1_slot0;
            zulu = _closure1_slot2;
            entity = 7;
            entity = zulu[entity];
            report = undefined;
            tango = mike.bind(report)(entity);
            entity = tango.useRoleSubscriptionSettingsDisabled;
            oscar = entity.bind(tango)();
            entity = 8;
            entity = zulu[entity];
            tango = mike.bind(report)(entity);
            zulu = tango.useStateFromStores;
            entity = _closure1_slot3;
            mike = new Array(1);
            mike[0] = entity;
            entity = function() {
                zulu = _closure1_slot3;
                mike = zulu.getGuild;
                entity = _closure2_slot0;
                entity = mike.bind(zulu)(entity);
                return entity;
            };
            offset = zulu.bind(tango)(mike, entity);
            var _closure2_slot1 = offset;
            entity = null;
            if(!(entity != offset)) { _fun00002_ip = 245; continue _fun00001 }
 104:
            zulu = _closure1_slot0;
            yankee = _closure1_slot2;
            mike = 6;
            tango = yankee[mike];
            tango = zulu.bind(report)(tango);
            romeo = tango.intl;
            verify = romeo.formatToPlainString;
            mike = yankee[mike];
            mike = zulu.bind(report)(mike);
            mike = mike.t;
            tango = mike.H9Jxp6;
            mike = {};
            foxtrot = offset.getMaxRoleSubscriptionEmojiSlots;
            foxtrot = foxtrot.bind(offset)();
            mike['maxSlots'] = foxtrot;
            verify = verify.bind(romeo)(tango, mike);
            tango = _closure1_slot4;
            mike = 5;
            mike = yankee[mike];
            mike = zulu.bind(report)(mike);
            zulu = mike.ManageEmojisModal;
            mike = {};
            mike['guild'] = offset;
            mike['headerDescription'] = verify;
            options = _closure1_slot5;
            mike['computeEmojiItems'] = options;
            golf = function(argFoo) { // Original name: onSelectRolesForEmoji
                mike = argFoo;
                var _closure3_slot0 = mike;
                mike = global;
                zulu = mike.Promise;
                mike = zulu.prototype;
                mike = Object.create(mike, {constructor: {value: zulu}});
                tango = function(argFoo, argBar) {
                    entity = argFoo;
                    var _closure4_slot0 = entity;
                    entity = argBar;
                    var _closure4_slot1 = entity;
                    report = _closure1_slot1;
                    mike = _closure1_slot2;
                    entity = 9;
                    tango = mike[entity];
                    entity = undefined;
                    oscar = report.bind(entity)(tango);
                    report = oscar.openLazy;
                    tango = _closure1_slot0;
                    zulu = 11;
                    zulu = mike[zulu];
                    tango = tango.bind(entity)(zulu);
                    zulu = 10;
                    zulu = mike[zulu];
                    mike = mike.paths;
                    tango = tango.bind(entity)(zulu, mike);
                    options = _closure2_slot1;
                    verify = options.id;
                    mike = global;
                    mike = mike.HermesInternal;
                    zulu = mike.concat;
                    mike = 'role-subscription-emoji-';
                    zulu = zulu.bind(mike)(verify);
                    mike = {};
                    options = options.id;
                    mike['guildId'] = options;
                    options = _closure3_slot0;
                    mike['emoji'] = options;
                    options = function(argFoo) { // Original name: onSave
                        zulu = _closure1_slot1;
                        mike = _closure1_slot2;
                        entity = 9;
                        mike = mike[entity];
                        entity = undefined;
                        zulu = zulu.bind(entity)(mike);
                        mike = zulu.hideActionSheet;
                        mike = mike.bind(zulu)();
                        zulu = _closure4_slot0;
                        mike = argFoo;
                        mike = zulu.bind(entity)(mike);
                        return entity;
                    };
                    mike['onSave'] = options;
                    golf = function() { // Original name: onCancel
                        zulu = _closure1_slot1;
                        mike = _closure1_slot2;
                        entity = 9;
                        mike = mike[entity];
                        entity = undefined;
                        zulu = zulu.bind(entity)(mike);
                        mike = zulu.hideActionSheet;
                        mike = mike.bind(zulu)();
                        zulu = _closure4_slot1;
                        mike = global;
                        report = mike.Error;
                        mike = report.prototype;
                        tango = Object.create(mike, {constructor: {value: report}});
                        oscar = 'User cancelled';
                        golf = tango;
                        mike = new golf[report](oscar, report);
                        mike = mike instanceof Object ? mike : tango;
                        mike = zulu.bind(entity)(mike);
                        return entity;
                    };
                    mike['onCancel'] = golf;
                    mike = report.bind(oscar)(tango, zulu, mike);
                    return entity;
                };
                report = mike;
                entity = new report[zulu](tango, zulu);
                entity = entity instanceof Object ? entity : mike;
                return entity;
            };
            mike['onSelectRolesForEmoji'] = golf;
            mike['disabled'] = oscar;
            mike = tango.bind(report)(zulu, mike);
            return mike;
 245:
            return entity;
        }
    };
    var _closure1_slot6 = entity;
    entity = global;
    verify = entity.Object;
    options = verify.defineProperty;
    tango = {};
    entity = true;
    tango['value'] = entity;
    entity = '__esModule';
    entity = options.bind(verify)(zulu, entity, tango);
    entity = 0;
    options = oscar[entity];
    tango = argCorge;
    entity = undefined;
    tango = tango.bind(entity)(options);
    tango = 1;
    tango = oscar[tango];
    tango = golf.bind(entity)(tango);
    var _closure1_slot3 = tango;
    tango = 2;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.jsx;
    var _closure1_slot4 = tango;
    tango = 3;
    tango = oscar[tango];
    options = golf.bind(entity)(tango);
    golf = options.memoize;
    tango = function(argFoo, argBar) {
        _fun00003: for(var _fun00004_ip = 0; ; ) switch(_fun00004_ip) {
 0:
            zulu = argFoo;
            tango = argBar;
            var _closure2_slot0 = tango;
            mike = zulu.filter;
            entity = function(argFoo) {
                zulu = _closure1_slot0;
                mike = _closure1_slot2;
                entity = 4;
                mike = mike[entity];
                entity = undefined;
                tango = zulu.bind(entity)(mike);
                zulu = tango.isRoleSubscriptionEmoji;
                entity = _closure2_slot0;
                mike = entity.id;
                entity = argFoo;
                entity = zulu.bind(tango)(entity, mike);
                return entity;
            };
            report = mike.bind(zulu)(entity);
            mike = report.length;
            entity = 0;
            if(!(entity !== mike)) { _fun00004_ip = 201; continue _fun00003 }
 43:
            zulu = report.map;
            verify = _closure1_slot0;
            offset = _closure1_slot2;
            entity = 5;
            mike = offset[entity];
            options = undefined;
            mike = verify.bind(options)(mike);
            mike = mike.computeEmojiItem;
            zulu = zulu.bind(report)(mike);
            mike = zulu.reverse;
            zulu = mike.bind(zulu)();
            mike = tango.getMaxRoleSubscriptionEmojiSlots;
            oscar = mike.bind(tango)();
            entity = offset[entity];
            report = verify.bind(options)(entity);
            tango = report.computeSectionItem;
            entity = 6;
            mike = offset[entity];
            mike = verify.bind(options)(mike);
            golf = mike.intl;
            mike = golf.string;
            entity = offset[entity];
            entity = verify.bind(options)(entity);
            entity = entity.t;
            entity = entity.sMOuub;
            mike = mike.bind(golf)(entity);
            entity = zulu.length;
            mike = tango.bind(report)(mike, entity, oscar);
            entity = new Array(1);
            entity[0] = mike;
            yankee = 1;
            foxtrot = entity;
            romeo = zulu;
            mike = arraySpread(foxtrot, romeo, yankee);
            return entity;
 201:
            entity = new Array(0);
            return entity;
        }
    };
    tango = golf.bind(options)(tango);
    var _closure1_slot5 = tango;
    tango = 13;
    tango = oscar[tango];
    oscar = report.bind(entity)(tango);
    report = oscar.fileFinishedImporting;
    tango = 'modules/guild_role_subscriptions/native/guild_settings/emojis/GuildSettingsRoleSubscriptionEmojis.tsx';
    tango = report.bind(oscar)(tango);
    mike = function(argFoo) { // Original name: GuildSettingsRoleSubscriptionEmojis
        entity = argFoo;
        options = entity.guildId;
        tango = _closure1_slot4;
        mike = _closure1_slot1;
        zulu = _closure1_slot2;
        entity = 12;
        entity = zulu[entity];
        zulu = undefined;
        mike = mike.bind(zulu)(entity);
        entity = {};
        entity['guildId'] = options;
        golf = _closure1_slot4;
        oscar = _closure1_slot6;
        report = {};
        report['guildId'] = options;
        report = golf.bind(zulu)(oscar, report);
        entity['children'] = report;
        entity = tango.bind(zulu)(mike, entity);
        return entity;
    };
    zulu['default'] = mike;
    return entity;
})();