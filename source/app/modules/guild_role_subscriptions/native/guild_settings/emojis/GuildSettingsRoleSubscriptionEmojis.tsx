// app/modules/guild_role_subscriptions/native/guild_settings/emojis/GuildSettingsRoleSubscriptionEmojis.tsx
export default (function(global, require, metroImportDefault, metroImportAll, moduleObject, exports, dependencyMap) {
    var5 = require;
    var7 = metroImportDefault;
    var3 = exports;
    var6 = dependencyMap;
    var _closure1_slot0 = var5;
    var _closure1_slot1 = var7;
    var _closure1_slot2 = var6;
    var1 = function GuildSettingsRoleSubscriptionEmojisInner(arg1) {
        _fun0001: for(var _fun0001_ip = 0; ; ) switch(_fun0001_ip) {
 0:
            var1 = arg1;
            var1 = var1.guildId;
            var _closure2_slot0 = var1;
            var2 = _closure1_slot0;
            var3 = _closure1_slot2;
            var1 = 8;
            var1 = var3[var1];
            var5 = undefined;
            var4 = var2.bind(var5)(var1);
            var1 = var4.useRoleSubscriptionSettingsDisabled;
            var6 = var1.bind(var4)();
            var1 = 9;
            var1 = var3[var1];
            var4 = var2.bind(var5)(var1);
            var3 = var4.useStateFromStores;
            var1 = _closure1_slot3;
            var2 = new Array(1);
            var2[0] = var1;
            var1 = function() {
                var3 = _closure1_slot3;
                var2 = var3.getGuild;
                var1 = _closure2_slot0;
                var1 = var2.bind(var3)(var1);
                return var1;
            };
            var10 = var3.bind(var4)(var2, var1);
            var _closure2_slot1 = var10;
            var1 = null;
            if(!(var1 != var10)) { _fun0001_ip = 258; continue _fun0001 }
 104:
            var3 = _closure1_slot0;
            var11 = _closure1_slot2;
            var2 = 7;
            var4 = var11[var2];
            var4 = var3.bind(var5)(var4);
            var12 = var4.intl;
            var9 = var12.formatToPlainString;
            var2 = var11[var2];
            var2 = var3.bind(var5)(var2);
            var2 = var2.t;
            var4 = var2.H9Jxp6;
            var2 = {};
            var14 = _closure1_slot1;
            var13 = 6;
            var13 = var11[var13];
            var13 = var14.bind(var5)(var13);
            var13 = var13.bind(var5)(var10);
            var2['maxSlots'] = var13;
            var9 = var9.bind(var12)(var4, var2);
            var4 = _closure1_slot4;
            var2 = 5;
            var2 = var11[var2];
            var2 = var3.bind(var5)(var2);
            var3 = var2.ManageEmojisModal;
            var2 = {};
            var2['guild'] = var10;
            var2['headerDescription'] = var9;
            var8 = _closure1_slot5;
            var2['computeEmojiItems'] = var8;
            var7 = function onSelectRolesForEmoji(arg1) {
                var2 = arg1;
                var _closure3_slot0 = var2;
                var2 = global;
                var3 = var2.Promise;
                var2 = var3.prototype;
                var2 = Object.create(var2, {constructor: {value: var3}});
                var4 = function(arg1, arg2) {
                    var1 = arg1;
                    var _closure4_slot0 = var1;
                    var1 = arg2;
                    var _closure4_slot1 = var1;
                    var5 = _closure1_slot1;
                    var2 = _closure1_slot2;
                    var1 = 10;
                    var4 = var2[var1];
                    var1 = undefined;
                    var6 = var5.bind(var1)(var4);
                    var5 = var6.openLazy;
                    var4 = _closure1_slot0;
                    var3 = 12;
                    var3 = var2[var3];
                    var4 = var4.bind(var1)(var3);
                    var3 = 11;
                    var3 = var2[var3];
                    var2 = var2.paths;
                    var4 = var4.bind(var1)(var3, var2);
                    var8 = _closure2_slot1;
                    var9 = var8.id;
                    var2 = global;
                    var2 = var2.HermesInternal;
                    var3 = var2.concat;
                    var2 = 'role-subscription-emoji-';
                    var3 = var3.bind(var2)(var9);
                    var2 = {};
                    var8 = var8.id;
                    var2['guildId'] = var8;
                    var8 = _closure3_slot0;
                    var2['emoji'] = var8;
                    var8 = function onSave(arg1) {
                        var3 = _closure1_slot1;
                        var2 = _closure1_slot2;
                        var1 = 10;
                        var2 = var2[var1];
                        var1 = undefined;
                        var3 = var3.bind(var1)(var2);
                        var2 = var3.hideActionSheet;
                        var2 = var2.bind(var3)();
                        var3 = _closure4_slot0;
                        var2 = arg1;
                        var2 = var3.bind(var1)(var2);
                        return var1;
                    };
                    var2['onSave'] = var8;
                    var7 = function onCancel() {
                        var3 = _closure1_slot1;
                        var2 = _closure1_slot2;
                        var1 = 10;
                        var2 = var2[var1];
                        var1 = undefined;
                        var3 = var3.bind(var1)(var2);
                        var2 = var3.hideActionSheet;
                        var2 = var2.bind(var3)();
                        var3 = _closure4_slot1;
                        var2 = global;
                        var5 = var2.Error;
                        var2 = var5.prototype;
                        var4 = Object.create(var2, {constructor: {value: var5}});
                        var6 = 'User cancelled';
                        var7 = var4;
                        var2 = new var7[var5](var6, var5);
                        var2 = var2 instanceof Object ? var2 : var4;
                        var2 = var3.bind(var1)(var2);
                        return var1;
                    };
                    var2['onCancel'] = var7;
                    var2 = var5.bind(var6)(var4, var3, var2);
                    return var1;
                };
                var5 = var2;
                var1 = new var5[var3](var4, var3);
                var1 = var1 instanceof Object ? var1 : var2;
                return var1;
            };
            var2['onSelectRolesForEmoji'] = var7;
            var2['disabled'] = var6;
            var2 = var4.bind(var5)(var3, var2);
            return var2;
 258:
            return var1;
        }
    };
    var _closure1_slot6 = var1;
    var1 = global;
    var9 = var1.Object;
    var8 = var9.defineProperty;
    var4 = {};
    var1 = true;
    var4['value'] = var1;
    var1 = '__esModule';
    var1 = var8.bind(var9)(var3, var1, var4);
    var1 = 0;
    var8 = var6[var1];
    var4 = metroImportAll;
    var1 = undefined;
    var4 = var4.bind(var1)(var8);
    var4 = 1;
    var4 = var6[var4];
    var4 = var7.bind(var1)(var4);
    var _closure1_slot3 = var4;
    var4 = 2;
    var4 = var6[var4];
    var4 = var5.bind(var1)(var4);
    var4 = var4.jsx;
    var _closure1_slot4 = var4;
    var4 = 3;
    var4 = var6[var4];
    var8 = var7.bind(var1)(var4);
    var7 = var8.memoize;
    var4 = function(arg1, arg2) {
        _fun0002: for(var _fun0002_ip = 0; ; ) switch(_fun0002_ip) {
 0:
            var3 = arg1;
            var4 = arg2;
            var _closure2_slot0 = var4;
            var2 = var3.filter;
            var1 = function(arg1) {
                var3 = _closure1_slot0;
                var2 = _closure1_slot2;
                var1 = 4;
                var2 = var2[var1];
                var1 = undefined;
                var4 = var3.bind(var1)(var2);
                var3 = var4.isRoleSubscriptionEmoji;
                var1 = _closure2_slot0;
                var2 = var1.id;
                var1 = arg1;
                var1 = var3.bind(var4)(var1, var2);
                return var1;
            };
            var6 = var2.bind(var3)(var1);
            var2 = var6.length;
            var1 = 0;
            if(!(var1 !== var2)) { _fun0002_ip = 212; continue _fun0002 }
 43:
            var5 = var6.map;
            var9 = _closure1_slot0;
            var10 = _closure1_slot2;
            var1 = 5;
            var3 = var10[var1];
            var8 = undefined;
            var3 = var9.bind(var8)(var3);
            var3 = var3.computeEmojiItem;
            var5 = var5.bind(var6)(var3);
            var3 = var5.reverse;
            var3 = var3.bind(var5)();
            var5 = _closure1_slot1;
            var2 = 6;
            var2 = var10[var2];
            var2 = var5.bind(var8)(var2);
            var6 = var2.bind(var8)(var4);
            var1 = var10[var1];
            var5 = var9.bind(var8)(var1);
            var4 = var5.computeSectionItem;
            var1 = 7;
            var2 = var10[var1];
            var2 = var9.bind(var8)(var2);
            var7 = var2.intl;
            var2 = var7.string;
            var1 = var10[var1];
            var1 = var9.bind(var8)(var1);
            var1 = var1.t;
            var1 = var1.sMOuub;
            var2 = var2.bind(var7)(var1);
            var1 = var3.length;
            var2 = var4.bind(var5)(var2, var1, var6);
            var1 = new Array(1);
            var1[0] = var2;
            var11 = 1;
            var13 = var1;
            var12 = var3;
            var2 = arraySpread(var13, var12, var11);
            return var1;
 212:
            var1 = new Array(0);
            return var1;
        }
    };
    var4 = var7.bind(var8)(var4);
    var _closure1_slot5 = var4;
    var4 = 14;
    var4 = var6[var4];
    var6 = var5.bind(var1)(var4);
    var5 = var6.fileFinishedImporting;
    var4 = 'modules/guild_role_subscriptions/native/guild_settings/emojis/GuildSettingsRoleSubscriptionEmojis.tsx';
    var4 = var5.bind(var6)(var4);
    var2 = function GuildSettingsRoleSubscriptionEmojis(arg1) {
        var1 = arg1;
        var8 = var1.guildId;
        var4 = _closure1_slot4;
        var2 = _closure1_slot1;
        var3 = _closure1_slot2;
        var1 = 13;
        var1 = var3[var1];
        var3 = undefined;
        var2 = var2.bind(var3)(var1);
        var1 = {};
        var1['guildId'] = var8;
        var7 = _closure1_slot4;
        var6 = _closure1_slot6;
        var5 = {};
        var5['guildId'] = var8;
        var5 = var7.bind(var3)(var6, var5);
        var1['children'] = var5;
        var1 = var4.bind(var3)(var2, var1);
        return var1;
    };
    var3['default'] = var2;
    return var1;
})();