// app/modules/guild_role_subscriptions/native/guild_settings/waitlist/GuildSettingsRoleSubscriptionsWaitlist.tsx
export default (function(argFoo, argBar, argBaz, argCorge, _, argFred, argPlugh) {
    report = argBar;
    zulu = argFred;
    oscar = argPlugh;
    var _closure1_slot0 = report;
    entity = argBaz;
    var _closure1_slot1 = entity;
    var _closure1_slot2 = oscar;
    entity = global;
    options = entity.Object;
    golf = options.defineProperty;
    tango = {};
    entity = true;
    tango['value'] = entity;
    entity = '__esModule';
    entity = golf.bind(options)(zulu, entity, tango);
    entity = 0;
    golf = oscar[entity];
    tango = argCorge;
    entity = undefined;
    tango = tango.bind(entity)(golf);
    var _closure1_slot3 = tango;
    offset = 1;
    tango = oscar[offset];
    tango = report.bind(entity)(tango);
    golf = tango.View;
    var _closure1_slot4 = golf;
    tango = tango.ScrollView;
    var _closure1_slot5 = tango;
    tango = 2;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.GuildSettingsSections;
    var _closure1_slot6 = tango;
    tango = 3;
    golf = oscar[tango];
    golf = report.bind(entity)(golf);
    golf = golf.jsx;
    var _closure1_slot7 = golf;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.jsxs;
    var _closure1_slot8 = tango;
    tango = 4;
    tango = oscar[tango];
    options = report.bind(entity)(tango);
    golf = options.createStyles;
    tango = {};
    verify = {};
    verify['flex'] = offset;
    tango['container'] = verify;
    offset = 24;
    verify = {'flex': 1, 'padding': 24};
    tango['contentContainer'] = verify;
    verify = {'resizeMode': 'cover', 'width': '100%'};
    tango['heroImage'] = verify;
    verify = {};
    yankee = 8;
    verify['marginTop'] = yankee;
    tango['subtitle'] = verify;
    verify = {};
    verify['marginTop'] = offset;
    tango['actionableNotice'] = verify;
    tango = golf.bind(options)(tango);
    var _closure1_slot9 = tango;
    tango = 18;
    tango = oscar[tango];
    oscar = report.bind(entity)(tango);
    report = oscar.fileFinishedImporting;
    tango = 'modules/guild_role_subscriptions/native/guild_settings/waitlist/GuildSettingsRoleSubscriptionsWaitlist.tsx';
    tango = report.bind(oscar)(tango);
    mike = function(argFoo) { // Original name: GuildSettingsRoleSubscriptionsWaitlist
        _fun126897: for(var _fun126897_ip = 0; ; ) switch(_fun126897_ip) {
 0:
            entity = argFoo;
            golf = entity.guild;
            update = entity.config;
            var _closure2_slot0 = update;
            entity = _closure1_slot9;
            report = undefined;
            source = entity.bind(report)();
            options = _closure1_slot0;
            verify = _closure1_slot2;
            entity = 5;
            entity = verify[entity];
            tango = options.bind(report)(entity);
            entity = tango.useNavigation;
            romeo = entity.bind(tango)();
            var _closure2_slot1 = romeo;
            tango = _closure1_slot1;
            entity = 6;
            entity = verify[entity];
            oscar = tango.bind(report)(entity);
            entity = golf.id;
            oscar = oscar.bind(report)(entity);
            entity = oscar.isLoading;
            sizing = oscar.creatorMonetizationOnboardingMarketing;
            yankee = _closure1_slot3;
            offset = yankee.useCallback;
            oscar = new Array(2);
            oscar[0] = update;
            oscar[1] = romeo;
            zulu = function() {
                _fun126898: for(var _fun126898_ip = 0; ; ) switch(_fun126898_ip) {
 0:
                    entity = _closure2_slot0;
                    report = entity.visibility;
                    oscar = _closure1_slot0;
                    tango = _closure1_slot2;
                    entity = 7;
                    tango = tango[entity];
                    entity = undefined;
                    tango = oscar.bind(entity)(tango);
                    tango = tango.GuildRoleSubscriptionSettingsVisibility;
                    tango = tango.NEEDS_COMMUNITY;
                    if(!(report !== tango)) { _fun126898_ip = 70; continue _fun126898 }
 54:
                    report = _closure2_slot0;
                    tango = report.onCtaClicked;
                    tango = tango.bind(report)();
                    _fun126898_ip = 94; continue _fun126898;
 70:
                    tango = _closure2_slot1;
                    zulu = tango.push;
                    mike = _closure1_slot6;
                    mike = mike.COMMUNITY;
                    mike = zulu.bind(tango)(mike);
 94:
                    return entity;
                }
            };
            echo = offset.bind(yankee)(zulu, oscar);
            zulu = 8;
            zulu = verify[zulu];
            tango = tango.bind(report)(zulu);
            zulu = {};
            oscar = 9;
            offset = verify[oscar];
            offset = options.bind(report)(offset);
            offset = offset.ImpressionTypes;
            offset = offset.PANE;
            zulu['type'] = offset;
            oscar = verify[oscar];
            oscar = options.bind(report)(oscar);
            oscar = oscar.ImpressionNames;
            oscar = oscar.ENABLE_CREATOR_MONETIZATION_WAITLIST_LANDING;
            zulu['name'] = oscar;
            oscar = {};
            golf = golf.id;
            oscar['guild_id'] = golf;
            zulu['properties'] = oscar;
            zulu = tango.bind(report)(zulu);
            tango = _closure1_slot7;
            if(entity) { _fun126897_ip = 723; continue _fun126897 }
 236:
            kilo = _closure1_slot0;
            output = _closure1_slot2;
            entity = 11;
            entity = output[entity];
            entity = kilo.bind(report)(entity);
            zulu = entity.SafeAreaPaddingView;
            entity = {};
            oscar = true;
            entity['bottom'] = oscar;
            golf = _closure1_slot5;
            oscar = {};
            offset = _closure1_slot8;
            verify = _closure1_slot4;
            options = {};
            yankee = source.container;
            options['style'] = yankee;
            result = _closure1_slot1;
            yankee = 12;
            yankee = output[yankee];
            romeo = result.bind(report)(yankee);
            yankee = {};
            foxtrot = 13;
            foxtrot = output[foxtrot];
            foxtrot = result.bind(report)(foxtrot);
            yankee['source'] = foxtrot;
            foxtrot = 'scale';
            yankee['resizeMethod'] = foxtrot;
            foxtrot = source.heroImage;
            yankee['style'] = foxtrot;
            romeo = tango.bind(report)(romeo, yankee);
            yankee = new Array(2);
            yankee[0] = romeo;
            romeo = {};
            foxtrot = source.contentContainer;
            romeo['style'] = foxtrot;
            backup = 14;
            foxtrot = output[backup];
            foxtrot = kilo.bind(report)(foxtrot);
            control = foxtrot.Text;
            foxtrot = {'variant': 'heading-xl/extrabold', 'color': 'header-primary'};
            vacuum = 15;
            sequence = output[vacuum];
            sequence = kilo.bind(report)(sequence);
            record = sequence.intl;
            config = record.string;
            sequence = output[vacuum];
            sequence = kilo.bind(report)(sequence);
            sequence = sequence.t;
            sequence = sequence.QYqDQ0;
            sequence = config.bind(record)(sequence);
            foxtrot['children'] = sequence;
            control = tango.bind(report)(control, foxtrot);
            foxtrot = new Array(4);
            foxtrot[0] = control;
            backup = output[backup];
            backup = kilo.bind(report)(backup);
            control = backup.Text;
            backup = {'style': null, 'variant': 'text-sm/normal', 'color': 'header-secondary'};
            sequence = source.subtitle;
            backup['style'] = sequence;
            sequence = output[vacuum];
            sequence = kilo.bind(report)(sequence);
            config = sequence.intl;
            sequence = config.string;
            vacuum = output[vacuum];
            vacuum = kilo.bind(report)(vacuum);
            vacuum = vacuum.t;
            vacuum = vacuum.41wkMT;
            vacuum = sequence.bind(config)(vacuum);
            backup['children'] = vacuum;
            backup = tango.bind(report)(control, backup);
            foxtrot[1] = backup;
            backup = 16;
            backup = output[backup];
            result = result.bind(report)(backup);
            backup = {};
            source = source.actionableNotice;
            backup['style'] = source;
            source = update.ctaLabel;
            backup['ctaLabel'] = source;
            source = update.ctaClickable;
            source = !source;
            backup['disabled'] = source;
            update = update.noticeText;
            backup['notice'] = update;
            backup['onClick'] = echo;
            backup = tango.bind(report)(result, backup);
            foxtrot[2] = backup;
            backup = 17;
            backup = output[backup];
            backup = kilo.bind(report)(backup);
            kilo = backup.MarketingSections;
            backup = {};
            backup['onboardingMarketing'] = sizing;
            backup = tango.bind(report)(kilo, backup);
            foxtrot[3] = backup;
            romeo['children'] = foxtrot;
            romeo = offset.bind(report)(verify, romeo);
            yankee[1] = romeo;
            options['children'] = yankee;
            options = offset.bind(report)(verify, options);
            oscar['children'] = options;
            oscar = tango.bind(report)(golf, oscar);
            entity['children'] = oscar;
            entity = tango.bind(report)(zulu, entity);
            _fun126897_ip = 751; continue _fun126897;
 723:
            zulu = _closure1_slot1;
            oscar = _closure1_slot2;
            mike = 10;
            mike = oscar[mike];
            zulu = zulu.bind(report)(mike);
            mike = {};
            entity = tango.bind(report)(zulu, mike);
 751:
            return entity;
        }
    };
    zulu['default'] = mike;
    return entity;
})();