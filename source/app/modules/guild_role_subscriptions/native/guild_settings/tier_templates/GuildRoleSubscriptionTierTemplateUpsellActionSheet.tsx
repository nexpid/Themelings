// app/modules/guild_role_subscriptions/native/guild_settings/tier_templates/GuildRoleSubscriptionTierTemplateUpsellActionSheet.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    report = argBar;
    yankee = argBaz;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    var _closure1_slot1 = yankee;
    var _closure1_slot2 = oscard;
    entity = global;
    option = entity.Object;
    golfie = option.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(option)(zuuluu, entity, tangon);
    entity = 0;
    tangon = oscard[entity];
    entity = undefined;
    tangon = yankee.bind(entity)(tangon);
    var _closure1_slot3 = tangon;
    tangon = 1;
    golfie = oscard[tangon];
    tangon = argCor;
    tangon = tangon.bind(entity)(golfie);
    var _closure1_slot4 = tangon;
    tangon = 2;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.View;
    var _closure1_slot5 = tangon;
    tangon = 3;
    tangon = oscard[tangon];
    tangon = yankee.bind(entity)(tangon);
    var _closure1_slot6 = tangon;
    tangon = 4;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    golfie = tangon.GuildSettingsSections;
    var _closure1_slot7 = golfie;
    tangon = tangon.GuildSettingsSubsections;
    var _closure1_slot8 = tangon;
    tangon = 5;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.ContentDismissActionType;
    var _closure1_slot9 = tangon;
    tangon = 6;
    golfie = oscard[tangon];
    golfie = report.bind(entity)(golfie);
    golfie = golfie.jsx;
    var _closure1_slot10 = golfie;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.jsxs;
    var _closure1_slot11 = tangon;
    tangon = {};
    golfie = 'https://cdn.discordapp.com/assets/server-subscription-tier-template/upsell.mov';
    tangon['videoURI'] = golfie;
    var _closure1_slot12 = tangon;
    tangon = 7;
    tangon = oscard[tangon];
    option = report.bind(entity)(tangon);
    golfie = option.createStyles;
    tangon = {};
    verify = {'backgroundColor': null, 'padding': 16, 'paddingTop': 24, 'justifyContent': 'center'};
    offset = 8;
    romeon = oscard[offset];
    romeon = yankee.bind(entity)(romeon);
    romeon = romeon.colors;
    romeon = romeon.BACKGROUND_PRIMARY;
    verify['backgroundColor'] = romeon;
    tangon['container'] = verify;
    verify = {};
    romeon = oscard[offset];
    romeon = yankee.bind(entity)(romeon);
    romeon = romeon.radii;
    romeon = romeon.sm;
    verify['borderRadius'] = romeon;
    romeon = 'hidden';
    verify['overflow'] = romeon;
    tangon['videoContainer'] = verify;
    verify = {};
    romeon = oscard[offset];
    romeon = yankee.bind(entity)(romeon);
    romeon = romeon.colors;
    romeon = romeon.BACKGROUND_PRIMARY;
    verify['backgroundColor'] = romeon;
    tangon['video'] = verify;
    verify = {'marginTop': 16, 'alignItems': 'center'};
    tangon['info'] = verify;
    verify = {'marginTop': 24, 'textAlign': 'center'};
    tangon['title'] = verify;
    verify = {'marginTop': 12, 'textAlign': 'center'};
    tangon['subtitle'] = verify;
    verify = {};
    romeon = 32;
    verify['marginTop'] = romeon;
    tangon['footer'] = verify;
    verify = {};
    verify['marginBottom'] = offset;
    tangon['button'] = verify;
    verify = {};
    offset = oscard[offset];
    offset = yankee.bind(entity)(offset);
    offset = offset.colors;
    offset = offset.TEXT_MUTED;
    verify['color'] = offset;
    tangon['cancelButtonText'] = verify;
    tangon = golfie.bind(option)(tangon);
    var _closure1_slot13 = tangon;
    tangon = 18;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/guild_role_subscriptions/native/guild_settings/tier_templates/GuildRoleSubscriptionTierTemplateUpsellActionSheet.tsx';
    tangon = report.bind(oscard)(tangon);
    michal = function(argFoo) { // Original name: GuildRoleSubscriptionTierTemplateUpsellActionSheet
        entity = argFoo;
        michal = entity.guildId;
        var _closure2_slot0 = michal;
        entity = entity.markAsDismissed;
        var _closure2_slot1 = entity;
        michal = _closure1_slot13;
        tangon = undefined;
        result = michal.bind(tangon)();
        report = _closure1_slot4;
        zuuluu = report.useState;
        michal = 0;
        golfie = zuuluu.bind(report)(michal);
        oscard = _closure1_slot3;
        zuuluu = 2;
        zuuluu = oscard.bind(tangon)(golfie, zuuluu);
        echoed = zuuluu[michal];
        michal = 1;
        michal = zuuluu[michal];
        var _closure2_slot2 = michal;
        update = _closure1_slot0;
        kiloes = _closure1_slot2;
        michal = 9;
        michal = kiloes[michal];
        zuuluu = update.bind(tangon)(michal);
        michal = zuuluu.useIsScreenLandscape;
        michal = michal.bind(zuuluu)();
        var _closure2_slot3 = michal;
        michal = 10;
        michal = kiloes[michal];
        golfie = update.bind(tangon)(michal);
        oscard = golfie.useStateFromStores;
        michal = _closure1_slot6;
        zuuluu = new Array(1);
        zuuluu[0] = michal;
        michal = function() {
            entity = _closure1_slot6;
            entity = entity.useReducedMotion;
            return entity;
        };
        romeon = oscard.bind(golfie)(zuuluu, michal);
        zuuluu = report.useEffect;
        michal = new Array(1);
        michal[0] = entity;
        entity = function() {
            entity = function() {
                zuuluu = _closure2_slot1;
                entity = _closure1_slot9;
                michal = entity.UNKNOWN;
                entity = undefined;
                entity = zuuluu.bind(entity)(michal);
                return entity;
            };
            return entity;
        };
        entity = zuuluu.bind(report)(entity, michal);
        zuuluu = _closure1_slot10;
        entity = 11;
        entity = kiloes[entity];
        entity = update.bind(tangon)(entity);
        michal = entity.BottomSheet;
        entity = {};
        yankee = true;
        entity['startExpanded'] = yankee;
        golfie = _closure1_slot11;
        oscard = _closure1_slot5;
        report = {};
        option = result.container;
        report['style'] = option;
        option = function(argFoo) { // Original name: onLayout
            _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
                entity = argFoo;
                entity = entity.nativeEvent;
                entity = entity.layout;
                michal = entity.width;
                entity = 32;
                tangon = michal - entity;
                zuuluu = _closure2_slot2;
                entity = _closure2_slot3;
                michal = tangon;
                if(!entity) { _fun00002_ip = 50; continue _fun00001 }
 43:
                entity = 2;
                michal = tangon / entity;
 50:
                entity = undefined;
                entity = zuuluu.bind(entity)(michal);
                entity = undefined;
                return entity;
            }
        };
        report['onLayout'] = option;
        option = {};
        verify = 'image';
        option['accessibilityRole'] = verify;
        output = 12;
        verify = kiloes[output];
        verify = update.bind(tangon)(verify);
        backup = verify.intl;
        offset = backup.string;
        verify = kiloes[output];
        verify = update.bind(tangon)(verify);
        verify = verify.t;
        verify = verify.gCgirq;
        verify = offset.bind(backup)(verify);
        option['accessibilityLabel'] = verify;
        backup = _closure1_slot1;
        verify = 13;
        verify = kiloes[verify];
        offset = backup.bind(tangon)(verify);
        verify = {};
        source = result.videoContainer;
        verify['style'] = source;
        foxtra = _closure1_slot12;
        verify['src'] = foxtra;
        verify['width'] = echoed;
        foxtra = 1.7289156626506024;
        foxtra = echoed / foxtra;
        verify['height'] = foxtra;
        verify['muted'] = yankee;
        verify['paused'] = romeon;
        verify['ariaHidden'] = yankee;
        verify = zuuluu.bind(tangon)(offset, verify);
        option['children'] = verify;
        verify = zuuluu.bind(tangon)(oscard, option);
        option = new Array(3);
        option[0] = verify;
        verify = {};
        offset = result.info;
        verify['style'] = offset;
        yankee = 14;
        offset = kiloes[yankee];
        offset = update.bind(tangon)(offset);
        romeon = offset.Text;
        offset = {'variant': 'heading-lg/semibold', 'style': null, 'color': 'header-primary'};
        foxtra = result.title;
        offset['style'] = foxtra;
        foxtra = kiloes[output];
        foxtra = update.bind(tangon)(foxtra);
        source = foxtra.intl;
        echoed = source.string;
        foxtra = kiloes[output];
        foxtra = update.bind(tangon)(foxtra);
        foxtra = foxtra.t;
        foxtra = foxtra.gCgirq;
        foxtra = echoed.bind(source)(foxtra);
        offset['children'] = foxtra;
        romeon = zuuluu.bind(tangon)(romeon, offset);
        offset = new Array(2);
        offset[0] = romeon;
        yankee = kiloes[yankee];
        yankee = update.bind(tangon)(yankee);
        romeon = yankee.Text;
        yankee = {'variant': 'text-md/normal', 'color': 'text-normal'};
        foxtra = result.subtitle;
        yankee['style'] = foxtra;
        foxtra = kiloes[output];
        foxtra = update.bind(tangon)(foxtra);
        source = foxtra.intl;
        echoed = source.string;
        foxtra = kiloes[output];
        foxtra = update.bind(tangon)(foxtra);
        foxtra = foxtra.t;
        foxtra = foxtra.fLMZFx;
        foxtra = echoed.bind(source)(foxtra);
        yankee['children'] = foxtra;
        yankee = zuuluu.bind(tangon)(romeon, yankee);
        offset[1] = yankee;
        verify['children'] = offset;
        verify = golfie.bind(tangon)(oscard, verify);
        option[1] = verify;
        verify = {};
        yankee = result.footer;
        offset = new Array(1);
        offset[0] = yankee;
        verify['style'] = offset;
        foxtra = 15;
        offset = kiloes[foxtra];
        yankee = backup.bind(tangon)(offset);
        offset = {};
        romeon = result.button;
        offset['style'] = romeon;
        romeon = kiloes[foxtra];
        romeon = backup.bind(tangon)(romeon);
        romeon = romeon.Colors;
        romeon = romeon.BRAND;
        offset['color'] = romeon;
        romeon = kiloes[output];
        romeon = update.bind(tangon)(romeon);
        source = romeon.intl;
        echoed = source.string;
        romeon = kiloes[output];
        romeon = update.bind(tangon)(romeon);
        romeon = romeon.t;
        romeon = romeon.BQq86u;
        romeon = echoed.bind(source)(romeon);
        offset['text'] = romeon;
        romeon = function() { // Original name: onPress
            tangon = _closure1_slot1;
            zuuluu = _closure1_slot2;
            entity = 16;
            zuuluu = zuuluu[entity];
            entity = undefined;
            option = tangon.bind(entity)(zuuluu);
            golfie = option.open;
            romeon = _closure2_slot0;
            tangon = _closure1_slot7;
            yankee = tangon.ROLE_SUBSCRIPTIONS_TIERS;
            tangon = _closure1_slot8;
            verify = tangon.ROLE_SUBSCRIPTION_TIER_TEMPLATE;
            foxtra = option;
            offset = undefined;
            tangon = foxtra[golfie](romeon, yankee, offset, verify, option);
            zuuluu = _closure2_slot1;
            michal = _closure1_slot9;
            michal = michal.UNKNOWN;
            michal = zuuluu.bind(entity)(michal);
            return entity;
        };
        offset['onPress'] = romeon;
        yankee = zuuluu.bind(tangon)(yankee, offset);
        offset = new Array(2);
        offset[0] = yankee;
        yankee = kiloes[foxtra];
        romeon = backup.bind(tangon)(yankee);
        yankee = {};
        echoed = result.button;
        yankee['style'] = echoed;
        result = result.cancelButtonText;
        yankee['textStyle'] = result;
        result = kiloes[output];
        result = update.bind(tangon)(result);
        echoed = result.intl;
        result = echoed.string;
        output = kiloes[output];
        output = update.bind(tangon)(output);
        output = output.t;
        output = output.WAI6xs;
        output = result.bind(echoed)(output);
        yankee['text'] = output;
        sizing = function() { // Original name: onPress
            zuuluu = _closure1_slot1;
            michal = _closure1_slot2;
            entity = 17;
            michal = michal[entity];
            entity = undefined;
            michal = zuuluu.bind(entity)(michal);
            entity = michal.hideActionSheet;
            entity = entity.bind(michal)();
            return entity;
        };
        yankee['onPress'] = sizing;
        foxtra = kiloes[foxtra];
        foxtra = backup.bind(tangon)(foxtra);
        foxtra = foxtra.Colors;
        foxtra = foxtra.TRANSPARENT;
        yankee['color'] = foxtra;
        yankee = zuuluu.bind(tangon)(romeon, yankee);
        offset[1] = yankee;
        verify['children'] = offset;
        verify = golfie.bind(tangon)(oscard, verify);
        option[2] = verify;
        report['children'] = option;
        report = golfie.bind(tangon)(oscard, report);
        entity['children'] = report;
        entity = zuuluu.bind(tangon)(michal, entity);
        return entity;
    };
    zuuluu['default'] = michal;
    return entity;
})();