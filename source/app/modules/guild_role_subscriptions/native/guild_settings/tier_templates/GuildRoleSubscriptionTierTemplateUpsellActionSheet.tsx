// app/modules/guild_role_subscriptions/native/guild_settings/tier_templates/GuildRoleSubscriptionTierTemplateUpsellActionSheet.tsx
export default (function(argFoo, argBar, argBaz, argCorge, _, argFred, argPlugh) {
    report = argBar;
    yankee = argBaz;
    zulu = argFred;
    oscar = argPlugh;
    var _closure1_slot0 = report;
    var _closure1_slot1 = yankee;
    var _closure1_slot2 = oscar;
    entity = global;
    options = entity.Object;
    golf = options.defineProperty;
    tango = {};
    entity = true;
    tango['value'] = entity;
    entity = '__esModule';
    entity = golf.bind(options)(zulu, entity, tango);
    entity = 0;
    tango = oscar[entity];
    entity = undefined;
    tango = yankee.bind(entity)(tango);
    var _closure1_slot3 = tango;
    tango = 1;
    golf = oscar[tango];
    tango = argCorge;
    tango = tango.bind(entity)(golf);
    var _closure1_slot4 = tango;
    tango = 2;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.View;
    var _closure1_slot5 = tango;
    tango = 3;
    tango = oscar[tango];
    tango = yankee.bind(entity)(tango);
    var _closure1_slot6 = tango;
    tango = 4;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    golf = tango.GuildSettingsSections;
    var _closure1_slot7 = golf;
    tango = tango.GuildSettingsSubsections;
    var _closure1_slot8 = tango;
    tango = 5;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.ContentDismissActionType;
    var _closure1_slot9 = tango;
    tango = 6;
    golf = oscar[tango];
    golf = report.bind(entity)(golf);
    golf = golf.jsx;
    var _closure1_slot10 = golf;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.jsxs;
    var _closure1_slot11 = tango;
    tango = {};
    golf = 'https://cdn.discordapp.com/assets/server-subscription-tier-template/upsell.mov';
    tango['videoURI'] = golf;
    var _closure1_slot12 = tango;
    tango = 7;
    tango = oscar[tango];
    options = report.bind(entity)(tango);
    golf = options.createStyles;
    tango = {};
    verify = {'backgroundColor': null, 'padding': 16, 'paddingTop': 24, 'justifyContent': 'center'};
    offset = 8;
    romeo = oscar[offset];
    romeo = yankee.bind(entity)(romeo);
    romeo = romeo.colors;
    romeo = romeo.BACKGROUND_PRIMARY;
    verify['backgroundColor'] = romeo;
    tango['container'] = verify;
    verify = {};
    romeo = oscar[offset];
    romeo = yankee.bind(entity)(romeo);
    romeo = romeo.radii;
    romeo = romeo.sm;
    verify['borderRadius'] = romeo;
    romeo = 'hidden';
    verify['overflow'] = romeo;
    tango['videoContainer'] = verify;
    verify = {};
    romeo = oscar[offset];
    romeo = yankee.bind(entity)(romeo);
    romeo = romeo.colors;
    romeo = romeo.BACKGROUND_PRIMARY;
    verify['backgroundColor'] = romeo;
    tango['video'] = verify;
    verify = {'marginTop': 16, 'alignItems': 'center'};
    tango['info'] = verify;
    verify = {'marginTop': 24, 'textAlign': 'center'};
    tango['title'] = verify;
    verify = {'marginTop': 12, 'textAlign': 'center'};
    tango['subtitle'] = verify;
    verify = {};
    romeo = 32;
    verify['marginTop'] = romeo;
    tango['footer'] = verify;
    verify = {};
    verify['marginBottom'] = offset;
    tango['button'] = verify;
    verify = {};
    offset = oscar[offset];
    offset = yankee.bind(entity)(offset);
    offset = offset.colors;
    offset = offset.TEXT_MUTED;
    verify['color'] = offset;
    tango['cancelButtonText'] = verify;
    tango = golf.bind(options)(tango);
    var _closure1_slot13 = tango;
    tango = 18;
    tango = oscar[tango];
    oscar = report.bind(entity)(tango);
    report = oscar.fileFinishedImporting;
    tango = 'modules/guild_role_subscriptions/native/guild_settings/tier_templates/GuildRoleSubscriptionTierTemplateUpsellActionSheet.tsx';
    tango = report.bind(oscar)(tango);
    mike = function(argFoo) { // Original name: GuildRoleSubscriptionTierTemplateUpsellActionSheet
        entity = argFoo;
        mike = entity.guildId;
        var _closure2_slot0 = mike;
        entity = entity.markAsDismissed;
        var _closure2_slot1 = entity;
        mike = _closure1_slot13;
        tango = undefined;
        result = mike.bind(tango)();
        report = _closure1_slot4;
        zulu = report.useState;
        mike = 0;
        golf = zulu.bind(report)(mike);
        oscar = _closure1_slot3;
        zulu = 2;
        zulu = oscar.bind(tango)(golf, zulu);
        echo = zulu[mike];
        mike = 1;
        mike = zulu[mike];
        var _closure2_slot2 = mike;
        update = _closure1_slot0;
        kilo = _closure1_slot2;
        mike = 9;
        mike = kilo[mike];
        zulu = update.bind(tango)(mike);
        mike = zulu.useIsScreenLandscape;
        mike = mike.bind(zulu)();
        var _closure2_slot3 = mike;
        mike = 10;
        mike = kilo[mike];
        golf = update.bind(tango)(mike);
        oscar = golf.useStateFromStores;
        mike = _closure1_slot6;
        zulu = new Array(1);
        zulu[0] = mike;
        mike = function() {
            entity = _closure1_slot6;
            entity = entity.useReducedMotion;
            return entity;
        };
        romeo = oscar.bind(golf)(zulu, mike);
        zulu = report.useEffect;
        mike = new Array(1);
        mike[0] = entity;
        entity = function() {
            entity = function() {
                zulu = _closure2_slot1;
                entity = _closure1_slot9;
                mike = entity.UNKNOWN;
                entity = undefined;
                entity = zulu.bind(entity)(mike);
                return entity;
            };
            return entity;
        };
        entity = zulu.bind(report)(entity, mike);
        zulu = _closure1_slot10;
        entity = 11;
        entity = kilo[entity];
        entity = update.bind(tango)(entity);
        mike = entity.BottomSheet;
        entity = {};
        yankee = true;
        entity['startExpanded'] = yankee;
        golf = _closure1_slot11;
        oscar = _closure1_slot5;
        report = {};
        options = result.container;
        report['style'] = options;
        options = function(argFoo) { // Original name: onLayout
            _fun116016: for(var _fun116016_ip = 0; ; ) switch(_fun116016_ip) {
 0:
                entity = argFoo;
                entity = entity.nativeEvent;
                entity = entity.layout;
                mike = entity.width;
                entity = 32;
                tango = mike - entity;
                zulu = _closure2_slot2;
                entity = _closure2_slot3;
                mike = tango;
                if(!entity) { _fun116016_ip = 50; continue _fun116016 }
 43:
                entity = 2;
                mike = tango / entity;
 50:
                entity = undefined;
                entity = zulu.bind(entity)(mike);
                entity = undefined;
                return entity;
            }
        };
        report['onLayout'] = options;
        options = {};
        verify = 'image';
        options['accessibilityRole'] = verify;
        output = 12;
        verify = kilo[output];
        verify = update.bind(tango)(verify);
        backup = verify.intl;
        offset = backup.string;
        verify = kilo[output];
        verify = update.bind(tango)(verify);
        verify = verify.t;
        verify = verify.gCgirq;
        verify = offset.bind(backup)(verify);
        options['accessibilityLabel'] = verify;
        backup = _closure1_slot1;
        verify = 13;
        verify = kilo[verify];
        offset = backup.bind(tango)(verify);
        verify = {};
        source = result.videoContainer;
        verify['style'] = source;
        foxtrot = _closure1_slot12;
        verify['src'] = foxtrot;
        verify['width'] = echo;
        foxtrot = 1.7289156626506024;
        foxtrot = echo / foxtrot;
        verify['height'] = foxtrot;
        verify['muted'] = yankee;
        verify['paused'] = romeo;
        verify['ariaHidden'] = yankee;
        verify = zulu.bind(tango)(offset, verify);
        options['children'] = verify;
        verify = zulu.bind(tango)(oscar, options);
        options = new Array(3);
        options[0] = verify;
        verify = {};
        offset = result.info;
        verify['style'] = offset;
        yankee = 14;
        offset = kilo[yankee];
        offset = update.bind(tango)(offset);
        romeo = offset.Text;
        offset = {'variant': 'heading-lg/semibold', 'style': null, 'color': 'header-primary'};
        foxtrot = result.title;
        offset['style'] = foxtrot;
        foxtrot = kilo[output];
        foxtrot = update.bind(tango)(foxtrot);
        source = foxtrot.intl;
        echo = source.string;
        foxtrot = kilo[output];
        foxtrot = update.bind(tango)(foxtrot);
        foxtrot = foxtrot.t;
        foxtrot = foxtrot.gCgirq;
        foxtrot = echo.bind(source)(foxtrot);
        offset['children'] = foxtrot;
        romeo = zulu.bind(tango)(romeo, offset);
        offset = new Array(2);
        offset[0] = romeo;
        yankee = kilo[yankee];
        yankee = update.bind(tango)(yankee);
        romeo = yankee.Text;
        yankee = {'variant': 'text-md/normal', 'color': 'text-normal'};
        foxtrot = result.subtitle;
        yankee['style'] = foxtrot;
        foxtrot = kilo[output];
        foxtrot = update.bind(tango)(foxtrot);
        source = foxtrot.intl;
        echo = source.string;
        foxtrot = kilo[output];
        foxtrot = update.bind(tango)(foxtrot);
        foxtrot = foxtrot.t;
        foxtrot = foxtrot.fLMZFx;
        foxtrot = echo.bind(source)(foxtrot);
        yankee['children'] = foxtrot;
        yankee = zulu.bind(tango)(romeo, yankee);
        offset[1] = yankee;
        verify['children'] = offset;
        verify = golf.bind(tango)(oscar, verify);
        options[1] = verify;
        verify = {};
        yankee = result.footer;
        offset = new Array(1);
        offset[0] = yankee;
        verify['style'] = offset;
        foxtrot = 15;
        offset = kilo[foxtrot];
        yankee = backup.bind(tango)(offset);
        offset = {};
        romeo = result.button;
        offset['style'] = romeo;
        romeo = kilo[foxtrot];
        romeo = backup.bind(tango)(romeo);
        romeo = romeo.Colors;
        romeo = romeo.BRAND;
        offset['color'] = romeo;
        romeo = kilo[output];
        romeo = update.bind(tango)(romeo);
        source = romeo.intl;
        echo = source.string;
        romeo = kilo[output];
        romeo = update.bind(tango)(romeo);
        romeo = romeo.t;
        romeo = romeo.BQq86u;
        romeo = echo.bind(source)(romeo);
        offset['text'] = romeo;
        romeo = function() { // Original name: onPress
            tango = _closure1_slot1;
            zulu = _closure1_slot2;
            entity = 16;
            zulu = zulu[entity];
            entity = undefined;
            options = tango.bind(entity)(zulu);
            golf = options.open;
            romeo = _closure2_slot0;
            tango = _closure1_slot7;
            yankee = tango.ROLE_SUBSCRIPTIONS_TIERS;
            tango = _closure1_slot8;
            verify = tango.ROLE_SUBSCRIPTION_TIER_TEMPLATE;
            foxtrot = options;
            offset = undefined;
            tango = foxtrot[golf](romeo, yankee, offset, verify, options);
            zulu = _closure2_slot1;
            mike = _closure1_slot9;
            mike = mike.UNKNOWN;
            mike = zulu.bind(entity)(mike);
            return entity;
        };
        offset['onPress'] = romeo;
        yankee = zulu.bind(tango)(yankee, offset);
        offset = new Array(2);
        offset[0] = yankee;
        yankee = kilo[foxtrot];
        romeo = backup.bind(tango)(yankee);
        yankee = {};
        echo = result.button;
        yankee['style'] = echo;
        result = result.cancelButtonText;
        yankee['textStyle'] = result;
        result = kilo[output];
        result = update.bind(tango)(result);
        echo = result.intl;
        result = echo.string;
        output = kilo[output];
        output = update.bind(tango)(output);
        output = output.t;
        output = output.WAI6xs;
        output = result.bind(echo)(output);
        yankee['text'] = output;
        sizing = function() { // Original name: onPress
            zulu = _closure1_slot1;
            mike = _closure1_slot2;
            entity = 17;
            mike = mike[entity];
            entity = undefined;
            mike = zulu.bind(entity)(mike);
            entity = mike.hideActionSheet;
            entity = entity.bind(mike)();
            return entity;
        };
        yankee['onPress'] = sizing;
        foxtrot = kilo[foxtrot];
        foxtrot = backup.bind(tango)(foxtrot);
        foxtrot = foxtrot.Colors;
        foxtrot = foxtrot.TRANSPARENT;
        yankee['color'] = foxtrot;
        yankee = zulu.bind(tango)(romeo, yankee);
        offset[1] = yankee;
        verify['children'] = offset;
        verify = golf.bind(tango)(oscar, verify);
        options[2] = verify;
        report['children'] = options;
        report = golf.bind(tango)(oscar, report);
        entity['children'] = report;
        entity = zulu.bind(tango)(mike, entity);
        return entity;
    };
    zulu['default'] = mike;
    return entity;
})();