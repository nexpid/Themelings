// app/modules/guild_role_subscriptions/native/guild_settings/tier_templates/GuildRoleSubscriptionTierTemplateBasicInfo.tsx
export default (function(argFoo, argBar, argBaz, argCorge, _, argFred, argPlugh) {
    report = argBar;
    yankee = argBaz;
    zulu = argFred;
    oscar = argPlugh;
    var _closure1_slot0 = report;
    var _closure1_slot1 = yankee;
    var _closure1_slot2 = oscar;
    entity = global;
    options = entity.Object;
    golf = options.defineProperty;
    tango = {};
    entity = true;
    tango['value'] = entity;
    entity = '__esModule';
    entity = golf.bind(options)(zulu, entity, tango);
    entity = 0;
    golf = oscar[entity];
    tango = argCorge;
    entity = undefined;
    tango = tango.bind(entity)(golf);
    tango = 1;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.View;
    var _closure1_slot3 = tango;
    tango = 2;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.SubscriptionIntervalTypes;
    var _closure1_slot4 = tango;
    tango = 3;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.CurrencyCodes;
    var _closure1_slot5 = tango;
    tango = 4;
    golf = oscar[tango];
    golf = report.bind(entity)(golf);
    golf = golf.jsx;
    var _closure1_slot6 = golf;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.jsxs;
    var _closure1_slot7 = tango;
    tango = 5;
    tango = oscar[tango];
    options = report.bind(entity)(tango);
    golf = options.createStyles;
    tango = {};
    verify = {};
    offset = 24;
    verify['paddingBottom'] = offset;
    tango['container'] = verify;
    verify = {};
    offset = 'row';
    verify['flexDirection'] = offset;
    tango['header'] = verify;
    verify = {'width': 48, 'height': 48};
    offset = 6;
    romeo = oscar[offset];
    romeo = yankee.bind(entity)(romeo);
    romeo = romeo.radii;
    romeo = romeo.sm;
    verify['borderRadius'] = romeo;
    tango['image'] = verify;
    verify = {};
    offset = oscar[offset];
    offset = yankee.bind(entity)(offset);
    offset = offset.radii;
    offset = offset.sm;
    verify['borderRadius'] = offset;
    tango['templateCTAButton'] = verify;
    verify = {};
    offset = 16;
    verify['fontSize'] = offset;
    tango['templateCTAText'] = verify;
    tango = golf.bind(options)(tango);
    var _closure1_slot8 = tango;
    tango = 14;
    tango = oscar[tango];
    oscar = report.bind(entity)(tango);
    report = oscar.fileFinishedImporting;
    tango = 'modules/guild_role_subscriptions/native/guild_settings/tier_templates/GuildRoleSubscriptionTierTemplateBasicInfo.tsx';
    tango = report.bind(oscar)(tango);
    mike = function(argFoo) { // Original name: GuildRoleSubscriptionTierTemplateBasicInfo
        mike = argFoo;
        entity = mike.template;
        var _closure2_slot0 = entity;
        zulu = mike.handleSelectTemplateInPreview;
        var _closure2_slot1 = zulu;
        yankee = mike.subscriptionPlanTextStyle;
        output = mike.descriptionTextStyle;
        zulu = mike.closeActionSheet;
        var _closure2_slot2 = zulu;
        foxtrot = mike.descriptionTextProps;
        mike = _closure1_slot8;
        tango = undefined;
        offset = mike.bind(tango)();
        mike = entity.listings;
        entity = 0;
        entity = mike[entity];
        result = entity.image;
        control = entity.name;
        sierra = entity.price_tier;
        sizing = entity.description;
        zulu = _closure1_slot7;
        mike = _closure1_slot3;
        entity = {};
        report = offset.container;
        entity['style'] = report;
        report = {};
        oscar = offset.header;
        report['style'] = oscar;
        options = _closure1_slot6;
        golf = _closure1_slot1;
        kilo = _closure1_slot2;
        oscar = 7;
        oscar = kilo[oscar];
        romeo = golf.bind(tango)(oscar);
        oscar = {};
        backup = {};
        backup['uri'] = result;
        oscar['source'] = backup;
        backup = offset.image;
        oscar['style'] = backup;
        oscar = options.bind(tango)(romeo, oscar);
        romeo = new Array(3);
        romeo[0] = oscar;
        update = 8;
        oscar = kilo[update];
        backup = golf.bind(tango)(oscar);
        oscar = {};
        result = 16;
        oscar['size'] = result;
        oscar = options.bind(tango)(backup, oscar);
        romeo[1] = oscar;
        result = {};
        oscar = {};
        target = 1;
        oscar['flexShrink'] = target;
        result['style'] = oscar;
        backup = _closure1_slot0;
        oscar = 9;
        echo = kilo[oscar];
        echo = backup.bind(tango)(echo);
        source = echo.Text;
        echo = {'variant': 'heading-md/semibold', 'color': 'header-primary'};
        vacuum = {};
        sequence = 'wrap';
        vacuum['flexWrap'] = sequence;
        echo['style'] = vacuum;
        echo['children'] = control;
        source = options.bind(tango)(source, echo);
        echo = new Array(3);
        echo[0] = source;
        update = kilo[update];
        source = golf.bind(tango)(update);
        update = {};
        control = 4;
        update['size'] = control;
        update = options.bind(tango)(source, update);
        echo[1] = update;
        update = kilo[oscar];
        update = backup.bind(tango)(update);
        source = update.Text;
        update = {};
        control = 'heading-md/medium';
        update['variant'] = control;
        update['style'] = yankee;
        yankee = 10;
        control = kilo[yankee];
        control = backup.bind(tango)(control);
        config = control.intl;
        sequence = config.format;
        control = kilo[yankee];
        control = backup.bind(tango)(control);
        control = control.t;
        vacuum = control.CgmBaG;
        control = {};
        record = 11;
        record = kilo[record];
        papa = backup.bind(tango)(record);
        context = papa.formatPrice;
        record = _closure1_slot5;
        record = record.USD;
        record = context.bind(papa)(sierra, record);
        control['price'] = record;
        record = 12;
        record = kilo[record];
        papa = backup.bind(tango)(record);
        context = papa.formatPlanInterval;
        record = {};
        status = _closure1_slot4;
        status = status.MONTH;
        record['interval'] = status;
        record['interval_count'] = target;
        record = context.bind(papa)(record);
        control['interval'] = record;
        control = sequence.bind(config)(vacuum, control);
        update['children'] = control;
        update = options.bind(tango)(source, update);
        echo[2] = update;
        result['children'] = echo;
        result = zulu.bind(tango)(mike, result);
        romeo[2] = result;
        report['children'] = romeo;
        romeo = zulu.bind(tango)(mike, report);
        report = new Array(3);
        report[0] = romeo;
        oscar = kilo[oscar];
        oscar = backup.bind(tango)(oscar);
        romeo = oscar.Text;
        oscar = {};
        result = 'text-sm/normal';
        oscar['variant'] = result;
        oscar['style'] = output;
        whiskey = oscar;
        lima = foxtrot;
        foxtrot = copyDataProperties(whiskey, lima);
        foxtrot = 'children';
        oscar[foxtrot] = sizing;
        oscar = options.bind(tango)(romeo, oscar);
        report[1] = oscar;
        oscar = 13;
        oscar = kilo[oscar];
        golf = golf.bind(tango)(oscar);
        oscar = {};
        romeo = kilo[yankee];
        romeo = backup.bind(tango)(romeo);
        foxtrot = romeo.intl;
        romeo = foxtrot.string;
        yankee = kilo[yankee];
        yankee = backup.bind(tango)(yankee);
        yankee = yankee.t;
        yankee = yankee.1W7mCg;
        yankee = romeo.bind(foxtrot)(yankee);
        oscar['text'] = yankee;
        yankee = offset.templateCTAButton;
        oscar['style'] = yankee;
        offset = offset.templateCTAText;
        oscar['textStyle'] = offset;
        verify = function() { // Original name: onPress
            tango = _closure2_slot1;
            zulu = _closure2_slot0;
            mike = _closure2_slot2;
            entity = undefined;
            entity = tango.bind(entity)(zulu, mike);
            return entity;
        };
        oscar['onPress'] = verify;
        oscar = options.bind(tango)(golf, oscar);
        report[2] = oscar;
        entity['children'] = report;
        entity = zulu.bind(tango)(mike, entity);
        return entity;
    };
    zulu['GuildRoleSubscriptionTierTemplateBasicInfo'] = mike;
    return entity;
})();