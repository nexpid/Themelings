// app/modules/guild_role_subscriptions/native/guild_settings/tier_templates/GuildRoleSubscriptionTierTemplateBasicInfo.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    report = argBar;
    yankee = argBaz;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    var _closure1_slot1 = yankee;
    var _closure1_slot2 = oscard;
    entity = global;
    option = entity.Object;
    golfie = option.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(option)(zuuluu, entity, tangon);
    entity = 0;
    golfie = oscard[entity];
    tangon = argCor;
    entity = undefined;
    tangon = tangon.bind(entity)(golfie);
    tangon = 1;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.View;
    var _closure1_slot3 = tangon;
    tangon = 2;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.SubscriptionIntervalTypes;
    var _closure1_slot4 = tangon;
    tangon = 3;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.CurrencyCodes;
    var _closure1_slot5 = tangon;
    tangon = 4;
    golfie = oscard[tangon];
    golfie = report.bind(entity)(golfie);
    golfie = golfie.jsx;
    var _closure1_slot6 = golfie;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.jsxs;
    var _closure1_slot7 = tangon;
    tangon = 5;
    tangon = oscard[tangon];
    option = report.bind(entity)(tangon);
    golfie = option.createStyles;
    tangon = {};
    verify = {};
    offset = 24;
    verify['paddingBottom'] = offset;
    tangon['container'] = verify;
    verify = {};
    offset = 'row';
    verify['flexDirection'] = offset;
    tangon['header'] = verify;
    verify = {'width': 48, 'height': 48};
    offset = 6;
    romeon = oscard[offset];
    romeon = yankee.bind(entity)(romeon);
    romeon = romeon.radii;
    romeon = romeon.sm;
    verify['borderRadius'] = romeon;
    tangon['image'] = verify;
    verify = {};
    offset = oscard[offset];
    offset = yankee.bind(entity)(offset);
    offset = offset.radii;
    offset = offset.sm;
    verify['borderRadius'] = offset;
    tangon['templateCTAButton'] = verify;
    verify = {};
    offset = 16;
    verify['fontSize'] = offset;
    tangon['templateCTAText'] = verify;
    tangon = golfie.bind(option)(tangon);
    var _closure1_slot8 = tangon;
    tangon = 14;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/guild_role_subscriptions/native/guild_settings/tier_templates/GuildRoleSubscriptionTierTemplateBasicInfo.tsx';
    tangon = report.bind(oscard)(tangon);
    michal = function(argFoo) { // Original name: GuildRoleSubscriptionTierTemplateBasicInfo
        michal = argFoo;
        entity = michal.template;
        var _closure2_slot0 = entity;
        zuuluu = michal.handleSelectTemplateInPreview;
        var _closure2_slot1 = zuuluu;
        yankee = michal.subscriptionPlanTextStyle;
        output = michal.descriptionTextStyle;
        zuuluu = michal.closeActionSheet;
        var _closure2_slot2 = zuuluu;
        foxtra = michal.descriptionTextProps;
        michal = _closure1_slot8;
        tangon = undefined;
        offset = michal.bind(tangon)();
        michal = entity.listings;
        entity = 0;
        entity = michal[entity];
        result = entity.image;
        ctrled = entity.name;
        sierra = entity.price_tier;
        sizing = entity.description;
        zuuluu = _closure1_slot7;
        michal = _closure1_slot3;
        entity = {};
        report = offset.container;
        entity['style'] = report;
        report = {};
        oscard = offset.header;
        report['style'] = oscard;
        option = _closure1_slot6;
        golfie = _closure1_slot1;
        kiloes = _closure1_slot2;
        oscard = 7;
        oscard = kiloes[oscard];
        romeon = golfie.bind(tangon)(oscard);
        oscard = {};
        backup = {};
        backup['uri'] = result;
        oscard['source'] = backup;
        backup = offset.image;
        oscard['style'] = backup;
        oscard = option.bind(tangon)(romeon, oscard);
        romeon = new Array(3);
        romeon[0] = oscard;
        update = 8;
        oscard = kiloes[update];
        backup = golfie.bind(tangon)(oscard);
        oscard = {};
        result = 16;
        oscard['size'] = result;
        oscard = option.bind(tangon)(backup, oscard);
        romeon[1] = oscard;
        result = {};
        oscard = {};
        target = 1;
        oscard['flexShrink'] = target;
        result['style'] = oscard;
        backup = _closure1_slot0;
        oscard = 9;
        echoed = kiloes[oscard];
        echoed = backup.bind(tangon)(echoed);
        source = echoed.Text;
        echoed = {'variant': 'heading-md/semibold', 'color': 'header-primary'};
        vacuum = {};
        sequen = 'wrap';
        vacuum['flexWrap'] = sequen;
        echoed['style'] = vacuum;
        echoed['children'] = ctrled;
        source = option.bind(tangon)(source, echoed);
        echoed = new Array(3);
        echoed[0] = source;
        update = kiloes[update];
        source = golfie.bind(tangon)(update);
        update = {};
        ctrled = 4;
        update['size'] = ctrled;
        update = option.bind(tangon)(source, update);
        echoed[1] = update;
        update = kiloes[oscard];
        update = backup.bind(tangon)(update);
        source = update.Text;
        update = {};
        ctrled = 'heading-md/medium';
        update['variant'] = ctrled;
        update['style'] = yankee;
        yankee = 10;
        ctrled = kiloes[yankee];
        ctrled = backup.bind(tangon)(ctrled);
        config = ctrled.intl;
        sequen = config.format;
        ctrled = kiloes[yankee];
        ctrled = backup.bind(tangon)(ctrled);
        ctrled = ctrled.t;
        vacuum = ctrled.CgmBaG;
        ctrled = {};
        record = 11;
        record = kiloes[record];
        papara = backup.bind(tangon)(record);
        cntext = papara.formatPrice;
        record = _closure1_slot5;
        record = record.USD;
        record = cntext.bind(papara)(sierra, record);
        ctrled['price'] = record;
        record = 12;
        record = kiloes[record];
        papara = backup.bind(tangon)(record);
        cntext = papara.formatPlanInterval;
        record = {};
        status = _closure1_slot4;
        status = status.MONTH;
        record['interval'] = status;
        record['interval_count'] = target;
        record = cntext.bind(papara)(record);
        ctrled['interval'] = record;
        ctrled = sequen.bind(config)(vacuum, ctrled);
        update['children'] = ctrled;
        update = option.bind(tangon)(source, update);
        echoed[2] = update;
        result['children'] = echoed;
        result = zuuluu.bind(tangon)(michal, result);
        romeon[2] = result;
        report['children'] = romeon;
        romeon = zuuluu.bind(tangon)(michal, report);
        report = new Array(3);
        report[0] = romeon;
        oscard = kiloes[oscard];
        oscard = backup.bind(tangon)(oscard);
        romeon = oscard.Text;
        oscard = {};
        result = 'text-sm/normal';
        oscard['variant'] = result;
        oscard['style'] = output;
        whisks = oscard;
        limora = foxtra;
        foxtra = copyDataProperties(whisks, limora);
        foxtra = 'children';
        oscard[foxtra] = sizing;
        oscard = option.bind(tangon)(romeon, oscard);
        report[1] = oscard;
        oscard = 13;
        oscard = kiloes[oscard];
        golfie = golfie.bind(tangon)(oscard);
        oscard = {};
        romeon = kiloes[yankee];
        romeon = backup.bind(tangon)(romeon);
        foxtra = romeon.intl;
        romeon = foxtra.string;
        yankee = kiloes[yankee];
        yankee = backup.bind(tangon)(yankee);
        yankee = yankee.t;
        yankee = yankee.1W7mCg;
        yankee = romeon.bind(foxtra)(yankee);
        oscard['text'] = yankee;
        yankee = offset.templateCTAButton;
        oscard['style'] = yankee;
        offset = offset.templateCTAText;
        oscard['textStyle'] = offset;
        verify = function() { // Original name: onPress
            tangon = _closure2_slot1;
            zuuluu = _closure2_slot0;
            michal = _closure2_slot2;
            entity = undefined;
            entity = tangon.bind(entity)(zuuluu, michal);
            return entity;
        };
        oscard['onPress'] = verify;
        oscard = option.bind(tangon)(golfie, oscard);
        report[2] = oscard;
        entity['children'] = report;
        entity = zuuluu.bind(tangon)(michal, entity);
        return entity;
    };
    zuuluu['GuildRoleSubscriptionTierTemplateBasicInfo'] = michal;
    return entity;
})();