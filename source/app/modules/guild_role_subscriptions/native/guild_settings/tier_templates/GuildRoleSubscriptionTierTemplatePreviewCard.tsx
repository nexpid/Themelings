// app/modules/guild_role_subscriptions/native/guild_settings/tier_templates/GuildRoleSubscriptionTierTemplatePreviewCard.tsx
export default (function(argFoo, argBar, argBaz, argCorge, _, argFred, argPlugh) {
    oscar = argBar;
    romeo = argBaz;
    report = argCorge;
    zulu = argFred;
    golf = argPlugh;
    var _closure1_slot0 = oscar;
    var _closure1_slot1 = romeo;
    var _closure1_slot2 = report;
    var _closure1_slot3 = golf;
    entity = function(argFoo) { // Original name: ContentHeader
        entity = argFoo;
        verify = entity.count;
        oscar = entity.title;
        entity = _closure1_slot11;
        tango = undefined;
        offset = entity.bind(tango)();
        zulu = _closure1_slot10;
        golf = _closure1_slot0;
        yankee = _closure1_slot3;
        report = 6;
        entity = yankee[report];
        entity = golf.bind(tango)(entity);
        mike = entity.Text;
        entity = {'variant': 'text-xs/bold', 'color': 'text-muted'};
        romeo = offset.contentHeader;
        entity['style'] = romeo;
        options = _closure1_slot9;
        report = yankee[report];
        report = golf.bind(tango)(report);
        golf = report.Text;
        report = {'variant': 'text-xs/bold', 'color': 'text-normal'};
        offset = offset.contentHeader;
        report['style'] = offset;
        report['children'] = verify;
        golf = options.bind(tango)(golf, report);
        report = new Array(3);
        report[0] = golf;
        golf = ' ';
        report[1] = golf;
        report[2] = oscar;
        entity['children'] = report;
        entity = zulu.bind(tango)(mike, entity);
        return entity;
    };
    var _closure1_slot12 = entity;
    entity = function() { // Original name: Separator
        mike = _closure1_slot11;
        tango = undefined;
        report = mike.bind(tango)();
        zulu = _closure1_slot9;
        mike = _closure1_slot6;
        entity = {};
        report = report.separator;
        entity['style'] = report;
        entity = zulu.bind(tango)(mike, entity);
        return entity;
    };
    var _closure1_slot13 = entity;
    entity = function(argFoo) { // Original name: BenefitShowCase
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            entity = argFoo;
            yankee = entity.title;
            verify = entity.description;
            tango = _closure1_slot10;
            zulu = _closure1_slot6;
            mike = {};
            golf = 'string';
            report = typeof yankee;
            entity = yankee;
            if(!(golf === report)) { _fun00002_ip = 95; continue _fun00001 }
 40:
            offset = _closure1_slot9;
            golf = _closure1_slot0;
            options = _closure1_slot3;
            report = 6;
            report = options[report];
            options = undefined;
            report = golf.bind(options)(report);
            golf = report.Text;
            report = {'variant': 'text-md/semibold', 'color': 'text-normal'};
            report['children'] = yankee;
            entity = offset.bind(options)(golf, report);
 95:
            report = new Array(3);
            report[0] = entity;
            yankee = _closure1_slot9;
            options = _closure1_slot1;
            offset = _closure1_slot3;
            entity = 11;
            golf = offset[entity];
            entity = undefined;
            options = options.bind(entity)(golf);
            golf = {};
            romeo = 2;
            golf['size'] = romeo;
            golf = yankee.bind(entity)(options, golf);
            report[1] = golf;
            options = _closure1_slot9;
            golf = _closure1_slot0;
            oscar = 6;
            oscar = offset[oscar];
            oscar = golf.bind(entity)(oscar);
            golf = oscar.Text;
            oscar = {'variant': 'text-sm/medium', 'color': 'interactive-normal'};
            oscar['children'] = verify;
            oscar = options.bind(entity)(golf, oscar);
            report[2] = oscar;
            mike['children'] = report;
            entity = tango.bind(entity)(zulu, mike);
            return entity;
        }
    };
    var _closure1_slot14 = entity;
    entity = function(argFoo) { // Original name: ChannelBenefitShowCase
        entity = argFoo;
        entity = entity.channel;
        report = entity.description;
        sizing = entity.type;
        yankee = entity.name;
        oscar = _closure1_slot10;
        zulu = _closure1_slot6;
        mike = {};
        tango = {'flexDirection': 'row', 'alignItems': 'center'};
        mike['style'] = tango;
        foxtrot = _closure1_slot9;
        offset = _closure1_slot1;
        romeo = _closure1_slot3;
        verify = 12;
        golf = romeo[verify];
        tango = undefined;
        options = offset.bind(tango)(golf);
        golf = {};
        verify = romeo[verify];
        verify = offset.bind(tango)(verify);
        verify = verify.Sizes;
        verify = verify.REFRESH_SMALL_16;
        golf['size'] = verify;
        verify = _closure1_slot0;
        backup = 13;
        backup = romeo[backup];
        kilo = verify.bind(tango)(backup);
        backup = kilo.getChannelIcon;
        backup = backup.bind(kilo)(sizing);
        golf['source'] = backup;
        options = foxtrot.bind(tango)(options, golf);
        golf = new Array(3);
        golf[0] = options;
        foxtrot = _closure1_slot9;
        options = 11;
        options = romeo[options];
        offset = offset.bind(tango)(options);
        options = {};
        backup = 4;
        options['size'] = backup;
        options = foxtrot.bind(tango)(offset, options);
        golf[1] = options;
        offset = _closure1_slot9;
        options = 6;
        options = romeo[options];
        options = verify.bind(tango)(options);
        verify = options.Text;
        options = {'variant': 'text-md/semibold', 'color': 'text-normal'};
        options['children'] = yankee;
        options = offset.bind(tango)(verify, options);
        golf[2] = options;
        mike['children'] = golf;
        oscar = oscar.bind(tango)(zulu, mike);
        zulu = _closure1_slot9;
        mike = _closure1_slot14;
        entity = {};
        entity['title'] = oscar;
        entity['description'] = report;
        entity = zulu.bind(tango)(mike, entity);
        return entity;
    };
    var _closure1_slot15 = entity;
    entity = function() { // Original name: ViewEntireTemplateFooter
        entity = _closure1_slot11;
        tango = undefined;
        kilo = entity.bind(tango)();
        zulu = _closure1_slot10;
        mike = _closure1_slot6;
        entity = {};
        report = kilo.viewEntireTemplateFooter;
        entity['style'] = report;
        options = _closure1_slot10;
        golf = _closure1_slot6;
        report = {};
        yankee = _closure1_slot9;
        output = _closure1_slot0;
        foxtrot = _closure1_slot3;
        verify = 6;
        verify = foxtrot[verify];
        verify = output.bind(tango)(verify);
        offset = verify.Text;
        verify = {'variant': 'text-sm/semibold', 'color': 'interactive-hover'};
        romeo = {};
        backup = -1;
        romeo['marginTop'] = backup;
        verify['style'] = romeo;
        romeo = 14;
        backup = foxtrot[romeo];
        backup = output.bind(tango)(backup);
        sizing = backup.intl;
        backup = sizing.string;
        romeo = foxtrot[romeo];
        romeo = output.bind(tango)(romeo);
        romeo = romeo.t;
        romeo = romeo.kejaOD;
        romeo = backup.bind(sizing)(romeo);
        verify['children'] = romeo;
        offset = yankee.bind(tango)(offset, verify);
        verify = new Array(3);
        verify[0] = offset;
        backup = _closure1_slot9;
        romeo = _closure1_slot1;
        offset = 11;
        offset = foxtrot[offset];
        yankee = romeo.bind(tango)(offset);
        offset = {};
        sizing = 3;
        offset['size'] = sizing;
        offset = backup.bind(tango)(yankee, offset);
        verify[1] = offset;
        backup = _closure1_slot9;
        yankee = _closure1_slot6;
        offset = {};
        kilo = kilo.viewEntireTemplateFooterUnderline;
        offset['style'] = kilo;
        offset = backup.bind(tango)(yankee, offset);
        verify[2] = offset;
        report['children'] = verify;
        golf = options.bind(tango)(golf, report);
        report = new Array(2);
        report[0] = golf;
        options = _closure1_slot9;
        golf = _closure1_slot6;
        oscar = {};
        yankee = 12;
        verify = foxtrot[yankee];
        offset = romeo.bind(tango)(verify);
        verify = {};
        yankee = foxtrot[yankee];
        yankee = romeo.bind(tango)(yankee);
        yankee = yankee.Sizes;
        yankee = yankee.REFRESH_SMALL_16;
        verify['size'] = yankee;
        yankee = 15;
        yankee = foxtrot[yankee];
        yankee = romeo.bind(tango)(yankee);
        verify['source'] = yankee;
        yankee = {};
        foxtrot = {};
        romeo = '180deg';
        foxtrot['rotate'] = romeo;
        romeo = new Array(1);
        romeo[0] = foxtrot;
        yankee['transform'] = romeo;
        verify['style'] = yankee;
        verify = options.bind(tango)(offset, verify);
        oscar['children'] = verify;
        oscar = options.bind(tango)(golf, oscar);
        report[1] = oscar;
        entity['children'] = report;
        entity = zulu.bind(tango)(mike, entity);
        return entity;
    };
    var _closure1_slot16 = entity;
    entity = global;
    verify = entity.Object;
    options = verify.defineProperty;
    mike = {};
    entity = true;
    mike['value'] = entity;
    entity = '__esModule';
    entity = options.bind(verify)(zulu, entity, mike);
    foxtrot = 0;
    mike = golf[foxtrot];
    entity = undefined;
    mike = report.bind(entity)(mike);
    var _closure1_slot4 = mike;
    mike = 1;
    mike = golf[mike];
    mike = oscar.bind(entity)(mike);
    report = mike.TouchableOpacity;
    var _closure1_slot5 = report;
    mike = mike.View;
    var _closure1_slot6 = mike;
    mike = 2;
    mike = golf[mike];
    mike = oscar.bind(entity)(mike);
    report = mike.AnalyticEvents;
    var _closure1_slot7 = report;
    mike = mike.GuildSettingsSections;
    var _closure1_slot8 = mike;
    mike = 3;
    report = golf[mike];
    report = oscar.bind(entity)(report);
    report = report.jsx;
    var _closure1_slot9 = report;
    mike = golf[mike];
    mike = oscar.bind(entity)(mike);
    mike = mike.jsxs;
    var _closure1_slot10 = mike;
    mike = 4;
    mike = golf[mike];
    verify = oscar.bind(entity)(mike);
    options = verify.createStyles;
    report = {};
    offset = {};
    backup = 16;
    offset['padding'] = backup;
    yankee = 5;
    mike = golf[yankee];
    mike = romeo.bind(entity)(mike);
    mike = mike.radii;
    mike = mike.md;
    offset['borderRadius'] = mike;
    mike = golf[yankee];
    mike = romeo.bind(entity)(mike);
    mike = mike.colors;
    mike = mike.BACKGROUND_SECONDARY_ALT;
    offset['backgroundColor'] = mike;
    mike = 319;
    offset['width'] = mike;
    report['container'] = offset;
    offset = {};
    kilo = golf[yankee];
    kilo = romeo.bind(entity)(kilo);
    kilo = kilo.colors;
    kilo = kilo.HEADER_SECONDARY;
    offset['color'] = kilo;
    report['subscriptionPlanTextStyle'] = offset;
    offset = {'color': null, 'paddingTop': 8, 'paddingBottom': 16};
    kilo = golf[yankee];
    kilo = romeo.bind(entity)(kilo);
    kilo = kilo.colors;
    kilo = kilo.TEXT_MUTED;
    offset['color'] = kilo;
    report['descriptionPlanTextStyle'] = offset;
    offset = {'width': '100%', 'height': 1, 'backgroundColor': null, 'marginVertical': 16};
    kilo = golf[yankee];
    kilo = romeo.bind(entity)(kilo);
    kilo = kilo.colors;
    kilo = kilo.BACKGROUND_MODIFIER_HOVER;
    offset['backgroundColor'] = kilo;
    report['separator'] = offset;
    offset = {};
    kilo = golf[yankee];
    kilo = romeo.bind(entity)(kilo);
    kilo = kilo.colors;
    kilo = kilo.BACKGROUND_SECONDARY;
    offset['backgroundColor'] = kilo;
    kilo = golf[yankee];
    kilo = romeo.bind(entity)(kilo);
    kilo = kilo.radii;
    kilo = kilo.sm;
    offset['borderTopRightRadius'] = kilo;
    kilo = golf[yankee];
    kilo = romeo.bind(entity)(kilo);
    kilo = kilo.radii;
    kilo = kilo.sm;
    offset['borderTopLeftRadius'] = kilo;
    offset['padding'] = backup;
    offset['paddingBottom'] = foxtrot;
    report['contentContainer'] = offset;
    offset = {};
    foxtrot = 'uppercase';
    offset['textTransform'] = foxtrot;
    report['contentHeader'] = offset;
    offset = {'paddingVertical': 16, 'display': 'flex', 'flexDirection': 'row', 'justifyContent': 'center', 'alignItems': 'center', 'backgroundColor': null, 'borderBottomLeftRadius': null, 'borderBottomRightRadius': null, 'marginLeft': 4294967280, 'marginRight': 4294967280, 'marginTop': 16};
    foxtrot = golf[yankee];
    foxtrot = romeo.bind(entity)(foxtrot);
    foxtrot = foxtrot.colors;
    foxtrot = foxtrot.BACKGROUND_PRIMARY;
    offset['backgroundColor'] = foxtrot;
    foxtrot = golf[yankee];
    foxtrot = romeo.bind(entity)(foxtrot);
    foxtrot = foxtrot.radii;
    foxtrot = foxtrot.sm;
    offset['borderBottomLeftRadius'] = foxtrot;
    foxtrot = golf[yankee];
    foxtrot = romeo.bind(entity)(foxtrot);
    foxtrot = foxtrot.radii;
    foxtrot = foxtrot.sm;
    offset['borderBottomRightRadius'] = foxtrot;
    report['viewEntireTemplateFooter'] = offset;
    offset = {'position': 'absolute', 'left': 0, 'right': 0, 'height': 1, 'bottom': 0};
    yankee = golf[yankee];
    yankee = romeo.bind(entity)(yankee);
    yankee = yankee.colors;
    yankee = yankee.INTERACTIVE_MUTED;
    offset['backgroundColor'] = yankee;
    report['viewEntireTemplateFooterUnderline'] = offset;
    report = options.bind(verify)(report);
    var _closure1_slot11 = report;
    report = 24;
    report = golf[report];
    golf = oscar.bind(entity)(report);
    oscar = golf.fileFinishedImporting;
    report = 'modules/guild_role_subscriptions/native/guild_settings/tier_templates/GuildRoleSubscriptionTierTemplatePreviewCard.tsx';
    report = oscar.bind(golf)(report);
    tango = function(argFoo) { // Original name: GuildRoleSubscriptionTierTemplatePreviewCard
        _fun00003: for(var _fun00004_ip = 0; ; ) switch(_fun00004_ip) {
 0:
            entity = argFoo;
            yankee = entity.template;
            var _closure2_slot0 = yankee;
            backup = entity.priceTiers;
            romeo = entity.guildId;
            var _closure2_slot1 = romeo;
            sizing = entity.groupListingId;
            var _closure2_slot2 = sizing;
            options = entity.editGroupId;
            tango = undefined;
            var _closure2_slot6 = tango;
            var _closure2_slot7 = tango;
            var _closure2_slot8 = tango;
            entity = _closure1_slot11;
            verify = entity.bind(tango)();
            mike = _closure1_slot0;
            report = _closure1_slot3;
            entity = 16;
            entity = report[entity];
            zulu = mike.bind(tango)(entity);
            entity = zulu.useNavigation;
            entity = entity.bind(zulu)();
            var _closure2_slot3 = entity;
            oscar = _closure1_slot2;
            zulu = 17;
            zulu = report[zulu];
            golf = oscar.bind(tango)(zulu);
            oscar = golf.useEditStateIds;
            zulu = {};
            kilo = true;
            zulu['includeSoftDeleted'] = kilo;
            zulu = oscar.bind(golf)(sizing, options, zulu);
            output = zulu.addNewEditStateFromTemplate;
            var _closure2_slot4 = output;
            oscar = yankee.listings;
            zulu = 0;
            oscar = oscar[zulu];
            options = oscar.price_tier;
            golf = oscar.channels;
            oscar = oscar.additional_perks;
            result = golf.length;
            sequence = oscar.length;
            target = golf[zulu];
            config = oscar[zulu];
            kilo = _closure1_slot4;
            golf = kilo.useCallback;
            oscar = new Array(4);
            oscar[0] = output;
            oscar[1] = sizing;
            oscar[2] = entity;
            oscar[3] = romeo;
            entity = function(argFoo, argBar) {
                _fun00005: for(var _fun00006_ip = 0; ; ) switch(_fun00006_ip) {
 0:
                    tango = argFoo;
                    report = _closure1_slot0;
                    zulu = _closure1_slot3;
                    entity = 18;
                    zulu = zulu[entity];
                    entity = undefined;
                    oscar = report.bind(entity)(zulu);
                    report = oscar.stashTemplateChannels;
                    zulu = _closure2_slot1;
                    zulu = report.bind(oscar)(tango, zulu);
                    zulu = _closure2_slot4;
                    oscar = zulu.bind(entity)(tango);
                    zulu = argBar;
                    if(!zulu) { _fun00006_ip = 92; continue _fun00005 }
 62:
                    tango = _closure1_slot1;
                    report = _closure1_slot3;
                    zulu = 7;
                    zulu = report[zulu];
                    tango = tango.bind(entity)(zulu);
                    zulu = tango.hideActionSheet;
                    zulu = zulu.bind(tango)();
 92:
                    tango = _closure1_slot1;
                    yankee = _closure1_slot3;
                    zulu = 19;
                    zulu = yankee[zulu];
                    options = tango.bind(entity)(zulu);
                    report = options.track;
                    zulu = _closure1_slot7;
                    tango = zulu.ROLE_SUBSCRIPTION_LISTING_TEMPLATE_SELECTOR_EXITED;
                    zulu = {};
                    verify = 'template_selected';
                    zulu['exit_reason'] = verify;
                    offset = _closure1_slot0;
                    verify = 20;
                    verify = yankee[verify];
                    yankee = offset.bind(entity)(verify);
                    offset = yankee.collectGuildAnalyticsMetadata;
                    verify = _closure2_slot1;
                    romeo = offset.bind(yankee)(verify);
                    foxtrot = zulu;
                    verify = copyDataProperties(foxtrot, romeo);
                    zulu = report.bind(options)(tango, zulu);
                    report = _closure2_slot3;
                    tango = report.replace;
                    mike = _closure1_slot8;
                    zulu = mike.ROLE_SUBSCRIPTIONS_TIER_EDIT;
                    mike = {};
                    golf = _closure2_slot2;
                    mike['groupListingId'] = golf;
                    mike['initialEditStateId'] = oscar;
                    mike = tango.bind(report)(zulu, mike);
                    return entity;
                }
            };
            golf = golf.bind(kilo)(entity, oscar);
            var _closure2_slot5 = golf;
            entity = 21;
            entity = report[entity];
            oscar = mike.bind(tango)(entity);
            report = oscar.useSuggestedUnusedPrices;
            entity = null;
            kilo = entity != backup;
            mike = undefined;
            if(!kilo) { _fun00004_ip = 279; continue _fun00003 }
 276:
            mike = backup;
 279:
            oscar = report.bind(oscar)(romeo, mike, options);
            _closure2_slot6 = oscar;
            entity = entity != oscar;
            if(!entity) { _fun00004_ip = 306; continue _fun00003 }
 297:
            mike = oscar.length;
            entity = mike > zulu;
 306:
            _closure2_slot7 = entity;
            report = _closure1_slot4;
            zulu = report.useCallback;
            mike = new Array(3);
            mike[0] = golf;
            mike[1] = oscar;
            mike[2] = entity;
            entity = function(argFoo, argBar) {
                _fun00007: for(var _fun00008_ip = 0; ; ) switch(_fun00008_ip) {
 0:
                    golf = argFoo;
                    mike = _closure2_slot7;
                    oscar = _closure2_slot5;
                    if(mike) { _fun00008_ip = 30; continue _fun00007 }
 17:
                    zulu = undefined;
                    mike = argBar;
                    mike = oscar.bind(zulu)(golf, mike);
                    _fun00008_ip = 129; continue _fun00007;
 30:
                    entity = _closure2_slot6;
                    report = _closure1_slot1;
                    mike = _closure1_slot3;
                    tango = 7;
                    tango = mike[tango];
                    verify = undefined;
                    report = report.bind(verify)(tango);
                    tango = report.openLazy;
                    options = _closure1_slot0;
                    zulu = 9;
                    zulu = mike[zulu];
                    options = options.bind(verify)(zulu);
                    zulu = 10;
                    zulu = mike[zulu];
                    mike = mike.paths;
                    zulu = options.bind(verify)(zulu, mike);
                    mike = {};
                    mike['selectedTemplate'] = golf;
                    mike['handleCreateFromTemplate'] = oscar;
                    mike['newPricesToPick'] = entity;
                    entity = 'TierTemplatePriceReselectionCard';
                    entity = tango.bind(report)(zulu, entity, mike);
 129:
                    entity = undefined;
                    return entity;
                }
            };
            options = zulu.bind(report)(entity, mike);
            _closure2_slot8 = options;
            zulu = _closure1_slot10;
            mike = _closure1_slot6;
            entity = {};
            report = verify.container;
            entity['style'] = report;
            golf = _closure1_slot9;
            papa = _closure1_slot0;
            control = _closure1_slot3;
            report = 22;
            report = control[report];
            report = papa.bind(tango)(report);
            oscar = report.GuildRoleSubscriptionTierTemplateBasicInfo;
            report = {};
            report['template'] = yankee;
            report['handleSelectTemplateInPreview'] = options;
            options = verify.subscriptionPlanTextStyle;
            report['subscriptionPlanTextStyle'] = options;
            options = verify.descriptionPlanTextStyle;
            report['descriptionTextStyle'] = options;
            options = false;
            report['closeActionSheet'] = options;
            options = {'numberOfLines': 2, 'ellipsizeMode': 'tail'};
            report['descriptionTextProps'] = options;
            oscar = golf.bind(tango)(oscar, report);
            report = new Array(2);
            report[0] = oscar;
            options = _closure1_slot10;
            golf = _closure1_slot5;
            oscar = {};
            verify = verify.contentContainer;
            oscar['style'] = verify;
            verify = function() { // Original name: onPress
                options = _closure2_slot0;
                golf = _closure2_slot1;
                mike = _closure2_slot8;
                oscar = _closure1_slot1;
                zulu = _closure1_slot3;
                entity = 7;
                report = zulu[entity];
                entity = undefined;
                oscar = oscar.bind(entity)(report);
                report = oscar.openLazy;
                verify = _closure1_slot0;
                tango = 9;
                tango = zulu[tango];
                verify = verify.bind(entity)(tango);
                tango = 8;
                tango = zulu[tango];
                zulu = zulu.paths;
                tango = verify.bind(entity)(tango, zulu);
                zulu = {};
                zulu['template'] = options;
                zulu['guildId'] = golf;
                zulu['handleSelectTemplateInPreview'] = mike;
                mike = 'TierTemplateCard';
                mike = report.bind(oscar)(tango, mike, zulu);
                return entity;
            };
            oscar['onPress'] = verify;
            romeo = _closure1_slot10;
            verify = 23;
            verify = control[verify];
            verify = papa.bind(tango)(verify);
            yankee = verify.GappedList;
            verify = {};
            foxtrot = function() { // Original name: renderGap
                tango = _closure1_slot9;
                zulu = _closure1_slot13;
                mike = undefined;
                entity = {};
                entity = tango.bind(mike)(zulu, entity);
                return entity;
            };
            verify['renderGap'] = foxtrot;
            kilo = _closure1_slot10;
            backup = _closure1_slot6;
            foxtrot = {};
            output = _closure1_slot9;
            vacuum = _closure1_slot12;
            sizing = {};
            context = 14;
            echo = control[context];
            echo = papa.bind(tango)(echo);
            record = echo.intl;
            source = record.formatToPlainString;
            echo = control[context];
            echo = papa.bind(tango)(echo);
            echo = echo.t;
            update = echo.y7dUrq;
            echo = {};
            echo['numChannels'] = result;
            echo = source.bind(record)(update, echo);
            sizing['title'] = echo;
            sizing['count'] = result;
            output = output.bind(tango)(vacuum, sizing);
            sizing = new Array(4);
            sizing[0] = output;
            source = _closure1_slot9;
            echo = _closure1_slot1;
            result = 11;
            output = control[result];
            update = echo.bind(tango)(output);
            output = {};
            record = 12;
            output['size'] = record;
            output = source.bind(tango)(update, output);
            sizing[1] = output;
            source = _closure1_slot9;
            update = _closure1_slot15;
            output = {};
            output['channel'] = target;
            output = source.bind(tango)(update, output);
            sizing[2] = output;
            target = _closure1_slot9;
            output = control[result];
            update = echo.bind(tango)(output);
            output = {};
            source = 6;
            output['size'] = source;
            output = target.bind(tango)(update, output);
            sizing[3] = output;
            foxtrot['children'] = sizing;
            backup = kilo.bind(tango)(backup, foxtrot);
            foxtrot = new Array(2);
            foxtrot[0] = backup;
            sizing = _closure1_slot10;
            kilo = _closure1_slot6;
            backup = {};
            update = _closure1_slot9;
            output = {};
            target = control[context];
            target = papa.bind(tango)(target);
            status = target.intl;
            target = status.formatToPlainString;
            context = control[context];
            context = papa.bind(tango)(context);
            context = context.t;
            papa = context.MR7oOD;
            context = {};
            context['numBenefits'] = sequence;
            context = target.bind(status)(papa, context);
            output['title'] = context;
            output['count'] = sequence;
            update = update.bind(tango)(vacuum, output);
            output = new Array(4);
            output[0] = update;
            sequence = _closure1_slot9;
            update = control[result];
            vacuum = echo.bind(tango)(update);
            update = {};
            update['size'] = record;
            update = sequence.bind(tango)(vacuum, update);
            output[1] = update;
            sequence = _closure1_slot9;
            vacuum = _closure1_slot14;
            update = {};
            record = config.name;
            update['title'] = record;
            config = config.description;
            update['description'] = config;
            update = sequence.bind(tango)(vacuum, update);
            output[2] = update;
            update = _closure1_slot9;
            result = control[result];
            echo = echo.bind(tango)(result);
            result = {};
            result['size'] = source;
            result = update.bind(tango)(echo, result);
            output[3] = result;
            backup['children'] = output;
            backup = sizing.bind(tango)(kilo, backup);
            foxtrot[1] = backup;
            verify['children'] = foxtrot;
            yankee = romeo.bind(tango)(yankee, verify);
            verify = new Array(2);
            verify[0] = yankee;
            romeo = _closure1_slot9;
            yankee = _closure1_slot16;
            offset = {};
            offset = romeo.bind(tango)(yankee, offset);
            verify[1] = offset;
            oscar['children'] = verify;
            oscar = options.bind(tango)(golf, oscar);
            report[1] = oscar;
            entity['children'] = report;
            entity = zulu.bind(tango)(mike, entity);
            return entity;
        }
    };
    zulu['default'] = tango;
    zulu['CARD_WIDTH'] = mike;
    return entity;
})();