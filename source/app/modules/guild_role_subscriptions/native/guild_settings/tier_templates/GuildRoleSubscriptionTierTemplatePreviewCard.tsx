// app/modules/guild_role_subscriptions/native/guild_settings/tier_templates/GuildRoleSubscriptionTierTemplatePreviewCard.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    oscard = argBar;
    romeon = argBaz;
    report = argCor;
    zuuluu = argFre;
    golfie = argPlu;
    var _closure1_slot0 = oscard;
    var _closure1_slot1 = romeon;
    var _closure1_slot2 = report;
    var _closure1_slot3 = golfie;
    entity = function(argFoo) { // Original name: ContentHeader
        entity = argFoo;
        verify = entity.count;
        oscard = entity.title;
        entity = _closure1_slot11;
        tangon = undefined;
        offset = entity.bind(tangon)();
        zuuluu = _closure1_slot10;
        golfie = _closure1_slot0;
        yankee = _closure1_slot3;
        report = 6;
        entity = yankee[report];
        entity = golfie.bind(tangon)(entity);
        michal = entity.Text;
        entity = {'variant': 'text-xs/bold', 'color': 'text-muted'};
        romeon = offset.contentHeader;
        entity['style'] = romeon;
        option = _closure1_slot9;
        report = yankee[report];
        report = golfie.bind(tangon)(report);
        golfie = report.Text;
        report = {'variant': 'text-xs/bold', 'color': 'text-normal'};
        offset = offset.contentHeader;
        report['style'] = offset;
        report['children'] = verify;
        golfie = option.bind(tangon)(golfie, report);
        report = new Array(3);
        report[0] = golfie;
        golfie = ' ';
        report[1] = golfie;
        report[2] = oscard;
        entity['children'] = report;
        entity = zuuluu.bind(tangon)(michal, entity);
        return entity;
    };
    var _closure1_slot12 = entity;
    entity = function() { // Original name: Separator
        michal = _closure1_slot11;
        tangon = undefined;
        report = michal.bind(tangon)();
        zuuluu = _closure1_slot9;
        michal = _closure1_slot6;
        entity = {};
        report = report.separator;
        entity['style'] = report;
        entity = zuuluu.bind(tangon)(michal, entity);
        return entity;
    };
    var _closure1_slot13 = entity;
    entity = function(argFoo) { // Original name: BenefitShowCase
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            entity = argFoo;
            yankee = entity.title;
            verify = entity.description;
            tangon = _closure1_slot10;
            zuuluu = _closure1_slot6;
            michal = {};
            golfie = 'string';
            report = typeof yankee;
            entity = yankee;
            if(!(golfie === report)) { _fun00002_ip = 95; continue _fun00001 }
 40:
            offset = _closure1_slot9;
            golfie = _closure1_slot0;
            option = _closure1_slot3;
            report = 6;
            report = option[report];
            option = undefined;
            report = golfie.bind(option)(report);
            golfie = report.Text;
            report = {'variant': 'text-md/semibold', 'color': 'text-normal'};
            report['children'] = yankee;
            entity = offset.bind(option)(golfie, report);
 95:
            report = new Array(3);
            report[0] = entity;
            yankee = _closure1_slot9;
            option = _closure1_slot1;
            offset = _closure1_slot3;
            entity = 11;
            golfie = offset[entity];
            entity = undefined;
            option = option.bind(entity)(golfie);
            golfie = {};
            romeon = 2;
            golfie['size'] = romeon;
            golfie = yankee.bind(entity)(option, golfie);
            report[1] = golfie;
            option = _closure1_slot9;
            golfie = _closure1_slot0;
            oscard = 6;
            oscard = offset[oscard];
            oscard = golfie.bind(entity)(oscard);
            golfie = oscard.Text;
            oscard = {'variant': 'text-sm/medium', 'color': 'interactive-normal'};
            oscard['children'] = verify;
            oscard = option.bind(entity)(golfie, oscard);
            report[2] = oscard;
            michal['children'] = report;
            entity = tangon.bind(entity)(zuuluu, michal);
            return entity;
        }
    };
    var _closure1_slot14 = entity;
    entity = function(argFoo) { // Original name: ChannelBenefitShowCase
        entity = argFoo;
        entity = entity.channel;
        report = entity.description;
        sizing = entity.type;
        yankee = entity.name;
        oscard = _closure1_slot10;
        zuuluu = _closure1_slot6;
        michal = {};
        tangon = {'flexDirection': 'row', 'alignItems': 'center'};
        michal['style'] = tangon;
        foxtra = _closure1_slot9;
        offset = _closure1_slot1;
        romeon = _closure1_slot3;
        verify = 12;
        golfie = romeon[verify];
        tangon = undefined;
        option = offset.bind(tangon)(golfie);
        golfie = {};
        verify = romeon[verify];
        verify = offset.bind(tangon)(verify);
        verify = verify.Sizes;
        verify = verify.REFRESH_SMALL_16;
        golfie['size'] = verify;
        verify = _closure1_slot0;
        backup = 13;
        backup = romeon[backup];
        kiloes = verify.bind(tangon)(backup);
        backup = kiloes.getChannelIcon;
        backup = backup.bind(kiloes)(sizing);
        golfie['source'] = backup;
        option = foxtra.bind(tangon)(option, golfie);
        golfie = new Array(3);
        golfie[0] = option;
        foxtra = _closure1_slot9;
        option = 11;
        option = romeon[option];
        offset = offset.bind(tangon)(option);
        option = {};
        backup = 4;
        option['size'] = backup;
        option = foxtra.bind(tangon)(offset, option);
        golfie[1] = option;
        offset = _closure1_slot9;
        option = 6;
        option = romeon[option];
        option = verify.bind(tangon)(option);
        verify = option.Text;
        option = {'variant': 'text-md/semibold', 'color': 'text-normal'};
        option['children'] = yankee;
        option = offset.bind(tangon)(verify, option);
        golfie[2] = option;
        michal['children'] = golfie;
        oscard = oscard.bind(tangon)(zuuluu, michal);
        zuuluu = _closure1_slot9;
        michal = _closure1_slot14;
        entity = {};
        entity['title'] = oscard;
        entity['description'] = report;
        entity = zuuluu.bind(tangon)(michal, entity);
        return entity;
    };
    var _closure1_slot15 = entity;
    entity = function() { // Original name: ViewEntireTemplateFooter
        entity = _closure1_slot11;
        tangon = undefined;
        kiloes = entity.bind(tangon)();
        zuuluu = _closure1_slot10;
        michal = _closure1_slot6;
        entity = {};
        report = kiloes.viewEntireTemplateFooter;
        entity['style'] = report;
        option = _closure1_slot10;
        golfie = _closure1_slot6;
        report = {};
        yankee = _closure1_slot9;
        output = _closure1_slot0;
        foxtra = _closure1_slot3;
        verify = 6;
        verify = foxtra[verify];
        verify = output.bind(tangon)(verify);
        offset = verify.Text;
        verify = {'variant': 'text-sm/semibold', 'color': 'interactive-hover'};
        romeon = {};
        backup = -1;
        romeon['marginTop'] = backup;
        verify['style'] = romeon;
        romeon = 14;
        backup = foxtra[romeon];
        backup = output.bind(tangon)(backup);
        sizing = backup.intl;
        backup = sizing.string;
        romeon = foxtra[romeon];
        romeon = output.bind(tangon)(romeon);
        romeon = romeon.t;
        romeon = romeon.kejaOD;
        romeon = backup.bind(sizing)(romeon);
        verify['children'] = romeon;
        offset = yankee.bind(tangon)(offset, verify);
        verify = new Array(3);
        verify[0] = offset;
        backup = _closure1_slot9;
        romeon = _closure1_slot1;
        offset = 11;
        offset = foxtra[offset];
        yankee = romeon.bind(tangon)(offset);
        offset = {};
        sizing = 3;
        offset['size'] = sizing;
        offset = backup.bind(tangon)(yankee, offset);
        verify[1] = offset;
        backup = _closure1_slot9;
        yankee = _closure1_slot6;
        offset = {};
        kiloes = kiloes.viewEntireTemplateFooterUnderline;
        offset['style'] = kiloes;
        offset = backup.bind(tangon)(yankee, offset);
        verify[2] = offset;
        report['children'] = verify;
        golfie = option.bind(tangon)(golfie, report);
        report = new Array(2);
        report[0] = golfie;
        option = _closure1_slot9;
        golfie = _closure1_slot6;
        oscard = {};
        yankee = 12;
        verify = foxtra[yankee];
        offset = romeon.bind(tangon)(verify);
        verify = {};
        yankee = foxtra[yankee];
        yankee = romeon.bind(tangon)(yankee);
        yankee = yankee.Sizes;
        yankee = yankee.REFRESH_SMALL_16;
        verify['size'] = yankee;
        yankee = 15;
        yankee = foxtra[yankee];
        yankee = romeon.bind(tangon)(yankee);
        verify['source'] = yankee;
        yankee = {};
        foxtra = {};
        romeon = '180deg';
        foxtra['rotate'] = romeon;
        romeon = new Array(1);
        romeon[0] = foxtra;
        yankee['transform'] = romeon;
        verify['style'] = yankee;
        verify = option.bind(tangon)(offset, verify);
        oscard['children'] = verify;
        oscard = option.bind(tangon)(golfie, oscard);
        report[1] = oscard;
        entity['children'] = report;
        entity = zuuluu.bind(tangon)(michal, entity);
        return entity;
    };
    var _closure1_slot16 = entity;
    entity = global;
    verify = entity.Object;
    option = verify.defineProperty;
    michal = {};
    entity = true;
    michal['value'] = entity;
    entity = '__esModule';
    entity = option.bind(verify)(zuuluu, entity, michal);
    foxtra = 0;
    michal = golfie[foxtra];
    entity = undefined;
    michal = report.bind(entity)(michal);
    var _closure1_slot4 = michal;
    michal = 1;
    michal = golfie[michal];
    michal = oscard.bind(entity)(michal);
    report = michal.TouchableOpacity;
    var _closure1_slot5 = report;
    michal = michal.View;
    var _closure1_slot6 = michal;
    michal = 2;
    michal = golfie[michal];
    michal = oscard.bind(entity)(michal);
    report = michal.AnalyticEvents;
    var _closure1_slot7 = report;
    michal = michal.GuildSettingsSections;
    var _closure1_slot8 = michal;
    michal = 3;
    michal = golfie[michal];
    michal = oscard.bind(entity)(michal);
    report = michal.jsx;
    var _closure1_slot9 = report;
    michal = michal.jsxs;
    var _closure1_slot10 = michal;
    michal = 4;
    michal = golfie[michal];
    verify = oscard.bind(entity)(michal);
    option = verify.createStyles;
    report = {};
    offset = {};
    backup = 16;
    offset['padding'] = backup;
    yankee = 5;
    michal = golfie[yankee];
    michal = romeon.bind(entity)(michal);
    michal = michal.radii;
    michal = michal.md;
    offset['borderRadius'] = michal;
    michal = golfie[yankee];
    michal = romeon.bind(entity)(michal);
    michal = michal.colors;
    michal = michal.BACKGROUND_SECONDARY_ALT;
    offset['backgroundColor'] = michal;
    michal = 319;
    offset['width'] = michal;
    report['container'] = offset;
    offset = {};
    kiloes = golfie[yankee];
    kiloes = romeon.bind(entity)(kiloes);
    kiloes = kiloes.colors;
    kiloes = kiloes.HEADER_SECONDARY;
    offset['color'] = kiloes;
    report['subscriptionPlanTextStyle'] = offset;
    offset = {'color': null, 'paddingTop': 8, 'paddingBottom': 16};
    kiloes = golfie[yankee];
    kiloes = romeon.bind(entity)(kiloes);
    kiloes = kiloes.colors;
    kiloes = kiloes.TEXT_MUTED;
    offset['color'] = kiloes;
    report['descriptionPlanTextStyle'] = offset;
    offset = {'width': '100%', 'height': 1, 'backgroundColor': null, 'marginVertical': 16};
    kiloes = golfie[yankee];
    kiloes = romeon.bind(entity)(kiloes);
    kiloes = kiloes.colors;
    kiloes = kiloes.BACKGROUND_MODIFIER_HOVER;
    offset['backgroundColor'] = kiloes;
    report['separator'] = offset;
    offset = {};
    kiloes = golfie[yankee];
    kiloes = romeon.bind(entity)(kiloes);
    kiloes = kiloes.colors;
    kiloes = kiloes.BACKGROUND_SECONDARY;
    offset['backgroundColor'] = kiloes;
    kiloes = golfie[yankee];
    kiloes = romeon.bind(entity)(kiloes);
    kiloes = kiloes.radii;
    kiloes = kiloes.sm;
    offset['borderTopRightRadius'] = kiloes;
    kiloes = golfie[yankee];
    kiloes = romeon.bind(entity)(kiloes);
    kiloes = kiloes.radii;
    kiloes = kiloes.sm;
    offset['borderTopLeftRadius'] = kiloes;
    offset['padding'] = backup;
    offset['paddingBottom'] = foxtra;
    report['contentContainer'] = offset;
    offset = {};
    foxtra = 'uppercase';
    offset['textTransform'] = foxtra;
    report['contentHeader'] = offset;
    offset = {'paddingVertical': 16, 'display': 'flex', 'flexDirection': 'row', 'justifyContent': 'center', 'alignItems': 'center', 'backgroundColor': null, 'borderBottomLeftRadius': null, 'borderBottomRightRadius': null, 'marginLeft': 4294967280, 'marginRight': 4294967280, 'marginTop': 16};
    foxtra = golfie[yankee];
    foxtra = romeon.bind(entity)(foxtra);
    foxtra = foxtra.colors;
    foxtra = foxtra.BACKGROUND_PRIMARY;
    offset['backgroundColor'] = foxtra;
    foxtra = golfie[yankee];
    foxtra = romeon.bind(entity)(foxtra);
    foxtra = foxtra.radii;
    foxtra = foxtra.sm;
    offset['borderBottomLeftRadius'] = foxtra;
    foxtra = golfie[yankee];
    foxtra = romeon.bind(entity)(foxtra);
    foxtra = foxtra.radii;
    foxtra = foxtra.sm;
    offset['borderBottomRightRadius'] = foxtra;
    report['viewEntireTemplateFooter'] = offset;
    offset = {'position': 'absolute', 'left': 0, 'right': 0, 'height': 1, 'bottom': 0};
    yankee = golfie[yankee];
    yankee = romeon.bind(entity)(yankee);
    yankee = yankee.colors;
    yankee = yankee.INTERACTIVE_MUTED;
    offset['backgroundColor'] = yankee;
    report['viewEntireTemplateFooterUnderline'] = offset;
    report = option.bind(verify)(report);
    var _closure1_slot11 = report;
    report = 24;
    report = golfie[report];
    golfie = oscard.bind(entity)(report);
    oscard = golfie.fileFinishedImporting;
    report = 'modules/guild_role_subscriptions/native/guild_settings/tier_templates/GuildRoleSubscriptionTierTemplatePreviewCard.tsx';
    report = oscard.bind(golfie)(report);
    tangon = function(argFoo) { // Original name: GuildRoleSubscriptionTierTemplatePreviewCard
        _fun00003: for(var _fun00004_ip = 0; ; ) switch(_fun00004_ip) {
 0:
            entity = argFoo;
            yankee = entity.template;
            var _closure2_slot0 = yankee;
            backup = entity.priceTiers;
            romeon = entity.guildId;
            var _closure2_slot1 = romeon;
            sizing = entity.groupListingId;
            var _closure2_slot2 = sizing;
            option = entity.editGroupId;
            tangon = undefined;
            var _closure2_slot6 = tangon;
            var _closure2_slot7 = tangon;
            var _closure2_slot8 = tangon;
            entity = _closure1_slot11;
            verify = entity.bind(tangon)();
            michal = _closure1_slot0;
            report = _closure1_slot3;
            entity = 16;
            entity = report[entity];
            zuuluu = michal.bind(tangon)(entity);
            entity = zuuluu.useNavigation;
            entity = entity.bind(zuuluu)();
            var _closure2_slot3 = entity;
            oscard = _closure1_slot2;
            zuuluu = 17;
            zuuluu = report[zuuluu];
            golfie = oscard.bind(tangon)(zuuluu);
            oscard = golfie.useEditStateIds;
            zuuluu = {};
            kiloes = true;
            zuuluu['includeSoftDeleted'] = kiloes;
            zuuluu = oscard.bind(golfie)(sizing, option, zuuluu);
            output = zuuluu.addNewEditStateFromTemplate;
            var _closure2_slot4 = output;
            oscard = yankee.listings;
            zuuluu = 0;
            oscard = oscard[zuuluu];
            option = oscard.price_tier;
            golfie = oscard.channels;
            oscard = oscard.additional_perks;
            result = golfie.length;
            sequen = oscard.length;
            target = golfie[zuuluu];
            config = oscard[zuuluu];
            kiloes = _closure1_slot4;
            golfie = kiloes.useCallback;
            oscard = new Array(4);
            oscard[0] = output;
            oscard[1] = sizing;
            oscard[2] = entity;
            oscard[3] = romeon;
            entity = function(argFoo, argBar) {
                _fun00005: for(var _fun00006_ip = 0; ; ) switch(_fun00006_ip) {
 0:
                    tangon = argFoo;
                    report = _closure1_slot0;
                    zuuluu = _closure1_slot3;
                    entity = 18;
                    zuuluu = zuuluu[entity];
                    entity = undefined;
                    oscard = report.bind(entity)(zuuluu);
                    report = oscard.stashTemplateChannels;
                    zuuluu = _closure2_slot1;
                    zuuluu = report.bind(oscard)(tangon, zuuluu);
                    zuuluu = _closure2_slot4;
                    oscard = zuuluu.bind(entity)(tangon);
                    zuuluu = argBar;
                    if(!zuuluu) { _fun00006_ip = 92; continue _fun00005 }
 62:
                    tangon = _closure1_slot1;
                    report = _closure1_slot3;
                    zuuluu = 7;
                    zuuluu = report[zuuluu];
                    tangon = tangon.bind(entity)(zuuluu);
                    zuuluu = tangon.hideActionSheet;
                    zuuluu = zuuluu.bind(tangon)();
 92:
                    tangon = _closure1_slot1;
                    yankee = _closure1_slot3;
                    zuuluu = 19;
                    zuuluu = yankee[zuuluu];
                    option = tangon.bind(entity)(zuuluu);
                    report = option.track;
                    zuuluu = _closure1_slot7;
                    tangon = zuuluu.ROLE_SUBSCRIPTION_LISTING_TEMPLATE_SELECTOR_EXITED;
                    zuuluu = {};
                    verify = 'template_selected';
                    zuuluu['exit_reason'] = verify;
                    offset = _closure1_slot0;
                    verify = 20;
                    verify = yankee[verify];
                    yankee = offset.bind(entity)(verify);
                    offset = yankee.collectGuildAnalyticsMetadata;
                    verify = _closure2_slot1;
                    romeon = offset.bind(yankee)(verify);
                    foxtra = zuuluu;
                    verify = copyDataProperties(foxtra, romeon);
                    zuuluu = report.bind(option)(tangon, zuuluu);
                    report = _closure2_slot3;
                    tangon = report.replace;
                    michal = _closure1_slot8;
                    zuuluu = michal.ROLE_SUBSCRIPTIONS_TIER_EDIT;
                    michal = {};
                    golfie = _closure2_slot2;
                    michal['groupListingId'] = golfie;
                    michal['initialEditStateId'] = oscard;
                    michal = tangon.bind(report)(zuuluu, michal);
                    return entity;
                }
            };
            golfie = golfie.bind(kiloes)(entity, oscard);
            var _closure2_slot5 = golfie;
            entity = 21;
            entity = report[entity];
            oscard = michal.bind(tangon)(entity);
            report = oscard.useSuggestedUnusedPrices;
            entity = null;
            kiloes = entity != backup;
            michal = undefined;
            if(!kiloes) { _fun00004_ip = 279; continue _fun00003 }
 276:
            michal = backup;
 279:
            oscard = report.bind(oscard)(romeon, michal, option);
            _closure2_slot6 = oscard;
            entity = entity != oscard;
            if(!entity) { _fun00004_ip = 306; continue _fun00003 }
 297:
            michal = oscard.length;
            entity = michal > zuuluu;
 306:
            _closure2_slot7 = entity;
            report = _closure1_slot4;
            zuuluu = report.useCallback;
            michal = new Array(3);
            michal[0] = golfie;
            michal[1] = oscard;
            michal[2] = entity;
            entity = function(argFoo, argBar) {
                _fun00007: for(var _fun00008_ip = 0; ; ) switch(_fun00008_ip) {
 0:
                    golfie = argFoo;
                    michal = _closure2_slot7;
                    oscard = _closure2_slot5;
                    if(michal) { _fun00008_ip = 30; continue _fun00007 }
 17:
                    zuuluu = undefined;
                    michal = argBar;
                    michal = oscard.bind(zuuluu)(golfie, michal);
                    _fun00008_ip = 129; continue _fun00007;
 30:
                    entity = _closure2_slot6;
                    report = _closure1_slot1;
                    michal = _closure1_slot3;
                    tangon = 7;
                    tangon = michal[tangon];
                    verify = undefined;
                    report = report.bind(verify)(tangon);
                    tangon = report.openLazy;
                    option = _closure1_slot0;
                    zuuluu = 9;
                    zuuluu = michal[zuuluu];
                    option = option.bind(verify)(zuuluu);
                    zuuluu = 10;
                    zuuluu = michal[zuuluu];
                    michal = michal.paths;
                    zuuluu = option.bind(verify)(zuuluu, michal);
                    michal = {};
                    michal['selectedTemplate'] = golfie;
                    michal['handleCreateFromTemplate'] = oscard;
                    michal['newPricesToPick'] = entity;
                    entity = 'TierTemplatePriceReselectionCard';
                    entity = tangon.bind(report)(zuuluu, entity, michal);
 129:
                    entity = undefined;
                    return entity;
                }
            };
            option = zuuluu.bind(report)(entity, michal);
            _closure2_slot8 = option;
            zuuluu = _closure1_slot10;
            michal = _closure1_slot6;
            entity = {};
            report = verify.container;
            entity['style'] = report;
            golfie = _closure1_slot9;
            papara = _closure1_slot0;
            ctrled = _closure1_slot3;
            report = 22;
            report = ctrled[report];
            report = papara.bind(tangon)(report);
            oscard = report.GuildRoleSubscriptionTierTemplateBasicInfo;
            report = {};
            report['template'] = yankee;
            report['handleSelectTemplateInPreview'] = option;
            option = verify.subscriptionPlanTextStyle;
            report['subscriptionPlanTextStyle'] = option;
            option = verify.descriptionPlanTextStyle;
            report['descriptionTextStyle'] = option;
            option = false;
            report['closeActionSheet'] = option;
            option = {'numberOfLines': 2, 'ellipsizeMode': 'tail'};
            report['descriptionTextProps'] = option;
            oscard = golfie.bind(tangon)(oscard, report);
            report = new Array(2);
            report[0] = oscard;
            option = _closure1_slot10;
            golfie = _closure1_slot5;
            oscard = {};
            verify = verify.contentContainer;
            oscard['style'] = verify;
            verify = function() { // Original name: onPress
                option = _closure2_slot0;
                golfie = _closure2_slot1;
                michal = _closure2_slot8;
                oscard = _closure1_slot1;
                zuuluu = _closure1_slot3;
                entity = 7;
                report = zuuluu[entity];
                entity = undefined;
                oscard = oscard.bind(entity)(report);
                report = oscard.openLazy;
                verify = _closure1_slot0;
                tangon = 9;
                tangon = zuuluu[tangon];
                verify = verify.bind(entity)(tangon);
                tangon = 8;
                tangon = zuuluu[tangon];
                zuuluu = zuuluu.paths;
                tangon = verify.bind(entity)(tangon, zuuluu);
                zuuluu = {};
                zuuluu['template'] = option;
                zuuluu['guildId'] = golfie;
                zuuluu['handleSelectTemplateInPreview'] = michal;
                michal = 'TierTemplateCard';
                michal = report.bind(oscard)(tangon, michal, zuuluu);
                return entity;
            };
            oscard['onPress'] = verify;
            romeon = _closure1_slot10;
            verify = 23;
            verify = ctrled[verify];
            verify = papara.bind(tangon)(verify);
            yankee = verify.GappedList;
            verify = {};
            foxtra = function() { // Original name: renderGap
                tangon = _closure1_slot9;
                zuuluu = _closure1_slot13;
                michal = undefined;
                entity = {};
                entity = tangon.bind(michal)(zuuluu, entity);
                return entity;
            };
            verify['renderGap'] = foxtra;
            kiloes = _closure1_slot10;
            backup = _closure1_slot6;
            foxtra = {};
            output = _closure1_slot9;
            vacuum = _closure1_slot12;
            sizing = {};
            cntext = 14;
            echoed = ctrled[cntext];
            echoed = papara.bind(tangon)(echoed);
            record = echoed.intl;
            source = record.formatToPlainString;
            echoed = ctrled[cntext];
            echoed = papara.bind(tangon)(echoed);
            echoed = echoed.t;
            update = echoed.y7dUrq;
            echoed = {};
            echoed['numChannels'] = result;
            echoed = source.bind(record)(update, echoed);
            sizing['title'] = echoed;
            sizing['count'] = result;
            output = output.bind(tangon)(vacuum, sizing);
            sizing = new Array(4);
            sizing[0] = output;
            source = _closure1_slot9;
            echoed = _closure1_slot1;
            result = 11;
            output = ctrled[result];
            update = echoed.bind(tangon)(output);
            output = {};
            record = 12;
            output['size'] = record;
            output = source.bind(tangon)(update, output);
            sizing[1] = output;
            source = _closure1_slot9;
            update = _closure1_slot15;
            output = {};
            output['channel'] = target;
            output = source.bind(tangon)(update, output);
            sizing[2] = output;
            target = _closure1_slot9;
            output = ctrled[result];
            update = echoed.bind(tangon)(output);
            output = {};
            source = 6;
            output['size'] = source;
            output = target.bind(tangon)(update, output);
            sizing[3] = output;
            foxtra['children'] = sizing;
            backup = kiloes.bind(tangon)(backup, foxtra);
            foxtra = new Array(2);
            foxtra[0] = backup;
            sizing = _closure1_slot10;
            kiloes = _closure1_slot6;
            backup = {};
            update = _closure1_slot9;
            output = {};
            target = ctrled[cntext];
            target = papara.bind(tangon)(target);
            status = target.intl;
            target = status.formatToPlainString;
            cntext = ctrled[cntext];
            cntext = papara.bind(tangon)(cntext);
            cntext = cntext.t;
            papara = cntext.MR7oOD;
            cntext = {};
            cntext['numBenefits'] = sequen;
            cntext = target.bind(status)(papara, cntext);
            output['title'] = cntext;
            output['count'] = sequen;
            update = update.bind(tangon)(vacuum, output);
            output = new Array(4);
            output[0] = update;
            sequen = _closure1_slot9;
            update = ctrled[result];
            vacuum = echoed.bind(tangon)(update);
            update = {};
            update['size'] = record;
            update = sequen.bind(tangon)(vacuum, update);
            output[1] = update;
            sequen = _closure1_slot9;
            vacuum = _closure1_slot14;
            update = {};
            record = config.name;
            update['title'] = record;
            config = config.description;
            update['description'] = config;
            update = sequen.bind(tangon)(vacuum, update);
            output[2] = update;
            update = _closure1_slot9;
            result = ctrled[result];
            echoed = echoed.bind(tangon)(result);
            result = {};
            result['size'] = source;
            result = update.bind(tangon)(echoed, result);
            output[3] = result;
            backup['children'] = output;
            backup = sizing.bind(tangon)(kiloes, backup);
            foxtra[1] = backup;
            verify['children'] = foxtra;
            yankee = romeon.bind(tangon)(yankee, verify);
            verify = new Array(2);
            verify[0] = yankee;
            romeon = _closure1_slot9;
            yankee = _closure1_slot16;
            offset = {};
            offset = romeon.bind(tangon)(yankee, offset);
            verify[1] = offset;
            oscard['children'] = verify;
            oscard = option.bind(tangon)(golfie, oscard);
            report[1] = oscard;
            entity['children'] = report;
            entity = zuuluu.bind(tangon)(michal, entity);
            return entity;
        }
    };
    zuuluu['default'] = tangon;
    zuuluu['CARD_WIDTH'] = michal;
    return entity;
})();