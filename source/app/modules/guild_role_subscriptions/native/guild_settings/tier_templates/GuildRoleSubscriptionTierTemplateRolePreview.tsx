// app/modules/guild_role_subscriptions/native/guild_settings/tier_templates/GuildRoleSubscriptionTierTemplateRolePreview.tsx
export default (function(argFoo, argBar, argBaz, argCorge, _, argFred, argPlugh) {
    report = argBar;
    romeo = argBaz;
    golf = argCorge;
    zulu = argFred;
    oscar = argPlugh;
    var _closure1_slot0 = report;
    var _closure1_slot1 = romeo;
    var _closure1_slot2 = golf;
    var _closure1_slot3 = oscar;
    entity = global;
    verify = entity.Object;
    options = verify.defineProperty;
    tango = {};
    entity = true;
    tango['value'] = entity;
    entity = '__esModule';
    entity = options.bind(verify)(zulu, entity, tango);
    entity = 0;
    tango = oscar[entity];
    entity = undefined;
    tango = golf.bind(entity)(tango);
    tango = 1;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.View;
    var _closure1_slot4 = tango;
    tango = 2;
    tango = oscar[tango];
    tango = romeo.bind(entity)(tango);
    var _closure1_slot5 = tango;
    tango = 3;
    golf = oscar[tango];
    golf = report.bind(entity)(golf);
    golf = golf.jsx;
    var _closure1_slot6 = golf;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.jsxs;
    var _closure1_slot7 = tango;
    tango = 4;
    tango = oscar[tango];
    options = report.bind(entity)(tango);
    golf = options.createStyles;
    tango = {};
    verify = {'flexDirection': 'row', 'padding': 16, 'borderRadius': null, 'borderWidth': 1};
    offset = 16;
    yankee = 5;
    foxtrot = oscar[yankee];
    foxtrot = romeo.bind(entity)(foxtrot);
    foxtrot = foxtrot.radii;
    foxtrot = foxtrot.xs;
    verify['borderRadius'] = foxtrot;
    foxtrot = oscar[yankee];
    foxtrot = romeo.bind(entity)(foxtrot);
    foxtrot = foxtrot.colors;
    foxtrot = foxtrot.BACKGROUND_MODIFIER_ACCENT;
    verify['borderColor'] = foxtrot;
    yankee = oscar[yankee];
    yankee = romeo.bind(entity)(yankee);
    yankee = yankee.colors;
    yankee = yankee.BACKGROUND_PRIMARY;
    verify['backgroundColor'] = yankee;
    tango['container'] = verify;
    verify = {'width': 40, 'height': 40, 'borderRadius': 20};
    tango['avatar'] = verify;
    verify = {};
    verify['marginStart'] = offset;
    tango['content'] = verify;
    verify = {'flexDirection': 'row', 'alignItems': 'center'};
    tango['contextRow'] = verify;
    verify = {'width': 16, 'height': 16, 'marginStart': 8};
    tango['icon'] = verify;
    tango = golf.bind(options)(tango);
    var _closure1_slot8 = tango;
    tango = 14;
    tango = oscar[tango];
    oscar = report.bind(entity)(tango);
    report = oscar.fileFinishedImporting;
    tango = 'modules/guild_role_subscriptions/native/guild_settings/tier_templates/GuildRoleSubscriptionTierTemplateRolePreview.tsx';
    tango = report.bind(oscar)(tango);
    mike = function(argFoo) { // Original name: GuildRoleSubscriptionRolePreview
        _fun127413: for(var _fun127413_ip = 0; ; ) switch(_fun127413_ip) {
 0:
            entity = argFoo;
            yankee = entity.content;
            tango = undefined;
            if(!(yankee === tango)) { _fun127413_ip = 72; continue _fun127413 }
 14:
            oscar = _closure1_slot0;
            golf = _closure1_slot3;
            mike = 6;
            zulu = golf[mike];
            zulu = oscar.bind(tango)(zulu);
            report = zulu.intl;
            zulu = report.string;
            mike = golf[mike];
            mike = oscar.bind(tango)(mike);
            mike = mike.t;
            mike = mike.6OSasb;
            yankee = zulu.bind(report)(mike);
 72:
            oscar = entity.style;
            romeo = entity.textStyle;
            sequence = entity.roleColor;
            source = entity.roleImage;
            update = entity.roleName;
            golf = entity.guildId;
            entity = _closure1_slot8;
            options = entity.bind(tango)();
            verify = _closure1_slot0;
            foxtrot = _closure1_slot3;
            entity = 7;
            entity = foxtrot[entity];
            report = verify.bind(tango)(entity);
            zulu = report.useStateFromStores;
            entity = _closure1_slot5;
            mike = new Array(1);
            mike[0] = entity;
            entity = function() {
                mike = _closure1_slot5;
                entity = mike.getCurrentUser;
                entity = entity.bind(mike)();
                return entity;
            };
            report = zulu.bind(report)(mike, entity);
            sizing = _closure1_slot1;
            output = 8;
            entity = foxtrot[output];
            zulu = sizing.bind(tango)(entity);
            mike = zulu.useName;
            entity = null;
            result = mike.bind(zulu)(golf, entity, report);
            zulu = _closure1_slot7;
            mike = _closure1_slot4;
            entity = {};
            golf = options.container;
            report = new Array(2);
            report[0] = golf;
            report[1] = oscar;
            entity['style'] = report;
            offset = _closure1_slot6;
            report = 9;
            report = foxtrot[report];
            oscar = sizing.bind(tango)(report);
            report = {};
            golf = options.avatar;
            report['style'] = golf;
            golf = {};
            golf['uri'] = source;
            report['source'] = golf;
            oscar = offset.bind(tango)(oscar, report);
            report = new Array(2);
            report[0] = oscar;
            oscar = {};
            golf = options.content;
            oscar['style'] = golf;
            golf = {};
            options = options.contextRow;
            golf['style'] = options;
            options = 10;
            backup = foxtrot[options];
            backup = verify.bind(tango)(backup);
            kilo = backup.Text;
            backup = {'variant': 'text-md/semibold', 'color': 'interactive-active'};
            echo = {};
            vacuum = _closure1_slot2;
            control = 11;
            control = foxtrot[control];
            vacuum = vacuum.bind(tango)(control);
            control = vacuum.int2hex;
            control = control.bind(vacuum)(sequence);
            echo['color'] = control;
            backup['style'] = echo;
            backup['children'] = result;
            kilo = offset.bind(tango)(kilo, backup);
            backup = new Array(5);
            backup[0] = kilo;
            kilo = 12;
            result = foxtrot[kilo];
            echo = sizing.bind(tango)(result);
            result = {};
            control = 4;
            result['size'] = control;
            result = offset.bind(tango)(echo, result);
            backup[1] = result;
            result = 13;
            result = foxtrot[result];
            echo = sizing.bind(tango)(result);
            result = {};
            result['name'] = update;
            update = {};
            update['uri'] = source;
            result['source'] = update;
            update = 16;
            result['size'] = update;
            result = offset.bind(tango)(echo, result);
            backup[2] = result;
            kilo = foxtrot[kilo];
            sizing = sizing.bind(tango)(kilo);
            kilo = {};
            kilo['size'] = output;
            kilo = offset.bind(tango)(sizing, kilo);
            backup[3] = kilo;
            kilo = foxtrot[options];
            kilo = verify.bind(tango)(kilo);
            sizing = kilo.Text;
            kilo = {'variant': 'text-xs/medium', 'color': 'text-muted', 'children': '4:20 PM'};
            kilo = offset.bind(tango)(sizing, kilo);
            backup[4] = kilo;
            golf['children'] = backup;
            backup = zulu.bind(tango)(mike, golf);
            golf = new Array(2);
            golf[0] = backup;
            options = foxtrot[options];
            options = verify.bind(tango)(options);
            verify = options.Text;
            options = {'variant': 'text-md/normal', 'color': 'text-normal'};
            options['style'] = romeo;
            options['children'] = yankee;
            options = offset.bind(tango)(verify, options);
            golf[1] = options;
            oscar['children'] = golf;
            oscar = zulu.bind(tango)(mike, oscar);
            report[1] = oscar;
            entity['children'] = report;
            entity = zulu.bind(tango)(mike, entity);
            return entity;
        }
    };
    zulu['GuildRoleSubscriptionRolePreview'] = mike;
    return entity;
})();