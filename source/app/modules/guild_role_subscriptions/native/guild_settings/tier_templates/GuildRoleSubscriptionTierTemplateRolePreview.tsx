// app/modules/guild_role_subscriptions/native/guild_settings/tier_templates/GuildRoleSubscriptionTierTemplateRolePreview.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    report = argBar;
    romeon = argBaz;
    golfie = argCor;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    var _closure1_slot1 = romeon;
    var _closure1_slot2 = golfie;
    var _closure1_slot3 = oscard;
    entity = global;
    verify = entity.Object;
    option = verify.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = option.bind(verify)(zuuluu, entity, tangon);
    entity = 0;
    tangon = oscard[entity];
    entity = undefined;
    tangon = golfie.bind(entity)(tangon);
    tangon = 1;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.View;
    var _closure1_slot4 = tangon;
    tangon = 2;
    tangon = oscard[tangon];
    tangon = romeon.bind(entity)(tangon);
    var _closure1_slot5 = tangon;
    tangon = 3;
    golfie = oscard[tangon];
    golfie = report.bind(entity)(golfie);
    golfie = golfie.jsx;
    var _closure1_slot6 = golfie;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.jsxs;
    var _closure1_slot7 = tangon;
    tangon = 4;
    tangon = oscard[tangon];
    option = report.bind(entity)(tangon);
    golfie = option.createStyles;
    tangon = {};
    verify = {'flexDirection': 'row', 'padding': 16, 'borderRadius': null, 'borderWidth': 1};
    offset = 16;
    yankee = 5;
    foxtra = oscard[yankee];
    foxtra = romeon.bind(entity)(foxtra);
    foxtra = foxtra.radii;
    foxtra = foxtra.xs;
    verify['borderRadius'] = foxtra;
    foxtra = oscard[yankee];
    foxtra = romeon.bind(entity)(foxtra);
    foxtra = foxtra.colors;
    foxtra = foxtra.BACKGROUND_MODIFIER_ACCENT;
    verify['borderColor'] = foxtra;
    yankee = oscard[yankee];
    yankee = romeon.bind(entity)(yankee);
    yankee = yankee.colors;
    yankee = yankee.BACKGROUND_PRIMARY;
    verify['backgroundColor'] = yankee;
    tangon['container'] = verify;
    verify = {'width': 40, 'height': 40, 'borderRadius': 20};
    tangon['avatar'] = verify;
    verify = {};
    verify['marginStart'] = offset;
    tangon['content'] = verify;
    verify = {'flexDirection': 'row', 'alignItems': 'center'};
    tangon['contextRow'] = verify;
    verify = {'width': 16, 'height': 16, 'marginStart': 8};
    tangon['icon'] = verify;
    tangon = golfie.bind(option)(tangon);
    var _closure1_slot8 = tangon;
    tangon = 14;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/guild_role_subscriptions/native/guild_settings/tier_templates/GuildRoleSubscriptionTierTemplateRolePreview.tsx';
    tangon = report.bind(oscard)(tangon);
    michal = function(argFoo) { // Original name: GuildRoleSubscriptionRolePreview
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            entity = argFoo;
            yankee = entity.content;
            tangon = undefined;
            if(!(yankee === tangon)) { _fun00002_ip = 72; continue _fun00001 }
 14:
            oscard = _closure1_slot0;
            golfie = _closure1_slot3;
            michal = 6;
            zuuluu = golfie[michal];
            zuuluu = oscard.bind(tangon)(zuuluu);
            report = zuuluu.intl;
            zuuluu = report.string;
            michal = golfie[michal];
            michal = oscard.bind(tangon)(michal);
            michal = michal.t;
            michal = michal.6OSasb;
            yankee = zuuluu.bind(report)(michal);
 72:
            oscard = entity.style;
            romeon = entity.textStyle;
            sequen = entity.roleColor;
            source = entity.roleImage;
            update = entity.roleName;
            golfie = entity.guildId;
            entity = _closure1_slot8;
            option = entity.bind(tangon)();
            verify = _closure1_slot0;
            foxtra = _closure1_slot3;
            entity = 7;
            entity = foxtra[entity];
            report = verify.bind(tangon)(entity);
            zuuluu = report.useStateFromStores;
            entity = _closure1_slot5;
            michal = new Array(1);
            michal[0] = entity;
            entity = function() {
                michal = _closure1_slot5;
                entity = michal.getCurrentUser;
                entity = entity.bind(michal)();
                return entity;
            };
            report = zuuluu.bind(report)(michal, entity);
            sizing = _closure1_slot1;
            output = 8;
            entity = foxtra[output];
            zuuluu = sizing.bind(tangon)(entity);
            michal = zuuluu.useName;
            entity = null;
            result = michal.bind(zuuluu)(golfie, entity, report);
            zuuluu = _closure1_slot7;
            michal = _closure1_slot4;
            entity = {};
            golfie = option.container;
            report = new Array(2);
            report[0] = golfie;
            report[1] = oscard;
            entity['style'] = report;
            offset = _closure1_slot6;
            report = 9;
            report = foxtra[report];
            oscard = sizing.bind(tangon)(report);
            report = {};
            golfie = option.avatar;
            report['style'] = golfie;
            golfie = {};
            golfie['uri'] = source;
            report['source'] = golfie;
            oscard = offset.bind(tangon)(oscard, report);
            report = new Array(2);
            report[0] = oscard;
            oscard = {};
            golfie = option.content;
            oscard['style'] = golfie;
            golfie = {};
            option = option.contextRow;
            golfie['style'] = option;
            option = 10;
            backup = foxtra[option];
            backup = verify.bind(tangon)(backup);
            kiloes = backup.Text;
            backup = {'variant': 'text-md/semibold', 'color': 'interactive-active'};
            echoed = {};
            vacuum = _closure1_slot2;
            ctrled = 11;
            ctrled = foxtra[ctrled];
            vacuum = vacuum.bind(tangon)(ctrled);
            ctrled = vacuum.int2hex;
            ctrled = ctrled.bind(vacuum)(sequen);
            echoed['color'] = ctrled;
            backup['style'] = echoed;
            backup['children'] = result;
            kiloes = offset.bind(tangon)(kiloes, backup);
            backup = new Array(5);
            backup[0] = kiloes;
            kiloes = 12;
            result = foxtra[kiloes];
            echoed = sizing.bind(tangon)(result);
            result = {};
            ctrled = 4;
            result['size'] = ctrled;
            result = offset.bind(tangon)(echoed, result);
            backup[1] = result;
            result = 13;
            result = foxtra[result];
            echoed = sizing.bind(tangon)(result);
            result = {};
            result['name'] = update;
            update = {};
            update['uri'] = source;
            result['source'] = update;
            update = 16;
            result['size'] = update;
            result = offset.bind(tangon)(echoed, result);
            backup[2] = result;
            kiloes = foxtra[kiloes];
            sizing = sizing.bind(tangon)(kiloes);
            kiloes = {};
            kiloes['size'] = output;
            kiloes = offset.bind(tangon)(sizing, kiloes);
            backup[3] = kiloes;
            kiloes = foxtra[option];
            kiloes = verify.bind(tangon)(kiloes);
            sizing = kiloes.Text;
            kiloes = {'variant': 'text-xs/medium', 'color': 'text-muted', 'children': '4:20 PM'};
            kiloes = offset.bind(tangon)(sizing, kiloes);
            backup[4] = kiloes;
            golfie['children'] = backup;
            backup = zuuluu.bind(tangon)(michal, golfie);
            golfie = new Array(2);
            golfie[0] = backup;
            option = foxtra[option];
            option = verify.bind(tangon)(option);
            verify = option.Text;
            option = {'variant': 'text-md/normal', 'color': 'text-normal'};
            option['style'] = romeon;
            option['children'] = yankee;
            option = offset.bind(tangon)(verify, option);
            golfie[1] = option;
            oscard['children'] = golfie;
            oscard = zuuluu.bind(tangon)(michal, oscard);
            report[1] = oscard;
            entity['children'] = report;
            entity = zuuluu.bind(tangon)(michal, entity);
            return entity;
        }
    };
    zuuluu['GuildRoleSubscriptionRolePreview'] = michal;
    return entity;
})();