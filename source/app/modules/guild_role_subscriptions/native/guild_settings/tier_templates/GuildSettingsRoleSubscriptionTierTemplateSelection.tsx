// app/modules/guild_role_subscriptions/native/guild_settings/tier_templates/GuildSettingsRoleSubscriptionTierTemplateSelection.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    report = argBar;
    romeon = argBaz;
    golfie = argCor;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    var _closure1_slot1 = romeon;
    var _closure1_slot2 = golfie;
    var _closure1_slot3 = oscard;
    entity = function(argFoo) { // Original name: TierTemplatesRenderer
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            michal = argFoo;
            offset = michal.templates;
            entity = michal.loading;
            option = michal.error;
            tangon = michal.guildId;
            var _closure2_slot0 = tangon;
            michal = michal.groupListingId;
            var _closure2_slot1 = michal;
            zuuluu = _closure1_slot17;
            report = undefined;
            oscard = zuuluu.bind(report)();
            zuuluu = _closure1_slot11;
            zuuluu = zuuluu.bind(report)(tangon);
            zuuluu = zuuluu.tiers;
            var _closure2_slot2 = zuuluu;
            if(entity) { _fun00002_ip = 330; continue _fun00001 }
 79:
            golfie = null;
            if(!(golfie == option)) { _fun00002_ip = 256; continue _fun00001 }
 88:
            zuuluu = golfie == offset;
            entity = null;
            if(zuuluu) { _fun00002_ip = 254; continue _fun00001 }
 100:
            tangon = offset.length;
            zuuluu = 0;
            entity = null;
            if(!(zuuluu !== tangon)) { _fun00002_ip = 254; continue _fun00001 }
 116:
            golfie = _closure1_slot14;
            tangon = _closure1_slot9;
            zuuluu = {};
            zuuluu['data'] = offset;
            offset = true;
            zuuluu['horizontal'] = offset;
            offset = {};
            yankee = _closure1_slot16;
            offset['paddingLeft'] = yankee;
            yankee = _closure1_slot16;
            offset['paddingRight'] = yankee;
            zuuluu['contentContainerStyle'] = offset;
            offset = function(argFoo) { // Original name: keyExtractor
                entity = argFoo;
                entity = entity.category;
                return entity;
            };
            zuuluu['keyExtractor'] = offset;
            offset = function() { // Original name: ItemSeparatorComponent
                tangon = _closure1_slot14;
                zuuluu = _closure1_slot8;
                michal = {};
                entity = {};
                oscard = '100%';
                entity['height'] = oscard;
                report = _closure1_slot16;
                entity['width'] = report;
                michal['style'] = entity;
                entity = undefined;
                entity = tangon.bind(entity)(zuuluu, michal);
                return entity;
            };
            zuuluu['ItemSeparatorComponent'] = offset;
            offset = 'fast';
            zuuluu['decelerationRate'] = offset;
            yankee = _closure1_slot0;
            romeon = _closure1_slot3;
            offset = 10;
            offset = romeon[offset];
            offset = yankee.bind(report)(offset);
            yankee = offset.CARD_WIDTH;
            offset = _closure1_slot16;
            offset = yankee + offset;
            zuuluu['snapToInterval'] = offset;
            verify = function(argFoo) { // Original name: renderItem
                entity = argFoo;
                report = entity.item;
                tangon = _closure1_slot14;
                michal = _closure1_slot1;
                zuuluu = _closure1_slot3;
                entity = 10;
                entity = zuuluu[entity];
                zuuluu = undefined;
                michal = michal.bind(zuuluu)(entity);
                entity = {};
                entity['template'] = report;
                report = _closure2_slot2;
                entity['priceTiers'] = report;
                report = _closure2_slot0;
                entity['guildId'] = report;
                oscard = _closure2_slot1;
                entity['groupListingId'] = oscard;
                entity['editGroupId'] = report;
                entity = tangon.bind(zuuluu)(michal, entity);
                return entity;
            };
            zuuluu['renderItem'] = verify;
            entity = golfie.bind(report)(tangon, zuuluu);
 254:
            _fun00002_ip = 328; continue _fun00001;
 256:
            golfie = _closure1_slot15;
            tangon = _closure1_slot0;
            verify = _closure1_slot3;
            zuuluu = 9;
            zuuluu = verify[zuuluu];
            zuuluu = tangon.bind(report)(zuuluu);
            tangon = zuuluu.Text;
            zuuluu = {'variant': 'text-xs/normal', 'color': 'status-danger'};
            verify = option.message;
            option = ['Error: '];
            option[1] = verify;
            zuuluu['children'] = option;
            entity = golfie.bind(report)(tangon, zuuluu);
 328:
            _fun00002_ip = 361; continue _fun00001;
 330:
            tangon = _closure1_slot14;
            zuuluu = _closure1_slot6;
            michal = {};
            oscard = oscard.activityIndicator;
            oscard = oscard.color;
            michal['color'] = oscard;
            entity = tangon.bind(report)(zuuluu, michal);
 361:
            return entity;
        }
    };
    var _closure1_slot18 = entity;
    entity = function(argFoo) { // Original name: GuildSettingsRoleSubscriptionTierTemplateSelectionComponent
        _fun00003: for(var _fun00004_ip = 0; ; ) switch(_fun00004_ip) {
 0:
            michal = argFoo;
            foxtra = michal.guildId;
            var _closure2_slot0 = foxtra;
            romeon = michal.groupListingId;
            tangon = undefined;
            var _closure2_slot3 = tangon;
            var _closure2_slot4 = tangon;
            var _closure2_slot5 = tangon;
            var _closure2_slot6 = tangon;
            var _closure2_slot7 = tangon;
            michal = _closure1_slot17;
            sequen = michal.bind(tangon)();
            var _closure2_slot1 = sequen;
            oscard = _closure1_slot0;
            golfie = _closure1_slot3;
            michal = 11;
            michal = golfie[michal];
            option = oscard.bind(tangon)(michal);
            report = option.useStateFromStores;
            michal = _closure1_slot10;
            zuuluu = new Array(1);
            zuuluu[0] = michal;
            michal = function() {
                zuuluu = _closure1_slot10;
                michal = zuuluu.getTemplates;
                entity = _closure2_slot0;
                entity = michal.bind(zuuluu)(entity);
                return entity;
            };
            output = report.bind(option)(zuuluu, michal);
            var _closure2_slot2 = output;
            michal = 12;
            michal = golfie[michal];
            zuuluu = oscard.bind(tangon)(michal);
            michal = zuuluu.useGroupListingsForGuild;
            zuuluu = michal.bind(zuuluu)(foxtra);
            michal = 0;
            report = zuuluu[michal];
            zuuluu = 13;
            zuuluu = golfie[zuuluu];
            oscard = oscard.bind(tangon)(zuuluu);
            zuuluu = oscard.useGroupListingsFetchContext;
            sizing = zuuluu.bind(oscard)();
            zuuluu = null;
            if(!(zuuluu == romeon)) { _fun00004_ip = 185; continue _fun00003 }
 168:
            oscard = zuuluu == report;
            zuuluu = undefined;
            if(oscard) { _fun00004_ip = 182; continue _fun00003 }
 177:
            zuuluu = report.id;
 182:
            romeon = zuuluu;
 185:
            _closure2_slot3 = romeon;
            result = _closure1_slot1;
            yankee = _closure1_slot3;
            zuuluu = 14;
            zuuluu = yankee[zuuluu];
            report = result.bind(tangon)(zuuluu);
            oscard = _closure1_slot2;
            zuuluu = 15;
            zuuluu = yankee[zuuluu];
            zuuluu = oscard.bind(tangon)(zuuluu);
            zuuluu = zuuluu.getTemplates;
            oscard = report.bind(tangon)(zuuluu);
            report = _closure1_slot4;
            zuuluu = 2;
            report = report.bind(tangon)(oscard, zuuluu);
            michal = report[michal];
            _closure2_slot4 = michal;
            zuuluu = 1;
            zuuluu = report[zuuluu];
            kiloes = zuuluu.loading;
            backup = zuuluu.error;
            zuuluu = 16;
            zuuluu = yankee[zuuluu];
            zuuluu = result.bind(tangon)(zuuluu);
            zuuluu = zuuluu.bind(tangon)();
            update = zuuluu.bottom;
            status = _closure1_slot0;
            zuuluu = 17;
            zuuluu = yankee[zuuluu];
            report = status.bind(tangon)(zuuluu);
            zuuluu = report.useNavigation;
            option = zuuluu.bind(report)();
            _closure2_slot5 = option;
            zuuluu = 18;
            zuuluu = yankee[zuuluu];
            report = status.bind(tangon)(zuuluu);
            zuuluu = report.useShowCreatorPortalLinkForTierTemplates;
            offset = zuuluu.bind(report)(foxtra);
            oscard = _closure1_slot5;
            report = oscard.useEffect;
            zuuluu = new Array(3);
            zuuluu[0] = michal;
            zuuluu[1] = foxtra;
            zuuluu[2] = output;
            michal = function() {
                _fun00005: for(var _fun00006_ip = 0; ; ) switch(_fun00006_ip) {
 0:
                    zuuluu = _closure2_slot2;
                    michal = null;
                    michal = michal != zuuluu;
                    if(!michal) { _fun00006_ip = 31; continue _fun00005 }
 16:
                    zuuluu = _closure2_slot2;
                    tangon = zuuluu.length;
                    zuuluu = 0;
                    michal = zuuluu !== tangon;
 31:
                    if(michal) { _fun00006_ip = 49; continue _fun00005 }
 34:
                    zuuluu = _closure2_slot4;
                    michal = _closure2_slot0;
                    entity = undefined;
                    entity = zuuluu.bind(entity)(michal);
 49:
                    entity = undefined;
                    return entity;
                }
            };
            michal = report.bind(oscard)(michal, zuuluu);
            oscard = _closure1_slot5;
            report = oscard.useCallback;
            zuuluu = new Array(1);
            zuuluu[0] = foxtra;
            michal = function() {
                zuuluu = _closure1_slot1;
                option = _closure1_slot3;
                entity = 19;
                michal = option[entity];
                entity = undefined;
                report = zuuluu.bind(entity)(michal);
                tangon = report.track;
                michal = _closure1_slot12;
                zuuluu = michal.ROLE_SUBSCRIPTION_LISTING_TEMPLATE_SELECTOR_EXITED;
                michal = {};
                golfie = 'voluntarily_exit';
                michal['exit_reason'] = golfie;
                golfie = _closure1_slot0;
                oscard = 20;
                oscard = option[oscard];
                option = golfie.bind(entity)(oscard);
                golfie = option.collectGuildAnalyticsMetadata;
                oscard = _closure2_slot0;
                verify = golfie.bind(option)(oscard);
                offset = michal;
                oscard = copyDataProperties(offset, verify);
                michal = tangon.bind(report)(zuuluu, michal);
                return entity;
            };
            oscard = report.bind(oscard)(michal, zuuluu);
            _closure2_slot6 = oscard;
            golfie = _closure1_slot5;
            report = golfie.useCallback;
            zuuluu = new Array(3);
            zuuluu[0] = foxtra;
            zuuluu[1] = romeon;
            zuuluu[2] = option;
            michal = function() {
                report = _closure1_slot1;
                tangon = _closure1_slot3;
                entity = 19;
                zuuluu = tangon[entity];
                entity = undefined;
                verify = report.bind(entity)(zuuluu);
                option = verify.track;
                zuuluu = _closure1_slot12;
                golfie = zuuluu.ROLE_SUBSCRIPTION_LISTING_TEMPLATE_SELECTOR_EXITED;
                zuuluu = {};
                report = 'create_from_scratch';
                zuuluu['exit_reason'] = report;
                oscard = _closure1_slot0;
                report = 20;
                report = tangon[report];
                yankee = oscard.bind(entity)(report);
                offset = yankee.collectGuildAnalyticsMetadata;
                oscard = _closure2_slot0;
                romeon = offset.bind(yankee)(oscard);
                foxtra = zuuluu;
                offset = copyDataProperties(foxtra, romeon);
                zuuluu = option.bind(verify)(golfie, zuuluu);
                zuuluu = _closure1_slot2;
                michal = 21;
                michal = tangon[michal];
                tangon = zuuluu.bind(entity)(michal);
                zuuluu = tangon.openTierCreationModal;
                michal = {};
                michal['guildId'] = oscard;
                report = _closure2_slot3;
                michal['groupListingId'] = report;
                report = function() { // Original name: onAfterTierCreation
                    zuuluu = _closure2_slot5;
                    michal = zuuluu.navigate;
                    entity = _closure1_slot13;
                    entity = entity.ROLE_SUBSCRIPTIONS_TIERS;
                    entity = michal.bind(zuuluu)(entity);
                    entity = undefined;
                    return entity;
                };
                michal['onAfterTierCreation'] = report;
                michal = zuuluu.bind(tangon)(michal);
                return entity;
            };
            golfie = report.bind(golfie)(michal, zuuluu);
            _closure2_slot7 = golfie;
            report = _closure1_slot5;
            zuuluu = report.useLayoutEffect;
            michal = new Array(4);
            michal[0] = option;
            michal[1] = golfie;
            michal[2] = oscard;
            michal[3] = sequen;
            entity = function() {
                tangon = _closure2_slot5;
                zuuluu = tangon.setOptions;
                michal = {};
                oscard = function() { // Original name: headerRight
                    tangon = _closure1_slot15;
                    zuuluu = _closure1_slot7;
                    michal = {};
                    report = _closure2_slot7;
                    michal['onPress'] = report;
                    backup = _closure2_slot1;
                    entity = backup.startFromScratch;
                    michal['style'] = entity;
                    entity = 0.5;
                    michal['activeOpacity'] = entity;
                    golfie = _closure1_slot14;
                    oscard = _closure1_slot8;
                    report = {};
                    entity = backup.editIcon;
                    report['style'] = entity;
                    yankee = _closure1_slot14;
                    foxtra = _closure1_slot1;
                    kiloes = _closure1_slot3;
                    romeon = 22;
                    option = kiloes[romeon];
                    entity = undefined;
                    offset = foxtra.bind(entity)(option);
                    option = {};
                    sizing = 23;
                    sizing = kiloes[sizing];
                    sizing = foxtra.bind(entity)(sizing);
                    option['source'] = sizing;
                    backup = backup.editIcon;
                    backup = backup.color;
                    option['color'] = backup;
                    romeon = kiloes[romeon];
                    romeon = foxtra.bind(entity)(romeon);
                    romeon = romeon.Sizes;
                    romeon = romeon.REFRESH_SMALL_16;
                    option['size'] = romeon;
                    option = yankee.bind(entity)(offset, option);
                    report['children'] = option;
                    oscard = golfie.bind(entity)(oscard, report);
                    report = new Array(2);
                    report[0] = oscard;
                    option = _closure1_slot14;
                    golfie = _closure1_slot8;
                    oscard = {};
                    backup = _closure1_slot0;
                    verify = 9;
                    verify = kiloes[verify];
                    verify = backup.bind(entity)(verify);
                    offset = verify.Text;
                    verify = {'variant': 'text-md/medium', 'color': 'interactive-active'};
                    yankee = 24;
                    romeon = kiloes[yankee];
                    romeon = backup.bind(entity)(romeon);
                    foxtra = romeon.intl;
                    romeon = foxtra.string;
                    yankee = kiloes[yankee];
                    yankee = backup.bind(entity)(yankee);
                    yankee = yankee.t;
                    yankee = yankee.WNWtkJ;
                    yankee = romeon.bind(foxtra)(yankee);
                    verify['children'] = yankee;
                    verify = option.bind(entity)(offset, verify);
                    oscard['children'] = verify;
                    oscard = option.bind(entity)(golfie, oscard);
                    report[1] = oscard;
                    michal['children'] = report;
                    entity = tangon.bind(entity)(zuuluu, michal);
                    return entity;
                };
                michal['headerRight'] = oscard;
                entity = function() { // Original name: headerTitle
                    tangon = _closure1_slot14;
                    zuuluu = _closure1_slot8;
                    michal = undefined;
                    entity = {};
                    entity = tangon.bind(michal)(zuuluu, entity);
                    return entity;
                };
                michal['headerTitle'] = entity;
                golfie = _closure1_slot0;
                oscard = _closure1_slot3;
                entity = 25;
                oscard = oscard[entity];
                entity = undefined;
                golfie = golfie.bind(entity)(oscard);
                oscard = golfie.getHeaderBackButton;
                report = _closure2_slot6;
                report = oscard.bind(golfie)(report);
                michal['headerLeft'] = report;
                michal = zuuluu.bind(tangon)(michal);
                return entity;
            };
            entity = zuuluu.bind(report)(entity, michal);
            entity = 26;
            entity = yankee[entity];
            michal = result.bind(tangon)(entity);
            entity = {};
            zuuluu = 27;
            report = yankee[zuuluu];
            report = status.bind(tangon)(report);
            report = report.ImpressionTypes;
            report = report.PAGE;
            entity['type'] = report;
            zuuluu = yankee[zuuluu];
            zuuluu = status.bind(tangon)(zuuluu);
            zuuluu = zuuluu.ImpressionNames;
            zuuluu = zuuluu.ROLE_SUBSCRIPTION_LISTING_TEMPLATE_SELECTOR;
            entity['name'] = zuuluu;
            zuuluu = {};
            zuuluu['guild_id'] = foxtra;
            entity['properties'] = zuuluu;
            entity = michal.bind(tangon)(entity);
            zuuluu = _closure1_slot14;
            entity = 28;
            entity = yankee[entity];
            entity = status.bind(tangon)(entity);
            michal = entity.RoleSubscriptionSettingsDisabledContextProvider;
            entity = {};
            entity['guildId'] = foxtra;
            golfie = _closure1_slot15;
            oscard = _closure1_slot8;
            report = {};
            echoed = sequen.container;
            option = new Array(2);
            option[0] = echoed;
            echoed = {};
            echoed['paddingBottom'] = update;
            option[1] = echoed;
            report['style'] = option;
            ctrled = _closure1_slot14;
            source = 9;
            option = yankee[source];
            option = status.bind(tangon)(option);
            update = option.Text;
            option = {};
            echoed = 'heading-xl/semibold';
            option['variant'] = echoed;
            vacuum = sequen.title;
            echoed = new Array(2);
            echoed[0] = vacuum;
            vacuum = sequen.text;
            echoed[1] = vacuum;
            option['style'] = echoed;
            echoed = 24;
            vacuum = yankee[echoed];
            vacuum = status.bind(tangon)(vacuum);
            record = vacuum.intl;
            config = record.string;
            vacuum = yankee[echoed];
            vacuum = status.bind(tangon)(vacuum);
            vacuum = vacuum.t;
            vacuum = vacuum.uYFiKi;
            vacuum = config.bind(record)(vacuum);
            option['children'] = vacuum;
            update = ctrled.bind(tangon)(update, option);
            option = new Array(7);
            option[0] = update;
            record = _closure1_slot14;
            update = 29;
            ctrled = yankee[update];
            config = result.bind(tangon)(ctrled);
            vacuum = {};
            ctrled = 8;
            vacuum['size'] = ctrled;
            vacuum = record.bind(tangon)(config, vacuum);
            option[1] = vacuum;
            record = _closure1_slot14;
            source = yankee[source];
            source = status.bind(tangon)(source);
            vacuum = source.Text;
            source = {};
            config = 'text-sm/medium';
            source['variant'] = config;
            cntext = sequen.text;
            source['style'] = cntext;
            cntext = yankee[echoed];
            cntext = status.bind(tangon)(cntext);
            target = cntext.intl;
            papara = target.string;
            cntext = yankee[echoed];
            cntext = status.bind(tangon)(cntext);
            cntext = cntext.t;
            cntext = cntext.ne+rg4;
            cntext = papara.bind(target)(cntext);
            source['children'] = cntext;
            source = record.bind(tangon)(vacuum, source);
            option[2] = source;
            source = _closure1_slot14;
            yankee = yankee[update];
            result = result.bind(tangon)(yankee);
            yankee = {};
            yankee['size'] = ctrled;
            yankee = source.bind(tangon)(result, yankee);
            option[3] = yankee;
            if(!offset) { _fun00004_ip = 1060; continue _fun00003 }
 945:
            source = _closure1_slot14;
            vacuum = _closure1_slot0;
            ctrled = _closure1_slot3;
            yankee = 30;
            yankee = ctrled[yankee];
            yankee = vacuum.bind(tangon)(yankee);
            result = yankee.TextWithIOSLinkWorkaround;
            yankee = {};
            yankee['variant'] = config;
            sequen = sequen.text;
            yankee['style'] = sequen;
            sequen = ctrled[echoed];
            sequen = vacuum.bind(tangon)(sequen);
            config = sequen.intl;
            sequen = config.format;
            ctrled = ctrled[echoed];
            ctrled = vacuum.bind(tangon)(ctrled);
            ctrled = ctrled.t;
            vacuum = ctrled.iQML2t;
            ctrled = {};
            record = 'https://discord.com/creator-portal/learn-from-creators?tab=lightning-lessons';
            ctrled['creatorPortalUrl'] = record;
            ctrled = sequen.bind(config)(vacuum, ctrled);
            yankee['children'] = ctrled;
            offset = source.bind(tangon)(result, yankee);
 1060:
            option[4] = offset;
            result = _closure1_slot14;
            yankee = _closure1_slot1;
            offset = _closure1_slot3;
            offset = offset[update];
            yankee = yankee.bind(tangon)(offset);
            offset = {};
            offset['size'] = echoed;
            offset = result.bind(tangon)(yankee, offset);
            option[5] = offset;
            yankee = _closure1_slot14;
            offset = _closure1_slot18;
            verify = {};
            verify['templates'] = output;
            if(kiloes) { _fun00004_ip = 1122; continue _fun00003 }
 1119:
            kiloes = !sizing;
 1122:
            verify['loading'] = kiloes;
            verify['error'] = backup;
            verify['guildId'] = foxtra;
            verify['groupListingId'] = romeon;
            verify = yankee.bind(tangon)(offset, verify);
            option[6] = verify;
            report['children'] = option;
            report = golfie.bind(tangon)(oscard, report);
            entity['children'] = report;
            entity = zuuluu.bind(tangon)(michal, entity);
            return entity;
        }
    };
    var _closure1_slot19 = entity;
    entity = global;
    verify = entity.Object;
    option = verify.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = option.bind(verify)(zuuluu, entity, tangon);
    entity = 0;
    tangon = oscard[entity];
    entity = undefined;
    tangon = romeon.bind(entity)(tangon);
    var _closure1_slot4 = tangon;
    tangon = 1;
    tangon = oscard[tangon];
    tangon = golfie.bind(entity)(tangon);
    var _closure1_slot5 = tangon;
    tangon = 2;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    golfie = tangon.ActivityIndicator;
    var _closure1_slot6 = golfie;
    golfie = tangon.TouchableOpacity;
    var _closure1_slot7 = golfie;
    golfie = tangon.View;
    var _closure1_slot8 = golfie;
    tangon = tangon.FlatList;
    var _closure1_slot9 = tangon;
    tangon = 3;
    tangon = oscard[tangon];
    tangon = romeon.bind(entity)(tangon);
    var _closure1_slot10 = tangon;
    offset = 4;
    tangon = oscard[offset];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.usePriceTiers;
    var _closure1_slot11 = tangon;
    tangon = 5;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    golfie = tangon.AnalyticEvents;
    var _closure1_slot12 = golfie;
    tangon = tangon.GuildSettingsSections;
    var _closure1_slot13 = tangon;
    tangon = 6;
    golfie = oscard[tangon];
    golfie = report.bind(entity)(golfie);
    golfie = golfie.jsx;
    var _closure1_slot14 = golfie;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.jsxs;
    var _closure1_slot15 = tangon;
    yankee = 16;
    var _closure1_slot16 = yankee;
    tangon = 7;
    tangon = oscard[tangon];
    option = report.bind(entity)(tangon);
    golfie = option.createStyles;
    tangon = {};
    verify = {};
    verify['marginTop'] = yankee;
    tangon['container'] = verify;
    verify = {};
    yankee = 8;
    foxtra = oscard[yankee];
    foxtra = romeon.bind(entity)(foxtra);
    foxtra = foxtra.colors;
    foxtra = foxtra.HEADER_PRIMARY;
    verify['color'] = foxtra;
    tangon['title'] = verify;
    verify = {'marginLeft': 16, 'marginRight': 16};
    tangon['text'] = verify;
    verify = {};
    foxtra = oscard[yankee];
    foxtra = romeon.bind(entity)(foxtra);
    foxtra = foxtra.colors;
    foxtra = foxtra.INTERACTIVE_NORMAL;
    verify['color'] = foxtra;
    tangon['activityIndicator'] = verify;
    verify = {};
    yankee = oscard[yankee];
    yankee = romeon.bind(entity)(yankee);
    yankee = yankee.colors;
    yankee = yankee.INTERACTIVE_ACTIVE;
    verify['color'] = yankee;
    verify['marginRight'] = offset;
    tangon['editIcon'] = verify;
    verify = {'display': 'flex', 'flexDirection': 'row', 'alignItems': 'center', 'marginRight': 12};
    tangon['startFromScratch'] = verify;
    tangon = golfie.bind(option)(tangon);
    var _closure1_slot17 = tangon;
    tangon = 31;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/guild_role_subscriptions/native/guild_settings/tier_templates/GuildSettingsRoleSubscriptionTierTemplateSelection.tsx';
    tangon = report.bind(oscard)(tangon);
    michal = function(argFoo) { // Original name: GuildSettingsRoleSubscriptionTierTemplateSelection
        option = argFoo;
        tangon = _closure1_slot14;
        michal = _closure1_slot0;
        zuuluu = _closure1_slot3;
        entity = 13;
        entity = zuuluu[entity];
        zuuluu = undefined;
        entity = michal.bind(zuuluu)(entity);
        michal = entity.GroupListingsFetchContextProvider;
        entity = {};
        oscard = option.guildId;
        entity['guildId'] = oscard;
        golfie = _closure1_slot14;
        oscard = _closure1_slot19;
        report = {};
        offset = report;
        verify = option;
        option = copyDataProperties(offset, verify);
        report = golfie.bind(zuuluu)(oscard, report);
        entity['children'] = report;
        entity = tangon.bind(zuuluu)(michal, entity);
        return entity;
    };
    zuuluu['default'] = michal;
    return entity;
})();