// app/modules/guild_role_subscriptions/native/guild_settings/tier_templates/GuildSettingsRoleSubscriptionTierTemplateSelection.tsx
export default (function(argFoo, argBar, argBaz, argCorge, _, argFred, argPlugh) {
    report = argBar;
    romeo = argBaz;
    golf = argCorge;
    zulu = argFred;
    oscar = argPlugh;
    var _closure1_slot0 = report;
    var _closure1_slot1 = romeo;
    var _closure1_slot2 = golf;
    var _closure1_slot3 = oscar;
    entity = function(argFoo) { // Original name: TierTemplatesRenderer
        _fun127377: for(var _fun127377_ip = 0; ; ) switch(_fun127377_ip) {
 0:
            mike = argFoo;
            offset = mike.templates;
            entity = mike.loading;
            options = mike.error;
            tango = mike.guildId;
            var _closure2_slot0 = tango;
            mike = mike.groupListingId;
            var _closure2_slot1 = mike;
            zulu = _closure1_slot17;
            report = undefined;
            oscar = zulu.bind(report)();
            zulu = _closure1_slot11;
            zulu = zulu.bind(report)(tango);
            zulu = zulu.tiers;
            var _closure2_slot2 = zulu;
            if(entity) { _fun127377_ip = 330; continue _fun127377 }
 79:
            golf = null;
            if(!(golf == options)) { _fun127377_ip = 256; continue _fun127377 }
 88:
            zulu = golf == offset;
            entity = null;
            if(zulu) { _fun127377_ip = 254; continue _fun127377 }
 100:
            tango = offset.length;
            zulu = 0;
            entity = null;
            if(!(zulu !== tango)) { _fun127377_ip = 254; continue _fun127377 }
 116:
            golf = _closure1_slot14;
            tango = _closure1_slot9;
            zulu = {};
            zulu['data'] = offset;
            offset = true;
            zulu['horizontal'] = offset;
            offset = {};
            yankee = _closure1_slot16;
            offset['paddingLeft'] = yankee;
            yankee = _closure1_slot16;
            offset['paddingRight'] = yankee;
            zulu['contentContainerStyle'] = offset;
            offset = function(argFoo) { // Original name: keyExtractor
                entity = argFoo;
                entity = entity.category;
                return entity;
            };
            zulu['keyExtractor'] = offset;
            offset = function() { // Original name: ItemSeparatorComponent
                tango = _closure1_slot14;
                zulu = _closure1_slot8;
                mike = {};
                entity = {};
                oscar = '100%';
                entity['height'] = oscar;
                report = _closure1_slot16;
                entity['width'] = report;
                mike['style'] = entity;
                entity = undefined;
                entity = tango.bind(entity)(zulu, mike);
                return entity;
            };
            zulu['ItemSeparatorComponent'] = offset;
            offset = 'fast';
            zulu['decelerationRate'] = offset;
            yankee = _closure1_slot0;
            romeo = _closure1_slot3;
            offset = 10;
            offset = romeo[offset];
            offset = yankee.bind(report)(offset);
            yankee = offset.CARD_WIDTH;
            offset = _closure1_slot16;
            offset = yankee + offset;
            zulu['snapToInterval'] = offset;
            verify = function(argFoo) { // Original name: renderItem
                entity = argFoo;
                report = entity.item;
                tango = _closure1_slot14;
                mike = _closure1_slot1;
                zulu = _closure1_slot3;
                entity = 10;
                entity = zulu[entity];
                zulu = undefined;
                mike = mike.bind(zulu)(entity);
                entity = {};
                entity['template'] = report;
                report = _closure2_slot2;
                entity['priceTiers'] = report;
                report = _closure2_slot0;
                entity['guildId'] = report;
                oscar = _closure2_slot1;
                entity['groupListingId'] = oscar;
                entity['editGroupId'] = report;
                entity = tango.bind(zulu)(mike, entity);
                return entity;
            };
            zulu['renderItem'] = verify;
            entity = golf.bind(report)(tango, zulu);
 254:
            _fun127377_ip = 328; continue _fun127377;
 256:
            golf = _closure1_slot15;
            tango = _closure1_slot0;
            verify = _closure1_slot3;
            zulu = 9;
            zulu = verify[zulu];
            zulu = tango.bind(report)(zulu);
            tango = zulu.Text;
            zulu = {'variant': 'text-xs/normal', 'color': 'status-danger'};
            verify = options.message;
            options = ['Error: '];
            options[1] = verify;
            zulu['children'] = options;
            entity = golf.bind(report)(tango, zulu);
 328:
            _fun127377_ip = 361; continue _fun127377;
 330:
            tango = _closure1_slot14;
            zulu = _closure1_slot6;
            mike = {};
            oscar = oscar.activityIndicator;
            oscar = oscar.color;
            mike['color'] = oscar;
            entity = tango.bind(report)(zulu, mike);
 361:
            return entity;
        }
    };
    var _closure1_slot18 = entity;
    entity = function(argFoo) { // Original name: GuildSettingsRoleSubscriptionTierTemplateSelectionComponent
        _fun127381: for(var _fun127381_ip = 0; ; ) switch(_fun127381_ip) {
 0:
            mike = argFoo;
            foxtrot = mike.guildId;
            var _closure2_slot0 = foxtrot;
            romeo = mike.groupListingId;
            tango = undefined;
            var _closure2_slot3 = tango;
            var _closure2_slot4 = tango;
            var _closure2_slot5 = tango;
            var _closure2_slot6 = tango;
            var _closure2_slot7 = tango;
            mike = _closure1_slot17;
            sequence = mike.bind(tango)();
            var _closure2_slot1 = sequence;
            oscar = _closure1_slot0;
            golf = _closure1_slot3;
            mike = 11;
            mike = golf[mike];
            options = oscar.bind(tango)(mike);
            report = options.useStateFromStores;
            mike = _closure1_slot10;
            zulu = new Array(1);
            zulu[0] = mike;
            mike = function() {
                zulu = _closure1_slot10;
                mike = zulu.getTemplates;
                entity = _closure2_slot0;
                entity = mike.bind(zulu)(entity);
                return entity;
            };
            output = report.bind(options)(zulu, mike);
            var _closure2_slot2 = output;
            mike = 12;
            mike = golf[mike];
            zulu = oscar.bind(tango)(mike);
            mike = zulu.useGroupListingsForGuild;
            zulu = mike.bind(zulu)(foxtrot);
            mike = 0;
            report = zulu[mike];
            zulu = 13;
            zulu = golf[zulu];
            oscar = oscar.bind(tango)(zulu);
            zulu = oscar.useGroupListingsFetchContext;
            sizing = zulu.bind(oscar)();
            zulu = null;
            if(!(zulu == romeo)) { _fun127381_ip = 185; continue _fun127381 }
 168:
            oscar = zulu == report;
            zulu = undefined;
            if(oscar) { _fun127381_ip = 182; continue _fun127381 }
 177:
            zulu = report.id;
 182:
            romeo = zulu;
 185:
            _closure2_slot3 = romeo;
            result = _closure1_slot1;
            yankee = _closure1_slot3;
            zulu = 14;
            zulu = yankee[zulu];
            report = result.bind(tango)(zulu);
            oscar = _closure1_slot2;
            zulu = 15;
            zulu = yankee[zulu];
            zulu = oscar.bind(tango)(zulu);
            zulu = zulu.getTemplates;
            oscar = report.bind(tango)(zulu);
            report = _closure1_slot4;
            zulu = 2;
            report = report.bind(tango)(oscar, zulu);
            mike = report[mike];
            _closure2_slot4 = mike;
            zulu = 1;
            zulu = report[zulu];
            kilo = zulu.loading;
            backup = zulu.error;
            zulu = 16;
            zulu = yankee[zulu];
            zulu = result.bind(tango)(zulu);
            zulu = zulu.bind(tango)();
            update = zulu.bottom;
            status = _closure1_slot0;
            zulu = 17;
            zulu = yankee[zulu];
            report = status.bind(tango)(zulu);
            zulu = report.useNavigation;
            options = zulu.bind(report)();
            _closure2_slot5 = options;
            zulu = 18;
            zulu = yankee[zulu];
            report = status.bind(tango)(zulu);
            zulu = report.useShowCreatorPortalLinkForTierTemplates;
            offset = zulu.bind(report)(foxtrot);
            oscar = _closure1_slot5;
            report = oscar.useEffect;
            zulu = new Array(3);
            zulu[0] = mike;
            zulu[1] = foxtrot;
            zulu[2] = output;
            mike = function() {
                _fun127383: for(var _fun127383_ip = 0; ; ) switch(_fun127383_ip) {
 0:
                    zulu = _closure2_slot2;
                    mike = null;
                    mike = mike != zulu;
                    if(!mike) { _fun127383_ip = 31; continue _fun127383 }
 16:
                    zulu = _closure2_slot2;
                    tango = zulu.length;
                    zulu = 0;
                    mike = zulu !== tango;
 31:
                    if(mike) { _fun127383_ip = 49; continue _fun127383 }
 34:
                    zulu = _closure2_slot4;
                    mike = _closure2_slot0;
                    entity = undefined;
                    entity = zulu.bind(entity)(mike);
 49:
                    entity = undefined;
                    return entity;
                }
            };
            mike = report.bind(oscar)(mike, zulu);
            oscar = _closure1_slot5;
            report = oscar.useCallback;
            zulu = new Array(1);
            zulu[0] = foxtrot;
            mike = function() {
                zulu = _closure1_slot1;
                options = _closure1_slot3;
                entity = 19;
                mike = options[entity];
                entity = undefined;
                report = zulu.bind(entity)(mike);
                tango = report.track;
                mike = _closure1_slot12;
                zulu = mike.ROLE_SUBSCRIPTION_LISTING_TEMPLATE_SELECTOR_EXITED;
                mike = {};
                golf = 'voluntarily_exit';
                mike['exit_reason'] = golf;
                golf = _closure1_slot0;
                oscar = 20;
                oscar = options[oscar];
                options = golf.bind(entity)(oscar);
                golf = options.collectGuildAnalyticsMetadata;
                oscar = _closure2_slot0;
                verify = golf.bind(options)(oscar);
                offset = mike;
                oscar = copyDataProperties(offset, verify);
                mike = tango.bind(report)(zulu, mike);
                return entity;
            };
            oscar = report.bind(oscar)(mike, zulu);
            _closure2_slot6 = oscar;
            golf = _closure1_slot5;
            report = golf.useCallback;
            zulu = new Array(3);
            zulu[0] = foxtrot;
            zulu[1] = romeo;
            zulu[2] = options;
            mike = function() {
                report = _closure1_slot1;
                tango = _closure1_slot3;
                entity = 19;
                zulu = tango[entity];
                entity = undefined;
                verify = report.bind(entity)(zulu);
                options = verify.track;
                zulu = _closure1_slot12;
                golf = zulu.ROLE_SUBSCRIPTION_LISTING_TEMPLATE_SELECTOR_EXITED;
                zulu = {};
                report = 'create_from_scratch';
                zulu['exit_reason'] = report;
                oscar = _closure1_slot0;
                report = 20;
                report = tango[report];
                yankee = oscar.bind(entity)(report);
                offset = yankee.collectGuildAnalyticsMetadata;
                oscar = _closure2_slot0;
                romeo = offset.bind(yankee)(oscar);
                foxtrot = zulu;
                offset = copyDataProperties(foxtrot, romeo);
                zulu = options.bind(verify)(golf, zulu);
                zulu = _closure1_slot2;
                mike = 21;
                mike = tango[mike];
                tango = zulu.bind(entity)(mike);
                zulu = tango.openTierCreationModal;
                mike = {};
                mike['guildId'] = oscar;
                report = _closure2_slot3;
                mike['groupListingId'] = report;
                report = function() { // Original name: onAfterTierCreation
                    zulu = _closure2_slot5;
                    mike = zulu.navigate;
                    entity = _closure1_slot13;
                    entity = entity.ROLE_SUBSCRIPTIONS_TIERS;
                    entity = mike.bind(zulu)(entity);
                    entity = undefined;
                    return entity;
                };
                mike['onAfterTierCreation'] = report;
                mike = zulu.bind(tango)(mike);
                return entity;
            };
            golf = report.bind(golf)(mike, zulu);
            _closure2_slot7 = golf;
            report = _closure1_slot5;
            zulu = report.useLayoutEffect;
            mike = new Array(4);
            mike[0] = options;
            mike[1] = golf;
            mike[2] = oscar;
            mike[3] = sequence;
            entity = function() {
                tango = _closure2_slot5;
                zulu = tango.setOptions;
                mike = {};
                oscar = function() { // Original name: headerRight
                    tango = _closure1_slot15;
                    zulu = _closure1_slot7;
                    mike = {};
                    report = _closure2_slot7;
                    mike['onPress'] = report;
                    backup = _closure2_slot1;
                    entity = backup.startFromScratch;
                    mike['style'] = entity;
                    entity = 0.5;
                    mike['activeOpacity'] = entity;
                    golf = _closure1_slot14;
                    oscar = _closure1_slot8;
                    report = {};
                    entity = backup.editIcon;
                    report['style'] = entity;
                    yankee = _closure1_slot14;
                    foxtrot = _closure1_slot1;
                    kilo = _closure1_slot3;
                    romeo = 22;
                    options = kilo[romeo];
                    entity = undefined;
                    offset = foxtrot.bind(entity)(options);
                    options = {};
                    sizing = 23;
                    sizing = kilo[sizing];
                    sizing = foxtrot.bind(entity)(sizing);
                    options['source'] = sizing;
                    backup = backup.editIcon;
                    backup = backup.color;
                    options['color'] = backup;
                    romeo = kilo[romeo];
                    romeo = foxtrot.bind(entity)(romeo);
                    romeo = romeo.Sizes;
                    romeo = romeo.REFRESH_SMALL_16;
                    options['size'] = romeo;
                    options = yankee.bind(entity)(offset, options);
                    report['children'] = options;
                    oscar = golf.bind(entity)(oscar, report);
                    report = new Array(2);
                    report[0] = oscar;
                    options = _closure1_slot14;
                    golf = _closure1_slot8;
                    oscar = {};
                    backup = _closure1_slot0;
                    verify = 9;
                    verify = kilo[verify];
                    verify = backup.bind(entity)(verify);
                    offset = verify.Text;
                    verify = {'variant': 'text-md/medium', 'color': 'interactive-active'};
                    yankee = 24;
                    romeo = kilo[yankee];
                    romeo = backup.bind(entity)(romeo);
                    foxtrot = romeo.intl;
                    romeo = foxtrot.string;
                    yankee = kilo[yankee];
                    yankee = backup.bind(entity)(yankee);
                    yankee = yankee.t;
                    yankee = yankee.WNWtkJ;
                    yankee = romeo.bind(foxtrot)(yankee);
                    verify['children'] = yankee;
                    verify = options.bind(entity)(offset, verify);
                    oscar['children'] = verify;
                    oscar = options.bind(entity)(golf, oscar);
                    report[1] = oscar;
                    mike['children'] = report;
                    entity = tango.bind(entity)(zulu, mike);
                    return entity;
                };
                mike['headerRight'] = oscar;
                entity = function() { // Original name: headerTitle
                    tango = _closure1_slot14;
                    zulu = _closure1_slot8;
                    mike = undefined;
                    entity = {};
                    entity = tango.bind(mike)(zulu, entity);
                    return entity;
                };
                mike['headerTitle'] = entity;
                golf = _closure1_slot0;
                oscar = _closure1_slot3;
                entity = 25;
                oscar = oscar[entity];
                entity = undefined;
                golf = golf.bind(entity)(oscar);
                oscar = golf.getHeaderBackButton;
                report = _closure2_slot6;
                report = oscar.bind(golf)(report);
                mike['headerLeft'] = report;
                mike = zulu.bind(tango)(mike);
                return entity;
            };
            entity = zulu.bind(report)(entity, mike);
            entity = 26;
            entity = yankee[entity];
            mike = result.bind(tango)(entity);
            entity = {};
            zulu = 27;
            report = yankee[zulu];
            report = status.bind(tango)(report);
            report = report.ImpressionTypes;
            report = report.PAGE;
            entity['type'] = report;
            zulu = yankee[zulu];
            zulu = status.bind(tango)(zulu);
            zulu = zulu.ImpressionNames;
            zulu = zulu.ROLE_SUBSCRIPTION_LISTING_TEMPLATE_SELECTOR;
            entity['name'] = zulu;
            zulu = {};
            zulu['guild_id'] = foxtrot;
            entity['properties'] = zulu;
            entity = mike.bind(tango)(entity);
            zulu = _closure1_slot14;
            entity = 28;
            entity = yankee[entity];
            entity = status.bind(tango)(entity);
            mike = entity.RoleSubscriptionSettingsDisabledContextProvider;
            entity = {};
            entity['guildId'] = foxtrot;
            golf = _closure1_slot15;
            oscar = _closure1_slot8;
            report = {};
            echo = sequence.container;
            options = new Array(2);
            options[0] = echo;
            echo = {};
            echo['paddingBottom'] = update;
            options[1] = echo;
            report['style'] = options;
            control = _closure1_slot14;
            source = 9;
            options = yankee[source];
            options = status.bind(tango)(options);
            update = options.Text;
            options = {};
            echo = 'heading-xl/semibold';
            options['variant'] = echo;
            vacuum = sequence.title;
            echo = new Array(2);
            echo[0] = vacuum;
            vacuum = sequence.text;
            echo[1] = vacuum;
            options['style'] = echo;
            echo = 24;
            vacuum = yankee[echo];
            vacuum = status.bind(tango)(vacuum);
            record = vacuum.intl;
            config = record.string;
            vacuum = yankee[echo];
            vacuum = status.bind(tango)(vacuum);
            vacuum = vacuum.t;
            vacuum = vacuum.uYFiKi;
            vacuum = config.bind(record)(vacuum);
            options['children'] = vacuum;
            update = control.bind(tango)(update, options);
            options = new Array(7);
            options[0] = update;
            record = _closure1_slot14;
            update = 29;
            control = yankee[update];
            config = result.bind(tango)(control);
            vacuum = {};
            control = 8;
            vacuum['size'] = control;
            vacuum = record.bind(tango)(config, vacuum);
            options[1] = vacuum;
            record = _closure1_slot14;
            source = yankee[source];
            source = status.bind(tango)(source);
            vacuum = source.Text;
            source = {};
            config = 'text-sm/medium';
            source['variant'] = config;
            context = sequence.text;
            source['style'] = context;
            context = yankee[echo];
            context = status.bind(tango)(context);
            target = context.intl;
            papa = target.string;
            context = yankee[echo];
            context = status.bind(tango)(context);
            context = context.t;
            context = context.ne+rg4;
            context = papa.bind(target)(context);
            source['children'] = context;
            source = record.bind(tango)(vacuum, source);
            options[2] = source;
            source = _closure1_slot14;
            yankee = yankee[update];
            result = result.bind(tango)(yankee);
            yankee = {};
            yankee['size'] = control;
            yankee = source.bind(tango)(result, yankee);
            options[3] = yankee;
            if(!offset) { _fun127381_ip = 1054; continue _fun127381 }
 941:
            source = _closure1_slot14;
            vacuum = _closure1_slot0;
            control = _closure1_slot3;
            yankee = 30;
            yankee = control[yankee];
            yankee = vacuum.bind(tango)(yankee);
            result = yankee.TextWithIOSLinkWorkaround;
            yankee = {};
            yankee['variant'] = config;
            sequence = sequence.text;
            yankee['style'] = sequence;
            sequence = control[echo];
            sequence = vacuum.bind(tango)(sequence);
            config = sequence.intl;
            sequence = config.format;
            control = control[echo];
            control = vacuum.bind(tango)(control);
            control = control.t;
            vacuum = control.iQML2t;
            control = {};
            record = 'https://discord.com/creator-portal/learn-from-creators?tab=lightning-lessons';
            control['creatorPortalUrl'] = record;
            control = sequence.bind(config)(vacuum, control);
            yankee['children'] = control;
            offset = source.bind(tango)(result, yankee);
 1054:
            options[4] = offset;
            result = _closure1_slot14;
            yankee = _closure1_slot1;
            offset = _closure1_slot3;
            offset = offset[update];
            yankee = yankee.bind(tango)(offset);
            offset = {};
            offset['size'] = echo;
            offset = result.bind(tango)(yankee, offset);
            options[5] = offset;
            yankee = _closure1_slot14;
            offset = _closure1_slot18;
            verify = {};
            verify['templates'] = output;
            if(kilo) { _fun127381_ip = 1116; continue _fun127381 }
 1113:
            kilo = !sizing;
 1116:
            verify['loading'] = kilo;
            verify['error'] = backup;
            verify['guildId'] = foxtrot;
            verify['groupListingId'] = romeo;
            verify = yankee.bind(tango)(offset, verify);
            options[6] = verify;
            report['children'] = options;
            report = golf.bind(tango)(oscar, report);
            entity['children'] = report;
            entity = zulu.bind(tango)(mike, entity);
            return entity;
        }
    };
    var _closure1_slot19 = entity;
    entity = global;
    verify = entity.Object;
    options = verify.defineProperty;
    tango = {};
    entity = true;
    tango['value'] = entity;
    entity = '__esModule';
    entity = options.bind(verify)(zulu, entity, tango);
    entity = 0;
    tango = oscar[entity];
    entity = undefined;
    tango = romeo.bind(entity)(tango);
    var _closure1_slot4 = tango;
    tango = 1;
    tango = oscar[tango];
    tango = golf.bind(entity)(tango);
    var _closure1_slot5 = tango;
    tango = 2;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    golf = tango.ActivityIndicator;
    var _closure1_slot6 = golf;
    golf = tango.TouchableOpacity;
    var _closure1_slot7 = golf;
    golf = tango.View;
    var _closure1_slot8 = golf;
    tango = tango.FlatList;
    var _closure1_slot9 = tango;
    tango = 3;
    tango = oscar[tango];
    tango = romeo.bind(entity)(tango);
    var _closure1_slot10 = tango;
    offset = 4;
    tango = oscar[offset];
    tango = report.bind(entity)(tango);
    tango = tango.usePriceTiers;
    var _closure1_slot11 = tango;
    tango = 5;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    golf = tango.AnalyticEvents;
    var _closure1_slot12 = golf;
    tango = tango.GuildSettingsSections;
    var _closure1_slot13 = tango;
    tango = 6;
    golf = oscar[tango];
    golf = report.bind(entity)(golf);
    golf = golf.jsx;
    var _closure1_slot14 = golf;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.jsxs;
    var _closure1_slot15 = tango;
    yankee = 16;
    var _closure1_slot16 = yankee;
    tango = 7;
    tango = oscar[tango];
    options = report.bind(entity)(tango);
    golf = options.createStyles;
    tango = {};
    verify = {};
    verify['marginTop'] = yankee;
    tango['container'] = verify;
    verify = {};
    yankee = 8;
    foxtrot = oscar[yankee];
    foxtrot = romeo.bind(entity)(foxtrot);
    foxtrot = foxtrot.colors;
    foxtrot = foxtrot.HEADER_PRIMARY;
    verify['color'] = foxtrot;
    tango['title'] = verify;
    verify = {'marginLeft': 16, 'marginRight': 16};
    tango['text'] = verify;
    verify = {};
    foxtrot = oscar[yankee];
    foxtrot = romeo.bind(entity)(foxtrot);
    foxtrot = foxtrot.colors;
    foxtrot = foxtrot.INTERACTIVE_NORMAL;
    verify['color'] = foxtrot;
    tango['activityIndicator'] = verify;
    verify = {};
    yankee = oscar[yankee];
    yankee = romeo.bind(entity)(yankee);
    yankee = yankee.colors;
    yankee = yankee.INTERACTIVE_ACTIVE;
    verify['color'] = yankee;
    verify['marginRight'] = offset;
    tango['editIcon'] = verify;
    verify = {'display': 'flex', 'flexDirection': 'row', 'alignItems': 'center', 'marginRight': 12};
    tango['startFromScratch'] = verify;
    tango = golf.bind(options)(tango);
    var _closure1_slot17 = tango;
    tango = 31;
    tango = oscar[tango];
    oscar = report.bind(entity)(tango);
    report = oscar.fileFinishedImporting;
    tango = 'modules/guild_role_subscriptions/native/guild_settings/tier_templates/GuildSettingsRoleSubscriptionTierTemplateSelection.tsx';
    tango = report.bind(oscar)(tango);
    mike = function(argFoo) { // Original name: GuildSettingsRoleSubscriptionTierTemplateSelection
        options = argFoo;
        tango = _closure1_slot14;
        mike = _closure1_slot0;
        zulu = _closure1_slot3;
        entity = 13;
        entity = zulu[entity];
        zulu = undefined;
        entity = mike.bind(zulu)(entity);
        mike = entity.GroupListingsFetchContextProvider;
        entity = {};
        oscar = options.guildId;
        entity['guildId'] = oscar;
        golf = _closure1_slot14;
        oscar = _closure1_slot19;
        report = {};
        offset = report;
        verify = options;
        options = copyDataProperties(offset, verify);
        report = golf.bind(zulu)(oscar, report);
        entity['children'] = report;
        entity = tango.bind(zulu)(mike, entity);
        return entity;
    };
    zulu['default'] = mike;
    return entity;
})();