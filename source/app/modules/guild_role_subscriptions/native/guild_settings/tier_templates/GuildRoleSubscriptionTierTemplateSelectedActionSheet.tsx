// app/modules/guild_role_subscriptions/native/guild_settings/tier_templates/GuildRoleSubscriptionTierTemplateSelectedActionSheet.tsx
export default (function(argFoo, argBar, argBaz, argCorge, _, argFred, argPlugh) {
    report = argBar;
    yankee = argBaz;
    zulu = argFred;
    oscar = argPlugh;
    var _closure1_slot0 = report;
    var _closure1_slot1 = yankee;
    var _closure1_slot2 = oscar;
    entity = global;
    options = entity.Object;
    golf = options.defineProperty;
    tango = {};
    entity = true;
    tango['value'] = entity;
    entity = '__esModule';
    entity = golf.bind(options)(zulu, entity, tango);
    entity = 0;
    golf = oscar[entity];
    tango = argCorge;
    entity = undefined;
    tango = tango.bind(entity)(golf);
    tango = 1;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.View;
    var _closure1_slot3 = tango;
    tango = 2;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.ContentDismissActionType;
    var _closure1_slot4 = tango;
    tango = 3;
    golf = oscar[tango];
    golf = report.bind(entity)(golf);
    golf = golf.jsx;
    var _closure1_slot5 = golf;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.jsxs;
    var _closure1_slot6 = tango;
    tango = 4;
    tango = oscar[tango];
    options = report.bind(entity)(tango);
    golf = options.createStyles;
    tango = {};
    verify = {};
    offset = 5;
    romeo = oscar[offset];
    romeo = yankee.bind(entity)(romeo);
    romeo = romeo.colors;
    romeo = romeo.BACKGROUND_SECONDARY;
    verify['backgroundColor'] = romeo;
    romeo = 24;
    verify['padding'] = romeo;
    tango['container'] = verify;
    verify = {};
    offset = oscar[offset];
    offset = yankee.bind(entity)(offset);
    offset = offset.radii;
    offset = offset.xs;
    verify['borderRadius'] = offset;
    tango['button'] = verify;
    tango = golf.bind(options)(tango);
    var _closure1_slot7 = tango;
    tango = 13;
    tango = oscar[tango];
    oscar = report.bind(entity)(tango);
    report = oscar.fileFinishedImporting;
    tango = 'modules/guild_role_subscriptions/native/guild_settings/tier_templates/GuildRoleSubscriptionTierTemplateSelectedActionSheet.tsx';
    tango = report.bind(oscar)(tango);
    mike = function(argFoo) { // Original name: GuildRoleSubscriptionTierTemplateSelectedActionSheet
        entity = argFoo;
        entity = entity.markAsDismissed;
        var _closure2_slot0 = entity;
        entity = _closure1_slot7;
        tango = undefined;
        backup = entity.bind(tango)();
        romeo = _closure1_slot1;
        echo = _closure1_slot2;
        entity = 6;
        entity = echo[entity];
        entity = romeo.bind(tango)(entity);
        entity = entity.bind(tango)();
        yankee = entity.bottom;
        zulu = _closure1_slot5;
        result = _closure1_slot0;
        entity = 7;
        entity = echo[entity];
        entity = result.bind(tango)(entity);
        mike = entity.BottomSheet;
        entity = {};
        report = 0.8;
        entity['backdropOpacity'] = report;
        report = function() { // Original name: onDismiss
            zulu = _closure2_slot0;
            entity = _closure1_slot4;
            mike = entity.UNKNOWN;
            entity = undefined;
            entity = zulu.bind(entity)(mike);
            return entity;
        };
        entity['onDismiss'] = report;
        oscar = _closure1_slot3;
        report = {};
        options = backup.container;
        report['style'] = options;
        verify = _closure1_slot6;
        golf = 8;
        golf = echo[golf];
        golf = result.bind(tango)(golf);
        options = golf.BottomSheetScrollView;
        golf = {};
        offset = {};
        offset['paddingBottom'] = yankee;
        golf['contentContainerStyle'] = offset;
        output = 9;
        offset = echo[output];
        offset = result.bind(tango)(offset);
        yankee = offset.Text;
        offset = {'variant': 'heading-lg/semibold', 'color': 'header-primary'};
        kilo = 10;
        sizing = echo[kilo];
        sizing = result.bind(tango)(sizing);
        source = sizing.intl;
        update = source.string;
        sizing = echo[kilo];
        sizing = result.bind(tango)(sizing);
        sizing = sizing.t;
        sizing = sizing.Y0PTc3;
        sizing = update.bind(source)(sizing);
        offset['children'] = sizing;
        yankee = zulu.bind(tango)(yankee, offset);
        offset = new Array(5);
        offset[0] = yankee;
        sizing = 11;
        yankee = echo[sizing];
        source = romeo.bind(tango)(yankee);
        update = {};
        yankee = 12;
        update['size'] = yankee;
        update = zulu.bind(tango)(source, update);
        offset[1] = update;
        output = echo[output];
        output = result.bind(tango)(output);
        update = output.Text;
        output = {'variant': 'text-sm/normal', 'color': 'text-normal'};
        source = echo[kilo];
        source = result.bind(tango)(source);
        vacuum = source.intl;
        control = vacuum.string;
        source = echo[kilo];
        source = result.bind(tango)(source);
        source = source.t;
        source = source.YSI/19;
        source = control.bind(vacuum)(source);
        output['children'] = source;
        output = zulu.bind(tango)(update, output);
        offset[2] = output;
        sizing = echo[sizing];
        output = romeo.bind(tango)(sizing);
        sizing = {};
        update = 48;
        sizing['size'] = update;
        sizing = zulu.bind(tango)(output, sizing);
        offset[3] = sizing;
        yankee = echo[yankee];
        romeo = romeo.bind(tango)(yankee);
        yankee = {};
        sizing = echo[kilo];
        sizing = result.bind(tango)(sizing);
        output = sizing.intl;
        sizing = output.string;
        kilo = echo[kilo];
        kilo = result.bind(tango)(kilo);
        kilo = kilo.t;
        kilo = kilo.MhldXV;
        kilo = sizing.bind(output)(kilo);
        yankee['text'] = kilo;
        backup = backup.button;
        yankee['style'] = backup;
        foxtrot = function() { // Original name: onPress
            zulu = _closure2_slot0;
            entity = _closure1_slot4;
            mike = entity.UNKNOWN;
            entity = undefined;
            entity = zulu.bind(entity)(mike);
            return entity;
        };
        yankee['onPress'] = foxtrot;
        yankee = zulu.bind(tango)(romeo, yankee);
        offset[4] = yankee;
        golf['children'] = offset;
        golf = verify.bind(tango)(options, golf);
        report['children'] = golf;
        report = zulu.bind(tango)(oscar, report);
        entity['children'] = report;
        entity = zulu.bind(tango)(mike, entity);
        return entity;
    };
    zulu['default'] = mike;
    return entity;
})();