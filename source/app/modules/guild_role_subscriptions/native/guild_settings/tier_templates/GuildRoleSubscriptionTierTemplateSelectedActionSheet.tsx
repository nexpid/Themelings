// app/modules/guild_role_subscriptions/native/guild_settings/tier_templates/GuildRoleSubscriptionTierTemplateSelectedActionSheet.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    report = argBar;
    yankee = argBaz;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    var _closure1_slot1 = yankee;
    var _closure1_slot2 = oscard;
    entity = global;
    option = entity.Object;
    golfie = option.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(option)(zuuluu, entity, tangon);
    entity = 0;
    golfie = oscard[entity];
    tangon = argCor;
    entity = undefined;
    tangon = tangon.bind(entity)(golfie);
    tangon = 1;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.View;
    var _closure1_slot3 = tangon;
    tangon = 2;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.ContentDismissActionType;
    var _closure1_slot4 = tangon;
    tangon = 3;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    golfie = tangon.jsx;
    var _closure1_slot5 = golfie;
    tangon = tangon.jsxs;
    var _closure1_slot6 = tangon;
    tangon = 4;
    tangon = oscard[tangon];
    option = report.bind(entity)(tangon);
    golfie = option.createStyles;
    tangon = {};
    verify = {};
    offset = 5;
    romeon = oscard[offset];
    romeon = yankee.bind(entity)(romeon);
    romeon = romeon.colors;
    romeon = romeon.BACKGROUND_SECONDARY;
    verify['backgroundColor'] = romeon;
    romeon = 24;
    verify['padding'] = romeon;
    tangon['container'] = verify;
    verify = {};
    offset = oscard[offset];
    offset = yankee.bind(entity)(offset);
    offset = offset.radii;
    offset = offset.xs;
    verify['borderRadius'] = offset;
    tangon['button'] = verify;
    tangon = golfie.bind(option)(tangon);
    var _closure1_slot7 = tangon;
    tangon = 13;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/guild_role_subscriptions/native/guild_settings/tier_templates/GuildRoleSubscriptionTierTemplateSelectedActionSheet.tsx';
    tangon = report.bind(oscard)(tangon);
    michal = function(argFoo) { // Original name: GuildRoleSubscriptionTierTemplateSelectedActionSheet
        entity = argFoo;
        entity = entity.markAsDismissed;
        var _closure2_slot0 = entity;
        entity = _closure1_slot7;
        tangon = undefined;
        backup = entity.bind(tangon)();
        romeon = _closure1_slot1;
        echoed = _closure1_slot2;
        entity = 6;
        entity = echoed[entity];
        entity = romeon.bind(tangon)(entity);
        entity = entity.bind(tangon)();
        yankee = entity.bottom;
        zuuluu = _closure1_slot5;
        result = _closure1_slot0;
        entity = 7;
        entity = echoed[entity];
        entity = result.bind(tangon)(entity);
        michal = entity.BottomSheet;
        entity = {};
        report = 0.8;
        entity['backdropOpacity'] = report;
        report = function() { // Original name: onDismiss
            zuuluu = _closure2_slot0;
            entity = _closure1_slot4;
            michal = entity.UNKNOWN;
            entity = undefined;
            entity = zuuluu.bind(entity)(michal);
            return entity;
        };
        entity['onDismiss'] = report;
        oscard = _closure1_slot3;
        report = {};
        option = backup.container;
        report['style'] = option;
        verify = _closure1_slot6;
        golfie = 8;
        golfie = echoed[golfie];
        golfie = result.bind(tangon)(golfie);
        option = golfie.BottomSheetScrollView;
        golfie = {};
        offset = {};
        offset['paddingBottom'] = yankee;
        golfie['contentContainerStyle'] = offset;
        output = 9;
        offset = echoed[output];
        offset = result.bind(tangon)(offset);
        yankee = offset.Text;
        offset = {'variant': 'heading-lg/semibold', 'color': 'header-primary'};
        kiloes = 10;
        sizing = echoed[kiloes];
        sizing = result.bind(tangon)(sizing);
        source = sizing.intl;
        update = source.string;
        sizing = echoed[kiloes];
        sizing = result.bind(tangon)(sizing);
        sizing = sizing.t;
        sizing = sizing.Y0PTc3;
        sizing = update.bind(source)(sizing);
        offset['children'] = sizing;
        yankee = zuuluu.bind(tangon)(yankee, offset);
        offset = new Array(5);
        offset[0] = yankee;
        sizing = 11;
        yankee = echoed[sizing];
        source = romeon.bind(tangon)(yankee);
        update = {};
        yankee = 12;
        update['size'] = yankee;
        update = zuuluu.bind(tangon)(source, update);
        offset[1] = update;
        output = echoed[output];
        output = result.bind(tangon)(output);
        update = output.Text;
        output = {'variant': 'text-sm/normal', 'color': 'text-normal'};
        source = echoed[kiloes];
        source = result.bind(tangon)(source);
        vacuum = source.intl;
        ctrled = vacuum.string;
        source = echoed[kiloes];
        source = result.bind(tangon)(source);
        source = source.t;
        source = source.YSI/19;
        source = ctrled.bind(vacuum)(source);
        output['children'] = source;
        output = zuuluu.bind(tangon)(update, output);
        offset[2] = output;
        sizing = echoed[sizing];
        output = romeon.bind(tangon)(sizing);
        sizing = {};
        update = 48;
        sizing['size'] = update;
        sizing = zuuluu.bind(tangon)(output, sizing);
        offset[3] = sizing;
        yankee = echoed[yankee];
        romeon = romeon.bind(tangon)(yankee);
        yankee = {};
        sizing = echoed[kiloes];
        sizing = result.bind(tangon)(sizing);
        output = sizing.intl;
        sizing = output.string;
        kiloes = echoed[kiloes];
        kiloes = result.bind(tangon)(kiloes);
        kiloes = kiloes.t;
        kiloes = kiloes.MhldXV;
        kiloes = sizing.bind(output)(kiloes);
        yankee['text'] = kiloes;
        backup = backup.button;
        yankee['style'] = backup;
        foxtra = function() { // Original name: onPress
            zuuluu = _closure2_slot0;
            entity = _closure1_slot4;
            michal = entity.UNKNOWN;
            entity = undefined;
            entity = zuuluu.bind(entity)(michal);
            return entity;
        };
        yankee['onPress'] = foxtra;
        yankee = zuuluu.bind(tangon)(romeon, yankee);
        offset[4] = yankee;
        golfie['children'] = offset;
        golfie = verify.bind(tangon)(option, golfie);
        report['children'] = golfie;
        report = zuuluu.bind(tangon)(oscard, report);
        entity['children'] = report;
        entity = zuuluu.bind(tangon)(michal, entity);
        return entity;
    };
    zuuluu['default'] = michal;
    return entity;
})();