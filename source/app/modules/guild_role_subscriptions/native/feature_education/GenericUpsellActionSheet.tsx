// app/modules/guild_role_subscriptions/native/feature_education/GenericUpsellActionSheet.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    report = argBar;
    foxtra = argBaz;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    var _closure1_slot1 = foxtra;
    var _closure1_slot2 = oscard;
    entity = global;
    option = entity.Object;
    golfie = option.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(option)(zuuluu, entity, tangon);
    entity = 0;
    golfie = oscard[entity];
    tangon = argCor;
    entity = undefined;
    tangon = tangon.bind(entity)(golfie);
    yankee = 1;
    tangon = oscard[yankee];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.View;
    var _closure1_slot3 = tangon;
    tangon = 2;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.ContentDismissActionType;
    var _closure1_slot4 = tangon;
    tangon = 3;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    golfie = tangon.jsx;
    var _closure1_slot5 = golfie;
    tangon = tangon.jsxs;
    var _closure1_slot6 = tangon;
    offset = 4;
    tangon = oscard[offset];
    option = report.bind(entity)(tangon);
    golfie = option.createStyles;
    tangon = {};
    verify = {};
    romeon = '100%';
    verify['width'] = romeon;
    tangon['image'] = verify;
    verify = {};
    romeon = 5;
    backup = oscard[romeon];
    backup = foxtra.bind(entity)(backup);
    backup = backup.spacing;
    backup = backup.PX_16;
    verify['paddingHorizontal'] = backup;
    backup = oscard[romeon];
    backup = foxtra.bind(entity)(backup);
    backup = backup.spacing;
    backup = backup.PX_16;
    verify['marginBottom'] = backup;
    tangon['content'] = verify;
    verify = {};
    romeon = oscard[romeon];
    romeon = foxtra.bind(entity)(romeon);
    romeon = romeon.spacing;
    romeon = romeon.PX_16;
    verify['marginBottom'] = romeon;
    verify['flex'] = yankee;
    tangon['description'] = verify;
    verify = {};
    verify['marginTop'] = offset;
    tangon['dismissButton'] = verify;
    tangon = golfie.bind(option)(tangon);
    var _closure1_slot7 = tangon;
    tangon = 15;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/guild_role_subscriptions/native/feature_education/GenericUpsellActionSheet.tsx';
    tangon = report.bind(oscard)(tangon);
    michal = function(argFoo) { // Original name: GenericUpsellActionSheet
        entity = argFoo;
        michal = entity.markAsDismissed;
        var _closure2_slot0 = michal;
        echoed = entity.imageSource;
        update = entity.header;
        output = entity.body;
        backup = entity.onCTAPress;
        foxtra = entity.cta;
        entity = _closure1_slot7;
        tangon = undefined;
        result = entity.bind(tangon)();
        sizing = _closure1_slot0;
        kiloes = _closure1_slot2;
        entity = 6;
        entity = kiloes[entity];
        michal = sizing.bind(tangon)(entity);
        entity = michal.useBottomSheetRef;
        entity = entity.bind(michal)();
        golfie = entity.bottomSheetRef;
        source = entity.bottomSheetClose;
        zuuluu = _closure1_slot5;
        entity = 7;
        entity = kiloes[entity];
        entity = sizing.bind(tangon)(entity);
        michal = entity.RedesignCompat;
        entity = {};
        report = 8;
        report = kiloes[report];
        report = sizing.bind(tangon)(report);
        oscard = report.BottomSheet;
        report = {};
        report['ref'] = golfie;
        golfie = true;
        report['startExpanded'] = golfie;
        option = function() { // Original name: onDismiss
            zuuluu = _closure2_slot0;
            entity = _closure1_slot4;
            michal = entity.UNKNOWN;
            entity = undefined;
            entity = zuuluu.bind(entity)(michal);
            return entity;
        };
        report['onDismiss'] = option;
        report['handleDisabled'] = golfie;
        verify = _closure1_slot6;
        option = _closure1_slot3;
        golfie = {};
        romeon = _closure1_slot1;
        offset = 9;
        offset = kiloes[offset];
        yankee = romeon.bind(tangon)(offset);
        offset = {};
        offset['source'] = echoed;
        echoed = result.image;
        offset['style'] = echoed;
        yankee = zuuluu.bind(tangon)(yankee, offset);
        offset = new Array(2);
        offset[0] = yankee;
        yankee = 10;
        yankee = kiloes[yankee];
        yankee = sizing.bind(tangon)(yankee);
        echoed = yankee.ActionSheetHeaderBar;
        yankee = {};
        ctrled = 11;
        ctrled = kiloes[ctrled];
        ctrled = sizing.bind(tangon)(ctrled);
        ctrled = ctrled.ActionSheetHeaderBarVariants;
        ctrled = ctrled.FLOATING;
        yankee['variant'] = ctrled;
        yankee['onPress'] = source;
        yankee = zuuluu.bind(tangon)(echoed, yankee);
        offset[1] = yankee;
        golfie['children'] = offset;
        golfie = verify.bind(tangon)(option, golfie);
        report['header'] = golfie;
        golfie = {};
        offset = result.content;
        golfie['style'] = offset;
        yankee = 12;
        offset = kiloes[yankee];
        offset = sizing.bind(tangon)(offset);
        echoed = offset.Text;
        offset = {'accessibilityRole': 'header', 'variant': 'heading-xl/medium', 'color': 'header-primary'};
        offset['children'] = update;
        echoed = zuuluu.bind(tangon)(echoed, offset);
        offset = new Array(4);
        offset[0] = echoed;
        echoed = 13;
        echoed = kiloes[echoed];
        update = romeon.bind(tangon)(echoed);
        echoed = {};
        echoed['size'] = yankee;
        echoed = zuuluu.bind(tangon)(update, echoed);
        offset[1] = echoed;
        yankee = kiloes[yankee];
        yankee = sizing.bind(tangon)(yankee);
        sizing = yankee.Text;
        yankee = {'style': null, 'variant': 'text-sm/medium', 'color': 'header-secondary'};
        result = result.description;
        yankee['style'] = result;
        yankee['children'] = output;
        yankee = zuuluu.bind(tangon)(sizing, yankee);
        offset[2] = yankee;
        yankee = 14;
        yankee = kiloes[yankee];
        romeon = romeon.bind(tangon)(yankee);
        yankee = {};
        yankee['onPress'] = backup;
        yankee['text'] = foxtra;
        yankee = zuuluu.bind(tangon)(romeon, yankee);
        offset[3] = yankee;
        golfie['children'] = offset;
        golfie = verify.bind(tangon)(option, golfie);
        report['children'] = golfie;
        report = zuuluu.bind(tangon)(oscard, report);
        entity['children'] = report;
        entity = zuuluu.bind(tangon)(michal, entity);
        return entity;
    };
    zuuluu['default'] = michal;
    return entity;
})();