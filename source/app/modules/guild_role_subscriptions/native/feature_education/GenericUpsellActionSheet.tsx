// app/modules/guild_role_subscriptions/native/feature_education/GenericUpsellActionSheet.tsx
export default (function(argFoo, argBar, argBaz, argCorge, _, argFred, argPlugh) {
    report = argBar;
    foxtrot = argBaz;
    zulu = argFred;
    oscar = argPlugh;
    var _closure1_slot0 = report;
    var _closure1_slot1 = foxtrot;
    var _closure1_slot2 = oscar;
    entity = global;
    options = entity.Object;
    golf = options.defineProperty;
    tango = {};
    entity = true;
    tango['value'] = entity;
    entity = '__esModule';
    entity = golf.bind(options)(zulu, entity, tango);
    entity = 0;
    golf = oscar[entity];
    tango = argCorge;
    entity = undefined;
    tango = tango.bind(entity)(golf);
    yankee = 1;
    tango = oscar[yankee];
    tango = report.bind(entity)(tango);
    tango = tango.View;
    var _closure1_slot3 = tango;
    tango = 2;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.ContentDismissActionType;
    var _closure1_slot4 = tango;
    tango = 3;
    golf = oscar[tango];
    golf = report.bind(entity)(golf);
    golf = golf.jsx;
    var _closure1_slot5 = golf;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.jsxs;
    var _closure1_slot6 = tango;
    offset = 4;
    tango = oscar[offset];
    options = report.bind(entity)(tango);
    golf = options.createStyles;
    tango = {};
    verify = {};
    romeo = '100%';
    verify['width'] = romeo;
    tango['image'] = verify;
    verify = {};
    romeo = 5;
    backup = oscar[romeo];
    backup = foxtrot.bind(entity)(backup);
    backup = backup.spacing;
    backup = backup.PX_16;
    verify['paddingHorizontal'] = backup;
    backup = oscar[romeo];
    backup = foxtrot.bind(entity)(backup);
    backup = backup.spacing;
    backup = backup.PX_16;
    verify['marginBottom'] = backup;
    tango['content'] = verify;
    verify = {};
    romeo = oscar[romeo];
    romeo = foxtrot.bind(entity)(romeo);
    romeo = romeo.spacing;
    romeo = romeo.PX_16;
    verify['marginBottom'] = romeo;
    verify['flex'] = yankee;
    tango['description'] = verify;
    verify = {};
    verify['marginTop'] = offset;
    tango['dismissButton'] = verify;
    tango = golf.bind(options)(tango);
    var _closure1_slot7 = tango;
    tango = 15;
    tango = oscar[tango];
    oscar = report.bind(entity)(tango);
    report = oscar.fileFinishedImporting;
    tango = 'modules/guild_role_subscriptions/native/feature_education/GenericUpsellActionSheet.tsx';
    tango = report.bind(oscar)(tango);
    mike = function(argFoo) { // Original name: GenericUpsellActionSheet
        entity = argFoo;
        mike = entity.markAsDismissed;
        var _closure2_slot0 = mike;
        echo = entity.imageSource;
        update = entity.header;
        output = entity.body;
        backup = entity.onCTAPress;
        foxtrot = entity.cta;
        entity = _closure1_slot7;
        tango = undefined;
        result = entity.bind(tango)();
        sizing = _closure1_slot0;
        kilo = _closure1_slot2;
        entity = 6;
        entity = kilo[entity];
        mike = sizing.bind(tango)(entity);
        entity = mike.useBottomSheetRef;
        entity = entity.bind(mike)();
        golf = entity.bottomSheetRef;
        source = entity.bottomSheetClose;
        zulu = _closure1_slot5;
        entity = 7;
        entity = kilo[entity];
        entity = sizing.bind(tango)(entity);
        mike = entity.RedesignCompat;
        entity = {};
        report = 8;
        report = kilo[report];
        report = sizing.bind(tango)(report);
        oscar = report.BottomSheet;
        report = {};
        report['ref'] = golf;
        golf = true;
        report['startExpanded'] = golf;
        options = function() { // Original name: onDismiss
            zulu = _closure2_slot0;
            entity = _closure1_slot4;
            mike = entity.UNKNOWN;
            entity = undefined;
            entity = zulu.bind(entity)(mike);
            return entity;
        };
        report['onDismiss'] = options;
        report['handleDisabled'] = golf;
        verify = _closure1_slot6;
        options = _closure1_slot3;
        golf = {};
        romeo = _closure1_slot1;
        offset = 9;
        offset = kilo[offset];
        yankee = romeo.bind(tango)(offset);
        offset = {};
        offset['source'] = echo;
        echo = result.image;
        offset['style'] = echo;
        yankee = zulu.bind(tango)(yankee, offset);
        offset = new Array(2);
        offset[0] = yankee;
        yankee = 10;
        yankee = kilo[yankee];
        yankee = sizing.bind(tango)(yankee);
        echo = yankee.ActionSheetHeaderBar;
        yankee = {};
        control = 11;
        control = kilo[control];
        control = sizing.bind(tango)(control);
        control = control.ActionSheetHeaderBarVariants;
        control = control.FLOATING;
        yankee['variant'] = control;
        yankee['onPress'] = source;
        yankee = zulu.bind(tango)(echo, yankee);
        offset[1] = yankee;
        golf['children'] = offset;
        golf = verify.bind(tango)(options, golf);
        report['header'] = golf;
        golf = {};
        offset = result.content;
        golf['style'] = offset;
        yankee = 12;
        offset = kilo[yankee];
        offset = sizing.bind(tango)(offset);
        echo = offset.Text;
        offset = {'accessibilityRole': 'header', 'variant': 'heading-xl/medium', 'color': 'header-primary'};
        offset['children'] = update;
        echo = zulu.bind(tango)(echo, offset);
        offset = new Array(4);
        offset[0] = echo;
        echo = 13;
        echo = kilo[echo];
        update = romeo.bind(tango)(echo);
        echo = {};
        echo['size'] = yankee;
        echo = zulu.bind(tango)(update, echo);
        offset[1] = echo;
        yankee = kilo[yankee];
        yankee = sizing.bind(tango)(yankee);
        sizing = yankee.Text;
        yankee = {'style': null, 'variant': 'text-sm/medium', 'color': 'header-secondary'};
        result = result.description;
        yankee['style'] = result;
        yankee['children'] = output;
        yankee = zulu.bind(tango)(sizing, yankee);
        offset[2] = yankee;
        yankee = 14;
        yankee = kilo[yankee];
        romeo = romeo.bind(tango)(yankee);
        yankee = {};
        yankee['onPress'] = backup;
        yankee['text'] = foxtrot;
        yankee = zulu.bind(tango)(romeo, yankee);
        offset[3] = yankee;
        golf['children'] = offset;
        golf = verify.bind(tango)(options, golf);
        report['children'] = golf;
        report = zulu.bind(tango)(oscar, report);
        entity['children'] = report;
        entity = zulu.bind(tango)(mike, entity);
        return entity;
    };
    zulu['default'] = mike;
    return entity;
})();