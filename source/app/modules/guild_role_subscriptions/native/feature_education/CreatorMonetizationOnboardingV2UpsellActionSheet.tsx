// app/modules/guild_role_subscriptions/native/feature_education/CreatorMonetizationOnboardingV2UpsellActionSheet.tsx
export default (function(argFoo, argBar, argBaz, argCorge, _, argFred, argPlugh) {
    report = argBar;
    romeo = argBaz;
    zulu = argFred;
    oscar = argPlugh;
    var _closure1_slot0 = report;
    var _closure1_slot1 = romeo;
    var _closure1_slot2 = oscar;
    entity = global;
    options = entity.Object;
    golf = options.defineProperty;
    tango = {};
    entity = true;
    tango['value'] = entity;
    entity = '__esModule';
    entity = golf.bind(options)(zulu, entity, tango);
    entity = 0;
    golf = oscar[entity];
    tango = argCorge;
    entity = undefined;
    tango = tango.bind(entity)(golf);
    tango = 1;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.View;
    var _closure1_slot3 = tango;
    tango = 2;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.GuildSettingsSections;
    var _closure1_slot4 = tango;
    tango = 3;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.ContentDismissActionType;
    var _closure1_slot5 = tango;
    offset = 4;
    tango = oscar[offset];
    tango = report.bind(entity)(tango);
    tango = tango.jsx;
    var _closure1_slot6 = tango;
    tango = oscar[offset];
    tango = report.bind(entity)(tango);
    tango = tango.jsxs;
    var _closure1_slot7 = tango;
    tango = 5;
    tango = oscar[tango];
    options = report.bind(entity)(tango);
    golf = options.createStyles;
    tango = {};
    foxtrot = 24;
    verify = {'paddingLeft': 24, 'paddingRight': 24, 'paddingTop': 24};
    tango['container'] = verify;
    verify = {};
    yankee = 6;
    verify['marginBottom'] = yankee;
    tango['title'] = verify;
    verify = {};
    verify['marginBottom'] = foxtrot;
    tango['description'] = verify;
    verify = {'marginBottom': 24, 'width': '100%'};
    tango['image'] = verify;
    verify = {};
    yankee = oscar[yankee];
    yankee = romeo.bind(entity)(yankee);
    yankee = yankee.colors;
    yankee = yankee.HEADER_SECONDARY;
    verify['color'] = yankee;
    tango['dismissButtonText'] = verify;
    verify = {};
    verify['marginTop'] = offset;
    tango['dismissButton'] = verify;
    tango = golf.bind(options)(tango);
    var _closure1_slot8 = tango;
    tango = 14;
    tango = oscar[tango];
    oscar = report.bind(entity)(tango);
    report = oscar.fileFinishedImporting;
    tango = 'modules/guild_role_subscriptions/native/feature_education/CreatorMonetizationOnboardingV2UpsellActionSheet.tsx';
    tango = report.bind(oscar)(tango);
    mike = function(argFoo) { // Original name: CreatorMonetizationOnboardingV2UpsellActionSheet
        entity = argFoo;
        mike = entity.guildId;
        var _closure2_slot0 = mike;
        entity = entity.markAsDismissed;
        var _closure2_slot1 = entity;
        entity = _closure1_slot8;
        tango = undefined;
        yankee = entity.bind(tango)();
        zulu = _closure1_slot6;
        result = _closure1_slot0;
        backup = _closure1_slot2;
        entity = 7;
        entity = backup[entity];
        entity = result.bind(tango)(entity);
        mike = entity.BottomSheet;
        entity = {};
        report = true;
        entity['startExpanded'] = report;
        report = function() { // Original name: onDismiss
            zulu = _closure2_slot1;
            entity = _closure1_slot5;
            mike = entity.UNKNOWN;
            entity = undefined;
            entity = zulu.bind(entity)(mike);
            return entity;
        };
        entity['onDismiss'] = report;
        golf = _closure1_slot7;
        oscar = _closure1_slot3;
        report = {};
        options = yankee.container;
        report['style'] = options;
        offset = 8;
        options = backup[offset];
        options = result.bind(tango)(options);
        romeo = options.Text;
        options = {'style': null, 'accessibilityRole': 'header', 'variant': 'heading-lg/extrabold', 'color': 'header-primary'};
        foxtrot = yankee.title;
        options['style'] = foxtrot;
        kilo = 9;
        foxtrot = backup[kilo];
        foxtrot = result.bind(tango)(foxtrot);
        echo = foxtrot.intl;
        output = echo.string;
        foxtrot = backup[kilo];
        foxtrot = result.bind(tango)(foxtrot);
        foxtrot = foxtrot.t;
        foxtrot = foxtrot.v+Jm6e;
        foxtrot = output.bind(echo)(foxtrot);
        options['children'] = foxtrot;
        romeo = zulu.bind(tango)(romeo, options);
        options = new Array(5);
        options[0] = romeo;
        offset = backup[offset];
        offset = result.bind(tango)(offset);
        romeo = offset.Text;
        offset = {'style': null, 'accessibilityRole': 'text', 'variant': 'text-sm/medium', 'color': 'header-secondary'};
        foxtrot = yankee.description;
        offset['style'] = foxtrot;
        foxtrot = backup[kilo];
        foxtrot = result.bind(tango)(foxtrot);
        echo = foxtrot.intl;
        output = echo.string;
        foxtrot = backup[kilo];
        foxtrot = result.bind(tango)(foxtrot);
        foxtrot = foxtrot.t;
        foxtrot = foxtrot.kUUFbG;
        foxtrot = output.bind(echo)(foxtrot);
        offset['children'] = foxtrot;
        offset = zulu.bind(tango)(romeo, offset);
        options[1] = offset;
        foxtrot = _closure1_slot1;
        verify = 10;
        verify = backup[verify];
        offset = foxtrot.bind(tango)(verify);
        verify = {};
        romeo = yankee.image;
        verify['style'] = romeo;
        romeo = 'contain';
        verify['resizeMode'] = romeo;
        romeo = 11;
        romeo = backup[romeo];
        romeo = foxtrot.bind(tango)(romeo);
        verify['source'] = romeo;
        verify = zulu.bind(tango)(offset, verify);
        options[2] = verify;
        romeo = 12;
        verify = backup[romeo];
        offset = foxtrot.bind(tango)(verify);
        verify = {};
        output = function() { // Original name: onPress
            report = _closure2_slot1;
            entity = _closure1_slot5;
            tango = entity.UNKNOWN;
            entity = undefined;
            tango = report.bind(entity)(tango);
            report = _closure1_slot1;
            oscar = _closure1_slot2;
            tango = 13;
            tango = oscar[tango];
            report = report.bind(entity)(tango);
            tango = report.open;
            zulu = _closure2_slot0;
            mike = _closure1_slot4;
            mike = mike.ROLE_SUBSCRIPTIONS;
            mike = tango.bind(report)(zulu, mike);
            return entity;
        };
        verify['onPress'] = output;
        output = backup[kilo];
        output = result.bind(tango)(output);
        update = output.intl;
        echo = update.string;
        output = backup[kilo];
        output = result.bind(tango)(output);
        output = output.t;
        output = output.OgQQbG;
        output = echo.bind(update)(output);
        verify['text'] = output;
        verify = zulu.bind(tango)(offset, verify);
        options[3] = verify;
        verify = backup[romeo];
        offset = foxtrot.bind(tango)(verify);
        verify = {};
        sizing = function() { // Original name: onPress
            zulu = _closure2_slot1;
            entity = _closure1_slot5;
            mike = entity.UNKNOWN;
            entity = undefined;
            entity = zulu.bind(entity)(mike);
            return entity;
        };
        verify['onPress'] = sizing;
        sizing = backup[kilo];
        sizing = result.bind(tango)(sizing);
        output = sizing.intl;
        sizing = output.string;
        kilo = backup[kilo];
        kilo = result.bind(tango)(kilo);
        kilo = kilo.t;
        kilo = kilo.WAI6xs;
        kilo = sizing.bind(output)(kilo);
        verify['text'] = kilo;
        romeo = backup[romeo];
        romeo = foxtrot.bind(tango)(romeo);
        romeo = romeo.Colors;
        romeo = romeo.TRANSPARENT;
        verify['color'] = romeo;
        romeo = yankee.dismissButton;
        verify['style'] = romeo;
        yankee = yankee.dismissButtonText;
        verify['textStyle'] = yankee;
        verify = zulu.bind(tango)(offset, verify);
        options[4] = verify;
        report['children'] = options;
        report = golf.bind(tango)(oscar, report);
        entity['children'] = report;
        entity = zulu.bind(tango)(mike, entity);
        return entity;
    };
    zulu['default'] = mike;
    return entity;
})();