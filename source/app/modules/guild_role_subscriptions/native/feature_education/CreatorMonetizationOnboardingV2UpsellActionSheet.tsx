// app/modules/guild_role_subscriptions/native/feature_education/CreatorMonetizationOnboardingV2UpsellActionSheet.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    report = argBar;
    romeon = argBaz;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    var _closure1_slot1 = romeon;
    var _closure1_slot2 = oscard;
    entity = global;
    option = entity.Object;
    golfie = option.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(option)(zuuluu, entity, tangon);
    entity = 0;
    golfie = oscard[entity];
    tangon = argCor;
    entity = undefined;
    tangon = tangon.bind(entity)(golfie);
    tangon = 1;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.View;
    var _closure1_slot3 = tangon;
    tangon = 2;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.GuildSettingsSections;
    var _closure1_slot4 = tangon;
    tangon = 3;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.ContentDismissActionType;
    var _closure1_slot5 = tangon;
    offset = 4;
    tangon = oscard[offset];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.jsx;
    var _closure1_slot6 = tangon;
    tangon = oscard[offset];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.jsxs;
    var _closure1_slot7 = tangon;
    tangon = 5;
    tangon = oscard[tangon];
    option = report.bind(entity)(tangon);
    golfie = option.createStyles;
    tangon = {};
    foxtra = 24;
    verify = {'paddingLeft': 24, 'paddingRight': 24, 'paddingTop': 24};
    tangon['container'] = verify;
    verify = {};
    yankee = 6;
    verify['marginBottom'] = yankee;
    tangon['title'] = verify;
    verify = {};
    verify['marginBottom'] = foxtra;
    tangon['description'] = verify;
    verify = {'marginBottom': 24, 'width': '100%'};
    tangon['image'] = verify;
    verify = {};
    yankee = oscard[yankee];
    yankee = romeon.bind(entity)(yankee);
    yankee = yankee.colors;
    yankee = yankee.HEADER_SECONDARY;
    verify['color'] = yankee;
    tangon['dismissButtonText'] = verify;
    verify = {};
    verify['marginTop'] = offset;
    tangon['dismissButton'] = verify;
    tangon = golfie.bind(option)(tangon);
    var _closure1_slot8 = tangon;
    tangon = 14;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/guild_role_subscriptions/native/feature_education/CreatorMonetizationOnboardingV2UpsellActionSheet.tsx';
    tangon = report.bind(oscard)(tangon);
    michal = function(argFoo) { // Original name: CreatorMonetizationOnboardingV2UpsellActionSheet
        entity = argFoo;
        michal = entity.guildId;
        var _closure2_slot0 = michal;
        entity = entity.markAsDismissed;
        var _closure2_slot1 = entity;
        entity = _closure1_slot8;
        tangon = undefined;
        yankee = entity.bind(tangon)();
        zuuluu = _closure1_slot6;
        result = _closure1_slot0;
        backup = _closure1_slot2;
        entity = 7;
        entity = backup[entity];
        entity = result.bind(tangon)(entity);
        michal = entity.BottomSheet;
        entity = {};
        report = true;
        entity['startExpanded'] = report;
        report = function() { // Original name: onDismiss
            zuuluu = _closure2_slot1;
            entity = _closure1_slot5;
            michal = entity.UNKNOWN;
            entity = undefined;
            entity = zuuluu.bind(entity)(michal);
            return entity;
        };
        entity['onDismiss'] = report;
        golfie = _closure1_slot7;
        oscard = _closure1_slot3;
        report = {};
        option = yankee.container;
        report['style'] = option;
        offset = 8;
        option = backup[offset];
        option = result.bind(tangon)(option);
        romeon = option.Text;
        option = {'style': null, 'accessibilityRole': 'header', 'variant': 'heading-lg/extrabold', 'color': 'header-primary'};
        foxtra = yankee.title;
        option['style'] = foxtra;
        kiloes = 9;
        foxtra = backup[kiloes];
        foxtra = result.bind(tangon)(foxtra);
        echoed = foxtra.intl;
        output = echoed.string;
        foxtra = backup[kiloes];
        foxtra = result.bind(tangon)(foxtra);
        foxtra = foxtra.t;
        foxtra = foxtra.v+Jm6e;
        foxtra = output.bind(echoed)(foxtra);
        option['children'] = foxtra;
        romeon = zuuluu.bind(tangon)(romeon, option);
        option = new Array(5);
        option[0] = romeon;
        offset = backup[offset];
        offset = result.bind(tangon)(offset);
        romeon = offset.Text;
        offset = {'style': null, 'accessibilityRole': 'text', 'variant': 'text-sm/medium', 'color': 'header-secondary'};
        foxtra = yankee.description;
        offset['style'] = foxtra;
        foxtra = backup[kiloes];
        foxtra = result.bind(tangon)(foxtra);
        echoed = foxtra.intl;
        output = echoed.string;
        foxtra = backup[kiloes];
        foxtra = result.bind(tangon)(foxtra);
        foxtra = foxtra.t;
        foxtra = foxtra.kUUFbG;
        foxtra = output.bind(echoed)(foxtra);
        offset['children'] = foxtra;
        offset = zuuluu.bind(tangon)(romeon, offset);
        option[1] = offset;
        foxtra = _closure1_slot1;
        verify = 10;
        verify = backup[verify];
        offset = foxtra.bind(tangon)(verify);
        verify = {};
        romeon = yankee.image;
        verify['style'] = romeon;
        romeon = 'contain';
        verify['resizeMode'] = romeon;
        romeon = 11;
        romeon = backup[romeon];
        romeon = foxtra.bind(tangon)(romeon);
        verify['source'] = romeon;
        verify = zuuluu.bind(tangon)(offset, verify);
        option[2] = verify;
        romeon = 12;
        verify = backup[romeon];
        offset = foxtra.bind(tangon)(verify);
        verify = {};
        output = function() { // Original name: onPress
            report = _closure2_slot1;
            entity = _closure1_slot5;
            tangon = entity.UNKNOWN;
            entity = undefined;
            tangon = report.bind(entity)(tangon);
            report = _closure1_slot1;
            oscard = _closure1_slot2;
            tangon = 13;
            tangon = oscard[tangon];
            report = report.bind(entity)(tangon);
            tangon = report.open;
            zuuluu = _closure2_slot0;
            michal = _closure1_slot4;
            michal = michal.ROLE_SUBSCRIPTIONS;
            michal = tangon.bind(report)(zuuluu, michal);
            return entity;
        };
        verify['onPress'] = output;
        output = backup[kiloes];
        output = result.bind(tangon)(output);
        update = output.intl;
        echoed = update.string;
        output = backup[kiloes];
        output = result.bind(tangon)(output);
        output = output.t;
        output = output.OgQQbG;
        output = echoed.bind(update)(output);
        verify['text'] = output;
        verify = zuuluu.bind(tangon)(offset, verify);
        option[3] = verify;
        verify = backup[romeon];
        offset = foxtra.bind(tangon)(verify);
        verify = {};
        sizing = function() { // Original name: onPress
            zuuluu = _closure2_slot1;
            entity = _closure1_slot5;
            michal = entity.UNKNOWN;
            entity = undefined;
            entity = zuuluu.bind(entity)(michal);
            return entity;
        };
        verify['onPress'] = sizing;
        sizing = backup[kiloes];
        sizing = result.bind(tangon)(sizing);
        output = sizing.intl;
        sizing = output.string;
        kiloes = backup[kiloes];
        kiloes = result.bind(tangon)(kiloes);
        kiloes = kiloes.t;
        kiloes = kiloes.WAI6xs;
        kiloes = sizing.bind(output)(kiloes);
        verify['text'] = kiloes;
        romeon = backup[romeon];
        romeon = foxtra.bind(tangon)(romeon);
        romeon = romeon.Colors;
        romeon = romeon.TRANSPARENT;
        verify['color'] = romeon;
        romeon = yankee.dismissButton;
        verify['style'] = romeon;
        yankee = yankee.dismissButtonText;
        verify['textStyle'] = yankee;
        verify = zuuluu.bind(tangon)(offset, verify);
        option[4] = verify;
        report['children'] = option;
        report = golfie.bind(tangon)(oscard, report);
        entity['children'] = report;
        entity = zuuluu.bind(tangon)(michal, entity);
        return entity;
    };
    zuuluu['default'] = michal;
    return entity;
})();