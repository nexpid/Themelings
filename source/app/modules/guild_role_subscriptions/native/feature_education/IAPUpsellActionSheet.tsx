// app/modules/guild_role_subscriptions/native/feature_education/IAPUpsellActionSheet.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    report = argBar;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    entity = argBaz;
    var _closure1_slot1 = entity;
    var _closure1_slot2 = oscard;
    entity = global;
    option = entity.Object;
    golfie = option.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(option)(zuuluu, entity, tangon);
    entity = 0;
    golfie = oscard[entity];
    tangon = argCor;
    entity = undefined;
    tangon = tangon.bind(entity)(golfie);
    tangon = 1;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.Routes;
    var _closure1_slot3 = tangon;
    tangon = 2;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.StaticChannelRoute;
    var _closure1_slot4 = tangon;
    tangon = 3;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.ContentDismissActionType;
    var _closure1_slot5 = tangon;
    tangon = 4;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.jsx;
    var _closure1_slot6 = tangon;
    tangon = 9;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/guild_role_subscriptions/native/feature_education/IAPUpsellActionSheet.tsx';
    tangon = report.bind(oscard)(tangon);
    michal = function(argFoo) { // Original name: IAPUpsellActionSheet
        entity = argFoo;
        michal = entity.guildId;
        var _closure2_slot0 = michal;
        report = entity.markAsDismissed;
        var _closure2_slot1 = report;
        tangon = _closure1_slot6;
        verify = _closure1_slot1;
        yankee = _closure1_slot2;
        entity = 5;
        entity = yankee[entity];
        zuuluu = undefined;
        michal = verify.bind(zuuluu)(entity);
        entity = {};
        option = 6;
        option = yankee[option];
        option = verify.bind(zuuluu)(option);
        entity['imageSource'] = option;
        offset = _closure1_slot0;
        golfie = 7;
        option = yankee[golfie];
        option = offset.bind(zuuluu)(option);
        romeon = option.intl;
        verify = romeon.string;
        option = yankee[golfie];
        option = offset.bind(zuuluu)(option);
        option = option.t;
        option = option.rBw4cH;
        option = verify.bind(romeon)(option);
        entity['header'] = option;
        option = yankee[golfie];
        option = offset.bind(zuuluu)(option);
        romeon = option.intl;
        verify = romeon.string;
        option = yankee[golfie];
        option = offset.bind(zuuluu)(option);
        option = option.t;
        option = option.mKHibW;
        option = verify.bind(romeon)(option);
        entity['body'] = option;
        option = yankee[golfie];
        option = offset.bind(zuuluu)(option);
        verify = option.intl;
        option = verify.string;
        golfie = yankee[golfie];
        golfie = offset.bind(zuuluu)(golfie);
        golfie = golfie.t;
        golfie = golfie.RzWDqa;
        golfie = option.bind(verify)(golfie);
        entity['cta'] = golfie;
        oscard = function() { // Original name: onCTAPress
            tangon = _closure1_slot0;
            zuuluu = _closure1_slot2;
            entity = 8;
            zuuluu = zuuluu[entity];
            entity = undefined;
            oscard = tangon.bind(entity)(zuuluu);
            report = oscard.transitionTo;
            verify = _closure1_slot3;
            option = verify.CHANNEL;
            golfie = _closure2_slot0;
            tangon = _closure1_slot4;
            tangon = tangon.ROLE_SUBSCRIPTIONS;
            tangon = option.bind(verify)(golfie, tangon);
            tangon = report.bind(oscard)(tangon);
            zuuluu = _closure2_slot1;
            michal = _closure1_slot5;
            michal = michal.UNKNOWN;
            michal = zuuluu.bind(entity)(michal);
            return entity;
        };
        entity['onCTAPress'] = oscard;
        entity['markAsDismissed'] = report;
        entity = tangon.bind(zuuluu)(michal, entity);
        return entity;
    };
    zuuluu['default'] = michal;
    return entity;
})();