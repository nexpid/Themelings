// app/modules/guild_role_subscriptions/native/manage_subscriptions/UserSettingsGuildRoleSubscriptions.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    report = argBar;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    entity = argBaz;
    var _closure1_slot1 = entity;
    var _closure1_slot2 = oscard;
    entity = function() { // Original name: GuildRoleSubscriptionsSectionHeader
        entity = _closure1_slot8;
        tangon = undefined;
        offset = entity.bind(tangon)();
        zuuluu = _closure1_slot6;
        michal = _closure1_slot3;
        entity = {};
        report = offset.sectionHeader;
        entity['style'] = report;
        yankee = _closure1_slot5;
        romeon = _closure1_slot0;
        foxtra = _closure1_slot2;
        oscard = 4;
        report = foxtra[oscard];
        report = romeon.bind(tangon)(report);
        option = report.Text;
        report = {'variant': 'eyebrow', 'color': 'header-secondary'};
        verify = 5;
        backup = foxtra[verify];
        backup = romeon.bind(tangon)(backup);
        sizing = backup.intl;
        kiloes = sizing.string;
        backup = foxtra[verify];
        backup = romeon.bind(tangon)(backup);
        backup = backup.t;
        backup = backup.KzCF//;
        backup = kiloes.bind(sizing)(backup);
        report['children'] = backup;
        option = yankee.bind(tangon)(option, report);
        report = new Array(2);
        report[0] = option;
        option = _closure1_slot5;
        oscard = foxtra[oscard];
        oscard = romeon.bind(tangon)(oscard);
        golfie = oscard.Text;
        oscard = {'style': null, 'variant': 'text-sm/medium', 'color': 'header-secondary'};
        offset = offset.sectionSubtitle;
        oscard['style'] = offset;
        offset = foxtra[verify];
        offset = romeon.bind(tangon)(offset);
        yankee = offset.intl;
        offset = yankee.string;
        verify = foxtra[verify];
        verify = romeon.bind(tangon)(verify);
        verify = verify.t;
        verify = verify.Y+ucR0;
        verify = offset.bind(yankee)(verify);
        oscard['children'] = verify;
        oscard = option.bind(tangon)(golfie, oscard);
        report[1] = oscard;
        entity['children'] = report;
        entity = zuuluu.bind(tangon)(michal, entity);
        return entity;
    };
    var _closure1_slot9 = entity;
    entity = function(argFoo) { // Original name: renderSectionHeader
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            entity = argFoo;
            entity = entity.section;
            tangon = entity.key;
            zuuluu = _closure1_slot7;
            entity = null;
            if(!(tangon === zuuluu)) { _fun00002_ip = 44; continue _fun00001 }
 26:
            report = _closure1_slot5;
            tangon = _closure1_slot9;
            zuuluu = undefined;
            michal = {};
            entity = report.bind(zuuluu)(tangon, michal);
 44:
            return entity;
        }
    };
    var _closure1_slot10 = entity;
    entity = function() { // Original name: ItemSeparator
        tangon = _closure1_slot5;
        michal = _closure1_slot1;
        zuuluu = _closure1_slot2;
        entity = 6;
        entity = zuuluu[entity];
        zuuluu = undefined;
        michal = michal.bind(zuuluu)(entity);
        entity = {};
        report = 8;
        entity['size'] = report;
        entity = tangon.bind(zuuluu)(michal, entity);
        return entity;
    };
    var _closure1_slot11 = entity;
    entity = global;
    option = entity.Object;
    golfie = option.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(option)(zuuluu, entity, tangon);
    entity = 0;
    golfie = oscard[entity];
    tangon = argCor;
    entity = undefined;
    tangon = tangon.bind(entity)(golfie);
    offset = 1;
    tangon = oscard[offset];
    tangon = report.bind(entity)(tangon);
    golfie = tangon.View;
    var _closure1_slot3 = golfie;
    tangon = tangon.SectionList;
    var _closure1_slot4 = tangon;
    tangon = 2;
    golfie = oscard[tangon];
    golfie = report.bind(entity)(golfie);
    golfie = golfie.jsx;
    var _closure1_slot5 = golfie;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.jsxs;
    var _closure1_slot6 = tangon;
    tangon = 'role-subscriptions';
    var _closure1_slot7 = tangon;
    tangon = 3;
    tangon = oscard[tangon];
    option = report.bind(entity)(tangon);
    golfie = option.createStyles;
    tangon = {};
    verify = {};
    verify['flex'] = offset;
    tangon['container'] = verify;
    verify = {};
    verify['flex'] = offset;
    tangon['list'] = verify;
    verify = {};
    offset = 16;
    verify['paddingHorizontal'] = offset;
    tangon['listContentContainer'] = verify;
    verify = {};
    offset = 24;
    verify['paddingVertical'] = offset;
    tangon['sectionHeader'] = verify;
    verify = {};
    offset = 4;
    verify['marginTop'] = offset;
    tangon['sectionSubtitle'] = verify;
    tangon = golfie.bind(option)(tangon);
    var _closure1_slot8 = tangon;
    tangon = 12;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/guild_role_subscriptions/native/manage_subscriptions/UserSettingsGuildRoleSubscriptions.tsx';
    tangon = report.bind(oscard)(tangon);
    michal = function() { // Original name: UserSettingsGuildRoleSubscriptions
        _fun00003: for(var _fun00004_ip = 0; ; ) switch(_fun00004_ip) {
 0:
            entity = _closure1_slot8;
            report = undefined;
            yankee = entity.bind(report)();
            zuuluu = _closure1_slot1;
            tangon = _closure1_slot2;
            entity = 7;
            entity = tangon[entity];
            golfie = zuuluu.bind(report)(entity);
            entity = {};
            oscard = true;
            entity['forceRestore'] = oscard;
            entity = golfie.bind(report)(entity);
            entity = 8;
            entity = tangon[entity];
            zuuluu = zuuluu.bind(report)(entity);
            entity = {};
            entity['ensureFresh'] = oscard;
            offset = zuuluu.bind(report)(entity);
            zuuluu = _closure1_slot0;
            entity = 9;
            entity = tangon[entity];
            zuuluu = zuuluu.bind(report)(entity);
            entity = zuuluu.useFetchListingsForSubscriptions;
            entity = entity.bind(zuuluu)(offset);
            entity = entity.loading;
            tangon = _closure1_slot5;
            if(entity) { _fun00004_ip = 256; continue _fun00003 }
 116:
            zuuluu = _closure1_slot3;
            entity = {};
            oscard = yankee.container;
            entity['style'] = oscard;
            option = _closure1_slot5;
            golfie = _closure1_slot4;
            oscard = {};
            romeon = yankee.listContentContainer;
            oscard['contentContainerStyle'] = romeon;
            yankee = yankee.list;
            oscard['style'] = yankee;
            yankee = {};
            romeon = _closure1_slot7;
            yankee['key'] = romeon;
            yankee['data'] = offset;
            offset = new Array(1);
            offset[0] = yankee;
            oscard['sections'] = offset;
            offset = false;
            oscard['stickySectionHeadersEnabled'] = offset;
            offset = function(argFoo) { // Original name: keyExtractor
                entity = argFoo;
                entity = entity.id;
                return entity;
            };
            oscard['keyExtractor'] = offset;
            offset = _closure1_slot10;
            oscard['renderSectionHeader'] = offset;
            verify = function(argFoo) { // Original name: renderItem
                entity = argFoo;
                report = entity.item;
                tangon = _closure1_slot5;
                michal = _closure1_slot1;
                zuuluu = _closure1_slot2;
                entity = 11;
                entity = zuuluu[entity];
                zuuluu = undefined;
                michal = michal.bind(zuuluu)(entity);
                entity = {};
                entity['subscription'] = report;
                entity = tangon.bind(zuuluu)(michal, entity);
                return entity;
            };
            oscard['renderItem'] = verify;
            verify = _closure1_slot11;
            oscard['ItemSeparatorComponent'] = verify;
            oscard = option.bind(report)(golfie, oscard);
            entity['children'] = oscard;
            entity = tangon.bind(report)(zuuluu, entity);
            _fun00004_ip = 284; continue _fun00003;
 256:
            zuuluu = _closure1_slot1;
            oscard = _closure1_slot2;
            michal = 10;
            michal = oscard[michal];
            zuuluu = zuuluu.bind(report)(michal);
            michal = {};
            entity = tangon.bind(report)(zuuluu, michal);
 284:
            return entity;
        }
    };
    zuuluu['default'] = michal;
    return entity;
})();