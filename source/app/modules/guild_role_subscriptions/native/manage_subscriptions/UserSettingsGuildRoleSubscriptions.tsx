// app/modules/guild_role_subscriptions/native/manage_subscriptions/UserSettingsGuildRoleSubscriptions.tsx
export default (function(argFoo, argBar, argBaz, argCorge, _, argFred, argPlugh) {
    report = argBar;
    zulu = argFred;
    oscar = argPlugh;
    var _closure1_slot0 = report;
    entity = argBaz;
    var _closure1_slot1 = entity;
    var _closure1_slot2 = oscar;
    entity = function() { // Original name: GuildRoleSubscriptionsSectionHeader
        entity = _closure1_slot8;
        tango = undefined;
        offset = entity.bind(tango)();
        zulu = _closure1_slot6;
        mike = _closure1_slot3;
        entity = {};
        report = offset.sectionHeader;
        entity['style'] = report;
        yankee = _closure1_slot5;
        romeo = _closure1_slot0;
        foxtrot = _closure1_slot2;
        oscar = 4;
        report = foxtrot[oscar];
        report = romeo.bind(tango)(report);
        options = report.Text;
        report = {'variant': 'eyebrow', 'color': 'header-secondary'};
        verify = 5;
        backup = foxtrot[verify];
        backup = romeo.bind(tango)(backup);
        sizing = backup.intl;
        kilo = sizing.string;
        backup = foxtrot[verify];
        backup = romeo.bind(tango)(backup);
        backup = backup.t;
        backup = backup.KzCF//;
        backup = kilo.bind(sizing)(backup);
        report['children'] = backup;
        options = yankee.bind(tango)(options, report);
        report = new Array(2);
        report[0] = options;
        options = _closure1_slot5;
        oscar = foxtrot[oscar];
        oscar = romeo.bind(tango)(oscar);
        golf = oscar.Text;
        oscar = {'style': null, 'variant': 'text-sm/medium', 'color': 'header-secondary'};
        offset = offset.sectionSubtitle;
        oscar['style'] = offset;
        offset = foxtrot[verify];
        offset = romeo.bind(tango)(offset);
        yankee = offset.intl;
        offset = yankee.string;
        verify = foxtrot[verify];
        verify = romeo.bind(tango)(verify);
        verify = verify.t;
        verify = verify.Y+ucR0;
        verify = offset.bind(yankee)(verify);
        oscar['children'] = verify;
        oscar = options.bind(tango)(golf, oscar);
        report[1] = oscar;
        entity['children'] = report;
        entity = zulu.bind(tango)(mike, entity);
        return entity;
    };
    var _closure1_slot9 = entity;
    entity = function(argFoo) { // Original name: renderSectionHeader
        _fun96573: for(var _fun96573_ip = 0; ; ) switch(_fun96573_ip) {
 0:
            entity = argFoo;
            entity = entity.section;
            tango = entity.key;
            zulu = _closure1_slot7;
            entity = null;
            if(!(tango === zulu)) { _fun96573_ip = 44; continue _fun96573 }
 26:
            report = _closure1_slot5;
            tango = _closure1_slot9;
            zulu = undefined;
            mike = {};
            entity = report.bind(zulu)(tango, mike);
 44:
            return entity;
        }
    };
    var _closure1_slot10 = entity;
    entity = function() { // Original name: ItemSeparator
        tango = _closure1_slot5;
        mike = _closure1_slot1;
        zulu = _closure1_slot2;
        entity = 6;
        entity = zulu[entity];
        zulu = undefined;
        mike = mike.bind(zulu)(entity);
        entity = {};
        report = 8;
        entity['size'] = report;
        entity = tango.bind(zulu)(mike, entity);
        return entity;
    };
    var _closure1_slot11 = entity;
    entity = global;
    options = entity.Object;
    golf = options.defineProperty;
    tango = {};
    entity = true;
    tango['value'] = entity;
    entity = '__esModule';
    entity = golf.bind(options)(zulu, entity, tango);
    entity = 0;
    golf = oscar[entity];
    tango = argCorge;
    entity = undefined;
    tango = tango.bind(entity)(golf);
    offset = 1;
    tango = oscar[offset];
    tango = report.bind(entity)(tango);
    golf = tango.View;
    var _closure1_slot3 = golf;
    tango = tango.SectionList;
    var _closure1_slot4 = tango;
    tango = 2;
    golf = oscar[tango];
    golf = report.bind(entity)(golf);
    golf = golf.jsx;
    var _closure1_slot5 = golf;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.jsxs;
    var _closure1_slot6 = tango;
    tango = 'role-subscriptions';
    var _closure1_slot7 = tango;
    tango = 3;
    tango = oscar[tango];
    options = report.bind(entity)(tango);
    golf = options.createStyles;
    tango = {};
    verify = {};
    verify['flex'] = offset;
    tango['container'] = verify;
    verify = {};
    verify['flex'] = offset;
    tango['list'] = verify;
    verify = {};
    offset = 16;
    verify['paddingHorizontal'] = offset;
    tango['listContentContainer'] = verify;
    verify = {};
    offset = 24;
    verify['paddingVertical'] = offset;
    tango['sectionHeader'] = verify;
    verify = {};
    offset = 4;
    verify['marginTop'] = offset;
    tango['sectionSubtitle'] = verify;
    tango = golf.bind(options)(tango);
    var _closure1_slot8 = tango;
    tango = 12;
    tango = oscar[tango];
    oscar = report.bind(entity)(tango);
    report = oscar.fileFinishedImporting;
    tango = 'modules/guild_role_subscriptions/native/manage_subscriptions/UserSettingsGuildRoleSubscriptions.tsx';
    tango = report.bind(oscar)(tango);
    mike = function() { // Original name: UserSettingsGuildRoleSubscriptions
        _fun96575: for(var _fun96575_ip = 0; ; ) switch(_fun96575_ip) {
 0:
            entity = _closure1_slot8;
            report = undefined;
            yankee = entity.bind(report)();
            zulu = _closure1_slot1;
            tango = _closure1_slot2;
            entity = 7;
            entity = tango[entity];
            golf = zulu.bind(report)(entity);
            entity = {};
            oscar = true;
            entity['forceRestore'] = oscar;
            entity = golf.bind(report)(entity);
            entity = 8;
            entity = tango[entity];
            zulu = zulu.bind(report)(entity);
            entity = {};
            entity['ensureFresh'] = oscar;
            offset = zulu.bind(report)(entity);
            zulu = _closure1_slot0;
            entity = 9;
            entity = tango[entity];
            zulu = zulu.bind(report)(entity);
            entity = zulu.useFetchListingsForSubscriptions;
            entity = entity.bind(zulu)(offset);
            entity = entity.loading;
            tango = _closure1_slot5;
            if(entity) { _fun96575_ip = 256; continue _fun96575 }
 116:
            zulu = _closure1_slot3;
            entity = {};
            oscar = yankee.container;
            entity['style'] = oscar;
            options = _closure1_slot5;
            golf = _closure1_slot4;
            oscar = {};
            romeo = yankee.listContentContainer;
            oscar['contentContainerStyle'] = romeo;
            yankee = yankee.list;
            oscar['style'] = yankee;
            yankee = {};
            romeo = _closure1_slot7;
            yankee['key'] = romeo;
            yankee['data'] = offset;
            offset = new Array(1);
            offset[0] = yankee;
            oscar['sections'] = offset;
            offset = false;
            oscar['stickySectionHeadersEnabled'] = offset;
            offset = function(argFoo) { // Original name: keyExtractor
                entity = argFoo;
                entity = entity.id;
                return entity;
            };
            oscar['keyExtractor'] = offset;
            offset = _closure1_slot10;
            oscar['renderSectionHeader'] = offset;
            verify = function(argFoo) { // Original name: renderItem
                entity = argFoo;
                report = entity.item;
                tango = _closure1_slot5;
                mike = _closure1_slot1;
                zulu = _closure1_slot2;
                entity = 11;
                entity = zulu[entity];
                zulu = undefined;
                mike = mike.bind(zulu)(entity);
                entity = {};
                entity['subscription'] = report;
                entity = tango.bind(zulu)(mike, entity);
                return entity;
            };
            oscar['renderItem'] = verify;
            verify = _closure1_slot11;
            oscar['ItemSeparatorComponent'] = verify;
            oscar = options.bind(report)(golf, oscar);
            entity['children'] = oscar;
            entity = tango.bind(report)(zulu, entity);
            _fun96575_ip = 284; continue _fun96575;
 256:
            zulu = _closure1_slot1;
            oscar = _closure1_slot2;
            mike = 10;
            mike = oscar[mike];
            zulu = zulu.bind(report)(mike);
            mike = {};
            entity = tango.bind(report)(zulu, mike);
 284:
            return entity;
        }
    };
    zulu['default'] = mike;
    return entity;
})();