// app/modules/guild_role_subscriptions/native/manage_subscriptions/ResubscribedAlert.tsx
export default (function(argFoo, argBar, argBaz, argCorge, _, argFred, argPlugh) {
    report = argBar;
    yankee = argBaz;
    zulu = argFred;
    oscar = argPlugh;
    var _closure1_slot0 = report;
    var _closure1_slot1 = yankee;
    var _closure1_slot2 = oscar;
    entity = global;
    options = entity.Object;
    golf = options.defineProperty;
    tango = {};
    entity = true;
    tango['value'] = entity;
    entity = '__esModule';
    entity = golf.bind(options)(zulu, entity, tango);
    entity = 0;
    golf = oscar[entity];
    tango = argCorge;
    entity = undefined;
    tango = tango.bind(entity)(golf);
    tango = 1;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    golf = tango.View;
    var _closure1_slot3 = golf;
    tango = tango.Image;
    var _closure1_slot4 = tango;
    tango = 2;
    golf = oscar[tango];
    golf = report.bind(entity)(golf);
    golf = golf.jsx;
    var _closure1_slot5 = golf;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.jsxs;
    var _closure1_slot6 = tango;
    tango = 3;
    tango = oscar[tango];
    options = report.bind(entity)(tango);
    golf = options.createStyles;
    tango = {};
    verify = {};
    offset = 4;
    offset = oscar[offset];
    offset = yankee.bind(entity)(offset);
    offset = offset.colors;
    offset = offset.BACKGROUND_SECONDARY_ALT;
    verify['backgroundColor'] = offset;
    tango['container'] = verify;
    offset = 'center';
    verify = {'alignItems': 'center', 'textAlign': 'center'};
    tango['body'] = verify;
    verify = {};
    verify['textAlign'] = offset;
    tango['centerText'] = verify;
    verify = {'width': 87, 'height': 87};
    tango['headerImage'] = verify;
    tango = golf.bind(options)(tango);
    var _closure1_slot7 = tango;
    tango = 10;
    tango = oscar[tango];
    oscar = report.bind(entity)(tango);
    report = oscar.fileFinishedImporting;
    tango = 'modules/guild_role_subscriptions/native/manage_subscriptions/ResubscribedAlert.tsx';
    tango = report.bind(oscar)(tango);
    mike = function(argFoo) { // Original name: ResubscribedAlert
        entity = argFoo;
        report = entity.onClose;
        entity = _closure1_slot7;
        tango = undefined;
        romeo = entity.bind(tango)();
        zulu = _closure1_slot5;
        foxtrot = _closure1_slot1;
        kilo = _closure1_slot2;
        entity = 5;
        entity = kilo[entity];
        mike = foxtrot.bind(tango)(entity);
        entity = {};
        backup = _closure1_slot0;
        yankee = 6;
        oscar = kilo[yankee];
        oscar = backup.bind(tango)(oscar);
        verify = oscar.intl;
        golf = verify.string;
        oscar = kilo[yankee];
        oscar = backup.bind(tango)(oscar);
        oscar = oscar.t;
        oscar = oscar.NX+WJC;
        oscar = golf.bind(verify)(oscar);
        entity['confirmText'] = oscar;
        entity['onConfirm'] = report;
        report = romeo.container;
        entity['style'] = report;
        golf = _closure1_slot6;
        oscar = _closure1_slot3;
        report = {};
        verify = romeo.body;
        report['style'] = verify;
        verify = _closure1_slot4;
        options = {};
        offset = 7;
        offset = kilo[offset];
        offset = foxtrot.bind(tango)(offset);
        options['source'] = offset;
        offset = romeo.headerImage;
        options['style'] = offset;
        verify = zulu.bind(tango)(verify, options);
        options = new Array(5);
        options[0] = verify;
        offset = 8;
        verify = kilo[offset];
        sizing = foxtrot.bind(tango)(verify);
        verify = {};
        output = 27;
        verify['size'] = output;
        verify = zulu.bind(tango)(sizing, verify);
        options[1] = verify;
        verify = 9;
        sizing = kilo[verify];
        sizing = backup.bind(tango)(sizing);
        output = sizing.Text;
        sizing = {'variant': 'text-lg/semibold', 'color': 'header-primary'};
        result = romeo.centerText;
        sizing['style'] = result;
        result = kilo[yankee];
        result = backup.bind(tango)(result);
        update = result.intl;
        echo = update.string;
        result = kilo[yankee];
        result = backup.bind(tango)(result);
        result = result.t;
        result = result.oPV2c3;
        result = echo.bind(update)(result);
        sizing['children'] = result;
        sizing = zulu.bind(tango)(output, sizing);
        options[2] = sizing;
        offset = kilo[offset];
        foxtrot = foxtrot.bind(tango)(offset);
        offset = {};
        sizing = 12;
        offset['size'] = sizing;
        offset = zulu.bind(tango)(foxtrot, offset);
        options[3] = offset;
        verify = kilo[verify];
        verify = backup.bind(tango)(verify);
        offset = verify.Text;
        verify = {'variant': 'text-md/normal', 'color': 'header-primary'};
        romeo = romeo.centerText;
        verify['style'] = romeo;
        romeo = kilo[yankee];
        romeo = backup.bind(tango)(romeo);
        foxtrot = romeo.intl;
        romeo = foxtrot.string;
        yankee = kilo[yankee];
        yankee = backup.bind(tango)(yankee);
        yankee = yankee.t;
        yankee = yankee.DdRizc;
        yankee = romeo.bind(foxtrot)(yankee);
        verify['children'] = yankee;
        verify = zulu.bind(tango)(offset, verify);
        options[4] = verify;
        report['children'] = options;
        report = golf.bind(tango)(oscar, report);
        entity['children'] = report;
        entity = zulu.bind(tango)(mike, entity);
        return entity;
    };
    zulu['default'] = mike;
    return entity;
})();