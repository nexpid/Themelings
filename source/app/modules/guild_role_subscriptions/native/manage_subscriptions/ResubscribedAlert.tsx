// app/modules/guild_role_subscriptions/native/manage_subscriptions/ResubscribedAlert.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    report = argBar;
    yankee = argBaz;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    var _closure1_slot1 = yankee;
    var _closure1_slot2 = oscard;
    entity = global;
    option = entity.Object;
    golfie = option.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(option)(zuuluu, entity, tangon);
    entity = 0;
    golfie = oscard[entity];
    tangon = argCor;
    entity = undefined;
    tangon = tangon.bind(entity)(golfie);
    tangon = 1;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    golfie = tangon.View;
    var _closure1_slot3 = golfie;
    tangon = tangon.Image;
    var _closure1_slot4 = tangon;
    tangon = 2;
    golfie = oscard[tangon];
    golfie = report.bind(entity)(golfie);
    golfie = golfie.jsx;
    var _closure1_slot5 = golfie;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.jsxs;
    var _closure1_slot6 = tangon;
    tangon = 3;
    tangon = oscard[tangon];
    option = report.bind(entity)(tangon);
    golfie = option.createStyles;
    tangon = {};
    verify = {};
    offset = 4;
    offset = oscard[offset];
    offset = yankee.bind(entity)(offset);
    offset = offset.colors;
    offset = offset.BACKGROUND_SECONDARY_ALT;
    verify['backgroundColor'] = offset;
    tangon['container'] = verify;
    offset = 'center';
    verify = {'alignItems': 'center', 'textAlign': 'center'};
    tangon['body'] = verify;
    verify = {};
    verify['textAlign'] = offset;
    tangon['centerText'] = verify;
    verify = {'width': 87, 'height': 87};
    tangon['headerImage'] = verify;
    tangon = golfie.bind(option)(tangon);
    var _closure1_slot7 = tangon;
    tangon = 10;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/guild_role_subscriptions/native/manage_subscriptions/ResubscribedAlert.tsx';
    tangon = report.bind(oscard)(tangon);
    michal = function(argFoo) { // Original name: ResubscribedAlert
        entity = argFoo;
        report = entity.onClose;
        entity = _closure1_slot7;
        tangon = undefined;
        romeon = entity.bind(tangon)();
        zuuluu = _closure1_slot5;
        foxtra = _closure1_slot1;
        kiloes = _closure1_slot2;
        entity = 5;
        entity = kiloes[entity];
        michal = foxtra.bind(tangon)(entity);
        entity = {};
        backup = _closure1_slot0;
        yankee = 6;
        oscard = kiloes[yankee];
        oscard = backup.bind(tangon)(oscard);
        verify = oscard.intl;
        golfie = verify.string;
        oscard = kiloes[yankee];
        oscard = backup.bind(tangon)(oscard);
        oscard = oscard.t;
        oscard = oscard.NX+WJC;
        oscard = golfie.bind(verify)(oscard);
        entity['confirmText'] = oscard;
        entity['onConfirm'] = report;
        report = romeon.container;
        entity['style'] = report;
        golfie = _closure1_slot6;
        oscard = _closure1_slot3;
        report = {};
        verify = romeon.body;
        report['style'] = verify;
        verify = _closure1_slot4;
        option = {};
        offset = 7;
        offset = kiloes[offset];
        offset = foxtra.bind(tangon)(offset);
        option['source'] = offset;
        offset = romeon.headerImage;
        option['style'] = offset;
        verify = zuuluu.bind(tangon)(verify, option);
        option = new Array(5);
        option[0] = verify;
        offset = 8;
        verify = kiloes[offset];
        sizing = foxtra.bind(tangon)(verify);
        verify = {};
        output = 27;
        verify['size'] = output;
        verify = zuuluu.bind(tangon)(sizing, verify);
        option[1] = verify;
        verify = 9;
        sizing = kiloes[verify];
        sizing = backup.bind(tangon)(sizing);
        output = sizing.Text;
        sizing = {'variant': 'text-lg/semibold', 'color': 'header-primary'};
        result = romeon.centerText;
        sizing['style'] = result;
        result = kiloes[yankee];
        result = backup.bind(tangon)(result);
        update = result.intl;
        echoed = update.string;
        result = kiloes[yankee];
        result = backup.bind(tangon)(result);
        result = result.t;
        result = result.oPV2c3;
        result = echoed.bind(update)(result);
        sizing['children'] = result;
        sizing = zuuluu.bind(tangon)(output, sizing);
        option[2] = sizing;
        offset = kiloes[offset];
        foxtra = foxtra.bind(tangon)(offset);
        offset = {};
        sizing = 12;
        offset['size'] = sizing;
        offset = zuuluu.bind(tangon)(foxtra, offset);
        option[3] = offset;
        verify = kiloes[verify];
        verify = backup.bind(tangon)(verify);
        offset = verify.Text;
        verify = {'variant': 'text-md/normal', 'color': 'header-primary'};
        romeon = romeon.centerText;
        verify['style'] = romeon;
        romeon = kiloes[yankee];
        romeon = backup.bind(tangon)(romeon);
        foxtra = romeon.intl;
        romeon = foxtra.string;
        yankee = kiloes[yankee];
        yankee = backup.bind(tangon)(yankee);
        yankee = yankee.t;
        yankee = yankee.DdRizc;
        yankee = romeon.bind(foxtra)(yankee);
        verify['children'] = yankee;
        verify = zuuluu.bind(tangon)(offset, verify);
        option[4] = verify;
        report['children'] = option;
        report = golfie.bind(tangon)(oscard, report);
        entity['children'] = report;
        entity = zuuluu.bind(tangon)(michal, entity);
        return entity;
    };
    zuuluu['default'] = michal;
    return entity;
})();