// app/modules/guild_role_subscriptions/native/system_message/GuildRoleSubscriptionSystemMessageUtils.tsx
export default (function(argFoo, argBar, argBaz, _, __, argFre, argPlu) {
    report = argBar;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    entity = argBaz;
    var _closure1_slot1 = entity;
    var _closure1_slot2 = oscard;
    entity = global;
    option = entity.Object;
    golfie = option.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(option)(zuuluu, entity, tangon);
    entity = 0;
    tangon = oscard[entity];
    entity = undefined;
    tangon = report.bind(entity)(tangon);
    tangon = tangon.AnalyticEvents;
    var _closure1_slot3 = tangon;
    tangon = 4;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/guild_role_subscriptions/native/system_message/GuildRoleSubscriptionSystemMessageUtils.tsx';
    tangon = report.bind(oscard)(tangon);
    michal = function(argFoo, argBar, argBaz) {
        verify = argFoo;
        option = argBar;
        golfie = argBaz;
        tangon = _closure1_slot1;
        report = _closure1_slot2;
        zuuluu = 1;
        oscard = report[zuuluu];
        entity = undefined;
        yankee = tangon.bind(entity)(oscard);
        offset = yankee.sendGreetMessage;
        oscard = verify.id;
        zuuluu = report[zuuluu];
        foxtra = tangon.bind(entity)(zuuluu);
        romeon = foxtra.getSendMessageOptionsForReply;
        zuuluu = {};
        zuuluu['channel'] = verify;
        zuuluu['message'] = option;
        backup = true;
        zuuluu['shouldMention'] = backup;
        zuuluu['showMentionToggle'] = backup;
        zuuluu = romeon.bind(foxtra)(zuuluu);
        zuuluu = offset.bind(yankee)(oscard, golfie, zuuluu);
        oscard = _closure1_slot0;
        zuuluu = 2;
        zuuluu = report[zuuluu];
        oscard = oscard.bind(entity)(zuuluu);
        zuuluu = oscard.getRoleSubscriptionPurchaseSystemMessageEventProperties;
        output = zuuluu.bind(oscard)(verify, option);
        zuuluu = 3;
        zuuluu = report[zuuluu];
        report = tangon.bind(entity)(zuuluu);
        tangon = report.trackWithMetadata;
        michal = _closure1_slot3;
        zuuluu = michal.ROLE_SUBSCRIPTION_PURCHASE_SYSTEM_MESSAGE_CTA_CLICKED;
        michal = {};
        result = michal;
        oscard = copyDataProperties(result, output);
        oscard = 'sticker_id';
        michal[oscard] = golfie;
        michal = tangon.bind(report)(zuuluu, michal);
        return entity;
    };
    zuuluu['handleRoleSubscriptionPurchaseSystemMessageCtaClicked'] = michal;
    return entity;
})();