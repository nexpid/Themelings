// app/modules/guild_role_subscriptions/native/system_message/GuildRoleSubscriptionSystemMessageUtils.tsx
export default (function(argFoo, argBar, argBaz, _, __, argFred, argPlugh) {
    report = argBar;
    zulu = argFred;
    oscar = argPlugh;
    var _closure1_slot0 = report;
    entity = argBaz;
    var _closure1_slot1 = entity;
    var _closure1_slot2 = oscar;
    entity = global;
    options = entity.Object;
    golf = options.defineProperty;
    tango = {};
    entity = true;
    tango['value'] = entity;
    entity = '__esModule';
    entity = golf.bind(options)(zulu, entity, tango);
    entity = 0;
    tango = oscar[entity];
    entity = undefined;
    tango = report.bind(entity)(tango);
    tango = tango.AnalyticEvents;
    var _closure1_slot3 = tango;
    tango = 4;
    tango = oscar[tango];
    oscar = report.bind(entity)(tango);
    report = oscar.fileFinishedImporting;
    tango = 'modules/guild_role_subscriptions/native/system_message/GuildRoleSubscriptionSystemMessageUtils.tsx';
    tango = report.bind(oscar)(tango);
    mike = function(argFoo, argBar, argBaz) {
        verify = argFoo;
        options = argBar;
        golf = argBaz;
        tango = _closure1_slot1;
        report = _closure1_slot2;
        zulu = 1;
        oscar = report[zulu];
        entity = undefined;
        yankee = tango.bind(entity)(oscar);
        offset = yankee.sendGreetMessage;
        oscar = verify.id;
        zulu = report[zulu];
        foxtrot = tango.bind(entity)(zulu);
        romeo = foxtrot.getSendMessageOptionsForReply;
        zulu = {};
        zulu['channel'] = verify;
        zulu['message'] = options;
        backup = true;
        zulu['shouldMention'] = backup;
        zulu['showMentionToggle'] = backup;
        zulu = romeo.bind(foxtrot)(zulu);
        zulu = offset.bind(yankee)(oscar, golf, zulu);
        oscar = _closure1_slot0;
        zulu = 2;
        zulu = report[zulu];
        oscar = oscar.bind(entity)(zulu);
        zulu = oscar.getRoleSubscriptionPurchaseSystemMessageEventProperties;
        output = zulu.bind(oscar)(verify, options);
        zulu = 3;
        zulu = report[zulu];
        report = tango.bind(entity)(zulu);
        tango = report.trackWithMetadata;
        mike = _closure1_slot3;
        zulu = mike.ROLE_SUBSCRIPTION_PURCHASE_SYSTEM_MESSAGE_CTA_CLICKED;
        mike = {};
        result = mike;
        oscar = copyDataProperties(result, output);
        oscar = 'sticker_id';
        mike[oscar] = golf;
        mike = tango.bind(report)(zulu, mike);
        return entity;
    };
    zulu['handleRoleSubscriptionPurchaseSystemMessageCtaClicked'] = mike;
    return entity;
})();