// app/modules/guild_role_subscriptions/native/purchase_page/GuildRoleSubscriptionPurchasePreviewCard.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    report = argBar;
    yankee = argBaz;
    golfie = argCor;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    var _closure1_slot1 = yankee;
    var _closure1_slot2 = golfie;
    var _closure1_slot3 = oscard;
    entity = function(argFoo) { // Original name: ContentHeader
        entity = argFoo;
        verify = entity.count;
        oscard = entity.title;
        entity = _closure1_slot11;
        tangon = undefined;
        offset = entity.bind(tangon)();
        zuuluu = _closure1_slot9;
        golfie = _closure1_slot0;
        yankee = _closure1_slot3;
        report = 7;
        entity = yankee[report];
        entity = golfie.bind(tangon)(entity);
        michal = entity.Text;
        entity = {'variant': 'text-xs/bold', 'color': 'text-muted'};
        romeon = offset.contentHeader;
        entity['style'] = romeon;
        option = _closure1_slot8;
        report = yankee[report];
        report = golfie.bind(tangon)(report);
        golfie = report.Text;
        report = {'variant': 'text-xs/bold', 'color': 'text-normal'};
        offset = offset.contentHeader;
        report['style'] = offset;
        report['children'] = verify;
        golfie = option.bind(tangon)(golfie, report);
        report = new Array(3);
        report[0] = golfie;
        golfie = ' ';
        report[1] = golfie;
        report[2] = oscard;
        entity['children'] = report;
        entity = zuuluu.bind(tangon)(michal, entity);
        return entity;
    };
    var _closure1_slot12 = entity;
    entity = function() { // Original name: Separator
        michal = _closure1_slot11;
        tangon = undefined;
        report = michal.bind(tangon)();
        zuuluu = _closure1_slot8;
        michal = _closure1_slot6;
        entity = {};
        report = report.separator;
        entity['style'] = report;
        entity = zuuluu.bind(tangon)(michal, entity);
        return entity;
    };
    var _closure1_slot13 = entity;
    entity = function(argFoo) { // Original name: EmojiGallery
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            zuuluu = argFoo;
            entity = zuuluu.emojiIds;
            michal = zuuluu.maxEmojis;
            zuuluu = zuuluu.guildId;
            var _closure2_slot0 = zuuluu;
            zuuluu = _closure1_slot11;
            tangon = undefined;
            kiloes = zuuluu.bind(tangon)();
            zuuluu = entity.slice;
            verify = 0;
            romeon = zuuluu.bind(entity)(verify, michal);
            entity = entity.length;
            result = entity - michal;
            zuuluu = _closure1_slot8;
            michal = _closure1_slot6;
            entity = {};
            report = kiloes.emojiGallery;
            entity['style'] = report;
            golfie = _closure1_slot8;
            oscard = _closure1_slot0;
            offset = _closure1_slot3;
            report = 11;
            report = offset[report];
            report = oscard.bind(tangon)(report);
            oscard = report.GappedList;
            report = {};
            offset = 18;
            report['gap'] = offset;
            offset = romeon.map;
            option = function(argFoo) {
                report = argFoo;
                tangon = _closure1_slot8;
                michal = _closure1_slot1;
                zuuluu = _closure1_slot3;
                entity = 12;
                entity = zuuluu[entity];
                zuuluu = undefined;
                michal = michal.bind(zuuluu)(entity);
                entity = {'size': 30, 'fontSize': 20};
                oscard = _closure2_slot0;
                entity['guildId'] = oscard;
                entity['id'] = report;
                entity = tangon.bind(zuuluu)(michal, entity, report);
                return entity;
            };
            update = offset.bind(romeon)(option);
            option = new Array(1);
            source = option;
            echoed = 0;
            offset = arraySpread(source, update, echoed);
            verify = result > verify;
            if(!verify) { _fun00002_ip = 262; continue _fun00001 }
 158:
            backup = _closure1_slot8;
            foxtra = _closure1_slot6;
            romeon = {};
            kiloes = kiloes.emojiTruncatedContainer;
            romeon['style'] = kiloes;
            sizing = _closure1_slot9;
            kiloes = _closure1_slot0;
            output = _closure1_slot3;
            yankee = 7;
            yankee = output[yankee];
            yankee = kiloes.bind(tangon)(yankee);
            kiloes = yankee.Text;
            yankee = {'variant': 'text-sm/bold', 'color': 'text-normal'};
            output = ['+'];
            output[1] = result;
            yankee['children'] = output;
            yankee = sizing.bind(tangon)(kiloes, yankee);
            romeon['children'] = yankee;
            yankee = 'andMore';
            verify = backup.bind(tangon)(foxtra, romeon, yankee);
 262:
            option[offset] = verify;
            verify = 1;
            verify = offset + verify;
            report['children'] = option;
            report = golfie.bind(tangon)(oscard, report);
            entity['children'] = report;
            entity = zuuluu.bind(tangon)(michal, entity);
            return entity;
        }
    };
    var _closure1_slot14 = entity;
    entity = function(argFoo) { // Original name: BenefitShowCase
        _fun00003: for(var _fun00004_ip = 0; ; ) switch(_fun00004_ip) {
 0:
            entity = argFoo;
            verify = entity.title;
            backup = entity.description;
            tangon = _closure1_slot9;
            zuuluu = _closure1_slot6;
            michal = {};
            oscard = 'string';
            entity = typeof verify;
            report = verify;
            if(!(oscard === entity)) { _fun00004_ip = 95; continue _fun00003 }
 40:
            option = _closure1_slot8;
            oscard = _closure1_slot0;
            golfie = _closure1_slot3;
            entity = 7;
            entity = golfie[entity];
            golfie = undefined;
            entity = oscard.bind(golfie)(entity);
            oscard = entity.Text;
            entity = {'variant': 'text-md/semibold', 'color': 'text-normal'};
            entity['children'] = verify;
            report = option.bind(golfie)(oscard, entity);
 95:
            entity = new Array(2);
            entity[0] = report;
            report = null;
            report = report != backup;
            if(!report) { _fun00004_ip = 237; continue _fun00003 }
 115:
            verify = _closure1_slot9;
            option = _closure1_slot10;
            golfie = {};
            foxtra = _closure1_slot8;
            romeon = _closure1_slot1;
            kiloes = _closure1_slot3;
            oscard = 13;
            offset = kiloes[oscard];
            oscard = undefined;
            romeon = romeon.bind(oscard)(offset);
            offset = {};
            sizing = 2;
            offset['size'] = sizing;
            romeon = foxtra.bind(oscard)(romeon, offset);
            offset = new Array(2);
            offset[0] = romeon;
            foxtra = _closure1_slot8;
            romeon = _closure1_slot0;
            yankee = 7;
            yankee = kiloes[yankee];
            yankee = romeon.bind(oscard)(yankee);
            romeon = yankee.Text;
            yankee = {'variant': 'text-sm/medium', 'color': 'interactive-normal'};
            yankee['children'] = backup;
            yankee = foxtra.bind(oscard)(romeon, yankee);
            offset[1] = yankee;
            golfie['children'] = offset;
            report = verify.bind(oscard)(option, golfie);
 237:
            entity[1] = report;
            michal['children'] = entity;
            entity = undefined;
            entity = tangon.bind(entity)(zuuluu, michal);
            return entity;
        }
    };
    var _closure1_slot15 = entity;
    entity = function(argFoo) { // Original name: ChannelBenefitShowCase
        _fun00005: for(var _fun00006_ip = 0; ; ) switch(_fun00006_ip) {
 0:
            entity = argFoo;
            yankee = entity.channelId;
            var _closure2_slot0 = yankee;
            report = entity.description;
            golfie = _closure1_slot0;
            option = _closure1_slot3;
            zuuluu = 14;
            zuuluu = option[zuuluu];
            tangon = undefined;
            offset = golfie.bind(tangon)(zuuluu);
            verify = offset.useStateFromStores;
            zuuluu = _closure1_slot7;
            oscard = new Array(1);
            oscard[0] = zuuluu;
            zuuluu = new Array(1);
            zuuluu[0] = yankee;
            michal = function() {
                zuuluu = _closure1_slot7;
                michal = zuuluu.getChannel;
                entity = _closure2_slot0;
                entity = michal.bind(zuuluu)(entity);
                return entity;
            };
            romeon = verify.bind(offset)(oscard, michal, zuuluu);
            michal = 15;
            zuuluu = option[michal];
            zuuluu = golfie.bind(tangon)(zuuluu);
            oscard = zuuluu.intl;
            zuuluu = oscard.string;
            michal = option[michal];
            michal = golfie.bind(tangon)(michal);
            michal = michal.t;
            michal = michal.bz1PZW;
            oscard = zuuluu.bind(oscard)(michal);
            michal = null;
            if(!(michal != romeon)) { _fun00006_ip = 358; continue _fun00005 }
 139:
            golfie = _closure1_slot9;
            zuuluu = _closure1_slot6;
            michal = {};
            option = {'flexDirection': 'row', 'alignItems': 'center'};
            michal['style'] = option;
            backup = _closure1_slot8;
            yankee = _closure1_slot1;
            foxtra = _closure1_slot3;
            offset = 16;
            option = foxtra[offset];
            verify = yankee.bind(tangon)(option);
            option = {};
            offset = foxtra[offset];
            offset = yankee.bind(tangon)(offset);
            offset = offset.Sizes;
            offset = offset.REFRESH_SMALL_16;
            option['size'] = offset;
            offset = _closure1_slot0;
            kiloes = 17;
            kiloes = foxtra[kiloes];
            sizing = offset.bind(tangon)(kiloes);
            kiloes = sizing.getChannelIcon;
            kiloes = kiloes.bind(sizing)(romeon);
            option['source'] = kiloes;
            verify = backup.bind(tangon)(verify, option);
            option = new Array(3);
            option[0] = verify;
            backup = _closure1_slot8;
            verify = 13;
            verify = foxtra[verify];
            yankee = yankee.bind(tangon)(verify);
            verify = {};
            kiloes = 4;
            verify['size'] = kiloes;
            verify = backup.bind(tangon)(yankee, verify);
            option[1] = verify;
            yankee = _closure1_slot8;
            verify = 7;
            verify = foxtra[verify];
            verify = offset.bind(tangon)(verify);
            offset = verify.Text;
            verify = {'variant': 'text-md/semibold', 'color': 'text-normal'};
            romeon = romeon.name;
            verify['children'] = romeon;
            verify = yankee.bind(tangon)(offset, verify);
            option[2] = verify;
            michal['children'] = option;
            oscard = golfie.bind(tangon)(zuuluu, michal);
 358:
            zuuluu = _closure1_slot8;
            michal = _closure1_slot15;
            entity = {};
            entity['title'] = oscard;
            entity['description'] = report;
            entity = zuuluu.bind(tangon)(michal, entity);
            return entity;
        }
    };
    var _closure1_slot16 = entity;
    entity = function(argFoo) { // Original name: ShowAllButton
        entity = argFoo;
        report = entity.onPress;
        entity = _closure1_slot11;
        tangon = undefined;
        romeon = entity.bind(tangon)();
        zuuluu = _closure1_slot8;
        michal = _closure1_slot5;
        entity = {};
        entity['onPress'] = report;
        report = romeon.showAllButton;
        entity['style'] = report;
        report = 0.5;
        entity['activeOpacity'] = report;
        golfie = _closure1_slot9;
        oscard = _closure1_slot6;
        report = {};
        yankee = _closure1_slot8;
        output = _closure1_slot0;
        backup = _closure1_slot3;
        option = 7;
        option = backup[option];
        option = output.bind(tangon)(option);
        offset = option.Text;
        option = {'variant': 'text-sm/semibold', 'color': 'interactive-hover'};
        foxtra = {};
        kiloes = -1;
        foxtra['marginTop'] = kiloes;
        option['style'] = foxtra;
        foxtra = 15;
        kiloes = backup[foxtra];
        kiloes = output.bind(tangon)(kiloes);
        sizing = kiloes.intl;
        kiloes = sizing.string;
        foxtra = backup[foxtra];
        foxtra = output.bind(tangon)(foxtra);
        foxtra = foxtra.t;
        foxtra = foxtra.hub6t7;
        foxtra = kiloes.bind(sizing)(foxtra);
        option['children'] = foxtra;
        offset = yankee.bind(tangon)(offset, option);
        option = new Array(3);
        option[0] = offset;
        foxtra = _closure1_slot8;
        yankee = _closure1_slot1;
        offset = 13;
        offset = backup[offset];
        yankee = yankee.bind(tangon)(offset);
        offset = {};
        backup = 3;
        offset['size'] = backup;
        offset = foxtra.bind(tangon)(yankee, offset);
        option[1] = offset;
        yankee = _closure1_slot8;
        offset = _closure1_slot6;
        verify = {};
        romeon = romeon.showAllButtonUnderline;
        verify['style'] = romeon;
        verify = yankee.bind(tangon)(offset, verify);
        option[2] = verify;
        report['children'] = option;
        report = golfie.bind(tangon)(oscard, report);
        entity['children'] = report;
        entity = zuuluu.bind(tangon)(michal, entity);
        return entity;
    };
    var _closure1_slot17 = entity;
    entity = global;
    verify = entity.Object;
    option = verify.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = option.bind(verify)(zuuluu, entity, tangon);
    entity = 0;
    tangon = oscard[entity];
    entity = undefined;
    tangon = yankee.bind(entity)(tangon);
    var _closure1_slot4 = tangon;
    tangon = 1;
    tangon = oscard[tangon];
    tangon = golfie.bind(entity)(tangon);
    tangon = 2;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    golfie = tangon.TouchableOpacity;
    var _closure1_slot5 = golfie;
    tangon = tangon.View;
    var _closure1_slot6 = tangon;
    tangon = 3;
    tangon = oscard[tangon];
    tangon = yankee.bind(entity)(tangon);
    var _closure1_slot7 = tangon;
    tangon = 4;
    golfie = oscard[tangon];
    golfie = report.bind(entity)(golfie);
    golfie = golfie.jsx;
    var _closure1_slot8 = golfie;
    golfie = oscard[tangon];
    golfie = report.bind(entity)(golfie);
    golfie = golfie.jsxs;
    var _closure1_slot9 = golfie;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.Fragment;
    var _closure1_slot10 = tangon;
    tangon = 5;
    tangon = oscard[tangon];
    option = report.bind(entity)(tangon);
    golfie = option.createStyles;
    tangon = {};
    verify = {};
    foxtra = 16;
    verify['padding'] = foxtra;
    offset = 6;
    romeon = oscard[offset];
    romeon = yankee.bind(entity)(romeon);
    romeon = romeon.radii;
    romeon = romeon.md;
    verify['borderRadius'] = romeon;
    romeon = oscard[offset];
    romeon = yankee.bind(entity)(romeon);
    romeon = romeon.colors;
    romeon = romeon.BACKGROUND_SECONDARY_ALT;
    verify['backgroundColor'] = romeon;
    tangon['container'] = verify;
    verify = {};
    romeon = 'row';
    verify['flexDirection'] = romeon;
    tangon['header'] = verify;
    verify = {'width': 48, 'height': 48};
    backup = oscard[offset];
    backup = yankee.bind(entity)(backup);
    backup = backup.radii;
    backup = backup.xl;
    verify['borderRadius'] = backup;
    tangon['image'] = verify;
    verify = {'width': '100%', 'height': 1, 'backgroundColor': null, 'marginVertical': 16};
    backup = oscard[offset];
    backup = yankee.bind(entity)(backup);
    backup = backup.colors;
    backup = backup.BACKGROUND_MODIFIER_HOVER;
    verify['backgroundColor'] = backup;
    tangon['separator'] = verify;
    verify = {};
    backup = oscard[offset];
    backup = yankee.bind(entity)(backup);
    backup = backup.colors;
    backup = backup.BACKGROUND_SECONDARY;
    verify['backgroundColor'] = backup;
    backup = oscard[offset];
    backup = yankee.bind(entity)(backup);
    backup = backup.radii;
    backup = backup.sm;
    verify['borderTopRightRadius'] = backup;
    backup = oscard[offset];
    backup = yankee.bind(entity)(backup);
    backup = backup.radii;
    backup = backup.sm;
    verify['borderTopLeftRadius'] = backup;
    verify['padding'] = foxtra;
    tangon['contentContainer'] = verify;
    verify = {};
    foxtra = 'uppercase';
    verify['textTransform'] = foxtra;
    tangon['contentHeader'] = verify;
    verify = {};
    verify['flexDirection'] = romeon;
    tangon['emojiGallery'] = verify;
    verify = {'width': 32, 'height': 32, 'display': 'flex', 'alignItems': 'center', 'justifyContent': 'center', 'borderRadius': null, 'backgroundColor': null, 'paddingTop': 1};
    romeon = oscard[offset];
    romeon = yankee.bind(entity)(romeon);
    romeon = romeon.radii;
    romeon = romeon.xs;
    verify['borderRadius'] = romeon;
    romeon = oscard[offset];
    romeon = yankee.bind(entity)(romeon);
    romeon = romeon.colors;
    romeon = romeon.BACKGROUND_PRIMARY;
    verify['backgroundColor'] = romeon;
    tangon['emojiTruncatedContainer'] = verify;
    verify = {'paddingVertical': 16, 'paddingHorizontal': 20, 'justifyContent': 'center', 'alignItems': 'center'};
    romeon = oscard[offset];
    romeon = yankee.bind(entity)(romeon);
    romeon = romeon.colors;
    romeon = romeon.BACKGROUND_PRIMARY;
    verify['backgroundColor'] = romeon;
    romeon = oscard[offset];
    romeon = yankee.bind(entity)(romeon);
    romeon = romeon.radii;
    romeon = romeon.sm;
    verify['borderBottomLeftRadius'] = romeon;
    romeon = oscard[offset];
    romeon = yankee.bind(entity)(romeon);
    romeon = romeon.radii;
    romeon = romeon.sm;
    verify['borderBottomRightRadius'] = romeon;
    tangon['showAllButton'] = verify;
    verify = {'position': 'absolute', 'left': 0, 'right': 0, 'height': 1, 'bottom': 0};
    offset = oscard[offset];
    offset = yankee.bind(entity)(offset);
    offset = offset.colors;
    offset = offset.INTERACTIVE_MUTED;
    verify['backgroundColor'] = offset;
    tangon['showAllButtonUnderline'] = verify;
    tangon = golfie.bind(option)(tangon);
    var _closure1_slot11 = tangon;
    tangon = 22;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/guild_role_subscriptions/native/purchase_page/GuildRoleSubscriptionPurchasePreviewCard.tsx';
    tangon = report.bind(oscard)(tangon);
    michal = function(argFoo) { // Original name: GuildRoleSubscriptionPurchasePreviewCard
        _fun00007: for(var _fun00008_ip = 0; ; ) switch(_fun00008_ip) {
 0:
            entity = argFoo;
            verify = entity.listingId;
            var _closure2_slot0 = verify;
            variable36 = entity.guildId;
            var _closure2_slot1 = variable36;
            entity = _closure1_slot11;
            tangon = undefined;
            sizing = entity.bind(tangon)();
            oscard = _closure1_slot2;
            foxtra = _closure1_slot3;
            entity = 18;
            michal = foxtra[entity];
            zuuluu = oscard.bind(tangon)(michal);
            michal = zuuluu.useImage;
            michal = michal.bind(zuuluu)(verify);
            report = _closure1_slot4;
            zuuluu = 1;
            michal = report.bind(tangon)(michal, zuuluu);
            variable39 = 0;
            output = michal[variable39];
            michal = foxtra[entity];
            golfie = oscard.bind(tangon)(michal);
            michal = golfie.useName;
            michal = michal.bind(golfie)(verify);
            michal = report.bind(tangon)(michal, zuuluu);
            record = michal[variable39];
            michal = foxtra[entity];
            golfie = oscard.bind(tangon)(michal);
            michal = golfie.useTierEmojiIds;
            michal = michal.bind(golfie)(verify, variable36);
            michal = report.bind(tangon)(michal, zuuluu);
            variable38 = michal[variable39];
            michal = foxtra[entity];
            golfie = oscard.bind(tangon)(michal);
            michal = golfie.useChannelBenefits;
            michal = michal.bind(golfie)(verify);
            michal = report.bind(tangon)(michal, zuuluu);
            michal = michal[variable39];
            entity = foxtra[entity];
            oscard = oscard.bind(tangon)(entity);
            entity = oscard.useIntangibleBenefits;
            entity = entity.bind(oscard)(verify);
            entity = report.bind(tangon)(entity, zuuluu);
            entity = entity[variable39];
            report = _closure1_slot0;
            zuuluu = 19;
            zuuluu = foxtra[zuuluu];
            report = report.bind(tangon)(zuuluu);
            zuuluu = report.useFormattedSubscriptionPlan;
            sequen = zuuluu.bind(report)(verify);
            limora = michal.length;
            equals = michal[variable39];
            sierra = entity[variable39];
            whisks = variable38.size;
            target = entity.length;
            zuuluu = _closure1_slot9;
            michal = _closure1_slot6;
            entity = {};
            report = sizing.container;
            entity['style'] = report;
            option = _closure1_slot9;
            oscard = _closure1_slot6;
            report = {};
            golfie = sizing.header;
            report['style'] = golfie;
            romeon = _closure1_slot8;
            offset = _closure1_slot1;
            golfie = 20;
            golfie = foxtra[golfie];
            offset = offset.bind(tangon)(golfie);
            golfie = {};
            foxtra = {};
            update = null;
            result = update != output;
            kiloes = '';
            if(!result) { _fun00008_ip = 336; continue _fun00007 }
 333:
            kiloes = output;
 336:
            foxtra['uri'] = kiloes;
            golfie['source'] = foxtra;
            foxtra = sizing.image;
            golfie['style'] = foxtra;
            golfie = romeon.bind(tangon)(offset, golfie);
            romeon = new Array(3);
            romeon[0] = golfie;
            result = _closure1_slot8;
            golfie = _closure1_slot1;
            offset = _closure1_slot3;
            papara = 13;
            foxtra = offset[papara];
            output = golfie.bind(tangon)(foxtra);
            kiloes = {};
            foxtra = 16;
            kiloes['size'] = foxtra;
            kiloes = result.bind(tangon)(output, kiloes);
            romeon[1] = kiloes;
            result = _closure1_slot9;
            output = _closure1_slot6;
            kiloes = {};
            config = _closure1_slot8;
            ctrled = _closure1_slot0;
            source = 7;
            echoed = offset[source];
            echoed = ctrled.bind(tangon)(echoed);
            vacuum = echoed.Text;
            echoed = {'variant': 'heading-md/semibold', 'color': 'header-primary'};
            echoed['children'] = record;
            vacuum = config.bind(tangon)(vacuum, echoed);
            echoed = new Array(3);
            echoed[0] = vacuum;
            record = _closure1_slot8;
            vacuum = offset[papara];
            config = golfie.bind(tangon)(vacuum);
            vacuum = {};
            status = 4;
            vacuum['size'] = status;
            vacuum = record.bind(tangon)(config, vacuum);
            echoed[1] = vacuum;
            vacuum = _closure1_slot8;
            source = offset[source];
            source = ctrled.bind(tangon)(source);
            ctrled = source.Text;
            source = {'variant': 'heading-md/medium', 'color': 'header-secondary'};
            source['children'] = sequen;
            source = vacuum.bind(tangon)(ctrled, source);
            echoed[2] = source;
            kiloes['children'] = echoed;
            kiloes = result.bind(tangon)(output, kiloes);
            romeon[2] = kiloes;
            report['children'] = romeon;
            oscard = option.bind(tangon)(oscard, report);
            report = new Array(4);
            report[0] = oscard;
            romeon = _closure1_slot8;
            oscard = offset[papara];
            option = golfie.bind(tangon)(oscard);
            oscard = {};
            oscard['size'] = foxtra;
            oscard = romeon.bind(tangon)(option, oscard);
            report[1] = oscard;
            option = _closure1_slot8;
            oscard = 21;
            oscard = offset[oscard];
            golfie = golfie.bind(tangon)(oscard);
            oscard = {};
            oscard['listingId'] = verify;
            oscard = option.bind(tangon)(golfie, oscard);
            report[2] = oscard;
            oscard = limora > variable39;
            if(oscard) { _fun00008_ip = 661; continue _fun00007 }
 657:
            oscard = whisks > variable39;
 661:
            if(oscard) { _fun00008_ip = 668; continue _fun00007 }
 664:
            oscard = target > variable39;
 668:
            if(!oscard) { _fun00008_ip = 1575; continue _fun00007 }
 674:
            verify = _closure1_slot9;
            option = _closure1_slot10;
            golfie = {};
            foxtra = _closure1_slot8;
            romeon = _closure1_slot1;
            echoed = _closure1_slot3;
            offset = echoed[papara];
            romeon = romeon.bind(tangon)(offset);
            offset = {};
            kiloes = 24;
            offset['size'] = kiloes;
            romeon = foxtra.bind(tangon)(romeon, offset);
            offset = new Array(3);
            offset[0] = romeon;
            kiloes = _closure1_slot8;
            foxtra = _closure1_slot6;
            romeon = {};
            sizing = sizing.contentContainer;
            romeon['style'] = sizing;
            result = _closure1_slot9;
            output = _closure1_slot0;
            sizing = 11;
            sizing = echoed[sizing];
            sizing = output.bind(tangon)(sizing);
            output = sizing.GappedList;
            sizing = {};
            echoed = function() { // Original name: renderGap
                tangon = _closure1_slot8;
                zuuluu = _closure1_slot13;
                michal = undefined;
                entity = {};
                entity = tangon.bind(michal)(zuuluu, entity);
                return entity;
            };
            sizing['renderGap'] = echoed;
            echoed = whisks > variable39;
            source = null;
            if(!echoed) { _fun00008_ip = 1027; continue _fun00007 }
 800:
            vacuum = _closure1_slot9;
            ctrled = _closure1_slot6;
            echoed = {};
            cntext = _closure1_slot8;
            record = _closure1_slot12;
            sequen = {};
            variable41 = _closure1_slot0;
            config = _closure1_slot3;
            quebec = 15;
            variable37 = config[quebec];
            variable37 = variable41.bind(tangon)(variable37);
            variable40 = variable37.intl;
            variable37 = variable40.string;
            quebec = config[quebec];
            quebec = variable41.bind(tangon)(quebec);
            quebec = quebec.t;
            quebec = quebec.ebOU2d;
            quebec = variable37.bind(variable40)(quebec);
            sequen['title'] = quebec;
            sequen['count'] = whisks;
            record = cntext.bind(tangon)(record, sequen);
            sequen = new Array(4);
            sequen[0] = record;
            quebec = _closure1_slot8;
            record = _closure1_slot1;
            cntext = config[papara];
            whisks = record.bind(tangon)(cntext);
            cntext = {};
            variable37 = 8;
            cntext['size'] = variable37;
            cntext = quebec.bind(tangon)(whisks, cntext);
            sequen[1] = cntext;
            quebec = _closure1_slot8;
            whisks = _closure1_slot14;
            cntext = {};
            variable37 = new Array(0);
            variable44 = variable37;
            variable43 = variable38;
            variable42 = 0;
            variable38 = arraySpread(variable44, variable43, variable42);
            cntext['emojiIds'] = variable37;
            cntext['guildId'] = variable36;
            variable36 = 5;
            cntext['maxEmojis'] = variable36;
            cntext = quebec.bind(tangon)(whisks, cntext);
            sequen[2] = cntext;
            cntext = _closure1_slot8;
            config = config[papara];
            record = record.bind(tangon)(config);
            config = {};
            config['size'] = status;
            config = cntext.bind(tangon)(record, config);
            sequen[3] = config;
            echoed['children'] = sequen;
            source = vacuum.bind(tangon)(ctrled, echoed);
 1027:
            echoed = new Array(3);
            echoed[0] = source;
            ctrled = update != equals;
            source = null;
            if(!ctrled) { _fun00008_ip = 1269; continue _fun00007 }
 1047:
            sequen = _closure1_slot9;
            vacuum = _closure1_slot6;
            ctrled = {};
            status = _closure1_slot8;
            cntext = _closure1_slot12;
            config = {};
            quebec = _closure1_slot0;
            record = _closure1_slot3;
            whisks = 15;
            variable36 = record[whisks];
            variable36 = quebec.bind(tangon)(variable36);
            variable37 = variable36.intl;
            variable36 = variable37.formatToPlainString;
            whisks = record[whisks];
            whisks = quebec.bind(tangon)(whisks);
            whisks = whisks.t;
            quebec = whisks.y7dUrq;
            whisks = {};
            whisks['numChannels'] = limora;
            whisks = variable36.bind(variable37)(quebec, whisks);
            config['title'] = whisks;
            config['count'] = limora;
            cntext = status.bind(tangon)(cntext, config);
            config = new Array(4);
            config[0] = cntext;
            whisks = _closure1_slot8;
            cntext = _closure1_slot1;
            status = record[papara];
            limora = cntext.bind(tangon)(status);
            status = {};
            quebec = 12;
            status['size'] = quebec;
            status = whisks.bind(tangon)(limora, status);
            config[1] = status;
            whisks = _closure1_slot8;
            limora = _closure1_slot16;
            status = {};
            quebec = equals.ref_id;
            status['channelId'] = quebec;
            equals = equals.description;
            status['description'] = equals;
            status = whisks.bind(tangon)(limora, status);
            config[2] = status;
            status = _closure1_slot8;
            record = record[papara];
            cntext = cntext.bind(tangon)(record);
            record = {};
            limora = 6;
            record['size'] = limora;
            record = status.bind(tangon)(cntext, record);
            config[3] = record;
            ctrled['children'] = config;
            source = sequen.bind(tangon)(vacuum, ctrled);
 1269:
            echoed[1] = source;
            source = update != sierra;
            update = null;
            if(!source) { _fun00008_ip = 1506; continue _fun00007 }
 1285:
            vacuum = _closure1_slot9;
            ctrled = _closure1_slot6;
            source = {};
            cntext = _closure1_slot8;
            record = _closure1_slot12;
            sequen = {};
            limora = _closure1_slot0;
            config = _closure1_slot3;
            status = 15;
            whisks = config[status];
            whisks = limora.bind(tangon)(whisks);
            equals = whisks.intl;
            whisks = equals.formatToPlainString;
            status = config[status];
            status = limora.bind(tangon)(status);
            status = status.t;
            limora = status.MR7oOD;
            status = {};
            status['numBenefits'] = target;
            status = whisks.bind(equals)(limora, status);
            sequen['title'] = status;
            sequen['count'] = target;
            record = cntext.bind(tangon)(record, sequen);
            sequen = new Array(4);
            sequen[0] = record;
            status = _closure1_slot8;
            record = _closure1_slot1;
            cntext = config[papara];
            target = record.bind(tangon)(cntext);
            cntext = {};
            limora = 12;
            cntext['size'] = limora;
            cntext = status.bind(tangon)(target, cntext);
            sequen[1] = cntext;
            status = _closure1_slot8;
            target = _closure1_slot15;
            cntext = {};
            limora = sierra.name;
            cntext['title'] = limora;
            sierra = sierra.description;
            cntext['description'] = sierra;
            cntext = status.bind(tangon)(target, cntext);
            sequen[2] = cntext;
            cntext = _closure1_slot8;
            config = config[papara];
            record = record.bind(tangon)(config);
            config = {};
            papara = 6;
            config['size'] = papara;
            config = cntext.bind(tangon)(record, config);
            sequen[3] = config;
            source['children'] = sequen;
            update = vacuum.bind(tangon)(ctrled, source);
 1506:
            echoed[2] = update;
            sizing['children'] = echoed;
            sizing = result.bind(tangon)(output, sizing);
            romeon['children'] = sizing;
            romeon = kiloes.bind(tangon)(foxtra, romeon);
            offset[1] = romeon;
            foxtra = _closure1_slot8;
            romeon = _closure1_slot17;
            yankee = {};
            backup = function() { // Original name: onPress
                option = _closure2_slot0;
                golfie = _closure2_slot1;
                report = _closure1_slot1;
                michal = _closure1_slot3;
                entity = 8;
                tangon = michal[entity];
                entity = undefined;
                oscard = report.bind(entity)(tangon);
                report = oscard.openLazy;
                tangon = _closure1_slot0;
                zuuluu = 10;
                zuuluu = michal[zuuluu];
                tangon = tangon.bind(entity)(zuuluu);
                zuuluu = 9;
                zuuluu = michal[zuuluu];
                michal = michal.paths;
                tangon = tangon.bind(entity)(zuuluu, michal);
                michal = global;
                michal = michal.HermesInternal;
                zuuluu = michal.concat;
                michal = 'PurchaseCard:';
                zuuluu = zuuluu.bind(michal)(option);
                michal = {};
                michal['listingId'] = option;
                michal['guildId'] = golfie;
                michal = report.bind(oscard)(tangon, zuuluu, michal);
                return entity;
            };
            yankee['onPress'] = backup;
            yankee = foxtra.bind(tangon)(romeon, yankee);
            offset[2] = yankee;
            golfie['children'] = offset;
            oscard = verify.bind(tangon)(option, golfie);
 1575:
            report[3] = oscard;
            entity['children'] = report;
            entity = zuuluu.bind(tangon)(michal, entity);
            return entity;
        }
    };
    zuuluu['default'] = michal;
    return entity;
})();