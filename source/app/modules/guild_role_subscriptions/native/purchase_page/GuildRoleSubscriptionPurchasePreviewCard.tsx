// app/modules/guild_role_subscriptions/native/purchase_page/GuildRoleSubscriptionPurchasePreviewCard.tsx
export default (function(argFoo, argBar, argBaz, argCorge, _, argFred, argPlugh) {
    report = argBar;
    yankee = argBaz;
    golf = argCorge;
    zulu = argFred;
    oscar = argPlugh;
    var _closure1_slot0 = report;
    var _closure1_slot1 = yankee;
    var _closure1_slot2 = golf;
    var _closure1_slot3 = oscar;
    entity = function(argFoo) { // Original name: ContentHeader
        entity = argFoo;
        verify = entity.count;
        oscar = entity.title;
        entity = _closure1_slot11;
        tango = undefined;
        offset = entity.bind(tango)();
        zulu = _closure1_slot9;
        golf = _closure1_slot0;
        yankee = _closure1_slot3;
        report = 7;
        entity = yankee[report];
        entity = golf.bind(tango)(entity);
        mike = entity.Text;
        entity = {'variant': 'text-xs/bold', 'color': 'text-muted'};
        romeo = offset.contentHeader;
        entity['style'] = romeo;
        options = _closure1_slot8;
        report = yankee[report];
        report = golf.bind(tango)(report);
        golf = report.Text;
        report = {'variant': 'text-xs/bold', 'color': 'text-normal'};
        offset = offset.contentHeader;
        report['style'] = offset;
        report['children'] = verify;
        golf = options.bind(tango)(golf, report);
        report = new Array(3);
        report[0] = golf;
        golf = ' ';
        report[1] = golf;
        report[2] = oscar;
        entity['children'] = report;
        entity = zulu.bind(tango)(mike, entity);
        return entity;
    };
    var _closure1_slot12 = entity;
    entity = function() { // Original name: Separator
        mike = _closure1_slot11;
        tango = undefined;
        report = mike.bind(tango)();
        zulu = _closure1_slot8;
        mike = _closure1_slot6;
        entity = {};
        report = report.separator;
        entity['style'] = report;
        entity = zulu.bind(tango)(mike, entity);
        return entity;
    };
    var _closure1_slot13 = entity;
    entity = function(argFoo) { // Original name: EmojiGallery
        _fun112098: for(var _fun112098_ip = 0; ; ) switch(_fun112098_ip) {
 0:
            zulu = argFoo;
            entity = zulu.emojiIds;
            mike = zulu.maxEmojis;
            zulu = zulu.guildId;
            var _closure2_slot0 = zulu;
            zulu = _closure1_slot11;
            tango = undefined;
            kilo = zulu.bind(tango)();
            zulu = entity.slice;
            verify = 0;
            romeo = zulu.bind(entity)(verify, mike);
            entity = entity.length;
            result = entity - mike;
            zulu = _closure1_slot8;
            mike = _closure1_slot6;
            entity = {};
            report = kilo.emojiGallery;
            entity['style'] = report;
            golf = _closure1_slot8;
            oscar = _closure1_slot0;
            offset = _closure1_slot3;
            report = 11;
            report = offset[report];
            report = oscar.bind(tango)(report);
            oscar = report.GappedList;
            report = {};
            offset = 18;
            report['gap'] = offset;
            offset = romeo.map;
            options = function(argFoo) {
                report = argFoo;
                tango = _closure1_slot8;
                mike = _closure1_slot1;
                zulu = _closure1_slot3;
                entity = 12;
                entity = zulu[entity];
                zulu = undefined;
                mike = mike.bind(zulu)(entity);
                entity = {'size': 30, 'fontSize': 20};
                oscar = _closure2_slot0;
                entity['guildId'] = oscar;
                entity['id'] = report;
                entity = tango.bind(zulu)(mike, entity, report);
                return entity;
            };
            update = offset.bind(romeo)(options);
            options = new Array(1);
            source = options;
            echo = 0;
            offset = arraySpread(source, update, echo);
            verify = result > verify;
            if(!verify) { _fun112098_ip = 262; continue _fun112098 }
 158:
            backup = _closure1_slot8;
            foxtrot = _closure1_slot6;
            romeo = {};
            kilo = kilo.emojiTruncatedContainer;
            romeo['style'] = kilo;
            sizing = _closure1_slot9;
            kilo = _closure1_slot0;
            output = _closure1_slot3;
            yankee = 7;
            yankee = output[yankee];
            yankee = kilo.bind(tango)(yankee);
            kilo = yankee.Text;
            yankee = {'variant': 'text-sm/bold', 'color': 'text-normal'};
            output = ['+'];
            output[1] = result;
            yankee['children'] = output;
            yankee = sizing.bind(tango)(kilo, yankee);
            romeo['children'] = yankee;
            yankee = 'andMore';
            verify = backup.bind(tango)(foxtrot, romeo, yankee);
 262:
            options[offset] = verify;
            verify = 1;
            verify = offset + verify;
            report['children'] = options;
            report = golf.bind(tango)(oscar, report);
            entity['children'] = report;
            entity = zulu.bind(tango)(mike, entity);
            return entity;
        }
    };
    var _closure1_slot14 = entity;
    entity = function(argFoo) { // Original name: BenefitShowCase
        _fun112100: for(var _fun112100_ip = 0; ; ) switch(_fun112100_ip) {
 0:
            entity = argFoo;
            verify = entity.title;
            backup = entity.description;
            tango = _closure1_slot9;
            zulu = _closure1_slot6;
            mike = {};
            oscar = 'string';
            entity = typeof verify;
            report = verify;
            if(!(oscar === entity)) { _fun112100_ip = 95; continue _fun112100 }
 40:
            options = _closure1_slot8;
            oscar = _closure1_slot0;
            golf = _closure1_slot3;
            entity = 7;
            entity = golf[entity];
            golf = undefined;
            entity = oscar.bind(golf)(entity);
            oscar = entity.Text;
            entity = {'variant': 'text-md/semibold', 'color': 'text-normal'};
            entity['children'] = verify;
            report = options.bind(golf)(oscar, entity);
 95:
            entity = new Array(2);
            entity[0] = report;
            report = null;
            report = report != backup;
            if(!report) { _fun112100_ip = 237; continue _fun112100 }
 115:
            verify = _closure1_slot9;
            options = _closure1_slot10;
            golf = {};
            foxtrot = _closure1_slot8;
            romeo = _closure1_slot1;
            kilo = _closure1_slot3;
            oscar = 13;
            offset = kilo[oscar];
            oscar = undefined;
            romeo = romeo.bind(oscar)(offset);
            offset = {};
            sizing = 2;
            offset['size'] = sizing;
            romeo = foxtrot.bind(oscar)(romeo, offset);
            offset = new Array(2);
            offset[0] = romeo;
            foxtrot = _closure1_slot8;
            romeo = _closure1_slot0;
            yankee = 7;
            yankee = kilo[yankee];
            yankee = romeo.bind(oscar)(yankee);
            romeo = yankee.Text;
            yankee = {'variant': 'text-sm/medium', 'color': 'interactive-normal'};
            yankee['children'] = backup;
            yankee = foxtrot.bind(oscar)(romeo, yankee);
            offset[1] = yankee;
            golf['children'] = offset;
            report = verify.bind(oscar)(options, golf);
 237:
            entity[1] = report;
            mike['children'] = entity;
            entity = undefined;
            entity = tango.bind(entity)(zulu, mike);
            return entity;
        }
    };
    var _closure1_slot15 = entity;
    entity = function(argFoo) { // Original name: ChannelBenefitShowCase
        _fun112101: for(var _fun112101_ip = 0; ; ) switch(_fun112101_ip) {
 0:
            entity = argFoo;
            yankee = entity.channelId;
            var _closure2_slot0 = yankee;
            report = entity.description;
            golf = _closure1_slot0;
            options = _closure1_slot3;
            zulu = 14;
            zulu = options[zulu];
            tango = undefined;
            offset = golf.bind(tango)(zulu);
            verify = offset.useStateFromStores;
            zulu = _closure1_slot7;
            oscar = new Array(1);
            oscar[0] = zulu;
            zulu = new Array(1);
            zulu[0] = yankee;
            mike = function() {
                zulu = _closure1_slot7;
                mike = zulu.getChannel;
                entity = _closure2_slot0;
                entity = mike.bind(zulu)(entity);
                return entity;
            };
            romeo = verify.bind(offset)(oscar, mike, zulu);
            mike = 15;
            zulu = options[mike];
            zulu = golf.bind(tango)(zulu);
            oscar = zulu.intl;
            zulu = oscar.string;
            mike = options[mike];
            mike = golf.bind(tango)(mike);
            mike = mike.t;
            mike = mike.bz1PZW;
            oscar = zulu.bind(oscar)(mike);
            mike = null;
            if(!(mike != romeo)) { _fun112101_ip = 358; continue _fun112101 }
 139:
            golf = _closure1_slot9;
            zulu = _closure1_slot6;
            mike = {};
            options = {'flexDirection': 'row', 'alignItems': 'center'};
            mike['style'] = options;
            backup = _closure1_slot8;
            yankee = _closure1_slot1;
            foxtrot = _closure1_slot3;
            offset = 16;
            options = foxtrot[offset];
            verify = yankee.bind(tango)(options);
            options = {};
            offset = foxtrot[offset];
            offset = yankee.bind(tango)(offset);
            offset = offset.Sizes;
            offset = offset.REFRESH_SMALL_16;
            options['size'] = offset;
            offset = _closure1_slot0;
            kilo = 17;
            kilo = foxtrot[kilo];
            sizing = offset.bind(tango)(kilo);
            kilo = sizing.getChannelIcon;
            kilo = kilo.bind(sizing)(romeo);
            options['source'] = kilo;
            verify = backup.bind(tango)(verify, options);
            options = new Array(3);
            options[0] = verify;
            backup = _closure1_slot8;
            verify = 13;
            verify = foxtrot[verify];
            yankee = yankee.bind(tango)(verify);
            verify = {};
            kilo = 4;
            verify['size'] = kilo;
            verify = backup.bind(tango)(yankee, verify);
            options[1] = verify;
            yankee = _closure1_slot8;
            verify = 7;
            verify = foxtrot[verify];
            verify = offset.bind(tango)(verify);
            offset = verify.Text;
            verify = {'variant': 'text-md/semibold', 'color': 'text-normal'};
            romeo = romeo.name;
            verify['children'] = romeo;
            verify = yankee.bind(tango)(offset, verify);
            options[2] = verify;
            mike['children'] = options;
            oscar = golf.bind(tango)(zulu, mike);
 358:
            zulu = _closure1_slot8;
            mike = _closure1_slot15;
            entity = {};
            entity['title'] = oscar;
            entity['description'] = report;
            entity = zulu.bind(tango)(mike, entity);
            return entity;
        }
    };
    var _closure1_slot16 = entity;
    entity = function(argFoo) { // Original name: ShowAllButton
        entity = argFoo;
        report = entity.onPress;
        entity = _closure1_slot11;
        tango = undefined;
        romeo = entity.bind(tango)();
        zulu = _closure1_slot8;
        mike = _closure1_slot5;
        entity = {};
        entity['onPress'] = report;
        report = romeo.showAllButton;
        entity['style'] = report;
        report = 0.5;
        entity['activeOpacity'] = report;
        golf = _closure1_slot9;
        oscar = _closure1_slot6;
        report = {};
        yankee = _closure1_slot8;
        output = _closure1_slot0;
        backup = _closure1_slot3;
        options = 7;
        options = backup[options];
        options = output.bind(tango)(options);
        offset = options.Text;
        options = {'variant': 'text-sm/semibold', 'color': 'interactive-hover'};
        foxtrot = {};
        kilo = -1;
        foxtrot['marginTop'] = kilo;
        options['style'] = foxtrot;
        foxtrot = 15;
        kilo = backup[foxtrot];
        kilo = output.bind(tango)(kilo);
        sizing = kilo.intl;
        kilo = sizing.string;
        foxtrot = backup[foxtrot];
        foxtrot = output.bind(tango)(foxtrot);
        foxtrot = foxtrot.t;
        foxtrot = foxtrot.hub6t7;
        foxtrot = kilo.bind(sizing)(foxtrot);
        options['children'] = foxtrot;
        offset = yankee.bind(tango)(offset, options);
        options = new Array(3);
        options[0] = offset;
        foxtrot = _closure1_slot8;
        yankee = _closure1_slot1;
        offset = 13;
        offset = backup[offset];
        yankee = yankee.bind(tango)(offset);
        offset = {};
        backup = 3;
        offset['size'] = backup;
        offset = foxtrot.bind(tango)(yankee, offset);
        options[1] = offset;
        yankee = _closure1_slot8;
        offset = _closure1_slot6;
        verify = {};
        romeo = romeo.showAllButtonUnderline;
        verify['style'] = romeo;
        verify = yankee.bind(tango)(offset, verify);
        options[2] = verify;
        report['children'] = options;
        report = golf.bind(tango)(oscar, report);
        entity['children'] = report;
        entity = zulu.bind(tango)(mike, entity);
        return entity;
    };
    var _closure1_slot17 = entity;
    entity = global;
    verify = entity.Object;
    options = verify.defineProperty;
    tango = {};
    entity = true;
    tango['value'] = entity;
    entity = '__esModule';
    entity = options.bind(verify)(zulu, entity, tango);
    entity = 0;
    tango = oscar[entity];
    entity = undefined;
    tango = yankee.bind(entity)(tango);
    var _closure1_slot4 = tango;
    tango = 1;
    tango = oscar[tango];
    tango = golf.bind(entity)(tango);
    tango = 2;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    golf = tango.TouchableOpacity;
    var _closure1_slot5 = golf;
    tango = tango.View;
    var _closure1_slot6 = tango;
    tango = 3;
    tango = oscar[tango];
    tango = yankee.bind(entity)(tango);
    var _closure1_slot7 = tango;
    tango = 4;
    golf = oscar[tango];
    golf = report.bind(entity)(golf);
    golf = golf.jsx;
    var _closure1_slot8 = golf;
    golf = oscar[tango];
    golf = report.bind(entity)(golf);
    golf = golf.jsxs;
    var _closure1_slot9 = golf;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.Fragment;
    var _closure1_slot10 = tango;
    tango = 5;
    tango = oscar[tango];
    options = report.bind(entity)(tango);
    golf = options.createStyles;
    tango = {};
    verify = {};
    foxtrot = 16;
    verify['padding'] = foxtrot;
    offset = 6;
    romeo = oscar[offset];
    romeo = yankee.bind(entity)(romeo);
    romeo = romeo.radii;
    romeo = romeo.md;
    verify['borderRadius'] = romeo;
    romeo = oscar[offset];
    romeo = yankee.bind(entity)(romeo);
    romeo = romeo.colors;
    romeo = romeo.BACKGROUND_SECONDARY_ALT;
    verify['backgroundColor'] = romeo;
    tango['container'] = verify;
    verify = {};
    romeo = 'row';
    verify['flexDirection'] = romeo;
    tango['header'] = verify;
    verify = {'width': 48, 'height': 48};
    backup = oscar[offset];
    backup = yankee.bind(entity)(backup);
    backup = backup.radii;
    backup = backup.xl;
    verify['borderRadius'] = backup;
    tango['image'] = verify;
    verify = {'width': '100%', 'height': 1, 'backgroundColor': null, 'marginVertical': 16};
    backup = oscar[offset];
    backup = yankee.bind(entity)(backup);
    backup = backup.colors;
    backup = backup.BACKGROUND_MODIFIER_HOVER;
    verify['backgroundColor'] = backup;
    tango['separator'] = verify;
    verify = {};
    backup = oscar[offset];
    backup = yankee.bind(entity)(backup);
    backup = backup.colors;
    backup = backup.BACKGROUND_SECONDARY;
    verify['backgroundColor'] = backup;
    backup = oscar[offset];
    backup = yankee.bind(entity)(backup);
    backup = backup.radii;
    backup = backup.sm;
    verify['borderTopRightRadius'] = backup;
    backup = oscar[offset];
    backup = yankee.bind(entity)(backup);
    backup = backup.radii;
    backup = backup.sm;
    verify['borderTopLeftRadius'] = backup;
    verify['padding'] = foxtrot;
    tango['contentContainer'] = verify;
    verify = {};
    foxtrot = 'uppercase';
    verify['textTransform'] = foxtrot;
    tango['contentHeader'] = verify;
    verify = {};
    verify['flexDirection'] = romeo;
    tango['emojiGallery'] = verify;
    verify = {'width': 32, 'height': 32, 'display': 'flex', 'alignItems': 'center', 'justifyContent': 'center', 'borderRadius': null, 'backgroundColor': null, 'paddingTop': 1};
    romeo = oscar[offset];
    romeo = yankee.bind(entity)(romeo);
    romeo = romeo.radii;
    romeo = romeo.xs;
    verify['borderRadius'] = romeo;
    romeo = oscar[offset];
    romeo = yankee.bind(entity)(romeo);
    romeo = romeo.colors;
    romeo = romeo.BACKGROUND_PRIMARY;
    verify['backgroundColor'] = romeo;
    tango['emojiTruncatedContainer'] = verify;
    verify = {'paddingVertical': 16, 'paddingHorizontal': 20, 'justifyContent': 'center', 'alignItems': 'center'};
    romeo = oscar[offset];
    romeo = yankee.bind(entity)(romeo);
    romeo = romeo.colors;
    romeo = romeo.BACKGROUND_PRIMARY;
    verify['backgroundColor'] = romeo;
    romeo = oscar[offset];
    romeo = yankee.bind(entity)(romeo);
    romeo = romeo.radii;
    romeo = romeo.sm;
    verify['borderBottomLeftRadius'] = romeo;
    romeo = oscar[offset];
    romeo = yankee.bind(entity)(romeo);
    romeo = romeo.radii;
    romeo = romeo.sm;
    verify['borderBottomRightRadius'] = romeo;
    tango['showAllButton'] = verify;
    verify = {'position': 'absolute', 'left': 0, 'right': 0, 'height': 1, 'bottom': 0};
    offset = oscar[offset];
    offset = yankee.bind(entity)(offset);
    offset = offset.colors;
    offset = offset.INTERACTIVE_MUTED;
    verify['backgroundColor'] = offset;
    tango['showAllButtonUnderline'] = verify;
    tango = golf.bind(options)(tango);
    var _closure1_slot11 = tango;
    tango = 22;
    tango = oscar[tango];
    oscar = report.bind(entity)(tango);
    report = oscar.fileFinishedImporting;
    tango = 'modules/guild_role_subscriptions/native/purchase_page/GuildRoleSubscriptionPurchasePreviewCard.tsx';
    tango = report.bind(oscar)(tango);
    mike = function(argFoo) { // Original name: GuildRoleSubscriptionPurchasePreviewCard
        _fun112104: for(var _fun112104_ip = 0; ; ) switch(_fun112104_ip) {
 0:
            entity = argFoo;
            verify = entity.listingId;
            var _closure2_slot0 = verify;
            variable36 = entity.guildId;
            var _closure2_slot1 = variable36;
            entity = _closure1_slot11;
            tango = undefined;
            sizing = entity.bind(tango)();
            oscar = _closure1_slot2;
            foxtrot = _closure1_slot3;
            entity = 18;
            mike = foxtrot[entity];
            zulu = oscar.bind(tango)(mike);
            mike = zulu.useImage;
            mike = mike.bind(zulu)(verify);
            report = _closure1_slot4;
            zulu = 1;
            mike = report.bind(tango)(mike, zulu);
            variable39 = 0;
            output = mike[variable39];
            mike = foxtrot[entity];
            golf = oscar.bind(tango)(mike);
            mike = golf.useName;
            mike = mike.bind(golf)(verify);
            mike = report.bind(tango)(mike, zulu);
            record = mike[variable39];
            mike = foxtrot[entity];
            golf = oscar.bind(tango)(mike);
            mike = golf.useTierEmojiIds;
            mike = mike.bind(golf)(verify, variable36);
            mike = report.bind(tango)(mike, zulu);
            variable38 = mike[variable39];
            mike = foxtrot[entity];
            golf = oscar.bind(tango)(mike);
            mike = golf.useChannelBenefits;
            mike = mike.bind(golf)(verify);
            mike = report.bind(tango)(mike, zulu);
            mike = mike[variable39];
            entity = foxtrot[entity];
            oscar = oscar.bind(tango)(entity);
            entity = oscar.useIntangibleBenefits;
            entity = entity.bind(oscar)(verify);
            entity = report.bind(tango)(entity, zulu);
            entity = entity[variable39];
            report = _closure1_slot0;
            zulu = 19;
            zulu = foxtrot[zulu];
            report = report.bind(tango)(zulu);
            zulu = report.useFormattedSubscriptionPlan;
            sequence = zulu.bind(report)(verify);
            lima = mike.length;
            equality = mike[variable39];
            sierra = entity[variable39];
            whiskey = variable38.size;
            target = entity.length;
            zulu = _closure1_slot9;
            mike = _closure1_slot6;
            entity = {};
            report = sizing.container;
            entity['style'] = report;
            options = _closure1_slot9;
            oscar = _closure1_slot6;
            report = {};
            golf = sizing.header;
            report['style'] = golf;
            romeo = _closure1_slot8;
            offset = _closure1_slot1;
            golf = 20;
            golf = foxtrot[golf];
            offset = offset.bind(tango)(golf);
            golf = {};
            foxtrot = {};
            update = null;
            result = update != output;
            kilo = '';
            if(!result) { _fun112104_ip = 336; continue _fun112104 }
 333:
            kilo = output;
 336:
            foxtrot['uri'] = kilo;
            golf['source'] = foxtrot;
            foxtrot = sizing.image;
            golf['style'] = foxtrot;
            golf = romeo.bind(tango)(offset, golf);
            romeo = new Array(3);
            romeo[0] = golf;
            result = _closure1_slot8;
            golf = _closure1_slot1;
            offset = _closure1_slot3;
            papa = 13;
            foxtrot = offset[papa];
            output = golf.bind(tango)(foxtrot);
            kilo = {};
            foxtrot = 16;
            kilo['size'] = foxtrot;
            kilo = result.bind(tango)(output, kilo);
            romeo[1] = kilo;
            result = _closure1_slot9;
            output = _closure1_slot6;
            kilo = {};
            config = _closure1_slot8;
            control = _closure1_slot0;
            source = 7;
            echo = offset[source];
            echo = control.bind(tango)(echo);
            vacuum = echo.Text;
            echo = {'variant': 'heading-md/semibold', 'color': 'header-primary'};
            echo['children'] = record;
            vacuum = config.bind(tango)(vacuum, echo);
            echo = new Array(3);
            echo[0] = vacuum;
            record = _closure1_slot8;
            vacuum = offset[papa];
            config = golf.bind(tango)(vacuum);
            vacuum = {};
            status = 4;
            vacuum['size'] = status;
            vacuum = record.bind(tango)(config, vacuum);
            echo[1] = vacuum;
            vacuum = _closure1_slot8;
            source = offset[source];
            source = control.bind(tango)(source);
            control = source.Text;
            source = {'variant': 'heading-md/medium', 'color': 'header-secondary'};
            source['children'] = sequence;
            source = vacuum.bind(tango)(control, source);
            echo[2] = source;
            kilo['children'] = echo;
            kilo = result.bind(tango)(output, kilo);
            romeo[2] = kilo;
            report['children'] = romeo;
            oscar = options.bind(tango)(oscar, report);
            report = new Array(4);
            report[0] = oscar;
            romeo = _closure1_slot8;
            oscar = offset[papa];
            options = golf.bind(tango)(oscar);
            oscar = {};
            oscar['size'] = foxtrot;
            oscar = romeo.bind(tango)(options, oscar);
            report[1] = oscar;
            options = _closure1_slot8;
            oscar = 21;
            oscar = offset[oscar];
            golf = golf.bind(tango)(oscar);
            oscar = {};
            oscar['listingId'] = verify;
            oscar = options.bind(tango)(golf, oscar);
            report[2] = oscar;
            oscar = lima > variable39;
            if(oscar) { _fun112104_ip = 662; continue _fun112104 }
 658:
            oscar = whiskey > variable39;
 662:
            if(oscar) { _fun112104_ip = 669; continue _fun112104 }
 665:
            oscar = target > variable39;
 669:
            if(!oscar) { _fun112104_ip = 1574; continue _fun112104 }
 675:
            verify = _closure1_slot9;
            options = _closure1_slot10;
            golf = {};
            foxtrot = _closure1_slot8;
            romeo = _closure1_slot1;
            echo = _closure1_slot3;
            offset = echo[papa];
            romeo = romeo.bind(tango)(offset);
            offset = {};
            kilo = 24;
            offset['size'] = kilo;
            romeo = foxtrot.bind(tango)(romeo, offset);
            offset = new Array(3);
            offset[0] = romeo;
            kilo = _closure1_slot8;
            foxtrot = _closure1_slot6;
            romeo = {};
            sizing = sizing.contentContainer;
            romeo['style'] = sizing;
            result = _closure1_slot9;
            output = _closure1_slot0;
            sizing = 11;
            sizing = echo[sizing];
            sizing = output.bind(tango)(sizing);
            output = sizing.GappedList;
            sizing = {};
            echo = function() { // Original name: renderGap
                tango = _closure1_slot8;
                zulu = _closure1_slot13;
                mike = undefined;
                entity = {};
                entity = tango.bind(mike)(zulu, entity);
                return entity;
            };
            sizing['renderGap'] = echo;
            echo = whiskey > variable39;
            source = null;
            if(!echo) { _fun112104_ip = 1026; continue _fun112104 }
 801:
            vacuum = _closure1_slot9;
            control = _closure1_slot6;
            echo = {};
            context = _closure1_slot8;
            record = _closure1_slot12;
            sequence = {};
            variable41 = _closure1_slot0;
            config = _closure1_slot3;
            quebec = 15;
            variable37 = config[quebec];
            variable37 = variable41.bind(tango)(variable37);
            variable40 = variable37.intl;
            variable37 = variable40.string;
            quebec = config[quebec];
            quebec = variable41.bind(tango)(quebec);
            quebec = quebec.t;
            quebec = quebec.ebOU2d;
            quebec = variable37.bind(variable40)(quebec);
            sequence['title'] = quebec;
            sequence['count'] = whiskey;
            record = context.bind(tango)(record, sequence);
            sequence = new Array(4);
            sequence[0] = record;
            quebec = _closure1_slot8;
            record = _closure1_slot1;
            context = config[papa];
            whiskey = record.bind(tango)(context);
            context = {};
            variable37 = 8;
            context['size'] = variable37;
            context = quebec.bind(tango)(whiskey, context);
            sequence[1] = context;
            quebec = _closure1_slot8;
            whiskey = _closure1_slot14;
            context = {};
            variable37 = new Array(0);
            variable44 = variable37;
            variable43 = variable38;
            variable42 = 0;
            variable38 = arraySpread(variable44, variable43, variable42);
            context['emojiIds'] = variable37;
            context['guildId'] = variable36;
            variable36 = 5;
            context['maxEmojis'] = variable36;
            context = quebec.bind(tango)(whiskey, context);
            sequence[2] = context;
            context = _closure1_slot8;
            config = config[papa];
            record = record.bind(tango)(config);
            config = {};
            config['size'] = status;
            config = context.bind(tango)(record, config);
            sequence[3] = config;
            echo['children'] = sequence;
            source = vacuum.bind(tango)(control, echo);
 1026:
            echo = new Array(3);
            echo[0] = source;
            control = update != equality;
            source = null;
            if(!control) { _fun112104_ip = 1268; continue _fun112104 }
 1046:
            sequence = _closure1_slot9;
            vacuum = _closure1_slot6;
            control = {};
            status = _closure1_slot8;
            context = _closure1_slot12;
            config = {};
            quebec = _closure1_slot0;
            record = _closure1_slot3;
            whiskey = 15;
            variable36 = record[whiskey];
            variable36 = quebec.bind(tango)(variable36);
            variable37 = variable36.intl;
            variable36 = variable37.formatToPlainString;
            whiskey = record[whiskey];
            whiskey = quebec.bind(tango)(whiskey);
            whiskey = whiskey.t;
            quebec = whiskey.y7dUrq;
            whiskey = {};
            whiskey['numChannels'] = lima;
            whiskey = variable36.bind(variable37)(quebec, whiskey);
            config['title'] = whiskey;
            config['count'] = lima;
            context = status.bind(tango)(context, config);
            config = new Array(4);
            config[0] = context;
            whiskey = _closure1_slot8;
            context = _closure1_slot1;
            status = record[papa];
            lima = context.bind(tango)(status);
            status = {};
            quebec = 12;
            status['size'] = quebec;
            status = whiskey.bind(tango)(lima, status);
            config[1] = status;
            whiskey = _closure1_slot8;
            lima = _closure1_slot16;
            status = {};
            quebec = equality.ref_id;
            status['channelId'] = quebec;
            equality = equality.description;
            status['description'] = equality;
            status = whiskey.bind(tango)(lima, status);
            config[2] = status;
            status = _closure1_slot8;
            record = record[papa];
            context = context.bind(tango)(record);
            record = {};
            lima = 6;
            record['size'] = lima;
            record = status.bind(tango)(context, record);
            config[3] = record;
            control['children'] = config;
            source = sequence.bind(tango)(vacuum, control);
 1268:
            echo[1] = source;
            source = update != sierra;
            update = null;
            if(!source) { _fun112104_ip = 1505; continue _fun112104 }
 1284:
            vacuum = _closure1_slot9;
            control = _closure1_slot6;
            source = {};
            context = _closure1_slot8;
            record = _closure1_slot12;
            sequence = {};
            lima = _closure1_slot0;
            config = _closure1_slot3;
            status = 15;
            whiskey = config[status];
            whiskey = lima.bind(tango)(whiskey);
            equality = whiskey.intl;
            whiskey = equality.formatToPlainString;
            status = config[status];
            status = lima.bind(tango)(status);
            status = status.t;
            lima = status.MR7oOD;
            status = {};
            status['numBenefits'] = target;
            status = whiskey.bind(equality)(lima, status);
            sequence['title'] = status;
            sequence['count'] = target;
            record = context.bind(tango)(record, sequence);
            sequence = new Array(4);
            sequence[0] = record;
            status = _closure1_slot8;
            record = _closure1_slot1;
            context = config[papa];
            target = record.bind(tango)(context);
            context = {};
            lima = 12;
            context['size'] = lima;
            context = status.bind(tango)(target, context);
            sequence[1] = context;
            status = _closure1_slot8;
            target = _closure1_slot15;
            context = {};
            lima = sierra.name;
            context['title'] = lima;
            sierra = sierra.description;
            context['description'] = sierra;
            context = status.bind(tango)(target, context);
            sequence[2] = context;
            context = _closure1_slot8;
            config = config[papa];
            record = record.bind(tango)(config);
            config = {};
            papa = 6;
            config['size'] = papa;
            config = context.bind(tango)(record, config);
            sequence[3] = config;
            source['children'] = sequence;
            update = vacuum.bind(tango)(control, source);
 1505:
            echo[2] = update;
            sizing['children'] = echo;
            sizing = result.bind(tango)(output, sizing);
            romeo['children'] = sizing;
            romeo = kilo.bind(tango)(foxtrot, romeo);
            offset[1] = romeo;
            foxtrot = _closure1_slot8;
            romeo = _closure1_slot17;
            yankee = {};
            backup = function() { // Original name: onPress
                options = _closure2_slot0;
                golf = _closure2_slot1;
                report = _closure1_slot1;
                mike = _closure1_slot3;
                entity = 8;
                tango = mike[entity];
                entity = undefined;
                oscar = report.bind(entity)(tango);
                report = oscar.openLazy;
                tango = _closure1_slot0;
                zulu = 10;
                zulu = mike[zulu];
                tango = tango.bind(entity)(zulu);
                zulu = 9;
                zulu = mike[zulu];
                mike = mike.paths;
                tango = tango.bind(entity)(zulu, mike);
                mike = global;
                mike = mike.HermesInternal;
                zulu = mike.concat;
                mike = 'PurchaseCard:';
                zulu = zulu.bind(mike)(options);
                mike = {};
                mike['listingId'] = options;
                mike['guildId'] = golf;
                mike = report.bind(oscar)(tango, zulu, mike);
                return entity;
            };
            yankee['onPress'] = backup;
            yankee = foxtrot.bind(tango)(romeo, yankee);
            offset[2] = yankee;
            golf['children'] = offset;
            oscar = verify.bind(tango)(options, golf);
 1574:
            report[3] = oscar;
            entity['children'] = report;
            entity = zulu.bind(tango)(mike, entity);
            return entity;
        }
    };
    zulu['default'] = mike;
    return entity;
})();