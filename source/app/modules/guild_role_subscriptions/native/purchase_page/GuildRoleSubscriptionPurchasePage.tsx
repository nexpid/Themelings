// app/modules/guild_role_subscriptions/native/purchase_page/GuildRoleSubscriptionPurchasePage.tsx
export default (function(argFoo, argBar, argBaz, argCorge, _, argFred, argPlugh) {
    report = argBar;
    yankee = argBaz;
    golf = argCorge;
    zulu = argFred;
    oscar = argPlugh;
    var _closure1_slot0 = report;
    var _closure1_slot1 = yankee;
    var _closure1_slot2 = golf;
    var _closure1_slot3 = oscar;
    entity = function() { // Original name: Separator
        mike = _closure1_slot17;
        tango = undefined;
        report = mike.bind(tango)();
        zulu = _closure1_slot14;
        mike = _closure1_slot6;
        entity = {};
        report = report.separator;
        entity['style'] = report;
        entity = zulu.bind(tango)(mike, entity);
        return entity;
    };
    var _closure1_slot18 = entity;
    entity = function() { // Original name: LegalDisclaimer
        tango = _closure1_slot14;
        oscar = _closure1_slot0;
        offset = _closure1_slot3;
        entity = 9;
        entity = offset[entity];
        zulu = undefined;
        entity = oscar.bind(zulu)(entity);
        mike = entity.TextWithIOSLinkWorkaround;
        entity = {'variant': 'text-xs/normal', 'color': 'text-muted'};
        report = 10;
        golf = offset[report];
        golf = oscar.bind(zulu)(golf);
        options = golf.intl;
        golf = options.format;
        report = offset[report];
        report = oscar.bind(zulu)(report);
        report = report.t;
        oscar = report.FSPTDA;
        report = {};
        offset = _closure1_slot13;
        offset = offset.TERMS;
        report['termsURL'] = offset;
        verify = _closure1_slot13;
        verify = verify.PAID_TERMS;
        report['paidURL'] = verify;
        report = golf.bind(options)(oscar, report);
        entity['children'] = report;
        entity = tango.bind(zulu)(mike, entity);
        return entity;
    };
    var _closure1_slot19 = entity;
    entity = function(argFoo) { // Original name: SocialBadge
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            entity = argFoo;
            romeo = entity.iconSource;
            foxtrot = entity.text;
            report = entity.onPress;
            entity = _closure1_slot17;
            tango = undefined;
            offset = entity.bind(tango)();
            entity = null;
            oscar = entity != report;
            zulu = _closure1_slot15;
            mike = _closure1_slot5;
            entity = {};
            golf = offset.socialBadge;
            entity['style'] = golf;
            golf = 1;
            if(!oscar) { _fun00002_ip = 74; continue _fun00001 }
 64:
            golf = 0.5;
 74:
            entity['activeOpacity'] = golf;
            entity['onPress'] = report;
            yankee = _closure1_slot14;
            verify = _closure1_slot1;
            backup = _closure1_slot3;
            golf = 11;
            report = backup[golf];
            verify = verify.bind(tango)(report);
            report = {};
            report['source'] = romeo;
            romeo = offset.socialBadgeIcon;
            report['style'] = romeo;
            romeo = 'contain';
            report['resizeMode'] = romeo;
            romeo = true;
            report['disableColor'] = romeo;
            verify = yankee.bind(tango)(verify, report);
            report = new Array(3);
            report[0] = verify;
            romeo = _closure1_slot14;
            yankee = _closure1_slot0;
            verify = 12;
            verify = backup[verify];
            verify = yankee.bind(tango)(verify);
            yankee = verify.Text;
            verify = {'variant': 'text-sm/medium', 'color': 'text-normal'};
            verify['children'] = foxtrot;
            verify = romeo.bind(tango)(yankee, verify);
            report[1] = verify;
            if(!oscar) { _fun00002_ip = 264; continue _fun00001 }
 209:
            verify = _closure1_slot14;
            romeo = _closure1_slot1;
            foxtrot = _closure1_slot3;
            golf = foxtrot[golf];
            options = romeo.bind(tango)(golf);
            golf = {};
            yankee = 13;
            yankee = foxtrot[yankee];
            yankee = romeo.bind(tango)(yankee);
            golf['source'] = yankee;
            offset = offset.socialBadgeArrow;
            golf['style'] = offset;
            oscar = verify.bind(tango)(options, golf);
 264:
            report[2] = oscar;
            entity['children'] = report;
            entity = zulu.bind(tango)(mike, entity);
            return entity;
        }
    };
    var _closure1_slot20 = entity;
    entity = global;
    verify = entity.Object;
    options = verify.defineProperty;
    tango = {};
    entity = true;
    tango['value'] = entity;
    entity = '__esModule';
    entity = options.bind(verify)(zulu, entity, tango);
    entity = 0;
    tango = oscar[entity];
    entity = undefined;
    tango = golf.bind(entity)(tango);
    offset = 1;
    tango = oscar[offset];
    tango = report.bind(entity)(tango);
    golf = tango.ActivityIndicator;
    var _closure1_slot4 = golf;
    golf = tango.TouchableOpacity;
    var _closure1_slot5 = golf;
    golf = tango.View;
    var _closure1_slot6 = golf;
    tango = tango.ScrollView;
    var _closure1_slot7 = tango;
    tango = 2;
    tango = oscar[tango];
    tango = yankee.bind(entity)(tango);
    var _closure1_slot8 = tango;
    tango = 3;
    tango = oscar[tango];
    tango = yankee.bind(entity)(tango);
    var _closure1_slot9 = tango;
    tango = 4;
    tango = oscar[tango];
    tango = yankee.bind(entity)(tango);
    var _closure1_slot10 = tango;
    tango = 5;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    golf = tango.AnalyticsLocations;
    var _closure1_slot11 = golf;
    golf = tango.GuildFeatures;
    var _closure1_slot12 = golf;
    tango = tango.MarketingURLs;
    var _closure1_slot13 = tango;
    tango = 6;
    golf = oscar[tango];
    golf = report.bind(entity)(golf);
    golf = golf.jsx;
    var _closure1_slot14 = golf;
    golf = oscar[tango];
    golf = report.bind(entity)(golf);
    golf = golf.jsxs;
    var _closure1_slot15 = golf;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.Fragment;
    var _closure1_slot16 = tango;
    tango = 7;
    tango = oscar[tango];
    options = report.bind(entity)(tango);
    golf = options.createStyles;
    tango = {};
    verify = {};
    verify['flex'] = offset;
    offset = 8;
    romeo = oscar[offset];
    romeo = yankee.bind(entity)(romeo);
    romeo = romeo.colors;
    romeo = romeo.BACKGROUND_SECONDARY;
    verify['backgroundColor'] = romeo;
    tango['container'] = verify;
    verify = {'aspectRatio': 4, 'width': '100%'};
    tango['heroImage'] = verify;
    verify = {'borderWidth': 3, 'borderRadius': null, 'alignSelf': 'flex-start', 'top': 4294967261, 'left': 16, 'borderColor': null, 'position': 'absolute'};
    romeo = oscar[offset];
    romeo = yankee.bind(entity)(romeo);
    romeo = romeo.radii;
    romeo = romeo.md;
    verify['borderRadius'] = romeo;
    romeo = oscar[offset];
    romeo = yankee.bind(entity)(romeo);
    romeo = romeo.colors;
    romeo = romeo.BACKGROUND_PRIMARY;
    verify['borderColor'] = romeo;
    tango['guildIconContainer'] = verify;
    verify = {};
    romeo = oscar[offset];
    romeo = yankee.bind(entity)(romeo);
    romeo = romeo.radii;
    romeo = romeo.sm;
    verify['borderRadius'] = romeo;
    tango['guildIcon'] = verify;
    verify = {'flex': 1, 'backgroundColor': null, 'paddingTop': 47, 'paddingHorizontal': 16, 'borderTopLeftRadius': null, 'borderTopRightRadius': null, 'marginTop': 4294967281};
    romeo = oscar[offset];
    romeo = yankee.bind(entity)(romeo);
    romeo = romeo.colors;
    romeo = romeo.BACKGROUND_SECONDARY;
    verify['backgroundColor'] = romeo;
    romeo = oscar[offset];
    romeo = yankee.bind(entity)(romeo);
    romeo = romeo.radii;
    romeo = romeo.md;
    verify['borderTopLeftRadius'] = romeo;
    romeo = oscar[offset];
    romeo = yankee.bind(entity)(romeo);
    romeo = romeo.radii;
    romeo = romeo.md;
    verify['borderTopRightRadius'] = romeo;
    tango['contentCard'] = verify;
    verify = {'flex': 1, 'justifyContent': 'center', 'alignItems': 'center', 'paddingBottom': 40};
    tango['loadingContainer'] = verify;
    verify = {};
    romeo = 'row';
    verify['flexDirection'] = romeo;
    tango['socialContainer'] = verify;
    verify = {'flexDirection': 'row', 'backgroundColor': null, 'borderRadius': null, 'paddingVertical': 4, 'paddingHorizontal': 8, 'alignItems': 'center'};
    romeo = oscar[offset];
    romeo = yankee.bind(entity)(romeo);
    romeo = romeo.colors;
    romeo = romeo.BACKGROUND_PRIMARY;
    verify['backgroundColor'] = romeo;
    romeo = oscar[offset];
    romeo = yankee.bind(entity)(romeo);
    romeo = romeo.radii;
    romeo = romeo.xl;
    verify['borderRadius'] = romeo;
    tango['socialBadge'] = verify;
    verify = {'height': 24, 'marginRight': 6};
    tango['socialBadgeIcon'] = verify;
    verify = {'height': 24, 'marginLeft': 6};
    romeo = oscar[offset];
    romeo = yankee.bind(entity)(romeo);
    romeo = romeo.colors;
    romeo = romeo.INTERACTIVE_NORMAL;
    verify['tintColor'] = romeo;
    tango['socialBadgeArrow'] = verify;
    verify = {'width': '100%', 'height': 1, 'backgroundColor': null, 'marginVertical': 24};
    romeo = oscar[offset];
    romeo = yankee.bind(entity)(romeo);
    romeo = romeo.colors;
    romeo = romeo.BACKGROUND_MODIFIER_HOVER;
    verify['backgroundColor'] = romeo;
    tango['separator'] = verify;
    verify = {'marginVertical': 64, 'alignSelf': 'center', 'backgroundColor': 'transparent'};
    tango['moneyBirbPlaceholder'] = verify;
    verify = {'flexDirection': 'row', 'alignItems': 'center', 'marginBottom': 4294967292};
    tango['gatedChannel'] = verify;
    verify = {};
    offset = oscar[offset];
    offset = yankee.bind(entity)(offset);
    offset = offset.colors;
    offset = offset.TEXT_NORMAL;
    verify['tintColor'] = offset;
    tango['gatedChannelIcon'] = verify;
    tango = golf.bind(options)(tango);
    var _closure1_slot17 = tango;
    tango = 32;
    tango = oscar[tango];
    oscar = report.bind(entity)(tango);
    report = oscar.fileFinishedImporting;
    tango = 'modules/guild_role_subscriptions/native/purchase_page/GuildRoleSubscriptionPurchasePage.tsx';
    tango = report.bind(oscar)(tango);
    mike = function(argFoo) { // Original name: GuildRoleSubscriptionPurchasePage
        _fun00003: for(var _fun00004_ip = 0; ; ) switch(_fun00004_ip) {
 0:
            entity = argFoo;
            romeo = entity.guildId;
            var _closure2_slot0 = romeo;
            mike = entity.gatedChannelId;
            var _closure2_slot1 = mike;
            tango = undefined;
            var _closure2_slot3 = tango;
            var _closure2_slot4 = tango;
            entity = _closure1_slot17;
            oscar = entity.bind(tango)();
            var _closure2_slot2 = oscar;
            zulu = _closure1_slot1;
            offset = _closure1_slot3;
            entity = 14;
            entity = offset[entity];
            zulu = zulu.bind(tango)(entity);
            entity = {};
            golf = true;
            entity['forceRestore'] = golf;
            entity = zulu.bind(tango)(entity);
            verify = _closure1_slot0;
            entity = 15;
            zulu = offset[entity];
            golf = verify.bind(tango)(zulu);
            zulu = golf.useGroupListingsForGuild;
            golf = zulu.bind(golf)(romeo);
            zulu = 0;
            golf = golf[zulu];
            update = 16;
            zulu = offset[update];
            options = verify.bind(tango)(zulu);
            zulu = options.useGroupListingsFetchContext;
            options = zulu.bind(options)();
            zulu = offset[entity];
            yankee = verify.bind(tango)(zulu);
            zulu = yankee.useSubscriptionsSettings;
            zulu = zulu.bind(yankee)(romeo);
            yankee = 17;
            foxtrot = offset[yankee];
            sizing = verify.bind(tango)(foxtrot);
            kilo = sizing.useStateFromStores;
            foxtrot = _closure1_slot10;
            backup = new Array(1);
            backup[0] = foxtrot;
            foxtrot = function() {
                zulu = _closure1_slot10;
                mike = zulu.getGuild;
                entity = _closure2_slot0;
                entity = mike.bind(zulu)(entity);
                return entity;
            };
            status = kilo.bind(sizing)(backup, foxtrot);
            entity = offset[entity];
            foxtrot = verify.bind(tango)(entity);
            offset = foxtrot.useSubscriptionListingsForGroup;
            whiskey = null;
            entity = whiskey == golf;
            verify = undefined;
            if(entity) { _fun00004_ip = 231; continue _fun00003 }
 226:
            verify = golf.id;
 231:
            entity = {};
            backup = false;
            entity['includeUnpublished'] = backup;
            offset = offset.bind(foxtrot)(verify, entity);
            verify = offset.map;
            entity = function(argFoo) {
                entity = argFoo;
                entity = entity.id;
                return entity;
            };
            source = verify.bind(offset)(entity);
            if(!(whiskey == mike)) { _fun00004_ip = 279; continue _fun00003 }
 267:
            entity = _closure1_slot11;
            offset = entity.ROLE_SUBSCRIPTIONS_TAB;
            _fun00004_ip = 289; continue _fun00003;
 279:
            entity = _closure1_slot11;
            offset = entity.ROLE_SUBSCRIPTION_GATED_CHANNEL;
 289:
            verify = _closure1_slot1;
            foxtrot = _closure1_slot3;
            entity = 18;
            entity = foxtrot[entity];
            verify = verify.bind(tango)(entity);
            entity = {};
            entity['guildId'] = romeo;
            foxtrot = whiskey == golf;
            romeo = undefined;
            if(foxtrot) { _fun00004_ip = 329; continue _fun00003 }
 324:
            romeo = golf.id;
 329:
            entity['groupListingId'] = romeo;
            entity['location'] = offset;
            entity['relevantSubscriptionListingIds'] = source;
            entity = verify.bind(tango)(entity);
            offset = _closure1_slot0;
            verify = _closure1_slot3;
            entity = verify[yankee];
            kilo = offset.bind(tango)(entity);
            backup = kilo.useStateFromStores;
            entity = _closure1_slot9;
            foxtrot = new Array(1);
            foxtrot[0] = entity;
            romeo = new Array(1);
            romeo[0] = mike;
            entity = function() {
                zulu = _closure1_slot9;
                mike = zulu.getChannel;
                entity = _closure2_slot1;
                entity = mike.bind(zulu)(entity);
                return entity;
            };
            entity = backup.bind(kilo)(foxtrot, entity, romeo);
            _closure2_slot3 = entity;
            verify = verify[yankee];
            foxtrot = offset.bind(tango)(verify);
            romeo = foxtrot.useStateFromStores;
            verify = _closure1_slot8;
            yankee = new Array(1);
            yankee[0] = verify;
            verify = function() {
                entity = _closure1_slot8;
                mike = entity.theme;
                entity = 'light';
                entity = entity === mike;
                return entity;
            };
            verify = romeo.bind(foxtrot)(yankee, verify);
            romeo = _closure1_slot3;
            if(verify) { _fun00004_ip = 463; continue _fun00003 }
 454:
            verify = 20;
            verify = romeo[verify];
            _fun00004_ip = 470; continue _fun00003;
 463:
            yankee = 19;
            verify = romeo[yankee];
 470:
            yankee = offset.bind(tango)(verify);
            if(!options) { _fun00004_ip = 1800; continue _fun00003 }
 481:
            if(!(whiskey != zulu)) { _fun00004_ip = 1800; continue _fun00003 }
 488:
            if(!(whiskey != status)) { _fun00004_ip = 1800; continue _fun00003 }
 495:
            if(!(whiskey != golf)) { _fun00004_ip = 1800; continue _fun00003 }
 502:
            options = _closure1_slot2;
            verify = _closure1_slot3;
            golf = 21;
            golf = verify[golf];
            options = options.bind(tango)(golf);
            golf = options.getCoverImageURI;
            offset = golf.bind(options)(zulu);
            control = zulu.description;
            options = status.hasFeature;
            golf = _closure1_slot12;
            golf = golf.PARTNERED;
            sierra = options.bind(status)(golf);
            lima = zulu.store_page_trailer_url;
            _closure2_slot4 = lima;
            if(!(whiskey != mike)) { _fun00004_ip = 579; continue _fun00003 }
 575:
            if(!(whiskey == entity)) { _fun00004_ip = 638; continue _fun00003 }
 579:
            golf = _closure1_slot0;
            options = _closure1_slot3;
            entity = 10;
            mike = options[entity];
            mike = golf.bind(tango)(mike);
            zulu = mike.intl;
            mike = zulu.string;
            entity = options[entity];
            entity = golf.bind(tango)(entity);
            entity = entity.t;
            entity = entity.mPHb19;
            sequence = mike.bind(zulu)(entity);
            _fun00004_ip = 712; continue _fun00003;
 638:
            mike = _closure1_slot0;
            options = _closure1_slot3;
            entity = 10;
            zulu = options[entity];
            zulu = mike.bind(tango)(zulu);
            golf = zulu.intl;
            zulu = golf.format;
            entity = options[entity];
            entity = mike.bind(tango)(entity);
            entity = entity.t;
            mike = entity.A1L1hY;
            entity = {};
            options = function() { // Original name: unlockHook
                tango = _closure1_slot15;
                zulu = _closure1_slot6;
                mike = {};
                golf = _closure2_slot2;
                entity = golf.gatedChannel;
                mike['style'] = entity;
                backup = _closure1_slot14;
                yankee = _closure1_slot1;
                offset = _closure1_slot3;
                options = 22;
                report = offset[options];
                entity = undefined;
                romeo = yankee.bind(entity)(report);
                report = {};
                foxtrot = 3;
                report['size'] = foxtrot;
                romeo = backup.bind(entity)(romeo, report);
                report = new Array(4);
                report[0] = romeo;
                kilo = _closure1_slot14;
                sizing = 11;
                romeo = offset[sizing];
                backup = yankee.bind(entity)(romeo);
                romeo = {};
                sizing = offset[sizing];
                sizing = yankee.bind(entity)(sizing);
                sizing = sizing.Sizes;
                sizing = sizing.SMALL_20;
                romeo['size'] = sizing;
                golf = golf.gatedChannelIcon;
                romeo['style'] = golf;
                golf = _closure1_slot0;
                sizing = 23;
                sizing = offset[sizing];
                result = golf.bind(entity)(sizing);
                output = result.getChannelIcon;
                sizing = _closure2_slot3;
                sizing = output.bind(result)(sizing);
                romeo['source'] = sizing;
                romeo = kilo.bind(entity)(backup, romeo);
                report[1] = romeo;
                romeo = _closure1_slot14;
                options = offset[options];
                yankee = yankee.bind(entity)(options);
                options = {};
                options['size'] = foxtrot;
                options = romeo.bind(entity)(yankee, options);
                report[2] = options;
                options = _closure1_slot14;
                oscar = 12;
                oscar = offset[oscar];
                oscar = golf.bind(entity)(oscar);
                golf = oscar.Text;
                oscar = {'variant': 'text-xs/semibold', 'color': 'text-normal'};
                verify = _closure2_slot3;
                verify = verify.name;
                oscar['children'] = verify;
                oscar = options.bind(entity)(golf, oscar);
                report[3] = oscar;
                mike['children'] = report;
                entity = tango.bind(entity)(zulu, mike);
                return entity;
            };
            entity['unlockHook'] = options;
            sequence = zulu.bind(golf)(mike, entity);
 712:
            zulu = _closure1_slot15;
            mike = _closure1_slot7;
            entity = {};
            golf = oscar.container;
            entity['style'] = golf;
            golf = {};
            options = 1;
            golf['right'] = options;
            entity['scrollIndicatorInsets'] = golf;
            verify = _closure1_slot14;
            output = _closure1_slot1;
            vacuum = _closure1_slot3;
            romeo = 24;
            golf = vacuum[romeo];
            options = output.bind(tango)(golf);
            golf = {};
            golf['source'] = offset;
            offset = oscar.heroImage;
            golf['style'] = offset;
            options = verify.bind(tango)(options, golf);
            golf = new Array(3);
            golf[0] = options;
            backup = _closure1_slot15;
            foxtrot = _closure1_slot6;
            offset = {};
            options = oscar.contentCard;
            offset['style'] = options;
            sizing = _closure1_slot14;
            kilo = _closure1_slot6;
            options = {};
            verify = oscar.guildIconContainer;
            options['style'] = verify;
            record = _closure1_slot14;
            context = 25;
            verify = vacuum[context];
            config = output.bind(tango)(verify);
            result = {};
            verify = _closure1_slot0;
            context = vacuum[context];
            context = verify.bind(tango)(context);
            context = context.GuildIconSizes;
            context = context.XLARGE;
            result['size'] = context;
            result['guild'] = status;
            context = oscar.guildIcon;
            result['style'] = context;
            result = record.bind(tango)(config, result);
            options['children'] = result;
            options = sizing.bind(tango)(kilo, options);
            kilo = new Array(11);
            kilo[0] = options;
            config = _closure1_slot14;
            result = 12;
            options = vacuum[result];
            options = verify.bind(tango)(options);
            sizing = options.Text;
            options = {'variant': 'heading-xl/bold', 'color': 'header-primary'};
            variable40 = 10;
            record = vacuum[variable40];
            record = verify.bind(tango)(record);
            target = record.intl;
            papa = target.format;
            record = vacuum[variable40];
            record = verify.bind(tango)(record);
            record = record.t;
            context = record.mqCkpq;
            record = {};
            status = status.name;
            record['serverName'] = status;
            record = papa.bind(target)(context, record);
            options['children'] = record;
            options = config.bind(tango)(sizing, options);
            kilo[1] = options;
            config = _closure1_slot14;
            sizing = 22;
            options = vacuum[sizing];
            output = output.bind(tango)(options);
            options = {};
            equality = 8;
            options['size'] = equality;
            options = config.bind(tango)(output, options);
            kilo[2] = options;
            output = _closure1_slot14;
            options = 26;
            options = vacuum[options];
            options = verify.bind(tango)(options);
            verify = options.TruncatedText;
            options = {'variant': 'text-sm/normal', 'color': 'text-normal', 'lineClamp': 3};
            options['children'] = control;
            options = output.bind(tango)(verify, options);
            kilo[3] = options;
            options = sierra;
            if(sierra) { _fun00004_ip = 1130; continue _fun00003 }
 1126:
            options = whiskey != lima;
 1130:
            if(!options) { _fun00004_ip = 1500; continue _fun00003 }
 1136:
            control = _closure1_slot15;
            output = _closure1_slot16;
            verify = {};
            record = _closure1_slot14;
            config = _closure1_slot1;
            quebec = _closure1_slot3;
            vacuum = quebec[sizing];
            config = config.bind(tango)(vacuum);
            vacuum = {};
            vacuum['size'] = romeo;
            config = record.bind(tango)(config, vacuum);
            vacuum = new Array(2);
            vacuum[0] = config;
            context = _closure1_slot14;
            record = _closure1_slot6;
            config = {};
            papa = oscar.socialContainer;
            config['style'] = papa;
            status = _closure1_slot15;
            target = _closure1_slot0;
            papa = 27;
            papa = quebec[papa];
            papa = target.bind(tango)(papa);
            target = papa.GappedList;
            papa = {};
            papa['gap'] = equality;
            equality = sierra;
            if(!equality) { _fun00004_ip = 1341; continue _fun00003 }
 1246:
            variable36 = _closure1_slot14;
            quebec = _closure1_slot20;
            sierra = {};
            variable39 = _closure1_slot1;
            variable37 = _closure1_slot3;
            variable38 = 28;
            variable38 = variable37[variable38];
            variable38 = variable39.bind(tango)(variable38);
            sierra['iconSource'] = variable38;
            variable41 = _closure1_slot0;
            variable38 = variable37[variable40];
            variable38 = variable41.bind(tango)(variable38);
            variable39 = variable38.intl;
            variable38 = variable39.string;
            variable37 = variable37[variable40];
            variable37 = variable41.bind(tango)(variable37);
            variable37 = variable37.t;
            variable37 = variable37.2MhjUV;
            variable37 = variable38.bind(variable39)(variable37);
            sierra['text'] = variable37;
            equality = variable36.bind(tango)(quebec, sierra);
 1341:
            sierra = new Array(2);
            sierra[0] = equality;
            lima = whiskey != lima;
            if(!lima) { _fun00004_ip = 1462; continue _fun00003 }
 1356:
            quebec = _closure1_slot14;
            equality = _closure1_slot20;
            whiskey = {};
            variable38 = _closure1_slot1;
            variable36 = _closure1_slot3;
            variable37 = 29;
            variable37 = variable36[variable37];
            variable37 = variable38.bind(tango)(variable37);
            whiskey['iconSource'] = variable37;
            variable39 = _closure1_slot0;
            variable37 = variable36[variable40];
            variable37 = variable39.bind(tango)(variable37);
            variable38 = variable37.intl;
            variable37 = variable38.string;
            variable36 = variable36[variable40];
            variable36 = variable39.bind(tango)(variable36);
            variable36 = variable36.t;
            variable36 = variable36.4PGeGB;
            variable36 = variable37.bind(variable38)(variable36);
            whiskey['text'] = variable36;
            variable36 = function() { // Original name: onPress
                zulu = _closure1_slot1;
                mike = _closure1_slot3;
                entity = 30;
                mike = mike[entity];
                entity = undefined;
                zulu = zulu.bind(entity)(mike);
                mike = zulu.openURL;
                entity = _closure2_slot4;
                entity = mike.bind(zulu)(entity);
                return entity;
            };
            whiskey['onPress'] = variable36;
            lima = quebec.bind(tango)(equality, whiskey);
 1462:
            sierra[1] = lima;
            papa['children'] = sierra;
            papa = status.bind(tango)(target, papa);
            config['children'] = papa;
            config = context.bind(tango)(record, config);
            vacuum[1] = config;
            verify['children'] = vacuum;
            options = control.bind(tango)(output, verify);
 1500:
            kilo[4] = options;
            vacuum = _closure1_slot14;
            verify = _closure1_slot1;
            options = _closure1_slot3;
            output = options[sizing];
            control = verify.bind(tango)(output);
            output = {};
            output['size'] = update;
            output = vacuum.bind(tango)(control, output);
            kilo[5] = output;
            vacuum = _closure1_slot14;
            control = _closure1_slot19;
            output = {};
            output = vacuum.bind(tango)(control, output);
            kilo[6] = output;
            vacuum = _closure1_slot14;
            control = _closure1_slot18;
            output = {};
            output = vacuum.bind(tango)(control, output);
            kilo[7] = output;
            vacuum = _closure1_slot14;
            output = _closure1_slot0;
            result = options[result];
            result = output.bind(tango)(result);
            control = result.Text;
            result = {'variant': 'text-xs/semibold', 'color': 'text-muted'};
            config = {};
            record = 'uppercase';
            config['textTransform'] = record;
            result['style'] = config;
            result['children'] = sequence;
            result = vacuum.bind(tango)(control, result);
            kilo[8] = result;
            control = _closure1_slot14;
            sizing = options[sizing];
            result = verify.bind(tango)(sizing);
            sizing = {};
            sizing['size'] = romeo;
            sizing = control.bind(tango)(result, sizing);
            kilo[9] = sizing;
            result = _closure1_slot14;
            sizing = 27;
            sizing = options[sizing];
            sizing = output.bind(tango)(sizing);
            output = sizing.GappedList;
            sizing = {};
            sizing['gap'] = update;
            update = source.map;
            echo = function(argFoo) {
                report = argFoo;
                tango = _closure1_slot14;
                mike = _closure1_slot1;
                zulu = _closure1_slot3;
                entity = 31;
                entity = zulu[entity];
                zulu = undefined;
                mike = mike.bind(zulu)(entity);
                entity = {};
                entity['listingId'] = report;
                oscar = _closure2_slot0;
                entity['guildId'] = oscar;
                entity = tango.bind(zulu)(mike, entity, report);
                return entity;
            };
            echo = update.bind(source)(echo);
            sizing['children'] = echo;
            sizing = result.bind(tango)(output, sizing);
            kilo[10] = sizing;
            offset['children'] = kilo;
            offset = backup.bind(tango)(foxtrot, offset);
            golf[1] = offset;
            offset = _closure1_slot14;
            options = options[romeo];
            verify = verify.bind(tango)(options);
            options = {};
            options['source'] = yankee;
            yankee = oscar.moneyBirbPlaceholder;
            options['style'] = yankee;
            options = offset.bind(tango)(verify, options);
            golf[2] = options;
            entity['children'] = golf;
            entity = zulu.bind(tango)(mike, entity);
            return entity;
 1800:
            zulu = _closure1_slot14;
            mike = _closure1_slot6;
            entity = {};
            oscar = oscar.loadingContainer;
            entity['style'] = oscar;
            golf = _closure1_slot14;
            oscar = _closure1_slot4;
            report = {};
            options = 'large';
            report['size'] = options;
            report = golf.bind(tango)(oscar, report);
            entity['children'] = report;
            entity = zulu.bind(tango)(mike, entity);
            return entity;
        }
    };
    zulu['default'] = mike;
    return entity;
})();