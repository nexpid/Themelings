// app/modules/guild_role_subscriptions/native/purchase_page/ChangeSubscriptionCard.tsx
export default (function(argFoo, argBar, argBaz, argCorge, _, argFred, argPlugh) {
    report = argBar;
    yankee = argBaz;
    golf = argCorge;
    zulu = argFred;
    oscar = argPlugh;
    var _closure1_slot0 = report;
    var _closure1_slot1 = yankee;
    var _closure1_slot2 = golf;
    var _closure1_slot3 = oscar;
    entity = function(argFoo) { // Original name: emphasisHook
        tango = _closure1_slot7;
        mike = _closure1_slot0;
        zulu = _closure1_slot3;
        entity = 7;
        entity = zulu[entity];
        zulu = undefined;
        entity = mike.bind(zulu)(entity);
        mike = entity.Text;
        entity = {'variant': 'text-sm/medium', 'color': 'text-normal'};
        report = argFoo;
        entity['children'] = report;
        entity = tango.bind(zulu)(mike, entity);
        return entity;
    };
    var _closure1_slot11 = entity;
    entity = global;
    verify = entity.Object;
    options = verify.defineProperty;
    tango = {};
    entity = true;
    tango['value'] = entity;
    entity = '__esModule';
    entity = options.bind(verify)(zulu, entity, tango);
    entity = 0;
    tango = oscar[entity];
    entity = undefined;
    tango = yankee.bind(entity)(tango);
    var _closure1_slot4 = tango;
    tango = 1;
    tango = oscar[tango];
    tango = golf.bind(entity)(tango);
    tango = 2;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.View;
    var _closure1_slot5 = tango;
    tango = 3;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.SubscriptionStatusTypes;
    var _closure1_slot6 = tango;
    tango = 4;
    golf = oscar[tango];
    golf = report.bind(entity)(golf);
    golf = golf.jsx;
    var _closure1_slot7 = golf;
    golf = oscar[tango];
    golf = report.bind(entity)(golf);
    golf = golf.jsxs;
    var _closure1_slot8 = golf;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.Fragment;
    var _closure1_slot9 = tango;
    tango = 5;
    tango = oscar[tango];
    options = report.bind(entity)(tango);
    golf = options.createStyles;
    tango = {};
    verify = {'paddingVertical': 16, 'paddingHorizontal': 24};
    offset = 6;
    offset = oscar[offset];
    offset = yankee.bind(entity)(offset);
    offset = offset.colors;
    offset = offset.BACKGROUND_PRIMARY;
    verify['backgroundColor'] = offset;
    tango['container'] = verify;
    tango = golf.bind(options)(tango);
    var _closure1_slot10 = tango;
    tango = 19;
    tango = oscar[tango];
    oscar = report.bind(entity)(tango);
    report = oscar.fileFinishedImporting;
    tango = 'modules/guild_role_subscriptions/native/purchase_page/ChangeSubscriptionCard.tsx';
    tango = report.bind(oscar)(tango);
    mike = function(argFoo) { // Original name: ChangeSubscriptionCard
        _fun112118: for(var _fun112118_ip = 0; ; ) switch(_fun112118_ip) {
 0:
            mike = argFoo;
            entity = mike.activeSubscription;
            var _closure2_slot0 = entity;
            oscar = mike.activeListingId;
            verify = mike.changeToListingId;
            mike = _closure1_slot10;
            tango = undefined;
            options = mike.bind(tango)();
            kilo = _closure1_slot1;
            sizing = _closure1_slot3;
            mike = 8;
            mike = sizing[mike];
            mike = kilo.bind(tango)(mike);
            mike = mike.bind(tango)();
            romeo = mike.bottom;
            golf = _closure1_slot2;
            mike = 9;
            zulu = sizing[mike];
            report = golf.bind(tango)(zulu);
            zulu = report.useName;
            zulu = zulu.bind(report)(oscar);
            oscar = _closure1_slot4;
            report = 1;
            offset = oscar.bind(tango)(zulu, report);
            zulu = 0;
            record = offset[zulu];
            mike = sizing[mike];
            golf = golf.bind(tango)(mike);
            mike = golf.useName;
            mike = mike.bind(golf)(verify);
            mike = oscar.bind(tango)(mike, report);
            config = mike[zulu];
            mike = 10;
            mike = sizing[mike];
            zulu = kilo.bind(tango)(mike);
            mike = entity.currentPeriodEnd;
            report = zulu.bind(tango)(mike);
            zulu = report.format;
            mike = 'MMMM Do';
            vacuum = zulu.bind(report)(mike);
            yankee = entity.status;
            entity = _closure1_slot6;
            offset = entity.CANCELED;
            zulu = _closure1_slot7;
            result = _closure1_slot0;
            entity = 11;
            entity = sizing[entity];
            entity = result.bind(tango)(entity);
            mike = entity.BottomSheet;
            entity = {};
            report = true;
            entity['startExpanded'] = report;
            golf = _closure1_slot8;
            oscar = _closure1_slot5;
            report = {};
            verify = options.container;
            options = new Array(2);
            options[0] = verify;
            verify = {};
            echo = 16;
            romeo = echo + romeo;
            verify['paddingBottom'] = romeo;
            options[1] = verify;
            report['style'] = options;
            foxtrot = _closure1_slot7;
            verify = 7;
            options = sizing[verify];
            options = result.bind(tango)(options);
            romeo = options.Text;
            options = {'variant': 'heading-lg/semibold', 'color': 'header-primary'};
            control = 12;
            update = sizing[control];
            update = result.bind(tango)(update);
            context = update.intl;
            sequence = context.format;
            update = sizing[control];
            update = result.bind(tango)(update);
            update = update.t;
            source = update.l3uCCQ;
            update = {};
            update['activeListingName'] = record;
            update = sequence.bind(context)(source, update);
            options['children'] = update;
            romeo = foxtrot.bind(tango)(romeo, options);
            options = new Array(4);
            options[0] = romeo;
            update = _closure1_slot7;
            foxtrot = 13;
            romeo = sizing[foxtrot];
            kilo = kilo.bind(tango)(romeo);
            romeo = {};
            romeo['size'] = echo;
            romeo = update.bind(tango)(kilo, romeo);
            options[1] = romeo;
            verify = sizing[verify];
            verify = result.bind(tango)(verify);
            romeo = verify.Text;
            verify = {'variant': 'text-sm/normal', 'color': 'header-secondary'};
            kilo = sizing[control];
            kilo = result.bind(tango)(kilo);
            sequence = kilo.intl;
            source = sequence.format;
            kilo = sizing[control];
            kilo = result.bind(tango)(kilo);
            kilo = kilo.t;
            update = kilo.Zmtrs7;
            kilo = {};
            kilo['activeListingName'] = record;
            kilo['changeToListingName'] = config;
            kilo['billingEndDate'] = vacuum;
            vacuum = _closure1_slot11;
            kilo['emphasisHook'] = vacuum;
            update = source.bind(sequence)(update, kilo);
            kilo = new Array(3);
            kilo[0] = update;
            update = '\n\n';
            kilo[1] = update;
            update = sizing[control];
            update = result.bind(tango)(update);
            source = update.intl;
            update = source.format;
            sizing = sizing[control];
            sizing = result.bind(tango)(sizing);
            sizing = sizing.t;
            result = sizing.KIiWcX;
            sizing = {};
            sizing['emphasisHook'] = vacuum;
            sizing = update.bind(source)(result, sizing);
            kilo[2] = sizing;
            verify['children'] = kilo;
            verify = golf.bind(tango)(romeo, verify);
            options[2] = verify;
            verify = null;
            if(!(yankee !== offset)) { _fun112118_ip = 771; continue _fun112118 }
 613:
            romeo = _closure1_slot8;
            yankee = _closure1_slot9;
            offset = {};
            sizing = _closure1_slot7;
            kilo = _closure1_slot1;
            result = _closure1_slot3;
            foxtrot = result[foxtrot];
            kilo = kilo.bind(tango)(foxtrot);
            foxtrot = {};
            foxtrot['size'] = echo;
            kilo = sizing.bind(tango)(kilo, foxtrot);
            foxtrot = new Array(2);
            foxtrot[0] = kilo;
            sizing = _closure1_slot7;
            source = _closure1_slot0;
            backup = 14;
            backup = result[backup];
            backup = source.bind(tango)(backup);
            kilo = backup.ArrowButton;
            backup = {};
            echo = result[control];
            echo = source.bind(tango)(echo);
            update = echo.intl;
            echo = update.string;
            result = result[control];
            result = source.bind(tango)(result);
            result = result.t;
            result = result.UwHVxs;
            result = echo.bind(update)(result);
            backup['text'] = result;
            output = function() { // Original name: onPress
                zulu = _closure1_slot1;
                tango = _closure1_slot3;
                entity = 15;
                report = tango[entity];
                entity = undefined;
                golf = zulu.bind(entity)(report);
                oscar = golf.pushLazy;
                report = _closure1_slot0;
                mike = 17;
                mike = tango[mike];
                options = report.bind(entity)(mike);
                mike = 16;
                report = tango[mike];
                mike = tango.paths;
                report = options.bind(entity)(report, mike);
                mike = {};
                options = _closure2_slot0;
                options = options.id;
                mike['subscriptionId'] = options;
                mike = oscar.bind(golf)(report, mike);
                mike = 18;
                mike = tango[mike];
                zulu = zulu.bind(entity)(mike);
                mike = zulu.hideActionSheet;
                mike = mike.bind(zulu)();
                return entity;
            };
            backup['onPress'] = output;
            backup = sizing.bind(tango)(kilo, backup);
            foxtrot[1] = backup;
            offset['children'] = foxtrot;
            verify = romeo.bind(tango)(yankee, offset);
 771:
            options[3] = verify;
            report['children'] = options;
            report = golf.bind(tango)(oscar, report);
            entity['children'] = report;
            entity = zulu.bind(tango)(mike, entity);
            return entity;
        }
    };
    zulu['default'] = mike;
    return entity;
})();