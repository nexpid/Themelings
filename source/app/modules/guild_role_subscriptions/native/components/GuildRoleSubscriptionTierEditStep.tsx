// app/modules/guild_role_subscriptions/native/components/GuildRoleSubscriptionTierEditStep.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    report = argBar;
    romeon = argBaz;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    var _closure1_slot1 = romeon;
    var _closure1_slot2 = oscard;
    entity = function(argFoo) { // Original name: Header
        entity = argFoo;
        romeon = entity.description;
        backup = entity.title;
        entity = _closure1_slot8;
        tangon = undefined;
        verify = entity.bind(tangon)();
        zuuluu = _closure1_slot7;
        option = _closure1_slot0;
        offset = _closure1_slot2;
        entity = 5;
        entity = offset[entity];
        entity = option.bind(tangon)(entity);
        michal = entity.SafeAreaPaddingView;
        entity = {};
        report = true;
        entity['top'] = report;
        report = verify.headerContainer;
        entity['style'] = report;
        foxtra = _closure1_slot6;
        golfie = 6;
        report = offset[golfie];
        report = option.bind(tangon)(report);
        yankee = report.Text;
        report = {'style': null, 'accessibilityRole': 'header', 'variant': 'heading-xl/extrabold', 'color': 'header-primary'};
        kiloes = verify.title;
        report['style'] = kiloes;
        report['children'] = backup;
        yankee = foxtra.bind(tangon)(yankee, report);
        report = new Array(3);
        report[0] = yankee;
        yankee = _closure1_slot6;
        golfie = offset[golfie];
        golfie = option.bind(tangon)(golfie);
        option = golfie.Text;
        golfie = {'style': null, 'variant': 'text-sm/medium', 'color': 'header-secondary'};
        foxtra = verify.subtitle;
        golfie['style'] = foxtra;
        golfie['children'] = romeon;
        golfie = yankee.bind(tangon)(option, golfie);
        report[1] = golfie;
        option = _closure1_slot6;
        golfie = _closure1_slot1;
        oscard = 7;
        oscard = offset[oscard];
        golfie = golfie.bind(tangon)(oscard);
        oscard = {};
        verify = verify.separator;
        oscard['style'] = verify;
        oscard = option.bind(tangon)(golfie, oscard);
        report[2] = oscard;
        entity['children'] = report;
        entity = zuuluu.bind(tangon)(michal, entity);
        return entity;
    };
    var _closure1_slot9 = entity;
    entity = function(argFoo) { // Original name: Footer
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            entity = argFoo;
            foxtra = entity.canProceedToNextStep;
            michal = entity.nextStep;
            option = entity.onProceed;
            backup = entity.submitting;
            entity = _closure1_slot8;
            tangon = undefined;
            oscard = entity.bind(tangon)();
            entity = null;
            if(!(entity != michal)) { _fun00002_ip = 105; continue _fun00001 }
 46:
            golfie = _closure1_slot0;
            verify = _closure1_slot2;
            entity = 8;
            michal = verify[entity];
            michal = golfie.bind(tangon)(michal);
            zuuluu = michal.intl;
            michal = zuuluu.string;
            entity = verify[entity];
            entity = golfie.bind(tangon)(entity);
            entity = entity.t;
            entity = entity.bm6P5+;
            verify = michal.bind(zuuluu)(entity);
            _fun00002_ip = 162; continue _fun00001;
 105:
            golfie = _closure1_slot0;
            offset = _closure1_slot2;
            entity = 8;
            michal = offset[entity];
            michal = golfie.bind(tangon)(michal);
            zuuluu = michal.intl;
            michal = zuuluu.string;
            entity = offset[entity];
            entity = golfie.bind(tangon)(entity);
            entity = entity.t;
            entity = entity.4cAsqa;
            verify = michal.bind(zuuluu)(entity);
 162:
            yankee = _closure1_slot1;
            romeon = _closure1_slot2;
            entity = 9;
            entity = romeon[entity];
            entity = yankee.bind(tangon)(entity);
            entity = entity.bind(tangon)();
            offset = entity.bottom;
            zuuluu = _closure1_slot6;
            michal = _closure1_slot4;
            entity = {};
            golfie = oscard.footerContainer;
            oscard = new Array(2);
            oscard[0] = golfie;
            golfie = {};
            golfie['paddingBottom'] = offset;
            oscard[1] = golfie;
            entity['style'] = oscard;
            golfie = _closure1_slot6;
            offset = 10;
            report = romeon[offset];
            oscard = yankee.bind(tangon)(report);
            report = {};
            report['loading'] = backup;
            foxtra = !foxtra;
            report['disabled'] = foxtra;
            offset = romeon[offset];
            offset = yankee.bind(tangon)(offset);
            offset = offset.Colors;
            offset = offset.BRAND;
            report['color'] = offset;
            report['text'] = verify;
            report['onPress'] = option;
            report = golfie.bind(tangon)(oscard, report);
            entity['children'] = report;
            entity = zuuluu.bind(tangon)(michal, entity);
            return entity;
        }
    };
    var _closure1_slot10 = entity;
    entity = global;
    option = entity.Object;
    golfie = option.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(option)(zuuluu, entity, tangon);
    entity = 0;
    golfie = oscard[entity];
    tangon = argCor;
    entity = undefined;
    tangon = tangon.bind(entity)(golfie);
    var _closure1_slot3 = tangon;
    offset = 1;
    tangon = oscard[offset];
    tangon = report.bind(entity)(tangon);
    golfie = tangon.View;
    var _closure1_slot4 = golfie;
    tangon = tangon.ScrollView;
    var _closure1_slot5 = tangon;
    tangon = 2;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    golfie = tangon.jsx;
    var _closure1_slot6 = golfie;
    tangon = tangon.jsxs;
    var _closure1_slot7 = tangon;
    tangon = 3;
    tangon = oscard[tangon];
    verify = report.bind(entity)(tangon);
    option = verify.createStyles;
    golfie = {};
    tangon = {};
    yankee = 4;
    yankee = oscard[yankee];
    yankee = romeon.bind(entity)(yankee);
    yankee = yankee.colors;
    yankee = yankee.BACKGROUND_PRIMARY;
    tangon['backgroundColor'] = yankee;
    yankee = '100%';
    tangon['height'] = yankee;
    golfie['container'] = tangon;
    tangon = {};
    tangon['flexGrow'] = offset;
    golfie['scrollContainer'] = tangon;
    offset = 48;
    tangon = {'position': 'relative', 'paddingTop': 48, 'paddingBottom': 8, 'paddingHorizontal': 16, 'alignItems': 'center'};
    golfie['headerContainer'] = tangon;
    tangon = {};
    yankee = 6;
    tangon['right'] = yankee;
    golfie['closeButtonContainer'] = tangon;
    tangon = {};
    tangon['height'] = offset;
    golfie['stepContainer'] = tangon;
    tangon = 12;
    offset = {'marginTop': 12, 'textAlign': 'center'};
    golfie['title'] = offset;
    offset = {'marginTop': 8, 'textAlign': 'center'};
    golfie['subtitle'] = offset;
    offset = {};
    yankee = 24;
    offset['marginTop'] = yankee;
    golfie['separator'] = offset;
    offset = {'width': '100%', 'padding': 16};
    golfie['footerContainer'] = offset;
    golfie = option.bind(verify)(golfie);
    var _closure1_slot8 = golfie;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/guild_role_subscriptions/native/components/GuildRoleSubscriptionTierEditStep.tsx';
    tangon = report.bind(oscard)(tangon);
    michal = function(argFoo) { // Original name: GuildRoleSubscriptionTierEditStep
        _fun00003: for(var _fun00004_ip = 0; ; ) switch(_fun00004_ip) {
 0:
            tangon = argFoo;
            report = tangon.scrollable;
            michal = null;
            zuuluu = Object.create(michal);
            michal = 0;
            zuuluu['scrollable'] = michal;
            output = {};
            sizing = tangon;
            kiloes = zuuluu;
            offset = copyDataProperties(output, sizing, kiloes);
            michal = _closure1_slot8;
            tangon = undefined;
            foxtra = michal.bind(tangon)();
            zuuluu = _closure1_slot0;
            oscard = _closure1_slot2;
            michal = 11;
            michal = oscard[michal];
            zuuluu = zuuluu.bind(tangon)(michal);
            michal = zuuluu.useNavigation;
            yankee = michal.bind(zuuluu)();
            var _closure2_slot0 = yankee;
            verify = offset.nextStep;
            var _closure2_slot1 = verify;
            option = offset.onProceed;
            var _closure2_slot2 = option;
            oscard = _closure1_slot3;
            zuuluu = oscard.useCallback;
            michal = new Array(3);
            michal[0] = yankee;
            michal[1] = verify;
            michal[2] = option;
            entity = function() {
                _fun00005: for(var _fun00006_ip = 0; ; ) switch(_fun00006_ip) {
 0:
                    michal = _closure2_slot2;
                    zuuluu = null;
                    if(!(zuuluu == michal)) { _fun00006_ip = 41; continue _fun00005 }
 13:
                    michal = _closure2_slot1;
                    if(!(zuuluu != michal)) { _fun00006_ip = 51; continue _fun00005 }
 21:
                    tangon = _closure2_slot0;
                    zuuluu = tangon.push;
                    michal = _closure2_slot1;
                    michal = zuuluu.bind(tangon)(michal);
                    _fun00006_ip = 51; continue _fun00005;
 41:
                    michal = _closure2_slot2;
                    entity = undefined;
                    entity = michal.bind(entity)();
 51:
                    entity = undefined;
                    return entity;
                }
            };
            yankee = zuuluu.bind(oscard)(entity, michal);
            zuuluu = _closure1_slot7;
            michal = _closure1_slot4;
            entity = false;
            if(!(entity === report)) { _fun00004_ip = 256; continue _fun00003 }
 154:
            entity = {};
            report = foxtra.container;
            entity['style'] = report;
            option = _closure1_slot6;
            oscard = _closure1_slot9;
            report = {};
            output = report;
            sizing = offset;
            verify = copyDataProperties(output, sizing);
            oscard = option.bind(tangon)(oscard, report);
            report = new Array(3);
            report[0] = oscard;
            oscard = offset.children;
            report[1] = oscard;
            verify = _closure1_slot6;
            option = _closure1_slot10;
            oscard = {};
            output = oscard;
            sizing = offset;
            romeon = copyDataProperties(output, sizing);
            romeon = 'onProceed';
            oscard[romeon] = yankee;
            oscard = verify.bind(tangon)(option, oscard);
            report[2] = oscard;
            entity['children'] = report;
            _fun00004_ip = 407; continue _fun00003;
 256:
            report = {};
            oscard = foxtra.container;
            report['style'] = oscard;
            verify = _closure1_slot6;
            option = _closure1_slot9;
            oscard = {};
            output = oscard;
            sizing = offset;
            romeon = copyDataProperties(output, sizing);
            option = verify.bind(tangon)(option, oscard);
            oscard = new Array(3);
            oscard[0] = option;
            romeon = _closure1_slot6;
            verify = _closure1_slot5;
            option = {'keyboardShouldPersistTaps': 'handled', 'showsVerticalScrollIndicator': false, 'alwaysBounceVertical': false};
            backup = foxtra.scrollContainer;
            foxtra = new Array(1);
            foxtra[0] = backup;
            option['contentContainerStyle'] = foxtra;
            foxtra = offset.children;
            option['children'] = foxtra;
            option = romeon.bind(tangon)(verify, option);
            oscard[1] = option;
            verify = _closure1_slot6;
            option = _closure1_slot10;
            golfie = {};
            output = golfie;
            sizing = offset;
            offset = copyDataProperties(output, sizing);
            offset = 'onProceed';
            golfie[offset] = yankee;
            golfie = verify.bind(tangon)(option, golfie);
            oscard[2] = golfie;
            report['children'] = oscard;
            entity = report;
 407:
            entity = zuuluu.bind(tangon)(michal, entity);
            return entity;
        }
    };
    zuuluu['default'] = michal;
    return entity;
})();