// app/modules/guild_role_subscriptions/native/components/GuildRoleSubscriptionTierEditStep.tsx
export default (function(argFoo, argBar, argBaz, argCorge, _, argFred, argPlugh) {
    report = argBar;
    romeo = argBaz;
    zulu = argFred;
    oscar = argPlugh;
    var _closure1_slot0 = report;
    var _closure1_slot1 = romeo;
    var _closure1_slot2 = oscar;
    entity = function(argFoo) { // Original name: Header
        entity = argFoo;
        romeo = entity.description;
        backup = entity.title;
        entity = _closure1_slot8;
        tango = undefined;
        verify = entity.bind(tango)();
        zulu = _closure1_slot7;
        options = _closure1_slot0;
        offset = _closure1_slot2;
        entity = 5;
        entity = offset[entity];
        entity = options.bind(tango)(entity);
        mike = entity.SafeAreaPaddingView;
        entity = {};
        report = true;
        entity['top'] = report;
        report = verify.headerContainer;
        entity['style'] = report;
        foxtrot = _closure1_slot6;
        golf = 6;
        report = offset[golf];
        report = options.bind(tango)(report);
        yankee = report.Text;
        report = {'style': null, 'accessibilityRole': 'header', 'variant': 'heading-xl/extrabold', 'color': 'header-primary'};
        kilo = verify.title;
        report['style'] = kilo;
        report['children'] = backup;
        yankee = foxtrot.bind(tango)(yankee, report);
        report = new Array(3);
        report[0] = yankee;
        yankee = _closure1_slot6;
        golf = offset[golf];
        golf = options.bind(tango)(golf);
        options = golf.Text;
        golf = {'style': null, 'variant': 'text-sm/medium', 'color': 'header-secondary'};
        foxtrot = verify.subtitle;
        golf['style'] = foxtrot;
        golf['children'] = romeo;
        golf = yankee.bind(tango)(options, golf);
        report[1] = golf;
        options = _closure1_slot6;
        golf = _closure1_slot1;
        oscar = 7;
        oscar = offset[oscar];
        golf = golf.bind(tango)(oscar);
        oscar = {};
        verify = verify.separator;
        oscar['style'] = verify;
        oscar = options.bind(tango)(golf, oscar);
        report[2] = oscar;
        entity['children'] = report;
        entity = zulu.bind(tango)(mike, entity);
        return entity;
    };
    var _closure1_slot9 = entity;
    entity = function(argFoo) { // Original name: Footer
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            entity = argFoo;
            foxtrot = entity.canProceedToNextStep;
            mike = entity.nextStep;
            options = entity.onProceed;
            backup = entity.submitting;
            entity = _closure1_slot8;
            tango = undefined;
            oscar = entity.bind(tango)();
            entity = null;
            if(!(entity != mike)) { _fun00002_ip = 103; continue _fun00001 }
 46:
            golf = _closure1_slot0;
            verify = _closure1_slot2;
            entity = 8;
            mike = verify[entity];
            mike = golf.bind(tango)(mike);
            zulu = mike.intl;
            mike = zulu.string;
            entity = verify[entity];
            entity = golf.bind(tango)(entity);
            entity = entity.t;
            entity = entity.bm6P5+;
            verify = mike.bind(zulu)(entity);
            _fun00002_ip = 158; continue _fun00001;
 103:
            golf = _closure1_slot0;
            offset = _closure1_slot2;
            entity = 8;
            mike = offset[entity];
            mike = golf.bind(tango)(mike);
            zulu = mike.intl;
            mike = zulu.string;
            entity = offset[entity];
            entity = golf.bind(tango)(entity);
            entity = entity.t;
            entity = entity.4cAsqa;
            verify = mike.bind(zulu)(entity);
 158:
            yankee = _closure1_slot1;
            romeo = _closure1_slot2;
            entity = 9;
            entity = romeo[entity];
            entity = yankee.bind(tango)(entity);
            entity = entity.bind(tango)();
            offset = entity.bottom;
            zulu = _closure1_slot6;
            mike = _closure1_slot4;
            entity = {};
            golf = oscar.footerContainer;
            oscar = new Array(2);
            oscar[0] = golf;
            golf = {};
            golf['paddingBottom'] = offset;
            oscar[1] = golf;
            entity['style'] = oscar;
            golf = _closure1_slot6;
            offset = 10;
            report = romeo[offset];
            oscar = yankee.bind(tango)(report);
            report = {};
            report['loading'] = backup;
            foxtrot = !foxtrot;
            report['disabled'] = foxtrot;
            offset = romeo[offset];
            offset = yankee.bind(tango)(offset);
            offset = offset.Colors;
            offset = offset.BRAND;
            report['color'] = offset;
            report['text'] = verify;
            report['onPress'] = options;
            report = golf.bind(tango)(oscar, report);
            entity['children'] = report;
            entity = zulu.bind(tango)(mike, entity);
            return entity;
        }
    };
    var _closure1_slot10 = entity;
    entity = global;
    options = entity.Object;
    golf = options.defineProperty;
    tango = {};
    entity = true;
    tango['value'] = entity;
    entity = '__esModule';
    entity = golf.bind(options)(zulu, entity, tango);
    entity = 0;
    golf = oscar[entity];
    tango = argCorge;
    entity = undefined;
    tango = tango.bind(entity)(golf);
    var _closure1_slot3 = tango;
    offset = 1;
    tango = oscar[offset];
    tango = report.bind(entity)(tango);
    golf = tango.View;
    var _closure1_slot4 = golf;
    tango = tango.ScrollView;
    var _closure1_slot5 = tango;
    tango = 2;
    golf = oscar[tango];
    golf = report.bind(entity)(golf);
    golf = golf.jsx;
    var _closure1_slot6 = golf;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.jsxs;
    var _closure1_slot7 = tango;
    tango = 3;
    tango = oscar[tango];
    verify = report.bind(entity)(tango);
    options = verify.createStyles;
    golf = {};
    tango = {};
    yankee = 4;
    yankee = oscar[yankee];
    yankee = romeo.bind(entity)(yankee);
    yankee = yankee.colors;
    yankee = yankee.BACKGROUND_PRIMARY;
    tango['backgroundColor'] = yankee;
    yankee = '100%';
    tango['height'] = yankee;
    golf['container'] = tango;
    tango = {};
    tango['flexGrow'] = offset;
    golf['scrollContainer'] = tango;
    offset = 48;
    tango = {'position': 'relative', 'paddingTop': 48, 'paddingBottom': 8, 'paddingHorizontal': 16, 'alignItems': 'center'};
    golf['headerContainer'] = tango;
    tango = {};
    yankee = 6;
    tango['right'] = yankee;
    golf['closeButtonContainer'] = tango;
    tango = {};
    tango['height'] = offset;
    golf['stepContainer'] = tango;
    tango = 12;
    offset = {'marginTop': 12, 'textAlign': 'center'};
    golf['title'] = offset;
    offset = {'marginTop': 8, 'textAlign': 'center'};
    golf['subtitle'] = offset;
    offset = {};
    yankee = 24;
    offset['marginTop'] = yankee;
    golf['separator'] = offset;
    offset = {'width': '100%', 'padding': 16};
    golf['footerContainer'] = offset;
    golf = options.bind(verify)(golf);
    var _closure1_slot8 = golf;
    tango = oscar[tango];
    oscar = report.bind(entity)(tango);
    report = oscar.fileFinishedImporting;
    tango = 'modules/guild_role_subscriptions/native/components/GuildRoleSubscriptionTierEditStep.tsx';
    tango = report.bind(oscar)(tango);
    mike = function(argFoo) { // Original name: GuildRoleSubscriptionTierEditStep
        _fun00003: for(var _fun00004_ip = 0; ; ) switch(_fun00004_ip) {
 0:
            tango = argFoo;
            report = tango.scrollable;
            mike = null;
            zulu = Object.create(mike);
            mike = 0;
            zulu['scrollable'] = mike;
            output = {};
            sizing = tango;
            kilo = zulu;
            offset = copyDataProperties(output, sizing, kilo);
            mike = _closure1_slot8;
            tango = undefined;
            foxtrot = mike.bind(tango)();
            zulu = _closure1_slot0;
            oscar = _closure1_slot2;
            mike = 11;
            mike = oscar[mike];
            zulu = zulu.bind(tango)(mike);
            mike = zulu.useNavigation;
            yankee = mike.bind(zulu)();
            var _closure2_slot0 = yankee;
            verify = offset.nextStep;
            var _closure2_slot1 = verify;
            options = offset.onProceed;
            var _closure2_slot2 = options;
            oscar = _closure1_slot3;
            zulu = oscar.useCallback;
            mike = new Array(3);
            mike[0] = yankee;
            mike[1] = verify;
            mike[2] = options;
            entity = function() {
                _fun00005: for(var _fun00006_ip = 0; ; ) switch(_fun00006_ip) {
 0:
                    mike = _closure2_slot2;
                    zulu = null;
                    if(!(zulu == mike)) { _fun00006_ip = 41; continue _fun00005 }
 13:
                    mike = _closure2_slot1;
                    if(!(zulu != mike)) { _fun00006_ip = 51; continue _fun00005 }
 21:
                    tango = _closure2_slot0;
                    zulu = tango.push;
                    mike = _closure2_slot1;
                    mike = zulu.bind(tango)(mike);
                    _fun00006_ip = 51; continue _fun00005;
 41:
                    mike = _closure2_slot2;
                    entity = undefined;
                    entity = mike.bind(entity)();
 51:
                    entity = undefined;
                    return entity;
                }
            };
            yankee = zulu.bind(oscar)(entity, mike);
            zulu = _closure1_slot7;
            mike = _closure1_slot4;
            entity = false;
            if(!(entity === report)) { _fun00004_ip = 256; continue _fun00003 }
 154:
            entity = {};
            report = foxtrot.container;
            entity['style'] = report;
            options = _closure1_slot6;
            oscar = _closure1_slot9;
            report = {};
            output = report;
            sizing = offset;
            verify = copyDataProperties(output, sizing);
            oscar = options.bind(tango)(oscar, report);
            report = new Array(3);
            report[0] = oscar;
            oscar = offset.children;
            report[1] = oscar;
            verify = _closure1_slot6;
            options = _closure1_slot10;
            oscar = {};
            output = oscar;
            sizing = offset;
            romeo = copyDataProperties(output, sizing);
            romeo = 'onProceed';
            oscar[romeo] = yankee;
            oscar = verify.bind(tango)(options, oscar);
            report[2] = oscar;
            entity['children'] = report;
            _fun00004_ip = 407; continue _fun00003;
 256:
            report = {};
            oscar = foxtrot.container;
            report['style'] = oscar;
            verify = _closure1_slot6;
            options = _closure1_slot9;
            oscar = {};
            output = oscar;
            sizing = offset;
            romeo = copyDataProperties(output, sizing);
            options = verify.bind(tango)(options, oscar);
            oscar = new Array(3);
            oscar[0] = options;
            romeo = _closure1_slot6;
            verify = _closure1_slot5;
            options = {'keyboardShouldPersistTaps': 'handled', 'showsVerticalScrollIndicator': false, 'alwaysBounceVertical': false};
            backup = foxtrot.scrollContainer;
            foxtrot = new Array(1);
            foxtrot[0] = backup;
            options['contentContainerStyle'] = foxtrot;
            foxtrot = offset.children;
            options['children'] = foxtrot;
            options = romeo.bind(tango)(verify, options);
            oscar[1] = options;
            verify = _closure1_slot6;
            options = _closure1_slot10;
            golf = {};
            output = golf;
            sizing = offset;
            offset = copyDataProperties(output, sizing);
            offset = 'onProceed';
            golf[offset] = yankee;
            golf = verify.bind(tango)(options, golf);
            oscar[2] = golf;
            report['children'] = oscar;
            entity = report;
 407:
            entity = zulu.bind(tango)(mike, entity);
            return entity;
        }
    };
    zulu['default'] = mike;
    return entity;
})();