// app/modules/guild_role_subscriptions/native/components/GuildRoleSubscriptionTierDesignModal.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    report = argBar;
    yankee = argBaz;
    golfie = argCor;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    var _closure1_slot1 = yankee;
    var _closure1_slot2 = golfie;
    var _closure1_slot3 = oscard;
    entity = function(argFoo) { // Original name: MemberPreviews
        entity = argFoo;
        verify = entity.role;
        entity = _closure1_slot12;
        tangon = undefined;
        romeon = entity.bind(tangon)();
        golfie = _closure1_slot0;
        offset = _closure1_slot3;
        michal = 8;
        entity = offset[michal];
        foxtra = golfie.bind(tangon)(entity);
        yankee = foxtra.useToken;
        oscard = _closure1_slot1;
        entity = 7;
        zuuluu = offset[entity];
        zuuluu = oscard.bind(tangon)(zuuluu);
        zuuluu = zuuluu.colors;
        report = zuuluu.BACKGROUND_PRIMARY;
        zuuluu = offset[entity];
        zuuluu = oscard.bind(tangon)(zuuluu);
        zuuluu = zuuluu.themes;
        zuuluu = zuuluu.DARK;
        foxtra = yankee.bind(foxtra)(report, zuuluu);
        zuuluu = offset[michal];
        backup = golfie.bind(tangon)(zuuluu);
        yankee = backup.useToken;
        zuuluu = offset[entity];
        zuuluu = oscard.bind(tangon)(zuuluu);
        zuuluu = zuuluu.colors;
        report = zuuluu.BACKGROUND_PRIMARY;
        zuuluu = offset[entity];
        zuuluu = oscard.bind(tangon)(zuuluu);
        zuuluu = zuuluu.themes;
        zuuluu = zuuluu.LIGHT;
        echoed = yankee.bind(backup)(report, zuuluu);
        zuuluu = offset[michal];
        backup = golfie.bind(tangon)(zuuluu);
        yankee = backup.useToken;
        zuuluu = offset[entity];
        zuuluu = oscard.bind(tangon)(zuuluu);
        zuuluu = zuuluu.colors;
        report = zuuluu.TEXT_NORMAL;
        zuuluu = offset[entity];
        zuuluu = oscard.bind(tangon)(zuuluu);
        zuuluu = zuuluu.themes;
        zuuluu = zuuluu.DARK;
        yankee = yankee.bind(backup)(report, zuuluu);
        michal = offset[michal];
        report = golfie.bind(tangon)(michal);
        zuuluu = report.useToken;
        michal = offset[entity];
        michal = oscard.bind(tangon)(michal);
        michal = michal.colors;
        michal = michal.TEXT_NORMAL;
        entity = offset[entity];
        entity = oscard.bind(tangon)(entity);
        entity = entity.themes;
        entity = entity.LIGHT;
        output = zuuluu.bind(report)(michal, entity);
        zuuluu = _closure1_slot10;
        michal = _closure1_slot6;
        entity = {};
        report = romeon.memberPreviews;
        entity['style'] = report;
        kiloes = _closure1_slot9;
        oscard = 9;
        report = offset[oscard];
        report = golfie.bind(tangon)(report);
        backup = report.GuildRoleSubscriptionMemberPreview;
        report = {};
        result = romeon.member;
        sizing = new Array(3);
        sizing[0] = result;
        result = romeon.memberLight;
        sizing[1] = result;
        result = {};
        result['backgroundColor'] = echoed;
        sizing[2] = result;
        report['style'] = sizing;
        sizing = {};
        sizing['color'] = output;
        report['textStyle'] = sizing;
        report['role'] = verify;
        backup = kiloes.bind(tangon)(backup, report);
        report = new Array(2);
        report[0] = backup;
        option = _closure1_slot9;
        oscard = offset[oscard];
        oscard = golfie.bind(tangon)(oscard);
        golfie = oscard.GuildRoleSubscriptionMemberPreview;
        oscard = {};
        backup = romeon.member;
        offset = new Array(3);
        offset[0] = backup;
        romeon = romeon.memberDark;
        offset[1] = romeon;
        romeon = {};
        romeon['backgroundColor'] = foxtra;
        offset[2] = romeon;
        oscard['style'] = offset;
        offset = {};
        offset['color'] = yankee;
        oscard['textStyle'] = offset;
        oscard['role'] = verify;
        oscard = option.bind(tangon)(golfie, oscard);
        report[1] = oscard;
        entity['children'] = report;
        entity = zuuluu.bind(tangon)(michal, entity);
        return entity;
    };
    var _closure1_slot13 = entity;
    entity = function() { // Original name: Content
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            michal = _closure1_slot1;
            golfie = _closure1_slot3;
            entity = 10;
            entity = golfie[entity];
            tangon = undefined;
            entity = michal.bind(tangon)(entity);
            sizing = entity.bind(tangon)();
            michal = _closure1_slot0;
            entity = 11;
            entity = golfie[entity];
            michal = michal.bind(tangon)(entity);
            entity = michal.useEditStateContext;
            entity = entity.bind(michal)();
            report = entity.editStateId;
            zuuluu = entity.guildId;
            michal = _closure1_slot2;
            entity = 12;
            option = golfie[entity];
            verify = michal.bind(tangon)(option);
            option = verify.useRoleColor;
            verify = option.bind(verify)(report, zuuluu);
            option = _closure1_slot4;
            foxtra = 2;
            option = option.bind(tangon)(verify, foxtra);
            verify = 0;
            yankee = option[verify];
            verify = 1;
            offset = option[verify];
            option = golfie[entity];
            romeon = michal.bind(tangon)(option);
            option = romeon.useRoleIcon;
            romeon = option.bind(romeon)(report, zuuluu);
            option = _closure1_slot4;
            option = option.bind(tangon)(romeon, foxtra);
            option = option[verify];
            var _closure2_slot0 = option;
            entity = golfie[entity];
            michal = michal.bind(tangon)(entity);
            entity = michal.useRole;
            foxtra = entity.bind(michal)(report, zuuluu);
            var _closure2_slot1 = foxtra;
            report = _closure1_slot5;
            zuuluu = report.useMemo;
            michal = new Array(1);
            michal[0] = foxtra;
            entity = function() {
                _fun00003: for(var _fun00004_ip = 0; ; ) switch(_fun00004_ip) {
 0:
                    zuuluu = _closure1_slot0;
                    michal = _closure1_slot3;
                    entity = 13;
                    michal = michal[entity];
                    entity = undefined;
                    zuuluu = zuuluu.bind(entity)(michal);
                    michal = zuuluu.getRoleIconData;
                    entity = _closure2_slot1;
                    entity = michal.bind(zuuluu)(entity);
                    michal = null;
                    if(!(michal == entity)) { _fun00004_ip = 51; continue _fun00003 }
 49:
                    entity = {};
 51:
                    return entity;
                }
            };
            entity = zuuluu.bind(report)(entity, michal);
            michal = entity.customIconSrc;
            entity = null;
            entity = entity != michal;
            source = undefined;
            if(!entity) { _fun00002_ip = 243; continue _fun00001 }
 233:
            entity = {};
            entity['uri'] = michal;
            source = entity;
 243:
            result = _closure1_slot0;
            romeon = _closure1_slot3;
            entity = 14;
            entity = romeon[entity];
            michal = result.bind(tangon)(entity);
            entity = michal.useRoleSubscriptionSettingsDisabled;
            verify = entity.bind(michal)();
            zuuluu = _closure1_slot10;
            michal = _closure1_slot11;
            entity = {};
            option = _closure1_slot9;
            golfie = _closure1_slot13;
            report = {};
            report['role'] = foxtra;
            golfie = option.bind(tangon)(golfie, report);
            report = new Array(5);
            report[0] = golfie;
            output = _closure1_slot9;
            golfie = _closure1_slot1;
            option = 15;
            foxtra = romeon[option];
            backup = golfie.bind(tangon)(foxtra);
            foxtra = {};
            kiloes = sizing.header;
            foxtra['style'] = kiloes;
            kiloes = 16;
            update = romeon[kiloes];
            update = result.bind(tangon)(update);
            vacuum = update.intl;
            ctrled = vacuum.string;
            update = romeon[kiloes];
            update = result.bind(tangon)(update);
            update = update.t;
            update = update.sEr1zs;
            update = ctrled.bind(vacuum)(update);
            foxtra['children'] = update;
            foxtra = output.bind(tangon)(backup, foxtra);
            report[1] = foxtra;
            output = _closure1_slot9;
            update = 17;
            foxtra = romeon[update];
            backup = golfie.bind(tangon)(foxtra);
            foxtra = {};
            ctrled = romeon[kiloes];
            ctrled = result.bind(tangon)(ctrled);
            sequen = ctrled.intl;
            vacuum = sequen.string;
            ctrled = romeon[kiloes];
            ctrled = result.bind(tangon)(ctrled);
            ctrled = ctrled.t;
            ctrled = ctrled.Glqj9v;
            ctrled = vacuum.bind(sequen)(ctrled);
            foxtra['description'] = ctrled;
            foxtra['image'] = source;
            source = _closure1_slot8;
            foxtra['imageUploadSize'] = source;
            update = romeon[update];
            update = result.bind(tangon)(update);
            update = update.PreviewShape;
            update = update.SQUIRCLE;
            foxtra['previewShape'] = update;
            update = 'cover';
            foxtra['previewResizeMode'] = update;
            echoed = function(argFoo) { // Original name: setImage
                entity = argFoo;
                entity = entity.uri;
                zuuluu = _closure2_slot0;
                michal = {};
                michal['icon'] = entity;
                entity = undefined;
                michal['unicodeEmoji'] = entity;
                entity = zuuluu.bind(entity)(michal);
                return entity;
            };
            foxtra['setImage'] = echoed;
            foxtra['disabled'] = verify;
            foxtra = output.bind(tangon)(backup, foxtra);
            report[2] = foxtra;
            backup = _closure1_slot9;
            option = romeon[option];
            foxtra = golfie.bind(tangon)(option);
            option = {};
            sizing = sizing.header;
            option['style'] = sizing;
            sizing = romeon[kiloes];
            sizing = result.bind(tangon)(sizing);
            output = sizing.intl;
            sizing = output.string;
            kiloes = romeon[kiloes];
            kiloes = result.bind(tangon)(kiloes);
            kiloes = kiloes.t;
            kiloes = kiloes.W7hH+/;
            kiloes = sizing.bind(output)(kiloes);
            option['children'] = kiloes;
            option = backup.bind(tangon)(foxtra, option);
            report[3] = option;
            option = _closure1_slot9;
            oscard = 18;
            oscard = romeon[oscard];
            golfie = golfie.bind(tangon)(oscard);
            oscard = {};
            oscard['color'] = yankee;
            oscard['onChange'] = offset;
            oscard['disabled'] = verify;
            oscard = option.bind(tangon)(golfie, oscard);
            report[4] = oscard;
            entity['children'] = report;
            entity = zuuluu.bind(tangon)(michal, entity);
            return entity;
        }
    };
    var _closure1_slot14 = entity;
    entity = global;
    verify = entity.Object;
    option = verify.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = option.bind(verify)(zuuluu, entity, tangon);
    entity = 0;
    tangon = oscard[entity];
    entity = undefined;
    tangon = yankee.bind(entity)(tangon);
    var _closure1_slot4 = tangon;
    tangon = 1;
    tangon = oscard[tangon];
    tangon = golfie.bind(entity)(tangon);
    var _closure1_slot5 = tangon;
    tangon = 2;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.View;
    var _closure1_slot6 = tangon;
    tangon = 3;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.GuildRoleSubscriptionsTierScenes;
    var _closure1_slot7 = tangon;
    tangon = 4;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.UPLOAD_SMALL_SIZE;
    var _closure1_slot8 = tangon;
    tangon = 5;
    golfie = oscard[tangon];
    golfie = report.bind(entity)(golfie);
    golfie = golfie.jsx;
    var _closure1_slot9 = golfie;
    golfie = oscard[tangon];
    golfie = report.bind(entity)(golfie);
    golfie = golfie.jsxs;
    var _closure1_slot10 = golfie;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.Fragment;
    var _closure1_slot11 = tangon;
    tangon = 6;
    tangon = oscard[tangon];
    option = report.bind(entity)(tangon);
    golfie = option.createStyles;
    tangon = {};
    verify = {'paddingHorizontal': 16, 'paddingTop': 26};
    tangon['memberPreviews'] = verify;
    verify = {'padding': 16, 'borderRadius': null, 'borderWidth': 0, 'borderLeftWidth': 1, 'borderRightWidth': 1};
    offset = 7;
    romeon = oscard[offset];
    romeon = yankee.bind(entity)(romeon);
    romeon = romeon.radii;
    romeon = romeon.none;
    verify['borderRadius'] = romeon;
    offset = oscard[offset];
    offset = yankee.bind(entity)(offset);
    offset = offset.colors;
    offset = offset.BORDER_STRONG;
    verify['borderColor'] = offset;
    tangon['member'] = verify;
    verify = {'borderTopLeftRadius': 8, 'borderTopRightRadius': 8, 'borderTopWidth': 1};
    tangon['memberLight'] = verify;
    verify = {'borderBottomLeftRadius': 8, 'borderBottomRightRadius': 8, 'borderBottomWidth': 1};
    tangon['memberDark'] = verify;
    tangon = golfie.bind(option)(tangon);
    var _closure1_slot12 = tangon;
    tangon = 20;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/guild_role_subscriptions/native/components/GuildRoleSubscriptionTierDesignModal.tsx';
    tangon = report.bind(oscard)(tangon);
    tangon = function(argFoo) { // Original name: GuildRoleSubscriptionTierDesignModal
        tangon = _closure1_slot9;
        michal = _closure1_slot1;
        offset = _closure1_slot3;
        entity = 19;
        entity = offset[entity];
        zuuluu = undefined;
        michal = michal.bind(zuuluu)(entity);
        entity = {};
        verify = _closure1_slot0;
        oscard = 16;
        golfie = offset[oscard];
        golfie = verify.bind(zuuluu)(golfie);
        yankee = golfie.intl;
        option = yankee.string;
        golfie = offset[oscard];
        golfie = verify.bind(zuuluu)(golfie);
        golfie = golfie.t;
        golfie = golfie.AbcgT0;
        golfie = option.bind(yankee)(golfie);
        entity['title'] = golfie;
        golfie = offset[oscard];
        golfie = verify.bind(zuuluu)(golfie);
        option = golfie.intl;
        golfie = option.string;
        oscard = offset[oscard];
        oscard = verify.bind(zuuluu)(oscard);
        oscard = oscard.t;
        oscard = oscard.YAUjGh;
        oscard = golfie.bind(option)(oscard);
        entity['description'] = oscard;
        oscard = true;
        entity['canProceedToNextStep'] = oscard;
        oscard = _closure1_slot7;
        oscard = oscard.CONFIRMATION;
        entity['nextStep'] = oscard;
        romeon = argFoo;
        foxtra = entity;
        oscard = copyDataProperties(foxtra, romeon);
        golfie = _closure1_slot9;
        oscard = _closure1_slot14;
        report = {};
        oscard = golfie.bind(zuuluu)(oscard, report);
        report = 'children';
        entity[report] = oscard;
        entity = tangon.bind(zuuluu)(michal, entity);
        return entity;
    };
    zuuluu['default'] = tangon;
    michal = function() { // Original name: GuildRoleSubscriptionTierDesignTab
        tangon = _closure1_slot9;
        zuuluu = _closure1_slot14;
        michal = undefined;
        entity = {};
        entity = tangon.bind(michal)(zuuluu, entity);
        return entity;
    };
    zuuluu['GuildRoleSubscriptionTierDesignTab'] = michal;
    return entity;
})();