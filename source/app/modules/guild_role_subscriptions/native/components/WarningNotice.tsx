// app/modules/guild_role_subscriptions/native/components/WarningNotice.tsx
export default (function(argFoo, argBar, argBaz, argCorge, _, argFred, argPlugh) {
    report = argBar;
    yankee = argBaz;
    zulu = argFred;
    oscar = argPlugh;
    var _closure1_slot0 = report;
    var _closure1_slot1 = yankee;
    var _closure1_slot2 = oscar;
    entity = global;
    options = entity.Object;
    golf = options.defineProperty;
    tango = {};
    entity = true;
    tango['value'] = entity;
    entity = '__esModule';
    entity = golf.bind(options)(zulu, entity, tango);
    entity = 0;
    golf = oscar[entity];
    tango = argCorge;
    entity = undefined;
    tango = tango.bind(entity)(golf);
    tango = 1;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.View;
    var _closure1_slot3 = tango;
    tango = 2;
    golf = oscar[tango];
    golf = report.bind(entity)(golf);
    golf = golf.jsx;
    var _closure1_slot4 = golf;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.jsxs;
    var _closure1_slot5 = tango;
    tango = 3;
    tango = oscar[tango];
    options = report.bind(entity)(tango);
    golf = options.createStyles;
    tango = {};
    verify = {'borderRadius': null, 'borderWidth': 1, 'padding': 12};
    offset = 4;
    romeo = oscar[offset];
    romeo = yankee.bind(entity)(romeo);
    romeo = romeo.radii;
    romeo = romeo.xs;
    verify['borderRadius'] = romeo;
    tango['container'] = verify;
    verify = {'flexDirection': 'row', 'alignItems': 'center'};
    tango['horizontalContainer'] = verify;
    verify = {'flex': 1, 'marginStart': 10, 'textAlignVertical': 'center'};
    tango['message'] = verify;
    verify = {'width': '100%', 'marginTop': 24, 'alignSelf': 'center'};
    romeo = oscar[offset];
    romeo = yankee.bind(entity)(romeo);
    romeo = romeo.radii;
    romeo = romeo.xl;
    verify['borderRadius'] = romeo;
    romeo = oscar[offset];
    romeo = yankee.bind(entity)(romeo);
    romeo = romeo.colors;
    romeo = romeo.INTERACTIVE_ACTIVE;
    verify['backgroundColor'] = romeo;
    tango['actionButton'] = verify;
    verify = {};
    romeo = oscar[offset];
    romeo = yankee.bind(entity)(romeo);
    romeo = romeo.colors;
    romeo = romeo.BACKGROUND_FLOATING;
    verify['color'] = romeo;
    tango['actionButtonText'] = verify;
    verify = {};
    romeo = oscar[offset];
    romeo = yankee.bind(entity)(romeo);
    romeo = romeo.colors;
    romeo = romeo.INFO_WARNING_BACKGROUND;
    verify['backgroundColor'] = romeo;
    romeo = oscar[offset];
    romeo = yankee.bind(entity)(romeo);
    romeo = romeo.colors;
    romeo = romeo.STATUS_WARNING;
    verify['borderColor'] = romeo;
    tango['containerYellow'] = verify;
    verify = {};
    offset = oscar[offset];
    offset = yankee.bind(entity)(offset);
    offset = offset.colors;
    offset = offset.INFO_WARNING_TEXT;
    verify['color'] = offset;
    tango['textYellow'] = verify;
    verify = {'alignSelf': 'flex-start', 'width': 20, 'height': 20};
    tango['alertIcon'] = verify;
    tango = golf.bind(options)(tango);
    var _closure1_slot6 = tango;
    tango = 9;
    tango = oscar[tango];
    oscar = report.bind(entity)(tango);
    report = oscar.fileFinishedImporting;
    tango = 'modules/guild_role_subscriptions/native/components/WarningNotice.tsx';
    tango = report.bind(oscar)(tango);
    mike = function(argFoo) { // Original name: WarningNotice
        _fun126741: for(var _fun126741_ip = 0; ; ) switch(_fun126741_ip) {
 0:
            entity = argFoo;
            oscar = entity.style;
            sizing = entity.notice;
            offset = entity.ctaLabel;
            foxtrot = entity.onClick;
            yankee = entity.submitting;
            romeo = entity.disabled;
            entity = _closure1_slot6;
            tango = undefined;
            backup = entity.bind(tango)();
            zulu = _closure1_slot5;
            mike = _closure1_slot3;
            entity = {};
            report = new Array(3);
            report[0] = oscar;
            oscar = backup.container;
            report[1] = oscar;
            oscar = backup.containerYellow;
            report[2] = oscar;
            entity['style'] = report;
            report = {};
            oscar = backup.horizontalContainer;
            report['style'] = oscar;
            kilo = _closure1_slot4;
            result = _closure1_slot1;
            output = _closure1_slot2;
            oscar = 5;
            oscar = output[oscar];
            options = result.bind(tango)(oscar);
            oscar = {};
            verify = backup.alertIcon;
            oscar['style'] = verify;
            verify = 6;
            verify = output[verify];
            verify = result.bind(tango)(verify);
            oscar['source'] = verify;
            options = kilo.bind(tango)(options, oscar);
            oscar = new Array(2);
            oscar[0] = options;
            verify = _closure1_slot0;
            options = 7;
            options = output[options];
            options = verify.bind(tango)(options);
            verify = options.Text;
            options = {'style': null, 'variant': 'text-sm/medium', 'color': 'interactive-active'};
            result = backup.message;
            output = new Array(2);
            output[0] = result;
            result = backup.textYellow;
            output[1] = result;
            options['style'] = output;
            options['children'] = sizing;
            options = kilo.bind(tango)(verify, options);
            oscar[1] = options;
            report['children'] = oscar;
            oscar = zulu.bind(tango)(mike, report);
            report = new Array(2);
            report[0] = oscar;
            options = null;
            oscar = options != foxtrot;
            if(!oscar) { _fun126741_ip = 278; continue _fun126741 }
 274:
            oscar = options != offset;
 278:
            if(!oscar) { _fun126741_ip = 351; continue _fun126741 }
 281:
            verify = _closure1_slot4;
            options = _closure1_slot1;
            kilo = _closure1_slot2;
            golf = 8;
            golf = kilo[golf];
            options = options.bind(tango)(golf);
            golf = {};
            kilo = backup.actionButtonText;
            golf['textStyle'] = kilo;
            backup = backup.actionButton;
            golf['style'] = backup;
            golf['onPress'] = foxtrot;
            golf['disabled'] = romeo;
            golf['loading'] = yankee;
            golf['text'] = offset;
            oscar = verify.bind(tango)(options, golf);
 351:
            report[1] = oscar;
            entity['children'] = report;
            entity = zulu.bind(tango)(mike, entity);
            return entity;
        }
    };
    zulu['default'] = mike;
    return entity;
})();