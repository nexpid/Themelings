// app/modules/guild_role_subscriptions/native/components/WarningNotice.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    report = argBar;
    yankee = argBaz;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    var _closure1_slot1 = yankee;
    var _closure1_slot2 = oscard;
    entity = global;
    option = entity.Object;
    golfie = option.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(option)(zuuluu, entity, tangon);
    entity = 0;
    golfie = oscard[entity];
    tangon = argCor;
    entity = undefined;
    tangon = tangon.bind(entity)(golfie);
    tangon = 1;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.View;
    var _closure1_slot3 = tangon;
    tangon = 2;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    golfie = tangon.jsx;
    var _closure1_slot4 = golfie;
    tangon = tangon.jsxs;
    var _closure1_slot5 = tangon;
    tangon = 3;
    tangon = oscard[tangon];
    option = report.bind(entity)(tangon);
    golfie = option.createStyles;
    tangon = {};
    verify = {'borderRadius': null, 'borderWidth': 1, 'padding': 12};
    offset = 4;
    romeon = oscard[offset];
    romeon = yankee.bind(entity)(romeon);
    romeon = romeon.radii;
    romeon = romeon.xs;
    verify['borderRadius'] = romeon;
    tangon['container'] = verify;
    verify = {'flexDirection': 'row', 'alignItems': 'center'};
    tangon['horizontalContainer'] = verify;
    verify = {'flex': 1, 'marginStart': 10, 'textAlignVertical': 'center'};
    tangon['message'] = verify;
    verify = {'width': '100%', 'marginTop': 24, 'alignSelf': 'center'};
    romeon = oscard[offset];
    romeon = yankee.bind(entity)(romeon);
    romeon = romeon.radii;
    romeon = romeon.xl;
    verify['borderRadius'] = romeon;
    romeon = oscard[offset];
    romeon = yankee.bind(entity)(romeon);
    romeon = romeon.colors;
    romeon = romeon.INTERACTIVE_ACTIVE;
    verify['backgroundColor'] = romeon;
    tangon['actionButton'] = verify;
    verify = {};
    romeon = oscard[offset];
    romeon = yankee.bind(entity)(romeon);
    romeon = romeon.colors;
    romeon = romeon.BACKGROUND_FLOATING;
    verify['color'] = romeon;
    tangon['actionButtonText'] = verify;
    verify = {};
    romeon = oscard[offset];
    romeon = yankee.bind(entity)(romeon);
    romeon = romeon.colors;
    romeon = romeon.INFO_WARNING_BACKGROUND;
    verify['backgroundColor'] = romeon;
    romeon = oscard[offset];
    romeon = yankee.bind(entity)(romeon);
    romeon = romeon.colors;
    romeon = romeon.STATUS_WARNING;
    verify['borderColor'] = romeon;
    tangon['containerYellow'] = verify;
    verify = {};
    offset = oscard[offset];
    offset = yankee.bind(entity)(offset);
    offset = offset.colors;
    offset = offset.INFO_WARNING_TEXT;
    verify['color'] = offset;
    tangon['textYellow'] = verify;
    verify = {'alignSelf': 'flex-start', 'width': 20, 'height': 20};
    tangon['alertIcon'] = verify;
    tangon = golfie.bind(option)(tangon);
    var _closure1_slot6 = tangon;
    tangon = 9;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/guild_role_subscriptions/native/components/WarningNotice.tsx';
    tangon = report.bind(oscard)(tangon);
    michal = function(argFoo) { // Original name: WarningNotice
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            entity = argFoo;
            oscard = entity.style;
            sizing = entity.notice;
            offset = entity.ctaLabel;
            foxtra = entity.onClick;
            yankee = entity.submitting;
            romeon = entity.disabled;
            entity = _closure1_slot6;
            tangon = undefined;
            backup = entity.bind(tangon)();
            zuuluu = _closure1_slot5;
            michal = _closure1_slot3;
            entity = {};
            report = new Array(3);
            report[0] = oscard;
            oscard = backup.container;
            report[1] = oscard;
            oscard = backup.containerYellow;
            report[2] = oscard;
            entity['style'] = report;
            report = {};
            oscard = backup.horizontalContainer;
            report['style'] = oscard;
            kiloes = _closure1_slot4;
            result = _closure1_slot1;
            output = _closure1_slot2;
            oscard = 5;
            oscard = output[oscard];
            option = result.bind(tangon)(oscard);
            oscard = {};
            verify = backup.alertIcon;
            oscard['style'] = verify;
            verify = 6;
            verify = output[verify];
            verify = result.bind(tangon)(verify);
            oscard['source'] = verify;
            option = kiloes.bind(tangon)(option, oscard);
            oscard = new Array(2);
            oscard[0] = option;
            verify = _closure1_slot0;
            option = 7;
            option = output[option];
            option = verify.bind(tangon)(option);
            verify = option.Text;
            option = {'style': null, 'variant': 'text-sm/medium', 'color': 'interactive-active'};
            result = backup.message;
            output = new Array(2);
            output[0] = result;
            result = backup.textYellow;
            output[1] = result;
            option['style'] = output;
            option['children'] = sizing;
            option = kiloes.bind(tangon)(verify, option);
            oscard[1] = option;
            report['children'] = oscard;
            oscard = zuuluu.bind(tangon)(michal, report);
            report = new Array(2);
            report[0] = oscard;
            option = null;
            oscard = option != foxtra;
            if(!oscard) { _fun00002_ip = 278; continue _fun00001 }
 274:
            oscard = option != offset;
 278:
            if(!oscard) { _fun00002_ip = 351; continue _fun00001 }
 281:
            verify = _closure1_slot4;
            option = _closure1_slot1;
            kiloes = _closure1_slot2;
            golfie = 8;
            golfie = kiloes[golfie];
            option = option.bind(tangon)(golfie);
            golfie = {};
            kiloes = backup.actionButtonText;
            golfie['textStyle'] = kiloes;
            backup = backup.actionButton;
            golfie['style'] = backup;
            golfie['onPress'] = foxtra;
            golfie['disabled'] = romeon;
            golfie['loading'] = yankee;
            golfie['text'] = offset;
            oscard = verify.bind(tangon)(option, golfie);
 351:
            report[1] = oscard;
            entity['children'] = report;
            entity = zuuluu.bind(tangon)(michal, entity);
            return entity;
        }
    };
    zuuluu['default'] = michal;
    return entity;
})();