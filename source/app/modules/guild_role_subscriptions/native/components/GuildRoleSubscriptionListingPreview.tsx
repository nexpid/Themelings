// app/modules/guild_role_subscriptions/native/components/GuildRoleSubscriptionListingPreview.tsx
export default (function(argFoo, argBar, argBaz, argCorge, _, argFred, argPlugh) {
    oscar = argBar;
    kilo = argBaz;
    options = argCorge;
    zulu = argFred;
    golf = argPlugh;
    var _closure1_slot0 = oscar;
    var _closure1_slot1 = kilo;
    var _closure1_slot2 = options;
    var _closure1_slot3 = golf;
    entity = function(argFoo) { // Original name: PriceTier
        zulu = argFoo;
        output = zulu.price;
        foxtrot = zulu.currency;
        entity = null;
        mike = Object.create(entity);
        entity = 0;
        mike['price'] = entity;
        mike['currency'] = entity;
        update = {};
        echo = zulu;
        result = mike;
        kilo = copyDataProperties(update, echo, result);
        entity = _closure1_slot9;
        tango = undefined;
        verify = entity.bind(tango)();
        zulu = _closure1_slot7;
        mike = _closure1_slot5;
        entity = {};
        report = verify.priceGroup;
        entity['style'] = report;
        offset = _closure1_slot6;
        backup = _closure1_slot0;
        sizing = _closure1_slot3;
        oscar = 6;
        report = sizing[oscar];
        report = backup.bind(tango)(report);
        options = report.Text;
        report = {'variant': 'heading-xl/extrabold', 'color': 'header-primary'};
        yankee = 7;
        yankee = sizing[yankee];
        romeo = backup.bind(tango)(yankee);
        yankee = romeo.formatPrice;
        yankee = yankee.bind(romeo)(output, foxtrot);
        report['children'] = yankee;
        options = offset.bind(tango)(options, report);
        report = new Array(2);
        report[0] = options;
        options = _closure1_slot6;
        oscar = sizing[oscar];
        oscar = backup.bind(tango)(oscar);
        golf = oscar.Text;
        oscar = {'style': null, 'variant': 'eyebrow', 'color': 'header-secondary'};
        verify = verify.priceInterval;
        oscar['style'] = verify;
        verify = 8;
        offset = sizing[verify];
        offset = backup.bind(tango)(offset);
        romeo = offset.intl;
        yankee = romeo.format;
        verify = sizing[verify];
        verify = backup.bind(tango)(verify);
        verify = verify.t;
        offset = verify.isLGyc;
        verify = {};
        foxtrot = 9;
        foxtrot = sizing[foxtrot];
        backup = backup.bind(tango)(foxtrot);
        foxtrot = backup.formatPlanInterval;
        foxtrot = foxtrot.bind(backup)(kilo);
        verify['period'] = foxtrot;
        verify = yankee.bind(romeo)(offset, verify);
        oscar['children'] = verify;
        oscar = options.bind(tango)(golf, oscar);
        report[1] = oscar;
        entity['children'] = report;
        entity = zulu.bind(tango)(mike, entity);
        return entity;
    };
    var _closure1_slot11 = entity;
    entity = function(argFoo) { // Original name: Header
        _fun127267: for(var _fun127267_ip = 0; ; ) switch(_fun127267_ip) {
 0:
            entity = argFoo;
            oscar = entity.listingId;
            backup = entity.onSubscribePress;
            entity = _closure1_slot9;
            tango = undefined;
            foxtrot = entity.bind(tango)();
            zulu = _closure1_slot2;
            kilo = _closure1_slot3;
            entity = 10;
            mike = kilo[entity];
            report = zulu.bind(tango)(mike);
            mike = report.useSubscriptionPlan;
            golf = mike.bind(report)(oscar);
            mike = _closure1_slot4;
            report = 1;
            golf = mike.bind(tango)(golf, report);
            mike = 0;
            romeo = golf[mike];
            golf = kilo[entity];
            verify = zulu.bind(tango)(golf);
            golf = verify.useName;
            verify = golf.bind(verify)(oscar);
            golf = _closure1_slot4;
            golf = golf.bind(tango)(verify, report);
            yankee = golf[mike];
            golf = kilo[entity];
            verify = zulu.bind(tango)(golf);
            golf = verify.useImage;
            verify = golf.bind(verify)(oscar);
            golf = _closure1_slot4;
            golf = golf.bind(tango)(verify, report);
            sizing = golf[mike];
            entity = kilo[entity];
            zulu = zulu.bind(tango)(entity);
            entity = zulu.useDescription;
            zulu = entity.bind(zulu)(oscar);
            entity = _closure1_slot4;
            entity = entity.bind(tango)(zulu, report);
            verify = entity[mike];
            zulu = _closure1_slot7;
            mike = _closure1_slot5;
            entity = {};
            report = foxtrot.header;
            entity['style'] = report;
            golf = _closure1_slot6;
            oscar = _closure1_slot0;
            offset = 6;
            report = kilo[offset];
            report = oscar.bind(tango)(report);
            oscar = report.Text;
            report = {'variant': 'heading-md/semibold', 'color': 'interactive-active'};
            report['children'] = yankee;
            oscar = golf.bind(tango)(oscar, report);
            report = new Array(5);
            report[0] = oscar;
            yankee = _closure1_slot6;
            golf = _closure1_slot1;
            oscar = 11;
            oscar = kilo[oscar];
            golf = golf.bind(tango)(oscar);
            oscar = {};
            foxtrot = foxtrot.image;
            oscar['style'] = foxtrot;
            foxtrot = {};
            kilo = null;
            output = kilo != sizing;
            kilo = '';
            if(!output) { _fun127267_ip = 308; continue _fun127267 }
 305:
            kilo = sizing;
 308:
            foxtrot['uri'] = kilo;
            oscar['source'] = foxtrot;
            oscar = yankee.bind(tango)(golf, oscar);
            report[1] = oscar;
            yankee = _closure1_slot6;
            golf = _closure1_slot11;
            oscar = {};
            echo = oscar;
            result = romeo;
            romeo = copyDataProperties(echo, result);
            oscar = yankee.bind(tango)(golf, oscar);
            report[2] = oscar;
            foxtrot = _closure1_slot6;
            golf = _closure1_slot0;
            oscar = _closure1_slot3;
            yankee = 12;
            yankee = oscar[yankee];
            yankee = golf.bind(tango)(yankee);
            romeo = yankee.GuildPremiumRoleSubscribeButton;
            yankee = {};
            yankee['onPress'] = backup;
            yankee = foxtrot.bind(tango)(romeo, yankee);
            report[3] = yankee;
            options = _closure1_slot6;
            oscar = oscar[offset];
            oscar = golf.bind(tango)(oscar);
            golf = oscar.Text;
            oscar = {};
            offset = 'text-sm/medium';
            oscar['variant'] = offset;
            oscar['children'] = verify;
            oscar = options.bind(tango)(golf, oscar);
            report[4] = oscar;
            entity['children'] = report;
            entity = zulu.bind(tango)(mike, entity);
            return entity;
        }
    };
    var _closure1_slot12 = entity;
    entity = function(argFoo) { // Original name: Content
        _fun127268: for(var _fun127268_ip = 0; ; ) switch(_fun127268_ip) {
 0:
            entity = argFoo;
            report = entity.children;
            offset = entity.noBackground;
            golf = entity.style;
            mike = _closure1_slot9;
            tango = undefined;
            verify = mike.bind(tango)();
            zulu = _closure1_slot6;
            mike = _closure1_slot5;
            entity = {};
            options = verify.content;
            oscar = new Array(3);
            oscar[0] = options;
            options = true;
            options = options !== offset;
            if(!options) { _fun127268_ip = 70; continue _fun127268 }
 64:
            options = verify.contentWithBackground;
 70:
            oscar[1] = options;
            oscar[2] = golf;
            entity['style'] = oscar;
            entity['children'] = report;
            entity = zulu.bind(tango)(mike, entity);
            return entity;
        }
    };
    var _closure1_slot13 = entity;
    entity = function(argFoo) { // Original name: SectionLabel
        zulu = argFoo;
        options = zulu.label;
        entity = null;
        mike = Object.create(entity);
        entity = 0;
        mike['label'] = entity;
        foxtrot = {};
        romeo = zulu;
        yankee = mike;
        romeo = copyDataProperties(foxtrot, romeo, yankee);
        entity = _closure1_slot9;
        tango = undefined;
        verify = entity.bind(tango)();
        zulu = _closure1_slot6;
        mike = _closure1_slot13;
        entity = {};
        foxtrot = entity;
        oscar = copyDataProperties(foxtrot, romeo);
        golf = _closure1_slot6;
        oscar = _closure1_slot0;
        offset = _closure1_slot3;
        report = 6;
        report = offset[report];
        report = oscar.bind(tango)(report);
        oscar = report.Text;
        report = {'style': null, 'variant': 'eyebrow', 'color': 'header-secondary'};
        verify = verify.sectionLabel;
        report['style'] = verify;
        report['children'] = options;
        oscar = golf.bind(tango)(oscar, report);
        report = 'children';
        entity[report] = oscar;
        entity = zulu.bind(tango)(mike, entity);
        return entity;
    };
    var _closure1_slot14 = entity;
    entity = function(argFoo) { // Original name: LabeledSection
        zulu = argFoo;
        yankee = zulu.label;
        offset = zulu.children;
        entity = null;
        mike = Object.create(entity);
        entity = 0;
        mike['label'] = entity;
        mike['children'] = entity;
        backup = {};
        foxtrot = zulu;
        romeo = mike;
        verify = copyDataProperties(backup, foxtrot, romeo);
        tango = _closure1_slot7;
        zulu = _closure1_slot8;
        mike = {};
        options = _closure1_slot6;
        golf = _closure1_slot14;
        report = {};
        backup = report;
        foxtrot = verify;
        entity = copyDataProperties(backup, foxtrot);
        entity = 'label';
        report[entity] = yankee;
        entity = undefined;
        golf = options.bind(entity)(golf, report);
        report = new Array(2);
        report[0] = golf;
        options = _closure1_slot6;
        golf = _closure1_slot13;
        oscar = {};
        backup = oscar;
        foxtrot = verify;
        verify = copyDataProperties(backup, foxtrot);
        verify = 'children';
        oscar[verify] = offset;
        oscar = options.bind(entity)(golf, oscar);
        report[1] = oscar;
        mike['children'] = report;
        entity = tango.bind(entity)(zulu, mike);
        return entity;
    };
    var _closure1_slot15 = entity;
    entity = function() { // Original name: Separator
        entity = _closure1_slot9;
        tango = undefined;
        golf = entity.bind(tango)();
        zulu = _closure1_slot6;
        mike = _closure1_slot13;
        entity = {};
        oscar = _closure1_slot5;
        report = {};
        golf = golf.separator;
        report['style'] = golf;
        report = zulu.bind(tango)(oscar, report);
        entity['children'] = report;
        entity = zulu.bind(tango)(mike, entity);
        return entity;
    };
    var _closure1_slot16 = entity;
    tango = function(argFoo) { // Original name: BenefitsSection
        _fun127272: for(var _fun127272_ip = 0; ; ) switch(_fun127272_ip) {
 0:
            mike = argFoo;
            zulu = mike.guildId;
            var _closure2_slot0 = zulu;
            yankee = mike.label;
            zulu = mike.benefits;
            options = mike.look;
            tango = undefined;
            if(!(options === tango)) { _fun127272_ip = 50; continue _fun127272 }
 37:
            report = _closure1_slot10;
            options = report.FLAT;
 50:
            mike = mike.listingId;
            var _closure2_slot1 = mike;
            var _closure2_slot2 = tango;
            mike = _closure1_slot9;
            offset = mike.bind(tango)();
            _closure2_slot2 = offset;
            report = zulu.length;
            mike = 0;
            if(!(mike !== report)) { _fun127272_ip = 263; continue _fun127272 }
 93:
            golf = 'string';
            mike = typeof yankee;
            report = yankee;
            if(!(golf !== mike)) { _fun127272_ip = 154; continue _fun127272 }
 107:
            golf = _closure1_slot0;
            verify = _closure1_slot3;
            mike = 8;
            mike = verify[mike];
            mike = golf.bind(tango)(mike);
            verify = mike.intl;
            golf = verify.formatToPlainString;
            mike = {};
            romeo = zulu.length;
            mike['count'] = romeo;
            report = golf.bind(verify)(yankee, mike);
 154:
            mike = zulu.map;
            entity = function(argFoo, argBar) {
                _fun127273: for(var _fun127273_ip = 0; ; ) switch(_fun127273_ip) {
 0:
                    golf = argFoo;
                    report = _closure1_slot6;
                    tango = _closure1_slot5;
                    zulu = {};
                    oscar = argBar;
                    mike = 0;
                    mike = oscar > mike;
                    if(!mike) { _fun127273_ip = 41; continue _fun127273 }
 28:
                    oscar = _closure2_slot2;
                    mike = oscar.benefitSpacing;
 41:
                    zulu['style'] = mike;
                    offset = _closure1_slot6;
                    oscar = _closure1_slot0;
                    options = _closure1_slot3;
                    entity = 13;
                    entity = options[entity];
                    mike = undefined;
                    entity = oscar.bind(mike)(entity);
                    verify = entity.GuildRoleSubscriptionBenefitPreview;
                    entity = {};
                    romeo = _closure2_slot0;
                    entity['guildId'] = romeo;
                    entity['benefit'] = golf;
                    romeo = _closure2_slot1;
                    yankee = 14;
                    yankee = options[yankee];
                    yankee = oscar.bind(mike)(yankee);
                    yankee = yankee.NEW_LISTING_EDIT_STATE_ID;
                    yankee = romeo === yankee;
                    yankee = !yankee;
                    entity['isInteractive'] = yankee;
                    entity = offset.bind(mike)(verify, entity);
                    zulu['children'] = entity;
                    entity = 9;
                    entity = options[entity];
                    oscar = oscar.bind(mike)(entity);
                    entity = oscar.getBenefitKey;
                    entity = entity.bind(oscar)(golf);
                    entity = report.bind(mike)(tango, zulu, entity);
                    return entity;
                }
            };
            verify = mike.bind(zulu)(entity);
            zulu = _closure1_slot6;
            mike = _closure1_slot15;
            entity = {};
            golf = _closure1_slot10;
            golf = golf.ROUNDED;
            golf = options === golf;
            entity['noBackground'] = golf;
            entity['label'] = report;
            report = _closure1_slot10;
            golf = report.FLAT;
            report = verify;
            if(!(options !== golf)) { _fun127272_ip = 251; continue _fun127272 }
 221:
            options = _closure1_slot6;
            golf = _closure1_slot5;
            oscar = {};
            offset = offset.roundedBenefitsContainer;
            oscar['style'] = offset;
            oscar['children'] = verify;
            report = options.bind(tango)(golf, oscar);
 251:
            entity['children'] = report;
            entity = zulu.bind(tango)(mike, entity);
            return entity;
 263:
            entity = null;
            return entity;
        }
    };
    var _closure1_slot17 = tango;
    entity = global;
    offset = entity.Object;
    verify = offset.defineProperty;
    report = {};
    entity = true;
    report['value'] = entity;
    entity = '__esModule';
    entity = verify.bind(offset)(zulu, entity, report);
    yankee = 0;
    report = golf[yankee];
    entity = undefined;
    report = kilo.bind(entity)(report);
    var _closure1_slot4 = report;
    offset = 1;
    report = golf[offset];
    report = options.bind(entity)(report);
    report = 2;
    report = golf[report];
    report = oscar.bind(entity)(report);
    report = report.View;
    var _closure1_slot5 = report;
    report = 3;
    options = golf[report];
    options = oscar.bind(entity)(options);
    options = options.jsx;
    var _closure1_slot6 = options;
    options = golf[report];
    options = oscar.bind(entity)(options);
    options = options.jsxs;
    var _closure1_slot7 = options;
    report = golf[report];
    report = oscar.bind(entity)(report);
    report = report.Fragment;
    var _closure1_slot8 = report;
    sizing = 4;
    report = golf[sizing];
    romeo = oscar.bind(entity)(report);
    verify = romeo.createStyles;
    options = {};
    foxtrot = {};
    report = 16;
    foxtrot['padding'] = report;
    options['container'] = foxtrot;
    foxtrot = {'backgroundColor': null, 'borderTopStartRadius': 8, 'borderTopEndRadius': 8, 'display': 'flex', 'flexDirection': 'column', 'alignItems': 'center', 'padding': 16};
    backup = 5;
    output = golf[backup];
    output = kilo.bind(entity)(output);
    output = output.colors;
    output = output.BACKGROUND_TERTIARY;
    foxtrot['backgroundColor'] = output;
    options['header'] = foxtrot;
    foxtrot = {'width': 80, 'height': 80, 'borderRadius': 40, 'marginTop': 16};
    options['image'] = foxtrot;
    foxtrot = {'marginTop': 16, 'alignItems': 'center'};
    options['priceGroup'] = foxtrot;
    foxtrot = {};
    foxtrot['marginTop'] = sizing;
    options['priceInterval'] = foxtrot;
    foxtrot = {};
    foxtrot['paddingHorizontal'] = report;
    options['content'] = foxtrot;
    foxtrot = {};
    sizing = golf[backup];
    sizing = kilo.bind(entity)(sizing);
    sizing = sizing.colors;
    sizing = sizing.BACKGROUND_SECONDARY;
    foxtrot['backgroundColor'] = sizing;
    options['contentWithBackground'] = foxtrot;
    foxtrot = {'width': '100%', 'height': 1, 'marginTop': 16};
    sizing = golf[backup];
    sizing = kilo.bind(entity)(sizing);
    sizing = sizing.colors;
    sizing = sizing.BACKGROUND_MODIFIER_ACCENT;
    foxtrot['backgroundColor'] = sizing;
    options['separator'] = foxtrot;
    foxtrot = {};
    foxtrot['paddingVertical'] = report;
    options['sectionLabel'] = foxtrot;
    foxtrot = {};
    foxtrot['marginTop'] = report;
    options['benefitSpacing'] = foxtrot;
    foxtrot = {};
    sizing = golf[backup];
    sizing = kilo.bind(entity)(sizing);
    sizing = sizing.colors;
    sizing = sizing.BACKGROUND_SECONDARY;
    foxtrot['backgroundColor'] = sizing;
    backup = golf[backup];
    backup = kilo.bind(entity)(backup);
    backup = backup.radii;
    backup = backup.lg;
    foxtrot['borderRadius'] = backup;
    foxtrot['padding'] = report;
    options['roundedBenefitsContainer'] = foxtrot;
    foxtrot = {'borderBottomStartRadius': 8, 'borderBottomEndRadius': 8, 'height': 16};
    options['footer'] = foxtrot;
    options = verify.bind(romeo)(options);
    var _closure1_slot9 = options;
    options = {};
    options['FLAT'] = yankee;
    verify = 'FLAT';
    options[yankee] = verify;
    options['ROUNDED'] = offset;
    verify = 'ROUNDED';
    options[offset] = verify;
    var _closure1_slot10 = options;
    tango['Looks'] = options;
    report = golf[report];
    golf = oscar.bind(entity)(report);
    oscar = golf.fileFinishedImporting;
    report = 'modules/guild_role_subscriptions/native/components/GuildRoleSubscriptionListingPreview.tsx';
    report = oscar.bind(golf)(report);
    zulu['BenefitsSection'] = tango;
    mike = function(argFoo) { // Original name: GuildRoleSubscriptionListingPreview
        _fun127274: for(var _fun127274_ip = 0; ; ) switch(_fun127274_ip) {
 0:
            yankee = argFoo;
            entity = _closure1_slot9;
            tango = undefined;
            verify = entity.bind(tango)();
            result = yankee.guildId;
            sizing = yankee.listingId;
            mike = _closure1_slot2;
            update = _closure1_slot3;
            entity = 10;
            zulu = update[entity];
            report = mike.bind(tango)(zulu);
            zulu = report.useChannelBenefits;
            report = zulu.bind(report)(sizing);
            zulu = _closure1_slot4;
            golf = 1;
            zulu = zulu.bind(tango)(report, golf);
            options = 0;
            source = zulu[options];
            zulu = update[entity];
            report = mike.bind(tango)(zulu);
            zulu = report.useIntangibleBenefits;
            report = zulu.bind(report)(sizing);
            zulu = _closure1_slot4;
            zulu = zulu.bind(tango)(report, golf);
            output = zulu[options];
            entity = update[entity];
            mike = mike.bind(tango)(entity);
            entity = mike.useRole;
            kilo = entity.bind(mike)(sizing, result);
            zulu = _closure1_slot7;
            mike = _closure1_slot5;
            entity = {};
            report = verify.container;
            entity['style'] = report;
            offset = _closure1_slot6;
            golf = _closure1_slot12;
            report = {};
            sequence = report;
            vacuum = yankee;
            yankee = copyDataProperties(sequence, vacuum);
            golf = offset.bind(tango)(golf, report);
            report = new Array(5);
            report[0] = golf;
            yankee = _closure1_slot6;
            offset = _closure1_slot15;
            golf = {};
            foxtrot = _closure1_slot0;
            echo = 8;
            romeo = update[echo];
            romeo = foxtrot.bind(tango)(romeo);
            control = romeo.intl;
            backup = control.string;
            romeo = update[echo];
            romeo = foxtrot.bind(tango)(romeo);
            romeo = romeo.t;
            romeo = romeo.FJZmY2;
            romeo = backup.bind(control)(romeo);
            golf['label'] = romeo;
            backup = _closure1_slot6;
            romeo = 15;
            romeo = update[romeo];
            romeo = foxtrot.bind(tango)(romeo);
            foxtrot = romeo.GuildRoleSubscriptionMemberPreview;
            romeo = {};
            romeo['role'] = kilo;
            romeo = backup.bind(tango)(foxtrot, romeo);
            golf['children'] = romeo;
            golf = yankee.bind(tango)(offset, golf);
            report[1] = golf;
            golf = source.length;
            golf = golf > options;
            if(!golf) { _fun127274_ip = 421; continue _fun127274 }
 311:
            romeo = _closure1_slot7;
            yankee = _closure1_slot8;
            offset = {};
            kilo = _closure1_slot6;
            backup = _closure1_slot16;
            foxtrot = {};
            backup = kilo.bind(tango)(backup, foxtrot);
            foxtrot = new Array(2);
            foxtrot[0] = backup;
            update = _closure1_slot6;
            kilo = _closure1_slot17;
            backup = {};
            backup['guildId'] = result;
            backup['benefits'] = source;
            control = _closure1_slot0;
            source = _closure1_slot3;
            source = source[echo];
            source = control.bind(tango)(source);
            source = source.t;
            source = source.sqjIIy;
            backup['label'] = source;
            backup['listingId'] = sizing;
            backup = update.bind(tango)(kilo, backup);
            foxtrot[1] = backup;
            offset['children'] = foxtrot;
            golf = romeo.bind(tango)(yankee, offset);
 421:
            report[2] = golf;
            golf = output.length;
            golf = golf > options;
            if(!golf) { _fun127274_ip = 547; continue _fun127274 }
 437:
            yankee = _closure1_slot7;
            offset = _closure1_slot8;
            options = {};
            backup = _closure1_slot6;
            foxtrot = _closure1_slot16;
            romeo = {};
            foxtrot = backup.bind(tango)(foxtrot, romeo);
            romeo = new Array(2);
            romeo[0] = foxtrot;
            kilo = _closure1_slot6;
            backup = _closure1_slot17;
            foxtrot = {};
            foxtrot['guildId'] = result;
            foxtrot['benefits'] = output;
            result = _closure1_slot0;
            output = _closure1_slot3;
            output = output[echo];
            output = result.bind(tango)(output);
            output = output.t;
            output = output.aBE7f3;
            foxtrot['label'] = output;
            foxtrot['listingId'] = sizing;
            foxtrot = kilo.bind(tango)(backup, foxtrot);
            romeo[1] = foxtrot;
            options['children'] = romeo;
            golf = yankee.bind(tango)(offset, options);
 547:
            report[3] = golf;
            options = _closure1_slot6;
            golf = _closure1_slot13;
            oscar = {};
            verify = verify.footer;
            oscar['style'] = verify;
            oscar = options.bind(tango)(golf, oscar);
            report[4] = oscar;
            entity['children'] = report;
            entity = zulu.bind(tango)(mike, entity);
            return entity;
        }
    };
    zulu['GuildRoleSubscriptionListingPreview'] = mike;
    return entity;
})();