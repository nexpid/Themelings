// app/modules/guild_role_subscriptions/native/components/GuildRoleSubscriptionListingPreview.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    oscard = argBar;
    kiloes = argBaz;
    option = argCor;
    zuuluu = argFre;
    golfie = argPlu;
    var _closure1_slot0 = oscard;
    var _closure1_slot1 = kiloes;
    var _closure1_slot2 = option;
    var _closure1_slot3 = golfie;
    entity = function(argFoo) { // Original name: PriceTier
        zuuluu = argFoo;
        output = zuuluu.price;
        foxtra = zuuluu.currency;
        entity = null;
        michal = Object.create(entity);
        entity = 0;
        michal['price'] = entity;
        michal['currency'] = entity;
        update = {};
        echoed = zuuluu;
        result = michal;
        kiloes = copyDataProperties(update, echoed, result);
        entity = _closure1_slot9;
        tangon = undefined;
        verify = entity.bind(tangon)();
        zuuluu = _closure1_slot7;
        michal = _closure1_slot5;
        entity = {};
        report = verify.priceGroup;
        entity['style'] = report;
        offset = _closure1_slot6;
        backup = _closure1_slot0;
        sizing = _closure1_slot3;
        oscard = 6;
        report = sizing[oscard];
        report = backup.bind(tangon)(report);
        option = report.Text;
        report = {'variant': 'heading-xl/extrabold', 'color': 'header-primary'};
        yankee = 7;
        yankee = sizing[yankee];
        romeon = backup.bind(tangon)(yankee);
        yankee = romeon.formatPrice;
        yankee = yankee.bind(romeon)(output, foxtra);
        report['children'] = yankee;
        option = offset.bind(tangon)(option, report);
        report = new Array(2);
        report[0] = option;
        option = _closure1_slot6;
        oscard = sizing[oscard];
        oscard = backup.bind(tangon)(oscard);
        golfie = oscard.Text;
        oscard = {'style': null, 'variant': 'eyebrow', 'color': 'header-secondary'};
        verify = verify.priceInterval;
        oscard['style'] = verify;
        verify = 8;
        offset = sizing[verify];
        offset = backup.bind(tangon)(offset);
        romeon = offset.intl;
        yankee = romeon.format;
        verify = sizing[verify];
        verify = backup.bind(tangon)(verify);
        verify = verify.t;
        offset = verify.isLGyc;
        verify = {};
        foxtra = 9;
        foxtra = sizing[foxtra];
        backup = backup.bind(tangon)(foxtra);
        foxtra = backup.formatPlanInterval;
        foxtra = foxtra.bind(backup)(kiloes);
        verify['period'] = foxtra;
        verify = yankee.bind(romeon)(offset, verify);
        oscard['children'] = verify;
        oscard = option.bind(tangon)(golfie, oscard);
        report[1] = oscard;
        entity['children'] = report;
        entity = zuuluu.bind(tangon)(michal, entity);
        return entity;
    };
    var _closure1_slot11 = entity;
    entity = function(argFoo) { // Original name: Header
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            entity = argFoo;
            oscard = entity.listingId;
            backup = entity.onSubscribePress;
            entity = _closure1_slot9;
            tangon = undefined;
            foxtra = entity.bind(tangon)();
            zuuluu = _closure1_slot2;
            kiloes = _closure1_slot3;
            entity = 10;
            michal = kiloes[entity];
            report = zuuluu.bind(tangon)(michal);
            michal = report.useSubscriptionPlan;
            golfie = michal.bind(report)(oscard);
            michal = _closure1_slot4;
            report = 1;
            golfie = michal.bind(tangon)(golfie, report);
            michal = 0;
            romeon = golfie[michal];
            golfie = kiloes[entity];
            verify = zuuluu.bind(tangon)(golfie);
            golfie = verify.useName;
            verify = golfie.bind(verify)(oscard);
            golfie = _closure1_slot4;
            golfie = golfie.bind(tangon)(verify, report);
            yankee = golfie[michal];
            golfie = kiloes[entity];
            verify = zuuluu.bind(tangon)(golfie);
            golfie = verify.useImage;
            verify = golfie.bind(verify)(oscard);
            golfie = _closure1_slot4;
            golfie = golfie.bind(tangon)(verify, report);
            sizing = golfie[michal];
            entity = kiloes[entity];
            zuuluu = zuuluu.bind(tangon)(entity);
            entity = zuuluu.useDescription;
            zuuluu = entity.bind(zuuluu)(oscard);
            entity = _closure1_slot4;
            entity = entity.bind(tangon)(zuuluu, report);
            verify = entity[michal];
            zuuluu = _closure1_slot7;
            michal = _closure1_slot5;
            entity = {};
            report = foxtra.header;
            entity['style'] = report;
            golfie = _closure1_slot6;
            oscard = _closure1_slot0;
            offset = 6;
            report = kiloes[offset];
            report = oscard.bind(tangon)(report);
            oscard = report.Text;
            report = {'variant': 'heading-md/semibold', 'color': 'interactive-active'};
            report['children'] = yankee;
            oscard = golfie.bind(tangon)(oscard, report);
            report = new Array(5);
            report[0] = oscard;
            yankee = _closure1_slot6;
            golfie = _closure1_slot1;
            oscard = 11;
            oscard = kiloes[oscard];
            golfie = golfie.bind(tangon)(oscard);
            oscard = {};
            foxtra = foxtra.image;
            oscard['style'] = foxtra;
            foxtra = {};
            kiloes = null;
            output = kiloes != sizing;
            kiloes = '';
            if(!output) { _fun00002_ip = 308; continue _fun00001 }
 305:
            kiloes = sizing;
 308:
            foxtra['uri'] = kiloes;
            oscard['source'] = foxtra;
            oscard = yankee.bind(tangon)(golfie, oscard);
            report[1] = oscard;
            yankee = _closure1_slot6;
            golfie = _closure1_slot11;
            oscard = {};
            echoed = oscard;
            result = romeon;
            romeon = copyDataProperties(echoed, result);
            oscard = yankee.bind(tangon)(golfie, oscard);
            report[2] = oscard;
            foxtra = _closure1_slot6;
            golfie = _closure1_slot0;
            oscard = _closure1_slot3;
            yankee = 12;
            yankee = oscard[yankee];
            yankee = golfie.bind(tangon)(yankee);
            romeon = yankee.GuildPremiumRoleSubscribeButton;
            yankee = {};
            yankee['onPress'] = backup;
            yankee = foxtra.bind(tangon)(romeon, yankee);
            report[3] = yankee;
            option = _closure1_slot6;
            oscard = oscard[offset];
            oscard = golfie.bind(tangon)(oscard);
            golfie = oscard.Text;
            oscard = {};
            offset = 'text-sm/medium';
            oscard['variant'] = offset;
            oscard['children'] = verify;
            oscard = option.bind(tangon)(golfie, oscard);
            report[4] = oscard;
            entity['children'] = report;
            entity = zuuluu.bind(tangon)(michal, entity);
            return entity;
        }
    };
    var _closure1_slot12 = entity;
    entity = function(argFoo) { // Original name: Content
        _fun00003: for(var _fun00004_ip = 0; ; ) switch(_fun00004_ip) {
 0:
            entity = argFoo;
            report = entity.children;
            offset = entity.noBackground;
            golfie = entity.style;
            michal = _closure1_slot9;
            tangon = undefined;
            verify = michal.bind(tangon)();
            zuuluu = _closure1_slot6;
            michal = _closure1_slot5;
            entity = {};
            option = verify.content;
            oscard = new Array(3);
            oscard[0] = option;
            option = true;
            option = option !== offset;
            if(!option) { _fun00004_ip = 70; continue _fun00003 }
 64:
            option = verify.contentWithBackground;
 70:
            oscard[1] = option;
            oscard[2] = golfie;
            entity['style'] = oscard;
            entity['children'] = report;
            entity = zuuluu.bind(tangon)(michal, entity);
            return entity;
        }
    };
    var _closure1_slot13 = entity;
    entity = function(argFoo) { // Original name: SectionLabel
        zuuluu = argFoo;
        option = zuuluu.label;
        entity = null;
        michal = Object.create(entity);
        entity = 0;
        michal['label'] = entity;
        foxtra = {};
        romeon = zuuluu;
        yankee = michal;
        romeon = copyDataProperties(foxtra, romeon, yankee);
        entity = _closure1_slot9;
        tangon = undefined;
        verify = entity.bind(tangon)();
        zuuluu = _closure1_slot6;
        michal = _closure1_slot13;
        entity = {};
        foxtra = entity;
        oscard = copyDataProperties(foxtra, romeon);
        golfie = _closure1_slot6;
        oscard = _closure1_slot0;
        offset = _closure1_slot3;
        report = 6;
        report = offset[report];
        report = oscard.bind(tangon)(report);
        oscard = report.Text;
        report = {'style': null, 'variant': 'eyebrow', 'color': 'header-secondary'};
        verify = verify.sectionLabel;
        report['style'] = verify;
        report['children'] = option;
        oscard = golfie.bind(tangon)(oscard, report);
        report = 'children';
        entity[report] = oscard;
        entity = zuuluu.bind(tangon)(michal, entity);
        return entity;
    };
    var _closure1_slot14 = entity;
    entity = function(argFoo) { // Original name: LabeledSection
        zuuluu = argFoo;
        yankee = zuuluu.label;
        offset = zuuluu.children;
        entity = null;
        michal = Object.create(entity);
        entity = 0;
        michal['label'] = entity;
        michal['children'] = entity;
        backup = {};
        foxtra = zuuluu;
        romeon = michal;
        verify = copyDataProperties(backup, foxtra, romeon);
        tangon = _closure1_slot7;
        zuuluu = _closure1_slot8;
        michal = {};
        option = _closure1_slot6;
        golfie = _closure1_slot14;
        report = {};
        backup = report;
        foxtra = verify;
        entity = copyDataProperties(backup, foxtra);
        entity = 'label';
        report[entity] = yankee;
        entity = undefined;
        golfie = option.bind(entity)(golfie, report);
        report = new Array(2);
        report[0] = golfie;
        option = _closure1_slot6;
        golfie = _closure1_slot13;
        oscard = {};
        backup = oscard;
        foxtra = verify;
        verify = copyDataProperties(backup, foxtra);
        verify = 'children';
        oscard[verify] = offset;
        oscard = option.bind(entity)(golfie, oscard);
        report[1] = oscard;
        michal['children'] = report;
        entity = tangon.bind(entity)(zuuluu, michal);
        return entity;
    };
    var _closure1_slot15 = entity;
    entity = function() { // Original name: Separator
        entity = _closure1_slot9;
        tangon = undefined;
        golfie = entity.bind(tangon)();
        zuuluu = _closure1_slot6;
        michal = _closure1_slot13;
        entity = {};
        oscard = _closure1_slot5;
        report = {};
        golfie = golfie.separator;
        report['style'] = golfie;
        report = zuuluu.bind(tangon)(oscard, report);
        entity['children'] = report;
        entity = zuuluu.bind(tangon)(michal, entity);
        return entity;
    };
    var _closure1_slot16 = entity;
    tangon = function(argFoo) { // Original name: BenefitsSection
        _fun00005: for(var _fun00006_ip = 0; ; ) switch(_fun00006_ip) {
 0:
            michal = argFoo;
            zuuluu = michal.guildId;
            var _closure2_slot0 = zuuluu;
            yankee = michal.label;
            zuuluu = michal.benefits;
            option = michal.look;
            tangon = undefined;
            if(!(option === tangon)) { _fun00006_ip = 50; continue _fun00005 }
 37:
            report = _closure1_slot10;
            option = report.FLAT;
 50:
            michal = michal.listingId;
            var _closure2_slot1 = michal;
            var _closure2_slot2 = tangon;
            michal = _closure1_slot9;
            offset = michal.bind(tangon)();
            _closure2_slot2 = offset;
            report = zuuluu.length;
            michal = 0;
            if(!(michal !== report)) { _fun00006_ip = 263; continue _fun00005 }
 93:
            golfie = 'string';
            michal = typeof yankee;
            report = yankee;
            if(!(golfie !== michal)) { _fun00006_ip = 154; continue _fun00005 }
 107:
            golfie = _closure1_slot0;
            verify = _closure1_slot3;
            michal = 8;
            michal = verify[michal];
            michal = golfie.bind(tangon)(michal);
            verify = michal.intl;
            golfie = verify.formatToPlainString;
            michal = {};
            romeon = zuuluu.length;
            michal['count'] = romeon;
            report = golfie.bind(verify)(yankee, michal);
 154:
            michal = zuuluu.map;
            entity = function(argFoo, argBar) {
                _fun00007: for(var _fun00008_ip = 0; ; ) switch(_fun00008_ip) {
 0:
                    golfie = argFoo;
                    report = _closure1_slot6;
                    tangon = _closure1_slot5;
                    zuuluu = {};
                    oscard = argBar;
                    michal = 0;
                    michal = oscard > michal;
                    if(!michal) { _fun00008_ip = 41; continue _fun00007 }
 28:
                    oscard = _closure2_slot2;
                    michal = oscard.benefitSpacing;
 41:
                    zuuluu['style'] = michal;
                    offset = _closure1_slot6;
                    oscard = _closure1_slot0;
                    option = _closure1_slot3;
                    entity = 13;
                    entity = option[entity];
                    michal = undefined;
                    entity = oscard.bind(michal)(entity);
                    verify = entity.GuildRoleSubscriptionBenefitPreview;
                    entity = {};
                    romeon = _closure2_slot0;
                    entity['guildId'] = romeon;
                    entity['benefit'] = golfie;
                    romeon = _closure2_slot1;
                    yankee = 14;
                    yankee = option[yankee];
                    yankee = oscard.bind(michal)(yankee);
                    yankee = yankee.NEW_LISTING_EDIT_STATE_ID;
                    yankee = romeon === yankee;
                    yankee = !yankee;
                    entity['isInteractive'] = yankee;
                    entity = offset.bind(michal)(verify, entity);
                    zuuluu['children'] = entity;
                    entity = 9;
                    entity = option[entity];
                    oscard = oscard.bind(michal)(entity);
                    entity = oscard.getBenefitKey;
                    entity = entity.bind(oscard)(golfie);
                    entity = report.bind(michal)(tangon, zuuluu, entity);
                    return entity;
                }
            };
            verify = michal.bind(zuuluu)(entity);
            zuuluu = _closure1_slot6;
            michal = _closure1_slot15;
            entity = {};
            golfie = _closure1_slot10;
            golfie = golfie.ROUNDED;
            golfie = option === golfie;
            entity['noBackground'] = golfie;
            entity['label'] = report;
            report = _closure1_slot10;
            golfie = report.FLAT;
            report = verify;
            if(!(option !== golfie)) { _fun00006_ip = 251; continue _fun00005 }
 221:
            option = _closure1_slot6;
            golfie = _closure1_slot5;
            oscard = {};
            offset = offset.roundedBenefitsContainer;
            oscard['style'] = offset;
            oscard['children'] = verify;
            report = option.bind(tangon)(golfie, oscard);
 251:
            entity['children'] = report;
            entity = zuuluu.bind(tangon)(michal, entity);
            return entity;
 263:
            entity = null;
            return entity;
        }
    };
    var _closure1_slot17 = tangon;
    entity = global;
    offset = entity.Object;
    verify = offset.defineProperty;
    report = {};
    entity = true;
    report['value'] = entity;
    entity = '__esModule';
    entity = verify.bind(offset)(zuuluu, entity, report);
    yankee = 0;
    report = golfie[yankee];
    entity = undefined;
    report = kiloes.bind(entity)(report);
    var _closure1_slot4 = report;
    offset = 1;
    report = golfie[offset];
    report = option.bind(entity)(report);
    report = 2;
    report = golfie[report];
    report = oscard.bind(entity)(report);
    report = report.View;
    var _closure1_slot5 = report;
    report = 3;
    report = golfie[report];
    report = oscard.bind(entity)(report);
    option = report.jsx;
    var _closure1_slot6 = option;
    option = report.jsxs;
    var _closure1_slot7 = option;
    report = report.Fragment;
    var _closure1_slot8 = report;
    sizing = 4;
    report = golfie[sizing];
    romeon = oscard.bind(entity)(report);
    verify = romeon.createStyles;
    option = {};
    foxtra = {};
    report = 16;
    foxtra['padding'] = report;
    option['container'] = foxtra;
    foxtra = {'backgroundColor': null, 'borderTopStartRadius': 8, 'borderTopEndRadius': 8, 'display': 'flex', 'flexDirection': 'column', 'alignItems': 'center', 'padding': 16};
    backup = 5;
    output = golfie[backup];
    output = kiloes.bind(entity)(output);
    output = output.colors;
    output = output.BACKGROUND_TERTIARY;
    foxtra['backgroundColor'] = output;
    option['header'] = foxtra;
    foxtra = {'width': 80, 'height': 80, 'borderRadius': 40, 'marginTop': 16};
    option['image'] = foxtra;
    foxtra = {'marginTop': 16, 'alignItems': 'center'};
    option['priceGroup'] = foxtra;
    foxtra = {};
    foxtra['marginTop'] = sizing;
    option['priceInterval'] = foxtra;
    foxtra = {};
    foxtra['paddingHorizontal'] = report;
    option['content'] = foxtra;
    foxtra = {};
    sizing = golfie[backup];
    sizing = kiloes.bind(entity)(sizing);
    sizing = sizing.colors;
    sizing = sizing.BACKGROUND_SECONDARY;
    foxtra['backgroundColor'] = sizing;
    option['contentWithBackground'] = foxtra;
    foxtra = {'width': '100%', 'height': 1, 'marginTop': 16};
    sizing = golfie[backup];
    sizing = kiloes.bind(entity)(sizing);
    sizing = sizing.colors;
    sizing = sizing.BACKGROUND_MODIFIER_ACCENT;
    foxtra['backgroundColor'] = sizing;
    option['separator'] = foxtra;
    foxtra = {};
    foxtra['paddingVertical'] = report;
    option['sectionLabel'] = foxtra;
    foxtra = {};
    foxtra['marginTop'] = report;
    option['benefitSpacing'] = foxtra;
    foxtra = {};
    sizing = golfie[backup];
    sizing = kiloes.bind(entity)(sizing);
    sizing = sizing.colors;
    sizing = sizing.BACKGROUND_SECONDARY;
    foxtra['backgroundColor'] = sizing;
    backup = golfie[backup];
    backup = kiloes.bind(entity)(backup);
    backup = backup.radii;
    backup = backup.lg;
    foxtra['borderRadius'] = backup;
    foxtra['padding'] = report;
    option['roundedBenefitsContainer'] = foxtra;
    foxtra = {'borderBottomStartRadius': 8, 'borderBottomEndRadius': 8, 'height': 16};
    option['footer'] = foxtra;
    option = verify.bind(romeon)(option);
    var _closure1_slot9 = option;
    option = {};
    option['FLAT'] = yankee;
    verify = 'FLAT';
    option[yankee] = verify;
    option['ROUNDED'] = offset;
    verify = 'ROUNDED';
    option[offset] = verify;
    var _closure1_slot10 = option;
    tangon['Looks'] = option;
    report = golfie[report];
    golfie = oscard.bind(entity)(report);
    oscard = golfie.fileFinishedImporting;
    report = 'modules/guild_role_subscriptions/native/components/GuildRoleSubscriptionListingPreview.tsx';
    report = oscard.bind(golfie)(report);
    zuuluu['BenefitsSection'] = tangon;
    michal = function(argFoo) { // Original name: GuildRoleSubscriptionListingPreview
        _fun00009: for(var _fun00010_ip = 0; ; ) switch(_fun00010_ip) {
 0:
            yankee = argFoo;
            entity = _closure1_slot9;
            tangon = undefined;
            verify = entity.bind(tangon)();
            result = yankee.guildId;
            sizing = yankee.listingId;
            michal = _closure1_slot2;
            update = _closure1_slot3;
            entity = 10;
            zuuluu = update[entity];
            report = michal.bind(tangon)(zuuluu);
            zuuluu = report.useChannelBenefits;
            report = zuuluu.bind(report)(sizing);
            zuuluu = _closure1_slot4;
            golfie = 1;
            zuuluu = zuuluu.bind(tangon)(report, golfie);
            option = 0;
            source = zuuluu[option];
            zuuluu = update[entity];
            report = michal.bind(tangon)(zuuluu);
            zuuluu = report.useIntangibleBenefits;
            report = zuuluu.bind(report)(sizing);
            zuuluu = _closure1_slot4;
            zuuluu = zuuluu.bind(tangon)(report, golfie);
            output = zuuluu[option];
            entity = update[entity];
            michal = michal.bind(tangon)(entity);
            entity = michal.useRole;
            kiloes = entity.bind(michal)(sizing, result);
            zuuluu = _closure1_slot7;
            michal = _closure1_slot5;
            entity = {};
            report = verify.container;
            entity['style'] = report;
            offset = _closure1_slot6;
            golfie = _closure1_slot12;
            report = {};
            sequen = report;
            vacuum = yankee;
            yankee = copyDataProperties(sequen, vacuum);
            golfie = offset.bind(tangon)(golfie, report);
            report = new Array(5);
            report[0] = golfie;
            yankee = _closure1_slot6;
            offset = _closure1_slot15;
            golfie = {};
            foxtra = _closure1_slot0;
            echoed = 8;
            romeon = update[echoed];
            romeon = foxtra.bind(tangon)(romeon);
            ctrled = romeon.intl;
            backup = ctrled.string;
            romeon = update[echoed];
            romeon = foxtra.bind(tangon)(romeon);
            romeon = romeon.t;
            romeon = romeon.FJZmY2;
            romeon = backup.bind(ctrled)(romeon);
            golfie['label'] = romeon;
            backup = _closure1_slot6;
            romeon = 15;
            romeon = update[romeon];
            romeon = foxtra.bind(tangon)(romeon);
            foxtra = romeon.GuildRoleSubscriptionMemberPreview;
            romeon = {};
            romeon['role'] = kiloes;
            romeon = backup.bind(tangon)(foxtra, romeon);
            golfie['children'] = romeon;
            golfie = yankee.bind(tangon)(offset, golfie);
            report[1] = golfie;
            golfie = source.length;
            golfie = golfie > option;
            if(!golfie) { _fun00010_ip = 425; continue _fun00009 }
 313:
            romeon = _closure1_slot7;
            yankee = _closure1_slot8;
            offset = {};
            kiloes = _closure1_slot6;
            backup = _closure1_slot16;
            foxtra = {};
            backup = kiloes.bind(tangon)(backup, foxtra);
            foxtra = new Array(2);
            foxtra[0] = backup;
            update = _closure1_slot6;
            kiloes = _closure1_slot17;
            backup = {};
            backup['guildId'] = result;
            backup['benefits'] = source;
            ctrled = _closure1_slot0;
            source = _closure1_slot3;
            source = source[echoed];
            source = ctrled.bind(tangon)(source);
            source = source.t;
            source = source.sqjIIy;
            backup['label'] = source;
            backup['listingId'] = sizing;
            backup = update.bind(tangon)(kiloes, backup);
            foxtra[1] = backup;
            offset['children'] = foxtra;
            golfie = romeon.bind(tangon)(yankee, offset);
 425:
            report[2] = golfie;
            golfie = output.length;
            golfie = golfie > option;
            if(!golfie) { _fun00010_ip = 553; continue _fun00009 }
 441:
            yankee = _closure1_slot7;
            offset = _closure1_slot8;
            option = {};
            backup = _closure1_slot6;
            foxtra = _closure1_slot16;
            romeon = {};
            foxtra = backup.bind(tangon)(foxtra, romeon);
            romeon = new Array(2);
            romeon[0] = foxtra;
            kiloes = _closure1_slot6;
            backup = _closure1_slot17;
            foxtra = {};
            foxtra['guildId'] = result;
            foxtra['benefits'] = output;
            result = _closure1_slot0;
            output = _closure1_slot3;
            output = output[echoed];
            output = result.bind(tangon)(output);
            output = output.t;
            output = output.aBE7f3;
            foxtra['label'] = output;
            foxtra['listingId'] = sizing;
            foxtra = kiloes.bind(tangon)(backup, foxtra);
            romeon[1] = foxtra;
            option['children'] = romeon;
            golfie = yankee.bind(tangon)(offset, option);
 553:
            report[3] = golfie;
            option = _closure1_slot6;
            golfie = _closure1_slot13;
            oscard = {};
            verify = verify.footer;
            oscard['style'] = verify;
            oscard = option.bind(tangon)(golfie, oscard);
            report[4] = oscard;
            entity['children'] = report;
            entity = zuuluu.bind(tangon)(michal, entity);
            return entity;
        }
    };
    zuuluu['GuildRoleSubscriptionListingPreview'] = michal;
    return entity;
})();