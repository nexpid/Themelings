// app/modules/guild_role_subscriptions/native/components/listing_elements/GuildRoleSubscriptionEmojiGallery.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    report = argBar;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    entity = argBaz;
    var _closure1_slot1 = entity;
    var _closure1_slot2 = oscard;
    entity = global;
    option = entity.Object;
    golfie = option.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(option)(zuuluu, entity, tangon);
    entity = 0;
    golfie = oscard[entity];
    tangon = argCor;
    entity = undefined;
    tangon = tangon.bind(entity)(golfie);
    tangon = 1;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.View;
    var _closure1_slot3 = tangon;
    tangon = 2;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.jsx;
    var _closure1_slot4 = tangon;
    tangon = 6;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/guild_role_subscriptions/native/components/listing_elements/GuildRoleSubscriptionEmojiGallery.tsx';
    tangon = report.bind(oscard)(tangon);
    michal = function(argFoo) { // Original name: EmojiGallery
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            entity = argFoo;
            zuuluu = entity.emojiIds;
            michal = entity.guildId;
            var _closure2_slot0 = michal;
            michal = entity.maxPerRow;
            tangon = undefined;
            if(!(michal === tangon)) { _fun00002_ip = 35; continue _fun00001 }
 32:
            michal = 9;
 35:
            oscard = _closure1_slot1;
            option = _closure1_slot2;
            entity = 3;
            entity = option[entity];
            entity = oscard.bind(tangon)(entity);
            verify = entity.bind(tangon)(zuuluu, michal);
            zuuluu = _closure1_slot4;
            michal = _closure1_slot3;
            entity = {};
            oscard = _closure1_slot0;
            report = 4;
            report = option[report];
            report = oscard.bind(tangon)(report);
            oscard = report.GappedList;
            report = {};
            option = 8;
            report['gap'] = option;
            option = verify.map;
            golfie = function(argFoo, argBar) {
                verify = argFoo;
                report = _closure1_slot4;
                tangon = _closure1_slot3;
                zuuluu = {};
                michal = {};
                oscard = 'row';
                michal['flexDirection'] = oscard;
                zuuluu['style'] = michal;
                oscard = _closure1_slot0;
                michal = _closure1_slot2;
                entity = 4;
                entity = michal[entity];
                michal = undefined;
                entity = oscard.bind(michal)(entity);
                oscard = entity.GappedList;
                entity = {};
                golfie = 16;
                entity['gap'] = golfie;
                option = verify.map;
                golfie = function(argFoo) {
                    report = argFoo;
                    tangon = _closure1_slot4;
                    michal = _closure1_slot1;
                    zuuluu = _closure1_slot2;
                    entity = 5;
                    entity = zuuluu[entity];
                    zuuluu = undefined;
                    michal = michal.bind(zuuluu)(entity);
                    entity = {'size': 22, 'fontSize': 18};
                    oscard = _closure2_slot0;
                    entity['guildId'] = oscard;
                    entity['id'] = report;
                    entity = tangon.bind(zuuluu)(michal, entity, report);
                    return entity;
                };
                golfie = option.bind(verify)(golfie);
                entity['children'] = golfie;
                entity = report.bind(michal)(oscard, entity);
                zuuluu['children'] = entity;
                entity = argBar;
                entity = report.bind(michal)(tangon, zuuluu, entity);
                return entity;
            };
            golfie = option.bind(verify)(golfie);
            report['children'] = golfie;
            report = zuuluu.bind(tangon)(oscard, report);
            entity['children'] = report;
            entity = zuuluu.bind(tangon)(michal, entity);
            return entity;
        }
    };
    zuuluu['default'] = michal;
    return entity;
})();