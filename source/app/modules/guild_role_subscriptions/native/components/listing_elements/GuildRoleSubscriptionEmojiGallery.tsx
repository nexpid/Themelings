// app/modules/guild_role_subscriptions/native/components/listing_elements/GuildRoleSubscriptionEmojiGallery.tsx
export default (function(argFoo, argBar, argBaz, argCorge, _, argFred, argPlugh) {
    report = argBar;
    zulu = argFred;
    oscar = argPlugh;
    var _closure1_slot0 = report;
    entity = argBaz;
    var _closure1_slot1 = entity;
    var _closure1_slot2 = oscar;
    entity = global;
    options = entity.Object;
    golf = options.defineProperty;
    tango = {};
    entity = true;
    tango['value'] = entity;
    entity = '__esModule';
    entity = golf.bind(options)(zulu, entity, tango);
    entity = 0;
    golf = oscar[entity];
    tango = argCorge;
    entity = undefined;
    tango = tango.bind(entity)(golf);
    tango = 1;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.View;
    var _closure1_slot3 = tango;
    tango = 2;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.jsx;
    var _closure1_slot4 = tango;
    tango = 6;
    tango = oscar[tango];
    oscar = report.bind(entity)(tango);
    report = oscar.fileFinishedImporting;
    tango = 'modules/guild_role_subscriptions/native/components/listing_elements/GuildRoleSubscriptionEmojiGallery.tsx';
    tango = report.bind(oscar)(tango);
    mike = function(argFoo) { // Original name: EmojiGallery
        _fun96943: for(var _fun96943_ip = 0; ; ) switch(_fun96943_ip) {
 0:
            entity = argFoo;
            zulu = entity.emojiIds;
            mike = entity.guildId;
            var _closure2_slot0 = mike;
            mike = entity.maxPerRow;
            tango = undefined;
            if(!(mike === tango)) { _fun96943_ip = 35; continue _fun96943 }
 32:
            mike = 9;
 35:
            oscar = _closure1_slot1;
            options = _closure1_slot2;
            entity = 3;
            entity = options[entity];
            entity = oscar.bind(tango)(entity);
            verify = entity.bind(tango)(zulu, mike);
            zulu = _closure1_slot4;
            mike = _closure1_slot3;
            entity = {};
            oscar = _closure1_slot0;
            report = 4;
            report = options[report];
            report = oscar.bind(tango)(report);
            oscar = report.GappedList;
            report = {};
            options = 8;
            report['gap'] = options;
            options = verify.map;
            golf = function(argFoo, argBar) {
                verify = argFoo;
                report = _closure1_slot4;
                tango = _closure1_slot3;
                zulu = {};
                mike = {};
                oscar = 'row';
                mike['flexDirection'] = oscar;
                zulu['style'] = mike;
                oscar = _closure1_slot0;
                mike = _closure1_slot2;
                entity = 4;
                entity = mike[entity];
                mike = undefined;
                entity = oscar.bind(mike)(entity);
                oscar = entity.GappedList;
                entity = {};
                golf = 16;
                entity['gap'] = golf;
                options = verify.map;
                golf = function(argFoo) {
                    report = argFoo;
                    tango = _closure1_slot4;
                    mike = _closure1_slot1;
                    zulu = _closure1_slot2;
                    entity = 5;
                    entity = zulu[entity];
                    zulu = undefined;
                    mike = mike.bind(zulu)(entity);
                    entity = {'size': 22, 'fontSize': 18};
                    oscar = _closure2_slot0;
                    entity['guildId'] = oscar;
                    entity['id'] = report;
                    entity = tango.bind(zulu)(mike, entity, report);
                    return entity;
                };
                golf = options.bind(verify)(golf);
                entity['children'] = golf;
                entity = report.bind(mike)(oscar, entity);
                zulu['children'] = entity;
                entity = argBar;
                entity = report.bind(mike)(tango, zulu, entity);
                return entity;
            };
            golf = options.bind(verify)(golf);
            report['children'] = golf;
            report = zulu.bind(tango)(oscar, report);
            entity['children'] = report;
            entity = zulu.bind(tango)(mike, entity);
            return entity;
        }
    };
    zulu['default'] = mike;
    return entity;
})();