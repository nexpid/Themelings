// app/modules/guild_role_subscriptions/native/components/listing_elements/GuildRoleSubscriptionBenefitRow.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    report = argBar;
    golfie = argBaz;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    var _closure1_slot1 = golfie;
    var _closure1_slot2 = oscard;
    entity = function(argFoo) { // Original name: getEmojiId
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            michal = argFoo;
            entity = michal.emoji_id;
            zuuluu = null;
            if(!(zuuluu == entity)) { _fun00002_ip = 79; continue _fun00001 }
 15:
            entity = michal.emoji_name;
            zuuluu = zuuluu == entity;
            entity = '';
            if(zuuluu) { _fun00002_ip = 77; continue _fun00001 }
 32:
            report = _closure1_slot1;
            tangon = _closure1_slot2;
            zuuluu = 5;
            tangon = tangon[zuuluu];
            zuuluu = undefined;
            oscard = report.bind(zuuluu)(tangon);
            report = oscard.convertSurrogateToName;
            tangon = michal.emoji_name;
            zuuluu = false;
            entity = report.bind(oscard)(tangon, zuuluu);
 77:
            _fun00002_ip = 85; continue _fun00001;
 79:
            entity = michal.emoji_id;
 85:
            return entity;
        }
    };
    var _closure1_slot8 = entity;
    entity = function(argFoo) { // Original name: BenefitRow
        _fun00003: for(var _fun00004_ip = 0; ; ) switch(_fun00004_ip) {
 0:
            entity = argFoo;
            romeon = entity.emojiId;
            foxtra = entity.guildId;
            offset = entity.title;
            backup = entity.description;
            entity = _closure1_slot7;
            tangon = undefined;
            kiloes = entity.bind(tangon)();
            zuuluu = _closure1_slot6;
            michal = _closure1_slot3;
            entity = {};
            report = kiloes.container;
            entity['style'] = report;
            option = _closure1_slot5;
            golfie = _closure1_slot1;
            verify = _closure1_slot2;
            report = 6;
            report = verify[report];
            oscard = golfie.bind(tangon)(report);
            report = {};
            report['guildId'] = foxtra;
            report['id'] = romeon;
            romeon = 22;
            report['size'] = romeon;
            romeon = 18;
            report['fontSize'] = romeon;
            oscard = option.bind(tangon)(oscard, report);
            report = new Array(3);
            report[0] = oscard;
            option = _closure1_slot5;
            oscard = 7;
            oscard = verify[oscard];
            golfie = golfie.bind(tangon)(oscard);
            oscard = {};
            verify = 16;
            oscard['size'] = verify;
            oscard = option.bind(tangon)(golfie, oscard);
            report[1] = oscard;
            option = _closure1_slot6;
            golfie = _closure1_slot3;
            oscard = {};
            verify = kiloes.textContainer;
            oscard['style'] = verify;
            verify = new Array(2);
            verify[0] = offset;
            offset = null;
            romeon = offset != backup;
            if(!romeon) { _fun00004_ip = 255; continue _fun00003 }
 191:
            foxtra = _closure1_slot5;
            romeon = _closure1_slot0;
            sizing = _closure1_slot2;
            yankee = 8;
            yankee = sizing[yankee];
            yankee = romeon.bind(tangon)(yankee);
            romeon = yankee.Text;
            yankee = {'style': null, 'variant': 'text-sm/normal', 'color': 'interactive-normal'};
            kiloes = kiloes.description;
            yankee['style'] = kiloes;
            yankee['children'] = backup;
            offset = foxtra.bind(tangon)(romeon, yankee);
 255:
            verify[1] = offset;
            oscard['children'] = verify;
            oscard = option.bind(tangon)(golfie, oscard);
            report[2] = oscard;
            entity['children'] = report;
            entity = zuuluu.bind(tangon)(michal, entity);
            return entity;
        }
    };
    var _closure1_slot9 = entity;
    entity = global;
    verify = entity.Object;
    option = verify.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = option.bind(verify)(zuuluu, entity, tangon);
    entity = 0;
    option = oscard[entity];
    tangon = argCor;
    entity = undefined;
    tangon = tangon.bind(entity)(option);
    tangon = 1;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.View;
    var _closure1_slot3 = tangon;
    offset = 2;
    tangon = oscard[offset];
    tangon = golfie.bind(entity)(tangon);
    var _closure1_slot4 = tangon;
    tangon = 3;
    golfie = oscard[tangon];
    golfie = report.bind(entity)(golfie);
    golfie = golfie.jsx;
    var _closure1_slot5 = golfie;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.jsxs;
    var _closure1_slot6 = tangon;
    tangon = 4;
    tangon = oscard[tangon];
    option = report.bind(entity)(tangon);
    golfie = option.createStyles;
    tangon = {};
    verify = {'flexDirection': 'row', 'justifyContent': 'flex-start'};
    tangon['container'] = verify;
    verify = {'flex': 1, 'justifyContent': 'center'};
    tangon['textContainer'] = verify;
    verify = {};
    verify['marginTop'] = offset;
    tangon['description'] = verify;
    verify = {'flexDirection': 'row', 'alignItems': 'center'};
    tangon['channelTitle'] = verify;
    verify = {'width': 16, 'height': 16, 'marginEnd': 8};
    tangon['channelIcon'] = verify;
    tangon = golfie.bind(option)(tangon);
    var _closure1_slot7 = tangon;
    tangon = 13;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/guild_role_subscriptions/native/components/listing_elements/GuildRoleSubscriptionBenefitRow.tsx';
    tangon = report.bind(oscard)(tangon);
    tangon = function(argFoo) { // Original name: ChannelBenefitRow
        _fun00005: for(var _fun00006_ip = 0; ; ) switch(_fun00006_ip) {
 0:
            michal = argFoo;
            report = michal.benefit;
            var _closure2_slot0 = report;
            golfie = michal.guildId;
            michal = _closure1_slot7;
            tangon = undefined;
            output = michal.bind(tangon)();
            yankee = _closure1_slot0;
            romeon = _closure1_slot2;
            michal = 9;
            michal = romeon[michal];
            verify = yankee.bind(tangon)(michal);
            oscard = verify.useStateFromStores;
            michal = _closure1_slot4;
            zuuluu = new Array(1);
            zuuluu[0] = michal;
            offset = report.ref_id;
            michal = new Array(1);
            michal[0] = offset;
            entity = function() {
                zuuluu = _closure1_slot4;
                michal = zuuluu.getChannel;
                entity = _closure2_slot0;
                entity = entity.ref_id;
                entity = michal.bind(zuuluu)(entity);
                return entity;
            };
            foxtra = oscard.bind(verify)(zuuluu, entity, michal);
            zuuluu = _closure1_slot5;
            backup = 8;
            entity = romeon[backup];
            entity = yankee.bind(tangon)(entity);
            michal = entity.Text;
            entity = {'variant': 'text-md/semibold', 'color': 'header-primary'};
            oscard = 10;
            verify = romeon[oscard];
            verify = yankee.bind(tangon)(verify);
            offset = verify.intl;
            verify = offset.string;
            oscard = romeon[oscard];
            oscard = yankee.bind(tangon)(oscard);
            oscard = oscard.t;
            oscard = oscard.bz1PZW;
            yankee = verify.bind(offset)(oscard);
            oscard = global;
            oscard = oscard.HermesInternal;
            offset = oscard.concat;
            verify = '[';
            oscard = ']';
            oscard = offset.bind(verify)(yankee, oscard);
            entity['children'] = oscard;
            oscard = zuuluu.bind(tangon)(michal, entity);
            entity = null;
            if(!(entity != foxtra)) { _fun00006_ip = 409; continue _fun00005 }
 226:
            zuuluu = _closure1_slot6;
            michal = _closure1_slot3;
            entity = {};
            verify = output.channelTitle;
            entity['style'] = verify;
            kiloes = _closure1_slot5;
            sizing = _closure1_slot1;
            offset = _closure1_slot2;
            yankee = 11;
            verify = offset[yankee];
            romeon = sizing.bind(tangon)(verify);
            verify = {};
            output = output.channelIcon;
            verify['style'] = output;
            yankee = offset[yankee];
            yankee = sizing.bind(tangon)(yankee);
            yankee = yankee.Sizes;
            yankee = yankee.CUSTOM;
            verify['size'] = yankee;
            yankee = _closure1_slot0;
            sizing = 12;
            sizing = offset[sizing];
            output = yankee.bind(tangon)(sizing);
            sizing = output.getChannelIcon;
            sizing = sizing.bind(output)(foxtra);
            verify['source'] = sizing;
            romeon = kiloes.bind(tangon)(romeon, verify);
            verify = new Array(2);
            verify[0] = romeon;
            romeon = _closure1_slot5;
            offset = offset[backup];
            offset = yankee.bind(tangon)(offset);
            yankee = offset.Text;
            offset = {'variant': 'text-md/medium', 'color': 'header-primary'};
            foxtra = foxtra.name;
            offset['children'] = foxtra;
            offset = romeon.bind(tangon)(yankee, offset);
            verify[1] = offset;
            entity['children'] = verify;
            oscard = zuuluu.bind(tangon)(michal, entity);
 409:
            zuuluu = _closure1_slot5;
            michal = _closure1_slot9;
            entity = {};
            option = _closure1_slot8;
            option = option.bind(tangon)(report);
            entity['emojiId'] = option;
            entity['guildId'] = golfie;
            entity['title'] = oscard;
            report = report.description;
            entity['description'] = report;
            entity = zuuluu.bind(tangon)(michal, entity);
            return entity;
        }
    };
    zuuluu['ChannelBenefitRow'] = tangon;
    michal = function(argFoo) { // Original name: IntangibleBenefitRow
        entity = argFoo;
        report = entity.benefit;
        golfie = entity.guildId;
        tangon = _closure1_slot5;
        zuuluu = _closure1_slot9;
        michal = {};
        option = _closure1_slot8;
        entity = undefined;
        option = option.bind(entity)(report);
        michal['emojiId'] = option;
        michal['guildId'] = golfie;
        option = _closure1_slot5;
        golfie = _closure1_slot0;
        verify = _closure1_slot2;
        oscard = 8;
        oscard = verify[oscard];
        oscard = golfie.bind(entity)(oscard);
        golfie = oscard.Text;
        oscard = {'variant': 'text-md/medium', 'color': 'header-primary'};
        verify = report.name;
        oscard['children'] = verify;
        oscard = option.bind(entity)(golfie, oscard);
        michal['title'] = oscard;
        report = report.description;
        michal['description'] = report;
        entity = tangon.bind(entity)(zuuluu, michal);
        return entity;
    };
    zuuluu['IntangibleBenefitRow'] = michal;
    return entity;
})();