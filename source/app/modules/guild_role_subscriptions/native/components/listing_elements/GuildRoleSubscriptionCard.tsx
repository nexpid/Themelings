// app/modules/guild_role_subscriptions/native/components/listing_elements/GuildRoleSubscriptionCard.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    golfie = argBar;
    foxtra = argBaz;
    verify = argCor;
    zuuluu = argFre;
    option = argPlu;
    var _closure1_slot0 = golfie;
    var _closure1_slot1 = foxtra;
    var _closure1_slot2 = verify;
    var _closure1_slot3 = option;
    report = function(argFoo) { // Original name: SectionTitle
        entity = argFoo;
        report = entity.children;
        michal = _closure1_slot9;
        tangon = undefined;
        oscard = michal.bind(tangon)();
        zuuluu = _closure1_slot6;
        michal = _closure1_slot0;
        golfie = _closure1_slot3;
        entity = 6;
        entity = golfie[entity];
        entity = michal.bind(tangon)(entity);
        michal = entity.Text;
        entity = {'variant': 'text-xs/bold', 'color': 'header-secondary'};
        oscard = oscard.sectionTitle;
        entity['style'] = oscard;
        entity['children'] = report;
        entity = zuuluu.bind(tangon)(michal, entity);
        return entity;
    };
    var _closure1_slot10 = report;
    tangon = function() { // Original name: Separator
        michal = _closure1_slot9;
        tangon = undefined;
        report = michal.bind(tangon)();
        zuuluu = _closure1_slot6;
        michal = _closure1_slot5;
        entity = {};
        report = report.separator;
        entity['style'] = report;
        entity = zuuluu.bind(tangon)(michal, entity);
        return entity;
    };
    var _closure1_slot11 = tangon;
    entity = global;
    yankee = entity.Object;
    offset = yankee.defineProperty;
    oscard = {};
    entity = true;
    oscard['value'] = entity;
    entity = '__esModule';
    entity = offset.bind(yankee)(zuuluu, entity, oscard);
    entity = 0;
    oscard = option[entity];
    entity = undefined;
    oscard = foxtra.bind(entity)(oscard);
    var _closure1_slot4 = oscard;
    oscard = 1;
    oscard = option[oscard];
    oscard = verify.bind(entity)(oscard);
    oscard = 2;
    oscard = option[oscard];
    oscard = golfie.bind(entity)(oscard);
    oscard = oscard.View;
    var _closure1_slot5 = oscard;
    oscard = 3;
    verify = option[oscard];
    verify = golfie.bind(entity)(verify);
    verify = verify.jsx;
    var _closure1_slot6 = verify;
    verify = option[oscard];
    verify = golfie.bind(entity)(verify);
    verify = verify.Fragment;
    var _closure1_slot7 = verify;
    oscard = option[oscard];
    oscard = golfie.bind(entity)(oscard);
    oscard = oscard.jsxs;
    var _closure1_slot8 = oscard;
    oscard = 4;
    oscard = option[oscard];
    offset = golfie.bind(entity)(oscard);
    verify = offset.createStyles;
    oscard = {};
    yankee = {};
    romeon = 'uppercase';
    yankee['textTransform'] = romeon;
    oscard['sectionTitle'] = yankee;
    yankee = {'width': '100%', 'height': 1, 'backgroundColor': null, 'marginVertical': 24};
    romeon = 5;
    romeon = option[romeon];
    romeon = foxtra.bind(entity)(romeon);
    romeon = romeon.colors;
    romeon = romeon.BACKGROUND_MODIFIER_ACCENT;
    yankee['backgroundColor'] = romeon;
    oscard['separator'] = yankee;
    oscard = verify.bind(offset)(oscard);
    var _closure1_slot9 = oscard;
    oscard = 14;
    oscard = option[oscard];
    option = golfie.bind(entity)(oscard);
    golfie = option.fileFinishedImporting;
    oscard = 'modules/guild_role_subscriptions/native/components/listing_elements/GuildRoleSubscriptionCard.tsx';
    oscard = golfie.bind(option)(oscard);
    zuuluu['SectionTitle'] = report;
    zuuluu['Separator'] = tangon;
    michal = function(argFoo) { // Original name: Content
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            entity = argFoo;
            zuuluu = entity.listingId;
            ctrled = entity.guildId;
            var _closure2_slot0 = ctrled;
            michal = _closure1_slot2;
            echoed = _closure1_slot3;
            entity = 7;
            report = echoed[entity];
            tangon = undefined;
            oscard = michal.bind(tangon)(report);
            report = oscard.useTierEmojiIds;
            report = report.bind(oscard)(zuuluu, ctrled);
            option = _closure1_slot4;
            oscard = 1;
            report = option.bind(tangon)(report, oscard);
            golfie = 0;
            record = report[golfie];
            report = echoed[entity];
            verify = michal.bind(tangon)(report);
            report = verify.useChannelBenefits;
            report = report.bind(verify)(zuuluu);
            report = option.bind(tangon)(report, oscard);
            config = report[golfie];
            report = echoed[entity];
            verify = michal.bind(tangon)(report);
            report = verify.useIntangibleBenefits;
            report = report.bind(verify)(zuuluu);
            report = option.bind(tangon)(report, oscard);
            sizing = report[golfie];
            entity = echoed[entity];
            michal = michal.bind(tangon)(entity);
            entity = michal.useRole;
            result = entity.bind(michal)(zuuluu, ctrled);
            target = config.length;
            sequen = sizing.length;
            oscard = record.size;
            zuuluu = _closure1_slot8;
            yankee = _closure1_slot0;
            output = 8;
            entity = echoed[output];
            entity = yankee.bind(tangon)(entity);
            michal = entity.GappedList;
            entity = {};
            report = function() { // Original name: renderGap
                tangon = _closure1_slot6;
                zuuluu = _closure1_slot11;
                michal = undefined;
                entity = {};
                entity = tangon.bind(michal)(zuuluu, entity);
                return entity;
            };
            entity['renderGap'] = report;
            option = _closure1_slot7;
            report = {};
            romeon = _closure1_slot6;
            offset = _closure1_slot10;
            verify = {};
            update = 9;
            kiloes = echoed[update];
            kiloes = yankee.bind(tangon)(kiloes);
            vacuum = kiloes.intl;
            source = vacuum.string;
            kiloes = echoed[update];
            kiloes = yankee.bind(tangon)(kiloes);
            kiloes = kiloes.t;
            kiloes = kiloes.DJ+bGh;
            kiloes = source.bind(vacuum)(kiloes);
            verify['children'] = kiloes;
            offset = romeon.bind(tangon)(offset, verify);
            verify = new Array(3);
            verify[0] = offset;
            source = _closure1_slot6;
            romeon = _closure1_slot1;
            kiloes = 10;
            offset = echoed[kiloes];
            romeon = romeon.bind(tangon)(offset);
            offset = {};
            offset['size'] = output;
            offset = source.bind(tangon)(romeon, offset);
            verify[1] = offset;
            romeon = _closure1_slot6;
            offset = 11;
            offset = echoed[offset];
            offset = yankee.bind(tangon)(offset);
            yankee = offset.GuildRoleSubscriptionMemberPreview;
            offset = {};
            offset['guildId'] = ctrled;
            offset['role'] = result;
            offset = romeon.bind(tangon)(yankee, offset);
            verify[2] = offset;
            report['children'] = verify;
            option = zuuluu.bind(tangon)(option, report);
            report = new Array(4);
            report[0] = option;
            verify = oscard > golfie;
            option = null;
            if(!verify) { _fun00002_ip = 608; continue _fun00001 }
 404:
            yankee = _closure1_slot8;
            offset = _closure1_slot7;
            verify = {};
            echoed = _closure1_slot6;
            result = _closure1_slot10;
            romeon = {};
            cntext = _closure1_slot0;
            vacuum = _closure1_slot3;
            source = vacuum[update];
            source = cntext.bind(tangon)(source);
            status = source.intl;
            papara = status.format;
            source = vacuum[update];
            source = cntext.bind(tangon)(source);
            source = source.t;
            cntext = source.oDeFmp;
            source = {};
            sierra = record.size;
            source['numEmojis'] = sierra;
            source = papara.bind(status)(cntext, source);
            romeon['children'] = source;
            result = echoed.bind(tangon)(result, romeon);
            romeon = new Array(3);
            romeon[0] = result;
            cntext = _closure1_slot6;
            echoed = _closure1_slot1;
            result = vacuum[kiloes];
            source = echoed.bind(tangon)(result);
            result = {};
            papara = 14;
            result['size'] = papara;
            result = cntext.bind(tangon)(source, result);
            romeon[1] = result;
            source = _closure1_slot6;
            result = 12;
            result = vacuum[result];
            echoed = echoed.bind(tangon)(result);
            result = {};
            vacuum = new Array(0);
            equals = vacuum;
            whisks = record;
            limora = 0;
            record = arraySpread(equals, whisks, limora);
            result['emojiIds'] = vacuum;
            result['guildId'] = ctrled;
            result = source.bind(tangon)(echoed, result);
            romeon[2] = result;
            verify['children'] = romeon;
            option = yankee.bind(tangon)(offset, verify);
 608:
            report[1] = option;
            verify = target > golfie;
            option = null;
            if(!verify) { _fun00002_ip = 827; continue _fun00001 }
 624:
            yankee = _closure1_slot8;
            offset = _closure1_slot7;
            verify = {};
            ctrled = _closure1_slot6;
            source = _closure1_slot10;
            romeon = {};
            echoed = _closure1_slot0;
            result = _closure1_slot3;
            vacuum = result[update];
            vacuum = echoed.bind(tangon)(vacuum);
            papara = vacuum.intl;
            cntext = papara.format;
            vacuum = result[update];
            vacuum = echoed.bind(tangon)(vacuum);
            vacuum = vacuum.t;
            record = vacuum.l40GUl;
            vacuum = {};
            vacuum['numChannels'] = target;
            vacuum = cntext.bind(papara)(record, vacuum);
            romeon['children'] = vacuum;
            source = ctrled.bind(tangon)(source, romeon);
            romeon = new Array(3);
            romeon[0] = source;
            record = _closure1_slot6;
            ctrled = _closure1_slot1;
            source = result[kiloes];
            vacuum = ctrled.bind(tangon)(source);
            source = {};
            ctrled = 14;
            source['size'] = ctrled;
            source = record.bind(tangon)(vacuum, source);
            romeon[1] = source;
            source = _closure1_slot6;
            result = result[output];
            result = echoed.bind(tangon)(result);
            echoed = result.GappedList;
            result = {};
            result['gap'] = ctrled;
            vacuum = config.map;
            ctrled = function(argFoo) {
                entity = argFoo;
                report = _closure1_slot6;
                zuuluu = _closure1_slot0;
                tangon = _closure1_slot3;
                michal = 13;
                michal = tangon[michal];
                tangon = undefined;
                michal = zuuluu.bind(tangon)(michal);
                zuuluu = michal.ChannelBenefitRow;
                michal = {};
                michal['benefit'] = entity;
                oscard = _closure2_slot0;
                michal['guildId'] = oscard;
                entity = entity.ref_id;
                entity = report.bind(tangon)(zuuluu, michal, entity);
                return entity;
            };
            ctrled = vacuum.bind(config)(ctrled);
            result['children'] = ctrled;
            result = source.bind(tangon)(echoed, result);
            romeon[2] = result;
            verify['children'] = romeon;
            option = yankee.bind(tangon)(offset, verify);
 827:
            report[2] = option;
            golfie = sequen > golfie;
            oscard = null;
            if(!golfie) { _fun00002_ip = 1046; continue _fun00001 }
 843:
            verify = _closure1_slot8;
            option = _closure1_slot7;
            golfie = {};
            echoed = _closure1_slot6;
            result = _closure1_slot10;
            offset = {};
            romeon = _closure1_slot0;
            yankee = _closure1_slot3;
            source = yankee[update];
            source = romeon.bind(tangon)(source);
            vacuum = source.intl;
            ctrled = vacuum.format;
            update = yankee[update];
            update = romeon.bind(tangon)(update);
            update = update.t;
            source = update.4V/Mfn;
            update = {};
            update['numIntangibles'] = sequen;
            update = ctrled.bind(vacuum)(source, update);
            offset['children'] = update;
            result = echoed.bind(tangon)(result, offset);
            offset = new Array(3);
            offset[0] = result;
            update = _closure1_slot6;
            result = _closure1_slot1;
            kiloes = yankee[kiloes];
            echoed = result.bind(tangon)(kiloes);
            result = {};
            kiloes = 14;
            result['size'] = kiloes;
            result = update.bind(tangon)(echoed, result);
            offset[1] = result;
            foxtra = _closure1_slot6;
            yankee = yankee[output];
            yankee = romeon.bind(tangon)(yankee);
            romeon = yankee.GappedList;
            yankee = {};
            yankee['gap'] = kiloes;
            kiloes = sizing.map;
            backup = function(argFoo, argBar) {
                report = _closure1_slot6;
                michal = _closure1_slot0;
                zuuluu = _closure1_slot3;
                entity = 13;
                entity = zuuluu[entity];
                tangon = undefined;
                entity = michal.bind(tangon)(entity);
                zuuluu = entity.IntangibleBenefitRow;
                michal = {};
                entity = argFoo;
                michal['benefit'] = entity;
                entity = _closure2_slot0;
                michal['guildId'] = entity;
                entity = argBar;
                entity = report.bind(tangon)(zuuluu, michal, entity);
                return entity;
            };
            backup = kiloes.bind(sizing)(backup);
            yankee['children'] = backup;
            yankee = foxtra.bind(tangon)(romeon, yankee);
            offset[2] = yankee;
            golfie['children'] = offset;
            oscard = verify.bind(tangon)(option, golfie);
 1046:
            report[3] = oscard;
            entity['children'] = report;
            entity = zuuluu.bind(tangon)(michal, entity);
            return entity;
        }
    };
    zuuluu['Content'] = michal;
    return entity;
})();