// app/modules/guild_role_subscriptions/native/components/listing_elements/GuildRoleSubscriptionMemberPreview.tsx
export default (function(argFoo, argBar, argBaz, argCorge, _, argFred, argPlugh) {
    report = argBar;
    romeo = argBaz;
    golf = argCorge;
    zulu = argFred;
    oscar = argPlugh;
    var _closure1_slot0 = report;
    var _closure1_slot1 = romeo;
    var _closure1_slot2 = golf;
    var _closure1_slot3 = oscar;
    entity = global;
    verify = entity.Object;
    options = verify.defineProperty;
    tango = {};
    entity = true;
    tango['value'] = entity;
    entity = '__esModule';
    entity = options.bind(verify)(zulu, entity, tango);
    entity = 0;
    tango = oscar[entity];
    entity = undefined;
    tango = golf.bind(entity)(tango);
    tango = 1;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.View;
    var _closure1_slot4 = tango;
    tango = 2;
    tango = oscar[tango];
    tango = romeo.bind(entity)(tango);
    var _closure1_slot5 = tango;
    tango = 3;
    golf = oscar[tango];
    golf = report.bind(entity)(golf);
    golf = golf.jsx;
    var _closure1_slot6 = golf;
    golf = oscar[tango];
    golf = report.bind(entity)(golf);
    golf = golf.Fragment;
    var _closure1_slot7 = golf;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.jsxs;
    var _closure1_slot8 = tango;
    tango = 4;
    tango = oscar[tango];
    verify = report.bind(entity)(tango);
    options = verify.createStyles;
    golf = {};
    offset = {'flexDirection': 'row', 'padding': 16, 'borderRadius': null, 'borderWidth': 1};
    tango = 16;
    yankee = 5;
    foxtrot = oscar[yankee];
    foxtrot = romeo.bind(entity)(foxtrot);
    foxtrot = foxtrot.radii;
    foxtrot = foxtrot.xs;
    offset['borderRadius'] = foxtrot;
    foxtrot = oscar[yankee];
    foxtrot = romeo.bind(entity)(foxtrot);
    foxtrot = foxtrot.colors;
    foxtrot = foxtrot.BACKGROUND_MODIFIER_ACCENT;
    offset['borderColor'] = foxtrot;
    yankee = oscar[yankee];
    yankee = romeo.bind(entity)(yankee);
    yankee = yankee.colors;
    yankee = yankee.BACKGROUND_PRIMARY;
    offset['backgroundColor'] = yankee;
    golf['container'] = offset;
    offset = {'width': 40, 'height': 40, 'borderRadius': 20};
    golf['avatar'] = offset;
    offset = {};
    offset['marginStart'] = tango;
    golf['content'] = offset;
    offset = {'flexDirection': 'row', 'alignItems': 'center'};
    golf['contextRow'] = offset;
    offset = {'width': 16, 'height': 16, 'marginStart': 8};
    golf['icon'] = offset;
    golf = options.bind(verify)(golf);
    var _closure1_slot9 = golf;
    tango = oscar[tango];
    oscar = report.bind(entity)(tango);
    report = oscar.fileFinishedImporting;
    tango = 'modules/guild_role_subscriptions/native/components/listing_elements/GuildRoleSubscriptionMemberPreview.tsx';
    tango = report.bind(oscar)(tango);
    mike = function(argFoo) { // Original name: GuildRoleSubscriptionMemberPreview
        _fun96950: for(var _fun96950_ip = 0; ; ) switch(_fun96950_ip) {
 0:
            entity = argFoo;
            romeo = entity.content;
            report = undefined;
            if(!(romeo === report)) { _fun96950_ip = 72; continue _fun96950 }
 14:
            oscar = _closure1_slot0;
            golf = _closure1_slot3;
            mike = 6;
            zulu = golf[mike];
            zulu = oscar.bind(report)(zulu);
            tango = zulu.intl;
            zulu = tango.string;
            mike = golf[mike];
            mike = oscar.bind(report)(mike);
            mike = mike.t;
            mike = mike.6OSasb;
            romeo = zulu.bind(tango)(mike);
 72:
            kilo = entity.guildId;
            golf = entity.style;
            foxtrot = entity.textStyle;
            config = entity.role;
            entity = _closure1_slot9;
            verify = entity.bind(report)();
            zulu = _closure1_slot0;
            entity = _closure1_slot3;
            mike = 7;
            mike = entity[mike];
            oscar = zulu.bind(report)(mike);
            tango = oscar.useStateFromStores;
            mike = _closure1_slot5;
            zulu = new Array(1);
            zulu[0] = mike;
            mike = function() {
                mike = _closure1_slot5;
                entity = mike.getCurrentUser;
                entity = entity.bind(mike)();
                return entity;
            };
            backup = tango.bind(oscar)(zulu, mike);
            mike = _closure1_slot1;
            result = 8;
            entity = entity[result];
            zulu = mike.bind(report)(entity);
            mike = zulu.useName;
            entity = null;
            sizing = mike.bind(zulu)(kilo, entity, backup);
            if(!(entity != config)) { _fun96950_ip = 851; continue _fun96950 }
 195:
            zulu = _closure1_slot1;
            mike = _closure1_slot3;
            yankee = 9;
            mike = mike[yankee];
            tango = zulu.bind(report)(mike);
            zulu = tango.makeSource;
            oscar = entity == backup;
            mike = undefined;
            if(oscar) { _fun96950_ip = 245; continue _fun96950 }
 230:
            options = backup.getAvatarURL;
            oscar = 40;
            mike = options.bind(backup)(kilo, oscar);
 245:
            if(!(entity == mike)) { _fun96950_ip = 278; continue _fun96950 }
 249:
            options = _closure1_slot1;
            oscar = _closure1_slot3;
            oscar = oscar[yankee];
            options = options.bind(report)(oscar);
            oscar = options.getDefaultAvatarURL;
            mike = oscar.bind(options)(report, report);
 278:
            options = zulu.bind(tango)(mike);
            yankee = _closure1_slot0;
            control = _closure1_slot3;
            mike = 10;
            mike = control[mike];
            zulu = yankee.bind(report)(mike);
            mike = zulu.getRoleIconData;
            vacuum = 16;
            sequence = mike.bind(zulu)(config, vacuum);
            source = config.color;
            tango = _closure1_slot8;
            zulu = _closure1_slot4;
            mike = {};
            backup = verify.container;
            oscar = new Array(2);
            oscar[0] = backup;
            oscar[1] = golf;
            mike['style'] = oscar;
            kilo = _closure1_slot6;
            golf = _closure1_slot1;
            oscar = 11;
            oscar = control[oscar];
            golf = golf.bind(report)(oscar);
            oscar = {};
            backup = verify.avatar;
            oscar['style'] = backup;
            oscar['source'] = options;
            golf = kilo.bind(report)(golf, oscar);
            oscar = new Array(2);
            oscar[0] = golf;
            golf = {};
            options = verify.content;
            golf['style'] = options;
            options = {};
            verify = verify.contextRow;
            options['style'] = verify;
            backup = 12;
            verify = control[backup];
            verify = yankee.bind(report)(verify);
            yankee = verify.Text;
            verify = {'variant': 'text-md/semibold', 'color': 'interactive-active'};
            output = {};
            update = _closure1_slot2;
            echo = 13;
            echo = control[echo];
            update = update.bind(report)(echo);
            echo = update.int2hex;
            echo = echo.bind(update)(source);
            output['color'] = echo;
            verify['style'] = output;
            verify['children'] = sizing;
            verify = kilo.bind(report)(yankee, verify);
            kilo = new Array(4);
            kilo[0] = verify;
            yankee = entity != sequence;
            verify = null;
            if(!yankee) { _fun96950_ip = 675; continue _fun96950 }
 525:
            output = _closure1_slot8;
            sizing = _closure1_slot7;
            yankee = {};
            control = _closure1_slot6;
            source = _closure1_slot1;
            record = _closure1_slot3;
            echo = 14;
            echo = record[echo];
            update = source.bind(report)(echo);
            echo = {};
            context = 4;
            echo['size'] = context;
            update = control.bind(report)(update, echo);
            echo = new Array(2);
            echo[0] = update;
            update = 15;
            update = record[update];
            source = source.bind(report)(update);
            update = {};
            config = config.name;
            update['name'] = config;
            config = sequence.customIconSrc;
            record = entity != config;
            config = undefined;
            if(!record) { _fun96950_ip = 636; continue _fun96950 }
 620:
            record = {};
            context = sequence.customIconSrc;
            record['uri'] = context;
            config = record;
 636:
            update['source'] = config;
            sequence = sequence.unicodeEmoji;
            update['unicodeEmoji'] = sequence;
            update['size'] = vacuum;
            update = control.bind(report)(source, update);
            echo[1] = update;
            yankee['children'] = echo;
            verify = output.bind(report)(sizing, yankee);
 675:
            kilo[1] = verify;
            yankee = _closure1_slot6;
            output = _closure1_slot1;
            verify = _closure1_slot3;
            sizing = 14;
            sizing = verify[sizing];
            output = output.bind(report)(sizing);
            sizing = {};
            sizing['size'] = result;
            sizing = yankee.bind(report)(output, sizing);
            kilo[2] = sizing;
            offset = _closure1_slot0;
            sizing = verify[backup];
            sizing = offset.bind(report)(sizing);
            output = sizing.Text;
            sizing = {'variant': 'text-xs/medium', 'color': 'text-muted', 'children': '4:20 PM'};
            sizing = yankee.bind(report)(output, sizing);
            kilo[3] = sizing;
            options['children'] = kilo;
            kilo = tango.bind(report)(zulu, options);
            options = new Array(2);
            options[0] = kilo;
            verify = verify[backup];
            verify = offset.bind(report)(verify);
            offset = verify.Text;
            verify = {'variant': 'text-md/normal', 'color': 'text-normal'};
            verify['style'] = foxtrot;
            verify['children'] = romeo;
            verify = yankee.bind(report)(offset, verify);
            options[1] = verify;
            golf['children'] = options;
            golf = tango.bind(report)(zulu, golf);
            oscar[1] = golf;
            mike['children'] = oscar;
            mike = tango.bind(report)(zulu, mike);
            return mike;
 851:
            return entity;
        }
    };
    zulu['GuildRoleSubscriptionMemberPreview'] = mike;
    return entity;
})();