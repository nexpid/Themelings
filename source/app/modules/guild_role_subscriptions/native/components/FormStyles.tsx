// app/modules/guild_role_subscriptions/native/components/FormStyles.tsx
export default (function(_, argBar, argBaz, __, ___, argFre, argPlu) {
    report = argBar;
    yankee = argBaz;
    zuuluu = argFre;
    oscard = argPlu;
    entity = global;
    golfie = entity.Object;
    tangon = golfie.defineProperty;
    michal = {};
    entity = true;
    michal['value'] = entity;
    entity = '__esModule';
    entity = tangon.bind(golfie)(zuuluu, entity, michal);
    entity = 0;
    michal = oscard[entity];
    entity = undefined;
    michal = report.bind(entity)(michal);
    foxtra = michal.Fonts;
    romeon = {'padding': 16, 'flexGrow': 0, 'borderRadius': 8, 'marginHorizontal': 16};
    sizing = 16;
    michal = 1;
    michal = oscard[michal];
    golfie = report.bind(entity)(michal);
    tangon = golfie.createStyles;
    michal = {};
    option = {'marginTop': 24, 'paddingStart': 16};
    michal['header'] = option;
    option = {};
    backup = 2;
    verify = oscard[backup];
    output = yankee.bind(entity)(verify);
    kiloes = foxtra.PRIMARY_MEDIUM;
    verify = 3;
    offset = oscard[verify];
    offset = yankee.bind(entity)(offset);
    offset = offset.colors;
    offset = offset.INTERACTIVE_ACTIVE;
    echoed = output.bind(entity)(kiloes, offset, sizing);
    update = option;
    offset = copyDataProperties(update, echoed);
    update = option;
    echoed = romeon;
    offset = copyDataProperties(update, echoed);
    offset = oscard[verify];
    offset = yankee.bind(entity)(offset);
    offset = offset.colors;
    kiloes = offset.BACKGROUND_TERTIARY;
    offset = 'backgroundColor';
    option[offset] = kiloes;
    michal['textInput'] = option;
    option = {'padding': 16, 'width': '100%'};
    kiloes = oscard[verify];
    kiloes = yankee.bind(entity)(kiloes);
    kiloes = kiloes.colors;
    kiloes = kiloes.BACKGROUND_SECONDARY;
    option['backgroundColor'] = kiloes;
    michal['disabledTextInput'] = option;
    option = {};
    backup = oscard[backup];
    kiloes = yankee.bind(entity)(backup);
    backup = foxtra.PRIMARY_MEDIUM;
    foxtra = oscard[verify];
    foxtra = yankee.bind(entity)(foxtra);
    foxtra = foxtra.colors;
    foxtra = foxtra.INTERACTIVE_ACTIVE;
    echoed = kiloes.bind(entity)(backup, foxtra, sizing);
    update = option;
    foxtra = copyDataProperties(update, echoed);
    update = option;
    echoed = romeon;
    romeon = copyDataProperties(update, echoed);
    verify = oscard[verify];
    verify = yankee.bind(entity)(verify);
    verify = verify.colors;
    verify = verify.BACKGROUND_SECONDARY;
    option[offset] = verify;
    michal['dropdownInput'] = option;
    michal = tangon.bind(golfie)(michal);
    tangon = 4;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/guild_role_subscriptions/native/components/FormStyles.tsx';
    tangon = report.bind(oscard)(tangon);
    zuuluu['default'] = michal;
    return entity;
})();