// app/modules/guild_role_subscriptions/native/components/LabeledDataBlock.tsx
export default (function(argFoo, argBar, argBaz, argCorge, _, argFred, argPlugh) {
    report = argBar;
    yankee = argBaz;
    zulu = argFred;
    oscar = argPlugh;
    var _closure1_slot0 = report;
    var _closure1_slot1 = yankee;
    var _closure1_slot2 = oscar;
    entity = global;
    options = entity.Object;
    golf = options.defineProperty;
    tango = {};
    entity = true;
    tango['value'] = entity;
    entity = '__esModule';
    entity = golf.bind(options)(zulu, entity, tango);
    entity = 0;
    golf = oscar[entity];
    tango = argCorge;
    entity = undefined;
    tango = tango.bind(entity)(golf);
    tango = 1;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.View;
    var _closure1_slot3 = tango;
    tango = 2;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    romeo = tango.Fonts;
    tango = 3;
    golf = oscar[tango];
    golf = report.bind(entity)(golf);
    golf = golf.jsx;
    var _closure1_slot4 = golf;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.jsxs;
    var _closure1_slot5 = tango;
    foxtrot = 4;
    tango = oscar[foxtrot];
    options = report.bind(entity)(tango);
    golf = options.createStyles;
    tango = {};
    verify = {'backgroundColor': null, 'borderRadius': null, 'flexBasis': 'auto', 'flexGrow': 1, 'padding': 16};
    offset = 5;
    backup = oscar[offset];
    backup = yankee.bind(entity)(backup);
    backup = backup.colors;
    backup = backup.BACKGROUND_SECONDARY_ALT;
    verify['backgroundColor'] = backup;
    backup = oscar[offset];
    backup = yankee.bind(entity)(backup);
    backup = backup.radii;
    backup = backup.sm;
    verify['borderRadius'] = backup;
    tango['container'] = verify;
    verify = {};
    verify['marginRight'] = foxtrot;
    tango['title'] = verify;
    verify = {};
    foxtrot = 6;
    foxtrot = oscar[foxtrot];
    foxtrot = yankee.bind(entity)(foxtrot);
    romeo = romeo.PRIMARY_MEDIUM;
    offset = oscar[offset];
    offset = yankee.bind(entity)(offset);
    offset = offset.colors;
    yankee = offset.HEADER_PRIMARY;
    offset = 24;
    sizing = foxtrot.bind(entity)(romeo, yankee, offset);
    output = verify;
    offset = copyDataProperties(output, sizing);
    tango['data'] = verify;
    verify = {'flexDirection': 'row', 'alignItems': 'center', 'marginBottom': 16};
    tango['titleSection'] = verify;
    tango = golf.bind(options)(tango);
    var _closure1_slot6 = tango;
    tango = 11;
    tango = oscar[tango];
    oscar = report.bind(entity)(tango);
    report = oscar.fileFinishedImporting;
    tango = 'modules/guild_role_subscriptions/native/components/LabeledDataBlock.tsx';
    tango = report.bind(oscar)(tango);
    mike = function(argFoo) { // Original name: LabeledDataBlock
        _fun96734: for(var _fun96734_ip = 0; ; ) switch(_fun96734_ip) {
 0:
            entity = argFoo;
            offset = entity.children;
            romeo = entity.title;
            oscar = entity.style;
            sizing = entity.icon;
            backup = entity.onPressIcon;
            entity = _closure1_slot6;
            tango = undefined;
            yankee = entity.bind(tango)();
            zulu = _closure1_slot5;
            mike = _closure1_slot3;
            entity = {};
            options = yankee.container;
            report = new Array(2);
            report[0] = options;
            report[1] = oscar;
            entity['style'] = report;
            report = {};
            oscar = yankee.titleSection;
            report['style'] = oscar;
            verify = _closure1_slot4;
            options = _closure1_slot0;
            foxtrot = _closure1_slot2;
            oscar = 7;
            oscar = foxtrot[oscar];
            oscar = options.bind(tango)(oscar);
            options = oscar.Text;
            oscar = {'style': null, 'accessibilityRole': 'header', 'variant': 'text-sm/medium', 'color': 'interactive-normal'};
            foxtrot = yankee.title;
            oscar['style'] = foxtrot;
            oscar['children'] = romeo;
            options = verify.bind(tango)(options, oscar);
            oscar = new Array(2);
            oscar[0] = options;
            options = null;
            options = options != sizing;
            if(!options) { _fun96734_ip = 273; continue _fun96734 }
 166:
            foxtrot = _closure1_slot4;
            romeo = _closure1_slot0;
            echo = _closure1_slot2;
            verify = 8;
            verify = echo[verify];
            verify = romeo.bind(tango)(verify);
            romeo = verify.PressableOpacity;
            verify = {};
            kilo = 'button';
            verify['accessibilityRole'] = kilo;
            verify['onPress'] = backup;
            result = _closure1_slot1;
            output = 9;
            backup = echo[output];
            kilo = result.bind(tango)(backup);
            backup = {};
            output = echo[output];
            output = result.bind(tango)(output);
            output = output.Sizes;
            output = output.SMALL;
            backup['size'] = output;
            backup['source'] = sizing;
            backup = foxtrot.bind(tango)(kilo, backup);
            verify['children'] = backup;
            options = foxtrot.bind(tango)(romeo, verify);
 273:
            oscar[1] = options;
            report['children'] = oscar;
            oscar = zulu.bind(tango)(mike, report);
            report = new Array(2);
            report[0] = oscar;
            verify = 'string';
            options = typeof offset;
            oscar = offset;
            if(!(verify === options)) { _fun96734_ip = 360; continue _fun96734 }
 309:
            verify = _closure1_slot4;
            options = _closure1_slot0;
            romeo = _closure1_slot2;
            golf = 10;
            golf = romeo[golf];
            golf = options.bind(tango)(golf);
            options = golf.LegacyText;
            golf = {};
            yankee = yankee.data;
            golf['style'] = yankee;
            golf['children'] = offset;
            oscar = verify.bind(tango)(options, golf);
 360:
            report[1] = oscar;
            entity['children'] = report;
            entity = zulu.bind(tango)(mike, entity);
            return entity;
        }
    };
    zulu['default'] = mike;
    return entity;
})();