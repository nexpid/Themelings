// app/modules/guild_role_subscriptions/native/components/LabeledDataBlock.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    report = argBar;
    yankee = argBaz;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    var _closure1_slot1 = yankee;
    var _closure1_slot2 = oscard;
    entity = global;
    option = entity.Object;
    golfie = option.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(option)(zuuluu, entity, tangon);
    entity = 0;
    golfie = oscard[entity];
    tangon = argCor;
    entity = undefined;
    tangon = tangon.bind(entity)(golfie);
    tangon = 1;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.View;
    var _closure1_slot3 = tangon;
    tangon = 2;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    romeon = tangon.Fonts;
    tangon = 3;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    golfie = tangon.jsx;
    var _closure1_slot4 = golfie;
    tangon = tangon.jsxs;
    var _closure1_slot5 = tangon;
    foxtra = 4;
    tangon = oscard[foxtra];
    option = report.bind(entity)(tangon);
    golfie = option.createStyles;
    tangon = {};
    verify = {'backgroundColor': null, 'borderRadius': null, 'flexBasis': 'auto', 'flexGrow': 1, 'padding': 16};
    offset = 5;
    backup = oscard[offset];
    backup = yankee.bind(entity)(backup);
    backup = backup.colors;
    backup = backup.BACKGROUND_SECONDARY_ALT;
    verify['backgroundColor'] = backup;
    backup = oscard[offset];
    backup = yankee.bind(entity)(backup);
    backup = backup.radii;
    backup = backup.sm;
    verify['borderRadius'] = backup;
    tangon['container'] = verify;
    verify = {};
    verify['marginRight'] = foxtra;
    tangon['title'] = verify;
    verify = {};
    foxtra = 6;
    foxtra = oscard[foxtra];
    foxtra = yankee.bind(entity)(foxtra);
    romeon = romeon.PRIMARY_MEDIUM;
    offset = oscard[offset];
    offset = yankee.bind(entity)(offset);
    offset = offset.colors;
    yankee = offset.HEADER_PRIMARY;
    offset = 24;
    sizing = foxtra.bind(entity)(romeon, yankee, offset);
    output = verify;
    offset = copyDataProperties(output, sizing);
    tangon['data'] = verify;
    verify = {'flexDirection': 'row', 'alignItems': 'center', 'marginBottom': 16};
    tangon['titleSection'] = verify;
    tangon = golfie.bind(option)(tangon);
    var _closure1_slot6 = tangon;
    tangon = 11;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/guild_role_subscriptions/native/components/LabeledDataBlock.tsx';
    tangon = report.bind(oscard)(tangon);
    michal = function(argFoo) { // Original name: LabeledDataBlock
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            entity = argFoo;
            offset = entity.children;
            romeon = entity.title;
            oscard = entity.style;
            sizing = entity.icon;
            backup = entity.onPressIcon;
            entity = _closure1_slot6;
            tangon = undefined;
            yankee = entity.bind(tangon)();
            zuuluu = _closure1_slot5;
            michal = _closure1_slot3;
            entity = {};
            option = yankee.container;
            report = new Array(2);
            report[0] = option;
            report[1] = oscard;
            entity['style'] = report;
            report = {};
            oscard = yankee.titleSection;
            report['style'] = oscard;
            verify = _closure1_slot4;
            option = _closure1_slot0;
            foxtra = _closure1_slot2;
            oscard = 7;
            oscard = foxtra[oscard];
            oscard = option.bind(tangon)(oscard);
            option = oscard.Text;
            oscard = {'style': null, 'accessibilityRole': 'header', 'variant': 'text-sm/medium', 'color': 'interactive-normal'};
            foxtra = yankee.title;
            oscard['style'] = foxtra;
            oscard['children'] = romeon;
            option = verify.bind(tangon)(option, oscard);
            oscard = new Array(2);
            oscard[0] = option;
            option = null;
            option = option != sizing;
            if(!option) { _fun00002_ip = 273; continue _fun00001 }
 166:
            foxtra = _closure1_slot4;
            romeon = _closure1_slot0;
            echoed = _closure1_slot2;
            verify = 8;
            verify = echoed[verify];
            verify = romeon.bind(tangon)(verify);
            romeon = verify.PressableOpacity;
            verify = {};
            kiloes = 'button';
            verify['accessibilityRole'] = kiloes;
            verify['onPress'] = backup;
            result = _closure1_slot1;
            output = 9;
            backup = echoed[output];
            kiloes = result.bind(tangon)(backup);
            backup = {};
            output = echoed[output];
            output = result.bind(tangon)(output);
            output = output.Sizes;
            output = output.SMALL;
            backup['size'] = output;
            backup['source'] = sizing;
            backup = foxtra.bind(tangon)(kiloes, backup);
            verify['children'] = backup;
            option = foxtra.bind(tangon)(romeon, verify);
 273:
            oscard[1] = option;
            report['children'] = oscard;
            oscard = zuuluu.bind(tangon)(michal, report);
            report = new Array(2);
            report[0] = oscard;
            verify = 'string';
            option = typeof offset;
            oscard = offset;
            if(!(verify === option)) { _fun00002_ip = 360; continue _fun00001 }
 309:
            verify = _closure1_slot4;
            option = _closure1_slot0;
            romeon = _closure1_slot2;
            golfie = 10;
            golfie = romeon[golfie];
            golfie = option.bind(tangon)(golfie);
            option = golfie.LegacyText;
            golfie = {};
            yankee = yankee.data;
            golfie['style'] = yankee;
            golfie['children'] = offset;
            oscard = verify.bind(tangon)(option, golfie);
 360:
            report[1] = oscard;
            entity['children'] = report;
            entity = zuuluu.bind(tangon)(michal, entity);
            return entity;
        }
    };
    zuuluu['default'] = michal;
    return entity;
})();