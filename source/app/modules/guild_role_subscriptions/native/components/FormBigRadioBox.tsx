// app/modules/guild_role_subscriptions/native/components/FormBigRadioBox.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    report = argBar;
    romeon = argBaz;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    var _closure1_slot1 = romeon;
    var _closure1_slot2 = oscard;
    entity = global;
    option = entity.Object;
    golfie = option.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(option)(zuuluu, entity, tangon);
    entity = 0;
    golfie = oscard[entity];
    tangon = argCor;
    entity = undefined;
    tangon = tangon.bind(entity)(golfie);
    var _closure1_slot3 = tangon;
    foxtra = 1;
    tangon = oscard[foxtra];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.View;
    var _closure1_slot4 = tangon;
    offset = 2;
    tangon = oscard[offset];
    tangon = report.bind(entity)(tangon);
    golfie = tangon.jsx;
    var _closure1_slot5 = golfie;
    tangon = tangon.jsxs;
    var _closure1_slot6 = tangon;
    tangon = 3;
    tangon = oscard[tangon];
    option = report.bind(entity)(tangon);
    golfie = option.createStyles;
    tangon = {};
    verify = {'backgroundColor': null, 'borderRadius': null, 'alignSelf': 'stretch', 'alignItems': 'flex-start', 'padding': 16};
    yankee = 4;
    backup = oscard[yankee];
    backup = romeon.bind(entity)(backup);
    backup = backup.colors;
    backup = backup.BACKGROUND_SECONDARY;
    verify['backgroundColor'] = backup;
    backup = oscard[yankee];
    backup = romeon.bind(entity)(backup);
    backup = backup.radii;
    backup = backup.sm;
    verify['borderRadius'] = backup;
    tangon['container'] = verify;
    verify = {};
    backup = oscard[yankee];
    backup = romeon.bind(entity)(backup);
    backup = backup.colors;
    backup = backup.BACKGROUND_TERTIARY;
    verify['backgroundColor'] = backup;
    verify['borderWidth'] = foxtra;
    foxtra = oscard[yankee];
    foxtra = romeon.bind(entity)(foxtra);
    foxtra = foxtra.colors;
    foxtra = foxtra.BG_BRAND;
    verify['borderColor'] = foxtra;
    tangon['containerSelected'] = verify;
    verify = {'position': 'absolute', 'right': 18, 'top': 18};
    tangon['indicator'] = verify;
    verify = {'height': 40, 'width': 40, 'alignItems': 'center', 'backgroundColor': null, 'borderRadius': 20, 'justifyContent': 'center', 'marginBottom': 16};
    foxtra = oscard[yankee];
    foxtra = romeon.bind(entity)(foxtra);
    foxtra = foxtra.colors;
    foxtra = foxtra.BACKGROUND_TERTIARY;
    verify['backgroundColor'] = foxtra;
    tangon['iconContainer'] = verify;
    verify = {};
    yankee = oscard[yankee];
    yankee = romeon.bind(entity)(yankee);
    yankee = yankee.colors;
    yankee = yankee.BACKGROUND_PRIMARY;
    verify['backgroundColor'] = yankee;
    tangon['iconContainerSelected'] = verify;
    verify = {};
    verify['marginBottom'] = offset;
    tangon['title'] = verify;
    verify = {};
    offset = 0.5;
    verify['opacity'] = offset;
    tangon['disabled'] = verify;
    tangon = golfie.bind(option)(tangon);
    var _closure1_slot7 = tangon;
    tangon = 9;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/guild_role_subscriptions/native/components/FormBigRadioBox.tsx';
    tangon = report.bind(oscard)(tangon);
    michal = function(argFoo) { // Original name: FormBigRadioBox
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            michal = argFoo;
            verify = michal.description;
            output = michal.icon;
            foxtra = michal.title;
            offset = michal.selected;
            var _closure2_slot0 = offset;
            romeon = michal.style;
            golfie = michal.onPress;
            option = michal.disabled;
            tangon = undefined;
            if(!(option === tangon)) { _fun00002_ip = 53; continue _fun00001 }
 51:
            option = false;
 53:
            var _closure2_slot1 = option;
            michal = _closure1_slot7;
            backup = michal.bind(tangon)();
            report = _closure1_slot3;
            zuuluu = report.useMemo;
            michal = new Array(2);
            michal[0] = offset;
            michal[1] = option;
            entity = function() {
                entity = {};
                zuuluu = _closure2_slot0;
                entity['selected'] = zuuluu;
                michal = _closure2_slot1;
                entity['disabled'] = michal;
                return entity;
            };
            report = zuuluu.bind(report)(entity, michal);
            zuuluu = _closure1_slot6;
            michal = _closure1_slot1;
            yankee = _closure1_slot2;
            entity = 5;
            entity = yankee[entity];
            michal = michal.bind(tangon)(entity);
            entity = {};
            kiloes = backup.container;
            yankee = new Array(4);
            yankee[0] = kiloes;
            kiloes = offset;
            if(!offset) { _fun00002_ip = 153; continue _fun00001 }
 147:
            kiloes = backup.containerSelected;
 153:
            yankee[1] = kiloes;
            kiloes = option;
            if(!kiloes) { _fun00002_ip = 168; continue _fun00001 }
 163:
            kiloes = backup.disabled;
 168:
            yankee[2] = kiloes;
            yankee[3] = romeon;
            entity['style'] = yankee;
            yankee = 'radio';
            entity['accessibilityRole'] = yankee;
            entity['accessibilityState'] = report;
            report = undefined;
            if(option) { _fun00002_ip = 201; continue _fun00001 }
 198:
            report = golfie;
 201:
            entity['onPress'] = report;
            romeon = _closure1_slot5;
            golfie = _closure1_slot0;
            option = _closure1_slot2;
            report = 6;
            report = option[report];
            report = golfie.bind(tangon)(report);
            golfie = report.RadioIndicator;
            report = {};
            option = backup.indicator;
            report['style'] = option;
            report['active'] = offset;
            golfie = romeon.bind(tangon)(golfie, report);
            report = new Array(4);
            report[0] = golfie;
            yankee = _closure1_slot4;
            golfie = {};
            kiloes = backup.iconContainer;
            option = new Array(2);
            option[0] = kiloes;
            if(!offset) { _fun00002_ip = 295; continue _fun00001 }
 289:
            offset = backup.iconContainerSelected;
 295:
            option[1] = offset;
            golfie['style'] = option;
            option = _closure1_slot5;
            sizing = _closure1_slot1;
            offset = _closure1_slot2;
            kiloes = 7;
            kiloes = offset[kiloes];
            sizing = sizing.bind(tangon)(kiloes);
            kiloes = {};
            kiloes['source'] = output;
            kiloes = option.bind(tangon)(sizing, kiloes);
            golfie['children'] = kiloes;
            golfie = romeon.bind(tangon)(yankee, golfie);
            report[1] = golfie;
            golfie = _closure1_slot0;
            oscard = 8;
            yankee = offset[oscard];
            yankee = golfie.bind(tangon)(yankee);
            romeon = yankee.Text;
            yankee = {'style': null, 'accessibilityRole': 'header', 'variant': 'text-md/semibold', 'color': 'interactive-normal'};
            backup = backup.title;
            yankee['style'] = backup;
            yankee['children'] = foxtra;
            yankee = option.bind(tangon)(romeon, yankee);
            report[2] = yankee;
            oscard = offset[oscard];
            oscard = golfie.bind(tangon)(oscard);
            golfie = oscard.Text;
            oscard = {'variant': 'text-sm/medium', 'color': 'interactive-normal'};
            oscard['children'] = verify;
            oscard = option.bind(tangon)(golfie, oscard);
            report[3] = oscard;
            entity['children'] = report;
            entity = zuuluu.bind(tangon)(michal, entity);
            return entity;
        }
    };
    zuuluu['default'] = michal;
    return entity;
})();