// app/modules/guild_role_subscriptions/native/components/FormBigRadioBox.tsx
export default (function(argFoo, argBar, argBaz, argCorge, _, argFred, argPlugh) {
    report = argBar;
    romeo = argBaz;
    zulu = argFred;
    oscar = argPlugh;
    var _closure1_slot0 = report;
    var _closure1_slot1 = romeo;
    var _closure1_slot2 = oscar;
    entity = global;
    options = entity.Object;
    golf = options.defineProperty;
    tango = {};
    entity = true;
    tango['value'] = entity;
    entity = '__esModule';
    entity = golf.bind(options)(zulu, entity, tango);
    entity = 0;
    golf = oscar[entity];
    tango = argCorge;
    entity = undefined;
    tango = tango.bind(entity)(golf);
    var _closure1_slot3 = tango;
    foxtrot = 1;
    tango = oscar[foxtrot];
    tango = report.bind(entity)(tango);
    tango = tango.View;
    var _closure1_slot4 = tango;
    offset = 2;
    tango = oscar[offset];
    tango = report.bind(entity)(tango);
    tango = tango.jsx;
    var _closure1_slot5 = tango;
    tango = oscar[offset];
    tango = report.bind(entity)(tango);
    tango = tango.jsxs;
    var _closure1_slot6 = tango;
    tango = 3;
    tango = oscar[tango];
    options = report.bind(entity)(tango);
    golf = options.createStyles;
    tango = {};
    verify = {'backgroundColor': null, 'borderRadius': null, 'alignSelf': 'stretch', 'alignItems': 'flex-start', 'padding': 16};
    yankee = 4;
    backup = oscar[yankee];
    backup = romeo.bind(entity)(backup);
    backup = backup.colors;
    backup = backup.BACKGROUND_SECONDARY;
    verify['backgroundColor'] = backup;
    backup = oscar[yankee];
    backup = romeo.bind(entity)(backup);
    backup = backup.radii;
    backup = backup.sm;
    verify['borderRadius'] = backup;
    tango['container'] = verify;
    verify = {};
    backup = oscar[yankee];
    backup = romeo.bind(entity)(backup);
    backup = backup.colors;
    backup = backup.BACKGROUND_TERTIARY;
    verify['backgroundColor'] = backup;
    verify['borderWidth'] = foxtrot;
    foxtrot = oscar[yankee];
    foxtrot = romeo.bind(entity)(foxtrot);
    foxtrot = foxtrot.colors;
    foxtrot = foxtrot.BG_BRAND;
    verify['borderColor'] = foxtrot;
    tango['containerSelected'] = verify;
    verify = {'position': 'absolute', 'right': 18, 'top': 18};
    tango['indicator'] = verify;
    verify = {'height': 40, 'width': 40, 'alignItems': 'center', 'backgroundColor': null, 'borderRadius': 20, 'justifyContent': 'center', 'marginBottom': 16};
    foxtrot = oscar[yankee];
    foxtrot = romeo.bind(entity)(foxtrot);
    foxtrot = foxtrot.colors;
    foxtrot = foxtrot.BACKGROUND_TERTIARY;
    verify['backgroundColor'] = foxtrot;
    tango['iconContainer'] = verify;
    verify = {};
    yankee = oscar[yankee];
    yankee = romeo.bind(entity)(yankee);
    yankee = yankee.colors;
    yankee = yankee.BACKGROUND_PRIMARY;
    verify['backgroundColor'] = yankee;
    tango['iconContainerSelected'] = verify;
    verify = {};
    verify['marginBottom'] = offset;
    tango['title'] = verify;
    verify = {};
    offset = 0.5;
    verify['opacity'] = offset;
    tango['disabled'] = verify;
    tango = golf.bind(options)(tango);
    var _closure1_slot7 = tango;
    tango = 9;
    tango = oscar[tango];
    oscar = report.bind(entity)(tango);
    report = oscar.fileFinishedImporting;
    tango = 'modules/guild_role_subscriptions/native/components/FormBigRadioBox.tsx';
    tango = report.bind(oscar)(tango);
    mike = function(argFoo) { // Original name: FormBigRadioBox
        _fun126966: for(var _fun126966_ip = 0; ; ) switch(_fun126966_ip) {
 0:
            mike = argFoo;
            verify = mike.description;
            output = mike.icon;
            foxtrot = mike.title;
            offset = mike.selected;
            var _closure2_slot0 = offset;
            romeo = mike.style;
            golf = mike.onPress;
            options = mike.disabled;
            tango = undefined;
            if(!(options === tango)) { _fun126966_ip = 53; continue _fun126966 }
 51:
            options = false;
 53:
            var _closure2_slot1 = options;
            mike = _closure1_slot7;
            backup = mike.bind(tango)();
            report = _closure1_slot3;
            zulu = report.useMemo;
            mike = new Array(2);
            mike[0] = offset;
            mike[1] = options;
            entity = function() {
                entity = {};
                zulu = _closure2_slot0;
                entity['selected'] = zulu;
                mike = _closure2_slot1;
                entity['disabled'] = mike;
                return entity;
            };
            report = zulu.bind(report)(entity, mike);
            zulu = _closure1_slot6;
            mike = _closure1_slot1;
            yankee = _closure1_slot2;
            entity = 5;
            entity = yankee[entity];
            mike = mike.bind(tango)(entity);
            entity = {};
            kilo = backup.container;
            yankee = new Array(4);
            yankee[0] = kilo;
            kilo = offset;
            if(!offset) { _fun126966_ip = 153; continue _fun126966 }
 147:
            kilo = backup.containerSelected;
 153:
            yankee[1] = kilo;
            kilo = options;
            if(!kilo) { _fun126966_ip = 168; continue _fun126966 }
 163:
            kilo = backup.disabled;
 168:
            yankee[2] = kilo;
            yankee[3] = romeo;
            entity['style'] = yankee;
            yankee = 'radio';
            entity['accessibilityRole'] = yankee;
            entity['accessibilityState'] = report;
            report = undefined;
            if(options) { _fun126966_ip = 201; continue _fun126966 }
 198:
            report = golf;
 201:
            entity['onPress'] = report;
            romeo = _closure1_slot5;
            golf = _closure1_slot0;
            options = _closure1_slot2;
            report = 6;
            report = options[report];
            report = golf.bind(tango)(report);
            golf = report.RadioIndicator;
            report = {};
            options = backup.indicator;
            report['style'] = options;
            report['active'] = offset;
            golf = romeo.bind(tango)(golf, report);
            report = new Array(4);
            report[0] = golf;
            yankee = _closure1_slot4;
            golf = {};
            kilo = backup.iconContainer;
            options = new Array(2);
            options[0] = kilo;
            if(!offset) { _fun126966_ip = 295; continue _fun126966 }
 289:
            offset = backup.iconContainerSelected;
 295:
            options[1] = offset;
            golf['style'] = options;
            options = _closure1_slot5;
            sizing = _closure1_slot1;
            offset = _closure1_slot2;
            kilo = 7;
            kilo = offset[kilo];
            sizing = sizing.bind(tango)(kilo);
            kilo = {};
            kilo['source'] = output;
            kilo = options.bind(tango)(sizing, kilo);
            golf['children'] = kilo;
            golf = romeo.bind(tango)(yankee, golf);
            report[1] = golf;
            golf = _closure1_slot0;
            oscar = 8;
            yankee = offset[oscar];
            yankee = golf.bind(tango)(yankee);
            romeo = yankee.Text;
            yankee = {'style': null, 'accessibilityRole': 'header', 'variant': 'text-md/semibold', 'color': 'interactive-normal'};
            backup = backup.title;
            yankee['style'] = backup;
            yankee['children'] = foxtrot;
            yankee = options.bind(tango)(romeo, yankee);
            report[2] = yankee;
            oscar = offset[oscar];
            oscar = golf.bind(tango)(oscar);
            golf = oscar.Text;
            oscar = {'variant': 'text-sm/medium', 'color': 'interactive-normal'};
            oscar['children'] = verify;
            oscar = options.bind(tango)(golf, oscar);
            report[3] = oscar;
            entity['children'] = report;
            entity = zulu.bind(tango)(mike, entity);
            return entity;
        }
    };
    zulu['default'] = mike;
    return entity;
})();