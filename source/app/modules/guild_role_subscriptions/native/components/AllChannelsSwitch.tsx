// app/modules/guild_role_subscriptions/native/components/AllChannelsSwitch.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    report = argBar;
    yankee = argBaz;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    var _closure1_slot1 = yankee;
    var _closure1_slot2 = oscard;
    entity = function(argFoo) { // Original name: Row
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            entity = argFoo;
            yankee = entity.icon;
            romeon = entity.label;
            report = entity.onPress;
            verify = entity.selected;
            option = entity.disabled;
            tangon = undefined;
            if(!(option === tangon)) { _fun00002_ip = 37; continue _fun00001 }
 35:
            option = false;
 37:
            entity = _closure1_slot7;
            offset = entity.bind(tangon)();
            zuuluu = _closure1_slot6;
            michal = _closure1_slot1;
            golfie = _closure1_slot2;
            entity = 8;
            entity = golfie[entity];
            michal = michal.bind(tangon)(entity);
            entity = {};
            golfie = offset.row;
            entity['style'] = golfie;
            golfie = 'radio';
            entity['accessibilityRole'] = golfie;
            golfie = {};
            golfie['disabled'] = option;
            golfie['selected'] = verify;
            entity['accessibilityState'] = golfie;
            golfie = verify;
            if(verify) { _fun00002_ip = 117; continue _fun00001 }
 114:
            golfie = option;
 117:
            entity['disabled'] = golfie;
            entity['onPress'] = report;
            option = _closure1_slot5;
            kiloes = _closure1_slot1;
            foxtra = _closure1_slot2;
            backup = 9;
            report = foxtra[backup];
            golfie = kiloes.bind(tangon)(report);
            report = {};
            backup = foxtra[backup];
            backup = kiloes.bind(tangon)(backup);
            backup = backup.Sizes;
            backup = backup.MEDIUM;
            report['size'] = backup;
            report['source'] = yankee;
            golfie = option.bind(tangon)(golfie, report);
            report = new Array(3);
            report[0] = golfie;
            yankee = _closure1_slot5;
            option = _closure1_slot0;
            golfie = 10;
            golfie = foxtra[golfie];
            golfie = option.bind(tangon)(golfie);
            option = golfie.LegacyText;
            golfie = {'style': null, 'numberOfLines': 1, 'ellipsizeMode': 'tail'};
            backup = offset.rowLabel;
            foxtra = new Array(2);
            foxtra[0] = backup;
            backup = verify;
            if(!backup) { _fun00002_ip = 256; continue _fun00001 }
 250:
            backup = offset.rowLabelSelected;
 256:
            foxtra[1] = backup;
            golfie['style'] = foxtra;
            golfie['children'] = romeon;
            golfie = yankee.bind(tangon)(option, golfie);
            report[1] = golfie;
            option = _closure1_slot5;
            golfie = _closure1_slot0;
            yankee = _closure1_slot2;
            oscard = 11;
            oscard = yankee[oscard];
            oscard = golfie.bind(tangon)(oscard);
            golfie = oscard.RadioIndicator;
            oscard = {};
            offset = offset.rowIndicator;
            oscard['style'] = offset;
            oscard['active'] = verify;
            oscard = option.bind(tangon)(golfie, oscard);
            report[2] = oscard;
            entity['children'] = report;
            entity = zuuluu.bind(tangon)(michal, entity);
            return entity;
        }
    };
    var _closure1_slot8 = entity;
    entity = global;
    option = entity.Object;
    golfie = option.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(option)(zuuluu, entity, tangon);
    entity = 0;
    golfie = oscard[entity];
    tangon = argCor;
    entity = undefined;
    tangon = tangon.bind(entity)(golfie);
    sizing = 1;
    tangon = oscard[sizing];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.View;
    var _closure1_slot3 = tangon;
    tangon = 2;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.AllChannelAccessOptions;
    var _closure1_slot4 = tangon;
    tangon = 3;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    romeon = tangon.Fonts;
    tangon = 4;
    golfie = oscard[tangon];
    golfie = report.bind(entity)(golfie);
    golfie = golfie.jsx;
    var _closure1_slot5 = golfie;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.jsxs;
    var _closure1_slot6 = tangon;
    tangon = 5;
    tangon = oscard[tangon];
    option = report.bind(entity)(tangon);
    golfie = option.createStyles;
    tangon = {};
    verify = {};
    offset = 6;
    foxtra = oscard[offset];
    foxtra = yankee.bind(entity)(foxtra);
    foxtra = foxtra.colors;
    foxtra = foxtra.BACKGROUND_SECONDARY;
    verify['backgroundColor'] = foxtra;
    foxtra = oscard[offset];
    foxtra = yankee.bind(entity)(foxtra);
    foxtra = foxtra.radii;
    foxtra = foxtra.sm;
    verify['borderRadius'] = foxtra;
    tangon['container'] = verify;
    kiloes = 16;
    verify = {'alignSelf': 'stretch', 'alignItems': 'center', 'flexDirection': 'row', 'justifyContent': 'flex-start', 'padding': 16};
    tangon['row'] = verify;
    verify = {};
    foxtra = 7;
    backup = oscard[foxtra];
    result = yankee.bind(entity)(backup);
    output = romeon.PRIMARY_MEDIUM;
    backup = oscard[offset];
    backup = yankee.bind(entity)(backup);
    backup = backup.colors;
    backup = backup.HEADER_SECONDARY;
    update = result.bind(entity)(output, backup, kiloes);
    source = verify;
    backup = copyDataProperties(source, update);
    backup = 'flexShrink';
    verify[backup] = sizing;
    backup = 'marginHorizontal';
    verify[backup] = kiloes;
    tangon['rowLabel'] = verify;
    verify = {};
    foxtra = oscard[foxtra];
    backup = yankee.bind(entity)(foxtra);
    foxtra = romeon.PRIMARY_SEMIBOLD;
    romeon = oscard[offset];
    romeon = yankee.bind(entity)(romeon);
    romeon = romeon.colors;
    romeon = romeon.HEADER_PRIMARY;
    update = backup.bind(entity)(foxtra, romeon, kiloes);
    source = verify;
    romeon = copyDataProperties(source, update);
    tangon['rowLabelSelected'] = verify;
    verify = {};
    romeon = 'auto';
    verify['marginStart'] = romeon;
    tangon['rowIndicator'] = verify;
    verify = {'backgroundColor': null, 'height': 1, 'marginStart': 56};
    offset = oscard[offset];
    offset = yankee.bind(entity)(offset);
    offset = offset.colors;
    offset = offset.BACKGROUND_MODIFIER_ACCENT;
    verify['backgroundColor'] = offset;
    tangon['separator'] = verify;
    tangon = golfie.bind(option)(tangon);
    var _closure1_slot7 = tangon;
    tangon = 15;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/guild_role_subscriptions/native/components/AllChannelsSwitch.tsx';
    tangon = report.bind(oscard)(tangon);
    michal = function(argFoo) { // Original name: AllChannelsSwitch
        _fun00003: for(var _fun00004_ip = 0; ; ) switch(_fun00004_ip) {
 0:
            entity = argFoo;
            romeon = entity.channelAccessFormat;
            michal = entity.setChannelAccessFormat;
            var _closure2_slot0 = michal;
            golfie = entity.style;
            verify = entity.disabled;
            tangon = undefined;
            if(!(verify === tangon)) { _fun00004_ip = 39; continue _fun00003 }
 37:
            verify = false;
 39:
            entity = _closure1_slot7;
            result = entity.bind(tangon)();
            zuuluu = _closure1_slot6;
            michal = _closure1_slot3;
            entity = {};
            option = result.container;
            report = new Array(2);
            report[0] = option;
            report[1] = golfie;
            entity['style'] = report;
            report = 'radiogroup';
            entity['accessibilityRole'] = report;
            report = {};
            report['disabled'] = verify;
            entity['accessibilityState'] = report;
            golfie = _closure1_slot5;
            option = _closure1_slot8;
            report = {};
            kiloes = _closure1_slot1;
            output = _closure1_slot2;
            yankee = 12;
            yankee = output[yankee];
            yankee = kiloes.bind(tangon)(yankee);
            report['icon'] = yankee;
            sizing = _closure1_slot0;
            foxtra = 13;
            yankee = output[foxtra];
            yankee = sizing.bind(tangon)(yankee);
            echoed = yankee.intl;
            backup = echoed.string;
            yankee = output[foxtra];
            yankee = sizing.bind(tangon)(yankee);
            yankee = yankee.t;
            yankee = yankee.vs2T+P;
            yankee = backup.bind(echoed)(yankee);
            report['label'] = yankee;
            yankee = _closure1_slot4;
            backup = yankee.SOME_CHANNELS_ACCESS;
            backup = romeon === backup;
            report['selected'] = backup;
            backup = function() { // Original name: onPress
                zuuluu = _closure2_slot0;
                entity = _closure1_slot4;
                michal = entity.SOME_CHANNELS_ACCESS;
                entity = undefined;
                entity = zuuluu.bind(entity)(michal);
                return entity;
            };
            report['onPress'] = backup;
            report['disabled'] = verify;
            golfie = golfie.bind(tangon)(option, report);
            report = new Array(3);
            report[0] = golfie;
            backup = _closure1_slot5;
            golfie = {};
            result = result.separator;
            golfie['style'] = result;
            golfie = backup.bind(tangon)(michal, golfie);
            report[1] = golfie;
            golfie = _closure1_slot5;
            oscard = {};
            backup = 14;
            backup = output[backup];
            backup = kiloes.bind(tangon)(backup);
            oscard['icon'] = backup;
            backup = output[foxtra];
            backup = sizing.bind(tangon)(backup);
            kiloes = backup.intl;
            backup = kiloes.string;
            foxtra = output[foxtra];
            foxtra = sizing.bind(tangon)(foxtra);
            foxtra = foxtra.t;
            foxtra = foxtra.l4Tr7e;
            foxtra = backup.bind(kiloes)(foxtra);
            oscard['label'] = foxtra;
            yankee = yankee.ALL_CHANNELS_ACCESS;
            yankee = romeon === yankee;
            oscard['selected'] = yankee;
            offset = function() { // Original name: onPress
                zuuluu = _closure2_slot0;
                entity = _closure1_slot4;
                michal = entity.ALL_CHANNELS_ACCESS;
                entity = undefined;
                entity = zuuluu.bind(entity)(michal);
                return entity;
            };
            oscard['onPress'] = offset;
            oscard['disabled'] = verify;
            oscard = golfie.bind(tangon)(option, oscard);
            report[2] = oscard;
            entity['children'] = report;
            entity = zuuluu.bind(tangon)(michal, entity);
            return entity;
        }
    };
    zuuluu['default'] = michal;
    return entity;
})();