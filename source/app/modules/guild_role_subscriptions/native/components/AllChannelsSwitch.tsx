// app/modules/guild_role_subscriptions/native/components/AllChannelsSwitch.tsx
export default (function(argFoo, argBar, argBaz, argCorge, _, argFred, argPlugh) {
    report = argBar;
    yankee = argBaz;
    zulu = argFred;
    oscar = argPlugh;
    var _closure1_slot0 = report;
    var _closure1_slot1 = yankee;
    var _closure1_slot2 = oscar;
    entity = function(argFoo) { // Original name: Row
        _fun127259: for(var _fun127259_ip = 0; ; ) switch(_fun127259_ip) {
 0:
            entity = argFoo;
            yankee = entity.icon;
            romeo = entity.label;
            report = entity.onPress;
            verify = entity.selected;
            options = entity.disabled;
            tango = undefined;
            if(!(options === tango)) { _fun127259_ip = 37; continue _fun127259 }
 35:
            options = false;
 37:
            entity = _closure1_slot7;
            offset = entity.bind(tango)();
            zulu = _closure1_slot6;
            mike = _closure1_slot1;
            golf = _closure1_slot2;
            entity = 8;
            entity = golf[entity];
            mike = mike.bind(tango)(entity);
            entity = {};
            golf = offset.row;
            entity['style'] = golf;
            golf = 'radio';
            entity['accessibilityRole'] = golf;
            golf = {};
            golf['disabled'] = options;
            golf['selected'] = verify;
            entity['accessibilityState'] = golf;
            golf = verify;
            if(verify) { _fun127259_ip = 117; continue _fun127259 }
 114:
            golf = options;
 117:
            entity['disabled'] = golf;
            entity['onPress'] = report;
            options = _closure1_slot5;
            kilo = _closure1_slot1;
            foxtrot = _closure1_slot2;
            backup = 9;
            report = foxtrot[backup];
            golf = kilo.bind(tango)(report);
            report = {};
            backup = foxtrot[backup];
            backup = kilo.bind(tango)(backup);
            backup = backup.Sizes;
            backup = backup.MEDIUM;
            report['size'] = backup;
            report['source'] = yankee;
            golf = options.bind(tango)(golf, report);
            report = new Array(3);
            report[0] = golf;
            yankee = _closure1_slot5;
            options = _closure1_slot0;
            golf = 10;
            golf = foxtrot[golf];
            golf = options.bind(tango)(golf);
            options = golf.LegacyText;
            golf = {'style': null, 'numberOfLines': 1, 'ellipsizeMode': 'tail'};
            backup = offset.rowLabel;
            foxtrot = new Array(2);
            foxtrot[0] = backup;
            backup = verify;
            if(!backup) { _fun127259_ip = 260; continue _fun127259 }
 254:
            backup = offset.rowLabelSelected;
 260:
            foxtrot[1] = backup;
            golf['style'] = foxtrot;
            golf['children'] = romeo;
            golf = yankee.bind(tango)(options, golf);
            report[1] = golf;
            options = _closure1_slot5;
            golf = _closure1_slot0;
            yankee = _closure1_slot2;
            oscar = 11;
            oscar = yankee[oscar];
            oscar = golf.bind(tango)(oscar);
            golf = oscar.RadioIndicator;
            oscar = {};
            offset = offset.rowIndicator;
            oscar['style'] = offset;
            oscar['active'] = verify;
            oscar = options.bind(tango)(golf, oscar);
            report[2] = oscar;
            entity['children'] = report;
            entity = zulu.bind(tango)(mike, entity);
            return entity;
        }
    };
    var _closure1_slot8 = entity;
    entity = global;
    options = entity.Object;
    golf = options.defineProperty;
    tango = {};
    entity = true;
    tango['value'] = entity;
    entity = '__esModule';
    entity = golf.bind(options)(zulu, entity, tango);
    entity = 0;
    golf = oscar[entity];
    tango = argCorge;
    entity = undefined;
    tango = tango.bind(entity)(golf);
    sizing = 1;
    tango = oscar[sizing];
    tango = report.bind(entity)(tango);
    tango = tango.View;
    var _closure1_slot3 = tango;
    tango = 2;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.AllChannelAccessOptions;
    var _closure1_slot4 = tango;
    tango = 3;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    romeo = tango.Fonts;
    tango = 4;
    golf = oscar[tango];
    golf = report.bind(entity)(golf);
    golf = golf.jsx;
    var _closure1_slot5 = golf;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.jsxs;
    var _closure1_slot6 = tango;
    tango = 5;
    tango = oscar[tango];
    options = report.bind(entity)(tango);
    golf = options.createStyles;
    tango = {};
    verify = {};
    offset = 6;
    foxtrot = oscar[offset];
    foxtrot = yankee.bind(entity)(foxtrot);
    foxtrot = foxtrot.colors;
    foxtrot = foxtrot.BACKGROUND_SECONDARY;
    verify['backgroundColor'] = foxtrot;
    foxtrot = oscar[offset];
    foxtrot = yankee.bind(entity)(foxtrot);
    foxtrot = foxtrot.radii;
    foxtrot = foxtrot.sm;
    verify['borderRadius'] = foxtrot;
    tango['container'] = verify;
    kilo = 16;
    verify = {'alignSelf': 'stretch', 'alignItems': 'center', 'flexDirection': 'row', 'justifyContent': 'flex-start', 'padding': 16};
    tango['row'] = verify;
    verify = {};
    foxtrot = 7;
    backup = oscar[foxtrot];
    result = yankee.bind(entity)(backup);
    output = romeo.PRIMARY_MEDIUM;
    backup = oscar[offset];
    backup = yankee.bind(entity)(backup);
    backup = backup.colors;
    backup = backup.HEADER_SECONDARY;
    update = result.bind(entity)(output, backup, kilo);
    source = verify;
    backup = copyDataProperties(source, update);
    backup = 'flexShrink';
    verify[backup] = sizing;
    backup = 'marginHorizontal';
    verify[backup] = kilo;
    tango['rowLabel'] = verify;
    verify = {};
    foxtrot = oscar[foxtrot];
    backup = yankee.bind(entity)(foxtrot);
    foxtrot = romeo.PRIMARY_SEMIBOLD;
    romeo = oscar[offset];
    romeo = yankee.bind(entity)(romeo);
    romeo = romeo.colors;
    romeo = romeo.HEADER_PRIMARY;
    update = backup.bind(entity)(foxtrot, romeo, kilo);
    source = verify;
    romeo = copyDataProperties(source, update);
    tango['rowLabelSelected'] = verify;
    verify = {};
    romeo = 'auto';
    verify['marginStart'] = romeo;
    tango['rowIndicator'] = verify;
    verify = {'backgroundColor': null, 'height': 1, 'marginStart': 56};
    offset = oscar[offset];
    offset = yankee.bind(entity)(offset);
    offset = offset.colors;
    offset = offset.BACKGROUND_MODIFIER_ACCENT;
    verify['backgroundColor'] = offset;
    tango['separator'] = verify;
    tango = golf.bind(options)(tango);
    var _closure1_slot7 = tango;
    tango = 15;
    tango = oscar[tango];
    oscar = report.bind(entity)(tango);
    report = oscar.fileFinishedImporting;
    tango = 'modules/guild_role_subscriptions/native/components/AllChannelsSwitch.tsx';
    tango = report.bind(oscar)(tango);
    mike = function(argFoo) { // Original name: AllChannelsSwitch
        _fun127260: for(var _fun127260_ip = 0; ; ) switch(_fun127260_ip) {
 0:
            entity = argFoo;
            romeo = entity.channelAccessFormat;
            mike = entity.setChannelAccessFormat;
            var _closure2_slot0 = mike;
            golf = entity.style;
            verify = entity.disabled;
            tango = undefined;
            if(!(verify === tango)) { _fun127260_ip = 39; continue _fun127260 }
 37:
            verify = false;
 39:
            entity = _closure1_slot7;
            result = entity.bind(tango)();
            zulu = _closure1_slot6;
            mike = _closure1_slot3;
            entity = {};
            options = result.container;
            report = new Array(2);
            report[0] = options;
            report[1] = golf;
            entity['style'] = report;
            report = 'radiogroup';
            entity['accessibilityRole'] = report;
            report = {};
            report['disabled'] = verify;
            entity['accessibilityState'] = report;
            golf = _closure1_slot5;
            options = _closure1_slot8;
            report = {};
            kilo = _closure1_slot1;
            output = _closure1_slot2;
            yankee = 12;
            yankee = output[yankee];
            yankee = kilo.bind(tango)(yankee);
            report['icon'] = yankee;
            sizing = _closure1_slot0;
            foxtrot = 13;
            yankee = output[foxtrot];
            yankee = sizing.bind(tango)(yankee);
            echo = yankee.intl;
            backup = echo.string;
            yankee = output[foxtrot];
            yankee = sizing.bind(tango)(yankee);
            yankee = yankee.t;
            yankee = yankee.vs2T+P;
            yankee = backup.bind(echo)(yankee);
            report['label'] = yankee;
            yankee = _closure1_slot4;
            backup = yankee.SOME_CHANNELS_ACCESS;
            backup = romeo === backup;
            report['selected'] = backup;
            backup = function() { // Original name: onPress
                zulu = _closure2_slot0;
                entity = _closure1_slot4;
                mike = entity.SOME_CHANNELS_ACCESS;
                entity = undefined;
                entity = zulu.bind(entity)(mike);
                return entity;
            };
            report['onPress'] = backup;
            report['disabled'] = verify;
            golf = golf.bind(tango)(options, report);
            report = new Array(3);
            report[0] = golf;
            backup = _closure1_slot5;
            golf = {};
            result = result.separator;
            golf['style'] = result;
            golf = backup.bind(tango)(mike, golf);
            report[1] = golf;
            golf = _closure1_slot5;
            oscar = {};
            backup = 14;
            backup = output[backup];
            backup = kilo.bind(tango)(backup);
            oscar['icon'] = backup;
            backup = output[foxtrot];
            backup = sizing.bind(tango)(backup);
            kilo = backup.intl;
            backup = kilo.string;
            foxtrot = output[foxtrot];
            foxtrot = sizing.bind(tango)(foxtrot);
            foxtrot = foxtrot.t;
            foxtrot = foxtrot.l4Tr7e;
            foxtrot = backup.bind(kilo)(foxtrot);
            oscar['label'] = foxtrot;
            yankee = yankee.ALL_CHANNELS_ACCESS;
            yankee = romeo === yankee;
            oscar['selected'] = yankee;
            offset = function() { // Original name: onPress
                zulu = _closure2_slot0;
                entity = _closure1_slot4;
                mike = entity.ALL_CHANNELS_ACCESS;
                entity = undefined;
                entity = zulu.bind(entity)(mike);
                return entity;
            };
            oscar['onPress'] = offset;
            oscar['disabled'] = verify;
            oscar = golf.bind(tango)(options, oscar);
            report[2] = oscar;
            entity['children'] = report;
            entity = zulu.bind(tango)(mike, entity);
            return entity;
        }
    };
    zulu['default'] = mike;
    return entity;
})();