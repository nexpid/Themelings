// app/modules/guild_role_subscriptions/native/components/GuildRoleSubscriptionTierConfirmationModal.tsx
export default (function(argFoo, argBar, argBaz, argCorge, _, argFred, argPlugh) {
    report = argBar;
    romeo = argBaz;
    golf = argCorge;
    zulu = argFred;
    oscar = argPlugh;
    var _closure1_slot0 = report;
    var _closure1_slot1 = romeo;
    var _closure1_slot2 = oscar;
    entity = global;
    verify = entity.Object;
    options = verify.defineProperty;
    tango = {};
    entity = true;
    tango['value'] = entity;
    entity = '__esModule';
    entity = options.bind(verify)(zulu, entity, tango);
    entity = 0;
    tango = oscar[entity];
    entity = undefined;
    tango = romeo.bind(entity)(tango);
    var _closure1_slot3 = tango;
    tango = 1;
    tango = oscar[tango];
    tango = romeo.bind(entity)(tango);
    var _closure1_slot4 = tango;
    tango = 2;
    tango = oscar[tango];
    tango = golf.bind(entity)(tango);
    var _closure1_slot5 = tango;
    tango = 3;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.View;
    var _closure1_slot6 = tango;
    tango = 4;
    tango = oscar[tango];
    tango = golf.bind(entity)(tango);
    var _closure1_slot7 = tango;
    tango = 5;
    golf = oscar[tango];
    golf = report.bind(entity)(golf);
    golf = golf.jsx;
    var _closure1_slot8 = golf;
    golf = oscar[tango];
    golf = report.bind(entity)(golf);
    golf = golf.Fragment;
    var _closure1_slot9 = golf;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.jsxs;
    var _closure1_slot10 = tango;
    tango = 6;
    tango = oscar[tango];
    verify = report.bind(entity)(tango);
    options = verify.createStyles;
    golf = {};
    offset = {};
    tango = 16;
    offset['paddingHorizontal'] = tango;
    golf['description'] = offset;
    offset = {};
    offset['marginHorizontal'] = tango;
    golf['coverPhotoContainer'] = offset;
    offset = {'height': 114, 'width': '100%', 'borderRadius': null, 'overflow': 'hidden'};
    yankee = 7;
    yankee = oscar[yankee];
    yankee = romeo.bind(entity)(yankee);
    yankee = yankee.radii;
    yankee = yankee.sm;
    offset['borderRadius'] = yankee;
    golf['coverPhoto'] = offset;
    golf = options.bind(verify)(golf);
    var _closure1_slot11 = golf;
    tango = oscar[tango];
    oscar = report.bind(entity)(tango);
    report = oscar.fileFinishedImporting;
    tango = 'modules/guild_role_subscriptions/native/components/GuildRoleSubscriptionTierConfirmationModal.tsx';
    tango = report.bind(oscar)(tango);
    mike = function(argFoo) { // Original name: GuildRoleSubscriptionTierConfirmationModal
        _fun127266: for(var _fun127266_ip = 0; ; ) switch(_fun127266_ip) {
 0:
            report = argFoo;
            result = report.onDone;
            var _closure2_slot0 = result;
            golf = report.isForGroupSetupModal;
            tango = undefined;
            if(!(golf === tango)) { _fun127266_ip = 29; continue _fun127266 }
 27:
            golf = false;
 29:
            romeo = null;
            zulu = Object.create(romeo);
            yankee = 0;
            zulu['onDone'] = yankee;
            zulu['isForGroupSetupModal'] = yankee;
            lima = {};
            sierra = report;
            status = zulu;
            oscar = copyDataProperties(lima, sierra, status);
            var _closure2_slot1 = tango;
            mike = _closure1_slot11;
            output = mike.bind(tango)();
            mike = _closure1_slot1;
            foxtrot = _closure1_slot2;
            zulu = 8;
            zulu = foxtrot[zulu];
            zulu = mike.bind(tango)(zulu);
            backup = zulu.bind(tango)();
            echo = _closure1_slot0;
            zulu = 9;
            zulu = foxtrot[zulu];
            options = echo.bind(tango)(zulu);
            zulu = options.useEditStateContext;
            zulu = zulu.bind(options)();
            offset = zulu.guildId;
            verify = zulu.editStateId;
            kilo = _closure1_slot5;
            options = kilo.useState;
            zulu = false;
            options = options.bind(kilo)(zulu);
            source = _closure1_slot4;
            zulu = 2;
            zulu = source.bind(tango)(options, zulu);
            options = zulu[yankee];
            sizing = 1;
            update = zulu[sizing];
            _closure2_slot1 = update;
            control = _closure1_slot7;
            zulu = control.useGroupCoverState;
            zulu = zulu.bind(control)();
            zulu = source.bind(tango)(zulu, sizing);
            record = zulu[yankee];
            zulu = control.useGroupDescriptionState;
            zulu = zulu.bind(control)();
            zulu = source.bind(tango)(zulu, sizing);
            sizing = zulu[yankee];
            yankee = kilo.useCallback;
            zulu = _closure1_slot3;
            entity = function* () {
                entity = function* () { // Original name: ?anon_0_
                    _fun127268: for(var _fun127268_ip = 0; ; ) switch(_fun127268_ip) {
 0:
                        StartGenerator();
                        ResumeGenerator(result_out_reg=0, return_bool_out_reg=1);
                        if(mike) { _fun127268_ip = 89; continue _fun127268 }
 7: // try_start_0
                        tango = _closure2_slot1;
                        report = undefined;
                        mike = true;
                        mike = tango.bind(report)(mike);
                        mike = _closure2_slot0;
                        mike = mike.bind(report)();
                        SaveGenerator(address=35);
 33:
                        return mike;
 35:
                        ResumeGenerator(result_out_reg=1, return_bool_out_reg=3);
                        if(tango) { _fun127268_ip = 55; continue _fun127268 }
 41: // try_end0
                        oscar = _closure2_slot1;
                        tango = false;
                        tango = oscar.bind(report)(tango);
                        return report;
 55:
                        tango = _closure2_slot1;
                        zulu = false;
                        zulu = tango.bind(report)(zulu);
                        return mike;
 69: // catch_target0
                        CatchBlockStart(arg_register=1);
                        report = _closure2_slot1;
                        tango = undefined;
                        zulu = false;
                        zulu = report.bind(tango)(zulu);
                        throw mike;
 89:
                        return entity;
                    }
                };
                return entity;
            };
            zulu = zulu.bind(tango)(entity);
            entity = new Array(2);
            entity[0] = update;
            entity[1] = result;
            yankee = yankee.bind(kilo)(zulu, entity);
            zulu = _closure1_slot10;
            entity = 10;
            entity = foxtrot[entity];
            mike = mike.bind(tango)(entity);
            entity = {};
            update = 11;
            kilo = foxtrot[update];
            kilo = echo.bind(tango)(kilo);
            source = kilo.intl;
            result = source.string;
            kilo = foxtrot[update];
            kilo = echo.bind(tango)(kilo);
            kilo = kilo.t;
            kilo = kilo.T0lZnZ;
            kilo = result.bind(source)(kilo);
            entity['title'] = kilo;
            kilo = foxtrot[update];
            kilo = echo.bind(tango)(kilo);
            result = kilo.intl;
            kilo = result.string;
            foxtrot = foxtrot[update];
            foxtrot = echo.bind(tango)(foxtrot);
            foxtrot = foxtrot.t;
            foxtrot = foxtrot.ltfNIi;
            foxtrot = kilo.bind(result)(foxtrot);
            entity['description'] = foxtrot;
            foxtrot = !options;
            entity['canProceedToNextStep'] = foxtrot;
            entity['nextStep'] = romeo;
            entity['onProceed'] = yankee;
            entity['submitting'] = options;
            lima = entity;
            sierra = oscar;
            oscar = copyDataProperties(lima, sierra);
            if(!golf) { _fun127266_ip = 802; continue _fun127266 }
 417:
            yankee = _closure1_slot10;
            options = _closure1_slot9;
            oscar = {};
            foxtrot = romeo != record;
            if(!foxtrot) { _fun127266_ip = 631; continue _fun127266 }
 437:
            result = _closure1_slot10;
            kilo = _closure1_slot9;
            romeo = {};
            vacuum = _closure1_slot8;
            config = _closure1_slot1;
            context = _closure1_slot2;
            echo = 12;
            echo = context[echo];
            source = config.bind(tango)(echo);
            echo = {};
            control = backup.header;
            echo['style'] = control;
            target = _closure1_slot0;
            control = context[update];
            control = target.bind(tango)(control);
            papa = control.intl;
            sequence = papa.string;
            control = context[update];
            control = target.bind(tango)(control);
            control = control.t;
            control = control.3S8gAw;
            control = sequence.bind(papa)(control);
            echo['children'] = control;
            source = vacuum.bind(tango)(source, echo);
            echo = new Array(2);
            echo[0] = source;
            control = _closure1_slot6;
            source = {};
            sequence = output.coverPhotoContainer;
            source['style'] = sequence;
            sequence = 13;
            sequence = context[sequence];
            config = config.bind(tango)(sequence);
            sequence = {};
            context = output.coverPhoto;
            sequence['style'] = context;
            context = 'cover';
            sequence['resizeMode'] = context;
            sequence['source'] = record;
            sequence = vacuum.bind(tango)(config, sequence);
            source['children'] = sequence;
            source = vacuum.bind(tango)(control, source);
            echo[1] = source;
            romeo['children'] = echo;
            foxtrot = result.bind(tango)(kilo, romeo);
 631:
            romeo = new Array(3);
            romeo[0] = foxtrot;
            kilo = _closure1_slot8;
            echo = _closure1_slot1;
            result = _closure1_slot2;
            foxtrot = 12;
            foxtrot = result[foxtrot];
            echo = echo.bind(tango)(foxtrot);
            foxtrot = {};
            backup = backup.header;
            foxtrot['style'] = backup;
            backup = _closure1_slot0;
            source = result[update];
            source = backup.bind(tango)(source);
            control = source.intl;
            source = control.string;
            update = result[update];
            update = backup.bind(tango)(update);
            update = update.t;
            update = update.74Jctb;
            update = source.bind(control)(update);
            foxtrot['children'] = update;
            foxtrot = kilo.bind(tango)(echo, foxtrot);
            romeo[1] = foxtrot;
            foxtrot = 14;
            foxtrot = result[foxtrot];
            foxtrot = backup.bind(tango)(foxtrot);
            backup = foxtrot.Text;
            foxtrot = {'style': null, 'variant': 'text-md/medium', 'color': 'interactive-active'};
            output = output.description;
            foxtrot['style'] = output;
            foxtrot['children'] = sizing;
            foxtrot = kilo.bind(tango)(backup, foxtrot);
            romeo[2] = foxtrot;
            oscar['children'] = romeo;
            golf = yankee.bind(tango)(options, oscar);
 802:
            oscar = new Array(2);
            oscar[0] = golf;
            options = _closure1_slot8;
            golf = _closure1_slot0;
            yankee = _closure1_slot2;
            report = 15;
            report = yankee[report];
            report = golf.bind(tango)(report);
            golf = report.GuildRoleSubscriptionListingPreview;
            report = {};
            report['guildId'] = offset;
            report['listingId'] = verify;
            report = options.bind(tango)(golf, report);
            oscar[1] = report;
            report = 'children';
            entity[report] = oscar;
            entity = zulu.bind(tango)(mike, entity);
            return entity;
        }
    };
    zulu['default'] = mike;
    return entity;
})();