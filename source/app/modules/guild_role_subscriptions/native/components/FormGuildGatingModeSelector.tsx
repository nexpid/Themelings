// app/modules/guild_role_subscriptions/native/components/FormGuildGatingModeSelector.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    report = argBar;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    entity = argBaz;
    var _closure1_slot1 = entity;
    var _closure1_slot2 = oscard;
    entity = global;
    option = entity.Object;
    golfie = option.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(option)(zuuluu, entity, tangon);
    entity = 0;
    golfie = oscard[entity];
    tangon = argCor;
    entity = undefined;
    tangon = tangon.bind(entity)(golfie);
    var _closure1_slot3 = tangon;
    tangon = 1;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.View;
    var _closure1_slot4 = tangon;
    tangon = 2;
    golfie = oscard[tangon];
    golfie = report.bind(entity)(golfie);
    golfie = golfie.jsx;
    var _closure1_slot5 = golfie;
    golfie = oscard[tangon];
    golfie = report.bind(entity)(golfie);
    golfie = golfie.Fragment;
    var _closure1_slot6 = golfie;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.jsxs;
    var _closure1_slot7 = tangon;
    tangon = 3;
    tangon = oscard[tangon];
    option = report.bind(entity)(tangon);
    golfie = option.createStyles;
    tangon = {};
    verify = {};
    offset = 16;
    verify['padding'] = offset;
    tangon['container'] = verify;
    verify = {};
    yankee = 8;
    verify['height'] = yankee;
    tangon['space'] = verify;
    verify = {};
    verify['paddingBottom'] = offset;
    tangon['alertHeader'] = verify;
    tangon = golfie.bind(option)(tangon);
    var _closure1_slot8 = tangon;
    tangon = 11;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/guild_role_subscriptions/native/components/FormGuildGatingModeSelector.tsx';
    tangon = report.bind(oscard)(tangon);
    michal = function(argFoo) { // Original name: FormGuildGatingModeSelector
        michal = argFoo;
        yankee = michal.isFullServerGating;
        var _closure2_slot0 = yankee;
        golfie = michal.onChange;
        var _closure2_slot1 = golfie;
        michal = _closure1_slot8;
        tangon = undefined;
        foxtra = michal.bind(tangon)();
        var _closure2_slot2 = foxtra;
        kiloes = _closure1_slot0;
        sizing = _closure1_slot2;
        michal = 4;
        michal = sizing[michal];
        zuuluu = kiloes.bind(tangon)(michal);
        michal = zuuluu.useRoleSubscriptionSettingsDisabled;
        verify = michal.bind(zuuluu)();
        oscard = _closure1_slot3;
        option = oscard.useCallback;
        zuuluu = new Array(1);
        zuuluu[0] = golfie;
        michal = function() {
            zuuluu = _closure2_slot1;
            entity = undefined;
            michal = false;
            michal = zuuluu.bind(entity)(michal);
            return entity;
        };
        output = option.bind(oscard)(michal, zuuluu);
        zuuluu = oscard.useCallback;
        michal = new Array(3);
        michal[0] = golfie;
        michal[1] = yankee;
        michal[2] = foxtra;
        entity = function() {
            _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
                michal = _closure2_slot0;
                if(michal) { _fun00002_ip = 332; continue _fun00001 }
 13:
                zuuluu = _closure1_slot1;
                output = _closure1_slot2;
                michal = 5;
                michal = output[michal];
                option = undefined;
                tangon = zuuluu.bind(option)(michal);
                zuuluu = tangon.show;
                michal = {};
                sizing = _closure1_slot0;
                foxtra = 6;
                report = output[foxtra];
                report = sizing.bind(option)(report);
                golfie = report.intl;
                oscard = golfie.string;
                report = output[foxtra];
                report = sizing.bind(option)(report);
                report = report.t;
                report = report.NX+WJC;
                report = oscard.bind(golfie)(report);
                michal['confirmText'] = report;
                golfie = _closure1_slot7;
                oscard = _closure1_slot6;
                report = {};
                romeon = _closure1_slot5;
                offset = 7;
                verify = output[offset];
                verify = sizing.bind(option)(verify);
                yankee = verify.Text;
                verify = {'style': null, 'variant': 'heading-lg/bold', 'color': 'header-primary'};
                backup = _closure2_slot2;
                backup = backup.alertHeader;
                verify['style'] = backup;
                backup = output[foxtra];
                backup = sizing.bind(option)(backup);
                result = backup.intl;
                kiloes = result.string;
                backup = output[foxtra];
                backup = sizing.bind(option)(backup);
                backup = backup.t;
                backup = backup.dmVoOz;
                backup = kiloes.bind(result)(backup);
                verify['children'] = backup;
                yankee = romeon.bind(option)(yankee, verify);
                verify = new Array(2);
                verify[0] = yankee;
                offset = output[offset];
                offset = sizing.bind(option)(offset);
                yankee = offset.Text;
                offset = {};
                backup = 'text-md/normal';
                offset['variant'] = backup;
                backup = output[foxtra];
                backup = sizing.bind(option)(backup);
                kiloes = backup.intl;
                backup = kiloes.string;
                foxtra = output[foxtra];
                foxtra = sizing.bind(option)(foxtra);
                foxtra = foxtra.t;
                foxtra = foxtra.mtwzdH;
                foxtra = backup.bind(kiloes)(foxtra);
                offset['children'] = foxtra;
                offset = romeon.bind(option)(yankee, offset);
                verify[1] = offset;
                report['children'] = verify;
                report = golfie.bind(option)(oscard, report);
                michal['children'] = report;
                michal = zuuluu.bind(tangon)(michal);
 332:
                zuuluu = _closure2_slot1;
                entity = undefined;
                michal = true;
                michal = zuuluu.bind(entity)(michal);
                return entity;
            }
        };
        offset = zuuluu.bind(oscard)(entity, michal);
        zuuluu = _closure1_slot7;
        michal = _closure1_slot4;
        entity = {};
        oscard = foxtra.container;
        entity['style'] = oscard;
        oscard = 'radiogroup';
        entity['accessibilityRole'] = oscard;
        oscard = {};
        oscard['disabled'] = verify;
        entity['accessibilityState'] = oscard;
        option = _closure1_slot5;
        backup = _closure1_slot1;
        oscard = 8;
        report = sizing[oscard];
        golfie = backup.bind(tangon)(report);
        report = {};
        romeon = 9;
        romeon = sizing[romeon];
        romeon = backup.bind(tangon)(romeon);
        report['icon'] = romeon;
        romeon = 6;
        result = sizing[romeon];
        result = kiloes.bind(tangon)(result);
        update = result.intl;
        echoed = update.string;
        result = sizing[romeon];
        result = kiloes.bind(tangon)(result);
        result = result.t;
        result = result.rXqxhI;
        result = echoed.bind(update)(result);
        report['title'] = result;
        result = sizing[romeon];
        result = kiloes.bind(tangon)(result);
        update = result.intl;
        echoed = update.string;
        result = sizing[romeon];
        result = kiloes.bind(tangon)(result);
        result = result.t;
        result = result.yQiJnZ;
        result = echoed.bind(update)(result);
        report['description'] = result;
        result = !yankee;
        report['selected'] = result;
        report['onPress'] = output;
        report['disabled'] = verify;
        golfie = option.bind(tangon)(golfie, report);
        report = new Array(3);
        report[0] = golfie;
        golfie = {};
        foxtra = foxtra.space;
        golfie['style'] = foxtra;
        golfie = option.bind(tangon)(michal, golfie);
        report[1] = golfie;
        oscard = sizing[oscard];
        golfie = backup.bind(tangon)(oscard);
        oscard = {};
        foxtra = 10;
        foxtra = sizing[foxtra];
        foxtra = backup.bind(tangon)(foxtra);
        oscard['icon'] = foxtra;
        foxtra = sizing[romeon];
        foxtra = kiloes.bind(tangon)(foxtra);
        output = foxtra.intl;
        backup = output.string;
        foxtra = sizing[romeon];
        foxtra = kiloes.bind(tangon)(foxtra);
        foxtra = foxtra.t;
        foxtra = foxtra.WzC9s7;
        foxtra = backup.bind(output)(foxtra);
        oscard['title'] = foxtra;
        foxtra = sizing[romeon];
        foxtra = kiloes.bind(tangon)(foxtra);
        backup = foxtra.intl;
        foxtra = backup.string;
        romeon = sizing[romeon];
        romeon = kiloes.bind(tangon)(romeon);
        romeon = romeon.t;
        romeon = romeon.WmagiI;
        romeon = foxtra.bind(backup)(romeon);
        oscard['description'] = romeon;
        oscard['selected'] = yankee;
        oscard['onPress'] = offset;
        oscard['disabled'] = verify;
        oscard = option.bind(tangon)(golfie, oscard);
        report[2] = oscard;
        entity['children'] = report;
        entity = zuuluu.bind(tangon)(michal, entity);
        return entity;
    };
    zuuluu['default'] = michal;
    return entity;
})();