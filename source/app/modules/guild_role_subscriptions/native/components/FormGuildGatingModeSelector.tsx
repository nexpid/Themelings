// app/modules/guild_role_subscriptions/native/components/FormGuildGatingModeSelector.tsx
export default (function(argFoo, argBar, argBaz, argCorge, _, argFred, argPlugh) {
    report = argBar;
    zulu = argFred;
    oscar = argPlugh;
    var _closure1_slot0 = report;
    entity = argBaz;
    var _closure1_slot1 = entity;
    var _closure1_slot2 = oscar;
    entity = global;
    options = entity.Object;
    golf = options.defineProperty;
    tango = {};
    entity = true;
    tango['value'] = entity;
    entity = '__esModule';
    entity = golf.bind(options)(zulu, entity, tango);
    entity = 0;
    golf = oscar[entity];
    tango = argCorge;
    entity = undefined;
    tango = tango.bind(entity)(golf);
    var _closure1_slot3 = tango;
    tango = 1;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.View;
    var _closure1_slot4 = tango;
    tango = 2;
    golf = oscar[tango];
    golf = report.bind(entity)(golf);
    golf = golf.jsx;
    var _closure1_slot5 = golf;
    golf = oscar[tango];
    golf = report.bind(entity)(golf);
    golf = golf.Fragment;
    var _closure1_slot6 = golf;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.jsxs;
    var _closure1_slot7 = tango;
    tango = 3;
    tango = oscar[tango];
    options = report.bind(entity)(tango);
    golf = options.createStyles;
    tango = {};
    verify = {};
    offset = 16;
    verify['padding'] = offset;
    tango['container'] = verify;
    verify = {};
    yankee = 8;
    verify['height'] = yankee;
    tango['space'] = verify;
    verify = {};
    verify['paddingBottom'] = offset;
    tango['alertHeader'] = verify;
    tango = golf.bind(options)(tango);
    var _closure1_slot8 = tango;
    tango = 11;
    tango = oscar[tango];
    oscar = report.bind(entity)(tango);
    report = oscar.fileFinishedImporting;
    tango = 'modules/guild_role_subscriptions/native/components/FormGuildGatingModeSelector.tsx';
    tango = report.bind(oscar)(tango);
    mike = function(argFoo) { // Original name: FormGuildGatingModeSelector
        mike = argFoo;
        yankee = mike.isFullServerGating;
        var _closure2_slot0 = yankee;
        golf = mike.onChange;
        var _closure2_slot1 = golf;
        mike = _closure1_slot8;
        tango = undefined;
        foxtrot = mike.bind(tango)();
        var _closure2_slot2 = foxtrot;
        kilo = _closure1_slot0;
        sizing = _closure1_slot2;
        mike = 4;
        mike = sizing[mike];
        zulu = kilo.bind(tango)(mike);
        mike = zulu.useRoleSubscriptionSettingsDisabled;
        verify = mike.bind(zulu)();
        oscar = _closure1_slot3;
        options = oscar.useCallback;
        zulu = new Array(1);
        zulu[0] = golf;
        mike = function() {
            zulu = _closure2_slot1;
            entity = undefined;
            mike = false;
            mike = zulu.bind(entity)(mike);
            return entity;
        };
        output = options.bind(oscar)(mike, zulu);
        zulu = oscar.useCallback;
        mike = new Array(3);
        mike[0] = golf;
        mike[1] = yankee;
        mike[2] = foxtrot;
        entity = function() {
            _fun126964: for(var _fun126964_ip = 0; ; ) switch(_fun126964_ip) {
 0:
                mike = _closure2_slot0;
                if(mike) { _fun126964_ip = 324; continue _fun126964 }
 13:
                zulu = _closure1_slot1;
                output = _closure1_slot2;
                mike = 5;
                mike = output[mike];
                options = undefined;
                tango = zulu.bind(options)(mike);
                zulu = tango.show;
                mike = {};
                sizing = _closure1_slot0;
                foxtrot = 6;
                report = output[foxtrot];
                report = sizing.bind(options)(report);
                golf = report.intl;
                oscar = golf.string;
                report = output[foxtrot];
                report = sizing.bind(options)(report);
                report = report.t;
                report = report.NX+WJC;
                report = oscar.bind(golf)(report);
                mike['confirmText'] = report;
                golf = _closure1_slot7;
                oscar = _closure1_slot6;
                report = {};
                romeo = _closure1_slot5;
                offset = 7;
                verify = output[offset];
                verify = sizing.bind(options)(verify);
                yankee = verify.Text;
                verify = {'style': null, 'variant': 'heading-lg/bold', 'color': 'header-primary'};
                backup = _closure2_slot2;
                backup = backup.alertHeader;
                verify['style'] = backup;
                backup = output[foxtrot];
                backup = sizing.bind(options)(backup);
                result = backup.intl;
                kilo = result.string;
                backup = output[foxtrot];
                backup = sizing.bind(options)(backup);
                backup = backup.t;
                backup = backup.dmVoOz;
                backup = kilo.bind(result)(backup);
                verify['children'] = backup;
                yankee = romeo.bind(options)(yankee, verify);
                verify = new Array(2);
                verify[0] = yankee;
                offset = output[offset];
                offset = sizing.bind(options)(offset);
                yankee = offset.Text;
                offset = {};
                backup = 'text-md/normal';
                offset['variant'] = backup;
                backup = output[foxtrot];
                backup = sizing.bind(options)(backup);
                kilo = backup.intl;
                backup = kilo.string;
                foxtrot = output[foxtrot];
                foxtrot = sizing.bind(options)(foxtrot);
                foxtrot = foxtrot.t;
                foxtrot = foxtrot.mtwzdH;
                foxtrot = backup.bind(kilo)(foxtrot);
                offset['children'] = foxtrot;
                offset = romeo.bind(options)(yankee, offset);
                verify[1] = offset;
                report['children'] = verify;
                report = golf.bind(options)(oscar, report);
                mike['children'] = report;
                mike = zulu.bind(tango)(mike);
 324:
                zulu = _closure2_slot1;
                entity = undefined;
                mike = true;
                mike = zulu.bind(entity)(mike);
                return entity;
            }
        };
        offset = zulu.bind(oscar)(entity, mike);
        zulu = _closure1_slot7;
        mike = _closure1_slot4;
        entity = {};
        oscar = foxtrot.container;
        entity['style'] = oscar;
        oscar = 'radiogroup';
        entity['accessibilityRole'] = oscar;
        oscar = {};
        oscar['disabled'] = verify;
        entity['accessibilityState'] = oscar;
        options = _closure1_slot5;
        backup = _closure1_slot1;
        oscar = 8;
        report = sizing[oscar];
        golf = backup.bind(tango)(report);
        report = {};
        romeo = 9;
        romeo = sizing[romeo];
        romeo = backup.bind(tango)(romeo);
        report['icon'] = romeo;
        romeo = 6;
        result = sizing[romeo];
        result = kilo.bind(tango)(result);
        update = result.intl;
        echo = update.string;
        result = sizing[romeo];
        result = kilo.bind(tango)(result);
        result = result.t;
        result = result.rXqxhI;
        result = echo.bind(update)(result);
        report['title'] = result;
        result = sizing[romeo];
        result = kilo.bind(tango)(result);
        update = result.intl;
        echo = update.string;
        result = sizing[romeo];
        result = kilo.bind(tango)(result);
        result = result.t;
        result = result.yQiJnZ;
        result = echo.bind(update)(result);
        report['description'] = result;
        result = !yankee;
        report['selected'] = result;
        report['onPress'] = output;
        report['disabled'] = verify;
        golf = options.bind(tango)(golf, report);
        report = new Array(3);
        report[0] = golf;
        golf = {};
        foxtrot = foxtrot.space;
        golf['style'] = foxtrot;
        golf = options.bind(tango)(mike, golf);
        report[1] = golf;
        oscar = sizing[oscar];
        golf = backup.bind(tango)(oscar);
        oscar = {};
        foxtrot = 10;
        foxtrot = sizing[foxtrot];
        foxtrot = backup.bind(tango)(foxtrot);
        oscar['icon'] = foxtrot;
        foxtrot = sizing[romeo];
        foxtrot = kilo.bind(tango)(foxtrot);
        output = foxtrot.intl;
        backup = output.string;
        foxtrot = sizing[romeo];
        foxtrot = kilo.bind(tango)(foxtrot);
        foxtrot = foxtrot.t;
        foxtrot = foxtrot.WzC9s7;
        foxtrot = backup.bind(output)(foxtrot);
        oscar['title'] = foxtrot;
        foxtrot = sizing[romeo];
        foxtrot = kilo.bind(tango)(foxtrot);
        backup = foxtrot.intl;
        foxtrot = backup.string;
        romeo = sizing[romeo];
        romeo = kilo.bind(tango)(romeo);
        romeo = romeo.t;
        romeo = romeo.WmagiI;
        romeo = foxtrot.bind(backup)(romeo);
        oscar['description'] = romeo;
        oscar['selected'] = yankee;
        oscar['onPress'] = offset;
        oscar['disabled'] = verify;
        oscar = options.bind(tango)(golf, oscar);
        report[2] = oscar;
        entity['children'] = report;
        entity = zulu.bind(tango)(mike, entity);
        return entity;
    };
    zulu['default'] = mike;
    return entity;
})();