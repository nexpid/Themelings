// app/modules/guild_role_subscriptions/native/components/GuildRoleSubscriptionBenefitModalHeader.tsx
export default (function(argFoo, argBar, argBaz, argCorge, _, argFred, argPlugh) {
    report = argBar;
    romeo = argBaz;
    golf = argCorge;
    zulu = argFred;
    oscar = argPlugh;
    var _closure1_slot0 = report;
    var _closure1_slot1 = romeo;
    var _closure1_slot2 = golf;
    var _closure1_slot3 = oscar;
    entity = global;
    verify = entity.Object;
    options = verify.defineProperty;
    tango = {};
    entity = true;
    tango['value'] = entity;
    entity = '__esModule';
    entity = options.bind(verify)(zulu, entity, tango);
    entity = 0;
    tango = oscar[entity];
    entity = undefined;
    tango = romeo.bind(entity)(tango);
    var _closure1_slot4 = tango;
    tango = 1;
    tango = oscar[tango];
    tango = golf.bind(entity)(tango);
    tango = 2;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.View;
    var _closure1_slot5 = tango;
    tango = 3;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    foxtrot = tango.Fonts;
    tango = 4;
    golf = oscar[tango];
    golf = report.bind(entity)(golf);
    golf = golf.jsx;
    var _closure1_slot6 = golf;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.jsxs;
    var _closure1_slot7 = tango;
    tango = 5;
    tango = oscar[tango];
    options = report.bind(entity)(tango);
    golf = options.createStyles;
    tango = {};
    verify = {'alignItems': 'center', 'backgroundColor': null, 'flexDirection': 'row', 'justifyContent': 'space-between', 'paddingBottom': 8, 'paddingHorizontal': 16};
    offset = 'center';
    yankee = 6;
    backup = oscar[yankee];
    backup = romeo.bind(entity)(backup);
    backup = backup.colors;
    backup = backup.BACKGROUND_TERTIARY;
    verify['backgroundColor'] = backup;
    result = 16;
    tango['headerContainer'] = verify;
    verify = {'flexDirection': 'row', 'alignSelf': 'center', 'minWidth': 60};
    tango['headerButtonContainer'] = verify;
    verify = {};
    backup = 'flex-start';
    verify['alignItems'] = backup;
    tango['headerButtonStart'] = verify;
    verify = {};
    backup = 'flex-end';
    verify['alignItems'] = backup;
    tango['headerButtonEnd'] = verify;
    verify = {};
    backup = 7;
    kilo = oscar[backup];
    output = romeo.bind(entity)(kilo);
    sizing = foxtrot.PRIMARY_MEDIUM;
    kilo = oscar[yankee];
    kilo = romeo.bind(entity)(kilo);
    kilo = kilo.colors;
    kilo = kilo.INTERACTIVE_ACTIVE;
    update = output.bind(entity)(sizing, kilo, result);
    source = verify;
    kilo = copyDataProperties(source, update);
    tango['headerButton'] = verify;
    verify = {};
    kilo = oscar[backup];
    output = romeo.bind(entity)(kilo);
    sizing = foxtrot.PRIMARY_MEDIUM;
    kilo = oscar[yankee];
    kilo = romeo.bind(entity)(kilo);
    kilo = kilo.colors;
    kilo = kilo.INTERACTIVE_MUTED;
    update = output.bind(entity)(sizing, kilo, result);
    source = verify;
    kilo = copyDataProperties(source, update);
    tango['disabledButton'] = verify;
    verify = {'flex': 1, 'flexDirection': 'column'};
    tango['titleContainer'] = verify;
    verify = {};
    backup = oscar[backup];
    backup = romeo.bind(entity)(backup);
    foxtrot = foxtrot.DISPLAY_EXTRABOLD;
    yankee = oscar[yankee];
    yankee = romeo.bind(entity)(yankee);
    yankee = yankee.colors;
    romeo = yankee.HEADER_PRIMARY;
    yankee = 18;
    update = backup.bind(entity)(foxtrot, romeo, yankee);
    source = verify;
    yankee = copyDataProperties(source, update);
    yankee = 'textAlign';
    verify[yankee] = offset;
    tango['title'] = verify;
    verify = {};
    verify['textAlign'] = offset;
    tango['subtitle'] = verify;
    tango = golf.bind(options)(tango);
    var _closure1_slot8 = tango;
    tango = 14;
    tango = oscar[tango];
    oscar = report.bind(entity)(tango);
    report = oscar.fileFinishedImporting;
    tango = 'modules/guild_role_subscriptions/native/components/GuildRoleSubscriptionBenefitModalHeader.tsx';
    tango = report.bind(oscar)(tango);
    mike = function(argFoo) { // Original name: GuildRoleSubscriptionBenefitModalHeader
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            entity = argFoo;
            sequence = entity.title;
            foxtrot = entity.canSave;
            sizing = entity.onSave;
            kilo = entity.onClose;
            zulu = entity.listingId;
            entity = _closure1_slot8;
            tango = undefined;
            backup = entity.bind(tango)();
            mike = _closure1_slot2;
            romeo = _closure1_slot3;
            entity = 8;
            entity = romeo[entity];
            mike = mike.bind(tango)(entity);
            entity = mike.useName;
            zulu = entity.bind(mike)(zulu);
            mike = _closure1_slot4;
            entity = 1;
            mike = mike.bind(tango)(zulu, entity);
            entity = 0;
            vacuum = mike[entity];
            zulu = _closure1_slot7;
            offset = _closure1_slot0;
            entity = 9;
            entity = romeo[entity];
            entity = offset.bind(tango)(entity);
            mike = entity.SafeAreaPaddingView;
            entity = {};
            report = true;
            entity['top'] = report;
            report = backup.headerContainer;
            entity['style'] = report;
            options = _closure1_slot6;
            golf = _closure1_slot1;
            oscar = 10;
            report = romeo[oscar];
            verify = golf.bind(tango)(report);
            report = {};
            result = backup.headerButtonContainer;
            output = new Array(2);
            output[0] = result;
            result = backup.headerButtonStart;
            output[1] = result;
            report['style'] = output;
            output = 'button';
            report['accessibilityRole'] = output;
            report['onPress'] = kilo;
            source = 11;
            kilo = romeo[source];
            kilo = offset.bind(tango)(kilo);
            echo = kilo.Text;
            result = {'style': null, 'variant': 'text-md/medium', 'color': 'interactive-active'};
            kilo = backup.headerButton;
            result['style'] = kilo;
            kilo = 12;
            update = romeo[kilo];
            update = offset.bind(tango)(update);
            config = update.intl;
            control = config.string;
            update = romeo[kilo];
            update = offset.bind(tango)(update);
            update = update.t;
            update = update.ETE/oK;
            update = control.bind(config)(update);
            result['children'] = update;
            result = options.bind(tango)(echo, result);
            report['children'] = result;
            verify = options.bind(tango)(verify, report);
            report = new Array(3);
            report[0] = verify;
            echo = _closure1_slot5;
            result = {};
            verify = backup.titleContainer;
            result['style'] = verify;
            verify = 13;
            update = romeo[verify];
            update = offset.bind(tango)(update);
            control = update.LegacyText;
            update = {};
            config = backup.title;
            update['style'] = config;
            config = 'header';
            update['accessibilityRole'] = config;
            update['children'] = sequence;
            control = options.bind(tango)(control, update);
            update = new Array(2);
            update[0] = control;
            source = romeo[source];
            source = offset.bind(tango)(source);
            control = source.Text;
            source = {'style': null, 'variant': 'text-xs/medium', 'color': 'header-secondary'};
            sequence = backup.subtitle;
            source['style'] = sequence;
            source['children'] = vacuum;
            source = options.bind(tango)(control, source);
            update[1] = source;
            result['children'] = update;
            result = zulu.bind(tango)(echo, result);
            report[1] = result;
            oscar = romeo[oscar];
            golf = golf.bind(tango)(oscar);
            oscar = {};
            echo = backup.headerButtonContainer;
            result = new Array(2);
            result[0] = echo;
            echo = backup.headerButtonEnd;
            result[1] = echo;
            oscar['style'] = result;
            oscar['accessibilityRole'] = output;
            output = !foxtrot;
            oscar['disabled'] = output;
            oscar['onPress'] = sizing;
            verify = romeo[verify];
            verify = offset.bind(tango)(verify);
            offset = verify.LegacyText;
            verify = {};
            sizing = backup.headerButton;
            romeo = new Array(2);
            romeo[0] = sizing;
            foxtrot = !foxtrot;
            if(!foxtrot) { _fun00002_ip = 555; continue _fun00001 }
 549:
            foxtrot = backup.disabledButton;
 555:
            romeo[1] = foxtrot;
            verify['style'] = romeo;
            backup = _closure1_slot0;
            yankee = _closure1_slot3;
            romeo = yankee[kilo];
            romeo = backup.bind(tango)(romeo);
            foxtrot = romeo.intl;
            romeo = foxtrot.string;
            yankee = yankee[kilo];
            yankee = backup.bind(tango)(yankee);
            yankee = yankee.t;
            yankee = yankee.R3BPHx;
            yankee = romeo.bind(foxtrot)(yankee);
            verify['children'] = yankee;
            verify = options.bind(tango)(offset, verify);
            oscar['children'] = verify;
            oscar = options.bind(tango)(golf, oscar);
            report[2] = oscar;
            entity['children'] = report;
            entity = zulu.bind(tango)(mike, entity);
            return entity;
        }
    };
    zulu['default'] = mike;
    return entity;
})();