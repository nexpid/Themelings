// app/modules/keyboard/native/useKeyboardType.tsx
export default (function(global, require, metroImportDefault, metroImportAll, moduleObject, exports, dependencyMap) {
    var7 = require;
    var3 = exports;
    var8 = dependencyMap;
    var _closure1_slot0 = var7;
    var1 = metroImportDefault;
    var _closure1_slot1 = var1;
    var _closure1_slot2 = var8;
    var5 = function getKeyboardContextForType(arg1) {
        var3 = _closure1_slot1;
        var2 = _closure1_slot2;
        var1 = 1;
        var2 = var2[var1];
        var1 = undefined;
        var2 = var3.bind(var1)(var2);
        var1 = var2.getState;
        var1 = var1.bind(var2)();
        var2 = var1.keyboardContexts;
        var1 = arg1;
        var1 = var2[var1];
        return var1;
    };
    var _closure1_slot6 = var5;
    var4 = function getKeyboardType() {
        var3 = _closure1_slot4;
        var4 = _closure1_slot1;
        var2 = _closure1_slot2;
        var1 = 1;
        var1 = var2[var1];
        var2 = undefined;
        var4 = var4.bind(var2)(var1);
        var1 = var4.getState;
        var1 = var1.bind(var4)();
        var1 = var3.bind(var2)(var1);
        return var1;
    };
    var _closure1_slot7 = var4;
    var1 = global;
    var10 = var1.Object;
    var9 = var10.defineProperty;
    var6 = {};
    var1 = true;
    var6['value'] = var1;
    var1 = '__esModule';
    var1 = var9.bind(var10)(var3, var1, var6);
    var1 = 0;
    var9 = var8[var1];
    var6 = metroImportAll;
    var1 = undefined;
    var6 = var6.bind(var1)(var9);
    var _closure1_slot3 = var6;
    var6 = function KEYBOARD_TYPE_GETTER(arg1) {
        var1 = arg1;
        var1 = var1.keyboardType;
        return var1;
    };
    var _closure1_slot4 = var6;
    var6 = function KEYBOARD_TYPE_PREVIOUS_GETTER(arg1) {
        var1 = arg1;
        var1 = var1.keyboardTypePrevious;
        return var1;
    };
    var _closure1_slot5 = var6;
    var6 = 4;
    var6 = var8[var6];
    var8 = var7.bind(var1)(var6);
    var7 = var8.fileFinishedImporting;
    var6 = 'modules/keyboard/native/useKeyboardType.tsx';
    var6 = var7.bind(var8)(var6);
    var6 = function useKeyboardType() {
        var4 = _closure1_slot1;
        var3 = _closure1_slot2;
        var2 = 1;
        var2 = var3[var2];
        var3 = undefined;
        var2 = var4.bind(var3)(var2);
        var1 = _closure1_slot4;
        var1 = var2.bind(var3)(var1);
        return var1;
    };
    var3['default'] = var6;
    var3['getKeyboardContextForType'] = var5;
    var5 = function useKeyboardContextForType(arg1) {
        var2 = arg1;
        var _closure2_slot0 = var2;
        var4 = _closure1_slot1;
        var3 = _closure1_slot2;
        var2 = 1;
        var2 = var3[var2];
        var3 = undefined;
        var2 = var4.bind(var3)(var2);
        var1 = function(arg1) {
            var1 = arg1;
            var2 = var1.keyboardContexts;
            var1 = _closure2_slot0;
            var1 = var2[var1];
            return var1;
        };
        var1 = var2.bind(var3)(var1);
        return var1;
    };
    var3['useKeyboardContextForType'] = var5;
    var3['getKeyboardType'] = var4;
    var4 = function getKeyboardTypePrevious() {
        var3 = _closure1_slot5;
        var4 = _closure1_slot1;
        var2 = _closure1_slot2;
        var1 = 1;
        var1 = var2[var1];
        var2 = undefined;
        var4 = var4.bind(var2)(var1);
        var1 = var4.getState;
        var1 = var1.bind(var4)();
        var1 = var3.bind(var2)(var1);
        return var1;
    };
    var3['getKeyboardTypePrevious'] = var4;
    var4 = function useKeyboardTypePrevious() {
        var4 = _closure1_slot1;
        var3 = _closure1_slot2;
        var2 = 1;
        var2 = var3[var2];
        var3 = undefined;
        var2 = var4.bind(var3)(var2);
        var1 = _closure1_slot5;
        var1 = var2.bind(var3)(var1);
        return var1;
    };
    var3['useKeyboardTypePrevious'] = var4;
    var4 = function useKeyboardTypeSharedValue() {
        var4 = _closure1_slot0;
        var5 = _closure1_slot2;
        var1 = 2;
        var1 = var5[var1];
        var6 = undefined;
        var5 = var4.bind(var6)(var1);
        var4 = var5.useSharedValue;
        var1 = _closure1_slot7;
        var1 = var1.bind(var6)();
        var1 = var4.bind(var5)(var1);
        var _closure2_slot0 = var1;
        var5 = _closure1_slot3;
        var4 = var5.useEffect;
        var3 = new Array(1);
        var3[0] = var1;
        var2 = function() {
            var3 = _closure1_slot0;
            var2 = _closure1_slot2;
            var1 = 1;
            var2 = var2[var1];
            var1 = undefined;
            var3 = var3.bind(var1)(var2);
            var2 = var3.addKeyboardTypeChangedListener;
            var1 = function(arg1) {
                var1 = arg1;
                var3 = var1.type;
                var2 = _closure2_slot0;
                var1 = var2.set;
                var1 = var1.bind(var2)(var3);
                return var1;
            };
            var1 = var2.bind(var3)(var1);
            return var1;
        };
        var2 = var4.bind(var5)(var2, var3);
        return var1;
    };
    var3['useKeyboardTypeSharedValue'] = var4;
    var2 = function useKeyboardWillOpenSharedValue() {
        var8 = _closure1_slot0;
        var9 = _closure1_slot2;
        var1 = 2;
        var1 = var9[var1];
        var7 = undefined;
        var5 = var8.bind(var7)(var1);
        var4 = var5.useSharedValue;
        var6 = _closure1_slot6;
        var1 = 3;
        var1 = var9[var1];
        var1 = var8.bind(var7)(var1);
        var1 = var1.KeyboardTypes;
        var1 = var1.SYSTEM;
        var1 = var6.bind(var7)(var1);
        var6 = var1.keyboardWillOpen;
        var1 = true;
        var1 = var1 === var6;
        var1 = var4.bind(var5)(var1);
        var _closure2_slot0 = var1;
        var5 = _closure1_slot3;
        var4 = var5.useEffect;
        var3 = new Array(1);
        var3[0] = var1;
        var2 = function() {
            var3 = _closure1_slot0;
            var2 = _closure1_slot2;
            var1 = 1;
            var2 = var2[var1];
            var1 = undefined;
            var3 = var3.bind(var1)(var2);
            var2 = var3.addKeyboardWillOpenChangedListener;
            var1 = function(arg1) {
                var3 = _closure2_slot0;
                var2 = var3.set;
                var1 = arg1;
                var1 = var2.bind(var3)(var1);
                return var1;
            };
            var1 = var2.bind(var3)(var1);
            return var1;
        };
        var2 = var4.bind(var5)(var2, var3);
        return var1;
    };
    var3['useKeyboardWillOpenSharedValue'] = var2;
    return var1;
})();