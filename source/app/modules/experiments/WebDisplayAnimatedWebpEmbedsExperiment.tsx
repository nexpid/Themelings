// app/modules/experiments/WebDisplayAnimatedWebpEmbedsExperiment.tsx
export default (function(_, argBar, argBaz, __, ___, argFred, argPlugh) {
    zulu = argFred;
    report = argPlugh;
    entity = global;
    oscar = entity.Object;
    tango = oscar.defineProperty;
    mike = {};
    offset = true;
    mike['value'] = offset;
    entity = '__esModule';
    entity = tango.bind(oscar)(zulu, entity, mike);
    entity = 0;
    tango = report[entity];
    mike = argBaz;
    entity = undefined;
    oscar = mike.bind(entity)(tango);
    mike = {'kind': 'user', 'id': '2024-10_web_display_animated_webp_embeds', 'label': 'Web Display Animated WebP Embeds Experiment'};
    tango = {};
    verify = false;
    tango['enabled'] = verify;
    mike['defaultConfig'] = tango;
    options = {'id': 1, 'label': 'Control treatment'};
    tango = 1;
    golf = {};
    golf['enabled'] = verify;
    options['config'] = golf;
    golf = new Array(2);
    golf[0] = options;
    options = {'id': 2, 'label': 'Animated WebP embeds enabled'};
    verify = {};
    verify['enabled'] = offset;
    options['config'] = verify;
    golf[1] = options;
    mike['treatments'] = golf;
    mike = oscar.bind(entity)(mike);
    report = report[tango];
    tango = argBar;
    oscar = tango.bind(entity)(report);
    report = oscar.fileFinishedImporting;
    tango = 'modules/experiments/WebDisplayAnimatedWebpEmbedsExperiment.tsx';
    tango = report.bind(oscar)(tango);
    zulu['default'] = mike;
    return entity;
})();