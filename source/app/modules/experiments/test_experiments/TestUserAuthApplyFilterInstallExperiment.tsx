// app/modules/experiments/test_experiments/TestUserAuthApplyFilterInstallExperiment.tsx
export default (function(_, argBar, argBaz, __, ___, argFre, argPlu) {
    report = argBar;
    zuuluu = argFre;
    oscard = argPlu;
    entity = global;
    golfie = entity.Object;
    tangon = golfie.defineProperty;
    michal = {};
    verify = true;
    michal['value'] = verify;
    entity = '__esModule';
    entity = tangon.bind(golfie)(zuuluu, entity, michal);
    entity = 0;
    tangon = oscard[entity];
    michal = argBaz;
    entity = undefined;
    tangon = michal.bind(entity)(tangon);
    michal = {'kind': 'user', 'id': '2025-02_test_user_auth_apply_filter_install', 'label': 'Test User Auth Apply Filter Install'};
    golfie = {};
    option = false;
    golfie['enabled'] = option;
    michal['defaultConfig'] = golfie;
    golfie = 1;
    golfie = oscard[golfie];
    golfie = report.bind(entity)(golfie);
    golfie = golfie.CommonTriggerPoints;
    golfie = golfie.CONNECTION_OPEN;
    michal['commonTriggerPoint'] = golfie;
    option = {'id': 1, 'label': 'Variation with treatment enabled'};
    golfie = {};
    golfie['enabled'] = verify;
    option['config'] = golfie;
    golfie = new Array(1);
    golfie[0] = option;
    michal['treatments'] = golfie;
    michal = tangon.bind(entity)(michal);
    tangon = 2;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/experiments/test_experiments/TestUserAuthApplyFilterInstallExperiment.tsx';
    tangon = report.bind(oscard)(tangon);
    zuuluu['TestUserAuthApplyFilterInstallExperiment'] = michal;
    return entity;
})();