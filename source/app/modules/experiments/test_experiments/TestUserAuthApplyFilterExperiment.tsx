// app/modules/experiments/test_experiments/TestUserAuthApplyFilterExperiment.tsx
export default (function(_, argBar, argBaz, __, ___, argFred, argPlugh) {
    report = argBar;
    zulu = argFred;
    oscar = argPlugh;
    entity = global;
    golf = entity.Object;
    tango = golf.defineProperty;
    mike = {};
    verify = true;
    mike['value'] = verify;
    entity = '__esModule';
    entity = tango.bind(golf)(zulu, entity, mike);
    entity = 0;
    tango = oscar[entity];
    mike = argBaz;
    entity = undefined;
    tango = mike.bind(entity)(tango);
    mike = {'kind': 'user', 'id': '2025-02_test_user_auth_apply_filter', 'label': 'Test User Auth Apply Filter'};
    golf = {};
    options = false;
    golf['enabled'] = options;
    mike['defaultConfig'] = golf;
    golf = 1;
    golf = oscar[golf];
    golf = report.bind(entity)(golf);
    golf = golf.CommonTriggerPoints;
    golf = golf.CONNECTION_OPEN;
    mike['commonTriggerPoint'] = golf;
    options = {'id': 1, 'label': 'Variation with treatment enabled'};
    golf = {};
    golf['enabled'] = verify;
    options['config'] = golf;
    golf = new Array(1);
    golf[0] = options;
    mike['treatments'] = golf;
    mike = tango.bind(entity)(mike);
    tango = 2;
    tango = oscar[tango];
    oscar = report.bind(entity)(tango);
    report = oscar.fileFinishedImporting;
    tango = 'modules/experiments/test_experiments/TestUserAuthApplyFilterExperiment.tsx';
    tango = report.bind(oscar)(tango);
    zulu['TestUserAuthApplyFilterExperiment'] = mike;
    return entity;
})();