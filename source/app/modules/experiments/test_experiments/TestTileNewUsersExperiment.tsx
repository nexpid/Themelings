// app/modules/experiments/test_experiments/TestTileNewUsersExperiment.tsx
export default (function(_, argBar, argBaz, __, ___, argFre, argPlu) {
    report = argBar;
    zuuluu = argFre;
    oscard = argPlu;
    entity = global;
    golfie = entity.Object;
    tangon = golfie.defineProperty;
    michal = {};
    yankee = true;
    michal['value'] = yankee;
    entity = '__esModule';
    entity = tangon.bind(golfie)(zuuluu, entity, michal);
    entity = 0;
    tangon = oscard[entity];
    michal = argBaz;
    entity = undefined;
    golfie = michal.bind(entity)(tangon);
    michal = {'kind': 'user', 'id': '2025-03_test_tile_new_users', 'label': 'Test Tile New Users Experiment'};
    tangon = {};
    option = false;
    tangon['enabled'] = option;
    michal['defaultConfig'] = tangon;
    tangon = 1;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.CommonTriggerPoints;
    tangon = tangon.CONNECTION_OPEN;
    michal['commonTriggerPoint'] = tangon;
    tangon = {'id': 1, 'label': 'Variation with first treatment enabled'};
    option = {};
    option['enabled'] = yankee;
    tangon['config'] = option;
    option = new Array(2);
    option[0] = tangon;
    verify = {'id': 2, 'label': 'Variation with second treatment enabled'};
    tangon = 2;
    offset = {};
    offset['enabled'] = yankee;
    verify['config'] = offset;
    option[1] = verify;
    michal['treatments'] = option;
    michal = golfie.bind(entity)(michal);
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/experiments/test_experiments/TestTileNewUsersExperiment.tsx';
    tangon = report.bind(oscard)(tangon);
    zuuluu['TestTileNewUsersExperiment'] = michal;
    return entity;
})();