// app/modules/experiments/trigger_points/PaymentFlowStartedTriggerPoint.tsx
export default (function(global, require, metroImportDefault, metroImportAll, moduleObject, exports, dependencyMap) {
    var6 = require;
    var8 = metroImportDefault;
    var3 = exports;
    var7 = dependencyMap;
    var _closure1_slot0 = var8;
    var _closure1_slot1 = var7;
    var1 = global;
    var9 = var1.Object;
    var5 = var9.defineProperty;
    var4 = {};
    var1 = true;
    var4['value'] = var1;
    var1 = '__esModule';
    var1 = var5.bind(var9)(var3, var1, var4);
    var1 = 0;
    var4 = var7[var1];
    var1 = undefined;
    var4 = var6.bind(var1)(var4);
    var4 = var4.CommonTriggerPoints;
    var5 = 1;
    var5 = var7[var5];
    var5 = var6.bind(var1)(var5);
    var5 = var5.AnalyticEvents;
    var _closure1_slot2 = var5;
    var5 = 2;
    var5 = var7[var5];
    var5 = var6.bind(var1)(var5);
    var10 = var5.CommonTriggerPointConfiguration;
    var5 = 3;
    var9 = var7[var5];
    var9 = var6.bind(var1)(var9);
    var11 = var9.VanillaExperiment;
    var9 = new Array(12);
    var9[0] = var11;
    var11 = var7[var5];
    var11 = var6.bind(var1)(var11);
    var11 = var11.FiltersExperiment;
    var9[1] = var11;
    var11 = var7[var5];
    var11 = var6.bind(var1)(var11);
    var11 = var11.EveryoneExperiment;
    var9[2] = var11;
    var11 = var7[var5];
    var11 = var6.bind(var1)(var11);
    var11 = var11.MultipleBucketsExperiment;
    var9[3] = var11;
    var5 = var7[var5];
    var5 = var6.bind(var1)(var5);
    var5 = var5.UnevenBucketsExperiment;
    var9[4] = var5;
    var5 = 4;
    var11 = var7[var5];
    var11 = var6.bind(var1)(var11);
    var11 = var11.ApexAAValidationPaymentFlowStartedSimple;
    var9[5] = var11;
    var11 = var7[var5];
    var11 = var6.bind(var1)(var11);
    var11 = var11.ApexAAValidationPaymentFlowStartedHQDTesters;
    var9[6] = var11;
    var11 = var7[var5];
    var11 = var6.bind(var1)(var11);
    var11 = var11.ApexAAValidationPaymentFlowStartedAndroidOnly;
    var9[7] = var11;
    var11 = var7[var5];
    var11 = var6.bind(var1)(var11);
    var11 = var11.ApexAAValidationPaymentFlowStartediOSOnly;
    var9[8] = var11;
    var11 = var7[var5];
    var11 = var6.bind(var1)(var11);
    var11 = var11.ApexAAValidationPaymentFlowStartedUserLocale;
    var9[9] = var11;
    var5 = var7[var5];
    var5 = var6.bind(var1)(var5);
    var5 = var5.ApexAAValidationPaymentFlowStartedUserCountry;
    var9[10] = var5;
    var5 = 5;
    var5 = var7[var5];
    var5 = var8.bind(var1)(var5);
    var9[11] = var5;
    var13 = var4.PAYMENT_FLOW_STARTED;
    var4 = {};
    var5 = 'payment flow started';
    var4['location'] = var5;
    var5 = var10.prototype;
    var5 = Object.create(var5, {constructor: {value: var10}});
    var15 = var5;
    var14 = var9;
    var12 = var4;
    var4 = new var15[var10](var14, var13, var12, var11);
    var4 = var4 instanceof Object ? var4 : var5;
    var _closure1_slot3 = var4;
    var5 = 7;
    var5 = var7[var5];
    var7 = var6.bind(var1)(var5);
    var6 = var7.fileFinishedImporting;
    var5 = 'modules/experiments/trigger_points/PaymentFlowStartedTriggerPoint.tsx';
    var5 = var6.bind(var7)(var5);
    var3['PaymentFlowStartedTriggerPoint'] = var4;
    var2 = function trackPaymentFlowStartedAnalyticsAndCTP(arg1) {
        _fun0001: for(var _fun0001_ip = 0; ; ) switch(_fun0001_ip) {
 0:
            var7 = arguments[1];
            var1 = undefined;
            if(!(var7 === var1)) { _fun0001_ip = 11; continue _fun0001 }
 9:
            var7 = {};
 11:
            var4 = _closure1_slot0;
            var5 = _closure1_slot1;
            var3 = 6;
            var3 = var5[var3];
            var6 = var4.bind(var1)(var3);
            var5 = var6.track;
            var3 = _closure1_slot2;
            var4 = var3.PAYMENT_FLOW_STARTED;
            var3 = arg1;
            var3 = var5.bind(var6)(var4, var3, var7);
            var3 = _closure1_slot3;
            var2 = var3.trigger;
            var2 = var2.bind(var3)();
            return var1;
        }
    };
    var3['trackPaymentFlowStartedAnalyticsAndCTP'] = var2;
    return var1;
})();