// app/modules/guild_antiraid/native/GuildRaidLockdownFeedbackActionSheet.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    report = argBar;
    yankee = argBaz;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    var _closure1_slot1 = yankee;
    var _closure1_slot2 = oscard;
    entity = global;
    option = entity.Object;
    golfie = option.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(option)(zuuluu, entity, tangon);
    entity = 0;
    tangon = oscard[entity];
    entity = undefined;
    tangon = yankee.bind(entity)(tangon);
    var _closure1_slot3 = tangon;
    tangon = 1;
    golfie = oscard[tangon];
    tangon = argCor;
    tangon = tangon.bind(entity)(golfie);
    var _closure1_slot4 = tangon;
    tangon = 2;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.AnalyticEvents;
    var _closure1_slot5 = tangon;
    tangon = 3;
    golfie = oscard[tangon];
    golfie = report.bind(entity)(golfie);
    golfie = golfie.jsx;
    var _closure1_slot6 = golfie;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.jsxs;
    var _closure1_slot7 = tangon;
    tangon = 4;
    tangon = oscard[tangon];
    option = report.bind(entity)(tangon);
    golfie = option.createStyles;
    tangon = {};
    verify = {'display': 'flex', 'gap': 24};
    tangon['container'] = verify;
    verify = {'marginBottom': 8, 'textAlign': 'center'};
    tangon['title'] = verify;
    verify = {'borderColor': null, 'borderWidth': 1, 'borderRadius': null, 'display': 'flex', 'flexDirection': 'column', 'marginBottom': 16, 'width': '100%'};
    offset = 5;
    romeon = oscard[offset];
    romeon = yankee.bind(entity)(romeon);
    romeon = romeon.colors;
    romeon = romeon.BACKGROUND_ACCENT;
    verify['borderColor'] = romeon;
    romeon = oscard[offset];
    romeon = yankee.bind(entity)(romeon);
    romeon = romeon.radii;
    romeon = romeon.xs;
    verify['borderRadius'] = romeon;
    romeon = '100%';
    tangon['optionContainer'] = verify;
    verify = {};
    verify['width'] = romeon;
    tangon['option'] = verify;
    verify = {'paddingLeft': 54, 'paddingRight': 16, 'paddingBottom': 16};
    tangon['textInputContainer'] = verify;
    verify = {'backgroundColor': null, 'width': '100%', 'padding': 8};
    romeon = oscard[offset];
    romeon = yankee.bind(entity)(romeon);
    romeon = romeon.colors;
    romeon = romeon.INPUT_BACKGROUND;
    verify['backgroundColor'] = romeon;
    offset = oscard[offset];
    offset = yankee.bind(entity)(offset);
    offset = offset.radii;
    offset = offset.xs;
    verify['borderRadius'] = offset;
    tangon['textInput'] = verify;
    tangon = golfie.bind(option)(tangon);
    var _closure1_slot8 = tangon;
    tangon = 17;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/guild_antiraid/native/GuildRaidLockdownFeedbackActionSheet.tsx';
    tangon = report.bind(oscard)(tangon);
    michal = function(argFoo) { // Original name: _default
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            entity = argFoo;
            entity = entity.guildId;
            var _closure2_slot0 = entity;
            entity = _closure1_slot8;
            tangon = undefined;
            option = entity.bind(tangon)();
            golfie = _closure1_slot4;
            michal = golfie.useState;
            entity = new Array(0);
            entity = michal.bind(golfie)(entity);
            oscard = _closure1_slot3;
            report = 2;
            entity = oscard.bind(tangon)(entity, report);
            zuuluu = 0;
            romeon = entity[zuuluu];
            var _closure2_slot1 = romeon;
            michal = 1;
            entity = entity[michal];
            var _closure2_slot2 = entity;
            entity = golfie.useState;
            entity = entity.bind(golfie)();
            entity = oscard.bind(tangon)(entity, report);
            output = entity[zuuluu];
            var _closure2_slot3 = output;
            entity = entity[michal];
            var _closure2_slot4 = entity;
            entity = {};
            backup = _closure1_slot0;
            kiloes = _closure1_slot2;
            sizing = 6;
            michal = kiloes[sizing];
            michal = backup.bind(tangon)(michal);
            report = michal.intl;
            zuuluu = report.string;
            michal = kiloes[sizing];
            michal = backup.bind(tangon)(michal);
            michal = michal.t;
            michal = michal.//3pvr;
            michal = zuuluu.bind(report)(michal);
            entity['text'] = michal;
            offset = 7;
            michal = kiloes[offset];
            michal = backup.bind(tangon)(michal);
            michal = michal.RaidLockdownFeedbackType;
            michal = michal.DM_SPAM;
            entity['value'] = michal;
            update = new Array(6);
            update[0] = entity;
            entity = {};
            michal = kiloes[sizing];
            michal = backup.bind(tangon)(michal);
            report = michal.intl;
            zuuluu = report.string;
            michal = kiloes[sizing];
            michal = backup.bind(tangon)(michal);
            michal = michal.t;
            michal = michal.SdVsio;
            michal = zuuluu.bind(report)(michal);
            entity['text'] = michal;
            michal = kiloes[offset];
            michal = backup.bind(tangon)(michal);
            michal = michal.RaidLockdownFeedbackType;
            michal = michal.MENTION_SPAM;
            entity['value'] = michal;
            update[1] = entity;
            entity = {};
            michal = kiloes[sizing];
            michal = backup.bind(tangon)(michal);
            report = michal.intl;
            zuuluu = report.string;
            michal = kiloes[sizing];
            michal = backup.bind(tangon)(michal);
            michal = michal.t;
            michal = michal.uTiSVF;
            michal = zuuluu.bind(report)(michal);
            entity['text'] = michal;
            michal = kiloes[offset];
            michal = backup.bind(tangon)(michal);
            michal = michal.RaidLockdownFeedbackType;
            michal = michal.CHANNEL_SPAM;
            entity['value'] = michal;
            update[2] = entity;
            entity = {};
            michal = kiloes[sizing];
            michal = backup.bind(tangon)(michal);
            report = michal.intl;
            zuuluu = report.string;
            michal = kiloes[sizing];
            michal = backup.bind(tangon)(michal);
            michal = michal.t;
            michal = michal.GQczU1;
            michal = zuuluu.bind(report)(michal);
            entity['text'] = michal;
            michal = kiloes[offset];
            michal = backup.bind(tangon)(michal);
            michal = michal.RaidLockdownFeedbackType;
            michal = michal.SUS_NEW_MEMBERS;
            entity['value'] = michal;
            update[3] = entity;
            entity = {};
            michal = kiloes[sizing];
            michal = backup.bind(tangon)(michal);
            report = michal.intl;
            zuuluu = report.string;
            michal = kiloes[sizing];
            michal = backup.bind(tangon)(michal);
            michal = michal.t;
            michal = michal.AAgqy8;
            michal = zuuluu.bind(report)(michal);
            entity['text'] = michal;
            michal = kiloes[offset];
            michal = backup.bind(tangon)(michal);
            michal = michal.RaidLockdownFeedbackType;
            michal = michal.CHANGING_SETTINGS;
            entity['value'] = michal;
            update[4] = entity;
            entity = {};
            michal = kiloes[sizing];
            michal = backup.bind(tangon)(michal);
            report = michal.intl;
            zuuluu = report.string;
            michal = kiloes[sizing];
            michal = backup.bind(tangon)(michal);
            michal = michal.t;
            michal = michal.ryPKb2;
            michal = zuuluu.bind(report)(michal);
            entity['text'] = michal;
            michal = kiloes[offset];
            michal = backup.bind(tangon)(michal);
            michal = michal.RaidLockdownFeedbackType;
            michal = michal.OTHER;
            entity['value'] = michal;
            update[5] = entity;
            zuuluu = _closure1_slot6;
            entity = 9;
            entity = kiloes[entity];
            entity = backup.bind(tangon)(entity);
            michal = entity.ActionSheet;
            entity = {};
            report = true;
            entity['startExpanded'] = report;
            report = 10;
            report = kiloes[report];
            report = backup.bind(tangon)(report);
            oscard = report.BottomSheetTitleHeader;
            report = {};
            golfie = kiloes[sizing];
            golfie = backup.bind(tangon)(golfie);
            result = golfie.intl;
            yankee = result.string;
            golfie = kiloes[sizing];
            golfie = backup.bind(tangon)(golfie);
            golfie = golfie.t;
            golfie = golfie.f5hd9P;
            golfie = yankee.bind(result)(golfie);
            report['title'] = golfie;
            report = zuuluu.bind(tangon)(oscard, report);
            entity['header'] = report;
            golfie = _closure1_slot7;
            oscard = _closure1_slot1;
            report = 11;
            report = kiloes[report];
            oscard = oscard.bind(tangon)(report);
            report = {};
            option = option.container;
            report['style'] = option;
            option = 12;
            option = kiloes[option];
            option = backup.bind(tangon)(option);
            yankee = option.TableRowGroup;
            option = {};
            result = false;
            option['hasIcons'] = result;
            echoed = update.map;
            result = function(argFoo) {
                entity = argFoo;
                oscard = entity.text;
                report = entity.value;
                var _closure3_slot0 = report;
                tangon = _closure1_slot6;
                michal = _closure1_slot0;
                zuuluu = _closure1_slot2;
                entity = 13;
                entity = zuuluu[entity];
                zuuluu = undefined;
                entity = michal.bind(zuuluu)(entity);
                michal = entity.TableCheckboxRow;
                entity = {};
                golfie = function() { // Original name: onPress
                    zuuluu = _closure3_slot0;
                    michal = function(argFoo) { // Original name: onCheckboxChange
                        _fun00003: for(var _fun00004_ip = 0; ; ) switch(_fun00004_ip) {
 0:
                            report = argFoo;
                            var _closure5_slot0 = report;
                            tangon = _closure2_slot1;
                            michal = tangon.includes;
                            michal = michal.bind(tangon)(report);
                            zuuluu = _closure2_slot2;
                            if(michal) { _fun00004_ip = 42; continue _fun00003 }
 33:
                            michal = function(argFoo) {
                                entity = new Array(1);
                                report = argFoo;
                                tangon = 0;
                                oscard = entity;
                                zuuluu = arraySpread(oscard, report, tangon);
                                michal = _closure5_slot0;
                                entity[zuuluu] = michal;
                                michal = 1;
                                michal = zuuluu + michal;
                                return entity;
                            };
                            _fun00004_ip = 49; continue _fun00003;
 42:
                            michal = function(argFoo) {
                                zuuluu = argFoo;
                                michal = zuuluu.filter;
                                entity = function(argFoo) {
                                    michal = _closure5_slot0;
                                    entity = argFoo;
                                    entity = entity !== michal;
                                    return entity;
                                };
                                entity = michal.bind(zuuluu)(entity);
                                return entity;
                            };
 49:
                            entity = undefined;
                            michal = zuuluu.bind(entity)(michal);
                            return entity;
                        }
                    };
                    entity = undefined;
                    michal = michal.bind(entity)(zuuluu);
                    return entity;
                };
                entity['onPress'] = golfie;
                option = _closure2_slot1;
                golfie = option.includes;
                golfie = golfie.bind(option)(report);
                entity['checked'] = golfie;
                entity['label'] = oscard;
                entity = tangon.bind(zuuluu)(michal, entity, report);
                return entity;
            };
            result = echoed.bind(update)(result);
            option['children'] = result;
            yankee = zuuluu.bind(tangon)(yankee, option);
            option = new Array(3);
            option[0] = yankee;
            yankee = romeon.includes;
            offset = kiloes[offset];
            offset = backup.bind(tangon)(offset);
            offset = offset.RaidLockdownFeedbackType;
            offset = offset.OTHER;
            offset = yankee.bind(romeon)(offset);
            if(!offset) { _fun00002_ip = 964; continue _fun00001 }
 852:
            backup = _closure1_slot6;
            echoed = _closure1_slot0;
            kiloes = _closure1_slot2;
            yankee = 14;
            yankee = kiloes[yankee];
            yankee = echoed.bind(tangon)(yankee);
            romeon = yankee.TextArea;
            yankee = {};
            result = 'off';
            yankee['autoComplete'] = result;
            yankee['value'] = output;
            output = kiloes[sizing];
            output = echoed.bind(tangon)(output);
            result = output.intl;
            output = result.string;
            kiloes = kiloes[sizing];
            kiloes = echoed.bind(tangon)(kiloes);
            kiloes = kiloes.t;
            kiloes = kiloes.PAM+JS;
            kiloes = output.bind(result)(kiloes);
            yankee['placeholder'] = kiloes;
            kiloes = function(argFoo) { // Original name: onChange
                zuuluu = _closure2_slot4;
                entity = undefined;
                michal = argFoo;
                michal = zuuluu.bind(entity)(michal);
                return entity;
            };
            yankee['onChange'] = kiloes;
            offset = backup.bind(tangon)(romeon, yankee);
 964:
            option[1] = offset;
            yankee = _closure1_slot6;
            kiloes = _closure1_slot0;
            romeon = _closure1_slot2;
            verify = 15;
            verify = romeon[verify];
            verify = kiloes.bind(tangon)(verify);
            offset = verify.Button;
            verify = {};
            foxtra = function() { // Original name: onPress
                report = _closure1_slot0;
                tangon = _closure1_slot2;
                entity = 16;
                zuuluu = tangon[entity];
                entity = undefined;
                golfie = report.bind(entity)(zuuluu);
                oscard = golfie.trackWithMetadata;
                zuuluu = _closure1_slot5;
                report = zuuluu.GUILD_RAID_LOCKDOWN_FEEDBACK;
                zuuluu = {};
                verify = _closure2_slot1;
                zuuluu['raid_lockdown_feedback_type'] = verify;
                verify = _closure2_slot3;
                zuuluu['raid_lockdown_feedback_other_reason'] = verify;
                option = _closure2_slot0;
                zuuluu['guild_id'] = option;
                zuuluu = oscard.bind(golfie)(report, zuuluu);
                zuuluu = _closure1_slot1;
                michal = 8;
                michal = tangon[michal];
                tangon = zuuluu.bind(entity)(michal);
                zuuluu = tangon.hideActionSheet;
                michal = 'GuildRaidLockdownFeedbackActionSheet';
                michal = zuuluu.bind(tangon)(michal);
                return entity;
            };
            verify['onPress'] = foxtra;
            foxtra = romeon[sizing];
            foxtra = kiloes.bind(tangon)(foxtra);
            backup = foxtra.intl;
            foxtra = backup.string;
            romeon = romeon[sizing];
            romeon = kiloes.bind(tangon)(romeon);
            romeon = romeon.t;
            romeon = romeon.nAt0rK;
            romeon = foxtra.bind(backup)(romeon);
            verify['text'] = romeon;
            verify = yankee.bind(tangon)(offset, verify);
            option[2] = verify;
            report['children'] = option;
            report = golfie.bind(tangon)(oscard, report);
            entity['children'] = report;
            entity = zuuluu.bind(tangon)(michal, entity);
            return entity;
        }
    };
    zuuluu['default'] = michal;
    return entity;
})();