// app/modules/guild_antiraid/native/GuildRaidFalseAlarmConfirmAlert.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    report = argBar;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    entity = argBaz;
    var _closure1_slot1 = entity;
    var _closure1_slot2 = oscard;
    entity = global;
    option = entity.Object;
    golfie = option.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(option)(zuuluu, entity, tangon);
    entity = 0;
    golfie = oscard[entity];
    tangon = argCor;
    entity = undefined;
    tangon = tangon.bind(entity)(golfie);
    tangon = 1;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    golfie = tangon.View;
    var _closure1_slot3 = golfie;
    tangon = tangon.Image;
    var _closure1_slot4 = tangon;
    tangon = 2;
    golfie = oscard[tangon];
    golfie = report.bind(entity)(golfie);
    golfie = golfie.jsx;
    var _closure1_slot5 = golfie;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.jsxs;
    var _closure1_slot6 = tangon;
    tangon = 3;
    tangon = oscard[tangon];
    verify = report.bind(entity)(tangon);
    option = verify.createStyles;
    golfie = {};
    yankee = 'center';
    tangon = {'alignSelf': 'center', 'position': 'absolute', 'top': 4294967240, 'height': 121};
    golfie['feedbackConfirmImage'] = tangon;
    tangon = 8;
    offset = {'marginBottom': 8, 'textAlign': 'center'};
    golfie['title'] = offset;
    offset = {};
    offset['textAlign'] = yankee;
    golfie['description'] = offset;
    offset = {'marginTop': 64, 'alignItems': 'center', 'justifyContent': 'center'};
    golfie['container'] = offset;
    golfie = option.bind(verify)(golfie);
    var _closure1_slot7 = golfie;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/guild_antiraid/native/GuildRaidFalseAlarmConfirmAlert.tsx';
    tangon = report.bind(oscard)(tangon);
    michal = function(argFoo) { // Original name: _default
        entity = argFoo;
        report = entity.onClose;
        entity = _closure1_slot7;
        tangon = undefined;
        foxtra = entity.bind(tangon)();
        zuuluu = _closure1_slot6;
        verify = _closure1_slot1;
        sizing = _closure1_slot2;
        entity = 4;
        entity = sizing[entity];
        michal = verify.bind(tangon)(entity);
        entity = {};
        kiloes = _closure1_slot0;
        romeon = 5;
        golfie = sizing[romeon];
        golfie = kiloes.bind(tangon)(golfie);
        offset = golfie.intl;
        option = offset.string;
        golfie = sizing[romeon];
        golfie = kiloes.bind(tangon)(golfie);
        golfie = golfie.t;
        golfie = golfie.o3ZlOD;
        golfie = option.bind(offset)(golfie);
        entity['confirmText'] = golfie;
        entity['onConfirm'] = report;
        yankee = _closure1_slot5;
        golfie = _closure1_slot4;
        report = {};
        option = foxtra.feedbackConfirmImage;
        report['style'] = option;
        option = 6;
        option = sizing[option];
        option = verify.bind(tangon)(option);
        report['source'] = option;
        golfie = yankee.bind(tangon)(golfie, report);
        report = new Array(2);
        report[0] = golfie;
        golfie = _closure1_slot3;
        oscard = {};
        option = foxtra.container;
        oscard['style'] = option;
        verify = 7;
        option = sizing[verify];
        option = kiloes.bind(tangon)(option);
        offset = option.Text;
        option = {'style': null, 'accessibilityRole': 'header', 'variant': 'text-lg/bold', 'color': 'header-primary'};
        backup = foxtra.title;
        option['style'] = backup;
        backup = sizing[romeon];
        backup = kiloes.bind(tangon)(backup);
        result = backup.intl;
        output = result.string;
        backup = sizing[romeon];
        backup = kiloes.bind(tangon)(backup);
        backup = backup.t;
        backup = backup.pAzfrq;
        backup = output.bind(result)(backup);
        option['children'] = backup;
        offset = yankee.bind(tangon)(offset, option);
        option = new Array(2);
        option[0] = offset;
        verify = sizing[verify];
        verify = kiloes.bind(tangon)(verify);
        offset = verify.Text;
        verify = {'style': null, 'variant': 'text-sm/medium', 'color': 'header-secondary'};
        foxtra = foxtra.description;
        verify['style'] = foxtra;
        foxtra = sizing[romeon];
        foxtra = kiloes.bind(tangon)(foxtra);
        backup = foxtra.intl;
        foxtra = backup.string;
        romeon = sizing[romeon];
        romeon = kiloes.bind(tangon)(romeon);
        romeon = romeon.t;
        romeon = romeon.oxowND;
        romeon = foxtra.bind(backup)(romeon);
        verify['children'] = romeon;
        verify = yankee.bind(tangon)(offset, verify);
        option[1] = verify;
        oscard['children'] = option;
        oscard = zuuluu.bind(tangon)(golfie, oscard);
        report[1] = oscard;
        entity['children'] = report;
        entity = zuuluu.bind(tangon)(michal, entity);
        return entity;
    };
    zuuluu['default'] = michal;
    return entity;
})();