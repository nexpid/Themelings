// app/modules/guild_antiraid/native/GuildAntiRaidReportModal.tsx
export default (function(argFoo, argBar, argBaz, argCorge, _, argFred, argPlugh) {
    report = argBar;
    yankee = argBaz;
    zulu = argFred;
    oscar = argPlugh;
    var _closure1_slot0 = report;
    var _closure1_slot1 = yankee;
    var _closure1_slot2 = oscar;
    entity = function(argFoo) { // Original name: ReportModal
        entity = argFoo;
        mike = entity.raidTypes;
        var _closure2_slot0 = mike;
        mike = entity.onChange;
        var _closure2_slot1 = mike;
        romeo = entity.onSubmit;
        entity = _closure1_slot11;
        tango = undefined;
        offset = entity.bind(tango)();
        var _closure2_slot2 = offset;
        kilo = _closure1_slot1;
        output = _closure1_slot2;
        entity = 8;
        entity = output[entity];
        entity = kilo.bind(tango)(entity);
        entity = entity.bind(tango)();
        result = entity.bottom;
        report = _closure1_slot4;
        zulu = report.useCallback;
        mike = new Array(1);
        mike[0] = offset;
        entity = function(argFoo) {
            tango = _closure1_slot9;
            mike = _closure1_slot0;
            zulu = _closure1_slot2;
            entity = 9;
            entity = zulu[entity];
            zulu = undefined;
            entity = mike.bind(zulu)(entity);
            mike = entity.Text;
            entity = {'style': null, 'variant': 'text-md/semibold', 'color': 'interactive-active'};
            oscar = _closure2_slot2;
            oscar = oscar.formRow;
            entity['style'] = oscar;
            oscar = _closure1_slot7;
            report = argFoo;
            report = oscar.bind(zulu)(report);
            entity['children'] = report;
            entity = tango.bind(zulu)(mike, entity);
            return entity;
        };
        entity = zulu.bind(report)(entity, mike);
        var _closure2_slot3 = entity;
        report = _closure1_slot4;
        zulu = report.useCallback;
        mike = function() {
            tango = _closure1_slot0;
            zulu = _closure1_slot2;
            entity = 10;
            zulu = zulu[entity];
            entity = undefined;
            tango = tango.bind(entity)(zulu);
            zulu = tango.openURL;
            mike = _closure1_slot6;
            mike = zulu.bind(tango)(mike);
            return entity;
        };
        entity = new Array(0);
        source = zulu.bind(report)(mike, entity);
        zulu = _closure1_slot10;
        mike = _closure1_slot5;
        entity = {};
        report = offset.container;
        entity['style'] = report;
        golf = _closure1_slot9;
        sizing = _closure1_slot0;
        report = 11;
        report = output[report];
        report = sizing.bind(tango)(report);
        oscar = report.TextWithIOSLinkWorkaround;
        report = {'style': null, 'variant': 'text-sm/medium', 'color': 'header-secondary'};
        options = offset.headerSubtitle;
        report['style'] = options;
        foxtrot = 12;
        options = output[foxtrot];
        options = sizing.bind(tango)(options);
        update = options.intl;
        echo = update.format;
        options = output[foxtrot];
        options = sizing.bind(tango)(options);
        options = options.t;
        backup = options.Hg8Ee3;
        options = {};
        options['onClick'] = source;
        options = echo.bind(update)(backup, options);
        report['children'] = options;
        oscar = golf.bind(tango)(oscar, report);
        report = new Array(3);
        report[0] = oscar;
        options = _closure1_slot9;
        golf = _closure1_slot5;
        oscar = {};
        backup = offset.formBody;
        oscar['style'] = backup;
        echo = _closure1_slot8;
        backup = echo.map;
        yankee = function(argFoo, argBar) {
            _fun114263: for(var _fun114263_ip = 0; ; ) switch(_fun114263_ip) {
 0:
                report = argFoo;
                var _closure3_slot0 = report;
                tango = _closure1_slot10;
                entity = _closure1_slot4;
                zulu = entity.Fragment;
                mike = {};
                verify = _closure1_slot9;
                golf = _closure1_slot0;
                foxtrot = _closure1_slot2;
                yankee = 13;
                oscar = foxtrot[yankee];
                entity = undefined;
                oscar = golf.bind(entity)(oscar);
                golf = oscar.FormRow;
                oscar = {};
                offset = function() { // Original name: onPress
                    zulu = _closure2_slot1;
                    mike = _closure3_slot0;
                    entity = undefined;
                    entity = zulu.bind(entity)(mike);
                    return entity;
                };
                oscar['onPress'] = offset;
                backup = _closure1_slot9;
                romeo = _closure1_slot1;
                offset = 14;
                offset = foxtrot[offset];
                foxtrot = romeo.bind(entity)(offset);
                romeo = {};
                sizing = _closure2_slot0;
                kilo = sizing.includes;
                kilo = kilo.bind(sizing)(report);
                romeo['selected'] = kilo;
                kilo = _closure2_slot2;
                kilo = kilo.radioIndicator;
                romeo['style'] = kilo;
                romeo = backup.bind(entity)(foxtrot, romeo);
                oscar['trailing'] = romeo;
                offset = _closure2_slot3;
                offset = offset.bind(entity)(report);
                oscar['label'] = offset;
                golf = verify.bind(entity)(golf, oscar);
                oscar = new Array(2);
                oscar[0] = golf;
                golf = _closure1_slot8;
                verify = golf.length;
                golf = 1;
                verify = verify - golf;
                golf = argBar;
                golf = golf < verify;
                if(!golf) { _fun114263_ip = 229; continue _fun114263 }
 194:
                offset = _closure1_slot9;
                verify = _closure1_slot0;
                options = _closure1_slot2;
                options = options[yankee];
                options = verify.bind(entity)(options);
                verify = options.FormDivider;
                options = {};
                golf = offset.bind(entity)(verify, options);
 229:
                oscar[1] = golf;
                mike['children'] = oscar;
                entity = tango.bind(entity)(zulu, mike, report);
                return entity;
            }
        };
        yankee = backup.bind(echo)(yankee);
        oscar['children'] = yankee;
        oscar = options.bind(tango)(golf, oscar);
        report[1] = oscar;
        options = _closure1_slot9;
        golf = _closure1_slot5;
        oscar = {};
        yankee = offset.submitButtonContainer;
        offset = new Array(2);
        offset[0] = yankee;
        yankee = {};
        backup = 16;
        backup = result + backup;
        yankee['paddingBottom'] = backup;
        offset[1] = yankee;
        oscar['style'] = offset;
        yankee = _closure1_slot9;
        backup = 15;
        verify = output[backup];
        offset = kilo.bind(tango)(verify);
        verify = {};
        backup = output[backup];
        backup = kilo.bind(tango)(backup);
        backup = backup.Sizes;
        backup = backup.MEDIUM;
        verify['size'] = backup;
        backup = output[foxtrot];
        backup = sizing.bind(tango)(backup);
        kilo = backup.intl;
        backup = kilo.string;
        foxtrot = output[foxtrot];
        foxtrot = sizing.bind(tango)(foxtrot);
        foxtrot = foxtrot.t;
        foxtrot = foxtrot.geKm7u;
        foxtrot = backup.bind(kilo)(foxtrot);
        verify['text'] = foxtrot;
        verify['onPress'] = romeo;
        verify = yankee.bind(tango)(offset, verify);
        oscar['children'] = verify;
        oscar = options.bind(tango)(golf, oscar);
        report[2] = oscar;
        entity['children'] = report;
        entity = zulu.bind(tango)(mike, entity);
        return entity;
    };
    var _closure1_slot12 = entity;
    entity = global;
    options = entity.Object;
    golf = options.defineProperty;
    tango = {};
    entity = true;
    tango['value'] = entity;
    entity = '__esModule';
    entity = golf.bind(options)(zulu, entity, tango);
    romeo = 0;
    tango = oscar[romeo];
    entity = undefined;
    tango = yankee.bind(entity)(tango);
    var _closure1_slot3 = tango;
    tango = 1;
    golf = oscar[tango];
    tango = argCorge;
    tango = tango.bind(entity)(golf);
    var _closure1_slot4 = tango;
    foxtrot = 2;
    tango = oscar[foxtrot];
    tango = report.bind(entity)(tango);
    tango = tango.View;
    var _closure1_slot5 = tango;
    tango = 3;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    golf = tango.COMMUNITY_PORTAL_SERVER_SAFETY_PAGE;
    var _closure1_slot6 = golf;
    golf = tango.getReportRaidTypeLabel;
    var _closure1_slot7 = golf;
    tango = tango.REPORT_RAID_OPTIONS;
    var _closure1_slot8 = tango;
    tango = 4;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    kilo = tango.Fonts;
    tango = 5;
    golf = oscar[tango];
    golf = report.bind(entity)(golf);
    golf = golf.jsx;
    var _closure1_slot9 = golf;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.jsxs;
    var _closure1_slot10 = tango;
    tango = 6;
    tango = oscar[tango];
    options = report.bind(entity)(tango);
    golf = options.createStyles;
    tango = {};
    verify = {'flex': 1, 'paddingHorizontal': 16, 'paddingVertical': 0, 'backgroundColor': null, 'flexDirection': 'column', 'height': '100%', 'paddingTop': 8};
    offset = 7;
    backup = oscar[offset];
    backup = yankee.bind(entity)(backup);
    backup = backup.colors;
    backup = backup.BACKGROUND_PRIMARY;
    verify['backgroundColor'] = backup;
    tango['container'] = verify;
    verify = {'flexDirection': 'row', 'justifyContent': 'flex-end', 'paddingVertical': 8};
    backup = oscar[offset];
    backup = yankee.bind(entity)(backup);
    backup = backup.colors;
    backup = backup.BACKGROUND_PRIMARY;
    verify['backgroundColor'] = backup;
    tango['header'] = verify;
    verify = {'fontSize': 24, 'fontFamily': null, 'textAlign': 'center', 'color': null, 'lineHeight': 30};
    backup = 24;
    kilo = kilo.PRIMARY_BOLD;
    verify['fontFamily'] = kilo;
    kilo = oscar[offset];
    kilo = yankee.bind(entity)(kilo);
    kilo = kilo.colors;
    kilo = kilo.HEADER_PRIMARY;
    verify['color'] = kilo;
    tango['headerTitle'] = verify;
    verify = {'textAlign': 'center', 'marginTop': 8};
    tango['headerSubtitle'] = verify;
    verify = {};
    kilo = 14;
    verify['marginVertical'] = kilo;
    tango['closeButtonContainer'] = verify;
    verify = {};
    verify['marginTop'] = backup;
    backup = oscar[offset];
    backup = yankee.bind(entity)(backup);
    backup = backup.radii;
    backup = backup.sm;
    verify['borderRadius'] = backup;
    backup = oscar[offset];
    backup = yankee.bind(entity)(backup);
    backup = backup.colors;
    backup = backup.BACKGROUND_SECONDARY;
    verify['backgroundColor'] = backup;
    tango['formBody'] = verify;
    verify = {};
    verify['paddingVertical'] = foxtrot;
    tango['formRow'] = verify;
    verify = {};
    verify['marginRight'] = romeo;
    tango['radioIndicator'] = verify;
    verify = {'position': 'absolute', 'bottom': 0, 'left': 0, 'right': 0, 'paddingHorizontal': 16, 'paddingVertical': 16};
    offset = oscar[offset];
    offset = yankee.bind(entity)(offset);
    offset = offset.colors;
    offset = offset.BACKGROUND_PRIMARY;
    verify['backgroundColor'] = offset;
    tango['submitButtonContainer'] = verify;
    tango = golf.bind(options)(tango);
    var _closure1_slot11 = tango;
    tango = 19;
    tango = oscar[tango];
    oscar = report.bind(entity)(tango);
    report = oscar.fileFinishedImporting;
    tango = 'modules/guild_antiraid/native/GuildAntiRaidReportModal.tsx';
    tango = report.bind(oscar)(tango);
    mike = function(argFoo) { // Original name: GuildAntiRaidReportModal
        entity = argFoo;
        yankee = entity.onCloseModal;
        var _closure2_slot0 = yankee;
        verify = entity.guildId;
        var _closure2_slot1 = verify;
        report = _closure1_slot1;
        golf = _closure1_slot2;
        zulu = 8;
        zulu = golf[zulu];
        tango = undefined;
        zulu = report.bind(tango)(zulu);
        zulu = zulu.bind(tango)();
        report = zulu.top;
        options = _closure1_slot4;
        oscar = options.useState;
        zulu = new Array(0);
        options = oscar.bind(options)(zulu);
        oscar = _closure1_slot3;
        zulu = 2;
        oscar = oscar.bind(tango)(options, zulu);
        zulu = 0;
        offset = oscar[zulu];
        var _closure2_slot2 = offset;
        zulu = 1;
        zulu = oscar[zulu];
        var _closure2_slot3 = zulu;
        options = _closure1_slot4;
        oscar = options.useMemo;
        zulu = new Array(3);
        zulu[0] = yankee;
        zulu[1] = offset;
        zulu[2] = verify;
        mike = function() {
            zulu = {};
            tango = _closure2_slot0;
            zulu['onCloseModal'] = tango;
            mike = _closure2_slot2;
            zulu['raidTypes'] = mike;
            mike = function(argFoo) { // Original name: onChange
                entity = argFoo;
                var _closure4_slot0 = entity;
                zulu = _closure2_slot3;
                entity = undefined;
                mike = function(argFoo) {
                    _fun114270: for(var _fun114270_ip = 0; ; ) switch(_fun114270_ip) {
 0:
                        tango = argFoo;
                        zulu = tango.includes;
                        entity = _closure4_slot0;
                        entity = zulu.bind(tango)(entity);
                        if(entity) { _fun114270_ip = 57; continue _fun114270 }
 23:
                        entity = new Array(1);
                        report = 0;
                        golf = entity;
                        oscar = tango;
                        zulu = arraySpread(golf, oscar, report);
                        mike = _closure4_slot0;
                        entity[zulu] = mike;
                        mike = 1;
                        mike = zulu + mike;
                        _fun114270_ip = 76; continue _fun114270;
 57:
                        zulu = tango.filter;
                        mike = function(argFoo) {
                            mike = _closure4_slot0;
                            entity = argFoo;
                            entity = entity !== mike;
                            return entity;
                        };
                        entity = zulu.bind(tango)(mike);
 76:
                        return entity;
                    }
                };
                mike = zulu.bind(entity)(mike);
                return entity;
            };
            zulu['onChange'] = mike;
            mike = function() { // Original name: onSubmit
                tango = _closure1_slot0;
                oscar = _closure1_slot2;
                zulu = 17;
                mike = oscar[zulu];
                entity = undefined;
                verify = tango.bind(entity)(mike);
                options = verify.trackReportRaidViewed;
                report = _closure2_slot1;
                golf = _closure2_slot2;
                golf = options.bind(verify)(report, golf);
                zulu = oscar[zulu];
                tango = tango.bind(entity)(zulu);
                zulu = tango.handleReportRaid;
                zulu = zulu.bind(tango)(report);
                mike = _closure2_slot0;
                mike = mike.bind(entity)();
                return entity;
            };
            zulu['onSubmit'] = mike;
            mike = function(argFoo) { // Original name: getScreens
                entity = argFoo;
                oscar = entity.onCloseModal;
                zulu = entity.raidTypes;
                var _closure4_slot0 = zulu;
                zulu = entity.onChange;
                var _closure4_slot1 = zulu;
                entity = entity.onSubmit;
                var _closure4_slot2 = entity;
                entity = {};
                zulu = {};
                tango = true;
                zulu['ignoreKeyboard'] = tango;
                golf = _closure1_slot0;
                options = _closure1_slot2;
                tango = 12;
                verify = options[tango];
                report = undefined;
                verify = golf.bind(report)(verify);
                offset = verify.intl;
                verify = offset.string;
                tango = options[tango];
                tango = golf.bind(report)(tango);
                tango = tango.t;
                tango = tango.uYPGsb;
                tango = verify.bind(offset)(tango);
                zulu['title'] = tango;
                tango = 16;
                tango = options[tango];
                report = golf.bind(report)(tango);
                tango = report.getHeaderCloseButton;
                tango = tango.bind(report)(oscar);
                zulu['headerLeft'] = tango;
                mike = function() { // Original name: render
                    tango = _closure1_slot9;
                    zulu = _closure1_slot12;
                    mike = {};
                    report = _closure4_slot0;
                    mike['raidTypes'] = report;
                    report = _closure4_slot1;
                    mike['onChange'] = report;
                    entity = _closure4_slot2;
                    mike['onSubmit'] = entity;
                    entity = undefined;
                    entity = tango.bind(entity)(zulu, mike);
                    return entity;
                };
                zulu['render'] = mike;
                mike = 'REPORT_RAID';
                entity[mike] = zulu;
                return entity;
            };
            entity = undefined;
            entity = mike.bind(entity)(zulu);
            return entity;
        };
        oscar = oscar.bind(options)(mike, zulu);
        zulu = _closure1_slot9;
        mike = _closure1_slot0;
        entity = 18;
        entity = golf[entity];
        entity = mike.bind(tango)(entity);
        mike = entity.Navigator;
        entity = {};
        entity['screens'] = oscar;
        oscar = 'REPORT_RAID';
        entity['initialRouteName'] = oscar;
        entity['headerStatusBarHeight'] = report;
        entity = zulu.bind(tango)(mike, entity);
        return entity;
    };
    zulu['default'] = mike;
    return entity;
})();