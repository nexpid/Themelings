// app/modules/guild_antiraid/native/GuildIncidentActionsActionSheet.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    report = argBar;
    yankee = argBaz;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    var _closure1_slot1 = yankee;
    var _closure1_slot2 = oscard;
    entity = global;
    option = entity.Object;
    golfie = option.defineProperty;
    michal = {};
    entity = true;
    michal['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(option)(zuuluu, entity, michal);
    entity = 0;
    golfie = oscard[entity];
    michal = argCor;
    entity = undefined;
    michal = michal.bind(entity)(golfie);
    var _closure1_slot3 = michal;
    michal = 1;
    michal = oscard[michal];
    michal = yankee.bind(entity)(michal);
    var _closure1_slot4 = michal;
    michal = 2;
    michal = oscard[michal];
    michal = report.bind(entity)(michal);
    golfie = michal.resetGuildIncidentsActionSheetStore;
    var _closure1_slot5 = golfie;
    golfie = michal.setPauseDms;
    var _closure1_slot6 = golfie;
    golfie = michal.setPauseInvites;
    var _closure1_slot7 = golfie;
    golfie = michal.setTime;
    var _closure1_slot8 = golfie;
    michal = michal.useGuildIncidentsActionSheetStore;
    var _closure1_slot9 = michal;
    michal = 3;
    michal = oscard[michal];
    michal = report.bind(entity)(michal);
    michal = michal.getTimeframes;
    var _closure1_slot10 = michal;
    michal = 4;
    michal = oscard[michal];
    michal = report.bind(entity)(michal);
    golfie = michal.AnalyticEvents;
    var _closure1_slot11 = golfie;
    michal = michal.GuildFeatures;
    var _closure1_slot12 = michal;
    michal = 5;
    golfie = oscard[michal];
    golfie = report.bind(entity)(golfie);
    golfie = golfie.jsx;
    var _closure1_slot13 = golfie;
    michal = oscard[michal];
    michal = report.bind(entity)(michal);
    michal = michal.jsxs;
    var _closure1_slot14 = michal;
    michal = 6;
    michal = oscard[michal];
    option = report.bind(entity)(michal);
    golfie = option.createStyles;
    michal = {};
    verify = {'paddingVertical': 24, 'paddingHorizontal': 16, 'display': 'flex', 'flexDirection': 'column', 'alignItems': 'center'};
    michal['container'] = verify;
    verify = {'marginBottom': 12, 'textAlign': 'center', 'display': 'flex', 'flexDirection': 'row'};
    michal['title'] = verify;
    verify = {};
    offset = -12;
    verify['marginLeft'] = offset;
    michal['beta'] = verify;
    verify = {'marginBottom': 16, 'textAlign': 'center'};
    michal['subtitle'] = verify;
    verify = {'backgroundColor': null, 'padding': 12, 'borderRadius': null, 'width': '100%', 'display': 'flex', 'flexDirection': 'row', 'alignItems': 'center', 'justifyContent': 'space-between'};
    offset = 7;
    romeon = oscard[offset];
    romeon = yankee.bind(entity)(romeon);
    romeon = romeon.colors;
    romeon = romeon.INPUT_BACKGROUND;
    verify['backgroundColor'] = romeon;
    romeon = oscard[offset];
    romeon = yankee.bind(entity)(romeon);
    romeon = romeon.radii;
    romeon = romeon.sm;
    verify['borderRadius'] = romeon;
    michal['dropdown'] = verify;
    verify = {'width': 20, 'height': 20};
    michal['dropdownIcon'] = verify;
    verify = {'width': '100%', 'position': 'relative'};
    michal['invitesOptionContainer'] = verify;
    verify = {'borderColor': null, 'borderWidth': 1, 'marginBottom': 12};
    romeon = oscard[offset];
    romeon = yankee.bind(entity)(romeon);
    romeon = romeon.colors;
    romeon = romeon.BACKGROUND_ACCENT;
    verify['borderColor'] = romeon;
    offset = oscard[offset];
    offset = yankee.bind(entity)(offset);
    offset = offset.radii;
    offset = offset.xs;
    verify['borderRadius'] = offset;
    michal['optionContainer'] = verify;
    michal = golfie.bind(option)(michal);
    var _closure1_slot15 = michal;
    michal = function(argFoo) { // Original name: DurationSelectionActionSheet
        entity = argFoo;
        entity = entity.onClose;
        var _closure2_slot0 = entity;
        entity = _closure1_slot10;
        tangon = undefined;
        yankee = entity.bind(tangon)();
        zuuluu = _closure1_slot14;
        golfie = _closure1_slot0;
        offset = _closure1_slot2;
        entity = 8;
        entity = offset[entity];
        entity = golfie.bind(tangon)(entity);
        michal = entity.ActionSheet;
        entity = {};
        option = _closure1_slot13;
        report = 9;
        report = offset[report];
        report = golfie.bind(tangon)(report);
        oscard = report.BottomSheetTitleHeader;
        report = {};
        romeon = 10;
        foxtra = offset[romeon];
        foxtra = golfie.bind(tangon)(foxtra);
        backup = foxtra.intl;
        foxtra = backup.string;
        romeon = offset[romeon];
        romeon = golfie.bind(tangon)(romeon);
        romeon = romeon.t;
        romeon = romeon.vKYZzc;
        romeon = foxtra.bind(backup)(romeon);
        report['title'] = romeon;
        oscard = option.bind(tangon)(oscard, report);
        report = new Array(2);
        report[0] = oscard;
        oscard = 11;
        oscard = offset[oscard];
        oscard = golfie.bind(tangon)(oscard);
        oscard = oscard.ActionSheetRow;
        golfie = oscard.Group;
        oscard = {};
        offset = false;
        oscard['hasIcons'] = offset;
        offset = yankee.map;
        verify = function(argFoo) {
            entity = argFoo;
            var _closure3_slot0 = entity;
            report = _closure1_slot13;
            zuuluu = _closure1_slot0;
            tangon = _closure1_slot2;
            michal = 11;
            michal = tangon[michal];
            tangon = undefined;
            michal = zuuluu.bind(tangon)(michal);
            zuuluu = michal.ActionSheetRow;
            michal = {};
            golfie = entity.label;
            michal['label'] = golfie;
            oscard = function() { // Original name: onPress
                zuuluu = _closure1_slot8;
                entity = _closure3_slot0;
                michal = entity.value;
                entity = undefined;
                michal = zuuluu.bind(entity)(michal);
                michal = _closure2_slot0;
                michal = michal.bind(entity)();
                return entity;
            };
            michal['onPress'] = oscard;
            entity = entity.value;
            entity = report.bind(tangon)(zuuluu, michal, entity);
            return entity;
        };
        verify = offset.bind(yankee)(verify);
        oscard['children'] = verify;
        oscard = option.bind(tangon)(golfie, oscard);
        report[1] = oscard;
        entity['children'] = report;
        entity = zuuluu.bind(tangon)(michal, entity);
        return entity;
    };
    var _closure1_slot16 = michal;
    michal = function(argFoo) { // Original name: GuildIncidentActionsActionSheet
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            entity = argFoo;
            report = entity.guild;
            var _closure2_slot0 = report;
            entity = entity.analyticsData;
            var _closure2_slot1 = entity;
            tangon = undefined;
            var _closure2_slot7 = tangon;
            var _closure2_slot8 = tangon;
            entity = _closure1_slot15;
            config = entity.bind(tangon)();
            entity = _closure1_slot9;
            michal = entity.bind(tangon)();
            entity = michal.time;
            var _closure2_slot2 = entity;
            source = michal.pauseInvites;
            var _closure2_slot3 = source;
            update = michal.pauseDms;
            var _closure2_slot4 = update;
            output = michal.hasTimeChanges;
            zuuluu = _closure1_slot0;
            golfie = _closure1_slot2;
            michal = 12;
            michal = golfie[michal];
            verify = zuuluu.bind(tangon)(michal);
            option = verify.useStateFromStores;
            michal = _closure1_slot4;
            oscard = new Array(1);
            oscard[0] = michal;
            michal = function() {
                zuuluu = _closure1_slot4;
                michal = zuuluu.getGuildIncident;
                entity = _closure2_slot0;
                entity = entity.id;
                entity = michal.bind(zuuluu)(entity);
                return entity;
            };
            oscard = option.bind(verify)(oscard, michal);
            michal = 13;
            option = golfie[michal];
            verify = zuuluu.bind(tangon)(option);
            option = verify.hasInvitesDisabled;
            sizing = option.bind(verify)(oscard);
            var _closure2_slot5 = sizing;
            michal = golfie[michal];
            zuuluu = zuuluu.bind(tangon)(michal);
            michal = zuuluu.hasDMsDisabled;
            echoed = michal.bind(zuuluu)(oscard);
            var _closure2_slot6 = echoed;
            verify = null;
            michal = verify == report;
            foxtra = undefined;
            if(michal) { _fun00002_ip = 222; continue _fun00001 }
 201:
            zuuluu = report.hasFeature;
            michal = _closure1_slot12;
            michal = michal.INVITES_DISABLED;
            foxtra = zuuluu.bind(report)(michal);
 222:
            report = _closure1_slot3;
            oscard = report.useEffect;
            zuuluu = new Array(2);
            zuuluu[0] = echoed;
            zuuluu[1] = sizing;
            michal = function() {
                report = _closure1_slot7;
                tangon = _closure2_slot5;
                entity = undefined;
                tangon = report.bind(entity)(tangon);
                zuuluu = _closure1_slot6;
                michal = _closure2_slot6;
                michal = zuuluu.bind(entity)(michal);
                return entity;
            };
            michal = oscard.bind(report)(michal, zuuluu);
            zuuluu = report.useMemo;
            michal = new Array(1);
            michal[0] = entity;
            entity = function() {
                _fun00003: for(var _fun00004_ip = 0; ; ) switch(_fun00004_ip) {
 0:
                    michal = _closure1_slot10;
                    entity = undefined;
                    tangon = michal.bind(entity)();
                    zuuluu = tangon.find;
                    michal = function(argFoo) {
                        entity = argFoo;
                        michal = entity.value;
                        entity = _closure2_slot2;
                        entity = michal === entity;
                        return entity;
                    };
                    michal = zuuluu.bind(tangon)(michal);
                    zuuluu = null;
                    zuuluu = zuuluu == michal;
                    if(zuuluu) { _fun00004_ip = 46; continue _fun00003 }
 41:
                    entity = michal.label;
 46:
                    return entity;
                }
            };
            offset = zuuluu.bind(report)(entity, michal);
            entity = function() { // Original name: onDurationSelectorClose
                zuuluu = _closure1_slot0;
                michal = _closure1_slot2;
                entity = 14;
                michal = michal[entity];
                entity = undefined;
                tangon = zuuluu.bind(entity)(michal);
                zuuluu = tangon.showActionSheet;
                michal = {};
                golfie = _closure1_slot13;
                oscard = _closure1_slot17;
                report = {};
                verify = _closure2_slot0;
                report['guild'] = verify;
                option = _closure2_slot1;
                report['analyticsData'] = option;
                report = golfie.bind(entity)(oscard, report);
                michal['content'] = report;
                report = 'GuildIncidentActionsActionSheet';
                michal['key'] = report;
                michal = zuuluu.bind(tangon)(michal);
                return entity;
            };
            _closure2_slot7 = entity;
            kiloes = function() { // Original name: handleClose
                tangon = _closure1_slot1;
                zuuluu = _closure1_slot2;
                entity = 14;
                zuuluu = zuuluu[entity];
                entity = undefined;
                report = tangon.bind(entity)(zuuluu);
                tangon = report.hideActionSheet;
                zuuluu = 'GuildIncidentActionsActionSheet';
                zuuluu = tangon.bind(report)(zuuluu);
                michal = _closure1_slot5;
                michal = michal.bind(entity)();
                return entity;
            };
            _closure2_slot8 = kiloes;
            zuuluu = _closure1_slot14;
            backup = _closure1_slot0;
            vacuum = _closure1_slot2;
            entity = 8;
            entity = vacuum[entity];
            entity = backup.bind(tangon)(entity);
            michal = entity.ActionSheet;
            entity = {};
            option = true;
            entity['startExpanded'] = option;
            golfie = _closure1_slot13;
            report = 9;
            report = vacuum[report];
            report = backup.bind(tangon)(report);
            oscard = report.BottomSheetTitleHeader;
            report = {};
            result = 10;
            romeon = vacuum[result];
            romeon = backup.bind(tangon)(romeon);
            record = romeon.intl;
            sequen = record.string;
            romeon = vacuum[result];
            romeon = backup.bind(tangon)(romeon);
            romeon = romeon.t;
            romeon = romeon.oCYAc3;
            romeon = sequen.bind(record)(romeon);
            report['title'] = romeon;
            sequen = _closure1_slot1;
            record = 15;
            romeon = vacuum[record];
            sequen = sequen.bind(tangon)(romeon);
            romeon = {};
            record = vacuum[record];
            record = backup.bind(tangon)(record);
            record = record.BetaSizes;
            record = record.SMALL;
            romeon['size'] = record;
            config = config.beta;
            romeon['style'] = config;
            romeon = golfie.bind(tangon)(sequen, romeon);
            report['leading'] = romeon;
            report = golfie.bind(tangon)(oscard, report);
            entity['header'] = report;
            report = 16;
            report = vacuum[report];
            report = backup.bind(tangon)(report);
            oscard = report.InputButton;
            report = {};
            romeon = 17;
            romeon = vacuum[romeon];
            romeon = backup.bind(tangon)(romeon);
            backup = romeon.ChevronLargeDownIcon;
            romeon = {};
            vacuum = 'sm';
            romeon['size'] = vacuum;
            romeon = golfie.bind(tangon)(backup, romeon);
            report['icon'] = romeon;
            romeon = 'end';
            report['iconPosition'] = romeon;
            romeon = verify != offset;
            verify = '';
            if(!romeon) { _fun00002_ip = 575; continue _fun00001 }
 572:
            verify = offset;
 575:
            report['text'] = verify;
            verify = function() { // Original name: onPress
                zuuluu = _closure1_slot0;
                michal = _closure1_slot2;
                entity = 14;
                michal = michal[entity];
                entity = undefined;
                tangon = zuuluu.bind(entity)(michal);
                zuuluu = tangon.showActionSheet;
                michal = {};
                golfie = _closure1_slot13;
                oscard = _closure1_slot16;
                report = {};
                option = _closure2_slot7;
                report['onClose'] = option;
                report = golfie.bind(entity)(oscard, report);
                michal['content'] = report;
                report = 'DurationSelectionActionSheet';
                michal['key'] = report;
                michal = zuuluu.bind(tangon)(michal);
                return entity;
            };
            report['onPress'] = verify;
            oscard = golfie.bind(tangon)(oscard, report);
            report = new Array(4);
            report[0] = oscard;
            offset = _closure1_slot14;
            cntext = _closure1_slot0;
            sequen = _closure1_slot2;
            oscard = 18;
            oscard = sequen[oscard];
            oscard = cntext.bind(tangon)(oscard);
            verify = oscard.TableRowGroup;
            golfie = {};
            oscard = false;
            golfie['hasIcons'] = oscard;
            vacuum = _closure1_slot13;
            oscard = 19;
            romeon = sequen[oscard];
            romeon = cntext.bind(tangon)(romeon);
            backup = romeon.TableSwitchRow;
            romeon = {};
            config = sequen[result];
            config = cntext.bind(tangon)(config);
            papara = config.intl;
            record = papara.string;
            config = sequen[result];
            config = cntext.bind(tangon)(config);
            config = config.t;
            config = config.Uwsjn5;
            config = record.bind(papara)(config);
            romeon['label'] = config;
            config = sequen[result];
            config = cntext.bind(tangon)(config);
            record = config.intl;
            config = record.string;
            sequen = sequen[result];
            sequen = cntext.bind(tangon)(sequen);
            sequen = sequen.t;
            sequen = sequen.qPJkZm;
            sequen = config.bind(record)(sequen);
            romeon['subLabel'] = sequen;
            sequen = source;
            if(sequen) { _fun00002_ip = 775; continue _fun00001 }
 772:
            sequen = foxtra;
 775:
            romeon['value'] = sequen;
            sequen = function() { // Original name: onValueChange
                zuuluu = _closure1_slot7;
                entity = _closure2_slot3;
                michal = !entity;
                entity = undefined;
                michal = zuuluu.bind(entity)(michal);
                return entity;
            };
            romeon['onValueChange'] = sequen;
            romeon['disabled'] = foxtra;
            backup = vacuum.bind(tangon)(backup, romeon);
            romeon = new Array(2);
            romeon[0] = backup;
            if(!foxtra) { _fun00002_ip = 987; continue _fun00001 }
 815:
            sequen = _closure1_slot13;
            papara = _closure1_slot0;
            config = _closure1_slot2;
            record = 20;
            backup = config[record];
            backup = papara.bind(tangon)(backup);
            vacuum = backup.TableRow;
            backup = {};
            record = config[record];
            record = papara.bind(tangon)(record);
            record = record.TableRow;
            cntext = record.Icon;
            record = {};
            status = _closure1_slot1;
            target = 21;
            target = config[target];
            target = status.bind(tangon)(target);
            record['source'] = target;
            target = 22;
            target = config[target];
            target = papara.bind(tangon)(target);
            target = target.WarningIcon;
            record['IconComponent'] = target;
            target = 'secondary';
            record['variant'] = target;
            record = sequen.bind(tangon)(cntext, record);
            backup['icon'] = record;
            record = config[result];
            record = papara.bind(tangon)(record);
            cntext = record.intl;
            record = cntext.string;
            config = config[result];
            config = papara.bind(tangon)(config);
            config = config.t;
            config = config.9GPbsb;
            config = record.bind(cntext)(config);
            backup['label'] = config;
            foxtra = sequen.bind(tangon)(vacuum, backup);
 987:
            romeon[1] = foxtra;
            golfie['children'] = romeon;
            golfie = offset.bind(tangon)(verify, golfie);
            report[1] = golfie;
            backup = _closure1_slot13;
            sequen = _closure1_slot0;
            foxtra = _closure1_slot2;
            oscard = foxtra[oscard];
            oscard = sequen.bind(tangon)(oscard);
            golfie = oscard.TableSwitchRow;
            oscard = {};
            verify = foxtra[result];
            verify = sequen.bind(tangon)(verify);
            romeon = verify.intl;
            offset = romeon.string;
            verify = foxtra[result];
            verify = sequen.bind(tangon)(verify);
            verify = verify.t;
            verify = verify.wrDmAw;
            verify = offset.bind(romeon)(verify);
            oscard['label'] = verify;
            verify = foxtra[result];
            verify = sequen.bind(tangon)(verify);
            romeon = verify.intl;
            offset = romeon.string;
            verify = foxtra[result];
            verify = sequen.bind(tangon)(verify);
            verify = verify.t;
            verify = verify.UQbJW1;
            verify = offset.bind(romeon)(verify);
            oscard['subLabel'] = verify;
            oscard['value'] = update;
            verify = function() { // Original name: onValueChange
                zuuluu = _closure1_slot6;
                entity = _closure2_slot4;
                michal = !entity;
                entity = undefined;
                michal = zuuluu.bind(entity)(michal);
                return entity;
            };
            oscard['onValueChange'] = verify;
            oscard['start'] = option;
            oscard['end'] = option;
            oscard = backup.bind(tangon)(golfie, oscard);
            report[2] = oscard;
            option = _closure1_slot14;
            oscard = 23;
            oscard = foxtra[oscard];
            oscard = sequen.bind(tangon)(oscard);
            golfie = oscard.ButtonGroup;
            oscard = {};
            offset = 24;
            verify = foxtra[offset];
            verify = sequen.bind(tangon)(verify);
            romeon = verify.Button;
            verify = {};
            ctrled = function() { // Original name: onPress
                _fun00005: for(var _fun00006_ip = 0; ; ) switch(_fun00006_ip) {
 0:
                    offset = _closure1_slot0;
                    foxtra = _closure1_slot2;
                    entity = 25;
                    michal = foxtra[entity];
                    entity = undefined;
                    tangon = offset.bind(entity)(michal);
                    zuuluu = tangon.setGuildIncidentActions;
                    sizing = _closure2_slot0;
                    update = sizing.id;
                    romeon = _closure2_slot3;
                    yankee = _closure2_slot4;
                    verify = _closure2_slot2;
                    source = tangon;
                    echoed = romeon;
                    result = yankee;
                    output = verify;
                    michal = source[zuuluu](update, echoed, result, output, sizing);
                    michal = _closure2_slot8;
                    michal = michal.bind(entity)();
                    michal = _closure2_slot1;
                    kiloes = michal.source;
                    golfie = michal.alertType;
                    backup = michal.messageId;
                    zuuluu = _closure1_slot1;
                    michal = 26;
                    michal = foxtra[michal];
                    oscard = zuuluu.bind(entity)(michal);
                    tangon = oscard.track;
                    michal = _closure1_slot11;
                    zuuluu = michal.GUILD_RAID_INTERVENTION_STATE_CHANGE;
                    michal = {};
                    sizing = sizing.id;
                    michal['guild_id'] = sizing;
                    michal['source'] = kiloes;
                    michal['raid_alert_id'] = backup;
                    michal['raid_alert_type'] = golfie;
                    golfie = 13;
                    backup = foxtra[golfie];
                    kiloes = offset.bind(entity)(backup);
                    backup = kiloes.getEnabledInterventions;
                    backup = backup.bind(kiloes)(romeon, yankee);
                    michal['intervention_type_enabled'] = backup;
                    golfie = foxtra[golfie];
                    offset = offset.bind(entity)(golfie);
                    golfie = offset.getDisabledInterventions;
                    golfie = golfie.bind(offset)(romeon, yankee);
                    michal['intervention_type_disabled'] = golfie;
                    golfie = 60;
                    golfie = golfie * verify;
                    michal['duration'] = golfie;
                    michal = tangon.bind(oscard)(zuuluu, michal);
                    michal = _closure2_slot5;
                    michal = !michal;
                    if(!michal) { _fun00006_ip = 248; continue _fun00005 }
 241:
                    zuuluu = _closure2_slot6;
                    michal = !zuuluu;
 248:
                    if(michal) { _fun00006_ip = 255; continue _fun00005 }
 251:
                    michal = _closure2_slot3;
 255:
                    if(michal) { _fun00006_ip = 262; continue _fun00005 }
 258:
                    michal = _closure2_slot4;
 262:
                    if(michal) { _fun00006_ip = 353; continue _fun00005 }
 265:
                    zuuluu = _closure1_slot0;
                    verify = _closure1_slot2;
                    michal = 14;
                    michal = verify[michal];
                    tangon = zuuluu.bind(entity)(michal);
                    zuuluu = tangon.showActionSheet;
                    michal = {};
                    golfie = _closure1_slot13;
                    oscard = _closure1_slot1;
                    report = 27;
                    report = verify[report];
                    oscard = oscard.bind(entity)(report);
                    report = {};
                    option = _closure2_slot0;
                    option = option.id;
                    report['guildId'] = option;
                    report = golfie.bind(entity)(oscard, report);
                    michal['content'] = report;
                    report = 'GuildRaidLockdownFeedbackActionSheet';
                    michal['key'] = report;
                    michal = zuuluu.bind(tangon)(michal);
 353:
                    return entity;
                }
            };
            verify['onPress'] = ctrled;
            ctrled = foxtra[result];
            ctrled = sequen.bind(tangon)(ctrled);
            vacuum = ctrled.intl;
            ctrled = vacuum.string;
            foxtra = foxtra[result];
            foxtra = sequen.bind(tangon)(foxtra);
            foxtra = foxtra.t;
            foxtra = foxtra.R3BPHx;
            foxtra = ctrled.bind(vacuum)(foxtra);
            verify['text'] = foxtra;
            foxtra = 'primary';
            verify['variant'] = foxtra;
            foxtra = 'md';
            verify['size'] = foxtra;
            sizing = source !== sizing;
            if(sizing) { _fun00002_ip = 1299; continue _fun00001 }
 1295:
            sizing = update !== echoed;
 1299:
            if(sizing) { _fun00002_ip = 1305; continue _fun00001 }
 1302:
            sizing = output;
 1305:
            sizing = !sizing;
            verify['disabled'] = sizing;
            romeon = backup.bind(tangon)(romeon, verify);
            verify = new Array(2);
            verify[0] = romeon;
            romeon = _closure1_slot13;
            output = _closure1_slot0;
            backup = _closure1_slot2;
            offset = backup[offset];
            offset = output.bind(tangon)(offset);
            yankee = offset.Button;
            offset = {};
            offset['onPress'] = kiloes;
            kiloes = backup[result];
            kiloes = output.bind(tangon)(kiloes);
            sizing = kiloes.intl;
            kiloes = sizing.string;
            backup = backup[result];
            backup = output.bind(tangon)(backup);
            backup = backup.t;
            backup = backup.ETE/oK;
            backup = kiloes.bind(sizing)(backup);
            offset['text'] = backup;
            backup = 'secondary';
            offset['variant'] = backup;
            offset['size'] = foxtra;
            offset = romeon.bind(tangon)(yankee, offset);
            verify[1] = offset;
            oscard['children'] = verify;
            oscard = option.bind(tangon)(golfie, oscard);
            report[3] = oscard;
            entity['children'] = report;
            entity = zuuluu.bind(tangon)(michal, entity);
            return entity;
        }
    };
    var _closure1_slot17 = michal;
    tangon = 28;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/guild_antiraid/native/GuildIncidentActionsActionSheet.tsx';
    tangon = report.bind(oscard)(tangon);
    zuuluu['default'] = michal;
    return entity;
})();