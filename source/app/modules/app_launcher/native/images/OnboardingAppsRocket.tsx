// app/modules/app_launcher/native/images/OnboardingAppsRocket.tsx
export default (function(argFoo, argBar, argBaz, argCorge, _, argFred, argPlugh) {
    report = argBar;
    zulu = argFred;
    oscar = argPlugh;
    var _closure1_slot0 = report;
    entity = argBaz;
    var _closure1_slot1 = entity;
    var _closure1_slot2 = oscar;
    entity = global;
    options = entity.Object;
    golf = options.defineProperty;
    tango = {};
    entity = true;
    tango['value'] = entity;
    entity = '__esModule';
    entity = golf.bind(options)(zulu, entity, tango);
    entity = 0;
    golf = oscar[entity];
    tango = argCorge;
    entity = undefined;
    tango = tango.bind(entity)(golf);
    tango = 1;
    golf = oscar[tango];
    golf = report.bind(entity)(golf);
    golf = golf.jsx;
    var _closure1_slot3 = golf;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.jsxs;
    var _closure1_slot4 = tango;
    tango = 3;
    tango = oscar[tango];
    oscar = report.bind(entity)(tango);
    report = oscar.fileFinishedImporting;
    tango = 'modules/app_launcher/native/images/OnboardingAppsRocket.tsx';
    tango = report.bind(oscar)(tango);
    mike = function(argFoo) { // Original name: _default
        tango = _closure1_slot4;
        mike = _closure1_slot1;
        kilo = _closure1_slot2;
        romeo = 2;
        entity = kilo[romeo];
        zulu = undefined;
        mike = mike.bind(zulu)(entity);
        entity = {};
        oscar = 'none';
        entity['fill'] = oscar;
        result = argFoo;
        echo = entity;
        oscar = copyDataProperties(echo, result);
        backup = _closure1_slot3;
        foxtrot = _closure1_slot0;
        report = kilo[romeo];
        report = foxtrot.bind(zulu)(report);
        oscar = report.Path;
        report = {'fill': '#88898E', 'd': 'm36.45 13.982-16.079 2.562a2.17 2.17 0 0 0-1.185.609l-5.742 5.733a.593.593 0 0 0 .305.993 9.329 9.329 0 0 1 4.62 2.795 7.664 7.664 0 0 1 2.09 6.734L36.45 13.982ZM49.174 26.714 46.62 42.785a2.17 2.17 0 0 1-.609 1.193l-5.741 5.734a.593.593 0 0 1-.993-.297 9.265 9.265 0 0 0-2.787-4.62 7.647 7.647 0 0 0-6.742-2.09l19.426-15.991Z'};
        report = backup.bind(zulu)(oscar, report);
        oscar = new Array(21);
        oscar[0] = report;
        report = kilo[romeo];
        report = foxtrot.bind(zulu)(report);
        golf = report.Path;
        report = {'fill': '#727378', 'd': 'm23.009 33.47 6.676 6.675-2.265 2.265a.448.448 0 0 1-.635 0l-6.047-6.047a.448.448 0 0 1 0-.634l2.265-2.265.006.005Z'};
        report = backup.bind(zulu)(golf, report);
        oscar[1] = report;
        report = kilo[romeo];
        report = foxtrot.bind(zulu)(report);
        golf = report.Path;
        report = {'fill': '#5A65E8', 'd': 'm20.459 33.416 4.644 4.645 4.653 4.652M18.746 29.95v-.225a4.324 4.324 0 0 0-1.338-2.338l-.056-.048-.048-.048a4.228 4.228 0 0 0-2.33-1.338 1.186 1.186 0 0 0-.232 0v.049a7.207 7.207 0 0 0-2.49 6.454h.04a7.207 7.207 0 0 0 6.454-2.49v-.017Z'};
        report = backup.bind(zulu)(golf, report);
        oscar[2] = report;
        report = kilo[romeo];
        report = foxtrot.bind(zulu)(report);
        golf = report.Path;
        report = {'fill': '#A4A5AB', 'd': 'M61.986 2.666C58.6 25.448 29.748 42.704 29.748 42.704l-4.645-4.652-4.652-4.653S37.707 4.572 60.489 1.17a1.321 1.321 0 0 1 1.497 1.497Z'};
        report = backup.bind(zulu)(golf, report);
        oscar[3] = report;
        report = kilo[romeo];
        report = foxtrot.bind(zulu)(report);
        golf = report.Path;
        report = {'fill': '#5A65E8', 'd': 'M33.207 44.418c.078-.007.155-.007.232 0 .902.18 1.72.65 2.33 1.337l.049.049.056.048a4.324 4.324 0 0 1 1.337 2.338v.224h-.048a7.207 7.207 0 0 1-6.454 2.49 7.207 7.207 0 0 1 2.49-6.454l.008-.032ZM25.576 43.442a.505.505 0 0 0 0-.705l-1.874-1.874-1.401-1.401-1.874-1.874a.497.497 0 0 0-.705 0c-1.28 1.25-5.525 5.806-4.668 10.53 4.716.849 9.249-3.395 10.522-4.676Z'};
        report = backup.bind(zulu)(golf, report);
        oscar[4] = report;
        report = kilo[romeo];
        report = foxtrot.bind(zulu)(report);
        golf = report.Path;
        report = {'fill': '#5A65E8', 'fillRule': 'evenodd', 'd': 'M47.052 17.857a1.78 1.78 0 0 1-.368-.512l-.288-.585-.585-.288a1.82 1.82 0 0 1-.513-.369 1.882 1.882 0 0 1-.368-2.154l.28-.584-.144-.64a1.898 1.898 0 0 1 1.425-2.267l.633-.144.409-.512a1.898 1.898 0 0 1 2.658-.297l.505.409h.656a1.89 1.89 0 0 1 1.89 1.89v.648l.408.512a1.898 1.898 0 0 1-.296 2.66l-.512.408-.145.632a1.897 1.897 0 0 1-2.266 1.425l-.64-.144-.585.28a1.89 1.89 0 0 1-2.154-.368Z', 'clipRule': 'evenodd'};
        report = backup.bind(zulu)(golf, report);
        oscar[5] = report;
        report = kilo[romeo];
        report = foxtrot.bind(zulu)(report);
        golf = report.Path;
        report = {'fill': '#F2F3F5', 'fillRule': 'evenodd', 'd': 'M51.352 11.107a.697.697 0 0 1 .697.697v.8c0 .157.054.31.152.433l.513.648a.69.69 0 0 1-.112.977l-.641.52a.689.689 0 0 0-.248.385l-.184.8a.689.689 0 0 1-.801.521l-.801-.176a.69.69 0 0 0-.456.048l-.745.36a.704.704 0 0 1-.929-.328l-.36-.745a.657.657 0 0 0-.32-.32l-.745-.36a.713.713 0 0 1-.329-.937l.36-.737a.69.69 0 0 0 .049-.456l-.176-.8a.688.688 0 0 1 .52-.802l.8-.184a.737.737 0 0 0 .385-.248l.513-.64a.705.705 0 0 1 .984-.113l.65.513a.697.697 0 0 0 .432.152l.792-.008Z', 'clipRule': 'evenodd'};
        report = backup.bind(zulu)(golf, report);
        oscar[6] = report;
        report = kilo[romeo];
        report = foxtrot.bind(zulu)(report);
        golf = report.Path;
        report = {'fill': '#F2F3F5', 'd': 'm36.45 13.982-16.079 2.562a2.17 2.17 0 0 0-1.185.609l-5.742 5.733a.593.593 0 0 0 .305.993 9.329 9.329 0 0 1 4.62 2.795 7.664 7.664 0 0 1 2.09 6.734L36.45 13.982ZM49.174 26.714 46.62 42.785a2.17 2.17 0 0 1-.609 1.193l-5.741 5.734a.593.593 0 0 1-.993-.297 9.265 9.265 0 0 0-2.787-4.62 7.647 7.647 0 0 0-6.742-2.09l19.426-15.991Z'};
        report = backup.bind(zulu)(golf, report);
        oscar[7] = report;
        report = kilo[romeo];
        report = foxtrot.bind(zulu)(report);
        golf = report.Path;
        report = {'fill': '#5A65E9', 'd': 'm23.009 33.47 6.676 6.675-2.265 2.265a.448.448 0 0 1-.635 0l-6.047-6.047a.448.448 0 0 1 0-.634l2.265-2.265.006.005Z'};
        report = backup.bind(zulu)(golf, report);
        oscar[8] = report;
        report = kilo[romeo];
        report = foxtrot.bind(zulu)(report);
        golf = report.Path;
        report = {'fill': '#5A65E8', 'd': 'm20.459 33.416 4.644 4.645 4.653 4.652'};
        report = backup.bind(zulu)(golf, report);
        oscar[9] = report;
        report = kilo[romeo];
        report = foxtrot.bind(zulu)(report);
        golf = report.Path;
        report = {'fill': 'url(#a)', 'd': 'M18.746 29.95v-.225a4.324 4.324 0 0 0-1.338-2.338l-.056-.048-.048-.048a4.228 4.228 0 0 0-2.33-1.338 1.186 1.186 0 0 0-.232 0v.049a7.207 7.207 0 0 0-2.49 6.454h.04a7.207 7.207 0 0 0 6.454-2.49v-.017Z'};
        report = backup.bind(zulu)(golf, report);
        oscar[10] = report;
        report = kilo[romeo];
        report = foxtrot.bind(zulu)(report);
        golf = report.Path;
        report = {'fill': '#D298FF', 'd': 'M61.986 2.666C58.6 25.448 29.748 42.704 29.748 42.704l-4.645-4.652-4.652-4.653S37.707 4.572 60.489 1.17a1.321 1.321 0 0 1 1.497 1.497Z'};
        report = backup.bind(zulu)(golf, report);
        oscar[11] = report;
        report = kilo[romeo];
        report = foxtrot.bind(zulu)(report);
        golf = report.Path;
        report = {'fill': 'url(#b)', 'd': 'M33.207 44.418c.078-.007.155-.007.232 0 .902.18 1.72.65 2.33 1.337l.049.049.056.048a4.324 4.324 0 0 1 1.337 2.338v.224h-.048a7.207 7.207 0 0 1-6.454 2.49 7.207 7.207 0 0 1 2.49-6.454l.008-.032Z'};
        report = backup.bind(zulu)(golf, report);
        oscar[12] = report;
        report = kilo[romeo];
        report = foxtrot.bind(zulu)(report);
        golf = report.Path;
        report = {'fill': 'url(#c)', 'd': 'M25.576 43.442a.505.505 0 0 0 0-.705l-1.874-1.874-1.401-1.401-1.874-1.874a.497.497 0 0 0-.705 0c-1.28 1.25-5.525 5.806-4.668 10.53 4.716.849 9.249-3.395 10.522-4.676Z'};
        report = backup.bind(zulu)(golf, report);
        oscar[13] = report;
        report = kilo[romeo];
        report = foxtrot.bind(zulu)(report);
        golf = report.Path;
        report = {'fill': '#5A65E8', 'fillRule': 'evenodd', 'd': 'M47.052 17.857a1.78 1.78 0 0 1-.368-.512l-.288-.585-.585-.288a1.82 1.82 0 0 1-.513-.369 1.882 1.882 0 0 1-.368-2.154l.28-.584-.144-.64a1.898 1.898 0 0 1 1.425-2.267l.633-.144.409-.512a1.898 1.898 0 0 1 2.658-.297l.505.409h.656a1.89 1.89 0 0 1 1.89 1.89v.648l.408.512a1.898 1.898 0 0 1-.296 2.66l-.512.408-.145.632a1.897 1.897 0 0 1-2.266 1.425l-.64-.144-.585.28a1.89 1.89 0 0 1-2.154-.368Z', 'clipRule': 'evenodd'};
        report = backup.bind(zulu)(golf, report);
        oscar[14] = report;
        report = kilo[romeo];
        report = foxtrot.bind(zulu)(report);
        golf = report.Path;
        report = {'fill': '#F2F3F5', 'fillRule': 'evenodd', 'd': 'M51.352 11.107a.697.697 0 0 1 .697.697v.8c0 .157.054.31.152.433l.513.648a.69.69 0 0 1-.112.977l-.641.52a.689.689 0 0 0-.248.385l-.184.8a.689.689 0 0 1-.801.521l-.801-.176a.69.69 0 0 0-.456.048l-.745.36a.704.704 0 0 1-.929-.328l-.36-.745a.657.657 0 0 0-.32-.32l-.745-.36a.713.713 0 0 1-.329-.937l.36-.737a.69.69 0 0 0 .049-.456l-.176-.8a.688.688 0 0 1 .52-.802l.8-.184a.737.737 0 0 0 .385-.248l.513-.64a.705.705 0 0 1 .984-.113l.65.513a.697.697 0 0 0 .432.152l.792-.008Z', 'clipRule': 'evenodd'};
        report = backup.bind(zulu)(golf, report);
        oscar[15] = report;
        report = kilo[romeo];
        report = foxtrot.bind(zulu)(report);
        golf = report.Path;
        report = {'fill': '#84EE91', 'd': 'm53.681 48.805-3.617 2.963a1.874 1.874 0 0 0-.263 2.637l2.963 3.618c.656.8 1.837.918 2.637.262l3.618-2.963c.8-.656.918-1.836.262-2.637l-2.963-3.618a1.874 1.874 0 0 0-2.637-.262Z'};
        report = backup.bind(zulu)(golf, report);
        oscar[16] = report;
        report = kilo[romeo];
        report = foxtrot.bind(zulu)(report);
        golf = report.Path;
        report = {'fill': '#EF913C', 'fillRule': 'evenodd', 'd': 'M26.76 1.89A1.874 1.874 0 0 0 23.999.224l-4.34 2.322a1.866 1.866 0 0 0-.144 3.203l4.3 2.827a1.874 1.874 0 0 0 2.89-1.561l.057-5.125Z', 'clipRule': 'evenodd'};
        report = backup.bind(zulu)(golf, report);
        oscar[17] = report;
        report = kilo[romeo];
        report = foxtrot.bind(zulu)(report);
        golf = report.Path;
        report = {'fill': '#98AFFF', 'fillRule': 'evenodd', 'd': 'M12.22 52.298a1.025 1.025 0 0 0-1.362-1.361l-1.121.52a1.666 1.666 0 0 1-1.41 0l-1.129-.52a1.025 1.025 0 0 0-1.353 1.36l.52 1.122a1.73 1.73 0 0 1 0 1.41l-.52 1.12a1.025 1.025 0 0 0 1.353 1.362l1.13-.52a1.73 1.73 0 0 1 1.409 0l1.121.52a1.025 1.025 0 0 0 1.361-1.362l-.52-1.12a1.666 1.666 0 0 1 0-1.41l.52-1.121Z', 'clipRule': 'evenodd'};
        report = backup.bind(zulu)(golf, report);
        oscar[18] = report;
        report = kilo[romeo];
        report = foxtrot.bind(zulu)(report);
        golf = report.Path;
        report = {'fill': '#fff', 'fillRule': 'evenodd', 'd': 'M3.531 60.354a.545.545 0 0 0-.729-.729l-.608.28a.986.986 0 0 1-.801 0l-.609-.28a.545.545 0 0 0-.728.729l.28.608a.985.985 0 0 1 0 .801l-.28.609a.545.545 0 0 0 .728.728l.609-.28a.986.986 0 0 1 .8 0l.61.28a.545.545 0 0 0 .728-.728l-.28-.609a.92.92 0 0 1 0-.8l.28-.61Z', 'clipRule': 'evenodd'};
        report = backup.bind(zulu)(golf, report);
        oscar[19] = report;
        report = kilo[romeo];
        report = foxtrot.bind(zulu)(report);
        golf = report.Defs;
        report = {};
        options = kilo[romeo];
        options = foxtrot.bind(zulu)(options);
        verify = options.LinearGradient;
        options = {'id': 'a', 'x1': 12.115, 'x2': 18.746, 'y1': 29.237, 'y2': 29.237, 'gradientUnits': 'userSpaceOnUse'};
        offset = kilo[romeo];
        offset = foxtrot.bind(zulu)(offset);
        yankee = offset.Stop;
        offset = {'offset': 0.07, 'stopColor': '#F9E172'};
        yankee = backup.bind(zulu)(yankee, offset);
        offset = new Array(4);
        offset[0] = yankee;
        yankee = kilo[romeo];
        yankee = foxtrot.bind(zulu)(yankee);
        sizing = yankee.Stop;
        yankee = {'offset': 0.27, 'stopColor': '#F7D067'};
        yankee = backup.bind(zulu)(sizing, yankee);
        offset[1] = yankee;
        yankee = kilo[romeo];
        yankee = foxtrot.bind(zulu)(yankee);
        sizing = yankee.Stop;
        yankee = {'offset': 0.67, 'stopColor': '#F1A549'};
        yankee = backup.bind(zulu)(sizing, yankee);
        offset[2] = yankee;
        yankee = kilo[romeo];
        yankee = foxtrot.bind(zulu)(yankee);
        sizing = yankee.Stop;
        yankee = {'offset': 0.83, 'stopColor': '#EF913C'};
        yankee = backup.bind(zulu)(sizing, yankee);
        offset[3] = yankee;
        options['children'] = offset;
        verify = tango.bind(zulu)(verify, options);
        options = new Array(3);
        options[0] = verify;
        verify = kilo[romeo];
        verify = foxtrot.bind(zulu)(verify);
        offset = verify.LinearGradient;
        verify = {'id': 'b', 'x1': 30.613, 'x2': 37.243, 'y1': 47.733, 'y2': 47.733, 'gradientUnits': 'userSpaceOnUse'};
        yankee = kilo[romeo];
        yankee = foxtrot.bind(zulu)(yankee);
        sizing = yankee.Stop;
        yankee = {'offset': 0.07, 'stopColor': '#F9E172'};
        sizing = backup.bind(zulu)(sizing, yankee);
        yankee = new Array(4);
        yankee[0] = sizing;
        sizing = kilo[romeo];
        sizing = foxtrot.bind(zulu)(sizing);
        output = sizing.Stop;
        sizing = {'offset': 0.27, 'stopColor': '#F7D067'};
        sizing = backup.bind(zulu)(output, sizing);
        yankee[1] = sizing;
        sizing = kilo[romeo];
        sizing = foxtrot.bind(zulu)(sizing);
        output = sizing.Stop;
        sizing = {'offset': 0.67, 'stopColor': '#F1A549'};
        sizing = backup.bind(zulu)(output, sizing);
        yankee[2] = sizing;
        sizing = kilo[romeo];
        sizing = foxtrot.bind(zulu)(sizing);
        output = sizing.Stop;
        sizing = {'offset': 0.83, 'stopColor': '#EF913C'};
        sizing = backup.bind(zulu)(output, sizing);
        yankee[3] = sizing;
        verify['children'] = yankee;
        verify = tango.bind(zulu)(offset, verify);
        options[1] = verify;
        verify = kilo[romeo];
        verify = foxtrot.bind(zulu)(verify);
        offset = verify.LinearGradient;
        verify = {'id': 'c', 'x1': 14.934, 'x2': 25.72, 'y1': 42.833, 'y2': 42.833, 'gradientUnits': 'userSpaceOnUse'};
        yankee = kilo[romeo];
        yankee = foxtrot.bind(zulu)(yankee);
        sizing = yankee.Stop;
        yankee = {'offset': 0.07, 'stopColor': '#F9E172'};
        sizing = backup.bind(zulu)(sizing, yankee);
        yankee = new Array(4);
        yankee[0] = sizing;
        sizing = kilo[romeo];
        sizing = foxtrot.bind(zulu)(sizing);
        output = sizing.Stop;
        sizing = {'offset': 0.27, 'stopColor': '#F7D067'};
        sizing = backup.bind(zulu)(output, sizing);
        yankee[1] = sizing;
        sizing = kilo[romeo];
        sizing = foxtrot.bind(zulu)(sizing);
        output = sizing.Stop;
        sizing = {'offset': 0.67, 'stopColor': '#F1A549'};
        sizing = backup.bind(zulu)(output, sizing);
        yankee[2] = sizing;
        romeo = kilo[romeo];
        romeo = foxtrot.bind(zulu)(romeo);
        foxtrot = romeo.Stop;
        romeo = {'offset': 0.83, 'stopColor': '#EF913C'};
        romeo = backup.bind(zulu)(foxtrot, romeo);
        yankee[3] = romeo;
        verify['children'] = yankee;
        verify = tango.bind(zulu)(offset, verify);
        options[2] = verify;
        report['children'] = options;
        report = tango.bind(zulu)(golf, report);
        oscar[20] = report;
        report = 'children';
        entity[report] = oscar;
        entity = tango.bind(zulu)(mike, entity);
        return entity;
    };
    zulu['default'] = mike;
    return entity;
})();