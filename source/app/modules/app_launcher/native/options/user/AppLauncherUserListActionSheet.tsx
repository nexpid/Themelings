// app/modules/app_launcher/native/options/user/AppLauncherUserListActionSheet.tsx
export default (function(argFoo, argBar, argBaz, argCorge, _, argFred, argPlugh) {
    report = argBar;
    zulu = argFred;
    oscar = argPlugh;
    var _closure1_slot0 = report;
    entity = argBaz;
    var _closure1_slot1 = entity;
    var _closure1_slot2 = oscar;
    entity = function(argFoo) { // Original name: EmptyStateWithSnowflakeQuery
        entity = argFoo;
        golf = entity.query;
        entity = entity.onPressRow;
        var _closure2_slot0 = entity;
        mike = _closure1_slot5;
        tango = undefined;
        oscar = mike.bind(tango)();
        zulu = _closure1_slot4;
        mike = _closure1_slot0;
        options = _closure1_slot2;
        entity = 11;
        entity = options[entity];
        entity = mike.bind(tango)(entity);
        mike = entity.AppLauncherList;
        entity = {};
        oscar = oscar.emptyState;
        entity['contentContainerStyle'] = oscar;
        oscar = new Array(1);
        oscar[0] = golf;
        entity['data'] = oscar;
        report = function(argFoo) { // Original name: renderItem
            entity = argFoo;
            report = entity.item;
            tango = _closure1_slot4;
            mike = _closure1_slot0;
            zulu = _closure1_slot2;
            entity = 12;
            entity = zulu[entity];
            zulu = undefined;
            entity = mike.bind(zulu)(entity);
            mike = entity.TableRow;
            entity = {'label': null, 'start': true, 'end': true};
            entity['label'] = report;
            report = _closure2_slot0;
            entity['onPress'] = report;
            entity = tango.bind(zulu)(mike, entity);
            return entity;
        };
        entity['renderItem'] = report;
        report = 'always';
        entity['keyboardShouldPersistTaps'] = report;
        report = 'on-drag';
        entity['keyboardDismissMode'] = report;
        entity = zulu.bind(tango)(mike, entity);
        return entity;
    };
    var _closure1_slot6 = entity;
    entity = global;
    options = entity.Object;
    golf = options.defineProperty;
    tango = {};
    entity = true;
    tango['value'] = entity;
    entity = '__esModule';
    entity = golf.bind(options)(zulu, entity, tango);
    entity = 0;
    golf = oscar[entity];
    tango = argCorge;
    entity = undefined;
    tango = tango.bind(entity)(golf);
    var _closure1_slot3 = tango;
    offset = 1;
    tango = oscar[offset];
    tango = report.bind(entity)(tango);
    yankee = tango.DEFAULT_CONTENT_PADDING;
    tango = 2;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.jsx;
    var _closure1_slot4 = tango;
    tango = 3;
    tango = oscar[tango];
    options = report.bind(entity)(tango);
    golf = options.createStyles;
    tango = {};
    verify = {};
    verify['paddingHorizontal'] = yankee;
    verify['paddingTop'] = yankee;
    verify['flex'] = offset;
    tango['emptyState'] = verify;
    tango = golf.bind(options)(tango);
    var _closure1_slot5 = tango;
    tango = 13;
    tango = oscar[tango];
    oscar = report.bind(entity)(tango);
    report = oscar.fileFinishedImporting;
    tango = 'modules/app_launcher/native/options/user/AppLauncherUserListActionSheet.tsx';
    tango = report.bind(oscar)(tango);
    mike = function(argFoo) { // Original name: AppLauncherUserListActionSheet
        tango = argFoo;
        mike = tango.onUserPress;
        var _closure2_slot0 = mike;
        golf = tango.onActionSheetDismiss;
        var _closure2_slot1 = golf;
        zulu = tango.channel;
        oscar = tango.option;
        options = zulu.guild_id;
        yankee = zulu.id;
        tango = _closure1_slot3;
        offset = tango.useCallback;
        verify = new Array(1);
        verify[0] = golf;
        zulu = function() {
            zulu = _closure1_slot1;
            mike = _closure1_slot2;
            entity = 4;
            mike = mike[entity];
            entity = undefined;
            tango = zulu.bind(entity)(mike);
            zulu = tango.hideActionSheet;
            mike = 'AppLauncherUserListActionSheet';
            mike = zulu.bind(tango)(mike);
            mike = _closure2_slot1;
            mike = mike.bind(entity)();
            return entity;
        };
        offset = offset.bind(tango)(zulu, verify);
        var _closure2_slot2 = offset;
        verify = tango.useCallback;
        zulu = new Array(2);
        zulu[0] = offset;
        zulu[1] = mike;
        mike = function(argFoo) {
            entity = argFoo;
            entity = entity.user;
            tango = _closure2_slot0;
            zulu = {};
            zulu['user'] = entity;
            entity = undefined;
            zulu = tango.bind(entity)(zulu);
            mike = _closure2_slot2;
            mike = mike.bind(entity)();
            return entity;
        };
        verify = verify.bind(tango)(mike, zulu);
        var _closure2_slot3 = verify;
        zulu = tango.useCallback;
        mike = new Array(1);
        mike[0] = verify;
        entity = function(argFoo) {
            _fun119276: for(var _fun119276_ip = 0; ; ) switch(_fun119276_ip) {
 0:
                golf = argFoo;
                var _closure3_slot0 = golf;
                zulu = _closure1_slot0;
                tango = _closure1_slot2;
                entity = 5;
                entity = tango[entity];
                report = undefined;
                zulu = zulu.bind(report)(entity);
                entity = zulu.isSnowflake;
                entity = entity.bind(zulu)(golf);
                tango = _closure1_slot4;
                if(entity) { _fun119276_ip = 233; continue _fun119276 }
 55:
                verify = _closure1_slot1;
                romeo = _closure1_slot2;
                entity = 6;
                entity = romeo[entity];
                zulu = verify.bind(report)(entity);
                entity = {};
                options = {};
                offset = 80;
                options['paddingTop'] = offset;
                entity['style'] = options;
                options = 7;
                offset = romeo[options];
                offset = verify.bind(report)(offset);
                entity['lightSource'] = offset;
                options = romeo[options];
                options = verify.bind(report)(options);
                entity['darkSource'] = options;
                yankee = _closure1_slot0;
                options = 8;
                verify = romeo[options];
                verify = yankee.bind(report)(verify);
                foxtrot = verify.intl;
                offset = foxtrot.string;
                verify = romeo[options];
                verify = yankee.bind(report)(verify);
                verify = verify.t;
                verify = verify.vYocDw;
                verify = offset.bind(foxtrot)(verify);
                entity['title'] = verify;
                verify = romeo[options];
                verify = yankee.bind(report)(verify);
                offset = verify.intl;
                verify = offset.string;
                options = romeo[options];
                options = yankee.bind(report)(options);
                options = options.t;
                options = options.V6nAfH;
                options = verify.bind(offset)(options);
                entity['body'] = options;
                entity = tango.bind(report)(zulu, entity);
                _fun119276_ip = 261; continue _fun119276;
 233:
                zulu = _closure1_slot6;
                mike = {};
                mike['query'] = golf;
                oscar = function() { // Original name: onPressRow
                    zulu = _closure2_slot3;
                    mike = {};
                    entity = _closure3_slot0;
                    mike['user'] = entity;
                    entity = undefined;
                    entity = zulu.bind(entity)(mike);
                    return entity;
                };
                mike['onPressRow'] = oscar;
                entity = tango.bind(report)(zulu, mike);
 261:
                return entity;
            }
        };
        offset = zulu.bind(tango)(entity, mike);
        tango = _closure1_slot4;
        mike = _closure1_slot0;
        romeo = _closure1_slot2;
        entity = 9;
        entity = romeo[entity];
        zulu = undefined;
        entity = mike.bind(zulu)(entity);
        mike = entity.AppLauncherCommandOptionActionSheet;
        entity = {};
        entity['onDismiss'] = golf;
        entity['option'] = oscar;
        oscar = {};
        golf = 0;
        oscar['paddingHorizontal'] = golf;
        entity['contentContainerStyles'] = oscar;
        golf = _closure1_slot4;
        oscar = _closure1_slot1;
        report = 10;
        report = romeo[report];
        oscar = oscar.bind(zulu)(report);
        report = {'channelId': null, 'guildId': null, 'searchable': true, 'searchableEmptyState': null, 'headerShown': false, 'opensUserProfileOnUserPress': false};
        report['channelId'] = yankee;
        report['guildId'] = options;
        options = true;
        report['searchableEmptyState'] = offset;
        report['onUserPress'] = verify;
        report['inActionSheet'] = options;
        report['disableThemedGradient'] = options;
        report = golf.bind(zulu)(oscar, report);
        entity['children'] = report;
        entity = tango.bind(zulu)(mike, entity);
        return entity;
    };
    zulu['default'] = mike;
    mike = 'AppLauncherUserListActionSheet';
    zulu['APP_LAUNCHER_USER_LIST_ACTION_SHEET_KEY'] = mike;
    return entity;
})();