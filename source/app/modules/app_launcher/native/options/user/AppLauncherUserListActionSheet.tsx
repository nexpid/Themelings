// app/modules/app_launcher/native/options/user/AppLauncherUserListActionSheet.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    report = argBar;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    entity = argBaz;
    var _closure1_slot1 = entity;
    var _closure1_slot2 = oscard;
    entity = function(argFoo) { // Original name: EmptyStateWithSnowflakeQuery
        entity = argFoo;
        golfie = entity.query;
        entity = entity.onPressRow;
        var _closure2_slot0 = entity;
        michal = _closure1_slot5;
        tangon = undefined;
        oscard = michal.bind(tangon)();
        zuuluu = _closure1_slot4;
        michal = _closure1_slot0;
        option = _closure1_slot2;
        entity = 11;
        entity = option[entity];
        entity = michal.bind(tangon)(entity);
        michal = entity.AppLauncherList;
        entity = {};
        oscard = oscard.emptyState;
        entity['contentContainerStyle'] = oscard;
        oscard = new Array(1);
        oscard[0] = golfie;
        entity['data'] = oscard;
        report = function(argFoo) { // Original name: renderItem
            entity = argFoo;
            report = entity.item;
            tangon = _closure1_slot4;
            michal = _closure1_slot0;
            zuuluu = _closure1_slot2;
            entity = 12;
            entity = zuuluu[entity];
            zuuluu = undefined;
            entity = michal.bind(zuuluu)(entity);
            michal = entity.TableRow;
            entity = {'label': null, 'start': true, 'end': true};
            entity['label'] = report;
            report = _closure2_slot0;
            entity['onPress'] = report;
            entity = tangon.bind(zuuluu)(michal, entity);
            return entity;
        };
        entity['renderItem'] = report;
        report = 'always';
        entity['keyboardShouldPersistTaps'] = report;
        report = 'on-drag';
        entity['keyboardDismissMode'] = report;
        entity = zuuluu.bind(tangon)(michal, entity);
        return entity;
    };
    var _closure1_slot6 = entity;
    entity = global;
    option = entity.Object;
    golfie = option.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(option)(zuuluu, entity, tangon);
    entity = 0;
    golfie = oscard[entity];
    tangon = argCor;
    entity = undefined;
    tangon = tangon.bind(entity)(golfie);
    var _closure1_slot3 = tangon;
    offset = 1;
    tangon = oscard[offset];
    tangon = report.bind(entity)(tangon);
    yankee = tangon.DEFAULT_CONTENT_PADDING;
    tangon = 2;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.jsx;
    var _closure1_slot4 = tangon;
    tangon = 3;
    tangon = oscard[tangon];
    option = report.bind(entity)(tangon);
    golfie = option.createStyles;
    tangon = {};
    verify = {};
    verify['paddingHorizontal'] = yankee;
    verify['paddingTop'] = yankee;
    verify['flex'] = offset;
    tangon['emptyState'] = verify;
    tangon = golfie.bind(option)(tangon);
    var _closure1_slot5 = tangon;
    tangon = 13;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/app_launcher/native/options/user/AppLauncherUserListActionSheet.tsx';
    tangon = report.bind(oscard)(tangon);
    michal = function(argFoo) { // Original name: AppLauncherUserListActionSheet
        tangon = argFoo;
        michal = tangon.onUserPress;
        var _closure2_slot0 = michal;
        golfie = tangon.onActionSheetDismiss;
        var _closure2_slot1 = golfie;
        zuuluu = tangon.channel;
        oscard = tangon.option;
        option = zuuluu.guild_id;
        yankee = zuuluu.id;
        tangon = _closure1_slot3;
        offset = tangon.useCallback;
        verify = new Array(1);
        verify[0] = golfie;
        zuuluu = function() {
            zuuluu = _closure1_slot1;
            michal = _closure1_slot2;
            entity = 4;
            michal = michal[entity];
            entity = undefined;
            tangon = zuuluu.bind(entity)(michal);
            zuuluu = tangon.hideActionSheet;
            michal = 'AppLauncherUserListActionSheet';
            michal = zuuluu.bind(tangon)(michal);
            michal = _closure2_slot1;
            michal = michal.bind(entity)();
            return entity;
        };
        offset = offset.bind(tangon)(zuuluu, verify);
        var _closure2_slot2 = offset;
        verify = tangon.useCallback;
        zuuluu = new Array(2);
        zuuluu[0] = offset;
        zuuluu[1] = michal;
        michal = function(argFoo) {
            entity = argFoo;
            entity = entity.user;
            tangon = _closure2_slot0;
            zuuluu = {};
            zuuluu['user'] = entity;
            entity = undefined;
            zuuluu = tangon.bind(entity)(zuuluu);
            michal = _closure2_slot2;
            michal = michal.bind(entity)();
            return entity;
        };
        verify = verify.bind(tangon)(michal, zuuluu);
        var _closure2_slot3 = verify;
        zuuluu = tangon.useCallback;
        michal = new Array(1);
        michal[0] = verify;
        entity = function(argFoo) {
            _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
                golfie = argFoo;
                var _closure3_slot0 = golfie;
                zuuluu = _closure1_slot0;
                tangon = _closure1_slot2;
                entity = 5;
                entity = tangon[entity];
                report = undefined;
                zuuluu = zuuluu.bind(report)(entity);
                entity = zuuluu.isSnowflake;
                entity = entity.bind(zuuluu)(golfie);
                tangon = _closure1_slot4;
                if(entity) { _fun00002_ip = 233; continue _fun00001 }
 55:
                verify = _closure1_slot1;
                romeon = _closure1_slot2;
                entity = 6;
                entity = romeon[entity];
                zuuluu = verify.bind(report)(entity);
                entity = {};
                option = {};
                offset = 80;
                option['paddingTop'] = offset;
                entity['style'] = option;
                option = 7;
                offset = romeon[option];
                offset = verify.bind(report)(offset);
                entity['lightSource'] = offset;
                option = romeon[option];
                option = verify.bind(report)(option);
                entity['darkSource'] = option;
                yankee = _closure1_slot0;
                option = 8;
                verify = romeon[option];
                verify = yankee.bind(report)(verify);
                foxtra = verify.intl;
                offset = foxtra.string;
                verify = romeon[option];
                verify = yankee.bind(report)(verify);
                verify = verify.t;
                verify = verify.vYocDw;
                verify = offset.bind(foxtra)(verify);
                entity['title'] = verify;
                verify = romeon[option];
                verify = yankee.bind(report)(verify);
                offset = verify.intl;
                verify = offset.string;
                option = romeon[option];
                option = yankee.bind(report)(option);
                option = option.t;
                option = option.V6nAfH;
                option = verify.bind(offset)(option);
                entity['body'] = option;
                entity = tangon.bind(report)(zuuluu, entity);
                _fun00002_ip = 261; continue _fun00001;
 233:
                zuuluu = _closure1_slot6;
                michal = {};
                michal['query'] = golfie;
                oscard = function() { // Original name: onPressRow
                    zuuluu = _closure2_slot3;
                    michal = {};
                    entity = _closure3_slot0;
                    michal['user'] = entity;
                    entity = undefined;
                    entity = zuuluu.bind(entity)(michal);
                    return entity;
                };
                michal['onPressRow'] = oscard;
                entity = tangon.bind(report)(zuuluu, michal);
 261:
                return entity;
            }
        };
        offset = zuuluu.bind(tangon)(entity, michal);
        tangon = _closure1_slot4;
        michal = _closure1_slot0;
        romeon = _closure1_slot2;
        entity = 9;
        entity = romeon[entity];
        zuuluu = undefined;
        entity = michal.bind(zuuluu)(entity);
        michal = entity.AppLauncherCommandOptionActionSheet;
        entity = {};
        entity['onDismiss'] = golfie;
        entity['option'] = oscard;
        oscard = {};
        golfie = 0;
        oscard['paddingHorizontal'] = golfie;
        entity['contentContainerStyles'] = oscard;
        golfie = _closure1_slot4;
        oscard = _closure1_slot1;
        report = 10;
        report = romeon[report];
        oscard = oscard.bind(zuuluu)(report);
        report = {'channelId': null, 'guildId': null, 'searchable': true, 'searchableEmptyState': null, 'headerShown': false, 'opensUserProfileOnUserPress': false};
        report['channelId'] = yankee;
        report['guildId'] = option;
        option = true;
        report['searchableEmptyState'] = offset;
        report['onUserPress'] = verify;
        report['inActionSheet'] = option;
        report['disableThemedGradient'] = option;
        report = golfie.bind(zuuluu)(oscard, report);
        entity['children'] = report;
        entity = tangon.bind(zuuluu)(michal, entity);
        return entity;
    };
    zuuluu['default'] = michal;
    michal = 'AppLauncherUserListActionSheet';
    zuuluu['APP_LAUNCHER_USER_LIST_ACTION_SHEET_KEY'] = michal;
    return entity;
})();