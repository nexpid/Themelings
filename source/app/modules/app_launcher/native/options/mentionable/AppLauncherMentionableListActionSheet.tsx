// app/modules/app_launcher/native/options/mentionable/AppLauncherMentionableListActionSheet.tsx
export default (function(argFoo, argBar, argBaz, argCorge, _, argFred, argPlugh) {
    oscar = argBar;
    report = argBaz;
    zulu = argFred;
    golf = argPlugh;
    var _closure1_slot0 = oscar;
    var _closure1_slot1 = report;
    var _closure1_slot2 = golf;
    entity = global;
    verify = entity.Object;
    options = verify.defineProperty;
    mike = {};
    entity = true;
    mike['value'] = entity;
    entity = '__esModule';
    entity = options.bind(verify)(zulu, entity, mike);
    entity = 0;
    mike = golf[entity];
    entity = undefined;
    mike = report.bind(entity)(mike);
    var _closure1_slot3 = mike;
    mike = 1;
    report = golf[mike];
    mike = argCorge;
    mike = mike.bind(entity)(report);
    var _closure1_slot4 = mike;
    mike = 2;
    mike = golf[mike];
    mike = oscar.bind(entity)(mike);
    mike = mike.RelationshipTypes;
    var _closure1_slot5 = mike;
    mike = 3;
    report = golf[mike];
    report = oscar.bind(entity)(report);
    report = report.jsx;
    var _closure1_slot6 = report;
    mike = golf[mike];
    mike = oscar.bind(entity)(mike);
    mike = mike.jsxs;
    var _closure1_slot7 = mike;
    mike = {};
    report = 'user';
    mike['USER'] = report;
    report = 'role';
    mike['ROLE'] = report;
    report = 'global';
    mike['GLOBAL'] = report;
    var _closure1_slot8 = mike;
    report = 17;
    report = golf[report];
    golf = oscar.bind(entity)(report);
    oscar = golf.fileFinishedImporting;
    report = 'modules/app_launcher/native/options/mentionable/AppLauncherMentionableListActionSheet.tsx';
    report = oscar.bind(golf)(report);
    tango = function(argFoo) { // Original name: AppLauncherMentionableListActionSheet
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            mike = argFoo;
            entity = mike.onMentionablePress;
            var _closure2_slot0 = entity;
            offset = mike.onActionSheetDismiss;
            var _closure2_slot1 = offset;
            entity = mike.channel;
            var _closure2_slot2 = entity;
            backup = mike.option;
            var _closure2_slot3 = backup;
            report = _closure1_slot4;
            zulu = report.useState;
            mike = '';
            mike = zulu.bind(report)(mike);
            romeo = _closure1_slot3;
            tango = undefined;
            oscar = 2;
            mike = romeo.bind(tango)(mike, oscar);
            options = 0;
            verify = mike[options];
            var _closure2_slot4 = verify;
            zulu = 1;
            mike = mike[zulu];
            var _closure2_slot5 = mike;
            foxtrot = report.useRef;
            mike = null;
            foxtrot = foxtrot.bind(report)(mike);
            var _closure2_slot6 = foxtrot;
            kilo = report.useState;
            mike = new Array(0);
            mike = kilo.bind(report)(mike);
            mike = romeo.bind(tango)(mike, oscar);
            romeo = mike[options];
            var _closure2_slot7 = romeo;
            mike = mike[zulu];
            var _closure2_slot8 = mike;
            mike = entity.guild_id;
            var _closure2_slot9 = mike;
            oscar = romeo.length;
            zulu = report.useEffect;
            mike = new Array(3);
            mike[0] = verify;
            mike[1] = backup;
            mike[2] = entity;
            entity = function() {
                report = _closure1_slot0;
                oscar = _closure1_slot2;
                entity = 4;
                mike = oscar[entity];
                entity = undefined;
                options = report.bind(entity)(mike);
                golf = options.getApplicationCommandOptionQueryOptions;
                report = _closure2_slot3;
                golf = golf.bind(options)(report);
                report = _closure1_slot1;
                zulu = 5;
                zulu = oscar[zulu];
                oscar = report.bind(entity)(zulu);
                report = oscar.queryMentionResults;
                zulu = {};
                options = _closure2_slot4;
                zulu['query'] = options;
                options = _closure2_slot2;
                zulu['channel'] = options;
                options = golf.canMentionEveryone;
                zulu['canMentionEveryone'] = options;
                options = golf.canMentionHere;
                zulu['canMentionHere'] = options;
                options = golf.canMentionUsers;
                zulu['canMentionUsers'] = options;
                options = golf.canMentionRoles;
                zulu['canMentionRoles'] = options;
                options = golf.canMentionAnyGuildUser;
                zulu['includeAllGuildUsers'] = options;
                golf = golf.canMentionNonMentionableRoles;
                zulu['includeNonMentionableRoles'] = golf;
                golf = true;
                zulu['request'] = golf;
                options = 10;
                zulu['limit'] = options;
                zulu['allowSnowflake'] = golf;
                oscar = report.bind(oscar)(zulu);
                zulu = _closure2_slot8;
                golf = oscar.users;
                report = golf.map;
                mike = function(argFoo) {
                    entity = {};
                    mike = _closure1_slot8;
                    mike = mike.USER;
                    entity['type'] = mike;
                    mike = argFoo;
                    entity['result'] = mike;
                    return entity;
                };
                yankee = report.bind(golf)(mike);
                mike = new Array(0);
                offset = 0;
                romeo = mike;
                offset = arraySpread(romeo, yankee, offset);
                verify = oscar.roles;
                options = verify.map;
                report = function(argFoo) {
                    entity = {};
                    mike = _closure1_slot8;
                    mike = mike.ROLE;
                    entity['type'] = mike;
                    mike = argFoo;
                    entity['result'] = mike;
                    return entity;
                };
                yankee = options.bind(verify)(report);
                romeo = mike;
                offset = arraySpread(romeo, yankee, offset);
                golf = oscar.globals;
                oscar = golf.map;
                tango = function(argFoo) {
                    entity = {};
                    mike = _closure1_slot8;
                    mike = mike.GLOBAL;
                    entity['type'] = mike;
                    mike = argFoo;
                    entity['result'] = mike;
                    return entity;
                };
                yankee = oscar.bind(golf)(tango);
                romeo = mike;
                tango = arraySpread(romeo, yankee, offset);
                mike = zulu.bind(entity)(mike);
                return entity;
            };
            entity = zulu.bind(report)(entity, mike);
            zulu = _closure1_slot7;
            verify = _closure1_slot0;
            report = _closure1_slot2;
            entity = 7;
            entity = report[entity];
            entity = verify.bind(tango)(entity);
            mike = entity.AppLauncherCommandOptionActionSheet;
            entity = {};
            entity['option'] = backup;
            entity['onDismiss'] = offset;
            backup = _closure1_slot6;
            offset = 8;
            report = report[offset];
            report = verify.bind(tango)(report);
            verify = report.AppLauncherListSearchBar;
            report = {};
            kilo = function(argFoo) { // Original name: onChange
                _fun00003: for(var _fun00004_ip = 0; ; ) switch(_fun00004_ip) {
 0:
                    zulu = argFoo;
                    tango = _closure2_slot5;
                    entity = zulu.toLowerCase;
                    zulu = entity.bind(zulu)();
                    entity = undefined;
                    zulu = tango.bind(entity)(zulu);
                    mike = _closure2_slot6;
                    tango = mike.current;
                    mike = null;
                    if(!(mike != tango)) { _fun00004_ip = 63; continue _fun00003 }
 42:
                    zulu = tango.scrollToOffset;
                    mike = {'offset': 0, 'animated': false};
                    mike = zulu.bind(tango)(mike);
 63:
                    return entity;
                }
            };
            report['onChange'] = kilo;
            verify = backup.bind(tango)(verify, report);
            report = new Array(2);
            report[0] = verify;
            if(!(options !== oscar)) { _fun00002_ip = 354; continue _fun00001 }
 297:
            verify = _closure1_slot6;
            options = _closure1_slot0;
            oscar = _closure1_slot2;
            oscar = oscar[offset];
            oscar = options.bind(tango)(oscar);
            options = oscar.AppLauncherList;
            oscar = {};
            oscar['ref'] = foxtrot;
            oscar['data'] = romeo;
            yankee = function(argFoo) { // Original name: renderItem
                _fun00005: for(var _fun00006_ip = 0; ; ) switch(_fun00006_ip) {
 0:
                    zulu = argFoo;
                    entity = zulu.item;
                    var _closure3_slot0 = entity;
                    zulu = zulu.index;
                    oscar = {};
                    mike = function() { // Original name: onPress
                        tango = _closure2_slot0;
                        zulu = {};
                        entity = _closure3_slot0;
                        zulu['mentionable'] = entity;
                        entity = undefined;
                        zulu = tango.bind(entity)(zulu);
                        tango = _closure1_slot1;
                        report = _closure1_slot2;
                        zulu = 6;
                        zulu = report[zulu];
                        report = tango.bind(entity)(zulu);
                        tango = report.hideActionSheet;
                        zulu = 'AppLauncherMentionableListActionSheet';
                        zulu = tango.bind(report)(zulu);
                        mike = _closure2_slot1;
                        mike = mike.bind(entity)();
                        return entity;
                    };
                    oscar['onPress'] = mike;
                    mike = 0;
                    mike = mike === zulu;
                    oscar['start'] = mike;
                    mike = _closure2_slot7;
                    tango = mike.length;
                    mike = 1;
                    mike = tango - mike;
                    mike = zulu === mike;
                    oscar['end'] = mike;
                    zulu = entity.type;
                    mike = _closure1_slot8;
                    mike = mike.USER;
                    if(!(mike !== zulu)) { _fun00006_ip = 486; continue _fun00005 }
 94:
                    mike = _closure1_slot8;
                    mike = mike.ROLE;
                    if(!(mike !== zulu)) { _fun00006_ip = 409; continue _fun00005 }
 111:
                    mike = _closure1_slot8;
                    mike = mike.GLOBAL;
                    if(!(mike !== zulu)) { _fun00006_ip = 129; continue _fun00005 }
 125:
                    mike = undefined;
                    return mike;
 129:
                    mike = entity.result;
                    tango = mike.text;
                    report = _closure1_slot1;
                    verify = _closure1_slot2;
                    zulu = 13;
                    zulu = verify[zulu];
                    verify = undefined;
                    report = report.bind(verify)(zulu);
                    zulu = report.MENTION_EVERYONE;
                    zulu = zulu.bind(report)();
                    zulu = zulu.text;
                    if(!(tango !== zulu)) { _fun00006_ip = 261; continue _fun00005 }
 181:
                    report = _closure1_slot6;
                    tango = _closure1_slot1;
                    romeo = _closure1_slot2;
                    zulu = 14;
                    zulu = romeo[zulu];
                    tango = tango.bind(verify)(zulu);
                    zulu = {};
                    yankee = _closure1_slot0;
                    offset = 15;
                    offset = romeo[offset];
                    offset = yankee.bind(verify)(offset);
                    yankee = offset.UserCircleIcon;
                    offset = {'size': 'sm', 'color': 'interactive-normal'};
                    offset = report.bind(verify)(yankee, offset);
                    zulu['icon'] = offset;
                    offset = report.bind(verify)(tango, zulu);
                    _fun00006_ip = 299; continue _fun00005;
 261:
                    report = _closure1_slot6;
                    tango = _closure1_slot0;
                    yankee = _closure1_slot2;
                    zulu = 12;
                    zulu = yankee[zulu];
                    zulu = tango.bind(verify)(zulu);
                    tango = zulu.RoleIcon;
                    zulu = {};
                    offset = report.bind(verify)(tango, zulu);
 299:
                    report = _closure1_slot6;
                    romeo = _closure1_slot0;
                    foxtrot = _closure1_slot2;
                    zulu = 16;
                    zulu = foxtrot[zulu];
                    zulu = romeo.bind(verify)(zulu);
                    tango = zulu.TableRow;
                    zulu = {};
                    yankee = 10;
                    yankee = foxtrot[yankee];
                    yankee = romeo.bind(verify)(yankee);
                    romeo = yankee.Text;
                    yankee = {'lineClamp': 1, 'variant': 'text-md/semibold', 'color': 'header-primary'};
                    foxtrot = mike.text;
                    yankee['children'] = foxtrot;
                    yankee = report.bind(verify)(romeo, yankee);
                    zulu['label'] = yankee;
                    zulu['icon'] = offset;
                    sizing = zulu;
                    kilo = oscar;
                    offset = copyDataProperties(sizing, kilo);
                    mike = mike.text;
                    mike = report.bind(verify)(tango, zulu, mike);
                    return mike;
 409:
                    mike = entity.result;
                    verify = _closure1_slot6;
                    tango = _closure1_slot0;
                    report = _closure1_slot2;
                    zulu = 12;
                    zulu = report[zulu];
                    report = undefined;
                    zulu = tango.bind(report)(zulu);
                    tango = zulu.RoleRow;
                    zulu = {};
                    zulu['guildRole'] = mike;
                    offset = _closure2_slot9;
                    zulu['guildId'] = offset;
                    sizing = zulu;
                    kilo = oscar;
                    offset = copyDataProperties(sizing, kilo);
                    mike = mike.id;
                    mike = verify.bind(report)(tango, zulu, mike);
                    return mike;
 486:
                    mike = entity.result;
                    entity = mike.user;
                    verify = mike.nick;
                    report = _closure1_slot6;
                    zulu = _closure1_slot1;
                    yankee = _closure1_slot2;
                    mike = 9;
                    mike = yankee[mike];
                    tango = undefined;
                    zulu = zulu.bind(tango)(mike);
                    mike = {};
                    offset = _closure1_slot5;
                    offset = offset.NONE;
                    mike['type'] = offset;
                    mike['user'] = entity;
                    mike['nickname'] = verify;
                    options = _closure2_slot9;
                    mike['guildId'] = options;
                    offset = _closure1_slot0;
                    golf = 10;
                    golf = yankee[golf];
                    golf = offset.bind(tango)(golf);
                    options = golf.Text;
                    golf = {'color': 'text-secondary', 'variant': 'text-xs/normal'};
                    verify = 11;
                    verify = yankee[verify];
                    offset = offset.bind(tango)(verify);
                    verify = offset.getUserTag;
                    verify = verify.bind(offset)(entity);
                    golf['children'] = verify;
                    golf = report.bind(tango)(options, golf);
                    mike['subLabel'] = golf;
                    sizing = mike;
                    kilo = oscar;
                    oscar = copyDataProperties(sizing, kilo);
                    entity = entity.id;
                    entity = report.bind(tango)(zulu, mike, entity);
                    return entity;
                }
            };
            oscar['renderItem'] = yankee;
            oscar = verify.bind(tango)(options, oscar);
            _fun00002_ip = 389; continue _fun00001;
 354:
            verify = _closure1_slot6;
            options = _closure1_slot0;
            golf = _closure1_slot2;
            golf = golf[offset];
            golf = options.bind(tango)(golf);
            options = golf.AppLauncherListEmptyState;
            golf = {};
            oscar = verify.bind(tango)(options, golf);
 389:
            report[1] = oscar;
            entity['children'] = report;
            entity = zulu.bind(tango)(mike, entity);
            return entity;
        }
    };
    zulu['default'] = tango;
    tango = 'AppLauncherMentionableListActionSheet';
    zulu['APP_LAUNCHER_MENTIONABLE_LIST_ACTION_SHEET_KEY'] = tango;
    zulu['MentionableItemTypes'] = mike;
    return entity;
})();