// app/modules/app_launcher/native/options/mentionable/AppLauncherMentionableListActionSheet.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    oscard = argBar;
    report = argBaz;
    zuuluu = argFre;
    golfie = argPlu;
    var _closure1_slot0 = oscard;
    var _closure1_slot1 = report;
    var _closure1_slot2 = golfie;
    entity = global;
    verify = entity.Object;
    option = verify.defineProperty;
    michal = {};
    entity = true;
    michal['value'] = entity;
    entity = '__esModule';
    entity = option.bind(verify)(zuuluu, entity, michal);
    entity = 0;
    michal = golfie[entity];
    entity = undefined;
    michal = report.bind(entity)(michal);
    var _closure1_slot3 = michal;
    michal = 1;
    report = golfie[michal];
    michal = argCor;
    michal = michal.bind(entity)(report);
    var _closure1_slot4 = michal;
    michal = 2;
    michal = golfie[michal];
    michal = oscard.bind(entity)(michal);
    michal = michal.RelationshipTypes;
    var _closure1_slot5 = michal;
    michal = 3;
    report = golfie[michal];
    report = oscard.bind(entity)(report);
    report = report.jsx;
    var _closure1_slot6 = report;
    michal = golfie[michal];
    michal = oscard.bind(entity)(michal);
    michal = michal.jsxs;
    var _closure1_slot7 = michal;
    michal = {};
    report = 'user';
    michal['USER'] = report;
    report = 'role';
    michal['ROLE'] = report;
    report = 'global';
    michal['GLOBAL'] = report;
    var _closure1_slot8 = michal;
    report = 17;
    report = golfie[report];
    golfie = oscard.bind(entity)(report);
    oscard = golfie.fileFinishedImporting;
    report = 'modules/app_launcher/native/options/mentionable/AppLauncherMentionableListActionSheet.tsx';
    report = oscard.bind(golfie)(report);
    tangon = function(argFoo) { // Original name: AppLauncherMentionableListActionSheet
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            michal = argFoo;
            entity = michal.onMentionablePress;
            var _closure2_slot0 = entity;
            offset = michal.onActionSheetDismiss;
            var _closure2_slot1 = offset;
            entity = michal.channel;
            var _closure2_slot2 = entity;
            backup = michal.option;
            var _closure2_slot3 = backup;
            report = _closure1_slot4;
            zuuluu = report.useState;
            michal = '';
            michal = zuuluu.bind(report)(michal);
            romeon = _closure1_slot3;
            tangon = undefined;
            oscard = 2;
            michal = romeon.bind(tangon)(michal, oscard);
            option = 0;
            verify = michal[option];
            var _closure2_slot4 = verify;
            zuuluu = 1;
            michal = michal[zuuluu];
            var _closure2_slot5 = michal;
            foxtra = report.useRef;
            michal = null;
            foxtra = foxtra.bind(report)(michal);
            var _closure2_slot6 = foxtra;
            kiloes = report.useState;
            michal = new Array(0);
            michal = kiloes.bind(report)(michal);
            michal = romeon.bind(tangon)(michal, oscard);
            romeon = michal[option];
            var _closure2_slot7 = romeon;
            michal = michal[zuuluu];
            var _closure2_slot8 = michal;
            michal = entity.guild_id;
            var _closure2_slot9 = michal;
            oscard = romeon.length;
            zuuluu = report.useEffect;
            michal = new Array(3);
            michal[0] = verify;
            michal[1] = backup;
            michal[2] = entity;
            entity = function() {
                report = _closure1_slot0;
                oscard = _closure1_slot2;
                entity = 4;
                michal = oscard[entity];
                entity = undefined;
                option = report.bind(entity)(michal);
                golfie = option.getApplicationCommandOptionQueryOptions;
                report = _closure2_slot3;
                golfie = golfie.bind(option)(report);
                report = _closure1_slot1;
                zuuluu = 5;
                zuuluu = oscard[zuuluu];
                oscard = report.bind(entity)(zuuluu);
                report = oscard.queryMentionResults;
                zuuluu = {};
                option = _closure2_slot4;
                zuuluu['query'] = option;
                option = _closure2_slot2;
                zuuluu['channel'] = option;
                option = golfie.canMentionEveryone;
                zuuluu['canMentionEveryone'] = option;
                option = golfie.canMentionHere;
                zuuluu['canMentionHere'] = option;
                option = golfie.canMentionUsers;
                zuuluu['canMentionUsers'] = option;
                option = golfie.canMentionRoles;
                zuuluu['canMentionRoles'] = option;
                option = golfie.canMentionAnyGuildUser;
                zuuluu['includeAllGuildUsers'] = option;
                golfie = golfie.canMentionNonMentionableRoles;
                zuuluu['includeNonMentionableRoles'] = golfie;
                golfie = true;
                zuuluu['request'] = golfie;
                option = 10;
                zuuluu['limit'] = option;
                zuuluu['allowSnowflake'] = golfie;
                oscard = report.bind(oscard)(zuuluu);
                zuuluu = _closure2_slot8;
                golfie = oscard.users;
                report = golfie.map;
                michal = function(argFoo) {
                    entity = {};
                    michal = _closure1_slot8;
                    michal = michal.USER;
                    entity['type'] = michal;
                    michal = argFoo;
                    entity['result'] = michal;
                    return entity;
                };
                yankee = report.bind(golfie)(michal);
                michal = new Array(0);
                offset = 0;
                romeon = michal;
                offset = arraySpread(romeon, yankee, offset);
                verify = oscard.roles;
                option = verify.map;
                report = function(argFoo) {
                    entity = {};
                    michal = _closure1_slot8;
                    michal = michal.ROLE;
                    entity['type'] = michal;
                    michal = argFoo;
                    entity['result'] = michal;
                    return entity;
                };
                yankee = option.bind(verify)(report);
                romeon = michal;
                offset = arraySpread(romeon, yankee, offset);
                golfie = oscard.globals;
                oscard = golfie.map;
                tangon = function(argFoo) {
                    entity = {};
                    michal = _closure1_slot8;
                    michal = michal.GLOBAL;
                    entity['type'] = michal;
                    michal = argFoo;
                    entity['result'] = michal;
                    return entity;
                };
                yankee = oscard.bind(golfie)(tangon);
                romeon = michal;
                tangon = arraySpread(romeon, yankee, offset);
                michal = zuuluu.bind(entity)(michal);
                return entity;
            };
            entity = zuuluu.bind(report)(entity, michal);
            zuuluu = _closure1_slot7;
            verify = _closure1_slot0;
            report = _closure1_slot2;
            entity = 7;
            entity = report[entity];
            entity = verify.bind(tangon)(entity);
            michal = entity.AppLauncherCommandOptionActionSheet;
            entity = {};
            entity['option'] = backup;
            entity['onDismiss'] = offset;
            backup = _closure1_slot6;
            offset = 8;
            report = report[offset];
            report = verify.bind(tangon)(report);
            verify = report.AppLauncherListSearchBar;
            report = {};
            kiloes = function(argFoo) { // Original name: onChange
                _fun00003: for(var _fun00004_ip = 0; ; ) switch(_fun00004_ip) {
 0:
                    zuuluu = argFoo;
                    tangon = _closure2_slot5;
                    entity = zuuluu.toLowerCase;
                    zuuluu = entity.bind(zuuluu)();
                    entity = undefined;
                    zuuluu = tangon.bind(entity)(zuuluu);
                    michal = _closure2_slot6;
                    tangon = michal.current;
                    michal = null;
                    if(!(michal != tangon)) { _fun00004_ip = 67; continue _fun00003 }
 42:
                    zuuluu = tangon.scrollToOffset;
                    michal = {'offset': 0, 'animated': false};
                    michal = zuuluu.bind(tangon)(michal);
 67:
                    return entity;
                }
            };
            report['onChange'] = kiloes;
            verify = backup.bind(tangon)(verify, report);
            report = new Array(2);
            report[0] = verify;
            if(!(option !== oscard)) { _fun00002_ip = 354; continue _fun00001 }
 297:
            verify = _closure1_slot6;
            option = _closure1_slot0;
            oscard = _closure1_slot2;
            oscard = oscard[offset];
            oscard = option.bind(tangon)(oscard);
            option = oscard.AppLauncherList;
            oscard = {};
            oscard['ref'] = foxtra;
            oscard['data'] = romeon;
            yankee = function(argFoo) { // Original name: renderItem
                _fun00005: for(var _fun00006_ip = 0; ; ) switch(_fun00006_ip) {
 0:
                    zuuluu = argFoo;
                    entity = zuuluu.item;
                    var _closure3_slot0 = entity;
                    zuuluu = zuuluu.index;
                    oscard = {};
                    michal = function() { // Original name: onPress
                        tangon = _closure2_slot0;
                        zuuluu = {};
                        entity = _closure3_slot0;
                        zuuluu['mentionable'] = entity;
                        entity = undefined;
                        zuuluu = tangon.bind(entity)(zuuluu);
                        tangon = _closure1_slot1;
                        report = _closure1_slot2;
                        zuuluu = 6;
                        zuuluu = report[zuuluu];
                        report = tangon.bind(entity)(zuuluu);
                        tangon = report.hideActionSheet;
                        zuuluu = 'AppLauncherMentionableListActionSheet';
                        zuuluu = tangon.bind(report)(zuuluu);
                        michal = _closure2_slot1;
                        michal = michal.bind(entity)();
                        return entity;
                    };
                    oscard['onPress'] = michal;
                    michal = 0;
                    michal = michal === zuuluu;
                    oscard['start'] = michal;
                    michal = _closure2_slot7;
                    tangon = michal.length;
                    michal = 1;
                    michal = tangon - michal;
                    michal = zuuluu === michal;
                    oscard['end'] = michal;
                    zuuluu = entity.type;
                    michal = _closure1_slot8;
                    michal = michal.USER;
                    if(!(michal !== zuuluu)) { _fun00006_ip = 486; continue _fun00005 }
 94:
                    michal = _closure1_slot8;
                    michal = michal.ROLE;
                    if(!(michal !== zuuluu)) { _fun00006_ip = 409; continue _fun00005 }
 111:
                    michal = _closure1_slot8;
                    michal = michal.GLOBAL;
                    if(!(michal !== zuuluu)) { _fun00006_ip = 129; continue _fun00005 }
 125:
                    michal = undefined;
                    return michal;
 129:
                    michal = entity.result;
                    tangon = michal.text;
                    report = _closure1_slot1;
                    verify = _closure1_slot2;
                    zuuluu = 13;
                    zuuluu = verify[zuuluu];
                    verify = undefined;
                    report = report.bind(verify)(zuuluu);
                    zuuluu = report.MENTION_EVERYONE;
                    zuuluu = zuuluu.bind(report)();
                    zuuluu = zuuluu.text;
                    if(!(tangon !== zuuluu)) { _fun00006_ip = 261; continue _fun00005 }
 181:
                    report = _closure1_slot6;
                    tangon = _closure1_slot1;
                    romeon = _closure1_slot2;
                    zuuluu = 14;
                    zuuluu = romeon[zuuluu];
                    tangon = tangon.bind(verify)(zuuluu);
                    zuuluu = {};
                    yankee = _closure1_slot0;
                    offset = 15;
                    offset = romeon[offset];
                    offset = yankee.bind(verify)(offset);
                    yankee = offset.UserCircleIcon;
                    offset = {'size': 'sm', 'color': 'interactive-normal'};
                    offset = report.bind(verify)(yankee, offset);
                    zuuluu['icon'] = offset;
                    offset = report.bind(verify)(tangon, zuuluu);
                    _fun00006_ip = 299; continue _fun00005;
 261:
                    report = _closure1_slot6;
                    tangon = _closure1_slot0;
                    yankee = _closure1_slot2;
                    zuuluu = 12;
                    zuuluu = yankee[zuuluu];
                    zuuluu = tangon.bind(verify)(zuuluu);
                    tangon = zuuluu.RoleIcon;
                    zuuluu = {};
                    offset = report.bind(verify)(tangon, zuuluu);
 299:
                    report = _closure1_slot6;
                    romeon = _closure1_slot0;
                    foxtra = _closure1_slot2;
                    zuuluu = 16;
                    zuuluu = foxtra[zuuluu];
                    zuuluu = romeon.bind(verify)(zuuluu);
                    tangon = zuuluu.TableRow;
                    zuuluu = {};
                    yankee = 10;
                    yankee = foxtra[yankee];
                    yankee = romeon.bind(verify)(yankee);
                    romeon = yankee.Text;
                    yankee = {'lineClamp': 1, 'variant': 'text-md/semibold', 'color': 'header-primary'};
                    foxtra = michal.text;
                    yankee['children'] = foxtra;
                    yankee = report.bind(verify)(romeon, yankee);
                    zuuluu['label'] = yankee;
                    zuuluu['icon'] = offset;
                    sizing = zuuluu;
                    kiloes = oscard;
                    offset = copyDataProperties(sizing, kiloes);
                    michal = michal.text;
                    michal = report.bind(verify)(tangon, zuuluu, michal);
                    return michal;
 409:
                    michal = entity.result;
                    verify = _closure1_slot6;
                    tangon = _closure1_slot0;
                    report = _closure1_slot2;
                    zuuluu = 12;
                    zuuluu = report[zuuluu];
                    report = undefined;
                    zuuluu = tangon.bind(report)(zuuluu);
                    tangon = zuuluu.RoleRow;
                    zuuluu = {};
                    zuuluu['guildRole'] = michal;
                    offset = _closure2_slot9;
                    zuuluu['guildId'] = offset;
                    sizing = zuuluu;
                    kiloes = oscard;
                    offset = copyDataProperties(sizing, kiloes);
                    michal = michal.id;
                    michal = verify.bind(report)(tangon, zuuluu, michal);
                    return michal;
 486:
                    michal = entity.result;
                    entity = michal.user;
                    verify = michal.nick;
                    report = _closure1_slot6;
                    zuuluu = _closure1_slot1;
                    yankee = _closure1_slot2;
                    michal = 9;
                    michal = yankee[michal];
                    tangon = undefined;
                    zuuluu = zuuluu.bind(tangon)(michal);
                    michal = {};
                    offset = _closure1_slot5;
                    offset = offset.NONE;
                    michal['type'] = offset;
                    michal['user'] = entity;
                    michal['nickname'] = verify;
                    option = _closure2_slot9;
                    michal['guildId'] = option;
                    offset = _closure1_slot0;
                    golfie = 10;
                    golfie = yankee[golfie];
                    golfie = offset.bind(tangon)(golfie);
                    option = golfie.Text;
                    golfie = {'color': 'text-secondary', 'variant': 'text-xs/normal'};
                    verify = 11;
                    verify = yankee[verify];
                    offset = offset.bind(tangon)(verify);
                    verify = offset.getUserTag;
                    verify = verify.bind(offset)(entity);
                    golfie['children'] = verify;
                    golfie = report.bind(tangon)(option, golfie);
                    michal['subLabel'] = golfie;
                    sizing = michal;
                    kiloes = oscard;
                    oscard = copyDataProperties(sizing, kiloes);
                    entity = entity.id;
                    entity = report.bind(tangon)(zuuluu, michal, entity);
                    return entity;
                }
            };
            oscard['renderItem'] = yankee;
            oscard = verify.bind(tangon)(option, oscard);
            _fun00002_ip = 389; continue _fun00001;
 354:
            verify = _closure1_slot6;
            option = _closure1_slot0;
            golfie = _closure1_slot2;
            golfie = golfie[offset];
            golfie = option.bind(tangon)(golfie);
            option = golfie.AppLauncherListEmptyState;
            golfie = {};
            oscard = verify.bind(tangon)(option, golfie);
 389:
            report[1] = oscard;
            entity['children'] = report;
            entity = zuuluu.bind(tangon)(michal, entity);
            return entity;
        }
    };
    zuuluu['default'] = tangon;
    tangon = 'AppLauncherMentionableListActionSheet';
    zuuluu['APP_LAUNCHER_MENTIONABLE_LIST_ACTION_SHEET_KEY'] = tangon;
    zuuluu['MentionableItemTypes'] = michal;
    return entity;
})();