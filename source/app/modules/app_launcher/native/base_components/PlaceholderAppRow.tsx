// app/modules/app_launcher/native/base_components/PlaceholderAppRow.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    report = argBar;
    romeon = argBaz;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    var _closure1_slot1 = oscard;
    entity = global;
    option = entity.Object;
    golfie = option.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(option)(zuuluu, entity, tangon);
    entity = 0;
    golfie = oscard[entity];
    tangon = argCor;
    entity = undefined;
    tangon = tangon.bind(entity)(golfie);
    tangon = 1;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.View;
    var _closure1_slot2 = tangon;
    tangon = 2;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.jsx;
    var _closure1_slot3 = tangon;
    tangon = 3;
    tangon = oscard[tangon];
    option = report.bind(entity)(tangon);
    golfie = option.createStyles;
    tangon = {};
    verify = {'width': 32, 'height': 32};
    yankee = 4;
    offset = oscard[yankee];
    offset = romeon.bind(entity)(offset);
    offset = offset.radii;
    offset = offset.sm;
    verify['borderRadius'] = offset;
    offset = oscard[yankee];
    offset = romeon.bind(entity)(offset);
    offset = offset.colors;
    offset = offset.BG_MOD_SUBTLE;
    verify['backgroundColor'] = offset;
    tangon['loadingAppIcon'] = verify;
    verify = {'backgroundColor': null, 'height': 16, 'marginBottom': 4, 'borderRadius': null, 'alignSelf': 'flex-start'};
    offset = oscard[yankee];
    offset = romeon.bind(entity)(offset);
    offset = offset.colors;
    offset = offset.BG_MOD_SUBTLE;
    verify['backgroundColor'] = offset;
    foxtra = 16;
    offset = oscard[yankee];
    offset = romeon.bind(entity)(offset);
    offset = offset.radii;
    offset = offset.lg;
    verify['borderRadius'] = offset;
    offset = 'flex-start';
    tangon['loadingTextPlaceholder'] = verify;
    verify = {};
    backup = oscard[yankee];
    backup = romeon.bind(entity)(backup);
    backup = backup.colors;
    backup = backup.BG_MOD_SUBTLE;
    verify['backgroundColor'] = backup;
    verify['height'] = foxtra;
    yankee = oscard[yankee];
    yankee = romeon.bind(entity)(yankee);
    yankee = yankee.radii;
    yankee = yankee.lg;
    verify['borderRadius'] = yankee;
    verify['alignSelf'] = offset;
    tangon['loadingTextPlaceholderSmall'] = verify;
    tangon = golfie.bind(option)(tangon);
    var _closure1_slot4 = tangon;
    tangon = 7;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/app_launcher/native/base_components/PlaceholderAppRow.tsx';
    tangon = report.bind(oscard)(tangon);
    michal = function(argFoo) { // Original name: PlaceholderAppRow
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            entity = argFoo;
            oscard = entity.isFirstRow;
            tangon = undefined;
            if(!(oscard === tangon)) { _fun00002_ip = 17; continue _fun00001 }
 15:
            oscard = false;
 17:
            report = entity.isLastRow;
            if(!(report === tangon)) { _fun00002_ip = 29; continue _fun00001 }
 27:
            report = false;
 29:
            entity = _closure1_slot4;
            verify = entity.bind(tangon)();
            michal = _closure1_slot0;
            option = _closure1_slot1;
            entity = 5;
            zuuluu = option[entity];
            romeon = michal.bind(tangon)(zuuluu);
            yankee = romeon.usePlaceholderWidth;
            offset = 10;
            zuuluu = 50;
            output = yankee.bind(romeon)(offset, zuuluu);
            entity = option[entity];
            yankee = michal.bind(tangon)(entity);
            offset = yankee.usePlaceholderWidth;
            zuuluu = 30;
            entity = 90;
            backup = offset.bind(yankee)(zuuluu, entity);
            zuuluu = _closure1_slot3;
            entity = 6;
            entity = option[entity];
            entity = michal.bind(tangon)(entity);
            michal = entity.TableRow;
            entity = {};
            option = _closure1_slot2;
            golfie = {};
            offset = verify.loadingAppIcon;
            golfie['style'] = offset;
            golfie = zuuluu.bind(tangon)(option, golfie);
            entity['icon'] = golfie;
            golfie = {};
            yankee = verify.loadingTextPlaceholder;
            offset = new Array(2);
            offset[0] = yankee;
            kiloes = {};
            yankee = global;
            romeon = yankee.HermesInternal;
            sizing = romeon.concat;
            foxtra = '';
            romeon = '%';
            sizing = sizing.bind(foxtra)(output, romeon);
            kiloes['width'] = sizing;
            offset[1] = kiloes;
            golfie['style'] = offset;
            golfie = zuuluu.bind(tangon)(option, golfie);
            entity['label'] = golfie;
            golfie = {};
            offset = verify.loadingTextPlaceholderSmall;
            verify = new Array(2);
            verify[0] = offset;
            offset = {};
            yankee = yankee.HermesInternal;
            yankee = yankee.concat;
            yankee = yankee.bind(foxtra)(backup, romeon);
            offset['width'] = yankee;
            verify[1] = offset;
            golfie['style'] = verify;
            golfie = zuuluu.bind(tangon)(option, golfie);
            entity['subLabel'] = golfie;
            golfie = 1;
            entity['subLabelLineClamp'] = golfie;
            entity['start'] = oscard;
            entity['end'] = report;
            report = function() { // Original name: onPress
                entity = undefined;
                return entity;
            };
            entity['onPress'] = report;
            entity = zuuluu.bind(tangon)(michal, entity);
            return entity;
        }
    };
    zuuluu['default'] = michal;
    return entity;
})();