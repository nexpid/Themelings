// app/modules/app_launcher/native/base_components/PlaceholderAppRow.tsx
export default (function(argFoo, argBar, argBaz, argCorge, _, argFred, argPlugh) {
    report = argBar;
    romeo = argBaz;
    zulu = argFred;
    oscar = argPlugh;
    var _closure1_slot0 = report;
    var _closure1_slot1 = oscar;
    entity = global;
    options = entity.Object;
    golf = options.defineProperty;
    tango = {};
    entity = true;
    tango['value'] = entity;
    entity = '__esModule';
    entity = golf.bind(options)(zulu, entity, tango);
    entity = 0;
    golf = oscar[entity];
    tango = argCorge;
    entity = undefined;
    tango = tango.bind(entity)(golf);
    tango = 1;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.View;
    var _closure1_slot2 = tango;
    tango = 2;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.jsx;
    var _closure1_slot3 = tango;
    tango = 3;
    tango = oscar[tango];
    options = report.bind(entity)(tango);
    golf = options.createStyles;
    tango = {};
    verify = {'width': 32, 'height': 32};
    yankee = 4;
    offset = oscar[yankee];
    offset = romeo.bind(entity)(offset);
    offset = offset.radii;
    offset = offset.sm;
    verify['borderRadius'] = offset;
    offset = oscar[yankee];
    offset = romeo.bind(entity)(offset);
    offset = offset.colors;
    offset = offset.BG_MOD_SUBTLE;
    verify['backgroundColor'] = offset;
    tango['loadingAppIcon'] = verify;
    verify = {'backgroundColor': null, 'height': 16, 'marginBottom': 4, 'borderRadius': null, 'alignSelf': 'flex-start'};
    offset = oscar[yankee];
    offset = romeo.bind(entity)(offset);
    offset = offset.colors;
    offset = offset.BG_MOD_SUBTLE;
    verify['backgroundColor'] = offset;
    foxtrot = 16;
    offset = oscar[yankee];
    offset = romeo.bind(entity)(offset);
    offset = offset.radii;
    offset = offset.lg;
    verify['borderRadius'] = offset;
    offset = 'flex-start';
    tango['loadingTextPlaceholder'] = verify;
    verify = {};
    backup = oscar[yankee];
    backup = romeo.bind(entity)(backup);
    backup = backup.colors;
    backup = backup.BG_MOD_SUBTLE;
    verify['backgroundColor'] = backup;
    verify['height'] = foxtrot;
    yankee = oscar[yankee];
    yankee = romeo.bind(entity)(yankee);
    yankee = yankee.radii;
    yankee = yankee.lg;
    verify['borderRadius'] = yankee;
    verify['alignSelf'] = offset;
    tango['loadingTextPlaceholderSmall'] = verify;
    tango = golf.bind(options)(tango);
    var _closure1_slot4 = tango;
    tango = 7;
    tango = oscar[tango];
    oscar = report.bind(entity)(tango);
    report = oscar.fileFinishedImporting;
    tango = 'modules/app_launcher/native/base_components/PlaceholderAppRow.tsx';
    tango = report.bind(oscar)(tango);
    mike = function(argFoo) { // Original name: PlaceholderAppRow
        _fun118768: for(var _fun118768_ip = 0; ; ) switch(_fun118768_ip) {
 0:
            entity = argFoo;
            oscar = entity.isFirstRow;
            tango = undefined;
            if(!(oscar === tango)) { _fun118768_ip = 17; continue _fun118768 }
 15:
            oscar = false;
 17:
            report = entity.isLastRow;
            if(!(report === tango)) { _fun118768_ip = 29; continue _fun118768 }
 27:
            report = false;
 29:
            entity = _closure1_slot4;
            verify = entity.bind(tango)();
            mike = _closure1_slot0;
            options = _closure1_slot1;
            entity = 5;
            zulu = options[entity];
            romeo = mike.bind(tango)(zulu);
            yankee = romeo.usePlaceholderWidth;
            offset = 10;
            zulu = 50;
            output = yankee.bind(romeo)(offset, zulu);
            entity = options[entity];
            yankee = mike.bind(tango)(entity);
            offset = yankee.usePlaceholderWidth;
            zulu = 30;
            entity = 90;
            backup = offset.bind(yankee)(zulu, entity);
            zulu = _closure1_slot3;
            entity = 6;
            entity = options[entity];
            entity = mike.bind(tango)(entity);
            mike = entity.TableRow;
            entity = {};
            options = _closure1_slot2;
            golf = {};
            offset = verify.loadingAppIcon;
            golf['style'] = offset;
            golf = zulu.bind(tango)(options, golf);
            entity['icon'] = golf;
            golf = {};
            yankee = verify.loadingTextPlaceholder;
            offset = new Array(2);
            offset[0] = yankee;
            kilo = {};
            yankee = global;
            romeo = yankee.HermesInternal;
            sizing = romeo.concat;
            foxtrot = '';
            romeo = '%';
            sizing = sizing.bind(foxtrot)(output, romeo);
            kilo['width'] = sizing;
            offset[1] = kilo;
            golf['style'] = offset;
            golf = zulu.bind(tango)(options, golf);
            entity['label'] = golf;
            golf = {};
            offset = verify.loadingTextPlaceholderSmall;
            verify = new Array(2);
            verify[0] = offset;
            offset = {};
            yankee = yankee.HermesInternal;
            yankee = yankee.concat;
            yankee = yankee.bind(foxtrot)(backup, romeo);
            offset['width'] = yankee;
            verify[1] = offset;
            golf['style'] = verify;
            golf = zulu.bind(tango)(options, golf);
            entity['subLabel'] = golf;
            golf = 1;
            entity['subLabelLineClamp'] = golf;
            entity['start'] = oscar;
            entity['end'] = report;
            report = function() { // Original name: onPress
                entity = undefined;
                return entity;
            };
            entity['onPress'] = report;
            entity = zulu.bind(tango)(mike, entity);
            return entity;
        }
    };
    zulu['default'] = mike;
    return entity;
})();