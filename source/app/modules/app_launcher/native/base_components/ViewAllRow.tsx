// app/modules/app_launcher/native/base_components/ViewAllRow.tsx
export default (function(argFoo, argBar, _, argCor, __, argFre, argPlu) {
    report = argBar;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    var _closure1_slot1 = oscard;
    entity = global;
    option = entity.Object;
    golfie = option.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(option)(zuuluu, entity, tangon);
    entity = 0;
    golfie = oscard[entity];
    tangon = argCor;
    entity = undefined;
    tangon = tangon.bind(entity)(golfie);
    tangon = 1;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.View;
    var _closure1_slot2 = tangon;
    tangon = 2;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.jsx;
    var _closure1_slot3 = tangon;
    tangon = 3;
    tangon = oscard[tangon];
    option = report.bind(entity)(tangon);
    golfie = option.createStyles;
    tangon = {};
    verify = {};
    offset = 'center';
    verify['alignItems'] = offset;
    tangon['expandCTALabelContainer'] = verify;
    tangon = golfie.bind(option)(tangon);
    var _closure1_slot4 = tangon;
    tangon = 7;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/app_launcher/native/base_components/ViewAllRow.tsx';
    tangon = report.bind(oscard)(tangon);
    michal = function(argFoo) { // Original name: ViewAllRow
        entity = argFoo;
        report = entity.onPress;
        entity = _closure1_slot4;
        tangon = undefined;
        option = entity.bind(tangon)();
        zuuluu = _closure1_slot3;
        yankee = _closure1_slot0;
        backup = _closure1_slot1;
        entity = 4;
        entity = backup[entity];
        entity = yankee.bind(tangon)(entity);
        michal = entity.TableRow;
        entity = {};
        golfie = _closure1_slot2;
        oscard = {};
        option = option.expandCTALabelContainer;
        oscard['style'] = option;
        option = 5;
        option = backup[option];
        option = yankee.bind(tangon)(option);
        verify = option.Text;
        option = {'color': 'text-brand', 'variant': 'text-md/semibold'};
        offset = 6;
        romeon = backup[offset];
        romeon = yankee.bind(tangon)(romeon);
        foxtra = romeon.intl;
        romeon = foxtra.format;
        offset = backup[offset];
        offset = yankee.bind(tangon)(offset);
        offset = offset.t;
        yankee = offset.gVw57u;
        offset = {};
        offset = romeon.bind(foxtra)(yankee, offset);
        option['children'] = offset;
        option = zuuluu.bind(tangon)(verify, option);
        oscard['children'] = option;
        oscard = zuuluu.bind(tangon)(golfie, oscard);
        entity['label'] = oscard;
        entity['onPress'] = report;
        report = true;
        entity['end'] = report;
        entity = zuuluu.bind(tangon)(michal, entity);
        return entity;
    };
    zuuluu['default'] = michal;
    return entity;
})();