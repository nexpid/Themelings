// app/modules/app_launcher/native/base_components/AppLauncherFlashList.tsx
export default (function(argFoo, argBar, _, argCor, __, argFre, argPlu) {
    oscard = argBar;
    zuuluu = argFre;
    golfie = argPlu;
    var _closure1_slot0 = oscard;
    var _closure1_slot1 = golfie;
    entity = global;
    option = entity.Object;
    report = option.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = report.bind(option)(zuuluu, entity, tangon);
    entity = 0;
    report = golfie[entity];
    tangon = argCor;
    entity = undefined;
    option = tangon.bind(entity)(report);
    var _closure1_slot2 = option;
    tangon = 1;
    tangon = golfie[tangon];
    tangon = oscard.bind(entity)(tangon);
    tangon = tangon.ScrollView;
    var _closure1_slot3 = tangon;
    tangon = 2;
    tangon = golfie[tangon];
    tangon = oscard.bind(entity)(tangon);
    tangon = tangon.jsx;
    var _closure1_slot4 = tangon;
    report = option.forwardRef;
    tangon = function(argFoo, argBar) {
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            oscard = argFoo;
            report = argBar;
            option = _closure1_slot0;
            michal = _closure1_slot1;
            zuuluu = 5;
            zuuluu = michal[zuuluu];
            tangon = undefined;
            golfie = option.bind(tangon)(zuuluu);
            zuuluu = golfie.useAppLauncherContext;
            zuuluu = zuuluu.bind(golfie)();
            zuuluu = zuuluu.entrypoint;
            verify = oscard.simultaneousHandlers;
            golfie = function(argFoo) { // Original name: useScrollViewComponent
                report = argFoo;
                var _closure3_slot0 = report;
                tangon = _closure1_slot2;
                zuuluu = tangon.useMemo;
                michal = new Array(1);
                michal[0] = report;
                entity = function() {
                    _fun00003: for(var _fun00004_ip = 0; ; ) switch(_fun00004_ip) {
 0:
                        michal = _closure3_slot0;
                        entity = null;
                        if(!(entity != michal)) { _fun00004_ip = 42; continue _fun00003 }
 13:
                        zuuluu = _closure1_slot2;
                        michal = zuuluu.forwardRef;
                        entity = function(argFoo, argBar) {
                            tangon = _closure1_slot2;
                            zuuluu = tangon.useMemo;
                            michal = function() {
                                zuuluu = _closure1_slot0;
                                michal = _closure1_slot1;
                                entity = 3;
                                michal = michal[entity];
                                entity = undefined;
                                entity = zuuluu.bind(entity)(michal);
                                michal = entity.Gesture;
                                entity = michal.Native;
                                zuuluu = entity.bind(michal)();
                                michal = zuuluu.simultaneousWithExternalGesture;
                                entity = _closure3_slot0;
                                entity = michal.bind(zuuluu)(entity);
                                return entity;
                            };
                            entity = new Array(0);
                            oscard = zuuluu.bind(tangon)(michal, entity);
                            tangon = _closure1_slot4;
                            michal = _closure1_slot0;
                            zuuluu = _closure1_slot1;
                            entity = 3;
                            entity = zuuluu[entity];
                            zuuluu = undefined;
                            entity = michal.bind(zuuluu)(entity);
                            michal = entity.GestureDetector;
                            entity = {};
                            entity['gesture'] = oscard;
                            oscard = _closure1_slot3;
                            report = {};
                            golfie = argBar;
                            report['ref'] = golfie;
                            option = argFoo;
                            verify = report;
                            golfie = copyDataProperties(verify, option);
                            report = tangon.bind(zuuluu)(oscard, report);
                            entity['children'] = report;
                            entity = tangon.bind(zuuluu)(michal, entity);
                            return entity;
                        };
                        entity = michal.bind(zuuluu)(entity);
                        _fun00004_ip = 49; continue _fun00003;
 42:
                        entity = _closure1_slot3;
 49:
                        return entity;
                    }
                };
                entity = zuuluu.bind(tangon)(entity, michal);
                return entity;
            };
            golfie = golfie.bind(tangon)(verify);
            verify = 6;
            michal = michal[verify];
            michal = option.bind(tangon)(michal);
            michal = michal.AppLauncherEntrypoint;
            michal = michal.VOICE;
            if(!(michal !== zuuluu)) { _fun00002_ip = 623; continue _fun00001 }
 98:
            option = _closure1_slot0;
            michal = _closure1_slot1;
            michal = michal[verify];
            michal = option.bind(tangon)(michal);
            michal = michal.AppLauncherEntrypoint;
            michal = michal.PLAY_TAB;
            if(!(michal !== zuuluu)) { _fun00002_ip = 399; continue _fun00001 }
 134:
            option = _closure1_slot0;
            michal = _closure1_slot1;
            michal = michal[verify];
            michal = option.bind(tangon)(michal);
            michal = michal.AppLauncherEntrypoint;
            michal = michal.QUICK_LAUNCHER;
            if(!(michal !== zuuluu)) { _fun00002_ip = 399; continue _fun00001 }
 170:
            option = _closure1_slot4;
            zuuluu = _closure1_slot0;
            verify = _closure1_slot1;
            michal = 7;
            michal = verify[michal];
            michal = zuuluu.bind(tangon)(michal);
            zuuluu = michal.BottomSheetFlashList;
            michal = {};
            verify = oscard.ListHeaderComponent;
            michal['ListHeaderComponent'] = verify;
            verify = oscard.onScroll;
            michal['onScroll'] = verify;
            verify = oscard.contentContainerStyle;
            michal['contentContainerStyle'] = verify;
            verify = oscard.scrollIndicatorInsets;
            michal['scrollIndicatorInsets'] = verify;
            verify = oscard.renderItem;
            michal['renderItem'] = verify;
            verify = oscard.getItemType;
            michal['getItemType'] = verify;
            verify = oscard.data;
            michal['data'] = verify;
            verify = oscard.estimatedItemSize;
            michal['estimatedItemSize'] = verify;
            verify = oscard.preserveScrollMomentum;
            michal['preserveScrollMomentum'] = verify;
            verify = oscard.automaticallyAdjustsScrollIndicatorInsets;
            michal['automaticallyAdjustsScrollIndicatorInsets'] = verify;
            verify = oscard.keyboardDismissMode;
            michal['keyboardDismissMode'] = verify;
            verify = oscard.keyboardShouldPersistTaps;
            michal['keyboardShouldPersistTaps'] = verify;
            verify = oscard.showsVerticalScrollIndicator;
            michal['showsVerticalScrollIndicator'] = verify;
            verify = oscard.lockableScrollableContentOffsetY;
            michal['lockableScrollableContentOffsetY'] = verify;
            verify = oscard.onViewableItemsChanged;
            michal['onViewableItemsChanged'] = verify;
            verify = oscard.viewabilityConfigCallbackPairs;
            michal['viewabilityConfigCallbackPairs'] = verify;
            verify = oscard.bottomViewabilityInsetRef;
            michal['bottomViewabilityInsetRef'] = verify;
            michal['ref'] = report;
            michal = option.bind(tangon)(zuuluu, michal);
            return michal;
 399:
            option = _closure1_slot4;
            zuuluu = _closure1_slot0;
            verify = _closure1_slot1;
            michal = 7;
            michal = verify[michal];
            michal = zuuluu.bind(tangon)(michal);
            zuuluu = michal.FlashList;
            michal = {};
            michal['renderScrollComponent'] = golfie;
            verify = oscard.ListHeaderComponent;
            michal['ListHeaderComponent'] = verify;
            verify = oscard.onScroll;
            offset = null;
            if(!(offset == verify)) { _fun00002_ip = 465; continue _fun00001 }
 459:
            verify = oscard.animatedOnScroll;
 465:
            michal['onScroll'] = verify;
            verify = oscard.contentContainerStyle;
            michal['contentContainerStyle'] = verify;
            verify = oscard.scrollIndicatorInsets;
            michal['scrollIndicatorInsets'] = verify;
            verify = oscard.renderItem;
            michal['renderItem'] = verify;
            verify = oscard.getItemType;
            michal['getItemType'] = verify;
            verify = oscard.data;
            michal['data'] = verify;
            verify = oscard.estimatedItemSize;
            michal['estimatedItemSize'] = verify;
            verify = oscard.automaticallyAdjustsScrollIndicatorInsets;
            michal['automaticallyAdjustsScrollIndicatorInsets'] = verify;
            verify = oscard.keyboardDismissMode;
            michal['keyboardDismissMode'] = verify;
            verify = oscard.keyboardShouldPersistTaps;
            michal['keyboardShouldPersistTaps'] = verify;
            verify = oscard.showsVerticalScrollIndicator;
            michal['showsVerticalScrollIndicator'] = verify;
            verify = oscard.onViewableItemsChanged;
            michal['onViewableItemsChanged'] = verify;
            verify = oscard.viewabilityConfigCallbackPairs;
            michal['viewabilityConfigCallbackPairs'] = verify;
            verify = 'never';
            michal['overScrollMode'] = verify;
            michal['ref'] = report;
            michal = option.bind(tangon)(zuuluu, michal);
            return michal;
 623:
            zuuluu = _closure1_slot4;
            michal = _closure1_slot0;
            option = _closure1_slot1;
            entity = 7;
            entity = option[entity];
            entity = michal.bind(tangon)(entity);
            michal = entity.AnimatedFlashList;
            entity = {};
            entity['renderScrollComponent'] = golfie;
            golfie = oscard.ListHeaderComponent;
            entity['ListHeaderComponent'] = golfie;
            golfie = oscard.animatedOnScroll;
            entity['onScroll'] = golfie;
            golfie = oscard.contentContainerStyle;
            entity['contentContainerStyle'] = golfie;
            golfie = oscard.scrollIndicatorInsets;
            entity['scrollIndicatorInsets'] = golfie;
            golfie = oscard.renderItem;
            entity['renderItem'] = golfie;
            golfie = oscard.getItemType;
            entity['getItemType'] = golfie;
            golfie = oscard.data;
            entity['data'] = golfie;
            golfie = oscard.estimatedItemSize;
            entity['estimatedItemSize'] = golfie;
            golfie = oscard.automaticallyAdjustsScrollIndicatorInsets;
            entity['automaticallyAdjustsScrollIndicatorInsets'] = golfie;
            golfie = oscard.keyboardDismissMode;
            entity['keyboardDismissMode'] = golfie;
            golfie = oscard.keyboardShouldPersistTaps;
            entity['keyboardShouldPersistTaps'] = golfie;
            golfie = oscard.showsVerticalScrollIndicator;
            entity['showsVerticalScrollIndicator'] = golfie;
            golfie = oscard.onViewableItemsChanged;
            entity['onViewableItemsChanged'] = golfie;
            golfie = oscard.viewabilityConfigCallbackPairs;
            entity['viewabilityConfigCallbackPairs'] = golfie;
            oscard = oscard.animatedProps;
            entity['animatedProps'] = oscard;
            oscard = 'never';
            entity['overScrollMode'] = oscard;
            entity['ref'] = report;
            entity = zuuluu.bind(tangon)(michal, entity);
            return entity;
        }
    };
    tangon = report.bind(option)(tangon);
    report = 'AppLauncherFlashList';
    tangon['displayName'] = report;
    report = 8;
    report = golfie[report];
    golfie = oscard.bind(entity)(report);
    oscard = golfie.fileFinishedImporting;
    report = 'modules/app_launcher/native/base_components/AppLauncherFlashList.tsx';
    report = oscard.bind(golfie)(report);
    zuuluu['default'] = tangon;
    michal = function(argFoo) { // Original name: useAppLauncherFlashListProps
        tangon = _closure1_slot2;
        michal = tangon.useContext;
        report = _closure1_slot0;
        zuuluu = _closure1_slot1;
        entity = 4;
        entity = zuuluu[entity];
        zuuluu = undefined;
        entity = report.bind(zuuluu)(entity);
        entity = entity.ControlsGestureScrollLock;
        michal = michal.bind(tangon)(entity);
        entity = argFoo;
        entity = michal.bind(zuuluu)(entity);
        return entity;
    };
    zuuluu['useAppLauncherFlashListProps'] = michal;
    return entity;
})();