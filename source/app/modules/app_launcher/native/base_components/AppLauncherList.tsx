// app/modules/app_launcher/native/base_components/AppLauncherList.tsx
export default (function(argFoo, argBar, argBaz, argCorge, _, argFred, argPlugh) {
    oscar = argBar;
    zulu = argFred;
    golf = argPlugh;
    var _closure1_slot0 = oscar;
    entity = argBaz;
    var _closure1_slot1 = entity;
    var _closure1_slot2 = golf;
    entity = global;
    options = entity.Object;
    report = options.defineProperty;
    tango = {};
    entity = true;
    tango['value'] = entity;
    entity = '__esModule';
    entity = report.bind(options)(zulu, entity, tango);
    yankee = 0;
    report = golf[yankee];
    tango = argCorge;
    entity = undefined;
    options = tango.bind(entity)(report);
    tango = 1;
    tango = golf[tango];
    tango = oscar.bind(entity)(tango);
    tango = tango.View;
    var _closure1_slot3 = tango;
    tango = 2;
    tango = golf[tango];
    tango = oscar.bind(entity)(tango);
    report = tango.TABLE_ROW_CONTENT_HEIGHT;
    var _closure1_slot4 = report;
    tango = tango.TABLE_ROW_HEIGHT;
    var _closure1_slot5 = tango;
    tango = 3;
    tango = golf[tango];
    tango = oscar.bind(entity)(tango);
    tango = tango.jsx;
    var _closure1_slot6 = tango;
    tango = 4;
    tango = golf[tango];
    verify = oscar.bind(entity)(tango);
    report = verify.createStyles;
    tango = {};
    offset = {};
    romeo = 16;
    offset['marginBottom'] = romeo;
    tango['searchBarContainer'] = offset;
    offset = {'backgroundColor': 'transparent', 'justifyContent': 'flex-start'};
    tango['emptyState'] = offset;
    offset = {};
    offset['flex'] = yankee;
    tango['emptyStateImage'] = offset;
    tango = report.bind(verify)(tango);
    var _closure1_slot7 = tango;
    report = options.forwardRef;
    tango = function(argFoo, argBar) {
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            oscar = argFoo;
            golf = argBar;
            yankee = _closure1_slot0;
            verify = _closure1_slot2;
            entity = 5;
            entity = verify[entity];
            tango = undefined;
            mike = yankee.bind(tango)(entity);
            entity = mike.useFontScale;
            entity = entity.bind(mike)();
            mike = _closure1_slot5;
            report = global;
            offset = report.Math;
            options = offset.max;
            report = _closure1_slot4;
            entity = entity * report;
            report = entity - report;
            entity = 0;
            entity = options.bind(offset)(report, entity);
            options = mike + entity;
            mike = _closure1_slot1;
            entity = 6;
            entity = verify[entity];
            entity = mike.bind(tango)(entity);
            entity = entity.bind(tango)();
            offset = entity.bottom;
            entity = 7;
            report = verify[entity];
            yankee = yankee.bind(tango)(report);
            report = yankee.useAppLauncherFlashListProps;
            report = report.bind(yankee)();
            zulu = _closure1_slot6;
            entity = verify[entity];
            mike = mike.bind(tango)(entity);
            entity = {};
            verify = {};
            verify['paddingBottom'] = offset;
            romeo = oscar.contentContainerStyle;
            foxtrot = verify;
            yankee = copyDataProperties(foxtrot, romeo);
            entity['contentContainerStyle'] = verify;
            verify = {};
            verify['bottom'] = offset;
            entity['scrollIndicatorInsets'] = verify;
            entity['estimatedItemSize'] = options;
            options = report.scrollerRef;
            verify = null;
            if(!(verify != options)) { _fun00002_ip = 200; continue _fun00001 }
 197:
            golf = options;
 200:
            entity['ref'] = golf;
            foxtrot = entity;
            romeo = oscar;
            oscar = copyDataProperties(foxtrot, romeo);
            golf = report.onScroll;
            oscar = 'animatedOnScroll';
            entity[oscar] = golf;
            golf = report.gestureRef;
            oscar = 'simultaneousHandlers';
            entity[oscar] = golf;
            oscar = report.animatedProps;
            report = 'animatedProps';
            entity[report] = oscar;
            entity = zulu.bind(tango)(mike, entity);
            return entity;
        }
    };
    tango = report.bind(options)(tango);
    report = 12;
    report = golf[report];
    golf = oscar.bind(entity)(report);
    oscar = golf.fileFinishedImporting;
    report = 'modules/app_launcher/native/base_components/AppLauncherList.tsx';
    report = oscar.bind(golf)(report);
    zulu['AppLauncherList'] = tango;
    tango = function() { // Original name: AppLauncherListEmptyState
        entity = _closure1_slot7;
        tango = undefined;
        oscar = entity.bind(tango)();
        zulu = _closure1_slot6;
        golf = _closure1_slot1;
        verify = _closure1_slot2;
        entity = 8;
        entity = verify[entity];
        mike = golf.bind(tango)(entity);
        entity = {};
        options = oscar.emptyState;
        entity['style'] = options;
        oscar = oscar.emptyStateImage;
        entity['imageStyle'] = oscar;
        oscar = 9;
        options = verify[oscar];
        options = golf.bind(tango)(options);
        entity['lightSource'] = options;
        oscar = verify[oscar];
        oscar = golf.bind(tango)(oscar);
        entity['darkSource'] = oscar;
        options = _closure1_slot0;
        report = 10;
        oscar = verify[report];
        oscar = options.bind(tango)(oscar);
        offset = oscar.intl;
        golf = offset.string;
        oscar = verify[report];
        oscar = options.bind(tango)(oscar);
        oscar = oscar.t;
        oscar = oscar.vYocDw;
        oscar = golf.bind(offset)(oscar);
        entity['title'] = oscar;
        oscar = verify[report];
        oscar = options.bind(tango)(oscar);
        golf = oscar.intl;
        oscar = golf.string;
        report = verify[report];
        report = options.bind(tango)(report);
        report = report.t;
        report = report.V6nAfH;
        report = oscar.bind(golf)(report);
        entity['body'] = report;
        entity = zulu.bind(tango)(mike, entity);
        return entity;
    };
    zulu['AppLauncherListEmptyState'] = tango;
    mike = function(argFoo) { // Original name: AppLauncherListSearchBar
        entity = _closure1_slot7;
        tango = undefined;
        oscar = entity.bind(tango)();
        zulu = _closure1_slot6;
        mike = _closure1_slot3;
        entity = {};
        oscar = oscar.searchBarContainer;
        entity['style'] = oscar;
        oscar = _closure1_slot0;
        golf = _closure1_slot2;
        report = 11;
        report = golf[report];
        report = oscar.bind(tango)(report);
        oscar = report.SearchField;
        report = {};
        golf = 'md';
        report['size'] = golf;
        options = argFoo;
        verify = report;
        golf = copyDataProperties(verify, options);
        report = zulu.bind(tango)(oscar, report);
        entity['children'] = report;
        entity = zulu.bind(tango)(mike, entity);
        return entity;
    };
    zulu['AppLauncherListSearchBar'] = mike;
    return entity;
})();