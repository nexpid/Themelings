// app/modules/app_launcher/native/base_components/AppLauncherList.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    oscard = argBar;
    zuuluu = argFre;
    golfie = argPlu;
    var _closure1_slot0 = oscard;
    entity = argBaz;
    var _closure1_slot1 = entity;
    var _closure1_slot2 = golfie;
    entity = global;
    option = entity.Object;
    report = option.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = report.bind(option)(zuuluu, entity, tangon);
    yankee = 0;
    report = golfie[yankee];
    tangon = argCor;
    entity = undefined;
    option = tangon.bind(entity)(report);
    tangon = 1;
    tangon = golfie[tangon];
    tangon = oscard.bind(entity)(tangon);
    tangon = tangon.View;
    var _closure1_slot3 = tangon;
    tangon = 2;
    tangon = golfie[tangon];
    tangon = oscard.bind(entity)(tangon);
    report = tangon.TABLE_ROW_CONTENT_HEIGHT;
    var _closure1_slot4 = report;
    tangon = tangon.TABLE_ROW_HEIGHT;
    var _closure1_slot5 = tangon;
    tangon = 3;
    tangon = golfie[tangon];
    tangon = oscard.bind(entity)(tangon);
    tangon = tangon.jsx;
    var _closure1_slot6 = tangon;
    tangon = 4;
    tangon = golfie[tangon];
    verify = oscard.bind(entity)(tangon);
    report = verify.createStyles;
    tangon = {};
    offset = {};
    romeon = 16;
    offset['marginBottom'] = romeon;
    tangon['searchBarContainer'] = offset;
    offset = {'backgroundColor': 'transparent', 'justifyContent': 'flex-start'};
    tangon['emptyState'] = offset;
    offset = {};
    offset['flex'] = yankee;
    tangon['emptyStateImage'] = offset;
    tangon = report.bind(verify)(tangon);
    var _closure1_slot7 = tangon;
    report = option.forwardRef;
    tangon = function(argFoo, argBar) {
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            oscard = argFoo;
            golfie = argBar;
            yankee = _closure1_slot0;
            verify = _closure1_slot2;
            entity = 5;
            entity = verify[entity];
            tangon = undefined;
            michal = yankee.bind(tangon)(entity);
            entity = michal.useFontScale;
            entity = entity.bind(michal)();
            michal = _closure1_slot5;
            report = global;
            offset = report.Math;
            option = offset.max;
            report = _closure1_slot4;
            entity = entity * report;
            report = entity - report;
            entity = 0;
            entity = option.bind(offset)(report, entity);
            option = michal + entity;
            michal = _closure1_slot1;
            entity = 6;
            entity = verify[entity];
            entity = michal.bind(tangon)(entity);
            entity = entity.bind(tangon)();
            offset = entity.bottom;
            entity = 7;
            report = verify[entity];
            yankee = yankee.bind(tangon)(report);
            report = yankee.useAppLauncherFlashListProps;
            report = report.bind(yankee)();
            zuuluu = _closure1_slot6;
            entity = verify[entity];
            michal = michal.bind(tangon)(entity);
            entity = {};
            verify = {};
            verify['paddingBottom'] = offset;
            romeon = oscard.contentContainerStyle;
            foxtra = verify;
            yankee = copyDataProperties(foxtra, romeon);
            entity['contentContainerStyle'] = verify;
            verify = {};
            verify['bottom'] = offset;
            entity['scrollIndicatorInsets'] = verify;
            entity['estimatedItemSize'] = option;
            option = report.scrollerRef;
            verify = null;
            if(!(verify != option)) { _fun00002_ip = 200; continue _fun00001 }
 197:
            golfie = option;
 200:
            entity['ref'] = golfie;
            foxtra = entity;
            romeon = oscard;
            oscard = copyDataProperties(foxtra, romeon);
            golfie = report.onScroll;
            oscard = 'animatedOnScroll';
            entity[oscard] = golfie;
            golfie = report.gestureRef;
            oscard = 'simultaneousHandlers';
            entity[oscard] = golfie;
            oscard = report.animatedProps;
            report = 'animatedProps';
            entity[report] = oscard;
            entity = zuuluu.bind(tangon)(michal, entity);
            return entity;
        }
    };
    tangon = report.bind(option)(tangon);
    report = 12;
    report = golfie[report];
    golfie = oscard.bind(entity)(report);
    oscard = golfie.fileFinishedImporting;
    report = 'modules/app_launcher/native/base_components/AppLauncherList.tsx';
    report = oscard.bind(golfie)(report);
    zuuluu['AppLauncherList'] = tangon;
    tangon = function() { // Original name: AppLauncherListEmptyState
        entity = _closure1_slot7;
        tangon = undefined;
        oscard = entity.bind(tangon)();
        zuuluu = _closure1_slot6;
        golfie = _closure1_slot1;
        verify = _closure1_slot2;
        entity = 8;
        entity = verify[entity];
        michal = golfie.bind(tangon)(entity);
        entity = {};
        option = oscard.emptyState;
        entity['style'] = option;
        oscard = oscard.emptyStateImage;
        entity['imageStyle'] = oscard;
        oscard = 9;
        option = verify[oscard];
        option = golfie.bind(tangon)(option);
        entity['lightSource'] = option;
        oscard = verify[oscard];
        oscard = golfie.bind(tangon)(oscard);
        entity['darkSource'] = oscard;
        option = _closure1_slot0;
        report = 10;
        oscard = verify[report];
        oscard = option.bind(tangon)(oscard);
        offset = oscard.intl;
        golfie = offset.string;
        oscard = verify[report];
        oscard = option.bind(tangon)(oscard);
        oscard = oscard.t;
        oscard = oscard.vYocDw;
        oscard = golfie.bind(offset)(oscard);
        entity['title'] = oscard;
        oscard = verify[report];
        oscard = option.bind(tangon)(oscard);
        golfie = oscard.intl;
        oscard = golfie.string;
        report = verify[report];
        report = option.bind(tangon)(report);
        report = report.t;
        report = report.V6nAfH;
        report = oscard.bind(golfie)(report);
        entity['body'] = report;
        entity = zuuluu.bind(tangon)(michal, entity);
        return entity;
    };
    zuuluu['AppLauncherListEmptyState'] = tangon;
    michal = function(argFoo) { // Original name: AppLauncherListSearchBar
        entity = _closure1_slot7;
        tangon = undefined;
        oscard = entity.bind(tangon)();
        zuuluu = _closure1_slot6;
        michal = _closure1_slot3;
        entity = {};
        oscard = oscard.searchBarContainer;
        entity['style'] = oscard;
        oscard = _closure1_slot0;
        golfie = _closure1_slot2;
        report = 11;
        report = golfie[report];
        report = oscard.bind(tangon)(report);
        oscard = report.SearchField;
        report = {};
        golfie = 'md';
        report['size'] = golfie;
        option = argFoo;
        verify = report;
        golfie = copyDataProperties(verify, option);
        report = zuuluu.bind(tangon)(oscard, report);
        entity['children'] = report;
        entity = zuuluu.bind(tangon)(michal, entity);
        return entity;
    };
    zuuluu['AppLauncherListSearchBar'] = michal;
    return entity;
})();