// app/modules/app_launcher/native/screens/command_view/hooks/useOptionAnimations.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    golfie = argBar;
    zuuluu = argFre;
    option = argPlu;
    var _closure1_slot0 = golfie;
    var _closure1_slot1 = option;
    entity = global;
    oscard = entity.Object;
    report = oscard.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = report.bind(oscard)(zuuluu, entity, tangon);
    entity = 0;
    report = option[entity];
    tangon = argBaz;
    entity = undefined;
    tangon = tangon.bind(entity)(report);
    var _closure1_slot2 = tangon;
    tangon = 1;
    report = option[tangon];
    tangon = argCor;
    tangon = tangon.bind(entity)(report);
    var _closure1_slot3 = tangon;
    tangon = {};
    report = 'function LayoutAnimation_useOptionAnimationsTsx1(values){const{withTiming,OPTION_ENTRY_EXIT_LAYOUT_SHIFT_DURATION}=this.__closure;const animations={originY:withTiming(values.targetOriginY,{duration:OPTION_ENTRY_EXIT_LAYOUT_SHIFT_DURATION})};const initialValues={originY:values.currentOriginY};return{initialValues:initialValues,animations:animations};}';
    tangon['code'] = report;
    var _closure1_slot4 = tangon;
    tangon = function() {
        entity = function(argFoo) { // Original name: LayoutAnimation
            tangon = argFoo;
            michal = {};
            report = _closure1_slot0;
            zuuluu = _closure1_slot1;
            entity = 2;
            zuuluu = zuuluu[entity];
            entity = undefined;
            oscard = report.bind(entity)(zuuluu);
            report = oscard.withTiming;
            zuuluu = tangon.targetOriginY;
            entity = {};
            golfie = 300;
            entity['duration'] = golfie;
            entity = report.bind(oscard)(zuuluu, entity);
            michal['originY'] = entity;
            entity = {};
            zuuluu = {};
            tangon = tangon.currentOriginY;
            zuuluu['originY'] = tangon;
            entity['initialValues'] = zuuluu;
            entity['animations'] = michal;
            return entity;
        };
        zuuluu = {};
        oscard = _closure1_slot0;
        report = _closure1_slot1;
        tangon = 2;
        report = report[tangon];
        tangon = undefined;
        tangon = oscard.bind(tangon)(report);
        tangon = tangon.withTiming;
        zuuluu['withTiming'] = tangon;
        tangon = 300;
        zuuluu['OPTION_ENTRY_EXIT_LAYOUT_SHIFT_DURATION'] = tangon;
        entity['__closure'] = zuuluu;
        zuuluu = 16804895997501.0;
        entity['__workletHash'] = zuuluu;
        michal = _closure1_slot4;
        entity['__initData'] = michal;
        return entity;
    };
    report = tangon.bind(entity)();
    tangon = {};
    oscard = 'function ExitingAnimation_useOptionAnimationsTsx2(values){const{withTiming,OPTION_ENTRY_EXIT_LAYOUT_SHIFT_DURATION}=this.__closure;const offScreenX=Math.min(values.currentOriginX-values.windowWidth,-values.windowWidth);const animations={opacity:withTiming(0,{duration:OPTION_ENTRY_EXIT_LAYOUT_SHIFT_DURATION}),originX:withTiming(offScreenX,{duration:OPTION_ENTRY_EXIT_LAYOUT_SHIFT_DURATION})};const initialValues={originX:values.currentOriginX,opacity:1};return{initialValues:initialValues,animations:animations};}';
    tangon['code'] = oscard;
    var _closure1_slot5 = tangon;
    tangon = function() {
        entity = function(argFoo) { // Original name: ExitingAnimation
            tangon = argFoo;
            entity = global;
            report = entity.Math;
            zuuluu = report.min;
            michal = tangon.currentOriginX;
            entity = tangon.windowWidth;
            michal = michal - entity;
            entity = tangon.windowWidth;
            entity = -entity;
            oscard = zuuluu.bind(report)(michal, entity);
            michal = {};
            report = _closure1_slot0;
            option = _closure1_slot1;
            entity = 2;
            golfie = option[entity];
            zuuluu = undefined;
            romeon = report.bind(zuuluu)(golfie);
            yankee = romeon.withTiming;
            offset = {};
            golfie = 300;
            offset['duration'] = golfie;
            verify = 0;
            verify = yankee.bind(romeon)(verify, offset);
            michal['opacity'] = verify;
            entity = option[entity];
            report = report.bind(zuuluu)(entity);
            zuuluu = report.withTiming;
            entity = {};
            entity['duration'] = golfie;
            entity = zuuluu.bind(report)(oscard, entity);
            michal['originX'] = entity;
            entity = {};
            zuuluu = {};
            tangon = tangon.currentOriginX;
            zuuluu['originX'] = tangon;
            tangon = 1;
            zuuluu['opacity'] = tangon;
            entity['initialValues'] = zuuluu;
            entity['animations'] = michal;
            return entity;
        };
        zuuluu = {};
        oscard = _closure1_slot0;
        report = _closure1_slot1;
        tangon = 2;
        report = report[tangon];
        tangon = undefined;
        tangon = oscard.bind(tangon)(report);
        tangon = tangon.withTiming;
        zuuluu['withTiming'] = tangon;
        tangon = 300;
        zuuluu['OPTION_ENTRY_EXIT_LAYOUT_SHIFT_DURATION'] = tangon;
        entity['__closure'] = zuuluu;
        zuuluu = 8977480282966.0;
        entity['__workletHash'] = zuuluu;
        michal = _closure1_slot5;
        entity['__initData'] = michal;
        return entity;
    };
    tangon = tangon.bind(entity)();
    oscard = {};
    verify = 'function useOptionAnimationsTsx3(){const{withTiming,Easing,OPTION_ENTRY_EXIT_LAYOUT_SHIFT_DURATION,withDelay,runOnJS,handleMountAnimationComplete}=this.__closure;const scaleAnimation=withTiming(1,{duration:250,easing:Easing.bezier(0.25,1.75,0.25,1.25)});const opacityAnimation=withTiming(1,{duration:200});const layoutShiftDelay=OPTION_ENTRY_EXIT_LAYOUT_SHIFT_DURATION-100;return{animations:{opacity:withDelay(layoutShiftDelay,opacityAnimation),transform:[{scale:withDelay(layoutShiftDelay,scaleAnimation)}]},initialValues:{opacity:0,transform:[{scale:0.92}]},callback:function(){runOnJS(handleMountAnimationComplete)();}};}';
    oscard['code'] = verify;
    var _closure1_slot6 = oscard;
    oscard = 4;
    oscard = option[oscard];
    option = golfie.bind(entity)(oscard);
    golfie = option.fileFinishedImporting;
    oscard = 'modules/app_launcher/native/screens/command_view/hooks/useOptionAnimations.tsx';
    oscard = golfie.bind(option)(oscard);
    oscard = 300;
    zuuluu['OPTION_ENTRY_EXIT_LAYOUT_SHIFT_DURATION'] = oscard;
    zuuluu['LayoutAnimation'] = report;
    zuuluu['ExitingAnimation'] = tangon;
    michal = function() { // Original name: useOptionEnteringAnimation
        tangon = _closure1_slot0;
        report = _closure1_slot1;
        entity = 3;
        entity = report[entity];
        oscard = undefined;
        report = tangon.bind(oscard)(entity);
        tangon = report.useSharedValue;
        entity = false;
        entity = tangon.bind(report)(entity);
        var _closure2_slot0 = entity;
        report = _closure1_slot3;
        golfie = report.useRef;
        tangon = new Array(0);
        tangon = golfie.bind(report)(tangon);
        var _closure2_slot1 = tangon;
        golfie = report.useCallback;
        tangon = new Array(1);
        tangon[0] = entity;
        entity = function() {
            tangon = _closure2_slot0;
            zuuluu = tangon.set;
            michal = true;
            michal = zuuluu.bind(tangon)(michal);
            entity = _closure2_slot1;
            tangon = entity.current;
            zuuluu = tangon.forEach;
            michal = function(argFoo) {
                michal = argFoo;
                entity = undefined;
                entity = michal.bind(entity)();
                return entity;
            };
            michal = zuuluu.bind(tangon)(michal);
            tangon = entity.current;
            zuuluu = tangon.splice;
            entity = entity.current;
            michal = entity.length;
            entity = 0;
            entity = zuuluu.bind(tangon)(entity, michal);
            entity = undefined;
            return entity;
        };
        entity = golfie.bind(report)(entity, tangon);
        var _closure2_slot2 = entity;
        tangon = report.useState;
        entity = function() {
            entity = function() { // Original name: n
                option = _closure1_slot0;
                verify = _closure1_slot1;
                entity = 2;
                michal = verify[entity];
                report = undefined;
                oscard = option.bind(report)(michal);
                tangon = oscard.withTiming;
                michal = {};
                zuuluu = 250;
                michal['duration'] = zuuluu;
                zuuluu = 3;
                golfie = verify[zuuluu];
                golfie = option.bind(report)(golfie);
                foxtra = golfie.Easing;
                romeon = foxtra.bezier;
                yankee = 0.25;
                sizing = 1.75;
                backup = 1.25;
                result = foxtra;
                output = yankee;
                kiloes = yankee;
                golfie = result[romeon](output, sizing, kiloes, backup, foxtra);
                michal['easing'] = golfie;
                offset = 1;
                golfie = tangon.bind(oscard)(offset, michal);
                entity = verify[entity];
                tangon = option.bind(report)(entity);
                michal = tangon.withTiming;
                entity = {};
                oscard = 200;
                entity['duration'] = oscard;
                yankee = michal.bind(tangon)(offset, entity);
                entity = {};
                michal = {};
                tangon = verify[zuuluu];
                offset = option.bind(report)(tangon);
                tangon = offset.withDelay;
                tangon = tangon.bind(offset)(oscard, yankee);
                michal['opacity'] = tangon;
                tangon = {};
                zuuluu = verify[zuuluu];
                report = option.bind(report)(zuuluu);
                zuuluu = report.withDelay;
                zuuluu = zuuluu.bind(report)(oscard, golfie);
                tangon['scale'] = zuuluu;
                zuuluu = new Array(1);
                zuuluu[0] = tangon;
                michal['transform'] = zuuluu;
                entity['animations'] = michal;
                michal = {};
                zuuluu = 0;
                michal['opacity'] = zuuluu;
                tangon = {};
                zuuluu = 0.92;
                tangon['scale'] = zuuluu;
                zuuluu = new Array(1);
                zuuluu[0] = tangon;
                michal['transform'] = zuuluu;
                entity['initialValues'] = michal;
                michal = function() { // Original name: callback
                    zuuluu = _closure1_slot0;
                    michal = _closure1_slot1;
                    entity = 3;
                    michal = michal[entity];
                    entity = undefined;
                    tangon = zuuluu.bind(entity)(michal);
                    zuuluu = tangon.runOnJS;
                    michal = _closure2_slot2;
                    michal = zuuluu.bind(tangon)(michal);
                    michal = michal.bind(entity)();
                    return entity;
                };
                entity['callback'] = michal;
                return entity;
            };
            zuuluu = {};
            oscard = _closure1_slot0;
            golfie = _closure1_slot1;
            tangon = 2;
            tangon = golfie[tangon];
            report = undefined;
            tangon = oscard.bind(report)(tangon);
            tangon = tangon.withTiming;
            zuuluu['withTiming'] = tangon;
            tangon = 3;
            option = golfie[tangon];
            option = oscard.bind(report)(option);
            option = option.Easing;
            zuuluu['Easing'] = option;
            option = 300;
            zuuluu['OPTION_ENTRY_EXIT_LAYOUT_SHIFT_DURATION'] = option;
            option = golfie[tangon];
            option = oscard.bind(report)(option);
            option = option.withDelay;
            zuuluu['withDelay'] = option;
            tangon = golfie[tangon];
            tangon = oscard.bind(report)(tangon);
            tangon = tangon.runOnJS;
            zuuluu['runOnJS'] = tangon;
            tangon = _closure2_slot2;
            zuuluu['handleMountAnimationComplete'] = tangon;
            entity['__closure'] = zuuluu;
            zuuluu = 1048348699475.0;
            entity['__workletHash'] = zuuluu;
            michal = _closure1_slot6;
            entity['__initData'] = michal;
            return entity;
        };
        report = tangon.bind(report)(entity);
        entity = {};
        tangon = _closure1_slot2;
        zuuluu = 1;
        tangon = tangon.bind(oscard)(report, zuuluu);
        zuuluu = 0;
        zuuluu = tangon[zuuluu];
        entity['EnteringAnimation'] = zuuluu;
        michal = function(argFoo) { // Original name: registerAnimationCompleteCallback
            _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
                michal = argFoo;
                tangon = _closure2_slot0;
                zuuluu = tangon.get;
                zuuluu = zuuluu.bind(tangon)();
                if(zuuluu) { _fun00002_ip = 43; continue _fun00001 }
 22:
                entity = _closure2_slot1;
                zuuluu = entity.current;
                entity = zuuluu.push;
                entity = entity.bind(zuuluu)(michal);
                _fun00002_ip = 49; continue _fun00001;
 43:
                entity = undefined;
                entity = michal.bind(entity)();
 49:
                entity = undefined;
                return entity;
            }
        };
        entity['registerAnimationCompleteCallback'] = michal;
        return entity;
    };
    zuuluu['useOptionEnteringAnimation'] = michal;
    return entity;
})();