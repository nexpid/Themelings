// app/modules/app_launcher/native/screens/command_view/AppLauncherCommandViewHeader.tsx
export default (function(argFoo, argBar, argBaz, argCorge, _, argFred, argPlugh) {
    verify = argBar;
    backup = argBaz;
    zulu = argFred;
    offset = argPlugh;
    var _closure1_slot0 = verify;
    var _closure1_slot1 = backup;
    var _closure1_slot2 = offset;
    entity = global;
    oscar = entity.Object;
    report = oscar.defineProperty;
    tango = {};
    entity = true;
    tango['value'] = entity;
    entity = '__esModule';
    entity = report.bind(oscar)(zulu, entity, tango);
    entity = 0;
    report = offset[entity];
    tango = argCorge;
    entity = undefined;
    tango = tango.bind(entity)(report);
    var _closure1_slot3 = tango;
    tango = 1;
    tango = offset[tango];
    tango = verify.bind(entity)(tango);
    tango = tango.View;
    var _closure1_slot4 = tango;
    tango = 2;
    report = offset[tango];
    report = verify.bind(entity)(report);
    foxtrot = report.DEFAULT_CONTENT_PADDING;
    var _closure1_slot5 = foxtrot;
    kilo = report.SCREEN_BACKGROUND_COLOR;
    report = 3;
    oscar = offset[report];
    oscar = verify.bind(entity)(oscar);
    oscar = oscar.jsx;
    var _closure1_slot6 = oscar;
    report = offset[report];
    report = verify.bind(entity)(report);
    report = report.jsxs;
    var _closure1_slot7 = report;
    sizing = 4;
    report = offset[sizing];
    report = verify.bind(entity)(report);
    report = report.BACK_BUTTON_SIZE;
    tango = tango * foxtrot;
    report = report + tango;
    tango = 36;
    tango = report + tango;
    oscar = tango + sizing;
    golf = 56;
    tango = oscar - golf;
    var _closure1_slot8 = tango;
    tango = 5;
    tango = offset[tango];
    yankee = verify.bind(entity)(tango);
    options = yankee.createStyles;
    tango = {};
    report = {};
    romeo = 'rgba(0, 0, 0, 0.6)';
    report['backgroundColor'] = romeo;
    tango['backButton'] = report;
    romeo = {'alignItems': 'center', 'flexDirection': 'row', 'justifyContent': 'space-between', 'position': 'absolute', 'top': 4294967280, 'left': 0, 'right': 0};
    report = -16;
    romeo['padding'] = foxtrot;
    tango['headerContainer'] = romeo;
    romeo = {};
    foxtrot = 6;
    output = offset[foxtrot];
    output = backup.bind(entity)(output);
    output = output.colors;
    output = output.BACKGROUND_TERTIARY;
    romeo['backgroundColor'] = output;
    tango['loadingHeaderContainer'] = romeo;
    romeo = {'position': 'absolute', 'padding': 4, 'bottom': 4294967260, 'left': '50%'};
    romeo['backgroundColor'] = kilo;
    kilo = offset[foxtrot];
    kilo = backup.bind(entity)(kilo);
    kilo = kilo.radii;
    kilo = kilo.xl;
    kilo = kilo + sizing;
    romeo['borderRadius'] = kilo;
    tango['appIconMask'] = romeo;
    romeo = {'width': 72, 'height': 72};
    kilo = offset[foxtrot];
    kilo = backup.bind(entity)(kilo);
    kilo = kilo.radii;
    kilo = kilo.xl;
    romeo['borderRadius'] = kilo;
    tango['appIcon'] = romeo;
    romeo = {};
    foxtrot = offset[foxtrot];
    foxtrot = backup.bind(entity)(foxtrot);
    foxtrot = foxtrot.colors;
    foxtrot = foxtrot.BACKGROUND_ACCENT;
    romeo['backgroundColor'] = foxtrot;
    tango['loadingIcon'] = romeo;
    romeo = {'textAlign': 'center', 'pointerEvents': 'none', 'flexGrow': 1, 'marginHorizontal': 8};
    tango['appSmallName'] = romeo;
    romeo = {};
    backup = {};
    foxtrot = '180deg';
    backup['rotate'] = foxtrot;
    foxtrot = new Array(1);
    foxtrot[0] = backup;
    romeo['transform'] = foxtrot;
    tango['icon'] = romeo;
    romeo = {'backgroundColor': 'black', 'position': 'absolute', 'top': 0, 'left': 0, 'right': 0, 'bottom': 0};
    tango['headerBannerOverlay'] = romeo;
    tango = options.bind(yankee)(tango);
    var _closure1_slot9 = tango;
    options = {};
    yankee = "function AppLauncherCommandViewHeaderTsx1(){const{interpolate,scrollOffsetY,TOTAL_SCROLL_RANGE}=this.__closure;return{opacity:interpolate(scrollOffsetY.get(),[0,TOTAL_SCROLL_RANGE],[0,1],'clamp'),transform:[{translateY:interpolate(scrollOffsetY.get(),[0,TOTAL_SCROLL_RANGE],[12,0],'clamp')}]};}";
    options['code'] = yankee;
    var _closure1_slot10 = options;
    options = {};
    yankee = "function AppLauncherCommandViewHeaderTsx2(){const{APP_ICON_SIZE,APP_ICON_BORDER_WIDTH,DEFAULT_CONTENT_PADDING,interpolate,scrollOffsetY,TOTAL_SCROLL_RANGE}=this.__closure;return{transform:[{translateX:-APP_ICON_SIZE/2-APP_ICON_BORDER_WIDTH+DEFAULT_CONTENT_PADDING},{translateY:interpolate(scrollOffsetY.get(),[0,TOTAL_SCROLL_RANGE],[0,-APP_ICON_SIZE/2],'clamp')},{scale:interpolate(scrollOffsetY.get(),[0,TOTAL_SCROLL_RANGE],[1,0],'clamp')}],opacity:interpolate(scrollOffsetY.get(),[0,TOTAL_SCROLL_RANGE],[1,0],'clamp')};}";
    options['code'] = yankee;
    var _closure1_slot11 = options;
    options = {};
    yankee = "function AppLauncherCommandViewHeaderTsx3(){const{interpolate,scrollOffsetY,TOTAL_SCROLL_RANGE}=this.__closure;return{opacity:interpolate(scrollOffsetY.get(),[0,TOTAL_SCROLL_RANGE],[0,0.5],'clamp')};}";
    options['code'] = yankee;
    var _closure1_slot12 = options;
    options = 14;
    options = offset[options];
    offset = verify.bind(entity)(options);
    verify = offset.fileFinishedImporting;
    options = 'modules/app_launcher/native/screens/command_view/AppLauncherCommandViewHeader.tsx';
    options = verify.bind(offset)(options);
    zulu['COLLAPSED_HEADER_HEIGHT'] = golf;
    report = oscar + report;
    zulu['EXPANDED_HEADER_TOTAL_CONSUMED_SPACE_IN_PARENT'] = report;
    zulu['useStyles'] = tango;
    mike = function(argFoo) { // Original name: AppLauncherCommandViewHeader
        _fun119101: for(var _fun119101_ip = 0; ; ) switch(_fun119101_ip) {
 0:
            mike = argFoo;
            kilo = mike.command;
            update = mike.onPressBack;
            sizing = mike.scrollOffsetY;
            var _closure2_slot0 = sizing;
            mike = mike.section;
            var _closure2_slot1 = mike;
            zulu = _closure1_slot9;
            tango = undefined;
            offset = zulu.bind(tango)();
            golf = _closure1_slot3;
            report = golf.useMemo;
            zulu = new Array(1);
            zulu[0] = mike;
            mike = function() {
                _fun119102: for(var _fun119102_ip = 0; ; ) switch(_fun119102_ip) {
 0:
                    zulu = _closure1_slot0;
                    mike = _closure1_slot2;
                    entity = 7;
                    mike = mike[entity];
                    entity = undefined;
                    zulu = zulu.bind(entity)(mike);
                    mike = zulu.getAppLauncherIconSource;
                    oscar = _closure2_slot1;
                    report = null;
                    report = report == oscar;
                    if(report) { _fun119102_ip = 56; continue _fun119102 }
 47:
                    tango = _closure2_slot1;
                    entity = tango.application;
 56:
                    entity = mike.bind(zulu)(entity);
                    return entity;
                }
            };
            report = report.bind(golf)(mike, zulu);
            mike = _closure1_slot0;
            zulu = _closure1_slot2;
            romeo = 8;
            golf = zulu[romeo];
            verify = mike.bind(tango)(golf);
            options = verify.useAnimatedStyle;
            golf = function() { // Original name: f
                entity = {};
                golf = _closure1_slot0;
                verify = _closure1_slot2;
                tango = 8;
                zulu = verify[tango];
                oscar = undefined;
                foxtrot = golf.bind(oscar)(zulu);
                romeo = foxtrot.interpolate;
                report = _closure2_slot0;
                zulu = report.get;
                output = zulu.bind(report)();
                mike = _closure1_slot8;
                offset = [0];
                offset[1] = mike;
                kilo = [0, 1];
                options = 'clamp';
                result = foxtrot;
                sizing = offset;
                backup = options;
                zulu = result[romeo](output, sizing, kilo, backup, foxtrot);
                entity['opacity'] = zulu;
                zulu = {};
                tango = verify[tango];
                golf = golf.bind(oscar)(tango);
                oscar = golf.interpolate;
                tango = report.get;
                output = tango.bind(report)();
                tango = [0];
                tango[1] = mike;
                kilo = [12, 0];
                result = golf;
                sizing = tango;
                mike = result[oscar](output, sizing, kilo, backup, foxtrot);
                zulu['translateY'] = mike;
                mike = new Array(1);
                mike[0] = zulu;
                entity['transform'] = mike;
                return entity;
            };
            yankee = {};
            foxtrot = zulu[romeo];
            foxtrot = mike.bind(tango)(foxtrot);
            foxtrot = foxtrot.interpolate;
            yankee['interpolate'] = foxtrot;
            yankee['scrollOffsetY'] = sizing;
            backup = _closure1_slot8;
            yankee['TOTAL_SCROLL_RANGE'] = backup;
            golf['__closure'] = yankee;
            yankee = 15596175827193.0;
            golf['__workletHash'] = yankee;
            yankee = _closure1_slot10;
            golf['__initData'] = yankee;
            output = options.bind(verify)(golf);
            golf = zulu[romeo];
            yankee = mike.bind(tango)(golf);
            verify = yankee.useAnimatedStyle;
            options = function() { // Original name: E
                entity = {};
                zulu = {};
                report = _closure1_slot5;
                tango = -40;
                tango = tango + report;
                zulu['translateX'] = tango;
                verify = new Array(3);
                verify[0] = zulu;
                offset = {};
                oscar = _closure1_slot0;
                options = _closure1_slot2;
                zulu = 8;
                tango = options[zulu];
                report = undefined;
                kilo = oscar.bind(report)(tango);
                backup = kilo.interpolate;
                tango = _closure2_slot0;
                golf = tango.get;
                echo = golf.bind(tango)();
                mike = _closure1_slot8;
                romeo = [0];
                romeo[1] = mike;
                yankee = [0];
                golf = -36;
                yankee[1] = golf;
                golf = 'clamp';
                update = kilo;
                result = romeo;
                output = yankee;
                sizing = golf;
                yankee = update[backup](echo, result, output, sizing, kilo);
                offset['translateY'] = yankee;
                verify[1] = offset;
                offset = {};
                yankee = options[zulu];
                kilo = oscar.bind(report)(yankee);
                backup = kilo.interpolate;
                yankee = tango.get;
                echo = yankee.bind(tango)();
                romeo = [0];
                romeo[1] = mike;
                output = [1, 0];
                update = kilo;
                result = romeo;
                yankee = update[backup](echo, result, output, sizing, kilo);
                offset['scale'] = yankee;
                verify[2] = offset;
                entity['transform'] = verify;
                zulu = options[zulu];
                oscar = oscar.bind(report)(zulu);
                report = oscar.interpolate;
                zulu = tango.get;
                echo = zulu.bind(tango)();
                zulu = [0];
                zulu[1] = mike;
                output = [1, 0];
                update = oscar;
                result = zulu;
                mike = update[report](echo, result, output, sizing, kilo);
                entity['opacity'] = mike;
                return entity;
            };
            foxtrot = {'APP_ICON_SIZE': 72, 'APP_ICON_BORDER_WIDTH': 4};
            golf = 4;
            result = _closure1_slot5;
            foxtrot['DEFAULT_CONTENT_PADDING'] = result;
            result = zulu[romeo];
            result = mike.bind(tango)(result);
            result = result.interpolate;
            foxtrot['interpolate'] = result;
            foxtrot['scrollOffsetY'] = sizing;
            foxtrot['TOTAL_SCROLL_RANGE'] = backup;
            options['__closure'] = foxtrot;
            foxtrot = 13563524587234.0;
            options['__workletHash'] = foxtrot;
            foxtrot = _closure1_slot11;
            options['__initData'] = foxtrot;
            yankee = verify.bind(yankee)(options);
            options = zulu[romeo];
            verify = mike.bind(tango)(options);
            options = verify.useAnimatedStyle;
            entity = function() { // Original name: N
                entity = {};
                report = _closure1_slot0;
                tango = _closure1_slot2;
                zulu = 8;
                tango = tango[zulu];
                zulu = undefined;
                golf = report.bind(zulu)(tango);
                oscar = golf.interpolate;
                tango = _closure2_slot0;
                zulu = tango.get;
                yankee = zulu.bind(tango)();
                mike = _closure1_slot8;
                tango = [0];
                tango[1] = mike;
                verify = [0, 0.5];
                options = 'clamp';
                romeo = golf;
                offset = tango;
                mike = romeo[oscar](yankee, offset, verify, options, golf);
                entity['opacity'] = mike;
                return entity;
            };
            foxtrot = {};
            result = zulu[romeo];
            result = mike.bind(tango)(result);
            result = result.interpolate;
            foxtrot['interpolate'] = result;
            foxtrot['scrollOffsetY'] = sizing;
            foxtrot['TOTAL_SCROLL_RANGE'] = backup;
            entity['__closure'] = foxtrot;
            foxtrot = 2637023147700.0;
            entity['__workletHash'] = foxtrot;
            foxtrot = _closure1_slot12;
            entity['__initData'] = foxtrot;
            control = options.bind(verify)(entity);
            entity = 9;
            entity = zulu[entity];
            verify = mike.bind(tango)(entity);
            options = verify.useToken;
            mike = _closure1_slot1;
            result = 6;
            entity = zulu[result];
            entity = mike.bind(tango)(entity);
            entity = entity.colors;
            entity = entity.BG_BASE_PRIMARY;
            options = options.bind(verify)(entity);
            entity = 10;
            entity = zulu[entity];
            zulu = mike.bind(tango)(entity);
            verify = 'number';
            entity = typeof report;
            mike = report;
            if(!(verify !== entity)) { _fun119101_ip = 487; continue _fun119101 }
 467:
            entity = null;
            verify = entity == report;
            entity = undefined;
            if(verify) { _fun119101_ip = 484; continue _fun119101 }
 478:
            entity = report.uri;
 484:
            mike = entity;
 487:
            backup = null;
            verify = backup != options;
            entity = '';
            if(!verify) { _fun119101_ip = 503; continue _fun119101 }
 500:
            entity = options;
 503:
            foxtrot = zulu.bind(tango)(mike, entity);
            if(!(backup == report)) { _fun119101_ip = 559; continue _fun119101 }
 513:
            zulu = _closure1_slot6;
            mike = _closure1_slot4;
            entity = {};
            verify = offset.appIcon;
            options = new Array(2);
            options[0] = verify;
            verify = offset.loadingIcon;
            options[1] = verify;
            entity['style'] = options;
            verify = zulu.bind(tango)(mike, entity);
            _fun119101_ip = 605; continue _fun119101;
 559:
            zulu = _closure1_slot6;
            mike = _closure1_slot1;
            options = _closure1_slot2;
            entity = 11;
            entity = options[entity];
            mike = mike.bind(tango)(entity);
            entity = {};
            options = offset.appIcon;
            entity['style'] = options;
            entity['source'] = report;
            verify = zulu.bind(tango)(mike, entity);
 605:
            zulu = _closure1_slot7;
            mike = _closure1_slot4;
            entity = {};
            options = offset.headerContainer;
            report = new Array(2);
            report[0] = options;
            if(!(backup != kilo)) { _fun119101_ip = 641; continue _fun119101 }
 633:
            options = {};
            options['backgroundColor'] = foxtrot;
            _fun119101_ip = 647; continue _fun119101;
 641:
            options = offset.loadingHeaderContainer;
 647:
            report[1] = options;
            entity['style'] = report;
            foxtrot = _closure1_slot6;
            echo = _closure1_slot1;
            sizing = _closure1_slot2;
            report = sizing[romeo];
            report = echo.bind(tango)(report);
            options = report.View;
            report = {};
            vacuum = offset.headerBannerOverlay;
            source = new Array(2);
            source[0] = vacuum;
            source[1] = control;
            report['style'] = source;
            options = foxtrot.bind(tango)(options, report);
            report = new Array(5);
            report[0] = options;
            golf = sizing[golf];
            options = echo.bind(tango)(golf);
            golf = {};
            source = offset.backButton;
            golf['style'] = source;
            golf['onPress'] = update;
            result = sizing[result];
            result = echo.bind(tango)(result);
            result = result.colors;
            result = result.WHITE;
            golf['iconColor'] = result;
            golf = foxtrot.bind(tango)(options, golf);
            report[1] = golf;
            options = _closure1_slot0;
            golf = 12;
            golf = sizing[golf];
            golf = options.bind(tango)(golf);
            options = golf.Text;
            golf = {'lineClamp': 1, 'animated': true, 'style': null, 'variant': 'heading-lg/bold', 'color': 'white'};
            result = offset.appSmallName;
            sizing = new Array(2);
            sizing[0] = result;
            sizing[1] = output;
            golf['style'] = sizing;
            sizing = backup == kilo;
            backup = undefined;
            if(sizing) { _fun119101_ip = 852; continue _fun119101 }
 847:
            backup = kilo.displayName;
 852:
            golf['children'] = backup;
            golf = foxtrot.bind(tango)(options, golf);
            report[2] = golf;
            options = _closure1_slot6;
            golf = _closure1_slot1;
            oscar = _closure1_slot2;
            foxtrot = 13;
            foxtrot = oscar[foxtrot];
            backup = golf.bind(tango)(foxtrot);
            foxtrot = {};
            kilo = 32;
            foxtrot['size'] = kilo;
            foxtrot = options.bind(tango)(backup, foxtrot);
            report[3] = foxtrot;
            oscar = oscar[romeo];
            oscar = golf.bind(tango)(oscar);
            golf = oscar.View;
            oscar = {};
            romeo = offset.appIconMask;
            offset = new Array(2);
            offset[0] = romeo;
            offset[1] = yankee;
            oscar['style'] = offset;
            oscar['children'] = verify;
            oscar = options.bind(tango)(golf, oscar);
            report[4] = oscar;
            entity['children'] = report;
            entity = zulu.bind(tango)(mike, entity);
            return entity;
        }
    };
    zulu['AppLauncherCommandViewHeader'] = mike;
    return entity;
})();