// app/modules/app_launcher/native/screens/command_view/OptionalCommandOptionList.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    report = argBar;
    yankee = argBaz;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    var _closure1_slot1 = yankee;
    var _closure1_slot2 = oscard;
    entity = function(argFoo) { // Original name: OptionList
        entity = argFoo;
        golfie = entity.options;
        var _closure2_slot0 = golfie;
        michal = entity.onSelectOption;
        var _closure2_slot1 = michal;
        option = entity.style;
        michal = _closure1_slot5;
        tangon = undefined;
        oscard = michal.bind(tangon)();
        var _closure2_slot2 = oscard;
        zuuluu = _closure1_slot4;
        michal = _closure1_slot3;
        entity = {};
        verify = oscard.container;
        oscard = new Array(2);
        oscard[0] = verify;
        oscard[1] = option;
        entity['style'] = oscard;
        oscard = false;
        entity['collapsable'] = oscard;
        oscard = golfie.map;
        report = function(argFoo, argBar) {
            entity = argFoo;
            var _closure3_slot0 = entity;
            report = _closure1_slot4;
            yankee = _closure1_slot0;
            romeon = _closure1_slot2;
            michal = 5;
            michal = romeon[michal];
            tangon = undefined;
            michal = yankee.bind(tangon)(michal);
            zuuluu = michal.TableRow;
            michal = {};
            golfie = function() { // Original name: onPress
                zuuluu = _closure2_slot1;
                michal = _closure3_slot0;
                entity = undefined;
                entity = zuuluu.bind(entity)(michal);
                return entity;
            };
            michal['onPress'] = golfie;
            golfie = false;
            michal['start'] = golfie;
            golfie = _closure2_slot0;
            option = golfie.length;
            golfie = 1;
            option = option - golfie;
            golfie = argBar;
            golfie = golfie === option;
            michal['end'] = golfie;
            golfie = entity.displayName;
            michal['label'] = golfie;
            golfie = entity.displayDescription;
            michal['subLabel'] = golfie;
            option = _closure1_slot4;
            golfie = _closure1_slot1;
            offset = 6;
            oscard = romeon[offset];
            golfie = golfie.bind(tangon)(oscard);
            oscard = {};
            backup = true;
            oscard['shrink'] = backup;
            foxtra = _closure2_slot2;
            backup = foxtra.addButton;
            oscard['style'] = backup;
            backup = 7;
            kiloes = romeon[backup];
            kiloes = yankee.bind(tangon)(kiloes);
            sizing = kiloes.intl;
            kiloes = sizing.string;
            backup = romeon[backup];
            backup = yankee.bind(tangon)(backup);
            backup = backup.t;
            backup = backup.OYkgVl;
            backup = kiloes.bind(sizing)(backup);
            oscard['text'] = backup;
            foxtra = foxtra.addButtonText;
            oscard['textStyle'] = foxtra;
            offset = romeon[offset];
            offset = yankee.bind(tangon)(offset);
            offset = offset.ButtonSizes;
            offset = offset.SMALL;
            oscard['size'] = offset;
            verify = function() { // Original name: onPress
                zuuluu = _closure2_slot1;
                michal = _closure3_slot0;
                entity = undefined;
                entity = zuuluu.bind(entity)(michal);
                return entity;
            };
            oscard['onPress'] = verify;
            oscard = option.bind(tangon)(golfie, oscard);
            michal['trailing'] = oscard;
            entity = entity.name;
            entity = report.bind(tangon)(zuuluu, michal, entity);
            return entity;
        };
        report = oscard.bind(golfie)(report);
        entity['children'] = report;
        entity = zuuluu.bind(tangon)(michal, entity);
        return entity;
    };
    var _closure1_slot6 = entity;
    entity = global;
    option = entity.Object;
    golfie = option.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(option)(zuuluu, entity, tangon);
    entity = 0;
    golfie = oscard[entity];
    tangon = argCor;
    entity = undefined;
    tangon = tangon.bind(entity)(golfie);
    tangon = 1;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.View;
    var _closure1_slot3 = tangon;
    tangon = 2;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.jsx;
    var _closure1_slot4 = tangon;
    tangon = 3;
    tangon = oscard[tangon];
    option = report.bind(entity)(tangon);
    golfie = option.createStyles;
    tangon = {};
    verify = {'overflow': 'hidden', 'borderWidth': 1};
    offset = 4;
    romeon = oscard[offset];
    romeon = yankee.bind(entity)(romeon);
    romeon = romeon.colors;
    romeon = romeon.BORDER_SUBTLE;
    verify['borderColor'] = romeon;
    romeon = oscard[offset];
    romeon = yankee.bind(entity)(romeon);
    romeon = romeon.colors;
    romeon = romeon.BG_SURFACE_RAISED;
    verify['backgroundColor'] = romeon;
    romeon = oscard[offset];
    romeon = yankee.bind(entity)(romeon);
    romeon = romeon.radii;
    romeon = romeon.lg;
    verify['borderRadius'] = romeon;
    romeon = oscard[offset];
    romeon = yankee.bind(entity)(romeon);
    romeon = romeon.shadows;
    backup = romeon.SHADOW_BORDER;
    kiloes = verify;
    romeon = copyDataProperties(kiloes, backup);
    tangon['container'] = verify;
    verify = {};
    romeon = oscard[offset];
    romeon = yankee.bind(entity)(romeon);
    romeon = romeon.radii;
    romeon = romeon.round;
    verify['borderRadius'] = romeon;
    romeon = 48;
    verify['minWidth'] = romeon;
    romeon = oscard[offset];
    romeon = yankee.bind(entity)(romeon);
    romeon = romeon.colors;
    romeon = romeon.REDESIGN_BUTTON_TERTIARY_BACKGROUND;
    verify['backgroundColor'] = romeon;
    tangon['addButton'] = verify;
    verify = {};
    offset = oscard[offset];
    offset = yankee.bind(entity)(offset);
    offset = offset.colors;
    offset = offset.REDESIGN_BUTTON_TERTIARY_TEXT;
    verify['color'] = offset;
    tangon['addButtonText'] = verify;
    tangon = golfie.bind(option)(tangon);
    var _closure1_slot5 = tangon;
    tangon = 8;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/app_launcher/native/screens/command_view/OptionalCommandOptionList.tsx';
    tangon = report.bind(oscard)(tangon);
    michal = function(argFoo) { // Original name: OptionalCommandOptionList
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            entity = argFoo;
            oscard = entity.options;
            michal = entity.onSelectOption;
            golfie = entity.style;
            zuuluu = oscard.length;
            entity = 0;
            zuuluu = zuuluu > entity;
            entity = null;
            if(!zuuluu) { _fun00002_ip = 69; continue _fun00001 }
 35:
            report = _closure1_slot4;
            tangon = _closure1_slot6;
            zuuluu = {};
            zuuluu['style'] = golfie;
            zuuluu['options'] = oscard;
            zuuluu['onSelectOption'] = michal;
            michal = undefined;
            entity = report.bind(michal)(tangon, zuuluu);
 69:
            return entity;
        }
    };
    zuuluu['default'] = michal;
    return entity;
})();