// app/modules/app_launcher/native/screens/command_view/OptionalCommandOptionList.tsx
export default (function(argFoo, argBar, argBaz, argCorge, _, argFred, argPlugh) {
    report = argBar;
    yankee = argBaz;
    zulu = argFred;
    oscar = argPlugh;
    var _closure1_slot0 = report;
    var _closure1_slot1 = yankee;
    var _closure1_slot2 = oscar;
    entity = function(argFoo) { // Original name: OptionList
        entity = argFoo;
        golf = entity.options;
        var _closure2_slot0 = golf;
        mike = entity.onSelectOption;
        var _closure2_slot1 = mike;
        options = entity.style;
        mike = _closure1_slot5;
        tango = undefined;
        oscar = mike.bind(tango)();
        var _closure2_slot2 = oscar;
        zulu = _closure1_slot4;
        mike = _closure1_slot3;
        entity = {};
        verify = oscar.container;
        oscar = new Array(2);
        oscar[0] = verify;
        oscar[1] = options;
        entity['style'] = oscar;
        oscar = false;
        entity['collapsable'] = oscar;
        oscar = golf.map;
        report = function(argFoo, argBar) {
            entity = argFoo;
            var _closure3_slot0 = entity;
            report = _closure1_slot4;
            yankee = _closure1_slot0;
            romeo = _closure1_slot2;
            mike = 5;
            mike = romeo[mike];
            tango = undefined;
            mike = yankee.bind(tango)(mike);
            zulu = mike.TableRow;
            mike = {};
            golf = function() { // Original name: onPress
                zulu = _closure2_slot1;
                mike = _closure3_slot0;
                entity = undefined;
                entity = zulu.bind(entity)(mike);
                return entity;
            };
            mike['onPress'] = golf;
            golf = false;
            mike['start'] = golf;
            golf = _closure2_slot0;
            options = golf.length;
            golf = 1;
            options = options - golf;
            golf = argBar;
            golf = golf === options;
            mike['end'] = golf;
            golf = entity.displayName;
            mike['label'] = golf;
            golf = entity.displayDescription;
            mike['subLabel'] = golf;
            options = _closure1_slot4;
            golf = _closure1_slot1;
            offset = 6;
            oscar = romeo[offset];
            golf = golf.bind(tango)(oscar);
            oscar = {};
            backup = true;
            oscar['shrink'] = backup;
            foxtrot = _closure2_slot2;
            backup = foxtrot.addButton;
            oscar['style'] = backup;
            backup = 7;
            kilo = romeo[backup];
            kilo = yankee.bind(tango)(kilo);
            sizing = kilo.intl;
            kilo = sizing.string;
            backup = romeo[backup];
            backup = yankee.bind(tango)(backup);
            backup = backup.t;
            backup = backup.OYkgVl;
            backup = kilo.bind(sizing)(backup);
            oscar['text'] = backup;
            foxtrot = foxtrot.addButtonText;
            oscar['textStyle'] = foxtrot;
            offset = romeo[offset];
            offset = yankee.bind(tango)(offset);
            offset = offset.ButtonSizes;
            offset = offset.SMALL;
            oscar['size'] = offset;
            verify = function() { // Original name: onPress
                zulu = _closure2_slot1;
                mike = _closure3_slot0;
                entity = undefined;
                entity = zulu.bind(entity)(mike);
                return entity;
            };
            oscar['onPress'] = verify;
            oscar = options.bind(tango)(golf, oscar);
            mike['trailing'] = oscar;
            entity = entity.name;
            entity = report.bind(tango)(zulu, mike, entity);
            return entity;
        };
        report = oscar.bind(golf)(report);
        entity['children'] = report;
        entity = zulu.bind(tango)(mike, entity);
        return entity;
    };
    var _closure1_slot6 = entity;
    entity = global;
    options = entity.Object;
    golf = options.defineProperty;
    tango = {};
    entity = true;
    tango['value'] = entity;
    entity = '__esModule';
    entity = golf.bind(options)(zulu, entity, tango);
    entity = 0;
    golf = oscar[entity];
    tango = argCorge;
    entity = undefined;
    tango = tango.bind(entity)(golf);
    tango = 1;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.View;
    var _closure1_slot3 = tango;
    tango = 2;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.jsx;
    var _closure1_slot4 = tango;
    tango = 3;
    tango = oscar[tango];
    options = report.bind(entity)(tango);
    golf = options.createStyles;
    tango = {};
    verify = {'overflow': 'hidden', 'borderWidth': 1};
    offset = 4;
    romeo = oscar[offset];
    romeo = yankee.bind(entity)(romeo);
    romeo = romeo.colors;
    romeo = romeo.BORDER_SUBTLE;
    verify['borderColor'] = romeo;
    romeo = oscar[offset];
    romeo = yankee.bind(entity)(romeo);
    romeo = romeo.colors;
    romeo = romeo.BG_SURFACE_RAISED;
    verify['backgroundColor'] = romeo;
    romeo = oscar[offset];
    romeo = yankee.bind(entity)(romeo);
    romeo = romeo.radii;
    romeo = romeo.lg;
    verify['borderRadius'] = romeo;
    romeo = oscar[offset];
    romeo = yankee.bind(entity)(romeo);
    romeo = romeo.shadows;
    backup = romeo.SHADOW_BORDER;
    kilo = verify;
    romeo = copyDataProperties(kilo, backup);
    tango['container'] = verify;
    verify = {};
    romeo = oscar[offset];
    romeo = yankee.bind(entity)(romeo);
    romeo = romeo.radii;
    romeo = romeo.round;
    verify['borderRadius'] = romeo;
    romeo = 48;
    verify['minWidth'] = romeo;
    romeo = oscar[offset];
    romeo = yankee.bind(entity)(romeo);
    romeo = romeo.colors;
    romeo = romeo.REDESIGN_BUTTON_TERTIARY_BACKGROUND;
    verify['backgroundColor'] = romeo;
    tango['addButton'] = verify;
    verify = {};
    offset = oscar[offset];
    offset = yankee.bind(entity)(offset);
    offset = offset.colors;
    offset = offset.REDESIGN_BUTTON_TERTIARY_TEXT;
    verify['color'] = offset;
    tango['addButtonText'] = verify;
    tango = golf.bind(options)(tango);
    var _closure1_slot5 = tango;
    tango = 8;
    tango = oscar[tango];
    oscar = report.bind(entity)(tango);
    report = oscar.fileFinishedImporting;
    tango = 'modules/app_launcher/native/screens/command_view/OptionalCommandOptionList.tsx';
    tango = report.bind(oscar)(tango);
    mike = function(argFoo) { // Original name: OptionalCommandOptionList
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            entity = argFoo;
            oscar = entity.options;
            mike = entity.onSelectOption;
            golf = entity.style;
            zulu = oscar.length;
            entity = 0;
            zulu = zulu > entity;
            entity = null;
            if(!zulu) { _fun00002_ip = 69; continue _fun00001 }
 35:
            report = _closure1_slot4;
            tango = _closure1_slot6;
            zulu = {};
            zulu['style'] = golf;
            zulu['options'] = oscar;
            zulu['onSelectOption'] = mike;
            mike = undefined;
            entity = report.bind(mike)(tango, zulu);
 69:
            return entity;
        }
    };
    zulu['default'] = mike;
    return entity;
})();