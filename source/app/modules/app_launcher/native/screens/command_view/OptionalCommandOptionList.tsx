// app/modules/app_launcher/native/screens/command_view/OptionalCommandOptionList.tsx
export default (function(global, require, metroImportDefault, metroImportAll, moduleObject, exports, dependencyMap) {
    var5 = require;
    var11 = metroImportDefault;
    var3 = exports;
    var6 = dependencyMap;
    var _closure1_slot0 = var5;
    var _closure1_slot1 = var11;
    var _closure1_slot2 = var6;
    var1 = function OptionList(arg1) {
        var1 = arg1;
        var7 = var1.options;
        var _closure2_slot0 = var7;
        var2 = var1.onSelectOption;
        var _closure2_slot1 = var2;
        var8 = var1.style;
        var2 = _closure1_slot5;
        var4 = undefined;
        var6 = var2.bind(var4)();
        var _closure2_slot2 = var6;
        var3 = _closure1_slot4;
        var2 = _closure1_slot3;
        var1 = {};
        var9 = var6.container;
        var6 = new Array(2);
        var6[0] = var9;
        var6[1] = var8;
        var1['style'] = var6;
        var6 = false;
        var1['collapsable'] = var6;
        var6 = var7.map;
        var5 = function(arg1, arg2) {
            var1 = arg1;
            var _closure3_slot0 = var1;
            var5 = _closure1_slot4;
            var11 = _closure1_slot0;
            var12 = _closure1_slot2;
            var2 = 5;
            var2 = var12[var2];
            var4 = undefined;
            var2 = var11.bind(var4)(var2);
            var3 = var2.TableRow;
            var2 = {};
            var7 = function onPress() {
                var3 = _closure2_slot1;
                var2 = _closure3_slot0;
                var1 = undefined;
                var1 = var3.bind(var1)(var2);
                return var1;
            };
            var2['onPress'] = var7;
            var7 = false;
            var2['start'] = var7;
            var7 = _closure2_slot0;
            var8 = var7.length;
            var7 = 1;
            var8 = var8 - var7;
            var7 = arg2;
            var7 = var7 === var8;
            var2['end'] = var7;
            var7 = var1.displayName;
            var2['label'] = var7;
            var7 = var1.displayDescription;
            var2['subLabel'] = var7;
            var8 = _closure1_slot4;
            var7 = _closure1_slot1;
            var10 = 6;
            var6 = var12[var10];
            var7 = var7.bind(var4)(var6);
            var6 = {};
            var14 = true;
            var6['shrink'] = var14;
            var13 = _closure2_slot2;
            var14 = var13.addButton;
            var6['style'] = var14;
            var14 = 7;
            var15 = var12[var14];
            var15 = var11.bind(var4)(var15);
            var16 = var15.intl;
            var15 = var16.string;
            var14 = var12[var14];
            var14 = var11.bind(var4)(var14);
            var14 = var14.t;
            var14 = var14.OYkgVl;
            var14 = var15.bind(var16)(var14);
            var6['text'] = var14;
            var13 = var13.addButtonText;
            var6['textStyle'] = var13;
            var10 = var12[var10];
            var10 = var11.bind(var4)(var10);
            var10 = var10.ButtonSizes;
            var10 = var10.SMALL;
            var6['size'] = var10;
            var9 = function onPress() {
                var3 = _closure2_slot1;
                var2 = _closure3_slot0;
                var1 = undefined;
                var1 = var3.bind(var1)(var2);
                return var1;
            };
            var6['onPress'] = var9;
            var6 = var8.bind(var4)(var7, var6);
            var2['trailing'] = var6;
            var1 = var1.name;
            var1 = var5.bind(var4)(var3, var2, var1);
            return var1;
        };
        var5 = var6.bind(var7)(var5);
        var1['children'] = var5;
        var1 = var3.bind(var4)(var2, var1);
        return var1;
    };
    var _closure1_slot6 = var1;
    var1 = global;
    var8 = var1.Object;
    var7 = var8.defineProperty;
    var4 = {};
    var1 = true;
    var4['value'] = var1;
    var1 = '__esModule';
    var1 = var7.bind(var8)(var3, var1, var4);
    var1 = 0;
    var7 = var6[var1];
    var4 = metroImportAll;
    var1 = undefined;
    var4 = var4.bind(var1)(var7);
    var4 = 1;
    var4 = var6[var4];
    var4 = var5.bind(var1)(var4);
    var4 = var4.View;
    var _closure1_slot3 = var4;
    var4 = 2;
    var4 = var6[var4];
    var4 = var5.bind(var1)(var4);
    var4 = var4.jsx;
    var _closure1_slot4 = var4;
    var4 = 3;
    var4 = var6[var4];
    var8 = var5.bind(var1)(var4);
    var7 = var8.createStyles;
    var4 = {};
    var9 = {'overflow': 'hidden', 'borderWidth': 1};
    var10 = 4;
    var12 = var6[var10];
    var12 = var11.bind(var1)(var12);
    var12 = var12.colors;
    var12 = var12.BORDER_SUBTLE;
    var9['borderColor'] = var12;
    var12 = var6[var10];
    var12 = var11.bind(var1)(var12);
    var12 = var12.colors;
    var12 = var12.BG_SURFACE_RAISED;
    var9['backgroundColor'] = var12;
    var12 = var6[var10];
    var12 = var11.bind(var1)(var12);
    var12 = var12.radii;
    var12 = var12.lg;
    var9['borderRadius'] = var12;
    var12 = var6[var10];
    var12 = var11.bind(var1)(var12);
    var12 = var12.shadows;
    var14 = var12.SHADOW_BORDER;
    var15 = var9;
    var12 = copyDataProperties(var15, var14);
    var4['container'] = var9;
    var9 = {};
    var12 = var6[var10];
    var12 = var11.bind(var1)(var12);
    var12 = var12.radii;
    var12 = var12.round;
    var9['borderRadius'] = var12;
    var12 = 48;
    var9['minWidth'] = var12;
    var12 = var6[var10];
    var12 = var11.bind(var1)(var12);
    var12 = var12.colors;
    var12 = var12.REDESIGN_BUTTON_TERTIARY_BACKGROUND;
    var9['backgroundColor'] = var12;
    var4['addButton'] = var9;
    var9 = {};
    var10 = var6[var10];
    var10 = var11.bind(var1)(var10);
    var10 = var10.colors;
    var10 = var10.REDESIGN_BUTTON_TERTIARY_TEXT;
    var9['color'] = var10;
    var4['addButtonText'] = var9;
    var4 = var7.bind(var8)(var4);
    var _closure1_slot5 = var4;
    var4 = 8;
    var4 = var6[var4];
    var6 = var5.bind(var1)(var4);
    var5 = var6.fileFinishedImporting;
    var4 = 'modules/app_launcher/native/screens/command_view/OptionalCommandOptionList.tsx';
    var4 = var5.bind(var6)(var4);
    var2 = function OptionalCommandOptionList(arg1) {
        _fun0001: for(var _fun0001_ip = 0; ; ) switch(_fun0001_ip) {
case 0:
            var1 = arg1;
            var6 = var1.options;
            var2 = var1.onSelectOption;
            var7 = var1.style;
            var3 = var6.length;
            var1 = 0;
            var3 = var3 > var1;
            var1 = null;
            if(!var3) { _fun0001_ip = 2; continue _fun0001 }
case 3:
            var5 = _closure1_slot4;
            var4 = _closure1_slot6;
            var3 = {};
            var3['style'] = var7;
            var3['options'] = var6;
            var3['onSelectOption'] = var2;
            var2 = undefined;
            var1 = var5.bind(var2)(var4, var3);
case 2:
            return var1;
        }
    };
    var3['default'] = var2;
    return var1;
})();