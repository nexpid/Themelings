// app/modules/app_launcher/native/screens/home/NoPermsState.tsx
export default (function(_, argBar, argBaz, argCor, __, argFre, argPlu) {
    report = argBar;
    romeon = argBaz;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    var _closure1_slot1 = romeon;
    var _closure1_slot2 = oscard;
    entity = global;
    option = entity.Object;
    golfie = option.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(option)(zuuluu, entity, tangon);
    entity = 0;
    golfie = oscard[entity];
    tangon = argCor;
    entity = undefined;
    tangon = tangon.bind(entity)(golfie);
    offset = 1;
    tangon = oscard[offset];
    tangon = report.bind(entity)(tangon);
    golfie = tangon.View;
    var _closure1_slot3 = golfie;
    tangon = tangon.Image;
    var _closure1_slot4 = tangon;
    tangon = 2;
    golfie = oscard[tangon];
    golfie = report.bind(entity)(golfie);
    golfie = golfie.jsx;
    var _closure1_slot5 = golfie;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.jsxs;
    var _closure1_slot6 = tangon;
    tangon = 3;
    tangon = oscard[tangon];
    option = report.bind(entity)(tangon);
    golfie = option.createStyles;
    tangon = {};
    verify = {'paddingVertical': 16, 'paddingHorizontal': 24, 'gap': 12, 'backgroundColor': null, 'borderRadius': null, 'alignItems': 'center', 'justifyContent': 'flex-start', 'display': 'flex', 'flexDirection': 'row'};
    yankee = 4;
    foxtra = oscard[yankee];
    foxtra = romeon.bind(entity)(foxtra);
    foxtra = foxtra.colors;
    foxtra = foxtra.BG_SURFACE_RAISED;
    verify['backgroundColor'] = foxtra;
    yankee = oscard[yankee];
    yankee = romeon.bind(entity)(yankee);
    yankee = yankee.radii;
    yankee = yankee.lg;
    verify['borderRadius'] = yankee;
    tangon['container'] = verify;
    verify = {};
    verify['flexShrink'] = offset;
    tangon['textContainer'] = verify;
    verify = {'width': 64, 'height': 64};
    tangon['image'] = verify;
    tangon = golfie.bind(option)(tangon);
    var _closure1_slot7 = tangon;
    tangon = 13;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/app_launcher/native/screens/home/NoPermsState.tsx';
    tangon = report.bind(oscard)(tangon);
    michal = function() { // Original name: EmptyState
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            entity = _closure1_slot7;
            tangon = undefined;
            verify = entity.bind(tangon)();
            michal = _closure1_slot0;
            golfie = _closure1_slot2;
            entity = 5;
            entity = golfie[entity];
            oscard = michal.bind(tangon)(entity);
            zuuluu = oscard.isThemeLight;
            michal = _closure1_slot1;
            entity = 6;
            entity = golfie[entity];
            entity = michal.bind(tangon)(entity);
            entity = entity.bind(tangon)();
            entity = zuuluu.bind(oscard)(entity);
            oscard = _closure1_slot2;
            if(entity) { _fun00002_ip = 80; continue _fun00001 }
 71:
            entity = 8;
            entity = oscard[entity];
            _fun00002_ip = 87; continue _fun00001;
 80:
            zuuluu = 7;
            entity = oscard[zuuluu];
 87:
            golfie = michal.bind(tangon)(entity);
            romeon = _closure1_slot0;
            foxtra = _closure1_slot2;
            entity = 9;
            entity = foxtra[entity];
            zuuluu = romeon.bind(tangon)(entity);
            michal = zuuluu.useLogAppLauncherEmptyStateView;
            entity = 10;
            entity = foxtra[entity];
            entity = romeon.bind(tangon)(entity);
            entity = entity.AppLauncherEmptyStateType;
            entity = entity.HOME_NO_PERMISSIONS;
            entity = michal.bind(zuuluu)(entity);
            zuuluu = _closure1_slot6;
            michal = _closure1_slot3;
            entity = {};
            oscard = verify.container;
            entity['style'] = oscard;
            option = _closure1_slot5;
            oscard = _closure1_slot4;
            report = {};
            offset = verify.image;
            report['style'] = offset;
            offset = 'contain';
            report['resizeMode'] = offset;
            report['source'] = golfie;
            oscard = option.bind(tangon)(oscard, report);
            report = new Array(2);
            report[0] = oscard;
            oscard = 11;
            oscard = foxtra[oscard];
            oscard = romeon.bind(tangon)(oscard);
            golfie = oscard.Text;
            oscard = {'style': null, 'variant': 'text-sm/medium', 'color': 'text-muted'};
            verify = verify.textContainer;
            oscard['style'] = verify;
            verify = 12;
            offset = foxtra[verify];
            offset = romeon.bind(tangon)(offset);
            yankee = offset.intl;
            offset = yankee.string;
            verify = foxtra[verify];
            verify = romeon.bind(tangon)(verify);
            verify = verify.t;
            verify = verify.uDnXXl;
            verify = offset.bind(yankee)(verify);
            oscard['children'] = verify;
            oscard = option.bind(tangon)(golfie, oscard);
            report[1] = oscard;
            entity['children'] = report;
            entity = zuuluu.bind(tangon)(michal, entity);
            return entity;
        }
    };
    zuuluu['default'] = michal;
    return entity;
})();