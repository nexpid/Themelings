// app/modules/app_launcher/native/screens/home/EmptyState.tsx
export default (function(_, argBar, argBaz, argCorge, __, argFred, argPlugh) {
    report = argBar;
    yankee = argBaz;
    zulu = argFred;
    oscar = argPlugh;
    var _closure1_slot0 = report;
    var _closure1_slot1 = yankee;
    var _closure1_slot2 = oscar;
    entity = global;
    options = entity.Object;
    golf = options.defineProperty;
    tango = {};
    entity = true;
    tango['value'] = entity;
    entity = '__esModule';
    entity = golf.bind(options)(zulu, entity, tango);
    entity = 0;
    golf = oscar[entity];
    tango = argCorge;
    entity = undefined;
    tango = tango.bind(entity)(golf);
    tango = 1;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.View;
    var _closure1_slot3 = tango;
    tango = 2;
    golf = oscar[tango];
    golf = report.bind(entity)(golf);
    golf = golf.jsx;
    var _closure1_slot4 = golf;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.jsxs;
    var _closure1_slot5 = tango;
    tango = 3;
    tango = oscar[tango];
    options = report.bind(entity)(tango);
    golf = options.createStyles;
    tango = {};
    verify = {'padding': 16, 'gap': 16, 'backgroundColor': null, 'borderRadius': null, 'alignItems': 'center', 'justifyContent': 'center'};
    offset = 4;
    romeo = oscar[offset];
    romeo = yankee.bind(entity)(romeo);
    romeo = romeo.colors;
    romeo = romeo.BG_BASE_TERTIARY;
    verify['backgroundColor'] = romeo;
    offset = oscar[offset];
    offset = yankee.bind(entity)(offset);
    offset = offset.radii;
    offset = offset.lg;
    verify['borderRadius'] = offset;
    offset = 'center';
    tango['container'] = verify;
    verify = {};
    verify['textAlign'] = offset;
    tango['textContainer'] = verify;
    tango = golf.bind(options)(tango);
    var _closure1_slot6 = tango;
    tango = 10;
    tango = oscar[tango];
    oscar = report.bind(entity)(tango);
    report = oscar.fileFinishedImporting;
    tango = 'modules/app_launcher/native/screens/home/EmptyState.tsx';
    tango = report.bind(oscar)(tango);
    mike = function() { // Original name: EmptyState
        entity = _closure1_slot6;
        tango = undefined;
        verify = entity.bind(tango)();
        romeo = _closure1_slot0;
        foxtrot = _closure1_slot2;
        entity = 5;
        entity = foxtrot[entity];
        zulu = romeo.bind(tango)(entity);
        mike = zulu.useLogAppLauncherEmptyStateView;
        entity = 6;
        entity = foxtrot[entity];
        entity = romeo.bind(tango)(entity);
        entity = entity.AppLauncherEmptyStateType;
        entity = entity.HOME_EMPTY;
        entity = mike.bind(zulu)(entity);
        zulu = _closure1_slot5;
        mike = _closure1_slot3;
        entity = {};
        oscar = verify.container;
        entity['style'] = oscar;
        options = _closure1_slot4;
        oscar = _closure1_slot1;
        report = 7;
        report = foxtrot[report];
        oscar = oscar.bind(tango)(report);
        report = {};
        oscar = options.bind(tango)(oscar, report);
        report = new Array(2);
        report[0] = oscar;
        oscar = 8;
        oscar = foxtrot[oscar];
        oscar = romeo.bind(tango)(oscar);
        golf = oscar.Text;
        oscar = {'style': null, 'variant': 'text-md/semibold', 'color': 'header-secondary'};
        verify = verify.textContainer;
        oscar['style'] = verify;
        verify = 9;
        offset = foxtrot[verify];
        offset = romeo.bind(tango)(offset);
        yankee = offset.intl;
        offset = yankee.string;
        verify = foxtrot[verify];
        verify = romeo.bind(tango)(verify);
        verify = verify.t;
        verify = verify.V7+xhI;
        verify = offset.bind(yankee)(verify);
        oscar['children'] = verify;
        oscar = options.bind(tango)(golf, oscar);
        report[1] = oscar;
        entity['children'] = report;
        entity = zulu.bind(tango)(mike, entity);
        return entity;
    };
    zulu['default'] = mike;
    return entity;
})();