// app/modules/app_launcher/native/screens/home/LearnMoreAboutAppsSection.tsx
export default (function(argFoo, argBar, argBaz, argCorge, _, argFred, argPlugh) {
    report = argBar;
    yankee = argBaz;
    zulu = argFred;
    oscar = argPlugh;
    var _closure1_slot0 = report;
    var _closure1_slot1 = yankee;
    var _closure1_slot2 = oscar;
    entity = global;
    options = entity.Object;
    golf = options.defineProperty;
    tango = {};
    entity = true;
    tango['value'] = entity;
    entity = '__esModule';
    entity = golf.bind(options)(zulu, entity, tango);
    entity = 0;
    golf = oscar[entity];
    tango = argCorge;
    entity = undefined;
    tango = tango.bind(entity)(golf);
    var _closure1_slot3 = tango;
    tango = 1;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    golf = tango.View;
    var _closure1_slot4 = golf;
    tango = tango.Image;
    var _closure1_slot5 = tango;
    tango = 2;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.HelpdeskArticles;
    var _closure1_slot6 = tango;
    tango = 3;
    golf = oscar[tango];
    golf = report.bind(entity)(golf);
    golf = golf.jsx;
    var _closure1_slot7 = golf;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.jsxs;
    var _closure1_slot8 = tango;
    tango = 4;
    tango = oscar[tango];
    options = report.bind(entity)(tango);
    golf = options.createStyles;
    tango = {};
    verify = {};
    offset = 5;
    romeo = oscar[offset];
    romeo = yankee.bind(entity)(romeo);
    romeo = romeo.spacing;
    romeo = romeo.PX_32;
    verify['marginTop'] = romeo;
    romeo = oscar[offset];
    romeo = yankee.bind(entity)(romeo);
    romeo = romeo.radii;
    romeo = romeo.lg;
    verify['borderRadius'] = romeo;
    romeo = 'center';
    verify['alignItems'] = romeo;
    foxtrot = oscar[offset];
    foxtrot = yankee.bind(entity)(foxtrot);
    foxtrot = foxtrot.colors;
    foxtrot = foxtrot.BG_MOD_FAINT;
    verify['backgroundColor'] = foxtrot;
    foxtrot = oscar[offset];
    foxtrot = yankee.bind(entity)(foxtrot);
    foxtrot = foxtrot.spacing;
    foxtrot = foxtrot.PX_64;
    verify['paddingHorizontal'] = foxtrot;
    tango['container'] = verify;
    verify = {};
    verify['textAlign'] = romeo;
    tango['body'] = verify;
    verify = {};
    offset = oscar[offset];
    offset = yankee.bind(entity)(offset);
    offset = offset.spacing;
    offset = offset.PX_16;
    verify['height'] = offset;
    tango['divider'] = verify;
    tango = golf.bind(options)(tango);
    var _closure1_slot9 = tango;
    tango = 14;
    tango = oscar[tango];
    oscar = report.bind(entity)(tango);
    report = oscar.fileFinishedImporting;
    tango = 'modules/app_launcher/native/screens/home/LearnMoreAboutAppsSection.tsx';
    tango = report.bind(oscar)(tango);
    mike = function(argFoo) { // Original name: LearnMoreAboutAppsSection
        entity = argFoo;
        report = entity.visible;
        entity = _closure1_slot9;
        tango = undefined;
        offset = entity.bind(tango)();
        oscar = _closure1_slot3;
        zulu = oscar.useCallback;
        mike = function() {
            oscar = _closure1_slot1;
            golf = _closure1_slot2;
            entity = 6;
            zulu = golf[entity];
            entity = undefined;
            tango = oscar.bind(entity)(zulu);
            zulu = tango.openURL;
            report = 7;
            report = golf[report];
            oscar = oscar.bind(entity)(report);
            report = oscar.getAppsSupportURL;
            mike = _closure1_slot6;
            mike = mike.APPS_LEARN_MORE;
            mike = report.bind(oscar)(mike);
            mike = zulu.bind(tango)(mike);
            return entity;
        };
        entity = new Array(0);
        romeo = zulu.bind(oscar)(mike, entity);
        zulu = _closure1_slot7;
        foxtrot = _closure1_slot1;
        output = _closure1_slot2;
        entity = 8;
        entity = output[entity];
        mike = foxtrot.bind(tango)(entity);
        entity = {'sectionName': null, 'numItems': 1, 'numVisibleItems': 1};
        sizing = _closure1_slot0;
        oscar = 9;
        oscar = output[oscar];
        oscar = sizing.bind(tango)(oscar);
        oscar = oscar.AppLauncherSectionName;
        oscar = oscar.NEW_TO_APPS;
        entity['sectionName'] = oscar;
        entity['viewed'] = report;
        golf = _closure1_slot8;
        oscar = _closure1_slot4;
        report = {};
        verify = offset.container;
        report['style'] = verify;
        verify = _closure1_slot5;
        options = {};
        yankee = 10;
        yankee = output[yankee];
        yankee = foxtrot.bind(tango)(yankee);
        options['source'] = yankee;
        verify = zulu.bind(tango)(verify, options);
        options = new Array(6);
        options[0] = verify;
        verify = 11;
        yankee = output[verify];
        yankee = sizing.bind(tango)(yankee);
        backup = yankee.Text;
        yankee = {'variant': 'heading-lg/bold', 'color': 'header-primary'};
        foxtrot = 12;
        kilo = output[foxtrot];
        kilo = sizing.bind(tango)(kilo);
        echo = kilo.intl;
        result = echo.string;
        kilo = output[foxtrot];
        kilo = sizing.bind(tango)(kilo);
        kilo = kilo.t;
        kilo = kilo.kw8/ER;
        kilo = result.bind(echo)(kilo);
        yankee['children'] = kilo;
        yankee = zulu.bind(tango)(backup, yankee);
        options[1] = yankee;
        verify = output[verify];
        verify = sizing.bind(tango)(verify);
        yankee = verify.Text;
        verify = {'variant': 'text-xs/normal', 'color': 'text-normal'};
        backup = offset.body;
        verify['style'] = backup;
        backup = output[foxtrot];
        backup = sizing.bind(tango)(backup);
        result = backup.intl;
        kilo = result.string;
        backup = output[foxtrot];
        backup = sizing.bind(tango)(backup);
        backup = backup.t;
        backup = backup.GZoV1N;
        backup = kilo.bind(result)(backup);
        verify['children'] = backup;
        verify = zulu.bind(tango)(yankee, verify);
        options[2] = verify;
        verify = {};
        yankee = offset.divider;
        verify['style'] = yankee;
        verify = zulu.bind(tango)(oscar, verify);
        options[3] = verify;
        verify = 13;
        verify = output[verify];
        verify = sizing.bind(tango)(verify);
        yankee = verify.Button;
        verify = {'variant': 'secondary', 'size': 'md'};
        backup = output[foxtrot];
        backup = sizing.bind(tango)(backup);
        result = backup.intl;
        kilo = result.string;
        backup = output[foxtrot];
        backup = sizing.bind(tango)(backup);
        backup = backup.t;
        backup = backup.kw8/ER;
        backup = kilo.bind(result)(backup);
        verify['accessibilityLabel'] = backup;
        backup = output[foxtrot];
        backup = sizing.bind(tango)(backup);
        kilo = backup.intl;
        backup = kilo.string;
        foxtrot = output[foxtrot];
        foxtrot = sizing.bind(tango)(foxtrot);
        foxtrot = foxtrot.t;
        foxtrot = foxtrot.Ye51oa;
        foxtrot = backup.bind(kilo)(foxtrot);
        verify['text'] = foxtrot;
        verify['onPress'] = romeo;
        verify = zulu.bind(tango)(yankee, verify);
        options[4] = verify;
        verify = {};
        offset = offset.divider;
        verify['style'] = offset;
        verify = zulu.bind(tango)(oscar, verify);
        options[5] = verify;
        report['children'] = options;
        report = golf.bind(tango)(oscar, report);
        entity['children'] = report;
        entity = zulu.bind(tango)(mike, entity);
        return entity;
    };
    zulu['default'] = mike;
    return entity;
})();