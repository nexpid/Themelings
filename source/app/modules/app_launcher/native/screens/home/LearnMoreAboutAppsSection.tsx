// app/modules/app_launcher/native/screens/home/LearnMoreAboutAppsSection.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    report = argBar;
    yankee = argBaz;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    var _closure1_slot1 = yankee;
    var _closure1_slot2 = oscard;
    entity = global;
    option = entity.Object;
    golfie = option.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(option)(zuuluu, entity, tangon);
    entity = 0;
    golfie = oscard[entity];
    tangon = argCor;
    entity = undefined;
    tangon = tangon.bind(entity)(golfie);
    var _closure1_slot3 = tangon;
    tangon = 1;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    golfie = tangon.View;
    var _closure1_slot4 = golfie;
    tangon = tangon.Image;
    var _closure1_slot5 = tangon;
    tangon = 2;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.HelpdeskArticles;
    var _closure1_slot6 = tangon;
    tangon = 3;
    golfie = oscard[tangon];
    golfie = report.bind(entity)(golfie);
    golfie = golfie.jsx;
    var _closure1_slot7 = golfie;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.jsxs;
    var _closure1_slot8 = tangon;
    tangon = 4;
    tangon = oscard[tangon];
    option = report.bind(entity)(tangon);
    golfie = option.createStyles;
    tangon = {};
    verify = {};
    offset = 5;
    romeon = oscard[offset];
    romeon = yankee.bind(entity)(romeon);
    romeon = romeon.spacing;
    romeon = romeon.PX_32;
    verify['marginTop'] = romeon;
    romeon = oscard[offset];
    romeon = yankee.bind(entity)(romeon);
    romeon = romeon.radii;
    romeon = romeon.lg;
    verify['borderRadius'] = romeon;
    romeon = 'center';
    verify['alignItems'] = romeon;
    foxtra = oscard[offset];
    foxtra = yankee.bind(entity)(foxtra);
    foxtra = foxtra.colors;
    foxtra = foxtra.BG_MOD_FAINT;
    verify['backgroundColor'] = foxtra;
    foxtra = oscard[offset];
    foxtra = yankee.bind(entity)(foxtra);
    foxtra = foxtra.spacing;
    foxtra = foxtra.PX_64;
    verify['paddingHorizontal'] = foxtra;
    tangon['container'] = verify;
    verify = {};
    verify['textAlign'] = romeon;
    tangon['body'] = verify;
    verify = {};
    offset = oscard[offset];
    offset = yankee.bind(entity)(offset);
    offset = offset.spacing;
    offset = offset.PX_16;
    verify['height'] = offset;
    tangon['divider'] = verify;
    tangon = golfie.bind(option)(tangon);
    var _closure1_slot9 = tangon;
    tangon = 14;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/app_launcher/native/screens/home/LearnMoreAboutAppsSection.tsx';
    tangon = report.bind(oscard)(tangon);
    michal = function(argFoo) { // Original name: LearnMoreAboutAppsSection
        entity = argFoo;
        report = entity.visible;
        entity = _closure1_slot9;
        tangon = undefined;
        offset = entity.bind(tangon)();
        oscard = _closure1_slot3;
        zuuluu = oscard.useCallback;
        michal = function() {
            oscard = _closure1_slot1;
            golfie = _closure1_slot2;
            entity = 6;
            zuuluu = golfie[entity];
            entity = undefined;
            tangon = oscard.bind(entity)(zuuluu);
            zuuluu = tangon.openURL;
            report = 7;
            report = golfie[report];
            oscard = oscard.bind(entity)(report);
            report = oscard.getAppsSupportURL;
            michal = _closure1_slot6;
            michal = michal.APPS_LEARN_MORE;
            michal = report.bind(oscard)(michal);
            michal = zuuluu.bind(tangon)(michal);
            return entity;
        };
        entity = new Array(0);
        romeon = zuuluu.bind(oscard)(michal, entity);
        zuuluu = _closure1_slot7;
        foxtra = _closure1_slot1;
        output = _closure1_slot2;
        entity = 8;
        entity = output[entity];
        michal = foxtra.bind(tangon)(entity);
        entity = {'sectionName': null, 'numItems': 1, 'numVisibleItems': 1};
        sizing = _closure1_slot0;
        oscard = 9;
        oscard = output[oscard];
        oscard = sizing.bind(tangon)(oscard);
        oscard = oscard.AppLauncherSectionName;
        oscard = oscard.NEW_TO_APPS;
        entity['sectionName'] = oscard;
        entity['viewed'] = report;
        golfie = _closure1_slot8;
        oscard = _closure1_slot4;
        report = {};
        verify = offset.container;
        report['style'] = verify;
        verify = _closure1_slot5;
        option = {};
        yankee = 10;
        yankee = output[yankee];
        yankee = foxtra.bind(tangon)(yankee);
        option['source'] = yankee;
        verify = zuuluu.bind(tangon)(verify, option);
        option = new Array(6);
        option[0] = verify;
        verify = 11;
        yankee = output[verify];
        yankee = sizing.bind(tangon)(yankee);
        backup = yankee.Text;
        yankee = {'variant': 'heading-lg/bold', 'color': 'header-primary'};
        foxtra = 12;
        kiloes = output[foxtra];
        kiloes = sizing.bind(tangon)(kiloes);
        echoed = kiloes.intl;
        result = echoed.string;
        kiloes = output[foxtra];
        kiloes = sizing.bind(tangon)(kiloes);
        kiloes = kiloes.t;
        kiloes = kiloes.kw8/ER;
        kiloes = result.bind(echoed)(kiloes);
        yankee['children'] = kiloes;
        yankee = zuuluu.bind(tangon)(backup, yankee);
        option[1] = yankee;
        verify = output[verify];
        verify = sizing.bind(tangon)(verify);
        yankee = verify.Text;
        verify = {'variant': 'text-xs/normal', 'color': 'text-normal'};
        backup = offset.body;
        verify['style'] = backup;
        backup = output[foxtra];
        backup = sizing.bind(tangon)(backup);
        result = backup.intl;
        kiloes = result.string;
        backup = output[foxtra];
        backup = sizing.bind(tangon)(backup);
        backup = backup.t;
        backup = backup.GZoV1N;
        backup = kiloes.bind(result)(backup);
        verify['children'] = backup;
        verify = zuuluu.bind(tangon)(yankee, verify);
        option[2] = verify;
        verify = {};
        yankee = offset.divider;
        verify['style'] = yankee;
        verify = zuuluu.bind(tangon)(oscard, verify);
        option[3] = verify;
        verify = 13;
        verify = output[verify];
        verify = sizing.bind(tangon)(verify);
        yankee = verify.Button;
        verify = {'variant': 'secondary', 'size': 'md'};
        backup = output[foxtra];
        backup = sizing.bind(tangon)(backup);
        result = backup.intl;
        kiloes = result.string;
        backup = output[foxtra];
        backup = sizing.bind(tangon)(backup);
        backup = backup.t;
        backup = backup.kw8/ER;
        backup = kiloes.bind(result)(backup);
        verify['accessibilityLabel'] = backup;
        backup = output[foxtra];
        backup = sizing.bind(tangon)(backup);
        kiloes = backup.intl;
        backup = kiloes.string;
        foxtra = output[foxtra];
        foxtra = sizing.bind(tangon)(foxtra);
        foxtra = foxtra.t;
        foxtra = foxtra.Ye51oa;
        foxtra = backup.bind(kiloes)(foxtra);
        verify['text'] = foxtra;
        verify['onPress'] = romeon;
        verify = zuuluu.bind(tangon)(yankee, verify);
        option[4] = verify;
        verify = {};
        offset = offset.divider;
        verify['style'] = offset;
        verify = zuuluu.bind(tangon)(oscard, verify);
        option[5] = verify;
        report['children'] = option;
        report = golfie.bind(tangon)(oscard, report);
        entity['children'] = report;
        entity = zuuluu.bind(tangon)(michal, entity);
        return entity;
    };
    zuuluu['default'] = michal;
    return entity;
})();