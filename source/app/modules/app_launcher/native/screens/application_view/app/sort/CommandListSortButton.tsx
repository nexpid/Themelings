// app/modules/app_launcher/native/screens/application_view/app/sort/CommandListSortButton.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    report = argBar;
    yankee = argBaz;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    var _closure1_slot1 = yankee;
    var _closure1_slot2 = oscard;
    entity = global;
    option = entity.Object;
    golfie = option.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(option)(zuuluu, entity, tangon);
    entity = 0;
    golfie = oscard[entity];
    tangon = argCor;
    entity = undefined;
    tangon = tangon.bind(entity)(golfie);
    tangon = 1;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.View;
    var _closure1_slot3 = tangon;
    tangon = 2;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.CommandListSortOrder;
    var _closure1_slot4 = tangon;
    tangon = 3;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.ANDROID_FOREGROUND_RIPPLE;
    var _closure1_slot5 = tangon;
    tangon = 4;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    golfie = tangon.jsx;
    var _closure1_slot6 = golfie;
    tangon = tangon.jsxs;
    var _closure1_slot7 = tangon;
    tangon = 5;
    tangon = oscard[tangon];
    option = report.bind(entity)(tangon);
    golfie = option.createStyles;
    tangon = {};
    verify = {};
    offset = 'hidden';
    verify['overflow'] = offset;
    offset = 6;
    romeon = oscard[offset];
    romeon = yankee.bind(entity)(romeon);
    romeon = romeon.radii;
    romeon = romeon.xxl;
    verify['borderRadius'] = romeon;
    tangon['container'] = verify;
    verify = {'gap': 4, 'flexDirection': 'row', 'alignItems': 'center', 'paddingHorizontal': 12, 'paddingVertical': 4};
    offset = oscard[offset];
    offset = yankee.bind(entity)(offset);
    offset = offset.colors;
    offset = offset.BACKGROUND_SECONDARY_ALT;
    verify['backgroundColor'] = offset;
    tangon['button'] = verify;
    tangon = golfie.bind(option)(tangon);
    var _closure1_slot8 = tangon;
    tangon = 14;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/app_launcher/native/screens/application_view/app/sort/CommandListSortButton.tsx';
    tangon = report.bind(oscard)(tangon);
    michal = function(argFoo) { // Original name: CommandListSortButton
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            entity = argFoo;
            michal = entity.sortOrder;
            var _closure2_slot0 = michal;
            entity = entity.onSortOptionPress;
            var _closure2_slot1 = entity;
            entity = _closure1_slot8;
            tangon = undefined;
            option = entity.bind(tangon)();
            entity = _closure1_slot4;
            entity = entity.POPULAR;
            if(!(entity !== michal)) { _fun00002_ip = 125; continue _fun00001 }
 52:
            entity = _closure1_slot4;
            entity = entity.ALPHABETICAL;
            romeon = undefined;
            if(!(entity === michal)) { _fun00002_ip = 180; continue _fun00001 }
 68:
            oscard = _closure1_slot0;
            golfie = _closure1_slot2;
            entity = 7;
            michal = golfie[entity];
            michal = oscard.bind(tangon)(michal);
            zuuluu = michal.intl;
            michal = zuuluu.string;
            entity = golfie[entity];
            entity = oscard.bind(tangon)(entity);
            entity = entity.t;
            entity = entity.m8xstr;
            romeon = michal.bind(zuuluu)(entity);
            _fun00002_ip = 180; continue _fun00001;
 125:
            oscard = _closure1_slot0;
            golfie = _closure1_slot2;
            entity = 7;
            michal = golfie[entity];
            michal = oscard.bind(tangon)(michal);
            zuuluu = michal.intl;
            michal = zuuluu.string;
            entity = golfie[entity];
            entity = oscard.bind(tangon)(entity);
            entity = entity.t;
            entity = entity.SzxiqK;
            romeon = michal.bind(zuuluu)(entity);
 180:
            zuuluu = _closure1_slot6;
            offset = _closure1_slot0;
            foxtra = _closure1_slot2;
            entity = 8;
            entity = foxtra[entity];
            entity = offset.bind(tangon)(entity);
            michal = entity.PressableOpacity;
            entity = {'accessibilityRole': 'button', 'androidRippleConfig': null, 'activeOpacity': 0.8};
            oscard = _closure1_slot5;
            entity['androidRippleConfig'] = oscard;
            oscard = option.container;
            entity['style'] = oscard;
            report = function() { // Original name: onPress
                report = _closure1_slot1;
                michal = _closure1_slot2;
                entity = 9;
                tangon = michal[entity];
                entity = undefined;
                oscard = report.bind(entity)(tangon);
                report = oscard.openLazy;
                tangon = _closure1_slot0;
                zuuluu = 11;
                zuuluu = michal[zuuluu];
                tangon = tangon.bind(entity)(zuuluu);
                zuuluu = 10;
                zuuluu = michal[zuuluu];
                michal = michal.paths;
                tangon = tangon.bind(entity)(zuuluu, michal);
                zuuluu = {};
                golfie = _closure2_slot0;
                zuuluu['sortOrder'] = golfie;
                michal = _closure2_slot1;
                zuuluu['onSortOptionPress'] = michal;
                michal = function() { // Original name: onClose
                    zuuluu = _closure1_slot1;
                    michal = _closure1_slot2;
                    entity = 9;
                    michal = michal[entity];
                    entity = undefined;
                    tangon = zuuluu.bind(entity)(michal);
                    zuuluu = tangon.hideActionSheet;
                    michal = 'CommandListSortActionSheet';
                    michal = zuuluu.bind(tangon)(michal);
                    return entity;
                };
                zuuluu['onClose'] = michal;
                michal = 'CommandListSortActionSheet';
                michal = report.bind(oscard)(tangon, michal, zuuluu);
                return entity;
            };
            entity['onPress'] = report;
            golfie = _closure1_slot7;
            oscard = _closure1_slot3;
            report = {};
            option = option.button;
            report['style'] = option;
            option = 12;
            option = foxtra[option];
            option = offset.bind(tangon)(option);
            verify = option.Text;
            option = {'variant': 'text-sm/medium', 'color': 'text-normal'};
            option['children'] = romeon;
            verify = zuuluu.bind(tangon)(verify, option);
            option = new Array(2);
            option[0] = verify;
            verify = 13;
            verify = foxtra[verify];
            verify = offset.bind(tangon)(verify);
            offset = verify.ChevronSmallDownIcon;
            verify = {};
            romeon = 'xs';
            verify['size'] = romeon;
            romeon = _closure1_slot1;
            yankee = 6;
            yankee = foxtra[yankee];
            yankee = romeon.bind(tangon)(yankee);
            yankee = yankee.colors;
            yankee = yankee.TEXT_NORMAL;
            verify['color'] = yankee;
            verify = zuuluu.bind(tangon)(offset, verify);
            option[1] = verify;
            report['children'] = option;
            report = golfie.bind(tangon)(oscard, report);
            entity['children'] = report;
            entity = zuuluu.bind(tangon)(michal, entity);
            return entity;
        }
    };
    zuuluu['default'] = michal;
    return entity;
})();