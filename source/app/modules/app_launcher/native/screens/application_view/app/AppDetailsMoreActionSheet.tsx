// app/modules/app_launcher/native/screens/application_view/app/AppDetailsMoreActionSheet.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    report = argBar;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    entity = argBaz;
    var _closure1_slot1 = entity;
    var _closure1_slot2 = oscard;
    entity = global;
    option = entity.Object;
    golfie = option.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(option)(zuuluu, entity, tangon);
    entity = 0;
    golfie = oscard[entity];
    tangon = argCor;
    entity = undefined;
    tangon = tangon.bind(entity)(golfie);
    tangon = 1;
    golfie = oscard[tangon];
    golfie = report.bind(entity)(golfie);
    golfie = golfie.jsx;
    var _closure1_slot3 = golfie;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.jsxs;
    var _closure1_slot4 = tangon;
    tangon = 11;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/app_launcher/native/screens/application_view/app/AppDetailsMoreActionSheet.tsx';
    tangon = report.bind(oscard)(tangon);
    michal = function(argFoo) { // Original name: _default
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            entity = argFoo;
            zuuluu = entity.application;
            var _closure2_slot0 = zuuluu;
            option = entity.onAddAppMenuClick;
            var _closure2_slot1 = option;
            oscard = _closure1_slot0;
            report = _closure1_slot2;
            entity = 2;
            entity = report[entity];
            tangon = undefined;
            michal = oscard.bind(tangon)(entity);
            entity = michal.getInstallAppProps;
            zuuluu = entity.bind(michal)(zuuluu);
            var _closure2_slot2 = zuuluu;
            entity = 3;
            entity = report[entity];
            michal = oscard.bind(tangon)(entity);
            entity = michal.canInstallApplication;
            backup = entity.bind(michal)(zuuluu);
            zuuluu = _closure1_slot3;
            entity = 4;
            entity = report[entity];
            entity = oscard.bind(tangon)(entity);
            michal = entity.ActionSheet;
            entity = {};
            golfie = _closure1_slot4;
            offset = 5;
            report = report[offset];
            report = oscard.bind(tangon)(report);
            report = report.ActionSheetRow;
            oscard = report.Group;
            report = {};
            verify = null;
            romeon = null;
            if(!backup) { _fun00002_ip = 254; continue _fun00001 }
 148:
            option = verify != option;
            romeon = null;
            if(!option) { _fun00002_ip = 254; continue _fun00001 }
 157:
            kiloes = _closure1_slot3;
            echoed = _closure1_slot0;
            update = _closure1_slot2;
            option = update[offset];
            option = echoed.bind(tangon)(option);
            backup = option.ActionSheetRow;
            option = {};
            sizing = 6;
            output = update[sizing];
            output = echoed.bind(tangon)(output);
            result = output.intl;
            output = result.string;
            sizing = update[sizing];
            sizing = echoed.bind(tangon)(sizing);
            sizing = sizing.t;
            sizing = sizing.NgXl3N;
            sizing = output.bind(result)(sizing);
            option['label'] = sizing;
            sizing = function() { // Original name: onPress
                zuuluu = _closure2_slot1;
                michal = {};
                entity = _closure2_slot2;
                michal['installAppProps'] = entity;
                entity = undefined;
                entity = zuuluu.bind(entity)(michal);
                return entity;
            };
            option['onPress'] = sizing;
            romeon = kiloes.bind(tangon)(backup, option);
 254:
            option = new Array(2);
            option[0] = romeon;
            backup = _closure1_slot0;
            kiloes = _closure1_slot2;
            romeon = 7;
            romeon = kiloes[romeon];
            romeon = backup.bind(tangon)(romeon);
            backup = romeon.DeveloperMode;
            romeon = backup.getSetting;
            romeon = romeon.bind(backup)();
            verify = null;
            if(!romeon) { _fun00002_ip = 402; continue _fun00001 }
 303:
            romeon = _closure1_slot3;
            output = _closure1_slot0;
            result = _closure1_slot2;
            offset = result[offset];
            offset = output.bind(tangon)(offset);
            yankee = offset.ActionSheetRow;
            offset = {};
            backup = 6;
            kiloes = result[backup];
            kiloes = output.bind(tangon)(kiloes);
            sizing = kiloes.intl;
            kiloes = sizing.string;
            backup = result[backup];
            backup = output.bind(tangon)(backup);
            backup = backup.t;
            backup = backup.+NP/b2;
            backup = kiloes.bind(sizing)(backup);
            offset['label'] = backup;
            foxtra = function() { // Original name: onPress
                report = _closure1_slot0;
                tangon = _closure1_slot2;
                entity = 8;
                zuuluu = tangon[entity];
                entity = undefined;
                golfie = report.bind(entity)(zuuluu);
                oscard = golfie.copy;
                zuuluu = _closure2_slot0;
                zuuluu = zuuluu.id;
                zuuluu = oscard.bind(golfie)(zuuluu);
                zuuluu = 9;
                zuuluu = tangon[zuuluu];
                report = report.bind(entity)(zuuluu);
                zuuluu = report.presentIdCopied;
                zuuluu = zuuluu.bind(report)();
                zuuluu = _closure1_slot1;
                michal = 10;
                michal = tangon[michal];
                zuuluu = zuuluu.bind(entity)(michal);
                michal = zuuluu.hideActionSheet;
                michal = michal.bind(zuuluu)();
                return entity;
            };
            offset['onPress'] = foxtra;
            verify = romeon.bind(tangon)(yankee, offset);
 402:
            option[1] = verify;
            report['children'] = option;
            report = golfie.bind(tangon)(oscard, report);
            entity['children'] = report;
            entity = zuuluu.bind(tangon)(michal, entity);
            return entity;
        }
    };
    zuuluu['default'] = michal;
    return entity;
})();