// app/modules/app_launcher/native/screens/application_view/app/sort/CommandListSortActionSheet.tsx
export default (function(argFoo, argBar, argBaz, argCorge, _, argFred, argPlugh) {
    report = argBar;
    zulu = argFred;
    oscar = argPlugh;
    var _closure1_slot0 = report;
    entity = argBaz;
    var _closure1_slot1 = entity;
    var _closure1_slot2 = oscar;
    entity = global;
    options = entity.Object;
    golf = options.defineProperty;
    tango = {};
    entity = true;
    tango['value'] = entity;
    entity = '__esModule';
    entity = golf.bind(options)(zulu, entity, tango);
    entity = 0;
    golf = oscar[entity];
    tango = argCorge;
    entity = undefined;
    tango = tango.bind(entity)(golf);
    tango = 1;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.CommandListSortOrder;
    var _closure1_slot3 = tango;
    tango = 2;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.jsx;
    var _closure1_slot4 = tango;
    tango = 10;
    tango = oscar[tango];
    oscar = report.bind(entity)(tango);
    report = oscar.fileFinishedImporting;
    tango = 'modules/app_launcher/native/screens/application_view/app/sort/CommandListSortActionSheet.tsx';
    tango = report.bind(oscar)(tango);
    mike = function(argFoo) { // Original name: CommandListSortActionSheet
        entity = argFoo;
        mike = entity.onClose;
        var _closure2_slot0 = mike;
        offset = entity.sortOrder;
        var _closure2_slot1 = offset;
        entity = entity.onSortOptionPress;
        var _closure2_slot2 = entity;
        tango = _closure1_slot4;
        sizing = _closure1_slot0;
        output = _closure1_slot2;
        entity = 4;
        entity = output[entity];
        zulu = undefined;
        entity = sizing.bind(zulu)(entity);
        mike = entity.RedesignCompat;
        entity = {};
        report = 5;
        report = output[report];
        report = sizing.bind(zulu)(report);
        oscar = report.BottomSheet;
        report = {};
        golf = true;
        report['startExpanded'] = golf;
        golf = 6;
        golf = output[golf];
        golf = sizing.bind(zulu)(golf);
        options = golf.BottomSheetTitleHeader;
        golf = {};
        romeo = 7;
        romeo = output[romeo];
        romeo = sizing.bind(zulu)(romeo);
        foxtrot = romeo.ArrowsUpDownIcon;
        romeo = {};
        backup = 'sm';
        romeo['size'] = backup;
        kilo = _closure1_slot1;
        backup = 8;
        backup = output[backup];
        backup = kilo.bind(zulu)(backup);
        backup = backup.colors;
        backup = backup.TEXT_NORMAL;
        romeo['color'] = backup;
        romeo = tango.bind(zulu)(foxtrot, romeo);
        golf['leading'] = romeo;
        foxtrot = 3;
        romeo = output[foxtrot];
        romeo = sizing.bind(zulu)(romeo);
        kilo = romeo.intl;
        backup = kilo.string;
        romeo = output[foxtrot];
        romeo = sizing.bind(zulu)(romeo);
        romeo = romeo.t;
        romeo = romeo.yeYaHR;
        romeo = backup.bind(kilo)(romeo);
        golf['title'] = romeo;
        golf = tango.bind(zulu)(options, golf);
        report['header'] = golf;
        golf = 9;
        golf = output[golf];
        golf = sizing.bind(zulu)(golf);
        options = golf.FormRadioGroup;
        golf = {};
        romeo = false;
        golf['hasIcons'] = romeo;
        golf['value'] = offset;
        offset = {};
        romeo = output[foxtrot];
        romeo = sizing.bind(zulu)(romeo);
        kilo = romeo.intl;
        backup = kilo.string;
        romeo = output[foxtrot];
        romeo = sizing.bind(zulu)(romeo);
        romeo = romeo.t;
        romeo = romeo.SzxiqK;
        romeo = backup.bind(kilo)(romeo);
        offset['label'] = romeo;
        romeo = _closure1_slot3;
        yankee = romeo.POPULAR;
        offset['value'] = yankee;
        yankee = new Array(2);
        yankee[0] = offset;
        offset = {};
        backup = output[foxtrot];
        backup = sizing.bind(zulu)(backup);
        kilo = backup.intl;
        backup = kilo.string;
        foxtrot = output[foxtrot];
        foxtrot = sizing.bind(zulu)(foxtrot);
        foxtrot = foxtrot.t;
        foxtrot = foxtrot.m8xstr;
        foxtrot = backup.bind(kilo)(foxtrot);
        offset['label'] = foxtrot;
        romeo = romeo.ALPHABETICAL;
        offset['value'] = romeo;
        yankee[1] = offset;
        offset = yankee.map;
        verify = function(argFoo) {
            entity = argFoo;
            golf = entity.label;
            report = entity.value;
            var _closure3_slot0 = report;
            tango = _closure1_slot4;
            mike = _closure1_slot0;
            zulu = _closure1_slot2;
            entity = 9;
            entity = zulu[entity];
            zulu = undefined;
            entity = mike.bind(zulu)(entity);
            mike = entity.FormRadioRow;
            entity = {};
            options = 'right';
            entity['align'] = options;
            entity['label'] = golf;
            oscar = function() { // Original name: onPress
                tango = _closure3_slot0;
                zulu = _closure2_slot2;
                entity = undefined;
                zulu = zulu.bind(entity)(tango);
                mike = _closure2_slot0;
                mike = mike.bind(entity)();
                return entity;
            };
            entity['onPress'] = oscar;
            oscar = _closure2_slot1;
            oscar = report === oscar;
            entity['selected'] = oscar;
            entity = tango.bind(zulu)(mike, entity, report);
            return entity;
        };
        verify = offset.bind(yankee)(verify);
        golf['children'] = verify;
        golf = tango.bind(zulu)(options, golf);
        report['children'] = golf;
        report = tango.bind(zulu)(oscar, report);
        entity['children'] = report;
        entity = tango.bind(zulu)(mike, entity);
        return entity;
    };
    zulu['default'] = mike;
    return entity;
})();