// app/modules/app_launcher/native/screens/application_view/app/sort/CommandListSortActionSheet.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    report = argBar;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    entity = argBaz;
    var _closure1_slot1 = entity;
    var _closure1_slot2 = oscard;
    entity = global;
    option = entity.Object;
    golfie = option.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(option)(zuuluu, entity, tangon);
    entity = 0;
    golfie = oscard[entity];
    tangon = argCor;
    entity = undefined;
    tangon = tangon.bind(entity)(golfie);
    tangon = 1;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.CommandListSortOrder;
    var _closure1_slot3 = tangon;
    tangon = 2;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.jsx;
    var _closure1_slot4 = tangon;
    tangon = 10;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/app_launcher/native/screens/application_view/app/sort/CommandListSortActionSheet.tsx';
    tangon = report.bind(oscard)(tangon);
    michal = function(argFoo) { // Original name: CommandListSortActionSheet
        entity = argFoo;
        michal = entity.onClose;
        var _closure2_slot0 = michal;
        offset = entity.sortOrder;
        var _closure2_slot1 = offset;
        entity = entity.onSortOptionPress;
        var _closure2_slot2 = entity;
        tangon = _closure1_slot4;
        sizing = _closure1_slot0;
        output = _closure1_slot2;
        entity = 4;
        entity = output[entity];
        zuuluu = undefined;
        entity = sizing.bind(zuuluu)(entity);
        michal = entity.RedesignCompat;
        entity = {};
        report = 5;
        report = output[report];
        report = sizing.bind(zuuluu)(report);
        oscard = report.BottomSheet;
        report = {};
        golfie = true;
        report['startExpanded'] = golfie;
        golfie = 6;
        golfie = output[golfie];
        golfie = sizing.bind(zuuluu)(golfie);
        option = golfie.BottomSheetTitleHeader;
        golfie = {};
        romeon = 7;
        romeon = output[romeon];
        romeon = sizing.bind(zuuluu)(romeon);
        foxtra = romeon.ArrowsUpDownIcon;
        romeon = {};
        backup = 'sm';
        romeon['size'] = backup;
        kiloes = _closure1_slot1;
        backup = 8;
        backup = output[backup];
        backup = kiloes.bind(zuuluu)(backup);
        backup = backup.colors;
        backup = backup.TEXT_NORMAL;
        romeon['color'] = backup;
        romeon = tangon.bind(zuuluu)(foxtra, romeon);
        golfie['leading'] = romeon;
        foxtra = 3;
        romeon = output[foxtra];
        romeon = sizing.bind(zuuluu)(romeon);
        kiloes = romeon.intl;
        backup = kiloes.string;
        romeon = output[foxtra];
        romeon = sizing.bind(zuuluu)(romeon);
        romeon = romeon.t;
        romeon = romeon.yeYaHR;
        romeon = backup.bind(kiloes)(romeon);
        golfie['title'] = romeon;
        golfie = tangon.bind(zuuluu)(option, golfie);
        report['header'] = golfie;
        golfie = 9;
        golfie = output[golfie];
        golfie = sizing.bind(zuuluu)(golfie);
        option = golfie.FormRadioGroup;
        golfie = {};
        romeon = false;
        golfie['hasIcons'] = romeon;
        golfie['value'] = offset;
        offset = {};
        romeon = output[foxtra];
        romeon = sizing.bind(zuuluu)(romeon);
        kiloes = romeon.intl;
        backup = kiloes.string;
        romeon = output[foxtra];
        romeon = sizing.bind(zuuluu)(romeon);
        romeon = romeon.t;
        romeon = romeon.SzxiqK;
        romeon = backup.bind(kiloes)(romeon);
        offset['label'] = romeon;
        romeon = _closure1_slot3;
        yankee = romeon.POPULAR;
        offset['value'] = yankee;
        yankee = new Array(2);
        yankee[0] = offset;
        offset = {};
        backup = output[foxtra];
        backup = sizing.bind(zuuluu)(backup);
        kiloes = backup.intl;
        backup = kiloes.string;
        foxtra = output[foxtra];
        foxtra = sizing.bind(zuuluu)(foxtra);
        foxtra = foxtra.t;
        foxtra = foxtra.m8xstr;
        foxtra = backup.bind(kiloes)(foxtra);
        offset['label'] = foxtra;
        romeon = romeon.ALPHABETICAL;
        offset['value'] = romeon;
        yankee[1] = offset;
        offset = yankee.map;
        verify = function(argFoo) {
            entity = argFoo;
            golfie = entity.label;
            report = entity.value;
            var _closure3_slot0 = report;
            tangon = _closure1_slot4;
            michal = _closure1_slot0;
            zuuluu = _closure1_slot2;
            entity = 9;
            entity = zuuluu[entity];
            zuuluu = undefined;
            entity = michal.bind(zuuluu)(entity);
            michal = entity.FormRadioRow;
            entity = {};
            option = 'right';
            entity['align'] = option;
            entity['label'] = golfie;
            oscard = function() { // Original name: onPress
                tangon = _closure3_slot0;
                zuuluu = _closure2_slot2;
                entity = undefined;
                zuuluu = zuuluu.bind(entity)(tangon);
                michal = _closure2_slot0;
                michal = michal.bind(entity)();
                return entity;
            };
            entity['onPress'] = oscard;
            oscard = _closure2_slot1;
            oscard = report === oscard;
            entity['selected'] = oscard;
            entity = tangon.bind(zuuluu)(michal, entity, report);
            return entity;
        };
        verify = offset.bind(yankee)(verify);
        golfie['children'] = verify;
        golfie = tangon.bind(zuuluu)(option, golfie);
        report['children'] = golfie;
        report = tangon.bind(zuuluu)(oscard, report);
        entity['children'] = report;
        entity = tangon.bind(zuuluu)(michal, entity);
        return entity;
    };
    zuuluu['default'] = michal;
    return entity;
})();