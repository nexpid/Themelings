// app/modules/app_launcher/native/screens/application_view/Header.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    golfie = argBar;
    foxtra = argBaz;
    zuuluu = argFre;
    option = argPlu;
    var _closure1_slot0 = golfie;
    var _closure1_slot1 = foxtra;
    var _closure1_slot2 = option;
    entity = global;
    oscard = entity.Object;
    tangon = oscard.defineProperty;
    michal = {};
    entity = true;
    michal['value'] = entity;
    entity = '__esModule';
    entity = tangon.bind(oscard)(zuuluu, entity, michal);
    entity = 0;
    tangon = option[entity];
    michal = argCor;
    entity = undefined;
    michal = michal.bind(entity)(tangon);
    michal = 1;
    michal = option[michal];
    michal = golfie.bind(entity)(michal);
    michal = michal.View;
    var _closure1_slot3 = michal;
    michal = 2;
    michal = option[michal];
    michal = foxtra.bind(entity)(michal);
    var _closure1_slot4 = michal;
    michal = 3;
    michal = option[michal];
    michal = foxtra.bind(entity)(michal);
    var _closure1_slot5 = michal;
    result = 4;
    michal = option[result];
    michal = golfie.bind(entity)(michal);
    sizing = michal.DEFAULT_CONTENT_PADDING;
    output = michal.SCREEN_BACKGROUND_COLOR;
    michal = 5;
    michal = option[michal];
    michal = golfie.bind(entity)(michal);
    tangon = michal.AnalyticEvents;
    var _closure1_slot6 = tangon;
    michal = michal.ApplicationFlags;
    var _closure1_slot7 = michal;
    michal = 6;
    michal = option[michal];
    michal = golfie.bind(entity)(michal);
    tangon = michal.jsx;
    var _closure1_slot8 = tangon;
    michal = michal.jsxs;
    var _closure1_slot9 = michal;
    romeon = 7;
    michal = option[romeon];
    michal = foxtra.bind(entity)(michal);
    michal = michal.radii;
    kiloes = michal.xl;
    var _closure1_slot10 = kiloes;
    michal = 8;
    michal = option[michal];
    offset = golfie.bind(entity)(michal);
    verify = offset.createStyles;
    oscard = {};
    backup = 'absolute';
    michal = 161;
    tangon = {'position': 'absolute', 'top': 4294967280, 'left': 0, 'right': 0, 'minHeight': 161};
    oscard['headerContainer'] = tangon;
    tangon = {};
    yankee = 105;
    tangon['height'] = yankee;
    oscard['expandedHeaderBanner'] = tangon;
    yankee = {'position': 'absolute', 'padding': 4, 'bottom': 4294967256, 'left': 16};
    tangon = 16;
    yankee['backgroundColor'] = output;
    output = option[romeon];
    output = foxtra.bind(entity)(output);
    output = output.radii;
    output = output.xl;
    output = output + result;
    yankee['borderRadius'] = output;
    oscard['appIconMask'] = yankee;
    yankee = {'height': 56, 'justifyContent': 'space-between', 'alignItems': 'center', 'position': 'absolute', 'top': 0, 'left': 0, 'right': 0, 'flexDirection': 'row'};
    yankee['padding'] = sizing;
    oscard['collapsedHeaderBanner'] = yankee;
    yankee = {'backgroundColor': 'black', 'position': 'absolute', 'top': 0, 'left': 0, 'right': 0, 'bottom': 0};
    oscard['collapsedHeaderBannerOverlay'] = yankee;
    yankee = {'position': 'absolute', 'top': 12, 'left': 12};
    oscard['backButtonContainer'] = yankee;
    yankee = {};
    sizing = option[romeon];
    sizing = foxtra.bind(entity)(sizing);
    sizing = sizing.colors;
    sizing = sizing.BLACK;
    yankee['backgroundColor'] = sizing;
    sizing = 0.6;
    yankee['opacity'] = sizing;
    oscard['backButton'] = yankee;
    yankee = {'height': 72, 'width': 72};
    yankee['borderRadius'] = kiloes;
    kiloes = option[romeon];
    kiloes = foxtra.bind(entity)(kiloes);
    kiloes = kiloes.colors;
    kiloes = kiloes.BACKGROUND_ACCENT;
    yankee['backgroundColor'] = kiloes;
    oscard['loadingIcon'] = yankee;
    yankee = {};
    yankee['position'] = backup;
    backup = option[romeon];
    backup = foxtra.bind(entity)(backup);
    backup = backup.spacing;
    backup = backup.PX_12;
    yankee['top'] = backup;
    backup = option[romeon];
    backup = foxtra.bind(entity)(backup);
    backup = backup.spacing;
    backup = backup.PX_16;
    yankee['right'] = backup;
    oscard['addCTAContainer'] = yankee;
    yankee = {'width': 32, 'height': 32, 'alignItems': 'center', 'justifyContent': 'center'};
    backup = option[romeon];
    backup = foxtra.bind(entity)(backup);
    backup = backup.radii;
    backup = backup.lg;
    yankee['borderRadius'] = backup;
    backup = option[romeon];
    backup = foxtra.bind(entity)(backup);
    backup = backup.colors;
    backup = backup.REDESIGN_BUTTON_SECONDARY_OVERLAY_BACKGROUND;
    yankee['backgroundColor'] = backup;
    oscard['actionButtonWrapper'] = yankee;
    yankee = {'flexDirection': 'row', 'display': 'flex', 'gap': null, 'position': 'absolute', 'right': null, 'top': null, 'alignItems': 'center', 'justifyContent': 'center'};
    backup = option[romeon];
    backup = foxtra.bind(entity)(backup);
    backup = backup.spacing;
    backup = backup.PX_16;
    yankee['gap'] = backup;
    backup = option[romeon];
    backup = foxtra.bind(entity)(backup);
    backup = backup.spacing;
    backup = backup.PX_12;
    yankee['right'] = backup;
    romeon = option[romeon];
    romeon = foxtra.bind(entity)(romeon);
    romeon = romeon.spacing;
    romeon = romeon.PX_12;
    yankee['top'] = romeon;
    oscard['actionsWrapper'] = yankee;
    oscard = verify.bind(offset)(oscard);
    var _closure1_slot11 = oscard;
    oscard = {};
    verify = "function HeaderTsx1(){const{interpolate,scrollOffsetY,HEADER_SCROLL_RANGE}=this.__closure;return{transform:[{translateY:interpolate(scrollOffsetY.get(),[0,HEADER_SCROLL_RANGE],[0,-HEADER_SCROLL_RANGE],'clamp')}]};}";
    oscard['code'] = verify;
    var _closure1_slot12 = oscard;
    oscard = {};
    verify = "function HeaderTsx2(){const{interpolate,scrollOffsetY,HEADER_SCROLL_RANGE}=this.__closure;return{transform:[{translateY:interpolate(scrollOffsetY.get(),[0,HEADER_SCROLL_RANGE],[0,HEADER_SCROLL_RANGE],'clamp')}]};}";
    oscard['code'] = verify;
    var _closure1_slot13 = oscard;
    oscard = {};
    verify = "function HeaderTsx3(){const{interpolate,scrollOffsetY,HEADER_SCROLL_RANGE}=this.__closure;return{transform:[{translateY:interpolate(scrollOffsetY.get(),[HEADER_SCROLL_RANGE*0.5,HEADER_SCROLL_RANGE],[16,0],'clamp')}],opacity:interpolate(scrollOffsetY.get(),[HEADER_SCROLL_RANGE*0.5,HEADER_SCROLL_RANGE],[0,1],'clamp')};}";
    oscard['code'] = verify;
    var _closure1_slot14 = oscard;
    oscard = {};
    verify = "function HeaderTsx4(){const{interpolate,scrollOffsetY,HEADER_SCROLL_RANGE}=this.__closure;return{opacity:interpolate(scrollOffsetY.get(),[HEADER_SCROLL_RANGE*0.5,HEADER_SCROLL_RANGE],[0,0.5],'clamp')};}";
    oscard['code'] = verify;
    var _closure1_slot15 = oscard;
    oscard = 30;
    oscard = option[oscard];
    option = golfie.bind(entity)(oscard);
    golfie = option.fileFinishedImporting;
    oscard = 'modules/app_launcher/native/screens/application_view/Header.tsx';
    oscard = golfie.bind(option)(oscard);
    report = function(argFoo) { // Original name: Header
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            michal = argFoo;
            offset = michal.application;
            var _closure2_slot0 = offset;
            sequen = michal.onPressBack;
            entity = michal.scrollOffsetY;
            michal = michal.onAddAppMenuClick;
            var _closure2_slot1 = michal;
            tangon = undefined;
            var _closure2_slot3 = tangon;
            var _closure2_slot4 = tangon;
            zuuluu = _closure1_slot0;
            report = _closure1_slot2;
            michal = 10;
            michal = report[michal];
            oscard = zuuluu.bind(tangon)(michal);
            report = oscard.useStateFromStores;
            michal = _closure1_slot5;
            zuuluu = new Array(1);
            zuuluu[0] = michal;
            michal = function() {
                michal = _closure1_slot5;
                entity = michal.entrypoint;
                entity = entity.bind(michal)();
                return entity;
            };
            michal = report.bind(oscard)(zuuluu, michal);
            var _closure2_slot2 = michal;
            michal = _closure1_slot11;
            update = michal.bind(tangon)();
            option = null;
            michal = option != offset;
            oscard = null;
            if(!michal) { _fun00002_ip = 153; continue _fun00001 }
 122:
            zuuluu = _closure1_slot0;
            report = _closure1_slot2;
            michal = 11;
            michal = report[michal];
            zuuluu = zuuluu.bind(tangon)(michal);
            michal = zuuluu.getAppLauncherIconSource;
            oscard = michal.bind(zuuluu)(offset);
 153:
            zuuluu = _closure1_slot0;
            report = _closure1_slot2;
            michal = 12;
            michal = report[michal];
            verify = zuuluu.bind(tangon)(michal);
            golfie = verify.useToken;
            zuuluu = _closure1_slot1;
            echoed = 7;
            michal = report[echoed];
            michal = zuuluu.bind(tangon)(michal);
            michal = michal.colors;
            michal = michal.BG_BASE_PRIMARY;
            golfie = golfie.bind(verify)(michal);
            michal = 13;
            michal = report[michal];
            report = zuuluu.bind(tangon)(michal);
            verify = 'number';
            michal = typeof oscard;
            zuuluu = oscard;
            if(!(verify !== michal)) { _fun00002_ip = 255; continue _fun00001 }
 237:
            verify = option == oscard;
            michal = undefined;
            if(verify) { _fun00002_ip = 252; continue _fun00001 }
 246:
            michal = oscard.uri;
 252:
            zuuluu = michal;
 255:
            verify = option != golfie;
            ctrled = '';
            michal = ctrled;
            if(!verify) { _fun00002_ip = 272; continue _fun00001 }
 269:
            michal = golfie;
 272:
            record = report.bind(tangon)(zuuluu, michal);
            if(!(option == oscard)) { _fun00002_ip = 310; continue _fun00001 }
 282:
            report = _closure1_slot8;
            zuuluu = _closure1_slot3;
            michal = {};
            golfie = update.loadingIcon;
            michal['style'] = golfie;
            output = report.bind(tangon)(zuuluu, michal);
            _fun00002_ip = 364; continue _fun00001;
 310:
            report = _closure1_slot8;
            zuuluu = _closure1_slot1;
            golfie = _closure1_slot2;
            michal = 14;
            michal = golfie[michal];
            zuuluu = zuuluu.bind(tangon)(michal);
            michal = {};
            michal['iconSource'] = oscard;
            oscard = _closure1_slot10;
            michal['iconBorderRadius'] = oscard;
            oscard = 72;
            michal['iconSize'] = oscard;
            output = report.bind(tangon)(zuuluu, michal);
 364:
            zuuluu = {};
            zuuluu['scrollOffsetY'] = entity;
            michal = function(argFoo) {
                entity = argFoo;
                golfie = entity.scrollOffsetY;
                var _closure3_slot0 = golfie;
                entity = {};
                offset = _closure1_slot0;
                yankee = _closure1_slot2;
                option = 9;
                zuuluu = yankee[option];
                verify = undefined;
                tangon = offset.bind(verify)(zuuluu);
                zuuluu = tangon.useAnimatedStyle;
                michal = function() { // Original name: o
                    entity = {};
                    zuuluu = {};
                    report = _closure1_slot0;
                    tangon = _closure1_slot2;
                    michal = 9;
                    tangon = tangon[michal];
                    michal = undefined;
                    option = report.bind(michal)(tangon);
                    golfie = option.interpolate;
                    tangon = _closure3_slot0;
                    michal = tangon.get;
                    romeon = michal.bind(tangon)();
                    report = [0];
                    michal = 105;
                    report[1] = michal;
                    tangon = [0];
                    michal = -105;
                    tangon[1] = michal;
                    verify = 'clamp';
                    foxtra = option;
                    yankee = report;
                    offset = tangon;
                    michal = foxtra[golfie](romeon, yankee, offset, verify, option);
                    zuuluu['translateY'] = michal;
                    michal = new Array(1);
                    michal[0] = zuuluu;
                    entity['transform'] = michal;
                    return entity;
                };
                oscard = {};
                option = yankee[option];
                option = offset.bind(verify)(option);
                option = option.interpolate;
                oscard['interpolate'] = option;
                oscard['scrollOffsetY'] = golfie;
                golfie = 105;
                oscard['HEADER_SCROLL_RANGE'] = golfie;
                michal['__closure'] = oscard;
                oscard = 2572905048492.0;
                michal['__workletHash'] = oscard;
                report = _closure1_slot12;
                michal['__initData'] = report;
                michal = zuuluu.bind(tangon)(michal);
                entity['style'] = michal;
                return entity;
            };
            oscard = michal.bind(tangon)(zuuluu);
            zuuluu = {};
            zuuluu['scrollOffsetY'] = entity;
            michal = function(argFoo) {
                entity = argFoo;
                option = entity.scrollOffsetY;
                var _closure3_slot0 = option;
                entity = {};
                yankee = _closure1_slot0;
                romeon = _closure1_slot2;
                verify = 9;
                zuuluu = romeon[verify];
                offset = undefined;
                oscard = yankee.bind(offset)(zuuluu);
                tangon = oscard.useAnimatedStyle;
                zuuluu = function() { // Original name: o
                    entity = {};
                    zuuluu = {};
                    report = _closure1_slot0;
                    tangon = _closure1_slot2;
                    michal = 9;
                    tangon = tangon[michal];
                    michal = undefined;
                    option = report.bind(michal)(tangon);
                    golfie = option.interpolate;
                    tangon = _closure3_slot0;
                    michal = tangon.get;
                    romeon = michal.bind(tangon)();
                    report = [0];
                    michal = 105;
                    report[1] = michal;
                    tangon = [0];
                    tangon[1] = michal;
                    verify = 'clamp';
                    foxtra = option;
                    yankee = report;
                    offset = tangon;
                    michal = foxtra[golfie](romeon, yankee, offset, verify, option);
                    zuuluu['translateY'] = michal;
                    michal = new Array(1);
                    michal[0] = zuuluu;
                    entity['transform'] = michal;
                    return entity;
                };
                foxtra = {};
                golfie = romeon[verify];
                golfie = yankee.bind(offset)(golfie);
                golfie = golfie.interpolate;
                foxtra['interpolate'] = golfie;
                foxtra['scrollOffsetY'] = option;
                golfie = 105;
                foxtra['HEADER_SCROLL_RANGE'] = golfie;
                zuuluu['__closure'] = foxtra;
                foxtra = 8190094903650.0;
                zuuluu['__workletHash'] = foxtra;
                foxtra = _closure1_slot13;
                zuuluu['__initData'] = foxtra;
                zuuluu = tangon.bind(oscard)(zuuluu);
                entity['headerStyle'] = zuuluu;
                zuuluu = romeon[verify];
                tangon = yankee.bind(offset)(zuuluu);
                zuuluu = tangon.useAnimatedStyle;
                michal = function() { // Original name: n
                    entity = {};
                    offset = {};
                    oscard = _closure1_slot0;
                    option = _closure1_slot2;
                    zuuluu = 9;
                    michal = option[zuuluu];
                    report = undefined;
                    backup = oscard.bind(report)(michal);
                    foxtra = backup.interpolate;
                    tangon = _closure3_slot0;
                    michal = tangon.get;
                    result = michal.bind(tangon)();
                    yankee = [52.5];
                    michal = 105;
                    yankee[1] = michal;
                    sizing = [16, 0];
                    golfie = 'clamp';
                    echoed = backup;
                    output = yankee;
                    kiloes = golfie;
                    verify = echoed[foxtra](result, output, sizing, kiloes, backup);
                    offset['translateY'] = verify;
                    verify = new Array(1);
                    verify[0] = offset;
                    entity['transform'] = verify;
                    zuuluu = option[zuuluu];
                    oscard = oscard.bind(report)(zuuluu);
                    report = oscard.interpolate;
                    zuuluu = tangon.get;
                    result = zuuluu.bind(tangon)();
                    zuuluu = [52.5];
                    zuuluu[1] = michal;
                    sizing = [0, 1];
                    echoed = oscard;
                    output = zuuluu;
                    michal = echoed[report](result, output, sizing, kiloes, backup);
                    entity['opacity'] = michal;
                    return entity;
                };
                oscard = {};
                verify = romeon[verify];
                verify = yankee.bind(offset)(verify);
                verify = verify.interpolate;
                oscard['interpolate'] = verify;
                oscard['scrollOffsetY'] = option;
                oscard['HEADER_SCROLL_RANGE'] = golfie;
                michal['__closure'] = oscard;
                oscard = 14190901941859.0;
                michal['__workletHash'] = oscard;
                report = _closure1_slot14;
                michal['__initData'] = report;
                michal = zuuluu.bind(tangon)(michal);
                entity['nameStyle'] = michal;
                return entity;
            };
            source = michal.bind(tangon)(zuuluu);
            michal = {};
            michal['scrollOffsetY'] = entity;
            entity = function(argFoo) {
                entity = argFoo;
                golfie = entity.scrollOffsetY;
                var _closure3_slot0 = golfie;
                entity = {};
                offset = _closure1_slot0;
                yankee = _closure1_slot2;
                option = 9;
                zuuluu = yankee[option];
                verify = undefined;
                tangon = offset.bind(verify)(zuuluu);
                zuuluu = tangon.useAnimatedStyle;
                michal = function() { // Original name: o
                    entity = {};
                    tangon = _closure1_slot0;
                    zuuluu = _closure1_slot2;
                    michal = 9;
                    zuuluu = zuuluu[michal];
                    michal = undefined;
                    golfie = tangon.bind(michal)(zuuluu);
                    oscard = golfie.interpolate;
                    zuuluu = _closure3_slot0;
                    michal = zuuluu.get;
                    yankee = michal.bind(zuuluu)();
                    tangon = [52.5];
                    michal = 105;
                    tangon[1] = michal;
                    verify = [0, 0.5];
                    option = 'clamp';
                    romeon = golfie;
                    offset = tangon;
                    michal = romeon[oscard](yankee, offset, verify, option, golfie);
                    entity['opacity'] = michal;
                    return entity;
                };
                oscard = {};
                option = yankee[option];
                option = offset.bind(verify)(option);
                option = option.interpolate;
                oscard['interpolate'] = option;
                oscard['scrollOffsetY'] = golfie;
                golfie = 105;
                oscard['HEADER_SCROLL_RANGE'] = golfie;
                michal['__closure'] = oscard;
                oscard = 9589752719246.0;
                michal['__workletHash'] = oscard;
                report = _closure1_slot15;
                michal['__initData'] = report;
                michal = zuuluu.bind(tangon)(michal);
                entity['style'] = michal;
                return entity;
            };
            config = entity.bind(tangon)(michal);
            entity = option != offset;
            if(!entity) { _fun00002_ip = 459; continue _fun00001 }
 428:
            michal = _closure1_slot0;
            zuuluu = _closure1_slot2;
            entity = 15;
            entity = zuuluu[entity];
            michal = michal.bind(tangon)(entity);
            entity = michal.getSectionName;
            ctrled = entity.bind(michal)(offset);
 459:
            entity = option != offset;
            if(!entity) { _fun00002_ip = 474; continue _fun00001 }
 466:
            michal = 'flags';
            entity = michal in offset;
 474:
            if(!entity) { _fun00002_ip = 536; continue _fun00001 }
 477:
            zuuluu = _closure1_slot0;
            report = _closure1_slot2;
            michal = 16;
            michal = report[michal];
            golfie = zuuluu.bind(tangon)(michal);
            report = golfie.hasFlag;
            michal = offset.flags;
            verify = option != michal;
            zuuluu = 0;
            if(!verify) { _fun00002_ip = 520; continue _fun00001 }
 517:
            zuuluu = michal;
 520:
            michal = _closure1_slot7;
            michal = michal.EMBEDDED;
            entity = report.bind(golfie)(zuuluu, michal);
 536:
            _closure2_slot3 = entity;
            michal = _closure1_slot4;
            entity = michal.getCurrentUser;
            entity = entity.bind(michal)();
            _closure2_slot4 = entity;
            zuuluu = _closure1_slot9;
            romeon = _closure1_slot1;
            kiloes = _closure1_slot2;
            yankee = 9;
            entity = kiloes[yankee];
            entity = romeon.bind(tangon)(entity);
            michal = entity.View;
            entity = {};
            golfie = update.headerContainer;
            report = new Array(2);
            report[0] = golfie;
            oscard = oscard.style;
            report[1] = oscard;
            entity['style'] = report;
            verify = 'box-none';
            entity['pointerEvents'] = verify;
            foxtra = _closure1_slot8;
            oscard = _closure1_slot3;
            report = {};
            result = update.expandedHeaderBanner;
            golfie = new Array(2);
            golfie[0] = result;
            result = {};
            result['backgroundColor'] = record;
            golfie[1] = result;
            report['style'] = golfie;
            result = 'none';
            report['pointerEvents'] = result;
            golfie = {};
            vacuum = update.appIconMask;
            golfie['style'] = vacuum;
            golfie['children'] = output;
            golfie = foxtra.bind(tangon)(oscard, golfie);
            report['children'] = golfie;
            oscard = foxtra.bind(tangon)(oscard, report);
            report = new Array(3);
            report[0] = oscard;
            oscard = kiloes[yankee];
            oscard = romeon.bind(tangon)(oscard);
            golfie = oscard.View;
            oscard = {};
            vacuum = update.collapsedHeaderBanner;
            output = new Array(3);
            output[0] = vacuum;
            vacuum = {};
            vacuum['backgroundColor'] = record;
            output[1] = vacuum;
            vacuum = source.headerStyle;
            output[2] = vacuum;
            oscard['style'] = output;
            oscard['pointerEvents'] = verify;
            verify = kiloes[yankee];
            verify = romeon.bind(tangon)(verify);
            output = verify.View;
            verify = {};
            record = update.collapsedHeaderBannerOverlay;
            vacuum = new Array(2);
            vacuum[0] = record;
            config = config.style;
            vacuum[1] = config;
            verify['style'] = vacuum;
            verify['pointerEvents'] = result;
            output = foxtra.bind(tangon)(output, verify);
            verify = new Array(4);
            verify[0] = output;
            output = 17;
            output = kiloes[output];
            vacuum = romeon.bind(tangon)(output);
            output = {};
            output['onPress'] = sequen;
            sequen = update.backButton;
            output['style'] = sequen;
            sequen = kiloes[echoed];
            sequen = romeon.bind(tangon)(sequen);
            sequen = sequen.colors;
            sequen = sequen.WHITE;
            output['iconColor'] = sequen;
            output = foxtra.bind(tangon)(vacuum, output);
            verify[1] = output;
            yankee = kiloes[yankee];
            yankee = romeon.bind(tangon)(yankee);
            output = yankee.View;
            yankee = {};
            source = source.nameStyle;
            yankee['style'] = source;
            yankee['pointerEvents'] = result;
            source = _closure1_slot0;
            result = 18;
            result = kiloes[result];
            result = source.bind(tangon)(result);
            source = result.Text;
            result = {'variant': 'heading-lg/bold', 'color': 'white'};
            result['children'] = ctrled;
            result = foxtra.bind(tangon)(source, result);
            yankee['children'] = result;
            yankee = foxtra.bind(tangon)(output, yankee);
            verify[2] = yankee;
            yankee = 19;
            yankee = kiloes[yankee];
            romeon = romeon.bind(tangon)(yankee);
            yankee = {'size': 32, 'pointerEvents': 'none'};
            yankee = foxtra.bind(tangon)(romeon, yankee);
            verify[3] = yankee;
            oscard['children'] = verify;
            oscard = zuuluu.bind(tangon)(golfie, oscard);
            report[1] = oscard;
            golfie = option != offset;
            oscard = null;
            if(!golfie) { _fun00002_ip = 1354; continue _fun00001 }
 1048:
            verify = _closure1_slot0;
            yankee = _closure1_slot2;
            golfie = 15;
            golfie = yankee[golfie];
            verify = verify.bind(tangon)(golfie);
            golfie = verify.isRealApplication;
            golfie = golfie.bind(verify)(offset);
            oscard = null;
            if(!golfie) { _fun00002_ip = 1354; continue _fun00001 }
 1087:
            verify = _closure1_slot9;
            option = _closure1_slot3;
            golfie = {};
            offset = update.actionsWrapper;
            golfie['style'] = offset;
            foxtra = _closure1_slot8;
            kiloes = _closure1_slot0;
            output = _closure1_slot2;
            yankee = 20;
            offset = output[yankee];
            offset = kiloes.bind(tangon)(offset);
            romeon = offset.PressableOpacity;
            offset = {};
            result = update.actionButtonWrapper;
            offset['style'] = result;
            result = function() { // Original name: onPress
                _fun00003: for(var _fun00004_ip = 0; ; ) switch(_fun00004_ip) {
 0:
                    tangon = _closure1_slot1;
                    report = _closure1_slot2;
                    entity = 21;
                    zuuluu = report[entity];
                    entity = undefined;
                    golfie = tangon.bind(entity)(zuuluu);
                    oscard = golfie.track;
                    zuuluu = _closure1_slot6;
                    tangon = zuuluu.APP_LAUNCHER_APPLICATION_LINK_COPIED;
                    zuuluu = {};
                    option = _closure2_slot0;
                    option = option.id;
                    zuuluu['application_id'] = option;
                    option = _closure2_slot2;
                    zuuluu['source'] = option;
                    zuuluu = oscard.bind(golfie)(tangon, zuuluu);
                    tangon = _closure1_slot0;
                    zuuluu = 22;
                    zuuluu = report[zuuluu];
                    report = tangon.bind(entity)(zuuluu);
                    tangon = report.copy;
                    zuuluu = _closure2_slot3;
                    verify = _closure1_slot0;
                    romeon = _closure1_slot2;
                    oscard = 23;
                    oscard = romeon[oscard];
                    option = verify.bind(entity)(oscard);
                    if(zuuluu) { _fun00004_ip = 180; continue _fun00003 }
 122:
                    oscard = option.getApplicationInstallURL;
                    zuuluu = {};
                    yankee = _closure2_slot0;
                    golfie = yankee.id;
                    zuuluu['id'] = golfie;
                    golfie = 15;
                    golfie = romeon[golfie];
                    verify = verify.bind(entity)(golfie);
                    golfie = verify.getInstallAppProps;
                    foxtra = golfie.bind(verify)(yankee);
                    backup = zuuluu;
                    golfie = copyDataProperties(backup, foxtra);
                    zuuluu = oscard.bind(option)(zuuluu);
                    _fun00004_ip = 235; continue _fun00003;
 180:
                    golfie = option.getActivityLaunchURL;
                    oscard = {};
                    verify = _closure2_slot0;
                    verify = verify.id;
                    oscard['applicationId'] = verify;
                    yankee = _closure2_slot4;
                    verify = null;
                    yankee = verify == yankee;
                    verify = undefined;
                    if(yankee) { _fun00004_ip = 225; continue _fun00003 }
 216:
                    offset = _closure2_slot4;
                    verify = offset.id;
 225:
                    oscard['referrerId'] = verify;
                    zuuluu = golfie.bind(option)(oscard);
 235:
                    zuuluu = tangon.bind(report)(zuuluu);
                    zuuluu = _closure1_slot0;
                    tangon = _closure1_slot2;
                    michal = 24;
                    michal = tangon[michal];
                    zuuluu = zuuluu.bind(entity)(michal);
                    michal = zuuluu.presentLinkCopied;
                    michal = michal.bind(zuuluu)();
                    return entity;
                }
            };
            offset['onPress'] = result;
            result = 25;
            result = output[result];
            result = kiloes.bind(tangon)(result);
            ctrled = result.LinkIcon;
            source = {};
            result = _closure1_slot1;
            sizing = output[echoed];
            sizing = result.bind(tangon)(sizing);
            sizing = sizing.colors;
            sizing = sizing.WHITE;
            source['color'] = sizing;
            sizing = 'md';
            source['size'] = sizing;
            source = foxtra.bind(tangon)(ctrled, source);
            offset['children'] = source;
            romeon = foxtra.bind(tangon)(romeon, offset);
            offset = new Array(2);
            offset[0] = romeon;
            yankee = output[yankee];
            yankee = kiloes.bind(tangon)(yankee);
            romeon = yankee.PressableOpacity;
            yankee = {};
            update = update.actionButtonWrapper;
            yankee['style'] = update;
            backup = function() { // Original name: onPress
                tangon = _closure1_slot1;
                entity = _closure1_slot2;
                zuuluu = 26;
                zuuluu = entity[zuuluu];
                oscard = undefined;
                report = tangon.bind(oscard)(zuuluu);
                tangon = report.openLazy;
                zuuluu = _closure1_slot0;
                michal = 28;
                michal = entity[michal];
                zuuluu = zuuluu.bind(oscard)(michal);
                michal = 27;
                michal = entity[michal];
                entity = entity.paths;
                zuuluu = zuuluu.bind(oscard)(michal, entity);
                michal = {};
                oscard = _closure2_slot0;
                michal['application'] = oscard;
                entity = _closure2_slot1;
                michal['onAddAppMenuClick'] = entity;
                entity = 'AppDetailsMoreActionSheet';
                entity = tangon.bind(report)(zuuluu, entity, michal);
                return entity;
            };
            yankee['onPress'] = backup;
            backup = 29;
            backup = output[backup];
            backup = kiloes.bind(tangon)(backup);
            kiloes = backup.MoreHorizontalIcon;
            backup = {};
            output = output[echoed];
            output = result.bind(tangon)(output);
            output = output.colors;
            output = output.WHITE;
            backup['color'] = output;
            backup['size'] = sizing;
            backup = foxtra.bind(tangon)(kiloes, backup);
            yankee['children'] = backup;
            yankee = foxtra.bind(tangon)(romeon, yankee);
            offset[1] = yankee;
            golfie['children'] = offset;
            oscard = verify.bind(tangon)(option, golfie);
 1354:
            report[2] = oscard;
            entity['children'] = report;
            entity = zuuluu.bind(tangon)(michal, entity);
            return entity;
        }
    };
    zuuluu['default'] = report;
    zuuluu['SHEET_HANDLE_CONTAINER_HEIGHT'] = tangon;
    zuuluu['EXPANDED_HEADER_HEIGHT'] = michal;
    return entity;
})();