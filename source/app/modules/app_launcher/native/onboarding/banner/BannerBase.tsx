// app/modules/app_launcher/native/onboarding/banner/BannerBase.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    report = argBar;
    yankee = argBaz;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    var _closure1_slot1 = yankee;
    var _closure1_slot2 = oscard;
    entity = global;
    option = entity.Object;
    golfie = option.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(option)(zuuluu, entity, tangon);
    entity = 0;
    tangon = oscard[entity];
    entity = undefined;
    tangon = yankee.bind(entity)(tangon);
    var _closure1_slot3 = tangon;
    tangon = 1;
    golfie = oscard[tangon];
    tangon = argCor;
    tangon = tangon.bind(entity)(golfie);
    var _closure1_slot4 = tangon;
    kiloes = 2;
    tangon = oscard[kiloes];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.View;
    var _closure1_slot5 = tangon;
    tangon = 3;
    tangon = oscard[tangon];
    tangon = yankee.bind(entity)(tangon);
    var _closure1_slot6 = tangon;
    foxtra = 4;
    tangon = oscard[foxtra];
    tangon = report.bind(entity)(tangon);
    golfie = tangon.jsx;
    var _closure1_slot7 = golfie;
    tangon = tangon.jsxs;
    var _closure1_slot8 = tangon;
    offset = 5;
    tangon = oscard[offset];
    tangon = yankee.bind(entity)(tangon);
    tangon = tangon.spacing;
    romeon = tangon.PX_12;
    tangon = {'mass': 1, 'stiffness': 100, 'damping': 15};
    var _closure1_slot9 = tangon;
    tangon = 6;
    tangon = oscard[tangon];
    option = report.bind(entity)(tangon);
    golfie = option.createStyles;
    tangon = {};
    verify = {};
    backup = oscard[offset];
    backup = yankee.bind(entity)(backup);
    backup = backup.colors;
    backup = backup.BG_BRAND;
    verify['backgroundColor'] = backup;
    backup = 'absolute';
    verify['position'] = backup;
    backup = oscard[offset];
    backup = yankee.bind(entity)(backup);
    backup = backup.radii;
    backup = backup.lg;
    verify['borderRadius'] = backup;
    backup = oscard[offset];
    backup = yankee.bind(entity)(backup);
    backup = backup.spacing;
    backup = backup.PX_16;
    verify['paddingHorizontal'] = backup;
    verify['paddingVertical'] = romeon;
    backup = 'row';
    verify['flexDirection'] = backup;
    backup = 7;
    backup = oscard[backup];
    backup = report.bind(entity)(backup);
    backup = backup.APP_ICON_SIZE;
    romeon = kiloes * romeon;
    romeon = backup + romeon;
    romeon = romeon + foxtra;
    verify['minHeight'] = romeon;
    romeon = oscard[offset];
    romeon = yankee.bind(entity)(romeon);
    romeon = romeon.spacing;
    romeon = romeon.PX_16;
    verify['bottom'] = romeon;
    romeon = oscard[offset];
    romeon = yankee.bind(entity)(romeon);
    romeon = romeon.spacing;
    romeon = romeon.PX_16;
    verify['left'] = romeon;
    tangon['banner'] = verify;
    verify = {};
    romeon = '#7eaaff';
    verify['backgroundColor'] = romeon;
    tangon['bannerGradientColor'] = verify;
    verify = {'position': 'absolute', 'top': 0, 'left': 0};
    romeon = oscard[offset];
    romeon = yankee.bind(entity)(romeon);
    romeon = romeon.radii;
    romeon = romeon.lg;
    verify['borderRadius'] = romeon;
    tangon['bannerBackgroundGradient'] = verify;
    verify = {};
    romeon = 72;
    verify['width'] = romeon;
    tangon['imageContainer'] = verify;
    verify = {'width': 175, 'height': 175, 'position': 'absolute', 'top': 4294967258, 'left': 4294967269, 'zIndex': 1, 'pointerEvents': 'none'};
    tangon['trinketsLottie'] = verify;
    verify = {'alignItems': 'center', 'justifyContent': 'center', 'marginLeft': null, 'flexShrink': 1};
    offset = oscard[offset];
    offset = yankee.bind(entity)(offset);
    offset = offset.spacing;
    offset = offset.PX_12;
    verify['marginLeft'] = offset;
    tangon['bannerTextContainer'] = verify;
    verify = {};
    offset = '100%';
    verify['width'] = offset;
    tangon['bannerText'] = verify;
    tangon = golfie.bind(option)(tangon);
    var _closure1_slot10 = tangon;
    tangon = {};
    golfie = 'function BannerBaseTsx1(){const{bannerMeasured,withDelay,withSpring,SPRING_CONFIG}=this.__closure;return{opacity:bannerMeasured.get()?withDelay(150,withSpring(1,SPRING_CONFIG)):0,transform:[{translateY:bannerMeasured.get()?withDelay(150,withSpring(0,SPRING_CONFIG)):30}]};}';
    tangon['code'] = golfie;
    var _closure1_slot11 = tangon;
    tangon = 17;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/app_launcher/native/onboarding/banner/BannerBase.tsx';
    tangon = report.bind(oscard)(tangon);
    michal = function(argFoo) { // Original name: BannerBase
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            entity = argFoo;
            kiloes = entity.image;
            yankee = entity.text;
            entity = _closure1_slot10;
            tangon = undefined;
            romeon = entity.bind(tangon)();
            michal = _closure1_slot4;
            entity = michal.useState;
            foxtra = 0;
            michal = entity.bind(michal)(foxtra);
            entity = _closure1_slot3;
            option = 2;
            entity = entity.bind(tangon)(michal, option);
            result = entity[foxtra];
            sizing = 1;
            entity = entity[sizing];
            var _closure2_slot0 = entity;
            source = _closure1_slot0;
            oscard = _closure1_slot2;
            entity = 8;
            michal = oscard[entity];
            golfie = source.bind(tangon)(michal);
            zuuluu = golfie.useSharedValue;
            michal = false;
            update = zuuluu.bind(golfie)(michal);
            var _closure2_slot1 = update;
            michal = _closure1_slot1;
            zuuluu = 9;
            zuuluu = oscard[zuuluu];
            zuuluu = michal.bind(tangon)(zuuluu);
            zuuluu = zuuluu.bind(tangon)();
            golfie = zuuluu.width;
            zuuluu = 5;
            zuuluu = oscard[zuuluu];
            zuuluu = michal.bind(tangon)(zuuluu);
            zuuluu = zuuluu.spacing;
            zuuluu = zuuluu.PX_16;
            zuuluu = option * zuuluu;
            backup = golfie - zuuluu;
            zuuluu = romeon.bannerGradientColor;
            verify = zuuluu.backgroundColor;
            zuuluu = 10;
            golfie = oscard[zuuluu];
            output = source.bind(tangon)(golfie);
            option = output.hexOpacityToRgba;
            golfie = 0.2;
            option = option.bind(output)(verify, golfie);
            golfie = new Array(2);
            golfie[0] = option;
            zuuluu = oscard[zuuluu];
            option = source.bind(tangon)(zuuluu);
            zuuluu = option.hexOpacityToRgba;
            zuuluu = zuuluu.bind(option)(verify, foxtra);
            golfie[1] = zuuluu;
            zuuluu = 11;
            zuuluu = oscard[zuuluu];
            output = source.bind(tangon)(zuuluu);
            verify = output.useStateFromStores;
            zuuluu = _closure1_slot6;
            option = new Array(1);
            option[0] = zuuluu;
            zuuluu = function() {
                entity = _closure1_slot6;
                entity = entity.useReducedMotion;
                return entity;
            };
            output = verify.bind(output)(option, zuuluu);
            zuuluu = oscard[entity];
            verify = source.bind(tangon)(zuuluu);
            option = verify.useAnimatedStyle;
            zuuluu = function() { // Original name: _
                _fun00003: for(var _fun00004_ip = 0; ; ) switch(_fun00004_ip) {
 0:
                    entity = {};
                    tangon = _closure2_slot1;
                    zuuluu = tangon.get;
                    tangon = zuuluu.bind(tangon)();
                    verify = 0;
                    zuuluu = 0;
                    if(!tangon) { _fun00004_ip = 95; continue _fun00003 }
 25:
                    offset = _closure1_slot0;
                    yankee = _closure1_slot2;
                    report = 8;
                    report = yankee[report];
                    option = undefined;
                    golfie = offset.bind(option)(report);
                    oscard = golfie.withDelay;
                    report = 12;
                    report = yankee[report];
                    offset = offset.bind(option)(report);
                    option = offset.withSpring;
                    report = _closure1_slot9;
                    tangon = 1;
                    report = option.bind(offset)(tangon, report);
                    tangon = 150;
                    zuuluu = oscard.bind(golfie)(tangon, report);
 95:
                    entity['opacity'] = zuuluu;
                    zuuluu = {};
                    tangon = _closure2_slot1;
                    michal = tangon.get;
                    tangon = michal.bind(tangon)();
                    michal = 30;
                    if(!tangon) { _fun00004_ip = 187; continue _fun00003 }
 120:
                    offset = _closure1_slot0;
                    yankee = _closure1_slot2;
                    report = 8;
                    report = yankee[report];
                    option = undefined;
                    golfie = offset.bind(option)(report);
                    oscard = golfie.withDelay;
                    report = 12;
                    report = yankee[report];
                    option = offset.bind(option)(report);
                    report = option.withSpring;
                    tangon = _closure1_slot9;
                    report = report.bind(option)(verify, tangon);
                    tangon = 150;
                    michal = oscard.bind(golfie)(tangon, report);
 187:
                    zuuluu['translateY'] = michal;
                    michal = new Array(1);
                    michal[0] = zuuluu;
                    entity['transform'] = michal;
                    return entity;
                }
            };
            echoed = {};
            echoed['bannerMeasured'] = update;
            update = oscard[entity];
            update = source.bind(tangon)(update);
            update = update.withDelay;
            echoed['withDelay'] = update;
            update = 12;
            update = oscard[update];
            update = source.bind(tangon)(update);
            update = update.withSpring;
            echoed['withSpring'] = update;
            update = _closure1_slot9;
            echoed['SPRING_CONFIG'] = update;
            zuuluu['__closure'] = echoed;
            echoed = 5314641176204.0;
            zuuluu['__workletHash'] = echoed;
            echoed = _closure1_slot11;
            zuuluu['__initData'] = echoed;
            option = option.bind(verify)(zuuluu);
            zuuluu = _closure1_slot8;
            entity = oscard[entity];
            entity = michal.bind(tangon)(entity);
            michal = entity.View;
            entity = {};
            verify = romeon.banner;
            oscard = new Array(3);
            oscard[0] = verify;
            verify = {};
            echoed = result > foxtra;
            if(!echoed) { _fun00002_ip = 448; continue _fun00001 }
 445:
            foxtra = sizing;
 448:
            verify['opacity'] = foxtra;
            verify['width'] = backup;
            oscard[1] = verify;
            oscard[2] = option;
            entity['style'] = oscard;
            report = function(argFoo) { // Original name: onLayout
                _fun00005: for(var _fun00006_ip = 0; ; ) switch(_fun00006_ip) {
 0:
                    entity = argFoo;
                    entity = entity.nativeEvent;
                    michal = entity.layout;
                    entity = null;
                    zuuluu = entity == michal;
                    entity = undefined;
                    tangon = undefined;
                    if(zuuluu) { _fun00006_ip = 32; continue _fun00005 }
 27:
                    tangon = michal.height;
 32:
                    michal = 0;
                    if(!(tangon > michal)) { _fun00006_ip = 66; continue _fun00005 }
 38:
                    zuuluu = _closure2_slot0;
                    zuuluu = zuuluu.bind(entity)(tangon);
                    tangon = _closure2_slot1;
                    zuuluu = tangon.set;
                    michal = true;
                    michal = zuuluu.bind(tangon)(michal);
 66:
                    return entity;
                }
            };
            entity['onLayout'] = report;
            option = _closure1_slot7;
            sizing = _closure1_slot1;
            foxtra = _closure1_slot2;
            report = 13;
            report = foxtra[report];
            oscard = sizing.bind(tangon)(report);
            report = {};
            verify = {'x': 0, 'y': 0};
            report['start'] = verify;
            verify = {'x': 0, 'y': 1};
            report['end'] = verify;
            report['colors'] = golfie;
            verify = romeon.bannerBackgroundGradient;
            golfie = new Array(2);
            golfie[0] = verify;
            verify = {};
            verify['height'] = result;
            verify['width'] = backup;
            golfie[1] = verify;
            report['style'] = golfie;
            oscard = option.bind(tangon)(oscard, report);
            report = new Array(3);
            report[0] = oscard;
            verify = _closure1_slot8;
            golfie = _closure1_slot5;
            oscard = {};
            backup = romeon.imageContainer;
            oscard['style'] = backup;
            backup = 14;
            backup = foxtra[backup];
            sizing = sizing.bind(tangon)(backup);
            backup = {};
            result = romeon.trinketsLottie;
            backup['style'] = result;
            offset = _closure1_slot0;
            result = 15;
            result = foxtra[result];
            result = offset.bind(tangon)(result);
            backup['source'] = result;
            output = !output;
            backup['autoPlay'] = output;
            sizing = option.bind(tangon)(sizing, backup);
            backup = new Array(2);
            backup[0] = sizing;
            backup[1] = kiloes;
            oscard['children'] = backup;
            oscard = verify.bind(tangon)(golfie, oscard);
            report[1] = oscard;
            oscard = {};
            verify = romeon.bannerTextContainer;
            oscard['style'] = verify;
            verify = 16;
            verify = foxtra[verify];
            verify = offset.bind(tangon)(verify);
            offset = verify.Text;
            verify = {'variant': 'text-md/semibold', 'color': 'white'};
            romeon = romeon.bannerText;
            verify['style'] = romeon;
            verify['children'] = yankee;
            verify = option.bind(tangon)(offset, verify);
            oscard['children'] = verify;
            oscard = option.bind(tangon)(golfie, oscard);
            report[2] = oscard;
            entity['children'] = report;
            entity = zuuluu.bind(tangon)(michal, entity);
            return entity;
        }
    };
    zuuluu['default'] = michal;
    return entity;
})();