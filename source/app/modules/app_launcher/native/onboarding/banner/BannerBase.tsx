// app/modules/app_launcher/native/onboarding/banner/BannerBase.tsx
export default (function(argFoo, argBar, argBaz, argCorge, _, argFred, argPlugh) {
    report = argBar;
    yankee = argBaz;
    zulu = argFred;
    oscar = argPlugh;
    var _closure1_slot0 = report;
    var _closure1_slot1 = yankee;
    var _closure1_slot2 = oscar;
    entity = global;
    options = entity.Object;
    golf = options.defineProperty;
    tango = {};
    entity = true;
    tango['value'] = entity;
    entity = '__esModule';
    entity = golf.bind(options)(zulu, entity, tango);
    entity = 0;
    tango = oscar[entity];
    entity = undefined;
    tango = yankee.bind(entity)(tango);
    var _closure1_slot3 = tango;
    tango = 1;
    golf = oscar[tango];
    tango = argCorge;
    tango = tango.bind(entity)(golf);
    var _closure1_slot4 = tango;
    kilo = 2;
    tango = oscar[kilo];
    tango = report.bind(entity)(tango);
    tango = tango.View;
    var _closure1_slot5 = tango;
    tango = 3;
    tango = oscar[tango];
    tango = yankee.bind(entity)(tango);
    var _closure1_slot6 = tango;
    foxtrot = 4;
    tango = oscar[foxtrot];
    tango = report.bind(entity)(tango);
    tango = tango.jsx;
    var _closure1_slot7 = tango;
    tango = oscar[foxtrot];
    tango = report.bind(entity)(tango);
    tango = tango.jsxs;
    var _closure1_slot8 = tango;
    offset = 5;
    tango = oscar[offset];
    tango = yankee.bind(entity)(tango);
    tango = tango.spacing;
    romeo = tango.PX_12;
    tango = {'mass': 1, 'stiffness': 100, 'damping': 15};
    var _closure1_slot9 = tango;
    tango = 6;
    tango = oscar[tango];
    options = report.bind(entity)(tango);
    golf = options.createStyles;
    tango = {};
    verify = {};
    backup = oscar[offset];
    backup = yankee.bind(entity)(backup);
    backup = backup.colors;
    backup = backup.BG_BRAND;
    verify['backgroundColor'] = backup;
    backup = 'absolute';
    verify['position'] = backup;
    backup = oscar[offset];
    backup = yankee.bind(entity)(backup);
    backup = backup.radii;
    backup = backup.lg;
    verify['borderRadius'] = backup;
    backup = oscar[offset];
    backup = yankee.bind(entity)(backup);
    backup = backup.spacing;
    backup = backup.PX_16;
    verify['paddingHorizontal'] = backup;
    verify['paddingVertical'] = romeo;
    backup = 'row';
    verify['flexDirection'] = backup;
    backup = 7;
    backup = oscar[backup];
    backup = report.bind(entity)(backup);
    backup = backup.APP_ICON_SIZE;
    romeo = kilo * romeo;
    romeo = backup + romeo;
    romeo = romeo + foxtrot;
    verify['minHeight'] = romeo;
    romeo = oscar[offset];
    romeo = yankee.bind(entity)(romeo);
    romeo = romeo.spacing;
    romeo = romeo.PX_16;
    verify['bottom'] = romeo;
    romeo = oscar[offset];
    romeo = yankee.bind(entity)(romeo);
    romeo = romeo.spacing;
    romeo = romeo.PX_16;
    verify['left'] = romeo;
    tango['banner'] = verify;
    verify = {};
    romeo = '#7eaaff';
    verify['backgroundColor'] = romeo;
    tango['bannerGradientColor'] = verify;
    verify = {'position': 'absolute', 'top': 0, 'left': 0};
    romeo = oscar[offset];
    romeo = yankee.bind(entity)(romeo);
    romeo = romeo.radii;
    romeo = romeo.lg;
    verify['borderRadius'] = romeo;
    tango['bannerBackgroundGradient'] = verify;
    verify = {};
    romeo = 72;
    verify['width'] = romeo;
    tango['imageContainer'] = verify;
    verify = {'width': 175, 'height': 175, 'position': 'absolute', 'top': 4294967258, 'left': 4294967269, 'zIndex': 1, 'pointerEvents': 'none'};
    tango['trinketsLottie'] = verify;
    verify = {'alignItems': 'center', 'justifyContent': 'center', 'marginLeft': null, 'flexShrink': 1};
    offset = oscar[offset];
    offset = yankee.bind(entity)(offset);
    offset = offset.spacing;
    offset = offset.PX_12;
    verify['marginLeft'] = offset;
    tango['bannerTextContainer'] = verify;
    verify = {};
    offset = '100%';
    verify['width'] = offset;
    tango['bannerText'] = verify;
    tango = golf.bind(options)(tango);
    var _closure1_slot10 = tango;
    tango = {};
    golf = 'function BannerBaseTsx1(){const{bannerMeasured,withDelay,withSpring,SPRING_CONFIG}=this.__closure;return{opacity:bannerMeasured.get()?withDelay(150,withSpring(1,SPRING_CONFIG)):0,transform:[{translateY:bannerMeasured.get()?withDelay(150,withSpring(0,SPRING_CONFIG)):30}]};}';
    tango['code'] = golf;
    var _closure1_slot11 = tango;
    tango = 17;
    tango = oscar[tango];
    oscar = report.bind(entity)(tango);
    report = oscar.fileFinishedImporting;
    tango = 'modules/app_launcher/native/onboarding/banner/BannerBase.tsx';
    tango = report.bind(oscar)(tango);
    mike = function(argFoo) { // Original name: BannerBase
        _fun118531: for(var _fun118531_ip = 0; ; ) switch(_fun118531_ip) {
 0:
            entity = argFoo;
            kilo = entity.image;
            yankee = entity.text;
            entity = _closure1_slot10;
            tango = undefined;
            romeo = entity.bind(tango)();
            mike = _closure1_slot4;
            entity = mike.useState;
            foxtrot = 0;
            mike = entity.bind(mike)(foxtrot);
            entity = _closure1_slot3;
            options = 2;
            entity = entity.bind(tango)(mike, options);
            result = entity[foxtrot];
            sizing = 1;
            entity = entity[sizing];
            var _closure2_slot0 = entity;
            source = _closure1_slot0;
            oscar = _closure1_slot2;
            entity = 8;
            mike = oscar[entity];
            golf = source.bind(tango)(mike);
            zulu = golf.useSharedValue;
            mike = false;
            update = zulu.bind(golf)(mike);
            var _closure2_slot1 = update;
            mike = _closure1_slot1;
            zulu = 9;
            zulu = oscar[zulu];
            zulu = mike.bind(tango)(zulu);
            zulu = zulu.bind(tango)();
            golf = zulu.width;
            zulu = 5;
            zulu = oscar[zulu];
            zulu = mike.bind(tango)(zulu);
            zulu = zulu.spacing;
            zulu = zulu.PX_16;
            zulu = options * zulu;
            backup = golf - zulu;
            zulu = romeo.bannerGradientColor;
            verify = zulu.backgroundColor;
            zulu = 10;
            golf = oscar[zulu];
            output = source.bind(tango)(golf);
            options = output.hexOpacityToRgba;
            golf = 0.2;
            options = options.bind(output)(verify, golf);
            golf = new Array(2);
            golf[0] = options;
            zulu = oscar[zulu];
            options = source.bind(tango)(zulu);
            zulu = options.hexOpacityToRgba;
            zulu = zulu.bind(options)(verify, foxtrot);
            golf[1] = zulu;
            zulu = 11;
            zulu = oscar[zulu];
            output = source.bind(tango)(zulu);
            verify = output.useStateFromStores;
            zulu = _closure1_slot6;
            options = new Array(1);
            options[0] = zulu;
            zulu = function() {
                entity = _closure1_slot6;
                entity = entity.useReducedMotion;
                return entity;
            };
            output = verify.bind(output)(options, zulu);
            zulu = oscar[entity];
            verify = source.bind(tango)(zulu);
            options = verify.useAnimatedStyle;
            zulu = function() { // Original name: _
                _fun118533: for(var _fun118533_ip = 0; ; ) switch(_fun118533_ip) {
 0:
                    entity = {};
                    tango = _closure2_slot1;
                    zulu = tango.get;
                    tango = zulu.bind(tango)();
                    verify = 0;
                    zulu = 0;
                    if(!tango) { _fun118533_ip = 95; continue _fun118533 }
 25:
                    offset = _closure1_slot0;
                    yankee = _closure1_slot2;
                    report = 8;
                    report = yankee[report];
                    options = undefined;
                    golf = offset.bind(options)(report);
                    oscar = golf.withDelay;
                    report = 12;
                    report = yankee[report];
                    offset = offset.bind(options)(report);
                    options = offset.withSpring;
                    report = _closure1_slot9;
                    tango = 1;
                    report = options.bind(offset)(tango, report);
                    tango = 150;
                    zulu = oscar.bind(golf)(tango, report);
 95:
                    entity['opacity'] = zulu;
                    zulu = {};
                    tango = _closure2_slot1;
                    mike = tango.get;
                    tango = mike.bind(tango)();
                    mike = 30;
                    if(!tango) { _fun118533_ip = 187; continue _fun118533 }
 120:
                    offset = _closure1_slot0;
                    yankee = _closure1_slot2;
                    report = 8;
                    report = yankee[report];
                    options = undefined;
                    golf = offset.bind(options)(report);
                    oscar = golf.withDelay;
                    report = 12;
                    report = yankee[report];
                    options = offset.bind(options)(report);
                    report = options.withSpring;
                    tango = _closure1_slot9;
                    report = report.bind(options)(verify, tango);
                    tango = 150;
                    mike = oscar.bind(golf)(tango, report);
 187:
                    zulu['translateY'] = mike;
                    mike = new Array(1);
                    mike[0] = zulu;
                    entity['transform'] = mike;
                    return entity;
                }
            };
            echo = {};
            echo['bannerMeasured'] = update;
            update = oscar[entity];
            update = source.bind(tango)(update);
            update = update.withDelay;
            echo['withDelay'] = update;
            update = 12;
            update = oscar[update];
            update = source.bind(tango)(update);
            update = update.withSpring;
            echo['withSpring'] = update;
            update = _closure1_slot9;
            echo['SPRING_CONFIG'] = update;
            zulu['__closure'] = echo;
            echo = 5314641176204.0;
            zulu['__workletHash'] = echo;
            echo = _closure1_slot11;
            zulu['__initData'] = echo;
            options = options.bind(verify)(zulu);
            zulu = _closure1_slot8;
            entity = oscar[entity];
            entity = mike.bind(tango)(entity);
            mike = entity.View;
            entity = {};
            verify = romeo.banner;
            oscar = new Array(3);
            oscar[0] = verify;
            verify = {};
            echo = result > foxtrot;
            if(!echo) { _fun118531_ip = 449; continue _fun118531 }
 446:
            foxtrot = sizing;
 449:
            verify['opacity'] = foxtrot;
            verify['width'] = backup;
            oscar[1] = verify;
            oscar[2] = options;
            entity['style'] = oscar;
            report = function(argFoo) { // Original name: onLayout
                _fun118534: for(var _fun118534_ip = 0; ; ) switch(_fun118534_ip) {
 0:
                    entity = argFoo;
                    entity = entity.nativeEvent;
                    mike = entity.layout;
                    entity = null;
                    zulu = entity == mike;
                    entity = undefined;
                    tango = undefined;
                    if(zulu) { _fun118534_ip = 32; continue _fun118534 }
 27:
                    tango = mike.height;
 32:
                    mike = 0;
                    if(!(tango > mike)) { _fun118534_ip = 66; continue _fun118534 }
 38:
                    zulu = _closure2_slot0;
                    zulu = zulu.bind(entity)(tango);
                    tango = _closure2_slot1;
                    zulu = tango.set;
                    mike = true;
                    mike = zulu.bind(tango)(mike);
 66:
                    return entity;
                }
            };
            entity['onLayout'] = report;
            options = _closure1_slot7;
            sizing = _closure1_slot1;
            foxtrot = _closure1_slot2;
            report = 13;
            report = foxtrot[report];
            oscar = sizing.bind(tango)(report);
            report = {};
            verify = {'x': 0, 'y': 0};
            report['start'] = verify;
            verify = {'x': 0, 'y': 1};
            report['end'] = verify;
            report['colors'] = golf;
            verify = romeo.bannerBackgroundGradient;
            golf = new Array(2);
            golf[0] = verify;
            verify = {};
            verify['height'] = result;
            verify['width'] = backup;
            golf[1] = verify;
            report['style'] = golf;
            oscar = options.bind(tango)(oscar, report);
            report = new Array(3);
            report[0] = oscar;
            verify = _closure1_slot8;
            golf = _closure1_slot5;
            oscar = {};
            backup = romeo.imageContainer;
            oscar['style'] = backup;
            backup = 14;
            backup = foxtrot[backup];
            sizing = sizing.bind(tango)(backup);
            backup = {};
            result = romeo.trinketsLottie;
            backup['style'] = result;
            offset = _closure1_slot0;
            result = 15;
            result = foxtrot[result];
            result = offset.bind(tango)(result);
            backup['source'] = result;
            output = !output;
            backup['autoPlay'] = output;
            sizing = options.bind(tango)(sizing, backup);
            backup = new Array(2);
            backup[0] = sizing;
            backup[1] = kilo;
            oscar['children'] = backup;
            oscar = verify.bind(tango)(golf, oscar);
            report[1] = oscar;
            oscar = {};
            verify = romeo.bannerTextContainer;
            oscar['style'] = verify;
            verify = 16;
            verify = foxtrot[verify];
            verify = offset.bind(tango)(verify);
            offset = verify.Text;
            verify = {'variant': 'text-md/semibold', 'color': 'white'};
            romeo = romeo.bannerText;
            verify['style'] = romeo;
            verify['children'] = yankee;
            verify = options.bind(tango)(offset, verify);
            oscar['children'] = verify;
            oscar = options.bind(tango)(golf, oscar);
            report[2] = oscar;
            entity['children'] = report;
            entity = zulu.bind(tango)(mike, entity);
            return entity;
        }
    };
    zulu['default'] = mike;
    return entity;
})();