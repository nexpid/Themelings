// app/modules/app_launcher/native/onboarding/banner/ApplicationsImage.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    oscard = argBar;
    yankee = argBaz;
    zuuluu = argFre;
    golfie = argPlu;
    var _closure1_slot0 = oscard;
    var _closure1_slot1 = yankee;
    var _closure1_slot2 = golfie;
    entity = global;
    option = entity.Object;
    report = option.defineProperty;
    michal = {};
    entity = true;
    michal['value'] = entity;
    entity = '__esModule';
    entity = report.bind(option)(zuuluu, entity, michal);
    entity = 0;
    report = golfie[entity];
    michal = argCor;
    entity = undefined;
    michal = michal.bind(entity)(report);
    michal = 1;
    michal = golfie[michal];
    michal = oscard.bind(entity)(michal);
    michal = michal.View;
    var _closure1_slot3 = michal;
    michal = 2;
    michal = golfie[michal];
    michal = oscard.bind(entity)(michal);
    report = michal.jsx;
    var _closure1_slot4 = report;
    report = michal.Fragment;
    var _closure1_slot5 = report;
    michal = michal.jsxs;
    var _closure1_slot6 = michal;
    romeon = 3;
    michal = golfie[romeon];
    verify = oscard.bind(entity)(michal);
    option = verify.createStyles;
    report = {};
    offset = {};
    michal = 4;
    foxtra = golfie[michal];
    foxtra = yankee.bind(entity)(foxtra);
    foxtra = foxtra.colors;
    foxtra = foxtra.BG_BRAND;
    offset['backgroundColor'] = foxtra;
    foxtra = golfie[michal];
    foxtra = yankee.bind(entity)(foxtra);
    foxtra = foxtra.radii;
    foxtra = foxtra.sm;
    foxtra = foxtra + romeon;
    offset['borderRadius'] = foxtra;
    foxtra = 'absolute';
    offset['position'] = foxtra;
    offset['padding'] = romeon;
    report['appIconContainer'] = offset;
    offset = {};
    foxtra = {};
    romeon = '-10deg';
    foxtra['rotate'] = romeon;
    romeon = new Array(1);
    romeon[0] = foxtra;
    offset['transform'] = romeon;
    report['appIconLeftContainer'] = offset;
    offset = {};
    romeon = golfie[michal];
    romeon = yankee.bind(entity)(romeon);
    romeon = romeon.spacing;
    romeon = romeon.PX_32;
    offset['left'] = romeon;
    foxtra = {};
    romeon = '15deg';
    foxtra['rotate'] = romeon;
    romeon = new Array(1);
    romeon[0] = foxtra;
    offset['transform'] = romeon;
    report['appIconRightContainer'] = offset;
    offset = {'borderRadius': null, 'width': 36, 'height': 36};
    michal = golfie[michal];
    michal = yankee.bind(entity)(michal);
    michal = michal.radii;
    michal = michal.sm;
    offset['borderRadius'] = michal;
    michal = 36;
    report['appIcon'] = offset;
    report = option.bind(verify)(report);
    var _closure1_slot7 = report;
    report = 7;
    report = golfie[report];
    golfie = oscard.bind(entity)(report);
    oscard = golfie.fileFinishedImporting;
    report = 'modules/app_launcher/native/onboarding/banner/ApplicationsImage.tsx';
    report = oscard.bind(golfie)(report);
    tangon = function(argFoo) { // Original name: ApplicationsImage
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            entity = argFoo;
            golfie = entity.firstApplication;
            oscard = entity.secondApplication;
            entity = _closure1_slot7;
            tangon = undefined;
            yankee = entity.bind(tangon)();
            entity = null;
            michal = entity != golfie;
            option = null;
            if(!michal) { _fun00002_ip = 70; continue _fun00001 }
 39:
            zuuluu = _closure1_slot0;
            verify = _closure1_slot2;
            michal = 5;
            michal = verify[michal];
            zuuluu = zuuluu.bind(tangon)(michal);
            michal = zuuluu.getAppLauncherIconSource;
            option = michal.bind(zuuluu)(golfie);
 70:
            michal = entity != oscard;
            golfie = null;
            if(!michal) { _fun00002_ip = 110; continue _fun00001 }
 79:
            zuuluu = _closure1_slot0;
            verify = _closure1_slot2;
            michal = 5;
            michal = verify[michal];
            zuuluu = zuuluu.bind(tangon)(michal);
            michal = zuuluu.getAppLauncherIconSource;
            golfie = michal.bind(zuuluu)(oscard);
 110:
            verify = entity != option;
            if(!verify) { _fun00002_ip = 163; continue _fun00001 }
 117:
            oscard = _closure1_slot4;
            zuuluu = _closure1_slot1;
            offset = _closure1_slot2;
            michal = 6;
            michal = offset[michal];
            zuuluu = zuuluu.bind(tangon)(michal);
            michal = {};
            offset = yankee.appIcon;
            michal['style'] = offset;
            michal['source'] = option;
            verify = oscard.bind(tangon)(zuuluu, michal);
 163:
            oscard = entity != golfie;
            if(!oscard) { _fun00002_ip = 216; continue _fun00001 }
 170:
            zuuluu = _closure1_slot4;
            michal = _closure1_slot1;
            option = _closure1_slot2;
            entity = 6;
            entity = option[entity];
            michal = michal.bind(tangon)(entity);
            entity = {};
            option = yankee.appIcon;
            entity['style'] = option;
            entity['source'] = golfie;
            oscard = zuuluu.bind(tangon)(michal, entity);
 216:
            zuuluu = _closure1_slot6;
            michal = _closure1_slot5;
            entity = {};
            option = _closure1_slot4;
            golfie = _closure1_slot3;
            report = {};
            romeon = yankee.appIconContainer;
            offset = new Array(2);
            offset[0] = romeon;
            romeon = yankee.appIconLeftContainer;
            offset[1] = romeon;
            report['style'] = offset;
            report['children'] = oscard;
            oscard = option.bind(tangon)(golfie, report);
            report = new Array(2);
            report[0] = oscard;
            oscard = {};
            romeon = yankee.appIconContainer;
            offset = new Array(2);
            offset[0] = romeon;
            yankee = yankee.appIconRightContainer;
            offset[1] = yankee;
            oscard['style'] = offset;
            oscard['children'] = verify;
            oscard = option.bind(tangon)(golfie, oscard);
            report[1] = oscard;
            entity['children'] = report;
            entity = zuuluu.bind(tangon)(michal, entity);
            return entity;
        }
    };
    zuuluu['default'] = tangon;
    zuuluu['APP_ICON_SIZE'] = michal;
    return entity;
})();