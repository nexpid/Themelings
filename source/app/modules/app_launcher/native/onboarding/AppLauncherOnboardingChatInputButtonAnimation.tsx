// app/modules/app_launcher/native/onboarding/AppLauncherOnboardingChatInputButtonAnimation.tsx
export default (function(argFoo, argBar, argBaz, argCorge, _, argFred, argPlugh) {
    report = argBar;
    golf = argBaz;
    zulu = argFred;
    oscar = argPlugh;
    var _closure1_slot0 = report;
    var _closure1_slot1 = golf;
    var _closure1_slot2 = oscar;
    entity = global;
    verify = entity.Object;
    options = verify.defineProperty;
    tango = {};
    entity = true;
    tango['value'] = entity;
    entity = '__esModule';
    entity = options.bind(verify)(zulu, entity, tango);
    entity = 0;
    options = oscar[entity];
    tango = argCorge;
    entity = undefined;
    tango = tango.bind(entity)(options);
    tango = 1;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    options = tango.View;
    var _closure1_slot3 = options;
    tango = tango.StyleSheet;
    var _closure1_slot4 = tango;
    tango = 2;
    tango = oscar[tango];
    tango = golf.bind(entity)(tango);
    var _closure1_slot5 = tango;
    tango = 3;
    golf = oscar[tango];
    golf = report.bind(entity)(golf);
    golf = golf.jsx;
    var _closure1_slot6 = golf;
    golf = oscar[tango];
    golf = report.bind(entity)(golf);
    golf = golf.jsxs;
    var _closure1_slot7 = golf;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.Fragment;
    var _closure1_slot8 = tango;
    tango = 4;
    tango = oscar[tango];
    options = report.bind(entity)(tango);
    golf = options.createStyles;
    tango = function() {
        tango = _closure1_slot0;
        golf = _closure1_slot2;
        entity = 5;
        mike = golf[entity];
        oscar = undefined;
        mike = tango.bind(oscar)(mike);
        mike = mike.SMALL_BUTTON_HEIGHT;
        entity = golf[entity];
        entity = tango.bind(oscar)(entity);
        entity = entity.SMALL_BUTTON_PADDING;
        mike = mike + entity;
        entity = 2;
        options = mike + entity;
        entity = {};
        mike = {'zIndex': 3, 'borderWidth': 1.5, 'borderColor': null, 'borderRadius': null, 'alignItems': 'center', 'justifyContent': 'center'};
        report = _closure1_slot1;
        tango = 6;
        zulu = golf[tango];
        zulu = report.bind(oscar)(zulu);
        zulu = zulu.colors;
        zulu = zulu.BG_BRAND;
        mike['borderColor'] = zulu;
        zulu = golf[tango];
        zulu = report.bind(oscar)(zulu);
        zulu = zulu.radii;
        zulu = zulu.round;
        mike['borderRadius'] = zulu;
        mike['width'] = options;
        mike['height'] = options;
        zulu = 4;
        mike['marginLeft'] = zulu;
        entity['fakeButton'] = mike;
        mike = {'zIndex': 1, 'position': 'absolute', 'borderRadius': null, 'top': 0, 'left': 0};
        verify = golf[tango];
        verify = report.bind(oscar)(verify);
        verify = verify.radii;
        verify = verify.round;
        mike['borderRadius'] = verify;
        mike['width'] = options;
        mike['height'] = options;
        tango = golf[tango];
        tango = report.bind(oscar)(tango);
        tango = tango.colors;
        tango = tango.BG_BASE_PRIMARY;
        mike['backgroundColor'] = tango;
        mike['marginLeft'] = zulu;
        entity['glowMask'] = mike;
        mike = {'width': '150%', 'height': '150%', 'position': 'absolute', 'top': '-25%', 'left': '-25%', 'zIndex': 0, 'opacity': 0.8};
        entity['glowLottie'] = mike;
        mike = {'zIndex': 4, 'position': 'absolute', 'pointerEvents': 'none', 'width': '175%', 'height': '175%', 'top': '-43%', 'left': '-38%'};
        entity['trinketsLottie'] = mike;
        return entity;
    };
    tango = golf.bind(options)(tango);
    var _closure1_slot9 = tango;
    tango = {};
    golf = 'function EnteringAnimation_AppLauncherOnboardingChatInputButtonAnimationTsx1(){const{withTiming,timingStandard}=this.__closure;const initialValues={opacity:0};const animations={opacity:withTiming(1,timingStandard)};return{initialValues:initialValues,animations:animations};}';
    tango['code'] = golf;
    var _closure1_slot10 = tango;
    tango = function() {
        entity = function() { // Original name: EnteringAnimation
            entity = {};
            mike = {};
            zulu = 0;
            mike['opacity'] = zulu;
            entity['initialValues'] = mike;
            mike = {};
            golf = _closure1_slot0;
            options = _closure1_slot2;
            zulu = 7;
            zulu = options[zulu];
            tango = undefined;
            oscar = golf.bind(tango)(zulu);
            report = oscar.withTiming;
            zulu = 8;
            zulu = options[zulu];
            zulu = golf.bind(tango)(zulu);
            tango = zulu.timingStandard;
            zulu = 1;
            zulu = report.bind(oscar)(zulu, tango);
            mike['opacity'] = zulu;
            entity['animations'] = mike;
            return entity;
        };
        zulu = {};
        oscar = _closure1_slot0;
        golf = _closure1_slot2;
        tango = 7;
        tango = golf[tango];
        report = undefined;
        tango = oscar.bind(report)(tango);
        tango = tango.withTiming;
        zulu['withTiming'] = tango;
        tango = 8;
        tango = golf[tango];
        tango = oscar.bind(report)(tango);
        tango = tango.timingStandard;
        zulu['timingStandard'] = tango;
        entity['__closure'] = zulu;
        zulu = 2327377243473.0;
        entity['__workletHash'] = zulu;
        mike = _closure1_slot10;
        entity['__initData'] = mike;
        return entity;
    };
    tango = tango.bind(entity)();
    var _closure1_slot11 = tango;
    tango = {};
    golf = 'function ExitingAnimation_AppLauncherOnboardingChatInputButtonAnimationTsx2(){const{withTiming,timingStandard}=this.__closure;const initialValues={opacity:1};const animations={opacity:withTiming(0,timingStandard)};return{initialValues:initialValues,animations:animations};}';
    tango['code'] = golf;
    var _closure1_slot12 = tango;
    tango = function() {
        entity = function() { // Original name: ExitingAnimation
            entity = {};
            mike = {};
            zulu = 1;
            mike['opacity'] = zulu;
            entity['initialValues'] = mike;
            mike = {};
            golf = _closure1_slot0;
            options = _closure1_slot2;
            zulu = 7;
            zulu = options[zulu];
            tango = undefined;
            oscar = golf.bind(tango)(zulu);
            report = oscar.withTiming;
            zulu = 8;
            zulu = options[zulu];
            zulu = golf.bind(tango)(zulu);
            tango = zulu.timingStandard;
            zulu = 0;
            zulu = report.bind(oscar)(zulu, tango);
            mike['opacity'] = zulu;
            entity['animations'] = mike;
            return entity;
        };
        zulu = {};
        oscar = _closure1_slot0;
        golf = _closure1_slot2;
        tango = 7;
        tango = golf[tango];
        report = undefined;
        tango = oscar.bind(report)(tango);
        tango = tango.withTiming;
        zulu['withTiming'] = tango;
        tango = 8;
        tango = golf[tango];
        tango = oscar.bind(report)(tango);
        tango = tango.timingStandard;
        zulu['timingStandard'] = tango;
        entity['__closure'] = zulu;
        zulu = 1065249287738.0;
        entity['__workletHash'] = zulu;
        mike = _closure1_slot12;
        entity['__initData'] = mike;
        return entity;
    };
    tango = tango.bind(entity)();
    var _closure1_slot13 = tango;
    tango = 16;
    tango = oscar[tango];
    oscar = report.bind(entity)(tango);
    report = oscar.fileFinishedImporting;
    tango = 'modules/app_launcher/native/onboarding/AppLauncherOnboardingChatInputButtonAnimation.tsx';
    tango = report.bind(oscar)(tango);
    tango = 7000;
    zulu['APP_LAUNCHER_ONBOARDING_CHAT_INPUT_BUTTON_ANIMATION_DURATION_MS'] = tango;
    mike = function(argFoo) { // Original name: AppLauncherOnboardingChatInputButtonAnimation
        entity = argFoo;
        zulu = entity.channelId;
        entity = _closure1_slot9;
        tango = undefined;
        offset = entity.bind(tango)();
        yankee = _closure1_slot0;
        romeo = _closure1_slot2;
        entity = 9;
        entity = romeo[entity];
        oscar = yankee.bind(tango)(entity);
        report = oscar.useStateFromStores;
        entity = _closure1_slot5;
        mike = new Array(1);
        mike[0] = entity;
        entity = function() {
            entity = _closure1_slot5;
            entity = entity.useReducedMotion;
            return entity;
        };
        verify = report.bind(oscar)(mike, entity);
        entity = 10;
        entity = romeo[entity];
        mike = yankee.bind(tango)(entity);
        entity = mike.useGradientBottom;
        echo = entity.bind(mike)();
        golf = _closure1_slot1;
        entity = 11;
        entity = romeo[entity];
        mike = golf.bind(tango)(entity);
        entity = {};
        entity['channelId'] = zulu;
        entity = mike.bind(tango)(entity);
        zulu = _closure1_slot7;
        mike = _closure1_slot8;
        entity = {};
        report = 12;
        report = romeo[report];
        report = golf.bind(tango)(report);
        backup = report.View;
        report = {};
        oscar = _closure1_slot11;
        report['entering'] = oscar;
        oscar = _closure1_slot13;
        report['exiting'] = oscar;
        oscar = _closure1_slot4;
        oscar = oscar.absoluteFill;
        report['style'] = oscar;
        foxtrot = false;
        report['collapsable'] = foxtrot;
        options = _closure1_slot6;
        oscar = 13;
        kilo = romeo[oscar];
        output = golf.bind(tango)(kilo);
        kilo = {};
        kilo['collapsable'] = foxtrot;
        result = offset.glowLottie;
        kilo['style'] = result;
        result = 14;
        result = romeo[result];
        result = yankee.bind(tango)(result);
        kilo['source'] = result;
        result = !verify;
        kilo['autoPlay'] = result;
        output = options.bind(tango)(output, kilo);
        kilo = new Array(3);
        kilo[0] = output;
        output = _closure1_slot3;
        sizing = {};
        sizing['collapsable'] = foxtrot;
        update = offset.glowMask;
        result = new Array(2);
        result[0] = update;
        result[1] = echo;
        sizing['style'] = result;
        sizing = options.bind(tango)(output, sizing);
        kilo[1] = sizing;
        sizing = {};
        sizing['collapsable'] = foxtrot;
        result = offset.fakeButton;
        sizing['style'] = result;
        sizing = options.bind(tango)(output, sizing);
        kilo[2] = sizing;
        report['children'] = kilo;
        backup = zulu.bind(tango)(backup, report);
        report = new Array(2);
        report[0] = backup;
        oscar = romeo[oscar];
        golf = golf.bind(tango)(oscar);
        oscar = {};
        oscar['collapsable'] = foxtrot;
        offset = offset.trinketsLottie;
        oscar['style'] = offset;
        offset = 15;
        offset = romeo[offset];
        offset = yankee.bind(tango)(offset);
        oscar['source'] = offset;
        verify = !verify;
        oscar['autoPlay'] = verify;
        oscar = options.bind(tango)(golf, oscar);
        report[1] = oscar;
        entity['children'] = report;
        entity = zulu.bind(tango)(mike, entity);
        return entity;
    };
    zulu['AppLauncherOnboardingChatInputButtonAnimation'] = mike;
    return entity;
})();