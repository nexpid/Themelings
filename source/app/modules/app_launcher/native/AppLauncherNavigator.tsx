// app/modules/app_launcher/native/AppLauncherNavigator.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    report = argBar;
    romeon = argBaz;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    var _closure1_slot1 = romeon;
    var _closure1_slot2 = oscard;
    entity = ['initialRouteName'];
    var _closure1_slot3 = entity;
    entity = global;
    option = entity.Object;
    golfie = option.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(option)(zuuluu, entity, tangon);
    entity = 0;
    tangon = oscard[entity];
    entity = undefined;
    tangon = romeon.bind(entity)(tangon);
    var _closure1_slot4 = tangon;
    tangon = 1;
    golfie = oscard[tangon];
    tangon = argCor;
    golfie = tangon.bind(entity)(golfie);
    var _closure1_slot5 = golfie;
    tangon = 2;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.AppLauncherRouteName;
    var _closure1_slot6 = tangon;
    tangon = 3;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.AnalyticEvents;
    var _closure1_slot7 = tangon;
    tangon = 4;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    option = tangon.jsx;
    var _closure1_slot8 = option;
    tangon = tangon.jsxs;
    var _closure1_slot9 = tangon;
    tangon = 5;
    tangon = oscard[tangon];
    option = report.bind(entity)(tangon);
    tangon = option.createNativeStackNavigator;
    tangon = tangon.bind(option)();
    var _closure1_slot10 = tangon;
    tangon = 6;
    tangon = oscard[tangon];
    verify = report.bind(entity)(tangon);
    option = verify.createStyles;
    tangon = {};
    offset = {'backgroundColor': null, 'paddingTop': 16, 'overflow': 'visible', 'flex': 1};
    yankee = 7;
    yankee = oscard[yankee];
    yankee = romeon.bind(entity)(yankee);
    yankee = yankee.colors;
    yankee = yankee.BG_BASE_SECONDARY;
    offset['backgroundColor'] = yankee;
    tangon['navigator'] = offset;
    tangon = option.bind(verify)(tangon);
    var _closure1_slot11 = tangon;
    tangon = golfie.memo;
    michal = function(argFoo) { // Original name: AppLauncherNavigator
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            entity = argFoo;
            foxtra = entity.bottomSheetExpandReasonRef;
            record = entity.context;
            romeon = entity.chatInputRef;
            vacuum = entity.contentStyle;
            yankee = entity.entrypoint;
            var _closure2_slot0 = yankee;
            cntext = entity.expandBottomSheet;
            verify = entity.keyboardCloseReasonRef;
            option = entity.onActivityItemSelected;
            golfie = entity.width;
            report = entity.overrideParams;
            offset = _closure1_slot1;
            kiloes = _closure1_slot2;
            backup = 8;
            zuuluu = kiloes[backup];
            tangon = undefined;
            oscard = offset.bind(tangon)(zuuluu);
            zuuluu = 9;
            zuuluu = kiloes[zuuluu];
            zuuluu = offset.bind(tangon)(zuuluu);
            zuuluu = zuuluu.APP_LAUNCHER;
            zuuluu = oscard.bind(tangon)(zuuluu);
            sizing = zuuluu.analyticsLocations;
            zuuluu = _closure1_slot11;
            ctrled = zuuluu.bind(tangon)();
            offset = _closure1_slot0;
            zuuluu = 10;
            zuuluu = kiloes[zuuluu];
            output = offset.bind(tangon)(zuuluu);
            oscard = output.useKeyboardContextForType;
            zuuluu = 11;
            zuuluu = kiloes[zuuluu];
            zuuluu = offset.bind(tangon)(zuuluu);
            zuuluu = zuuluu.KeyboardTypes;
            zuuluu = zuuluu.APP_LAUNCHER;
            zuuluu = oscard.bind(output)(zuuluu);
            oscard = 12;
            oscard = kiloes[oscard];
            offset = offset.bind(tangon)(oscard);
            oscard = offset.useAccessibilityNativeStackOptions;
            source = oscard.bind(offset)();
            offset = null;
            kiloes = zuuluu;
            if(!(offset != report)) { _fun00002_ip = 216; continue _fun00001 }
 213:
            kiloes = report;
 216:
            papara = kiloes.initialRouteName;
            oscard = _closure1_slot4;
            report = _closure1_slot3;
            sequen = oscard.bind(tangon)(kiloes, report);
            kiloes = _closure1_slot5;
            oscard = kiloes.useLayoutEffect;
            report = new Array(1);
            report[0] = yankee;
            michal = function() {
                tangon = _closure1_slot0;
                zuuluu = _closure1_slot2;
                entity = 13;
                zuuluu = zuuluu[entity];
                entity = undefined;
                report = tangon.bind(entity)(zuuluu);
                tangon = report.trackWithMetadata;
                michal = _closure1_slot7;
                zuuluu = michal.APPLICATION_COMMAND_TOP_OF_FUNNEL;
                michal = {};
                oscard = 'app_launcher';
                michal['location'] = oscard;
                oscard = _closure2_slot0;
                michal['source'] = oscard;
                michal = tangon.bind(report)(zuuluu, michal);
                return entity;
            };
            michal = oscard.bind(kiloes)(michal, report);
            oscard = _closure1_slot8;
            kiloes = _closure1_slot0;
            target = _closure1_slot2;
            michal = 14;
            michal = target[michal];
            michal = kiloes.bind(tangon)(michal);
            report = michal.NavigationContainer;
            michal = {};
            output = true;
            michal['independent'] = output;
            backup = target[backup];
            backup = kiloes.bind(tangon)(backup);
            kiloes = backup.AnalyticsLocationProvider;
            backup = {};
            backup['value'] = sizing;
            result = _closure1_slot9;
            update = _closure1_slot10;
            output = update.Navigator;
            sizing = {};
            sizing['initialRouteName'] = papara;
            echoed = {'contentStyle': null, 'headerShown': false, 'fullScreenGestureEnabled': true};
            config = ctrled.navigator;
            ctrled = new Array(2);
            ctrled[0] = config;
            ctrled[1] = vacuum;
            echoed['contentStyle'] = ctrled;
            limora = echoed;
            sierra = source;
            source = copyDataProperties(limora, sierra);
            sizing['screenOptions'] = echoed;
            source = update.Screen;
            echoed = {};
            vacuum = _closure1_slot6;
            ctrled = vacuum.HOME;
            echoed['name'] = ctrled;
            config = _closure1_slot1;
            ctrled = 15;
            ctrled = target[ctrled];
            ctrled = config.bind(tangon)(ctrled);
            echoed['component'] = ctrled;
            ctrled = {};
            ctrled['context'] = record;
            echoed['initialParams'] = ctrled;
            source = oscard.bind(tangon)(source, echoed);
            echoed = new Array(4);
            echoed[0] = source;
            source = update.Screen;
            update = {};
            ctrled = vacuum.APPLICATION_VIEW;
            update['name'] = ctrled;
            ctrled = 16;
            ctrled = target[ctrled];
            ctrled = config.bind(tangon)(ctrled);
            update['component'] = ctrled;
            ctrled = {};
            ctrled['context'] = record;
            config = vacuum.APPLICATION_VIEW;
            vacuum = sequen;
            if(!(papara !== config)) { _fun00002_ip = 525; continue _fun00001 }
 523:
            vacuum = {};
 525:
            limora = ctrled;
            sierra = vacuum;
            vacuum = copyDataProperties(limora, sierra);
            config = 'expandBottomSheet';
            ctrled[config] = cntext;
            update['initialParams'] = ctrled;
            update = oscard.bind(tangon)(source, update);
            echoed[1] = update;
            ctrled = _closure1_slot8;
            update = _closure1_slot10;
            source = update.Screen;
            update = {};
            vacuum = _closure1_slot6;
            vacuum = vacuum.COMMAND_VIEW;
            update['name'] = vacuum;
            papara = _closure1_slot1;
            target = _closure1_slot2;
            vacuum = 17;
            vacuum = target[vacuum];
            vacuum = papara.bind(tangon)(vacuum);
            update['component'] = vacuum;
            vacuum = {};
            status = record.type;
            target = 'channel';
            papara = undefined;
            if(!(target === status)) { _fun00002_ip = 634; continue _fun00001 }
 631:
            papara = record;
 634:
            vacuum['context'] = papara;
            status = zuuluu.initialRouteName;
            papara = _closure1_slot6;
            target = papara.COMMAND_VIEW;
            papara = sequen;
            if(!(status !== target)) { _fun00002_ip = 663; continue _fun00001 }
 661:
            papara = {};
 663:
            limora = vacuum;
            sierra = papara;
            papara = copyDataProperties(limora, sierra);
            vacuum[config] = cntext;
            update['initialParams'] = vacuum;
            update = ctrled.bind(tangon)(source, update);
            echoed[2] = update;
            ctrled = _closure1_slot8;
            update = _closure1_slot10;
            source = update.Screen;
            update = {};
            config = _closure1_slot6;
            vacuum = config.APP_LIST_VIEW;
            update['name'] = vacuum;
            cntext = _closure1_slot1;
            papara = _closure1_slot2;
            vacuum = 18;
            vacuum = papara[vacuum];
            vacuum = cntext.bind(tangon)(vacuum);
            update['component'] = vacuum;
            vacuum = {};
            vacuum['context'] = record;
            record = zuuluu.initialRouteName;
            config = config.APP_LIST_VIEW;
            if(!(record !== config)) { _fun00002_ip = 772; continue _fun00001 }
 770:
            sequen = {};
 772:
            limora = vacuum;
            sierra = sequen;
            sequen = copyDataProperties(limora, sierra);
            update['initialParams'] = vacuum;
            update = ctrled.bind(tangon)(source, update);
            echoed[3] = update;
            sizing['children'] = echoed;
            sizing = result.bind(tangon)(output, sizing);
            backup['children'] = sizing;
            backup = oscard.bind(tangon)(kiloes, backup);
            michal['children'] = backup;
            report = oscard.bind(tangon)(report, michal);
            michal = 'customId';
            michal = michal in zuuluu;
            if(michal) { _fun00002_ip = 846; continue _fun00001 }
 838:
            oscard = 'referrerId';
            michal = oscard in zuuluu;
 846:
            offset = null;
            if(!michal) { _fun00002_ip = 878; continue _fun00001 }
 851:
            michal = {};
            oscard = zuuluu.customId;
            michal['customId'] = oscard;
            zuuluu = zuuluu.referrerId;
            michal['referrerId'] = zuuluu;
            offset = michal;
 878:
            zuuluu = _closure1_slot8;
            michal = _closure1_slot0;
            oscard = _closure1_slot2;
            entity = 19;
            entity = oscard[entity];
            entity = michal.bind(tangon)(entity);
            entity = entity.AppLauncherContext;
            michal = entity.Provider;
            entity = {};
            oscard = {};
            oscard['bottomSheetExpandReasonRef'] = foxtra;
            oscard['chatInputRef'] = romeon;
            oscard['entrypoint'] = yankee;
            oscard['entrypointParams'] = offset;
            oscard['keyboardCloseReasonRef'] = verify;
            oscard['onActivityItemSelected'] = option;
            oscard['width'] = golfie;
            entity['value'] = oscard;
            entity['children'] = report;
            entity = zuuluu.bind(tangon)(michal, entity);
            return entity;
        }
    };
    michal = tangon.bind(golfie)(michal);
    tangon = 20;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/app_launcher/native/AppLauncherNavigator.tsx';
    tangon = report.bind(oscard)(tangon);
    zuuluu['default'] = michal;
    return entity;
})();