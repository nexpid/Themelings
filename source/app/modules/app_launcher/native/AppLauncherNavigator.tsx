// app/modules/app_launcher/native/AppLauncherNavigator.tsx
export default (function(argFoo, argBar, argBaz, argCorge, _, argFred, argPlugh) {
    report = argBar;
    romeo = argBaz;
    zulu = argFred;
    oscar = argPlugh;
    var _closure1_slot0 = report;
    var _closure1_slot1 = romeo;
    var _closure1_slot2 = oscar;
    entity = ['initialRouteName'];
    var _closure1_slot3 = entity;
    entity = global;
    options = entity.Object;
    golf = options.defineProperty;
    tango = {};
    entity = true;
    tango['value'] = entity;
    entity = '__esModule';
    entity = golf.bind(options)(zulu, entity, tango);
    entity = 0;
    tango = oscar[entity];
    entity = undefined;
    tango = romeo.bind(entity)(tango);
    var _closure1_slot4 = tango;
    tango = 1;
    golf = oscar[tango];
    tango = argCorge;
    golf = tango.bind(entity)(golf);
    var _closure1_slot5 = golf;
    tango = 2;
    tango = oscar[tango];
    tango = romeo.bind(entity)(tango);
    var _closure1_slot6 = tango;
    tango = 3;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.AppLauncherRouteName;
    var _closure1_slot7 = tango;
    tango = 4;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.AnalyticEvents;
    var _closure1_slot8 = tango;
    tango = 5;
    options = oscar[tango];
    options = report.bind(entity)(options);
    options = options.jsx;
    var _closure1_slot9 = options;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.jsxs;
    var _closure1_slot10 = tango;
    tango = 6;
    tango = oscar[tango];
    options = report.bind(entity)(tango);
    tango = options.createNativeStackNavigator;
    tango = tango.bind(options)();
    var _closure1_slot11 = tango;
    tango = 7;
    tango = oscar[tango];
    verify = report.bind(entity)(tango);
    options = verify.createStyles;
    tango = {};
    offset = {'backgroundColor': null, 'paddingTop': 16, 'overflow': 'visible', 'flex': 1};
    yankee = 8;
    yankee = oscar[yankee];
    yankee = romeo.bind(entity)(yankee);
    yankee = yankee.colors;
    yankee = yankee.BG_BASE_SECONDARY;
    offset['backgroundColor'] = yankee;
    tango['navigator'] = offset;
    tango = options.bind(verify)(tango);
    var _closure1_slot12 = tango;
    tango = golf.memo;
    mike = function(argFoo) { // Original name: AppLauncherNavigator
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            entity = argFoo;
            foxtrot = entity.bottomSheetExpandReasonRef;
            config = entity.channelId;
            romeo = entity.chatInputRef;
            control = entity.contentStyle;
            yankee = entity.entrypoint;
            var _closure2_slot0 = yankee;
            record = entity.expandBottomSheet;
            verify = entity.keyboardCloseReasonRef;
            options = entity.onActivityItemSelected;
            golf = entity.width;
            sequence = _closure1_slot1;
            papa = _closure1_slot2;
            offset = 9;
            zulu = papa[offset];
            tango = undefined;
            report = sequence.bind(tango)(zulu);
            zulu = 10;
            zulu = papa[zulu];
            zulu = sequence.bind(tango)(zulu);
            zulu = zulu.APP_LAUNCHER;
            zulu = report.bind(tango)(zulu);
            kilo = zulu.analyticsLocations;
            zulu = _closure1_slot12;
            source = zulu.bind(tango)();
            backup = _closure1_slot0;
            zulu = 11;
            zulu = papa[zulu];
            sizing = backup.bind(tango)(zulu);
            oscar = sizing.useStateFromStores;
            zulu = _closure1_slot6;
            report = new Array(1);
            report[0] = zulu;
            zulu = function() {
                entity = _closure1_slot6;
                entity = entity.appLauncherKeyboardParams;
                return entity;
            };
            zulu = oscar.bind(sizing)(report, zulu);
            report = 12;
            report = papa[report];
            oscar = backup.bind(tango)(report);
            report = oscar.useAccessibilityNativeStackOptions;
            update = report.bind(oscar)();
            context = zulu.initialRouteName;
            oscar = _closure1_slot4;
            report = _closure1_slot3;
            vacuum = oscar.bind(tango)(zulu, report);
            sizing = _closure1_slot5;
            oscar = sizing.useLayoutEffect;
            report = new Array(1);
            report[0] = yankee;
            mike = function() {
                tango = _closure1_slot0;
                zulu = _closure1_slot2;
                entity = 13;
                zulu = zulu[entity];
                entity = undefined;
                report = tango.bind(entity)(zulu);
                tango = report.trackWithMetadata;
                mike = _closure1_slot8;
                zulu = mike.APPLICATION_COMMAND_TOP_OF_FUNNEL;
                mike = {};
                oscar = 'app_launcher';
                mike['location'] = oscar;
                oscar = _closure2_slot0;
                mike['source'] = oscar;
                mike = tango.bind(report)(zulu, mike);
                return entity;
            };
            mike = oscar.bind(sizing)(mike, report);
            oscar = _closure1_slot9;
            mike = 14;
            mike = papa[mike];
            mike = backup.bind(tango)(mike);
            report = mike.NavigationContainer;
            mike = {};
            sizing = true;
            mike['independent'] = sizing;
            offset = papa[offset];
            offset = backup.bind(tango)(offset);
            backup = offset.AnalyticsLocationProvider;
            offset = {};
            offset['value'] = kilo;
            output = _closure1_slot10;
            echo = _closure1_slot11;
            sizing = echo.Navigator;
            kilo = {};
            kilo['initialRouteName'] = context;
            result = {'contentStyle': null, 'headerShown': false, 'fullScreenGestureEnabled': true};
            target = source.navigator;
            source = new Array(2);
            source[0] = target;
            source[1] = control;
            result['contentStyle'] = source;
            sierra = result;
            status = update;
            update = copyDataProperties(sierra, status);
            kilo['screenOptions'] = result;
            update = echo.Screen;
            result = {};
            control = _closure1_slot7;
            source = control.HOME;
            result['name'] = source;
            source = 15;
            source = papa[source];
            source = sequence.bind(tango)(source);
            result['component'] = source;
            source = {};
            source['channelId'] = config;
            result['initialParams'] = source;
            update = oscar.bind(tango)(update, result);
            result = new Array(4);
            result[0] = update;
            update = echo.Screen;
            echo = {};
            source = control.APPLICATION_VIEW;
            echo['name'] = source;
            source = 16;
            source = papa[source];
            source = sequence.bind(tango)(source);
            echo['component'] = source;
            source = {};
            source['channelId'] = config;
            sequence = control.APPLICATION_VIEW;
            control = vacuum;
            if(!(context !== sequence)) { _fun00002_ip = 484; continue _fun00001 }
 482:
            control = {};
 484:
            sierra = source;
            status = control;
            control = copyDataProperties(sierra, status);
            sequence = 'expandBottomSheet';
            source[sequence] = record;
            echo['initialParams'] = source;
            echo = oscar.bind(tango)(update, echo);
            result[1] = echo;
            source = _closure1_slot9;
            echo = _closure1_slot11;
            update = echo.Screen;
            echo = {};
            context = _closure1_slot7;
            control = context.COMMAND_VIEW;
            echo['name'] = control;
            papa = _closure1_slot1;
            target = _closure1_slot2;
            control = 17;
            control = target[control];
            control = papa.bind(tango)(control);
            echo['component'] = control;
            control = {};
            control['channelId'] = config;
            target = zulu.initialRouteName;
            papa = context.COMMAND_VIEW;
            context = vacuum;
            if(!(target !== papa)) { _fun00002_ip = 600; continue _fun00001 }
 598:
            context = {};
 600:
            sierra = control;
            status = context;
            context = copyDataProperties(sierra, status);
            control[sequence] = record;
            echo['initialParams'] = control;
            echo = source.bind(tango)(update, echo);
            result[2] = echo;
            source = _closure1_slot9;
            echo = _closure1_slot11;
            update = echo.Screen;
            echo = {};
            sequence = _closure1_slot7;
            control = sequence.APP_LIST_VIEW;
            echo['name'] = control;
            record = _closure1_slot1;
            context = _closure1_slot2;
            control = 18;
            control = context[control];
            control = record.bind(tango)(control);
            echo['component'] = control;
            control = {};
            control['channelId'] = config;
            config = zulu.initialRouteName;
            sequence = sequence.APP_LIST_VIEW;
            if(!(config !== sequence)) { _fun00002_ip = 709; continue _fun00001 }
 707:
            vacuum = {};
 709:
            sierra = control;
            status = vacuum;
            vacuum = copyDataProperties(sierra, status);
            echo['initialParams'] = control;
            echo = source.bind(tango)(update, echo);
            result[3] = echo;
            kilo['children'] = result;
            kilo = output.bind(tango)(sizing, kilo);
            offset['children'] = kilo;
            offset = oscar.bind(tango)(backup, offset);
            mike['children'] = offset;
            report = oscar.bind(tango)(report, mike);
            mike = 'customId';
            mike = mike in zulu;
            if(mike) { _fun00002_ip = 783; continue _fun00001 }
 775:
            oscar = 'referrerId';
            mike = oscar in zulu;
 783:
            offset = null;
            if(!mike) { _fun00002_ip = 815; continue _fun00001 }
 788:
            mike = {};
            oscar = zulu.customId;
            mike['customId'] = oscar;
            zulu = zulu.referrerId;
            mike['referrerId'] = zulu;
            offset = mike;
 815:
            zulu = _closure1_slot9;
            mike = _closure1_slot0;
            oscar = _closure1_slot2;
            entity = 19;
            entity = oscar[entity];
            entity = mike.bind(tango)(entity);
            entity = entity.AppLauncherContext;
            mike = entity.Provider;
            entity = {};
            oscar = {};
            oscar['bottomSheetExpandReasonRef'] = foxtrot;
            oscar['chatInputRef'] = romeo;
            oscar['entrypoint'] = yankee;
            oscar['entrypointParams'] = offset;
            oscar['keyboardCloseReasonRef'] = verify;
            oscar['onActivityItemSelected'] = options;
            oscar['width'] = golf;
            entity['value'] = oscar;
            entity['children'] = report;
            entity = zulu.bind(tango)(mike, entity);
            return entity;
        }
    };
    mike = tango.bind(golf)(mike);
    tango = 20;
    tango = oscar[tango];
    oscar = report.bind(entity)(tango);
    report = oscar.fileFinishedImporting;
    tango = 'modules/app_launcher/native/AppLauncherNavigator.tsx';
    tango = report.bind(oscar)(tango);
    zulu['default'] = mike;
    return entity;
})();