// app/modules/app_launcher/native/AppLauncherNavigator.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    report = argBar;
    romeon = argBaz;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    var _closure1_slot1 = romeon;
    var _closure1_slot2 = oscard;
    entity = ['initialRouteName'];
    var _closure1_slot3 = entity;
    entity = global;
    option = entity.Object;
    golfie = option.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(option)(zuuluu, entity, tangon);
    entity = 0;
    tangon = oscard[entity];
    entity = undefined;
    tangon = romeon.bind(entity)(tangon);
    var _closure1_slot4 = tangon;
    tangon = 1;
    golfie = oscard[tangon];
    tangon = argCor;
    golfie = tangon.bind(entity)(golfie);
    var _closure1_slot5 = golfie;
    tangon = 2;
    tangon = oscard[tangon];
    tangon = romeon.bind(entity)(tangon);
    var _closure1_slot6 = tangon;
    tangon = 3;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.AppLauncherRouteName;
    var _closure1_slot7 = tangon;
    tangon = 4;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.AnalyticEvents;
    var _closure1_slot8 = tangon;
    tangon = 5;
    option = oscard[tangon];
    option = report.bind(entity)(option);
    option = option.jsx;
    var _closure1_slot9 = option;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.jsxs;
    var _closure1_slot10 = tangon;
    tangon = 6;
    tangon = oscard[tangon];
    option = report.bind(entity)(tangon);
    tangon = option.createNativeStackNavigator;
    tangon = tangon.bind(option)();
    var _closure1_slot11 = tangon;
    tangon = 7;
    tangon = oscard[tangon];
    verify = report.bind(entity)(tangon);
    option = verify.createStyles;
    tangon = {};
    offset = {'backgroundColor': null, 'paddingTop': 16, 'overflow': 'visible', 'flex': 1};
    yankee = 8;
    yankee = oscard[yankee];
    yankee = romeon.bind(entity)(yankee);
    yankee = yankee.colors;
    yankee = yankee.BG_BASE_SECONDARY;
    offset['backgroundColor'] = yankee;
    tangon['navigator'] = offset;
    tangon = option.bind(verify)(tangon);
    var _closure1_slot12 = tangon;
    tangon = golfie.memo;
    michal = function(argFoo) { // Original name: AppLauncherNavigator
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            entity = argFoo;
            foxtra = entity.bottomSheetExpandReasonRef;
            config = entity.channelId;
            romeon = entity.chatInputRef;
            ctrled = entity.contentStyle;
            yankee = entity.entrypoint;
            var _closure2_slot0 = yankee;
            record = entity.expandBottomSheet;
            verify = entity.keyboardCloseReasonRef;
            option = entity.onActivityItemSelected;
            golfie = entity.width;
            sequen = _closure1_slot1;
            papara = _closure1_slot2;
            offset = 9;
            zuuluu = papara[offset];
            tangon = undefined;
            report = sequen.bind(tangon)(zuuluu);
            zuuluu = 10;
            zuuluu = papara[zuuluu];
            zuuluu = sequen.bind(tangon)(zuuluu);
            zuuluu = zuuluu.APP_LAUNCHER;
            zuuluu = report.bind(tangon)(zuuluu);
            kiloes = zuuluu.analyticsLocations;
            zuuluu = _closure1_slot12;
            source = zuuluu.bind(tangon)();
            backup = _closure1_slot0;
            zuuluu = 11;
            zuuluu = papara[zuuluu];
            sizing = backup.bind(tangon)(zuuluu);
            oscard = sizing.useStateFromStores;
            zuuluu = _closure1_slot6;
            report = new Array(1);
            report[0] = zuuluu;
            zuuluu = function() {
                entity = _closure1_slot6;
                entity = entity.appLauncherKeyboardParams;
                return entity;
            };
            zuuluu = oscard.bind(sizing)(report, zuuluu);
            report = 12;
            report = papara[report];
            oscard = backup.bind(tangon)(report);
            report = oscard.useAccessibilityNativeStackOptions;
            update = report.bind(oscard)();
            cntext = zuuluu.initialRouteName;
            oscard = _closure1_slot4;
            report = _closure1_slot3;
            vacuum = oscard.bind(tangon)(zuuluu, report);
            sizing = _closure1_slot5;
            oscard = sizing.useLayoutEffect;
            report = new Array(1);
            report[0] = yankee;
            michal = function() {
                tangon = _closure1_slot0;
                zuuluu = _closure1_slot2;
                entity = 13;
                zuuluu = zuuluu[entity];
                entity = undefined;
                report = tangon.bind(entity)(zuuluu);
                tangon = report.trackWithMetadata;
                michal = _closure1_slot8;
                zuuluu = michal.APPLICATION_COMMAND_TOP_OF_FUNNEL;
                michal = {};
                oscard = 'app_launcher';
                michal['location'] = oscard;
                oscard = _closure2_slot0;
                michal['source'] = oscard;
                michal = tangon.bind(report)(zuuluu, michal);
                return entity;
            };
            michal = oscard.bind(sizing)(michal, report);
            oscard = _closure1_slot9;
            michal = 14;
            michal = papara[michal];
            michal = backup.bind(tangon)(michal);
            report = michal.NavigationContainer;
            michal = {};
            sizing = true;
            michal['independent'] = sizing;
            offset = papara[offset];
            offset = backup.bind(tangon)(offset);
            backup = offset.AnalyticsLocationProvider;
            offset = {};
            offset['value'] = kiloes;
            output = _closure1_slot10;
            echoed = _closure1_slot11;
            sizing = echoed.Navigator;
            kiloes = {};
            kiloes['initialRouteName'] = cntext;
            result = {'contentStyle': null, 'headerShown': false, 'fullScreenGestureEnabled': true};
            target = source.navigator;
            source = new Array(2);
            source[0] = target;
            source[1] = ctrled;
            result['contentStyle'] = source;
            sierra = result;
            status = update;
            update = copyDataProperties(sierra, status);
            kiloes['screenOptions'] = result;
            update = echoed.Screen;
            result = {};
            ctrled = _closure1_slot7;
            source = ctrled.HOME;
            result['name'] = source;
            source = 15;
            source = papara[source];
            source = sequen.bind(tangon)(source);
            result['component'] = source;
            source = {};
            source['channelId'] = config;
            result['initialParams'] = source;
            update = oscard.bind(tangon)(update, result);
            result = new Array(4);
            result[0] = update;
            update = echoed.Screen;
            echoed = {};
            source = ctrled.APPLICATION_VIEW;
            echoed['name'] = source;
            source = 16;
            source = papara[source];
            source = sequen.bind(tangon)(source);
            echoed['component'] = source;
            source = {};
            source['channelId'] = config;
            sequen = ctrled.APPLICATION_VIEW;
            ctrled = vacuum;
            if(!(cntext !== sequen)) { _fun00002_ip = 484; continue _fun00001 }
 482:
            ctrled = {};
 484:
            sierra = source;
            status = ctrled;
            ctrled = copyDataProperties(sierra, status);
            sequen = 'expandBottomSheet';
            source[sequen] = record;
            echoed['initialParams'] = source;
            echoed = oscard.bind(tangon)(update, echoed);
            result[1] = echoed;
            source = _closure1_slot9;
            echoed = _closure1_slot11;
            update = echoed.Screen;
            echoed = {};
            cntext = _closure1_slot7;
            ctrled = cntext.COMMAND_VIEW;
            echoed['name'] = ctrled;
            papara = _closure1_slot1;
            target = _closure1_slot2;
            ctrled = 17;
            ctrled = target[ctrled];
            ctrled = papara.bind(tangon)(ctrled);
            echoed['component'] = ctrled;
            ctrled = {};
            ctrled['channelId'] = config;
            target = zuuluu.initialRouteName;
            papara = cntext.COMMAND_VIEW;
            cntext = vacuum;
            if(!(target !== papara)) { _fun00002_ip = 600; continue _fun00001 }
 598:
            cntext = {};
 600:
            sierra = ctrled;
            status = cntext;
            cntext = copyDataProperties(sierra, status);
            ctrled[sequen] = record;
            echoed['initialParams'] = ctrled;
            echoed = source.bind(tangon)(update, echoed);
            result[2] = echoed;
            source = _closure1_slot9;
            echoed = _closure1_slot11;
            update = echoed.Screen;
            echoed = {};
            sequen = _closure1_slot7;
            ctrled = sequen.APP_LIST_VIEW;
            echoed['name'] = ctrled;
            record = _closure1_slot1;
            cntext = _closure1_slot2;
            ctrled = 18;
            ctrled = cntext[ctrled];
            ctrled = record.bind(tangon)(ctrled);
            echoed['component'] = ctrled;
            ctrled = {};
            ctrled['channelId'] = config;
            config = zuuluu.initialRouteName;
            sequen = sequen.APP_LIST_VIEW;
            if(!(config !== sequen)) { _fun00002_ip = 709; continue _fun00001 }
 707:
            vacuum = {};
 709:
            sierra = ctrled;
            status = vacuum;
            vacuum = copyDataProperties(sierra, status);
            echoed['initialParams'] = ctrled;
            echoed = source.bind(tangon)(update, echoed);
            result[3] = echoed;
            kiloes['children'] = result;
            kiloes = output.bind(tangon)(sizing, kiloes);
            offset['children'] = kiloes;
            offset = oscard.bind(tangon)(backup, offset);
            michal['children'] = offset;
            report = oscard.bind(tangon)(report, michal);
            michal = 'customId';
            michal = michal in zuuluu;
            if(michal) { _fun00002_ip = 783; continue _fun00001 }
 775:
            oscard = 'referrerId';
            michal = oscard in zuuluu;
 783:
            offset = null;
            if(!michal) { _fun00002_ip = 815; continue _fun00001 }
 788:
            michal = {};
            oscard = zuuluu.customId;
            michal['customId'] = oscard;
            zuuluu = zuuluu.referrerId;
            michal['referrerId'] = zuuluu;
            offset = michal;
 815:
            zuuluu = _closure1_slot9;
            michal = _closure1_slot0;
            oscard = _closure1_slot2;
            entity = 19;
            entity = oscard[entity];
            entity = michal.bind(tangon)(entity);
            entity = entity.AppLauncherContext;
            michal = entity.Provider;
            entity = {};
            oscard = {};
            oscard['bottomSheetExpandReasonRef'] = foxtra;
            oscard['chatInputRef'] = romeon;
            oscard['entrypoint'] = yankee;
            oscard['entrypointParams'] = offset;
            oscard['keyboardCloseReasonRef'] = verify;
            oscard['onActivityItemSelected'] = option;
            oscard['width'] = golfie;
            entity['value'] = oscard;
            entity['children'] = report;
            entity = zuuluu.bind(tangon)(michal, entity);
            return entity;
        }
    };
    michal = tangon.bind(golfie)(michal);
    tangon = 20;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/app_launcher/native/AppLauncherNavigator.tsx';
    tangon = report.bind(oscard)(tangon);
    zuuluu['default'] = michal;
    return entity;
})();