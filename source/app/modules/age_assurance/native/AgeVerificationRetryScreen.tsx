// app/modules/age_assurance/native/AgeVerificationRetryScreen.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    report = argBar;
    yankee = argBaz;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    var _closure1_slot1 = yankee;
    var _closure1_slot2 = oscard;
    entity = global;
    option = entity.Object;
    golfie = option.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(option)(zuuluu, entity, tangon);
    entity = 0;
    golfie = oscard[entity];
    tangon = argCor;
    entity = undefined;
    tangon = tangon.bind(entity)(golfie);
    var _closure1_slot3 = tangon;
    romeon = 1;
    tangon = oscard[romeon];
    tangon = report.bind(entity)(tangon);
    golfie = tangon.ActivityIndicator;
    var _closure1_slot4 = golfie;
    golfie = tangon.Image;
    var _closure1_slot5 = golfie;
    golfie = tangon.ScrollView;
    var _closure1_slot6 = golfie;
    tangon = tangon.View;
    var _closure1_slot7 = tangon;
    tangon = 2;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.HelpdeskArticles;
    var _closure1_slot8 = tangon;
    tangon = 3;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.SafetyHubLinks;
    var _closure1_slot9 = tangon;
    tangon = 4;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    golfie = tangon.jsx;
    var _closure1_slot10 = golfie;
    golfie = tangon.jsxs;
    var _closure1_slot11 = golfie;
    tangon = tangon.Fragment;
    var _closure1_slot12 = tangon;
    tangon = 5;
    tangon = oscard[tangon];
    option = report.bind(entity)(tangon);
    golfie = option.createStyles;
    tangon = {};
    verify = {'position': 'absolute', 'top': 0, 'left': 0, 'right': 0, 'bottom': 0, 'zIndex': 1};
    tangon['loadingIndicator'] = verify;
    verify = {};
    offset = 6;
    foxtra = oscard[offset];
    foxtra = yankee.bind(entity)(foxtra);
    foxtra = foxtra.spacing;
    foxtra = foxtra.PX_16;
    verify['paddingHorizontal'] = foxtra;
    verify['flex'] = romeon;
    tangon['container'] = verify;
    verify = {};
    romeon = oscard[offset];
    romeon = yankee.bind(entity)(romeon);
    romeon = romeon.spacing;
    romeon = romeon.PX_16;
    verify['paddingVertical'] = romeon;
    romeon = 'center';
    verify['alignItems'] = romeon;
    foxtra = oscard[offset];
    foxtra = yankee.bind(entity)(foxtra);
    foxtra = foxtra.spacing;
    foxtra = foxtra.PX_8;
    verify['gap'] = foxtra;
    tangon['headerContainer'] = verify;
    verify = {'width': 73, 'height': 86};
    tangon['safetyShieldIcon'] = verify;
    verify = {};
    verify['textAlign'] = romeon;
    tangon['centerText'] = verify;
    verify = {};
    offset = oscard[offset];
    offset = yankee.bind(entity)(offset);
    offset = offset.spacing;
    offset = offset.PX_8;
    verify['marginTop'] = offset;
    tangon['helpLink'] = verify;
    tangon = golfie.bind(option)(tangon);
    var _closure1_slot13 = tangon;
    tangon = 17;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/age_assurance/native/AgeVerificationRetryScreen.tsx';
    tangon = report.bind(oscard)(tangon);
    michal = function(argFoo) { // Original name: GetStartedScreen
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            entity = argFoo;
            report = entity.onClose;
            entity = entity.modalSessionId;
            var _closure2_slot0 = entity;
            michal = _closure1_slot13;
            tangon = undefined;
            sizing = michal.bind(tangon)();
            zuuluu = _closure1_slot0;
            oscard = _closure1_slot2;
            michal = 7;
            michal = oscard[michal];
            zuuluu = zuuluu.bind(tangon)(michal);
            michal = zuuluu.useInitiateAgeVerification;
            michal = michal.bind(zuuluu)(report);
            oscard = michal.loading;
            golfie = michal.initiateAgeVerification;
            var _closure2_slot1 = golfie;
            report = _closure1_slot3;
            zuuluu = report.useMemo;
            michal = new Array(2);
            michal[0] = golfie;
            michal[1] = entity;
            entity = function() {
                michal = {};
                option = _closure1_slot0;
                verify = _closure1_slot2;
                tangon = 8;
                entity = verify[tangon];
                golfie = undefined;
                entity = option.bind(golfie)(entity);
                oscard = entity.intl;
                report = oscard.string;
                entity = verify[tangon];
                entity = option.bind(golfie)(entity);
                entity = entity.t;
                entity = entity.RtOE1t;
                entity = report.bind(oscard)(entity);
                michal['title'] = entity;
                entity = verify[tangon];
                entity = option.bind(golfie)(entity);
                oscard = entity.intl;
                report = oscard.string;
                entity = verify[tangon];
                entity = option.bind(golfie)(entity);
                entity = entity.t;
                entity = entity.ecdUKC;
                entity = report.bind(oscard)(entity);
                michal['description'] = entity;
                entity = function() { // Original name: onPress
                    michal = _closure2_slot1;
                    entity = undefined;
                    michal = michal.bind(entity)();
                    golfie = _closure1_slot0;
                    option = _closure1_slot2;
                    michal = 9;
                    tangon = option[michal];
                    oscard = golfie.bind(entity)(tangon);
                    report = oscard.trackAgeVerificationModalClicked;
                    tangon = _closure2_slot0;
                    zuuluu = option[michal];
                    zuuluu = golfie.bind(entity)(zuuluu);
                    zuuluu = zuuluu.AgeVerificationModalVersion;
                    zuuluu = zuuluu.RETRY;
                    michal = option[michal];
                    michal = golfie.bind(entity)(michal);
                    michal = michal.AgeVerificationModalCta;
                    michal = michal.GET_STARTED;
                    michal = report.bind(oscard)(tangon, zuuluu, michal);
                    return entity;
                };
                michal['onPress'] = entity;
                entity = new Array(2);
                entity[0] = michal;
                michal = {};
                report = verify[tangon];
                report = option.bind(golfie)(report);
                offset = report.intl;
                oscard = offset.string;
                report = verify[tangon];
                report = option.bind(golfie)(report);
                report = report.t;
                report = report.LZO+HR;
                report = oscard.bind(offset)(report);
                michal['title'] = report;
                report = verify[tangon];
                report = option.bind(golfie)(report);
                oscard = report.intl;
                report = oscard.string;
                tangon = verify[tangon];
                tangon = option.bind(golfie)(tangon);
                tangon = tangon.t;
                tangon = tangon.ty+iWF;
                tangon = report.bind(oscard)(tangon);
                michal['description'] = tangon;
                zuuluu = function() { // Original name: onPress
                    tangon = _closure1_slot1;
                    option = _closure1_slot2;
                    entity = 10;
                    zuuluu = option[entity];
                    entity = undefined;
                    report = tangon.bind(entity)(zuuluu);
                    tangon = report.openUrl;
                    zuuluu = _closure1_slot9;
                    zuuluu = zuuluu.APPEALS_LINK;
                    zuuluu = tangon.bind(report)(zuuluu);
                    golfie = _closure1_slot0;
                    michal = 9;
                    zuuluu = option[michal];
                    oscard = golfie.bind(entity)(zuuluu);
                    report = oscard.trackAgeVerificationModalClicked;
                    tangon = _closure2_slot0;
                    zuuluu = option[michal];
                    zuuluu = golfie.bind(entity)(zuuluu);
                    zuuluu = zuuluu.AgeVerificationModalVersion;
                    zuuluu = zuuluu.RETRY;
                    michal = option[michal];
                    michal = golfie.bind(entity)(michal);
                    michal = michal.AgeVerificationModalCta;
                    michal = michal.MANUAL_REVIEW_REQUEST;
                    michal = report.bind(oscard)(tangon, zuuluu, michal);
                    return entity;
                };
                michal['onPress'] = zuuluu;
                entity[1] = michal;
                return entity;
            };
            source = zuuluu.bind(report)(entity, michal);
            zuuluu = _closure1_slot11;
            michal = _closure1_slot12;
            entity = {};
            if(!oscard) { _fun00002_ip = 231; continue _fun00001 }
 128:
            option = _closure1_slot10;
            golfie = _closure1_slot4;
            report = {};
            verify = sizing.loadingIndicator;
            report['style'] = verify;
            verify = 'small';
            report['size'] = verify;
            yankee = _closure1_slot0;
            romeon = _closure1_slot2;
            verify = 11;
            verify = romeon[verify];
            yankee = yankee.bind(tangon)(verify);
            verify = yankee.isAndroid;
            yankee = verify.bind(yankee)();
            verify = undefined;
            if(!yankee) { _fun00002_ip = 221; continue _fun00001 }
 190:
            romeon = _closure1_slot1;
            foxtra = _closure1_slot2;
            yankee = 6;
            yankee = foxtra[yankee];
            yankee = romeon.bind(tangon)(yankee);
            yankee = yankee.unsafe_rawColors;
            verify = yankee.WHITE_500;
 221:
            report['color'] = verify;
            oscard = option.bind(tangon)(golfie, report);
 231:
            report = new Array(2);
            report[0] = oscard;
            option = _closure1_slot11;
            golfie = _closure1_slot6;
            oscard = {};
            verify = sizing.container;
            oscard['style'] = verify;
            yankee = _closure1_slot7;
            verify = {};
            romeon = sizing.headerContainer;
            verify['style'] = romeon;
            romeon = _closure1_slot10;
            backup = _closure1_slot5;
            foxtra = {};
            kiloes = sizing.safetyShieldIcon;
            foxtra['style'] = kiloes;
            echoed = _closure1_slot1;
            result = _closure1_slot2;
            kiloes = 12;
            kiloes = result[kiloes];
            kiloes = echoed.bind(tangon)(kiloes);
            foxtra['source'] = kiloes;
            kiloes = 'contain';
            foxtra['resizeMode'] = kiloes;
            foxtra = romeon.bind(tangon)(backup, foxtra);
            kiloes = new Array(3);
            kiloes[0] = foxtra;
            backup = _closure1_slot0;
            offset = 13;
            foxtra = result[offset];
            foxtra = backup.bind(tangon)(foxtra);
            update = foxtra.Text;
            echoed = {'variant': 'heading-xl/bold', 'color': 'header-primary'};
            foxtra = sizing.centerText;
            echoed['style'] = foxtra;
            foxtra = 8;
            ctrled = result[foxtra];
            ctrled = backup.bind(tangon)(ctrled);
            sequen = ctrled.intl;
            vacuum = sequen.string;
            ctrled = result[foxtra];
            ctrled = backup.bind(tangon)(ctrled);
            ctrled = ctrled.t;
            ctrled = ctrled.5l3R/v;
            ctrled = vacuum.bind(sequen)(ctrled);
            echoed['children'] = ctrled;
            echoed = romeon.bind(tangon)(update, echoed);
            kiloes[1] = echoed;
            echoed = result[offset];
            echoed = backup.bind(tangon)(echoed);
            update = echoed.Text;
            echoed = {'variant': 'heading-md/medium', 'color': 'text-primary'};
            ctrled = sizing.centerText;
            echoed['style'] = ctrled;
            ctrled = result[foxtra];
            ctrled = backup.bind(tangon)(ctrled);
            sequen = ctrled.intl;
            vacuum = sequen.string;
            ctrled = result[foxtra];
            ctrled = backup.bind(tangon)(ctrled);
            ctrled = ctrled.t;
            ctrled = ctrled.O7SO0N;
            ctrled = vacuum.bind(sequen)(ctrled);
            echoed['children'] = ctrled;
            echoed = romeon.bind(tangon)(update, echoed);
            kiloes[2] = echoed;
            verify['children'] = kiloes;
            yankee = option.bind(tangon)(yankee, verify);
            verify = new Array(3);
            verify[0] = yankee;
            yankee = 14;
            yankee = result[yankee];
            yankee = backup.bind(tangon)(yankee);
            kiloes = yankee.TableRowGroup;
            yankee = {};
            update = source.map;
            echoed = function(argFoo, argBar) {
                entity = argFoo;
                golfie = entity.title;
                oscard = entity.description;
                entity = entity.onPress;
                report = _closure1_slot10;
                zuuluu = _closure1_slot0;
                tangon = _closure1_slot2;
                michal = 15;
                michal = tangon[michal];
                tangon = undefined;
                michal = zuuluu.bind(tangon)(michal);
                zuuluu = michal.TableRow;
                michal = {};
                option = true;
                michal['arrow'] = option;
                michal['label'] = golfie;
                michal['subLabel'] = oscard;
                michal['onPress'] = entity;
                entity = argBar;
                entity = report.bind(tangon)(zuuluu, michal, entity);
                return entity;
            };
            echoed = update.bind(source)(echoed);
            yankee['children'] = echoed;
            yankee = romeon.bind(tangon)(kiloes, yankee);
            verify[1] = yankee;
            offset = result[offset];
            offset = backup.bind(tangon)(offset);
            yankee = offset.Text;
            offset = {'variant': 'text-xs/medium', 'color': 'text-muted'};
            echoed = sizing.centerText;
            kiloes = new Array(2);
            kiloes[0] = echoed;
            sizing = sizing.helpLink;
            kiloes[1] = sizing;
            offset['style'] = kiloes;
            kiloes = result[foxtra];
            kiloes = backup.bind(tangon)(kiloes);
            sizing = kiloes.intl;
            kiloes = sizing.format;
            foxtra = result[foxtra];
            foxtra = backup.bind(tangon)(foxtra);
            foxtra = foxtra.t;
            backup = foxtra.L+FgkZ;
            foxtra = {};
            output = function() { // Original name: handleOnHelpUrlHook
                oscard = _closure1_slot1;
                option = _closure1_slot2;
                entity = 10;
                zuuluu = option[entity];
                entity = undefined;
                report = oscard.bind(entity)(zuuluu);
                tangon = report.openUrl;
                zuuluu = 16;
                zuuluu = option[zuuluu];
                golfie = oscard.bind(entity)(zuuluu);
                oscard = golfie.getArticleURL;
                zuuluu = _closure1_slot8;
                zuuluu = zuuluu.TIGGER_PAWTECT_LEARN_MORE;
                zuuluu = oscard.bind(golfie)(zuuluu);
                zuuluu = tangon.bind(report)(zuuluu);
                golfie = _closure1_slot0;
                michal = 9;
                zuuluu = option[michal];
                oscard = golfie.bind(entity)(zuuluu);
                report = oscard.trackAgeVerificationModalClicked;
                tangon = _closure2_slot0;
                zuuluu = option[michal];
                zuuluu = golfie.bind(entity)(zuuluu);
                zuuluu = zuuluu.AgeVerificationModalVersion;
                zuuluu = zuuluu.RETRY;
                michal = option[michal];
                michal = golfie.bind(entity)(michal);
                michal = michal.AgeVerificationModalCta;
                michal = michal.LEARN_MORE;
                michal = report.bind(oscard)(tangon, zuuluu, michal);
                return entity;
            };
            foxtra['handleOnHelpUrlHook'] = output;
            foxtra = kiloes.bind(sizing)(backup, foxtra);
            offset['children'] = foxtra;
            offset = romeon.bind(tangon)(yankee, offset);
            verify[2] = offset;
            oscard['children'] = verify;
            oscard = option.bind(tangon)(golfie, oscard);
            report[1] = oscard;
            entity['children'] = report;
            entity = zuuluu.bind(tangon)(michal, entity);
            return entity;
        }
    };
    zuuluu['default'] = michal;
    return entity;
})();