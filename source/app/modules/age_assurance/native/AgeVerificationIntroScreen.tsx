// app/modules/age_assurance/native/AgeVerificationIntroScreen.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    report = argBar;
    yankee = argBaz;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    var _closure1_slot1 = yankee;
    var _closure1_slot2 = oscard;
    entity = global;
    option = entity.Object;
    golfie = option.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(option)(zuuluu, entity, tangon);
    entity = 0;
    golfie = oscard[entity];
    tangon = argCor;
    entity = undefined;
    tangon = tangon.bind(entity)(golfie);
    romeon = 1;
    tangon = oscard[romeon];
    tangon = report.bind(entity)(tangon);
    golfie = tangon.Image;
    var _closure1_slot3 = golfie;
    golfie = tangon.ScrollView;
    var _closure1_slot4 = golfie;
    tangon = tangon.View;
    var _closure1_slot5 = tangon;
    tangon = 2;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.getAgeVerificationGetStartedSteps;
    var _closure1_slot6 = tangon;
    tangon = 3;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.HelpdeskArticles;
    var _closure1_slot7 = tangon;
    tangon = 4;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.SafetyHubLinks;
    var _closure1_slot8 = tangon;
    tangon = 5;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    golfie = tangon.jsx;
    var _closure1_slot9 = golfie;
    golfie = tangon.jsxs;
    var _closure1_slot10 = golfie;
    tangon = tangon.Fragment;
    var _closure1_slot11 = tangon;
    tangon = 6;
    tangon = oscard[tangon];
    option = report.bind(entity)(tangon);
    golfie = option.createStyles;
    tangon = {};
    verify = {};
    offset = 7;
    foxtra = oscard[offset];
    foxtra = yankee.bind(entity)(foxtra);
    foxtra = foxtra.spacing;
    foxtra = foxtra.PX_16;
    verify['paddingHorizontal'] = foxtra;
    foxtra = oscard[offset];
    foxtra = yankee.bind(entity)(foxtra);
    foxtra = foxtra.spacing;
    foxtra = foxtra.PX_16;
    verify['gap'] = foxtra;
    verify['flex'] = romeon;
    tangon['getStartedContainer'] = verify;
    verify = {'width': 73, 'height': 85};
    tangon['getStartedSafetyShieldIcon'] = verify;
    verify = {};
    romeon = 'center';
    verify['alignItems'] = romeon;
    foxtra = oscard[offset];
    foxtra = yankee.bind(entity)(foxtra);
    foxtra = foxtra.spacing;
    foxtra = foxtra.PX_8;
    verify['gap'] = foxtra;
    tangon['getStartedHeaderContainer'] = verify;
    verify = {};
    verify['alignItems'] = romeon;
    foxtra = oscard[offset];
    foxtra = yankee.bind(entity)(foxtra);
    foxtra = foxtra.spacing;
    foxtra = foxtra.PX_8;
    foxtra = -foxtra;
    verify['marginTop'] = foxtra;
    tangon['ageGroupLearnMoreContainer'] = verify;
    verify = {};
    verify['textAlign'] = romeon;
    tangon['getStartedHeaderText'] = verify;
    verify = {};
    verify['alignItems'] = romeon;
    tangon['getStartedRequestTextContainer'] = verify;
    verify = {};
    foxtra = oscard[offset];
    foxtra = yankee.bind(entity)(foxtra);
    foxtra = foxtra.spacing;
    foxtra = foxtra.PX_16;
    verify['paddingHorizontal'] = foxtra;
    foxtra = oscard[offset];
    foxtra = yankee.bind(entity)(foxtra);
    foxtra = foxtra.spacing;
    foxtra = foxtra.PX_48;
    verify['paddingTop'] = foxtra;
    tangon['getStartedFooterContainer'] = verify;
    verify = {};
    verify['textAlign'] = romeon;
    romeon = oscard[offset];
    romeon = yankee.bind(entity)(romeon);
    romeon = romeon.spacing;
    romeon = romeon.PX_16;
    verify['marginBottom'] = romeon;
    tangon['getStartedRequestText'] = verify;
    verify = {};
    offset = oscard[offset];
    offset = yankee.bind(entity)(offset);
    offset = offset.spacing;
    offset = offset.PX_8;
    verify['gap'] = offset;
    tangon['getStartedFooterButtonsContainer'] = verify;
    tangon = golfie.bind(option)(tangon);
    var _closure1_slot12 = tangon;
    tangon = 20;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/age_assurance/native/AgeVerificationIntroScreen.tsx';
    tangon = report.bind(oscard)(tangon);
    michal = function(argFoo) { // Original name: GetStartedScreen
        entity = argFoo;
        vacuum = entity.modalSessionId;
        var _closure2_slot0 = vacuum;
        zuuluu = entity.onClose;
        entity = _closure1_slot12;
        tangon = undefined;
        yankee = entity.bind(tangon)();
        output = _closure1_slot1;
        result = _closure1_slot2;
        entity = 8;
        entity = result[entity];
        entity = output.bind(tangon)(entity);
        entity = entity.bind(tangon)();
        echoed = entity.bottom;
        kiloes = _closure1_slot0;
        entity = 9;
        entity = result[entity];
        michal = kiloes.bind(tangon)(entity);
        entity = michal.useInitiateAgeVerification;
        entity = entity.bind(michal)(zuuluu);
        foxtra = entity.loading;
        entity = entity.initiateAgeVerification;
        var _closure2_slot1 = entity;
        zuuluu = _closure1_slot10;
        michal = _closure1_slot11;
        entity = {};
        offset = _closure1_slot9;
        oscard = _closure1_slot4;
        report = {};
        golfie = _closure1_slot5;
        option = {};
        verify = yankee.getStartedContainer;
        option['style'] = verify;
        romeon = {};
        verify = yankee.getStartedHeaderContainer;
        romeon['style'] = verify;
        sizing = _closure1_slot3;
        verify = {};
        update = yankee.getStartedSafetyShieldIcon;
        verify['style'] = update;
        update = 10;
        update = result[update];
        update = output.bind(tangon)(update);
        verify['source'] = update;
        update = 'contain';
        verify['resizeMode'] = update;
        verify = offset.bind(tangon)(sizing, verify);
        update = new Array(3);
        update[0] = verify;
        verify = 11;
        sizing = result[verify];
        sizing = kiloes.bind(tangon)(sizing);
        sequen = sizing.Text;
        source = {'variant': 'heading-xl/bold', 'color': 'header-primary'};
        sizing = yankee.getStartedHeaderText;
        source['style'] = sizing;
        sizing = 12;
        config = result[sizing];
        config = kiloes.bind(tangon)(config);
        cntext = config.intl;
        record = cntext.string;
        config = result[sizing];
        config = kiloes.bind(tangon)(config);
        config = config.t;
        config = config.FQ+YOD;
        config = record.bind(cntext)(config);
        source['children'] = config;
        source = offset.bind(tangon)(sequen, source);
        update[1] = source;
        source = result[verify];
        source = kiloes.bind(tangon)(source);
        sequen = source.Text;
        source = {'variant': 'heading-md/medium', 'color': 'text-normal'};
        config = yankee.getStartedHeaderText;
        source['style'] = config;
        config = result[sizing];
        config = kiloes.bind(tangon)(config);
        cntext = config.intl;
        record = cntext.string;
        config = result[sizing];
        config = kiloes.bind(tangon)(config);
        config = config.t;
        config = config.Cc41tb;
        config = record.bind(cntext)(config);
        source['children'] = config;
        source = offset.bind(tangon)(sequen, source);
        update[2] = source;
        romeon['children'] = update;
        update = zuuluu.bind(tangon)(golfie, romeon);
        romeon = new Array(3);
        romeon[0] = update;
        update = 13;
        update = result[update];
        update = kiloes.bind(tangon)(update);
        source = update.TableRowGroup;
        update = {};
        ctrled = _closure1_slot6;
        sequen = ctrled.bind(tangon)(vacuum);
        vacuum = sequen.map;
        ctrled = function(argFoo, argBar) {
            entity = argFoo;
            report = argBar;
            romeon = entity.title;
            option = entity.description;
            tangon = _closure1_slot9;
            michal = _closure1_slot1;
            verify = _closure1_slot2;
            entity = 14;
            entity = verify[entity];
            zuuluu = undefined;
            michal = michal.bind(zuuluu)(entity);
            entity = {};
            golfie = 1;
            golfie = report + golfie;
            entity['index'] = golfie;
            golfie = _closure1_slot0;
            oscard = 11;
            offset = verify[oscard];
            offset = golfie.bind(zuuluu)(offset);
            yankee = offset.Text;
            offset = {'variant': 'text-md/medium', 'color': 'header-primary'};
            offset['children'] = romeon;
            offset = tangon.bind(zuuluu)(yankee, offset);
            entity['tip'] = offset;
            oscard = verify[oscard];
            oscard = golfie.bind(zuuluu)(oscard);
            golfie = oscard.Text;
            oscard = {'variant': 'text-xs/medium', 'color': 'text-secondary'};
            oscard['children'] = option;
            oscard = tangon.bind(zuuluu)(golfie, oscard);
            entity['description'] = oscard;
            entity = tangon.bind(zuuluu)(michal, entity, report);
            return entity;
        };
        ctrled = vacuum.bind(sequen)(ctrled);
        update['children'] = ctrled;
        update = offset.bind(tangon)(source, update);
        romeon[1] = update;
        update = {};
        source = yankee.ageGroupLearnMoreContainer;
        update['style'] = source;
        source = result[verify];
        source = kiloes.bind(tangon)(source);
        ctrled = source.Text;
        source = {'variant': 'text-xs/medium', 'color': 'text-muted'};
        vacuum = result[sizing];
        vacuum = kiloes.bind(tangon)(vacuum);
        record = vacuum.intl;
        config = record.format;
        vacuum = result[sizing];
        vacuum = kiloes.bind(tangon)(vacuum);
        vacuum = vacuum.t;
        sequen = vacuum.RV75dn;
        vacuum = {};
        cntext = function() { // Original name: handleOnHelpUrlHook
            oscard = _closure1_slot1;
            option = _closure1_slot2;
            entity = 15;
            zuuluu = option[entity];
            entity = undefined;
            report = oscard.bind(entity)(zuuluu);
            tangon = report.openUrl;
            zuuluu = 16;
            zuuluu = option[zuuluu];
            golfie = oscard.bind(entity)(zuuluu);
            oscard = golfie.getArticleURL;
            zuuluu = _closure1_slot7;
            zuuluu = zuuluu.TIGGER_PAWTECT_UK_AND_AUS_ONLY_LEARN_MORE;
            zuuluu = oscard.bind(golfie)(zuuluu);
            zuuluu = tangon.bind(report)(zuuluu);
            golfie = _closure1_slot0;
            michal = 17;
            zuuluu = option[michal];
            oscard = golfie.bind(entity)(zuuluu);
            report = oscard.trackAgeVerificationModalClicked;
            tangon = _closure2_slot0;
            zuuluu = option[michal];
            zuuluu = golfie.bind(entity)(zuuluu);
            zuuluu = zuuluu.AgeVerificationModalVersion;
            zuuluu = zuuluu.PRIMARY;
            michal = option[michal];
            michal = golfie.bind(entity)(michal);
            michal = michal.AgeVerificationModalCta;
            michal = michal.LEARN_MORE;
            michal = report.bind(oscard)(tangon, zuuluu, michal);
            return entity;
        };
        vacuum['handleOnHelpUrlHook'] = cntext;
        vacuum = config.bind(record)(sequen, vacuum);
        source['children'] = vacuum;
        source = offset.bind(tangon)(ctrled, source);
        update['children'] = source;
        update = offset.bind(tangon)(golfie, update);
        romeon[2] = update;
        option['children'] = romeon;
        option = zuuluu.bind(tangon)(golfie, option);
        report['children'] = option;
        oscard = offset.bind(tangon)(oscard, report);
        report = new Array(2);
        report[0] = oscard;
        oscard = {};
        romeon = yankee.getStartedFooterContainer;
        option = new Array(2);
        option[0] = romeon;
        romeon = {};
        romeon['paddingBottom'] = echoed;
        option[1] = romeon;
        oscard['style'] = option;
        option = {};
        romeon = yankee.getStartedRequestTextContainer;
        option['style'] = romeon;
        verify = result[verify];
        verify = kiloes.bind(tangon)(verify);
        romeon = verify.Text;
        verify = {'variant': 'text-xs/medium', 'color': 'text-muted'};
        echoed = yankee.getStartedRequestText;
        verify['style'] = echoed;
        echoed = result[sizing];
        echoed = kiloes.bind(tangon)(echoed);
        ctrled = echoed.intl;
        source = ctrled.format;
        echoed = result[sizing];
        echoed = kiloes.bind(tangon)(echoed);
        echoed = echoed.t;
        update = echoed.TYfgw8;
        echoed = {};
        vacuum = function() { // Original name: handleOnRequestHook
            tangon = _closure1_slot1;
            option = _closure1_slot2;
            entity = 15;
            zuuluu = option[entity];
            entity = undefined;
            report = tangon.bind(entity)(zuuluu);
            tangon = report.openUrl;
            zuuluu = _closure1_slot8;
            zuuluu = zuuluu.APPEALS_LINK;
            zuuluu = tangon.bind(report)(zuuluu);
            golfie = _closure1_slot0;
            michal = 17;
            zuuluu = option[michal];
            oscard = golfie.bind(entity)(zuuluu);
            report = oscard.trackAgeVerificationModalClicked;
            tangon = _closure2_slot0;
            zuuluu = option[michal];
            zuuluu = golfie.bind(entity)(zuuluu);
            zuuluu = zuuluu.AgeVerificationModalVersion;
            zuuluu = zuuluu.PRIMARY;
            michal = option[michal];
            michal = golfie.bind(entity)(michal);
            michal = michal.AgeVerificationModalCta;
            michal = michal.MANUAL_REVIEW_REQUEST;
            michal = report.bind(oscard)(tangon, zuuluu, michal);
            return entity;
        };
        echoed['handleOnRequestHook'] = vacuum;
        echoed = source.bind(ctrled)(update, echoed);
        verify['children'] = echoed;
        verify = offset.bind(tangon)(romeon, verify);
        option['children'] = verify;
        verify = offset.bind(tangon)(golfie, option);
        option = new Array(2);
        option[0] = verify;
        verify = {};
        yankee = yankee.getStartedFooterButtonsContainer;
        verify['style'] = yankee;
        yankee = 18;
        yankee = result[yankee];
        yankee = kiloes.bind(tangon)(yankee);
        romeon = yankee.Button;
        yankee = {'variant': 'primary', 'size': 'lg'};
        echoed = result[sizing];
        echoed = kiloes.bind(tangon)(echoed);
        update = echoed.intl;
        echoed = update.string;
        sizing = result[sizing];
        sizing = kiloes.bind(tangon)(sizing);
        sizing = sizing.t;
        sizing = sizing.VLbVho;
        sizing = echoed.bind(update)(sizing);
        yankee['text'] = sizing;
        backup = function() { // Original name: onPress
            option = _closure1_slot0;
            verify = _closure1_slot2;
            zuuluu = 17;
            michal = verify[zuuluu];
            entity = undefined;
            golfie = option.bind(entity)(michal);
            oscard = golfie.trackAgeVerificationModalClicked;
            report = _closure2_slot0;
            tangon = verify[zuuluu];
            tangon = option.bind(entity)(tangon);
            tangon = tangon.AgeVerificationModalVersion;
            tangon = tangon.PRIMARY;
            zuuluu = verify[zuuluu];
            zuuluu = option.bind(entity)(zuuluu);
            zuuluu = zuuluu.AgeVerificationModalCta;
            zuuluu = zuuluu.GET_STARTED;
            zuuluu = oscard.bind(golfie)(report, tangon, zuuluu);
            michal = _closure2_slot1;
            michal = michal.bind(entity)();
            return entity;
        };
        yankee['onPress'] = backup;
        backup = 19;
        backup = result[backup];
        backup = kiloes.bind(tangon)(backup);
        kiloes = backup.LinkExternalSmallIcon;
        backup = {};
        sizing = 7;
        sizing = result[sizing];
        sizing = output.bind(tangon)(sizing);
        sizing = sizing.colors;
        sizing = sizing.WHITE;
        backup['color'] = sizing;
        backup = offset.bind(tangon)(kiloes, backup);
        yankee['icon'] = backup;
        yankee['loading'] = foxtra;
        foxtra = 'end';
        yankee['iconPosition'] = foxtra;
        yankee = offset.bind(tangon)(romeon, yankee);
        verify['children'] = yankee;
        verify = offset.bind(tangon)(golfie, verify);
        option[1] = verify;
        oscard['children'] = option;
        oscard = zuuluu.bind(tangon)(golfie, oscard);
        report[1] = oscard;
        entity['children'] = report;
        entity = zuuluu.bind(tangon)(michal, entity);
        return entity;
    };
    zuuluu['default'] = michal;
    return entity;
})();