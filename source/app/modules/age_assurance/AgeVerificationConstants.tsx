// app/modules/age_assurance/AgeVerificationConstants.tsx
export default (function(_, argBar, __, ___, ____, argFre, argPlu) {
    report = argBar;
    zuuluu = argFre;
    oscard = argPlu;
    entity = global;
    golfie = entity.Object;
    tangon = golfie.defineProperty;
    michal = {};
    entity = true;
    michal['value'] = entity;
    entity = '__esModule';
    entity = tangon.bind(golfie)(zuuluu, entity, michal);
    tangon = {};
    golfie = 0;
    michal = oscard[golfie];
    entity = undefined;
    michal = report.bind(entity)(michal);
    verify = michal.intl;
    option = verify.string;
    michal = oscard[golfie];
    michal = report.bind(entity)(michal);
    michal = michal.t;
    michal = michal.HphYKi;
    michal = option.bind(verify)(michal);
    tangon['title'] = michal;
    michal = oscard[golfie];
    michal = report.bind(entity)(michal);
    verify = michal.intl;
    option = verify.string;
    michal = oscard[golfie];
    michal = report.bind(entity)(michal);
    michal = michal.t;
    michal = michal.GCZC+/;
    michal = option.bind(verify)(michal);
    tangon['description'] = michal;
    michal = new Array(3);
    michal[0] = tangon;
    tangon = {};
    option = oscard[golfie];
    option = report.bind(entity)(option);
    offset = option.intl;
    verify = offset.string;
    option = oscard[golfie];
    option = report.bind(entity)(option);
    option = option.t;
    option = option.nkO4Ly;
    option = verify.bind(offset)(option);
    tangon['title'] = option;
    option = oscard[golfie];
    option = report.bind(entity)(option);
    offset = option.intl;
    verify = offset.string;
    option = oscard[golfie];
    option = report.bind(entity)(option);
    option = option.t;
    option = option.rHZFsL;
    option = verify.bind(offset)(option);
    tangon['description'] = option;
    michal[1] = tangon;
    tangon = {};
    option = oscard[golfie];
    option = report.bind(entity)(option);
    offset = option.intl;
    verify = offset.string;
    option = oscard[golfie];
    option = report.bind(entity)(option);
    option = option.t;
    option = option.aVwLfn;
    option = verify.bind(offset)(option);
    tangon['title'] = option;
    option = oscard[golfie];
    option = report.bind(entity)(option);
    verify = option.intl;
    option = verify.string;
    golfie = oscard[golfie];
    golfie = report.bind(entity)(golfie);
    golfie = golfie.t;
    golfie = golfie.n5vd1N;
    golfie = option.bind(verify)(golfie);
    tangon['description'] = golfie;
    michal[2] = tangon;
    tangon = 1;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/age_assurance/AgeVerificationConstants.tsx';
    tangon = report.bind(oscard)(tangon);
    zuuluu['AGE_VERIFICATION_GET_STARTED_STEPS'] = michal;
    return entity;
})();