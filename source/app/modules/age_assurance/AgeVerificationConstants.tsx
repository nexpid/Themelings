// app/modules/age_assurance/AgeVerificationConstants.tsx
export default (function(argFoo, argBar, argBaz, _, __, argFre, argPlu) {
    oscard = argBar;
    zuuluu = argFre;
    golfie = argPlu;
    var _closure1_slot0 = oscard;
    entity = argBaz;
    var _closure1_slot1 = entity;
    var _closure1_slot2 = golfie;
    tangon = global;
    verify = tangon.Object;
    option = verify.defineProperty;
    report = {};
    entity = true;
    report['value'] = entity;
    entity = '__esModule';
    entity = option.bind(verify)(zuuluu, entity, report);
    entity = 0;
    report = golfie[entity];
    entity = undefined;
    report = oscard.bind(entity)(report);
    report = report.HelpdeskArticles;
    var _closure1_slot3 = report;
    option = tangon.Set;
    tangon = 1;
    tangon = golfie[tangon];
    tangon = oscard.bind(entity)(tangon);
    tangon = tangon.AgeVerificationModalEntryPoint;
    report = tangon.NSFW_GUILD;
    tangon = new Array(1);
    tangon[0] = report;
    report = option.prototype;
    report = Object.create(report, {constructor: {value: option}});
    foxtra = report;
    romeon = tangon;
    tangon = new foxtra[option](romeon, yankee);
    tangon = tangon instanceof Object ? tangon : report;
    report = 5;
    report = golfie[report];
    golfie = oscard.bind(entity)(report);
    oscard = golfie.fileFinishedImporting;
    report = 'modules/age_assurance/AgeVerificationConstants.tsx';
    report = oscard.bind(golfie)(report);
    zuuluu['FULLSCREEN_AGE_VERIFICATION_ENTRY_POINTS'] = tangon;
    michal = function(argFoo) {
        entity = argFoo;
        var _closure2_slot0 = entity;
        michal = {};
        option = _closure1_slot0;
        verify = _closure1_slot2;
        zuuluu = 2;
        entity = verify[zuuluu];
        tangon = undefined;
        entity = option.bind(tangon)(entity);
        oscard = entity.intl;
        report = oscard.string;
        entity = verify[zuuluu];
        entity = option.bind(tangon)(entity);
        entity = entity.t;
        entity = entity.HphYKi;
        entity = report.bind(oscard)(entity);
        michal['title'] = entity;
        entity = verify[zuuluu];
        entity = option.bind(tangon)(entity);
        oscard = entity.intl;
        report = oscard.string;
        entity = verify[zuuluu];
        entity = option.bind(tangon)(entity);
        entity = entity.t;
        entity = entity.GCZC+/;
        entity = report.bind(oscard)(entity);
        michal['description'] = entity;
        entity = new Array(3);
        entity[0] = michal;
        michal = {};
        report = verify[zuuluu];
        report = option.bind(tangon)(report);
        offset = report.intl;
        oscard = offset.string;
        report = verify[zuuluu];
        report = option.bind(tangon)(report);
        report = report.t;
        report = report.nkO4Ly;
        report = oscard.bind(offset)(report);
        michal['title'] = report;
        report = verify[zuuluu];
        report = option.bind(tangon)(report);
        offset = report.intl;
        oscard = offset.string;
        report = verify[zuuluu];
        report = option.bind(tangon)(report);
        report = report.t;
        report = report.rHZFsL;
        report = oscard.bind(offset)(report);
        michal['description'] = report;
        entity[1] = michal;
        michal = {};
        report = verify[zuuluu];
        report = option.bind(tangon)(report);
        offset = report.intl;
        oscard = offset.string;
        report = verify[zuuluu];
        report = option.bind(tangon)(report);
        report = report.t;
        report = report.aVwLfn;
        report = oscard.bind(offset)(report);
        michal['title'] = report;
        report = verify[zuuluu];
        report = option.bind(tangon)(report);
        oscard = report.intl;
        report = oscard.format;
        zuuluu = verify[zuuluu];
        zuuluu = option.bind(tangon)(zuuluu);
        zuuluu = zuuluu.t;
        tangon = zuuluu.n5vd1N;
        zuuluu = {};
        golfie = function() { // Original name: handleOnHelpUrlHook
            oscard = _closure1_slot1;
            option = _closure1_slot2;
            entity = 3;
            zuuluu = option[entity];
            entity = undefined;
            report = oscard.bind(entity)(zuuluu);
            tangon = report.openUrl;
            zuuluu = 4;
            zuuluu = option[zuuluu];
            golfie = oscard.bind(entity)(zuuluu);
            oscard = golfie.getArticleURL;
            zuuluu = _closure1_slot3;
            zuuluu = zuuluu.TIGGER_PAWTECT_SYSTEM_DMS;
            zuuluu = oscard.bind(golfie)(zuuluu);
            zuuluu = tangon.bind(report)(zuuluu);
            golfie = _closure1_slot0;
            michal = 1;
            zuuluu = option[michal];
            oscard = golfie.bind(entity)(zuuluu);
            report = oscard.trackAgeVerificationModalClicked;
            tangon = _closure2_slot0;
            zuuluu = option[michal];
            zuuluu = golfie.bind(entity)(zuuluu);
            zuuluu = zuuluu.AgeVerificationModalVersion;
            zuuluu = zuuluu.PRIMARY;
            michal = option[michal];
            michal = golfie.bind(entity)(michal);
            michal = michal.AgeVerificationModalCta;
            michal = michal.SYSTEM_DMS_LEARN_MORE;
            michal = report.bind(oscard)(tangon, zuuluu, michal);
            return entity;
        };
        zuuluu['handleOnHelpUrlHook'] = golfie;
        zuuluu = report.bind(oscard)(tangon, zuuluu);
        michal['description'] = zuuluu;
        entity[2] = michal;
        return entity;
    };
    zuuluu['getAgeVerificationGetStartedSteps'] = michal;
    michal = 'AGE_VERIFICATION_MODAL_KEY';
    zuuluu['AGE_VERIFICATION_MODAL_KEY'] = michal;
    return entity;
})();