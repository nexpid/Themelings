// app/modules/app_icons/native/AppIconsCoachmark.tsx
export default (function(argFoo, argBar, argBaz, argCorge, _, argFred, argPlugh) {
    report = argBar;
    yankee = argBaz;
    zulu = argFred;
    oscar = argPlugh;
    var _closure1_slot0 = report;
    var _closure1_slot1 = yankee;
    var _closure1_slot2 = oscar;
    entity = global;
    options = entity.Object;
    golf = options.defineProperty;
    tango = {};
    entity = true;
    tango['value'] = entity;
    entity = '__esModule';
    entity = golf.bind(options)(zulu, entity, tango);
    romeo = 0;
    golf = oscar[romeo];
    tango = argCorge;
    entity = undefined;
    tango = tango.bind(entity)(golf);
    var _closure1_slot3 = tango;
    tango = 1;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    golf = tango.Image;
    var _closure1_slot4 = golf;
    tango = tango.View;
    var _closure1_slot5 = tango;
    tango = 2;
    tango = oscar[tango];
    tango = yankee.bind(entity)(tango);
    var _closure1_slot6 = tango;
    tango = 3;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.ContentDismissActionType;
    var _closure1_slot7 = tango;
    tango = 4;
    golf = oscar[tango];
    golf = report.bind(entity)(golf);
    golf = golf.jsx;
    var _closure1_slot8 = golf;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.jsxs;
    var _closure1_slot9 = tango;
    tango = 5;
    tango = oscar[tango];
    options = report.bind(entity)(tango);
    golf = options.createStyles;
    tango = {};
    verify = {};
    offset = 6;
    foxtrot = oscar[offset];
    foxtrot = yankee.bind(entity)(foxtrot);
    foxtrot = foxtrot.spacing;
    foxtrot = foxtrot.PX_16;
    verify['padding'] = foxtrot;
    verify['paddingBottom'] = romeo;
    tango['container'] = verify;
    verify = {};
    romeo = 'center';
    verify['alignItems'] = romeo;
    tango['info'] = verify;
    foxtrot = 20;
    verify = {'alignSelf': 'center', 'marginBottom': 20};
    tango['image'] = verify;
    verify = {};
    romeo = 8;
    verify['marginRight'] = romeo;
    tango['nitroWheel'] = verify;
    verify = {'display': 'flex', 'flexDirection': 'row', 'alignItems': 'center'};
    tango['titleContainer'] = verify;
    verify = {'marginTop': 8, 'textAlign': 'center'};
    tango['subtitle'] = verify;
    verify = {};
    verify['marginTop'] = foxtrot;
    foxtrot = oscar[offset];
    foxtrot = yankee.bind(entity)(foxtrot);
    foxtrot = foxtrot.spacing;
    foxtrot = foxtrot.PX_8;
    verify['gap'] = foxtrot;
    tango['footer'] = verify;
    verify = {};
    verify['marginBottom'] = romeo;
    tango['button'] = verify;
    verify = {};
    offset = oscar[offset];
    offset = yankee.bind(entity)(offset);
    offset = offset.colors;
    offset = offset.TEXT_MUTED;
    verify['color'] = offset;
    tango['cancelButtonText'] = verify;
    tango = golf.bind(options)(tango);
    var _closure1_slot10 = tango;
    tango = 18;
    tango = oscar[tango];
    oscar = report.bind(entity)(tango);
    report = oscar.fileFinishedImporting;
    tango = 'modules/app_icons/native/AppIconsCoachmark.tsx';
    tango = report.bind(oscar)(tango);
    mike = function(argFoo) { // Original name: AppIconsCoachmarkActionSheet
        _fun120777: for(var _fun120777_ip = 0; ; ) switch(_fun120777_ip) {
 0:
            entity = argFoo;
            entity = entity.markAsDismissed;
            var _closure2_slot0 = entity;
            mike = _closure1_slot10;
            tango = undefined;
            offset = mike.bind(tango)();
            yankee = _closure1_slot0;
            sizing = _closure1_slot2;
            mike = 7;
            mike = sizing[mike];
            oscar = yankee.bind(tango)(mike);
            report = oscar.useStateFromStores;
            mike = _closure1_slot6;
            zulu = new Array(1);
            zulu[0] = mike;
            mike = function() {
                mike = _closure1_slot6;
                entity = mike.getCurrentUser;
                entity = entity.bind(mike)();
                return entity;
            };
            report = report.bind(oscar)(zulu, mike);
            source = _closure1_slot1;
            mike = 8;
            mike = sizing[mike];
            zulu = source.bind(tango)(mike);
            mike = zulu.isPremium;
            backup = mike.bind(zulu)(report);
            report = _closure1_slot3;
            zulu = report.useCallback;
            mike = new Array(1);
            mike[0] = entity;
            entity = function() {
                _fun120779: for(var _fun120779_ip = 0; ; ) switch(_fun120779_ip) {
 0:
                    tango = _closure1_slot1;
                    zulu = _closure1_slot2;
                    entity = 9;
                    zulu = zulu[entity];
                    entity = undefined;
                    tango = tango.bind(entity)(zulu);
                    zulu = tango.hideActionSheet;
                    zulu = zulu.bind(tango)();
                    report = _closure2_slot0;
                    tango = null;
                    if(!(tango != report)) { _fun120779_ip = 67; continue _fun120779 }
 48:
                    zulu = _closure2_slot0;
                    mike = _closure1_slot7;
                    mike = mike.DISMISS;
                    mike = zulu.bind(entity)(mike);
 67:
                    return entity;
                }
            };
            foxtrot = zulu.bind(report)(entity, mike);
            zulu = _closure1_slot9;
            entity = 10;
            entity = sizing[entity];
            entity = yankee.bind(tango)(entity);
            mike = entity.BottomSheet;
            entity = {};
            report = function() { // Original name: onDismiss
                zulu = _closure2_slot0;
                entity = _closure1_slot7;
                mike = entity.DISMISS;
                entity = undefined;
                entity = zulu.bind(entity)(mike);
                return entity;
            };
            entity['onDismiss'] = report;
            report = offset.container;
            entity['contentStyles'] = report;
            oscar = _closure1_slot5;
            report = {};
            golf = offset.info;
            report['style'] = golf;
            romeo = _closure1_slot8;
            options = _closure1_slot4;
            golf = {};
            output = 11;
            output = sizing[output];
            output = source.bind(tango)(output);
            golf['source'] = output;
            output = offset.image;
            golf['style'] = output;
            options = romeo.bind(tango)(options, golf);
            golf = new Array(3);
            golf[0] = options;
            output = {};
            options = offset.titleContainer;
            output['style'] = options;
            echo = 12;
            options = sizing[echo];
            result = source.bind(tango)(options);
            options = {};
            update = 13;
            update = sizing[update];
            update = source.bind(tango)(update);
            options['source'] = update;
            echo = sizing[echo];
            echo = yankee.bind(tango)(echo);
            echo = echo.IconSizes;
            echo = echo.MEDIUM;
            options['size'] = echo;
            echo = offset.nitroWheel;
            options['style'] = echo;
            echo = true;
            options['disableColor'] = echo;
            options = romeo.bind(tango)(result, options);
            echo = new Array(2);
            echo[0] = options;
            options = 14;
            result = sizing[options];
            result = yankee.bind(tango)(result);
            source = result.Text;
            update = {'variant': 'heading-xl/extrabold', 'color': 'header-primary'};
            result = 15;
            control = sizing[result];
            control = yankee.bind(tango)(control);
            sequence = control.intl;
            vacuum = sequence.string;
            control = sizing[result];
            control = yankee.bind(tango)(control);
            control = control.t;
            control = control.EfA4Cg;
            control = vacuum.bind(sequence)(control);
            update['children'] = control;
            update = romeo.bind(tango)(source, update);
            echo[1] = update;
            output['children'] = echo;
            output = zulu.bind(tango)(oscar, output);
            golf[1] = output;
            options = sizing[options];
            options = yankee.bind(tango)(options);
            yankee = options.Text;
            options = {'variant': 'text-md/normal', 'color': 'text-normal'};
            sizing = offset.subtitle;
            options['style'] = sizing;
            update = _closure1_slot0;
            sizing = _closure1_slot2;
            output = sizing[result];
            output = update.bind(tango)(output);
            echo = output.intl;
            output = echo.string;
            sizing = sizing[result];
            sizing = update.bind(tango)(sizing);
            sizing = sizing.t;
            if(backup) { _fun120777_ip = 546; continue _fun120777 }
 533:
            backup = sizing.D0XzaW;
            backup = output.bind(echo)(backup);
            _fun120777_ip = 557; continue _fun120777;
 546:
            sizing = sizing.IgchKC;
            backup = output.bind(echo)(sizing);
 557:
            options['children'] = backup;
            options = romeo.bind(tango)(yankee, options);
            golf[2] = options;
            report['children'] = golf;
            oscar = zulu.bind(tango)(oscar, report);
            report = new Array(2);
            report[0] = oscar;
            options = _closure1_slot9;
            golf = _closure1_slot5;
            oscar = {};
            offset = offset.footer;
            oscar['style'] = offset;
            romeo = _closure1_slot8;
            output = _closure1_slot0;
            backup = _closure1_slot2;
            offset = 16;
            verify = backup[offset];
            verify = output.bind(tango)(verify);
            yankee = verify.Button;
            verify = {};
            sizing = backup[result];
            sizing = output.bind(tango)(sizing);
            update = sizing.intl;
            echo = update.string;
            sizing = backup[result];
            sizing = output.bind(tango)(sizing);
            sizing = sizing.t;
            sizing = sizing.Pt547O;
            sizing = echo.bind(update)(sizing);
            verify['text'] = sizing;
            kilo = function() { // Original name: onPress
                _fun120781: for(var _fun120781_ip = 0; ; ) switch(_fun120781_ip) {
 0:
                    tango = _closure1_slot1;
                    zulu = _closure1_slot2;
                    entity = 9;
                    zulu = zulu[entity];
                    entity = undefined;
                    tango = tango.bind(entity)(zulu);
                    zulu = tango.hideActionSheet;
                    zulu = zulu.bind(tango)();
                    report = _closure2_slot0;
                    tango = null;
                    if(!(tango != report)) { _fun120781_ip = 67; continue _fun120781 }
 48:
                    tango = _closure2_slot0;
                    zulu = _closure1_slot7;
                    zulu = zulu.PRIMARY;
                    zulu = tango.bind(entity)(zulu);
 67:
                    zulu = _closure1_slot0;
                    tango = _closure1_slot2;
                    mike = 17;
                    mike = tango[mike];
                    zulu = zulu.bind(entity)(mike);
                    mike = zulu.navigateToAppIconSettings;
                    mike = mike.bind(zulu)();
                    return entity;
                }
            };
            verify['onPress'] = kilo;
            yankee = romeo.bind(tango)(yankee, verify);
            verify = new Array(2);
            verify[0] = yankee;
            offset = backup[offset];
            offset = output.bind(tango)(offset);
            yankee = offset.Button;
            offset = {};
            kilo = 'secondary';
            offset['variant'] = kilo;
            kilo = backup[result];
            kilo = output.bind(tango)(kilo);
            sizing = kilo.intl;
            kilo = sizing.string;
            backup = backup[result];
            backup = output.bind(tango)(backup);
            backup = backup.t;
            backup = backup.iSrIIS;
            backup = kilo.bind(sizing)(backup);
            offset['text'] = backup;
            offset['onPress'] = foxtrot;
            offset = romeo.bind(tango)(yankee, offset);
            verify[1] = offset;
            oscar['children'] = verify;
            oscar = options.bind(tango)(golf, oscar);
            report[1] = oscar;
            entity['children'] = report;
            entity = zulu.bind(tango)(mike, entity);
            return entity;
        }
    };
    zulu['default'] = mike;
    return entity;
})();