// app/modules/channel/ChannelConstants.tsx
export default (function(global, require, metroImportDefault, metroImportAll, moduleObject, exports, dependencyMap) {
    var3 = exports;
    var1 = global;
    var6 = var1.Object;
    var5 = var6.defineProperty;
    var4 = {};
    var2 = true;
    var4['value'] = var2;
    var2 = '__esModule';
    var2 = var5.bind(var6)(var3, var2, var4);
    var9 = {};
    var2 = 'role-subscriptions';
    var9['ROLE_SUBSCRIPTIONS'] = var2;
    var2 = 'server-monetization-onboarding';
    var9['SERVER_MONETIZATION_ONBOARDING'] = var2;
    var2 = 'shop';
    var9['GUILD_SHOP'] = var2;
    var2 = 'member-applications';
    var9['MEMBER_APPLICATIONS'] = var2;
    var2 = '@home';
    var9['GUILD_HOME'] = var2;
    var2 = 'channel-browser';
    var9['CHANNEL_BROWSER'] = var2;
    var2 = 'onboarding';
    var9['GUILD_ONBOARDING'] = var2;
    var2 = 'customize-community';
    var9['CUSTOMIZE_COMMUNITY'] = var2;
    var2 = 'member-safety';
    var9['MEMBER_SAFETY'] = var2;
    var2 = 'boosts';
    var9['GUILD_BOOSTS'] = var2;
    var2 = 'game-servers';
    var9['GAME_SERVERS'] = var2;
    var2 = 'report-to-mod';
    var9['REPORT_TO_MOD'] = var2;
    var _closure1_slot0 = var9;
    var5 = var1.Set;
    var4 = var1.Object;
    var2 = var4.values;
    var15 = var2.bind(var4)(var9);
    var4 = var5.prototype;
    var4 = Object.create(var4, {constructor: {value: var5}});
    var16 = var4;
    var2 = new var16[var5](var15, var14);
    var8 = var2 instanceof Object ? var2 : var4;
    var _closure1_slot1 = var8;
    var6 = var1.Object;
    var4 = var6.freeze;
    var5 = 1024;
    var2 = {'GUILD_FEED_REMOVED': 1, 'PINNED': 2, 'ACTIVE_CHANNELS_REMOVED': 4, 'REQUIRE_TAG': 16, 'IS_SPAM': 32, 'IS_GUILD_RESOURCE_CHANNEL': 128, 'CLYDE_AI': 256, 'IS_SCHEDULED_FOR_DELETION': 512, 'IS_MEDIA_CHANNEL': 1024, 'SUMMARIES_DISABLED': 2048, 'IS_ROLE_SUBSCRIPTION_TEMPLATE_PREVIEW_CHANNEL': 8192, 'IS_BROADCASTING': 16384, 'HIDE_MEDIA_DOWNLOAD_OPTIONS': 32768, 'IS_JOIN_REQUEST_INTERVIEW_CHANNEL': 65536, 'OBFUSCATED': 131072, 'IS_MODERATOR_REPORT_CHANNEL': 524288};
    var6 = var4.bind(var6)(var2);
    var4 = {};
    var2 = 'home';
    var4['GUILD_HOME'] = var2;
    var2 = 'guide';
    var4['SERVER_GUIDE'] = var2;
    var2 = 'browse';
    var4['CHANNEL_BROWSER'] = var2;
    var2 = 'customize';
    var4['CUSTOMIZE_COMMUNITY'] = var2;
    var2 = 'linked-roles';
    var4['LINKED_ROLES'] = var2;
    var10 = var1.Set;
    var2 = var1.Object;
    var1 = var2.values;
    var15 = var1.bind(var2)(var4);
    var2 = var10.prototype;
    var2 = Object.create(var2, {constructor: {value: var10}});
    var16 = var2;
    var1 = new var16[var10](var15, var14);
    var2 = var1 instanceof Object ? var1 : var2;
    var10 = dependencyMap;
    var1 = 0;
    var11 = var10[var1];
    var10 = require;
    var1 = undefined;
    var12 = var10.bind(var1)(var11);
    var11 = var12.fileFinishedImporting;
    var10 = 'modules/channel/ChannelConstants.tsx';
    var10 = var11.bind(var12)(var10);
    var3['StaticChannelRoute'] = var9;
    var3['StaticChannelRoutes'] = var8;
    var8 = function isStaticChannelRoute(arg1) {
        var3 = _closure1_slot1;
        var2 = var3.has;
        var1 = arg1;
        var1 = var2.bind(var3)(var1);
        return var1;
    };
    var3['isStaticChannelRoute'] = var8;
    var8 = function buildGuildStaticChannelId(arg1, arg2) {
        var1 = global;
        var1 = var1.HermesInternal;
        var5 = var1.concat;
        var4 = '';
        var3 = arg1;
        var2 = '-';
        var1 = arg2;
        var1 = var5.bind(var4)(var3, var2, var1);
        return var1;
    };
    var3['buildGuildStaticChannelId'] = var8;
    var7 = function isGuildHomeChannel(arg1) {
        _fun0001: for(var _fun0001_ip = 0; ; ) switch(_fun0001_ip) {
case 0:
            var4 = arg1;
            var1 = null;
            var1 = var1 == var4;
            if(var1) { _fun0001_ip = 2; continue _fun0001 }
case 3:
            var3 = var4.includes;
            var2 = _closure1_slot0;
            var2 = var2.GUILD_HOME;
            var2 = var3.bind(var4)(var2);
            var1 = !var2;
case 2:
            var1 = !var1;
            return var1;
        }
    };
    var3['isGuildHomeChannel'] = var7;
    var3['ChannelFlags'] = var6;
    var3['MAX_CHANNEL_TOPIC_LENGTH'] = var5;
    var5 = 4096;
    var3['MAX_FORUM_CHANNEL_TOPIC_LENGTH'] = var5;
    var3['StaticChannelId'] = var4;
    var3['StaticChannelIds'] = var2;
    return var1;
})();