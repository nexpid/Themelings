// app/modules/link_not_discord_warning/native/LinkNotDiscordActionSheet.tsx
export default (function(argFoo, argBar, argBaz, argCorge, _, argFred, argPlugh) {
    report = argBar;
    zulu = argFred;
    oscar = argPlugh;
    var _closure1_slot0 = report;
    entity = argBaz;
    var _closure1_slot1 = entity;
    var _closure1_slot2 = oscar;
    entity = global;
    options = entity.Object;
    golf = options.defineProperty;
    tango = {};
    entity = true;
    tango['value'] = entity;
    entity = '__esModule';
    entity = golf.bind(options)(zulu, entity, tango);
    entity = 0;
    golf = oscar[entity];
    tango = argCorge;
    entity = undefined;
    tango = tango.bind(entity)(golf);
    tango = 1;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.Image;
    var _closure1_slot3 = tango;
    tango = 2;
    golf = oscar[tango];
    golf = report.bind(entity)(golf);
    golf = golf.jsx;
    var _closure1_slot4 = golf;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.jsxs;
    var _closure1_slot5 = tango;
    tango = 3;
    tango = oscar[tango];
    options = report.bind(entity)(tango);
    golf = options.createStyles;
    tango = {};
    offset = 'center';
    verify = {'alignSelf': 'center', 'height': 105, 'marginBottom': 4294967280};
    tango['image'] = verify;
    verify = {'textAlign': 'center', 'marginTop': 20, 'marginBottom': 8};
    tango['title'] = verify;
    verify = {};
    verify['textAlign'] = offset;
    tango['body'] = verify;
    verify = {'marginTop': 18, 'height': 40};
    tango['button'] = verify;
    tango = golf.bind(options)(tango);
    var _closure1_slot6 = tango;
    tango = 11;
    tango = oscar[tango];
    oscar = report.bind(entity)(tango);
    report = oscar.fileFinishedImporting;
    tango = 'modules/link_not_discord_warning/native/LinkNotDiscordActionSheet.tsx';
    tango = report.bind(oscar)(tango);
    mike = function(argFoo) { // Original name: _default
        entity = argFoo;
        echo = entity.url;
        var _closure2_slot0 = echo;
        entity = _closure1_slot6;
        tango = undefined;
        backup = entity.bind(tango)();
        options = _closure1_slot4;
        mike = _closure1_slot3;
        entity = {};
        zulu = backup.image;
        entity['style'] = zulu;
        sizing = _closure1_slot0;
        yankee = _closure1_slot2;
        zulu = 4;
        zulu = yankee[zulu];
        zulu = sizing.bind(tango)(zulu);
        entity['source'] = zulu;
        report = options.bind(tango)(mike, entity);
        zulu = _closure1_slot5;
        entity = 5;
        entity = yankee[entity];
        entity = sizing.bind(tango)(entity);
        mike = entity.BottomSheet;
        entity = {};
        golf = true;
        entity['startExpanded'] = golf;
        entity['header'] = report;
        golf = 6;
        report = yankee[golf];
        report = sizing.bind(tango)(report);
        verify = report.Text;
        report = {'style': null, 'accessibilityRole': 'header', 'variant': 'heading-lg/extrabold', 'color': 'header-primary'};
        offset = backup.title;
        report['style'] = offset;
        foxtrot = 7;
        offset = yankee[foxtrot];
        offset = sizing.bind(tango)(offset);
        output = offset.intl;
        kilo = output.string;
        offset = yankee[foxtrot];
        offset = sizing.bind(tango)(offset);
        offset = offset.t;
        offset = offset.biy1X1;
        offset = kilo.bind(output)(offset);
        report['children'] = offset;
        verify = options.bind(tango)(verify, report);
        report = new Array(4);
        report[0] = verify;
        golf = yankee[golf];
        golf = sizing.bind(tango)(golf);
        verify = golf.Text;
        golf = {};
        offset = backup.body;
        golf['style'] = offset;
        offset = 'text-md/medium';
        golf['variant'] = offset;
        offset = yankee[foxtrot];
        offset = sizing.bind(tango)(offset);
        result = offset.intl;
        output = result.format;
        offset = yankee[foxtrot];
        offset = sizing.bind(tango)(offset);
        offset = offset.t;
        kilo = offset.J86cyc;
        offset = {};
        offset['url'] = echo;
        offset = output.bind(result)(kilo, offset);
        golf['children'] = offset;
        golf = options.bind(tango)(verify, golf);
        report[1] = golf;
        offset = _closure1_slot1;
        verify = 8;
        oscar = yankee[verify];
        golf = offset.bind(tango)(oscar);
        oscar = {};
        kilo = backup.button;
        oscar['style'] = kilo;
        kilo = yankee[foxtrot];
        kilo = sizing.bind(tango)(kilo);
        result = kilo.intl;
        output = result.string;
        kilo = yankee[foxtrot];
        kilo = sizing.bind(tango)(kilo);
        kilo = kilo.t;
        kilo = kilo.xl8R+/;
        kilo = output.bind(result)(kilo);
        oscar['text'] = kilo;
        kilo = function() { // Original name: onPress
            zulu = _closure1_slot1;
            mike = _closure1_slot2;
            entity = 9;
            mike = mike[entity];
            entity = undefined;
            mike = zulu.bind(entity)(mike);
            entity = mike.hideActionSheet;
            entity = entity.bind(mike)();
            return entity;
        };
        oscar['onPress'] = kilo;
        kilo = yankee[verify];
        kilo = offset.bind(tango)(kilo);
        kilo = kilo.Colors;
        kilo = kilo.BRAND;
        oscar['color'] = kilo;
        kilo = yankee[verify];
        kilo = offset.bind(tango)(kilo);
        kilo = kilo.Sizes;
        kilo = kilo.SMALL;
        oscar['size'] = kilo;
        oscar = options.bind(tango)(golf, oscar);
        report[2] = oscar;
        oscar = yankee[verify];
        golf = offset.bind(tango)(oscar);
        oscar = {};
        backup = backup.button;
        oscar['style'] = backup;
        backup = yankee[foxtrot];
        backup = sizing.bind(tango)(backup);
        kilo = backup.intl;
        backup = kilo.string;
        foxtrot = yankee[foxtrot];
        foxtrot = sizing.bind(tango)(foxtrot);
        foxtrot = foxtrot.t;
        foxtrot = foxtrot.gQrLtr;
        foxtrot = backup.bind(kilo)(foxtrot);
        oscar['text'] = foxtrot;
        romeo = function() { // Original name: onPress
            zulu = _closure1_slot1;
            tango = _closure1_slot2;
            entity = 9;
            mike = tango[entity];
            entity = undefined;
            report = zulu.bind(entity)(mike);
            mike = report.hideActionSheet;
            mike = mike.bind(report)();
            mike = 10;
            mike = tango[mike];
            tango = zulu.bind(entity)(mike);
            zulu = _closure2_slot0;
            mike = true;
            mike = tango.bind(entity)(zulu, mike);
            return entity;
        };
        oscar['onPress'] = romeo;
        romeo = yankee[verify];
        romeo = offset.bind(tango)(romeo);
        romeo = romeo.Colors;
        romeo = romeo.TRANSPARENT;
        oscar['color'] = romeo;
        verify = yankee[verify];
        verify = offset.bind(tango)(verify);
        verify = verify.Sizes;
        verify = verify.SMALL;
        oscar['size'] = verify;
        oscar = options.bind(tango)(golf, oscar);
        report[3] = oscar;
        entity['children'] = report;
        entity = zulu.bind(tango)(mike, entity);
        return entity;
    };
    zulu['default'] = mike;
    return entity;
})();