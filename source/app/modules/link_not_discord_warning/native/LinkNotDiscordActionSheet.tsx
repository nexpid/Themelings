// app/modules/link_not_discord_warning/native/LinkNotDiscordActionSheet.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    report = argBar;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    entity = argBaz;
    var _closure1_slot1 = entity;
    var _closure1_slot2 = oscard;
    entity = global;
    option = entity.Object;
    golfie = option.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(option)(zuuluu, entity, tangon);
    entity = 0;
    golfie = oscard[entity];
    tangon = argCor;
    entity = undefined;
    tangon = tangon.bind(entity)(golfie);
    tangon = 1;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.Image;
    var _closure1_slot3 = tangon;
    tangon = 2;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    golfie = tangon.jsx;
    var _closure1_slot4 = golfie;
    tangon = tangon.jsxs;
    var _closure1_slot5 = tangon;
    tangon = 3;
    tangon = oscard[tangon];
    option = report.bind(entity)(tangon);
    golfie = option.createStyles;
    tangon = {};
    offset = 'center';
    verify = {'alignSelf': 'center', 'height': 105, 'marginBottom': 4294967280};
    tangon['image'] = verify;
    verify = {'textAlign': 'center', 'marginTop': 20, 'marginBottom': 8};
    tangon['title'] = verify;
    verify = {};
    verify['textAlign'] = offset;
    tangon['body'] = verify;
    verify = {'marginTop': 18, 'height': 40};
    tangon['button'] = verify;
    tangon = golfie.bind(option)(tangon);
    var _closure1_slot6 = tangon;
    tangon = 11;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/link_not_discord_warning/native/LinkNotDiscordActionSheet.tsx';
    tangon = report.bind(oscard)(tangon);
    michal = function(argFoo) { // Original name: _default
        entity = argFoo;
        echoed = entity.url;
        var _closure2_slot0 = echoed;
        entity = _closure1_slot6;
        tangon = undefined;
        backup = entity.bind(tangon)();
        option = _closure1_slot4;
        michal = _closure1_slot3;
        entity = {};
        zuuluu = backup.image;
        entity['style'] = zuuluu;
        sizing = _closure1_slot0;
        yankee = _closure1_slot2;
        zuuluu = 4;
        zuuluu = yankee[zuuluu];
        zuuluu = sizing.bind(tangon)(zuuluu);
        entity['source'] = zuuluu;
        report = option.bind(tangon)(michal, entity);
        zuuluu = _closure1_slot5;
        entity = 5;
        entity = yankee[entity];
        entity = sizing.bind(tangon)(entity);
        michal = entity.BottomSheet;
        entity = {};
        golfie = true;
        entity['startExpanded'] = golfie;
        entity['header'] = report;
        golfie = 6;
        report = yankee[golfie];
        report = sizing.bind(tangon)(report);
        verify = report.Text;
        report = {'style': null, 'accessibilityRole': 'header', 'variant': 'heading-lg/extrabold', 'color': 'header-primary'};
        offset = backup.title;
        report['style'] = offset;
        foxtra = 7;
        offset = yankee[foxtra];
        offset = sizing.bind(tangon)(offset);
        output = offset.intl;
        kiloes = output.string;
        offset = yankee[foxtra];
        offset = sizing.bind(tangon)(offset);
        offset = offset.t;
        offset = offset.biy1X1;
        offset = kiloes.bind(output)(offset);
        report['children'] = offset;
        verify = option.bind(tangon)(verify, report);
        report = new Array(4);
        report[0] = verify;
        golfie = yankee[golfie];
        golfie = sizing.bind(tangon)(golfie);
        verify = golfie.Text;
        golfie = {};
        offset = backup.body;
        golfie['style'] = offset;
        offset = 'text-md/medium';
        golfie['variant'] = offset;
        offset = yankee[foxtra];
        offset = sizing.bind(tangon)(offset);
        result = offset.intl;
        output = result.format;
        offset = yankee[foxtra];
        offset = sizing.bind(tangon)(offset);
        offset = offset.t;
        kiloes = offset.J86cyc;
        offset = {};
        offset['url'] = echoed;
        offset = output.bind(result)(kiloes, offset);
        golfie['children'] = offset;
        golfie = option.bind(tangon)(verify, golfie);
        report[1] = golfie;
        offset = _closure1_slot1;
        verify = 8;
        oscard = yankee[verify];
        golfie = offset.bind(tangon)(oscard);
        oscard = {};
        kiloes = backup.button;
        oscard['style'] = kiloes;
        kiloes = yankee[foxtra];
        kiloes = sizing.bind(tangon)(kiloes);
        result = kiloes.intl;
        output = result.string;
        kiloes = yankee[foxtra];
        kiloes = sizing.bind(tangon)(kiloes);
        kiloes = kiloes.t;
        kiloes = kiloes.xl8R+/;
        kiloes = output.bind(result)(kiloes);
        oscard['text'] = kiloes;
        kiloes = function() { // Original name: onPress
            zuuluu = _closure1_slot1;
            michal = _closure1_slot2;
            entity = 9;
            michal = michal[entity];
            entity = undefined;
            michal = zuuluu.bind(entity)(michal);
            entity = michal.hideActionSheet;
            entity = entity.bind(michal)();
            return entity;
        };
        oscard['onPress'] = kiloes;
        kiloes = yankee[verify];
        kiloes = offset.bind(tangon)(kiloes);
        kiloes = kiloes.Colors;
        kiloes = kiloes.BRAND;
        oscard['color'] = kiloes;
        kiloes = yankee[verify];
        kiloes = offset.bind(tangon)(kiloes);
        kiloes = kiloes.Sizes;
        kiloes = kiloes.SMALL;
        oscard['size'] = kiloes;
        oscard = option.bind(tangon)(golfie, oscard);
        report[2] = oscard;
        oscard = yankee[verify];
        golfie = offset.bind(tangon)(oscard);
        oscard = {};
        backup = backup.button;
        oscard['style'] = backup;
        backup = yankee[foxtra];
        backup = sizing.bind(tangon)(backup);
        kiloes = backup.intl;
        backup = kiloes.string;
        foxtra = yankee[foxtra];
        foxtra = sizing.bind(tangon)(foxtra);
        foxtra = foxtra.t;
        foxtra = foxtra.gQrLtr;
        foxtra = backup.bind(kiloes)(foxtra);
        oscard['text'] = foxtra;
        romeon = function() { // Original name: onPress
            zuuluu = _closure1_slot1;
            tangon = _closure1_slot2;
            entity = 9;
            michal = tangon[entity];
            entity = undefined;
            report = zuuluu.bind(entity)(michal);
            michal = report.hideActionSheet;
            michal = michal.bind(report)();
            michal = 10;
            michal = tangon[michal];
            tangon = zuuluu.bind(entity)(michal);
            zuuluu = _closure2_slot0;
            michal = true;
            michal = tangon.bind(entity)(zuuluu, michal);
            return entity;
        };
        oscard['onPress'] = romeon;
        romeon = yankee[verify];
        romeon = offset.bind(tangon)(romeon);
        romeon = romeon.Colors;
        romeon = romeon.TRANSPARENT;
        oscard['color'] = romeon;
        verify = yankee[verify];
        verify = offset.bind(tangon)(verify);
        verify = verify.Sizes;
        verify = verify.SMALL;
        oscard['size'] = verify;
        oscard = option.bind(tangon)(golfie, oscard);
        report[3] = oscard;
        entity['children'] = report;
        entity = zuuluu.bind(tangon)(michal, entity);
        return entity;
    };
    zuuluu['default'] = michal;
    return entity;
})();