// app/modules/soundboard/native/SoundboardActionCreators.tsx
export default (function(argFoo, argBar, argBaz, _, __, argFre, argPlu) {
    report = argBar;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    entity = argBaz;
    var _closure1_slot1 = entity;
    var _closure1_slot2 = oscard;
    entity = global;
    option = entity.Object;
    golfie = option.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(option)(zuuluu, entity, tangon);
    entity = 0;
    tangon = oscard[entity];
    entity = undefined;
    tangon = report.bind(entity)(tangon);
    tangon = tangon.ComponentActions;
    var _closure1_slot3 = tangon;
    tangon = 7;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/soundboard/native/SoundboardActionCreators.tsx';
    tangon = report.bind(oscard)(tangon);
    michal = function(argFoo) { // Original name: showSoundboardSoundPickerActionSheet
        entity = argFoo;
        golfie = entity.channel;
        michal = entity.analyticsSource;
        option = _closure1_slot0;
        zuuluu = _closure1_slot2;
        entity = 1;
        report = zuuluu[entity];
        entity = undefined;
        report = option.bind(entity)(report);
        verify = report.ComponentDispatch;
        oscard = verify.dispatch;
        report = _closure1_slot3;
        report = report.TOGGLE_CALL_CONTROL_DRAWER;
        report = oscard.bind(verify)(report);
        report = 2;
        report = zuuluu[report];
        verify = option.bind(entity)(report);
        oscard = verify.markDismissibleContentAsDismissed;
        report = 3;
        report = zuuluu[report];
        report = option.bind(entity)(report);
        report = report.DismissibleContent;
        report = report.SOUNDBOARD_MOBILE_NEW_BADGE;
        report = oscard.bind(verify)(report);
        report = _closure1_slot1;
        tangon = 4;
        tangon = zuuluu[tangon];
        oscard = report.bind(entity)(tangon);
        report = oscard.openLazy;
        tangon = 6;
        tangon = zuuluu[tangon];
        option = option.bind(entity)(tangon);
        tangon = 5;
        tangon = zuuluu[tangon];
        zuuluu = zuuluu.paths;
        tangon = option.bind(entity)(tangon, zuuluu);
        zuuluu = {};
        zuuluu['channel'] = golfie;
        zuuluu['analyticsSource'] = michal;
        michal = 'SoundboardSoundPickerActionSheet';
        michal = report.bind(oscard)(tangon, michal, zuuluu);
        return entity;
    };
    zuuluu['showSoundboardSoundPickerActionSheet'] = michal;
    return entity;
})();