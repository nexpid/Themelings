// app/modules/soundboard/native/SoundboardSoundPicker.tsx
export default (function(argFoo, argBar, argBaz, argCorge, _, argFred, argPlugh) {
    report = argBar;
    romeo = argBaz;
    zulu = argFred;
    oscar = argPlugh;
    var _closure1_slot0 = report;
    var _closure1_slot1 = romeo;
    var _closure1_slot2 = oscar;
    entity = global;
    options = entity.Object;
    golf = options.defineProperty;
    tango = {};
    entity = true;
    tango['value'] = entity;
    entity = '__esModule';
    entity = golf.bind(options)(zulu, entity, tango);
    entity = 0;
    tango = oscar[entity];
    entity = undefined;
    tango = romeo.bind(entity)(tango);
    var _closure1_slot3 = tango;
    tango = 1;
    golf = oscar[tango];
    tango = argCorge;
    golf = tango.bind(entity)(golf);
    var _closure1_slot4 = golf;
    tango = 2;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.View;
    var _closure1_slot5 = tango;
    tango = 3;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    options = tango.setSearchQuery;
    var _closure1_slot6 = options;
    tango = tango.useExpressionPickerStore;
    var _closure1_slot7 = tango;
    tango = 4;
    tango = oscar[tango];
    tango = romeo.bind(entity)(tango);
    var _closure1_slot8 = tango;
    tango = 5;
    tango = oscar[tango];
    tango = romeo.bind(entity)(tango);
    var _closure1_slot9 = tango;
    tango = 6;
    tango = oscar[tango];
    tango = romeo.bind(entity)(tango);
    var _closure1_slot10 = tango;
    tango = 7;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    yankee = tango.SOUND_ROW_HORIZONTAL_PADDING;
    foxtrot = 8;
    tango = oscar[foxtrot];
    tango = report.bind(entity)(tango);
    tango = tango.EXPRESSION_FOOTER_HEIGHT;
    var _closure1_slot11 = tango;
    tango = 9;
    options = oscar[tango];
    options = report.bind(entity)(options);
    options = options.jsx;
    var _closure1_slot12 = options;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.jsxs;
    var _closure1_slot13 = tango;
    tango = 10;
    tango = oscar[tango];
    verify = report.bind(entity)(tango);
    options = verify.createStyles;
    tango = {};
    offset = {};
    offset['marginBottom'] = foxtrot;
    tango['title'] = offset;
    offset = {'flex': 1, 'alignItems': 'center'};
    tango['container'] = offset;
    offset = {};
    offset['paddingHorizontal'] = yankee;
    yankee = 11;
    foxtrot = oscar[yankee];
    foxtrot = romeo.bind(entity)(foxtrot);
    foxtrot = foxtrot.spacing;
    foxtrot = foxtrot.PX_8;
    offset['padding'] = foxtrot;
    foxtrot = '100%';
    offset['width'] = foxtrot;
    tango['header'] = offset;
    offset = {'flex': 1, 'width': '100%'};
    tango['body'] = offset;
    offset = {'position': 'absolute', 'bottom': 0, 'left': 0, 'right': 0, 'zIndex': 1};
    yankee = oscar[yankee];
    yankee = romeo.bind(entity)(yankee);
    yankee = yankee.colors;
    yankee = yankee.BG_BASE_SECONDARY;
    offset['backgroundColor'] = yankee;
    tango['keyboardStickyFooter'] = offset;
    tango = options.bind(verify)(tango);
    var _closure1_slot14 = tango;
    tango = golf.memo;
    mike = function(argFoo) {
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            entity = argFoo;
            sizing = entity.channel;
            var _closure2_slot0 = sizing;
            yankee = entity.analyticsSource;
            entity = _closure1_slot14;
            tango = undefined;
            update = entity.bind(tango)();
            result = _closure1_slot4;
            entity = result.useState;
            record = 0;
            entity = entity.bind(result)(record);
            vacuum = _closure1_slot3;
            romeo = 2;
            entity = vacuum.bind(tango)(entity, romeo);
            foxtrot = entity[record];
            control = 1;
            sequence = entity[control];
            mike = result.useRef;
            entity = null;
            kilo = mike.bind(result)(entity);
            oscar = _closure1_slot0;
            report = _closure1_slot2;
            mike = 12;
            entity = report[mike];
            golf = oscar.bind(tango)(entity);
            entity = golf.useSharedValue;
            config = entity.bind(golf)(record);
            entity = 13;
            golf = report[entity];
            offset = oscar.bind(tango)(golf);
            verify = offset.useStateFromStores;
            golf = _closure1_slot9;
            options = new Array(1);
            options[0] = golf;
            golf = function() {
                mike = _closure1_slot9;
                entity = mike.getCurrentUser;
                entity = entity.bind(mike)();
                return entity;
            };
            echo = verify.bind(offset)(options, golf);
            var _closure2_slot1 = echo;
            golf = report[entity];
            offset = oscar.bind(tango)(golf);
            verify = offset.useStateFromStores;
            golf = _closure1_slot8;
            options = new Array(1);
            options[0] = golf;
            golf = function() {
                mike = _closure1_slot8;
                entity = mike.getMediaSessionId;
                entity = entity.bind(mike)();
                return entity;
            };
            offset = verify.bind(offset)(options, golf);
            options = _closure1_slot1;
            golf = 14;
            verify = report[golf];
            backup = options.bind(tango)(verify);
            verify = {};
            source = true;
            verify['filterOutEmptyCurrentGuild'] = source;
            verify = backup.bind(tango)(sizing, verify);
            backup = verify.categories;
            var _closure2_slot2 = backup;
            source = _closure1_slot7;
            verify = function(argFoo) {
                entity = argFoo;
                entity = entity.searchQuery;
                return entity;
            };
            source = source.bind(tango)(verify);
            context = result.useState;
            verify = 15;
            verify = report[verify];
            papa = oscar.bind(tango)(verify);
            verify = papa.searchSoundsWithSections;
            variable41 = papa;
            variable40 = source;
            variable39 = backup;
            variable38 = echo;
            variable37 = sizing;
            verify = variable41[verify](variable40, variable39, variable38, variable37, variable36);
            verify = context.bind(result)(verify);
            verify = vacuum.bind(tango)(verify, romeo);
            romeo = verify[record];
            verify = verify[control];
            var _closure2_slot3 = verify;
            golf = report[golf];
            verify = oscar.bind(tango)(golf);
            golf = verify.useSearchCategories;
            vacuum = golf.bind(verify)(backup, romeo, source);
            golf = 16;
            golf = report[golf];
            golf = options.bind(tango)(golf);
            papa = golf.bind(tango)();
            entity = report[entity];
            romeo = oscar.bind(tango)(entity);
            verify = romeo.useStateFromStores;
            entity = _closure1_slot10;
            golf = new Array(1);
            golf[0] = entity;
            entity = function() {
                entity = _closure1_slot10;
                entity = entity.keyboardOpen;
                return entity;
            };
            target = verify.bind(romeo)(golf, entity);
            entity = 17;
            golf = report[entity];
            verify = options.bind(tango)(golf);
            golf = 18;
            golf = report[golf];
            golf = options.bind(tango)(golf);
            golf = golf.SOUNDBOARD_ACTION_SHEET;
            golf = verify.bind(tango)(golf);
            golf = golf.analyticsLocations;
            romeo = result.useCallback;
            verify = new Array(3);
            verify[0] = sizing;
            verify[1] = echo;
            verify[2] = backup;
            zulu = function(argFoo) {
                options = argFoo;
                mike = _closure1_slot6;
                entity = undefined;
                mike = mike.bind(entity)(options);
                zulu = _closure2_slot3;
                report = _closure1_slot0;
                oscar = _closure1_slot2;
                tango = 15;
                tango = oscar[tango];
                golf = report.bind(entity)(tango);
                oscar = golf.searchSoundsWithSections;
                yankee = _closure2_slot2;
                offset = _closure2_slot1;
                verify = _closure2_slot0;
                foxtrot = golf;
                romeo = options;
                mike = foxtrot[oscar](romeo, yankee, offset, verify, options);
                mike = zulu.bind(entity)(mike);
                return entity;
            };
            whiskey = romeo.bind(result)(zulu, verify);
            zulu = 19;
            zulu = report[zulu];
            options = options.bind(tango)(zulu);
            zulu = {};
            verify = 20;
            romeo = report[verify];
            romeo = oscar.bind(tango)(romeo);
            romeo = romeo.ImpressionTypes;
            romeo = romeo.HALFSHEET;
            zulu['type'] = romeo;
            verify = report[verify];
            verify = oscar.bind(tango)(verify);
            verify = verify.ImpressionNames;
            verify = verify.SOUNDBOARD_POPOUT;
            zulu['name'] = verify;
            verify = {};
            verify['source'] = yankee;
            yankee = sizing.guild_id;
            verify['guild_id'] = yankee;
            verify['media_session_id'] = offset;
            zulu['properties'] = verify;
            zulu = options.bind(tango)(zulu);
            zulu = report[mike];
            verify = oscar.bind(tango)(zulu);
            options = verify.useSharedValue;
            zulu = -1;
            yankee = options.bind(verify)(zulu);
            mike = report[mike];
            options = oscar.bind(tango)(mike);
            zulu = options.useSharedValue;
            mike = false;
            control = zulu.bind(options)(mike);
            zulu = _closure1_slot13;
            entity = report[entity];
            entity = oscar.bind(tango)(entity);
            mike = entity.AnalyticsLocationProvider;
            entity = {};
            entity['value'] = golf;
            sierra = 21;
            report = report[sierra];
            oscar = oscar.bind(tango)(report);
            report = oscar.isIOS;
            oscar = report.bind(oscar)();
            if(!oscar) { _fun00002_ip = 715; continue _fun00001 }
 667:
            options = _closure1_slot12;
            golf = _closure1_slot1;
            verify = _closure1_slot2;
            report = 22;
            report = verify[report];
            golf = golf.bind(tango)(report);
            report = {};
            report['animatedSheetIndex'] = yankee;
            verify = 'soundboard-footer';
            report['portalHostName'] = verify;
            oscar = options.bind(tango)(golf, report);
 715:
            report = new Array(2);
            report[0] = oscar;
            options = _closure1_slot13;
            offset = _closure1_slot0;
            verify = _closure1_slot2;
            oscar = 23;
            oscar = verify[oscar];
            oscar = offset.bind(tango)(oscar);
            golf = oscar.BottomSheet;
            oscar = {'animatedIndex': null, 'scrollable': true, 'startExpanded': true};
            oscar['animatedIndex'] = yankee;
            verify = verify[sierra];
            offset = offset.bind(tango)(verify);
            verify = offset.isAndroid;
            offset = verify.bind(offset)();
            verify = undefined;
            if(!offset) { _fun00002_ip = 844; continue _fun00001 }
 796:
            romeo = _closure1_slot12;
            yankee = _closure1_slot0;
            result = _closure1_slot2;
            offset = 24;
            offset = result[offset];
            offset = yankee.bind(tango)(offset);
            yankee = offset.PortalHost;
            offset = {};
            result = 'soundboard-footer';
            offset['name'] = result;
            verify = romeo.bind(tango)(yankee, offset);
 844:
            oscar['footer'] = verify;
            result = _closure1_slot13;
            offset = _closure1_slot5;
            verify = {};
            yankee = update.container;
            verify['style'] = yankee;
            romeo = _closure1_slot12;
            source = _closure1_slot0;
            context = _closure1_slot2;
            yankee = 25;
            yankee = context[yankee];
            yankee = source.bind(tango)(yankee);
            echo = yankee.Text;
            yankee = {};
            status = 'heading-lg/bold';
            yankee['variant'] = status;
            status = update.title;
            yankee['style'] = status;
            equality = 26;
            status = context[equality];
            status = source.bind(tango)(status);
            quebec = status.intl;
            lima = quebec.string;
            status = context[equality];
            status = source.bind(tango)(status);
            status = status.t;
            status = status.ABjMWF;
            status = lima.bind(quebec)(status);
            yankee['children'] = status;
            yankee = romeo.bind(tango)(echo, yankee);
            echo = new Array(4);
            echo[0] = yankee;
            yankee = {};
            status = update.header;
            yankee['style'] = status;
            status = 27;
            status = context[status];
            status = source.bind(tango)(status);
            lima = status.SearchField;
            status = {};
            quebec = 'md';
            status['size'] = quebec;
            quebec = context[equality];
            quebec = source.bind(tango)(quebec);
            variable36 = quebec.intl;
            quebec = variable36.string;
            equality = context[equality];
            equality = source.bind(tango)(equality);
            equality = equality.t;
            equality = equality.sKt3xc;
            equality = quebec.bind(variable36)(equality);
            status['placeholder'] = equality;
            status['onChange'] = whiskey;
            status = romeo.bind(tango)(lima, status);
            yankee['children'] = status;
            yankee = romeo.bind(tango)(offset, yankee);
            echo[1] = yankee;
            yankee = {};
            update = update.body;
            yankee['style'] = update;
            update = 28;
            update = context[update];
            update = source.bind(tango)(update);
            source = update.SoundboardSoundPickerList;
            update = {};
            update['listRef'] = kilo;
            update['channel'] = sizing;
            context = _closure1_slot11;
            if(!target) { _fun00002_ip = 1175; continue _fun00001 }
 1143:
            status = _closure1_slot0;
            target = _closure1_slot2;
            target = target[sierra];
            status = status.bind(tango)(target);
            target = status.isIOS;
            target = target.bind(status)();
            record = 0;
            if(target) { _fun00002_ip = 1180; continue _fun00001 }
 1175:
            record = papa.bottom;
 1180:
            record = context + record;
            update['insetBottom'] = record;
            update['scrollPosition'] = config;
            update['setCategoryIndex'] = sequence;
            update['categories'] = vacuum;
            update['shouldShowPremiumUpsell'] = control;
            update = romeo.bind(tango)(source, update);
            yankee['children'] = update;
            yankee = romeo.bind(tango)(offset, yankee);
            echo[2] = yankee;
            romeo = _closure1_slot12;
            yankee = _closure1_slot1;
            output = _closure1_slot2;
            update = 29;
            update = output[update];
            source = yankee.bind(tango)(update);
            update = {};
            update['shouldShow'] = control;
            update = romeo.bind(tango)(source, update);
            echo[3] = update;
            verify['children'] = echo;
            offset = result.bind(tango)(offset, verify);
            verify = new Array(2);
            verify[0] = offset;
            offset = 30;
            offset = output[offset];
            yankee = yankee.bind(tango)(offset);
            offset = {};
            sizing = sizing.guild_id;
            offset['guildId'] = sizing;
            offset['listRef'] = kilo;
            offset['categories'] = backup;
            offset['categoryIndex'] = foxtrot;
            offset = romeo.bind(tango)(yankee, offset);
            verify[1] = offset;
            oscar['children'] = verify;
            oscar = options.bind(tango)(golf, oscar);
            report[1] = oscar;
            entity['children'] = report;
            entity = zulu.bind(tango)(mike, entity);
            return entity;
        }
    };
    mike = tango.bind(golf)(mike);
    tango = 31;
    tango = oscar[tango];
    oscar = report.bind(entity)(tango);
    report = oscar.fileFinishedImporting;
    tango = 'modules/soundboard/native/SoundboardSoundPicker.tsx';
    tango = report.bind(oscar)(tango);
    zulu['default'] = mike;
    return entity;
})();