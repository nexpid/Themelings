// app/modules/soundboard/useGuildIdsToFetchSoundsFor.tsx
export default (function(argFoo, argBar, argBaz, _, __, argFred, argPlugh) {
    report = argBar;
    golf = argBaz;
    zulu = argFred;
    oscar = argPlugh;
    var _closure1_slot0 = report;
    var _closure1_slot1 = golf;
    var _closure1_slot2 = oscar;
    entity = function(argFoo, argBar) { // Original name: _getGuildIdsToFetchSoundsFor
        mike = argBar;
        var _closure2_slot0 = mike;
        tango = _closure1_slot1;
        zulu = _closure1_slot2;
        mike = 3;
        zulu = zulu[mike];
        mike = undefined;
        tango = tango.bind(mike)(zulu);
        zulu = tango.keys;
        mike = argFoo;
        zulu = zulu.bind(tango)(mike);
        mike = zulu.filter;
        entity = function(argFoo) {
            zulu = _closure2_slot0;
            mike = zulu.get;
            entity = argFoo;
            mike = mike.bind(zulu)(entity);
            entity = null;
            entity = entity == mike;
            return entity;
        };
        entity = mike.bind(zulu)(entity);
        return entity;
    };
    var _closure1_slot6 = entity;
    entity = global;
    verify = entity.Object;
    options = verify.defineProperty;
    tango = {};
    entity = true;
    tango['value'] = entity;
    entity = '__esModule';
    entity = options.bind(verify)(zulu, entity, tango);
    entity = 0;
    tango = oscar[entity];
    entity = undefined;
    tango = report.bind(entity)(tango);
    tango = tango.useMemo;
    var _closure1_slot3 = tango;
    tango = 1;
    tango = oscar[tango];
    tango = golf.bind(entity)(tango);
    var _closure1_slot4 = tango;
    tango = 2;
    tango = oscar[tango];
    tango = golf.bind(entity)(tango);
    var _closure1_slot5 = tango;
    tango = 5;
    tango = oscar[tango];
    oscar = report.bind(entity)(tango);
    report = oscar.fileFinishedImporting;
    tango = 'modules/soundboard/useGuildIdsToFetchSoundsFor.tsx';
    tango = report.bind(oscar)(tango);
    tango = function() { // Original name: useGuildIdsToFetchSoundsFor
        report = _closure1_slot0;
        golf = _closure1_slot2;
        zulu = 4;
        oscar = golf[zulu];
        tango = undefined;
        offset = report.bind(tango)(oscar);
        verify = offset.useStateFromStores;
        oscar = _closure1_slot4;
        options = new Array(1);
        options[0] = oscar;
        oscar = function() {
            mike = _closure1_slot4;
            entity = mike.getGuilds;
            entity = entity.bind(mike)();
            return entity;
        };
        oscar = verify.bind(offset)(options, oscar);
        var _closure2_slot0 = oscar;
        zulu = golf[zulu];
        options = report.bind(tango)(zulu);
        golf = options.useStateFromStores;
        zulu = _closure1_slot5;
        report = new Array(1);
        report[0] = zulu;
        zulu = function() {
            mike = _closure1_slot5;
            entity = mike.getSounds;
            entity = entity.bind(mike)();
            return entity;
        };
        report = golf.bind(options)(report, zulu);
        var _closure2_slot1 = report;
        zulu = _closure1_slot3;
        mike = new Array(2);
        mike[0] = oscar;
        mike[1] = report;
        entity = function() {
            tango = _closure1_slot6;
            zulu = _closure2_slot0;
            mike = _closure2_slot1;
            entity = undefined;
            entity = tango.bind(entity)(zulu, mike);
            return entity;
        };
        entity = zulu.bind(tango)(entity, mike);
        return entity;
    };
    zulu['useGuildIdsToFetchSoundsFor'] = tango;
    mike = function() { // Original name: getGuildIdsToFetchSoundsFor
        tango = _closure1_slot6;
        zulu = _closure1_slot4;
        mike = zulu.getGuilds;
        zulu = mike.bind(zulu)();
        mike = _closure1_slot5;
        entity = mike.getSounds;
        mike = entity.bind(mike)();
        entity = undefined;
        entity = tango.bind(entity)(zulu, mike);
        return entity;
    };
    zulu['getGuildIdsToFetchSoundsFor'] = mike;
    return entity;
})();