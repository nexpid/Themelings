// app/modules/icymi/native/CaughtUpRow.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    report = argBar;
    romeon = argBaz;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    var _closure1_slot1 = romeon;
    var _closure1_slot2 = oscard;
    entity = global;
    option = entity.Object;
    golfie = option.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(option)(zuuluu, entity, tangon);
    entity = 0;
    tangon = oscard[entity];
    entity = undefined;
    tangon = romeon.bind(entity)(tangon);
    var _closure1_slot3 = tangon;
    foxtra = 1;
    tangon = oscard[foxtra];
    tangon = romeon.bind(entity)(tangon);
    var _closure1_slot4 = tangon;
    tangon = 2;
    golfie = oscard[tangon];
    tangon = argCor;
    tangon = tangon.bind(entity)(golfie);
    var _closure1_slot5 = tangon;
    tangon = 3;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.View;
    var _closure1_slot6 = tangon;
    tangon = 4;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    offset = tangon.ICYMI_MARGIN;
    tangon = 5;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    golfie = tangon.jsx;
    var _closure1_slot7 = golfie;
    tangon = tangon.jsxs;
    var _closure1_slot8 = tangon;
    tangon = 6;
    tangon = oscard[tangon];
    option = romeon.bind(entity)(tangon);
    golfie = option.createAnimatedComponent;
    tangon = 7;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.Text;
    tangon = golfie.bind(option)(tangon);
    var _closure1_slot9 = tangon;
    tangon = 8;
    tangon = oscard[tangon];
    option = report.bind(entity)(tangon);
    golfie = option.createStyles;
    tangon = {};
    verify = {'flex': 1, 'display': 'flex', 'alignItems': 'center', 'justifyContent': 'center'};
    yankee = 9;
    backup = oscard[yankee];
    backup = romeon.bind(entity)(backup);
    backup = backup.spacing;
    backup = backup.PX_32;
    verify['marginVertical'] = backup;
    tangon['container'] = verify;
    verify = {};
    verify['marginHorizontal'] = offset;
    backup = oscard[yankee];
    backup = romeon.bind(entity)(backup);
    backup = backup.spacing;
    backup = backup.PX_24;
    verify['marginBottom'] = backup;
    tangon['textContainer'] = verify;
    verify = {};
    verify['flex'] = foxtra;
    foxtra = oscard[yankee];
    foxtra = romeon.bind(entity)(foxtra);
    foxtra = foxtra.spacing;
    foxtra = foxtra.PX_24;
    verify['marginBottom'] = foxtra;
    tangon['recommendedGuildsContainer'] = verify;
    verify = {'display': 'flex', 'alignItems': 'center', 'justifyContent': 'center'};
    foxtra = oscard[yankee];
    foxtra = romeon.bind(entity)(foxtra);
    foxtra = foxtra.spacing;
    foxtra = foxtra.PX_24;
    verify['marginBottom'] = foxtra;
    tangon['iconWrapper'] = verify;
    verify = {'height': 40, 'width': 40};
    tangon['icon'] = verify;
    verify = {'alignSelf': 'center', 'marginBottom': null, 'textAlign': 'center'};
    foxtra = oscard[yankee];
    foxtra = romeon.bind(entity)(foxtra);
    foxtra = foxtra.spacing;
    foxtra = foxtra.PX_8;
    verify['marginBottom'] = foxtra;
    tangon['headerText'] = verify;
    verify = {'alignSelf': 'center', 'textAlign': 'center'};
    tangon['subtitleText'] = verify;
    verify = {'flex': 1, 'width': '100%'};
    yankee = oscard[yankee];
    yankee = romeon.bind(entity)(yankee);
    yankee = yankee.spacing;
    yankee = yankee.PX_12;
    verify['gap'] = yankee;
    verify['paddingHorizontal'] = offset;
    tangon['buttonContainer'] = verify;
    verify = {'position': 'absolute', 'top': 0, 'left': 0, 'right': 0, 'height': 150};
    tangon['gradient'] = verify;
    tangon = golfie.bind(option)(tangon);
    var _closure1_slot10 = tangon;
    tangon = {};
    golfie = 'function CaughtUpRowTsx1(){const{visibleSharedValue,withTiming,Easing}=this.__closure;return{transform:[{translateY:visibleSharedValue.get()?withTiming(0,{duration:250,easing:Easing.bezier(0.5,1.8,0.5,1)}):-80}],opacity:visibleSharedValue.get()?withTiming(1,{duration:100,easing:Easing.out(Easing.bezierFn(0.33,1,0.68,1))}):0};}';
    tangon['code'] = golfie;
    var _closure1_slot11 = tangon;
    tangon = {};
    golfie = 'function CaughtUpRowTsx2(){const{visibleSharedValue,withDelay,withSequence,withTiming,Easing}=this.__closure;return{transform:[{translateY:visibleSharedValue.get()?withDelay(80,withSequence(withTiming(8,{duration:100,easing:Easing.inOut(Easing.ease)}),withTiming(0,{duration:300,easing:Easing.out(Easing.ease)}))):0}]};}';
    tangon['code'] = golfie;
    var _closure1_slot12 = tangon;
    tangon = {};
    golfie = 'function CaughtUpRowTsx3(){const{visibleSharedValue,withDelay,withSequence,withTiming,Easing}=this.__closure;return{transform:[{translateY:visibleSharedValue.get()?withDelay(115,withSequence(withTiming(8,{duration:150,easing:Easing.inOut(Easing.ease)}),withTiming(0,{duration:300,easing:Easing.out(Easing.ease)}))):0}]};}';
    tangon['code'] = golfie;
    var _closure1_slot13 = tangon;
    tangon = 22;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/icymi/native/CaughtUpRow.tsx';
    tangon = report.bind(oscard)(tangon);
    michal = function(argFoo) { // Original name: ExploreServersRow
        michal = argFoo;
        michal = michal.visible;
        var _closure2_slot0 = michal;
        zuuluu = _closure1_slot10;
        tangon = undefined;
        verify = zuuluu.bind(tangon)();
        offset = _closure1_slot0;
        backup = _closure1_slot2;
        golfie = 6;
        zuuluu = backup[golfie];
        oscard = offset.bind(tangon)(zuuluu);
        report = oscard.useSharedValue;
        zuuluu = false;
        option = report.bind(oscard)(zuuluu);
        var _closure2_slot1 = option;
        oscard = _closure1_slot5;
        yankee = oscard.useEffect;
        report = new Array(2);
        report[0] = michal;
        report[1] = option;
        michal = function() {
            _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
                entity = _closure2_slot0;
                if(!entity) { _fun00002_ip = 31; continue _fun00001 }
 10:
                tangon = _closure2_slot1;
                zuuluu = tangon.get;
                zuuluu = zuuluu.bind(tangon)();
                michal = _closure2_slot0;
                entity = zuuluu !== michal;
 31:
                if(!entity) { _fun00002_ip = 65; continue _fun00001 }
 34:
                entity = global;
                tangon = entity.setTimeout;
                zuuluu = undefined;
                michal = function() {
                    zuuluu = _closure2_slot1;
                    michal = zuuluu.set;
                    entity = true;
                    entity = michal.bind(zuuluu)(entity);
                    entity = undefined;
                    return entity;
                };
                entity = 500;
                entity = tangon.bind(zuuluu)(michal, entity);
 65:
                entity = undefined;
                return entity;
            }
        };
        michal = yankee.bind(oscard)(michal, report);
        michal = oscard.useState;
        report = michal.bind(oscard)(zuuluu);
        zuuluu = _closure1_slot4;
        michal = 2;
        zuuluu = zuuluu.bind(tangon)(report, michal);
        romeon = 0;
        update = zuuluu[romeon];
        michal = 1;
        michal = zuuluu[michal];
        var _closure2_slot2 = michal;
        report = oscard.useCallback;
        zuuluu = _closure1_slot3;
        michal = function* () {
            entity = function* () { // Original name: ?anon_0_
                _fun00003: for(var _fun00004_ip = 0; ; ) switch(_fun00004_ip) {
 0:
                    StartGenerator();
                    ResumeGenerator(result_out_reg=0, return_bool_out_reg=1);
                    if(michal) { _fun00004_ip = 138; continue _fun00003 }
 10:
                    tangon = _closure2_slot2;
                    zuuluu = undefined;
                    michal = true;
                    michal = tangon.bind(zuuluu)(michal);
                    tangon = _closure1_slot0;
                    report = _closure1_slot2;
                    michal = 10;
                    michal = report[michal];
                    option = tangon.bind(zuuluu)(michal);
                    golfie = option.trackItemInteraction;
                    oscard = 'caught_up';
                    michal = 'press_explore';
                    michal = golfie.bind(option)(oscard, oscard, michal);
                    michal = 11;
                    michal = report[michal];
                    tangon = tangon.bind(zuuluu)(michal);
                    michal = tangon.maybeFetchGuildDiscoveryCategories;
                    michal = michal.bind(tangon)();
                    SaveGenerator(address=100);
 98:
                    return michal;
 100:
                    ResumeGenerator(result_out_reg=1, return_bool_out_reg=3);
                    if(tangon) { _fun00004_ip = 135; continue _fun00003 }
 106:
                    tangon = global;
                    oscard = tangon.setTimeout;
                    report = function() {
                        zuuluu = _closure1_slot0;
                        michal = _closure1_slot2;
                        entity = 12;
                        michal = michal[entity];
                        entity = undefined;
                        tangon = zuuluu.bind(entity)(michal);
                        zuuluu = tangon.pushICYMIInfoModal;
                        michal = {'extendedOnboarding': true, 'skipIntro': true};
                        michal = zuuluu.bind(tangon)(michal);
                        michal = global;
                        tangon = michal.setTimeout;
                        zuuluu = function() {
                            zuuluu = _closure2_slot2;
                            entity = undefined;
                            michal = false;
                            michal = zuuluu.bind(entity)(michal);
                            return entity;
                        };
                        michal = 500;
                        michal = tangon.bind(entity)(zuuluu, michal);
                        return entity;
                    };
                    tangon = 100;
                    tangon = oscard.bind(zuuluu)(report, tangon);
                    return zuuluu;
 135:
                    return michal;
 138:
                    return entity;
                }
            };
            return entity;
        };
        zuuluu = zuuluu.bind(tangon)(michal);
        michal = new Array(0);
        source = report.bind(oscard)(zuuluu, michal);
        report = oscard.useCallback;
        zuuluu = function() {
            _fun00005: for(var _fun00006_ip = 0; ; ) switch(_fun00006_ip) {
 0:
                zuuluu = _closure1_slot0;
                tangon = _closure1_slot2;
                entity = 10;
                michal = tangon[entity];
                entity = undefined;
                golfie = zuuluu.bind(entity)(michal);
                oscard = golfie.trackItemInteraction;
                report = 'caught_up';
                michal = 'press_home';
                michal = oscard.bind(golfie)(report, report, michal);
                michal = 13;
                michal = tangon[michal];
                zuuluu = zuuluu.bind(entity)(michal);
                michal = zuuluu.getRootNavigationRef;
                report = michal.bind(zuuluu)();
                michal = null;
                if(!(michal != report)) { _fun00006_ip = 105; continue _fun00005 }
 78:
                tangon = report.navigate;
                zuuluu = {};
                michal = 'guilds';
                zuuluu['screen'] = michal;
                michal = 'tabs';
                michal = tangon.bind(report)(michal, zuuluu);
 105:
                return entity;
            }
        };
        michal = new Array(0);
        result = report.bind(oscard)(zuuluu, michal);
        michal = backup[golfie];
        report = offset.bind(tangon)(michal);
        zuuluu = report.useAnimatedStyle;
        michal = function() { // Original name: f
            _fun00007: for(var _fun00008_ip = 0; ; ) switch(_fun00008_ip) {
 0:
                entity = {};
                tangon = {};
                report = _closure2_slot1;
                zuuluu = report.get;
                report = zuuluu.bind(report)();
                zuuluu = -80;
                if(!report) { _fun00008_ip = 141; continue _fun00007 }
 29:
                offset = _closure1_slot0;
                yankee = _closure1_slot2;
                report = 14;
                report = yankee[report];
                verify = undefined;
                option = offset.bind(verify)(report);
                golfie = option.withTiming;
                oscard = {};
                report = 250;
                oscard['duration'] = report;
                report = 6;
                report = yankee[report];
                report = offset.bind(verify)(report);
                romeon = report.Easing;
                yankee = romeon.bezier;
                offset = 0.5;
                kiloes = 1.8;
                foxtra = 1;
                output = romeon;
                sizing = offset;
                backup = offset;
                report = output[yankee](sizing, kiloes, backup, foxtra, romeon);
                oscard['easing'] = report;
                report = 0;
                zuuluu = golfie.bind(option)(report, oscard);
 141:
                tangon['translateY'] = zuuluu;
                zuuluu = new Array(1);
                zuuluu[0] = tangon;
                entity['transform'] = zuuluu;
                zuuluu = _closure2_slot1;
                michal = zuuluu.get;
                zuuluu = michal.bind(zuuluu)();
                michal = 0;
                if(!zuuluu) { _fun00008_ip = 315; continue _fun00007 }
 179:
                offset = _closure1_slot0;
                yankee = _closure1_slot2;
                zuuluu = 14;
                zuuluu = yankee[zuuluu];
                golfie = undefined;
                oscard = offset.bind(golfie)(zuuluu);
                report = oscard.withTiming;
                tangon = {};
                zuuluu = 100;
                tangon['duration'] = zuuluu;
                zuuluu = 6;
                option = yankee[zuuluu];
                option = offset.bind(golfie)(option);
                verify = option.Easing;
                option = verify.out;
                zuuluu = yankee[zuuluu];
                zuuluu = offset.bind(golfie)(zuuluu);
                romeon = zuuluu.Easing;
                yankee = romeon.bezierFn;
                sizing = 0.33;
                zuuluu = 1;
                backup = 0.68;
                output = romeon;
                kiloes = zuuluu;
                foxtra = zuuluu;
                golfie = output[yankee](sizing, kiloes, backup, foxtra, romeon);
                golfie = option.bind(verify)(golfie);
                tangon['easing'] = golfie;
                michal = report.bind(oscard)(zuuluu, tangon);
 315:
                entity['opacity'] = michal;
                return entity;
            }
        };
        yankee = {};
        yankee['visibleSharedValue'] = option;
        oscard = 14;
        foxtra = backup[oscard];
        foxtra = offset.bind(tangon)(foxtra);
        foxtra = foxtra.withTiming;
        yankee['withTiming'] = foxtra;
        foxtra = backup[golfie];
        foxtra = offset.bind(tangon)(foxtra);
        foxtra = foxtra.Easing;
        yankee['Easing'] = foxtra;
        michal['__closure'] = yankee;
        yankee = 6575188656069.0;
        michal['__workletHash'] = yankee;
        yankee = _closure1_slot11;
        michal['__initData'] = yankee;
        vacuum = zuuluu.bind(report)(michal);
        michal = backup[golfie];
        report = offset.bind(tangon)(michal);
        zuuluu = report.useAnimatedStyle;
        michal = function() { // Original name: b
            _fun00009: for(var _fun00010_ip = 0; ; ) switch(_fun00010_ip) {
 0:
                entity = {};
                zuuluu = {};
                tangon = _closure2_slot1;
                michal = tangon.get;
                tangon = michal.bind(tangon)();
                romeon = 0;
                michal = 0;
                if(!tangon) { _fun00010_ip = 262; continue _fun00009 }
 30:
                output = _closure1_slot0;
                result = _closure1_slot2;
                foxtra = 6;
                tangon = result[foxtra];
                sizing = undefined;
                golfie = output.bind(sizing)(tangon);
                oscard = golfie.withDelay;
                tangon = result[foxtra];
                verify = output.bind(sizing)(tangon);
                option = verify.withSequence;
                tangon = 14;
                report = result[tangon];
                backup = output.bind(sizing)(report);
                yankee = backup.withTiming;
                offset = {};
                report = 100;
                offset['duration'] = report;
                report = result[foxtra];
                report = output.bind(sizing)(report);
                echoed = report.Easing;
                kiloes = echoed.inOut;
                report = result[foxtra];
                report = output.bind(sizing)(report);
                report = report.Easing;
                report = report.ease;
                report = kiloes.bind(echoed)(report);
                offset['easing'] = report;
                report = 8;
                report = yankee.bind(backup)(report, offset);
                tangon = result[tangon];
                yankee = output.bind(sizing)(tangon);
                offset = yankee.withTiming;
                tangon = {};
                backup = 300;
                tangon['duration'] = backup;
                backup = result[foxtra];
                backup = output.bind(sizing)(backup);
                kiloes = backup.Easing;
                backup = kiloes.out;
                foxtra = result[foxtra];
                foxtra = output.bind(sizing)(foxtra);
                foxtra = foxtra.Easing;
                foxtra = foxtra.ease;
                foxtra = backup.bind(kiloes)(foxtra);
                tangon['easing'] = foxtra;
                tangon = offset.bind(yankee)(romeon, tangon);
                report = option.bind(verify)(report, tangon);
                tangon = 80;
                michal = oscard.bind(golfie)(tangon, report);
 262:
                zuuluu['translateY'] = michal;
                michal = new Array(1);
                michal[0] = zuuluu;
                entity['transform'] = michal;
                return entity;
            }
        };
        yankee = {};
        yankee['visibleSharedValue'] = option;
        foxtra = backup[golfie];
        foxtra = offset.bind(tangon)(foxtra);
        foxtra = foxtra.withDelay;
        yankee['withDelay'] = foxtra;
        foxtra = backup[golfie];
        foxtra = offset.bind(tangon)(foxtra);
        foxtra = foxtra.withSequence;
        yankee['withSequence'] = foxtra;
        foxtra = backup[oscard];
        foxtra = offset.bind(tangon)(foxtra);
        foxtra = foxtra.withTiming;
        yankee['withTiming'] = foxtra;
        foxtra = backup[golfie];
        foxtra = offset.bind(tangon)(foxtra);
        foxtra = foxtra.Easing;
        yankee['Easing'] = foxtra;
        michal['__closure'] = yankee;
        yankee = 469742746264.0;
        michal['__workletHash'] = yankee;
        yankee = _closure1_slot12;
        michal['__initData'] = yankee;
        echoed = zuuluu.bind(report)(michal);
        michal = backup[golfie];
        zuuluu = offset.bind(tangon)(michal);
        michal = zuuluu.useAnimatedStyle;
        entity = function() { // Original name: x
            _fun00011: for(var _fun00012_ip = 0; ; ) switch(_fun00012_ip) {
 0:
                entity = {};
                zuuluu = {};
                tangon = _closure2_slot1;
                michal = tangon.get;
                tangon = michal.bind(tangon)();
                romeon = 0;
                michal = 0;
                if(!tangon) { _fun00012_ip = 262; continue _fun00011 }
 30:
                output = _closure1_slot0;
                result = _closure1_slot2;
                foxtra = 6;
                tangon = result[foxtra];
                sizing = undefined;
                golfie = output.bind(sizing)(tangon);
                oscard = golfie.withDelay;
                tangon = result[foxtra];
                verify = output.bind(sizing)(tangon);
                option = verify.withSequence;
                tangon = 14;
                report = result[tangon];
                backup = output.bind(sizing)(report);
                yankee = backup.withTiming;
                offset = {};
                report = 150;
                offset['duration'] = report;
                report = result[foxtra];
                report = output.bind(sizing)(report);
                echoed = report.Easing;
                kiloes = echoed.inOut;
                report = result[foxtra];
                report = output.bind(sizing)(report);
                report = report.Easing;
                report = report.ease;
                report = kiloes.bind(echoed)(report);
                offset['easing'] = report;
                report = 8;
                report = yankee.bind(backup)(report, offset);
                tangon = result[tangon];
                yankee = output.bind(sizing)(tangon);
                offset = yankee.withTiming;
                tangon = {};
                backup = 300;
                tangon['duration'] = backup;
                backup = result[foxtra];
                backup = output.bind(sizing)(backup);
                kiloes = backup.Easing;
                backup = kiloes.out;
                foxtra = result[foxtra];
                foxtra = output.bind(sizing)(foxtra);
                foxtra = foxtra.Easing;
                foxtra = foxtra.ease;
                foxtra = backup.bind(kiloes)(foxtra);
                tangon['easing'] = foxtra;
                tangon = offset.bind(yankee)(romeon, tangon);
                report = option.bind(verify)(report, tangon);
                tangon = 115;
                michal = oscard.bind(golfie)(tangon, report);
 262:
                zuuluu['translateY'] = michal;
                michal = new Array(1);
                michal[0] = zuuluu;
                entity['transform'] = michal;
                return entity;
            }
        };
        report = {};
        report['visibleSharedValue'] = option;
        option = backup[golfie];
        option = offset.bind(tangon)(option);
        option = option.withDelay;
        report['withDelay'] = option;
        option = backup[golfie];
        option = offset.bind(tangon)(option);
        option = option.withSequence;
        report['withSequence'] = option;
        oscard = backup[oscard];
        oscard = offset.bind(tangon)(oscard);
        oscard = oscard.withTiming;
        report['withTiming'] = oscard;
        oscard = backup[golfie];
        oscard = offset.bind(tangon)(oscard);
        oscard = oscard.Easing;
        report['Easing'] = oscard;
        entity['__closure'] = report;
        report = 14933607481025.0;
        entity['__workletHash'] = report;
        report = _closure1_slot13;
        entity['__initData'] = report;
        ctrled = michal.bind(zuuluu)(entity);
        entity = 15;
        entity = backup[entity];
        zuuluu = offset.bind(tangon)(entity);
        michal = zuuluu.useToken;
        foxtra = _closure1_slot1;
        entity = 9;
        entity = backup[entity];
        entity = foxtra.bind(tangon)(entity);
        entity = entity.colors;
        entity = entity.BG_BRAND;
        yankee = michal.bind(zuuluu)(entity);
        zuuluu = _closure1_slot8;
        michal = _closure1_slot6;
        entity = {};
        report = {};
        oscard = verify.container;
        report['style'] = oscard;
        oscard = {};
        option = verify.textContainer;
        oscard['style'] = option;
        option = _closure1_slot7;
        golfie = backup[golfie];
        golfie = foxtra.bind(tangon)(golfie);
        sizing = golfie.View;
        golfie = {};
        sequen = verify.iconWrapper;
        output = new Array(2);
        output[0] = sequen;
        output[1] = vacuum;
        golfie['style'] = output;
        output = 16;
        output = backup[output];
        output = offset.bind(tangon)(output);
        vacuum = output.FlashIcon;
        output = {'size': 'custom', 'style': null, 'color': 'bg-brand'};
        sequen = verify.icon;
        output['style'] = sequen;
        output = option.bind(tangon)(vacuum, output);
        golfie['children'] = output;
        sizing = option.bind(tangon)(sizing, golfie);
        golfie = new Array(3);
        golfie[0] = sizing;
        sizing = _closure1_slot9;
        kiloes = {'variant': 'heading-lg/semibold', 'color': 'header-primary'};
        vacuum = verify.headerText;
        output = new Array(2);
        output[0] = vacuum;
        output[1] = echoed;
        kiloes['style'] = output;
        echoed = 17;
        output = backup[echoed];
        output = offset.bind(tangon)(output);
        sequen = output.intl;
        vacuum = sequen.string;
        output = backup[echoed];
        output = offset.bind(tangon)(output);
        output = output.t;
        output = output.xjxffn;
        output = vacuum.bind(sequen)(output);
        kiloes['children'] = output;
        kiloes = option.bind(tangon)(sizing, kiloes);
        golfie[1] = kiloes;
        kiloes = {'variant': 'text-md/normal', 'color': 'header-secondary'};
        vacuum = verify.subtitleText;
        output = new Array(2);
        output[0] = vacuum;
        output[1] = ctrled;
        kiloes['style'] = output;
        output = backup[echoed];
        output = offset.bind(tangon)(output);
        vacuum = output.intl;
        ctrled = vacuum.string;
        output = backup[echoed];
        output = offset.bind(tangon)(output);
        output = output.t;
        output = output.sAApb2;
        output = ctrled.bind(vacuum)(output);
        kiloes['children'] = output;
        kiloes = option.bind(tangon)(sizing, kiloes);
        golfie[2] = kiloes;
        oscard['children'] = golfie;
        golfie = zuuluu.bind(tangon)(michal, oscard);
        oscard = new Array(2);
        oscard[0] = golfie;
        golfie = {};
        kiloes = verify.buttonContainer;
        golfie['style'] = kiloes;
        sizing = 18;
        kiloes = backup[sizing];
        kiloes = offset.bind(tangon)(kiloes);
        output = kiloes.Button;
        kiloes = {'size': 'md', 'text': null, 'grow': true, 'variant': 'primary'};
        ctrled = backup[echoed];
        ctrled = offset.bind(tangon)(ctrled);
        sequen = ctrled.intl;
        vacuum = sequen.string;
        ctrled = backup[echoed];
        ctrled = offset.bind(tangon)(ctrled);
        ctrled = ctrled.t;
        ctrled = ctrled.lNJYV1;
        ctrled = vacuum.bind(sequen)(ctrled);
        kiloes['text'] = ctrled;
        kiloes['onPress'] = source;
        kiloes['loading'] = update;
        output = option.bind(tangon)(output, kiloes);
        kiloes = new Array(2);
        kiloes[0] = output;
        sizing = backup[sizing];
        sizing = offset.bind(tangon)(sizing);
        output = sizing.Button;
        sizing = {'size': 'md', 'text': null, 'grow': true, 'variant': 'secondary'};
        update = backup[echoed];
        update = offset.bind(tangon)(update);
        source = update.intl;
        update = source.string;
        echoed = backup[echoed];
        echoed = offset.bind(tangon)(echoed);
        echoed = echoed.t;
        echoed = echoed.AGrUbm;
        echoed = update.bind(source)(echoed);
        sizing['text'] = echoed;
        sizing['onPress'] = result;
        sizing = option.bind(tangon)(output, sizing);
        kiloes[1] = sizing;
        golfie['children'] = kiloes;
        golfie = zuuluu.bind(tangon)(michal, golfie);
        oscard[1] = golfie;
        report['children'] = oscard;
        oscard = zuuluu.bind(tangon)(michal, report);
        report = new Array(3);
        report[0] = oscard;
        oscard = 10;
        oscard = backup[oscard];
        oscard = offset.bind(tangon)(oscard);
        golfie = oscard.Separator;
        oscard = {};
        oscard = option.bind(tangon)(golfie, oscard);
        report[1] = oscard;
        oscard = 19;
        oscard = backup[oscard];
        golfie = foxtra.bind(tangon)(oscard);
        oscard = {};
        verify = verify.gradient;
        oscard['style'] = verify;
        verify = 20;
        kiloes = backup[verify];
        kiloes = offset.bind(tangon)(kiloes);
        kiloes = kiloes.VerticalGradient;
        kiloes = kiloes.START;
        oscard['start'] = kiloes;
        verify = backup[verify];
        verify = offset.bind(tangon)(verify);
        verify = verify.VerticalGradient;
        verify = verify.END;
        oscard['end'] = verify;
        offset = 21;
        verify = backup[offset];
        verify = foxtra.bind(tangon)(verify);
        sizing = verify.bind(tangon)(yankee);
        kiloes = sizing.alpha;
        verify = 0.2;
        kiloes = kiloes.bind(sizing)(verify);
        verify = kiloes.hex;
        kiloes = verify.bind(kiloes)();
        verify = new Array(2);
        verify[0] = kiloes;
        offset = backup[offset];
        offset = foxtra.bind(tangon)(offset);
        yankee = offset.bind(tangon)(yankee);
        offset = yankee.alpha;
        yankee = offset.bind(yankee)(romeon);
        offset = yankee.hex;
        offset = offset.bind(yankee)();
        verify[1] = offset;
        oscard['colors'] = verify;
        verify = 'none';
        oscard['pointerEvents'] = verify;
        oscard = option.bind(tangon)(golfie, oscard);
        report[2] = oscard;
        entity['children'] = report;
        entity = zuuluu.bind(tangon)(michal, entity);
        return entity;
    };
    zuuluu['default'] = michal;
    return entity;
})();