// app/modules/icymi/native/custom_scores/ICYMICustomScoresOverviewScreen.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    report = argBar;
    yankee = argBaz;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    var _closure1_slot1 = yankee;
    var _closure1_slot2 = oscard;
    entity = global;
    option = entity.Object;
    golfie = option.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(option)(zuuluu, entity, tangon);
    entity = 0;
    golfie = oscard[entity];
    tangon = argCor;
    entity = undefined;
    tangon = tangon.bind(entity)(golfie);
    var _closure1_slot3 = tangon;
    offset = 1;
    tangon = oscard[offset];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.ScrollView;
    var _closure1_slot4 = tangon;
    tangon = 2;
    tangon = oscard[tangon];
    tangon = yankee.bind(entity)(tangon);
    var _closure1_slot5 = tangon;
    tangon = 3;
    tangon = oscard[tangon];
    tangon = yankee.bind(entity)(tangon);
    var _closure1_slot6 = tangon;
    tangon = 4;
    tangon = oscard[tangon];
    tangon = yankee.bind(entity)(tangon);
    var _closure1_slot7 = tangon;
    tangon = 5;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.jsx;
    var _closure1_slot8 = tangon;
    tangon = 6;
    tangon = oscard[tangon];
    option = report.bind(entity)(tangon);
    golfie = option.createStyles;
    tangon = {};
    verify = {};
    verify['flex'] = offset;
    offset = 7;
    romeon = oscard[offset];
    romeon = yankee.bind(entity)(romeon);
    romeon = romeon.colors;
    romeon = romeon.BG_BASE_PRIMARY;
    verify['backgroundColor'] = romeon;
    offset = oscard[offset];
    offset = yankee.bind(entity)(offset);
    offset = offset.spacing;
    offset = offset.PX_12;
    verify['paddingHorizontal'] = offset;
    tangon['container'] = verify;
    tangon = golfie.bind(option)(tangon);
    var _closure1_slot9 = tangon;
    tangon = 15;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/icymi/native/custom_scores/ICYMICustomScoresOverviewScreen.tsx';
    tangon = report.bind(oscard)(tangon);
    michal = function(argFoo) { // Original name: ICYMICustomScoresOverviewScreen
        entity = argFoo;
        michal = entity.navigation;
        var _closure2_slot0 = michal;
        oscard = _closure1_slot0;
        option = _closure1_slot2;
        report = 8;
        zuuluu = option[report];
        tangon = undefined;
        yankee = oscard.bind(tangon)(zuuluu);
        offset = yankee.useStateFromStores;
        zuuluu = _closure1_slot5;
        verify = new Array(1);
        verify[0] = zuuluu;
        zuuluu = function() {
            michal = _closure1_slot5;
            entity = michal.getGuilds;
            entity = entity.bind(michal)();
            return entity;
        };
        zuuluu = offset.bind(yankee)(verify, zuuluu);
        var _closure2_slot1 = zuuluu;
        verify = option[report];
        romeon = oscard.bind(tangon)(verify);
        yankee = romeon.useStateFromStores;
        verify = _closure1_slot6;
        offset = new Array(1);
        offset[0] = verify;
        verify = function() {
            michal = _closure1_slot6;
            entity = michal.getFlattenedGuildIds;
            entity = entity.bind(michal)();
            return entity;
        };
        offset = yankee.bind(romeon)(offset, verify);
        var _closure2_slot2 = offset;
        report = option[report];
        romeon = oscard.bind(tangon)(report);
        yankee = romeon.useStateFromStores;
        report = _closure1_slot7;
        verify = new Array(1);
        verify[0] = report;
        report = function() {
            michal = _closure1_slot7;
            entity = michal.getCustomGuildScores;
            entity = entity.bind(michal)();
            return entity;
        };
        report = yankee.bind(romeon)(verify, report);
        var _closure2_slot3 = report;
        foxtra = _closure1_slot3;
        verify = foxtra.useMemo;
        report = new Array(2);
        report[0] = offset;
        report[1] = zuuluu;
        zuuluu = function() {
            zuuluu = _closure2_slot2;
            michal = zuuluu.map;
            entity = function(argFoo) {
                michal = _closure2_slot1;
                entity = argFoo;
                entity = michal[entity];
                return entity;
            };
            entity = michal.bind(zuuluu)(entity);
            return entity;
        };
        verify = verify.bind(foxtra)(zuuluu, report);
        zuuluu = _closure1_slot9;
        report = zuuluu.bind(tangon)();
        yankee = _closure1_slot1;
        zuuluu = 9;
        zuuluu = option[zuuluu];
        zuuluu = yankee.bind(tangon)(zuuluu);
        zuuluu = zuuluu.bind(tangon)();
        offset = zuuluu.bottom;
        romeon = foxtra.useCallback;
        zuuluu = new Array(1);
        zuuluu[0] = michal;
        michal = function(argFoo) {
            tangon = _closure2_slot0;
            zuuluu = tangon.navigate;
            michal = {};
            entity = argFoo;
            michal['guildId'] = entity;
            entity = 'guild';
            entity = zuuluu.bind(tangon)(entity, michal);
            return entity;
        };
        michal = romeon.bind(foxtra)(michal, zuuluu);
        var _closure2_slot4 = michal;
        zuuluu = _closure1_slot8;
        michal = _closure1_slot4;
        entity = {};
        romeon = false;
        entity['showsVerticalScrollIndicator'] = romeon;
        report = report.container;
        entity['style'] = report;
        report = {};
        report['bottom'] = offset;
        offset = 7;
        offset = option[offset];
        offset = yankee.bind(tangon)(offset);
        offset = offset.spacing;
        offset = offset.PX_12;
        report['top'] = offset;
        entity['contentInset'] = report;
        report = 10;
        report = option[report];
        report = oscard.bind(tangon)(report);
        oscard = report.TableRowGroup;
        report = {};
        option = verify.map;
        golfie = function(argFoo) {
            _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
                entity = argFoo;
                var _closure3_slot0 = entity;
                report = _closure1_slot8;
                zuuluu = _closure1_slot0;
                offset = _closure1_slot2;
                golfie = 11;
                michal = offset[golfie];
                tangon = undefined;
                michal = zuuluu.bind(tangon)(michal);
                zuuluu = michal.TableRow;
                michal = {};
                oscard = function() { // Original name: onPress
                    zuuluu = _closure2_slot4;
                    entity = _closure3_slot0;
                    michal = entity.id;
                    entity = undefined;
                    entity = zuuluu.bind(entity)(michal);
                    return entity;
                };
                michal['onPress'] = oscard;
                verify = _closure1_slot1;
                oscard = 12;
                oscard = offset[oscard];
                verify = verify.bind(tangon)(oscard);
                oscard = {};
                oscard['guild'] = entity;
                oscard = report.bind(tangon)(verify, oscard);
                michal['icon'] = oscard;
                oscard = entity.name;
                michal['label'] = oscard;
                verify = _closure2_slot3;
                oscard = entity.id;
                verify = verify[oscard];
                oscard = null;
                verify = oscard != verify;
                oscard = undefined;
                if(!verify) { _fun00002_ip = 291; continue _fun00001 }
 128:
                yankee = _closure1_slot0;
                romeon = _closure1_slot2;
                verify = 13;
                foxtra = romeon[verify];
                backup = yankee.bind(tangon)(foxtra);
                foxtra = backup.numberToCustomScore;
                kiloes = _closure2_slot3;
                offset = entity.id;
                offset = kiloes[offset];
                offset = foxtra.bind(backup)(offset);
                verify = romeon[verify];
                verify = yankee.bind(tangon)(verify);
                verify = verify.ICYMICustomScore;
                verify = verify.MUTED;
                oscard = undefined;
                if(!(offset === verify)) { _fun00002_ip = 291; continue _fun00001 }
 199:
                verify = _closure1_slot8;
                foxtra = _closure1_slot0;
                backup = _closure1_slot2;
                golfie = backup[golfie];
                golfie = foxtra.bind(tangon)(golfie);
                golfie = golfie.TableRow;
                option = golfie.TrailingText;
                golfie = {};
                offset = 14;
                yankee = backup[offset];
                yankee = foxtra.bind(tangon)(yankee);
                romeon = yankee.intl;
                yankee = romeon.string;
                offset = backup[offset];
                offset = foxtra.bind(tangon)(offset);
                offset = offset.t;
                offset = offset.lhPHm5;
                offset = yankee.bind(romeon)(offset);
                golfie['text'] = offset;
                oscard = verify.bind(tangon)(option, golfie);
 291:
                michal['trailing'] = oscard;
                oscard = true;
                michal['arrow'] = oscard;
                entity = entity.id;
                entity = report.bind(tangon)(zuuluu, michal, entity);
                return entity;
            }
        };
        golfie = option.bind(verify)(golfie);
        report['children'] = golfie;
        report = zuuluu.bind(tangon)(oscard, report);
        entity['children'] = report;
        entity = zuuluu.bind(tangon)(michal, entity);
        return entity;
    };
    zuuluu['default'] = michal;
    return entity;
})();