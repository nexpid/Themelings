// app/modules/icymi/native/content_inventory/CustomStatusEntryRow.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    report = argBar;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    entity = argBaz;
    var _closure1_slot1 = entity;
    var _closure1_slot2 = oscard;
    entity = global;
    option = entity.Object;
    golfie = option.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(option)(zuuluu, entity, tangon);
    entity = 0;
    golfie = oscard[entity];
    tangon = argCor;
    entity = undefined;
    tangon = tangon.bind(entity)(golfie);
    tangon = 1;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.jsx;
    var _closure1_slot3 = tangon;
    tangon = 4;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/icymi/native/content_inventory/CustomStatusEntryRow.tsx';
    tangon = report.bind(oscard)(tangon);
    michal = function(argFoo) { // Original name: CustomStatusEntryRow
        entity = argFoo;
        offset = entity.content;
        verify = entity.renderForScreenshot;
        option = entity.visible;
        report = entity.mediaMosaicMaxWidth;
        zuuluu = _closure1_slot0;
        yankee = _closure1_slot2;
        michal = 2;
        michal = yankee[michal];
        tangon = undefined;
        oscard = zuuluu.bind(tangon)(michal);
        zuuluu = oscard.useReplyActions;
        michal = {};
        michal['content'] = offset;
        michal = zuuluu.bind(oscard)(michal);
        oscard = michal.openEmojiPicker;
        golfie = michal.openReplyActionSheet;
        zuuluu = _closure1_slot3;
        michal = _closure1_slot1;
        entity = 3;
        entity = yankee[entity];
        michal = michal.bind(tangon)(entity);
        entity = {};
        yankee = offset.id;
        entity['id'] = yankee;
        yankee = offset.author_id;
        entity['userId'] = yankee;
        offset = offset.extra;
        entity['customStatusExtra'] = offset;
        entity['renderForScreenshot'] = verify;
        entity['visible'] = option;
        entity['mediaMosaicMaxWidthOverride'] = report;
        report = {};
        option = 'otherUserStatus';
        report['kind'] = option;
        report['handlePressPrimary'] = golfie;
        report['handlePressSecondary'] = oscard;
        entity['variant'] = report;
        entity = zuuluu.bind(tangon)(michal, entity);
        return entity;
    };
    zuuluu['default'] = michal;
    return entity;
})();