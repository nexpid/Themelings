// app/modules/public_guilds/native/components/PublicGuildAnnouncementProfile.tsx
export default (function(_, argBar, argBaz, argCor, __, argFre, argPlu) {
    report = argBar;
    yankee = argBaz;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    var _closure1_slot1 = yankee;
    var _closure1_slot2 = oscard;
    entity = global;
    option = entity.Object;
    golfie = option.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(option)(zuuluu, entity, tangon);
    entity = 0;
    golfie = oscard[entity];
    tangon = argCor;
    entity = undefined;
    tangon = tangon.bind(entity)(golfie);
    tangon = 1;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.View;
    var _closure1_slot3 = tangon;
    tangon = 2;
    golfie = oscard[tangon];
    golfie = report.bind(entity)(golfie);
    golfie = golfie.jsx;
    var _closure1_slot4 = golfie;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.jsxs;
    var _closure1_slot5 = tangon;
    tangon = 3;
    tangon = oscard[tangon];
    option = report.bind(entity)(tangon);
    golfie = option.createStyles;
    tangon = {};
    verify = {};
    offset = 16;
    verify['padding'] = offset;
    tangon['content'] = verify;
    verify = {'borderRadius': null, 'height': 80, 'width': 80, 'marginVertical': 16};
    offset = 4;
    offset = oscard[offset];
    offset = yankee.bind(entity)(offset);
    offset = offset.radii;
    offset = offset.lg;
    verify['borderRadius'] = offset;
    tangon['avatar'] = verify;
    verify = {'flexDirection': 'row', 'alignItems': 'center'};
    tangon['nameWrapper'] = verify;
    verify = {};
    offset = 8;
    verify['marginLeft'] = offset;
    tangon['headerText'] = verify;
    verify = {};
    verify['marginTop'] = offset;
    tangon['description'] = verify;
    tangon = golfie.bind(option)(tangon);
    var _closure1_slot6 = tangon;
    tangon = 12;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/public_guilds/native/components/PublicGuildAnnouncementProfile.tsx';
    tangon = report.bind(oscard)(tangon);
    michal = function() { // Original name: _default
        entity = _closure1_slot6;
        tangon = undefined;
        romeon = entity.bind(tangon)();
        zuuluu = _closure1_slot4;
        backup = _closure1_slot0;
        kiloes = _closure1_slot2;
        entity = 5;
        entity = kiloes[entity];
        entity = backup.bind(tangon)(entity);
        michal = entity.BottomSheet;
        entity = {};
        foxtra = true;
        entity['startExpanded'] = foxtra;
        golfie = _closure1_slot5;
        oscard = _closure1_slot3;
        report = {};
        verify = romeon.content;
        report['style'] = verify;
        output = _closure1_slot1;
        option = 6;
        option = kiloes[option];
        verify = output.bind(tangon)(option);
        option = {};
        offset = romeon.avatar;
        option['style'] = offset;
        offset = 7;
        offset = kiloes[offset];
        yankee = backup.bind(tangon)(offset);
        offset = yankee.getPublicSystemMessageAvatar;
        offset = offset.bind(yankee)();
        option['source'] = offset;
        verify = zuuluu.bind(tangon)(verify, option);
        option = new Array(4);
        option[0] = verify;
        offset = {};
        verify = romeon.nameWrapper;
        offset['style'] = verify;
        verify = 8;
        verify = kiloes[verify];
        yankee = output.bind(tangon)(verify);
        verify = {};
        sizing = 9;
        sizing = kiloes[sizing];
        sizing = output.bind(tangon)(sizing);
        verify['source'] = sizing;
        verify['disableColor'] = foxtra;
        verify = zuuluu.bind(tangon)(yankee, verify);
        foxtra = new Array(2);
        foxtra[0] = verify;
        verify = 10;
        yankee = kiloes[verify];
        yankee = backup.bind(tangon)(yankee);
        output = yankee.Text;
        sizing = {'style': null, 'variant': 'heading-xl/extrabold', 'color': 'header-primary'};
        yankee = romeon.headerText;
        sizing['style'] = yankee;
        yankee = 11;
        result = kiloes[yankee];
        result = backup.bind(tangon)(result);
        update = result.intl;
        echoed = update.string;
        result = kiloes[yankee];
        result = backup.bind(tangon)(result);
        result = result.t;
        result = result.xfAlNz;
        result = echoed.bind(update)(result);
        sizing['children'] = result;
        sizing = zuuluu.bind(tangon)(output, sizing);
        foxtra[1] = sizing;
        offset['children'] = foxtra;
        offset = golfie.bind(tangon)(oscard, offset);
        option[1] = offset;
        offset = kiloes[verify];
        offset = backup.bind(tangon)(offset);
        foxtra = offset.Text;
        offset = {'style': null, 'variant': 'text-sm/medium', 'color': 'header-secondary'};
        sizing = romeon.description;
        offset['style'] = sizing;
        sizing = kiloes[yankee];
        sizing = backup.bind(tangon)(sizing);
        result = sizing.intl;
        output = result.string;
        sizing = kiloes[yankee];
        sizing = backup.bind(tangon)(sizing);
        sizing = sizing.t;
        sizing = sizing.BUZ0sr;
        sizing = output.bind(result)(sizing);
        offset['children'] = sizing;
        offset = zuuluu.bind(tangon)(foxtra, offset);
        option[2] = offset;
        verify = kiloes[verify];
        verify = backup.bind(tangon)(verify);
        offset = verify.Text;
        verify = {'style': null, 'variant': 'text-sm/medium', 'color': 'header-secondary'};
        romeon = romeon.description;
        verify['style'] = romeon;
        romeon = kiloes[yankee];
        romeon = backup.bind(tangon)(romeon);
        foxtra = romeon.intl;
        romeon = foxtra.string;
        yankee = kiloes[yankee];
        yankee = backup.bind(tangon)(yankee);
        yankee = yankee.t;
        yankee = yankee.w5beJC;
        yankee = romeon.bind(foxtra)(yankee);
        verify['children'] = yankee;
        verify = zuuluu.bind(tangon)(offset, verify);
        option[3] = verify;
        report['children'] = option;
        report = golfie.bind(tangon)(oscard, report);
        entity['children'] = report;
        entity = zuuluu.bind(tangon)(michal, entity);
        return entity;
    };
    zuuluu['default'] = michal;
    return entity;
})();