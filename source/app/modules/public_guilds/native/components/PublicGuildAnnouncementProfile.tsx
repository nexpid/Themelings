// app/modules/public_guilds/native/components/PublicGuildAnnouncementProfile.tsx
export default (function(_, argBar, argBaz, argCorge, __, argFred, argPlugh) {
    report = argBar;
    yankee = argBaz;
    zulu = argFred;
    oscar = argPlugh;
    var _closure1_slot0 = report;
    var _closure1_slot1 = yankee;
    var _closure1_slot2 = oscar;
    entity = global;
    options = entity.Object;
    golf = options.defineProperty;
    tango = {};
    entity = true;
    tango['value'] = entity;
    entity = '__esModule';
    entity = golf.bind(options)(zulu, entity, tango);
    entity = 0;
    golf = oscar[entity];
    tango = argCorge;
    entity = undefined;
    tango = tango.bind(entity)(golf);
    tango = 1;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.View;
    var _closure1_slot3 = tango;
    tango = 2;
    golf = oscar[tango];
    golf = report.bind(entity)(golf);
    golf = golf.jsx;
    var _closure1_slot4 = golf;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.jsxs;
    var _closure1_slot5 = tango;
    tango = 3;
    tango = oscar[tango];
    options = report.bind(entity)(tango);
    golf = options.createStyles;
    tango = {};
    verify = {};
    offset = 16;
    verify['padding'] = offset;
    tango['content'] = verify;
    verify = {'borderRadius': null, 'height': 80, 'width': 80, 'marginVertical': 16};
    offset = 4;
    offset = oscar[offset];
    offset = yankee.bind(entity)(offset);
    offset = offset.radii;
    offset = offset.lg;
    verify['borderRadius'] = offset;
    tango['avatar'] = verify;
    verify = {'flexDirection': 'row', 'alignItems': 'center'};
    tango['nameWrapper'] = verify;
    verify = {};
    offset = 8;
    verify['marginLeft'] = offset;
    tango['headerText'] = verify;
    verify = {};
    verify['marginTop'] = offset;
    tango['description'] = verify;
    tango = golf.bind(options)(tango);
    var _closure1_slot6 = tango;
    tango = 12;
    tango = oscar[tango];
    oscar = report.bind(entity)(tango);
    report = oscar.fileFinishedImporting;
    tango = 'modules/public_guilds/native/components/PublicGuildAnnouncementProfile.tsx';
    tango = report.bind(oscar)(tango);
    mike = function() { // Original name: _default
        entity = _closure1_slot6;
        tango = undefined;
        romeo = entity.bind(tango)();
        zulu = _closure1_slot4;
        backup = _closure1_slot0;
        kilo = _closure1_slot2;
        entity = 5;
        entity = kilo[entity];
        entity = backup.bind(tango)(entity);
        mike = entity.BottomSheet;
        entity = {};
        foxtrot = true;
        entity['startExpanded'] = foxtrot;
        golf = _closure1_slot5;
        oscar = _closure1_slot3;
        report = {};
        verify = romeo.content;
        report['style'] = verify;
        output = _closure1_slot1;
        options = 6;
        options = kilo[options];
        verify = output.bind(tango)(options);
        options = {};
        offset = romeo.avatar;
        options['style'] = offset;
        offset = 7;
        offset = kilo[offset];
        yankee = backup.bind(tango)(offset);
        offset = yankee.getPublicSystemMessageAvatar;
        offset = offset.bind(yankee)();
        options['source'] = offset;
        verify = zulu.bind(tango)(verify, options);
        options = new Array(4);
        options[0] = verify;
        offset = {};
        verify = romeo.nameWrapper;
        offset['style'] = verify;
        verify = 8;
        verify = kilo[verify];
        yankee = output.bind(tango)(verify);
        verify = {};
        sizing = 9;
        sizing = kilo[sizing];
        sizing = output.bind(tango)(sizing);
        verify['source'] = sizing;
        verify['disableColor'] = foxtrot;
        verify = zulu.bind(tango)(yankee, verify);
        foxtrot = new Array(2);
        foxtrot[0] = verify;
        verify = 10;
        yankee = kilo[verify];
        yankee = backup.bind(tango)(yankee);
        output = yankee.Text;
        sizing = {'style': null, 'variant': 'heading-xl/extrabold', 'color': 'header-primary'};
        yankee = romeo.headerText;
        sizing['style'] = yankee;
        yankee = 11;
        result = kilo[yankee];
        result = backup.bind(tango)(result);
        update = result.intl;
        echo = update.string;
        result = kilo[yankee];
        result = backup.bind(tango)(result);
        result = result.t;
        result = result.xfAlNz;
        result = echo.bind(update)(result);
        sizing['children'] = result;
        sizing = zulu.bind(tango)(output, sizing);
        foxtrot[1] = sizing;
        offset['children'] = foxtrot;
        offset = golf.bind(tango)(oscar, offset);
        options[1] = offset;
        offset = kilo[verify];
        offset = backup.bind(tango)(offset);
        foxtrot = offset.Text;
        offset = {'style': null, 'variant': 'text-sm/medium', 'color': 'header-secondary'};
        sizing = romeo.description;
        offset['style'] = sizing;
        sizing = kilo[yankee];
        sizing = backup.bind(tango)(sizing);
        result = sizing.intl;
        output = result.string;
        sizing = kilo[yankee];
        sizing = backup.bind(tango)(sizing);
        sizing = sizing.t;
        sizing = sizing.BUZ0sr;
        sizing = output.bind(result)(sizing);
        offset['children'] = sizing;
        offset = zulu.bind(tango)(foxtrot, offset);
        options[2] = offset;
        verify = kilo[verify];
        verify = backup.bind(tango)(verify);
        offset = verify.Text;
        verify = {'style': null, 'variant': 'text-sm/medium', 'color': 'header-secondary'};
        romeo = romeo.description;
        verify['style'] = romeo;
        romeo = kilo[yankee];
        romeo = backup.bind(tango)(romeo);
        foxtrot = romeo.intl;
        romeo = foxtrot.string;
        yankee = kilo[yankee];
        yankee = backup.bind(tango)(yankee);
        yankee = yankee.t;
        yankee = yankee.w5beJC;
        yankee = romeo.bind(foxtrot)(yankee);
        verify['children'] = yankee;
        verify = zulu.bind(tango)(offset, verify);
        options[3] = verify;
        report['children'] = options;
        report = golf.bind(tango)(oscar, report);
        entity['children'] = report;
        entity = zulu.bind(tango)(mike, entity);
        return entity;
    };
    zulu['default'] = mike;
    return entity;
})();