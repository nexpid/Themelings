// app/modules/public_guilds/native/components/EnableCommunityModal/ChannelSetupScreen.tsx
export default (function(argFoo, argBar, argBaz, argCorge, _, argFred, argPlugh) {
    report = argBar;
    golf = argBaz;
    zulu = argFred;
    oscar = argPlugh;
    var _closure1_slot0 = report;
    var _closure1_slot1 = golf;
    var _closure1_slot2 = oscar;
    entity = global;
    verify = entity.Object;
    options = verify.defineProperty;
    tango = {};
    entity = true;
    tango['value'] = entity;
    entity = '__esModule';
    entity = options.bind(verify)(zulu, entity, tango);
    entity = 0;
    options = oscar[entity];
    tango = argCorge;
    entity = undefined;
    tango = tango.bind(entity)(options);
    var _closure1_slot3 = tango;
    tango = 1;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    options = tango.Image;
    var _closure1_slot4 = options;
    tango = tango.View;
    var _closure1_slot5 = tango;
    tango = 2;
    tango = oscar[tango];
    tango = golf.bind(entity)(tango);
    var _closure1_slot6 = tango;
    tango = 3;
    tango = oscar[tango];
    tango = golf.bind(entity)(tango);
    var _closure1_slot7 = tango;
    tango = 4;
    options = oscar[tango];
    options = golf.bind(entity)(options);
    var _closure1_slot8 = options;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.GUILD_SELECTABLE_CHANNELS_KEY;
    var _closure1_slot9 = tango;
    tango = 5;
    tango = oscar[tango];
    tango = golf.bind(entity)(tango);
    var _closure1_slot10 = tango;
    tango = 6;
    tango = oscar[tango];
    tango = golf.bind(entity)(tango);
    var _closure1_slot11 = tango;
    tango = 7;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.CREATE_NEW_CHANNEL_VALUE;
    var _closure1_slot12 = tango;
    tango = 8;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.ChannelTypes;
    var _closure1_slot13 = tango;
    tango = 9;
    golf = oscar[tango];
    golf = report.bind(entity)(golf);
    golf = golf.jsx;
    var _closure1_slot14 = golf;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.jsxs;
    var _closure1_slot15 = tango;
    tango = 10;
    tango = oscar[tango];
    options = report.bind(entity)(tango);
    golf = options.createStyles;
    tango = {};
    verify = {};
    offset = 'right';
    verify['textAlign'] = offset;
    tango['value'] = verify;
    verify = {'display': 'flex', 'flex': 0, 'flexDirection': 'row', 'alignItems': 'center'};
    tango['trailingFlex'] = verify;
    tango = golf.bind(options)(tango);
    var _closure1_slot16 = tango;
    tango = 24;
    tango = oscar[tango];
    oscar = report.bind(entity)(tango);
    report = oscar.fileFinishedImporting;
    tango = 'modules/public_guilds/native/components/EnableCommunityModal/ChannelSetupScreen.tsx';
    tango = report.bind(oscar)(tango);
    mike = function() { // Original name: ChannelSetupScreen
        _fun126689: for(var _fun126689_ip = 0; ; ) switch(_fun126689_ip) {
 0:
            mike = _closure1_slot16;
            tango = undefined;
            update = mike.bind(tango)();
            golf = _closure1_slot0;
            zulu = _closure1_slot2;
            mike = 11;
            mike = zulu[mike];
            report = golf.bind(tango)(mike);
            mike = report.useEnableCommunitySharedStyles;
            offset = mike.bind(report)();
            mike = 12;
            report = zulu[mike];
            yankee = golf.bind(tango)(report);
            verify = yankee.useStateFromStoresObject;
            report = _closure1_slot6;
            options = new Array(1);
            options[0] = report;
            report = function() {
                mike = _closure1_slot6;
                entity = mike.getProps;
                entity = entity.bind(mike)();
                return entity;
            };
            report = verify.bind(yankee)(options, report);
            report = report.guild;
            var _closure2_slot0 = report;
            mike = zulu[mike];
            verify = golf.bind(tango)(mike);
            options = verify.useStateFromStoresObject;
            mike = _closure1_slot7;
            golf = new Array(1);
            golf[0] = mike;
            mike = function() {
                _fun126691: for(var _fun126691_ip = 0; ; ) switch(_fun126691_ip) {
 0:
                    entity = {};
                    options = _closure1_slot7;
                    oscar = options.getChannel;
                    zulu = _closure2_slot0;
                    golf = null;
                    verify = golf == zulu;
                    zulu = undefined;
                    if(verify) { _fun126691_ip = 42; continue _fun126691 }
 32:
                    verify = _closure2_slot0;
                    zulu = verify.rulesChannelId;
 42:
                    zulu = oscar.bind(options)(zulu);
                    entity['rulesChannel'] = zulu;
                    zulu = _closure1_slot7;
                    mike = zulu.getChannel;
                    oscar = _closure2_slot0;
                    oscar = golf == oscar;
                    tango = undefined;
                    if(oscar) { _fun126691_ip = 84; continue _fun126691 }
 74:
                    report = _closure2_slot0;
                    tango = report.publicUpdatesChannelId;
 84:
                    mike = mike.bind(zulu)(tango);
                    entity['publicUpdatesChannel'] = mike;
                    return entity;
                }
            };
            golf = options.bind(verify)(golf, mike);
            mike = golf.rulesChannel;
            var _closure2_slot1 = mike;
            golf = golf.publicUpdatesChannel;
            var _closure2_slot2 = golf;
            options = _closure1_slot1;
            romeo = 13;
            zulu = zulu[romeo];
            zulu = options.bind(tango)(zulu);
            verify = true;
            sequence = zulu.bind(tango)(mike, verify);
            zulu = null;
            if(!(zulu == sequence)) { _fun126689_ip = 242; continue _fun126689 }
 187:
            backup = _closure1_slot0;
            kilo = _closure1_slot2;
            options = 14;
            yankee = kilo[options];
            yankee = backup.bind(tango)(yankee);
            foxtrot = yankee.intl;
            yankee = foxtrot.string;
            options = kilo[options];
            options = backup.bind(tango)(options);
            options = options.t;
            options = options.Cla0ra;
            sequence = yankee.bind(foxtrot)(options);
 242:
            yankee = _closure1_slot1;
            options = _closure1_slot2;
            options = options[romeo];
            options = yankee.bind(tango)(options);
            echo = options.bind(tango)(golf, verify);
            if(!(zulu == echo)) { _fun126689_ip = 324; continue _fun126689 }
 269:
            romeo = _closure1_slot0;
            foxtrot = _closure1_slot2;
            options = 14;
            verify = foxtrot[options];
            verify = romeo.bind(tango)(verify);
            yankee = verify.intl;
            verify = yankee.string;
            options = foxtrot[options];
            options = romeo.bind(tango)(options);
            options = options.t;
            options = options.Cla0ra;
            echo = verify.bind(yankee)(options);
 324:
            verify = _closure1_slot1;
            yankee = _closure1_slot2;
            options = 15;
            options = yankee[options];
            options = verify.bind(tango)(options);
            verify = options.bind(tango)();
            yankee = _closure1_slot3;
            options = yankee.useCallback;
            romeo = zulu == report;
            zulu = undefined;
            if(romeo) { _fun126689_ip = 371; continue _fun126689 }
 366:
            zulu = report.id;
 371:
            report = new Array(1);
            report[0] = zulu;
            zulu = function() {
                _fun126692: for(var _fun126692_ip = 0; ; ) switch(_fun126692_ip) {
 0:
                    report = _closure1_slot8;
                    zulu = report.getChannels;
                    mike = _closure2_slot0;
                    oscar = null;
                    options = oscar == mike;
                    offset = undefined;
                    mike = undefined;
                    if(options) { _fun126692_ip = 44; continue _fun126692 }
 35:
                    golf = _closure2_slot0;
                    mike = golf.id;
 44:
                    report = zulu.bind(report)(mike);
                    mike = {};
                    zulu = _closure1_slot12;
                    mike['value'] = zulu;
                    verify = _closure1_slot0;
                    yankee = _closure1_slot2;
                    zulu = 14;
                    golf = yankee[zulu];
                    golf = verify.bind(offset)(golf);
                    options = golf.intl;
                    golf = options.string;
                    zulu = yankee[zulu];
                    zulu = verify.bind(offset)(zulu);
                    zulu = zulu.t;
                    zulu = zulu.Cla0ra;
                    zulu = golf.bind(options)(zulu);
                    mike['label'] = zulu;
                    zulu = new Array(0);
                    if(!(oscar != report)) { _fun126692_ip = 168; continue _fun126692 }
 126:
                    tango = _closure1_slot9;
                    oscar = report[tango];
                    report = oscar.filter;
                    tango = function(argFoo) {
                        entity = argFoo;
                        entity = entity.channel;
                        mike = entity.type;
                        entity = _closure1_slot13;
                        entity = entity.GUILD_TEXT;
                        entity = mike === entity;
                        return entity;
                    };
                    report = report.bind(oscar)(tango);
                    tango = report.map;
                    entity = function(argFoo) {
                        entity = argFoo;
                        golf = entity.channel;
                        entity = {};
                        mike = golf.id;
                        entity['value'] = mike;
                        report = _closure1_slot0;
                        tango = _closure1_slot2;
                        zulu = 13;
                        tango = tango[zulu];
                        zulu = undefined;
                        oscar = report.bind(zulu)(tango);
                        report = oscar.computeChannelName;
                        offset = _closure1_slot11;
                        verify = _closure1_slot10;
                        options = true;
                        romeo = oscar;
                        yankee = golf;
                        mike = romeo[report](yankee, offset, verify, options, golf);
                        entity['label'] = mike;
                        return entity;
                    };
                    zulu = tango.bind(report)(entity);
 168:
                    entity = new Array(1);
                    entity[0] = mike;
                    romeo = 1;
                    backup = entity;
                    foxtrot = zulu;
                    mike = arraySpread(backup, foxtrot, romeo);
                    return entity;
                }
            };
            options = options.bind(yankee)(zulu, report);
            var _closure2_slot3 = options;
            report = _closure1_slot3;
            yankee = report.useCallback;
            zulu = new Array(2);
            zulu[0] = options;
            zulu[1] = mike;
            mike = function() {
                _fun126695: for(var _fun126695_ip = 0; ; ) switch(_fun126695_ip) {
 0:
                    zulu = _closure1_slot1;
                    yankee = _closure1_slot2;
                    entity = 16;
                    mike = yankee[entity];
                    entity = undefined;
                    oscar = zulu.bind(entity)(mike);
                    report = oscar.openLazy;
                    offset = _closure1_slot0;
                    mike = 18;
                    mike = yankee[mike];
                    tango = offset.bind(entity)(mike);
                    mike = 17;
                    zulu = yankee[mike];
                    mike = yankee.paths;
                    tango = tango.bind(entity)(zulu, mike);
                    zulu = {};
                    mike = 14;
                    options = yankee[mike];
                    options = offset.bind(entity)(options);
                    verify = options.intl;
                    options = verify.string;
                    mike = yankee[mike];
                    mike = offset.bind(entity)(mike);
                    mike = mike.t;
                    mike = mike.Yr6nGx;
                    mike = options.bind(verify)(mike);
                    zulu['title'] = mike;
                    mike = _closure2_slot3;
                    mike = mike.bind(entity)();
                    zulu['items'] = mike;
                    mike = function(argFoo) { // Original name: onItemSelect
                        zulu = _closure1_slot1;
                        tango = _closure1_slot2;
                        entity = 19;
                        mike = tango[entity];
                        entity = undefined;
                        oscar = zulu.bind(entity)(mike);
                        report = oscar.updateGuild;
                        mike = {};
                        golf = argFoo;
                        mike['rulesChannelId'] = golf;
                        mike = report.bind(oscar)(mike);
                        mike = 16;
                        mike = tango[mike];
                        zulu = zulu.bind(entity)(mike);
                        mike = zulu.hideActionSheet;
                        mike = mike.bind(zulu)();
                        return entity;
                    };
                    zulu['onItemSelect'] = mike;
                    mike = _closure2_slot1;
                    options = null;
                    offset = options == mike;
                    mike = undefined;
                    if(offset) { _fun126695_ip = 172; continue _fun126695 }
 163:
                    verify = _closure2_slot1;
                    mike = verify.id;
 172:
                    if(!(options == mike)) { _fun126695_ip = 180; continue _fun126695 }
 176:
                    mike = _closure1_slot12;
 180:
                    zulu['selectedItem'] = mike;
                    mike = 'SelectRulesChannel';
                    mike = report.bind(oscar)(tango, mike, zulu);
                    return entity;
                }
            };
            result = yankee.bind(report)(mike, zulu);
            zulu = report.useCallback;
            mike = new Array(2);
            mike[0] = options;
            mike[1] = golf;
            entity = function() {
                _fun126697: for(var _fun126697_ip = 0; ; ) switch(_fun126697_ip) {
 0:
                    zulu = _closure1_slot1;
                    yankee = _closure1_slot2;
                    entity = 16;
                    mike = yankee[entity];
                    entity = undefined;
                    oscar = zulu.bind(entity)(mike);
                    report = oscar.openLazy;
                    offset = _closure1_slot0;
                    mike = 18;
                    mike = yankee[mike];
                    tango = offset.bind(entity)(mike);
                    mike = 17;
                    zulu = yankee[mike];
                    mike = yankee.paths;
                    tango = tango.bind(entity)(zulu, mike);
                    zulu = {};
                    mike = 14;
                    options = yankee[mike];
                    options = offset.bind(entity)(options);
                    verify = options.intl;
                    options = verify.string;
                    mike = yankee[mike];
                    mike = offset.bind(entity)(mike);
                    mike = mike.t;
                    mike = mike.VqhxxM;
                    mike = options.bind(verify)(mike);
                    zulu['title'] = mike;
                    mike = _closure2_slot3;
                    mike = mike.bind(entity)();
                    zulu['items'] = mike;
                    mike = function(argFoo) { // Original name: onItemSelect
                        zulu = _closure1_slot1;
                        tango = _closure1_slot2;
                        entity = 19;
                        mike = tango[entity];
                        entity = undefined;
                        oscar = zulu.bind(entity)(mike);
                        report = oscar.updateGuild;
                        mike = {};
                        golf = argFoo;
                        mike['publicUpdatesChannelId'] = golf;
                        mike = report.bind(oscar)(mike);
                        mike = 16;
                        mike = tango[mike];
                        zulu = zulu.bind(entity)(mike);
                        mike = zulu.hideActionSheet;
                        mike = mike.bind(zulu)();
                        return entity;
                    };
                    zulu['onItemSelect'] = mike;
                    mike = _closure2_slot2;
                    options = null;
                    offset = options == mike;
                    mike = undefined;
                    if(offset) { _fun126697_ip = 172; continue _fun126697 }
 163:
                    verify = _closure2_slot2;
                    mike = verify.id;
 172:
                    if(!(options == mike)) { _fun126697_ip = 180; continue _fun126697 }
 176:
                    mike = _closure1_slot12;
 180:
                    zulu['selectedItem'] = mike;
                    mike = 'SelectUpdatesChannel';
                    mike = report.bind(oscar)(tango, mike, zulu);
                    return entity;
                }
            };
            yankee = zulu.bind(report)(entity, mike);
            zulu = _closure1_slot15;
            sizing = _closure1_slot0;
            output = _closure1_slot2;
            report = 20;
            entity = output[report];
            entity = sizing.bind(tango)(entity);
            mike = entity.EnableCommunityModalScreen;
            entity = {};
            golf = false;
            entity['disableNextStep'] = golf;
            report = output[report];
            report = sizing.bind(tango)(report);
            report = report.EnableCommunityModalSteps;
            report = report.STEP_2;
            entity['currentStep'] = report;
            foxtrot = _closure1_slot5;
            report = {};
            golf = offset.content;
            report['style'] = golf;
            options = _closure1_slot14;
            golf = _closure1_slot4;
            oscar = {};
            romeo = 'contain';
            oscar['resizeMode'] = romeo;
            verify = verify.channelSetup;
            oscar['source'] = verify;
            golf = options.bind(tango)(golf, oscar);
            oscar = new Array(3);
            oscar[0] = golf;
            golf = 21;
            verify = output[golf];
            verify = sizing.bind(tango)(verify);
            backup = verify.LegacyText;
            verify = {};
            romeo = offset.header;
            verify['style'] = romeo;
            romeo = 14;
            kilo = output[romeo];
            kilo = sizing.bind(tango)(kilo);
            control = kilo.intl;
            source = control.string;
            kilo = output[romeo];
            kilo = sizing.bind(tango)(kilo);
            kilo = kilo.t;
            kilo = kilo.YtXpEh;
            kilo = source.bind(control)(kilo);
            verify['children'] = kilo;
            verify = options.bind(tango)(backup, verify);
            oscar[1] = verify;
            golf = output[golf];
            golf = sizing.bind(tango)(golf);
            verify = golf.LegacyText;
            golf = {};
            offset = offset.description;
            golf['style'] = offset;
            offset = output[romeo];
            offset = sizing.bind(tango)(offset);
            kilo = offset.intl;
            backup = kilo.string;
            offset = output[romeo];
            offset = sizing.bind(tango)(offset);
            offset = offset.t;
            offset = offset.J/fYR0;
            offset = backup.bind(kilo)(offset);
            golf['children'] = offset;
            golf = options.bind(tango)(verify, golf);
            oscar[2] = golf;
            report['children'] = oscar;
            oscar = zulu.bind(tango)(foxtrot, report);
            report = new Array(3);
            report[0] = oscar;
            kilo = 22;
            oscar = output[kilo];
            oscar = sizing.bind(tango)(oscar);
            golf = oscar.FormSection;
            oscar = {};
            verify = output[kilo];
            verify = sizing.bind(tango)(verify);
            offset = verify.FormHint;
            verify = {};
            backup = output[romeo];
            backup = sizing.bind(tango)(backup);
            control = backup.intl;
            source = control.string;
            backup = output[romeo];
            backup = sizing.bind(tango)(backup);
            backup = backup.t;
            backup = backup.+Af+V1;
            backup = source.bind(control)(backup);
            verify['children'] = backup;
            verify = options.bind(tango)(offset, verify);
            oscar['hint'] = verify;
            verify = output[kilo];
            verify = sizing.bind(tango)(verify);
            offset = verify.FormRow;
            verify = {};
            backup = output[romeo];
            backup = sizing.bind(tango)(backup);
            control = backup.intl;
            source = control.string;
            backup = output[romeo];
            backup = sizing.bind(tango)(backup);
            backup = backup.t;
            backup = backup.dYrhCA;
            backup = source.bind(control)(backup);
            verify['label'] = backup;
            source = {};
            backup = update.trailingFlex;
            source['style'] = backup;
            backup = 23;
            control = output[backup];
            control = sizing.bind(tango)(control);
            vacuum = control.Text;
            control = {'style': null, 'variant': 'text-md/medium', 'color': 'text-muted'};
            config = update.value;
            control['style'] = config;
            control['children'] = sequence;
            vacuum = options.bind(tango)(vacuum, control);
            control = new Array(2);
            control[0] = vacuum;
            vacuum = output[kilo];
            vacuum = sizing.bind(tango)(vacuum);
            vacuum = vacuum.FormRow;
            sequence = vacuum.Arrow;
            vacuum = {};
            vacuum = options.bind(tango)(sequence, vacuum);
            control[1] = vacuum;
            source['children'] = control;
            source = zulu.bind(tango)(foxtrot, source);
            verify['trailing'] = source;
            verify['onPress'] = result;
            verify = options.bind(tango)(offset, verify);
            oscar['children'] = verify;
            oscar = options.bind(tango)(golf, oscar);
            report[1] = oscar;
            oscar = output[kilo];
            oscar = sizing.bind(tango)(oscar);
            golf = oscar.FormSection;
            oscar = {};
            verify = output[kilo];
            verify = sizing.bind(tango)(verify);
            offset = verify.FormHint;
            verify = {};
            result = output[romeo];
            result = sizing.bind(tango)(result);
            control = result.intl;
            source = control.string;
            result = output[romeo];
            result = sizing.bind(tango)(result);
            result = result.t;
            result = result.ZFeonp;
            result = source.bind(control)(result);
            verify['children'] = result;
            verify = options.bind(tango)(offset, verify);
            oscar['hint'] = verify;
            verify = output[kilo];
            verify = sizing.bind(tango)(verify);
            offset = verify.FormRow;
            verify = {};
            result = output[romeo];
            result = sizing.bind(tango)(result);
            source = result.intl;
            result = source.string;
            romeo = output[romeo];
            romeo = sizing.bind(tango)(romeo);
            romeo = romeo.t;
            romeo = romeo.vAyDGR;
            romeo = result.bind(source)(romeo);
            verify['label'] = romeo;
            romeo = {};
            result = update.trailingFlex;
            romeo['style'] = result;
            backup = output[backup];
            backup = sizing.bind(tango)(backup);
            result = backup.Text;
            backup = {'style': null, 'variant': 'text-md/medium', 'color': 'text-muted'};
            update = update.value;
            backup['style'] = update;
            backup['children'] = echo;
            result = options.bind(tango)(result, backup);
            backup = new Array(2);
            backup[0] = result;
            kilo = output[kilo];
            kilo = sizing.bind(tango)(kilo);
            kilo = kilo.FormRow;
            sizing = kilo.Arrow;
            kilo = {};
            kilo = options.bind(tango)(sizing, kilo);
            backup[1] = kilo;
            romeo['children'] = backup;
            romeo = zulu.bind(tango)(foxtrot, romeo);
            verify['trailing'] = romeo;
            verify['onPress'] = yankee;
            verify = options.bind(tango)(offset, verify);
            oscar['children'] = verify;
            oscar = options.bind(tango)(golf, oscar);
            report[2] = oscar;
            entity['children'] = report;
            entity = zulu.bind(tango)(mike, entity);
            return entity;
        }
    };
    zulu['default'] = mike;
    return entity;
})();