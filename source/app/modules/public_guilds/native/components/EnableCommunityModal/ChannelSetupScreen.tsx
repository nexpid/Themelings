// app/modules/public_guilds/native/components/EnableCommunityModal/ChannelSetupScreen.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    report = argBar;
    golfie = argBaz;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    var _closure1_slot1 = golfie;
    var _closure1_slot2 = oscard;
    entity = global;
    verify = entity.Object;
    option = verify.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = option.bind(verify)(zuuluu, entity, tangon);
    entity = 0;
    option = oscard[entity];
    tangon = argCor;
    entity = undefined;
    tangon = tangon.bind(entity)(option);
    var _closure1_slot3 = tangon;
    tangon = 1;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    option = tangon.Image;
    var _closure1_slot4 = option;
    tangon = tangon.View;
    var _closure1_slot5 = tangon;
    tangon = 2;
    tangon = oscard[tangon];
    tangon = golfie.bind(entity)(tangon);
    var _closure1_slot6 = tangon;
    tangon = 3;
    tangon = oscard[tangon];
    tangon = golfie.bind(entity)(tangon);
    var _closure1_slot7 = tangon;
    tangon = 4;
    option = oscard[tangon];
    option = golfie.bind(entity)(option);
    var _closure1_slot8 = option;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.GUILD_SELECTABLE_CHANNELS_KEY;
    var _closure1_slot9 = tangon;
    tangon = 5;
    tangon = oscard[tangon];
    tangon = golfie.bind(entity)(tangon);
    var _closure1_slot10 = tangon;
    tangon = 6;
    tangon = oscard[tangon];
    tangon = golfie.bind(entity)(tangon);
    var _closure1_slot11 = tangon;
    tangon = 7;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.CREATE_NEW_CHANNEL_VALUE;
    var _closure1_slot12 = tangon;
    tangon = 8;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.ChannelTypes;
    var _closure1_slot13 = tangon;
    tangon = 9;
    golfie = oscard[tangon];
    golfie = report.bind(entity)(golfie);
    golfie = golfie.jsx;
    var _closure1_slot14 = golfie;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.jsxs;
    var _closure1_slot15 = tangon;
    tangon = 10;
    tangon = oscard[tangon];
    option = report.bind(entity)(tangon);
    golfie = option.createStyles;
    tangon = {};
    verify = {};
    offset = 'right';
    verify['textAlign'] = offset;
    tangon['value'] = verify;
    verify = {'display': 'flex', 'flex': 0, 'flexDirection': 'row', 'alignItems': 'center'};
    tangon['trailingFlex'] = verify;
    tangon = golfie.bind(option)(tangon);
    var _closure1_slot16 = tangon;
    tangon = 24;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/public_guilds/native/components/EnableCommunityModal/ChannelSetupScreen.tsx';
    tangon = report.bind(oscard)(tangon);
    michal = function() { // Original name: ChannelSetupScreen
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            michal = _closure1_slot16;
            tangon = undefined;
            update = michal.bind(tangon)();
            golfie = _closure1_slot0;
            zuuluu = _closure1_slot2;
            michal = 11;
            michal = zuuluu[michal];
            report = golfie.bind(tangon)(michal);
            michal = report.useEnableCommunitySharedStyles;
            offset = michal.bind(report)();
            michal = 12;
            report = zuuluu[michal];
            yankee = golfie.bind(tangon)(report);
            verify = yankee.useStateFromStoresObject;
            report = _closure1_slot6;
            option = new Array(1);
            option[0] = report;
            report = function() {
                michal = _closure1_slot6;
                entity = michal.getProps;
                entity = entity.bind(michal)();
                return entity;
            };
            report = verify.bind(yankee)(option, report);
            report = report.guild;
            var _closure2_slot0 = report;
            michal = zuuluu[michal];
            verify = golfie.bind(tangon)(michal);
            option = verify.useStateFromStoresObject;
            michal = _closure1_slot7;
            golfie = new Array(1);
            golfie[0] = michal;
            michal = function() {
                _fun00003: for(var _fun00004_ip = 0; ; ) switch(_fun00004_ip) {
 0:
                    entity = {};
                    option = _closure1_slot7;
                    oscard = option.getChannel;
                    zuuluu = _closure2_slot0;
                    golfie = null;
                    verify = golfie == zuuluu;
                    zuuluu = undefined;
                    if(verify) { _fun00004_ip = 42; continue _fun00003 }
 32:
                    verify = _closure2_slot0;
                    zuuluu = verify.rulesChannelId;
 42:
                    zuuluu = oscard.bind(option)(zuuluu);
                    entity['rulesChannel'] = zuuluu;
                    zuuluu = _closure1_slot7;
                    michal = zuuluu.getChannel;
                    oscard = _closure2_slot0;
                    oscard = golfie == oscard;
                    tangon = undefined;
                    if(oscard) { _fun00004_ip = 84; continue _fun00003 }
 74:
                    report = _closure2_slot0;
                    tangon = report.publicUpdatesChannelId;
 84:
                    michal = michal.bind(zuuluu)(tangon);
                    entity['publicUpdatesChannel'] = michal;
                    return entity;
                }
            };
            golfie = option.bind(verify)(golfie, michal);
            michal = golfie.rulesChannel;
            var _closure2_slot1 = michal;
            golfie = golfie.publicUpdatesChannel;
            var _closure2_slot2 = golfie;
            option = _closure1_slot1;
            romeon = 13;
            zuuluu = zuuluu[romeon];
            zuuluu = option.bind(tangon)(zuuluu);
            verify = true;
            sequen = zuuluu.bind(tangon)(michal, verify);
            zuuluu = null;
            if(!(zuuluu == sequen)) { _fun00002_ip = 242; continue _fun00001 }
 187:
            backup = _closure1_slot0;
            kiloes = _closure1_slot2;
            option = 14;
            yankee = kiloes[option];
            yankee = backup.bind(tangon)(yankee);
            foxtra = yankee.intl;
            yankee = foxtra.string;
            option = kiloes[option];
            option = backup.bind(tangon)(option);
            option = option.t;
            option = option.Cla0ra;
            sequen = yankee.bind(foxtra)(option);
 242:
            yankee = _closure1_slot1;
            option = _closure1_slot2;
            option = option[romeon];
            option = yankee.bind(tangon)(option);
            echoed = option.bind(tangon)(golfie, verify);
            if(!(zuuluu == echoed)) { _fun00002_ip = 324; continue _fun00001 }
 269:
            romeon = _closure1_slot0;
            foxtra = _closure1_slot2;
            option = 14;
            verify = foxtra[option];
            verify = romeon.bind(tangon)(verify);
            yankee = verify.intl;
            verify = yankee.string;
            option = foxtra[option];
            option = romeon.bind(tangon)(option);
            option = option.t;
            option = option.Cla0ra;
            echoed = verify.bind(yankee)(option);
 324:
            verify = _closure1_slot1;
            yankee = _closure1_slot2;
            option = 15;
            option = yankee[option];
            option = verify.bind(tangon)(option);
            verify = option.bind(tangon)();
            yankee = _closure1_slot3;
            option = yankee.useCallback;
            romeon = zuuluu == report;
            zuuluu = undefined;
            if(romeon) { _fun00002_ip = 371; continue _fun00001 }
 366:
            zuuluu = report.id;
 371:
            report = new Array(1);
            report[0] = zuuluu;
            zuuluu = function() {
                _fun00005: for(var _fun00006_ip = 0; ; ) switch(_fun00006_ip) {
 0:
                    report = _closure1_slot8;
                    zuuluu = report.getChannels;
                    michal = _closure2_slot0;
                    oscard = null;
                    option = oscard == michal;
                    offset = undefined;
                    michal = undefined;
                    if(option) { _fun00006_ip = 44; continue _fun00005 }
 35:
                    golfie = _closure2_slot0;
                    michal = golfie.id;
 44:
                    report = zuuluu.bind(report)(michal);
                    michal = {};
                    zuuluu = _closure1_slot12;
                    michal['value'] = zuuluu;
                    verify = _closure1_slot0;
                    yankee = _closure1_slot2;
                    zuuluu = 14;
                    golfie = yankee[zuuluu];
                    golfie = verify.bind(offset)(golfie);
                    option = golfie.intl;
                    golfie = option.string;
                    zuuluu = yankee[zuuluu];
                    zuuluu = verify.bind(offset)(zuuluu);
                    zuuluu = zuuluu.t;
                    zuuluu = zuuluu.Cla0ra;
                    zuuluu = golfie.bind(option)(zuuluu);
                    michal['label'] = zuuluu;
                    zuuluu = new Array(0);
                    if(!(oscard != report)) { _fun00006_ip = 168; continue _fun00005 }
 126:
                    tangon = _closure1_slot9;
                    oscard = report[tangon];
                    report = oscard.filter;
                    tangon = function(argFoo) {
                        entity = argFoo;
                        entity = entity.channel;
                        michal = entity.type;
                        entity = _closure1_slot13;
                        entity = entity.GUILD_TEXT;
                        entity = michal === entity;
                        return entity;
                    };
                    report = report.bind(oscard)(tangon);
                    tangon = report.map;
                    entity = function(argFoo) {
                        entity = argFoo;
                        golfie = entity.channel;
                        entity = {};
                        michal = golfie.id;
                        entity['value'] = michal;
                        report = _closure1_slot0;
                        tangon = _closure1_slot2;
                        zuuluu = 13;
                        tangon = tangon[zuuluu];
                        zuuluu = undefined;
                        oscard = report.bind(zuuluu)(tangon);
                        report = oscard.computeChannelName;
                        offset = _closure1_slot11;
                        verify = _closure1_slot10;
                        option = true;
                        romeon = oscard;
                        yankee = golfie;
                        michal = romeon[report](yankee, offset, verify, option, golfie);
                        entity['label'] = michal;
                        return entity;
                    };
                    zuuluu = tangon.bind(report)(entity);
 168:
                    entity = new Array(1);
                    entity[0] = michal;
                    romeon = 1;
                    backup = entity;
                    foxtra = zuuluu;
                    michal = arraySpread(backup, foxtra, romeon);
                    return entity;
                }
            };
            option = option.bind(yankee)(zuuluu, report);
            var _closure2_slot3 = option;
            report = _closure1_slot3;
            yankee = report.useCallback;
            zuuluu = new Array(2);
            zuuluu[0] = option;
            zuuluu[1] = michal;
            michal = function() {
                _fun00007: for(var _fun00008_ip = 0; ; ) switch(_fun00008_ip) {
 0:
                    zuuluu = _closure1_slot1;
                    yankee = _closure1_slot2;
                    entity = 16;
                    michal = yankee[entity];
                    entity = undefined;
                    oscard = zuuluu.bind(entity)(michal);
                    report = oscard.openLazy;
                    offset = _closure1_slot0;
                    michal = 18;
                    michal = yankee[michal];
                    tangon = offset.bind(entity)(michal);
                    michal = 17;
                    zuuluu = yankee[michal];
                    michal = yankee.paths;
                    tangon = tangon.bind(entity)(zuuluu, michal);
                    zuuluu = {};
                    michal = 14;
                    option = yankee[michal];
                    option = offset.bind(entity)(option);
                    verify = option.intl;
                    option = verify.string;
                    michal = yankee[michal];
                    michal = offset.bind(entity)(michal);
                    michal = michal.t;
                    michal = michal.Yr6nGx;
                    michal = option.bind(verify)(michal);
                    zuuluu['title'] = michal;
                    michal = _closure2_slot3;
                    michal = michal.bind(entity)();
                    zuuluu['items'] = michal;
                    michal = function(argFoo) { // Original name: onItemSelect
                        zuuluu = _closure1_slot1;
                        tangon = _closure1_slot2;
                        entity = 19;
                        michal = tangon[entity];
                        entity = undefined;
                        oscard = zuuluu.bind(entity)(michal);
                        report = oscard.updateGuild;
                        michal = {};
                        golfie = argFoo;
                        michal['rulesChannelId'] = golfie;
                        michal = report.bind(oscard)(michal);
                        michal = 16;
                        michal = tangon[michal];
                        zuuluu = zuuluu.bind(entity)(michal);
                        michal = zuuluu.hideActionSheet;
                        michal = michal.bind(zuuluu)();
                        return entity;
                    };
                    zuuluu['onItemSelect'] = michal;
                    michal = _closure2_slot1;
                    option = null;
                    offset = option == michal;
                    michal = undefined;
                    if(offset) { _fun00008_ip = 172; continue _fun00007 }
 163:
                    verify = _closure2_slot1;
                    michal = verify.id;
 172:
                    if(!(option == michal)) { _fun00008_ip = 180; continue _fun00007 }
 176:
                    michal = _closure1_slot12;
 180:
                    zuuluu['selectedItem'] = michal;
                    michal = 'SelectRulesChannel';
                    michal = report.bind(oscard)(tangon, michal, zuuluu);
                    return entity;
                }
            };
            result = yankee.bind(report)(michal, zuuluu);
            zuuluu = report.useCallback;
            michal = new Array(2);
            michal[0] = option;
            michal[1] = golfie;
            entity = function() {
                _fun00009: for(var _fun00010_ip = 0; ; ) switch(_fun00010_ip) {
 0:
                    zuuluu = _closure1_slot1;
                    yankee = _closure1_slot2;
                    entity = 16;
                    michal = yankee[entity];
                    entity = undefined;
                    oscard = zuuluu.bind(entity)(michal);
                    report = oscard.openLazy;
                    offset = _closure1_slot0;
                    michal = 18;
                    michal = yankee[michal];
                    tangon = offset.bind(entity)(michal);
                    michal = 17;
                    zuuluu = yankee[michal];
                    michal = yankee.paths;
                    tangon = tangon.bind(entity)(zuuluu, michal);
                    zuuluu = {};
                    michal = 14;
                    option = yankee[michal];
                    option = offset.bind(entity)(option);
                    verify = option.intl;
                    option = verify.string;
                    michal = yankee[michal];
                    michal = offset.bind(entity)(michal);
                    michal = michal.t;
                    michal = michal.VqhxxM;
                    michal = option.bind(verify)(michal);
                    zuuluu['title'] = michal;
                    michal = _closure2_slot3;
                    michal = michal.bind(entity)();
                    zuuluu['items'] = michal;
                    michal = function(argFoo) { // Original name: onItemSelect
                        zuuluu = _closure1_slot1;
                        tangon = _closure1_slot2;
                        entity = 19;
                        michal = tangon[entity];
                        entity = undefined;
                        oscard = zuuluu.bind(entity)(michal);
                        report = oscard.updateGuild;
                        michal = {};
                        golfie = argFoo;
                        michal['publicUpdatesChannelId'] = golfie;
                        michal = report.bind(oscard)(michal);
                        michal = 16;
                        michal = tangon[michal];
                        zuuluu = zuuluu.bind(entity)(michal);
                        michal = zuuluu.hideActionSheet;
                        michal = michal.bind(zuuluu)();
                        return entity;
                    };
                    zuuluu['onItemSelect'] = michal;
                    michal = _closure2_slot2;
                    option = null;
                    offset = option == michal;
                    michal = undefined;
                    if(offset) { _fun00010_ip = 172; continue _fun00009 }
 163:
                    verify = _closure2_slot2;
                    michal = verify.id;
 172:
                    if(!(option == michal)) { _fun00010_ip = 180; continue _fun00009 }
 176:
                    michal = _closure1_slot12;
 180:
                    zuuluu['selectedItem'] = michal;
                    michal = 'SelectUpdatesChannel';
                    michal = report.bind(oscard)(tangon, michal, zuuluu);
                    return entity;
                }
            };
            yankee = zuuluu.bind(report)(entity, michal);
            zuuluu = _closure1_slot15;
            sizing = _closure1_slot0;
            output = _closure1_slot2;
            report = 20;
            entity = output[report];
            entity = sizing.bind(tangon)(entity);
            michal = entity.EnableCommunityModalScreen;
            entity = {};
            golfie = false;
            entity['disableNextStep'] = golfie;
            report = output[report];
            report = sizing.bind(tangon)(report);
            report = report.EnableCommunityModalSteps;
            report = report.STEP_2;
            entity['currentStep'] = report;
            foxtra = _closure1_slot5;
            report = {};
            golfie = offset.content;
            report['style'] = golfie;
            option = _closure1_slot14;
            golfie = _closure1_slot4;
            oscard = {};
            romeon = 'contain';
            oscard['resizeMode'] = romeon;
            verify = verify.channelSetup;
            oscard['source'] = verify;
            golfie = option.bind(tangon)(golfie, oscard);
            oscard = new Array(3);
            oscard[0] = golfie;
            golfie = 21;
            verify = output[golfie];
            verify = sizing.bind(tangon)(verify);
            backup = verify.LegacyText;
            verify = {};
            romeon = offset.header;
            verify['style'] = romeon;
            romeon = 14;
            kiloes = output[romeon];
            kiloes = sizing.bind(tangon)(kiloes);
            ctrled = kiloes.intl;
            source = ctrled.string;
            kiloes = output[romeon];
            kiloes = sizing.bind(tangon)(kiloes);
            kiloes = kiloes.t;
            kiloes = kiloes.YtXpEh;
            kiloes = source.bind(ctrled)(kiloes);
            verify['children'] = kiloes;
            verify = option.bind(tangon)(backup, verify);
            oscard[1] = verify;
            golfie = output[golfie];
            golfie = sizing.bind(tangon)(golfie);
            verify = golfie.LegacyText;
            golfie = {};
            offset = offset.description;
            golfie['style'] = offset;
            offset = output[romeon];
            offset = sizing.bind(tangon)(offset);
            kiloes = offset.intl;
            backup = kiloes.string;
            offset = output[romeon];
            offset = sizing.bind(tangon)(offset);
            offset = offset.t;
            offset = offset.J/fYR0;
            offset = backup.bind(kiloes)(offset);
            golfie['children'] = offset;
            golfie = option.bind(tangon)(verify, golfie);
            oscard[2] = golfie;
            report['children'] = oscard;
            oscard = zuuluu.bind(tangon)(foxtra, report);
            report = new Array(3);
            report[0] = oscard;
            kiloes = 22;
            oscard = output[kiloes];
            oscard = sizing.bind(tangon)(oscard);
            golfie = oscard.FormSection;
            oscard = {};
            verify = output[kiloes];
            verify = sizing.bind(tangon)(verify);
            offset = verify.FormHint;
            verify = {};
            backup = output[romeon];
            backup = sizing.bind(tangon)(backup);
            ctrled = backup.intl;
            source = ctrled.string;
            backup = output[romeon];
            backup = sizing.bind(tangon)(backup);
            backup = backup.t;
            backup = backup.+Af+V1;
            backup = source.bind(ctrled)(backup);
            verify['children'] = backup;
            verify = option.bind(tangon)(offset, verify);
            oscard['hint'] = verify;
            verify = output[kiloes];
            verify = sizing.bind(tangon)(verify);
            offset = verify.FormRow;
            verify = {};
            backup = output[romeon];
            backup = sizing.bind(tangon)(backup);
            ctrled = backup.intl;
            source = ctrled.string;
            backup = output[romeon];
            backup = sizing.bind(tangon)(backup);
            backup = backup.t;
            backup = backup.dYrhCA;
            backup = source.bind(ctrled)(backup);
            verify['label'] = backup;
            source = {};
            backup = update.trailingFlex;
            source['style'] = backup;
            backup = 23;
            ctrled = output[backup];
            ctrled = sizing.bind(tangon)(ctrled);
            vacuum = ctrled.Text;
            ctrled = {'style': null, 'variant': 'text-md/medium', 'color': 'text-muted'};
            config = update.value;
            ctrled['style'] = config;
            ctrled['children'] = sequen;
            vacuum = option.bind(tangon)(vacuum, ctrled);
            ctrled = new Array(2);
            ctrled[0] = vacuum;
            vacuum = output[kiloes];
            vacuum = sizing.bind(tangon)(vacuum);
            vacuum = vacuum.FormRow;
            sequen = vacuum.Arrow;
            vacuum = {};
            vacuum = option.bind(tangon)(sequen, vacuum);
            ctrled[1] = vacuum;
            source['children'] = ctrled;
            source = zuuluu.bind(tangon)(foxtra, source);
            verify['trailing'] = source;
            verify['onPress'] = result;
            verify = option.bind(tangon)(offset, verify);
            oscard['children'] = verify;
            oscard = option.bind(tangon)(golfie, oscard);
            report[1] = oscard;
            oscard = output[kiloes];
            oscard = sizing.bind(tangon)(oscard);
            golfie = oscard.FormSection;
            oscard = {};
            verify = output[kiloes];
            verify = sizing.bind(tangon)(verify);
            offset = verify.FormHint;
            verify = {};
            result = output[romeon];
            result = sizing.bind(tangon)(result);
            ctrled = result.intl;
            source = ctrled.string;
            result = output[romeon];
            result = sizing.bind(tangon)(result);
            result = result.t;
            result = result.ZFeonp;
            result = source.bind(ctrled)(result);
            verify['children'] = result;
            verify = option.bind(tangon)(offset, verify);
            oscard['hint'] = verify;
            verify = output[kiloes];
            verify = sizing.bind(tangon)(verify);
            offset = verify.FormRow;
            verify = {};
            result = output[romeon];
            result = sizing.bind(tangon)(result);
            source = result.intl;
            result = source.string;
            romeon = output[romeon];
            romeon = sizing.bind(tangon)(romeon);
            romeon = romeon.t;
            romeon = romeon.vAyDGR;
            romeon = result.bind(source)(romeon);
            verify['label'] = romeon;
            romeon = {};
            result = update.trailingFlex;
            romeon['style'] = result;
            backup = output[backup];
            backup = sizing.bind(tangon)(backup);
            result = backup.Text;
            backup = {'style': null, 'variant': 'text-md/medium', 'color': 'text-muted'};
            update = update.value;
            backup['style'] = update;
            backup['children'] = echoed;
            result = option.bind(tangon)(result, backup);
            backup = new Array(2);
            backup[0] = result;
            kiloes = output[kiloes];
            kiloes = sizing.bind(tangon)(kiloes);
            kiloes = kiloes.FormRow;
            sizing = kiloes.Arrow;
            kiloes = {};
            kiloes = option.bind(tangon)(sizing, kiloes);
            backup[1] = kiloes;
            romeon['children'] = backup;
            romeon = zuuluu.bind(tangon)(foxtra, romeon);
            verify['trailing'] = romeon;
            verify['onPress'] = yankee;
            verify = option.bind(tangon)(offset, verify);
            oscard['children'] = verify;
            oscard = option.bind(tangon)(golfie, oscard);
            report[2] = oscard;
            entity['children'] = report;
            entity = zuuluu.bind(tangon)(michal, entity);
            return entity;
        }
    };
    zuuluu['default'] = michal;
    return entity;
})();