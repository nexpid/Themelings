// app/modules/public_guilds/native/components/EnableCommunityModal/EnableCommunitySharedStyles.tsx
export default (function(_, argBar, argBaz, __, ___, argFre, argPlu) {
    report = argBar;
    offset = argBaz;
    zuuluu = argFre;
    oscard = argPlu;
    entity = global;
    golfie = entity.Object;
    tangon = golfie.defineProperty;
    michal = {};
    entity = true;
    michal['value'] = entity;
    entity = '__esModule';
    entity = tangon.bind(golfie)(zuuluu, entity, michal);
    entity = 0;
    michal = oscard[entity];
    entity = undefined;
    michal = report.bind(entity)(michal);
    michal = michal.Platform;
    michal = 1;
    michal = oscard[michal];
    michal = report.bind(entity)(michal);
    yankee = michal.Fonts;
    michal = 2;
    michal = oscard[michal];
    golfie = report.bind(entity)(michal);
    tangon = golfie.createStyles;
    michal = {};
    foxtra = 'center';
    option = {'alignItems': 'center', 'paddingLeft': 16, 'paddingRight': 16, 'marginTop': 30};
    michal['content'] = option;
    option = {};
    verify = 3;
    verify = oscard[verify];
    sizing = offset.bind(entity)(verify);
    kiloes = yankee.DISPLAY_EXTRABOLD;
    verify = 4;
    romeon = oscard[verify];
    romeon = offset.bind(entity)(romeon);
    romeon = romeon.colors;
    backup = romeon.HEADER_PRIMARY;
    romeon = 24;
    result = sizing.bind(entity)(kiloes, backup, romeon);
    echoed = option;
    romeon = copyDataProperties(echoed, result);
    backup = 12;
    romeon = 'marginTop';
    option[romeon] = backup;
    romeon = 'textAlign';
    option[romeon] = foxtra;
    michal['header'] = option;
    option = {'fontSize': 16, 'color': null, 'fontFamily': null, 'marginBottom': 16, 'marginTop': 8, 'textAlign': 'center'};
    romeon = oscard[verify];
    romeon = offset.bind(entity)(romeon);
    romeon = romeon.colors;
    romeon = romeon.HEADER_SECONDARY;
    option['color'] = romeon;
    yankee = yankee.PRIMARY_MEDIUM;
    option['fontFamily'] = yankee;
    michal['description'] = option;
    option = {'color': null, 'paddingHorizontal': 16, 'fontSize': 12};
    verify = oscard[verify];
    verify = offset.bind(entity)(verify);
    verify = verify.colors;
    verify = verify.HEADER_SECONDARY;
    option['color'] = verify;
    michal['formHint'] = option;
    option = {'position': 'relative', 'paddingTop': 4, 'paddingBottom': 4};
    michal['formSwitchWrapper'] = option;
    michal = tangon.bind(golfie)(michal);
    tangon = 5;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/public_guilds/native/components/EnableCommunityModal/EnableCommunitySharedStyles.tsx';
    tangon = report.bind(oscard)(tangon);
    zuuluu['useEnableCommunitySharedStyles'] = michal;
    return entity;
})();