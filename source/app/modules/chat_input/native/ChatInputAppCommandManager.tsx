// app/modules/chat_input/native/ChatInputAppCommandManager.tsx
export default (function(global, require, metroImportDefault, metroImportAll, moduleObject, exports, dependencyMap) {
    var5 = require;
    var14 = metroImportDefault;
    var7 = metroImportAll;
    var3 = exports;
    var6 = dependencyMap;
    var _closure1_slot0 = var5;
    var _closure1_slot1 = var14;
    var _closure1_slot2 = var7;
    var _closure1_slot3 = var6;
    var1 = global;
    var9 = var1.Object;
    var8 = var9.defineProperty;
    var4 = {};
    var1 = true;
    var4['value'] = var1;
    var1 = '__esModule';
    var1 = var8.bind(var9)(var3, var1, var4);
    var1 = 0;
    var4 = var6[var1];
    var1 = undefined;
    var4 = var14.bind(var1)(var4);
    var _closure1_slot4 = var4;
    var4 = 1;
    var4 = var6[var4];
    var8 = var7.bind(var1)(var4);
    var _closure1_slot5 = var8;
    var4 = 2;
    var4 = var6[var4];
    var4 = var14.bind(var1)(var4);
    var _closure1_slot6 = var4;
    var4 = 3;
    var4 = var6[var4];
    var4 = var14.bind(var1)(var4);
    var _closure1_slot7 = var4;
    var4 = 4;
    var4 = var6[var4];
    var10 = var5.bind(var1)(var4);
    var9 = var10.createStyles;
    var7 = {};
    var11 = {};
    var12 = 5;
    var4 = var6[var12];
    var4 = var5.bind(var1)(var4);
    var4 = var4.DARK_PRIMARY_800_LIGHT_PRIMARY_300;
    var11['backgroundColor'] = var4;
    var13 = 6;
    var4 = var6[var13];
    var4 = var14.bind(var1)(var4);
    var4 = var4.colors;
    var4 = var4.TEXT_NORMAL;
    var11['color'] = var4;
    var4 = var6[var13];
    var4 = var14.bind(var1)(var4);
    var4 = var4.radii;
    var4 = var4.xs;
    var11['borderRadius'] = var4;
    var4 = 14;
    var11['fontSize'] = var4;
    var7['commandOption'] = var11;
    var11 = {};
    var15 = var6[var12];
    var15 = var5.bind(var1)(var15);
    var15 = var15.DARK_PRIMARY_800_LIGHT_PRIMARY_300;
    var11['backgroundColor'] = var15;
    var15 = var6[var13];
    var15 = var14.bind(var1)(var15);
    var15 = var15.colors;
    var15 = var15.TEXT_DANGER;
    var11['color'] = var15;
    var13 = var6[var13];
    var13 = var14.bind(var1)(var13);
    var13 = var13.radii;
    var13 = var13.xs;
    var11['borderRadius'] = var13;
    var11['fontSize'] = var4;
    var7['commandErrorOption'] = var11;
    var11 = {};
    var12 = var6[var12];
    var12 = var5.bind(var1)(var12);
    var12 = var12.DARK_BRAND_260_LIGHT_BRAND_500;
    var11['color'] = var12;
    var12 = 'bold';
    var11['fontWeight'] = var12;
    var7['autocomplete'] = var11;
    var7 = var9.bind(var10)(var7);
    var _closure1_slot8 = var7;
    var7 = var8.forwardRef;
    var2 = function(arg1, arg2) {
        var2 = arg1;
        var11 = var2.chatInputRef;
        var _closure2_slot0 = var11;
        var10 = var2.chatInputStateRef;
        var _closure2_slot1 = var10;
        var12 = var2.channel;
        var _closure2_slot2 = var12;
        var9 = var2.commandsDisabled;
        var _closure2_slot3 = var9;
        var2 = _closure1_slot8;
        var5 = undefined;
        var2 = var2.bind(var5)();
        var _closure2_slot4 = var2;
        var17 = _closure1_slot0;
        var18 = _closure1_slot3;
        var4 = 7;
        var4 = var18[var4];
        var7 = var17.bind(var5)(var4);
        var6 = var7.useApplicationCommandOptionValueParser;
        var4 = {};
        var4['channel'] = var12;
        var7 = var6.bind(var7)(var4);
        var _closure2_slot5 = var7;
        var4 = 8;
        var6 = var18[var4];
        var14 = var17.bind(var5)(var6);
        var13 = var14.useStateFromStores;
        var6 = _closure1_slot7;
        var8 = new Array(1);
        var8[0] = var6;
        var6 = function() {
            var3 = _closure1_slot7;
            var2 = var3.getActiveCommand;
            var1 = _closure2_slot2;
            var1 = var1.id;
            var1 = var2.bind(var3)(var1);
            return var1;
        };
        var13 = var13.bind(var14)(var8, var6);
        var _closure2_slot6 = var13;
        var4 = var18[var4];
        var14 = var17.bind(var5)(var4);
        var8 = var14.useStateFromStores;
        var4 = _closure1_slot6;
        var6 = new Array(1);
        var6[0] = var4;
        var4 = function() {
            var3 = _closure1_slot6;
            var2 = var3.getLastResponseNonce;
            var1 = _closure2_slot2;
            var1 = var1.id;
            var1 = var2.bind(var3)(var1);
            return var1;
        };
        var8 = var8.bind(var14)(var6, var4);
        var _closure2_slot7 = var8;
        var4 = _closure1_slot5;
        var15 = var4.useRef;
        var6 = 9;
        var6 = var18[var6];
        var16 = var17.bind(var5)(var6);
        var14 = var16.getTextBeforeFirstOption;
        var6 = var10.current;
        var6 = var6.text;
        var6 = var14.bind(var16)(var6);
        var16 = var6.text;
        var6 = var16.slice;
        var14 = 1;
        var16 = var6.bind(var16)(var14);
        var6 = var16.trimEnd;
        var6 = var6.bind(var16)();
        var6 = var15.bind(var4)(var6);
        var _closure2_slot8 = var6;
        var15 = var4.useState;
        var6 = var6.current;
        var16 = var15.bind(var4)(var6);
        var15 = _closure1_slot4;
        var6 = 2;
        var6 = var15.bind(var5)(var16, var6);
        var15 = 0;
        var16 = var6[var15];
        var6 = var6[var14];
        var _closure2_slot9 = var6;
        var6 = _closure1_slot2;
        var3 = 10;
        var3 = var18[var3];
        var15 = var6.bind(var5)(var3);
        var14 = var15.useCachedResults;
        var6 = {};
        var3 = 'channel';
        var6['type'] = var3;
        var6['channel'] = var12;
        var3 = 11;
        var3 = var18[var3];
        var3 = var17.bind(var5)(var3);
        var3 = var3.ApplicationCommandType;
        var3 = var3.CHAT;
        var3 = var14.bind(var15)(var6, var3, var16);
        var6 = var3.commands;
        var _closure2_slot10 = var6;
        var3 = var4.useRef;
        var3 = var3.bind(var4)(var5);
        var _closure2_slot11 = var3;
        var5 = var4.useCallback;
        var3 = new Array(9);
        var3[0] = var13;
        var3[1] = var12;
        var3[2] = var11;
        var3[3] = var10;
        var3[4] = var9;
        var3[5] = var8;
        var3[6] = var7;
        var3[7] = var6;
        var3[8] = var2;
        var2 = function() {
            _fun0001: for(var _fun0001_ip = 0; ; ) switch(_fun0001_ip) {
 0:
                var1 = _closure2_slot1;
                var4 = var1.current;
                var8 = var4.editId;
                var6 = var4.focused;
                var3 = var4.selectionStart;
                var1 = var4.selectionEnd;
                var5 = var4.text;
                var4 = {};
                var9 = _closure2_slot6;
                var4['activeCommand'] = var9;
                var9 = _closure2_slot2;
                var4['channel'] = var9;
                var9 = _closure2_slot3;
                var4['commandsDisabled'] = var9;
                var4['editId'] = var8;
                var4['focused'] = var6;
                var6 = _closure2_slot7;
                var4['lastCommandAutocompleteResponseNonce'] = var6;
                var6 = _closure2_slot10;
                var4['queryCommands'] = var6;
                var4['selectionStart'] = var3;
                var4['selectionEnd'] = var1;
                var4['text'] = var5;
                var1 = _closure2_slot11;
                var3 = var1.current;
                var1 = null;
                if(!(var1 != var3)) { _fun0001_ip = 160; continue _fun0001 }
 128:
                var1 = _closure2_slot11;
                var6 = var1.current;
                var3 = var6.updateApplicationCommandManagerState;
                var1 = {};
                var1['newState'] = var4;
                var1 = var3.bind(var6)(var1);
                _fun0001_ip = 284; continue _fun0001;
 160:
                var3 = _closure2_slot11;
                var8 = _closure1_slot1;
                var6 = _closure1_slot3;
                var1 = 12;
                var6 = var6[var1];
                var1 = undefined;
                var6 = var8.bind(var1)(var6);
                var1 = {};
                var1['props'] = var4;
                var4 = _closure2_slot0;
                var1['ref'] = var4;
                var4 = _closure2_slot5;
                var1['optionValueParser'] = var4;
                var4 = {};
                var8 = function commandOption() {
                    var3 = _closure1_slot0;
                    var2 = _closure1_slot3;
                    var1 = 13;
                    var2 = var2[var1];
                    var1 = undefined;
                    var3 = var3.bind(var1)(var2);
                    var2 = var3.convertToNativeStyle;
                    var1 = _closure2_slot4;
                    var1 = var1.commandOption;
                    var1 = var2.bind(var3)(var1);
                    return var1;
                };
                var4['commandOption'] = var8;
                var8 = function commandErrorOption() {
                    var3 = _closure1_slot0;
                    var2 = _closure1_slot3;
                    var1 = 13;
                    var2 = var2[var1];
                    var1 = undefined;
                    var3 = var3.bind(var1)(var2);
                    var2 = var3.convertToNativeStyle;
                    var1 = _closure2_slot4;
                    var1 = var1.commandErrorOption;
                    var1 = var2.bind(var3)(var1);
                    return var1;
                };
                var4['commandErrorOption'] = var8;
                var7 = function autocomplete(arg1) {
                    _fun0002: for(var _fun0002_ip = 0; ; ) switch(_fun0002_ip) {
 0:
                        var5 = arg1;
                        var1 = null;
                        if(!(var1 != var5)) { _fun0002_ip = 78; continue _fun0002 }
 9:
                        var3 = _closure1_slot0;
                        var2 = _closure1_slot3;
                        var1 = 13;
                        var2 = var2[var1];
                        var1 = undefined;
                        var3 = var3.bind(var1)(var2);
                        var2 = var3.convertToNativeStyle;
                        var1 = {};
                        var4 = _closure2_slot4;
                        var6 = var4.autocomplete;
                        var7 = var1;
                        var4 = copyDataProperties(var7, var6);
                        var4 = 'color';
                        var1[var4] = var5;
                        var1 = var2.bind(var3)(var1);
                        _fun0002_ip = 127; continue _fun0002;
 78:
                        var4 = _closure1_slot0;
                        var3 = _closure1_slot3;
                        var2 = 13;
                        var3 = var3[var2];
                        var2 = undefined;
                        var4 = var4.bind(var2)(var3);
                        var3 = var4.convertToNativeStyle;
                        var2 = _closure2_slot4;
                        var2 = var2.autocomplete;
                        var1 = var3.bind(var4)(var2);
 127:
                        return var1;
                    }
                };
                var4['autocomplete'] = var7;
                var1['styles'] = var4;
                var4 = var6.prototype;
                var4 = Object.create(var4, {constructor: {value: var6}});
                var11 = var4;
                var10 = var1;
                var1 = new var11[var6](var10, var9);
                var1 = var1 instanceof Object ? var1 : var4;
                var3['current'] = var1;
 284:
                var4 = _closure1_slot0;
                var3 = _closure1_slot3;
                var1 = 9;
                var3 = var3[var1];
                var1 = undefined;
                var4 = var4.bind(var1)(var3);
                var3 = var4.getTextBeforeFirstOption;
                var3 = var3.bind(var4)(var5);
                var5 = var3.text;
                var4 = var5.slice;
                var3 = 1;
                var4 = var4.bind(var5)(var3);
                var3 = var4.trimEnd;
                var3 = var3.bind(var4)();
                var4 = _closure2_slot8;
                var4 = var4.current;
                if(!(var4 !== var3)) { _fun0001_ip = 380; continue _fun0001 }
 361:
                var4 = _closure2_slot9;
                var4 = var4.bind(var1)(var3);
                var2 = _closure2_slot8;
                var2['current'] = var3;
 380:
                return var1;
            }
        };
        var2 = var5.bind(var4)(var2, var3);
        var _closure2_slot12 = var2;
        var5 = var4.useEffect;
        var3 = new Array(1);
        var3[0] = var2;
        var2 = function() {
            var2 = _closure2_slot12;
            var1 = undefined;
            var2 = var2.bind(var1)();
            return var1;
        };
        var2 = var5.bind(var4)(var2, var3);
        var3 = var4.useImperativeHandle;
        var2 = arg2;
        var1 = function() {
            var1 = {};
            var3 = function getApplicationCommandManager() {
                var1 = _closure2_slot11;
                var1 = var1.current;
                return var1;
            };
            var1['getApplicationCommandManager'] = var3;
            var2 = function updateState() {
                var2 = _closure2_slot12;
                var1 = undefined;
                var1 = var2.bind(var1)();
                return var1;
            };
            var1['updateState'] = var2;
            return var1;
        };
        var1 = var3.bind(var4)(var2, var1);
        var1 = null;
        return var1;
    };
    var7 = var7.bind(var8)(var2);
    var2 = 'ChatInputAppCommandManager';
    var7['displayName'] = var2;
    var2 = var8.memo;
    var2 = var2.bind(var8)(var7);
    var4 = var6[var4];
    var6 = var5.bind(var1)(var4);
    var5 = var6.fileFinishedImporting;
    var4 = 'modules/chat_input/native/ChatInputAppCommandManager.tsx';
    var4 = var5.bind(var6)(var4);
    var3['default'] = var2;
    return var1;
})();