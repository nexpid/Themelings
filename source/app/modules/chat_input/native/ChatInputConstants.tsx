// app/modules/chat_input/native/ChatInputConstants.tsx
export default (function(_, argBar, __, ___, ____, argFre, argPlu) {
    verify = argBar;
    zuuluu = argFre;
    offset = argPlu;
    entity = global;
    report = entity.Object;
    tangon = report.defineProperty;
    michal = {};
    entity = true;
    michal['value'] = entity;
    entity = '__esModule';
    entity = tangon.bind(report)(zuuluu, entity, michal);
    golfie = {};
    entity = 'channel_list';
    golfie['CHANNEL_LIST'] = entity;
    entity = 'channel_link';
    golfie['CHANNEL_LINK'] = entity;
    entity = 'back_to_home';
    golfie['BACK_TO_HOME'] = entity;
    entity = 'verify_phone';
    golfie['VERIFY_PHONE'] = entity;
    entity = 'verify_email';
    golfie['VERIFY_EMAIL'] = entity;
    entity = 'join_guild';
    golfie['JOIN_GUILD'] = entity;
    entity = 'follow_announcement';
    golfie['FOLLOW_ANNOUNCEMENT'] = entity;
    entity = 'back_to_discovery';
    golfie['BACK_TO_DISCOVERY'] = entity;
    entity = 'member_verification';
    golfie['MEMBER_VERIFICATION'] = entity;
    entity = 'member_verification_confirmed';
    golfie['MEMBER_VERIFICATION_CONFIRMED'] = entity;
    entity = 'member_verification_rejected';
    golfie['MEMBER_VERIFICATION_REJECTED'] = entity;
    entity = 'unblock';
    golfie['UNBLOCK'] = entity;
    oscard = {};
    entity = 0;
    oscard['PHOTOS'] = entity;
    michal = 'PHOTOS';
    oscard[entity] = michal;
    option = 1;
    oscard['APPS'] = option;
    michal = 'APPS';
    oscard[option] = michal;
    tangon = 2;
    oscard['THREAD'] = tangon;
    michal = 'THREAD';
    oscard[tangon] = michal;
    tangon = 3;
    oscard['NITRO_GIFT'] = tangon;
    michal = 'NITRO_GIFT';
    oscard[tangon] = michal;
    tangon = 4;
    oscard['HIDE_CHAT_INPUT'] = tangon;
    michal = 'HIDE_CHAT_INPUT';
    oscard[tangon] = michal;
    report = {};
    michal = 'opened';
    report['OPENED'] = michal;
    michal = 'dismissed';
    report['CLOSED'] = michal;
    michal = {};
    yankee = offset[entity];
    entity = undefined;
    yankee = verify.bind(entity)(yankee);
    yankee = yankee.STANDARD_EASING;
    michal['easing'] = yankee;
    yankee = 250;
    michal['duration'] = yankee;
    option = offset[option];
    offset = verify.bind(entity)(option);
    verify = offset.fileFinishedImporting;
    option = 'modules/chat_input/native/ChatInputConstants.tsx';
    option = verify.bind(offset)(option);
    zuuluu['TextAreaCta'] = golfie;
    zuuluu['ChatInputActionType'] = oscard;
    zuuluu['ChatInputOmniButtonActionType'] = report;
    report = 40;
    zuuluu['CHAT_INPUT_ACTION_BUTTON_SIZE'] = report;
    zuuluu['CHAT_INPUT_ACTION_BUTTON_MARGIN'] = tangon;
    report = 48;
    zuuluu['CHAT_INPUT_ACTION_BUTTON_WIDTH'] = report;
    report = 36;
    zuuluu['CHAT_INPUT_MORE_BUTTON_WIDTH'] = report;
    report = 12;
    zuuluu['CHAT_INPUT_HORIZONTAL_PADDING'] = report;
    zuuluu['CHAT_INPUT_HORIZONTAL_PADDING_PARENT'] = tangon;
    tangon = 54;
    zuuluu['CHAT_INPUT_HEIGHT'] = tangon;
    zuuluu['CHAT_INPUT_TIMING_CONFIG'] = michal;
    return entity;
})();