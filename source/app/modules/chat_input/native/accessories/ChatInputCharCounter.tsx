// app/modules/chat_input/native/accessories/ChatInputCharCounter.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    report = argBar;
    option = argBaz;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    var _closure1_slot1 = option;
    var _closure1_slot2 = oscard;
    entity = global;
    verify = entity.Object;
    golfie = verify.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(verify)(zuuluu, entity, tangon);
    entity = 0;
    tangon = oscard[entity];
    entity = undefined;
    tangon = option.bind(entity)(tangon);
    var _closure1_slot3 = tangon;
    tangon = 1;
    golfie = oscard[tangon];
    tangon = argCor;
    golfie = tangon.bind(entity)(golfie);
    var _closure1_slot4 = golfie;
    tangon = 2;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    yankee = tangon.StyleSheet;
    tangon = 3;
    tangon = oscard[tangon];
    tangon = option.bind(entity)(tangon);
    var _closure1_slot5 = tangon;
    tangon = 4;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.UpsellTypes;
    var _closure1_slot6 = tangon;
    tangon = 5;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.PremiumUpsellTypes;
    var _closure1_slot7 = tangon;
    tangon = 6;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    option = tangon.jsx;
    var _closure1_slot8 = option;
    tangon = tangon.jsxs;
    var _closure1_slot9 = tangon;
    tangon = 7;
    tangon = oscard[tangon];
    verify = report.bind(entity)(tangon);
    option = verify.createStyles;
    tangon = {};
    offset = {};
    backup = yankee.absoluteFillObject;
    kiloes = offset;
    yankee = copyDataProperties(kiloes, backup);
    romeon = 'center';
    yankee = 'alignItems';
    offset[yankee] = romeon;
    yankee = 'top';
    offset[yankee] = entity;
    tangon['container'] = offset;
    tangon = option.bind(verify)(tangon);
    var _closure1_slot10 = tangon;
    tangon = golfie.forwardRef;
    michal = function(argFoo, argBar) {
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            entity = argFoo;
            yankee = entity.analyticsLocations;
            var _closure2_slot0 = yankee;
            entity = _closure1_slot10;
            report = undefined;
            golfie = entity.bind(report)();
            zuuluu = _closure1_slot0;
            verify = _closure1_slot2;
            entity = 8;
            entity = verify[entity];
            option = zuuluu.bind(report)(entity);
            tangon = option.useStateFromStores;
            entity = _closure1_slot5;
            zuuluu = new Array(1);
            zuuluu[0] = entity;
            entity = function() {
                tangon = _closure1_slot1;
                zuuluu = _closure1_slot2;
                michal = 9;
                zuuluu = zuuluu[michal];
                michal = undefined;
                zuuluu = tangon.bind(michal)(zuuluu);
                michal = zuuluu.canUseIncreasedMessageLength;
                tangon = _closure1_slot5;
                entity = tangon.getCurrentUser;
                entity = entity.bind(tangon)();
                entity = michal.bind(zuuluu)(entity);
                return entity;
            };
            offset = tangon.bind(option)(zuuluu, entity);
            var _closure2_slot1 = offset;
            option = _closure1_slot4;
            zuuluu = option.useState;
            entity = 0;
            romeon = zuuluu.bind(option)(entity);
            tangon = _closure1_slot3;
            zuuluu = 2;
            tangon = tangon.bind(report)(romeon, zuuluu);
            foxtra = tangon[entity];
            zuuluu = 1;
            zuuluu = tangon[zuuluu];
            var _closure2_slot2 = zuuluu;
            tangon = _closure1_slot1;
            zuuluu = 10;
            zuuluu = verify[zuuluu];
            zuuluu = tangon.bind(report)(zuuluu);
            verify = zuuluu.bind(report)();
            var _closure2_slot3 = verify;
            romeon = option.useImperativeHandle;
            tangon = argBar;
            zuuluu = function() {
                entity = {};
                michal = function(argFoo) { // Original name: onMessageLengthChanged
                    entity = global;
                    report = entity.Math;
                    tangon = report.max;
                    zuuluu = _closure2_slot3;
                    michal = argFoo;
                    zuuluu = michal - zuuluu;
                    michal = 0;
                    zuuluu = tangon.bind(report)(michal, zuuluu);
                    michal = _closure2_slot2;
                    entity = undefined;
                    michal = michal.bind(entity)(zuuluu);
                    return entity;
                };
                entity['onMessageLengthChanged'] = michal;
                return entity;
            };
            zuuluu = romeon.bind(option)(tangon, zuuluu);
            tangon = option.useCallback;
            zuuluu = new Array(3);
            zuuluu[0] = yankee;
            zuuluu[1] = offset;
            zuuluu[2] = verify;
            michal = function() {
                _fun00003: for(var _fun00004_ip = 0; ; ) switch(_fun00004_ip) {
 0:
                    entity = _closure2_slot1;
                    michal = _closure1_slot1;
                    offset = _closure1_slot2;
                    if(entity) { _fun00004_ip = 95; continue _fun00003 }
 21:
                    entity = 11;
                    zuuluu = offset[entity];
                    entity = undefined;
                    report = michal.bind(entity)(zuuluu);
                    zuuluu = report.handleShowUpsellAlert;
                    entity = {};
                    oscard = _closure1_slot6;
                    oscard = oscard.LONGER_MESSAGE;
                    entity['initialUpsellKey'] = oscard;
                    oscard = _closure2_slot0;
                    entity['analyticsLocations'] = oscard;
                    oscard = {};
                    golfie = _closure1_slot7;
                    golfie = golfie.MESSAGE_LENGTH_UPSELL;
                    oscard['type'] = golfie;
                    entity['analyticsProperties'] = oscard;
                    entity = zuuluu.bind(report)(entity);
                    _fun00004_ip = 201; continue _fun00003;
 95:
                    entity = 12;
                    entity = offset[entity];
                    verify = undefined;
                    zuuluu = michal.bind(verify)(entity);
                    michal = zuuluu.open;
                    entity = {};
                    report = _closure1_slot0;
                    tangon = 13;
                    oscard = offset[tangon];
                    oscard = report.bind(verify)(oscard);
                    golfie = oscard.intl;
                    oscard = golfie.formatToPlainString;
                    tangon = offset[tangon];
                    tangon = report.bind(verify)(tangon);
                    tangon = tangon.t;
                    report = tangon.vcvHa2;
                    tangon = {};
                    option = _closure2_slot3;
                    tangon['maxLength'] = option;
                    tangon = oscard.bind(golfie)(report, tangon);
                    entity['content'] = tangon;
                    tangon = 'premium-message-length-info-toast';
                    entity['key'] = tangon;
                    entity = michal.bind(zuuluu)(entity);
 201:
                    entity = undefined;
                    return entity;
                }
            };
            verify = tangon.bind(option)(michal, zuuluu);
            michal = foxtra > entity;
            entity = null;
            if(!michal) { _fun00002_ip = 386; continue _fun00001 }
 218:
            tangon = _closure1_slot9;
            option = _closure1_slot0;
            offset = _closure1_slot2;
            michal = 14;
            michal = offset[michal];
            michal = option.bind(report)(michal);
            zuuluu = michal.PressableOpacity;
            michal = {};
            michal['onPress'] = verify;
            golfie = golfie.container;
            michal['style'] = golfie;
            verify = _closure1_slot8;
            oscard = 15;
            oscard = offset[oscard];
            oscard = option.bind(report)(oscard);
            golfie = oscard.Text;
            oscard = {'color': 'info-danger-foreground', 'lineClamp': 1, 'variant': 'text-xs/medium'};
            yankee = global;
            yankee = yankee.HermesInternal;
            romeon = yankee.concat;
            yankee = '-';
            yankee = romeon.bind(yankee)(foxtra);
            oscard['children'] = yankee;
            golfie = verify.bind(report)(golfie, oscard);
            oscard = new Array(2);
            oscard[0] = golfie;
            golfie = 16;
            golfie = offset[golfie];
            golfie = option.bind(report)(golfie);
            option = golfie.NitroWheelIcon;
            golfie = {};
            offset = 'sm';
            golfie['size'] = offset;
            golfie = verify.bind(report)(option, golfie);
            oscard[1] = golfie;
            michal['children'] = oscard;
            entity = tangon.bind(report)(zuuluu, michal);
 386:
            return entity;
        }
    };
    tangon = tangon.bind(golfie)(michal);
    michal = 'ChatInputCharCounter';
    tangon['displayName'] = michal;
    michal = golfie.memo;
    michal = michal.bind(golfie)(tangon);
    tangon = 17;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/chat_input/native/accessories/ChatInputCharCounter.tsx';
    tangon = report.bind(oscard)(tangon);
    zuuluu['default'] = michal;
    return entity;
})();