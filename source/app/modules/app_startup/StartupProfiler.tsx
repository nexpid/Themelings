// app/modules/app_startup/StartupProfiler.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    oscard = argBar;
    zuuluu = argFre;
    golfie = argPlu;
    entity = argBaz;
    var _closure1_slot0 = entity;
    var _closure1_slot1 = golfie;
    entity = global;
    option = entity.Object;
    report = option.defineProperty;
    michal = {};
    entity = true;
    michal['value'] = entity;
    entity = '__esModule';
    entity = report.bind(option)(zuuluu, entity, michal);
    entity = 0;
    report = golfie[entity];
    michal = argCor;
    entity = undefined;
    michal = michal.bind(entity)(report);
    var _closure1_slot2 = michal;
    michal = 1;
    michal = golfie[michal];
    michal = oscard.bind(entity)(michal);
    michal = michal.jsx;
    var _closure1_slot3 = michal;
    michal = {};
    report = 'App';
    michal['App'] = report;
    report = 'AppContainer';
    michal['AppContainer'] = report;
    report = 'MainNavigator';
    michal['MainNavigator'] = report;
    report = 'StackNavigator';
    michal['StackNavigator'] = report;
    report = 'MainTabs';
    michal['MainTabs'] = report;
    report = 'MainDrawers';
    michal['MainDrawers'] = report;
    report = 'PrivateChannels';
    michal['PrivateChannels'] = report;
    report = 'Members';
    michal['Members'] = report;
    report = 'LeftPanel';
    michal['LeftPanel'] = report;
    report = 'Guilds';
    michal['Guilds'] = report;
    report = 'Channels';
    michal['Channels'] = report;
    report = 'RightPanel';
    michal['RightPanel'] = report;
    report = 'CenterPanel';
    michal['CenterPanel'] = report;
    report = 'Channel';
    michal['Channel'] = report;
    report = 'ChatView';
    michal['ChatView'] = report;
    report = 'Messages';
    michal['Messages'] = report;
    report = {};
    var _closure1_slot4 = report;
    verify = function(argFoo, argBar) { // Original name: setLevels
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            offset = argFoo;
            verify = argBar;
            golfie = offset;
            michal = ' ';
            entity = undefined;
            for(tangon in golfie)
 26:
            {
 35:
                yankee = tangon;
                romeon = _closure1_slot4;
                romeon[yankee] = verify;
                foxtra = _closure1_slot5;
                romeon = offset[yankee];
                yankee = verify + michal;
                yankee = foxtra.bind(entity)(romeon, yankee);
                _fun00002_ip = 26; continue _fun00001;
            }
 66:
            return entity;
        }
    };
    var _closure1_slot5 = verify;
    option = {};
    offset = michal.App;
    report = {};
    romeon = michal.AppContainer;
    yankee = {};
    backup = michal.MainNavigator;
    foxtra = {};
    sizing = michal.StackNavigator;
    kiloes = {};
    result = michal.MainTabs;
    output = {};
    update = michal.MainDrawers;
    echoed = {};
    ctrled = michal.LeftPanel;
    source = {};
    sequen = michal.Guilds;
    vacuum = {};
    source[sequen] = vacuum;
    sequen = michal.Channels;
    vacuum = {};
    source[sequen] = vacuum;
    echoed[ctrled] = source;
    ctrled = michal.RightPanel;
    source = {};
    sequen = michal.Members;
    vacuum = {};
    source[sequen] = vacuum;
    echoed[ctrled] = source;
    ctrled = michal.CenterPanel;
    source = {};
    sequen = michal.Channel;
    vacuum = {};
    record = michal.ChatView;
    config = {};
    papara = michal.Messages;
    cntext = {};
    config[papara] = cntext;
    vacuum[record] = config;
    source[sequen] = vacuum;
    echoed[ctrled] = source;
    output[update] = echoed;
    kiloes[result] = output;
    foxtra[sizing] = kiloes;
    yankee[backup] = foxtra;
    report[romeon] = yankee;
    option[offset] = report;
    report = '';
    report = verify.bind(entity)(option, report);
    report = 3;
    report = golfie[report];
    golfie = oscard.bind(entity)(report);
    oscard = golfie.fileFinishedImporting;
    report = 'modules/app_startup/StartupProfiler.tsx';
    report = oscard.bind(golfie)(report);
    tangon = function(argFoo) { // Original name: StartupProfiler
        entity = argFoo;
        report = entity.children;
        golfie = entity.profile;
        var _closure2_slot0 = golfie;
        zuuluu = _closure1_slot0;
        tangon = _closure1_slot1;
        michal = 2;
        michal = tangon[michal];
        tangon = undefined;
        verify = zuuluu.bind(tangon)(michal);
        option = verify.mark;
        michal = _closure1_slot4;
        yankee = michal[golfie];
        michal = global;
        michal = michal.HermesInternal;
        offset = michal.concat;
        zuuluu = '';
        michal = ' render';
        zuuluu = offset.bind(zuuluu)(yankee, golfie, michal);
        michal = 'ðŸŽ¨';
        michal = option.bind(verify)(michal, zuuluu);
        zuuluu = _closure1_slot3;
        entity = _closure1_slot2;
        michal = entity.Profiler;
        entity = {};
        entity['id'] = golfie;
        oscard = function(argFoo, argBar, argBaz) { // Original name: onRender
            tangon = _closure1_slot0;
            zuuluu = _closure1_slot1;
            entity = 2;
            zuuluu = zuuluu[entity];
            entity = undefined;
            oscard = tangon.bind(entity)(zuuluu);
            report = oscard.mark;
            michal = _closure1_slot4;
            verify = _closure2_slot0;
            foxtra = michal[verify];
            michal = global;
            michal = michal.HermesInternal;
            golfie = michal.concat;
            backup = '';
            yankee = ' ';
            offset = argBar;
            romeon = verify;
            tangon = backup[golfie](foxtra, romeon, yankee, offset, verify);
            zuuluu = 'ðŸŽ¨';
            michal = argBaz;
            michal = report.bind(oscard)(zuuluu, tangon, michal);
            return entity;
        };
        entity['onRender'] = oscard;
        entity['children'] = report;
        entity = zuuluu.bind(tangon)(michal, entity);
        return entity;
    };
    zuuluu['default'] = tangon;
    zuuluu['Profiles'] = michal;
    return entity;
})();