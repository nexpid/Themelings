// app/modules/global_discovery_apps/stores/ApplicationDirectorySearchStore.tsx
export default (function(global, require, metroImportDefault, metroImportAll, moduleObject, exports, dependencyMap) {
    var6 = require;
    var8 = metroImportDefault;
    var3 = exports;
    var7 = dependencyMap;
    var _closure1_slot0 = var6;
    var _closure1_slot1 = var7;
    var1 = function _isNativeReflectConstruct() {
        _fun0001: for(var _fun0001_ip = 0; ; ) switch(_fun0001_ip) {
case 0:
case 2: // try_start_0
            var2 = global;
            var3 = var2.Boolean;
            var3 = var3.prototype;
            var4 = var3.valueOf;
            var3 = var4.call;
            var8 = var2.Reflect;
            var7 = var8.construct;
            var6 = var2.Boolean;
            var5 = new Array(0);
            var2 = function() {
                var1 = undefined;
                return var1;
            };
            var2 = var7.bind(var8)(var6, var5, var2);
            var2 = var3.bind(var4)(var2);
            var2 = !var2;
            var _closure2_slot0 = var2;
case 3: // try_end0
            _fun0001_ip = 4; continue _fun0001;
case 5: // catch_target0
            CatchBlockStart(arg_register=1);
case 4:
            var2 = function _isNativeReflectConstruct() {
                var1 = _closure2_slot0;
                var1 = !var1;
                var1 = !var1;
                return var1;
            };
            _closure1_slot10 = var2;
            var1 = undefined;
            var1 = var2.bind(var1)();
            return var1;
        }
    };
    var _closure1_slot10 = var1;
    var1 = function getCacheKey(arg1) {
        _fun0002: for(var _fun0002_ip = 0; ; ) switch(_fun0002_ip) {
case 0:
            var1 = arg1;
            var23 = var1.query;
            var22 = var1.guildId;
            var21 = var1.page;
            var20 = var1.pageSize;
            var19 = var1.categoryId;
            var18 = var1.integrationType;
            var17 = var1.minUserInstallCommandCount;
            var16 = var1.excludeAppsWithCustomInstallUrl;
            var15 = var1.excludeNonEmbeddedApps;
            var14 = var1.excludeEmbeddedAppsWithoutPrimaryEntryPointAppCommand;
            var13 = var1.source;
            var3 = undefined;
            if(!(var13 === var3)) { _fun0002_ip = 6; continue _fun0002 }
case 7:
            var2 = _closure1_slot0;
            var4 = _closure1_slot1;
            var1 = 5;
            var1 = var4[var1];
            var1 = var2.bind(var3)(var1);
            var1 = var1.SearchAppsRequestSource;
            var13 = var1.APP_DIRECTORY;
case 6:
            var1 = global;
            var1 = var1.HermesInternal;
            var12 = var1.concat;
            var45 = "query:'";
            var43 = "' guildId:";
            var41 = ' page:';
            var39 = ' pageSize:';
            var37 = ' categoryId:';
            var35 = ' integrationType:';
            var33 = ' minUserInstallCommandCount:';
            var31 = ' excludeAppsWithCustomInstallUrl:';
            var29 = ' excludeNonEmbeddedApps:';
            var27 = ' excludeEmbeddedAppsWithoutPrimaryEntryPointAppCommand:';
            var25 = ' source:';
            var44 = var23;
            var42 = var22;
            var40 = var21;
            var38 = var20;
            var36 = var19;
            var34 = var18;
            var32 = var17;
            var30 = var16;
            var28 = var15;
            var26 = var14;
            var24 = var13;
            var1 = var45[var12](var44, var43, var42, var41, var40, var39, var38, var37, var36, var35, var34, var33, var32, var31, var30, var29, var28, var27, var26, var25, var24, var23);
            return var1;
        }
    };
    var _closure1_slot11 = var1;
    var1 = global;
    var9 = var1.Object;
    var4 = var9.defineProperty;
    var2 = {};
    var1 = true;
    var2['value'] = var1;
    var1 = '__esModule';
    var1 = var4.bind(var9)(var3, var1, var2);
    var11 = 0;
    var2 = var7[var11];
    var1 = undefined;
    var2 = var8.bind(var1)(var2);
    var _closure1_slot2 = var2;
    var10 = 1;
    var2 = var7[var10];
    var2 = var8.bind(var1)(var2);
    var _closure1_slot3 = var2;
    var9 = 2;
    var2 = var7[var9];
    var2 = var8.bind(var1)(var2);
    var _closure1_slot4 = var2;
    var2 = 3;
    var2 = var7[var2];
    var2 = var8.bind(var1)(var2);
    var _closure1_slot5 = var2;
    var2 = 4;
    var2 = var7[var2];
    var2 = var8.bind(var1)(var2);
    var _closure1_slot6 = var2;
    var2 = {};
    var2['FETCHING'] = var11;
    var4 = 'FETCHING';
    var2[var11] = var4;
    var2['FETCHED'] = var10;
    var4 = 'FETCHED';
    var2[var10] = var4;
    var2['ERROR'] = var9;
    var4 = 'ERROR';
    var2[var9] = var4;
    var _closure1_slot7 = var2;
    var4 = 6;
    var4 = var7[var4];
    var10 = var8.bind(var1)(var4);
    var4 = {};
    var9 = 20;
    var4['max'] = var9;
    var9 = var10.prototype;
    var9 = Object.create(var9, {constructor: {value: var10}});
    var15 = var9;
    var14 = var4;
    var4 = new var15[var10](var14, var13);
    var4 = var4 instanceof Object ? var4 : var9;
    var _closure1_slot8 = var4;
    var4 = {};
    var _closure1_slot9 = var4;
    var4 = 7;
    var4 = var7[var4];
    var4 = var8.bind(var1)(var4);
    var9 = var4.Store;
    var4 = function(arg1) {
        var4 = function ApplicationDirectorySearchStore() {
            _fun0003: for(var _fun0003_ip = 0; ; ) switch(_fun0003_ip) {
case 0:
                var4 = this;
                var3 = undefined;
                var5 = undefined;
                var1 = _closure1_slot2;
                var2 = _closure2_slot0;
                var1 = var1.bind(var3)(var4, var2);
                var1 = _closure1_slot5;
                var9 = var1.bind(var3)(var2);
                var2 = _closure1_slot4;
                var1 = _closure1_slot10;
                var1 = var1.bind(var3)();
                if(var1) { _fun0003_ip = 8; continue _fun0003 }
case 9:
                var7 = var9.apply;
                var5 = arguments;
                var1 = var5;
                var1 = var7.bind(var9)(var4, var1);
                _fun0003_ip = 10; continue _fun0003;
case 8:
                var7 = global;
                var8 = var7.Reflect;
                var7 = var8.construct;
                var6 = _closure1_slot5;
                var6 = var6.bind(var3)(var4);
                var6 = var6.constructor;
                var5 = arguments;
                var1 = var7.bind(var8)(var9, var5, var6);
case 10:
                var1 = var2.bind(var3)(var4, var1);
                return var1;
            }
        };
        var _closure2_slot0 = var4;
        var5 = _closure1_slot6;
        var3 = undefined;
        var2 = arg1;
        var2 = var5.bind(var3)(var4, var2);
        var2 = _closure1_slot3;
        var5 = {};
        var1 = 'getSearchResults';
        var5['key'] = var1;
        var1 = function value(arg1) {
            var1 = arg1;
            var14 = var1.query;
            var13 = var1.guildId;
            var12 = var1.page;
            var11 = var1.pageSize;
            var10 = var1.categoryId;
            var9 = var1.integrationType;
            var8 = var1.minUserInstallCommandCount;
            var7 = var1.excludeAppsWithCustomInstallUrl;
            var6 = var1.excludeNonEmbeddedApps;
            var5 = var1.excludeEmbeddedAppsWithoutPrimaryEntryPointAppCommand;
            var2 = var1.source;
            var4 = _closure1_slot11;
            var3 = {};
            var3['query'] = var14;
            var3['guildId'] = var13;
            var3['page'] = var12;
            var3['pageSize'] = var11;
            var3['categoryId'] = var10;
            var3['integrationType'] = var9;
            var3['minUserInstallCommandCount'] = var8;
            var3['excludeAppsWithCustomInstallUrl'] = var7;
            var3['excludeNonEmbeddedApps'] = var6;
            var3['excludeEmbeddedAppsWithoutPrimaryEntryPointAppCommand'] = var5;
            var3['source'] = var2;
            var2 = undefined;
            var3 = var4.bind(var2)(var3);
            var2 = _closure1_slot8;
            var1 = var2.get;
            var1 = var1.bind(var2)(var3);
            return var1;
        };
        var5['value'] = var1;
        var1 = new Array(2);
        var1[0] = var5;
        var5 = {};
        var7 = 'getFetchState';
        var5['key'] = var7;
        var6 = function value(arg1) {
            var1 = arg1;
            var14 = var1.query;
            var13 = var1.guildId;
            var12 = var1.page;
            var11 = var1.pageSize;
            var10 = var1.categoryId;
            var9 = var1.integrationType;
            var8 = var1.minUserInstallCommandCount;
            var7 = var1.excludeAppsWithCustomInstallUrl;
            var6 = var1.excludeNonEmbeddedApps;
            var5 = var1.excludeEmbeddedAppsWithoutPrimaryEntryPointAppCommand;
            var2 = var1.source;
            var4 = _closure1_slot11;
            var3 = {};
            var3['query'] = var14;
            var3['guildId'] = var13;
            var3['page'] = var12;
            var3['pageSize'] = var11;
            var3['categoryId'] = var10;
            var3['integrationType'] = var9;
            var3['minUserInstallCommandCount'] = var8;
            var3['excludeAppsWithCustomInstallUrl'] = var7;
            var3['excludeNonEmbeddedApps'] = var6;
            var3['excludeEmbeddedAppsWithoutPrimaryEntryPointAppCommand'] = var5;
            var3['source'] = var2;
            var2 = undefined;
            var2 = var4.bind(var2)(var3);
            var1 = _closure1_slot9;
            var1 = var1[var2];
            return var1;
        };
        var5['value'] = var6;
        var1[1] = var5;
        var1 = var2.bind(var3)(var4, var1);
        return var1;
    };
    var9 = var4.bind(var1)(var9);
    var4 = 'ApplicationDirectorySearchStore';
    var9['displayName'] = var4;
    var4 = 8;
    var4 = var7[var4];
    var14 = var8.bind(var1)(var4);
    var4 = {};
    var10 = function handleSearchFetch(arg1) {
        var1 = arg1;
        var14 = var1.query;
        var13 = var1.guildId;
        var12 = var1.page;
        var11 = var1.pageSize;
        var10 = var1.categoryId;
        var9 = var1.integrationType;
        var8 = var1.minUserInstallCommandCount;
        var7 = var1.excludeAppsWithCustomInstallUrl;
        var6 = var1.excludeNonEmbeddedApps;
        var5 = var1.excludeEmbeddedAppsWithoutPrimaryEntryPointAppCommand;
        var1 = var1.source;
        var4 = _closure1_slot11;
        var2 = {};
        var2['query'] = var14;
        var2['guildId'] = var13;
        var2['page'] = var12;
        var2['pageSize'] = var11;
        var2['categoryId'] = var10;
        var2['integrationType'] = var9;
        var2['minUserInstallCommandCount'] = var8;
        var2['excludeAppsWithCustomInstallUrl'] = var7;
        var2['excludeNonEmbeddedApps'] = var6;
        var2['excludeEmbeddedAppsWithoutPrimaryEntryPointAppCommand'] = var5;
        var2['source'] = var1;
        var1 = undefined;
        var5 = var4.bind(var1)(var2);
        var2 = {};
        var15 = _closure1_slot9;
        var16 = var2;
        var4 = copyDataProperties(var16, var15);
        var4 = _closure1_slot7;
        var4 = var4.FETCHING;
        var2[var5] = var4;
        _closure1_slot9 = var2;
        return var1;
    };
    var4['APPLICATION_DIRECTORY_FETCH_SEARCH'] = var10;
    var10 = function handleSearchFetchSuccess(arg1) {
        var1 = arg1;
        var15 = var1.query;
        var14 = var1.guildId;
        var13 = var1.page;
        var12 = var1.pageSize;
        var11 = var1.categoryId;
        var16 = var1.result;
        var10 = var1.integrationType;
        var9 = var1.minUserInstallCommandCount;
        var8 = var1.excludeAppsWithCustomInstallUrl;
        var6 = var1.excludeNonEmbeddedApps;
        var5 = var1.excludeEmbeddedAppsWithoutPrimaryEntryPointAppCommand;
        var1 = var1.source;
        var4 = _closure1_slot11;
        var2 = {};
        var2['query'] = var15;
        var2['guildId'] = var14;
        var2['page'] = var13;
        var2['pageSize'] = var12;
        var2['categoryId'] = var11;
        var2['integrationType'] = var10;
        var2['minUserInstallCommandCount'] = var9;
        var2['excludeAppsWithCustomInstallUrl'] = var8;
        var2['excludeNonEmbeddedApps'] = var6;
        var2['excludeEmbeddedAppsWithoutPrimaryEntryPointAppCommand'] = var5;
        var2['source'] = var1;
        var1 = undefined;
        var5 = var4.bind(var1)(var2);
        var6 = _closure1_slot8;
        var4 = var6.set;
        var2 = {};
        var8 = global;
        var9 = var8.Date;
        var8 = var9.now;
        var8 = var8.bind(var9)();
        var2['lastFetchTimeMs'] = var8;
        var17 = var2;
        var7 = copyDataProperties(var17, var16);
        var2 = var4.bind(var6)(var5, var2);
        var2 = {};
        var16 = _closure1_slot9;
        var17 = var2;
        var4 = copyDataProperties(var17, var16);
        var4 = _closure1_slot7;
        var4 = var4.FETCHED;
        var2[var5] = var4;
        _closure1_slot9 = var2;
        return var1;
    };
    var4['APPLICATION_DIRECTORY_FETCH_SEARCH_SUCCESS'] = var10;
    var5 = function handleSearchFetchFailure(arg1) {
        var1 = arg1;
        var14 = var1.query;
        var13 = var1.guildId;
        var12 = var1.page;
        var11 = var1.pageSize;
        var10 = var1.categoryId;
        var9 = var1.integrationType;
        var8 = var1.minUserInstallCommandCount;
        var7 = var1.excludeAppsWithCustomInstallUrl;
        var6 = var1.excludeNonEmbeddedApps;
        var5 = var1.excludeEmbeddedAppsWithoutPrimaryEntryPointAppCommand;
        var1 = var1.source;
        var4 = _closure1_slot11;
        var2 = {};
        var2['query'] = var14;
        var2['guildId'] = var13;
        var2['page'] = var12;
        var2['pageSize'] = var11;
        var2['categoryId'] = var10;
        var2['integrationType'] = var9;
        var2['minUserInstallCommandCount'] = var8;
        var2['excludeAppsWithCustomInstallUrl'] = var7;
        var2['excludeNonEmbeddedApps'] = var6;
        var2['excludeEmbeddedAppsWithoutPrimaryEntryPointAppCommand'] = var5;
        var2['source'] = var1;
        var1 = undefined;
        var5 = var4.bind(var1)(var2);
        var2 = {};
        var15 = _closure1_slot9;
        var16 = var2;
        var4 = copyDataProperties(var16, var15);
        var4 = _closure1_slot7;
        var4 = var4.ERROR;
        var2[var5] = var4;
        _closure1_slot9 = var2;
        return var1;
    };
    var4['APPLICATION_DIRECTORY_FETCH_SEARCH_FAILURE'] = var5;
    var5 = var9.prototype;
    var5 = Object.create(var5, {constructor: {value: var9}});
    var15 = var5;
    var13 = var4;
    var4 = new var15[var9](var14, var13, var12);
    var4 = var4 instanceof Object ? var4 : var5;
    var5 = 9;
    var5 = var7[var5];
    var7 = var6.bind(var1)(var5);
    var6 = var7.fileFinishedImporting;
    var5 = 'modules/global_discovery_apps/stores/ApplicationDirectorySearchStore.tsx';
    var5 = var6.bind(var7)(var5);
    var3['default'] = var4;
    var3['FetchState'] = var2;
    return var1;
})();