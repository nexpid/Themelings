// app/modules/hangouts/VoiceLockscreenWidgetExperiment.tsx
export default (function(argFoo, argBar, argBaz, _, __, argFre, argPlu) {
    golfie = argBar;
    zuuluu = argFre;
    option = argPlu;
    entity = argBaz;
    var _closure1_slot0 = entity;
    var _closure1_slot1 = option;
    entity = global;
    oscard = entity.Object;
    report = oscard.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = report.bind(oscard)(zuuluu, entity, tangon);
    tangon = 0;
    report = option[tangon];
    entity = undefined;
    offset = golfie.bind(entity)(report);
    verify = offset.createExperiment;
    report = {'kind': 'guild', 'id': '2023-12_voice_lockscreen_widget', 'label': 'Voice live activity (guild)'};
    oscard = {'showWidget': false, 'voiceChannelActivityNotifsEnabled': false};
    report['defaultConfig'] = oscard;
    oscard = {'id': 1, 'label': 'Off (notif only)'};
    yankee = {'showWidget': false, 'voiceChannelActivityNotifsEnabled': false};
    oscard['config'] = yankee;
    yankee = new Array(3);
    yankee[0] = oscard;
    oscard = {'id': 2, 'label': 'On (widget + notif)'};
    romeon = {'showWidget': true, 'voiceChannelActivityNotifsEnabled': false};
    oscard['config'] = romeon;
    yankee[1] = oscard;
    romeon = {'id': 3, 'label': 'On (widget + notifs++)'};
    oscard = 3;
    foxtra = {'showWidget': true, 'voiceChannelActivityNotifsEnabled': true};
    romeon['config'] = foxtra;
    yankee[2] = romeon;
    report['treatments'] = yankee;
    report = verify.bind(offset)(report);
    var _closure1_slot2 = report;
    tangon = option[tangon];
    offset = golfie.bind(entity)(tangon);
    verify = offset.createExperiment;
    tangon = {'kind': 'user', 'id': '2024-01_voice_lockscreen_widget_user', 'label': 'Voice live activity (user)'};
    yankee = {'showWidget': false, 'showStaticWidget': false};
    tangon['defaultConfig'] = yankee;
    romeon = {'id': 1, 'label': 'Widget on'};
    yankee = {'showWidget': true, 'showStaticWidget': false};
    romeon['config'] = yankee;
    yankee = new Array(1);
    yankee[0] = romeon;
    tangon['treatments'] = yankee;
    tangon = verify.bind(offset)(tangon);
    oscard = option[oscard];
    option = golfie.bind(entity)(oscard);
    golfie = option.fileFinishedImporting;
    oscard = 'modules/hangouts/VoiceLockscreenWidgetExperiment.tsx';
    oscard = golfie.bind(option)(oscard);
    zuuluu['default'] = report;
    zuuluu['VoiceLockscreenWidgetUserExperiment'] = tangon;
    michal = function(argFoo, argBar) { // Original name: getLockscreenWidgetConfig
        entity = argFoo;
        oscard = _closure1_slot0;
        golfie = _closure1_slot1;
        zuuluu = 1;
        zuuluu = golfie[zuuluu];
        report = undefined;
        tangon = oscard.bind(report)(zuuluu);
        zuuluu = tangon.age;
        tangon = zuuluu.bind(tangon)(entity);
        zuuluu = 2;
        zuuluu = golfie[zuuluu];
        zuuluu = oscard.bind(report)(zuuluu);
        zuuluu = zuuluu.Millis;
        report = zuuluu.DAY;
        zuuluu = 30;
        zuuluu = zuuluu * report;
        report = tangon >= zuuluu;
        tangon = _closure1_slot2;
        zuuluu = tangon.getCurrentConfig;
        michal = {};
        oscard = argBar;
        michal['location'] = oscard;
        michal['guildId'] = entity;
        entity = {};
        entity['disable'] = report;
        report = true;
        entity['autoTrackExposure'] = report;
        entity = zuuluu.bind(tangon)(michal, entity);
        return entity;
    };
    zuuluu['getLockscreenWidgetConfig'] = michal;
    return entity;
})();