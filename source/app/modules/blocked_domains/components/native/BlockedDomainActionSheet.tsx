// app/modules/blocked_domains/components/native/BlockedDomainActionSheet.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    report = argBar;
    yankee = argBaz;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    var _closure1_slot1 = yankee;
    var _closure1_slot2 = oscard;
    entity = global;
    option = entity.Object;
    golfie = option.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(option)(zuuluu, entity, tangon);
    entity = 0;
    golfie = oscard[entity];
    tangon = argCor;
    entity = undefined;
    tangon = tangon.bind(entity)(golfie);
    tangon = 1;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    golfie = tangon.Image;
    var _closure1_slot3 = golfie;
    tangon = tangon.ScrollView;
    var _closure1_slot4 = tangon;
    tangon = 2;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    golfie = tangon.jsx;
    var _closure1_slot5 = golfie;
    tangon = tangon.jsxs;
    var _closure1_slot6 = tangon;
    tangon = 3;
    tangon = oscard[tangon];
    option = report.bind(entity)(tangon);
    golfie = option.createStyles;
    tangon = {};
    verify = {'zIndex': 1, 'alignSelf': 'center', 'height': 105, 'marginBottom': 4294967280};
    tangon['image'] = verify;
    verify = {'textAlign': 'center', 'marginTop': 20, 'marginBottom': 8};
    tangon['title'] = verify;
    verify = {'textAlign': 'center', 'marginBottom': 16};
    tangon['warningMessage'] = verify;
    verify = {};
    offset = 300;
    verify['maxHeight'] = offset;
    offset = 4;
    offset = oscard[offset];
    offset = yankee.bind(entity)(offset);
    offset = offset.colors;
    offset = offset.BACKGROUND_SECONDARY;
    verify['backgroundColor'] = offset;
    tangon['linkCalloutContainer'] = verify;
    verify = {'padding': 10, 'paddingTop': 16, 'paddingBottom': 16};
    tangon['linkCalloutContainerText'] = verify;
    verify = {'marginTop': 18, 'height': 40};
    tangon['button'] = verify;
    tangon = golfie.bind(option)(tangon);
    var _closure1_slot7 = tangon;
    tangon = 12;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/blocked_domains/components/native/BlockedDomainActionSheet.tsx';
    tangon = report.bind(oscard)(tangon);
    michal = function(argFoo) { // Original name: _default
        entity = argFoo;
        zuuluu = entity.url;
        entity = _closure1_slot7;
        tangon = undefined;
        foxtra = entity.bind(tangon)();
        kiloes = _closure1_slot0;
        yankee = _closure1_slot2;
        entity = 5;
        entity = yankee[entity];
        michal = kiloes.bind(tangon)(entity);
        entity = michal.useUrlParts;
        entity = entity.bind(michal)(zuuluu);
        ctrled = entity.protocol;
        source = entity.hostname;
        echoed = entity.theRestOfTheUrl;
        zuuluu = _closure1_slot6;
        entity = 6;
        entity = yankee[entity];
        entity = kiloes.bind(tangon)(entity);
        michal = entity.BottomSheet;
        entity = {};
        report = true;
        entity['startExpanded'] = report;
        option = _closure1_slot5;
        output = 7;
        report = yankee[output];
        report = kiloes.bind(tangon)(report);
        golfie = report.Text;
        report = {'style': null, 'accessibilityRole': 'header', 'variant': 'heading-lg/extrabold', 'color': 'header-primary'};
        verify = foxtra.title;
        report['style'] = verify;
        romeon = 8;
        verify = yankee[romeon];
        verify = kiloes.bind(tangon)(verify);
        backup = verify.intl;
        offset = backup.string;
        verify = yankee[romeon];
        verify = kiloes.bind(tangon)(verify);
        verify = verify.t;
        verify = verify.2B3wj4;
        verify = offset.bind(backup)(verify);
        report['children'] = verify;
        golfie = option.bind(tangon)(golfie, report);
        report = new Array(5);
        report[0] = golfie;
        golfie = yankee[output];
        golfie = kiloes.bind(tangon)(golfie);
        verify = golfie.Text;
        golfie = {};
        offset = foxtra.warningMessage;
        golfie['style'] = offset;
        offset = 'text-md/medium';
        golfie['variant'] = offset;
        offset = yankee[romeon];
        offset = kiloes.bind(tangon)(offset);
        result = offset.intl;
        sizing = result.format;
        offset = yankee[romeon];
        offset = kiloes.bind(tangon)(offset);
        offset = offset.t;
        backup = offset.jnHyYW;
        offset = {};
        offset = sizing.bind(result)(backup, offset);
        golfie['children'] = offset;
        golfie = option.bind(tangon)(verify, golfie);
        report[1] = golfie;
        verify = _closure1_slot3;
        golfie = {};
        offset = foxtra.image;
        golfie['style'] = offset;
        offset = _closure1_slot1;
        backup = 9;
        backup = yankee[backup];
        backup = offset.bind(tangon)(backup);
        golfie['source'] = backup;
        golfie = option.bind(tangon)(verify, golfie);
        report[2] = golfie;
        golfie = _closure1_slot4;
        oscard = {};
        verify = foxtra.linkCalloutContainer;
        oscard['style'] = verify;
        verify = yankee[output];
        verify = kiloes.bind(tangon)(verify);
        backup = verify.Text;
        verify = {};
        sizing = foxtra.linkCalloutContainerText;
        verify['style'] = sizing;
        sizing = 'text-md/normal';
        verify['variant'] = sizing;
        sizing = yankee[output];
        sizing = kiloes.bind(tangon)(sizing);
        result = sizing.Text;
        sizing = {'variant': 'text-md/normal', 'color': 'text-muted'};
        update = new Array(2);
        update[0] = ctrled;
        ctrled = '//';
        update[1] = ctrled;
        sizing['children'] = update;
        result = zuuluu.bind(tangon)(result, sizing);
        sizing = new Array(3);
        sizing[0] = result;
        result = yankee[output];
        result = kiloes.bind(tangon)(result);
        update = result.Text;
        result = {'variant': 'text-md/semibold', 'color': 'text-normal'};
        result['children'] = source;
        result = option.bind(tangon)(update, result);
        sizing[1] = result;
        output = yankee[output];
        output = kiloes.bind(tangon)(output);
        result = output.Text;
        output = {'variant': 'text-md/normal', 'color': 'text-muted'};
        output['children'] = echoed;
        output = option.bind(tangon)(result, output);
        sizing[2] = output;
        verify['children'] = sizing;
        verify = zuuluu.bind(tangon)(backup, verify);
        oscard['children'] = verify;
        oscard = option.bind(tangon)(golfie, oscard);
        report[3] = oscard;
        verify = 10;
        oscard = yankee[verify];
        golfie = offset.bind(tangon)(oscard);
        oscard = {};
        foxtra = foxtra.button;
        oscard['style'] = foxtra;
        foxtra = yankee[romeon];
        foxtra = kiloes.bind(tangon)(foxtra);
        backup = foxtra.intl;
        foxtra = backup.string;
        romeon = yankee[romeon];
        romeon = kiloes.bind(tangon)(romeon);
        romeon = romeon.t;
        romeon = romeon./g10LC;
        romeon = foxtra.bind(backup)(romeon);
        oscard['text'] = romeon;
        romeon = function() { // Original name: onPress
            zuuluu = _closure1_slot1;
            michal = _closure1_slot2;
            entity = 11;
            michal = michal[entity];
            entity = undefined;
            michal = zuuluu.bind(entity)(michal);
            entity = michal.hideActionSheet;
            entity = entity.bind(michal)();
            return entity;
        };
        oscard['onPress'] = romeon;
        romeon = yankee[verify];
        romeon = offset.bind(tangon)(romeon);
        romeon = romeon.Colors;
        romeon = romeon.BRAND;
        oscard['color'] = romeon;
        verify = yankee[verify];
        verify = offset.bind(tangon)(verify);
        verify = verify.Sizes;
        verify = verify.SMALL;
        oscard['size'] = verify;
        oscard = option.bind(tangon)(golfie, oscard);
        report[4] = oscard;
        entity['children'] = report;
        entity = zuuluu.bind(tangon)(michal, entity);
        return entity;
    };
    zuuluu['default'] = michal;
    return entity;
})();