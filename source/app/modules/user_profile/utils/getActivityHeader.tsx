// app/modules/user_profile/utils/getActivityHeader.tsx
export default (function(argFoo, argBar, argBaz, _, __, argFred, argPlugh) {
    report = argBar;
    zulu = argFred;
    oscar = argPlugh;
    var _closure1_slot0 = report;
    entity = argBaz;
    var _closure1_slot1 = entity;
    var _closure1_slot2 = oscar;
    entity = global;
    options = entity.Object;
    golf = options.defineProperty;
    tango = {};
    entity = true;
    tango['value'] = entity;
    entity = '__esModule';
    entity = golf.bind(options)(zulu, entity, tango);
    entity = 0;
    tango = oscar[entity];
    entity = undefined;
    tango = report.bind(entity)(tango);
    golf = tango.ActivityTypes;
    var _closure1_slot3 = golf;
    tango = tango.PlatformTypes;
    var _closure1_slot4 = tango;
    tango = 4;
    tango = oscar[tango];
    oscar = report.bind(entity)(tango);
    report = oscar.fileFinishedImporting;
    tango = 'modules/user_profile/utils/getActivityHeader.tsx';
    tango = report.bind(oscar)(tango);
    mike = function(argFoo) { // Original name: getActivityHeader
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            tango = argFoo;
            var _closure2_slot0 = tango;
            zulu = _closure1_slot1;
            golf = _closure1_slot2;
            entity = 1;
            entity = golf[entity];
            mike = undefined;
            entity = zulu.bind(mike)(entity);
            zulu = entity.bind(mike)(tango);
            entity = {};
            options = _closure1_slot0;
            yankee = 2;
            golf = golf[yankee];
            verify = options.bind(mike)(golf);
            options = verify.match;
            golf = new Array(2);
            golf[0] = tango;
            tango = null;
            romeo = tango == zulu;
            offset = undefined;
            if(romeo) { _fun00002_ip = 87; continue _fun00001 }
 82:
            offset = zulu.type;
 87:
            golf[1] = offset;
            foxtrot = options.bind(verify)(golf);
            romeo = foxtrot.with;
            options = {};
            golf = _closure1_slot3;
            verify = golf.PLAYING;
            options['type'] = verify;
            offset = new Array(2);
            offset[0] = options;
            options = _closure1_slot4;
            verify = options.XBOX;
            offset[1] = verify;
            verify = function() {
                verify = _closure1_slot0;
                offset = _closure1_slot2;
                report = 3;
                entity = offset[report];
                options = undefined;
                entity = verify.bind(options)(entity);
                tango = entity.intl;
                zulu = tango.formatToPlainString;
                entity = offset[report];
                entity = verify.bind(options)(entity);
                entity = entity.t;
                mike = entity.Sq9xJy;
                entity = {};
                oscar = offset[report];
                oscar = verify.bind(options)(oscar);
                golf = oscar.intl;
                oscar = golf.string;
                report = offset[report];
                report = verify.bind(options)(report);
                report = report.t;
                report = report.Nfvo7+;
                report = oscar.bind(golf)(report);
                entity['game'] = report;
                entity = zulu.bind(tango)(mike, entity);
                return entity;
            };
            foxtrot = romeo.bind(foxtrot)(offset, verify);
            romeo = foxtrot.with;
            verify = {};
            offset = golf.PLAYING;
            verify['type'] = offset;
            offset = new Array(2);
            offset[0] = verify;
            verify = options.PLAYSTATION;
            offset[1] = verify;
            verify = function() {
                verify = _closure1_slot0;
                offset = _closure1_slot2;
                report = 3;
                entity = offset[report];
                options = undefined;
                entity = verify.bind(options)(entity);
                tango = entity.intl;
                zulu = tango.formatToPlainString;
                entity = offset[report];
                entity = verify.bind(options)(entity);
                entity = entity.t;
                mike = entity.Sq9xJy;
                entity = {};
                oscar = offset[report];
                oscar = verify.bind(options)(oscar);
                golf = oscar.intl;
                oscar = golf.string;
                report = offset[report];
                report = verify.bind(options)(report);
                report = report.t;
                report = report.fFl4jo;
                report = oscar.bind(golf)(report);
                entity['game'] = report;
                entity = zulu.bind(tango)(mike, entity);
                return entity;
            };
            foxtrot = romeo.bind(foxtrot)(offset, verify);
            romeo = foxtrot.with;
            verify = {};
            offset = golf.STREAMING;
            verify['type'] = offset;
            offset = new Array(2);
            offset[0] = verify;
            verify = options.TWITCH;
            offset[1] = verify;
            verify = function() {
                verify = _closure1_slot0;
                offset = _closure1_slot2;
                report = 3;
                entity = offset[report];
                options = undefined;
                entity = verify.bind(options)(entity);
                tango = entity.intl;
                zulu = tango.formatToPlainString;
                entity = offset[report];
                entity = verify.bind(options)(entity);
                entity = entity.t;
                mike = entity.4CQq9f;
                entity = {};
                oscar = offset[report];
                oscar = verify.bind(options)(oscar);
                golf = oscar.intl;
                oscar = golf.string;
                report = offset[report];
                report = verify.bind(options)(report);
                report = report.t;
                report = report.q4pBGx;
                report = oscar.bind(golf)(report);
                entity['name'] = report;
                entity = zulu.bind(tango)(mike, entity);
                return entity;
            };
            romeo = romeo.bind(foxtrot)(offset, verify);
            offset = romeo.with;
            foxtrot = {};
            verify = golf.STREAMING;
            foxtrot['type'] = verify;
            verify = new Array(2);
            verify[0] = foxtrot;
            options = options.YOUTUBE;
            verify[1] = options;
            options = function() {
                verify = _closure1_slot0;
                offset = _closure1_slot2;
                report = 3;
                entity = offset[report];
                options = undefined;
                entity = verify.bind(options)(entity);
                tango = entity.intl;
                zulu = tango.formatToPlainString;
                entity = offset[report];
                entity = verify.bind(options)(entity);
                entity = entity.t;
                mike = entity.4CQq9f;
                entity = {};
                oscar = offset[report];
                oscar = verify.bind(options)(oscar);
                golf = oscar.intl;
                oscar = golf.string;
                report = offset[report];
                report = verify.bind(options)(report);
                report = report.t;
                report = report.aS6cKy;
                report = oscar.bind(golf)(report);
                entity['name'] = report;
                entity = zulu.bind(tango)(mike, entity);
                return entity;
            };
            foxtrot = offset.bind(romeo)(verify, options);
            romeo = foxtrot.with;
            options = {};
            verify = golf.PLAYING;
            options['type'] = verify;
            verify = new Array(2);
            verify[0] = options;
            offset = _closure1_slot0;
            oscar = _closure1_slot2;
            options = oscar[yankee];
            options = offset.bind(mike)(options);
            options = options.P;
            options = options.any;
            verify[1] = options;
            options = function() {
                report = _closure1_slot0;
                oscar = _closure1_slot2;
                entity = 3;
                mike = oscar[entity];
                tango = undefined;
                mike = report.bind(tango)(mike);
                zulu = mike.intl;
                mike = zulu.string;
                entity = oscar[entity];
                entity = report.bind(tango)(entity);
                entity = entity.t;
                entity = entity.BMTj29;
                entity = mike.bind(zulu)(entity);
                return entity;
            };
            foxtrot = romeo.bind(foxtrot)(verify, options);
            romeo = foxtrot.with;
            options = {};
            verify = golf.STREAMING;
            options['type'] = verify;
            verify = new Array(2);
            verify[0] = options;
            options = oscar[yankee];
            options = offset.bind(mike)(options);
            options = options.P;
            options = options.any;
            verify[1] = options;
            options = function() {
                report = _closure1_slot0;
                oscar = _closure1_slot2;
                entity = 3;
                mike = oscar[entity];
                tango = undefined;
                mike = report.bind(tango)(mike);
                zulu = mike.intl;
                mike = zulu.string;
                entity = oscar[entity];
                entity = report.bind(tango)(entity);
                entity = entity.t;
                entity = entity.Jpkr/v;
                entity = mike.bind(zulu)(entity);
                return entity;
            };
            foxtrot = romeo.bind(foxtrot)(verify, options);
            romeo = foxtrot.with;
            options = {};
            verify = golf.LISTENING;
            options['type'] = verify;
            verify = oscar[yankee];
            verify = offset.bind(mike)(verify);
            verify = verify.P;
            verify = verify.string;
            options['details'] = verify;
            verify = new Array(2);
            verify[0] = options;
            options = oscar[yankee];
            options = offset.bind(mike)(options);
            options = options.P;
            options = options.any;
            verify[1] = options;
            options = function() {
                report = _closure1_slot0;
                oscar = _closure1_slot2;
                entity = 3;
                zulu = oscar[entity];
                mike = undefined;
                zulu = report.bind(mike)(zulu);
                tango = zulu.intl;
                zulu = tango.formatToPlainString;
                entity = oscar[entity];
                entity = report.bind(mike)(entity);
                entity = entity.t;
                mike = entity.b+lA5+;
                entity = {};
                report = _closure2_slot0;
                report = report.name;
                entity['name'] = report;
                entity = zulu.bind(tango)(mike, entity);
                return entity;
            };
            foxtrot = romeo.bind(foxtrot)(verify, options);
            romeo = foxtrot.with;
            options = {};
            verify = golf.LISTENING;
            options['type'] = verify;
            verify = new Array(2);
            verify[0] = options;
            options = oscar[yankee];
            options = offset.bind(mike)(options);
            options = options.P;
            options = options.any;
            verify[1] = options;
            options = function() {
                report = _closure1_slot0;
                oscar = _closure1_slot2;
                entity = 3;
                mike = oscar[entity];
                tango = undefined;
                mike = report.bind(tango)(mike);
                zulu = mike.intl;
                mike = zulu.string;
                entity = oscar[entity];
                entity = report.bind(tango)(entity);
                entity = entity.t;
                entity = entity.dBISa2;
                entity = mike.bind(zulu)(entity);
                return entity;
            };
            foxtrot = romeo.bind(foxtrot)(verify, options);
            romeo = foxtrot.with;
            options = {};
            verify = golf.WATCHING;
            options['type'] = verify;
            verify = oscar[yankee];
            verify = offset.bind(mike)(verify);
            verify = verify.P;
            verify = verify.string;
            options['details'] = verify;
            verify = new Array(2);
            verify[0] = options;
            options = oscar[yankee];
            options = offset.bind(mike)(options);
            options = options.P;
            options = options.any;
            verify[1] = options;
            options = function() {
                report = _closure1_slot0;
                oscar = _closure1_slot2;
                entity = 3;
                zulu = oscar[entity];
                mike = undefined;
                zulu = report.bind(mike)(zulu);
                tango = zulu.intl;
                zulu = tango.formatToPlainString;
                entity = oscar[entity];
                entity = report.bind(mike)(entity);
                entity = entity.t;
                mike = entity.mqdfDQ;
                entity = {};
                report = _closure2_slot0;
                report = report.name;
                entity['name'] = report;
                entity = zulu.bind(tango)(mike, entity);
                return entity;
            };
            foxtrot = romeo.bind(foxtrot)(verify, options);
            romeo = foxtrot.with;
            options = {};
            verify = golf.WATCHING;
            options['type'] = verify;
            verify = new Array(2);
            verify[0] = options;
            options = oscar[yankee];
            options = offset.bind(mike)(options);
            options = options.P;
            options = options.any;
            verify[1] = options;
            options = function() {
                report = _closure1_slot0;
                oscar = _closure1_slot2;
                entity = 3;
                mike = oscar[entity];
                tango = undefined;
                mike = report.bind(tango)(mike);
                zulu = mike.intl;
                mike = zulu.string;
                entity = oscar[entity];
                entity = report.bind(tango)(entity);
                entity = entity.t;
                entity = entity.GpNXjI;
                entity = mike.bind(zulu)(entity);
                return entity;
            };
            foxtrot = romeo.bind(foxtrot)(verify, options);
            romeo = foxtrot.with;
            options = {};
            verify = golf.COMPETING;
            options['type'] = verify;
            verify = oscar[yankee];
            verify = offset.bind(mike)(verify);
            verify = verify.P;
            verify = verify.string;
            options['details'] = verify;
            verify = new Array(2);
            verify[0] = options;
            options = oscar[yankee];
            options = offset.bind(mike)(options);
            options = options.P;
            options = options.any;
            verify[1] = options;
            options = function() {
                report = _closure1_slot0;
                oscar = _closure1_slot2;
                entity = 3;
                zulu = oscar[entity];
                mike = undefined;
                zulu = report.bind(mike)(zulu);
                tango = zulu.intl;
                zulu = tango.formatToPlainString;
                entity = oscar[entity];
                entity = report.bind(mike)(entity);
                entity = entity.t;
                mike = entity.oHF7Cg;
                entity = {};
                report = _closure2_slot0;
                report = report.name;
                entity['name'] = report;
                entity = zulu.bind(tango)(mike, entity);
                return entity;
            };
            verify = romeo.bind(foxtrot)(verify, options);
            options = verify.with;
            romeo = {};
            golf = golf.COMPETING;
            romeo['type'] = golf;
            golf = new Array(2);
            golf[0] = romeo;
            oscar = oscar[yankee];
            oscar = offset.bind(mike)(oscar);
            oscar = oscar.P;
            oscar = oscar.any;
            golf[1] = oscar;
            oscar = function() {
                report = _closure1_slot0;
                oscar = _closure1_slot2;
                entity = 3;
                mike = oscar[entity];
                tango = undefined;
                mike = report.bind(tango)(mike);
                zulu = mike.intl;
                mike = zulu.string;
                entity = oscar[entity];
                entity = report.bind(tango)(entity);
                entity = entity.t;
                entity = entity.OzCsIC;
                entity = mike.bind(zulu)(entity);
                return entity;
            };
            golf = options.bind(verify)(golf, oscar);
            oscar = golf.otherwise;
            report = function() {
                entity = undefined;
                return entity;
            };
            report = oscar.bind(golf)(report);
            entity['text'] = report;
            tango = tango == zulu;
            mike = undefined;
            if(tango) { _fun00002_ip = 931; continue _fun00001 }
 926:
            mike = zulu.icon;
 931:
            entity['platformIcon'] = mike;
            return entity;
        }
    };
    zulu['default'] = mike;
    return entity;
})();