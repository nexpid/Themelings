// app/modules/user_profile/utils/getActivityHeader.tsx
export default (function(argFoo, argBar, argBaz, _, __, argFre, argPlu) {
    report = argBar;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    entity = argBaz;
    var _closure1_slot1 = entity;
    var _closure1_slot2 = oscard;
    entity = global;
    option = entity.Object;
    golfie = option.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(option)(zuuluu, entity, tangon);
    entity = 0;
    tangon = oscard[entity];
    entity = undefined;
    tangon = report.bind(entity)(tangon);
    golfie = tangon.ActivityTypes;
    var _closure1_slot3 = golfie;
    tangon = tangon.PlatformTypes;
    var _closure1_slot4 = tangon;
    tangon = 4;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/user_profile/utils/getActivityHeader.tsx';
    tangon = report.bind(oscard)(tangon);
    michal = function(argFoo) { // Original name: getActivityHeader
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            tangon = argFoo;
            var _closure2_slot0 = tangon;
            zuuluu = _closure1_slot1;
            golfie = _closure1_slot2;
            entity = 1;
            entity = golfie[entity];
            michal = undefined;
            entity = zuuluu.bind(michal)(entity);
            zuuluu = entity.bind(michal)(tangon);
            entity = {};
            option = _closure1_slot0;
            yankee = 2;
            golfie = golfie[yankee];
            verify = option.bind(michal)(golfie);
            option = verify.match;
            golfie = new Array(2);
            golfie[0] = tangon;
            tangon = null;
            romeon = tangon == zuuluu;
            offset = undefined;
            if(romeon) { _fun00002_ip = 87; continue _fun00001 }
 82:
            offset = zuuluu.type;
 87:
            golfie[1] = offset;
            foxtra = option.bind(verify)(golfie);
            romeon = foxtra.with;
            option = {};
            golfie = _closure1_slot3;
            verify = golfie.PLAYING;
            option['type'] = verify;
            offset = new Array(2);
            offset[0] = option;
            option = _closure1_slot4;
            verify = option.XBOX;
            offset[1] = verify;
            verify = function() {
                verify = _closure1_slot0;
                offset = _closure1_slot2;
                report = 3;
                entity = offset[report];
                option = undefined;
                entity = verify.bind(option)(entity);
                tangon = entity.intl;
                zuuluu = tangon.formatToPlainString;
                entity = offset[report];
                entity = verify.bind(option)(entity);
                entity = entity.t;
                michal = entity.Sq9xJy;
                entity = {};
                oscard = offset[report];
                oscard = verify.bind(option)(oscard);
                golfie = oscard.intl;
                oscard = golfie.string;
                report = offset[report];
                report = verify.bind(option)(report);
                report = report.t;
                report = report.Nfvo7+;
                report = oscard.bind(golfie)(report);
                entity['game'] = report;
                entity = zuuluu.bind(tangon)(michal, entity);
                return entity;
            };
            foxtra = romeon.bind(foxtra)(offset, verify);
            romeon = foxtra.with;
            verify = {};
            offset = golfie.PLAYING;
            verify['type'] = offset;
            offset = new Array(2);
            offset[0] = verify;
            verify = option.PLAYSTATION;
            offset[1] = verify;
            verify = function() {
                verify = _closure1_slot0;
                offset = _closure1_slot2;
                report = 3;
                entity = offset[report];
                option = undefined;
                entity = verify.bind(option)(entity);
                tangon = entity.intl;
                zuuluu = tangon.formatToPlainString;
                entity = offset[report];
                entity = verify.bind(option)(entity);
                entity = entity.t;
                michal = entity.Sq9xJy;
                entity = {};
                oscard = offset[report];
                oscard = verify.bind(option)(oscard);
                golfie = oscard.intl;
                oscard = golfie.string;
                report = offset[report];
                report = verify.bind(option)(report);
                report = report.t;
                report = report.fFl4jo;
                report = oscard.bind(golfie)(report);
                entity['game'] = report;
                entity = zuuluu.bind(tangon)(michal, entity);
                return entity;
            };
            foxtra = romeon.bind(foxtra)(offset, verify);
            romeon = foxtra.with;
            verify = {};
            offset = golfie.STREAMING;
            verify['type'] = offset;
            offset = new Array(2);
            offset[0] = verify;
            verify = option.TWITCH;
            offset[1] = verify;
            verify = function() {
                verify = _closure1_slot0;
                offset = _closure1_slot2;
                report = 3;
                entity = offset[report];
                option = undefined;
                entity = verify.bind(option)(entity);
                tangon = entity.intl;
                zuuluu = tangon.formatToPlainString;
                entity = offset[report];
                entity = verify.bind(option)(entity);
                entity = entity.t;
                michal = entity.4CQq9f;
                entity = {};
                oscard = offset[report];
                oscard = verify.bind(option)(oscard);
                golfie = oscard.intl;
                oscard = golfie.string;
                report = offset[report];
                report = verify.bind(option)(report);
                report = report.t;
                report = report.q4pBGx;
                report = oscard.bind(golfie)(report);
                entity['name'] = report;
                entity = zuuluu.bind(tangon)(michal, entity);
                return entity;
            };
            romeon = romeon.bind(foxtra)(offset, verify);
            offset = romeon.with;
            foxtra = {};
            verify = golfie.STREAMING;
            foxtra['type'] = verify;
            verify = new Array(2);
            verify[0] = foxtra;
            option = option.YOUTUBE;
            verify[1] = option;
            option = function() {
                verify = _closure1_slot0;
                offset = _closure1_slot2;
                report = 3;
                entity = offset[report];
                option = undefined;
                entity = verify.bind(option)(entity);
                tangon = entity.intl;
                zuuluu = tangon.formatToPlainString;
                entity = offset[report];
                entity = verify.bind(option)(entity);
                entity = entity.t;
                michal = entity.4CQq9f;
                entity = {};
                oscard = offset[report];
                oscard = verify.bind(option)(oscard);
                golfie = oscard.intl;
                oscard = golfie.string;
                report = offset[report];
                report = verify.bind(option)(report);
                report = report.t;
                report = report.aS6cKy;
                report = oscard.bind(golfie)(report);
                entity['name'] = report;
                entity = zuuluu.bind(tangon)(michal, entity);
                return entity;
            };
            foxtra = offset.bind(romeon)(verify, option);
            romeon = foxtra.with;
            option = {};
            verify = golfie.PLAYING;
            option['type'] = verify;
            verify = new Array(2);
            verify[0] = option;
            offset = _closure1_slot0;
            oscard = _closure1_slot2;
            option = oscard[yankee];
            option = offset.bind(michal)(option);
            option = option.P;
            option = option.any;
            verify[1] = option;
            option = function() {
                report = _closure1_slot0;
                oscard = _closure1_slot2;
                entity = 3;
                michal = oscard[entity];
                tangon = undefined;
                michal = report.bind(tangon)(michal);
                zuuluu = michal.intl;
                michal = zuuluu.string;
                entity = oscard[entity];
                entity = report.bind(tangon)(entity);
                entity = entity.t;
                entity = entity.BMTj29;
                entity = michal.bind(zuuluu)(entity);
                return entity;
            };
            foxtra = romeon.bind(foxtra)(verify, option);
            romeon = foxtra.with;
            option = {};
            verify = golfie.STREAMING;
            option['type'] = verify;
            verify = new Array(2);
            verify[0] = option;
            option = oscard[yankee];
            option = offset.bind(michal)(option);
            option = option.P;
            option = option.any;
            verify[1] = option;
            option = function() {
                report = _closure1_slot0;
                oscard = _closure1_slot2;
                entity = 3;
                michal = oscard[entity];
                tangon = undefined;
                michal = report.bind(tangon)(michal);
                zuuluu = michal.intl;
                michal = zuuluu.string;
                entity = oscard[entity];
                entity = report.bind(tangon)(entity);
                entity = entity.t;
                entity = entity.Jpkr/v;
                entity = michal.bind(zuuluu)(entity);
                return entity;
            };
            foxtra = romeon.bind(foxtra)(verify, option);
            romeon = foxtra.with;
            option = {};
            verify = golfie.LISTENING;
            option['type'] = verify;
            verify = oscard[yankee];
            verify = offset.bind(michal)(verify);
            verify = verify.P;
            verify = verify.string;
            option['details'] = verify;
            verify = new Array(2);
            verify[0] = option;
            option = oscard[yankee];
            option = offset.bind(michal)(option);
            option = option.P;
            option = option.any;
            verify[1] = option;
            option = function() {
                report = _closure1_slot0;
                oscard = _closure1_slot2;
                entity = 3;
                zuuluu = oscard[entity];
                michal = undefined;
                zuuluu = report.bind(michal)(zuuluu);
                tangon = zuuluu.intl;
                zuuluu = tangon.formatToPlainString;
                entity = oscard[entity];
                entity = report.bind(michal)(entity);
                entity = entity.t;
                michal = entity.b+lA5+;
                entity = {};
                report = _closure2_slot0;
                report = report.name;
                entity['name'] = report;
                entity = zuuluu.bind(tangon)(michal, entity);
                return entity;
            };
            foxtra = romeon.bind(foxtra)(verify, option);
            romeon = foxtra.with;
            option = {};
            verify = golfie.LISTENING;
            option['type'] = verify;
            verify = new Array(2);
            verify[0] = option;
            option = oscard[yankee];
            option = offset.bind(michal)(option);
            option = option.P;
            option = option.any;
            verify[1] = option;
            option = function() {
                report = _closure1_slot0;
                oscard = _closure1_slot2;
                entity = 3;
                michal = oscard[entity];
                tangon = undefined;
                michal = report.bind(tangon)(michal);
                zuuluu = michal.intl;
                michal = zuuluu.string;
                entity = oscard[entity];
                entity = report.bind(tangon)(entity);
                entity = entity.t;
                entity = entity.dBISa2;
                entity = michal.bind(zuuluu)(entity);
                return entity;
            };
            foxtra = romeon.bind(foxtra)(verify, option);
            romeon = foxtra.with;
            option = {};
            verify = golfie.WATCHING;
            option['type'] = verify;
            verify = oscard[yankee];
            verify = offset.bind(michal)(verify);
            verify = verify.P;
            verify = verify.string;
            option['details'] = verify;
            verify = new Array(2);
            verify[0] = option;
            option = oscard[yankee];
            option = offset.bind(michal)(option);
            option = option.P;
            option = option.any;
            verify[1] = option;
            option = function() {
                report = _closure1_slot0;
                oscard = _closure1_slot2;
                entity = 3;
                zuuluu = oscard[entity];
                michal = undefined;
                zuuluu = report.bind(michal)(zuuluu);
                tangon = zuuluu.intl;
                zuuluu = tangon.formatToPlainString;
                entity = oscard[entity];
                entity = report.bind(michal)(entity);
                entity = entity.t;
                michal = entity.mqdfDQ;
                entity = {};
                report = _closure2_slot0;
                report = report.name;
                entity['name'] = report;
                entity = zuuluu.bind(tangon)(michal, entity);
                return entity;
            };
            foxtra = romeon.bind(foxtra)(verify, option);
            romeon = foxtra.with;
            option = {};
            verify = golfie.WATCHING;
            option['type'] = verify;
            verify = new Array(2);
            verify[0] = option;
            option = oscard[yankee];
            option = offset.bind(michal)(option);
            option = option.P;
            option = option.any;
            verify[1] = option;
            option = function() {
                report = _closure1_slot0;
                oscard = _closure1_slot2;
                entity = 3;
                michal = oscard[entity];
                tangon = undefined;
                michal = report.bind(tangon)(michal);
                zuuluu = michal.intl;
                michal = zuuluu.string;
                entity = oscard[entity];
                entity = report.bind(tangon)(entity);
                entity = entity.t;
                entity = entity.GpNXjI;
                entity = michal.bind(zuuluu)(entity);
                return entity;
            };
            foxtra = romeon.bind(foxtra)(verify, option);
            romeon = foxtra.with;
            option = {};
            verify = golfie.COMPETING;
            option['type'] = verify;
            verify = oscard[yankee];
            verify = offset.bind(michal)(verify);
            verify = verify.P;
            verify = verify.string;
            option['details'] = verify;
            verify = new Array(2);
            verify[0] = option;
            option = oscard[yankee];
            option = offset.bind(michal)(option);
            option = option.P;
            option = option.any;
            verify[1] = option;
            option = function() {
                report = _closure1_slot0;
                oscard = _closure1_slot2;
                entity = 3;
                zuuluu = oscard[entity];
                michal = undefined;
                zuuluu = report.bind(michal)(zuuluu);
                tangon = zuuluu.intl;
                zuuluu = tangon.formatToPlainString;
                entity = oscard[entity];
                entity = report.bind(michal)(entity);
                entity = entity.t;
                michal = entity.oHF7Cg;
                entity = {};
                report = _closure2_slot0;
                report = report.name;
                entity['name'] = report;
                entity = zuuluu.bind(tangon)(michal, entity);
                return entity;
            };
            verify = romeon.bind(foxtra)(verify, option);
            option = verify.with;
            romeon = {};
            golfie = golfie.COMPETING;
            romeon['type'] = golfie;
            golfie = new Array(2);
            golfie[0] = romeon;
            oscard = oscard[yankee];
            oscard = offset.bind(michal)(oscard);
            oscard = oscard.P;
            oscard = oscard.any;
            golfie[1] = oscard;
            oscard = function() {
                report = _closure1_slot0;
                oscard = _closure1_slot2;
                entity = 3;
                michal = oscard[entity];
                tangon = undefined;
                michal = report.bind(tangon)(michal);
                zuuluu = michal.intl;
                michal = zuuluu.string;
                entity = oscard[entity];
                entity = report.bind(tangon)(entity);
                entity = entity.t;
                entity = entity.OzCsIC;
                entity = michal.bind(zuuluu)(entity);
                return entity;
            };
            golfie = option.bind(verify)(golfie, oscard);
            oscard = golfie.otherwise;
            report = function() {
                entity = undefined;
                return entity;
            };
            report = oscard.bind(golfie)(report);
            entity['text'] = report;
            tangon = tangon == zuuluu;
            michal = undefined;
            if(tangon) { _fun00002_ip = 905; continue _fun00001 }
 900:
            michal = zuuluu.icon;
 905:
            entity['platformIcon'] = michal;
            return entity;
        }
    };
    zuuluu['default'] = michal;
    return entity;
})();