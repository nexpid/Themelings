// app/modules/user_profile/hooks/useActivityTimer.tsx
export default (function(argFoo, argBar, argBaz, _, __, argFre, argPlu) {
    report = argBar;
    golfie = argBaz;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    var _closure1_slot1 = golfie;
    var _closure1_slot2 = oscard;
    entity = global;
    verify = entity.Object;
    option = verify.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = option.bind(verify)(zuuluu, entity, tangon);
    entity = 0;
    tangon = oscard[entity];
    entity = undefined;
    tangon = golfie.bind(entity)(tangon);
    var _closure1_slot3 = tangon;
    tangon = 1;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    golfie = tangon.useEffect;
    var _closure1_slot4 = golfie;
    tangon = tangon.useState;
    var _closure1_slot5 = tangon;
    tangon = function(argFoo) { // Original name: pad
        entity = global;
        zuuluu = entity.String;
        michal = undefined;
        entity = argFoo;
        tangon = zuuluu.bind(michal)(entity);
        zuuluu = tangon.padStart;
        michal = 2;
        entity = '0';
        entity = zuuluu.bind(tangon)(michal, entity);
        return entity;
    };
    var _closure1_slot6 = tangon;
    tangon = 4;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/user_profile/hooks/useActivityTimer.tsx';
    tangon = report.bind(oscard)(tangon);
    tangon = function(argFoo) { // Original name: useActivityTimer
        entity = argFoo;
        backup = entity.start;
        zuuluu = entity.end;
        golfie = _closure1_slot5;
        report = _closure1_slot0;
        foxtra = _closure1_slot2;
        entity = 3;
        entity = foxtra[entity];
        romeon = undefined;
        entity = report.bind(romeon)(entity);
        entity = entity.Interval;
        report = entity.prototype;
        report = Object.create(report, {constructor: {value: entity}});
        output = report;
        entity = new output[entity](sizing);
        entity = entity instanceof Object ? entity : report;
        entity = golfie.bind(romeon)(entity);
        verify = _closure1_slot3;
        option = 1;
        entity = verify.bind(romeon)(entity, option);
        report = 0;
        yankee = entity[report];
        var _closure2_slot0 = yankee;
        oscard = global;
        offset = oscard.Date;
        entity = offset.now;
        entity = entity.bind(offset)();
        golfie = golfie.bind(romeon)(entity);
        entity = 2;
        golfie = verify.bind(romeon)(golfie, entity);
        offset = golfie[report];
        golfie = golfie[option];
        var _closure2_slot1 = golfie;
        verify = _closure1_slot4;
        golfie = new Array(1);
        golfie[0] = yankee;
        tangon = function() {
            report = _closure2_slot0;
            tangon = report.start;
            oscard = _closure1_slot1;
            zuuluu = _closure1_slot2;
            michal = 2;
            zuuluu = zuuluu[michal];
            michal = undefined;
            michal = oscard.bind(michal)(zuuluu);
            michal = michal.Millis;
            zuuluu = michal.HALF_SECOND;
            michal = function() {
                zuuluu = _closure2_slot1;
                entity = global;
                michal = entity.Date;
                entity = michal.now;
                michal = entity.bind(michal)();
                entity = undefined;
                entity = zuuluu.bind(entity)(michal);
                return entity;
            };
            michal = tangon.bind(report)(zuuluu, michal);
            entity = function() {
                michal = _closure2_slot0;
                entity = michal.stop;
                entity = entity.bind(michal)();
                return entity;
            };
            return entity;
        };
        tangon = verify.bind(romeon)(tangon, golfie);
        zuuluu = zuuluu - backup;
        yankee = _closure1_slot1;
        michal = foxtra[entity];
        michal = yankee.bind(romeon)(michal);
        michal = michal.Millis;
        michal = michal.SECOND;
        verify = zuuluu / michal;
        zuuluu = oscard.Math;
        michal = zuuluu.max;
        golfie = oscard.Math;
        tangon = golfie.min;
        offset = offset - backup;
        entity = foxtra[entity];
        entity = yankee.bind(romeon)(entity);
        entity = entity.Millis;
        entity = entity.SECOND;
        entity = offset / entity;
        entity = tangon.bind(golfie)(entity, verify);
        michal = michal.bind(zuuluu)(entity, report);
        entity = {};
        entity['elapsed'] = michal;
        entity['duration'] = verify;
        tangon = oscard.Math;
        zuuluu = tangon.max;
        golfie = oscard.Math;
        oscard = golfie.min;
        michal = michal / verify;
        michal = oscard.bind(golfie)(michal, option);
        michal = zuuluu.bind(tangon)(michal, report);
        entity['percentage'] = michal;
        return entity;
    };
    zuuluu['default'] = tangon;
    michal = function(argFoo) {
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            verify = argFoo;
            michal = global;
            zuuluu = michal.Math;
            entity = zuuluu.floor;
            oscard = entity.bind(zuuluu)(verify);
            offset = _closure1_slot1;
            yankee = _closure1_slot2;
            entity = 2;
            tangon = yankee[entity];
            report = undefined;
            tangon = offset.bind(report)(tangon);
            tangon = tangon.Seconds;
            tangon = tangon.MINUTE;
            tangon = oscard % tangon;
            option = michal.Math;
            golfie = option.floor;
            oscard = yankee[entity];
            oscard = offset.bind(report)(oscard);
            oscard = oscard.Seconds;
            oscard = oscard.MINUTE;
            oscard = verify / oscard;
            golfie = golfie.bind(option)(oscard);
            oscard = yankee[entity];
            oscard = offset.bind(report)(oscard);
            oscard = oscard.Seconds;
            oscard = oscard.MINUTE;
            oscard = golfie % oscard;
            option = michal.Math;
            golfie = option.floor;
            entity = yankee[entity];
            entity = offset.bind(report)(entity);
            entity = entity.Seconds;
            entity = entity.HOUR;
            entity = verify / entity;
            golfie = golfie.bind(option)(entity);
            entity = 0;
            if(!(entity !== golfie)) { _fun00002_ip = 231; continue _fun00001 }
 178:
            entity = _closure1_slot6;
            yankee = entity.bind(report)(golfie);
            backup = entity.bind(report)(oscard);
            romeon = entity.bind(report)(tangon);
            entity = michal.HermesInternal;
            option = entity.concat;
            output = '';
            entity = ':';
            sizing = yankee;
            kiloes = entity;
            foxtra = entity;
            entity = output[option](sizing, kiloes, backup, foxtra, romeon, yankee);
            _fun00002_ip = 271; continue _fun00001;
 231:
            zuuluu = _closure1_slot6;
            oscard = zuuluu.bind(report)(oscard);
            report = zuuluu.bind(report)(tangon);
            michal = michal.HermesInternal;
            tangon = michal.concat;
            zuuluu = '';
            michal = ':';
            entity = tangon.bind(zuuluu)(oscard, michal, report);
 271:
            return entity;
        }
    };
    zuuluu['formatTime'] = michal;
    return entity;
})();