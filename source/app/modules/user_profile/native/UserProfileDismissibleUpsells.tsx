// app/modules/user_profile/native/UserProfileDismissibleUpsells.tsx
export default (function(argFoo, argBar, argBaz, argCorge, _, argFred, argPlugh) {
    report = argBar;
    yankee = argBaz;
    zulu = argFred;
    oscar = argPlugh;
    var _closure1_slot0 = report;
    var _closure1_slot1 = yankee;
    var _closure1_slot2 = oscar;
    entity = global;
    options = entity.Object;
    golf = options.defineProperty;
    tango = {};
    entity = true;
    tango['value'] = entity;
    entity = '__esModule';
    entity = golf.bind(options)(zulu, entity, tango);
    options = 0;
    golf = oscar[options];
    tango = argCorge;
    entity = undefined;
    tango = tango.bind(entity)(golf);
    var _closure1_slot3 = tango;
    romeo = 1;
    tango = oscar[romeo];
    tango = report.bind(entity)(tango);
    tango = tango.View;
    var _closure1_slot4 = tango;
    tango = 2;
    tango = oscar[tango];
    tango = yankee.bind(entity)(tango);
    var _closure1_slot5 = tango;
    tango = 3;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.TrackUserProfileActions;
    var _closure1_slot6 = tango;
    tango = 4;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.Gradients;
    golf = 5;
    golf = oscar[golf];
    golf = report.bind(entity)(golf);
    golf = golf.ContentDismissActionType;
    var _closure1_slot7 = golf;
    golf = 6;
    verify = oscar[golf];
    verify = report.bind(entity)(verify);
    verify = verify.jsx;
    var _closure1_slot8 = verify;
    golf = oscar[golf];
    golf = report.bind(entity)(golf);
    golf = golf.jsxs;
    var _closure1_slot9 = golf;
    kilo = tango.PREMIUM_GUILD;
    golf = new Array(0);
    sizing = golf;
    backup = 0;
    tango = arraySpread(sizing, kilo, backup);
    tango = golf.reverse;
    tango = tango.bind(golf)();
    var _closure1_slot10 = tango;
    tango = 7;
    tango = oscar[tango];
    options = report.bind(entity)(tango);
    golf = options.createStyles;
    tango = {};
    verify = {'width': '100%', 'height': '100%', 'position': 'absolute', 'overflow': 'hidden'};
    tango['linearGradient'] = verify;
    verify = {'paddingVertical': 16, 'paddingHorizontal': 12};
    offset = 8;
    foxtrot = oscar[offset];
    foxtrot = yankee.bind(entity)(foxtrot);
    foxtrot = foxtrot.radii;
    foxtrot = foxtrot.lg;
    verify['borderRadius'] = foxtrot;
    foxtrot = oscar[offset];
    foxtrot = yankee.bind(entity)(foxtrot);
    foxtrot = foxtrot.colors;
    foxtrot = foxtrot.BACKGROUND_FLOATING;
    verify['backgroundColor'] = foxtrot;
    tango['upsellContainer'] = verify;
    verify = {};
    foxtrot = oscar[offset];
    foxtrot = yankee.bind(entity)(foxtrot);
    foxtrot = foxtrot.colors;
    foxtrot = foxtrot.PROFILE_GRADIENT_OVERLAY_SYNCED_WITH_USER_THEME;
    verify['backgroundColor'] = foxtrot;
    tango['customProfileThemeUpsellContainer'] = verify;
    verify = {'display': 'flex', 'flexDirection': 'row', 'justifyContent': 'space-between', 'alignItems': 'center'};
    tango['header'] = verify;
    verify = {'display': 'flex', 'flexDirection': 'row', 'justifyContent': 'space-between', 'flexWrap': 'wrap', 'gap': 10, 'marginTop': 12};
    tango['upsellButtonsContainer'] = verify;
    verify = {};
    verify['flex'] = romeo;
    tango['upsellButton'] = verify;
    verify = {};
    foxtrot = oscar[offset];
    foxtrot = yankee.bind(entity)(foxtrot);
    foxtrot = foxtrot.radii;
    foxtrot = foxtrot.round;
    verify['borderRadius'] = foxtrot;
    tango['premiumButton'] = verify;
    verify = {};
    foxtrot = oscar[offset];
    foxtrot = yankee.bind(entity)(foxtrot);
    foxtrot = foxtrot.spacing;
    foxtrot = foxtrot.PX_4;
    verify['marginRight'] = foxtrot;
    tango['premiumIcon'] = verify;
    verify = {};
    foxtrot = oscar[offset];
    foxtrot = yankee.bind(entity)(foxtrot);
    foxtrot = foxtrot.colors;
    foxtrot = foxtrot.REDESIGN_BUTTON_SECONDARY_BACKGROUND;
    verify['backgroundColor'] = foxtrot;
    verify['borderWidth'] = romeo;
    romeo = oscar[offset];
    romeo = yankee.bind(entity)(romeo);
    romeo = romeo.colors;
    romeo = romeo.REDESIGN_BUTTON_SECONDARY_BORDER;
    verify['borderColor'] = romeo;
    romeo = oscar[offset];
    romeo = yankee.bind(entity)(romeo);
    romeo = romeo.shadows;
    kilo = romeo.SHADOW_LOW;
    sizing = verify;
    romeo = copyDataProperties(sizing, kilo);
    tango['customProfileThemePremiumButton'] = verify;
    verify = {};
    offset = oscar[offset];
    offset = yankee.bind(entity)(offset);
    offset = offset.colors;
    offset = offset.REDESIGN_BUTTON_SECONDARY_PRESSED_BACKGROUND;
    verify['backgroundColor'] = offset;
    tango['customProfileThemePremiumButtonPressed'] = verify;
    tango = golf.bind(options)(tango);
    var _closure1_slot11 = tango;
    tango = 22;
    tango = oscar[tango];
    oscar = report.bind(entity)(tango);
    report = oscar.fileFinishedImporting;
    tango = 'modules/user_profile/native/UserProfileDismissibleUpsells.tsx';
    tango = report.bind(oscar)(tango);
    mike = function(argFoo) { // Original name: UserProfileDismissibleUpsells
        entity = argFoo;
        zulu = entity.navigateToShop;
        var _closure2_slot0 = zulu;
        offset = entity.navigateToPremium;
        var _closure2_slot1 = offset;
        entity = entity.hasCustomProfileTheme;
        var _closure2_slot2 = entity;
        mike = _closure1_slot11;
        tango = undefined;
        mike = mike.bind(tango)();
        var _closure2_slot3 = mike;
        golf = _closure1_slot0;
        options = _closure1_slot2;
        mike = 9;
        mike = options[mike];
        oscar = golf.bind(tango)(mike);
        mike = oscar.useUserProfileAnalyticsContext;
        mike = mike.bind(oscar)();
        mike = mike.trackUserProfileAction;
        var _closure2_slot4 = mike;
        oscar = 10;
        oscar = options[oscar];
        romeo = golf.bind(tango)(oscar);
        yankee = romeo.useStateFromStores;
        oscar = _closure1_slot5;
        verify = new Array(1);
        verify[0] = oscar;
        oscar = function() {
            mike = _closure1_slot5;
            entity = mike.getCurrentUser;
            entity = entity.bind(mike)();
            return entity;
        };
        yankee = yankee.bind(romeo)(verify, oscar);
        oscar = 11;
        oscar = options[oscar];
        verify = golf.bind(tango)(oscar);
        oscar = verify.isPremium;
        oscar = oscar.bind(verify)(yankee);
        var _closure2_slot5 = oscar;
        verify = _closure1_slot3;
        yankee = verify.useCallback;
        oscar = new Array(2);
        oscar[0] = zulu;
        oscar[1] = mike;
        zulu = function() {
            tango = _closure2_slot4;
            zulu = {};
            entity = _closure1_slot6;
            entity = entity.VISIT_SHOP;
            zulu['action'] = entity;
            entity = undefined;
            zulu = tango.bind(entity)(zulu);
            mike = _closure2_slot0;
            mike = mike.bind(entity)();
            return entity;
        };
        zulu = yankee.bind(verify)(zulu, oscar);
        var _closure2_slot6 = zulu;
        yankee = verify.useCallback;
        oscar = new Array(2);
        oscar[0] = offset;
        oscar[1] = mike;
        zulu = function() {
            tango = _closure2_slot4;
            zulu = {};
            entity = _closure1_slot6;
            entity = entity.GET_PREMIUM;
            zulu['action'] = entity;
            entity = undefined;
            zulu = tango.bind(entity)(zulu);
            mike = _closure2_slot1;
            mike = mike.bind(entity)();
            return entity;
        };
        zulu = yankee.bind(verify)(zulu, oscar);
        var _closure2_slot7 = zulu;
        oscar = verify.useCallback;
        zulu = new Array(2);
        zulu[0] = offset;
        zulu[1] = mike;
        mike = function() {
            tango = _closure2_slot4;
            zulu = {};
            entity = _closure1_slot6;
            entity = entity.VIEW_PREMIUM_PERKS;
            zulu['action'] = entity;
            entity = undefined;
            zulu = tango.bind(entity)(zulu);
            mike = _closure2_slot1;
            mike = mike.bind(entity)();
            return entity;
        };
        mike = oscar.bind(verify)(mike, zulu);
        var _closure2_slot8 = mike;
        zulu = _closure1_slot8;
        mike = _closure1_slot1;
        entity = 12;
        entity = options[entity];
        mike = mike.bind(tango)(entity);
        entity = {};
        oscar = 13;
        oscar = options[oscar];
        oscar = golf.bind(tango)(oscar);
        oscar = oscar.DismissibleContent;
        golf = oscar.USER_PROFILE_PREMIUM_AND_SHOP_ENTRY_POINTS;
        oscar = new Array(1);
        oscar[0] = golf;
        entity['contentTypes'] = oscar;
        report = function(argFoo) { // Original name: children
            _fun102672: for(var _fun102672_ip = 0; ; ) switch(_fun102672_ip) {
 0:
                entity = argFoo;
                zulu = entity.visibleContent;
                entity = entity.markAsDismissed;
                var _closure3_slot0 = entity;
                mike = _closure1_slot0;
                tango = _closure1_slot2;
                entity = 13;
                entity = tango[entity];
                report = undefined;
                entity = mike.bind(report)(entity);
                entity = entity.DismissibleContent;
                mike = entity.USER_PROFILE_PREMIUM_AND_SHOP_ENTRY_POINTS;
                entity = null;
                if(!(zulu === mike)) { _fun102672_ip = 880; continue _fun102672 }
 67:
                tango = _closure1_slot8;
                golf = _closure1_slot1;
                options = _closure1_slot2;
                oscar = 14;
                mike = options[oscar];
                zulu = golf.bind(report)(mike);
                mike = {};
                verify = 2;
                mike['borderWidth'] = verify;
                oscar = options[oscar];
                oscar = golf.bind(report)(oscar);
                oscar = oscar.Direction;
                oscar = oscar.VERTICAL;
                mike['direction'] = oscar;
                oscar = _closure1_slot10;
                mike['colors'] = oscar;
                oscar = 8;
                oscar = options[oscar];
                oscar = golf.bind(report)(oscar);
                oscar = oscar.radii;
                oscar = oscar.lg;
                mike['borderRadius'] = oscar;
                options = _closure1_slot9;
                golf = _closure1_slot4;
                oscar = {};
                verify = {};
                offset = _closure2_slot3;
                papa = offset.upsellContainer;
                target = verify;
                offset = copyDataProperties(target, papa);
                offset = _closure2_slot2;
                if(offset) { _fun102672_ip = 205; continue _fun102672 }
 201:
                offset = {};
                _fun102672_ip = 215; continue _fun102672;
 205:
                yankee = _closure2_slot3;
                offset = yankee.customProfileThemeUpsellContainer;
 215:
                target = verify;
                papa = offset;
                offset = copyDataProperties(target, papa);
                oscar['style'] = verify;
                romeo = _closure1_slot9;
                yankee = _closure1_slot4;
                verify = {};
                output = _closure2_slot3;
                offset = output.header;
                verify['style'] = offset;
                kilo = _closure1_slot8;
                result = _closure1_slot0;
                sizing = _closure1_slot2;
                offset = 15;
                offset = sizing[offset];
                offset = result.bind(report)(offset);
                foxtrot = offset.Text;
                offset = {};
                echo = 'text-sm/semibold';
                offset['variant'] = echo;
                config = 16;
                echo = sizing[config];
                echo = result.bind(report)(echo);
                vacuum = echo.intl;
                control = vacuum.string;
                echo = sizing[config];
                echo = result.bind(report)(echo);
                echo = echo.t;
                echo = echo.EIYbj4;
                echo = control.bind(vacuum)(echo);
                offset['children'] = echo;
                foxtrot = kilo.bind(report)(foxtrot, offset);
                offset = new Array(2);
                offset[0] = foxtrot;
                foxtrot = 17;
                foxtrot = sizing[foxtrot];
                foxtrot = result.bind(report)(foxtrot);
                echo = foxtrot.PressableOpacity;
                foxtrot = {};
                update = function() { // Original name: onPress
                    zulu = _closure3_slot0;
                    entity = _closure1_slot7;
                    mike = entity.USER_DISMISS;
                    entity = undefined;
                    entity = zulu.bind(entity)(mike);
                    return entity;
                };
                foxtrot['onPress'] = update;
                update = 18;
                update = sizing[update];
                update = result.bind(report)(update);
                control = update.XSmallIcon;
                update = {};
                vacuum = 'sm';
                update['size'] = vacuum;
                update = kilo.bind(report)(control, update);
                foxtrot['children'] = update;
                foxtrot = kilo.bind(report)(echo, foxtrot);
                offset[1] = foxtrot;
                verify['children'] = offset;
                offset = romeo.bind(report)(yankee, verify);
                verify = new Array(2);
                verify[0] = offset;
                offset = {};
                foxtrot = output.upsellButtonsContainer;
                offset['style'] = foxtrot;
                foxtrot = {};
                output = output.upsellButton;
                foxtrot['style'] = output;
                output = 19;
                sizing = sizing[output];
                sizing = result.bind(report)(sizing);
                record = sizing.Button;
                result = {'text': null, 'onPress': null, 'icon': null, 'iconPosition': 'start', 'variant': 'secondary', 'shiny': true};
                sizing = _closure2_slot5;
                sequence = _closure1_slot0;
                echo = _closure1_slot2;
                update = echo[config];
                update = sequence.bind(report)(update);
                control = update.intl;
                update = control.string;
                echo = echo[config];
                echo = sequence.bind(report)(echo);
                echo = echo.t;
                if(sizing) { _fun102672_ip = 570; continue _fun102672 }
 557:
                sizing = echo.x6rkDg;
                sizing = update.bind(control)(sizing);
                _fun102672_ip = 581; continue _fun102672;
 570:
                echo = echo.0Q61kJ;
                sizing = update.bind(control)(echo);
 581:
                result['text'] = sizing;
                sizing = _closure2_slot5;
                if(sizing) { _fun102672_ip = 600; continue _fun102672 }
 594:
                sizing = _closure2_slot7;
                _fun102672_ip = 604; continue _fun102672;
 600:
                sizing = _closure2_slot8;
 604:
                result['onPress'] = sizing;
                sizing = _closure1_slot8;
                control = _closure1_slot0;
                sequence = _closure1_slot2;
                echo = 20;
                echo = sequence[echo];
                echo = control.bind(report)(echo);
                update = echo.NitroWheelIcon;
                echo = {};
                echo['size'] = vacuum;
                echo = sizing.bind(report)(update, echo);
                result['icon'] = echo;
                update = 'start';
                echo = 'secondary';
                result = kilo.bind(report)(record, result);
                foxtrot['children'] = result;
                kilo = kilo.bind(report)(yankee, foxtrot);
                foxtrot = new Array(2);
                foxtrot[0] = kilo;
                kilo = _closure1_slot4;
                backup = {};
                result = _closure2_slot3;
                result = result.upsellButton;
                backup['style'] = result;
                output = sequence[output];
                output = control.bind(report)(output);
                result = output.Button;
                output = {};
                record = sequence[config];
                record = control.bind(report)(record);
                context = record.intl;
                record = context.string;
                config = sequence[config];
                config = control.bind(report)(config);
                config = config.t;
                config = config.pWG4zc;
                config = record.bind(context)(config);
                output['text'] = config;
                source = _closure2_slot6;
                output['onPress'] = source;
                source = 21;
                source = sequence[source];
                source = control.bind(report)(source);
                control = source.ShopIcon;
                source = {};
                source['size'] = vacuum;
                source = sizing.bind(report)(control, source);
                output['icon'] = source;
                output['iconPosition'] = update;
                output['variant'] = echo;
                output = sizing.bind(report)(result, output);
                backup['children'] = output;
                backup = sizing.bind(report)(kilo, backup);
                foxtrot[1] = backup;
                offset['children'] = foxtrot;
                offset = romeo.bind(report)(yankee, offset);
                verify[1] = offset;
                oscar['children'] = verify;
                oscar = options.bind(report)(golf, oscar);
                mike['children'] = oscar;
                entity = tango.bind(report)(zulu, mike);
 880:
                return entity;
            }
        };
        entity['children'] = report;
        entity = zulu.bind(tango)(mike, entity);
        return entity;
    };
    zulu['default'] = mike;
    return entity;
})();