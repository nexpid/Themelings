// app/modules/user_profile/native/UserProfileActivityTimebar.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    report = argBar;
    foxtra = argBaz;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    var _closure1_slot1 = foxtra;
    var _closure1_slot2 = oscard;
    entity = global;
    option = entity.Object;
    golfie = option.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(option)(zuuluu, entity, tangon);
    entity = 0;
    golfie = oscard[entity];
    tangon = argCor;
    entity = undefined;
    tangon = tangon.bind(entity)(golfie);
    tangon = 1;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.View;
    var _closure1_slot3 = tangon;
    tangon = 2;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    offset = tangon.Fonts;
    tangon = 3;
    golfie = oscard[tangon];
    golfie = report.bind(entity)(golfie);
    golfie = golfie.jsx;
    var _closure1_slot4 = golfie;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.jsxs;
    var _closure1_slot5 = tangon;
    yankee = 4;
    tangon = oscard[yankee];
    option = report.bind(entity)(tangon);
    golfie = option.createStyles;
    tangon = {};
    verify = {};
    romeon = 5;
    backup = oscard[romeon];
    backup = foxtra.bind(entity)(backup);
    backup = backup.colors;
    backup = backup.INTERACTIVE_MUTED;
    verify['backgroundColor'] = backup;
    backup = oscard[romeon];
    backup = foxtra.bind(entity)(backup);
    backup = backup.radii;
    backup = backup.xs;
    verify['borderRadius'] = backup;
    verify['height'] = yankee;
    verify['marginBottom'] = yankee;
    tangon['bar'] = verify;
    verify = {};
    backup = oscard[romeon];
    backup = foxtra.bind(entity)(backup);
    backup = backup.colors;
    backup = backup.INTERACTIVE_ACTIVE;
    verify['backgroundColor'] = backup;
    romeon = oscard[romeon];
    romeon = foxtra.bind(entity)(romeon);
    romeon = romeon.radii;
    romeon = romeon.xs;
    verify['borderRadius'] = romeon;
    romeon = '100%';
    verify['height'] = romeon;
    verify['minWidth'] = yankee;
    tangon['progress'] = verify;
    verify = {};
    offset = offset.CODE_NORMAL;
    verify['fontFamily'] = offset;
    tangon['text'] = verify;
    verify = {'flexDirection': 'row', 'justifyContent': 'space-between'};
    tangon['textRow'] = verify;
    tangon = golfie.bind(option)(tangon);
    var _closure1_slot6 = tangon;
    tangon = 8;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/user_profile/native/UserProfileActivityTimebar.tsx';
    tangon = report.bind(oscard)(tangon);
    michal = function(argFoo) { // Original name: UserProfileActivityTimebar
        entity = argFoo;
        oscard = entity.start;
        zuuluu = entity.end;
        report = entity.style;
        entity = _closure1_slot6;
        tangon = undefined;
        kiloes = entity.bind(tangon)();
        michal = _closure1_slot1;
        backup = _closure1_slot2;
        yankee = 6;
        entity = backup[yankee];
        michal = michal.bind(tangon)(entity);
        entity = {};
        entity['start'] = oscard;
        entity['end'] = zuuluu;
        entity = michal.bind(tangon)(entity);
        echoed = entity.elapsed;
        foxtra = entity.duration;
        sizing = entity.percentage;
        zuuluu = _closure1_slot5;
        michal = _closure1_slot3;
        entity = {};
        entity['style'] = report;
        offset = _closure1_slot4;
        report = {};
        oscard = kiloes.bar;
        report['style'] = oscard;
        oscard = {};
        verify = kiloes.progress;
        option = new Array(2);
        option[0] = verify;
        verify = {};
        romeon = 100;
        sizing = romeon * sizing;
        romeon = '%';
        romeon = sizing + romeon;
        verify['width'] = romeon;
        option[1] = verify;
        oscard['style'] = option;
        oscard = offset.bind(tangon)(michal, oscard);
        report['children'] = oscard;
        oscard = offset.bind(tangon)(michal, report);
        report = new Array(2);
        report[0] = oscard;
        oscard = {};
        option = kiloes.textRow;
        oscard['style'] = option;
        romeon = _closure1_slot0;
        option = 7;
        golfie = backup[option];
        golfie = romeon.bind(tangon)(golfie);
        verify = golfie.Text;
        golfie = {};
        sizing = 'text-xs/normal';
        golfie['variant'] = sizing;
        output = kiloes.text;
        golfie['style'] = output;
        output = backup[yankee];
        result = romeon.bind(tangon)(output);
        output = result.formatTime;
        output = output.bind(result)(echoed);
        golfie['children'] = output;
        verify = offset.bind(tangon)(verify, golfie);
        golfie = new Array(2);
        golfie[0] = verify;
        option = backup[option];
        option = romeon.bind(tangon)(option);
        verify = option.Text;
        option = {};
        option['variant'] = sizing;
        kiloes = kiloes.text;
        option['style'] = kiloes;
        yankee = backup[yankee];
        romeon = romeon.bind(tangon)(yankee);
        yankee = romeon.formatTime;
        yankee = yankee.bind(romeon)(foxtra);
        option['children'] = yankee;
        option = offset.bind(tangon)(verify, option);
        golfie[1] = option;
        oscard['children'] = golfie;
        oscard = zuuluu.bind(tangon)(michal, oscard);
        report[1] = oscard;
        entity['children'] = report;
        entity = zuuluu.bind(tangon)(michal, entity);
        return entity;
    };
    zuuluu['default'] = michal;
    return entity;
})();