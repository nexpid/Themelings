// app/modules/user_profile/native/UserProfileActivityTimebar.tsx
export default (function(argFoo, argBar, argBaz, argCorge, _, argFred, argPlugh) {
    report = argBar;
    foxtrot = argBaz;
    zulu = argFred;
    oscar = argPlugh;
    var _closure1_slot0 = report;
    var _closure1_slot1 = foxtrot;
    var _closure1_slot2 = oscar;
    entity = global;
    options = entity.Object;
    golf = options.defineProperty;
    tango = {};
    entity = true;
    tango['value'] = entity;
    entity = '__esModule';
    entity = golf.bind(options)(zulu, entity, tango);
    entity = 0;
    golf = oscar[entity];
    tango = argCorge;
    entity = undefined;
    tango = tango.bind(entity)(golf);
    tango = 1;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.View;
    var _closure1_slot3 = tango;
    tango = 2;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    offset = tango.Fonts;
    tango = 3;
    golf = oscar[tango];
    golf = report.bind(entity)(golf);
    golf = golf.jsx;
    var _closure1_slot4 = golf;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.jsxs;
    var _closure1_slot5 = tango;
    yankee = 4;
    tango = oscar[yankee];
    options = report.bind(entity)(tango);
    golf = options.createStyles;
    tango = {};
    verify = {};
    romeo = 5;
    backup = oscar[romeo];
    backup = foxtrot.bind(entity)(backup);
    backup = backup.colors;
    backup = backup.INTERACTIVE_MUTED;
    verify['backgroundColor'] = backup;
    backup = oscar[romeo];
    backup = foxtrot.bind(entity)(backup);
    backup = backup.radii;
    backup = backup.xs;
    verify['borderRadius'] = backup;
    verify['height'] = yankee;
    verify['marginBottom'] = yankee;
    tango['bar'] = verify;
    verify = {};
    backup = oscar[romeo];
    backup = foxtrot.bind(entity)(backup);
    backup = backup.colors;
    backup = backup.INTERACTIVE_ACTIVE;
    verify['backgroundColor'] = backup;
    romeo = oscar[romeo];
    romeo = foxtrot.bind(entity)(romeo);
    romeo = romeo.radii;
    romeo = romeo.xs;
    verify['borderRadius'] = romeo;
    romeo = '100%';
    verify['height'] = romeo;
    verify['minWidth'] = yankee;
    tango['progress'] = verify;
    verify = {};
    offset = offset.CODE_NORMAL;
    verify['fontFamily'] = offset;
    tango['text'] = verify;
    verify = {'flexDirection': 'row', 'justifyContent': 'space-between'};
    tango['textRow'] = verify;
    tango = golf.bind(options)(tango);
    var _closure1_slot6 = tango;
    tango = 8;
    tango = oscar[tango];
    oscar = report.bind(entity)(tango);
    report = oscar.fileFinishedImporting;
    tango = 'modules/user_profile/native/UserProfileActivityTimebar.tsx';
    tango = report.bind(oscar)(tango);
    mike = function(argFoo) { // Original name: UserProfileActivityTimebar
        entity = argFoo;
        oscar = entity.start;
        zulu = entity.end;
        report = entity.style;
        entity = _closure1_slot6;
        tango = undefined;
        kilo = entity.bind(tango)();
        mike = _closure1_slot1;
        backup = _closure1_slot2;
        yankee = 6;
        entity = backup[yankee];
        mike = mike.bind(tango)(entity);
        entity = {};
        entity['start'] = oscar;
        entity['end'] = zulu;
        entity = mike.bind(tango)(entity);
        echo = entity.elapsed;
        foxtrot = entity.duration;
        sizing = entity.percentage;
        zulu = _closure1_slot5;
        mike = _closure1_slot3;
        entity = {};
        entity['style'] = report;
        offset = _closure1_slot4;
        report = {};
        oscar = kilo.bar;
        report['style'] = oscar;
        oscar = {};
        verify = kilo.progress;
        options = new Array(2);
        options[0] = verify;
        verify = {};
        romeo = 100;
        sizing = romeo * sizing;
        romeo = '%';
        romeo = sizing + romeo;
        verify['width'] = romeo;
        options[1] = verify;
        oscar['style'] = options;
        oscar = offset.bind(tango)(mike, oscar);
        report['children'] = oscar;
        oscar = offset.bind(tango)(mike, report);
        report = new Array(2);
        report[0] = oscar;
        oscar = {};
        options = kilo.textRow;
        oscar['style'] = options;
        romeo = _closure1_slot0;
        options = 7;
        golf = backup[options];
        golf = romeo.bind(tango)(golf);
        verify = golf.Text;
        golf = {};
        sizing = 'text-xs/normal';
        golf['variant'] = sizing;
        output = kilo.text;
        golf['style'] = output;
        output = backup[yankee];
        result = romeo.bind(tango)(output);
        output = result.formatTime;
        output = output.bind(result)(echo);
        golf['children'] = output;
        verify = offset.bind(tango)(verify, golf);
        golf = new Array(2);
        golf[0] = verify;
        options = backup[options];
        options = romeo.bind(tango)(options);
        verify = options.Text;
        options = {};
        options['variant'] = sizing;
        kilo = kilo.text;
        options['style'] = kilo;
        yankee = backup[yankee];
        romeo = romeo.bind(tango)(yankee);
        yankee = romeo.formatTime;
        yankee = yankee.bind(romeo)(foxtrot);
        options['children'] = yankee;
        options = offset.bind(tango)(verify, options);
        golf[1] = options;
        oscar['children'] = golf;
        oscar = zulu.bind(tango)(mike, oscar);
        report[1] = oscar;
        entity['children'] = report;
        entity = zulu.bind(tango)(mike, entity);
        return entity;
    };
    zulu['default'] = mike;
    return entity;
})();