// app/modules/user_profile/native/ActionSheetBackdropToast.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    report = argBar;
    yankee = argBaz;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    var _closure1_slot1 = yankee;
    var _closure1_slot2 = oscard;
    entity = global;
    option = entity.Object;
    golfie = option.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(option)(zuuluu, entity, tangon);
    entity = 0;
    golfie = oscard[entity];
    tangon = argCor;
    entity = undefined;
    tangon = tangon.bind(entity)(golfie);
    var _closure1_slot3 = tangon;
    romeon = 1;
    tangon = oscard[romeon];
    tangon = report.bind(entity)(tangon);
    golfie = tangon.View;
    var _closure1_slot4 = golfie;
    offset = tangon.StyleSheet;
    tangon = 2;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    golfie = tangon.ACTION_SHEET_MAX_DYNAMIC_CONTENT_SIZE_RATIO;
    var _closure1_slot5 = golfie;
    tangon = tangon.ACTION_SHEET_START_HEIGHT_RATIO;
    var _closure1_slot6 = tangon;
    tangon = 3;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.jsx;
    var _closure1_slot7 = tangon;
    tangon = 4;
    tangon = oscard[tangon];
    golfie = report.bind(entity)(tangon);
    tangon = golfie.isIOS;
    tangon = tangon.bind(golfie)();
    var _closure1_slot8 = tangon;
    tangon = 5;
    tangon = oscard[tangon];
    option = report.bind(entity)(tangon);
    golfie = option.createStyles;
    tangon = {};
    verify = {};
    backup = offset.absoluteFillObject;
    kiloes = verify;
    offset = copyDataProperties(kiloes, backup);
    offset = 'flex';
    verify[offset] = romeon;
    romeon = 'center';
    offset = 'alignItems';
    verify[offset] = romeon;
    offset = 'justifyContent';
    verify[offset] = romeon;
    tangon['container'] = verify;
    verify = {'position': 'absolute', 'bottom': 16, 'backgroundColor': null, 'borderRadius': null, 'paddingTop': 6, 'paddingBottom': 8, 'paddingHorizontal': 16};
    offset = 6;
    romeon = oscard[offset];
    romeon = yankee.bind(entity)(romeon);
    romeon = romeon.colors;
    romeon = romeon.TOAST_BG;
    verify['backgroundColor'] = romeon;
    offset = oscard[offset];
    offset = yankee.bind(entity)(offset);
    offset = offset.radii;
    offset = offset.round;
    verify['borderRadius'] = offset;
    tangon['toast'] = verify;
    tangon = golfie.bind(option)(tangon);
    var _closure1_slot9 = tangon;
    tangon = {};
    golfie = 'function ActionSheetBackdropToastTsx1(){const{isInIOS,isExpanded,maxDynamicContentSize,TOAST_BOTTOM_MARGIN,nonExpandedHeight,ACTION_SHEET_MAX_DYNAMIC_CONTENT_SIZE_RATIO,ACTION_SHEET_START_HEIGHT_RATIO,TOAST_BOTTOM_GAP_EXPANDED,TOAST_BOTTOM_GAP,positionDelta,TOAST_ANIMATION_Y_DELTA,opacity}=this.__closure;return{bottom:(isInIOS?isExpanded?maxDynamicContentSize+TOAST_BOTTOM_MARGIN:nonExpandedHeight+TOAST_BOTTOM_MARGIN:(isExpanded?ACTION_SHEET_MAX_DYNAMIC_CONTENT_SIZE_RATIO:ACTION_SHEET_START_HEIGHT_RATIO)*maxDynamicContentSize+(isExpanded?TOAST_BOTTOM_GAP_EXPANDED:TOAST_BOTTOM_GAP))+ +(1-positionDelta.get())*TOAST_ANIMATION_Y_DELTA,opacity:opacity.get()};}';
    tangon['code'] = golfie;
    var _closure1_slot10 = tangon;
    tangon = 13;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/user_profile/native/ActionSheetBackdropToast.tsx';
    tangon = report.bind(oscard)(tangon);
    michal = function(argFoo) {
        entity = argFoo;
        verify = entity.text;
        result = entity.isExpanded;
        var _closure2_slot0 = result;
        zuuluu = _closure1_slot9;
        tangon = undefined;
        golfie = zuuluu.bind(tangon)();
        oscard = _closure1_slot1;
        offset = _closure1_slot2;
        zuuluu = 7;
        zuuluu = offset[zuuluu];
        zuuluu = oscard.bind(tangon)(zuuluu);
        zuuluu = zuuluu.bind(tangon)();
        report = zuuluu.top;
        zuuluu = 8;
        zuuluu = offset[zuuluu];
        zuuluu = oscard.bind(tangon)(zuuluu);
        zuuluu = zuuluu.bind(tangon)();
        yankee = zuuluu.height;
        kiloes = _closure1_slot6;
        sizing = yankee * kiloes;
        var _closure2_slot1 = sizing;
        option = _closure1_slot0;
        zuuluu = 9;
        zuuluu = offset[zuuluu];
        zuuluu = option.bind(tangon)(zuuluu);
        zuuluu = zuuluu.NAV_BAR_HEIGHT_MULTILINE;
        zuuluu = yankee - zuuluu;
        output = zuuluu - report;
        var _closure2_slot2 = output;
        report = 10;
        zuuluu = offset[report];
        yankee = option.bind(tangon)(zuuluu);
        zuuluu = yankee.useSharedValue;
        romeon = 0;
        backup = zuuluu.bind(yankee)(romeon);
        var _closure2_slot3 = backup;
        zuuluu = offset[report];
        yankee = option.bind(tangon)(zuuluu);
        zuuluu = yankee.useSharedValue;
        foxtra = zuuluu.bind(yankee)(romeon);
        var _closure2_slot4 = foxtra;
        echoed = _closure1_slot3;
        romeon = echoed.useEffect;
        yankee = new Array(2);
        yankee[0] = backup;
        yankee[1] = foxtra;
        zuuluu = function() {
            report = _closure2_slot3;
            tangon = report.set;
            yankee = _closure1_slot0;
            romeon = _closure1_slot2;
            golfie = 10;
            entity = romeon[golfie];
            offset = undefined;
            foxtra = yankee.bind(offset)(entity);
            verify = foxtra.withDelay;
            entity = 11;
            zuuluu = romeon[entity];
            backup = yankee.bind(offset)(zuuluu);
            option = backup.withTiming;
            zuuluu = {};
            oscard = 200;
            zuuluu['duration'] = oscard;
            oscard = romeon[golfie];
            oscard = yankee.bind(offset)(oscard);
            sizing = oscard.Easing;
            kiloes = sizing.in;
            oscard = romeon[golfie];
            oscard = yankee.bind(offset)(oscard);
            oscard = oscard.Easing;
            oscard = oscard.ease;
            oscard = kiloes.bind(sizing)(oscard);
            zuuluu['easing'] = oscard;
            oscard = 1;
            option = option.bind(backup)(oscard, zuuluu);
            zuuluu = 100;
            zuuluu = verify.bind(foxtra)(zuuluu, option);
            zuuluu = tangon.bind(report)(zuuluu);
            zuuluu = _closure2_slot4;
            michal = zuuluu.set;
            entity = romeon[entity];
            report = yankee.bind(offset)(entity);
            tangon = report.withTiming;
            entity = {};
            option = 300;
            entity['duration'] = option;
            option = romeon[golfie];
            option = yankee.bind(offset)(option);
            verify = option.Easing;
            option = verify.in;
            golfie = romeon[golfie];
            golfie = yankee.bind(offset)(golfie);
            golfie = golfie.Easing;
            golfie = golfie.linear;
            golfie = option.bind(verify)(golfie);
            entity['easing'] = golfie;
            entity = tangon.bind(report)(oscard, entity);
            entity = michal.bind(zuuluu)(entity);
            entity = function() {
                oscard = _closure2_slot3;
                report = oscard.set;
                yankee = _closure1_slot0;
                romeon = _closure1_slot2;
                option = 10;
                michal = romeon[option];
                entity = undefined;
                foxtra = yankee.bind(entity)(michal);
                offset = foxtra.withDelay;
                michal = 11;
                tangon = romeon[michal];
                verify = yankee.bind(entity)(tangon);
                tangon = verify.withTiming;
                golfie = 0;
                tangon = tangon.bind(verify)(golfie);
                verify = 200;
                tangon = offset.bind(foxtra)(verify, tangon);
                tangon = report.bind(oscard)(tangon);
                tangon = _closure2_slot4;
                zuuluu = tangon.set;
                michal = romeon[michal];
                oscard = yankee.bind(entity)(michal);
                report = oscard.withTiming;
                michal = {};
                michal['duration'] = verify;
                verify = romeon[option];
                verify = yankee.bind(entity)(verify);
                offset = verify.Easing;
                verify = offset.out;
                option = romeon[option];
                option = yankee.bind(entity)(option);
                option = option.Easing;
                option = option.exp;
                option = verify.bind(offset)(option);
                michal['easing'] = option;
                michal = report.bind(oscard)(golfie, michal);
                michal = zuuluu.bind(tangon)(michal);
                return entity;
            };
            return entity;
        };
        zuuluu = romeon.bind(echoed)(zuuluu, yankee);
        zuuluu = offset[report];
        yankee = option.bind(tangon)(zuuluu);
        zuuluu = yankee.useAnimatedStyle;
        michal = function() { // Original name: h
            _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
                entity = {};
                report = _closure1_slot8;
                zuuluu = _closure2_slot0;
                if(report) { _fun00002_ip = 59; continue _fun00001 }
 19:
                if(zuuluu) { _fun00002_ip = 28; continue _fun00001 }
 22:
                report = _closure1_slot6;
                _fun00002_ip = 32; continue _fun00001;
 28:
                report = _closure1_slot5;
 32:
                tangon = _closure2_slot2;
                report = report * tangon;
                oscard = _closure2_slot0;
                tangon = 46;
                if(!oscard) { _fun00002_ip = 53; continue _fun00001 }
 50:
                tangon = 72;
 53:
                tangon = report + tangon;
                _fun00002_ip = 89; continue _fun00001;
 59:
                if(zuuluu) { _fun00002_ip = 75; continue _fun00001 }
 62:
                report = _closure2_slot1;
                zuuluu = 24;
                zuuluu = report + zuuluu;
                _fun00002_ip = 86; continue _fun00001;
 75:
                oscard = _closure2_slot2;
                report = 24;
                zuuluu = oscard + report;
 86:
                tangon = zuuluu;
 89:
                report = _closure2_slot3;
                zuuluu = report.get;
                report = zuuluu.bind(report)();
                zuuluu = 1;
                report = zuuluu - report;
                zuuluu = 15;
                zuuluu = zuuluu * report;
                zuuluu = tangon + zuuluu;
                entity['bottom'] = zuuluu;
                zuuluu = _closure2_slot4;
                michal = zuuluu.get;
                michal = michal.bind(zuuluu)();
                entity['opacity'] = michal;
                return entity;
            }
        };
        romeon = {};
        echoed = _closure1_slot8;
        romeon['isInIOS'] = echoed;
        romeon['isExpanded'] = result;
        romeon['maxDynamicContentSize'] = output;
        output = 24;
        romeon['TOAST_BOTTOM_MARGIN'] = output;
        romeon['nonExpandedHeight'] = sizing;
        sizing = _closure1_slot5;
        romeon['ACTION_SHEET_MAX_DYNAMIC_CONTENT_SIZE_RATIO'] = sizing;
        romeon['ACTION_SHEET_START_HEIGHT_RATIO'] = kiloes;
        kiloes = 72;
        romeon['TOAST_BOTTOM_GAP_EXPANDED'] = kiloes;
        kiloes = 46;
        romeon['TOAST_BOTTOM_GAP'] = kiloes;
        romeon['positionDelta'] = backup;
        backup = 15;
        romeon['TOAST_ANIMATION_Y_DELTA'] = backup;
        romeon['opacity'] = foxtra;
        michal['__closure'] = romeon;
        romeon = 4629963124809.0;
        michal['__workletHash'] = romeon;
        romeon = _closure1_slot10;
        michal['__initData'] = romeon;
        yankee = zuuluu.bind(yankee)(michal);
        zuuluu = _closure1_slot7;
        michal = _closure1_slot4;
        entity = {};
        foxtra = golfie.container;
        romeon = new Array(1);
        romeon[0] = foxtra;
        entity['style'] = romeon;
        report = offset[report];
        report = oscard.bind(tangon)(report);
        oscard = report.View;
        report = {};
        romeon = golfie.toast;
        golfie = new Array(2);
        golfie[0] = romeon;
        golfie[1] = yankee;
        report['style'] = golfie;
        golfie = 12;
        golfie = offset[golfie];
        golfie = option.bind(tangon)(golfie);
        option = golfie.Text;
        golfie = {'variant': 'text-sm/medium', 'color': 'header-primary'};
        golfie['children'] = verify;
        golfie = zuuluu.bind(tangon)(option, golfie);
        report['children'] = golfie;
        report = zuuluu.bind(tangon)(oscard, report);
        entity['children'] = report;
        entity = zuuluu.bind(tangon)(michal, entity);
        return entity;
    };
    zuuluu['ActionSheetBackdropToast'] = michal;
    return entity;
})();