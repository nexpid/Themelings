// app/modules/user_profile/native/YouScreenUserProfileContent.tsx
export default (function(argFoo, argBar, argBaz, argCorge, _, argFred, argPlugh) {
    report = argBar;
    golf = argBaz;
    zulu = argFred;
    oscar = argPlugh;
    var _closure1_slot0 = report;
    var _closure1_slot1 = golf;
    var _closure1_slot2 = oscar;
    entity = function(argFoo) { // Original name: YouAvatar
        tango = _closure1_slot3;
        zulu = tango.useCallback;
        mike = function() {
            zulu = _closure1_slot0;
            tango = _closure1_slot2;
            entity = 5;
            mike = tango[entity];
            entity = undefined;
            report = zulu.bind(entity)(mike);
            mike = report.trackYouTabAvatarPress;
            mike = mike.bind(report)();
            mike = 6;
            mike = tango[mike];
            zulu = zulu.bind(entity)(mike);
            mike = zulu.showYouAccountActionSheet;
            mike = mike.bind(zulu)();
            return entity;
        };
        entity = new Array(0);
        golf = zulu.bind(tango)(mike, entity);
        tango = _closure1_slot8;
        mike = _closure1_slot1;
        verify = _closure1_slot2;
        entity = 7;
        entity = verify[entity];
        zulu = undefined;
        mike = mike.bind(zulu)(entity);
        entity = {};
        offset = argFoo;
        yankee = entity;
        oscar = copyDataProperties(yankee, offset);
        oscar = 'onPress';
        entity[oscar] = golf;
        options = _closure1_slot0;
        report = 8;
        oscar = verify[report];
        oscar = options.bind(zulu)(oscar);
        golf = oscar.intl;
        oscar = golf.string;
        report = verify[report];
        report = options.bind(zulu)(report);
        report = report.t;
        report = report.C6COaW;
        oscar = oscar.bind(golf)(report);
        report = 'accessibilityLabel';
        entity[report] = oscar;
        entity = tango.bind(zulu)(mike, entity);
        return entity;
    };
    var _closure1_slot10 = entity;
    entity = function(argFoo) { // Original name: EditSection
        mike = argFoo;
        options = mike.navigateToProfileCustomization;
        var _closure2_slot0 = options;
        kilo = _closure1_slot1;
        foxtrot = _closure1_slot2;
        mike = 9;
        mike = foxtrot[mike];
        tango = undefined;
        mike = kilo.bind(tango)(mike);
        report = mike.bind(tango)();
        romeo = _closure1_slot0;
        mike = 10;
        mike = foxtrot[mike];
        zulu = romeo.bind(tango)(mike);
        mike = zulu.useUserProfileAnalyticsContext;
        mike = mike.bind(zulu)();
        golf = mike.trackUserProfileAction;
        var _closure2_slot1 = golf;
        oscar = _closure1_slot3;
        zulu = oscar.useCallback;
        mike = new Array(2);
        mike[0] = options;
        mike[1] = golf;
        entity = function() {
            tango = _closure2_slot1;
            zulu = {};
            entity = 'EDIT_PROFILE';
            zulu['action'] = entity;
            entity = undefined;
            zulu = tango.bind(entity)(zulu);
            tango = _closure1_slot0;
            report = _closure1_slot2;
            zulu = 5;
            zulu = report[zulu];
            tango = tango.bind(entity)(zulu);
            zulu = tango.trackYouTabEditProfilePress;
            zulu = zulu.bind(tango)();
            mike = _closure2_slot0;
            mike = mike.bind(entity)();
            return entity;
        };
        options = zulu.bind(oscar)(entity, mike);
        zulu = _closure1_slot8;
        entity = 11;
        entity = foxtrot[entity];
        mike = kilo.bind(tango)(entity);
        entity = {};
        report = report.primaryButtons;
        entity['style'] = report;
        golf = _closure1_slot8;
        report = 12;
        report = foxtrot[report];
        report = romeo.bind(tango)(report);
        oscar = report.Button;
        report = {};
        offset = 'primary';
        report['variant'] = offset;
        yankee = _closure1_slot8;
        verify = 13;
        verify = foxtrot[verify];
        verify = romeo.bind(tango)(verify);
        offset = verify.PencilIcon;
        verify = {};
        backup = 'sm';
        verify['size'] = backup;
        backup = 14;
        backup = foxtrot[backup];
        backup = kilo.bind(tango)(backup);
        backup = backup.colors;
        backup = backup.WHITE;
        verify['color'] = backup;
        verify = yankee.bind(tango)(offset, verify);
        report['icon'] = verify;
        verify = 8;
        offset = foxtrot[verify];
        offset = romeo.bind(tango)(offset);
        yankee = offset.intl;
        offset = yankee.string;
        verify = foxtrot[verify];
        verify = romeo.bind(tango)(verify);
        verify = verify.t;
        verify = verify.AAjhgo;
        verify = offset.bind(yankee)(verify);
        report['text'] = verify;
        report['onPress'] = options;
        options = true;
        report['grow'] = options;
        report = golf.bind(tango)(oscar, report);
        entity['secondaryButton'] = report;
        entity = zulu.bind(tango)(mike, entity);
        return entity;
    };
    var _closure1_slot11 = entity;
    entity = global;
    verify = entity.Object;
    options = verify.defineProperty;
    tango = {};
    entity = true;
    tango['value'] = entity;
    entity = '__esModule';
    entity = options.bind(verify)(zulu, entity, tango);
    entity = 0;
    options = oscar[entity];
    tango = argCorge;
    entity = undefined;
    tango = tango.bind(entity)(options);
    var _closure1_slot3 = tango;
    tango = 1;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.View;
    var _closure1_slot4 = tango;
    tango = 2;
    tango = oscar[tango];
    tango = golf.bind(entity)(tango);
    var _closure1_slot5 = tango;
    tango = 3;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    golf = tango.PROFILE_CONTENT_BOTTOM_PADDING;
    var _closure1_slot6 = golf;
    tango = tango.UserProfileType;
    var _closure1_slot7 = tango;
    tango = 4;
    golf = oscar[tango];
    golf = report.bind(entity)(golf);
    golf = golf.jsx;
    var _closure1_slot8 = golf;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.jsxs;
    var _closure1_slot9 = tango;
    tango = 32;
    tango = oscar[tango];
    oscar = report.bind(entity)(tango);
    report = oscar.fileFinishedImporting;
    tango = 'modules/user_profile/native/YouScreenUserProfileContent.tsx';
    tango = report.bind(oscar)(tango);
    mike = function(argFoo) { // Original name: YouScreenUserProfileContent
        _fun116719: for(var _fun116719_ip = 0; ; ) switch(_fun116719_ip) {
 0:
            mike = argFoo;
            output = mike.user;
            report = mike.style;
            context = mike.navigateToProfileCustomization;
            source = mike.navigateToFriends;
            record = mike.navigateToPremium;
            config = mike.navigateToShop;
            golf = _closure1_slot1;
            oscar = _closure1_slot2;
            mike = 9;
            mike = oscar[mike];
            tango = undefined;
            mike = golf.bind(tango)(mike);
            romeo = mike.bind(tango)();
            zulu = _closure1_slot0;
            mike = 10;
            mike = oscar[mike];
            options = zulu.bind(tango)(mike);
            mike = options.useUserProfileAnalyticsContext;
            mike = mike.bind(options)();
            backup = mike.trackUserProfileAction;
            var _closure2_slot0 = backup;
            mike = 15;
            mike = oscar[mike];
            golf = golf.bind(tango)(mike);
            mike = output.id;
            vacuum = golf.bind(tango)(mike);
            mike = 16;
            mike = oscar[mike];
            golf = zulu.bind(tango)(mike);
            mike = golf.useCustomStatusActivity;
            yankee = mike.bind(golf)();
            mike = 17;
            mike = oscar[mike];
            golf = zulu.bind(tango)(mike);
            oscar = golf.useStateFromStores;
            mike = _closure1_slot5;
            zulu = new Array(1);
            zulu[0] = mike;
            mike = function() {
                entity = _closure1_slot5;
                entity = entity.keyboardHeight;
                return entity;
            };
            mike = oscar.bind(golf)(zulu, mike);
            status = 0;
            zulu = mike > status;
            target = 0;
            if(!zulu) { _fun116719_ip = 204; continue _fun116719 }
 201:
            target = mike;
 204:
            golf = _closure1_slot1;
            control = _closure1_slot2;
            mike = 18;
            mike = control[mike];
            zulu = golf.bind(tango)(mike);
            mike = {};
            mike['user'] = output;
            mike['displayProfile'] = vacuum;
            mike = zulu.bind(tango)(mike);
            options = mike.theme;
            offset = mike.primaryColor;
            verify = mike.secondaryColor;
            papa = null;
            sequence = papa != offset;
            update = _closure1_slot0;
            mike = 19;
            mike = control[mike];
            oscar = update.bind(tango)(mike);
            zulu = oscar.useUserProfileColors;
            mike = {};
            mike['theme'] = options;
            mike['primaryColor'] = offset;
            mike['secondaryColor'] = verify;
            mike = zulu.bind(oscar)(mike);
            options = mike.gradientFallbackBackground;
            kilo = mike.avatarBackground;
            echo = mike.containerBackground;
            sizing = {};
            sizing['backgroundColor'] = echo;
            oscar = _closure1_slot3;
            zulu = oscar.useCallback;
            mike = new Array(1);
            mike[0] = backup;
            entity = function() {
                zulu = _closure2_slot0;
                mike = {};
                entity = 'PRESS_SET_STATUS';
                mike['action'] = entity;
                entity = undefined;
                mike = zulu.bind(entity)(mike);
                zulu = _closure1_slot0;
                tango = _closure1_slot2;
                mike = 6;
                mike = tango[mike];
                zulu = zulu.bind(entity)(mike);
                mike = zulu.showYouAccountActionSheet;
                mike = mike.bind(zulu)();
                return entity;
            };
            result = zulu.bind(oscar)(entity, mike);
            zulu = _closure1_slot9;
            entity = 20;
            entity = control[entity];
            entity = golf.bind(tango)(entity);
            mike = entity.View;
            entity = {};
            entity['style'] = report;
            backup = _closure1_slot8;
            oscar = _closure1_slot10;
            report = {};
            report['user'] = output;
            report['backgroundColor'] = kilo;
            oscar = backup.bind(tango)(oscar, report);
            report = new Array(2);
            report[0] = oscar;
            oscar = 21;
            oscar = control[oscar];
            golf = golf.bind(tango)(oscar);
            oscar = {};
            kilo = romeo.profileContent;
            backup = new Array(3);
            backup[0] = kilo;
            kilo = {};
            kilo['paddingTop'] = status;
            backup[1] = kilo;
            kilo = 22;
            kilo = control[kilo];
            update = update.bind(tango)(kilo);
            kilo = update.isAndroid;
            kilo = kilo.bind(update)();
            kilo = !kilo;
            if(!kilo) { _fun116719_ip = 505; continue _fun116719 }
 487:
            update = {};
            control = _closure1_slot6;
            control = target + control;
            update['paddingBottom'] = control;
            kilo = update;
 505:
            backup[2] = kilo;
            oscar['containerStyle'] = backup;
            oscar['primaryColor'] = offset;
            oscar['secondaryColor'] = verify;
            oscar['fallbackBackground'] = options;
            offset = _closure1_slot8;
            kilo = _closure1_slot1;
            target = _closure1_slot2;
            options = 23;
            options = target[options];
            verify = kilo.bind(tango)(options);
            options = {};
            options['customStatusActivity'] = yankee;
            options['hasCustomProfileTheme'] = sequence;
            yankee = romeo.customStatusBubble;
            options['style'] = yankee;
            yankee = romeo.emojiOnlyCustomStatusBubble;
            options['emojiOnlyStyle'] = yankee;
            control = true;
            options['editEnabled'] = control;
            verify = offset.bind(tango)(verify, options);
            options = new Array(3);
            options[0] = verify;
            yankee = _closure1_slot9;
            offset = _closure1_slot4;
            verify = {};
            backup = romeo.primaryInfo;
            verify['style'] = backup;
            update = _closure1_slot8;
            backup = 24;
            backup = target[backup];
            kilo = kilo.bind(tango)(backup);
            backup = {};
            backup['user'] = output;
            target = papa == vacuum;
            papa = undefined;
            if(target) { _fun116719_ip = 664; continue _fun116719 }
 658:
            papa = vacuum.pronouns;
 664:
            backup['pronouns'] = papa;
            backup['badgeContainerBackground'] = echo;
            backup['onPressDisplayName'] = result;
            echo = _closure1_slot0;
            result = _closure1_slot2;
            papa = 8;
            target = result[papa];
            target = echo.bind(tango)(target);
            status = target.intl;
            target = status.string;
            papa = result[papa];
            papa = echo.bind(tango)(papa);
            papa = papa.t;
            papa = papa.C6COaW;
            papa = target.bind(status)(papa);
            backup['displayNameAccessibilityHint'] = papa;
            papa = _closure1_slot7;
            papa = papa.YOU_SCREEN;
            backup['userProfileType'] = papa;
            backup['showChevron'] = control;
            kilo = update.bind(tango)(kilo, backup);
            backup = new Array(2);
            backup[0] = kilo;
            control = _closure1_slot8;
            update = _closure1_slot11;
            kilo = {};
            kilo['navigateToProfileCustomization'] = context;
            kilo = control.bind(tango)(update, kilo);
            backup[1] = kilo;
            verify['children'] = backup;
            verify = yankee.bind(tango)(offset, verify);
            options[1] = verify;
            yankee = _closure1_slot9;
            offset = _closure1_slot4;
            verify = {};
            romeo = romeo.cards;
            verify['style'] = romeo;
            update = _closure1_slot8;
            backup = _closure1_slot1;
            romeo = 25;
            romeo = result[romeo];
            kilo = backup.bind(tango)(romeo);
            romeo = {};
            romeo['navigateToPremium'] = record;
            romeo['style'] = sizing;
            kilo = update.bind(tango)(kilo, romeo);
            romeo = new Array(9);
            romeo[0] = kilo;
            control = _closure1_slot8;
            kilo = 26;
            kilo = result[kilo];
            update = backup.bind(tango)(kilo);
            kilo = {};
            kilo['navigateToPremium'] = record;
            kilo['navigateToShop'] = config;
            kilo['hasCustomProfileTheme'] = sequence;
            kilo = control.bind(tango)(update, kilo);
            romeo[1] = kilo;
            control = _closure1_slot8;
            kilo = 27;
            kilo = result[kilo];
            update = backup.bind(tango)(kilo);
            kilo = {};
            kilo['user'] = output;
            kilo['currentUser'] = output;
            kilo['style'] = sizing;
            kilo = control.bind(tango)(update, kilo);
            romeo[2] = kilo;
            control = _closure1_slot8;
            kilo = 28;
            kilo = result[kilo];
            update = backup.bind(tango)(kilo);
            kilo = {};
            sequence = output.id;
            kilo['userId'] = sequence;
            kilo['displayProfile'] = vacuum;
            kilo['style'] = sizing;
            kilo = control.bind(tango)(update, kilo);
            romeo[3] = kilo;
            vacuum = _closure1_slot8;
            kilo = 29;
            update = result[kilo];
            update = echo.bind(tango)(update);
            control = update.UserProfileAccountConnectionsCard;
            update = {};
            sequence = output.id;
            update['userId'] = sequence;
            update['style'] = sizing;
            update = vacuum.bind(tango)(control, update);
            romeo[4] = update;
            vacuum = _closure1_slot8;
            update = result[kilo];
            update = echo.bind(tango)(update);
            control = update.UserProfileApplicationRoleConnectionsCard;
            update = {};
            sequence = output.id;
            update['userId'] = sequence;
            update['style'] = sizing;
            update = vacuum.bind(tango)(control, update);
            romeo[5] = update;
            update = _closure1_slot8;
            kilo = result[kilo];
            kilo = echo.bind(tango)(kilo);
            echo = kilo.UserProfileApplicationRoleConnectionsCard;
            kilo = {};
            control = output.id;
            kilo['userId'] = control;
            kilo['style'] = sizing;
            kilo = update.bind(tango)(echo, kilo);
            romeo[6] = kilo;
            update = _closure1_slot8;
            kilo = 30;
            kilo = result[kilo];
            echo = backup.bind(tango)(kilo);
            kilo = {};
            control = output.id;
            kilo['userId'] = control;
            kilo['navigateToFriends'] = source;
            kilo['style'] = sizing;
            kilo = update.bind(tango)(echo, kilo);
            romeo[7] = kilo;
            kilo = _closure1_slot8;
            foxtrot = 31;
            foxtrot = result[foxtrot];
            backup = backup.bind(tango)(foxtrot);
            foxtrot = {};
            output = output.id;
            foxtrot['userId'] = output;
            foxtrot['style'] = sizing;
            foxtrot = kilo.bind(tango)(backup, foxtrot);
            romeo[8] = foxtrot;
            verify['children'] = romeo;
            verify = yankee.bind(tango)(offset, verify);
            options[2] = verify;
            oscar['children'] = options;
            oscar = zulu.bind(tango)(golf, oscar);
            report[1] = oscar;
            entity['children'] = report;
            entity = zulu.bind(tango)(mike, entity);
            return entity;
        }
    };
    zulu['default'] = mike;
    return entity;
})();