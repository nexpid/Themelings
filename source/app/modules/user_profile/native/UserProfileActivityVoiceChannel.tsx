// app/modules/user_profile/native/UserProfileActivityVoiceChannel.tsx
export default (function(argFoo, argBar, argBaz, _, __, argFre, argPlu) {
    _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
        report = argBar;
        zuuluu = argFre;
        oscard = argPlu;
        var _closure1_slot0 = report;
        entity = argBaz;
        var _closure1_slot1 = entity;
        var _closure1_slot2 = oscard;
        entity = global;
        option = entity.Object;
        golfie = option.defineProperty;
        tangon = {};
        entity = true;
        tangon['value'] = entity;
        entity = '__esModule';
        entity = golfie.bind(option)(zuuluu, entity, tangon);
        entity = 0;
        tangon = oscard[entity];
        entity = undefined;
        tangon = report.bind(entity)(tangon);
        tangon = tangon.View;
        var _closure1_slot3 = tangon;
        tangon = 1;
        golfie = oscard[tangon];
        golfie = report.bind(entity)(golfie);
        golfie = golfie.jsx;
        var _closure1_slot4 = golfie;
        tangon = oscard[tangon];
        tangon = report.bind(entity)(tangon);
        tangon = tangon.jsxs;
        var _closure1_slot5 = tangon;
        tangon = 2;
        tangon = oscard[tangon];
        option = report.bind(entity)(tangon);
        golfie = option.createStyles;
        tangon = {};
        verify = {'flexDirection': 'row', 'alignItems': 'center', 'gap': 4, 'overflow': 'hidden'};
        tangon['container'] = verify;
        verify = {'flex': 1, 'flexDirection': 'row', 'alignItems': 'center', 'gap': 2};
        tangon['channelButton'] = verify;
        verify = {'flex': 1, 'overflow': 'hidden'};
        offset = 3;
        offset = oscard[offset];
        yankee = report.bind(entity)(offset);
        offset = yankee.isAndroid;
        yankee = offset.bind(yankee)();
        offset = -1;
        if(!yankee) { _fun00002_ip = 221; continue _fun00001 }
 215:
        offset = -2;
 221:
        verify['marginTop'] = offset;
        tangon['channelName'] = verify;
        tangon = golfie.bind(option)(tangon);
        var _closure1_slot6 = tangon;
        tangon = 25;
        tangon = oscard[tangon];
        oscard = report.bind(entity)(tangon);
        report = oscard.fileFinishedImporting;
        tangon = 'modules/user_profile/native/UserProfileActivityVoiceChannel.tsx';
        tangon = report.bind(oscard)(tangon);
        michal = function(argFoo) { // Original name: UserProfileActivityVoiceChannel
            _fun00003: for(var _fun00004_ip = 0; ; ) switch(_fun00004_ip) {
 0:
                entity = argFoo;
                foxtra = entity.guild;
                var _closure2_slot0 = foxtra;
                update = entity.channel;
                var _closure2_slot1 = update;
                michal = entity.onAction;
                var _closure2_slot2 = michal;
                golfie = entity.style;
                entity = _closure1_slot6;
                tangon = undefined;
                source = entity.bind(tangon)();
                michal = _closure1_slot1;
                zuuluu = _closure1_slot2;
                entity = 4;
                entity = zuuluu[entity];
                entity = michal.bind(tangon)(entity);
                entity = entity.bind(tangon)();
                entity = entity.newestAnalyticsLocation;
                var _closure2_slot3 = entity;
                report = _closure1_slot0;
                entity = 5;
                entity = zuuluu[entity];
                oscard = report.bind(tangon)(entity);
                entity = oscard.useUserProfileAnalyticsContext;
                entity = entity.bind(oscard)();
                entity = entity.context;
                var _closure2_slot4 = entity;
                entity = 6;
                entity = zuuluu[entity];
                report = report.bind(tangon)(entity);
                entity = report.useIsScreenReaderEnabled;
                report = entity.bind(report)();
                entity = 7;
                entity = zuuluu[entity];
                entity = michal.bind(tangon)(entity);
                sizing = entity.bind(tangon)(update);
                var _closure2_slot5 = sizing;
                entity = update.isGuildStageVoice;
                entity = entity.bind(update)();
                michal = _closure1_slot0;
                zuuluu = _closure1_slot2;
                if(entity) { _fun00004_ip = 204; continue _fun00003 }
 184:
                entity = 9;
                entity = zuuluu[entity];
                entity = michal.bind(tangon)(entity);
                result = entity.VoiceNormalIcon;
                _fun00004_ip = 222; continue _fun00003;
 204:
                entity = 8;
                entity = zuuluu[entity];
                entity = michal.bind(tangon)(entity);
                result = entity.StageIcon;
 222:
                zuuluu = _closure1_slot5;
                michal = _closure1_slot3;
                entity = {};
                option = source.container;
                oscard = new Array(2);
                oscard[0] = option;
                oscard[1] = golfie;
                entity['style'] = oscard;
                option = _closure1_slot4;
                if(report) { _fun00004_ip = 385; continue _fun00003 }
 263:
                backup = _closure1_slot0;
                kiloes = _closure1_slot2;
                report = 12;
                report = kiloes[report];
                report = backup.bind(tangon)(report);
                oscard = report.PressableOpacity;
                report = {};
                golfie = 'button';
                report['accessibilityRole'] = golfie;
                golfie = foxtra.name;
                report['accessibilityLabel'] = golfie;
                golfie = function() { // Original name: onPress
                    zuuluu = _closure2_slot2;
                    michal = {};
                    entity = 'PRESS_VOICE_CHANNEL_ICON';
                    michal['action'] = entity;
                    entity = undefined;
                    michal = zuuluu.bind(entity)(michal);
                    zuuluu = _closure1_slot1;
                    tangon = _closure1_slot2;
                    michal = 13;
                    michal = tangon[michal];
                    tangon = zuuluu.bind(entity)(michal);
                    zuuluu = tangon.open;
                    michal = {};
                    oscard = 'GUILD_NAME_TOAST';
                    michal['key'] = oscard;
                    report = _closure2_slot0;
                    report = report.name;
                    michal['content'] = report;
                    report = function() { // Original name: icon
                        tangon = _closure1_slot4;
                        michal = _closure1_slot1;
                        golfie = _closure1_slot2;
                        report = 11;
                        entity = golfie[report];
                        zuuluu = undefined;
                        michal = michal.bind(zuuluu)(entity);
                        entity = {};
                        oscard = _closure1_slot0;
                        report = golfie[report];
                        report = oscard.bind(zuuluu)(report);
                        report = report.GuildIconSizes;
                        report = report.XSMALL;
                        entity['size'] = report;
                        report = _closure2_slot0;
                        entity['guild'] = report;
                        entity = tangon.bind(zuuluu)(michal, entity);
                        return entity;
                    };
                    michal['icon'] = report;
                    michal = zuuluu.bind(tangon)(michal);
                    return entity;
                };
                report['onPress'] = golfie;
                offset = _closure1_slot1;
                romeon = 11;
                golfie = kiloes[romeon];
                offset = offset.bind(tangon)(golfie);
                golfie = {};
                romeon = kiloes[romeon];
                romeon = backup.bind(tangon)(romeon);
                romeon = romeon.GuildIconSizes;
                romeon = romeon.XXSMALL;
                golfie['size'] = romeon;
                golfie['guild'] = foxtra;
                golfie = option.bind(tangon)(offset, golfie);
                report['children'] = golfie;
                oscard = option.bind(tangon)(oscard, report);
                _fun00004_ip = 535; continue _fun00003;
 385:
                golfie = _closure1_slot3;
                report = {};
                offset = true;
                report['accessible'] = offset;
                kiloes = _closure1_slot0;
                output = _closure1_slot2;
                offset = 10;
                romeon = output[offset];
                romeon = kiloes.bind(tangon)(romeon);
                echoed = romeon.intl;
                backup = echoed.formatToPlainString;
                offset = output[offset];
                offset = kiloes.bind(tangon)(offset);
                offset = offset.t;
                romeon = offset.xm6W9P;
                offset = {};
                ctrled = foxtra.name;
                offset['guildName'] = ctrled;
                offset = backup.bind(echoed)(romeon, offset);
                report['accessibilityLabel'] = offset;
                romeon = _closure1_slot1;
                backup = 11;
                offset = output[backup];
                romeon = romeon.bind(tangon)(offset);
                offset = {};
                backup = output[backup];
                backup = kiloes.bind(tangon)(backup);
                backup = backup.GuildIconSizes;
                backup = backup.XXSMALL;
                offset['size'] = backup;
                offset['guild'] = foxtra;
                offset = option.bind(tangon)(romeon, offset);
                report['children'] = offset;
                oscard = option.bind(tangon)(golfie, report);
 535:
                report = new Array(4);
                report[0] = oscard;
                option = _closure1_slot4;
                foxtra = _closure1_slot0;
                backup = _closure1_slot2;
                oscard = 14;
                oscard = backup[oscard];
                oscard = foxtra.bind(tangon)(oscard);
                golfie = oscard.ChevronSmallRightIcon;
                oscard = {'size': 'xxs', 'color': 'text-normal'};
                oscard = option.bind(tangon)(golfie, oscard);
                report[1] = oscard;
                kiloes = _closure1_slot5;
                oscard = 12;
                golfie = backup[oscard];
                golfie = foxtra.bind(tangon)(golfie);
                romeon = golfie.PressableOpacity;
                golfie = {};
                offset = source.channelButton;
                golfie['style'] = offset;
                offset = 'button';
                golfie['accessibilityRole'] = offset;
                output = _closure1_slot1;
                verify = 15;
                verify = backup[verify];
                output = output.bind(tangon)(verify);
                verify = {};
                verify['channel'] = update;
                verify = output.bind(tangon)(verify);
                golfie['accessibilityLabel'] = verify;
                verify = 10;
                output = backup[verify];
                output = foxtra.bind(tangon)(output);
                ctrled = output.intl;
                echoed = ctrled.string;
                output = backup[verify];
                output = foxtra.bind(tangon)(output);
                output = output.t;
                output = output.9C444u;
                output = echoed.bind(ctrled)(output);
                golfie['accessibilityHint'] = output;
                output = function() { // Original name: onPress
                    tangon = _closure2_slot2;
                    michal = {};
                    entity = 'OPEN_VOICE_CHANNEL';
                    michal['action'] = entity;
                    entity = undefined;
                    michal = tangon.bind(entity)(michal);
                    oscard = _closure1_slot0;
                    tangon = _closure1_slot2;
                    report = 16;
                    report = tangon[report];
                    golfie = oscard.bind(entity)(report);
                    oscard = golfie.openGuildVoiceModal;
                    report = _closure2_slot1;
                    zuuluu = _closure2_slot3;
                    zuuluu = oscard.bind(golfie)(report, zuuluu);
                    zuuluu = _closure1_slot1;
                    michal = 17;
                    michal = tangon[michal];
                    zuuluu = zuuluu.bind(entity)(michal);
                    michal = zuuluu.hideActionSheet;
                    michal = michal.bind(zuuluu)();
                    return entity;
                };
                golfie['onPress'] = output;
                output = {'size': 'xxs', 'color': 'text-normal'};
                result = option.bind(tangon)(result, output);
                output = new Array(2);
                output[0] = result;
                result = 18;
                result = backup[result];
                result = foxtra.bind(tangon)(result);
                echoed = result.Text;
                result = {'style': null, 'variant': 'text-xs/normal', 'lineClamp': 1};
                source = source.channelName;
                result['style'] = source;
                update = update.name;
                result['children'] = update;
                result = option.bind(tangon)(echoed, result);
                output[1] = result;
                golfie['children'] = output;
                golfie = kiloes.bind(tangon)(romeon, golfie);
                report[2] = golfie;
                oscard = backup[oscard];
                oscard = foxtra.bind(tangon)(oscard);
                golfie = oscard.PressableOpacity;
                oscard = {};
                oscard['accessibilityRole'] = offset;
                offset = backup[verify];
                offset = foxtra.bind(tangon)(offset);
                kiloes = offset.intl;
                romeon = kiloes.formatToPlainString;
                verify = backup[verify];
                verify = foxtra.bind(tangon)(verify);
                verify = verify.t;
                offset = verify.e95u3N;
                verify = {};
                output = sizing.length;
                verify['count'] = output;
                verify = romeon.bind(kiloes)(offset, verify);
                oscard['accessibilityLabel'] = verify;
                verify = function() { // Original name: onPress
                    tangon = _closure2_slot2;
                    zuuluu = {};
                    entity = 'PRESS_VOICE_CHANNEL_AVATARS';
                    zuuluu['action'] = entity;
                    entity = undefined;
                    zuuluu = tangon.bind(entity)(zuuluu);
                    oscard = _closure1_slot1;
                    zuuluu = _closure1_slot2;
                    report = 17;
                    report = zuuluu[report];
                    golfie = oscard.bind(entity)(report);
                    oscard = golfie.openLazy;
                    report = _closure1_slot0;
                    tangon = 20;
                    tangon = zuuluu[tangon];
                    report = report.bind(entity)(tangon);
                    tangon = 19;
                    tangon = zuuluu[tangon];
                    zuuluu = zuuluu.paths;
                    yankee = report.bind(entity)(tangon, zuuluu);
                    tangon = {};
                    zuuluu = _closure2_slot5;
                    tangon['users'] = zuuluu;
                    michal = _closure2_slot1;
                    tangon['channel'] = michal;
                    michal = function(argFoo) { // Original name: onPressUser
                        michal = _closure1_slot1;
                        zuuluu = _closure1_slot2;
                        entity = 21;
                        entity = zuuluu[entity];
                        zuuluu = undefined;
                        michal = michal.bind(zuuluu)(entity);
                        entity = {};
                        oscard = _closure2_slot4;
                        golfie = entity;
                        tangon = copyDataProperties(golfie, oscard);
                        report = argFoo;
                        tangon = 'userId';
                        entity[tangon] = report;
                        entity = michal.bind(zuuluu)(entity);
                        return entity;
                    };
                    tangon['onPressUser'] = michal;
                    offset = 'UserProfileActivityVoiceChannelUsers';
                    option = 'stack';
                    romeon = golfie;
                    verify = tangon;
                    michal = romeon[oscard](yankee, offset, verify, option, golfie);
                    return entity;
                };
                oscard['onPress'] = verify;
                verify = 22;
                verify = backup[verify];
                verify = foxtra.bind(tangon)(verify);
                offset = verify.AvatarPile;
                verify = {};
                romeon = 23;
                romeon = backup[romeon];
                romeon = foxtra.bind(tangon)(romeon);
                romeon = romeon.AvatarSizes;
                romeon = romeon.SIZE_16;
                verify['size'] = romeon;
                romeon = sizing.length;
                verify['totalCount'] = romeon;
                foxtra = sizing.map;
                romeon = function(argFoo) {
                    entity = argFoo;
                    entity = entity.username;
                    return entity;
                };
                romeon = foxtra.bind(sizing)(romeon);
                verify['names'] = romeon;
                romeon = sizing.length;
                kiloes = 3;
                foxtra = sizing;
                if(!(!(romeon <= kiloes))) { _fun00004_ip = 1032; continue _fun00003 }
 1019:
                backup = sizing.slice;
                romeon = 0;
                foxtra = backup.bind(sizing)(romeon, kiloes);
 1032:
                romeon = foxtra.map;
                yankee = function(argFoo) {
                    entity = argFoo;
                    report = _closure1_slot4;
                    zuuluu = _closure1_slot1;
                    option = _closure1_slot2;
                    michal = 24;
                    michal = option[michal];
                    tangon = undefined;
                    zuuluu = zuuluu.bind(tangon)(michal);
                    michal = {};
                    golfie = _closure1_slot0;
                    oscard = 23;
                    oscard = option[oscard];
                    oscard = golfie.bind(tangon)(oscard);
                    oscard = oscard.AvatarSizes;
                    oscard = oscard.SIZE_16;
                    michal['size'] = oscard;
                    golfie = _closure2_slot1;
                    michal['channel'] = golfie;
                    oscard = _closure2_slot0;
                    oscard = oscard.id;
                    michal['guildId'] = oscard;
                    michal['user'] = entity;
                    entity = entity.id;
                    entity = report.bind(tangon)(zuuluu, michal, entity);
                    return entity;
                };
                yankee = romeon.bind(foxtra)(yankee);
                verify['children'] = yankee;
                verify = option.bind(tangon)(offset, verify);
                oscard['children'] = verify;
                oscard = option.bind(tangon)(golfie, oscard);
                report[3] = oscard;
                entity['children'] = report;
                entity = zuuluu.bind(tangon)(michal, entity);
                return entity;
            }
        };
        zuuluu['default'] = michal;
        return entity;
    }
})();