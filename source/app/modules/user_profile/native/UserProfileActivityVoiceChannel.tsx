// app/modules/user_profile/native/UserProfileActivityVoiceChannel.tsx
export default (function(argFoo, argBar, argBaz, _, __, argFred, argPlugh) {
    _fun80494: for(var _fun80494_ip = 0; ; ) switch(_fun80494_ip) {
 0:
        report = argBar;
        zulu = argFred;
        oscar = argPlugh;
        var _closure1_slot0 = report;
        entity = argBaz;
        var _closure1_slot1 = entity;
        var _closure1_slot2 = oscar;
        entity = global;
        options = entity.Object;
        golf = options.defineProperty;
        tango = {};
        entity = true;
        tango['value'] = entity;
        entity = '__esModule';
        entity = golf.bind(options)(zulu, entity, tango);
        entity = 0;
        tango = oscar[entity];
        entity = undefined;
        tango = report.bind(entity)(tango);
        tango = tango.View;
        var _closure1_slot3 = tango;
        tango = 1;
        golf = oscar[tango];
        golf = report.bind(entity)(golf);
        golf = golf.jsx;
        var _closure1_slot4 = golf;
        tango = oscar[tango];
        tango = report.bind(entity)(tango);
        tango = tango.jsxs;
        var _closure1_slot5 = tango;
        tango = 2;
        tango = oscar[tango];
        options = report.bind(entity)(tango);
        golf = options.createStyles;
        tango = {};
        verify = {'flexDirection': 'row', 'alignItems': 'center', 'gap': 4, 'overflow': 'hidden'};
        tango['container'] = verify;
        verify = {'flex': 1, 'flexDirection': 'row', 'alignItems': 'center', 'gap': 2};
        tango['channelButton'] = verify;
        verify = {'flex': 1, 'overflow': 'hidden'};
        offset = 3;
        offset = oscar[offset];
        yankee = report.bind(entity)(offset);
        offset = yankee.isAndroid;
        yankee = offset.bind(yankee)();
        offset = -1;
        if(!yankee) { _fun80494_ip = 221; continue _fun80494 }
 215:
        offset = -2;
 221:
        verify['marginTop'] = offset;
        tango['channelName'] = verify;
        tango = golf.bind(options)(tango);
        var _closure1_slot6 = tango;
        tango = 25;
        tango = oscar[tango];
        oscar = report.bind(entity)(tango);
        report = oscar.fileFinishedImporting;
        tango = 'modules/user_profile/native/UserProfileActivityVoiceChannel.tsx';
        tango = report.bind(oscar)(tango);
        mike = function(argFoo) { // Original name: UserProfileActivityVoiceChannel
            _fun80495: for(var _fun80495_ip = 0; ; ) switch(_fun80495_ip) {
 0:
                entity = argFoo;
                foxtrot = entity.guild;
                var _closure2_slot0 = foxtrot;
                update = entity.channel;
                var _closure2_slot1 = update;
                mike = entity.onAction;
                var _closure2_slot2 = mike;
                golf = entity.style;
                entity = _closure1_slot6;
                tango = undefined;
                source = entity.bind(tango)();
                mike = _closure1_slot1;
                zulu = _closure1_slot2;
                entity = 4;
                entity = zulu[entity];
                entity = mike.bind(tango)(entity);
                entity = entity.bind(tango)();
                entity = entity.newestAnalyticsLocation;
                var _closure2_slot3 = entity;
                report = _closure1_slot0;
                entity = 5;
                entity = zulu[entity];
                oscar = report.bind(tango)(entity);
                entity = oscar.useUserProfileAnalyticsContext;
                entity = entity.bind(oscar)();
                entity = entity.context;
                var _closure2_slot4 = entity;
                entity = 6;
                entity = zulu[entity];
                report = report.bind(tango)(entity);
                entity = report.useIsScreenReaderEnabled;
                report = entity.bind(report)();
                entity = 7;
                entity = zulu[entity];
                entity = mike.bind(tango)(entity);
                sizing = entity.bind(tango)(update);
                var _closure2_slot5 = sizing;
                entity = update.isGuildStageVoice;
                entity = entity.bind(update)();
                mike = _closure1_slot0;
                zulu = _closure1_slot2;
                if(entity) { _fun80495_ip = 204; continue _fun80495 }
 184:
                entity = 9;
                entity = zulu[entity];
                entity = mike.bind(tango)(entity);
                result = entity.VoiceNormalIcon;
                _fun80495_ip = 222; continue _fun80495;
 204:
                entity = 8;
                entity = zulu[entity];
                entity = mike.bind(tango)(entity);
                result = entity.StageIcon;
 222:
                zulu = _closure1_slot5;
                mike = _closure1_slot3;
                entity = {};
                options = source.container;
                oscar = new Array(2);
                oscar[0] = options;
                oscar[1] = golf;
                entity['style'] = oscar;
                options = _closure1_slot4;
                if(report) { _fun80495_ip = 387; continue _fun80495 }
 263:
                backup = _closure1_slot0;
                kilo = _closure1_slot2;
                report = 12;
                report = kilo[report];
                report = backup.bind(tango)(report);
                oscar = report.PressableOpacity;
                report = {};
                golf = 'button';
                report['accessibilityRole'] = golf;
                golf = foxtrot.name;
                report['accessibilityLabel'] = golf;
                golf = function() { // Original name: onPress
                    zulu = _closure2_slot2;
                    mike = {};
                    entity = 'PRESS_VOICE_CHANNEL_ICON';
                    mike['action'] = entity;
                    entity = undefined;
                    mike = zulu.bind(entity)(mike);
                    zulu = _closure1_slot1;
                    tango = _closure1_slot2;
                    mike = 13;
                    mike = tango[mike];
                    tango = zulu.bind(entity)(mike);
                    zulu = tango.open;
                    mike = {};
                    oscar = 'GUILD_NAME_TOAST';
                    mike['key'] = oscar;
                    report = _closure2_slot0;
                    report = report.name;
                    mike['content'] = report;
                    report = function() { // Original name: icon
                        tango = _closure1_slot4;
                        mike = _closure1_slot1;
                        golf = _closure1_slot2;
                        report = 11;
                        entity = golf[report];
                        zulu = undefined;
                        mike = mike.bind(zulu)(entity);
                        entity = {};
                        oscar = _closure1_slot0;
                        report = golf[report];
                        report = oscar.bind(zulu)(report);
                        report = report.GuildIconSizes;
                        report = report.XSMALL;
                        entity['size'] = report;
                        report = _closure2_slot0;
                        entity['guild'] = report;
                        entity = tango.bind(zulu)(mike, entity);
                        return entity;
                    };
                    mike['icon'] = report;
                    mike = zulu.bind(tango)(mike);
                    return entity;
                };
                report['onPress'] = golf;
                offset = _closure1_slot1;
                romeo = 11;
                golf = kilo[romeo];
                offset = offset.bind(tango)(golf);
                golf = {};
                romeo = kilo[romeo];
                romeo = backup.bind(tango)(romeo);
                romeo = romeo.GuildIconSizes;
                romeo = romeo.XXSMALL;
                golf['size'] = romeo;
                golf['guild'] = foxtrot;
                golf = options.bind(tango)(offset, golf);
                report['children'] = golf;
                oscar = options.bind(tango)(oscar, report);
                _fun80495_ip = 535; continue _fun80495;
 387:
                golf = _closure1_slot3;
                report = {};
                offset = true;
                report['accessible'] = offset;
                kilo = _closure1_slot0;
                output = _closure1_slot2;
                offset = 10;
                romeo = output[offset];
                romeo = kilo.bind(tango)(romeo);
                echo = romeo.intl;
                backup = echo.formatToPlainString;
                offset = output[offset];
                offset = kilo.bind(tango)(offset);
                offset = offset.t;
                romeo = offset.xm6W9P;
                offset = {};
                control = foxtrot.name;
                offset['guildName'] = control;
                offset = backup.bind(echo)(romeo, offset);
                report['accessibilityLabel'] = offset;
                romeo = _closure1_slot1;
                backup = 11;
                offset = output[backup];
                romeo = romeo.bind(tango)(offset);
                offset = {};
                backup = output[backup];
                backup = kilo.bind(tango)(backup);
                backup = backup.GuildIconSizes;
                backup = backup.XXSMALL;
                offset['size'] = backup;
                offset['guild'] = foxtrot;
                offset = options.bind(tango)(romeo, offset);
                report['children'] = offset;
                oscar = options.bind(tango)(golf, report);
 535:
                report = new Array(4);
                report[0] = oscar;
                options = _closure1_slot4;
                foxtrot = _closure1_slot0;
                backup = _closure1_slot2;
                oscar = 14;
                oscar = backup[oscar];
                oscar = foxtrot.bind(tango)(oscar);
                golf = oscar.ChevronSmallRightIcon;
                oscar = {'size': 'xxs', 'color': 'text-normal'};
                oscar = options.bind(tango)(golf, oscar);
                report[1] = oscar;
                kilo = _closure1_slot5;
                oscar = 12;
                golf = backup[oscar];
                golf = foxtrot.bind(tango)(golf);
                romeo = golf.PressableOpacity;
                golf = {};
                offset = source.channelButton;
                golf['style'] = offset;
                offset = 'button';
                golf['accessibilityRole'] = offset;
                output = _closure1_slot1;
                verify = 15;
                verify = backup[verify];
                output = output.bind(tango)(verify);
                verify = {};
                verify['channel'] = update;
                verify = output.bind(tango)(verify);
                golf['accessibilityLabel'] = verify;
                verify = 10;
                output = backup[verify];
                output = foxtrot.bind(tango)(output);
                control = output.intl;
                echo = control.string;
                output = backup[verify];
                output = foxtrot.bind(tango)(output);
                output = output.t;
                output = output.9C444u;
                output = echo.bind(control)(output);
                golf['accessibilityHint'] = output;
                output = function() { // Original name: onPress
                    tango = _closure2_slot2;
                    mike = {};
                    entity = 'OPEN_VOICE_CHANNEL';
                    mike['action'] = entity;
                    entity = undefined;
                    mike = tango.bind(entity)(mike);
                    oscar = _closure1_slot0;
                    tango = _closure1_slot2;
                    report = 16;
                    report = tango[report];
                    golf = oscar.bind(entity)(report);
                    oscar = golf.openGuildVoiceModal;
                    report = _closure2_slot1;
                    zulu = _closure2_slot3;
                    zulu = oscar.bind(golf)(report, zulu);
                    zulu = _closure1_slot1;
                    mike = 17;
                    mike = tango[mike];
                    zulu = zulu.bind(entity)(mike);
                    mike = zulu.hideActionSheet;
                    mike = mike.bind(zulu)();
                    return entity;
                };
                golf['onPress'] = output;
                output = {'size': 'xxs', 'color': 'text-normal'};
                result = options.bind(tango)(result, output);
                output = new Array(2);
                output[0] = result;
                result = 18;
                result = backup[result];
                result = foxtrot.bind(tango)(result);
                echo = result.Text;
                result = {'style': null, 'variant': 'text-xs/normal', 'lineClamp': 1};
                source = source.channelName;
                result['style'] = source;
                update = update.name;
                result['children'] = update;
                result = options.bind(tango)(echo, result);
                output[1] = result;
                golf['children'] = output;
                golf = kilo.bind(tango)(romeo, golf);
                report[2] = golf;
                oscar = backup[oscar];
                oscar = foxtrot.bind(tango)(oscar);
                golf = oscar.PressableOpacity;
                oscar = {};
                oscar['accessibilityRole'] = offset;
                offset = backup[verify];
                offset = foxtrot.bind(tango)(offset);
                kilo = offset.intl;
                romeo = kilo.formatToPlainString;
                verify = backup[verify];
                verify = foxtrot.bind(tango)(verify);
                verify = verify.t;
                offset = verify.e95u3N;
                verify = {};
                output = sizing.length;
                verify['count'] = output;
                verify = romeo.bind(kilo)(offset, verify);
                oscar['accessibilityLabel'] = verify;
                verify = function() { // Original name: onPress
                    tango = _closure2_slot2;
                    zulu = {};
                    entity = 'PRESS_VOICE_CHANNEL_AVATARS';
                    zulu['action'] = entity;
                    entity = undefined;
                    zulu = tango.bind(entity)(zulu);
                    oscar = _closure1_slot1;
                    zulu = _closure1_slot2;
                    report = 17;
                    report = zulu[report];
                    golf = oscar.bind(entity)(report);
                    oscar = golf.openLazy;
                    report = _closure1_slot0;
                    tango = 20;
                    tango = zulu[tango];
                    report = report.bind(entity)(tango);
                    tango = 19;
                    tango = zulu[tango];
                    zulu = zulu.paths;
                    yankee = report.bind(entity)(tango, zulu);
                    tango = {};
                    zulu = _closure2_slot5;
                    tango['users'] = zulu;
                    mike = _closure2_slot1;
                    tango['channel'] = mike;
                    mike = function(argFoo) { // Original name: onPressUser
                        mike = _closure1_slot1;
                        zulu = _closure1_slot2;
                        entity = 21;
                        entity = zulu[entity];
                        zulu = undefined;
                        mike = mike.bind(zulu)(entity);
                        entity = {};
                        oscar = _closure2_slot4;
                        golf = entity;
                        tango = copyDataProperties(golf, oscar);
                        report = argFoo;
                        tango = 'userId';
                        entity[tango] = report;
                        entity = mike.bind(zulu)(entity);
                        return entity;
                    };
                    tango['onPressUser'] = mike;
                    offset = 'UserProfileActivityVoiceChannelUsers';
                    options = 'stack';
                    romeo = golf;
                    verify = tango;
                    mike = romeo[oscar](yankee, offset, verify, options, golf);
                    return entity;
                };
                oscar['onPress'] = verify;
                verify = 22;
                verify = backup[verify];
                verify = foxtrot.bind(tango)(verify);
                offset = verify.AvatarPile;
                verify = {};
                romeo = 23;
                romeo = backup[romeo];
                romeo = foxtrot.bind(tango)(romeo);
                romeo = romeo.AvatarSizes;
                romeo = romeo.SIZE_16;
                verify['size'] = romeo;
                romeo = sizing.length;
                verify['totalCount'] = romeo;
                foxtrot = sizing.map;
                romeo = function(argFoo) {
                    entity = argFoo;
                    entity = entity.username;
                    return entity;
                };
                romeo = foxtrot.bind(sizing)(romeo);
                verify['names'] = romeo;
                romeo = sizing.length;
                kilo = 3;
                foxtrot = sizing;
                if(!(!(romeo <= kilo))) { _fun80495_ip = 1024; continue _fun80495 }
 1011:
                backup = sizing.slice;
                romeo = 0;
                foxtrot = backup.bind(sizing)(romeo, kilo);
 1024:
                romeo = foxtrot.map;
                yankee = function(argFoo) {
                    entity = argFoo;
                    report = _closure1_slot4;
                    zulu = _closure1_slot1;
                    options = _closure1_slot2;
                    mike = 24;
                    mike = options[mike];
                    tango = undefined;
                    zulu = zulu.bind(tango)(mike);
                    mike = {};
                    golf = _closure1_slot0;
                    oscar = 23;
                    oscar = options[oscar];
                    oscar = golf.bind(tango)(oscar);
                    oscar = oscar.AvatarSizes;
                    oscar = oscar.SIZE_16;
                    mike['size'] = oscar;
                    golf = _closure2_slot1;
                    mike['channel'] = golf;
                    oscar = _closure2_slot0;
                    oscar = oscar.id;
                    mike['guildId'] = oscar;
                    mike['user'] = entity;
                    entity = entity.id;
                    entity = report.bind(tango)(zulu, mike, entity);
                    return entity;
                };
                yankee = romeo.bind(foxtrot)(yankee);
                verify['children'] = yankee;
                verify = options.bind(tango)(offset, verify);
                oscar['children'] = verify;
                oscar = options.bind(tango)(golf, oscar);
                report[3] = oscar;
                entity['children'] = report;
                entity = zulu.bind(tango)(mike, entity);
                return entity;
            }
        };
        zulu['default'] = mike;
        return entity;
    }
})();