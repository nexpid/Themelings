// app/modules/user_profile/native/UserProfileSection.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    report = argBar;
    yankee = argBaz;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    var _closure1_slot1 = oscard;
    entity = global;
    option = entity.Object;
    golfie = option.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(option)(zuuluu, entity, tangon);
    entity = 0;
    golfie = oscard[entity];
    tangon = argCor;
    entity = undefined;
    tangon = tangon.bind(entity)(golfie);
    romeon = 1;
    tangon = oscard[romeon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.View;
    var _closure1_slot2 = tangon;
    tangon = 2;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    golfie = tangon.jsx;
    var _closure1_slot3 = golfie;
    tangon = tangon.jsxs;
    var _closure1_slot4 = tangon;
    tangon = 3;
    tangon = oscard[tangon];
    option = report.bind(entity)(tangon);
    golfie = option.createStyles;
    tangon = {};
    verify = {};
    offset = 4;
    verify['marginLeft'] = offset;
    tangon['guildIcon'] = verify;
    foxtra = 'row';
    verify = {'flexDirection': 'row', 'marginBottom': 12, 'justifyContent': 'space-between'};
    tangon['titleContainer'] = verify;
    verify = {};
    verify['flexDirection'] = foxtra;
    tangon['title'] = verify;
    verify = {'marginHorizontal': 12, 'marginTop': 12, 'marginBottom': 8};
    tangon['section'] = verify;
    verify = {};
    verify['borderWidth'] = romeon;
    romeon = oscard[offset];
    romeon = yankee.bind(entity)(romeon);
    romeon = romeon.radii;
    romeon = romeon.sm;
    verify['borderRadius'] = romeon;
    offset = oscard[offset];
    offset = yankee.bind(entity)(offset);
    offset = offset.colors;
    offset = offset.BACKGROUND_MODIFIER_ACCENT;
    verify['borderColor'] = offset;
    tangon['contentContainer'] = verify;
    tangon = golfie.bind(option)(tangon);
    var _closure1_slot5 = tangon;
    tangon = 10;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/user_profile/native/UserProfileSection.tsx';
    tangon = report.bind(oscard)(tangon);
    michal = function(argFoo) { // Original name: UserProfileSection
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            zuuluu = argFoo;
            update = zuuluu.title;
            output = zuuluu.headerIcon;
            kiloes = zuuluu.trailingIcon;
            romeon = zuuluu.showContainer;
            verify = zuuluu.children;
            option = zuuluu.style;
            michal = {'title': 0, 'headerIcon': 0, 'trailingIcon': 0, 'showContainer': 0, 'children': 0, 'style': 0};
            offset = null;
            sequen = michal;
            vacuum = null;
            entity = silentSetPrototypeOf(sequen, vacuum);
            sequen = {};
            vacuum = zuuluu;
            ctrled = michal;
            oscard = copyDataProperties(sequen, vacuum, ctrled);
            entity = _closure1_slot5;
            tangon = undefined;
            sizing = entity.bind(tangon)();
            zuuluu = _closure1_slot0;
            golfie = _closure1_slot1;
            entity = 5;
            entity = golfie[entity];
            michal = zuuluu.bind(tangon)(entity);
            entity = michal.useThemeContext;
            entity = entity.bind(michal)();
            backup = entity.theme;
            michal = entity.primaryColor;
            entity = 6;
            entity = golfie[entity];
            zuuluu = zuuluu.bind(tangon)(entity);
            entity = zuuluu.useProfileThemeValues;
            entity = entity.bind(zuuluu)(backup);
            yankee = {};
            vacuum = sizing.contentContainer;
            sequen = yankee;
            zuuluu = copyDataProperties(sequen, vacuum);
            if(!(offset != michal)) { _fun00002_ip = 173; continue _fun00001 }
 169:
            if(!(offset == entity)) { _fun00002_ip = 187; continue _fun00001 }
 173:
            michal = sizing.contentContainer;
            michal = michal.borderColor;
            _fun00002_ip = 247; continue _fun00001;
 187:
            result = _closure1_slot0;
            echoed = _closure1_slot1;
            zuuluu = 7;
            zuuluu = echoed[zuuluu];
            foxtra = result.bind(tangon)(zuuluu);
            golfie = foxtra.hexOpacityToRgba;
            zuuluu = 8;
            zuuluu = echoed[zuuluu];
            zuuluu = result.bind(tangon)(zuuluu);
            zuuluu = zuuluu.DIVIDER_COLORS;
            zuuluu = zuuluu[backup];
            entity = entity.dividerOpacity;
            michal = golfie.bind(foxtra)(zuuluu, entity);
 247:
            entity = 'borderColor';
            yankee[entity] = michal;
            zuuluu = _closure1_slot4;
            michal = _closure1_slot2;
            entity = {};
            foxtra = sizing.section;
            golfie = new Array(2);
            golfie[0] = foxtra;
            golfie[1] = option;
            entity['style'] = golfie;
            sequen = entity;
            vacuum = oscard;
            oscard = copyDataProperties(sequen, vacuum);
            oscard = offset != update;
            golfie = null;
            if(!oscard) { _fun00002_ip = 437; continue _fun00001 }
 309:
            foxtra = _closure1_slot4;
            option = _closure1_slot2;
            oscard = {};
            backup = sizing.titleContainer;
            oscard['style'] = backup;
            backup = {};
            sizing = sizing.title;
            backup['style'] = sizing;
            echoed = _closure1_slot3;
            result = _closure1_slot0;
            source = _closure1_slot1;
            sizing = 9;
            sizing = source[sizing];
            sizing = result.bind(tangon)(sizing);
            result = sizing.Text;
            sizing = {'variant': 'eyebrow', 'accessibilityRole': 'header'};
            sizing['children'] = update;
            result = echoed.bind(tangon)(result, sizing);
            sizing = new Array(2);
            sizing[0] = result;
            sizing[1] = output;
            backup['children'] = sizing;
            sizing = foxtra.bind(tangon)(option, backup);
            backup = new Array(2);
            backup[0] = sizing;
            backup[1] = kiloes;
            oscard['children'] = backup;
            golfie = foxtra.bind(tangon)(option, oscard);
 437:
            oscard = new Array(2);
            oscard[0] = golfie;
            option = _closure1_slot3;
            golfie = _closure1_slot2;
            report = {};
            offset = null;
            if(!romeon) { _fun00002_ip = 463; continue _fun00001 }
 460:
            offset = yankee;
 463:
            report['style'] = offset;
            report['children'] = verify;
            report = option.bind(tangon)(golfie, report);
            oscard[1] = report;
            report = 'children';
            entity[report] = oscard;
            entity = zuuluu.bind(tangon)(michal, entity);
            return entity;
        }
    };
    zuuluu['default'] = michal;
    return entity;
})();