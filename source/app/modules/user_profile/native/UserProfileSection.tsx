// app/modules/user_profile/native/UserProfileSection.tsx
export default (function(argFoo, argBar, argBaz, argCorge, _, argFred, argPlugh) {
    report = argBar;
    yankee = argBaz;
    zulu = argFred;
    oscar = argPlugh;
    var _closure1_slot0 = report;
    var _closure1_slot1 = oscar;
    entity = global;
    options = entity.Object;
    golf = options.defineProperty;
    tango = {};
    entity = true;
    tango['value'] = entity;
    entity = '__esModule';
    entity = golf.bind(options)(zulu, entity, tango);
    entity = 0;
    golf = oscar[entity];
    tango = argCorge;
    entity = undefined;
    tango = tango.bind(entity)(golf);
    romeo = 1;
    tango = oscar[romeo];
    tango = report.bind(entity)(tango);
    tango = tango.View;
    var _closure1_slot2 = tango;
    tango = 2;
    golf = oscar[tango];
    golf = report.bind(entity)(golf);
    golf = golf.jsx;
    var _closure1_slot3 = golf;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.jsxs;
    var _closure1_slot4 = tango;
    tango = 3;
    tango = oscar[tango];
    options = report.bind(entity)(tango);
    golf = options.createStyles;
    tango = {};
    verify = {};
    offset = 4;
    verify['marginLeft'] = offset;
    tango['guildIcon'] = verify;
    foxtrot = 'row';
    verify = {'flexDirection': 'row', 'marginBottom': 12, 'justifyContent': 'space-between'};
    tango['titleContainer'] = verify;
    verify = {};
    verify['flexDirection'] = foxtrot;
    tango['title'] = verify;
    verify = {'marginHorizontal': 12, 'marginTop': 12, 'marginBottom': 8};
    tango['section'] = verify;
    verify = {};
    verify['borderWidth'] = romeo;
    romeo = oscar[offset];
    romeo = yankee.bind(entity)(romeo);
    romeo = romeo.radii;
    romeo = romeo.sm;
    verify['borderRadius'] = romeo;
    offset = oscar[offset];
    offset = yankee.bind(entity)(offset);
    offset = offset.colors;
    offset = offset.BACKGROUND_MODIFIER_ACCENT;
    verify['borderColor'] = offset;
    tango['contentContainer'] = verify;
    tango = golf.bind(options)(tango);
    var _closure1_slot5 = tango;
    tango = 10;
    tango = oscar[tango];
    oscar = report.bind(entity)(tango);
    report = oscar.fileFinishedImporting;
    tango = 'modules/user_profile/native/UserProfileSection.tsx';
    tango = report.bind(oscar)(tango);
    mike = function(argFoo) { // Original name: UserProfileSection
        _fun90446: for(var _fun90446_ip = 0; ; ) switch(_fun90446_ip) {
 0:
            zulu = argFoo;
            update = zulu.title;
            output = zulu.headerIcon;
            kilo = zulu.trailingIcon;
            romeo = zulu.showContainer;
            verify = zulu.children;
            options = zulu.style;
            mike = {'title': 0, 'headerIcon': 0, 'trailingIcon': 0, 'showContainer': 0, 'children': 0, 'style': 0};
            offset = null;
            sequence = mike;
            vacuum = null;
            entity = silentSetPrototypeOf(sequence, vacuum);
            sequence = {};
            vacuum = zulu;
            control = mike;
            oscar = copyDataProperties(sequence, vacuum, control);
            entity = _closure1_slot5;
            tango = undefined;
            sizing = entity.bind(tango)();
            zulu = _closure1_slot0;
            golf = _closure1_slot1;
            entity = 5;
            entity = golf[entity];
            mike = zulu.bind(tango)(entity);
            entity = mike.useThemeContext;
            entity = entity.bind(mike)();
            backup = entity.theme;
            mike = entity.primaryColor;
            entity = 6;
            entity = golf[entity];
            zulu = zulu.bind(tango)(entity);
            entity = zulu.useProfileThemeValues;
            entity = entity.bind(zulu)(backup);
            yankee = {};
            vacuum = sizing.contentContainer;
            sequence = yankee;
            zulu = copyDataProperties(sequence, vacuum);
            if(!(offset != mike)) { _fun90446_ip = 174; continue _fun90446 }
 170:
            if(!(offset == entity)) { _fun90446_ip = 188; continue _fun90446 }
 174:
            mike = sizing.contentContainer;
            mike = mike.borderColor;
            _fun90446_ip = 248; continue _fun90446;
 188:
            result = _closure1_slot0;
            echo = _closure1_slot1;
            zulu = 7;
            zulu = echo[zulu];
            foxtrot = result.bind(tango)(zulu);
            golf = foxtrot.hexOpacityToRgba;
            zulu = 8;
            zulu = echo[zulu];
            zulu = result.bind(tango)(zulu);
            zulu = zulu.DIVIDER_COLORS;
            zulu = zulu[backup];
            entity = entity.dividerOpacity;
            mike = golf.bind(foxtrot)(zulu, entity);
 248:
            entity = 'borderColor';
            yankee[entity] = mike;
            zulu = _closure1_slot4;
            mike = _closure1_slot2;
            entity = {};
            foxtrot = sizing.section;
            golf = new Array(2);
            golf[0] = foxtrot;
            golf[1] = options;
            entity['style'] = golf;
            sequence = entity;
            vacuum = oscar;
            oscar = copyDataProperties(sequence, vacuum);
            oscar = offset != update;
            golf = null;
            if(!oscar) { _fun90446_ip = 438; continue _fun90446 }
 310:
            foxtrot = _closure1_slot4;
            options = _closure1_slot2;
            oscar = {};
            backup = sizing.titleContainer;
            oscar['style'] = backup;
            backup = {};
            sizing = sizing.title;
            backup['style'] = sizing;
            echo = _closure1_slot3;
            result = _closure1_slot0;
            source = _closure1_slot1;
            sizing = 9;
            sizing = source[sizing];
            sizing = result.bind(tango)(sizing);
            result = sizing.Text;
            sizing = {'variant': 'eyebrow', 'accessibilityRole': 'header'};
            sizing['children'] = update;
            result = echo.bind(tango)(result, sizing);
            sizing = new Array(2);
            sizing[0] = result;
            sizing[1] = output;
            backup['children'] = sizing;
            sizing = foxtrot.bind(tango)(options, backup);
            backup = new Array(2);
            backup[0] = sizing;
            backup[1] = kilo;
            oscar['children'] = backup;
            golf = foxtrot.bind(tango)(options, oscar);
 438:
            oscar = new Array(2);
            oscar[0] = golf;
            options = _closure1_slot3;
            golf = _closure1_slot2;
            report = {};
            offset = null;
            if(!romeo) { _fun90446_ip = 464; continue _fun90446 }
 461:
            offset = yankee;
 464:
            report['style'] = offset;
            report['children'] = verify;
            report = options.bind(tango)(golf, report);
            oscar[1] = report;
            report = 'children';
            entity[report] = oscar;
            entity = zulu.bind(tango)(mike, entity);
            return entity;
        }
    };
    zulu['default'] = mike;
    return entity;
})();