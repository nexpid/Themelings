// app/modules/user_profile/native/UserProfileUpsellCard.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    report = argBar;
    yankee = argBaz;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    var _closure1_slot1 = yankee;
    var _closure1_slot2 = oscard;
    entity = global;
    option = entity.Object;
    golfie = option.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(option)(zuuluu, entity, tangon);
    entity = 0;
    golfie = oscard[entity];
    tangon = argCor;
    entity = undefined;
    tangon = tangon.bind(entity)(golfie);
    foxtra = 1;
    tangon = oscard[foxtra];
    tangon = report.bind(entity)(tangon);
    golfie = tangon.View;
    var _closure1_slot3 = golfie;
    tangon = tangon.ScrollView;
    var _closure1_slot4 = tangon;
    tangon = 2;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    romeon = tangon.PROFILE_SIDE_PADDING;
    tangon = 3;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    golfie = tangon.Gradients;
    var _closure1_slot5 = golfie;
    tangon = tangon.HorizontalGradient;
    var _closure1_slot6 = tangon;
    tangon = 4;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    golfie = tangon.jsx;
    var _closure1_slot7 = golfie;
    tangon = tangon.jsxs;
    var _closure1_slot8 = tangon;
    tangon = 5;
    tangon = oscard[tangon];
    option = report.bind(entity)(tangon);
    golfie = option.createStyles;
    tangon = {};
    verify = {'marginTop': 8, 'flexShrink': 0, 'borderRadius': null, 'gap': 4};
    offset = 6;
    backup = oscard[offset];
    backup = yankee.bind(entity)(backup);
    backup = backup.radii;
    backup = backup.round;
    verify['borderRadius'] = backup;
    tangon['upsellButton'] = verify;
    verify = {'flexDirection': 'row', 'alignItems': 'center', 'gap': 4, 'marginBottom': 4};
    tangon['titleContainer'] = verify;
    verify = {'tintColor': null, 'width': 20, 'height': 20};
    backup = oscard[offset];
    backup = yankee.bind(entity)(backup);
    backup = backup.colors;
    backup = backup.HEADER_PRIMARY;
    verify['tintColor'] = backup;
    tangon['premiumWheelHeader'] = verify;
    verify = {'width': '100%', 'height': '100%', 'position': 'absolute', 'overflow': 'hidden'};
    tangon['linearGradient'] = verify;
    verify = {};
    romeon = romeon - foxtra;
    verify['marginHorizontal'] = romeon;
    tangon['outer'] = verify;
    verify = {};
    romeon = oscard[offset];
    romeon = yankee.bind(entity)(romeon);
    romeon = romeon.radii;
    romeon = romeon.lg;
    verify['borderRadius'] = romeon;
    offset = oscard[offset];
    offset = yankee.bind(entity)(offset);
    offset = offset.colors;
    offset = offset.BACKGROUND_FLOATING;
    verify['backgroundColor'] = offset;
    tangon['scroll'] = verify;
    verify = {'paddingVertical': 12, 'paddingHorizontal': 14};
    tangon['inner'] = verify;
    tangon = golfie.bind(option)(tangon);
    var _closure1_slot9 = tangon;
    tangon = 13;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/user_profile/native/UserProfileUpsellCard.tsx';
    tangon = report.bind(oscard)(tangon);
    michal = function(argFoo) { // Original name: UserProfileUpsellCard
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            entity = argFoo;
            offset = entity.style;
            verify = entity.children;
            kiloes = entity.ctaText;
            vacuum = entity.headerText;
            backup = entity.showLinearGradient;
            output = entity.onPress;
            entity = _closure1_slot9;
            tangon = undefined;
            result = entity.bind(tangon)();
            var _closure2_slot0 = result;
            zuuluu = _closure1_slot7;
            oscard = _closure1_slot1;
            report = _closure1_slot2;
            golfie = 7;
            entity = report[golfie];
            michal = oscard.bind(tangon)(entity);
            entity = {};
            option = 1;
            entity['borderWidth'] = option;
            yankee = result.outer;
            option = new Array(2);
            option[0] = yankee;
            option[1] = offset;
            entity['style'] = option;
            golfie = report[golfie];
            golfie = oscard.bind(tangon)(golfie);
            golfie = golfie.Direction;
            golfie = golfie.HORIZONTAL;
            entity['direction'] = golfie;
            golfie = _closure1_slot5;
            golfie = golfie.PREMIUM_TIER_2;
            entity['colors'] = golfie;
            config = 6;
            report = report[config];
            report = oscard.bind(tangon)(report);
            report = report.radii;
            report = report.lg;
            entity['borderRadius'] = report;
            golfie = _closure1_slot8;
            oscard = _closure1_slot4;
            report = {};
            option = false;
            report['bounces'] = option;
            option = result.scroll;
            report['style'] = option;
            option = result.inner;
            report['contentContainerStyle'] = option;
            offset = null;
            option = offset != vacuum;
            if(!option) { _fun00002_ip = 383; continue _fun00001 }
 228:
            sizing = _closure1_slot8;
            yankee = _closure1_slot3;
            option = {};
            echoed = result.titleContainer;
            option['style'] = echoed;
            ctrled = _closure1_slot7;
            source = _closure1_slot0;
            sequen = _closure1_slot2;
            echoed = 8;
            echoed = sequen[echoed];
            echoed = source.bind(tangon)(echoed);
            update = echoed.NitroWheelIcon;
            echoed = {};
            record = _closure1_slot1;
            config = sequen[config];
            config = record.bind(tangon)(config);
            config = config.colors;
            config = config.HEADER_PRIMARY;
            echoed['color'] = config;
            config = 'xs';
            echoed['size'] = config;
            update = ctrled.bind(tangon)(update, echoed);
            echoed = new Array(2);
            echoed[0] = update;
            update = 9;
            update = sequen[update];
            update = source.bind(tangon)(update);
            source = update.Text;
            update = {};
            sequen = 'heading-sm/bold';
            update['variant'] = sequen;
            update['children'] = vacuum;
            update = ctrled.bind(tangon)(source, update);
            echoed[1] = update;
            option['children'] = echoed;
            offset = sizing.bind(tangon)(yankee, option);
 383:
            option = new Array(3);
            option[0] = offset;
            option[1] = verify;
            yankee = _closure1_slot7;
            offset = _closure1_slot1;
            sizing = _closure1_slot2;
            verify = 10;
            verify = sizing[verify];
            offset = offset.bind(tangon)(verify);
            verify = {};
            result = result.upsellButton;
            verify['style'] = result;
            verify['onPress'] = output;
            verify['text'] = kiloes;
            kiloes = _closure1_slot0;
            romeon = 11;
            romeon = sizing[romeon];
            romeon = kiloes.bind(tangon)(romeon);
            romeon = romeon.ButtonColors;
            romeon = romeon.GREEN;
            verify['color'] = romeon;
            romeon = function() { // Original name: renderIcon
                tangon = _closure1_slot7;
                michal = _closure1_slot0;
                zuuluu = _closure1_slot2;
                entity = 8;
                entity = zuuluu[entity];
                zuuluu = undefined;
                entity = michal.bind(zuuluu)(entity);
                michal = entity.NitroWheelIcon;
                entity = {'color': 'white', 'size': 'xs'};
                entity = tangon.bind(zuuluu)(michal, entity);
                return entity;
            };
            verify['renderIcon'] = romeon;
            romeon = undefined;
            if(!backup) { _fun00002_ip = 495; continue _fun00001 }
 488:
            romeon = function() {
                tangon = _closure1_slot7;
                michal = _closure1_slot1;
                zuuluu = _closure1_slot2;
                entity = 12;
                entity = zuuluu[entity];
                zuuluu = undefined;
                michal = michal.bind(zuuluu)(entity);
                entity = {};
                oscard = _closure2_slot0;
                golfie = oscard.linearGradient;
                oscard = new Array(1);
                oscard[0] = golfie;
                entity['style'] = oscard;
                oscard = _closure1_slot6;
                golfie = oscard.START;
                entity['start'] = golfie;
                oscard = oscard.END;
                entity['end'] = oscard;
                report = _closure1_slot5;
                report = report.PREMIUM_TIER_2_TRI_COLOR;
                entity['colors'] = report;
                entity = tangon.bind(zuuluu)(michal, entity);
                return entity;
            };
 495:
            verify['renderLinearGradient'] = romeon;
            verify = yankee.bind(tangon)(offset, verify);
            option[2] = verify;
            report['children'] = option;
            report = golfie.bind(tangon)(oscard, report);
            entity['children'] = report;
            entity = zuuluu.bind(tangon)(michal, entity);
            return entity;
        }
    };
    zuuluu['default'] = michal;
    return entity;
})();