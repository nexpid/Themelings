// app/modules/user_profile/native/ChangeAvatarActionSheet.tsx
export default (function(argFoo, argBar, argBaz, argCorge, _, argFred, argPlugh) {
    report = argBar;
    yankee = argBaz;
    zulu = argFred;
    oscar = argPlugh;
    var _closure1_slot0 = report;
    var _closure1_slot1 = yankee;
    var _closure1_slot2 = oscar;
    entity = global;
    options = entity.Object;
    golf = options.defineProperty;
    tango = {};
    entity = true;
    tango['value'] = entity;
    entity = '__esModule';
    entity = golf.bind(options)(zulu, entity, tango);
    romeo = 0;
    golf = oscar[romeo];
    tango = argCorge;
    entity = undefined;
    tango = tango.bind(entity)(golf);
    tango = 1;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.View;
    var _closure1_slot3 = tango;
    tango = 2;
    tango = oscar[tango];
    tango = yankee.bind(entity)(tango);
    var _closure1_slot4 = tango;
    tango = 3;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.AnalyticsObjects;
    var _closure1_slot5 = tango;
    tango = 4;
    golf = oscar[tango];
    golf = report.bind(entity)(golf);
    golf = golf.jsx;
    var _closure1_slot6 = golf;
    golf = oscar[tango];
    golf = report.bind(entity)(golf);
    golf = golf.jsxs;
    var _closure1_slot7 = golf;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.Fragment;
    var _closure1_slot8 = tango;
    tango = 5;
    tango = oscar[tango];
    options = report.bind(entity)(tango);
    golf = options.createStyles;
    tango = {};
    verify = {};
    offset = 6;
    foxtrot = oscar[offset];
    foxtrot = yankee.bind(entity)(foxtrot);
    foxtrot = foxtrot.spacing;
    foxtrot = foxtrot.PX_8;
    verify['marginLeft'] = foxtrot;
    tango['nitroWheel'] = verify;
    verify = {};
    foxtrot = oscar[offset];
    foxtrot = yankee.bind(entity)(foxtrot);
    foxtrot = foxtrot.colors;
    foxtrot = foxtrot.TEXT_NORMAL;
    verify['color'] = foxtrot;
    tango['sublabel'] = verify;
    verify = {'marginBottom': 4, 'color': null, 'alignItems': 'center', 'flexDirection': 'row'};
    foxtrot = oscar[offset];
    foxtrot = yankee.bind(entity)(foxtrot);
    foxtrot = foxtrot.colors;
    foxtrot = foxtrot.INTERACTIVE_ACTIVE;
    verify['color'] = foxtrot;
    tango['label'] = verify;
    verify = {};
    foxtrot = oscar[offset];
    foxtrot = yankee.bind(entity)(foxtrot);
    foxtrot = foxtrot.colors;
    foxtrot = foxtrot.TEXT_DANGER;
    verify['color'] = foxtrot;
    tango['remove'] = verify;
    verify = {};
    foxtrot = oscar[offset];
    foxtrot = yankee.bind(entity)(foxtrot);
    foxtrot = foxtrot.spacing;
    foxtrot = foxtrot.PX_12;
    verify['marginTop'] = foxtrot;
    foxtrot = oscar[offset];
    foxtrot = yankee.bind(entity)(foxtrot);
    foxtrot = foxtrot.spacing;
    foxtrot = foxtrot.PX_8;
    verify['marginBottom'] = foxtrot;
    tango['upsellButton'] = verify;
    verify = {'flexDirection': 'row', 'alignItems': 'flex-end'};
    tango['upsellTitleContainer'] = verify;
    verify = {};
    verify['flex'] = romeo;
    tango['titleWrapper'] = verify;
    verify = {};
    romeo = 'flex-start';
    verify['justifyContent'] = romeo;
    tango['titleContainer'] = verify;
    verify = {};
    offset = oscar[offset];
    offset = yankee.bind(entity)(offset);
    offset = offset.colors;
    offset = offset.TEXT_MUTED;
    verify['tintColor'] = offset;
    tango['disabledNitroWheel'] = verify;
    tango = golf.bind(options)(tango);
    var _closure1_slot9 = tango;
    tango = 17;
    tango = oscar[tango];
    oscar = report.bind(entity)(tango);
    report = oscar.fileFinishedImporting;
    tango = 'modules/user_profile/native/ChangeAvatarActionSheet.tsx';
    tango = report.bind(oscar)(tango);
    mike = function(argFoo) { // Original name: ChangeAvatarActionSheet
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            entity = argFoo;
            output = entity.handleUploadAvatarSelect;
            backup = entity.handleRemoveAvatarSelect;
            vacuum = entity.handleUploadGIFAvatarSelect;
            result = entity.handleEditAvatarDecorationSelect;
            kilo = entity.showAnimatedAvatarUpsell;
            tango = undefined;
            if(!(kilo === tango)) { _fun00002_ip = 41; continue _fun00001 }
 39:
            kilo = false;
 41:
            offset = entity.showRemoveAvatar;
            if(!(offset === tango)) { _fun00002_ip = 53; continue _fun00001 }
 51:
            offset = false;
 53:
            entity = _closure1_slot9;
            echo = entity.bind(tango)();
            sizing = _closure1_slot0;
            verify = _closure1_slot2;
            entity = 7;
            entity = verify[entity];
            report = sizing.bind(tango)(entity);
            zulu = report.useStateFromStores;
            entity = _closure1_slot4;
            mike = new Array(1);
            mike[0] = entity;
            entity = function() {
                mike = _closure1_slot4;
                entity = mike.getCurrentUser;
                entity = entity.bind(mike)();
                return entity;
            };
            zulu = zulu.bind(report)(mike, entity);
            mike = _closure1_slot1;
            entity = 8;
            entity = verify[entity];
            mike = mike.bind(tango)(entity);
            entity = mike.isPremium;
            options = entity.bind(mike)(zulu);
            zulu = _closure1_slot7;
            entity = 9;
            entity = verify[entity];
            entity = sizing.bind(tango)(entity);
            mike = entity.ActionSheet;
            entity = {};
            golf = _closure1_slot6;
            report = 10;
            report = verify[report];
            report = sizing.bind(tango)(report);
            oscar = report.BottomSheetTitleHeader;
            report = {};
            source = 11;
            yankee = verify[source];
            yankee = sizing.bind(tango)(yankee);
            foxtrot = yankee.intl;
            yankee = foxtrot.string;
            verify = verify[source];
            verify = sizing.bind(tango)(verify);
            verify = verify.t;
            verify = verify.lqaIxM;
            verify = yankee.bind(foxtrot)(verify);
            report['title'] = verify;
            if(!options) { _fun00002_ip = 285; continue _fun00001 }
 247:
            foxtrot = _closure1_slot6;
            yankee = _closure1_slot0;
            sizing = _closure1_slot2;
            verify = 12;
            verify = sizing[verify];
            verify = yankee.bind(tango)(verify);
            yankee = verify.NitroWheelIcon;
            verify = {};
            options = foxtrot.bind(tango)(yankee, verify);
 285:
            report['trailing'] = options;
            options = echo.titleWrapper;
            report['titleWrapperStyle'] = options;
            options = echo.titleContainer;
            report['titleContainerStyle'] = options;
            oscar = golf.bind(tango)(oscar, report);
            report = new Array(2);
            report[0] = oscar;
            options = _closure1_slot7;
            config = _closure1_slot0;
            update = _closure1_slot2;
            oscar = 13;
            oscar = update[oscar];
            oscar = config.bind(tango)(oscar);
            golf = oscar.TableRowGroup;
            oscar = {};
            sizing = _closure1_slot6;
            yankee = 14;
            verify = update[yankee];
            verify = config.bind(tango)(verify);
            foxtrot = verify.TableRow;
            verify = {};
            control = update[source];
            control = config.bind(tango)(control);
            record = control.intl;
            sequence = record.string;
            control = update[source];
            control = config.bind(tango)(control);
            control = control.t;
            control = control.MsUY/f;
            control = sequence.bind(record)(control);
            verify['label'] = control;
            control = update[source];
            control = config.bind(tango)(control);
            sequence = control.intl;
            control = sequence.string;
            update = update[source];
            update = config.bind(tango)(update);
            update = update.t;
            update = update.r5hKOz;
            update = control.bind(sequence)(update);
            verify['subLabel'] = update;
            verify['onPress'] = output;
            foxtrot = sizing.bind(tango)(foxtrot, verify);
            verify = new Array(5);
            verify[0] = foxtrot;
            foxtrot = null;
            sizing = foxtrot != vacuum;
            if(!sizing) { _fun00002_ip = 511; continue _fun00001 }
 508:
            sizing = !kilo;
 511:
            if(!sizing) { _fun00002_ip = 601; continue _fun00001 }
 514:
            control = _closure1_slot6;
            context = _closure1_slot0;
            sequence = _closure1_slot2;
            output = sequence[yankee];
            output = context.bind(tango)(output);
            update = output.TableRow;
            output = {};
            config = sequence[source];
            config = context.bind(tango)(config);
            record = config.intl;
            config = record.string;
            sequence = sequence[source];
            sequence = context.bind(tango)(sequence);
            sequence = sequence.t;
            sequence = sequence.xsC+//;
            sequence = config.bind(record)(sequence);
            output['label'] = sequence;
            output['onPress'] = vacuum;
            sizing = control.bind(tango)(update, output);
 601:
            verify[1] = sizing;
            if(!kilo) { _fun00002_ip = 1057; continue _fun00001 }
 611:
            update = _closure1_slot6;
            output = _closure1_slot8;
            sizing = {};
            equality = _closure1_slot0;
            sierra = _closure1_slot2;
            control = sierra[yankee];
            control = equality.bind(tango)(control);
            vacuum = control.TableRow;
            control = {};
            config = _closure1_slot7;
            papa = _closure1_slot3;
            sequence = {};
            record = echo.upsellTitleContainer;
            sequence['style'] = record;
            record = 15;
            context = sierra[record];
            context = equality.bind(tango)(context);
            target = context.FormLabel;
            context = {};
            status = sierra[source];
            status = equality.bind(tango)(status);
            whiskey = status.intl;
            lima = whiskey.string;
            status = sierra[source];
            status = equality.bind(tango)(status);
            status = status.t;
            status = status.xZ0Woq;
            status = lima.bind(whiskey)(status);
            context['text'] = status;
            target = update.bind(tango)(target, context);
            context = new Array(2);
            context[0] = target;
            target = 12;
            target = sierra[target];
            target = equality.bind(tango)(target);
            status = target.NitroWheelIcon;
            target = {};
            lima = echo.nitroWheel;
            target['style'] = lima;
            lima = 'sm';
            target['size'] = lima;
            target = update.bind(tango)(status, target);
            context[1] = target;
            sequence['children'] = context;
            sequence = config.bind(tango)(papa, sequence);
            control['label'] = sequence;
            sequence = {};
            record = sierra[record];
            record = equality.bind(tango)(record);
            context = record.FormSubLabel;
            record = {};
            target = echo.sublabel;
            record['style'] = target;
            target = 3;
            record['numberOfLines'] = target;
            target = sierra[source];
            target = equality.bind(tango)(target);
            lima = target.intl;
            status = lima.string;
            target = sierra[source];
            target = equality.bind(tango)(target);
            target = target.t;
            target = target.L3UPqa;
            target = status.bind(lima)(target);
            record['text'] = target;
            context = update.bind(tango)(context, record);
            record = new Array(2);
            record[0] = context;
            context = {};
            target = echo.upsellButton;
            context['style'] = target;
            status = _closure1_slot1;
            target = 16;
            target = sierra[target];
            status = status.bind(tango)(target);
            target = {};
            lima = _closure1_slot5;
            lima = lima.ANIMATED_AVATAR;
            target['analyticsObject'] = lima;
            lima = sierra[source];
            lima = equality.bind(tango)(lima);
            whiskey = lima.intl;
            lima = whiskey.string;
            sierra = sierra[source];
            sierra = equality.bind(tango)(sierra);
            sierra = sierra.t;
            sierra = sierra.mr4K7O;
            sierra = lima.bind(whiskey)(sierra);
            target['label'] = sierra;
            target = update.bind(tango)(status, target);
            context['children'] = target;
            context = update.bind(tango)(papa, context);
            record[1] = context;
            sequence['children'] = record;
            sequence = config.bind(tango)(output, sequence);
            control['subLabel'] = sequence;
            control = update.bind(tango)(vacuum, control);
            sizing['children'] = control;
            kilo = update.bind(tango)(output, sizing);
 1057:
            verify[2] = kilo;
            foxtrot = foxtrot != result;
            if(!foxtrot) { _fun00002_ip = 1214; continue _fun00001 }
 1071:
            output = _closure1_slot6;
            papa = _closure1_slot0;
            config = _closure1_slot2;
            kilo = config[yankee];
            kilo = papa.bind(tango)(kilo);
            sizing = kilo.TableRow;
            kilo = {};
            control = _closure1_slot3;
            update = {};
            vacuum = echo.upsellTitleContainer;
            update['style'] = vacuum;
            vacuum = 15;
            vacuum = config[vacuum];
            vacuum = papa.bind(tango)(vacuum);
            sequence = vacuum.FormLabel;
            vacuum = {};
            record = config[source];
            record = papa.bind(tango)(record);
            context = record.intl;
            record = context.string;
            config = config[source];
            config = papa.bind(tango)(config);
            config = config.t;
            config = config.Tna/TU;
            config = record.bind(context)(config);
            vacuum['text'] = config;
            vacuum = output.bind(tango)(sequence, vacuum);
            update['children'] = vacuum;
            update = output.bind(tango)(control, update);
            kilo['label'] = update;
            kilo['onPress'] = result;
            foxtrot = output.bind(tango)(sizing, kilo);
 1214:
            verify[3] = foxtrot;
            if(!offset) { _fun00002_ip = 1370; continue _fun00001 }
 1224:
            foxtrot = _closure1_slot6;
            update = _closure1_slot0;
            output = _closure1_slot2;
            yankee = output[yankee];
            yankee = update.bind(tango)(yankee);
            romeo = yankee.TableRow;
            yankee = {};
            kilo = 15;
            kilo = output[kilo];
            kilo = update.bind(tango)(kilo);
            sizing = kilo.FormLabel;
            kilo = {};
            control = echo.label;
            result = new Array(2);
            result[0] = control;
            echo = echo.remove;
            result[1] = echo;
            kilo['style'] = result;
            result = output[source];
            result = update.bind(tango)(result);
            echo = result.intl;
            result = echo.string;
            output = output[source];
            output = update.bind(tango)(output);
            output = output.t;
            output = output.twB3f3;
            output = result.bind(echo)(output);
            kilo['text'] = output;
            kilo = foxtrot.bind(tango)(sizing, kilo);
            yankee['label'] = kilo;
            yankee['onPress'] = backup;
            offset = foxtrot.bind(tango)(romeo, yankee);
 1370:
            verify[4] = offset;
            oscar['children'] = verify;
            oscar = options.bind(tango)(golf, oscar);
            report[1] = oscar;
            entity['children'] = report;
            entity = zulu.bind(tango)(mike, entity);
            return entity;
        }
    };
    zulu['default'] = mike;
    return entity;
})();