// app/modules/user_profile/native/UserProfileSharedStyles.tsx
export default (function(_, argBar, argBaz, __, ___, argFred, argPlugh) {
    report = argBar;
    zulu = argFred;
    oscar = argPlugh;
    entity = global;
    golf = entity.Object;
    tango = golf.defineProperty;
    mike = {};
    entity = true;
    mike['value'] = entity;
    entity = '__esModule';
    entity = tango.bind(golf)(zulu, entity, mike);
    sizing = 0;
    mike = oscar[sizing];
    entity = undefined;
    mike = report.bind(entity)(mike);
    foxtrot = mike.AVATAR_CONTAINER_SIZE;
    romeo = mike.AVATAR_CUSTOM_STATUS_GAP;
    verify = mike.AVATAR_PADDING;
    offset = mike.CARD_PADDING;
    yankee = mike.PROFILE_CONTENT_BOTTOM_PADDING;
    kilo = 1;
    mike = oscar[kilo];
    mike = report.bind(entity)(mike);
    backup = mike.SIDE_PADDING;
    result = 2;
    mike = oscar[result];
    options = report.bind(entity)(mike);
    golf = options.createStyles;
    mike = {};
    tango = {};
    output = 'absolute';
    tango['position'] = output;
    output = -foxtrot;
    output = output / result;
    tango['top'] = output;
    output = backup - verify;
    tango['left'] = output;
    mike['avatarPosition'] = tango;
    tango = {};
    tango['width'] = foxtrot;
    tango['height'] = foxtrot;
    tango['borderRadius'] = foxtrot;
    tango['padding'] = verify;
    tango['zIndex'] = sizing;
    mike['avatarBackground'] = tango;
    tango = {};
    tango['margin'] = verify;
    tango['zIndex'] = kilo;
    mike['avatar'] = tango;
    tango = {};
    tango['flexGrow'] = kilo;
    tango['paddingHorizontal'] = backup;
    tango['paddingBottom'] = yankee;
    yankee = 'visible';
    tango['overflow'] = yankee;
    mike['profileContent'] = tango;
    tango = {'marginTop': 6, 'marginBottom': 12};
    yankee = 12;
    verify = foxtrot - verify;
    verify = verify + romeo;
    tango['marginLeft'] = verify;
    mike['customStatusBubble'] = tango;
    verify = {};
    tango = 4;
    verify['marginBottom'] = tango;
    mike['emojiOnlyCustomStatusBubble'] = verify;
    verify = {'rowGap': 12, 'paddingBottom': 12};
    mike['primaryInfo'] = verify;
    verify = {};
    verify['paddingVertical'] = yankee;
    mike['primaryButtons'] = verify;
    yankee = 16;
    verify = {'flexDirection': 'row', 'position': 'absolute', 'top': 16, 'right': 16, 'gap': 8, 'zIndex': 2};
    mike['bannerButtons'] = verify;
    verify = {};
    verify['rowGap'] = yankee;
    mike['cards'] = verify;
    verify = {};
    yankee = 3;
    romeo = oscar[yankee];
    yankee = argBaz;
    yankee = yankee.bind(entity)(romeo);
    yankee = yankee.radii;
    yankee = yankee.lg;
    verify['borderRadius'] = yankee;
    verify['padding'] = offset;
    mike['card'] = verify;
    mike = golf.bind(options)(mike);
    tango = oscar[tango];
    oscar = report.bind(entity)(tango);
    report = oscar.fileFinishedImporting;
    tango = 'modules/user_profile/native/UserProfileSharedStyles.tsx';
    tango = report.bind(oscar)(tango);
    zulu['default'] = mike;
    return entity;
})();