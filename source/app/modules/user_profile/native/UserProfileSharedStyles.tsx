// app/modules/user_profile/native/UserProfileSharedStyles.tsx
export default (function(_, argBar, argBaz, __, ___, argFre, argPlu) {
    report = argBar;
    zuuluu = argFre;
    oscard = argPlu;
    entity = global;
    golfie = entity.Object;
    tangon = golfie.defineProperty;
    michal = {};
    entity = true;
    michal['value'] = entity;
    entity = '__esModule';
    entity = tangon.bind(golfie)(zuuluu, entity, michal);
    output = 0;
    michal = oscard[output];
    entity = undefined;
    michal = report.bind(entity)(michal);
    backup = michal.AVATAR_CONTAINER_SIZE;
    foxtra = michal.AVATAR_CUSTOM_STATUS_GAP;
    romeon = michal.AVATAR_PADDING;
    verify = michal.CARD_PADDING;
    yankee = michal.PROFILE_CONTENT_BOTTOM_PADDING;
    kiloes = michal.PROFILE_SIDE_PADDING;
    sizing = 1;
    michal = oscard[sizing];
    golfie = report.bind(entity)(michal);
    tangon = golfie.createStyles;
    michal = {};
    option = {};
    offset = 'absolute';
    option['position'] = offset;
    result = -backup;
    offset = 2;
    result = result / offset;
    option['top'] = result;
    result = kiloes - romeon;
    option['left'] = result;
    michal['avatarPosition'] = option;
    option = {};
    option['width'] = backup;
    option['height'] = backup;
    option['borderRadius'] = backup;
    option['padding'] = romeon;
    option['zIndex'] = output;
    michal['avatarBackground'] = option;
    option = {};
    option['margin'] = romeon;
    option['zIndex'] = sizing;
    michal['avatar'] = option;
    option = {};
    option['flexGrow'] = sizing;
    option['paddingHorizontal'] = kiloes;
    option['paddingBottom'] = yankee;
    yankee = 'visible';
    option['overflow'] = yankee;
    michal['profileContent'] = option;
    option = {'marginTop': 6, 'marginBottom': 12};
    yankee = 12;
    romeon = backup - romeon;
    romeon = romeon + foxtra;
    option['marginLeft'] = romeon;
    michal['customStatusBubble'] = option;
    option = {};
    romeon = 4;
    option['marginBottom'] = romeon;
    michal['emojiOnlyCustomStatusBubble'] = option;
    option = {'rowGap': 12, 'paddingBottom': 12};
    michal['primaryInfo'] = option;
    option = {};
    option['paddingVertical'] = yankee;
    michal['primaryButtons'] = option;
    yankee = 16;
    option = {'flexDirection': 'row', 'position': 'absolute', 'top': 16, 'right': 16, 'gap': 8, 'zIndex': 2};
    michal['bannerButtons'] = option;
    option = {};
    option['rowGap'] = yankee;
    michal['cards'] = option;
    option = {};
    yankee = oscard[offset];
    offset = argBaz;
    offset = offset.bind(entity)(yankee);
    offset = offset.radii;
    offset = offset.lg;
    option['borderRadius'] = offset;
    option['padding'] = verify;
    michal['card'] = option;
    michal = tangon.bind(golfie)(michal);
    tangon = 3;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/user_profile/native/UserProfileSharedStyles.tsx';
    tangon = report.bind(oscard)(tangon);
    zuuluu['default'] = michal;
    return entity;
})();