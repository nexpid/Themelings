// app/modules/user_profile/native/UserProfileMutualsActionSheet.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    report = argBar;
    yankee = argBaz;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    var _closure1_slot1 = yankee;
    var _closure1_slot2 = oscard;
    entity = function(argFoo) { // Original name: MutualFriendRow
        zuuluu = argFoo;
        entity = zuuluu.mutualFriend;
        entity = entity.user;
        var _closure2_slot0 = entity;
        offset = zuuluu.guildId;
        golfie = zuuluu.onPress;
        option = zuuluu.style;
        zuuluu = _closure1_slot11;
        report = undefined;
        verify = zuuluu.bind(report)();
        result = _closure1_slot0;
        yankee = _closure1_slot2;
        zuuluu = 8;
        zuuluu = yankee[zuuluu];
        tangon = result.bind(report)(zuuluu);
        zuuluu = tangon.useAvatarDecoration;
        sizing = zuuluu.bind(tangon)(entity);
        zuuluu = 9;
        zuuluu = yankee[zuuluu];
        romeon = result.bind(report)(zuuluu);
        tangon = romeon.useStateFromStoresObject;
        foxtra = _closure1_slot7;
        zuuluu = new Array(1);
        zuuluu[0] = foxtra;
        michal = function() {
            entity = {};
            oscard = _closure1_slot7;
            report = oscard.getStatus;
            michal = _closure2_slot0;
            tangon = michal.id;
            tangon = report.bind(oscard)(tangon);
            entity['status'] = tangon;
            tangon = _closure1_slot7;
            zuuluu = tangon.isMobileOnline;
            michal = michal.id;
            michal = zuuluu.bind(tangon)(michal);
            entity['isMobileOnline'] = michal;
            return entity;
        };
        michal = tangon.bind(romeon)(zuuluu, michal);
        kiloes = michal.status;
        backup = michal.isMobileOnline;
        tangon = _closure1_slot9;
        michal = 10;
        michal = yankee[michal];
        michal = result.bind(report)(michal);
        zuuluu = michal.FormRow;
        michal = {};
        michal['style'] = option;
        michal['onPress'] = golfie;
        foxtra = _closure1_slot9;
        golfie = _closure1_slot1;
        output = 11;
        option = yankee[output];
        romeon = golfie.bind(report)(option);
        option = {};
        option['user'] = entity;
        output = yankee[output];
        output = result.bind(report)(output);
        output = output.AvatarSizes;
        output = output.REFRESH_MEDIUM_32;
        option['size'] = output;
        option['avatarDecoration'] = sizing;
        option['status'] = kiloes;
        option['guildId'] = offset;
        option['isMobileOnline'] = backup;
        backup = true;
        option['autoStatusCutout'] = backup;
        option = foxtra.bind(report)(romeon, option);
        michal['leading'] = option;
        option = 12;
        option = yankee[option];
        romeon = golfie.bind(report)(option);
        option = romeon.getName;
        option = option.bind(romeon)(offset, report, entity);
        michal['label'] = option;
        option = _closure1_slot9;
        oscard = 13;
        oscard = yankee[oscard];
        golfie = golfie.bind(report)(oscard);
        oscard = {};
        yankee = 'UserProfileMutualsActionSheet';
        oscard['location'] = yankee;
        yankee = entity.id;
        oscard['userId'] = yankee;
        oscard['guildId'] = offset;
        verify = verify.activityStatusText;
        oscard['textStyle'] = verify;
        oscard = option.bind(report)(golfie, oscard);
        michal['subLabel'] = oscard;
        entity = entity.id;
        entity = tangon.bind(report)(zuuluu, michal, entity);
        return entity;
    };
    var _closure1_slot12 = entity;
    entity = function(argFoo) { // Original name: MutualGuildRow
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            michal = argFoo;
            zuuluu = michal.mutualGuild;
            entity = zuuluu.guild;
            foxtra = zuuluu.nick;
            backup = michal.user;
            golfie = michal.style;
            oscard = michal.onPress;
            michal = _closure1_slot11;
            report = undefined;
            verify = michal.bind(report)();
            zuuluu = backup.hasAvatarForGuild;
            michal = entity.id;
            romeon = zuuluu.bind(backup)(michal);
            tangon = _closure1_slot9;
            kiloes = _closure1_slot0;
            sizing = _closure1_slot2;
            michal = 10;
            michal = sizing[michal];
            michal = kiloes.bind(report)(michal);
            zuuluu = michal.FormRow;
            michal = {};
            michal['style'] = golfie;
            michal['onPress'] = oscard;
            option = _closure1_slot9;
            golfie = _closure1_slot1;
            offset = 14;
            oscard = sizing[offset];
            golfie = golfie.bind(report)(oscard);
            oscard = {};
            oscard['guild'] = entity;
            offset = sizing[offset];
            offset = kiloes.bind(report)(offset);
            offset = offset.GuildIconSizes;
            offset = offset.SMALL_32;
            oscard['size'] = offset;
            oscard = option.bind(report)(golfie, oscard);
            michal['leading'] = oscard;
            oscard = entity.toString;
            oscard = oscard.bind(entity)();
            michal['label'] = oscard;
            option = _closure1_slot10;
            golfie = _closure1_slot5;
            oscard = {};
            verify = verify.mutualGuildSubLabel;
            oscard['style'] = verify;
            offset = romeon;
            if(!romeon) { _fun00002_ip = 279; continue _fun00001 }
 205:
            sizing = _closure1_slot9;
            kiloes = _closure1_slot1;
            echoed = _closure1_slot2;
            output = 11;
            verify = echoed[output];
            kiloes = kiloes.bind(report)(verify);
            verify = {};
            result = _closure1_slot0;
            output = echoed[output];
            output = result.bind(report)(output);
            output = output.AvatarSizes;
            output = output.SIZE_16;
            verify['size'] = output;
            verify['user'] = backup;
            output = entity.id;
            verify['guildId'] = output;
            offset = sizing.bind(report)(kiloes, verify);
 279:
            verify = new Array(3);
            verify[0] = offset;
            offset = null;
            kiloes = offset != foxtra;
            if(!kiloes) { _fun00002_ip = 349; continue _fun00001 }
 296:
            result = _closure1_slot9;
            output = _closure1_slot0;
            echoed = _closure1_slot2;
            sizing = 15;
            sizing = echoed[sizing];
            sizing = output.bind(report)(sizing);
            output = sizing.Text;
            sizing = {'variant': 'text-xs/medium', 'color': 'text-secondary'};
            sizing['children'] = foxtra;
            kiloes = result.bind(report)(output, sizing);
 349:
            verify[1] = kiloes;
            offset = offset == foxtra;
            if(!offset) { _fun00002_ip = 363; continue _fun00001 }
 360:
            offset = romeon;
 363:
            if(!offset) { _fun00002_ip = 424; continue _fun00001 }
 366:
            foxtra = _closure1_slot9;
            romeon = _closure1_slot0;
            kiloes = _closure1_slot2;
            yankee = 15;
            yankee = kiloes[yankee];
            yankee = romeon.bind(report)(yankee);
            romeon = yankee.Text;
            yankee = {'variant': 'text-xs/medium', 'color': 'text-secondary'};
            backup = backup.username;
            yankee['children'] = backup;
            offset = foxtra.bind(report)(romeon, yankee);
 424:
            verify[2] = offset;
            oscard['children'] = verify;
            oscard = option.bind(report)(golfie, oscard);
            michal['subLabel'] = oscard;
            entity = entity.id;
            entity = tangon.bind(report)(zuuluu, michal, entity);
            return entity;
        }
    };
    var _closure1_slot13 = entity;
    entity = global;
    option = entity.Object;
    golfie = option.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(option)(zuuluu, entity, tangon);
    entity = 0;
    tangon = oscard[entity];
    entity = undefined;
    tangon = yankee.bind(entity)(tangon);
    var _closure1_slot3 = tangon;
    tangon = 1;
    golfie = oscard[tangon];
    tangon = argCor;
    tangon = tangon.bind(entity)(golfie);
    var _closure1_slot4 = tangon;
    tangon = 2;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    golfie = tangon.View;
    var _closure1_slot5 = golfie;
    tangon = tangon.ActivityIndicator;
    var _closure1_slot6 = tangon;
    tangon = 3;
    tangon = oscard[tangon];
    tangon = yankee.bind(entity)(tangon);
    var _closure1_slot7 = tangon;
    tangon = 4;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.UserProfileSections;
    var _closure1_slot8 = tangon;
    tangon = 5;
    golfie = oscard[tangon];
    golfie = report.bind(entity)(golfie);
    golfie = golfie.jsx;
    var _closure1_slot9 = golfie;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.jsxs;
    var _closure1_slot10 = tangon;
    tangon = 6;
    tangon = oscard[tangon];
    option = report.bind(entity)(tangon);
    golfie = option.createStyles;
    tangon = {};
    verify = {'flex': 1, 'gap': 20, 'paddingTop': 8};
    tangon['container'] = verify;
    verify = {};
    offset = 7;
    romeon = oscard[offset];
    romeon = yankee.bind(entity)(romeon);
    romeon = romeon.radii;
    romeon = romeon.lg;
    verify['borderRadius'] = romeon;
    tangon['pages'] = verify;
    romeon = 'center';
    verify = {'paddingTop': 8, 'alignItems': 'center'};
    tangon['loadingState'] = verify;
    verify = {};
    verify['alignItems'] = romeon;
    tangon['emptyState'] = verify;
    verify = {};
    offset = oscard[offset];
    offset = yankee.bind(entity)(offset);
    offset = offset.colors;
    offset = offset.TEXT_SECONDARY;
    verify['color'] = offset;
    tangon['activityStatusText'] = verify;
    verify = {'flexDirection': 'row', 'alignItems': 'center', 'gap': 4};
    tangon['mutualGuildSubLabel'] = verify;
    tangon = golfie.bind(option)(tangon);
    var _closure1_slot11 = tangon;
    tangon = 26;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/user_profile/native/UserProfileMutualsActionSheet.tsx';
    tangon = report.bind(oscard)(tangon);
    michal = function(argFoo) { // Original name: UserProfileMutualsActionSheet
        _fun00003: for(var _fun00004_ip = 0; ; ) switch(_fun00004_ip) {
 0:
            michal = argFoo;
            zuuluu = michal.user;
            var _closure2_slot0 = zuuluu;
            yankee = michal.section;
            tangon = michal.guildId;
            var _closure2_slot1 = tangon;
            tangon = michal.onPressMutualFriend;
            var _closure2_slot2 = tangon;
            michal = michal.onPressMutualGuild;
            var _closure2_slot3 = michal;
            michal = _closure1_slot11;
            tangon = undefined;
            foxtra = michal.bind(tangon)();
            report = _closure1_slot4;
            michal = report.useState;
            offset = 0;
            oscard = michal.bind(report)(offset);
            report = _closure1_slot3;
            michal = 2;
            michal = report.bind(tangon)(oscard, michal);
            oscard = michal[offset];
            golfie = 1;
            michal = michal[golfie];
            var _closure2_slot4 = michal;
            option = _closure1_slot1;
            report = _closure1_slot2;
            michal = 16;
            michal = report[michal];
            michal = option.bind(tangon)(michal);
            michal = michal.bind(tangon)(zuuluu);
            kiloes = michal.mutualFriends;
            romeon = michal.mutualGuilds;
            zuuluu = _closure1_slot0;
            michal = 17;
            michal = report[michal];
            report = zuuluu.bind(tangon)(michal);
            zuuluu = report.useSegmentedControlState;
            michal = {};
            michal['pageWidth'] = oscard;
            oscard = _closure1_slot8;
            option = oscard.MUTUAL_GUILDS;
            oscard = 0;
            if(!(yankee === option)) { _fun00004_ip = 190; continue _fun00003 }
 187:
            oscard = golfie;
 190:
            michal['defaultIndex'] = oscard;
            golfie = {};
            oscard = 'mutual-friends';
            golfie['id'] = oscard;
            option = _closure1_slot1;
            yankee = _closure1_slot2;
            oscard = 18;
            oscard = yankee[oscard];
            yankee = option.bind(tangon)(oscard);
            option = null;
            backup = option == kiloes;
            oscard = undefined;
            if(backup) { _fun00004_ip = 243; continue _fun00003 }
 238:
            oscard = kiloes.length;
 243:
            oscard = yankee.bind(tangon)(oscard);
            golfie['label'] = oscard;
            if(!(option != kiloes)) { _fun00004_ip = 406; continue _fun00003 }
 259:
            oscard = kiloes.length;
            if(!(offset !== oscard)) { _fun00004_ip = 336; continue _fun00003 }
 268:
            backup = _closure1_slot9;
            yankee = _closure1_slot0;
            sizing = _closure1_slot2;
            oscard = 20;
            oscard = sizing[oscard];
            oscard = yankee.bind(tangon)(oscard);
            yankee = oscard.UserProfileStackedActionSheetList;
            oscard = {};
            oscard['data'] = kiloes;
            kiloes = function(argFoo) { // Original name: keyExtractor
                entity = argFoo;
                entity = entity.user;
                entity = entity.id;
                return entity;
            };
            oscard['keyExtractor'] = kiloes;
            kiloes = function(argFoo) { // Original name: renderItem
                michal = argFoo;
                report = michal.item;
                var _closure3_slot0 = report;
                oscard = michal.style;
                tangon = _closure1_slot9;
                zuuluu = _closure1_slot12;
                michal = {};
                michal['style'] = oscard;
                michal['mutualFriend'] = report;
                report = _closure2_slot1;
                michal['guildId'] = report;
                entity = function() { // Original name: onPress
                    zuuluu = _closure2_slot2;
                    entity = _closure3_slot0;
                    entity = entity.user;
                    michal = entity.id;
                    entity = undefined;
                    entity = zuuluu.bind(entity)(michal);
                    return entity;
                };
                michal['onPress'] = entity;
                entity = undefined;
                entity = tangon.bind(entity)(zuuluu, michal);
                return entity;
            };
            oscard['renderItem'] = kiloes;
            oscard = backup.bind(tangon)(yankee, oscard);
            _fun00004_ip = 404; continue _fun00003;
 336:
            kiloes = _closure1_slot9;
            backup = _closure1_slot5;
            yankee = {};
            sizing = foxtra.emptyState;
            yankee['style'] = sizing;
            result = _closure1_slot9;
            output = _closure1_slot0;
            echoed = _closure1_slot2;
            sizing = 19;
            sizing = echoed[sizing];
            sizing = output.bind(tangon)(sizing);
            output = sizing.NoMutualFriends;
            sizing = {};
            sizing = result.bind(tangon)(output, sizing);
            yankee['children'] = sizing;
            oscard = kiloes.bind(tangon)(backup, yankee);
 404:
            _fun00004_ip = 452; continue _fun00003;
 406:
            kiloes = _closure1_slot9;
            backup = _closure1_slot5;
            yankee = {};
            sizing = foxtra.loadingState;
            yankee['style'] = sizing;
            result = _closure1_slot9;
            output = _closure1_slot6;
            sizing = {};
            sizing = result.bind(tangon)(output, sizing);
            yankee['children'] = sizing;
            oscard = kiloes.bind(tangon)(backup, yankee);
 452:
            golfie['page'] = oscard;
            oscard = new Array(2);
            oscard[0] = golfie;
            golfie = {};
            yankee = 'mutual-guilds';
            golfie['id'] = yankee;
            backup = _closure1_slot1;
            kiloes = _closure1_slot2;
            yankee = 21;
            yankee = kiloes[yankee];
            backup = backup.bind(tangon)(yankee);
            kiloes = option == romeon;
            yankee = undefined;
            if(kiloes) { _fun00004_ip = 511; continue _fun00003 }
 506:
            yankee = romeon.length;
 511:
            yankee = backup.bind(tangon)(yankee);
            golfie['label'] = yankee;
            if(!(option != romeon)) { _fun00004_ip = 674; continue _fun00003 }
 527:
            option = romeon.length;
            if(!(offset !== option)) { _fun00004_ip = 604; continue _fun00003 }
 536:
            yankee = _closure1_slot9;
            offset = _closure1_slot0;
            backup = _closure1_slot2;
            option = 20;
            option = backup[option];
            option = offset.bind(tangon)(option);
            offset = option.UserProfileStackedActionSheetList;
            option = {};
            option['data'] = romeon;
            romeon = function(argFoo) { // Original name: keyExtractor
                entity = argFoo;
                entity = entity.guild;
                entity = entity.id;
                return entity;
            };
            option['keyExtractor'] = romeon;
            romeon = function(argFoo) { // Original name: renderItem
                michal = argFoo;
                report = michal.item;
                var _closure3_slot0 = report;
                oscard = michal.style;
                tangon = _closure1_slot9;
                zuuluu = _closure1_slot13;
                michal = {};
                michal['style'] = oscard;
                oscard = _closure2_slot0;
                michal['user'] = oscard;
                michal['mutualGuild'] = report;
                entity = function() { // Original name: onPress
                    zuuluu = _closure2_slot3;
                    entity = _closure3_slot0;
                    entity = entity.guild;
                    michal = entity.id;
                    entity = undefined;
                    entity = zuuluu.bind(entity)(michal);
                    return entity;
                };
                michal['onPress'] = entity;
                entity = undefined;
                entity = tangon.bind(entity)(zuuluu, michal);
                return entity;
            };
            option['renderItem'] = romeon;
            option = yankee.bind(tangon)(offset, option);
            _fun00004_ip = 672; continue _fun00003;
 604:
            romeon = _closure1_slot9;
            yankee = _closure1_slot5;
            offset = {};
            backup = foxtra.emptyState;
            offset['style'] = backup;
            sizing = _closure1_slot9;
            kiloes = _closure1_slot0;
            output = _closure1_slot2;
            backup = 22;
            backup = output[backup];
            backup = kiloes.bind(tangon)(backup);
            kiloes = backup.NoMutualServers;
            backup = {};
            backup = sizing.bind(tangon)(kiloes, backup);
            offset['children'] = backup;
            option = romeon.bind(tangon)(yankee, offset);
 672:
            _fun00004_ip = 720; continue _fun00003;
 674:
            romeon = _closure1_slot9;
            yankee = _closure1_slot5;
            offset = {};
            backup = foxtra.loadingState;
            offset['style'] = backup;
            sizing = _closure1_slot9;
            kiloes = _closure1_slot6;
            backup = {};
            backup = sizing.bind(tangon)(kiloes, backup);
            offset['children'] = backup;
            option = romeon.bind(tangon)(yankee, offset);
 720:
            golfie['page'] = option;
            oscard[1] = golfie;
            michal['items'] = oscard;
            romeon = zuuluu.bind(report)(michal);
            report = _closure1_slot4;
            zuuluu = report.useCallback;
            michal = function(argFoo) {
                entity = argFoo;
                entity = entity.nativeEvent;
                entity = entity.layout;
                zuuluu = entity.width;
                michal = _closure2_slot4;
                entity = undefined;
                michal = michal.bind(entity)(zuuluu);
                return entity;
            };
            entity = new Array(0);
            option = zuuluu.bind(report)(michal, entity);
            zuuluu = _closure1_slot9;
            michal = _closure1_slot1;
            backup = _closure1_slot2;
            entity = 20;
            entity = backup[entity];
            michal = michal.bind(tangon)(entity);
            entity = {};
            report = true;
            entity['scrollable'] = report;
            offset = _closure1_slot0;
            report = 23;
            oscard = backup[report];
            oscard = offset.bind(tangon)(oscard);
            golfie = oscard.intl;
            oscard = golfie.string;
            report = backup[report];
            report = offset.bind(tangon)(report);
            report = report.t;
            report = report.l2/aLi;
            report = oscard.bind(golfie)(report);
            entity['title'] = report;
            golfie = _closure1_slot10;
            oscard = _closure1_slot5;
            report = {};
            yankee = foxtra.container;
            report['style'] = yankee;
            report['onLayout'] = option;
            kiloes = _closure1_slot9;
            yankee = _closure1_slot5;
            option = {};
            sizing = 24;
            sizing = backup[sizing];
            sizing = offset.bind(tangon)(sizing);
            output = sizing.Tabs;
            sizing = {};
            sizing['state'] = romeon;
            sizing = kiloes.bind(tangon)(output, sizing);
            option['children'] = sizing;
            yankee = kiloes.bind(tangon)(yankee, option);
            option = new Array(2);
            option[0] = yankee;
            yankee = _closure1_slot9;
            verify = 25;
            verify = backup[verify];
            verify = offset.bind(tangon)(verify);
            offset = verify.SegmentedControlPages;
            verify = {};
            foxtra = foxtra.pages;
            verify['style'] = foxtra;
            verify['state'] = romeon;
            verify = yankee.bind(tangon)(offset, verify);
            option[1] = verify;
            report['children'] = option;
            report = golfie.bind(tangon)(oscard, report);
            entity['children'] = report;
            entity = zuuluu.bind(tangon)(michal, entity);
            return entity;
        }
    };
    zuuluu['default'] = michal;
    return entity;
})();