// app/modules/user_profile/native/UserProfileMutualsActionSheet.tsx
export default (function(argFoo, argBar, argBaz, argCorge, _, argFred, argPlugh) {
    report = argBar;
    yankee = argBaz;
    zulu = argFred;
    oscar = argPlugh;
    var _closure1_slot0 = report;
    var _closure1_slot1 = yankee;
    var _closure1_slot2 = oscar;
    entity = function(argFoo) { // Original name: MutualFriendRow
        zulu = argFoo;
        entity = zulu.mutualFriend;
        entity = entity.user;
        var _closure2_slot0 = entity;
        offset = zulu.guildId;
        golf = zulu.onPress;
        options = zulu.style;
        zulu = _closure1_slot11;
        report = undefined;
        verify = zulu.bind(report)();
        result = _closure1_slot0;
        yankee = _closure1_slot2;
        zulu = 8;
        zulu = yankee[zulu];
        tango = result.bind(report)(zulu);
        zulu = tango.useAvatarDecoration;
        sizing = zulu.bind(tango)(entity);
        zulu = 9;
        zulu = yankee[zulu];
        romeo = result.bind(report)(zulu);
        tango = romeo.useStateFromStoresObject;
        foxtrot = _closure1_slot7;
        zulu = new Array(1);
        zulu[0] = foxtrot;
        mike = function() {
            entity = {};
            oscar = _closure1_slot7;
            report = oscar.getStatus;
            mike = _closure2_slot0;
            tango = mike.id;
            tango = report.bind(oscar)(tango);
            entity['status'] = tango;
            tango = _closure1_slot7;
            zulu = tango.isMobileOnline;
            mike = mike.id;
            mike = zulu.bind(tango)(mike);
            entity['isMobileOnline'] = mike;
            return entity;
        };
        mike = tango.bind(romeo)(zulu, mike);
        kilo = mike.status;
        backup = mike.isMobileOnline;
        tango = _closure1_slot9;
        mike = 10;
        mike = yankee[mike];
        mike = result.bind(report)(mike);
        zulu = mike.FormRow;
        mike = {};
        mike['style'] = options;
        mike['onPress'] = golf;
        foxtrot = _closure1_slot9;
        golf = _closure1_slot1;
        output = 11;
        options = yankee[output];
        romeo = golf.bind(report)(options);
        options = {};
        options['user'] = entity;
        output = yankee[output];
        output = result.bind(report)(output);
        output = output.AvatarSizes;
        output = output.REFRESH_MEDIUM_32;
        options['size'] = output;
        options['avatarDecoration'] = sizing;
        options['status'] = kilo;
        options['guildId'] = offset;
        options['isMobileOnline'] = backup;
        backup = true;
        options['autoStatusCutout'] = backup;
        options = foxtrot.bind(report)(romeo, options);
        mike['leading'] = options;
        options = 12;
        options = yankee[options];
        romeo = golf.bind(report)(options);
        options = romeo.getName;
        options = options.bind(romeo)(offset, report, entity);
        mike['label'] = options;
        options = _closure1_slot9;
        oscar = 13;
        oscar = yankee[oscar];
        golf = golf.bind(report)(oscar);
        oscar = {};
        yankee = 'UserProfileMutualsActionSheet';
        oscar['location'] = yankee;
        yankee = entity.id;
        oscar['userId'] = yankee;
        oscar['guildId'] = offset;
        verify = verify.activityStatusText;
        oscar['textStyle'] = verify;
        oscar = options.bind(report)(golf, oscar);
        mike['subLabel'] = oscar;
        entity = entity.id;
        entity = tango.bind(report)(zulu, mike, entity);
        return entity;
    };
    var _closure1_slot12 = entity;
    entity = function(argFoo) { // Original name: MutualGuildRow
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            mike = argFoo;
            zulu = mike.mutualGuild;
            entity = zulu.guild;
            foxtrot = zulu.nick;
            backup = mike.user;
            golf = mike.style;
            oscar = mike.onPress;
            mike = _closure1_slot11;
            report = undefined;
            verify = mike.bind(report)();
            zulu = backup.hasAvatarForGuild;
            mike = entity.id;
            romeo = zulu.bind(backup)(mike);
            tango = _closure1_slot9;
            kilo = _closure1_slot0;
            sizing = _closure1_slot2;
            mike = 10;
            mike = sizing[mike];
            mike = kilo.bind(report)(mike);
            zulu = mike.FormRow;
            mike = {};
            mike['style'] = golf;
            mike['onPress'] = oscar;
            options = _closure1_slot9;
            golf = _closure1_slot1;
            offset = 14;
            oscar = sizing[offset];
            golf = golf.bind(report)(oscar);
            oscar = {};
            oscar['guild'] = entity;
            offset = sizing[offset];
            offset = kilo.bind(report)(offset);
            offset = offset.GuildIconSizes;
            offset = offset.SMALL_32;
            oscar['size'] = offset;
            oscar = options.bind(report)(golf, oscar);
            mike['leading'] = oscar;
            oscar = entity.toString;
            oscar = oscar.bind(entity)();
            mike['label'] = oscar;
            options = _closure1_slot10;
            golf = _closure1_slot5;
            oscar = {};
            verify = verify.mutualGuildSubLabel;
            oscar['style'] = verify;
            offset = romeo;
            if(!romeo) { _fun00002_ip = 279; continue _fun00001 }
 205:
            sizing = _closure1_slot9;
            kilo = _closure1_slot1;
            echo = _closure1_slot2;
            output = 11;
            verify = echo[output];
            kilo = kilo.bind(report)(verify);
            verify = {};
            result = _closure1_slot0;
            output = echo[output];
            output = result.bind(report)(output);
            output = output.AvatarSizes;
            output = output.SIZE_16;
            verify['size'] = output;
            verify['user'] = backup;
            output = entity.id;
            verify['guildId'] = output;
            offset = sizing.bind(report)(kilo, verify);
 279:
            verify = new Array(3);
            verify[0] = offset;
            offset = null;
            kilo = offset != foxtrot;
            if(!kilo) { _fun00002_ip = 349; continue _fun00001 }
 296:
            result = _closure1_slot9;
            output = _closure1_slot0;
            echo = _closure1_slot2;
            sizing = 15;
            sizing = echo[sizing];
            sizing = output.bind(report)(sizing);
            output = sizing.Text;
            sizing = {'variant': 'text-xs/medium', 'color': 'text-secondary'};
            sizing['children'] = foxtrot;
            kilo = result.bind(report)(output, sizing);
 349:
            verify[1] = kilo;
            offset = offset == foxtrot;
            if(!offset) { _fun00002_ip = 363; continue _fun00001 }
 360:
            offset = romeo;
 363:
            if(!offset) { _fun00002_ip = 424; continue _fun00001 }
 366:
            foxtrot = _closure1_slot9;
            romeo = _closure1_slot0;
            kilo = _closure1_slot2;
            yankee = 15;
            yankee = kilo[yankee];
            yankee = romeo.bind(report)(yankee);
            romeo = yankee.Text;
            yankee = {'variant': 'text-xs/medium', 'color': 'text-secondary'};
            backup = backup.username;
            yankee['children'] = backup;
            offset = foxtrot.bind(report)(romeo, yankee);
 424:
            verify[2] = offset;
            oscar['children'] = verify;
            oscar = options.bind(report)(golf, oscar);
            mike['subLabel'] = oscar;
            entity = entity.id;
            entity = tango.bind(report)(zulu, mike, entity);
            return entity;
        }
    };
    var _closure1_slot13 = entity;
    entity = global;
    options = entity.Object;
    golf = options.defineProperty;
    tango = {};
    entity = true;
    tango['value'] = entity;
    entity = '__esModule';
    entity = golf.bind(options)(zulu, entity, tango);
    entity = 0;
    tango = oscar[entity];
    entity = undefined;
    tango = yankee.bind(entity)(tango);
    var _closure1_slot3 = tango;
    tango = 1;
    golf = oscar[tango];
    tango = argCorge;
    tango = tango.bind(entity)(golf);
    var _closure1_slot4 = tango;
    tango = 2;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    golf = tango.View;
    var _closure1_slot5 = golf;
    tango = tango.ActivityIndicator;
    var _closure1_slot6 = tango;
    tango = 3;
    tango = oscar[tango];
    tango = yankee.bind(entity)(tango);
    var _closure1_slot7 = tango;
    tango = 4;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.UserProfileSections;
    var _closure1_slot8 = tango;
    tango = 5;
    golf = oscar[tango];
    golf = report.bind(entity)(golf);
    golf = golf.jsx;
    var _closure1_slot9 = golf;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.jsxs;
    var _closure1_slot10 = tango;
    tango = 6;
    tango = oscar[tango];
    options = report.bind(entity)(tango);
    golf = options.createStyles;
    tango = {};
    verify = {'flex': 1, 'gap': 20, 'paddingTop': 8};
    tango['container'] = verify;
    verify = {};
    offset = 7;
    romeo = oscar[offset];
    romeo = yankee.bind(entity)(romeo);
    romeo = romeo.radii;
    romeo = romeo.lg;
    verify['borderRadius'] = romeo;
    tango['pages'] = verify;
    romeo = 'center';
    verify = {'paddingTop': 8, 'alignItems': 'center'};
    tango['loadingState'] = verify;
    verify = {};
    verify['alignItems'] = romeo;
    tango['emptyState'] = verify;
    verify = {};
    offset = oscar[offset];
    offset = yankee.bind(entity)(offset);
    offset = offset.colors;
    offset = offset.TEXT_SECONDARY;
    verify['color'] = offset;
    tango['activityStatusText'] = verify;
    verify = {'flexDirection': 'row', 'alignItems': 'center', 'gap': 4};
    tango['mutualGuildSubLabel'] = verify;
    tango = golf.bind(options)(tango);
    var _closure1_slot11 = tango;
    tango = 27;
    tango = oscar[tango];
    oscar = report.bind(entity)(tango);
    report = oscar.fileFinishedImporting;
    tango = 'modules/user_profile/native/UserProfileMutualsActionSheet.tsx';
    tango = report.bind(oscar)(tango);
    mike = function(argFoo) { // Original name: UserProfileMutualsActionSheet
        _fun00003: for(var _fun00004_ip = 0; ; ) switch(_fun00004_ip) {
 0:
            zulu = argFoo;
            mike = zulu.user;
            var _closure2_slot0 = mike;
            yankee = zulu.section;
            tango = zulu.guildId;
            var _closure2_slot1 = tango;
            tango = zulu.onPressMutualFriend;
            var _closure2_slot2 = tango;
            zulu = zulu.onPressMutualGuild;
            var _closure2_slot3 = zulu;
            zulu = _closure1_slot11;
            tango = undefined;
            foxtrot = zulu.bind(tango)();
            report = _closure1_slot4;
            zulu = report.useState;
            offset = 0;
            oscar = zulu.bind(report)(offset);
            report = _closure1_slot3;
            zulu = 2;
            zulu = report.bind(tango)(oscar, zulu);
            oscar = zulu[offset];
            golf = 1;
            zulu = zulu[golf];
            var _closure2_slot4 = zulu;
            options = _closure1_slot1;
            report = _closure1_slot2;
            zulu = 16;
            zulu = report[zulu];
            romeo = options.bind(tango)(zulu);
            zulu = mike.id;
            zulu = romeo.bind(tango)(zulu);
            kilo = zulu.mutualFriends;
            zulu = 17;
            zulu = report[zulu];
            zulu = options.bind(tango)(zulu);
            mike = mike.id;
            mike = zulu.bind(tango)(mike);
            romeo = mike.mutualGuilds;
            zulu = _closure1_slot0;
            mike = 18;
            mike = report[mike];
            report = zulu.bind(tango)(mike);
            zulu = report.useSegmentedControlState;
            mike = {};
            mike['pageWidth'] = oscar;
            oscar = _closure1_slot8;
            options = oscar.MUTUAL_GUILDS;
            oscar = 0;
            if(!(yankee === options)) { _fun00004_ip = 217; continue _fun00003 }
 214:
            oscar = golf;
 217:
            mike['defaultIndex'] = oscar;
            golf = {};
            oscar = 'mutual-friends';
            golf['id'] = oscar;
            options = _closure1_slot1;
            yankee = _closure1_slot2;
            oscar = 19;
            oscar = yankee[oscar];
            yankee = options.bind(tango)(oscar);
            options = null;
            backup = options == kilo;
            oscar = undefined;
            if(backup) { _fun00004_ip = 270; continue _fun00003 }
 265:
            oscar = kilo.length;
 270:
            oscar = yankee.bind(tango)(oscar);
            golf['label'] = oscar;
            if(!(options != kilo)) { _fun00004_ip = 433; continue _fun00003 }
 286:
            oscar = kilo.length;
            if(!(offset !== oscar)) { _fun00004_ip = 363; continue _fun00003 }
 295:
            backup = _closure1_slot9;
            yankee = _closure1_slot0;
            sizing = _closure1_slot2;
            oscar = 21;
            oscar = sizing[oscar];
            oscar = yankee.bind(tango)(oscar);
            yankee = oscar.UserProfileStackedActionSheetList;
            oscar = {};
            oscar['data'] = kilo;
            kilo = function(argFoo) { // Original name: keyExtractor
                entity = argFoo;
                entity = entity.user;
                entity = entity.id;
                return entity;
            };
            oscar['keyExtractor'] = kilo;
            kilo = function(argFoo) { // Original name: renderItem
                mike = argFoo;
                report = mike.item;
                var _closure3_slot0 = report;
                oscar = mike.style;
                tango = _closure1_slot9;
                zulu = _closure1_slot12;
                mike = {};
                mike['style'] = oscar;
                mike['mutualFriend'] = report;
                report = _closure2_slot1;
                mike['guildId'] = report;
                entity = function() { // Original name: onPress
                    zulu = _closure2_slot2;
                    entity = _closure3_slot0;
                    entity = entity.user;
                    mike = entity.id;
                    entity = undefined;
                    entity = zulu.bind(entity)(mike);
                    return entity;
                };
                mike['onPress'] = entity;
                entity = undefined;
                entity = tango.bind(entity)(zulu, mike);
                return entity;
            };
            oscar['renderItem'] = kilo;
            oscar = backup.bind(tango)(yankee, oscar);
            _fun00004_ip = 431; continue _fun00003;
 363:
            kilo = _closure1_slot9;
            backup = _closure1_slot5;
            yankee = {};
            sizing = foxtrot.emptyState;
            yankee['style'] = sizing;
            result = _closure1_slot9;
            output = _closure1_slot0;
            echo = _closure1_slot2;
            sizing = 20;
            sizing = echo[sizing];
            sizing = output.bind(tango)(sizing);
            output = sizing.NoMutualFriends;
            sizing = {};
            sizing = result.bind(tango)(output, sizing);
            yankee['children'] = sizing;
            oscar = kilo.bind(tango)(backup, yankee);
 431:
            _fun00004_ip = 479; continue _fun00003;
 433:
            kilo = _closure1_slot9;
            backup = _closure1_slot5;
            yankee = {};
            sizing = foxtrot.loadingState;
            yankee['style'] = sizing;
            result = _closure1_slot9;
            output = _closure1_slot6;
            sizing = {};
            sizing = result.bind(tango)(output, sizing);
            yankee['children'] = sizing;
            oscar = kilo.bind(tango)(backup, yankee);
 479:
            golf['page'] = oscar;
            oscar = new Array(2);
            oscar[0] = golf;
            golf = {};
            yankee = 'mutual-guilds';
            golf['id'] = yankee;
            backup = _closure1_slot1;
            kilo = _closure1_slot2;
            yankee = 22;
            yankee = kilo[yankee];
            backup = backup.bind(tango)(yankee);
            kilo = options == romeo;
            yankee = undefined;
            if(kilo) { _fun00004_ip = 538; continue _fun00003 }
 533:
            yankee = romeo.length;
 538:
            yankee = backup.bind(tango)(yankee);
            golf['label'] = yankee;
            if(!(options != romeo)) { _fun00004_ip = 701; continue _fun00003 }
 554:
            options = romeo.length;
            if(!(offset !== options)) { _fun00004_ip = 631; continue _fun00003 }
 563:
            yankee = _closure1_slot9;
            offset = _closure1_slot0;
            backup = _closure1_slot2;
            options = 21;
            options = backup[options];
            options = offset.bind(tango)(options);
            offset = options.UserProfileStackedActionSheetList;
            options = {};
            options['data'] = romeo;
            romeo = function(argFoo) { // Original name: keyExtractor
                entity = argFoo;
                entity = entity.guild;
                entity = entity.id;
                return entity;
            };
            options['keyExtractor'] = romeo;
            romeo = function(argFoo) { // Original name: renderItem
                mike = argFoo;
                report = mike.item;
                var _closure3_slot0 = report;
                oscar = mike.style;
                tango = _closure1_slot9;
                zulu = _closure1_slot13;
                mike = {};
                mike['style'] = oscar;
                oscar = _closure2_slot0;
                mike['user'] = oscar;
                mike['mutualGuild'] = report;
                entity = function() { // Original name: onPress
                    zulu = _closure2_slot3;
                    entity = _closure3_slot0;
                    entity = entity.guild;
                    mike = entity.id;
                    entity = undefined;
                    entity = zulu.bind(entity)(mike);
                    return entity;
                };
                mike['onPress'] = entity;
                entity = undefined;
                entity = tango.bind(entity)(zulu, mike);
                return entity;
            };
            options['renderItem'] = romeo;
            options = yankee.bind(tango)(offset, options);
            _fun00004_ip = 699; continue _fun00003;
 631:
            romeo = _closure1_slot9;
            yankee = _closure1_slot5;
            offset = {};
            backup = foxtrot.emptyState;
            offset['style'] = backup;
            sizing = _closure1_slot9;
            kilo = _closure1_slot0;
            output = _closure1_slot2;
            backup = 23;
            backup = output[backup];
            backup = kilo.bind(tango)(backup);
            kilo = backup.NoMutualServers;
            backup = {};
            backup = sizing.bind(tango)(kilo, backup);
            offset['children'] = backup;
            options = romeo.bind(tango)(yankee, offset);
 699:
            _fun00004_ip = 747; continue _fun00003;
 701:
            romeo = _closure1_slot9;
            yankee = _closure1_slot5;
            offset = {};
            backup = foxtrot.loadingState;
            offset['style'] = backup;
            sizing = _closure1_slot9;
            kilo = _closure1_slot6;
            backup = {};
            backup = sizing.bind(tango)(kilo, backup);
            offset['children'] = backup;
            options = romeo.bind(tango)(yankee, offset);
 747:
            golf['page'] = options;
            oscar[1] = golf;
            mike['items'] = oscar;
            romeo = zulu.bind(report)(mike);
            report = _closure1_slot4;
            zulu = report.useCallback;
            mike = function(argFoo) {
                entity = argFoo;
                entity = entity.nativeEvent;
                entity = entity.layout;
                zulu = entity.width;
                mike = _closure2_slot4;
                entity = undefined;
                mike = mike.bind(entity)(zulu);
                return entity;
            };
            entity = new Array(0);
            options = zulu.bind(report)(mike, entity);
            zulu = _closure1_slot9;
            mike = _closure1_slot1;
            backup = _closure1_slot2;
            entity = 21;
            entity = backup[entity];
            mike = mike.bind(tango)(entity);
            entity = {};
            report = true;
            entity['scrollable'] = report;
            offset = _closure1_slot0;
            report = 24;
            oscar = backup[report];
            oscar = offset.bind(tango)(oscar);
            golf = oscar.intl;
            oscar = golf.string;
            report = backup[report];
            report = offset.bind(tango)(report);
            report = report.t;
            report = report.l2/aLi;
            report = oscar.bind(golf)(report);
            entity['title'] = report;
            golf = _closure1_slot10;
            oscar = _closure1_slot5;
            report = {};
            yankee = foxtrot.container;
            report['style'] = yankee;
            report['onLayout'] = options;
            kilo = _closure1_slot9;
            yankee = _closure1_slot5;
            options = {};
            sizing = 25;
            sizing = backup[sizing];
            sizing = offset.bind(tango)(sizing);
            output = sizing.Tabs;
            sizing = {};
            sizing['state'] = romeo;
            sizing = kilo.bind(tango)(output, sizing);
            options['children'] = sizing;
            yankee = kilo.bind(tango)(yankee, options);
            options = new Array(2);
            options[0] = yankee;
            yankee = _closure1_slot9;
            verify = 26;
            verify = backup[verify];
            verify = offset.bind(tango)(verify);
            offset = verify.SegmentedControlPages;
            verify = {};
            foxtrot = foxtrot.pages;
            verify['style'] = foxtrot;
            verify['state'] = romeo;
            verify = yankee.bind(tango)(offset, verify);
            options[1] = verify;
            report['children'] = options;
            report = golf.bind(tango)(oscar, report);
            entity['children'] = report;
            entity = zulu.bind(tango)(mike, entity);
            return entity;
        }
    };
    zulu['default'] = mike;
    return entity;
})();