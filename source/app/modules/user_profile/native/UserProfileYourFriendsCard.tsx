// app/modules/user_profile/native/UserProfileYourFriendsCard.tsx
export default (function(argFoo, argBar, argBaz, argCorge, _, argFred, argPlugh) {
    report = argBar;
    foxtrot = argBaz;
    zulu = argFred;
    oscar = argPlugh;
    var _closure1_slot0 = report;
    var _closure1_slot1 = foxtrot;
    var _closure1_slot2 = oscar;
    tango = global;
    verify = tango.Object;
    options = verify.defineProperty;
    golf = {};
    entity = true;
    golf['value'] = entity;
    entity = '__esModule';
    entity = options.bind(verify)(zulu, entity, golf);
    entity = 0;
    golf = oscar[entity];
    entity = undefined;
    golf = foxtrot.bind(entity)(golf);
    var _closure1_slot3 = golf;
    yankee = 1;
    options = oscar[yankee];
    golf = argCorge;
    golf = golf.bind(entity)(options);
    var _closure1_slot4 = golf;
    golf = 2;
    golf = oscar[golf];
    golf = report.bind(entity)(golf);
    golf = golf.View;
    var _closure1_slot5 = golf;
    golf = 3;
    golf = oscar[golf];
    golf = foxtrot.bind(entity)(golf);
    var _closure1_slot6 = golf;
    golf = 4;
    golf = oscar[golf];
    golf = foxtrot.bind(entity)(golf);
    var _closure1_slot7 = golf;
    golf = 5;
    golf = oscar[golf];
    golf = foxtrot.bind(entity)(golf);
    var _closure1_slot8 = golf;
    golf = 6;
    golf = oscar[golf];
    golf = foxtrot.bind(entity)(golf);
    var _closure1_slot9 = golf;
    golf = 7;
    golf = oscar[golf];
    golf = report.bind(entity)(golf);
    golf = golf.RelationshipTypes;
    var _closure1_slot10 = golf;
    golf = 8;
    options = oscar[golf];
    options = report.bind(entity)(options);
    options = options.jsx;
    var _closure1_slot11 = options;
    golf = oscar[golf];
    golf = report.bind(entity)(golf);
    golf = golf.jsxs;
    var _closure1_slot12 = golf;
    options = tango.Object;
    golf = options.freeze;
    tango = {};
    verify = 9;
    verify = oscar[verify];
    verify = report.bind(entity)(verify);
    verify = verify.CutoutDirection;
    verify = verify.RIGHT;
    tango['direction'] = verify;
    verify = -4;
    tango['inset'] = verify;
    tango = golf.bind(options)(tango);
    var _closure1_slot13 = tango;
    tango = 10;
    tango = oscar[tango];
    options = report.bind(entity)(tango);
    golf = options.createStyles;
    tango = {};
    verify = {'flex': 1, 'flexDirection': 'row', 'alignItems': 'center', 'padding': 16};
    offset = 'row';
    romeo = 11;
    romeo = oscar[romeo];
    romeo = foxtrot.bind(entity)(romeo);
    romeo = romeo.radii;
    romeo = romeo.lg;
    verify['borderRadius'] = romeo;
    tango['pressable'] = verify;
    verify = {};
    verify['flex'] = yankee;
    tango['label'] = verify;
    verify = {'flexDirection': 'row', 'alignItems': 'center', 'marginLeft': 'auto', 'marginRight': 8};
    tango['facepile'] = verify;
    verify = {};
    verify['flexDirection'] = offset;
    tango['avatars'] = verify;
    tango = golf.bind(options)(tango);
    var _closure1_slot14 = tango;
    tango = 21;
    tango = oscar[tango];
    oscar = report.bind(entity)(tango);
    report = oscar.fileFinishedImporting;
    tango = 'modules/user_profile/native/UserProfileYourFriendsCard.tsx';
    tango = report.bind(oscar)(tango);
    mike = function(argFoo) { // Original name: UserProfileYourFriendsCard
        mike = argFoo;
        options = mike.navigateToFriends;
        offset = mike.style;
        mike = _closure1_slot14;
        tango = undefined;
        romeo = mike.bind(tango)();
        var _closure2_slot0 = romeo;
        oscar = _closure1_slot4;
        zulu = oscar.useState;
        mike = new Array(0);
        golf = zulu.bind(oscar)(mike);
        zulu = _closure1_slot3;
        mike = 2;
        zulu = zulu.bind(tango)(golf, mike);
        mike = 0;
        yankee = zulu[mike];
        var _closure2_slot1 = yankee;
        mike = 1;
        mike = zulu[mike];
        var _closure2_slot2 = mike;
        golf = _closure1_slot0;
        verify = _closure1_slot2;
        mike = 12;
        zulu = verify[mike];
        kilo = golf.bind(tango)(zulu);
        backup = kilo.useStateFromStoresArray;
        zulu = _closure1_slot7;
        foxtrot = new Array(1);
        foxtrot[0] = zulu;
        zulu = function() {
            mike = _closure1_slot7;
            entity = mike.getUserAffinities;
            zulu = entity.bind(mike)();
            mike = zulu.map;
            entity = function(argFoo) {
                entity = argFoo;
                entity = entity.user_id;
                return entity;
            };
            entity = mike.bind(zulu)(entity);
            return entity;
        };
        kilo = backup.bind(kilo)(foxtrot, zulu);
        var _closure2_slot3 = kilo;
        zulu = verify[mike];
        sizing = golf.bind(tango)(zulu);
        backup = sizing.useStateFromStoresArray;
        zulu = _closure1_slot8;
        foxtrot = new Array(1);
        foxtrot[0] = zulu;
        zulu = function() {
            mike = _closure1_slot8;
            entity = mike.getFriendIDs;
            entity = entity.bind(mike)();
            return entity;
        };
        backup = backup.bind(sizing)(foxtrot, zulu);
        var _closure2_slot4 = backup;
        zulu = 13;
        zulu = verify[zulu];
        sizing = golf.bind(tango)(zulu);
        foxtrot = sizing.useIsFriendTiersUIEnabled;
        zulu = {};
        output = 'UserProfileYourFriendsCard';
        zulu['location'] = output;
        zulu = foxtrot.bind(sizing)(zulu);
        var _closure2_slot5 = zulu;
        mike = verify[mike];
        sizing = golf.bind(tango)(mike);
        foxtrot = sizing.useStateFromStoresArray;
        mike = _closure1_slot6;
        zulu = new Array(1);
        zulu[0] = mike;
        mike = function() {
            _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
                entity = _closure2_slot5;
                if(entity) { _fun00002_ip = 18; continue _fun00001 }
 12:
                entity = new Array(0);
                return entity;
 18:
                zulu = _closure1_slot6;
                entity = zulu.getGameRelationships;
                report = entity.bind(zulu)();
                entity = global;
                zulu = entity.Set;
                tango = zulu.prototype;
                tango = Object.create(tango, {constructor: {value: zulu}});
                golf = tango;
                zulu = new golf[zulu](oscar);
                zulu = zulu instanceof Object ? zulu : tango;
                var _closure3_slot0 = zulu;
                tango = report.values;
                report = tango.bind(report)();
                tango = report.forEach;
                mike = function(argFoo) {
                    _fun00003: for(var _fun00004_ip = 0; ; ) switch(_fun00004_ip) {
 0:
                        entity = argFoo;
                        zulu = entity.type;
                        mike = _closure1_slot10;
                        mike = mike.FRIEND;
                        if(!(zulu === mike)) { _fun00004_ip = 47; continue _fun00003 }
 25:
                        zulu = _closure3_slot0;
                        mike = zulu.add;
                        entity = entity.id;
                        entity = mike.bind(zulu)(entity);
 47:
                        entity = undefined;
                        return entity;
                    }
                };
                mike = tango.bind(report)(mike);
                mike = entity.Array;
                entity = mike.from;
                entity = entity.bind(mike)(zulu);
                return entity;
            }
        };
        mike = foxtrot.bind(sizing)(zulu, mike);
        var _closure2_slot6 = mike;
        sizing = oscar.useEffect;
        foxtrot = function() {
            zulu = _closure1_slot0;
            mike = _closure1_slot2;
            entity = 14;
            mike = mike[entity];
            entity = undefined;
            zulu = zulu.bind(entity)(mike);
            mike = zulu.fetchUserAffinities;
            mike = mike.bind(zulu)();
            return entity;
        };
        zulu = new Array(0);
        zulu = sizing.bind(oscar)(foxtrot, zulu);
        foxtrot = oscar.useEffect;
        zulu = new Array(3);
        zulu[0] = kilo;
        zulu[1] = backup;
        zulu[2] = mike;
        mike = function() {
            _fun00005: for(var _fun00006_ip = 0; ; ) switch(_fun00006_ip) {
 0:
                tango = _closure1_slot1;
                zulu = _closure1_slot2;
                report = 15;
                mike = zulu[report];
                entity = undefined;
                options = tango.bind(entity)(mike);
                oscar = options.chain;
                mike = global;
                offset = mike.Array;
                verify = offset.from;
                yankee = _closure2_slot3;
                tango = yankee.values;
                tango = tango.bind(yankee)();
                tango = verify.bind(offset)(tango);
                options = oscar.bind(options)(tango);
                oscar = options.filter;
                tango = function(argFoo) {
                    zulu = _closure2_slot4;
                    mike = zulu.includes;
                    entity = argFoo;
                    entity = mike.bind(zulu)(entity);
                    return entity;
                };
                oscar = oscar.bind(options)(tango);
                tango = oscar.take;
                offset = 5;
                options = tango.bind(oscar)(offset);
                oscar = options.map;
                tango = _closure1_slot9;
                tango = tango.getUser;
                oscar = oscar.bind(options)(tango);
                tango = oscar.filter;
                verify = _closure1_slot0;
                options = 16;
                zulu = zulu[options];
                zulu = verify.bind(entity)(zulu);
                zulu = zulu.isNotNullish;
                tango = tango.bind(oscar)(zulu);
                zulu = tango.value;
                zulu = zulu.bind(tango)();
                tango = zulu.length;
                if(!(!(tango >= offset))) { _fun00006_ip = 323; continue _fun00005 }
 176:
                oscar = _closure1_slot1;
                tango = _closure1_slot2;
                report = tango[report];
                verify = oscar.bind(entity)(report);
                oscar = verify.chain;
                report = _closure2_slot6;
                verify = oscar.bind(verify)(report);
                oscar = verify.take;
                report = zulu.length;
                report = offset - report;
                verify = oscar.bind(verify)(report);
                oscar = verify.map;
                report = _closure1_slot9;
                report = report.getUser;
                oscar = oscar.bind(verify)(report);
                report = oscar.filter;
                golf = _closure1_slot0;
                tango = tango[options];
                tango = golf.bind(entity)(tango);
                tango = tango.isNotNullish;
                report = report.bind(oscar)(tango);
                tango = report.value;
                golf = tango.bind(report)();
                report = _closure2_slot2;
                tango = new Array(0);
                romeo = 0;
                backup = tango;
                foxtrot = zulu;
                romeo = arraySpread(backup, foxtrot, romeo);
                backup = tango;
                foxtrot = golf;
                oscar = arraySpread(backup, foxtrot, romeo);
                tango = report.bind(entity)(tango);
                _fun00006_ip = 332; continue _fun00005;
 323:
                mike = _closure2_slot2;
                mike = mike.bind(entity)(zulu);
 332:
                return entity;
            }
        };
        mike = foxtrot.bind(oscar)(mike, zulu);
        zulu = oscar.useMemo;
        mike = new Array(3);
        mike[0] = yankee;
        yankee = romeo.avatars;
        mike[1] = yankee;
        yankee = romeo.facepile;
        mike[2] = yankee;
        entity = function() {
            tango = _closure1_slot11;
            zulu = _closure1_slot5;
            mike = {};
            oscar = _closure2_slot0;
            report = oscar.facepile;
            mike['style'] = report;
            report = {};
            oscar = oscar.avatars;
            report['style'] = oscar;
            golf = _closure2_slot1;
            oscar = golf.map;
            entity = function(argFoo, argBar) {
                _fun00007: for(var _fun00008_ip = 0; ; ) switch(_fun00008_ip) {
 0:
                    entity = argFoo;
                    offset = argBar;
                    report = _closure1_slot11;
                    tango = _closure1_slot5;
                    zulu = {};
                    mike = {};
                    golf = {};
                    options = _closure2_slot1;
                    oscar = options.length;
                    yankee = 1;
                    oscar = oscar - yankee;
                    romeo = oscar - offset;
                    oscar = 4;
                    oscar = oscar * romeo;
                    golf['translateX'] = oscar;
                    oscar = new Array(1);
                    oscar[0] = golf;
                    mike['transform'] = oscar;
                    zulu['style'] = mike;
                    golf = _closure1_slot1;
                    backup = _closure1_slot2;
                    romeo = 9;
                    oscar = backup[romeo];
                    mike = undefined;
                    golf = golf.bind(mike)(oscar);
                    oscar = {};
                    oscar['user'] = entity;
                    oscar['guildId'] = mike;
                    foxtrot = _closure1_slot0;
                    romeo = backup[romeo];
                    romeo = foxtrot.bind(mike)(romeo);
                    romeo = romeo.AvatarSizes;
                    romeo = romeo.XSMALL;
                    oscar['size'] = romeo;
                    options = options.length;
                    options = options - yankee;
                    offset = offset < options;
                    options = undefined;
                    if(!offset) { _fun00008_ip = 157; continue _fun00007 }
 153:
                    options = _closure1_slot13;
 157:
                    oscar['cutout'] = options;
                    oscar = report.bind(mike)(golf, oscar);
                    zulu['children'] = oscar;
                    entity = entity.id;
                    entity = report.bind(mike)(tango, zulu, entity);
                    return entity;
                }
            };
            entity = oscar.bind(golf)(entity);
            report['children'] = entity;
            entity = undefined;
            report = tango.bind(entity)(zulu, report);
            mike['children'] = report;
            entity = tango.bind(entity)(zulu, mike);
            return entity;
        };
        oscar = zulu.bind(oscar)(entity, mike);
        zulu = _closure1_slot12;
        entity = 17;
        entity = verify[entity];
        entity = golf.bind(tango)(entity);
        mike = entity.PressableOpacity;
        entity = {};
        yankee = 'button';
        entity['accessibilityRole'] = yankee;
        yankee = 18;
        foxtrot = verify[yankee];
        foxtrot = golf.bind(tango)(foxtrot);
        kilo = foxtrot.intl;
        backup = kilo.string;
        foxtrot = verify[yankee];
        foxtrot = golf.bind(tango)(foxtrot);
        foxtrot = foxtrot.t;
        foxtrot = foxtrot.CAqwXl;
        foxtrot = backup.bind(kilo)(foxtrot);
        entity['accessibilityLabel'] = foxtrot;
        entity['onPress'] = options;
        options = new Array(2);
        options[0] = offset;
        offset = romeo.pressable;
        options[1] = offset;
        entity['style'] = options;
        options = _closure1_slot11;
        report = 19;
        report = verify[report];
        report = golf.bind(tango)(report);
        offset = report.Text;
        report = {'accessibilityRole': 'header', 'variant': 'text-sm/semibold', 'color': 'header-secondary'};
        romeo = romeo.label;
        report['style'] = romeo;
        romeo = verify[yankee];
        romeo = golf.bind(tango)(romeo);
        foxtrot = romeo.intl;
        romeo = foxtrot.string;
        yankee = verify[yankee];
        yankee = golf.bind(tango)(yankee);
        yankee = yankee.t;
        yankee = yankee.CAqwXl;
        yankee = romeo.bind(foxtrot)(yankee);
        report['children'] = yankee;
        offset = options.bind(tango)(offset, report);
        report = new Array(3);
        report[0] = offset;
        report[1] = oscar;
        oscar = 20;
        oscar = verify[oscar];
        oscar = golf.bind(tango)(oscar);
        golf = oscar.ChevronSmallRightIcon;
        oscar = {};
        verify = 'sm';
        oscar['size'] = verify;
        oscar = options.bind(tango)(golf, oscar);
        report[2] = oscar;
        entity['children'] = report;
        entity = zulu.bind(tango)(mike, entity);
        return entity;
    };
    zulu['default'] = mike;
    return entity;
})();