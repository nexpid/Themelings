// app/modules/user_profile/native/UserProfileYourFriendsCard.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    report = argBar;
    foxtra = argBaz;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    var _closure1_slot1 = foxtra;
    var _closure1_slot2 = oscard;
    tangon = global;
    verify = tangon.Object;
    option = verify.defineProperty;
    golfie = {};
    entity = true;
    golfie['value'] = entity;
    entity = '__esModule';
    entity = option.bind(verify)(zuuluu, entity, golfie);
    entity = 0;
    golfie = oscard[entity];
    entity = undefined;
    golfie = foxtra.bind(entity)(golfie);
    var _closure1_slot3 = golfie;
    yankee = 1;
    option = oscard[yankee];
    golfie = argCor;
    golfie = golfie.bind(entity)(option);
    var _closure1_slot4 = golfie;
    golfie = 2;
    golfie = oscard[golfie];
    golfie = report.bind(entity)(golfie);
    golfie = golfie.View;
    var _closure1_slot5 = golfie;
    golfie = 3;
    golfie = oscard[golfie];
    golfie = foxtra.bind(entity)(golfie);
    var _closure1_slot6 = golfie;
    golfie = 4;
    golfie = oscard[golfie];
    golfie = foxtra.bind(entity)(golfie);
    var _closure1_slot7 = golfie;
    golfie = 5;
    golfie = oscard[golfie];
    golfie = foxtra.bind(entity)(golfie);
    var _closure1_slot8 = golfie;
    golfie = 6;
    golfie = oscard[golfie];
    golfie = report.bind(entity)(golfie);
    golfie = golfie.RelationshipTypes;
    var _closure1_slot9 = golfie;
    golfie = 7;
    golfie = oscard[golfie];
    golfie = report.bind(entity)(golfie);
    option = golfie.jsx;
    var _closure1_slot10 = option;
    golfie = golfie.jsxs;
    var _closure1_slot11 = golfie;
    option = tangon.Object;
    golfie = option.freeze;
    tangon = {};
    verify = 8;
    verify = oscard[verify];
    verify = report.bind(entity)(verify);
    verify = verify.CutoutDirection;
    verify = verify.RIGHT;
    tangon['direction'] = verify;
    verify = -4;
    tangon['inset'] = verify;
    tangon = golfie.bind(option)(tangon);
    var _closure1_slot12 = tangon;
    tangon = 9;
    tangon = oscard[tangon];
    option = report.bind(entity)(tangon);
    golfie = option.createStyles;
    tangon = {};
    verify = {'flex': 1, 'flexDirection': 'row', 'alignItems': 'center', 'padding': 16};
    offset = 'row';
    romeon = 10;
    romeon = oscard[romeon];
    romeon = foxtra.bind(entity)(romeon);
    romeon = romeon.radii;
    romeon = romeon.lg;
    verify['borderRadius'] = romeon;
    tangon['pressable'] = verify;
    verify = {};
    verify['flex'] = yankee;
    tangon['label'] = verify;
    verify = {'flexDirection': 'row', 'alignItems': 'center', 'marginLeft': 'auto', 'marginRight': 8};
    tangon['facepile'] = verify;
    verify = {};
    verify['flexDirection'] = offset;
    tangon['avatars'] = verify;
    tangon = golfie.bind(option)(tangon);
    var _closure1_slot13 = tangon;
    tangon = 21;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/user_profile/native/UserProfileYourFriendsCard.tsx';
    tangon = report.bind(oscard)(tangon);
    michal = function(argFoo) { // Original name: UserProfileYourFriendsCard
        michal = argFoo;
        option = michal.navigateToFriends;
        offset = michal.style;
        michal = _closure1_slot13;
        tangon = undefined;
        romeon = michal.bind(tangon)();
        var _closure2_slot0 = romeon;
        oscard = _closure1_slot4;
        zuuluu = oscard.useState;
        michal = new Array(0);
        golfie = zuuluu.bind(oscard)(michal);
        zuuluu = _closure1_slot3;
        michal = 2;
        zuuluu = zuuluu.bind(tangon)(golfie, michal);
        michal = 0;
        yankee = zuuluu[michal];
        var _closure2_slot1 = yankee;
        michal = 1;
        michal = zuuluu[michal];
        var _closure2_slot2 = michal;
        golfie = _closure1_slot0;
        verify = _closure1_slot2;
        michal = 11;
        zuuluu = verify[michal];
        kiloes = golfie.bind(tangon)(zuuluu);
        backup = kiloes.useStateFromStoresArray;
        zuuluu = _closure1_slot6;
        foxtra = new Array(1);
        foxtra[0] = zuuluu;
        zuuluu = function() {
            michal = _closure1_slot6;
            entity = michal.getUserAffinities;
            zuuluu = entity.bind(michal)();
            michal = zuuluu.map;
            entity = function(argFoo) {
                entity = argFoo;
                entity = entity.otherUserId;
                return entity;
            };
            entity = michal.bind(zuuluu)(entity);
            return entity;
        };
        sizing = backup.bind(kiloes)(foxtra, zuuluu);
        var _closure2_slot3 = sizing;
        michal = verify[michal];
        backup = golfie.bind(tangon)(michal);
        foxtra = backup.useStateFromStoresArray;
        michal = _closure1_slot7;
        zuuluu = new Array(1);
        zuuluu[0] = michal;
        michal = function() {
            michal = _closure1_slot7;
            entity = michal.getFriendIDs;
            entity = entity.bind(michal)();
            return entity;
        };
        kiloes = foxtra.bind(backup)(zuuluu, michal);
        var _closure2_slot4 = kiloes;
        michal = 12;
        michal = verify[michal];
        foxtra = golfie.bind(tangon)(michal);
        zuuluu = foxtra.useIsFriendTiersUIEnabled;
        michal = {};
        backup = 'UserProfileYourFriendsCard';
        michal['location'] = backup;
        michal = zuuluu.bind(foxtra)(michal);
        var _closure2_slot5 = michal;
        zuuluu = 13;
        zuuluu = verify[zuuluu];
        backup = golfie.bind(tangon)(zuuluu);
        foxtra = backup.useGameRelationshipsByType;
        zuuluu = _closure1_slot9;
        zuuluu = zuuluu.FRIEND;
        backup = foxtra.bind(backup)(zuuluu);
        var _closure2_slot6 = backup;
        output = oscard.useEffect;
        foxtra = function() {
            zuuluu = _closure1_slot0;
            michal = _closure1_slot2;
            entity = 14;
            michal = michal[entity];
            entity = undefined;
            zuuluu = zuuluu.bind(entity)(michal);
            michal = zuuluu.fetchUserAffinities;
            michal = michal.bind(zuuluu)();
            return entity;
        };
        zuuluu = new Array(0);
        zuuluu = output.bind(oscard)(foxtra, zuuluu);
        foxtra = oscard.useEffect;
        zuuluu = new Array(4);
        zuuluu[0] = sizing;
        zuuluu[1] = kiloes;
        zuuluu[2] = backup;
        zuuluu[3] = michal;
        michal = function() {
            _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
                tangon = _closure1_slot1;
                zuuluu = _closure1_slot2;
                oscard = 15;
                michal = zuuluu[oscard];
                entity = undefined;
                verify = tangon.bind(entity)(michal);
                option = verify.chain;
                tangon = _closure2_slot3;
                verify = option.bind(verify)(tangon);
                option = verify.filter;
                tangon = function(argFoo) {
                    zuuluu = _closure2_slot4;
                    michal = zuuluu.includes;
                    entity = argFoo;
                    entity = michal.bind(zuuluu)(entity);
                    return entity;
                };
                option = option.bind(verify)(tangon);
                tangon = option.take;
                offset = 5;
                verify = tangon.bind(option)(offset);
                option = verify.map;
                tangon = _closure1_slot8;
                tangon = tangon.getUser;
                verify = option.bind(verify)(tangon);
                tangon = verify.filter;
                yankee = _closure1_slot0;
                option = 16;
                zuuluu = zuuluu[option];
                zuuluu = yankee.bind(entity)(zuuluu);
                zuuluu = zuuluu.isNotNullish;
                tangon = tangon.bind(verify)(zuuluu);
                zuuluu = tangon.value;
                zuuluu = zuuluu.bind(tangon)();
                tangon = zuuluu.length;
                if(!(!(tangon >= offset))) { _fun00002_ip = 344; continue _fun00001 }
 149:
                tangon = _closure2_slot5;
                if(tangon) { _fun00002_ip = 170; continue _fun00001 }
 156:
                tangon = _closure2_slot2;
                tangon = tangon.bind(entity)(zuuluu);
                _fun00002_ip = 353; continue _fun00001;
 170:
                verify = _closure1_slot1;
                tangon = _closure1_slot2;
                oscard = tangon[oscard];
                yankee = verify.bind(entity)(oscard);
                verify = yankee.chain;
                oscard = _closure2_slot6;
                verify = verify.bind(yankee)(oscard);
                oscard = verify.map;
                report = function(argFoo) {
                    entity = argFoo;
                    entity = entity.id;
                    return entity;
                };
                oscard = oscard.bind(verify)(report);
                report = oscard.uniq;
                verify = report.bind(oscard)();
                oscard = verify.take;
                report = zuuluu.length;
                report = offset - report;
                verify = oscard.bind(verify)(report);
                oscard = verify.map;
                report = _closure1_slot8;
                report = report.getUser;
                oscard = oscard.bind(verify)(report);
                report = oscard.filter;
                golfie = _closure1_slot0;
                tangon = tangon[option];
                tangon = golfie.bind(entity)(tangon);
                tangon = tangon.isNotNullish;
                report = report.bind(oscard)(tangon);
                tangon = report.value;
                golfie = tangon.bind(report)();
                report = _closure2_slot2;
                tangon = new Array(0);
                romeon = 0;
                backup = tangon;
                foxtra = zuuluu;
                romeon = arraySpread(backup, foxtra, romeon);
                backup = tangon;
                foxtra = golfie;
                oscard = arraySpread(backup, foxtra, romeon);
                tangon = report.bind(entity)(tangon);
                _fun00002_ip = 353; continue _fun00001;
 344:
                michal = _closure2_slot2;
                michal = michal.bind(entity)(zuuluu);
 353:
                return entity;
            }
        };
        michal = foxtra.bind(oscard)(michal, zuuluu);
        zuuluu = oscard.useMemo;
        michal = new Array(3);
        michal[0] = yankee;
        yankee = romeon.avatars;
        michal[1] = yankee;
        yankee = romeon.facepile;
        michal[2] = yankee;
        entity = function() {
            tangon = _closure1_slot10;
            zuuluu = _closure1_slot5;
            michal = {};
            oscard = _closure2_slot0;
            report = oscard.facepile;
            michal['style'] = report;
            report = {};
            oscard = oscard.avatars;
            report['style'] = oscard;
            golfie = _closure2_slot1;
            oscard = golfie.map;
            entity = function(argFoo, argBar) {
                _fun00003: for(var _fun00004_ip = 0; ; ) switch(_fun00004_ip) {
 0:
                    entity = argFoo;
                    offset = argBar;
                    report = _closure1_slot10;
                    tangon = _closure1_slot5;
                    zuuluu = {};
                    michal = {};
                    golfie = {};
                    option = _closure2_slot1;
                    oscard = option.length;
                    yankee = 1;
                    oscard = oscard - yankee;
                    romeon = oscard - offset;
                    oscard = 4;
                    oscard = oscard * romeon;
                    golfie['translateX'] = oscard;
                    oscard = new Array(1);
                    oscard[0] = golfie;
                    michal['transform'] = oscard;
                    zuuluu['style'] = michal;
                    golfie = _closure1_slot1;
                    backup = _closure1_slot2;
                    romeon = 8;
                    oscard = backup[romeon];
                    michal = undefined;
                    golfie = golfie.bind(michal)(oscard);
                    oscard = {};
                    oscard['user'] = entity;
                    oscard['guildId'] = michal;
                    foxtra = _closure1_slot0;
                    romeon = backup[romeon];
                    romeon = foxtra.bind(michal)(romeon);
                    romeon = romeon.AvatarSizes;
                    romeon = romeon.XSMALL;
                    oscard['size'] = romeon;
                    option = option.length;
                    option = option - yankee;
                    offset = offset < option;
                    option = undefined;
                    if(!offset) { _fun00004_ip = 157; continue _fun00003 }
 153:
                    option = _closure1_slot12;
 157:
                    oscard['cutout'] = option;
                    oscard = report.bind(michal)(golfie, oscard);
                    zuuluu['children'] = oscard;
                    entity = entity.id;
                    entity = report.bind(michal)(tangon, zuuluu, entity);
                    return entity;
                }
            };
            entity = oscard.bind(golfie)(entity);
            report['children'] = entity;
            entity = undefined;
            report = tangon.bind(entity)(zuuluu, report);
            michal['children'] = report;
            entity = tangon.bind(entity)(zuuluu, michal);
            return entity;
        };
        oscard = zuuluu.bind(oscard)(entity, michal);
        zuuluu = _closure1_slot11;
        entity = 17;
        entity = verify[entity];
        entity = golfie.bind(tangon)(entity);
        michal = entity.PressableOpacity;
        entity = {};
        yankee = 'button';
        entity['accessibilityRole'] = yankee;
        yankee = 18;
        foxtra = verify[yankee];
        foxtra = golfie.bind(tangon)(foxtra);
        kiloes = foxtra.intl;
        backup = kiloes.string;
        foxtra = verify[yankee];
        foxtra = golfie.bind(tangon)(foxtra);
        foxtra = foxtra.t;
        foxtra = foxtra.CAqwXl;
        foxtra = backup.bind(kiloes)(foxtra);
        entity['accessibilityLabel'] = foxtra;
        entity['onPress'] = option;
        option = new Array(2);
        option[0] = offset;
        offset = romeon.pressable;
        option[1] = offset;
        entity['style'] = option;
        option = _closure1_slot10;
        report = 19;
        report = verify[report];
        report = golfie.bind(tangon)(report);
        offset = report.Text;
        report = {'accessibilityRole': 'header', 'variant': 'text-sm/semibold', 'color': 'header-secondary'};
        romeon = romeon.label;
        report['style'] = romeon;
        romeon = verify[yankee];
        romeon = golfie.bind(tangon)(romeon);
        foxtra = romeon.intl;
        romeon = foxtra.string;
        yankee = verify[yankee];
        yankee = golfie.bind(tangon)(yankee);
        yankee = yankee.t;
        yankee = yankee.CAqwXl;
        yankee = romeon.bind(foxtra)(yankee);
        report['children'] = yankee;
        offset = option.bind(tangon)(offset, report);
        report = new Array(3);
        report[0] = offset;
        report[1] = oscard;
        oscard = 20;
        oscard = verify[oscard];
        oscard = golfie.bind(tangon)(oscard);
        golfie = oscard.ChevronSmallRightIcon;
        oscard = {};
        verify = 'sm';
        oscard['size'] = verify;
        oscard = option.bind(tangon)(golfie, oscard);
        report[2] = oscard;
        entity['children'] = report;
        entity = zuuluu.bind(tangon)(michal, entity);
        return entity;
    };
    zuuluu['default'] = michal;
    return entity;
})();