// app/modules/user_profile/native/NonUserBotProfileContent.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    report = argBar;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    entity = argBaz;
    var _closure1_slot1 = entity;
    var _closure1_slot2 = oscard;
    entity = global;
    option = entity.Object;
    golfie = option.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(option)(zuuluu, entity, tangon);
    entity = 0;
    golfie = oscard[entity];
    tangon = argCor;
    entity = undefined;
    golfie = tangon.bind(entity)(golfie);
    tangon = 1;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.View;
    var _closure1_slot3 = tangon;
    tangon = 2;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    option = tangon.PROFILE_CONTENT_BOTTOM_PADDING;
    var _closure1_slot4 = option;
    tangon = tangon.PROFILE_CONTENT_WITHOUT_STATUS_TOP_PADDING;
    var _closure1_slot5 = tangon;
    tangon = 3;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.ACTION_SHEET_MAX_WIDTH;
    var _closure1_slot6 = tangon;
    tangon = 4;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    option = tangon.jsx;
    var _closure1_slot7 = option;
    option = tangon.jsxs;
    var _closure1_slot8 = option;
    tangon = tangon.Fragment;
    var _closure1_slot9 = tangon;
    tangon = golfie.memo;
    michal = function(argFoo) { // Original name: NonUserBotProfileContent
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            entity = argFoo;
            ctrled = entity.user;
            echoed = entity.channel;
            source = entity.displayProfile;
            report = undefined;
            var _closure2_slot1 = report;
            michal = _closure1_slot1;
            zuuluu = _closure1_slot2;
            entity = 5;
            entity = zuuluu[entity];
            entity = michal.bind(report)(entity);
            result = entity.bind(report)();
            tangon = _closure1_slot0;
            entity = 6;
            entity = zuuluu[entity];
            tangon = tangon.bind(report)(entity);
            entity = tangon.useUserProfileAnalyticsContext;
            entity = entity.bind(tangon)();
            entity = entity.trackUserProfileAction;
            var _closure2_slot0 = entity;
            entity = 7;
            entity = zuuluu[entity];
            oscard = michal.bind(report)(entity);
            tangon = oscard.useName;
            entity = null;
            michal = entity == echoed;
            zuuluu = undefined;
            if(michal) { _fun00002_ip = 124; continue _fun00001 }
 119:
            zuuluu = echoed.guild_id;
 124:
            golfie = entity == echoed;
            michal = undefined;
            if(golfie) { _fun00002_ip = 138; continue _fun00001 }
 133:
            michal = echoed.id;
 138:
            vacuum = tangon.bind(oscard)(zuuluu, michal, ctrled);
            zuuluu = _closure1_slot1;
            tangon = _closure1_slot2;
            michal = 8;
            michal = tangon[michal];
            oscard = zuuluu.bind(report)(michal);
            michal = oscard.useUserTag;
            michal = michal.bind(oscard)(ctrled);
            _closure2_slot1 = michal;
            michal = 9;
            michal = tangon[michal];
            oscard = zuuluu.bind(report)(michal);
            michal = _closure1_slot6;
            option = oscard.bind(report)(michal);
            michal = 10;
            michal = tangon[michal];
            michal = zuuluu.bind(report)(michal);
            michal = michal.bind(report)();
            sizing = michal.bottom;
            michal = 11;
            michal = tangon[michal];
            zuuluu = zuuluu.bind(report)(michal);
            michal = {};
            michal['user'] = ctrled;
            michal['displayProfile'] = source;
            michal = zuuluu.bind(report)(michal);
            oscard = michal.theme;
            kiloes = michal.primaryColor;
            backup = michal.secondaryColor;
            zuuluu = _closure1_slot0;
            michal = 12;
            michal = tangon[michal];
            tangon = zuuluu.bind(report)(michal);
            zuuluu = tangon.useUserProfileColors;
            michal = {};
            michal['theme'] = oscard;
            michal['primaryColor'] = kiloes;
            michal['secondaryColor'] = backup;
            michal = zuuluu.bind(tangon)(michal);
            foxtra = michal.gradientFallbackBackground;
            romeon = michal.avatarBackground;
            update = michal.containerBackground;
            if(!(entity != ctrled)) { _fun00002_ip = 893; continue _fun00001 }
 337:
            cntext = function() { // Original name: handleCopyUsername
                tangon = _closure2_slot0;
                zuuluu = {};
                entity = 'COPY_USERNAME';
                zuuluu['action'] = entity;
                entity = undefined;
                zuuluu = tangon.bind(entity)(zuuluu);
                zuuluu = _closure1_slot0;
                tangon = _closure1_slot2;
                report = 13;
                report = tangon[report];
                oscard = zuuluu.bind(entity)(report);
                report = oscard.copy;
                michal = _closure2_slot1;
                michal = report.bind(oscard)(michal);
                michal = 14;
                michal = tangon[michal];
                zuuluu = zuuluu.bind(entity)(michal);
                michal = zuuluu.presentUsernameCopied;
                michal = michal.bind(zuuluu)();
                return entity;
            };
            tangon = _closure1_slot8;
            zuuluu = _closure1_slot9;
            michal = {};
            yankee = _closure1_slot7;
            offset = _closure1_slot1;
            sequen = _closure1_slot2;
            oscard = 15;
            oscard = sequen[oscard];
            golfie = offset.bind(report)(oscard);
            oscard = {};
            oscard['user'] = ctrled;
            oscard['displayProfile'] = source;
            oscard['bannerHeight'] = option;
            golfie = yankee.bind(report)(golfie, oscard);
            oscard = new Array(2);
            oscard[0] = golfie;
            option = _closure1_slot3;
            golfie = {};
            verify = 16;
            verify = sequen[verify];
            offset = offset.bind(report)(verify);
            verify = {};
            verify['user'] = ctrled;
            sequen = entity == source;
            config = undefined;
            if(sequen) { _fun00002_ip = 444; continue _fun00001 }
 439:
            config = source.guildId;
 444:
            papara = entity != config;
            sequen = undefined;
            if(!papara) { _fun00002_ip = 456; continue _fun00001 }
 453:
            sequen = config;
 456:
            verify['guildId'] = sequen;
            verify['backgroundColor'] = romeon;
            config = true;
            verify['disableStatus'] = config;
            offset = yankee.bind(report)(offset, verify);
            verify = new Array(2);
            verify[0] = offset;
            romeon = _closure1_slot8;
            sequen = _closure1_slot1;
            papara = _closure1_slot2;
            offset = 17;
            offset = papara[offset];
            yankee = sequen.bind(report)(offset);
            offset = {};
            offset['primaryColor'] = kiloes;
            offset['secondaryColor'] = backup;
            offset['fallbackBackground'] = foxtra;
            backup = result.profileContent;
            foxtra = new Array(2);
            foxtra[0] = backup;
            backup = {};
            kiloes = _closure1_slot5;
            backup['paddingTop'] = kiloes;
            kiloes = _closure1_slot4;
            kiloes = sizing + kiloes;
            backup['paddingBottom'] = kiloes;
            foxtra[1] = backup;
            offset['containerStyle'] = foxtra;
            kiloes = _closure1_slot7;
            backup = _closure1_slot3;
            foxtra = {};
            sizing = result.primaryInfo;
            foxtra['style'] = sizing;
            sizing = 18;
            sizing = papara[sizing];
            sequen = sequen.bind(report)(sizing);
            sizing = {};
            sizing['user'] = ctrled;
            target = entity == echoed;
            papara = undefined;
            if(target) { _fun00002_ip = 625; continue _fun00001 }
 620:
            papara = echoed.guild_id;
 625:
            sizing['guildId'] = papara;
            sizing['displayName'] = vacuum;
            papara = entity == source;
            vacuum = undefined;
            if(papara) { _fun00002_ip = 648; continue _fun00001 }
 642:
            vacuum = source.pronouns;
 648:
            sizing['pronouns'] = vacuum;
            sizing['badgeContainerBackground'] = update;
            sierra = _closure1_slot0;
            vacuum = _closure1_slot2;
            papara = 19;
            target = vacuum[papara];
            target = sierra.bind(report)(target);
            status = target.intl;
            target = status.string;
            papara = vacuum[papara];
            papara = sierra.bind(report)(papara);
            papara = papara.t;
            papara = papara.y5MwJy;
            papara = target.bind(status)(papara);
            sizing['displayNameAccessibilityHint'] = papara;
            sizing['onPressDisplayName'] = cntext;
            sizing['onPressUserTag'] = cntext;
            record = function() { // Original name: onPressPronouns
                zuuluu = _closure2_slot0;
                michal = {};
                entity = 'PRESS_PRONOUNS';
                michal['action'] = entity;
                entity = undefined;
                michal = zuuluu.bind(entity)(michal);
                zuuluu = _closure1_slot0;
                tangon = _closure1_slot2;
                michal = 14;
                michal = tangon[michal];
                zuuluu = zuuluu.bind(entity)(michal);
                michal = zuuluu.presentUserPronouns;
                michal = michal.bind(zuuluu)();
                return entity;
            };
            sizing['onPressPronouns'] = record;
            sizing['showBadgeToastOnPress'] = config;
            sizing = kiloes.bind(report)(sequen, sizing);
            foxtra['children'] = sizing;
            backup = kiloes.bind(report)(backup, foxtra);
            foxtra = new Array(2);
            foxtra[0] = backup;
            sizing = _closure1_slot7;
            kiloes = _closure1_slot3;
            backup = {};
            result = result.cards;
            backup['style'] = result;
            result = _closure1_slot1;
            output = 20;
            output = vacuum[output];
            result = result.bind(report)(output);
            output = {};
            ctrled = ctrled.id;
            output['userId'] = ctrled;
            output['displayProfile'] = source;
            output['channel'] = echoed;
            echoed = {};
            echoed['backgroundColor'] = update;
            output['style'] = echoed;
            output = sizing.bind(report)(result, output);
            backup['children'] = output;
            backup = sizing.bind(report)(kiloes, backup);
            foxtra[1] = backup;
            offset['children'] = foxtra;
            offset = romeon.bind(report)(yankee, offset);
            verify[1] = offset;
            golfie['children'] = verify;
            golfie = tangon.bind(report)(option, golfie);
            oscard[1] = golfie;
            michal['children'] = oscard;
            michal = tangon.bind(report)(zuuluu, michal);
            return michal;
 893:
            return entity;
        }
    };
    michal = tangon.bind(golfie)(michal);
    tangon = 21;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/user_profile/native/NonUserBotProfileContent.tsx';
    tangon = report.bind(oscard)(tangon);
    zuuluu['default'] = michal;
    return entity;
})();