// app/modules/user_profile/native/NonUserBotProfileContent.tsx
export default (function(argFoo, argBar, argBaz, argCorge, _, argFred, argPlugh) {
    report = argBar;
    zulu = argFred;
    oscar = argPlugh;
    var _closure1_slot0 = report;
    entity = argBaz;
    var _closure1_slot1 = entity;
    var _closure1_slot2 = oscar;
    entity = global;
    options = entity.Object;
    golf = options.defineProperty;
    tango = {};
    entity = true;
    tango['value'] = entity;
    entity = '__esModule';
    entity = golf.bind(options)(zulu, entity, tango);
    entity = 0;
    golf = oscar[entity];
    tango = argCorge;
    entity = undefined;
    golf = tango.bind(entity)(golf);
    tango = 1;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.View;
    var _closure1_slot3 = tango;
    tango = 2;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    options = tango.PROFILE_CONTENT_BOTTOM_PADDING;
    var _closure1_slot4 = options;
    tango = tango.PROFILE_CONTENT_WITHOUT_STATUS_TOP_PADDING;
    var _closure1_slot5 = tango;
    tango = 3;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.ACTION_SHEET_MAX_WIDTH;
    var _closure1_slot6 = tango;
    tango = 4;
    options = oscar[tango];
    options = report.bind(entity)(options);
    options = options.jsx;
    var _closure1_slot7 = options;
    options = oscar[tango];
    options = report.bind(entity)(options);
    options = options.jsxs;
    var _closure1_slot8 = options;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.Fragment;
    var _closure1_slot9 = tango;
    tango = golf.memo;
    mike = function(argFoo) { // Original name: NonUserBotProfileContent
        _fun77254: for(var _fun77254_ip = 0; ; ) switch(_fun77254_ip) {
 0:
            entity = argFoo;
            control = entity.user;
            echo = entity.channel;
            source = entity.displayProfile;
            verify = entity.showUserProfileActionSheet;
            report = undefined;
            var _closure2_slot1 = report;
            mike = _closure1_slot1;
            zulu = _closure1_slot2;
            entity = 5;
            entity = zulu[entity];
            entity = mike.bind(report)(entity);
            result = entity.bind(report)();
            tango = _closure1_slot0;
            entity = 6;
            entity = zulu[entity];
            tango = tango.bind(report)(entity);
            entity = tango.useUserProfileAnalyticsContext;
            entity = entity.bind(tango)();
            entity = entity.trackUserProfileAction;
            var _closure2_slot0 = entity;
            entity = 7;
            entity = zulu[entity];
            oscar = mike.bind(report)(entity);
            tango = oscar.useName;
            entity = null;
            mike = entity == echo;
            zulu = undefined;
            if(mike) { _fun77254_ip = 130; continue _fun77254 }
 125:
            zulu = echo.guild_id;
 130:
            golf = entity == echo;
            mike = undefined;
            if(golf) { _fun77254_ip = 144; continue _fun77254 }
 139:
            mike = echo.id;
 144:
            vacuum = tango.bind(oscar)(zulu, mike, control);
            zulu = _closure1_slot1;
            tango = _closure1_slot2;
            mike = 8;
            mike = tango[mike];
            oscar = zulu.bind(report)(mike);
            mike = oscar.useUserTag;
            mike = mike.bind(oscar)(control);
            _closure2_slot1 = mike;
            mike = 9;
            mike = tango[mike];
            oscar = zulu.bind(report)(mike);
            mike = _closure1_slot6;
            options = oscar.bind(report)(mike);
            mike = 10;
            mike = tango[mike];
            mike = zulu.bind(report)(mike);
            mike = mike.bind(report)();
            sizing = mike.bottom;
            mike = 11;
            mike = tango[mike];
            zulu = zulu.bind(report)(mike);
            mike = {};
            mike['user'] = control;
            mike['displayProfile'] = source;
            mike = zulu.bind(report)(mike);
            oscar = mike.theme;
            kilo = mike.primaryColor;
            backup = mike.secondaryColor;
            zulu = _closure1_slot0;
            mike = 12;
            mike = tango[mike];
            tango = zulu.bind(report)(mike);
            zulu = tango.useUserProfileColors;
            mike = {};
            mike['theme'] = oscar;
            mike['primaryColor'] = kilo;
            mike['secondaryColor'] = backup;
            mike = zulu.bind(tango)(mike);
            foxtrot = mike.gradientFallbackBackground;
            romeo = mike.avatarBackground;
            update = mike.containerBackground;
            if(!(entity != control)) { _fun77254_ip = 912; continue _fun77254 }
 343:
            context = function() { // Original name: handleCopyUsername
                tango = _closure2_slot0;
                zulu = {};
                entity = 'COPY_USERNAME';
                zulu['action'] = entity;
                entity = undefined;
                zulu = tango.bind(entity)(zulu);
                zulu = _closure1_slot0;
                tango = _closure1_slot2;
                report = 13;
                report = tango[report];
                oscar = zulu.bind(entity)(report);
                report = oscar.copy;
                mike = _closure2_slot1;
                mike = report.bind(oscar)(mike);
                mike = 14;
                mike = tango[mike];
                zulu = zulu.bind(entity)(mike);
                mike = zulu.presentUsernameCopied;
                mike = mike.bind(zulu)();
                return entity;
            };
            tango = _closure1_slot8;
            zulu = _closure1_slot9;
            mike = {};
            yankee = _closure1_slot7;
            offset = _closure1_slot1;
            sequence = _closure1_slot2;
            oscar = 15;
            oscar = sequence[oscar];
            golf = offset.bind(report)(oscar);
            oscar = {};
            oscar['user'] = control;
            oscar['channel'] = echo;
            oscar['displayProfile'] = source;
            oscar['showUserProfile'] = verify;
            oscar['bannerHeight'] = options;
            golf = yankee.bind(report)(golf, oscar);
            oscar = new Array(2);
            oscar[0] = golf;
            options = _closure1_slot3;
            golf = {};
            verify = 16;
            verify = sequence[verify];
            offset = offset.bind(report)(verify);
            verify = {};
            verify['user'] = control;
            sequence = entity == source;
            config = undefined;
            if(sequence) { _fun77254_ip = 461; continue _fun77254 }
 456:
            config = source.guildId;
 461:
            papa = entity != config;
            sequence = undefined;
            if(!papa) { _fun77254_ip = 473; continue _fun77254 }
 470:
            sequence = config;
 473:
            verify['guildId'] = sequence;
            verify['backgroundColor'] = romeo;
            config = true;
            verify['disableStatus'] = config;
            offset = yankee.bind(report)(offset, verify);
            verify = new Array(2);
            verify[0] = offset;
            romeo = _closure1_slot8;
            sequence = _closure1_slot1;
            papa = _closure1_slot2;
            offset = 17;
            offset = papa[offset];
            yankee = sequence.bind(report)(offset);
            offset = {};
            offset['primaryColor'] = kilo;
            offset['secondaryColor'] = backup;
            offset['fallbackBackground'] = foxtrot;
            backup = result.profileContent;
            foxtrot = new Array(2);
            foxtrot[0] = backup;
            backup = {};
            kilo = _closure1_slot5;
            backup['paddingTop'] = kilo;
            kilo = _closure1_slot4;
            kilo = sizing + kilo;
            backup['paddingBottom'] = kilo;
            foxtrot[1] = backup;
            offset['containerStyle'] = foxtrot;
            kilo = _closure1_slot7;
            backup = _closure1_slot3;
            foxtrot = {};
            sizing = result.primaryInfo;
            foxtrot['style'] = sizing;
            sizing = 18;
            sizing = papa[sizing];
            sequence = sequence.bind(report)(sizing);
            sizing = {};
            sizing['user'] = control;
            target = entity == echo;
            papa = undefined;
            if(target) { _fun77254_ip = 642; continue _fun77254 }
 637:
            papa = echo.guild_id;
 642:
            sizing['guildId'] = papa;
            sizing['displayName'] = vacuum;
            papa = entity == source;
            vacuum = undefined;
            if(papa) { _fun77254_ip = 665; continue _fun77254 }
 659:
            vacuum = source.pronouns;
 665:
            sizing['pronouns'] = vacuum;
            sizing['badgeContainerBackground'] = update;
            sierra = _closure1_slot0;
            vacuum = _closure1_slot2;
            papa = 19;
            target = vacuum[papa];
            target = sierra.bind(report)(target);
            status = target.intl;
            target = status.string;
            papa = vacuum[papa];
            papa = sierra.bind(report)(papa);
            papa = papa.t;
            papa = papa.y5MwJy;
            papa = target.bind(status)(papa);
            sizing['displayNameAccessibilityHint'] = papa;
            sizing['onPressDisplayName'] = context;
            sizing['onPressUserTag'] = context;
            record = function() { // Original name: onPressPronouns
                zulu = _closure2_slot0;
                mike = {};
                entity = 'PRESS_PRONOUNS';
                mike['action'] = entity;
                entity = undefined;
                mike = zulu.bind(entity)(mike);
                zulu = _closure1_slot0;
                tango = _closure1_slot2;
                mike = 14;
                mike = tango[mike];
                zulu = zulu.bind(entity)(mike);
                mike = zulu.presentUserPronouns;
                mike = mike.bind(zulu)();
                return entity;
            };
            sizing['onPressPronouns'] = record;
            sizing['showBadgeToastOnPress'] = config;
            sizing = kilo.bind(report)(sequence, sizing);
            foxtrot['children'] = sizing;
            backup = kilo.bind(report)(backup, foxtrot);
            foxtrot = new Array(2);
            foxtrot[0] = backup;
            sizing = _closure1_slot7;
            kilo = _closure1_slot3;
            backup = {};
            result = result.cards;
            backup['style'] = result;
            result = _closure1_slot1;
            output = 20;
            output = vacuum[output];
            result = result.bind(report)(output);
            output = {};
            control = control.id;
            output['userId'] = control;
            output['displayProfile'] = source;
            output['channel'] = echo;
            echo = {};
            echo['backgroundColor'] = update;
            output['style'] = echo;
            output = sizing.bind(report)(result, output);
            backup['children'] = output;
            backup = sizing.bind(report)(kilo, backup);
            foxtrot[1] = backup;
            offset['children'] = foxtrot;
            offset = romeo.bind(report)(yankee, offset);
            verify[1] = offset;
            golf['children'] = verify;
            golf = tango.bind(report)(options, golf);
            oscar[1] = golf;
            mike['children'] = oscar;
            mike = tango.bind(report)(zulu, mike);
            return mike;
 912:
            return entity;
        }
    };
    mike = tango.bind(golf)(mike);
    tango = 21;
    tango = oscar[tango];
    oscar = report.bind(entity)(tango);
    report = oscar.fileFinishedImporting;
    tango = 'modules/user_profile/native/NonUserBotProfileContent.tsx';
    tango = report.bind(oscar)(tango);
    zulu['default'] = mike;
    return entity;
})();