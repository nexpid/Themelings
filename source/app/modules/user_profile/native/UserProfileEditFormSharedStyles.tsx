// app/modules/user_profile/native/UserProfileEditFormSharedStyles.tsx
export default (function(_, argBar, argBaz, __, ___, argFre, argPlu) {
    report = argBar;
    yankee = argBaz;
    zuuluu = argFre;
    oscard = argPlu;
    entity = global;
    golfie = entity.Object;
    tangon = golfie.defineProperty;
    michal = {};
    entity = true;
    michal['value'] = entity;
    entity = '__esModule';
    entity = tangon.bind(golfie)(zuuluu, entity, michal);
    entity = 0;
    michal = oscard[entity];
    entity = undefined;
    michal = report.bind(entity)(michal);
    verify = michal.ARBITRARY_LARGE_OFFSET;
    offset = michal.FLOATING_UPSELL_HEIGHT;
    romeon = 1;
    michal = oscard[romeon];
    golfie = report.bind(entity)(michal);
    tangon = golfie.createStyles;
    michal = {};
    option = {};
    option['flex'] = romeon;
    michal['container'] = option;
    option = {'position': 'absolute', 'top': null, 'height': null, 'right': 0, 'left': 0};
    foxtra = -verify;
    option['top'] = foxtra;
    option['height'] = verify;
    verify = 2;
    foxtra = oscard[verify];
    foxtra = yankee.bind(entity)(foxtra);
    foxtra = foxtra.colors;
    foxtra = foxtra.BACKGROUND_NESTED_FLOATING;
    option['backgroundColor'] = foxtra;
    michal['bounceOffset'] = option;
    option = {};
    option['zIndex'] = romeon;
    michal['avatarContainer'] = option;
    option = {'marginTop': 16, 'padding': 16, 'borderRadius': null, 'rowGap': 20};
    romeon = oscard[verify];
    romeon = yankee.bind(entity)(romeon);
    romeon = romeon.radii;
    romeon = romeon.lg;
    option['borderRadius'] = romeon;
    michal['formContainer'] = option;
    option = {'flex': 1, 'flexDirection': 'row', 'justifyContent': 'center'};
    michal['errorContainer'] = option;
    option = {'position': 'absolute', 'marginBottom': null, 'left': 0, 'right': 0};
    verify = oscard[verify];
    verify = yankee.bind(entity)(verify);
    verify = verify.spacing;
    verify = verify.PX_4;
    option['marginBottom'] = verify;
    verify = 12;
    verify = offset - verify;
    option['maxHeight'] = verify;
    michal['floatingUpsell'] = option;
    michal = tangon.bind(golfie)(michal);
    tangon = 3;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/user_profile/native/UserProfileEditFormSharedStyles.tsx';
    tangon = report.bind(oscard)(tangon);
    zuuluu['default'] = michal;
    return entity;
})();