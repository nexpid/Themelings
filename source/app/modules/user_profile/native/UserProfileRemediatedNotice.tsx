// app/modules/user_profile/native/UserProfileRemediatedNotice.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    report = argBar;
    yankee = argBaz;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    var _closure1_slot1 = yankee;
    var _closure1_slot2 = oscard;
    entity = global;
    option = entity.Object;
    golfie = option.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(option)(zuuluu, entity, tangon);
    entity = 0;
    golfie = oscard[entity];
    tangon = argCor;
    entity = undefined;
    tangon = tangon.bind(entity)(golfie);
    tangon = 1;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.View;
    var _closure1_slot3 = tangon;
    tangon = 2;
    tangon = oscard[tangon];
    tangon = yankee.bind(entity)(tangon);
    var _closure1_slot4 = tangon;
    tangon = 3;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.RelationshipTypes;
    var _closure1_slot5 = tangon;
    tangon = 4;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    golfie = tangon.jsx;
    var _closure1_slot6 = golfie;
    golfie = tangon.Fragment;
    var _closure1_slot7 = golfie;
    tangon = tangon.jsxs;
    var _closure1_slot8 = tangon;
    tangon = 5;
    tangon = oscard[tangon];
    option = report.bind(entity)(tangon);
    golfie = option.createStyles;
    tangon = {};
    verify = {};
    offset = 6;
    romeon = oscard[offset];
    romeon = yankee.bind(entity)(romeon);
    romeon = romeon.spacing;
    romeon = romeon.PX_12;
    verify['padding'] = romeon;
    offset = oscard[offset];
    offset = yankee.bind(entity)(offset);
    offset = offset.spacing;
    offset = offset.PX_8;
    verify['gap'] = offset;
    offset = 'row';
    verify['flexDirection'] = offset;
    offset = 'center';
    verify['alignItems'] = offset;
    tangon['container'] = verify;
    tangon = golfie.bind(option)(tangon);
    var _closure1_slot9 = tangon;
    tangon = 12;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/user_profile/native/UserProfileRemediatedNotice.tsx';
    tangon = report.bind(oscard)(tangon);
    michal = function(argFoo) { // Original name: RemediatedUserNotice
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            entity = argFoo;
            michal = entity.user;
            var _closure2_slot0 = michal;
            verify = entity.style;
            entity = _closure1_slot9;
            report = undefined;
            oscard = entity.bind(report)();
            michal = _closure1_slot1;
            zuuluu = _closure1_slot2;
            entity = 7;
            entity = zuuluu[entity];
            entity = michal.bind(report)(entity);
            offset = entity.bind(report)();
            michal = _closure1_slot0;
            entity = 8;
            entity = zuuluu[entity];
            tangon = michal.bind(report)(entity);
            zuuluu = tangon.useStateFromStoresObject;
            entity = _closure1_slot4;
            michal = new Array(1);
            michal[0] = entity;
            entity = function() {
                entity = {};
                tangon = _closure1_slot4;
                oscard = tangon.getRelationshipType;
                michal = _closure2_slot0;
                report = michal.id;
                report = oscard.bind(tangon)(report);
                zuuluu = _closure1_slot5;
                zuuluu = zuuluu.PENDING_INCOMING;
                zuuluu = report === zuuluu;
                entity['isPendingIncoming'] = zuuluu;
                report = tangon.isBlocked;
                zuuluu = michal.id;
                zuuluu = report.bind(tangon)(zuuluu);
                entity['isBlocked'] = zuuluu;
                zuuluu = tangon.isIgnored;
                michal = michal.id;
                michal = zuuluu.bind(tangon)(michal);
                entity['isIgnored'] = michal;
                return entity;
            };
            entity = zuuluu.bind(tangon)(michal, entity);
            michal = entity.isPendingIncoming;
            option = entity.isBlocked;
            golfie = entity.isIgnored;
            if(option) { _fun00002_ip = 140; continue _fun00001 }
 124:
            entity = null;
            if(!golfie) { _fun00002_ip = 587; continue _fun00001 }
 132:
            entity = null;
            if(michal) { _fun00002_ip = 587; continue _fun00001 }
 140:
            tangon = _closure1_slot8;
            zuuluu = _closure1_slot3;
            michal = {};
            romeon = oscard.container;
            oscard = new Array(3);
            oscard[0] = romeon;
            offset = offset.card;
            oscard[1] = offset;
            oscard[2] = verify;
            michal['style'] = oscard;
            if(!option) { _fun00002_ip = 286; continue _fun00001 }
 184:
            offset = _closure1_slot6;
            kiloes = _closure1_slot0;
            sizing = _closure1_slot2;
            oscard = 9;
            oscard = sizing[oscard];
            oscard = kiloes.bind(report)(oscard);
            verify = oscard.Text;
            oscard = {'variant': 'text-sm/semibold', 'color': 'header-secondary', 'lineClamp': 1};
            romeon = 10;
            foxtra = sizing[romeon];
            foxtra = kiloes.bind(report)(foxtra);
            backup = foxtra.intl;
            foxtra = backup.string;
            romeon = sizing[romeon];
            romeon = kiloes.bind(report)(romeon);
            romeon = romeon.t;
            romeon = romeon.oC/fU1;
            romeon = foxtra.bind(backup)(romeon);
            oscard['children'] = romeon;
            option = offset.bind(report)(verify, oscard);
 286:
            oscard = new Array(2);
            oscard[0] = option;
            if(!golfie) { _fun00002_ip = 573; continue _fun00001 }
 300:
            offset = _closure1_slot8;
            verify = _closure1_slot7;
            option = {};
            backup = _closure1_slot6;
            sizing = _closure1_slot0;
            update = _closure1_slot2;
            romeon = 9;
            yankee = update[romeon];
            yankee = sizing.bind(report)(yankee);
            foxtra = yankee.Text;
            yankee = {'variant': 'text-sm/semibold', 'color': 'header-secondary', 'lineClamp': 1};
            kiloes = 10;
            output = update[kiloes];
            output = sizing.bind(report)(output);
            source = output.intl;
            result = source.string;
            output = update[kiloes];
            output = sizing.bind(report)(output);
            output = output.t;
            output = output.HXz5Ag;
            output = result.bind(source)(output);
            yankee['children'] = output;
            foxtra = backup.bind(report)(foxtra, yankee);
            yankee = new Array(3);
            yankee[0] = foxtra;
            foxtra = update[romeon];
            foxtra = sizing.bind(report)(foxtra);
            output = foxtra.Text;
            foxtra = {'variant': 'text-sm/semibold', 'color': 'header-secondary', 'children': 'â€¢'};
            foxtra = backup.bind(report)(output, foxtra);
            yankee[1] = foxtra;
            romeon = update[romeon];
            romeon = sizing.bind(report)(romeon);
            foxtra = romeon.Text;
            romeon = {'variant': 'text-sm/semibold', 'color': 'header-secondary'};
            output = update[kiloes];
            output = sizing.bind(report)(output);
            result = output.intl;
            output = result.format;
            kiloes = update[kiloes];
            kiloes = sizing.bind(report)(kiloes);
            kiloes = kiloes.t;
            sizing = kiloes.PrtAq6;
            kiloes = {};
            echoed = function(argFoo) { // Original name: unignoreHook
                tangon = _closure1_slot6;
                michal = _closure1_slot0;
                zuuluu = _closure1_slot2;
                entity = 9;
                entity = zuuluu[entity];
                zuuluu = undefined;
                entity = michal.bind(zuuluu)(entity);
                michal = entity.Text;
                entity = {'role': 'link', 'variant': 'heading-sm/medium', 'color': 'text-link'};
                report = function() { // Original name: onPress
                    zuuluu = _closure1_slot1;
                    michal = _closure1_slot2;
                    entity = 11;
                    michal = michal[entity];
                    entity = undefined;
                    tangon = zuuluu.bind(entity)(michal);
                    zuuluu = tangon.unignoreUser;
                    entity = _closure2_slot0;
                    michal = entity.id;
                    entity = 'UserProfileRemediatedNotice';
                    entity = zuuluu.bind(tangon)(michal, entity);
                    return entity;
                };
                entity['onPress'] = report;
                report = argFoo;
                entity['children'] = report;
                entity = tangon.bind(zuuluu)(michal, entity);
                return entity;
            };
            kiloes['unignoreHook'] = echoed;
            kiloes = output.bind(result)(sizing, kiloes);
            romeon['children'] = kiloes;
            romeon = backup.bind(report)(foxtra, romeon);
            yankee[2] = romeon;
            option['children'] = yankee;
            golfie = offset.bind(report)(verify, option);
 573:
            oscard[1] = golfie;
            michal['children'] = oscard;
            entity = tangon.bind(report)(zuuluu, michal);
 587:
            return entity;
        }
    };
    zuuluu['default'] = michal;
    return entity;
})();