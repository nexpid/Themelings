// app/modules/user_profile/native/UserProfileRemediatedNotice.tsx
export default (function(argFoo, argBar, argBaz, argCorge, _, argFred, argPlugh) {
    report = argBar;
    yankee = argBaz;
    zulu = argFred;
    oscar = argPlugh;
    var _closure1_slot0 = report;
    var _closure1_slot1 = yankee;
    var _closure1_slot2 = oscar;
    entity = global;
    options = entity.Object;
    golf = options.defineProperty;
    tango = {};
    entity = true;
    tango['value'] = entity;
    entity = '__esModule';
    entity = golf.bind(options)(zulu, entity, tango);
    entity = 0;
    golf = oscar[entity];
    tango = argCorge;
    entity = undefined;
    tango = tango.bind(entity)(golf);
    tango = 1;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.View;
    var _closure1_slot3 = tango;
    tango = 2;
    tango = oscar[tango];
    tango = yankee.bind(entity)(tango);
    var _closure1_slot4 = tango;
    tango = 3;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.RelationshipTypes;
    var _closure1_slot5 = tango;
    tango = 4;
    golf = oscar[tango];
    golf = report.bind(entity)(golf);
    golf = golf.jsx;
    var _closure1_slot6 = golf;
    golf = oscar[tango];
    golf = report.bind(entity)(golf);
    golf = golf.Fragment;
    var _closure1_slot7 = golf;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.jsxs;
    var _closure1_slot8 = tango;
    tango = 5;
    tango = oscar[tango];
    options = report.bind(entity)(tango);
    golf = options.createStyles;
    tango = {};
    verify = {};
    offset = 6;
    romeo = oscar[offset];
    romeo = yankee.bind(entity)(romeo);
    romeo = romeo.spacing;
    romeo = romeo.PX_12;
    verify['padding'] = romeo;
    offset = oscar[offset];
    offset = yankee.bind(entity)(offset);
    offset = offset.spacing;
    offset = offset.PX_8;
    verify['gap'] = offset;
    offset = 'row';
    verify['flexDirection'] = offset;
    offset = 'center';
    verify['alignItems'] = offset;
    tango['container'] = verify;
    tango = golf.bind(options)(tango);
    var _closure1_slot9 = tango;
    tango = 12;
    tango = oscar[tango];
    oscar = report.bind(entity)(tango);
    report = oscar.fileFinishedImporting;
    tango = 'modules/user_profile/native/UserProfileRemediatedNotice.tsx';
    tango = report.bind(oscar)(tango);
    mike = function(argFoo) { // Original name: RemediatedUserNotice
        _fun102634: for(var _fun102634_ip = 0; ; ) switch(_fun102634_ip) {
 0:
            entity = argFoo;
            mike = entity.user;
            var _closure2_slot0 = mike;
            verify = entity.style;
            entity = _closure1_slot9;
            report = undefined;
            oscar = entity.bind(report)();
            mike = _closure1_slot1;
            zulu = _closure1_slot2;
            entity = 7;
            entity = zulu[entity];
            entity = mike.bind(report)(entity);
            offset = entity.bind(report)();
            mike = _closure1_slot0;
            entity = 8;
            entity = zulu[entity];
            tango = mike.bind(report)(entity);
            zulu = tango.useStateFromStoresObject;
            entity = _closure1_slot4;
            mike = new Array(1);
            mike[0] = entity;
            entity = function() {
                entity = {};
                tango = _closure1_slot4;
                oscar = tango.getRelationshipType;
                mike = _closure2_slot0;
                report = mike.id;
                report = oscar.bind(tango)(report);
                zulu = _closure1_slot5;
                zulu = zulu.PENDING_INCOMING;
                zulu = report === zulu;
                entity['isPendingIncoming'] = zulu;
                report = tango.isBlocked;
                zulu = mike.id;
                zulu = report.bind(tango)(zulu);
                entity['isBlocked'] = zulu;
                zulu = tango.isIgnored;
                mike = mike.id;
                mike = zulu.bind(tango)(mike);
                entity['isIgnored'] = mike;
                return entity;
            };
            entity = zulu.bind(tango)(mike, entity);
            mike = entity.isPendingIncoming;
            options = entity.isBlocked;
            golf = entity.isIgnored;
            if(options) { _fun102634_ip = 140; continue _fun102634 }
 124:
            entity = null;
            if(!golf) { _fun102634_ip = 581; continue _fun102634 }
 132:
            entity = null;
            if(mike) { _fun102634_ip = 581; continue _fun102634 }
 140:
            tango = _closure1_slot8;
            zulu = _closure1_slot3;
            mike = {};
            romeo = oscar.container;
            oscar = new Array(3);
            oscar[0] = romeo;
            offset = offset.card;
            oscar[1] = offset;
            oscar[2] = verify;
            mike['style'] = oscar;
            if(!options) { _fun102634_ip = 284; continue _fun102634 }
 184:
            offset = _closure1_slot6;
            kilo = _closure1_slot0;
            sizing = _closure1_slot2;
            oscar = 9;
            oscar = sizing[oscar];
            oscar = kilo.bind(report)(oscar);
            verify = oscar.Text;
            oscar = {'variant': 'text-sm/semibold', 'color': 'header-secondary', 'lineClamp': 1};
            romeo = 10;
            foxtrot = sizing[romeo];
            foxtrot = kilo.bind(report)(foxtrot);
            backup = foxtrot.intl;
            foxtrot = backup.string;
            romeo = sizing[romeo];
            romeo = kilo.bind(report)(romeo);
            romeo = romeo.t;
            romeo = romeo.oC/fU1;
            romeo = foxtrot.bind(backup)(romeo);
            oscar['children'] = romeo;
            options = offset.bind(report)(verify, oscar);
 284:
            oscar = new Array(2);
            oscar[0] = options;
            if(!golf) { _fun102634_ip = 567; continue _fun102634 }
 298:
            offset = _closure1_slot8;
            verify = _closure1_slot7;
            options = {};
            backup = _closure1_slot6;
            sizing = _closure1_slot0;
            update = _closure1_slot2;
            romeo = 9;
            yankee = update[romeo];
            yankee = sizing.bind(report)(yankee);
            foxtrot = yankee.Text;
            yankee = {'variant': 'text-sm/semibold', 'color': 'header-secondary', 'lineClamp': 1};
            kilo = 10;
            output = update[kilo];
            output = sizing.bind(report)(output);
            source = output.intl;
            result = source.string;
            output = update[kilo];
            output = sizing.bind(report)(output);
            output = output.t;
            output = output.HXz5Ag;
            output = result.bind(source)(output);
            yankee['children'] = output;
            foxtrot = backup.bind(report)(foxtrot, yankee);
            yankee = new Array(3);
            yankee[0] = foxtrot;
            foxtrot = update[romeo];
            foxtrot = sizing.bind(report)(foxtrot);
            output = foxtrot.Text;
            foxtrot = {'variant': 'text-sm/semibold', 'color': 'header-secondary', 'children': 'â€¢'};
            foxtrot = backup.bind(report)(output, foxtrot);
            yankee[1] = foxtrot;
            romeo = update[romeo];
            romeo = sizing.bind(report)(romeo);
            foxtrot = romeo.Text;
            romeo = {'variant': 'text-sm/semibold', 'color': 'header-secondary'};
            output = update[kilo];
            output = sizing.bind(report)(output);
            result = output.intl;
            output = result.format;
            kilo = update[kilo];
            kilo = sizing.bind(report)(kilo);
            kilo = kilo.t;
            sizing = kilo.PrtAq6;
            kilo = {};
            echo = function(argFoo) { // Original name: unignoreHook
                tango = _closure1_slot6;
                mike = _closure1_slot0;
                zulu = _closure1_slot2;
                entity = 9;
                entity = zulu[entity];
                zulu = undefined;
                entity = mike.bind(zulu)(entity);
                mike = entity.Text;
                entity = {'role': 'link', 'variant': 'heading-sm/medium', 'color': 'text-link'};
                report = function() { // Original name: onPress
                    zulu = _closure1_slot1;
                    mike = _closure1_slot2;
                    entity = 11;
                    mike = mike[entity];
                    entity = undefined;
                    tango = zulu.bind(entity)(mike);
                    zulu = tango.unignoreUser;
                    entity = _closure2_slot0;
                    mike = entity.id;
                    entity = 'UserProfileRemediatedNotice';
                    entity = zulu.bind(tango)(mike, entity);
                    return entity;
                };
                entity['onPress'] = report;
                report = argFoo;
                entity['children'] = report;
                entity = tango.bind(zulu)(mike, entity);
                return entity;
            };
            kilo['unignoreHook'] = echo;
            kilo = output.bind(result)(sizing, kilo);
            romeo['children'] = kilo;
            romeo = backup.bind(report)(foxtrot, romeo);
            yankee[2] = romeo;
            options['children'] = yankee;
            golf = offset.bind(report)(verify, options);
 567:
            oscar[1] = golf;
            mike['children'] = oscar;
            entity = tango.bind(report)(zulu, mike);
 581:
            return entity;
        }
    };
    zulu['default'] = mike;
    return entity;
})();