// app/modules/user_profile/native/BotUserProfileContent.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    report = argBar;
    romeon = argBaz;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    var _closure1_slot1 = romeon;
    var _closure1_slot2 = oscard;
    entity = global;
    option = entity.Object;
    golfie = option.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(option)(zuuluu, entity, tangon);
    entity = 0;
    golfie = oscard[entity];
    tangon = argCor;
    entity = undefined;
    golfie = tangon.bind(entity)(golfie);
    var _closure1_slot3 = golfie;
    tangon = 1;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.View;
    var _closure1_slot4 = tangon;
    tangon = 2;
    tangon = oscard[tangon];
    tangon = romeon.bind(entity)(tangon);
    var _closure1_slot5 = tangon;
    tangon = 3;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    option = tangon.PROFILE_CONTENT_BOTTOM_PADDING;
    var _closure1_slot6 = option;
    tangon = tangon.PROFILE_CONTENT_WITHOUT_STATUS_TOP_PADDING;
    var _closure1_slot7 = tangon;
    tangon = 4;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.ACTION_SHEET_MAX_WIDTH;
    var _closure1_slot8 = tangon;
    tangon = 5;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    option = tangon.jsx;
    var _closure1_slot9 = option;
    option = tangon.jsxs;
    var _closure1_slot10 = option;
    tangon = tangon.Fragment;
    var _closure1_slot11 = tangon;
    tangon = 6;
    tangon = oscard[tangon];
    verify = report.bind(entity)(tangon);
    option = verify.createStyles;
    tangon = {};
    offset = {'height': 40, 'marginTop': 0, 'marginRight': 0};
    yankee = 7;
    yankee = oscard[yankee];
    yankee = romeon.bind(entity)(yankee);
    yankee = yankee.radii;
    yankee = yankee.round;
    offset['borderRadius'] = yankee;
    tangon['applicationButton'] = offset;
    tangon = option.bind(verify)(tangon);
    var _closure1_slot12 = tangon;
    tangon = golfie.memo;
    michal = function(argFoo) { // Original name: BotUserProfileContent
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            entity = argFoo;
            backup = entity.user;
            var _closure2_slot0 = backup;
            romeon = entity.channel;
            var _closure2_slot1 = romeon;
            record = entity.displayProfile;
            papara = entity.showUserProfileActionSheet;
            variable40 = entity.disableMessage;
            report = undefined;
            var _closure2_slot3 = report;
            var _closure2_slot4 = report;
            entity = _closure1_slot12;
            quebec = entity.bind(report)();
            michal = _closure1_slot1;
            zuuluu = _closure1_slot2;
            entity = 8;
            entity = zuuluu[entity];
            entity = michal.bind(report)(entity);
            offset = entity.bind(report)();
            entity = 9;
            entity = zuuluu[entity];
            tangon = michal.bind(report)(entity);
            entity = _closure1_slot8;
            sizing = tangon.bind(report)(entity);
            entity = 10;
            entity = zuuluu[entity];
            entity = michal.bind(report)(entity);
            entity = entity.bind(report)();
            sequen = entity.bottom;
            tangon = _closure1_slot0;
            entity = 11;
            entity = zuuluu[entity];
            oscard = tangon.bind(report)(entity);
            entity = oscard.useUserProfileAnalyticsContext;
            entity = entity.bind(oscard)();
            entity = entity.trackUserProfileAction;
            var _closure2_slot2 = entity;
            entity = 12;
            entity = zuuluu[entity];
            option = tangon.bind(report)(entity);
            oscard = option.useStateFromStores;
            entity = _closure1_slot5;
            tangon = new Array(1);
            tangon[0] = entity;
            entity = function() {
                michal = _closure1_slot5;
                entity = michal.getCurrentUser;
                entity = entity.bind(michal)();
                return entity;
            };
            equals = oscard.bind(option)(tangon, entity);
            entity = 13;
            entity = zuuluu[entity];
            oscard = michal.bind(report)(entity);
            tangon = oscard.useName;
            entity = null;
            michal = entity == record;
            zuuluu = undefined;
            if(michal) { _fun00002_ip = 238; continue _fun00001 }
 233:
            zuuluu = record.guildId;
 238:
            option = entity == romeon;
            michal = undefined;
            if(option) { _fun00002_ip = 252; continue _fun00001 }
 247:
            michal = romeon.id;
 252:
            cntext = tangon.bind(oscard)(zuuluu, michal, backup);
            zuuluu = _closure1_slot1;
            michal = _closure1_slot2;
            variable41 = 14;
            michal = michal[variable41];
            zuuluu = zuuluu.bind(report)(michal);
            michal = zuuluu.useUserTag;
            michal = michal.bind(zuuluu)(backup);
            _closure2_slot3 = michal;
            michal = entity == record;
            foxtra = undefined;
            if(michal) { _fun00002_ip = 308; continue _fun00001 }
 303:
            foxtra = record.application;
 308:
            michal = entity == romeon;
            whisks = undefined;
            if(michal) { _fun00002_ip = 322; continue _fun00001 }
 317:
            whisks = romeon.guild_id;
 322:
            _closure2_slot4 = whisks;
            oscard = _closure1_slot3;
            tangon = oscard.useMemo;
            zuuluu = new Array(2);
            zuuluu[0] = whisks;
            zuuluu[1] = backup;
            michal = function() {
                _fun00003: for(var _fun00004_ip = 0; ; ) switch(_fun00004_ip) {
 0:
                    entity = _closure2_slot4;
                    michal = null;
                    if(!(michal != entity)) { _fun00004_ip = 21; continue _fun00003 }
 13:
                    entity = _closure2_slot0;
                    if(!(michal == entity)) { _fun00004_ip = 25; continue _fun00003 }
 21:
                    entity = {};
                    _fun00004_ip = 56; continue _fun00003;
 25:
                    michal = {};
                    tangon = _closure2_slot4;
                    zuuluu = _closure2_slot0;
                    report = zuuluu.id;
                    zuuluu = new Array(1);
                    zuuluu[0] = report;
                    michal[tangon] = zuuluu;
                    entity = michal;
 56:
                    return entity;
                }
            };
            option = tangon.bind(oscard)(michal, zuuluu);
            zuuluu = _closure1_slot0;
            tangon = _closure1_slot2;
            michal = 15;
            michal = tangon[michal];
            oscard = zuuluu.bind(report)(michal);
            michal = oscard.useSubscribeGuildMembers;
            michal = michal.bind(oscard)(option);
            oscard = _closure1_slot1;
            michal = 16;
            michal = tangon[michal];
            option = oscard.bind(report)(michal);
            michal = backup.id;
            vacuum = option.bind(report)(michal);
            michal = 17;
            michal = tangon[michal];
            oscard = oscard.bind(report)(michal);
            michal = {};
            michal['user'] = backup;
            michal['displayProfile'] = record;
            michal = oscard.bind(report)(michal);
            oscard = michal.theme;
            ctrled = michal.primaryColor;
            yankee = michal.secondaryColor;
            michal = 18;
            michal = tangon[michal];
            tangon = zuuluu.bind(report)(michal);
            zuuluu = tangon.useUserProfileColors;
            michal = {};
            michal['theme'] = oscard;
            michal['primaryColor'] = ctrled;
            michal['secondaryColor'] = yankee;
            michal = zuuluu.bind(tangon)(michal);
            kiloes = michal.gradientFallbackBackground;
            update = michal.avatarBackground;
            verify = michal.containerBackground;
            if(!(entity != backup)) { _fun00002_ip = 1981; continue _fun00001 }
 526:
            if(!(entity != equals)) { _fun00002_ip = 1981; continue _fun00001 }
 533:
            target = function() { // Original name: handleCopyUsername
                tangon = _closure2_slot2;
                zuuluu = {};
                entity = 'COPY_USERNAME';
                zuuluu['action'] = entity;
                entity = undefined;
                zuuluu = tangon.bind(entity)(zuuluu);
                zuuluu = _closure1_slot0;
                tangon = _closure1_slot2;
                report = 19;
                report = tangon[report];
                oscard = zuuluu.bind(entity)(report);
                report = oscard.copy;
                michal = _closure2_slot3;
                michal = report.bind(oscard)(michal);
                michal = 20;
                michal = tangon[michal];
                zuuluu = zuuluu.bind(entity)(michal);
                michal = zuuluu.presentUsernameCopied;
                michal = michal.bind(zuuluu)();
                return entity;
            };
            tangon = _closure1_slot10;
            zuuluu = _closure1_slot11;
            michal = {};
            echoed = _closure1_slot9;
            result = _closure1_slot1;
            source = _closure1_slot2;
            oscard = 21;
            oscard = source[oscard];
            option = result.bind(report)(oscard);
            oscard = {};
            oscard['user'] = backup;
            oscard['displayProfile'] = record;
            oscard['bannerHeight'] = sizing;
            option = echoed.bind(report)(option, oscard);
            oscard = new Array(3);
            oscard[0] = option;
            sizing = _closure1_slot4;
            option = {};
            output = 22;
            output = source[output];
            result = result.bind(report)(output);
            output = {};
            output['user'] = backup;
            source = entity == record;
            config = undefined;
            if(source) { _fun00002_ip = 640; continue _fun00001 }
 635:
            config = record.guildId;
 640:
            status = entity != config;
            source = undefined;
            if(!status) { _fun00002_ip = 652; continue _fun00001 }
 649:
            source = config;
 652:
            output['guildId'] = source;
            output['backgroundColor'] = update;
            result = echoed.bind(report)(result, output);
            output = new Array(2);
            output[0] = result;
            update = _closure1_slot10;
            echoed = _closure1_slot1;
            source = _closure1_slot2;
            result = 23;
            result = source[result];
            echoed = echoed.bind(report)(result);
            result = {};
            result['fallbackBackground'] = kiloes;
            result['primaryColor'] = ctrled;
            result['secondaryColor'] = yankee;
            kiloes = offset.profileContent;
            yankee = new Array(2);
            yankee[0] = kiloes;
            kiloes = {};
            config = entity != vacuum;
            source = 0;
            if(config) { _fun00002_ip = 744; continue _fun00001 }
 740:
            source = _closure1_slot7;
 744:
            kiloes['paddingTop'] = source;
            source = _closure1_slot6;
            source = sequen + source;
            kiloes['paddingBottom'] = source;
            yankee[1] = kiloes;
            result['containerStyle'] = yankee;
            config = _closure1_slot9;
            kiloes = _closure1_slot1;
            status = _closure1_slot2;
            yankee = 24;
            yankee = status[yankee];
            source = kiloes.bind(report)(yankee);
            yankee = {};
            yankee['customStatusActivity'] = vacuum;
            ctrled = entity != ctrled;
            yankee['hasCustomProfileTheme'] = ctrled;
            ctrled = function() { // Original name: onPressTruncatedStatus
                _fun00005: for(var _fun00006_ip = 0; ; ) switch(_fun00006_ip) {
 0:
                    report = _closure1_slot1;
                    michal = _closure1_slot2;
                    entity = 25;
                    tangon = michal[entity];
                    entity = undefined;
                    golfie = report.bind(entity)(tangon);
                    oscard = golfie.openLazy;
                    tangon = _closure1_slot0;
                    zuuluu = 27;
                    zuuluu = michal[zuuluu];
                    tangon = tangon.bind(entity)(zuuluu);
                    zuuluu = 26;
                    zuuluu = michal[zuuluu];
                    michal = michal.paths;
                    report = tangon.bind(entity)(zuuluu, michal);
                    tangon = {};
                    michal = _closure2_slot0;
                    tangon['user'] = michal;
                    michal = _closure2_slot4;
                    tangon['guildId'] = michal;
                    option = _closure2_slot1;
                    michal = null;
                    option = michal == option;
                    michal = undefined;
                    if(option) { _fun00006_ip = 110; continue _fun00005 }
 101:
                    zuuluu = _closure2_slot1;
                    michal = zuuluu.id;
 110:
                    tangon['channelId'] = michal;
                    yankee = 'UserProfileCustomStatusActionSheet';
                    verify = 'stack';
                    foxtra = golfie;
                    romeon = report;
                    offset = tangon;
                    michal = foxtra[oscard](romeon, yankee, offset, verify, option);
                    return entity;
                }
            };
            yankee['onPressTruncatedStatus'] = ctrled;
            ctrled = offset.customStatusBubble;
            yankee['style'] = ctrled;
            ctrled = offset.emojiOnlyCustomStatusBubble;
            yankee['emojiOnlyStyle'] = ctrled;
            yankee = config.bind(report)(source, yankee);
            source = new Array(3);
            source[0] = yankee;
            sequen = _closure1_slot10;
            vacuum = _closure1_slot4;
            ctrled = {};
            yankee = offset.primaryInfo;
            ctrled['style'] = yankee;
            yankee = 28;
            yankee = status[yankee];
            kiloes = kiloes.bind(report)(yankee);
            yankee = {};
            yankee['user'] = backup;
            yankee['guildId'] = whisks;
            yankee['displayName'] = cntext;
            status = entity == record;
            cntext = undefined;
            if(status) { _fun00002_ip = 917; continue _fun00001 }
 911:
            cntext = record.pronouns;
 917:
            yankee['pronouns'] = cntext;
            yankee['badgeContainerBackground'] = verify;
            variable38 = _closure1_slot0;
            cntext = _closure1_slot2;
            variable37 = 29;
            status = cntext[variable37];
            status = variable38.bind(report)(status);
            limora = status.intl;
            sierra = limora.string;
            status = cntext[variable37];
            status = variable38.bind(report)(status);
            status = status.t;
            status = status.y5MwJy;
            status = sierra.bind(limora)(status);
            yankee['displayNameAccessibilityHint'] = status;
            yankee['onPressDisplayName'] = target;
            yankee['onPressUserTag'] = target;
            target = function() { // Original name: handlePressPronouns
                zuuluu = _closure2_slot2;
                michal = {};
                entity = 'PRESS_PRONOUNS';
                michal['action'] = entity;
                entity = undefined;
                michal = zuuluu.bind(entity)(michal);
                zuuluu = _closure1_slot0;
                tangon = _closure1_slot2;
                michal = 20;
                michal = tangon[michal];
                zuuluu = zuuluu.bind(entity)(michal);
                michal = zuuluu.presentUserPronouns;
                michal = michal.bind(zuuluu)();
                return entity;
            };
            yankee['onPressPronouns'] = target;
            variable39 = true;
            yankee['showBadgeToastOnPress'] = variable39;
            yankee = config.bind(report)(kiloes, yankee);
            config = new Array(3);
            config[0] = yankee;
            sierra = _closure1_slot9;
            kiloes = _closure1_slot1;
            yankee = 30;
            yankee = cntext[yankee];
            target = kiloes.bind(report)(yankee);
            yankee = {};
            yankee['user'] = backup;
            yankee = sierra.bind(report)(target, yankee);
            config[1] = yankee;
            yankee = 31;
            yankee = cntext[yankee];
            status = kiloes.bind(report)(yankee);
            target = {};
            yankee = offset.primaryButtons;
            target['style'] = yankee;
            yankee = _closure1_slot8;
            target['maxWidth'] = yankee;
            kiloes = entity != foxtra;
            yankee = undefined;
            if(!kiloes) { _fun00002_ip = 1266; continue _fun00001 }
 1109:
            cntext = _closure1_slot0;
            limora = _closure1_slot2;
            kiloes = 32;
            kiloes = limora[kiloes];
            cntext = cntext.bind(report)(kiloes);
            kiloes = cntext.canInstallApplication;
            kiloes = kiloes.bind(cntext)(foxtra);
            yankee = undefined;
            if(!kiloes) { _fun00002_ip = 1266; continue _fun00001 }
 1145:
            limora = _closure1_slot9;
            cntext = _closure1_slot1;
            variable38 = _closure1_slot2;
            kiloes = 33;
            kiloes = variable38[kiloes];
            cntext = cntext.bind(report)(kiloes);
            kiloes = {};
            kiloes['application'] = foxtra;
            variable38 = backup.id;
            kiloes['botUserId'] = variable38;
            variable42 = entity == romeon;
            variable38 = undefined;
            if(variable42) { _fun00002_ip = 1199; continue _fun00001 }
 1194:
            variable38 = romeon.id;
 1199:
            kiloes['channelId'] = variable38;
            variable42 = entity != whisks;
            variable38 = undefined;
            if(!variable42) { _fun00002_ip = 1215; continue _fun00001 }
 1212:
            variable38 = whisks;
 1215:
            kiloes['guildId'] = variable38;
            quebec = quebec.applicationButton;
            kiloes['style'] = quebec;
            variable38 = _closure1_slot1;
            variable42 = _closure1_slot2;
            quebec = 25;
            quebec = variable42[quebec];
            quebec = variable38.bind(report)(quebec);
            quebec = quebec.hideActionSheet;
            kiloes['onOpenApp'] = quebec;
            yankee = limora.bind(report)(cntext, kiloes);
 1266:
            target['primaryButton'] = yankee;
            kiloes = _closure1_slot9;
            variable38 = _closure1_slot0;
            cntext = _closure1_slot2;
            yankee = 34;
            yankee = cntext[yankee];
            yankee = variable38.bind(report)(yankee);
            quebec = yankee.Button;
            limora = {};
            yankee = 35;
            yankee = cntext[yankee];
            yankee = variable38.bind(report)(yankee);
            variable43 = yankee.ChatIcon;
            variable42 = {};
            yankee = 'sm';
            variable42['size'] = yankee;
            yankee = _closure1_slot1;
            variable44 = 7;
            variable44 = cntext[variable44];
            variable44 = yankee.bind(report)(variable44);
            variable44 = variable44.colors;
            variable44 = variable44.REDESIGN_BUTTON_SECONDARY_TEXT;
            variable42['color'] = variable44;
            variable42 = kiloes.bind(report)(variable43, variable42);
            limora['icon'] = variable42;
            variable42 = cntext[variable37];
            variable42 = variable38.bind(report)(variable42);
            variable44 = variable42.intl;
            variable43 = variable44.string;
            variable42 = cntext[variable37];
            variable42 = variable38.bind(report)(variable42);
            variable42 = variable42.t;
            variable42 = variable42.zROXER;
            variable42 = variable43.bind(variable44)(variable42);
            limora['text'] = variable42;
            variable42 = 'secondary';
            limora['variant'] = variable42;
            limora['disabled'] = variable40;
            limora['grow'] = variable39;
            variable39 = cntext[variable37];
            variable39 = variable38.bind(report)(variable39);
            variable40 = variable39.intl;
            variable39 = variable40.formatToPlainString;
            variable37 = cntext[variable37];
            variable37 = variable38.bind(report)(variable37);
            variable37 = variable37.t;
            variable38 = variable37.zFfSFR;
            variable37 = {};
            variable41 = cntext[variable41];
            variable42 = yankee.bind(report)(variable41);
            variable41 = variable42.getName;
            variable41 = variable41.bind(variable42)(backup);
            variable37['name'] = variable41;
            variable37 = variable39.bind(variable40)(variable38, variable37);
            limora['accessibilityHint'] = variable37;
            variable36 = function() { // Original name: onPress
                tangon = _closure2_slot2;
                zuuluu = {};
                entity = 'SEND_MESSAGE';
                zuuluu['action'] = entity;
                entity = undefined;
                zuuluu = tangon.bind(entity)(zuuluu);
                tangon = _closure1_slot1;
                report = _closure1_slot2;
                zuuluu = 25;
                zuuluu = report[zuuluu];
                oscard = tangon.bind(entity)(zuuluu);
                zuuluu = oscard.hideActionSheet;
                zuuluu = zuuluu.bind(oscard)();
                zuuluu = 36;
                zuuluu = report[zuuluu];
                oscard = tangon.bind(entity)(zuuluu);
                zuuluu = oscard.popAll;
                zuuluu = zuuluu.bind(oscard)();
                zuuluu = 37;
                zuuluu = report[zuuluu];
                tangon = tangon.bind(entity)(zuuluu);
                zuuluu = tangon.openPrivateChannel;
                michal = _closure2_slot0;
                michal = michal.id;
                michal = zuuluu.bind(tangon)(michal);
                return entity;
            };
            limora['onPress'] = variable36;
            limora = kiloes.bind(report)(quebec, limora);
            target['secondaryButton'] = limora;
            target = sierra.bind(report)(status, target);
            config[2] = target;
            ctrled['children'] = config;
            ctrled = sequen.bind(report)(vacuum, ctrled);
            source[1] = ctrled;
            target = {};
            target['backgroundColor'] = verify;
            sequen = _closure1_slot10;
            vacuum = _closure1_slot4;
            ctrled = {};
            verify = offset.cards;
            ctrled['style'] = verify;
            verify = 38;
            verify = cntext[verify];
            config = yankee.bind(report)(verify);
            verify = {};
            verify['user'] = backup;
            verify['currentUser'] = equals;
            verify['guildId'] = whisks;
            verify['style'] = target;
            verify = kiloes.bind(report)(config, verify);
            config = new Array(4);
            config[0] = verify;
            verify = 39;
            verify = cntext[verify];
            yankee = yankee.bind(report)(verify);
            verify = {};
            cntext = backup.id;
            verify['userId'] = cntext;
            verify['displayProfile'] = record;
            verify['channel'] = romeon;
            verify['style'] = target;
            verify = kiloes.bind(report)(yankee, verify);
            config[1] = verify;
            verify = entity != whisks;
            if(!verify) { _fun00002_ip = 1807; continue _fun00001 }
 1684:
            record = _closure1_slot10;
            kiloes = _closure1_slot11;
            yankee = {};
            limora = _closure1_slot9;
            sierra = _closure1_slot1;
            quebec = _closure1_slot2;
            cntext = 40;
            cntext = quebec[cntext];
            status = sierra.bind(report)(cntext);
            cntext = {};
            variable36 = backup.id;
            cntext['userId'] = variable36;
            cntext['guildId'] = whisks;
            cntext['style'] = target;
            status = limora.bind(report)(status, cntext);
            cntext = new Array(2);
            cntext[0] = status;
            status = 41;
            status = quebec[status];
            sierra = sierra.bind(report)(status);
            status = {};
            status['user'] = backup;
            status['currentUser'] = equals;
            status['guildId'] = whisks;
            status['showUserProfile'] = papara;
            status['style'] = target;
            status = limora.bind(report)(sierra, status);
            cntext[1] = status;
            yankee['children'] = cntext;
            verify = record.bind(report)(kiloes, yankee);
 1807:
            config[2] = verify;
            verify = _closure1_slot9;
            yankee = _closure1_slot1;
            kiloes = _closure1_slot2;
            record = 42;
            record = kiloes[record];
            cntext = yankee.bind(report)(record);
            record = {};
            status = backup.id;
            record['userId'] = status;
            record['style'] = target;
            record['onBack'] = papara;
            record = verify.bind(report)(cntext, record);
            config[3] = record;
            ctrled['children'] = config;
            ctrled = sequen.bind(report)(vacuum, ctrled);
            source[2] = ctrled;
            result['children'] = source;
            result = update.bind(report)(echoed, result);
            output[1] = result;
            option['children'] = output;
            option = tangon.bind(report)(sizing, option);
            oscard[1] = option;
            option = _closure1_slot4;
            golfie = {};
            offset = offset.bannerButtons;
            golfie['style'] = offset;
            offset = 43;
            offset = kiloes[offset];
            yankee = yankee.bind(report)(offset);
            offset = {};
            offset['user'] = backup;
            offset['application'] = foxtra;
            offset['channel'] = romeon;
            offset = verify.bind(report)(yankee, offset);
            golfie['children'] = offset;
            golfie = verify.bind(report)(option, golfie);
            oscard[2] = golfie;
            michal['children'] = oscard;
            michal = tangon.bind(report)(zuuluu, michal);
            return michal;
 1981:
            return entity;
        }
    };
    michal = tangon.bind(golfie)(michal);
    tangon = 44;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/user_profile/native/BotUserProfileContent.tsx';
    tangon = report.bind(oscard)(tangon);
    zuuluu['default'] = michal;
    return entity;
})();