// app/modules/user_profile/native/UserProfileUpsellButton.tsx
export default (function(argFoo, argBar, argBaz, argCorge, _, argFred, argPlugh) {
    report = argBar;
    zulu = argFred;
    oscar = argPlugh;
    var _closure1_slot0 = report;
    entity = argBaz;
    var _closure1_slot1 = entity;
    var _closure1_slot2 = oscar;
    entity = global;
    options = entity.Object;
    golf = options.defineProperty;
    tango = {};
    entity = true;
    tango['value'] = entity;
    entity = '__esModule';
    entity = golf.bind(options)(zulu, entity, tango);
    entity = 0;
    golf = oscar[entity];
    tango = argCorge;
    entity = undefined;
    tango = tango.bind(entity)(golf);
    var _closure1_slot3 = tango;
    tango = 1;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    golf = tango.AnalyticsPages;
    var _closure1_slot4 = golf;
    golf = tango.UpsellTypes;
    var _closure1_slot5 = golf;
    golf = tango.AnalyticsSections;
    var _closure1_slot6 = golf;
    tango = tango.AnalyticEvents;
    var _closure1_slot7 = tango;
    offset = 2;
    tango = oscar[offset];
    tango = report.bind(entity)(tango);
    tango = tango.PremiumUpsellTypes;
    var _closure1_slot8 = tango;
    tango = 3;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.jsx;
    var _closure1_slot9 = tango;
    tango = 4;
    tango = oscar[tango];
    options = report.bind(entity)(tango);
    golf = options.createStyles;
    tango = {};
    verify = {};
    verify['marginRight'] = offset;
    tango['nitroWheel'] = verify;
    verify = {};
    offset = 12;
    verify['marginTop'] = offset;
    tango['upsellButton'] = verify;
    tango = golf.bind(options)(tango);
    var _closure1_slot10 = tango;
    tango = 11;
    tango = oscar[tango];
    oscar = report.bind(entity)(tango);
    report = oscar.fileFinishedImporting;
    tango = 'modules/user_profile/native/UserProfileUpsellButton.tsx';
    tango = report.bind(oscar)(tango);
    mike = function(argFoo) { // Original name: _default
        _fun93136: for(var _fun93136_ip = 0; ; ) switch(_fun93136_ip) {
 0:
            mike = argFoo;
            entity = mike.analyticsObject;
            var _closure2_slot0 = entity;
            oscar = mike.label;
            mike = _closure1_slot10;
            tango = undefined;
            options = mike.bind(tango)();
            zulu = _closure1_slot1;
            verify = _closure1_slot2;
            mike = 5;
            mike = verify[mike];
            mike = zulu.bind(tango)(mike);
            mike = mike.bind(tango)();
            yankee = mike.analyticsLocations;
            var _closure2_slot1 = yankee;
            offset = _closure1_slot3;
            zulu = offset.useEffect;
            mike = new Array(2);
            mike[0] = yankee;
            mike[1] = entity;
            entity = function() {
                zulu = _closure1_slot1;
                mike = _closure1_slot2;
                entity = 6;
                mike = mike[entity];
                entity = undefined;
                report = zulu.bind(entity)(mike);
                tango = report.track;
                mike = _closure1_slot7;
                zulu = mike.PREMIUM_UPSELL_VIEWED;
                mike = {};
                golf = _closure1_slot8;
                golf = golf.CUSTOM_PROFILE_SETTINGS_BANNER_BUTTON;
                mike['type'] = golf;
                golf = {};
                options = _closure1_slot4;
                options = options.USER_SETTINGS;
                golf['page'] = options;
                oscar = _closure1_slot6;
                oscar = oscar.USER_PROFILE;
                golf['section'] = oscar;
                options = _closure2_slot0;
                golf['object'] = options;
                mike['location'] = golf;
                oscar = _closure2_slot1;
                mike['location_stack'] = oscar;
                mike = tango.bind(report)(zulu, mike);
                return entity;
            };
            entity = zulu.bind(offset)(entity, mike);
            zulu = _closure1_slot9;
            mike = _closure1_slot0;
            entity = 7;
            entity = verify[entity];
            entity = mike.bind(tango)(entity);
            mike = entity.Button;
            entity = {};
            golf = function() { // Original name: onPress
                zulu = _closure1_slot1;
                mike = _closure1_slot2;
                entity = 8;
                mike = mike[entity];
                entity = undefined;
                tango = zulu.bind(entity)(mike);
                zulu = tango.handleShowUpsellAlert;
                mike = {};
                report = _closure1_slot5;
                report = report.CUSTOM_PROFILES;
                mike['initialUpsellKey'] = report;
                golf = {};
                report = _closure1_slot4;
                report = report.USER_SETTINGS;
                golf['page'] = report;
                report = _closure1_slot6;
                report = report.USER_PROFILE;
                golf['section'] = report;
                options = _closure2_slot0;
                golf['object'] = options;
                mike['analyticsLocation'] = golf;
                report = _closure2_slot1;
                mike['analyticsLocations'] = report;
                report = {};
                oscar = _closure1_slot8;
                oscar = oscar.CUSTOM_PROFILE_UPSELL;
                report['type'] = oscar;
                mike['analyticsProperties'] = report;
                mike = zulu.bind(tango)(mike);
                return entity;
            };
            entity['onPress'] = golf;
            golf = 'active';
            entity['variant'] = golf;
            golf = null;
            if(!(golf == oscar)) { _fun93136_ip = 209; continue _fun93136 }
 154:
            yankee = _closure1_slot0;
            romeo = _closure1_slot2;
            golf = 9;
            verify = romeo[golf];
            verify = yankee.bind(tango)(verify);
            offset = verify.intl;
            verify = offset.string;
            golf = romeo[golf];
            golf = yankee.bind(tango)(golf);
            golf = golf.t;
            golf = golf.pj0XBA;
            oscar = verify.bind(offset)(golf);
 209:
            entity['text'] = oscar;
            golf = _closure1_slot9;
            oscar = _closure1_slot0;
            verify = _closure1_slot2;
            report = 10;
            report = verify[report];
            report = oscar.bind(tango)(report);
            oscar = report.NitroWheelIcon;
            report = {'color': 'white', 'size': 'sm'};
            options = options.nitroWheel;
            report['style'] = options;
            report = golf.bind(tango)(oscar, report);
            entity['icon'] = report;
            entity = zulu.bind(tango)(mike, entity);
            return entity;
        }
    };
    zulu['default'] = mike;
    return entity;
})();