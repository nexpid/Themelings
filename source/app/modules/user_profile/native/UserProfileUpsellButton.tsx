// app/modules/user_profile/native/UserProfileUpsellButton.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    report = argBar;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    entity = argBaz;
    var _closure1_slot1 = entity;
    var _closure1_slot2 = oscard;
    entity = global;
    option = entity.Object;
    golfie = option.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(option)(zuuluu, entity, tangon);
    entity = 0;
    golfie = oscard[entity];
    tangon = argCor;
    entity = undefined;
    tangon = tangon.bind(entity)(golfie);
    var _closure1_slot3 = tangon;
    tangon = 1;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    golfie = tangon.AnalyticsPages;
    var _closure1_slot4 = golfie;
    golfie = tangon.UpsellTypes;
    var _closure1_slot5 = golfie;
    golfie = tangon.AnalyticsSections;
    var _closure1_slot6 = golfie;
    tangon = tangon.AnalyticEvents;
    var _closure1_slot7 = tangon;
    offset = 2;
    tangon = oscard[offset];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.PremiumUpsellTypes;
    var _closure1_slot8 = tangon;
    tangon = 3;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.jsx;
    var _closure1_slot9 = tangon;
    tangon = 4;
    tangon = oscard[tangon];
    option = report.bind(entity)(tangon);
    golfie = option.createStyles;
    tangon = {};
    verify = {};
    verify['marginRight'] = offset;
    tangon['nitroWheel'] = verify;
    verify = {};
    offset = 12;
    verify['marginTop'] = offset;
    tangon['upsellButton'] = verify;
    tangon = golfie.bind(option)(tangon);
    var _closure1_slot10 = tangon;
    tangon = 11;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/user_profile/native/UserProfileUpsellButton.tsx';
    tangon = report.bind(oscard)(tangon);
    michal = function(argFoo) { // Original name: _default
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            michal = argFoo;
            entity = michal.analyticsObject;
            var _closure2_slot0 = entity;
            oscard = michal.label;
            michal = _closure1_slot10;
            tangon = undefined;
            option = michal.bind(tangon)();
            zuuluu = _closure1_slot1;
            verify = _closure1_slot2;
            michal = 5;
            michal = verify[michal];
            michal = zuuluu.bind(tangon)(michal);
            michal = michal.bind(tangon)();
            yankee = michal.analyticsLocations;
            var _closure2_slot1 = yankee;
            offset = _closure1_slot3;
            zuuluu = offset.useEffect;
            michal = new Array(2);
            michal[0] = yankee;
            michal[1] = entity;
            entity = function() {
                zuuluu = _closure1_slot1;
                michal = _closure1_slot2;
                entity = 6;
                michal = michal[entity];
                entity = undefined;
                report = zuuluu.bind(entity)(michal);
                tangon = report.track;
                michal = _closure1_slot7;
                zuuluu = michal.PREMIUM_UPSELL_VIEWED;
                michal = {};
                golfie = _closure1_slot8;
                golfie = golfie.CUSTOM_PROFILE_SETTINGS_BANNER_BUTTON;
                michal['type'] = golfie;
                golfie = {};
                option = _closure1_slot4;
                option = option.USER_SETTINGS;
                golfie['page'] = option;
                oscard = _closure1_slot6;
                oscard = oscard.USER_PROFILE;
                golfie['section'] = oscard;
                option = _closure2_slot0;
                golfie['object'] = option;
                michal['location'] = golfie;
                oscard = _closure2_slot1;
                michal['location_stack'] = oscard;
                michal = tangon.bind(report)(zuuluu, michal);
                return entity;
            };
            entity = zuuluu.bind(offset)(entity, michal);
            zuuluu = _closure1_slot9;
            michal = _closure1_slot0;
            entity = 7;
            entity = verify[entity];
            entity = michal.bind(tangon)(entity);
            michal = entity.Button;
            entity = {};
            golfie = function() { // Original name: onPress
                zuuluu = _closure1_slot1;
                michal = _closure1_slot2;
                entity = 8;
                michal = michal[entity];
                entity = undefined;
                tangon = zuuluu.bind(entity)(michal);
                zuuluu = tangon.handleShowUpsellAlert;
                michal = {};
                report = _closure1_slot5;
                report = report.CUSTOM_PROFILES;
                michal['initialUpsellKey'] = report;
                golfie = {};
                report = _closure1_slot4;
                report = report.USER_SETTINGS;
                golfie['page'] = report;
                report = _closure1_slot6;
                report = report.USER_PROFILE;
                golfie['section'] = report;
                option = _closure2_slot0;
                golfie['object'] = option;
                michal['analyticsLocation'] = golfie;
                report = _closure2_slot1;
                michal['analyticsLocations'] = report;
                report = {};
                oscard = _closure1_slot8;
                oscard = oscard.CUSTOM_PROFILE_UPSELL;
                report['type'] = oscard;
                michal['analyticsProperties'] = report;
                michal = zuuluu.bind(tangon)(michal);
                return entity;
            };
            entity['onPress'] = golfie;
            golfie = 'active';
            entity['variant'] = golfie;
            golfie = null;
            if(!(golfie == oscard)) { _fun00002_ip = 209; continue _fun00001 }
 154:
            yankee = _closure1_slot0;
            romeon = _closure1_slot2;
            golfie = 9;
            verify = romeon[golfie];
            verify = yankee.bind(tangon)(verify);
            offset = verify.intl;
            verify = offset.string;
            golfie = romeon[golfie];
            golfie = yankee.bind(tangon)(golfie);
            golfie = golfie.t;
            golfie = golfie.pj0XBA;
            oscard = verify.bind(offset)(golfie);
 209:
            entity['text'] = oscard;
            golfie = _closure1_slot9;
            oscard = _closure1_slot0;
            verify = _closure1_slot2;
            report = 10;
            report = verify[report];
            report = oscard.bind(tangon)(report);
            oscard = report.NitroWheelIcon;
            report = {'color': 'white', 'size': 'sm'};
            option = option.nitroWheel;
            report['style'] = option;
            report = golfie.bind(tangon)(oscard, report);
            entity['icon'] = report;
            entity = zuuluu.bind(tangon)(michal, entity);
            return entity;
        }
    };
    zuuluu['default'] = michal;
    return entity;
})();