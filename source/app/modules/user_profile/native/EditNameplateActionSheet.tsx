// app/modules/user_profile/native/EditNameplateActionSheet.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    oscard = argBar;
    yankee = argBaz;
    zuuluu = argFre;
    golfie = argPlu;
    var _closure1_slot0 = oscard;
    var _closure1_slot1 = yankee;
    var _closure1_slot2 = golfie;
    entity = global;
    option = entity.Object;
    report = option.defineProperty;
    michal = {};
    entity = true;
    michal['value'] = entity;
    entity = '__esModule';
    entity = report.bind(option)(zuuluu, entity, michal);
    entity = 0;
    report = golfie[entity];
    michal = argCor;
    entity = undefined;
    michal = michal.bind(entity)(report);
    var _closure1_slot3 = michal;
    offset = 1;
    michal = golfie[offset];
    michal = oscard.bind(entity)(michal);
    report = michal.ActivityIndicator;
    var _closure1_slot4 = report;
    michal = michal.View;
    var _closure1_slot5 = michal;
    michal = 2;
    michal = golfie[michal];
    michal = oscard.bind(entity)(michal);
    michal = michal.AnalyticEvents;
    var _closure1_slot6 = michal;
    michal = 3;
    michal = golfie[michal];
    michal = oscard.bind(entity)(michal);
    report = michal.jsx;
    var _closure1_slot7 = report;
    michal = michal.jsxs;
    var _closure1_slot8 = michal;
    michal = 4;
    michal = golfie[michal];
    option = oscard.bind(entity)(michal);
    report = option.createStyles;
    michal = {};
    verify = {};
    verify['flex'] = offset;
    offset = 5;
    romeon = golfie[offset];
    romeon = yankee.bind(entity)(romeon);
    romeon = romeon.colors;
    romeon = romeon.BACKGROUND_PRIMARY;
    verify['backgroundColor'] = romeon;
    michal['container'] = verify;
    verify = {'flexDirection': 'column', 'alignItems': 'center', 'paddingBottom': 88};
    michal['contentContainer'] = verify;
    verify = {'position': 'absolute', 'top': 4294967046, 'height': 250, 'right': 0, 'left': 0};
    michal['bounceOffset'] = verify;
    verify = {};
    offset = golfie[offset];
    offset = yankee.bind(entity)(offset);
    offset = offset.colors;
    offset = offset.HEADER_PRIMARY;
    verify['color'] = offset;
    offset = 16;
    verify['margin'] = offset;
    michal['title'] = verify;
    michal = report.bind(option)(michal);
    var _closure1_slot9 = michal;
    michal = function(argFoo) { // Original name: EditNameplateInner
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            michal = argFoo;
            entity = michal.isFetching;
            golfie = michal.showTitle;
            report = undefined;
            if(!(golfie === report)) { _fun00002_ip = 23; continue _fun00001 }
 21:
            golfie = true;
 23:
            zuuluu = _closure1_slot0;
            tangon = _closure1_slot2;
            michal = 14;
            michal = tangon[michal];
            tangon = zuuluu.bind(report)(michal);
            zuuluu = tangon.useGetOrFetchCollectiblesCategoriesAndPurchases;
            michal = {};
            option = 'EditNameplateInner';
            michal['location'] = option;
            michal = zuuluu.bind(tangon)(michal);
            michal = _closure1_slot9;
            offset = michal.bind(report)();
            if(entity) { _fun00002_ip = 239; continue _fun00001 }
 83:
            zuuluu = _closure1_slot8;
            michal = _closure1_slot5;
            entity = {};
            tangon = offset.contentContainer;
            entity['style'] = tangon;
            if(!golfie) { _fun00002_ip = 213; continue _fun00001 }
 106:
            verify = _closure1_slot7;
            foxtra = _closure1_slot0;
            backup = _closure1_slot2;
            tangon = 15;
            tangon = backup[tangon];
            tangon = foxtra.bind(report)(tangon);
            option = tangon.Text;
            tangon = {};
            yankee = 'redesign/heading-18/bold';
            tangon['variant'] = yankee;
            offset = offset.title;
            tangon['style'] = offset;
            offset = 16;
            yankee = backup[offset];
            yankee = foxtra.bind(report)(yankee);
            romeon = yankee.intl;
            yankee = romeon.string;
            offset = backup[offset];
            offset = foxtra.bind(report)(offset);
            offset = offset.t;
            offset = offset.BwdeMz;
            offset = yankee.bind(romeon)(offset);
            tangon['children'] = offset;
            golfie = verify.bind(report)(option, tangon);
 213:
            tangon = new Array(2);
            tangon[0] = golfie;
            golfie = null;
            tangon[1] = golfie;
            entity['children'] = tangon;
            entity = zuuluu.bind(report)(michal, entity);
            _fun00002_ip = 296; continue _fun00001;
 239:
            tangon = _closure1_slot7;
            zuuluu = _closure1_slot5;
            michal = {};
            golfie = {};
            option = 250;
            golfie['top'] = option;
            michal['style'] = golfie;
            golfie = _closure1_slot4;
            oscard = {'animating': true, 'size': 'large'};
            oscard = tangon.bind(report)(golfie, oscard);
            michal['children'] = oscard;
            entity = tangon.bind(report)(zuuluu, michal);
 296:
            return entity;
        }
    };
    var _closure1_slot10 = michal;
    report = 17;
    report = golfie[report];
    golfie = oscard.bind(entity)(report);
    oscard = golfie.fileFinishedImporting;
    report = 'modules/user_profile/native/EditNameplateActionSheet.tsx';
    report = oscard.bind(golfie)(report);
    tangon = function(argFoo) { // Original name: EditNameplateActionSheet
        _fun00003: for(var _fun00004_ip = 0; ; ) switch(_fun00004_ip) {
 0:
            michal = argFoo;
            zuuluu = null;
            if(!(michal != zuuluu)) { _fun00004_ip = 424; continue _fun00003 }
 12:
            entity = _closure1_slot9;
            report = undefined;
            result = entity.bind(report)();
            backup = _closure1_slot0;
            kiloes = _closure1_slot2;
            entity = 6;
            entity = kiloes[entity];
            tangon = backup.bind(report)(entity);
            entity = tangon.useBottomSheetRef;
            entity = entity.bind(tangon)();
            offset = entity.bottomSheetRef;
            romeon = entity.bottomSheetClose;
            option = _closure1_slot3;
            entity = option.useRef;
            yankee = entity.bind(option)(zuuluu);
            oscard = _closure1_slot1;
            entity = 7;
            zuuluu = kiloes[entity];
            tangon = oscard.bind(report)(zuuluu);
            zuuluu = 8;
            zuuluu = kiloes[zuuluu];
            zuuluu = oscard.bind(report)(zuuluu);
            zuuluu = zuuluu.EDIT_NAMEPLATE_SHEET;
            zuuluu = tangon.bind(report)(zuuluu);
            oscard = zuuluu.analyticsLocations;
            golfie = option.useCallback;
            tangon = function() {
                golfie = _closure1_slot1;
                option = _closure1_slot2;
                entity = 9;
                zuuluu = option[entity];
                entity = undefined;
                report = golfie.bind(entity)(zuuluu);
                tangon = report.track;
                michal = _closure1_slot6;
                zuuluu = michal.OPEN_POPOUT;
                michal = {};
                oscard = 8;
                oscard = option[oscard];
                oscard = golfie.bind(entity)(oscard);
                oscard = oscard.EDIT_NAMEPLATE_SHEET;
                michal['type'] = oscard;
                oscard = true;
                michal['is_fullscreen'] = oscard;
                michal = tangon.bind(report)(zuuluu, michal);
                return entity;
            };
            zuuluu = new Array(0);
            verify = golfie.bind(option)(tangon, zuuluu);
            tangon = _closure1_slot7;
            entity = kiloes[entity];
            entity = backup.bind(report)(entity);
            zuuluu = entity.AnalyticsLocationProvider;
            entity = {};
            entity['value'] = oscard;
            option = _closure1_slot8;
            oscard = 10;
            oscard = kiloes[oscard];
            oscard = backup.bind(report)(oscard);
            golfie = oscard.BottomSheet;
            oscard = {'handleDisabled': true, 'scrollable': true, 'ref': null, 'onExpand': null, 'startExpanded': true};
            oscard['ref'] = offset;
            oscard['onExpand'] = verify;
            verify = 11;
            verify = kiloes[verify];
            verify = backup.bind(report)(verify);
            offset = verify.BottomSheetScrollView;
            verify = {};
            output = false;
            verify['scrollsToTop'] = output;
            echoed = result.container;
            sizing = new Array(1);
            sizing[0] = echoed;
            verify['style'] = sizing;
            verify['ref'] = yankee;
            sizing = _closure1_slot5;
            yankee = {};
            result = result.bounceOffset;
            yankee['style'] = result;
            sizing = tangon.bind(report)(sizing, yankee);
            yankee = new Array(2);
            yankee[0] = sizing;
            sizing = _closure1_slot10;
            foxtra = {};
            foxtra['isFetching'] = output;
            foxtra = tangon.bind(report)(sizing, foxtra);
            yankee[1] = foxtra;
            verify['children'] = yankee;
            offset = option.bind(report)(offset, verify);
            verify = new Array(2);
            verify[0] = offset;
            offset = 12;
            offset = kiloes[offset];
            offset = backup.bind(report)(offset);
            yankee = offset.ActionSheetHeaderBar;
            offset = {};
            foxtra = 13;
            foxtra = kiloes[foxtra];
            foxtra = backup.bind(report)(foxtra);
            foxtra = foxtra.ActionSheetHeaderBarVariants;
            foxtra = foxtra.FLOATING;
            offset['variant'] = foxtra;
            offset['onPress'] = romeon;
            offset = tangon.bind(report)(yankee, offset);
            verify[1] = offset;
            oscard['children'] = verify;
            oscard = option.bind(report)(golfie, oscard);
            entity['children'] = oscard;
            entity = tangon.bind(report)(zuuluu, entity);
            return entity;
 424:
            update = "Cannot destructure 'undefined' or 'null'.";
            source = michal;
            entity = throwTypeError(source, update);
            entity = undefined;
            throw entity;
        }
    };
    zuuluu['default'] = tangon;
    zuuluu['EditNameplateInner'] = michal;
    return entity;
})();