// app/modules/user_profile/native/UserProfileMutualGuilds.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    report = argBar;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    entity = argBaz;
    var _closure1_slot1 = entity;
    var _closure1_slot2 = oscard;
    entity = global;
    option = entity.Object;
    golfie = option.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(option)(zuuluu, entity, tangon);
    entity = 0;
    golfie = oscard[entity];
    tangon = argCor;
    entity = undefined;
    tangon = tangon.bind(entity)(golfie);
    tangon = 1;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.View;
    var _closure1_slot3 = tangon;
    tangon = 2;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.UserProfileSections;
    var _closure1_slot4 = tangon;
    tangon = 3;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    golfie = tangon.jsx;
    var _closure1_slot5 = golfie;
    tangon = tangon.jsxs;
    var _closure1_slot6 = tangon;
    tangon = 4;
    tangon = oscard[tangon];
    option = report.bind(entity)(tangon);
    golfie = option.createStyles;
    tangon = {};
    verify = {'flexDirection': 'row', 'columnGap': 4, 'flexWrap': 'wrap'};
    tangon['container'] = verify;
    verify = {'flexDirection': 'row', 'alignItems': 'center', 'columnGap': 6};
    tangon['section'] = verify;
    tangon = golfie.bind(option)(tangon);
    var _closure1_slot7 = tangon;
    tangon = 17;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/user_profile/native/UserProfileMutualGuilds.tsx';
    tangon = report.bind(oscard)(tangon);
    michal = function(argFoo) { // Original name: UserProfileMutualGuilds
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            entity = argFoo;
            michal = entity.user;
            var _closure2_slot0 = michal;
            entity = _closure1_slot7;
            tangon = undefined;
            option = entity.bind(tangon)();
            zuuluu = _closure1_slot0;
            report = _closure1_slot2;
            entity = 5;
            entity = report[entity];
            zuuluu = zuuluu.bind(tangon)(entity);
            entity = zuuluu.useUserProfileAnalyticsContext;
            entity = entity.bind(zuuluu)();
            entity = entity.trackUserProfileAction;
            var _closure2_slot1 = entity;
            zuuluu = _closure1_slot1;
            entity = 6;
            entity = report[entity];
            entity = zuuluu.bind(tangon)(entity);
            entity = entity.bind(tangon)(michal);
            yankee = entity.mutualGuilds;
            entity = 7;
            entity = report[entity];
            entity = zuuluu.bind(tangon)(entity);
            entity = entity.bind(tangon)(michal);
            if(!entity) { _fun00002_ip = 457; continue _fun00001 }
 117:
            entity = null;
            if(!(entity != yankee)) { _fun00002_ip = 457; continue _fun00001 }
 126:
            entity = yankee.length;
            zuuluu = 0;
            if(!(zuuluu !== entity)) { _fun00002_ip = 457; continue _fun00001 }
 140:
            michal = yankee.slice;
            entity = 3;
            zuuluu = michal.bind(yankee)(zuuluu, entity);
            michal = zuuluu.map;
            entity = function(argFoo) {
                entity = argFoo;
                entity = entity.guild;
                return entity;
            };
            sizing = michal.bind(zuuluu)(entity);
            zuuluu = _closure1_slot5;
            michal = _closure1_slot3;
            entity = {};
            report = option.container;
            entity['style'] = report;
            golfie = _closure1_slot6;
            offset = _closure1_slot0;
            backup = _closure1_slot2;
            report = 12;
            report = backup[report];
            report = offset.bind(tangon)(report);
            oscard = report.PressableOpacity;
            report = {};
            option = option.section;
            report['style'] = option;
            option = 'button';
            report['accessibilityRole'] = option;
            option = function() { // Original name: onPress
                entity = _closure1_slot4;
                report = entity.MUTUAL_GUILDS;
                tangon = _closure2_slot1;
                michal = {};
                oscard = 'PRESS_SECTION';
                michal['action'] = oscard;
                michal['section'] = report;
                golfie = undefined;
                michal = tangon.bind(golfie)(michal);
                report = _closure1_slot1;
                michal = _closure1_slot2;
                tangon = 8;
                tangon = michal[tangon];
                oscard = report.bind(golfie)(tangon);
                report = oscard.openLazy;
                tangon = _closure1_slot0;
                zuuluu = 10;
                zuuluu = michal[zuuluu];
                tangon = tangon.bind(golfie)(zuuluu);
                zuuluu = 9;
                zuuluu = michal[zuuluu];
                michal = michal.paths;
                yankee = tangon.bind(golfie)(zuuluu, michal);
                zuuluu = {};
                entity = _closure2_slot0;
                zuuluu['user'] = entity;
                entity = function(argFoo) { // Original name: onPressMutualGuild
                    zuuluu = _closure2_slot1;
                    michal = {};
                    entity = 'PRESS_MUTUAL_GUILD';
                    michal['action'] = entity;
                    entity = undefined;
                    michal = zuuluu.bind(entity)(michal);
                    report = _closure1_slot0;
                    tangon = _closure1_slot2;
                    zuuluu = 11;
                    zuuluu = tangon[zuuluu];
                    oscard = report.bind(entity)(zuuluu);
                    report = oscard.transitionToGuild;
                    zuuluu = argFoo;
                    zuuluu = report.bind(oscard)(zuuluu);
                    zuuluu = _closure1_slot1;
                    michal = 8;
                    report = tangon[michal];
                    oscard = zuuluu.bind(entity)(report);
                    report = oscard.hideActionSheet;
                    report = report.bind(oscard)();
                    michal = tangon[michal];
                    zuuluu = zuuluu.bind(entity)(michal);
                    michal = zuuluu.hideActionSheet;
                    michal = michal.bind(zuuluu)();
                    return entity;
                };
                zuuluu['onPressMutualGuild'] = entity;
                offset = 'UserProfileMutualGuildsActionSheet';
                option = 'stack';
                romeon = oscard;
                verify = zuuluu;
                entity = romeon[report](yankee, offset, verify, option, golfie);
                entity = undefined;
                return entity;
            };
            report['onPress'] = option;
            option = 13;
            option = backup[option];
            option = offset.bind(tangon)(option);
            verify = option.GuildIconPile;
            option = {};
            kiloes = 14;
            kiloes = backup[kiloes];
            kiloes = offset.bind(tangon)(kiloes);
            kiloes = kiloes.GuildIconSizes;
            kiloes = kiloes.XXSMALL;
            option['size'] = kiloes;
            kiloes = sizing.length;
            option['totalCount'] = kiloes;
            output = sizing.map;
            kiloes = function(argFoo) {
                entity = argFoo;
                entity = entity.name;
                return entity;
            };
            kiloes = output.bind(sizing)(kiloes);
            option['names'] = kiloes;
            kiloes = sizing.map;
            foxtra = function(argFoo) {
                entity = argFoo;
                report = _closure1_slot5;
                zuuluu = _closure1_slot1;
                option = _closure1_slot2;
                oscard = 14;
                michal = option[oscard];
                tangon = undefined;
                zuuluu = zuuluu.bind(tangon)(michal);
                michal = {};
                michal['guild'] = entity;
                golfie = _closure1_slot0;
                oscard = option[oscard];
                oscard = golfie.bind(tangon)(oscard);
                oscard = oscard.GuildIconSizes;
                oscard = oscard.XXSMALL;
                michal['size'] = oscard;
                entity = entity.id;
                entity = report.bind(tangon)(zuuluu, michal, entity);
                return entity;
            };
            foxtra = kiloes.bind(sizing)(foxtra);
            option['children'] = foxtra;
            verify = zuuluu.bind(tangon)(verify, option);
            option = new Array(2);
            option[0] = verify;
            verify = 15;
            verify = backup[verify];
            verify = offset.bind(tangon)(verify);
            offset = verify.Text;
            verify = {'variant': 'text-sm/medium', 'color': 'header-secondary'};
            foxtra = _closure1_slot1;
            romeon = 16;
            romeon = backup[romeon];
            romeon = foxtra.bind(tangon)(romeon);
            yankee = yankee.length;
            yankee = romeon.bind(tangon)(yankee);
            verify['children'] = yankee;
            verify = zuuluu.bind(tangon)(offset, verify);
            option[1] = verify;
            report['children'] = option;
            report = golfie.bind(tangon)(oscard, report);
            entity['children'] = report;
            entity = zuuluu.bind(tangon)(michal, entity);
            return entity;
 457:
            entity = null;
            return entity;
        }
    };
    zuuluu['default'] = michal;
    return entity;
})();