// app/modules/guild_limited_access/native/GuildLimitedAccessInfoAlert.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    report = argBar;
    yankee = argBaz;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    var _closure1_slot1 = yankee;
    var _closure1_slot2 = oscard;
    entity = global;
    option = entity.Object;
    golfie = option.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(option)(zuuluu, entity, tangon);
    entity = 0;
    golfie = oscard[entity];
    tangon = argCor;
    entity = undefined;
    tangon = tangon.bind(entity)(golfie);
    tangon = 1;
    tangon = oscard[tangon];
    tangon = yankee.bind(entity)(tangon);
    var _closure1_slot3 = tangon;
    tangon = 2;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.GUILD_LIMITED_ACCESS_HC_LINK;
    var _closure1_slot4 = tangon;
    tangon = 3;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.Fonts;
    golfie = 4;
    golfie = oscard[golfie];
    golfie = report.bind(entity)(golfie);
    option = golfie.jsx;
    var _closure1_slot5 = option;
    golfie = golfie.jsxs;
    var _closure1_slot6 = golfie;
    golfie = 5;
    golfie = oscard[golfie];
    verify = report.bind(entity)(golfie);
    option = verify.createStyles;
    golfie = {};
    offset = {};
    romeon = 6;
    romeon = oscard[romeon];
    foxtra = yankee.bind(entity)(romeon);
    romeon = tangon.PRIMARY_BOLD;
    tangon = 7;
    tangon = oscard[tangon];
    tangon = yankee.bind(entity)(tangon);
    tangon = tangon.colors;
    yankee = tangon.HEADER_PRIMARY;
    tangon = 24;
    kiloes = foxtra.bind(entity)(romeon, yankee, tangon);
    sizing = offset;
    tangon = copyDataProperties(sizing, kiloes);
    yankee = 'center';
    tangon = 'textAlign';
    offset[tangon] = yankee;
    tangon = 12;
    yankee = 'marginVertical';
    offset[yankee] = tangon;
    golfie['header'] = offset;
    offset = {'textAlign': 'center', 'marginVertical': 8};
    golfie['text'] = offset;
    golfie = option.bind(verify)(golfie);
    var _closure1_slot7 = golfie;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/guild_limited_access/native/GuildLimitedAccessInfoAlert.tsx';
    tangon = report.bind(oscard)(tangon);
    michal = function(argFoo) { // Original name: _default
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            entity = argFoo;
            oscard = entity.guildId;
            report = entity.onClose;
            entity = _closure1_slot7;
            tangon = undefined;
            offset = entity.bind(tangon)();
            michal = _closure1_slot0;
            entity = _closure1_slot2;
            romeon = 8;
            zuuluu = entity[romeon];
            zuuluu = michal.bind(tangon)(zuuluu);
            option = zuuluu.intl;
            zuuluu = option.format;
            entity = entity[romeon];
            entity = michal.bind(tangon)(entity);
            entity = entity.t;
            michal = entity.ZqkXsL;
            entity = {};
            verify = _closure1_slot4;
            entity['helpdeskArticle'] = verify;
            verify = zuuluu.bind(option)(michal, entity);
            zuuluu = _closure1_slot3;
            entity = zuuluu.getGuild;
            option = entity.bind(zuuluu)(oscard);
            entity = null;
            if(!(entity != option)) { _fun00002_ip = 192; continue _fun00001 }
 116:
            michal = _closure1_slot0;
            entity = _closure1_slot2;
            zuuluu = entity[romeon];
            zuuluu = michal.bind(tangon)(zuuluu);
            oscard = zuuluu.intl;
            zuuluu = oscard.format;
            entity = entity[romeon];
            entity = michal.bind(tangon)(entity);
            entity = entity.t;
            michal = entity.jn0Xy8;
            entity = {};
            option = option.name;
            entity['guildName'] = option;
            option = _closure1_slot4;
            entity['helpdeskArticle'] = option;
            verify = zuuluu.bind(oscard)(michal, entity);
 192:
            zuuluu = _closure1_slot6;
            oscard = _closure1_slot1;
            yankee = _closure1_slot2;
            entity = 9;
            entity = yankee[entity];
            michal = oscard.bind(tangon)(entity);
            entity = {};
            entity['onClose'] = report;
            option = _closure1_slot5;
            report = 10;
            report = yankee[report];
            oscard = oscard.bind(tangon)(report);
            report = {};
            foxtra = offset.header;
            report['style'] = foxtra;
            golfie = _closure1_slot0;
            foxtra = yankee[romeon];
            foxtra = golfie.bind(tangon)(foxtra);
            backup = foxtra.intl;
            foxtra = backup.string;
            romeon = yankee[romeon];
            romeon = golfie.bind(tangon)(romeon);
            romeon = romeon.t;
            romeon = romeon.kJwpBQ;
            romeon = foxtra.bind(backup)(romeon);
            report['children'] = romeon;
            oscard = option.bind(tangon)(oscard, report);
            report = new Array(2);
            report[0] = oscard;
            oscard = 11;
            oscard = yankee[oscard];
            oscard = golfie.bind(tangon)(oscard);
            golfie = oscard.Text;
            oscard = {};
            offset = offset.text;
            oscard['style'] = offset;
            offset = 'text-md/medium';
            oscard['variant'] = offset;
            oscard['children'] = verify;
            oscard = option.bind(tangon)(golfie, oscard);
            report[1] = oscard;
            entity['children'] = report;
            entity = zuuluu.bind(tangon)(michal, entity);
            return entity;
        }
    };
    zuuluu['default'] = michal;
    return entity;
})();