// app/modules/accept_invite/native/components/AcceptInviteModal.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    report = argBar;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    entity = argBaz;
    var _closure1_slot1 = entity;
    var _closure1_slot2 = oscard;
    entity = global;
    option = entity.Object;
    golfie = option.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(option)(zuuluu, entity, tangon);
    entity = 0;
    golfie = oscard[entity];
    tangon = argCor;
    entity = undefined;
    tangon = tangon.bind(entity)(golfie);
    var _closure1_slot3 = tangon;
    tangon = 1;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.CreateGuildModalStates;
    var _closure1_slot4 = tangon;
    tangon = 2;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.jsx;
    var _closure1_slot5 = tangon;
    tangon = 8;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/accept_invite/native/components/AcceptInviteModal.tsx';
    tangon = report.bind(oscard)(tangon);
    michal = function(argFoo) { // Original name: AcceptInviteModal
        offset = argFoo;
        var _closure2_slot0 = offset;
        verify = _closure1_slot3;
        zuuluu = verify.useEffect;
        michal = function() {
            entity = function() {
                entity = undefined;
                return entity;
            };
            return entity;
        };
        entity = new Array(0);
        entity = zuuluu.bind(verify)(michal, entity);
        tangon = _closure1_slot5;
        michal = _closure1_slot0;
        zuuluu = _closure1_slot2;
        entity = 7;
        entity = zuuluu[entity];
        zuuluu = undefined;
        entity = michal.bind(zuuluu)(entity);
        michal = entity.Navigator;
        entity = {};
        option = verify.useMemo;
        golfie = new Array(1);
        golfie[0] = offset;
        oscard = function() {
            zuuluu = _closure2_slot0;
            michal = function(argFoo) { // Original name: getScreens
                oscard = argFoo;
                var _closure4_slot0 = oscard;
                entity = {};
                michal = _closure1_slot4;
                zuuluu = michal.ACCEPT_INVITE;
                michal = {'fullscreen': true, 'headerShown': false};
                verify = _closure1_slot0;
                offset = _closure1_slot2;
                report = 3;
                report = offset[report];
                option = undefined;
                report = verify.bind(option)(report);
                report = report.ImpressionNames;
                report = report.INVITE_ACCEPT;
                michal['impressionName'] = report;
                report = {};
                golfie = oscard.deeplinkAttemptId;
                report['deeplink_attempt_id'] = golfie;
                golfie = 4;
                golfie = offset[golfie];
                option = verify.bind(option)(golfie);
                golfie = option.parseInviteCodeFromInviteKey;
                oscard = oscard.code;
                oscard = golfie.bind(option)(oscard);
                report['invite_code'] = oscard;
                michal['impressionProperties'] = report;
                tangon = function() { // Original name: render
                    tangon = _closure1_slot5;
                    michal = _closure1_slot1;
                    golfie = _closure1_slot2;
                    entity = 5;
                    entity = golfie[entity];
                    zuuluu = undefined;
                    michal = michal.bind(zuuluu)(entity);
                    entity = {};
                    option = _closure4_slot0;
                    verify = entity;
                    oscard = copyDataProperties(verify, option);
                    oscard = _closure1_slot0;
                    report = 6;
                    report = golfie[report];
                    report = oscard.bind(zuuluu)(report);
                    oscard = report.clearDisplayedInvite;
                    report = 'onPressClose';
                    entity[report] = oscard;
                    entity = tangon.bind(zuuluu)(michal, entity);
                    return entity;
                };
                michal['render'] = tangon;
                entity[zuuluu] = michal;
                return entity;
            };
            entity = undefined;
            entity = michal.bind(entity)(zuuluu);
            return entity;
        };
        oscard = option.bind(verify)(oscard, golfie);
        entity['screens'] = oscard;
        report = _closure1_slot4;
        report = report.ACCEPT_INVITE;
        entity['initialRouteName'] = report;
        entity = tangon.bind(zuuluu)(michal, entity);
        return entity;
    };
    zuuluu['default'] = michal;
    return entity;
})();