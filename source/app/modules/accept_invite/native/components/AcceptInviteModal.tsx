// app/modules/accept_invite/native/components/AcceptInviteModal.tsx
export default (function(argFoo, argBar, argBaz, argCorge, _, argFred, argPlugh) {
    report = argBar;
    zulu = argFred;
    oscar = argPlugh;
    var _closure1_slot0 = report;
    entity = argBaz;
    var _closure1_slot1 = entity;
    var _closure1_slot2 = oscar;
    entity = global;
    options = entity.Object;
    golf = options.defineProperty;
    tango = {};
    entity = true;
    tango['value'] = entity;
    entity = '__esModule';
    entity = golf.bind(options)(zulu, entity, tango);
    entity = 0;
    golf = oscar[entity];
    tango = argCorge;
    entity = undefined;
    tango = tango.bind(entity)(golf);
    var _closure1_slot3 = tango;
    tango = 1;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.CreateGuildModalStates;
    var _closure1_slot4 = tango;
    tango = 2;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.jsx;
    var _closure1_slot5 = tango;
    tango = 8;
    tango = oscar[tango];
    oscar = report.bind(entity)(tango);
    report = oscar.fileFinishedImporting;
    tango = 'modules/accept_invite/native/components/AcceptInviteModal.tsx';
    tango = report.bind(oscar)(tango);
    mike = function(argFoo) { // Original name: AcceptInviteModal
        offset = argFoo;
        var _closure2_slot0 = offset;
        verify = _closure1_slot3;
        zulu = verify.useEffect;
        mike = function() {
            entity = function() {
                entity = undefined;
                return entity;
            };
            return entity;
        };
        entity = new Array(0);
        entity = zulu.bind(verify)(mike, entity);
        tango = _closure1_slot5;
        mike = _closure1_slot0;
        zulu = _closure1_slot2;
        entity = 7;
        entity = zulu[entity];
        zulu = undefined;
        entity = mike.bind(zulu)(entity);
        mike = entity.Navigator;
        entity = {};
        options = verify.useMemo;
        golf = new Array(1);
        golf[0] = offset;
        oscar = function() {
            zulu = _closure2_slot0;
            mike = function(argFoo) { // Original name: getScreens
                oscar = argFoo;
                var _closure4_slot0 = oscar;
                entity = {};
                mike = _closure1_slot4;
                zulu = mike.ACCEPT_INVITE;
                mike = {'fullscreen': true, 'headerShown': false};
                verify = _closure1_slot0;
                offset = _closure1_slot2;
                report = 3;
                report = offset[report];
                options = undefined;
                report = verify.bind(options)(report);
                report = report.ImpressionNames;
                report = report.INVITE_ACCEPT;
                mike['impressionName'] = report;
                report = {};
                golf = oscar.deeplinkAttemptId;
                report['deeplink_attempt_id'] = golf;
                golf = 4;
                golf = offset[golf];
                options = verify.bind(options)(golf);
                golf = options.parseInviteCodeFromInviteKey;
                oscar = oscar.code;
                oscar = golf.bind(options)(oscar);
                report['invite_code'] = oscar;
                mike['impressionProperties'] = report;
                tango = function() { // Original name: render
                    tango = _closure1_slot5;
                    mike = _closure1_slot1;
                    golf = _closure1_slot2;
                    entity = 5;
                    entity = golf[entity];
                    zulu = undefined;
                    mike = mike.bind(zulu)(entity);
                    entity = {};
                    options = _closure4_slot0;
                    verify = entity;
                    oscar = copyDataProperties(verify, options);
                    oscar = _closure1_slot0;
                    report = 6;
                    report = golf[report];
                    report = oscar.bind(zulu)(report);
                    oscar = report.clearDisplayedInvite;
                    report = 'onPressClose';
                    entity[report] = oscar;
                    entity = tango.bind(zulu)(mike, entity);
                    return entity;
                };
                mike['render'] = tango;
                entity[zulu] = mike;
                return entity;
            };
            entity = undefined;
            entity = mike.bind(entity)(zulu);
            return entity;
        };
        oscar = options.bind(verify)(oscar, golf);
        entity['screens'] = oscar;
        report = _closure1_slot4;
        report = report.ACCEPT_INVITE;
        entity['initialRouteName'] = report;
        entity = tango.bind(zulu)(mike, entity);
        return entity;
    };
    zulu['default'] = mike;
    return entity;
})();