// app/modules/forums/native/composer/horizontal_autocomplete/HorizontalAutocomplete.tsx
export default (function(argFoo, argBar, argBaz, argCorge, _, argFred, argPlugh) {
    report = argBar;
    foxtrot = argBaz;
    zulu = argFred;
    oscar = argPlugh;
    var _closure1_slot0 = report;
    var _closure1_slot1 = foxtrot;
    var _closure1_slot2 = oscar;
    entity = function(argFoo) { // Original name: HorizontalAutocompleteOption
        mike = argFoo;
        options = mike.children;
        oscar = mike.onPress;
        mike = _closure1_slot12;
        tango = undefined;
        verify = mike.bind(tango)();
        zulu = _closure1_slot1;
        golf = _closure1_slot2;
        mike = 11;
        mike = golf[mike];
        offset = zulu.bind(tango)(mike);
        mike = function() {
            entity = _closure1_slot3;
            zulu = entity.Value;
            entity = zulu.prototype;
            mike = Object.create(entity, {constructor: {value: zulu}});
            tango = 0;
            report = mike;
            entity = new report[zulu](tango, zulu);
            entity = entity instanceof Object ? entity : mike;
            return entity;
        };
        yankee = offset.bind(tango)(mike);
        var _closure2_slot0 = yankee;
        mike = 12;
        mike = golf[mike];
        mike = zulu.bind(tango)(mike);
        entity = function() {
            tango = _closure1_slot3;
            zulu = tango.timing;
            mike = _closure2_slot0;
            entity = {'toValue': 1, 'duration': 200, 'useNativeDriver': true};
            mike = zulu.bind(tango)(mike, entity);
            entity = mike.start;
            entity = entity.bind(mike)();
            entity = undefined;
            return entity;
        };
        entity = mike.bind(tango)(entity);
        zulu = _closure1_slot10;
        mike = _closure1_slot4;
        entity = {};
        entity['onPress'] = oscar;
        golf = _closure1_slot10;
        report = _closure1_slot3;
        oscar = report.View;
        report = {};
        offset = verify.horizontalAutocompleteOption;
        verify = new Array(2);
        verify[0] = offset;
        offset = {};
        offset['opacity'] = yankee;
        verify[1] = offset;
        report['style'] = verify;
        report['children'] = options;
        report = golf.bind(tango)(oscar, report);
        entity['children'] = report;
        entity = zulu.bind(tango)(mike, entity);
        return entity;
    };
    var _closure1_slot13 = entity;
    entity = global;
    options = entity.Object;
    golf = options.defineProperty;
    mike = {};
    entity = true;
    mike['value'] = entity;
    entity = '__esModule';
    entity = golf.bind(options)(zulu, entity, mike);
    romeo = 0;
    golf = oscar[romeo];
    mike = argCorge;
    entity = undefined;
    mike = mike.bind(entity)(golf);
    mike = 1;
    mike = oscar[mike];
    mike = report.bind(entity)(mike);
    golf = mike.Animated;
    var _closure1_slot3 = golf;
    backup = mike.StyleSheet;
    golf = mike.TouchableOpacity;
    var _closure1_slot4 = golf;
    mike = mike.View;
    var _closure1_slot5 = mike;
    mike = 2;
    mike = oscar[mike];
    mike = foxtrot.bind(entity)(mike);
    var _closure1_slot6 = mike;
    mike = 3;
    mike = oscar[mike];
    mike = foxtrot.bind(entity)(mike);
    var _closure1_slot7 = mike;
    yankee = 4;
    mike = oscar[yankee];
    mike = foxtrot.bind(entity)(mike);
    var _closure1_slot8 = mike;
    mike = 5;
    mike = oscar[mike];
    mike = report.bind(entity)(mike);
    golf = mike.ChannelTypes;
    var _closure1_slot9 = golf;
    kilo = mike.Fonts;
    mike = 6;
    mike = oscar[mike];
    mike = report.bind(entity)(mike);
    sizing = mike.AUTOCOMPLETE_ROW_HEIGHT;
    mike = 7;
    golf = oscar[mike];
    golf = report.bind(entity)(golf);
    golf = golf.jsx;
    var _closure1_slot10 = golf;
    mike = oscar[mike];
    mike = report.bind(entity)(mike);
    mike = mike.jsxs;
    var _closure1_slot11 = mike;
    offset = 8;
    mike = oscar[offset];
    options = report.bind(entity)(mike);
    golf = options.createStyles;
    mike = {};
    verify = {};
    verify['height'] = sizing;
    verify['paddingVertical'] = romeo;
    romeo = 9;
    sizing = oscar[romeo];
    sizing = foxtrot.bind(entity)(sizing);
    sizing = sizing.colors;
    sizing = sizing.BACKGROUND_SECONDARY;
    verify['backgroundColor'] = sizing;
    mike['row'] = verify;
    sizing = 10;
    verify = oscar[sizing];
    echo = foxtrot.bind(entity)(verify);
    result = kilo.PRIMARY_SEMIBOLD;
    verify = oscar[romeo];
    verify = foxtrot.bind(entity)(verify);
    verify = verify.colors;
    output = verify.INTERACTIVE_ACTIVE;
    verify = 16;
    verify = echo.bind(entity)(result, output, verify);
    mike['leading'] = verify;
    verify = {};
    result = 14;
    verify['fontSize'] = result;
    output = oscar[romeo];
    output = foxtrot.bind(entity)(output);
    output = output.colors;
    output = output.TEXT_MUTED;
    verify['color'] = output;
    mike['trailing'] = verify;
    verify = {'width': 32, 'height': 32};
    mike['emoji'] = verify;
    verify = {};
    output = 'contain';
    verify['resizeMode'] = output;
    mike['emojiImage'] = verify;
    verify = {'lineHeight': 32, 'fontSize': 27, 'textAlign': 'center'};
    mike['emojiText'] = verify;
    verify = {};
    verify['marginLeft'] = offset;
    mike['emojiName'] = verify;
    verify = {};
    sizing = oscar[sizing];
    output = foxtrot.bind(entity)(sizing);
    sizing = kilo.PRIMARY_SEMIBOLD;
    kilo = oscar[romeo];
    kilo = foxtrot.bind(entity)(kilo);
    kilo = kilo.colors;
    kilo = kilo.TEXT_NORMAL;
    source = output.bind(entity)(sizing, kilo, result);
    control = verify;
    kilo = copyDataProperties(control, source);
    mike['nickname'] = verify;
    verify = {};
    kilo = oscar[romeo];
    kilo = foxtrot.bind(entity)(kilo);
    kilo = kilo.colors;
    kilo = kilo.BACKGROUND_MOBILE_SECONDARY;
    verify['backgroundColor'] = kilo;
    mike['status'] = verify;
    verify = {'paddingHorizontal': 8, 'flex': 1, 'flexDirection': 'row', 'height': 56, 'alignItems': 'center'};
    backup = backup.hairlineWidth;
    verify['borderRightWidth'] = backup;
    romeo = oscar[romeo];
    romeo = foxtrot.bind(entity)(romeo);
    romeo = romeo.colors;
    romeo = romeo.BACKGROUND_MODIFIER_ACCENT;
    verify['borderRightColor'] = romeo;
    mike['horizontalAutocompleteOption'] = verify;
    verify = {};
    verify['marginRight'] = yankee;
    mike['roleIcon'] = verify;
    verify = {};
    verify['marginLeft'] = offset;
    mike['channelName'] = verify;
    mike = golf.bind(options)(mike);
    var _closure1_slot12 = mike;
    mike = {};
    golf = function(argFoo) { // Original name: User
        _fun87619: for(var _fun87619_ip = 0; ; ) switch(_fun87619_ip) {
 0:
            entity = argFoo;
            kilo = entity.user;
            foxtrot = entity.nick;
            offset = entity.status;
            verify = entity.guildId;
            report = entity.onPress;
            entity = _closure1_slot12;
            tango = undefined;
            backup = entity.bind(tango)();
            zulu = _closure1_slot11;
            mike = _closure1_slot13;
            entity = {};
            entity['onPress'] = report;
            golf = _closure1_slot10;
            oscar = _closure1_slot1;
            options = _closure1_slot2;
            yankee = 13;
            report = options[yankee];
            oscar = oscar.bind(tango)(report);
            report = {};
            report['status'] = offset;
            offset = backup.status;
            report['statusStyle'] = offset;
            report['user'] = kilo;
            offset = _closure1_slot0;
            yankee = options[yankee];
            yankee = offset.bind(tango)(yankee);
            yankee = yankee.AvatarSizes;
            yankee = yankee.SMALL;
            report['size'] = yankee;
            report['guildId'] = verify;
            verify = true;
            report['animate'] = verify;
            oscar = golf.bind(tango)(oscar, report);
            report = new Array(2);
            report[0] = oscar;
            golf = _closure1_slot5;
            oscar = {};
            verify = {'marginLeft': 8, 'height': 56, 'flex': 1, 'flexDirection': 'column', 'justifyContent': 'center'};
            oscar['style'] = verify;
            yankee = _closure1_slot10;
            verify = 14;
            options = options[verify];
            options = offset.bind(tango)(options);
            offset = options.Text;
            options = {};
            sizing = backup.nickname;
            backup = new Array(1);
            backup[0] = sizing;
            options['style'] = backup;
            backup = 'text-sm/semibold';
            options['variant'] = backup;
            backup = null;
            if(!(backup == foxtrot)) { _fun87619_ip = 264; continue _fun87619 }
 233:
            sizing = _closure1_slot1;
            output = _closure1_slot2;
            backup = 15;
            backup = output[backup];
            sizing = sizing.bind(tango)(backup);
            backup = sizing.getName;
            foxtrot = backup.bind(sizing)(kilo);
 264:
            options['children'] = foxtrot;
            offset = yankee.bind(tango)(offset, options);
            options = new Array(2);
            options[0] = offset;
            yankee = _closure1_slot11;
            offset = _closure1_slot0;
            backup = _closure1_slot2;
            verify = backup[verify];
            verify = offset.bind(tango)(verify);
            offset = verify.Text;
            verify = {'variant': 'text-xs/medium', 'color': 'text-muted'};
            foxtrot = _closure1_slot1;
            romeo = 15;
            romeo = backup[romeo];
            backup = foxtrot.bind(tango)(romeo);
            foxtrot = backup.getUserTag;
            romeo = {};
            sizing = 'never';
            romeo['decoration'] = sizing;
            foxtrot = foxtrot.bind(backup)(kilo, romeo);
            romeo = ['@'];
            romeo[1] = foxtrot;
            verify['children'] = romeo;
            verify = yankee.bind(tango)(offset, verify);
            options[1] = verify;
            oscar['children'] = options;
            oscar = zulu.bind(tango)(golf, oscar);
            report[1] = oscar;
            entity['children'] = report;
            entity = zulu.bind(tango)(mike, entity);
            return entity;
        }
    };
    mike['User'] = golf;
    golf = function(argFoo) { // Original name: Role
        _fun87620: for(var _fun87620_ip = 0; ; ) switch(_fun87620_ip) {
 0:
            mike = argFoo;
            report = mike.onPress;
            zulu = mike.guildId;
            var _closure2_slot0 = zulu;
            yankee = mike.name;
            zulu = mike.id;
            var _closure2_slot1 = zulu;
            foxtrot = mike.colorString;
            mike = _closure1_slot12;
            tango = undefined;
            verify = mike.bind(tango)();
            zulu = _closure1_slot0;
            golf = _closure1_slot2;
            mike = 16;
            mike = golf[mike];
            golf = zulu.bind(tango)(mike);
            zulu = golf.useStateFromStores;
            options = _closure1_slot6;
            mike = new Array(1);
            mike[0] = options;
            entity = function() {
                tango = _closure1_slot6;
                zulu = tango.getRole;
                mike = _closure2_slot0;
                entity = _closure2_slot1;
                entity = zulu.bind(tango)(mike, entity);
                return entity;
            };
            golf = zulu.bind(golf)(mike, entity);
            offset = null;
            entity = offset != golf;
            output = null;
            if(!entity) { _fun87620_ip = 148; continue _fun87620 }
 113:
            mike = _closure1_slot0;
            zulu = _closure1_slot2;
            entity = 17;
            entity = zulu[entity];
            zulu = mike.bind(tango)(entity);
            mike = zulu.getRoleIconData;
            entity = 30;
            output = mike.bind(zulu)(golf, entity);
 148:
            zulu = _closure1_slot11;
            mike = _closure1_slot13;
            entity = {};
            entity['onPress'] = report;
            report = offset != output;
            golf = null;
            if(!report) { _fun87620_ip = 289; continue _fun87620 }
 171:
            romeo = _closure1_slot10;
            options = _closure1_slot5;
            report = {};
            backup = verify.roleIcon;
            report['style'] = backup;
            sizing = _closure1_slot10;
            kilo = _closure1_slot1;
            result = _closure1_slot2;
            backup = 18;
            backup = result[backup];
            kilo = kilo.bind(tango)(backup);
            backup = {};
            backup['name'] = yankee;
            result = output.customIconSrc;
            echo = offset != result;
            result = undefined;
            if(!echo) { _fun87620_ip = 251; continue _fun87620 }
 236:
            echo = {};
            update = output.customIconSrc;
            echo['uri'] = update;
            result = echo;
 251:
            backup['source'] = result;
            output = output.unicodeEmoji;
            backup['unicodeEmoji'] = output;
            output = 24;
            backup['size'] = output;
            backup = sizing.bind(tango)(kilo, backup);
            report['children'] = backup;
            golf = romeo.bind(tango)(options, report);
 289:
            report = new Array(2);
            report[0] = golf;
            options = _closure1_slot10;
            golf = _closure1_slot0;
            romeo = _closure1_slot2;
            oscar = 19;
            oscar = romeo[oscar];
            oscar = golf.bind(tango)(oscar);
            golf = oscar.LegacyText;
            oscar = {};
            romeo = verify.nickname;
            verify = new Array(2);
            verify[0] = romeo;
            romeo = offset != foxtrot;
            offset = undefined;
            if(!romeo) { _fun87620_ip = 361; continue _fun87620 }
 352:
            romeo = {};
            romeo['color'] = foxtrot;
            offset = romeo;
 361:
            verify[1] = offset;
            oscar['style'] = verify;
            verify = global;
            verify = verify.HermesInternal;
            offset = verify.concat;
            verify = '@';
            verify = offset.bind(verify)(yankee);
            oscar['children'] = verify;
            oscar = options.bind(tango)(golf, oscar);
            report[1] = oscar;
            entity['children'] = report;
            entity = zulu.bind(tango)(mike, entity);
            return entity;
        }
    };
    mike['Role'] = golf;
    golf = function(argFoo) { // Original name: Channel
        _fun87622: for(var _fun87622_ip = 0; ; ) switch(_fun87622_ip) {
 0:
            mike = argFoo;
            romeo = mike.channel;
            var _closure2_slot0 = romeo;
            report = mike.onPress;
            mike = _closure1_slot12;
            tango = undefined;
            offset = mike.bind(tango)();
            zulu = _closure1_slot0;
            golf = _closure1_slot2;
            mike = 16;
            mike = golf[mike];
            options = zulu.bind(tango)(mike);
            golf = options.useStateFromStores;
            mike = _closure1_slot6;
            zulu = new Array(1);
            zulu[0] = mike;
            mike = new Array(1);
            mike[0] = romeo;
            entity = function() {
                zulu = _closure1_slot6;
                mike = zulu.getGuild;
                tango = _closure2_slot0;
                entity = tango.getGuildId;
                entity = entity.bind(tango)();
                entity = mike.bind(zulu)(entity);
                return entity;
            };
            zulu = golf.bind(options)(zulu, entity, mike);
            mike = romeo.type;
            entity = _closure1_slot9;
            entity = entity.GUILD_CATEGORY;
            if(!(mike !== entity)) { _fun87622_ip = 144; continue _fun87622 }
 110:
            mike = _closure1_slot0;
            golf = _closure1_slot2;
            entity = 21;
            entity = golf[entity];
            mike = mike.bind(tango)(entity);
            entity = mike.getChannelIconWithGuild;
            golf = entity.bind(mike)(romeo, zulu);
            _fun87622_ip = 164; continue _fun87622;
 144:
            mike = _closure1_slot1;
            zulu = _closure1_slot2;
            entity = 20;
            entity = zulu[entity];
            golf = mike.bind(tango)(entity);
 164:
            zulu = _closure1_slot10;
            mike = _closure1_slot1;
            yankee = _closure1_slot2;
            entity = 22;
            entity = yankee[entity];
            mike = mike.bind(tango)(entity);
            entity = {};
            entity['source'] = golf;
            options = zulu.bind(tango)(mike, entity);
            golf = _closure1_slot0;
            entity = 23;
            entity = yankee[entity];
            verify = golf.bind(tango)(entity);
            zulu = verify.computeChannelName;
            mike = _closure1_slot8;
            entity = _closure1_slot7;
            verify = zulu.bind(verify)(romeo, mike, entity);
            zulu = _closure1_slot11;
            mike = _closure1_slot13;
            entity = {};
            entity['onPress'] = report;
            report = new Array(2);
            report[0] = options;
            options = _closure1_slot10;
            oscar = 14;
            oscar = yankee[oscar];
            oscar = golf.bind(tango)(oscar);
            golf = oscar.Text;
            oscar = {};
            offset = offset.channelName;
            oscar['style'] = offset;
            offset = 'text-sm/semibold';
            oscar['variant'] = offset;
            oscar['children'] = verify;
            oscar = options.bind(tango)(golf, oscar);
            report[1] = oscar;
            entity['children'] = report;
            entity = zulu.bind(tango)(mike, entity);
            return entity;
        }
    };
    mike['Channel'] = golf;
    tango = function(argFoo) { // Original name: Emoji
        _fun87624: for(var _fun87624_ip = 0; ; ) switch(_fun87624_ip) {
 0:
            entity = argFoo;
            yankee = entity.name;
            options = entity.url;
            golf = entity.surrogates;
            report = entity.onPress;
            entity = _closure1_slot12;
            tango = undefined;
            verify = entity.bind(tango)();
            entity = '';
            if(!(entity === options)) { _fun87624_ip = 123; continue _fun87624 }
 44:
            zulu = _closure1_slot10;
            mike = _closure1_slot0;
            offset = _closure1_slot2;
            entity = 19;
            entity = offset[entity];
            entity = mike.bind(tango)(entity);
            mike = entity.LegacyText;
            entity = {};
            romeo = verify.emoji;
            offset = new Array(2);
            offset[0] = romeo;
            romeo = verify.emojiText;
            offset[1] = romeo;
            entity['style'] = offset;
            offset = false;
            entity['allowFontScaling'] = offset;
            entity['children'] = golf;
            offset = zulu.bind(tango)(mike, entity);
            _fun87624_ip = 193; continue _fun87624;
 123:
            zulu = _closure1_slot10;
            mike = _closure1_slot1;
            golf = _closure1_slot2;
            entity = 24;
            entity = golf[entity];
            mike = mike.bind(tango)(entity);
            entity = {};
            romeo = verify.emoji;
            golf = new Array(2);
            golf[0] = romeo;
            romeo = verify.emojiImage;
            golf[1] = romeo;
            entity['style'] = golf;
            golf = {};
            golf['uri'] = options;
            entity['source'] = golf;
            offset = zulu.bind(tango)(mike, entity);
 193:
            zulu = _closure1_slot11;
            mike = _closure1_slot13;
            entity = {};
            entity['onPress'] = report;
            options = _closure1_slot10;
            golf = _closure1_slot5;
            report = {};
            report['children'] = offset;
            golf = options.bind(tango)(golf, report);
            report = new Array(2);
            report[0] = golf;
            options = _closure1_slot10;
            golf = _closure1_slot0;
            offset = _closure1_slot2;
            oscar = 14;
            oscar = offset[oscar];
            oscar = golf.bind(tango)(oscar);
            golf = oscar.Text;
            oscar = {};
            verify = verify.emojiName;
            oscar['style'] = verify;
            verify = 'text-sm/semibold';
            oscar['variant'] = verify;
            verify = global;
            verify = verify.HermesInternal;
            offset = verify.concat;
            verify = ':';
            verify = offset.bind(verify)(yankee, verify);
            oscar['children'] = verify;
            oscar = options.bind(tango)(golf, oscar);
            report[1] = oscar;
            entity['children'] = report;
            entity = zulu.bind(tango)(mike, entity);
            return entity;
        }
    };
    mike['Emoji'] = tango;
    tango = 25;
    tango = oscar[tango];
    oscar = report.bind(entity)(tango);
    report = oscar.fileFinishedImporting;
    tango = 'modules/forums/native/composer/horizontal_autocomplete/HorizontalAutocomplete.tsx';
    tango = report.bind(oscar)(tango);
    zulu['default'] = mike;
    return entity;
})();