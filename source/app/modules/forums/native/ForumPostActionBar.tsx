// app/modules/forums/native/ForumPostActionBar.tsx
export default (function(argFoo, argBar, argBaz, argCorge, _, argFred, argPlugh) {
    report = argBar;
    yankee = argBaz;
    zulu = argFred;
    oscar = argPlugh;
    var _closure1_slot0 = report;
    var _closure1_slot1 = oscar;
    entity = global;
    options = entity.Object;
    golf = options.defineProperty;
    tango = {};
    entity = true;
    tango['value'] = entity;
    entity = '__esModule';
    entity = golf.bind(options)(zulu, entity, tango);
    romeo = 0;
    tango = oscar[romeo];
    entity = undefined;
    tango = yankee.bind(entity)(tango);
    var _closure1_slot2 = tango;
    tango = 1;
    golf = oscar[tango];
    tango = argCorge;
    tango = tango.bind(entity)(golf);
    var _closure1_slot3 = tango;
    tango = 2;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    foxtrot = tango.StyleSheet;
    golf = tango.useWindowDimensions;
    var _closure1_slot4 = golf;
    tango = tango.View;
    var _closure1_slot5 = tango;
    tango = 3;
    tango = oscar[tango];
    tango = yankee.bind(entity)(tango);
    var _closure1_slot6 = tango;
    tango = 4;
    tango = oscar[tango];
    tango = yankee.bind(entity)(tango);
    var _closure1_slot7 = tango;
    tango = 5;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.AnalyticsSections;
    var _closure1_slot8 = tango;
    tango = 6;
    golf = oscar[tango];
    golf = report.bind(entity)(golf);
    golf = golf.jsx;
    var _closure1_slot9 = golf;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.jsxs;
    var _closure1_slot10 = tango;
    tango = 7;
    tango = oscar[tango];
    options = report.bind(entity)(tango);
    golf = options.createStyles;
    tango = {};
    verify = {'overflow': 'hidden', 'paddingHorizontal': 12, 'paddingVertical': 8, 'display': 'flex', 'flexDirection': 'row', 'justifyContent': 'space-between', 'alignItems': 'center'};
    offset = 8;
    backup = oscar[offset];
    backup = yankee.bind(entity)(backup);
    backup = backup.colors;
    backup = backup.BG_BASE_PRIMARY;
    verify['backgroundColor'] = backup;
    foxtrot = foxtrot.hairlineWidth;
    verify['borderBottomWidth'] = foxtrot;
    foxtrot = oscar[offset];
    foxtrot = yankee.bind(entity)(foxtrot);
    foxtrot = foxtrot.colors;
    foxtrot = foxtrot.DIVIDER_SUBTLE;
    verify['borderBottomColor'] = foxtrot;
    tango['actionBarContainer'] = verify;
    verify = {'display': 'flex', 'flexDirection': 'row', 'alignItems': 'center', 'flex': 1};
    tango['actionRow'] = verify;
    verify = {'display': 'flex', 'flexDirection': 'row', 'alignItems': 'center', 'flex': 1};
    tango['reactionRow'] = verify;
    verify = {'display': 'flex', 'flexDirection': 'row', 'alignItems': 'center', 'paddingHorizontal': 8, 'height': 28, 'marginRight': 4, 'borderRadius': null, 'borderWidth': 1};
    foxtrot = oscar[offset];
    foxtrot = yankee.bind(entity)(foxtrot);
    foxtrot = foxtrot.radii;
    foxtrot = foxtrot.sm;
    verify['borderRadius'] = foxtrot;
    foxtrot = oscar[offset];
    foxtrot = yankee.bind(entity)(foxtrot);
    foxtrot = foxtrot.colors;
    foxtrot = foxtrot.REDESIGN_BUTTON_TERTIARY_BACKGROUND;
    verify['backgroundColor'] = foxtrot;
    foxtrot = oscar[offset];
    foxtrot = yankee.bind(entity)(foxtrot);
    foxtrot = foxtrot.colors;
    foxtrot = foxtrot.REDESIGN_BUTTON_TERTIARY_BACKGROUND;
    verify['borderColor'] = foxtrot;
    tango['actionButton'] = verify;
    verify = {};
    foxtrot = 'flex-end';
    verify['justifyContent'] = foxtrot;
    tango['actionButtonsContainer'] = verify;
    verify = {};
    verify['marginRight'] = romeo;
    tango['lastActionButton'] = verify;
    verify = {};
    verify['marginLeft'] = offset;
    tango['buttonText'] = verify;
    verify = {};
    romeo = oscar[offset];
    romeo = yankee.bind(entity)(romeo);
    romeo = romeo.colors;
    romeo = romeo.INTERACTIVE_NORMAL;
    verify['color'] = romeo;
    tango['icon'] = verify;
    verify = {};
    romeo = oscar[offset];
    romeo = yankee.bind(entity)(romeo);
    romeo = romeo.colors;
    romeo = romeo.TEXT_BRAND;
    verify['color'] = romeo;
    tango['iconSelected'] = verify;
    verify = {};
    romeo = oscar[offset];
    romeo = yankee.bind(entity)(romeo);
    romeo = romeo.colors;
    romeo = romeo.REDESIGN_BUTTON_TERTIARY_BACKGROUND;
    verify['backgroundColor'] = romeo;
    offset = oscar[offset];
    offset = yankee.bind(entity)(offset);
    offset = offset.colors;
    offset = offset.REDESIGN_BUTTON_TERTIARY_BACKGROUND;
    verify['borderColor'] = offset;
    tango['reactionButton'] = verify;
    tango = golf.bind(options)(tango);
    var _closure1_slot11 = tango;
    tango = 20;
    tango = oscar[tango];
    oscar = report.bind(entity)(tango);
    report = oscar.fileFinishedImporting;
    tango = 'modules/forums/native/ForumPostActionBar.tsx';
    tango = report.bind(oscar)(tango);
    mike = function(argFoo) { // Original name: _default
        _fun89553: for(var _fun89553_ip = 0; ; ) switch(_fun89553_ip) {
 0:
            entity = argFoo;
            update = entity.channel;
            var _closure2_slot0 = update;
            entity = _closure1_slot11;
            tango = undefined;
            output = entity.bind(tango)();
            mike = _closure1_slot0;
            zulu = _closure1_slot1;
            entity = 9;
            report = zulu[entity];
            options = mike.bind(tango)(report);
            golf = options.useStateFromStores;
            report = _closure1_slot7;
            oscar = new Array(1);
            oscar[0] = report;
            report = function() {
                zulu = _closure1_slot7;
                mike = zulu.getChannel;
                entity = _closure2_slot0;
                entity = entity.parent_id;
                entity = mike.bind(zulu)(entity);
                return entity;
            };
            echo = golf.bind(options)(oscar, report);
            report = 10;
            report = zulu[report];
            oscar = mike.bind(tango)(report);
            report = oscar.useFirstForumPostMessage;
            report = report.bind(oscar)(update);
            result = report.firstMessage;
            entity = zulu[entity];
            golf = mike.bind(tango)(entity);
            oscar = golf.useStateFromStores;
            entity = _closure1_slot6;
            report = new Array(1);
            report[0] = entity;
            entity = function() {
                zulu = _closure1_slot6;
                mike = zulu.hasJoined;
                entity = _closure2_slot0;
                entity = entity.id;
                entity = mike.bind(zulu)(entity);
                return entity;
            };
            verify = oscar.bind(golf)(report, entity);
            var _closure2_slot1 = verify;
            entity = _closure1_slot4;
            entity = entity.bind(tango)();
            entity = entity.width;
            var _closure2_slot2 = entity;
            golf = _closure1_slot3;
            oscar = golf.useState;
            report = 0;
            offset = oscar.bind(golf)(report);
            options = _closure1_slot2;
            oscar = 2;
            oscar = options.bind(tango)(offset, oscar);
            sizing = oscar[report];
            report = 1;
            report = oscar[report];
            var _closure2_slot3 = report;
            oscar = golf.useCallback;
            report = new Array(1);
            report[0] = entity;
            entity = function(argFoo) {
                zulu = _closure2_slot3;
                mike = _closure2_slot2;
                entity = argFoo;
                entity = entity.nativeEvent;
                entity = entity.layout;
                entity = entity.width;
                mike = mike - entity;
                entity = 40;
                mike = mike - entity;
                entity = undefined;
                mike = zulu.bind(entity)(mike);
                return entity;
            };
            offset = oscar.bind(golf)(entity, report);
            kilo = function() { // Original name: handleFollow
                zulu = _closure1_slot0;
                mike = _closure1_slot1;
                entity = 11;
                mike = mike[entity];
                entity = undefined;
                report = zulu.bind(entity)(mike);
                tango = report.handleToggleFollowForumPost;
                zulu = _closure2_slot0;
                mike = _closure2_slot1;
                mike = tango.bind(report)(zulu, mike);
                return entity;
            };
            entity = 12;
            entity = zulu[entity];
            mike = mike.bind(tango)(entity);
            entity = mike.useGradientTop;
            oscar = entity.bind(mike)();
            zulu = _closure1_slot10;
            mike = _closure1_slot5;
            entity = {};
            golf = output.actionBarContainer;
            report = new Array(2);
            report[0] = golf;
            report[1] = oscar;
            entity['style'] = report;
            report = null;
            oscar = report != result;
            if(!oscar) { _fun89553_ip = 409; continue _fun89553 }
 306:
            options = _closure1_slot9;
            golf = _closure1_slot5;
            report = {};
            romeo = output.reactionRow;
            report['style'] = romeo;
            backup = _closure1_slot0;
            source = _closure1_slot1;
            romeo = 13;
            romeo = source[romeo];
            romeo = backup.bind(tango)(romeo);
            backup = romeo.ForumPostActionBarReactions;
            romeo = {};
            romeo['thread'] = update;
            romeo['parentChannel'] = echo;
            romeo['firstMessage'] = result;
            romeo['containerWidth'] = sizing;
            result = output.reactionButton;
            sizing = new Array(1);
            sizing[0] = result;
            romeo['reactionContainerStyle'] = sizing;
            romeo = options.bind(tango)(backup, romeo);
            report['children'] = romeo;
            oscar = options.bind(tango)(golf, report);
 409:
            report = new Array(2);
            report[0] = oscar;
            options = _closure1_slot10;
            golf = _closure1_slot5;
            oscar = {};
            backup = output.actionRow;
            romeo = new Array(2);
            romeo[0] = backup;
            backup = output.actionButtonsContainer;
            romeo[1] = backup;
            oscar['style'] = romeo;
            oscar['onLayout'] = offset;
            backup = _closure1_slot0;
            romeo = _closure1_slot1;
            offset = 14;
            romeo = romeo[offset];
            romeo = backup.bind(tango)(romeo);
            romeo = romeo.PressableOpacity;
            backup = {};
            result = true;
            backup['accessible'] = result;
            config = _closure1_slot0;
            control = _closure1_slot1;
            sizing = 15;
            echo = control[sizing];
            echo = config.bind(tango)(echo);
            source = echo.intl;
            update = source.string;
            echo = control[sizing];
            echo = config.bind(tango)(echo);
            echo = echo.t;
            if(verify) { _fun89553_ip = 733; continue _fun89553 }
 545:
            verify = echo.DjZ+6O;
            verify = update.bind(source)(verify);
            backup['accessibilityLabel'] = verify;
            verify = output.actionButton;
            backup['style'] = verify;
            backup['onPress'] = kilo;
            record = _closure1_slot9;
            verify = 18;
            verify = control[verify];
            verify = config.bind(tango)(verify);
            vacuum = verify.BellIcon;
            verify = {};
            sequence = 'xs';
            verify['size'] = sequence;
            vacuum = record.bind(tango)(vacuum, verify);
            verify = new Array(2);
            verify[0] = vacuum;
            vacuum = 17;
            vacuum = control[vacuum];
            vacuum = config.bind(tango)(vacuum);
            sequence = vacuum.Text;
            vacuum = {'style': null, 'variant': 'text-sm/semibold', 'color': 'interactive-normal'};
            context = output.buttonText;
            vacuum['style'] = context;
            context = control[sizing];
            context = config.bind(tango)(context);
            target = context.intl;
            papa = target.string;
            context = control[sizing];
            context = config.bind(tango)(context);
            context = context.t;
            context = context.0rQinJ;
            context = papa.bind(target)(context);
            vacuum['children'] = context;
            vacuum = record.bind(tango)(sequence, vacuum);
            verify[1] = vacuum;
            backup['children'] = verify;
            verify = backup;
            _fun89553_ip = 928; continue _fun89553;
 733:
            echo = echo.G3ooHB;
            echo = update.bind(source)(echo);
            backup['accessibilityLabel'] = echo;
            echo = output.actionButton;
            backup['style'] = echo;
            backup['onPress'] = kilo;
            source = _closure1_slot9;
            kilo = 16;
            kilo = control[kilo];
            kilo = config.bind(tango)(kilo);
            echo = kilo.CheckmarkLargeIcon;
            kilo = {'size': 'xs', 'color': 'text-brand'};
            echo = source.bind(tango)(echo, kilo);
            kilo = new Array(2);
            kilo[0] = echo;
            echo = 17;
            echo = control[echo];
            echo = config.bind(tango)(echo);
            update = echo.Text;
            echo = {'style': null, 'variant': 'text-sm/semibold', 'color': 'text-brand'};
            sequence = output.buttonText;
            vacuum = new Array(1);
            vacuum[0] = sequence;
            echo['style'] = vacuum;
            vacuum = control[sizing];
            vacuum = config.bind(tango)(vacuum);
            sequence = vacuum.intl;
            vacuum = sequence.string;
            control = control[sizing];
            control = config.bind(tango)(control);
            control = control.t;
            control = control.OtF+lJ;
            control = vacuum.bind(sequence)(control);
            echo['children'] = control;
            echo = source.bind(tango)(update, echo);
            kilo[1] = echo;
            backup['children'] = kilo;
            verify = backup;
 928:
            romeo = options.bind(tango)(romeo, verify);
            verify = new Array(2);
            verify[0] = romeo;
            romeo = _closure1_slot9;
            backup = _closure1_slot0;
            kilo = _closure1_slot1;
            offset = kilo[offset];
            offset = backup.bind(tango)(offset);
            yankee = offset.PressableOpacity;
            offset = {};
            offset['accessible'] = result;
            result = kilo[sizing];
            result = backup.bind(tango)(result);
            echo = result.intl;
            result = echo.string;
            sizing = kilo[sizing];
            sizing = backup.bind(tango)(sizing);
            sizing = sizing.t;
            sizing = sizing.WqhZsr;
            sizing = result.bind(echo)(sizing);
            offset['accessibilityLabel'] = sizing;
            result = output.actionButton;
            sizing = new Array(2);
            sizing[0] = result;
            output = output.lastActionButton;
            sizing[1] = output;
            offset['style'] = sizing;
            foxtrot = function() { // Original name: onPress
                _fun89558: for(var _fun89558_ip = 0; ; ) switch(_fun89558_ip) {
 0:
                    zulu = _closure2_slot0;
                    mike = zulu.getGuildId;
                    report = mike.bind(zulu)();
                    mike = null;
                    if(!(mike != report)) { _fun89558_ip = 86; continue _fun89558 }
 23:
                    tango = _closure1_slot0;
                    zulu = _closure1_slot1;
                    mike = 11;
                    zulu = zulu[mike];
                    mike = undefined;
                    tango = tango.bind(mike)(zulu);
                    zulu = tango.handleCopyLinkForumPost;
                    entity = _closure2_slot0;
                    mike = entity.id;
                    entity = {};
                    oscar = _closure1_slot8;
                    oscar = oscar.CHANNEL_HEADER;
                    entity['section'] = oscar;
                    entity = zulu.bind(tango)(report, mike, entity);
 86:
                    entity = undefined;
                    return entity;
                }
            };
            offset['onPress'] = foxtrot;
            foxtrot = 19;
            foxtrot = kilo[foxtrot];
            foxtrot = backup.bind(tango)(foxtrot);
            backup = foxtrot.LinkIcon;
            foxtrot = {};
            kilo = 'xs';
            foxtrot['size'] = kilo;
            foxtrot = romeo.bind(tango)(backup, foxtrot);
            offset['children'] = foxtrot;
            offset = romeo.bind(tango)(yankee, offset);
            verify[1] = offset;
            oscar['children'] = verify;
            oscar = options.bind(tango)(golf, oscar);
            report[1] = oscar;
            entity['children'] = report;
            entity = zulu.bind(tango)(mike, entity);
            return entity;
        }
    };
    zulu['default'] = mike;
    return entity;
})();