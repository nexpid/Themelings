// app/modules/forums/native/ForumPostActionBar.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    report = argBar;
    yankee = argBaz;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    var _closure1_slot1 = oscard;
    entity = global;
    option = entity.Object;
    golfie = option.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(option)(zuuluu, entity, tangon);
    romeon = 0;
    tangon = oscard[romeon];
    entity = undefined;
    tangon = yankee.bind(entity)(tangon);
    var _closure1_slot2 = tangon;
    tangon = 1;
    golfie = oscard[tangon];
    tangon = argCor;
    tangon = tangon.bind(entity)(golfie);
    var _closure1_slot3 = tangon;
    tangon = 2;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    foxtra = tangon.StyleSheet;
    golfie = tangon.useWindowDimensions;
    var _closure1_slot4 = golfie;
    tangon = tangon.View;
    var _closure1_slot5 = tangon;
    tangon = 3;
    tangon = oscard[tangon];
    tangon = yankee.bind(entity)(tangon);
    var _closure1_slot6 = tangon;
    tangon = 4;
    tangon = oscard[tangon];
    tangon = yankee.bind(entity)(tangon);
    var _closure1_slot7 = tangon;
    tangon = 5;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.AnalyticsSections;
    var _closure1_slot8 = tangon;
    tangon = 6;
    golfie = oscard[tangon];
    golfie = report.bind(entity)(golfie);
    golfie = golfie.jsx;
    var _closure1_slot9 = golfie;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.jsxs;
    var _closure1_slot10 = tangon;
    tangon = 7;
    tangon = oscard[tangon];
    option = report.bind(entity)(tangon);
    golfie = option.createStyles;
    tangon = {};
    verify = {'overflow': 'hidden', 'paddingHorizontal': 12, 'paddingVertical': 8, 'display': 'flex', 'flexDirection': 'row', 'justifyContent': 'space-between', 'alignItems': 'center'};
    offset = 8;
    backup = oscard[offset];
    backup = yankee.bind(entity)(backup);
    backup = backup.colors;
    backup = backup.BG_BASE_PRIMARY;
    verify['backgroundColor'] = backup;
    foxtra = foxtra.hairlineWidth;
    verify['borderBottomWidth'] = foxtra;
    foxtra = oscard[offset];
    foxtra = yankee.bind(entity)(foxtra);
    foxtra = foxtra.colors;
    foxtra = foxtra.DIVIDER_SUBTLE;
    verify['borderBottomColor'] = foxtra;
    tangon['actionBarContainer'] = verify;
    verify = {'display': 'flex', 'flexDirection': 'row', 'alignItems': 'center', 'flex': 1};
    tangon['actionRow'] = verify;
    verify = {'display': 'flex', 'flexDirection': 'row', 'alignItems': 'center', 'flex': 1};
    tangon['reactionRow'] = verify;
    verify = {'display': 'flex', 'flexDirection': 'row', 'alignItems': 'center', 'paddingHorizontal': 8, 'height': 28, 'marginRight': 4, 'borderRadius': null, 'borderWidth': 1};
    foxtra = oscard[offset];
    foxtra = yankee.bind(entity)(foxtra);
    foxtra = foxtra.radii;
    foxtra = foxtra.sm;
    verify['borderRadius'] = foxtra;
    foxtra = oscard[offset];
    foxtra = yankee.bind(entity)(foxtra);
    foxtra = foxtra.colors;
    foxtra = foxtra.REDESIGN_BUTTON_TERTIARY_BACKGROUND;
    verify['backgroundColor'] = foxtra;
    foxtra = oscard[offset];
    foxtra = yankee.bind(entity)(foxtra);
    foxtra = foxtra.colors;
    foxtra = foxtra.REDESIGN_BUTTON_TERTIARY_BACKGROUND;
    verify['borderColor'] = foxtra;
    tangon['actionButton'] = verify;
    verify = {};
    foxtra = 'flex-end';
    verify['justifyContent'] = foxtra;
    tangon['actionButtonsContainer'] = verify;
    verify = {};
    verify['marginRight'] = romeon;
    tangon['lastActionButton'] = verify;
    verify = {};
    verify['marginLeft'] = offset;
    tangon['buttonText'] = verify;
    verify = {};
    romeon = oscard[offset];
    romeon = yankee.bind(entity)(romeon);
    romeon = romeon.colors;
    romeon = romeon.INTERACTIVE_NORMAL;
    verify['color'] = romeon;
    tangon['icon'] = verify;
    verify = {};
    romeon = oscard[offset];
    romeon = yankee.bind(entity)(romeon);
    romeon = romeon.colors;
    romeon = romeon.TEXT_BRAND;
    verify['color'] = romeon;
    tangon['iconSelected'] = verify;
    verify = {};
    romeon = oscard[offset];
    romeon = yankee.bind(entity)(romeon);
    romeon = romeon.colors;
    romeon = romeon.REDESIGN_BUTTON_TERTIARY_BACKGROUND;
    verify['backgroundColor'] = romeon;
    offset = oscard[offset];
    offset = yankee.bind(entity)(offset);
    offset = offset.colors;
    offset = offset.REDESIGN_BUTTON_TERTIARY_BACKGROUND;
    verify['borderColor'] = offset;
    tangon['reactionButton'] = verify;
    tangon = golfie.bind(option)(tangon);
    var _closure1_slot11 = tangon;
    tangon = 20;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/forums/native/ForumPostActionBar.tsx';
    tangon = report.bind(oscard)(tangon);
    michal = function(argFoo) { // Original name: _default
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            entity = argFoo;
            update = entity.channel;
            var _closure2_slot0 = update;
            entity = _closure1_slot11;
            tangon = undefined;
            output = entity.bind(tangon)();
            michal = _closure1_slot0;
            zuuluu = _closure1_slot1;
            entity = 9;
            report = zuuluu[entity];
            option = michal.bind(tangon)(report);
            golfie = option.useStateFromStores;
            report = _closure1_slot7;
            oscard = new Array(1);
            oscard[0] = report;
            report = function() {
                zuuluu = _closure1_slot7;
                michal = zuuluu.getChannel;
                entity = _closure2_slot0;
                entity = entity.parent_id;
                entity = michal.bind(zuuluu)(entity);
                return entity;
            };
            echoed = golfie.bind(option)(oscard, report);
            report = 10;
            report = zuuluu[report];
            oscard = michal.bind(tangon)(report);
            report = oscard.useFirstForumPostMessage;
            report = report.bind(oscard)(update);
            result = report.firstMessage;
            entity = zuuluu[entity];
            golfie = michal.bind(tangon)(entity);
            oscard = golfie.useStateFromStores;
            entity = _closure1_slot6;
            report = new Array(1);
            report[0] = entity;
            entity = function() {
                zuuluu = _closure1_slot6;
                michal = zuuluu.hasJoined;
                entity = _closure2_slot0;
                entity = entity.id;
                entity = michal.bind(zuuluu)(entity);
                return entity;
            };
            verify = oscard.bind(golfie)(report, entity);
            var _closure2_slot1 = verify;
            entity = _closure1_slot4;
            entity = entity.bind(tangon)();
            entity = entity.width;
            var _closure2_slot2 = entity;
            golfie = _closure1_slot3;
            oscard = golfie.useState;
            report = 0;
            offset = oscard.bind(golfie)(report);
            option = _closure1_slot2;
            oscard = 2;
            oscard = option.bind(tangon)(offset, oscard);
            sizing = oscard[report];
            report = 1;
            report = oscard[report];
            var _closure2_slot3 = report;
            oscard = golfie.useCallback;
            report = new Array(1);
            report[0] = entity;
            entity = function(argFoo) {
                zuuluu = _closure2_slot3;
                michal = _closure2_slot2;
                entity = argFoo;
                entity = entity.nativeEvent;
                entity = entity.layout;
                entity = entity.width;
                michal = michal - entity;
                entity = 40;
                michal = michal - entity;
                entity = undefined;
                michal = zuuluu.bind(entity)(michal);
                return entity;
            };
            offset = oscard.bind(golfie)(entity, report);
            kiloes = function() { // Original name: handleFollow
                zuuluu = _closure1_slot0;
                michal = _closure1_slot1;
                entity = 11;
                michal = michal[entity];
                entity = undefined;
                report = zuuluu.bind(entity)(michal);
                tangon = report.handleToggleFollowForumPost;
                zuuluu = _closure2_slot0;
                michal = _closure2_slot1;
                michal = tangon.bind(report)(zuuluu, michal);
                return entity;
            };
            entity = 12;
            entity = zuuluu[entity];
            michal = michal.bind(tangon)(entity);
            entity = michal.useGradientTop;
            oscard = entity.bind(michal)();
            zuuluu = _closure1_slot10;
            michal = _closure1_slot5;
            entity = {};
            golfie = output.actionBarContainer;
            report = new Array(2);
            report[0] = golfie;
            report[1] = oscard;
            entity['style'] = report;
            report = null;
            oscard = report != result;
            if(!oscard) { _fun00002_ip = 409; continue _fun00001 }
 306:
            option = _closure1_slot9;
            golfie = _closure1_slot5;
            report = {};
            romeon = output.reactionRow;
            report['style'] = romeon;
            backup = _closure1_slot0;
            source = _closure1_slot1;
            romeon = 13;
            romeon = source[romeon];
            romeon = backup.bind(tangon)(romeon);
            backup = romeon.ForumPostActionBarReactions;
            romeon = {};
            romeon['thread'] = update;
            romeon['parentChannel'] = echoed;
            romeon['firstMessage'] = result;
            romeon['containerWidth'] = sizing;
            result = output.reactionButton;
            sizing = new Array(1);
            sizing[0] = result;
            romeon['reactionContainerStyle'] = sizing;
            romeon = option.bind(tangon)(backup, romeon);
            report['children'] = romeon;
            oscard = option.bind(tangon)(golfie, report);
 409:
            report = new Array(2);
            report[0] = oscard;
            option = _closure1_slot10;
            golfie = _closure1_slot5;
            oscard = {};
            backup = output.actionRow;
            romeon = new Array(2);
            romeon[0] = backup;
            backup = output.actionButtonsContainer;
            romeon[1] = backup;
            oscard['style'] = romeon;
            oscard['onLayout'] = offset;
            backup = _closure1_slot0;
            romeon = _closure1_slot1;
            offset = 14;
            romeon = romeon[offset];
            romeon = backup.bind(tangon)(romeon);
            romeon = romeon.PressableOpacity;
            backup = {};
            result = true;
            backup['accessible'] = result;
            config = _closure1_slot0;
            ctrled = _closure1_slot1;
            sizing = 15;
            echoed = ctrled[sizing];
            echoed = config.bind(tangon)(echoed);
            source = echoed.intl;
            update = source.string;
            echoed = ctrled[sizing];
            echoed = config.bind(tangon)(echoed);
            echoed = echoed.t;
            if(verify) { _fun00002_ip = 735; continue _fun00001 }
 545:
            verify = echoed.DjZ+6O;
            verify = update.bind(source)(verify);
            backup['accessibilityLabel'] = verify;
            verify = output.actionButton;
            backup['style'] = verify;
            backup['onPress'] = kiloes;
            record = _closure1_slot9;
            verify = 18;
            verify = ctrled[verify];
            verify = config.bind(tangon)(verify);
            vacuum = verify.BellIcon;
            verify = {};
            sequen = 'xs';
            verify['size'] = sequen;
            vacuum = record.bind(tangon)(vacuum, verify);
            verify = new Array(2);
            verify[0] = vacuum;
            vacuum = 17;
            vacuum = ctrled[vacuum];
            vacuum = config.bind(tangon)(vacuum);
            sequen = vacuum.Text;
            vacuum = {'style': null, 'variant': 'text-sm/semibold', 'color': 'interactive-normal'};
            cntext = output.buttonText;
            vacuum['style'] = cntext;
            cntext = ctrled[sizing];
            cntext = config.bind(tangon)(cntext);
            target = cntext.intl;
            papara = target.string;
            cntext = ctrled[sizing];
            cntext = config.bind(tangon)(cntext);
            cntext = cntext.t;
            cntext = cntext.0rQinJ;
            cntext = papara.bind(target)(cntext);
            vacuum['children'] = cntext;
            vacuum = record.bind(tangon)(sequen, vacuum);
            verify[1] = vacuum;
            backup['children'] = verify;
            verify = backup;
            _fun00002_ip = 932; continue _fun00001;
 735:
            echoed = echoed.G3ooHB;
            echoed = update.bind(source)(echoed);
            backup['accessibilityLabel'] = echoed;
            echoed = output.actionButton;
            backup['style'] = echoed;
            backup['onPress'] = kiloes;
            source = _closure1_slot9;
            kiloes = 16;
            kiloes = ctrled[kiloes];
            kiloes = config.bind(tangon)(kiloes);
            echoed = kiloes.CheckmarkLargeIcon;
            kiloes = {'size': 'xs', 'color': 'text-brand'};
            echoed = source.bind(tangon)(echoed, kiloes);
            kiloes = new Array(2);
            kiloes[0] = echoed;
            echoed = 17;
            echoed = ctrled[echoed];
            echoed = config.bind(tangon)(echoed);
            update = echoed.Text;
            echoed = {'style': null, 'variant': 'text-sm/semibold', 'color': 'text-brand'};
            sequen = output.buttonText;
            vacuum = new Array(1);
            vacuum[0] = sequen;
            echoed['style'] = vacuum;
            vacuum = ctrled[sizing];
            vacuum = config.bind(tangon)(vacuum);
            sequen = vacuum.intl;
            vacuum = sequen.string;
            ctrled = ctrled[sizing];
            ctrled = config.bind(tangon)(ctrled);
            ctrled = ctrled.t;
            ctrled = ctrled.OtF+lJ;
            ctrled = vacuum.bind(sequen)(ctrled);
            echoed['children'] = ctrled;
            echoed = source.bind(tangon)(update, echoed);
            kiloes[1] = echoed;
            backup['children'] = kiloes;
            verify = backup;
 932:
            romeon = option.bind(tangon)(romeon, verify);
            verify = new Array(2);
            verify[0] = romeon;
            romeon = _closure1_slot9;
            backup = _closure1_slot0;
            kiloes = _closure1_slot1;
            offset = kiloes[offset];
            offset = backup.bind(tangon)(offset);
            yankee = offset.PressableOpacity;
            offset = {};
            offset['accessible'] = result;
            result = kiloes[sizing];
            result = backup.bind(tangon)(result);
            echoed = result.intl;
            result = echoed.string;
            sizing = kiloes[sizing];
            sizing = backup.bind(tangon)(sizing);
            sizing = sizing.t;
            sizing = sizing.WqhZsr;
            sizing = result.bind(echoed)(sizing);
            offset['accessibilityLabel'] = sizing;
            result = output.actionButton;
            sizing = new Array(2);
            sizing[0] = result;
            output = output.lastActionButton;
            sizing[1] = output;
            offset['style'] = sizing;
            foxtra = function() { // Original name: onPress
                _fun00003: for(var _fun00004_ip = 0; ; ) switch(_fun00004_ip) {
 0:
                    zuuluu = _closure2_slot0;
                    michal = zuuluu.getGuildId;
                    report = michal.bind(zuuluu)();
                    michal = null;
                    if(!(michal != report)) { _fun00004_ip = 86; continue _fun00003 }
 23:
                    tangon = _closure1_slot0;
                    zuuluu = _closure1_slot1;
                    michal = 11;
                    zuuluu = zuuluu[michal];
                    michal = undefined;
                    tangon = tangon.bind(michal)(zuuluu);
                    zuuluu = tangon.handleCopyLinkForumPost;
                    entity = _closure2_slot0;
                    michal = entity.id;
                    entity = {};
                    oscard = _closure1_slot8;
                    oscard = oscard.CHANNEL_HEADER;
                    entity['section'] = oscard;
                    entity = zuuluu.bind(tangon)(report, michal, entity);
 86:
                    entity = undefined;
                    return entity;
                }
            };
            offset['onPress'] = foxtra;
            foxtra = 19;
            foxtra = kiloes[foxtra];
            foxtra = backup.bind(tangon)(foxtra);
            backup = foxtra.LinkIcon;
            foxtra = {};
            kiloes = 'xs';
            foxtra['size'] = kiloes;
            foxtra = romeon.bind(tangon)(backup, foxtra);
            offset['children'] = foxtra;
            offset = romeon.bind(tangon)(yankee, offset);
            verify[1] = offset;
            oscard['children'] = verify;
            oscard = option.bind(tangon)(golfie, oscard);
            report[1] = oscard;
            entity['children'] = report;
            entity = zuuluu.bind(tangon)(michal, entity);
            return entity;
        }
    };
    zuuluu['default'] = michal;
    return entity;
})();