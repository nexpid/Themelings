// app/modules/forums/native/ForumTagFilterActionSheet.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    report = argBar;
    yankee = argBaz;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    var _closure1_slot1 = yankee;
    var _closure1_slot2 = oscard;
    entity = global;
    option = entity.Object;
    golfie = option.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(option)(zuuluu, entity, tangon);
    entity = 0;
    tangon = oscard[entity];
    entity = undefined;
    tangon = yankee.bind(entity)(tangon);
    var _closure1_slot3 = tangon;
    tangon = 1;
    golfie = oscard[tangon];
    tangon = argCor;
    tangon = tangon.bind(entity)(golfie);
    var _closure1_slot4 = tangon;
    tangon = 2;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.View;
    var _closure1_slot5 = tangon;
    tangon = 3;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    golfie = tangon.useForumChannelStore;
    var _closure1_slot6 = golfie;
    tangon = tangon.useForumChannelStoreApi;
    var _closure1_slot7 = tangon;
    tangon = 4;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    golfie = tangon.AnalyticsObjects;
    var _closure1_slot8 = golfie;
    golfie = tangon.AnalyticsPages;
    var _closure1_slot9 = golfie;
    tangon = tangon.AnalyticsSections;
    var _closure1_slot10 = tangon;
    tangon = 5;
    golfie = oscard[tangon];
    golfie = report.bind(entity)(golfie);
    golfie = golfie.jsx;
    var _closure1_slot11 = golfie;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.jsxs;
    var _closure1_slot12 = tangon;
    tangon = 6;
    tangon = oscard[tangon];
    option = report.bind(entity)(tangon);
    golfie = option.createStyles;
    tangon = {};
    verify = {'display': 'flex', 'flexDirection': 'row', 'alignItems': 'center', 'justifyContent': 'center'};
    tangon['tagHeader'] = verify;
    verify = {'display': 'flex', 'flexDirection': 'row', 'flexWrap': 'wrap', 'padding': 16};
    tangon['tagsContainer'] = verify;
    verify = {'backgroundColor': null, 'borderRadius': 20, 'marginLeft': 8, 'minWidth': 20, 'height': 20, 'display': 'flex', 'alignItems': 'center', 'justifyContent': 'center'};
    offset = 7;
    romeon = oscard[offset];
    romeon = yankee.bind(entity)(romeon);
    romeon = romeon.colors;
    romeon = romeon.BG_BRAND;
    verify['backgroundColor'] = romeon;
    tangon['countContainer'] = verify;
    verify = {'padding': 16, 'paddingTop': 8, 'gap': 8};
    tangon['buttonContainer'] = verify;
    verify = {};
    offset = oscard[offset];
    offset = yankee.bind(entity)(offset);
    offset = offset.colors;
    offset = offset.HEADER_PRIMARY;
    verify['color'] = offset;
    tangon['clearButtonText'] = verify;
    tangon = golfie.bind(option)(tangon);
    var _closure1_slot13 = tangon;
    tangon = 17;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/forums/native/ForumTagFilterActionSheet.tsx';
    tangon = report.bind(oscard)(tangon);
    michal = function(argFoo) { // Original name: ForumPostTagsActionSheet
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            entity = argFoo;
            offset = entity.channel;
            var _closure2_slot0 = offset;
            entity = _closure1_slot13;
            tangon = undefined;
            result = entity.bind(tangon)();
            michal = _closure1_slot6;
            entity = offset.id;
            entity = michal.bind(tangon)(entity);
            config = entity.tagFilter;
            entity = _closure1_slot7;
            entity = entity.bind(tangon)();
            var _closure2_slot1 = entity;
            zuuluu = _closure1_slot4;
            michal = zuuluu.useState;
            entity = global;
            entity = entity.Set;
            report = entity.prototype;
            report = Object.create(report, {constructor: {value: entity}});
            record = report;
            entity = new record[entity](config, sequen);
            entity = entity instanceof Object ? entity : report;
            zuuluu = michal.bind(zuuluu)(entity);
            michal = _closure1_slot3;
            entity = 2;
            michal = michal.bind(tangon)(zuuluu, entity);
            backup = 0;
            ctrled = michal[backup];
            var _closure2_slot2 = ctrled;
            entity = 1;
            entity = michal[entity];
            var _closure2_slot3 = entity;
            entity = function(argFoo) { // Original name: toggleTag
                _fun00003: for(var _fun00004_ip = 0; ; ) switch(_fun00004_ip) {
 0:
                    golfie = argFoo;
                    entity = null;
                    if(!(entity != golfie)) { _fun00004_ip = 270; continue _fun00003 }
 12:
                    verify = global;
                    tangon = verify.Set;
                    romeon = _closure2_slot2;
                    zuuluu = tangon.prototype;
                    zuuluu = Object.create(zuuluu, {constructor: {value: tangon}});
                    foxtra = zuuluu;
                    michal = new foxtra[tangon](romeon, yankee);
                    zuuluu = michal instanceof Object ? michal : zuuluu;
                    tangon = zuuluu.has;
                    michal = golfie.id;
                    michal = tangon.bind(zuuluu)(michal);
                    if(michal) { _fun00004_ip = 82; continue _fun00003 }
 65:
                    tangon = zuuluu.add;
                    michal = golfie.id;
                    michal = tangon.bind(zuuluu)(michal);
                    _fun00004_ip = 97; continue _fun00003;
 82:
                    tangon = zuuluu.delete;
                    michal = golfie.id;
                    michal = tangon.bind(zuuluu)(michal);
 97:
                    report = _closure1_slot0;
                    tangon = _closure1_slot2;
                    michal = 8;
                    tangon = tangon[michal];
                    michal = undefined;
                    oscard = report.bind(michal)(tangon);
                    report = oscard.trackForumTagFilterClicked;
                    tangon = {};
                    offset = _closure2_slot0;
                    yankee = offset.guild_id;
                    tangon['guildId'] = yankee;
                    offset = offset.id;
                    tangon['channelId'] = offset;
                    offset = golfie.id;
                    tangon['tagId'] = offset;
                    offset = verify.Array;
                    verify = offset.from;
                    verify = verify.bind(offset)(zuuluu);
                    tangon['filterTagIds'] = verify;
                    verify = zuuluu.has;
                    golfie = golfie.id;
                    golfie = verify.bind(zuuluu)(golfie);
                    golfie = !golfie;
                    tangon['added'] = golfie;
                    golfie = {};
                    verify = _closure1_slot9;
                    verify = verify.GUILD_CHANNEL;
                    golfie['page'] = verify;
                    verify = _closure1_slot10;
                    verify = verify.FORUM_CHANNEL_HEADER;
                    golfie['section'] = verify;
                    option = _closure1_slot8;
                    option = option.CHANNEL_TAG;
                    golfie['object'] = option;
                    tangon['location'] = golfie;
                    tangon = report.bind(oscard)(tangon);
                    entity = _closure2_slot3;
                    entity = entity.bind(michal)(zuuluu);
 270:
                    entity = undefined;
                    return entity;
                }
            };
            var _closure2_slot4 = entity;
            zuuluu = _closure1_slot11;
            update = _closure1_slot0;
            kiloes = _closure1_slot2;
            entity = 9;
            entity = kiloes[entity];
            entity = update.bind(tangon)(entity);
            michal = entity.RedesignCompat;
            entity = {};
            golfie = _closure1_slot12;
            report = 10;
            report = kiloes[report];
            report = update.bind(tangon)(report);
            oscard = report.BottomSheet;
            report = {};
            option = true;
            report['startExpanded'] = option;
            verify = _closure1_slot5;
            option = {};
            yankee = result.tagHeader;
            option['style'] = yankee;
            vacuum = 11;
            yankee = kiloes[vacuum];
            yankee = update.bind(tangon)(yankee);
            romeon = yankee.Text;
            yankee = {'variant': 'heading-md/extrabold', 'color': 'header-primary'};
            source = 12;
            output = kiloes[source];
            output = update.bind(tangon)(output);
            echoed = output.intl;
            output = echoed.string;
            kiloes = kiloes[source];
            kiloes = update.bind(tangon)(kiloes);
            kiloes = kiloes.t;
            kiloes = kiloes.TdqRTk;
            kiloes = output.bind(echoed)(kiloes);
            yankee['children'] = kiloes;
            romeon = zuuluu.bind(tangon)(romeon, yankee);
            yankee = new Array(2);
            yankee[0] = romeon;
            romeon = ctrled.size;
            romeon = romeon > backup;
            if(!romeon) { _fun00002_ip = 414; continue _fun00001 }
 333:
            output = _closure1_slot11;
            kiloes = _closure1_slot5;
            backup = {};
            echoed = result.countContainer;
            backup['style'] = echoed;
            update = _closure1_slot0;
            echoed = _closure1_slot2;
            echoed = echoed[vacuum];
            echoed = update.bind(tangon)(echoed);
            update = echoed.Text;
            echoed = {'variant': 'text-xs/bold', 'color': 'always-white'};
            ctrled = ctrled.size;
            echoed['children'] = ctrled;
            echoed = output.bind(tangon)(update, echoed);
            backup['children'] = echoed;
            romeon = output.bind(tangon)(kiloes, backup);
 414:
            yankee[1] = romeon;
            option['children'] = yankee;
            verify = golfie.bind(tangon)(verify, option);
            option = new Array(3);
            option[0] = verify;
            kiloes = _closure1_slot11;
            yankee = _closure1_slot5;
            verify = {};
            romeon = result.tagsContainer;
            verify['style'] = romeon;
            backup = offset.availableTags;
            romeon = backup.map;
            offset = function(argFoo) {
                entity = argFoo;
                report = _closure1_slot11;
                zuuluu = _closure1_slot1;
                tangon = _closure1_slot2;
                michal = 13;
                michal = tangon[michal];
                tangon = undefined;
                zuuluu = zuuluu.bind(tangon)(michal);
                michal = {};
                michal['tag'] = entity;
                golfie = _closure2_slot4;
                michal['onPress'] = golfie;
                option = _closure2_slot2;
                golfie = option.has;
                oscard = entity.id;
                oscard = golfie.bind(option)(oscard);
                michal['selected'] = oscard;
                entity = entity.id;
                entity = report.bind(tangon)(zuuluu, michal, entity);
                return entity;
            };
            offset = romeon.bind(backup)(offset);
            verify['children'] = offset;
            verify = kiloes.bind(tangon)(yankee, verify);
            option[1] = verify;
            offset = _closure1_slot12;
            verify = {};
            romeon = result.buttonContainer;
            verify['style'] = romeon;
            update = _closure1_slot0;
            output = _closure1_slot2;
            romeon = 14;
            romeon = output[romeon];
            romeon = update.bind(tangon)(romeon);
            backup = romeon.Button;
            romeon = {};
            echoed = output[source];
            echoed = update.bind(tangon)(echoed);
            vacuum = echoed.intl;
            ctrled = vacuum.string;
            echoed = output[source];
            echoed = update.bind(tangon)(echoed);
            echoed = echoed.t;
            echoed = echoed.Yh05IS;
            echoed = ctrled.bind(vacuum)(echoed);
            romeon['text'] = echoed;
            echoed = function() { // Original name: onPress
                zuuluu = _closure2_slot1;
                michal = zuuluu.getState;
                tangon = michal.bind(zuuluu)();
                zuuluu = tangon.setTagFilter;
                michal = _closure2_slot0;
                michal = michal.id;
                entity = _closure2_slot2;
                entity = zuuluu.bind(tangon)(michal, entity);
                zuuluu = _closure1_slot1;
                michal = _closure1_slot2;
                entity = 15;
                michal = michal[entity];
                entity = undefined;
                zuuluu = zuuluu.bind(entity)(michal);
                michal = zuuluu.hideActionSheet;
                michal = michal.bind(zuuluu)();
                return entity;
            };
            romeon['onPress'] = echoed;
            backup = kiloes.bind(tangon)(backup, romeon);
            romeon = new Array(2);
            romeon[0] = backup;
            ctrled = _closure1_slot1;
            echoed = 16;
            foxtra = output[echoed];
            backup = ctrled.bind(tangon)(foxtra);
            foxtra = {};
            vacuum = output[echoed];
            vacuum = ctrled.bind(tangon)(vacuum);
            vacuum = vacuum.Looks;
            vacuum = vacuum.LINK;
            foxtra['look'] = vacuum;
            vacuum = output[echoed];
            vacuum = ctrled.bind(tangon)(vacuum);
            vacuum = vacuum.Sizes;
            vacuum = vacuum.MEDIUM;
            foxtra['size'] = vacuum;
            echoed = output[echoed];
            echoed = ctrled.bind(tangon)(echoed);
            echoed = echoed.Colors;
            echoed = echoed.TRANSPARENT;
            foxtra['color'] = echoed;
            result = result.clearButtonText;
            foxtra['textStyle'] = result;
            result = output[source];
            result = update.bind(tangon)(result);
            echoed = result.intl;
            result = echoed.string;
            output = output[source];
            output = update.bind(tangon)(output);
            output = output.t;
            output = output.PYZlEh;
            output = result.bind(echoed)(output);
            foxtra['text'] = output;
            sizing = function() { // Original name: onPress
                zuuluu = _closure2_slot3;
                entity = global;
                entity = entity.Set;
                michal = entity.prototype;
                michal = Object.create(michal, {constructor: {value: entity}});
                report = michal;
                entity = new report[entity](tangon);
                michal = entity instanceof Object ? entity : michal;
                entity = undefined;
                michal = zuuluu.bind(entity)(michal);
                return entity;
            };
            foxtra['onPress'] = sizing;
            foxtra = kiloes.bind(tangon)(backup, foxtra);
            romeon[1] = foxtra;
            verify['children'] = romeon;
            verify = offset.bind(tangon)(yankee, verify);
            option[2] = verify;
            report['children'] = option;
            report = golfie.bind(tangon)(oscard, report);
            entity['children'] = report;
            entity = zuuluu.bind(tangon)(michal, entity);
            return entity;
        }
    };
    zuuluu['default'] = michal;
    return entity;
})();