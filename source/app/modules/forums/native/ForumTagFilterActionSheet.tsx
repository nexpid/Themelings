// app/modules/forums/native/ForumTagFilterActionSheet.tsx
export default (function(argFoo, argBar, argBaz, argCorge, _, argFred, argPlugh) {
    report = argBar;
    yankee = argBaz;
    zulu = argFred;
    oscar = argPlugh;
    var _closure1_slot0 = report;
    var _closure1_slot1 = yankee;
    var _closure1_slot2 = oscar;
    entity = global;
    options = entity.Object;
    golf = options.defineProperty;
    tango = {};
    entity = true;
    tango['value'] = entity;
    entity = '__esModule';
    entity = golf.bind(options)(zulu, entity, tango);
    entity = 0;
    tango = oscar[entity];
    entity = undefined;
    tango = yankee.bind(entity)(tango);
    var _closure1_slot3 = tango;
    tango = 1;
    golf = oscar[tango];
    tango = argCorge;
    tango = tango.bind(entity)(golf);
    var _closure1_slot4 = tango;
    tango = 2;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.View;
    var _closure1_slot5 = tango;
    tango = 3;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    golf = tango.useForumChannelStore;
    var _closure1_slot6 = golf;
    tango = tango.useForumChannelStoreApi;
    var _closure1_slot7 = tango;
    tango = 4;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    golf = tango.AnalyticsObjects;
    var _closure1_slot8 = golf;
    golf = tango.AnalyticsPages;
    var _closure1_slot9 = golf;
    tango = tango.AnalyticsSections;
    var _closure1_slot10 = tango;
    tango = 5;
    golf = oscar[tango];
    golf = report.bind(entity)(golf);
    golf = golf.jsx;
    var _closure1_slot11 = golf;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.jsxs;
    var _closure1_slot12 = tango;
    tango = 6;
    tango = oscar[tango];
    options = report.bind(entity)(tango);
    golf = options.createStyles;
    tango = {};
    verify = {'display': 'flex', 'flexDirection': 'row', 'alignItems': 'center', 'justifyContent': 'center'};
    tango['tagHeader'] = verify;
    verify = {'display': 'flex', 'flexDirection': 'row', 'flexWrap': 'wrap', 'padding': 16};
    tango['tagsContainer'] = verify;
    verify = {'backgroundColor': null, 'borderRadius': 20, 'marginLeft': 8, 'minWidth': 20, 'height': 20, 'display': 'flex', 'alignItems': 'center', 'justifyContent': 'center'};
    offset = 7;
    romeo = oscar[offset];
    romeo = yankee.bind(entity)(romeo);
    romeo = romeo.colors;
    romeo = romeo.BG_BRAND;
    verify['backgroundColor'] = romeo;
    tango['countContainer'] = verify;
    verify = {'padding': 16, 'paddingTop': 8, 'gap': 8};
    tango['buttonContainer'] = verify;
    verify = {};
    offset = oscar[offset];
    offset = yankee.bind(entity)(offset);
    offset = offset.colors;
    offset = offset.HEADER_PRIMARY;
    verify['color'] = offset;
    tango['clearButtonText'] = verify;
    tango = golf.bind(options)(tango);
    var _closure1_slot13 = tango;
    tango = 17;
    tango = oscar[tango];
    oscar = report.bind(entity)(tango);
    report = oscar.fileFinishedImporting;
    tango = 'modules/forums/native/ForumTagFilterActionSheet.tsx';
    tango = report.bind(oscar)(tango);
    mike = function(argFoo) { // Original name: ForumPostTagsActionSheet
        _fun102101: for(var _fun102101_ip = 0; ; ) switch(_fun102101_ip) {
 0:
            entity = argFoo;
            offset = entity.channel;
            var _closure2_slot0 = offset;
            entity = _closure1_slot13;
            tango = undefined;
            result = entity.bind(tango)();
            mike = _closure1_slot6;
            entity = offset.id;
            entity = mike.bind(tango)(entity);
            config = entity.tagFilter;
            entity = _closure1_slot7;
            entity = entity.bind(tango)();
            var _closure2_slot1 = entity;
            zulu = _closure1_slot4;
            mike = zulu.useState;
            entity = global;
            entity = entity.Set;
            report = entity.prototype;
            report = Object.create(report, {constructor: {value: entity}});
            record = report;
            entity = new record[entity](config, sequence);
            entity = entity instanceof Object ? entity : report;
            zulu = mike.bind(zulu)(entity);
            mike = _closure1_slot3;
            entity = 2;
            mike = mike.bind(tango)(zulu, entity);
            backup = 0;
            control = mike[backup];
            var _closure2_slot2 = control;
            entity = 1;
            entity = mike[entity];
            var _closure2_slot3 = entity;
            entity = function(argFoo) { // Original name: toggleTag
                _fun102102: for(var _fun102102_ip = 0; ; ) switch(_fun102102_ip) {
 0:
                    golf = argFoo;
                    entity = null;
                    if(!(entity != golf)) { _fun102102_ip = 270; continue _fun102102 }
 12:
                    verify = global;
                    tango = verify.Set;
                    romeo = _closure2_slot2;
                    zulu = tango.prototype;
                    zulu = Object.create(zulu, {constructor: {value: tango}});
                    foxtrot = zulu;
                    mike = new foxtrot[tango](romeo, yankee);
                    zulu = mike instanceof Object ? mike : zulu;
                    tango = zulu.has;
                    mike = golf.id;
                    mike = tango.bind(zulu)(mike);
                    if(mike) { _fun102102_ip = 82; continue _fun102102 }
 65:
                    tango = zulu.add;
                    mike = golf.id;
                    mike = tango.bind(zulu)(mike);
                    _fun102102_ip = 97; continue _fun102102;
 82:
                    tango = zulu.delete;
                    mike = golf.id;
                    mike = tango.bind(zulu)(mike);
 97:
                    report = _closure1_slot0;
                    tango = _closure1_slot2;
                    mike = 8;
                    tango = tango[mike];
                    mike = undefined;
                    oscar = report.bind(mike)(tango);
                    report = oscar.trackForumTagFilterClicked;
                    tango = {};
                    offset = _closure2_slot0;
                    yankee = offset.guild_id;
                    tango['guildId'] = yankee;
                    offset = offset.id;
                    tango['channelId'] = offset;
                    offset = golf.id;
                    tango['tagId'] = offset;
                    offset = verify.Array;
                    verify = offset.from;
                    verify = verify.bind(offset)(zulu);
                    tango['filterTagIds'] = verify;
                    verify = zulu.has;
                    golf = golf.id;
                    golf = verify.bind(zulu)(golf);
                    golf = !golf;
                    tango['added'] = golf;
                    golf = {};
                    verify = _closure1_slot9;
                    verify = verify.GUILD_CHANNEL;
                    golf['page'] = verify;
                    verify = _closure1_slot10;
                    verify = verify.FORUM_CHANNEL_HEADER;
                    golf['section'] = verify;
                    options = _closure1_slot8;
                    options = options.CHANNEL_TAG;
                    golf['object'] = options;
                    tango['location'] = golf;
                    tango = report.bind(oscar)(tango);
                    entity = _closure2_slot3;
                    entity = entity.bind(mike)(zulu);
 270:
                    entity = undefined;
                    return entity;
                }
            };
            var _closure2_slot4 = entity;
            zulu = _closure1_slot11;
            update = _closure1_slot0;
            kilo = _closure1_slot2;
            entity = 9;
            entity = kilo[entity];
            entity = update.bind(tango)(entity);
            mike = entity.RedesignCompat;
            entity = {};
            golf = _closure1_slot12;
            report = 10;
            report = kilo[report];
            report = update.bind(tango)(report);
            oscar = report.BottomSheet;
            report = {};
            options = true;
            report['startExpanded'] = options;
            verify = _closure1_slot5;
            options = {};
            yankee = result.tagHeader;
            options['style'] = yankee;
            vacuum = 11;
            yankee = kilo[vacuum];
            yankee = update.bind(tango)(yankee);
            romeo = yankee.Text;
            yankee = {'variant': 'heading-md/extrabold', 'color': 'header-primary'};
            source = 12;
            output = kilo[source];
            output = update.bind(tango)(output);
            echo = output.intl;
            output = echo.string;
            kilo = kilo[source];
            kilo = update.bind(tango)(kilo);
            kilo = kilo.t;
            kilo = kilo.TdqRTk;
            kilo = output.bind(echo)(kilo);
            yankee['children'] = kilo;
            romeo = zulu.bind(tango)(romeo, yankee);
            yankee = new Array(2);
            yankee[0] = romeo;
            romeo = control.size;
            romeo = romeo > backup;
            if(!romeo) { _fun102101_ip = 410; continue _fun102101 }
 333:
            output = _closure1_slot11;
            kilo = _closure1_slot5;
            backup = {};
            echo = result.countContainer;
            backup['style'] = echo;
            update = _closure1_slot0;
            echo = _closure1_slot2;
            echo = echo[vacuum];
            echo = update.bind(tango)(echo);
            update = echo.Text;
            echo = {'variant': 'text-xs/bold', 'color': 'always-white'};
            control = control.size;
            echo['children'] = control;
            echo = output.bind(tango)(update, echo);
            backup['children'] = echo;
            romeo = output.bind(tango)(kilo, backup);
 410:
            yankee[1] = romeo;
            options['children'] = yankee;
            verify = golf.bind(tango)(verify, options);
            options = new Array(3);
            options[0] = verify;
            kilo = _closure1_slot11;
            yankee = _closure1_slot5;
            verify = {};
            romeo = result.tagsContainer;
            verify['style'] = romeo;
            backup = offset.availableTags;
            romeo = backup.map;
            offset = function(argFoo) {
                entity = argFoo;
                report = _closure1_slot11;
                zulu = _closure1_slot1;
                tango = _closure1_slot2;
                mike = 13;
                mike = tango[mike];
                tango = undefined;
                zulu = zulu.bind(tango)(mike);
                mike = {};
                mike['tag'] = entity;
                golf = _closure2_slot4;
                mike['onPress'] = golf;
                options = _closure2_slot2;
                golf = options.has;
                oscar = entity.id;
                oscar = golf.bind(options)(oscar);
                mike['selected'] = oscar;
                entity = entity.id;
                entity = report.bind(tango)(zulu, mike, entity);
                return entity;
            };
            offset = romeo.bind(backup)(offset);
            verify['children'] = offset;
            verify = kilo.bind(tango)(yankee, verify);
            options[1] = verify;
            offset = _closure1_slot12;
            verify = {};
            romeo = result.buttonContainer;
            verify['style'] = romeo;
            update = _closure1_slot0;
            output = _closure1_slot2;
            romeo = 14;
            romeo = output[romeo];
            romeo = update.bind(tango)(romeo);
            backup = romeo.Button;
            romeo = {};
            echo = output[source];
            echo = update.bind(tango)(echo);
            vacuum = echo.intl;
            control = vacuum.string;
            echo = output[source];
            echo = update.bind(tango)(echo);
            echo = echo.t;
            echo = echo.Yh05IS;
            echo = control.bind(vacuum)(echo);
            romeo['text'] = echo;
            echo = function() { // Original name: onPress
                zulu = _closure2_slot1;
                mike = zulu.getState;
                tango = mike.bind(zulu)();
                zulu = tango.setTagFilter;
                mike = _closure2_slot0;
                mike = mike.id;
                entity = _closure2_slot2;
                entity = zulu.bind(tango)(mike, entity);
                zulu = _closure1_slot1;
                mike = _closure1_slot2;
                entity = 15;
                mike = mike[entity];
                entity = undefined;
                zulu = zulu.bind(entity)(mike);
                mike = zulu.hideActionSheet;
                mike = mike.bind(zulu)();
                return entity;
            };
            romeo['onPress'] = echo;
            backup = kilo.bind(tango)(backup, romeo);
            romeo = new Array(2);
            romeo[0] = backup;
            control = _closure1_slot1;
            echo = 16;
            foxtrot = output[echo];
            backup = control.bind(tango)(foxtrot);
            foxtrot = {};
            vacuum = output[echo];
            vacuum = control.bind(tango)(vacuum);
            vacuum = vacuum.Looks;
            vacuum = vacuum.LINK;
            foxtrot['look'] = vacuum;
            vacuum = output[echo];
            vacuum = control.bind(tango)(vacuum);
            vacuum = vacuum.Sizes;
            vacuum = vacuum.MEDIUM;
            foxtrot['size'] = vacuum;
            echo = output[echo];
            echo = control.bind(tango)(echo);
            echo = echo.Colors;
            echo = echo.TRANSPARENT;
            foxtrot['color'] = echo;
            result = result.clearButtonText;
            foxtrot['textStyle'] = result;
            result = output[source];
            result = update.bind(tango)(result);
            echo = result.intl;
            result = echo.string;
            output = output[source];
            output = update.bind(tango)(output);
            output = output.t;
            output = output.PYZlEh;
            output = result.bind(echo)(output);
            foxtrot['text'] = output;
            sizing = function() { // Original name: onPress
                zulu = _closure2_slot3;
                entity = global;
                entity = entity.Set;
                mike = entity.prototype;
                mike = Object.create(mike, {constructor: {value: entity}});
                report = mike;
                entity = new report[entity](tango);
                mike = entity instanceof Object ? entity : mike;
                entity = undefined;
                mike = zulu.bind(entity)(mike);
                return entity;
            };
            foxtrot['onPress'] = sizing;
            foxtrot = kilo.bind(tango)(backup, foxtrot);
            romeo[1] = foxtrot;
            verify['children'] = romeo;
            verify = offset.bind(tango)(yankee, verify);
            options[2] = verify;
            report['children'] = options;
            report = golf.bind(tango)(oscar, report);
            entity['children'] = report;
            entity = zulu.bind(tango)(mike, entity);
            return entity;
        }
    };
    zulu['default'] = mike;
    return entity;
})();