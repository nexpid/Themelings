// app/modules/forums/native/ForumTagFilterActionSheet.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    report = argBar;
    golfie = argBaz;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    var _closure1_slot1 = golfie;
    var _closure1_slot2 = oscard;
    entity = function(argFoo) { // Original name: EmojiIcon
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            entity = argFoo;
            zuuluu = entity.emojiId;
            var _closure2_slot0 = zuuluu;
            oscard = entity.emojiName;
            entity = _closure1_slot12;
            tangon = undefined;
            report = entity.bind(tangon)();
            golfie = _closure1_slot0;
            entity = _closure1_slot2;
            zuuluu = 17;
            zuuluu = entity[zuuluu];
            verify = golfie.bind(tangon)(zuuluu);
            golfie = verify.useStateFromStores;
            offset = _closure1_slot5;
            zuuluu = new Array(1);
            zuuluu[0] = offset;
            michal = function() {
                _fun00003: for(var _fun00004_ip = 0; ; ) switch(_fun00004_ip) {
 0:
                    zuuluu = _closure2_slot0;
                    entity = null;
                    zuuluu = entity != zuuluu;
                    if(!zuuluu) { _fun00004_ip = 38; continue _fun00003 }
 16:
                    tangon = _closure1_slot5;
                    zuuluu = tangon.getUsableCustomEmojiById;
                    michal = _closure2_slot0;
                    entity = zuuluu.bind(tangon)(michal);
 38:
                    return entity;
                }
            };
            romeon = golfie.bind(verify)(zuuluu, michal);
            zuuluu = _closure1_slot11;
            michal = _closure1_slot1;
            yankee = 18;
            entity = entity[yankee];
            michal = michal.bind(tangon)(entity);
            entity = {};
            golfie = report.emoji;
            entity['style'] = golfie;
            golfie = report.textEmoji;
            entity['textEmojiStyle'] = golfie;
            report = report.imageEmoji;
            entity['fastImageStyle'] = report;
            report = null;
            verify = report != romeon;
            golfie = undefined;
            if(!verify) { _fun00002_ip = 206; continue _fun00001 }
 149:
            verify = _closure1_slot1;
            offset = _closure1_slot2;
            option = 19;
            option = offset[option];
            offset = verify.bind(tangon)(option);
            verify = offset.getEmojiURL;
            option = {};
            foxtra = romeon.id;
            option['id'] = foxtra;
            romeon = romeon.animated;
            option['animated'] = romeon;
            option['size'] = yankee;
            golfie = verify.bind(offset)(option);
 206:
            entity['src'] = golfie;
            golfie = report != oscard;
            report = '';
            if(!golfie) { _fun00002_ip = 225; continue _fun00001 }
 222:
            report = oscard;
 225:
            entity['name'] = report;
            entity = zuuluu.bind(tangon)(michal, entity);
            return entity;
        }
    };
    var _closure1_slot13 = entity;
    entity = global;
    verify = entity.Object;
    option = verify.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = option.bind(verify)(zuuluu, entity, tangon);
    entity = 0;
    tangon = oscard[entity];
    entity = undefined;
    tangon = golfie.bind(entity)(tangon);
    var _closure1_slot3 = tangon;
    tangon = 1;
    option = oscard[tangon];
    tangon = argCor;
    tangon = tangon.bind(entity)(option);
    var _closure1_slot4 = tangon;
    tangon = 2;
    tangon = oscard[tangon];
    tangon = golfie.bind(entity)(tangon);
    var _closure1_slot5 = tangon;
    tangon = 3;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    golfie = tangon.useForumChannelStore;
    var _closure1_slot6 = golfie;
    tangon = tangon.useForumChannelStoreApi;
    var _closure1_slot7 = tangon;
    tangon = 4;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    golfie = tangon.AnalyticsObjects;
    var _closure1_slot8 = golfie;
    golfie = tangon.AnalyticsPages;
    var _closure1_slot9 = golfie;
    tangon = tangon.AnalyticsSections;
    var _closure1_slot10 = tangon;
    tangon = 5;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.jsx;
    var _closure1_slot11 = tangon;
    tangon = 6;
    tangon = oscard[tangon];
    verify = report.bind(entity)(tangon);
    option = verify.createStyles;
    golfie = {};
    tangon = {'height': 18, 'width': 18, 'marginRight': 4, 'display': 'flex', 'alignItems': 'center', 'justifyContent': 'center'};
    golfie['emoji'] = tangon;
    tangon = {'height': 18, 'width': 18};
    golfie['imageEmoji'] = tangon;
    tangon = 20;
    offset = {'fontSize': 14, 'lineHeight': 20};
    golfie['textEmoji'] = offset;
    golfie = option.bind(verify)(golfie);
    var _closure1_slot12 = golfie;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/forums/native/ForumTagFilterActionSheet.tsx';
    tangon = report.bind(oscard)(tangon);
    michal = function(argFoo) { // Original name: ForumPostTagsActionSheet
        _fun00005: for(var _fun00006_ip = 0; ; ) switch(_fun00006_ip) {
 0:
            entity = argFoo;
            romeon = entity.channel;
            var _closure2_slot0 = romeon;
            michal = _closure1_slot6;
            entity = romeon.id;
            tangon = undefined;
            entity = michal.bind(tangon)(entity);
            vacuum = entity.tagFilter;
            entity = _closure1_slot7;
            entity = entity.bind(tangon)();
            var _closure2_slot1 = entity;
            zuuluu = _closure1_slot4;
            michal = zuuluu.useState;
            entity = global;
            entity = entity.Set;
            report = entity.prototype;
            report = Object.create(report, {constructor: {value: entity}});
            sequen = report;
            entity = new sequen[entity](vacuum, ctrled);
            entity = entity instanceof Object ? entity : report;
            zuuluu = michal.bind(zuuluu)(entity);
            michal = _closure1_slot3;
            entity = 2;
            michal = michal.bind(tangon)(zuuluu, entity);
            offset = 0;
            sizing = michal[offset];
            var _closure2_slot2 = sizing;
            entity = 1;
            entity = michal[entity];
            var _closure2_slot3 = entity;
            kiloes = _closure1_slot0;
            verify = _closure1_slot2;
            entity = 8;
            entity = verify[entity];
            zuuluu = kiloes.bind(tangon)(entity);
            michal = zuuluu.useUnmountEffect;
            entity = function() {
                zuuluu = _closure2_slot1;
                michal = zuuluu.getState;
                tangon = michal.bind(zuuluu)();
                zuuluu = tangon.setTagFilter;
                michal = _closure2_slot0;
                michal = michal.id;
                entity = _closure2_slot2;
                entity = zuuluu.bind(tangon)(michal, entity);
                entity = undefined;
                return entity;
            };
            entity = michal.bind(zuuluu)(entity);
            zuuluu = _closure1_slot11;
            entity = 9;
            entity = verify[entity];
            entity = kiloes.bind(tangon)(entity);
            michal = entity.ActionSheet;
            entity = {};
            report = true;
            entity['scrollable'] = report;
            golfie = _closure1_slot11;
            report = 10;
            report = verify[report];
            report = kiloes.bind(tangon)(report);
            oscard = report.BottomSheetTitleHeader;
            report = {};
            echoed = 11;
            foxtra = verify[echoed];
            foxtra = kiloes.bind(tangon)(foxtra);
            backup = foxtra.intl;
            foxtra = backup.string;
            verify = verify[echoed];
            verify = kiloes.bind(tangon)(verify);
            verify = verify.t;
            verify = verify.TdqRTk;
            verify = foxtra.bind(backup)(verify);
            report['title'] = verify;
            verify = sizing.size;
            offset = verify > offset;
            verify = ' ';
            if(!offset) { _fun00006_ip = 353; continue _fun00005 }
 287:
            foxtra = _closure1_slot0;
            offset = _closure1_slot2;
            backup = offset[echoed];
            backup = foxtra.bind(tangon)(backup);
            kiloes = backup.intl;
            backup = kiloes.formatToPlainString;
            offset = offset[echoed];
            offset = foxtra.bind(tangon)(offset);
            offset = offset.t;
            foxtra = offset./FzHJC;
            offset = {};
            sizing = sizing.size;
            offset['count'] = sizing;
            verify = backup.bind(kiloes)(foxtra, offset);
 353:
            report['subtitle'] = verify;
            kiloes = _closure1_slot11;
            verify = _closure1_slot0;
            foxtra = _closure1_slot2;
            offset = 12;
            offset = foxtra[offset];
            offset = verify.bind(tangon)(offset);
            backup = offset.PressableOpacity;
            offset = {};
            sizing = 'button';
            offset['accessibilityRole'] = sizing;
            sizing = function() { // Original name: onPress
                zuuluu = _closure2_slot3;
                entity = global;
                entity = entity.Set;
                michal = entity.prototype;
                michal = Object.create(michal, {constructor: {value: entity}});
                report = michal;
                entity = new report[entity](tangon);
                michal = entity instanceof Object ? entity : michal;
                entity = undefined;
                michal = zuuluu.bind(entity)(michal);
                return entity;
            };
            offset['onPress'] = sizing;
            sizing = foxtra[echoed];
            sizing = verify.bind(tangon)(sizing);
            result = sizing.intl;
            output = result.string;
            sizing = foxtra[echoed];
            sizing = verify.bind(tangon)(sizing);
            sizing = sizing.t;
            sizing = sizing.VkKicX;
            sizing = output.bind(result)(sizing);
            offset['accessibilityLabel'] = sizing;
            result = _closure1_slot11;
            sizing = 13;
            sizing = foxtra[sizing];
            sizing = verify.bind(tangon)(sizing);
            output = sizing.Text;
            sizing = {'variant': 'heading-md/semibold', 'color': 'control-brand-foreground'};
            update = foxtra[echoed];
            update = verify.bind(tangon)(update);
            source = update.intl;
            update = source.string;
            echoed = foxtra[echoed];
            echoed = verify.bind(tangon)(echoed);
            echoed = echoed.t;
            echoed = echoed.VkKicX;
            echoed = update.bind(source)(echoed);
            sizing['children'] = echoed;
            sizing = result.bind(tangon)(output, sizing);
            offset['children'] = sizing;
            offset = kiloes.bind(tangon)(backup, offset);
            report['leading'] = offset;
            report = golfie.bind(tangon)(oscard, report);
            entity['header'] = report;
            golfie = _closure1_slot11;
            report = 14;
            report = foxtra[report];
            report = verify.bind(tangon)(report);
            oscard = report.BottomSheetScrollView;
            report = {};
            offset = _closure1_slot11;
            option = 15;
            option = foxtra[option];
            option = verify.bind(tangon)(option);
            verify = option.TableRowGroup;
            option = {};
            foxtra = romeon.availableTags;
            romeon = foxtra.map;
            yankee = function(argFoo) {
                entity = argFoo;
                var _closure3_slot0 = entity;
                report = _closure1_slot11;
                option = _closure1_slot0;
                yankee = _closure1_slot2;
                michal = 16;
                michal = yankee[michal];
                tangon = undefined;
                michal = option.bind(tangon)(michal);
                zuuluu = michal.TableCheckboxRow;
                michal = {};
                offset = _closure1_slot11;
                verify = _closure1_slot13;
                golfie = {};
                romeon = entity.emojiId;
                golfie['emojiId'] = romeon;
                romeon = entity.emojiName;
                golfie['emojiName'] = romeon;
                golfie = offset.bind(tangon)(verify, golfie);
                michal['icon'] = golfie;
                golfie = entity.name;
                michal['label'] = golfie;
                golfie = 11;
                verify = yankee[golfie];
                verify = option.bind(tangon)(verify);
                offset = verify.intl;
                verify = offset.formatToPlainString;
                golfie = yankee[golfie];
                golfie = option.bind(tangon)(golfie);
                golfie = golfie.t;
                option = golfie.tXXD6u;
                golfie = {};
                yankee = entity.name;
                golfie['tagName'] = yankee;
                golfie = verify.bind(offset)(option, golfie);
                michal['accessibilityLabel'] = golfie;
                verify = _closure2_slot2;
                option = verify.has;
                golfie = entity.id;
                golfie = option.bind(verify)(golfie);
                michal['checked'] = golfie;
                oscard = function() { // Original name: onPress
                    _fun00007: for(var _fun00008_ip = 0; ; ) switch(_fun00008_ip) {
 0:
                        golfie = _closure3_slot0;
                        entity = null;
                        if(!(entity != golfie)) { _fun00008_ip = 274; continue _fun00007 }
 16:
                        verify = global;
                        tangon = verify.Set;
                        romeon = _closure2_slot2;
                        zuuluu = tangon.prototype;
                        zuuluu = Object.create(zuuluu, {constructor: {value: tangon}});
                        foxtra = zuuluu;
                        michal = new foxtra[tangon](romeon, yankee);
                        zuuluu = michal instanceof Object ? michal : zuuluu;
                        tangon = zuuluu.has;
                        michal = golfie.id;
                        michal = tangon.bind(zuuluu)(michal);
                        if(michal) { _fun00008_ip = 86; continue _fun00007 }
 69:
                        tangon = zuuluu.add;
                        michal = golfie.id;
                        michal = tangon.bind(zuuluu)(michal);
                        _fun00008_ip = 101; continue _fun00007;
 86:
                        tangon = zuuluu.delete;
                        michal = golfie.id;
                        michal = tangon.bind(zuuluu)(michal);
 101:
                        report = _closure1_slot0;
                        tangon = _closure1_slot2;
                        michal = 7;
                        tangon = tangon[michal];
                        michal = undefined;
                        oscard = report.bind(michal)(tangon);
                        report = oscard.trackForumTagFilterClicked;
                        tangon = {};
                        offset = _closure2_slot0;
                        yankee = offset.guild_id;
                        tangon['guildId'] = yankee;
                        offset = offset.id;
                        tangon['channelId'] = offset;
                        offset = golfie.id;
                        tangon['tagId'] = offset;
                        offset = verify.Array;
                        verify = offset.from;
                        verify = verify.bind(offset)(zuuluu);
                        tangon['filterTagIds'] = verify;
                        verify = zuuluu.has;
                        golfie = golfie.id;
                        golfie = verify.bind(zuuluu)(golfie);
                        golfie = !golfie;
                        tangon['added'] = golfie;
                        golfie = {};
                        verify = _closure1_slot9;
                        verify = verify.GUILD_CHANNEL;
                        golfie['page'] = verify;
                        verify = _closure1_slot10;
                        verify = verify.FORUM_CHANNEL_HEADER;
                        golfie['section'] = verify;
                        option = _closure1_slot8;
                        option = option.CHANNEL_TAG;
                        golfie['object'] = option;
                        tangon['location'] = golfie;
                        tangon = report.bind(oscard)(tangon);
                        entity = _closure2_slot3;
                        entity = entity.bind(michal)(zuuluu);
 274:
                        entity = undefined;
                        return entity;
                    }
                };
                michal['onPress'] = oscard;
                entity = entity.id;
                entity = report.bind(tangon)(zuuluu, michal, entity);
                return entity;
            };
            yankee = romeon.bind(foxtra)(yankee);
            option['children'] = yankee;
            option = offset.bind(tangon)(verify, option);
            report['children'] = option;
            report = golfie.bind(tangon)(oscard, report);
            entity['children'] = report;
            entity = zuuluu.bind(tangon)(michal, entity);
            return entity;
        }
    };
    zuuluu['default'] = michal;
    return entity;
})();