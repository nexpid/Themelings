// app/modules/forums/native/ForumDisplaySettingsActionSheet.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    report = argBar;
    golfie = argBaz;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    var _closure1_slot1 = oscard;
    entity = global;
    verify = entity.Object;
    option = verify.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = option.bind(verify)(zuuluu, entity, tangon);
    entity = 0;
    tangon = oscard[entity];
    entity = undefined;
    tangon = golfie.bind(entity)(tangon);
    var _closure1_slot2 = tangon;
    tangon = 1;
    option = oscard[tangon];
    tangon = argCor;
    tangon = tangon.bind(entity)(option);
    var _closure1_slot3 = tangon;
    tangon = 2;
    tangon = oscard[tangon];
    tangon = golfie.bind(entity)(tangon);
    var _closure1_slot4 = tangon;
    tangon = 3;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    golfie = tangon.useForumChannelStoreApi;
    var _closure1_slot5 = golfie;
    tangon = tangon.useForumChannelStore;
    var _closure1_slot6 = tangon;
    tangon = 4;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    golfie = tangon.jsx;
    var _closure1_slot7 = golfie;
    tangon = tangon.jsxs;
    var _closure1_slot8 = tangon;
    tangon = 19;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/forums/native/ForumDisplaySettingsActionSheet.tsx';
    tangon = report.bind(oscard)(tangon);
    michal = function(argFoo) { // Original name: ForumDisplaySettingsActionSheet
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            entity = argFoo;
            michal = entity.channelId;
            var _closure2_slot0 = michal;
            tangon = _closure1_slot0;
            oscard = _closure1_slot1;
            entity = 9;
            entity = oscard[entity];
            report = undefined;
            option = tangon.bind(report)(entity);
            golfie = option.useStateFromStores;
            entity = _closure1_slot4;
            zuuluu = new Array(1);
            zuuluu[0] = entity;
            entity = function() {
                zuuluu = _closure1_slot4;
                michal = zuuluu.getChannel;
                entity = _closure2_slot0;
                entity = michal.bind(zuuluu)(entity);
                return entity;
            };
            result = golfie.bind(option)(zuuluu, entity);
            var _closure2_slot1 = result;
            entity = _closure1_slot6;
            entity = entity.bind(report)(michal);
            echoed = entity.sortOrder;
            var _closure2_slot2 = echoed;
            ctrled = entity.layoutType;
            var _closure2_slot3 = ctrled;
            kiloes = entity.tagSetting;
            entity = _closure1_slot5;
            entity = entity.bind(report)();
            var _closure2_slot4 = entity;
            golfie = _closure1_slot3;
            entity = golfie.useState;
            entity = entity.bind(golfie)(echoed);
            verify = _closure1_slot2;
            option = 2;
            entity = verify.bind(report)(entity, option);
            zuuluu = 0;
            michal = entity[zuuluu];
            var _closure2_slot5 = michal;
            michal = 1;
            entity = entity[michal];
            var _closure2_slot6 = entity;
            entity = golfie.useState;
            entity = entity.bind(golfie)(ctrled);
            entity = verify.bind(report)(entity, option);
            offset = entity[zuuluu];
            var _closure2_slot7 = offset;
            entity = entity[michal];
            var _closure2_slot8 = entity;
            entity = golfie.useState;
            entity = entity.bind(golfie)(kiloes);
            entity = verify.bind(report)(entity, option);
            option = entity[zuuluu];
            var _closure2_slot9 = option;
            entity = entity[michal];
            var _closure2_slot10 = entity;
            michal = golfie.useRef;
            entity = null;
            sizing = michal.bind(golfie)(entity);
            var _closure2_slot11 = sizing;
            michal = golfie.useRef;
            vacuum = michal.bind(golfie)(entity);
            var _closure2_slot12 = vacuum;
            michal = golfie.useRef;
            output = michal.bind(golfie)(entity);
            var _closure2_slot13 = output;
            michal = 10;
            michal = oscard[michal];
            oscard = tangon.bind(report)(michal);
            tangon = oscard.useUnmountEffect;
            michal = function() {
                _fun00003: for(var _fun00004_ip = 0; ; ) switch(_fun00004_ip) {
 0:
                    zuuluu = _closure2_slot1;
                    michal = null;
                    if(!(michal != zuuluu)) { _fun00004_ip = 264; continue _fun00003 }
 16:
                    zuuluu = _closure2_slot2;
                    michal = _closure2_slot5;
                    if(!(zuuluu !== michal)) { _fun00004_ip = 97; continue _fun00003 }
 28:
                    tangon = _closure1_slot0;
                    zuuluu = _closure1_slot1;
                    michal = 11;
                    zuuluu = zuuluu[michal];
                    michal = undefined;
                    tangon = tangon.bind(michal)(zuuluu);
                    zuuluu = tangon.trackForumSortOrderUpdated;
                    michal = {};
                    report = _closure2_slot1;
                    oscard = report.guild_id;
                    michal['guildId'] = oscard;
                    report = report.id;
                    michal['channelId'] = report;
                    report = _closure2_slot5;
                    michal['sortOrder'] = report;
                    michal = zuuluu.bind(tangon)(michal);
 97:
                    zuuluu = _closure2_slot3;
                    michal = _closure2_slot7;
                    if(!(zuuluu !== michal)) { _fun00004_ip = 178; continue _fun00003 }
 109:
                    tangon = _closure1_slot0;
                    zuuluu = _closure1_slot1;
                    michal = 11;
                    zuuluu = zuuluu[michal];
                    michal = undefined;
                    tangon = tangon.bind(michal)(zuuluu);
                    zuuluu = tangon.trackForumLayoutUpdated;
                    michal = {};
                    report = _closure2_slot1;
                    oscard = report.guild_id;
                    michal['guildId'] = oscard;
                    report = report.id;
                    michal['channelId'] = report;
                    report = _closure2_slot7;
                    michal['forumLayout'] = report;
                    michal = zuuluu.bind(tangon)(michal);
 178:
                    zuuluu = _closure2_slot4;
                    michal = zuuluu.getState;
                    oscard = michal.bind(zuuluu)();
                    report = oscard.setLayoutType;
                    tangon = _closure2_slot0;
                    michal = _closure2_slot7;
                    michal = report.bind(oscard)(tangon, michal);
                    michal = zuuluu.getState;
                    oscard = michal.bind(zuuluu)();
                    report = oscard.setSortOrder;
                    michal = _closure2_slot5;
                    michal = report.bind(oscard)(tangon, michal);
                    michal = zuuluu.getState;
                    zuuluu = michal.bind(zuuluu)();
                    michal = zuuluu.setTagSetting;
                    entity = _closure2_slot9;
                    entity = michal.bind(zuuluu)(tangon, entity);
 264:
                    entity = undefined;
                    return entity;
                }
            };
            michal = tangon.bind(oscard)(michal);
            oscard = golfie.useCallback;
            tangon = new Array(1);
            tangon[0] = result;
            michal = function() {
                _fun00005: for(var _fun00006_ip = 0; ; ) switch(_fun00006_ip) {
 0:
                    zuuluu = _closure2_slot1;
                    michal = null;
                    if(!(michal != zuuluu)) { _fun00006_ip = 127; continue _fun00005 }
 13:
                    zuuluu = _closure2_slot11;
                    report = zuuluu.current;
                    if(!(michal != report)) { _fun00006_ip = 51; continue _fun00005 }
 26:
                    tangon = report.setValue;
                    oscard = _closure2_slot1;
                    zuuluu = oscard.getDefaultSortOrder;
                    zuuluu = zuuluu.bind(oscard)();
                    zuuluu = tangon.bind(report)(zuuluu);
 51:
                    zuuluu = _closure2_slot12;
                    report = zuuluu.current;
                    if(!(michal != report)) { _fun00006_ip = 89; continue _fun00005 }
 64:
                    tangon = report.setValue;
                    oscard = _closure2_slot1;
                    zuuluu = oscard.getDefaultLayout;
                    zuuluu = zuuluu.bind(oscard)();
                    zuuluu = tangon.bind(report)(zuuluu);
 89:
                    zuuluu = _closure2_slot13;
                    zuuluu = zuuluu.current;
                    if(!(michal != zuuluu)) { _fun00006_ip = 127; continue _fun00005 }
 102:
                    michal = zuuluu.setValue;
                    tangon = _closure2_slot1;
                    entity = tangon.getDefaultTagSetting;
                    entity = entity.bind(tangon)();
                    entity = michal.bind(zuuluu)(entity);
 127:
                    entity = undefined;
                    return entity;
                }
            };
            offset = oscard.bind(golfie)(michal, tangon);
            if(!(entity != result)) { _fun00002_ip = 1788; continue _fun00001 }
 339:
            michal = result.availableTags;
            foxtra = entity != michal;
            if(!foxtra) { _fun00002_ip = 367; continue _fun00001 }
 352:
            michal = result.availableTags;
            michal = michal.length;
            foxtra = michal > zuuluu;
 367:
            tangon = _closure1_slot7;
            config = _closure1_slot0;
            record = _closure1_slot1;
            michal = 12;
            michal = record[michal];
            michal = config.bind(report)(michal);
            zuuluu = michal.ActionSheet;
            michal = {};
            oscard = true;
            michal['scrollable'] = oscard;
            oscard = 13;
            oscard = record[oscard];
            oscard = config.bind(report)(oscard);
            golfie = oscard.BottomSheetTitleHeader;
            oscard = {};
            update = 5;
            option = record[update];
            option = config.bind(report)(option);
            yankee = option.intl;
            verify = yankee.string;
            option = record[update];
            option = config.bind(report)(option);
            option = option.t;
            option = option.xyYt8P;
            option = verify.bind(yankee)(option);
            oscard['title'] = option;
            option = 14;
            option = record[option];
            option = config.bind(report)(option);
            verify = option.PressableOpacity;
            option = {};
            yankee = 'button';
            option['accessibilityRole'] = yankee;
            option['onPress'] = offset;
            offset = record[update];
            offset = config.bind(report)(offset);
            source = offset.intl;
            yankee = source.string;
            offset = record[update];
            offset = config.bind(report)(offset);
            offset = offset.t;
            offset = offset.yBZMsb;
            offset = yankee.bind(source)(offset);
            option['accessibilityLabel'] = offset;
            offset = 15;
            offset = record[offset];
            offset = config.bind(report)(offset);
            yankee = offset.Text;
            offset = {'variant': 'heading-md/semibold', 'color': 'control-brand-foreground'};
            source = record[update];
            source = config.bind(report)(source);
            cntext = source.intl;
            sequen = cntext.string;
            source = record[update];
            source = config.bind(report)(source);
            source = source.t;
            source = source.yBZMsb;
            source = sequen.bind(cntext)(source);
            offset['children'] = source;
            offset = tangon.bind(report)(yankee, offset);
            option['children'] = offset;
            option = tangon.bind(report)(verify, option);
            oscard['leading'] = option;
            oscard = tangon.bind(report)(golfie, oscard);
            michal['header'] = oscard;
            option = _closure1_slot8;
            oscard = 16;
            oscard = record[oscard];
            oscard = config.bind(report)(oscard);
            golfie = oscard.BottomSheetScrollView;
            oscard = {};
            yankee = 17;
            verify = record[yankee];
            verify = config.bind(report)(verify);
            offset = verify.TableRadioGroup;
            verify = {};
            verify['groupRef'] = sizing;
            sizing = false;
            verify['hasIcons'] = sizing;
            verify['defaultValue'] = echoed;
            echoed = function(argFoo) { // Original name: onChange
                zuuluu = _closure2_slot6;
                entity = undefined;
                michal = argFoo;
                michal = zuuluu.bind(entity)(michal);
                return entity;
            };
            verify['onChange'] = echoed;
            echoed = record[update];
            echoed = config.bind(report)(echoed);
            sequen = echoed.intl;
            source = sequen.string;
            echoed = record[update];
            echoed = config.bind(report)(echoed);
            echoed = echoed.t;
            echoed = echoed.f8wNDg;
            echoed = source.bind(sequen)(echoed);
            verify['title'] = echoed;
            echoed = record[update];
            echoed = config.bind(report)(echoed);
            sequen = echoed.intl;
            source = sequen.string;
            echoed = record[update];
            echoed = config.bind(report)(echoed);
            echoed = echoed.t;
            echoed = echoed.f8wNDg;
            echoed = source.bind(sequen)(echoed);
            verify['accessibilityLabel'] = echoed;
            echoed = {};
            source = record[update];
            source = config.bind(report)(source);
            cntext = source.intl;
            sequen = cntext.string;
            source = record[update];
            source = config.bind(report)(source);
            source = source.t;
            source = source.jOPmcH;
            source = sequen.bind(cntext)(source);
            echoed['label'] = source;
            source = 6;
            sequen = record[source];
            sequen = config.bind(report)(sequen);
            sequen = sequen.ThreadSortOrder;
            sequen = sequen.LATEST_ACTIVITY;
            echoed['value'] = sequen;
            sequen = new Array(2);
            sequen[0] = echoed;
            echoed = {};
            cntext = record[update];
            cntext = config.bind(report)(cntext);
            target = cntext.intl;
            papara = target.string;
            cntext = record[update];
            cntext = config.bind(report)(cntext);
            cntext = cntext.t;
            cntext = cntext.UIltXV;
            cntext = papara.bind(target)(cntext);
            echoed['label'] = cntext;
            source = record[source];
            source = config.bind(report)(source);
            source = source.ThreadSortOrder;
            source = source.CREATION_DATE;
            echoed['value'] = source;
            sequen[1] = echoed;
            source = sequen.map;
            echoed = function(argFoo) {
                entity = argFoo;
                oscard = entity.label;
                report = entity.value;
                tangon = _closure1_slot7;
                michal = _closure1_slot0;
                zuuluu = _closure1_slot1;
                entity = 18;
                entity = zuuluu[entity];
                zuuluu = undefined;
                entity = michal.bind(zuuluu)(entity);
                michal = entity.TableRadioRow;
                entity = {};
                entity['label'] = oscard;
                entity['value'] = report;
                entity = tangon.bind(zuuluu)(michal, entity, report);
                return entity;
            };
            echoed = source.bind(sequen)(echoed);
            verify['children'] = echoed;
            offset = tangon.bind(report)(offset, verify);
            verify = new Array(3);
            verify[0] = offset;
            offset = result.isForumChannel;
            result = offset.bind(result)();
            offset = null;
            if(!result) { _fun00002_ip = 1406; continue _fun00001 }
 1058:
            source = _closure1_slot7;
            config = _closure1_slot0;
            record = _closure1_slot1;
            result = record[yankee];
            result = config.bind(report)(result);
            echoed = result.TableRadioGroup;
            result = {};
            result['groupRef'] = vacuum;
            result['hasIcons'] = sizing;
            result['defaultValue'] = ctrled;
            ctrled = function(argFoo) { // Original name: onChange
                zuuluu = _closure2_slot8;
                entity = undefined;
                michal = argFoo;
                michal = zuuluu.bind(entity)(michal);
                return entity;
            };
            result['onChange'] = ctrled;
            ctrled = record[update];
            ctrled = config.bind(report)(ctrled);
            sequen = ctrled.intl;
            vacuum = sequen.string;
            ctrled = record[update];
            ctrled = config.bind(report)(ctrled);
            ctrled = ctrled.t;
            ctrled = ctrled.mFMDSk;
            ctrled = vacuum.bind(sequen)(ctrled);
            result['title'] = ctrled;
            ctrled = record[update];
            ctrled = config.bind(report)(ctrled);
            sequen = ctrled.intl;
            vacuum = sequen.string;
            ctrled = record[update];
            ctrled = config.bind(report)(ctrled);
            ctrled = ctrled.t;
            ctrled = ctrled.h850Sk;
            ctrled = vacuum.bind(sequen)(ctrled);
            result['accessibilityLabel'] = ctrled;
            ctrled = {};
            vacuum = record[update];
            vacuum = config.bind(report)(vacuum);
            cntext = vacuum.intl;
            sequen = cntext.string;
            vacuum = record[update];
            vacuum = config.bind(report)(vacuum);
            vacuum = vacuum.t;
            vacuum = vacuum.NJFr+v;
            vacuum = sequen.bind(cntext)(vacuum);
            ctrled['label'] = vacuum;
            vacuum = 7;
            sequen = record[vacuum];
            sequen = config.bind(report)(sequen);
            sequen = sequen.ForumLayout;
            sequen = sequen.LIST;
            ctrled['value'] = sequen;
            sequen = new Array(2);
            sequen[0] = ctrled;
            ctrled = {};
            cntext = record[update];
            cntext = config.bind(report)(cntext);
            target = cntext.intl;
            papara = target.string;
            cntext = record[update];
            cntext = config.bind(report)(cntext);
            cntext = cntext.t;
            cntext = cntext.wKeggY;
            cntext = papara.bind(target)(cntext);
            ctrled['label'] = cntext;
            vacuum = record[vacuum];
            vacuum = config.bind(report)(vacuum);
            vacuum = vacuum.ForumLayout;
            vacuum = vacuum.GRID;
            ctrled['value'] = vacuum;
            sequen[1] = ctrled;
            vacuum = sequen.map;
            ctrled = function(argFoo) {
                entity = argFoo;
                oscard = entity.label;
                report = entity.value;
                tangon = _closure1_slot7;
                michal = _closure1_slot0;
                zuuluu = _closure1_slot1;
                entity = 18;
                entity = zuuluu[entity];
                zuuluu = undefined;
                entity = michal.bind(zuuluu)(entity);
                michal = entity.TableRadioRow;
                entity = {};
                entity['label'] = oscard;
                entity['value'] = report;
                entity = tangon.bind(zuuluu)(michal, entity, report);
                return entity;
            };
            ctrled = vacuum.bind(sequen)(ctrled);
            result['children'] = ctrled;
            offset = source.bind(report)(echoed, result);
 1406:
            verify[1] = offset;
            offset = null;
            if(!foxtra) { _fun00002_ip = 1762; continue _fun00001 }
 1418:
            foxtra = _closure1_slot7;
            result = _closure1_slot0;
            echoed = _closure1_slot1;
            yankee = echoed[yankee];
            yankee = result.bind(report)(yankee);
            romeon = yankee.TableRadioGroup;
            yankee = {};
            yankee['groupRef'] = output;
            yankee['hasIcons'] = sizing;
            yankee['defaultValue'] = kiloes;
            kiloes = function(argFoo) { // Original name: onChange
                zuuluu = _closure2_slot10;
                entity = undefined;
                michal = argFoo;
                michal = zuuluu.bind(entity)(michal);
                return entity;
            };
            yankee['onChange'] = kiloes;
            kiloes = echoed[update];
            kiloes = result.bind(report)(kiloes);
            output = kiloes.intl;
            sizing = output.string;
            kiloes = echoed[update];
            kiloes = result.bind(report)(kiloes);
            kiloes = kiloes.t;
            kiloes = kiloes.Paxaur;
            kiloes = sizing.bind(output)(kiloes);
            yankee['title'] = kiloes;
            kiloes = echoed[update];
            kiloes = result.bind(report)(kiloes);
            output = kiloes.intl;
            sizing = output.string;
            kiloes = echoed[update];
            kiloes = result.bind(report)(kiloes);
            kiloes = kiloes.t;
            kiloes = kiloes.f8wNDg;
            kiloes = sizing.bind(output)(kiloes);
            yankee['accessibilityLabel'] = kiloes;
            kiloes = {};
            sizing = echoed[update];
            sizing = result.bind(report)(sizing);
            source = sizing.intl;
            output = source.string;
            sizing = echoed[update];
            sizing = result.bind(report)(sizing);
            sizing = sizing.t;
            sizing = sizing.rQ0ctb;
            sizing = output.bind(source)(sizing);
            kiloes['label'] = sizing;
            output = 8;
            sizing = echoed[output];
            sizing = result.bind(report)(sizing);
            sizing = sizing.ThreadSearchTagSetting;
            sizing = sizing.MATCH_SOME;
            kiloes['value'] = sizing;
            sizing = new Array(2);
            sizing[0] = kiloes;
            kiloes = {};
            source = echoed[update];
            source = result.bind(report)(source);
            ctrled = source.intl;
            source = ctrled.string;
            update = echoed[update];
            update = result.bind(report)(update);
            update = update.t;
            update = update.FCXUu7;
            update = source.bind(ctrled)(update);
            kiloes['label'] = update;
            output = echoed[output];
            output = result.bind(report)(output);
            output = output.ThreadSearchTagSetting;
            output = output.MATCH_ALL;
            kiloes['value'] = output;
            sizing[1] = kiloes;
            kiloes = sizing.map;
            backup = function(argFoo) {
                entity = argFoo;
                oscard = entity.label;
                report = entity.value;
                tangon = _closure1_slot7;
                michal = _closure1_slot0;
                zuuluu = _closure1_slot1;
                entity = 18;
                entity = zuuluu[entity];
                zuuluu = undefined;
                entity = michal.bind(zuuluu)(entity);
                michal = entity.TableRadioRow;
                entity = {};
                entity['label'] = oscard;
                entity['value'] = report;
                entity = tangon.bind(zuuluu)(michal, entity, report);
                return entity;
            };
            backup = kiloes.bind(sizing)(backup);
            yankee['children'] = backup;
            offset = foxtra.bind(report)(romeon, yankee);
 1762:
            verify[2] = offset;
            oscard['children'] = verify;
            oscard = option.bind(report)(golfie, oscard);
            michal['children'] = oscard;
            michal = tangon.bind(report)(zuuluu, michal);
            return michal;
 1788:
            return entity;
        }
    };
    zuuluu['default'] = michal;
    return entity;
})();