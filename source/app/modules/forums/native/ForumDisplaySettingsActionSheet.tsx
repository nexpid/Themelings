// app/modules/forums/native/ForumDisplaySettingsActionSheet.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    report = argBar;
    yankee = argBaz;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    var _closure1_slot1 = oscard;
    entity = global;
    option = entity.Object;
    golfie = option.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(option)(zuuluu, entity, tangon);
    entity = 0;
    tangon = oscard[entity];
    entity = undefined;
    tangon = yankee.bind(entity)(tangon);
    var _closure1_slot2 = tangon;
    tangon = 1;
    golfie = oscard[tangon];
    tangon = argCor;
    tangon = tangon.bind(entity)(golfie);
    var _closure1_slot3 = tangon;
    tangon = 2;
    tangon = oscard[tangon];
    tangon = yankee.bind(entity)(tangon);
    var _closure1_slot4 = tangon;
    tangon = 3;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    golfie = tangon.useForumChannelStoreApi;
    var _closure1_slot5 = golfie;
    tangon = tangon.useForumChannelStore;
    var _closure1_slot6 = tangon;
    tangon = 4;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.TitleStyleType;
    var _closure1_slot7 = tangon;
    tangon = 5;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    golfie = tangon.jsx;
    var _closure1_slot8 = golfie;
    golfie = tangon.Fragment;
    var _closure1_slot9 = golfie;
    tangon = tangon.jsxs;
    var _closure1_slot10 = tangon;
    tangon = 6;
    tangon = oscard[tangon];
    option = report.bind(entity)(tangon);
    golfie = option.createStyles;
    tangon = {};
    verify = {};
    offset = 7;
    romeon = oscard[offset];
    romeon = yankee.bind(entity)(romeon);
    romeon = romeon.colors;
    romeon = romeon.INTERACTIVE_NORMAL;
    verify['color'] = romeon;
    tangon['sortOptionsIcon'] = verify;
    verify = {'marginLeft': 8, 'marginRight': 4};
    tangon['sortOptionsText'] = verify;
    verify = {};
    romeon = 12;
    verify['marginRight'] = romeon;
    tangon['sortOrderIcon'] = verify;
    verify = {};
    romeon = oscard[offset];
    romeon = yankee.bind(entity)(romeon);
    romeon = romeon.colors;
    romeon = romeon.TEXT_NORMAL;
    verify['color'] = romeon;
    tangon['sortOrderIconColor'] = verify;
    verify = {'marginVertical': 24, 'marginHorizontal': 16};
    tangon['saveButton'] = verify;
    verify = {'marginHorizontal': 16, 'marginTop': 4, 'marginBottom': 16};
    tangon['clearButton'] = verify;
    verify = {};
    romeon = oscard[offset];
    romeon = yankee.bind(entity)(romeon);
    romeon = romeon.colors;
    romeon = romeon.HEADER_PRIMARY;
    verify['color'] = romeon;
    tangon['clearButtonText'] = verify;
    verify = {};
    romeon = oscard[offset];
    romeon = yankee.bind(entity)(romeon);
    romeon = romeon.colors;
    romeon = romeon.HEADER_PRIMARY;
    verify['color'] = romeon;
    romeon = '700';
    verify['fontWeight'] = romeon;
    tangon['sectionTitle'] = verify;
    verify = {'paddingTop': 24, 'paddingBottom': 16};
    tangon['sectionView'] = verify;
    verify = {'backgroundColor': null, 'paddingTop': 12, 'paddingBottom': 12};
    romeon = oscard[offset];
    romeon = yankee.bind(entity)(romeon);
    romeon = romeon.colors;
    romeon = romeon.BACKGROUND_PRIMARY;
    verify['backgroundColor'] = romeon;
    tangon['radioContainer'] = verify;
    verify = {'borderRadius': null, 'borderTopWidth': 0, 'borderBottomWidth': 0, 'borderColor': null, 'backgroundColor': null, 'paddingBottom': 24};
    romeon = oscard[offset];
    romeon = yankee.bind(entity)(romeon);
    romeon = romeon.radii;
    romeon = romeon.none;
    verify['borderRadius'] = romeon;
    romeon = oscard[offset];
    romeon = yankee.bind(entity)(romeon);
    romeon = romeon.colors;
    romeon = romeon.BACKGROUND_PRIMARY;
    verify['borderColor'] = romeon;
    romeon = oscard[offset];
    romeon = yankee.bind(entity)(romeon);
    romeon = romeon.colors;
    romeon = romeon.BACKGROUND_PRIMARY;
    verify['backgroundColor'] = romeon;
    tangon['sectionBody'] = verify;
    verify = {'marginRight': 16, 'marginLeft': 16, 'marginBottom': 16, 'borderTopWidth': 1};
    offset = oscard[offset];
    offset = yankee.bind(entity)(offset);
    offset = offset.colors;
    offset = offset.BACKGROUND_MODIFIER_ACCENT;
    verify['borderColor'] = offset;
    tangon['divider'] = verify;
    tangon = golfie.bind(option)(tangon);
    var _closure1_slot11 = tangon;
    tangon = 19;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/forums/native/ForumDisplaySettingsActionSheet.tsx';
    tangon = report.bind(oscard)(tangon);
    michal = function(argFoo) { // Original name: ForumDisplaySettingsActionSheet
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            entity = argFoo;
            michal = entity.channelId;
            var _closure2_slot0 = michal;
            entity = entity.onClose;
            var _closure2_slot1 = entity;
            entity = _closure1_slot11;
            report = undefined;
            sequen = entity.bind(report)();
            var _closure2_slot2 = sequen;
            zuuluu = _closure1_slot0;
            tangon = _closure1_slot1;
            entity = 11;
            entity = tangon[entity];
            oscard = zuuluu.bind(report)(entity);
            tangon = oscard.useStateFromStores;
            entity = _closure1_slot4;
            zuuluu = new Array(1);
            zuuluu[0] = entity;
            entity = function() {
                zuuluu = _closure1_slot4;
                michal = zuuluu.getChannel;
                entity = _closure2_slot0;
                entity = michal.bind(zuuluu)(entity);
                return entity;
            };
            yankee = tangon.bind(oscard)(zuuluu, entity);
            var _closure2_slot3 = yankee;
            entity = _closure1_slot6;
            entity = entity.bind(report)(michal);
            michal = entity.sortOrder;
            var _closure2_slot4 = michal;
            option = entity.layoutType;
            var _closure2_slot5 = option;
            entity = _closure1_slot5;
            entity = entity.bind(report)();
            var _closure2_slot6 = entity;
            tangon = _closure1_slot3;
            entity = tangon.useState;
            entity = entity.bind(tangon)(michal);
            golfie = _closure1_slot2;
            oscard = 2;
            entity = golfie.bind(report)(entity, oscard);
            zuuluu = 0;
            romeon = entity[zuuluu];
            var _closure2_slot7 = romeon;
            michal = 1;
            entity = entity[michal];
            var _closure2_slot8 = entity;
            entity = tangon.useState;
            entity = entity.bind(tangon)(option);
            entity = golfie.bind(report)(entity, oscard);
            source = entity[zuuluu];
            var _closure2_slot9 = source;
            entity = entity[michal];
            var _closure2_slot10 = entity;
            zuuluu = tangon.useMemo;
            michal = new Array(3);
            michal[0] = yankee;
            michal[1] = source;
            michal[2] = romeon;
            entity = function() {
                _fun00003: for(var _fun00004_ip = 0; ; ) switch(_fun00004_ip) {
 0:
                    zuuluu = _closure2_slot7;
                    tangon = _closure2_slot3;
                    entity = null;
                    tangon = entity == tangon;
                    entity = undefined;
                    if(tangon) { _fun00004_ip = 36; continue _fun00003 }
 22:
                    report = _closure2_slot3;
                    tangon = report.getDefaultSortOrder;
                    entity = tangon.bind(report)();
 36:
                    entity = zuuluu === entity;
                    if(!entity) { _fun00004_ip = 65; continue _fun00003 }
 43:
                    zuuluu = _closure2_slot9;
                    tangon = _closure2_slot3;
                    michal = tangon.getDefaultLayout;
                    michal = michal.bind(tangon)();
                    entity = zuuluu === michal;
 65:
                    return entity;
                }
            };
            result = zuuluu.bind(tangon)(entity, michal);
            entity = null;
            michal = entity == yankee;
            if(michal) { _fun00002_ip = 1463; continue _fun00001 }
 262:
            tangon = _closure1_slot8;
            echoed = _closure1_slot0;
            update = _closure1_slot1;
            michal = 12;
            michal = update[michal];
            michal = echoed.bind(report)(michal);
            zuuluu = michal.RedesignCompat;
            michal = {};
            option = _closure1_slot10;
            oscard = 13;
            oscard = update[oscard];
            oscard = echoed.bind(report)(oscard);
            golfie = oscard.ActionSheet;
            oscard = {};
            verify = true;
            oscard['startExpanded'] = verify;
            verify = 14;
            verify = update[verify];
            verify = echoed.bind(report)(verify);
            offset = verify.BottomSheetTitleHeader;
            verify = {};
            vacuum = 8;
            backup = update[vacuum];
            backup = echoed.bind(report)(backup);
            sizing = backup.intl;
            kiloes = sizing.string;
            backup = update[vacuum];
            backup = echoed.bind(report)(backup);
            backup = backup.t;
            backup = backup.xyYt8P;
            backup = kiloes.bind(sizing)(backup);
            verify['title'] = backup;
            verify = tangon.bind(report)(offset, verify);
            oscard['header'] = verify;
            sizing = 15;
            verify = update[sizing];
            verify = echoed.bind(report)(verify);
            offset = verify.FormRadioGroup;
            verify = {};
            ctrled = false;
            verify['hasIcons'] = ctrled;
            verify['value'] = romeon;
            romeon = update[vacuum];
            romeon = echoed.bind(report)(romeon);
            kiloes = romeon.intl;
            backup = kiloes.string;
            romeon = update[vacuum];
            romeon = echoed.bind(report)(romeon);
            romeon = romeon.t;
            romeon = romeon.f8wNDg;
            romeon = backup.bind(kiloes)(romeon);
            verify['title'] = romeon;
            romeon = update[vacuum];
            romeon = echoed.bind(report)(romeon);
            kiloes = romeon.intl;
            backup = kiloes.string;
            romeon = update[vacuum];
            romeon = echoed.bind(report)(romeon);
            romeon = romeon.t;
            romeon = romeon.f8wNDg;
            romeon = backup.bind(kiloes)(romeon);
            verify['accessibilityLabel'] = romeon;
            romeon = sequen.sectionBody;
            verify['sectionBodyStyle'] = romeon;
            romeon = sequen.sectionTitle;
            verify['titleTextStyle'] = romeon;
            romeon = sequen.sectionView;
            verify['titleViewStyle'] = romeon;
            romeon = _closure1_slot7;
            romeon = romeon.NO_BORDER_OR_MARGIN;
            verify['titleStyleType'] = romeon;
            romeon = {};
            backup = update[vacuum];
            backup = echoed.bind(report)(backup);
            config = backup.intl;
            kiloes = config.string;
            backup = update[vacuum];
            backup = echoed.bind(report)(backup);
            backup = backup.t;
            backup = backup.jOPmcH;
            backup = kiloes.bind(config)(backup);
            romeon['label'] = backup;
            backup = 9;
            kiloes = update[backup];
            kiloes = echoed.bind(report)(kiloes);
            kiloes = kiloes.ThreadSortOrder;
            kiloes = kiloes.LATEST_ACTIVITY;
            romeon['value'] = kiloes;
            kiloes = new Array(2);
            kiloes[0] = romeon;
            romeon = {};
            config = update[vacuum];
            config = echoed.bind(report)(config);
            cntext = config.intl;
            record = cntext.string;
            config = update[vacuum];
            config = echoed.bind(report)(config);
            config = config.t;
            config = config.UIltXV;
            config = record.bind(cntext)(config);
            romeon['label'] = config;
            backup = update[backup];
            backup = echoed.bind(report)(backup);
            backup = backup.ThreadSortOrder;
            backup = backup.CREATION_DATE;
            romeon['value'] = backup;
            kiloes[1] = romeon;
            backup = kiloes.map;
            romeon = function(argFoo) {
                entity = argFoo;
                option = entity.label;
                report = entity.value;
                var _closure3_slot0 = report;
                tangon = _closure1_slot8;
                michal = _closure1_slot0;
                zuuluu = _closure1_slot1;
                entity = 15;
                entity = zuuluu[entity];
                zuuluu = undefined;
                entity = michal.bind(zuuluu)(entity);
                michal = entity.FormRadioRow;
                entity = {};
                oscard = 'right';
                entity['align'] = oscard;
                verify = _closure2_slot2;
                verify = verify.radioContainer;
                entity['style'] = verify;
                entity['label'] = option;
                golfie = function() { // Original name: onPress
                    zuuluu = _closure3_slot0;
                    michal = _closure2_slot8;
                    entity = undefined;
                    michal = michal.bind(entity)(zuuluu);
                    return entity;
                };
                entity['onPress'] = golfie;
                oscard = _closure2_slot7;
                oscard = report === oscard;
                entity['selected'] = oscard;
                entity = tangon.bind(zuuluu)(michal, entity, report);
                return entity;
            };
            romeon = backup.bind(kiloes)(romeon);
            verify['children'] = romeon;
            offset = tangon.bind(report)(offset, verify);
            verify = new Array(3);
            verify[0] = offset;
            offset = yankee.isForumChannel;
            offset = offset.bind(yankee)();
            if(!offset) { _fun00002_ip = 1196; continue _fun00001 }
 801:
            backup = _closure1_slot10;
            romeon = _closure1_slot9;
            yankee = {};
            update = _closure1_slot8;
            config = _closure1_slot0;
            record = _closure1_slot1;
            kiloes = record[sizing];
            kiloes = config.bind(report)(kiloes);
            echoed = kiloes.FormDivider;
            kiloes = {};
            sequen = sequen.divider;
            kiloes['style'] = sequen;
            echoed = update.bind(report)(echoed, kiloes);
            kiloes = new Array(2);
            kiloes[0] = echoed;
            sizing = record[sizing];
            sizing = config.bind(report)(sizing);
            echoed = sizing.FormRadioGroup;
            sizing = {};
            sizing['hasIcons'] = ctrled;
            sizing['value'] = source;
            source = record[vacuum];
            source = config.bind(report)(source);
            sequen = source.intl;
            ctrled = sequen.string;
            source = record[vacuum];
            source = config.bind(report)(source);
            source = source.t;
            source = source.mFMDSk;
            source = ctrled.bind(sequen)(source);
            sizing['title'] = source;
            source = record[vacuum];
            source = config.bind(report)(source);
            sequen = source.intl;
            ctrled = sequen.string;
            source = record[vacuum];
            source = config.bind(report)(source);
            source = source.t;
            source = source.h850Sk;
            source = ctrled.bind(sequen)(source);
            sizing['accessibilityLabel'] = source;
            source = {};
            ctrled = record[vacuum];
            ctrled = config.bind(report)(ctrled);
            cntext = ctrled.intl;
            sequen = cntext.string;
            ctrled = record[vacuum];
            ctrled = config.bind(report)(ctrled);
            ctrled = ctrled.t;
            ctrled = ctrled.NJFr+v;
            ctrled = sequen.bind(cntext)(ctrled);
            source['label'] = ctrled;
            ctrled = 10;
            sequen = record[ctrled];
            sequen = config.bind(report)(sequen);
            sequen = sequen.ForumLayout;
            sequen = sequen.LIST;
            source['value'] = sequen;
            sequen = new Array(2);
            sequen[0] = source;
            source = {};
            cntext = record[vacuum];
            cntext = config.bind(report)(cntext);
            target = cntext.intl;
            papara = target.string;
            cntext = record[vacuum];
            cntext = config.bind(report)(cntext);
            cntext = cntext.t;
            cntext = cntext.wKeggY;
            cntext = papara.bind(target)(cntext);
            source['label'] = cntext;
            ctrled = record[ctrled];
            ctrled = config.bind(report)(ctrled);
            ctrled = ctrled.ForumLayout;
            ctrled = ctrled.GRID;
            source['value'] = ctrled;
            sequen[1] = source;
            ctrled = sequen.map;
            source = function(argFoo) {
                entity = argFoo;
                option = entity.label;
                report = entity.value;
                var _closure3_slot0 = report;
                tangon = _closure1_slot8;
                michal = _closure1_slot0;
                zuuluu = _closure1_slot1;
                entity = 15;
                entity = zuuluu[entity];
                zuuluu = undefined;
                entity = michal.bind(zuuluu)(entity);
                michal = entity.FormRadioRow;
                entity = {};
                oscard = 'right';
                entity['align'] = oscard;
                verify = _closure2_slot2;
                verify = verify.radioContainer;
                entity['style'] = verify;
                entity['label'] = option;
                golfie = function() { // Original name: onPress
                    zuuluu = _closure3_slot0;
                    michal = _closure2_slot10;
                    entity = undefined;
                    michal = michal.bind(entity)(zuuluu);
                    return entity;
                };
                entity['onPress'] = golfie;
                oscard = _closure2_slot9;
                oscard = report === oscard;
                entity['selected'] = oscard;
                entity = tangon.bind(zuuluu)(michal, entity, report);
                return entity;
            };
            source = ctrled.bind(sequen)(source);
            sizing['children'] = source;
            sizing = update.bind(report)(echoed, sizing);
            kiloes[1] = sizing;
            yankee['children'] = kiloes;
            offset = backup.bind(report)(romeon, yankee);
 1196:
            verify[1] = offset;
            romeon = _closure1_slot10;
            ctrled = _closure1_slot0;
            echoed = _closure1_slot1;
            offset = 16;
            offset = echoed[offset];
            offset = ctrled.bind(report)(offset);
            yankee = offset.Stack;
            offset = {};
            sizing = _closure1_slot8;
            backup = 17;
            foxtra = echoed[backup];
            foxtra = ctrled.bind(report)(foxtra);
            kiloes = foxtra.Button;
            foxtra = {};
            update = echoed[vacuum];
            update = ctrled.bind(report)(update);
            sequen = update.intl;
            source = sequen.string;
            update = echoed[vacuum];
            update = ctrled.bind(report)(update);
            update = update.t;
            update = update.NLADIy;
            update = source.bind(sequen)(update);
            foxtra['text'] = update;
            update = function() { // Original name: onPress
                _fun00005: for(var _fun00006_ip = 0; ; ) switch(_fun00006_ip) {
 0:
                    zuuluu = _closure2_slot4;
                    michal = _closure2_slot7;
                    if(!(zuuluu !== michal)) { _fun00006_ip = 84; continue _fun00005 }
 15:
                    tangon = _closure1_slot0;
                    zuuluu = _closure1_slot1;
                    michal = 18;
                    zuuluu = zuuluu[michal];
                    michal = undefined;
                    tangon = tangon.bind(michal)(zuuluu);
                    zuuluu = tangon.trackForumSortOrderUpdated;
                    michal = {};
                    report = _closure2_slot3;
                    oscard = report.guild_id;
                    michal['guildId'] = oscard;
                    report = report.id;
                    michal['channelId'] = report;
                    report = _closure2_slot7;
                    michal['sortOrder'] = report;
                    michal = zuuluu.bind(tangon)(michal);
 84:
                    zuuluu = _closure2_slot5;
                    michal = _closure2_slot9;
                    if(!(zuuluu !== michal)) { _fun00006_ip = 165; continue _fun00005 }
 96:
                    tangon = _closure1_slot0;
                    zuuluu = _closure1_slot1;
                    michal = 18;
                    zuuluu = zuuluu[michal];
                    michal = undefined;
                    tangon = tangon.bind(michal)(zuuluu);
                    zuuluu = tangon.trackForumLayoutUpdated;
                    michal = {};
                    report = _closure2_slot3;
                    oscard = report.guild_id;
                    michal['guildId'] = oscard;
                    report = report.id;
                    michal['channelId'] = report;
                    report = _closure2_slot9;
                    michal['forumLayout'] = report;
                    michal = zuuluu.bind(tangon)(michal);
 165:
                    zuuluu = _closure2_slot6;
                    michal = zuuluu.getState;
                    oscard = michal.bind(zuuluu)();
                    tangon = oscard.setLayoutType;
                    report = _closure2_slot0;
                    michal = _closure2_slot9;
                    michal = tangon.bind(oscard)(report, michal);
                    michal = zuuluu.getState;
                    tangon = michal.bind(zuuluu)();
                    zuuluu = tangon.setSortOrder;
                    michal = _closure2_slot7;
                    michal = zuuluu.bind(tangon)(report, michal);
                    michal = _closure2_slot1;
                    entity = undefined;
                    michal = michal.bind(entity)();
                    return entity;
                }
            };
            foxtra['onPress'] = update;
            kiloes = sizing.bind(report)(kiloes, foxtra);
            foxtra = new Array(2);
            foxtra[0] = kiloes;
            backup = echoed[backup];
            backup = ctrled.bind(report)(backup);
            kiloes = backup.Button;
            backup = {};
            update = 'tertiary';
            backup['variant'] = update;
            update = echoed[vacuum];
            update = ctrled.bind(report)(update);
            source = update.intl;
            update = source.string;
            echoed = echoed[vacuum];
            echoed = ctrled.bind(report)(echoed);
            echoed = echoed.t;
            echoed = echoed.3b//lJ;
            echoed = update.bind(source)(echoed);
            backup['text'] = echoed;
            backup['disabled'] = result;
            output = function() { // Original name: onPress
                report = _closure2_slot10;
                tangon = _closure2_slot3;
                entity = tangon.getDefaultLayout;
                zuuluu = entity.bind(tangon)();
                entity = undefined;
                zuuluu = report.bind(entity)(zuuluu);
                zuuluu = _closure2_slot8;
                michal = tangon.getDefaultSortOrder;
                michal = michal.bind(tangon)();
                michal = zuuluu.bind(entity)(michal);
                return entity;
            };
            backup['onPress'] = output;
            backup = sizing.bind(report)(kiloes, backup);
            foxtra[1] = backup;
            offset['children'] = foxtra;
            offset = romeon.bind(report)(yankee, offset);
            verify[2] = offset;
            oscard['children'] = verify;
            oscard = option.bind(report)(golfie, oscard);
            michal['children'] = oscard;
            entity = tangon.bind(report)(zuuluu, michal);
 1463:
            return entity;
        }
    };
    zuuluu['default'] = michal;
    return entity;
})();