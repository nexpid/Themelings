// app/modules/forums/native/posts/list/ForumPostListBody.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    report = argBar;
    yankee = argBaz;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    var _closure1_slot1 = yankee;
    var _closure1_slot2 = oscard;
    entity = global;
    option = entity.Object;
    golfie = option.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(option)(zuuluu, entity, tangon);
    entity = 0;
    golfie = oscard[entity];
    tangon = argCor;
    entity = undefined;
    tangon = tangon.bind(entity)(golfie);
    romeon = 1;
    tangon = oscard[romeon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.View;
    var _closure1_slot3 = tangon;
    tangon = 2;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.ForumTimestampFormats;
    var _closure1_slot4 = tangon;
    tangon = 3;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.Fonts;
    golfie = 4;
    golfie = oscard[golfie];
    golfie = report.bind(entity)(golfie);
    option = golfie.jsx;
    var _closure1_slot5 = option;
    golfie = golfie.jsxs;
    var _closure1_slot6 = golfie;
    golfie = 5;
    golfie = oscard[golfie];
    verify = report.bind(entity)(golfie);
    option = verify.createStyles;
    golfie = {};
    offset = {'display': 'flex', 'flexDirection': 'row', 'alignItems': 'flex-start'};
    golfie['body'] = offset;
    offset = {};
    offset['flex'] = romeon;
    golfie['contentContainer'] = offset;
    offset = {};
    romeon = 6;
    romeon = oscard[romeon];
    foxtra = yankee.bind(entity)(romeon);
    romeon = tangon.PRIMARY_SEMIBOLD;
    tangon = 7;
    tangon = oscard[tangon];
    tangon = yankee.bind(entity)(tangon);
    tangon = tangon.colors;
    yankee = tangon.HEADER_PRIMARY;
    tangon = 14;
    kiloes = foxtra.bind(entity)(romeon, yankee, tangon);
    sizing = offset;
    yankee = copyDataProperties(sizing, kiloes);
    golfie['authorName'] = offset;
    offset = {};
    yankee = 'italic';
    offset['fontStyle'] = yankee;
    golfie['contentBlocked'] = offset;
    offset = {};
    yankee = 12;
    offset['marginLeft'] = yankee;
    golfie['thumbnailContainer'] = offset;
    offset = {'flexDirection': 'row', 'alignItems': 'center', 'marginBottom': 6};
    golfie['details'] = offset;
    offset = {};
    yankee = 8;
    offset['marginEnd'] = yankee;
    golfie['newTagContainer'] = offset;
    golfie = option.bind(verify)(golfie);
    var _closure1_slot7 = golfie;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/forums/native/posts/list/ForumPostListBody.tsx';
    tangon = report.bind(oscard)(tangon);
    michal = function(argFoo) { // Original name: ForumPostListBody
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            entity = argFoo;
            oscard = entity.containerStyle;
            sizing = entity.thread;
            romeon = entity.firstMessage;
            output = entity.hasUnreads;
            verify = entity.isNew;
            result = entity.firstMessageLoaded;
            echoed = entity.messageContent;
            kiloes = entity.media;
            backup = entity.isEmbed;
            foxtra = entity.isLocalDeviceMedia;
            entity = _closure1_slot7;
            tangon = undefined;
            offset = entity.bind(tangon)();
            zuuluu = _closure1_slot6;
            michal = _closure1_slot3;
            entity = {};
            option = offset.body;
            report = new Array(2);
            report[0] = option;
            report[1] = oscard;
            entity['style'] = report;
            report = {};
            oscard = offset.contentContainer;
            report['style'] = oscard;
            oscard = {};
            option = offset.details;
            oscard['style'] = option;
            if(!verify) { _fun00002_ip = 177; continue _fun00001 }
 134:
            update = _closure1_slot5;
            yankee = _closure1_slot1;
            source = _closure1_slot2;
            option = 8;
            option = source[option];
            yankee = yankee.bind(tangon)(option);
            option = {};
            source = offset.newTagContainer;
            option['containerStyle'] = source;
            verify = update.bind(tangon)(yankee, option);
 177:
            option = new Array(3);
            option[0] = verify;
            yankee = _closure1_slot5;
            source = _closure1_slot0;
            update = _closure1_slot2;
            verify = 9;
            verify = update[verify];
            verify = source.bind(tangon)(verify);
            source = verify.ForumPostAuthor;
            verify = {};
            verify['thread'] = sizing;
            verify['hasUnreads'] = output;
            verify = yankee.bind(tangon)(source, verify);
            option[1] = verify;
            verify = _closure1_slot1;
            source = 10;
            source = update[source];
            ctrled = verify.bind(tangon)(source);
            source = {};
            source['thread'] = sizing;
            source['hasUnreads'] = output;
            vacuum = _closure1_slot4;
            vacuum = vacuum.POSTED_DURATION_AGO;
            source['format'] = vacuum;
            source = yankee.bind(tangon)(ctrled, source);
            option[2] = source;
            oscard['children'] = option;
            option = zuuluu.bind(tangon)(michal, oscard);
            oscard = new Array(3);
            oscard[0] = option;
            option = 11;
            option = update[option];
            source = verify.bind(tangon)(option);
            option = {'title': null, 'lineClamp': 2, 'ellipsizeMode': 'tail'};
            ctrled = sizing.name;
            option['title'] = ctrled;
            option['hasUnreads'] = output;
            option = yankee.bind(tangon)(source, option);
            oscard[1] = option;
            option = 12;
            option = update[option];
            verify = verify.bind(tangon)(option);
            option = {};
            option['messageContent'] = echoed;
            option['message'] = romeon;
            echoed = false;
            option['isMessageDeleted'] = echoed;
            option['messageLoaded'] = result;
            option['hasUnreads'] = output;
            option = yankee.bind(tangon)(verify, option);
            oscard[2] = option;
            report['children'] = oscard;
            oscard = zuuluu.bind(tangon)(michal, report);
            report = new Array(2);
            report[0] = oscard;
            yankee = null;
            if(!(yankee != romeon)) { _fun00002_ip = 444; continue _fun00001 }
 433:
            option = romeon.blocked;
            oscard = null;
            if(option) { _fun00002_ip = 540; continue _fun00001 }
 444:
            option = yankee == kiloes;
            oscard = null;
            if(option) { _fun00002_ip = 540; continue _fun00001 }
 453:
            verify = _closure1_slot5;
            option = _closure1_slot0;
            output = _closure1_slot2;
            golfie = 13;
            golfie = output[golfie];
            golfie = option.bind(tangon)(golfie);
            option = golfie.ForumPostMediaThumbnail;
            golfie = {};
            golfie['channel'] = sizing;
            golfie['media'] = kiloes;
            golfie['isEmbed'] = backup;
            golfie['isLocalDeviceMedia'] = foxtra;
            foxtra = yankee == romeon;
            yankee = undefined;
            if(foxtra) { _fun00002_ip = 518; continue _fun00001 }
 513:
            yankee = romeon.id;
 518:
            golfie['firstMessageId'] = yankee;
            offset = offset.thumbnailContainer;
            golfie['containerStyle'] = offset;
            oscard = verify.bind(tangon)(option, golfie);
 540:
            report[1] = oscard;
            entity['children'] = report;
            entity = zuuluu.bind(tangon)(michal, entity);
            return entity;
        }
    };
    zuuluu['default'] = michal;
    return entity;
})();