// app/modules/forums/native/posts/ForumPostTypingUsers.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    report = argBar;
    yankee = argBaz;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    var _closure1_slot1 = yankee;
    var _closure1_slot2 = oscard;
    entity = global;
    option = entity.Object;
    golfie = option.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(option)(zuuluu, entity, tangon);
    offset = 0;
    golfie = oscard[offset];
    tangon = argCor;
    entity = undefined;
    tangon = tangon.bind(entity)(golfie);
    romeon = 1;
    tangon = oscard[romeon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.View;
    var _closure1_slot3 = tangon;
    tangon = 2;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    golfie = tangon.jsx;
    var _closure1_slot4 = golfie;
    tangon = tangon.jsxs;
    var _closure1_slot5 = tangon;
    tangon = 3;
    tangon = oscard[tangon];
    option = report.bind(entity)(tangon);
    golfie = option.createStyles;
    tangon = {};
    verify = {'display': 'flex', 'flexDirection': 'row', 'alignItems': 'center'};
    tangon['container'] = verify;
    verify = {};
    verify['marginEnd'] = offset;
    tangon['lastTypingUser'] = verify;
    verify = {'marginEnd': 4294967288, 'borderWidth': 2};
    offset = 4;
    foxtra = oscard[offset];
    foxtra = yankee.bind(entity)(foxtra);
    foxtra = foxtra.radii;
    foxtra = foxtra.round;
    verify['borderRadius'] = foxtra;
    tangon['typingUser'] = verify;
    verify = {'backgroundColor': null, 'paddingVertical': null, 'paddingLeft': 4, 'borderRadius': null, 'marginStart': 4294967288, 'borderWidth': 4, 'marginEnd': 8, 'marginTop': 4294967295, 'marginBottom': 4294967295};
    foxtra = oscard[offset];
    foxtra = yankee.bind(entity)(foxtra);
    foxtra = foxtra.colors;
    foxtra = foxtra.BACKGROUND_TERTIARY;
    verify['backgroundColor'] = foxtra;
    foxtra = oscard[offset];
    foxtra = yankee.bind(entity)(foxtra);
    foxtra = foxtra.spacing;
    foxtra = foxtra.PX_4;
    verify['paddingVertical'] = foxtra;
    foxtra = oscard[offset];
    foxtra = yankee.bind(entity)(foxtra);
    foxtra = foxtra.radii;
    foxtra = foxtra.lg;
    verify['borderRadius'] = foxtra;
    tangon['dots'] = verify;
    verify = {};
    verify['flexShrink'] = romeon;
    tangon['typingText'] = verify;
    verify = {};
    romeon = oscard[offset];
    romeon = yankee.bind(entity)(romeon);
    romeon = romeon.colors;
    romeon = romeon.CARD_PRIMARY_BG;
    verify['color'] = romeon;
    tangon['borderColor'] = verify;
    verify = {};
    offset = oscard[offset];
    offset = yankee.bind(entity)(offset);
    offset = offset.colors;
    offset = offset.CARD_PRIMARY_PRESSED_BG;
    verify['color'] = offset;
    tangon['borderColorPressed'] = verify;
    tangon = golfie.bind(option)(tangon);
    var _closure1_slot6 = tangon;
    tangon = {};
    golfie = 'function ForumPostTypingUsersTsx1(){const{forumPostPressedIn,borderColorPressed,borderColor}=this.__closure;return{borderColor:forumPostPressedIn.value?borderColorPressed:borderColor};}';
    tangon['code'] = golfie;
    var _closure1_slot7 = tangon;
    tangon = 12;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/forums/native/posts/ForumPostTypingUsers.tsx';
    tangon = report.bind(oscard)(tangon);
    michal = function(argFoo) { // Original name: ForumPostTypingUsers
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            entity = argFoo;
            michal = entity.thread;
            offset = entity.typingUserIds;
            entity = entity.hasUnreads;
            report = undefined;
            var _closure2_slot6 = report;
            zuuluu = _closure1_slot6;
            yankee = zuuluu.bind(report)();
            var _closure2_slot0 = yankee;
            tangon = _closure1_slot0;
            zuuluu = _closure1_slot2;
            option = 5;
            option = zuuluu[option];
            verify = tangon.bind(report)(option);
            option = verify.useFacepileUsers;
            foxtra = option.bind(verify)(michal, offset);
            var _closure2_slot1 = foxtra;
            verify = _closure1_slot1;
            option = 6;
            option = zuuluu[option];
            verify = verify.bind(report)(option);
            option = {};
            romeon = michal.id;
            option['channelId'] = romeon;
            romeon = michal.getGuildId;
            romeon = romeon.bind(michal)();
            option['guildId'] = romeon;
            option['typingUserIds'] = offset;
            offset = verify.bind(report)(option);
            option = yankee.borderColor;
            backup = option.color;
            var _closure2_slot2 = backup;
            option = yankee.borderColorPressed;
            kiloes = option.color;
            var _closure2_slot3 = kiloes;
            option = 7;
            option = zuuluu[option];
            verify = tangon.bind(report)(option);
            option = verify.useForumPostContainerPressedIn;
            sizing = option.bind(verify)();
            var _closure2_slot4 = sizing;
            option = 8;
            zuuluu = zuuluu[option];
            verify = tangon.bind(report)(zuuluu);
            tangon = verify.useAnimatedStyle;
            zuuluu = function() { // Original name: P
                _fun00003: for(var _fun00004_ip = 0; ; ) switch(_fun00004_ip) {
 0:
                    entity = {};
                    michal = _closure2_slot4;
                    michal = michal.value;
                    if(michal) { _fun00004_ip = 23; continue _fun00003 }
 17:
                    michal = _closure2_slot2;
                    _fun00004_ip = 27; continue _fun00003;
 23:
                    michal = _closure2_slot3;
 27:
                    entity['borderColor'] = michal;
                    return entity;
                }
            };
            romeon = {};
            romeon['forumPostPressedIn'] = sizing;
            romeon['borderColorPressed'] = kiloes;
            romeon['borderColor'] = backup;
            zuuluu['__closure'] = romeon;
            romeon = 6320844933544.0;
            zuuluu['__workletHash'] = romeon;
            romeon = _closure1_slot7;
            zuuluu['__initData'] = romeon;
            output = tangon.bind(verify)(zuuluu);
            var _closure2_slot5 = output;
            romeon = 'text-muted';
            if(!entity) { _fun00002_ip = 287; continue _fun00001 }
 281:
            romeon = 'text-normal';
 287:
            entity = michal.getGuildId;
            entity = entity.bind(michal)();
            _closure2_slot6 = entity;
            tangon = null;
            michal = tangon == entity;
            entity = null;
            if(michal) { _fun00002_ip = 528; continue _fun00001 }
 315:
            zuuluu = foxtra.length;
            michal = 0;
            entity = null;
            if(!(michal !== zuuluu)) { _fun00002_ip = 528; continue _fun00001 }
 331:
            tangon = _closure1_slot5;
            zuuluu = _closure1_slot3;
            michal = {};
            verify = yankee.container;
            michal['style'] = verify;
            verify = foxtra.map;
            oscard = function(argFoo, argBar) {
                _fun00005: for(var _fun00006_ip = 0; ; ) switch(_fun00006_ip) {
 0:
                    entity = argFoo;
                    report = _closure1_slot4;
                    zuuluu = _closure1_slot1;
                    tangon = _closure1_slot2;
                    michal = 8;
                    michal = tangon[michal];
                    tangon = undefined;
                    michal = zuuluu.bind(tangon)(michal);
                    zuuluu = michal.View;
                    michal = {};
                    oscard = _closure2_slot0;
                    golfie = oscard.typingUser;
                    oscard = new Array(3);
                    oscard[0] = golfie;
                    golfie = _closure2_slot5;
                    oscard[1] = golfie;
                    golfie = _closure2_slot1;
                    option = golfie.length;
                    golfie = 1;
                    option = option - golfie;
                    golfie = argBar;
                    golfie = golfie === option;
                    if(!golfie) { _fun00006_ip = 104; continue _fun00005 }
 94:
                    option = _closure2_slot0;
                    golfie = option.lastTypingUser;
 104:
                    oscard[2] = golfie;
                    michal['style'] = oscard;
                    option = _closure1_slot4;
                    golfie = _closure1_slot1;
                    yankee = _closure1_slot2;
                    verify = 9;
                    oscard = yankee[verify];
                    golfie = golfie.bind(tangon)(oscard);
                    oscard = {};
                    foxtra = entity.getAvatarSource;
                    romeon = _closure2_slot6;
                    romeon = foxtra.bind(entity)(romeon);
                    oscard['source'] = romeon;
                    offset = _closure1_slot0;
                    verify = yankee[verify];
                    verify = offset.bind(tangon)(verify);
                    verify = verify.AvatarSizes;
                    verify = verify.SIZE_16;
                    oscard['size'] = verify;
                    oscard = option.bind(tangon)(golfie, oscard);
                    michal['children'] = oscard;
                    entity = entity.id;
                    entity = report.bind(tangon)(zuuluu, michal, entity);
                    return entity;
                }
            };
            verify = verify.bind(foxtra)(oscard);
            oscard = new Array(3);
            oscard[0] = verify;
            verify = _closure1_slot4;
            sizing = _closure1_slot1;
            foxtra = _closure1_slot2;
            option = foxtra[option];
            option = sizing.bind(report)(option);
            backup = option.View;
            option = {};
            result = yankee.dots;
            kiloes = new Array(2);
            kiloes[0] = result;
            kiloes[1] = output;
            option['style'] = kiloes;
            kiloes = 10;
            kiloes = foxtra[kiloes];
            sizing = sizing.bind(report)(kiloes);
            kiloes = {};
            kiloes = verify.bind(report)(sizing, kiloes);
            option['children'] = kiloes;
            option = verify.bind(report)(backup, option);
            oscard[1] = option;
            option = _closure1_slot0;
            golfie = 11;
            golfie = foxtra[golfie];
            golfie = option.bind(report)(golfie);
            option = golfie.Text;
            golfie = {};
            foxtra = 'text-sm/semibold';
            golfie['variant'] = foxtra;
            golfie['color'] = romeon;
            yankee = yankee.typingText;
            golfie['style'] = yankee;
            golfie['children'] = offset;
            golfie = verify.bind(report)(option, golfie);
            oscard[2] = golfie;
            michal['children'] = oscard;
            entity = tangon.bind(report)(zuuluu, michal);
 528:
            return entity;
        }
    };
    zuuluu['default'] = michal;
    return entity;
})();