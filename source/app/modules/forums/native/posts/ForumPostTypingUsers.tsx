// app/modules/forums/native/posts/ForumPostTypingUsers.tsx
export default (function(argFoo, argBar, argBaz, argCorge, _, argFred, argPlugh) {
    report = argBar;
    yankee = argBaz;
    zulu = argFred;
    oscar = argPlugh;
    var _closure1_slot0 = report;
    var _closure1_slot1 = yankee;
    var _closure1_slot2 = oscar;
    entity = global;
    options = entity.Object;
    golf = options.defineProperty;
    tango = {};
    entity = true;
    tango['value'] = entity;
    entity = '__esModule';
    entity = golf.bind(options)(zulu, entity, tango);
    offset = 0;
    golf = oscar[offset];
    tango = argCorge;
    entity = undefined;
    tango = tango.bind(entity)(golf);
    romeo = 1;
    tango = oscar[romeo];
    tango = report.bind(entity)(tango);
    tango = tango.View;
    var _closure1_slot3 = tango;
    tango = 2;
    golf = oscar[tango];
    golf = report.bind(entity)(golf);
    golf = golf.jsx;
    var _closure1_slot4 = golf;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.jsxs;
    var _closure1_slot5 = tango;
    tango = 3;
    tango = oscar[tango];
    options = report.bind(entity)(tango);
    golf = options.createStyles;
    tango = {};
    verify = {'display': 'flex', 'flexDirection': 'row', 'alignItems': 'center'};
    tango['container'] = verify;
    verify = {};
    verify['marginEnd'] = offset;
    tango['lastTypingUser'] = verify;
    verify = {'marginEnd': 4294967288, 'borderWidth': 2};
    offset = 4;
    foxtrot = oscar[offset];
    foxtrot = yankee.bind(entity)(foxtrot);
    foxtrot = foxtrot.radii;
    foxtrot = foxtrot.round;
    verify['borderRadius'] = foxtrot;
    tango['typingUser'] = verify;
    verify = {'backgroundColor': null, 'paddingVertical': null, 'paddingLeft': 4, 'borderRadius': null, 'marginStart': 4294967288, 'borderWidth': 4, 'marginEnd': 8, 'marginTop': 4294967295, 'marginBottom': 4294967295};
    foxtrot = oscar[offset];
    foxtrot = yankee.bind(entity)(foxtrot);
    foxtrot = foxtrot.colors;
    foxtrot = foxtrot.BACKGROUND_TERTIARY;
    verify['backgroundColor'] = foxtrot;
    foxtrot = oscar[offset];
    foxtrot = yankee.bind(entity)(foxtrot);
    foxtrot = foxtrot.spacing;
    foxtrot = foxtrot.PX_4;
    verify['paddingVertical'] = foxtrot;
    foxtrot = oscar[offset];
    foxtrot = yankee.bind(entity)(foxtrot);
    foxtrot = foxtrot.radii;
    foxtrot = foxtrot.lg;
    verify['borderRadius'] = foxtrot;
    tango['dots'] = verify;
    verify = {};
    verify['flexShrink'] = romeo;
    tango['typingText'] = verify;
    verify = {};
    romeo = oscar[offset];
    romeo = yankee.bind(entity)(romeo);
    romeo = romeo.colors;
    romeo = romeo.CARD_PRIMARY_BG;
    verify['color'] = romeo;
    tango['borderColor'] = verify;
    verify = {};
    offset = oscar[offset];
    offset = yankee.bind(entity)(offset);
    offset = offset.colors;
    offset = offset.CARD_PRIMARY_PRESSED_BG;
    verify['color'] = offset;
    tango['borderColorPressed'] = verify;
    tango = golf.bind(options)(tango);
    var _closure1_slot6 = tango;
    tango = {};
    golf = 'function ForumPostTypingUsersTsx1(){const{forumPostPressedIn,borderColorPressed,borderColor}=this.__closure;return{borderColor:forumPostPressedIn.value?borderColorPressed:borderColor};}';
    tango['code'] = golf;
    var _closure1_slot7 = tango;
    tango = 12;
    tango = oscar[tango];
    oscar = report.bind(entity)(tango);
    report = oscar.fileFinishedImporting;
    tango = 'modules/forums/native/posts/ForumPostTypingUsers.tsx';
    tango = report.bind(oscar)(tango);
    mike = function(argFoo) { // Original name: ForumPostTypingUsers
        _fun100579: for(var _fun100579_ip = 0; ; ) switch(_fun100579_ip) {
 0:
            entity = argFoo;
            mike = entity.thread;
            offset = entity.typingUserIds;
            entity = entity.hasUnreads;
            report = undefined;
            var _closure2_slot6 = report;
            zulu = _closure1_slot6;
            yankee = zulu.bind(report)();
            var _closure2_slot0 = yankee;
            tango = _closure1_slot0;
            zulu = _closure1_slot2;
            options = 5;
            options = zulu[options];
            verify = tango.bind(report)(options);
            options = verify.useFacepileUsers;
            foxtrot = options.bind(verify)(mike, offset);
            var _closure2_slot1 = foxtrot;
            verify = _closure1_slot1;
            options = 6;
            options = zulu[options];
            verify = verify.bind(report)(options);
            options = {};
            romeo = mike.id;
            options['channelId'] = romeo;
            romeo = mike.getGuildId;
            romeo = romeo.bind(mike)();
            options['guildId'] = romeo;
            options['typingUserIds'] = offset;
            offset = verify.bind(report)(options);
            options = yankee.borderColor;
            backup = options.color;
            var _closure2_slot2 = backup;
            options = yankee.borderColorPressed;
            kilo = options.color;
            var _closure2_slot3 = kilo;
            options = 7;
            options = zulu[options];
            verify = tango.bind(report)(options);
            options = verify.useForumPostContainerPressedIn;
            sizing = options.bind(verify)();
            var _closure2_slot4 = sizing;
            options = 8;
            zulu = zulu[options];
            verify = tango.bind(report)(zulu);
            tango = verify.useAnimatedStyle;
            zulu = function() { // Original name: P
                _fun100580: for(var _fun100580_ip = 0; ; ) switch(_fun100580_ip) {
 0:
                    entity = {};
                    mike = _closure2_slot4;
                    mike = mike.value;
                    if(mike) { _fun100580_ip = 23; continue _fun100580 }
 17:
                    mike = _closure2_slot2;
                    _fun100580_ip = 27; continue _fun100580;
 23:
                    mike = _closure2_slot3;
 27:
                    entity['borderColor'] = mike;
                    return entity;
                }
            };
            romeo = {};
            romeo['forumPostPressedIn'] = sizing;
            romeo['borderColorPressed'] = kilo;
            romeo['borderColor'] = backup;
            zulu['__closure'] = romeo;
            romeo = 6320844933544.0;
            zulu['__workletHash'] = romeo;
            romeo = _closure1_slot7;
            zulu['__initData'] = romeo;
            output = tango.bind(verify)(zulu);
            var _closure2_slot5 = output;
            romeo = 'text-muted';
            if(!entity) { _fun100579_ip = 287; continue _fun100579 }
 281:
            romeo = 'text-normal';
 287:
            entity = mike.getGuildId;
            entity = entity.bind(mike)();
            _closure2_slot6 = entity;
            tango = null;
            mike = tango == entity;
            entity = null;
            if(mike) { _fun100579_ip = 528; continue _fun100579 }
 315:
            zulu = foxtrot.length;
            mike = 0;
            entity = null;
            if(!(mike !== zulu)) { _fun100579_ip = 528; continue _fun100579 }
 331:
            tango = _closure1_slot5;
            zulu = _closure1_slot3;
            mike = {};
            verify = yankee.container;
            mike['style'] = verify;
            verify = foxtrot.map;
            oscar = function(argFoo, argBar) {
                _fun100581: for(var _fun100581_ip = 0; ; ) switch(_fun100581_ip) {
 0:
                    entity = argFoo;
                    report = _closure1_slot4;
                    zulu = _closure1_slot1;
                    tango = _closure1_slot2;
                    mike = 8;
                    mike = tango[mike];
                    tango = undefined;
                    mike = zulu.bind(tango)(mike);
                    zulu = mike.View;
                    mike = {};
                    oscar = _closure2_slot0;
                    golf = oscar.typingUser;
                    oscar = new Array(3);
                    oscar[0] = golf;
                    golf = _closure2_slot5;
                    oscar[1] = golf;
                    golf = _closure2_slot1;
                    options = golf.length;
                    golf = 1;
                    options = options - golf;
                    golf = argBar;
                    golf = golf === options;
                    if(!golf) { _fun100581_ip = 104; continue _fun100581 }
 94:
                    options = _closure2_slot0;
                    golf = options.lastTypingUser;
 104:
                    oscar[2] = golf;
                    mike['style'] = oscar;
                    options = _closure1_slot4;
                    golf = _closure1_slot1;
                    yankee = _closure1_slot2;
                    verify = 9;
                    oscar = yankee[verify];
                    golf = golf.bind(tango)(oscar);
                    oscar = {};
                    foxtrot = entity.getAvatarSource;
                    romeo = _closure2_slot6;
                    romeo = foxtrot.bind(entity)(romeo);
                    oscar['source'] = romeo;
                    offset = _closure1_slot0;
                    verify = yankee[verify];
                    verify = offset.bind(tango)(verify);
                    verify = verify.AvatarSizes;
                    verify = verify.SIZE_16;
                    oscar['size'] = verify;
                    oscar = options.bind(tango)(golf, oscar);
                    mike['children'] = oscar;
                    entity = entity.id;
                    entity = report.bind(tango)(zulu, mike, entity);
                    return entity;
                }
            };
            verify = verify.bind(foxtrot)(oscar);
            oscar = new Array(3);
            oscar[0] = verify;
            verify = _closure1_slot4;
            sizing = _closure1_slot1;
            foxtrot = _closure1_slot2;
            options = foxtrot[options];
            options = sizing.bind(report)(options);
            backup = options.View;
            options = {};
            result = yankee.dots;
            kilo = new Array(2);
            kilo[0] = result;
            kilo[1] = output;
            options['style'] = kilo;
            kilo = 10;
            kilo = foxtrot[kilo];
            sizing = sizing.bind(report)(kilo);
            kilo = {};
            kilo = verify.bind(report)(sizing, kilo);
            options['children'] = kilo;
            options = verify.bind(report)(backup, options);
            oscar[1] = options;
            options = _closure1_slot0;
            golf = 11;
            golf = foxtrot[golf];
            golf = options.bind(report)(golf);
            options = golf.Text;
            golf = {};
            foxtrot = 'text-sm/semibold';
            golf['variant'] = foxtrot;
            golf['color'] = romeo;
            yankee = yankee.typingText;
            golf['style'] = yankee;
            golf['children'] = offset;
            golf = verify.bind(report)(options, golf);
            oscar[2] = golf;
            mike['children'] = oscar;
            entity = tango.bind(report)(zulu, mike);
 528:
            return entity;
        }
    };
    zulu['default'] = mike;
    return entity;
})();