// app/modules/avatar/native/components/RedesignAddAvatarModal.tsx
export default (function(argFoo, argBar, argBaz, argCorge, _, argFred, argPlugh) {
    report = argBar;
    yankee = argBaz;
    zulu = argFred;
    oscar = argPlugh;
    var _closure1_slot0 = report;
    var _closure1_slot1 = yankee;
    var _closure1_slot2 = oscar;
    entity = global;
    options = entity.Object;
    golf = options.defineProperty;
    tango = {};
    entity = true;
    tango['value'] = entity;
    entity = '__esModule';
    entity = golf.bind(options)(zulu, entity, tango);
    entity = 0;
    tango = oscar[entity];
    entity = undefined;
    tango = yankee.bind(entity)(tango);
    var _closure1_slot3 = tango;
    offset = 1;
    tango = oscar[offset];
    tango = yankee.bind(entity)(tango);
    var _closure1_slot4 = tango;
    foxtrot = 2;
    golf = oscar[foxtrot];
    tango = argCorge;
    tango = tango.bind(entity)(golf);
    var _closure1_slot5 = tango;
    tango = 3;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    golf = tango.View;
    var _closure1_slot6 = golf;
    tango = tango.ScrollView;
    var _closure1_slot7 = tango;
    tango = 4;
    tango = oscar[tango];
    tango = yankee.bind(entity)(tango);
    var _closure1_slot8 = tango;
    tango = 5;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.UPLOAD_MEDIUM_SIZE;
    var _closure1_slot9 = tango;
    tango = 6;
    golf = oscar[tango];
    golf = report.bind(entity)(golf);
    golf = golf.jsx;
    var _closure1_slot10 = golf;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.jsxs;
    var _closure1_slot11 = tango;
    tango = 7;
    tango = oscar[tango];
    options = report.bind(entity)(tango);
    golf = options.createStyles;
    tango = {};
    verify = {};
    verify['flex'] = offset;
    offset = 8;
    romeo = oscar[offset];
    romeo = yankee.bind(entity)(romeo);
    romeo = romeo.colors;
    romeo = romeo.BACKGROUND_PRIMARY;
    verify['backgroundColor'] = romeo;
    tango['container'] = verify;
    romeo = 'center';
    verify = {'flexGrow': 2, 'alignItems': 'center'};
    tango['contentContainer'] = verify;
    verify = {};
    verify['flexGrow'] = foxtrot;
    foxtrot = oscar[offset];
    foxtrot = yankee.bind(entity)(foxtrot);
    foxtrot = foxtrot.spacing;
    foxtrot = foxtrot.PX_24;
    verify['minHeight'] = foxtrot;
    tango['growContainer'] = verify;
    verify = {'display': 'flex', 'alignItems': 'center'};
    tango['headerContainer'] = verify;
    verify = {};
    foxtrot = '100%';
    verify['width'] = foxtrot;
    tango['buttonContainer'] = verify;
    verify = {};
    foxtrot = oscar[offset];
    foxtrot = yankee.bind(entity)(foxtrot);
    foxtrot = foxtrot.spacing;
    foxtrot = foxtrot.PX_8;
    verify['marginBottom'] = foxtrot;
    verify['textAlign'] = romeo;
    tango['title'] = verify;
    verify = {};
    verify['textAlign'] = romeo;
    tango['subtitle'] = verify;
    verify = {};
    verify['alignSelf'] = romeo;
    offset = oscar[offset];
    offset = yankee.bind(entity)(offset);
    offset = offset.spacing;
    offset = offset.PX_24;
    verify['paddingTop'] = offset;
    tango['errorContainer'] = verify;
    tango = golf.bind(options)(tango);
    var _closure1_slot12 = tango;
    tango = 20;
    tango = oscar[tango];
    oscar = report.bind(entity)(tango);
    report = oscar.fileFinishedImporting;
    tango = 'modules/avatar/native/components/RedesignAddAvatarModal.tsx';
    tango = report.bind(oscar)(tango);
    mike = function(argFoo) { // Original name: RedesignAddAvatarModal
        _fun124307: for(var _fun124307_ip = 0; ; ) switch(_fun124307_ip) {
 0:
            entity = argFoo;
            entity = entity.route;
            entity = entity.params;
            entity = entity.onComplete;
            var _closure2_slot0 = entity;
            tango = undefined;
            var _closure2_slot1 = tango;
            var _closure2_slot3 = tango;
            var _closure2_slot4 = tango;
            entity = function() { // Original name: _handleSelectAvatar
                tango = undefined;
                entity = undefined;
                zulu = _closure1_slot3;
                mike = function* () {
                    entity = function* () { // Original name: ?anon_0_
                        _fun124310: for(var _fun124310_ip = 0; ; ) switch(_fun124310_ip) {
 0:
                            StartGenerator();
                            ResumeGenerator(result_out_reg=0, return_bool_out_reg=1);
                            if(mike) { _fun124310_ip = 177; continue _fun124310 }
 10:
                            report = _closure2_slot1;
                            zulu = undefined;
                            mike = false;
                            mike = report.bind(zulu)(mike);
                            oscar = _closure1_slot0;
                            mike = _closure1_slot2;
                            offset = 13;
                            mike = mike[offset];
                            golf = oscar.bind(zulu)(mike);
                            oscar = golf.openImagePicker;
                            mike = _closure1_slot9;
                            mike = oscar.bind(golf)(mike);
                            SaveGenerator(address=68);
 66:
                            return mike;
 68:
                            ResumeGenerator(result_out_reg=1, return_bool_out_reg=5);
                            if(oscar) { _fun124310_ip = 174; continue _fun124310 }
 74:
                            golf = null;
                            if(!(golf != mike)) { _fun124310_ip = 118; continue _fun124310 }
 80:
                            options = mike.match;
                            verify = _closure1_slot0;
                            oscar = _closure1_slot2;
                            oscar = oscar[offset];
                            oscar = verify.bind(zulu)(oscar);
                            oscar = oscar.base64GIFRegex;
                            oscar = options.bind(mike)(oscar);
                            if(!(golf == oscar)) { _fun124310_ip = 160; continue _fun124310 }
 118:
                            oscar = _closure1_slot0;
                            golf = _closure1_slot2;
                            report = 14;
                            report = golf[report];
                            oscar = oscar.bind(zulu)(report);
                            report = oscar.setPendingAvatar;
                            report = report.bind(oscar)(mike);
                            report = _closure2_slot3;
                            report = report.bind(zulu)(zulu);
                            _fun124310_ip = 171; continue _fun124310;
 160:
                            report = _closure2_slot1;
                            tango = true;
                            tango = report.bind(zulu)(tango);
 171:
                            return zulu;
 174:
                            return mike;
 177:
                            return entity;
                        }
                    };
                    return entity;
                };
                tango = zulu.bind(tango)(mike);
                _closure2_slot5 = tango;
                zulu = tango.apply;
                entity = arguments;
                mike = entity;
                entity = this;
                entity = zulu.bind(tango)(entity, mike);
                return entity;
            };
            var _closure2_slot5 = entity;
            entity = _closure1_slot12;
            offset = entity.bind(tango)();
            options = _closure1_slot5;
            entity = options.useState;
            report = false;
            entity = entity.bind(options)(report);
            golf = _closure1_slot4;
            oscar = 2;
            entity = golf.bind(tango)(entity, oscar);
            zulu = 0;
            output = entity[zulu];
            mike = 1;
            entity = entity[mike];
            _closure2_slot1 = entity;
            entity = options.useState;
            entity = entity.bind(options)();
            entity = golf.bind(tango)(entity, oscar);
            kilo = entity[zulu];
            var _closure2_slot2 = kilo;
            sizing = entity[mike];
            _closure2_slot3 = sizing;
            mike = _closure1_slot1;
            zulu = _closure1_slot2;
            entity = 9;
            entity = zulu[entity];
            entity = mike.bind(tango)(entity);
            entity = entity.bind(tango)();
            backup = entity.bottom;
            mike = _closure1_slot0;
            entity = 10;
            entity = zulu[entity];
            oscar = mike.bind(tango)(entity);
            zulu = oscar.useStateFromStores;
            entity = _closure1_slot8;
            mike = new Array(1);
            mike[0] = entity;
            entity = function() {
                mike = _closure1_slot8;
                entity = mike.getPendingAvatar;
                entity = entity.bind(mike)();
                return entity;
            };
            mike = zulu.bind(oscar)(mike, entity);
            romeo = null;
            yankee = mike;
            if(!(romeo != kilo)) { _fun124307_ip = 264; continue _fun124307 }
 224:
            zulu = _closure1_slot0;
            oscar = _closure1_slot2;
            entity = 11;
            entity = oscar[entity];
            entity = zulu.bind(tango)(entity);
            entity = entity.DEFAULT_AVATARS;
            entity = entity[kilo];
            yankee = mike;
            if(!(romeo != entity)) { _fun124307_ip = 264; continue _fun124307 }
 261:
            yankee = entity;
 264:
            _closure2_slot4 = yankee;
            papa = _closure1_slot0;
            control = _closure1_slot2;
            entity = 12;
            entity = control[entity];
            mike = papa.bind(tango)(entity);
            entity = mike.memoizedImageSource;
            source = entity.bind(mike)(yankee);
            zulu = _closure1_slot11;
            mike = _closure1_slot7;
            entity = {};
            oscar = offset.container;
            entity['style'] = oscar;
            entity['alwaysBounceVertical'] = report;
            oscar = offset.contentContainer;
            report = new Array(2);
            report[0] = oscar;
            oscar = {};
            update = _closure1_slot1;
            golf = 8;
            options = control[golf];
            options = update.bind(tango)(options);
            options = options.spacing;
            options = options.PX_16;
            options = backup + options;
            oscar['paddingBottom'] = options;
            golf = control[golf];
            golf = update.bind(tango)(golf);
            golf = golf.spacing;
            golf = golf.PX_16;
            oscar['paddingHorizontal'] = golf;
            report[1] = oscar;
            entity['contentContainerStyle'] = report;
            oscar = _closure1_slot6;
            report = {};
            golf = offset.headerContainer;
            report['style'] = golf;
            golf = {};
            backup = _closure1_slot10;
            echo = 15;
            options = control[echo];
            options = papa.bind(tango)(options);
            vacuum = options.Text;
            options = {'style': null, 'accessibilityRole': 'header', 'variant': 'heading-xl/extrabold', 'color': 'header-primary'};
            result = offset.title;
            options['style'] = result;
            result = 16;
            sequence = control[result];
            sequence = papa.bind(tango)(sequence);
            record = sequence.intl;
            config = record.string;
            sequence = control[result];
            sequence = papa.bind(tango)(sequence);
            sequence = sequence.t;
            sequence = sequence.XQRWvb;
            sequence = config.bind(record)(sequence);
            options['children'] = sequence;
            vacuum = backup.bind(tango)(vacuum, options);
            options = new Array(2);
            options[0] = vacuum;
            vacuum = control[echo];
            vacuum = papa.bind(tango)(vacuum);
            sequence = vacuum.Text;
            vacuum = {'style': null, 'variant': 'text-sm/medium', 'color': 'header-secondary'};
            config = offset.subtitle;
            vacuum['style'] = config;
            config = control[result];
            config = papa.bind(tango)(config);
            context = config.intl;
            record = context.string;
            config = control[result];
            config = papa.bind(tango)(config);
            config = config.t;
            config = config.fH9TLS;
            config = record.bind(context)(config);
            vacuum['children'] = config;
            vacuum = backup.bind(tango)(sequence, vacuum);
            options[1] = vacuum;
            golf['children'] = options;
            options = zulu.bind(tango)(oscar, golf);
            golf = new Array(3);
            golf[0] = options;
            options = 17;
            options = control[options];
            update = update.bind(tango)(options);
            options = {};
            options['avatarSource'] = source;
            source = romeo != yankee;
            options['showPendingAvatar'] = source;
            source = function() { // Original name: handleSelectAvatar
                entity = undefined;
                tango = _closure2_slot5;
                zulu = tango.apply;
                entity = arguments;
                mike = entity;
                entity = this;
                entity = zulu.bind(tango)(entity, mike);
                return entity;
            };
            options['onSelectAvatar'] = source;
            options = backup.bind(tango)(update, options);
            golf[1] = options;
            options = {};
            update = offset.errorContainer;
            options['style'] = update;
            if(!output) { _fun124307_ip = 812; continue _fun124307 }
 718:
            source = _closure1_slot10;
            config = _closure1_slot0;
            control = _closure1_slot2;
            echo = control[echo];
            echo = config.bind(tango)(echo);
            update = echo.Text;
            echo = {'variant': 'text-sm/medium', 'color': 'text-danger'};
            vacuum = control[result];
            vacuum = config.bind(tango)(vacuum);
            sequence = vacuum.intl;
            vacuum = sequence.string;
            control = control[result];
            control = config.bind(tango)(control);
            control = control.t;
            control = control.XyLlVl;
            control = vacuum.bind(sequence)(control);
            echo['children'] = control;
            output = source.bind(tango)(update, echo);
 812:
            options['children'] = output;
            options = backup.bind(tango)(oscar, options);
            golf[2] = options;
            report['children'] = golf;
            oscar = zulu.bind(tango)(oscar, report);
            report = new Array(4);
            report[0] = oscar;
            options = _closure1_slot10;
            golf = _closure1_slot1;
            backup = _closure1_slot2;
            oscar = 11;
            oscar = backup[oscar];
            golf = golf.bind(tango)(oscar);
            oscar = {};
            oscar['onAvatarSelect'] = sizing;
            oscar['selectedAvatar'] = kilo;
            oscar = options.bind(tango)(golf, oscar);
            report[1] = oscar;
            golf = _closure1_slot6;
            oscar = {};
            kilo = offset.growContainer;
            oscar['style'] = kilo;
            oscar = options.bind(tango)(golf, oscar);
            report[2] = oscar;
            oscar = {};
            offset = offset.buttonContainer;
            oscar['style'] = offset;
            output = _closure1_slot0;
            verify = 18;
            verify = backup[verify];
            verify = output.bind(tango)(verify);
            offset = verify.Button;
            verify = {'variant': 'primary', 'size': 'lg'};
            kilo = backup[result];
            kilo = output.bind(tango)(kilo);
            sizing = kilo.intl;
            kilo = sizing.string;
            backup = backup[result];
            backup = output.bind(tango)(backup);
            backup = backup.t;
            backup = backup.PDTjLC;
            backup = kilo.bind(sizing)(backup);
            verify['text'] = backup;
            foxtrot = function() { // Original name: onPress
                _fun124313: for(var _fun124313_ip = 0; ; ) switch(_fun124313_ip) {
 0:
                    zulu = _closure1_slot0;
                    mike = _closure1_slot2;
                    entity = 19;
                    mike = mike[entity];
                    entity = undefined;
                    report = zulu.bind(entity)(mike);
                    tango = report.handlePressNext;
                    zulu = _closure2_slot4;
                    mike = _closure2_slot2;
                    golf = _closure2_slot0;
                    entity = null;
                    if(!(entity == golf)) { _fun124313_ip = 63; continue _fun124313 }
 52:
                    entity = function() {
                        entity = undefined;
                        return entity;
                    };
                    _fun124313_ip = 67; continue _fun124313;
 63:
                    entity = _closure2_slot0;
 67:
                    entity = tango.bind(report)(zulu, mike, entity);
                    return entity;
                }
            };
            verify['onPress'] = foxtrot;
            yankee = romeo == yankee;
            verify['disabled'] = yankee;
            verify = options.bind(tango)(offset, verify);
            oscar['children'] = verify;
            oscar = options.bind(tango)(golf, oscar);
            report[3] = oscar;
            entity['children'] = report;
            entity = zulu.bind(tango)(mike, entity);
            return entity;
        }
    };
    zulu['default'] = mike;
    return entity;
})();