// app/modules/avatar/native/components/RedesignAddAvatarModal.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    report = argBar;
    yankee = argBaz;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    var _closure1_slot1 = yankee;
    var _closure1_slot2 = oscard;
    entity = global;
    option = entity.Object;
    golfie = option.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(option)(zuuluu, entity, tangon);
    entity = 0;
    tangon = oscard[entity];
    entity = undefined;
    tangon = yankee.bind(entity)(tangon);
    var _closure1_slot3 = tangon;
    offset = 1;
    tangon = oscard[offset];
    tangon = yankee.bind(entity)(tangon);
    var _closure1_slot4 = tangon;
    foxtra = 2;
    golfie = oscard[foxtra];
    tangon = argCor;
    tangon = tangon.bind(entity)(golfie);
    var _closure1_slot5 = tangon;
    tangon = 3;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    golfie = tangon.View;
    var _closure1_slot6 = golfie;
    tangon = tangon.ScrollView;
    var _closure1_slot7 = tangon;
    tangon = 4;
    tangon = oscard[tangon];
    tangon = yankee.bind(entity)(tangon);
    var _closure1_slot8 = tangon;
    tangon = 5;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.UPLOAD_MEDIUM_SIZE;
    var _closure1_slot9 = tangon;
    tangon = 6;
    golfie = oscard[tangon];
    golfie = report.bind(entity)(golfie);
    golfie = golfie.jsx;
    var _closure1_slot10 = golfie;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.jsxs;
    var _closure1_slot11 = tangon;
    tangon = 7;
    tangon = oscard[tangon];
    option = report.bind(entity)(tangon);
    golfie = option.createStyles;
    tangon = {};
    verify = {};
    verify['flex'] = offset;
    offset = 8;
    romeon = oscard[offset];
    romeon = yankee.bind(entity)(romeon);
    romeon = romeon.colors;
    romeon = romeon.BACKGROUND_PRIMARY;
    verify['backgroundColor'] = romeon;
    tangon['container'] = verify;
    romeon = 'center';
    verify = {'flexGrow': 2, 'alignItems': 'center'};
    tangon['contentContainer'] = verify;
    verify = {};
    verify['flexGrow'] = foxtra;
    foxtra = oscard[offset];
    foxtra = yankee.bind(entity)(foxtra);
    foxtra = foxtra.spacing;
    foxtra = foxtra.PX_24;
    verify['minHeight'] = foxtra;
    tangon['growContainer'] = verify;
    verify = {'display': 'flex', 'alignItems': 'center'};
    tangon['headerContainer'] = verify;
    verify = {};
    foxtra = '100%';
    verify['width'] = foxtra;
    tangon['buttonContainer'] = verify;
    verify = {};
    foxtra = oscard[offset];
    foxtra = yankee.bind(entity)(foxtra);
    foxtra = foxtra.spacing;
    foxtra = foxtra.PX_8;
    verify['marginBottom'] = foxtra;
    verify['textAlign'] = romeon;
    tangon['title'] = verify;
    verify = {};
    verify['textAlign'] = romeon;
    tangon['subtitle'] = verify;
    verify = {};
    verify['alignSelf'] = romeon;
    offset = oscard[offset];
    offset = yankee.bind(entity)(offset);
    offset = offset.spacing;
    offset = offset.PX_24;
    verify['paddingTop'] = offset;
    tangon['errorContainer'] = verify;
    tangon = golfie.bind(option)(tangon);
    var _closure1_slot12 = tangon;
    tangon = 20;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/avatar/native/components/RedesignAddAvatarModal.tsx';
    tangon = report.bind(oscard)(tangon);
    michal = function(argFoo) { // Original name: RedesignAddAvatarModal
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            entity = argFoo;
            entity = entity.route;
            entity = entity.params;
            entity = entity.onComplete;
            var _closure2_slot0 = entity;
            tangon = undefined;
            var _closure2_slot1 = tangon;
            var _closure2_slot3 = tangon;
            var _closure2_slot4 = tangon;
            entity = function() { // Original name: _handleSelectAvatar
                tangon = undefined;
                entity = undefined;
                zuuluu = _closure1_slot3;
                michal = function* () {
                    entity = function* () { // Original name: ?anon_0_
                        _fun00003: for(var _fun00004_ip = 0; ; ) switch(_fun00004_ip) {
 0:
                            StartGenerator();
                            ResumeGenerator(result_out_reg=0, return_bool_out_reg=1);
                            if(michal) { _fun00004_ip = 177; continue _fun00003 }
 10:
                            report = _closure2_slot1;
                            zuuluu = undefined;
                            michal = false;
                            michal = report.bind(zuuluu)(michal);
                            oscard = _closure1_slot0;
                            michal = _closure1_slot2;
                            offset = 13;
                            michal = michal[offset];
                            golfie = oscard.bind(zuuluu)(michal);
                            oscard = golfie.openImagePicker;
                            michal = _closure1_slot9;
                            michal = oscard.bind(golfie)(michal);
                            SaveGenerator(address=68);
 66:
                            return michal;
 68:
                            ResumeGenerator(result_out_reg=1, return_bool_out_reg=5);
                            if(oscard) { _fun00004_ip = 174; continue _fun00003 }
 74:
                            golfie = null;
                            if(!(golfie != michal)) { _fun00004_ip = 118; continue _fun00003 }
 80:
                            option = michal.match;
                            verify = _closure1_slot0;
                            oscard = _closure1_slot2;
                            oscard = oscard[offset];
                            oscard = verify.bind(zuuluu)(oscard);
                            oscard = oscard.base64GIFRegex;
                            oscard = option.bind(michal)(oscard);
                            if(!(golfie == oscard)) { _fun00004_ip = 160; continue _fun00003 }
 118:
                            oscard = _closure1_slot0;
                            golfie = _closure1_slot2;
                            report = 14;
                            report = golfie[report];
                            oscard = oscard.bind(zuuluu)(report);
                            report = oscard.setPendingAvatar;
                            report = report.bind(oscard)(michal);
                            report = _closure2_slot3;
                            report = report.bind(zuuluu)(zuuluu);
                            _fun00004_ip = 171; continue _fun00003;
 160:
                            report = _closure2_slot1;
                            tangon = true;
                            tangon = report.bind(zuuluu)(tangon);
 171:
                            return zuuluu;
 174:
                            return michal;
 177:
                            return entity;
                        }
                    };
                    return entity;
                };
                tangon = zuuluu.bind(tangon)(michal);
                _closure2_slot5 = tangon;
                zuuluu = tangon.apply;
                entity = arguments;
                michal = entity;
                entity = this;
                entity = zuuluu.bind(tangon)(entity, michal);
                return entity;
            };
            var _closure2_slot5 = entity;
            entity = _closure1_slot12;
            offset = entity.bind(tangon)();
            option = _closure1_slot5;
            entity = option.useState;
            report = false;
            entity = entity.bind(option)(report);
            golfie = _closure1_slot4;
            oscard = 2;
            entity = golfie.bind(tangon)(entity, oscard);
            zuuluu = 0;
            output = entity[zuuluu];
            michal = 1;
            entity = entity[michal];
            _closure2_slot1 = entity;
            entity = option.useState;
            entity = entity.bind(option)();
            entity = golfie.bind(tangon)(entity, oscard);
            kiloes = entity[zuuluu];
            var _closure2_slot2 = kiloes;
            sizing = entity[michal];
            _closure2_slot3 = sizing;
            michal = _closure1_slot1;
            zuuluu = _closure1_slot2;
            entity = 9;
            entity = zuuluu[entity];
            entity = michal.bind(tangon)(entity);
            entity = entity.bind(tangon)();
            backup = entity.bottom;
            michal = _closure1_slot0;
            entity = 10;
            entity = zuuluu[entity];
            oscard = michal.bind(tangon)(entity);
            zuuluu = oscard.useStateFromStores;
            entity = _closure1_slot8;
            michal = new Array(1);
            michal[0] = entity;
            entity = function() {
                michal = _closure1_slot8;
                entity = michal.getPendingAvatar;
                entity = entity.bind(michal)();
                return entity;
            };
            michal = zuuluu.bind(oscard)(michal, entity);
            romeon = null;
            yankee = michal;
            if(!(romeon != kiloes)) { _fun00002_ip = 264; continue _fun00001 }
 224:
            zuuluu = _closure1_slot0;
            oscard = _closure1_slot2;
            entity = 11;
            entity = oscard[entity];
            entity = zuuluu.bind(tangon)(entity);
            entity = entity.DEFAULT_AVATARS;
            entity = entity[kiloes];
            yankee = michal;
            if(!(romeon != entity)) { _fun00002_ip = 264; continue _fun00001 }
 261:
            yankee = entity;
 264:
            _closure2_slot4 = yankee;
            papara = _closure1_slot0;
            ctrled = _closure1_slot2;
            entity = 12;
            entity = ctrled[entity];
            michal = papara.bind(tangon)(entity);
            entity = michal.memoizedImageSource;
            source = entity.bind(michal)(yankee);
            zuuluu = _closure1_slot11;
            michal = _closure1_slot7;
            entity = {};
            oscard = offset.container;
            entity['style'] = oscard;
            entity['alwaysBounceVertical'] = report;
            oscard = offset.contentContainer;
            report = new Array(2);
            report[0] = oscard;
            oscard = {};
            update = _closure1_slot1;
            golfie = 8;
            option = ctrled[golfie];
            option = update.bind(tangon)(option);
            option = option.spacing;
            option = option.PX_16;
            option = backup + option;
            oscard['paddingBottom'] = option;
            golfie = ctrled[golfie];
            golfie = update.bind(tangon)(golfie);
            golfie = golfie.spacing;
            golfie = golfie.PX_16;
            oscard['paddingHorizontal'] = golfie;
            report[1] = oscard;
            entity['contentContainerStyle'] = report;
            oscard = _closure1_slot6;
            report = {};
            golfie = offset.headerContainer;
            report['style'] = golfie;
            golfie = {};
            backup = _closure1_slot10;
            echoed = 15;
            option = ctrled[echoed];
            option = papara.bind(tangon)(option);
            vacuum = option.Text;
            option = {'style': null, 'accessibilityRole': 'header', 'variant': 'heading-xl/extrabold', 'color': 'header-primary'};
            result = offset.title;
            option['style'] = result;
            result = 16;
            sequen = ctrled[result];
            sequen = papara.bind(tangon)(sequen);
            record = sequen.intl;
            config = record.string;
            sequen = ctrled[result];
            sequen = papara.bind(tangon)(sequen);
            sequen = sequen.t;
            sequen = sequen.XQRWvb;
            sequen = config.bind(record)(sequen);
            option['children'] = sequen;
            vacuum = backup.bind(tangon)(vacuum, option);
            option = new Array(2);
            option[0] = vacuum;
            vacuum = ctrled[echoed];
            vacuum = papara.bind(tangon)(vacuum);
            sequen = vacuum.Text;
            vacuum = {'style': null, 'variant': 'text-sm/medium', 'color': 'header-secondary'};
            config = offset.subtitle;
            vacuum['style'] = config;
            config = ctrled[result];
            config = papara.bind(tangon)(config);
            cntext = config.intl;
            record = cntext.string;
            config = ctrled[result];
            config = papara.bind(tangon)(config);
            config = config.t;
            config = config.fH9TLS;
            config = record.bind(cntext)(config);
            vacuum['children'] = config;
            vacuum = backup.bind(tangon)(sequen, vacuum);
            option[1] = vacuum;
            golfie['children'] = option;
            option = zuuluu.bind(tangon)(oscard, golfie);
            golfie = new Array(3);
            golfie[0] = option;
            option = 17;
            option = ctrled[option];
            update = update.bind(tangon)(option);
            option = {};
            option['avatarSource'] = source;
            source = romeon != yankee;
            option['showPendingAvatar'] = source;
            source = function() { // Original name: handleSelectAvatar
                entity = undefined;
                tangon = _closure2_slot5;
                zuuluu = tangon.apply;
                entity = arguments;
                michal = entity;
                entity = this;
                entity = zuuluu.bind(tangon)(entity, michal);
                return entity;
            };
            option['onSelectAvatar'] = source;
            option = backup.bind(tangon)(update, option);
            golfie[1] = option;
            option = {};
            update = offset.errorContainer;
            option['style'] = update;
            if(!output) { _fun00002_ip = 812; continue _fun00001 }
 718:
            source = _closure1_slot10;
            config = _closure1_slot0;
            ctrled = _closure1_slot2;
            echoed = ctrled[echoed];
            echoed = config.bind(tangon)(echoed);
            update = echoed.Text;
            echoed = {'variant': 'text-sm/medium', 'color': 'text-danger'};
            vacuum = ctrled[result];
            vacuum = config.bind(tangon)(vacuum);
            sequen = vacuum.intl;
            vacuum = sequen.string;
            ctrled = ctrled[result];
            ctrled = config.bind(tangon)(ctrled);
            ctrled = ctrled.t;
            ctrled = ctrled.XyLlVl;
            ctrled = vacuum.bind(sequen)(ctrled);
            echoed['children'] = ctrled;
            output = source.bind(tangon)(update, echoed);
 812:
            option['children'] = output;
            option = backup.bind(tangon)(oscard, option);
            golfie[2] = option;
            report['children'] = golfie;
            oscard = zuuluu.bind(tangon)(oscard, report);
            report = new Array(4);
            report[0] = oscard;
            option = _closure1_slot10;
            golfie = _closure1_slot1;
            backup = _closure1_slot2;
            oscard = 11;
            oscard = backup[oscard];
            golfie = golfie.bind(tangon)(oscard);
            oscard = {};
            oscard['onAvatarSelect'] = sizing;
            oscard['selectedAvatar'] = kiloes;
            oscard = option.bind(tangon)(golfie, oscard);
            report[1] = oscard;
            golfie = _closure1_slot6;
            oscard = {};
            kiloes = offset.growContainer;
            oscard['style'] = kiloes;
            oscard = option.bind(tangon)(golfie, oscard);
            report[2] = oscard;
            oscard = {};
            offset = offset.buttonContainer;
            oscard['style'] = offset;
            output = _closure1_slot0;
            verify = 18;
            verify = backup[verify];
            verify = output.bind(tangon)(verify);
            offset = verify.Button;
            verify = {'variant': 'primary', 'size': 'lg'};
            kiloes = backup[result];
            kiloes = output.bind(tangon)(kiloes);
            sizing = kiloes.intl;
            kiloes = sizing.string;
            backup = backup[result];
            backup = output.bind(tangon)(backup);
            backup = backup.t;
            backup = backup.PDTjLC;
            backup = kiloes.bind(sizing)(backup);
            verify['text'] = backup;
            foxtra = function() { // Original name: onPress
                _fun00005: for(var _fun00006_ip = 0; ; ) switch(_fun00006_ip) {
 0:
                    zuuluu = _closure1_slot0;
                    michal = _closure1_slot2;
                    entity = 19;
                    michal = michal[entity];
                    entity = undefined;
                    report = zuuluu.bind(entity)(michal);
                    tangon = report.handlePressNext;
                    zuuluu = _closure2_slot4;
                    michal = _closure2_slot2;
                    golfie = _closure2_slot0;
                    entity = null;
                    if(!(entity == golfie)) { _fun00006_ip = 63; continue _fun00005 }
 52:
                    entity = function() {
                        entity = undefined;
                        return entity;
                    };
                    _fun00006_ip = 67; continue _fun00005;
 63:
                    entity = _closure2_slot0;
 67:
                    entity = tangon.bind(report)(zuuluu, michal, entity);
                    return entity;
                }
            };
            verify['onPress'] = foxtra;
            yankee = romeon == yankee;
            verify['disabled'] = yankee;
            verify = option.bind(tangon)(offset, verify);
            oscard['children'] = verify;
            oscard = option.bind(tangon)(golfie, oscard);
            report[3] = oscard;
            entity['children'] = report;
            entity = zuuluu.bind(tangon)(michal, entity);
            return entity;
        }
    };
    zuuluu['default'] = michal;
    return entity;
})();