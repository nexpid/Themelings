// app/modules/avatar/native/components/AddAvatarModal.tsx
export default (function(_, argBar, argBaz, argCor, __, argFre, argPlu) {
    report = argBar;
    foxtra = argBaz;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    var _closure1_slot1 = foxtra;
    var _closure1_slot2 = oscard;
    entity = function() { // Original name: AddAvatarScreen
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            entity = function() { // Original name: _handleSelectAvatar
                tangon = undefined;
                entity = undefined;
                zuuluu = _closure1_slot3;
                michal = function* () {
                    entity = function* () { // Original name: ?anon_0_
                        _fun00003: for(var _fun00004_ip = 0; ; ) switch(_fun00004_ip) {
 0:
                            StartGenerator();
                            ResumeGenerator(result_out_reg=0, return_bool_out_reg=1);
                            if(michal) { _fun00004_ip = 177; continue _fun00003 }
 10:
                            report = _closure2_slot0;
                            zuuluu = undefined;
                            michal = false;
                            michal = report.bind(zuuluu)(michal);
                            oscard = _closure1_slot0;
                            michal = _closure1_slot2;
                            offset = 15;
                            michal = michal[offset];
                            golfie = oscard.bind(zuuluu)(michal);
                            oscard = golfie.openImagePicker;
                            michal = _closure1_slot8;
                            michal = oscard.bind(golfie)(michal);
                            SaveGenerator(address=68);
 66:
                            return michal;
 68:
                            ResumeGenerator(result_out_reg=1, return_bool_out_reg=5);
                            if(oscard) { _fun00004_ip = 174; continue _fun00003 }
 74:
                            golfie = null;
                            if(!(golfie != michal)) { _fun00004_ip = 118; continue _fun00003 }
 80:
                            option = michal.match;
                            verify = _closure1_slot0;
                            oscard = _closure1_slot2;
                            oscard = oscard[offset];
                            oscard = verify.bind(zuuluu)(oscard);
                            oscard = oscard.base64GIFRegex;
                            oscard = option.bind(michal)(oscard);
                            if(!(golfie == oscard)) { _fun00004_ip = 160; continue _fun00003 }
 118:
                            oscard = _closure1_slot0;
                            golfie = _closure1_slot2;
                            report = 16;
                            report = golfie[report];
                            oscard = oscard.bind(zuuluu)(report);
                            report = oscard.setPendingAvatar;
                            report = report.bind(oscard)(michal);
                            report = _closure2_slot2;
                            report = report.bind(zuuluu)(zuuluu);
                            _fun00004_ip = 171; continue _fun00003;
 160:
                            report = _closure2_slot0;
                            tangon = true;
                            tangon = report.bind(zuuluu)(tangon);
 171:
                            return zuuluu;
 174:
                            return michal;
 177:
                            return entity;
                        }
                    };
                    return entity;
                };
                tangon = zuuluu.bind(tangon)(michal);
                _closure2_slot4 = tangon;
                zuuluu = tangon.apply;
                entity = arguments;
                michal = entity;
                entity = this;
                entity = zuuluu.bind(tangon)(entity, michal);
                return entity;
            };
            var _closure2_slot4 = entity;
            entity = _closure1_slot11;
            tangon = undefined;
            output = entity.bind(tangon)();
            zuuluu = _closure1_slot5;
            michal = zuuluu.useState;
            entity = false;
            michal = michal.bind(zuuluu)(entity);
            entity = _closure1_slot4;
            report = 2;
            entity = entity.bind(tangon)(michal, report);
            golfie = 0;
            vacuum = entity[golfie];
            michal = 1;
            entity = entity[michal];
            var _closure2_slot0 = entity;
            zuuluu = _closure1_slot5;
            entity = zuuluu.useState;
            zuuluu = entity.bind(zuuluu)();
            entity = _closure1_slot4;
            entity = entity.bind(tangon)(zuuluu, report);
            backup = entity[golfie];
            var _closure2_slot1 = backup;
            result = entity[michal];
            var _closure2_slot2 = result;
            michal = _closure1_slot1;
            zuuluu = _closure1_slot2;
            entity = 11;
            entity = zuuluu[entity];
            entity = michal.bind(tangon)(entity);
            entity = entity.bind(tangon)();
            option = entity.bottom;
            michal = _closure1_slot0;
            entity = 12;
            entity = zuuluu[entity];
            report = michal.bind(tangon)(entity);
            zuuluu = report.useStateFromStores;
            entity = _closure1_slot7;
            michal = new Array(1);
            michal[0] = entity;
            entity = function() {
                michal = _closure1_slot7;
                entity = michal.getPendingAvatar;
                entity = entity.bind(michal)();
                return entity;
            };
            michal = zuuluu.bind(report)(michal, entity);
            offset = null;
            verify = michal;
            if(!(offset != backup)) { _fun00002_ip = 235; continue _fun00001 }
 195:
            zuuluu = _closure1_slot0;
            report = _closure1_slot2;
            entity = 13;
            entity = report[entity];
            entity = zuuluu.bind(tangon)(entity);
            entity = entity.DEFAULT_AVATARS;
            entity = entity[backup];
            verify = michal;
            if(!(offset != entity)) { _fun00002_ip = 235; continue _fun00001 }
 232:
            verify = entity;
 235:
            var _closure2_slot3 = verify;
            michal = _closure1_slot0;
            zuuluu = _closure1_slot2;
            entity = 14;
            entity = zuuluu[entity];
            michal = michal.bind(tangon)(entity);
            entity = michal.memoizedImageSource;
            update = entity.bind(michal)(verify);
            zuuluu = _closure1_slot10;
            michal = _closure1_slot6;
            entity = {};
            oscard = output.container;
            report = new Array(2);
            report[0] = oscard;
            oscard = {};
            romeon = option > golfie;
            golfie = 16;
            if(!romeon) { _fun00002_ip = 308; continue _fun00001 }
 305:
            golfie = option;
 308:
            oscard['paddingBottom'] = golfie;
            report[1] = oscard;
            entity['style'] = report;
            golfie = _closure1_slot10;
            oscard = _closure1_slot6;
            report = {};
            option = output.headerContainer;
            report['style'] = option;
            kiloes = _closure1_slot10;
            romeon = _closure1_slot6;
            option = {};
            record = _closure1_slot9;
            source = _closure1_slot0;
            sequen = _closure1_slot2;
            ctrled = 17;
            sizing = sequen[ctrled];
            sizing = source.bind(tangon)(sizing);
            config = sizing.Text;
            echoed = {'style': null, 'accessibilityRole': 'header', 'variant': 'heading-xl/extrabold', 'color': 'header-primary'};
            sizing = output.title;
            echoed['style'] = sizing;
            sizing = 18;
            cntext = sequen[sizing];
            cntext = source.bind(tangon)(cntext);
            target = cntext.intl;
            papara = target.string;
            cntext = sequen[sizing];
            cntext = source.bind(tangon)(cntext);
            cntext = cntext.t;
            cntext = cntext.XQRWvb;
            cntext = papara.bind(target)(cntext);
            echoed['children'] = cntext;
            config = record.bind(tangon)(config, echoed);
            echoed = new Array(2);
            echoed[0] = config;
            record = _closure1_slot9;
            ctrled = sequen[ctrled];
            ctrled = source.bind(tangon)(ctrled);
            config = ctrled.Text;
            ctrled = {'style': null, 'variant': 'heading-deprecated-12/medium', 'color': 'header-secondary'};
            cntext = output.subtitle;
            ctrled['style'] = cntext;
            cntext = sequen[sizing];
            cntext = source.bind(tangon)(cntext);
            target = cntext.intl;
            papara = target.string;
            cntext = sequen[sizing];
            cntext = source.bind(tangon)(cntext);
            cntext = cntext.t;
            cntext = cntext.fH9TLS;
            cntext = papara.bind(target)(cntext);
            ctrled['children'] = cntext;
            ctrled = record.bind(tangon)(config, ctrled);
            echoed[1] = ctrled;
            option['children'] = echoed;
            romeon = kiloes.bind(tangon)(romeon, option);
            option = new Array(3);
            option[0] = romeon;
            echoed = _closure1_slot9;
            kiloes = _closure1_slot1;
            romeon = 19;
            romeon = sequen[romeon];
            kiloes = kiloes.bind(tangon)(romeon);
            romeon = {};
            romeon['avatarSource'] = update;
            update = offset != verify;
            romeon['showPendingAvatar'] = update;
            update = function() { // Original name: handleSelectAvatar
                entity = undefined;
                tangon = _closure2_slot4;
                zuuluu = tangon.apply;
                entity = arguments;
                michal = entity;
                entity = this;
                entity = zuuluu.bind(tangon)(entity, michal);
                return entity;
            };
            romeon['onSelectAvatar'] = update;
            romeon = echoed.bind(tangon)(kiloes, romeon);
            option[1] = romeon;
            echoed = _closure1_slot9;
            kiloes = _closure1_slot6;
            romeon = {};
            update = output.errorContainer;
            romeon['style'] = update;
            ctrled = _closure1_slot9;
            update = 20;
            update = sequen[update];
            update = source.bind(tangon)(update);
            source = update.LegacyText;
            update = {};
            sequen = output.errorText;
            update['style'] = sequen;
            if(!vacuum) { _fun00002_ip = 757; continue _fun00001 }
 705:
            cntext = _closure1_slot0;
            sequen = _closure1_slot2;
            config = sequen[sizing];
            config = cntext.bind(tangon)(config);
            record = config.intl;
            config = record.string;
            sequen = sequen[sizing];
            sequen = cntext.bind(tangon)(sequen);
            sequen = sequen.t;
            sequen = sequen.XyLlVl;
            vacuum = config.bind(record)(sequen);
 757:
            update['children'] = vacuum;
            update = ctrled.bind(tangon)(source, update);
            romeon['children'] = update;
            romeon = echoed.bind(tangon)(kiloes, romeon);
            option[2] = romeon;
            report['children'] = option;
            oscard = golfie.bind(tangon)(oscard, report);
            report = new Array(3);
            report[0] = oscard;
            option = _closure1_slot9;
            kiloes = _closure1_slot1;
            romeon = _closure1_slot2;
            oscard = 13;
            oscard = romeon[oscard];
            golfie = kiloes.bind(tangon)(oscard);
            oscard = {};
            oscard['onAvatarSelect'] = result;
            oscard['selectedAvatar'] = backup;
            oscard = option.bind(tangon)(golfie, oscard);
            report[1] = oscard;
            option = _closure1_slot9;
            backup = 21;
            oscard = romeon[backup];
            golfie = kiloes.bind(tangon)(oscard);
            oscard = {};
            output = output.button;
            oscard['style'] = output;
            backup = romeon[backup];
            backup = kiloes.bind(tangon)(backup);
            backup = backup.Colors;
            backup = backup.BRAND;
            oscard['color'] = backup;
            kiloes = _closure1_slot0;
            foxtra = romeon[sizing];
            foxtra = kiloes.bind(tangon)(foxtra);
            backup = foxtra.intl;
            foxtra = backup.string;
            romeon = romeon[sizing];
            romeon = kiloes.bind(tangon)(romeon);
            romeon = romeon.t;
            romeon = romeon.PDTjLC;
            romeon = foxtra.bind(backup)(romeon);
            oscard['text'] = romeon;
            yankee = function() { // Original name: onPress
                zuuluu = _closure1_slot0;
                michal = _closure1_slot2;
                entity = 22;
                michal = michal[entity];
                entity = undefined;
                tangon = zuuluu.bind(entity)(michal);
                zuuluu = tangon.handlePressNext;
                michal = _closure2_slot3;
                entity = _closure2_slot1;
                entity = zuuluu.bind(tangon)(michal, entity);
                return entity;
            };
            oscard['onPress'] = yankee;
            verify = offset == verify;
            oscard['disabled'] = verify;
            oscard = option.bind(tangon)(golfie, oscard);
            report[2] = oscard;
            entity['children'] = report;
            entity = zuuluu.bind(tangon)(michal, entity);
            return entity;
        }
    };
    var _closure1_slot12 = entity;
    michal = function() { // Original name: AddAvatarModal
        report = _closure1_slot5;
        tangon = report.useMemo;
        zuuluu = function() {
            michal = function() { // Original name: getScreens
                entity = {};
                michal = {};
                oscard = _closure1_slot0;
                golfie = _closure1_slot2;
                tangon = 23;
                tangon = golfie[tangon];
                report = undefined;
                tangon = oscard.bind(report)(tangon);
                tangon = tangon.ImpressionNames;
                tangon = tangon.AVATAR_UPLOAD;
                michal['impressionName'] = tangon;
                tangon = function() { // Original name: headerRight
                    tangon = _closure1_slot9;
                    option = _closure1_slot0;
                    verify = _closure1_slot2;
                    entity = 24;
                    entity = verify[entity];
                    zuuluu = undefined;
                    entity = option.bind(zuuluu)(entity);
                    michal = entity.HeaderActionButton;
                    entity = {};
                    report = 18;
                    oscard = verify[report];
                    oscard = option.bind(zuuluu)(oscard);
                    golfie = oscard.intl;
                    oscard = golfie.string;
                    report = verify[report];
                    report = option.bind(zuuluu)(report);
                    report = report.t;
                    report = report.5WxrcX;
                    report = oscard.bind(golfie)(report);
                    entity['text'] = report;
                    report = function() { // Original name: onPress
                        zuuluu = _closure1_slot0;
                        michal = _closure1_slot2;
                        entity = 22;
                        michal = michal[entity];
                        entity = undefined;
                        michal = zuuluu.bind(entity)(michal);
                        entity = michal.showSkipAvatarModal;
                        entity = entity.bind(michal)();
                        return entity;
                    };
                    entity['onPress'] = report;
                    entity = tangon.bind(zuuluu)(michal, entity);
                    return entity;
                };
                michal['headerRight'] = tangon;
                tangon = function() { // Original name: headerLeft
                    entity = null;
                    return entity;
                };
                michal['headerLeft'] = tangon;
                tangon = 25;
                tangon = golfie[tangon];
                report = oscard.bind(report)(tangon);
                tangon = report.getHeaderNoTitle;
                tangon = tangon.bind(report)();
                michal['headerTitle'] = tangon;
                tangon = true;
                michal['ignoreKeyboard'] = tangon;
                michal['fullscreen'] = tangon;
                zuuluu = function() { // Original name: render
                    tangon = _closure1_slot9;
                    zuuluu = _closure1_slot12;
                    michal = undefined;
                    entity = {};
                    entity = tangon.bind(michal)(zuuluu, entity);
                    return entity;
                };
                michal['render'] = zuuluu;
                entity['ADD_AVATAR'] = michal;
                return entity;
            };
            entity = undefined;
            entity = michal.bind(entity)();
            return entity;
        };
        michal = new Array(0);
        report = tangon.bind(report)(zuuluu, michal);
        tangon = _closure1_slot9;
        michal = _closure1_slot0;
        zuuluu = _closure1_slot2;
        entity = 26;
        entity = zuuluu[entity];
        zuuluu = undefined;
        entity = michal.bind(zuuluu)(entity);
        michal = entity.Navigator;
        entity = {};
        entity['screens'] = report;
        report = 'ADD_AVATAR';
        entity['initialRouteName'] = report;
        entity = tangon.bind(zuuluu)(michal, entity);
        return entity;
    };
    entity = global;
    verify = entity.Object;
    golfie = verify.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(verify)(zuuluu, entity, tangon);
    entity = 0;
    tangon = oscard[entity];
    entity = undefined;
    tangon = foxtra.bind(entity)(tangon);
    var _closure1_slot3 = tangon;
    tangon = 1;
    tangon = oscard[tangon];
    tangon = foxtra.bind(entity)(tangon);
    var _closure1_slot4 = tangon;
    tangon = 2;
    golfie = oscard[tangon];
    tangon = argCor;
    tangon = tangon.bind(entity)(golfie);
    var _closure1_slot5 = tangon;
    tangon = 3;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.View;
    var _closure1_slot6 = tangon;
    tangon = 4;
    tangon = oscard[tangon];
    tangon = foxtra.bind(entity)(tangon);
    var _closure1_slot7 = tangon;
    tangon = 5;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    backup = tangon.Fonts;
    golfie = tangon.ModalAnimation;
    tangon = tangon.UPLOAD_MEDIUM_SIZE;
    var _closure1_slot8 = tangon;
    tangon = 6;
    verify = oscard[tangon];
    verify = report.bind(entity)(verify);
    verify = verify.jsx;
    var _closure1_slot9 = verify;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.jsxs;
    var _closure1_slot10 = tangon;
    tangon = 7;
    tangon = oscard[tangon];
    offset = report.bind(entity)(tangon);
    verify = offset.createStyles;
    tangon = {};
    yankee = {'flex': 1, 'backgroundColor': null, 'justifyContent': 'center', 'paddingTop': null, 'alignItems': 'center'};
    romeon = 8;
    kiloes = oscard[romeon];
    kiloes = foxtra.bind(entity)(kiloes);
    kiloes = kiloes.colors;
    kiloes = kiloes.BACKGROUND_PRIMARY;
    yankee['backgroundColor'] = kiloes;
    kiloes = 'center';
    sizing = 9;
    sizing = oscard[sizing];
    sizing = report.bind(entity)(sizing);
    output = sizing.NAV_BAR_HEIGHT;
    sizing = 32;
    sizing = output + sizing;
    yankee['paddingTop'] = sizing;
    tangon['container'] = yankee;
    yankee = {'display': 'flex', 'alignItems': 'center'};
    tangon['headerContainer'] = yankee;
    yankee = {'flexGrow': 0, 'marginHorizontal': 16, 'marginBottom': 16};
    tangon['button'] = yankee;
    yankee = {'marginBottom': 8, 'textAlign': 'center'};
    tangon['title'] = yankee;
    yankee = {};
    yankee['textAlign'] = kiloes;
    tangon['subtitle'] = yankee;
    yankee = {};
    kiloes = oscard[romeon];
    kiloes = foxtra.bind(entity)(kiloes);
    kiloes = kiloes.colors;
    kiloes = kiloes.HEADER_PRIMARY;
    yankee['color'] = kiloes;
    tangon['skipButton'] = yankee;
    yankee = {'alignSelf': 'center', 'paddingTop': 24};
    tangon['errorContainer'] = yankee;
    yankee = {};
    kiloes = 10;
    kiloes = oscard[kiloes];
    kiloes = foxtra.bind(entity)(kiloes);
    backup = backup.DISPLAY_MEDIUM;
    romeon = oscard[romeon];
    romeon = foxtra.bind(entity)(romeon);
    romeon = romeon.unsafe_rawColors;
    foxtra = romeon.RED_400;
    romeon = 12;
    echoed = kiloes.bind(entity)(backup, foxtra, romeon);
    update = yankee;
    romeon = copyDataProperties(update, echoed);
    tangon['errorText'] = yankee;
    tangon = verify.bind(offset)(tangon);
    var _closure1_slot11 = tangon;
    tangon = {};
    golfie = golfie.SLIDE_IN_OUT;
    tangon['animation'] = golfie;
    michal['modalConfig'] = tangon;
    tangon = 27;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/avatar/native/components/AddAvatarModal.tsx';
    tangon = report.bind(oscard)(tangon);
    zuuluu['default'] = michal;
    return entity;
})();