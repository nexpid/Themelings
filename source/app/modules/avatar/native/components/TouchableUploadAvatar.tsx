// app/modules/avatar/native/components/TouchableUploadAvatar.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    report = argBar;
    romeon = argBaz;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    var _closure1_slot1 = romeon;
    var _closure1_slot2 = oscard;
    entity = global;
    option = entity.Object;
    golfie = option.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(option)(zuuluu, entity, tangon);
    entity = 0;
    golfie = oscard[entity];
    tangon = argCor;
    entity = undefined;
    tangon = tangon.bind(entity)(golfie);
    tangon = 1;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.View;
    var _closure1_slot3 = tangon;
    tangon = 2;
    golfie = oscard[tangon];
    golfie = report.bind(entity)(golfie);
    golfie = golfie.jsx;
    var _closure1_slot4 = golfie;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.jsxs;
    var _closure1_slot5 = tangon;
    tangon = 3;
    tangon = oscard[tangon];
    option = report.bind(entity)(tangon);
    golfie = option.createStyles;
    tangon = {};
    verify = {'display': 'flex', 'paddingTop': 24};
    tangon['avatarContainer'] = verify;
    verify = {};
    yankee = 4;
    offset = oscard[yankee];
    offset = romeon.bind(entity)(offset);
    offset = offset.colors;
    offset = offset.INTERACTIVE_NORMAL;
    verify['tintColor'] = offset;
    offset = 96;
    verify['width'] = offset;
    tangon['defaultLogoStyle'] = verify;
    verify = {'width': 200, 'height': 200, 'borderRadius': 100, 'position': 'relative'};
    tangon['uploadedAvatarStyle'] = verify;
    verify = {'borderColor': null, 'borderStyle': 'dashed', 'borderWidth': 2, 'borderRadius': null, 'width': 200, 'height': 200, 'justifyContent': 'center', 'alignItems': 'center', 'position': 'relative', 'overflow': 'visible'};
    offset = oscard[yankee];
    offset = romeon.bind(entity)(offset);
    offset = offset.colors;
    offset = offset.INTERACTIVE_MUTED;
    verify['borderColor'] = offset;
    offset = oscard[yankee];
    offset = romeon.bind(entity)(offset);
    offset = offset.radii;
    offset = offset.round;
    verify['borderRadius'] = offset;
    offset = 'center';
    tangon['avatarWrapper'] = verify;
    verify = {'backgroundColor': null, 'borderRadius': null, 'tintColor': null, 'position': 'absolute', 'right': 10, 'top': 10, 'width': 40, 'height': 40, 'flex': 1, 'justifyContent': 'center'};
    foxtra = oscard[yankee];
    foxtra = romeon.bind(entity)(foxtra);
    foxtra = foxtra.colors;
    foxtra = foxtra.BG_BRAND;
    verify['backgroundColor'] = foxtra;
    foxtra = oscard[yankee];
    foxtra = romeon.bind(entity)(foxtra);
    foxtra = foxtra.radii;
    foxtra = foxtra.round;
    verify['borderRadius'] = foxtra;
    foxtra = oscard[yankee];
    foxtra = romeon.bind(entity)(foxtra);
    foxtra = foxtra.colors;
    foxtra = foxtra.BACKGROUND_PRIMARY;
    verify['tintColor'] = foxtra;
    tangon['uploadAvatarWrapper'] = verify;
    verify = {};
    yankee = oscard[yankee];
    yankee = romeon.bind(entity)(yankee);
    yankee = yankee.colors;
    yankee = yankee.WHITE;
    verify['tintColor'] = yankee;
    verify['alignSelf'] = offset;
    tangon['uploadAvatarIcon'] = verify;
    tangon = golfie.bind(option)(tangon);
    var _closure1_slot6 = tangon;
    tangon = 11;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/avatar/native/components/TouchableUploadAvatar.tsx';
    tangon = report.bind(oscard)(tangon);
    michal = function(argFoo) { // Original name: TouchableUploadAvatar
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            zuuluu = argFoo;
            michal = zuuluu.avatarSource;
            entity = zuuluu.showPendingAvatar;
            tangon = undefined;
            if(!(entity === tangon)) { _fun00002_ip = 23; continue _fun00001 }
 21:
            entity = false;
 23:
            golfie = zuuluu.onSelectAvatar;
            zuuluu = _closure1_slot6;
            foxtra = zuuluu.bind(tangon)();
            if(!entity) { _fun00002_ip = 52; continue _fun00001 }
 43:
            zuuluu = null;
            yankee = michal;
            if(!(zuuluu == yankee)) { _fun00002_ip = 72; continue _fun00001 }
 52:
            report = _closure1_slot1;
            oscard = _closure1_slot2;
            zuuluu = 5;
            zuuluu = oscard[zuuluu];
            yankee = report.bind(tangon)(zuuluu);
 72:
            if(!entity) { _fun00002_ip = 81; continue _fun00001 }
 75:
            entity = null;
            if(!(entity == michal)) { _fun00002_ip = 89; continue _fun00001 }
 81:
            romeon = foxtra.defaultLogoStyle;
            _fun00002_ip = 95; continue _fun00001;
 89:
            romeon = foxtra.uploadedAvatarStyle;
 95:
            zuuluu = _closure1_slot4;
            michal = _closure1_slot3;
            entity = {};
            report = foxtra.avatarContainer;
            entity['style'] = report;
            backup = _closure1_slot0;
            sizing = _closure1_slot2;
            report = 6;
            report = sizing[report];
            report = backup.bind(tangon)(report);
            oscard = report.PressableOpacity;
            report = {};
            report['onPress'] = golfie;
            golfie = 'button';
            report['accessibilityRole'] = golfie;
            golfie = 7;
            option = sizing[golfie];
            option = backup.bind(tangon)(option);
            offset = option.intl;
            option = offset.string;
            golfie = sizing[golfie];
            golfie = backup.bind(tangon)(golfie);
            golfie = golfie.t;
            golfie = golfie.70lEQU;
            golfie = option.bind(offset)(golfie);
            report['accessibilityLabel'] = golfie;
            option = _closure1_slot5;
            golfie = {};
            offset = foxtra.avatarWrapper;
            golfie['style'] = offset;
            kiloes = _closure1_slot1;
            verify = 8;
            verify = sizing[verify];
            offset = kiloes.bind(tangon)(verify);
            verify = {};
            backup = 'contain';
            verify['resizeMode'] = backup;
            verify['style'] = romeon;
            verify['source'] = yankee;
            offset = zuuluu.bind(tangon)(offset, verify);
            verify = new Array(2);
            verify[0] = offset;
            offset = {};
            yankee = foxtra.uploadAvatarWrapper;
            offset['style'] = yankee;
            backup = 9;
            yankee = sizing[backup];
            romeon = kiloes.bind(tangon)(yankee);
            yankee = {};
            backup = sizing[backup];
            backup = kiloes.bind(tangon)(backup);
            backup = backup.Sizes;
            backup = backup.MEDIUM;
            yankee['size'] = backup;
            backup = 10;
            backup = sizing[backup];
            backup = kiloes.bind(tangon)(backup);
            yankee['source'] = backup;
            foxtra = foxtra.uploadAvatarIcon;
            yankee['style'] = foxtra;
            yankee = zuuluu.bind(tangon)(romeon, yankee);
            offset['children'] = yankee;
            offset = zuuluu.bind(tangon)(michal, offset);
            verify[1] = offset;
            golfie['children'] = verify;
            golfie = option.bind(tangon)(michal, golfie);
            report['children'] = golfie;
            report = zuuluu.bind(tangon)(oscard, report);
            entity['children'] = report;
            entity = zuuluu.bind(tangon)(michal, entity);
            return entity;
        }
    };
    zuuluu['default'] = michal;
    return entity;
})();