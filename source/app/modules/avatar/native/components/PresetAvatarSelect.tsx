// app/modules/avatar/native/components/PresetAvatarSelect.tsx
export default (function(argFoo, argBar, argBaz, argCorge, _, argFred, argPlugh) {
    golf = argBar;
    foxtrot = argBaz;
    zulu = argFred;
    options = argPlugh;
    var _closure1_slot0 = golf;
    var _closure1_slot1 = foxtrot;
    var _closure1_slot2 = options;
    entity = function(argFoo) { // Original name: DefaultAvatarButton
        _fun124221: for(var _fun124221_ip = 0; ; ) switch(_fun124221_ip) {
 0:
            entity = argFoo;
            verify = entity.source;
            oscar = entity.onSelect;
            offset = entity.selected;
            golf = entity.accessibilityLabel;
            entity = _closure1_slot7;
            tango = undefined;
            options = entity.bind(tango)();
            zulu = _closure1_slot4;
            mike = _closure1_slot0;
            yankee = _closure1_slot2;
            entity = 15;
            entity = yankee[entity];
            entity = mike.bind(tango)(entity);
            mike = entity.PressableOpacity;
            entity = {};
            romeo = options.defaultAvatarContainer;
            yankee = new Array(2);
            yankee[0] = romeo;
            romeo = undefined;
            if(!offset) { _fun124221_ip = 95; continue _fun124221 }
 89:
            romeo = options.defaultAvatarSelected;
 95:
            yankee[1] = romeo;
            entity['style'] = yankee;
            yankee = 'button';
            entity['accessibilityRole'] = yankee;
            entity['accessibilityLabel'] = golf;
            golf = {};
            golf['selected'] = offset;
            entity['accessibilityState'] = golf;
            foxtrot = _closure1_slot0;
            offset = _closure1_slot2;
            golf = 11;
            yankee = offset[golf];
            yankee = foxtrot.bind(tango)(yankee);
            romeo = yankee.intl;
            yankee = romeo.string;
            golf = offset[golf];
            golf = foxtrot.bind(tango)(golf);
            golf = golf.t;
            golf = golf.vw2RsL;
            golf = yankee.bind(romeo)(golf);
            entity['accessibilityHint'] = golf;
            entity['onPress'] = oscar;
            golf = _closure1_slot4;
            oscar = _closure1_slot1;
            report = 16;
            report = offset[report];
            oscar = oscar.bind(tango)(report);
            report = {};
            options = options.defaultAvatarButton;
            report['style'] = options;
            options = {};
            options['uri'] = verify;
            report['source'] = options;
            report = golf.bind(tango)(oscar, report);
            entity['children'] = report;
            entity = zulu.bind(tango)(mike, entity);
            return entity;
        }
    };
    var _closure1_slot8 = entity;
    entity = global;
    oscar = entity.Object;
    tango = oscar.defineProperty;
    mike = {};
    entity = true;
    mike['value'] = entity;
    entity = '__esModule';
    entity = tango.bind(oscar)(zulu, entity, mike);
    entity = 0;
    tango = options[entity];
    mike = argCorge;
    entity = undefined;
    mike = mike.bind(entity)(tango);
    mike = 1;
    mike = options[mike];
    mike = golf.bind(entity)(mike);
    mike = mike.View;
    var _closure1_slot3 = mike;
    mike = 2;
    tango = options[mike];
    tango = golf.bind(entity)(tango);
    tango = tango.jsx;
    var _closure1_slot4 = tango;
    mike = options[mike];
    mike = golf.bind(entity)(mike);
    mike = mike.jsxs;
    var _closure1_slot5 = mike;
    mike = 3;
    tango = options[mike];
    oscar = foxtrot.bind(entity)(tango);
    tango = new Array(8);
    tango[0] = oscar;
    sizing = 4;
    oscar = options[sizing];
    oscar = foxtrot.bind(entity)(oscar);
    tango[1] = oscar;
    kilo = 5;
    oscar = options[kilo];
    oscar = foxtrot.bind(entity)(oscar);
    tango[2] = oscar;
    backup = 6;
    oscar = options[backup];
    oscar = foxtrot.bind(entity)(oscar);
    tango[3] = oscar;
    romeo = 7;
    oscar = options[romeo];
    oscar = foxtrot.bind(entity)(oscar);
    tango[4] = oscar;
    yankee = 8;
    oscar = options[yankee];
    oscar = foxtrot.bind(entity)(oscar);
    tango[5] = oscar;
    offset = 9;
    oscar = options[offset];
    oscar = foxtrot.bind(entity)(oscar);
    tango[6] = oscar;
    verify = 10;
    oscar = options[verify];
    oscar = foxtrot.bind(entity)(oscar);
    tango[7] = oscar;
    oscar = {};
    mike = options[mike];
    mike = foxtrot.bind(entity)(mike);
    oscar['avatar'] = mike;
    mike = function() { // Original name: label
        report = _closure1_slot0;
        oscar = _closure1_slot2;
        entity = 11;
        mike = oscar[entity];
        tango = undefined;
        mike = report.bind(tango)(mike);
        zulu = mike.intl;
        mike = zulu.string;
        entity = oscar[entity];
        entity = report.bind(tango)(entity);
        entity = entity.t;
        entity = entity.u/VEND;
        entity = mike.bind(zulu)(entity);
        return entity;
    };
    oscar['label'] = mike;
    mike = new Array(8);
    mike[0] = oscar;
    oscar = {};
    sizing = options[sizing];
    sizing = foxtrot.bind(entity)(sizing);
    oscar['avatar'] = sizing;
    sizing = function() { // Original name: label
        report = _closure1_slot0;
        oscar = _closure1_slot2;
        entity = 11;
        mike = oscar[entity];
        tango = undefined;
        mike = report.bind(tango)(mike);
        zulu = mike.intl;
        mike = zulu.string;
        entity = oscar[entity];
        entity = report.bind(tango)(entity);
        entity = entity.t;
        entity = entity.pBx+d3;
        entity = mike.bind(zulu)(entity);
        return entity;
    };
    oscar['label'] = sizing;
    mike[1] = oscar;
    oscar = {};
    kilo = options[kilo];
    kilo = foxtrot.bind(entity)(kilo);
    oscar['avatar'] = kilo;
    kilo = function() { // Original name: label
        report = _closure1_slot0;
        oscar = _closure1_slot2;
        entity = 11;
        mike = oscar[entity];
        tango = undefined;
        mike = report.bind(tango)(mike);
        zulu = mike.intl;
        mike = zulu.string;
        entity = oscar[entity];
        entity = report.bind(tango)(entity);
        entity = entity.t;
        entity = entity.vbERm5;
        entity = mike.bind(zulu)(entity);
        return entity;
    };
    oscar['label'] = kilo;
    mike[2] = oscar;
    oscar = {};
    backup = options[backup];
    backup = foxtrot.bind(entity)(backup);
    oscar['avatar'] = backup;
    backup = function() { // Original name: label
        report = _closure1_slot0;
        oscar = _closure1_slot2;
        entity = 11;
        mike = oscar[entity];
        tango = undefined;
        mike = report.bind(tango)(mike);
        zulu = mike.intl;
        mike = zulu.string;
        entity = oscar[entity];
        entity = report.bind(tango)(entity);
        entity = entity.t;
        entity = entity.Ecxz3d;
        entity = mike.bind(zulu)(entity);
        return entity;
    };
    oscar['label'] = backup;
    mike[3] = oscar;
    oscar = {};
    romeo = options[romeo];
    romeo = foxtrot.bind(entity)(romeo);
    oscar['avatar'] = romeo;
    romeo = function() { // Original name: label
        report = _closure1_slot0;
        oscar = _closure1_slot2;
        entity = 11;
        mike = oscar[entity];
        tango = undefined;
        mike = report.bind(tango)(mike);
        zulu = mike.intl;
        mike = zulu.string;
        entity = oscar[entity];
        entity = report.bind(tango)(entity);
        entity = entity.t;
        entity = entity.Jb8PYG;
        entity = mike.bind(zulu)(entity);
        return entity;
    };
    oscar['label'] = romeo;
    mike[4] = oscar;
    oscar = {};
    yankee = options[yankee];
    yankee = foxtrot.bind(entity)(yankee);
    oscar['avatar'] = yankee;
    yankee = function() { // Original name: label
        report = _closure1_slot0;
        oscar = _closure1_slot2;
        entity = 11;
        mike = oscar[entity];
        tango = undefined;
        mike = report.bind(tango)(mike);
        zulu = mike.intl;
        mike = zulu.string;
        entity = oscar[entity];
        entity = report.bind(tango)(entity);
        entity = entity.t;
        entity = entity.3h0yoK;
        entity = mike.bind(zulu)(entity);
        return entity;
    };
    oscar['label'] = yankee;
    mike[5] = oscar;
    oscar = {};
    offset = options[offset];
    offset = foxtrot.bind(entity)(offset);
    oscar['avatar'] = offset;
    offset = function() { // Original name: label
        report = _closure1_slot0;
        oscar = _closure1_slot2;
        entity = 11;
        mike = oscar[entity];
        tango = undefined;
        mike = report.bind(tango)(mike);
        zulu = mike.intl;
        mike = zulu.string;
        entity = oscar[entity];
        entity = report.bind(tango)(entity);
        entity = entity.t;
        entity = entity.frIpZ2;
        entity = mike.bind(zulu)(entity);
        return entity;
    };
    oscar['label'] = offset;
    mike[6] = oscar;
    oscar = {};
    verify = options[verify];
    verify = foxtrot.bind(entity)(verify);
    oscar['avatar'] = verify;
    verify = function() { // Original name: label
        report = _closure1_slot0;
        oscar = _closure1_slot2;
        entity = 11;
        mike = oscar[entity];
        tango = undefined;
        mike = report.bind(tango)(mike);
        zulu = mike.intl;
        mike = zulu.string;
        entity = oscar[entity];
        entity = report.bind(tango)(entity);
        entity = entity.t;
        entity = entity.zpfUen;
        entity = mike.bind(zulu)(entity);
        return entity;
    };
    oscar['label'] = verify;
    mike[7] = oscar;
    var _closure1_slot6 = mike;
    oscar = 12;
    oscar = options[oscar];
    offset = golf.bind(entity)(oscar);
    verify = offset.createStyles;
    oscar = {};
    yankee = {'display': 'flex', 'alignItems': 'center', 'flex': 1};
    oscar['container'] = yankee;
    yankee = {'display': 'flex', 'flexDirection': 'row', 'marginTop': 20, 'justifyContent': 'space-between'};
    oscar['buttonsContainer'] = yankee;
    yankee = {'height': 48, 'width': 48};
    romeo = 13;
    backup = options[romeo];
    backup = foxtrot.bind(entity)(backup);
    backup = backup.radii;
    backup = backup.xl;
    yankee['borderRadius'] = backup;
    oscar['defaultAvatarButton'] = yankee;
    yankee = {'marginHorizontal': 8, 'width': 56, 'height': 56, 'padding': 2, 'borderWidth': 2, 'borderRadius': 28, 'borderColor': 'transparent', 'display': 'flex', 'alignItems': 'center', 'justifyContent': 'center'};
    oscar['defaultAvatarContainer'] = yankee;
    yankee = {};
    romeo = options[romeo];
    romeo = foxtrot.bind(entity)(romeo);
    romeo = romeo.colors;
    romeo = romeo.INTERACTIVE_ACTIVE;
    yankee['borderColor'] = romeo;
    oscar['defaultAvatarSelected'] = yankee;
    oscar = verify.bind(offset)(oscar);
    var _closure1_slot7 = oscar;
    oscar = 17;
    oscar = options[oscar];
    options = golf.bind(entity)(oscar);
    golf = options.fileFinishedImporting;
    oscar = 'modules/avatar/native/components/PresetAvatarSelect.tsx';
    oscar = golf.bind(options)(oscar);
    report = function(argFoo) { // Original name: PresetAvatarSelect
        entity = argFoo;
        mike = entity.onAvatarSelect;
        var _closure2_slot0 = mike;
        entity = entity.selectedAvatar;
        var _closure2_slot1 = entity;
        entity = _closure1_slot7;
        tango = undefined;
        verify = entity.bind(tango)();
        zulu = _closure1_slot5;
        mike = _closure1_slot3;
        entity = {};
        report = verify.container;
        entity['style'] = report;
        report = 'list';
        entity['accessibilityRole'] = report;
        offset = _closure1_slot4;
        backup = _closure1_slot0;
        kilo = _closure1_slot2;
        report = 14;
        report = kilo[report];
        report = backup.bind(tango)(report);
        golf = report.Text;
        report = {'variant': 'text-sm/medium', 'color': 'header-secondary'};
        yankee = 11;
        romeo = kilo[yankee];
        romeo = backup.bind(tango)(romeo);
        foxtrot = romeo.intl;
        romeo = foxtrot.string;
        yankee = kilo[yankee];
        yankee = backup.bind(tango)(yankee);
        yankee = yankee.t;
        yankee = yankee.yP28YG;
        yankee = romeo.bind(foxtrot)(yankee);
        report['children'] = yankee;
        golf = offset.bind(tango)(golf, report);
        report = new Array(3);
        report[0] = golf;
        offset = _closure1_slot4;
        golf = {};
        yankee = verify.buttonsContainer;
        golf['style'] = yankee;
        foxtrot = [0, 1, 2, 3];
        romeo = foxtrot.map;
        yankee = function(argFoo) {
            report = argFoo;
            var _closure3_slot0 = report;
            mike = _closure1_slot6;
            mike = mike[report];
            golf = mike.avatar;
            offset = mike.label;
            tango = _closure1_slot4;
            zulu = _closure1_slot8;
            mike = {};
            mike['source'] = golf;
            oscar = function() { // Original name: onSelect
                zulu = _closure2_slot0;
                mike = _closure3_slot0;
                entity = undefined;
                entity = zulu.bind(entity)(mike);
                return entity;
            };
            mike['onSelect'] = oscar;
            oscar = _closure2_slot1;
            oscar = oscar === report;
            mike['selected'] = oscar;
            golf = _closure1_slot0;
            yankee = _closure1_slot2;
            oscar = 11;
            options = yankee[oscar];
            entity = undefined;
            options = golf.bind(entity)(options);
            verify = options.intl;
            options = verify.formatToPlainString;
            oscar = yankee[oscar];
            oscar = golf.bind(entity)(oscar);
            oscar = oscar.t;
            golf = oscar.1K8jaW;
            oscar = {};
            yankee = 1;
            yankee = report + yankee;
            oscar['index'] = yankee;
            offset = offset.bind(entity)();
            oscar['description'] = offset;
            oscar = options.bind(verify)(golf, oscar);
            mike['accessibilityLabel'] = oscar;
            entity = tango.bind(entity)(zulu, mike, report);
            return entity;
        };
        yankee = romeo.bind(foxtrot)(yankee);
        golf['children'] = yankee;
        golf = offset.bind(tango)(mike, golf);
        report[1] = golf;
        golf = _closure1_slot4;
        oscar = {};
        verify = verify.buttonsContainer;
        oscar['style'] = verify;
        offset = [4, 5, 6, 7];
        verify = offset.map;
        options = function(argFoo) {
            report = argFoo;
            var _closure3_slot0 = report;
            mike = _closure1_slot6;
            mike = mike[report];
            golf = mike.avatar;
            offset = mike.label;
            tango = _closure1_slot4;
            zulu = _closure1_slot8;
            mike = {};
            mike['source'] = golf;
            oscar = function() { // Original name: onSelect
                zulu = _closure2_slot0;
                mike = _closure3_slot0;
                entity = undefined;
                entity = zulu.bind(entity)(mike);
                return entity;
            };
            mike['onSelect'] = oscar;
            oscar = _closure2_slot1;
            oscar = oscar === report;
            mike['selected'] = oscar;
            golf = _closure1_slot0;
            yankee = _closure1_slot2;
            oscar = 11;
            options = yankee[oscar];
            entity = undefined;
            options = golf.bind(entity)(options);
            verify = options.intl;
            options = verify.formatToPlainString;
            oscar = yankee[oscar];
            oscar = golf.bind(entity)(oscar);
            oscar = oscar.t;
            golf = oscar.1K8jaW;
            oscar = {};
            yankee = 1;
            yankee = report + yankee;
            oscar['index'] = yankee;
            offset = offset.bind(entity)();
            oscar['description'] = offset;
            oscar = options.bind(verify)(golf, oscar);
            mike['accessibilityLabel'] = oscar;
            entity = tango.bind(entity)(zulu, mike, report);
            return entity;
        };
        options = verify.bind(offset)(options);
        oscar['children'] = options;
        oscar = golf.bind(tango)(mike, oscar);
        report[2] = oscar;
        entity['children'] = report;
        entity = zulu.bind(tango)(mike, entity);
        return entity;
    };
    zulu['default'] = report;
    zulu['DEFAULT_AVATARS'] = tango;
    zulu['DEFAULT_AVATARS_WITH_LABELS'] = mike;
    return entity;
})();