// app/modules/gateway/GatewaySocketSingleton.tsx
export default (function(native1, native2, native3, native4, native5, native6, native7) {
    _fun0001: for(var _fun0001_ip = 0; ; ) switch(_fun0001_ip) {
 0:
        var7 = native2;
        var10 = native3;
        var3 = native6;
        var8 = native7;
        var _closure1_slot0 = var10;
        var1 = native4;
        var _closure1_slot1 = var1;
        var _closure1_slot2 = var8;
        var1 = global;
        var5 = var1.Object;
        var4 = var5.defineProperty;
        var2 = {};
        var1 = true;
        var2['value'] = var1;
        var1 = '__esModule';
        var1 = var4.bind(var5)(var3, var1, var2);
        var1 = 0;
        var2 = var8[var1];
        var1 = undefined;
        var2 = var10.bind(var1)(var2);
        var _closure1_slot3 = var2;
        var2 = 1;
        var2 = var8[var2];
        var5 = var10.bind(var1)(var2);
        var2 = var5.prototype;
        var4 = Object.create(var2, {constructor: {value: var5}});
        var16 = 'ConnectionStore';
        var17 = var4;
        var2 = new var17[var5](var16, var15);
        var2 = var2 instanceof Object ? var2 : var4;
        var _closure1_slot4 = var2;
        var2 = 2;
        var2 = var8[var2];
        var2 = var10.bind(var1)(var2);
        var4 = var2.prototype;
        var4 = Object.create(var4, {constructor: {value: var2}});
        var17 = var4;
        var2 = new var17[var2](var16);
        var5 = var2 instanceof Object ? var2 : var4;
        var _closure1_slot5 = var5;
        var2 = 3;
        var2 = var8[var2];
        var2 = var10.bind(var1)(var2);
        var4 = var2.prototype;
        var4 = Object.create(var4, {constructor: {value: var2}});
        var17 = var4;
        var16 = var5;
        var2 = new var17[var2](var16, var15);
        var4 = var2 instanceof Object ? var2 : var4;
        var _closure1_slot6 = var4;
        var2 = 4;
        var2 = var8[var2];
        var2 = var10.bind(var1)(var2);
        var9 = var2.prototype;
        var9 = Object.create(var9, {constructor: {value: var2}});
        var17 = var9;
        var16 = var5;
        var2 = new var17[var2](var16, var15);
        var2 = var2 instanceof Object ? var2 : var9;
        var9 = function() {
            _fun0002: for(var _fun0002_ip = 0; ; ) switch(_fun0002_ip) {
 0:
                var2 = _closure1_slot3;
                var1 = var2.getToken;
                var3 = var1.bind(var2)();
                var6 = _closure1_slot4;
                var5 = var6.verbose;
                var4 = {};
                var1 = null;
                var2 = var1 != var3;
                var4['hasToken'] = var2;
                var2 = 'handleIdentify called';
                var2 = var5.bind(var6)(var2, var4);
                if(!(var1 != var3)) { _fun0002_ip = 342; continue _fun0002 }
 61:
                var4 = _closure1_slot0;
                var2 = _closure1_slot2;
                var5 = 5;
                var6 = var2[var5];
                var5 = undefined;
                var8 = var4.bind(var5)(var6);
                var6 = var8.getState;
                var11 = var6.bind(var8)();
                var6 = 6;
                var2 = var2[var6];
                var4 = var4.bind(var5)(var2);
                var2 = var4.getLatestTaskRunOn;
                var4 = var2.bind(var4)();
                var2 = var1 != var4;
                var10 = null;
                if(!var2) { _fun0002_ip = 155; continue _fun0002 }
 124:
                var2 = global;
                var8 = var2.Date;
                var2 = var8.now;
                var2 = var2.bind(var8)();
                var4 = var2 - var4;
                var2 = 1000;
                var10 = var4 / var2;
 155:
                var2 = {};
                var2['token'] = var3;
                var8 = {};
                var4 = _closure1_slot0;
                var3 = _closure1_slot2;
                var9 = 7;
                var9 = var3[var9];
                var12 = var4.bind(var5)(var9);
                var9 = var12.getSuperProperties;
                var13 = var9.bind(var12)();
                var14 = var8;
                var9 = copyDataProperties(var14, var13);
                var9 = 'client_app_state';
                var8[var9] = var11;
                var11 = false;
                var9 = 'is_fast_connect';
                var8[var9] = var11;
                var9 = var3[var6];
                var11 = var4.bind(var5)(var9);
                var9 = var11.getHeadlessTasks;
                var11 = var9.bind(var11)();
                var9 = 'latest_headless_tasks';
                var8[var9] = var11;
                var9 = 'latest_headless_task_run_seconds_before';
                var8[var9] = var10;
                var10 = _closure1_slot1;
                var9 = 8;
                var9 = var3[var9];
                var10 = var10.bind(var5)(var9);
                var9 = var10.describeConnectionReasons;
                var10 = var9.bind(var10)();
                var9 = 'gateway_connect_reasons';
                var8[var9] = var10;
                var2['properties'] = var8;
                var8 = _closure1_slot6;
                var7 = var8.getInitialState;
                var7 = var7.bind(var8)();
                var2['presence'] = var7;
                var3 = var3[var6];
                var4 = var4.bind(var5)(var3);
                var3 = var4.clear;
                var3 = var3.bind(var4)();
                return var2;
 342:
                return var1;
            }
        };
        var5['handleIdentify'] = var9;
        var9 = 9;
        var9 = var8[var9];
        var11 = var7.bind(var1)(var9);
        var9 = var11.isDesktop;
        var9 = var9.bind(var11)();
        if(!var9) { _fun0001_ip = 309; continue _fun0001 }
 268:
        var9 = 10;
        var9 = var8[var9];
        var9 = var10.bind(var1)(var9);
        var13 = var9.remotePowerMonitor;
        var12 = var13.on;
        var11 = 'resume';
        var9 = function() {
            var4 = _closure1_slot5;
            var3 = var4.expeditedHeartbeat;
            var2 = 5000;
            var1 = 'power monitor resumed';
            var1 = var3.bind(var4)(var2, var1);
            var1 = undefined;
            return var1;
        };
        var9 = var12.bind(var13)(var11, var9);
 309:
        var9 = 11;
        var11 = var8[var9];
        var13 = var10.bind(var1)(var11);
        var12 = var13.addOfflineCallback;
        var11 = function() {
            var4 = _closure1_slot0;
            var3 = _closure1_slot2;
            var1 = 6;
            var3 = var3[var1];
            var1 = undefined;
            var5 = var4.bind(var1)(var3);
            var4 = var5.recordStartHeadlessTask;
            var3 = 'GatewaySocket.offline';
            var3 = var4.bind(var5)(var3);
            var6 = _closure1_slot5;
            var5 = var6.networkStateChange;
            var4 = 15000;
            var3 = 'network detected offline.';
            var2 = false;
            var2 = var5.bind(var6)(var4, var3, var2);
            return var1;
        };
        var11 = var12.bind(var13)(var11);
        var9 = var8[var9];
        var11 = var10.bind(var1)(var9);
        var10 = var11.addOnlineCallback;
        var9 = function() {
            var4 = _closure1_slot0;
            var3 = _closure1_slot2;
            var1 = 6;
            var3 = var3[var1];
            var1 = undefined;
            var5 = var4.bind(var1)(var3);
            var4 = var5.recordStartHeadlessTask;
            var3 = 'GatewaySocket.online';
            var3 = var4.bind(var5)(var3);
            var5 = _closure1_slot5;
            var4 = var5.networkStateChange;
            var3 = 5000;
            var2 = 'network detected online.';
            var2 = var4.bind(var5)(var3, var2);
            return var1;
        };
        var9 = var10.bind(var11)(var9);
        var11 = var5.on;
        var10 = 'disconnect';
        var9 = function(arg1) {
            var1 = arg1;
            var6 = var1.code;
            var5 = var1.reason;
            var3 = _closure1_slot0;
            var2 = _closure1_slot2;
            var1 = 12;
            var2 = var2[var1];
            var1 = undefined;
            var4 = var3.bind(var1)(var2);
            var3 = var4.dispatch;
            var2 = {};
            var7 = 'CONNECTION_CLOSED';
            var2['type'] = var7;
            var2['code'] = var6;
            var2['reason'] = var5;
            var2 = var3.bind(var4)(var2);
            return var1;
        };
        var9 = var11.bind(var5)(var10, var9);
        var10 = var5.on;
        var9 = 'close';
        var6 = function(arg1) {
            var1 = arg1;
            var6 = var1.code;
            var5 = var1.reason;
            var3 = _closure1_slot0;
            var2 = _closure1_slot2;
            var1 = 12;
            var2 = var2[var1];
            var1 = undefined;
            var4 = var3.bind(var1)(var2);
            var3 = var4.dispatch;
            var2 = {};
            var7 = 'CONNECTION_INTERRUPTED';
            var2['type'] = var7;
            var2['code'] = var6;
            var2['reason'] = var5;
            var2 = var3.bind(var4)(var2);
            return var1;
        };
        var6 = var10.bind(var5)(var9, var6);
        var6 = 13;
        var6 = var8[var6];
        var8 = var7.bind(var1)(var6);
        var7 = var8.fileFinishedImporting;
        var6 = 'modules/gateway/GatewaySocketSingleton.tsx';
        var6 = var7.bind(var8)(var6);
        var3['socket'] = var5;
        var3['localPresenceState'] = var4;
        var3['localVoiceState'] = var2;
        return var1;
    }
})();