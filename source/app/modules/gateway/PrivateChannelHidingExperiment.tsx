// app/modules/gateway/PrivateChannelHidingExperiment.tsx
export default (function(_, argBar, __, ___, ____, argFre, argPlu) {
    report = argBar;
    zuuluu = argFre;
    oscard = argPlu;
    entity = global;
    option = entity.Object;
    golfie = option.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(option)(zuuluu, entity, tangon);
    entity = 0;
    tangon = oscard[entity];
    entity = undefined;
    verify = report.bind(entity)(tangon);
    option = verify.createExperiment;
    golfie = {'kind': 'user', 'id': '2024-08_private_channel_hiding', 'label': 'Private Channel Hiding'};
    tangon = {'enableObfuscation': false, 'enableIntegrityCheck': false};
    golfie['defaultConfig'] = tangon;
    yankee = {'id': 1, 'label': 'Obfuscation Enabled'};
    tangon = 1;
    offset = {'enableObfuscation': true, 'enableIntegrityCheck': false};
    yankee['config'] = offset;
    offset = new Array(2);
    offset[0] = yankee;
    yankee = {'id': 2, 'label': 'Obfuscation + Integrity Check Enabled'};
    romeon = {'enableObfuscation': true, 'enableIntegrityCheck': true};
    yankee['config'] = romeon;
    offset[1] = yankee;
    golfie['treatments'] = offset;
    golfie = option.bind(verify)(golfie);
    var _closure1_slot0 = golfie;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/gateway/PrivateChannelHidingExperiment.tsx';
    tangon = report.bind(oscard)(tangon);
    tangon = function() { // Original name: isChannelMetadataObfuscationEnabled
        zuuluu = _closure1_slot0;
        michal = zuuluu.getCurrentConfig;
        entity = {};
        tangon = '1';
        entity['location'] = tangon;
        entity = michal.bind(zuuluu)(entity);
        entity = entity.enableObfuscation;
        return entity;
    };
    zuuluu['isChannelMetadataObfuscationEnabled'] = tangon;
    michal = function() { // Original name: isChannelMetadataIntegrityCheckEnabled
        zuuluu = _closure1_slot0;
        michal = zuuluu.getCurrentConfig;
        entity = {};
        tangon = '1';
        entity['location'] = tangon;
        entity = michal.bind(zuuluu)(entity);
        entity = entity.enableIntegrityCheck;
        return entity;
    };
    zuuluu['isChannelMetadataIntegrityCheckEnabled'] = michal;
    return entity;
})();