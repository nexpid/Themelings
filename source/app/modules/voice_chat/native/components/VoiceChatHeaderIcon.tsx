// app/modules/voice_chat/native/components/VoiceChatHeaderIcon.tsx
export default (function(argFoo, argBar, argBaz, argCorge, _, argFred, argPlugh) {
    report = argBar;
    yankee = argBaz;
    zulu = argFred;
    oscar = argPlugh;
    var _closure1_slot0 = report;
    var _closure1_slot1 = yankee;
    var _closure1_slot2 = oscar;
    entity = function(argFoo) { // Original name: VoiceChatCallScreenHeaderIconInner
        _fun103124: for(var _fun103124_ip = 0; ; ) switch(_fun103124_ip) {
 0:
            entity = argFoo;
            options = entity.children;
            yankee = entity.source;
            verify = entity.onPress;
            romeo = entity.accessibilityLabel;
            entity = _closure1_slot8;
            tango = undefined;
            foxtrot = entity.bind(tango)();
            zulu = _closure1_slot6;
            mike = _closure1_slot3;
            entity = {};
            report = foxtrot.chatIconContainer;
            entity['style'] = report;
            golf = _closure1_slot6;
            oscar = _closure1_slot1;
            backup = _closure1_slot2;
            report = 9;
            report = backup[report];
            oscar = oscar.bind(tango)(report);
            report = {};
            foxtrot = foxtrot.chatIcon;
            report['containerStyle'] = foxtrot;
            report['accessibilityLabel'] = romeo;
            report['source'] = yankee;
            yankee = null;
            if(!(yankee == verify)) { _fun103124_ip = 133; continue _fun103124 }
 107:
            yankee = _closure1_slot1;
            romeo = _closure1_slot2;
            offset = 10;
            offset = romeo[offset];
            offset = yankee.bind(tango)(offset);
            verify = offset.noop;
 133:
            report['onPress'] = verify;
            report['children'] = options;
            report = golf.bind(tango)(oscar, report);
            entity['children'] = report;
            entity = zulu.bind(tango)(mike, entity);
            return entity;
        }
    };
    var _closure1_slot9 = entity;
    entity = global;
    options = entity.Object;
    golf = options.defineProperty;
    tango = {};
    entity = true;
    tango['value'] = entity;
    entity = '__esModule';
    entity = golf.bind(options)(zulu, entity, tango);
    romeo = 0;
    golf = oscar[romeo];
    tango = argCorge;
    entity = undefined;
    tango = tango.bind(entity)(golf);
    tango = 1;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.View;
    var _closure1_slot3 = tango;
    tango = 2;
    tango = oscar[tango];
    tango = yankee.bind(entity)(tango);
    var _closure1_slot4 = tango;
    tango = 3;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.ThemeTypes;
    var _closure1_slot5 = tango;
    tango = 4;
    golf = oscar[tango];
    golf = report.bind(entity)(golf);
    golf = golf.jsx;
    var _closure1_slot6 = golf;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.jsxs;
    var _closure1_slot7 = tango;
    tango = 5;
    tango = oscar[tango];
    options = report.bind(entity)(tango);
    golf = options.createStyles;
    tango = {};
    verify = {'width': 32, 'height': 32, 'borderRadius': null, 'alignSelf': 'center', 'padding': 6};
    offset = 6;
    foxtrot = oscar[offset];
    foxtrot = yankee.bind(entity)(foxtrot);
    foxtrot = foxtrot.radii;
    foxtrot = foxtrot.lg;
    verify['borderRadius'] = foxtrot;
    foxtrot = oscar[offset];
    foxtrot = yankee.bind(entity)(foxtrot);
    foxtrot = foxtrot.colors;
    foxtrot = foxtrot.REDESIGN_BUTTON_TERTIARY_BACKGROUND;
    verify['backgroundColor'] = foxtrot;
    tango['headerButton'] = verify;
    verify = {};
    foxtrot = 0.6;
    verify['opacity'] = foxtrot;
    tango['disabledOpacity'] = verify;
    verify = {};
    verify['margin'] = romeo;
    tango['headerIcon'] = verify;
    verify = {'marginRight': 12, 'height': null, 'flexDirection': 'row', 'alignItems': 'center'};
    romeo = 7;
    romeo = oscar[romeo];
    romeo = report.bind(entity)(romeo);
    romeo = romeo.NAV_BAR_HEIGHT;
    verify['height'] = romeo;
    tango['chatIconContainer'] = verify;
    verify = {'marginHorizontal': 0, 'width': 32, 'height': 32};
    tango['chatIcon'] = verify;
    verify = {};
    offset = oscar[offset];
    offset = yankee.bind(entity)(offset);
    offset = offset.colors;
    offset = offset.ICON_PRIMARY;
    verify['backgroundColor'] = offset;
    tango['badge'] = verify;
    tango = golf.bind(options)(tango);
    var _closure1_slot8 = tango;
    tango = 14;
    tango = oscar[tango];
    oscar = report.bind(entity)(tango);
    report = oscar.fileFinishedImporting;
    tango = 'modules/voice_chat/native/components/VoiceChatHeaderIcon.tsx';
    tango = report.bind(oscar)(tango);
    tango = function(argFoo) { // Original name: VoiceChatHeaderIcon
        _fun103125: for(var _fun103125_ip = 0; ; ) switch(_fun103125_ip) {
 0:
            entity = argFoo;
            verify = entity.accessibilityLabel;
            golf = entity.onPress;
            foxtrot = entity.source;
            oscar = entity.children;
            options = entity.disabled;
            entity = _closure1_slot8;
            tango = undefined;
            romeo = entity.bind(tango)();
            zulu = _closure1_slot7;
            mike = _closure1_slot0;
            offset = _closure1_slot2;
            entity = 12;
            entity = offset[entity];
            entity = mike.bind(tango)(entity);
            mike = entity.PressableOpacity;
            entity = {'disabled': null, 'activeOpacity': 0.5, 'accessibilityRole': 'button'};
            entity['disabled'] = options;
            entity['accessibilityLabel'] = verify;
            entity['onPress'] = golf;
            verify = romeo.headerButton;
            golf = new Array(2);
            golf[0] = verify;
            if(!options) { _fun103125_ip = 122; continue _fun103125 }
 116:
            options = romeo.disabledOpacity;
 122:
            golf[1] = options;
            entity['style'] = golf;
            options = _closure1_slot6;
            offset = _closure1_slot1;
            yankee = _closure1_slot2;
            verify = 13;
            report = yankee[verify];
            golf = offset.bind(tango)(report);
            report = {};
            report['source'] = foxtrot;
            romeo = romeo.badge;
            romeo = romeo.backgroundColor;
            report['color'] = romeo;
            verify = yankee[verify];
            verify = offset.bind(tango)(verify);
            verify = verify.Sizes;
            verify = verify.SMALL_20;
            report['size'] = verify;
            golf = options.bind(tango)(golf, report);
            report = new Array(2);
            report[0] = golf;
            report[1] = oscar;
            entity['children'] = report;
            entity = zulu.bind(tango)(mike, entity);
            return entity;
        }
    };
    zulu['default'] = tango;
    tango = function(argFoo) { // Original name: useVoiceChatMentions
        oscar = argFoo;
        var _closure2_slot0 = oscar;
        report = _closure1_slot0;
        tango = _closure1_slot2;
        zulu = 8;
        tango = tango[zulu];
        zulu = undefined;
        report = report.bind(zulu)(tango);
        tango = report.useStateFromStoresObject;
        mike = _closure1_slot4;
        zulu = new Array(1);
        zulu[0] = mike;
        mike = new Array(1);
        mike[0] = oscar;
        entity = function() {
            entity = {};
            tango = _closure1_slot4;
            mike = tango.getUnreadCount;
            zulu = _closure2_slot0;
            mike = mike.bind(tango)(zulu);
            entity['unreadCount'] = mike;
            mike = tango.getMentionCount;
            mike = mike.bind(tango)(zulu);
            entity['mentionCount'] = mike;
            return entity;
        };
        entity = tango.bind(report)(zulu, entity, mike);
        return entity;
    };
    zulu['useVoiceChatMentions'] = tango;
    mike = function(argFoo) { // Original name: VoiceChatCallScreenHeaderIcon
        tango = _closure1_slot6;
        mike = _closure1_slot0;
        zulu = _closure1_slot2;
        entity = 11;
        entity = zulu[entity];
        zulu = undefined;
        entity = mike.bind(zulu)(entity);
        mike = entity.ThemeContextProvider;
        entity = {};
        oscar = _closure1_slot5;
        oscar = oscar.DARK;
        entity['theme'] = oscar;
        golf = _closure1_slot6;
        oscar = _closure1_slot9;
        report = {};
        verify = argFoo;
        offset = report;
        options = copyDataProperties(offset, verify);
        report = golf.bind(zulu)(oscar, report);
        entity['children'] = report;
        entity = tango.bind(zulu)(mike, entity);
        return entity;
    };
    zulu['VoiceChatCallScreenHeaderIcon'] = mike;
    return entity;
})();