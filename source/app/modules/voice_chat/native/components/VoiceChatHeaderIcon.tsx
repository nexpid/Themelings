// app/modules/voice_chat/native/components/VoiceChatHeaderIcon.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    report = argBar;
    yankee = argBaz;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    var _closure1_slot1 = yankee;
    var _closure1_slot2 = oscard;
    entity = function(argFoo) { // Original name: VoiceChatCallScreenHeaderIconInner
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            entity = argFoo;
            option = entity.children;
            yankee = entity.source;
            verify = entity.onPress;
            romeon = entity.accessibilityLabel;
            entity = _closure1_slot8;
            tangon = undefined;
            foxtra = entity.bind(tangon)();
            zuuluu = _closure1_slot6;
            michal = _closure1_slot3;
            entity = {};
            report = foxtra.chatIconContainer;
            entity['style'] = report;
            golfie = _closure1_slot6;
            oscard = _closure1_slot1;
            backup = _closure1_slot2;
            report = 9;
            report = backup[report];
            oscard = oscard.bind(tangon)(report);
            report = {};
            foxtra = foxtra.chatIcon;
            report['containerStyle'] = foxtra;
            report['accessibilityLabel'] = romeon;
            report['source'] = yankee;
            yankee = null;
            if(!(yankee == verify)) { _fun00002_ip = 133; continue _fun00001 }
 107:
            yankee = _closure1_slot1;
            romeon = _closure1_slot2;
            offset = 10;
            offset = romeon[offset];
            offset = yankee.bind(tangon)(offset);
            verify = offset.noop;
 133:
            report['onPress'] = verify;
            report['children'] = option;
            report = golfie.bind(tangon)(oscard, report);
            entity['children'] = report;
            entity = zuuluu.bind(tangon)(michal, entity);
            return entity;
        }
    };
    var _closure1_slot9 = entity;
    entity = global;
    option = entity.Object;
    golfie = option.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(option)(zuuluu, entity, tangon);
    romeon = 0;
    golfie = oscard[romeon];
    tangon = argCor;
    entity = undefined;
    tangon = tangon.bind(entity)(golfie);
    tangon = 1;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.View;
    var _closure1_slot3 = tangon;
    tangon = 2;
    tangon = oscard[tangon];
    tangon = yankee.bind(entity)(tangon);
    var _closure1_slot4 = tangon;
    tangon = 3;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.ThemeTypes;
    var _closure1_slot5 = tangon;
    tangon = 4;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    golfie = tangon.jsx;
    var _closure1_slot6 = golfie;
    tangon = tangon.jsxs;
    var _closure1_slot7 = tangon;
    tangon = 5;
    tangon = oscard[tangon];
    option = report.bind(entity)(tangon);
    golfie = option.createStyles;
    tangon = {};
    verify = {'width': 32, 'height': 32, 'borderRadius': null, 'alignSelf': 'center', 'padding': 6};
    offset = 6;
    foxtra = oscard[offset];
    foxtra = yankee.bind(entity)(foxtra);
    foxtra = foxtra.radii;
    foxtra = foxtra.lg;
    verify['borderRadius'] = foxtra;
    foxtra = oscard[offset];
    foxtra = yankee.bind(entity)(foxtra);
    foxtra = foxtra.colors;
    foxtra = foxtra.REDESIGN_BUTTON_TERTIARY_BACKGROUND;
    verify['backgroundColor'] = foxtra;
    tangon['headerButton'] = verify;
    verify = {};
    foxtra = 0.6;
    verify['opacity'] = foxtra;
    tangon['disabledOpacity'] = verify;
    verify = {};
    verify['margin'] = romeon;
    tangon['headerIcon'] = verify;
    verify = {'marginRight': 12, 'height': null, 'flexDirection': 'row', 'alignItems': 'center'};
    romeon = 7;
    romeon = oscard[romeon];
    romeon = report.bind(entity)(romeon);
    romeon = romeon.NAV_BAR_HEIGHT;
    verify['height'] = romeon;
    tangon['chatIconContainer'] = verify;
    verify = {'marginHorizontal': 0, 'width': 32, 'height': 32};
    tangon['chatIcon'] = verify;
    verify = {};
    offset = oscard[offset];
    offset = yankee.bind(entity)(offset);
    offset = offset.colors;
    offset = offset.ICON_PRIMARY;
    verify['backgroundColor'] = offset;
    tangon['badge'] = verify;
    tangon = golfie.bind(option)(tangon);
    var _closure1_slot8 = tangon;
    tangon = 14;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/voice_chat/native/components/VoiceChatHeaderIcon.tsx';
    tangon = report.bind(oscard)(tangon);
    tangon = function(argFoo) { // Original name: VoiceChatHeaderIcon
        _fun00003: for(var _fun00004_ip = 0; ; ) switch(_fun00004_ip) {
 0:
            entity = argFoo;
            verify = entity.accessibilityLabel;
            golfie = entity.onPress;
            foxtra = entity.source;
            oscard = entity.children;
            option = entity.disabled;
            entity = _closure1_slot8;
            tangon = undefined;
            romeon = entity.bind(tangon)();
            zuuluu = _closure1_slot7;
            michal = _closure1_slot0;
            offset = _closure1_slot2;
            entity = 12;
            entity = offset[entity];
            entity = michal.bind(tangon)(entity);
            michal = entity.PressableOpacity;
            entity = {'disabled': null, 'activeOpacity': 0.5, 'accessibilityRole': 'button'};
            entity['disabled'] = option;
            entity['accessibilityLabel'] = verify;
            entity['onPress'] = golfie;
            verify = romeon.headerButton;
            golfie = new Array(2);
            golfie[0] = verify;
            if(!option) { _fun00004_ip = 122; continue _fun00003 }
 116:
            option = romeon.disabledOpacity;
 122:
            golfie[1] = option;
            entity['style'] = golfie;
            option = _closure1_slot6;
            offset = _closure1_slot1;
            yankee = _closure1_slot2;
            verify = 13;
            report = yankee[verify];
            golfie = offset.bind(tangon)(report);
            report = {};
            report['source'] = foxtra;
            romeon = romeon.badge;
            romeon = romeon.backgroundColor;
            report['color'] = romeon;
            verify = yankee[verify];
            verify = offset.bind(tangon)(verify);
            verify = verify.Sizes;
            verify = verify.SMALL_20;
            report['size'] = verify;
            golfie = option.bind(tangon)(golfie, report);
            report = new Array(2);
            report[0] = golfie;
            report[1] = oscard;
            entity['children'] = report;
            entity = zuuluu.bind(tangon)(michal, entity);
            return entity;
        }
    };
    zuuluu['default'] = tangon;
    tangon = function(argFoo) { // Original name: useVoiceChatMentions
        oscard = argFoo;
        var _closure2_slot0 = oscard;
        report = _closure1_slot0;
        tangon = _closure1_slot2;
        zuuluu = 8;
        tangon = tangon[zuuluu];
        zuuluu = undefined;
        report = report.bind(zuuluu)(tangon);
        tangon = report.useStateFromStoresObject;
        michal = _closure1_slot4;
        zuuluu = new Array(1);
        zuuluu[0] = michal;
        michal = new Array(1);
        michal[0] = oscard;
        entity = function() {
            entity = {};
            tangon = _closure1_slot4;
            michal = tangon.getUnreadCount;
            zuuluu = _closure2_slot0;
            michal = michal.bind(tangon)(zuuluu);
            entity['unreadCount'] = michal;
            michal = tangon.getMentionCount;
            michal = michal.bind(tangon)(zuuluu);
            entity['mentionCount'] = michal;
            return entity;
        };
        entity = tangon.bind(report)(zuuluu, entity, michal);
        return entity;
    };
    zuuluu['useVoiceChatMentions'] = tangon;
    michal = function(argFoo) { // Original name: VoiceChatCallScreenHeaderIcon
        tangon = _closure1_slot6;
        michal = _closure1_slot0;
        zuuluu = _closure1_slot2;
        entity = 11;
        entity = zuuluu[entity];
        zuuluu = undefined;
        entity = michal.bind(zuuluu)(entity);
        michal = entity.ThemeContextProvider;
        entity = {};
        oscard = _closure1_slot5;
        oscard = oscard.DARK;
        entity['theme'] = oscard;
        golfie = _closure1_slot6;
        oscard = _closure1_slot9;
        report = {};
        verify = argFoo;
        offset = report;
        option = copyDataProperties(offset, verify);
        report = golfie.bind(zuuluu)(oscard, report);
        entity['children'] = report;
        entity = tangon.bind(zuuluu)(michal, entity);
        return entity;
    };
    zuuluu['VoiceChatCallScreenHeaderIcon'] = michal;
    return entity;
})();