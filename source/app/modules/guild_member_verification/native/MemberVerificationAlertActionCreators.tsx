// app/modules/guild_member_verification/native/MemberVerificationAlertActionCreators.tsx
export default (function(argFoo, argBar, argBaz, argCorge, _, argFred, argPlugh) {
    golf = argBar;
    report = argCorge;
    zulu = argFred;
    options = argPlugh;
    var _closure1_slot0 = golf;
    entity = argBaz;
    var _closure1_slot1 = entity;
    var _closure1_slot2 = report;
    var _closure1_slot3 = options;
    entity = global;
    verify = entity.Object;
    oscar = verify.defineProperty;
    tango = {};
    entity = true;
    tango['value'] = entity;
    entity = '__esModule';
    entity = oscar.bind(verify)(zulu, entity, tango);
    entity = 0;
    tango = options[entity];
    entity = undefined;
    tango = report.bind(entity)(tango);
    tango = 1;
    tango = options[tango];
    tango = golf.bind(entity)(tango);
    tango = tango.jsx;
    var _closure1_slot4 = tango;
    report = function(argFoo) { // Original name: openMemberVerificationCancelPendingAlert
        entity = argFoo;
        mike = entity.guildId;
        var _closure2_slot0 = mike;
        mike = entity.confirmText;
        var _closure2_slot1 = mike;
        mike = entity.subtitleText;
        var _closure2_slot2 = mike;
        entity = entity.onClose;
        var _closure2_slot3 = entity;
        oscar = _closure1_slot2;
        tango = _closure1_slot3;
        entity = 2;
        zulu = tango[entity];
        entity = undefined;
        oscar = oscar.bind(entity)(zulu);
        zulu = oscar.dismissGlobalKeyboard;
        zulu = zulu.bind(oscar)();
        zulu = _closure1_slot1;
        mike = 3;
        mike = tango[mike];
        tango = zulu.bind(entity)(mike);
        zulu = tango.openLazy;
        mike = {};
        report = function() { // Original name: importer
            zulu = _closure1_slot0;
            entity = _closure1_slot3;
            mike = 5;
            mike = entity[mike];
            tango = undefined;
            zulu = zulu.bind(tango)(mike);
            mike = 7;
            mike = entity[mike];
            entity = entity.paths;
            zulu = zulu.bind(tango)(mike, entity);
            mike = zulu.then;
            entity = function(argFoo) {
                mike = argFoo;
                mike = mike.default;
                var _closure4_slot0 = mike;
                entity = function(argFoo) {
                    tango = _closure1_slot4;
                    zulu = _closure4_slot0;
                    mike = {};
                    options = argFoo;
                    verify = mike;
                    entity = copyDataProperties(verify, options);
                    golf = _closure2_slot0;
                    oscar = 'guildId';
                    mike[oscar] = golf;
                    golf = _closure2_slot1;
                    oscar = 'confirmText';
                    mike[oscar] = golf;
                    golf = _closure2_slot2;
                    oscar = 'subtitleText';
                    mike[oscar] = golf;
                    oscar = _closure1_slot6;
                    report = _closure2_slot3;
                    entity = undefined;
                    oscar = oscar.bind(entity)(report);
                    report = 'onClose';
                    mike[report] = oscar;
                    entity = tango.bind(entity)(zulu, mike);
                    return entity;
                };
                return entity;
            };
            entity = mike.bind(zulu)(entity);
            return entity;
        };
        mike['importer'] = report;
        mike = zulu.bind(tango)(mike);
        return entity;
    };
    var _closure1_slot5 = report;
    tango = function(argFoo) { // Original name: closeMemberVerificationAlert
        mike = argFoo;
        var _closure2_slot0 = mike;
        entity = function() {
            _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
                zulu = _closure1_slot1;
                mike = _closure1_slot3;
                entity = 3;
                mike = mike[entity];
                entity = undefined;
                zulu = zulu.bind(entity)(mike);
                mike = zulu.close;
                mike = mike.bind(zulu)();
                tango = _closure2_slot0;
                zulu = null;
                if(!(zulu != tango)) { _fun00002_ip = 56; continue _fun00001 }
 48:
                mike = _closure2_slot0;
                mike = mike.bind(entity)();
 56:
                return entity;
            }
        };
        return entity;
    };
    var _closure1_slot6 = tango;
    oscar = 13;
    oscar = options[oscar];
    options = golf.bind(entity)(oscar);
    golf = options.fileFinishedImporting;
    oscar = 'modules/guild_member_verification/native/MemberVerificationAlertActionCreators.tsx';
    oscar = golf.bind(options)(oscar);
    oscar = function(argFoo, argBar) {
        entity = argFoo;
        var _closure2_slot0 = entity;
        entity = argBar;
        var _closure2_slot1 = entity;
        oscar = _closure1_slot2;
        tango = _closure1_slot3;
        entity = 2;
        zulu = tango[entity];
        entity = undefined;
        oscar = oscar.bind(entity)(zulu);
        zulu = oscar.dismissGlobalKeyboard;
        zulu = zulu.bind(oscar)();
        zulu = _closure1_slot1;
        mike = 3;
        mike = tango[mike];
        tango = zulu.bind(entity)(mike);
        zulu = tango.openLazy;
        mike = {};
        report = function() { // Original name: importer
            zulu = _closure1_slot0;
            entity = _closure1_slot3;
            mike = 5;
            mike = entity[mike];
            tango = undefined;
            zulu = zulu.bind(tango)(mike);
            mike = 4;
            mike = entity[mike];
            entity = entity.paths;
            zulu = zulu.bind(tango)(mike, entity);
            mike = zulu.then;
            entity = function(argFoo) {
                mike = argFoo;
                mike = mike.default;
                var _closure4_slot0 = mike;
                entity = function(argFoo) {
                    tango = _closure1_slot4;
                    zulu = _closure4_slot0;
                    mike = {};
                    golf = argFoo;
                    options = mike;
                    entity = copyDataProperties(options, golf);
                    oscar = _closure2_slot0;
                    report = 'guildId';
                    mike[report] = oscar;
                    report = _closure2_slot1;
                    entity = 'handleConfirmAndAck';
                    mike[entity] = report;
                    entity = undefined;
                    entity = tango.bind(entity)(zulu, mike);
                    return entity;
                };
                return entity;
            };
            entity = mike.bind(zulu)(entity);
            return entity;
        };
        mike['importer'] = report;
        mike = zulu.bind(tango)(mike);
        return entity;
    };
    zulu['openMemberVerificationSuccessAlert'] = oscar;
    oscar = function(argFoo, argBar) {
        entity = argFoo;
        var _closure2_slot0 = entity;
        entity = argBar;
        var _closure2_slot1 = entity;
        oscar = _closure1_slot2;
        tango = _closure1_slot3;
        entity = 2;
        zulu = tango[entity];
        entity = undefined;
        oscar = oscar.bind(entity)(zulu);
        zulu = oscar.dismissGlobalKeyboard;
        zulu = zulu.bind(oscar)();
        zulu = _closure1_slot1;
        mike = 3;
        mike = tango[mike];
        tango = zulu.bind(entity)(mike);
        zulu = tango.openLazy;
        mike = {};
        report = function() { // Original name: importer
            zulu = _closure1_slot0;
            entity = _closure1_slot3;
            mike = 5;
            mike = entity[mike];
            tango = undefined;
            zulu = zulu.bind(tango)(mike);
            mike = 6;
            mike = entity[mike];
            entity = entity.paths;
            zulu = zulu.bind(tango)(mike, entity);
            mike = zulu.then;
            entity = function(argFoo) {
                mike = argFoo;
                mike = mike.default;
                var _closure4_slot0 = mike;
                entity = function(argFoo) {
                    tango = _closure1_slot4;
                    zulu = _closure4_slot0;
                    mike = {};
                    options = argFoo;
                    verify = mike;
                    entity = copyDataProperties(verify, options);
                    golf = _closure2_slot0;
                    oscar = 'guildId';
                    mike[oscar] = golf;
                    oscar = _closure1_slot6;
                    report = _closure2_slot1;
                    entity = undefined;
                    oscar = oscar.bind(entity)(report);
                    report = 'onClose';
                    mike[report] = oscar;
                    entity = tango.bind(entity)(zulu, mike);
                    return entity;
                };
                return entity;
            };
            entity = mike.bind(zulu)(entity);
            return entity;
        };
        mike['importer'] = report;
        mike = zulu.bind(tango)(mike);
        return entity;
    };
    zulu['openMemberVerificationPendingAlert'] = oscar;
    zulu['openMemberVerificationCancelPendingAlert'] = report;
    report = function(argFoo) {
        _fun00003: for(var _fun00004_ip = 0; ; ) switch(_fun00004_ip) {
 0:
            entity = argFoo;
            mike = entity.guildId;
            var _closure2_slot0 = mike;
            zulu = entity.canWithdraw;
            oscar = entity.onClose;
            var _closure2_slot1 = oscar;
            entity = undefined;
            var _closure2_slot3 = entity;
            tango = _closure1_slot6;
            golf = tango.bind(entity)(oscar);
            var _closure2_slot2 = golf;
            oscar = _closure1_slot4;
            options = _closure1_slot0;
            verify = _closure1_slot3;
            tango = 8;
            tango = verify[tango];
            tango = options.bind(entity)(tango);
            tango = tango.Button;
            if(zulu) { _fun00004_ip = 152; continue _fun00003 }
 85:
            zulu = {};
            yankee = _closure1_slot0;
            romeo = _closure1_slot3;
            options = 9;
            verify = romeo[options];
            verify = yankee.bind(entity)(verify);
            offset = verify.intl;
            verify = offset.string;
            options = romeo[options];
            options = yankee.bind(entity)(options);
            options = options.t;
            options = options.BddRzc;
            options = verify.bind(offset)(options);
            zulu['text'] = options;
            zulu['onPress'] = golf;
            _fun00004_ip = 239; continue _fun00003;
 152:
            golf = {};
            yankee = _closure1_slot0;
            romeo = _closure1_slot3;
            options = 9;
            verify = romeo[options];
            verify = yankee.bind(entity)(verify);
            offset = verify.intl;
            verify = offset.string;
            options = romeo[options];
            options = yankee.bind(entity)(options);
            options = options.t;
            options = options.g9tK0t;
            options = verify.bind(offset)(options);
            golf['text'] = options;
            options = 'destructive';
            golf['variant'] = options;
            options = function() { // Original name: onPress
                mike = _closure2_slot2;
                entity = undefined;
                mike = mike.bind(entity)();
                zulu = _closure1_slot5;
                mike = {};
                tango = _closure2_slot0;
                mike['guildId'] = tango;
                mike = zulu.bind(entity)(mike);
                return entity;
            };
            golf['onPress'] = options;
            zulu = golf;
 239:
            zulu = oscar.bind(entity)(tango, zulu);
            _closure2_slot3 = zulu;
            oscar = _closure1_slot2;
            tango = _closure1_slot3;
            zulu = 2;
            zulu = tango[zulu];
            oscar = oscar.bind(entity)(zulu);
            zulu = oscar.dismissGlobalKeyboard;
            zulu = zulu.bind(oscar)();
            zulu = _closure1_slot1;
            mike = 3;
            mike = tango[mike];
            tango = zulu.bind(entity)(mike);
            zulu = tango.openLazy;
            mike = {};
            report = function() { // Original name: importer
                zulu = _closure1_slot0;
                entity = _closure1_slot3;
                mike = 5;
                mike = entity[mike];
                tango = undefined;
                zulu = zulu.bind(tango)(mike);
                mike = 10;
                mike = entity[mike];
                entity = entity.paths;
                zulu = zulu.bind(tango)(mike, entity);
                mike = zulu.then;
                entity = function(argFoo) {
                    mike = argFoo;
                    mike = mike.default;
                    var _closure4_slot0 = mike;
                    entity = function(argFoo) {
                        tango = _closure1_slot4;
                        zulu = _closure4_slot0;
                        mike = {};
                        options = argFoo;
                        verify = mike;
                        report = copyDataProperties(verify, options);
                        golf = _closure2_slot0;
                        oscar = 'guildId';
                        mike[oscar] = golf;
                        golf = _closure1_slot6;
                        oscar = _closure2_slot1;
                        entity = undefined;
                        golf = golf.bind(entity)(oscar);
                        oscar = 'onClose';
                        mike[oscar] = golf;
                        oscar = _closure2_slot3;
                        report = 'secondaryButton';
                        mike[report] = oscar;
                        entity = tango.bind(entity)(zulu, mike);
                        return entity;
                    };
                    return entity;
                };
                entity = mike.bind(zulu)(entity);
                return entity;
            };
            mike['importer'] = report;
            mike = zulu.bind(tango)(mike);
            return entity;
        }
    };
    zulu['openMemberVerificationRejectedAlert'] = report;
    report = function() {
        report = _closure1_slot2;
        tango = _closure1_slot3;
        entity = 2;
        zulu = tango[entity];
        entity = undefined;
        report = report.bind(entity)(zulu);
        zulu = report.dismissGlobalKeyboard;
        zulu = zulu.bind(report)();
        zulu = _closure1_slot1;
        mike = 3;
        mike = tango[mike];
        tango = zulu.bind(entity)(mike);
        zulu = tango.openLazy;
        mike = {};
        report = function() { // Original name: importer
            zulu = _closure1_slot0;
            entity = _closure1_slot3;
            mike = 5;
            mike = entity[mike];
            tango = undefined;
            zulu = zulu.bind(tango)(mike);
            mike = 11;
            mike = entity[mike];
            entity = entity.paths;
            zulu = zulu.bind(tango)(mike, entity);
            mike = zulu.then;
            entity = function(argFoo) {
                mike = argFoo;
                mike = mike.default;
                var _closure4_slot0 = mike;
                entity = function(argFoo) {
                    tango = _closure1_slot4;
                    zulu = _closure4_slot0;
                    mike = {};
                    report = argFoo;
                    oscar = mike;
                    entity = copyDataProperties(oscar, report);
                    entity = undefined;
                    entity = tango.bind(entity)(zulu, mike);
                    return entity;
                };
                return entity;
            };
            entity = mike.bind(zulu)(entity);
            return entity;
        };
        mike['importer'] = report;
        mike = zulu.bind(tango)(mike);
        return entity;
    };
    zulu['openMemberVerificationUpdateAlert'] = report;
    zulu['closeMemberVerificationAlert'] = tango;
    mike = function(argFoo, argBar) {
        entity = argFoo;
        var _closure2_slot0 = entity;
        entity = argBar;
        var _closure2_slot1 = entity;
        oscar = _closure1_slot2;
        tango = _closure1_slot3;
        entity = 2;
        zulu = tango[entity];
        entity = undefined;
        oscar = oscar.bind(entity)(zulu);
        zulu = oscar.dismissGlobalKeyboard;
        zulu = zulu.bind(oscar)();
        zulu = _closure1_slot1;
        mike = 3;
        mike = tango[mike];
        tango = zulu.bind(entity)(mike);
        zulu = tango.openLazy;
        mike = {};
        report = function() { // Original name: importer
            zulu = _closure1_slot0;
            entity = _closure1_slot3;
            mike = 5;
            mike = entity[mike];
            tango = undefined;
            zulu = zulu.bind(tango)(mike);
            mike = 12;
            mike = entity[mike];
            entity = entity.paths;
            zulu = zulu.bind(tango)(mike, entity);
            mike = zulu.then;
            entity = function(argFoo) {
                mike = argFoo;
                mike = mike.default;
                var _closure4_slot0 = mike;
                entity = function(argFoo) {
                    tango = _closure1_slot4;
                    zulu = _closure4_slot0;
                    mike = {};
                    options = argFoo;
                    verify = mike;
                    entity = copyDataProperties(verify, options);
                    golf = _closure2_slot0;
                    oscar = 'guildId';
                    mike[oscar] = golf;
                    oscar = _closure1_slot6;
                    report = _closure2_slot1;
                    entity = undefined;
                    oscar = oscar.bind(entity)(report);
                    report = 'onClose';
                    mike[report] = oscar;
                    entity = tango.bind(entity)(zulu, mike);
                    return entity;
                };
                return entity;
            };
            entity = mike.bind(zulu)(entity);
            return entity;
        };
        mike['importer'] = report;
        mike = zulu.bind(tango)(mike);
        return entity;
    };
    zulu['openMemberVerificationIncompleteAlert'] = mike;
    return entity;
})();