// app/modules/guild_member_verification/native/components/form_fields/UserVerification.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    report = argBar;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    entity = argBaz;
    var _closure1_slot1 = entity;
    var _closure1_slot2 = oscard;
    entity = global;
    option = entity.Object;
    golfie = option.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(option)(zuuluu, entity, tangon);
    entity = 0;
    golfie = oscard[entity];
    tangon = argCor;
    entity = undefined;
    tangon = tangon.bind(entity)(golfie);
    tangon = 1;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    golfie = tangon.jsx;
    var _closure1_slot3 = golfie;
    golfie = tangon.Fragment;
    var _closure1_slot4 = golfie;
    tangon = tangon.jsxs;
    var _closure1_slot5 = tangon;
    tangon = 2;
    tangon = oscard[tangon];
    option = report.bind(entity)(tangon);
    golfie = option.createStyles;
    tangon = {};
    verify = {'marginTop': 8, 'marginBottom': 12};
    tangon['emailPhoneNote'] = verify;
    tangon = golfie.bind(option)(tangon);
    var _closure1_slot6 = tangon;
    tangon = 7;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/guild_member_verification/native/components/form_fields/UserVerification.tsx';
    tangon = report.bind(oscard)(tangon);
    michal = function(argFoo) { // Original name: UserVerification
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            entity = argFoo;
            output = entity.verification;
            michal = entity.field;
            entity = _closure1_slot6;
            report = undefined;
            kiloes = entity.bind(report)();
            zuuluu = michal.platform;
            entity = null;
            if(!(entity != zuuluu)) { _fun00002_ip = 504; continue _fun00001 }
 43:
            romeon = michal.platform;
            tangon = _closure1_slot5;
            zuuluu = _closure1_slot4;
            michal = {};
            golfie = _closure1_slot0;
            oscard = _closure1_slot2;
            backup = 3;
            oscard = oscard[backup];
            oscard = golfie.bind(report)(oscard);
            oscard = oscard.UserVerificationFieldPlatforms;
            oscard = oscard.PHONE;
            golfie = romeon === oscard;
            if(!golfie) { _fun00002_ip = 190; continue _fun00001 }
 98:
            verify = _closure1_slot3;
            option = _closure1_slot1;
            offset = _closure1_slot2;
            oscard = 4;
            oscard = offset[oscard];
            option = option.bind(report)(oscard);
            oscard = {};
            foxtra = _closure1_slot0;
            sizing = offset[backup];
            sizing = foxtra.bind(report)(sizing);
            sizing = sizing.UserVerificationFieldPlatforms;
            sizing = sizing.PHONE;
            sizing = output[sizing];
            oscard['passesVerification'] = sizing;
            offset = offset[backup];
            offset = foxtra.bind(report)(offset);
            offset = offset.UserVerificationFieldPlatforms;
            offset = offset.PHONE;
            oscard['platform'] = offset;
            golfie = verify.bind(report)(option, oscard);
 190:
            oscard = new Array(3);
            oscard[0] = golfie;
            verify = _closure1_slot3;
            option = _closure1_slot1;
            offset = _closure1_slot2;
            golfie = 4;
            golfie = offset[golfie];
            option = option.bind(report)(golfie);
            golfie = {};
            foxtra = _closure1_slot0;
            sizing = offset[backup];
            sizing = foxtra.bind(report)(sizing);
            sizing = sizing.UserVerificationFieldPlatforms;
            sizing = sizing.EMAIL;
            sizing = output[sizing];
            golfie['passesVerification'] = sizing;
            sizing = offset[backup];
            sizing = foxtra.bind(report)(sizing);
            sizing = sizing.UserVerificationFieldPlatforms;
            sizing = sizing.EMAIL;
            golfie['platform'] = sizing;
            golfie = verify.bind(report)(option, golfie);
            oscard[1] = golfie;
            golfie = 5;
            golfie = offset[golfie];
            golfie = foxtra.bind(report)(golfie);
            option = golfie.Text;
            golfie = {'style': null, 'variant': 'heading-deprecated-12/medium', 'color': 'header-secondary'};
            kiloes = kiloes.emailPhoneNote;
            golfie['style'] = kiloes;
            offset = offset[backup];
            offset = foxtra.bind(report)(offset);
            offset = offset.UserVerificationFieldPlatforms;
            offset = offset.PHONE;
            if(!(romeon !== offset)) { _fun00002_ip = 421; continue _fun00001 }
 362:
            backup = _closure1_slot0;
            kiloes = _closure1_slot2;
            offset = 6;
            romeon = kiloes[offset];
            romeon = backup.bind(report)(romeon);
            foxtra = romeon.intl;
            romeon = foxtra.string;
            offset = kiloes[offset];
            offset = backup.bind(report)(offset);
            offset = offset.t;
            offset = offset.Vgv9io;
            offset = romeon.bind(foxtra)(offset);
            _fun00002_ip = 478; continue _fun00001;
 421:
            backup = _closure1_slot0;
            kiloes = _closure1_slot2;
            yankee = 6;
            romeon = kiloes[yankee];
            romeon = backup.bind(report)(romeon);
            foxtra = romeon.intl;
            romeon = foxtra.string;
            yankee = kiloes[yankee];
            yankee = backup.bind(report)(yankee);
            yankee = yankee.t;
            yankee = yankee.jMh+TU;
            offset = romeon.bind(foxtra)(yankee);
 478:
            golfie['children'] = offset;
            golfie = verify.bind(report)(option, golfie);
            oscard[2] = golfie;
            michal['children'] = oscard;
            michal = tangon.bind(report)(zuuluu, michal);
            return michal;
 504:
            return entity;
        }
    };
    zuuluu['default'] = michal;
    return entity;
})();