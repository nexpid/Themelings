// app/modules/guild_member_verification/native/components/form_fields/FormHeader.tsx
export default (function(argFoo, argBar, argBaz, argCorge, _, argFred, argPlugh) {
    report = argBar;
    romeo = argBaz;
    zulu = argFred;
    oscar = argPlugh;
    var _closure1_slot0 = report;
    var _closure1_slot1 = oscar;
    entity = global;
    options = entity.Object;
    golf = options.defineProperty;
    tango = {};
    offset = true;
    tango['value'] = offset;
    entity = '__esModule';
    entity = golf.bind(options)(zulu, entity, tango);
    entity = 0;
    golf = oscar[entity];
    tango = argCorge;
    entity = undefined;
    tango = tango.bind(entity)(golf);
    tango = 1;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    yankee = tango.Fonts;
    tango = 2;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.jsx;
    var _closure1_slot2 = tango;
    tango = 3;
    tango = oscar[tango];
    options = report.bind(entity)(tango);
    golf = options.createStyles;
    tango = {};
    verify = {};
    foxtrot = 4;
    foxtrot = oscar[foxtrot];
    backup = romeo.bind(entity)(foxtrot);
    foxtrot = yankee.DISPLAY_EXTRABOLD;
    yankee = 5;
    yankee = oscar[yankee];
    yankee = romeo.bind(entity)(yankee);
    yankee = yankee.colors;
    output = yankee.HEADER_SECONDARY;
    yankee = {};
    yankee['uppercase'] = offset;
    sizing = 12;
    echo = undefined;
    result = foxtrot;
    kilo = yankee;
    output = echo[backup](result, output, sizing, kilo, backup);
    result = verify;
    offset = copyDataProperties(result, output);
    yankee = 8;
    offset = 'paddingBottom';
    verify[offset] = yankee;
    tango['fieldHeader'] = verify;
    tango = golf.bind(options)(tango);
    var _closure1_slot3 = tango;
    tango = 7;
    tango = oscar[tango];
    oscar = report.bind(entity)(tango);
    report = oscar.fileFinishedImporting;
    tango = 'modules/guild_member_verification/native/components/form_fields/FormHeader.tsx';
    tango = report.bind(oscar)(tango);
    mike = function(argFoo) { // Original name: FormHeader
        zulu = argFoo;
        oscar = zulu.children;
        entity = null;
        mike = Object.create(entity);
        entity = 0;
        mike['children'] = entity;
        yankee = {};
        offset = zulu;
        verify = mike;
        report = copyDataProperties(yankee, offset, verify);
        mike = _closure1_slot3;
        tango = undefined;
        golf = mike.bind(tango)();
        zulu = _closure1_slot2;
        mike = _closure1_slot0;
        options = _closure1_slot1;
        entity = 6;
        entity = options[entity];
        entity = mike.bind(tango)(entity);
        mike = entity.LegacyText;
        entity = {};
        yankee = entity;
        offset = report;
        options = copyDataProperties(yankee, offset);
        options = golf.fieldHeader;
        golf = new Array(2);
        golf[0] = options;
        report = report.style;
        golf[1] = report;
        report = 'style';
        entity[report] = golf;
        report = 'children';
        entity[report] = oscar;
        entity = zulu.bind(tango)(mike, entity);
        return entity;
    };
    zulu['default'] = mike;
    return entity;
})();