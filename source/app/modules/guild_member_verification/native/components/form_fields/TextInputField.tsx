// app/modules/guild_member_verification/native/components/form_fields/TextInputField.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    report = argBar;
    yankee = argBaz;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    var _closure1_slot1 = oscard;
    entity = global;
    option = entity.Object;
    golfie = option.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(option)(zuuluu, entity, tangon);
    entity = 0;
    golfie = oscard[entity];
    tangon = argCor;
    entity = undefined;
    tangon = tangon.bind(entity)(golfie);
    tangon = 1;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.View;
    var _closure1_slot2 = tangon;
    tangon = 2;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.MAX_TEXT_RESPONSE_LENGTH;
    var _closure1_slot3 = tangon;
    tangon = 3;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    romeon = tangon.Fonts;
    tangon = 4;
    golfie = oscard[tangon];
    golfie = report.bind(entity)(golfie);
    golfie = golfie.jsx;
    var _closure1_slot4 = golfie;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.jsxs;
    var _closure1_slot5 = tangon;
    tangon = 5;
    tangon = oscard[tangon];
    option = report.bind(entity)(tangon);
    golfie = option.createStyles;
    tangon = {};
    verify = {'marginVertical': 12, 'flexDirection': 'column'};
    tangon['container'] = verify;
    verify = {'padding': 12, 'width': '100%'};
    offset = 6;
    foxtra = oscard[offset];
    foxtra = yankee.bind(entity)(foxtra);
    foxtra = foxtra.radii;
    foxtra = foxtra.xs;
    verify['borderRadius'] = foxtra;
    foxtra = oscard[offset];
    foxtra = yankee.bind(entity)(foxtra);
    foxtra = foxtra.colors;
    foxtra = foxtra.BACKGROUND_TERTIARY;
    verify['backgroundColor'] = foxtra;
    tangon['textInput'] = verify;
    verify = {};
    foxtra = 7;
    foxtra = oscard[foxtra];
    backup = yankee.bind(entity)(foxtra);
    foxtra = romeon.DISPLAY_SEMIBOLD;
    offset = oscard[offset];
    offset = yankee.bind(entity)(offset);
    offset = offset.colors;
    output = offset.HEADER_PRIMARY;
    offset = {};
    yankee = false;
    offset['uppercase'] = yankee;
    yankee = 16;
    echoed = undefined;
    result = foxtra;
    sizing = yankee;
    kiloes = offset;
    output = echoed[backup](result, output, sizing, kiloes, backup);
    result = verify;
    offset = copyDataProperties(result, output);
    offset = 'paddingBottom';
    verify[offset] = yankee;
    tangon['formHeader'] = verify;
    tangon = golfie.bind(option)(tangon);
    var _closure1_slot6 = tangon;
    tangon = 11;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/guild_member_verification/native/components/form_fields/TextInputField.tsx';
    tangon = report.bind(oscard)(tangon);
    michal = function(argFoo) { // Original name: TextInputField
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            michal = argFoo;
            entity = michal.field;
            verify = michal.onChange;
            michal = _closure1_slot6;
            tangon = undefined;
            yankee = michal.bind(tangon)();
            backup = entity.label;
            romeon = entity.response;
            zuuluu = _closure1_slot5;
            michal = _closure1_slot2;
            entity = {};
            report = yankee.container;
            entity['style'] = report;
            option = _closure1_slot4;
            golfie = _closure1_slot0;
            foxtra = _closure1_slot1;
            report = 8;
            report = foxtra[report];
            report = golfie.bind(tangon)(report);
            oscard = report.Text;
            report = {'style': null, 'variant': 'heading-md/semibold', 'color': 'header-primary'};
            kiloes = yankee.formHeader;
            report['style'] = kiloes;
            report['children'] = backup;
            oscard = option.bind(tangon)(oscard, report);
            report = new Array(2);
            report[0] = oscard;
            oscard = 9;
            oscard = foxtra[oscard];
            oscard = golfie.bind(tangon)(oscard);
            golfie = oscard.FormInput;
            oscard = {'style': null, 'showTopContainer': false, 'multiline': false, 'showBorder': false};
            yankee = yankee.textInput;
            oscard['style'] = yankee;
            yankee = _closure1_slot3;
            oscard['maxLength'] = yankee;
            yankee = null;
            foxtra = yankee != romeon;
            yankee = '';
            if(!foxtra) { _fun00002_ip = 196; continue _fun00001 }
 193:
            yankee = romeon;
 196:
            oscard['value'] = yankee;
            foxtra = _closure1_slot0;
            backup = _closure1_slot1;
            offset = 10;
            yankee = backup[offset];
            yankee = foxtra.bind(tangon)(yankee);
            romeon = yankee.intl;
            yankee = romeon.string;
            offset = backup[offset];
            offset = foxtra.bind(tangon)(offset);
            offset = offset.t;
            offset = offset.Sqn+Wl;
            offset = yankee.bind(romeon)(offset);
            oscard['placeholder'] = offset;
            oscard['onChange'] = verify;
            oscard = option.bind(tangon)(golfie, oscard);
            report[1] = oscard;
            entity['children'] = report;
            entity = zuuluu.bind(tangon)(michal, entity);
            return entity;
        }
    };
    zuuluu['default'] = michal;
    return entity;
})();