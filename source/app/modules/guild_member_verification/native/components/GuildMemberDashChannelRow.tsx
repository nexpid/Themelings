// app/modules/guild_member_verification/native/components/GuildMemberDashChannelRow.tsx
export default (function(global, require, metroImportDefault, metroImportAll, moduleObject, exports, dependencyMap) {
    var5 = require;
    var11 = metroImportDefault;
    var3 = exports;
    var6 = dependencyMap;
    var _closure1_slot0 = var5;
    var _closure1_slot1 = var11;
    var _closure1_slot2 = var6;
    var1 = global;
    var8 = var1.Object;
    var7 = var8.defineProperty;
    var4 = {};
    var1 = true;
    var4['value'] = var1;
    var1 = '__esModule';
    var1 = var7.bind(var8)(var3, var1, var4);
    var1 = 0;
    var7 = var6[var1];
    var4 = metroImportAll;
    var1 = undefined;
    var4 = var4.bind(var1)(var7);
    var _closure1_slot3 = var4;
    var4 = 1;
    var4 = var6[var4];
    var4 = var5.bind(var1)(var4);
    var7 = var4.GuildFeatures;
    var _closure1_slot4 = var7;
    var4 = var4.Routes;
    var _closure1_slot5 = var4;
    var4 = 2;
    var4 = var6[var4];
    var4 = var5.bind(var1)(var4);
    var4 = var4.StaticChannelRoute;
    var _closure1_slot6 = var4;
    var4 = 3;
    var4 = var6[var4];
    var4 = var5.bind(var1)(var4);
    var10 = var4.CHANNEL_MARGIN_VERTICAL;
    var4 = 4;
    var4 = var6[var4];
    var4 = var5.bind(var1)(var4);
    var4 = var4.jsx;
    var _closure1_slot7 = var4;
    var4 = 5;
    var4 = var6[var4];
    var8 = var5.bind(var1)(var4);
    var7 = var8.createStyles;
    var4 = {};
    var9 = {};
    var9['marginVertical'] = var10;
    var10 = 8;
    var9['marginHorizontal'] = var10;
    var10 = 6;
    var12 = var6[var10];
    var12 = var11.bind(var1)(var12);
    var12 = var12.radii;
    var12 = var12.md;
    var9['borderRadius'] = var12;
    var4['container'] = var9;
    var9 = {};
    var10 = var6[var10];
    var10 = var11.bind(var1)(var10);
    var10 = var10.colors;
    var10 = var10.BACKGROUND_ACCENT;
    var9['backgroundColor'] = var10;
    var4['badge'] = var9;
    var4 = var7.bind(var8)(var4);
    var _closure1_slot8 = var4;
    var4 = 15;
    var4 = var6[var4];
    var6 = var5.bind(var1)(var4);
    var5 = var6.fileFinishedImporting;
    var4 = 'modules/guild_member_verification/native/components/GuildMemberDashChannelRow.tsx';
    var4 = var5.bind(var6)(var4);
    var2 = function GuildMemberDashChannelRow(arg1) {
        _fun0001: for(var _fun0001_ip = 0; ; ) switch(_fun0001_ip) {
case 0:
            var2 = arg1;
            var3 = var2.guild;
            var15 = var2.selected;
            var4 = undefined;
            var _closure2_slot1 = var4;
            var2 = _closure1_slot8;
            var10 = var2.bind(var4)();
            var11 = var3.id;
            var _closure2_slot0 = var11;
            var5 = _closure1_slot0;
            var7 = _closure1_slot2;
            var2 = 7;
            var2 = var7[var2];
            var7 = var5.bind(var4)(var2);
            var5 = var7.useSubmittedGuildJoinRequestTotal;
            var2 = {};
            var2['guildId'] = var11;
            var2 = var5.bind(var7)(var2);
            var5 = null;
            var8 = var5 != var2;
            var7 = 0;
            var9 = 0;
            if(!var8) { _fun0001_ip = 2; continue _fun0001 }
case 3:
            var9 = var2;
case 2:
            var12 = var3.features;
            var8 = var12.has;
            var2 = _closure1_slot4;
            var2 = var2.MEMBER_VERIFICATION_MANUAL_APPROVAL;
            var2 = var8.bind(var12)(var2);
            _closure2_slot1 = var2;
            var8 = _closure1_slot3;
            var12 = var8.useEffect;
            var13 = var3.features;
            var3 = new Array(3);
            var3[0] = var13;
            var3[1] = var11;
            var3[2] = var2;
            var2 = function() {
                _fun0002: for(var _fun0002_ip = 0; ; ) switch(_fun0002_ip) {
case 0:
                    var1 = _closure2_slot1;
                    if(!var1) { _fun0002_ip = 4; continue _fun0002 }
case 5:
                    var2 = _closure1_slot1;
                    var7 = _closure1_slot2;
                    var1 = 8;
                    var1 = var7[var1];
                    var6 = undefined;
                    var3 = var2.bind(var6)(var1);
                    var2 = var3.fetchGuildJoinRequests;
                    var1 = {};
                    var5 = _closure2_slot0;
                    var1['guildId'] = var5;
                    var5 = _closure1_slot0;
                    var4 = 9;
                    var4 = var7[var4];
                    var4 = var5.bind(var6)(var4);
                    var4 = var4.GuildJoinRequestApplicationStatuses;
                    var4 = var4.SUBMITTED;
                    var1['status'] = var4;
                    var1 = var2.bind(var3)(var1);
case 4:
                    var1 = undefined;
                    return var1;
                }
            };
            var2 = var12.bind(var8)(var2, var3);
            var3 = var8.useCallback;
            var2 = new Array(1);
            var2[0] = var11;
            var1 = function() {
                var4 = _closure1_slot0;
                var3 = _closure1_slot2;
                var1 = 10;
                var3 = var3[var1];
                var1 = undefined;
                var4 = var4.bind(var1)(var3);
                var3 = var4.transitionTo;
                var7 = _closure1_slot5;
                var6 = var7.CHANNEL;
                var5 = _closure2_slot0;
                var2 = _closure1_slot6;
                var2 = var2.MEMBER_SAFETY;
                var2 = var6.bind(var7)(var5, var2);
                var2 = var3.bind(var4)(var2);
                return var1;
            };
            var11 = var3.bind(var8)(var1, var2);
            var2 = _closure1_slot0;
            var1 = _closure1_slot2;
            var8 = 11;
            var1 = var1[var8];
            var1 = var2.bind(var4)(var1);
            var1 = var1.ChannelModes;
            if(var15) { _fun0001_ip = 6; continue _fun0001 }
case 7:
            var12 = var1.DEFAULT;
            _fun0001_ip = 8; continue _fun0001;
case 6:
            var12 = var1.SELECTED;
case 8:
            var3 = _closure1_slot7;
            var2 = _closure1_slot1;
            var14 = _closure1_slot2;
            var1 = var14[var8];
            var2 = var2.bind(var4)(var1);
            var1 = {};
            var1['onPress'] = var11;
            var11 = var10.container;
            var1['style'] = var11;
            var11 = true;
            var1['accessible'] = var11;
            var13 = _closure1_slot0;
            var16 = 12;
            var11 = var14[var16];
            var11 = var13.bind(var4)(var11);
            var18 = var11.intl;
            var17 = var18.string;
            var11 = var14[var16];
            var11 = var13.bind(var4)(var11);
            var11 = var11.t;
            var11 = var11.9Oq93t;
            var11 = var17.bind(var18)(var11);
            var1['accessibilityLabel'] = var11;
            var11 = {};
            var11['selected'] = var15;
            var1['accessibilityState'] = var11;
            var1['mode'] = var12;
            var11 = var14[var8];
            var11 = var13.bind(var4)(var11);
            var15 = var11.BaseChannelName;
            var11 = {};
            var17 = var14[var16];
            var17 = var13.bind(var4)(var17);
            var18 = var17.intl;
            var17 = var18.string;
            var16 = var14[var16];
            var16 = var13.bind(var4)(var16);
            var16 = var16.t;
            var16 = var16.9Oq93t;
            var16 = var17.bind(var18)(var16);
            var11['name'] = var16;
            var11['mode'] = var12;
            var11 = var3.bind(var4)(var15, var11);
            var1['name'] = var11;
            var8 = var14[var8];
            var8 = var13.bind(var4)(var8);
            var11 = var8.BaseChannelIcon;
            var8 = {};
            var8['mode'] = var12;
            var12 = 13;
            var12 = var14[var12];
            var12 = var13.bind(var4)(var12);
            var12 = var12.GroupIcon;
            var8['IconComponent'] = var12;
            var8 = var3.bind(var4)(var11, var8);
            var1['icon'] = var8;
            var7 = var9 > var7;
            var5 = null;
            if(!var7) { _fun0001_ip = 9; continue _fun0001 }
case 10:
            var8 = _closure1_slot7;
            var7 = _closure1_slot1;
            var11 = _closure1_slot2;
            var6 = 14;
            var6 = var11[var6];
            var7 = var7.bind(var4)(var6);
            var6 = {};
            var10 = var10.badge;
            var6['style'] = var10;
            var6['value'] = var9;
            var5 = var8.bind(var4)(var7, var6);
case 9:
            var1['channelInfo'] = var5;
            var1 = var3.bind(var4)(var2, var1);
            return var1;
        }
    };
    var3['default'] = var2;
    return var1;
})();