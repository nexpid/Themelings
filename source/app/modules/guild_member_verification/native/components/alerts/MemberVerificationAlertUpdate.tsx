// app/modules/guild_member_verification/native/components/alerts/MemberVerificationAlertUpdate.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    report = argBar;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    entity = argBaz;
    var _closure1_slot1 = entity;
    var _closure1_slot2 = oscard;
    entity = global;
    option = entity.Object;
    golfie = option.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(option)(zuuluu, entity, tangon);
    entity = 0;
    golfie = oscard[entity];
    tangon = argCor;
    entity = undefined;
    tangon = tangon.bind(entity)(golfie);
    tangon = 1;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.Image;
    var _closure1_slot3 = tangon;
    tangon = 2;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.DownloadLinks;
    var _closure1_slot4 = tangon;
    tangon = 3;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    golfie = tangon.jsx;
    var _closure1_slot5 = golfie;
    tangon = tangon.jsxs;
    var _closure1_slot6 = tangon;
    tangon = 4;
    tangon = oscard[tangon];
    option = report.bind(entity)(tangon);
    golfie = option.createStyles;
    tangon = {};
    verify = {'marginLeft': 'auto', 'marginRight': 'auto', 'marginTop': 8};
    tangon['headerImage'] = verify;
    verify = {'marginTop': 24, 'textAlign': 'center'};
    tangon['header'] = verify;
    verify = {'marginVertical': 8, 'lineHeight': 18, 'textAlign': 'center'};
    tangon['text'] = verify;
    tangon = golfie.bind(option)(tangon);
    var _closure1_slot7 = tangon;
    tangon = 10;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/guild_member_verification/native/components/alerts/MemberVerificationAlertUpdate.tsx';
    tangon = report.bind(oscard)(tangon);
    michal = function(argFoo) { // Original name: MemberVerificationAlertUpdate
        oscard = argFoo;
        entity = _closure1_slot7;
        tangon = undefined;
        offset = entity.bind(tangon)();
        zuuluu = _closure1_slot6;
        yankee = _closure1_slot1;
        foxtra = _closure1_slot2;
        entity = 5;
        entity = foxtra[entity];
        michal = yankee.bind(tangon)(entity);
        entity = {};
        result = entity;
        output = oscard;
        golfie = copyDataProperties(result, output);
        romeon = _closure1_slot0;
        verify = 6;
        golfie = foxtra[verify];
        golfie = romeon.bind(tangon)(golfie);
        backup = golfie.intl;
        option = backup.string;
        golfie = foxtra[verify];
        golfie = romeon.bind(tangon)(golfie);
        golfie = golfie.t;
        golfie = golfie.b8siyc;
        option = option.bind(backup)(golfie);
        golfie = 'confirmText';
        entity[golfie] = option;
        golfie = foxtra[verify];
        golfie = romeon.bind(tangon)(golfie);
        backup = golfie.intl;
        option = backup.string;
        golfie = foxtra[verify];
        golfie = romeon.bind(tangon)(golfie);
        golfie = golfie.t;
        golfie = golfie.ETE/oK;
        option = option.bind(backup)(golfie);
        golfie = 'cancelText';
        entity[golfie] = option;
        option = function() { // Original name: onConfirm
            tangon = _closure1_slot1;
            zuuluu = _closure1_slot2;
            michal = 7;
            zuuluu = zuuluu[michal];
            michal = undefined;
            zuuluu = tangon.bind(michal)(zuuluu);
            michal = zuuluu.openURL;
            entity = _closure1_slot4;
            entity = entity.IOS;
            entity = michal.bind(zuuluu)(entity);
            return entity;
        };
        golfie = 'onConfirm';
        entity[golfie] = option;
        golfie = oscard.onClose;
        oscard = 'onCancel';
        entity[oscard] = golfie;
        option = _closure1_slot5;
        oscard = _closure1_slot3;
        report = {};
        golfie = 8;
        golfie = foxtra[golfie];
        golfie = yankee.bind(tangon)(golfie);
        report['source'] = golfie;
        golfie = offset.headerImage;
        report['style'] = golfie;
        report = option.bind(tangon)(oscard, report);
        oscard = new Array(3);
        oscard[0] = report;
        report = 9;
        golfie = foxtra[report];
        golfie = romeon.bind(tangon)(golfie);
        yankee = golfie.Text;
        golfie = {'style': null, 'variant': 'heading-lg/extrabold', 'color': 'header-primary'};
        backup = offset.header;
        golfie['style'] = backup;
        backup = foxtra[verify];
        backup = romeon.bind(tangon)(backup);
        sizing = backup.intl;
        kiloes = sizing.string;
        backup = foxtra[verify];
        backup = romeon.bind(tangon)(backup);
        backup = backup.t;
        backup = backup.kkjNHR;
        backup = kiloes.bind(sizing)(backup);
        golfie['children'] = backup;
        golfie = option.bind(tangon)(yankee, golfie);
        oscard[1] = golfie;
        report = foxtra[report];
        report = romeon.bind(tangon)(report);
        golfie = report.Text;
        report = {'style': null, 'variant': 'text-sm/medium', 'color': 'header-secondary'};
        offset = offset.text;
        report['style'] = offset;
        offset = foxtra[verify];
        offset = romeon.bind(tangon)(offset);
        yankee = offset.intl;
        offset = yankee.string;
        verify = foxtra[verify];
        verify = romeon.bind(tangon)(verify);
        verify = verify.t;
        verify = verify.gnkqzc;
        verify = offset.bind(yankee)(verify);
        report['children'] = verify;
        report = option.bind(tangon)(golfie, report);
        oscard[2] = report;
        report = 'children';
        entity[report] = oscard;
        entity = zuuluu.bind(tangon)(michal, entity);
        return entity;
    };
    zuuluu['default'] = michal;
    return entity;
})();