// app/modules/guild_member_verification/native/components/alerts/MemberVerificationAlertUpdate.tsx
export default (function(argFoo, argBar, argBaz, argCorge, _, argFred, argPlugh) {
    report = argBar;
    zulu = argFred;
    oscar = argPlugh;
    var _closure1_slot0 = report;
    entity = argBaz;
    var _closure1_slot1 = entity;
    var _closure1_slot2 = oscar;
    entity = global;
    options = entity.Object;
    golf = options.defineProperty;
    tango = {};
    entity = true;
    tango['value'] = entity;
    entity = '__esModule';
    entity = golf.bind(options)(zulu, entity, tango);
    entity = 0;
    golf = oscar[entity];
    tango = argCorge;
    entity = undefined;
    tango = tango.bind(entity)(golf);
    tango = 1;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.Image;
    var _closure1_slot3 = tango;
    tango = 2;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.DownloadLinks;
    var _closure1_slot4 = tango;
    tango = 3;
    golf = oscar[tango];
    golf = report.bind(entity)(golf);
    golf = golf.jsx;
    var _closure1_slot5 = golf;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.jsxs;
    var _closure1_slot6 = tango;
    tango = 4;
    tango = oscar[tango];
    options = report.bind(entity)(tango);
    golf = options.createStyles;
    tango = {};
    verify = {'marginLeft': 'auto', 'marginRight': 'auto', 'marginTop': 8};
    tango['headerImage'] = verify;
    verify = {'marginTop': 24, 'textAlign': 'center'};
    tango['header'] = verify;
    verify = {'marginVertical': 8, 'lineHeight': 18, 'textAlign': 'center'};
    tango['text'] = verify;
    tango = golf.bind(options)(tango);
    var _closure1_slot7 = tango;
    tango = 10;
    tango = oscar[tango];
    oscar = report.bind(entity)(tango);
    report = oscar.fileFinishedImporting;
    tango = 'modules/guild_member_verification/native/components/alerts/MemberVerificationAlertUpdate.tsx';
    tango = report.bind(oscar)(tango);
    mike = function(argFoo) { // Original name: MemberVerificationAlertUpdate
        oscar = argFoo;
        entity = _closure1_slot7;
        tango = undefined;
        offset = entity.bind(tango)();
        zulu = _closure1_slot6;
        yankee = _closure1_slot1;
        foxtrot = _closure1_slot2;
        entity = 5;
        entity = foxtrot[entity];
        mike = yankee.bind(tango)(entity);
        entity = {};
        result = entity;
        output = oscar;
        golf = copyDataProperties(result, output);
        romeo = _closure1_slot0;
        verify = 6;
        golf = foxtrot[verify];
        golf = romeo.bind(tango)(golf);
        backup = golf.intl;
        options = backup.string;
        golf = foxtrot[verify];
        golf = romeo.bind(tango)(golf);
        golf = golf.t;
        golf = golf.b8siyc;
        options = options.bind(backup)(golf);
        golf = 'confirmText';
        entity[golf] = options;
        golf = foxtrot[verify];
        golf = romeo.bind(tango)(golf);
        backup = golf.intl;
        options = backup.string;
        golf = foxtrot[verify];
        golf = romeo.bind(tango)(golf);
        golf = golf.t;
        golf = golf.ETE/oK;
        options = options.bind(backup)(golf);
        golf = 'cancelText';
        entity[golf] = options;
        options = function() { // Original name: onConfirm
            tango = _closure1_slot1;
            zulu = _closure1_slot2;
            mike = 7;
            zulu = zulu[mike];
            mike = undefined;
            zulu = tango.bind(mike)(zulu);
            mike = zulu.openURL;
            entity = _closure1_slot4;
            entity = entity.IOS;
            entity = mike.bind(zulu)(entity);
            return entity;
        };
        golf = 'onConfirm';
        entity[golf] = options;
        golf = oscar.onClose;
        oscar = 'onCancel';
        entity[oscar] = golf;
        options = _closure1_slot5;
        oscar = _closure1_slot3;
        report = {};
        golf = 8;
        golf = foxtrot[golf];
        golf = yankee.bind(tango)(golf);
        report['source'] = golf;
        golf = offset.headerImage;
        report['style'] = golf;
        report = options.bind(tango)(oscar, report);
        oscar = new Array(3);
        oscar[0] = report;
        report = 9;
        golf = foxtrot[report];
        golf = romeo.bind(tango)(golf);
        yankee = golf.Text;
        golf = {'style': null, 'variant': 'heading-lg/extrabold', 'color': 'header-primary'};
        backup = offset.header;
        golf['style'] = backup;
        backup = foxtrot[verify];
        backup = romeo.bind(tango)(backup);
        sizing = backup.intl;
        kilo = sizing.string;
        backup = foxtrot[verify];
        backup = romeo.bind(tango)(backup);
        backup = backup.t;
        backup = backup.kkjNHR;
        backup = kilo.bind(sizing)(backup);
        golf['children'] = backup;
        golf = options.bind(tango)(yankee, golf);
        oscar[1] = golf;
        report = foxtrot[report];
        report = romeo.bind(tango)(report);
        golf = report.Text;
        report = {'style': null, 'variant': 'text-sm/medium', 'color': 'header-secondary'};
        offset = offset.text;
        report['style'] = offset;
        offset = foxtrot[verify];
        offset = romeo.bind(tango)(offset);
        yankee = offset.intl;
        offset = yankee.string;
        verify = foxtrot[verify];
        verify = romeo.bind(tango)(verify);
        verify = verify.t;
        verify = verify.gnkqzc;
        verify = offset.bind(yankee)(verify);
        report['children'] = verify;
        report = options.bind(tango)(golf, report);
        oscar[2] = report;
        report = 'children';
        entity[report] = oscar;
        entity = zulu.bind(tango)(mike, entity);
        return entity;
    };
    zulu['default'] = mike;
    return entity;
})();