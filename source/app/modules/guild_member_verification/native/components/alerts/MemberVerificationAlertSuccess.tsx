// app/modules/guild_member_verification/native/components/alerts/MemberVerificationAlertSuccess.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    report = argBar;
    golfie = argBaz;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    var _closure1_slot1 = golfie;
    var _closure1_slot2 = oscard;
    entity = global;
    verify = entity.Object;
    option = verify.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = option.bind(verify)(zuuluu, entity, tangon);
    entity = 0;
    option = oscard[entity];
    tangon = argCor;
    entity = undefined;
    tangon = tangon.bind(entity)(option);
    tangon = 1;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.View;
    var _closure1_slot3 = tangon;
    tangon = 2;
    tangon = oscard[tangon];
    tangon = golfie.bind(entity)(tangon);
    var _closure1_slot4 = tangon;
    tangon = 3;
    tangon = oscard[tangon];
    tangon = golfie.bind(entity)(tangon);
    var _closure1_slot5 = tangon;
    tangon = 4;
    golfie = oscard[tangon];
    golfie = report.bind(entity)(golfie);
    golfie = golfie.jsx;
    var _closure1_slot6 = golfie;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.jsxs;
    var _closure1_slot7 = tangon;
    tangon = 5;
    tangon = oscard[tangon];
    option = report.bind(entity)(tangon);
    golfie = option.createStyles;
    tangon = {};
    verify = {};
    offset = 120;
    verify['marginTop'] = offset;
    tangon['alert'] = verify;
    verify = {'marginTop': 40, 'textAlign': 'center'};
    tangon['header'] = verify;
    verify = {'marginVertical': 8, 'lineHeight': 18, 'textAlign': 'center'};
    tangon['text'] = verify;
    verify = {'position': 'absolute', 'display': 'flex', 'flexDirection': 'column', 'alignItems': 'center', 'left': 0, 'right': 0, 'top': 4294967076};
    tangon['illustrationContainer'] = verify;
    verify = {'height': 246, 'width': 240};
    tangon['illustration'] = verify;
    tangon = golfie.bind(option)(tangon);
    var _closure1_slot8 = tangon;
    tangon = 12;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/guild_member_verification/native/components/alerts/MemberVerificationAlertSuccess.tsx';
    tangon = report.bind(oscard)(tangon);
    michal = function(argFoo) { // Original name: MemberVerificationAlertSuccess
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            report = argFoo;
            verify = report.guildId;
            var _closure2_slot0 = verify;
            entity = report.handleConfirmAndAck;
            var _closure2_slot1 = entity;
            entity = null;
            tangon = Object.create(entity);
            zuuluu = 0;
            tangon['guildId'] = zuuluu;
            tangon['handleConfirmAndAck'] = zuuluu;
            ctrled = {};
            source = report;
            update = tangon;
            golfie = copyDataProperties(ctrled, source, update);
            var _closure2_slot2 = golfie;
            zuuluu = _closure1_slot8;
            report = undefined;
            yankee = zuuluu.bind(report)();
            tangon = _closure1_slot0;
            option = _closure1_slot2;
            zuuluu = 6;
            offset = option[zuuluu];
            backup = tangon.bind(report)(offset);
            foxtra = backup.useStateFromStores;
            offset = _closure1_slot5;
            romeon = new Array(1);
            romeon[0] = offset;
            offset = new Array(1);
            offset[0] = verify;
            verify = function() {
                zuuluu = _closure1_slot5;
                michal = zuuluu.getGuild;
                entity = _closure2_slot0;
                entity = michal.bind(zuuluu)(entity);
                return entity;
            };
            echoed = foxtra.bind(backup)(romeon, verify, offset);
            zuuluu = option[zuuluu];
            verify = tangon.bind(report)(zuuluu);
            option = verify.useStateFromStores;
            zuuluu = _closure1_slot4;
            tangon = new Array(1);
            tangon[0] = zuuluu;
            zuuluu = function() {
                entity = _closure1_slot4;
                entity = entity.useReducedMotion;
                return entity;
            };
            kiloes = option.bind(verify)(tangon, zuuluu);
            if(!(entity != echoed)) { _fun00002_ip = 629; continue _fun00001 }
 170:
            option = function() { // Original name: onConfirm
                _fun00003: for(var _fun00004_ip = 0; ; ) switch(_fun00004_ip) {
 0:
                    zuuluu = _closure2_slot1;
                    entity = undefined;
                    zuuluu = zuuluu.bind(entity)();
                    zuuluu = _closure2_slot2;
                    tangon = zuuluu.onClose;
                    zuuluu = null;
                    if(!(zuuluu != tangon)) { _fun00004_ip = 43; continue _fun00003 }
 29:
                    zuuluu = _closure2_slot2;
                    michal = zuuluu.onClose;
                    michal = michal.bind(zuuluu)();
 43:
                    return entity;
                }
            };
            tangon = _closure1_slot7;
            romeon = _closure1_slot1;
            backup = _closure1_slot2;
            michal = 7;
            michal = backup[michal];
            zuuluu = romeon.bind(report)(michal);
            michal = {};
            ctrled = michal;
            source = golfie;
            golfie = copyDataProperties(ctrled, source);
            foxtra = _closure1_slot0;
            offset = 8;
            golfie = backup[offset];
            golfie = foxtra.bind(report)(golfie);
            sizing = golfie.intl;
            verify = sizing.string;
            golfie = backup[offset];
            golfie = foxtra.bind(report)(golfie);
            golfie = golfie.t;
            golfie = golfie.NuzmOD;
            verify = verify.bind(sizing)(golfie);
            golfie = 'confirmText';
            michal[golfie] = verify;
            verify = yankee.alert;
            golfie = 'style';
            michal[golfie] = verify;
            golfie = 'onCancel';
            michal[golfie] = option;
            golfie = 'onConfirm';
            michal[golfie] = option;
            verify = _closure1_slot6;
            golfie = _closure1_slot3;
            oscard = {};
            option = yankee.illustrationContainer;
            oscard['style'] = option;
            option = 9;
            option = backup[option];
            romeon = romeon.bind(report)(option);
            option = {};
            sizing = 10;
            sizing = backup[sizing];
            sizing = foxtra.bind(report)(sizing);
            option['source'] = sizing;
            kiloes = !kiloes;
            option['autoPlay'] = kiloes;
            kiloes = yankee.illustration;
            option['style'] = kiloes;
            option = verify.bind(report)(romeon, option);
            oscard['children'] = option;
            oscard = verify.bind(report)(golfie, oscard);
            golfie = new Array(3);
            golfie[0] = oscard;
            oscard = 11;
            option = backup[oscard];
            option = foxtra.bind(report)(option);
            romeon = option.Text;
            option = {'style': null, 'variant': 'heading-lg/extrabold', 'color': 'header-primary'};
            kiloes = yankee.header;
            option['style'] = kiloes;
            kiloes = backup[offset];
            kiloes = foxtra.bind(report)(kiloes);
            result = kiloes.intl;
            output = result.format;
            kiloes = backup[offset];
            kiloes = foxtra.bind(report)(kiloes);
            kiloes = kiloes.t;
            sizing = kiloes.7hhNEh;
            kiloes = {};
            echoed = echoed.name;
            kiloes['guildName'] = echoed;
            kiloes = output.bind(result)(sizing, kiloes);
            option['children'] = kiloes;
            option = verify.bind(report)(romeon, option);
            golfie[1] = option;
            oscard = backup[oscard];
            oscard = foxtra.bind(report)(oscard);
            option = oscard.Text;
            oscard = {'style': null, 'variant': 'text-sm/medium', 'color': 'header-secondary'};
            yankee = yankee.text;
            oscard['style'] = yankee;
            yankee = backup[offset];
            yankee = foxtra.bind(report)(yankee);
            romeon = yankee.intl;
            yankee = romeon.string;
            offset = backup[offset];
            offset = foxtra.bind(report)(offset);
            offset = offset.t;
            offset = offset.nwpqyc;
            offset = yankee.bind(romeon)(offset);
            oscard['children'] = offset;
            oscard = verify.bind(report)(option, oscard);
            golfie[2] = oscard;
            oscard = 'children';
            michal[oscard] = golfie;
            michal = tangon.bind(report)(zuuluu, michal);
            return michal;
 629:
            return entity;
        }
    };
    zuuluu['default'] = michal;
    return entity;
})();