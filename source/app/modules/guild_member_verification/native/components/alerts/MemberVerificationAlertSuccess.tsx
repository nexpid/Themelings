// app/modules/guild_member_verification/native/components/alerts/MemberVerificationAlertSuccess.tsx
export default (function(argFoo, argBar, argBaz, argCorge, _, argFred, argPlugh) {
    report = argBar;
    golf = argBaz;
    zulu = argFred;
    oscar = argPlugh;
    var _closure1_slot0 = report;
    var _closure1_slot1 = golf;
    var _closure1_slot2 = oscar;
    entity = global;
    verify = entity.Object;
    options = verify.defineProperty;
    tango = {};
    entity = true;
    tango['value'] = entity;
    entity = '__esModule';
    entity = options.bind(verify)(zulu, entity, tango);
    entity = 0;
    options = oscar[entity];
    tango = argCorge;
    entity = undefined;
    tango = tango.bind(entity)(options);
    tango = 1;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.View;
    var _closure1_slot3 = tango;
    tango = 2;
    tango = oscar[tango];
    tango = golf.bind(entity)(tango);
    var _closure1_slot4 = tango;
    tango = 3;
    tango = oscar[tango];
    tango = golf.bind(entity)(tango);
    var _closure1_slot5 = tango;
    tango = 4;
    golf = oscar[tango];
    golf = report.bind(entity)(golf);
    golf = golf.jsx;
    var _closure1_slot6 = golf;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.jsxs;
    var _closure1_slot7 = tango;
    tango = 5;
    tango = oscar[tango];
    options = report.bind(entity)(tango);
    golf = options.createStyles;
    tango = {};
    verify = {};
    offset = 120;
    verify['marginTop'] = offset;
    tango['alert'] = verify;
    verify = {'marginTop': 40, 'textAlign': 'center'};
    tango['header'] = verify;
    verify = {'marginVertical': 8, 'lineHeight': 18, 'textAlign': 'center'};
    tango['text'] = verify;
    verify = {'position': 'absolute', 'display': 'flex', 'flexDirection': 'column', 'alignItems': 'center', 'left': 0, 'right': 0, 'top': 4294967076};
    tango['illustrationContainer'] = verify;
    verify = {'height': 246, 'width': 240};
    tango['illustration'] = verify;
    tango = golf.bind(options)(tango);
    var _closure1_slot8 = tango;
    tango = 12;
    tango = oscar[tango];
    oscar = report.bind(entity)(tango);
    report = oscar.fileFinishedImporting;
    tango = 'modules/guild_member_verification/native/components/alerts/MemberVerificationAlertSuccess.tsx';
    tango = report.bind(oscar)(tango);
    mike = function(argFoo) { // Original name: MemberVerificationAlertSuccess
        _fun88507: for(var _fun88507_ip = 0; ; ) switch(_fun88507_ip) {
 0:
            report = argFoo;
            verify = report.guildId;
            var _closure2_slot0 = verify;
            entity = report.handleConfirmAndAck;
            var _closure2_slot1 = entity;
            entity = null;
            tango = Object.create(entity);
            zulu = 0;
            tango['guildId'] = zulu;
            tango['handleConfirmAndAck'] = zulu;
            control = {};
            source = report;
            update = tango;
            golf = copyDataProperties(control, source, update);
            var _closure2_slot2 = golf;
            zulu = _closure1_slot8;
            report = undefined;
            yankee = zulu.bind(report)();
            tango = _closure1_slot0;
            options = _closure1_slot2;
            zulu = 6;
            offset = options[zulu];
            backup = tango.bind(report)(offset);
            foxtrot = backup.useStateFromStores;
            offset = _closure1_slot5;
            romeo = new Array(1);
            romeo[0] = offset;
            offset = new Array(1);
            offset[0] = verify;
            verify = function() {
                zulu = _closure1_slot5;
                mike = zulu.getGuild;
                entity = _closure2_slot0;
                entity = mike.bind(zulu)(entity);
                return entity;
            };
            echo = foxtrot.bind(backup)(romeo, verify, offset);
            zulu = options[zulu];
            verify = tango.bind(report)(zulu);
            options = verify.useStateFromStores;
            zulu = _closure1_slot4;
            tango = new Array(1);
            tango[0] = zulu;
            zulu = function() {
                entity = _closure1_slot4;
                entity = entity.useReducedMotion;
                return entity;
            };
            kilo = options.bind(verify)(tango, zulu);
            if(!(entity != echo)) { _fun88507_ip = 629; continue _fun88507 }
 174:
            options = function() { // Original name: onConfirm
                _fun88510: for(var _fun88510_ip = 0; ; ) switch(_fun88510_ip) {
 0:
                    zulu = _closure2_slot1;
                    entity = undefined;
                    zulu = zulu.bind(entity)();
                    zulu = _closure2_slot2;
                    tango = zulu.onClose;
                    zulu = null;
                    if(!(zulu != tango)) { _fun88510_ip = 43; continue _fun88510 }
 29:
                    zulu = _closure2_slot2;
                    mike = zulu.onClose;
                    mike = mike.bind(zulu)();
 43:
                    return entity;
                }
            };
            tango = _closure1_slot7;
            romeo = _closure1_slot1;
            backup = _closure1_slot2;
            mike = 7;
            mike = backup[mike];
            zulu = romeo.bind(report)(mike);
            mike = {};
            control = mike;
            source = golf;
            golf = copyDataProperties(control, source);
            foxtrot = _closure1_slot0;
            offset = 8;
            golf = backup[offset];
            golf = foxtrot.bind(report)(golf);
            sizing = golf.intl;
            verify = sizing.string;
            golf = backup[offset];
            golf = foxtrot.bind(report)(golf);
            golf = golf.t;
            golf = golf.NuzmOD;
            verify = verify.bind(sizing)(golf);
            golf = 'confirmText';
            mike[golf] = verify;
            verify = yankee.alert;
            golf = 'style';
            mike[golf] = verify;
            golf = 'onCancel';
            mike[golf] = options;
            golf = 'onConfirm';
            mike[golf] = options;
            verify = _closure1_slot6;
            golf = _closure1_slot3;
            oscar = {};
            options = yankee.illustrationContainer;
            oscar['style'] = options;
            options = 9;
            options = backup[options];
            romeo = romeo.bind(report)(options);
            options = {};
            sizing = 10;
            sizing = backup[sizing];
            sizing = foxtrot.bind(report)(sizing);
            options['source'] = sizing;
            kilo = !kilo;
            options['autoPlay'] = kilo;
            kilo = yankee.illustration;
            options['style'] = kilo;
            options = verify.bind(report)(romeo, options);
            oscar['children'] = options;
            oscar = verify.bind(report)(golf, oscar);
            golf = new Array(3);
            golf[0] = oscar;
            oscar = 11;
            options = backup[oscar];
            options = foxtrot.bind(report)(options);
            romeo = options.Text;
            options = {'style': null, 'variant': 'heading-lg/extrabold', 'color': 'header-primary'};
            kilo = yankee.header;
            options['style'] = kilo;
            kilo = backup[offset];
            kilo = foxtrot.bind(report)(kilo);
            result = kilo.intl;
            output = result.format;
            kilo = backup[offset];
            kilo = foxtrot.bind(report)(kilo);
            kilo = kilo.t;
            sizing = kilo.7hhNEh;
            kilo = {};
            echo = echo.name;
            kilo['guildName'] = echo;
            kilo = output.bind(result)(sizing, kilo);
            options['children'] = kilo;
            options = verify.bind(report)(romeo, options);
            golf[1] = options;
            oscar = backup[oscar];
            oscar = foxtrot.bind(report)(oscar);
            options = oscar.Text;
            oscar = {'style': null, 'variant': 'text-sm/medium', 'color': 'header-secondary'};
            yankee = yankee.text;
            oscar['style'] = yankee;
            yankee = backup[offset];
            yankee = foxtrot.bind(report)(yankee);
            romeo = yankee.intl;
            yankee = romeo.string;
            offset = backup[offset];
            offset = foxtrot.bind(report)(offset);
            offset = offset.t;
            offset = offset.nwpqyc;
            offset = yankee.bind(romeo)(offset);
            oscar['children'] = offset;
            oscar = verify.bind(report)(options, oscar);
            golf[2] = oscar;
            oscar = 'children';
            mike[oscar] = golf;
            mike = tango.bind(report)(zulu, mike);
            return mike;
 629:
            return entity;
        }
    };
    zulu['default'] = mike;
    return entity;
})();