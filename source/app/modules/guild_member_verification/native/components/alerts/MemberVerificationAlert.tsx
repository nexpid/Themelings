// app/modules/guild_member_verification/native/components/alerts/MemberVerificationAlert.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    report = argBar;
    yankee = argBaz;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    var _closure1_slot1 = yankee;
    var _closure1_slot2 = oscard;
    entity = global;
    option = entity.Object;
    golfie = option.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(option)(zuuluu, entity, tangon);
    entity = 0;
    golfie = oscard[entity];
    tangon = argCor;
    entity = undefined;
    tangon = tangon.bind(entity)(golfie);
    tangon = 1;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.View;
    var _closure1_slot3 = tangon;
    tangon = 2;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    golfie = tangon.jsx;
    var _closure1_slot4 = golfie;
    tangon = tangon.jsxs;
    var _closure1_slot5 = tangon;
    tangon = 3;
    tangon = oscard[tangon];
    option = report.bind(entity)(tangon);
    golfie = option.createStyles;
    tangon = {};
    verify = {'marginLeft': 'auto', 'marginRight': 'auto', 'backgroundColor': null, 'borderRadius': null, 'padding': 12, 'marginTop': 8, 'marginBottom': 8};
    offset = 4;
    romeon = oscard[offset];
    romeon = yankee.bind(entity)(romeon);
    romeon = romeon.colors;
    romeon = romeon.BG_MOD_FAINT;
    verify['backgroundColor'] = romeon;
    offset = oscard[offset];
    offset = yankee.bind(entity)(offset);
    offset = offset.radii;
    offset = offset.round;
    verify['borderRadius'] = offset;
    tangon['headerImage'] = verify;
    verify = {'marginTop': 8, 'marginBottom': 8, 'textAlign': 'center'};
    tangon['header'] = verify;
    verify = {'lineHeight': 18, 'marginBottom': 8, 'textAlign': 'center'};
    tangon['subtitle'] = verify;
    verify = {'marginTop': 16, 'marginBottom': 8, 'gap': 12};
    tangon['buttons'] = verify;
    tangon = golfie.bind(option)(tangon);
    var _closure1_slot6 = tangon;
    tangon = 7;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/guild_member_verification/native/components/alerts/MemberVerificationAlert.tsx';
    tangon = report.bind(oscard)(tangon);
    michal = function(argFoo) { // Original name: MemberVerificationAlert
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            zuuluu = argFoo;
            kiloes = zuuluu.header;
            sizing = zuuluu.icon;
            foxtra = zuuluu.subtitle;
            verify = zuuluu.buttons;
            michal = {'header': 0, 'icon': 0, 'subtitle': 0, 'buttons': 0};
            golfie = null;
            update = michal;
            echoed = null;
            entity = silentSetPrototypeOf(update, echoed);
            update = {};
            echoed = zuuluu;
            result = michal;
            echoed = copyDataProperties(update, echoed, result);
            entity = _closure1_slot6;
            tangon = undefined;
            offset = entity.bind(tangon)();
            zuuluu = _closure1_slot5;
            michal = _closure1_slot1;
            option = _closure1_slot2;
            entity = 5;
            entity = option[entity];
            michal = michal.bind(tangon)(entity);
            entity = {};
            update = entity;
            oscard = copyDataProperties(update, echoed);
            option = true;
            oscard = 'noDefaultButtons';
            entity[oscard] = option;
            oscard = golfie != sizing;
            option = null;
            if(!oscard) { _fun00002_ip = 174; continue _fun00001 }
 128:
            romeon = _closure1_slot4;
            yankee = _closure1_slot3;
            oscard = {};
            backup = offset.headerImage;
            oscard['style'] = backup;
            backup = {};
            output = 'lg';
            backup['size'] = output;
            backup = romeon.bind(tangon)(sizing, backup);
            oscard['children'] = backup;
            option = romeon.bind(tangon)(yankee, oscard);
 174:
            oscard = new Array(4);
            oscard[0] = option;
            romeon = _closure1_slot4;
            yankee = _closure1_slot0;
            option = _closure1_slot2;
            backup = 6;
            option = option[backup];
            option = yankee.bind(tangon)(option);
            yankee = option.Text;
            option = {'style': null, 'variant': 'heading-lg/bold', 'color': 'header-primary'};
            sizing = offset.header;
            option['style'] = sizing;
            option['children'] = kiloes;
            option = romeon.bind(tangon)(yankee, option);
            oscard[1] = option;
            option = golfie != foxtra;
            golfie = null;
            if(!option) { _fun00002_ip = 321; continue _fun00001 }
 259:
            romeon = _closure1_slot4;
            yankee = _closure1_slot0;
            option = _closure1_slot2;
            option = option[backup];
            option = yankee.bind(tangon)(option);
            yankee = option.Text;
            option = {'style': null, 'variant': 'text-sm/medium', 'color': 'header-secondary'};
            backup = offset.subtitle;
            option['style'] = backup;
            option['children'] = foxtra;
            golfie = romeon.bind(tangon)(yankee, option);
 321:
            oscard[2] = golfie;
            option = _closure1_slot4;
            golfie = _closure1_slot3;
            report = {};
            offset = offset.buttons;
            report['style'] = offset;
            report['children'] = verify;
            report = option.bind(tangon)(golfie, report);
            oscard[3] = report;
            report = 'children';
            entity[report] = oscard;
            entity = zuuluu.bind(tangon)(michal, entity);
            return entity;
        }
    };
    zuuluu['default'] = michal;
    return entity;
})();