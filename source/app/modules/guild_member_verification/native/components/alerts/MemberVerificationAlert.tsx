// app/modules/guild_member_verification/native/components/alerts/MemberVerificationAlert.tsx
export default (function(argFoo, argBar, argBaz, argCorge, _, argFred, argPlugh) {
    report = argBar;
    yankee = argBaz;
    zulu = argFred;
    oscar = argPlugh;
    var _closure1_slot0 = report;
    var _closure1_slot1 = yankee;
    var _closure1_slot2 = oscar;
    entity = global;
    options = entity.Object;
    golf = options.defineProperty;
    tango = {};
    entity = true;
    tango['value'] = entity;
    entity = '__esModule';
    entity = golf.bind(options)(zulu, entity, tango);
    entity = 0;
    golf = oscar[entity];
    tango = argCorge;
    entity = undefined;
    tango = tango.bind(entity)(golf);
    tango = 1;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.View;
    var _closure1_slot3 = tango;
    tango = 2;
    golf = oscar[tango];
    golf = report.bind(entity)(golf);
    golf = golf.jsx;
    var _closure1_slot4 = golf;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.jsxs;
    var _closure1_slot5 = tango;
    tango = 3;
    tango = oscar[tango];
    options = report.bind(entity)(tango);
    golf = options.createStyles;
    tango = {};
    verify = {'marginLeft': 'auto', 'marginRight': 'auto', 'backgroundColor': null, 'borderRadius': null, 'padding': 12, 'marginTop': 8, 'marginBottom': 8};
    offset = 4;
    romeo = oscar[offset];
    romeo = yankee.bind(entity)(romeo);
    romeo = romeo.colors;
    romeo = romeo.BG_MOD_FAINT;
    verify['backgroundColor'] = romeo;
    offset = oscar[offset];
    offset = yankee.bind(entity)(offset);
    offset = offset.radii;
    offset = offset.round;
    verify['borderRadius'] = offset;
    tango['headerImage'] = verify;
    verify = {'marginTop': 8, 'marginBottom': 8, 'textAlign': 'center'};
    tango['header'] = verify;
    verify = {'lineHeight': 18, 'marginBottom': 8, 'textAlign': 'center'};
    tango['subtitle'] = verify;
    verify = {'marginTop': 16, 'marginBottom': 8, 'gap': 12};
    tango['buttons'] = verify;
    tango = golf.bind(options)(tango);
    var _closure1_slot6 = tango;
    tango = 7;
    tango = oscar[tango];
    oscar = report.bind(entity)(tango);
    report = oscar.fileFinishedImporting;
    tango = 'modules/guild_member_verification/native/components/alerts/MemberVerificationAlert.tsx';
    tango = report.bind(oscar)(tango);
    mike = function(argFoo) { // Original name: MemberVerificationAlert
        _fun88499: for(var _fun88499_ip = 0; ; ) switch(_fun88499_ip) {
 0:
            zulu = argFoo;
            kilo = zulu.header;
            sizing = zulu.icon;
            foxtrot = zulu.subtitle;
            verify = zulu.buttons;
            mike = {'header': 0, 'icon': 0, 'subtitle': 0, 'buttons': 0};
            golf = null;
            update = mike;
            echo = null;
            entity = silentSetPrototypeOf(update, echo);
            update = {};
            echo = zulu;
            result = mike;
            echo = copyDataProperties(update, echo, result);
            entity = _closure1_slot6;
            tango = undefined;
            offset = entity.bind(tango)();
            zulu = _closure1_slot5;
            mike = _closure1_slot1;
            options = _closure1_slot2;
            entity = 5;
            entity = options[entity];
            mike = mike.bind(tango)(entity);
            entity = {};
            update = entity;
            oscar = copyDataProperties(update, echo);
            options = true;
            oscar = 'noDefaultButtons';
            entity[oscar] = options;
            oscar = golf != sizing;
            options = null;
            if(!oscar) { _fun88499_ip = 170; continue _fun88499 }
 124:
            romeo = _closure1_slot4;
            yankee = _closure1_slot3;
            oscar = {};
            backup = offset.headerImage;
            oscar['style'] = backup;
            backup = {};
            output = 'lg';
            backup['size'] = output;
            backup = romeo.bind(tango)(sizing, backup);
            oscar['children'] = backup;
            options = romeo.bind(tango)(yankee, oscar);
 170:
            oscar = new Array(4);
            oscar[0] = options;
            romeo = _closure1_slot4;
            yankee = _closure1_slot0;
            options = _closure1_slot2;
            backup = 6;
            options = options[backup];
            options = yankee.bind(tango)(options);
            yankee = options.Text;
            options = {'style': null, 'variant': 'heading-lg/bold', 'color': 'header-primary'};
            sizing = offset.header;
            options['style'] = sizing;
            options['children'] = kilo;
            options = romeo.bind(tango)(yankee, options);
            oscar[1] = options;
            options = golf != foxtrot;
            golf = null;
            if(!options) { _fun88499_ip = 313; continue _fun88499 }
 251:
            romeo = _closure1_slot4;
            yankee = _closure1_slot0;
            options = _closure1_slot2;
            options = options[backup];
            options = yankee.bind(tango)(options);
            yankee = options.Text;
            options = {'style': null, 'variant': 'text-sm/medium', 'color': 'header-secondary'};
            backup = offset.subtitle;
            options['style'] = backup;
            options['children'] = foxtrot;
            golf = romeo.bind(tango)(yankee, options);
 313:
            oscar[2] = golf;
            options = _closure1_slot4;
            golf = _closure1_slot3;
            report = {};
            offset = offset.buttons;
            report['style'] = offset;
            report['children'] = verify;
            report = options.bind(tango)(golf, report);
            oscar[3] = report;
            report = 'children';
            entity[report] = oscar;
            entity = zulu.bind(tango)(mike, entity);
            return entity;
        }
    };
    zulu['default'] = mike;
    return entity;
})();