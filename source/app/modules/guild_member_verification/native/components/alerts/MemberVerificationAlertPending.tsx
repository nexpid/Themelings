// app/modules/guild_member_verification/native/components/alerts/MemberVerificationAlertPending.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    report = argBar;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    entity = argBaz;
    var _closure1_slot1 = entity;
    var _closure1_slot2 = oscard;
    entity = global;
    option = entity.Object;
    golfie = option.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(option)(zuuluu, entity, tangon);
    entity = 0;
    golfie = oscard[entity];
    tangon = argCor;
    entity = undefined;
    tangon = tangon.bind(entity)(golfie);
    var _closure1_slot3 = tangon;
    tangon = 1;
    golfie = oscard[tangon];
    golfie = report.bind(entity)(golfie);
    golfie = golfie.jsx;
    var _closure1_slot4 = golfie;
    golfie = oscard[tangon];
    golfie = report.bind(entity)(golfie);
    golfie = golfie.Fragment;
    var _closure1_slot5 = golfie;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.jsxs;
    var _closure1_slot6 = tangon;
    tangon = 7;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/guild_member_verification/native/components/alerts/MemberVerificationAlertPending.tsx';
    tangon = report.bind(oscard)(tangon);
    michal = function(argFoo) { // Original name: MemberVerificationAlertPending
        tangon = argFoo;
        golfie = tangon.guildId;
        var _closure2_slot0 = golfie;
        foxtra = tangon.onClose;
        var _closure2_slot1 = foxtra;
        michal = null;
        zuuluu = Object.create(michal);
        michal = 0;
        zuuluu['guildId'] = michal;
        zuuluu['onClose'] = michal;
        source = {};
        update = tangon;
        echoed = zuuluu;
        oscard = copyDataProperties(source, update, echoed);
        tangon = _closure1_slot3;
        zuuluu = tangon.useCallback;
        michal = new Array(2);
        michal[0] = golfie;
        michal[1] = foxtra;
        entity = function() {
            _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
                michal = _closure2_slot1;
                entity = null;
                if(!(entity != michal)) { _fun00002_ip = 23; continue _fun00001 }
 13:
                michal = _closure2_slot1;
                entity = undefined;
                entity = michal.bind(entity)();
 23:
                zuuluu = _closure1_slot0;
                michal = _closure1_slot2;
                entity = 2;
                michal = michal[entity];
                entity = undefined;
                tangon = zuuluu.bind(entity)(michal);
                zuuluu = tangon.openMemberVerificationCancelPendingAlert;
                michal = {};
                report = _closure2_slot0;
                michal['guildId'] = report;
                michal = zuuluu.bind(tangon)(michal);
                return entity;
            }
        };
        yankee = zuuluu.bind(tangon)(entity, michal);
        tangon = _closure1_slot4;
        michal = _closure1_slot1;
        sizing = _closure1_slot2;
        entity = 3;
        entity = sizing[entity];
        zuuluu = undefined;
        michal = michal.bind(zuuluu)(entity);
        entity = {};
        source = entity;
        update = oscard;
        oscard = copyDataProperties(source, update);
        kiloes = _closure1_slot0;
        oscard = 4;
        oscard = sizing[oscard];
        oscard = kiloes.bind(zuuluu)(oscard);
        golfie = oscard.ClipboardListIcon;
        oscard = 'icon';
        entity[oscard] = golfie;
        romeon = 5;
        oscard = sizing[romeon];
        oscard = kiloes.bind(zuuluu)(oscard);
        option = oscard.intl;
        golfie = option.string;
        oscard = sizing[romeon];
        oscard = kiloes.bind(zuuluu)(oscard);
        oscard = oscard.t;
        oscard = oscard.zhfXbm;
        golfie = golfie.bind(option)(oscard);
        oscard = 'header';
        entity[oscard] = golfie;
        oscard = sizing[romeon];
        oscard = kiloes.bind(zuuluu)(oscard);
        option = oscard.intl;
        golfie = option.string;
        oscard = sizing[romeon];
        oscard = kiloes.bind(zuuluu)(oscard);
        oscard = oscard.t;
        oscard = oscard.SRM/e3;
        golfie = golfie.bind(option)(oscard);
        oscard = 'subtitle';
        entity[oscard] = golfie;
        golfie = _closure1_slot6;
        oscard = _closure1_slot5;
        report = {};
        verify = 6;
        option = sizing[verify];
        option = kiloes.bind(zuuluu)(option);
        offset = option.Button;
        option = {};
        backup = 'secondary';
        option['variant'] = backup;
        backup = sizing[romeon];
        backup = kiloes.bind(zuuluu)(backup);
        result = backup.intl;
        output = result.string;
        backup = sizing[romeon];
        backup = kiloes.bind(zuuluu)(backup);
        backup = backup.t;
        backup = backup.f293OD;
        backup = output.bind(result)(backup);
        option['text'] = backup;
        option['onPress'] = foxtra;
        offset = tangon.bind(zuuluu)(offset, option);
        option = new Array(2);
        option[0] = offset;
        verify = sizing[verify];
        verify = kiloes.bind(zuuluu)(verify);
        offset = verify.Button;
        verify = {};
        foxtra = sizing[romeon];
        foxtra = kiloes.bind(zuuluu)(foxtra);
        backup = foxtra.intl;
        foxtra = backup.string;
        romeon = sizing[romeon];
        romeon = kiloes.bind(zuuluu)(romeon);
        romeon = romeon.t;
        romeon = romeon.mqtdmZ;
        romeon = foxtra.bind(backup)(romeon);
        verify['text'] = romeon;
        romeon = 'destructive';
        verify['variant'] = romeon;
        verify['onPress'] = yankee;
        verify = tangon.bind(zuuluu)(offset, verify);
        option[1] = verify;
        report['children'] = option;
        oscard = golfie.bind(zuuluu)(oscard, report);
        report = 'buttons';
        entity[report] = oscard;
        entity = tangon.bind(zuuluu)(michal, entity);
        return entity;
    };
    zuuluu['default'] = michal;
    return entity;
})();