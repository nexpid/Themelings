// app/modules/guild_member_verification/native/components/alerts/MemberVerificationAlertPending.tsx
export default (function(argFoo, argBar, argBaz, argCorge, _, argFred, argPlugh) {
    report = argBar;
    zulu = argFred;
    oscar = argPlugh;
    var _closure1_slot0 = report;
    entity = argBaz;
    var _closure1_slot1 = entity;
    var _closure1_slot2 = oscar;
    entity = global;
    options = entity.Object;
    golf = options.defineProperty;
    tango = {};
    entity = true;
    tango['value'] = entity;
    entity = '__esModule';
    entity = golf.bind(options)(zulu, entity, tango);
    entity = 0;
    golf = oscar[entity];
    tango = argCorge;
    entity = undefined;
    tango = tango.bind(entity)(golf);
    var _closure1_slot3 = tango;
    tango = 1;
    golf = oscar[tango];
    golf = report.bind(entity)(golf);
    golf = golf.jsx;
    var _closure1_slot4 = golf;
    golf = oscar[tango];
    golf = report.bind(entity)(golf);
    golf = golf.Fragment;
    var _closure1_slot5 = golf;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.jsxs;
    var _closure1_slot6 = tango;
    tango = 7;
    tango = oscar[tango];
    oscar = report.bind(entity)(tango);
    report = oscar.fileFinishedImporting;
    tango = 'modules/guild_member_verification/native/components/alerts/MemberVerificationAlertPending.tsx';
    tango = report.bind(oscar)(tango);
    mike = function(argFoo) { // Original name: MemberVerificationAlertPending
        tango = argFoo;
        golf = tango.guildId;
        var _closure2_slot0 = golf;
        foxtrot = tango.onClose;
        var _closure2_slot1 = foxtrot;
        mike = null;
        zulu = Object.create(mike);
        mike = 0;
        zulu['guildId'] = mike;
        zulu['onClose'] = mike;
        source = {};
        update = tango;
        echo = zulu;
        oscar = copyDataProperties(source, update, echo);
        tango = _closure1_slot3;
        zulu = tango.useCallback;
        mike = new Array(2);
        mike[0] = golf;
        mike[1] = foxtrot;
        entity = function() {
            _fun88514: for(var _fun88514_ip = 0; ; ) switch(_fun88514_ip) {
 0:
                mike = _closure2_slot1;
                entity = null;
                if(!(entity != mike)) { _fun88514_ip = 23; continue _fun88514 }
 13:
                mike = _closure2_slot1;
                entity = undefined;
                entity = mike.bind(entity)();
 23:
                zulu = _closure1_slot0;
                mike = _closure1_slot2;
                entity = 2;
                mike = mike[entity];
                entity = undefined;
                tango = zulu.bind(entity)(mike);
                zulu = tango.openMemberVerificationCancelPendingAlert;
                mike = {};
                report = _closure2_slot0;
                mike['guildId'] = report;
                mike = zulu.bind(tango)(mike);
                return entity;
            }
        };
        yankee = zulu.bind(tango)(entity, mike);
        tango = _closure1_slot4;
        mike = _closure1_slot1;
        sizing = _closure1_slot2;
        entity = 3;
        entity = sizing[entity];
        zulu = undefined;
        mike = mike.bind(zulu)(entity);
        entity = {};
        source = entity;
        update = oscar;
        oscar = copyDataProperties(source, update);
        kilo = _closure1_slot0;
        oscar = 4;
        oscar = sizing[oscar];
        oscar = kilo.bind(zulu)(oscar);
        golf = oscar.ClipboardListIcon;
        oscar = 'icon';
        entity[oscar] = golf;
        romeo = 5;
        oscar = sizing[romeo];
        oscar = kilo.bind(zulu)(oscar);
        options = oscar.intl;
        golf = options.string;
        oscar = sizing[romeo];
        oscar = kilo.bind(zulu)(oscar);
        oscar = oscar.t;
        oscar = oscar.zhfXbm;
        golf = golf.bind(options)(oscar);
        oscar = 'header';
        entity[oscar] = golf;
        oscar = sizing[romeo];
        oscar = kilo.bind(zulu)(oscar);
        options = oscar.intl;
        golf = options.string;
        oscar = sizing[romeo];
        oscar = kilo.bind(zulu)(oscar);
        oscar = oscar.t;
        oscar = oscar.SRM/e3;
        golf = golf.bind(options)(oscar);
        oscar = 'subtitle';
        entity[oscar] = golf;
        golf = _closure1_slot6;
        oscar = _closure1_slot5;
        report = {};
        verify = 6;
        options = sizing[verify];
        options = kilo.bind(zulu)(options);
        offset = options.Button;
        options = {};
        backup = 'secondary';
        options['variant'] = backup;
        backup = sizing[romeo];
        backup = kilo.bind(zulu)(backup);
        result = backup.intl;
        output = result.string;
        backup = sizing[romeo];
        backup = kilo.bind(zulu)(backup);
        backup = backup.t;
        backup = backup.f293OD;
        backup = output.bind(result)(backup);
        options['text'] = backup;
        options['onPress'] = foxtrot;
        offset = tango.bind(zulu)(offset, options);
        options = new Array(2);
        options[0] = offset;
        verify = sizing[verify];
        verify = kilo.bind(zulu)(verify);
        offset = verify.Button;
        verify = {};
        foxtrot = sizing[romeo];
        foxtrot = kilo.bind(zulu)(foxtrot);
        backup = foxtrot.intl;
        foxtrot = backup.string;
        romeo = sizing[romeo];
        romeo = kilo.bind(zulu)(romeo);
        romeo = romeo.t;
        romeo = romeo.mqtdmZ;
        romeo = foxtrot.bind(backup)(romeo);
        verify['text'] = romeo;
        romeo = 'destructive';
        verify['variant'] = romeo;
        verify['onPress'] = yankee;
        verify = tango.bind(zulu)(offset, verify);
        options[1] = verify;
        report['children'] = options;
        oscar = golf.bind(zulu)(oscar, report);
        report = 'buttons';
        entity[report] = oscar;
        entity = tango.bind(zulu)(mike, entity);
        return entity;
    };
    zulu['default'] = mike;
    return entity;
})();