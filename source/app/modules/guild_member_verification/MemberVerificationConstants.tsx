// app/modules/guild_member_verification/MemberVerificationConstants.tsx
export default (function(_, argBar, __, ___, ____, argFred, argPlugh) {
    options = argBar;
    zulu = argFred;
    verify = argPlugh;
    mike = global;
    oscar = mike.Object;
    report = oscar.defineProperty;
    tango = {};
    entity = true;
    tango['value'] = entity;
    entity = '__esModule';
    entity = report.bind(oscar)(zulu, entity, tango);
    report = {};
    tango = 0;
    oscar = verify[tango];
    entity = undefined;
    oscar = options.bind(entity)(oscar);
    oscar = oscar.VerificationFormFieldTypes;
    oscar = oscar.VERIFICATION;
    report['field_type'] = oscar;
    oscar = new Array(1);
    oscar[0] = report;
    offset = mike.Set;
    report = verify[tango];
    report = options.bind(entity)(report);
    report = report.VerificationFormFieldTypes;
    golf = report.TERMS;
    report = new Array(1);
    report[0] = golf;
    golf = offset.prototype;
    golf = Object.create(golf, {constructor: {value: offset}});
    backup = golf;
    foxtrot = report;
    report = new backup[offset](foxtrot, romeo);
    report = report instanceof Object ? report : golf;
    golf = mike.Set;
    mike = verify[tango];
    mike = options.bind(entity)(mike);
    mike = mike.VerificationFormFieldTypes;
    offset = mike.MULTIPLE_CHOICE;
    mike = new Array(3);
    mike[0] = offset;
    offset = verify[tango];
    offset = options.bind(entity)(offset);
    offset = offset.VerificationFormFieldTypes;
    offset = offset.TEXT_INPUT;
    mike[1] = offset;
    tango = verify[tango];
    tango = options.bind(entity)(tango);
    tango = tango.VerificationFormFieldTypes;
    tango = tango.PARAGRAPH;
    mike[2] = tango;
    tango = golf.prototype;
    tango = Object.create(tango, {constructor: {value: golf}});
    backup = tango;
    foxtrot = mike;
    mike = new backup[golf](foxtrot, romeo);
    tango = mike instanceof Object ? mike : tango;
    mike = {};
    golf = 'VERIFICATION_INFO';
    mike['VERIFICATION_INFO'] = golf;
    golf = 1;
    golf = verify[golf];
    verify = options.bind(entity)(golf);
    options = verify.fileFinishedImporting;
    golf = 'modules/guild_member_verification/MemberVerificationConstants.tsx';
    golf = options.bind(verify)(golf);
    zulu['REQUIRED_FORM_FIELDS'] = oscar;
    zulu['AUTOMATIC_APPROVAL_FORM_FIELDS'] = report;
    zulu['MANUAL_APPROVAL_FORM_FIELDS'] = tango;
    tango = 5;
    zulu['MAX_FORM_ELEMENTS'] = tango;
    tango = 16;
    zulu['MAX_NUM_RULES'] = tango;
    tango = 300;
    zulu['MAX_RULE_LENGTH'] = tango;
    zulu['MAX_QUESTION_LENGTH'] = tango;
    report = 150;
    zulu['MAX_PLACEHOLDER_LENGTH'] = report;
    oscar = 8;
    zulu['MAX_NUM_CHOICES'] = oscar;
    zulu['MAX_CHOICE_LENGTH'] = report;
    zulu['MAX_TEXT_RESPONSE_LENGTH'] = report;
    report = 1000;
    zulu['MAX_PARAGRAPH_RESPONSE_LENGTH'] = report;
    zulu['MAX_DESCRIPTION_LENGTH'] = tango;
    tango = 'Membership Gating';
    zulu['MEMBER_VERIFICATION_TYPE'] = tango;
    tango = 'in-app-member-verification';
    zulu['IN_APP_MEMBER_VERIFICATION_MODAL_KEY'] = tango;
    zulu['MemberVerificationModalStates'] = mike;
    return entity;
})();