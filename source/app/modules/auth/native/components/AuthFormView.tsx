// app/modules/auth/native/components/AuthFormView.tsx
export default (function(argFoo, argBar, argBaz, argCorge, _, argFred, argPlugh) {
    report = argBar;
    romeo = argBaz;
    zulu = argFred;
    oscar = argPlugh;
    var _closure1_slot0 = report;
    var _closure1_slot1 = romeo;
    var _closure1_slot2 = oscar;
    entity = global;
    options = entity.Object;
    golf = options.defineProperty;
    tango = {};
    entity = true;
    tango['value'] = entity;
    entity = '__esModule';
    entity = golf.bind(options)(zulu, entity, tango);
    entity = 0;
    golf = oscar[entity];
    tango = argCorge;
    entity = undefined;
    tango = tango.bind(entity)(golf);
    offset = 1;
    tango = oscar[offset];
    tango = report.bind(entity)(tango);
    golf = tango.View;
    var _closure1_slot3 = golf;
    tango = tango.ScrollView;
    var _closure1_slot4 = tango;
    tango = 2;
    golf = oscar[tango];
    golf = report.bind(entity)(golf);
    golf = golf.jsx;
    var _closure1_slot5 = golf;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.jsxs;
    var _closure1_slot6 = tango;
    tango = 3;
    tango = oscar[tango];
    options = report.bind(entity)(tango);
    golf = options.createStyles;
    tango = {};
    verify = {};
    yankee = 4;
    yankee = oscar[yankee];
    yankee = romeo.bind(entity)(yankee);
    yankee = yankee.colors;
    yankee = yankee.BACKGROUND_PRIMARY;
    verify['backgroundColor'] = yankee;
    verify['flex'] = offset;
    tango['container'] = verify;
    verify = {};
    verify['flex'] = offset;
    tango['flex'] = verify;
    verify = {'padding': 16, 'paddingTop': 0};
    tango['content'] = verify;
    verify = {'textAlign': 'center', 'marginTop': 8};
    tango['subHeader'] = verify;
    tango = golf.bind(options)(tango);
    var _closure1_slot7 = tango;
    tango = 10;
    tango = oscar[tango];
    oscar = report.bind(entity)(tango);
    report = oscar.fileFinishedImporting;
    tango = 'modules/auth/native/components/AuthFormView.tsx';
    tango = report.bind(oscar)(tango);
    mike = function(argFoo) { // Original name: AuthFormView
        _fun111612: for(var _fun111612_ip = 0; ; ) switch(_fun111612_ip) {
 0:
            entity = argFoo;
            romeo = entity.children;
            update = entity.headerText;
            output = entity.subHeaderText;
            foxtrot = entity.contentStyle;
            options = entity.backgroundImageSource;
            golf = entity.backgroundImageCover;
            entity = _closure1_slot7;
            tango = undefined;
            result = entity.bind(tango)();
            zulu = _closure1_slot6;
            mike = _closure1_slot3;
            entity = {};
            oscar = result.container;
            report = new Array(2);
            report[0] = oscar;
            oscar = result.flex;
            report[1] = oscar;
            entity['style'] = report;
            offset = _closure1_slot5;
            verify = _closure1_slot1;
            yankee = _closure1_slot2;
            report = 5;
            report = yankee[report];
            oscar = verify.bind(tango)(report);
            report = {};
            report['backgroundImageSource'] = options;
            report['backgroundImageCover'] = golf;
            oscar = offset.bind(tango)(oscar, report);
            report = new Array(2);
            report[0] = oscar;
            oscar = 6;
            oscar = yankee[oscar];
            golf = verify.bind(tango)(oscar);
            oscar = {};
            options = result.flex;
            oscar['style'] = options;
            options = 7;
            options = yankee[options];
            verify = verify.bind(tango)(options);
            options = {};
            verify = offset.bind(tango)(verify, options);
            options = new Array(2);
            options[0] = verify;
            offset = _closure1_slot4;
            verify = {'contentInset': null, 'automaticallyAdjustContentInsets': false, 'keyboardShouldPersistTaps': 'handled', 'alwaysBounceVertical': false};
            yankee = {};
            kilo = 0;
            yankee['top'] = kilo;
            verify['contentInset'] = yankee;
            yankee = result.flex;
            verify['style'] = yankee;
            kilo = result.content;
            yankee = new Array(2);
            yankee[0] = kilo;
            yankee[1] = foxtrot;
            verify['contentContainerStyle'] = yankee;
            foxtrot = null;
            yankee = foxtrot != update;
            kilo = null;
            if(!yankee) { _fun111612_ip = 298; continue _fun111612 }
 262:
            echo = _closure1_slot5;
            sizing = _closure1_slot1;
            source = _closure1_slot2;
            yankee = 8;
            yankee = source[yankee];
            sizing = sizing.bind(tango)(yankee);
            yankee = {};
            yankee['children'] = update;
            kilo = echo.bind(tango)(sizing, yankee);
 298:
            yankee = new Array(3);
            yankee[0] = kilo;
            kilo = foxtrot != output;
            foxtrot = null;
            if(!kilo) { _fun111612_ip = 380; continue _fun111612 }
 315:
            sizing = _closure1_slot5;
            kilo = _closure1_slot0;
            echo = _closure1_slot2;
            backup = 9;
            backup = echo[backup];
            backup = kilo.bind(tango)(backup);
            kilo = backup.Text;
            backup = {'style': null, 'variant': 'text-sm/medium', 'color': 'header-secondary'};
            result = result.subHeader;
            backup['style'] = result;
            backup['children'] = output;
            foxtrot = sizing.bind(tango)(kilo, backup);
 380:
            yankee[1] = foxtrot;
            yankee[2] = romeo;
            verify['children'] = yankee;
            verify = zulu.bind(tango)(offset, verify);
            options[1] = verify;
            oscar['children'] = options;
            oscar = zulu.bind(tango)(golf, oscar);
            report[1] = oscar;
            entity['children'] = report;
            entity = zulu.bind(tango)(mike, entity);
            return entity;
        }
    };
    zulu['default'] = mike;
    return entity;
})();