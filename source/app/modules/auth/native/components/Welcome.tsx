// app/modules/auth/native/components/Welcome.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    report = argBar;
    yankee = argBaz;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    var _closure1_slot1 = yankee;
    var _closure1_slot2 = oscard;
    entity = function(argFoo) { // Original name: InviteCard
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            entity = argFoo;
            michal = entity.invite;
            golfie = entity.style;
            entity = _closure1_slot24;
            tangon = undefined;
            backup = entity.bind(tangon)();
            entity = michal.guild;
            verify = michal.inviter;
            zuuluu = michal.channel;
            report = michal.state;
            michal = _closure1_slot18;
            michal = michal.RESOLVED;
            if(!(report === michal)) { _fun00002_ip = 680; continue _fun00001 }
 65:
            michal = null;
            if(!(michal == entity)) { _fun00002_ip = 412; continue _fun00001 }
 74:
            if(!(michal == zuuluu)) { _fun00002_ip = 241; continue _fun00001 }
 81:
            if(!(michal != verify)) { _fun00002_ip = 239; continue _fun00001 }
 88:
            oscard = _closure1_slot21;
            option = _closure1_slot1;
            offset = _closure1_slot2;
            zuuluu = 18;
            zuuluu = offset[zuuluu];
            report = option.bind(tangon)(zuuluu);
            zuuluu = {};
            yankee = _closure1_slot12;
            foxtra = yankee.prototype;
            foxtra = Object.create(foxtra, {constructor: {value: yankee}});
            ctrled = foxtra;
            source = verify;
            yankee = new ctrled[yankee](source, update);
            yankee = yankee instanceof Object ? yankee : foxtra;
            zuuluu['user'] = yankee;
            zuuluu['guildId'] = tangon;
            oscard = oscard.bind(tangon)(report, zuuluu);
            foxtra = _closure1_slot0;
            zuuluu = 16;
            report = offset[zuuluu];
            report = foxtra.bind(tangon)(report);
            yankee = report.intl;
            report = yankee.string;
            zuuluu = offset[zuuluu];
            zuuluu = foxtra.bind(tangon)(zuuluu);
            zuuluu = zuuluu.t;
            zuuluu = zuuluu.+ITYkZ;
            result = report.bind(yankee)(zuuluu);
            zuuluu = 19;
            zuuluu = offset[zuuluu];
            offset = option.bind(tangon)(zuuluu);
            option = offset.getFormattedName;
            zuuluu = true;
            foxtra = option.bind(offset)(verify, zuuluu);
            _fun00002_ip = 504; continue _fun00001;
 239:
            return michal;
 241:
            option = _closure1_slot1;
            offset = _closure1_slot2;
            zuuluu = 17;
            zuuluu = offset[zuuluu];
            report = option.bind(tangon)(zuuluu);
            zuuluu = michal != verify;
            michal = 'Null inviter';
            michal = report.bind(tangon)(zuuluu, michal);
            report = _closure1_slot21;
            michal = 18;
            michal = offset[michal];
            zuuluu = option.bind(tangon)(michal);
            michal = {};
            yankee = _closure1_slot12;
            kiloes = yankee.prototype;
            kiloes = Object.create(kiloes, {constructor: {value: yankee}});
            ctrled = kiloes;
            source = verify;
            yankee = new ctrled[yankee](source, update);
            yankee = yankee instanceof Object ? yankee : kiloes;
            michal['user'] = yankee;
            michal['guildId'] = tangon;
            oscard = report.bind(tangon)(zuuluu, michal);
            kiloes = _closure1_slot0;
            michal = 16;
            zuuluu = offset[michal];
            zuuluu = kiloes.bind(tangon)(zuuluu);
            yankee = zuuluu.intl;
            zuuluu = yankee.string;
            michal = offset[michal];
            michal = kiloes.bind(tangon)(michal);
            michal = michal.t;
            michal = michal.OsdY8P;
            result = zuuluu.bind(yankee)(michal);
            michal = 19;
            michal = offset[michal];
            option = option.bind(tangon)(michal);
            michal = option.getFormattedName;
            foxtra = michal.bind(option)(verify);
            _fun00002_ip = 504; continue _fun00001;
 412:
            report = _closure1_slot21;
            zuuluu = _closure1_slot1;
            offset = _closure1_slot2;
            michal = 15;
            michal = offset[michal];
            zuuluu = zuuluu.bind(tangon)(michal);
            michal = {};
            michal['guild'] = entity;
            oscard = report.bind(tangon)(zuuluu, michal);
            verify = _closure1_slot0;
            michal = 16;
            report = offset[michal];
            report = verify.bind(tangon)(report);
            option = report.intl;
            report = option.string;
            michal = offset[michal];
            michal = verify.bind(tangon)(michal);
            michal = michal.t;
            michal = michal.3rE1Pz;
            result = report.bind(option)(michal);
            foxtra = entity.name;
 504:
            zuuluu = _closure1_slot22;
            michal = _closure1_slot4;
            entity = {};
            option = backup.container;
            report = new Array(2);
            report[0] = option;
            report[1] = golfie;
            entity['style'] = report;
            report = new Array(2);
            report[0] = oscard;
            option = _closure1_slot22;
            golfie = _closure1_slot4;
            oscard = {};
            verify = backup.text;
            oscard['style'] = verify;
            output = _closure1_slot21;
            yankee = _closure1_slot1;
            kiloes = _closure1_slot2;
            offset = 20;
            verify = kiloes[offset];
            sizing = yankee.bind(tangon)(verify);
            verify = {};
            echoed = backup.inviteText;
            verify['style'] = echoed;
            verify['children'] = result;
            sizing = output.bind(tangon)(sizing, verify);
            verify = new Array(2);
            verify[0] = sizing;
            romeon = _closure1_slot21;
            offset = kiloes[offset];
            yankee = yankee.bind(tangon)(offset);
            offset = {};
            backup = backup.name;
            offset['style'] = backup;
            offset['children'] = foxtra;
            offset = romeon.bind(tangon)(yankee, offset);
            verify[1] = offset;
            oscard['children'] = verify;
            oscard = option.bind(tangon)(golfie, oscard);
            report[1] = oscard;
            entity['children'] = report;
            entity = zuuluu.bind(tangon)(michal, entity);
            return entity;
 680:
            entity = null;
            return entity;
        }
    };
    var _closure1_slot25 = entity;
    entity = function(argFoo) { // Original name: GuildTemplateCard
        entity = argFoo;
        foxtra = entity.guildTemplate;
        oscard = entity.style;
        entity = _closure1_slot24;
        tangon = undefined;
        backup = entity.bind(tangon)();
        zuuluu = _closure1_slot22;
        michal = _closure1_slot4;
        entity = {};
        golfie = backup.container;
        report = new Array(2);
        report[0] = golfie;
        report[1] = oscard;
        entity['style'] = report;
        golfie = _closure1_slot21;
        oscard = _closure1_slot5;
        report = {};
        yankee = _closure1_slot1;
        kiloes = _closure1_slot2;
        option = 21;
        option = kiloes[option];
        option = yankee.bind(tangon)(option);
        report['source'] = option;
        oscard = golfie.bind(tangon)(oscard, report);
        report = new Array(2);
        report[0] = oscard;
        option = _closure1_slot22;
        golfie = _closure1_slot4;
        oscard = {};
        verify = backup.text;
        oscard['style'] = verify;
        output = _closure1_slot21;
        offset = 20;
        verify = kiloes[offset];
        sizing = yankee.bind(tangon)(verify);
        verify = {};
        result = backup.inviteText;
        verify['style'] = result;
        source = _closure1_slot0;
        result = 16;
        echoed = kiloes[result];
        echoed = source.bind(tangon)(echoed);
        update = echoed.intl;
        echoed = update.string;
        result = kiloes[result];
        result = source.bind(tangon)(result);
        result = result.t;
        result = result.QzUORU;
        result = echoed.bind(update)(result);
        verify['children'] = result;
        sizing = output.bind(tangon)(sizing, verify);
        verify = new Array(2);
        verify[0] = sizing;
        romeon = _closure1_slot21;
        offset = kiloes[offset];
        yankee = yankee.bind(tangon)(offset);
        offset = {};
        backup = backup.name;
        offset['style'] = backup;
        foxtra = foxtra.name;
        offset['children'] = foxtra;
        offset = romeon.bind(tangon)(yankee, offset);
        verify[1] = offset;
        oscard['children'] = verify;
        oscard = option.bind(tangon)(golfie, oscard);
        report[1] = oscard;
        entity['children'] = report;
        entity = zuuluu.bind(tangon)(michal, entity);
        return entity;
    };
    var _closure1_slot26 = entity;
    entity = function(argFoo) { // Original name: Centerpiece
        _fun00003: for(var _fun00004_ip = 0; ; ) switch(_fun00004_ip) {
 0:
            entity = argFoo;
            source = entity.invite;
            output = entity.guildTemplate;
            entity = _closure1_slot23;
            tangon = undefined;
            sequen = entity.bind(tangon)();
            michal = _closure1_slot0;
            zuuluu = _closure1_slot2;
            entity = 22;
            entity = zuuluu[entity];
            yankee = michal.bind(tangon)(entity);
            foxtra = null;
            result = foxtra != source;
            kiloes = foxtra != output;
            if(!kiloes) { _fun00004_ip = 80; continue _fun00003 }
 61:
            michal = output.state;
            entity = _closure1_slot19;
            entity = entity.RESOLVED;
            kiloes = michal === entity;
 80:
            zuuluu = _closure1_slot21;
            michal = _closure1_slot4;
            entity = {};
            oscard = sequen.centerpieceContainer;
            report = new Array(1);
            report[0] = oscard;
            entity['style'] = report;
            golfie = _closure1_slot22;
            oscard = _closure1_slot7;
            report = {};
            option = false;
            report['alwaysBounceVertical'] = option;
            option = sequen.scrollViewContainer;
            report['contentContainerStyle'] = option;
            offset = _closure1_slot21;
            verify = _closure1_slot5;
            option = {};
            romeon = sequen.logo;
            option['style'] = romeon;
            option['source'] = yankee;
            verify = offset.bind(tangon)(verify, option);
            option = new Array(2);
            option[0] = verify;
            yankee = _closure1_slot22;
            offset = _closure1_slot4;
            verify = {};
            vacuum = _closure1_slot21;
            echoed = _closure1_slot0;
            ctrled = _closure1_slot2;
            sizing = 23;
            romeon = ctrled[sizing];
            romeon = echoed.bind(tangon)(romeon);
            update = romeon.Text;
            romeon = {'style': null, 'adjustsFontSizeToFit': true, 'lineClamp': 2, 'variant': 'display-md', 'color': 'always-white', 'maxFontSizeMultiplier': 1};
            config = sequen.header;
            romeon['style'] = config;
            record = 16;
            config = ctrled[record];
            config = echoed.bind(tangon)(config);
            papara = config.intl;
            cntext = papara.string;
            config = ctrled[record];
            config = echoed.bind(tangon)(config);
            config = config.t;
            config = config.3S2xmp;
            config = cntext.bind(papara)(config);
            romeon['children'] = config;
            update = vacuum.bind(tangon)(update, romeon);
            romeon = new Array(4);
            romeon[0] = update;
            update = _closure1_slot21;
            sizing = ctrled[sizing];
            sizing = echoed.bind(tangon)(sizing);
            echoed = sizing.Text;
            sizing = {'variant': 'text-md/medium', 'color': 'always-white', 'style': null, 'maxFontSizeMultiplier': 3};
            vacuum = sequen.subHeader;
            ctrled = new Array(2);
            ctrled[0] = vacuum;
            if(result) { _fun00004_ip = 357; continue _fun00003 }
 352:
            vacuum = null;
            if(!kiloes) { _fun00004_ip = 363; continue _fun00003 }
 357:
            vacuum = sequen.subHeaderWithInvite;
 363:
            ctrled[1] = vacuum;
            sizing['style'] = ctrled;
            config = _closure1_slot0;
            ctrled = _closure1_slot2;
            vacuum = ctrled[record];
            vacuum = config.bind(tangon)(vacuum);
            sequen = vacuum.intl;
            vacuum = sequen.string;
            ctrled = ctrled[record];
            ctrled = config.bind(tangon)(ctrled);
            ctrled = ctrled.t;
            ctrled = ctrled.Gtctho;
            ctrled = vacuum.bind(sequen)(ctrled);
            sizing['children'] = ctrled;
            sizing = update.bind(tangon)(echoed, sizing);
            romeon[1] = sizing;
            sizing = null;
            if(!result) { _fun00004_ip = 467; continue _fun00003 }
 446:
            update = _closure1_slot21;
            echoed = _closure1_slot25;
            result = {};
            result['invite'] = source;
            sizing = update.bind(tangon)(echoed, result);
 467:
            romeon[2] = sizing;
            foxtra = null;
            if(!kiloes) { _fun00004_ip = 497; continue _fun00003 }
 476:
            sizing = _closure1_slot21;
            kiloes = _closure1_slot26;
            backup = {};
            backup['guildTemplate'] = output;
            foxtra = sizing.bind(tangon)(kiloes, backup);
 497:
            romeon[3] = foxtra;
            verify['children'] = romeon;
            verify = yankee.bind(tangon)(offset, verify);
            option[1] = verify;
            report['children'] = option;
            report = golfie.bind(tangon)(oscard, report);
            entity['children'] = report;
            entity = zuuluu.bind(tangon)(michal, entity);
            return entity;
        }
    };
    var _closure1_slot27 = entity;
    entity = global;
    option = entity.Object;
    golfie = option.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(option)(zuuluu, entity, tangon);
    entity = 0;
    golfie = oscard[entity];
    tangon = argCor;
    entity = undefined;
    tangon = tangon.bind(entity)(golfie);
    var _closure1_slot3 = tangon;
    tangon = 1;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    golfie = tangon.View;
    var _closure1_slot4 = golfie;
    golfie = tangon.Image;
    var _closure1_slot5 = golfie;
    golfie = tangon.ImageBackground;
    var _closure1_slot6 = golfie;
    tangon = tangon.ScrollView;
    var _closure1_slot7 = tangon;
    tangon = 2;
    tangon = oscard[tangon];
    tangon = yankee.bind(entity)(tangon);
    var _closure1_slot8 = tangon;
    tangon = 3;
    tangon = oscard[tangon];
    tangon = yankee.bind(entity)(tangon);
    var _closure1_slot9 = tangon;
    tangon = 4;
    tangon = oscard[tangon];
    tangon = yankee.bind(entity)(tangon);
    var _closure1_slot10 = tangon;
    tangon = 5;
    tangon = oscard[tangon];
    tangon = yankee.bind(entity)(tangon);
    var _closure1_slot11 = tangon;
    tangon = 6;
    tangon = oscard[tangon];
    tangon = yankee.bind(entity)(tangon);
    var _closure1_slot12 = tangon;
    tangon = 7;
    tangon = oscard[tangon];
    tangon = yankee.bind(entity)(tangon);
    var _closure1_slot13 = tangon;
    tangon = 8;
    tangon = oscard[tangon];
    tangon = yankee.bind(entity)(tangon);
    var _closure1_slot14 = tangon;
    tangon = 9;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    foxtra = tangon.Fonts;
    golfie = tangon.AnalyticEvents;
    var _closure1_slot15 = golfie;
    golfie = tangon.StorageKeys;
    var _closure1_slot16 = golfie;
    golfie = tangon.AuthStates;
    var _closure1_slot17 = golfie;
    tangon = tangon.InviteStates;
    var _closure1_slot18 = tangon;
    tangon = 10;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.GuildTemplateStates;
    var _closure1_slot19 = tangon;
    tangon = 11;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.InviteTypes;
    var _closure1_slot20 = tangon;
    tangon = 12;
    golfie = oscard[tangon];
    golfie = report.bind(entity)(golfie);
    golfie = golfie.jsx;
    var _closure1_slot21 = golfie;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.jsxs;
    var _closure1_slot22 = tangon;
    tangon = 13;
    golfie = oscard[tangon];
    verify = report.bind(entity)(golfie);
    option = verify.createStyles;
    golfie = {};
    romeon = 16;
    offset = {'height': '100%', 'flex': 1, 'padding': 16};
    golfie['container'] = offset;
    offset = {'flex': 0, 'width': 93, 'height': 70, 'tintColor': 'white', 'alignSelf': 'center', 'marginBottom': 24};
    golfie['logo'] = offset;
    offset = {'flexShrink': 0, 'flexGrow': 1, 'justifyContent': 'center'};
    golfie['scrollViewContainer'] = offset;
    offset = {'textAlign': 'center', 'marginBottom': 8, 'textTransform': 'uppercase'};
    golfie['header'] = offset;
    offset = {'fontSize': 18, 'textAlign': 'center', 'alignSelf': 'center', 'maxWidth': 300, 'marginBottom': 24, 'marginHorizontal': 16};
    golfie['subHeader'] = offset;
    offset = {};
    offset['marginBottom'] = romeon;
    golfie['subHeaderWithInvite'] = offset;
    offset = {'position': 'absolute', 'bottom': 0, 'top': 0, 'left': 0, 'right': 0, 'resizeMode': 'cover'};
    golfie['background'] = offset;
    offset = {'flexGrow': 1, 'flexShrink': 1, 'justifyContent': 'center'};
    golfie['centerpieceContainer'] = offset;
    offset = {};
    backup = 28;
    offset['paddingHorizontal'] = backup;
    golfie['buttonContainer'] = offset;
    golfie = option.bind(verify)(golfie);
    var _closure1_slot23 = golfie;
    tangon = oscard[tangon];
    option = report.bind(entity)(tangon);
    golfie = option.createStyles;
    tangon = {};
    verify = {'backgroundColor': null, 'padding': 16, 'flexDirection': 'row'};
    offset = 14;
    backup = oscard[offset];
    backup = yankee.bind(entity)(backup);
    backup = backup.colors;
    backup = backup.BACKGROUND_TERTIARY;
    verify['backgroundColor'] = backup;
    backup = oscard[offset];
    backup = yankee.bind(entity)(backup);
    backup = backup.radii;
    backup = backup.sm;
    verify['borderRadius'] = backup;
    tangon['container'] = verify;
    verify = {};
    verify['marginLeft'] = romeon;
    tangon['text'] = verify;
    verify = {};
    backup = oscard[offset];
    backup = yankee.bind(entity)(backup);
    backup = backup.colors;
    backup = backup.HEADER_PRIMARY;
    verify['color'] = backup;
    foxtra = foxtra.PRIMARY_SEMIBOLD;
    verify['fontFamily'] = foxtra;
    verify['fontSize'] = romeon;
    romeon = 20;
    verify['lineHeight'] = romeon;
    tangon['name'] = verify;
    verify = {'color': null, 'fontSize': 14, 'lineHeight': 18};
    offset = oscard[offset];
    offset = yankee.bind(entity)(offset);
    offset = offset.colors;
    offset = offset.HEADER_SECONDARY;
    verify['color'] = offset;
    tangon['inviteText'] = verify;
    tangon = golfie.bind(option)(tangon);
    var _closure1_slot24 = tangon;
    tangon = 40;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/auth/native/components/Welcome.tsx';
    tangon = report.bind(oscard)(tangon);
    michal = function() { // Original name: Welcome
        _fun00005: for(var _fun00006_ip = 0; ; ) switch(_fun00006_ip) {
 0:
            michal = _closure1_slot23;
            tangon = undefined;
            foxtra = michal.bind(tangon)();
            report = _closure1_slot0;
            option = _closure1_slot2;
            michal = 24;
            michal = option[michal];
            zuuluu = report.bind(tangon)(michal);
            michal = zuuluu.useNavigation;
            michal = michal.bind(zuuluu)();
            var _closure2_slot0 = michal;
            oscard = _closure1_slot1;
            michal = 25;
            michal = option[michal];
            michal = oscard.bind(tangon)(michal);
            michal = michal.bind(tangon)();
            output = michal.top;
            yankee = michal.bottom;
            michal = 26;
            zuuluu = option[michal];
            offset = report.bind(tangon)(zuuluu);
            verify = offset.useStateFromStores;
            zuuluu = _closure1_slot14;
            golfie = new Array(1);
            golfie[0] = zuuluu;
            zuuluu = function() {
                michal = _closure1_slot14;
                entity = michal.getDisplayedInviteCode;
                entity = entity.bind(michal)();
                return entity;
            };
            zuuluu = verify.bind(offset)(golfie, zuuluu);
            var _closure2_slot1 = zuuluu;
            zuuluu = option[michal];
            offset = report.bind(tangon)(zuuluu);
            verify = offset.useStateFromStores;
            zuuluu = _closure1_slot13;
            golfie = new Array(1);
            golfie[0] = zuuluu;
            zuuluu = function() {
                _fun00007: for(var _fun00008_ip = 0; ; ) switch(_fun00008_ip) {
 0:
                    zuuluu = _closure2_slot1;
                    entity = null;
                    zuuluu = entity != zuuluu;
                    if(!zuuluu) { _fun00008_ip = 38; continue _fun00007 }
 16:
                    tangon = _closure1_slot13;
                    zuuluu = tangon.getInvite;
                    michal = _closure2_slot1;
                    entity = zuuluu.bind(tangon)(michal);
 38:
                    return entity;
                }
            };
            kiloes = verify.bind(offset)(golfie, zuuluu);
            var _closure2_slot2 = kiloes;
            zuuluu = option[michal];
            offset = report.bind(tangon)(zuuluu);
            verify = offset.useStateFromStores;
            zuuluu = _closure1_slot10;
            golfie = new Array(1);
            golfie[0] = zuuluu;
            zuuluu = function() {
                zuuluu = _closure1_slot10;
                entity = zuuluu.getDisplayedGuildTemplateCode;
                michal = entity.bind(zuuluu)();
                entity = zuuluu.getGuildTemplate;
                entity = entity.bind(zuuluu)(michal);
                return entity;
            };
            backup = verify.bind(offset)(golfie, zuuluu);
            zuuluu = option[michal];
            offset = report.bind(tangon)(zuuluu);
            verify = offset.useStateFromStores;
            zuuluu = _closure1_slot8;
            golfie = new Array(1);
            golfie[0] = zuuluu;
            zuuluu = function() {
                michal = _closure1_slot8;
                entity = michal.isUnderageAnonymous;
                entity = entity.bind(michal)();
                return entity;
            };
            zuuluu = verify.bind(offset)(golfie, zuuluu);
            var _closure2_slot3 = zuuluu;
            michal = option[michal];
            verify = report.bind(tangon)(michal);
            golfie = verify.useStateFromStores;
            michal = _closure1_slot11;
            zuuluu = new Array(1);
            zuuluu[0] = michal;
            michal = function() {
                michal = _closure1_slot11;
                entity = michal.getHasLoggedInAccounts;
                entity = entity.bind(michal)();
                return entity;
            };
            michal = golfie.bind(verify)(zuuluu, michal);
            zuuluu = 27;
            zuuluu = option[zuuluu];
            report = report.bind(tangon)(zuuluu);
            zuuluu = report.useMultiAccountMobile;
            zuuluu = zuuluu.bind(report)();
            report = 28;
            report = option[report];
            golfie = oscard.bind(tangon)(report);
            report = function() {
                _fun00009: for(var _fun00010_ip = 0; ; ) switch(_fun00010_ip) {
 0:
                    zuuluu = _closure1_slot0;
                    tangon = _closure1_slot2;
                    michal = 29;
                    report = tangon[michal];
                    entity = undefined;
                    oscard = zuuluu.bind(entity)(report);
                    report = oscard.trackAppUIViewed;
                    report = report.bind(oscard)();
                    michal = tangon[michal];
                    zuuluu = zuuluu.bind(entity)(michal);
                    michal = zuuluu.trackAppLaunchCompleted;
                    michal = michal.bind(zuuluu)();
                    michal = _closure2_slot2;
                    option = null;
                    michal = option != michal;
                    oscard = null;
                    if(!michal) { _fun00010_ip = 107; continue _fun00009 }
 72:
                    michal = _closure2_slot2;
                    michal = michal.type;
                    michal = option != michal;
                    oscard = null;
                    if(!michal) { _fun00010_ip = 107; continue _fun00009 }
 90:
                    zuuluu = _closure1_slot20;
                    michal = _closure2_slot2;
                    michal = michal.type;
                    oscard = zuuluu[michal];
 107:
                    zuuluu = _closure1_slot1;
                    romeon = _closure1_slot2;
                    michal = 30;
                    michal = romeon[michal];
                    report = zuuluu.bind(entity)(michal);
                    tangon = report.track;
                    michal = _closure1_slot15;
                    zuuluu = michal.APP_LANDING_VIEWED;
                    michal = {};
                    yankee = _closure1_slot0;
                    offset = 31;
                    offset = romeon[offset];
                    offset = yankee.bind(entity)(offset);
                    yankee = offset.Storage;
                    offset = yankee.get;
                    verify = _closure1_slot16;
                    verify = verify.LOGOUT_TIMESTAMP_KEY;
                    verify = offset.bind(yankee)(verify);
                    michal['last_logout_ts'] = verify;
                    michal['invite_type'] = oscard;
                    oscard = _closure2_slot2;
                    verify = option == oscard;
                    oscard = undefined;
                    if(verify) { _fun00010_ip = 234; continue _fun00009 }
 211:
                    verify = _closure2_slot2;
                    verify = verify.guild;
                    offset = option == verify;
                    oscard = undefined;
                    if(offset) { _fun00010_ip = 234; continue _fun00009 }
 229:
                    oscard = verify.id;
 234:
                    michal['guild_id'] = oscard;
                    oscard = _closure2_slot2;
                    verify = option == oscard;
                    oscard = undefined;
                    if(verify) { _fun00010_ip = 274; continue _fun00009 }
 251:
                    verify = _closure2_slot2;
                    verify = verify.channel;
                    offset = option == verify;
                    oscard = undefined;
                    if(offset) { _fun00010_ip = 274; continue _fun00009 }
 269:
                    oscard = verify.id;
 274:
                    michal['channel_id'] = oscard;
                    oscard = _closure2_slot2;
                    option = option == oscard;
                    oscard = undefined;
                    if(option) { _fun00010_ip = 300; continue _fun00009 }
 291:
                    golfie = _closure2_slot2;
                    oscard = golfie.code;
 300:
                    michal['invite_code'] = oscard;
                    michal = tangon.bind(report)(zuuluu, michal);
                    return entity;
                }
            };
            report = golfie.bind(tangon)(report);
            golfie = _closure1_slot3;
            offset = golfie.useEffect;
            verify = function() {
                zuuluu = _closure1_slot1;
                michal = _closure1_slot2;
                entity = 32;
                michal = michal[entity];
                entity = undefined;
                zuuluu = zuuluu.bind(entity)(michal);
                michal = zuuluu.getLocationMetadata;
                michal = michal.bind(zuuluu)();
                return entity;
            };
            report = new Array(0);
            report = offset.bind(golfie)(verify, report);
            report = 33;
            report = option[report];
            oscard = oscard.bind(tangon)(report);
            report = _closure1_slot9;
            report = report.hasLoadedExperiments;
            report = oscard.bind(tangon)(report);
            oscard = golfie.useEffect;
            report = function() {
                entity = undefined;
                return entity;
            };
            report = oscard.bind(golfie)(report);
            oscard = golfie.useEffect;
            report = function() {
                entity = undefined;
                return entity;
            };
            report = oscard.bind(golfie)(report);
            if(!zuuluu) { _fun00006_ip = 431; continue _fun00005 }
 425:
            if(michal) { _fun00006_ip = 923; continue _fun00005 }
 431:
            vacuum = _closure1_slot0;
            sequen = _closure1_slot2;
            michal = 35;
            michal = sequen[michal];
            romeon = vacuum.bind(tangon)(michal);
            report = _closure1_slot21;
            michal = 36;
            michal = sequen[michal];
            michal = vacuum.bind(tangon)(michal);
            zuuluu = michal.ThemeContextProvider;
            michal = {};
            oscard = 'darker';
            michal['theme'] = oscard;
            option = _closure1_slot22;
            golfie = _closure1_slot4;
            oscard = {};
            offset = foxtra.container;
            verify = new Array(2);
            verify[0] = offset;
            offset = {};
            sizing = 37;
            sizing = sequen[sizing];
            sizing = vacuum.bind(tangon)(sizing);
            sizing = sizing.NAV_BAR_HEIGHT;
            sizing = output + sizing;
            offset['paddingTop'] = sizing;
            offset['paddingBottom'] = yankee;
            verify[1] = offset;
            oscard['style'] = verify;
            yankee = _closure1_slot21;
            offset = _closure1_slot6;
            verify = {};
            sizing = foxtra.background;
            verify['style'] = sizing;
            verify['source'] = romeon;
            offset = yankee.bind(tangon)(offset, verify);
            verify = new Array(3);
            verify[0] = offset;
            romeon = _closure1_slot21;
            yankee = _closure1_slot27;
            offset = {};
            offset['invite'] = kiloes;
            offset['guildTemplate'] = backup;
            offset = romeon.bind(tangon)(yankee, offset);
            verify[1] = offset;
            romeon = _closure1_slot21;
            yankee = _closure1_slot4;
            offset = {};
            foxtra = foxtra.buttonContainer;
            offset['style'] = foxtra;
            kiloes = _closure1_slot22;
            foxtra = 38;
            foxtra = sequen[foxtra];
            foxtra = vacuum.bind(tangon)(foxtra);
            backup = foxtra.ButtonGroup;
            foxtra = {};
            echoed = _closure1_slot21;
            output = 39;
            sizing = sequen[output];
            sizing = vacuum.bind(tangon)(sizing);
            result = sizing.Button;
            sizing = {'size': 'lg', 'variant': 'primary-overlay'};
            update = function() { // Original name: handlePressRegister
                _fun00011: for(var _fun00012_ip = 0; ; ) switch(_fun00012_ip) {
 0:
                    report = _closure2_slot3;
                    tangon = _closure2_slot0;
                    zuuluu = tangon.push;
                    entity = _closure1_slot17;
                    if(report) { _fun00012_ip = 81; continue _fun00011 }
 26:
                    report = entity.REGISTER_IDENTITY;
                    report = zuuluu.bind(tangon)(report);
                    golfie = _closure1_slot1;
                    oscard = _closure1_slot2;
                    report = 30;
                    oscard = oscard[report];
                    report = undefined;
                    oscard = golfie.bind(report)(oscard);
                    report = oscard.track;
                    michal = _closure1_slot15;
                    michal = michal.REGISTER_VIEWED;
                    michal = report.bind(oscard)(michal);
                    _fun00012_ip = 102; continue _fun00011;
 81:
                    michal = entity.AGE_GATE_UNDERAGE;
                    entity = {};
                    report = true;
                    entity['fromRegister'] = report;
                    entity = zuuluu.bind(tangon)(michal, entity);
 102:
                    entity = undefined;
                    return entity;
                }
            };
            sizing['onPress'] = update;
            update = 16;
            ctrled = sequen[update];
            ctrled = vacuum.bind(tangon)(ctrled);
            record = ctrled.intl;
            config = record.string;
            ctrled = sequen[update];
            ctrled = vacuum.bind(tangon)(ctrled);
            ctrled = ctrled.t;
            ctrled = ctrled.pV8xeX;
            ctrled = config.bind(record)(ctrled);
            sizing['text'] = ctrled;
            result = echoed.bind(tangon)(result, sizing);
            sizing = new Array(2);
            sizing[0] = result;
            echoed = _closure1_slot21;
            output = sequen[output];
            output = vacuum.bind(tangon)(output);
            result = output.Button;
            output = {'size': 'lg', 'variant': 'experimental_welcome-secondary'};
            source = function() { // Original name: handlePressLogin
                tangon = _closure2_slot0;
                zuuluu = tangon.push;
                entity = _closure1_slot17;
                entity = entity.LOGIN;
                entity = zuuluu.bind(tangon)(entity);
                tangon = _closure1_slot1;
                zuuluu = _closure1_slot2;
                entity = 30;
                zuuluu = zuuluu[entity];
                entity = undefined;
                tangon = tangon.bind(entity)(zuuluu);
                zuuluu = tangon.track;
                michal = _closure1_slot15;
                michal = michal.LOGIN_VIEWED;
                michal = zuuluu.bind(tangon)(michal);
                return entity;
            };
            output['onPress'] = source;
            source = sequen[update];
            source = vacuum.bind(tangon)(source);
            ctrled = source.intl;
            source = ctrled.string;
            update = sequen[update];
            update = vacuum.bind(tangon)(update);
            update = update.t;
            update = update.dKhVQE;
            update = source.bind(ctrled)(update);
            output['text'] = update;
            output = echoed.bind(tangon)(result, output);
            sizing[1] = output;
            foxtra['children'] = sizing;
            foxtra = kiloes.bind(tangon)(backup, foxtra);
            offset['children'] = foxtra;
            offset = romeon.bind(tangon)(yankee, offset);
            verify[2] = offset;
            oscard['children'] = verify;
            oscard = option.bind(tangon)(golfie, oscard);
            michal['children'] = oscard;
            michal = report.bind(tangon)(zuuluu, michal);
            return michal;
 923:
            zuuluu = _closure1_slot21;
            michal = _closure1_slot1;
            report = _closure1_slot2;
            entity = 34;
            entity = report[entity];
            michal = michal.bind(tangon)(entity);
            entity = {};
            entity = zuuluu.bind(tangon)(michal, entity);
            return entity;
        }
    };
    zuuluu['default'] = michal;
    return entity;
})();