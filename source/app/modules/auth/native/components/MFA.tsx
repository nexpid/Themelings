// app/modules/auth/native/components/MFA.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    report = argBar;
    golfie = argBaz;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    var _closure1_slot1 = golfie;
    var _closure1_slot2 = oscard;
    entity = function(argFoo) { // Original name: handleFinish
        entity = argFoo;
        tangon = entity.mfaType;
        oscard = entity.data;
        report = entity.ticket;
        zuuluu = _closure1_slot1;
        michal = _closure1_slot2;
        entity = 3;
        michal = michal[entity];
        entity = undefined;
        zuuluu = zuuluu.bind(entity)(michal);
        michal = zuuluu.loginMFAv2;
        entity = {};
        entity['code'] = oscard;
        entity['ticket'] = report;
        entity['mfaType'] = tangon;
        entity = michal.bind(zuuluu)(entity);
        return entity;
    };
    var _closure1_slot5 = entity;
    entity = function(argFoo, argBar) { // Original name: statesAreEqual
        zuuluu = _closure1_slot1;
        michal = _closure1_slot2;
        entity = 4;
        michal = michal[entity];
        entity = undefined;
        tangon = zuuluu.bind(entity)(michal);
        zuuluu = tangon.isEqual;
        michal = argFoo;
        entity = argBar;
        entity = zuuluu.bind(tangon)(michal, entity);
        return entity;
    };
    var _closure1_slot6 = entity;
    entity = global;
    verify = entity.Object;
    option = verify.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = option.bind(verify)(zuuluu, entity, tangon);
    entity = 0;
    option = oscard[entity];
    tangon = argCor;
    entity = undefined;
    tangon = tangon.bind(entity)(option);
    tangon = 1;
    tangon = oscard[tangon];
    tangon = golfie.bind(entity)(tangon);
    var _closure1_slot3 = tangon;
    tangon = 2;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.jsx;
    var _closure1_slot4 = tangon;
    tangon = 8;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/auth/native/components/MFA.tsx';
    tangon = report.bind(oscard)(tangon);
    michal = function() { // Original name: ConnectedMFA
        michal = _closure1_slot0;
        option = _closure1_slot2;
        entity = 5;
        entity = option[entity];
        tangon = undefined;
        zuuluu = michal.bind(tangon)(entity);
        entity = zuuluu.useNavigation;
        entity = entity.bind(zuuluu)();
        var _closure2_slot0 = entity;
        entity = 6;
        entity = option[entity];
        yankee = michal.bind(tangon)(entity);
        offset = yankee.useStateFromStores;
        entity = _closure1_slot3;
        verify = new Array(1);
        verify[0] = entity;
        romeon = _closure1_slot6;
        backup = function() {
            entity = {};
            zuuluu = _closure1_slot3;
            michal = zuuluu.getMFATicket;
            michal = michal.bind(zuuluu)();
            entity['ticket'] = michal;
            michal = zuuluu.getMFAMethods;
            michal = michal.bind(zuuluu)();
            entity['methods'] = michal;
            return entity;
        };
        foxtra = new Array(0);
        sizing = yankee;
        kiloes = verify;
        golfie = sizing[offset](kiloes, backup, foxtra, romeon, yankee);
        zuuluu = _closure1_slot4;
        entity = 7;
        entity = option[entity];
        entity = michal.bind(tangon)(entity);
        michal = entity.MFAModal;
        entity = {};
        entity['mfaChallenge'] = golfie;
        oscard = _closure1_slot5;
        entity['finish'] = oscard;
        report = function() { // Original name: handleOnClose
            michal = _closure2_slot0;
            entity = michal.goBack;
            entity = entity.bind(michal)();
            entity = undefined;
            return entity;
        };
        entity['handleOnClose'] = report;
        entity = zuuluu.bind(tangon)(michal, entity);
        return entity;
    };
    zuuluu['default'] = michal;
    return entity;
})();