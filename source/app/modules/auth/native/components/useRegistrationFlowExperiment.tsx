// app/modules/auth/native/components/useRegistrationFlowExperiment.tsx
export default (function(argFoo, argBar, _, __, ___, argFre, argPlu) {
    report = argBar;
    zuuluu = argFre;
    oscard = argPlu;
    entity = global;
    option = entity.Object;
    golfie = option.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(option)(zuuluu, entity, tangon);
    entity = 0;
    tangon = oscard[entity];
    entity = undefined;
    verify = report.bind(entity)(tangon);
    option = verify.createExperiment;
    golfie = {'kind': 'user', 'id': '2025-04_mobile_registration_flow', 'label': 'Mobile Registration Flow'};
    tangon = {'showFieldErrorsEnabled': false, 'streamlineErrorsCTAsEnabled': false, 'showPasswordRequirementsEnabled': false};
    golfie['defaultConfig'] = tangon;
    yankee = {'id': 1, 'label': 'Show field form errors on each page'};
    tangon = 1;
    offset = {'showFieldErrorsEnabled': true, 'streamlineErrorsCTAsEnabled': false, 'showPasswordRequirementsEnabled': false};
    yankee['config'] = offset;
    offset = new Array(4);
    offset[0] = yankee;
    yankee = {'id': 2, 'label': 'Streamline CTAs, system errors, and keyboard'};
    romeon = {'showFieldErrorsEnabled': false, 'streamlineErrorsCTAsEnabled': true, 'showPasswordRequirementsEnabled': false};
    yankee['config'] = romeon;
    offset[1] = yankee;
    yankee = {'id': 3, 'label': 'Show password requirements on active password field'};
    romeon = {'showFieldErrorsEnabled': false, 'streamlineErrorsCTAsEnabled': false, 'showPasswordRequirementsEnabled': true};
    yankee['config'] = romeon;
    offset[2] = yankee;
    yankee = {'id': 4, 'label': 'Show errors, password requirements, and streamline CTAs'};
    romeon = {'showFieldErrorsEnabled': true, 'streamlineErrorsCTAsEnabled': true, 'showPasswordRequirementsEnabled': true};
    yankee['config'] = romeon;
    offset[3] = yankee;
    golfie['treatments'] = offset;
    golfie = option.bind(verify)(golfie);
    var _closure1_slot0 = golfie;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/auth/native/components/useRegistrationFlowExperiment.tsx';
    tangon = report.bind(oscard)(tangon);
    michal = function(argFoo) { // Original name: useRegistrationFlowExperiment
        tangon = _closure1_slot0;
        zuuluu = tangon.useExperiment;
        michal = {};
        entity = false;
        michal['autoTrackExposure'] = entity;
        entity = argFoo;
        entity = zuuluu.bind(tangon)(entity, michal);
        return entity;
    };
    zuuluu['default'] = michal;
    return entity;
})();