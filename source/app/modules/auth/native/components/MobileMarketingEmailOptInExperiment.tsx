// app/modules/auth/native/components/MobileMarketingEmailOptInExperiment.tsx
export default (function(argFoo, argBar, _, __, ___, argFre, argPlu) {
    oscard = argBar;
    zuuluu = argFre;
    golfie = argPlu;
    var _closure1_slot0 = oscard;
    var _closure1_slot1 = golfie;
    entity = global;
    option = entity.Object;
    report = option.defineProperty;
    tangon = {};
    output = true;
    tangon['value'] = output;
    entity = '__esModule';
    entity = report.bind(option)(zuuluu, entity, tangon);
    backup = 0;
    tangon = golfie[backup];
    entity = undefined;
    tangon = oscard.bind(entity)(tangon);
    tangon = tangon.t;
    tangon = tangon.1nwnlp;
    foxtra = new Array(6);
    foxtra[0] = tangon;
    tangon = golfie[backup];
    tangon = oscard.bind(entity)(tangon);
    tangon = tangon.t;
    tangon = tangon.ty+iOT;
    foxtra[1] = tangon;
    tangon = golfie[backup];
    tangon = oscard.bind(entity)(tangon);
    tangon = tangon.t;
    tangon = tangon.kvM3dH;
    foxtra[2] = tangon;
    tangon = golfie[backup];
    tangon = oscard.bind(entity)(tangon);
    tangon = tangon.t;
    tangon = tangon.0BZ8Ji;
    foxtra[3] = tangon;
    tangon = golfie[backup];
    tangon = oscard.bind(entity)(tangon);
    tangon = tangon.t;
    tangon = tangon.7SVSLC;
    foxtra[4] = tangon;
    tangon = golfie[backup];
    tangon = oscard.bind(entity)(tangon);
    tangon = tangon.t;
    tangon = tangon.ylFCLi;
    foxtra[5] = tangon;
    sizing = 1;
    tangon = golfie[sizing];
    verify = oscard.bind(entity)(tangon);
    option = verify.createExperiment;
    tangon = {'kind': 'user', 'id': '2025-03_mobile_marketing_email_opt_in', 'label': 'Mobile Marketing Email Opt-In'};
    report = {};
    kiloes = false;
    report['enabled'] = kiloes;
    offset = foxtra[backup];
    report['copyKey'] = offset;
    tangon['defaultConfig'] = report;
    report = {'id': 1, 'label': 'Enable marketing email opt in (copy 1)'};
    offset = {};
    offset['enabled'] = output;
    yankee = foxtra[backup];
    offset['copyKey'] = yankee;
    report['config'] = offset;
    offset = new Array(7);
    offset[0] = report;
    yankee = {'id': 2, 'label': 'Enable marketing email opt in (copy 2)'};
    report = 2;
    romeon = {};
    romeon['enabled'] = output;
    sizing = foxtra[sizing];
    romeon['copyKey'] = sizing;
    yankee['config'] = romeon;
    offset[1] = yankee;
    yankee = {'id': 3, 'label': 'Enable marketing email opt in (copy 3)'};
    sizing = 3;
    romeon = {};
    romeon['enabled'] = output;
    result = foxtra[report];
    romeon['copyKey'] = result;
    yankee['config'] = romeon;
    offset[2] = yankee;
    yankee = {'id': 4, 'label': 'Enable marketing email opt in (copy 4)'};
    result = 4;
    romeon = {};
    romeon['enabled'] = output;
    sizing = foxtra[sizing];
    romeon['copyKey'] = sizing;
    yankee['config'] = romeon;
    offset[3] = yankee;
    yankee = {'id': 5, 'label': 'Enable marketing email opt in (copy 5)'};
    sizing = 5;
    romeon = {};
    romeon['enabled'] = output;
    result = foxtra[result];
    romeon['copyKey'] = result;
    yankee['config'] = romeon;
    offset[4] = yankee;
    yankee = {'id': 6, 'label': 'Enable marketing email opt in (copy 6)'};
    romeon = {};
    romeon['enabled'] = output;
    sizing = foxtra[sizing];
    romeon['copyKey'] = sizing;
    yankee['config'] = romeon;
    offset[5] = yankee;
    yankee = {'id': 7, 'label': 'Disable marketing email opt in (same as control)'};
    romeon = {};
    romeon['enabled'] = kiloes;
    foxtra = foxtra[backup];
    romeon['copyKey'] = foxtra;
    yankee['config'] = romeon;
    offset[6] = yankee;
    tangon['treatments'] = offset;
    tangon = option.bind(verify)(tangon);
    var _closure1_slot2 = tangon;
    report = golfie[report];
    golfie = oscard.bind(entity)(report);
    oscard = golfie.fileFinishedImporting;
    report = 'modules/auth/native/components/MobileMarketingEmailOptInExperiment.tsx';
    report = oscard.bind(golfie)(report);
    zuuluu['MobileMarketingEmailOptInExperiment'] = tangon;
    tangon = function(argFoo) { // Original name: useIsMobileMarketingEmailOptInExperimentEnabled
        tangon = _closure1_slot2;
        zuuluu = tangon.useExperiment;
        michal = {};
        entity = argFoo;
        michal['location'] = entity;
        entity = {};
        report = true;
        entity['autoTrackExposure'] = report;
        entity = zuuluu.bind(tangon)(michal, entity);
        entity = entity.enabled;
        return entity;
    };
    zuuluu['useIsMobileMarketingEmailOptInExperimentEnabled'] = tangon;
    michal = function() { // Original name: getMobileMarketingEmailOptInCopy
        tangon = _closure1_slot2;
        zuuluu = tangon.getCurrentConfig;
        entity = {};
        report = 'getMobileMarketingEmailOptInCopy';
        entity['location'] = report;
        entity = zuuluu.bind(tangon)(entity);
        tangon = entity.copyKey;
        entity = {};
        report = _closure1_slot0;
        zuuluu = _closure1_slot1;
        michal = 0;
        zuuluu = zuuluu[michal];
        michal = undefined;
        michal = report.bind(michal)(zuuluu);
        zuuluu = michal.intl;
        michal = zuuluu.string;
        michal = michal.bind(zuuluu)(tangon);
        entity['copy'] = michal;
        return entity;
    };
    zuuluu['getMobileMarketingEmailOptInCopy'] = michal;
    return entity;
})();