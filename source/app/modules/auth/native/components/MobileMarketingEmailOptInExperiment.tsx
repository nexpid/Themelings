// app/modules/auth/native/components/MobileMarketingEmailOptInExperiment.tsx
export default (function(argFoo, argBar, _, __, ___, argFre, argPlu) {
    golfie = argBar;
    zuuluu = argFre;
    option = argPlu;
    var _closure1_slot0 = golfie;
    var _closure1_slot1 = option;
    entity = global;
    oscard = entity.Object;
    report = oscard.defineProperty;
    tangon = {};
    sizing = true;
    tangon['value'] = sizing;
    entity = '__esModule';
    entity = report.bind(oscard)(zuuluu, entity, tangon);
    romeon = 0;
    tangon = option[romeon];
    entity = undefined;
    tangon = golfie.bind(entity)(tangon);
    tangon = tangon.t;
    tangon = tangon.1nwnlp;
    kiloes = new Array(6);
    kiloes[0] = tangon;
    tangon = option[romeon];
    tangon = golfie.bind(entity)(tangon);
    tangon = tangon.t;
    tangon = tangon.ty+iOT;
    kiloes[1] = tangon;
    tangon = option[romeon];
    tangon = golfie.bind(entity)(tangon);
    tangon = tangon.t;
    tangon = tangon.kvM3dH;
    kiloes[2] = tangon;
    tangon = option[romeon];
    tangon = golfie.bind(entity)(tangon);
    tangon = tangon.t;
    tangon = tangon.0BZ8Ji;
    kiloes[3] = tangon;
    tangon = option[romeon];
    tangon = golfie.bind(entity)(tangon);
    tangon = tangon.t;
    tangon = tangon.7SVSLC;
    kiloes[4] = tangon;
    tangon = option[romeon];
    tangon = golfie.bind(entity)(tangon);
    tangon = tangon.t;
    tangon = tangon.ylFCLi;
    kiloes[5] = tangon;
    report = {};
    tangon = 'UNKNOWN';
    report['UNKNOWN'] = tangon;
    tangon = 'PRIVACY_HINT';
    report['PRIVACY_HINT'] = tangon;
    tangon = 'ACCOUNT_IDENTITY';
    report['ACCOUNT_IDENTITY'] = tangon;
    backup = 1;
    tangon = option[backup];
    offset = golfie.bind(entity)(tangon);
    verify = offset.createExperiment;
    tangon = {'kind': 'user', 'id': '2025-03_mobile_marketing_email_opt_in', 'label': 'Mobile Marketing Email Opt-In'};
    oscard = {};
    yankee = false;
    oscard['enabled'] = yankee;
    yankee = kiloes[romeon];
    oscard['copyKey'] = yankee;
    yankee = report.UNKNOWN;
    oscard['screen'] = yankee;
    tangon['defaultConfig'] = oscard;
    oscard = {'id': 1, 'label': 'Enable marketing email opt in (copy 1)'};
    yankee = {};
    yankee['enabled'] = sizing;
    romeon = kiloes[romeon];
    yankee['copyKey'] = romeon;
    romeon = report.ACCOUNT_IDENTITY;
    yankee['screen'] = romeon;
    oscard['config'] = yankee;
    yankee = new Array(7);
    yankee[0] = oscard;
    romeon = {'id': 2, 'label': 'Enable marketing email opt in (copy 2)'};
    oscard = 2;
    foxtra = {};
    foxtra['enabled'] = sizing;
    backup = kiloes[backup];
    foxtra['copyKey'] = backup;
    backup = report.ACCOUNT_IDENTITY;
    foxtra['screen'] = backup;
    romeon['config'] = foxtra;
    yankee[1] = romeon;
    romeon = {'id': 3, 'label': 'Enable marketing email opt in (copy 3)'};
    backup = 3;
    foxtra = {};
    foxtra['enabled'] = sizing;
    output = kiloes[oscard];
    foxtra['copyKey'] = output;
    output = report.ACCOUNT_IDENTITY;
    foxtra['screen'] = output;
    romeon['config'] = foxtra;
    yankee[2] = romeon;
    romeon = {'id': 4, 'label': 'Enable marketing email opt in (copy 4)'};
    output = 4;
    foxtra = {};
    foxtra['enabled'] = sizing;
    backup = kiloes[backup];
    foxtra['copyKey'] = backup;
    backup = report.ACCOUNT_IDENTITY;
    foxtra['screen'] = backup;
    romeon['config'] = foxtra;
    yankee[3] = romeon;
    romeon = {'id': 5, 'label': 'Enable marketing email opt in (copy 5)'};
    backup = 5;
    foxtra = {};
    foxtra['enabled'] = sizing;
    output = kiloes[output];
    foxtra['copyKey'] = output;
    output = report.ACCOUNT_IDENTITY;
    foxtra['screen'] = output;
    romeon['config'] = foxtra;
    yankee[4] = romeon;
    romeon = {'id': 6, 'label': 'Enable marketing email opt in (copy 6)'};
    foxtra = {};
    foxtra['enabled'] = sizing;
    output = kiloes[backup];
    foxtra['copyKey'] = output;
    output = report.ACCOUNT_IDENTITY;
    foxtra['screen'] = output;
    romeon['config'] = foxtra;
    yankee[5] = romeon;
    romeon = {'id': 7, 'label': 'Enable marketing email opt in on the age gate screen'};
    foxtra = {};
    foxtra['enabled'] = sizing;
    backup = kiloes[backup];
    foxtra['copyKey'] = backup;
    backup = report.PRIVACY_HINT;
    foxtra['screen'] = backup;
    romeon['config'] = foxtra;
    yankee[6] = romeon;
    tangon['treatments'] = yankee;
    tangon = verify.bind(offset)(tangon);
    var _closure1_slot2 = tangon;
    oscard = option[oscard];
    option = golfie.bind(entity)(oscard);
    golfie = option.fileFinishedImporting;
    oscard = 'modules/auth/native/components/MobileMarketingEmailOptInExperiment.tsx';
    oscard = golfie.bind(option)(oscard);
    zuuluu['MobileMarketingEmailOptInScreens'] = report;
    zuuluu['MobileMarketingEmailOptInExperiment'] = tangon;
    tangon = function(argFoo, argBar) { // Original name: useIsMobileMarketingEmailOptInExperimentEnabled
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            tangon = _closure1_slot2;
            zuuluu = tangon.useExperiment;
            michal = {};
            entity = argFoo;
            michal['location'] = entity;
            entity = {};
            report = true;
            entity['autoTrackExposure'] = report;
            michal = zuuluu.bind(tangon)(michal, entity);
            entity = michal.enabled;
            zuuluu = michal.screen;
            if(!entity) { _fun00002_ip = 58; continue _fun00001 }
 51:
            michal = argBar;
            entity = zuuluu === michal;
 58:
            return entity;
        }
    };
    zuuluu['useIsMobileMarketingEmailOptInExperimentEnabled'] = tangon;
    tangon = function(argFoo) { // Original name: getIsMobileMarketingEmailOptInExperimentEnabled
        zuuluu = _closure1_slot2;
        michal = zuuluu.getCurrentConfig;
        entity = {};
        tangon = argFoo;
        entity['location'] = tangon;
        entity = michal.bind(zuuluu)(entity);
        entity = entity.enabled;
        return entity;
    };
    zuuluu['getIsMobileMarketingEmailOptInExperimentEnabled'] = tangon;
    michal = function() { // Original name: getMobileMarketingEmailOptInCopy
        tangon = _closure1_slot2;
        zuuluu = tangon.getCurrentConfig;
        entity = {};
        report = 'getMobileMarketingEmailOptInCopy';
        entity['location'] = report;
        entity = zuuluu.bind(tangon)(entity);
        tangon = entity.copyKey;
        entity = {};
        report = _closure1_slot0;
        zuuluu = _closure1_slot1;
        michal = 0;
        zuuluu = zuuluu[michal];
        michal = undefined;
        michal = report.bind(michal)(zuuluu);
        zuuluu = michal.intl;
        michal = zuuluu.string;
        michal = michal.bind(zuuluu)(tangon);
        entity['copy'] = michal;
        return entity;
    };
    zuuluu['getMobileMarketingEmailOptInCopy'] = michal;
    return entity;
})();