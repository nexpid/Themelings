// app/modules/auth/native/components/ExternalLink.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    report = argBar;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    entity = argBaz;
    var _closure1_slot1 = entity;
    var _closure1_slot2 = oscard;
    entity = global;
    option = entity.Object;
    golfie = option.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(option)(zuuluu, entity, tangon);
    entity = 0;
    golfie = oscard[entity];
    tangon = argCor;
    entity = undefined;
    tangon = tangon.bind(entity)(golfie);
    var _closure1_slot3 = tangon;
    tangon = 1;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    golfie = tangon.Linking;
    var _closure1_slot4 = golfie;
    tangon = tangon.ScrollView;
    var _closure1_slot5 = tangon;
    tangon = 2;
    golfie = oscard[tangon];
    golfie = report.bind(entity)(golfie);
    golfie = golfie.jsx;
    var _closure1_slot6 = golfie;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.jsxs;
    var _closure1_slot7 = tangon;
    tangon = 3;
    tangon = oscard[tangon];
    option = report.bind(entity)(tangon);
    golfie = option.createStyles;
    tangon = {};
    verify = {'height': '100%', 'display': 'flex', 'justifyContent': 'center', 'paddingLeft': 16, 'paddingRight': 16};
    tangon['container'] = verify;
    verify = {'textAlign': 'center', 'marginTop': 8};
    tangon['description'] = verify;
    verify = {'width': '100%', 'marginTop': 16};
    tangon['button'] = verify;
    verify = {};
    tangon['continue'] = verify;
    verify = {};
    tangon['backToLogin'] = verify;
    tangon = golfie.bind(option)(tangon);
    var _closure1_slot8 = tangon;
    tangon = 9;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/auth/native/components/ExternalLink.tsx';
    tangon = report.bind(oscard)(tangon);
    michal = function(argFoo) { // Original name: ExternalLink
        entity = argFoo;
        entity = entity.externalURL;
        var _closure2_slot0 = entity;
        michal = _closure1_slot8;
        tangon = undefined;
        sizing = michal.bind(tangon)();
        foxtra = _closure1_slot0;
        backup = _closure1_slot2;
        michal = 4;
        michal = backup[michal];
        zuuluu = foxtra.bind(tangon)(michal);
        michal = zuuluu.useNavigation;
        michal = michal.bind(zuuluu)();
        var _closure2_slot1 = michal;
        oscard = _closure1_slot3;
        zuuluu = oscard.useCallback;
        michal = new Array(1);
        michal[0] = entity;
        entity = function() {
            zuuluu = _closure1_slot4;
            michal = zuuluu.openURL;
            entity = _closure2_slot0;
            entity = michal.bind(zuuluu)(entity);
            entity = undefined;
            return entity;
        };
        output = zuuluu.bind(oscard)(entity, michal);
        var _closure2_slot2 = output;
        zuuluu = oscard.useEffect;
        michal = new Array(1);
        michal[0] = output;
        entity = function() {
            michal = _closure2_slot2;
            entity = undefined;
            michal = michal.bind(entity)();
            return entity;
        };
        entity = zuuluu.bind(oscard)(entity, michal);
        zuuluu = _closure1_slot7;
        michal = _closure1_slot5;
        entity = {'alwaysBounceVertical': false, 'keyboardShouldPersistTaps': 'handled'};
        oscard = sizing.container;
        entity['contentContainerStyle'] = oscard;
        option = _closure1_slot6;
        romeon = _closure1_slot1;
        report = 5;
        report = backup[report];
        oscard = romeon.bind(tangon)(report);
        report = {};
        offset = 6;
        golfie = backup[offset];
        golfie = foxtra.bind(tangon)(golfie);
        kiloes = golfie.intl;
        yankee = kiloes.string;
        golfie = backup[offset];
        golfie = foxtra.bind(tangon)(golfie);
        golfie = golfie.t;
        golfie = golfie.0Niu/P;
        golfie = yankee.bind(kiloes)(golfie);
        report['children'] = golfie;
        oscard = option.bind(tangon)(oscard, report);
        report = new Array(4);
        report[0] = oscard;
        oscard = 7;
        oscard = backup[oscard];
        oscard = foxtra.bind(tangon)(oscard);
        golfie = oscard.Text;
        oscard = {'style': null, 'variant': 'text-sm/medium', 'color': 'header-secondary'};
        yankee = sizing.description;
        oscard['style'] = yankee;
        yankee = backup[offset];
        yankee = foxtra.bind(tangon)(yankee);
        result = yankee.intl;
        kiloes = result.string;
        yankee = backup[offset];
        yankee = foxtra.bind(tangon)(yankee);
        yankee = yankee.t;
        yankee = yankee.nToOEh;
        yankee = kiloes.bind(result)(yankee);
        oscard['children'] = yankee;
        oscard = option.bind(tangon)(golfie, oscard);
        report[1] = oscard;
        yankee = 8;
        oscard = backup[yankee];
        golfie = romeon.bind(tangon)(oscard);
        oscard = {};
        kiloes = true;
        oscard['shrink'] = kiloes;
        result = sizing.button;
        oscard['style'] = result;
        result = backup[offset];
        result = foxtra.bind(tangon)(result);
        update = result.intl;
        echoed = update.string;
        result = backup[offset];
        result = foxtra.bind(tangon)(result);
        result = result.t;
        result = result.2ixEBg;
        result = echoed.bind(update)(result);
        oscard['text'] = result;
        oscard['onPress'] = output;
        oscard = option.bind(tangon)(golfie, oscard);
        report[2] = oscard;
        oscard = backup[yankee];
        golfie = romeon.bind(tangon)(oscard);
        oscard = {};
        oscard['shrink'] = kiloes;
        output = sizing.button;
        kiloes = new Array(2);
        kiloes[0] = output;
        sizing = sizing.backToLogin;
        kiloes[1] = sizing;
        oscard['style'] = kiloes;
        yankee = backup[yankee];
        yankee = romeon.bind(tangon)(yankee);
        yankee = yankee.Colors;
        yankee = yankee.GREY;
        oscard['color'] = yankee;
        yankee = backup[offset];
        yankee = foxtra.bind(tangon)(yankee);
        romeon = yankee.intl;
        yankee = romeon.string;
        offset = backup[offset];
        offset = foxtra.bind(tangon)(offset);
        offset = offset.t;
        offset = offset.j3cG2t;
        offset = yankee.bind(romeon)(offset);
        oscard['text'] = offset;
        verify = function() { // Original name: onPress
            michal = _closure2_slot1;
            entity = michal.pop;
            entity = entity.bind(michal)();
            return entity;
        };
        oscard['onPress'] = verify;
        oscard = option.bind(tangon)(golfie, oscard);
        report[3] = oscard;
        entity['children'] = report;
        entity = zuuluu.bind(tangon)(michal, entity);
        return entity;
    };
    zuuluu['default'] = michal;
    return entity;
})();