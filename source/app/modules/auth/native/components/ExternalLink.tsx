// app/modules/auth/native/components/ExternalLink.tsx
export default (function(argFoo, argBar, argBaz, argCorge, _, argFred, argPlugh) {
    report = argBar;
    zulu = argFred;
    oscar = argPlugh;
    var _closure1_slot0 = report;
    entity = argBaz;
    var _closure1_slot1 = entity;
    var _closure1_slot2 = oscar;
    entity = global;
    options = entity.Object;
    golf = options.defineProperty;
    tango = {};
    entity = true;
    tango['value'] = entity;
    entity = '__esModule';
    entity = golf.bind(options)(zulu, entity, tango);
    entity = 0;
    golf = oscar[entity];
    tango = argCorge;
    entity = undefined;
    tango = tango.bind(entity)(golf);
    var _closure1_slot3 = tango;
    tango = 1;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    golf = tango.Linking;
    var _closure1_slot4 = golf;
    tango = tango.ScrollView;
    var _closure1_slot5 = tango;
    tango = 2;
    golf = oscar[tango];
    golf = report.bind(entity)(golf);
    golf = golf.jsx;
    var _closure1_slot6 = golf;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.jsxs;
    var _closure1_slot7 = tango;
    tango = 3;
    tango = oscar[tango];
    options = report.bind(entity)(tango);
    golf = options.createStyles;
    tango = {};
    verify = {'height': '100%', 'display': 'flex', 'justifyContent': 'center', 'paddingLeft': 16, 'paddingRight': 16};
    tango['container'] = verify;
    verify = {'textAlign': 'center', 'marginTop': 8};
    tango['description'] = verify;
    verify = {'width': '100%', 'marginTop': 16};
    tango['button'] = verify;
    verify = {};
    tango['continue'] = verify;
    verify = {};
    tango['backToLogin'] = verify;
    tango = golf.bind(options)(tango);
    var _closure1_slot8 = tango;
    tango = 9;
    tango = oscar[tango];
    oscar = report.bind(entity)(tango);
    report = oscar.fileFinishedImporting;
    tango = 'modules/auth/native/components/ExternalLink.tsx';
    tango = report.bind(oscar)(tango);
    mike = function(argFoo) { // Original name: ExternalLink
        entity = argFoo;
        entity = entity.externalURL;
        var _closure2_slot0 = entity;
        mike = _closure1_slot8;
        tango = undefined;
        sizing = mike.bind(tango)();
        foxtrot = _closure1_slot0;
        backup = _closure1_slot2;
        mike = 4;
        mike = backup[mike];
        zulu = foxtrot.bind(tango)(mike);
        mike = zulu.useNavigation;
        mike = mike.bind(zulu)();
        var _closure2_slot1 = mike;
        oscar = _closure1_slot3;
        zulu = oscar.useCallback;
        mike = new Array(1);
        mike[0] = entity;
        entity = function() {
            zulu = _closure1_slot4;
            mike = zulu.openURL;
            entity = _closure2_slot0;
            entity = mike.bind(zulu)(entity);
            entity = undefined;
            return entity;
        };
        output = zulu.bind(oscar)(entity, mike);
        var _closure2_slot2 = output;
        zulu = oscar.useEffect;
        mike = new Array(1);
        mike[0] = output;
        entity = function() {
            mike = _closure2_slot2;
            entity = undefined;
            mike = mike.bind(entity)();
            return entity;
        };
        entity = zulu.bind(oscar)(entity, mike);
        zulu = _closure1_slot7;
        mike = _closure1_slot5;
        entity = {'alwaysBounceVertical': false, 'keyboardShouldPersistTaps': 'handled'};
        oscar = sizing.container;
        entity['contentContainerStyle'] = oscar;
        options = _closure1_slot6;
        romeo = _closure1_slot1;
        report = 5;
        report = backup[report];
        oscar = romeo.bind(tango)(report);
        report = {};
        offset = 6;
        golf = backup[offset];
        golf = foxtrot.bind(tango)(golf);
        kilo = golf.intl;
        yankee = kilo.string;
        golf = backup[offset];
        golf = foxtrot.bind(tango)(golf);
        golf = golf.t;
        golf = golf.0Niu/P;
        golf = yankee.bind(kilo)(golf);
        report['children'] = golf;
        oscar = options.bind(tango)(oscar, report);
        report = new Array(4);
        report[0] = oscar;
        oscar = 7;
        oscar = backup[oscar];
        oscar = foxtrot.bind(tango)(oscar);
        golf = oscar.Text;
        oscar = {'style': null, 'variant': 'text-sm/medium', 'color': 'header-secondary'};
        yankee = sizing.description;
        oscar['style'] = yankee;
        yankee = backup[offset];
        yankee = foxtrot.bind(tango)(yankee);
        result = yankee.intl;
        kilo = result.string;
        yankee = backup[offset];
        yankee = foxtrot.bind(tango)(yankee);
        yankee = yankee.t;
        yankee = yankee.nToOEh;
        yankee = kilo.bind(result)(yankee);
        oscar['children'] = yankee;
        oscar = options.bind(tango)(golf, oscar);
        report[1] = oscar;
        yankee = 8;
        oscar = backup[yankee];
        golf = romeo.bind(tango)(oscar);
        oscar = {};
        kilo = true;
        oscar['shrink'] = kilo;
        result = sizing.button;
        oscar['style'] = result;
        result = backup[offset];
        result = foxtrot.bind(tango)(result);
        update = result.intl;
        echo = update.string;
        result = backup[offset];
        result = foxtrot.bind(tango)(result);
        result = result.t;
        result = result.2ixEBg;
        result = echo.bind(update)(result);
        oscar['text'] = result;
        oscar['onPress'] = output;
        oscar = options.bind(tango)(golf, oscar);
        report[2] = oscar;
        oscar = backup[yankee];
        golf = romeo.bind(tango)(oscar);
        oscar = {};
        oscar['shrink'] = kilo;
        output = sizing.button;
        kilo = new Array(2);
        kilo[0] = output;
        sizing = sizing.backToLogin;
        kilo[1] = sizing;
        oscar['style'] = kilo;
        yankee = backup[yankee];
        yankee = romeo.bind(tango)(yankee);
        yankee = yankee.Colors;
        yankee = yankee.GREY;
        oscar['color'] = yankee;
        yankee = backup[offset];
        yankee = foxtrot.bind(tango)(yankee);
        romeo = yankee.intl;
        yankee = romeo.string;
        offset = backup[offset];
        offset = foxtrot.bind(tango)(offset);
        offset = offset.t;
        offset = offset.j3cG2t;
        offset = yankee.bind(romeo)(offset);
        oscar['text'] = offset;
        verify = function() { // Original name: onPress
            mike = _closure2_slot1;
            entity = mike.pop;
            entity = entity.bind(mike)();
            return entity;
        };
        oscar['onPress'] = verify;
        oscar = options.bind(tango)(golf, oscar);
        report[3] = oscar;
        entity['children'] = report;
        entity = zulu.bind(tango)(mike, entity);
        return entity;
    };
    zulu['default'] = mike;
    return entity;
})();