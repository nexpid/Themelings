// app/modules/auth/native/components/Auth.tsx
export default (function(argFoo, argBar, argBaz, argCorge, _, argFred, argPlugh) {
    oscar = argBar;
    zulu = argFred;
    golf = argPlugh;
    var _closure1_slot0 = oscar;
    entity = argBaz;
    var _closure1_slot1 = entity;
    var _closure1_slot2 = golf;
    entity = function() { // Original name: headerTitle
        entity = null;
        return entity;
    };
    var _closure1_slot11 = entity;
    entity = function() { // Original name: NavigatorWithCaptchaHook
        verify = _closure1_slot0;
        offset = _closure1_slot2;
        entity = 20;
        entity = offset[entity];
        tango = undefined;
        mike = verify.bind(tango)(entity);
        entity = mike.useIsHCaptchaModalOpenTracking;
        entity = entity.bind(mike)();
        zulu = _closure1_slot8;
        entity = 21;
        entity = offset[entity];
        entity = verify.bind(tango)(entity);
        mike = entity.Navigator;
        entity = {};
        oscar = _closure1_slot9;
        entity['screens'] = oscar;
        oscar = 22;
        golf = offset[oscar];
        golf = verify.bind(tango)(golf);
        options = golf.intl;
        golf = options.string;
        oscar = offset[oscar];
        oscar = verify.bind(tango)(oscar);
        oscar = oscar.t;
        oscar = oscar.13/7kZ;
        oscar = golf.bind(options)(oscar);
        entity['headerBackTitle'] = oscar;
        oscar = _closure1_slot7;
        oscar = oscar.WELCOME;
        entity['initialRouteName'] = oscar;
        report = _closure1_slot4;
        report = report.dismiss;
        entity['onWillFocus'] = report;
        entity = zulu.bind(tango)(mike, entity);
        return entity;
    };
    var _closure1_slot12 = entity;
    entity = global;
    options = entity.Object;
    report = options.defineProperty;
    mike = {};
    entity = true;
    mike['value'] = entity;
    entity = '__esModule';
    entity = report.bind(options)(zulu, entity, mike);
    entity = 0;
    report = golf[entity];
    mike = argCorge;
    entity = undefined;
    options = mike.bind(entity)(report);
    var _closure1_slot3 = options;
    mike = 1;
    mike = golf[mike];
    mike = oscar.bind(entity)(mike);
    mike = mike.Keyboard;
    var _closure1_slot4 = mike;
    mike = 2;
    mike = golf[mike];
    mike = oscar.bind(entity)(mike);
    report = mike.RegisterTransitionSteps;
    var _closure1_slot5 = report;
    mike = mike.RegistrationSteps;
    var _closure1_slot6 = mike;
    mike = 3;
    mike = golf[mike];
    mike = oscar.bind(entity)(mike);
    mike = mike.AuthStates;
    var _closure1_slot7 = mike;
    mike = 4;
    mike = golf[mike];
    mike = oscar.bind(entity)(mike);
    mike = mike.jsx;
    var _closure1_slot8 = mike;
    mike = function() { // Original name: getScreens
        entity = {};
        zulu = _closure1_slot7;
        offset = zulu.WELCOME;
        zulu = {'ignoreKeyboard': true, 'fullscreen': true, 'impressionName': null, 'headerTitle': null, 'headerShown': false};
        yankee = true;
        options = _closure1_slot0;
        verify = _closure1_slot2;
        oscar = 5;
        report = verify[oscar];
        golf = undefined;
        report = options.bind(golf)(report);
        report = report.ImpressionNames;
        report = report.USER_WELCOME;
        zulu['impressionName'] = report;
        report = _closure1_slot11;
        zulu['headerTitle'] = report;
        romeo = function() { // Original name: render
            tango = _closure1_slot8;
            mike = _closure1_slot1;
            zulu = _closure1_slot2;
            entity = 6;
            entity = zulu[entity];
            zulu = undefined;
            mike = mike.bind(zulu)(entity);
            entity = {};
            entity = tango.bind(zulu)(mike, entity);
            return entity;
        };
        zulu['render'] = romeo;
        entity[offset] = zulu;
        zulu = _closure1_slot7;
        offset = zulu.REGISTER_IDENTITY;
        zulu = {'ignoreKeyboard': true, 'fullscreen': true};
        romeo = verify[oscar];
        romeo = options.bind(golf)(romeo);
        romeo = romeo.ImpressionNames;
        romeo = romeo.USER_REGISTRATION;
        zulu['impressionName'] = romeo;
        romeo = {};
        foxtrot = verify[oscar];
        foxtrot = options.bind(golf)(foxtrot);
        foxtrot = foxtrot.ImpressionGroups;
        foxtrot = foxtrot.USER_REGISTRATION_FLOW;
        romeo['impression_group'] = foxtrot;
        foxtrot = _closure1_slot6;
        backup = foxtrot.IDENTITY;
        romeo['step'] = backup;
        zulu['impressionProperties'] = romeo;
        zulu['headerTitle'] = report;
        romeo = function(argFoo) { // Original name: headerLeft
            tango = _closure1_slot8;
            mike = _closure1_slot0;
            zulu = _closure1_slot2;
            entity = 7;
            entity = zulu[entity];
            zulu = undefined;
            entity = mike.bind(zulu)(entity);
            mike = entity.BackButtonWithTracking;
            entity = {};
            oscar = argFoo;
            golf = entity;
            report = copyDataProperties(golf, oscar);
            entity = tango.bind(zulu)(mike, entity);
            return entity;
        };
        zulu['headerLeft'] = romeo;
        romeo = function() { // Original name: render
            tango = _closure1_slot8;
            mike = _closure1_slot1;
            zulu = _closure1_slot2;
            entity = 8;
            entity = zulu[entity];
            zulu = undefined;
            mike = mike.bind(zulu)(entity);
            entity = {};
            entity = tango.bind(zulu)(mike, entity);
            return entity;
        };
        zulu['render'] = romeo;
        entity[offset] = zulu;
        zulu = _closure1_slot7;
        offset = zulu.REGISTER_DISPLAY_NAME;
        zulu = {'ignoreKeyboard': true, 'fullscreen': true};
        romeo = verify[oscar];
        romeo = options.bind(golf)(romeo);
        romeo = romeo.ImpressionNames;
        romeo = romeo.USER_REGISTRATION;
        zulu['impressionName'] = romeo;
        romeo = {};
        backup = verify[oscar];
        backup = options.bind(golf)(backup);
        backup = backup.ImpressionGroups;
        backup = backup.USER_REGISTRATION_FLOW;
        romeo['impression_group'] = backup;
        backup = foxtrot.DISPLAY_NAME;
        romeo['step'] = backup;
        zulu['impressionProperties'] = romeo;
        zulu['headerTitle'] = report;
        romeo = function(argFoo) { // Original name: headerLeft
            tango = _closure1_slot8;
            mike = _closure1_slot0;
            zulu = _closure1_slot2;
            entity = 7;
            entity = zulu[entity];
            zulu = undefined;
            entity = mike.bind(zulu)(entity);
            mike = entity.BackButtonWithTracking;
            entity = {};
            golf = argFoo;
            options = entity;
            oscar = copyDataProperties(options, golf);
            report = _closure1_slot5;
            oscar = report.ACCOUNT_IDENTITY;
            report = 'destinationStep';
            entity[report] = oscar;
            entity = tango.bind(zulu)(mike, entity);
            return entity;
        };
        zulu['headerLeft'] = romeo;
        romeo = function() { // Original name: render
            tango = _closure1_slot8;
            mike = _closure1_slot1;
            zulu = _closure1_slot2;
            entity = 9;
            entity = zulu[entity];
            zulu = undefined;
            mike = mike.bind(zulu)(entity);
            entity = {};
            entity = tango.bind(zulu)(mike, entity);
            return entity;
        };
        zulu['render'] = romeo;
        entity[offset] = zulu;
        zulu = _closure1_slot7;
        offset = zulu.REGISTER_ACCOUNT_INFORMATION;
        zulu = {'ignoreKeyboard': true, 'fullscreen': true};
        romeo = verify[oscar];
        romeo = options.bind(golf)(romeo);
        romeo = romeo.ImpressionNames;
        romeo = romeo.USER_REGISTRATION;
        zulu['impressionName'] = romeo;
        romeo = {};
        backup = verify[oscar];
        backup = options.bind(golf)(backup);
        backup = backup.ImpressionGroups;
        backup = backup.USER_REGISTRATION_FLOW;
        romeo['impression_group'] = backup;
        foxtrot = foxtrot.ACCOUNT_INFORMATION;
        romeo['step'] = foxtrot;
        zulu['impressionProperties'] = romeo;
        zulu['headerTitle'] = report;
        romeo = function(argFoo) { // Original name: headerLeft
            tango = _closure1_slot8;
            mike = _closure1_slot0;
            zulu = _closure1_slot2;
            entity = 7;
            entity = zulu[entity];
            zulu = undefined;
            entity = mike.bind(zulu)(entity);
            mike = entity.BackButtonWithTracking;
            entity = {};
            golf = argFoo;
            options = entity;
            oscar = copyDataProperties(options, golf);
            report = _closure1_slot5;
            oscar = report.ACCOUNT_DISPLAY_NAME;
            report = 'destinationStep';
            entity[report] = oscar;
            entity = tango.bind(zulu)(mike, entity);
            return entity;
        };
        zulu['headerLeft'] = romeo;
        romeo = function() { // Original name: render
            tango = _closure1_slot8;
            mike = _closure1_slot1;
            zulu = _closure1_slot2;
            entity = 10;
            entity = zulu[entity];
            zulu = undefined;
            mike = mike.bind(zulu)(entity);
            entity = {};
            entity = tango.bind(zulu)(mike, entity);
            return entity;
        };
        zulu['render'] = romeo;
        entity[offset] = zulu;
        zulu = _closure1_slot7;
        offset = zulu.VERIFY_PHONE;
        zulu = {};
        zulu['ignoreKeyboard'] = yankee;
        romeo = verify[oscar];
        romeo = options.bind(golf)(romeo);
        romeo = romeo.ImpressionNames;
        romeo = romeo.USER_VERIFY_PHONE;
        zulu['impressionName'] = romeo;
        romeo = {};
        foxtrot = verify[oscar];
        foxtrot = options.bind(golf)(foxtrot);
        foxtrot = foxtrot.ImpressionGroups;
        foxtrot = foxtrot.USER_REGISTRATION_FLOW;
        romeo['impression_group'] = foxtrot;
        zulu['impressionProperties'] = romeo;
        zulu['headerTitle'] = report;
        romeo = function(argFoo) { // Original name: headerLeft
            tango = _closure1_slot8;
            mike = _closure1_slot0;
            zulu = _closure1_slot2;
            entity = 7;
            entity = zulu[entity];
            zulu = undefined;
            entity = mike.bind(zulu)(entity);
            mike = entity.BackButtonWithTracking;
            entity = {};
            golf = argFoo;
            options = entity;
            oscar = copyDataProperties(options, golf);
            report = _closure1_slot5;
            oscar = report.ACCOUNT_IDENTITY;
            report = 'destinationStep';
            entity[report] = oscar;
            entity = tango.bind(zulu)(mike, entity);
            return entity;
        };
        zulu['headerLeft'] = romeo;
        romeo = function(argFoo) { // Original name: render
            tango = _closure1_slot8;
            mike = _closure1_slot1;
            zulu = _closure1_slot2;
            entity = 11;
            entity = zulu[entity];
            zulu = undefined;
            mike = mike.bind(zulu)(entity);
            entity = {};
            oscar = argFoo;
            golf = entity;
            report = copyDataProperties(golf, oscar);
            entity = tango.bind(zulu)(mike, entity);
            return entity;
        };
        zulu['render'] = romeo;
        entity[offset] = zulu;
        zulu = _closure1_slot7;
        offset = zulu.LOGIN;
        zulu = {'ignoreKeyboard': true, 'fullscreen': true};
        romeo = verify[oscar];
        romeo = options.bind(golf)(romeo);
        romeo = romeo.ImpressionNames;
        romeo = romeo.USER_LOGIN;
        zulu['impressionName'] = romeo;
        romeo = {};
        foxtrot = verify[oscar];
        foxtrot = options.bind(golf)(foxtrot);
        foxtrot = foxtrot.ImpressionGroups;
        foxtrot = foxtrot.USER_LOGIN_FLOW;
        romeo['impression_group'] = foxtrot;
        zulu['impressionProperties'] = romeo;
        zulu['headerTitle'] = report;
        romeo = function() { // Original name: render
            tango = _closure1_slot8;
            mike = _closure1_slot1;
            zulu = _closure1_slot2;
            entity = 12;
            entity = zulu[entity];
            zulu = undefined;
            mike = mike.bind(zulu)(entity);
            entity = {};
            entity = tango.bind(zulu)(mike, entity);
            return entity;
        };
        zulu['render'] = romeo;
        entity[offset] = zulu;
        zulu = _closure1_slot7;
        offset = zulu.MFA;
        zulu = {'fullscreen': true, 'ignoreKeyboard': true, 'headerTitle': null, 'headerShown': false};
        zulu['headerTitle'] = report;
        romeo = function() { // Original name: render
            tango = _closure1_slot8;
            mike = _closure1_slot1;
            zulu = _closure1_slot2;
            entity = 13;
            entity = zulu[entity];
            zulu = undefined;
            mike = mike.bind(zulu)(entity);
            entity = {};
            entity = tango.bind(zulu)(mike, entity);
            return entity;
        };
        zulu['render'] = romeo;
        entity[offset] = zulu;
        zulu = _closure1_slot7;
        offset = zulu.ACCOUNT_DISABLED_OR_DELETION_SCHEDULED;
        zulu = {'ignoreKeyboard': true, 'fullscreen': true};
        zulu['headerTitle'] = report;
        romeo = function(argFoo) { // Original name: render
            tango = _closure1_slot8;
            mike = _closure1_slot1;
            zulu = _closure1_slot2;
            entity = 14;
            entity = zulu[entity];
            zulu = undefined;
            mike = mike.bind(zulu)(entity);
            entity = {};
            oscar = argFoo;
            golf = entity;
            report = copyDataProperties(golf, oscar);
            entity = tango.bind(zulu)(mike, entity);
            return entity;
        };
        zulu['render'] = romeo;
        entity[offset] = zulu;
        zulu = _closure1_slot7;
        offset = zulu.COUNTRY_SELECT;
        zulu = {};
        zulu['ignoreKeyboard'] = yankee;
        zulu['headerTitle'] = report;
        romeo = function(argFoo, argBar) { // Original name: render
            entity = argBar;
            var _closure3_slot0 = entity;
            tango = _closure1_slot8;
            mike = _closure1_slot1;
            zulu = _closure1_slot2;
            entity = 15;
            entity = zulu[entity];
            zulu = undefined;
            mike = mike.bind(zulu)(entity);
            entity = {};
            oscar = function() { // Original name: onClose
                mike = _closure3_slot0;
                entity = mike.pop;
                entity = entity.bind(mike)();
                return entity;
            };
            entity['onClose'] = oscar;
            report = function(argFoo) { // Original name: onCountrySelected
                zulu = _closure1_slot1;
                mike = _closure1_slot2;
                entity = 16;
                mike = mike[entity];
                entity = undefined;
                zulu = zulu.bind(entity)(mike);
                mike = zulu.setCountryCode;
                entity = argFoo;
                entity = mike.bind(zulu)(entity);
                return entity;
            };
            entity['onCountrySelected'] = report;
            entity = tango.bind(zulu)(mike, entity);
            return entity;
        };
        zulu['render'] = romeo;
        entity[offset] = zulu;
        zulu = _closure1_slot7;
        offset = zulu.EXTERNAL_LINK;
        zulu = {};
        zulu['ignoreKeyboard'] = yankee;
        zulu['headerTitle'] = report;
        yankee = function(argFoo) { // Original name: render
            tango = _closure1_slot8;
            mike = _closure1_slot1;
            zulu = _closure1_slot2;
            entity = 17;
            entity = zulu[entity];
            zulu = undefined;
            mike = mike.bind(zulu)(entity);
            entity = {};
            oscar = argFoo;
            golf = entity;
            report = copyDataProperties(golf, oscar);
            entity = tango.bind(zulu)(mike, entity);
            return entity;
        };
        zulu['render'] = yankee;
        entity[offset] = zulu;
        zulu = _closure1_slot7;
        offset = zulu.AGE_GATE;
        zulu = {'ignoreKeyboard': true, 'fullscreen': true};
        yankee = verify[oscar];
        yankee = options.bind(golf)(yankee);
        yankee = yankee.ImpressionNames;
        yankee = yankee.USER_AGE_GATE;
        zulu['impressionName'] = yankee;
        zulu['headerTitle'] = report;
        yankee = function(argFoo) { // Original name: headerLeft
            tango = _closure1_slot8;
            mike = _closure1_slot0;
            zulu = _closure1_slot2;
            entity = 7;
            entity = zulu[entity];
            zulu = undefined;
            entity = mike.bind(zulu)(entity);
            mike = entity.BackButtonWithTracking;
            entity = {};
            golf = argFoo;
            options = entity;
            oscar = copyDataProperties(options, golf);
            report = _closure1_slot5;
            oscar = report.ACCOUNT_INFORMATION;
            report = 'destinationStep';
            entity[report] = oscar;
            entity = tango.bind(zulu)(mike, entity);
            return entity;
        };
        zulu['headerLeft'] = yankee;
        yankee = function() { // Original name: render
            tango = _closure1_slot8;
            mike = _closure1_slot1;
            zulu = _closure1_slot2;
            entity = 18;
            entity = zulu[entity];
            zulu = undefined;
            mike = mike.bind(zulu)(entity);
            entity = {};
            entity = tango.bind(zulu)(mike, entity);
            return entity;
        };
        zulu['render'] = yankee;
        entity[offset] = zulu;
        mike = _closure1_slot7;
        zulu = mike.AGE_GATE_UNDERAGE;
        mike = {'ignoreKeyboard': true, 'fullscreen': true};
        oscar = verify[oscar];
        oscar = options.bind(golf)(oscar);
        oscar = oscar.ImpressionNames;
        oscar = oscar.USER_AGE_GATE_UNDERAGE;
        mike['impressionName'] = oscar;
        oscar = function(argFoo) { // Original name: impressionProperties
            entity = argFoo;
            mike = entity.existingUser;
            entity = {};
            report = _closure1_slot0;
            tango = _closure1_slot2;
            zulu = 5;
            tango = tango[zulu];
            zulu = undefined;
            zulu = report.bind(zulu)(tango);
            zulu = zulu.ImpressionGroups;
            zulu = zulu.USER_REGISTRATION_FLOW;
            entity['impression_group'] = zulu;
            entity['existing_user'] = mike;
            return entity;
        };
        mike['impressionProperties'] = oscar;
        mike['headerTitle'] = report;
        tango = function(argFoo, argBar) { // Original name: render
            entity = argBar;
            var _closure3_slot0 = entity;
            tango = _closure1_slot8;
            mike = _closure1_slot1;
            zulu = _closure1_slot2;
            entity = 19;
            entity = zulu[entity];
            zulu = undefined;
            mike = mike.bind(zulu)(entity);
            entity = {};
            report = function() { // Original name: onClose
                mike = _closure3_slot0;
                entity = mike.popToTop;
                entity = entity.bind(mike)();
                return entity;
            };
            entity['onClose'] = report;
            oscar = argFoo;
            golf = entity;
            report = copyDataProperties(golf, oscar);
            entity = tango.bind(zulu)(mike, entity);
            return entity;
        };
        mike['render'] = tango;
        entity[zulu] = mike;
        return entity;
    };
    mike = mike.bind(entity)();
    var _closure1_slot9 = mike;
    report = options.createContext;
    mike = function() {
        entity = undefined;
        return entity;
    };
    mike = report.bind(options)(mike);
    var _closure1_slot10 = mike;
    report = options.memo;
    tango = function() { // Original name: Auth
        oscar = _closure1_slot3;
        tango = oscar.useEffect;
        zulu = function() {
            zulu = _closure1_slot1;
            mike = _closure1_slot2;
            entity = 23;
            mike = mike[entity];
            entity = undefined;
            mike = zulu.bind(entity)(mike);
            entity = mike.initialize;
            entity = entity.bind(mike)();
            entity = function() {
                zulu = _closure1_slot1;
                mike = _closure1_slot2;
                entity = 23;
                mike = mike[entity];
                entity = undefined;
                mike = zulu.bind(entity)(mike);
                entity = mike.terminate;
                entity = entity.bind(mike)();
                return entity;
            };
            return entity;
        };
        mike = new Array(0);
        mike = tango.bind(oscar)(zulu, mike);
        tango = oscar.useLayoutEffect;
        zulu = function() {
            zulu = _closure1_slot0;
            mike = _closure1_slot2;
            entity = 24;
            mike = mike[entity];
            entity = undefined;
            mike = zulu.bind(entity)(mike);
            entity = mike.trackAppUIViewed;
            entity = entity.bind(mike)();
            return entity;
        };
        mike = new Array(0);
        mike = tango.bind(oscar)(zulu, mike);
        mike = oscar.useRef;
        tango = undefined;
        mike = mike.bind(oscar)(tango);
        var _closure2_slot0 = mike;
        zulu = oscar.useCallback;
        mike = function() {
            zulu = _closure1_slot0;
            mike = _closure1_slot2;
            entity = 7;
            mike = mike[entity];
            entity = undefined;
            zulu = zulu.bind(entity)(mike);
            mike = zulu.getTrackRegTransition;
            entity = _closure2_slot0;
            entity = mike.bind(zulu)(entity);
            return entity;
        };
        entity = new Array(0);
        oscar = zulu.bind(oscar)(mike, entity);
        zulu = _closure1_slot8;
        entity = _closure1_slot10;
        mike = entity.Provider;
        entity = {};
        oscar = oscar.bind(tango)();
        entity['value'] = oscar;
        golf = _closure1_slot8;
        oscar = _closure1_slot12;
        report = {};
        report = golf.bind(tango)(oscar, report);
        entity['children'] = report;
        entity = zulu.bind(tango)(mike, entity);
        return entity;
    };
    tango = report.bind(options)(tango);
    report = 25;
    report = golf[report];
    golf = oscar.bind(entity)(report);
    oscar = golf.fileFinishedImporting;
    report = 'modules/auth/native/components/Auth.tsx';
    report = oscar.bind(golf)(report);
    zulu['default'] = tango;
    zulu['TrackRegistrationContext'] = mike;
    return entity;
})();