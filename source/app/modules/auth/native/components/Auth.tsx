// app/modules/auth/native/components/Auth.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    oscard = argBar;
    zuuluu = argFre;
    golfie = argPlu;
    var _closure1_slot0 = oscard;
    entity = argBaz;
    var _closure1_slot1 = entity;
    var _closure1_slot2 = golfie;
    entity = function() { // Original name: headerTitle
        entity = null;
        return entity;
    };
    var _closure1_slot11 = entity;
    entity = function() { // Original name: NavigatorWithCaptchaHook
        verify = _closure1_slot0;
        offset = _closure1_slot2;
        entity = 20;
        entity = offset[entity];
        tangon = undefined;
        michal = verify.bind(tangon)(entity);
        entity = michal.useIsHCaptchaModalOpenTracking;
        entity = entity.bind(michal)();
        zuuluu = _closure1_slot8;
        entity = 21;
        entity = offset[entity];
        entity = verify.bind(tangon)(entity);
        michal = entity.Navigator;
        entity = {};
        oscard = _closure1_slot9;
        entity['screens'] = oscard;
        oscard = 22;
        golfie = offset[oscard];
        golfie = verify.bind(tangon)(golfie);
        option = golfie.intl;
        golfie = option.string;
        oscard = offset[oscard];
        oscard = verify.bind(tangon)(oscard);
        oscard = oscard.t;
        oscard = oscard.13/7kZ;
        oscard = golfie.bind(option)(oscard);
        entity['headerBackTitle'] = oscard;
        oscard = _closure1_slot7;
        oscard = oscard.WELCOME;
        entity['initialRouteName'] = oscard;
        report = _closure1_slot4;
        report = report.dismiss;
        entity['onWillFocus'] = report;
        entity = zuuluu.bind(tangon)(michal, entity);
        return entity;
    };
    var _closure1_slot12 = entity;
    entity = global;
    option = entity.Object;
    report = option.defineProperty;
    michal = {};
    entity = true;
    michal['value'] = entity;
    entity = '__esModule';
    entity = report.bind(option)(zuuluu, entity, michal);
    entity = 0;
    report = golfie[entity];
    michal = argCor;
    entity = undefined;
    option = michal.bind(entity)(report);
    var _closure1_slot3 = option;
    michal = 1;
    michal = golfie[michal];
    michal = oscard.bind(entity)(michal);
    michal = michal.Keyboard;
    var _closure1_slot4 = michal;
    michal = 2;
    michal = golfie[michal];
    michal = oscard.bind(entity)(michal);
    report = michal.RegisterTransitionSteps;
    var _closure1_slot5 = report;
    michal = michal.RegistrationSteps;
    var _closure1_slot6 = michal;
    michal = 3;
    michal = golfie[michal];
    michal = oscard.bind(entity)(michal);
    michal = michal.AuthStates;
    var _closure1_slot7 = michal;
    michal = 4;
    michal = golfie[michal];
    michal = oscard.bind(entity)(michal);
    michal = michal.jsx;
    var _closure1_slot8 = michal;
    michal = function() { // Original name: getScreens
        entity = {};
        zuuluu = _closure1_slot7;
        offset = zuuluu.WELCOME;
        zuuluu = {'ignoreKeyboard': true, 'fullscreen': true, 'impressionName': null, 'headerTitle': null, 'headerShown': false};
        yankee = true;
        option = _closure1_slot0;
        verify = _closure1_slot2;
        oscard = 5;
        report = verify[oscard];
        golfie = undefined;
        report = option.bind(golfie)(report);
        report = report.ImpressionNames;
        report = report.USER_WELCOME;
        zuuluu['impressionName'] = report;
        report = _closure1_slot11;
        zuuluu['headerTitle'] = report;
        romeon = function() { // Original name: render
            tangon = _closure1_slot8;
            michal = _closure1_slot1;
            zuuluu = _closure1_slot2;
            entity = 6;
            entity = zuuluu[entity];
            zuuluu = undefined;
            michal = michal.bind(zuuluu)(entity);
            entity = {};
            entity = tangon.bind(zuuluu)(michal, entity);
            return entity;
        };
        zuuluu['render'] = romeon;
        entity[offset] = zuuluu;
        zuuluu = _closure1_slot7;
        offset = zuuluu.REGISTER_IDENTITY;
        zuuluu = {'ignoreKeyboard': true, 'fullscreen': true};
        romeon = verify[oscard];
        romeon = option.bind(golfie)(romeon);
        romeon = romeon.ImpressionNames;
        romeon = romeon.USER_REGISTRATION;
        zuuluu['impressionName'] = romeon;
        romeon = {};
        foxtra = verify[oscard];
        foxtra = option.bind(golfie)(foxtra);
        foxtra = foxtra.ImpressionGroups;
        foxtra = foxtra.USER_REGISTRATION_FLOW;
        romeon['impression_group'] = foxtra;
        foxtra = _closure1_slot6;
        backup = foxtra.IDENTITY;
        romeon['step'] = backup;
        zuuluu['impressionProperties'] = romeon;
        zuuluu['headerTitle'] = report;
        romeon = function(argFoo) { // Original name: headerLeft
            tangon = _closure1_slot8;
            michal = _closure1_slot0;
            zuuluu = _closure1_slot2;
            entity = 7;
            entity = zuuluu[entity];
            zuuluu = undefined;
            entity = michal.bind(zuuluu)(entity);
            michal = entity.BackButtonWithTracking;
            entity = {};
            oscard = argFoo;
            golfie = entity;
            report = copyDataProperties(golfie, oscard);
            entity = tangon.bind(zuuluu)(michal, entity);
            return entity;
        };
        zuuluu['headerLeft'] = romeon;
        romeon = function() { // Original name: render
            tangon = _closure1_slot8;
            michal = _closure1_slot1;
            zuuluu = _closure1_slot2;
            entity = 8;
            entity = zuuluu[entity];
            zuuluu = undefined;
            michal = michal.bind(zuuluu)(entity);
            entity = {};
            entity = tangon.bind(zuuluu)(michal, entity);
            return entity;
        };
        zuuluu['render'] = romeon;
        entity[offset] = zuuluu;
        zuuluu = _closure1_slot7;
        offset = zuuluu.REGISTER_DISPLAY_NAME;
        zuuluu = {'ignoreKeyboard': true, 'fullscreen': true};
        romeon = verify[oscard];
        romeon = option.bind(golfie)(romeon);
        romeon = romeon.ImpressionNames;
        romeon = romeon.USER_REGISTRATION;
        zuuluu['impressionName'] = romeon;
        romeon = {};
        backup = verify[oscard];
        backup = option.bind(golfie)(backup);
        backup = backup.ImpressionGroups;
        backup = backup.USER_REGISTRATION_FLOW;
        romeon['impression_group'] = backup;
        backup = foxtra.DISPLAY_NAME;
        romeon['step'] = backup;
        zuuluu['impressionProperties'] = romeon;
        zuuluu['headerTitle'] = report;
        romeon = function(argFoo) { // Original name: headerLeft
            tangon = _closure1_slot8;
            michal = _closure1_slot0;
            zuuluu = _closure1_slot2;
            entity = 7;
            entity = zuuluu[entity];
            zuuluu = undefined;
            entity = michal.bind(zuuluu)(entity);
            michal = entity.BackButtonWithTracking;
            entity = {};
            golfie = argFoo;
            option = entity;
            oscard = copyDataProperties(option, golfie);
            report = _closure1_slot5;
            oscard = report.ACCOUNT_IDENTITY;
            report = 'destinationStep';
            entity[report] = oscard;
            entity = tangon.bind(zuuluu)(michal, entity);
            return entity;
        };
        zuuluu['headerLeft'] = romeon;
        romeon = function() { // Original name: render
            tangon = _closure1_slot8;
            michal = _closure1_slot1;
            zuuluu = _closure1_slot2;
            entity = 9;
            entity = zuuluu[entity];
            zuuluu = undefined;
            michal = michal.bind(zuuluu)(entity);
            entity = {};
            entity = tangon.bind(zuuluu)(michal, entity);
            return entity;
        };
        zuuluu['render'] = romeon;
        entity[offset] = zuuluu;
        zuuluu = _closure1_slot7;
        offset = zuuluu.REGISTER_ACCOUNT_INFORMATION;
        zuuluu = {'ignoreKeyboard': true, 'fullscreen': true};
        romeon = verify[oscard];
        romeon = option.bind(golfie)(romeon);
        romeon = romeon.ImpressionNames;
        romeon = romeon.USER_REGISTRATION;
        zuuluu['impressionName'] = romeon;
        romeon = {};
        backup = verify[oscard];
        backup = option.bind(golfie)(backup);
        backup = backup.ImpressionGroups;
        backup = backup.USER_REGISTRATION_FLOW;
        romeon['impression_group'] = backup;
        foxtra = foxtra.ACCOUNT_INFORMATION;
        romeon['step'] = foxtra;
        zuuluu['impressionProperties'] = romeon;
        zuuluu['headerTitle'] = report;
        romeon = function(argFoo) { // Original name: headerLeft
            tangon = _closure1_slot8;
            michal = _closure1_slot0;
            zuuluu = _closure1_slot2;
            entity = 7;
            entity = zuuluu[entity];
            zuuluu = undefined;
            entity = michal.bind(zuuluu)(entity);
            michal = entity.BackButtonWithTracking;
            entity = {};
            golfie = argFoo;
            option = entity;
            oscard = copyDataProperties(option, golfie);
            report = _closure1_slot5;
            oscard = report.ACCOUNT_DISPLAY_NAME;
            report = 'destinationStep';
            entity[report] = oscard;
            entity = tangon.bind(zuuluu)(michal, entity);
            return entity;
        };
        zuuluu['headerLeft'] = romeon;
        romeon = function() { // Original name: render
            tangon = _closure1_slot8;
            michal = _closure1_slot1;
            zuuluu = _closure1_slot2;
            entity = 10;
            entity = zuuluu[entity];
            zuuluu = undefined;
            michal = michal.bind(zuuluu)(entity);
            entity = {};
            entity = tangon.bind(zuuluu)(michal, entity);
            return entity;
        };
        zuuluu['render'] = romeon;
        entity[offset] = zuuluu;
        zuuluu = _closure1_slot7;
        offset = zuuluu.VERIFY_PHONE;
        zuuluu = {};
        zuuluu['ignoreKeyboard'] = yankee;
        romeon = verify[oscard];
        romeon = option.bind(golfie)(romeon);
        romeon = romeon.ImpressionNames;
        romeon = romeon.USER_VERIFY_PHONE;
        zuuluu['impressionName'] = romeon;
        romeon = {};
        foxtra = verify[oscard];
        foxtra = option.bind(golfie)(foxtra);
        foxtra = foxtra.ImpressionGroups;
        foxtra = foxtra.USER_REGISTRATION_FLOW;
        romeon['impression_group'] = foxtra;
        zuuluu['impressionProperties'] = romeon;
        zuuluu['headerTitle'] = report;
        romeon = function(argFoo) { // Original name: headerLeft
            tangon = _closure1_slot8;
            michal = _closure1_slot0;
            zuuluu = _closure1_slot2;
            entity = 7;
            entity = zuuluu[entity];
            zuuluu = undefined;
            entity = michal.bind(zuuluu)(entity);
            michal = entity.BackButtonWithTracking;
            entity = {};
            golfie = argFoo;
            option = entity;
            oscard = copyDataProperties(option, golfie);
            report = _closure1_slot5;
            oscard = report.ACCOUNT_IDENTITY;
            report = 'destinationStep';
            entity[report] = oscard;
            entity = tangon.bind(zuuluu)(michal, entity);
            return entity;
        };
        zuuluu['headerLeft'] = romeon;
        romeon = function(argFoo) { // Original name: render
            tangon = _closure1_slot8;
            michal = _closure1_slot1;
            zuuluu = _closure1_slot2;
            entity = 11;
            entity = zuuluu[entity];
            zuuluu = undefined;
            michal = michal.bind(zuuluu)(entity);
            entity = {};
            oscard = argFoo;
            golfie = entity;
            report = copyDataProperties(golfie, oscard);
            entity = tangon.bind(zuuluu)(michal, entity);
            return entity;
        };
        zuuluu['render'] = romeon;
        entity[offset] = zuuluu;
        zuuluu = _closure1_slot7;
        offset = zuuluu.LOGIN;
        zuuluu = {'ignoreKeyboard': true, 'fullscreen': true};
        romeon = verify[oscard];
        romeon = option.bind(golfie)(romeon);
        romeon = romeon.ImpressionNames;
        romeon = romeon.USER_LOGIN;
        zuuluu['impressionName'] = romeon;
        romeon = {};
        foxtra = verify[oscard];
        foxtra = option.bind(golfie)(foxtra);
        foxtra = foxtra.ImpressionGroups;
        foxtra = foxtra.USER_LOGIN_FLOW;
        romeon['impression_group'] = foxtra;
        zuuluu['impressionProperties'] = romeon;
        zuuluu['headerTitle'] = report;
        romeon = function() { // Original name: render
            tangon = _closure1_slot8;
            michal = _closure1_slot1;
            zuuluu = _closure1_slot2;
            entity = 12;
            entity = zuuluu[entity];
            zuuluu = undefined;
            michal = michal.bind(zuuluu)(entity);
            entity = {};
            entity = tangon.bind(zuuluu)(michal, entity);
            return entity;
        };
        zuuluu['render'] = romeon;
        entity[offset] = zuuluu;
        zuuluu = _closure1_slot7;
        offset = zuuluu.MFA;
        zuuluu = {'fullscreen': true, 'ignoreKeyboard': true, 'headerTitle': null, 'headerShown': false};
        zuuluu['headerTitle'] = report;
        romeon = function() { // Original name: render
            tangon = _closure1_slot8;
            michal = _closure1_slot1;
            zuuluu = _closure1_slot2;
            entity = 13;
            entity = zuuluu[entity];
            zuuluu = undefined;
            michal = michal.bind(zuuluu)(entity);
            entity = {};
            entity = tangon.bind(zuuluu)(michal, entity);
            return entity;
        };
        zuuluu['render'] = romeon;
        entity[offset] = zuuluu;
        zuuluu = _closure1_slot7;
        offset = zuuluu.ACCOUNT_DISABLED_OR_DELETION_SCHEDULED;
        zuuluu = {'ignoreKeyboard': true, 'fullscreen': true};
        zuuluu['headerTitle'] = report;
        romeon = function(argFoo) { // Original name: render
            tangon = _closure1_slot8;
            michal = _closure1_slot1;
            zuuluu = _closure1_slot2;
            entity = 14;
            entity = zuuluu[entity];
            zuuluu = undefined;
            michal = michal.bind(zuuluu)(entity);
            entity = {};
            oscard = argFoo;
            golfie = entity;
            report = copyDataProperties(golfie, oscard);
            entity = tangon.bind(zuuluu)(michal, entity);
            return entity;
        };
        zuuluu['render'] = romeon;
        entity[offset] = zuuluu;
        zuuluu = _closure1_slot7;
        offset = zuuluu.COUNTRY_SELECT;
        zuuluu = {};
        zuuluu['ignoreKeyboard'] = yankee;
        zuuluu['headerTitle'] = report;
        romeon = function(argFoo, argBar) { // Original name: render
            entity = argBar;
            var _closure3_slot0 = entity;
            tangon = _closure1_slot8;
            michal = _closure1_slot1;
            zuuluu = _closure1_slot2;
            entity = 15;
            entity = zuuluu[entity];
            zuuluu = undefined;
            michal = michal.bind(zuuluu)(entity);
            entity = {};
            oscard = function() { // Original name: onClose
                michal = _closure3_slot0;
                entity = michal.pop;
                entity = entity.bind(michal)();
                return entity;
            };
            entity['onClose'] = oscard;
            report = function(argFoo) { // Original name: onCountrySelected
                zuuluu = _closure1_slot1;
                michal = _closure1_slot2;
                entity = 16;
                michal = michal[entity];
                entity = undefined;
                zuuluu = zuuluu.bind(entity)(michal);
                michal = zuuluu.setCountryCode;
                entity = argFoo;
                entity = michal.bind(zuuluu)(entity);
                return entity;
            };
            entity['onCountrySelected'] = report;
            entity = tangon.bind(zuuluu)(michal, entity);
            return entity;
        };
        zuuluu['render'] = romeon;
        entity[offset] = zuuluu;
        zuuluu = _closure1_slot7;
        offset = zuuluu.EXTERNAL_LINK;
        zuuluu = {};
        zuuluu['ignoreKeyboard'] = yankee;
        zuuluu['headerTitle'] = report;
        yankee = function(argFoo) { // Original name: render
            tangon = _closure1_slot8;
            michal = _closure1_slot1;
            zuuluu = _closure1_slot2;
            entity = 17;
            entity = zuuluu[entity];
            zuuluu = undefined;
            michal = michal.bind(zuuluu)(entity);
            entity = {};
            oscard = argFoo;
            golfie = entity;
            report = copyDataProperties(golfie, oscard);
            entity = tangon.bind(zuuluu)(michal, entity);
            return entity;
        };
        zuuluu['render'] = yankee;
        entity[offset] = zuuluu;
        zuuluu = _closure1_slot7;
        offset = zuuluu.AGE_GATE;
        zuuluu = {'ignoreKeyboard': true, 'fullscreen': true};
        yankee = verify[oscard];
        yankee = option.bind(golfie)(yankee);
        yankee = yankee.ImpressionNames;
        yankee = yankee.USER_AGE_GATE;
        zuuluu['impressionName'] = yankee;
        zuuluu['headerTitle'] = report;
        yankee = function(argFoo) { // Original name: headerLeft
            tangon = _closure1_slot8;
            michal = _closure1_slot0;
            zuuluu = _closure1_slot2;
            entity = 7;
            entity = zuuluu[entity];
            zuuluu = undefined;
            entity = michal.bind(zuuluu)(entity);
            michal = entity.BackButtonWithTracking;
            entity = {};
            golfie = argFoo;
            option = entity;
            oscard = copyDataProperties(option, golfie);
            report = _closure1_slot5;
            oscard = report.ACCOUNT_INFORMATION;
            report = 'destinationStep';
            entity[report] = oscard;
            entity = tangon.bind(zuuluu)(michal, entity);
            return entity;
        };
        zuuluu['headerLeft'] = yankee;
        yankee = function() { // Original name: render
            tangon = _closure1_slot8;
            michal = _closure1_slot1;
            zuuluu = _closure1_slot2;
            entity = 18;
            entity = zuuluu[entity];
            zuuluu = undefined;
            michal = michal.bind(zuuluu)(entity);
            entity = {};
            entity = tangon.bind(zuuluu)(michal, entity);
            return entity;
        };
        zuuluu['render'] = yankee;
        entity[offset] = zuuluu;
        michal = _closure1_slot7;
        zuuluu = michal.AGE_GATE_UNDERAGE;
        michal = {'ignoreKeyboard': true, 'fullscreen': true};
        oscard = verify[oscard];
        oscard = option.bind(golfie)(oscard);
        oscard = oscard.ImpressionNames;
        oscard = oscard.USER_AGE_GATE_UNDERAGE;
        michal['impressionName'] = oscard;
        oscard = function(argFoo) { // Original name: impressionProperties
            entity = argFoo;
            michal = entity.existingUser;
            entity = {};
            report = _closure1_slot0;
            tangon = _closure1_slot2;
            zuuluu = 5;
            tangon = tangon[zuuluu];
            zuuluu = undefined;
            zuuluu = report.bind(zuuluu)(tangon);
            zuuluu = zuuluu.ImpressionGroups;
            zuuluu = zuuluu.USER_REGISTRATION_FLOW;
            entity['impression_group'] = zuuluu;
            entity['existing_user'] = michal;
            return entity;
        };
        michal['impressionProperties'] = oscard;
        michal['headerTitle'] = report;
        tangon = function(argFoo, argBar) { // Original name: render
            entity = argBar;
            var _closure3_slot0 = entity;
            tangon = _closure1_slot8;
            michal = _closure1_slot1;
            zuuluu = _closure1_slot2;
            entity = 19;
            entity = zuuluu[entity];
            zuuluu = undefined;
            michal = michal.bind(zuuluu)(entity);
            entity = {};
            report = function() { // Original name: onClose
                michal = _closure3_slot0;
                entity = michal.popToTop;
                entity = entity.bind(michal)();
                return entity;
            };
            entity['onClose'] = report;
            oscard = argFoo;
            golfie = entity;
            report = copyDataProperties(golfie, oscard);
            entity = tangon.bind(zuuluu)(michal, entity);
            return entity;
        };
        michal['render'] = tangon;
        entity[zuuluu] = michal;
        return entity;
    };
    michal = michal.bind(entity)();
    var _closure1_slot9 = michal;
    report = option.createContext;
    michal = function() {
        entity = undefined;
        return entity;
    };
    michal = report.bind(option)(michal);
    var _closure1_slot10 = michal;
    report = option.memo;
    tangon = function() { // Original name: Auth
        oscard = _closure1_slot3;
        tangon = oscard.useEffect;
        zuuluu = function() {
            zuuluu = _closure1_slot1;
            michal = _closure1_slot2;
            entity = 23;
            michal = michal[entity];
            entity = undefined;
            michal = zuuluu.bind(entity)(michal);
            entity = michal.initialize;
            entity = entity.bind(michal)();
            entity = function() {
                zuuluu = _closure1_slot1;
                michal = _closure1_slot2;
                entity = 23;
                michal = michal[entity];
                entity = undefined;
                michal = zuuluu.bind(entity)(michal);
                entity = michal.terminate;
                entity = entity.bind(michal)();
                return entity;
            };
            return entity;
        };
        michal = new Array(0);
        michal = tangon.bind(oscard)(zuuluu, michal);
        tangon = oscard.useLayoutEffect;
        zuuluu = function() {
            zuuluu = _closure1_slot0;
            michal = _closure1_slot2;
            entity = 24;
            michal = michal[entity];
            entity = undefined;
            michal = zuuluu.bind(entity)(michal);
            entity = michal.trackAppUIViewed;
            entity = entity.bind(michal)();
            return entity;
        };
        michal = new Array(0);
        michal = tangon.bind(oscard)(zuuluu, michal);
        zuuluu = _closure1_slot1;
        tangon = _closure1_slot2;
        michal = 25;
        michal = tangon[michal];
        tangon = undefined;
        michal = zuuluu.bind(tangon)(michal);
        michal = michal.bind(tangon)();
        michal = oscard.useRef;
        michal = michal.bind(oscard)(tangon);
        var _closure2_slot0 = michal;
        zuuluu = oscard.useCallback;
        michal = function() {
            zuuluu = _closure1_slot0;
            michal = _closure1_slot2;
            entity = 7;
            michal = michal[entity];
            entity = undefined;
            zuuluu = zuuluu.bind(entity)(michal);
            michal = zuuluu.getTrackRegTransition;
            entity = _closure2_slot0;
            entity = michal.bind(zuuluu)(entity);
            return entity;
        };
        entity = new Array(0);
        oscard = zuuluu.bind(oscard)(michal, entity);
        zuuluu = _closure1_slot8;
        entity = _closure1_slot10;
        michal = entity.Provider;
        entity = {};
        oscard = oscard.bind(tangon)();
        entity['value'] = oscard;
        golfie = _closure1_slot8;
        oscard = _closure1_slot12;
        report = {};
        report = golfie.bind(tangon)(oscard, report);
        entity['children'] = report;
        entity = zuuluu.bind(tangon)(michal, entity);
        return entity;
    };
    tangon = report.bind(option)(tangon);
    report = 26;
    report = golfie[report];
    golfie = oscard.bind(entity)(report);
    oscard = golfie.fileFinishedImporting;
    report = 'modules/auth/native/components/Auth.tsx';
    report = oscard.bind(golfie)(report);
    zuuluu['default'] = tangon;
    zuuluu['TrackRegistrationContext'] = michal;
    return entity;
})();