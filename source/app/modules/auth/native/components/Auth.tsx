// app/modules/auth/native/components/Auth.tsx
export default (function(_, argBar, argBaz, argCor, __, argFre, argPlu) {
    oscard = argBar;
    zuuluu = argFre;
    golfie = argPlu;
    var _closure1_slot0 = oscard;
    entity = argBaz;
    var _closure1_slot1 = entity;
    var _closure1_slot2 = golfie;
    entity = function() { // Original name: NavigatorWithCaptchaHook
        verify = _closure1_slot0;
        offset = _closure1_slot2;
        entity = 5;
        entity = offset[entity];
        tangon = undefined;
        michal = verify.bind(tangon)(entity);
        entity = michal.useIsHCaptchaModalOpenTracking;
        entity = entity.bind(michal)();
        zuuluu = _closure1_slot6;
        entity = 6;
        entity = offset[entity];
        entity = verify.bind(tangon)(entity);
        michal = entity.Navigator;
        entity = {};
        oscard = _closure1_slot7;
        entity['screens'] = oscard;
        oscard = 7;
        golfie = offset[oscard];
        golfie = verify.bind(tangon)(golfie);
        option = golfie.intl;
        golfie = option.string;
        oscard = offset[oscard];
        oscard = verify.bind(tangon)(oscard);
        oscard = oscard.t;
        oscard = oscard.13/7kZ;
        oscard = golfie.bind(option)(oscard);
        entity['headerBackTitle'] = oscard;
        oscard = _closure1_slot5;
        oscard = oscard.WELCOME;
        entity['initialRouteName'] = oscard;
        report = _closure1_slot4;
        report = report.dismiss;
        entity['onWillFocus'] = report;
        entity = zuuluu.bind(tangon)(michal, entity);
        return entity;
    };
    var _closure1_slot9 = entity;
    entity = global;
    option = entity.Object;
    report = option.defineProperty;
    michal = {};
    entity = true;
    michal['value'] = entity;
    entity = '__esModule';
    entity = report.bind(option)(zuuluu, entity, michal);
    entity = 0;
    report = golfie[entity];
    michal = argCor;
    entity = undefined;
    option = michal.bind(entity)(report);
    var _closure1_slot3 = option;
    michal = 1;
    michal = golfie[michal];
    michal = oscard.bind(entity)(michal);
    michal = michal.Keyboard;
    var _closure1_slot4 = michal;
    michal = 2;
    michal = golfie[michal];
    michal = oscard.bind(entity)(michal);
    michal = michal.AuthStates;
    var _closure1_slot5 = michal;
    michal = 3;
    michal = golfie[michal];
    michal = oscard.bind(entity)(michal);
    michal = michal.jsx;
    var _closure1_slot6 = michal;
    michal = 4;
    michal = golfie[michal];
    report = oscard.bind(entity)(michal);
    michal = report.getAllAuthScreens;
    michal = michal.bind(report)();
    var _closure1_slot7 = michal;
    report = option.createContext;
    michal = function() {
        entity = undefined;
        return entity;
    };
    michal = report.bind(option)(michal);
    var _closure1_slot8 = michal;
    report = option.memo;
    tangon = function() { // Original name: Auth
        oscard = _closure1_slot3;
        tangon = oscard.useEffect;
        zuuluu = function() {
            zuuluu = _closure1_slot1;
            michal = _closure1_slot2;
            entity = 8;
            michal = michal[entity];
            entity = undefined;
            michal = zuuluu.bind(entity)(michal);
            entity = michal.initialize;
            entity = entity.bind(michal)();
            entity = function() {
                zuuluu = _closure1_slot1;
                michal = _closure1_slot2;
                entity = 8;
                michal = michal[entity];
                entity = undefined;
                michal = zuuluu.bind(entity)(michal);
                entity = michal.terminate;
                entity = entity.bind(michal)();
                return entity;
            };
            return entity;
        };
        michal = new Array(0);
        michal = tangon.bind(oscard)(zuuluu, michal);
        tangon = oscard.useLayoutEffect;
        zuuluu = function() {
            zuuluu = _closure1_slot0;
            michal = _closure1_slot2;
            entity = 9;
            michal = michal[entity];
            entity = undefined;
            michal = zuuluu.bind(entity)(michal);
            entity = michal.trackAppUIViewed;
            entity = entity.bind(michal)();
            return entity;
        };
        michal = new Array(0);
        michal = tangon.bind(oscard)(zuuluu, michal);
        zuuluu = _closure1_slot1;
        tangon = _closure1_slot2;
        michal = 10;
        michal = tangon[michal];
        tangon = undefined;
        michal = zuuluu.bind(tangon)(michal);
        michal = michal.bind(tangon)();
        michal = oscard.useRef;
        michal = michal.bind(oscard)(tangon);
        var _closure2_slot0 = michal;
        zuuluu = oscard.useCallback;
        michal = function() {
            zuuluu = _closure1_slot0;
            michal = _closure1_slot2;
            entity = 11;
            michal = michal[entity];
            entity = undefined;
            zuuluu = zuuluu.bind(entity)(michal);
            michal = zuuluu.getTrackRegTransition;
            entity = _closure2_slot0;
            entity = michal.bind(zuuluu)(entity);
            return entity;
        };
        entity = new Array(0);
        oscard = zuuluu.bind(oscard)(michal, entity);
        zuuluu = _closure1_slot6;
        entity = _closure1_slot8;
        michal = entity.Provider;
        entity = {};
        oscard = oscard.bind(tangon)();
        entity['value'] = oscard;
        golfie = _closure1_slot6;
        oscard = _closure1_slot9;
        report = {};
        report = golfie.bind(tangon)(oscard, report);
        entity['children'] = report;
        entity = zuuluu.bind(tangon)(michal, entity);
        return entity;
    };
    tangon = report.bind(option)(tangon);
    report = 12;
    report = golfie[report];
    golfie = oscard.bind(entity)(report);
    oscard = golfie.fileFinishedImporting;
    report = 'modules/auth/native/components/Auth.tsx';
    report = oscard.bind(golfie)(report);
    zuuluu['default'] = tangon;
    zuuluu['TrackRegistrationContext'] = michal;
    return entity;
})();