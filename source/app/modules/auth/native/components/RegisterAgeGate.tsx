// app/modules/auth/native/components/RegisterAgeGate.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    report = argBar;
    golfie = argBaz;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    var _closure1_slot1 = golfie;
    var _closure1_slot2 = oscard;
    entity = global;
    verify = entity.Object;
    option = verify.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = option.bind(verify)(zuuluu, entity, tangon);
    entity = 0;
    tangon = oscard[entity];
    entity = undefined;
    tangon = golfie.bind(entity)(tangon);
    var _closure1_slot3 = tangon;
    yankee = 1;
    option = oscard[yankee];
    tangon = argCor;
    tangon = tangon.bind(entity)(option);
    var _closure1_slot4 = tangon;
    tangon = 2;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.View;
    var _closure1_slot5 = tangon;
    tangon = 3;
    tangon = oscard[tangon];
    tangon = golfie.bind(entity)(tangon);
    var _closure1_slot6 = tangon;
    tangon = 4;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    option = tangon.updateRegistrationOptions;
    var _closure1_slot7 = option;
    tangon = tangon.useRegistrationUIStore;
    var _closure1_slot8 = tangon;
    tangon = 5;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    option = tangon.RegisterTransitionSteps;
    var _closure1_slot9 = option;
    tangon = tangon.RegistrationTransitionActionTypes;
    var _closure1_slot10 = tangon;
    tangon = 6;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.AuthStates;
    var _closure1_slot11 = tangon;
    tangon = 7;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    option = tangon.jsx;
    var _closure1_slot12 = option;
    option = tangon.jsxs;
    var _closure1_slot13 = option;
    tangon = tangon.Fragment;
    var _closure1_slot14 = tangon;
    tangon = 8;
    tangon = oscard[tangon];
    verify = report.bind(entity)(tangon);
    option = verify.createStyles;
    tangon = {};
    offset = {'marginTop': 24, 'marginBottom': 24};
    tangon['inputGroup'] = offset;
    offset = {};
    offset['flexGrow'] = yankee;
    tangon['flexGrow'] = offset;
    offset = {'flexGrow': 0, 'marginBottom': 4, 'marginTop': 16, 'flexDirection': 'column'};
    tangon['button'] = offset;
    offset = {};
    romeon = 9;
    romeon = oscard[romeon];
    romeon = golfie.bind(entity)(romeon);
    romeon = romeon.colors;
    romeon = romeon.INTERACTIVE_NORMAL;
    offset['color'] = romeon;
    tangon['datePickerButton'] = offset;
    offset = {};
    offset['flex'] = yankee;
    tangon['page'] = offset;
    offset = {'position': 'absolute', 'bottom': 100, 'paddingLeft': 16, 'paddingRight': 16};
    tangon['bottom'] = offset;
    tangon = option.bind(verify)(tangon);
    var _closure1_slot15 = tangon;
    tangon = 10;
    tangon = oscard[tangon];
    golfie = golfie.bind(entity)(tangon);
    tangon = golfie.utc;
    golfie = tangon.bind(golfie)();
    var _closure1_slot16 = golfie;
    tangon = golfie.toDate;
    tangon = tangon.bind(golfie)();
    var _closure1_slot17 = tangon;
    tangon = golfie.clone;
    option = tangon.bind(golfie)();
    golfie = option.endOf;
    tangon = 'year';
    golfie = golfie.bind(option)(tangon);
    tangon = golfie.toDate;
    tangon = tangon.bind(golfie)();
    var _closure1_slot18 = tangon;
    tangon = 29;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/auth/native/components/RegisterAgeGate.tsx';
    tangon = report.bind(oscard)(tangon);
    michal = function() { // Original name: RegisterAgeGate
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            entity = _closure1_slot15;
            tangon = undefined;
            verify = entity.bind(tangon)();
            report = _closure1_slot0;
            oscard = _closure1_slot2;
            entity = 12;
            entity = oscard[entity];
            michal = report.bind(tangon)(entity);
            entity = michal.useThemeContext;
            entity = entity.bind(michal)();
            sizing = entity.theme;
            entity = 13;
            entity = oscard[entity];
            michal = report.bind(tangon)(entity);
            entity = michal.useNavigation;
            entity = entity.bind(michal)();
            var _closure2_slot0 = entity;
            output = _closure1_slot4;
            michal = output.useContext;
            entity = 14;
            entity = oscard[entity];
            entity = report.bind(tangon)(entity);
            entity = entity.TrackRegistrationContext;
            entity = michal.bind(output)(entity);
            var _closure2_slot1 = entity;
            zuuluu = output.useState;
            golfie = _closure1_slot8;
            michal = golfie.getState;
            michal = michal.bind(golfie)();
            michal = michal.registrationOptions;
            golfie = michal.birthday;
            foxtra = null;
            option = foxtra != golfie;
            michal = null;
            if(!option) { _fun00002_ip = 188; continue _fun00001 }
 155:
            romeon = _closure1_slot1;
            backup = _closure1_slot2;
            option = 11;
            option = backup[option];
            option = romeon.bind(tangon)(option);
            option = option.bind(tangon)(golfie);
            michal = null;
            if(!option) { _fun00002_ip = 188; continue _fun00001 }
 185:
            michal = golfie;
 188:
            michal = zuuluu.bind(output)(michal);
            backup = _closure1_slot3;
            option = 2;
            michal = backup.bind(tangon)(michal, option);
            golfie = 0;
            limora = michal[golfie];
            var _closure2_slot2 = limora;
            zuuluu = 1;
            michal = michal[zuuluu];
            var _closure2_slot3 = michal;
            romeon = output.useState;
            kiloes = _closure1_slot8;
            michal = kiloes.getState;
            michal = michal.bind(kiloes)();
            michal = michal.registrationOptions;
            kiloes = michal.consent;
            michal = foxtra != kiloes;
            if(!michal) { _fun00002_ip = 268; continue _fun00001 }
 265:
            michal = kiloes;
 268:
            michal = romeon.bind(output)(michal);
            michal = backup.bind(tangon)(michal, option);
            ctrled = michal[golfie];
            var _closure2_slot4 = ctrled;
            michal = michal[zuuluu];
            var _closure2_slot5 = michal;
            kiloes = output.useMemo;
            romeon = new Array(1);
            romeon[0] = limora;
            michal = function() {
                _fun00003: for(var _fun00004_ip = 0; ; ) switch(_fun00004_ip) {
 0:
                    zuuluu = _closure2_slot2;
                    entity = null;
                    zuuluu = entity == zuuluu;
                    entity = undefined;
                    if(zuuluu) { _fun00004_ip = 32; continue _fun00003 }
 18:
                    zuuluu = _closure2_slot2;
                    michal = zuuluu.toDate;
                    entity = michal.bind(zuuluu)();
 32:
                    return entity;
                }
            };
            romeon = kiloes.bind(output)(michal, romeon);
            kiloes = output.useState;
            michal = false;
            michal = kiloes.bind(output)(michal);
            michal = backup.bind(tangon)(michal, option);
            kiloes = michal[golfie];
            michal = michal[zuuluu];
            var _closure2_slot6 = michal;
            zuuluu = _closure1_slot8;
            michal = function(argFoo) {
                entity = argFoo;
                entity = entity.submitting;
                return entity;
            };
            cntext = zuuluu.bind(tangon)(michal);
            michal = 15;
            michal = oscard[michal];
            option = report.bind(tangon)(michal);
            golfie = option.useStateFromStores;
            michal = _closure1_slot6;
            report = new Array(1);
            report[0] = michal;
            michal = function() {
                michal = _closure1_slot6;
                entity = michal.getAuthenticationConsentRequired;
                entity = entity.bind(michal)();
                return entity;
            };
            target = golfie.bind(option)(report, michal);
            var _closure2_slot7 = target;
            michal = function(argFoo) {
                entity = argFoo;
                entity = entity.errors;
                return entity;
            };
            michal = zuuluu.bind(tangon)(michal);
            report = _closure1_slot1;
            zuuluu = 16;
            zuuluu = oscard[zuuluu];
            report = report.bind(tangon)(zuuluu);
            zuuluu = 'consent';
            vacuum = report.bind(tangon)(zuuluu, michal);
            if(!(foxtra == vacuum)) { _fun00002_ip = 460; continue _fun00001 }
 455:
            vacuum = michal.message;
 460:
            backup = _closure1_slot1;
            source = _closure1_slot2;
            michal = 17;
            michal = source[michal];
            zuuluu = backup.bind(tangon)(michal);
            papara = _closure1_slot0;
            michal = 18;
            michal = source[michal];
            oscard = papara.bind(tangon)(michal);
            report = oscard.getPreviousRegistrationTransitionStep;
            michal = _closure1_slot11;
            michal = michal.AGE_GATE;
            michal = report.bind(oscard)(michal);
            michal = zuuluu.bind(tangon)(michal);
            report = _closure1_slot4;
            zuuluu = report.useEffect;
            michal = new Array(1);
            michal[0] = entity;
            entity = function() {
                zuuluu = _closure2_slot1;
                michal = {};
                tangon = _closure1_slot9;
                tangon = tangon.AGE_GATE;
                michal['step'] = tangon;
                entity = _closure1_slot10;
                entity = entity.VIEWED;
                michal['actionType'] = entity;
                entity = undefined;
                michal = zuuluu.bind(entity)(michal);
                return entity;
            };
            entity = zuuluu.bind(report)(entity, michal);
            entity = 11;
            entity = source[entity];
            entity = backup.bind(tangon)(entity);
            entity = entity.bind(tangon)(limora);
            record = !entity;
            zuuluu = _closure1_slot13;
            michal = _closure1_slot14;
            entity = {};
            golfie = _closure1_slot12;
            oscard = _closure1_slot5;
            report = {};
            option = verify.page;
            report['style'] = option;
            option = 20;
            option = source[option];
            output = backup.bind(tangon)(option);
            option = {};
            backup = 21;
            result = source[backup];
            result = papara.bind(tangon)(result);
            update = result.intl;
            echoed = update.string;
            result = source[backup];
            result = papara.bind(tangon)(result);
            result = result.t;
            result = result.NgL2GR;
            result = echoed.bind(update)(result);
            option['headerText'] = result;
            result = verify.flexGrow;
            option['contentStyle'] = result;
            result = {};
            echoed = verify.inputGroup;
            result['style'] = echoed;
            echoed = 22;
            echoed = source[echoed];
            echoed = papara.bind(tangon)(echoed);
            update = echoed.Input;
            echoed = {};
            sequen = source[backup];
            sequen = papara.bind(tangon)(sequen);
            config = sequen.intl;
            sequen = config.string;
            source = source[backup];
            source = papara.bind(tangon)(source);
            source = source.t;
            source = source.xNpFJy;
            source = sequen.bind(config)(source);
            echoed['label'] = source;
            source = null;
            if(!record) { _fun00002_ip = 827; continue _fun00001 }
 766:
            sequen = foxtra != limora;
            source = null;
            if(!sequen) { _fun00002_ip = 827; continue _fun00001 }
 775:
            status = _closure1_slot0;
            sequen = _closure1_slot2;
            config = sequen[backup];
            config = status.bind(tangon)(config);
            papara = config.intl;
            config = papara.string;
            sequen = sequen[backup];
            sequen = status.bind(tangon)(sequen);
            sequen = sequen.t;
            sequen = sequen.udnqh4;
            source = config.bind(papara)(sequen);
 827:
            echoed['errorMessage'] = source;
            status = _closure1_slot12;
            sequen = _closure1_slot0;
            config = _closure1_slot2;
            source = 23;
            source = config[source];
            source = sequen.bind(tangon)(source);
            sequen = source.InputButton;
            source = {};
            papara = foxtra == limora;
            config = undefined;
            if(papara) { _fun00002_ip = 887; continue _fun00001 }
 873:
            sierra = limora.format;
            papara = 'L';
            config = sierra.bind(limora)(papara);
 887:
            source['value'] = config;
            sierra = _closure1_slot16;
            papara = sierra.format;
            config = 'L';
            config = papara.bind(sierra)(config);
            source['text'] = config;
            config = function() { // Original name: onPress
                zuuluu = _closure2_slot6;
                michal = undefined;
                entity = true;
                entity = zuuluu.bind(michal)(entity);
                return entity;
            };
            source['onPress'] = config;
            papara = _closure1_slot0;
            config = _closure1_slot2;
            sierra = config[backup];
            sierra = papara.bind(tangon)(sierra);
            whisks = sierra.intl;
            limora = whisks.string;
            sierra = config[backup];
            sierra = papara.bind(tangon)(sierra);
            sierra = sierra.t;
            sierra = sierra.xNpFJy;
            sierra = limora.bind(whisks)(sierra);
            source['accessibilityLabel'] = sierra;
            sierra = config[backup];
            sierra = papara.bind(tangon)(sierra);
            whisks = sierra.intl;
            limora = whisks.string;
            sierra = config[backup];
            sierra = papara.bind(tangon)(sierra);
            sierra = sierra.t;
            sierra = sierra.hZaF/P;
            sierra = limora.bind(whisks)(sierra);
            source['accessibilityHint'] = sierra;
            source = status.bind(tangon)(sequen, source);
            echoed['children'] = source;
            echoed = golfie.bind(tangon)(update, echoed);
            result['children'] = echoed;
            echoed = golfie.bind(tangon)(oscard, result);
            result = new Array(4);
            result[0] = echoed;
            source = _closure1_slot12;
            update = _closure1_slot1;
            echoed = 24;
            echoed = config[echoed];
            update = update.bind(tangon)(echoed);
            echoed = {};
            sequen = global;
            sequen = sequen.Boolean;
            sequen = sequen.bind(tangon)(target);
            echoed['consentRequired'] = sequen;
            echoed['consent'] = ctrled;
            ctrled = function() { // Original name: onToggleConsent
                zuuluu = _closure2_slot5;
                michal = undefined;
                entity = function(argFoo) {
                    entity = argFoo;
                    entity = !entity;
                    return entity;
                };
                entity = zuuluu.bind(michal)(entity);
                return entity;
            };
            echoed['onToggleConsent'] = ctrled;
            echoed = source.bind(tangon)(update, echoed);
            result[1] = echoed;
            update = _closure1_slot5;
            echoed = {};
            ctrled = verify.button;
            echoed['style'] = ctrled;
            ctrled = 25;
            ctrled = config[ctrled];
            ctrled = papara.bind(tangon)(ctrled);
            sequen = ctrled.Button;
            ctrled = {};
            target = 'lg';
            ctrled['size'] = target;
            ctrled['loading'] = cntext;
            ctrled['disabled'] = record;
            record = function() { // Original name: onPress
                _fun00005: for(var _fun00006_ip = 0; ; ) switch(_fun00006_ip) {
 0:
                    tangon = _closure1_slot1;
                    michal = _closure1_slot2;
                    entity = 19;
                    michal = michal[entity];
                    entity = undefined;
                    golfie = tangon.bind(entity)(michal);
                    oscard = _closure2_slot2;
                    tangon = null;
                    report = tangon != oscard;
                    tangon = 'birthday was not null';
                    tangon = golfie.bind(entity)(report, tangon);
                    report = _closure1_slot7;
                    tangon = {};
                    tangon['birthday'] = oscard;
                    oscard = _closure2_slot4;
                    if(oscard) { _fun00006_ip = 75; continue _fun00005 }
 68:
                    golfie = _closure2_slot7;
                    oscard = !golfie;
 75:
                    tangon['consent'] = oscard;
                    tangon = report.bind(entity)(tangon);
                    oscard = _closure2_slot1;
                    tangon = {};
                    report = _closure1_slot9;
                    report = report.AGE_GATE;
                    tangon['step'] = report;
                    report = _closure1_slot10;
                    report = report.SUBMITTED;
                    tangon['actionType'] = report;
                    tangon = oscard.bind(entity)(tangon);
                    report = _closure1_slot0;
                    golfie = _closure1_slot2;
                    tangon = 18;
                    tangon = golfie[tangon];
                    report = report.bind(entity)(tangon);
                    tangon = report.handleRegistrationSubmit;
                    zuuluu = _closure1_slot11;
                    zuuluu = zuuluu.AGE_GATE;
                    michal = _closure2_slot0;
                    michal = tangon.bind(report)(zuuluu, michal, oscard);
                    return entity;
                }
            };
            ctrled['onPress'] = record;
            record = config[backup];
            record = papara.bind(tangon)(record);
            cntext = record.intl;
            record = cntext.string;
            config = config[backup];
            config = papara.bind(tangon)(config);
            config = config.t;
            config = config.825cFx;
            config = record.bind(cntext)(config);
            ctrled['text'] = config;
            ctrled = source.bind(tangon)(sequen, ctrled);
            echoed['children'] = ctrled;
            echoed = source.bind(tangon)(update, echoed);
            result[2] = echoed;
            update = foxtra != vacuum;
            echoed = null;
            if(!update) { _fun00002_ip = 1319; continue _fun00001 }
 1273:
            update = '';
            echoed = null;
            if(!(update !== vacuum)) { _fun00002_ip = 1319; continue _fun00001 }
 1283:
            ctrled = _closure1_slot12;
            source = _closure1_slot1;
            sequen = _closure1_slot2;
            update = 26;
            update = sequen[update];
            source = source.bind(tangon)(update);
            update = {};
            update['children'] = vacuum;
            echoed = ctrled.bind(tangon)(source, update);
 1319:
            result[3] = echoed;
            option['children'] = result;
            option = zuuluu.bind(tangon)(output, option);
            report['children'] = option;
            oscard = golfie.bind(tangon)(oscard, report);
            report = new Array(2);
            report[0] = oscard;
            option = _closure1_slot12;
            golfie = _closure1_slot1;
            output = _closure1_slot2;
            oscard = 27;
            oscard = output[oscard];
            golfie = golfie.bind(tangon)(oscard);
            oscard = {};
            result = true;
            oscard['modal'] = result;
            oscard['open'] = kiloes;
            kiloes = _closure1_slot0;
            result = output[backup];
            result = kiloes.bind(tangon)(result);
            echoed = result.intl;
            result = echoed.string;
            backup = output[backup];
            backup = kiloes.bind(tangon)(backup);
            backup = backup.t;
            backup = backup.xNpFJy;
            backup = result.bind(echoed)(backup);
            oscard['title'] = backup;
            backup = 'date';
            oscard['mode'] = backup;
            backup = 28;
            backup = output[backup];
            kiloes = kiloes.bind(tangon)(backup);
            backup = kiloes.isThemeLight;
            kiloes = backup.bind(kiloes)(sizing);
            backup = 'dark';
            if(!kiloes) { _fun00002_ip = 1483; continue _fun00001 }
 1479:
            backup = 'light';
 1483:
            oscard['theme'] = backup;
            if(!(foxtra == romeon)) { _fun00002_ip = 1495; continue _fun00001 }
 1491:
            romeon = _closure1_slot17;
 1495:
            oscard['date'] = romeon;
            yankee = _closure1_slot18;
            oscard['maximumDate'] = yankee;
            yankee = function(argFoo) { // Original name: onConfirm
                tangon = _closure2_slot6;
                entity = undefined;
                zuuluu = false;
                zuuluu = tangon.bind(entity)(zuuluu);
                zuuluu = _closure2_slot3;
                tangon = _closure1_slot1;
                report = _closure1_slot2;
                michal = 10;
                michal = report[michal];
                tangon = tangon.bind(entity)(michal);
                michal = argFoo;
                michal = tangon.bind(entity)(michal);
                michal = zuuluu.bind(entity)(michal);
                return entity;
            };
            oscard['onConfirm'] = yankee;
            yankee = function(argFoo) { // Original name: onDateChange
                zuuluu = _closure2_slot3;
                tangon = _closure1_slot1;
                michal = _closure1_slot2;
                entity = 10;
                michal = michal[entity];
                entity = undefined;
                tangon = tangon.bind(entity)(michal);
                michal = argFoo;
                michal = tangon.bind(entity)(michal);
                michal = zuuluu.bind(entity)(michal);
                return entity;
            };
            oscard['onDateChange'] = yankee;
            offset = function() { // Original name: onCancel
                zuuluu = _closure2_slot6;
                michal = undefined;
                entity = false;
                entity = zuuluu.bind(michal)(entity);
                return entity;
            };
            oscard['onCancel'] = offset;
            verify = verify.datePickerButton;
            verify = verify.color;
            oscard['buttonColor'] = verify;
            oscard = option.bind(tangon)(golfie, oscard);
            report[1] = oscard;
            entity['children'] = report;
            entity = zuuluu.bind(tangon)(michal, entity);
            return entity;
        }
    };
    zuuluu['default'] = michal;
    return entity;
})();