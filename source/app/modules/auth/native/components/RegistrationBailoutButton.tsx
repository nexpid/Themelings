// app/modules/auth/native/components/RegistrationBailoutButton.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    report = argBar;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    entity = argBaz;
    var _closure1_slot1 = entity;
    var _closure1_slot2 = oscard;
    entity = global;
    option = entity.Object;
    golfie = option.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(option)(zuuluu, entity, tangon);
    entity = 0;
    golfie = oscard[entity];
    tangon = argCor;
    entity = undefined;
    tangon = tangon.bind(entity)(golfie);
    tangon = 1;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.jsx;
    var _closure1_slot3 = tangon;
    tangon = 2;
    tangon = oscard[tangon];
    option = report.bind(entity)(tangon);
    golfie = option.createStyles;
    tangon = {};
    verify = {'marginBottom': 16, 'marginLeft': 'auto', 'marginRight': 'auto'};
    tangon['bail'] = verify;
    tangon = golfie.bind(option)(tangon);
    var _closure1_slot4 = tangon;
    tangon = 5;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/auth/native/components/RegistrationBailoutButton.tsx';
    tangon = report.bind(oscard)(tangon);
    michal = function(argFoo) { // Original name: _default
        entity = argFoo;
        report = entity.onBail;
        entity = _closure1_slot4;
        tangon = undefined;
        oscard = entity.bind(tangon)();
        zuuluu = _closure1_slot3;
        yankee = _closure1_slot1;
        verify = _closure1_slot2;
        golfie = 3;
        entity = verify[golfie];
        michal = yankee.bind(tangon)(entity);
        entity = {};
        offset = true;
        entity['shrink'] = offset;
        option = _closure1_slot0;
        offset = 4;
        romeon = verify[offset];
        romeon = option.bind(tangon)(romeon);
        foxtra = romeon.intl;
        romeon = foxtra.string;
        offset = verify[offset];
        offset = option.bind(tangon)(offset);
        offset = offset.t;
        offset = offset.CZ7wvL;
        offset = romeon.bind(foxtra)(offset);
        entity['text'] = offset;
        offset = verify[golfie];
        offset = yankee.bind(tangon)(offset);
        offset = offset.Sizes;
        offset = offset.MEDIUM;
        entity['size'] = offset;
        offset = verify[golfie];
        offset = option.bind(tangon)(offset);
        offset = offset.ButtonLooks;
        offset = offset.LINK;
        entity['look'] = offset;
        golfie = verify[golfie];
        golfie = option.bind(tangon)(golfie);
        golfie = golfie.ButtonColors;
        golfie = golfie.LINK;
        entity['color'] = golfie;
        oscard = oscard.bail;
        entity['style'] = oscard;
        entity['onPress'] = report;
        entity = zuuluu.bind(tangon)(michal, entity);
        return entity;
    };
    zuuluu['default'] = michal;
    return entity;
})();