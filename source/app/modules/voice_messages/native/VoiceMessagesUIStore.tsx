// app/modules/voice_messages/native/VoiceMessagesUIStore.tsx
export default (function(native1, native2, native3, native4, native5, native6, native7) {
    var7 = native2;
    var3 = native6;
    var8 = native7;
    var _closure1_slot0 = var7;
    var _closure1_slot1 = var8;
    var1 = global;
    var6 = var1.Object;
    var5 = var6.defineProperty;
    var4 = {};
    var1 = true;
    var4['value'] = var1;
    var1 = '__esModule';
    var1 = var5.bind(var6)(var3, var1, var4);
    var6 = 0;
    var4 = var8[var6];
    var1 = undefined;
    var4 = var7.bind(var1)(var4);
    var5 = var4.VoiceMessageAnimationState;
    var _closure1_slot2 = var5;
    var4 = var4.WAVEFORM_WAVE_MAX_VALUE;
    var _closure1_slot3 = var4;
    var5 = {};
    var5['REQUESTED'] = var6;
    var4 = 'REQUESTED';
    var5[var6] = var4;
    var4 = 1;
    var5['STARTED'] = var4;
    var6 = 'STARTED';
    var5[var4] = var6;
    var4 = var8[var4];
    var9 = var7.bind(var1)(var4);
    var6 = var9.create;
    var4 = function() {
        var1 = {'voiceMessageAnimationState': null, 'recordingStatus': null, 'recordingId': null, 'currWaveHeight': null, 'showRecordingOverlay': false};
        var5 = _closure1_slot0;
        var4 = _closure1_slot1;
        var3 = 2;
        var4 = var4[var3];
        var3 = undefined;
        var5 = var5.bind(var3)(var4);
        var4 = var5.makeMutable;
        var6 = _closure1_slot2;
        var7 = var6.SENDING;
        var2 = new Array(2);
        var2[0] = var7;
        var6 = var6.SENDING;
        var2[1] = var6;
        var2 = var4.bind(var5)(var2);
        var1['voiceMessageAnimationState'] = var2;
        var1['currWaveHeight'] = var3;
        var2 = false;
        var1['startTimeMillis'] = var3;
        var4 = new Array(0);
        var1['waveform'] = var4;
        var4 = 0;
        var1['waveformVersion'] = var4;
        var1['showVoiceMessagesTooltip'] = var2;
        var1['savedVoiceMessageUploadData'] = var3;
        var1['isVoiceMessageButtonMounted'] = var2;
        var1['isUsingHoldGesture'] = var2;
        return var1;
    };
    var4 = var6.bind(var9)(var4);
    var _closure1_slot4 = var4;
    var _closure1_slot5 = var4;
    var6 = 5;
    var6 = var8[var6];
    var8 = var7.bind(var1)(var6);
    var7 = var8.fileFinishedImporting;
    var6 = 'modules/voice_messages/native/VoiceMessagesUIStore.tsx';
    var6 = var7.bind(var8)(var6);
    var3['VoiceMessageRecordingStatus'] = var5;
    var3['useVoiceMessagesUIStore'] = var4;
    var4 = function setShowRecordingOverlay(arg1) {
        var1 = arg1;
        var _closure2_slot0 = var1;
        var4 = _closure1_slot0;
        var3 = _closure1_slot1;
        var1 = 3;
        var3 = var3[var1];
        var1 = undefined;
        var4 = var4.bind(var1)(var3);
        var3 = var4.batchUpdates;
        var2 = function() {
            var3 = _closure1_slot4;
            var2 = var3.setState;
            var1 = {};
            var4 = _closure2_slot0;
            var1['showRecordingOverlay'] = var4;
            var1 = var2.bind(var3)(var1);
            var1 = undefined;
            return var1;
        };
        var2 = var3.bind(var4)(var2);
        return var1;
    };
    var3['setShowRecordingOverlay'] = var4;
    var4 = function setVoiceMessageRecordingState(arg1) {
        var1 = arg1;
        var _closure2_slot0 = var1;
        var4 = _closure1_slot0;
        var3 = _closure1_slot1;
        var1 = 3;
        var3 = var3[var1];
        var1 = undefined;
        var4 = var4.bind(var1)(var3);
        var3 = var4.batchUpdates;
        var2 = function() {
            var3 = _closure1_slot4;
            var2 = var3.setState;
            var1 = {};
            var4 = _closure2_slot0;
            var1['recordingStatus'] = var4;
            var1 = var2.bind(var3)(var1);
            var1 = undefined;
            return var1;
        };
        var2 = var3.bind(var4)(var2);
        return var1;
    };
    var3['setVoiceMessageRecordingState'] = var4;
    var4 = function setVoiceMessageRecordingId(arg1) {
        var1 = arg1;
        var _closure2_slot0 = var1;
        var4 = _closure1_slot0;
        var3 = _closure1_slot1;
        var1 = 3;
        var3 = var3[var1];
        var1 = undefined;
        var4 = var4.bind(var1)(var3);
        var3 = var4.batchUpdates;
        var2 = function() {
            var3 = _closure1_slot4;
            var2 = var3.setState;
            var1 = {};
            var4 = _closure2_slot0;
            var1['recordingId'] = var4;
            var1 = var2.bind(var3)(var1);
            var1 = undefined;
            return var1;
        };
        var2 = var3.bind(var4)(var2);
        return var1;
    };
    var3['setVoiceMessageRecordingId'] = var4;
    var4 = function setVoiceMessageStartTimeMillis(arg1) {
        var1 = arg1;
        var _closure2_slot0 = var1;
        var4 = _closure1_slot0;
        var3 = _closure1_slot1;
        var1 = 3;
        var3 = var3[var1];
        var1 = undefined;
        var4 = var4.bind(var1)(var3);
        var3 = var4.batchUpdates;
        var2 = function() {
            var3 = _closure1_slot4;
            var2 = var3.setState;
            var1 = {};
            var4 = _closure2_slot0;
            var1['startTimeMillis'] = var4;
            var1 = var2.bind(var3)(var1);
            var1 = undefined;
            return var1;
        };
        var2 = var3.bind(var4)(var2);
        return var1;
    };
    var3['setVoiceMessageStartTimeMillis'] = var4;
    var4 = function setVoiceMessageAnimationState(arg1) {
        var1 = arg1;
        var _closure2_slot0 = var1;
        var4 = _closure1_slot0;
        var3 = _closure1_slot1;
        var1 = 3;
        var3 = var3[var1];
        var1 = undefined;
        var4 = var4.bind(var1)(var3);
        var3 = var4.batchUpdates;
        var2 = function() {
            var3 = _closure1_slot4;
            var2 = var3.setState;
            var1 = {};
            var5 = _closure2_slot0;
            var6 = var1;
            var4 = copyDataProperties(var6, var5);
            var1 = var2.bind(var3)(var1);
            var1 = undefined;
            return var1;
        };
        var2 = var3.bind(var4)(var2);
        return var1;
    };
    var3['setVoiceMessageAnimationState'] = var4;
    var4 = function addVoiceMessageWave(arg1) {
        _fun0001: for(var _fun0001_ip = 0; ; ) switch(_fun0001_ip) {
 0:
            var7 = arg1;
            var4 = _closure1_slot5;
            var3 = var4.getState;
            var3 = var3.bind(var4)();
            var5 = var3.waveform;
            var3 = var4.getState;
            var3 = var3.bind(var4)();
            var6 = var3.waveformVersion;
            var _closure2_slot0 = var6;
            var3 = var4.getState;
            var3 = var3.bind(var4)();
            var8 = var3.currWaveHeight;
            var3 = null;
            if(!(var3 != var8)) { _fun0001_ip = 120; continue _fun0001 }
 70:
            var4 = var8.set;
            var10 = _closure1_slot0;
            var9 = _closure1_slot1;
            var3 = 4;
            var9 = var9[var3];
            var3 = undefined;
            var10 = var10.bind(var3)(var9);
            var9 = var10.withSpring;
            var3 = _closure1_slot3;
            var3 = var7 / var3;
            var3 = var9.bind(var10)(var3);
            var3 = var4.bind(var8)(var3);
 120:
            var4 = var5.push;
            var3 = new Array(2);
            var3[0] = var7;
            var3[1] = var6;
            var3 = var4.bind(var5)(var3);
            var4 = _closure1_slot0;
            var3 = _closure1_slot1;
            var1 = 3;
            var3 = var3[var1];
            var1 = undefined;
            var4 = var4.bind(var1)(var3);
            var3 = var4.batchUpdates;
            var2 = function() {
                var3 = _closure1_slot4;
                var2 = var3.setState;
                var1 = {};
                var5 = _closure2_slot0;
                var4 = 1;
                var4 = var5 + var4;
                var1['waveformVersion'] = var4;
                var1 = var2.bind(var3)(var1);
                var1 = undefined;
                return var1;
            };
            var2 = var3.bind(var4)(var2);
            return var1;
        }
    };
    var3['addVoiceMessageWave'] = var4;
    var4 = function showVoiceMessagesTooltip() {
        var3 = _closure1_slot0;
        var2 = _closure1_slot1;
        var1 = 3;
        var2 = var2[var1];
        var1 = undefined;
        var4 = var3.bind(var1)(var2);
        var3 = var4.batchUpdates;
        var2 = function() {
            var3 = _closure1_slot4;
            var2 = var3.setState;
            var1 = {};
            var4 = true;
            var1['showVoiceMessagesTooltip'] = var4;
            var1 = var2.bind(var3)(var1);
            var1 = undefined;
            return var1;
        };
        var2 = var3.bind(var4)(var2);
        return var1;
    };
    var3['showVoiceMessagesTooltip'] = var4;
    var4 = function hideVoiceMessagesTooltip() {
        var3 = _closure1_slot0;
        var2 = _closure1_slot1;
        var1 = 3;
        var2 = var2[var1];
        var1 = undefined;
        var4 = var3.bind(var1)(var2);
        var3 = var4.batchUpdates;
        var2 = function() {
            var3 = _closure1_slot4;
            var2 = var3.setState;
            var1 = {};
            var4 = false;
            var1['showVoiceMessagesTooltip'] = var4;
            var1 = var2.bind(var3)(var1);
            var1 = undefined;
            return var1;
        };
        var2 = var3.bind(var4)(var2);
        return var1;
    };
    var3['hideVoiceMessagesTooltip'] = var4;
    var4 = function resetVoiceMessageState() {
        _fun0002: for(var _fun0002_ip = 0; ; ) switch(_fun0002_ip) {
 0:
            var4 = _closure1_slot0;
            var3 = _closure1_slot1;
            var1 = 3;
            var3 = var3[var1];
            var1 = undefined;
            var5 = var4.bind(var1)(var3);
            var4 = var5.batchUpdates;
            var3 = function() {
                var4 = _closure1_slot4;
                var3 = var4.setState;
                var2 = {'waveform': null, 'waveformVersion': 0, 'showRecordingOverlay': false};
                var1 = new Array(0);
                var2['waveform'] = var1;
                var1 = undefined;
                var2['startTimeMillis'] = var1;
                var2['savedVoiceMessageUploadData'] = var1;
                var2 = var3.bind(var4)(var2);
                return var1;
            };
            var3 = var4.bind(var5)(var3);
            var4 = _closure1_slot5;
            var3 = var4.getState;
            var3 = var3.bind(var4)();
            var4 = var3.currWaveHeight;
            var3 = null;
            if(!(var3 != var4)) { _fun0002_ip = 113; continue _fun0002 }
 71:
            var3 = var4.set;
            var5 = _closure1_slot0;
            var6 = _closure1_slot1;
            var2 = 4;
            var2 = var6[var2];
            var6 = var5.bind(var1)(var2);
            var5 = var6.withSpring;
            var2 = 0;
            var2 = var5.bind(var6)(var2);
            var2 = var3.bind(var4)(var2);
 113:
            return var1;
        }
    };
    var3['resetVoiceMessageState'] = var4;
    var4 = function setSavedVoiceMessageUploadData(arg1) {
        var1 = arg1;
        var _closure2_slot0 = var1;
        var4 = _closure1_slot0;
        var3 = _closure1_slot1;
        var1 = 3;
        var3 = var3[var1];
        var1 = undefined;
        var4 = var4.bind(var1)(var3);
        var3 = var4.batchUpdates;
        var2 = function() {
            var3 = _closure1_slot4;
            var2 = var3.setState;
            var1 = {};
            var4 = _closure2_slot0;
            var1['savedVoiceMessageUploadData'] = var4;
            var1 = var2.bind(var3)(var1);
            var1 = undefined;
            return var1;
        };
        var2 = var3.bind(var4)(var2);
        return var1;
    };
    var3['setSavedVoiceMessageUploadData'] = var4;
    var4 = function setIsVoiceMessageButtonMounted(arg1) {
        var1 = arg1;
        var _closure2_slot0 = var1;
        var4 = _closure1_slot0;
        var3 = _closure1_slot1;
        var1 = 3;
        var3 = var3[var1];
        var1 = undefined;
        var4 = var4.bind(var1)(var3);
        var3 = var4.batchUpdates;
        var2 = function() {
            var3 = _closure1_slot4;
            var2 = var3.setState;
            var1 = {};
            var4 = _closure2_slot0;
            var1['isVoiceMessageButtonMounted'] = var4;
            var1 = var2.bind(var3)(var1);
            var1 = undefined;
            return var1;
        };
        var2 = var3.bind(var4)(var2);
        return var1;
    };
    var3['setIsVoiceMessageButtonMounted'] = var4;
    var2 = function setIsUsingHoldGesture(arg1) {
        var1 = arg1;
        var _closure2_slot0 = var1;
        var4 = _closure1_slot0;
        var3 = _closure1_slot1;
        var1 = 3;
        var3 = var3[var1];
        var1 = undefined;
        var4 = var4.bind(var1)(var3);
        var3 = var4.batchUpdates;
        var2 = function() {
            var3 = _closure1_slot4;
            var2 = var3.setState;
            var1 = {};
            var4 = _closure2_slot0;
            var1['isUsingHoldGesture'] = var4;
            var1 = var2.bind(var3)(var1);
            var1 = undefined;
            return var1;
        };
        var2 = var3.bind(var4)(var2);
        return var1;
    };
    var3['setIsUsingHoldGesture'] = var2;
    return var1;
})();