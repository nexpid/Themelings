// app/modules/voice_messages/native/components/VoiceMessageOverlay.tsx
export default (function(argFoo, argBar, argBaz, argCorge, argGrault, argFred, argPlugh) {
    oscar = argBar;
    verify = argBaz;
    zulu = argFred;
    golf = argPlugh;
    var _closure1_slot0 = oscar;
    var _closure1_slot1 = verify;
    var _closure1_slot2 = golf;
    entity = function(argFoo) { // Original name: LockPill
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            mike = argFoo;
            yankee = mike.keyboardHeight;
            var _closure2_slot0 = yankee;
            golf = mike.safeAreaBottom;
            var _closure2_slot1 = golf;
            foxtrot = mike.initialAnimation;
            var _closure2_slot2 = foxtrot;
            oscar = mike.voiceMessageAnimationState;
            var _closure2_slot3 = oscar;
            mike = _closure1_slot21;
            tango = undefined;
            romeo = mike.bind(tango)();
            report = _closure1_slot4;
            zulu = report.useState;
            mike = false;
            report = zulu.bind(report)(mike);
            zulu = _closure1_slot3;
            mike = 2;
            report = zulu.bind(tango)(report, mike);
            mike = 0;
            mike = report[mike];
            zulu = 1;
            sizing = report[zulu];
            var _closure2_slot4 = sizing;
            result = _closure1_slot0;
            output = _closure1_slot2;
            report = 11;
            zulu = output[report];
            backup = result.bind(tango)(zulu);
            offset = backup.useAnimatedReaction;
            options = function() { // Original name: _
                _fun00003: for(var _fun00004_ip = 0; ; ) switch(_fun00004_ip) {
 0:
                    mike = _closure2_slot3;
                    entity = mike.get;
                    entity = entity.bind(mike)();
                    tango = 1;
                    report = entity[tango];
                    entity = _closure1_slot11;
                    entity = entity.LOCKED;
                    entity = report === entity;
                    if(entity) { _fun00004_ip = 74; continue _fun00003 }
 43:
                    report = _closure2_slot3;
                    zulu = report.get;
                    zulu = zulu.bind(report)();
                    zulu = zulu[tango];
                    mike = _closure1_slot11;
                    mike = mike.LOCKING;
                    entity = zulu === mike;
 74:
                    return entity;
                }
            };
            zulu = {};
            zulu['voiceMessageAnimationState'] = oscar;
            kilo = _closure1_slot11;
            zulu['VoiceMessageAnimationState'] = kilo;
            options['__closure'] = zulu;
            zulu = 16672558304670.0;
            options['__workletHash'] = zulu;
            zulu = _closure1_slot41;
            options['__initData'] = zulu;
            zulu = function(argFoo, argBar) { // Original name: u
                _fun00005: for(var _fun00006_ip = 0; ; ) switch(_fun00006_ip) {
 0:
                    zulu = argFoo;
                    entity = argBar;
                    if(!(zulu !== entity)) { _fun00006_ip = 57; continue _fun00005 }
 10:
                    tango = _closure1_slot0;
                    mike = _closure1_slot2;
                    entity = 11;
                    entity = mike[entity];
                    mike = undefined;
                    report = tango.bind(mike)(entity);
                    tango = report.runOnJS;
                    entity = _closure2_slot4;
                    entity = tango.bind(report)(entity);
                    entity = entity.bind(mike)(zulu);
 57:
                    entity = undefined;
                    return entity;
                }
            };
            kilo = {};
            output = output[report];
            output = result.bind(tango)(output);
            output = output.runOnJS;
            kilo['runOnJS'] = output;
            kilo['setLocked'] = sizing;
            zulu['__closure'] = kilo;
            kilo = 10857258354778.0;
            zulu['__workletHash'] = kilo;
            kilo = _closure1_slot42;
            zulu['__initData'] = kilo;
            zulu = offset.bind(backup)(options, zulu);
            zulu = function(argFoo) { // Original name: useLockStyles
                _fun00007: for(var _fun00008_ip = 0; ; ) switch(_fun00008_ip) {
 0:
                    romeo = argFoo;
                    var _closure3_slot0 = romeo;
                    golf = _closure1_slot1;
                    zulu = _closure1_slot2;
                    entity = 25;
                    entity = zulu[entity];
                    offset = undefined;
                    entity = golf.bind(offset)(entity);
                    options = entity.bind(offset)();
                    tango = _closure1_slot0;
                    entity = 26;
                    oscar = zulu[entity];
                    yankee = tango.bind(offset)(oscar);
                    verify = yankee.useThemedColorValue;
                    oscar = _closure1_slot13;
                    oscar = oscar.BACKGROUND_TERTIARY;
                    yankee = verify.bind(yankee)(oscar);
                    oscar = 18;
                    oscar = zulu[oscar];
                    oscar = golf.bind(offset)(oscar);
                    oscar = oscar.unsafe_rawColors;
                    golf = oscar.WHITE_500;
                    oscar = _closure1_slot34;
                    verify = 27;
                    zulu = zulu[verify];
                    tango = tango.bind(offset)(zulu);
                    zulu = tango.isThemeLight;
                    zulu = zulu.bind(tango)(options);
                    tango = golf;
                    if(zulu) { _fun00008_ip = 136; continue _fun00007 }
 131:
                    tango = yankee.hex;
 136:
                    foxtrot = _closure1_slot0;
                    zulu = _closure1_slot2;
                    zulu = zulu[verify];
                    foxtrot = foxtrot.bind(offset)(zulu);
                    zulu = foxtrot.isThemeLight;
                    foxtrot = zulu.bind(foxtrot)(options);
                    zulu = golf;
                    if(foxtrot) { _fun00008_ip = 175; continue _fun00007 }
 170:
                    zulu = yankee.hex;
 175:
                    control = undefined;
                    source = romeo;
                    update = tango;
                    echo = zulu;
                    result = golf;
                    output = golf;
                    backup = control[oscar](source, update, echo, result, output, sizing);
                    var _closure3_slot1 = backup;
                    golf = _closure1_slot0;
                    zulu = _closure1_slot2;
                    tango = zulu[entity];
                    oscar = golf.bind(offset)(tango);
                    tango = oscar.useThemedColorValue;
                    zulu = zulu[verify];
                    golf = golf.bind(offset)(zulu);
                    zulu = golf.isThemeLight;
                    zulu = zulu.bind(golf)(options);
                    golf = _closure1_slot13;
                    if(zulu) { _fun00008_ip = 258; continue _fun00007 }
 250:
                    zulu = golf.INTERACTIVE_ACTIVE;
                    _fun00008_ip = 264; continue _fun00007;
 258:
                    zulu = golf.INTERACTIVE_NORMAL;
 264:
                    zulu = tango.bind(oscar)(zulu);
                    verify = _closure1_slot0;
                    yankee = _closure1_slot2;
                    entity = yankee[entity];
                    oscar = verify.bind(offset)(entity);
                    tango = oscar.useThemedColorValue;
                    entity = _closure1_slot13;
                    entity = entity.STATUS_POSITIVE;
                    entity = tango.bind(oscar)(entity);
                    golf = _closure1_slot34;
                    update = zulu.hex;
                    echo = zulu.hex;
                    result = entity.hex;
                    output = entity.hex;
                    control = undefined;
                    source = romeo;
                    foxtrot = control[golf](source, update, echo, result, output, sizing);
                    var _closure3_slot2 = foxtrot;
                    options = 11;
                    entity = yankee[options];
                    tango = verify.bind(offset)(entity);
                    zulu = tango.useDerivedValue;
                    entity = function() { // Original name: o
                        mike = _closure3_slot0;
                        entity = mike.get;
                        mike = entity.bind(mike)();
                        entity = 1;
                        tango = mike[entity];
                        golf = _closure1_slot0;
                        options = _closure1_slot2;
                        entity = 24;
                        entity = options[entity];
                        oscar = undefined;
                        zulu = golf.bind(oscar)(entity);
                        mike = zulu.withTiming;
                        entity = {};
                        report = 11;
                        report = options[report];
                        report = golf.bind(oscar)(report);
                        report = report.Easing;
                        report = report.linear;
                        entity['easing'] = report;
                        report = 150;
                        entity['duration'] = report;
                        entity = mike.bind(zulu)(tango, entity);
                        return entity;
                    };
                    oscar = {};
                    oscar['voiceMessageAnimationState'] = romeo;
                    golf = 24;
                    golf = yankee[golf];
                    golf = verify.bind(offset)(golf);
                    golf = golf.withTiming;
                    oscar['withTiming'] = golf;
                    golf = yankee[options];
                    golf = verify.bind(offset)(golf);
                    golf = golf.Easing;
                    oscar['Easing'] = golf;
                    entity['__closure'] = oscar;
                    oscar = 11385805572554.0;
                    entity['__workletHash'] = oscar;
                    oscar = _closure1_slot35;
                    entity['__initData'] = oscar;
                    golf = zulu.bind(tango)(entity);
                    var _closure3_slot3 = golf;
                    entity = yankee[options];
                    tango = verify.bind(offset)(entity);
                    zulu = tango.useDerivedValue;
                    entity = function() { // Original name: s
                        _fun00009: for(var _fun00010_ip = 0; ; ) switch(_fun00010_ip) {
 0:
                            zulu = _closure3_slot0;
                            entity = zulu.get;
                            report = entity.bind(zulu)();
                            zulu = _closure1_slot3;
                            oscar = undefined;
                            tango = 2;
                            golf = zulu.bind(oscar)(report, tango);
                            zulu = 0;
                            report = golf[zulu];
                            zulu = 1;
                            zulu = golf[zulu];
                            zulu = report + zulu;
                            if(!(zulu !== tango)) { _fun00010_ip = 67; continue _fun00009 }
 55:
                            report = [1, 0, 1, 0];
                            _fun00010_ip = 77; continue _fun00009;
 67:
                            report = [1, 1, 1, 0];
 77:
                            tango = _closure1_slot0;
                            golf = _closure1_slot2;
                            zulu = 11;
                            zulu = golf[zulu];
                            tango = tango.bind(oscar)(zulu);
                            zulu = tango.interpolate;
                            oscar = _closure3_slot3;
                            mike = oscar.get;
                            mike = mike.bind(oscar)();
                            entity = _closure1_slot23;
                            entity = zulu.bind(tango)(mike, entity, report);
                            return entity;
                        }
                    };
                    oscar = {};
                    oscar['voiceMessageAnimationState'] = romeo;
                    romeo = yankee[options];
                    romeo = verify.bind(offset)(romeo);
                    romeo = romeo.interpolate;
                    oscar['interpolate'] = romeo;
                    oscar['timing'] = golf;
                    romeo = _closure1_slot23;
                    oscar['VOICE_MESSAGE_ANIMATION_STATES'] = romeo;
                    entity['__closure'] = oscar;
                    oscar = 13564673991122.0;
                    entity['__workletHash'] = oscar;
                    oscar = _closure1_slot36;
                    entity['__initData'] = oscar;
                    kilo = zulu.bind(tango)(entity);
                    var _closure3_slot4 = kilo;
                    entity = {};
                    zulu = yankee[options];
                    oscar = verify.bind(offset)(zulu);
                    tango = oscar.useAnimatedStyle;
                    zulu = function() { // Original name: l
                        entity = {};
                        report = _closure1_slot0;
                        tango = _closure1_slot2;
                        zulu = 11;
                        tango = tango[zulu];
                        zulu = undefined;
                        oscar = report.bind(zulu)(tango);
                        report = oscar.interpolate;
                        tango = _closure3_slot3;
                        zulu = tango.get;
                        tango = zulu.bind(tango)();
                        zulu = _closure1_slot23;
                        mike = [68, 68, 104, 104];
                        mike = report.bind(oscar)(tango, zulu, mike);
                        entity['height'] = mike;
                        return entity;
                    };
                    romeo = {};
                    sizing = yankee[options];
                    sizing = verify.bind(offset)(sizing);
                    sizing = sizing.interpolate;
                    romeo['interpolate'] = sizing;
                    romeo['timing'] = golf;
                    sizing = _closure1_slot23;
                    romeo['VOICE_MESSAGE_ANIMATION_STATES'] = sizing;
                    zulu['__closure'] = romeo;
                    romeo = 16239675884614.0;
                    zulu['__workletHash'] = romeo;
                    romeo = _closure1_slot37;
                    zulu['__initData'] = romeo;
                    zulu = tango.bind(oscar)(zulu);
                    entity['lockParentContainerStyle'] = zulu;
                    zulu = yankee[options];
                    oscar = verify.bind(offset)(zulu);
                    tango = oscar.useAnimatedStyle;
                    zulu = function() { // Original name: c
                        entity = {};
                        oscar = _closure1_slot0;
                        golf = _closure1_slot2;
                        tango = 11;
                        zulu = golf[tango];
                        report = undefined;
                        romeo = oscar.bind(report)(zulu);
                        yankee = romeo.interpolate;
                        verify = _closure3_slot3;
                        options = verify.get;
                        offset = options.bind(verify)();
                        verify = _closure1_slot23;
                        options = [40, 40, 56, 56];
                        options = yankee.bind(romeo)(offset, verify, options);
                        entity['width'] = options;
                        options = golf[tango];
                        romeo = oscar.bind(report)(options);
                        yankee = romeo.interpolate;
                        verify = _closure3_slot3;
                        options = verify.get;
                        offset = options.bind(verify)();
                        verify = _closure1_slot23;
                        options = [68, 68, 56, 56];
                        options = yankee.bind(romeo)(offset, verify, options);
                        entity['height'] = options;
                        verify = _closure3_slot4;
                        options = verify.get;
                        options = options.bind(verify)();
                        entity['opacity'] = options;
                        verify = _closure3_slot1;
                        options = verify.get;
                        options = options.bind(verify)();
                        entity['backgroundColor'] = options;
                        options = golf[tango];
                        romeo = oscar.bind(report)(options);
                        yankee = romeo.interpolate;
                        verify = _closure3_slot3;
                        options = verify.get;
                        offset = options.bind(verify)();
                        verify = _closure1_slot23;
                        options = [0, 0];
                        foxtrot = -8;
                        options[2] = foxtrot;
                        options[3] = foxtrot;
                        options = yankee.bind(romeo)(offset, verify, options);
                        entity['marginHorizontal'] = options;
                        tango = golf[tango];
                        oscar = oscar.bind(report)(tango);
                        report = oscar.interpolate;
                        tango = _closure3_slot3;
                        zulu = tango.get;
                        tango = zulu.bind(tango)();
                        zulu = _closure1_slot23;
                        mike = [0, 0, 36, 36];
                        mike = report.bind(oscar)(tango, zulu, mike);
                        entity['marginBottom'] = mike;
                        return entity;
                    };
                    romeo = {};
                    sizing = yankee[options];
                    sizing = verify.bind(offset)(sizing);
                    sizing = sizing.interpolate;
                    romeo['interpolate'] = sizing;
                    romeo['timing'] = golf;
                    sizing = _closure1_slot23;
                    romeo['VOICE_MESSAGE_ANIMATION_STATES'] = sizing;
                    romeo['lockContainerOpacity'] = kilo;
                    romeo['lockedBackgroundColor'] = backup;
                    zulu['__closure'] = romeo;
                    romeo = 16191961901595.0;
                    zulu['__workletHash'] = romeo;
                    romeo = _closure1_slot38;
                    zulu['__initData'] = romeo;
                    zulu = tango.bind(oscar)(zulu);
                    entity['lockContainerStyle'] = zulu;
                    zulu = yankee[options];
                    oscar = verify.bind(offset)(zulu);
                    tango = oscar.useAnimatedStyle;
                    zulu = function() { // Original name: u
                        entity = {};
                        oscar = _closure1_slot0;
                        golf = _closure1_slot2;
                        tango = 11;
                        mike = golf[tango];
                        report = undefined;
                        romeo = oscar.bind(report)(mike);
                        yankee = romeo.interpolate;
                        verify = _closure3_slot3;
                        options = verify.get;
                        offset = options.bind(verify)();
                        verify = _closure1_slot23;
                        options = [24, 24, 32, 32];
                        options = yankee.bind(romeo)(offset, verify, options);
                        entity['width'] = options;
                        options = golf[tango];
                        romeo = oscar.bind(report)(options);
                        yankee = romeo.interpolate;
                        verify = _closure3_slot3;
                        options = verify.get;
                        offset = options.bind(verify)();
                        verify = _closure1_slot23;
                        options = [24, 24, 32, 32];
                        options = yankee.bind(romeo)(offset, verify, options);
                        entity['height'] = options;
                        tango = golf[tango];
                        golf = oscar.bind(report)(tango);
                        oscar = golf.interpolate;
                        report = _closure3_slot3;
                        tango = report.get;
                        report = tango.bind(report)();
                        tango = _closure1_slot23;
                        zulu = [12, 12, 10, 10];
                        zulu = oscar.bind(golf)(report, tango, zulu);
                        entity['marginTop'] = zulu;
                        zulu = _closure3_slot2;
                        mike = zulu.get;
                        mike = mike.bind(zulu)();
                        entity['tintColor'] = mike;
                        return entity;
                    };
                    romeo = {};
                    backup = yankee[options];
                    backup = verify.bind(offset)(backup);
                    backup = backup.interpolate;
                    romeo['interpolate'] = backup;
                    romeo['timing'] = golf;
                    backup = _closure1_slot23;
                    romeo['VOICE_MESSAGE_ANIMATION_STATES'] = backup;
                    romeo['lockIconColor'] = foxtrot;
                    zulu['__closure'] = romeo;
                    romeo = 10256653077678.0;
                    zulu['__workletHash'] = romeo;
                    romeo = _closure1_slot39;
                    zulu['__initData'] = romeo;
                    zulu = tango.bind(oscar)(zulu);
                    entity['lockIconStyle'] = zulu;
                    zulu = yankee[options];
                    tango = verify.bind(offset)(zulu);
                    zulu = tango.useAnimatedStyle;
                    mike = function() { // Original name: _
                        entity = {};
                        report = _closure1_slot0;
                        tango = _closure1_slot2;
                        zulu = 11;
                        tango = tango[zulu];
                        zulu = undefined;
                        oscar = report.bind(zulu)(tango);
                        report = oscar.interpolate;
                        tango = _closure3_slot3;
                        zulu = tango.get;
                        tango = zulu.bind(tango)();
                        zulu = _closure1_slot23;
                        mike = [1, 1, 0, 0];
                        mike = report.bind(oscar)(tango, zulu, mike);
                        entity['opacity'] = mike;
                        return entity;
                    };
                    oscar = {};
                    options = yankee[options];
                    options = verify.bind(offset)(options);
                    options = options.interpolate;
                    oscar['interpolate'] = options;
                    oscar['timing'] = golf;
                    golf = _closure1_slot23;
                    oscar['VOICE_MESSAGE_ANIMATION_STATES'] = golf;
                    mike['__closure'] = oscar;
                    oscar = 13143453012261.0;
                    mike['__workletHash'] = oscar;
                    report = _closure1_slot40;
                    mike['__initData'] = report;
                    mike = zulu.bind(tango)(mike);
                    entity['chevonStyle'] = mike;
                    return entity;
                }
            };
            zulu = zulu.bind(tango)(oscar);
            options = zulu.lockParentContainerStyle;
            offset = zulu.lockContainerStyle;
            output = zulu.lockIconStyle;
            kilo = zulu.chevonStyle;
            zulu = _closure1_slot1;
            backup = _closure1_slot2;
            if(mike) { _fun00002_ip = 313; continue _fun00001 }
 304:
            mike = 29;
            mike = backup[mike];
            _fun00002_ip = 320; continue _fun00001;
 313:
            oscar = 28;
            mike = backup[oscar];
 320:
            sizing = zulu.bind(tango)(mike);
            zulu = _closure1_slot0;
            backup = _closure1_slot2;
            mike = backup[report];
            zulu = zulu.bind(tango)(mike);
            mike = zulu.useAnimatedStyle;
            entity = function() { // Original name: M
                entity = {};
                zulu = _closure2_slot2;
                tango = zulu.get;
                tango = tango.bind(zulu)();
                entity['opacity'] = tango;
                tango = _closure2_slot0;
                mike = _closure2_slot1;
                tango = tango + mike;
                mike = 56;
                tango = tango + mike;
                mike = zulu.get;
                zulu = mike.bind(zulu)();
                mike = 8;
                zulu = mike * zulu;
                mike = 24;
                mike = tango + mike;
                mike = mike + zulu;
                entity['bottom'] = mike;
                return entity;
            };
            oscar = {};
            oscar['initialAnimation'] = foxtrot;
            oscar['keyboardHeight'] = yankee;
            oscar['safeAreaBottom'] = golf;
            golf = 56;
            oscar['INPUT_HEIGHT'] = golf;
            golf = 8;
            oscar['INITIAL_SHIFT'] = golf;
            entity['__closure'] = oscar;
            oscar = 14817714818627.0;
            entity['__workletHash'] = oscar;
            oscar = _closure1_slot43;
            entity['__initData'] = oscar;
            golf = mike.bind(zulu)(entity);
            zulu = _closure1_slot14;
            foxtrot = _closure1_slot1;
            entity = backup[report];
            entity = foxtrot.bind(tango)(entity);
            mike = entity.View;
            entity = {};
            yankee = romeo.lockParentContainer;
            oscar = new Array(3);
            oscar[0] = yankee;
            oscar[1] = options;
            oscar[2] = golf;
            entity['style'] = oscar;
            golf = _closure1_slot15;
            report = backup[report];
            report = foxtrot.bind(tango)(report);
            oscar = report.View;
            report = {};
            yankee = romeo.lockContainer;
            options = new Array(2);
            options[0] = yankee;
            options[1] = offset;
            report['style'] = options;
            yankee = _closure1_slot14;
            offset = _closure1_slot17;
            options = {};
            options['style'] = output;
            options['source'] = sizing;
            offset = yankee.bind(tango)(offset, options);
            options = new Array(2);
            options[0] = offset;
            yankee = _closure1_slot14;
            offset = _closure1_slot17;
            verify = {};
            sizing = romeo.chevon;
            romeo = new Array(2);
            romeo[0] = sizing;
            romeo[1] = kilo;
            verify['style'] = romeo;
            romeo = 30;
            romeo = backup[romeo];
            romeo = foxtrot.bind(tango)(romeo);
            verify['source'] = romeo;
            verify = yankee.bind(tango)(offset, verify);
            options[1] = verify;
            report['children'] = options;
            report = golf.bind(tango)(oscar, report);
            entity['children'] = report;
            entity = zulu.bind(tango)(mike, entity);
            return entity;
        }
    };
    var _closure1_slot53 = entity;
    entity = global;
    options = entity.Object;
    report = options.defineProperty;
    mike = {};
    entity = true;
    mike['value'] = entity;
    entity = '__esModule';
    entity = report.bind(options)(zulu, entity, mike);
    entity = 0;
    mike = golf[entity];
    entity = undefined;
    mike = verify.bind(entity)(mike);
    var _closure1_slot3 = mike;
    mike = 1;
    report = golf[mike];
    mike = argCorge;
    options = mike.bind(entity)(report);
    var _closure1_slot4 = options;
    mike = 2;
    mike = golf[mike];
    mike = oscar.bind(entity)(mike);
    report = mike.View;
    var _closure1_slot5 = report;
    foxtrot = mike.StyleSheet;
    mike = mike.AppState;
    var _closure1_slot6 = mike;
    mike = 3;
    mike = golf[mike];
    mike = verify.bind(entity)(mike);
    var _closure1_slot7 = mike;
    mike = 4;
    mike = golf[mike];
    mike = verify.bind(entity)(mike);
    var _closure1_slot8 = mike;
    mike = 5;
    mike = golf[mike];
    mike = verify.bind(entity)(mike);
    var _closure1_slot9 = mike;
    mike = 6;
    mike = golf[mike];
    mike = oscar.bind(entity)(mike);
    mike = mike.useVoiceMessagesUIStore;
    var _closure1_slot10 = mike;
    mike = 7;
    mike = golf[mike];
    mike = oscar.bind(entity)(mike);
    report = mike.VoiceMessageAnimationState;
    var _closure1_slot11 = report;
    mike = 8;
    mike = golf[mike];
    mike = oscar.bind(entity)(mike);
    offset = mike.ComponentActionsKeyed;
    var _closure1_slot12 = offset;
    mike = mike.ThemeColor;
    var _closure1_slot13 = mike;
    mike = 9;
    mike = golf[mike];
    mike = oscar.bind(entity)(mike);
    backup = mike.CHAT_INPUT_HORIZONTAL_PADDING;
    mike = 10;
    offset = golf[mike];
    offset = oscar.bind(entity)(offset);
    offset = offset.jsx;
    var _closure1_slot14 = offset;
    offset = golf[mike];
    offset = oscar.bind(entity)(offset);
    offset = offset.jsxs;
    var _closure1_slot15 = offset;
    mike = golf[mike];
    mike = oscar.bind(entity)(mike);
    mike = mike.Fragment;
    var _closure1_slot16 = mike;
    mike = 11;
    offset = golf[mike];
    romeo = verify.bind(entity)(offset);
    yankee = romeo.createAnimatedComponent;
    offset = 12;
    offset = golf[offset];
    offset = verify.bind(entity)(offset);
    offset = yankee.bind(romeo)(offset);
    var _closure1_slot17 = offset;
    offset = golf[mike];
    romeo = verify.bind(entity)(offset);
    yankee = romeo.createAnimatedComponent;
    offset = 13;
    offset = golf[offset];
    offset = oscar.bind(entity)(offset);
    offset = offset.PressableOpacity;
    offset = yankee.bind(romeo)(offset);
    var _closure1_slot18 = offset;
    mike = golf[mike];
    yankee = verify.bind(entity)(mike);
    offset = yankee.createAnimatedComponent;
    mike = 14;
    mike = golf[mike];
    mike = oscar.bind(entity)(mike);
    mike = mike.Text;
    mike = offset.bind(yankee)(mike);
    var _closure1_slot19 = mike;
    mike = 15;
    mike = golf[mike];
    yankee = verify.bind(entity)(mike);
    offset = yankee.memoize;
    mike = function() {
        zulu = _closure1_slot1;
        oscar = _closure1_slot2;
        mike = 11;
        mike = oscar[mike];
        report = undefined;
        zulu = zulu.bind(report)(mike);
        mike = zulu.createAnimatedComponent;
        tango = _closure1_slot0;
        entity = 16;
        entity = oscar[entity];
        entity = tango.bind(report)(entity);
        entity = entity.Ellipse;
        entity = mike.bind(zulu)(entity);
        return entity;
    };
    mike = offset.bind(yankee)(mike);
    var _closure1_slot20 = mike;
    mike = 17;
    mike = golf[mike];
    romeo = oscar.bind(entity)(mike);
    yankee = romeo.createStyles;
    offset = {};
    mike = {};
    kilo = 'center';
    mike['alignItems'] = kilo;
    output = foxtrot.absoluteFillObject;
    result = mike;
    foxtrot = copyDataProperties(result, output);
    kilo = 'hidden';
    foxtrot = 'overflow';
    mike[foxtrot] = kilo;
    offset['container'] = mike;
    mike = {'flexDirection': 'row', 'alignItems': 'flex-end', 'paddingTop': 8, 'paddingHorizontal': null, 'paddingBottom': 9};
    mike['paddingHorizontal'] = backup;
    offset['innerContainer'] = mike;
    mike = {'position': 'absolute', 'bottom': 0, 'width': '100%', 'alignItems': 'center', 'overflow': 'hidden'};
    offset['contentContainer'] = mike;
    foxtrot = {'width': 40, 'height': 40, 'borderRadius': null, 'alignItems': 'center', 'justifyContent': 'center'};
    mike = 18;
    kilo = golf[mike];
    kilo = verify.bind(entity)(kilo);
    kilo = kilo.radii;
    kilo = kilo.round;
    foxtrot['borderRadius'] = kilo;
    offset['trashContainer'] = foxtrot;
    foxtrot = {'width': 40, 'height': 40, 'borderRadius': null, 'alignItems': 'center', 'justifyContent': 'center'};
    kilo = golf[mike];
    kilo = verify.bind(entity)(kilo);
    kilo = kilo.radii;
    kilo = kilo.round;
    foxtrot['borderRadius'] = kilo;
    offset['sendContainer'] = foxtrot;
    foxtrot = {'flex': 1, 'height': 40, 'marginRight': 8, 'alignItems': 'flex-end'};
    offset['voiceChatContainer'] = foxtrot;
    foxtrot = {'height': 68, 'width': 40, 'borderRadius': null, 'display': 'flex', 'alignItems': 'center', 'flexDirection': 'column', 'elevation': 12, 'shadowColor': null, 'shadowOffset': null, 'shadowOpacity': 0.12, 'shadowRadius': 36};
    kilo = golf[mike];
    kilo = verify.bind(entity)(kilo);
    kilo = kilo.radii;
    kilo = kilo.round;
    foxtrot['borderRadius'] = kilo;
    kilo = golf[mike];
    kilo = verify.bind(entity)(kilo);
    kilo = kilo.colors;
    kilo = kilo.BLACK;
    foxtrot['shadowColor'] = kilo;
    kilo = {'width': 0, 'height': 12};
    foxtrot['shadowOffset'] = kilo;
    kilo = 19;
    kilo = golf[kilo];
    kilo = oscar.bind(entity)(kilo);
    kilo = kilo.DARK_0_LIGHT_1;
    foxtrot['borderWidth'] = kilo;
    kilo = 'solid';
    foxtrot['borderStyle'] = kilo;
    kilo = 'rgba(0, 0, 0, 0.08)';
    foxtrot['borderColor'] = kilo;
    offset['lockContainer'] = foxtrot;
    foxtrot = {'position': 'absolute', 'right': null, 'width': 40};
    foxtrot['right'] = backup;
    offset['lockParentContainer'] = foxtrot;
    foxtrot = {'height': 16, 'width': 16, 'marginTop': 8};
    backup = golf[mike];
    backup = verify.bind(entity)(backup);
    backup = backup.colors;
    backup = backup.ICON_SECONDARY;
    foxtrot['tintColor'] = backup;
    offset['chevon'] = foxtrot;
    offset = yankee.bind(romeo)(offset);
    var _closure1_slot21 = offset;
    mike = golf[mike];
    mike = verify.bind(entity)(mike);
    mike = mike.unsafe_rawColors;
    mike = mike.PLUM_13;
    var _closure1_slot22 = mike;
    verify = report.SENDING;
    mike = new Array(4);
    mike[0] = verify;
    verify = report.CANCELLING;
    mike[1] = verify;
    verify = report.LOCKING;
    mike[2] = verify;
    report = report.LOCKED;
    mike[3] = report;
    var _closure1_slot23 = mike;
    mike = {};
    report = 'function VoiceMessageOverlayTsx1(){const{useReducedMotion,currWaveHeight}=this.__closure;var _currWaveHeight$get,_currWaveHeight;return useReducedMotion?0.5:(_currWaveHeight$get=(_currWaveHeight=currWaveHeight)===null||_currWaveHeight===void 0?void 0:_currWaveHeight.get())!==null&&_currWaveHeight$get!==void 0?_currWaveHeight$get:0;}';
    mike['code'] = report;
    var _closure1_slot24 = mike;
    mike = {};
    report = 'function VoiceMessageOverlayTsx2(){const{derivedCurrWaveHeight,offsetThreshold}=this.__closure;return derivedCurrWaveHeight.get()*offsetThreshold;}';
    mike['code'] = report;
    var _closure1_slot25 = mike;
    mike = {};
    report = 'function VoiceMessageOverlayTsx3(){const{voiceMessageEllipseBgColor,radius,offset}=this.__closure;return{fill:voiceMessageEllipseBgColor.get(),ry:radius+offset.get(),rx:radius,cy:radius+offset.get(),cx:radius};}';
    mike['code'] = report;
    var _closure1_slot26 = mike;
    mike = {};
    report = "function VoiceMessageOverlayTsx4(){const{radius,height,offset}=this.__closure;return{position:'absolute',width:radius*2,height:height.get()+offset.get(),bottom:0};}";
    mike['code'] = report;
    var _closure1_slot27 = mike;
    report = options.memo;
    mike = function(argFoo) {
        entity = argFoo;
        kilo = entity.radius;
        var _closure2_slot0 = kilo;
        yankee = entity.opacity;
        backup = entity.height;
        var _closure2_slot1 = backup;
        foxtrot = entity.offsetThreshold;
        var _closure2_slot2 = foxtrot;
        result = entity.voiceMessageAnimationState;
        oscar = _closure1_slot0;
        verify = _closure1_slot2;
        entity = 20;
        entity = verify[entity];
        tango = undefined;
        offset = oscar.bind(tango)(entity);
        golf = offset.useStateFromStores;
        entity = _closure1_slot7;
        report = new Array(1);
        report[0] = entity;
        mike = function() {
            entity = _closure1_slot7;
            entity = entity.useReducedMotion;
            return entity;
        };
        entity = new Array(0);
        sizing = golf.bind(offset)(report, mike, entity);
        var _closure2_slot3 = sizing;
        mike = _closure1_slot10;
        entity = function(argFoo) {
            entity = argFoo;
            entity = entity.currWaveHeight;
            return entity;
        };
        romeo = mike.bind(tango)(entity);
        var _closure2_slot4 = romeo;
        entity = 11;
        mike = verify[entity];
        golf = oscar.bind(tango)(mike);
        report = golf.useDerivedValue;
        mike = function() { // Original name: c
            _fun00011: for(var _fun00012_ip = 0; ; ) switch(_fun00012_ip) {
 0:
                mike = _closure2_slot3;
                entity = 0.5;
                if(mike) { _fun00012_ip = 63; continue _fun00011 }
 20:
                zulu = _closure2_slot4;
                mike = null;
                report = mike == zulu;
                zulu = undefined;
                if(report) { _fun00012_ip = 48; continue _fun00011 }
 35:
                report = _closure2_slot4;
                tango = report.get;
                zulu = tango.bind(report)();
 48:
                tango = mike != zulu;
                mike = 0;
                if(!tango) { _fun00012_ip = 60; continue _fun00011 }
 57:
                mike = zulu;
 60:
                entity = mike;
 63:
                return entity;
            }
        };
        offset = {};
        offset['useReducedMotion'] = sizing;
        offset['currWaveHeight'] = romeo;
        mike['__closure'] = offset;
        offset = 2925868096827.0;
        mike['__workletHash'] = offset;
        offset = _closure1_slot24;
        mike['__initData'] = offset;
        output = report.bind(golf)(mike);
        var _closure2_slot5 = output;
        sizing = _closure1_slot34;
        mike = _closure1_slot1;
        report = 18;
        golf = verify[report];
        golf = mike.bind(tango)(golf);
        golf = golf.unsafe_rawColors;
        control = golf.BRAND_500;
        golf = verify[report];
        golf = mike.bind(tango)(golf);
        golf = golf.unsafe_rawColors;
        source = golf.RED_400;
        golf = verify[report];
        golf = mike.bind(tango)(golf);
        golf = golf.unsafe_rawColors;
        update = golf.BRAND_500;
        report = verify[report];
        report = mike.bind(tango)(report);
        report = report.unsafe_rawColors;
        echo = report.BRAND_500;
        sequence = undefined;
        vacuum = result;
        sizing = sequence[sizing](vacuum, control, source, update, echo, result);
        var _closure2_slot6 = sizing;
        report = verify[entity];
        offset = oscar.bind(tango)(report);
        golf = offset.useDerivedValue;
        report = function() { // Original name: _
            zulu = _closure2_slot5;
            mike = zulu.get;
            mike = mike.bind(zulu)();
            entity = _closure2_slot2;
            entity = mike * entity;
            return entity;
        };
        romeo = {};
        romeo['derivedCurrWaveHeight'] = output;
        romeo['offsetThreshold'] = foxtrot;
        report['__closure'] = romeo;
        romeo = 7278593580538.0;
        report['__workletHash'] = romeo;
        romeo = _closure1_slot25;
        report['__initData'] = romeo;
        foxtrot = golf.bind(offset)(report);
        var _closure2_slot7 = foxtrot;
        report = verify[entity];
        romeo = oscar.bind(tango)(report);
        offset = romeo.useAnimatedProps;
        golf = function() { // Original name: A
            entity = {};
            tango = _closure2_slot6;
            mike = tango.get;
            mike = mike.bind(tango)();
            entity['fill'] = mike;
            mike = _closure2_slot0;
            tango = _closure2_slot7;
            zulu = tango.get;
            zulu = zulu.bind(tango)();
            zulu = mike + zulu;
            entity['ry'] = zulu;
            entity['rx'] = mike;
            zulu = tango.get;
            zulu = zulu.bind(tango)();
            zulu = mike + zulu;
            entity['cy'] = zulu;
            entity['cx'] = mike;
            return entity;
        };
        report = {};
        report['voiceMessageEllipseBgColor'] = sizing;
        report['radius'] = kilo;
        report['offset'] = foxtrot;
        golf['__closure'] = report;
        report = 12489173275515.0;
        golf['__workletHash'] = report;
        report = _closure1_slot26;
        golf['__initData'] = report;
        report = 21;
        report = verify[report];
        report = oscar.bind(tango)(report);
        report = report.reactNativeSVGLegacyArchitecturePropsAdapter;
        romeo = offset.bind(romeo)(golf, tango, report);
        report = verify[entity];
        golf = oscar.bind(tango)(report);
        report = golf.useAnimatedStyle;
        zulu = function() { // Original name: S
            entity = {};
            mike = 'absolute';
            entity['position'] = mike;
            tango = _closure2_slot0;
            zulu = 2;
            zulu = zulu * tango;
            entity['width'] = zulu;
            tango = _closure2_slot1;
            zulu = tango.get;
            zulu = zulu.bind(tango)();
            tango = _closure2_slot7;
            mike = tango.get;
            mike = mike.bind(tango)();
            mike = zulu + mike;
            entity['height'] = mike;
            mike = 0;
            entity['bottom'] = mike;
            return entity;
        };
        offset = {};
        offset['radius'] = kilo;
        offset['height'] = backup;
        offset['offset'] = foxtrot;
        zulu['__closure'] = offset;
        offset = 16593476434034.0;
        zulu['__workletHash'] = offset;
        offset = _closure1_slot27;
        zulu['__initData'] = offset;
        report = report.bind(golf)(zulu);
        zulu = _closure1_slot20;
        offset = zulu.bind(tango)();
        zulu = _closure1_slot14;
        entity = verify[entity];
        entity = mike.bind(tango)(entity);
        mike = entity.View;
        entity = {};
        entity['style'] = report;
        golf = _closure1_slot14;
        report = 16;
        report = verify[report];
        report = oscar.bind(tango)(report);
        oscar = report.Svg;
        report = {};
        verify = _closure1_slot14;
        options = {};
        options['animatedProps'] = romeo;
        options['opacity'] = yankee;
        options = verify.bind(tango)(offset, options);
        report['children'] = options;
        report = golf.bind(tango)(oscar, report);
        entity['children'] = report;
        entity = zulu.bind(tango)(mike, entity);
        return entity;
    };
    mike = report.bind(options)(mike);
    var _closure1_slot28 = mike;
    report = {};
    verify = 'function VoiceMessageOverlayTsx5(){const{voiceMessageAnimationState,runOnJS,setVoiceMessageState}=this.__closure;if(voiceMessageAnimationState.get()==null)return;runOnJS(setVoiceMessageState)(voiceMessageAnimationState.get()[1]);return voiceMessageAnimationState.get();}';
    report['code'] = verify;
    var _closure1_slot29 = report;
    report = {};
    verify = 'function VoiceMessageOverlayTsx6(){const{initialAnimation,recordingAnimation,INITIAL_SHIFT}=this.__closure;const animationValue=Math.min(initialAnimation.get(),recordingAnimation.get());return{opacity:animationValue,marginBottom:-INITIAL_SHIFT*(1-animationValue)};}';
    report['code'] = verify;
    var _closure1_slot30 = report;
    verify = options.memo;
    report = function(argFoo) {
        _fun00013: for(var _fun00014_ip = 0; ; ) switch(_fun00014_ip) {
 0:
            mike = argFoo;
            verify = mike.initialAnimation;
            var _closure2_slot0 = verify;
            options = mike.recordingAnimation;
            var _closure2_slot1 = options;
            offset = mike.exiting;
            report = undefined;
            var _closure2_slot4 = report;
            tango = _closure1_slot10;
            zulu = function(argFoo) {
                entity = argFoo;
                entity = entity.voiceMessageAnimationState;
                return entity;
            };
            output = tango.bind(report)(zulu);
            var _closure2_slot2 = output;
            zulu = function(argFoo) {
                entity = argFoo;
                entity = entity.isUsingHoldGesture;
                return entity;
            };
            oscar = tango.bind(report)(zulu);
            yankee = _closure1_slot4;
            golf = yankee.useState;
            zulu = _closure1_slot11;
            zulu = zulu.SENDING;
            yankee = golf.bind(yankee)(zulu);
            golf = _closure1_slot3;
            zulu = 2;
            golf = golf.bind(report)(yankee, zulu);
            zulu = 0;
            yankee = golf[zulu];
            zulu = 1;
            sizing = golf[zulu];
            var _closure2_slot3 = sizing;
            zulu = function(argFoo) {
                entity = argFoo;
                mike = entity.savedVoiceMessageUploadData;
                entity = null;
                entity = entity != mike;
                return entity;
            };
            tango = tango.bind(report)(zulu);
            result = _closure1_slot0;
            backup = _closure1_slot2;
            golf = 11;
            zulu = backup[golf];
            foxtrot = result.bind(report)(zulu);
            romeo = foxtrot.useDerivedValue;
            zulu = function() { // Original name: c
                _fun00015: for(var _fun00016_ip = 0; ; ) switch(_fun00016_ip) {
 0:
                    zulu = _closure2_slot2;
                    mike = zulu.get;
                    zulu = mike.bind(zulu)();
                    mike = null;
                    if(!(mike == zulu)) { _fun00016_ip = 26; continue _fun00015 }
 22:
                    mike = undefined;
                    return mike;
 26:
                    zulu = _closure1_slot0;
                    tango = _closure1_slot2;
                    mike = 11;
                    mike = tango[mike];
                    tango = undefined;
                    report = zulu.bind(tango)(mike);
                    zulu = report.runOnJS;
                    mike = _closure2_slot3;
                    zulu = zulu.bind(report)(mike);
                    mike = _closure2_slot2;
                    entity = mike.get;
                    report = entity.bind(mike)();
                    entity = 1;
                    entity = report[entity];
                    entity = zulu.bind(tango)(entity);
                    entity = mike.get;
                    entity = entity.bind(mike)();
                    return entity;
                }
            };
            kilo = {};
            kilo['voiceMessageAnimationState'] = output;
            output = backup[golf];
            output = result.bind(report)(output);
            output = output.runOnJS;
            kilo['runOnJS'] = output;
            kilo['setVoiceMessageState'] = sizing;
            zulu['__closure'] = kilo;
            kilo = 8577984959763.0;
            zulu['__workletHash'] = kilo;
            kilo = _closure1_slot29;
            zulu['__initData'] = kilo;
            zulu = romeo.bind(foxtrot)(zulu);
            romeo = _closure1_slot4;
            zulu = romeo.useRef;
            romeo = zulu.bind(romeo)();
            var _closure2_slot5 = romeo;
            foxtrot = _closure1_slot1;
            zulu = 22;
            zulu = backup[zulu];
            zulu = foxtrot.bind(report)(zulu);
            zulu = zulu.bind(report)(romeo);
            if(offset) { _fun00014_ip = 782; continue _fun00013 }
 284:
            if(!tango) { _fun00014_ip = 354; continue _fun00013 }
 287:
            if(oscar) { _fun00014_ip = 354; continue _fun00013 }
 290:
            foxtrot = _closure1_slot0;
            backup = _closure1_slot2;
            oscar = 23;
            offset = backup[oscar];
            offset = foxtrot.bind(report)(offset);
            romeo = offset.intl;
            offset = romeo.string;
            oscar = backup[oscar];
            oscar = foxtrot.bind(report)(oscar);
            oscar = oscar.t;
            oscar = oscar.m+sRVF;
            oscar = offset.bind(romeo)(oscar);
            _closure2_slot4 = oscar;
            _fun00014_ip = 789; continue _fun00013;
 354:
            if(!tango) { _fun00014_ip = 374; continue _fun00013 }
 357:
            offset = _closure1_slot11;
            offset = offset.SENDING;
            if(!(yankee !== offset)) { _fun00014_ip = 718; continue _fun00013 }
 374:
            if(!tango) { _fun00014_ip = 394; continue _fun00013 }
 377:
            offset = _closure1_slot11;
            offset = offset.CANCELLING;
            if(!(yankee !== offset)) { _fun00014_ip = 654; continue _fun00013 }
 394:
            if(tango) { _fun00014_ip = 478; continue _fun00013 }
 397:
            offset = _closure1_slot11;
            offset = offset.SENDING;
            if(!(yankee === offset)) { _fun00014_ip = 478; continue _fun00013 }
 411:
            backup = _closure1_slot0;
            kilo = _closure1_slot2;
            offset = 23;
            romeo = kilo[offset];
            romeo = backup.bind(report)(romeo);
            foxtrot = romeo.intl;
            romeo = foxtrot.string;
            offset = kilo[offset];
            offset = backup.bind(report)(offset);
            offset = offset.t;
            offset = offset.cyL7DA;
            offset = romeo.bind(foxtrot)(offset);
            _closure2_slot4 = offset;
            oscar = offset;
            _fun00014_ip = 789; continue _fun00013;
 478:
            if(tango) { _fun00014_ip = 562; continue _fun00013 }
 481:
            offset = _closure1_slot11;
            offset = offset.CANCELLING;
            if(!(yankee === offset)) { _fun00014_ip = 562; continue _fun00013 }
 495:
            backup = _closure1_slot0;
            kilo = _closure1_slot2;
            offset = 23;
            romeo = kilo[offset];
            romeo = backup.bind(report)(romeo);
            foxtrot = romeo.intl;
            romeo = foxtrot.string;
            offset = kilo[offset];
            offset = backup.bind(report)(offset);
            offset = offset.t;
            offset = offset.a+A3+f;
            offset = romeo.bind(foxtrot)(offset);
            _closure2_slot4 = offset;
            oscar = offset;
            _fun00014_ip = 789; continue _fun00013;
 562:
            if(tango) { _fun00014_ip = 579; continue _fun00013 }
 565:
            offset = _closure1_slot11;
            offset = offset.LOCKING;
            tango = yankee !== offset;
 579:
            oscar = undefined;
            if(tango) { _fun00014_ip = 789; continue _fun00013 }
 587:
            romeo = _closure1_slot0;
            foxtrot = _closure1_slot2;
            tango = 23;
            offset = foxtrot[tango];
            offset = romeo.bind(report)(offset);
            yankee = offset.intl;
            offset = yankee.string;
            tango = foxtrot[tango];
            tango = romeo.bind(report)(tango);
            tango = tango.t;
            tango = tango.3qvtkp;
            tango = offset.bind(yankee)(tango);
            _closure2_slot4 = tango;
            oscar = tango;
            _fun00014_ip = 789; continue _fun00013;
 654:
            romeo = _closure1_slot0;
            foxtrot = _closure1_slot2;
            tango = 23;
            offset = foxtrot[tango];
            offset = romeo.bind(report)(offset);
            yankee = offset.intl;
            offset = yankee.string;
            tango = foxtrot[tango];
            tango = romeo.bind(report)(tango);
            tango = tango.t;
            tango = tango.sB81Bg;
            tango = offset.bind(yankee)(tango);
            _closure2_slot4 = tango;
            oscar = tango;
            _fun00014_ip = 789; continue _fun00013;
 718:
            romeo = _closure1_slot0;
            foxtrot = _closure1_slot2;
            tango = 23;
            offset = foxtrot[tango];
            offset = romeo.bind(report)(offset);
            yankee = offset.intl;
            offset = yankee.string;
            tango = foxtrot[tango];
            tango = romeo.bind(report)(tango);
            tango = tango.t;
            tango = tango.zPxm/f;
            tango = offset.bind(yankee)(tango);
            _closure2_slot4 = tango;
            oscar = tango;
            _fun00014_ip = 789; continue _fun00013;
 782:
            _closure2_slot4 = zulu;
            oscar = zulu;
 789:
            yankee = _closure1_slot4;
            offset = yankee.useEffect;
            tango = new Array(1);
            tango[0] = oscar;
            zulu = function() {
                mike = _closure2_slot5;
                entity = _closure2_slot4;
                mike['current'] = entity;
                entity = undefined;
                return entity;
            };
            zulu = offset.bind(yankee)(zulu, tango);
            tango = _closure1_slot0;
            zulu = _closure1_slot2;
            zulu = zulu[golf];
            tango = tango.bind(report)(zulu);
            zulu = tango.useAnimatedStyle;
            entity = function() { // Original name: p
                entity = global;
                tango = entity.Math;
                zulu = tango.min;
                report = _closure2_slot0;
                mike = report.get;
                mike = mike.bind(report)();
                report = _closure2_slot1;
                entity = report.get;
                entity = entity.bind(report)();
                zulu = zulu.bind(tango)(mike, entity);
                entity = {};
                entity['opacity'] = zulu;
                mike = 1;
                zulu = mike - zulu;
                mike = -8;
                mike = mike * zulu;
                entity['marginBottom'] = mike;
                return entity;
            };
            golf = {};
            golf['initialAnimation'] = verify;
            golf['recordingAnimation'] = options;
            options = 8;
            golf['INITIAL_SHIFT'] = options;
            entity['__closure'] = golf;
            golf = 60645179998.0;
            entity['__workletHash'] = golf;
            golf = _closure1_slot30;
            entity['__initData'] = golf;
            golf = zulu.bind(tango)(entity);
            entity = null;
            zulu = entity == oscar;
            if(zulu) { _fun00014_ip = 953; continue _fun00013 }
 915:
            tango = _closure1_slot14;
            zulu = _closure1_slot19;
            mike = {'style': null, 'variant': 'text-sm/medium', 'color': 'always-white'};
            mike['style'] = golf;
            mike['children'] = oscar;
            entity = tango.bind(report)(zulu, mike);
 953:
            return entity;
        }
    };
    report = verify.bind(options)(report);
    var _closure1_slot31 = report;
    report = {};
    verify = 'function VoiceMessageOverlayTsx7(){const{voiceMessageAnimationState,withTiming,Easing}=this.__closure;const currValue=voiceMessageAnimationState.get()[1];return withTiming(currValue,{easing:Easing.linear,duration:150});}';
    report['code'] = verify;
    var _closure1_slot32 = report;
    report = {};
    verify = 'function VoiceMessageOverlayTsx8(){const{voiceMessageAnimationState,sendingColor,lockingColor,lockedColor,cancelingColor,interpolateColor,timing,VOICE_MESSAGE_ANIMATION_STATES}=this.__closure;const[prevValue,currValue]=voiceMessageAnimationState.get();const distance=prevValue+currValue;const colors=distance===2?[sendingColor,sendingColor,lockingColor,lockedColor]:[sendingColor,cancelingColor,lockingColor,lockedColor];return interpolateColor(timing.get(),VOICE_MESSAGE_ANIMATION_STATES,colors);}';
    report['code'] = verify;
    var _closure1_slot33 = report;
    report = function(argFoo, argBar, argBaz, argCorge, argGrault) { // Original name: useDerivedColors
        kilo = argFoo;
        backup = argBar;
        yankee = argBaz;
        foxtrot = argCorge;
        romeo = argGrault;
        var _closure2_slot0 = kilo;
        var _closure2_slot1 = backup;
        var _closure2_slot2 = yankee;
        var _closure2_slot3 = foxtrot;
        var _closure2_slot4 = romeo;
        verify = _closure1_slot0;
        offset = _closure1_slot2;
        golf = 11;
        mike = offset[golf];
        options = undefined;
        report = verify.bind(options)(mike);
        zulu = report.useDerivedValue;
        mike = function() { // Original name: u
            mike = _closure2_slot0;
            entity = mike.get;
            mike = entity.bind(mike)();
            entity = 1;
            tango = mike[entity];
            golf = _closure1_slot0;
            options = _closure1_slot2;
            entity = 24;
            entity = options[entity];
            oscar = undefined;
            zulu = golf.bind(oscar)(entity);
            mike = zulu.withTiming;
            entity = {};
            report = 11;
            report = options[report];
            report = golf.bind(oscar)(report);
            report = report.Easing;
            report = report.linear;
            entity['easing'] = report;
            report = 150;
            entity['duration'] = report;
            entity = mike.bind(zulu)(tango, entity);
            return entity;
        };
        oscar = {};
        oscar['voiceMessageAnimationState'] = kilo;
        sizing = 24;
        sizing = offset[sizing];
        sizing = verify.bind(options)(sizing);
        sizing = sizing.withTiming;
        oscar['withTiming'] = sizing;
        sizing = offset[golf];
        sizing = verify.bind(options)(sizing);
        sizing = sizing.Easing;
        oscar['Easing'] = sizing;
        mike['__closure'] = oscar;
        oscar = 7432526131204.0;
        mike['__workletHash'] = oscar;
        oscar = _closure1_slot32;
        mike['__initData'] = oscar;
        oscar = zulu.bind(report)(mike);
        var _closure2_slot5 = oscar;
        mike = offset[golf];
        zulu = verify.bind(options)(mike);
        mike = zulu.useDerivedValue;
        entity = function() { // Original name: _
            _fun00017: for(var _fun00018_ip = 0; ; ) switch(_fun00018_ip) {
 0:
                zulu = _closure2_slot0;
                entity = zulu.get;
                report = entity.bind(zulu)();
                zulu = _closure1_slot3;
                oscar = undefined;
                tango = 2;
                golf = zulu.bind(oscar)(report, tango);
                zulu = 0;
                report = golf[zulu];
                zulu = 1;
                zulu = golf[zulu];
                zulu = report + zulu;
                if(!(zulu !== tango)) { _fun00018_ip = 93; continue _fun00017 }
 55:
                zulu = _closure2_slot1;
                report = new Array(4);
                report[0] = zulu;
                zulu = _closure2_slot2;
                report[1] = zulu;
                zulu = _closure2_slot3;
                report[2] = zulu;
                zulu = _closure2_slot4;
                report[3] = zulu;
                _fun00018_ip = 128; continue _fun00017;
 93:
                tango = _closure2_slot1;
                zulu = new Array(4);
                zulu[0] = tango;
                zulu[1] = tango;
                tango = _closure2_slot3;
                zulu[2] = tango;
                tango = _closure2_slot4;
                zulu[3] = tango;
                report = zulu;
 128:
                tango = _closure1_slot0;
                golf = _closure1_slot2;
                zulu = 11;
                zulu = golf[zulu];
                tango = tango.bind(oscar)(zulu);
                zulu = tango.interpolateColor;
                oscar = _closure2_slot5;
                mike = oscar.get;
                mike = mike.bind(oscar)();
                entity = _closure1_slot23;
                entity = zulu.bind(tango)(mike, entity, report);
                return entity;
            }
        };
        report = {};
        report['voiceMessageAnimationState'] = kilo;
        report['sendingColor'] = backup;
        report['lockingColor'] = foxtrot;
        report['lockedColor'] = romeo;
        report['cancelingColor'] = yankee;
        golf = offset[golf];
        golf = verify.bind(options)(golf);
        golf = golf.interpolateColor;
        report['interpolateColor'] = golf;
        report['timing'] = oscar;
        oscar = _closure1_slot23;
        report['VOICE_MESSAGE_ANIMATION_STATES'] = oscar;
        entity['__closure'] = report;
        report = 8474040050475.0;
        entity['__workletHash'] = report;
        tango = _closure1_slot33;
        entity['__initData'] = tango;
        entity = mike.bind(zulu)(entity);
        return entity;
    };
    var _closure1_slot34 = report;
    report = {};
    verify = 'function VoiceMessageOverlayTsx9(){const{voiceMessageAnimationState,withTiming,Easing}=this.__closure;const currValue=voiceMessageAnimationState.get()[1];return withTiming(currValue,{easing:Easing.linear,duration:150});}';
    report['code'] = verify;
    var _closure1_slot35 = report;
    report = {};
    verify = 'function VoiceMessageOverlayTsx10(){const{voiceMessageAnimationState,interpolate,timing,VOICE_MESSAGE_ANIMATION_STATES}=this.__closure;const[prevValue,currValue]=voiceMessageAnimationState.get();const distance=prevValue+currValue;const opacity=distance===2?[1,1,1,0]:[1,0,1,0];return interpolate(timing.get(),VOICE_MESSAGE_ANIMATION_STATES,opacity);}';
    report['code'] = verify;
    var _closure1_slot36 = report;
    report = {};
    verify = 'function VoiceMessageOverlayTsx11(){const{interpolate,timing,VOICE_MESSAGE_ANIMATION_STATES}=this.__closure;return{height:interpolate(timing.get(),VOICE_MESSAGE_ANIMATION_STATES,[68,68,104,104])};}';
    report['code'] = verify;
    var _closure1_slot37 = report;
    report = {};
    verify = 'function VoiceMessageOverlayTsx12(){const{interpolate,timing,VOICE_MESSAGE_ANIMATION_STATES,lockContainerOpacity,lockedBackgroundColor}=this.__closure;return{width:interpolate(timing.get(),VOICE_MESSAGE_ANIMATION_STATES,[40,40,56,56]),height:interpolate(timing.get(),VOICE_MESSAGE_ANIMATION_STATES,[68,68,56,56]),opacity:lockContainerOpacity.get(),backgroundColor:lockedBackgroundColor.get(),marginHorizontal:interpolate(timing.get(),VOICE_MESSAGE_ANIMATION_STATES,[0,0,-8,-8]),marginBottom:interpolate(timing.get(),VOICE_MESSAGE_ANIMATION_STATES,[0,0,36,36])};}';
    report['code'] = verify;
    var _closure1_slot38 = report;
    report = {};
    verify = 'function VoiceMessageOverlayTsx13(){const{interpolate,timing,VOICE_MESSAGE_ANIMATION_STATES,lockIconColor}=this.__closure;return{width:interpolate(timing.get(),VOICE_MESSAGE_ANIMATION_STATES,[24,24,32,32]),height:interpolate(timing.get(),VOICE_MESSAGE_ANIMATION_STATES,[24,24,32,32]),marginTop:interpolate(timing.get(),VOICE_MESSAGE_ANIMATION_STATES,[12,12,10,10]),tintColor:lockIconColor.get()};}';
    report['code'] = verify;
    var _closure1_slot39 = report;
    report = {};
    verify = 'function VoiceMessageOverlayTsx14(){const{interpolate,timing,VOICE_MESSAGE_ANIMATION_STATES}=this.__closure;return{opacity:interpolate(timing.get(),VOICE_MESSAGE_ANIMATION_STATES,[1,1,0,0])};}';
    report['code'] = verify;
    var _closure1_slot40 = report;
    report = {};
    verify = 'function VoiceMessageOverlayTsx15(){const{voiceMessageAnimationState,VoiceMessageAnimationState}=this.__closure;return voiceMessageAnimationState.get()[1]===VoiceMessageAnimationState.LOCKED||voiceMessageAnimationState.get()[1]===VoiceMessageAnimationState.LOCKING;}';
    report['code'] = verify;
    var _closure1_slot41 = report;
    report = {};
    verify = 'function VoiceMessageOverlayTsx16(result,previous){const{runOnJS,setLocked}=this.__closure;if(result!==previous){runOnJS(setLocked)(result);}}';
    report['code'] = verify;
    var _closure1_slot42 = report;
    report = {};
    verify = 'function VoiceMessageOverlayTsx17(){const{initialAnimation,keyboardHeight,safeAreaBottom,INPUT_HEIGHT,INITIAL_SHIFT}=this.__closure;return{opacity:initialAnimation.get(),bottom:keyboardHeight+safeAreaBottom+INPUT_HEIGHT+(32-INITIAL_SHIFT)+INITIAL_SHIFT*initialAnimation.get()};}';
    report['code'] = verify;
    var _closure1_slot43 = report;
    report = {};
    verify = 'function VoiceMessageOverlayTsx18(){const{INITIAL_SHIFT,initialAnimation,trashContainerBgColor}=this.__closure;return{marginLeft:INITIAL_SHIFT*2*(1-initialAnimation.get()),marginRight:8-INITIAL_SHIFT*2*(1-initialAnimation.get()),backgroundColor:trashContainerBgColor.get()};}';
    report['code'] = verify;
    var _closure1_slot44 = report;
    report = {};
    verify = 'function VoiceMessageOverlayTsx19(){const{trashIconColor}=this.__closure;return{tintColor:trashIconColor.get()};}';
    report['code'] = verify;
    var _closure1_slot45 = report;
    report = {};
    verify = 'function VoiceMessageOverlayTsx20(){const{recordingAnimation,sendContainerBgColor}=this.__closure;return{opacity:0.5+0.5*recordingAnimation.get(),backgroundColor:sendContainerBgColor.get()};}';
    report['code'] = verify;
    var _closure1_slot46 = report;
    report = {};
    verify = 'function VoiceMessageOverlayTsx21(){const{sendIconColor}=this.__closure;return{tintColor:sendIconColor.get()};}';
    report['code'] = verify;
    var _closure1_slot47 = report;
    report = {};
    verify = 'function VoiceMessageOverlayTsx22(){const{initialAnimation}=this.__closure;return{opacity:initialAnimation.get()};}';
    report['code'] = verify;
    var _closure1_slot48 = report;
    report = {};
    verify = 'function VoiceMessageOverlayTsx23(){const{exiting,INITIAL_SHIFT,initialAnimation,keyboardHeight}=this.__closure;const shift=exiting?INITIAL_SHIFT*3:INITIAL_SHIFT*1.5;return{opacity:initialAnimation.get(),bottom:keyboardHeight-shift*(1-initialAnimation.get())};}';
    report['code'] = verify;
    var _closure1_slot49 = report;
    report = {};
    verify = 'function VoiceMessageOverlayTsx24(){const{safeAreaBottom,INPUT_HEIGHT,recordingAnimation}=this.__closure;return safeAreaBottom+INPUT_HEIGHT*(1.6+0.3*recordingAnimation.get());}';
    report['code'] = verify;
    var _closure1_slot50 = report;
    report = {};
    verify = 'function VoiceMessageOverlayTsx25(){const{safeAreaBottom,INPUT_HEIGHT}=this.__closure;return safeAreaBottom+INPUT_HEIGHT*1.6;}';
    report['code'] = verify;
    var _closure1_slot51 = report;
    verify = options.memo;
    report = function(argFoo) {
        _fun00019: for(var _fun00020_ip = 0; ; ) switch(_fun00020_ip) {
 0:
            entity = argFoo;
            echo = entity.channelId;
            var _closure2_slot0 = echo;
            verify = entity.voiceMessageAnimationState;
            output = entity.exiting;
            var _closure2_slot1 = output;
            entity = _closure1_slot21;
            tango = undefined;
            status = entity.bind(tango)();
            context = _closure1_slot1;
            lima = _closure1_slot2;
            entity = 31;
            entity = lima[entity];
            entity = context.bind(tango)(entity);
            entity = entity.bind(tango)();
            romeo = entity.keyboardHeight;
            var _closure2_slot2 = romeo;
            yankee = entity.safeAreaBottom;
            var _closure2_slot3 = yankee;
            mike = _closure1_slot10;
            entity = function(argFoo) {
                entity = argFoo;
                mike = entity.startTimeMillis;
                entity = null;
                entity = entity != mike;
                return entity;
            };
            record = mike.bind(tango)(entity);
            entity = function(argFoo, argBar) { // Original name: useEntryAnimationValues
                golf = argFoo;
                offset = argBar;
                var _closure3_slot0 = golf;
                var _closure3_slot1 = offset;
                options = _closure1_slot0;
                verify = _closure1_slot2;
                mike = 11;
                zulu = verify[mike];
                report = undefined;
                yankee = options.bind(report)(zulu);
                zulu = yankee.useSharedValue;
                oscar = 0;
                zulu = zulu.bind(yankee)(oscar);
                var _closure3_slot2 = zulu;
                foxtrot = _closure1_slot4;
                romeo = foxtrot.useRef;
                yankee = global;
                backup = yankee.performance;
                yankee = backup.now;
                yankee = yankee.bind(backup)();
                yankee = romeo.bind(foxtrot)(yankee);
                var _closure3_slot3 = yankee;
                backup = _closure1_slot4;
                foxtrot = backup.useEffect;
                romeo = new Array(1);
                romeo[0] = zulu;
                yankee = function() {
                    tango = _closure3_slot2;
                    zulu = tango.set;
                    offset = _closure1_slot0;
                    yankee = _closure1_slot2;
                    mike = 11;
                    report = yankee[mike];
                    entity = undefined;
                    golf = offset.bind(entity)(report);
                    oscar = golf.withDelay;
                    report = 24;
                    report = yankee[report];
                    verify = offset.bind(entity)(report);
                    options = verify.withTiming;
                    report = {};
                    mike = yankee[mike];
                    mike = offset.bind(entity)(mike);
                    mike = mike.Easing;
                    mike = mike.quad;
                    report['easing'] = mike;
                    mike = 250;
                    report['duration'] = mike;
                    mike = 1;
                    report = options.bind(verify)(mike, report);
                    mike = 500;
                    mike = oscar.bind(golf)(mike, report);
                    mike = zulu.bind(tango)(mike);
                    return entity;
                };
                yankee = foxtrot.bind(backup)(yankee, romeo);
                foxtrot = _closure1_slot4;
                romeo = foxtrot.useEffect;
                yankee = new Array(2);
                yankee[0] = zulu;
                yankee[1] = offset;
                offset = function() {
                    _fun00021: for(var _fun00022_ip = 0; ; ) switch(_fun00022_ip) {
 0:
                        mike = _closure3_slot1;
                        if(!mike) { _fun00022_ip = 100; continue _fun00021 }
 10:
                        zulu = _closure3_slot2;
                        mike = zulu.set;
                        options = _closure1_slot0;
                        verify = _closure1_slot2;
                        entity = 24;
                        entity = verify[entity];
                        golf = undefined;
                        oscar = options.bind(golf)(entity);
                        report = oscar.withTiming;
                        tango = {};
                        entity = 11;
                        entity = verify[entity];
                        entity = options.bind(golf)(entity);
                        entity = entity.Easing;
                        entity = entity.quad;
                        tango['easing'] = entity;
                        entity = 100;
                        tango['duration'] = entity;
                        entity = 0;
                        entity = report.bind(oscar)(entity, tango);
                        entity = mike.bind(zulu)(entity);
 100:
                        entity = undefined;
                        return entity;
                    }
                };
                offset = romeo.bind(foxtrot)(offset, yankee);
                mike = verify[mike];
                report = options.bind(report)(mike);
                mike = report.useSharedValue;
                mike = mike.bind(report)(oscar);
                var _closure3_slot4 = mike;
                oscar = _closure1_slot4;
                report = oscar.useEffect;
                tango = new Array(3);
                tango[0] = zulu;
                tango[1] = mike;
                tango[2] = golf;
                entity = function() {
                    _fun00023: for(var _fun00024_ip = 0; ; ) switch(_fun00024_ip) {
 0:
                        entity = _closure3_slot0;
                        if(!entity) { _fun00024_ip = 221; continue _fun00023 }
 13:
                        golf = _closure3_slot4;
                        report = golf.set;
                        romeo = _closure1_slot0;
                        oscar = _closure1_slot2;
                        entity = 24;
                        zulu = oscar[entity];
                        verify = undefined;
                        yankee = romeo.bind(verify)(zulu);
                        options = yankee.withTiming;
                        zulu = {};
                        offset = 11;
                        oscar = oscar[offset];
                        oscar = romeo.bind(verify)(oscar);
                        oscar = oscar.Easing;
                        oscar = oscar.quad;
                        zulu['easing'] = oscar;
                        oscar = 200;
                        zulu['duration'] = oscar;
                        oscar = 1;
                        zulu = options.bind(yankee)(oscar, zulu);
                        zulu = report.bind(golf)(zulu);
                        zulu = global;
                        report = zulu.performance;
                        zulu = report.now;
                        report = zulu.bind(report)();
                        zulu = _closure3_slot3;
                        zulu = zulu.current;
                        report = report - zulu;
                        zulu = 500;
                        if(!(!(report >= zulu))) { _fun00024_ip = 221; continue _fun00023 }
 144:
                        zulu = _closure3_slot2;
                        mike = zulu.set;
                        options = _closure1_slot0;
                        golf = _closure1_slot2;
                        entity = golf[entity];
                        report = options.bind(verify)(entity);
                        tango = report.withTiming;
                        entity = {};
                        golf = golf[offset];
                        golf = options.bind(verify)(golf);
                        golf = golf.Easing;
                        golf = golf.quad;
                        entity['easing'] = golf;
                        golf = 250;
                        entity['duration'] = golf;
                        entity = tango.bind(report)(oscar, entity);
                        entity = mike.bind(zulu)(entity);
 221:
                        entity = undefined;
                        return entity;
                    }
                };
                entity = report.bind(oscar)(entity, tango);
                entity = {};
                entity['initialAnimation'] = zulu;
                entity['recordingAnimation'] = mike;
                return entity;
            };
            entity = entity.bind(tango)(record, output);
            offset = entity.initialAnimation;
            var _closure2_slot4 = offset;
            result = entity.recordingAnimation;
            var _closure2_slot5 = result;
            report = _closure1_slot4;
            zulu = report.useEffect;
            mike = new Array(1);
            mike[0] = echo;
            entity = function() {
                report = _closure1_slot6;
                tango = report.addEventListener;
                zulu = 'change';
                mike = function(argFoo) {
                    _fun00025: for(var _fun00026_ip = 0; ; ) switch(_fun00026_ip) {
 0:
                        zulu = argFoo;
                        entity = 'inactive';
                        entity = entity !== zulu;
                        if(!entity) { _fun00026_ip = 22; continue _fun00025 }
 14:
                        mike = 'background';
                        entity = mike !== zulu;
 22:
                        if(entity) { _fun00026_ip = 124; continue _fun00025 }
 25:
                        options = _closure1_slot0;
                        verify = _closure1_slot2;
                        mike = 32;
                        mike = verify[mike];
                        golf = undefined;
                        mike = options.bind(golf)(mike);
                        report = mike.ComponentDispatch;
                        tango = report.dispatchKeyed;
                        entity = _closure1_slot12;
                        zulu = entity.VOICE_MESSAGE_SEND;
                        mike = _closure2_slot0;
                        entity = {};
                        oscar = true;
                        entity['isCancelling'] = oscar;
                        oscar = 33;
                        oscar = verify[oscar];
                        oscar = options.bind(golf)(oscar);
                        oscar = oscar.VoiceMessageRecordingResult;
                        oscar = oscar.CANCELLED_ON_BACKGROUND;
                        entity['cancelReason'] = oscar;
                        entity = tango.bind(report)(zulu, mike, entity);
 124:
                        entity = undefined;
                        return entity;
                    }
                };
                mike = tango.bind(report)(zulu, mike);
                var _closure3_slot0 = mike;
                entity = function() {
                    mike = _closure3_slot0;
                    entity = mike.remove;
                    entity = entity.bind(mike)();
                    entity = undefined;
                    return entity;
                };
                return entity;
            };
            entity = zulu.bind(report)(entity, mike);
            sierra = _closure1_slot0;
            entity = 20;
            entity = lima[entity];
            report = sierra.bind(tango)(entity);
            zulu = report.useStateFromStores;
            entity = _closure1_slot9;
            mike = new Array(1);
            mike[0] = entity;
            entity = function() {
                mike = _closure1_slot9;
                entity = mike.getWidth;
                entity = entity.bind(mike)();
                return entity;
            };
            mike = zulu.bind(report)(mike, entity);
            entity = 5;
            mike = entity * mike;
            entity = 2;
            source = mike / entity;
            options = _closure1_slot34;
            entity = 18;
            mike = lima[entity];
            mike = context.bind(tango)(mike);
            mike = mike.unsafe_rawColors;
            variable43 = mike.BRAND_600;
            mike = lima[entity];
            mike = context.bind(tango)(mike);
            mike = mike.unsafe_rawColors;
            variable42 = mike.RED_530;
            mike = lima[entity];
            mike = context.bind(tango)(mike);
            mike = mike.unsafe_rawColors;
            variable41 = mike.BRAND_600;
            mike = lima[entity];
            mike = context.bind(tango)(mike);
            mike = mike.unsafe_rawColors;
            variable40 = mike.BRAND_600;
            variable45 = undefined;
            variable44 = verify;
            variable38 = variable45[options](variable44, variable43, variable42, variable41, variable40, variable39);
            options = _closure1_slot34;
            mike = lima[entity];
            mike = context.bind(tango)(mike);
            mike = mike.unsafe_rawColors;
            variable43 = mike.BRAND_600;
            mike = lima[entity];
            mike = context.bind(tango)(mike);
            mike = mike.unsafe_rawColors;
            variable42 = mike.WHITE_500;
            mike = lima[entity];
            mike = context.bind(tango)(mike);
            mike = mike.unsafe_rawColors;
            variable41 = mike.BRAND_600;
            mike = lima[entity];
            mike = context.bind(tango)(mike);
            mike = mike.unsafe_rawColors;
            variable40 = mike.BRAND_600;
            variable45 = undefined;
            variable44 = verify;
            foxtrot = variable45[options](variable44, variable43, variable42, variable41, variable40, variable39);
            var _closure2_slot6 = foxtrot;
            update = 11;
            mike = lima[update];
            report = sierra.bind(tango)(mike);
            zulu = report.useAnimatedStyle;
            mike = function() { // Original name: w
                entity = {};
                oscar = _closure2_slot4;
                zulu = oscar.get;
                zulu = zulu.bind(oscar)();
                tango = 1;
                zulu = tango - zulu;
                report = 16;
                zulu = report * zulu;
                entity['marginLeft'] = zulu;
                zulu = oscar.get;
                zulu = zulu.bind(oscar)();
                zulu = tango - zulu;
                tango = 8;
                zulu = report * zulu;
                zulu = tango - zulu;
                entity['marginRight'] = zulu;
                zulu = _closure2_slot6;
                mike = zulu.get;
                mike = mike.bind(zulu)();
                entity['backgroundColor'] = mike;
                return entity;
            };
            options = {};
            golf = 8;
            options['INITIAL_SHIFT'] = golf;
            options['initialAnimation'] = offset;
            options['trashContainerBgColor'] = foxtrot;
            mike['__closure'] = options;
            options = 16442762939311.0;
            mike['__workletHash'] = options;
            options = _closure1_slot44;
            mike['__initData'] = options;
            config = zulu.bind(report)(mike);
            foxtrot = _closure1_slot34;
            mike = lima[entity];
            mike = context.bind(tango)(mike);
            mike = mike.unsafe_rawColors;
            variable43 = mike.WHITE_500;
            mike = lima[entity];
            mike = context.bind(tango)(mike);
            mike = mike.unsafe_rawColors;
            variable42 = mike.RED_400;
            mike = lima[entity];
            mike = context.bind(tango)(mike);
            mike = mike.unsafe_rawColors;
            variable41 = mike.WHITE_500;
            mike = lima[entity];
            mike = context.bind(tango)(mike);
            mike = mike.unsafe_rawColors;
            variable40 = mike.WHITE_500;
            variable45 = undefined;
            variable44 = verify;
            foxtrot = variable45[foxtrot](variable44, variable43, variable42, variable41, variable40, variable39);
            var _closure2_slot7 = foxtrot;
            mike = lima[update];
            report = sierra.bind(tango)(mike);
            zulu = report.useAnimatedStyle;
            mike = function() { // Original name: k
                entity = {};
                zulu = _closure2_slot7;
                mike = zulu.get;
                mike = mike.bind(zulu)();
                entity['tintColor'] = mike;
                return entity;
            };
            options = {};
            options['trashIconColor'] = foxtrot;
            mike['__closure'] = options;
            options = 4758994609248.0;
            mike['__workletHash'] = options;
            options = _closure1_slot45;
            mike['__initData'] = options;
            papa = zulu.bind(report)(mike);
            foxtrot = _closure1_slot34;
            mike = lima[entity];
            mike = context.bind(tango)(mike);
            mike = mike.unsafe_rawColors;
            variable43 = mike.WHITE_500;
            mike = lima[entity];
            mike = context.bind(tango)(mike);
            mike = mike.unsafe_rawColors;
            variable42 = mike.RED_500;
            mike = lima[entity];
            mike = context.bind(tango)(mike);
            mike = mike.unsafe_rawColors;
            variable41 = mike.BRAND_600;
            mike = lima[entity];
            mike = context.bind(tango)(mike);
            mike = mike.unsafe_rawColors;
            variable40 = mike.WHITE_500;
            variable45 = undefined;
            variable44 = verify;
            foxtrot = variable45[foxtrot](variable44, variable43, variable42, variable41, variable40, variable39);
            var _closure2_slot8 = foxtrot;
            mike = lima[update];
            report = sierra.bind(tango)(mike);
            zulu = report.useAnimatedStyle;
            mike = function() { // Original name: D
                entity = {};
                tango = _closure2_slot5;
                zulu = tango.get;
                zulu = zulu.bind(tango)();
                tango = 0.5;
                zulu = tango * zulu;
                zulu = tango + zulu;
                entity['opacity'] = zulu;
                zulu = _closure2_slot8;
                mike = zulu.get;
                mike = mike.bind(zulu)();
                entity['backgroundColor'] = mike;
                return entity;
            };
            options = {};
            options['recordingAnimation'] = result;
            options['sendContainerBgColor'] = foxtrot;
            mike['__closure'] = options;
            options = 2463646995928.0;
            mike['__workletHash'] = options;
            options = _closure1_slot46;
            mike['__initData'] = options;
            whiskey = zulu.bind(report)(mike);
            report = _closure1_slot34;
            zulu = _closure1_slot22;
            mike = lima[entity];
            mike = context.bind(tango)(mike);
            mike = mike.unsafe_rawColors;
            variable42 = mike.WHITE_500;
            entity = lima[entity];
            entity = context.bind(tango)(entity);
            entity = entity.unsafe_rawColors;
            variable41 = entity.WHITE_500;
            variable45 = undefined;
            variable44 = verify;
            variable43 = zulu;
            variable40 = zulu;
            options = variable45[report](variable44, variable43, variable42, variable41, variable40, variable39);
            var _closure2_slot9 = options;
            entity = lima[update];
            zulu = sierra.bind(tango)(entity);
            mike = zulu.useAnimatedStyle;
            entity = function() { // Original name: x
                entity = {};
                zulu = _closure2_slot9;
                mike = zulu.get;
                mike = mike.bind(zulu)();
                entity['tintColor'] = mike;
                return entity;
            };
            report = {};
            report['sendIconColor'] = options;
            entity['__closure'] = report;
            report = 13732877930795.0;
            entity['__workletHash'] = report;
            report = _closure1_slot47;
            entity['__initData'] = report;
            target = mike.bind(zulu)(entity);
            entity = lima[update];
            zulu = sierra.bind(tango)(entity);
            mike = zulu.useAnimatedStyle;
            entity = function() { // Original name: b
                entity = {};
                zulu = _closure2_slot4;
                mike = zulu.get;
                mike = mike.bind(zulu)();
                entity['opacity'] = mike;
                return entity;
            };
            report = {};
            report['initialAnimation'] = offset;
            entity['__closure'] = report;
            report = 11009128299499.0;
            entity['__workletHash'] = report;
            report = _closure1_slot48;
            entity['__initData'] = report;
            kilo = mike.bind(zulu)(entity);
            entity = lima[update];
            zulu = sierra.bind(tango)(entity);
            mike = zulu.useAnimatedStyle;
            entity = function() { // Original name: L
                _fun00027: for(var _fun00028_ip = 0; ; ) switch(_fun00028_ip) {
 0:
                    entity = _closure2_slot1;
                    tango = 12;
                    if(!entity) { _fun00028_ip = 16; continue _fun00027 }
 13:
                    tango = 24;
 16:
                    entity = {};
                    report = _closure2_slot4;
                    zulu = report.get;
                    zulu = zulu.bind(report)();
                    entity['opacity'] = zulu;
                    zulu = _closure2_slot2;
                    mike = report.get;
                    report = mike.bind(report)();
                    mike = 1;
                    mike = mike - report;
                    mike = tango * mike;
                    mike = zulu - mike;
                    entity['bottom'] = mike;
                    return entity;
                }
            };
            report = {};
            report['exiting'] = output;
            report['INITIAL_SHIFT'] = golf;
            report['initialAnimation'] = offset;
            report['keyboardHeight'] = romeo;
            entity['__closure'] = report;
            report = 4588671012938.0;
            entity['__workletHash'] = report;
            report = _closure1_slot49;
            entity['__initData'] = report;
            foxtrot = mike.bind(zulu)(entity);
            entity = 34;
            entity = lima[entity];
            zulu = sierra.bind(tango)(entity);
            mike = zulu.useWakeLock;
            entity = 'VoiceMessageOverlay';
            entity = mike.bind(zulu)(entity);
            entity = lima[update];
            zulu = sierra.bind(tango)(entity);
            mike = zulu.useDerivedValue;
            entity = function() { // Original name: ae
                mike = _closure2_slot3;
                zulu = _closure2_slot5;
                entity = zulu.get;
                zulu = entity.bind(zulu)();
                entity = 0.3;
                tango = entity * zulu;
                zulu = 56;
                entity = 1.6;
                entity = entity + tango;
                entity = zulu * entity;
                entity = mike + entity;
                return entity;
            };
            report = {};
            report['safeAreaBottom'] = yankee;
            golf = 56;
            report['INPUT_HEIGHT'] = golf;
            report['recordingAnimation'] = result;
            entity['__closure'] = report;
            report = 3973784432717.0;
            entity['__workletHash'] = report;
            report = _closure1_slot50;
            entity['__initData'] = report;
            backup = mike.bind(zulu)(entity);
            entity = lima[update];
            zulu = sierra.bind(tango)(entity);
            mike = zulu.useDerivedValue;
            entity = function() { // Original name: re
                mike = _closure2_slot3;
                entity = 89.60000000000001;
                entity = mike + entity;
                return entity;
            };
            report = {};
            report['safeAreaBottom'] = yankee;
            report['INPUT_HEIGHT'] = golf;
            entity['__closure'] = report;
            report = 12973103584340.0;
            entity['__workletHash'] = report;
            report = _closure1_slot51;
            entity['__initData'] = report;
            control = mike.bind(zulu)(entity);
            zulu = _closure1_slot15;
            mike = _closure1_slot16;
            entity = {};
            report = lima[update];
            report = context.bind(tango)(report);
            golf = report.View;
            report = {};
            sizing = status.container;
            options = new Array(2);
            options[0] = sizing;
            options[1] = foxtrot;
            report['style'] = options;
            options = 'none';
            report['pointerEvents'] = options;
            foxtrot = _closure1_slot14;
            sizing = _closure1_slot28;
            options = {'height': null, 'offsetThreshold': 60, 'opacity': 0.6};
            options['height'] = backup;
            options['radius'] = source;
            options['voiceMessageAnimationState'] = verify;
            foxtrot = foxtrot.bind(tango)(sizing, options);
            options = new Array(2);
            options[0] = foxtrot;
            backup = _closure1_slot14;
            foxtrot = {};
            foxtrot['height'] = control;
            control = 30;
            foxtrot['offsetThreshold'] = control;
            foxtrot['radius'] = source;
            foxtrot['voiceMessageAnimationState'] = verify;
            foxtrot = backup.bind(tango)(sizing, foxtrot);
            options[1] = foxtrot;
            report['children'] = options;
            golf = zulu.bind(tango)(golf, report);
            report = new Array(3);
            report[0] = golf;
            foxtrot = _closure1_slot15;
            golf = lima[update];
            golf = context.bind(tango)(golf);
            options = golf.View;
            golf = {};
            sizing = status.contentContainer;
            backup = new Array(3);
            backup[0] = sizing;
            sizing = {};
            sizing['bottom'] = romeo;
            backup[1] = sizing;
            backup[2] = kilo;
            golf['style'] = backup;
            sizing = _closure1_slot14;
            kilo = _closure1_slot31;
            backup = {};
            backup['initialAnimation'] = offset;
            backup['recordingAnimation'] = result;
            backup['exiting'] = output;
            kilo = sizing.bind(tango)(kilo, backup);
            backup = new Array(3);
            backup[0] = kilo;
            output = _closure1_slot15;
            sizing = _closure1_slot5;
            kilo = {};
            result = status.innerContainer;
            kilo['style'] = result;
            source = _closure1_slot14;
            control = _closure1_slot18;
            result = {};
            equality = status.trashContainer;
            sequence = new Array(2);
            sequence[0] = equality;
            sequence[1] = config;
            result['style'] = sequence;
            config = 'button';
            result['accessibilityRole'] = config;
            sequence = 23;
            equality = lima[sequence];
            equality = sierra.bind(tango)(equality);
            variable36 = equality.intl;
            quebec = variable36.string;
            equality = lima[sequence];
            equality = sierra.bind(tango)(equality);
            equality = equality.t;
            equality = equality.RdK9sb;
            equality = quebec.bind(variable36)(equality);
            result['accessibilityLabel'] = equality;
            equality = function() { // Original name: onPressIn
                zulu = _closure1_slot0;
                mike = _closure1_slot2;
                entity = 35;
                mike = mike[entity];
                entity = undefined;
                mike = zulu.bind(entity)(mike);
                entity = mike.triggerHaptic;
                entity = entity.bind(mike)();
                return entity;
            };
            result['onPressIn'] = equality;
            equality = function() { // Original name: onPress
                tango = _closure1_slot0;
                zulu = _closure1_slot2;
                entity = 32;
                zulu = zulu[entity];
                entity = undefined;
                zulu = tango.bind(entity)(zulu);
                oscar = zulu.ComponentDispatch;
                report = oscar.dispatchKeyed;
                mike = _closure1_slot12;
                tango = mike.VOICE_MESSAGE_SEND;
                zulu = _closure2_slot0;
                mike = {};
                golf = true;
                mike['isCancelling'] = golf;
                mike = report.bind(oscar)(tango, zulu, mike);
                return entity;
            };
            result['onPress'] = equality;
            variable36 = _closure1_slot14;
            quebec = _closure1_slot17;
            equality = {};
            equality['style'] = papa;
            papa = 36;
            papa = lima[papa];
            papa = context.bind(tango)(papa);
            equality['source'] = papa;
            papa = 12;
            variable37 = lima[papa];
            variable37 = context.bind(tango)(variable37);
            variable37 = variable37.Sizes;
            variable37 = variable37.MEDIUM;
            equality['size'] = variable37;
            equality = variable36.bind(tango)(quebec, equality);
            result['children'] = equality;
            source = source.bind(tango)(control, result);
            result = new Array(3);
            result[0] = source;
            equality = _closure1_slot14;
            update = lima[update];
            update = context.bind(tango)(update);
            source = update.View;
            update = {};
            quebec = status.voiceChatContainer;
            update['style'] = quebec;
            variable37 = _closure1_slot14;
            quebec = 37;
            quebec = lima[quebec];
            variable36 = context.bind(tango)(quebec);
            quebec = {};
            quebec['isRecording'] = record;
            quebec['initialAnimation'] = offset;
            quebec['backgroundColor'] = variable38;
            quebec = variable37.bind(tango)(variable36, quebec);
            update['children'] = quebec;
            update = equality.bind(tango)(source, update);
            result[1] = update;
            source = _closure1_slot14;
            update = {};
            equality = status.sendContainer;
            status = new Array(2);
            status[0] = equality;
            status[1] = whiskey;
            update['style'] = status;
            update['accessibilityRole'] = config;
            config = lima[sequence];
            config = sierra.bind(tango)(config);
            status = config.intl;
            config = status.string;
            sequence = lima[sequence];
            sequence = sierra.bind(tango)(sequence);
            sequence = sequence.t;
            sequence = sequence.+8GStb;
            sequence = config.bind(status)(sequence);
            update['accessibilityLabel'] = sequence;
            vacuum = function() { // Original name: onPress
                tango = _closure1_slot0;
                zulu = _closure1_slot2;
                entity = 32;
                zulu = zulu[entity];
                entity = undefined;
                zulu = tango.bind(entity)(zulu);
                oscar = zulu.ComponentDispatch;
                report = oscar.dispatchKeyed;
                mike = _closure1_slot12;
                tango = mike.VOICE_MESSAGE_SEND;
                zulu = _closure2_slot0;
                mike = {};
                golf = false;
                mike['isCancelling'] = golf;
                mike = report.bind(oscar)(tango, zulu, mike);
                return entity;
            };
            update['onPress'] = vacuum;
            config = _closure1_slot14;
            sequence = _closure1_slot17;
            vacuum = {};
            vacuum['style'] = target;
            status = _closure1_slot2;
            if(record) { _fun00020_ip = 1973; continue _fun00019 }
 1964:
            record = 39;
            record = status[record];
            _fun00020_ip = 1980; continue _fun00019;
 1973:
            target = 38;
            record = status[target];
 1980:
            record = context.bind(tango)(record);
            vacuum['source'] = record;
            context = _closure1_slot1;
            record = _closure1_slot2;
            record = record[papa];
            record = context.bind(tango)(record);
            record = record.Sizes;
            record = record.MEDIUM;
            vacuum['size'] = record;
            vacuum = config.bind(tango)(sequence, vacuum);
            update['children'] = vacuum;
            update = source.bind(tango)(control, update);
            result[2] = update;
            kilo['children'] = result;
            kilo = output.bind(tango)(sizing, kilo);
            backup[1] = kilo;
            sizing = 0;
            kilo = null;
            if(!(sizing === romeo)) { _fun00020_ip = 2100; continue _fun00019 }
 2064:
            result = _closure1_slot14;
            output = _closure1_slot1;
            update = _closure1_slot2;
            sizing = 40;
            sizing = update[sizing];
            output = output.bind(tango)(sizing);
            sizing = {};
            sizing['channelId'] = echo;
            kilo = result.bind(tango)(output, sizing);
 2100:
            backup[2] = kilo;
            golf['children'] = backup;
            golf = foxtrot.bind(tango)(options, golf);
            report[1] = golf;
            options = _closure1_slot14;
            golf = _closure1_slot53;
            oscar = {};
            oscar['keyboardHeight'] = romeo;
            oscar['safeAreaBottom'] = yankee;
            oscar['initialAnimation'] = offset;
            oscar['voiceMessageAnimationState'] = verify;
            oscar = options.bind(tango)(golf, oscar);
            report[2] = oscar;
            entity['children'] = report;
            entity = zulu.bind(tango)(mike, entity);
            return entity;
        }
    };
    report = verify.bind(options)(report);
    var _closure1_slot52 = report;
    report = options.memo;
    tango = function(argFoo) {
        _fun00029: for(var _fun00030_ip = 0; ; ) switch(_fun00030_ip) {
 0:
            mike = argFoo;
            offset = mike.channelId;
            var _closure2_slot0 = offset;
            report = _closure1_slot10;
            oscar = undefined;
            mike = function(argFoo) {
                entity = argFoo;
                entity = entity.showRecordingOverlay;
                return entity;
            };
            options = report.bind(oscar)(mike);
            var _closure2_slot1 = options;
            tango = _closure1_slot0;
            golf = _closure1_slot2;
            mike = 20;
            mike = golf[mike];
            verify = tango.bind(oscar)(mike);
            golf = verify.useStateFromStores;
            mike = _closure1_slot8;
            tango = new Array(1);
            tango[0] = mike;
            mike = function() {
                zulu = _closure1_slot8;
                mike = zulu.getChannel;
                entity = _closure2_slot0;
                entity = mike.bind(zulu)(entity);
                return entity;
            };
            mike = golf.bind(verify)(tango, mike);
            tango = function(argFoo) {
                entity = argFoo;
                entity = entity.voiceMessageAnimationState;
                return entity;
            };
            verify = report.bind(oscar)(tango);
            report = _closure1_slot4;
            tango = report.useState;
            golf = tango.bind(report)(options);
            report = _closure1_slot3;
            tango = 2;
            report = report.bind(oscar)(golf, tango);
            tango = 0;
            golf = report[tango];
            tango = 1;
            tango = report[tango];
            var _closure2_slot2 = tango;
            yankee = _closure1_slot4;
            report = yankee.useEffect;
            tango = new Array(1);
            tango[0] = options;
            entity = function() {
                _fun00031: for(var _fun00032_ip = 0; ; ) switch(_fun00032_ip) {
 0:
                    zulu = _closure2_slot1;
                    if(zulu) { _fun00032_ip = 51; continue _fun00031 }
 12:
                    zulu = global;
                    oscar = zulu.setTimeout;
                    report = undefined;
                    tango = function() {
                        zulu = _closure2_slot2;
                        mike = undefined;
                        entity = false;
                        entity = zulu.bind(mike)(entity);
                        return entity;
                    };
                    zulu = 100;
                    zulu = oscar.bind(report)(tango, zulu);
                    var _closure3_slot0 = zulu;
                    mike = function() {
                        entity = global;
                        zulu = entity.clearTimeout;
                        mike = _closure3_slot0;
                        entity = undefined;
                        mike = zulu.bind(entity)(mike);
                        return entity;
                    };
                    return mike;
 51:
                    zulu = _closure2_slot2;
                    entity = undefined;
                    mike = true;
                    mike = zulu.bind(entity)(mike);
                    return entity;
                }
            };
            entity = report.bind(yankee)(entity, tango);
            tango = null;
            if(!(tango != mike)) { _fun00030_ip = 196; continue _fun00029 }
 181:
            entity = mike.isForumLikeChannel;
            mike = entity.bind(mike)();
            entity = null;
            if(mike) { _fun00030_ip = 249; continue _fun00029 }
 196:
            report = tango != verify;
            mike = null;
            if(!report) { _fun00030_ip = 246; continue _fun00029 }
 205:
            mike = null;
            if(!golf) { _fun00030_ip = 246; continue _fun00029 }
 210:
            report = _closure1_slot14;
            tango = _closure1_slot52;
            zulu = {};
            zulu['channelId'] = offset;
            zulu['voiceMessageAnimationState'] = verify;
            if(!golf) { _fun00030_ip = 235; continue _fun00029 }
 232:
            golf = !options;
 235:
            zulu['exiting'] = golf;
            mike = report.bind(oscar)(tango, zulu);
 246:
            entity = mike;
 249:
            return entity;
        }
    };
    tango = report.bind(options)(tango);
    report = 41;
    report = golf[report];
    golf = oscar.bind(entity)(report);
    oscar = golf.fileFinishedImporting;
    report = 'modules/voice_messages/native/components/VoiceMessageOverlay.tsx';
    report = oscar.bind(golf)(report);
    zulu['default'] = tango;
    zulu['VoiceMessageEllipse'] = mike;
    return entity;
})();