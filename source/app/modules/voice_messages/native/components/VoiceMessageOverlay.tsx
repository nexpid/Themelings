// app/modules/voice_messages/native/components/VoiceMessageOverlay.tsx
export default (function(argFoo, argBar, argBaz, argCor, argGra, argFre, argPlu) {
    oscard = argBar;
    offset = argBaz;
    zuuluu = argFre;
    golfie = argPlu;
    var _closure1_slot0 = oscard;
    var _closure1_slot1 = offset;
    var _closure1_slot2 = golfie;
    entity = function(argFoo) { // Original name: LockPill
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            michal = argFoo;
            yankee = michal.keyboardHeight;
            var _closure2_slot0 = yankee;
            golfie = michal.safeAreaBottom;
            var _closure2_slot1 = golfie;
            foxtra = michal.initialAnimation;
            var _closure2_slot2 = foxtra;
            oscard = michal.voiceMessageAnimationState;
            var _closure2_slot3 = oscard;
            michal = _closure1_slot20;
            tangon = undefined;
            romeon = michal.bind(tangon)();
            report = _closure1_slot4;
            zuuluu = report.useState;
            michal = false;
            report = zuuluu.bind(report)(michal);
            zuuluu = _closure1_slot3;
            michal = 2;
            report = zuuluu.bind(tangon)(report, michal);
            michal = 0;
            michal = report[michal];
            zuuluu = 1;
            sizing = report[zuuluu];
            var _closure2_slot4 = sizing;
            result = _closure1_slot0;
            output = _closure1_slot2;
            report = 10;
            zuuluu = output[report];
            backup = result.bind(tangon)(zuuluu);
            offset = backup.useAnimatedReaction;
            option = function() { // Original name: _
                _fun00003: for(var _fun00004_ip = 0; ; ) switch(_fun00004_ip) {
 0:
                    michal = _closure2_slot3;
                    entity = michal.get;
                    entity = entity.bind(michal)();
                    tangon = 1;
                    report = entity[tangon];
                    entity = _closure1_slot10;
                    entity = entity.LOCKED;
                    entity = report === entity;
                    if(entity) { _fun00004_ip = 74; continue _fun00003 }
 43:
                    report = _closure2_slot3;
                    zuuluu = report.get;
                    zuuluu = zuuluu.bind(report)();
                    zuuluu = zuuluu[tangon];
                    michal = _closure1_slot10;
                    michal = michal.LOCKING;
                    entity = zuuluu === michal;
 74:
                    return entity;
                }
            };
            zuuluu = {};
            zuuluu['voiceMessageAnimationState'] = oscard;
            kiloes = _closure1_slot10;
            zuuluu['VoiceMessageAnimationState'] = kiloes;
            option['__closure'] = zuuluu;
            zuuluu = 16672558304670.0;
            option['__workletHash'] = zuuluu;
            zuuluu = _closure1_slot40;
            option['__initData'] = zuuluu;
            zuuluu = function(argFoo, argBar) { // Original name: u
                _fun00005: for(var _fun00006_ip = 0; ; ) switch(_fun00006_ip) {
 0:
                    zuuluu = argFoo;
                    entity = argBar;
                    if(!(zuuluu !== entity)) { _fun00006_ip = 57; continue _fun00005 }
 10:
                    tangon = _closure1_slot0;
                    michal = _closure1_slot2;
                    entity = 10;
                    entity = michal[entity];
                    michal = undefined;
                    report = tangon.bind(michal)(entity);
                    tangon = report.runOnJS;
                    entity = _closure2_slot4;
                    entity = tangon.bind(report)(entity);
                    entity = entity.bind(michal)(zuuluu);
 57:
                    entity = undefined;
                    return entity;
                }
            };
            kiloes = {};
            output = output[report];
            output = result.bind(tangon)(output);
            output = output.runOnJS;
            kiloes['runOnJS'] = output;
            kiloes['setLocked'] = sizing;
            zuuluu['__closure'] = kiloes;
            kiloes = 10857258354778.0;
            zuuluu['__workletHash'] = kiloes;
            kiloes = _closure1_slot41;
            zuuluu['__initData'] = kiloes;
            zuuluu = offset.bind(backup)(option, zuuluu);
            zuuluu = function(argFoo) { // Original name: useLockStyles
                _fun00007: for(var _fun00008_ip = 0; ; ) switch(_fun00008_ip) {
 0:
                    romeon = argFoo;
                    var _closure3_slot0 = romeon;
                    golfie = _closure1_slot1;
                    zuuluu = _closure1_slot2;
                    entity = 23;
                    entity = zuuluu[entity];
                    offset = undefined;
                    entity = golfie.bind(offset)(entity);
                    option = entity.bind(offset)();
                    tangon = _closure1_slot0;
                    entity = 24;
                    oscard = zuuluu[entity];
                    yankee = tangon.bind(offset)(oscard);
                    verify = yankee.useThemedColorValue;
                    oscard = _closure1_slot12;
                    oscard = oscard.BACKGROUND_TERTIARY;
                    yankee = verify.bind(yankee)(oscard);
                    oscard = 17;
                    oscard = zuuluu[oscard];
                    oscard = golfie.bind(offset)(oscard);
                    oscard = oscard.unsafe_rawColors;
                    golfie = oscard.WHITE_500;
                    oscard = _closure1_slot33;
                    verify = 25;
                    zuuluu = zuuluu[verify];
                    tangon = tangon.bind(offset)(zuuluu);
                    zuuluu = tangon.isThemeLight;
                    zuuluu = zuuluu.bind(tangon)(option);
                    tangon = golfie;
                    if(zuuluu) { _fun00008_ip = 136; continue _fun00007 }
 131:
                    tangon = yankee.hex;
 136:
                    foxtra = _closure1_slot0;
                    zuuluu = _closure1_slot2;
                    zuuluu = zuuluu[verify];
                    foxtra = foxtra.bind(offset)(zuuluu);
                    zuuluu = foxtra.isThemeLight;
                    foxtra = zuuluu.bind(foxtra)(option);
                    zuuluu = golfie;
                    if(foxtra) { _fun00008_ip = 175; continue _fun00007 }
 170:
                    zuuluu = yankee.hex;
 175:
                    ctrled = undefined;
                    source = romeon;
                    update = tangon;
                    echoed = zuuluu;
                    result = golfie;
                    output = golfie;
                    backup = ctrled[oscard](source, update, echoed, result, output, sizing);
                    var _closure3_slot1 = backup;
                    golfie = _closure1_slot0;
                    zuuluu = _closure1_slot2;
                    tangon = zuuluu[entity];
                    oscard = golfie.bind(offset)(tangon);
                    tangon = oscard.useThemedColorValue;
                    zuuluu = zuuluu[verify];
                    golfie = golfie.bind(offset)(zuuluu);
                    zuuluu = golfie.isThemeLight;
                    zuuluu = zuuluu.bind(golfie)(option);
                    golfie = _closure1_slot12;
                    if(zuuluu) { _fun00008_ip = 258; continue _fun00007 }
 250:
                    zuuluu = golfie.INTERACTIVE_ACTIVE;
                    _fun00008_ip = 264; continue _fun00007;
 258:
                    zuuluu = golfie.INTERACTIVE_NORMAL;
 264:
                    zuuluu = tangon.bind(oscard)(zuuluu);
                    verify = _closure1_slot0;
                    yankee = _closure1_slot2;
                    entity = yankee[entity];
                    oscard = verify.bind(offset)(entity);
                    tangon = oscard.useThemedColorValue;
                    entity = _closure1_slot12;
                    entity = entity.STATUS_POSITIVE;
                    entity = tangon.bind(oscard)(entity);
                    golfie = _closure1_slot33;
                    update = zuuluu.hex;
                    echoed = zuuluu.hex;
                    result = entity.hex;
                    output = entity.hex;
                    ctrled = undefined;
                    source = romeon;
                    foxtra = ctrled[golfie](source, update, echoed, result, output, sizing);
                    var _closure3_slot2 = foxtra;
                    option = 10;
                    entity = yankee[option];
                    tangon = verify.bind(offset)(entity);
                    zuuluu = tangon.useDerivedValue;
                    entity = function() { // Original name: o
                        michal = _closure3_slot0;
                        entity = michal.get;
                        michal = entity.bind(michal)();
                        entity = 1;
                        tangon = michal[entity];
                        golfie = _closure1_slot0;
                        option = _closure1_slot2;
                        entity = 22;
                        entity = option[entity];
                        oscard = undefined;
                        zuuluu = golfie.bind(oscard)(entity);
                        michal = zuuluu.withTiming;
                        entity = {};
                        report = 10;
                        report = option[report];
                        report = golfie.bind(oscard)(report);
                        report = report.Easing;
                        report = report.linear;
                        entity['easing'] = report;
                        report = 150;
                        entity['duration'] = report;
                        entity = michal.bind(zuuluu)(tangon, entity);
                        return entity;
                    };
                    oscard = {};
                    oscard['voiceMessageAnimationState'] = romeon;
                    golfie = 22;
                    golfie = yankee[golfie];
                    golfie = verify.bind(offset)(golfie);
                    golfie = golfie.withTiming;
                    oscard['withTiming'] = golfie;
                    golfie = yankee[option];
                    golfie = verify.bind(offset)(golfie);
                    golfie = golfie.Easing;
                    oscard['Easing'] = golfie;
                    entity['__closure'] = oscard;
                    oscard = 11385805572554.0;
                    entity['__workletHash'] = oscard;
                    oscard = _closure1_slot34;
                    entity['__initData'] = oscard;
                    golfie = zuuluu.bind(tangon)(entity);
                    var _closure3_slot3 = golfie;
                    entity = yankee[option];
                    tangon = verify.bind(offset)(entity);
                    zuuluu = tangon.useDerivedValue;
                    entity = function() { // Original name: s
                        _fun00009: for(var _fun00010_ip = 0; ; ) switch(_fun00010_ip) {
 0:
                            zuuluu = _closure3_slot0;
                            entity = zuuluu.get;
                            report = entity.bind(zuuluu)();
                            zuuluu = _closure1_slot3;
                            oscard = undefined;
                            tangon = 2;
                            golfie = zuuluu.bind(oscard)(report, tangon);
                            zuuluu = 0;
                            report = golfie[zuuluu];
                            zuuluu = 1;
                            zuuluu = golfie[zuuluu];
                            zuuluu = report + zuuluu;
                            if(!(zuuluu !== tangon)) { _fun00010_ip = 67; continue _fun00009 }
 55:
                            report = [1, 0, 1, 0];
                            _fun00010_ip = 77; continue _fun00009;
 67:
                            report = [1, 1, 1, 0];
 77:
                            tangon = _closure1_slot0;
                            golfie = _closure1_slot2;
                            zuuluu = 10;
                            zuuluu = golfie[zuuluu];
                            tangon = tangon.bind(oscard)(zuuluu);
                            zuuluu = tangon.interpolate;
                            oscard = _closure3_slot3;
                            michal = oscard.get;
                            michal = michal.bind(oscard)();
                            entity = _closure1_slot22;
                            entity = zuuluu.bind(tangon)(michal, entity, report);
                            return entity;
                        }
                    };
                    oscard = {};
                    oscard['voiceMessageAnimationState'] = romeon;
                    romeon = yankee[option];
                    romeon = verify.bind(offset)(romeon);
                    romeon = romeon.interpolate;
                    oscard['interpolate'] = romeon;
                    oscard['timing'] = golfie;
                    romeon = _closure1_slot22;
                    oscard['VOICE_MESSAGE_ANIMATION_STATES'] = romeon;
                    entity['__closure'] = oscard;
                    oscard = 13564673991122.0;
                    entity['__workletHash'] = oscard;
                    oscard = _closure1_slot35;
                    entity['__initData'] = oscard;
                    kiloes = zuuluu.bind(tangon)(entity);
                    var _closure3_slot4 = kiloes;
                    entity = {};
                    zuuluu = yankee[option];
                    oscard = verify.bind(offset)(zuuluu);
                    tangon = oscard.useAnimatedStyle;
                    zuuluu = function() { // Original name: l
                        entity = {};
                        report = _closure1_slot0;
                        tangon = _closure1_slot2;
                        zuuluu = 10;
                        tangon = tangon[zuuluu];
                        zuuluu = undefined;
                        oscard = report.bind(zuuluu)(tangon);
                        report = oscard.interpolate;
                        tangon = _closure3_slot3;
                        zuuluu = tangon.get;
                        tangon = zuuluu.bind(tangon)();
                        zuuluu = _closure1_slot22;
                        michal = [68, 68, 104, 104];
                        michal = report.bind(oscard)(tangon, zuuluu, michal);
                        entity['height'] = michal;
                        return entity;
                    };
                    romeon = {};
                    sizing = yankee[option];
                    sizing = verify.bind(offset)(sizing);
                    sizing = sizing.interpolate;
                    romeon['interpolate'] = sizing;
                    romeon['timing'] = golfie;
                    sizing = _closure1_slot22;
                    romeon['VOICE_MESSAGE_ANIMATION_STATES'] = sizing;
                    zuuluu['__closure'] = romeon;
                    romeon = 16239675884614.0;
                    zuuluu['__workletHash'] = romeon;
                    romeon = _closure1_slot36;
                    zuuluu['__initData'] = romeon;
                    zuuluu = tangon.bind(oscard)(zuuluu);
                    entity['lockParentContainerStyle'] = zuuluu;
                    zuuluu = yankee[option];
                    oscard = verify.bind(offset)(zuuluu);
                    tangon = oscard.useAnimatedStyle;
                    zuuluu = function() { // Original name: c
                        entity = {};
                        oscard = _closure1_slot0;
                        golfie = _closure1_slot2;
                        tangon = 10;
                        zuuluu = golfie[tangon];
                        report = undefined;
                        romeon = oscard.bind(report)(zuuluu);
                        yankee = romeon.interpolate;
                        verify = _closure3_slot3;
                        option = verify.get;
                        offset = option.bind(verify)();
                        verify = _closure1_slot22;
                        option = [40, 40, 56, 56];
                        option = yankee.bind(romeon)(offset, verify, option);
                        entity['width'] = option;
                        option = golfie[tangon];
                        romeon = oscard.bind(report)(option);
                        yankee = romeon.interpolate;
                        verify = _closure3_slot3;
                        option = verify.get;
                        offset = option.bind(verify)();
                        verify = _closure1_slot22;
                        option = [68, 68, 56, 56];
                        option = yankee.bind(romeon)(offset, verify, option);
                        entity['height'] = option;
                        verify = _closure3_slot4;
                        option = verify.get;
                        option = option.bind(verify)();
                        entity['opacity'] = option;
                        verify = _closure3_slot1;
                        option = verify.get;
                        option = option.bind(verify)();
                        entity['backgroundColor'] = option;
                        option = golfie[tangon];
                        romeon = oscard.bind(report)(option);
                        yankee = romeon.interpolate;
                        verify = _closure3_slot3;
                        option = verify.get;
                        offset = option.bind(verify)();
                        verify = _closure1_slot22;
                        option = [0, 0];
                        foxtra = -8;
                        option[2] = foxtra;
                        option[3] = foxtra;
                        option = yankee.bind(romeon)(offset, verify, option);
                        entity['marginHorizontal'] = option;
                        tangon = golfie[tangon];
                        oscard = oscard.bind(report)(tangon);
                        report = oscard.interpolate;
                        tangon = _closure3_slot3;
                        zuuluu = tangon.get;
                        tangon = zuuluu.bind(tangon)();
                        zuuluu = _closure1_slot22;
                        michal = [0, 0, 36, 36];
                        michal = report.bind(oscard)(tangon, zuuluu, michal);
                        entity['marginBottom'] = michal;
                        return entity;
                    };
                    romeon = {};
                    sizing = yankee[option];
                    sizing = verify.bind(offset)(sizing);
                    sizing = sizing.interpolate;
                    romeon['interpolate'] = sizing;
                    romeon['timing'] = golfie;
                    sizing = _closure1_slot22;
                    romeon['VOICE_MESSAGE_ANIMATION_STATES'] = sizing;
                    romeon['lockContainerOpacity'] = kiloes;
                    romeon['lockedBackgroundColor'] = backup;
                    zuuluu['__closure'] = romeon;
                    romeon = 16191961901595.0;
                    zuuluu['__workletHash'] = romeon;
                    romeon = _closure1_slot37;
                    zuuluu['__initData'] = romeon;
                    zuuluu = tangon.bind(oscard)(zuuluu);
                    entity['lockContainerStyle'] = zuuluu;
                    zuuluu = yankee[option];
                    oscard = verify.bind(offset)(zuuluu);
                    tangon = oscard.useAnimatedStyle;
                    zuuluu = function() { // Original name: u
                        entity = {};
                        oscard = _closure1_slot0;
                        golfie = _closure1_slot2;
                        tangon = 10;
                        michal = golfie[tangon];
                        report = undefined;
                        romeon = oscard.bind(report)(michal);
                        yankee = romeon.interpolate;
                        verify = _closure3_slot3;
                        option = verify.get;
                        offset = option.bind(verify)();
                        verify = _closure1_slot22;
                        option = [24, 24, 32, 32];
                        option = yankee.bind(romeon)(offset, verify, option);
                        entity['width'] = option;
                        option = golfie[tangon];
                        romeon = oscard.bind(report)(option);
                        yankee = romeon.interpolate;
                        verify = _closure3_slot3;
                        option = verify.get;
                        offset = option.bind(verify)();
                        verify = _closure1_slot22;
                        option = [24, 24, 32, 32];
                        option = yankee.bind(romeon)(offset, verify, option);
                        entity['height'] = option;
                        tangon = golfie[tangon];
                        golfie = oscard.bind(report)(tangon);
                        oscard = golfie.interpolate;
                        report = _closure3_slot3;
                        tangon = report.get;
                        report = tangon.bind(report)();
                        tangon = _closure1_slot22;
                        zuuluu = [12, 12, 10, 10];
                        zuuluu = oscard.bind(golfie)(report, tangon, zuuluu);
                        entity['marginTop'] = zuuluu;
                        zuuluu = _closure3_slot2;
                        michal = zuuluu.get;
                        michal = michal.bind(zuuluu)();
                        entity['tintColor'] = michal;
                        return entity;
                    };
                    romeon = {};
                    backup = yankee[option];
                    backup = verify.bind(offset)(backup);
                    backup = backup.interpolate;
                    romeon['interpolate'] = backup;
                    romeon['timing'] = golfie;
                    backup = _closure1_slot22;
                    romeon['VOICE_MESSAGE_ANIMATION_STATES'] = backup;
                    romeon['lockIconColor'] = foxtra;
                    zuuluu['__closure'] = romeon;
                    romeon = 10256653077678.0;
                    zuuluu['__workletHash'] = romeon;
                    romeon = _closure1_slot38;
                    zuuluu['__initData'] = romeon;
                    zuuluu = tangon.bind(oscard)(zuuluu);
                    entity['lockIconStyle'] = zuuluu;
                    zuuluu = yankee[option];
                    tangon = verify.bind(offset)(zuuluu);
                    zuuluu = tangon.useAnimatedStyle;
                    michal = function() { // Original name: _
                        entity = {};
                        report = _closure1_slot0;
                        tangon = _closure1_slot2;
                        zuuluu = 10;
                        tangon = tangon[zuuluu];
                        zuuluu = undefined;
                        oscard = report.bind(zuuluu)(tangon);
                        report = oscard.interpolate;
                        tangon = _closure3_slot3;
                        zuuluu = tangon.get;
                        tangon = zuuluu.bind(tangon)();
                        zuuluu = _closure1_slot22;
                        michal = [1, 1, 0, 0];
                        michal = report.bind(oscard)(tangon, zuuluu, michal);
                        entity['opacity'] = michal;
                        return entity;
                    };
                    oscard = {};
                    option = yankee[option];
                    option = verify.bind(offset)(option);
                    option = option.interpolate;
                    oscard['interpolate'] = option;
                    oscard['timing'] = golfie;
                    golfie = _closure1_slot22;
                    oscard['VOICE_MESSAGE_ANIMATION_STATES'] = golfie;
                    michal['__closure'] = oscard;
                    oscard = 13143453012261.0;
                    michal['__workletHash'] = oscard;
                    report = _closure1_slot39;
                    michal['__initData'] = report;
                    michal = zuuluu.bind(tangon)(michal);
                    entity['chevonStyle'] = michal;
                    return entity;
                }
            };
            zuuluu = zuuluu.bind(tangon)(oscard);
            option = zuuluu.lockParentContainerStyle;
            offset = zuuluu.lockContainerStyle;
            output = zuuluu.lockIconStyle;
            kiloes = zuuluu.chevonStyle;
            zuuluu = _closure1_slot1;
            backup = _closure1_slot2;
            if(michal) { _fun00002_ip = 313; continue _fun00001 }
 304:
            michal = 27;
            michal = backup[michal];
            _fun00002_ip = 320; continue _fun00001;
 313:
            oscard = 26;
            michal = backup[oscard];
 320:
            sizing = zuuluu.bind(tangon)(michal);
            zuuluu = _closure1_slot0;
            backup = _closure1_slot2;
            michal = backup[report];
            zuuluu = zuuluu.bind(tangon)(michal);
            michal = zuuluu.useAnimatedStyle;
            entity = function() { // Original name: M
                entity = {};
                zuuluu = _closure2_slot2;
                tangon = zuuluu.get;
                tangon = tangon.bind(zuuluu)();
                entity['opacity'] = tangon;
                tangon = _closure2_slot0;
                michal = _closure2_slot1;
                tangon = tangon + michal;
                michal = 56;
                tangon = tangon + michal;
                michal = zuuluu.get;
                zuuluu = michal.bind(zuuluu)();
                michal = 8;
                zuuluu = michal * zuuluu;
                michal = 24;
                michal = tangon + michal;
                michal = michal + zuuluu;
                entity['bottom'] = michal;
                return entity;
            };
            oscard = {};
            oscard['initialAnimation'] = foxtra;
            oscard['keyboardHeight'] = yankee;
            oscard['safeAreaBottom'] = golfie;
            golfie = 56;
            oscard['INPUT_HEIGHT'] = golfie;
            golfie = 8;
            oscard['INITIAL_SHIFT'] = golfie;
            entity['__closure'] = oscard;
            oscard = 14817714818627.0;
            entity['__workletHash'] = oscard;
            oscard = _closure1_slot42;
            entity['__initData'] = oscard;
            golfie = michal.bind(zuuluu)(entity);
            zuuluu = _closure1_slot13;
            foxtra = _closure1_slot1;
            entity = backup[report];
            entity = foxtra.bind(tangon)(entity);
            michal = entity.View;
            entity = {};
            yankee = romeon.lockParentContainer;
            oscard = new Array(3);
            oscard[0] = yankee;
            oscard[1] = option;
            oscard[2] = golfie;
            entity['style'] = oscard;
            golfie = _closure1_slot14;
            report = backup[report];
            report = foxtra.bind(tangon)(report);
            oscard = report.View;
            report = {};
            yankee = romeon.lockContainer;
            option = new Array(2);
            option[0] = yankee;
            option[1] = offset;
            report['style'] = option;
            yankee = _closure1_slot13;
            offset = _closure1_slot16;
            option = {};
            option['style'] = output;
            option['source'] = sizing;
            offset = yankee.bind(tangon)(offset, option);
            option = new Array(2);
            option[0] = offset;
            yankee = _closure1_slot13;
            offset = _closure1_slot16;
            verify = {};
            sizing = romeon.chevon;
            romeon = new Array(2);
            romeon[0] = sizing;
            romeon[1] = kiloes;
            verify['style'] = romeon;
            romeon = 28;
            romeon = backup[romeon];
            romeon = foxtra.bind(tangon)(romeon);
            verify['source'] = romeon;
            verify = yankee.bind(tangon)(offset, verify);
            option[1] = verify;
            report['children'] = option;
            report = golfie.bind(tangon)(oscard, report);
            entity['children'] = report;
            entity = zuuluu.bind(tangon)(michal, entity);
            return entity;
        }
    };
    var _closure1_slot52 = entity;
    entity = global;
    option = entity.Object;
    report = option.defineProperty;
    michal = {};
    entity = true;
    michal['value'] = entity;
    entity = '__esModule';
    entity = report.bind(option)(zuuluu, entity, michal);
    entity = 0;
    michal = golfie[entity];
    entity = undefined;
    michal = offset.bind(entity)(michal);
    var _closure1_slot3 = michal;
    michal = 1;
    report = golfie[michal];
    michal = argCor;
    verify = michal.bind(entity)(report);
    var _closure1_slot4 = verify;
    michal = 2;
    michal = golfie[michal];
    michal = oscard.bind(entity)(michal);
    report = michal.View;
    var _closure1_slot5 = report;
    report = michal.StyleSheet;
    michal = michal.AppState;
    var _closure1_slot6 = michal;
    michal = 3;
    michal = golfie[michal];
    michal = offset.bind(entity)(michal);
    var _closure1_slot7 = michal;
    michal = 4;
    michal = golfie[michal];
    michal = offset.bind(entity)(michal);
    var _closure1_slot8 = michal;
    michal = 5;
    michal = golfie[michal];
    michal = oscard.bind(entity)(michal);
    michal = michal.useVoiceMessagesUIStore;
    var _closure1_slot9 = michal;
    michal = 6;
    michal = golfie[michal];
    michal = oscard.bind(entity)(michal);
    option = michal.VoiceMessageAnimationState;
    var _closure1_slot10 = option;
    michal = 7;
    michal = golfie[michal];
    michal = oscard.bind(entity)(michal);
    yankee = michal.ComponentActionsKeyed;
    var _closure1_slot11 = yankee;
    michal = michal.ThemeColor;
    var _closure1_slot12 = michal;
    michal = 8;
    michal = golfie[michal];
    michal = oscard.bind(entity)(michal);
    kiloes = michal.CHAT_INPUT_HORIZONTAL_PADDING;
    michal = 9;
    michal = golfie[michal];
    michal = oscard.bind(entity)(michal);
    yankee = michal.jsx;
    var _closure1_slot13 = yankee;
    yankee = michal.jsxs;
    var _closure1_slot14 = yankee;
    michal = michal.Fragment;
    var _closure1_slot15 = michal;
    michal = 10;
    yankee = golfie[michal];
    foxtra = offset.bind(entity)(yankee);
    romeon = foxtra.createAnimatedComponent;
    yankee = 11;
    yankee = golfie[yankee];
    yankee = offset.bind(entity)(yankee);
    yankee = romeon.bind(foxtra)(yankee);
    var _closure1_slot16 = yankee;
    yankee = golfie[michal];
    foxtra = offset.bind(entity)(yankee);
    romeon = foxtra.createAnimatedComponent;
    yankee = 12;
    yankee = golfie[yankee];
    yankee = oscard.bind(entity)(yankee);
    yankee = yankee.PressableOpacity;
    yankee = romeon.bind(foxtra)(yankee);
    var _closure1_slot17 = yankee;
    michal = golfie[michal];
    romeon = offset.bind(entity)(michal);
    yankee = romeon.createAnimatedComponent;
    michal = 13;
    michal = golfie[michal];
    michal = oscard.bind(entity)(michal);
    michal = michal.Text;
    michal = yankee.bind(romeon)(michal);
    var _closure1_slot18 = michal;
    michal = 14;
    michal = golfie[michal];
    romeon = offset.bind(entity)(michal);
    yankee = romeon.memoize;
    michal = function() {
        zuuluu = _closure1_slot1;
        oscard = _closure1_slot2;
        michal = 10;
        michal = oscard[michal];
        report = undefined;
        zuuluu = zuuluu.bind(report)(michal);
        michal = zuuluu.createAnimatedComponent;
        tangon = _closure1_slot0;
        entity = 15;
        entity = oscard[entity];
        entity = tangon.bind(report)(entity);
        entity = entity.Ellipse;
        entity = michal.bind(zuuluu)(entity);
        return entity;
    };
    michal = yankee.bind(romeon)(michal);
    var _closure1_slot19 = michal;
    michal = 16;
    michal = golfie[michal];
    foxtra = oscard.bind(entity)(michal);
    romeon = foxtra.createStyles;
    yankee = {};
    michal = {};
    backup = 'center';
    michal['alignItems'] = backup;
    result = report.absoluteFillObject;
    echoed = michal;
    report = copyDataProperties(echoed, result);
    backup = 'hidden';
    report = 'overflow';
    michal[report] = backup;
    yankee['container'] = michal;
    michal = {'flexDirection': 'row', 'alignItems': 'flex-end', 'paddingTop': 8, 'paddingHorizontal': null, 'paddingBottom': 9};
    michal['paddingHorizontal'] = kiloes;
    yankee['innerContainer'] = michal;
    michal = {'position': 'absolute', 'bottom': 0, 'width': '100%', 'alignItems': 'center', 'overflow': 'hidden'};
    yankee['contentContainer'] = michal;
    backup = {'width': 40, 'height': 40, 'borderRadius': null, 'alignItems': 'center', 'justifyContent': 'center'};
    report = 40;
    michal = 17;
    sizing = golfie[michal];
    sizing = offset.bind(entity)(sizing);
    sizing = sizing.radii;
    sizing = sizing.round;
    backup['borderRadius'] = sizing;
    yankee['trashContainer'] = backup;
    backup = {'width': 40, 'height': 40, 'borderRadius': null, 'alignItems': 'center', 'justifyContent': 'center'};
    sizing = golfie[michal];
    sizing = offset.bind(entity)(sizing);
    sizing = sizing.radii;
    sizing = sizing.round;
    backup['borderRadius'] = sizing;
    yankee['sendContainer'] = backup;
    backup = {'flex': 1, 'height': 40, 'marginRight': 8, 'alignItems': 'flex-end'};
    yankee['voiceChatContainer'] = backup;
    backup = {'height': 68, 'width': 40, 'borderRadius': null, 'display': 'flex', 'alignItems': 'center', 'flexDirection': 'column', 'elevation': 12, 'shadowColor': null, 'shadowOffset': null, 'shadowOpacity': 0.12, 'shadowRadius': 36};
    sizing = golfie[michal];
    sizing = offset.bind(entity)(sizing);
    sizing = sizing.radii;
    sizing = sizing.round;
    backup['borderRadius'] = sizing;
    sizing = golfie[michal];
    sizing = offset.bind(entity)(sizing);
    sizing = sizing.colors;
    sizing = sizing.BLACK;
    backup['shadowColor'] = sizing;
    sizing = {'width': 0, 'height': 12};
    backup['shadowOffset'] = sizing;
    sizing = 18;
    sizing = golfie[sizing];
    sizing = oscard.bind(entity)(sizing);
    sizing = sizing.DARK_0_LIGHT_1;
    backup['borderWidth'] = sizing;
    sizing = 'solid';
    backup['borderStyle'] = sizing;
    sizing = 'rgba(0, 0, 0, 0.08)';
    backup['borderColor'] = sizing;
    yankee['lockContainer'] = backup;
    backup = {'position': 'absolute', 'right': null, 'width': 40};
    backup['right'] = kiloes;
    yankee['lockParentContainer'] = backup;
    backup = {'height': 16, 'width': 16, 'marginTop': 8};
    kiloes = golfie[michal];
    kiloes = offset.bind(entity)(kiloes);
    kiloes = kiloes.colors;
    kiloes = kiloes.ICON_SECONDARY;
    backup['tintColor'] = kiloes;
    yankee['chevon'] = backup;
    yankee = romeon.bind(foxtra)(yankee);
    var _closure1_slot20 = yankee;
    michal = golfie[michal];
    michal = offset.bind(entity)(michal);
    michal = michal.unsafe_rawColors;
    michal = michal.PLUM_13;
    var _closure1_slot21 = michal;
    offset = option.SENDING;
    michal = new Array(4);
    michal[0] = offset;
    offset = option.CANCELLING;
    michal[1] = offset;
    offset = option.LOCKING;
    michal[2] = offset;
    option = option.LOCKED;
    michal[3] = option;
    var _closure1_slot22 = michal;
    michal = {};
    option = 'function VoiceMessageOverlayTsx1(){const{useReducedMotion,currWaveHeight}=this.__closure;var _currWaveHeight$get,_currWaveHeight;return useReducedMotion?0.5:(_currWaveHeight$get=(_currWaveHeight=currWaveHeight)===null||_currWaveHeight===void 0?void 0:_currWaveHeight.get())!==null&&_currWaveHeight$get!==void 0?_currWaveHeight$get:0;}';
    michal['code'] = option;
    var _closure1_slot23 = michal;
    michal = {};
    option = 'function VoiceMessageOverlayTsx2(){const{derivedCurrWaveHeight,offsetThreshold}=this.__closure;return derivedCurrWaveHeight.get()*offsetThreshold;}';
    michal['code'] = option;
    var _closure1_slot24 = michal;
    michal = {};
    option = 'function VoiceMessageOverlayTsx3(){const{voiceMessageEllipseBgColor,radius,offset}=this.__closure;return{fill:voiceMessageEllipseBgColor.get(),ry:radius+offset.get(),rx:radius,cy:radius+offset.get(),cx:radius};}';
    michal['code'] = option;
    var _closure1_slot25 = michal;
    michal = {};
    option = "function VoiceMessageOverlayTsx4(){const{radius,height,offset}=this.__closure;return{position:'absolute',width:radius*2,height:height.get()+offset.get(),bottom:0};}";
    michal['code'] = option;
    var _closure1_slot26 = michal;
    option = verify.memo;
    michal = function(argFoo) {
        entity = argFoo;
        kiloes = entity.radius;
        var _closure2_slot0 = kiloes;
        yankee = entity.opacity;
        backup = entity.height;
        var _closure2_slot1 = backup;
        foxtra = entity.offsetThreshold;
        var _closure2_slot2 = foxtra;
        result = entity.voiceMessageAnimationState;
        oscard = _closure1_slot0;
        verify = _closure1_slot2;
        entity = 19;
        entity = verify[entity];
        tangon = undefined;
        offset = oscard.bind(tangon)(entity);
        golfie = offset.useStateFromStores;
        entity = _closure1_slot7;
        report = new Array(1);
        report[0] = entity;
        michal = function() {
            entity = _closure1_slot7;
            entity = entity.useReducedMotion;
            return entity;
        };
        entity = new Array(0);
        sizing = golfie.bind(offset)(report, michal, entity);
        var _closure2_slot3 = sizing;
        michal = _closure1_slot9;
        entity = function(argFoo) {
            entity = argFoo;
            entity = entity.currWaveHeight;
            return entity;
        };
        romeon = michal.bind(tangon)(entity);
        var _closure2_slot4 = romeon;
        entity = 10;
        michal = verify[entity];
        golfie = oscard.bind(tangon)(michal);
        report = golfie.useDerivedValue;
        michal = function() { // Original name: c
            _fun00011: for(var _fun00012_ip = 0; ; ) switch(_fun00012_ip) {
 0:
                michal = _closure2_slot3;
                entity = 0.5;
                if(michal) { _fun00012_ip = 63; continue _fun00011 }
 20:
                zuuluu = _closure2_slot4;
                michal = null;
                report = michal == zuuluu;
                zuuluu = undefined;
                if(report) { _fun00012_ip = 48; continue _fun00011 }
 35:
                report = _closure2_slot4;
                tangon = report.get;
                zuuluu = tangon.bind(report)();
 48:
                tangon = michal != zuuluu;
                michal = 0;
                if(!tangon) { _fun00012_ip = 60; continue _fun00011 }
 57:
                michal = zuuluu;
 60:
                entity = michal;
 63:
                return entity;
            }
        };
        offset = {};
        offset['useReducedMotion'] = sizing;
        offset['currWaveHeight'] = romeon;
        michal['__closure'] = offset;
        offset = 2925868096827.0;
        michal['__workletHash'] = offset;
        offset = _closure1_slot23;
        michal['__initData'] = offset;
        output = report.bind(golfie)(michal);
        var _closure2_slot5 = output;
        sizing = _closure1_slot33;
        michal = _closure1_slot1;
        report = 17;
        golfie = verify[report];
        golfie = michal.bind(tangon)(golfie);
        golfie = golfie.unsafe_rawColors;
        ctrled = golfie.BRAND_500;
        golfie = verify[report];
        golfie = michal.bind(tangon)(golfie);
        golfie = golfie.unsafe_rawColors;
        source = golfie.RED_400;
        golfie = verify[report];
        golfie = michal.bind(tangon)(golfie);
        golfie = golfie.unsafe_rawColors;
        update = golfie.BRAND_500;
        report = verify[report];
        report = michal.bind(tangon)(report);
        report = report.unsafe_rawColors;
        echoed = report.BRAND_500;
        sequen = undefined;
        vacuum = result;
        sizing = sequen[sizing](vacuum, ctrled, source, update, echoed, result);
        var _closure2_slot6 = sizing;
        report = verify[entity];
        offset = oscard.bind(tangon)(report);
        golfie = offset.useDerivedValue;
        report = function() { // Original name: _
            zuuluu = _closure2_slot5;
            michal = zuuluu.get;
            michal = michal.bind(zuuluu)();
            entity = _closure2_slot2;
            entity = michal * entity;
            return entity;
        };
        romeon = {};
        romeon['derivedCurrWaveHeight'] = output;
        romeon['offsetThreshold'] = foxtra;
        report['__closure'] = romeon;
        romeon = 7278593580538.0;
        report['__workletHash'] = romeon;
        romeon = _closure1_slot24;
        report['__initData'] = romeon;
        foxtra = golfie.bind(offset)(report);
        var _closure2_slot7 = foxtra;
        report = verify[entity];
        offset = oscard.bind(tangon)(report);
        golfie = offset.useAnimatedProps;
        report = function() { // Original name: h
            entity = {};
            tangon = _closure2_slot6;
            michal = tangon.get;
            michal = michal.bind(tangon)();
            entity['fill'] = michal;
            michal = _closure2_slot0;
            tangon = _closure2_slot7;
            zuuluu = tangon.get;
            zuuluu = zuuluu.bind(tangon)();
            zuuluu = michal + zuuluu;
            entity['ry'] = zuuluu;
            entity['rx'] = michal;
            zuuluu = tangon.get;
            zuuluu = zuuluu.bind(tangon)();
            zuuluu = michal + zuuluu;
            entity['cy'] = zuuluu;
            entity['cx'] = michal;
            return entity;
        };
        romeon = {};
        romeon['voiceMessageEllipseBgColor'] = sizing;
        romeon['radius'] = kiloes;
        romeon['offset'] = foxtra;
        report['__closure'] = romeon;
        romeon = 12489173275515.0;
        report['__workletHash'] = romeon;
        romeon = _closure1_slot25;
        report['__initData'] = romeon;
        romeon = golfie.bind(offset)(report);
        report = verify[entity];
        golfie = oscard.bind(tangon)(report);
        report = golfie.useAnimatedStyle;
        zuuluu = function() { // Original name: S
            entity = {};
            michal = 'absolute';
            entity['position'] = michal;
            tangon = _closure2_slot0;
            zuuluu = 2;
            zuuluu = zuuluu * tangon;
            entity['width'] = zuuluu;
            tangon = _closure2_slot1;
            zuuluu = tangon.get;
            zuuluu = zuuluu.bind(tangon)();
            tangon = _closure2_slot7;
            michal = tangon.get;
            michal = michal.bind(tangon)();
            michal = zuuluu + michal;
            entity['height'] = michal;
            michal = 0;
            entity['bottom'] = michal;
            return entity;
        };
        offset = {};
        offset['radius'] = kiloes;
        offset['height'] = backup;
        offset['offset'] = foxtra;
        zuuluu['__closure'] = offset;
        offset = 16593476434034.0;
        zuuluu['__workletHash'] = offset;
        offset = _closure1_slot26;
        zuuluu['__initData'] = offset;
        report = report.bind(golfie)(zuuluu);
        zuuluu = _closure1_slot19;
        offset = zuuluu.bind(tangon)();
        zuuluu = _closure1_slot13;
        entity = verify[entity];
        entity = michal.bind(tangon)(entity);
        michal = entity.View;
        entity = {};
        entity['style'] = report;
        golfie = _closure1_slot13;
        report = 15;
        report = verify[report];
        report = oscard.bind(tangon)(report);
        oscard = report.Svg;
        report = {};
        verify = _closure1_slot13;
        option = {};
        option['animatedProps'] = romeon;
        option['opacity'] = yankee;
        option = verify.bind(tangon)(offset, option);
        report['children'] = option;
        report = golfie.bind(tangon)(oscard, report);
        entity['children'] = report;
        entity = zuuluu.bind(tangon)(michal, entity);
        return entity;
    };
    michal = option.bind(verify)(michal);
    var _closure1_slot27 = michal;
    option = {};
    offset = 'function VoiceMessageOverlayTsx5(){const{voiceMessageAnimationState,runOnJS,setVoiceMessageState}=this.__closure;if(voiceMessageAnimationState.get()==null)return;runOnJS(setVoiceMessageState)(voiceMessageAnimationState.get()[1]);return voiceMessageAnimationState.get();}';
    option['code'] = offset;
    var _closure1_slot28 = option;
    option = {};
    offset = 'function VoiceMessageOverlayTsx6(){const{initialAnimation,recordingAnimation,INITIAL_SHIFT}=this.__closure;const animationValue=Math.min(initialAnimation.get(),recordingAnimation.get());return{opacity:animationValue,marginBottom:-INITIAL_SHIFT*(1-animationValue)};}';
    option['code'] = offset;
    var _closure1_slot29 = option;
    offset = verify.memo;
    option = function(argFoo) {
        _fun00013: for(var _fun00014_ip = 0; ; ) switch(_fun00014_ip) {
 0:
            michal = argFoo;
            verify = michal.initialAnimation;
            var _closure2_slot0 = verify;
            option = michal.recordingAnimation;
            var _closure2_slot1 = option;
            offset = michal.exiting;
            report = undefined;
            var _closure2_slot4 = report;
            tangon = _closure1_slot9;
            zuuluu = function(argFoo) {
                entity = argFoo;
                entity = entity.voiceMessageAnimationState;
                return entity;
            };
            output = tangon.bind(report)(zuuluu);
            var _closure2_slot2 = output;
            zuuluu = function(argFoo) {
                entity = argFoo;
                entity = entity.isUsingHoldGesture;
                return entity;
            };
            oscard = tangon.bind(report)(zuuluu);
            yankee = _closure1_slot4;
            golfie = yankee.useState;
            zuuluu = _closure1_slot10;
            zuuluu = zuuluu.SENDING;
            yankee = golfie.bind(yankee)(zuuluu);
            golfie = _closure1_slot3;
            zuuluu = 2;
            golfie = golfie.bind(report)(yankee, zuuluu);
            zuuluu = 0;
            yankee = golfie[zuuluu];
            zuuluu = 1;
            sizing = golfie[zuuluu];
            var _closure2_slot3 = sizing;
            zuuluu = function(argFoo) {
                entity = argFoo;
                michal = entity.savedVoiceMessageUploadData;
                entity = null;
                entity = entity != michal;
                return entity;
            };
            tangon = tangon.bind(report)(zuuluu);
            result = _closure1_slot0;
            backup = _closure1_slot2;
            golfie = 10;
            zuuluu = backup[golfie];
            foxtra = result.bind(report)(zuuluu);
            romeon = foxtra.useDerivedValue;
            zuuluu = function() { // Original name: c
                _fun00015: for(var _fun00016_ip = 0; ; ) switch(_fun00016_ip) {
 0:
                    zuuluu = _closure2_slot2;
                    michal = zuuluu.get;
                    zuuluu = michal.bind(zuuluu)();
                    michal = null;
                    if(!(michal == zuuluu)) { _fun00016_ip = 26; continue _fun00015 }
 22:
                    michal = undefined;
                    return michal;
 26:
                    zuuluu = _closure1_slot0;
                    tangon = _closure1_slot2;
                    michal = 10;
                    michal = tangon[michal];
                    tangon = undefined;
                    report = zuuluu.bind(tangon)(michal);
                    zuuluu = report.runOnJS;
                    michal = _closure2_slot3;
                    zuuluu = zuuluu.bind(report)(michal);
                    michal = _closure2_slot2;
                    entity = michal.get;
                    report = entity.bind(michal)();
                    entity = 1;
                    entity = report[entity];
                    entity = zuuluu.bind(tangon)(entity);
                    entity = michal.get;
                    entity = entity.bind(michal)();
                    return entity;
                }
            };
            kiloes = {};
            kiloes['voiceMessageAnimationState'] = output;
            output = backup[golfie];
            output = result.bind(report)(output);
            output = output.runOnJS;
            kiloes['runOnJS'] = output;
            kiloes['setVoiceMessageState'] = sizing;
            zuuluu['__closure'] = kiloes;
            kiloes = 8577984959763.0;
            zuuluu['__workletHash'] = kiloes;
            kiloes = _closure1_slot28;
            zuuluu['__initData'] = kiloes;
            zuuluu = romeon.bind(foxtra)(zuuluu);
            romeon = _closure1_slot4;
            zuuluu = romeon.useRef;
            romeon = zuuluu.bind(romeon)(report);
            var _closure2_slot5 = romeon;
            foxtra = _closure1_slot1;
            zuuluu = 20;
            zuuluu = backup[zuuluu];
            zuuluu = foxtra.bind(report)(zuuluu);
            zuuluu = zuuluu.bind(report)(romeon);
            if(offset) { _fun00014_ip = 795; continue _fun00013 }
 285:
            if(!tangon) { _fun00014_ip = 357; continue _fun00013 }
 288:
            if(oscard) { _fun00014_ip = 357; continue _fun00013 }
 291:
            foxtra = _closure1_slot0;
            backup = _closure1_slot2;
            oscard = 21;
            offset = backup[oscard];
            offset = foxtra.bind(report)(offset);
            romeon = offset.intl;
            offset = romeon.string;
            oscard = backup[oscard];
            oscard = foxtra.bind(report)(oscard);
            oscard = oscard.t;
            oscard = oscard.m+sRVF;
            oscard = offset.bind(romeon)(oscard);
            _closure2_slot4 = oscard;
            _fun00014_ip = 802; continue _fun00013;
 357:
            if(!tangon) { _fun00014_ip = 377; continue _fun00013 }
 360:
            offset = _closure1_slot10;
            offset = offset.SENDING;
            if(!(yankee !== offset)) { _fun00014_ip = 729; continue _fun00013 }
 377:
            if(!tangon) { _fun00014_ip = 397; continue _fun00013 }
 380:
            offset = _closure1_slot10;
            offset = offset.CANCELLING;
            if(!(yankee !== offset)) { _fun00014_ip = 663; continue _fun00013 }
 397:
            if(tangon) { _fun00014_ip = 483; continue _fun00013 }
 400:
            offset = _closure1_slot10;
            offset = offset.SENDING;
            if(!(yankee === offset)) { _fun00014_ip = 483; continue _fun00013 }
 414:
            backup = _closure1_slot0;
            kiloes = _closure1_slot2;
            offset = 21;
            romeon = kiloes[offset];
            romeon = backup.bind(report)(romeon);
            foxtra = romeon.intl;
            romeon = foxtra.string;
            offset = kiloes[offset];
            offset = backup.bind(report)(offset);
            offset = offset.t;
            offset = offset.cyL7DA;
            offset = romeon.bind(foxtra)(offset);
            _closure2_slot4 = offset;
            oscard = offset;
            _fun00014_ip = 802; continue _fun00013;
 483:
            if(tangon) { _fun00014_ip = 569; continue _fun00013 }
 486:
            offset = _closure1_slot10;
            offset = offset.CANCELLING;
            if(!(yankee === offset)) { _fun00014_ip = 569; continue _fun00013 }
 500:
            backup = _closure1_slot0;
            kiloes = _closure1_slot2;
            offset = 21;
            romeon = kiloes[offset];
            romeon = backup.bind(report)(romeon);
            foxtra = romeon.intl;
            romeon = foxtra.string;
            offset = kiloes[offset];
            offset = backup.bind(report)(offset);
            offset = offset.t;
            offset = offset.a+A3+f;
            offset = romeon.bind(foxtra)(offset);
            _closure2_slot4 = offset;
            oscard = offset;
            _fun00014_ip = 802; continue _fun00013;
 569:
            if(tangon) { _fun00014_ip = 586; continue _fun00013 }
 572:
            offset = _closure1_slot10;
            offset = offset.LOCKING;
            tangon = yankee !== offset;
 586:
            oscard = undefined;
            if(tangon) { _fun00014_ip = 802; continue _fun00013 }
 594:
            romeon = _closure1_slot0;
            foxtra = _closure1_slot2;
            tangon = 21;
            offset = foxtra[tangon];
            offset = romeon.bind(report)(offset);
            yankee = offset.intl;
            offset = yankee.string;
            tangon = foxtra[tangon];
            tangon = romeon.bind(report)(tangon);
            tangon = tangon.t;
            tangon = tangon.3qvtkp;
            tangon = offset.bind(yankee)(tangon);
            _closure2_slot4 = tangon;
            oscard = tangon;
            _fun00014_ip = 802; continue _fun00013;
 663:
            romeon = _closure1_slot0;
            foxtra = _closure1_slot2;
            tangon = 21;
            offset = foxtra[tangon];
            offset = romeon.bind(report)(offset);
            yankee = offset.intl;
            offset = yankee.string;
            tangon = foxtra[tangon];
            tangon = romeon.bind(report)(tangon);
            tangon = tangon.t;
            tangon = tangon.sB81Bg;
            tangon = offset.bind(yankee)(tangon);
            _closure2_slot4 = tangon;
            oscard = tangon;
            _fun00014_ip = 802; continue _fun00013;
 729:
            romeon = _closure1_slot0;
            foxtra = _closure1_slot2;
            tangon = 21;
            offset = foxtra[tangon];
            offset = romeon.bind(report)(offset);
            yankee = offset.intl;
            offset = yankee.string;
            tangon = foxtra[tangon];
            tangon = romeon.bind(report)(tangon);
            tangon = tangon.t;
            tangon = tangon.zPxm/f;
            tangon = offset.bind(yankee)(tangon);
            _closure2_slot4 = tangon;
            oscard = tangon;
            _fun00014_ip = 802; continue _fun00013;
 795:
            _closure2_slot4 = zuuluu;
            oscard = zuuluu;
 802:
            yankee = _closure1_slot4;
            offset = yankee.useEffect;
            tangon = new Array(1);
            tangon[0] = oscard;
            zuuluu = function() {
                michal = _closure2_slot5;
                entity = _closure2_slot4;
                michal['current'] = entity;
                entity = undefined;
                return entity;
            };
            zuuluu = offset.bind(yankee)(zuuluu, tangon);
            tangon = _closure1_slot0;
            zuuluu = _closure1_slot2;
            zuuluu = zuuluu[golfie];
            tangon = tangon.bind(report)(zuuluu);
            zuuluu = tangon.useAnimatedStyle;
            entity = function() { // Original name: p
                entity = global;
                tangon = entity.Math;
                zuuluu = tangon.min;
                report = _closure2_slot0;
                michal = report.get;
                michal = michal.bind(report)();
                report = _closure2_slot1;
                entity = report.get;
                entity = entity.bind(report)();
                zuuluu = zuuluu.bind(tangon)(michal, entity);
                entity = {};
                entity['opacity'] = zuuluu;
                michal = 1;
                zuuluu = michal - zuuluu;
                michal = -8;
                michal = michal * zuuluu;
                entity['marginBottom'] = michal;
                return entity;
            };
            golfie = {};
            golfie['initialAnimation'] = verify;
            golfie['recordingAnimation'] = option;
            option = 8;
            golfie['INITIAL_SHIFT'] = option;
            entity['__closure'] = golfie;
            golfie = 60645179998.0;
            entity['__workletHash'] = golfie;
            golfie = _closure1_slot29;
            entity['__initData'] = golfie;
            golfie = zuuluu.bind(tangon)(entity);
            entity = null;
            zuuluu = entity == oscard;
            if(zuuluu) { _fun00014_ip = 966; continue _fun00013 }
 928:
            tangon = _closure1_slot13;
            zuuluu = _closure1_slot18;
            michal = {'style': null, 'variant': 'text-sm/medium', 'color': 'always-white'};
            michal['style'] = golfie;
            michal['children'] = oscard;
            entity = tangon.bind(report)(zuuluu, michal);
 966:
            return entity;
        }
    };
    option = offset.bind(verify)(option);
    var _closure1_slot30 = option;
    option = {};
    offset = 'function VoiceMessageOverlayTsx7(){const{voiceMessageAnimationState,withTiming,Easing}=this.__closure;const currValue=voiceMessageAnimationState.get()[1];return withTiming(currValue,{easing:Easing.linear,duration:150});}';
    option['code'] = offset;
    var _closure1_slot31 = option;
    option = {};
    offset = 'function VoiceMessageOverlayTsx8(){const{voiceMessageAnimationState,sendingColor,lockingColor,lockedColor,cancelingColor,interpolateColor,timing,VOICE_MESSAGE_ANIMATION_STATES}=this.__closure;const[prevValue,currValue]=voiceMessageAnimationState.get();const distance=prevValue+currValue;const colors=distance===2?[sendingColor,sendingColor,lockingColor,lockedColor]:[sendingColor,cancelingColor,lockingColor,lockedColor];return interpolateColor(timing.get(),VOICE_MESSAGE_ANIMATION_STATES,colors);}';
    option['code'] = offset;
    var _closure1_slot32 = option;
    option = function(argFoo, argBar, argBaz, argCor, argGra) { // Original name: useDerivedColors
        kiloes = argFoo;
        backup = argBar;
        yankee = argBaz;
        foxtra = argCor;
        romeon = argGra;
        var _closure2_slot0 = kiloes;
        var _closure2_slot1 = backup;
        var _closure2_slot2 = yankee;
        var _closure2_slot3 = foxtra;
        var _closure2_slot4 = romeon;
        verify = _closure1_slot0;
        offset = _closure1_slot2;
        golfie = 10;
        michal = offset[golfie];
        option = undefined;
        report = verify.bind(option)(michal);
        zuuluu = report.useDerivedValue;
        michal = function() { // Original name: u
            michal = _closure2_slot0;
            entity = michal.get;
            michal = entity.bind(michal)();
            entity = 1;
            tangon = michal[entity];
            golfie = _closure1_slot0;
            option = _closure1_slot2;
            entity = 22;
            entity = option[entity];
            oscard = undefined;
            zuuluu = golfie.bind(oscard)(entity);
            michal = zuuluu.withTiming;
            entity = {};
            report = 10;
            report = option[report];
            report = golfie.bind(oscard)(report);
            report = report.Easing;
            report = report.linear;
            entity['easing'] = report;
            report = 150;
            entity['duration'] = report;
            entity = michal.bind(zuuluu)(tangon, entity);
            return entity;
        };
        oscard = {};
        oscard['voiceMessageAnimationState'] = kiloes;
        sizing = 22;
        sizing = offset[sizing];
        sizing = verify.bind(option)(sizing);
        sizing = sizing.withTiming;
        oscard['withTiming'] = sizing;
        sizing = offset[golfie];
        sizing = verify.bind(option)(sizing);
        sizing = sizing.Easing;
        oscard['Easing'] = sizing;
        michal['__closure'] = oscard;
        oscard = 7432526131204.0;
        michal['__workletHash'] = oscard;
        oscard = _closure1_slot31;
        michal['__initData'] = oscard;
        oscard = zuuluu.bind(report)(michal);
        var _closure2_slot5 = oscard;
        michal = offset[golfie];
        zuuluu = verify.bind(option)(michal);
        michal = zuuluu.useDerivedValue;
        entity = function() { // Original name: _
            _fun00017: for(var _fun00018_ip = 0; ; ) switch(_fun00018_ip) {
 0:
                zuuluu = _closure2_slot0;
                entity = zuuluu.get;
                report = entity.bind(zuuluu)();
                zuuluu = _closure1_slot3;
                oscard = undefined;
                tangon = 2;
                golfie = zuuluu.bind(oscard)(report, tangon);
                zuuluu = 0;
                report = golfie[zuuluu];
                zuuluu = 1;
                zuuluu = golfie[zuuluu];
                zuuluu = report + zuuluu;
                if(!(zuuluu !== tangon)) { _fun00018_ip = 93; continue _fun00017 }
 55:
                zuuluu = _closure2_slot1;
                report = new Array(4);
                report[0] = zuuluu;
                zuuluu = _closure2_slot2;
                report[1] = zuuluu;
                zuuluu = _closure2_slot3;
                report[2] = zuuluu;
                zuuluu = _closure2_slot4;
                report[3] = zuuluu;
                _fun00018_ip = 128; continue _fun00017;
 93:
                tangon = _closure2_slot1;
                zuuluu = new Array(4);
                zuuluu[0] = tangon;
                zuuluu[1] = tangon;
                tangon = _closure2_slot3;
                zuuluu[2] = tangon;
                tangon = _closure2_slot4;
                zuuluu[3] = tangon;
                report = zuuluu;
 128:
                tangon = _closure1_slot0;
                golfie = _closure1_slot2;
                zuuluu = 10;
                zuuluu = golfie[zuuluu];
                tangon = tangon.bind(oscard)(zuuluu);
                zuuluu = tangon.interpolateColor;
                oscard = _closure2_slot5;
                michal = oscard.get;
                michal = michal.bind(oscard)();
                entity = _closure1_slot22;
                entity = zuuluu.bind(tangon)(michal, entity, report);
                return entity;
            }
        };
        report = {};
        report['voiceMessageAnimationState'] = kiloes;
        report['sendingColor'] = backup;
        report['lockingColor'] = foxtra;
        report['lockedColor'] = romeon;
        report['cancelingColor'] = yankee;
        golfie = offset[golfie];
        golfie = verify.bind(option)(golfie);
        golfie = golfie.interpolateColor;
        report['interpolateColor'] = golfie;
        report['timing'] = oscard;
        oscard = _closure1_slot22;
        report['VOICE_MESSAGE_ANIMATION_STATES'] = oscard;
        entity['__closure'] = report;
        report = 8474040050475.0;
        entity['__workletHash'] = report;
        tangon = _closure1_slot32;
        entity['__initData'] = tangon;
        entity = michal.bind(zuuluu)(entity);
        return entity;
    };
    var _closure1_slot33 = option;
    option = {};
    offset = 'function VoiceMessageOverlayTsx9(){const{voiceMessageAnimationState,withTiming,Easing}=this.__closure;const currValue=voiceMessageAnimationState.get()[1];return withTiming(currValue,{easing:Easing.linear,duration:150});}';
    option['code'] = offset;
    var _closure1_slot34 = option;
    option = {};
    offset = 'function VoiceMessageOverlayTsx10(){const{voiceMessageAnimationState,interpolate,timing,VOICE_MESSAGE_ANIMATION_STATES}=this.__closure;const[prevValue,currValue]=voiceMessageAnimationState.get();const distance=prevValue+currValue;const opacity=distance===2?[1,1,1,0]:[1,0,1,0];return interpolate(timing.get(),VOICE_MESSAGE_ANIMATION_STATES,opacity);}';
    option['code'] = offset;
    var _closure1_slot35 = option;
    option = {};
    offset = 'function VoiceMessageOverlayTsx11(){const{interpolate,timing,VOICE_MESSAGE_ANIMATION_STATES}=this.__closure;return{height:interpolate(timing.get(),VOICE_MESSAGE_ANIMATION_STATES,[68,68,104,104])};}';
    option['code'] = offset;
    var _closure1_slot36 = option;
    option = {};
    offset = 'function VoiceMessageOverlayTsx12(){const{interpolate,timing,VOICE_MESSAGE_ANIMATION_STATES,lockContainerOpacity,lockedBackgroundColor}=this.__closure;return{width:interpolate(timing.get(),VOICE_MESSAGE_ANIMATION_STATES,[40,40,56,56]),height:interpolate(timing.get(),VOICE_MESSAGE_ANIMATION_STATES,[68,68,56,56]),opacity:lockContainerOpacity.get(),backgroundColor:lockedBackgroundColor.get(),marginHorizontal:interpolate(timing.get(),VOICE_MESSAGE_ANIMATION_STATES,[0,0,-8,-8]),marginBottom:interpolate(timing.get(),VOICE_MESSAGE_ANIMATION_STATES,[0,0,36,36])};}';
    option['code'] = offset;
    var _closure1_slot37 = option;
    option = {};
    offset = 'function VoiceMessageOverlayTsx13(){const{interpolate,timing,VOICE_MESSAGE_ANIMATION_STATES,lockIconColor}=this.__closure;return{width:interpolate(timing.get(),VOICE_MESSAGE_ANIMATION_STATES,[24,24,32,32]),height:interpolate(timing.get(),VOICE_MESSAGE_ANIMATION_STATES,[24,24,32,32]),marginTop:interpolate(timing.get(),VOICE_MESSAGE_ANIMATION_STATES,[12,12,10,10]),tintColor:lockIconColor.get()};}';
    option['code'] = offset;
    var _closure1_slot38 = option;
    option = {};
    offset = 'function VoiceMessageOverlayTsx14(){const{interpolate,timing,VOICE_MESSAGE_ANIMATION_STATES}=this.__closure;return{opacity:interpolate(timing.get(),VOICE_MESSAGE_ANIMATION_STATES,[1,1,0,0])};}';
    option['code'] = offset;
    var _closure1_slot39 = option;
    option = {};
    offset = 'function VoiceMessageOverlayTsx15(){const{voiceMessageAnimationState,VoiceMessageAnimationState}=this.__closure;return voiceMessageAnimationState.get()[1]===VoiceMessageAnimationState.LOCKED||voiceMessageAnimationState.get()[1]===VoiceMessageAnimationState.LOCKING;}';
    option['code'] = offset;
    var _closure1_slot40 = option;
    option = {};
    offset = 'function VoiceMessageOverlayTsx16(result,previous){const{runOnJS,setLocked}=this.__closure;if(result!==previous){runOnJS(setLocked)(result);}}';
    option['code'] = offset;
    var _closure1_slot41 = option;
    option = {};
    offset = 'function VoiceMessageOverlayTsx17(){const{initialAnimation,keyboardHeight,safeAreaBottom,INPUT_HEIGHT,INITIAL_SHIFT}=this.__closure;return{opacity:initialAnimation.get(),bottom:keyboardHeight+safeAreaBottom+INPUT_HEIGHT+(32-INITIAL_SHIFT)+INITIAL_SHIFT*initialAnimation.get()};}';
    option['code'] = offset;
    var _closure1_slot42 = option;
    option = {};
    offset = 'function VoiceMessageOverlayTsx18(){const{INITIAL_SHIFT,initialAnimation,trashContainerBgColor}=this.__closure;return{marginLeft:INITIAL_SHIFT*2*(1-initialAnimation.get()),marginRight:8-INITIAL_SHIFT*2*(1-initialAnimation.get()),backgroundColor:trashContainerBgColor.get()};}';
    option['code'] = offset;
    var _closure1_slot43 = option;
    option = {};
    offset = 'function VoiceMessageOverlayTsx19(){const{trashIconColor}=this.__closure;return{tintColor:trashIconColor.get()};}';
    option['code'] = offset;
    var _closure1_slot44 = option;
    option = {};
    offset = 'function VoiceMessageOverlayTsx20(){const{recordingAnimation,sendContainerBgColor}=this.__closure;return{opacity:0.5+0.5*recordingAnimation.get(),backgroundColor:sendContainerBgColor.get()};}';
    option['code'] = offset;
    var _closure1_slot45 = option;
    option = {};
    offset = 'function VoiceMessageOverlayTsx21(){const{sendIconColor}=this.__closure;return{tintColor:sendIconColor.get()};}';
    option['code'] = offset;
    var _closure1_slot46 = option;
    option = {};
    offset = 'function VoiceMessageOverlayTsx22(){const{initialAnimation}=this.__closure;return{opacity:initialAnimation.get()};}';
    option['code'] = offset;
    var _closure1_slot47 = option;
    option = {};
    offset = 'function VoiceMessageOverlayTsx23(){const{exiting,INITIAL_SHIFT,initialAnimation,keyboardHeight}=this.__closure;const shift=exiting?INITIAL_SHIFT*3:INITIAL_SHIFT*1.5;return{opacity:initialAnimation.get(),bottom:keyboardHeight-shift*(1-initialAnimation.get())};}';
    option['code'] = offset;
    var _closure1_slot48 = option;
    option = {};
    offset = 'function VoiceMessageOverlayTsx24(){const{safeAreaBottom,INPUT_HEIGHT,recordingAnimation}=this.__closure;return safeAreaBottom+INPUT_HEIGHT*(1.6+0.3*recordingAnimation.get());}';
    option['code'] = offset;
    var _closure1_slot49 = option;
    option = {};
    offset = 'function VoiceMessageOverlayTsx25(){const{safeAreaBottom,INPUT_HEIGHT}=this.__closure;return safeAreaBottom+INPUT_HEIGHT*1.6;}';
    option['code'] = offset;
    var _closure1_slot50 = option;
    offset = verify.memo;
    option = function(argFoo) {
        _fun00019: for(var _fun00020_ip = 0; ; ) switch(_fun00020_ip) {
 0:
            entity = argFoo;
            echoed = entity.channelId;
            var _closure2_slot0 = echoed;
            verify = entity.voiceMessageAnimationState;
            output = entity.exiting;
            var _closure2_slot1 = output;
            entity = _closure1_slot20;
            tangon = undefined;
            status = entity.bind(tangon)();
            cntext = _closure1_slot1;
            limora = _closure1_slot2;
            entity = 29;
            entity = limora[entity];
            entity = cntext.bind(tangon)(entity);
            entity = entity.bind(tangon)();
            romeon = entity.keyboardHeight;
            var _closure2_slot2 = romeon;
            yankee = entity.safeAreaBottom;
            var _closure2_slot3 = yankee;
            michal = _closure1_slot9;
            entity = function(argFoo) {
                entity = argFoo;
                michal = entity.startTimeMillis;
                entity = null;
                entity = entity != michal;
                return entity;
            };
            record = michal.bind(tangon)(entity);
            entity = function(argFoo, argBar) { // Original name: useEntryAnimationValues
                golfie = argFoo;
                offset = argBar;
                var _closure3_slot0 = golfie;
                var _closure3_slot1 = offset;
                option = _closure1_slot0;
                verify = _closure1_slot2;
                michal = 10;
                zuuluu = verify[michal];
                report = undefined;
                yankee = option.bind(report)(zuuluu);
                zuuluu = yankee.useSharedValue;
                oscard = 0;
                zuuluu = zuuluu.bind(yankee)(oscard);
                var _closure3_slot2 = zuuluu;
                foxtra = _closure1_slot4;
                romeon = foxtra.useRef;
                yankee = global;
                backup = yankee.performance;
                yankee = backup.now;
                yankee = yankee.bind(backup)();
                yankee = romeon.bind(foxtra)(yankee);
                var _closure3_slot3 = yankee;
                backup = _closure1_slot4;
                foxtra = backup.useEffect;
                romeon = new Array(1);
                romeon[0] = zuuluu;
                yankee = function() {
                    tangon = _closure3_slot2;
                    zuuluu = tangon.set;
                    offset = _closure1_slot0;
                    yankee = _closure1_slot2;
                    michal = 10;
                    report = yankee[michal];
                    entity = undefined;
                    golfie = offset.bind(entity)(report);
                    oscard = golfie.withDelay;
                    report = 22;
                    report = yankee[report];
                    verify = offset.bind(entity)(report);
                    option = verify.withTiming;
                    report = {};
                    michal = yankee[michal];
                    michal = offset.bind(entity)(michal);
                    michal = michal.Easing;
                    michal = michal.quad;
                    report['easing'] = michal;
                    michal = 250;
                    report['duration'] = michal;
                    michal = 1;
                    report = option.bind(verify)(michal, report);
                    michal = 500;
                    michal = oscard.bind(golfie)(michal, report);
                    michal = zuuluu.bind(tangon)(michal);
                    return entity;
                };
                yankee = foxtra.bind(backup)(yankee, romeon);
                foxtra = _closure1_slot4;
                romeon = foxtra.useEffect;
                yankee = new Array(2);
                yankee[0] = zuuluu;
                yankee[1] = offset;
                offset = function() {
                    _fun00021: for(var _fun00022_ip = 0; ; ) switch(_fun00022_ip) {
 0:
                        michal = _closure3_slot1;
                        if(!michal) { _fun00022_ip = 100; continue _fun00021 }
 10:
                        zuuluu = _closure3_slot2;
                        michal = zuuluu.set;
                        option = _closure1_slot0;
                        verify = _closure1_slot2;
                        entity = 22;
                        entity = verify[entity];
                        golfie = undefined;
                        oscard = option.bind(golfie)(entity);
                        report = oscard.withTiming;
                        tangon = {};
                        entity = 10;
                        entity = verify[entity];
                        entity = option.bind(golfie)(entity);
                        entity = entity.Easing;
                        entity = entity.quad;
                        tangon['easing'] = entity;
                        entity = 100;
                        tangon['duration'] = entity;
                        entity = 0;
                        entity = report.bind(oscard)(entity, tangon);
                        entity = michal.bind(zuuluu)(entity);
 100:
                        entity = undefined;
                        return entity;
                    }
                };
                offset = romeon.bind(foxtra)(offset, yankee);
                michal = verify[michal];
                report = option.bind(report)(michal);
                michal = report.useSharedValue;
                michal = michal.bind(report)(oscard);
                var _closure3_slot4 = michal;
                oscard = _closure1_slot4;
                report = oscard.useEffect;
                tangon = new Array(3);
                tangon[0] = zuuluu;
                tangon[1] = michal;
                tangon[2] = golfie;
                entity = function() {
                    _fun00023: for(var _fun00024_ip = 0; ; ) switch(_fun00024_ip) {
 0:
                        entity = _closure3_slot0;
                        if(!entity) { _fun00024_ip = 221; continue _fun00023 }
 13:
                        golfie = _closure3_slot4;
                        report = golfie.set;
                        romeon = _closure1_slot0;
                        oscard = _closure1_slot2;
                        entity = 22;
                        zuuluu = oscard[entity];
                        verify = undefined;
                        yankee = romeon.bind(verify)(zuuluu);
                        option = yankee.withTiming;
                        zuuluu = {};
                        offset = 10;
                        oscard = oscard[offset];
                        oscard = romeon.bind(verify)(oscard);
                        oscard = oscard.Easing;
                        oscard = oscard.quad;
                        zuuluu['easing'] = oscard;
                        oscard = 200;
                        zuuluu['duration'] = oscard;
                        oscard = 1;
                        zuuluu = option.bind(yankee)(oscard, zuuluu);
                        zuuluu = report.bind(golfie)(zuuluu);
                        zuuluu = global;
                        report = zuuluu.performance;
                        zuuluu = report.now;
                        report = zuuluu.bind(report)();
                        zuuluu = _closure3_slot3;
                        zuuluu = zuuluu.current;
                        report = report - zuuluu;
                        zuuluu = 500;
                        if(!(!(report >= zuuluu))) { _fun00024_ip = 221; continue _fun00023 }
 144:
                        zuuluu = _closure3_slot2;
                        michal = zuuluu.set;
                        option = _closure1_slot0;
                        golfie = _closure1_slot2;
                        entity = golfie[entity];
                        report = option.bind(verify)(entity);
                        tangon = report.withTiming;
                        entity = {};
                        golfie = golfie[offset];
                        golfie = option.bind(verify)(golfie);
                        golfie = golfie.Easing;
                        golfie = golfie.quad;
                        entity['easing'] = golfie;
                        golfie = 250;
                        entity['duration'] = golfie;
                        entity = tangon.bind(report)(oscard, entity);
                        entity = michal.bind(zuuluu)(entity);
 221:
                        entity = undefined;
                        return entity;
                    }
                };
                entity = report.bind(oscard)(entity, tangon);
                entity = {};
                entity['initialAnimation'] = zuuluu;
                entity['recordingAnimation'] = michal;
                return entity;
            };
            entity = entity.bind(tangon)(record, output);
            offset = entity.initialAnimation;
            var _closure2_slot4 = offset;
            result = entity.recordingAnimation;
            var _closure2_slot5 = result;
            report = _closure1_slot4;
            zuuluu = report.useEffect;
            michal = new Array(1);
            michal[0] = echoed;
            entity = function() {
                report = _closure1_slot6;
                tangon = report.addEventListener;
                zuuluu = 'change';
                michal = function(argFoo) {
                    _fun00025: for(var _fun00026_ip = 0; ; ) switch(_fun00026_ip) {
 0:
                        zuuluu = argFoo;
                        entity = 'inactive';
                        entity = entity !== zuuluu;
                        if(!entity) { _fun00026_ip = 22; continue _fun00025 }
 14:
                        michal = 'background';
                        entity = michal !== zuuluu;
 22:
                        if(entity) { _fun00026_ip = 124; continue _fun00025 }
 25:
                        option = _closure1_slot0;
                        verify = _closure1_slot2;
                        michal = 30;
                        michal = verify[michal];
                        golfie = undefined;
                        michal = option.bind(golfie)(michal);
                        report = michal.ComponentDispatch;
                        tangon = report.dispatchKeyed;
                        entity = _closure1_slot11;
                        zuuluu = entity.VOICE_MESSAGE_SEND;
                        michal = _closure2_slot0;
                        entity = {};
                        oscard = true;
                        entity['isCancelling'] = oscard;
                        oscard = 31;
                        oscard = verify[oscard];
                        oscard = option.bind(golfie)(oscard);
                        oscard = oscard.VoiceMessageRecordingResult;
                        oscard = oscard.CANCELLED_ON_BACKGROUND;
                        entity['cancelReason'] = oscard;
                        entity = tangon.bind(report)(zuuluu, michal, entity);
 124:
                        entity = undefined;
                        return entity;
                    }
                };
                michal = tangon.bind(report)(zuuluu, michal);
                var _closure3_slot0 = michal;
                entity = function() {
                    michal = _closure3_slot0;
                    entity = michal.remove;
                    entity = entity.bind(michal)();
                    entity = undefined;
                    return entity;
                };
                return entity;
            };
            entity = zuuluu.bind(report)(entity, michal);
            entity = 32;
            entity = limora[entity];
            entity = cntext.bind(tangon)(entity);
            entity = entity.bind(tangon)();
            michal = entity.width;
            entity = 5;
            michal = entity * michal;
            entity = 2;
            source = michal / entity;
            option = _closure1_slot33;
            entity = 17;
            michal = limora[entity];
            michal = cntext.bind(tangon)(michal);
            michal = michal.unsafe_rawColors;
            variable43 = michal.BRAND_600;
            michal = limora[entity];
            michal = cntext.bind(tangon)(michal);
            michal = michal.unsafe_rawColors;
            variable42 = michal.RED_500;
            michal = limora[entity];
            michal = cntext.bind(tangon)(michal);
            michal = michal.unsafe_rawColors;
            variable41 = michal.BRAND_600;
            michal = limora[entity];
            michal = cntext.bind(tangon)(michal);
            michal = michal.unsafe_rawColors;
            variable40 = michal.BRAND_600;
            variable45 = undefined;
            variable44 = verify;
            variable38 = variable45[option](variable44, variable43, variable42, variable41, variable40, variable39);
            option = _closure1_slot33;
            michal = limora[entity];
            michal = cntext.bind(tangon)(michal);
            michal = michal.unsafe_rawColors;
            variable43 = michal.BRAND_600;
            michal = limora[entity];
            michal = cntext.bind(tangon)(michal);
            michal = michal.unsafe_rawColors;
            variable42 = michal.WHITE_500;
            michal = limora[entity];
            michal = cntext.bind(tangon)(michal);
            michal = michal.unsafe_rawColors;
            variable41 = michal.BRAND_600;
            michal = limora[entity];
            michal = cntext.bind(tangon)(michal);
            michal = michal.unsafe_rawColors;
            variable40 = michal.BRAND_600;
            variable45 = undefined;
            variable44 = verify;
            foxtra = variable45[option](variable44, variable43, variable42, variable41, variable40, variable39);
            var _closure2_slot6 = foxtra;
            sierra = _closure1_slot0;
            update = 10;
            michal = limora[update];
            report = sierra.bind(tangon)(michal);
            zuuluu = report.useAnimatedStyle;
            michal = function() { // Original name: O
                entity = {};
                oscard = _closure2_slot4;
                zuuluu = oscard.get;
                zuuluu = zuuluu.bind(oscard)();
                tangon = 1;
                zuuluu = tangon - zuuluu;
                report = 16;
                zuuluu = report * zuuluu;
                entity['marginLeft'] = zuuluu;
                zuuluu = oscard.get;
                zuuluu = zuuluu.bind(oscard)();
                zuuluu = tangon - zuuluu;
                tangon = 8;
                zuuluu = report * zuuluu;
                zuuluu = tangon - zuuluu;
                entity['marginRight'] = zuuluu;
                zuuluu = _closure2_slot6;
                michal = zuuluu.get;
                michal = michal.bind(zuuluu)();
                entity['backgroundColor'] = michal;
                return entity;
            };
            option = {};
            golfie = 8;
            option['INITIAL_SHIFT'] = golfie;
            option['initialAnimation'] = offset;
            option['trashContainerBgColor'] = foxtra;
            michal['__closure'] = option;
            option = 16442762939311.0;
            michal['__workletHash'] = option;
            option = _closure1_slot43;
            michal['__initData'] = option;
            config = zuuluu.bind(report)(michal);
            foxtra = _closure1_slot33;
            michal = limora[entity];
            michal = cntext.bind(tangon)(michal);
            michal = michal.unsafe_rawColors;
            variable43 = michal.WHITE_500;
            michal = limora[entity];
            michal = cntext.bind(tangon)(michal);
            michal = michal.unsafe_rawColors;
            variable42 = michal.RED_500;
            michal = limora[entity];
            michal = cntext.bind(tangon)(michal);
            michal = michal.unsafe_rawColors;
            variable41 = michal.WHITE_500;
            michal = limora[entity];
            michal = cntext.bind(tangon)(michal);
            michal = michal.unsafe_rawColors;
            variable40 = michal.WHITE_500;
            variable45 = undefined;
            variable44 = verify;
            foxtra = variable45[foxtra](variable44, variable43, variable42, variable41, variable40, variable39);
            var _closure2_slot7 = foxtra;
            michal = limora[update];
            report = sierra.bind(tangon)(michal);
            zuuluu = report.useAnimatedStyle;
            michal = function() { // Original name: w
                entity = {};
                zuuluu = _closure2_slot7;
                michal = zuuluu.get;
                michal = michal.bind(zuuluu)();
                entity['tintColor'] = michal;
                return entity;
            };
            option = {};
            option['trashIconColor'] = foxtra;
            michal['__closure'] = option;
            option = 4758994609248.0;
            michal['__workletHash'] = option;
            option = _closure1_slot44;
            michal['__initData'] = option;
            papara = zuuluu.bind(report)(michal);
            foxtra = _closure1_slot33;
            michal = limora[entity];
            michal = cntext.bind(tangon)(michal);
            michal = michal.unsafe_rawColors;
            variable43 = michal.WHITE_500;
            michal = limora[entity];
            michal = cntext.bind(tangon)(michal);
            michal = michal.unsafe_rawColors;
            variable42 = michal.RED_500;
            michal = limora[entity];
            michal = cntext.bind(tangon)(michal);
            michal = michal.unsafe_rawColors;
            variable41 = michal.BRAND_600;
            michal = limora[entity];
            michal = cntext.bind(tangon)(michal);
            michal = michal.unsafe_rawColors;
            variable40 = michal.WHITE_500;
            variable45 = undefined;
            variable44 = verify;
            foxtra = variable45[foxtra](variable44, variable43, variable42, variable41, variable40, variable39);
            var _closure2_slot8 = foxtra;
            michal = limora[update];
            report = sierra.bind(tangon)(michal);
            zuuluu = report.useAnimatedStyle;
            michal = function() { // Original name: k
                entity = {};
                tangon = _closure2_slot5;
                zuuluu = tangon.get;
                zuuluu = zuuluu.bind(tangon)();
                tangon = 0.5;
                zuuluu = tangon * zuuluu;
                zuuluu = tangon + zuuluu;
                entity['opacity'] = zuuluu;
                zuuluu = _closure2_slot8;
                michal = zuuluu.get;
                michal = michal.bind(zuuluu)();
                entity['backgroundColor'] = michal;
                return entity;
            };
            option = {};
            option['recordingAnimation'] = result;
            option['sendContainerBgColor'] = foxtra;
            michal['__closure'] = option;
            option = 2463646995928.0;
            michal['__workletHash'] = option;
            option = _closure1_slot45;
            michal['__initData'] = option;
            whisks = zuuluu.bind(report)(michal);
            report = _closure1_slot33;
            zuuluu = _closure1_slot21;
            michal = limora[entity];
            michal = cntext.bind(tangon)(michal);
            michal = michal.unsafe_rawColors;
            variable42 = michal.WHITE_500;
            entity = limora[entity];
            entity = cntext.bind(tangon)(entity);
            entity = entity.unsafe_rawColors;
            variable41 = entity.WHITE_500;
            variable45 = undefined;
            variable44 = verify;
            variable43 = zuuluu;
            variable40 = zuuluu;
            option = variable45[report](variable44, variable43, variable42, variable41, variable40, variable39);
            var _closure2_slot9 = option;
            entity = limora[update];
            zuuluu = sierra.bind(tangon)(entity);
            michal = zuuluu.useAnimatedStyle;
            entity = function() { // Original name: D
                entity = {};
                zuuluu = _closure2_slot9;
                michal = zuuluu.get;
                michal = michal.bind(zuuluu)();
                entity['tintColor'] = michal;
                return entity;
            };
            report = {};
            report['sendIconColor'] = option;
            entity['__closure'] = report;
            report = 13732877930795.0;
            entity['__workletHash'] = report;
            report = _closure1_slot46;
            entity['__initData'] = report;
            target = michal.bind(zuuluu)(entity);
            entity = limora[update];
            zuuluu = sierra.bind(tangon)(entity);
            michal = zuuluu.useAnimatedStyle;
            entity = function() { // Original name: x
                entity = {};
                zuuluu = _closure2_slot4;
                michal = zuuluu.get;
                michal = michal.bind(zuuluu)();
                entity['opacity'] = michal;
                return entity;
            };
            report = {};
            report['initialAnimation'] = offset;
            entity['__closure'] = report;
            report = 11009128299499.0;
            entity['__workletHash'] = report;
            report = _closure1_slot47;
            entity['__initData'] = report;
            kiloes = michal.bind(zuuluu)(entity);
            entity = limora[update];
            zuuluu = sierra.bind(tangon)(entity);
            michal = zuuluu.useAnimatedStyle;
            entity = function() { // Original name: b
                _fun00027: for(var _fun00028_ip = 0; ; ) switch(_fun00028_ip) {
 0:
                    entity = _closure2_slot1;
                    tangon = 12;
                    if(!entity) { _fun00028_ip = 16; continue _fun00027 }
 13:
                    tangon = 24;
 16:
                    entity = {};
                    report = _closure2_slot4;
                    zuuluu = report.get;
                    zuuluu = zuuluu.bind(report)();
                    entity['opacity'] = zuuluu;
                    zuuluu = _closure2_slot2;
                    michal = report.get;
                    report = michal.bind(report)();
                    michal = 1;
                    michal = michal - report;
                    michal = tangon * michal;
                    michal = zuuluu - michal;
                    entity['bottom'] = michal;
                    return entity;
                }
            };
            report = {};
            report['exiting'] = output;
            report['INITIAL_SHIFT'] = golfie;
            report['initialAnimation'] = offset;
            report['keyboardHeight'] = romeon;
            entity['__closure'] = report;
            report = 4588671012938.0;
            entity['__workletHash'] = report;
            report = _closure1_slot48;
            entity['__initData'] = report;
            foxtra = michal.bind(zuuluu)(entity);
            entity = 33;
            entity = limora[entity];
            zuuluu = sierra.bind(tangon)(entity);
            michal = zuuluu.useWakeLock;
            entity = 'VoiceMessageOverlay';
            entity = michal.bind(zuuluu)(entity);
            entity = limora[update];
            zuuluu = sierra.bind(tangon)(entity);
            michal = zuuluu.useDerivedValue;
            entity = function() { // Original name: Y
                michal = _closure2_slot3;
                zuuluu = _closure2_slot5;
                entity = zuuluu.get;
                zuuluu = entity.bind(zuuluu)();
                entity = 0.3;
                tangon = entity * zuuluu;
                zuuluu = 56;
                entity = 1.6;
                entity = entity + tangon;
                entity = zuuluu * entity;
                entity = michal + entity;
                return entity;
            };
            report = {};
            report['safeAreaBottom'] = yankee;
            golfie = 56;
            report['INPUT_HEIGHT'] = golfie;
            report['recordingAnimation'] = result;
            entity['__closure'] = report;
            report = 3973784432717.0;
            entity['__workletHash'] = report;
            report = _closure1_slot49;
            entity['__initData'] = report;
            backup = michal.bind(zuuluu)(entity);
            entity = limora[update];
            zuuluu = sierra.bind(tangon)(entity);
            michal = zuuluu.useDerivedValue;
            entity = function() { // Original name: ae
                michal = _closure2_slot3;
                entity = 89.60000000000001;
                entity = michal + entity;
                return entity;
            };
            report = {};
            report['safeAreaBottom'] = yankee;
            report['INPUT_HEIGHT'] = golfie;
            entity['__closure'] = report;
            report = 12973103584340.0;
            entity['__workletHash'] = report;
            report = _closure1_slot50;
            entity['__initData'] = report;
            ctrled = michal.bind(zuuluu)(entity);
            zuuluu = _closure1_slot14;
            michal = _closure1_slot15;
            entity = {};
            report = limora[update];
            report = cntext.bind(tangon)(report);
            golfie = report.View;
            report = {};
            sizing = status.container;
            option = new Array(2);
            option[0] = sizing;
            option[1] = foxtra;
            report['style'] = option;
            option = 'none';
            report['pointerEvents'] = option;
            foxtra = _closure1_slot13;
            sizing = _closure1_slot27;
            option = {'height': null, 'offsetThreshold': 60, 'opacity': 0.24};
            option['height'] = backup;
            option['radius'] = source;
            option['voiceMessageAnimationState'] = verify;
            foxtra = foxtra.bind(tangon)(sizing, option);
            option = new Array(2);
            option[0] = foxtra;
            backup = _closure1_slot13;
            foxtra = {};
            foxtra['height'] = ctrled;
            ctrled = 30;
            foxtra['offsetThreshold'] = ctrled;
            foxtra['radius'] = source;
            foxtra['voiceMessageAnimationState'] = verify;
            foxtra = backup.bind(tangon)(sizing, foxtra);
            option[1] = foxtra;
            report['children'] = option;
            golfie = zuuluu.bind(tangon)(golfie, report);
            report = new Array(3);
            report[0] = golfie;
            foxtra = _closure1_slot14;
            golfie = limora[update];
            golfie = cntext.bind(tangon)(golfie);
            option = golfie.View;
            golfie = {};
            sizing = status.contentContainer;
            backup = new Array(3);
            backup[0] = sizing;
            sizing = {};
            sizing['bottom'] = romeon;
            backup[1] = sizing;
            backup[2] = kiloes;
            golfie['style'] = backup;
            sizing = _closure1_slot13;
            kiloes = _closure1_slot30;
            backup = {};
            backup['initialAnimation'] = offset;
            backup['recordingAnimation'] = result;
            backup['exiting'] = output;
            kiloes = sizing.bind(tangon)(kiloes, backup);
            backup = new Array(3);
            backup[0] = kiloes;
            output = _closure1_slot14;
            sizing = _closure1_slot5;
            kiloes = {};
            result = status.innerContainer;
            kiloes['style'] = result;
            source = _closure1_slot13;
            ctrled = _closure1_slot17;
            result = {};
            equals = status.trashContainer;
            sequen = new Array(2);
            sequen[0] = equals;
            sequen[1] = config;
            result['style'] = sequen;
            config = 'button';
            result['accessibilityRole'] = config;
            sequen = 21;
            equals = limora[sequen];
            equals = sierra.bind(tangon)(equals);
            variable36 = equals.intl;
            quebec = variable36.string;
            equals = limora[sequen];
            equals = sierra.bind(tangon)(equals);
            equals = equals.t;
            equals = equals.RdK9sb;
            equals = quebec.bind(variable36)(equals);
            result['accessibilityLabel'] = equals;
            equals = function() { // Original name: onPressIn
                zuuluu = _closure1_slot0;
                michal = _closure1_slot2;
                entity = 34;
                michal = michal[entity];
                entity = undefined;
                michal = zuuluu.bind(entity)(michal);
                entity = michal.triggerHaptic;
                entity = entity.bind(michal)();
                return entity;
            };
            result['onPressIn'] = equals;
            equals = function() { // Original name: onPress
                tangon = _closure1_slot0;
                zuuluu = _closure1_slot2;
                entity = 30;
                zuuluu = zuuluu[entity];
                entity = undefined;
                zuuluu = tangon.bind(entity)(zuuluu);
                oscard = zuuluu.ComponentDispatch;
                report = oscard.dispatchKeyed;
                michal = _closure1_slot11;
                tangon = michal.VOICE_MESSAGE_SEND;
                zuuluu = _closure2_slot0;
                michal = {};
                golfie = true;
                michal['isCancelling'] = golfie;
                michal = report.bind(oscard)(tangon, zuuluu, michal);
                return entity;
            };
            result['onPress'] = equals;
            variable36 = _closure1_slot13;
            quebec = _closure1_slot16;
            equals = {};
            equals['style'] = papara;
            papara = 35;
            papara = limora[papara];
            papara = cntext.bind(tangon)(papara);
            equals['source'] = papara;
            papara = 11;
            variable37 = limora[papara];
            variable37 = cntext.bind(tangon)(variable37);
            variable37 = variable37.Sizes;
            variable37 = variable37.MEDIUM;
            equals['size'] = variable37;
            equals = variable36.bind(tangon)(quebec, equals);
            result['children'] = equals;
            source = source.bind(tangon)(ctrled, result);
            result = new Array(3);
            result[0] = source;
            equals = _closure1_slot13;
            update = limora[update];
            update = cntext.bind(tangon)(update);
            source = update.View;
            update = {};
            quebec = status.voiceChatContainer;
            update['style'] = quebec;
            variable37 = _closure1_slot13;
            quebec = 36;
            quebec = limora[quebec];
            variable36 = cntext.bind(tangon)(quebec);
            quebec = {};
            quebec['isRecording'] = record;
            quebec['initialAnimation'] = offset;
            quebec['backgroundColor'] = variable38;
            quebec = variable37.bind(tangon)(variable36, quebec);
            update['children'] = quebec;
            update = equals.bind(tangon)(source, update);
            result[1] = update;
            source = _closure1_slot13;
            update = {};
            equals = status.sendContainer;
            status = new Array(2);
            status[0] = equals;
            status[1] = whisks;
            update['style'] = status;
            update['accessibilityRole'] = config;
            config = limora[sequen];
            config = sierra.bind(tangon)(config);
            status = config.intl;
            config = status.string;
            sequen = limora[sequen];
            sequen = sierra.bind(tangon)(sequen);
            sequen = sequen.t;
            sequen = sequen.+8GStb;
            sequen = config.bind(status)(sequen);
            update['accessibilityLabel'] = sequen;
            vacuum = function() { // Original name: onPress
                tangon = _closure1_slot0;
                zuuluu = _closure1_slot2;
                entity = 30;
                zuuluu = zuuluu[entity];
                entity = undefined;
                zuuluu = tangon.bind(entity)(zuuluu);
                oscard = zuuluu.ComponentDispatch;
                report = oscard.dispatchKeyed;
                michal = _closure1_slot11;
                tangon = michal.VOICE_MESSAGE_SEND;
                zuuluu = _closure2_slot0;
                michal = {};
                golfie = false;
                michal['isCancelling'] = golfie;
                michal = report.bind(oscard)(tangon, zuuluu, michal);
                return entity;
            };
            update['onPress'] = vacuum;
            config = _closure1_slot13;
            sequen = _closure1_slot16;
            vacuum = {};
            vacuum['style'] = target;
            status = _closure1_slot2;
            if(record) { _fun00020_ip = 1954; continue _fun00019 }
 1945:
            record = 38;
            record = status[record];
            _fun00020_ip = 1961; continue _fun00019;
 1954:
            target = 37;
            record = status[target];
 1961:
            record = cntext.bind(tangon)(record);
            vacuum['source'] = record;
            cntext = _closure1_slot1;
            record = _closure1_slot2;
            record = record[papara];
            record = cntext.bind(tangon)(record);
            record = record.Sizes;
            record = record.MEDIUM;
            vacuum['size'] = record;
            vacuum = config.bind(tangon)(sequen, vacuum);
            update['children'] = vacuum;
            update = source.bind(tangon)(ctrled, update);
            result[2] = update;
            kiloes['children'] = result;
            kiloes = output.bind(tangon)(sizing, kiloes);
            backup[1] = kiloes;
            sizing = 0;
            kiloes = null;
            if(!(sizing === romeon)) { _fun00020_ip = 2081; continue _fun00019 }
 2045:
            result = _closure1_slot13;
            output = _closure1_slot1;
            update = _closure1_slot2;
            sizing = 39;
            sizing = update[sizing];
            output = output.bind(tangon)(sizing);
            sizing = {};
            sizing['channelId'] = echoed;
            kiloes = result.bind(tangon)(output, sizing);
 2081:
            backup[2] = kiloes;
            golfie['children'] = backup;
            golfie = foxtra.bind(tangon)(option, golfie);
            report[1] = golfie;
            option = _closure1_slot13;
            golfie = _closure1_slot52;
            oscard = {};
            oscard['keyboardHeight'] = romeon;
            oscard['safeAreaBottom'] = yankee;
            oscard['initialAnimation'] = offset;
            oscard['voiceMessageAnimationState'] = verify;
            oscard = option.bind(tangon)(golfie, oscard);
            report[2] = oscard;
            entity['children'] = report;
            entity = zuuluu.bind(tangon)(michal, entity);
            return entity;
        }
    };
    option = offset.bind(verify)(option);
    var _closure1_slot51 = option;
    option = verify.memo;
    tangon = function(argFoo) {
        _fun00029: for(var _fun00030_ip = 0; ; ) switch(_fun00030_ip) {
 0:
            michal = argFoo;
            offset = michal.channelId;
            var _closure2_slot0 = offset;
            report = _closure1_slot9;
            oscard = undefined;
            michal = function(argFoo) {
                entity = argFoo;
                entity = entity.showRecordingOverlay;
                return entity;
            };
            option = report.bind(oscard)(michal);
            var _closure2_slot1 = option;
            tangon = _closure1_slot0;
            golfie = _closure1_slot2;
            michal = 19;
            michal = golfie[michal];
            verify = tangon.bind(oscard)(michal);
            golfie = verify.useStateFromStores;
            michal = _closure1_slot8;
            tangon = new Array(1);
            tangon[0] = michal;
            michal = function() {
                zuuluu = _closure1_slot8;
                michal = zuuluu.getChannel;
                entity = _closure2_slot0;
                entity = michal.bind(zuuluu)(entity);
                return entity;
            };
            michal = golfie.bind(verify)(tangon, michal);
            tangon = function(argFoo) {
                entity = argFoo;
                entity = entity.voiceMessageAnimationState;
                return entity;
            };
            verify = report.bind(oscard)(tangon);
            report = _closure1_slot4;
            tangon = report.useState;
            golfie = tangon.bind(report)(option);
            report = _closure1_slot3;
            tangon = 2;
            report = report.bind(oscard)(golfie, tangon);
            tangon = 0;
            golfie = report[tangon];
            tangon = 1;
            tangon = report[tangon];
            var _closure2_slot2 = tangon;
            yankee = _closure1_slot4;
            report = yankee.useEffect;
            tangon = new Array(1);
            tangon[0] = option;
            entity = function() {
                _fun00031: for(var _fun00032_ip = 0; ; ) switch(_fun00032_ip) {
 0:
                    zuuluu = _closure2_slot1;
                    if(zuuluu) { _fun00032_ip = 51; continue _fun00031 }
 12:
                    zuuluu = global;
                    oscard = zuuluu.setTimeout;
                    report = undefined;
                    tangon = function() {
                        zuuluu = _closure2_slot2;
                        michal = undefined;
                        entity = false;
                        entity = zuuluu.bind(michal)(entity);
                        return entity;
                    };
                    zuuluu = 100;
                    zuuluu = oscard.bind(report)(tangon, zuuluu);
                    var _closure3_slot0 = zuuluu;
                    michal = function() {
                        entity = global;
                        zuuluu = entity.clearTimeout;
                        michal = _closure3_slot0;
                        entity = undefined;
                        michal = zuuluu.bind(entity)(michal);
                        return entity;
                    };
                    return michal;
 51:
                    zuuluu = _closure2_slot2;
                    entity = undefined;
                    michal = true;
                    michal = zuuluu.bind(entity)(michal);
                    return entity;
                }
            };
            entity = report.bind(yankee)(entity, tangon);
            tangon = null;
            if(!(tangon != michal)) { _fun00030_ip = 196; continue _fun00029 }
 181:
            entity = michal.isForumLikeChannel;
            michal = entity.bind(michal)();
            entity = null;
            if(michal) { _fun00030_ip = 249; continue _fun00029 }
 196:
            report = tangon != verify;
            michal = null;
            if(!report) { _fun00030_ip = 246; continue _fun00029 }
 205:
            michal = null;
            if(!golfie) { _fun00030_ip = 246; continue _fun00029 }
 210:
            report = _closure1_slot13;
            tangon = _closure1_slot51;
            zuuluu = {};
            zuuluu['channelId'] = offset;
            zuuluu['voiceMessageAnimationState'] = verify;
            if(!golfie) { _fun00030_ip = 235; continue _fun00029 }
 232:
            golfie = !option;
 235:
            zuuluu['exiting'] = golfie;
            michal = report.bind(oscard)(tangon, zuuluu);
 246:
            entity = michal;
 249:
            return entity;
        }
    };
    tangon = option.bind(verify)(tangon);
    report = golfie[report];
    golfie = oscard.bind(entity)(report);
    oscard = golfie.fileFinishedImporting;
    report = 'modules/voice_messages/native/components/VoiceMessageOverlay.tsx';
    report = oscard.bind(golfie)(report);
    zuuluu['default'] = tangon;
    zuuluu['VoiceMessageEllipse'] = michal;
    return entity;
})();