// app/modules/devtools/DevToolsActionCreators.tsx
export default (function(global, require, metroImportDefault, metroImportAll, moduleObject, exports, dependencyMap) {
    var7 = metroImportDefault;
    var3 = exports;
    var6 = dependencyMap;
    var _closure1_slot0 = var7;
    var _closure1_slot1 = var6;
    var4 = function updateDevToolsSettings(arg1) {
        var3 = _closure1_slot0;
        var2 = _closure1_slot1;
        var1 = 1;
        var2 = var2[var1];
        var1 = undefined;
        var4 = var3.bind(var1)(var2);
        var3 = var4.dispatch;
        var2 = {};
        var5 = 'DEV_TOOLS_SETTINGS_UPDATE';
        var2['type'] = var5;
        var5 = arg1;
        var2['settings'] = var5;
        var2 = var3.bind(var4)(var2);
        return var1;
    };
    var _closure1_slot3 = var4;
    var1 = global;
    var9 = var1.Object;
    var8 = var9.defineProperty;
    var5 = {};
    var1 = true;
    var5['value'] = var1;
    var1 = '__esModule';
    var1 = var8.bind(var9)(var3, var1, var5);
    var1 = 0;
    var5 = var6[var1];
    var1 = undefined;
    var5 = var7.bind(var1)(var5);
    var _closure1_slot2 = var5;
    var5 = 2;
    var6 = var6[var5];
    var5 = require;
    var7 = var5.bind(var1)(var6);
    var6 = var7.fileFinishedImporting;
    var5 = 'modules/devtools/DevToolsActionCreators.tsx';
    var5 = var6.bind(var7)(var5);
    var3['updateDevToolsSettings'] = var4;
    var4 = function toggleDisplayDevTools() {
        var3 = _closure1_slot3;
        var2 = {};
        var1 = _closure1_slot2;
        var1 = var1.displayTools;
        var1 = !var1;
        var2['displayTools'] = var1;
        var1 = undefined;
        var2 = var3.bind(var1)(var2);
        return var1;
    };
    var3['toggleDisplayDevTools'] = var4;
    var4 = function openDevTools(arg1) {
        var3 = _closure1_slot3;
        var2 = {};
        var1 = true;
        var2['displayTools'] = var1;
        var1 = arg1;
        var2['lastOpenTabId'] = var1;
        var1 = undefined;
        var2 = var3.bind(var1)(var2);
        return var1;
    };
    var3['openDevTools'] = var4;
    var2 = function clearAnalyticsLog() {
        var3 = _closure1_slot0;
        var2 = _closure1_slot1;
        var1 = 1;
        var2 = var2[var1];
        var1 = undefined;
        var4 = var3.bind(var1)(var2);
        var3 = var4.dispatch;
        var2 = {};
        var5 = 'ANALYTICS_LOG_CLEAR';
        var2['type'] = var5;
        var2 = var3.bind(var4)(var2);
        return var1;
    };
    var3['clearAnalyticsLog'] = var2;
    return var1;
})();