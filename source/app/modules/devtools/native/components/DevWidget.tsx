// app/modules/devtools/native/components/DevWidget.tsx
export default (function(argFoo, argBar, argBaz, argCorge, _, argFred, argPlugh) {
    report = argBar;
    foxtrot = argBaz;
    zulu = argFred;
    oscar = argPlugh;
    var _closure1_slot0 = report;
    var _closure1_slot1 = foxtrot;
    var _closure1_slot2 = oscar;
    entity = global;
    options = entity.Object;
    golf = options.defineProperty;
    tango = {};
    entity = true;
    tango['value'] = entity;
    entity = '__esModule';
    entity = golf.bind(options)(zulu, entity, tango);
    yankee = 0;
    golf = oscar[yankee];
    tango = argCorge;
    entity = undefined;
    options = tango.bind(entity)(golf);
    var _closure1_slot3 = options;
    tango = 1;
    tango = oscar[tango];
    tango = foxtrot.bind(entity)(tango);
    var _closure1_slot4 = tango;
    tango = 2;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    backup = tango.DEV_WIDGET_SIZE;
    var _closure1_slot5 = backup;
    tango = 3;
    golf = oscar[tango];
    golf = report.bind(entity)(golf);
    golf = golf.jsx;
    var _closure1_slot6 = golf;
    golf = oscar[tango];
    golf = report.bind(entity)(golf);
    golf = golf.Fragment;
    var _closure1_slot7 = golf;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.jsxs;
    var _closure1_slot8 = tango;
    tango = 4;
    tango = oscar[tango];
    verify = report.bind(entity)(tango);
    golf = verify.createStyles;
    tango = {};
    offset = {};
    romeo = 'absolute';
    offset['position'] = romeo;
    tango['widgetContainer'] = offset;
    offset = {'backgroundColor': null, 'justifyContent': 'center', 'alignItems': 'center'};
    romeo = 5;
    kilo = oscar[romeo];
    kilo = foxtrot.bind(entity)(kilo);
    kilo = kilo.colors;
    kilo = kilo.BG_BRAND;
    offset['backgroundColor'] = kilo;
    offset['height'] = backup;
    offset['width'] = backup;
    backup = oscar[romeo];
    backup = foxtrot.bind(entity)(backup);
    backup = backup.radii;
    backup = backup.xl;
    offset['borderRadius'] = backup;
    backup = oscar[romeo];
    backup = foxtrot.bind(entity)(backup);
    backup = backup.shadows;
    output = backup.SHADOW_MOBILE_NAVIGATOR_X;
    result = offset;
    backup = copyDataProperties(result, output);
    tango['widget'] = offset;
    offset = {};
    backup = '#fff';
    offset['tintColor'] = backup;
    tango['icon'] = offset;
    offset = {};
    romeo = oscar[romeo];
    romeo = foxtrot.bind(entity)(romeo);
    romeo = romeo.colors;
    romeo = romeo.BACKGROUND_TERTIARY;
    offset['backgroundColor'] = romeo;
    offset['paddingHorizontal'] = yankee;
    tango['formRow'] = offset;
    tango = golf.bind(verify)(tango);
    var _closure1_slot9 = tango;
    tango = {};
    golf = 'function DevWidgetTsx1(x,y){const{windowDimensionsSharedValue,insetsSharedValue,clamp,dragBoundsPadding,contentWidth,contentHeight}=this.__closure;const{width:windowWidth,height:windowHeight}=windowDimensionsSharedValue.get();const insets=insetsSharedValue.get();return{x:clamp(x,insets.left+dragBoundsPadding,windowWidth-insets.right-contentWidth-dragBoundsPadding),y:clamp(y,insets.top+dragBoundsPadding,windowHeight-insets.bottom-contentHeight-dragBoundsPadding)};}';
    tango['code'] = golf;
    var _closure1_slot10 = tango;
    tango = {};
    golf = 'function DevWidgetTsx2(){const{originalX,x,originalY,y}=this.__closure;originalX.set(x.get());originalY.set(y.get());}';
    tango['code'] = golf;
    var _closure1_slot11 = tango;
    tango = {};
    golf = 'function DevWidgetTsx3(event){const{getClampedPosition,originalX,originalY,x,y}=this.__closure;const{x:xClamped,y:yClamped}=getClampedPosition(originalX.get()+event.translationX,originalY.get()+event.translationY);x.set(xClamped);y.set(yClamped);}';
    tango['code'] = golf;
    var _closure1_slot12 = tango;
    tango = {};
    golf = 'function DevWidgetTsx4(){const{runOnJS,onChangePosition,x,y}=this.__closure;runOnJS(onChangePosition)({x:x.get(),y:y.get()});}';
    tango['code'] = golf;
    var _closure1_slot13 = tango;
    tango = {};
    golf = 'function DevWidgetTsx5(){const{getClampedPosition,x,y,withSpring,springUnclamped}=this.__closure;const{x:translateX,y:translateY}=getClampedPosition(x.get(),y.get());return{transform:[{translateX:withSpring(translateX,springUnclamped)},{translateY:withSpring(translateY,springUnclamped)}]};}';
    tango['code'] = golf;
    var _closure1_slot14 = tango;
    tango = function(argFoo) { // Original name: DraggableContainer
        _fun111457: for(var _fun111457_ip = 0; ; ) switch(_fun111457_ip) {
 0:
            entity = argFoo;
            sizing = entity.x;
            var _closure2_slot0 = sizing;
            kilo = entity.y;
            var _closure2_slot1 = kilo;
            control = entity.contentWidth;
            var _closure2_slot2 = control;
            vacuum = entity.contentHeight;
            var _closure2_slot3 = vacuum;
            source = entity.dragBoundsPadding;
            tango = undefined;
            if(!(source === tango)) { _fun111457_ip = 57; continue _fun111457 }
 55:
            source = 0;
 57:
            var _closure2_slot4 = source;
            result = entity.onChangePosition;
            var _closure2_slot5 = result;
            golf = entity.children;
            var _closure2_slot6 = tango;
            var _closure2_slot7 = tango;
            var _closure2_slot8 = tango;
            var _closure2_slot9 = tango;
            var _closure2_slot10 = tango;
            entity = _closure1_slot9;
            options = entity.bind(tango)();
            mike = _closure1_slot0;
            offset = _closure1_slot2;
            report = 6;
            entity = offset[report];
            yankee = mike.bind(tango)(entity);
            oscar = yankee.useSharedValue;
            entity = sizing.get;
            entity = entity.bind(sizing)();
            update = oscar.bind(yankee)(entity);
            _closure2_slot6 = update;
            entity = offset[report];
            yankee = mike.bind(tango)(entity);
            oscar = yankee.useSharedValue;
            entity = kilo.get;
            entity = entity.bind(kilo)();
            echo = oscar.bind(yankee)(entity);
            _closure2_slot7 = echo;
            oscar = _closure1_slot1;
            entity = 7;
            entity = offset[entity];
            entity = oscar.bind(tango)(entity);
            output = entity.bind(tango)();
            _closure2_slot8 = output;
            entity = 8;
            entity = offset[entity];
            entity = oscar.bind(tango)(entity);
            backup = entity.bind(tango)();
            _closure2_slot9 = backup;
            foxtrot = _closure1_slot3;
            romeo = foxtrot.useCallback;
            yankee = function(argFoo, argBar) { // Original name: v
                zulu = _closure2_slot9;
                entity = zulu.get;
                entity = entity.bind(zulu)();
                yankee = entity.width;
                options = entity.height;
                zulu = _closure2_slot8;
                entity = zulu.get;
                golf = entity.bind(zulu)();
                entity = {};
                oscar = _closure1_slot0;
                verify = _closure1_slot2;
                tango = 6;
                zulu = verify[tango];
                report = undefined;
                backup = oscar.bind(report)(zulu);
                foxtrot = backup.clamp;
                offset = golf.left;
                zulu = _closure2_slot4;
                romeo = offset + zulu;
                offset = golf.right;
                yankee = yankee - offset;
                offset = _closure2_slot2;
                offset = yankee - offset;
                yankee = offset - zulu;
                offset = argFoo;
                offset = foxtrot.bind(backup)(offset, romeo, yankee);
                entity['x'] = offset;
                tango = verify[tango];
                oscar = oscar.bind(report)(tango);
                report = oscar.clamp;
                tango = golf.top;
                tango = tango + zulu;
                golf = golf.bottom;
                golf = options - golf;
                mike = _closure2_slot3;
                mike = golf - mike;
                zulu = mike - zulu;
                mike = argBar;
                mike = report.bind(oscar)(mike, tango, zulu);
                entity['y'] = mike;
                return entity;
            };
            entity = {};
            entity['windowDimensionsSharedValue'] = backup;
            entity['insetsSharedValue'] = output;
            sequence = offset[report];
            sequence = mike.bind(tango)(sequence);
            sequence = sequence.clamp;
            entity['clamp'] = sequence;
            entity['dragBoundsPadding'] = source;
            entity['contentWidth'] = control;
            entity['contentHeight'] = vacuum;
            yankee['__closure'] = entity;
            entity = 729779775192.0;
            yankee['__workletHash'] = entity;
            entity = _closure1_slot10;
            yankee['__initData'] = entity;
            entity = new Array(5);
            entity[0] = vacuum;
            entity[1] = control;
            entity[2] = source;
            entity[3] = output;
            entity[4] = backup;
            output = romeo.bind(foxtrot)(yankee, entity);
            _closure2_slot10 = output;
            entity = 9;
            yankee = offset[entity];
            yankee = mike.bind(tango)(yankee);
            romeo = yankee.Gesture;
            yankee = romeo.Pan;
            foxtrot = yankee.bind(romeo)();
            romeo = foxtrot.onStart;
            yankee = function() { // Original name: D
                tango = _closure2_slot6;
                zulu = tango.set;
                report = _closure2_slot0;
                mike = report.get;
                mike = mike.bind(report)();
                mike = zulu.bind(tango)(mike);
                zulu = _closure2_slot7;
                mike = zulu.set;
                tango = _closure2_slot1;
                entity = tango.get;
                entity = entity.bind(tango)();
                entity = mike.bind(zulu)(entity);
                entity = undefined;
                return entity;
            };
            backup = {};
            backup['originalX'] = update;
            backup['x'] = sizing;
            backup['originalY'] = echo;
            backup['y'] = kilo;
            yankee['__closure'] = backup;
            backup = 11333606215108.0;
            yankee['__workletHash'] = backup;
            backup = _closure1_slot11;
            yankee['__initData'] = backup;
            foxtrot = romeo.bind(foxtrot)(yankee);
            romeo = foxtrot.onUpdate;
            yankee = function(argFoo) { // Original name: C
                entity = argFoo;
                report = _closure2_slot10;
                tango = _closure2_slot6;
                zulu = tango.get;
                tango = zulu.bind(tango)();
                zulu = entity.translationX;
                tango = tango + zulu;
                oscar = _closure2_slot7;
                zulu = oscar.get;
                zulu = zulu.bind(oscar)();
                entity = entity.translationY;
                zulu = zulu + entity;
                entity = undefined;
                zulu = report.bind(entity)(tango, zulu);
                oscar = zulu.x;
                tango = zulu.y;
                report = _closure2_slot0;
                zulu = report.set;
                zulu = zulu.bind(report)(oscar);
                zulu = _closure2_slot1;
                mike = zulu.set;
                mike = mike.bind(zulu)(tango);
                return entity;
            };
            backup = {};
            backup['getClampedPosition'] = output;
            backup['originalX'] = update;
            backup['originalY'] = echo;
            backup['x'] = sizing;
            backup['y'] = kilo;
            yankee['__closure'] = backup;
            backup = 10056531764801.0;
            yankee['__workletHash'] = backup;
            backup = _closure1_slot12;
            yankee['__initData'] = backup;
            foxtrot = romeo.bind(foxtrot)(yankee);
            romeo = foxtrot.onEnd;
            yankee = function() { // Original name: P
                zulu = _closure1_slot0;
                mike = _closure1_slot2;
                entity = 6;
                mike = mike[entity];
                entity = undefined;
                report = zulu.bind(entity)(mike);
                zulu = report.runOnJS;
                mike = _closure2_slot5;
                zulu = zulu.bind(report)(mike);
                mike = {};
                oscar = _closure2_slot0;
                report = oscar.get;
                report = report.bind(oscar)();
                mike['x'] = report;
                report = _closure2_slot1;
                tango = report.get;
                tango = tango.bind(report)();
                mike['y'] = tango;
                mike = zulu.bind(entity)(mike);
                return entity;
            };
            backup = {};
            echo = offset[report];
            echo = mike.bind(tango)(echo);
            echo = echo.runOnJS;
            backup['runOnJS'] = echo;
            backup['onChangePosition'] = result;
            backup['x'] = sizing;
            backup['y'] = kilo;
            yankee['__closure'] = backup;
            backup = 10003102447058.0;
            yankee['__workletHash'] = backup;
            backup = _closure1_slot13;
            yankee['__initData'] = backup;
            yankee = romeo.bind(foxtrot)(yankee);
            romeo = offset[report];
            foxtrot = mike.bind(tango)(romeo);
            romeo = foxtrot.useAnimatedStyle;
            verify = function() { // Original name: W
                zulu = _closure2_slot10;
                tango = _closure2_slot0;
                mike = tango.get;
                mike = mike.bind(tango)();
                tango = _closure2_slot1;
                entity = tango.get;
                entity = entity.bind(tango)();
                verify = undefined;
                entity = zulu.bind(verify)(mike, entity);
                romeo = entity.x;
                golf = entity.y;
                entity = {};
                zulu = {};
                options = _closure1_slot0;
                offset = _closure1_slot2;
                report = 10;
                mike = offset[report];
                yankee = options.bind(verify)(mike);
                oscar = yankee.withSpring;
                tango = 11;
                mike = offset[tango];
                mike = options.bind(verify)(mike);
                mike = mike.springUnclamped;
                mike = oscar.bind(yankee)(romeo, mike);
                zulu['translateX'] = mike;
                mike = new Array(2);
                mike[0] = zulu;
                zulu = {};
                report = offset[report];
                oscar = options.bind(verify)(report);
                report = oscar.withSpring;
                tango = offset[tango];
                tango = options.bind(verify)(tango);
                tango = tango.springUnclamped;
                tango = report.bind(oscar)(golf, tango);
                zulu['translateY'] = tango;
                mike[1] = zulu;
                entity['transform'] = mike;
                return entity;
            };
            backup = {};
            backup['getClampedPosition'] = output;
            backup['x'] = sizing;
            backup['y'] = kilo;
            kilo = 10;
            kilo = offset[kilo];
            kilo = mike.bind(tango)(kilo);
            kilo = kilo.withSpring;
            backup['withSpring'] = kilo;
            kilo = 11;
            kilo = offset[kilo];
            kilo = mike.bind(tango)(kilo);
            kilo = kilo.springUnclamped;
            backup['springUnclamped'] = kilo;
            verify['__closure'] = backup;
            backup = 6251354551691.0;
            verify['__workletHash'] = backup;
            backup = _closure1_slot14;
            verify['__initData'] = backup;
            verify = romeo.bind(foxtrot)(verify);
            zulu = _closure1_slot6;
            entity = offset[entity];
            entity = mike.bind(tango)(entity);
            mike = entity.GestureDetector;
            entity = {};
            entity['gesture'] = yankee;
            report = offset[report];
            report = oscar.bind(tango)(report);
            oscar = report.View;
            report = {};
            offset = options.widgetContainer;
            options = new Array(2);
            options[0] = offset;
            options[1] = verify;
            report['style'] = options;
            report['children'] = golf;
            report = zulu.bind(tango)(oscar, report);
            entity['children'] = report;
            entity = zulu.bind(tango)(mike, entity);
            return entity;
        }
    };
    var _closure1_slot15 = tango;
    golf = options.memo;
    tango = function() {
        mike = _closure1_slot9;
        tango = undefined;
        report = mike.bind(tango)();
        zulu = _closure1_slot6;
        oscar = _closure1_slot0;
        golf = _closure1_slot2;
        entity = 12;
        entity = golf[entity];
        entity = oscar.bind(tango)(entity);
        mike = entity.PressableOpacity;
        entity = {};
        report = report.widget;
        entity['style'] = report;
        report = 'button';
        entity['accessibilityRole'] = report;
        report = function() { // Original name: onPress
            zulu = _closure1_slot0;
            mike = _closure1_slot2;
            entity = 13;
            mike = mike[entity];
            entity = undefined;
            mike = zulu.bind(entity)(mike);
            entity = mike.navigateToDevTools;
            entity = entity.bind(mike)();
            return entity;
        };
        entity['onPress'] = report;
        report = 0.5;
        entity['activeOpacity'] = report;
        report = 14;
        report = golf[report];
        report = oscar.bind(tango)(report);
        oscar = report.StaffBadgeIcon;
        report = {'size': 'md', 'color': 'white'};
        report = zulu.bind(tango)(oscar, report);
        entity['children'] = report;
        entity = zulu.bind(tango)(mike, entity);
        return entity;
    };
    tango = golf.bind(options)(tango);
    var _closure1_slot16 = tango;
    tango = 17;
    tango = oscar[tango];
    oscar = report.bind(entity)(tango);
    report = oscar.fileFinishedImporting;
    tango = 'modules/devtools/native/components/DevWidget.tsx';
    tango = report.bind(oscar)(tango);
    mike = function() { // Original name: DevWidget
        zulu = _closure1_slot0;
        romeo = _closure1_slot2;
        mike = 6;
        entity = romeo[mike];
        tango = undefined;
        golf = zulu.bind(tango)(entity);
        oscar = golf.useSharedValue;
        entity = _closure1_slot4;
        report = entity.devWidgetPosition;
        report = report.x;
        foxtrot = oscar.bind(golf)(report);
        mike = romeo[mike];
        zulu = zulu.bind(tango)(mike);
        mike = zulu.useSharedValue;
        entity = entity.devWidgetPosition;
        entity = entity.y;
        offset = mike.bind(zulu)(entity);
        zulu = _closure1_slot8;
        mike = _closure1_slot7;
        entity = {};
        options = _closure1_slot6;
        yankee = _closure1_slot1;
        report = 15;
        report = romeo[report];
        oscar = yankee.bind(tango)(report);
        report = {};
        report['x'] = foxtrot;
        report['y'] = offset;
        oscar = options.bind(tango)(oscar, report);
        report = new Array(2);
        report[0] = oscar;
        golf = _closure1_slot15;
        oscar = {};
        oscar['x'] = foxtrot;
        oscar['y'] = offset;
        offset = _closure1_slot5;
        oscar['contentWidth'] = offset;
        oscar['contentHeight'] = offset;
        offset = 5;
        offset = romeo[offset];
        offset = yankee.bind(tango)(offset);
        offset = offset.spacing;
        offset = offset.PX_4;
        oscar['dragBoundsPadding'] = offset;
        offset = function(argFoo) { // Original name: onChangePosition
            zulu = _closure1_slot0;
            mike = _closure1_slot2;
            entity = 16;
            mike = mike[entity];
            entity = undefined;
            zulu = zulu.bind(entity)(mike);
            mike = zulu.updateDevToolsSettings;
            entity = {};
            tango = argFoo;
            entity['devWidgetPosition'] = tango;
            entity = mike.bind(zulu)(entity);
            return entity;
        };
        oscar['onChangePosition'] = offset;
        offset = _closure1_slot16;
        verify = {};
        verify = options.bind(tango)(offset, verify);
        oscar['children'] = verify;
        oscar = options.bind(tango)(golf, oscar);
        report[1] = oscar;
        entity['children'] = report;
        entity = zulu.bind(tango)(mike, entity);
        return entity;
    };
    zulu['default'] = mike;
    return entity;
})();