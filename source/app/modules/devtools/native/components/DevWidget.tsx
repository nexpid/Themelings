// app/modules/devtools/native/components/DevWidget.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    report = argBar;
    foxtra = argBaz;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    var _closure1_slot1 = foxtra;
    var _closure1_slot2 = oscard;
    entity = global;
    option = entity.Object;
    golfie = option.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(option)(zuuluu, entity, tangon);
    yankee = 0;
    golfie = oscard[yankee];
    tangon = argCor;
    entity = undefined;
    option = tangon.bind(entity)(golfie);
    var _closure1_slot3 = option;
    tangon = 1;
    tangon = oscard[tangon];
    tangon = foxtra.bind(entity)(tangon);
    var _closure1_slot4 = tangon;
    tangon = 2;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    backup = tangon.DEV_WIDGET_SIZE;
    var _closure1_slot5 = backup;
    tangon = 3;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    golfie = tangon.jsx;
    var _closure1_slot6 = golfie;
    golfie = tangon.Fragment;
    var _closure1_slot7 = golfie;
    tangon = tangon.jsxs;
    var _closure1_slot8 = tangon;
    tangon = 4;
    tangon = oscard[tangon];
    verify = report.bind(entity)(tangon);
    golfie = verify.createStyles;
    tangon = {};
    offset = {};
    romeon = 'absolute';
    offset['position'] = romeon;
    tangon['widgetContainer'] = offset;
    offset = {'backgroundColor': null, 'justifyContent': 'center', 'alignItems': 'center'};
    romeon = 5;
    kiloes = oscard[romeon];
    kiloes = foxtra.bind(entity)(kiloes);
    kiloes = kiloes.colors;
    kiloes = kiloes.BG_BRAND;
    offset['backgroundColor'] = kiloes;
    offset['height'] = backup;
    offset['width'] = backup;
    backup = oscard[romeon];
    backup = foxtra.bind(entity)(backup);
    backup = backup.radii;
    backup = backup.xl;
    offset['borderRadius'] = backup;
    backup = oscard[romeon];
    backup = foxtra.bind(entity)(backup);
    backup = backup.shadows;
    output = backup.SHADOW_MOBILE_NAVIGATOR_X;
    result = offset;
    backup = copyDataProperties(result, output);
    tangon['widget'] = offset;
    offset = {};
    backup = '#fff';
    offset['tintColor'] = backup;
    tangon['icon'] = offset;
    offset = {};
    romeon = oscard[romeon];
    romeon = foxtra.bind(entity)(romeon);
    romeon = romeon.colors;
    romeon = romeon.BACKGROUND_TERTIARY;
    offset['backgroundColor'] = romeon;
    offset['paddingHorizontal'] = yankee;
    tangon['formRow'] = offset;
    tangon = golfie.bind(verify)(tangon);
    var _closure1_slot9 = tangon;
    tangon = {};
    golfie = 'function DevWidgetTsx1(x,y){const{windowDimensionsSharedValue,insetsSharedValue,clamp,dragBoundsPadding,contentWidth,contentHeight}=this.__closure;const{width:windowWidth,height:windowHeight}=windowDimensionsSharedValue.get();const insets=insetsSharedValue.get();return{x:clamp(x,insets.left+dragBoundsPadding,windowWidth-insets.right-contentWidth-dragBoundsPadding),y:clamp(y,insets.top+dragBoundsPadding,windowHeight-insets.bottom-contentHeight-dragBoundsPadding)};}';
    tangon['code'] = golfie;
    var _closure1_slot10 = tangon;
    tangon = {};
    golfie = 'function DevWidgetTsx2(){const{runOnJS,onChangePosition,x,y}=this.__closure;runOnJS(onChangePosition)({x:x.get(),y:y.get()});}';
    tangon['code'] = golfie;
    var _closure1_slot11 = tangon;
    tangon = {};
    golfie = 'function DevWidgetTsx3(event){const{getClampedPosition,originalX,originalY,x,y}=this.__closure;const{x:xClamped,y:yClamped}=getClampedPosition(originalX.get()+event.translationX,originalY.get()+event.translationY);x.set(xClamped);y.set(yClamped);}';
    tangon['code'] = golfie;
    var _closure1_slot12 = tangon;
    tangon = {};
    golfie = 'function DevWidgetTsx4(){const{originalX,x,originalY,y}=this.__closure;originalX.set(x.get());originalY.set(y.get());}';
    tangon['code'] = golfie;
    var _closure1_slot13 = tangon;
    tangon = {};
    golfie = 'function DevWidgetTsx5(){const{getClampedPosition,x,y,withSpring,springUnclamped}=this.__closure;const{x:translateX,y:translateY}=getClampedPosition(x.get(),y.get());return{transform:[{translateX:withSpring(translateX,springUnclamped)},{translateY:withSpring(translateY,springUnclamped)}]};}';
    tangon['code'] = golfie;
    var _closure1_slot14 = tangon;
    tangon = function(argFoo) { // Original name: DraggableContainer
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            entity = argFoo;
            sizing = entity.x;
            var _closure2_slot0 = sizing;
            kiloes = entity.y;
            var _closure2_slot1 = kiloes;
            ctrled = entity.contentWidth;
            var _closure2_slot2 = ctrled;
            vacuum = entity.contentHeight;
            var _closure2_slot3 = vacuum;
            source = entity.dragBoundsPadding;
            tangon = undefined;
            if(!(source === tangon)) { _fun00002_ip = 57; continue _fun00001 }
 55:
            source = 0;
 57:
            var _closure2_slot4 = source;
            result = entity.onChangePosition;
            var _closure2_slot5 = result;
            golfie = entity.children;
            var _closure2_slot6 = tangon;
            var _closure2_slot7 = tangon;
            var _closure2_slot8 = tangon;
            var _closure2_slot9 = tangon;
            var _closure2_slot10 = tangon;
            entity = _closure1_slot9;
            option = entity.bind(tangon)();
            michal = _closure1_slot0;
            offset = _closure1_slot2;
            report = 6;
            entity = offset[report];
            yankee = michal.bind(tangon)(entity);
            oscard = yankee.useSharedValue;
            entity = sizing.get;
            entity = entity.bind(sizing)();
            update = oscard.bind(yankee)(entity);
            _closure2_slot6 = update;
            entity = offset[report];
            yankee = michal.bind(tangon)(entity);
            oscard = yankee.useSharedValue;
            entity = kiloes.get;
            entity = entity.bind(kiloes)();
            echoed = oscard.bind(yankee)(entity);
            _closure2_slot7 = echoed;
            oscard = _closure1_slot1;
            entity = 7;
            entity = offset[entity];
            entity = oscard.bind(tangon)(entity);
            output = entity.bind(tangon)();
            _closure2_slot8 = output;
            entity = 8;
            entity = offset[entity];
            entity = oscard.bind(tangon)(entity);
            backup = entity.bind(tangon)();
            _closure2_slot9 = backup;
            foxtra = _closure1_slot3;
            romeon = foxtra.useCallback;
            yankee = function(argFoo, argBar) { // Original name: v
                zuuluu = _closure2_slot9;
                entity = zuuluu.get;
                entity = entity.bind(zuuluu)();
                yankee = entity.width;
                option = entity.height;
                zuuluu = _closure2_slot8;
                entity = zuuluu.get;
                golfie = entity.bind(zuuluu)();
                entity = {};
                oscard = _closure1_slot0;
                verify = _closure1_slot2;
                tangon = 6;
                zuuluu = verify[tangon];
                report = undefined;
                backup = oscard.bind(report)(zuuluu);
                foxtra = backup.clamp;
                offset = golfie.left;
                zuuluu = _closure2_slot4;
                romeon = offset + zuuluu;
                offset = golfie.right;
                yankee = yankee - offset;
                offset = _closure2_slot2;
                offset = yankee - offset;
                yankee = offset - zuuluu;
                offset = argFoo;
                offset = foxtra.bind(backup)(offset, romeon, yankee);
                entity['x'] = offset;
                tangon = verify[tangon];
                oscard = oscard.bind(report)(tangon);
                report = oscard.clamp;
                tangon = golfie.top;
                tangon = tangon + zuuluu;
                golfie = golfie.bottom;
                golfie = option - golfie;
                michal = _closure2_slot3;
                michal = golfie - michal;
                zuuluu = michal - zuuluu;
                michal = argBar;
                michal = report.bind(oscard)(michal, tangon, zuuluu);
                entity['y'] = michal;
                return entity;
            };
            entity = {};
            entity['windowDimensionsSharedValue'] = backup;
            entity['insetsSharedValue'] = output;
            sequen = offset[report];
            sequen = michal.bind(tangon)(sequen);
            sequen = sequen.clamp;
            entity['clamp'] = sequen;
            entity['dragBoundsPadding'] = source;
            entity['contentWidth'] = ctrled;
            entity['contentHeight'] = vacuum;
            yankee['__closure'] = entity;
            entity = 729779775192.0;
            yankee['__workletHash'] = entity;
            entity = _closure1_slot10;
            yankee['__initData'] = entity;
            entity = new Array(5);
            entity[0] = vacuum;
            entity[1] = ctrled;
            entity[2] = source;
            entity[3] = output;
            entity[4] = backup;
            output = romeon.bind(foxtra)(yankee, entity);
            _closure2_slot10 = output;
            entity = 9;
            yankee = offset[entity];
            yankee = michal.bind(tangon)(yankee);
            romeon = yankee.Gesture;
            yankee = romeon.Pan;
            foxtra = yankee.bind(romeon)();
            romeon = foxtra.onStart;
            yankee = function() { // Original name: D
                tangon = _closure2_slot6;
                zuuluu = tangon.set;
                report = _closure2_slot0;
                michal = report.get;
                michal = michal.bind(report)();
                michal = zuuluu.bind(tangon)(michal);
                zuuluu = _closure2_slot7;
                michal = zuuluu.set;
                tangon = _closure2_slot1;
                entity = tangon.get;
                entity = entity.bind(tangon)();
                entity = michal.bind(zuuluu)(entity);
                entity = undefined;
                return entity;
            };
            backup = {};
            backup['originalX'] = update;
            backup['x'] = sizing;
            backup['originalY'] = echoed;
            backup['y'] = kiloes;
            yankee['__closure'] = backup;
            backup = 7165614533762.0;
            yankee['__workletHash'] = backup;
            backup = _closure1_slot13;
            yankee['__initData'] = backup;
            foxtra = romeon.bind(foxtra)(yankee);
            romeon = foxtra.onUpdate;
            yankee = function(argFoo) { // Original name: C
                entity = argFoo;
                report = _closure2_slot10;
                tangon = _closure2_slot6;
                zuuluu = tangon.get;
                tangon = zuuluu.bind(tangon)();
                zuuluu = entity.translationX;
                tangon = tangon + zuuluu;
                oscard = _closure2_slot7;
                zuuluu = oscard.get;
                zuuluu = zuuluu.bind(oscard)();
                entity = entity.translationY;
                zuuluu = zuuluu + entity;
                entity = undefined;
                zuuluu = report.bind(entity)(tangon, zuuluu);
                oscard = zuuluu.x;
                tangon = zuuluu.y;
                report = _closure2_slot0;
                zuuluu = report.set;
                zuuluu = zuuluu.bind(report)(oscard);
                zuuluu = _closure2_slot1;
                michal = zuuluu.set;
                michal = michal.bind(zuuluu)(tangon);
                return entity;
            };
            backup = {};
            backup['getClampedPosition'] = output;
            backup['originalX'] = update;
            backup['originalY'] = echoed;
            backup['x'] = sizing;
            backup['y'] = kiloes;
            yankee['__closure'] = backup;
            backup = 10056531764801.0;
            yankee['__workletHash'] = backup;
            backup = _closure1_slot12;
            yankee['__initData'] = backup;
            foxtra = romeon.bind(foxtra)(yankee);
            romeon = foxtra.onEnd;
            yankee = function() { // Original name: P
                zuuluu = _closure1_slot0;
                michal = _closure1_slot2;
                entity = 6;
                michal = michal[entity];
                entity = undefined;
                report = zuuluu.bind(entity)(michal);
                zuuluu = report.runOnJS;
                michal = _closure2_slot5;
                zuuluu = zuuluu.bind(report)(michal);
                michal = {};
                oscard = _closure2_slot0;
                report = oscard.get;
                report = report.bind(oscard)();
                michal['x'] = report;
                report = _closure2_slot1;
                tangon = report.get;
                tangon = tangon.bind(report)();
                michal['y'] = tangon;
                michal = zuuluu.bind(entity)(michal);
                return entity;
            };
            backup = {};
            echoed = offset[report];
            echoed = michal.bind(tangon)(echoed);
            echoed = echoed.runOnJS;
            backup['runOnJS'] = echoed;
            backup['onChangePosition'] = result;
            backup['x'] = sizing;
            backup['y'] = kiloes;
            yankee['__closure'] = backup;
            backup = 12890758993684.0;
            yankee['__workletHash'] = backup;
            backup = _closure1_slot11;
            yankee['__initData'] = backup;
            yankee = romeon.bind(foxtra)(yankee);
            romeon = offset[report];
            foxtra = michal.bind(tangon)(romeon);
            romeon = foxtra.useAnimatedStyle;
            verify = function() { // Original name: W
                zuuluu = _closure2_slot10;
                tangon = _closure2_slot0;
                michal = tangon.get;
                michal = michal.bind(tangon)();
                tangon = _closure2_slot1;
                entity = tangon.get;
                entity = entity.bind(tangon)();
                verify = undefined;
                entity = zuuluu.bind(verify)(michal, entity);
                romeon = entity.x;
                golfie = entity.y;
                entity = {};
                zuuluu = {};
                option = _closure1_slot0;
                offset = _closure1_slot2;
                report = 10;
                michal = offset[report];
                yankee = option.bind(verify)(michal);
                oscard = yankee.withSpring;
                tangon = 11;
                michal = offset[tangon];
                michal = option.bind(verify)(michal);
                michal = michal.springUnclamped;
                michal = oscard.bind(yankee)(romeon, michal);
                zuuluu['translateX'] = michal;
                michal = new Array(2);
                michal[0] = zuuluu;
                zuuluu = {};
                report = offset[report];
                oscard = option.bind(verify)(report);
                report = oscard.withSpring;
                tangon = offset[tangon];
                tangon = option.bind(verify)(tangon);
                tangon = tangon.springUnclamped;
                tangon = report.bind(oscard)(golfie, tangon);
                zuuluu['translateY'] = tangon;
                michal[1] = zuuluu;
                entity['transform'] = michal;
                return entity;
            };
            backup = {};
            backup['getClampedPosition'] = output;
            backup['x'] = sizing;
            backup['y'] = kiloes;
            kiloes = 10;
            kiloes = offset[kiloes];
            kiloes = michal.bind(tangon)(kiloes);
            kiloes = kiloes.withSpring;
            backup['withSpring'] = kiloes;
            kiloes = 11;
            kiloes = offset[kiloes];
            kiloes = michal.bind(tangon)(kiloes);
            kiloes = kiloes.springUnclamped;
            backup['springUnclamped'] = kiloes;
            verify['__closure'] = backup;
            backup = 6251354551691.0;
            verify['__workletHash'] = backup;
            backup = _closure1_slot14;
            verify['__initData'] = backup;
            verify = romeon.bind(foxtra)(verify);
            zuuluu = _closure1_slot6;
            entity = offset[entity];
            entity = michal.bind(tangon)(entity);
            michal = entity.GestureDetector;
            entity = {};
            entity['gesture'] = yankee;
            report = offset[report];
            report = oscard.bind(tangon)(report);
            oscard = report.View;
            report = {};
            offset = option.widgetContainer;
            option = new Array(2);
            option[0] = offset;
            option[1] = verify;
            report['style'] = option;
            report['children'] = golfie;
            report = zuuluu.bind(tangon)(oscard, report);
            entity['children'] = report;
            entity = zuuluu.bind(tangon)(michal, entity);
            return entity;
        }
    };
    var _closure1_slot15 = tangon;
    golfie = option.memo;
    tangon = function() {
        michal = _closure1_slot9;
        tangon = undefined;
        report = michal.bind(tangon)();
        zuuluu = _closure1_slot6;
        oscard = _closure1_slot0;
        golfie = _closure1_slot2;
        entity = 12;
        entity = golfie[entity];
        entity = oscard.bind(tangon)(entity);
        michal = entity.PressableOpacity;
        entity = {};
        report = report.widget;
        entity['style'] = report;
        report = 'button';
        entity['accessibilityRole'] = report;
        report = function() { // Original name: onPress
            zuuluu = _closure1_slot0;
            michal = _closure1_slot2;
            entity = 13;
            michal = michal[entity];
            entity = undefined;
            michal = zuuluu.bind(entity)(michal);
            entity = michal.navigateToDevTools;
            entity = entity.bind(michal)();
            return entity;
        };
        entity['onPress'] = report;
        report = 0.5;
        entity['activeOpacity'] = report;
        report = 14;
        report = golfie[report];
        report = oscard.bind(tangon)(report);
        oscard = report.StaffBadgeIcon;
        report = {'size': 'md', 'color': 'white'};
        report = zuuluu.bind(tangon)(oscard, report);
        entity['children'] = report;
        entity = zuuluu.bind(tangon)(michal, entity);
        return entity;
    };
    tangon = golfie.bind(option)(tangon);
    var _closure1_slot16 = tangon;
    tangon = 17;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/devtools/native/components/DevWidget.tsx';
    tangon = report.bind(oscard)(tangon);
    michal = function() { // Original name: DevWidget
        zuuluu = _closure1_slot0;
        romeon = _closure1_slot2;
        michal = 6;
        entity = romeon[michal];
        tangon = undefined;
        golfie = zuuluu.bind(tangon)(entity);
        oscard = golfie.useSharedValue;
        entity = _closure1_slot4;
        report = entity.devWidgetPosition;
        report = report.x;
        foxtra = oscard.bind(golfie)(report);
        michal = romeon[michal];
        zuuluu = zuuluu.bind(tangon)(michal);
        michal = zuuluu.useSharedValue;
        entity = entity.devWidgetPosition;
        entity = entity.y;
        offset = michal.bind(zuuluu)(entity);
        zuuluu = _closure1_slot8;
        michal = _closure1_slot7;
        entity = {};
        option = _closure1_slot6;
        yankee = _closure1_slot1;
        report = 15;
        report = romeon[report];
        oscard = yankee.bind(tangon)(report);
        report = {};
        report['x'] = foxtra;
        report['y'] = offset;
        oscard = option.bind(tangon)(oscard, report);
        report = new Array(2);
        report[0] = oscard;
        golfie = _closure1_slot15;
        oscard = {};
        oscard['x'] = foxtra;
        oscard['y'] = offset;
        offset = _closure1_slot5;
        oscard['contentWidth'] = offset;
        oscard['contentHeight'] = offset;
        offset = 5;
        offset = romeon[offset];
        offset = yankee.bind(tangon)(offset);
        offset = offset.spacing;
        offset = offset.PX_4;
        oscard['dragBoundsPadding'] = offset;
        offset = function(argFoo) { // Original name: onChangePosition
            zuuluu = _closure1_slot0;
            michal = _closure1_slot2;
            entity = 16;
            michal = michal[entity];
            entity = undefined;
            zuuluu = zuuluu.bind(entity)(michal);
            michal = zuuluu.updateDevToolsSettings;
            entity = {};
            tangon = argFoo;
            entity['devWidgetPosition'] = tangon;
            entity = michal.bind(zuuluu)(entity);
            return entity;
        };
        oscard['onChangePosition'] = offset;
        offset = _closure1_slot16;
        verify = {};
        verify = option.bind(tangon)(offset, verify);
        oscard['children'] = verify;
        oscard = option.bind(tangon)(golfie, oscard);
        report[1] = oscard;
        entity['children'] = report;
        entity = zuuluu.bind(tangon)(michal, entity);
        return entity;
    };
    zuuluu['default'] = michal;
    return entity;
})();