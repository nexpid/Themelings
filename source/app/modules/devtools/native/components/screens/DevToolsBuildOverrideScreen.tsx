// app/modules/devtools/native/components/screens/DevToolsBuildOverrideScreen.tsx
export default (function(argFoo, argBar, argBaz, argCorge, _, argFred, argPlugh) {
    report = argBar;
    foxtrot = argBaz;
    zulu = argFred;
    oscar = argPlugh;
    var _closure1_slot0 = report;
    var _closure1_slot1 = foxtrot;
    var _closure1_slot2 = oscar;
    entity = global;
    options = entity.Object;
    golf = options.defineProperty;
    tango = {};
    entity = true;
    tango['value'] = entity;
    entity = '__esModule';
    entity = golf.bind(options)(zulu, entity, tango);
    entity = 0;
    tango = oscar[entity];
    entity = undefined;
    tango = foxtrot.bind(entity)(tango);
    var _closure1_slot3 = tango;
    backup = 1;
    golf = oscar[backup];
    tango = argCorge;
    golf = tango.bind(entity)(golf);
    var _closure1_slot4 = golf;
    tango = 2;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.ScrollView;
    var _closure1_slot5 = tango;
    tango = 3;
    tango = oscar[tango];
    tango = foxtrot.bind(entity)(tango);
    var _closure1_slot6 = tango;
    tango = 4;
    options = oscar[tango];
    options = report.bind(entity)(options);
    yankee = options.jsx;
    var _closure1_slot7 = yankee;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.jsxs;
    var _closure1_slot8 = tango;
    tango = 5;
    tango = oscar[tango];
    verify = report.bind(entity)(tango);
    options = verify.createStyles;
    tango = {};
    offset = {};
    romeo = 6;
    kilo = oscar[romeo];
    kilo = foxtrot.bind(entity)(kilo);
    kilo = kilo.colors;
    kilo = kilo.BACKGROUND_PRIMARY;
    offset['backgroundColor'] = kilo;
    offset['flex'] = backup;
    tango['content'] = offset;
    offset = {};
    romeo = oscar[romeo];
    romeo = foxtrot.bind(entity)(romeo);
    romeo = romeo.spacing;
    romeo = romeo.PX_16;
    offset['padding'] = romeo;
    tango['contentContainer'] = offset;
    tango = options.bind(verify)(tango);
    var _closure1_slot9 = tango;
    options = {'label': 'Branch Name', 'value': 'branch'};
    tango = 7;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    verify = tango.TagIcon;
    tango = {};
    tango = yankee.bind(entity)(verify, tango);
    options['icon'] = tango;
    tango = new Array(2);
    tango[0] = options;
    options = {'label': 'Commit SHA', 'value': 'id'};
    verify = 8;
    verify = oscar[verify];
    verify = report.bind(entity)(verify);
    offset = verify.HashmarkIcon;
    verify = {};
    verify = yankee.bind(entity)(offset, verify);
    options['icon'] = verify;
    tango[1] = options;
    var _closure1_slot10 = tango;
    tango = golf.memo;
    mike = function() {
        _fun98348: for(var _fun98348_ip = 0; ; ) switch(_fun98348_ip) {
 0:
            entity = _closure1_slot9;
            tango = undefined;
            offset = entity.bind(tango)();
            mike = _closure1_slot1;
            options = _closure1_slot2;
            entity = 9;
            entity = options[entity];
            mike = mike.bind(tango)(entity);
            entity = {};
            output = true;
            entity['includeKeyboardHeightIOS'] = output;
            entity = mike.bind(tango)(entity);
            verify = entity.insets;
            report = entity.onScroll;
            oscar = _closure1_slot0;
            entity = 10;
            entity = options[entity];
            golf = oscar.bind(tango)(entity);
            zulu = golf.useStateFromStores;
            entity = _closure1_slot6;
            mike = new Array(1);
            mike[0] = entity;
            entity = function() {
                _fun98349: for(var _fun98349_ip = 0; ; ) switch(_fun98349_ip) {
 0:
                    zulu = _closure1_slot6;
                    entity = zulu.getCurrentBuildOverride;
                    entity = entity.bind(zulu)();
                    zulu = entity.overrides;
                    entity = null;
                    tango = entity == zulu;
                    report = undefined;
                    entity = undefined;
                    if(tango) { _fun98349_ip = 66; continue _fun98349 }
 36:
                    tango = _closure1_slot0;
                    oscar = _closure1_slot2;
                    mike = 11;
                    mike = oscar[mike];
                    mike = tango.bind(report)(mike);
                    mike = mike.DEVICE_FIELD;
                    entity = zulu[mike];
 66:
                    return entity;
                }
            };
            result = zulu.bind(golf)(mike, entity);
            var _closure2_slot0 = result;
            zulu = _closure1_slot4;
            mike = zulu.useState;
            backup = '';
            entity = {'type': 'branch', 'id': ''};
            zulu = mike.bind(zulu)(entity);
            mike = _closure1_slot3;
            entity = 2;
            mike = mike.bind(tango)(zulu, entity);
            entity = 0;
            foxtrot = mike[entity];
            var _closure2_slot1 = foxtrot;
            entity = 1;
            entity = mike[entity];
            var _closure2_slot2 = entity;
            control = function(argFoo) { // Original name: getLabel
                _fun98350: for(var _fun98350_ip = 0; ; ) switch(_fun98350_ip) {
 0:
                    mike = argFoo;
                    var _closure3_slot0 = mike;
                    zulu = _closure1_slot10;
                    mike = zulu.find;
                    entity = function(argFoo) {
                        entity = argFoo;
                        mike = entity.value;
                        entity = _closure3_slot0;
                        entity = entity.type;
                        entity = mike === entity;
                        return entity;
                    };
                    mike = mike.bind(zulu)(entity);
                    entity = null;
                    zulu = entity == mike;
                    entity = undefined;
                    if(zulu) { _fun98350_ip = 49; continue _fun98350 }
 44:
                    entity = mike.label;
 49:
                    return entity;
                }
            };
            zulu = _closure1_slot7;
            mike = _closure1_slot5;
            entity = {};
            golf = offset.content;
            entity['style'] = golf;
            golf = {};
            status = offset.contentContainer;
            sierra = golf;
            yankee = copyDataProperties(sierra, status);
            offset = offset.contentContainer;
            offset = offset.padding;
            verify = verify.bottom;
            offset = offset + verify;
            verify = 'paddingBottom';
            golf[verify] = offset;
            entity['contentContainerStyle'] = golf;
            entity['onScroll'] = report;
            golf = _closure1_slot8;
            report = 12;
            report = options[report];
            report = oscar.bind(tango)(report);
            oscar = report.Stack;
            report = {};
            options = 16;
            report['spacing'] = options;
            offset = null;
            options = offset != result;
            verify = null;
            if(!options) { _fun98348_ip = 648; continue _fun98348 }
 302:
            sizing = _closure1_slot8;
            config = _closure1_slot0;
            record = _closure1_slot2;
            options = 13;
            options = record[options];
            options = config.bind(tango)(options);
            yankee = options.TableRowGroup;
            options = {};
            echo = 'Current Override';
            options['title'] = echo;
            vacuum = _closure1_slot7;
            update = 14;
            echo = record[update];
            echo = config.bind(tango)(echo);
            source = echo.TableRow;
            echo = {};
            sequence = 15;
            sequence = record[sequence];
            sequence = config.bind(tango)(sequence);
            context = sequence.CopyIcon;
            sequence = {};
            sequence = vacuum.bind(tango)(context, sequence);
            echo['icon'] = sequence;
            sequence = control.bind(tango)(result);
            echo['label'] = sequence;
            sequence = result.id;
            echo['subLabel'] = sequence;
            sequence = function() { // Original name: onPress
                zulu = _closure1_slot0;
                tango = _closure1_slot2;
                entity = 16;
                mike = tango[entity];
                entity = undefined;
                oscar = zulu.bind(entity)(mike);
                report = oscar.copy;
                mike = _closure2_slot0;
                mike = mike.id;
                mike = report.bind(oscar)(mike);
                mike = 17;
                mike = tango[mike];
                zulu = zulu.bind(entity)(mike);
                mike = zulu.presentCopiedToClipboard;
                mike = mike.bind(zulu)();
                return entity;
            };
            echo['onPress'] = sequence;
            source = vacuum.bind(tango)(source, echo);
            echo = new Array(3);
            echo[0] = source;
            source = record[update];
            source = config.bind(tango)(source);
            context = source.TableRow;
            source = {};
            sequence = 18;
            sequence = record[sequence];
            sequence = config.bind(tango)(sequence);
            papa = sequence.RefreshIcon;
            sequence = {};
            sequence = vacuum.bind(tango)(papa, sequence);
            source['icon'] = sequence;
            sequence = 'Refresh Override';
            source['label'] = sequence;
            sequence = 11;
            papa = record[sequence];
            papa = config.bind(tango)(papa);
            papa = papa.refreshBuildOverride;
            source['onPress'] = papa;
            source['arrow'] = output;
            source = vacuum.bind(tango)(context, source);
            echo[1] = source;
            update = record[update];
            update = config.bind(tango)(update);
            source = update.TableRow;
            update = {'icon': null, 'label': 'Clear Override', 'variant': 'danger', 'onPress': null, 'arrow': true};
            context = 19;
            context = record[context];
            context = config.bind(tango)(context);
            papa = context.TrashIcon;
            context = {};
            target = 'text-danger';
            context['color'] = target;
            context = vacuum.bind(tango)(papa, context);
            update['icon'] = context;
            sequence = record[sequence];
            sequence = config.bind(tango)(sequence);
            sequence = sequence.clearBuildOverride;
            update['onPress'] = sequence;
            update = vacuum.bind(tango)(source, update);
            echo[2] = update;
            options['children'] = echo;
            verify = sizing.bind(tango)(yankee, options);
 648:
            options = new Array(4);
            options[0] = verify;
            sizing = _closure1_slot7;
            yankee = _closure1_slot0;
            echo = _closure1_slot2;
            verify = 20;
            verify = echo[verify];
            verify = yankee.bind(tango)(verify);
            yankee = verify.TableRadioGroup;
            verify = {};
            result = offset != result;
            echo = backup;
            if(!result) { _fun98348_ip = 704; continue _fun98348 }
 698:
            echo = 'New';
 704:
            result = ' Override Type';
            result = echo + result;
            verify['title'] = result;
            result = foxtrot.type;
            verify['value'] = result;
            result = function(argFoo) { // Original name: onChange
                zulu = _closure2_slot2;
                mike = {};
                entity = argFoo;
                mike['type'] = entity;
                entity = '';
                mike['id'] = entity;
                entity = undefined;
                mike = zulu.bind(entity)(mike);
                return entity;
            };
            verify['onChange'] = result;
            verify['hasIcons'] = output;
            source = _closure1_slot10;
            result = source.map;
            output = function(argFoo) {
                entity = argFoo;
                oscar = entity.icon;
                report = entity.value;
                golf = entity.label;
                tango = _closure1_slot7;
                mike = _closure1_slot0;
                zulu = _closure1_slot2;
                entity = 21;
                entity = zulu[entity];
                zulu = undefined;
                entity = mike.bind(zulu)(entity);
                mike = entity.TableRadioRow;
                entity = {};
                entity['value'] = report;
                entity['label'] = golf;
                entity['icon'] = oscar;
                entity = tango.bind(zulu)(mike, entity, report);
                return entity;
            };
            output = result.bind(source)(output);
            verify['children'] = output;
            verify = sizing.bind(tango)(yankee, verify);
            options[1] = verify;
            output = _closure1_slot7;
            result = _closure1_slot0;
            echo = _closure1_slot2;
            verify = 13;
            verify = echo[verify];
            verify = result.bind(tango)(verify);
            sizing = verify.TableRowGroup;
            verify = {};
            yankee = control.bind(tango)(foxtrot);
            verify['title'] = yankee;
            yankee = 14;
            yankee = echo[yankee];
            yankee = result.bind(tango)(yankee);
            echo = yankee.TableRow;
            result = {};
            update = source.find;
            yankee = function(argFoo) {
                entity = argFoo;
                mike = entity.value;
                entity = _closure2_slot1;
                entity = entity.type;
                entity = mike === entity;
                return entity;
            };
            yankee = update.bind(source)(yankee);
            update = offset == yankee;
            offset = undefined;
            if(update) { _fun98348_ip = 871; continue _fun98348 }
 866:
            offset = yankee.icon;
 871:
            result['icon'] = offset;
            yankee = _closure1_slot7;
            offset = _closure1_slot0;
            kilo = _closure1_slot2;
            update = 22;
            update = kilo[update];
            update = offset.bind(tango)(update);
            source = update.TextInput;
            update = {'size': 'md', 'placeholder': null, 'onChange': null, 'autoCapitalize': 'none', 'autoCorrect': false, 'autoComplete': 'off', 'isClearable': true};
            sequence = control.bind(tango)(foxtrot);
            control = global;
            control = control.HermesInternal;
            vacuum = control.concat;
            control = 'Enter ';
            control = vacuum.bind(control)(sequence);
            update['placeholder'] = control;
            control = function(argFoo) { // Original name: onChange
                zulu = _closure2_slot2;
                mike = {};
                report = _closure2_slot1;
                oscar = mike;
                entity = copyDataProperties(oscar, report);
                tango = argFoo;
                entity = 'id';
                mike[entity] = tango;
                entity = undefined;
                mike = zulu.bind(entity)(mike);
                return entity;
            };
            update['onChange'] = control;
            update = yankee.bind(tango)(source, update);
            result['label'] = update;
            result = output.bind(tango)(echo, result);
            verify['children'] = result;
            verify = output.bind(tango)(sizing, verify);
            options[2] = verify;
            verify = 23;
            verify = kilo[verify];
            verify = offset.bind(tango)(verify);
            offset = verify.Button;
            verify = {};
            kilo = 'Apply Build Override';
            verify['text'] = kilo;
            foxtrot = foxtrot.id;
            foxtrot = backup === foxtrot;
            verify['disabled'] = foxtrot;
            romeo = function() { // Original name: onPress
                _fun98357: for(var _fun98357_ip = 0; ; ) switch(_fun98357_ip) {
 0:
                    mike = _closure2_slot1;
                    zulu = mike.type;
                    mike = 'branch';
                    if(!(mike !== zulu)) { _fun98357_ip = 122; continue _fun98357 }
 20:
                    mike = 'id';
                    if(!(mike !== zulu)) { _fun98357_ip = 75; continue _fun98357 }
 28:
                    tango = _closure1_slot0;
                    zulu = _closure1_slot2;
                    mike = 24;
                    zulu = zulu[mike];
                    mike = undefined;
                    tango = tango.bind(mike)(zulu);
                    zulu = tango.assertNever;
                    mike = _closure2_slot1;
                    mike = mike.type;
                    mike = zulu.bind(tango)(mike);
                    _fun98357_ip = 167; continue _fun98357;
 75:
                    tango = _closure1_slot0;
                    zulu = _closure1_slot2;
                    mike = 11;
                    zulu = zulu[mike];
                    mike = undefined;
                    tango = tango.bind(mike)(zulu);
                    zulu = tango.setBuildOverrideForId;
                    mike = _closure2_slot1;
                    mike = mike.id;
                    mike = zulu.bind(tango)(mike);
                    _fun98357_ip = 167; continue _fun98357;
 122:
                    tango = _closure1_slot0;
                    zulu = _closure1_slot2;
                    mike = 11;
                    zulu = zulu[mike];
                    mike = undefined;
                    zulu = tango.bind(mike)(zulu);
                    mike = zulu.setBuildOverrideForBranch;
                    entity = _closure2_slot1;
                    entity = entity.id;
                    entity = mike.bind(zulu)(entity);
 167:
                    entity = undefined;
                    return entity;
                }
            };
            verify['onPress'] = romeo;
            verify = yankee.bind(tango)(offset, verify);
            options[3] = verify;
            report['children'] = options;
            report = golf.bind(tango)(oscar, report);
            entity['children'] = report;
            entity = zulu.bind(tango)(mike, entity);
            return entity;
        }
    };
    mike = tango.bind(golf)(mike);
    tango = 25;
    tango = oscar[tango];
    oscar = report.bind(entity)(tango);
    report = oscar.fileFinishedImporting;
    tango = 'modules/devtools/native/components/screens/DevToolsBuildOverrideScreen.tsx';
    tango = report.bind(oscar)(tango);
    zulu['default'] = mike;
    return entity;
})();