// app/modules/devtools/native/components/screens/DevToolsBuildOverrideScreen.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    report = argBar;
    foxtra = argBaz;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    var _closure1_slot1 = foxtra;
    var _closure1_slot2 = oscard;
    entity = global;
    option = entity.Object;
    golfie = option.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(option)(zuuluu, entity, tangon);
    entity = 0;
    tangon = oscard[entity];
    entity = undefined;
    tangon = foxtra.bind(entity)(tangon);
    var _closure1_slot3 = tangon;
    backup = 1;
    golfie = oscard[backup];
    tangon = argCor;
    golfie = tangon.bind(entity)(golfie);
    var _closure1_slot4 = golfie;
    tangon = 2;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.ScrollView;
    var _closure1_slot5 = tangon;
    tangon = 3;
    tangon = oscard[tangon];
    tangon = foxtra.bind(entity)(tangon);
    var _closure1_slot6 = tangon;
    tangon = 4;
    option = oscard[tangon];
    option = report.bind(entity)(option);
    yankee = option.jsx;
    var _closure1_slot7 = yankee;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.jsxs;
    var _closure1_slot8 = tangon;
    tangon = 5;
    tangon = oscard[tangon];
    verify = report.bind(entity)(tangon);
    option = verify.createStyles;
    tangon = {};
    offset = {};
    romeon = 6;
    kiloes = oscard[romeon];
    kiloes = foxtra.bind(entity)(kiloes);
    kiloes = kiloes.colors;
    kiloes = kiloes.BACKGROUND_PRIMARY;
    offset['backgroundColor'] = kiloes;
    offset['flex'] = backup;
    tangon['content'] = offset;
    offset = {};
    romeon = oscard[romeon];
    romeon = foxtra.bind(entity)(romeon);
    romeon = romeon.spacing;
    romeon = romeon.PX_16;
    offset['padding'] = romeon;
    tangon['contentContainer'] = offset;
    tangon = option.bind(verify)(tangon);
    var _closure1_slot9 = tangon;
    option = {'label': 'Branch Name', 'value': 'branch'};
    tangon = 7;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    verify = tangon.TagIcon;
    tangon = {};
    tangon = yankee.bind(entity)(verify, tangon);
    option['icon'] = tangon;
    tangon = new Array(2);
    tangon[0] = option;
    option = {'label': 'Commit SHA', 'value': 'id'};
    verify = 8;
    verify = oscard[verify];
    verify = report.bind(entity)(verify);
    offset = verify.HashmarkIcon;
    verify = {};
    verify = yankee.bind(entity)(offset, verify);
    option['icon'] = verify;
    tangon[1] = option;
    var _closure1_slot10 = tangon;
    tangon = golfie.memo;
    michal = function() {
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            entity = _closure1_slot9;
            tangon = undefined;
            offset = entity.bind(tangon)();
            michal = _closure1_slot1;
            option = _closure1_slot2;
            entity = 9;
            entity = option[entity];
            michal = michal.bind(tangon)(entity);
            entity = {};
            output = true;
            entity['includeKeyboardHeightIOS'] = output;
            entity = michal.bind(tangon)(entity);
            verify = entity.insets;
            report = entity.onScroll;
            oscard = _closure1_slot0;
            entity = 10;
            entity = option[entity];
            golfie = oscard.bind(tangon)(entity);
            zuuluu = golfie.useStateFromStores;
            entity = _closure1_slot6;
            michal = new Array(1);
            michal[0] = entity;
            entity = function() {
                _fun00003: for(var _fun00004_ip = 0; ; ) switch(_fun00004_ip) {
 0:
                    zuuluu = _closure1_slot6;
                    entity = zuuluu.getCurrentBuildOverride;
                    entity = entity.bind(zuuluu)();
                    zuuluu = entity.overrides;
                    entity = null;
                    tangon = entity == zuuluu;
                    report = undefined;
                    entity = undefined;
                    if(tangon) { _fun00004_ip = 66; continue _fun00003 }
 36:
                    tangon = _closure1_slot0;
                    oscard = _closure1_slot2;
                    michal = 11;
                    michal = oscard[michal];
                    michal = tangon.bind(report)(michal);
                    michal = michal.DEVICE_FIELD;
                    entity = zuuluu[michal];
 66:
                    return entity;
                }
            };
            result = zuuluu.bind(golfie)(michal, entity);
            var _closure2_slot0 = result;
            zuuluu = _closure1_slot4;
            michal = zuuluu.useState;
            backup = '';
            entity = {'type': 'branch', 'id': ''};
            zuuluu = michal.bind(zuuluu)(entity);
            michal = _closure1_slot3;
            entity = 2;
            michal = michal.bind(tangon)(zuuluu, entity);
            entity = 0;
            foxtra = michal[entity];
            var _closure2_slot1 = foxtra;
            entity = 1;
            entity = michal[entity];
            var _closure2_slot2 = entity;
            ctrled = function(argFoo) { // Original name: getLabel
                _fun00005: for(var _fun00006_ip = 0; ; ) switch(_fun00006_ip) {
 0:
                    michal = argFoo;
                    var _closure3_slot0 = michal;
                    zuuluu = _closure1_slot10;
                    michal = zuuluu.find;
                    entity = function(argFoo) {
                        entity = argFoo;
                        michal = entity.value;
                        entity = _closure3_slot0;
                        entity = entity.type;
                        entity = michal === entity;
                        return entity;
                    };
                    michal = michal.bind(zuuluu)(entity);
                    entity = null;
                    zuuluu = entity == michal;
                    entity = undefined;
                    if(zuuluu) { _fun00006_ip = 49; continue _fun00005 }
 44:
                    entity = michal.label;
 49:
                    return entity;
                }
            };
            zuuluu = _closure1_slot7;
            michal = _closure1_slot5;
            entity = {};
            golfie = offset.content;
            entity['style'] = golfie;
            golfie = {};
            status = offset.contentContainer;
            sierra = golfie;
            yankee = copyDataProperties(sierra, status);
            offset = offset.contentContainer;
            offset = offset.padding;
            verify = verify.bottom;
            offset = offset + verify;
            verify = 'paddingBottom';
            golfie[verify] = offset;
            entity['contentContainerStyle'] = golfie;
            entity['onScroll'] = report;
            golfie = _closure1_slot8;
            report = 12;
            report = option[report];
            report = oscard.bind(tangon)(report);
            oscard = report.Stack;
            report = {};
            option = 16;
            report['spacing'] = option;
            offset = null;
            option = offset != result;
            verify = null;
            if(!option) { _fun00002_ip = 648; continue _fun00001 }
 302:
            sizing = _closure1_slot8;
            config = _closure1_slot0;
            record = _closure1_slot2;
            option = 13;
            option = record[option];
            option = config.bind(tangon)(option);
            yankee = option.TableRowGroup;
            option = {};
            echoed = 'Current Override';
            option['title'] = echoed;
            vacuum = _closure1_slot7;
            update = 14;
            echoed = record[update];
            echoed = config.bind(tangon)(echoed);
            source = echoed.TableRow;
            echoed = {};
            sequen = 15;
            sequen = record[sequen];
            sequen = config.bind(tangon)(sequen);
            cntext = sequen.CopyIcon;
            sequen = {};
            sequen = vacuum.bind(tangon)(cntext, sequen);
            echoed['icon'] = sequen;
            sequen = ctrled.bind(tangon)(result);
            echoed['label'] = sequen;
            sequen = result.id;
            echoed['subLabel'] = sequen;
            sequen = function() { // Original name: onPress
                zuuluu = _closure1_slot0;
                tangon = _closure1_slot2;
                entity = 16;
                michal = tangon[entity];
                entity = undefined;
                oscard = zuuluu.bind(entity)(michal);
                report = oscard.copy;
                michal = _closure2_slot0;
                michal = michal.id;
                michal = report.bind(oscard)(michal);
                michal = 17;
                michal = tangon[michal];
                zuuluu = zuuluu.bind(entity)(michal);
                michal = zuuluu.presentCopiedToClipboard;
                michal = michal.bind(zuuluu)();
                return entity;
            };
            echoed['onPress'] = sequen;
            source = vacuum.bind(tangon)(source, echoed);
            echoed = new Array(3);
            echoed[0] = source;
            source = record[update];
            source = config.bind(tangon)(source);
            cntext = source.TableRow;
            source = {};
            sequen = 18;
            sequen = record[sequen];
            sequen = config.bind(tangon)(sequen);
            papara = sequen.RefreshIcon;
            sequen = {};
            sequen = vacuum.bind(tangon)(papara, sequen);
            source['icon'] = sequen;
            sequen = 'Refresh Override';
            source['label'] = sequen;
            sequen = 11;
            papara = record[sequen];
            papara = config.bind(tangon)(papara);
            papara = papara.refreshBuildOverride;
            source['onPress'] = papara;
            source['arrow'] = output;
            source = vacuum.bind(tangon)(cntext, source);
            echoed[1] = source;
            update = record[update];
            update = config.bind(tangon)(update);
            source = update.TableRow;
            update = {'icon': null, 'label': 'Clear Override', 'variant': 'danger', 'onPress': null, 'arrow': true};
            cntext = 19;
            cntext = record[cntext];
            cntext = config.bind(tangon)(cntext);
            papara = cntext.TrashIcon;
            cntext = {};
            target = 'text-danger';
            cntext['color'] = target;
            cntext = vacuum.bind(tangon)(papara, cntext);
            update['icon'] = cntext;
            sequen = record[sequen];
            sequen = config.bind(tangon)(sequen);
            sequen = sequen.clearBuildOverride;
            update['onPress'] = sequen;
            update = vacuum.bind(tangon)(source, update);
            echoed[2] = update;
            option['children'] = echoed;
            verify = sizing.bind(tangon)(yankee, option);
 648:
            option = new Array(4);
            option[0] = verify;
            sizing = _closure1_slot7;
            yankee = _closure1_slot0;
            echoed = _closure1_slot2;
            verify = 20;
            verify = echoed[verify];
            verify = yankee.bind(tangon)(verify);
            yankee = verify.TableRadioGroup;
            verify = {};
            result = offset != result;
            echoed = backup;
            if(!result) { _fun00002_ip = 704; continue _fun00001 }
 698:
            echoed = 'New';
 704:
            result = ' Override Type';
            result = echoed + result;
            verify['title'] = result;
            result = foxtra.type;
            verify['value'] = result;
            result = function(argFoo) { // Original name: onChange
                zuuluu = _closure2_slot2;
                michal = {};
                entity = argFoo;
                michal['type'] = entity;
                entity = '';
                michal['id'] = entity;
                entity = undefined;
                michal = zuuluu.bind(entity)(michal);
                return entity;
            };
            verify['onChange'] = result;
            verify['hasIcons'] = output;
            source = _closure1_slot10;
            result = source.map;
            output = function(argFoo) {
                entity = argFoo;
                oscard = entity.icon;
                report = entity.value;
                golfie = entity.label;
                tangon = _closure1_slot7;
                michal = _closure1_slot0;
                zuuluu = _closure1_slot2;
                entity = 21;
                entity = zuuluu[entity];
                zuuluu = undefined;
                entity = michal.bind(zuuluu)(entity);
                michal = entity.TableRadioRow;
                entity = {};
                entity['value'] = report;
                entity['label'] = golfie;
                entity['icon'] = oscard;
                entity = tangon.bind(zuuluu)(michal, entity, report);
                return entity;
            };
            output = result.bind(source)(output);
            verify['children'] = output;
            verify = sizing.bind(tangon)(yankee, verify);
            option[1] = verify;
            output = _closure1_slot7;
            result = _closure1_slot0;
            echoed = _closure1_slot2;
            verify = 13;
            verify = echoed[verify];
            verify = result.bind(tangon)(verify);
            sizing = verify.TableRowGroup;
            verify = {};
            yankee = ctrled.bind(tangon)(foxtra);
            verify['title'] = yankee;
            yankee = 14;
            yankee = echoed[yankee];
            yankee = result.bind(tangon)(yankee);
            echoed = yankee.TableRow;
            result = {};
            update = source.find;
            yankee = function(argFoo) {
                entity = argFoo;
                michal = entity.value;
                entity = _closure2_slot1;
                entity = entity.type;
                entity = michal === entity;
                return entity;
            };
            yankee = update.bind(source)(yankee);
            update = offset == yankee;
            offset = undefined;
            if(update) { _fun00002_ip = 871; continue _fun00001 }
 866:
            offset = yankee.icon;
 871:
            result['icon'] = offset;
            yankee = _closure1_slot7;
            offset = _closure1_slot0;
            kiloes = _closure1_slot2;
            update = 22;
            update = kiloes[update];
            update = offset.bind(tangon)(update);
            source = update.TextInput;
            update = {'size': 'md', 'placeholder': null, 'onChange': null, 'autoCapitalize': 'none', 'autoCorrect': false, 'autoComplete': 'off', 'isClearable': true};
            sequen = ctrled.bind(tangon)(foxtra);
            ctrled = global;
            ctrled = ctrled.HermesInternal;
            vacuum = ctrled.concat;
            ctrled = 'Enter ';
            ctrled = vacuum.bind(ctrled)(sequen);
            update['placeholder'] = ctrled;
            ctrled = function(argFoo) { // Original name: onChange
                zuuluu = _closure2_slot2;
                michal = {};
                report = _closure2_slot1;
                oscard = michal;
                entity = copyDataProperties(oscard, report);
                tangon = argFoo;
                entity = 'id';
                michal[entity] = tangon;
                entity = undefined;
                michal = zuuluu.bind(entity)(michal);
                return entity;
            };
            update['onChange'] = ctrled;
            update = yankee.bind(tangon)(source, update);
            result['label'] = update;
            result = output.bind(tangon)(echoed, result);
            verify['children'] = result;
            verify = output.bind(tangon)(sizing, verify);
            option[2] = verify;
            verify = 23;
            verify = kiloes[verify];
            verify = offset.bind(tangon)(verify);
            offset = verify.Button;
            verify = {};
            kiloes = 'Apply Build Override';
            verify['text'] = kiloes;
            foxtra = foxtra.id;
            foxtra = backup === foxtra;
            verify['disabled'] = foxtra;
            romeon = function() { // Original name: onPress
                _fun00007: for(var _fun00008_ip = 0; ; ) switch(_fun00008_ip) {
 0:
                    michal = _closure2_slot1;
                    zuuluu = michal.type;
                    michal = 'branch';
                    if(!(michal !== zuuluu)) { _fun00008_ip = 122; continue _fun00007 }
 20:
                    michal = 'id';
                    if(!(michal !== zuuluu)) { _fun00008_ip = 75; continue _fun00007 }
 28:
                    tangon = _closure1_slot0;
                    zuuluu = _closure1_slot2;
                    michal = 24;
                    zuuluu = zuuluu[michal];
                    michal = undefined;
                    tangon = tangon.bind(michal)(zuuluu);
                    zuuluu = tangon.assertNever;
                    michal = _closure2_slot1;
                    michal = michal.type;
                    michal = zuuluu.bind(tangon)(michal);
                    _fun00008_ip = 167; continue _fun00007;
 75:
                    tangon = _closure1_slot0;
                    zuuluu = _closure1_slot2;
                    michal = 11;
                    zuuluu = zuuluu[michal];
                    michal = undefined;
                    tangon = tangon.bind(michal)(zuuluu);
                    zuuluu = tangon.setBuildOverrideForId;
                    michal = _closure2_slot1;
                    michal = michal.id;
                    michal = zuuluu.bind(tangon)(michal);
                    _fun00008_ip = 167; continue _fun00007;
 122:
                    tangon = _closure1_slot0;
                    zuuluu = _closure1_slot2;
                    michal = 11;
                    zuuluu = zuuluu[michal];
                    michal = undefined;
                    zuuluu = tangon.bind(michal)(zuuluu);
                    michal = zuuluu.setBuildOverrideForBranch;
                    entity = _closure2_slot1;
                    entity = entity.id;
                    entity = michal.bind(zuuluu)(entity);
 167:
                    entity = undefined;
                    return entity;
                }
            };
            verify['onPress'] = romeon;
            verify = yankee.bind(tangon)(offset, verify);
            option[3] = verify;
            report['children'] = option;
            report = golfie.bind(tangon)(oscard, report);
            entity['children'] = report;
            entity = zuuluu.bind(tangon)(michal, entity);
            return entity;
        }
    };
    michal = tangon.bind(golfie)(michal);
    tangon = 25;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/devtools/native/components/screens/DevToolsBuildOverrideScreen.tsx';
    tangon = report.bind(oscard)(tangon);
    zuuluu['default'] = michal;
    return entity;
})();