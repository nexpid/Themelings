// app/modules/devtools/native/components/screens/DevToolsQuickActionsScreen.tsx
export default (function(argFoo, argBar, argBaz, argCorge, _, argFred, argPlugh) {
    report = argBar;
    yankee = argBaz;
    zulu = argFred;
    oscar = argPlugh;
    var _closure1_slot0 = report;
    var _closure1_slot1 = yankee;
    var _closure1_slot2 = oscar;
    entity = function() { // Original name: handleNewUserOnboarding
        report = _closure1_slot0;
        oscar = _closure1_slot2;
        entity = 19;
        zulu = oscar[entity];
        entity = undefined;
        golf = report.bind(entity)(zulu);
        tango = golf.setNewUser;
        zulu = _closure1_slot15;
        zulu = zulu.ORGANIC_REGISTERED;
        zulu = tango.bind(golf)(zulu);
        zulu = _closure1_slot1;
        mike = 20;
        mike = oscar[mike];
        tango = zulu.bind(entity)(mike);
        zulu = tango.wait;
        mike = 21;
        mike = oscar[mike];
        mike = report.bind(entity)(mike);
        mike = mike.startOnboarding;
        mike = zulu.bind(tango)(mike);
        return entity;
    };
    var _closure1_slot26 = entity;
    entity = function(argFoo) { // Original name: handleThemeChange
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            tango = _closure1_slot1;
            zulu = _closure1_slot2;
            entity = 22;
            zulu = zulu[entity];
            entity = undefined;
            tango = tango.bind(entity)(zulu);
            zulu = tango.updateTheme;
            report = _closure1_slot14;
            mike = argFoo;
            if(mike) { _fun00002_ip = 49; continue _fun00001 }
 41:
            mike = report.DARK;
            _fun00002_ip = 55; continue _fun00001;
 49:
            mike = report.LIGHT;
 55:
            mike = zulu.bind(tango)(mike);
            return entity;
        }
    };
    var _closure1_slot27 = entity;
    entity = function(argFoo) { // Original name: handleReducedMotionChange
        _fun00003: for(var _fun00004_ip = 0; ; ) switch(_fun00004_ip) {
 0:
            zulu = _closure1_slot0;
            mike = _closure1_slot2;
            entity = 23;
            mike = mike[entity];
            entity = undefined;
            tango = zulu.bind(entity)(mike);
            zulu = tango.setPrefersReducedMotion;
            mike = 'no-preference';
            report = argFoo;
            if(!report) { _fun00004_ip = 47; continue _fun00003 }
 43:
            mike = 'reduce';
 47:
            mike = zulu.bind(tango)(mike);
            return entity;
        }
    };
    var _closure1_slot28 = entity;
    entity = function() { // Original name: handleLaunchWelcomeReset
        report = _closure1_slot0;
        oscar = _closure1_slot2;
        entity = 24;
        mike = oscar[entity];
        entity = undefined;
        golf = report.bind(entity)(mike);
        tango = golf.removeDismissedContent;
        mike = 25;
        zulu = oscar[mike];
        zulu = report.bind(entity)(zulu);
        zulu = zulu.DismissibleContent;
        zulu = zulu.SEEN_LAUNCH_WELCOME;
        zulu = tango.bind(golf)(zulu);
        zulu = 26;
        zulu = oscar[zulu];
        tango = report.bind(entity)(zulu);
        zulu = tango.markDismissibleContentAsDismissed;
        mike = oscar[mike];
        mike = report.bind(entity)(mike);
        mike = mike.DismissibleContent;
        mike = mike.SEEN_OLD_DESIGN;
        mike = zulu.bind(tango)(mike);
        return entity;
    };
    var _closure1_slot29 = entity;
    entity = global;
    options = entity.Object;
    golf = options.defineProperty;
    tango = {};
    entity = true;
    tango['value'] = entity;
    entity = '__esModule';
    entity = golf.bind(options)(zulu, entity, tango);
    entity = 0;
    tango = oscar[entity];
    entity = undefined;
    tango = yankee.bind(entity)(tango);
    var _closure1_slot3 = tango;
    tango = 1;
    tango = oscar[tango];
    tango = yankee.bind(entity)(tango);
    var _closure1_slot4 = tango;
    tango = 2;
    golf = oscar[tango];
    tango = argCorge;
    tango = tango.bind(entity)(golf);
    var _closure1_slot5 = tango;
    tango = 3;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.ScrollView;
    var _closure1_slot6 = tango;
    tango = 4;
    tango = oscar[tango];
    tango = yankee.bind(entity)(tango);
    var _closure1_slot7 = tango;
    tango = 5;
    tango = oscar[tango];
    tango = yankee.bind(entity)(tango);
    var _closure1_slot8 = tango;
    tango = 6;
    tango = oscar[tango];
    tango = yankee.bind(entity)(tango);
    var _closure1_slot9 = tango;
    tango = 7;
    tango = oscar[tango];
    tango = yankee.bind(entity)(tango);
    var _closure1_slot10 = tango;
    tango = 8;
    tango = oscar[tango];
    tango = yankee.bind(entity)(tango);
    var _closure1_slot11 = tango;
    tango = 9;
    tango = oscar[tango];
    tango = yankee.bind(entity)(tango);
    var _closure1_slot12 = tango;
    tango = 10;
    tango = oscar[tango];
    tango = yankee.bind(entity)(tango);
    var _closure1_slot13 = tango;
    tango = 11;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.ThemeTypes;
    var _closure1_slot14 = tango;
    tango = 12;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.NewUserTypes;
    var _closure1_slot15 = tango;
    tango = 13;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    golf = tango.PREMIUM_TYPE_OVERRIDE_OPTIONS;
    var _closure1_slot16 = golf;
    tango = tango.UNSELECTED_PREMIUM_TYPE_OVERRIDE;
    var _closure1_slot17 = tango;
    tango = 14;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.VIBING_WUMPUS_MODAL_KEY;
    var _closure1_slot18 = tango;
    tango = 15;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.SystemThemeState;
    var _closure1_slot19 = tango;
    tango = 16;
    golf = oscar[tango];
    golf = report.bind(entity)(golf);
    golf = golf.jsx;
    var _closure1_slot20 = golf;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.jsxs;
    var _closure1_slot21 = tango;
    tango = 17;
    tango = oscar[tango];
    options = report.bind(entity)(tango);
    golf = options.createStyles;
    tango = {};
    verify = {};
    offset = 18;
    romeo = oscar[offset];
    romeo = yankee.bind(entity)(romeo);
    romeo = romeo.colors;
    romeo = romeo.BACKGROUND_PRIMARY;
    verify['backgroundColor'] = romeo;
    tango['container'] = verify;
    verify = {};
    offset = oscar[offset];
    offset = yankee.bind(entity)(offset);
    offset = offset.spacing;
    offset = offset.PX_16;
    verify['padding'] = offset;
    tango['content'] = verify;
    tango = golf.bind(options)(tango);
    var _closure1_slot22 = tango;
    tango = function() { // Original name: launchMFA
        report = _closure1_slot1;
        mike = _closure1_slot2;
        entity = 27;
        tango = mike[entity];
        entity = undefined;
        report = report.bind(entity)(tango);
        tango = report.pop;
        tango = tango.bind(report)();
        tango = _closure1_slot0;
        zulu = 29;
        zulu = mike[zulu];
        tango = tango.bind(entity)(zulu);
        zulu = 28;
        zulu = mike[zulu];
        mike = mike.paths;
        tango = tango.bind(entity)(zulu, mike);
        zulu = tango.then;
        mike = function(argFoo) {
            entity = argFoo;
            report = entity.openMFAModal;
            tango = {};
            entity = 'ticket';
            tango['ticket'] = entity;
            entity = new Array(5);
            zulu = {'type': 'webauthn', 'challenge': '{}'};
            entity[0] = zulu;
            zulu = {'type': 'totp', 'backup_codes_allowed': true};
            entity[1] = zulu;
            zulu = {};
            oscar = 'backup';
            zulu['type'] = oscar;
            entity[2] = zulu;
            zulu = {};
            oscar = 'sms';
            zulu['type'] = oscar;
            entity[3] = zulu;
            zulu = {};
            oscar = 'password';
            zulu['type'] = oscar;
            entity[4] = zulu;
            tango['methods'] = entity;
            entity = undefined;
            zulu = function() {
                entity = undefined;
                return entity;
            };
            mike = function() {
                entity = undefined;
                return entity;
            };
            mike = report.bind(entity)(tango, zulu, mike);
            return entity;
        };
        mike = zulu.bind(tango)(mike);
        return entity;
    };
    var _closure1_slot23 = tango;
    tango = function() { // Original name: showVibingWumpus
        report = _closure1_slot1;
        zulu = _closure1_slot2;
        entity = 27;
        tango = zulu[entity];
        entity = undefined;
        oscar = report.bind(entity)(tango);
        report = oscar.pushLazy;
        golf = _closure1_slot0;
        tango = 29;
        tango = zulu[tango];
        golf = golf.bind(entity)(tango);
        tango = 30;
        tango = zulu[tango];
        zulu = zulu.paths;
        tango = golf.bind(entity)(tango, zulu);
        zulu = {};
        golf = function() { // Original name: onClose
            entity = undefined;
            return entity;
        };
        zulu['onClose'] = golf;
        mike = _closure1_slot18;
        mike = report.bind(oscar)(tango, zulu, mike);
        return entity;
    };
    var _closure1_slot24 = tango;
    tango = function() {
        tango = _closure1_slot4;
        zulu = undefined;
        mike = function* () {
            entity = function* () { // Original name: ?anon_0_
                _fun00005: for(var _fun00006_ip = 0; ; ) switch(_fun00006_ip) {
 0:
                    StartGenerator();
                    ResumeGenerator(result_out_reg=0, return_bool_out_reg=1);
                    if(mike) { _fun00006_ip = 175; continue _fun00005 }
 10: // try_start_0
                    tango = _closure1_slot0;
                    report = _closure1_slot2;
                    mike = 31;
                    mike = report[mike];
                    report = undefined;
                    tango = tango.bind(report)(mike);
                    mike = tango.testAgeVerification;
                    mike = mike.bind(tango)();
                    SaveGenerator(address=49);
 47:
                    return mike;
 49:
                    ResumeGenerator(result_out_reg=1, return_bool_out_reg=3);
                    if(tango) { _fun00006_ip = 115; continue _fun00005 }
 55:
                    tango = _closure1_slot1;
                    oscar = _closure1_slot2;
                    zulu = 33;
                    zulu = oscar[zulu];
                    report = tango.bind(report)(zulu);
                    tango = report.showAgeVerification;
                    zulu = {};
                    oscar = mike.verification_webview_url;
                    zulu['webviewUrl'] = oscar;
                    oscar = function() { // Original name: onComplete
                        zulu = _closure1_slot1;
                        mike = _closure1_slot2;
                        entity = 32;
                        mike = mike[entity];
                        entity = undefined;
                        tango = zulu.bind(entity)(mike);
                        zulu = tango.open;
                        mike = {'content': '[On Complete] Successfully age verified', 'key': 'age-verification-test-success'};
                        mike = zulu.bind(tango)(mike);
                        return entity;
                    };
                    zulu['onComplete'] = oscar;
                    zulu = tango.bind(report)(zulu);
 113: // try_end0
                    _fun00006_ip = 170; continue _fun00005;
 115:
                    return mike;
 118: // catch_target0
                    CatchBlockStart(arg_register=1);
                    tango = _closure1_slot1;
                    zulu = _closure1_slot2;
                    mike = 32;
                    zulu = zulu[mike];
                    mike = undefined;
                    tango = tango.bind(mike)(zulu);
                    zulu = tango.open;
                    mike = {'content': 'Failed to show age verification test modal', 'key': 'age-verification-test-failure'};
                    mike = zulu.bind(tango)(mike);
 170:
                    mike = undefined;
                    return mike;
 175:
                    return entity;
                }
            };
            return entity;
        };
        mike = tango.bind(zulu)(mike);
        var _closure2_slot0 = mike;
        entity = function() {
            entity = undefined;
            tango = _closure2_slot0;
            zulu = tango.apply;
            entity = arguments;
            mike = entity;
            entity = this;
            entity = zulu.bind(tango)(entity, mike);
            return entity;
        };
        return entity;
    };
    tango = tango.bind(entity)();
    var _closure1_slot25 = tango;
    tango = 61;
    tango = oscar[tango];
    oscar = report.bind(entity)(tango);
    report = oscar.fileFinishedImporting;
    tango = 'modules/devtools/native/components/screens/DevToolsQuickActionsScreen.tsx';
    tango = report.bind(oscar)(tango);
    mike = function() { // Original name: DevToolsQuickActionsScreen
        _fun00007: for(var _fun00008_ip = 0; ; ) switch(_fun00008_ip) {
 0:
            mike = _closure1_slot22;
            tango = undefined;
            verify = mike.bind(tango)();
            zulu = _closure1_slot1;
            oscar = _closure1_slot2;
            mike = 34;
            mike = oscar[mike];
            mike = zulu.bind(tango)(mike);
            options = mike.bind(tango)();
            report = _closure1_slot0;
            zulu = 35;
            mike = oscar[zulu];
            yankee = report.bind(tango)(mike);
            offset = yankee.useStateFromStoresObject;
            mike = _closure1_slot10;
            golf = new Array(4);
            golf[0] = mike;
            mike = _closure1_slot9;
            golf[1] = mike;
            mike = _closure1_slot11;
            golf[2] = mike;
            mike = _closure1_slot13;
            golf[3] = mike;
            mike = function() {
                entity = {};
                zulu = _closure1_slot10;
                zulu = zulu.theme;
                entity['theme'] = zulu;
                zulu = _closure1_slot11;
                tango = zulu.useSystemTheme;
                zulu = _closure1_slot19;
                zulu = zulu.ON;
                zulu = tango === zulu;
                entity['usingSystemTheme'] = zulu;
                zulu = _closure1_slot9;
                zulu = zulu.locale;
                entity['locale'] = zulu;
                mike = _closure1_slot13;
                mike = mike.showDevWidget;
                entity['showDevWidget'] = mike;
                return entity;
            };
            mike = offset.bind(yankee)(golf, mike);
            context = mike.theme;
            romeo = mike.usingSystemTheme;
            config = mike.locale;
            var _closure2_slot0 = config;
            yankee = mike.showDevWidget;
            var _closure2_slot1 = yankee;
            mike = oscar[zulu];
            foxtrot = report.bind(tango)(mike);
            offset = foxtrot.useStateFromStores;
            mike = _closure1_slot12;
            golf = new Array(1);
            golf[0] = mike;
            mike = function() {
                mike = _closure1_slot12;
                entity = mike.getCurrentUser;
                entity = entity.bind(mike)();
                return entity;
            };
            mike = offset.bind(foxtrot)(golf, mike);
            var _closure2_slot2 = mike;
            mike = oscar[zulu];
            foxtrot = report.bind(tango)(mike);
            offset = foxtrot.useStateFromStores;
            mike = _closure1_slot8;
            golf = new Array(1);
            golf[0] = mike;
            mike = function() {
                mike = _closure1_slot8;
                entity = mike.getPremiumTypeOverride;
                entity = entity.bind(mike)();
                return entity;
            };
            mike = offset.bind(foxtrot)(golf, mike);
            var _closure2_slot3 = mike;
            golf = _closure1_slot5;
            offset = golf.useState;
            mike = false;
            mike = offset.bind(golf)(mike);
            output = _closure1_slot3;
            sizing = 2;
            offset = output.bind(tango)(mike, sizing);
            kilo = 0;
            mike = offset[kilo];
            foxtrot = 1;
            offset = offset[foxtrot];
            var _closure2_slot4 = offset;
            result = golf.useState;
            offset = 36;
            offset = oscar[offset];
            echo = report.bind(tango)(offset);
            offset = echo.isJSITraceEnabled;
            offset = offset.bind(echo)();
            offset = result.bind(golf)(offset);
            offset = output.bind(tango)(offset, sizing);
            source = offset[kilo];
            var _closure2_slot5 = source;
            offset = offset[foxtrot];
            var _closure2_slot6 = offset;
            offset = 37;
            offset = oscar[offset];
            offset = report.bind(tango)(offset);
            foxtrot = offset.IgnoreProfileSpeedbumpDisabled;
            offset = foxtrot.useSetting;
            sequence = offset.bind(foxtrot)();
            var _closure2_slot7 = sequence;
            kilo = golf.useEffect;
            foxtrot = new Array(1);
            foxtrot[0] = source;
            offset = function() {
                zulu = _closure1_slot0;
                mike = _closure1_slot2;
                entity = 36;
                mike = mike[entity];
                entity = undefined;
                tango = zulu.bind(entity)(mike);
                zulu = tango.setJSITraceEnabled;
                mike = _closure2_slot5;
                mike = zulu.bind(tango)(mike);
                return entity;
            };
            offset = kilo.bind(golf)(offset, foxtrot);
            zulu = oscar[zulu];
            offset = report.bind(tango)(zulu);
            oscar = offset.useStateFromStores;
            zulu = _closure1_slot7;
            report = new Array(1);
            report[0] = zulu;
            zulu = function() {
                entity = _closure1_slot7;
                entity = entity.useReducedMotion;
                return entity;
            };
            update = oscar.bind(offset)(report, zulu);
            oscar = golf.useCallback;
            report = new Array(1);
            report[0] = config;
            zulu = function() {
                _fun00009: for(var _fun00010_ip = 0; ; ) switch(_fun00010_ip) {
 0:
                    entity = _closure2_slot0;
                    zulu = 'en-US';
                    if(!(zulu === entity)) { _fun00010_ip = 57; continue _fun00009 }
 15:
                    tango = _closure1_slot1;
                    mike = _closure1_slot2;
                    entity = 22;
                    mike = mike[entity];
                    entity = undefined;
                    tango = tango.bind(entity)(mike);
                    mike = tango.updateLocale;
                    entity = 'pt-BR';
                    entity = mike.bind(tango)(entity);
                    _fun00010_ip = 93; continue _fun00009;
 57:
                    tango = _closure1_slot1;
                    mike = _closure1_slot2;
                    entity = 22;
                    mike = mike[entity];
                    entity = undefined;
                    mike = tango.bind(entity)(mike);
                    entity = mike.updateLocale;
                    entity = entity.bind(mike)(zulu);
 93:
                    entity = undefined;
                    return entity;
                }
            };
            kilo = oscar.bind(golf)(zulu, report);
            if(mike) { _fun00008_ip = 2662; continue _fun00007 }
 457:
            report = _closure1_slot21;
            zulu = _closure1_slot6;
            mike = {};
            oscar = verify.container;
            mike['style'] = oscar;
            golf = verify.content;
            oscar = new Array(2);
            oscar[0] = golf;
            golf = {};
            verify = verify.content;
            verify = verify.padding;
            options = options.bottom;
            options = verify + options;
            golf['paddingBottom'] = options;
            oscar[1] = golf;
            mike['contentContainerStyle'] = oscar;
            echo = _closure1_slot20;
            output = _closure1_slot0;
            sizing = _closure1_slot2;
            golf = 39;
            oscar = sizing[golf];
            oscar = output.bind(tango)(oscar);
            options = oscar.TableRowGroup;
            oscar = {};
            verify = 'General';
            oscar['title'] = verify;
            foxtrot = 40;
            verify = sizing[foxtrot];
            verify = output.bind(tango)(verify);
            offset = verify.TableSwitchRow;
            verify = {};
            result = 'Show Dev Widget';
            verify['label'] = result;
            verify['value'] = yankee;
            yankee = function() { // Original name: onValueChange
                zulu = _closure1_slot0;
                mike = _closure1_slot2;
                entity = 41;
                mike = mike[entity];
                entity = undefined;
                zulu = zulu.bind(entity)(mike);
                mike = zulu.updateDevToolsSettings;
                entity = {};
                tango = _closure2_slot1;
                tango = !tango;
                entity['showDevWidget'] = tango;
                entity = mike.bind(zulu)(entity);
                return entity;
            };
            verify['onValueChange'] = yankee;
            verify = echo.bind(tango)(offset, verify);
            oscar['children'] = verify;
            options = echo.bind(tango)(options, oscar);
            oscar = new Array(9);
            oscar[0] = options;
            control = _closure1_slot1;
            options = 42;
            verify = sizing[options];
            yankee = control.bind(tango)(verify);
            verify = {};
            offset = 18;
            result = sizing[offset];
            result = control.bind(tango)(result);
            result = result.spacing;
            result = result.PX_16;
            verify['size'] = result;
            verify = echo.bind(tango)(yankee, verify);
            oscar[1] = verify;
            verify = sizing[golf];
            verify = output.bind(tango)(verify);
            yankee = verify.TableRowGroup;
            verify = {};
            result = 'Appearance';
            verify['title'] = result;
            sizing = sizing[foxtrot];
            sizing = output.bind(tango)(sizing);
            result = sizing.TableSwitchRow;
            output = {};
            sizing = 'Light Theme';
            if(!romeo) { _fun00008_ip = 747; continue _fun00007 }
 741:
            sizing = '(using system theme)';
 747:
            output['label'] = sizing;
            output['disabled'] = romeo;
            control = _closure1_slot20;
            sizing = _closure1_slot0;
            romeo = _closure1_slot2;
            vacuum = 43;
            vacuum = romeo[vacuum];
            vacuum = sizing.bind(tango)(vacuum);
            record = vacuum.ThemeLightIcon;
            vacuum = {};
            vacuum = control.bind(tango)(record, vacuum);
            output['icon'] = vacuum;
            vacuum = 44;
            vacuum = romeo[vacuum];
            record = sizing.bind(tango)(vacuum);
            vacuum = record.isThemeLight;
            vacuum = vacuum.bind(record)(context);
            output['value'] = vacuum;
            vacuum = _closure1_slot27;
            output['onValueChange'] = vacuum;
            result = echo.bind(tango)(result, output);
            output = new Array(2);
            output[0] = result;
            result = romeo[foxtrot];
            result = sizing.bind(tango)(result);
            echo = result.TableSwitchRow;
            result = {};
            vacuum = 'Reduced Motion';
            result['label'] = vacuum;
            vacuum = 45;
            vacuum = romeo[vacuum];
            vacuum = sizing.bind(tango)(vacuum);
            record = vacuum.AccessibilityIcon;
            vacuum = {};
            vacuum = control.bind(tango)(record, vacuum);
            result['icon'] = vacuum;
            result['value'] = update;
            update = _closure1_slot28;
            result['onValueChange'] = update;
            result = control.bind(tango)(echo, result);
            output[1] = result;
            verify['children'] = output;
            verify = report.bind(tango)(yankee, verify);
            oscar[2] = verify;
            result = _closure1_slot1;
            verify = romeo[options];
            yankee = result.bind(tango)(verify);
            verify = {};
            output = romeo[offset];
            output = result.bind(tango)(output);
            output = output.spacing;
            output = output.PX_16;
            verify['size'] = output;
            verify = control.bind(tango)(yankee, verify);
            oscar[3] = verify;
            verify = romeo[golf];
            verify = sizing.bind(tango)(verify);
            yankee = verify.TableRowGroup;
            verify = {};
            output = 'Override Client-Side Premium Type';
            verify['title'] = output;
            update = _closure1_slot16;
            echo = update.map;
            output = function(argFoo) {
                entity = argFoo;
                report = entity.label;
                golf = entity.value;
                var _closure3_slot0 = golf;
                tango = _closure1_slot20;
                options = _closure1_slot0;
                verify = _closure1_slot2;
                entity = 40;
                entity = verify[entity];
                zulu = undefined;
                entity = options.bind(zulu)(entity);
                mike = entity.TableSwitchRow;
                entity = {};
                oscar = function(argFoo) { // Original name: onValueChange
                    _fun00011: for(var _fun00012_ip = 0; ; ) switch(_fun00012_ip) {
 0:
                        tango = _closure1_slot0;
                        zulu = _closure1_slot2;
                        entity = 46;
                        zulu = zulu[entity];
                        entity = undefined;
                        report = tango.bind(entity)(zulu);
                        tango = report.updateClientPremiumTypeOverride;
                        zulu = argFoo;
                        if(zulu) { _fun00012_ip = 43; continue _fun00011 }
 37:
                        zulu = _closure1_slot17;
                        _fun00012_ip = 50; continue _fun00011;
 43:
                        zulu = _closure3_slot0;
 50:
                        mike = _closure2_slot2;
                        mike = tango.bind(report)(zulu, mike);
                        return entity;
                    }
                };
                entity['onValueChange'] = oscar;
                entity['label'] = report;
                oscar = 47;
                oscar = verify[oscar];
                oscar = options.bind(zulu)(oscar);
                options = oscar.PencilIcon;
                oscar = {};
                oscar = tango.bind(zulu)(options, oscar);
                entity['icon'] = oscar;
                oscar = _closure2_slot3;
                oscar = golf === oscar;
                entity['value'] = oscar;
                entity = tango.bind(zulu)(mike, entity, report);
                return entity;
            };
            output = echo.bind(update)(output);
            verify['children'] = output;
            verify = control.bind(tango)(yankee, verify);
            oscar[4] = verify;
            verify = romeo[options];
            yankee = result.bind(tango)(verify);
            verify = {};
            output = romeo[offset];
            output = result.bind(tango)(output);
            output = output.spacing;
            output = output.PX_16;
            verify['size'] = output;
            verify = control.bind(tango)(yankee, verify);
            oscar[5] = verify;
            echo = _closure1_slot21;
            verify = romeo[golf];
            verify = sizing.bind(tango)(verify);
            result = verify.TableRowGroup;
            verify = {};
            output = 48;
            yankee = romeo[output];
            yankee = sizing.bind(tango)(yankee);
            vacuum = yankee.intl;
            update = vacuum.string;
            yankee = romeo[output];
            yankee = sizing.bind(tango)(yankee);
            yankee = yankee.t;
            yankee = yankee.Aojq+P;
            yankee = update.bind(vacuum)(yankee);
            verify['title'] = yankee;
            yankee = 49;
            romeo = romeo[yankee];
            romeo = sizing.bind(tango)(romeo);
            update = romeo.TableRow;
            romeo = {};
            sizing = 'Change to en-US';
            vacuum = 'en-US';
            if(!(vacuum === config)) { _fun00008_ip = 1209; continue _fun00007 }
 1203:
            sizing = 'Change to pt-BR';
 1209:
            romeo['label'] = sizing;
            sizing = 'Toggle to a non-english locale for change log testing, etc.';
            romeo['subLabel'] = sizing;
            romeo['onPress'] = kilo;
            vacuum = _closure1_slot20;
            kilo = _closure1_slot0;
            sizing = _closure1_slot2;
            config = 50;
            config = sizing[config];
            config = kilo.bind(tango)(config);
            record = config.LanguageIcon;
            config = {};
            config = vacuum.bind(tango)(record, config);
            romeo['icon'] = config;
            config = 51;
            record = sizing[config];
            record = kilo.bind(tango)(record);
            context = record.TableRowArrow;
            record = {};
            record = vacuum.bind(tango)(context, record);
            romeo['trailing'] = record;
            romeo = control.bind(tango)(update, romeo);
            update = new Array(10);
            update[0] = romeo;
            romeo = sizing[yankee];
            romeo = kilo.bind(tango)(romeo);
            control = romeo.TableRow;
            romeo = {};
            record = sizing[output];
            record = kilo.bind(tango)(record);
            context = record.intl;
            record = context.string;
            output = sizing[output];
            output = kilo.bind(tango)(output);
            output = output.t;
            output = output.yoWDXV;
            output = record.bind(context)(output);
            romeo['label'] = output;
            output = 'Dismiss dev tools after launching.';
            romeo['subLabel'] = output;
            output = _closure1_slot26;
            romeo['onPress'] = output;
            output = 52;
            record = sizing[output];
            record = kilo.bind(tango)(record);
            context = record.WrenchIcon;
            record = {};
            record = vacuum.bind(tango)(context, record);
            romeo['icon'] = record;
            record = sizing[config];
            record = kilo.bind(tango)(record);
            context = record.TableRowArrow;
            record = {};
            record = vacuum.bind(tango)(context, record);
            romeo['trailing'] = record;
            romeo = vacuum.bind(tango)(control, romeo);
            update[1] = romeo;
            romeo = sizing[yankee];
            romeo = kilo.bind(tango)(romeo);
            control = romeo.TableRow;
            romeo = {'label': 'Launch MFA', 'subLabel': 'Dismiss dev tools after launching.'};
            record = _closure1_slot23;
            romeo['onPress'] = record;
            record = 53;
            context = sizing[record];
            context = kilo.bind(tango)(context);
            papa = context.KeyIcon;
            context = {};
            context = vacuum.bind(tango)(papa, context);
            romeo['icon'] = context;
            context = sizing[config];
            context = kilo.bind(tango)(context);
            papa = context.TableRowArrow;
            context = {};
            context = vacuum.bind(tango)(papa, context);
            romeo['trailing'] = context;
            romeo = vacuum.bind(tango)(control, romeo);
            update[2] = romeo;
            romeo = sizing[yankee];
            romeo = kilo.bind(tango)(romeo);
            control = romeo.TableRow;
            romeo = {'label': 'Reset Launch Welcome', 'subLabel': 'Resets launch welcome NUX flag, requires an app restart to take effect.'};
            context = _closure1_slot29;
            romeo['onPress'] = context;
            context = sizing[record];
            context = kilo.bind(tango)(context);
            papa = context.KeyIcon;
            context = {};
            context = vacuum.bind(tango)(papa, context);
            romeo['icon'] = context;
            context = sizing[config];
            context = kilo.bind(tango)(context);
            papa = context.TableRowArrow;
            context = {};
            context = vacuum.bind(tango)(papa, context);
            romeo['trailing'] = context;
            romeo = vacuum.bind(tango)(control, romeo);
            update[3] = romeo;
            romeo = sizing[yankee];
            romeo = kilo.bind(tango)(romeo);
            control = romeo.TableRow;
            romeo = {'label': 'Launch Vibing Wumpus', 'subLabel': 'Vibe with the one and only'};
            context = _closure1_slot24;
            romeo['onPress'] = context;
            context = sizing[record];
            context = kilo.bind(tango)(context);
            papa = context.KeyIcon;
            context = {};
            context = vacuum.bind(tango)(papa, context);
            romeo['icon'] = context;
            context = sizing[config];
            context = kilo.bind(tango)(context);
            papa = context.TableRowArrow;
            context = {};
            context = vacuum.bind(tango)(papa, context);
            romeo['trailing'] = context;
            romeo = vacuum.bind(tango)(control, romeo);
            update[4] = romeo;
            romeo = sizing[yankee];
            romeo = kilo.bind(tango)(romeo);
            control = romeo.TableRow;
            romeo = {};
            context = 'Show age verification test modal';
            romeo['label'] = context;
            context = _closure1_slot25;
            romeo['onPress'] = context;
            context = sizing[record];
            context = kilo.bind(tango)(context);
            papa = context.KeyIcon;
            context = {};
            context = vacuum.bind(tango)(papa, context);
            romeo['icon'] = context;
            context = sizing[config];
            context = kilo.bind(tango)(context);
            papa = context.TableRowArrow;
            context = {};
            context = vacuum.bind(tango)(papa, context);
            romeo['trailing'] = context;
            romeo = vacuum.bind(tango)(control, romeo);
            update[5] = romeo;
            romeo = sizing[yankee];
            romeo = kilo.bind(tango)(romeo);
            control = romeo.TableRow;
            romeo = {};
            context = 'Test captcha';
            romeo['label'] = context;
            context = 54;
            context = sizing[context];
            context = kilo.bind(tango)(context);
            context = context.showCaptchaTestModal;
            romeo['onPress'] = context;
            record = sizing[record];
            record = kilo.bind(tango)(record);
            context = record.KeyIcon;
            record = {};
            record = vacuum.bind(tango)(context, record);
            romeo['icon'] = record;
            config = sizing[config];
            config = kilo.bind(tango)(config);
            record = config.TableRowArrow;
            config = {};
            config = vacuum.bind(tango)(record, config);
            romeo['trailing'] = config;
            romeo = vacuum.bind(tango)(control, romeo);
            update[6] = romeo;
            romeo = sizing[foxtrot];
            romeo = kilo.bind(tango)(romeo);
            control = romeo.TableSwitchRow;
            romeo = {'label': 'Ignored Profile Speedbump Suppression', 'subLabel': 'Suppresses the speedbump for ignored profiles.'};
            config = 55;
            config = sizing[config];
            config = kilo.bind(tango)(config);
            record = config.EyeSlashIcon;
            config = {};
            config = vacuum.bind(tango)(record, config);
            romeo['icon'] = config;
            romeo['value'] = sequence;
            sequence = function() { // Original name: onValueChange
                zulu = _closure1_slot0;
                mike = _closure1_slot2;
                entity = 37;
                mike = mike[entity];
                entity = undefined;
                entity = zulu.bind(entity)(mike);
                zulu = entity.IgnoreProfileSpeedbumpDisabled;
                mike = zulu.updateSetting;
                entity = _closure2_slot7;
                entity = !entity;
                entity = mike.bind(zulu)(entity);
                return entity;
            };
            romeo['onValueChange'] = sequence;
            romeo = vacuum.bind(tango)(control, romeo);
            update[7] = romeo;
            romeo = 56;
            romeo = sizing[romeo];
            kilo = kilo.bind(tango)(romeo);
            romeo = kilo.isAndroid;
            kilo = romeo.bind(kilo)();
            romeo = null;
            if(!kilo) { _fun00008_ip = 2216; continue _fun00007 }
 2103:
            sizing = _closure1_slot20;
            vacuum = _closure1_slot0;
            record = _closure1_slot2;
            foxtrot = record[foxtrot];
            foxtrot = vacuum.bind(tango)(foxtrot);
            kilo = foxtrot.TableSwitchRow;
            foxtrot = {'label': 'Enable Systrace', 'subLabel': 'Toggling requires an app restart to take effect.'};
            control = 57;
            control = record[control];
            control = vacuum.bind(tango)(control);
            vacuum = control.TableRowIcon;
            control = {};
            config = _closure1_slot1;
            sequence = 58;
            sequence = record[sequence];
            sequence = config.bind(tango)(sequence);
            control['source'] = sequence;
            control = sizing.bind(tango)(vacuum, control);
            foxtrot['icon'] = control;
            foxtrot['value'] = source;
            source = function() { // Original name: onValueChange
                zulu = _closure2_slot6;
                entity = _closure2_slot5;
                mike = !entity;
                entity = undefined;
                entity = zulu.bind(entity)(mike);
                return entity;
            };
            foxtrot['onValueChange'] = source;
            romeo = sizing.bind(tango)(kilo, foxtrot);
 2216:
            update[8] = romeo;
            foxtrot = _closure1_slot20;
            sizing = _closure1_slot0;
            kilo = _closure1_slot2;
            romeo = kilo[yankee];
            romeo = sizing.bind(tango)(romeo);
            control = romeo.TableRow;
            source = {'label': 'Show App Rating Modal', 'subLabel': 'Attempts to show the app rating modal -- this may not visually show anything on debug builds or if your device has already been shown the modal recently.'};
            romeo = _closure1_slot1;
            vacuum = 59;
            vacuum = kilo[vacuum];
            vacuum = romeo.bind(tango)(vacuum);
            source['onPress'] = vacuum;
            vacuum = kilo[output];
            vacuum = sizing.bind(tango)(vacuum);
            sequence = vacuum.WrenchIcon;
            vacuum = {};
            vacuum = foxtrot.bind(tango)(sequence, vacuum);
            source['icon'] = vacuum;
            source = foxtrot.bind(tango)(control, source);
            update[9] = source;
            verify['children'] = update;
            verify = echo.bind(tango)(result, verify);
            oscar[6] = verify;
            options = kilo[options];
            verify = romeo.bind(tango)(options);
            options = {};
            offset = kilo[offset];
            offset = romeo.bind(tango)(offset);
            offset = offset.spacing;
            offset = offset.PX_16;
            options['size'] = offset;
            options = foxtrot.bind(tango)(verify, options);
            oscar[7] = options;
            verify = _closure1_slot21;
            golf = kilo[golf];
            golf = sizing.bind(tango)(golf);
            options = golf.TableRowGroup;
            golf = {};
            offset = 'Crash Actions';
            golf['title'] = offset;
            offset = kilo[yankee];
            offset = sizing.bind(tango)(offset);
            romeo = offset.TableRow;
            offset = {};
            result = kilo[output];
            result = sizing.bind(tango)(result);
            echo = result.WrenchIcon;
            result = {};
            result = foxtrot.bind(tango)(echo, result);
            offset['icon'] = result;
            result = 'Force Native Crash';
            offset['label'] = result;
            result = function() { // Original name: onPress
                zulu = _closure1_slot1;
                mike = _closure1_slot2;
                entity = 60;
                mike = mike[entity];
                entity = undefined;
                mike = zulu.bind(entity)(mike);
                entity = mike.crash;
                entity = entity.bind(mike)();
                return entity;
            };
            offset['onPress'] = result;
            romeo = foxtrot.bind(tango)(romeo, offset);
            offset = new Array(3);
            offset[0] = romeo;
            romeo = kilo[yankee];
            romeo = sizing.bind(tango)(romeo);
            result = romeo.TableRow;
            romeo = {};
            echo = kilo[output];
            echo = sizing.bind(tango)(echo);
            update = echo.WrenchIcon;
            echo = {};
            echo = foxtrot.bind(tango)(update, echo);
            romeo['icon'] = echo;
            echo = 'Force JS Crash';
            romeo['label'] = echo;
            echo = function() { // Original name: onPress
                entity = global;
                zulu = entity.Error;
                entity = zulu.prototype;
                mike = Object.create(entity, {constructor: {value: zulu}});
                tango = 'Force JS Crash';
                report = mike;
                entity = new report[zulu](tango, zulu);
                entity = entity instanceof Object ? entity : mike;
                throw entity;
            };
            romeo['onPress'] = echo;
            romeo = foxtrot.bind(tango)(result, romeo);
            offset[1] = romeo;
            yankee = kilo[yankee];
            yankee = sizing.bind(tango)(yankee);
            romeo = yankee.TableRow;
            yankee = {};
            kilo = kilo[output];
            kilo = sizing.bind(tango)(kilo);
            sizing = kilo.WrenchIcon;
            kilo = {};
            kilo = foxtrot.bind(tango)(sizing, kilo);
            yankee['icon'] = kilo;
            kilo = 'Force JS Boundary Crash';
            yankee['label'] = kilo;
            backup = function() { // Original name: onPress
                zulu = _closure2_slot4;
                entity = undefined;
                mike = true;
                mike = zulu.bind(entity)(mike);
                return entity;
            };
            yankee['onPress'] = backup;
            yankee = foxtrot.bind(tango)(romeo, yankee);
            offset[2] = yankee;
            golf['children'] = offset;
            golf = verify.bind(tango)(options, golf);
            oscar[8] = golf;
            mike['children'] = oscar;
            mike = report.bind(tango)(zulu, mike);
            return mike;
 2662:
            zulu = _closure1_slot0;
            report = _closure1_slot2;
            mike = 38;
            mike = report[mike];
            mike = zulu.bind(tango)(mike);
            zulu = mike.default;
            mike = _closure1_slot20;
            entity = {};
            entity = mike.bind(tango)(zulu, entity);
            return entity;
        }
    };
    zulu['default'] = mike;
    return entity;
})();