// app/modules/devtools/native/components/screens/DevToolsQuickActionsScreen.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    report = argBar;
    yankee = argBaz;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    var _closure1_slot1 = yankee;
    var _closure1_slot2 = oscard;
    entity = function() { // Original name: handleNewUserOnboarding
        report = _closure1_slot0;
        oscard = _closure1_slot2;
        entity = 19;
        zuuluu = oscard[entity];
        entity = undefined;
        golfie = report.bind(entity)(zuuluu);
        tangon = golfie.setNewUser;
        zuuluu = _closure1_slot15;
        zuuluu = zuuluu.ORGANIC_REGISTERED;
        zuuluu = tangon.bind(golfie)(zuuluu);
        zuuluu = _closure1_slot1;
        michal = 20;
        michal = oscard[michal];
        tangon = zuuluu.bind(entity)(michal);
        zuuluu = tangon.wait;
        michal = 21;
        michal = oscard[michal];
        michal = report.bind(entity)(michal);
        michal = michal.startOnboarding;
        michal = zuuluu.bind(tangon)(michal);
        return entity;
    };
    var _closure1_slot26 = entity;
    entity = function(argFoo) { // Original name: handleThemeChange
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            tangon = _closure1_slot1;
            zuuluu = _closure1_slot2;
            entity = 22;
            zuuluu = zuuluu[entity];
            entity = undefined;
            tangon = tangon.bind(entity)(zuuluu);
            zuuluu = tangon.updateTheme;
            report = _closure1_slot14;
            michal = argFoo;
            if(michal) { _fun00002_ip = 49; continue _fun00001 }
 41:
            michal = report.DARK;
            _fun00002_ip = 55; continue _fun00001;
 49:
            michal = report.LIGHT;
 55:
            michal = zuuluu.bind(tangon)(michal);
            return entity;
        }
    };
    var _closure1_slot27 = entity;
    entity = function(argFoo) { // Original name: handleReducedMotionChange
        _fun00003: for(var _fun00004_ip = 0; ; ) switch(_fun00004_ip) {
 0:
            zuuluu = _closure1_slot0;
            michal = _closure1_slot2;
            entity = 23;
            michal = michal[entity];
            entity = undefined;
            tangon = zuuluu.bind(entity)(michal);
            zuuluu = tangon.setPrefersReducedMotion;
            michal = 'no-preference';
            report = argFoo;
            if(!report) { _fun00004_ip = 47; continue _fun00003 }
 43:
            michal = 'reduce';
 47:
            michal = zuuluu.bind(tangon)(michal);
            return entity;
        }
    };
    var _closure1_slot28 = entity;
    entity = function() { // Original name: handleLaunchWelcomeReset
        report = _closure1_slot0;
        oscard = _closure1_slot2;
        entity = 24;
        michal = oscard[entity];
        entity = undefined;
        golfie = report.bind(entity)(michal);
        tangon = golfie.removeDismissedContent;
        michal = 25;
        zuuluu = oscard[michal];
        zuuluu = report.bind(entity)(zuuluu);
        zuuluu = zuuluu.DismissibleContent;
        zuuluu = zuuluu.SEEN_LAUNCH_WELCOME;
        zuuluu = tangon.bind(golfie)(zuuluu);
        zuuluu = 26;
        zuuluu = oscard[zuuluu];
        tangon = report.bind(entity)(zuuluu);
        zuuluu = tangon.UNSAFE_markDismissibleContentAsDismissed;
        michal = oscard[michal];
        michal = report.bind(entity)(michal);
        michal = michal.DismissibleContent;
        michal = michal.SEEN_OLD_DESIGN;
        michal = zuuluu.bind(tangon)(michal);
        return entity;
    };
    var _closure1_slot29 = entity;
    entity = global;
    option = entity.Object;
    golfie = option.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(option)(zuuluu, entity, tangon);
    entity = 0;
    tangon = oscard[entity];
    entity = undefined;
    tangon = yankee.bind(entity)(tangon);
    var _closure1_slot3 = tangon;
    tangon = 1;
    tangon = oscard[tangon];
    tangon = yankee.bind(entity)(tangon);
    var _closure1_slot4 = tangon;
    tangon = 2;
    golfie = oscard[tangon];
    tangon = argCor;
    tangon = tangon.bind(entity)(golfie);
    var _closure1_slot5 = tangon;
    tangon = 3;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.ScrollView;
    var _closure1_slot6 = tangon;
    tangon = 4;
    tangon = oscard[tangon];
    tangon = yankee.bind(entity)(tangon);
    var _closure1_slot7 = tangon;
    tangon = 5;
    tangon = oscard[tangon];
    tangon = yankee.bind(entity)(tangon);
    var _closure1_slot8 = tangon;
    tangon = 6;
    tangon = oscard[tangon];
    tangon = yankee.bind(entity)(tangon);
    var _closure1_slot9 = tangon;
    tangon = 7;
    tangon = oscard[tangon];
    tangon = yankee.bind(entity)(tangon);
    var _closure1_slot10 = tangon;
    tangon = 8;
    tangon = oscard[tangon];
    tangon = yankee.bind(entity)(tangon);
    var _closure1_slot11 = tangon;
    tangon = 9;
    tangon = oscard[tangon];
    tangon = yankee.bind(entity)(tangon);
    var _closure1_slot12 = tangon;
    tangon = 10;
    tangon = oscard[tangon];
    tangon = yankee.bind(entity)(tangon);
    var _closure1_slot13 = tangon;
    tangon = 11;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.ThemeTypes;
    var _closure1_slot14 = tangon;
    tangon = 12;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.NewUserTypes;
    var _closure1_slot15 = tangon;
    tangon = 13;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    golfie = tangon.PREMIUM_TYPE_OVERRIDE_OPTIONS;
    var _closure1_slot16 = golfie;
    tangon = tangon.UNSELECTED_PREMIUM_TYPE_OVERRIDE;
    var _closure1_slot17 = tangon;
    tangon = 14;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.VIBING_WUMPUS_MODAL_KEY;
    var _closure1_slot18 = tangon;
    tangon = 15;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.SystemThemeState;
    var _closure1_slot19 = tangon;
    tangon = 16;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    golfie = tangon.jsx;
    var _closure1_slot20 = golfie;
    tangon = tangon.jsxs;
    var _closure1_slot21 = tangon;
    tangon = 17;
    tangon = oscard[tangon];
    option = report.bind(entity)(tangon);
    golfie = option.createStyles;
    tangon = {};
    verify = {};
    offset = 18;
    romeon = oscard[offset];
    romeon = yankee.bind(entity)(romeon);
    romeon = romeon.colors;
    romeon = romeon.BACKGROUND_PRIMARY;
    verify['backgroundColor'] = romeon;
    tangon['container'] = verify;
    verify = {};
    offset = oscard[offset];
    offset = yankee.bind(entity)(offset);
    offset = offset.spacing;
    offset = offset.PX_16;
    verify['padding'] = offset;
    tangon['content'] = verify;
    tangon = golfie.bind(option)(tangon);
    var _closure1_slot22 = tangon;
    tangon = function() { // Original name: launchMFA
        report = _closure1_slot1;
        michal = _closure1_slot2;
        entity = 27;
        tangon = michal[entity];
        entity = undefined;
        report = report.bind(entity)(tangon);
        tangon = report.pop;
        tangon = tangon.bind(report)();
        tangon = _closure1_slot0;
        zuuluu = 29;
        zuuluu = michal[zuuluu];
        tangon = tangon.bind(entity)(zuuluu);
        zuuluu = 28;
        zuuluu = michal[zuuluu];
        michal = michal.paths;
        tangon = tangon.bind(entity)(zuuluu, michal);
        zuuluu = tangon.then;
        michal = function(argFoo) {
            entity = argFoo;
            report = entity.openMFAModal;
            tangon = {};
            entity = 'ticket';
            tangon['ticket'] = entity;
            entity = new Array(5);
            zuuluu = {'type': 'webauthn', 'challenge': '{}'};
            entity[0] = zuuluu;
            zuuluu = {'type': 'totp', 'backup_codes_allowed': true};
            entity[1] = zuuluu;
            zuuluu = {};
            oscard = 'backup';
            zuuluu['type'] = oscard;
            entity[2] = zuuluu;
            zuuluu = {};
            oscard = 'sms';
            zuuluu['type'] = oscard;
            entity[3] = zuuluu;
            zuuluu = {};
            oscard = 'password';
            zuuluu['type'] = oscard;
            entity[4] = zuuluu;
            tangon['methods'] = entity;
            entity = undefined;
            zuuluu = function() {
                entity = undefined;
                return entity;
            };
            michal = function() {
                entity = undefined;
                return entity;
            };
            michal = report.bind(entity)(tangon, zuuluu, michal);
            return entity;
        };
        michal = zuuluu.bind(tangon)(michal);
        return entity;
    };
    var _closure1_slot23 = tangon;
    tangon = function() { // Original name: showVibingWumpus
        report = _closure1_slot1;
        zuuluu = _closure1_slot2;
        entity = 27;
        tangon = zuuluu[entity];
        entity = undefined;
        oscard = report.bind(entity)(tangon);
        report = oscard.pushLazy;
        golfie = _closure1_slot0;
        tangon = 29;
        tangon = zuuluu[tangon];
        golfie = golfie.bind(entity)(tangon);
        tangon = 30;
        tangon = zuuluu[tangon];
        zuuluu = zuuluu.paths;
        tangon = golfie.bind(entity)(tangon, zuuluu);
        zuuluu = {};
        golfie = function() { // Original name: onClose
            entity = undefined;
            return entity;
        };
        zuuluu['onClose'] = golfie;
        michal = _closure1_slot18;
        michal = report.bind(oscard)(tangon, zuuluu, michal);
        return entity;
    };
    var _closure1_slot24 = tangon;
    tangon = function() {
        tangon = _closure1_slot4;
        zuuluu = undefined;
        michal = function* () {
            entity = function* () { // Original name: ?anon_0_
                _fun00005: for(var _fun00006_ip = 0; ; ) switch(_fun00006_ip) {
 0:
                    StartGenerator();
                    ResumeGenerator(result_out_reg=0, return_bool_out_reg=1);
                    if(michal) { _fun00006_ip = 175; continue _fun00005 }
 10: // try_start_0
                    tangon = _closure1_slot0;
                    report = _closure1_slot2;
                    michal = 31;
                    michal = report[michal];
                    report = undefined;
                    tangon = tangon.bind(report)(michal);
                    michal = tangon.testAgeVerification;
                    michal = michal.bind(tangon)();
                    SaveGenerator(address=49);
 47:
                    return michal;
 49:
                    ResumeGenerator(result_out_reg=1, return_bool_out_reg=3);
                    if(tangon) { _fun00006_ip = 115; continue _fun00005 }
 55:
                    tangon = _closure1_slot1;
                    oscard = _closure1_slot2;
                    zuuluu = 33;
                    zuuluu = oscard[zuuluu];
                    report = tangon.bind(report)(zuuluu);
                    tangon = report.showAgeVerification;
                    zuuluu = {};
                    oscard = michal.verification_webview_url;
                    zuuluu['webviewUrl'] = oscard;
                    oscard = function() { // Original name: onComplete
                        zuuluu = _closure1_slot1;
                        michal = _closure1_slot2;
                        entity = 32;
                        michal = michal[entity];
                        entity = undefined;
                        tangon = zuuluu.bind(entity)(michal);
                        zuuluu = tangon.open;
                        michal = {'content': '[On Complete] Successfully age verified', 'key': 'age-verification-test-success'};
                        michal = zuuluu.bind(tangon)(michal);
                        return entity;
                    };
                    zuuluu['onComplete'] = oscard;
                    zuuluu = tangon.bind(report)(zuuluu);
 113: // try_end0
                    _fun00006_ip = 170; continue _fun00005;
 115:
                    return michal;
 118: // catch_target0
                    CatchBlockStart(arg_register=1);
                    tangon = _closure1_slot1;
                    zuuluu = _closure1_slot2;
                    michal = 32;
                    zuuluu = zuuluu[michal];
                    michal = undefined;
                    tangon = tangon.bind(michal)(zuuluu);
                    zuuluu = tangon.open;
                    michal = {'content': 'Failed to show age verification test modal', 'key': 'age-verification-test-failure'};
                    michal = zuuluu.bind(tangon)(michal);
 170:
                    michal = undefined;
                    return michal;
 175:
                    return entity;
                }
            };
            return entity;
        };
        michal = tangon.bind(zuuluu)(michal);
        var _closure2_slot0 = michal;
        entity = function() {
            entity = undefined;
            tangon = _closure2_slot0;
            zuuluu = tangon.apply;
            entity = arguments;
            michal = entity;
            entity = this;
            entity = zuuluu.bind(tangon)(entity, michal);
            return entity;
        };
        return entity;
    };
    tangon = tangon.bind(entity)();
    var _closure1_slot25 = tangon;
    tangon = 63;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/devtools/native/components/screens/DevToolsQuickActionsScreen.tsx';
    tangon = report.bind(oscard)(tangon);
    michal = function() { // Original name: DevToolsQuickActionsScreen
        _fun00007: for(var _fun00008_ip = 0; ; ) switch(_fun00008_ip) {
 0:
            michal = _closure1_slot22;
            tangon = undefined;
            verify = michal.bind(tangon)();
            zuuluu = _closure1_slot1;
            oscard = _closure1_slot2;
            michal = 34;
            michal = oscard[michal];
            michal = zuuluu.bind(tangon)(michal);
            option = michal.bind(tangon)();
            report = _closure1_slot0;
            zuuluu = 35;
            michal = oscard[zuuluu];
            yankee = report.bind(tangon)(michal);
            offset = yankee.useStateFromStoresObject;
            michal = _closure1_slot10;
            golfie = new Array(4);
            golfie[0] = michal;
            michal = _closure1_slot9;
            golfie[1] = michal;
            michal = _closure1_slot11;
            golfie[2] = michal;
            michal = _closure1_slot13;
            golfie[3] = michal;
            michal = function() {
                entity = {};
                zuuluu = _closure1_slot10;
                zuuluu = zuuluu.theme;
                entity['theme'] = zuuluu;
                zuuluu = _closure1_slot11;
                tangon = zuuluu.useSystemTheme;
                zuuluu = _closure1_slot19;
                zuuluu = zuuluu.ON;
                zuuluu = tangon === zuuluu;
                entity['usingSystemTheme'] = zuuluu;
                zuuluu = _closure1_slot9;
                zuuluu = zuuluu.locale;
                entity['locale'] = zuuluu;
                michal = _closure1_slot13;
                michal = michal.showDevWidget;
                entity['showDevWidget'] = michal;
                return entity;
            };
            michal = offset.bind(yankee)(golfie, michal);
            cntext = michal.theme;
            romeon = michal.usingSystemTheme;
            config = michal.locale;
            var _closure2_slot0 = config;
            yankee = michal.showDevWidget;
            var _closure2_slot1 = yankee;
            michal = oscard[zuuluu];
            foxtra = report.bind(tangon)(michal);
            offset = foxtra.useStateFromStores;
            michal = _closure1_slot12;
            golfie = new Array(1);
            golfie[0] = michal;
            michal = function() {
                michal = _closure1_slot12;
                entity = michal.getCurrentUser;
                entity = entity.bind(michal)();
                return entity;
            };
            michal = offset.bind(foxtra)(golfie, michal);
            var _closure2_slot2 = michal;
            michal = oscard[zuuluu];
            foxtra = report.bind(tangon)(michal);
            offset = foxtra.useStateFromStores;
            michal = _closure1_slot8;
            golfie = new Array(1);
            golfie[0] = michal;
            michal = function() {
                michal = _closure1_slot8;
                entity = michal.getPremiumTypeOverride;
                entity = entity.bind(michal)();
                return entity;
            };
            michal = offset.bind(foxtra)(golfie, michal);
            var _closure2_slot3 = michal;
            golfie = _closure1_slot5;
            offset = golfie.useState;
            michal = false;
            michal = offset.bind(golfie)(michal);
            output = _closure1_slot3;
            sizing = 2;
            offset = output.bind(tangon)(michal, sizing);
            kiloes = 0;
            michal = offset[kiloes];
            foxtra = 1;
            offset = offset[foxtra];
            var _closure2_slot4 = offset;
            result = golfie.useState;
            offset = 36;
            offset = oscard[offset];
            echoed = report.bind(tangon)(offset);
            offset = echoed.isJSITraceEnabled;
            offset = offset.bind(echoed)();
            offset = result.bind(golfie)(offset);
            offset = output.bind(tangon)(offset, sizing);
            source = offset[kiloes];
            var _closure2_slot5 = source;
            offset = offset[foxtra];
            var _closure2_slot6 = offset;
            offset = 37;
            offset = oscard[offset];
            offset = report.bind(tangon)(offset);
            foxtra = offset.IgnoreProfileSpeedbumpDisabled;
            offset = foxtra.useSetting;
            sequen = offset.bind(foxtra)();
            var _closure2_slot7 = sequen;
            kiloes = golfie.useEffect;
            foxtra = new Array(1);
            foxtra[0] = source;
            offset = function() {
                zuuluu = _closure1_slot0;
                michal = _closure1_slot2;
                entity = 36;
                michal = michal[entity];
                entity = undefined;
                tangon = zuuluu.bind(entity)(michal);
                zuuluu = tangon.setJSITraceEnabled;
                michal = _closure2_slot5;
                michal = zuuluu.bind(tangon)(michal);
                return entity;
            };
            offset = kiloes.bind(golfie)(offset, foxtra);
            zuuluu = oscard[zuuluu];
            offset = report.bind(tangon)(zuuluu);
            oscard = offset.useStateFromStores;
            zuuluu = _closure1_slot7;
            report = new Array(1);
            report[0] = zuuluu;
            zuuluu = function() {
                entity = _closure1_slot7;
                entity = entity.useReducedMotion;
                return entity;
            };
            update = oscard.bind(offset)(report, zuuluu);
            oscard = golfie.useCallback;
            report = new Array(1);
            report[0] = config;
            zuuluu = function() {
                _fun00009: for(var _fun00010_ip = 0; ; ) switch(_fun00010_ip) {
 0:
                    entity = _closure2_slot0;
                    zuuluu = 'en-US';
                    if(!(zuuluu === entity)) { _fun00010_ip = 57; continue _fun00009 }
 15:
                    tangon = _closure1_slot1;
                    michal = _closure1_slot2;
                    entity = 22;
                    michal = michal[entity];
                    entity = undefined;
                    tangon = tangon.bind(entity)(michal);
                    michal = tangon.updateLocale;
                    entity = 'pt-BR';
                    entity = michal.bind(tangon)(entity);
                    _fun00010_ip = 93; continue _fun00009;
 57:
                    tangon = _closure1_slot1;
                    michal = _closure1_slot2;
                    entity = 22;
                    michal = michal[entity];
                    entity = undefined;
                    michal = tangon.bind(entity)(michal);
                    entity = michal.updateLocale;
                    entity = entity.bind(michal)(zuuluu);
 93:
                    entity = undefined;
                    return entity;
                }
            };
            kiloes = oscard.bind(golfie)(zuuluu, report);
            if(michal) { _fun00008_ip = 2839; continue _fun00007 }
 456:
            report = _closure1_slot21;
            zuuluu = _closure1_slot6;
            michal = {};
            oscard = verify.container;
            michal['style'] = oscard;
            golfie = verify.content;
            oscard = new Array(2);
            oscard[0] = golfie;
            golfie = {};
            verify = verify.content;
            verify = verify.padding;
            option = option.bottom;
            option = verify + option;
            golfie['paddingBottom'] = option;
            oscard[1] = golfie;
            michal['contentContainerStyle'] = oscard;
            echoed = _closure1_slot20;
            output = _closure1_slot0;
            sizing = _closure1_slot2;
            golfie = 39;
            oscard = sizing[golfie];
            oscard = output.bind(tangon)(oscard);
            option = oscard.TableRowGroup;
            oscard = {};
            verify = 'General';
            oscard['title'] = verify;
            foxtra = 40;
            verify = sizing[foxtra];
            verify = output.bind(tangon)(verify);
            offset = verify.TableSwitchRow;
            verify = {};
            result = 'Show Dev Widget';
            verify['label'] = result;
            verify['value'] = yankee;
            yankee = function() { // Original name: onValueChange
                zuuluu = _closure1_slot0;
                michal = _closure1_slot2;
                entity = 41;
                michal = michal[entity];
                entity = undefined;
                zuuluu = zuuluu.bind(entity)(michal);
                michal = zuuluu.updateDevToolsSettings;
                entity = {};
                tangon = _closure2_slot1;
                tangon = !tangon;
                entity['showDevWidget'] = tangon;
                entity = michal.bind(zuuluu)(entity);
                return entity;
            };
            verify['onValueChange'] = yankee;
            verify = echoed.bind(tangon)(offset, verify);
            oscard['children'] = verify;
            option = echoed.bind(tangon)(option, oscard);
            oscard = new Array(9);
            oscard[0] = option;
            ctrled = _closure1_slot1;
            option = 42;
            verify = sizing[option];
            yankee = ctrled.bind(tangon)(verify);
            verify = {};
            offset = 18;
            result = sizing[offset];
            result = ctrled.bind(tangon)(result);
            result = result.spacing;
            result = result.PX_16;
            verify['size'] = result;
            verify = echoed.bind(tangon)(yankee, verify);
            oscard[1] = verify;
            verify = sizing[golfie];
            verify = output.bind(tangon)(verify);
            yankee = verify.TableRowGroup;
            verify = {};
            result = 'Appearance';
            verify['title'] = result;
            sizing = sizing[foxtra];
            sizing = output.bind(tangon)(sizing);
            result = sizing.TableSwitchRow;
            output = {};
            sizing = 'Light Theme';
            if(!romeon) { _fun00008_ip = 746; continue _fun00007 }
 740:
            sizing = '(using system theme)';
 746:
            output['label'] = sizing;
            output['disabled'] = romeon;
            ctrled = _closure1_slot20;
            sizing = _closure1_slot0;
            romeon = _closure1_slot2;
            vacuum = 43;
            vacuum = romeon[vacuum];
            vacuum = sizing.bind(tangon)(vacuum);
            record = vacuum.ThemeLightIcon;
            vacuum = {};
            vacuum = ctrled.bind(tangon)(record, vacuum);
            output['icon'] = vacuum;
            vacuum = 44;
            vacuum = romeon[vacuum];
            record = sizing.bind(tangon)(vacuum);
            vacuum = record.isThemeLight;
            vacuum = vacuum.bind(record)(cntext);
            output['value'] = vacuum;
            vacuum = _closure1_slot27;
            output['onValueChange'] = vacuum;
            result = echoed.bind(tangon)(result, output);
            output = new Array(2);
            output[0] = result;
            result = romeon[foxtra];
            result = sizing.bind(tangon)(result);
            echoed = result.TableSwitchRow;
            result = {};
            vacuum = 'Reduced Motion';
            result['label'] = vacuum;
            vacuum = 45;
            vacuum = romeon[vacuum];
            vacuum = sizing.bind(tangon)(vacuum);
            record = vacuum.AccessibilityIcon;
            vacuum = {};
            vacuum = ctrled.bind(tangon)(record, vacuum);
            result['icon'] = vacuum;
            result['value'] = update;
            update = _closure1_slot28;
            result['onValueChange'] = update;
            result = ctrled.bind(tangon)(echoed, result);
            output[1] = result;
            verify['children'] = output;
            verify = report.bind(tangon)(yankee, verify);
            oscard[2] = verify;
            result = _closure1_slot1;
            verify = romeon[option];
            yankee = result.bind(tangon)(verify);
            verify = {};
            output = romeon[offset];
            output = result.bind(tangon)(output);
            output = output.spacing;
            output = output.PX_16;
            verify['size'] = output;
            verify = ctrled.bind(tangon)(yankee, verify);
            oscard[3] = verify;
            verify = romeon[golfie];
            verify = sizing.bind(tangon)(verify);
            yankee = verify.TableRowGroup;
            verify = {};
            output = 'Override Client-Side Premium Type';
            verify['title'] = output;
            update = _closure1_slot16;
            echoed = update.map;
            output = function(argFoo) {
                entity = argFoo;
                report = entity.label;
                golfie = entity.value;
                var _closure3_slot0 = golfie;
                tangon = _closure1_slot20;
                option = _closure1_slot0;
                verify = _closure1_slot2;
                entity = 40;
                entity = verify[entity];
                zuuluu = undefined;
                entity = option.bind(zuuluu)(entity);
                michal = entity.TableSwitchRow;
                entity = {};
                oscard = function(argFoo) { // Original name: onValueChange
                    _fun00011: for(var _fun00012_ip = 0; ; ) switch(_fun00012_ip) {
 0:
                        tangon = _closure1_slot0;
                        zuuluu = _closure1_slot2;
                        entity = 46;
                        zuuluu = zuuluu[entity];
                        entity = undefined;
                        report = tangon.bind(entity)(zuuluu);
                        tangon = report.updateClientPremiumTypeOverride;
                        zuuluu = argFoo;
                        if(zuuluu) { _fun00012_ip = 43; continue _fun00011 }
 37:
                        zuuluu = _closure1_slot17;
                        _fun00012_ip = 50; continue _fun00011;
 43:
                        zuuluu = _closure3_slot0;
 50:
                        michal = _closure2_slot2;
                        michal = tangon.bind(report)(zuuluu, michal);
                        return entity;
                    }
                };
                entity['onValueChange'] = oscard;
                entity['label'] = report;
                oscard = 47;
                oscard = verify[oscard];
                oscard = option.bind(zuuluu)(oscard);
                option = oscard.PencilIcon;
                oscard = {};
                oscard = tangon.bind(zuuluu)(option, oscard);
                entity['icon'] = oscard;
                oscard = _closure2_slot3;
                oscard = golfie === oscard;
                entity['value'] = oscard;
                entity = tangon.bind(zuuluu)(michal, entity, report);
                return entity;
            };
            output = echoed.bind(update)(output);
            verify['children'] = output;
            verify = ctrled.bind(tangon)(yankee, verify);
            oscard[4] = verify;
            verify = romeon[option];
            yankee = result.bind(tangon)(verify);
            verify = {};
            output = romeon[offset];
            output = result.bind(tangon)(output);
            output = output.spacing;
            output = output.PX_16;
            verify['size'] = output;
            verify = ctrled.bind(tangon)(yankee, verify);
            oscard[5] = verify;
            echoed = _closure1_slot21;
            verify = romeon[golfie];
            verify = sizing.bind(tangon)(verify);
            result = verify.TableRowGroup;
            verify = {};
            output = 48;
            yankee = romeon[output];
            yankee = sizing.bind(tangon)(yankee);
            vacuum = yankee.intl;
            update = vacuum.string;
            yankee = romeon[output];
            yankee = sizing.bind(tangon)(yankee);
            yankee = yankee.t;
            yankee = yankee.Aojq+P;
            yankee = update.bind(vacuum)(yankee);
            verify['title'] = yankee;
            yankee = 49;
            romeon = romeon[yankee];
            romeon = sizing.bind(tangon)(romeon);
            update = romeon.TableRow;
            romeon = {};
            sizing = 'Change to en-US';
            vacuum = 'en-US';
            if(!(vacuum === config)) { _fun00008_ip = 1208; continue _fun00007 }
 1202:
            sizing = 'Change to pt-BR';
 1208:
            romeon['label'] = sizing;
            sizing = 'Toggle to a non-english locale for change log testing, etc.';
            romeon['subLabel'] = sizing;
            romeon['onPress'] = kiloes;
            vacuum = _closure1_slot20;
            kiloes = _closure1_slot0;
            sizing = _closure1_slot2;
            config = 50;
            config = sizing[config];
            config = kiloes.bind(tangon)(config);
            record = config.LanguageIcon;
            config = {};
            config = vacuum.bind(tangon)(record, config);
            romeon['icon'] = config;
            config = 51;
            record = sizing[config];
            record = kiloes.bind(tangon)(record);
            cntext = record.TableRowArrow;
            record = {};
            record = vacuum.bind(tangon)(cntext, record);
            romeon['trailing'] = record;
            romeon = ctrled.bind(tangon)(update, romeon);
            update = new Array(11);
            update[0] = romeon;
            romeon = sizing[yankee];
            romeon = kiloes.bind(tangon)(romeon);
            ctrled = romeon.TableRow;
            romeon = {};
            record = sizing[output];
            record = kiloes.bind(tangon)(record);
            cntext = record.intl;
            record = cntext.string;
            output = sizing[output];
            output = kiloes.bind(tangon)(output);
            output = output.t;
            output = output.yoWDXV;
            output = record.bind(cntext)(output);
            romeon['label'] = output;
            output = 'Dismiss dev tools after launching.';
            romeon['subLabel'] = output;
            output = _closure1_slot26;
            romeon['onPress'] = output;
            output = 52;
            record = sizing[output];
            record = kiloes.bind(tangon)(record);
            cntext = record.WrenchIcon;
            record = {};
            record = vacuum.bind(tangon)(cntext, record);
            romeon['icon'] = record;
            record = sizing[config];
            record = kiloes.bind(tangon)(record);
            cntext = record.TableRowArrow;
            record = {};
            record = vacuum.bind(tangon)(cntext, record);
            romeon['trailing'] = record;
            romeon = vacuum.bind(tangon)(ctrled, romeon);
            update[1] = romeon;
            romeon = sizing[yankee];
            romeon = kiloes.bind(tangon)(romeon);
            ctrled = romeon.TableRow;
            romeon = {'label': 'Launch MFA', 'subLabel': 'Dismiss dev tools after launching.'};
            record = _closure1_slot23;
            romeon['onPress'] = record;
            record = 53;
            cntext = sizing[record];
            cntext = kiloes.bind(tangon)(cntext);
            papara = cntext.KeyIcon;
            cntext = {};
            cntext = vacuum.bind(tangon)(papara, cntext);
            romeon['icon'] = cntext;
            cntext = sizing[config];
            cntext = kiloes.bind(tangon)(cntext);
            papara = cntext.TableRowArrow;
            cntext = {};
            cntext = vacuum.bind(tangon)(papara, cntext);
            romeon['trailing'] = cntext;
            romeon = vacuum.bind(tangon)(ctrled, romeon);
            update[2] = romeon;
            romeon = sizing[yankee];
            romeon = kiloes.bind(tangon)(romeon);
            ctrled = romeon.TableRow;
            romeon = {'label': 'Reset Launch Welcome', 'subLabel': 'Resets launch welcome NUX flag, requires an app restart to take effect.'};
            cntext = _closure1_slot29;
            romeon['onPress'] = cntext;
            cntext = sizing[record];
            cntext = kiloes.bind(tangon)(cntext);
            papara = cntext.KeyIcon;
            cntext = {};
            cntext = vacuum.bind(tangon)(papara, cntext);
            romeon['icon'] = cntext;
            cntext = sizing[config];
            cntext = kiloes.bind(tangon)(cntext);
            papara = cntext.TableRowArrow;
            cntext = {};
            cntext = vacuum.bind(tangon)(papara, cntext);
            romeon['trailing'] = cntext;
            romeon = vacuum.bind(tangon)(ctrled, romeon);
            update[3] = romeon;
            romeon = sizing[yankee];
            romeon = kiloes.bind(tangon)(romeon);
            ctrled = romeon.TableRow;
            romeon = {'label': 'Launch Vibing Wumpus', 'subLabel': 'Vibe with the one and only'};
            cntext = _closure1_slot24;
            romeon['onPress'] = cntext;
            cntext = sizing[record];
            cntext = kiloes.bind(tangon)(cntext);
            papara = cntext.KeyIcon;
            cntext = {};
            cntext = vacuum.bind(tangon)(papara, cntext);
            romeon['icon'] = cntext;
            cntext = sizing[config];
            cntext = kiloes.bind(tangon)(cntext);
            papara = cntext.TableRowArrow;
            cntext = {};
            cntext = vacuum.bind(tangon)(papara, cntext);
            romeon['trailing'] = cntext;
            romeon = vacuum.bind(tangon)(ctrled, romeon);
            update[4] = romeon;
            romeon = sizing[yankee];
            romeon = kiloes.bind(tangon)(romeon);
            ctrled = romeon.TableRow;
            romeon = {};
            cntext = 'Show age verification scan test modal';
            romeon['label'] = cntext;
            cntext = _closure1_slot25;
            romeon['onPress'] = cntext;
            cntext = sizing[record];
            cntext = kiloes.bind(tangon)(cntext);
            papara = cntext.KeyIcon;
            cntext = {};
            cntext = vacuum.bind(tangon)(papara, cntext);
            romeon['icon'] = cntext;
            cntext = sizing[config];
            cntext = kiloes.bind(tangon)(cntext);
            papara = cntext.TableRowArrow;
            cntext = {};
            cntext = vacuum.bind(tangon)(papara, cntext);
            romeon['trailing'] = cntext;
            romeon = vacuum.bind(tangon)(ctrled, romeon);
            update[5] = romeon;
            romeon = sizing[yankee];
            romeon = kiloes.bind(tangon)(romeon);
            ctrled = romeon.TableRow;
            romeon = {};
            cntext = 'Show age verification get started modal';
            romeon['label'] = cntext;
            cntext = function() { // Original name: onPress
                zuuluu = _closure1_slot1;
                oscard = _closure1_slot2;
                michal = 33;
                michal = oscard[michal];
                report = undefined;
                zuuluu = zuuluu.bind(report)(michal);
                michal = zuuluu.showAgeVerificationGetStartedModal;
                tangon = _closure1_slot0;
                entity = 54;
                entity = oscard[entity];
                entity = tangon.bind(report)(entity);
                entity = entity.AgeVerificationModalEntryPoint;
                entity = entity.DEV_TOOLS_QUICK_ACTIONS;
                entity = michal.bind(zuuluu)(entity);
                return entity;
            };
            romeon['onPress'] = cntext;
            cntext = sizing[record];
            cntext = kiloes.bind(tangon)(cntext);
            papara = cntext.KeyIcon;
            cntext = {};
            cntext = vacuum.bind(tangon)(papara, cntext);
            romeon['icon'] = cntext;
            cntext = sizing[config];
            cntext = kiloes.bind(tangon)(cntext);
            papara = cntext.TableRowArrow;
            cntext = {};
            cntext = vacuum.bind(tangon)(papara, cntext);
            romeon['trailing'] = cntext;
            romeon = vacuum.bind(tangon)(ctrled, romeon);
            update[6] = romeon;
            romeon = sizing[yankee];
            romeon = kiloes.bind(tangon)(romeon);
            ctrled = romeon.TableRow;
            romeon = {};
            cntext = 'Test captcha';
            romeon['label'] = cntext;
            cntext = 55;
            cntext = sizing[cntext];
            cntext = kiloes.bind(tangon)(cntext);
            cntext = cntext.showCaptchaTestModal;
            romeon['onPress'] = cntext;
            record = sizing[record];
            record = kiloes.bind(tangon)(record);
            cntext = record.KeyIcon;
            record = {};
            record = vacuum.bind(tangon)(cntext, record);
            romeon['icon'] = record;
            config = sizing[config];
            config = kiloes.bind(tangon)(config);
            record = config.TableRowArrow;
            config = {};
            config = vacuum.bind(tangon)(record, config);
            romeon['trailing'] = config;
            romeon = vacuum.bind(tangon)(ctrled, romeon);
            update[7] = romeon;
            romeon = sizing[foxtra];
            romeon = kiloes.bind(tangon)(romeon);
            ctrled = romeon.TableSwitchRow;
            romeon = {'label': 'Ignored Profile Speedbump Suppression', 'subLabel': 'Suppresses the speedbump for ignored profiles.'};
            config = 56;
            config = sizing[config];
            config = kiloes.bind(tangon)(config);
            record = config.EyeSlashIcon;
            config = {};
            config = vacuum.bind(tangon)(record, config);
            romeon['icon'] = config;
            romeon['value'] = sequen;
            sequen = function() { // Original name: onValueChange
                zuuluu = _closure1_slot0;
                michal = _closure1_slot2;
                entity = 37;
                michal = michal[entity];
                entity = undefined;
                entity = zuuluu.bind(entity)(michal);
                zuuluu = entity.IgnoreProfileSpeedbumpDisabled;
                michal = zuuluu.updateSetting;
                entity = _closure2_slot7;
                entity = !entity;
                entity = michal.bind(zuuluu)(entity);
                return entity;
            };
            romeon['onValueChange'] = sequen;
            romeon = vacuum.bind(tangon)(ctrled, romeon);
            update[8] = romeon;
            romeon = 57;
            romeon = sizing[romeon];
            kiloes = kiloes.bind(tangon)(romeon);
            romeon = kiloes.isAndroid;
            kiloes = romeon.bind(kiloes)();
            romeon = null;
            if(!kiloes) { _fun00008_ip = 2318; continue _fun00007 }
 2205:
            sizing = _closure1_slot20;
            vacuum = _closure1_slot0;
            record = _closure1_slot2;
            foxtra = record[foxtra];
            foxtra = vacuum.bind(tangon)(foxtra);
            kiloes = foxtra.TableSwitchRow;
            foxtra = {'label': 'Enable Systrace', 'subLabel': 'Toggling requires an app restart to take effect.'};
            ctrled = 58;
            ctrled = record[ctrled];
            ctrled = vacuum.bind(tangon)(ctrled);
            vacuum = ctrled.TableRowIcon;
            ctrled = {};
            config = _closure1_slot1;
            sequen = 59;
            sequen = record[sequen];
            sequen = config.bind(tangon)(sequen);
            ctrled['source'] = sequen;
            ctrled = sizing.bind(tangon)(vacuum, ctrled);
            foxtra['icon'] = ctrled;
            foxtra['value'] = source;
            source = function() { // Original name: onValueChange
                zuuluu = _closure2_slot6;
                entity = _closure2_slot5;
                michal = !entity;
                entity = undefined;
                entity = zuuluu.bind(entity)(michal);
                return entity;
            };
            foxtra['onValueChange'] = source;
            romeon = sizing.bind(tangon)(kiloes, foxtra);
 2318:
            update[9] = romeon;
            foxtra = _closure1_slot20;
            sizing = _closure1_slot0;
            kiloes = _closure1_slot2;
            romeon = kiloes[yankee];
            romeon = sizing.bind(tangon)(romeon);
            ctrled = romeon.TableRow;
            source = {'label': 'Show App Rating Modal', 'subLabel': 'Attempts to show the app rating modal -- this may not visually show anything on debug builds or if your device has already been shown the modal recently.'};
            romeon = _closure1_slot1;
            vacuum = 60;
            vacuum = kiloes[vacuum];
            vacuum = romeon.bind(tangon)(vacuum);
            source['onPress'] = vacuum;
            vacuum = kiloes[output];
            vacuum = sizing.bind(tangon)(vacuum);
            sequen = vacuum.WrenchIcon;
            vacuum = {};
            vacuum = foxtra.bind(tangon)(sequen, vacuum);
            source['icon'] = vacuum;
            source = foxtra.bind(tangon)(ctrled, source);
            update[10] = source;
            verify['children'] = update;
            verify = echoed.bind(tangon)(result, verify);
            oscard[6] = verify;
            option = kiloes[option];
            verify = romeon.bind(tangon)(option);
            option = {};
            offset = kiloes[offset];
            offset = romeon.bind(tangon)(offset);
            offset = offset.spacing;
            offset = offset.PX_16;
            option['size'] = offset;
            option = foxtra.bind(tangon)(verify, option);
            oscard[7] = option;
            verify = _closure1_slot21;
            golfie = kiloes[golfie];
            golfie = sizing.bind(tangon)(golfie);
            option = golfie.TableRowGroup;
            golfie = {};
            offset = 'Crash Actions';
            golfie['title'] = offset;
            offset = kiloes[yankee];
            offset = sizing.bind(tangon)(offset);
            romeon = offset.TableRow;
            offset = {};
            result = kiloes[output];
            result = sizing.bind(tangon)(result);
            echoed = result.WrenchIcon;
            result = {};
            result = foxtra.bind(tangon)(echoed, result);
            offset['icon'] = result;
            result = 'Force Native Crash';
            offset['label'] = result;
            result = function() { // Original name: onPress
                zuuluu = _closure1_slot1;
                michal = _closure1_slot2;
                entity = 61;
                michal = michal[entity];
                entity = undefined;
                michal = zuuluu.bind(entity)(michal);
                entity = michal.crash;
                entity = entity.bind(michal)();
                return entity;
            };
            offset['onPress'] = result;
            romeon = foxtra.bind(tangon)(romeon, offset);
            offset = new Array(4);
            offset[0] = romeon;
            romeon = kiloes[yankee];
            romeon = sizing.bind(tangon)(romeon);
            result = romeon.TableRow;
            romeon = {};
            echoed = kiloes[output];
            echoed = sizing.bind(tangon)(echoed);
            update = echoed.WrenchIcon;
            echoed = {};
            echoed = foxtra.bind(tangon)(update, echoed);
            romeon['icon'] = echoed;
            echoed = 'Force JS Crash';
            romeon['label'] = echoed;
            echoed = function() { // Original name: onPress
                entity = global;
                zuuluu = entity.Error;
                entity = zuuluu.prototype;
                michal = Object.create(entity, {constructor: {value: zuuluu}});
                tangon = 'Force JS Crash';
                report = michal;
                entity = new report[zuuluu](tangon, zuuluu);
                entity = entity instanceof Object ? entity : michal;
                throw entity;
            };
            romeon['onPress'] = echoed;
            romeon = foxtra.bind(tangon)(result, romeon);
            offset[1] = romeon;
            romeon = kiloes[yankee];
            romeon = sizing.bind(tangon)(romeon);
            result = romeon.TableRow;
            romeon = {};
            echoed = kiloes[output];
            echoed = sizing.bind(tangon)(echoed);
            update = echoed.WrenchIcon;
            echoed = {};
            echoed = foxtra.bind(tangon)(update, echoed);
            romeon['icon'] = echoed;
            echoed = 'Force JS Boundary Crash';
            romeon['label'] = echoed;
            echoed = function() { // Original name: onPress
                zuuluu = _closure2_slot4;
                entity = undefined;
                michal = true;
                michal = zuuluu.bind(entity)(michal);
                return entity;
            };
            romeon['onPress'] = echoed;
            romeon = foxtra.bind(tangon)(result, romeon);
            offset[2] = romeon;
            yankee = kiloes[yankee];
            yankee = sizing.bind(tangon)(yankee);
            romeon = yankee.TableRow;
            yankee = {};
            kiloes = kiloes[output];
            kiloes = sizing.bind(tangon)(kiloes);
            sizing = kiloes.WrenchIcon;
            kiloes = {};
            kiloes = foxtra.bind(tangon)(sizing, kiloes);
            yankee['icon'] = kiloes;
            kiloes = 'Force libdiscore Crash';
            yankee['label'] = kiloes;
            backup = function() { // Original name: onPress
                zuuluu = _closure1_slot0;
                michal = _closure1_slot2;
                entity = 62;
                michal = michal[entity];
                entity = undefined;
                zuuluu = zuuluu.bind(entity)(michal);
                michal = zuuluu.crash;
                michal = michal.bind(zuuluu)();
                return entity;
            };
            yankee['onPress'] = backup;
            yankee = foxtra.bind(tangon)(romeon, yankee);
            offset[3] = yankee;
            golfie['children'] = offset;
            golfie = verify.bind(tangon)(option, golfie);
            oscard[8] = golfie;
            michal['children'] = oscard;
            michal = report.bind(tangon)(zuuluu, michal);
            return michal;
 2839:
            zuuluu = _closure1_slot0;
            report = _closure1_slot2;
            michal = 38;
            michal = report[michal];
            michal = zuuluu.bind(tangon)(michal);
            zuuluu = michal.default;
            michal = _closure1_slot20;
            entity = {};
            entity = michal.bind(tangon)(zuuluu, entity);
            return entity;
        }
    };
    zuuluu['default'] = michal;
    return entity;
})();