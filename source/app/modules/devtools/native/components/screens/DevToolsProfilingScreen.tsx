// app/modules/devtools/native/components/screens/DevToolsProfilingScreen.tsx
export default (function(global, require, metroImportDefault, metroImportAll, moduleObject, exports, dependencyMap) {
    var5 = require;
    var12 = metroImportDefault;
    var3 = exports;
    var6 = dependencyMap;
    var _closure1_slot0 = var5;
    var _closure1_slot1 = var12;
    var _closure1_slot2 = var6;
    var1 = function TableRowGroupReactProfiling() {
        var6 = _closure1_slot4;
        var3 = var6.useState;
        var7 = _closure1_slot1;
        var10 = _closure1_slot2;
        var2 = 7;
        var2 = var10[var2];
        var4 = undefined;
        var7 = var7.bind(var4)(var2);
        var2 = var7.reactProfilingEnabled;
        var2 = var2.bind(var7)();
        var6 = var3.bind(var6)(var2);
        var3 = _closure1_slot3;
        var2 = 2;
        var3 = var3.bind(var4)(var6, var2);
        var2 = 0;
        var8 = var3[var2];
        var _closure2_slot0 = var8;
        var2 = 1;
        var9 = var3[var2];
        var6 = _closure1_slot4;
        var3 = var6.useEffect;
        var2 = new Array(1);
        var2[0] = var8;
        var1 = function() {
            var3 = _closure1_slot1;
            var2 = _closure1_slot2;
            var1 = 7;
            var2 = var2[var1];
            var1 = undefined;
            var4 = var3.bind(var1)(var2);
            var3 = var4.setReactProfilingEnabled;
            var2 = _closure2_slot0;
            var2 = var3.bind(var4)(var2);
            return var1;
        };
        var1 = var3.bind(var6)(var1, var2);
        var3 = _closure1_slot6;
        var6 = _closure1_slot0;
        var1 = 8;
        var1 = var10[var1];
        var1 = var6.bind(var4)(var1);
        var2 = var1.TableRowGroup;
        var1 = {};
        var7 = 'React Profiling Renderer';
        var1['title'] = var7;
        var7 = _closure1_slot6;
        var5 = 9;
        var5 = var10[var5];
        var5 = var6.bind(var4)(var5);
        var6 = var5.TableSwitchRow;
        var5 = {'label': 'Enable React Profiling Renderer', 'subLabel': 'Enables React.Profiler, app restart required after change.'};
        var5['onValueChange'] = var9;
        var5['value'] = var8;
        var5 = var7.bind(var4)(var6, var5);
        var1['children'] = var5;
        var1 = var3.bind(var4)(var2, var1);
        return var1;
    };
    var _closure1_slot10 = var1;
    var1 = global;
    var8 = var1.Object;
    var7 = var8.defineProperty;
    var4 = {};
    var1 = true;
    var4['value'] = var1;
    var1 = '__esModule';
    var1 = var7.bind(var8)(var3, var1, var4);
    var1 = 0;
    var4 = var6[var1];
    var1 = undefined;
    var4 = var12.bind(var1)(var4);
    var _closure1_slot3 = var4;
    var4 = 1;
    var7 = var6[var4];
    var4 = metroImportAll;
    var4 = var4.bind(var1)(var7);
    var _closure1_slot4 = var4;
    var4 = 2;
    var4 = var6[var4];
    var7 = var5.bind(var1)(var4);
    var4 = var7.StyleSheet;
    var7 = var7.ScrollView;
    var _closure1_slot5 = var7;
    var7 = 3;
    var7 = var6[var7];
    var7 = var5.bind(var1)(var7);
    var11 = var7.Fonts;
    var7 = 4;
    var7 = var6[var7];
    var7 = var5.bind(var1)(var7);
    var8 = var7.jsx;
    var _closure1_slot6 = var8;
    var8 = var7.Fragment;
    var _closure1_slot7 = var8;
    var7 = var7.jsxs;
    var _closure1_slot8 = var7;
    var7 = 5;
    var7 = var6[var7];
    var9 = var5.bind(var1)(var7);
    var8 = var9.createStyles;
    var7 = {};
    var10 = {};
    var14 = var4.absoluteFillObject;
    var15 = var10;
    var4 = copyDataProperties(var15, var14);
    var4 = 6;
    var4 = var6[var4];
    var4 = var12.bind(var1)(var4);
    var4 = var4.colors;
    var12 = var4.BACKGROUND_PRIMARY;
    var4 = 'backgroundColor';
    var10[var4] = var12;
    var4 = 16;
    var12 = 'padding';
    var10[var12] = var4;
    var7['container'] = var10;
    var10 = {};
    var11 = var11.CODE_BOLD;
    var10['fontFamily'] = var11;
    var7['monospace'] = var10;
    var7 = var8.bind(var9)(var7);
    var _closure1_slot9 = var7;
    var4 = var6[var4];
    var6 = var5.bind(var1)(var4);
    var5 = var6.fileFinishedImporting;
    var4 = 'modules/devtools/native/components/screens/DevToolsProfilingScreen.tsx';
    var4 = var5.bind(var6)(var4);
    var2 = function DevToolsProfilingScreen() {
        _fun0001: for(var _fun0001_ip = 0; ; ) switch(_fun0001_ip) {
case 0:
            var3 = _closure1_slot4;
            var2 = var3.useState;
            var1 = false;
            var3 = var2.bind(var3)(var1);
            var2 = _closure1_slot3;
            var4 = undefined;
            var1 = 2;
            var3 = var2.bind(var4)(var3, var1);
            var2 = 0;
            var1 = var3[var2];
            var1 = 1;
            var1 = var3[var1];
            var _closure2_slot0 = var1;
            var6 = _closure1_slot4;
            var5 = var6.useCallback;
            var3 = function() {
                var3 = _closure1_slot0;
                var2 = _closure1_slot2;
                var1 = 10;
                var2 = var2[var1];
                var1 = undefined;
                var3 = var3.bind(var1)(var2);
                var2 = var3.clearComponentRenderStats;
                var2 = var2.bind(var3)();
                var3 = _closure2_slot0;
                var2 = true;
                var2 = var3.bind(var1)(var2);
                return var1;
            };
            var1 = new Array(0);
            var22 = var5.bind(var6)(var3, var1);
            var1 = _closure1_slot9;
            var25 = var1.bind(var4)();
            var _closure2_slot1 = var25;
            var6 = _closure1_slot0;
            var9 = _closure1_slot2;
            var1 = 10;
            var1 = var9[var1];
            var3 = var6.bind(var4)(var1);
            var1 = var3.getComponentRenderStats;
            var17 = var1.bind(var3)();
            var _closure2_slot2 = var17;
            var15 = global;
            var3 = var15.Object;
            var1 = var3.keys;
            var1 = var1.bind(var3)(var17);
            var1 = var1.length;
            var8 = var1 > var2;
            var3 = _closure1_slot6;
            var2 = _closure1_slot5;
            var1 = {};
            var5 = var25.container;
            var1['style'] = var5;
            var7 = _closure1_slot8;
            var5 = 11;
            var5 = var9[var5];
            var5 = var6.bind(var4)(var5);
            var6 = var5.Stack;
            var5 = {};
            var9 = 16;
            var5['spacing'] = var9;
            if(var8) { _fun0001_ip = 2; continue _fun0001 }
case 3:
            var11 = _closure1_slot6;
            var23 = _closure1_slot0;
            var26 = _closure1_slot2;
            var8 = 8;
            var8 = var26[var8];
            var8 = var23.bind(var4)(var8);
            var9 = var8.TableRowGroup;
            var8 = {};
            var12 = 'Component Profiler';
            var8['title'] = var12;
            var16 = _closure1_slot6;
            var12 = 12;
            var12 = var26[var12];
            var12 = var23.bind(var4)(var12);
            var13 = var12.TableRow;
            var12 = {};
            var18 = 'No components rendered yet.';
            var12['label'] = var18;
            var20 = _closure1_slot8;
            var21 = 13;
            var18 = var26[var21];
            var18 = var23.bind(var4)(var18);
            var19 = var18.Text;
            var18 = {'variant': 'text-xs/medium', 'color': 'text-secondary'};
            var24 = _closure1_slot6;
            var21 = var26[var21];
            var21 = var23.bind(var4)(var21);
            var23 = var21.Text;
            var21 = {'variant': 'text-xs/semibold', 'style': null, 'children': '<ComponentProfiler />'};
            var25 = var25.monospace;
            var21['style'] = var25;
            var23 = var24.bind(var4)(var23, var21);
            var21 = ['Make sure you wrap your component in '];
            var21[1] = var23;
            var23 = ' to enable measurements.';
            var21[2] = var23;
            var18['children'] = var21;
            var18 = var20.bind(var4)(var19, var18);
            var12['subLabel'] = var18;
            var12 = var16.bind(var4)(var13, var12);
            var8['children'] = var12;
            var9 = var11.bind(var4)(var9, var8);
            _fun0001_ip = 4; continue _fun0001;
case 2:
            var12 = _closure1_slot8;
            var11 = _closure1_slot7;
            var8 = {};
            var18 = _closure1_slot6;
            var20 = _closure1_slot0;
            var23 = _closure1_slot2;
            var13 = 8;
            var13 = var23[var13];
            var13 = var20.bind(var4)(var13);
            var16 = var13.TableRowGroup;
            var13 = {};
            var19 = 'Component Profiler';
            var13['title'] = var19;
            var21 = _closure1_slot6;
            var19 = 12;
            var19 = var23[var19];
            var19 = var20.bind(var4)(var19);
            var20 = var19.TableRow;
            var19 = {'variant': 'danger', 'arrow': true, 'label': 'Reset Stats'};
            var19['onPress'] = var22;
            var19 = var21.bind(var4)(var20, var19);
            var13['children'] = var19;
            var16 = var18.bind(var4)(var16, var13);
            var13 = new Array(2);
            var13[0] = var16;
            var16 = var15.Object;
            var15 = var16.keys;
            var16 = var15.bind(var16)(var17);
            var15 = var16.map;
            var14 = function(arg1) {
                var5 = arg1;
                var1 = _closure2_slot2;
                var1 = var1[var5];
                var8 = var1.mount;
                var9 = var1.update;
                var7 = var1.nestedUpdate;
                var4 = _closure1_slot6;
                var2 = _closure1_slot0;
                var3 = _closure1_slot2;
                var1 = 8;
                var1 = var3[var1];
                var3 = undefined;
                var1 = var2.bind(var3)(var1);
                var2 = var1.TableRowGroup;
                var1 = {};
                var6 = global;
                var6 = var6.HermesInternal;
                var11 = var6.concat;
                var10 = "Component Profiler Target: '";
                var6 = "'";
                var6 = var11.bind(var10)(var5, var6);
                var1['title'] = var6;
                var6 = {};
                var6['stat'] = var8;
                var8 = 'Mount';
                var6['label'] = var8;
                var8 = new Array(3);
                var8[0] = var6;
                var6 = {};
                var6['stat'] = var9;
                var9 = 'Update';
                var6['label'] = var9;
                var8[1] = var6;
                var6 = {};
                var6['stat'] = var7;
                var7 = 'Nested Update';
                var6['label'] = var7;
                var8[2] = var6;
                var7 = var8.map;
                var6 = function(arg1, arg2) {
                    var1 = arg1;
                    var14 = var1.stat;
                    var1 = var1.label;
                    var5 = _closure1_slot6;
                    var11 = _closure1_slot0;
                    var16 = _closure1_slot2;
                    var2 = 12;
                    var2 = var16[var2];
                    var4 = undefined;
                    var2 = var11.bind(var4)(var2);
                    var3 = var2.TableRow;
                    var2 = {};
                    var8 = _closure1_slot8;
                    var7 = _closure1_slot7;
                    var6 = {};
                    var18 = _closure1_slot6;
                    var10 = 13;
                    var9 = var16[var10];
                    var9 = var11.bind(var4)(var9);
                    var17 = var9.Text;
                    var9 = {'variant': 'text-sm/medium', 'color': 'text-secondary'};
                    var15 = _closure2_slot1;
                    var13 = var15.monospace;
                    var9['style'] = var13;
                    var21 = var14.count;
                    var13 = global;
                    var19 = var13.HermesInternal;
                    var20 = var19.concat;
                    var19 = 'Count - ';
                    var19 = var20.bind(var19)(var21);
                    var9['children'] = var19;
                    var17 = var18.bind(var4)(var17, var9);
                    var9 = new Array(2);
                    var9[0] = var17;
                    var12 = _closure1_slot6;
                    var10 = var16[var10];
                    var10 = var11.bind(var4)(var10);
                    var11 = var10.Text;
                    var10 = {'variant': 'text-sm/medium', 'color': 'text-secondary'};
                    var15 = var15.monospace;
                    var10['style'] = var15;
                    var15 = var14.mean;
                    var13 = var13.HermesInternal;
                    var14 = var13.concat;
                    var13 = 'Mean - ';
                    var13 = var14.bind(var13)(var15);
                    var10['children'] = var13;
                    var10 = var12.bind(var4)(var11, var10);
                    var9[1] = var10;
                    var6['children'] = var9;
                    var6 = var8.bind(var4)(var7, var6);
                    var2['subLabel'] = var6;
                    var2['label'] = var1;
                    var1 = arg2;
                    var1 = var5.bind(var4)(var3, var2, var1);
                    return var1;
                };
                var6 = var7.bind(var8)(var6);
                var1['children'] = var6;
                var1 = var4.bind(var3)(var2, var1, var5);
                return var1;
            };
            var14 = var15.bind(var16)(var14);
            var13[1] = var14;
            var8['children'] = var13;
            var9 = var12.bind(var4)(var11, var8);
case 4:
            var8 = new Array(3);
            var8[0] = var9;
            var14 = _closure1_slot6;
            var11 = _closure1_slot0;
            var12 = _closure1_slot2;
            var9 = 14;
            var9 = var12[var9];
            var9 = var11.bind(var4)(var9);
            var13 = var9.DevToolsProfilingUseStateFromStores;
            var9 = {};
            var9 = var14.bind(var4)(var13, var9);
            var8[1] = var9;
            var9 = 15;
            var9 = var12[var9];
            var11 = var11.bind(var4)(var9);
            var9 = var11.isAndroid;
            var11 = var9.bind(var11)();
            var9 = null;
            if(!var11) { _fun0001_ip = 5; continue _fun0001 }
case 6:
            var12 = _closure1_slot6;
            var11 = _closure1_slot10;
            var10 = {};
            var9 = var12.bind(var4)(var11, var10);
case 5:
            var8[2] = var9;
            var5['children'] = var8;
            var5 = var7.bind(var4)(var6, var5);
            var1['children'] = var5;
            var1 = var3.bind(var4)(var2, var1);
            return var1;
        }
    };
    var3['default'] = var2;
    return var1;
})();