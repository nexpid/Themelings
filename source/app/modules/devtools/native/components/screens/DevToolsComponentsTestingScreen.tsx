// app/modules/devtools/native/components/screens/DevToolsComponentsTestingScreen.tsx
export default (function(global, require, metroImportDefault, metroImportAll, moduleObject, exports, dependencyMap) {
    _fun0001: for(var _fun0001_ip = 0; ; ) switch(_fun0001_ip) {
 0:
        var5 = require;
        var11 = metroImportDefault;
        var3 = exports;
        var6 = dependencyMap;
        var _closure1_slot0 = var5;
        var _closure1_slot1 = var11;
        var _closure1_slot2 = var6;
        var1 = function getSelectedIndices(arg1, arg2) {
            var4 = arg2;
            var2 = arg1;
            var _closure2_slot0 = var2;
            var3 = var4.map;
            var2 = function(arg1) {
                var2 = arg1;
                var _closure3_slot0 = var2;
                var3 = _closure2_slot0;
                var2 = var3.findIndex;
                var1 = function(arg1) {
                    var1 = arg1;
                    var2 = var1.value;
                    var1 = _closure3_slot0;
                    var1 = var2 === var1;
                    return var1;
                };
                var1 = var2.bind(var3)(var1);
                return var1;
            };
            var3 = var3.bind(var4)(var2);
            var2 = var3.filter;
            var1 = function(arg1) {
                var2 = -1;
                var1 = arg1;
                var1 = var2 !== var1;
                return var1;
            };
            var1 = var2.bind(var3)(var1);
            return var1;
        };
        var _closure1_slot13 = var1;
        var1 = function SelectComponent() {
            _fun0002: for(var _fun0002_ip = 0; ; ) switch(_fun0002_ip) {
 0:
                var3 = _closure1_slot4;
                var2 = var3.useState;
                var1 = false;
                var3 = var2.bind(var3)(var1);
                var2 = _closure1_slot3;
                var4 = undefined;
                var1 = 2;
                var2 = var2.bind(var4)(var3, var1);
                var1 = 0;
                var10 = var2[var1];
                var1 = 1;
                var1 = var2[var1];
                var _closure2_slot0 = var1;
                var3 = _closure1_slot11;
                if(var10) { _fun0002_ip = 65; continue _fun0002 }
 60:
                var2 = var3;
                _fun0002_ip = 92; continue _fun0002;
 65:
                var1 = {};
                var20 = var1;
                var19 = var3;
                var3 = copyDataProperties(var20, var19);
                var5 = 4;
                var3 = 'maxValues';
                var1[var3] = var5;
                var2 = var1;
 92:
                var _closure2_slot1 = var2;
                var3 = _closure1_slot0;
                var5 = _closure1_slot2;
                var1 = 10;
                var1 = var5[var1];
                var3 = var3.bind(var4)(var1);
                var1 = var3.useComponentState;
                var1 = var1.bind(var3)(var2);
                var13 = var1.state;
                var8 = null;
                var1 = var8 == var13;
                var7 = var2;
                var2 = undefined;
                if(var1) { _fun0002_ip = 151; continue _fun0002 }
 146:
                var2 = var13.type;
 151:
                var1 = var7.type;
                if(!(var2 !== var1)) { _fun0002_ip = 166; continue _fun0002 }
 160:
                var17 = new Array(0);
                _fun0002_ip = 171; continue _fun0002;
 166:
                var17 = var13.values;
 171:
                var3 = _closure1_slot7;
                var2 = _closure1_slot8;
                var1 = {};
                var12 = _closure1_slot6;
                var11 = _closure1_slot10;
                var5 = {};
                var14 = {'width': 300, 'height': 48};
                var5['style'] = var14;
                var14 = {};
                var20 = var14;
                var19 = var7;
                var15 = copyDataProperties(var20, var19);
                var16 = _closure1_slot0;
                var18 = _closure1_slot2;
                var15 = 11;
                var15 = var18[var15];
                var15 = var16.bind(var4)(var15);
                var15 = var15.ActionComponentState;
                var16 = var15.NORMAL;
                var15 = 'state';
                var14[var15] = var16;
                var16 = _closure1_slot13;
                var15 = var7.options;
                var16 = var16.bind(var4)(var15, var17);
                var15 = 'selectedOptions';
                var14[var15] = var16;
                var5['model'] = var14;
                var14 = function onTap() {
                    var4 = _closure1_slot1;
                    var2 = _closure1_slot2;
                    var1 = 12;
                    var3 = var2[var1];
                    var1 = undefined;
                    var6 = var4.bind(var1)(var3);
                    var5 = var6.openLazy;
                    var4 = _closure1_slot0;
                    var3 = 14;
                    var3 = var2[var3];
                    var4 = var4.bind(var1)(var3);
                    var3 = 13;
                    var3 = var2[var3];
                    var2 = var2.paths;
                    var4 = var4.bind(var1)(var3, var2);
                    var3 = {'context': null, 'selectionActionComponent': null, 'applicationId': '', 'channelId': null, 'guildId': ''};
                    var2 = {};
                    var8 = 'modal';
                    var2['type'] = var8;
                    var7 = _closure1_slot12;
                    var2['modalCustomId'] = var7;
                    var3['context'] = var2;
                    var2 = _closure2_slot1;
                    var3['selectionActionComponent'] = var2;
                    var2 = 'StringSelectComponentActionSheet:modal';
                    var2 = var5.bind(var6)(var4, var2, var3);
                    return var1;
                };
                var5['onTap'] = var14;
                var11 = var12.bind(var4)(var11, var5);
                var5 = new Array(3);
                var5[0] = var11;
                var11 = var8 == var13;
                var8 = undefined;
                if(var11) { _fun0002_ip = 331; continue _fun0002 }
 326:
                var8 = var13.type;
 331:
                var7 = var7.type;
                if(!(var8 !== var7)) { _fun0002_ip = 391; continue _fun0002 }
 340:
                var11 = _closure1_slot6;
                var8 = _closure1_slot0;
                var12 = _closure1_slot2;
                var7 = 15;
                var7 = var12[var7];
                var7 = var8.bind(var4)(var7);
                var8 = var7.Text;
                var7 = {'variant': 'text-md/normal', 'children': 'Nothing selected'};
                var7 = var11.bind(var4)(var8, var7);
                _fun0002_ip = 477; continue _fun0002;
 391:
                var12 = _closure1_slot7;
                var11 = _closure1_slot0;
                var14 = _closure1_slot2;
                var8 = 15;
                var8 = var14[var8];
                var8 = var11.bind(var4)(var8);
                var11 = var8.Text;
                var8 = {};
                var14 = 'text-md/normal';
                var8['variant'] = var14;
                var15 = var13.values;
                var14 = var15.join;
                var13 = ', ';
                var14 = var14.bind(var15)(var13);
                var13 = ['Selected values: '];
                var13[1] = var14;
                var8['children'] = var13;
                var7 = var12.bind(var4)(var11, var8);
 477:
                var5[1] = var7;
                var8 = _closure1_slot6;
                var7 = _closure1_slot0;
                var11 = _closure1_slot2;
                var6 = 16;
                var6 = var11[var6];
                var6 = var7.bind(var4)(var6);
                var7 = var6.Button;
                var6 = {};
                var13 = 'off';
                if(!var10) { _fun0002_ip = 524; continue _fun0002 }
 520:
                var13 = 'on';
 524:
                var10 = global;
                var10 = var10.HermesInternal;
                var12 = var10.concat;
                var11 = 'Toggle Multi Select (';
                var10 = ')';
                var10 = var12.bind(var11)(var13, var10);
                var6['text'] = var10;
                var9 = function onPress() {
                    var3 = _closure2_slot0;
                    var2 = undefined;
                    var1 = function(arg1) {
                        var1 = arg1;
                        var1 = !var1;
                        return var1;
                    };
                    var1 = var3.bind(var2)(var1);
                    return var1;
                };
                var6['onPress'] = var9;
                var6 = var8.bind(var4)(var7, var6);
                var5[2] = var6;
                var1['children'] = var5;
                var1 = var3.bind(var4)(var2, var1);
                return var1;
            }
        };
        var _closure1_slot14 = var1;
        var1 = global;
        var8 = var1.Object;
        var7 = var8.defineProperty;
        var4 = {};
        var13 = true;
        var4['value'] = var13;
        var1 = '__esModule';
        var1 = var7.bind(var8)(var3, var1, var4);
        var7 = 0;
        var4 = var6[var7];
        var1 = undefined;
        var9 = var11.bind(var1)(var4);
        var _closure1_slot3 = var9;
        var8 = 1;
        var10 = var6[var8];
        var4 = metroImportAll;
        var4 = var4.bind(var1)(var10);
        var _closure1_slot4 = var4;
        var4 = 2;
        var4 = var6[var4];
        var4 = var5.bind(var1)(var4);
        var10 = var4.requireNativeComponent;
        var4 = var4.ScrollView;
        var _closure1_slot5 = var4;
        var4 = 3;
        var4 = var6[var4];
        var4 = var5.bind(var1)(var4);
        var12 = var4.jsx;
        var _closure1_slot6 = var12;
        var12 = var4.jsxs;
        var _closure1_slot7 = var12;
        var4 = var4.Fragment;
        var _closure1_slot8 = var4;
        var4 = 4;
        var4 = var6[var4];
        var14 = var5.bind(var1)(var4);
        var12 = var14.createStyles;
        var4 = {};
        var15 = {};
        var16 = 5;
        var17 = var6[var16];
        var17 = var11.bind(var1)(var17);
        var17 = var17.colors;
        var17 = var17.BACKGROUND_PRIMARY;
        var15['backgroundColor'] = var17;
        var15['flex'] = var8;
        var4['wrap'] = var15;
        var15 = {};
        var16 = var6[var16];
        var16 = var11.bind(var1)(var16);
        var16 = var16.spacing;
        var16 = var16.PX_16;
        var15['padding'] = var16;
        var4['contentContainer'] = var15;
        var4 = var12.bind(var14)(var4);
        var _closure1_slot9 = var4;
        var4 = 6;
        var4 = var6[var4];
        var12 = var5.bind(var1)(var4);
        var4 = var12.isAndroid;
        var4 = var4.bind(var12)();
        if(var4) { _fun0001_ip = 317; continue _fun0001 }
 304:
        var4 = 'DCDSelectActionComponentView';
        var4 = var10.bind(var1)(var4);
        _fun0001_ip = 329; continue _fun0001;
 317:
        var10 = 7;
        var10 = var6[var10];
        var4 = var11.bind(var1)(var10);
 329:
        var _closure1_slot10 = var4;
        var4 = 8;
        var4 = var6[var4];
        var12 = var5.bind(var1)(var4);
        var11 = var12.transformComponents;
        var4 = {'type': null, 'custom_id': 'test', 'max_values': 1, 'min_values': 1, 'placeholder': 'Choose...'};
        var10 = 9;
        var10 = var6[var10];
        var10 = var5.bind(var1)(var10);
        var10 = var10.ComponentType;
        var10 = var10.STRING_SELECT;
        var4['type'] = var10;
        var10 = new Array(4);
        var14 = {'label': 'test', 'value': 'test'};
        var10[0] = var14;
        var14 = {'label': 'test 2', 'value': 'test2', 'description': 'with description!'};
        var10[1] = var14;
        var14 = {'label': 'star', 'value': 'star'};
        var15 = {};
        var16 = '⭐';
        var15['name'] = var16;
        var14['emoji'] = var15;
        var10[2] = var14;
        var14 = {'label': 'advaith', 'value': 'advaith'};
        var15 = {'id': '889887673425199124', 'name': 'advaith_anim', 'animated': true};
        var14['emoji'] = var15;
        var10[3] = var14;
        var4['options'] = var10;
        var10 = new Array(1);
        var10[0] = var4;
        var4 = {};
        var4['includeEmojiSrc'] = var13;
        var4 = var11.bind(var12)(var10, var4);
        var4 = var9.bind(var1)(var4, var8);
        var4 = var4[var7];
        var _closure1_slot11 = var4;
        var4 = 'modal';
        var _closure1_slot12 = var4;
        var4 = 19;
        var4 = var6[var4];
        var6 = var5.bind(var1)(var4);
        var5 = var6.fileFinishedImporting;
        var4 = 'modules/devtools/native/components/screens/DevToolsComponentsTestingScreen.tsx';
        var4 = var5.bind(var6)(var4);
        var2 = function DevToolsComponentsTestingScreen() {
            var1 = _closure1_slot9;
            var4 = undefined;
            var5 = var1.bind(var4)();
            var3 = _closure1_slot6;
            var2 = _closure1_slot5;
            var1 = {};
            var6 = var5.wrap;
            var1['style'] = var6;
            var5 = var5.contentContainer;
            var1['contentContainerStyle'] = var5;
            var7 = _closure1_slot7;
            var10 = _closure1_slot0;
            var12 = _closure1_slot2;
            var5 = 17;
            var5 = var12[var5];
            var5 = var10.bind(var4)(var5);
            var6 = var5.Stack;
            var5 = {};
            var9 = 16;
            var5['spacing'] = var9;
            var14 = _closure1_slot6;
            var8 = 15;
            var8 = var12[var8];
            var8 = var10.bind(var4)(var8);
            var13 = var8.Text;
            var8 = {'variant': 'text-md/normal', 'children': 'Test screen for embedding native components in RN'};
            var13 = var14.bind(var4)(var13, var8);
            var8 = new Array(3);
            var8[0] = var13;
            var15 = _closure1_slot6;
            var13 = 10;
            var13 = var12[var13];
            var13 = var10.bind(var4)(var13);
            var14 = var13.ComponentStateContextProvider;
            var13 = {};
            var16 = {};
            var17 = _closure1_slot12;
            var16['customId'] = var17;
            var17 = '';
            var16['channelId'] = var17;
            var18 = _closure1_slot11;
            var17 = new Array(1);
            var17[0] = var18;
            var16['components'] = var17;
            var13['modal'] = var16;
            var18 = _closure1_slot6;
            var17 = _closure1_slot14;
            var16 = {};
            var16 = var18.bind(var4)(var17, var16);
            var13['children'] = var16;
            var13 = var15.bind(var4)(var14, var13);
            var8[1] = var13;
            var11 = _closure1_slot6;
            var9 = var12[var9];
            var9 = var10.bind(var4)(var9);
            var10 = var9.Button;
            var9 = {};
            var12 = function onPress() {
                var3 = _closure1_slot1;
                var2 = _closure1_slot2;
                var1 = 18;
                var2 = var2[var1];
                var1 = undefined;
                var3 = var3.bind(var1)(var2);
                var2 = var3.dispatch;
                var1 = {};
                var5 = 'CLEAR_INTERACTION_MODAL_STATE';
                var1['type'] = var5;
                var4 = _closure1_slot12;
                var1['customId'] = var4;
                var1 = var2.bind(var3)(var1);
                return var1;
            };
            var9['onPress'] = var12;
            var12 = 'Reset Modal State';
            var9['text'] = var12;
            var9 = var11.bind(var4)(var10, var9);
            var8[2] = var9;
            var5['children'] = var8;
            var5 = var7.bind(var4)(var6, var5);
            var1['children'] = var5;
            var1 = var3.bind(var4)(var2, var1);
            return var1;
        };
        var3['default'] = var2;
        return var1;
    }
})();