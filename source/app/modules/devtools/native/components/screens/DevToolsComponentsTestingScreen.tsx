// app/modules/devtools/native/components/screens/DevToolsComponentsTestingScreen.tsx
export default (function(global, require, metroImportDefault, metroImportAll, moduleObject, exports, dependencyMap) {
    var5 = require;
    var15 = metroImportDefault;
    var3 = exports;
    var6 = dependencyMap;
    var _closure1_slot0 = var5;
    var _closure1_slot1 = var15;
    var _closure1_slot2 = var6;
    var1 = function SelectComponent() {
        _fun0001: for(var _fun0001_ip = 0; ; ) switch(_fun0001_ip) {
 0:
            var3 = _closure1_slot4;
            var2 = var3.useState;
            var1 = false;
            var3 = var2.bind(var3)(var1);
            var2 = _closure1_slot3;
            var4 = undefined;
            var1 = 2;
            var2 = var2.bind(var4)(var3, var1);
            var1 = 0;
            var10 = var2[var1];
            var1 = 1;
            var1 = var2[var1];
            var _closure2_slot0 = var1;
            var2 = _closure1_slot10;
            if(var10) { _fun0001_ip = 65; continue _fun0001 }
 60:
            var7 = var2;
            _fun0001_ip = 92; continue _fun0001;
 65:
            var1 = {};
            var17 = var1;
            var16 = var2;
            var2 = copyDataProperties(var17, var16);
            var3 = 4;
            var2 = 'maxValues';
            var1[var2] = var3;
            var7 = var1;
 92:
            var2 = _closure1_slot0;
            var12 = _closure1_slot2;
            var1 = 8;
            var1 = var12[var1];
            var2 = var2.bind(var4)(var1);
            var1 = var2.useComponentState;
            var1 = var1.bind(var2)(var7);
            var13 = var1.state;
            var3 = _closure1_slot7;
            var2 = _closure1_slot8;
            var1 = {};
            var11 = _closure1_slot6;
            var8 = _closure1_slot1;
            var5 = 9;
            var5 = var12[var5];
            var8 = var8.bind(var4)(var5);
            var5 = {};
            var17 = var5;
            var16 = var7;
            var12 = copyDataProperties(var17, var16);
            var8 = var11.bind(var4)(var8, var5);
            var5 = new Array(3);
            var5[0] = var8;
            var8 = null;
            var11 = var8 == var13;
            var8 = undefined;
            if(var11) { _fun0001_ip = 200; continue _fun0001 }
 195:
            var8 = var13.type;
 200:
            var7 = var7.type;
            if(!(var8 !== var7)) { _fun0001_ip = 260; continue _fun0001 }
 209:
            var11 = _closure1_slot6;
            var8 = _closure1_slot0;
            var12 = _closure1_slot2;
            var7 = 10;
            var7 = var12[var7];
            var7 = var8.bind(var4)(var7);
            var8 = var7.Text;
            var7 = {'variant': 'text-md/normal', 'children': 'Nothing selected'};
            var7 = var11.bind(var4)(var8, var7);
            _fun0001_ip = 346; continue _fun0001;
 260:
            var12 = _closure1_slot7;
            var11 = _closure1_slot0;
            var14 = _closure1_slot2;
            var8 = 10;
            var8 = var14[var8];
            var8 = var11.bind(var4)(var8);
            var11 = var8.Text;
            var8 = {};
            var14 = 'text-md/normal';
            var8['variant'] = var14;
            var15 = var13.values;
            var14 = var15.join;
            var13 = ', ';
            var14 = var14.bind(var15)(var13);
            var13 = ['Selected values: '];
            var13[1] = var14;
            var8['children'] = var13;
            var7 = var12.bind(var4)(var11, var8);
 346:
            var5[1] = var7;
            var8 = _closure1_slot6;
            var7 = _closure1_slot0;
            var11 = _closure1_slot2;
            var6 = 11;
            var6 = var11[var6];
            var6 = var7.bind(var4)(var6);
            var7 = var6.Button;
            var6 = {};
            var13 = 'off';
            if(!var10) { _fun0001_ip = 393; continue _fun0001 }
 389:
            var13 = 'on';
 393:
            var10 = global;
            var10 = var10.HermesInternal;
            var12 = var10.concat;
            var11 = 'Toggle Multi Select (';
            var10 = ')';
            var10 = var12.bind(var11)(var13, var10);
            var6['text'] = var10;
            var9 = function onPress() {
                var3 = _closure2_slot0;
                var2 = undefined;
                var1 = function(arg1) {
                    var1 = arg1;
                    var1 = !var1;
                    return var1;
                };
                var1 = var3.bind(var2)(var1);
                return var1;
            };
            var6['onPress'] = var9;
            var6 = var8.bind(var4)(var7, var6);
            var5[2] = var6;
            var1['children'] = var5;
            var1 = var3.bind(var4)(var2, var1);
            return var1;
        }
    };
    var _closure1_slot11 = var1;
    var1 = global;
    var8 = var1.Object;
    var7 = var8.defineProperty;
    var4 = {};
    var13 = true;
    var4['value'] = var13;
    var1 = '__esModule';
    var1 = var7.bind(var8)(var3, var1, var4);
    var7 = 0;
    var4 = var6[var7];
    var1 = undefined;
    var9 = var15.bind(var1)(var4);
    var _closure1_slot3 = var9;
    var8 = 1;
    var10 = var6[var8];
    var4 = metroImportAll;
    var4 = var4.bind(var1)(var10);
    var _closure1_slot4 = var4;
    var4 = 2;
    var4 = var6[var4];
    var4 = var5.bind(var1)(var4);
    var4 = var4.ScrollView;
    var _closure1_slot5 = var4;
    var4 = 3;
    var4 = var6[var4];
    var4 = var5.bind(var1)(var4);
    var10 = var4.jsx;
    var _closure1_slot6 = var10;
    var10 = var4.jsxs;
    var _closure1_slot7 = var10;
    var4 = var4.Fragment;
    var _closure1_slot8 = var4;
    var4 = 4;
    var4 = var6[var4];
    var11 = var5.bind(var1)(var4);
    var10 = var11.createStyles;
    var4 = {};
    var12 = {};
    var14 = 5;
    var16 = var6[var14];
    var16 = var15.bind(var1)(var16);
    var16 = var16.colors;
    var16 = var16.BACKGROUND_PRIMARY;
    var12['backgroundColor'] = var16;
    var12['flex'] = var8;
    var4['wrap'] = var12;
    var12 = {};
    var14 = var6[var14];
    var14 = var15.bind(var1)(var14);
    var14 = var14.spacing;
    var14 = var14.PX_16;
    var12['padding'] = var14;
    var4['contentContainer'] = var12;
    var4 = var10.bind(var11)(var4);
    var _closure1_slot9 = var4;
    var4 = 6;
    var4 = var6[var4];
    var12 = var5.bind(var1)(var4);
    var11 = var12.transformComponents;
    var4 = {'type': null, 'custom_id': 'test', 'max_values': 1, 'min_values': 1, 'placeholder': 'Choose...'};
    var10 = 7;
    var10 = var6[var10];
    var10 = var5.bind(var1)(var10);
    var10 = var10.ComponentType;
    var10 = var10.STRING_SELECT;
    var4['type'] = var10;
    var10 = new Array(4);
    var14 = {'label': 'test with a long label', 'value': 'test'};
    var10[0] = var14;
    var14 = {'label': 'test 2 with a long label', 'value': 'test2', 'description': 'with description!'};
    var10[1] = var14;
    var14 = {'label': 'star with a long label', 'value': 'star'};
    var15 = {};
    var16 = '⭐';
    var15['name'] = var16;
    var14['emoji'] = var15;
    var10[2] = var14;
    var14 = {'label': 'advaith', 'value': 'advaith'};
    var15 = {'id': '889887673425199124', 'name': 'advaith_anim', 'animated': true};
    var14['emoji'] = var15;
    var10[3] = var14;
    var4['options'] = var10;
    var10 = new Array(1);
    var10[0] = var4;
    var4 = {};
    var4['includeEmojiSrc'] = var13;
    var4 = var11.bind(var12)(var10, var4);
    var4 = var9.bind(var1)(var4, var8);
    var4 = var4[var7];
    var _closure1_slot10 = var4;
    var4 = 14;
    var4 = var6[var4];
    var6 = var5.bind(var1)(var4);
    var5 = var6.fileFinishedImporting;
    var4 = 'modules/devtools/native/components/screens/DevToolsComponentsTestingScreen.tsx';
    var4 = var5.bind(var6)(var4);
    var2 = function DevToolsComponentsTestingScreen() {
        var1 = _closure1_slot9;
        var4 = undefined;
        var5 = var1.bind(var4)();
        var3 = _closure1_slot6;
        var2 = _closure1_slot5;
        var1 = {};
        var6 = var5.wrap;
        var1['style'] = var6;
        var5 = var5.contentContainer;
        var1['contentContainerStyle'] = var5;
        var7 = _closure1_slot7;
        var10 = _closure1_slot0;
        var12 = _closure1_slot2;
        var5 = 12;
        var5 = var12[var5];
        var5 = var10.bind(var4)(var5);
        var6 = var5.Stack;
        var5 = {};
        var8 = 16;
        var5['spacing'] = var8;
        var13 = _closure1_slot6;
        var8 = 10;
        var8 = var12[var8];
        var8 = var10.bind(var4)(var8);
        var11 = var8.Text;
        var8 = {'variant': 'text-md/normal', 'children': 'Test screen for embedding native components in RN'};
        var11 = var13.bind(var4)(var11, var8);
        var8 = new Array(3);
        var8[0] = var11;
        var14 = _closure1_slot6;
        var11 = 8;
        var11 = var12[var11];
        var11 = var10.bind(var4)(var11);
        var13 = var11.ComponentStateContextProvider;
        var11 = {};
        var15 = {'customId': 'modal', 'channelId': null};
        var17 = _closure1_slot10;
        var16 = new Array(1);
        var16[0] = var17;
        var15['components'] = var16;
        var11['modal'] = var15;
        var17 = _closure1_slot6;
        var16 = _closure1_slot11;
        var15 = {};
        var15 = var17.bind(var4)(var16, var15);
        var11['children'] = var15;
        var11 = var14.bind(var4)(var13, var11);
        var8[1] = var11;
        var11 = _closure1_slot6;
        var9 = 11;
        var9 = var12[var9];
        var9 = var10.bind(var4)(var9);
        var10 = var9.Button;
        var9 = {};
        var12 = function onPress() {
            var3 = _closure1_slot1;
            var2 = _closure1_slot2;
            var1 = 13;
            var2 = var2[var1];
            var1 = undefined;
            var3 = var3.bind(var1)(var2);
            var2 = var3.dispatch;
            var1 = {'type': 'CLEAR_INTERACTION_MODAL_STATE', 'customId': 'modal'};
            var1 = var2.bind(var3)(var1);
            return var1;
        };
        var9['onPress'] = var12;
        var12 = 'Reset Modal State';
        var9['text'] = var12;
        var9 = var11.bind(var4)(var10, var9);
        var8[2] = var9;
        var5['children'] = var8;
        var5 = var7.bind(var4)(var6, var5);
        var1['children'] = var5;
        var1 = var3.bind(var4)(var2, var1);
        return var1;
    };
    var3['default'] = var2;
    return var1;
})();