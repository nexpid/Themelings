// app/modules/devtools/native/components/screens/DevToolsRevenuePlaygroundScreen.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    report = argBar;
    yankee = argBaz;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    var _closure1_slot1 = yankee;
    var _closure1_slot2 = oscard;
    entity = function(argFoo) { // Original name: openTrialOfferActionSheet
        report = _closure1_slot1;
        michal = _closure1_slot2;
        entity = 7;
        tangon = michal[entity];
        entity = undefined;
        oscard = report.bind(entity)(tangon);
        report = oscard.openLazy;
        tangon = _closure1_slot0;
        zuuluu = 9;
        zuuluu = michal[zuuluu];
        tangon = tangon.bind(entity)(zuuluu);
        zuuluu = 8;
        zuuluu = michal[zuuluu];
        michal = michal.paths;
        tangon = tangon.bind(entity)(zuuluu, michal);
        zuuluu = {};
        michal = argFoo;
        zuuluu['fallbackPremiumType'] = michal;
        michal = 'PremiumTrialOfferActionSheet';
        michal = report.bind(oscard)(tangon, michal, zuuluu);
        return entity;
    };
    var _closure1_slot10 = entity;
    entity = function() { // Original name: TrialOfferSheetExample
        tangon = _closure1_slot8;
        golfie = _closure1_slot0;
        offset = _closure1_slot2;
        entity = 10;
        entity = offset[entity];
        zuuluu = undefined;
        entity = golfie.bind(zuuluu)(entity);
        michal = entity.TableRowGroup;
        entity = {};
        report = 'Trial Offers';
        entity['title'] = report;
        romeon = _closure1_slot7;
        oscard = 11;
        report = offset[oscard];
        report = golfie.bind(zuuluu)(report);
        yankee = report.TableRow;
        report = {};
        foxtra = 'Trial Offer Nitro Basic';
        report['label'] = foxtra;
        foxtra = function() { // Original name: onPress
            zuuluu = _closure1_slot10;
            entity = _closure1_slot6;
            michal = entity.TIER_0;
            entity = undefined;
            michal = zuuluu.bind(entity)(michal);
            return entity;
        };
        report['onPress'] = foxtra;
        yankee = romeon.bind(zuuluu)(yankee, report);
        report = new Array(2);
        report[0] = yankee;
        option = _closure1_slot7;
        oscard = offset[oscard];
        oscard = golfie.bind(zuuluu)(oscard);
        golfie = oscard.TableRow;
        oscard = {};
        offset = 'Trial Offer Nitro';
        oscard['label'] = offset;
        verify = function() { // Original name: onPress
            zuuluu = _closure1_slot10;
            entity = _closure1_slot6;
            michal = entity.TIER_2;
            entity = undefined;
            michal = zuuluu.bind(entity)(michal);
            return entity;
        };
        oscard['onPress'] = verify;
        oscard = option.bind(zuuluu)(golfie, oscard);
        report[1] = oscard;
        entity['children'] = report;
        entity = tangon.bind(zuuluu)(michal, entity);
        return entity;
    };
    var _closure1_slot11 = entity;
    entity = function() { // Original name: PremiumToggles
        michal = _closure1_slot0;
        oscard = _closure1_slot2;
        zuuluu = 12;
        golfie = oscard[zuuluu];
        tangon = undefined;
        yankee = michal.bind(tangon)(golfie);
        offset = yankee.useStateFromStores;
        golfie = _closure1_slot4;
        verify = new Array(1);
        verify[0] = golfie;
        zuuluu = oscard[zuuluu];
        zuuluu = michal.bind(tangon)(zuuluu);
        romeon = zuuluu.statesWillNeverBeEqual;
        backup = function() {
            zuuluu = _closure1_slot4;
            michal = zuuluu.allByCategory;
            entity = _closure1_slot5;
            entity = entity.PREMIUM;
            entity = michal.bind(zuuluu)(entity);
            return entity;
        };
        foxtra = new Array(0);
        sizing = yankee;
        kiloes = verify;
        golfie = sizing[offset](kiloes, backup, foxtra, romeon, yankee);
        zuuluu = _closure1_slot7;
        entity = 10;
        entity = oscard[entity];
        entity = michal.bind(tangon)(entity);
        michal = entity.TableRowGroup;
        entity = {};
        oscard = 'Premium Toggles';
        entity['title'] = oscard;
        oscard = golfie.map;
        report = function(argFoo) {
            _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
                oscard = argFoo;
                michal = oscard[Symbol.iterator];
                oscard = michal().next;
                option = undefined;
                zuuluu = undefined;
                report = undefined;
                golfie = oscard().value;
                romeon = michal;
                romeon = romeon === option;
                zuuluu = romeon;
                if(romeon) { _fun00002_ip = 34; continue _fun00001 }
 31:
                report = golfie;
 34:
                golfie = report;
                tangon = golfie;
                var _closure3_slot0 = golfie;
                report = undefined;
                golfie = zuuluu;
                if(golfie) { _fun00002_ip = 72; continue _fun00001 }
 52:
                golfie = oscard().value;
                romeon = michal;
                romeon = romeon === option;
                zuuluu = romeon;
                if(romeon) { _fun00002_ip = 72; continue _fun00001 }
 69:
                report = golfie;
 72:
                offset = report;
                report = undefined;
                golfie = zuuluu;
                if(golfie) { _fun00002_ip = 103; continue _fun00001 }
 83:
                oscard = oscard().value;
                golfie = michal;
                golfie = golfie === option;
                zuuluu = golfie;
                if(golfie) { _fun00002_ip = 103; continue _fun00001 }
 100:
                report = oscard;
 103: // try_start_0
                yankee = report.label;
 108: // try_end0
                report = zuuluu;
                if(report) { _fun00002_ip = 117; continue _fun00001 }
 114:
                michal.return();
 117:
                golfie = _closure1_slot7;
                oscard = _closure1_slot0;
                romeon = _closure1_slot2;
                report = 13;
                report = romeon[report];
                report = oscard.bind(option)(report);
                oscard = report.TableSwitchRow;
                report = {};
                report['label'] = yankee;
                report['subLabel'] = tangon;
                report['value'] = offset;
                verify = function(argFoo) { // Original name: onValueChange
                    zuuluu = _closure1_slot0;
                    michal = _closure1_slot2;
                    entity = 14;
                    michal = michal[entity];
                    entity = undefined;
                    tangon = zuuluu.bind(entity)(michal);
                    zuuluu = tangon.toggle;
                    michal = _closure3_slot0;
                    entity = argFoo;
                    entity = zuuluu.bind(tangon)(michal, entity);
                    return entity;
                };
                report['onValueChange'] = verify;
                tangon = golfie.bind(option)(oscard, report, tangon);
                return tangon;
 186: // catch_target0
                CatchBlockStart(arg_register=0);
                _fun00002_ip = 192; continue _fun00001;
 190:
                CatchBlockStart(arg_register=0);
 192:
                if(zuuluu) { _fun00002_ip = 198; continue _fun00001 }
 195:
                michal.return();
 198:
                throw entity;
            }
        };
        report = oscard.bind(golfie)(report);
        entity['children'] = report;
        entity = zuuluu.bind(tangon)(michal, entity);
        return entity;
    };
    var _closure1_slot12 = entity;
    entity = function() { // Original name: PaymentFlowTest
        tangon = _closure1_slot7;
        verify = _closure1_slot0;
        yankee = _closure1_slot2;
        entity = 10;
        entity = yankee[entity];
        zuuluu = undefined;
        entity = verify.bind(zuuluu)(entity);
        michal = entity.TableRowGroup;
        entity = {};
        report = 'Payment Flow Test';
        entity['title'] = report;
        golfie = _closure1_slot7;
        report = 11;
        report = yankee[report];
        report = verify.bind(zuuluu)(report);
        oscard = report.TableRow;
        report = {};
        offset = 'Test Payment Flow';
        report['label'] = offset;
        offset = function() { // Original name: onPress
            tangon = _closure1_slot1;
            michal = _closure1_slot2;
            entity = 15;
            zuuluu = michal[entity];
            entity = undefined;
            tangon = tangon.bind(entity)(zuuluu);
            zuuluu = tangon.pushLazy;
            oscard = _closure1_slot0;
            report = 9;
            report = michal[report];
            oscard = oscard.bind(entity)(report);
            report = 16;
            report = michal[report];
            michal = michal.paths;
            michal = oscard.bind(entity)(report, michal);
            michal = zuuluu.bind(tangon)(michal);
            return entity;
        };
        report['onPress'] = offset;
        offset = _closure1_slot7;
        option = 17;
        option = yankee[option];
        option = verify.bind(zuuluu)(option);
        verify = option.TableRowArrow;
        option = {};
        option = offset.bind(zuuluu)(verify, option);
        report['trailing'] = option;
        report = golfie.bind(zuuluu)(oscard, report);
        entity['children'] = report;
        entity = tangon.bind(zuuluu)(michal, entity);
        return entity;
    };
    var _closure1_slot13 = entity;
    entity = global;
    option = entity.Object;
    golfie = option.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(option)(zuuluu, entity, tangon);
    entity = 0;
    golfie = oscard[entity];
    tangon = argCor;
    entity = undefined;
    tangon = tangon.bind(entity)(golfie);
    romeon = 1;
    tangon = oscard[romeon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.ScrollView;
    var _closure1_slot3 = tangon;
    tangon = 2;
    golfie = oscard[tangon];
    golfie = yankee.bind(entity)(golfie);
    var _closure1_slot4 = golfie;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.DevSettingsCategory;
    var _closure1_slot5 = tangon;
    tangon = 3;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.PremiumTypes;
    var _closure1_slot6 = tangon;
    tangon = 4;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    golfie = tangon.jsx;
    var _closure1_slot7 = golfie;
    tangon = tangon.jsxs;
    var _closure1_slot8 = tangon;
    tangon = 5;
    tangon = oscard[tangon];
    option = report.bind(entity)(tangon);
    golfie = option.createStyles;
    tangon = {};
    verify = {};
    offset = 6;
    foxtra = oscard[offset];
    foxtra = yankee.bind(entity)(foxtra);
    foxtra = foxtra.colors;
    foxtra = foxtra.BACKGROUND_PRIMARY;
    verify['backgroundColor'] = foxtra;
    verify['flex'] = romeon;
    tangon['container'] = verify;
    verify = {};
    offset = oscard[offset];
    offset = yankee.bind(entity)(offset);
    offset = offset.spacing;
    offset = offset.PX_16;
    verify['padding'] = offset;
    tangon['scrollContainer'] = verify;
    tangon = golfie.bind(option)(tangon);
    var _closure1_slot9 = tangon;
    tangon = 19;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/devtools/native/components/screens/DevToolsRevenuePlaygroundScreen.tsx';
    tangon = report.bind(oscard)(tangon);
    michal = function() { // Original name: DevToolsRevenuePlaygroundScreen
        entity = _closure1_slot9;
        tangon = undefined;
        report = entity.bind(tangon)();
        zuuluu = _closure1_slot8;
        michal = _closure1_slot3;
        entity = {};
        golfie = report.container;
        entity['style'] = golfie;
        report = report.scrollContainer;
        entity['contentContainerStyle'] = report;
        option = _closure1_slot7;
        golfie = _closure1_slot11;
        report = {};
        golfie = option.bind(tangon)(golfie, report);
        report = new Array(5);
        report[0] = golfie;
        foxtra = _closure1_slot7;
        yankee = _closure1_slot1;
        romeon = _closure1_slot2;
        golfie = 18;
        option = romeon[golfie];
        verify = yankee.bind(tangon)(option);
        option = {};
        offset = 6;
        backup = romeon[offset];
        backup = yankee.bind(tangon)(backup);
        backup = backup.spacing;
        backup = backup.PX_16;
        option['size'] = backup;
        option = foxtra.bind(tangon)(verify, option);
        report[1] = option;
        foxtra = _closure1_slot7;
        verify = _closure1_slot12;
        option = {};
        option = foxtra.bind(tangon)(verify, option);
        report[2] = option;
        verify = _closure1_slot7;
        golfie = romeon[golfie];
        option = yankee.bind(tangon)(golfie);
        golfie = {};
        offset = romeon[offset];
        offset = yankee.bind(tangon)(offset);
        offset = offset.spacing;
        offset = offset.PX_16;
        golfie['size'] = offset;
        golfie = verify.bind(tangon)(option, golfie);
        report[3] = golfie;
        option = _closure1_slot7;
        golfie = _closure1_slot13;
        oscard = {};
        oscard = option.bind(tangon)(golfie, oscard);
        report[4] = oscard;
        entity['children'] = report;
        entity = zuuluu.bind(tangon)(michal, entity);
        return entity;
    };
    zuuluu['default'] = michal;
    return entity;
})();