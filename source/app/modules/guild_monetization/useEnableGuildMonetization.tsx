// app/modules/guild_monetization/useEnableGuildMonetization.tsx
export default (function(argFoo, argBar, argBaz, _, __, argFred, argPlugh) {
    zulu = argFred;
    tango = argPlugh;
    entity = argBaz;
    var _closure1_slot0 = entity;
    var _closure1_slot1 = tango;
    entity = global;
    golf = entity.Object;
    oscar = golf.defineProperty;
    report = {};
    entity = true;
    report['value'] = entity;
    entity = '__esModule';
    entity = oscar.bind(golf)(zulu, entity, report);
    entity = 1;
    report = tango[entity];
    tango = argBar;
    entity = undefined;
    oscar = tango.bind(entity)(report);
    report = oscar.fileFinishedImporting;
    tango = 'modules/guild_monetization/useEnableGuildMonetization.tsx';
    tango = report.bind(oscar)(tango);
    mike = function() { // Original name: useEnableGuildMonetization
        tango = _closure1_slot0;
        mike = _closure1_slot1;
        entity = 0;
        entity = mike[entity];
        mike = undefined;
        entity = tango.bind(mike)(entity);
        mike = entity.bind(mike)();
        entity = mike.createGuildApplication;
        var _closure2_slot0 = entity;
        entity = {};
        zulu = function(argFoo, argBar, argBaz) { // Original name: enableGuildMonetizationForTeam
            oscar = argFoo;
            report = _closure2_slot0;
            zulu = oscar.id;
            entity = global;
            entity = entity.HermesInternal;
            mike = entity.concat;
            entity = 'guildcr';
            golf = mike.bind(entity)(zulu);
            yankee = undefined;
            verify = argBar;
            options = argBaz;
            offset = oscar;
            entity = yankee[report](offset, verify, options, golf, oscar);
            return entity;
        };
        entity['enableGuildMonetizationForTeam'] = zulu;
        zulu = mike.submitting;
        entity['submitting'] = zulu;
        mike = mike.error;
        entity['error'] = mike;
        return entity;
    };
    zulu['default'] = mike;
    return entity;
})();