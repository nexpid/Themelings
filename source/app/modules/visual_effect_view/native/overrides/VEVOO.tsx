// app/modules/visual_effect_view/native/overrides/VEVOO.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    oscard = argBar;
    foxtra = argBaz;
    zuuluu = argFre;
    golfie = argPlu;
    var _closure1_slot0 = oscard;
    var _closure1_slot1 = foxtra;
    var _closure1_slot2 = golfie;
    entity = function(argFoo) { // Original name: VisualEffectViewOverrideOverlay_
        entity = argFoo;
        verify = entity.onClose;
        option = entity.x;
        var _closure2_slot0 = option;
        kiloes = entity.y;
        var _closure2_slot1 = kiloes;
        entity = _closure1_slot8;
        tangon = undefined;
        offset = entity.bind(tangon)();
        yankee = _closure1_slot1;
        romeon = _closure1_slot2;
        entity = 6;
        entity = romeon[entity];
        entity = yankee.bind(tangon)(entity);
        entity = entity.spacing;
        foxtra = entity.PX_8;
        var _closure2_slot2 = foxtra;
        backup = _closure1_slot0;
        entity = 7;
        zuuluu = romeon[entity];
        report = backup.bind(tangon)(zuuluu);
        zuuluu = report.useAnimatedStyle;
        michal = function() { // Original name: w
            entity = {};
            golfie = _closure1_slot0;
            option = _closure1_slot2;
            tangon = 8;
            zuuluu = option[tangon];
            oscard = undefined;
            romeon = golfie.bind(oscard)(zuuluu);
            yankee = romeon.withSpring;
            verify = _closure2_slot1;
            report = verify.get;
            report = report.bind(verify)();
            verify = _closure2_slot2;
            report = report - verify;
            michal = _closure1_slot5;
            offset = report + michal;
            michal = 9;
            report = option[michal];
            report = golfie.bind(oscard)(report);
            report = report.springUnclamped;
            report = yankee.bind(romeon)(offset, report);
            entity['top'] = report;
            tangon = option[tangon];
            report = golfie.bind(oscard)(tangon);
            tangon = report.withSpring;
            offset = _closure2_slot0;
            zuuluu = offset.get;
            zuuluu = zuuluu.bind(offset)();
            zuuluu = zuuluu - verify;
            michal = option[michal];
            michal = golfie.bind(oscard)(michal);
            michal = michal.springUnclamped;
            michal = tangon.bind(report)(zuuluu, michal);
            entity['left'] = michal;
            return entity;
        };
        golfie = {};
        sizing = 8;
        sizing = romeon[sizing];
        sizing = backup.bind(tangon)(sizing);
        sizing = sizing.withSpring;
        golfie['withSpring'] = sizing;
        golfie['y'] = kiloes;
        golfie['px8'] = foxtra;
        foxtra = _closure1_slot5;
        golfie['DEV_WIDGET_SIZE'] = foxtra;
        foxtra = 9;
        foxtra = romeon[foxtra];
        foxtra = backup.bind(tangon)(foxtra);
        foxtra = foxtra.springUnclamped;
        golfie['springUnclamped'] = foxtra;
        golfie['x'] = option;
        michal['__closure'] = golfie;
        golfie = 8104480272354.0;
        michal['__workletHash'] = golfie;
        golfie = _closure1_slot9;
        michal['__initData'] = golfie;
        golfie = zuuluu.bind(report)(michal);
        zuuluu = _closure1_slot7;
        entity = romeon[entity];
        entity = yankee.bind(tangon)(entity);
        michal = entity.View;
        entity = {};
        option = offset.wrapper;
        report = new Array(2);
        report[0] = option;
        report[1] = golfie;
        entity['style'] = report;
        option = _closure1_slot6;
        golfie = _closure1_slot3;
        report = {};
        foxtra = offset.scrollView;
        report['style'] = foxtra;
        kiloes = _closure1_slot7;
        foxtra = 10;
        foxtra = romeon[foxtra];
        foxtra = backup.bind(tangon)(foxtra);
        backup = foxtra.FormSection;
        foxtra = {};
        sizing = 'Blur View Global Overrides';
        foxtra['title'] = sizing;
        sizing = offset.scrollViewContent;
        foxtra['sectionBodyStyle'] = sizing;
        result = _closure1_slot6;
        sizing = 11;
        sizing = romeon[sizing];
        output = yankee.bind(tangon)(sizing);
        sizing = {};
        output = result.bind(tangon)(output, sizing);
        sizing = new Array(3);
        sizing[0] = output;
        echoed = _closure1_slot6;
        output = 12;
        output = romeon[output];
        result = yankee.bind(tangon)(output);
        output = {};
        output = echoed.bind(tangon)(result, output);
        sizing[1] = output;
        echoed = _closure1_slot6;
        output = 13;
        output = romeon[output];
        result = yankee.bind(tangon)(output);
        output = {};
        output = echoed.bind(tangon)(result, output);
        sizing[2] = output;
        foxtra['children'] = sizing;
        foxtra = kiloes.bind(tangon)(backup, foxtra);
        report['children'] = foxtra;
        golfie = option.bind(tangon)(golfie, report);
        report = new Array(2);
        report[0] = golfie;
        option = _closure1_slot6;
        oscard = 14;
        oscard = romeon[oscard];
        golfie = yankee.bind(tangon)(oscard);
        oscard = {};
        offset = offset.close;
        oscard['styles'] = offset;
        offset = 'neutral';
        oscard['type'] = offset;
        offset = 15;
        offset = romeon[offset];
        offset = yankee.bind(tangon)(offset);
        oscard['source'] = offset;
        oscard['onPress'] = verify;
        oscard = option.bind(tangon)(golfie, oscard);
        report[1] = oscard;
        entity['children'] = report;
        entity = zuuluu.bind(tangon)(michal, entity);
        return entity;
    };
    var _closure1_slot10 = entity;
    entity = global;
    option = entity.Object;
    report = option.defineProperty;
    michal = {};
    entity = true;
    michal['value'] = entity;
    entity = '__esModule';
    entity = report.bind(option)(zuuluu, entity, michal);
    romeon = 0;
    report = golfie[romeon];
    michal = argCor;
    entity = undefined;
    option = michal.bind(entity)(report);
    michal = 1;
    michal = golfie[michal];
    michal = oscard.bind(entity)(michal);
    michal = michal.ScrollView;
    var _closure1_slot3 = michal;
    michal = 2;
    michal = golfie[michal];
    michal = foxtra.bind(entity)(michal);
    var _closure1_slot4 = michal;
    michal = 3;
    michal = golfie[michal];
    michal = oscard.bind(entity)(michal);
    michal = michal.DEV_WIDGET_SIZE;
    var _closure1_slot5 = michal;
    michal = 4;
    report = golfie[michal];
    report = oscard.bind(entity)(report);
    report = report.jsx;
    var _closure1_slot6 = report;
    michal = golfie[michal];
    michal = oscard.bind(entity)(michal);
    michal = michal.jsxs;
    var _closure1_slot7 = michal;
    report = 5;
    michal = golfie[report];
    offset = oscard.bind(entity)(michal);
    verify = offset.createStyles;
    michal = {};
    yankee = {'paddingVertical': 0, 'paddingHorizontal': 0};
    michal['zeroPadding'] = yankee;
    yankee = {};
    yankee['paddingVertical'] = romeon;
    michal['zeroPaddingVertical'] = yankee;
    yankee = {};
    yankee['paddingHorizontal'] = romeon;
    michal['zeroPaddingHorizontal'] = yankee;
    yankee = {};
    yankee['height'] = romeon;
    michal['zeroHeight'] = yankee;
    yankee = {};
    romeon = 'flex-start';
    yankee['alignSelf'] = romeon;
    michal['enabledSwitchStyle'] = yankee;
    michal = verify.bind(offset)(michal);
    report = golfie[report];
    offset = oscard.bind(entity)(report);
    verify = offset.createStyles;
    report = {};
    yankee = {'borderColor': null, 'borderWidth': 1, 'backgroundColor': null, 'borderRadius': null, 'position': 'absolute', 'top': 0, 'left': 0, 'width': 300, 'height': 400};
    romeon = 6;
    backup = golfie[romeon];
    backup = foxtra.bind(entity)(backup);
    backup = backup.colors;
    backup = backup.BORDER_SUBTLE;
    yankee['borderColor'] = backup;
    backup = golfie[romeon];
    backup = foxtra.bind(entity)(backup);
    backup = backup.unsafe_rawColors;
    backup = backup.PRIMARY_660;
    yankee['backgroundColor'] = backup;
    backup = golfie[romeon];
    backup = foxtra.bind(entity)(backup);
    backup = backup.radii;
    backup = backup.lg;
    yankee['borderRadius'] = backup;
    backup = 'absolute';
    kiloes = golfie[romeon];
    kiloes = foxtra.bind(entity)(kiloes);
    kiloes = kiloes.shadows;
    output = kiloes.SHADOW_MOBILE_NAVIGATOR_X;
    result = yankee;
    kiloes = copyDataProperties(result, output);
    report['wrapper'] = yankee;
    yankee = {};
    kiloes = golfie[romeon];
    kiloes = foxtra.bind(entity)(kiloes);
    kiloes = kiloes.radii;
    kiloes = kiloes.lg;
    yankee['borderRadius'] = kiloes;
    kiloes = golfie[romeon];
    kiloes = foxtra.bind(entity)(kiloes);
    kiloes = kiloes.spacing;
    kiloes = kiloes.PX_24;
    yankee['paddingTop'] = kiloes;
    kiloes = 'hidden';
    yankee['overflow'] = kiloes;
    report['scrollView'] = yankee;
    yankee = {};
    kiloes = golfie[romeon];
    kiloes = foxtra.bind(entity)(kiloes);
    kiloes = kiloes.spacing;
    kiloes = kiloes.PX_24;
    yankee['paddingBottom'] = kiloes;
    report['scrollViewContent'] = yankee;
    yankee = {};
    kiloes = golfie[romeon];
    kiloes = foxtra.bind(entity)(kiloes);
    kiloes = kiloes.spacing;
    kiloes = kiloes.PX_32;
    yankee['width'] = kiloes;
    kiloes = golfie[romeon];
    kiloes = foxtra.bind(entity)(kiloes);
    kiloes = kiloes.spacing;
    kiloes = kiloes.PX_32;
    yankee['height'] = kiloes;
    kiloes = golfie[romeon];
    kiloes = foxtra.bind(entity)(kiloes);
    kiloes = kiloes.unsafe_rawColors;
    kiloes = kiloes.PRIMARY_700;
    yankee['backgroundColor'] = kiloes;
    kiloes = golfie[romeon];
    kiloes = foxtra.bind(entity)(kiloes);
    kiloes = kiloes.radii;
    kiloes = kiloes.sm;
    yankee['borderRadius'] = kiloes;
    report['tintColor'] = yankee;
    yankee = {};
    yankee['position'] = backup;
    backup = golfie[romeon];
    backup = foxtra.bind(entity)(backup);
    backup = backup.spacing;
    backup = backup.PX_8;
    yankee['right'] = backup;
    backup = golfie[romeon];
    backup = foxtra.bind(entity)(backup);
    backup = backup.spacing;
    backup = backup.PX_8;
    yankee['top'] = backup;
    romeon = golfie[romeon];
    romeon = foxtra.bind(entity)(romeon);
    romeon = romeon.shadows;
    output = romeon.SHADOW_LOW_HOVER;
    result = yankee;
    romeon = copyDataProperties(result, output);
    report['close'] = yankee;
    yankee = {};
    romeon = 14;
    yankee['fontSize'] = romeon;
    report['radio'] = yankee;
    report = verify.bind(offset)(report);
    var _closure1_slot8 = report;
    report = {};
    verify = 'function VEVOOTsx1(){const{withSpring,y,px8,DEV_WIDGET_SIZE,springUnclamped,x}=this.__closure;return{top:withSpring(y.get()-px8+DEV_WIDGET_SIZE,springUnclamped),left:withSpring(x.get()-px8,springUnclamped)};}';
    report['code'] = verify;
    var _closure1_slot9 = report;
    report = option.memo;
    tangon = function(argFoo) { // Original name: VisualEffectViewOverrideOverlay
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            zuuluu = _closure1_slot0;
            tangon = _closure1_slot2;
            entity = 16;
            entity = tangon[entity];
            report = undefined;
            golfie = zuuluu.bind(report)(entity);
            tangon = golfie.useStateFromStores;
            entity = _closure1_slot4;
            zuuluu = new Array(1);
            zuuluu[0] = entity;
            entity = function() {
                zuuluu = _closure1_slot4;
                michal = zuuluu.get;
                entity = 'visual_effect_view_overrides';
                entity = michal.bind(zuuluu)(entity);
                return entity;
            };
            zuuluu = tangon.bind(golfie)(zuuluu, entity);
            entity = null;
            if(!zuuluu) { _fun00002_ip = 100; continue _fun00001 }
 62:
            tangon = _closure1_slot6;
            zuuluu = _closure1_slot10;
            michal = {};
            oscard = function() { // Original name: onClose
                zuuluu = _closure1_slot0;
                michal = _closure1_slot2;
                entity = 17;
                michal = michal[entity];
                entity = undefined;
                report = zuuluu.bind(entity)(michal);
                tangon = report.toggle;
                zuuluu = 'visual_effect_view_overrides';
                michal = false;
                michal = tangon.bind(report)(zuuluu, michal);
                return entity;
            };
            michal['onClose'] = oscard;
            option = argFoo;
            verify = michal;
            oscard = copyDataProperties(verify, option);
            entity = tangon.bind(report)(zuuluu, michal);
 100:
            return entity;
        }
    };
    tangon = report.bind(option)(tangon);
    report = 18;
    report = golfie[report];
    golfie = oscard.bind(entity)(report);
    oscard = golfie.fileFinishedImporting;
    report = 'modules/visual_effect_view/native/overrides/VEVOO.tsx';
    report = oscard.bind(golfie)(report);
    zuuluu['default'] = tangon;
    zuuluu['useVisualEffectViewOverrideSharedStyles'] = michal;
    return entity;
})();