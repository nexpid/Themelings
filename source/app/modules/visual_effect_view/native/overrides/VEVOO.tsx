// app/modules/visual_effect_view/native/overrides/VEVOO.tsx
export default (function(argFoo, argBar, argBaz, argCorge, _, argFred, argPlugh) {
    oscar = argBar;
    foxtrot = argBaz;
    zulu = argFred;
    golf = argPlugh;
    var _closure1_slot0 = oscar;
    var _closure1_slot1 = foxtrot;
    var _closure1_slot2 = golf;
    entity = function(argFoo) { // Original name: VisualEffectViewOverrideOverlay_
        entity = argFoo;
        verify = entity.onClose;
        options = entity.x;
        var _closure2_slot0 = options;
        kilo = entity.y;
        var _closure2_slot1 = kilo;
        entity = _closure1_slot8;
        tango = undefined;
        offset = entity.bind(tango)();
        yankee = _closure1_slot1;
        romeo = _closure1_slot2;
        entity = 6;
        entity = romeo[entity];
        entity = yankee.bind(tango)(entity);
        entity = entity.spacing;
        foxtrot = entity.PX_8;
        var _closure2_slot2 = foxtrot;
        backup = _closure1_slot0;
        entity = 7;
        zulu = romeo[entity];
        report = backup.bind(tango)(zulu);
        zulu = report.useAnimatedStyle;
        mike = function() { // Original name: w
            entity = {};
            golf = _closure1_slot0;
            options = _closure1_slot2;
            tango = 8;
            zulu = options[tango];
            oscar = undefined;
            romeo = golf.bind(oscar)(zulu);
            yankee = romeo.withSpring;
            verify = _closure2_slot1;
            report = verify.get;
            report = report.bind(verify)();
            verify = _closure2_slot2;
            report = report - verify;
            mike = _closure1_slot5;
            offset = report + mike;
            mike = 9;
            report = options[mike];
            report = golf.bind(oscar)(report);
            report = report.springUnclamped;
            report = yankee.bind(romeo)(offset, report);
            entity['top'] = report;
            tango = options[tango];
            report = golf.bind(oscar)(tango);
            tango = report.withSpring;
            offset = _closure2_slot0;
            zulu = offset.get;
            zulu = zulu.bind(offset)();
            zulu = zulu - verify;
            mike = options[mike];
            mike = golf.bind(oscar)(mike);
            mike = mike.springUnclamped;
            mike = tango.bind(report)(zulu, mike);
            entity['left'] = mike;
            return entity;
        };
        golf = {};
        sizing = 8;
        sizing = romeo[sizing];
        sizing = backup.bind(tango)(sizing);
        sizing = sizing.withSpring;
        golf['withSpring'] = sizing;
        golf['y'] = kilo;
        golf['px8'] = foxtrot;
        foxtrot = _closure1_slot5;
        golf['DEV_WIDGET_SIZE'] = foxtrot;
        foxtrot = 9;
        foxtrot = romeo[foxtrot];
        foxtrot = backup.bind(tango)(foxtrot);
        foxtrot = foxtrot.springUnclamped;
        golf['springUnclamped'] = foxtrot;
        golf['x'] = options;
        mike['__closure'] = golf;
        golf = 8104480272354.0;
        mike['__workletHash'] = golf;
        golf = _closure1_slot9;
        mike['__initData'] = golf;
        golf = zulu.bind(report)(mike);
        zulu = _closure1_slot7;
        entity = romeo[entity];
        entity = yankee.bind(tango)(entity);
        mike = entity.View;
        entity = {};
        options = offset.wrapper;
        report = new Array(2);
        report[0] = options;
        report[1] = golf;
        entity['style'] = report;
        options = _closure1_slot6;
        golf = _closure1_slot3;
        report = {};
        foxtrot = offset.scrollView;
        report['style'] = foxtrot;
        kilo = _closure1_slot7;
        foxtrot = 10;
        foxtrot = romeo[foxtrot];
        foxtrot = backup.bind(tango)(foxtrot);
        backup = foxtrot.FormSection;
        foxtrot = {};
        sizing = 'Blur View Global Overrides';
        foxtrot['title'] = sizing;
        sizing = offset.scrollViewContent;
        foxtrot['sectionBodyStyle'] = sizing;
        result = _closure1_slot6;
        sizing = 11;
        sizing = romeo[sizing];
        output = yankee.bind(tango)(sizing);
        sizing = {};
        output = result.bind(tango)(output, sizing);
        sizing = new Array(3);
        sizing[0] = output;
        echo = _closure1_slot6;
        output = 12;
        output = romeo[output];
        result = yankee.bind(tango)(output);
        output = {};
        output = echo.bind(tango)(result, output);
        sizing[1] = output;
        echo = _closure1_slot6;
        output = 13;
        output = romeo[output];
        result = yankee.bind(tango)(output);
        output = {};
        output = echo.bind(tango)(result, output);
        sizing[2] = output;
        foxtrot['children'] = sizing;
        foxtrot = kilo.bind(tango)(backup, foxtrot);
        report['children'] = foxtrot;
        golf = options.bind(tango)(golf, report);
        report = new Array(2);
        report[0] = golf;
        options = _closure1_slot6;
        oscar = 14;
        oscar = romeo[oscar];
        golf = yankee.bind(tango)(oscar);
        oscar = {};
        offset = offset.close;
        oscar['styles'] = offset;
        offset = 'neutral';
        oscar['type'] = offset;
        offset = 15;
        offset = romeo[offset];
        offset = yankee.bind(tango)(offset);
        oscar['source'] = offset;
        oscar['onPress'] = verify;
        oscar = options.bind(tango)(golf, oscar);
        report[1] = oscar;
        entity['children'] = report;
        entity = zulu.bind(tango)(mike, entity);
        return entity;
    };
    var _closure1_slot10 = entity;
    entity = global;
    options = entity.Object;
    report = options.defineProperty;
    mike = {};
    entity = true;
    mike['value'] = entity;
    entity = '__esModule';
    entity = report.bind(options)(zulu, entity, mike);
    romeo = 0;
    report = golf[romeo];
    mike = argCorge;
    entity = undefined;
    options = mike.bind(entity)(report);
    mike = 1;
    mike = golf[mike];
    mike = oscar.bind(entity)(mike);
    mike = mike.ScrollView;
    var _closure1_slot3 = mike;
    mike = 2;
    mike = golf[mike];
    mike = foxtrot.bind(entity)(mike);
    var _closure1_slot4 = mike;
    mike = 3;
    mike = golf[mike];
    mike = oscar.bind(entity)(mike);
    mike = mike.DEV_WIDGET_SIZE;
    var _closure1_slot5 = mike;
    mike = 4;
    report = golf[mike];
    report = oscar.bind(entity)(report);
    report = report.jsx;
    var _closure1_slot6 = report;
    mike = golf[mike];
    mike = oscar.bind(entity)(mike);
    mike = mike.jsxs;
    var _closure1_slot7 = mike;
    report = 5;
    mike = golf[report];
    offset = oscar.bind(entity)(mike);
    verify = offset.createStyles;
    mike = {};
    yankee = {'paddingVertical': 0, 'paddingHorizontal': 0};
    mike['zeroPadding'] = yankee;
    yankee = {};
    yankee['paddingVertical'] = romeo;
    mike['zeroPaddingVertical'] = yankee;
    yankee = {};
    yankee['paddingHorizontal'] = romeo;
    mike['zeroPaddingHorizontal'] = yankee;
    yankee = {};
    yankee['height'] = romeo;
    mike['zeroHeight'] = yankee;
    yankee = {};
    romeo = 'flex-start';
    yankee['alignSelf'] = romeo;
    mike['enabledSwitchStyle'] = yankee;
    mike = verify.bind(offset)(mike);
    report = golf[report];
    offset = oscar.bind(entity)(report);
    verify = offset.createStyles;
    report = {};
    yankee = {'borderColor': null, 'borderWidth': 1, 'backgroundColor': null, 'borderRadius': null, 'position': 'absolute', 'top': 0, 'left': 0, 'width': 300, 'height': 400};
    romeo = 6;
    backup = golf[romeo];
    backup = foxtrot.bind(entity)(backup);
    backup = backup.colors;
    backup = backup.BORDER_SUBTLE;
    yankee['borderColor'] = backup;
    backup = golf[romeo];
    backup = foxtrot.bind(entity)(backup);
    backup = backup.unsafe_rawColors;
    backup = backup.PRIMARY_660;
    yankee['backgroundColor'] = backup;
    backup = golf[romeo];
    backup = foxtrot.bind(entity)(backup);
    backup = backup.radii;
    backup = backup.lg;
    yankee['borderRadius'] = backup;
    backup = 'absolute';
    kilo = golf[romeo];
    kilo = foxtrot.bind(entity)(kilo);
    kilo = kilo.shadows;
    output = kilo.SHADOW_MOBILE_NAVIGATOR_X;
    result = yankee;
    kilo = copyDataProperties(result, output);
    report['wrapper'] = yankee;
    yankee = {};
    kilo = golf[romeo];
    kilo = foxtrot.bind(entity)(kilo);
    kilo = kilo.radii;
    kilo = kilo.lg;
    yankee['borderRadius'] = kilo;
    kilo = golf[romeo];
    kilo = foxtrot.bind(entity)(kilo);
    kilo = kilo.spacing;
    kilo = kilo.PX_24;
    yankee['paddingTop'] = kilo;
    kilo = 'hidden';
    yankee['overflow'] = kilo;
    report['scrollView'] = yankee;
    yankee = {};
    kilo = golf[romeo];
    kilo = foxtrot.bind(entity)(kilo);
    kilo = kilo.spacing;
    kilo = kilo.PX_24;
    yankee['paddingBottom'] = kilo;
    report['scrollViewContent'] = yankee;
    yankee = {};
    kilo = golf[romeo];
    kilo = foxtrot.bind(entity)(kilo);
    kilo = kilo.spacing;
    kilo = kilo.PX_32;
    yankee['width'] = kilo;
    kilo = golf[romeo];
    kilo = foxtrot.bind(entity)(kilo);
    kilo = kilo.spacing;
    kilo = kilo.PX_32;
    yankee['height'] = kilo;
    kilo = golf[romeo];
    kilo = foxtrot.bind(entity)(kilo);
    kilo = kilo.unsafe_rawColors;
    kilo = kilo.PRIMARY_700;
    yankee['backgroundColor'] = kilo;
    kilo = golf[romeo];
    kilo = foxtrot.bind(entity)(kilo);
    kilo = kilo.radii;
    kilo = kilo.sm;
    yankee['borderRadius'] = kilo;
    report['tintColor'] = yankee;
    yankee = {};
    yankee['position'] = backup;
    backup = golf[romeo];
    backup = foxtrot.bind(entity)(backup);
    backup = backup.spacing;
    backup = backup.PX_8;
    yankee['right'] = backup;
    backup = golf[romeo];
    backup = foxtrot.bind(entity)(backup);
    backup = backup.spacing;
    backup = backup.PX_8;
    yankee['top'] = backup;
    romeo = golf[romeo];
    romeo = foxtrot.bind(entity)(romeo);
    romeo = romeo.shadows;
    output = romeo.SHADOW_LOW_HOVER;
    result = yankee;
    romeo = copyDataProperties(result, output);
    report['close'] = yankee;
    yankee = {};
    romeo = 14;
    yankee['fontSize'] = romeo;
    report['radio'] = yankee;
    report = verify.bind(offset)(report);
    var _closure1_slot8 = report;
    report = {};
    verify = 'function VEVOOTsx1(){const{withSpring,y,px8,DEV_WIDGET_SIZE,springUnclamped,x}=this.__closure;return{top:withSpring(y.get()-px8+DEV_WIDGET_SIZE,springUnclamped),left:withSpring(x.get()-px8,springUnclamped)};}';
    report['code'] = verify;
    var _closure1_slot9 = report;
    report = options.memo;
    tango = function(argFoo) { // Original name: VisualEffectViewOverrideOverlay
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            zulu = _closure1_slot0;
            tango = _closure1_slot2;
            entity = 16;
            entity = tango[entity];
            report = undefined;
            golf = zulu.bind(report)(entity);
            tango = golf.useStateFromStores;
            entity = _closure1_slot4;
            zulu = new Array(1);
            zulu[0] = entity;
            entity = function() {
                zulu = _closure1_slot4;
                mike = zulu.get;
                entity = 'visual_effect_view_overrides';
                entity = mike.bind(zulu)(entity);
                return entity;
            };
            zulu = tango.bind(golf)(zulu, entity);
            entity = null;
            if(!zulu) { _fun00002_ip = 100; continue _fun00001 }
 62:
            tango = _closure1_slot6;
            zulu = _closure1_slot10;
            mike = {};
            oscar = function() { // Original name: onClose
                zulu = _closure1_slot0;
                mike = _closure1_slot2;
                entity = 17;
                mike = mike[entity];
                entity = undefined;
                report = zulu.bind(entity)(mike);
                tango = report.toggle;
                zulu = 'visual_effect_view_overrides';
                mike = false;
                mike = tango.bind(report)(zulu, mike);
                return entity;
            };
            mike['onClose'] = oscar;
            options = argFoo;
            verify = mike;
            oscar = copyDataProperties(verify, options);
            entity = tango.bind(report)(zulu, mike);
 100:
            return entity;
        }
    };
    tango = report.bind(options)(tango);
    report = 18;
    report = golf[report];
    golf = oscar.bind(entity)(report);
    oscar = golf.fileFinishedImporting;
    report = 'modules/visual_effect_view/native/overrides/VEVOO.tsx';
    report = oscar.bind(golf)(report);
    zulu['default'] = tango;
    zulu['useVisualEffectViewOverrideSharedStyles'] = mike;
    return entity;
})();