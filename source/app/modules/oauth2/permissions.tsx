// app/modules/oauth2/permissions.tsx
export default (function(argFoo, argBar, _, argCorge, __, argFred, argPlugh) {
    oscar = argBar;
    zulu = argFred;
    golf = argPlugh;
    var _closure1_slot0 = oscar;
    entity = argCorge;
    var _closure1_slot1 = entity;
    var _closure1_slot2 = golf;
    entity = global;
    options = entity.Object;
    report = options.defineProperty;
    tango = {};
    entity = true;
    tango['value'] = entity;
    entity = '__esModule';
    entity = report.bind(options)(zulu, entity, tango);
    entity = 0;
    tango = golf[entity];
    entity = undefined;
    tango = oscar.bind(entity)(tango);
    options = tango.Permissions;
    var _closure1_slot3 = options;
    report = options.ADMINISTRATOR;
    tango = new Array(51);
    tango[0] = report;
    report = options.MANAGE_GUILD;
    tango[1] = report;
    report = options.MANAGE_ROLES;
    tango[2] = report;
    report = options.MANAGE_CHANNELS;
    tango[3] = report;
    report = options.KICK_MEMBERS;
    tango[4] = report;
    report = options.BAN_MEMBERS;
    tango[5] = report;
    report = options.CREATE_INSTANT_INVITE;
    tango[6] = report;
    report = options.MANAGE_NICKNAMES;
    tango[7] = report;
    report = options.CHANGE_NICKNAME;
    tango[8] = report;
    report = options.MANAGE_GUILD_EXPRESSIONS;
    tango[9] = report;
    report = options.CREATE_GUILD_EXPRESSIONS;
    tango[10] = report;
    report = options.MANAGE_WEBHOOKS;
    tango[11] = report;
    report = options.VIEW_AUDIT_LOG;
    tango[12] = report;
    report = options.VIEW_CHANNEL;
    tango[13] = report;
    report = options.MANAGE_EVENTS;
    tango[14] = report;
    report = options.CREATE_EVENTS;
    tango[15] = report;
    report = options.MODERATE_MEMBERS;
    tango[16] = report;
    report = options.VIEW_GUILD_ANALYTICS;
    tango[17] = report;
    report = options.VIEW_CREATOR_MONETIZATION_ANALYTICS;
    tango[18] = report;
    report = options.USE_EXTERNAL_APPS;
    tango[19] = report;
    report = options.SEND_MESSAGES;
    tango[20] = report;
    report = options.SEND_MESSAGES_IN_THREADS;
    tango[21] = report;
    report = options.CREATE_PUBLIC_THREADS;
    tango[22] = report;
    report = options.CREATE_PRIVATE_THREADS;
    tango[23] = report;
    report = options.SEND_TTS_MESSAGES;
    tango[24] = report;
    report = options.MANAGE_MESSAGES;
    tango[25] = report;
    report = options.MANAGE_THREADS;
    tango[26] = report;
    report = options.EMBED_LINKS;
    tango[27] = report;
    report = options.ATTACH_FILES;
    tango[28] = report;
    report = options.READ_MESSAGE_HISTORY;
    tango[29] = report;
    report = options.MENTION_EVERYONE;
    tango[30] = report;
    report = options.ADD_REACTIONS;
    tango[31] = report;
    report = options.USE_EXTERNAL_EMOJIS;
    tango[32] = report;
    report = options.USE_EXTERNAL_STICKERS;
    tango[33] = report;
    report = options.USE_APPLICATION_COMMANDS;
    tango[34] = report;
    report = options.SEND_VOICE_MESSAGES;
    tango[35] = report;
    report = options.USE_CLYDE_AI;
    tango[36] = report;
    report = options.SEND_POLLS;
    tango[37] = report;
    report = options.CONNECT;
    tango[38] = report;
    report = options.SPEAK;
    tango[39] = report;
    report = options.MUTE_MEMBERS;
    tango[40] = report;
    report = options.DEAFEN_MEMBERS;
    tango[41] = report;
    report = options.MOVE_MEMBERS;
    tango[42] = report;
    report = options.USE_VAD;
    tango[43] = report;
    report = options.PRIORITY_SPEAKER;
    tango[44] = report;
    report = options.REQUEST_TO_SPEAK;
    tango[45] = report;
    report = options.STREAM;
    tango[46] = report;
    report = options.USE_EMBEDDED_ACTIVITIES;
    tango[47] = report;
    report = options.USE_SOUNDBOARD;
    tango[48] = report;
    report = options.USE_EXTERNAL_SOUNDS;
    tango[49] = report;
    report = options.SET_VOICE_CHANNEL_STATUS;
    tango[50] = report;
    var _closure1_slot4 = tango;
    report = {};
    offset = options.ADMINISTRATOR;
    verify = offset.toString;
    offset = verify.bind(offset)();
    verify = function() {
        report = _closure1_slot0;
        oscar = _closure1_slot2;
        entity = 2;
        mike = oscar[entity];
        tango = undefined;
        mike = report.bind(tango)(mike);
        zulu = mike.intl;
        mike = zulu.string;
        entity = oscar[entity];
        entity = report.bind(tango)(entity);
        entity = entity.t;
        entity = entity.PGvZqa;
        entity = mike.bind(zulu)(entity);
        return entity;
    };
    report[offset] = verify;
    offset = options.MANAGE_GUILD;
    verify = offset.toString;
    offset = verify.bind(offset)();
    verify = function() {
        report = _closure1_slot0;
        oscar = _closure1_slot2;
        entity = 2;
        mike = oscar[entity];
        tango = undefined;
        mike = report.bind(tango)(mike);
        zulu = mike.intl;
        mike = zulu.string;
        entity = oscar[entity];
        entity = report.bind(tango)(entity);
        entity = entity.t;
        entity = entity.QZRcfH;
        entity = mike.bind(zulu)(entity);
        return entity;
    };
    report[offset] = verify;
    offset = options.MANAGE_ROLES;
    verify = offset.toString;
    offset = verify.bind(offset)();
    verify = function() {
        report = _closure1_slot0;
        oscar = _closure1_slot2;
        entity = 2;
        mike = oscar[entity];
        tango = undefined;
        mike = report.bind(tango)(mike);
        zulu = mike.intl;
        mike = zulu.string;
        entity = oscar[entity];
        entity = report.bind(tango)(entity);
        entity = entity.t;
        entity = entity.C8d+oK;
        entity = mike.bind(zulu)(entity);
        return entity;
    };
    report[offset] = verify;
    offset = options.MANAGE_CHANNELS;
    verify = offset.toString;
    offset = verify.bind(offset)();
    verify = function() {
        report = _closure1_slot0;
        oscar = _closure1_slot2;
        entity = 2;
        mike = oscar[entity];
        tango = undefined;
        mike = report.bind(tango)(mike);
        zulu = mike.intl;
        mike = zulu.string;
        entity = oscar[entity];
        entity = report.bind(tango)(entity);
        entity = entity.t;
        entity = entity.9qLtWl;
        entity = mike.bind(zulu)(entity);
        return entity;
    };
    report[offset] = verify;
    offset = options.KICK_MEMBERS;
    verify = offset.toString;
    offset = verify.bind(offset)();
    verify = function() {
        report = _closure1_slot0;
        oscar = _closure1_slot2;
        entity = 2;
        mike = oscar[entity];
        tango = undefined;
        mike = report.bind(tango)(mike);
        zulu = mike.intl;
        mike = zulu.string;
        entity = oscar[entity];
        entity = report.bind(tango)(entity);
        entity = entity.t;
        entity = entity.pBNv6u;
        entity = mike.bind(zulu)(entity);
        return entity;
    };
    report[offset] = verify;
    offset = options.BAN_MEMBERS;
    verify = offset.toString;
    offset = verify.bind(offset)();
    verify = function() {
        report = _closure1_slot0;
        oscar = _closure1_slot2;
        entity = 2;
        mike = oscar[entity];
        tango = undefined;
        mike = report.bind(tango)(mike);
        zulu = mike.intl;
        mike = zulu.string;
        entity = oscar[entity];
        entity = report.bind(tango)(entity);
        entity = entity.t;
        entity = entity.oTBA7O;
        entity = mike.bind(zulu)(entity);
        return entity;
    };
    report[offset] = verify;
    offset = options.CREATE_INSTANT_INVITE;
    verify = offset.toString;
    offset = verify.bind(offset)();
    verify = function() {
        report = _closure1_slot0;
        oscar = _closure1_slot2;
        entity = 2;
        mike = oscar[entity];
        tango = undefined;
        mike = report.bind(tango)(mike);
        zulu = mike.intl;
        mike = zulu.string;
        entity = oscar[entity];
        entity = report.bind(tango)(entity);
        entity = entity.t;
        entity = entity.zJrgTE;
        entity = mike.bind(zulu)(entity);
        return entity;
    };
    report[offset] = verify;
    offset = options.MANAGE_NICKNAMES;
    verify = offset.toString;
    offset = verify.bind(offset)();
    verify = function() {
        report = _closure1_slot0;
        oscar = _closure1_slot2;
        entity = 2;
        mike = oscar[entity];
        tango = undefined;
        mike = report.bind(tango)(mike);
        zulu = mike.intl;
        mike = zulu.string;
        entity = oscar[entity];
        entity = report.bind(tango)(entity);
        entity = entity.t;
        entity = entity.t+Ct5+;
        entity = mike.bind(zulu)(entity);
        return entity;
    };
    report[offset] = verify;
    offset = options.CHANGE_NICKNAME;
    verify = offset.toString;
    offset = verify.bind(offset)();
    verify = function() {
        report = _closure1_slot0;
        oscar = _closure1_slot2;
        entity = 2;
        mike = oscar[entity];
        tango = undefined;
        mike = report.bind(tango)(mike);
        zulu = mike.intl;
        mike = zulu.string;
        entity = oscar[entity];
        entity = report.bind(tango)(entity);
        entity = entity.t;
        entity = entity.dilOFx;
        entity = mike.bind(zulu)(entity);
        return entity;
    };
    report[offset] = verify;
    offset = options.MANAGE_GUILD_EXPRESSIONS;
    verify = offset.toString;
    offset = verify.bind(offset)();
    verify = function() {
        report = _closure1_slot0;
        oscar = _closure1_slot2;
        entity = 2;
        mike = oscar[entity];
        tango = undefined;
        mike = report.bind(tango)(mike);
        zulu = mike.intl;
        mike = zulu.string;
        entity = oscar[entity];
        entity = report.bind(tango)(entity);
        entity = entity.t;
        entity = entity.bbuXIi;
        entity = mike.bind(zulu)(entity);
        return entity;
    };
    report[offset] = verify;
    offset = options.CREATE_GUILD_EXPRESSIONS;
    verify = offset.toString;
    offset = verify.bind(offset)();
    verify = function() {
        report = _closure1_slot0;
        oscar = _closure1_slot2;
        entity = 2;
        mike = oscar[entity];
        tango = undefined;
        mike = report.bind(tango)(mike);
        zulu = mike.intl;
        mike = zulu.string;
        entity = oscar[entity];
        entity = report.bind(tango)(entity);
        entity = entity.t;
        entity = entity.HarVuL;
        entity = mike.bind(zulu)(entity);
        return entity;
    };
    report[offset] = verify;
    offset = options.MANAGE_WEBHOOKS;
    verify = offset.toString;
    offset = verify.bind(offset)();
    verify = function() {
        report = _closure1_slot0;
        oscar = _closure1_slot2;
        entity = 2;
        mike = oscar[entity];
        tango = undefined;
        mike = report.bind(tango)(mike);
        zulu = mike.intl;
        mike = zulu.string;
        entity = oscar[entity];
        entity = report.bind(tango)(entity);
        entity = entity.t;
        entity = entity./ADKmJ;
        entity = mike.bind(zulu)(entity);
        return entity;
    };
    report[offset] = verify;
    offset = options.VIEW_AUDIT_LOG;
    verify = offset.toString;
    offset = verify.bind(offset)();
    verify = function() {
        report = _closure1_slot0;
        oscar = _closure1_slot2;
        entity = 2;
        mike = oscar[entity];
        tango = undefined;
        mike = report.bind(tango)(mike);
        zulu = mike.intl;
        mike = zulu.string;
        entity = oscar[entity];
        entity = report.bind(tango)(entity);
        entity = entity.t;
        entity = entity.fZgLpK;
        entity = mike.bind(zulu)(entity);
        return entity;
    };
    report[offset] = verify;
    offset = options.VIEW_CHANNEL;
    verify = offset.toString;
    offset = verify.bind(offset)();
    verify = function() {
        report = _closure1_slot0;
        oscar = _closure1_slot2;
        entity = 2;
        mike = oscar[entity];
        tango = undefined;
        mike = report.bind(tango)(mike);
        zulu = mike.intl;
        mike = zulu.string;
        entity = oscar[entity];
        entity = report.bind(tango)(entity);
        entity = entity.t;
        entity = entity.uV83ys;
        entity = mike.bind(zulu)(entity);
        return entity;
    };
    report[offset] = verify;
    offset = options.SEND_MESSAGES;
    verify = offset.toString;
    offset = verify.bind(offset)();
    verify = function() {
        report = _closure1_slot0;
        oscar = _closure1_slot2;
        entity = 2;
        mike = oscar[entity];
        tango = undefined;
        mike = report.bind(tango)(mike);
        zulu = mike.intl;
        mike = zulu.string;
        entity = oscar[entity];
        entity = report.bind(tango)(entity);
        entity = entity.t;
        entity = entity.T32rkJ;
        entity = mike.bind(zulu)(entity);
        return entity;
    };
    report[offset] = verify;
    offset = options.SEND_TTS_MESSAGES;
    verify = offset.toString;
    offset = verify.bind(offset)();
    verify = function() {
        report = _closure1_slot0;
        oscar = _closure1_slot2;
        entity = 2;
        mike = oscar[entity];
        tango = undefined;
        mike = report.bind(tango)(mike);
        zulu = mike.intl;
        mike = zulu.string;
        entity = oscar[entity];
        entity = report.bind(tango)(entity);
        entity = entity.t;
        entity = entity.Mg7bkp;
        entity = mike.bind(zulu)(entity);
        return entity;
    };
    report[offset] = verify;
    offset = options.MANAGE_MESSAGES;
    verify = offset.toString;
    offset = verify.bind(offset)();
    verify = function() {
        report = _closure1_slot0;
        oscar = _closure1_slot2;
        entity = 2;
        mike = oscar[entity];
        tango = undefined;
        mike = report.bind(tango)(mike);
        zulu = mike.intl;
        mike = zulu.string;
        entity = oscar[entity];
        entity = report.bind(tango)(entity);
        entity = entity.t;
        entity = entity.6lU9xM;
        entity = mike.bind(zulu)(entity);
        return entity;
    };
    report[offset] = verify;
    offset = options.EMBED_LINKS;
    verify = offset.toString;
    offset = verify.bind(offset)();
    verify = function() {
        report = _closure1_slot0;
        oscar = _closure1_slot2;
        entity = 2;
        mike = oscar[entity];
        tango = undefined;
        mike = report.bind(tango)(mike);
        zulu = mike.intl;
        mike = zulu.string;
        entity = oscar[entity];
        entity = report.bind(tango)(entity);
        entity = entity.t;
        entity = entity.969dEB;
        entity = mike.bind(zulu)(entity);
        return entity;
    };
    report[offset] = verify;
    offset = options.ATTACH_FILES;
    verify = offset.toString;
    offset = verify.bind(offset)();
    verify = function() {
        report = _closure1_slot0;
        oscar = _closure1_slot2;
        entity = 2;
        mike = oscar[entity];
        tango = undefined;
        mike = report.bind(tango)(mike);
        zulu = mike.intl;
        mike = zulu.string;
        entity = oscar[entity];
        entity = report.bind(tango)(entity);
        entity = entity.t;
        entity = entity.3AS4UF;
        entity = mike.bind(zulu)(entity);
        return entity;
    };
    report[offset] = verify;
    offset = options.READ_MESSAGE_HISTORY;
    verify = offset.toString;
    offset = verify.bind(offset)();
    verify = function() {
        report = _closure1_slot0;
        oscar = _closure1_slot2;
        entity = 2;
        mike = oscar[entity];
        tango = undefined;
        mike = report.bind(tango)(mike);
        zulu = mike.intl;
        mike = zulu.string;
        entity = oscar[entity];
        entity = report.bind(tango)(entity);
        entity = entity.t;
        entity = entity.l9ufaW;
        entity = mike.bind(zulu)(entity);
        return entity;
    };
    report[offset] = verify;
    offset = options.MENTION_EVERYONE;
    verify = offset.toString;
    offset = verify.bind(offset)();
    verify = function() {
        report = _closure1_slot0;
        oscar = _closure1_slot2;
        entity = 2;
        mike = oscar[entity];
        tango = undefined;
        mike = report.bind(tango)(mike);
        zulu = mike.intl;
        mike = zulu.string;
        entity = oscar[entity];
        entity = report.bind(tango)(entity);
        entity = entity.t;
        entity = entity.Y78KGB;
        entity = mike.bind(zulu)(entity);
        return entity;
    };
    report[offset] = verify;
    offset = options.ADD_REACTIONS;
    verify = offset.toString;
    offset = verify.bind(offset)();
    verify = function() {
        report = _closure1_slot0;
        oscar = _closure1_slot2;
        entity = 2;
        mike = oscar[entity];
        tango = undefined;
        mike = report.bind(tango)(mike);
        zulu = mike.intl;
        mike = zulu.string;
        entity = oscar[entity];
        entity = report.bind(tango)(entity);
        entity = entity.t;
        entity = entity.yEoJAg;
        entity = mike.bind(zulu)(entity);
        return entity;
    };
    report[offset] = verify;
    offset = options.USE_EXTERNAL_EMOJIS;
    verify = offset.toString;
    offset = verify.bind(offset)();
    verify = function() {
        report = _closure1_slot0;
        oscar = _closure1_slot2;
        entity = 2;
        mike = oscar[entity];
        tango = undefined;
        mike = report.bind(tango)(mike);
        zulu = mike.intl;
        mike = zulu.string;
        entity = oscar[entity];
        entity = report.bind(tango)(entity);
        entity = entity.t;
        entity = entity.BpBGZW;
        entity = mike.bind(zulu)(entity);
        return entity;
    };
    report[offset] = verify;
    offset = options.USE_EXTERNAL_STICKERS;
    verify = offset.toString;
    offset = verify.bind(offset)();
    verify = function() {
        report = _closure1_slot0;
        oscar = _closure1_slot2;
        entity = 2;
        mike = oscar[entity];
        tango = undefined;
        mike = report.bind(tango)(mike);
        zulu = mike.intl;
        mike = zulu.string;
        entity = oscar[entity];
        entity = report.bind(tango)(entity);
        entity = entity.t;
        entity = entity.UeRs+f;
        entity = mike.bind(zulu)(entity);
        return entity;
    };
    report[offset] = verify;
    offset = options.USE_APPLICATION_COMMANDS;
    verify = offset.toString;
    offset = verify.bind(offset)();
    verify = function() {
        report = _closure1_slot0;
        oscar = _closure1_slot2;
        entity = 2;
        mike = oscar[entity];
        tango = undefined;
        mike = report.bind(tango)(mike);
        zulu = mike.intl;
        mike = zulu.string;
        entity = oscar[entity];
        entity = report.bind(tango)(entity);
        entity = entity.t;
        entity = entity.shbR1d;
        entity = mike.bind(zulu)(entity);
        return entity;
    };
    report[offset] = verify;
    offset = options.SEND_VOICE_MESSAGES;
    verify = offset.toString;
    offset = verify.bind(offset)();
    verify = function() {
        report = _closure1_slot0;
        oscar = _closure1_slot2;
        entity = 2;
        mike = oscar[entity];
        tango = undefined;
        mike = report.bind(tango)(mike);
        zulu = mike.intl;
        mike = zulu.string;
        entity = oscar[entity];
        entity = report.bind(tango)(entity);
        entity = entity.t;
        entity = entity.+8GStb;
        entity = mike.bind(zulu)(entity);
        return entity;
    };
    report[offset] = verify;
    offset = options.CONNECT;
    verify = offset.toString;
    offset = verify.bind(offset)();
    verify = function() {
        report = _closure1_slot0;
        oscar = _closure1_slot2;
        entity = 2;
        mike = oscar[entity];
        tango = undefined;
        mike = report.bind(tango)(mike);
        zulu = mike.intl;
        mike = zulu.string;
        entity = oscar[entity];
        entity = report.bind(tango)(entity);
        entity = entity.t;
        entity = entity.S0W8Z2;
        entity = mike.bind(zulu)(entity);
        return entity;
    };
    report[offset] = verify;
    offset = options.SPEAK;
    verify = offset.toString;
    offset = verify.bind(offset)();
    verify = function() {
        report = _closure1_slot0;
        oscar = _closure1_slot2;
        entity = 2;
        mike = oscar[entity];
        tango = undefined;
        mike = report.bind(tango)(mike);
        zulu = mike.intl;
        mike = zulu.string;
        entity = oscar[entity];
        entity = report.bind(tango)(entity);
        entity = entity.t;
        entity = entity.8w1tIS;
        entity = mike.bind(zulu)(entity);
        return entity;
    };
    report[offset] = verify;
    offset = options.MUTE_MEMBERS;
    verify = offset.toString;
    offset = verify.bind(offset)();
    verify = function() {
        report = _closure1_slot0;
        oscar = _closure1_slot2;
        entity = 2;
        mike = oscar[entity];
        tango = undefined;
        mike = report.bind(tango)(mike);
        zulu = mike.intl;
        mike = zulu.string;
        entity = oscar[entity];
        entity = report.bind(tango)(entity);
        entity = entity.t;
        entity = entity.8EI309;
        entity = mike.bind(zulu)(entity);
        return entity;
    };
    report[offset] = verify;
    offset = options.DEAFEN_MEMBERS;
    verify = offset.toString;
    offset = verify.bind(offset)();
    verify = function() {
        report = _closure1_slot0;
        oscar = _closure1_slot2;
        entity = 2;
        mike = oscar[entity];
        tango = undefined;
        mike = report.bind(tango)(mike);
        zulu = mike.intl;
        mike = zulu.string;
        entity = oscar[entity];
        entity = report.bind(tango)(entity);
        entity = entity.t;
        entity = entity.9L47Fh;
        entity = mike.bind(zulu)(entity);
        return entity;
    };
    report[offset] = verify;
    offset = options.MOVE_MEMBERS;
    verify = offset.toString;
    offset = verify.bind(offset)();
    verify = function() {
        report = _closure1_slot0;
        oscar = _closure1_slot2;
        entity = 2;
        mike = oscar[entity];
        tango = undefined;
        mike = report.bind(tango)(mike);
        zulu = mike.intl;
        mike = zulu.string;
        entity = oscar[entity];
        entity = report.bind(tango)(entity);
        entity = entity.t;
        entity = entity.YtjJPT;
        entity = mike.bind(zulu)(entity);
        return entity;
    };
    report[offset] = verify;
    offset = options.USE_VAD;
    verify = offset.toString;
    offset = verify.bind(offset)();
    verify = function() {
        report = _closure1_slot0;
        oscar = _closure1_slot2;
        entity = 2;
        mike = oscar[entity];
        tango = undefined;
        mike = report.bind(tango)(mike);
        zulu = mike.intl;
        mike = zulu.string;
        entity = oscar[entity];
        entity = report.bind(tango)(entity);
        entity = entity.t;
        entity = entity.08zAV1;
        entity = mike.bind(zulu)(entity);
        return entity;
    };
    report[offset] = verify;
    offset = options.PRIORITY_SPEAKER;
    verify = offset.toString;
    offset = verify.bind(offset)();
    verify = function() {
        report = _closure1_slot0;
        oscar = _closure1_slot2;
        entity = 2;
        mike = oscar[entity];
        tango = undefined;
        mike = report.bind(tango)(mike);
        zulu = mike.intl;
        mike = zulu.string;
        entity = oscar[entity];
        entity = report.bind(tango)(entity);
        entity = entity.t;
        entity = entity.BVK71t;
        entity = mike.bind(zulu)(entity);
        return entity;
    };
    report[offset] = verify;
    offset = options.CREATE_PUBLIC_THREADS;
    verify = offset.toString;
    offset = verify.bind(offset)();
    verify = function() {
        report = _closure1_slot0;
        oscar = _closure1_slot2;
        entity = 2;
        mike = oscar[entity];
        tango = undefined;
        mike = report.bind(tango)(mike);
        zulu = mike.intl;
        mike = zulu.string;
        entity = oscar[entity];
        entity = report.bind(tango)(entity);
        entity = entity.t;
        entity = entity.25rKnZ;
        entity = mike.bind(zulu)(entity);
        return entity;
    };
    report[offset] = verify;
    offset = options.CREATE_PRIVATE_THREADS;
    verify = offset.toString;
    offset = verify.bind(offset)();
    verify = function() {
        report = _closure1_slot0;
        oscar = _closure1_slot2;
        entity = 2;
        mike = oscar[entity];
        tango = undefined;
        mike = report.bind(tango)(mike);
        zulu = mike.intl;
        mike = zulu.string;
        entity = oscar[entity];
        entity = report.bind(tango)(entity);
        entity = entity.t;
        entity = entity.QwbTSU;
        entity = mike.bind(zulu)(entity);
        return entity;
    };
    report[offset] = verify;
    offset = options.SEND_MESSAGES_IN_THREADS;
    verify = offset.toString;
    offset = verify.bind(offset)();
    verify = function() {
        report = _closure1_slot0;
        oscar = _closure1_slot2;
        entity = 2;
        mike = oscar[entity];
        tango = undefined;
        mike = report.bind(tango)(mike);
        zulu = mike.intl;
        mike = zulu.string;
        entity = oscar[entity];
        entity = report.bind(tango)(entity);
        entity = entity.t;
        entity = entity.fTE74u;
        entity = mike.bind(zulu)(entity);
        return entity;
    };
    report[offset] = verify;
    offset = options.MANAGE_THREADS;
    verify = offset.toString;
    offset = verify.bind(offset)();
    verify = function() {
        report = _closure1_slot0;
        oscar = _closure1_slot2;
        entity = 2;
        mike = oscar[entity];
        tango = undefined;
        mike = report.bind(tango)(mike);
        zulu = mike.intl;
        mike = zulu.string;
        entity = oscar[entity];
        entity = report.bind(tango)(entity);
        entity = entity.t;
        entity = entity.kEqgr6;
        entity = mike.bind(zulu)(entity);
        return entity;
    };
    report[offset] = verify;
    offset = options.MANAGE_EVENTS;
    verify = offset.toString;
    offset = verify.bind(offset)();
    verify = function() {
        report = _closure1_slot0;
        oscar = _closure1_slot2;
        entity = 2;
        mike = oscar[entity];
        tango = undefined;
        mike = report.bind(tango)(mike);
        zulu = mike.intl;
        mike = zulu.string;
        entity = oscar[entity];
        entity = report.bind(tango)(entity);
        entity = entity.t;
        entity = entity.HIgA5e;
        entity = mike.bind(zulu)(entity);
        return entity;
    };
    report[offset] = verify;
    offset = options.CREATE_EVENTS;
    verify = offset.toString;
    offset = verify.bind(offset)();
    verify = function() {
        report = _closure1_slot0;
        oscar = _closure1_slot2;
        entity = 2;
        mike = oscar[entity];
        tango = undefined;
        mike = report.bind(tango)(mike);
        zulu = mike.intl;
        mike = zulu.string;
        entity = oscar[entity];
        entity = report.bind(tango)(entity);
        entity = entity.t;
        entity = entity.qyjZub;
        entity = mike.bind(zulu)(entity);
        return entity;
    };
    report[offset] = verify;
    offset = options.MODERATE_MEMBERS;
    verify = offset.toString;
    offset = verify.bind(offset)();
    verify = function() {
        report = _closure1_slot0;
        oscar = _closure1_slot2;
        entity = 2;
        mike = oscar[entity];
        tango = undefined;
        mike = report.bind(tango)(mike);
        zulu = mike.intl;
        mike = zulu.string;
        entity = oscar[entity];
        entity = report.bind(tango)(entity);
        entity = entity.t;
        entity = entity.7DgVBg;
        entity = mike.bind(zulu)(entity);
        return entity;
    };
    report[offset] = verify;
    offset = options.REQUEST_TO_SPEAK;
    verify = offset.toString;
    offset = verify.bind(offset)();
    verify = function() {
        report = _closure1_slot0;
        oscar = _closure1_slot2;
        entity = 2;
        mike = oscar[entity];
        tango = undefined;
        mike = report.bind(tango)(mike);
        zulu = mike.intl;
        mike = zulu.string;
        entity = oscar[entity];
        entity = report.bind(tango)(entity);
        entity = entity.t;
        entity = entity.5kicT0;
        entity = mike.bind(zulu)(entity);
        return entity;
    };
    report[offset] = verify;
    offset = options.VIEW_GUILD_ANALYTICS;
    verify = offset.toString;
    offset = verify.bind(offset)();
    verify = function() {
        report = _closure1_slot0;
        oscar = _closure1_slot2;
        entity = 2;
        mike = oscar[entity];
        tango = undefined;
        mike = report.bind(tango)(mike);
        zulu = mike.intl;
        mike = zulu.string;
        entity = oscar[entity];
        entity = report.bind(tango)(entity);
        entity = entity.t;
        entity = entity.rQJBEx;
        entity = mike.bind(zulu)(entity);
        return entity;
    };
    report[offset] = verify;
    offset = options.VIEW_CREATOR_MONETIZATION_ANALYTICS;
    verify = offset.toString;
    offset = verify.bind(offset)();
    verify = function() {
        report = _closure1_slot0;
        oscar = _closure1_slot2;
        entity = 2;
        mike = oscar[entity];
        tango = undefined;
        mike = report.bind(tango)(mike);
        zulu = mike.intl;
        mike = zulu.string;
        entity = oscar[entity];
        entity = report.bind(tango)(entity);
        entity = entity.t;
        entity = entity.0lTLTk;
        entity = mike.bind(zulu)(entity);
        return entity;
    };
    report[offset] = verify;
    offset = options.STREAM;
    verify = offset.toString;
    offset = verify.bind(offset)();
    verify = function() {
        report = _closure1_slot0;
        oscar = _closure1_slot2;
        entity = 2;
        mike = oscar[entity];
        tango = undefined;
        mike = report.bind(tango)(mike);
        zulu = mike.intl;
        mike = zulu.string;
        entity = oscar[entity];
        entity = report.bind(tango)(entity);
        entity = entity.t;
        entity = entity.FlNoSU;
        entity = mike.bind(zulu)(entity);
        return entity;
    };
    report[offset] = verify;
    offset = options.USE_EMBEDDED_ACTIVITIES;
    verify = offset.toString;
    offset = verify.bind(offset)();
    verify = function() {
        report = _closure1_slot0;
        oscar = _closure1_slot2;
        entity = 2;
        mike = oscar[entity];
        tango = undefined;
        mike = report.bind(tango)(mike);
        zulu = mike.intl;
        mike = zulu.string;
        entity = oscar[entity];
        entity = report.bind(tango)(entity);
        entity = entity.t;
        entity = entity.rLSGen;
        entity = mike.bind(zulu)(entity);
        return entity;
    };
    report[offset] = verify;
    offset = options.USE_SOUNDBOARD;
    verify = offset.toString;
    offset = verify.bind(offset)();
    verify = function() {
        report = _closure1_slot0;
        oscar = _closure1_slot2;
        entity = 2;
        mike = oscar[entity];
        tango = undefined;
        mike = report.bind(tango)(mike);
        zulu = mike.intl;
        mike = zulu.string;
        entity = oscar[entity];
        entity = report.bind(tango)(entity);
        entity = entity.t;
        entity = entity.Bco7ND;
        entity = mike.bind(zulu)(entity);
        return entity;
    };
    report[offset] = verify;
    offset = options.USE_EXTERNAL_SOUNDS;
    verify = offset.toString;
    offset = verify.bind(offset)();
    verify = function() {
        report = _closure1_slot0;
        oscar = _closure1_slot2;
        entity = 2;
        mike = oscar[entity];
        tango = undefined;
        mike = report.bind(tango)(mike);
        zulu = mike.intl;
        mike = zulu.string;
        entity = oscar[entity];
        entity = report.bind(tango)(entity);
        entity = entity.t;
        entity = entity.pwaVJy;
        entity = mike.bind(zulu)(entity);
        return entity;
    };
    report[offset] = verify;
    offset = options.USE_CLYDE_AI;
    verify = offset.toString;
    offset = verify.bind(offset)();
    verify = function() {
        report = _closure1_slot0;
        oscar = _closure1_slot2;
        entity = 2;
        mike = oscar[entity];
        tango = undefined;
        mike = report.bind(tango)(mike);
        zulu = mike.intl;
        mike = zulu.string;
        entity = oscar[entity];
        entity = report.bind(tango)(entity);
        entity = entity.t;
        entity = entity.8eeEZm;
        entity = mike.bind(zulu)(entity);
        return entity;
    };
    report[offset] = verify;
    offset = options.SET_VOICE_CHANNEL_STATUS;
    verify = offset.toString;
    offset = verify.bind(offset)();
    verify = function() {
        report = _closure1_slot0;
        oscar = _closure1_slot2;
        entity = 2;
        mike = oscar[entity];
        tango = undefined;
        mike = report.bind(tango)(mike);
        zulu = mike.intl;
        mike = zulu.string;
        entity = oscar[entity];
        entity = report.bind(tango)(entity);
        entity = entity.t;
        entity = entity.VBwkUV;
        entity = mike.bind(zulu)(entity);
        return entity;
    };
    report[offset] = verify;
    offset = options.SEND_POLLS;
    verify = offset.toString;
    offset = verify.bind(offset)();
    verify = function() {
        report = _closure1_slot0;
        oscar = _closure1_slot2;
        entity = 2;
        mike = oscar[entity];
        tango = undefined;
        mike = report.bind(tango)(mike);
        zulu = mike.intl;
        mike = zulu.string;
        entity = oscar[entity];
        entity = report.bind(tango)(entity);
        entity = entity.t;
        entity = entity.UMQ7W1;
        entity = mike.bind(zulu)(entity);
        return entity;
    };
    report[offset] = verify;
    verify = options.USE_EXTERNAL_APPS;
    options = verify.toString;
    verify = options.bind(verify)();
    options = function() {
        report = _closure1_slot0;
        oscar = _closure1_slot2;
        entity = 2;
        mike = oscar[entity];
        tango = undefined;
        mike = report.bind(tango)(mike);
        zulu = mike.intl;
        mike = zulu.string;
        entity = oscar[entity];
        entity = report.bind(tango)(entity);
        entity = entity.t;
        entity = entity.TtA5rK;
        entity = mike.bind(zulu)(entity);
        return entity;
    };
    report[verify] = options;
    var _closure1_slot5 = report;
    report = 3;
    report = golf[report];
    golf = oscar.bind(entity)(report);
    oscar = golf.fileFinishedImporting;
    report = 'modules/oauth2/permissions.tsx';
    report = oscar.bind(golf)(report);
    zulu['OrderedPermissions'] = tango;
    tango = function(argFoo) { // Original name: containsDisallowedPermission
        mike = argFoo;
        var _closure2_slot0 = mike;
        mike = global;
        tango = mike.Object;
        zulu = tango.values;
        mike = _closure1_slot3;
        zulu = zulu.bind(tango)(mike);
        mike = zulu.some;
        entity = function(argFoo) {
            _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
                tango = argFoo;
                report = _closure1_slot1;
                zulu = _closure1_slot2;
                entity = 1;
                zulu = zulu[entity];
                entity = undefined;
                report = report.bind(entity)(zulu);
                zulu = report.has;
                entity = _closure2_slot0;
                entity = zulu.bind(report)(entity, tango);
                if(!entity) { _fun00002_ip = 66; continue _fun00001 }
 49:
                zulu = _closure1_slot4;
                mike = zulu.includes;
                mike = mike.bind(zulu)(tango);
                entity = !mike;
 66:
                return entity;
            }
        };
        entity = mike.bind(zulu)(entity);
        return entity;
    };
    zulu['containsDisallowedPermission'] = tango;
    mike = function(argFoo) { // Original name: getPermissionName
        _fun00003: for(var _fun00004_ip = 0; ; ) switch(_fun00004_ip) {
 0:
            tango = argFoo;
            entity = tango.toString;
            mike = entity.bind(tango)();
            entity = _closure1_slot5;
            mike = entity[mike];
            entity = null;
            if(!(entity != mike)) { _fun00004_ip = 37; continue _fun00003 }
 29:
            entity = undefined;
            entity = mike.bind(entity)();
            return entity;
 37:
            entity = global;
            zulu = entity.Error;
            entity = entity.HermesInternal;
            mike = entity.concat;
            entity = 'Unknown permission. Did you provide a _single_ bit flag? Perm: ';
            report = mike.bind(entity)(tango);
            mike = zulu.prototype;
            mike = Object.create(mike, {constructor: {value: zulu}});
            oscar = mike;
            entity = new oscar[zulu](report, tango);
            entity = entity instanceof Object ? entity : mike;
            throw entity;
        }
    };
    zulu['getPermissionName'] = mike;
    return entity;
})();