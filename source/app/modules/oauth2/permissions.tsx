// app/modules/oauth2/permissions.tsx
export default (function(argFoo, argBar, _, argCor, __, argFre, argPlu) {
    oscard = argBar;
    zuuluu = argFre;
    golfie = argPlu;
    var _closure1_slot0 = oscard;
    entity = argCor;
    var _closure1_slot1 = entity;
    var _closure1_slot2 = golfie;
    entity = global;
    option = entity.Object;
    report = option.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = report.bind(option)(zuuluu, entity, tangon);
    entity = 0;
    tangon = golfie[entity];
    entity = undefined;
    tangon = oscard.bind(entity)(tangon);
    option = tangon.Permissions;
    var _closure1_slot3 = option;
    report = option.ADMINISTRATOR;
    tangon = new Array(51);
    tangon[0] = report;
    report = option.MANAGE_GUILD;
    tangon[1] = report;
    report = option.MANAGE_ROLES;
    tangon[2] = report;
    report = option.MANAGE_CHANNELS;
    tangon[3] = report;
    report = option.KICK_MEMBERS;
    tangon[4] = report;
    report = option.BAN_MEMBERS;
    tangon[5] = report;
    report = option.CREATE_INSTANT_INVITE;
    tangon[6] = report;
    report = option.MANAGE_NICKNAMES;
    tangon[7] = report;
    report = option.CHANGE_NICKNAME;
    tangon[8] = report;
    report = option.MANAGE_GUILD_EXPRESSIONS;
    tangon[9] = report;
    report = option.CREATE_GUILD_EXPRESSIONS;
    tangon[10] = report;
    report = option.MANAGE_WEBHOOKS;
    tangon[11] = report;
    report = option.VIEW_AUDIT_LOG;
    tangon[12] = report;
    report = option.VIEW_CHANNEL;
    tangon[13] = report;
    report = option.MANAGE_EVENTS;
    tangon[14] = report;
    report = option.CREATE_EVENTS;
    tangon[15] = report;
    report = option.MODERATE_MEMBERS;
    tangon[16] = report;
    report = option.VIEW_GUILD_ANALYTICS;
    tangon[17] = report;
    report = option.VIEW_CREATOR_MONETIZATION_ANALYTICS;
    tangon[18] = report;
    report = option.USE_EXTERNAL_APPS;
    tangon[19] = report;
    report = option.SEND_MESSAGES;
    tangon[20] = report;
    report = option.SEND_MESSAGES_IN_THREADS;
    tangon[21] = report;
    report = option.CREATE_PUBLIC_THREADS;
    tangon[22] = report;
    report = option.CREATE_PRIVATE_THREADS;
    tangon[23] = report;
    report = option.SEND_TTS_MESSAGES;
    tangon[24] = report;
    report = option.MANAGE_MESSAGES;
    tangon[25] = report;
    report = option.MANAGE_THREADS;
    tangon[26] = report;
    report = option.EMBED_LINKS;
    tangon[27] = report;
    report = option.ATTACH_FILES;
    tangon[28] = report;
    report = option.READ_MESSAGE_HISTORY;
    tangon[29] = report;
    report = option.MENTION_EVERYONE;
    tangon[30] = report;
    report = option.ADD_REACTIONS;
    tangon[31] = report;
    report = option.USE_EXTERNAL_EMOJIS;
    tangon[32] = report;
    report = option.USE_EXTERNAL_STICKERS;
    tangon[33] = report;
    report = option.USE_APPLICATION_COMMANDS;
    tangon[34] = report;
    report = option.SEND_VOICE_MESSAGES;
    tangon[35] = report;
    report = option.USE_CLYDE_AI;
    tangon[36] = report;
    report = option.SEND_POLLS;
    tangon[37] = report;
    report = option.CONNECT;
    tangon[38] = report;
    report = option.SPEAK;
    tangon[39] = report;
    report = option.MUTE_MEMBERS;
    tangon[40] = report;
    report = option.DEAFEN_MEMBERS;
    tangon[41] = report;
    report = option.MOVE_MEMBERS;
    tangon[42] = report;
    report = option.USE_VAD;
    tangon[43] = report;
    report = option.PRIORITY_SPEAKER;
    tangon[44] = report;
    report = option.REQUEST_TO_SPEAK;
    tangon[45] = report;
    report = option.STREAM;
    tangon[46] = report;
    report = option.USE_EMBEDDED_ACTIVITIES;
    tangon[47] = report;
    report = option.USE_SOUNDBOARD;
    tangon[48] = report;
    report = option.USE_EXTERNAL_SOUNDS;
    tangon[49] = report;
    report = option.SET_VOICE_CHANNEL_STATUS;
    tangon[50] = report;
    var _closure1_slot4 = tangon;
    report = {};
    offset = option.ADMINISTRATOR;
    verify = offset.toString;
    offset = verify.bind(offset)();
    verify = function() {
        report = _closure1_slot0;
        oscard = _closure1_slot2;
        entity = 2;
        michal = oscard[entity];
        tangon = undefined;
        michal = report.bind(tangon)(michal);
        zuuluu = michal.intl;
        michal = zuuluu.string;
        entity = oscard[entity];
        entity = report.bind(tangon)(entity);
        entity = entity.t;
        entity = entity.PGvZqa;
        entity = michal.bind(zuuluu)(entity);
        return entity;
    };
    report[offset] = verify;
    offset = option.MANAGE_GUILD;
    verify = offset.toString;
    offset = verify.bind(offset)();
    verify = function() {
        report = _closure1_slot0;
        oscard = _closure1_slot2;
        entity = 2;
        michal = oscard[entity];
        tangon = undefined;
        michal = report.bind(tangon)(michal);
        zuuluu = michal.intl;
        michal = zuuluu.string;
        entity = oscard[entity];
        entity = report.bind(tangon)(entity);
        entity = entity.t;
        entity = entity.QZRcfH;
        entity = michal.bind(zuuluu)(entity);
        return entity;
    };
    report[offset] = verify;
    offset = option.MANAGE_ROLES;
    verify = offset.toString;
    offset = verify.bind(offset)();
    verify = function() {
        report = _closure1_slot0;
        oscard = _closure1_slot2;
        entity = 2;
        michal = oscard[entity];
        tangon = undefined;
        michal = report.bind(tangon)(michal);
        zuuluu = michal.intl;
        michal = zuuluu.string;
        entity = oscard[entity];
        entity = report.bind(tangon)(entity);
        entity = entity.t;
        entity = entity.C8d+oK;
        entity = michal.bind(zuuluu)(entity);
        return entity;
    };
    report[offset] = verify;
    offset = option.MANAGE_CHANNELS;
    verify = offset.toString;
    offset = verify.bind(offset)();
    verify = function() {
        report = _closure1_slot0;
        oscard = _closure1_slot2;
        entity = 2;
        michal = oscard[entity];
        tangon = undefined;
        michal = report.bind(tangon)(michal);
        zuuluu = michal.intl;
        michal = zuuluu.string;
        entity = oscard[entity];
        entity = report.bind(tangon)(entity);
        entity = entity.t;
        entity = entity.9qLtWl;
        entity = michal.bind(zuuluu)(entity);
        return entity;
    };
    report[offset] = verify;
    offset = option.KICK_MEMBERS;
    verify = offset.toString;
    offset = verify.bind(offset)();
    verify = function() {
        report = _closure1_slot0;
        oscard = _closure1_slot2;
        entity = 2;
        michal = oscard[entity];
        tangon = undefined;
        michal = report.bind(tangon)(michal);
        zuuluu = michal.intl;
        michal = zuuluu.string;
        entity = oscard[entity];
        entity = report.bind(tangon)(entity);
        entity = entity.t;
        entity = entity.pBNv6u;
        entity = michal.bind(zuuluu)(entity);
        return entity;
    };
    report[offset] = verify;
    offset = option.BAN_MEMBERS;
    verify = offset.toString;
    offset = verify.bind(offset)();
    verify = function() {
        report = _closure1_slot0;
        oscard = _closure1_slot2;
        entity = 2;
        michal = oscard[entity];
        tangon = undefined;
        michal = report.bind(tangon)(michal);
        zuuluu = michal.intl;
        michal = zuuluu.string;
        entity = oscard[entity];
        entity = report.bind(tangon)(entity);
        entity = entity.t;
        entity = entity.oTBA7O;
        entity = michal.bind(zuuluu)(entity);
        return entity;
    };
    report[offset] = verify;
    offset = option.CREATE_INSTANT_INVITE;
    verify = offset.toString;
    offset = verify.bind(offset)();
    verify = function() {
        report = _closure1_slot0;
        oscard = _closure1_slot2;
        entity = 2;
        michal = oscard[entity];
        tangon = undefined;
        michal = report.bind(tangon)(michal);
        zuuluu = michal.intl;
        michal = zuuluu.string;
        entity = oscard[entity];
        entity = report.bind(tangon)(entity);
        entity = entity.t;
        entity = entity.zJrgTE;
        entity = michal.bind(zuuluu)(entity);
        return entity;
    };
    report[offset] = verify;
    offset = option.MANAGE_NICKNAMES;
    verify = offset.toString;
    offset = verify.bind(offset)();
    verify = function() {
        report = _closure1_slot0;
        oscard = _closure1_slot2;
        entity = 2;
        michal = oscard[entity];
        tangon = undefined;
        michal = report.bind(tangon)(michal);
        zuuluu = michal.intl;
        michal = zuuluu.string;
        entity = oscard[entity];
        entity = report.bind(tangon)(entity);
        entity = entity.t;
        entity = entity.t+Ct5+;
        entity = michal.bind(zuuluu)(entity);
        return entity;
    };
    report[offset] = verify;
    offset = option.CHANGE_NICKNAME;
    verify = offset.toString;
    offset = verify.bind(offset)();
    verify = function() {
        report = _closure1_slot0;
        oscard = _closure1_slot2;
        entity = 2;
        michal = oscard[entity];
        tangon = undefined;
        michal = report.bind(tangon)(michal);
        zuuluu = michal.intl;
        michal = zuuluu.string;
        entity = oscard[entity];
        entity = report.bind(tangon)(entity);
        entity = entity.t;
        entity = entity.dilOFx;
        entity = michal.bind(zuuluu)(entity);
        return entity;
    };
    report[offset] = verify;
    offset = option.MANAGE_GUILD_EXPRESSIONS;
    verify = offset.toString;
    offset = verify.bind(offset)();
    verify = function() {
        report = _closure1_slot0;
        oscard = _closure1_slot2;
        entity = 2;
        michal = oscard[entity];
        tangon = undefined;
        michal = report.bind(tangon)(michal);
        zuuluu = michal.intl;
        michal = zuuluu.string;
        entity = oscard[entity];
        entity = report.bind(tangon)(entity);
        entity = entity.t;
        entity = entity.bbuXIi;
        entity = michal.bind(zuuluu)(entity);
        return entity;
    };
    report[offset] = verify;
    offset = option.CREATE_GUILD_EXPRESSIONS;
    verify = offset.toString;
    offset = verify.bind(offset)();
    verify = function() {
        report = _closure1_slot0;
        oscard = _closure1_slot2;
        entity = 2;
        michal = oscard[entity];
        tangon = undefined;
        michal = report.bind(tangon)(michal);
        zuuluu = michal.intl;
        michal = zuuluu.string;
        entity = oscard[entity];
        entity = report.bind(tangon)(entity);
        entity = entity.t;
        entity = entity.HarVuL;
        entity = michal.bind(zuuluu)(entity);
        return entity;
    };
    report[offset] = verify;
    offset = option.MANAGE_WEBHOOKS;
    verify = offset.toString;
    offset = verify.bind(offset)();
    verify = function() {
        report = _closure1_slot0;
        oscard = _closure1_slot2;
        entity = 2;
        michal = oscard[entity];
        tangon = undefined;
        michal = report.bind(tangon)(michal);
        zuuluu = michal.intl;
        michal = zuuluu.string;
        entity = oscard[entity];
        entity = report.bind(tangon)(entity);
        entity = entity.t;
        entity = entity./ADKmJ;
        entity = michal.bind(zuuluu)(entity);
        return entity;
    };
    report[offset] = verify;
    offset = option.VIEW_AUDIT_LOG;
    verify = offset.toString;
    offset = verify.bind(offset)();
    verify = function() {
        report = _closure1_slot0;
        oscard = _closure1_slot2;
        entity = 2;
        michal = oscard[entity];
        tangon = undefined;
        michal = report.bind(tangon)(michal);
        zuuluu = michal.intl;
        michal = zuuluu.string;
        entity = oscard[entity];
        entity = report.bind(tangon)(entity);
        entity = entity.t;
        entity = entity.fZgLpK;
        entity = michal.bind(zuuluu)(entity);
        return entity;
    };
    report[offset] = verify;
    offset = option.VIEW_CHANNEL;
    verify = offset.toString;
    offset = verify.bind(offset)();
    verify = function() {
        report = _closure1_slot0;
        oscard = _closure1_slot2;
        entity = 2;
        michal = oscard[entity];
        tangon = undefined;
        michal = report.bind(tangon)(michal);
        zuuluu = michal.intl;
        michal = zuuluu.string;
        entity = oscard[entity];
        entity = report.bind(tangon)(entity);
        entity = entity.t;
        entity = entity.uV83ys;
        entity = michal.bind(zuuluu)(entity);
        return entity;
    };
    report[offset] = verify;
    offset = option.SEND_MESSAGES;
    verify = offset.toString;
    offset = verify.bind(offset)();
    verify = function() {
        report = _closure1_slot0;
        oscard = _closure1_slot2;
        entity = 2;
        michal = oscard[entity];
        tangon = undefined;
        michal = report.bind(tangon)(michal);
        zuuluu = michal.intl;
        michal = zuuluu.string;
        entity = oscard[entity];
        entity = report.bind(tangon)(entity);
        entity = entity.t;
        entity = entity.T32rkJ;
        entity = michal.bind(zuuluu)(entity);
        return entity;
    };
    report[offset] = verify;
    offset = option.SEND_TTS_MESSAGES;
    verify = offset.toString;
    offset = verify.bind(offset)();
    verify = function() {
        report = _closure1_slot0;
        oscard = _closure1_slot2;
        entity = 2;
        michal = oscard[entity];
        tangon = undefined;
        michal = report.bind(tangon)(michal);
        zuuluu = michal.intl;
        michal = zuuluu.string;
        entity = oscard[entity];
        entity = report.bind(tangon)(entity);
        entity = entity.t;
        entity = entity.Mg7bkp;
        entity = michal.bind(zuuluu)(entity);
        return entity;
    };
    report[offset] = verify;
    offset = option.MANAGE_MESSAGES;
    verify = offset.toString;
    offset = verify.bind(offset)();
    verify = function() {
        report = _closure1_slot0;
        oscard = _closure1_slot2;
        entity = 2;
        michal = oscard[entity];
        tangon = undefined;
        michal = report.bind(tangon)(michal);
        zuuluu = michal.intl;
        michal = zuuluu.string;
        entity = oscard[entity];
        entity = report.bind(tangon)(entity);
        entity = entity.t;
        entity = entity.6lU9xM;
        entity = michal.bind(zuuluu)(entity);
        return entity;
    };
    report[offset] = verify;
    offset = option.EMBED_LINKS;
    verify = offset.toString;
    offset = verify.bind(offset)();
    verify = function() {
        report = _closure1_slot0;
        oscard = _closure1_slot2;
        entity = 2;
        michal = oscard[entity];
        tangon = undefined;
        michal = report.bind(tangon)(michal);
        zuuluu = michal.intl;
        michal = zuuluu.string;
        entity = oscard[entity];
        entity = report.bind(tangon)(entity);
        entity = entity.t;
        entity = entity.969dEB;
        entity = michal.bind(zuuluu)(entity);
        return entity;
    };
    report[offset] = verify;
    offset = option.ATTACH_FILES;
    verify = offset.toString;
    offset = verify.bind(offset)();
    verify = function() {
        report = _closure1_slot0;
        oscard = _closure1_slot2;
        entity = 2;
        michal = oscard[entity];
        tangon = undefined;
        michal = report.bind(tangon)(michal);
        zuuluu = michal.intl;
        michal = zuuluu.string;
        entity = oscard[entity];
        entity = report.bind(tangon)(entity);
        entity = entity.t;
        entity = entity.3AS4UF;
        entity = michal.bind(zuuluu)(entity);
        return entity;
    };
    report[offset] = verify;
    offset = option.READ_MESSAGE_HISTORY;
    verify = offset.toString;
    offset = verify.bind(offset)();
    verify = function() {
        report = _closure1_slot0;
        oscard = _closure1_slot2;
        entity = 2;
        michal = oscard[entity];
        tangon = undefined;
        michal = report.bind(tangon)(michal);
        zuuluu = michal.intl;
        michal = zuuluu.string;
        entity = oscard[entity];
        entity = report.bind(tangon)(entity);
        entity = entity.t;
        entity = entity.l9ufaW;
        entity = michal.bind(zuuluu)(entity);
        return entity;
    };
    report[offset] = verify;
    offset = option.MENTION_EVERYONE;
    verify = offset.toString;
    offset = verify.bind(offset)();
    verify = function() {
        report = _closure1_slot0;
        oscard = _closure1_slot2;
        entity = 2;
        michal = oscard[entity];
        tangon = undefined;
        michal = report.bind(tangon)(michal);
        zuuluu = michal.intl;
        michal = zuuluu.string;
        entity = oscard[entity];
        entity = report.bind(tangon)(entity);
        entity = entity.t;
        entity = entity.Y78KGB;
        entity = michal.bind(zuuluu)(entity);
        return entity;
    };
    report[offset] = verify;
    offset = option.ADD_REACTIONS;
    verify = offset.toString;
    offset = verify.bind(offset)();
    verify = function() {
        report = _closure1_slot0;
        oscard = _closure1_slot2;
        entity = 2;
        michal = oscard[entity];
        tangon = undefined;
        michal = report.bind(tangon)(michal);
        zuuluu = michal.intl;
        michal = zuuluu.string;
        entity = oscard[entity];
        entity = report.bind(tangon)(entity);
        entity = entity.t;
        entity = entity.yEoJAg;
        entity = michal.bind(zuuluu)(entity);
        return entity;
    };
    report[offset] = verify;
    offset = option.USE_EXTERNAL_EMOJIS;
    verify = offset.toString;
    offset = verify.bind(offset)();
    verify = function() {
        report = _closure1_slot0;
        oscard = _closure1_slot2;
        entity = 2;
        michal = oscard[entity];
        tangon = undefined;
        michal = report.bind(tangon)(michal);
        zuuluu = michal.intl;
        michal = zuuluu.string;
        entity = oscard[entity];
        entity = report.bind(tangon)(entity);
        entity = entity.t;
        entity = entity.BpBGZW;
        entity = michal.bind(zuuluu)(entity);
        return entity;
    };
    report[offset] = verify;
    offset = option.USE_EXTERNAL_STICKERS;
    verify = offset.toString;
    offset = verify.bind(offset)();
    verify = function() {
        report = _closure1_slot0;
        oscard = _closure1_slot2;
        entity = 2;
        michal = oscard[entity];
        tangon = undefined;
        michal = report.bind(tangon)(michal);
        zuuluu = michal.intl;
        michal = zuuluu.string;
        entity = oscard[entity];
        entity = report.bind(tangon)(entity);
        entity = entity.t;
        entity = entity.UeRs+f;
        entity = michal.bind(zuuluu)(entity);
        return entity;
    };
    report[offset] = verify;
    offset = option.USE_APPLICATION_COMMANDS;
    verify = offset.toString;
    offset = verify.bind(offset)();
    verify = function() {
        report = _closure1_slot0;
        oscard = _closure1_slot2;
        entity = 2;
        michal = oscard[entity];
        tangon = undefined;
        michal = report.bind(tangon)(michal);
        zuuluu = michal.intl;
        michal = zuuluu.string;
        entity = oscard[entity];
        entity = report.bind(tangon)(entity);
        entity = entity.t;
        entity = entity.shbR1d;
        entity = michal.bind(zuuluu)(entity);
        return entity;
    };
    report[offset] = verify;
    offset = option.SEND_VOICE_MESSAGES;
    verify = offset.toString;
    offset = verify.bind(offset)();
    verify = function() {
        report = _closure1_slot0;
        oscard = _closure1_slot2;
        entity = 2;
        michal = oscard[entity];
        tangon = undefined;
        michal = report.bind(tangon)(michal);
        zuuluu = michal.intl;
        michal = zuuluu.string;
        entity = oscard[entity];
        entity = report.bind(tangon)(entity);
        entity = entity.t;
        entity = entity.+8GStb;
        entity = michal.bind(zuuluu)(entity);
        return entity;
    };
    report[offset] = verify;
    offset = option.CONNECT;
    verify = offset.toString;
    offset = verify.bind(offset)();
    verify = function() {
        report = _closure1_slot0;
        oscard = _closure1_slot2;
        entity = 2;
        michal = oscard[entity];
        tangon = undefined;
        michal = report.bind(tangon)(michal);
        zuuluu = michal.intl;
        michal = zuuluu.string;
        entity = oscard[entity];
        entity = report.bind(tangon)(entity);
        entity = entity.t;
        entity = entity.S0W8Z2;
        entity = michal.bind(zuuluu)(entity);
        return entity;
    };
    report[offset] = verify;
    offset = option.SPEAK;
    verify = offset.toString;
    offset = verify.bind(offset)();
    verify = function() {
        report = _closure1_slot0;
        oscard = _closure1_slot2;
        entity = 2;
        michal = oscard[entity];
        tangon = undefined;
        michal = report.bind(tangon)(michal);
        zuuluu = michal.intl;
        michal = zuuluu.string;
        entity = oscard[entity];
        entity = report.bind(tangon)(entity);
        entity = entity.t;
        entity = entity.8w1tIS;
        entity = michal.bind(zuuluu)(entity);
        return entity;
    };
    report[offset] = verify;
    offset = option.MUTE_MEMBERS;
    verify = offset.toString;
    offset = verify.bind(offset)();
    verify = function() {
        report = _closure1_slot0;
        oscard = _closure1_slot2;
        entity = 2;
        michal = oscard[entity];
        tangon = undefined;
        michal = report.bind(tangon)(michal);
        zuuluu = michal.intl;
        michal = zuuluu.string;
        entity = oscard[entity];
        entity = report.bind(tangon)(entity);
        entity = entity.t;
        entity = entity.8EI309;
        entity = michal.bind(zuuluu)(entity);
        return entity;
    };
    report[offset] = verify;
    offset = option.DEAFEN_MEMBERS;
    verify = offset.toString;
    offset = verify.bind(offset)();
    verify = function() {
        report = _closure1_slot0;
        oscard = _closure1_slot2;
        entity = 2;
        michal = oscard[entity];
        tangon = undefined;
        michal = report.bind(tangon)(michal);
        zuuluu = michal.intl;
        michal = zuuluu.string;
        entity = oscard[entity];
        entity = report.bind(tangon)(entity);
        entity = entity.t;
        entity = entity.9L47Fh;
        entity = michal.bind(zuuluu)(entity);
        return entity;
    };
    report[offset] = verify;
    offset = option.MOVE_MEMBERS;
    verify = offset.toString;
    offset = verify.bind(offset)();
    verify = function() {
        report = _closure1_slot0;
        oscard = _closure1_slot2;
        entity = 2;
        michal = oscard[entity];
        tangon = undefined;
        michal = report.bind(tangon)(michal);
        zuuluu = michal.intl;
        michal = zuuluu.string;
        entity = oscard[entity];
        entity = report.bind(tangon)(entity);
        entity = entity.t;
        entity = entity.YtjJPT;
        entity = michal.bind(zuuluu)(entity);
        return entity;
    };
    report[offset] = verify;
    offset = option.USE_VAD;
    verify = offset.toString;
    offset = verify.bind(offset)();
    verify = function() {
        report = _closure1_slot0;
        oscard = _closure1_slot2;
        entity = 2;
        michal = oscard[entity];
        tangon = undefined;
        michal = report.bind(tangon)(michal);
        zuuluu = michal.intl;
        michal = zuuluu.string;
        entity = oscard[entity];
        entity = report.bind(tangon)(entity);
        entity = entity.t;
        entity = entity.08zAV1;
        entity = michal.bind(zuuluu)(entity);
        return entity;
    };
    report[offset] = verify;
    offset = option.PRIORITY_SPEAKER;
    verify = offset.toString;
    offset = verify.bind(offset)();
    verify = function() {
        report = _closure1_slot0;
        oscard = _closure1_slot2;
        entity = 2;
        michal = oscard[entity];
        tangon = undefined;
        michal = report.bind(tangon)(michal);
        zuuluu = michal.intl;
        michal = zuuluu.string;
        entity = oscard[entity];
        entity = report.bind(tangon)(entity);
        entity = entity.t;
        entity = entity.BVK71t;
        entity = michal.bind(zuuluu)(entity);
        return entity;
    };
    report[offset] = verify;
    offset = option.CREATE_PUBLIC_THREADS;
    verify = offset.toString;
    offset = verify.bind(offset)();
    verify = function() {
        report = _closure1_slot0;
        oscard = _closure1_slot2;
        entity = 2;
        michal = oscard[entity];
        tangon = undefined;
        michal = report.bind(tangon)(michal);
        zuuluu = michal.intl;
        michal = zuuluu.string;
        entity = oscard[entity];
        entity = report.bind(tangon)(entity);
        entity = entity.t;
        entity = entity.25rKnZ;
        entity = michal.bind(zuuluu)(entity);
        return entity;
    };
    report[offset] = verify;
    offset = option.CREATE_PRIVATE_THREADS;
    verify = offset.toString;
    offset = verify.bind(offset)();
    verify = function() {
        report = _closure1_slot0;
        oscard = _closure1_slot2;
        entity = 2;
        michal = oscard[entity];
        tangon = undefined;
        michal = report.bind(tangon)(michal);
        zuuluu = michal.intl;
        michal = zuuluu.string;
        entity = oscard[entity];
        entity = report.bind(tangon)(entity);
        entity = entity.t;
        entity = entity.QwbTSU;
        entity = michal.bind(zuuluu)(entity);
        return entity;
    };
    report[offset] = verify;
    offset = option.SEND_MESSAGES_IN_THREADS;
    verify = offset.toString;
    offset = verify.bind(offset)();
    verify = function() {
        report = _closure1_slot0;
        oscard = _closure1_slot2;
        entity = 2;
        michal = oscard[entity];
        tangon = undefined;
        michal = report.bind(tangon)(michal);
        zuuluu = michal.intl;
        michal = zuuluu.string;
        entity = oscard[entity];
        entity = report.bind(tangon)(entity);
        entity = entity.t;
        entity = entity.fTE74u;
        entity = michal.bind(zuuluu)(entity);
        return entity;
    };
    report[offset] = verify;
    offset = option.MANAGE_THREADS;
    verify = offset.toString;
    offset = verify.bind(offset)();
    verify = function() {
        report = _closure1_slot0;
        oscard = _closure1_slot2;
        entity = 2;
        michal = oscard[entity];
        tangon = undefined;
        michal = report.bind(tangon)(michal);
        zuuluu = michal.intl;
        michal = zuuluu.string;
        entity = oscard[entity];
        entity = report.bind(tangon)(entity);
        entity = entity.t;
        entity = entity.kEqgr6;
        entity = michal.bind(zuuluu)(entity);
        return entity;
    };
    report[offset] = verify;
    offset = option.MANAGE_EVENTS;
    verify = offset.toString;
    offset = verify.bind(offset)();
    verify = function() {
        report = _closure1_slot0;
        oscard = _closure1_slot2;
        entity = 2;
        michal = oscard[entity];
        tangon = undefined;
        michal = report.bind(tangon)(michal);
        zuuluu = michal.intl;
        michal = zuuluu.string;
        entity = oscard[entity];
        entity = report.bind(tangon)(entity);
        entity = entity.t;
        entity = entity.HIgA5e;
        entity = michal.bind(zuuluu)(entity);
        return entity;
    };
    report[offset] = verify;
    offset = option.CREATE_EVENTS;
    verify = offset.toString;
    offset = verify.bind(offset)();
    verify = function() {
        report = _closure1_slot0;
        oscard = _closure1_slot2;
        entity = 2;
        michal = oscard[entity];
        tangon = undefined;
        michal = report.bind(tangon)(michal);
        zuuluu = michal.intl;
        michal = zuuluu.string;
        entity = oscard[entity];
        entity = report.bind(tangon)(entity);
        entity = entity.t;
        entity = entity.qyjZub;
        entity = michal.bind(zuuluu)(entity);
        return entity;
    };
    report[offset] = verify;
    offset = option.MODERATE_MEMBERS;
    verify = offset.toString;
    offset = verify.bind(offset)();
    verify = function() {
        report = _closure1_slot0;
        oscard = _closure1_slot2;
        entity = 2;
        michal = oscard[entity];
        tangon = undefined;
        michal = report.bind(tangon)(michal);
        zuuluu = michal.intl;
        michal = zuuluu.string;
        entity = oscard[entity];
        entity = report.bind(tangon)(entity);
        entity = entity.t;
        entity = entity.7DgVBg;
        entity = michal.bind(zuuluu)(entity);
        return entity;
    };
    report[offset] = verify;
    offset = option.REQUEST_TO_SPEAK;
    verify = offset.toString;
    offset = verify.bind(offset)();
    verify = function() {
        report = _closure1_slot0;
        oscard = _closure1_slot2;
        entity = 2;
        michal = oscard[entity];
        tangon = undefined;
        michal = report.bind(tangon)(michal);
        zuuluu = michal.intl;
        michal = zuuluu.string;
        entity = oscard[entity];
        entity = report.bind(tangon)(entity);
        entity = entity.t;
        entity = entity.5kicT0;
        entity = michal.bind(zuuluu)(entity);
        return entity;
    };
    report[offset] = verify;
    offset = option.VIEW_GUILD_ANALYTICS;
    verify = offset.toString;
    offset = verify.bind(offset)();
    verify = function() {
        report = _closure1_slot0;
        oscard = _closure1_slot2;
        entity = 2;
        michal = oscard[entity];
        tangon = undefined;
        michal = report.bind(tangon)(michal);
        zuuluu = michal.intl;
        michal = zuuluu.string;
        entity = oscard[entity];
        entity = report.bind(tangon)(entity);
        entity = entity.t;
        entity = entity.rQJBEx;
        entity = michal.bind(zuuluu)(entity);
        return entity;
    };
    report[offset] = verify;
    offset = option.VIEW_CREATOR_MONETIZATION_ANALYTICS;
    verify = offset.toString;
    offset = verify.bind(offset)();
    verify = function() {
        report = _closure1_slot0;
        oscard = _closure1_slot2;
        entity = 2;
        michal = oscard[entity];
        tangon = undefined;
        michal = report.bind(tangon)(michal);
        zuuluu = michal.intl;
        michal = zuuluu.string;
        entity = oscard[entity];
        entity = report.bind(tangon)(entity);
        entity = entity.t;
        entity = entity.0lTLTk;
        entity = michal.bind(zuuluu)(entity);
        return entity;
    };
    report[offset] = verify;
    offset = option.STREAM;
    verify = offset.toString;
    offset = verify.bind(offset)();
    verify = function() {
        report = _closure1_slot0;
        oscard = _closure1_slot2;
        entity = 2;
        michal = oscard[entity];
        tangon = undefined;
        michal = report.bind(tangon)(michal);
        zuuluu = michal.intl;
        michal = zuuluu.string;
        entity = oscard[entity];
        entity = report.bind(tangon)(entity);
        entity = entity.t;
        entity = entity.FlNoSU;
        entity = michal.bind(zuuluu)(entity);
        return entity;
    };
    report[offset] = verify;
    offset = option.USE_EMBEDDED_ACTIVITIES;
    verify = offset.toString;
    offset = verify.bind(offset)();
    verify = function() {
        report = _closure1_slot0;
        oscard = _closure1_slot2;
        entity = 2;
        michal = oscard[entity];
        tangon = undefined;
        michal = report.bind(tangon)(michal);
        zuuluu = michal.intl;
        michal = zuuluu.string;
        entity = oscard[entity];
        entity = report.bind(tangon)(entity);
        entity = entity.t;
        entity = entity.rLSGen;
        entity = michal.bind(zuuluu)(entity);
        return entity;
    };
    report[offset] = verify;
    offset = option.USE_SOUNDBOARD;
    verify = offset.toString;
    offset = verify.bind(offset)();
    verify = function() {
        report = _closure1_slot0;
        oscard = _closure1_slot2;
        entity = 2;
        michal = oscard[entity];
        tangon = undefined;
        michal = report.bind(tangon)(michal);
        zuuluu = michal.intl;
        michal = zuuluu.string;
        entity = oscard[entity];
        entity = report.bind(tangon)(entity);
        entity = entity.t;
        entity = entity.Bco7ND;
        entity = michal.bind(zuuluu)(entity);
        return entity;
    };
    report[offset] = verify;
    offset = option.USE_EXTERNAL_SOUNDS;
    verify = offset.toString;
    offset = verify.bind(offset)();
    verify = function() {
        report = _closure1_slot0;
        oscard = _closure1_slot2;
        entity = 2;
        michal = oscard[entity];
        tangon = undefined;
        michal = report.bind(tangon)(michal);
        zuuluu = michal.intl;
        michal = zuuluu.string;
        entity = oscard[entity];
        entity = report.bind(tangon)(entity);
        entity = entity.t;
        entity = entity.pwaVJy;
        entity = michal.bind(zuuluu)(entity);
        return entity;
    };
    report[offset] = verify;
    offset = option.USE_CLYDE_AI;
    verify = offset.toString;
    offset = verify.bind(offset)();
    verify = function() {
        report = _closure1_slot0;
        oscard = _closure1_slot2;
        entity = 2;
        michal = oscard[entity];
        tangon = undefined;
        michal = report.bind(tangon)(michal);
        zuuluu = michal.intl;
        michal = zuuluu.string;
        entity = oscard[entity];
        entity = report.bind(tangon)(entity);
        entity = entity.t;
        entity = entity.8eeEZm;
        entity = michal.bind(zuuluu)(entity);
        return entity;
    };
    report[offset] = verify;
    offset = option.SET_VOICE_CHANNEL_STATUS;
    verify = offset.toString;
    offset = verify.bind(offset)();
    verify = function() {
        report = _closure1_slot0;
        oscard = _closure1_slot2;
        entity = 2;
        michal = oscard[entity];
        tangon = undefined;
        michal = report.bind(tangon)(michal);
        zuuluu = michal.intl;
        michal = zuuluu.string;
        entity = oscard[entity];
        entity = report.bind(tangon)(entity);
        entity = entity.t;
        entity = entity.VBwkUV;
        entity = michal.bind(zuuluu)(entity);
        return entity;
    };
    report[offset] = verify;
    offset = option.SEND_POLLS;
    verify = offset.toString;
    offset = verify.bind(offset)();
    verify = function() {
        report = _closure1_slot0;
        oscard = _closure1_slot2;
        entity = 2;
        michal = oscard[entity];
        tangon = undefined;
        michal = report.bind(tangon)(michal);
        zuuluu = michal.intl;
        michal = zuuluu.string;
        entity = oscard[entity];
        entity = report.bind(tangon)(entity);
        entity = entity.t;
        entity = entity.UMQ7W1;
        entity = michal.bind(zuuluu)(entity);
        return entity;
    };
    report[offset] = verify;
    verify = option.USE_EXTERNAL_APPS;
    option = verify.toString;
    verify = option.bind(verify)();
    option = function() {
        report = _closure1_slot0;
        oscard = _closure1_slot2;
        entity = 2;
        michal = oscard[entity];
        tangon = undefined;
        michal = report.bind(tangon)(michal);
        zuuluu = michal.intl;
        michal = zuuluu.string;
        entity = oscard[entity];
        entity = report.bind(tangon)(entity);
        entity = entity.t;
        entity = entity.TtA5rK;
        entity = michal.bind(zuuluu)(entity);
        return entity;
    };
    report[verify] = option;
    var _closure1_slot5 = report;
    report = 3;
    report = golfie[report];
    golfie = oscard.bind(entity)(report);
    oscard = golfie.fileFinishedImporting;
    report = 'modules/oauth2/permissions.tsx';
    report = oscard.bind(golfie)(report);
    zuuluu['OrderedPermissions'] = tangon;
    tangon = function(argFoo) { // Original name: containsDisallowedPermission
        michal = argFoo;
        var _closure2_slot0 = michal;
        michal = global;
        tangon = michal.Object;
        zuuluu = tangon.values;
        michal = _closure1_slot3;
        zuuluu = zuuluu.bind(tangon)(michal);
        michal = zuuluu.some;
        entity = function(argFoo) {
            _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
                tangon = argFoo;
                report = _closure1_slot1;
                zuuluu = _closure1_slot2;
                entity = 1;
                zuuluu = zuuluu[entity];
                entity = undefined;
                report = report.bind(entity)(zuuluu);
                zuuluu = report.has;
                entity = _closure2_slot0;
                entity = zuuluu.bind(report)(entity, tangon);
                if(!entity) { _fun00002_ip = 66; continue _fun00001 }
 49:
                zuuluu = _closure1_slot4;
                michal = zuuluu.includes;
                michal = michal.bind(zuuluu)(tangon);
                entity = !michal;
 66:
                return entity;
            }
        };
        entity = michal.bind(zuuluu)(entity);
        return entity;
    };
    zuuluu['containsDisallowedPermission'] = tangon;
    michal = function(argFoo) { // Original name: getPermissionName
        _fun00003: for(var _fun00004_ip = 0; ; ) switch(_fun00004_ip) {
 0:
            tangon = argFoo;
            entity = tangon.toString;
            michal = entity.bind(tangon)();
            entity = _closure1_slot5;
            michal = entity[michal];
            entity = null;
            if(!(entity != michal)) { _fun00004_ip = 37; continue _fun00003 }
 29:
            entity = undefined;
            entity = michal.bind(entity)();
            return entity;
 37:
            entity = global;
            zuuluu = entity.Error;
            entity = entity.HermesInternal;
            michal = entity.concat;
            entity = 'Unknown permission. Did you provide a _single_ bit flag? Perm: ';
            report = michal.bind(entity)(tangon);
            michal = zuuluu.prototype;
            michal = Object.create(michal, {constructor: {value: zuuluu}});
            oscard = michal;
            entity = new oscard[zuuluu](report, tangon);
            entity = entity instanceof Object ? entity : michal;
            throw entity;
        }
    };
    zuuluu['getPermissionName'] = michal;
    return entity;
})();