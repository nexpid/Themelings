// app/modules/oauth2/native/Header.tsx
export default (function(argFoo, argBar, argBaz, argCorge, _, argFred, argPlugh) {
    report = argBar;
    yankee = argBaz;
    zulu = argFred;
    oscar = argPlugh;
    var _closure1_slot0 = report;
    var _closure1_slot1 = yankee;
    var _closure1_slot2 = oscar;
    entity = global;
    options = entity.Object;
    golf = options.defineProperty;
    tango = {};
    entity = true;
    tango['value'] = entity;
    entity = '__esModule';
    entity = golf.bind(options)(zulu, entity, tango);
    entity = 0;
    golf = oscar[entity];
    tango = argCorge;
    entity = undefined;
    tango = tango.bind(entity)(golf);
    tango = 1;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.View;
    var _closure1_slot3 = tango;
    tango = 2;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.UserFlags;
    var _closure1_slot4 = tango;
    tango = 3;
    golf = oscar[tango];
    golf = report.bind(entity)(golf);
    golf = golf.jsx;
    var _closure1_slot5 = golf;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.jsxs;
    var _closure1_slot6 = tango;
    tango = 4;
    tango = oscar[tango];
    options = report.bind(entity)(tango);
    golf = options.createStyles;
    tango = {};
    verify = {'paddingBottom': 16, 'marginHorizontal': 16, 'borderTopLeftRadius': null, 'borderTopRightRadius': null, 'flexDirection': 'column', 'justifyContent': 'center', 'alignItems': 'center'};
    offset = 5;
    romeo = oscar[offset];
    romeo = yankee.bind(entity)(romeo);
    romeo = romeo.radii;
    romeo = romeo.sm;
    verify['borderTopLeftRadius'] = romeo;
    romeo = oscar[offset];
    romeo = yankee.bind(entity)(romeo);
    romeo = romeo.radii;
    romeo = romeo.sm;
    verify['borderTopRightRadius'] = romeo;
    tango['header'] = verify;
    verify = {};
    romeo = 'row';
    verify['flexDirection'] = romeo;
    tango['applicationNameWrapper'] = verify;
    verify = {};
    romeo = 8;
    verify['marginLeft'] = romeo;
    tango['logoutLink'] = verify;
    verify = {'alignItems': 'center', 'flexDirection': 'row', 'justifyContent': 'space-between', 'marginBottom': 24};
    tango['headerIcons'] = verify;
    verify = {'flexDirection': 'row', 'justifyContent': 'space-between', 'marginHorizontal': 24};
    tango['ellipseGroup'] = verify;
    verify = {'width': 4, 'height': 4, 'marginHorizontal': 2, 'backgroundColor': null, 'opacity': 0.1, 'borderRadius': 2};
    offset = oscar[offset];
    offset = yankee.bind(entity)(offset);
    offset = offset.colors;
    offset = offset.HEADER_PRIMARY;
    verify['backgroundColor'] = offset;
    tango['ellipse'] = verify;
    verify = {'marginTop': 4, 'marginLeft': 8};
    tango['botTag'] = verify;
    tango = golf.bind(options)(tango);
    var _closure1_slot7 = tango;
    tango = 12;
    tango = oscar[tango];
    oscar = report.bind(entity)(tango);
    report = oscar.fileFinishedImporting;
    tango = 'modules/oauth2/native/Header.tsx';
    tango = report.bind(oscar)(tango);
    mike = function(argFoo) { // Original name: Header
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            entity = argFoo;
            zulu = entity.user;
            foxtrot = entity.application;
            verify = entity.accountScopes;
            sizing = entity.bot;
            entity = _closure1_slot7;
            tango = undefined;
            kilo = entity.bind(tango)();
            mike = _closure1_slot1;
            entity = _closure1_slot2;
            report = 6;
            entity = entity[report];
            oscar = mike.bind(tango)(entity);
            mike = oscar.getApplicationIconSource;
            entity = {};
            golf = foxtrot.id;
            entity['id'] = golf;
            golf = foxtrot.icon;
            entity['icon'] = golf;
            options = mike.bind(oscar)(entity);
            output = null;
            entity = output != zulu;
            echo = undefined;
            if(!entity) { _fun00002_ip = 128; continue _fun00001 }
 100:
            mike = _closure1_slot1;
            entity = _closure1_slot2;
            entity = entity[report];
            mike = mike.bind(tango)(entity);
            entity = mike.getUserAvatarSource;
            echo = entity.bind(mike)(zulu);
 128:
            zulu = _closure1_slot6;
            mike = _closure1_slot3;
            entity = {};
            report = kilo.header;
            entity['style'] = report;
            report = {};
            oscar = kilo.headerIcons;
            report['style'] = oscar;
            romeo = _closure1_slot5;
            backup = _closure1_slot1;
            golf = _closure1_slot2;
            result = 7;
            oscar = golf[result];
            yankee = backup.bind(tango)(oscar);
            oscar = {};
            oscar['source'] = options;
            options = _closure1_slot0;
            update = golf[result];
            update = options.bind(tango)(update);
            update = update.AvatarSizes;
            update = update.XLARGE;
            oscar['size'] = update;
            yankee = romeo.bind(tango)(yankee, oscar);
            oscar = new Array(3);
            oscar[0] = yankee;
            yankee = {};
            update = kilo.ellipseGroup;
            yankee['style'] = update;
            update = {};
            source = kilo.ellipse;
            update['style'] = source;
            source = romeo.bind(tango)(mike, update);
            update = new Array(3);
            update[0] = source;
            source = {};
            control = kilo.ellipse;
            source['style'] = control;
            source = romeo.bind(tango)(mike, source);
            update[1] = source;
            source = {};
            control = kilo.ellipse;
            source['style'] = control;
            source = romeo.bind(tango)(mike, source);
            update[2] = source;
            yankee['children'] = update;
            yankee = zulu.bind(tango)(mike, yankee);
            oscar[1] = yankee;
            yankee = golf[result];
            backup = backup.bind(tango)(yankee);
            yankee = {};
            yankee['source'] = echo;
            result = golf[result];
            result = options.bind(tango)(result);
            result = result.AvatarSizes;
            result = result.XLARGE;
            yankee['size'] = result;
            yankee = romeo.bind(tango)(backup, yankee);
            oscar[2] = yankee;
            report['children'] = oscar;
            oscar = zulu.bind(tango)(mike, report);
            report = new Array(3);
            report[0] = oscar;
            oscar = {};
            yankee = kilo.applicationNameWrapper;
            oscar['style'] = yankee;
            yankee = 8;
            golf = golf[yankee];
            golf = options.bind(tango)(golf);
            options = golf.Text;
            golf = {'variant': 'text-lg/bold', 'color': 'header-primary'};
            foxtrot = foxtrot.name;
            golf['children'] = foxtrot;
            options = romeo.bind(tango)(options, golf);
            golf = new Array(2);
            golf[0] = options;
            romeo = output != sizing;
            options = null;
            if(!romeo) { _fun00002_ip = 579; continue _fun00001 }
 471:
            backup = _closure1_slot5;
            foxtrot = _closure1_slot1;
            result = _closure1_slot2;
            romeo = 9;
            romeo = result[romeo];
            foxtrot = foxtrot.bind(tango)(romeo);
            romeo = {};
            kilo = kilo.botTag;
            romeo['style'] = kilo;
            kilo = sizing.public_flags;
            kilo = output != kilo;
            if(!kilo) { _fun00002_ip = 568; continue _fun00001 }
 520:
            result = _closure1_slot0;
            echo = _closure1_slot2;
            output = 10;
            output = echo[output];
            echo = result.bind(tango)(output);
            result = echo.hasFlag;
            output = sizing.public_flags;
            sizing = _closure1_slot4;
            sizing = sizing.VERIFIED_BOT;
            kilo = result.bind(echo)(output, sizing);
 568:
            romeo['verified'] = kilo;
            options = backup.bind(tango)(foxtrot, romeo);
 579:
            golf[1] = options;
            oscar['children'] = golf;
            oscar = zulu.bind(tango)(mike, oscar);
            report[1] = oscar;
            options = _closure1_slot5;
            golf = _closure1_slot0;
            oscar = _closure1_slot2;
            oscar = oscar[yankee];
            oscar = golf.bind(tango)(oscar);
            golf = oscar.Text;
            oscar = {'variant': 'heading-md/normal', 'color': 'header-secondary'};
            yankee = verify.length;
            verify = 0;
            if(!(!(yankee > verify))) { _fun00002_ip = 705; continue _fun00001 }
 648:
            foxtrot = _closure1_slot0;
            backup = _closure1_slot2;
            verify = 11;
            yankee = backup[verify];
            yankee = foxtrot.bind(tango)(yankee);
            romeo = yankee.intl;
            yankee = romeo.string;
            verify = backup[verify];
            verify = foxtrot.bind(tango)(verify);
            verify = verify.t;
            verify = verify.X+Fdpq;
            verify = yankee.bind(romeo)(verify);
            _fun00002_ip = 760; continue _fun00001;
 705:
            foxtrot = _closure1_slot0;
            backup = _closure1_slot2;
            offset = 11;
            yankee = backup[offset];
            yankee = foxtrot.bind(tango)(yankee);
            romeo = yankee.intl;
            yankee = romeo.string;
            offset = backup[offset];
            offset = foxtrot.bind(tango)(offset);
            offset = offset.t;
            offset = offset.jFbDnJ;
            verify = yankee.bind(romeo)(offset);
 760:
            oscar['children'] = verify;
            oscar = options.bind(tango)(golf, oscar);
            report[2] = oscar;
            entity['children'] = report;
            entity = zulu.bind(tango)(mike, entity);
            return entity;
        }
    };
    zulu['default'] = mike;
    return entity;
})();