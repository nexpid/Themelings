// app/modules/oauth2/native/ErrorResult.tsx
export default (function(argFoo, argBar, argBaz, argCorge, _, argFred, argPlugh) {
    report = argBar;
    yankee = argBaz;
    zulu = argFred;
    oscar = argPlugh;
    var _closure1_slot0 = report;
    var _closure1_slot1 = yankee;
    var _closure1_slot2 = oscar;
    entity = global;
    options = entity.Object;
    golf = options.defineProperty;
    tango = {};
    entity = true;
    tango['value'] = entity;
    entity = '__esModule';
    entity = golf.bind(options)(zulu, entity, tango);
    entity = 0;
    golf = oscar[entity];
    tango = argCorge;
    entity = undefined;
    tango = tango.bind(entity)(golf);
    tango = 1;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    golf = tango.Image;
    var _closure1_slot3 = golf;
    tango = tango.View;
    var _closure1_slot4 = tango;
    tango = 2;
    golf = oscar[tango];
    golf = report.bind(entity)(golf);
    golf = golf.jsx;
    var _closure1_slot5 = golf;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.jsxs;
    var _closure1_slot6 = tango;
    tango = 3;
    tango = oscar[tango];
    options = report.bind(entity)(tango);
    golf = options.createStyles;
    tango = {};
    verify = {'flex': 1, 'backgroundColor': null, 'gap': 16, 'paddingHorizontal': 16, 'justifyContent': 'center', 'flexDirection': 'column'};
    offset = 4;
    romeo = oscar[offset];
    romeo = yankee.bind(entity)(romeo);
    romeo = romeo.colors;
    romeo = romeo.BACKGROUND_MOBILE_PRIMARY;
    verify['backgroundColor'] = romeo;
    tango['container'] = verify;
    verify = {'flex': 1, 'flexDirection': 'column', 'alignItems': 'center', 'justifyContent': 'center'};
    tango['inner'] = verify;
    verify = {'marginTop': 24, 'textAlign': 'center'};
    tango['text'] = verify;
    verify = {};
    offset = oscar[offset];
    offset = yankee.bind(entity)(offset);
    offset = offset.colors;
    offset = offset.INFO_WARNING_TEXT;
    verify['tintColor'] = offset;
    tango['image'] = verify;
    tango = golf.bind(options)(tango);
    var _closure1_slot7 = tango;
    tango = 11;
    tango = oscar[tango];
    oscar = report.bind(entity)(tango);
    report = oscar.fileFinishedImporting;
    tango = 'modules/oauth2/native/ErrorResult.tsx';
    tango = report.bind(oscar)(tango);
    mike = function(argFoo) { // Original name: ErrorResult
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            entity = argFoo;
            backup = entity.error;
            options = entity.hideFooter;
            entity = _closure1_slot7;
            tango = undefined;
            oscar = entity.bind(tango)();
            zulu = _closure1_slot6;
            romeo = _closure1_slot0;
            kilo = _closure1_slot2;
            entity = 5;
            entity = kilo[entity];
            entity = romeo.bind(tango)(entity);
            mike = entity.SafeAreaPaddingView;
            entity = {};
            report = true;
            entity['bottom'] = report;
            report = oscar.container;
            entity['style'] = report;
            verify = _closure1_slot4;
            report = {};
            offset = oscar.inner;
            report['style'] = offset;
            foxtrot = _closure1_slot5;
            yankee = _closure1_slot3;
            offset = {};
            output = _closure1_slot1;
            sizing = 6;
            sizing = kilo[sizing];
            sizing = output.bind(tango)(sizing);
            offset['source'] = sizing;
            sizing = oscar.image;
            offset['style'] = sizing;
            yankee = foxtrot.bind(tango)(yankee, offset);
            offset = new Array(2);
            offset[0] = yankee;
            yankee = 7;
            yankee = kilo[yankee];
            yankee = romeo.bind(tango)(yankee);
            romeo = yankee.Text;
            yankee = {};
            oscar = oscar.text;
            yankee['style'] = oscar;
            oscar = 'text-md/medium';
            yankee['variant'] = oscar;
            oscar = null;
            if(!(oscar == backup)) { _fun00002_ip = 241; continue _fun00001 }
 186:
            result = _closure1_slot0;
            echo = _closure1_slot2;
            kilo = 8;
            sizing = echo[kilo];
            sizing = result.bind(tango)(sizing);
            output = sizing.intl;
            sizing = output.string;
            kilo = echo[kilo];
            kilo = result.bind(tango)(kilo);
            kilo = kilo.t;
            kilo = kilo.mqn87+;
            backup = sizing.bind(output)(kilo);
 241:
            yankee['children'] = backup;
            yankee = foxtrot.bind(tango)(romeo, yankee);
            offset[1] = yankee;
            report['children'] = offset;
            verify = zulu.bind(tango)(verify, report);
            report = new Array(2);
            report[0] = verify;
            oscar = null;
            if(options) { _fun00002_ip = 388; continue _fun00001 }
 278:
            verify = _closure1_slot5;
            foxtrot = _closure1_slot0;
            backup = _closure1_slot2;
            golf = 9;
            golf = backup[golf];
            golf = foxtrot.bind(tango)(golf);
            options = golf.Button;
            golf = {};
            offset = 'lg';
            golf['size'] = offset;
            offset = 8;
            yankee = backup[offset];
            yankee = foxtrot.bind(tango)(yankee);
            romeo = yankee.intl;
            yankee = romeo.string;
            offset = backup[offset];
            offset = foxtrot.bind(tango)(offset);
            offset = offset.t;
            offset = offset.cpT0Cg;
            offset = yankee.bind(romeo)(offset);
            golf['text'] = offset;
            offset = function() { // Original name: onPress
                zulu = _closure1_slot1;
                mike = _closure1_slot2;
                entity = 10;
                mike = mike[entity];
                entity = undefined;
                mike = zulu.bind(entity)(mike);
                entity = mike.pop;
                entity = entity.bind(mike)();
                return entity;
            };
            golf['onPress'] = offset;
            oscar = verify.bind(tango)(options, golf);
 388:
            report[1] = oscar;
            entity['children'] = report;
            entity = zulu.bind(tango)(mike, entity);
            return entity;
        }
    };
    zulu['default'] = mike;
    return entity;
})();