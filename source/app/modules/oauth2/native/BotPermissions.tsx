// app/modules/oauth2/native/BotPermissions.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    report = argBar;
    romeon = argBaz;
    golfie = argCor;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    var _closure1_slot1 = golfie;
    var _closure1_slot2 = oscard;
    entity = global;
    verify = entity.Object;
    option = verify.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = option.bind(verify)(zuuluu, entity, tangon);
    offset = 0;
    tangon = oscard[offset];
    entity = undefined;
    tangon = romeon.bind(entity)(tangon);
    var _closure1_slot3 = tangon;
    tangon = 1;
    tangon = oscard[tangon];
    tangon = golfie.bind(entity)(tangon);
    var _closure1_slot4 = tangon;
    tangon = 2;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.View;
    var _closure1_slot5 = tangon;
    tangon = 3;
    golfie = oscard[tangon];
    golfie = report.bind(entity)(golfie);
    golfie = golfie.jsx;
    var _closure1_slot6 = golfie;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.jsxs;
    var _closure1_slot7 = tangon;
    tangon = 4;
    tangon = oscard[tangon];
    option = report.bind(entity)(tangon);
    golfie = option.createStyles;
    tangon = {};
    verify = {'flexDirection': 'column', 'gap': 16};
    tangon['botPermissionsContainer'] = verify;
    verify = {'flexDirection': 'column', 'gap': 8};
    tangon['botPermissions'] = verify;
    verify = {'fontSize': 14, 'lineHeight': 18, 'color': null, 'fontWeight': '500'};
    yankee = 5;
    foxtra = oscard[yankee];
    foxtra = romeon.bind(entity)(foxtra);
    foxtra = foxtra.colors;
    foxtra = foxtra.HEADER_SECONDARY;
    verify['color'] = foxtra;
    foxtra = '500';
    tangon['permissionsLabel'] = verify;
    verify = {};
    backup = oscard[yankee];
    backup = romeon.bind(entity)(backup);
    backup = backup.colors;
    backup = backup.HEADER_SECONDARY;
    verify['color'] = backup;
    verify['fontWeight'] = foxtra;
    tangon['disabledPermissionsLabel'] = verify;
    verify = {'width': 18, 'height': 18};
    yankee = oscard[yankee];
    yankee = romeon.bind(entity)(yankee);
    yankee = yankee.colors;
    yankee = yankee.WHITE;
    verify['color'] = yankee;
    tangon['icon'] = verify;
    verify = {'borderBottomWidth': 0, 'borderTopWidth': 0};
    tangon['sectionBodyStyle'] = verify;
    verify = {};
    verify['marginTop'] = offset;
    tangon['wrapperStyle'] = verify;
    verify = {};
    verify['paddingHorizontal'] = offset;
    tangon['formSwitchRow'] = verify;
    tangon = golfie.bind(option)(tangon);
    var _closure1_slot8 = tangon;
    tangon = 12;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/oauth2/native/BotPermissions.tsx';
    tangon = report.bind(oscard)(tangon);
    michal = function(argFoo) { // Original name: BotPermissions
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            zuuluu = argFoo;
            ctrled = zuuluu.application;
            michal = zuuluu.permissions;
            var _closure2_slot0 = michal;
            tangon = zuuluu.deniedPermissions;
            var _closure2_slot1 = tangon;
            verify = zuuluu.onPermissionsChange;
            var _closure2_slot2 = verify;
            vacuum = zuuluu.guild;
            var _closure2_slot3 = vacuum;
            zuuluu = _closure1_slot8;
            tangon = undefined;
            kiloes = zuuluu.bind(tangon)();
            var _closure2_slot4 = kiloes;
            oscard = _closure1_slot4;
            report = oscard.useState;
            golfie = _closure1_slot1;
            option = _closure1_slot2;
            zuuluu = 6;
            zuuluu = option[zuuluu];
            zuuluu = golfie.bind(tangon)(zuuluu);
            zuuluu = zuuluu.NONE;
            golfie = report.bind(oscard)(zuuluu);
            report = _closure1_slot3;
            zuuluu = 2;
            report = report.bind(tangon)(golfie, zuuluu);
            golfie = 0;
            zuuluu = report[golfie];
            var _closure2_slot5 = zuuluu;
            zuuluu = 1;
            zuuluu = report[zuuluu];
            var _closure2_slot6 = zuuluu;
            report = oscard.useEffect;
            offset = vacuum.permissions;
            zuuluu = new Array(3);
            zuuluu[0] = offset;
            zuuluu[1] = verify;
            zuuluu[2] = michal;
            michal = function() {
                tangon = _closure2_slot2;
                report = _closure2_slot0;
                entity = undefined;
                zuuluu = true;
                zuuluu = tangon.bind(entity)(zuuluu, report);
                option = _closure2_slot6;
                report = _closure1_slot1;
                oscard = _closure1_slot2;
                zuuluu = 7;
                golfie = oscard[zuuluu];
                offset = report.bind(entity)(golfie);
                verify = offset.invert;
                michal = _closure2_slot3;
                golfie = michal.permissions;
                golfie = verify.bind(offset)(golfie);
                golfie = option.bind(entity)(golfie);
                zuuluu = oscard[zuuluu];
                report = report.bind(entity)(zuuluu);
                zuuluu = report.invert;
                michal = michal.permissions;
                zuuluu = zuuluu.bind(report)(michal);
                michal = false;
                michal = tangon.bind(entity)(michal, zuuluu);
                return entity;
            };
            michal = report.bind(oscard)(michal, zuuluu);
            verify = _closure1_slot0;
            michal = 8;
            michal = option[michal];
            michal = verify.bind(tangon)(michal);
            report = michal.OrderedPermissions;
            zuuluu = report.filter;
            michal = function(argFoo) {
                zuuluu = _closure1_slot1;
                michal = _closure1_slot2;
                entity = 7;
                michal = michal[entity];
                entity = undefined;
                tangon = zuuluu.bind(entity)(michal);
                zuuluu = tangon.has;
                michal = _closure2_slot0;
                entity = argFoo;
                entity = zuuluu.bind(tangon)(michal, entity);
                return entity;
            };
            report = zuuluu.bind(report)(michal);
            zuuluu = report.filter;
            michal = function(argFoo) {
                zuuluu = _closure1_slot1;
                michal = _closure1_slot2;
                entity = 7;
                michal = michal[entity];
                entity = undefined;
                tangon = zuuluu.bind(entity)(michal);
                zuuluu = tangon.has;
                michal = _closure2_slot5;
                entity = argFoo;
                entity = zuuluu.bind(tangon)(michal, entity);
                entity = !entity;
                return entity;
            };
            oscard = zuuluu.bind(report)(michal);
            zuuluu = oscard.map;
            michal = function(argFoo) {
                oscard = argFoo;
                var _closure3_slot0 = oscard;
                zuuluu = _closure1_slot0;
                offset = _closure1_slot2;
                entity = 8;
                entity = offset[entity];
                report = undefined;
                tangon = zuuluu.bind(report)(entity);
                entity = tangon.getPermissionName;
                verify = entity.bind(tangon)(oscard);
                tangon = _closure1_slot1;
                entity = 7;
                entity = offset[entity];
                yankee = tangon.bind(report)(entity);
                option = yankee.has;
                tangon = _closure2_slot1;
                tangon = option.bind(yankee)(tangon, oscard);
                option = !tangon;
                tangon = _closure1_slot6;
                michal = 9;
                michal = offset[michal];
                michal = zuuluu.bind(report)(michal);
                zuuluu = michal.FormSwitchRow;
                michal = {};
                michal['label'] = verify;
                michal['value'] = option;
                golfie = function(argFoo) { // Original name: onValueChange
                    tangon = _closure2_slot2;
                    zuuluu = _closure3_slot0;
                    michal = undefined;
                    entity = argFoo;
                    entity = tangon.bind(michal)(entity, zuuluu);
                    return entity;
                };
                michal['onValueChange'] = golfie;
                entity = _closure2_slot4;
                entity = entity.formSwitchRow;
                michal['style'] = entity;
                entity = global;
                entity = entity.String;
                entity = entity.bind(report)(oscard);
                entity = tangon.bind(report)(zuuluu, michal, entity);
                return entity;
            };
            foxtra = zuuluu.bind(oscard)(michal);
            zuuluu = report.filter;
            michal = function(argFoo) {
                zuuluu = _closure1_slot1;
                michal = _closure1_slot2;
                entity = 7;
                michal = michal[entity];
                entity = undefined;
                tangon = zuuluu.bind(entity)(michal);
                zuuluu = tangon.has;
                michal = _closure2_slot5;
                entity = argFoo;
                entity = zuuluu.bind(tangon)(michal, entity);
                return entity;
            };
            zuuluu = zuuluu.bind(report)(michal);
            michal = zuuluu.map;
            entity = function(argFoo) {
                oscard = argFoo;
                zuuluu = _closure1_slot0;
                golfie = _closure1_slot2;
                entity = 8;
                entity = golfie[entity];
                report = undefined;
                tangon = zuuluu.bind(report)(entity);
                entity = tangon.getPermissionName;
                entity = entity.bind(tangon)(oscard);
                tangon = _closure1_slot6;
                michal = 9;
                michal = golfie[michal];
                michal = zuuluu.bind(report)(michal);
                zuuluu = michal.FormSwitchRow;
                michal = {'label': null, 'value': false, 'disabled': true};
                michal['label'] = entity;
                entity = global;
                entity = entity.String;
                entity = entity.bind(report)(oscard);
                entity = tangon.bind(report)(zuuluu, michal, entity);
                return entity;
            };
            backup = michal.bind(zuuluu)(entity);
            zuuluu = _closure1_slot7;
            michal = _closure1_slot5;
            entity = {};
            report = kiloes.botPermissionsContainer;
            entity['style'] = report;
            report = {};
            oscard = kiloes.botPermissions;
            report['style'] = oscard;
            romeon = _closure1_slot6;
            offset = 10;
            oscard = option[offset];
            oscard = verify.bind(tangon)(oscard);
            sizing = oscard.LegacyText;
            oscard = {};
            output = kiloes.permissionsLabel;
            oscard['style'] = output;
            result = 11;
            output = option[result];
            output = verify.bind(tangon)(output);
            source = output.intl;
            update = source.format;
            output = option[result];
            output = verify.bind(tangon)(output);
            output = output.t;
            echoed = output.sOaT2t;
            output = {};
            sequen = ctrled.name;
            output['applicationName'] = sequen;
            vacuum = vacuum.name;
            output['guildName'] = vacuum;
            output = update.bind(source)(echoed, output);
            oscard['children'] = output;
            sizing = romeon.bind(tangon)(sizing, oscard);
            oscard = new Array(2);
            oscard[0] = sizing;
            sizing = 9;
            option = option[sizing];
            option = verify.bind(tangon)(option);
            verify = option.FormSection;
            option = {};
            output = kiloes.sectionBodyStyle;
            option['sectionBodyStyle'] = output;
            output = kiloes.wrapperStyle;
            option['wrapperStyle'] = output;
            option['children'] = foxtra;
            option = romeon.bind(tangon)(verify, option);
            oscard[1] = option;
            report['children'] = oscard;
            oscard = zuuluu.bind(tangon)(michal, report);
            report = new Array(2);
            report[0] = oscard;
            oscard = backup.length;
            golfie = oscard > golfie;
            oscard = null;
            if(!golfie) { _fun00002_ip = 721; continue _fun00001 }
 522:
            verify = _closure1_slot7;
            option = _closure1_slot5;
            golfie = {};
            romeon = kiloes.botPermissions;
            golfie['style'] = romeon;
            foxtra = _closure1_slot6;
            romeon = _closure1_slot0;
            yankee = _closure1_slot2;
            offset = yankee[offset];
            offset = romeon.bind(tangon)(offset);
            output = offset.LegacyText;
            offset = {};
            echoed = kiloes.disabledPermissionsLabel;
            offset['style'] = echoed;
            echoed = yankee[result];
            echoed = romeon.bind(tangon)(echoed);
            source = echoed.intl;
            update = source.format;
            result = yankee[result];
            result = romeon.bind(tangon)(result);
            result = result.t;
            echoed = result.fsOkFx;
            result = {};
            ctrled = ctrled.name;
            result['applicationName'] = ctrled;
            result = update.bind(source)(echoed, result);
            offset['children'] = result;
            output = foxtra.bind(tangon)(output, offset);
            offset = new Array(2);
            offset[0] = output;
            yankee = yankee[sizing];
            yankee = romeon.bind(tangon)(yankee);
            romeon = yankee.FormSection;
            yankee = {};
            sizing = kiloes.sectionBodyStyle;
            yankee['sectionBodyStyle'] = sizing;
            kiloes = kiloes.wrapperStyle;
            yankee['wrapperStyle'] = kiloes;
            yankee['children'] = backup;
            yankee = foxtra.bind(tangon)(romeon, yankee);
            offset[1] = yankee;
            golfie['children'] = offset;
            oscard = verify.bind(tangon)(option, golfie);
 721:
            report[1] = oscard;
            entity['children'] = report;
            entity = zuuluu.bind(tangon)(michal, entity);
            return entity;
        }
    };
    zuuluu['default'] = michal;
    return entity;
})();