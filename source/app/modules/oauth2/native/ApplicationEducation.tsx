// app/modules/oauth2/native/ApplicationEducation.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    report = argBar;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    var _closure1_slot1 = oscard;
    entity = function(argFoo) { // Original name: ApplicationEducationEntry
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            entity = argFoo;
            option = entity.iconComponent;
            verify = entity.text;
            entity = _closure1_slot7;
            tangon = undefined;
            offset = entity.bind(tangon)();
            zuuluu = _closure1_slot5;
            michal = _closure1_slot2;
            entity = {};
            report = offset.entry;
            entity['style'] = report;
            golfie = null;
            report = golfie != option;
            if(!report) { _fun00002_ip = 73; continue _fun00001 }
 56:
            report = {};
            yankee = offset.entryIcon;
            report['style'] = yankee;
            golfie = option.bind(tangon)(report);
 73:
            report = new Array(2);
            report[0] = golfie;
            option = _closure1_slot4;
            golfie = _closure1_slot0;
            yankee = _closure1_slot1;
            oscard = 12;
            oscard = yankee[oscard];
            oscard = golfie.bind(tangon)(oscard);
            golfie = oscard.Text;
            oscard = {};
            yankee = 'text-md/normal';
            oscard['variant'] = yankee;
            offset = offset.entryText;
            oscard['style'] = offset;
            oscard['children'] = verify;
            oscard = option.bind(tangon)(golfie, oscard);
            report[1] = oscard;
            entity['children'] = report;
            entity = zuuluu.bind(tangon)(michal, entity);
            return entity;
        }
    };
    var _closure1_slot8 = entity;
    entity = global;
    option = entity.Object;
    golfie = option.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(option)(zuuluu, entity, tangon);
    entity = 0;
    golfie = oscard[entity];
    tangon = argCor;
    entity = undefined;
    tangon = tangon.bind(entity)(golfie);
    offset = 1;
    tangon = oscard[offset];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.View;
    var _closure1_slot2 = tangon;
    tangon = 2;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.MAX_FRIENDS;
    var _closure1_slot3 = tangon;
    tangon = 3;
    golfie = oscard[tangon];
    golfie = report.bind(entity)(golfie);
    golfie = golfie.jsx;
    var _closure1_slot4 = golfie;
    golfie = oscard[tangon];
    golfie = report.bind(entity)(golfie);
    golfie = golfie.jsxs;
    var _closure1_slot5 = golfie;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.Fragment;
    var _closure1_slot6 = tangon;
    tangon = 4;
    tangon = oscard[tangon];
    option = report.bind(entity)(tangon);
    golfie = option.createStyles;
    tangon = {};
    verify = {'flexDirection': 'column', 'gap': 16};
    tangon['applicationEducation'] = verify;
    verify = {'flexDirection': 'row', 'alignItems': 'center', 'gap': 12};
    tangon['entry'] = verify;
    verify = {};
    verify['flex'] = offset;
    tangon['entryText'] = verify;
    verify = {'width': 20, 'height': 20};
    offset = 5;
    yankee = oscard[offset];
    offset = argBaz;
    offset = offset.bind(entity)(yankee);
    offset = offset.colors;
    offset = offset.TEXT_MUTED;
    verify['tintColor'] = offset;
    tangon['entryIcon'] = verify;
    tangon = golfie.bind(option)(tangon);
    var _closure1_slot7 = tangon;
    tangon = 14;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/oauth2/native/ApplicationEducation.tsx';
    tangon = report.bind(oscard)(tangon);
    michal = function(argFoo) { // Original name: ApplicationEducation
        _fun00003: for(var _fun00004_ip = 0; ; ) switch(_fun00004_ip) {
 0:
            entity = argFoo;
            tangon = entity.accountScopes;
            entity = _closure1_slot7;
            report = undefined;
            verify = entity.bind(report)();
            romeon = new Array(0);
            michal = tangon.includes;
            zuuluu = _closure1_slot0;
            entity = _closure1_slot1;
            option = 6;
            entity = entity[option];
            entity = zuuluu.bind(report)(entity);
            entity = entity.OAuth2Scopes;
            entity = entity.SDK_SOCIAL_LAYER;
            entity = michal.bind(tangon)(entity);
            if(entity) { _fun00004_ip = 110; continue _fun00003 }
 71:
            zuuluu = tangon.includes;
            oscard = _closure1_slot0;
            michal = _closure1_slot1;
            michal = michal[option];
            michal = oscard.bind(report)(michal);
            michal = michal.OAuth2Scopes;
            michal = michal.SDK_SOCIAL_LAYER;
            entity = zuuluu.bind(tangon)(michal);
 110:
            backup = undefined;
            if(!entity) { _fun00004_ip = 513; continue _fun00003 }
 118:
            kiloes = _closure1_slot0;
            sizing = _closure1_slot1;
            offset = 7;
            entity = sizing[offset];
            entity = kiloes.bind(report)(entity);
            zuuluu = entity.intl;
            michal = zuuluu.string;
            entity = sizing[offset];
            entity = kiloes.bind(report)(entity);
            entity = entity.t;
            entity = entity.ex4sMT;
            backup = michal.bind(zuuluu)(entity);
            option = romeon.push;
            oscard = {};
            michal = 8;
            michal = sizing[michal];
            michal = kiloes.bind(report)(michal);
            michal = michal.FriendsIcon;
            oscard['iconComponent'] = michal;
            michal = sizing[offset];
            michal = kiloes.bind(report)(michal);
            yankee = michal.intl;
            tangon = yankee.formatToPlainString;
            michal = sizing[offset];
            michal = kiloes.bind(report)(michal);
            michal = michal.t;
            zuuluu = michal.WNKzo6;
            michal = {};
            foxtra = _closure1_slot3;
            michal['maxFriends'] = foxtra;
            michal = tangon.bind(yankee)(zuuluu, michal);
            oscard['text'] = michal;
            tangon = {};
            michal = 9;
            michal = sizing[michal];
            michal = kiloes.bind(report)(michal);
            michal = michal.ChatSmileIcon;
            tangon['iconComponent'] = michal;
            michal = sizing[offset];
            michal = kiloes.bind(report)(michal);
            yankee = michal.intl;
            zuuluu = yankee.string;
            michal = sizing[offset];
            michal = kiloes.bind(report)(michal);
            michal = michal.t;
            michal = michal.j7peBg;
            michal = zuuluu.bind(yankee)(michal);
            tangon['text'] = michal;
            zuuluu = {};
            michal = 10;
            michal = sizing[michal];
            michal = kiloes.bind(report)(michal);
            michal = michal.GameControllerIcon;
            zuuluu['iconComponent'] = michal;
            michal = sizing[offset];
            michal = kiloes.bind(report)(michal);
            foxtra = michal.intl;
            yankee = foxtra.string;
            michal = sizing[offset];
            michal = kiloes.bind(report)(michal);
            michal = michal.t;
            michal = michal.feD3+v;
            michal = yankee.bind(foxtra)(michal);
            zuuluu['text'] = michal;
            michal = {};
            yankee = 11;
            yankee = sizing[yankee];
            yankee = kiloes.bind(report)(yankee);
            yankee = yankee.SettingsIcon;
            michal['iconComponent'] = yankee;
            yankee = sizing[offset];
            yankee = kiloes.bind(report)(yankee);
            foxtra = yankee.intl;
            yankee = foxtra.string;
            offset = sizing[offset];
            offset = kiloes.bind(report)(offset);
            offset = offset.t;
            offset = offset.YFFVMz;
            offset = yankee.bind(foxtra)(offset);
            michal['text'] = offset;
            source = romeon;
            update = oscard;
            echoed = tangon;
            result = zuuluu;
            output = michal;
            michal = source[option](update, echoed, result, output, sizing);
 513:
            michal = romeon.length;
            yankee = null;
            foxtra = 0;
            entity = null;
            if(!(foxtra !== michal)) { _fun00004_ip = 728; continue _fun00003 }
 531:
            tangon = _closure1_slot5;
            zuuluu = _closure1_slot6;
            michal = {};
            option = _closure1_slot2;
            oscard = {};
            verify = verify.applicationEducation;
            oscard['style'] = verify;
            verify = yankee != backup;
            offset = null;
            if(!verify) { _fun00004_ip = 629; continue _fun00003 }
 566:
            verify = backup.length;
            verify = verify > foxtra;
            offset = null;
            if(!verify) { _fun00004_ip = 629; continue _fun00003 }
 580:
            foxtra = _closure1_slot4;
            yankee = _closure1_slot0;
            kiloes = _closure1_slot1;
            verify = 12;
            verify = kiloes[verify];
            verify = yankee.bind(report)(verify);
            yankee = verify.Text;
            verify = {'variant': 'text-sm/normal', 'color': 'header-secondary'};
            verify['children'] = backup;
            offset = foxtra.bind(report)(yankee, verify);
 629:
            verify = new Array(2);
            verify[0] = offset;
            yankee = romeon.map;
            offset = function(argFoo, argBar) {
                entity = argFoo;
                michal = entity.iconComponent;
                entity = entity.text;
                report = _closure1_slot4;
                tangon = _closure1_slot8;
                zuuluu = {};
                zuuluu['iconComponent'] = michal;
                zuuluu['text'] = entity;
                michal = undefined;
                entity = argBar;
                entity = report.bind(michal)(tangon, zuuluu, entity);
                return entity;
            };
            offset = yankee.bind(romeon)(offset);
            verify[1] = offset;
            oscard['children'] = verify;
            option = tangon.bind(report)(option, oscard);
            oscard = new Array(2);
            oscard[0] = option;
            verify = _closure1_slot4;
            option = _closure1_slot0;
            offset = _closure1_slot1;
            golfie = 13;
            golfie = offset[golfie];
            golfie = option.bind(report)(golfie);
            option = golfie.AuthorizeFormSeparator;
            golfie = {};
            golfie = verify.bind(report)(option, golfie);
            oscard[1] = golfie;
            michal['children'] = oscard;
            entity = tangon.bind(report)(zuuluu, michal);
 728:
            return entity;
        }
    };
    zuuluu['default'] = michal;
    return entity;
})();