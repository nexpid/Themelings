// app/modules/oauth2/native/IntegrationTypeSelector.tsx
export default (function(argFoo, argBar, argBaz, argCorge, _, argFred, argPlugh) {
    oscar = argBar;
    romeo = argBaz;
    zulu = argFred;
    golf = argPlugh;
    var _closure1_slot0 = oscar;
    var _closure1_slot1 = romeo;
    var _closure1_slot2 = golf;
    entity = global;
    options = entity.Object;
    report = options.defineProperty;
    mike = {};
    entity = true;
    mike['value'] = entity;
    entity = '__esModule';
    entity = report.bind(options)(zulu, entity, mike);
    entity = 0;
    report = golf[entity];
    mike = argCorge;
    entity = undefined;
    mike = mike.bind(entity)(report);
    var _closure1_slot3 = mike;
    mike = 1;
    mike = golf[mike];
    mike = oscar.bind(entity)(mike);
    report = mike.View;
    var _closure1_slot4 = report;
    backup = mike.StyleSheet;
    mike = 2;
    report = golf[mike];
    report = oscar.bind(entity)(report);
    report = report.jsx;
    var _closure1_slot5 = report;
    mike = golf[mike];
    mike = oscar.bind(entity)(mike);
    mike = mike.jsxs;
    var _closure1_slot6 = mike;
    mike = 3;
    mike = golf[mike];
    verify = oscar.bind(entity)(mike);
    options = verify.createStyles;
    mike = {};
    report = {'alignItems': 'center', 'flexDirection': 'column'};
    mike['container'] = report;
    report = 16;
    foxtrot = '100%';
    offset = {'justifyContent': 'center', 'alignItems': 'center', 'gap': 16, 'marginTop': 24, 'marginBottom': 32, 'width': '100%'};
    mike['header'] = offset;
    offset = {};
    yankee = 'stretch';
    offset['alignSelf'] = yankee;
    yankee = 4;
    kilo = golf[yankee];
    kilo = romeo.bind(entity)(kilo);
    kilo = kilo.radii;
    kilo = kilo.sm;
    offset['borderRadius'] = kilo;
    mike['rows'] = offset;
    offset = {};
    kilo = backup.hairlineWidth;
    offset['height'] = kilo;
    kilo = golf[yankee];
    kilo = romeo.bind(entity)(kilo);
    kilo = kilo.colors;
    kilo = kilo.BACKGROUND_MODIFIER_ACCENT;
    offset['backgroundColor'] = kilo;
    kilo = backup.hairlineWidth;
    backup = -1;
    backup = backup * kilo;
    offset['marginTop'] = backup;
    mike['divider'] = offset;
    offset = {};
    offset['marginVertical'] = report;
    mike['learnMore'] = offset;
    offset = {};
    backup = golf[yankee];
    backup = romeo.bind(entity)(backup);
    backup = backup.colors;
    backup = backup.CARD_PRIMARY_BG;
    offset['backgroundColor'] = backup;
    offset['width'] = foxtrot;
    foxtrot = golf[yankee];
    foxtrot = romeo.bind(entity)(foxtrot);
    foxtrot = foxtrot.radii;
    foxtrot = foxtrot.sm;
    offset['borderRadius'] = foxtrot;
    mike['descriptionContainer'] = offset;
    offset = {};
    foxtrot = 8;
    offset['padding'] = foxtrot;
    mike['descriptionMainContainer'] = offset;
    offset = {'backgroundColor': null, 'bottom': 8, 'right': 8};
    foxtrot = golf[yankee];
    foxtrot = romeo.bind(entity)(foxtrot);
    foxtrot = foxtrot.colors;
    foxtrot = foxtrot.CARD_PRIMARY_BG;
    offset['backgroundColor'] = foxtrot;
    mike['expandDescriptionCTA'] = offset;
    offset = {'height': 82, 'width': 82};
    foxtrot = golf[yankee];
    foxtrot = romeo.bind(entity)(foxtrot);
    foxtrot = foxtrot.radii;
    foxtrot = foxtrot.xl;
    offset['borderRadius'] = foxtrot;
    mike['appIcon'] = offset;
    offset = {};
    offset['padding'] = yankee;
    foxtrot = golf[yankee];
    foxtrot = romeo.bind(entity)(foxtrot);
    foxtrot = foxtrot.radii;
    foxtrot = foxtrot.xl;
    foxtrot = foxtrot + yankee;
    offset['borderRadius'] = foxtrot;
    mike['appIconMask'] = offset;
    offset = {};
    yankee = golf[yankee];
    yankee = romeo.bind(entity)(yankee);
    yankee = yankee.colors;
    yankee = yankee.BACKGROUND_ACCENT;
    offset['backgroundColor'] = yankee;
    mike['loadingIcon'] = offset;
    mike = options.bind(verify)(mike);
    var _closure1_slot7 = mike;
    report = golf[report];
    golf = oscar.bind(entity)(report);
    oscar = golf.fileFinishedImporting;
    report = 'modules/oauth2/native/IntegrationTypeSelector.tsx';
    report = oscar.bind(golf)(report);
    tango = function(argFoo) { // Original name: IntegrationTypeSelector
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            entity = argFoo;
            kilo = entity.application;
            var _closure2_slot0 = kilo;
            entity = entity.onSelect;
            var _closure2_slot1 = entity;
            entity = _closure1_slot7;
            tango = undefined;
            offset = entity.bind(tango)();
            oscar = _closure1_slot3;
            zulu = oscar.useMemo;
            entity = kilo.icon;
            mike = new Array(2);
            mike[0] = entity;
            entity = kilo.id;
            mike[1] = entity;
            entity = function() {
                zulu = _closure1_slot1;
                mike = _closure1_slot2;
                entity = 5;
                mike = mike[entity];
                entity = undefined;
                zulu = zulu.bind(entity)(mike);
                mike = zulu.getApplicationIconSource;
                entity = {};
                tango = _closure2_slot0;
                report = tango.id;
                entity['id'] = report;
                tango = tango.icon;
                entity['icon'] = tango;
                entity = mike.bind(zulu)(entity);
                return entity;
            };
            report = zulu.bind(oscar)(entity, mike);
            zulu = oscar.useMemo;
            entity = kilo.integrationTypesConfig;
            mike = new Array(1);
            mike[0] = entity;
            entity = function() {
                entity = {};
                options = _closure1_slot0;
                verify = _closure1_slot2;
                report = 6;
                mike = verify[report];
                golf = undefined;
                mike = options.bind(golf)(mike);
                mike = mike.ApplicationIntegrationType;
                mike = mike.USER_INSTALL;
                entity['type'] = mike;
                mike = 7;
                mike = verify[mike];
                mike = options.bind(golf)(mike);
                mike = mike.UserPlusIcon;
                entity['icon'] = mike;
                tango = 8;
                mike = verify[tango];
                mike = options.bind(golf)(mike);
                oscar = mike.intl;
                zulu = oscar.string;
                mike = verify[tango];
                mike = options.bind(golf)(mike);
                mike = mike.t;
                mike = mike.aCg60N;
                mike = zulu.bind(oscar)(mike);
                entity['label'] = mike;
                mike = verify[tango];
                mike = options.bind(golf)(mike);
                oscar = mike.intl;
                zulu = oscar.string;
                mike = verify[tango];
                mike = options.bind(golf)(mike);
                mike = mike.t;
                mike = mike.YeiIUV;
                mike = zulu.bind(oscar)(mike);
                entity['subLabel'] = mike;
                mike = false;
                entity['beta'] = mike;
                zulu = new Array(2);
                zulu[0] = entity;
                entity = {};
                report = verify[report];
                report = options.bind(golf)(report);
                report = report.ApplicationIntegrationType;
                report = report.GUILD_INSTALL;
                entity['type'] = report;
                report = 9;
                report = verify[report];
                report = options.bind(golf)(report);
                report = report.ServerIcon;
                entity['icon'] = report;
                report = verify[tango];
                report = options.bind(golf)(report);
                offset = report.intl;
                oscar = offset.string;
                report = verify[tango];
                report = options.bind(golf)(report);
                report = report.t;
                report = report.E64YCw;
                report = oscar.bind(offset)(report);
                entity['label'] = report;
                report = verify[tango];
                report = options.bind(golf)(report);
                oscar = report.intl;
                report = oscar.string;
                tango = verify[tango];
                tango = options.bind(golf)(tango);
                tango = tango.t;
                tango = tango.bbtoKi;
                tango = report.bind(oscar)(tango);
                entity['subLabel'] = tango;
                entity['beta'] = mike;
                zulu[1] = entity;
                mike = zulu.filter;
                entity = function(argFoo) {
                    _fun00003: for(var _fun00004_ip = 0; ; ) switch(_fun00004_ip) {
 0:
                        entity = _closure2_slot0;
                        tango = entity.integrationTypesConfig;
                        mike = null;
                        zulu = mike == tango;
                        entity = undefined;
                        if(zulu) { _fun00004_ip = 51; continue _fun00003 }
 24:
                        zulu = argFoo;
                        zulu = zulu.type;
                        zulu = tango[zulu];
                        tango = mike == zulu;
                        entity = undefined;
                        if(tango) { _fun00004_ip = 51; continue _fun00003 }
 45:
                        entity = zulu.oauth2InstallParams;
 51:
                        entity = mike != entity;
                        return entity;
                    }
                };
                entity = mike.bind(zulu)(entity);
                return entity;
            };
            foxtrot = zulu.bind(oscar)(entity, mike);
            var _closure2_slot2 = foxtrot;
            options = null;
            if(!(options == report)) { _fun00002_ip = 165; continue _fun00001 }
 119:
            zulu = _closure1_slot5;
            mike = _closure1_slot4;
            entity = {};
            golf = offset.appIcon;
            oscar = new Array(2);
            oscar[0] = golf;
            golf = offset.loadingIcon;
            oscar[1] = golf;
            entity['style'] = oscar;
            golf = zulu.bind(tango)(mike, entity);
            _fun00002_ip = 211; continue _fun00001;
 165:
            zulu = _closure1_slot5;
            mike = _closure1_slot1;
            oscar = _closure1_slot2;
            entity = 10;
            entity = oscar[entity];
            mike = mike.bind(tango)(entity);
            entity = {};
            oscar = offset.appIcon;
            entity['style'] = oscar;
            entity['source'] = report;
            golf = zulu.bind(tango)(mike, entity);
 211:
            zulu = _closure1_slot6;
            mike = _closure1_slot4;
            entity = {};
            report = offset.container;
            entity['style'] = report;
            report = {};
            oscar = offset.header;
            report['style'] = oscar;
            backup = _closure1_slot5;
            oscar = {};
            romeo = offset.appIconMask;
            oscar['style'] = romeo;
            oscar['children'] = golf;
            golf = backup.bind(tango)(mike, oscar);
            oscar = new Array(3);
            oscar[0] = golf;
            romeo = _closure1_slot0;
            sizing = _closure1_slot2;
            golf = 11;
            golf = sizing[golf];
            golf = romeo.bind(tango)(golf);
            romeo = golf.Text;
            golf = {'variant': 'heading-lg/bold', 'color': 'header-primary'};
            sizing = kilo.name;
            golf['children'] = sizing;
            golf = backup.bind(tango)(romeo, golf);
            oscar[1] = golf;
            golf = kilo.description;
            golf = options != golf;
            if(!golf) { _fun00002_ip = 417; continue _fun00001 }
 341:
            backup = _closure1_slot5;
            romeo = _closure1_slot1;
            sizing = _closure1_slot2;
            options = 12;
            options = sizing[options];
            romeo = romeo.bind(tango)(options);
            options = {};
            sizing = true;
            options['hideName'] = sizing;
            options['application'] = kilo;
            kilo = offset.descriptionContainer;
            options['viewContainerStyle'] = kilo;
            kilo = offset.descriptionMainContainer;
            options['mainContainerStyle'] = kilo;
            kilo = offset.expandDescriptionCTA;
            options['expandDescriptionCTAStyle'] = kilo;
            golf = backup.bind(tango)(romeo, options);
 417:
            oscar[2] = golf;
            report['children'] = oscar;
            oscar = zulu.bind(tango)(mike, report);
            report = new Array(2);
            report[0] = oscar;
            options = _closure1_slot5;
            golf = _closure1_slot4;
            oscar = {};
            offset = offset.rows;
            oscar['style'] = offset;
            offset = _closure1_slot0;
            romeo = _closure1_slot2;
            verify = 13;
            verify = romeo[verify];
            verify = offset.bind(tango)(verify);
            offset = verify.TableRowGroup;
            verify = {};
            romeo = foxtrot.map;
            yankee = function(argFoo, argBar) {
                _fun00005: for(var _fun00006_ip = 0; ; ) switch(_fun00006_ip) {
 0:
                    entity = argFoo;
                    options = argBar;
                    var _closure3_slot0 = entity;
                    report = _closure1_slot5;
                    zulu = _closure1_slot0;
                    tango = _closure1_slot2;
                    mike = 14;
                    mike = tango[mike];
                    tango = undefined;
                    mike = zulu.bind(tango)(mike);
                    zulu = mike.TableRow;
                    mike = {};
                    offset = entity.icon;
                    verify = {};
                    yankee = 'interactive-normal';
                    verify['color'] = yankee;
                    verify = report.bind(tango)(offset, verify);
                    mike['icon'] = verify;
                    verify = entity.label;
                    mike['label'] = verify;
                    verify = entity.subLabel;
                    mike['subLabel'] = verify;
                    oscar = function() { // Original name: onPress
                        zulu = _closure2_slot1;
                        entity = _closure3_slot0;
                        mike = entity.type;
                        entity = undefined;
                        entity = zulu.bind(entity)(mike);
                        return entity;
                    };
                    mike['onPress'] = oscar;
                    oscar = 0;
                    oscar = oscar === options;
                    mike['start'] = oscar;
                    oscar = _closure2_slot2;
                    verify = oscar.length;
                    oscar = 1;
                    oscar = verify - oscar;
                    oscar = options === oscar;
                    mike['end'] = oscar;
                    oscar = true;
                    mike['arrow'] = oscar;
                    options = entity.beta;
                    oscar = undefined;
                    if(!options) { _fun00006_ip = 192; continue _fun00005 }
 160:
                    verify = _closure1_slot5;
                    options = _closure1_slot1;
                    offset = _closure1_slot2;
                    golf = 15;
                    golf = offset[golf];
                    options = options.bind(tango)(golf);
                    golf = {};
                    oscar = verify.bind(tango)(options, golf);
 192:
                    mike['trailing'] = oscar;
                    entity = entity.type;
                    entity = report.bind(tango)(zulu, mike, entity);
                    return entity;
                }
            };
            yankee = romeo.bind(foxtrot)(yankee);
            verify['children'] = yankee;
            verify = options.bind(tango)(offset, verify);
            oscar['children'] = verify;
            oscar = options.bind(tango)(golf, oscar);
            report[1] = oscar;
            entity['children'] = report;
            entity = zulu.bind(tango)(mike, entity);
            return entity;
        }
    };
    zulu['default'] = tango;
    zulu['useStyles'] = mike;
    return entity;
})();