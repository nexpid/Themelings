// app/modules/oauth2/native/GuildSelector.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    oscard = argBar;
    yankee = argBaz;
    report = argCor;
    zuuluu = argFre;
    golfie = argPlu;
    var _closure1_slot0 = oscard;
    var _closure1_slot1 = yankee;
    var _closure1_slot2 = report;
    var _closure1_slot3 = golfie;
    entity = global;
    verify = entity.Object;
    option = verify.defineProperty;
    michal = {};
    entity = true;
    michal['value'] = entity;
    entity = '__esModule';
    entity = option.bind(verify)(zuuluu, entity, michal);
    entity = 0;
    michal = golfie[entity];
    entity = undefined;
    michal = report.bind(entity)(michal);
    var _closure1_slot4 = michal;
    michal = 1;
    michal = golfie[michal];
    michal = oscard.bind(entity)(michal);
    michal = michal.View;
    var _closure1_slot5 = michal;
    michal = 2;
    michal = golfie[michal];
    michal = oscard.bind(entity)(michal);
    michal = michal.Permissions;
    var _closure1_slot6 = michal;
    michal = 3;
    michal = golfie[michal];
    michal = oscard.bind(entity)(michal);
    report = michal.jsx;
    var _closure1_slot7 = report;
    michal = michal.jsxs;
    var _closure1_slot8 = michal;
    michal = 4;
    michal = golfie[michal];
    option = oscard.bind(entity)(michal);
    report = option.createStyles;
    michal = {};
    verify = {'display': 'flex', 'flexDirection': 'column', 'gap': 8};
    michal['selectorGroup'] = verify;
    verify = {};
    offset = 5;
    romeon = golfie[offset];
    romeon = yankee.bind(entity)(romeon);
    romeon = romeon.colors;
    romeon = romeon.BACKGROUND_MOBILE_PRIMARY;
    verify['backgroundColor'] = romeon;
    romeon = golfie[offset];
    romeon = yankee.bind(entity)(romeon);
    romeon = romeon.radii;
    romeon = romeon.xs;
    verify['borderRadius'] = romeon;
    michal['select'] = verify;
    verify = {};
    romeon = golfie[offset];
    romeon = yankee.bind(entity)(romeon);
    romeon = romeon.colors;
    romeon = romeon.HEADER_SECONDARY;
    verify['color'] = romeon;
    romeon = '500';
    verify['fontWeight'] = romeon;
    michal['label'] = verify;
    verify = {};
    offset = golfie[offset];
    offset = yankee.bind(entity)(offset);
    offset = offset.unsafe_rawColors;
    offset = offset.RED_400;
    verify['color'] = offset;
    michal['error'] = verify;
    michal = report.bind(option)(michal);
    var _closure1_slot9 = michal;
    report = 14;
    report = golfie[report];
    golfie = oscard.bind(entity)(report);
    oscard = golfie.fileFinishedImporting;
    report = 'modules/oauth2/native/GuildSelector.tsx';
    report = oscard.bind(golfie)(report);
    tangon = function(argFoo) { // Original name: GuildSelector
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            tangon = argFoo;
            kiloes = tangon.error;
            michal = tangon.selectedGuildId;
            var _closure2_slot0 = michal;
            offset = tangon.onGuildChange;
            var _closure2_slot1 = offset;
            zuuluu = tangon.guilds;
            var _closure2_slot2 = zuuluu;
            option = tangon.disabled;
            report = _closure1_slot9;
            tangon = undefined;
            yankee = report.bind(tangon)();
            golfie = _closure1_slot4;
            oscard = golfie.useCallback;
            report = new Array(3);
            report[0] = zuuluu;
            report[1] = offset;
            report[2] = michal;
            michal = function() {
                _fun00003: for(var _fun00004_ip = 0; ; ) switch(_fun00004_ip) {
 0:
                    report = _closure1_slot1;
                    yankee = _closure1_slot3;
                    entity = 6;
                    tangon = yankee[entity];
                    entity = undefined;
                    oscard = report.bind(entity)(tangon);
                    report = oscard.openLazy;
                    offset = _closure1_slot0;
                    zuuluu = 8;
                    zuuluu = yankee[zuuluu];
                    golfie = offset.bind(entity)(zuuluu);
                    zuuluu = 7;
                    tangon = yankee[zuuluu];
                    zuuluu = yankee.paths;
                    tangon = golfie.bind(entity)(tangon, zuuluu);
                    zuuluu = {};
                    golfie = 9;
                    option = yankee[golfie];
                    option = offset.bind(entity)(option);
                    verify = option.intl;
                    option = verify.string;
                    golfie = yankee[golfie];
                    golfie = offset.bind(entity)(golfie);
                    golfie = golfie.t;
                    golfie = golfie.oM4E1N;
                    golfie = option.bind(verify)(golfie);
                    zuuluu['title'] = golfie;
                    offset = _closure2_slot2;
                    verify = offset.filter;
                    option = function(argFoo) {
                        tangon = _closure1_slot2;
                        zuuluu = _closure1_slot3;
                        michal = 10;
                        zuuluu = zuuluu[michal];
                        michal = undefined;
                        tangon = tangon.bind(michal)(zuuluu);
                        zuuluu = tangon.has;
                        michal = argFoo;
                        michal = michal.permissions;
                        entity = _closure1_slot6;
                        entity = entity.MANAGE_GUILD;
                        entity = zuuluu.bind(tangon)(michal, entity);
                        return entity;
                    };
                    offset = verify.bind(offset)(option);
                    verify = offset.map;
                    option = function(argFoo) {
                        michal = argFoo;
                        entity = {};
                        zuuluu = michal.name;
                        entity['label'] = zuuluu;
                        michal = michal.id;
                        entity['value'] = michal;
                        return entity;
                    };
                    option = verify.bind(offset)(option);
                    zuuluu['items'] = option;
                    michal = function(argFoo) { // Original name: onItemSelect
                        zuuluu = _closure2_slot1;
                        entity = undefined;
                        michal = argFoo;
                        michal = zuuluu.bind(entity)(michal);
                        zuuluu = _closure1_slot1;
                        tangon = _closure1_slot3;
                        michal = 6;
                        michal = tangon[michal];
                        tangon = zuuluu.bind(entity)(michal);
                        zuuluu = tangon.hideActionSheet;
                        michal = 'GuildSelector';
                        michal = zuuluu.bind(tangon)(michal);
                        return entity;
                    };
                    zuuluu['onItemSelect'] = michal;
                    option = _closure2_slot0;
                    michal = null;
                    option = michal != option;
                    michal = undefined;
                    if(!option) { _fun00004_ip = 191; continue _fun00003 }
 187:
                    michal = _closure2_slot0;
 191:
                    zuuluu['selectedItem'] = michal;
                    michal = 'GuildSelector';
                    michal = report.bind(oscard)(tangon, michal, zuuluu);
                    return entity;
                }
            };
            backup = oscard.bind(golfie)(michal, report);
            michal = zuuluu.find;
            entity = function(argFoo) {
                entity = argFoo;
                michal = entity.id;
                entity = _closure2_slot0;
                entity = michal === entity;
                return entity;
            };
            output = michal.bind(zuuluu)(entity);
            zuuluu = _closure1_slot8;
            michal = _closure1_slot5;
            entity = {};
            report = yankee.selectorGroup;
            entity['style'] = report;
            golfie = _closure1_slot7;
            result = _closure1_slot0;
            offset = _closure1_slot3;
            report = 11;
            report = offset[report];
            report = result.bind(tangon)(report);
            oscard = report.Text;
            report = {'variant': 'eyebrow', 'color': 'header-secondary'};
            foxtra = 9;
            romeon = offset[foxtra];
            romeon = result.bind(tangon)(romeon);
            sizing = romeon.intl;
            romeon = sizing.string;
            offset = offset[foxtra];
            offset = result.bind(tangon)(offset);
            offset = offset.t;
            offset = offset.1DXFFR;
            offset = romeon.bind(sizing)(offset);
            report['children'] = offset;
            oscard = golfie.bind(tangon)(oscard, report);
            report = new Array(4);
            report[0] = oscard;
            sizing = null;
            golfie = sizing != kiloes;
            oscard = null;
            if(!golfie) { _fun00002_ip = 311; continue _fun00001 }
 250:
            golfie = '';
            oscard = null;
            if(!(golfie !== kiloes)) { _fun00002_ip = 311; continue _fun00001 }
 260:
            romeon = _closure1_slot7;
            offset = _closure1_slot0;
            result = _closure1_slot3;
            golfie = 12;
            golfie = result[golfie];
            golfie = offset.bind(tangon)(golfie);
            offset = golfie.LegacyText;
            golfie = {};
            result = yankee.error;
            golfie['style'] = result;
            golfie['children'] = kiloes;
            oscard = romeon.bind(tangon)(offset, golfie);
 311:
            report[1] = oscard;
            romeon = _closure1_slot7;
            golfie = _closure1_slot0;
            oscard = _closure1_slot3;
            kiloes = 13;
            oscard = oscard[kiloes];
            oscard = golfie.bind(tangon)(oscard);
            golfie = oscard.FormRow;
            oscard = {};
            result = sizing == output;
            offset = undefined;
            if(result) { _fun00002_ip = 361; continue _fun00001 }
 356:
            offset = output.name;
 361:
            if(!(sizing == offset)) { _fun00002_ip = 417; continue _fun00001 }
 365:
            echoed = _closure1_slot0;
            sizing = _closure1_slot3;
            output = sizing[foxtra];
            output = echoed.bind(tangon)(output);
            result = output.intl;
            output = result.string;
            sizing = sizing[foxtra];
            sizing = echoed.bind(tangon)(sizing);
            sizing = sizing.t;
            sizing = sizing.oM4E1N;
            offset = output.bind(result)(sizing);
 417:
            oscard['label'] = offset;
            oscard['disabled'] = option;
            option = _closure1_slot7;
            offset = _closure1_slot0;
            verify = _closure1_slot3;
            kiloes = verify[kiloes];
            kiloes = offset.bind(tangon)(kiloes);
            kiloes = kiloes.FormRow;
            sizing = kiloes.Arrow;
            kiloes = {};
            kiloes = option.bind(tangon)(sizing, kiloes);
            oscard['trailing'] = kiloes;
            kiloes = yankee.select;
            oscard['DEPRECATED_style'] = kiloes;
            oscard['onPress'] = backup;
            oscard = romeon.bind(tangon)(golfie, oscard);
            report[2] = oscard;
            oscard = 12;
            oscard = verify[oscard];
            oscard = offset.bind(tangon)(oscard);
            golfie = oscard.LegacyText;
            oscard = {};
            yankee = yankee.label;
            oscard['style'] = yankee;
            yankee = verify[foxtra];
            yankee = offset.bind(tangon)(yankee);
            romeon = yankee.intl;
            yankee = romeon.format;
            verify = verify[foxtra];
            verify = offset.bind(tangon)(verify);
            verify = verify.t;
            offset = verify.t9Jm9v;
            verify = {};
            verify = yankee.bind(romeon)(offset, verify);
            oscard['children'] = verify;
            oscard = option.bind(tangon)(golfie, oscard);
            report[3] = oscard;
            entity['children'] = report;
            entity = zuuluu.bind(tangon)(michal, entity);
            return entity;
        }
    };
    zuuluu['default'] = tangon;
    zuuluu['useStyles'] = michal;
    return entity;
})();