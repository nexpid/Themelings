// app/modules/channel_permissions/native/ChannelPermissionsUtils.tsx
export default (function(native1, native2, native3, native4, native5, native6, native7) {
    var5 = native2;
    var3 = native6;
    var6 = native7;
    var _closure1_slot0 = var5;
    var1 = native3;
    var _closure1_slot1 = var1;
    var _closure1_slot2 = var6;
    var1 = global;
    var8 = var1.Object;
    var7 = var8.defineProperty;
    var4 = {};
    var1 = true;
    var4['value'] = var1;
    var1 = '__esModule';
    var1 = var7.bind(var8)(var3, var1, var4);
    var1 = 0;
    var4 = var6[var1];
    var1 = undefined;
    var4 = var5.bind(var1)(var4);
    var4 = var4.AnalyticEvents;
    var _closure1_slot3 = var4;
    var4 = 6;
    var4 = var6[var4];
    var6 = var5.bind(var1)(var4);
    var5 = var6.fileFinishedImporting;
    var4 = 'modules/channel_permissions/native/ChannelPermissionsUtils.tsx';
    var4 = var5.bind(var6)(var4);
    var4 = function openAddMembersActionSheet(arg1) {
        _fun0001: for(var _fun0001_ip = 0; ; ) switch(_fun0001_ip) {
 0:
            var8 = arg1;
            var7 = arguments[1];
            var1 = undefined;
            if(!(var7 === var1)) { _fun0001_ip = 14; continue _fun0001 }
 12:
            var7 = false;
 14:
            var5 = _closure1_slot1;
            var2 = _closure1_slot2;
            var4 = 1;
            var4 = var2[var4];
            var10 = var5.bind(var1)(var4);
            var9 = var10.track;
            var4 = _closure1_slot3;
            var6 = var4.OPEN_POPOUT;
            var4 = {};
            var11 = 'Grant Channel Access';
            var4['type'] = var11;
            var4 = var9.bind(var10)(var6, var4);
            var4 = 2;
            var4 = var2[var4];
            var6 = var5.bind(var1)(var4);
            var5 = var6.openLazy;
            var4 = _closure1_slot0;
            var3 = 4;
            var3 = var2[var3];
            var4 = var4.bind(var1)(var3);
            var3 = 3;
            var3 = var2[var3];
            var2 = var2.paths;
            var4 = var4.bind(var1)(var3, var2);
            var9 = var8.id;
            var2 = global;
            var2 = var2.HermesInternal;
            var3 = var2.concat;
            var2 = 'channel-add-members-';
            var3 = var3.bind(var2)(var9);
            var2 = {};
            var2['channel'] = var8;
            var2['canSkip'] = var7;
            var2 = var5.bind(var6)(var4, var3, var2);
            return var1;
        }
    };
    var3['openAddMembersActionSheet'] = var4;
    var2 = function openChannelMembersActionSheet(arg1, arg2) {
        var7 = arg1;
        var5 = _closure1_slot1;
        var2 = _closure1_slot2;
        var1 = 1;
        var4 = var2[var1];
        var1 = undefined;
        var9 = var5.bind(var1)(var4);
        var8 = var9.track;
        var4 = _closure1_slot3;
        var6 = var4.OPEN_POPOUT;
        var4 = {};
        var10 = 'Manage Channel Access';
        var4['type'] = var10;
        var4 = var8.bind(var9)(var6, var4);
        var4 = 2;
        var4 = var2[var4];
        var6 = var5.bind(var1)(var4);
        var5 = var6.openLazy;
        var4 = _closure1_slot0;
        var3 = 4;
        var3 = var2[var3];
        var4 = var4.bind(var1)(var3);
        var3 = 5;
        var3 = var2[var3];
        var2 = var2.paths;
        var4 = var4.bind(var1)(var3, var2);
        var2 = global;
        var2 = var2.HermesInternal;
        var3 = var2.concat;
        var2 = 'channel-members-';
        var3 = var3.bind(var2)(var7);
        var2 = {};
        var2['channelId'] = var7;
        var7 = arg2;
        var2['guildId'] = var7;
        var2 = var5.bind(var6)(var4, var3, var2);
        return var1;
    };
    var3['openChannelMembersActionSheet'] = var2;
    return var1;
})();