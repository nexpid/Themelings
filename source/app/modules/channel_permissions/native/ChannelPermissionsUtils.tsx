// app/modules/channel_permissions/native/ChannelPermissionsUtils.tsx
export default (function(argFoo, argBar, argBaz, _, __, argFred, argPlugh) {
    report = argBar;
    zulu = argFred;
    oscar = argPlugh;
    var _closure1_slot0 = report;
    entity = argBaz;
    var _closure1_slot1 = entity;
    var _closure1_slot2 = oscar;
    entity = global;
    options = entity.Object;
    golf = options.defineProperty;
    tango = {};
    entity = true;
    tango['value'] = entity;
    entity = '__esModule';
    entity = golf.bind(options)(zulu, entity, tango);
    entity = 0;
    tango = oscar[entity];
    entity = undefined;
    tango = report.bind(entity)(tango);
    tango = tango.AnalyticEvents;
    var _closure1_slot3 = tango;
    tango = 6;
    tango = oscar[tango];
    oscar = report.bind(entity)(tango);
    report = oscar.fileFinishedImporting;
    tango = 'modules/channel_permissions/native/ChannelPermissionsUtils.tsx';
    tango = report.bind(oscar)(tango);
    tango = function(argFoo) { // Original name: openAddMembersActionSheet
        _fun86379: for(var _fun86379_ip = 0; ; ) switch(_fun86379_ip) {
 0:
            options = argFoo;
            golf = arguments[1];
            entity = undefined;
            if(!(golf === entity)) { _fun86379_ip = 14; continue _fun86379 }
 12:
            golf = false;
 14:
            report = _closure1_slot1;
            mike = _closure1_slot2;
            tango = 1;
            tango = mike[tango];
            offset = report.bind(entity)(tango);
            verify = offset.track;
            tango = _closure1_slot3;
            oscar = tango.OPEN_POPOUT;
            tango = {};
            yankee = 'Grant Channel Access';
            tango['type'] = yankee;
            tango = verify.bind(offset)(oscar, tango);
            tango = 2;
            tango = mike[tango];
            oscar = report.bind(entity)(tango);
            report = oscar.openLazy;
            tango = _closure1_slot0;
            zulu = 4;
            zulu = mike[zulu];
            tango = tango.bind(entity)(zulu);
            zulu = 3;
            zulu = mike[zulu];
            mike = mike.paths;
            tango = tango.bind(entity)(zulu, mike);
            verify = options.id;
            mike = global;
            mike = mike.HermesInternal;
            zulu = mike.concat;
            mike = 'channel-add-members-';
            zulu = zulu.bind(mike)(verify);
            mike = {};
            mike['channel'] = options;
            mike['canSkip'] = golf;
            mike = report.bind(oscar)(tango, zulu, mike);
            return entity;
        }
    };
    zulu['openAddMembersActionSheet'] = tango;
    mike = function(argFoo, argBar) { // Original name: openChannelMembersActionSheet
        golf = argFoo;
        report = _closure1_slot1;
        mike = _closure1_slot2;
        entity = 1;
        tango = mike[entity];
        entity = undefined;
        verify = report.bind(entity)(tango);
        options = verify.track;
        tango = _closure1_slot3;
        oscar = tango.OPEN_POPOUT;
        tango = {};
        offset = 'Manage Channel Access';
        tango['type'] = offset;
        tango = options.bind(verify)(oscar, tango);
        tango = 2;
        tango = mike[tango];
        oscar = report.bind(entity)(tango);
        report = oscar.openLazy;
        tango = _closure1_slot0;
        zulu = 4;
        zulu = mike[zulu];
        tango = tango.bind(entity)(zulu);
        zulu = 5;
        zulu = mike[zulu];
        mike = mike.paths;
        tango = tango.bind(entity)(zulu, mike);
        mike = global;
        mike = mike.HermesInternal;
        zulu = mike.concat;
        mike = 'channel-members-';
        zulu = zulu.bind(mike)(golf);
        mike = {};
        mike['channelId'] = golf;
        golf = argBar;
        mike['guildId'] = golf;
        mike = report.bind(oscar)(tango, zulu, mike);
        return entity;
    };
    zulu['openChannelMembersActionSheet'] = mike;
    return entity;
})();