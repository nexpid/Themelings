// app/modules/channel_permissions/native/action_sheets/ChannelMembersActionSheet.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    report = argBar;
    yankee = argBaz;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    var _closure1_slot1 = yankee;
    var _closure1_slot2 = oscard;
    entity = global;
    option = entity.Object;
    golfie = option.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(option)(zuuluu, entity, tangon);
    entity = 0;
    golfie = oscard[entity];
    tangon = argCor;
    entity = undefined;
    tangon = tangon.bind(entity)(golfie);
    tangon = 1;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.View;
    var _closure1_slot3 = tangon;
    tangon = 2;
    tangon = oscard[tangon];
    tangon = yankee.bind(entity)(tangon);
    var _closure1_slot4 = tangon;
    tangon = 3;
    tangon = oscard[tangon];
    tangon = yankee.bind(entity)(tangon);
    var _closure1_slot5 = tangon;
    tangon = 4;
    tangon = oscard[tangon];
    tangon = yankee.bind(entity)(tangon);
    var _closure1_slot6 = tangon;
    tangon = 5;
    tangon = oscard[tangon];
    tangon = yankee.bind(entity)(tangon);
    var _closure1_slot7 = tangon;
    tangon = 6;
    tangon = oscard[tangon];
    tangon = yankee.bind(entity)(tangon);
    var _closure1_slot8 = tangon;
    tangon = 7;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    golfie = tangon.ChannelSettingsSections;
    var _closure1_slot9 = golfie;
    tangon = tangon.Permissions;
    var _closure1_slot10 = tangon;
    tangon = 8;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    golfie = tangon.jsx;
    var _closure1_slot11 = golfie;
    tangon = tangon.jsxs;
    var _closure1_slot12 = tangon;
    tangon = 9;
    tangon = oscard[tangon];
    option = report.bind(entity)(tangon);
    golfie = option.createStyles;
    tangon = {};
    verify = {'paddingHorizontal': 16, 'flex': 1};
    tangon['container'] = verify;
    verify = {};
    offset = 10;
    offset = oscard[offset];
    offset = yankee.bind(entity)(offset);
    offset = offset.spacing;
    offset = offset.PX_12;
    verify['paddingVertical'] = offset;
    tangon['sectionRowWrapper'] = verify;
    verify = {'margin': 16, 'marginBottom': 0};
    tangon['warning'] = verify;
    tangon = golfie.bind(option)(tangon);
    var _closure1_slot13 = tangon;
    tangon = 30;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/channel_permissions/native/action_sheets/ChannelMembersActionSheet.tsx';
    tangon = report.bind(oscard)(tangon);
    michal = function(argFoo) { // Original name: ChannelMembersActionSheet
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            entity = argFoo;
            michal = entity.channelId;
            var _closure2_slot0 = michal;
            entity = entity.guildId;
            var _closure2_slot1 = entity;
            report = undefined;
            var _closure2_slot5 = report;
            entity = _closure1_slot13;
            yankee = entity.bind(report)();
            var _closure2_slot2 = yankee;
            michal = _closure1_slot1;
            zuuluu = _closure1_slot2;
            entity = 11;
            entity = zuuluu[entity];
            entity = michal.bind(report)(entity);
            output = entity.bind(report)();
            michal = _closure1_slot0;
            entity = 12;
            tangon = zuuluu[entity];
            option = michal.bind(report)(tangon);
            golfie = option.useStateFromStores;
            tangon = _closure1_slot4;
            oscard = new Array(1);
            oscard[0] = tangon;
            tangon = function() {
                zuuluu = _closure1_slot4;
                michal = zuuluu.getChannel;
                entity = _closure2_slot0;
                entity = michal.bind(zuuluu)(entity);
                return entity;
            };
            option = golfie.bind(option)(oscard, tangon);
            var _closure2_slot3 = option;
            tangon = zuuluu[entity];
            offset = michal.bind(report)(tangon);
            verify = offset.useStateFromStoresObject;
            tangon = _closure1_slot7;
            golfie = new Array(2);
            golfie[0] = tangon;
            tangon = _closure1_slot6;
            golfie[1] = tangon;
            oscard = new Array(1);
            oscard[0] = option;
            tangon = function() {
                _fun00003: for(var _fun00004_ip = 0; ; ) switch(_fun00004_ip) {
 0:
                    oscard = _closure1_slot7;
                    zuuluu = oscard.getGuild;
                    entity = _closure2_slot3;
                    report = null;
                    option = report == entity;
                    entity = undefined;
                    if(option) { _fun00004_ip = 44; continue _fun00003 }
 30:
                    option = _closure2_slot3;
                    golfie = option.getGuildId;
                    entity = golfie.bind(option)();
 44:
                    zuuluu = zuuluu.bind(oscard)(entity);
                    entity = {};
                    entity['guild'] = zuuluu;
                    report = report != zuuluu;
                    michal = undefined;
                    if(!report) { _fun00004_ip = 84; continue _fun00003 }
 64:
                    report = _closure1_slot6;
                    tangon = report.getRoles;
                    zuuluu = zuuluu.id;
                    michal = tangon.bind(report)(zuuluu);
 84:
                    entity['guildRoles'] = michal;
                    return entity;
                }
            };
            tangon = verify.bind(offset)(golfie, tangon, oscard);
            romeon = tangon.guild;
            foxtra = tangon.guildRoles;
            entity = zuuluu[entity];
            verify = michal.bind(report)(entity);
            golfie = verify.useStateFromStoresArray;
            entity = _closure1_slot5;
            oscard = new Array(1);
            oscard[0] = entity;
            tangon = new Array(1);
            tangon[0] = option;
            entity = function() {
                _fun00005: for(var _fun00006_ip = 0; ; ) switch(_fun00006_ip) {
 0:
                    zuuluu = _closure1_slot5;
                    michal = zuuluu.getMemberIds;
                    report = _closure2_slot3;
                    entity = null;
                    report = entity == report;
                    entity = undefined;
                    if(report) { _fun00006_ip = 45; continue _fun00005 }
 31:
                    report = _closure2_slot3;
                    tangon = report.getGuildId;
                    entity = tangon.bind(report)();
 45:
                    entity = michal.bind(zuuluu)(entity);
                    return entity;
                }
            };
            golfie = golfie.bind(verify)(oscard, entity, tangon);
            entity = 13;
            entity = zuuluu[entity];
            michal = michal.bind(report)(entity);
            entity = michal.useNavigation;
            entity = entity.bind(michal)();
            var _closure2_slot4 = entity;
            entity = null;
            if(!(entity != option)) { _fun00002_ip = 1277; continue _fun00001 }
 270:
            if(!(entity != romeon)) { _fun00002_ip = 1277; continue _fun00001 }
 277:
            if(!(entity != foxtra)) { _fun00002_ip = 1277; continue _fun00001 }
 284:
            tangon = _closure1_slot8;
            zuuluu = tangon.can;
            michal = _closure1_slot10;
            michal = michal.MANAGE_ROLES;
            verify = zuuluu.bind(tangon)(michal, option);
            _closure2_slot5 = verify;
            echoed = _closure1_slot0;
            offset = _closure1_slot2;
            michal = 14;
            zuuluu = offset[michal];
            oscard = echoed.bind(report)(zuuluu);
            tangon = oscard.getExistingRolesRows;
            sequen = option.accessPermissions;
            papara = oscard;
            cntext = romeon;
            record = foxtra;
            config = option;
            oscard = papara[tangon](cntext, record, config, sequen, vacuum);
            michal = offset[michal];
            tangon = echoed.bind(report)(michal);
            zuuluu = tangon.getExistingMembersRows;
            sequen = option.accessPermissions;
            papara = tangon;
            cntext = golfie;
            record = option;
            config = romeon;
            tangon = papara[zuuluu](cntext, record, config, sequen, vacuum);
            foxtra = new Array(0);
            zuuluu = foxtra.push;
            michal = {};
            kiloes = 15;
            golfie = offset[kiloes];
            golfie = echoed.bind(report)(golfie);
            result = golfie.intl;
            romeon = result.string;
            golfie = offset[kiloes];
            golfie = echoed.bind(report)(golfie);
            golfie = golfie.t;
            golfie = golfie.LPJmLy;
            golfie = romeon.bind(result)(golfie);
            michal['title'] = golfie;
            michal['data'] = oscard;
            michal = zuuluu.bind(foxtra)(michal);
            zuuluu = foxtra.push;
            michal = {};
            oscard = offset[kiloes];
            oscard = echoed.bind(report)(oscard);
            romeon = oscard.intl;
            golfie = romeon.string;
            oscard = offset[kiloes];
            oscard = echoed.bind(report)(oscard);
            oscard = oscard.t;
            oscard = oscard.9Oq93t;
            oscard = golfie.bind(romeon)(oscard);
            michal['title'] = oscard;
            michal['data'] = tangon;
            michal = zuuluu.bind(foxtra)(michal);
            tangon = _closure1_slot11;
            michal = 16;
            michal = offset[michal];
            michal = echoed.bind(report)(michal);
            zuuluu = michal.BottomSheet;
            michal = {'scrollable': true, 'header': null, 'startExpanded': true};
            oscard = 17;
            oscard = offset[oscard];
            oscard = echoed.bind(report)(oscard);
            golfie = oscard.BottomSheetTitleHeader;
            oscard = {};
            romeon = offset[kiloes];
            romeon = echoed.bind(report)(romeon);
            result = romeon.intl;
            romeon = result.string;
            offset = offset[kiloes];
            offset = echoed.bind(report)(offset);
            offset = offset.t;
            offset = offset.ES4CCw;
            offset = romeon.bind(result)(offset);
            oscard['title'] = offset;
            romeon = option.name;
            option = global;
            option = option.HermesInternal;
            offset = option.concat;
            option = '#';
            option = offset.bind(option)(romeon);
            oscard['subtitle'] = option;
            option = verify;
            if(!option) { _fun00002_ip = 814; continue _fun00001 }
 679:
            result = _closure1_slot11;
            update = _closure1_slot0;
            source = _closure1_slot2;
            offset = 18;
            offset = source[offset];
            offset = update.bind(report)(offset);
            romeon = offset.PressableOpacity;
            offset = {};
            echoed = function() { // Original name: onPress
                tangon = _closure1_slot1;
                oscard = _closure1_slot2;
                entity = 19;
                zuuluu = oscard[entity];
                entity = undefined;
                report = tangon.bind(entity)(zuuluu);
                zuuluu = report.hideActionSheet;
                zuuluu = zuuluu.bind(report)();
                zuuluu = 20;
                zuuluu = oscard[zuuluu];
                report = tangon.bind(entity)(zuuluu);
                tangon = report.init;
                golfie = _closure2_slot0;
                tangon = tangon.bind(report)(golfie);
                report = _closure1_slot0;
                tangon = 21;
                tangon = oscard[tangon];
                oscard = report.bind(entity)(tangon);
                report = oscard.navigateToChannelDetailsScreen;
                yankee = _closure2_slot4;
                michal = _closure1_slot9;
                offset = michal.PERMISSIONS;
                option = 'channel-members-action-sheet';
                romeon = oscard;
                verify = golfie;
                michal = romeon[report](yankee, offset, verify, option, golfie);
                return entity;
            };
            offset['onPress'] = echoed;
            echoed = 'button';
            offset['accessibilityRole'] = echoed;
            echoed = source[kiloes];
            echoed = update.bind(report)(echoed);
            vacuum = echoed.intl;
            ctrled = vacuum.string;
            echoed = source[kiloes];
            echoed = update.bind(report)(echoed);
            echoed = echoed.t;
            echoed = echoed.XPDhcX;
            echoed = ctrled.bind(vacuum)(echoed);
            offset['accessibilityLabel'] = echoed;
            echoed = 22;
            echoed = source[echoed];
            echoed = update.bind(report)(echoed);
            update = echoed.SettingsIcon;
            echoed = {};
            echoed = result.bind(report)(update, echoed);
            offset['children'] = echoed;
            option = result.bind(report)(romeon, offset);
 814:
            oscard['trailing'] = option;
            oscard = tangon.bind(report)(golfie, oscard);
            michal['header'] = oscard;
            option = _closure1_slot12;
            golfie = _closure1_slot3;
            oscard = {};
            offset = yankee.container;
            oscard['style'] = offset;
            romeon = _closure1_slot11;
            if(verify) { _fun00002_ip = 999; continue _fun00001 }
 860:
            offset = _closure1_slot3;
            verify = {};
            yankee = yankee.warning;
            verify['style'] = yankee;
            result = _closure1_slot1;
            echoed = _closure1_slot2;
            update = 26;
            yankee = echoed[update];
            result = result.bind(report)(yankee);
            yankee = {};
            ctrled = _closure1_slot0;
            update = echoed[update];
            update = ctrled.bind(report)(update);
            update = update.HelpMessageTypes;
            update = update.INFO;
            yankee['messageType'] = update;
            update = echoed[kiloes];
            update = ctrled.bind(report)(update);
            source = update.intl;
            update = source.string;
            echoed = echoed[kiloes];
            echoed = ctrled.bind(report)(echoed);
            echoed = echoed.t;
            echoed = echoed.VOuiSk;
            echoed = update.bind(source)(echoed);
            yankee['children'] = echoed;
            yankee = romeon.bind(report)(result, yankee);
            verify['children'] = yankee;
            offset = romeon.bind(report)(offset, verify);
            _fun00002_ip = 1122; continue _fun00001;
 999:
            result = _closure1_slot0;
            echoed = _closure1_slot2;
            verify = 23;
            verify = echoed[verify];
            verify = result.bind(report)(verify);
            yankee = verify.RowButton;
            verify = {};
            update = echoed[kiloes];
            update = result.bind(report)(update);
            source = update.intl;
            update = source.string;
            kiloes = echoed[kiloes];
            kiloes = result.bind(report)(kiloes);
            kiloes = kiloes.t;
            kiloes = kiloes.dMJ3Y2;
            kiloes = update.bind(source)(kiloes);
            verify['label'] = kiloes;
            kiloes = function() { // Original name: onPress
                zuuluu = _closure1_slot0;
                michal = _closure1_slot2;
                entity = 24;
                michal = michal[entity];
                entity = undefined;
                zuuluu = zuuluu.bind(entity)(michal);
                michal = zuuluu.openAddMembersActionSheet;
                entity = _closure2_slot3;
                entity = michal.bind(zuuluu)(entity);
                return entity;
            };
            verify['onPress'] = kiloes;
            kiloes = 25;
            kiloes = echoed[kiloes];
            kiloes = result.bind(report)(kiloes);
            result = kiloes.GroupPlusIcon;
            kiloes = {};
            kiloes = romeon.bind(report)(result, kiloes);
            verify['icon'] = kiloes;
            offset = romeon.bind(report)(yankee, verify);
 1122:
            verify = new Array(2);
            verify[0] = offset;
            romeon = _closure1_slot11;
            yankee = _closure1_slot0;
            echoed = _closure1_slot2;
            offset = 27;
            offset = echoed[offset];
            offset = yankee.bind(report)(offset);
            yankee = offset.BottomSheetSectionList;
            offset = {};
            kiloes = {};
            output = output.bottom;
            result = _closure1_slot1;
            sizing = 10;
            sizing = echoed[sizing];
            sizing = result.bind(report)(sizing);
            sizing = sizing.spacing;
            sizing = sizing.PX_16;
            sizing = output + sizing;
            kiloes['paddingBottom'] = sizing;
            offset['contentContainerStyle'] = kiloes;
            kiloes = function(argFoo) { // Original name: renderItem
                entity = argFoo;
                oscard = entity.item;
                golfie = entity.index;
                report = entity.section;
                tangon = _closure1_slot11;
                michal = _closure1_slot1;
                zuuluu = _closure1_slot2;
                entity = 28;
                entity = zuuluu[entity];
                zuuluu = undefined;
                michal = michal.bind(zuuluu)(entity);
                entity = {};
                option = 0;
                option = option === golfie;
                entity['start'] = option;
                report = report.data;
                option = report.length;
                report = 1;
                report = option - report;
                report = golfie === report;
                entity['end'] = report;
                golfie = _closure2_slot1;
                entity['guildId'] = golfie;
                entity['item'] = oscard;
                oscard = _closure2_slot0;
                entity['channelId'] = oscard;
                oscard = true;
                entity['showType'] = oscard;
                report = _closure2_slot5;
                entity['showRemove'] = report;
                entity = tangon.bind(zuuluu)(michal, entity);
                return entity;
            };
            offset['renderItem'] = kiloes;
            backup = function(argFoo) { // Original name: renderSectionHeader
                entity = argFoo;
                entity = entity.section;
                verify = entity.title;
                offset = entity.data;
                tangon = _closure1_slot11;
                oscard = _closure1_slot0;
                yankee = _closure1_slot2;
                entity = 29;
                entity = yankee[entity];
                zuuluu = undefined;
                entity = oscard.bind(zuuluu)(entity);
                michal = entity.Text;
                entity = {'style': null, 'maxFontSizeMultiplier': 2, 'accessibilityRole': 'header', 'variant': 'text-sm/semibold', 'color': 'interactive-normal'};
                report = _closure2_slot2;
                report = report.sectionRowWrapper;
                entity['style'] = report;
                report = 15;
                golfie = yankee[report];
                golfie = oscard.bind(zuuluu)(golfie);
                option = golfie.intl;
                golfie = option.format;
                report = yankee[report];
                report = oscard.bind(zuuluu)(report);
                report = report.t;
                oscard = report.u8CWLi;
                report = {};
                offset = offset.length;
                report['numberOfItems'] = offset;
                report['sectionTitle'] = verify;
                report = golfie.bind(option)(oscard, report);
                entity['children'] = report;
                entity = tangon.bind(zuuluu)(michal, entity);
                return entity;
            };
            offset['renderSectionHeader'] = backup;
            offset['sections'] = foxtra;
            foxtra = false;
            offset['stickySectionHeadersEnabled'] = foxtra;
            offset = romeon.bind(report)(yankee, offset);
            verify[1] = offset;
            oscard['children'] = verify;
            oscard = option.bind(report)(golfie, oscard);
            michal['children'] = oscard;
            michal = tangon.bind(report)(zuuluu, michal);
            return michal;
 1277:
            return entity;
        }
    };
    zuuluu['default'] = michal;
    return entity;
})();