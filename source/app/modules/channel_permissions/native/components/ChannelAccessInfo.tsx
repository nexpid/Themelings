// app/modules/channel_permissions/native/components/ChannelAccessInfo.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    report = argBar;
    backup = argBaz;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    var _closure1_slot1 = backup;
    var _closure1_slot2 = oscard;
    entity = global;
    option = entity.Object;
    golfie = option.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(option)(zuuluu, entity, tangon);
    verify = 0;
    golfie = oscard[verify];
    tangon = argCor;
    entity = undefined;
    tangon = tangon.bind(entity)(golfie);
    var _closure1_slot3 = tangon;
    option = 1;
    tangon = oscard[option];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.View;
    var _closure1_slot4 = tangon;
    tangon = 2;
    tangon = oscard[tangon];
    tangon = backup.bind(entity)(tangon);
    var _closure1_slot5 = tangon;
    tangon = 3;
    tangon = oscard[tangon];
    tangon = backup.bind(entity)(tangon);
    var _closure1_slot6 = tangon;
    tangon = 4;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    golfie = tangon.jsx;
    var _closure1_slot7 = golfie;
    golfie = tangon.jsxs;
    var _closure1_slot8 = golfie;
    tangon = tangon.Fragment;
    var _closure1_slot9 = tangon;
    tangon = 5;
    tangon = oscard[tangon];
    offset = report.bind(entity)(tangon);
    golfie = offset.createStyles;
    tangon = {};
    yankee = {'alignItems': 'center', 'backgroundColor': null, 'borderRadius': null, 'color': null, 'flexDirection': 'row', 'marginBottom': 8, 'marginTop': 8, 'padding': 16};
    romeon = 6;
    foxtra = oscard[romeon];
    foxtra = backup.bind(entity)(foxtra);
    foxtra = foxtra.colors;
    foxtra = foxtra.BACKGROUND_SECONDARY;
    yankee['backgroundColor'] = foxtra;
    foxtra = oscard[romeon];
    foxtra = backup.bind(entity)(foxtra);
    foxtra = foxtra.radii;
    foxtra = foxtra.sm;
    yankee['borderRadius'] = foxtra;
    foxtra = oscard[romeon];
    foxtra = backup.bind(entity)(foxtra);
    foxtra = foxtra.colors;
    foxtra = foxtra.TEXT_NORMAL;
    yankee['color'] = foxtra;
    foxtra = 8;
    tangon['section'] = yankee;
    yankee = {'alignItems': 'center', 'flexDirection': 'row', 'flexGrow': 1};
    tangon['sectionContent'] = yankee;
    yankee = {};
    yankee['marginRight'] = foxtra;
    tangon['avatar'] = yankee;
    yankee = {};
    foxtra = 12;
    yankee['marginRight'] = foxtra;
    tangon['labelDetail'] = yankee;
    yankee = {};
    yankee['marginRight'] = romeon;
    tangon['sectionIcon'] = yankee;
    tangon = golfie.bind(offset)(tangon);
    var _closure1_slot10 = tangon;
    tangon = {};
    tangon['MEMBERS'] = verify;
    golfie = 'MEMBERS';
    tangon[verify] = golfie;
    tangon['ROLES'] = option;
    golfie = 'ROLES';
    tangon[option] = golfie;
    var _closure1_slot11 = tangon;
    tangon = 21;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/channel_permissions/native/components/ChannelAccessInfo.tsx';
    tangon = report.bind(oscard)(tangon);
    michal = function(argFoo) { // Original name: ChannelAccessInfo
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            entity = argFoo;
            output = entity.guild;
            var _closure2_slot0 = output;
            oscard = entity.channel;
            var _closure2_slot1 = oscard;
            tangon = undefined;
            var _closure2_slot2 = tangon;
            update = function(argFoo, argBar, argBaz, argCor) { // Original name: renderCounts
                _fun00003: for(var _fun00004_ip = 0; ; ) switch(_fun00004_ip) {
 0:
                    tangon = argFoo;
                    report = argBar;
                    entity = 0;
                    if(!(entity !== report)) { _fun00004_ip = 522; continue _fun00003 }
 15:
                    entity = _closure1_slot11;
                    entity = entity.MEMBERS;
                    if(!(entity !== tangon)) { _fun00004_ip = 238; continue _fun00003 }
 35:
                    entity = _closure1_slot11;
                    entity = entity.ROLES;
                    if(!(entity !== tangon)) { _fun00004_ip = 89; continue _fun00003 }
 49:
                    zuuluu = _closure1_slot0;
                    michal = _closure1_slot2;
                    entity = 10;
                    michal = michal[entity];
                    entity = undefined;
                    zuuluu = zuuluu.bind(entity)(michal);
                    michal = zuuluu.assertNever;
                    michal = michal.bind(zuuluu)(tangon);
                    verify = undefined;
                    _fun00004_ip = 382; continue _fun00003;
 89:
                    option = 100;
                    if(!(!(report > option))) { _fun00004_ip = 164; continue _fun00003 }
 96:
                    golfie = _closure1_slot0;
                    offset = _closure1_slot2;
                    entity = 7;
                    zuuluu = offset[entity];
                    michal = undefined;
                    zuuluu = golfie.bind(michal)(zuuluu);
                    tangon = zuuluu.intl;
                    zuuluu = tangon.formatToPlainString;
                    entity = offset[entity];
                    entity = golfie.bind(michal)(entity);
                    entity = entity.t;
                    michal = entity.T2BEtr;
                    entity = {};
                    entity['count'] = report;
                    entity = zuuluu.bind(tangon)(michal, entity);
                    _fun00004_ip = 230; continue _fun00003;
 164:
                    offset = _closure1_slot0;
                    yankee = _closure1_slot2;
                    michal = 7;
                    tangon = yankee[michal];
                    zuuluu = undefined;
                    tangon = offset.bind(zuuluu)(tangon);
                    golfie = tangon.intl;
                    tangon = golfie.formatToPlainString;
                    michal = yankee[michal];
                    michal = offset.bind(zuuluu)(michal);
                    michal = michal.t;
                    zuuluu = michal.+OYnFR;
                    michal = {};
                    michal['count'] = option;
                    entity = tangon.bind(golfie)(zuuluu, michal);
 230:
                    verify = entity;
                    _fun00004_ip = 382; continue _fun00003;
 238:
                    golfie = 100;
                    if(!(!(report > golfie))) { _fun00004_ip = 313; continue _fun00003 }
 245:
                    option = _closure1_slot0;
                    offset = _closure1_slot2;
                    entity = 7;
                    zuuluu = offset[entity];
                    michal = undefined;
                    zuuluu = option.bind(michal)(zuuluu);
                    tangon = zuuluu.intl;
                    zuuluu = tangon.formatToPlainString;
                    entity = offset[entity];
                    entity = option.bind(michal)(entity);
                    entity = entity.t;
                    michal = entity.bu5syc;
                    entity = {};
                    entity['count'] = report;
                    entity = zuuluu.bind(tangon)(michal, entity);
                    _fun00004_ip = 379; continue _fun00003;
 313:
                    option = _closure1_slot0;
                    offset = _closure1_slot2;
                    michal = 7;
                    tangon = offset[michal];
                    zuuluu = undefined;
                    tangon = option.bind(zuuluu)(tangon);
                    report = tangon.intl;
                    tangon = report.formatToPlainString;
                    michal = offset[michal];
                    michal = option.bind(zuuluu)(michal);
                    michal = michal.t;
                    zuuluu = michal.PR5l09;
                    michal = {};
                    michal['count'] = golfie;
                    entity = tangon.bind(report)(zuuluu, michal);
 379:
                    verify = entity;
 382:
                    tangon = _closure1_slot8;
                    entity = _closure1_slot3;
                    zuuluu = entity.Fragment;
                    michal = {};
                    option = _closure1_slot7;
                    golfie = {};
                    entity = 'sm';
                    golfie['size'] = entity;
                    entity = _closure2_slot2;
                    entity = entity.sectionIcon;
                    golfie['style'] = entity;
                    entity = undefined;
                    report = argCor;
                    golfie = option.bind(entity)(report, golfie);
                    report = new Array(2);
                    report[0] = golfie;
                    golfie = _closure1_slot0;
                    yankee = _closure1_slot2;
                    oscard = 11;
                    oscard = yankee[oscard];
                    oscard = golfie.bind(entity)(oscard);
                    golfie = oscard.Text;
                    oscard = {};
                    offset = _closure2_slot2;
                    offset = offset.labelDetail;
                    oscard['style'] = offset;
                    offset = 'text-sm/medium';
                    oscard['variant'] = offset;
                    oscard['children'] = verify;
                    oscard = option.bind(entity)(golfie, oscard);
                    report[1] = oscard;
                    michal['children'] = report;
                    entity = tangon.bind(entity)(zuuluu, michal);
                    return entity;
 522:
                    entity = null;
                    return entity;
                }
            };
            entity = _closure1_slot10;
            result = entity.bind(tangon)();
            _closure2_slot2 = result;
            michal = _closure1_slot0;
            zuuluu = _closure1_slot2;
            record = 7;
            entity = zuuluu[record];
            entity = michal.bind(tangon)(entity);
            golfie = entity.intl;
            report = golfie.string;
            entity = zuuluu[record];
            entity = michal.bind(tangon)(entity);
            entity = entity.t;
            entity = entity.li1wKS;
            offset = report.bind(golfie)(entity);
            entity = 8;
            entity = zuuluu[entity];
            golfie = michal.bind(tangon)(entity);
            report = golfie.useStateFromStoresArray;
            entity = _closure1_slot6;
            zuuluu = new Array(1);
            zuuluu[0] = entity;
            michal = new Array(2);
            michal[0] = output;
            michal[1] = oscard;
            entity = function() {
                tangon = _closure1_slot0;
                zuuluu = _closure1_slot2;
                entity = 9;
                zuuluu = zuuluu[entity];
                entity = undefined;
                oscard = tangon.bind(entity)(zuuluu);
                report = oscard.getExistingRoles;
                tangon = _closure2_slot0;
                golfie = _closure1_slot6;
                zuuluu = golfie.getRoles;
                michal = tangon.id;
                offset = zuuluu.bind(golfie)(michal);
                michal = _closure2_slot1;
                option = michal.accessPermissions;
                romeon = oscard;
                yankee = tangon;
                verify = michal;
                entity = romeon[report](yankee, offset, verify, option, golfie);
                return entity;
            };
            backup = report.bind(golfie)(zuuluu, entity, michal);
            zuuluu = _closure1_slot5;
            michal = zuuluu.getMemberIds;
            romeon = null;
            report = romeon == output;
            entity = undefined;
            if(report) { _fun00002_ip = 190; continue _fun00001 }
 185:
            entity = output.id;
 190:
            report = michal.bind(zuuluu)(entity);
            michal = _closure1_slot0;
            zuuluu = _closure1_slot2;
            entity = 9;
            entity = zuuluu[entity];
            zuuluu = michal.bind(tangon)(entity);
            michal = zuuluu.getExistingMembers;
            cntext = oscard.accessPermissions;
            sierra = zuuluu;
            status = report;
            target = oscard;
            papara = output;
            foxtra = sierra[michal](status, target, papara, cntext, record);
            michal = backup.length;
            entity = 0;
            michal = entity === michal;
            if(!michal) { _fun00002_ip = 269; continue _fun00001 }
 257:
            report = foxtra.length;
            zuuluu = 1;
            michal = zuuluu === report;
 269:
            if(!michal) { _fun00002_ip = 287; continue _fun00001 }
 272:
            report = output.isOwner;
            zuuluu = foxtra[entity];
            michal = report.bind(output)(zuuluu);
 287:
            vacuum = null;
            if(!michal) { _fun00002_ip = 296; continue _fun00001 }
 292:
            vacuum = foxtra[entity];
 296:
            zuuluu = _closure1_slot8;
            michal = _closure1_slot9;
            entity = {};
            yankee = _closure1_slot7;
            golfie = _closure1_slot0;
            kiloes = _closure1_slot2;
            echoed = 11;
            report = kiloes[echoed];
            report = golfie.bind(tangon)(report);
            oscard = report.Text;
            report = {};
            sizing = 'eyebrow';
            report['variant'] = sizing;
            report['children'] = offset;
            oscard = yankee.bind(tangon)(oscard, report);
            report = new Array(2);
            report[0] = oscard;
            oscard = 12;
            oscard = kiloes[oscard];
            oscard = golfie.bind(tangon)(oscard);
            golfie = oscard.PressableOpacity;
            oscard = {};
            oscard['accessibilityLabel'] = offset;
            offset = 'button';
            oscard['accessibilityRole'] = offset;
            option = function() { // Original name: onPress
                zuuluu = _closure1_slot0;
                michal = _closure1_slot2;
                entity = 13;
                michal = michal[entity];
                entity = undefined;
                report = zuuluu.bind(entity)(michal);
                tangon = report.openChannelMembersActionSheet;
                michal = _closure2_slot1;
                zuuluu = michal.id;
                michal = michal.guild_id;
                michal = tangon.bind(report)(zuuluu, michal);
                return entity;
            };
            oscard['onPress'] = option;
            option = result.section;
            oscard['style'] = option;
            offset = _closure1_slot4;
            option = {};
            kiloes = result.sectionContent;
            option['style'] = kiloes;
            if(!(romeon == vacuum)) { _fun00002_ip = 581; continue _fun00001 }
 440:
            romeon = {};
            kiloes = _closure1_slot11;
            config = kiloes.MEMBERS;
            target = foxtra.length;
            sequen = _closure1_slot1;
            ctrled = _closure1_slot2;
            foxtra = 15;
            foxtra = ctrled[foxtra];
            foxtra = sequen.bind(tangon)(foxtra);
            source = _closure1_slot0;
            foxtra = 16;
            foxtra = ctrled[foxtra];
            foxtra = source.bind(tangon)(foxtra);
            cntext = foxtra.GroupIcon;
            sierra = undefined;
            status = config;
            papara = undefined;
            sizing = sierra[update](status, target, papara, cntext, record);
            foxtra = new Array(2);
            foxtra[0] = sizing;
            sizing = kiloes.ROLES;
            target = backup.length;
            backup = 17;
            backup = ctrled[backup];
            backup = sequen.bind(tangon)(backup);
            backup = 18;
            backup = ctrled[backup];
            backup = source.bind(tangon)(backup);
            cntext = backup.ShieldUserIcon;
            sierra = undefined;
            status = sizing;
            backup = sierra[update](status, target, papara, cntext, record);
            foxtra[1] = backup;
            romeon['children'] = foxtra;
            _fun00002_ip = 837; continue _fun00001;
 581:
            foxtra = {};
            source = _closure1_slot7;
            kiloes = _closure1_slot1;
            ctrled = _closure1_slot2;
            sizing = 14;
            backup = ctrled[sizing];
            kiloes = kiloes.bind(tangon)(backup);
            backup = {};
            result = result.avatar;
            backup['style'] = result;
            backup['user'] = vacuum;
            output = output.id;
            backup['guildId'] = output;
            config = _closure1_slot0;
            sizing = ctrled[sizing];
            sizing = config.bind(tangon)(sizing);
            sizing = sizing.AvatarSizes;
            sizing = sizing.XSMALL;
            backup['size'] = sizing;
            kiloes = source.bind(tangon)(kiloes, backup);
            backup = new Array(2);
            backup[0] = kiloes;
            output = _closure1_slot8;
            sizing = _closure1_slot4;
            kiloes = {};
            result = ctrled[echoed];
            result = config.bind(tangon)(result);
            update = result.Text;
            result = {};
            sequen = 'text-sm/semibold';
            result['variant'] = sequen;
            vacuum = vacuum.tag;
            result['children'] = vacuum;
            update = source.bind(tangon)(update, result);
            result = new Array(2);
            result[0] = update;
            echoed = ctrled[echoed];
            echoed = config.bind(tangon)(echoed);
            update = echoed.Text;
            echoed = {};
            vacuum = 'text-xs/medium';
            echoed['variant'] = vacuum;
            vacuum = ctrled[record];
            vacuum = config.bind(tangon)(vacuum);
            sequen = vacuum.intl;
            vacuum = sequen.string;
            ctrled = ctrled[record];
            ctrled = config.bind(tangon)(ctrled);
            ctrled = ctrled.t;
            ctrled = ctrled.rt0ERU;
            ctrled = vacuum.bind(sequen)(ctrled);
            echoed['children'] = ctrled;
            echoed = source.bind(tangon)(update, echoed);
            result[1] = echoed;
            kiloes['children'] = result;
            kiloes = output.bind(tangon)(sizing, kiloes);
            backup[1] = kiloes;
            foxtra['children'] = backup;
            romeon = foxtra;
 837:
            romeon = zuuluu.bind(tangon)(michal, romeon);
            option['children'] = romeon;
            offset = yankee.bind(tangon)(offset, option);
            option = new Array(2);
            option[0] = offset;
            yankee = _closure1_slot7;
            foxtra = _closure1_slot1;
            backup = _closure1_slot2;
            romeon = 19;
            verify = backup[romeon];
            offset = foxtra.bind(tangon)(verify);
            verify = {};
            kiloes = 20;
            kiloes = backup[kiloes];
            kiloes = foxtra.bind(tangon)(kiloes);
            verify['source'] = kiloes;
            romeon = backup[romeon];
            romeon = foxtra.bind(tangon)(romeon);
            romeon = romeon.Sizes;
            romeon = romeon.SMALL;
            verify['size'] = romeon;
            verify = yankee.bind(tangon)(offset, verify);
            option[1] = verify;
            oscard['children'] = option;
            oscard = zuuluu.bind(tangon)(golfie, oscard);
            report[1] = oscard;
            entity['children'] = report;
            entity = zuuluu.bind(tangon)(michal, entity);
            return entity;
        }
    };
    zuuluu['default'] = michal;
    return entity;
})();