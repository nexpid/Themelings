// app/modules/channel_permissions/native/components/ChannelAccessInfo.tsx
export default (function(argFoo, argBar, argBaz, argCorge, _, argFred, argPlugh) {
    report = argBar;
    backup = argBaz;
    zulu = argFred;
    oscar = argPlugh;
    var _closure1_slot0 = report;
    var _closure1_slot1 = backup;
    var _closure1_slot2 = oscar;
    entity = global;
    options = entity.Object;
    golf = options.defineProperty;
    tango = {};
    entity = true;
    tango['value'] = entity;
    entity = '__esModule';
    entity = golf.bind(options)(zulu, entity, tango);
    verify = 0;
    golf = oscar[verify];
    tango = argCorge;
    entity = undefined;
    tango = tango.bind(entity)(golf);
    var _closure1_slot3 = tango;
    options = 1;
    tango = oscar[options];
    tango = report.bind(entity)(tango);
    tango = tango.View;
    var _closure1_slot4 = tango;
    tango = 2;
    tango = oscar[tango];
    tango = backup.bind(entity)(tango);
    var _closure1_slot5 = tango;
    tango = 3;
    tango = oscar[tango];
    tango = backup.bind(entity)(tango);
    var _closure1_slot6 = tango;
    tango = 4;
    golf = oscar[tango];
    golf = report.bind(entity)(golf);
    golf = golf.jsx;
    var _closure1_slot7 = golf;
    golf = oscar[tango];
    golf = report.bind(entity)(golf);
    golf = golf.jsxs;
    var _closure1_slot8 = golf;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.Fragment;
    var _closure1_slot9 = tango;
    tango = 5;
    tango = oscar[tango];
    offset = report.bind(entity)(tango);
    golf = offset.createStyles;
    tango = {};
    yankee = {'alignItems': 'center', 'backgroundColor': null, 'borderRadius': null, 'color': null, 'flexDirection': 'row', 'marginBottom': 8, 'marginTop': 8, 'padding': 16};
    romeo = 6;
    foxtrot = oscar[romeo];
    foxtrot = backup.bind(entity)(foxtrot);
    foxtrot = foxtrot.colors;
    foxtrot = foxtrot.BACKGROUND_SECONDARY;
    yankee['backgroundColor'] = foxtrot;
    foxtrot = oscar[romeo];
    foxtrot = backup.bind(entity)(foxtrot);
    foxtrot = foxtrot.radii;
    foxtrot = foxtrot.sm;
    yankee['borderRadius'] = foxtrot;
    foxtrot = oscar[romeo];
    foxtrot = backup.bind(entity)(foxtrot);
    foxtrot = foxtrot.colors;
    foxtrot = foxtrot.TEXT_NORMAL;
    yankee['color'] = foxtrot;
    foxtrot = 8;
    tango['section'] = yankee;
    yankee = {'alignItems': 'center', 'flexDirection': 'row', 'flexGrow': 1};
    tango['sectionContent'] = yankee;
    yankee = {};
    yankee['marginRight'] = foxtrot;
    tango['avatar'] = yankee;
    yankee = {};
    foxtrot = 12;
    yankee['marginRight'] = foxtrot;
    tango['labelDetail'] = yankee;
    yankee = {};
    yankee['marginRight'] = romeo;
    tango['sectionIcon'] = yankee;
    tango = golf.bind(offset)(tango);
    var _closure1_slot10 = tango;
    tango = {};
    tango['MEMBERS'] = verify;
    golf = 'MEMBERS';
    tango[verify] = golf;
    tango['ROLES'] = options;
    golf = 'ROLES';
    tango[options] = golf;
    var _closure1_slot11 = tango;
    tango = 21;
    tango = oscar[tango];
    oscar = report.bind(entity)(tango);
    report = oscar.fileFinishedImporting;
    tango = 'modules/channel_permissions/native/components/ChannelAccessInfo.tsx';
    tango = report.bind(oscar)(tango);
    mike = function(argFoo) { // Original name: ChannelAccessInfo
        _fun101645: for(var _fun101645_ip = 0; ; ) switch(_fun101645_ip) {
 0:
            entity = argFoo;
            output = entity.guild;
            var _closure2_slot0 = output;
            oscar = entity.channel;
            var _closure2_slot1 = oscar;
            tango = undefined;
            var _closure2_slot2 = tango;
            update = function(argFoo, argBar, argBaz, argCorge) { // Original name: renderCounts
                _fun101646: for(var _fun101646_ip = 0; ; ) switch(_fun101646_ip) {
 0:
                    tango = argFoo;
                    report = argBar;
                    entity = 0;
                    if(!(entity !== report)) { _fun101646_ip = 514; continue _fun101646 }
 15:
                    entity = _closure1_slot11;
                    entity = entity.MEMBERS;
                    if(!(entity !== tango)) { _fun101646_ip = 234; continue _fun101646 }
 35:
                    entity = _closure1_slot11;
                    entity = entity.ROLES;
                    if(!(entity !== tango)) { _fun101646_ip = 89; continue _fun101646 }
 49:
                    zulu = _closure1_slot0;
                    mike = _closure1_slot2;
                    entity = 10;
                    mike = mike[entity];
                    entity = undefined;
                    zulu = zulu.bind(entity)(mike);
                    mike = zulu.assertNever;
                    mike = mike.bind(zulu)(tango);
                    verify = undefined;
                    _fun101646_ip = 374; continue _fun101646;
 89:
                    options = 100;
                    if(!(!(report > options))) { _fun101646_ip = 162; continue _fun101646 }
 96:
                    golf = _closure1_slot0;
                    offset = _closure1_slot2;
                    entity = 7;
                    zulu = offset[entity];
                    mike = undefined;
                    zulu = golf.bind(mike)(zulu);
                    tango = zulu.intl;
                    zulu = tango.formatToPlainString;
                    entity = offset[entity];
                    entity = golf.bind(mike)(entity);
                    entity = entity.t;
                    mike = entity.T2BEtr;
                    entity = {};
                    entity['count'] = report;
                    entity = zulu.bind(tango)(mike, entity);
                    _fun101646_ip = 226; continue _fun101646;
 162:
                    offset = _closure1_slot0;
                    yankee = _closure1_slot2;
                    mike = 7;
                    tango = yankee[mike];
                    zulu = undefined;
                    tango = offset.bind(zulu)(tango);
                    golf = tango.intl;
                    tango = golf.formatToPlainString;
                    mike = yankee[mike];
                    mike = offset.bind(zulu)(mike);
                    mike = mike.t;
                    zulu = mike.+OYnFR;
                    mike = {};
                    mike['count'] = options;
                    entity = tango.bind(golf)(zulu, mike);
 226:
                    verify = entity;
                    _fun101646_ip = 374; continue _fun101646;
 234:
                    golf = 100;
                    if(!(!(report > golf))) { _fun101646_ip = 307; continue _fun101646 }
 241:
                    options = _closure1_slot0;
                    offset = _closure1_slot2;
                    entity = 7;
                    zulu = offset[entity];
                    mike = undefined;
                    zulu = options.bind(mike)(zulu);
                    tango = zulu.intl;
                    zulu = tango.formatToPlainString;
                    entity = offset[entity];
                    entity = options.bind(mike)(entity);
                    entity = entity.t;
                    mike = entity.bu5syc;
                    entity = {};
                    entity['count'] = report;
                    entity = zulu.bind(tango)(mike, entity);
                    _fun101646_ip = 371; continue _fun101646;
 307:
                    options = _closure1_slot0;
                    offset = _closure1_slot2;
                    mike = 7;
                    tango = offset[mike];
                    zulu = undefined;
                    tango = options.bind(zulu)(tango);
                    report = tango.intl;
                    tango = report.formatToPlainString;
                    mike = offset[mike];
                    mike = options.bind(zulu)(mike);
                    mike = mike.t;
                    zulu = mike.PR5l09;
                    mike = {};
                    mike['count'] = golf;
                    entity = tango.bind(report)(zulu, mike);
 371:
                    verify = entity;
 374:
                    tango = _closure1_slot8;
                    entity = _closure1_slot3;
                    zulu = entity.Fragment;
                    mike = {};
                    options = _closure1_slot7;
                    golf = {};
                    entity = 'sm';
                    golf['size'] = entity;
                    entity = _closure2_slot2;
                    entity = entity.sectionIcon;
                    golf['style'] = entity;
                    entity = undefined;
                    report = argCorge;
                    golf = options.bind(entity)(report, golf);
                    report = new Array(2);
                    report[0] = golf;
                    golf = _closure1_slot0;
                    yankee = _closure1_slot2;
                    oscar = 11;
                    oscar = yankee[oscar];
                    oscar = golf.bind(entity)(oscar);
                    golf = oscar.Text;
                    oscar = {};
                    offset = _closure2_slot2;
                    offset = offset.labelDetail;
                    oscar['style'] = offset;
                    offset = 'text-sm/medium';
                    oscar['variant'] = offset;
                    oscar['children'] = verify;
                    oscar = options.bind(entity)(golf, oscar);
                    report[1] = oscar;
                    mike['children'] = report;
                    entity = tango.bind(entity)(zulu, mike);
                    return entity;
 514:
                    entity = null;
                    return entity;
                }
            };
            entity = _closure1_slot10;
            result = entity.bind(tango)();
            _closure2_slot2 = result;
            mike = _closure1_slot0;
            zulu = _closure1_slot2;
            record = 7;
            entity = zulu[record];
            entity = mike.bind(tango)(entity);
            golf = entity.intl;
            report = golf.string;
            entity = zulu[record];
            entity = mike.bind(tango)(entity);
            entity = entity.t;
            entity = entity.li1wKS;
            offset = report.bind(golf)(entity);
            entity = 8;
            entity = zulu[entity];
            golf = mike.bind(tango)(entity);
            report = golf.useStateFromStoresArray;
            entity = _closure1_slot6;
            zulu = new Array(1);
            zulu[0] = entity;
            mike = new Array(2);
            mike[0] = output;
            mike[1] = oscar;
            entity = function() {
                tango = _closure1_slot0;
                zulu = _closure1_slot2;
                entity = 9;
                zulu = zulu[entity];
                entity = undefined;
                oscar = tango.bind(entity)(zulu);
                report = oscar.getExistingRoles;
                tango = _closure2_slot0;
                golf = _closure1_slot6;
                zulu = golf.getRoles;
                mike = tango.id;
                offset = zulu.bind(golf)(mike);
                mike = _closure2_slot1;
                options = mike.accessPermissions;
                romeo = oscar;
                yankee = tango;
                verify = mike;
                entity = romeo[report](yankee, offset, verify, options, golf);
                return entity;
            };
            backup = report.bind(golf)(zulu, entity, mike);
            zulu = _closure1_slot5;
            mike = zulu.getMemberIds;
            romeo = null;
            report = romeo == output;
            entity = undefined;
            if(report) { _fun101645_ip = 188; continue _fun101645 }
 183:
            entity = output.id;
 188:
            report = mike.bind(zulu)(entity);
            mike = _closure1_slot0;
            zulu = _closure1_slot2;
            entity = 9;
            entity = zulu[entity];
            zulu = mike.bind(tango)(entity);
            mike = zulu.getExistingMembers;
            context = oscar.accessPermissions;
            sierra = zulu;
            status = report;
            target = oscar;
            papa = output;
            foxtrot = sierra[mike](status, target, papa, context, record);
            mike = backup.length;
            entity = 0;
            mike = entity === mike;
            if(!mike) { _fun101645_ip = 267; continue _fun101645 }
 255:
            report = foxtrot.length;
            zulu = 1;
            mike = zulu === report;
 267:
            if(!mike) { _fun101645_ip = 285; continue _fun101645 }
 270:
            report = output.isOwner;
            zulu = foxtrot[entity];
            mike = report.bind(output)(zulu);
 285:
            vacuum = null;
            if(!mike) { _fun101645_ip = 294; continue _fun101645 }
 290:
            vacuum = foxtrot[entity];
 294:
            zulu = _closure1_slot8;
            mike = _closure1_slot9;
            entity = {};
            yankee = _closure1_slot7;
            golf = _closure1_slot0;
            kilo = _closure1_slot2;
            echo = 11;
            report = kilo[echo];
            report = golf.bind(tango)(report);
            oscar = report.Text;
            report = {};
            sizing = 'eyebrow';
            report['variant'] = sizing;
            report['children'] = offset;
            oscar = yankee.bind(tango)(oscar, report);
            report = new Array(2);
            report[0] = oscar;
            oscar = 12;
            oscar = kilo[oscar];
            oscar = golf.bind(tango)(oscar);
            golf = oscar.PressableOpacity;
            oscar = {};
            oscar['accessibilityLabel'] = offset;
            offset = 'button';
            oscar['accessibilityRole'] = offset;
            options = function() { // Original name: onPress
                zulu = _closure1_slot0;
                mike = _closure1_slot2;
                entity = 13;
                mike = mike[entity];
                entity = undefined;
                report = zulu.bind(entity)(mike);
                tango = report.openChannelMembersActionSheet;
                mike = _closure2_slot1;
                zulu = mike.id;
                mike = mike.guild_id;
                mike = tango.bind(report)(zulu, mike);
                return entity;
            };
            oscar['onPress'] = options;
            options = result.section;
            oscar['style'] = options;
            offset = _closure1_slot4;
            options = {};
            kilo = result.sectionContent;
            options['style'] = kilo;
            if(!(romeo == vacuum)) { _fun101645_ip = 579; continue _fun101645 }
 438:
            romeo = {};
            kilo = _closure1_slot11;
            config = kilo.MEMBERS;
            target = foxtrot.length;
            sequence = _closure1_slot1;
            control = _closure1_slot2;
            foxtrot = 15;
            foxtrot = control[foxtrot];
            foxtrot = sequence.bind(tango)(foxtrot);
            source = _closure1_slot0;
            foxtrot = 16;
            foxtrot = control[foxtrot];
            foxtrot = source.bind(tango)(foxtrot);
            context = foxtrot.GroupIcon;
            sierra = undefined;
            status = config;
            papa = undefined;
            sizing = sierra[update](status, target, papa, context, record);
            foxtrot = new Array(2);
            foxtrot[0] = sizing;
            sizing = kilo.ROLES;
            target = backup.length;
            backup = 17;
            backup = control[backup];
            backup = sequence.bind(tango)(backup);
            backup = 18;
            backup = control[backup];
            backup = source.bind(tango)(backup);
            context = backup.ShieldUserIcon;
            sierra = undefined;
            status = sizing;
            backup = sierra[update](status, target, papa, context, record);
            foxtrot[1] = backup;
            romeo['children'] = foxtrot;
            _fun101645_ip = 833; continue _fun101645;
 579:
            foxtrot = {};
            source = _closure1_slot7;
            kilo = _closure1_slot1;
            control = _closure1_slot2;
            sizing = 14;
            backup = control[sizing];
            kilo = kilo.bind(tango)(backup);
            backup = {};
            result = result.avatar;
            backup['style'] = result;
            backup['user'] = vacuum;
            output = output.id;
            backup['guildId'] = output;
            config = _closure1_slot0;
            sizing = control[sizing];
            sizing = config.bind(tango)(sizing);
            sizing = sizing.AvatarSizes;
            sizing = sizing.XSMALL;
            backup['size'] = sizing;
            kilo = source.bind(tango)(kilo, backup);
            backup = new Array(2);
            backup[0] = kilo;
            output = _closure1_slot8;
            sizing = _closure1_slot4;
            kilo = {};
            result = control[echo];
            result = config.bind(tango)(result);
            update = result.Text;
            result = {};
            sequence = 'text-sm/semibold';
            result['variant'] = sequence;
            vacuum = vacuum.tag;
            result['children'] = vacuum;
            update = source.bind(tango)(update, result);
            result = new Array(2);
            result[0] = update;
            echo = control[echo];
            echo = config.bind(tango)(echo);
            update = echo.Text;
            echo = {};
            vacuum = 'text-xs/medium';
            echo['variant'] = vacuum;
            vacuum = control[record];
            vacuum = config.bind(tango)(vacuum);
            sequence = vacuum.intl;
            vacuum = sequence.string;
            control = control[record];
            control = config.bind(tango)(control);
            control = control.t;
            control = control.rt0ERU;
            control = vacuum.bind(sequence)(control);
            echo['children'] = control;
            echo = source.bind(tango)(update, echo);
            result[1] = echo;
            kilo['children'] = result;
            kilo = output.bind(tango)(sizing, kilo);
            backup[1] = kilo;
            foxtrot['children'] = backup;
            romeo = foxtrot;
 833:
            romeo = zulu.bind(tango)(mike, romeo);
            options['children'] = romeo;
            offset = yankee.bind(tango)(offset, options);
            options = new Array(2);
            options[0] = offset;
            yankee = _closure1_slot7;
            foxtrot = _closure1_slot1;
            backup = _closure1_slot2;
            romeo = 19;
            verify = backup[romeo];
            offset = foxtrot.bind(tango)(verify);
            verify = {};
            kilo = 20;
            kilo = backup[kilo];
            kilo = foxtrot.bind(tango)(kilo);
            verify['source'] = kilo;
            romeo = backup[romeo];
            romeo = foxtrot.bind(tango)(romeo);
            romeo = romeo.Sizes;
            romeo = romeo.SMALL;
            verify['size'] = romeo;
            verify = yankee.bind(tango)(offset, verify);
            options[1] = verify;
            oscar['children'] = options;
            oscar = zulu.bind(tango)(golf, oscar);
            report[1] = oscar;
            entity['children'] = report;
            entity = zulu.bind(tango)(mike, entity);
            return entity;
        }
    };
    zulu['default'] = mike;
    return entity;
})();