// app/modules/media_channel/native/MediaPostMultipleThumbnailActionSheet.tsx
export default (function(argFoo, argBar, argBaz, argCorge, _, argFred, argPlugh) {
    report = argBar;
    romeo = argBaz;
    zulu = argFred;
    oscar = argPlugh;
    var _closure1_slot0 = report;
    var _closure1_slot1 = romeo;
    var _closure1_slot2 = oscar;
    entity = global;
    options = entity.Object;
    golf = options.defineProperty;
    tango = {};
    entity = true;
    tango['value'] = entity;
    entity = '__esModule';
    entity = golf.bind(options)(zulu, entity, tango);
    entity = 0;
    golf = oscar[entity];
    tango = argCorge;
    entity = undefined;
    tango = tango.bind(entity)(golf);
    tango = 1;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.View;
    var _closure1_slot3 = tango;
    tango = 2;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.ContentDismissActionType;
    var _closure1_slot4 = tango;
    tango = 3;
    golf = oscar[tango];
    golf = report.bind(entity)(golf);
    golf = golf.jsx;
    var _closure1_slot5 = golf;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.jsxs;
    var _closure1_slot6 = tango;
    tango = 4;
    tango = oscar[tango];
    options = report.bind(entity)(tango);
    golf = options.createStyles;
    tango = {};
    verify = {'flex': 1, 'backgroundColor': null, 'padding': 24};
    offset = 5;
    yankee = oscar[offset];
    yankee = romeo.bind(entity)(yankee);
    yankee = yankee.colors;
    yankee = yankee.BACKGROUND_SECONDARY;
    verify['backgroundColor'] = yankee;
    yankee = 24;
    tango['container'] = verify;
    verify = {};
    foxtrot = oscar[offset];
    foxtrot = romeo.bind(entity)(foxtrot);
    foxtrot = foxtrot.radii;
    foxtrot = foxtrot.xs;
    verify['borderRadius'] = foxtrot;
    tango['button'] = verify;
    verify = {'flex': 1, 'width': '100%', 'paddingVertical': 40, 'paddingHorizontal': 12};
    foxtrot = oscar[offset];
    foxtrot = romeo.bind(entity)(foxtrot);
    foxtrot = foxtrot.colors;
    foxtrot = foxtrot.TEXT_WARNING;
    verify['backgroundColor'] = foxtrot;
    foxtrot = oscar[offset];
    foxtrot = romeo.bind(entity)(foxtrot);
    foxtrot = foxtrot.radii;
    foxtrot = foxtrot.sm;
    verify['borderRadius'] = foxtrot;
    tango['topContainer'] = verify;
    verify = {'flex': 1, 'flexDirection': 'row', 'padding': 12, 'width': '100%', 'backgroundColor': null, 'borderRadius': null, 'alignItems': 'center', 'justifyContent': 'space-between'};
    foxtrot = oscar[offset];
    foxtrot = romeo.bind(entity)(foxtrot);
    foxtrot = foxtrot.colors;
    foxtrot = foxtrot.BACKGROUND_SECONDARY_ALT;
    verify['backgroundColor'] = foxtrot;
    offset = oscar[offset];
    offset = romeo.bind(entity)(offset);
    offset = offset.radii;
    offset = offset.sm;
    verify['borderRadius'] = offset;
    offset = 'center';
    tango['setAsThumbnailContainer'] = verify;
    verify = {'alignItems': 'center', 'flex': 1};
    tango['contentContainer'] = verify;
    verify = {};
    verify['marginTop'] = yankee;
    tango['title'] = verify;
    verify = {};
    verify['textAlign'] = offset;
    tango['description'] = verify;
    tango = golf.bind(options)(tango);
    var _closure1_slot7 = tango;
    tango = 14;
    tango = oscar[tango];
    oscar = report.bind(entity)(tango);
    report = oscar.fileFinishedImporting;
    tango = 'modules/media_channel/native/MediaPostMultipleThumbnailActionSheet.tsx';
    tango = report.bind(oscar)(tango);
    mike = function(argFoo) { // Original name: MediaPostThumbnailActionSheet
        entity = argFoo;
        entity = entity.markAsDismissed;
        var _closure2_slot0 = entity;
        entity = _closure1_slot7;
        tango = undefined;
        backup = entity.bind(tango)();
        romeo = _closure1_slot1;
        echo = _closure1_slot2;
        entity = 6;
        entity = echo[entity];
        entity = romeo.bind(tango)(entity);
        entity = entity.bind(tango)();
        kilo = entity.bottom;
        zulu = _closure1_slot5;
        result = _closure1_slot0;
        entity = 7;
        entity = echo[entity];
        entity = result.bind(tango)(entity);
        mike = entity.BottomSheet;
        entity = {};
        report = 0.8;
        entity['backdropOpacity'] = report;
        report = function() { // Original name: onDismiss
            zulu = _closure2_slot0;
            entity = _closure1_slot4;
            mike = entity.UNKNOWN;
            entity = undefined;
            entity = zulu.bind(entity)(mike);
            return entity;
        };
        entity['onDismiss'] = report;
        oscar = _closure1_slot3;
        report = {};
        options = backup.container;
        report['style'] = options;
        verify = _closure1_slot6;
        golf = 8;
        golf = echo[golf];
        golf = result.bind(tango)(golf);
        options = golf.BottomSheetScrollView;
        golf = {};
        yankee = backup.contentContainer;
        offset = new Array(2);
        offset[0] = yankee;
        yankee = {};
        yankee['paddingBottom'] = kilo;
        offset[1] = yankee;
        golf['contentContainerStyle'] = offset;
        offset = {};
        yankee = backup.topContainer;
        offset['style'] = yankee;
        yankee = {};
        kilo = backup.setAsThumbnailContainer;
        yankee['style'] = kilo;
        sizing = 9;
        kilo = echo[sizing];
        kilo = result.bind(tango)(kilo);
        update = kilo.Text;
        output = {'variant': 'text-md/semibold', 'color': 'header-primary'};
        kilo = 10;
        source = echo[kilo];
        source = result.bind(tango)(source);
        vacuum = source.intl;
        control = vacuum.string;
        source = echo[kilo];
        source = result.bind(tango)(source);
        source = source.t;
        source = source.ews2pq;
        source = control.bind(vacuum)(source);
        output['children'] = source;
        update = zulu.bind(tango)(update, output);
        output = new Array(2);
        output[0] = update;
        update = 11;
        update = echo[update];
        source = romeo.bind(tango)(update);
        update = {};
        control = true;
        update['selected'] = control;
        update = zulu.bind(tango)(source, update);
        output[1] = update;
        yankee['children'] = output;
        yankee = verify.bind(tango)(oscar, yankee);
        offset['children'] = yankee;
        yankee = zulu.bind(tango)(oscar, offset);
        offset = new Array(6);
        offset[0] = yankee;
        yankee = echo[sizing];
        yankee = result.bind(tango)(yankee);
        output = yankee.Text;
        yankee = {'variant': 'heading-lg/semibold', 'color': 'header-primary'};
        update = backup.title;
        yankee['style'] = update;
        update = echo[kilo];
        update = result.bind(tango)(update);
        control = update.intl;
        source = control.string;
        update = echo[kilo];
        update = result.bind(tango)(update);
        update = update.t;
        update = update.WJisio;
        update = source.bind(control)(update);
        yankee['children'] = update;
        yankee = zulu.bind(tango)(output, yankee);
        offset[1] = yankee;
        yankee = 12;
        output = echo[yankee];
        update = romeo.bind(tango)(output);
        output = {};
        output['size'] = yankee;
        output = zulu.bind(tango)(update, output);
        offset[2] = output;
        sizing = echo[sizing];
        sizing = result.bind(tango)(sizing);
        output = sizing.Text;
        sizing = {'variant': 'text-md/normal', 'color': 'text-normal'};
        update = backup.description;
        sizing['style'] = update;
        update = echo[kilo];
        update = result.bind(tango)(update);
        control = update.intl;
        source = control.string;
        update = echo[kilo];
        update = result.bind(tango)(update);
        update = update.t;
        update = update.X6ZH6e;
        update = source.bind(control)(update);
        sizing['children'] = update;
        sizing = zulu.bind(tango)(output, sizing);
        offset[3] = sizing;
        yankee = echo[yankee];
        sizing = romeo.bind(tango)(yankee);
        yankee = {};
        output = 48;
        yankee['size'] = output;
        yankee = zulu.bind(tango)(sizing, yankee);
        offset[4] = yankee;
        yankee = 13;
        yankee = echo[yankee];
        romeo = romeo.bind(tango)(yankee);
        yankee = {};
        sizing = echo[kilo];
        sizing = result.bind(tango)(sizing);
        output = sizing.intl;
        sizing = output.string;
        kilo = echo[kilo];
        kilo = result.bind(tango)(kilo);
        kilo = kilo.t;
        kilo = kilo.NX+WJC;
        kilo = sizing.bind(output)(kilo);
        yankee['text'] = kilo;
        backup = backup.button;
        yankee['style'] = backup;
        foxtrot = function() { // Original name: onPress
            zulu = _closure2_slot0;
            entity = _closure1_slot4;
            mike = entity.UNKNOWN;
            entity = undefined;
            entity = zulu.bind(entity)(mike);
            return entity;
        };
        yankee['onPress'] = foxtrot;
        yankee = zulu.bind(tango)(romeo, yankee);
        offset[5] = yankee;
        golf['children'] = offset;
        golf = verify.bind(tango)(options, golf);
        report['children'] = golf;
        report = zulu.bind(tango)(oscar, report);
        entity['children'] = report;
        entity = zulu.bind(tango)(mike, entity);
        return entity;
    };
    zulu['default'] = mike;
    return entity;
})();