// app/modules/relationships/native/BlockConfirmationActionSheet.tsx
export default (function(argFoo, argBar, argBaz, argCorge, _, argFred, argPlugh) {
    report = argBar;
    offset = argBaz;
    zulu = argFred;
    oscar = argPlugh;
    var _closure1_slot0 = report;
    var _closure1_slot1 = offset;
    var _closure1_slot2 = oscar;
    entity = function() { // Original name: BlockedInformationTable
        tango = _closure1_slot16;
        mike = _closure1_slot0;
        zulu = _closure1_slot2;
        entity = 15;
        entity = zulu[entity];
        zulu = undefined;
        entity = mike.bind(zulu)(entity);
        mike = entity.TableRowGroup;
        entity = {};
        golf = _closure1_slot19;
        oscar = golf.map;
        report = function(argFoo, argBar) {
            golf = argFoo;
            report = argBar;
            tango = _closure1_slot16;
            mike = _closure1_slot0;
            romeo = _closure1_slot2;
            entity = 16;
            entity = romeo[entity];
            zulu = undefined;
            entity = mike.bind(zulu)(entity);
            mike = entity.TableRow;
            entity = {};
            options = 0;
            options = options === report;
            entity['start'] = options;
            options = _closure1_slot19;
            verify = options.length;
            options = 1;
            options = verify - options;
            options = options === report;
            entity['end'] = options;
            verify = _closure1_slot16;
            yankee = _closure1_slot1;
            offset = 17;
            oscar = romeo[offset];
            options = yankee.bind(zulu)(oscar);
            oscar = {};
            offset = romeo[offset];
            offset = yankee.bind(zulu)(offset);
            offset = offset.Sizes;
            offset = offset.MEDIUM;
            oscar['size'] = offset;
            offset = golf.icon;
            oscar['source'] = offset;
            oscar = verify.bind(zulu)(options, oscar);
            entity['icon'] = oscar;
            oscar = golf.text;
            oscar = oscar.bind(golf)();
            entity['label'] = oscar;
            oscar = golf.subtext;
            oscar = oscar.bind(golf)();
            entity['subLabel'] = oscar;
            entity = tango.bind(zulu)(mike, entity, report);
            return entity;
        };
        report = oscar.bind(golf)(report);
        entity['children'] = report;
        entity = tango.bind(zulu)(mike, entity);
        return entity;
    };
    var _closure1_slot20 = entity;
    entity = global;
    options = entity.Object;
    golf = options.defineProperty;
    tango = {};
    entity = true;
    tango['value'] = entity;
    entity = '__esModule';
    entity = golf.bind(options)(zulu, entity, tango);
    entity = 0;
    tango = oscar[entity];
    entity = undefined;
    tango = offset.bind(entity)(tango);
    var _closure1_slot3 = tango;
    backup = 1;
    golf = oscar[backup];
    tango = argCorge;
    golf = tango.bind(entity)(golf);
    var _closure1_slot4 = golf;
    tango = 2;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    options = tango.Linking;
    var _closure1_slot5 = options;
    tango = tango.View;
    var _closure1_slot6 = tango;
    tango = 3;
    tango = oscar[tango];
    tango = offset.bind(entity)(tango);
    var _closure1_slot7 = tango;
    tango = 4;
    tango = oscar[tango];
    tango = offset.bind(entity)(tango);
    var _closure1_slot8 = tango;
    tango = 5;
    tango = oscar[tango];
    tango = offset.bind(entity)(tango);
    var _closure1_slot9 = tango;
    tango = 6;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.UserRemediationAction;
    var _closure1_slot10 = tango;
    tango = 7;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    options = tango.IGNORE_CONFIRMATION_ACTION_SHEET_KEY;
    var _closure1_slot11 = options;
    tango = tango.RESTRICTION_CONFIRMATION_ACTION_SHEET_HEIGHT;
    var _closure1_slot12 = tango;
    tango = 8;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    options = tango.HelpdeskArticles;
    var _closure1_slot13 = options;
    options = tango.AnalyticEvents;
    var _closure1_slot14 = options;
    tango = tango.RelationshipTypes;
    var _closure1_slot15 = tango;
    tango = 9;
    options = oscar[tango];
    options = report.bind(entity)(options);
    options = options.jsx;
    var _closure1_slot16 = options;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.jsxs;
    var _closure1_slot17 = tango;
    tango = 10;
    tango = oscar[tango];
    verify = report.bind(entity)(tango);
    options = verify.createStyles;
    tango = {};
    foxtrot = 'center';
    yankee = {'alignContent': 'center', 'textAlign': 'center'};
    tango['button'] = yankee;
    yankee = {};
    romeo = 11;
    kilo = oscar[romeo];
    kilo = offset.bind(entity)(kilo);
    kilo = kilo.spacing;
    kilo = kilo.PX_16;
    yankee['marginBottom'] = kilo;
    tango['tableContainer'] = yankee;
    yankee = {};
    kilo = oscar[romeo];
    kilo = offset.bind(entity)(kilo);
    kilo = kilo.spacing;
    kilo = kilo.PX_24;
    yankee['marginBottom'] = kilo;
    tango['otherOptions'] = yankee;
    yankee = {};
    yankee['textAlign'] = foxtrot;
    tango['bodyText'] = yankee;
    yankee = {};
    yankee['textAlign'] = foxtrot;
    tango['headerText'] = yankee;
    yankee = {};
    yankee['flex'] = backup;
    backup = oscar[romeo];
    backup = offset.bind(entity)(backup);
    backup = backup.spacing;
    backup = backup.PX_16;
    yankee['paddingHorizontal'] = backup;
    backup = oscar[romeo];
    backup = offset.bind(entity)(backup);
    backup = backup.spacing;
    backup = backup.PX_16;
    yankee['paddingTop'] = backup;
    tango['container'] = yankee;
    yankee = {};
    backup = oscar[romeo];
    backup = offset.bind(entity)(backup);
    backup = backup.spacing;
    backup = backup.PX_16;
    yankee['marginBottom'] = backup;
    tango['header'] = yankee;
    yankee = {'position': 'relative', 'alignSelf': 'center'};
    backup = oscar[romeo];
    backup = offset.bind(entity)(backup);
    backup = backup.spacing;
    backup = backup.PX_16;
    yankee['marginBottom'] = backup;
    tango['avatarContainer'] = yankee;
    yankee = {'position': 'absolute', 'bottom': 4294967288, 'right': 4294967288};
    backup = oscar[romeo];
    backup = offset.bind(entity)(backup);
    backup = backup.spacing;
    backup = backup.PX_4;
    yankee['padding'] = backup;
    backup = oscar[romeo];
    backup = offset.bind(entity)(backup);
    backup = backup.colors;
    backup = backup.BG_SURFACE_RAISED;
    yankee['backgroundColor'] = backup;
    backup = oscar[romeo];
    backup = offset.bind(entity)(backup);
    backup = backup.radii;
    backup = backup.round;
    yankee['borderRadius'] = backup;
    tango['avatarIconContainer'] = yankee;
    yankee = {};
    yankee['alignSelf'] = foxtrot;
    tango['avatar'] = yankee;
    yankee = {};
    yankee['textAlign'] = foxtrot;
    romeo = oscar[romeo];
    romeo = offset.bind(entity)(romeo);
    romeo = romeo.spacing;
    romeo = romeo.PX_12;
    yankee['marginTop'] = romeo;
    tango['footerText'] = yankee;
    tango = options.bind(verify)(tango);
    var _closure1_slot18 = tango;
    options = {};
    verify = 12;
    tango = oscar[verify];
    tango = offset.bind(entity)(tango);
    options['icon'] = tango;
    tango = function() { // Original name: text
        report = _closure1_slot0;
        oscar = _closure1_slot2;
        entity = 13;
        mike = oscar[entity];
        tango = undefined;
        mike = report.bind(tango)(mike);
        zulu = mike.intl;
        mike = zulu.string;
        entity = oscar[entity];
        entity = report.bind(tango)(entity);
        entity = entity.t;
        entity = entity.fjFJFR;
        entity = mike.bind(zulu)(entity);
        return entity;
    };
    options['text'] = tango;
    tango = function() { // Original name: subtext
        report = _closure1_slot0;
        oscar = _closure1_slot2;
        entity = 13;
        mike = oscar[entity];
        tango = undefined;
        mike = report.bind(tango)(mike);
        zulu = mike.intl;
        mike = zulu.string;
        entity = oscar[entity];
        entity = report.bind(tango)(entity);
        entity = entity.t;
        entity = entity.8SIMPz;
        entity = mike.bind(zulu)(entity);
        return entity;
    };
    options['subtext'] = tango;
    tango = new Array(3);
    tango[0] = options;
    options = {};
    verify = oscar[verify];
    verify = offset.bind(entity)(verify);
    options['icon'] = verify;
    verify = function() { // Original name: text
        report = _closure1_slot0;
        oscar = _closure1_slot2;
        entity = 13;
        mike = oscar[entity];
        tango = undefined;
        mike = report.bind(tango)(mike);
        zulu = mike.intl;
        mike = zulu.string;
        entity = oscar[entity];
        entity = report.bind(tango)(entity);
        entity = entity.t;
        entity = entity.QCrmqa;
        entity = mike.bind(zulu)(entity);
        return entity;
    };
    options['text'] = verify;
    verify = function() { // Original name: subtext
        report = _closure1_slot0;
        oscar = _closure1_slot2;
        entity = 13;
        mike = oscar[entity];
        tango = undefined;
        mike = report.bind(tango)(mike);
        zulu = mike.intl;
        mike = zulu.string;
        entity = oscar[entity];
        entity = report.bind(tango)(entity);
        entity = entity.t;
        entity = entity.TKDMoK;
        entity = mike.bind(zulu)(entity);
        return entity;
    };
    options['subtext'] = verify;
    tango[1] = options;
    options = {};
    verify = 14;
    verify = oscar[verify];
    verify = offset.bind(entity)(verify);
    options['icon'] = verify;
    verify = function() { // Original name: text
        report = _closure1_slot0;
        oscar = _closure1_slot2;
        entity = 13;
        mike = oscar[entity];
        tango = undefined;
        mike = report.bind(tango)(mike);
        zulu = mike.intl;
        mike = zulu.string;
        entity = oscar[entity];
        entity = report.bind(tango)(entity);
        entity = entity.t;
        entity = entity.lkm/argBaz;
        entity = mike.bind(zulu)(entity);
        return entity;
    };
    options['text'] = verify;
    verify = function() { // Original name: subtext
        report = _closure1_slot0;
        oscar = _closure1_slot2;
        entity = 13;
        mike = oscar[entity];
        tango = undefined;
        mike = report.bind(tango)(mike);
        zulu = mike.intl;
        mike = zulu.string;
        entity = oscar[entity];
        entity = report.bind(tango)(entity);
        entity = entity.t;
        entity = entity.8j3qaG;
        entity = mike.bind(zulu)(entity);
        return entity;
    };
    options['subtext'] = verify;
    tango[2] = options;
    var _closure1_slot19 = tango;
    tango = golf.memo;
    mike = function(argFoo) { // Original name: BlockConfirmationActionSheet
        _fun77318: for(var _fun77318_ip = 0; ; ) switch(_fun77318_ip) {
 0:
            mike = argFoo;
            entity = mike.userId;
            var _closure2_slot0 = entity;
            variable37 = mike.channelId;
            var _closure2_slot1 = variable37;
            zulu = mike.onBlock;
            var _closure2_slot2 = zulu;
            zulu = mike.onIgnore;
            var _closure2_slot3 = zulu;
            mike = mike.onSuccess;
            var _closure2_slot4 = mike;
            mike = _closure1_slot18;
            report = undefined;
            control = mike.bind(report)();
            oscar = _closure1_slot1;
            options = _closure1_slot2;
            mike = 18;
            mike = options[mike];
            mike = oscar.bind(report)(mike);
            mike = mike.bind(report)();
            yankee = mike.bottom;
            mike = 19;
            zulu = options[mike];
            tango = oscar.bind(report)(zulu);
            zulu = 20;
            zulu = options[zulu];
            zulu = oscar.bind(report)(zulu);
            oscar = zulu.IGNORE_CONFIRMATION_ACTION_SHEET;
            zulu = new Array(1);
            zulu[0] = oscar;
            zulu = tango.bind(report)(zulu);
            oscar = zulu.analyticsLocations;
            golf = _closure1_slot4;
            zulu = golf.useState;
            config = false;
            verify = zulu.bind(golf)(config);
            tango = _closure1_slot3;
            zulu = 2;
            tango = tango.bind(report)(verify, zulu);
            zulu = 0;
            vacuum = tango[zulu];
            zulu = 1;
            zulu = tango[zulu];
            var _closure2_slot5 = zulu;
            tango = _closure1_slot0;
            zulu = 21;
            verify = options[zulu];
            backup = tango.bind(report)(verify);
            foxtrot = backup.useStateFromStores;
            verify = _closure1_slot9;
            romeo = new Array(1);
            romeo[0] = verify;
            offset = new Array(1);
            offset[0] = entity;
            verify = function() {
                zulu = _closure1_slot9;
                mike = zulu.getUser;
                entity = _closure2_slot0;
                entity = mike.bind(zulu)(entity);
                return entity;
            };
            variable36 = foxtrot.bind(backup)(romeo, verify, offset);
            var _closure2_slot6 = variable36;
            verify = options[zulu];
            backup = tango.bind(report)(verify);
            foxtrot = backup.useStateFromStores;
            verify = _closure1_slot8;
            romeo = new Array(1);
            romeo[0] = verify;
            offset = new Array(1);
            offset[0] = entity;
            verify = function() {
                zulu = _closure1_slot8;
                mike = zulu.isIgnored;
                entity = _closure2_slot0;
                entity = mike.bind(zulu)(entity);
                return entity;
            };
            foxtrot = foxtrot.bind(backup)(romeo, verify, offset);
            zulu = options[zulu];
            offset = tango.bind(report)(zulu);
            verify = offset.useStateFromStores;
            zulu = _closure1_slot7;
            options = new Array(1);
            options[0] = zulu;
            tango = new Array(1);
            tango[0] = variable37;
            zulu = function() {
                _fun77321: for(var _fun77321_ip = 0; ; ) switch(_fun77321_ip) {
 0:
                    zulu = _closure1_slot7;
                    mike = zulu.getChannel;
                    entity = _closure2_slot1;
                    mike = mike.bind(zulu)(entity);
                    entity = null;
                    zulu = entity == mike;
                    entity = undefined;
                    if(zulu) { _fun77321_ip = 40; continue _fun77321 }
 35:
                    entity = mike.guild_id;
 40:
                    return entity;
                }
            };
            quebec = verify.bind(offset)(options, zulu, tango);
            tango = golf.useEffect;
            zulu = new Array(2);
            zulu[0] = variable36;
            zulu[1] = entity;
            entity = function() {
                _fun77322: for(var _fun77322_ip = 0; ; ) switch(_fun77322_ip) {
 0:
                    zulu = _closure2_slot6;
                    mike = null;
                    if(!(mike == zulu)) { _fun77322_ip = 53; continue _fun77322 }
 13:
                    tango = _closure1_slot0;
                    zulu = _closure1_slot2;
                    mike = 22;
                    zulu = zulu[mike];
                    mike = undefined;
                    zulu = tango.bind(mike)(zulu);
                    mike = zulu.getUser;
                    entity = _closure2_slot0;
                    entity = mike.bind(zulu)(entity);
 53:
                    entity = undefined;
                    return entity;
                }
            };
            entity = tango.bind(golf)(entity, zulu);
            entity = null;
            zulu = entity == variable36;
            if(zulu) { _fun77318_ip = 1851; continue _fun77318 }
 387:
            tango = _closure1_slot16;
            golf = _closure1_slot0;
            verify = _closure1_slot2;
            mike = verify[mike];
            mike = golf.bind(report)(mike);
            zulu = mike.AnalyticsLocationProvider;
            mike = {};
            mike['value'] = oscar;
            options = _closure1_slot16;
            oscar = 23;
            oscar = verify[oscar];
            oscar = golf.bind(report)(oscar);
            golf = oscar.BottomSheet;
            oscar = {};
            verify = function() { // Original name: onDismiss
                zulu = _closure1_slot1;
                mike = _closure1_slot2;
                entity = 24;
                mike = mike[entity];
                entity = undefined;
                report = zulu.bind(entity)(mike);
                tango = report.track;
                mike = _closure1_slot14;
                zulu = mike.USER_REMEDIATION_ACTION;
                mike = {};
                oscar = _closure1_slot10;
                oscar = oscar.DISMISS_BLOCK;
                mike['action'] = oscar;
                oscar = 'user-profile-context-menu';
                mike['location'] = oscar;
                mike = tango.bind(report)(zulu, mike);
                return entity;
            };
            oscar['onDismiss'] = verify;
            papa = true;
            oscar['scrollable'] = papa;
            verify = 485;
            if(foxtrot) { _fun77318_ip = 476; continue _fun77318 }
 472:
            verify = _closure1_slot12;
 476:
            romeo = verify + yankee;
            whiskey = _closure1_slot1;
            update = _closure1_slot2;
            offset = 11;
            verify = update[offset];
            verify = whiskey.bind(report)(verify);
            verify = verify.spacing;
            verify = verify.PX_24;
            romeo = romeo + verify;
            verify = update[offset];
            verify = whiskey.bind(report)(verify);
            verify = verify.spacing;
            verify = verify.PX_24;
            verify = romeo + verify;
            oscar['startHeight'] = verify;
            verify = {};
            offset = update[offset];
            offset = whiskey.bind(report)(offset);
            offset = offset.spacing;
            offset = offset.PX_24;
            offset = offset + yankee;
            verify['paddingBottom'] = offset;
            variable39 = control.container;
            variable40 = verify;
            offset = copyDataProperties(variable40, variable39);
            oscar['bodyStyles'] = verify;
            yankee = _closure1_slot17;
            context = _closure1_slot0;
            verify = 25;
            verify = update[verify];
            verify = context.bind(report)(verify);
            offset = verify.BottomSheetScrollView;
            verify = {};
            sizing = _closure1_slot6;
            romeo = {};
            backup = control.header;
            romeo['style'] = backup;
            backup = {};
            kilo = control.avatarContainer;
            backup['style'] = kilo;
            echo = _closure1_slot16;
            source = 26;
            kilo = update[source];
            result = whiskey.bind(report)(kilo);
            kilo = {};
            kilo['guildId'] = report;
            kilo['user'] = variable36;
            kilo['animate'] = config;
            source = update[source];
            source = context.bind(report)(source);
            source = source.AvatarSizes;
            source = source.XLARGE;
            kilo['size'] = source;
            source = control.avatar;
            kilo['style'] = source;
            result = echo.bind(report)(result, kilo);
            kilo = new Array(2);
            kilo[0] = result;
            echo = _closure1_slot16;
            result = {};
            source = control.avatarIconContainer;
            result['style'] = source;
            record = _closure1_slot16;
            equality = 17;
            source = update[equality];
            config = whiskey.bind(report)(source);
            source = {};
            target = update[equality];
            target = whiskey.bind(report)(target);
            target = target.Sizes;
            target = target.MEDIUM;
            source['size'] = target;
            target = 27;
            target = update[target];
            target = whiskey.bind(report)(target);
            source['source'] = target;
            source = record.bind(report)(config, source);
            result['children'] = source;
            result = echo.bind(report)(sizing, result);
            kilo[1] = result;
            backup['children'] = kilo;
            kilo = yankee.bind(report)(sizing, backup);
            backup = new Array(3);
            backup[0] = kilo;
            source = _closure1_slot16;
            kilo = 28;
            result = update[kilo];
            result = context.bind(report)(result);
            echo = result.Text;
            result = {'style': null, 'variant': 'heading-xl/bold', 'color': 'header-primary', 'accessibilityRole': 'header'};
            config = control.headerText;
            result['style'] = config;
            config = 13;
            record = update[config];
            record = context.bind(report)(record);
            sierra = record.intl;
            status = sierra.format;
            record = update[config];
            record = context.bind(report)(record);
            record = record.t;
            target = record.CIbzHR;
            record = {};
            lima = 29;
            lima = update[lima];
            whiskey = whiskey.bind(report)(lima);
            lima = whiskey.getName;
            lima = lima.bind(whiskey)(quebec, variable37, variable36);
            record['username'] = lima;
            record = status.bind(sierra)(target, record);
            result['children'] = record;
            result = source.bind(report)(echo, result);
            backup[1] = result;
            echo = _closure1_slot16;
            kilo = update[kilo];
            kilo = context.bind(report)(kilo);
            result = kilo.Text;
            kilo = {'style': null, 'variant': 'heading-md/medium', 'color': 'header-secondary'};
            source = control.headerText;
            kilo['style'] = source;
            source = update[config];
            source = context.bind(report)(source);
            record = source.intl;
            source = record.string;
            update = update[config];
            update = context.bind(report)(update);
            update = update.t;
            update = update.S70joq;
            update = source.bind(record)(update);
            kilo['children'] = update;
            kilo = echo.bind(report)(result, kilo);
            backup[2] = kilo;
            romeo['children'] = backup;
            backup = yankee.bind(report)(sizing, romeo);
            romeo = new Array(4);
            romeo[0] = backup;
            kilo = _closure1_slot16;
            backup = {};
            result = control.tableContainer;
            backup['style'] = result;
            update = _closure1_slot16;
            echo = _closure1_slot20;
            result = {};
            result = update.bind(report)(echo, result);
            backup['children'] = result;
            backup = kilo.bind(report)(sizing, backup);
            romeo[1] = backup;
            foxtrot = !foxtrot;
            if(!foxtrot) { _fun77318_ip = 1536; continue _fun77318 }
 1155:
            sizing = _closure1_slot16;
            kilo = _closure1_slot6;
            backup = {};
            result = control.otherOptions;
            backup['style'] = result;
            update = _closure1_slot16;
            lima = _closure1_slot0;
            target = _closure1_slot2;
            result = 15;
            result = target[result];
            result = lima.bind(report)(result);
            echo = result.TableRowGroup;
            result = {};
            source = target[config];
            source = lima.bind(report)(source);
            context = source.intl;
            record = context.string;
            source = target[config];
            source = lima.bind(report)(source);
            source = source.t;
            source = source.+BJTcH;
            source = record.bind(context)(source);
            result['title'] = source;
            context = _closure1_slot16;
            source = 16;
            source = target[source];
            source = lima.bind(report)(source);
            record = source.TableRow;
            source = {};
            whiskey = _closure1_slot16;
            quebec = _closure1_slot1;
            status = target[equality];
            sierra = quebec.bind(report)(status);
            status = {};
            equality = target[equality];
            equality = quebec.bind(report)(equality);
            equality = equality.Sizes;
            equality = equality.MEDIUM;
            status['size'] = equality;
            equality = 30;
            equality = target[equality];
            equality = quebec.bind(report)(equality);
            status['source'] = equality;
            status = whiskey.bind(report)(sierra, status);
            source['icon'] = status;
            status = target[config];
            status = lima.bind(report)(status);
            whiskey = status.intl;
            sierra = whiskey.string;
            status = target[config];
            status = lima.bind(report)(status);
            status = status.t;
            status = status.hC8tcX;
            status = sierra.bind(whiskey)(status);
            source['label'] = status;
            status = target[config];
            status = lima.bind(report)(status);
            whiskey = status.intl;
            sierra = whiskey.string;
            status = target[config];
            status = lima.bind(report)(status);
            status = status.t;
            status = status.If89rK;
            status = sierra.bind(whiskey)(status);
            source['subLabel'] = status;
            status = target[config];
            status = lima.bind(report)(status);
            sierra = status.intl;
            status = sierra.string;
            target = target[config];
            target = lima.bind(report)(target);
            target = target.t;
            target = target.8qGQsL;
            target = status.bind(sierra)(target);
            source['accessibilityLabel'] = target;
            target = function() { // Original name: onPress
                tango = _closure1_slot1;
                verify = _closure1_slot2;
                entity = 24;
                zulu = verify[entity];
                entity = undefined;
                golf = tango.bind(entity)(zulu);
                oscar = golf.track;
                zulu = _closure1_slot14;
                report = zulu.USER_REMEDIATION_ACTION;
                zulu = {};
                options = _closure1_slot10;
                options = options.GOTO_IGNORE;
                zulu['action'] = options;
                options = 'user-profile-context-menu';
                zulu['location'] = options;
                zulu = oscar.bind(golf)(report, zulu);
                zulu = 31;
                zulu = verify[zulu];
                golf = tango.bind(entity)(zulu);
                oscar = golf.openLazy;
                options = _closure1_slot0;
                zulu = 33;
                zulu = verify[zulu];
                report = options.bind(entity)(zulu);
                zulu = 32;
                tango = verify[zulu];
                zulu = verify.paths;
                report = report.bind(entity)(tango, zulu);
                foxtrot = _closure1_slot11;
                zulu = {};
                offset = _closure2_slot0;
                zulu['userId'] = offset;
                offset = _closure2_slot1;
                zulu['channelId'] = offset;
                offset = _closure2_slot4;
                zulu['onSuccess'] = offset;
                mike = _closure2_slot3;
                zulu['onIgnore'] = mike;
                mike = 34;
                mike = verify[mike];
                mike = options.bind(entity)(mike);
                mike = mike.ImpressionNames;
                mike = mike.IGNORE_USER_CONFIRMATION;
                zulu['impressionName'] = mike;
                yankee = 'replaceTopSheet';
                kilo = golf;
                backup = report;
                romeo = zulu;
                mike = kilo[oscar](backup, foxtrot, romeo, yankee, offset);
                return entity;
            };
            source['onPress'] = target;
            source['arrow'] = papa;
            source = context.bind(report)(record, source);
            result['children'] = source;
            result = update.bind(report)(echo, result);
            backup['children'] = result;
            foxtrot = sizing.bind(report)(kilo, backup);
 1536:
            romeo[2] = foxtrot;
            kilo = _closure1_slot17;
            backup = _closure1_slot6;
            foxtrot = {};
            sizing = control.button;
            foxtrot['style'] = sizing;
            echo = _closure1_slot16;
            source = _closure1_slot0;
            update = _closure1_slot2;
            sizing = 35;
            sizing = update[sizing];
            sizing = source.bind(report)(sizing);
            result = sizing.Button;
            sizing = {'size': 'lg', 'variant': 'destructive'};
            record = update[config];
            record = source.bind(report)(record);
            papa = record.intl;
            context = papa.string;
            record = update[config];
            record = source.bind(report)(record);
            record = record.t;
            record = record.l4EmaW;
            record = context.bind(papa)(record);
            sizing['text'] = record;
            record = function() { // Original name: onPress
                _fun77325: for(var _fun77325_ip = 0; ; ) switch(_fun77325_ip) {
 0:
                    tango = _closure2_slot5;
                    entity = undefined;
                    mike = true;
                    mike = tango.bind(entity)(mike);
                    verify = _closure1_slot1;
                    offset = _closure1_slot2;
                    tango = 36;
                    tango = offset[tango];
                    oscar = verify.bind(entity)(tango);
                    report = oscar.addRelationship;
                    tango = {};
                    golf = _closure2_slot0;
                    tango['userId'] = golf;
                    golf = _closure1_slot15;
                    golf = golf.BLOCKED;
                    tango['type'] = golf;
                    golf = {};
                    options = 20;
                    options = offset[options];
                    options = verify.bind(entity)(options);
                    options = options.BLOCK_CONFIRMATION_ACTION_SHEET;
                    golf['location'] = options;
                    tango['context'] = golf;
                    oscar = report.bind(oscar)(tango);
                    report = oscar.then;
                    tango = function() {
                        _fun77326: for(var _fun77326_ip = 0; ; ) switch(_fun77326_ip) {
 0:
                            tango = _closure1_slot1;
                            zulu = _closure1_slot2;
                            entity = 37;
                            zulu = zulu[entity];
                            entity = undefined;
                            golf = tango.bind(entity)(zulu);
                            oscar = golf.showBlockSuccessToast;
                            report = _closure2_slot0;
                            tango = _closure2_slot1;
                            tango = oscar.bind(golf)(report, tango);
                            report = _closure2_slot4;
                            tango = null;
                            if(!(tango != report)) { _fun77326_ip = 66; continue _fun77326 }
 58:
                            zulu = _closure2_slot4;
                            zulu = zulu.bind(entity)();
 66:
                            zulu = _closure1_slot1;
                            tango = _closure1_slot2;
                            mike = 31;
                            mike = tango[mike];
                            zulu = zulu.bind(entity)(mike);
                            mike = zulu.hideActionSheet;
                            mike = mike.bind(zulu)();
                            return entity;
                        }
                    };
                    tango = report.bind(oscar)(tango);
                    report = _closure2_slot2;
                    tango = null;
                    if(!(tango != report)) { _fun77325_ip = 139; continue _fun77325 }
 131:
                    zulu = _closure2_slot2;
                    zulu = zulu.bind(entity)();
 139:
                    tango = _closure1_slot1;
                    report = _closure1_slot2;
                    zulu = 24;
                    zulu = report[zulu];
                    tango = tango.bind(entity)(zulu);
                    zulu = tango.track;
                    mike = _closure1_slot14;
                    mike = mike.BLOCK_USER_CONFIRMED;
                    mike = zulu.bind(tango)(mike);
                    return entity;
                }
            };
            sizing['onPress'] = record;
            sizing['disabled'] = vacuum;
            sizing['loading'] = vacuum;
            result = echo.bind(report)(result, sizing);
            sizing = new Array(2);
            sizing[0] = result;
            echo = _closure1_slot16;
            output = 38;
            output = update[output];
            output = source.bind(report)(output);
            result = output.TextWithIOSLinkWorkaround;
            output = {'style': null, 'variant': 'text-sm/normal', 'color': 'header-secondary'};
            control = control.footerText;
            output['style'] = control;
            control = update[config];
            control = source.bind(report)(control);
            vacuum = control.intl;
            control = vacuum.format;
            update = update[config];
            update = source.bind(report)(update);
            update = update.t;
            source = update.CpTgBg;
            update = {};
            sequence = function() { // Original name: articleLink
                tango = _closure1_slot1;
                report = _closure1_slot2;
                entity = 31;
                zulu = report[entity];
                entity = undefined;
                oscar = tango.bind(entity)(zulu);
                zulu = oscar.hideActionSheet;
                zulu = zulu.bind(oscar)();
                zulu = 39;
                zulu = report[zulu];
                report = tango.bind(entity)(zulu);
                tango = report.getArticleURL;
                zulu = _closure1_slot13;
                zulu = zulu.STEALTH_REMEDIATION_FEATURE_GUIDE;
                tango = tango.bind(report)(zulu);
                zulu = _closure1_slot5;
                mike = zulu.openURL;
                mike = mike.bind(zulu)(tango);
                return entity;
            };
            update['articleLink'] = sequence;
            update = control.bind(vacuum)(source, update);
            output['children'] = update;
            output = echo.bind(report)(result, output);
            sizing[1] = output;
            foxtrot['children'] = sizing;
            foxtrot = kilo.bind(report)(backup, foxtrot);
            romeo[3] = foxtrot;
            verify['children'] = romeo;
            verify = yankee.bind(report)(offset, verify);
            oscar['children'] = verify;
            oscar = options.bind(report)(golf, oscar);
            mike['children'] = oscar;
            entity = tango.bind(report)(zulu, mike);
 1851:
            return entity;
        }
    };
    mike = tango.bind(golf)(mike);
    tango = 40;
    tango = oscar[tango];
    oscar = report.bind(entity)(tango);
    report = oscar.fileFinishedImporting;
    tango = 'modules/relationships/native/BlockConfirmationActionSheet.tsx';
    tango = report.bind(oscar)(tango);
    zulu['default'] = mike;
    return entity;
})();