// app/modules/relationships/native/BlockConfirmationActionSheet.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    report = argBar;
    offset = argBaz;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    var _closure1_slot1 = offset;
    var _closure1_slot2 = oscard;
    entity = function() { // Original name: BlockedInformationTable
        tangon = _closure1_slot15;
        michal = _closure1_slot0;
        zuuluu = _closure1_slot2;
        entity = 15;
        entity = zuuluu[entity];
        zuuluu = undefined;
        entity = michal.bind(zuuluu)(entity);
        michal = entity.TableRowGroup;
        entity = {};
        golfie = _closure1_slot18;
        oscard = golfie.map;
        report = function(argFoo, argBar) {
            golfie = argFoo;
            report = argBar;
            tangon = _closure1_slot15;
            michal = _closure1_slot0;
            romeon = _closure1_slot2;
            entity = 16;
            entity = romeon[entity];
            zuuluu = undefined;
            entity = michal.bind(zuuluu)(entity);
            michal = entity.TableRow;
            entity = {};
            option = 0;
            option = option === report;
            entity['start'] = option;
            option = _closure1_slot18;
            verify = option.length;
            option = 1;
            option = verify - option;
            option = option === report;
            entity['end'] = option;
            verify = _closure1_slot15;
            yankee = _closure1_slot1;
            offset = 17;
            oscard = romeon[offset];
            option = yankee.bind(zuuluu)(oscard);
            oscard = {};
            offset = romeon[offset];
            offset = yankee.bind(zuuluu)(offset);
            offset = offset.Sizes;
            offset = offset.MEDIUM;
            oscard['size'] = offset;
            offset = golfie.icon;
            oscard['source'] = offset;
            oscard = verify.bind(zuuluu)(option, oscard);
            entity['icon'] = oscard;
            oscard = golfie.text;
            oscard = oscard.bind(golfie)();
            entity['label'] = oscard;
            oscard = golfie.subtext;
            oscard = oscard.bind(golfie)();
            entity['subLabel'] = oscard;
            entity = tangon.bind(zuuluu)(michal, entity, report);
            return entity;
        };
        report = oscard.bind(golfie)(report);
        entity['children'] = report;
        entity = tangon.bind(zuuluu)(michal, entity);
        return entity;
    };
    var _closure1_slot19 = entity;
    entity = global;
    option = entity.Object;
    golfie = option.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(option)(zuuluu, entity, tangon);
    entity = 0;
    tangon = oscard[entity];
    entity = undefined;
    tangon = offset.bind(entity)(tangon);
    var _closure1_slot3 = tangon;
    backup = 1;
    golfie = oscard[backup];
    tangon = argCor;
    golfie = tangon.bind(entity)(golfie);
    var _closure1_slot4 = golfie;
    tangon = 2;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    option = tangon.Linking;
    var _closure1_slot5 = option;
    tangon = tangon.View;
    var _closure1_slot6 = tangon;
    tangon = 3;
    tangon = oscard[tangon];
    tangon = offset.bind(entity)(tangon);
    var _closure1_slot7 = tangon;
    tangon = 4;
    tangon = oscard[tangon];
    tangon = offset.bind(entity)(tangon);
    var _closure1_slot8 = tangon;
    tangon = 5;
    tangon = oscard[tangon];
    tangon = offset.bind(entity)(tangon);
    var _closure1_slot9 = tangon;
    tangon = 6;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.UserRemediationAction;
    var _closure1_slot10 = tangon;
    tangon = 7;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    option = tangon.IGNORE_CONFIRMATION_ACTION_SHEET_KEY;
    var _closure1_slot11 = option;
    tangon = tangon.RESTRICTION_CONFIRMATION_ACTION_SHEET_HEIGHT;
    var _closure1_slot12 = tangon;
    tangon = 8;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    option = tangon.HelpdeskArticles;
    var _closure1_slot13 = option;
    tangon = tangon.AnalyticEvents;
    var _closure1_slot14 = tangon;
    tangon = 9;
    option = oscard[tangon];
    option = report.bind(entity)(option);
    option = option.jsx;
    var _closure1_slot15 = option;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.jsxs;
    var _closure1_slot16 = tangon;
    tangon = 10;
    tangon = oscard[tangon];
    verify = report.bind(entity)(tangon);
    option = verify.createStyles;
    tangon = {};
    foxtra = 'center';
    yankee = {'alignContent': 'center', 'textAlign': 'center'};
    tangon['button'] = yankee;
    yankee = {};
    romeon = 11;
    kiloes = oscard[romeon];
    kiloes = offset.bind(entity)(kiloes);
    kiloes = kiloes.spacing;
    kiloes = kiloes.PX_16;
    yankee['marginBottom'] = kiloes;
    tangon['tableContainer'] = yankee;
    yankee = {};
    kiloes = oscard[romeon];
    kiloes = offset.bind(entity)(kiloes);
    kiloes = kiloes.spacing;
    kiloes = kiloes.PX_24;
    yankee['marginBottom'] = kiloes;
    tangon['otherOptions'] = yankee;
    yankee = {};
    yankee['textAlign'] = foxtra;
    tangon['bodyText'] = yankee;
    yankee = {};
    yankee['textAlign'] = foxtra;
    tangon['headerText'] = yankee;
    yankee = {};
    yankee['flex'] = backup;
    backup = oscard[romeon];
    backup = offset.bind(entity)(backup);
    backup = backup.spacing;
    backup = backup.PX_16;
    yankee['paddingHorizontal'] = backup;
    backup = oscard[romeon];
    backup = offset.bind(entity)(backup);
    backup = backup.spacing;
    backup = backup.PX_16;
    yankee['paddingTop'] = backup;
    tangon['container'] = yankee;
    yankee = {};
    backup = oscard[romeon];
    backup = offset.bind(entity)(backup);
    backup = backup.spacing;
    backup = backup.PX_16;
    yankee['marginBottom'] = backup;
    tangon['header'] = yankee;
    yankee = {'position': 'relative', 'alignSelf': 'center'};
    backup = oscard[romeon];
    backup = offset.bind(entity)(backup);
    backup = backup.spacing;
    backup = backup.PX_16;
    yankee['marginBottom'] = backup;
    tangon['avatarContainer'] = yankee;
    yankee = {'position': 'absolute', 'bottom': 4294967288, 'right': 4294967288};
    backup = oscard[romeon];
    backup = offset.bind(entity)(backup);
    backup = backup.spacing;
    backup = backup.PX_4;
    yankee['padding'] = backup;
    backup = oscard[romeon];
    backup = offset.bind(entity)(backup);
    backup = backup.colors;
    backup = backup.BG_SURFACE_RAISED;
    yankee['backgroundColor'] = backup;
    backup = oscard[romeon];
    backup = offset.bind(entity)(backup);
    backup = backup.radii;
    backup = backup.round;
    yankee['borderRadius'] = backup;
    tangon['avatarIconContainer'] = yankee;
    yankee = {};
    yankee['alignSelf'] = foxtra;
    tangon['avatar'] = yankee;
    yankee = {};
    yankee['textAlign'] = foxtra;
    romeon = oscard[romeon];
    romeon = offset.bind(entity)(romeon);
    romeon = romeon.spacing;
    romeon = romeon.PX_12;
    yankee['marginTop'] = romeon;
    tangon['footerText'] = yankee;
    tangon = option.bind(verify)(tangon);
    var _closure1_slot17 = tangon;
    option = {};
    verify = 12;
    tangon = oscard[verify];
    tangon = offset.bind(entity)(tangon);
    option['icon'] = tangon;
    tangon = function() { // Original name: text
        report = _closure1_slot0;
        oscard = _closure1_slot2;
        entity = 13;
        michal = oscard[entity];
        tangon = undefined;
        michal = report.bind(tangon)(michal);
        zuuluu = michal.intl;
        michal = zuuluu.string;
        entity = oscard[entity];
        entity = report.bind(tangon)(entity);
        entity = entity.t;
        entity = entity.fjFJFR;
        entity = michal.bind(zuuluu)(entity);
        return entity;
    };
    option['text'] = tangon;
    tangon = function() { // Original name: subtext
        report = _closure1_slot0;
        oscard = _closure1_slot2;
        entity = 13;
        michal = oscard[entity];
        tangon = undefined;
        michal = report.bind(tangon)(michal);
        zuuluu = michal.intl;
        michal = zuuluu.string;
        entity = oscard[entity];
        entity = report.bind(tangon)(entity);
        entity = entity.t;
        entity = entity.8SIMPz;
        entity = michal.bind(zuuluu)(entity);
        return entity;
    };
    option['subtext'] = tangon;
    tangon = new Array(3);
    tangon[0] = option;
    option = {};
    verify = oscard[verify];
    verify = offset.bind(entity)(verify);
    option['icon'] = verify;
    verify = function() { // Original name: text
        report = _closure1_slot0;
        oscard = _closure1_slot2;
        entity = 13;
        michal = oscard[entity];
        tangon = undefined;
        michal = report.bind(tangon)(michal);
        zuuluu = michal.intl;
        michal = zuuluu.string;
        entity = oscard[entity];
        entity = report.bind(tangon)(entity);
        entity = entity.t;
        entity = entity.QCrmqa;
        entity = michal.bind(zuuluu)(entity);
        return entity;
    };
    option['text'] = verify;
    verify = function() { // Original name: subtext
        report = _closure1_slot0;
        oscard = _closure1_slot2;
        entity = 13;
        michal = oscard[entity];
        tangon = undefined;
        michal = report.bind(tangon)(michal);
        zuuluu = michal.intl;
        michal = zuuluu.string;
        entity = oscard[entity];
        entity = report.bind(tangon)(entity);
        entity = entity.t;
        entity = entity.TKDMoK;
        entity = michal.bind(zuuluu)(entity);
        return entity;
    };
    option['subtext'] = verify;
    tangon[1] = option;
    option = {};
    verify = 14;
    verify = oscard[verify];
    verify = offset.bind(entity)(verify);
    option['icon'] = verify;
    verify = function() { // Original name: text
        report = _closure1_slot0;
        oscard = _closure1_slot2;
        entity = 13;
        michal = oscard[entity];
        tangon = undefined;
        michal = report.bind(tangon)(michal);
        zuuluu = michal.intl;
        michal = zuuluu.string;
        entity = oscard[entity];
        entity = report.bind(tangon)(entity);
        entity = entity.t;
        entity = entity.lkm/argBaz;
        entity = michal.bind(zuuluu)(entity);
        return entity;
    };
    option['text'] = verify;
    verify = function() { // Original name: subtext
        report = _closure1_slot0;
        oscard = _closure1_slot2;
        entity = 13;
        michal = oscard[entity];
        tangon = undefined;
        michal = report.bind(tangon)(michal);
        zuuluu = michal.intl;
        michal = zuuluu.string;
        entity = oscard[entity];
        entity = report.bind(tangon)(entity);
        entity = entity.t;
        entity = entity.8j3qaG;
        entity = michal.bind(zuuluu)(entity);
        return entity;
    };
    option['subtext'] = verify;
    tangon[2] = option;
    var _closure1_slot18 = tangon;
    tangon = golfie.memo;
    michal = function(argFoo) { // Original name: BlockConfirmationActionSheet
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            michal = argFoo;
            entity = michal.userId;
            var _closure2_slot0 = entity;
            variable37 = michal.channelId;
            var _closure2_slot1 = variable37;
            zuuluu = michal.onBlock;
            var _closure2_slot2 = zuuluu;
            zuuluu = michal.onIgnore;
            var _closure2_slot3 = zuuluu;
            michal = michal.onSuccess;
            var _closure2_slot4 = michal;
            michal = _closure1_slot17;
            report = undefined;
            ctrled = michal.bind(report)();
            oscard = _closure1_slot1;
            option = _closure1_slot2;
            michal = 18;
            michal = option[michal];
            michal = oscard.bind(report)(michal);
            michal = michal.bind(report)();
            yankee = michal.bottom;
            michal = 19;
            zuuluu = option[michal];
            tangon = oscard.bind(report)(zuuluu);
            zuuluu = 20;
            zuuluu = option[zuuluu];
            zuuluu = oscard.bind(report)(zuuluu);
            oscard = zuuluu.IGNORE_CONFIRMATION_ACTION_SHEET;
            zuuluu = new Array(1);
            zuuluu[0] = oscard;
            zuuluu = tangon.bind(report)(zuuluu);
            oscard = zuuluu.analyticsLocations;
            golfie = _closure1_slot4;
            zuuluu = golfie.useState;
            config = false;
            verify = zuuluu.bind(golfie)(config);
            tangon = _closure1_slot3;
            zuuluu = 2;
            tangon = tangon.bind(report)(verify, zuuluu);
            zuuluu = 0;
            vacuum = tangon[zuuluu];
            zuuluu = 1;
            zuuluu = tangon[zuuluu];
            var _closure2_slot5 = zuuluu;
            tangon = _closure1_slot0;
            zuuluu = 21;
            verify = option[zuuluu];
            backup = tangon.bind(report)(verify);
            foxtra = backup.useStateFromStores;
            verify = _closure1_slot9;
            romeon = new Array(1);
            romeon[0] = verify;
            offset = new Array(1);
            offset[0] = entity;
            verify = function() {
                zuuluu = _closure1_slot9;
                michal = zuuluu.getUser;
                entity = _closure2_slot0;
                entity = michal.bind(zuuluu)(entity);
                return entity;
            };
            variable36 = foxtra.bind(backup)(romeon, verify, offset);
            var _closure2_slot6 = variable36;
            verify = option[zuuluu];
            backup = tangon.bind(report)(verify);
            foxtra = backup.useStateFromStores;
            verify = _closure1_slot8;
            romeon = new Array(1);
            romeon[0] = verify;
            offset = new Array(1);
            offset[0] = entity;
            verify = function() {
                zuuluu = _closure1_slot8;
                michal = zuuluu.isIgnored;
                entity = _closure2_slot0;
                entity = michal.bind(zuuluu)(entity);
                return entity;
            };
            foxtra = foxtra.bind(backup)(romeon, verify, offset);
            zuuluu = option[zuuluu];
            offset = tangon.bind(report)(zuuluu);
            verify = offset.useStateFromStores;
            zuuluu = _closure1_slot7;
            option = new Array(1);
            option[0] = zuuluu;
            tangon = new Array(1);
            tangon[0] = variable37;
            zuuluu = function() {
                _fun00003: for(var _fun00004_ip = 0; ; ) switch(_fun00004_ip) {
 0:
                    zuuluu = _closure1_slot7;
                    michal = zuuluu.getChannel;
                    entity = _closure2_slot1;
                    michal = michal.bind(zuuluu)(entity);
                    entity = null;
                    zuuluu = entity == michal;
                    entity = undefined;
                    if(zuuluu) { _fun00004_ip = 40; continue _fun00003 }
 35:
                    entity = michal.guild_id;
 40:
                    return entity;
                }
            };
            quebec = verify.bind(offset)(option, zuuluu, tangon);
            tangon = golfie.useEffect;
            zuuluu = new Array(2);
            zuuluu[0] = variable36;
            zuuluu[1] = entity;
            entity = function() {
                _fun00005: for(var _fun00006_ip = 0; ; ) switch(_fun00006_ip) {
 0:
                    zuuluu = _closure2_slot6;
                    michal = null;
                    if(!(michal == zuuluu)) { _fun00006_ip = 53; continue _fun00005 }
 13:
                    tangon = _closure1_slot0;
                    zuuluu = _closure1_slot2;
                    michal = 22;
                    zuuluu = zuuluu[michal];
                    michal = undefined;
                    zuuluu = tangon.bind(michal)(zuuluu);
                    michal = zuuluu.getUser;
                    entity = _closure2_slot0;
                    entity = michal.bind(zuuluu)(entity);
 53:
                    entity = undefined;
                    return entity;
                }
            };
            entity = tangon.bind(golfie)(entity, zuuluu);
            entity = null;
            zuuluu = entity == variable36;
            if(zuuluu) { _fun00002_ip = 1849; continue _fun00001 }
 379:
            tangon = _closure1_slot15;
            golfie = _closure1_slot0;
            verify = _closure1_slot2;
            michal = verify[michal];
            michal = golfie.bind(report)(michal);
            zuuluu = michal.AnalyticsLocationProvider;
            michal = {};
            michal['value'] = oscard;
            option = _closure1_slot15;
            oscard = 23;
            oscard = verify[oscard];
            oscard = golfie.bind(report)(oscard);
            golfie = oscard.BottomSheet;
            oscard = {};
            verify = function() { // Original name: onDismiss
                zuuluu = _closure1_slot1;
                michal = _closure1_slot2;
                entity = 24;
                michal = michal[entity];
                entity = undefined;
                report = zuuluu.bind(entity)(michal);
                tangon = report.track;
                michal = _closure1_slot14;
                zuuluu = michal.USER_REMEDIATION_ACTION;
                michal = {};
                oscard = _closure1_slot10;
                oscard = oscard.DISMISS_BLOCK;
                michal['action'] = oscard;
                oscard = 'user-profile-context-menu';
                michal['location'] = oscard;
                michal = tangon.bind(report)(zuuluu, michal);
                return entity;
            };
            oscard['onDismiss'] = verify;
            papara = true;
            oscard['scrollable'] = papara;
            verify = 485;
            if(foxtra) { _fun00002_ip = 466; continue _fun00001 }
 462:
            verify = _closure1_slot12;
 466:
            romeon = verify + yankee;
            whisks = _closure1_slot1;
            update = _closure1_slot2;
            offset = 11;
            verify = update[offset];
            verify = whisks.bind(report)(verify);
            verify = verify.spacing;
            verify = verify.PX_24;
            romeon = romeon + verify;
            verify = update[offset];
            verify = whisks.bind(report)(verify);
            verify = verify.spacing;
            verify = verify.PX_24;
            verify = romeon + verify;
            oscard['startHeight'] = verify;
            verify = {};
            offset = update[offset];
            offset = whisks.bind(report)(offset);
            offset = offset.spacing;
            offset = offset.PX_24;
            offset = offset + yankee;
            verify['paddingBottom'] = offset;
            variable39 = ctrled.container;
            variable40 = verify;
            offset = copyDataProperties(variable40, variable39);
            oscard['bodyStyles'] = verify;
            yankee = _closure1_slot16;
            cntext = _closure1_slot0;
            verify = 25;
            verify = update[verify];
            verify = cntext.bind(report)(verify);
            offset = verify.BottomSheetScrollView;
            verify = {};
            sizing = _closure1_slot6;
            romeon = {};
            backup = ctrled.header;
            romeon['style'] = backup;
            backup = {};
            kiloes = ctrled.avatarContainer;
            backup['style'] = kiloes;
            echoed = _closure1_slot15;
            source = 26;
            kiloes = update[source];
            result = whisks.bind(report)(kiloes);
            kiloes = {};
            kiloes['guildId'] = report;
            kiloes['user'] = variable36;
            kiloes['animate'] = config;
            source = update[source];
            source = cntext.bind(report)(source);
            source = source.AvatarSizes;
            source = source.XLARGE;
            kiloes['size'] = source;
            source = ctrled.avatar;
            kiloes['style'] = source;
            result = echoed.bind(report)(result, kiloes);
            kiloes = new Array(2);
            kiloes[0] = result;
            echoed = _closure1_slot15;
            result = {};
            source = ctrled.avatarIconContainer;
            result['style'] = source;
            record = _closure1_slot15;
            equals = 17;
            source = update[equals];
            config = whisks.bind(report)(source);
            source = {};
            target = update[equals];
            target = whisks.bind(report)(target);
            target = target.Sizes;
            target = target.MEDIUM;
            source['size'] = target;
            target = 27;
            target = update[target];
            target = whisks.bind(report)(target);
            source['source'] = target;
            source = record.bind(report)(config, source);
            result['children'] = source;
            result = echoed.bind(report)(sizing, result);
            kiloes[1] = result;
            backup['children'] = kiloes;
            kiloes = yankee.bind(report)(sizing, backup);
            backup = new Array(3);
            backup[0] = kiloes;
            source = _closure1_slot15;
            kiloes = 28;
            result = update[kiloes];
            result = cntext.bind(report)(result);
            echoed = result.Text;
            result = {'style': null, 'variant': 'heading-xl/bold', 'color': 'header-primary', 'accessibilityRole': 'header'};
            config = ctrled.headerText;
            result['style'] = config;
            config = 13;
            record = update[config];
            record = cntext.bind(report)(record);
            sierra = record.intl;
            status = sierra.format;
            record = update[config];
            record = cntext.bind(report)(record);
            record = record.t;
            target = record.CIbzHR;
            record = {};
            limora = 29;
            limora = update[limora];
            whisks = whisks.bind(report)(limora);
            limora = whisks.getName;
            limora = limora.bind(whisks)(quebec, variable37, variable36);
            record['username'] = limora;
            record = status.bind(sierra)(target, record);
            result['children'] = record;
            result = source.bind(report)(echoed, result);
            backup[1] = result;
            echoed = _closure1_slot15;
            kiloes = update[kiloes];
            kiloes = cntext.bind(report)(kiloes);
            result = kiloes.Text;
            kiloes = {'style': null, 'variant': 'heading-md/medium', 'color': 'header-secondary'};
            source = ctrled.headerText;
            kiloes['style'] = source;
            source = update[config];
            source = cntext.bind(report)(source);
            record = source.intl;
            source = record.string;
            update = update[config];
            update = cntext.bind(report)(update);
            update = update.t;
            update = update.S70joq;
            update = source.bind(record)(update);
            kiloes['children'] = update;
            kiloes = echoed.bind(report)(result, kiloes);
            backup[2] = kiloes;
            romeon['children'] = backup;
            backup = yankee.bind(report)(sizing, romeon);
            romeon = new Array(4);
            romeon[0] = backup;
            kiloes = _closure1_slot15;
            backup = {};
            result = ctrled.tableContainer;
            backup['style'] = result;
            update = _closure1_slot15;
            echoed = _closure1_slot19;
            result = {};
            result = update.bind(report)(echoed, result);
            backup['children'] = result;
            backup = kiloes.bind(report)(sizing, backup);
            romeon[1] = backup;
            foxtra = !foxtra;
            if(!foxtra) { _fun00002_ip = 1536; continue _fun00001 }
 1149:
            sizing = _closure1_slot15;
            kiloes = _closure1_slot6;
            backup = {};
            result = ctrled.otherOptions;
            backup['style'] = result;
            update = _closure1_slot15;
            limora = _closure1_slot0;
            target = _closure1_slot2;
            result = 15;
            result = target[result];
            result = limora.bind(report)(result);
            echoed = result.TableRowGroup;
            result = {};
            source = target[config];
            source = limora.bind(report)(source);
            cntext = source.intl;
            record = cntext.string;
            source = target[config];
            source = limora.bind(report)(source);
            source = source.t;
            source = source.+BJTcH;
            source = record.bind(cntext)(source);
            result['title'] = source;
            cntext = _closure1_slot15;
            source = 16;
            source = target[source];
            source = limora.bind(report)(source);
            record = source.TableRow;
            source = {};
            whisks = _closure1_slot15;
            quebec = _closure1_slot1;
            status = target[equals];
            sierra = quebec.bind(report)(status);
            status = {};
            equals = target[equals];
            equals = quebec.bind(report)(equals);
            equals = equals.Sizes;
            equals = equals.MEDIUM;
            status['size'] = equals;
            equals = 30;
            equals = target[equals];
            equals = quebec.bind(report)(equals);
            status['source'] = equals;
            status = whisks.bind(report)(sierra, status);
            source['icon'] = status;
            status = target[config];
            status = limora.bind(report)(status);
            whisks = status.intl;
            sierra = whisks.string;
            status = target[config];
            status = limora.bind(report)(status);
            status = status.t;
            status = status.hC8tcX;
            status = sierra.bind(whisks)(status);
            source['label'] = status;
            status = target[config];
            status = limora.bind(report)(status);
            whisks = status.intl;
            sierra = whisks.string;
            status = target[config];
            status = limora.bind(report)(status);
            status = status.t;
            status = status.If89rK;
            status = sierra.bind(whisks)(status);
            source['subLabel'] = status;
            status = target[config];
            status = limora.bind(report)(status);
            sierra = status.intl;
            status = sierra.string;
            target = target[config];
            target = limora.bind(report)(target);
            target = target.t;
            target = target.8qGQsL;
            target = status.bind(sierra)(target);
            source['accessibilityLabel'] = target;
            target = function() { // Original name: onPress
                tangon = _closure1_slot1;
                verify = _closure1_slot2;
                entity = 24;
                zuuluu = verify[entity];
                entity = undefined;
                golfie = tangon.bind(entity)(zuuluu);
                oscard = golfie.track;
                zuuluu = _closure1_slot14;
                report = zuuluu.USER_REMEDIATION_ACTION;
                zuuluu = {};
                option = _closure1_slot10;
                option = option.GOTO_IGNORE;
                zuuluu['action'] = option;
                option = 'user-profile-context-menu';
                zuuluu['location'] = option;
                zuuluu = oscard.bind(golfie)(report, zuuluu);
                zuuluu = 31;
                zuuluu = verify[zuuluu];
                golfie = tangon.bind(entity)(zuuluu);
                oscard = golfie.openLazy;
                option = _closure1_slot0;
                zuuluu = 33;
                zuuluu = verify[zuuluu];
                report = option.bind(entity)(zuuluu);
                zuuluu = 32;
                tangon = verify[zuuluu];
                zuuluu = verify.paths;
                report = report.bind(entity)(tangon, zuuluu);
                foxtra = _closure1_slot11;
                zuuluu = {};
                offset = _closure2_slot0;
                zuuluu['userId'] = offset;
                offset = _closure2_slot1;
                zuuluu['channelId'] = offset;
                offset = _closure2_slot4;
                zuuluu['onSuccess'] = offset;
                michal = _closure2_slot3;
                zuuluu['onIgnore'] = michal;
                michal = 34;
                michal = verify[michal];
                michal = option.bind(entity)(michal);
                michal = michal.ImpressionNames;
                michal = michal.IGNORE_USER_CONFIRMATION;
                zuuluu['impressionName'] = michal;
                yankee = 'replaceTopSheet';
                kiloes = golfie;
                backup = report;
                romeon = zuuluu;
                michal = kiloes[oscard](backup, foxtra, romeon, yankee, offset);
                return entity;
            };
            source['onPress'] = target;
            source['arrow'] = papara;
            source = cntext.bind(report)(record, source);
            result['children'] = source;
            result = update.bind(report)(echoed, result);
            backup['children'] = result;
            foxtra = sizing.bind(report)(kiloes, backup);
 1536:
            romeon[2] = foxtra;
            kiloes = _closure1_slot16;
            backup = _closure1_slot6;
            foxtra = {};
            sizing = ctrled.button;
            foxtra['style'] = sizing;
            echoed = _closure1_slot15;
            source = _closure1_slot0;
            update = _closure1_slot2;
            sizing = 35;
            sizing = update[sizing];
            sizing = source.bind(report)(sizing);
            result = sizing.Button;
            sizing = {'size': 'lg', 'variant': 'destructive'};
            record = update[config];
            record = source.bind(report)(record);
            papara = record.intl;
            cntext = papara.string;
            record = update[config];
            record = source.bind(report)(record);
            record = record.t;
            record = record.l4EmaW;
            record = cntext.bind(papara)(record);
            sizing['text'] = record;
            record = function() { // Original name: onPress
                _fun00007: for(var _fun00008_ip = 0; ; ) switch(_fun00008_ip) {
 0:
                    tangon = _closure2_slot5;
                    entity = undefined;
                    michal = true;
                    michal = tangon.bind(entity)(michal);
                    verify = _closure1_slot1;
                    offset = _closure1_slot2;
                    tangon = 36;
                    tangon = offset[tangon];
                    golfie = verify.bind(entity)(tangon);
                    oscard = golfie.blockUser;
                    report = _closure2_slot0;
                    tangon = {};
                    option = 20;
                    option = offset[option];
                    option = verify.bind(entity)(option);
                    option = option.BLOCK_CONFIRMATION_ACTION_SHEET;
                    tangon['location'] = option;
                    oscard = oscard.bind(golfie)(report, tangon);
                    report = oscard.then;
                    tangon = function() {
                        _fun00009: for(var _fun00010_ip = 0; ; ) switch(_fun00010_ip) {
 0:
                            tangon = _closure1_slot1;
                            zuuluu = _closure1_slot2;
                            entity = 37;
                            zuuluu = zuuluu[entity];
                            entity = undefined;
                            golfie = tangon.bind(entity)(zuuluu);
                            oscard = golfie.showBlockSuccessToast;
                            report = _closure2_slot0;
                            tangon = _closure2_slot1;
                            tangon = oscard.bind(golfie)(report, tangon);
                            report = _closure2_slot4;
                            tangon = null;
                            if(!(tangon != report)) { _fun00010_ip = 66; continue _fun00009 }
 58:
                            zuuluu = _closure2_slot4;
                            zuuluu = zuuluu.bind(entity)();
 66:
                            zuuluu = _closure1_slot1;
                            tangon = _closure1_slot2;
                            michal = 31;
                            michal = tangon[michal];
                            zuuluu = zuuluu.bind(entity)(michal);
                            michal = zuuluu.hideActionSheet;
                            michal = michal.bind(zuuluu)();
                            return entity;
                        }
                    };
                    tangon = report.bind(oscard)(tangon);
                    report = _closure2_slot2;
                    tangon = null;
                    if(!(tangon != report)) { _fun00008_ip = 114; continue _fun00007 }
 106:
                    zuuluu = _closure2_slot2;
                    zuuluu = zuuluu.bind(entity)();
 114:
                    tangon = _closure1_slot1;
                    report = _closure1_slot2;
                    zuuluu = 24;
                    zuuluu = report[zuuluu];
                    tangon = tangon.bind(entity)(zuuluu);
                    zuuluu = tangon.track;
                    michal = _closure1_slot14;
                    michal = michal.BLOCK_USER_CONFIRMED;
                    michal = zuuluu.bind(tangon)(michal);
                    return entity;
                }
            };
            sizing['onPress'] = record;
            sizing['disabled'] = vacuum;
            sizing['loading'] = vacuum;
            result = echoed.bind(report)(result, sizing);
            sizing = new Array(2);
            sizing[0] = result;
            echoed = _closure1_slot15;
            output = 38;
            output = update[output];
            output = source.bind(report)(output);
            result = output.TextWithIOSLinkWorkaround;
            output = {'style': null, 'variant': 'text-sm/normal', 'color': 'header-secondary'};
            ctrled = ctrled.footerText;
            output['style'] = ctrled;
            ctrled = update[config];
            ctrled = source.bind(report)(ctrled);
            vacuum = ctrled.intl;
            ctrled = vacuum.format;
            update = update[config];
            update = source.bind(report)(update);
            update = update.t;
            source = update.CpTgBg;
            update = {};
            sequen = function() { // Original name: articleLink
                tangon = _closure1_slot1;
                report = _closure1_slot2;
                entity = 31;
                zuuluu = report[entity];
                entity = undefined;
                oscard = tangon.bind(entity)(zuuluu);
                zuuluu = oscard.hideActionSheet;
                zuuluu = zuuluu.bind(oscard)();
                zuuluu = 39;
                zuuluu = report[zuuluu];
                report = tangon.bind(entity)(zuuluu);
                tangon = report.getArticleURL;
                zuuluu = _closure1_slot13;
                zuuluu = zuuluu.STEALTH_REMEDIATION_FEATURE_GUIDE;
                tangon = tangon.bind(report)(zuuluu);
                zuuluu = _closure1_slot5;
                michal = zuuluu.openURL;
                michal = michal.bind(zuuluu)(tangon);
                return entity;
            };
            update['articleLink'] = sequen;
            update = ctrled.bind(vacuum)(source, update);
            output['children'] = update;
            output = echoed.bind(report)(result, output);
            sizing[1] = output;
            foxtra['children'] = sizing;
            foxtra = kiloes.bind(report)(backup, foxtra);
            romeon[3] = foxtra;
            verify['children'] = romeon;
            verify = yankee.bind(report)(offset, verify);
            oscard['children'] = verify;
            oscard = option.bind(report)(golfie, oscard);
            michal['children'] = oscard;
            entity = tangon.bind(report)(zuuluu, michal);
 1849:
            return entity;
        }
    };
    michal = tangon.bind(golfie)(michal);
    tangon = 40;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/relationships/native/BlockConfirmationActionSheet.tsx';
    tangon = report.bind(oscard)(tangon);
    zuuluu['default'] = michal;
    return entity;
})();