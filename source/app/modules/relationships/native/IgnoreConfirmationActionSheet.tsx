// app/modules/relationships/native/IgnoreConfirmationActionSheet.tsx
export default (function(argFoo, argBar, argBaz, argCorge, _, argFred, argPlugh) {
    report = argBar;
    offset = argBaz;
    zulu = argFred;
    oscar = argPlugh;
    var _closure1_slot0 = report;
    var _closure1_slot1 = offset;
    var _closure1_slot2 = oscar;
    entity = function() { // Original name: IgnoredInformationTable
        tango = _closure1_slot14;
        mike = _closure1_slot0;
        zulu = _closure1_slot2;
        entity = 14;
        entity = zulu[entity];
        zulu = undefined;
        entity = mike.bind(zulu)(entity);
        mike = entity.TableRowGroup;
        entity = {};
        golf = _closure1_slot17;
        oscar = golf.map;
        report = function(argFoo, argBar) {
            golf = argFoo;
            report = argBar;
            tango = _closure1_slot14;
            mike = _closure1_slot0;
            romeo = _closure1_slot2;
            entity = 15;
            entity = romeo[entity];
            zulu = undefined;
            entity = mike.bind(zulu)(entity);
            mike = entity.TableRow;
            entity = {};
            options = 0;
            options = options === report;
            entity['start'] = options;
            options = _closure1_slot17;
            verify = options.length;
            options = 1;
            options = verify - options;
            options = options === report;
            entity['end'] = options;
            verify = _closure1_slot14;
            yankee = _closure1_slot1;
            offset = 16;
            oscar = romeo[offset];
            options = yankee.bind(zulu)(oscar);
            oscar = {};
            offset = romeo[offset];
            offset = yankee.bind(zulu)(offset);
            offset = offset.Sizes;
            offset = offset.MEDIUM;
            oscar['size'] = offset;
            offset = golf.icon;
            oscar['source'] = offset;
            oscar = verify.bind(zulu)(options, oscar);
            entity['icon'] = oscar;
            oscar = golf.text;
            oscar = oscar.bind(golf)();
            entity['label'] = oscar;
            oscar = golf.subtext;
            oscar = oscar.bind(golf)();
            entity['subLabel'] = oscar;
            entity = tango.bind(zulu)(mike, entity, report);
            return entity;
        };
        report = oscar.bind(golf)(report);
        entity['children'] = report;
        entity = tango.bind(zulu)(mike, entity);
        return entity;
    };
    var _closure1_slot18 = entity;
    entity = global;
    options = entity.Object;
    golf = options.defineProperty;
    tango = {};
    entity = true;
    tango['value'] = entity;
    entity = '__esModule';
    entity = golf.bind(options)(zulu, entity, tango);
    entity = 0;
    tango = oscar[entity];
    entity = undefined;
    tango = offset.bind(entity)(tango);
    var _closure1_slot3 = tango;
    backup = 1;
    golf = oscar[backup];
    tango = argCorge;
    golf = tango.bind(entity)(golf);
    var _closure1_slot4 = golf;
    tango = 2;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    options = tango.Linking;
    var _closure1_slot5 = options;
    tango = tango.View;
    var _closure1_slot6 = tango;
    tango = 3;
    tango = oscar[tango];
    tango = offset.bind(entity)(tango);
    var _closure1_slot7 = tango;
    tango = 4;
    tango = oscar[tango];
    tango = offset.bind(entity)(tango);
    var _closure1_slot8 = tango;
    tango = 5;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.UserRemediationAction;
    var _closure1_slot9 = tango;
    tango = 6;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    options = tango.BLOCK_CONFIRMATION_ACTION_SHEET_KEY;
    var _closure1_slot10 = options;
    tango = tango.RESTRICTION_CONFIRMATION_ACTION_SHEET_HEIGHT;
    var _closure1_slot11 = tango;
    tango = 7;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    options = tango.AnalyticEvents;
    var _closure1_slot12 = options;
    tango = tango.HelpdeskArticles;
    var _closure1_slot13 = tango;
    tango = 8;
    options = oscar[tango];
    options = report.bind(entity)(options);
    options = options.jsx;
    var _closure1_slot14 = options;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.jsxs;
    var _closure1_slot15 = tango;
    tango = 9;
    tango = oscar[tango];
    verify = report.bind(entity)(tango);
    options = verify.createStyles;
    tango = {};
    foxtrot = 'center';
    yankee = {'alignContent': 'center', 'textAlign': 'center'};
    tango['button'] = yankee;
    yankee = {};
    romeo = 10;
    kilo = oscar[romeo];
    kilo = offset.bind(entity)(kilo);
    kilo = kilo.spacing;
    kilo = kilo.PX_16;
    yankee['marginBottom'] = kilo;
    tango['tableContainer'] = yankee;
    yankee = {};
    kilo = oscar[romeo];
    kilo = offset.bind(entity)(kilo);
    kilo = kilo.spacing;
    kilo = kilo.PX_24;
    yankee['marginBottom'] = kilo;
    tango['otherOptions'] = yankee;
    yankee = {};
    yankee['textAlign'] = foxtrot;
    tango['bodyText'] = yankee;
    yankee = {};
    yankee['textAlign'] = foxtrot;
    tango['subTitle'] = yankee;
    yankee = {};
    yankee['textAlign'] = foxtrot;
    kilo = oscar[romeo];
    kilo = offset.bind(entity)(kilo);
    kilo = kilo.spacing;
    kilo = kilo.PX_4;
    yankee['marginBottom'] = kilo;
    tango['title'] = yankee;
    yankee = {};
    yankee['flex'] = backup;
    backup = oscar[romeo];
    backup = offset.bind(entity)(backup);
    backup = backup.spacing;
    backup = backup.PX_16;
    yankee['paddingHorizontal'] = backup;
    backup = oscar[romeo];
    backup = offset.bind(entity)(backup);
    backup = backup.spacing;
    backup = backup.PX_16;
    yankee['paddingTop'] = backup;
    tango['container'] = yankee;
    yankee = {};
    backup = oscar[romeo];
    backup = offset.bind(entity)(backup);
    backup = backup.spacing;
    backup = backup.PX_16;
    yankee['marginBottom'] = backup;
    tango['header'] = yankee;
    yankee = {'position': 'relative', 'alignSelf': 'center'};
    backup = oscar[romeo];
    backup = offset.bind(entity)(backup);
    backup = backup.spacing;
    backup = backup.PX_16;
    yankee['marginBottom'] = backup;
    tango['avatarContainer'] = yankee;
    yankee = {'position': 'absolute', 'bottom': 4294967288, 'right': 4294967288};
    backup = oscar[romeo];
    backup = offset.bind(entity)(backup);
    backup = backup.spacing;
    backup = backup.PX_4;
    yankee['padding'] = backup;
    backup = oscar[romeo];
    backup = offset.bind(entity)(backup);
    backup = backup.colors;
    backup = backup.BG_SURFACE_RAISED;
    yankee['backgroundColor'] = backup;
    backup = oscar[romeo];
    backup = offset.bind(entity)(backup);
    backup = backup.radii;
    backup = backup.round;
    yankee['borderRadius'] = backup;
    tango['avatarIconContainer'] = yankee;
    yankee = {};
    yankee['alignSelf'] = foxtrot;
    tango['avatar'] = yankee;
    yankee = {};
    romeo = oscar[romeo];
    romeo = offset.bind(entity)(romeo);
    romeo = romeo.colors;
    romeo = romeo.TEXT_DANGER;
    yankee['color'] = romeo;
    tango['destructiveIcon'] = yankee;
    tango = options.bind(verify)(tango);
    var _closure1_slot16 = tango;
    options = {};
    verify = 11;
    tango = oscar[verify];
    tango = offset.bind(entity)(tango);
    options['icon'] = tango;
    tango = function() { // Original name: text
        report = _closure1_slot0;
        oscar = _closure1_slot2;
        entity = 12;
        mike = oscar[entity];
        tango = undefined;
        mike = report.bind(tango)(mike);
        zulu = mike.intl;
        mike = zulu.string;
        entity = oscar[entity];
        entity = report.bind(tango)(entity);
        entity = entity.t;
        entity = entity.ruhGkp;
        entity = mike.bind(zulu)(entity);
        return entity;
    };
    options['text'] = tango;
    tango = function() { // Original name: subtext
        report = _closure1_slot0;
        oscar = _closure1_slot2;
        entity = 12;
        mike = oscar[entity];
        tango = undefined;
        mike = report.bind(tango)(mike);
        zulu = mike.intl;
        mike = zulu.string;
        entity = oscar[entity];
        entity = report.bind(tango)(entity);
        entity = entity.t;
        entity = entity./FWKKC;
        entity = mike.bind(zulu)(entity);
        return entity;
    };
    options['subtext'] = tango;
    tango = new Array(3);
    tango[0] = options;
    options = {};
    verify = oscar[verify];
    verify = offset.bind(entity)(verify);
    options['icon'] = verify;
    verify = function() { // Original name: text
        report = _closure1_slot0;
        oscar = _closure1_slot2;
        entity = 12;
        mike = oscar[entity];
        tango = undefined;
        mike = report.bind(tango)(mike);
        zulu = mike.intl;
        mike = zulu.string;
        entity = oscar[entity];
        entity = report.bind(tango)(entity);
        entity = entity.t;
        entity = entity.N9v3en;
        entity = mike.bind(zulu)(entity);
        return entity;
    };
    options['text'] = verify;
    verify = function() { // Original name: subtext
        report = _closure1_slot0;
        oscar = _closure1_slot2;
        entity = 12;
        mike = oscar[entity];
        tango = undefined;
        mike = report.bind(tango)(mike);
        zulu = mike.intl;
        mike = zulu.string;
        entity = oscar[entity];
        entity = report.bind(tango)(entity);
        entity = entity.t;
        entity = entity.ddpuJi;
        entity = mike.bind(zulu)(entity);
        return entity;
    };
    options['subtext'] = verify;
    tango[1] = options;
    options = {};
    verify = 13;
    verify = oscar[verify];
    verify = offset.bind(entity)(verify);
    options['icon'] = verify;
    verify = function() { // Original name: text
        report = _closure1_slot0;
        oscar = _closure1_slot2;
        entity = 12;
        mike = oscar[entity];
        tango = undefined;
        mike = report.bind(tango)(mike);
        zulu = mike.intl;
        mike = zulu.string;
        entity = oscar[entity];
        entity = report.bind(tango)(entity);
        entity = entity.t;
        entity = entity.4ycGEx;
        entity = mike.bind(zulu)(entity);
        return entity;
    };
    options['text'] = verify;
    verify = function() { // Original name: subtext
        report = _closure1_slot0;
        oscar = _closure1_slot2;
        entity = 12;
        mike = oscar[entity];
        tango = undefined;
        mike = report.bind(tango)(mike);
        zulu = mike.intl;
        mike = zulu.string;
        entity = oscar[entity];
        entity = report.bind(tango)(entity);
        entity = entity.t;
        entity = entity.5yfN+v;
        entity = mike.bind(zulu)(entity);
        return entity;
    };
    options['subtext'] = verify;
    tango[2] = options;
    var _closure1_slot17 = tango;
    tango = golf.memo;
    mike = function(argFoo) { // Original name: IgnoreConfirmationActionSheet
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            mike = argFoo;
            entity = mike.userId;
            var _closure2_slot0 = entity;
            variable40 = mike.channelId;
            var _closure2_slot1 = variable40;
            zulu = mike.onIgnore;
            var _closure2_slot2 = zulu;
            mike = mike.onSuccess;
            var _closure2_slot3 = mike;
            mike = _closure1_slot16;
            report = undefined;
            sizing = mike.bind(report)();
            golf = _closure1_slot4;
            mike = golf.useState;
            source = false;
            tango = mike.bind(golf)(source);
            zulu = _closure1_slot3;
            mike = 2;
            zulu = zulu.bind(report)(tango, mike);
            mike = 0;
            papa = zulu[mike];
            mike = 1;
            mike = zulu[mike];
            var _closure2_slot4 = mike;
            oscar = _closure1_slot1;
            options = _closure1_slot2;
            mike = 17;
            mike = options[mike];
            mike = oscar.bind(report)(mike);
            mike = mike.bind(report)();
            romeo = mike.bottom;
            mike = 18;
            zulu = options[mike];
            tango = oscar.bind(report)(zulu);
            zulu = 19;
            zulu = options[zulu];
            zulu = oscar.bind(report)(zulu);
            oscar = zulu.IGNORE_CONFIRMATION_ACTION_SHEET;
            zulu = new Array(1);
            zulu[0] = oscar;
            zulu = tango.bind(report)(zulu);
            oscar = zulu.analyticsLocations;
            tango = _closure1_slot0;
            zulu = 20;
            verify = options[zulu];
            backup = tango.bind(report)(verify);
            foxtrot = backup.useStateFromStores;
            verify = _closure1_slot8;
            yankee = new Array(1);
            yankee[0] = verify;
            offset = new Array(1);
            offset[0] = entity;
            verify = function() {
                zulu = _closure1_slot8;
                mike = zulu.getUser;
                entity = _closure2_slot0;
                entity = mike.bind(zulu)(entity);
                return entity;
            };
            variable39 = foxtrot.bind(backup)(yankee, verify, offset);
            var _closure2_slot5 = variable39;
            zulu = options[zulu];
            offset = tango.bind(report)(zulu);
            verify = offset.useStateFromStores;
            zulu = _closure1_slot7;
            options = new Array(1);
            options[0] = zulu;
            tango = new Array(1);
            tango[0] = variable40;
            zulu = function() {
                _fun00003: for(var _fun00004_ip = 0; ; ) switch(_fun00004_ip) {
 0:
                    zulu = _closure1_slot7;
                    mike = zulu.getChannel;
                    entity = _closure2_slot1;
                    mike = mike.bind(zulu)(entity);
                    entity = null;
                    zulu = entity == mike;
                    entity = undefined;
                    if(zulu) { _fun00004_ip = 40; continue _fun00003 }
 35:
                    entity = mike.guild_id;
 40:
                    return entity;
                }
            };
            variable37 = verify.bind(offset)(options, zulu, tango);
            vacuum = function() { // Original name: handleClose
                zulu = _closure1_slot1;
                mike = _closure1_slot2;
                entity = 21;
                mike = mike[entity];
                entity = undefined;
                report = zulu.bind(entity)(mike);
                tango = report.track;
                mike = _closure1_slot12;
                zulu = mike.USER_REMEDIATION_ACTION;
                mike = {};
                oscar = _closure1_slot9;
                oscar = oscar.DISMISS_IGNORE;
                mike['action'] = oscar;
                oscar = 'user-profile-context-menu';
                mike['location'] = oscar;
                mike = tango.bind(report)(zulu, mike);
                return entity;
            };
            tango = golf.useEffect;
            zulu = new Array(2);
            zulu[0] = variable39;
            zulu[1] = entity;
            entity = function() {
                _fun00005: for(var _fun00006_ip = 0; ; ) switch(_fun00006_ip) {
 0:
                    zulu = _closure2_slot5;
                    mike = null;
                    if(!(mike == zulu)) { _fun00006_ip = 53; continue _fun00005 }
 13:
                    tango = _closure1_slot0;
                    zulu = _closure1_slot2;
                    mike = 22;
                    zulu = zulu[mike];
                    mike = undefined;
                    zulu = tango.bind(mike)(zulu);
                    mike = zulu.getUser;
                    entity = _closure2_slot0;
                    entity = mike.bind(zulu)(entity);
 53:
                    entity = undefined;
                    return entity;
                }
            };
            entity = tango.bind(golf)(entity, zulu);
            control = null;
            zulu = control == variable39;
            entity = null;
            if(zulu) { _fun00002_ip = 1866; continue _fun00001 }
 330:
            tango = _closure1_slot14;
            offset = _closure1_slot0;
            kilo = _closure1_slot2;
            mike = kilo[mike];
            mike = offset.bind(report)(mike);
            zulu = mike.AnalyticsLocationProvider;
            mike = {};
            mike['value'] = oscar;
            options = _closure1_slot14;
            oscar = 23;
            oscar = kilo[oscar];
            oscar = offset.bind(report)(oscar);
            golf = oscar.BottomSheet;
            oscar = {};
            oscar['onDismiss'] = vacuum;
            whiskey = true;
            oscar['scrollable'] = whiskey;
            verify = _closure1_slot11;
            yankee = verify + romeo;
            result = _closure1_slot1;
            record = 10;
            verify = kilo[record];
            verify = result.bind(report)(verify);
            verify = verify.spacing;
            verify = verify.PX_24;
            yankee = yankee + verify;
            verify = kilo[record];
            verify = result.bind(report)(verify);
            verify = verify.spacing;
            verify = verify.PX_24;
            verify = yankee + verify;
            oscar['startHeight'] = verify;
            verify = {};
            yankee = kilo[record];
            yankee = result.bind(report)(yankee);
            yankee = yankee.spacing;
            yankee = yankee.PX_16;
            yankee = yankee + romeo;
            verify['paddingBottom'] = yankee;
            variable42 = sizing.container;
            variable43 = verify;
            yankee = copyDataProperties(variable43, variable42);
            oscar['bodyStyles'] = verify;
            yankee = _closure1_slot15;
            verify = 24;
            verify = kilo[verify];
            verify = offset.bind(report)(verify);
            offset = verify.BottomSheetScrollView;
            verify = {};
            foxtrot = _closure1_slot6;
            romeo = {};
            backup = sizing.header;
            romeo['style'] = backup;
            backup = {};
            echo = sizing.avatarContainer;
            backup['style'] = echo;
            echo = _closure1_slot14;
            update = 25;
            kilo = kilo[update];
            result = result.bind(report)(kilo);
            kilo = {};
            config = control != variable37;
            control = undefined;
            if(!config) { _fun00002_ip = 595; continue _fun00001 }
 592:
            control = variable37;
 595:
            kilo['guildId'] = control;
            kilo['user'] = variable39;
            kilo['animate'] = source;
            source = _closure1_slot0;
            config = _closure1_slot2;
            update = config[update];
            update = source.bind(report)(update);
            update = update.AvatarSizes;
            update = update.XLARGE;
            kilo['size'] = update;
            update = sizing.avatar;
            kilo['style'] = update;
            kilo = echo.bind(report)(result, kilo);
            result = new Array(2);
            result[0] = kilo;
            update = _closure1_slot14;
            kilo = _closure1_slot6;
            echo = {};
            control = sizing.avatarIconContainer;
            echo['style'] = control;
            status = _closure1_slot14;
            context = _closure1_slot1;
            variable38 = 16;
            control = config[variable38];
            target = context.bind(report)(control);
            control = {};
            sierra = config[variable38];
            sierra = context.bind(report)(sierra);
            sierra = sierra.Sizes;
            sierra = sierra.MEDIUM;
            control['size'] = sierra;
            sierra = 26;
            sierra = config[sierra];
            sierra = context.bind(report)(sierra);
            control['source'] = sierra;
            control = status.bind(report)(target, control);
            echo['children'] = control;
            echo = update.bind(report)(kilo, echo);
            result[1] = echo;
            backup['children'] = result;
            result = yankee.bind(report)(foxtrot, backup);
            backup = new Array(3);
            backup[0] = result;
            control = _closure1_slot14;
            equality = 27;
            result = config[equality];
            result = source.bind(report)(result);
            echo = result.Text;
            result = {'style': null, 'variant': 'heading-xl/bold', 'color': 'header-primary', 'accessibilityRole': 'header'};
            update = sizing.title;
            result['style'] = update;
            update = 12;
            target = config[update];
            target = source.bind(report)(target);
            lima = target.intl;
            sierra = lima.format;
            target = config[update];
            target = source.bind(report)(target);
            target = target.t;
            status = target.WrQD/f;
            target = {};
            quebec = 28;
            quebec = config[quebec];
            variable36 = context.bind(report)(quebec);
            quebec = variable36.getName;
            quebec = quebec.bind(variable36)(variable37, variable40, variable39);
            target['username'] = quebec;
            target = sierra.bind(lima)(status, target);
            result['children'] = target;
            result = control.bind(report)(echo, result);
            backup[1] = result;
            target = _closure1_slot14;
            result = config[equality];
            result = source.bind(report)(result);
            echo = result.Text;
            result = {'style': null, 'variant': 'heading-md/medium', 'color': 'header-secondary'};
            control = sizing.subTitle;
            result['style'] = control;
            control = 'header-secondary';
            status = config[update];
            status = source.bind(report)(status);
            lima = status.intl;
            sierra = lima.string;
            status = config[update];
            status = source.bind(report)(status);
            status = status.t;
            status = status.JKL1u7;
            status = sierra.bind(lima)(status);
            result['children'] = status;
            result = target.bind(report)(echo, result);
            backup[2] = result;
            romeo['children'] = backup;
            foxtrot = yankee.bind(report)(foxtrot, romeo);
            romeo = new Array(4);
            romeo[0] = foxtrot;
            backup = _closure1_slot14;
            foxtrot = {};
            result = sizing.tableContainer;
            foxtrot['style'] = result;
            target = _closure1_slot14;
            echo = _closure1_slot18;
            result = {};
            result = target.bind(report)(echo, result);
            foxtrot['children'] = result;
            foxtrot = backup.bind(report)(kilo, foxtrot);
            romeo[1] = foxtrot;
            backup = _closure1_slot14;
            foxtrot = {};
            result = sizing.otherOptions;
            foxtrot['style'] = result;
            target = _closure1_slot14;
            result = 14;
            result = config[result];
            result = source.bind(report)(result);
            echo = result.TableRowGroup;
            result = {};
            status = config[update];
            status = source.bind(report)(status);
            lima = status.intl;
            sierra = lima.string;
            status = config[update];
            status = source.bind(report)(status);
            status = status.t;
            status = status.1v01go;
            status = sierra.bind(lima)(status);
            result['title'] = status;
            lima = _closure1_slot14;
            status = 15;
            status = config[status];
            status = source.bind(report)(status);
            sierra = status.TableRow;
            status = {};
            variable37 = _closure1_slot14;
            quebec = config[variable38];
            variable36 = context.bind(report)(quebec);
            quebec = {};
            variable38 = config[variable38];
            variable38 = context.bind(report)(variable38);
            variable38 = variable38.Sizes;
            variable38 = variable38.MEDIUM;
            quebec['size'] = variable38;
            variable38 = 29;
            variable38 = config[variable38];
            variable38 = context.bind(report)(variable38);
            quebec['source'] = variable38;
            variable38 = sizing.destructiveIcon;
            variable38 = variable38.color;
            quebec['color'] = variable38;
            quebec = variable37.bind(report)(variable36, quebec);
            status['icon'] = quebec;
            quebec = config[update];
            quebec = source.bind(report)(quebec);
            variable37 = quebec.intl;
            variable36 = variable37.string;
            quebec = config[update];
            quebec = source.bind(report)(quebec);
            quebec = quebec.t;
            quebec = quebec.bwxY39;
            quebec = variable36.bind(variable37)(quebec);
            status['label'] = quebec;
            quebec = 'danger';
            status['variant'] = quebec;
            variable36 = _closure1_slot14;
            equality = config[equality];
            equality = source.bind(report)(equality);
            quebec = equality.Text;
            equality = {'variant': 'text-xs/medium', 'color': 'text-danger'};
            variable37 = config[update];
            variable37 = source.bind(report)(variable37);
            variable39 = variable37.intl;
            variable38 = variable39.string;
            variable37 = config[update];
            variable37 = source.bind(report)(variable37);
            variable37 = variable37.t;
            variable37 = variable37.NTnf1d;
            variable37 = variable38.bind(variable39)(variable37);
            equality['children'] = variable37;
            equality = variable36.bind(report)(quebec, equality);
            status['subLabel'] = equality;
            equality = config[update];
            equality = source.bind(report)(equality);
            variable36 = equality.intl;
            quebec = variable36.string;
            equality = config[update];
            equality = source.bind(report)(equality);
            equality = equality.t;
            equality = equality.fZ+p9P;
            equality = quebec.bind(variable36)(equality);
            status['accessibilityLabel'] = equality;
            equality = function() { // Original name: onPress
                tango = _closure1_slot1;
                verify = _closure1_slot2;
                entity = 21;
                zulu = verify[entity];
                entity = undefined;
                golf = tango.bind(entity)(zulu);
                oscar = golf.track;
                zulu = _closure1_slot12;
                report = zulu.USER_REMEDIATION_ACTION;
                zulu = {};
                options = _closure1_slot9;
                options = options.GOTO_BLOCK;
                zulu['action'] = options;
                options = 'user-profile-context-menu';
                zulu['location'] = options;
                zulu = oscar.bind(golf)(report, zulu);
                zulu = 30;
                zulu = verify[zulu];
                golf = tango.bind(entity)(zulu);
                oscar = golf.openLazy;
                options = _closure1_slot0;
                zulu = 32;
                zulu = verify[zulu];
                report = options.bind(entity)(zulu);
                zulu = 31;
                tango = verify[zulu];
                zulu = verify.paths;
                report = report.bind(entity)(tango, zulu);
                foxtrot = _closure1_slot10;
                zulu = {};
                offset = _closure2_slot0;
                zulu['userId'] = offset;
                offset = _closure2_slot1;
                zulu['channelId'] = offset;
                mike = _closure2_slot3;
                zulu['onSuccess'] = mike;
                mike = 33;
                mike = verify[mike];
                mike = options.bind(entity)(mike);
                mike = mike.ImpressionNames;
                mike = mike.BLOCK_USER_CONFIRMATION;
                zulu['impressionName'] = mike;
                yankee = 'replaceTopSheet';
                kilo = golf;
                backup = report;
                romeo = zulu;
                mike = kilo[oscar](backup, foxtrot, romeo, yankee, offset);
                return entity;
            };
            status['onPress'] = equality;
            status['arrow'] = whiskey;
            status = lima.bind(report)(sierra, status);
            result['children'] = status;
            result = target.bind(report)(echo, result);
            foxtrot['children'] = result;
            foxtrot = backup.bind(report)(kilo, foxtrot);
            romeo[2] = foxtrot;
            backup = _closure1_slot15;
            foxtrot = {};
            sizing = sizing.button;
            foxtrot['style'] = sizing;
            echo = _closure1_slot14;
            sizing = 34;
            sizing = config[sizing];
            sizing = source.bind(report)(sizing);
            result = sizing.Button;
            sizing = {};
            target = 'lg';
            sizing['size'] = target;
            target = config[update];
            target = source.bind(report)(target);
            sierra = target.intl;
            status = sierra.string;
            target = config[update];
            target = source.bind(report)(target);
            target = target.t;
            target = target.ytCpKi;
            target = status.bind(sierra)(target);
            sizing['text'] = target;
            target = function() { // Original name: onPress
                _fun00007: for(var _fun00008_ip = 0; ; ) switch(_fun00008_ip) {
 0:
                    tango = _closure2_slot4;
                    entity = undefined;
                    mike = true;
                    mike = tango.bind(entity)(mike);
                    report = _closure1_slot1;
                    verify = _closure1_slot2;
                    tango = 35;
                    tango = verify[tango];
                    options = report.bind(entity)(tango);
                    golf = options.ignoreUser;
                    oscar = _closure2_slot0;
                    tango = 19;
                    tango = verify[tango];
                    tango = report.bind(entity)(tango);
                    report = tango.IGNORE_CONFIRMATION_ACTION_SHEET;
                    tango = _closure2_slot1;
                    oscar = golf.bind(options)(oscar, report, tango);
                    report = oscar.then;
                    tango = function() {
                        _fun00009: for(var _fun00010_ip = 0; ; ) switch(_fun00010_ip) {
 0:
                            zulu = _closure2_slot3;
                            mike = null;
                            if(!(mike != zulu)) { _fun00010_ip = 23; continue _fun00009 }
 13:
                            mike = _closure2_slot3;
                            entity = undefined;
                            entity = mike.bind(entity)();
 23:
                            zulu = _closure1_slot1;
                            mike = _closure1_slot2;
                            entity = 30;
                            mike = mike[entity];
                            entity = undefined;
                            zulu = zulu.bind(entity)(mike);
                            mike = zulu.hideActionSheet;
                            mike = mike.bind(zulu)();
                            return entity;
                        }
                    };
                    tango = report.bind(oscar)(tango);
                    report = _closure2_slot2;
                    tango = null;
                    if(!(tango != report)) { _fun00008_ip = 113; continue _fun00007 }
 105:
                    zulu = _closure2_slot2;
                    zulu = zulu.bind(entity)();
 113:
                    tango = _closure1_slot1;
                    report = _closure1_slot2;
                    zulu = 21;
                    zulu = report[zulu];
                    tango = tango.bind(entity)(zulu);
                    zulu = tango.track;
                    mike = _closure1_slot12;
                    mike = mike.IGNORE_USER_CONFIRMED;
                    mike = zulu.bind(tango)(mike);
                    return entity;
                }
            };
            sizing['onPress'] = target;
            sizing['disabled'] = papa;
            sizing['loading'] = papa;
            result = echo.bind(report)(result, sizing);
            sizing = new Array(2);
            sizing[0] = result;
            echo = _closure1_slot14;
            output = 36;
            output = config[output];
            output = source.bind(report)(output);
            result = output.TextWithIOSLinkWorkaround;
            output = {};
            output['onPress'] = vacuum;
            vacuum = {};
            papa = 'center';
            vacuum['textAlign'] = papa;
            record = config[record];
            record = context.bind(report)(record);
            record = record.spacing;
            record = record.PX_12;
            vacuum['marginTop'] = record;
            output['style'] = vacuum;
            vacuum = 'text-sm/normal';
            output['variant'] = vacuum;
            output['color'] = control;
            control = config[update];
            control = source.bind(report)(control);
            vacuum = control.intl;
            control = vacuum.format;
            update = config[update];
            update = source.bind(report)(update);
            update = update.t;
            source = update.iX9qtL;
            update = {};
            sequence = function() { // Original name: articleLink
                tango = _closure1_slot1;
                report = _closure1_slot2;
                entity = 30;
                zulu = report[entity];
                entity = undefined;
                oscar = tango.bind(entity)(zulu);
                zulu = oscar.hideActionSheet;
                zulu = zulu.bind(oscar)();
                zulu = 37;
                zulu = report[zulu];
                report = tango.bind(entity)(zulu);
                tango = report.getArticleURL;
                zulu = _closure1_slot13;
                zulu = zulu.STEALTH_REMEDIATION_FEATURE_GUIDE;
                tango = tango.bind(report)(zulu);
                zulu = _closure1_slot5;
                mike = zulu.openURL;
                mike = mike.bind(zulu)(tango);
                return entity;
            };
            update['articleLink'] = sequence;
            update = control.bind(vacuum)(source, update);
            output['children'] = update;
            output = echo.bind(report)(result, output);
            sizing[1] = output;
            foxtrot['children'] = sizing;
            foxtrot = backup.bind(report)(kilo, foxtrot);
            romeo[3] = foxtrot;
            verify['children'] = romeo;
            verify = yankee.bind(report)(offset, verify);
            oscar['children'] = verify;
            oscar = options.bind(report)(golf, oscar);
            mike['children'] = oscar;
            entity = tango.bind(report)(zulu, mike);
 1866:
            return entity;
        }
    };
    mike = tango.bind(golf)(mike);
    tango = 38;
    tango = oscar[tango];
    oscar = report.bind(entity)(tango);
    report = oscar.fileFinishedImporting;
    tango = 'modules/relationships/native/IgnoreConfirmationActionSheet.tsx';
    tango = report.bind(oscar)(tango);
    zulu['default'] = mike;
    return entity;
})();