// app/modules/channel_following/native/components/ChannelFollowSuccessAlert.tsx
export default (function(argFoo, argBar, argBaz, argCorge, _, argFred, argPlugh) {
    report = argBar;
    zulu = argFred;
    oscar = argPlugh;
    var _closure1_slot0 = report;
    entity = argBaz;
    var _closure1_slot1 = entity;
    var _closure1_slot2 = oscar;
    entity = global;
    options = entity.Object;
    golf = options.defineProperty;
    tango = {};
    entity = true;
    tango['value'] = entity;
    entity = '__esModule';
    entity = golf.bind(options)(zulu, entity, tango);
    entity = 0;
    golf = oscar[entity];
    tango = argCorge;
    entity = undefined;
    tango = tango.bind(entity)(golf);
    tango = 1;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.Image;
    var _closure1_slot3 = tango;
    tango = 2;
    golf = oscar[tango];
    golf = report.bind(entity)(golf);
    golf = golf.jsx;
    var _closure1_slot4 = golf;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.jsxs;
    var _closure1_slot5 = tango;
    tango = 3;
    tango = oscar[tango];
    golf = report.bind(entity)(tango);
    tango = new Array(3);
    tango[0] = golf;
    golf = 4;
    golf = oscar[golf];
    golf = report.bind(entity)(golf);
    tango[1] = golf;
    golf = 5;
    golf = oscar[golf];
    golf = report.bind(entity)(golf);
    tango[2] = golf;
    var _closure1_slot6 = tango;
    tango = 6;
    tango = oscar[tango];
    golf = report.bind(entity)(tango);
    tango = new Array(3);
    tango[0] = golf;
    golf = 7;
    golf = oscar[golf];
    golf = report.bind(entity)(golf);
    tango[1] = golf;
    golf = 8;
    golf = oscar[golf];
    golf = report.bind(entity)(golf);
    tango[2] = golf;
    var _closure1_slot7 = tango;
    tango = new Array(10);
    golf = function() {
        report = _closure1_slot0;
        oscar = _closure1_slot2;
        entity = 9;
        mike = oscar[entity];
        tango = undefined;
        mike = report.bind(tango)(mike);
        zulu = mike.intl;
        mike = zulu.string;
        entity = oscar[entity];
        entity = report.bind(tango)(entity);
        entity = entity.t;
        entity = entity.w2o/6+;
        entity = mike.bind(zulu)(entity);
        return entity;
    };
    tango[0] = golf;
    golf = function() {
        report = _closure1_slot0;
        oscar = _closure1_slot2;
        entity = 9;
        mike = oscar[entity];
        tango = undefined;
        mike = report.bind(tango)(mike);
        zulu = mike.intl;
        mike = zulu.string;
        entity = oscar[entity];
        entity = report.bind(tango)(entity);
        entity = entity.t;
        entity = entity.FiAvKi;
        entity = mike.bind(zulu)(entity);
        return entity;
    };
    tango[1] = golf;
    golf = function() {
        report = _closure1_slot0;
        oscar = _closure1_slot2;
        entity = 9;
        mike = oscar[entity];
        tango = undefined;
        mike = report.bind(tango)(mike);
        zulu = mike.intl;
        mike = zulu.string;
        entity = oscar[entity];
        entity = report.bind(tango)(entity);
        entity = entity.t;
        entity = entity.vKUFen;
        entity = mike.bind(zulu)(entity);
        return entity;
    };
    tango[2] = golf;
    golf = function() {
        report = _closure1_slot0;
        oscar = _closure1_slot2;
        entity = 9;
        mike = oscar[entity];
        tango = undefined;
        mike = report.bind(tango)(mike);
        zulu = mike.intl;
        mike = zulu.string;
        entity = oscar[entity];
        entity = report.bind(tango)(entity);
        entity = entity.t;
        entity = entity.veQl5e;
        entity = mike.bind(zulu)(entity);
        return entity;
    };
    tango[3] = golf;
    golf = function() {
        report = _closure1_slot0;
        oscar = _closure1_slot2;
        entity = 9;
        mike = oscar[entity];
        tango = undefined;
        mike = report.bind(tango)(mike);
        zulu = mike.intl;
        mike = zulu.string;
        entity = oscar[entity];
        entity = report.bind(tango)(entity);
        entity = entity.t;
        entity = entity.Pxb7BQ;
        entity = mike.bind(zulu)(entity);
        return entity;
    };
    tango[4] = golf;
    golf = function() {
        report = _closure1_slot0;
        oscar = _closure1_slot2;
        entity = 9;
        mike = oscar[entity];
        tango = undefined;
        mike = report.bind(tango)(mike);
        zulu = mike.intl;
        mike = zulu.string;
        entity = oscar[entity];
        entity = report.bind(tango)(entity);
        entity = entity.t;
        entity = entity.W03w+/;
        entity = mike.bind(zulu)(entity);
        return entity;
    };
    tango[5] = golf;
    golf = function() {
        report = _closure1_slot0;
        oscar = _closure1_slot2;
        entity = 9;
        mike = oscar[entity];
        tango = undefined;
        mike = report.bind(tango)(mike);
        zulu = mike.intl;
        mike = zulu.string;
        entity = oscar[entity];
        entity = report.bind(tango)(entity);
        entity = entity.t;
        entity = entity.95HTb2;
        entity = mike.bind(zulu)(entity);
        return entity;
    };
    tango[6] = golf;
    golf = function() {
        report = _closure1_slot0;
        oscar = _closure1_slot2;
        entity = 9;
        mike = oscar[entity];
        tango = undefined;
        mike = report.bind(tango)(mike);
        zulu = mike.intl;
        mike = zulu.string;
        entity = oscar[entity];
        entity = report.bind(tango)(entity);
        entity = entity.t;
        entity = entity.+XFel5;
        entity = mike.bind(zulu)(entity);
        return entity;
    };
    tango[7] = golf;
    golf = function() {
        report = _closure1_slot0;
        oscar = _closure1_slot2;
        entity = 9;
        mike = oscar[entity];
        tango = undefined;
        mike = report.bind(tango)(mike);
        zulu = mike.intl;
        mike = zulu.string;
        entity = oscar[entity];
        entity = report.bind(tango)(entity);
        entity = entity.t;
        entity = entity.hedHen;
        entity = mike.bind(zulu)(entity);
        return entity;
    };
    tango[8] = golf;
    golf = function() {
        report = _closure1_slot0;
        oscar = _closure1_slot2;
        entity = 9;
        mike = oscar[entity];
        tango = undefined;
        mike = report.bind(tango)(mike);
        zulu = mike.intl;
        mike = zulu.string;
        entity = oscar[entity];
        entity = report.bind(tango)(entity);
        entity = entity.t;
        entity = entity.jgC65u;
        entity = mike.bind(zulu)(entity);
        return entity;
    };
    tango[9] = golf;
    var _closure1_slot8 = tango;
    tango = 10;
    tango = oscar[tango];
    options = report.bind(entity)(tango);
    golf = options.createStyles;
    tango = {};
    offset = 'center';
    verify = {'marginTop': 16, 'lineHeight': 20, 'textAlign': 'center'};
    tango['text'] = verify;
    verify = {};
    verify['textAlign'] = offset;
    tango['header'] = verify;
    verify = {'alignSelf': 'center', 'marginTop': 4294967224, 'marginBottom': 16, 'width': '100%', 'resizeMode': 'contain'};
    tango['image'] = verify;
    tango = golf.bind(options)(tango);
    var _closure1_slot9 = tango;
    tango = 17;
    tango = oscar[tango];
    oscar = report.bind(entity)(tango);
    report = oscar.fileFinishedImporting;
    tango = 'modules/channel_following/native/components/ChannelFollowSuccessAlert.tsx';
    tango = report.bind(oscar)(tango);
    mike = function(argFoo) { // Original name: ChannelFollowSuccessAlert
        _fun89157: for(var _fun89157_ip = 0; ; ) switch(_fun89157_ip) {
 0:
            mike = _closure1_slot9;
            tango = undefined;
            offset = mike.bind(tango)();
            zulu = _closure1_slot1;
            golf = _closure1_slot2;
            mike = 11;
            mike = golf[mike];
            mike = zulu.bind(tango)(mike);
            oscar = mike.bind(tango)();
            zulu = _closure1_slot0;
            mike = 12;
            mike = golf[mike];
            zulu = zulu.bind(tango)(mike);
            mike = zulu.isThemeDark;
            mike = mike.bind(zulu)(oscar);
            if(mike) { _fun89157_ip = 75; continue _fun89157 }
 69:
            zulu = _closure1_slot6;
            _fun89157_ip = 79; continue _fun89157;
 75:
            zulu = _closure1_slot7;
 79:
            var _closure2_slot0 = zulu;
            romeo = _closure1_slot0;
            foxtrot = _closure1_slot2;
            mike = 13;
            oscar = foxtrot[mike];
            options = romeo.bind(tango)(oscar);
            golf = options.useStableMemo;
            oscar = new Array(1);
            oscar[0] = zulu;
            zulu = function() {
                zulu = _closure1_slot1;
                mike = _closure1_slot2;
                entity = 14;
                mike = mike[entity];
                entity = undefined;
                zulu = zulu.bind(entity)(mike);
                mike = zulu.sample;
                entity = _closure2_slot0;
                entity = mike.bind(zulu)(entity);
                return entity;
            };
            golf = golf.bind(options)(zulu, oscar);
            mike = foxtrot[mike];
            oscar = romeo.bind(tango)(mike);
            zulu = oscar.useStableMemo;
            mike = function() {
                tango = _closure1_slot1;
                zulu = _closure1_slot2;
                mike = 14;
                zulu = zulu[mike];
                mike = undefined;
                zulu = tango.bind(mike)(zulu);
                mike = zulu.sample;
                entity = _closure1_slot8;
                entity = mike.bind(zulu)(entity);
                return entity;
            };
            entity = new Array(0);
            backup = zulu.bind(oscar)(mike, entity);
            zulu = _closure1_slot5;
            mike = _closure1_slot1;
            entity = 15;
            entity = foxtrot[entity];
            mike = mike.bind(tango)(entity);
            entity = {};
            sizing = argFoo;
            output = entity;
            oscar = copyDataProperties(output, sizing);
            verify = 9;
            oscar = foxtrot[verify];
            oscar = romeo.bind(tango)(oscar);
            yankee = oscar.intl;
            options = yankee.string;
            oscar = foxtrot[verify];
            oscar = romeo.bind(tango)(oscar);
            oscar = oscar.t;
            oscar = oscar.+IrDzM;
            options = options.bind(yankee)(oscar);
            oscar = 'confirmText';
            entity[oscar] = options;
            options = _closure1_slot4;
            oscar = _closure1_slot3;
            report = {};
            report['source'] = golf;
            golf = offset.image;
            report['style'] = golf;
            report = options.bind(tango)(oscar, report);
            oscar = new Array(3);
            oscar[0] = report;
            report = 16;
            golf = foxtrot[report];
            golf = romeo.bind(tango)(golf);
            yankee = golf.Text;
            golf = {'style': null, 'variant': 'heading-xl/extrabold', 'color': 'header-primary'};
            kilo = offset.header;
            golf['style'] = kilo;
            backup = backup.bind(tango)();
            golf['children'] = backup;
            golf = options.bind(tango)(yankee, golf);
            oscar[1] = golf;
            report = foxtrot[report];
            report = romeo.bind(tango)(report);
            golf = report.Text;
            report = {'style': null, 'variant': 'text-md/medium', 'color': 'text-muted'};
            offset = offset.text;
            report['style'] = offset;
            offset = foxtrot[verify];
            offset = romeo.bind(tango)(offset);
            yankee = offset.intl;
            offset = yankee.string;
            verify = foxtrot[verify];
            verify = romeo.bind(tango)(verify);
            verify = verify.t;
            verify = verify.2QbSeX;
            verify = offset.bind(yankee)(verify);
            report['children'] = verify;
            report = options.bind(tango)(golf, report);
            oscar[2] = report;
            report = 'children';
            entity[report] = oscar;
            entity = zulu.bind(tango)(mike, entity);
            return entity;
        }
    };
    zulu['default'] = mike;
    return entity;
})();