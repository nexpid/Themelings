// app/modules/channel_following/native/showChannelFollowingActionSheet.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    report = argBar;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    entity = argBaz;
    var _closure1_slot1 = entity;
    var _closure1_slot2 = oscard;
    entity = global;
    option = entity.Object;
    golfie = option.defineProperty;
    michal = {};
    entity = true;
    michal['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(option)(zuuluu, entity, michal);
    entity = 0;
    golfie = oscard[entity];
    michal = argCor;
    entity = undefined;
    michal = michal.bind(entity)(golfie);
    michal = 1;
    michal = oscard[michal];
    michal = report.bind(entity)(michal);
    michal = michal.jsx;
    var _closure1_slot3 = michal;
    michal = 7;
    michal = oscard[michal];
    oscard = report.bind(entity)(michal);
    report = oscard.fileFinishedImporting;
    michal = 'modules/channel_following/native/showChannelFollowingActionSheet.tsx';
    michal = report.bind(oscard)(michal);
    michal = function(argFoo, argBar, argBaz, argCor) { // Original name: showChannelFollowingActionSheet
        verify = argFoo;
        option = argBar;
        var _closure2_slot0 = verify;
        var _closure2_slot1 = option;
        report = _closure1_slot1;
        michal = _closure1_slot2;
        entity = 2;
        tangon = michal[entity];
        entity = undefined;
        oscard = report.bind(entity)(tangon);
        report = oscard.openLazy;
        tangon = _closure1_slot0;
        zuuluu = 4;
        zuuluu = michal[zuuluu];
        tangon = tangon.bind(entity)(zuuluu);
        zuuluu = 3;
        zuuluu = michal[zuuluu];
        michal = michal.paths;
        tangon = tangon.bind(entity)(zuuluu, michal);
        michal = global;
        michal = michal.HermesInternal;
        zuuluu = michal.concat;
        michal = 'NewChannelFollower.';
        zuuluu = zuuluu.bind(michal)(verify);
        michal = {};
        michal['sourceChannelId'] = verify;
        michal['sourceGuildId'] = option;
        option = argBaz;
        michal['targetChannelId'] = option;
        option = argCor;
        michal['targetGuildId'] = option;
        option = function(argFoo, argBar) { // Original name: reopenActionSheetWithTarget
            oscard = _closure1_slot4;
            offset = _closure2_slot0;
            verify = _closure2_slot1;
            entity = undefined;
            option = argBar;
            golfie = argFoo;
            yankee = undefined;
            michal = yankee[oscard](offset, verify, option, golfie, oscard);
            return entity;
        };
        michal['reopenActionSheetWithTarget'] = option;
        option = function() { // Original name: onSuccess
            zuuluu = _closure1_slot1;
            michal = _closure1_slot2;
            entity = 5;
            michal = michal[entity];
            entity = undefined;
            tangon = zuuluu.bind(entity)(michal);
            zuuluu = tangon.openLazy;
            michal = {};
            report = function() { // Original name: importer
                zuuluu = _closure1_slot0;
                entity = _closure1_slot2;
                michal = 4;
                michal = entity[michal];
                tangon = undefined;
                zuuluu = zuuluu.bind(tangon)(michal);
                michal = 6;
                michal = entity[michal];
                entity = entity.paths;
                zuuluu = zuuluu.bind(tangon)(michal, entity);
                michal = zuuluu.then;
                entity = function(argFoo) {
                    michal = argFoo;
                    michal = michal.default;
                    var _closure5_slot0 = michal;
                    entity = function(argFoo) {
                        tangon = _closure1_slot3;
                        zuuluu = _closure5_slot0;
                        michal = {};
                        report = argFoo;
                        oscard = michal;
                        entity = copyDataProperties(oscard, report);
                        entity = undefined;
                        entity = tangon.bind(entity)(zuuluu, michal);
                        return entity;
                    };
                    return entity;
                };
                entity = michal.bind(zuuluu)(entity);
                return entity;
            };
            michal['importer'] = report;
            report = true;
            michal['hideActionSheet'] = report;
            michal = zuuluu.bind(tangon)(michal);
            return entity;
        };
        michal['onSuccess'] = option;
        golfie = function() { // Original name: onCancel
            zuuluu = _closure1_slot1;
            michal = _closure1_slot2;
            entity = 2;
            michal = michal[entity];
            entity = undefined;
            michal = zuuluu.bind(entity)(michal);
            entity = michal.hideActionSheet;
            entity = entity.bind(michal)();
            return entity;
        };
        michal['onCancel'] = golfie;
        michal = report.bind(oscard)(tangon, zuuluu, michal);
        return entity;
    };
    var _closure1_slot4 = michal;
    zuuluu['showChannelFollowingActionSheet'] = michal;
    return entity;
})();