// app/modules/channel_following/native/showChannelFollowingActionSheet.tsx
export default (function(argFoo, argBar, argBaz, argCorge, _, argFred, argPlugh) {
    report = argBar;
    zulu = argFred;
    oscar = argPlugh;
    var _closure1_slot0 = report;
    entity = argBaz;
    var _closure1_slot1 = entity;
    var _closure1_slot2 = oscar;
    entity = global;
    options = entity.Object;
    golf = options.defineProperty;
    mike = {};
    entity = true;
    mike['value'] = entity;
    entity = '__esModule';
    entity = golf.bind(options)(zulu, entity, mike);
    entity = 0;
    golf = oscar[entity];
    mike = argCorge;
    entity = undefined;
    mike = mike.bind(entity)(golf);
    mike = 1;
    mike = oscar[mike];
    mike = report.bind(entity)(mike);
    mike = mike.jsx;
    var _closure1_slot3 = mike;
    mike = 7;
    mike = oscar[mike];
    oscar = report.bind(entity)(mike);
    report = oscar.fileFinishedImporting;
    mike = 'modules/channel_following/native/showChannelFollowingActionSheet.tsx';
    mike = report.bind(oscar)(mike);
    mike = function(argFoo, argBar, argBaz, argCorge) { // Original name: showChannelFollowingActionSheet
        verify = argFoo;
        options = argBar;
        var _closure2_slot0 = verify;
        var _closure2_slot1 = options;
        report = _closure1_slot1;
        mike = _closure1_slot2;
        entity = 2;
        tango = mike[entity];
        entity = undefined;
        oscar = report.bind(entity)(tango);
        report = oscar.openLazy;
        tango = _closure1_slot0;
        zulu = 4;
        zulu = mike[zulu];
        tango = tango.bind(entity)(zulu);
        zulu = 3;
        zulu = mike[zulu];
        mike = mike.paths;
        tango = tango.bind(entity)(zulu, mike);
        mike = global;
        mike = mike.HermesInternal;
        zulu = mike.concat;
        mike = 'NewChannelFollower.';
        zulu = zulu.bind(mike)(verify);
        mike = {};
        mike['sourceChannelId'] = verify;
        mike['sourceGuildId'] = options;
        options = argBaz;
        mike['targetChannelId'] = options;
        options = argCorge;
        mike['targetGuildId'] = options;
        options = function(argFoo, argBar) { // Original name: reopenActionSheetWithTarget
            oscar = _closure1_slot4;
            offset = _closure2_slot0;
            verify = _closure2_slot1;
            entity = undefined;
            options = argBar;
            golf = argFoo;
            yankee = undefined;
            mike = yankee[oscar](offset, verify, options, golf, oscar);
            return entity;
        };
        mike['reopenActionSheetWithTarget'] = options;
        options = function() { // Original name: onSuccess
            zulu = _closure1_slot1;
            mike = _closure1_slot2;
            entity = 5;
            mike = mike[entity];
            entity = undefined;
            tango = zulu.bind(entity)(mike);
            zulu = tango.openLazy;
            mike = {};
            report = function() { // Original name: importer
                zulu = _closure1_slot0;
                entity = _closure1_slot2;
                mike = 4;
                mike = entity[mike];
                tango = undefined;
                zulu = zulu.bind(tango)(mike);
                mike = 6;
                mike = entity[mike];
                entity = entity.paths;
                zulu = zulu.bind(tango)(mike, entity);
                mike = zulu.then;
                entity = function(argFoo) {
                    mike = argFoo;
                    mike = mike.default;
                    var _closure5_slot0 = mike;
                    entity = function(argFoo) {
                        tango = _closure1_slot3;
                        zulu = _closure5_slot0;
                        mike = {};
                        report = argFoo;
                        oscar = mike;
                        entity = copyDataProperties(oscar, report);
                        entity = undefined;
                        entity = tango.bind(entity)(zulu, mike);
                        return entity;
                    };
                    return entity;
                };
                entity = mike.bind(zulu)(entity);
                return entity;
            };
            mike['importer'] = report;
            report = true;
            mike['hideActionSheet'] = report;
            mike = zulu.bind(tango)(mike);
            return entity;
        };
        mike['onSuccess'] = options;
        golf = function() { // Original name: onCancel
            zulu = _closure1_slot1;
            mike = _closure1_slot2;
            entity = 2;
            mike = mike[entity];
            entity = undefined;
            mike = zulu.bind(entity)(mike);
            entity = mike.hideActionSheet;
            entity = entity.bind(mike)();
            return entity;
        };
        mike['onCancel'] = golf;
        mike = report.bind(oscar)(tango, zulu, mike);
        return entity;
    };
    var _closure1_slot4 = mike;
    zulu['showChannelFollowingActionSheet'] = mike;
    return entity;
})();