// app/modules/errors/av_errors/definitions/AVErrorStreamReconnecting.tsx
export default (function(argFoo, argBar, _, __, ___, argFre, argPlu) {
    report = argBar;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    var _closure1_slot1 = oscard;
    entity = global;
    option = entity.Object;
    golfie = option.defineProperty;
    michal = {};
    entity = true;
    michal['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(option)(zuuluu, entity, michal);
    entity = 0;
    michal = oscard[entity];
    entity = undefined;
    michal = report.bind(entity)(michal);
    michal = michal.ApplicationStreamStates;
    var _closure1_slot2 = michal;
    michal = {};
    golfie = function(argFoo) { // Original name: getActiveErrors
        michal = argFoo;
        tangon = michal.activeStreams;
        zuuluu = tangon.filter;
        michal = function(argFoo) {
            entity = argFoo;
            michal = entity.state;
            entity = _closure1_slot2;
            entity = entity.RECONNECTING;
            entity = michal === entity;
            return entity;
        };
        zuuluu = zuuluu.bind(tangon)(michal);
        michal = zuuluu.map;
        entity = function(argFoo) {
            entity = {};
            oscard = _closure1_slot0;
            golfie = _closure1_slot1;
            michal = 1;
            michal = golfie[michal];
            report = undefined;
            michal = oscard.bind(report)(michal);
            michal = michal.AVError;
            michal = michal.STREAM_RECONNECTING;
            entity['type'] = michal;
            michal = 2;
            michal = golfie[michal];
            tangon = oscard.bind(report)(michal);
            zuuluu = tangon.getStreamErrorContext;
            michal = 3;
            michal = golfie[michal];
            oscard = oscard.bind(report)(michal);
            report = oscard.encodeStreamKey;
            michal = argFoo;
            michal = report.bind(oscard)(michal);
            option = zuuluu.bind(tangon)(michal);
            verify = entity;
            michal = copyDataProperties(verify, option);
            return entity;
        };
        entity = michal.bind(zuuluu)(entity);
        return entity;
    };
    michal['getActiveErrors'] = golfie;
    tangon = function(argFoo) { // Original name: makeErrorContextKey
        entity = argFoo;
        report = entity.streamKey;
        tangon = entity.mediaSessionId;
        entity = global;
        entity = entity.HermesInternal;
        zuuluu = entity.concat;
        michal = '';
        entity = ':';
        entity = zuuluu.bind(michal)(report, entity, tangon);
        return entity;
    };
    michal['makeErrorContextKey'] = tangon;
    tangon = 4;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/errors/av_errors/definitions/AVErrorStreamReconnecting.tsx';
    tangon = report.bind(oscard)(tangon);
    zuuluu['AVErrorStreamReconnectingDefinition'] = michal;
    return entity;
})();