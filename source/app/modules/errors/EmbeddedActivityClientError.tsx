// app/modules/errors/EmbeddedActivityClientError.tsx
export default (function(argFoo, argBar, argBaz, _, __, argFred, argPlugh) {
    oscar = argBaz;
    zulu = argFred;
    report = argPlugh;
    entity = global;
    golf = entity.Object;
    tango = golf.defineProperty;
    mike = {};
    entity = true;
    mike['value'] = entity;
    entity = '__esModule';
    entity = tango.bind(golf)(zulu, entity, mike);
    verify = 0;
    mike = report[verify];
    entity = undefined;
    golf = oscar.bind(entity)(mike);
    tango = 1;
    mike = report[tango];
    mike = oscar.bind(entity)(mike);
    var _closure1_slot0 = mike;
    oscar = {};
    oscar['PRIMARY_APP_COMMAND_NOT_FOUND'] = verify;
    mike = 'PRIMARY_APP_COMMAND_NOT_FOUND';
    oscar[verify] = mike;
    oscar['LEGACY_LAUNCH_CLIENT_VALIDATION_FAILED'] = tango;
    mike = 'LEGACY_LAUNCH_CLIENT_VALIDATION_FAILED';
    oscar[tango] = mike;
    tango = 2;
    oscar['INVALID_CHANNEL'] = tango;
    mike = 'INVALID_CHANNEL';
    oscar[tango] = mike;
    mike = function(argFoo, argBar) { // Original name: EmbeddedActivityClientError
        zulu = this;
        tango = _closure1_slot0;
        mike = _closure1_slot1;
        entity = undefined;
        mike = tango.bind(entity)(zulu, mike);
        mike = argFoo;
        zulu['reason'] = mike;
        mike = argBar;
        zulu['detailCode'] = mike;
        return entity;
    };
    var _closure1_slot1 = mike;
    mike = golf.bind(entity)(mike);
    mike['Reasons'] = oscar;
    report = report[tango];
    tango = argBar;
    oscar = tango.bind(entity)(report);
    report = oscar.fileFinishedImporting;
    tango = 'modules/errors/EmbeddedActivityClientError.tsx';
    tango = report.bind(oscar)(tango);
    zulu['default'] = mike;
    return entity;
})();