// app/modules/errors/EmbeddedActivityClientError.tsx
export default (function(argFoo, argBar, argBaz, _, __, argFre, argPlu) {
    oscard = argBaz;
    zuuluu = argFre;
    report = argPlu;
    entity = global;
    golfie = entity.Object;
    tangon = golfie.defineProperty;
    michal = {};
    entity = true;
    michal['value'] = entity;
    entity = '__esModule';
    entity = tangon.bind(golfie)(zuuluu, entity, michal);
    verify = 0;
    michal = report[verify];
    entity = undefined;
    golfie = oscard.bind(entity)(michal);
    tangon = 1;
    michal = report[tangon];
    michal = oscard.bind(entity)(michal);
    var _closure1_slot0 = michal;
    oscard = {};
    oscard['PRIMARY_APP_COMMAND_NOT_FOUND'] = verify;
    michal = 'PRIMARY_APP_COMMAND_NOT_FOUND';
    oscard[verify] = michal;
    oscard['LEGACY_LAUNCH_CLIENT_VALIDATION_FAILED'] = tangon;
    michal = 'LEGACY_LAUNCH_CLIENT_VALIDATION_FAILED';
    oscard[tangon] = michal;
    tangon = 2;
    oscard['INVALID_CHANNEL'] = tangon;
    michal = 'INVALID_CHANNEL';
    oscard[tangon] = michal;
    michal = function(argFoo, argBar) { // Original name: EmbeddedActivityClientError
        zuuluu = this;
        tangon = _closure1_slot0;
        michal = _closure1_slot1;
        entity = undefined;
        michal = tangon.bind(entity)(zuuluu, michal);
        michal = argFoo;
        zuuluu['reason'] = michal;
        michal = argBar;
        zuuluu['detailCode'] = michal;
        return entity;
    };
    var _closure1_slot1 = michal;
    michal = golfie.bind(entity)(michal);
    michal['Reasons'] = oscard;
    report = report[tangon];
    tangon = argBar;
    oscard = tangon.bind(entity)(report);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/errors/EmbeddedActivityClientError.tsx';
    tangon = report.bind(oscard)(tangon);
    zuuluu['default'] = michal;
    return entity;
})();