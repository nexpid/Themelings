// app/modules/overlay/OverlayInvitesExperiment.tsx
export default (function(_, argBar, argBaz, __, ___, argFre, argPlu) {
    report = argBar;
    zuuluu = argFre;
    oscard = argPlu;
    entity = global;
    golfie = entity.Object;
    tangon = golfie.defineProperty;
    michal = {};
    foxtra = true;
    michal['value'] = foxtra;
    entity = '__esModule';
    entity = tangon.bind(golfie)(zuuluu, entity, michal);
    entity = 0;
    michal = oscard[entity];
    entity = undefined;
    option = report.bind(entity)(michal);
    golfie = option.createExperiment;
    michal = {'kind': 'user', 'id': '2025-02_hotwheels_overlay_invites_3', 'label': 'Overlay Invites Notification Pt3'};
    tangon = {};
    verify = false;
    tangon['enabled'] = verify;
    michal['defaultConfig'] = tangon;
    tangon = {'id': 1, 'label': 'Enabled, no date cutoff'};
    romeon = 1;
    verify = {};
    verify['enabled'] = foxtra;
    tangon['config'] = verify;
    verify = new Array(2);
    verify[0] = tangon;
    offset = {'id': 2, 'label': 'Enabled, within past week'};
    tangon = 2;
    yankee = {};
    yankee['enabled'] = foxtra;
    foxtra = oscard[romeon];
    romeon = argBaz;
    romeon = romeon.bind(entity)(foxtra);
    romeon = romeon.Millis;
    romeon = romeon.WEEK;
    yankee['dateLookbackMs'] = romeon;
    offset['config'] = yankee;
    verify[1] = offset;
    michal['treatments'] = verify;
    michal = golfie.bind(option)(michal);
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/overlay/OverlayInvitesExperiment.tsx';
    tangon = report.bind(oscard)(tangon);
    zuuluu['default'] = michal;
    return entity;
})();