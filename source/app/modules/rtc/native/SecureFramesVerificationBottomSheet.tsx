// app/modules/rtc/native/SecureFramesVerificationBottomSheet.tsx
export default (function(argFoo, argBar, argBaz, argCorge, _, argFred, argPlugh) {
    report = argBar;
    yankee = argBaz;
    zulu = argFred;
    oscar = argPlugh;
    var _closure1_slot0 = report;
    var _closure1_slot1 = yankee;
    var _closure1_slot2 = oscar;
    entity = global;
    options = entity.Object;
    golf = options.defineProperty;
    tango = {};
    entity = true;
    tango['value'] = entity;
    entity = '__esModule';
    entity = golf.bind(options)(zulu, entity, tango);
    entity = 0;
    golf = oscar[entity];
    tango = argCorge;
    entity = undefined;
    tango = tango.bind(entity)(golf);
    var _closure1_slot3 = tango;
    tango = 1;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.View;
    var _closure1_slot4 = tango;
    tango = 2;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    golf = tango.EPOCH_AUTHENTICATOR_CHUNK_SIZE;
    var _closure1_slot5 = golf;
    golf = tango.EPOCH_AUTHENTICATOR_COLUMNS;
    var _closure1_slot6 = golf;
    tango = tango.EPOCH_AUTHENTICATOR_LENGTH;
    var _closure1_slot7 = tango;
    tango = 3;
    golf = oscar[tango];
    golf = report.bind(entity)(golf);
    golf = golf.jsx;
    var _closure1_slot8 = golf;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.jsxs;
    var _closure1_slot9 = tango;
    tango = 4;
    tango = oscar[tango];
    options = report.bind(entity)(tango);
    golf = options.createStyles;
    tango = {};
    verify = {'height': 80, 'width': 80, 'borderRadius': 40, 'alignItems': 'center', 'justifyContent': 'center'};
    romeo = 'center';
    offset = 5;
    foxtrot = oscar[offset];
    foxtrot = yankee.bind(entity)(foxtrot);
    foxtrot = foxtrot.colors;
    foxtrot = foxtrot.BG_MOD_STRONG;
    verify['backgroundColor'] = foxtrot;
    tango['iconContainer'] = verify;
    verify = {'height': 48, 'width': 48};
    tango['icon'] = verify;
    verify = {};
    foxtrot = 24;
    verify['height'] = foxtrot;
    tango['share'] = verify;
    verify = {};
    foxtrot = 16;
    verify['padding'] = foxtrot;
    tango['content'] = verify;
    verify = {};
    verify['textAlign'] = romeo;
    tango['subtitle'] = verify;
    verify = {'backgroundColor': null, 'borderTopRightRadius': null, 'borderTopLeftRadius': null, 'paddingVertical': 10, 'paddingHorizontal': 16, 'justifyContent': 'space-between', 'alignItems': 'center', 'flexDirection': 'row', 'marginTop': 24};
    romeo = oscar[offset];
    romeo = yankee.bind(entity)(romeo);
    romeo = romeo.colors;
    romeo = romeo.BG_BASE_TERTIARY;
    verify['backgroundColor'] = romeo;
    romeo = oscar[offset];
    romeo = yankee.bind(entity)(romeo);
    romeo = romeo.radii;
    romeo = romeo.lg;
    verify['borderTopRightRadius'] = romeo;
    romeo = oscar[offset];
    romeo = yankee.bind(entity)(romeo);
    romeo = romeo.radii;
    romeo = romeo.lg;
    verify['borderTopLeftRadius'] = romeo;
    tango['codeHeader'] = verify;
    verify = {'backgroundColor': null, 'paddingVertical': 8, 'paddingHorizontal': 16};
    romeo = oscar[offset];
    romeo = yankee.bind(entity)(romeo);
    romeo = romeo.colors;
    romeo = romeo.BACKGROUND_MODIFIER_ACCENT;
    verify['backgroundColor'] = romeo;
    romeo = oscar[offset];
    romeo = yankee.bind(entity)(romeo);
    romeo = romeo.radii;
    romeo = romeo.lg;
    verify['borderBottomRightRadius'] = romeo;
    offset = oscar[offset];
    offset = yankee.bind(entity)(offset);
    offset = offset.radii;
    offset = offset.lg;
    verify['borderBottomLeftRadius'] = offset;
    tango['code'] = verify;
    verify = {'textAlign': 'center', 'marginTop': 8};
    tango['footer'] = verify;
    tango = golf.bind(options)(tango);
    var _closure1_slot10 = tango;
    tango = 18;
    tango = oscar[tango];
    oscar = report.bind(entity)(tango);
    report = oscar.fileFinishedImporting;
    tango = 'modules/rtc/native/SecureFramesVerificationBottomSheet.tsx';
    tango = report.bind(oscar)(tango);
    mike = function(argFoo) { // Original name: SecureFramesVerificationBottomSheet
        _fun81266: for(var _fun81266_ip = 0; ; ) switch(_fun81266_ip) {
 0:
            mike = argFoo;
            sequence = mike.title;
            vacuum = mike.subtitle;
            romeo = mike.footer;
            golf = mike.epochAuthenticator;
            mike = mike.onShareClick;
            var _closure2_slot0 = mike;
            zulu = _closure1_slot10;
            tango = undefined;
            foxtrot = zulu.bind(tango)();
            update = _closure1_slot0;
            source = _closure1_slot2;
            zulu = 6;
            zulu = source[zulu];
            oscar = update.bind(tango)(zulu);
            report = oscar.useReadableSecureFramesFingerprint;
            zulu = {};
            zulu['fingerprintBase64'] = golf;
            golf = _closure1_slot5;
            zulu['chunkSize'] = golf;
            golf = _closure1_slot7;
            zulu['desiredLength'] = golf;
            kilo = report.bind(oscar)(zulu);
            var _closure2_slot1 = kilo;
            report = _closure1_slot3;
            oscar = report.useCallback;
            zulu = new Array(2);
            zulu[0] = kilo;
            zulu[1] = mike;
            mike = function() {
                _fun81267: for(var _fun81267_ip = 0; ; ) switch(_fun81267_ip) {
 0:
                    zulu = _closure2_slot1;
                    mike = null;
                    if(!(mike != zulu)) { _fun81267_ip = 75; continue _fun81267 }
 13:
                    tango = _closure2_slot1;
                    zulu = tango.join;
                    mike = ' ';
                    zulu = zulu.bind(tango)(mike);
                    report = _closure1_slot1;
                    tango = _closure1_slot2;
                    mike = 7;
                    tango = tango[mike];
                    mike = undefined;
                    report = report.bind(mike)(tango);
                    tango = report.hideActionSheet;
                    tango = tango.bind(report)();
                    entity = _closure2_slot0;
                    entity = entity.bind(mike)(zulu);
 75:
                    entity = undefined;
                    return entity;
                }
            };
            offset = oscar.bind(report)(mike, zulu);
            zulu = report.useCallback;
            mike = function() {
                zulu = _closure1_slot1;
                mike = _closure1_slot2;
                entity = 7;
                mike = mike[entity];
                entity = undefined;
                zulu = zulu.bind(entity)(mike);
                mike = zulu.hideActionSheet;
                mike = mike.bind(zulu)();
                return entity;
            };
            entity = new Array(0);
            backup = zulu.bind(report)(mike, entity);
            zulu = _closure1_slot8;
            yankee = 8;
            entity = source[yankee];
            entity = update.bind(tango)(entity);
            mike = entity.BottomSheet;
            entity = {};
            report = true;
            entity['startExpanded'] = report;
            report = 9;
            report = source[report];
            report = update.bind(tango)(report);
            oscar = report.BottomSheetTitleHeader;
            report = {};
            sizing = null;
            report['title'] = sizing;
            golf = 10;
            golf = source[golf];
            golf = update.bind(tango)(golf);
            options = golf.ActionSheetCloseButton;
            golf = {};
            golf['onPress'] = backup;
            golf = zulu.bind(tango)(options, golf);
            report['leading'] = golf;
            golf = 11;
            golf = source[golf];
            golf = update.bind(tango)(golf);
            options = golf.PressableOpacity;
            golf = {};
            backup = foxtrot.share;
            golf['style'] = backup;
            golf['hitSlop'] = yankee;
            golf['onPress'] = offset;
            offset = sizing == kilo;
            golf['disabled'] = offset;
            offset = 'button';
            golf['accessibilityRole'] = offset;
            output = 12;
            offset = source[output];
            offset = update.bind(tango)(offset);
            backup = offset.intl;
            yankee = backup.string;
            offset = source[output];
            offset = update.bind(tango)(offset);
            offset = offset.t;
            offset = offset.RDE0SU;
            offset = yankee.bind(backup)(offset);
            golf['accessibilityLabel'] = offset;
            backup = 13;
            offset = source[backup];
            offset = update.bind(tango)(offset);
            yankee = offset.Text;
            offset = {'variant': 'text-md/semibold', 'color': 'text-brand'};
            result = source[output];
            result = update.bind(tango)(result);
            control = result.intl;
            echo = control.string;
            result = source[output];
            result = update.bind(tango)(result);
            result = result.t;
            result = result.RDE0SU;
            result = echo.bind(control)(result);
            offset['children'] = result;
            offset = zulu.bind(tango)(yankee, offset);
            golf['children'] = offset;
            golf = zulu.bind(tango)(options, golf);
            report['trailing'] = golf;
            report = zulu.bind(tango)(oscar, report);
            entity['header'] = report;
            golf = _closure1_slot9;
            oscar = _closure1_slot4;
            report = {};
            options = foxtrot.content;
            report['style'] = options;
            options = 14;
            options = source[options];
            options = update.bind(tango)(options);
            offset = options.Stack;
            options = {'spacing': 8, 'justify': 'center', 'align': 'center', 'direction': 'vertical'};
            result = {};
            yankee = foxtrot.iconContainer;
            result['style'] = yankee;
            yankee = 15;
            yankee = source[yankee];
            yankee = update.bind(tango)(yankee);
            control = yankee.LockIcon;
            echo = {};
            yankee = foxtrot.icon;
            echo['style'] = yankee;
            yankee = _closure1_slot1;
            config = 5;
            config = source[config];
            config = yankee.bind(tango)(config);
            config = config.colors;
            config = config.HEADER_SECONDARY;
            echo['color'] = config;
            echo = zulu.bind(tango)(control, echo);
            result['children'] = echo;
            echo = zulu.bind(tango)(oscar, result);
            result = new Array(3);
            result[0] = echo;
            echo = source[backup];
            echo = update.bind(tango)(echo);
            control = echo.Text;
            echo = {'variant': 'heading-xl/bold', 'color': 'header-primary'};
            echo['children'] = sequence;
            echo = zulu.bind(tango)(control, echo);
            result[1] = echo;
            echo = source[backup];
            echo = update.bind(tango)(echo);
            control = echo.Text;
            echo = {'style': null, 'variant': 'text-md/medium', 'color': 'header-secondary'};
            sequence = foxtrot.subtitle;
            echo['style'] = sequence;
            echo['children'] = vacuum;
            echo = zulu.bind(tango)(control, echo);
            result[2] = echo;
            options['children'] = result;
            offset = golf.bind(tango)(offset, options);
            options = new Array(3);
            options[0] = offset;
            offset = 16;
            offset = source[offset];
            yankee = yankee.bind(tango)(offset);
            offset = {};
            result = source[output];
            result = update.bind(tango)(result);
            echo = result.intl;
            result = echo.string;
            output = source[output];
            output = update.bind(tango)(output);
            output = output.t;
            output = output.cgBTyM;
            output = result.bind(echo)(output);
            offset['title'] = output;
            sizing = sizing != kilo;
            if(!sizing) { _fun81266_ip = 838; continue _fun81266 }
 801:
            echo = _closure1_slot8;
            result = _closure1_slot1;
            update = _closure1_slot2;
            output = 17;
            output = update[output];
            result = result.bind(tango)(output);
            output = {};
            output['chunks'] = kilo;
            sizing = echo.bind(tango)(result, output);
 838:
            offset['trailing'] = sizing;
            offset['chunks'] = kilo;
            kilo = _closure1_slot6;
            offset['columns'] = kilo;
            offset = zulu.bind(tango)(yankee, offset);
            options[1] = offset;
            yankee = _closure1_slot8;
            offset = _closure1_slot0;
            verify = _closure1_slot2;
            verify = verify[backup];
            verify = offset.bind(tango)(verify);
            offset = verify.Text;
            verify = {'style': null, 'variant': 'text-xs/normal', 'color': 'text-muted'};
            foxtrot = foxtrot.footer;
            verify['style'] = foxtrot;
            verify['children'] = romeo;
            verify = yankee.bind(tango)(offset, verify);
            options[2] = verify;
            report['children'] = options;
            report = golf.bind(tango)(oscar, report);
            entity['children'] = report;
            entity = zulu.bind(tango)(mike, entity);
            return entity;
        }
    };
    zulu['default'] = mike;
    return entity;
})();