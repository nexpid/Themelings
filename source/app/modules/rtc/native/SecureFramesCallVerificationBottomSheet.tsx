// app/modules/rtc/native/SecureFramesCallVerificationBottomSheet.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    report = argBar;
    golfie = argBaz;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    var _closure1_slot1 = golfie;
    var _closure1_slot2 = oscard;
    entity = global;
    verify = entity.Object;
    option = verify.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = option.bind(verify)(zuuluu, entity, tangon);
    entity = 0;
    option = oscard[entity];
    tangon = argCor;
    entity = undefined;
    tangon = tangon.bind(entity)(option);
    var _closure1_slot3 = tangon;
    tangon = 1;
    tangon = oscard[tangon];
    tangon = golfie.bind(entity)(tangon);
    var _closure1_slot4 = tangon;
    tangon = 2;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.AnalyticsSections;
    var _closure1_slot5 = tangon;
    tangon = 3;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.jsx;
    var _closure1_slot6 = tangon;
    tangon = 10;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/rtc/native/SecureFramesCallVerificationBottomSheet.tsx';
    tangon = report.bind(oscard)(tangon);
    michal = function(argFoo) { // Original name: SecureFramesCallVerificationBottomSheet
        entity = argFoo;
        option = entity.channelId;
        var _closure2_slot0 = option;
        romeon = _closure1_slot0;
        foxtra = _closure1_slot2;
        zuuluu = 4;
        zuuluu = foxtra[zuuluu];
        tangon = undefined;
        golfie = romeon.bind(tangon)(zuuluu);
        oscard = golfie.useStateFromStores;
        zuuluu = _closure1_slot4;
        report = new Array(1);
        report[0] = zuuluu;
        zuuluu = function() {
            _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
                michal = _closure1_slot4;
                entity = michal.getSecureFramesState;
                michal = entity.bind(michal)();
                entity = null;
                zuuluu = entity == michal;
                entity = undefined;
                if(zuuluu) { _fun00002_ip = 34; continue _fun00001 }
 28:
                entity = michal.epochAuthenticator;
 34:
                return entity;
            }
        };
        oscard = oscard.bind(golfie)(report, zuuluu);
        golfie = _closure1_slot3;
        report = golfie.useCallback;
        zuuluu = new Array(1);
        zuuluu[0] = option;
        michal = function(argFoo) {
            tangon = _closure1_slot0;
            report = _closure1_slot2;
            entity = 5;
            zuuluu = report[entity];
            entity = undefined;
            golfie = tangon.bind(entity)(zuuluu);
            oscard = golfie.trackE2EECallVerificationShareClicked;
            zuuluu = {};
            option = _closure2_slot0;
            zuuluu['channelId'] = option;
            zuuluu = oscard.bind(golfie)(zuuluu);
            zuuluu = 6;
            zuuluu = report[zuuluu];
            report = tangon.bind(entity)(zuuluu);
            tangon = report.showShareActionSheet;
            zuuluu = {};
            oscard = argFoo;
            zuuluu['message'] = oscard;
            michal = _closure1_slot5;
            michal = michal.SECURE_FRAMES_STREAM_BOTTOM_SHEET;
            michal = tangon.bind(report)(zuuluu, michal);
            return entity;
        };
        report = report.bind(golfie)(michal, zuuluu);
        zuuluu = _closure1_slot6;
        michal = _closure1_slot1;
        entity = 7;
        entity = foxtra[entity];
        michal = michal.bind(tangon)(entity);
        entity = {};
        golfie = 8;
        option = foxtra[golfie];
        option = romeon.bind(tangon)(option);
        offset = option.intl;
        verify = offset.string;
        option = foxtra[golfie];
        option = romeon.bind(tangon)(option);
        option = option.t;
        option = option.cTQI5u;
        option = verify.bind(offset)(option);
        entity['title'] = option;
        option = foxtra[golfie];
        option = romeon.bind(tangon)(option);
        offset = option.intl;
        verify = offset.string;
        option = foxtra[golfie];
        option = romeon.bind(tangon)(option);
        option = option.t;
        option = option.MPp7+P;
        option = verify.bind(offset)(option);
        entity['subtitle'] = option;
        option = foxtra[golfie];
        option = romeon.bind(tangon)(option);
        offset = option.intl;
        verify = offset.format;
        golfie = foxtra[golfie];
        golfie = romeon.bind(tangon)(golfie);
        golfie = golfie.t;
        option = golfie.wKxADQ;
        golfie = {};
        yankee = 9;
        yankee = foxtra[yankee];
        romeon = romeon.bind(tangon)(yankee);
        yankee = romeon.getSecureFramesHelpdeskArticle;
        yankee = yankee.bind(romeon)();
        golfie['helpArticle'] = yankee;
        golfie = verify.bind(offset)(option, golfie);
        entity['footer'] = golfie;
        entity['epochAuthenticator'] = oscard;
        entity['onShareClick'] = report;
        entity = zuuluu.bind(tangon)(michal, entity);
        return entity;
    };
    zuuluu['default'] = michal;
    return entity;
})();