// app/modules/rtc/native/SecureFramesStreamVerificationBottomSheet.tsx
export default (function(argFoo, argBar, argBaz, argCorge, _, argFred, argPlugh) {
    report = argBar;
    golf = argBaz;
    zulu = argFred;
    oscar = argPlugh;
    var _closure1_slot0 = report;
    var _closure1_slot1 = golf;
    var _closure1_slot2 = oscar;
    entity = global;
    verify = entity.Object;
    options = verify.defineProperty;
    tango = {};
    entity = true;
    tango['value'] = entity;
    entity = '__esModule';
    entity = options.bind(verify)(zulu, entity, tango);
    entity = 0;
    options = oscar[entity];
    tango = argCorge;
    entity = undefined;
    tango = tango.bind(entity)(options);
    var _closure1_slot3 = tango;
    tango = 1;
    tango = oscar[tango];
    tango = golf.bind(entity)(tango);
    var _closure1_slot4 = tango;
    tango = 2;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.AnalyticsSections;
    var _closure1_slot5 = tango;
    tango = 3;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.jsx;
    var _closure1_slot6 = tango;
    tango = 10;
    tango = oscar[tango];
    oscar = report.bind(entity)(tango);
    report = oscar.fileFinishedImporting;
    tango = 'modules/rtc/native/SecureFramesStreamVerificationBottomSheet.tsx';
    tango = report.bind(oscar)(tango);
    mike = function(argFoo) { // Original name: SecureFramesStreamVerificationBottomSheet
        entity = argFoo;
        options = entity.channelId;
        var _closure2_slot0 = options;
        entity = entity.streamKey;
        var _closure2_slot1 = entity;
        romeo = _closure1_slot0;
        foxtrot = _closure1_slot2;
        zulu = 4;
        zulu = foxtrot[zulu];
        tango = undefined;
        golf = romeo.bind(tango)(zulu);
        oscar = golf.useStateFromStores;
        zulu = _closure1_slot4;
        report = new Array(1);
        report[0] = zulu;
        zulu = function() {
            _fun81263: for(var _fun81263_ip = 0; ; ) switch(_fun81263_ip) {
 0:
                zulu = _closure1_slot4;
                mike = zulu.getSecureFramesState;
                entity = _closure2_slot1;
                mike = mike.bind(zulu)(entity);
                entity = null;
                zulu = entity == mike;
                entity = undefined;
                if(zulu) { _fun81263_ip = 42; continue _fun81263 }
 36:
                entity = mike.epochAuthenticator;
 42:
                return entity;
            }
        };
        oscar = oscar.bind(golf)(report, zulu);
        golf = _closure1_slot3;
        report = golf.useCallback;
        zulu = new Array(1);
        zulu[0] = options;
        mike = function(argFoo) {
            tango = _closure1_slot0;
            report = _closure1_slot2;
            entity = 5;
            zulu = report[entity];
            entity = undefined;
            golf = tango.bind(entity)(zulu);
            oscar = golf.trackE2EEStreamVerificationShareClicked;
            zulu = {};
            options = _closure2_slot0;
            zulu['channelId'] = options;
            zulu = oscar.bind(golf)(zulu);
            zulu = 6;
            zulu = report[zulu];
            report = tango.bind(entity)(zulu);
            tango = report.showShareActionSheet;
            zulu = {};
            oscar = argFoo;
            zulu['message'] = oscar;
            mike = _closure1_slot5;
            mike = mike.SECURE_FRAMES_STREAM_BOTTOM_SHEET;
            mike = tango.bind(report)(zulu, mike);
            return entity;
        };
        report = report.bind(golf)(mike, zulu);
        zulu = _closure1_slot6;
        mike = _closure1_slot1;
        entity = 7;
        entity = foxtrot[entity];
        mike = mike.bind(tango)(entity);
        entity = {};
        golf = 8;
        options = foxtrot[golf];
        options = romeo.bind(tango)(options);
        offset = options.intl;
        verify = offset.string;
        options = foxtrot[golf];
        options = romeo.bind(tango)(options);
        options = options.t;
        options = options.QogHlZ;
        options = verify.bind(offset)(options);
        entity['title'] = options;
        options = foxtrot[golf];
        options = romeo.bind(tango)(options);
        offset = options.intl;
        verify = offset.string;
        options = foxtrot[golf];
        options = romeo.bind(tango)(options);
        options = options.t;
        options = options.qODBkZ;
        options = verify.bind(offset)(options);
        entity['subtitle'] = options;
        options = foxtrot[golf];
        options = romeo.bind(tango)(options);
        offset = options.intl;
        verify = offset.format;
        golf = foxtrot[golf];
        golf = romeo.bind(tango)(golf);
        golf = golf.t;
        options = golf.H3+ktr;
        golf = {};
        yankee = 9;
        yankee = foxtrot[yankee];
        romeo = romeo.bind(tango)(yankee);
        yankee = romeo.getSecureFramesHelpdeskArticle;
        yankee = yankee.bind(romeo)();
        golf['helpArticle'] = yankee;
        golf = verify.bind(offset)(options, golf);
        entity['footer'] = golf;
        entity['epochAuthenticator'] = oscar;
        entity['onShareClick'] = report;
        entity = zulu.bind(tango)(mike, entity);
        return entity;
    };
    zulu['default'] = mike;
    return entity;
})();