// app/modules/rtc/native/SecureFramesCode.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    report = argBar;
    yankee = argBaz;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    var _closure1_slot1 = oscard;
    entity = function(argFoo) { // Original name: SecureFramesCodeGrid
        entity = argFoo;
        option = entity.chunks;
        var _closure2_slot0 = option;
        michal = entity.columns;
        var _closure2_slot1 = michal;
        zuuluu = _closure1_slot8;
        tangon = undefined;
        zuuluu = zuuluu.bind(tangon)();
        var _closure2_slot2 = zuuluu;
        golfie = _closure1_slot2;
        oscard = golfie.useMemo;
        zuuluu = new Array(2);
        zuuluu[0] = option;
        zuuluu[1] = michal;
        michal = function() {
            _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
                entity = new Array(0);
                michal = global;
                tangon = michal.Math;
                zuuluu = tangon.ceil;
                michal = _closure2_slot0;
                oscard = michal.length;
                michal = _closure2_slot1;
                michal = oscard / michal;
                tangon = zuuluu.bind(tangon)(michal);
                zuuluu = 0;
                oscard = zuuluu < tangon;
                michal = 0;
                if(!oscard) { _fun00002_ip = 125; continue _fun00001 }
 54:
                golfie = new Array(0);
                oscard = _closure2_slot1;
                oscard = zuuluu < oscard;
                option = 0;
                if(!oscard) { _fun00002_ip = 108; continue _fun00001 }
 71:
                oscard = _closure2_slot1;
                verify = michal * oscard;
                yankee = verify + option;
                offset = golfie.push;
                verify = _closure2_slot0;
                verify = verify[yankee];
                verify = offset.bind(golfie)(verify);
                option = option + 1;
                if(option < oscard) { _fun00002_ip = 71; continue _fun00001 }
 108:
                oscard = entity.push;
                oscard = oscard.bind(entity)(golfie);
                michal = michal + 1;
                if(michal < tangon) { _fun00002_ip = 54; continue _fun00001 }
 125:
                return entity;
            }
        };
        golfie = oscard.bind(golfie)(michal, zuuluu);
        var _closure2_slot3 = golfie;
        zuuluu = _closure1_slot5;
        michal = _closure1_slot7;
        entity = {};
        oscard = golfie.map;
        report = function(argFoo, argBar) {
            _fun00003: for(var _fun00004_ip = 0; ; ) switch(_fun00004_ip) {
 0:
                golfie = argFoo;
                verify = argBar;
                report = _closure1_slot6;
                tangon = _closure1_slot4;
                zuuluu = {};
                oscard = _closure1_slot5;
                entity = {};
                michal = _closure2_slot2;
                michal = michal.row;
                entity['style'] = michal;
                offset = golfie.map;
                michal = function(argFoo, argBar) {
                    verify = argFoo;
                    report = _closure1_slot5;
                    michal = _closure1_slot0;
                    zuuluu = _closure1_slot1;
                    entity = 6;
                    entity = zuuluu[entity];
                    tangon = undefined;
                    entity = michal.bind(tangon)(entity);
                    zuuluu = entity.Text;
                    michal = {'style': null, 'variant': 'text-md/normal', 'color': 'text-normal'};
                    entity = _closure2_slot2;
                    entity = entity.codeText;
                    michal['style'] = entity;
                    michal['children'] = verify;
                    entity = global;
                    entity = entity.HermesInternal;
                    option = entity.concat;
                    golfie = '';
                    oscard = '-';
                    entity = argBar;
                    entity = option.bind(golfie)(verify, oscard, entity);
                    entity = report.bind(tangon)(zuuluu, michal, entity);
                    return entity;
                };
                michal = offset.bind(golfie)(michal);
                entity['children'] = michal;
                michal = undefined;
                oscard = oscard.bind(michal)(tangon, entity);
                entity = new Array(2);
                entity[0] = oscard;
                oscard = _closure2_slot3;
                offset = oscard.length;
                oscard = 1;
                oscard = offset - oscard;
                oscard = verify < oscard;
                if(!oscard) { _fun00004_ip = 132; continue _fun00003 }
 102:
                yankee = _closure1_slot5;
                offset = _closure1_slot4;
                option = {};
                romeon = _closure2_slot2;
                romeon = romeon.divider;
                option['style'] = romeon;
                oscard = yankee.bind(michal)(offset, option);
 132:
                entity[1] = oscard;
                zuuluu['children'] = entity;
                oscard = golfie.join;
                entity = ' ';
                option = oscard.bind(golfie)(entity);
                entity = global;
                entity = entity.HermesInternal;
                golfie = entity.concat;
                oscard = '';
                entity = '-';
                entity = golfie.bind(oscard)(option, entity, verify);
                entity = report.bind(michal)(tangon, zuuluu, entity);
                return entity;
            }
        };
        report = oscard.bind(golfie)(report);
        entity['children'] = report;
        entity = zuuluu.bind(tangon)(michal, entity);
        return entity;
    };
    var _closure1_slot9 = entity;
    entity = global;
    option = entity.Object;
    golfie = option.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(option)(zuuluu, entity, tangon);
    entity = 0;
    golfie = oscard[entity];
    tangon = argCor;
    entity = undefined;
    tangon = tangon.bind(entity)(golfie);
    var _closure1_slot2 = tangon;
    offset = 1;
    tangon = oscard[offset];
    tangon = report.bind(entity)(tangon);
    golfie = tangon.ActivityIndicator;
    var _closure1_slot3 = golfie;
    tangon = tangon.View;
    var _closure1_slot4 = tangon;
    tangon = 2;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    romeon = tangon.Fonts;
    tangon = 3;
    golfie = oscard[tangon];
    golfie = report.bind(entity)(golfie);
    golfie = golfie.jsx;
    var _closure1_slot5 = golfie;
    golfie = oscard[tangon];
    golfie = report.bind(entity)(golfie);
    golfie = golfie.jsxs;
    var _closure1_slot6 = golfie;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.Fragment;
    var _closure1_slot7 = tangon;
    tangon = 4;
    tangon = oscard[tangon];
    option = report.bind(entity)(tangon);
    golfie = option.createStyles;
    tangon = {};
    verify = {};
    romeon = romeon.CODE_NORMAL;
    verify['fontFamily'] = romeon;
    tangon['codeText'] = verify;
    verify = {'flexDirection': 'row', 'justifyContent': 'space-around', 'paddingVertical': 8};
    tangon['row'] = verify;
    verify = {};
    verify['height'] = offset;
    offset = 5;
    romeon = oscard[offset];
    romeon = yankee.bind(entity)(romeon);
    romeon = romeon.colors;
    romeon = romeon.DIVIDER_SUBTLE;
    verify['backgroundColor'] = romeon;
    tangon['divider'] = verify;
    verify = {'backgroundColor': null, 'borderTopRightRadius': null, 'borderTopLeftRadius': null, 'paddingVertical': 10, 'paddingHorizontal': 16, 'justifyContent': 'space-between', 'alignItems': 'center', 'flexDirection': 'row'};
    romeon = oscard[offset];
    romeon = yankee.bind(entity)(romeon);
    romeon = romeon.colors;
    romeon = romeon.BG_BASE_TERTIARY;
    verify['backgroundColor'] = romeon;
    romeon = oscard[offset];
    romeon = yankee.bind(entity)(romeon);
    romeon = romeon.radii;
    romeon = romeon.lg;
    verify['borderTopRightRadius'] = romeon;
    romeon = oscard[offset];
    romeon = yankee.bind(entity)(romeon);
    romeon = romeon.radii;
    romeon = romeon.lg;
    verify['borderTopLeftRadius'] = romeon;
    tangon['codeHeader'] = verify;
    verify = {'backgroundColor': null, 'paddingVertical': 8, 'paddingHorizontal': 16};
    romeon = oscard[offset];
    romeon = yankee.bind(entity)(romeon);
    romeon = romeon.colors;
    romeon = romeon.BACKGROUND_MODIFIER_ACCENT;
    verify['backgroundColor'] = romeon;
    romeon = oscard[offset];
    romeon = yankee.bind(entity)(romeon);
    romeon = romeon.radii;
    romeon = romeon.lg;
    verify['borderBottomRightRadius'] = romeon;
    offset = oscard[offset];
    offset = yankee.bind(entity)(offset);
    offset = offset.radii;
    offset = offset.lg;
    verify['borderBottomLeftRadius'] = offset;
    tangon['code'] = verify;
    verify = {};
    offset = 126;
    verify['minHeight'] = offset;
    tangon['loading'] = verify;
    tangon = golfie.bind(option)(tangon);
    var _closure1_slot8 = tangon;
    tangon = 7;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/rtc/native/SecureFramesCode.tsx';
    tangon = report.bind(oscard)(tangon);
    michal = function(argFoo) { // Original name: SecureFramesCode
        _fun00005: for(var _fun00006_ip = 0; ; ) switch(_fun00006_ip) {
 0:
            entity = argFoo;
            romeon = entity.title;
            option = entity.trailing;
            backup = entity.chunks;
            foxtra = entity.columns;
            entity = _closure1_slot8;
            tangon = undefined;
            kiloes = entity.bind(tangon)();
            zuuluu = _closure1_slot6;
            michal = _closure1_slot7;
            entity = {};
            oscard = _closure1_slot4;
            report = {};
            golfie = kiloes.codeHeader;
            report['style'] = golfie;
            yankee = _closure1_slot5;
            verify = _closure1_slot0;
            sizing = _closure1_slot1;
            golfie = 6;
            golfie = sizing[golfie];
            golfie = verify.bind(tangon)(golfie);
            verify = golfie.Text;
            golfie = {'color': 'header-primary', 'variant': 'heading-md/semibold'};
            golfie['children'] = romeon;
            verify = yankee.bind(tangon)(verify, golfie);
            golfie = new Array(2);
            golfie[0] = verify;
            golfie[1] = option;
            report['children'] = golfie;
            oscard = zuuluu.bind(tangon)(oscard, report);
            report = new Array(2);
            report[0] = oscard;
            option = _closure1_slot5;
            golfie = _closure1_slot4;
            oscard = {};
            verify = kiloes.code;
            oscard['style'] = verify;
            verify = null;
            if(!(verify == backup)) { _fun00006_ip = 201; continue _fun00005 }
 173:
            romeon = _closure1_slot5;
            yankee = _closure1_slot3;
            verify = {};
            kiloes = kiloes.loading;
            verify['style'] = kiloes;
            verify = romeon.bind(tangon)(yankee, verify);
            _fun00006_ip = 227; continue _fun00005;
 201:
            romeon = _closure1_slot5;
            yankee = _closure1_slot9;
            offset = {};
            offset['chunks'] = backup;
            offset['columns'] = foxtra;
            verify = romeon.bind(tangon)(yankee, offset);
 227:
            oscard['children'] = verify;
            oscard = option.bind(tangon)(golfie, oscard);
            report[1] = oscard;
            entity['children'] = report;
            entity = zuuluu.bind(tangon)(michal, entity);
            return entity;
        }
    };
    zuuluu['default'] = michal;
    return entity;
})();