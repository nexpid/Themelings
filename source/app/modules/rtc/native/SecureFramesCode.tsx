// app/modules/rtc/native/SecureFramesCode.tsx
export default (function(argFoo, argBar, argBaz, argCorge, _, argFred, argPlugh) {
    report = argBar;
    yankee = argBaz;
    zulu = argFred;
    oscar = argPlugh;
    var _closure1_slot0 = report;
    var _closure1_slot1 = oscar;
    entity = function(argFoo) { // Original name: SecureFramesCodeGrid
        entity = argFoo;
        options = entity.chunks;
        var _closure2_slot0 = options;
        mike = entity.columns;
        var _closure2_slot1 = mike;
        zulu = _closure1_slot8;
        tango = undefined;
        zulu = zulu.bind(tango)();
        var _closure2_slot2 = zulu;
        golf = _closure1_slot2;
        oscar = golf.useMemo;
        zulu = new Array(2);
        zulu[0] = options;
        zulu[1] = mike;
        mike = function() {
            _fun81269: for(var _fun81269_ip = 0; ; ) switch(_fun81269_ip) {
 0:
                entity = new Array(0);
                mike = global;
                tango = mike.Math;
                zulu = tango.ceil;
                mike = _closure2_slot0;
                oscar = mike.length;
                mike = _closure2_slot1;
                mike = oscar / mike;
                tango = zulu.bind(tango)(mike);
                zulu = 0;
                oscar = zulu < tango;
                mike = 0;
                if(!oscar) { _fun81269_ip = 125; continue _fun81269 }
 54:
                golf = new Array(0);
                oscar = _closure2_slot1;
                oscar = zulu < oscar;
                options = 0;
                if(!oscar) { _fun81269_ip = 108; continue _fun81269 }
 71:
                oscar = _closure2_slot1;
                verify = mike * oscar;
                yankee = verify + options;
                offset = golf.push;
                verify = _closure2_slot0;
                verify = verify[yankee];
                verify = offset.bind(golf)(verify);
                options = options + 1;
                if(options < oscar) { _fun81269_ip = 71; continue _fun81269 }
 108:
                oscar = entity.push;
                oscar = oscar.bind(entity)(golf);
                mike = mike + 1;
                if(mike < tango) { _fun81269_ip = 54; continue _fun81269 }
 125:
                return entity;
            }
        };
        golf = oscar.bind(golf)(mike, zulu);
        var _closure2_slot3 = golf;
        zulu = _closure1_slot5;
        mike = _closure1_slot7;
        entity = {};
        oscar = golf.map;
        report = function(argFoo, argBar) {
            _fun81270: for(var _fun81270_ip = 0; ; ) switch(_fun81270_ip) {
 0:
                golf = argFoo;
                verify = argBar;
                report = _closure1_slot6;
                tango = _closure1_slot4;
                zulu = {};
                oscar = _closure1_slot5;
                entity = {};
                mike = _closure2_slot2;
                mike = mike.row;
                entity['style'] = mike;
                offset = golf.map;
                mike = function(argFoo, argBar) {
                    verify = argFoo;
                    report = _closure1_slot5;
                    mike = _closure1_slot0;
                    zulu = _closure1_slot1;
                    entity = 6;
                    entity = zulu[entity];
                    tango = undefined;
                    entity = mike.bind(tango)(entity);
                    zulu = entity.Text;
                    mike = {'style': null, 'variant': 'text-md/normal', 'color': 'text-normal'};
                    entity = _closure2_slot2;
                    entity = entity.codeText;
                    mike['style'] = entity;
                    mike['children'] = verify;
                    entity = global;
                    entity = entity.HermesInternal;
                    options = entity.concat;
                    golf = '';
                    oscar = '-';
                    entity = argBar;
                    entity = options.bind(golf)(verify, oscar, entity);
                    entity = report.bind(tango)(zulu, mike, entity);
                    return entity;
                };
                mike = offset.bind(golf)(mike);
                entity['children'] = mike;
                mike = undefined;
                oscar = oscar.bind(mike)(tango, entity);
                entity = new Array(2);
                entity[0] = oscar;
                oscar = _closure2_slot3;
                offset = oscar.length;
                oscar = 1;
                oscar = offset - oscar;
                oscar = verify < oscar;
                if(!oscar) { _fun81270_ip = 134; continue _fun81270 }
 104:
                yankee = _closure1_slot5;
                offset = _closure1_slot4;
                options = {};
                romeo = _closure2_slot2;
                romeo = romeo.divider;
                options['style'] = romeo;
                oscar = yankee.bind(mike)(offset, options);
 134:
                entity[1] = oscar;
                zulu['children'] = entity;
                oscar = golf.join;
                entity = ' ';
                options = oscar.bind(golf)(entity);
                entity = global;
                entity = entity.HermesInternal;
                golf = entity.concat;
                oscar = '';
                entity = '-';
                entity = golf.bind(oscar)(options, entity, verify);
                entity = report.bind(mike)(tango, zulu, entity);
                return entity;
            }
        };
        report = oscar.bind(golf)(report);
        entity['children'] = report;
        entity = zulu.bind(tango)(mike, entity);
        return entity;
    };
    var _closure1_slot9 = entity;
    entity = global;
    options = entity.Object;
    golf = options.defineProperty;
    tango = {};
    entity = true;
    tango['value'] = entity;
    entity = '__esModule';
    entity = golf.bind(options)(zulu, entity, tango);
    entity = 0;
    golf = oscar[entity];
    tango = argCorge;
    entity = undefined;
    tango = tango.bind(entity)(golf);
    var _closure1_slot2 = tango;
    offset = 1;
    tango = oscar[offset];
    tango = report.bind(entity)(tango);
    golf = tango.ActivityIndicator;
    var _closure1_slot3 = golf;
    tango = tango.View;
    var _closure1_slot4 = tango;
    tango = 2;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    romeo = tango.Fonts;
    tango = 3;
    golf = oscar[tango];
    golf = report.bind(entity)(golf);
    golf = golf.jsx;
    var _closure1_slot5 = golf;
    golf = oscar[tango];
    golf = report.bind(entity)(golf);
    golf = golf.jsxs;
    var _closure1_slot6 = golf;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.Fragment;
    var _closure1_slot7 = tango;
    tango = 4;
    tango = oscar[tango];
    options = report.bind(entity)(tango);
    golf = options.createStyles;
    tango = {};
    verify = {};
    romeo = romeo.CODE_NORMAL;
    verify['fontFamily'] = romeo;
    tango['codeText'] = verify;
    verify = {'flexDirection': 'row', 'justifyContent': 'space-around', 'paddingVertical': 8};
    tango['row'] = verify;
    verify = {};
    verify['height'] = offset;
    offset = 5;
    romeo = oscar[offset];
    romeo = yankee.bind(entity)(romeo);
    romeo = romeo.colors;
    romeo = romeo.DIVIDER_SUBTLE;
    verify['backgroundColor'] = romeo;
    tango['divider'] = verify;
    verify = {'backgroundColor': null, 'borderTopRightRadius': null, 'borderTopLeftRadius': null, 'paddingVertical': 10, 'paddingHorizontal': 16, 'justifyContent': 'space-between', 'alignItems': 'center', 'flexDirection': 'row'};
    romeo = oscar[offset];
    romeo = yankee.bind(entity)(romeo);
    romeo = romeo.colors;
    romeo = romeo.BG_BASE_TERTIARY;
    verify['backgroundColor'] = romeo;
    romeo = oscar[offset];
    romeo = yankee.bind(entity)(romeo);
    romeo = romeo.radii;
    romeo = romeo.lg;
    verify['borderTopRightRadius'] = romeo;
    romeo = oscar[offset];
    romeo = yankee.bind(entity)(romeo);
    romeo = romeo.radii;
    romeo = romeo.lg;
    verify['borderTopLeftRadius'] = romeo;
    tango['codeHeader'] = verify;
    verify = {'backgroundColor': null, 'paddingVertical': 8, 'paddingHorizontal': 16};
    romeo = oscar[offset];
    romeo = yankee.bind(entity)(romeo);
    romeo = romeo.colors;
    romeo = romeo.BACKGROUND_MODIFIER_ACCENT;
    verify['backgroundColor'] = romeo;
    romeo = oscar[offset];
    romeo = yankee.bind(entity)(romeo);
    romeo = romeo.radii;
    romeo = romeo.lg;
    verify['borderBottomRightRadius'] = romeo;
    offset = oscar[offset];
    offset = yankee.bind(entity)(offset);
    offset = offset.radii;
    offset = offset.lg;
    verify['borderBottomLeftRadius'] = offset;
    tango['code'] = verify;
    verify = {};
    offset = 126;
    verify['minHeight'] = offset;
    tango['loading'] = verify;
    tango = golf.bind(options)(tango);
    var _closure1_slot8 = tango;
    tango = 7;
    tango = oscar[tango];
    oscar = report.bind(entity)(tango);
    report = oscar.fileFinishedImporting;
    tango = 'modules/rtc/native/SecureFramesCode.tsx';
    tango = report.bind(oscar)(tango);
    mike = function(argFoo) { // Original name: SecureFramesCode
        _fun81272: for(var _fun81272_ip = 0; ; ) switch(_fun81272_ip) {
 0:
            entity = argFoo;
            romeo = entity.title;
            options = entity.trailing;
            backup = entity.chunks;
            foxtrot = entity.columns;
            entity = _closure1_slot8;
            tango = undefined;
            kilo = entity.bind(tango)();
            zulu = _closure1_slot6;
            mike = _closure1_slot7;
            entity = {};
            oscar = _closure1_slot4;
            report = {};
            golf = kilo.codeHeader;
            report['style'] = golf;
            yankee = _closure1_slot5;
            verify = _closure1_slot0;
            sizing = _closure1_slot1;
            golf = 6;
            golf = sizing[golf];
            golf = verify.bind(tango)(golf);
            verify = golf.Text;
            golf = {'color': 'header-primary', 'variant': 'heading-md/semibold'};
            golf['children'] = romeo;
            verify = yankee.bind(tango)(verify, golf);
            golf = new Array(2);
            golf[0] = verify;
            golf[1] = options;
            report['children'] = golf;
            oscar = zulu.bind(tango)(oscar, report);
            report = new Array(2);
            report[0] = oscar;
            options = _closure1_slot5;
            golf = _closure1_slot4;
            oscar = {};
            verify = kilo.code;
            oscar['style'] = verify;
            verify = null;
            if(!(verify == backup)) { _fun81272_ip = 201; continue _fun81272 }
 173:
            romeo = _closure1_slot5;
            yankee = _closure1_slot3;
            verify = {};
            kilo = kilo.loading;
            verify['style'] = kilo;
            verify = romeo.bind(tango)(yankee, verify);
            _fun81272_ip = 227; continue _fun81272;
 201:
            romeo = _closure1_slot5;
            yankee = _closure1_slot9;
            offset = {};
            offset['chunks'] = backup;
            offset['columns'] = foxtrot;
            verify = romeo.bind(tango)(yankee, offset);
 227:
            oscar['children'] = verify;
            oscar = options.bind(tango)(golf, oscar);
            report[1] = oscar;
            entity['children'] = report;
            entity = zulu.bind(tango)(mike, entity);
            return entity;
        }
    };
    zulu['default'] = mike;
    return entity;
})();