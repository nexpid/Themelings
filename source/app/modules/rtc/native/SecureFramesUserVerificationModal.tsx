// app/modules/rtc/native/SecureFramesUserVerificationModal.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    report = argBar;
    romeon = argBaz;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    var _closure1_slot1 = romeon;
    var _closure1_slot2 = oscard;
    entity = global;
    option = entity.Object;
    golfie = option.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(option)(zuuluu, entity, tangon);
    entity = 0;
    tangon = oscard[entity];
    entity = undefined;
    tangon = romeon.bind(entity)(tangon);
    var _closure1_slot3 = tangon;
    tangon = 1;
    golfie = oscard[tangon];
    tangon = argCor;
    tangon = tangon.bind(entity)(golfie);
    var _closure1_slot4 = tangon;
    tangon = 2;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    golfie = tangon.ActivityIndicator;
    var _closure1_slot5 = golfie;
    tangon = tangon.View;
    var _closure1_slot6 = tangon;
    tangon = 3;
    tangon = oscard[tangon];
    tangon = romeon.bind(entity)(tangon);
    var _closure1_slot7 = tangon;
    tangon = 4;
    tangon = oscard[tangon];
    tangon = romeon.bind(entity)(tangon);
    var _closure1_slot8 = tangon;
    tangon = 5;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    golfie = tangon.USER_VERIFICATION_CHUNK_SIZE;
    var _closure1_slot9 = golfie;
    golfie = tangon.USER_VERIFICATION_LENGTH;
    var _closure1_slot10 = golfie;
    golfie = tangon.USER_VERIFICATION_NUM_COLUMNS;
    var _closure1_slot11 = golfie;
    tangon = tangon.USER_VERIFIED_TOAST_KEY;
    var _closure1_slot12 = tangon;
    tangon = 6;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    golfie = tangon.AnalyticsLocations;
    var _closure1_slot13 = golfie;
    tangon = tangon.AnalyticsSections;
    var _closure1_slot14 = tangon;
    tangon = 7;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.ANDROID_FOREGROUND_RIPPLE;
    var _closure1_slot15 = tangon;
    tangon = 8;
    golfie = oscard[tangon];
    golfie = report.bind(entity)(golfie);
    golfie = golfie.jsx;
    var _closure1_slot16 = golfie;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.jsxs;
    var _closure1_slot17 = tangon;
    tangon = 9;
    tangon = oscard[tangon];
    option = report.bind(entity)(tangon);
    golfie = option.createStyles;
    tangon = {};
    verify = {'flex': 1, 'padding': 16, 'flexDirection': 'column'};
    offset = 16;
    yankee = 10;
    foxtra = oscard[yankee];
    foxtra = romeon.bind(entity)(foxtra);
    foxtra = foxtra.colors;
    foxtra = foxtra.BACKGROUND_PRIMARY;
    verify['backgroundColor'] = foxtra;
    tangon['container'] = verify;
    verify = {'flex': 1, 'gap': 16, 'justifyContent': 'flex-end'};
    tangon['footer'] = verify;
    verify = {};
    foxtra = 'center';
    verify['textAlign'] = foxtra;
    tangon['footerText'] = verify;
    verify = {'height': 56, 'flexDirection': 'row', 'alignItems': 'center', 'justifyContent': 'space-between'};
    tangon['header'] = verify;
    verify = {};
    verify['textAlign'] = foxtra;
    tangon['subtitle'] = verify;
    verify = {'height': 80, 'width': 80, 'borderRadius': 40, 'backgroundColor': null, 'alignItems': 'center', 'justifyContent': 'center'};
    yankee = oscard[yankee];
    yankee = romeon.bind(entity)(yankee);
    yankee = yankee.colors;
    yankee = yankee.BG_MOD_SUBTLE;
    verify['backgroundColor'] = yankee;
    tangon['iconContainer'] = verify;
    verify = {'height': 48, 'width': 48};
    tangon['icon'] = verify;
    verify = {};
    yankee = 24;
    verify['marginTop'] = yankee;
    tangon['code'] = verify;
    verify = {};
    verify['marginBottom'] = offset;
    tangon['helpMessage'] = verify;
    tangon = golfie.bind(option)(tangon);
    var _closure1_slot18 = tangon;
    tangon = 38;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/rtc/native/SecureFramesUserVerificationModal.tsx';
    tangon = report.bind(oscard)(tangon);
    michal = function(argFoo) { // Original name: SecureFramesUserVerificationModal
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            michal = argFoo;
            record = michal.userId;
            var _closure2_slot0 = record;
            oscard = michal.channelId;
            var _closure2_slot1 = oscard;
            michal = _closure1_slot18;
            tangon = undefined;
            vacuum = michal.bind(tangon)();
            status = _closure1_slot0;
            sierra = _closure1_slot2;
            michal = 11;
            zuuluu = sierra[michal];
            option = status.bind(tangon)(zuuluu);
            golfie = option.useStateFromStores;
            zuuluu = _closure1_slot8;
            report = new Array(1);
            report[0] = zuuluu;
            zuuluu = function() {
                zuuluu = _closure1_slot8;
                michal = zuuluu.getUser;
                entity = _closure2_slot0;
                entity = michal.bind(zuuluu)(entity);
                return entity;
            };
            golfie = golfie.bind(option)(report, zuuluu);
            michal = sierra[michal];
            option = status.bind(tangon)(michal);
            report = option.useStateFromStores;
            michal = _closure1_slot7;
            zuuluu = new Array(1);
            zuuluu[0] = michal;
            michal = function() {
                _fun00003: for(var _fun00004_ip = 0; ; ) switch(_fun00004_ip) {
 0:
                    zuuluu = _closure1_slot7;
                    michal = zuuluu.getChannel;
                    entity = _closure2_slot1;
                    zuuluu = michal.bind(zuuluu)(entity);
                    entity = null;
                    michal = entity == zuuluu;
                    entity = undefined;
                    if(michal) { _fun00004_ip = 45; continue _fun00003 }
 35:
                    michal = zuuluu.getGuildId;
                    entity = michal.bind(zuuluu)();
 45:
                    return entity;
                }
            };
            report = report.bind(option)(zuuluu, michal);
            result = _closure1_slot1;
            michal = 12;
            michal = sierra[michal];
            zuuluu = result.bind(tangon)(michal);
            michal = zuuluu.useName;
            update = null;
            variable36 = michal.bind(zuuluu)(report, update, golfie);
            var _closure2_slot2 = variable36;
            michal = 13;
            michal = sierra[michal];
            report = status.bind(tangon)(michal);
            zuuluu = report.useSecureFramesPairwiseFingerprint;
            michal = {};
            michal['userId'] = record;
            michal = zuuluu.bind(report)(michal);
            option = michal.fingerprint;
            var _closure2_slot3 = option;
            config = michal.userKey;
            var _closure2_slot4 = config;
            michal = 14;
            michal = sierra[michal];
            report = status.bind(tangon)(michal);
            zuuluu = report.useReadableSecureFramesFingerprint;
            michal = {};
            michal['fingerprintBase64'] = option;
            golfie = _closure1_slot9;
            michal['chunkSize'] = golfie;
            golfie = _closure1_slot10;
            michal['desiredLength'] = golfie;
            output = zuuluu.bind(report)(michal);
            var _closure2_slot5 = output;
            michal = 15;
            michal = sierra[michal];
            report = status.bind(tangon)(michal);
            zuuluu = report.useIsUserSecureFramesVerified;
            michal = {};
            michal['userId'] = record;
            michal['channelId'] = oscard;
            golfie = 'NativeSecureFramesUserVerificationModal';
            michal['location'] = golfie;
            foxtra = zuuluu.bind(report)(michal);
            var _closure2_slot6 = foxtra;
            michal = 16;
            michal = sierra[michal];
            report = status.bind(tangon)(michal);
            zuuluu = report.useIsPersistentSecureFramesFingerprint;
            michal = {};
            michal['userId'] = record;
            zuuluu = zuuluu.bind(report)(michal);
            verify = zuuluu.isCurrentUserKeyPersistent;
            var _closure2_slot7 = verify;
            michal = zuuluu.isOtherUserKeyPersistent;
            var _closure2_slot8 = michal;
            echoed = zuuluu.loading;
            report = _closure1_slot4;
            offset = report.useCallback;
            golfie = new Array(5);
            golfie[0] = oscard;
            golfie[1] = config;
            golfie[2] = michal;
            golfie[3] = variable36;
            golfie[4] = record;
            zuuluu = function() {
                _fun00005: for(var _fun00006_ip = 0; ; ) switch(_fun00006_ip) {
 0:
                    michal = _closure2_slot4;
                    entity = null;
                    if(!(entity != michal)) { _fun00006_ip = 235; continue _fun00005 }
 16:
                    verify = _closure1_slot0;
                    offset = _closure1_slot2;
                    entity = 17;
                    entity = offset[entity];
                    report = undefined;
                    romeon = verify.bind(report)(entity);
                    yankee = romeon.addVerification;
                    output = _closure2_slot0;
                    sizing = _closure2_slot4;
                    kiloes = _closure2_slot8;
                    backup = _closure2_slot1;
                    entity = _closure1_slot13;
                    foxtra = entity.E2EE_USER_VERIFY_MODAL;
                    result = romeon;
                    entity = result[yankee](output, sizing, kiloes, backup, foxtra, romeon);
                    michal = _closure1_slot1;
                    entity = 18;
                    entity = offset[entity];
                    zuuluu = michal.bind(report)(entity);
                    entity = zuuluu.pop;
                    entity = entity.bind(zuuluu)();
                    entity = 19;
                    entity = offset[entity];
                    zuuluu = michal.bind(report)(entity);
                    michal = zuuluu.open;
                    entity = {};
                    tangon = _closure1_slot12;
                    entity['key'] = tangon;
                    tangon = 'text-positive';
                    entity['iconColor'] = tangon;
                    tangon = 20;
                    tangon = offset[tangon];
                    tangon = verify.bind(report)(tangon);
                    tangon = tangon.CircleCheckIcon;
                    entity['IconComponent'] = tangon;
                    tangon = 21;
                    oscard = offset[tangon];
                    oscard = verify.bind(report)(oscard);
                    golfie = oscard.intl;
                    oscard = golfie.formatToPlainString;
                    tangon = offset[tangon];
                    tangon = verify.bind(report)(tangon);
                    tangon = tangon.t;
                    report = tangon.Gwu139;
                    tangon = {};
                    option = _closure2_slot2;
                    tangon['username'] = option;
                    tangon = oscard.bind(golfie)(report, tangon);
                    entity['content'] = tangon;
                    entity = michal.bind(zuuluu)(entity);
 235:
                    entity = undefined;
                    return entity;
                }
            };
            kiloes = offset.bind(report)(zuuluu, golfie);
            offset = report.useCallback;
            golfie = new Array(3);
            golfie[0] = config;
            golfie[1] = michal;
            golfie[2] = record;
            zuuluu = function() {
                _fun00007: for(var _fun00008_ip = 0; ; ) switch(_fun00008_ip) {
 0:
                    zuuluu = _closure2_slot4;
                    entity = null;
                    if(!(entity != zuuluu)) { _fun00008_ip = 89; continue _fun00007 }
 13:
                    oscard = _closure1_slot0;
                    tangon = _closure1_slot2;
                    zuuluu = 17;
                    report = tangon[zuuluu];
                    zuuluu = undefined;
                    option = oscard.bind(zuuluu)(report);
                    golfie = option.deleteVerification;
                    oscard = _closure2_slot0;
                    report = _closure2_slot4;
                    michal = _closure2_slot8;
                    michal = golfie.bind(option)(oscard, report, michal);
                    michal = _closure1_slot1;
                    entity = 18;
                    entity = tangon[entity];
                    michal = michal.bind(zuuluu)(entity);
                    entity = michal.pop;
                    entity = entity.bind(michal)();
 89:
                    entity = undefined;
                    return entity;
                }
            };
            sizing = offset.bind(report)(zuuluu, golfie);
            zuuluu = 22;
            zuuluu = sierra[zuuluu];
            offset = status.bind(tangon)(zuuluu);
            golfie = offset.useSecureFramesDeeplinkExperiment;
            zuuluu = {};
            yankee = 'SecureFramesUserVerificationModal';
            zuuluu['location'] = yankee;
            zuuluu = golfie.bind(offset)(zuuluu);
            zuuluu = zuuluu.enabled;
            var _closure2_slot9 = zuuluu;
            offset = report.useCallback;
            golfie = new Array(5);
            golfie[0] = oscard;
            golfie[1] = output;
            golfie[2] = option;
            golfie[3] = zuuluu;
            golfie[4] = record;
            zuuluu = function() {
                _fun00009: for(var _fun00010_ip = 0; ; ) switch(_fun00010_ip) {
 0:
                    entity = _closure2_slot3;
                    zuuluu = null;
                    if(!(zuuluu != entity)) { _fun00010_ip = 222; continue _fun00009 }
 16:
                    entity = _closure2_slot5;
                    if(!(zuuluu != entity)) { _fun00010_ip = 222; continue _fun00009 }
 27:
                    report = _closure1_slot1;
                    oscard = _closure1_slot2;
                    zuuluu = 18;
                    zuuluu = oscard[zuuluu];
                    tangon = undefined;
                    report = report.bind(tangon)(zuuluu);
                    zuuluu = report.pop;
                    zuuluu = zuuluu.bind(report)();
                    report = _closure1_slot0;
                    zuuluu = 23;
                    zuuluu = oscard[zuuluu];
                    oscard = report.bind(tangon)(zuuluu);
                    report = oscard.trackE2EEUserVerificationShareClicked;
                    zuuluu = {};
                    golfie = _closure2_slot0;
                    zuuluu['userId'] = golfie;
                    golfie = _closure2_slot1;
                    zuuluu['channelId'] = golfie;
                    zuuluu = report.bind(oscard)(zuuluu);
                    zuuluu = _closure2_slot9;
                    if(zuuluu) { _fun00010_ip = 134; continue _fun00009 }
 114:
                    oscard = _closure2_slot5;
                    report = oscard.join;
                    zuuluu = ' ';
                    report = report.bind(oscard)(zuuluu);
                    _fun00010_ip = 174; continue _fun00009;
 134:
                    oscard = _closure1_slot0;
                    golfie = _closure1_slot2;
                    zuuluu = 17;
                    zuuluu = golfie[zuuluu];
                    golfie = oscard.bind(tangon)(zuuluu);
                    oscard = golfie.getUserVerificationDeeplink;
                    zuuluu = _closure2_slot0;
                    michal = _closure2_slot3;
                    report = oscard.bind(golfie)(zuuluu, michal);
 174:
                    zuuluu = _closure1_slot0;
                    oscard = _closure1_slot2;
                    michal = 24;
                    michal = oscard[michal];
                    tangon = zuuluu.bind(tangon)(michal);
                    zuuluu = tangon.showShareActionSheet;
                    michal = {};
                    michal['message'] = report;
                    entity = _closure1_slot14;
                    entity = entity.SECURE_FRAMES_VOICE_BOTTOM_SHEET;
                    entity = zuuluu.bind(tangon)(michal, entity);
 222:
                    entity = undefined;
                    return entity;
                }
            };
            romeon = offset.bind(report)(zuuluu, golfie);
            zuuluu = 25;
            zuuluu = sierra[zuuluu];
            zuuluu = result.bind(tangon)(zuuluu);
            zuuluu = zuuluu.bind(tangon)();
            zuuluu = zuuluu.analyticsLocations;
            var _closure2_slot10 = zuuluu;
            offset = report.useCallback;
            golfie = new Array(3);
            golfie[0] = zuuluu;
            golfie[1] = oscard;
            golfie[2] = record;
            zuuluu = function() {
                zuuluu = _closure1_slot1;
                tangon = _closure1_slot2;
                entity = 18;
                michal = tangon[entity];
                entity = undefined;
                report = zuuluu.bind(entity)(michal);
                michal = report.pop;
                michal = michal.bind(report)();
                michal = 26;
                michal = tangon[michal];
                zuuluu = zuuluu.bind(entity)(michal);
                michal = {};
                report = _closure2_slot0;
                michal['userId'] = report;
                report = _closure2_slot1;
                michal['channelId'] = report;
                report = true;
                michal['isVoiceContext'] = report;
                tangon = _closure2_slot10;
                michal['sourceAnalyticsLocations'] = tangon;
                michal = zuuluu.bind(entity)(michal);
                return entity;
            };
            sequen = offset.bind(report)(zuuluu, golfie);
            zuuluu = 27;
            zuuluu = sierra[zuuluu];
            offset = status.bind(tangon)(zuuluu);
            golfie = offset.useAlertIfSecureFramesKeyInconsistent;
            zuuluu = {};
            zuuluu['channelId'] = oscard;
            zuuluu['userId'] = record;
            zuuluu['nickname'] = variable36;
            yankee = 18;
            yankee = sierra[yankee];
            yankee = result.bind(tangon)(yankee);
            yankee = yankee.pop;
            zuuluu['onAlertOpen'] = yankee;
            zuuluu = golfie.bind(offset)(zuuluu);
            offset = report.useMemo;
            golfie = new Array(1);
            golfie[0] = foxtra;
            zuuluu = function() {
                _fun00011: for(var _fun00012_ip = 0; ; ) switch(_fun00012_ip) {
 0:
                    entity = _closure2_slot6;
                    report = _closure1_slot0;
                    oscard = _closure1_slot2;
                    michal = 21;
                    zuuluu = oscard[michal];
                    tangon = undefined;
                    zuuluu = report.bind(tangon)(zuuluu);
                    golfie = zuuluu.intl;
                    zuuluu = golfie.string;
                    michal = oscard[michal];
                    michal = report.bind(tangon)(michal);
                    michal = michal.t;
                    if(entity) { _fun00012_ip = 108; continue _fun00011 }
 59:
                    entity = michal.y2b7CA;
                    option = zuuluu.bind(golfie)(entity);
                    entity = new Array(2);
                    entity[0] = option;
                    option = 28;
                    option = oscard[option];
                    option = report.bind(tangon)(option);
                    option = option.BadgeColors;
                    option = option.DANGER;
                    entity[1] = option;
                    _fun00012_ip = 160; continue _fun00011;
 108:
                    michal = michal.UNUuen;
                    zuuluu = zuuluu.bind(golfie)(michal);
                    michal = new Array(2);
                    michal[0] = zuuluu;
                    zuuluu = 28;
                    zuuluu = oscard[zuuluu];
                    zuuluu = report.bind(tangon)(zuuluu);
                    zuuluu = zuuluu.BadgeColors;
                    zuuluu = zuuluu.INFO;
                    michal[1] = zuuluu;
                    entity = michal;
 160:
                    return entity;
                }
            };
            offset = offset.bind(report)(zuuluu, golfie);
            golfie = _closure1_slot3;
            zuuluu = 2;
            golfie = golfie.bind(tangon)(offset, zuuluu);
            zuuluu = 0;
            cntext = golfie[zuuluu];
            zuuluu = 1;
            papara = golfie[zuuluu];
            golfie = report.useMemo;
            zuuluu = new Array(3);
            zuuluu[0] = verify;
            zuuluu[1] = michal;
            zuuluu[2] = variable36;
            michal = function() {
                zuuluu = _closure1_slot0;
                michal = _closure1_slot2;
                entity = 17;
                michal = michal[entity];
                entity = undefined;
                zuuluu = zuuluu.bind(entity)(michal);
                michal = zuuluu.getUserVerificationFooterText;
                entity = {};
                report = _closure2_slot7;
                entity['isCurrentUserKeyPersistent'] = report;
                report = _closure2_slot8;
                entity['isOtherUserKeyPersistent'] = report;
                tangon = _closure2_slot2;
                entity['otherUserNickname'] = tangon;
                entity = michal.bind(zuuluu)(entity);
                return entity;
            };
            ctrled = golfie.bind(report)(michal, zuuluu);
            zuuluu = report.useEffect;
            michal = new Array(2);
            michal[0] = oscard;
            michal[1] = record;
            entity = function() {
                zuuluu = _closure1_slot0;
                michal = _closure1_slot2;
                entity = 23;
                michal = michal[entity];
                entity = undefined;
                tangon = zuuluu.bind(entity)(michal);
                zuuluu = tangon.trackE2EEUserVerificationViewed;
                michal = {};
                oscard = _closure2_slot0;
                michal['userId'] = oscard;
                report = _closure2_slot1;
                michal['channelId'] = report;
                michal = zuuluu.bind(tangon)(michal);
                return entity;
            };
            entity = zuuluu.bind(report)(entity, michal);
            zuuluu = _closure1_slot17;
            entity = 29;
            entity = sierra[entity];
            entity = status.bind(tangon)(entity);
            michal = entity.SafeAreaPaddingView;
            entity = {'top': true, 'bottom': true};
            report = vacuum.container;
            entity['style'] = report;
            oscard = _closure1_slot6;
            report = {};
            golfie = vacuum.header;
            report['style'] = golfie;
            yankee = _closure1_slot16;
            verify = 30;
            golfie = sierra[verify];
            golfie = status.bind(tangon)(golfie);
            offset = golfie.PressableOpacity;
            golfie = {};
            target = 'button';
            golfie['accessibilityRole'] = target;
            result = 21;
            source = sierra[result];
            source = status.bind(tangon)(source);
            whisks = source.intl;
            limora = whisks.string;
            source = sierra[result];
            source = status.bind(tangon)(source);
            source = source.t;
            source = source.cpT0Cg;
            source = limora.bind(whisks)(source);
            golfie['accessibilityLabel'] = source;
            source = _closure1_slot15;
            golfie['androidRippleConfig'] = source;
            source = 8;
            golfie['hitSlop'] = source;
            golfie['onPress'] = sequen;
            sequen = 31;
            sequen = sierra[sequen];
            sequen = status.bind(tangon)(sequen);
            status = sequen.ArrowLargeLeftIcon;
            sequen = {};
            sierra = 'md';
            sequen['size'] = sierra;
            sequen = yankee.bind(tangon)(status, sequen);
            golfie['children'] = sequen;
            offset = yankee.bind(tangon)(offset, golfie);
            golfie = new Array(2);
            golfie[0] = offset;
            option = update != option;
            if(!option) { _fun00002_ip = 971; continue _fun00001 }
 967:
            option = update != output;
 971:
            if(!option) { _fun00002_ip = 1171; continue _fun00001 }
 977:
            yankee = _closure1_slot16;
            sierra = _closure1_slot0;
            sequen = _closure1_slot2;
            verify = sequen[verify];
            verify = sierra.bind(tangon)(verify);
            offset = verify.PressableOpacity;
            verify = {};
            verify['accessibilityRole'] = target;
            target = sequen[result];
            target = sierra.bind(tangon)(target);
            limora = target.intl;
            status = limora.string;
            target = sequen[result];
            target = sierra.bind(tangon)(target);
            target = target.t;
            target = target.RDE0SU;
            target = status.bind(limora)(target);
            verify['accessibilityLabel'] = target;
            target = _closure1_slot15;
            verify['androidRippleConfig'] = target;
            verify['hitSlop'] = source;
            verify['onPress'] = romeon;
            romeon = 32;
            romeon = sequen[romeon];
            romeon = sierra.bind(tangon)(romeon);
            source = romeon.Text;
            romeon = {'variant': 'text-md/semibold', 'color': 'text-brand'};
            target = sequen[result];
            target = sierra.bind(tangon)(target);
            status = target.intl;
            target = status.string;
            sequen = sequen[result];
            sequen = sierra.bind(tangon)(sequen);
            sequen = sequen.t;
            sequen = sequen.RDE0SU;
            sequen = target.bind(status)(sequen);
            romeon['children'] = sequen;
            romeon = yankee.bind(tangon)(source, romeon);
            verify['children'] = romeon;
            option = yankee.bind(tangon)(offset, verify);
 1171:
            golfie[1] = option;
            report['children'] = golfie;
            oscard = zuuluu.bind(tangon)(oscard, report);
            report = new Array(4);
            report[0] = oscard;
            option = _closure1_slot17;
            target = _closure1_slot0;
            sequen = _closure1_slot2;
            oscard = 33;
            oscard = sequen[oscard];
            oscard = target.bind(tangon)(oscard);
            offset = oscard.Stack;
            oscard = {'spacing': 8, 'justify': 'center', 'align': 'center', 'direction': 'vertical'};
            source = _closure1_slot16;
            golfie = _closure1_slot6;
            verify = {};
            yankee = vacuum.iconContainer;
            verify['style'] = yankee;
            yankee = 34;
            yankee = sequen[yankee];
            yankee = target.bind(tangon)(yankee);
            status = yankee.ShieldLockIcon;
            yankee = {};
            romeon = 'custom';
            yankee['size'] = romeon;
            romeon = vacuum.icon;
            yankee['style'] = romeon;
            romeon = _closure1_slot1;
            sierra = 10;
            sierra = sequen[sierra];
            sierra = romeon.bind(tangon)(sierra);
            sierra = sierra.colors;
            sierra = sierra.HEADER_SECONDARY;
            yankee['color'] = sierra;
            yankee = source.bind(tangon)(status, yankee);
            verify['children'] = yankee;
            verify = source.bind(tangon)(golfie, verify);
            yankee = new Array(3);
            yankee[0] = verify;
            verify = 32;
            status = sequen[verify];
            status = target.bind(tangon)(status);
            sierra = status.Text;
            status = {'variant': 'heading-xl/bold', 'color': 'header-primary'};
            limora = sequen[result];
            limora = target.bind(tangon)(limora);
            equals = limora.intl;
            whisks = equals.string;
            limora = sequen[result];
            limora = target.bind(tangon)(limora);
            limora = limora.t;
            limora = limora./WPGnJ;
            limora = whisks.bind(equals)(limora);
            status['children'] = limora;
            status = source.bind(tangon)(sierra, status);
            yankee[1] = status;
            status = sequen[verify];
            status = target.bind(tangon)(status);
            sierra = status.Text;
            status = {'style': null, 'variant': 'text-md/medium', 'color': 'header-secondary'};
            limora = vacuum.subtitle;
            status['style'] = limora;
            limora = sequen[result];
            limora = target.bind(tangon)(limora);
            quebec = limora.intl;
            equals = quebec.format;
            limora = sequen[result];
            limora = target.bind(tangon)(limora);
            limora = limora.t;
            whisks = limora.oc2kcX;
            limora = {};
            limora['username'] = variable36;
            limora = equals.bind(quebec)(whisks, limora);
            status['children'] = limora;
            status = source.bind(tangon)(sierra, status);
            yankee[2] = status;
            oscard['children'] = yankee;
            oscard = option.bind(tangon)(offset, oscard);
            report[1] = oscard;
            oscard = {};
            offset = vacuum.code;
            oscard['style'] = offset;
            offset = 35;
            offset = sequen[offset];
            yankee = romeon.bind(tangon)(offset);
            offset = {};
            status = vacuum.helpMessage;
            offset['style'] = status;
            offset['userId'] = record;
            offset['userKey'] = config;
            yankee = source.bind(tangon)(yankee, offset);
            offset = new Array(2);
            offset[0] = yankee;
            yankee = 36;
            yankee = sequen[yankee];
            romeon = romeon.bind(tangon)(yankee);
            yankee = {};
            config = sequen[result];
            config = target.bind(tangon)(config);
            record = config.intl;
            config = record.string;
            sequen = sequen[result];
            sequen = target.bind(tangon)(sequen);
            sequen = sequen.t;
            sequen = sequen./WPGnJ;
            sequen = config.bind(record)(sequen);
            yankee['title'] = sequen;
            yankee['chunks'] = output;
            sequen = _closure1_slot11;
            yankee['columns'] = sequen;
            if(!(update != output)) { _fun00002_ip = 1745; continue _fun00001 }
 1697:
            record = _closure1_slot16;
            config = _closure1_slot0;
            target = _closure1_slot2;
            sequen = 28;
            sequen = target[sequen];
            sequen = config.bind(tangon)(sequen);
            config = sequen.TextBadge;
            sequen = {};
            sequen['color'] = papara;
            sequen['text'] = cntext;
            sequen = record.bind(tangon)(config, sequen);
            _fun00002_ip = 1761; continue _fun00001;
 1745:
            cntext = _closure1_slot16;
            record = _closure1_slot5;
            config = {};
            sequen = cntext.bind(tangon)(record, config);
 1761:
            yankee['trailing'] = sequen;
            yankee = source.bind(tangon)(romeon, yankee);
            offset[1] = yankee;
            oscard['children'] = offset;
            oscard = option.bind(tangon)(golfie, oscard);
            report[2] = oscard;
            option = _closure1_slot17;
            golfie = _closure1_slot6;
            oscard = {};
            offset = vacuum.footer;
            oscard['style'] = offset;
            romeon = _closure1_slot16;
            yankee = _closure1_slot0;
            source = _closure1_slot2;
            verify = source[verify];
            verify = yankee.bind(tangon)(verify);
            offset = verify.Text;
            verify = {'style': null, 'variant': 'text-xs/normal', 'color': 'header-secondary'};
            vacuum = vacuum.footerText;
            verify['style'] = vacuum;
            verify['children'] = ctrled;
            offset = romeon.bind(tangon)(offset, verify);
            verify = new Array(2);
            verify[0] = offset;
            offset = 37;
            offset = source[offset];
            offset = yankee.bind(tangon)(offset);
            yankee = offset.Button;
            offset = {};
            output = update == output;
            if(output) { _fun00002_ip = 1910; continue _fun00001 }
 1907:
            output = echoed;
 1910:
            offset['disabled'] = output;
            output = 'primary';
            offset['variant'] = output;
            if(!foxtra) { _fun00002_ip = 1928; continue _fun00001 }
 1925:
            kiloes = sizing;
 1928:
            offset['onPress'] = kiloes;
            output = _closure1_slot0;
            backup = _closure1_slot2;
            kiloes = backup[result];
            kiloes = output.bind(tangon)(kiloes);
            sizing = kiloes.intl;
            kiloes = sizing.string;
            backup = backup[result];
            backup = output.bind(tangon)(backup);
            backup = backup.t;
            if(foxtra) { _fun00002_ip = 1989; continue _fun00001 }
 1976:
            foxtra = backup.0tvNAg;
            foxtra = kiloes.bind(sizing)(foxtra);
            _fun00002_ip = 2002; continue _fun00001;
 1989:
            backup = backup.Osb+/v;
            foxtra = kiloes.bind(sizing)(backup);
 2002:
            offset['text'] = foxtra;
            offset = romeon.bind(tangon)(yankee, offset);
            verify[1] = offset;
            oscard['children'] = verify;
            oscard = option.bind(tangon)(golfie, oscard);
            report[3] = oscard;
            entity['children'] = report;
            entity = zuuluu.bind(tangon)(michal, entity);
            return entity;
        }
    };
    zuuluu['default'] = michal;
    return entity;
})();