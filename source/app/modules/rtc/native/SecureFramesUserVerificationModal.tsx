// app/modules/rtc/native/SecureFramesUserVerificationModal.tsx
export default (function(argFoo, argBar, argBaz, argCorge, _, argFred, argPlugh) {
    report = argBar;
    romeo = argBaz;
    zulu = argFred;
    oscar = argPlugh;
    var _closure1_slot0 = report;
    var _closure1_slot1 = romeo;
    var _closure1_slot2 = oscar;
    entity = global;
    options = entity.Object;
    golf = options.defineProperty;
    tango = {};
    entity = true;
    tango['value'] = entity;
    entity = '__esModule';
    entity = golf.bind(options)(zulu, entity, tango);
    entity = 0;
    tango = oscar[entity];
    entity = undefined;
    tango = romeo.bind(entity)(tango);
    var _closure1_slot3 = tango;
    tango = 1;
    golf = oscar[tango];
    tango = argCorge;
    tango = tango.bind(entity)(golf);
    var _closure1_slot4 = tango;
    tango = 2;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    golf = tango.ActivityIndicator;
    var _closure1_slot5 = golf;
    tango = tango.View;
    var _closure1_slot6 = tango;
    tango = 3;
    tango = oscar[tango];
    tango = romeo.bind(entity)(tango);
    var _closure1_slot7 = tango;
    tango = 4;
    tango = oscar[tango];
    tango = romeo.bind(entity)(tango);
    var _closure1_slot8 = tango;
    tango = 5;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    golf = tango.USER_VERIFICATION_CHUNK_SIZE;
    var _closure1_slot9 = golf;
    golf = tango.USER_VERIFICATION_LENGTH;
    var _closure1_slot10 = golf;
    golf = tango.USER_VERIFICATION_NUM_COLUMNS;
    var _closure1_slot11 = golf;
    tango = tango.USER_VERIFIED_TOAST_KEY;
    var _closure1_slot12 = tango;
    tango = 6;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    golf = tango.AnalyticsLocations;
    var _closure1_slot13 = golf;
    tango = tango.AnalyticsSections;
    var _closure1_slot14 = tango;
    tango = 7;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.ANDROID_FOREGROUND_RIPPLE;
    var _closure1_slot15 = tango;
    tango = 8;
    golf = oscar[tango];
    golf = report.bind(entity)(golf);
    golf = golf.jsx;
    var _closure1_slot16 = golf;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.jsxs;
    var _closure1_slot17 = tango;
    tango = 9;
    tango = oscar[tango];
    options = report.bind(entity)(tango);
    golf = options.createStyles;
    tango = {};
    verify = {'flex': 1, 'padding': 16, 'flexDirection': 'column'};
    offset = 16;
    yankee = 10;
    foxtrot = oscar[yankee];
    foxtrot = romeo.bind(entity)(foxtrot);
    foxtrot = foxtrot.colors;
    foxtrot = foxtrot.BACKGROUND_PRIMARY;
    verify['backgroundColor'] = foxtrot;
    tango['container'] = verify;
    verify = {'flex': 1, 'gap': 16, 'justifyContent': 'flex-end'};
    tango['footer'] = verify;
    verify = {};
    foxtrot = 'center';
    verify['textAlign'] = foxtrot;
    tango['footerText'] = verify;
    verify = {'height': 56, 'flexDirection': 'row', 'alignItems': 'center', 'justifyContent': 'space-between'};
    tango['header'] = verify;
    verify = {};
    verify['textAlign'] = foxtrot;
    tango['subtitle'] = verify;
    verify = {'height': 80, 'width': 80, 'borderRadius': 40, 'backgroundColor': null, 'alignItems': 'center', 'justifyContent': 'center'};
    yankee = oscar[yankee];
    yankee = romeo.bind(entity)(yankee);
    yankee = yankee.colors;
    yankee = yankee.BG_MOD_SUBTLE;
    verify['backgroundColor'] = yankee;
    tango['iconContainer'] = verify;
    verify = {'height': 48, 'width': 48};
    tango['icon'] = verify;
    verify = {};
    yankee = 24;
    verify['marginTop'] = yankee;
    tango['code'] = verify;
    verify = {};
    verify['marginBottom'] = offset;
    tango['helpMessage'] = verify;
    tango = golf.bind(options)(tango);
    var _closure1_slot18 = tango;
    tango = 38;
    tango = oscar[tango];
    oscar = report.bind(entity)(tango);
    report = oscar.fileFinishedImporting;
    tango = 'modules/rtc/native/SecureFramesUserVerificationModal.tsx';
    tango = report.bind(oscar)(tango);
    mike = function(argFoo) { // Original name: SecureFramesUserVerificationModal
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            mike = argFoo;
            record = mike.userId;
            var _closure2_slot0 = record;
            oscar = mike.channelId;
            var _closure2_slot1 = oscar;
            mike = _closure1_slot18;
            tango = undefined;
            vacuum = mike.bind(tango)();
            status = _closure1_slot0;
            sierra = _closure1_slot2;
            mike = 11;
            zulu = sierra[mike];
            options = status.bind(tango)(zulu);
            golf = options.useStateFromStores;
            zulu = _closure1_slot8;
            report = new Array(1);
            report[0] = zulu;
            zulu = function() {
                zulu = _closure1_slot8;
                mike = zulu.getUser;
                entity = _closure2_slot0;
                entity = mike.bind(zulu)(entity);
                return entity;
            };
            golf = golf.bind(options)(report, zulu);
            mike = sierra[mike];
            options = status.bind(tango)(mike);
            report = options.useStateFromStores;
            mike = _closure1_slot7;
            zulu = new Array(1);
            zulu[0] = mike;
            mike = function() {
                _fun00003: for(var _fun00004_ip = 0; ; ) switch(_fun00004_ip) {
 0:
                    zulu = _closure1_slot7;
                    mike = zulu.getChannel;
                    entity = _closure2_slot1;
                    zulu = mike.bind(zulu)(entity);
                    entity = null;
                    mike = entity == zulu;
                    entity = undefined;
                    if(mike) { _fun00004_ip = 45; continue _fun00003 }
 35:
                    mike = zulu.getGuildId;
                    entity = mike.bind(zulu)();
 45:
                    return entity;
                }
            };
            report = report.bind(options)(zulu, mike);
            result = _closure1_slot1;
            mike = 12;
            mike = sierra[mike];
            zulu = result.bind(tango)(mike);
            mike = zulu.useName;
            update = null;
            variable36 = mike.bind(zulu)(report, update, golf);
            var _closure2_slot2 = variable36;
            mike = 13;
            mike = sierra[mike];
            report = status.bind(tango)(mike);
            zulu = report.useSecureFramesPairwiseFingerprint;
            mike = {};
            mike['userId'] = record;
            mike = zulu.bind(report)(mike);
            options = mike.fingerprint;
            var _closure2_slot3 = options;
            config = mike.userKey;
            var _closure2_slot4 = config;
            mike = 14;
            mike = sierra[mike];
            report = status.bind(tango)(mike);
            zulu = report.useReadableSecureFramesFingerprint;
            mike = {};
            mike['fingerprintBase64'] = options;
            golf = _closure1_slot9;
            mike['chunkSize'] = golf;
            golf = _closure1_slot10;
            mike['desiredLength'] = golf;
            output = zulu.bind(report)(mike);
            var _closure2_slot5 = output;
            mike = 15;
            mike = sierra[mike];
            report = status.bind(tango)(mike);
            zulu = report.useIsUserSecureFramesVerified;
            mike = {};
            mike['userId'] = record;
            mike['channelId'] = oscar;
            golf = 'NativeSecureFramesUserVerificationModal';
            mike['location'] = golf;
            foxtrot = zulu.bind(report)(mike);
            var _closure2_slot6 = foxtrot;
            mike = 16;
            mike = sierra[mike];
            report = status.bind(tango)(mike);
            zulu = report.useIsPersistentSecureFramesFingerprint;
            mike = {};
            mike['userId'] = record;
            zulu = zulu.bind(report)(mike);
            verify = zulu.isCurrentUserKeyPersistent;
            var _closure2_slot7 = verify;
            mike = zulu.isOtherUserKeyPersistent;
            var _closure2_slot8 = mike;
            echo = zulu.loading;
            report = _closure1_slot4;
            offset = report.useCallback;
            golf = new Array(5);
            golf[0] = oscar;
            golf[1] = config;
            golf[2] = mike;
            golf[3] = variable36;
            golf[4] = record;
            zulu = function() {
                _fun00005: for(var _fun00006_ip = 0; ; ) switch(_fun00006_ip) {
 0:
                    mike = _closure2_slot4;
                    entity = null;
                    if(!(entity != mike)) { _fun00006_ip = 235; continue _fun00005 }
 16:
                    verify = _closure1_slot0;
                    offset = _closure1_slot2;
                    entity = 17;
                    entity = offset[entity];
                    report = undefined;
                    romeo = verify.bind(report)(entity);
                    yankee = romeo.addVerification;
                    output = _closure2_slot0;
                    sizing = _closure2_slot4;
                    kilo = _closure2_slot8;
                    backup = _closure2_slot1;
                    entity = _closure1_slot13;
                    foxtrot = entity.E2EE_USER_VERIFY_MODAL;
                    result = romeo;
                    entity = result[yankee](output, sizing, kilo, backup, foxtrot, romeo);
                    mike = _closure1_slot1;
                    entity = 18;
                    entity = offset[entity];
                    zulu = mike.bind(report)(entity);
                    entity = zulu.pop;
                    entity = entity.bind(zulu)();
                    entity = 19;
                    entity = offset[entity];
                    zulu = mike.bind(report)(entity);
                    mike = zulu.open;
                    entity = {};
                    tango = _closure1_slot12;
                    entity['key'] = tango;
                    tango = 'text-positive';
                    entity['iconColor'] = tango;
                    tango = 20;
                    tango = offset[tango];
                    tango = verify.bind(report)(tango);
                    tango = tango.CircleCheckIcon;
                    entity['IconComponent'] = tango;
                    tango = 21;
                    oscar = offset[tango];
                    oscar = verify.bind(report)(oscar);
                    golf = oscar.intl;
                    oscar = golf.formatToPlainString;
                    tango = offset[tango];
                    tango = verify.bind(report)(tango);
                    tango = tango.t;
                    report = tango.Gwu139;
                    tango = {};
                    options = _closure2_slot2;
                    tango['username'] = options;
                    tango = oscar.bind(golf)(report, tango);
                    entity['content'] = tango;
                    entity = mike.bind(zulu)(entity);
 235:
                    entity = undefined;
                    return entity;
                }
            };
            kilo = offset.bind(report)(zulu, golf);
            offset = report.useCallback;
            golf = new Array(3);
            golf[0] = config;
            golf[1] = mike;
            golf[2] = record;
            zulu = function() {
                _fun00007: for(var _fun00008_ip = 0; ; ) switch(_fun00008_ip) {
 0:
                    zulu = _closure2_slot4;
                    entity = null;
                    if(!(entity != zulu)) { _fun00008_ip = 89; continue _fun00007 }
 13:
                    oscar = _closure1_slot0;
                    tango = _closure1_slot2;
                    zulu = 17;
                    report = tango[zulu];
                    zulu = undefined;
                    options = oscar.bind(zulu)(report);
                    golf = options.deleteVerification;
                    oscar = _closure2_slot0;
                    report = _closure2_slot4;
                    mike = _closure2_slot8;
                    mike = golf.bind(options)(oscar, report, mike);
                    mike = _closure1_slot1;
                    entity = 18;
                    entity = tango[entity];
                    mike = mike.bind(zulu)(entity);
                    entity = mike.pop;
                    entity = entity.bind(mike)();
 89:
                    entity = undefined;
                    return entity;
                }
            };
            sizing = offset.bind(report)(zulu, golf);
            zulu = 22;
            zulu = sierra[zulu];
            offset = status.bind(tango)(zulu);
            golf = offset.useSecureFramesDeeplinkExperiment;
            zulu = {};
            yankee = 'SecureFramesUserVerificationModal';
            zulu['location'] = yankee;
            zulu = golf.bind(offset)(zulu);
            zulu = zulu.enabled;
            var _closure2_slot9 = zulu;
            offset = report.useCallback;
            golf = new Array(5);
            golf[0] = oscar;
            golf[1] = output;
            golf[2] = options;
            golf[3] = zulu;
            golf[4] = record;
            zulu = function() {
                _fun00009: for(var _fun00010_ip = 0; ; ) switch(_fun00010_ip) {
 0:
                    entity = _closure2_slot3;
                    zulu = null;
                    if(!(zulu != entity)) { _fun00010_ip = 222; continue _fun00009 }
 16:
                    entity = _closure2_slot5;
                    if(!(zulu != entity)) { _fun00010_ip = 222; continue _fun00009 }
 27:
                    report = _closure1_slot1;
                    oscar = _closure1_slot2;
                    zulu = 18;
                    zulu = oscar[zulu];
                    tango = undefined;
                    report = report.bind(tango)(zulu);
                    zulu = report.pop;
                    zulu = zulu.bind(report)();
                    report = _closure1_slot0;
                    zulu = 23;
                    zulu = oscar[zulu];
                    oscar = report.bind(tango)(zulu);
                    report = oscar.trackE2EEUserVerificationShareClicked;
                    zulu = {};
                    golf = _closure2_slot0;
                    zulu['userId'] = golf;
                    golf = _closure2_slot1;
                    zulu['channelId'] = golf;
                    zulu = report.bind(oscar)(zulu);
                    zulu = _closure2_slot9;
                    if(zulu) { _fun00010_ip = 134; continue _fun00009 }
 114:
                    oscar = _closure2_slot5;
                    report = oscar.join;
                    zulu = ' ';
                    report = report.bind(oscar)(zulu);
                    _fun00010_ip = 174; continue _fun00009;
 134:
                    oscar = _closure1_slot0;
                    golf = _closure1_slot2;
                    zulu = 17;
                    zulu = golf[zulu];
                    golf = oscar.bind(tango)(zulu);
                    oscar = golf.getUserVerificationDeeplink;
                    zulu = _closure2_slot0;
                    mike = _closure2_slot3;
                    report = oscar.bind(golf)(zulu, mike);
 174:
                    zulu = _closure1_slot0;
                    oscar = _closure1_slot2;
                    mike = 24;
                    mike = oscar[mike];
                    tango = zulu.bind(tango)(mike);
                    zulu = tango.showShareActionSheet;
                    mike = {};
                    mike['message'] = report;
                    entity = _closure1_slot14;
                    entity = entity.SECURE_FRAMES_VOICE_BOTTOM_SHEET;
                    entity = zulu.bind(tango)(mike, entity);
 222:
                    entity = undefined;
                    return entity;
                }
            };
            romeo = offset.bind(report)(zulu, golf);
            zulu = 25;
            zulu = sierra[zulu];
            zulu = result.bind(tango)(zulu);
            zulu = zulu.bind(tango)();
            zulu = zulu.analyticsLocations;
            var _closure2_slot10 = zulu;
            offset = report.useCallback;
            golf = new Array(3);
            golf[0] = zulu;
            golf[1] = oscar;
            golf[2] = record;
            zulu = function() {
                zulu = _closure1_slot1;
                tango = _closure1_slot2;
                entity = 18;
                mike = tango[entity];
                entity = undefined;
                report = zulu.bind(entity)(mike);
                mike = report.pop;
                mike = mike.bind(report)();
                mike = 26;
                mike = tango[mike];
                zulu = zulu.bind(entity)(mike);
                mike = {};
                report = _closure2_slot0;
                mike['userId'] = report;
                report = _closure2_slot1;
                mike['channelId'] = report;
                report = true;
                mike['isVoiceContext'] = report;
                tango = _closure2_slot10;
                mike['sourceAnalyticsLocations'] = tango;
                mike = zulu.bind(entity)(mike);
                return entity;
            };
            sequence = offset.bind(report)(zulu, golf);
            zulu = 27;
            zulu = sierra[zulu];
            offset = status.bind(tango)(zulu);
            golf = offset.useAlertIfSecureFramesKeyInconsistent;
            zulu = {};
            zulu['channelId'] = oscar;
            zulu['userId'] = record;
            zulu['nickname'] = variable36;
            yankee = 18;
            yankee = sierra[yankee];
            yankee = result.bind(tango)(yankee);
            yankee = yankee.pop;
            zulu['onAlertOpen'] = yankee;
            zulu = golf.bind(offset)(zulu);
            offset = report.useMemo;
            golf = new Array(1);
            golf[0] = foxtrot;
            zulu = function() {
                _fun00011: for(var _fun00012_ip = 0; ; ) switch(_fun00012_ip) {
 0:
                    entity = _closure2_slot6;
                    report = _closure1_slot0;
                    oscar = _closure1_slot2;
                    mike = 21;
                    zulu = oscar[mike];
                    tango = undefined;
                    zulu = report.bind(tango)(zulu);
                    golf = zulu.intl;
                    zulu = golf.string;
                    mike = oscar[mike];
                    mike = report.bind(tango)(mike);
                    mike = mike.t;
                    if(entity) { _fun00012_ip = 108; continue _fun00011 }
 59:
                    entity = mike.y2b7CA;
                    options = zulu.bind(golf)(entity);
                    entity = new Array(2);
                    entity[0] = options;
                    options = 28;
                    options = oscar[options];
                    options = report.bind(tango)(options);
                    options = options.BadgeColors;
                    options = options.DANGER;
                    entity[1] = options;
                    _fun00012_ip = 158; continue _fun00011;
 108:
                    mike = mike.UNUuen;
                    zulu = zulu.bind(golf)(mike);
                    mike = new Array(2);
                    mike[0] = zulu;
                    zulu = 28;
                    zulu = oscar[zulu];
                    zulu = report.bind(tango)(zulu);
                    zulu = zulu.BadgeColors;
                    zulu = zulu.INFO;
                    mike[1] = zulu;
                    entity = mike;
 158:
                    return entity;
                }
            };
            offset = offset.bind(report)(zulu, golf);
            golf = _closure1_slot3;
            zulu = 2;
            golf = golf.bind(tango)(offset, zulu);
            zulu = 0;
            context = golf[zulu];
            zulu = 1;
            papa = golf[zulu];
            golf = report.useMemo;
            zulu = new Array(3);
            zulu[0] = verify;
            zulu[1] = mike;
            zulu[2] = variable36;
            mike = function() {
                zulu = _closure1_slot0;
                mike = _closure1_slot2;
                entity = 17;
                mike = mike[entity];
                entity = undefined;
                zulu = zulu.bind(entity)(mike);
                mike = zulu.getUserVerificationFooterText;
                entity = {};
                report = _closure2_slot7;
                entity['isCurrentUserKeyPersistent'] = report;
                report = _closure2_slot8;
                entity['isOtherUserKeyPersistent'] = report;
                tango = _closure2_slot2;
                entity['otherUserNickname'] = tango;
                entity = mike.bind(zulu)(entity);
                return entity;
            };
            control = golf.bind(report)(mike, zulu);
            zulu = report.useEffect;
            mike = new Array(2);
            mike[0] = oscar;
            mike[1] = record;
            entity = function() {
                zulu = _closure1_slot0;
                mike = _closure1_slot2;
                entity = 23;
                mike = mike[entity];
                entity = undefined;
                tango = zulu.bind(entity)(mike);
                zulu = tango.trackE2EEUserVerificationViewed;
                mike = {};
                oscar = _closure2_slot0;
                mike['userId'] = oscar;
                report = _closure2_slot1;
                mike['channelId'] = report;
                mike = zulu.bind(tango)(mike);
                return entity;
            };
            entity = zulu.bind(report)(entity, mike);
            zulu = _closure1_slot17;
            entity = 29;
            entity = sierra[entity];
            entity = status.bind(tango)(entity);
            mike = entity.SafeAreaPaddingView;
            entity = {'top': true, 'bottom': true};
            report = vacuum.container;
            entity['style'] = report;
            oscar = _closure1_slot6;
            report = {};
            golf = vacuum.header;
            report['style'] = golf;
            yankee = _closure1_slot16;
            verify = 30;
            golf = sierra[verify];
            golf = status.bind(tango)(golf);
            offset = golf.PressableOpacity;
            golf = {};
            target = 'button';
            golf['accessibilityRole'] = target;
            result = 21;
            source = sierra[result];
            source = status.bind(tango)(source);
            whiskey = source.intl;
            lima = whiskey.string;
            source = sierra[result];
            source = status.bind(tango)(source);
            source = source.t;
            source = source.cpT0Cg;
            source = lima.bind(whiskey)(source);
            golf['accessibilityLabel'] = source;
            source = _closure1_slot15;
            golf['androidRippleConfig'] = source;
            source = 8;
            golf['hitSlop'] = source;
            golf['onPress'] = sequence;
            sequence = 31;
            sequence = sierra[sequence];
            sequence = status.bind(tango)(sequence);
            status = sequence.ArrowLargeLeftIcon;
            sequence = {};
            sierra = 'md';
            sequence['size'] = sierra;
            sequence = yankee.bind(tango)(status, sequence);
            golf['children'] = sequence;
            offset = yankee.bind(tango)(offset, golf);
            golf = new Array(2);
            golf[0] = offset;
            options = update != options;
            if(!options) { _fun00002_ip = 989; continue _fun00001 }
 985:
            options = update != output;
 989:
            if(!options) { _fun00002_ip = 1189; continue _fun00001 }
 995:
            yankee = _closure1_slot16;
            sierra = _closure1_slot0;
            sequence = _closure1_slot2;
            verify = sequence[verify];
            verify = sierra.bind(tango)(verify);
            offset = verify.PressableOpacity;
            verify = {};
            verify['accessibilityRole'] = target;
            target = sequence[result];
            target = sierra.bind(tango)(target);
            lima = target.intl;
            status = lima.string;
            target = sequence[result];
            target = sierra.bind(tango)(target);
            target = target.t;
            target = target.RDE0SU;
            target = status.bind(lima)(target);
            verify['accessibilityLabel'] = target;
            target = _closure1_slot15;
            verify['androidRippleConfig'] = target;
            verify['hitSlop'] = source;
            verify['onPress'] = romeo;
            romeo = 32;
            romeo = sequence[romeo];
            romeo = sierra.bind(tango)(romeo);
            source = romeo.Text;
            romeo = {'variant': 'text-md/semibold', 'color': 'text-brand'};
            target = sequence[result];
            target = sierra.bind(tango)(target);
            status = target.intl;
            target = status.string;
            sequence = sequence[result];
            sequence = sierra.bind(tango)(sequence);
            sequence = sequence.t;
            sequence = sequence.RDE0SU;
            sequence = target.bind(status)(sequence);
            romeo['children'] = sequence;
            romeo = yankee.bind(tango)(source, romeo);
            verify['children'] = romeo;
            options = yankee.bind(tango)(offset, verify);
 1189:
            golf[1] = options;
            report['children'] = golf;
            oscar = zulu.bind(tango)(oscar, report);
            report = new Array(4);
            report[0] = oscar;
            options = _closure1_slot17;
            target = _closure1_slot0;
            sequence = _closure1_slot2;
            oscar = 33;
            oscar = sequence[oscar];
            oscar = target.bind(tango)(oscar);
            offset = oscar.Stack;
            oscar = {'spacing': 8, 'justify': 'center', 'align': 'center', 'direction': 'vertical'};
            source = _closure1_slot16;
            golf = _closure1_slot6;
            verify = {};
            yankee = vacuum.iconContainer;
            verify['style'] = yankee;
            yankee = 34;
            yankee = sequence[yankee];
            yankee = target.bind(tango)(yankee);
            status = yankee.ShieldLockIcon;
            yankee = {};
            romeo = 'custom';
            yankee['size'] = romeo;
            romeo = vacuum.icon;
            yankee['style'] = romeo;
            romeo = _closure1_slot1;
            sierra = 10;
            sierra = sequence[sierra];
            sierra = romeo.bind(tango)(sierra);
            sierra = sierra.colors;
            sierra = sierra.HEADER_SECONDARY;
            yankee['color'] = sierra;
            yankee = source.bind(tango)(status, yankee);
            verify['children'] = yankee;
            verify = source.bind(tango)(golf, verify);
            yankee = new Array(3);
            yankee[0] = verify;
            verify = 32;
            status = sequence[verify];
            status = target.bind(tango)(status);
            sierra = status.Text;
            status = {'variant': 'heading-xl/bold', 'color': 'header-primary'};
            lima = sequence[result];
            lima = target.bind(tango)(lima);
            equality = lima.intl;
            whiskey = equality.string;
            lima = sequence[result];
            lima = target.bind(tango)(lima);
            lima = lima.t;
            lima = lima./WPGnJ;
            lima = whiskey.bind(equality)(lima);
            status['children'] = lima;
            status = source.bind(tango)(sierra, status);
            yankee[1] = status;
            status = sequence[verify];
            status = target.bind(tango)(status);
            sierra = status.Text;
            status = {'style': null, 'variant': 'text-md/medium', 'color': 'header-secondary'};
            lima = vacuum.subtitle;
            status['style'] = lima;
            lima = sequence[result];
            lima = target.bind(tango)(lima);
            quebec = lima.intl;
            equality = quebec.format;
            lima = sequence[result];
            lima = target.bind(tango)(lima);
            lima = lima.t;
            whiskey = lima.oc2kcX;
            lima = {};
            lima['username'] = variable36;
            lima = equality.bind(quebec)(whiskey, lima);
            status['children'] = lima;
            status = source.bind(tango)(sierra, status);
            yankee[2] = status;
            oscar['children'] = yankee;
            oscar = options.bind(tango)(offset, oscar);
            report[1] = oscar;
            oscar = {};
            offset = vacuum.code;
            oscar['style'] = offset;
            offset = 35;
            offset = sequence[offset];
            yankee = romeo.bind(tango)(offset);
            offset = {};
            status = vacuum.helpMessage;
            offset['style'] = status;
            offset['userId'] = record;
            offset['userKey'] = config;
            yankee = source.bind(tango)(yankee, offset);
            offset = new Array(2);
            offset[0] = yankee;
            yankee = 36;
            yankee = sequence[yankee];
            romeo = romeo.bind(tango)(yankee);
            yankee = {};
            config = sequence[result];
            config = target.bind(tango)(config);
            record = config.intl;
            config = record.string;
            sequence = sequence[result];
            sequence = target.bind(tango)(sequence);
            sequence = sequence.t;
            sequence = sequence./WPGnJ;
            sequence = config.bind(record)(sequence);
            yankee['title'] = sequence;
            yankee['chunks'] = output;
            sequence = _closure1_slot11;
            yankee['columns'] = sequence;
            if(!(update != output)) { _fun00002_ip = 1757; continue _fun00001 }
 1709:
            record = _closure1_slot16;
            config = _closure1_slot0;
            target = _closure1_slot2;
            sequence = 28;
            sequence = target[sequence];
            sequence = config.bind(tango)(sequence);
            config = sequence.TextBadge;
            sequence = {};
            sequence['color'] = papa;
            sequence['text'] = context;
            sequence = record.bind(tango)(config, sequence);
            _fun00002_ip = 1773; continue _fun00001;
 1757:
            context = _closure1_slot16;
            record = _closure1_slot5;
            config = {};
            sequence = context.bind(tango)(record, config);
 1773:
            yankee['trailing'] = sequence;
            yankee = source.bind(tango)(romeo, yankee);
            offset[1] = yankee;
            oscar['children'] = offset;
            oscar = options.bind(tango)(golf, oscar);
            report[2] = oscar;
            options = _closure1_slot17;
            golf = _closure1_slot6;
            oscar = {};
            offset = vacuum.footer;
            oscar['style'] = offset;
            romeo = _closure1_slot16;
            yankee = _closure1_slot0;
            source = _closure1_slot2;
            verify = source[verify];
            verify = yankee.bind(tango)(verify);
            offset = verify.Text;
            verify = {'style': null, 'variant': 'text-xs/normal', 'color': 'header-secondary'};
            vacuum = vacuum.footerText;
            verify['style'] = vacuum;
            verify['children'] = control;
            offset = romeo.bind(tango)(offset, verify);
            verify = new Array(2);
            verify[0] = offset;
            offset = 37;
            offset = source[offset];
            offset = yankee.bind(tango)(offset);
            yankee = offset.Button;
            offset = {};
            output = update == output;
            if(output) { _fun00002_ip = 1922; continue _fun00001 }
 1919:
            output = echo;
 1922:
            offset['disabled'] = output;
            output = 'primary';
            offset['variant'] = output;
            if(!foxtrot) { _fun00002_ip = 1940; continue _fun00001 }
 1937:
            kilo = sizing;
 1940:
            offset['onPress'] = kilo;
            output = _closure1_slot0;
            backup = _closure1_slot2;
            kilo = backup[result];
            kilo = output.bind(tango)(kilo);
            sizing = kilo.intl;
            kilo = sizing.string;
            backup = backup[result];
            backup = output.bind(tango)(backup);
            backup = backup.t;
            if(foxtrot) { _fun00002_ip = 2001; continue _fun00001 }
 1988:
            foxtrot = backup.0tvNAg;
            foxtrot = kilo.bind(sizing)(foxtrot);
            _fun00002_ip = 2012; continue _fun00001;
 2001:
            backup = backup.Osb+/v;
            foxtrot = kilo.bind(sizing)(backup);
 2012:
            offset['text'] = foxtrot;
            offset = romeo.bind(tango)(yankee, offset);
            verify[1] = offset;
            oscar['children'] = verify;
            oscar = options.bind(tango)(golf, oscar);
            report[3] = oscar;
            entity['children'] = report;
            entity = zulu.bind(tango)(mike, entity);
            return entity;
        }
    };
    zulu['default'] = mike;
    return entity;
})();