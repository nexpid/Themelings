// app/modules/rtc/native/SecureFramesExistingVerificationsHelpMessage.tsx
export default (function(argFoo, argBar, argBaz, _, __, argFre, argPlu) {
    report = argBar;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    entity = argBaz;
    var _closure1_slot1 = entity;
    var _closure1_slot2 = oscard;
    entity = global;
    option = entity.Object;
    golfie = option.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(option)(zuuluu, entity, tangon);
    entity = 0;
    tangon = oscard[entity];
    entity = undefined;
    tangon = report.bind(entity)(tangon);
    tangon = tangon.View;
    var _closure1_slot3 = tangon;
    tangon = 1;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.jsx;
    var _closure1_slot4 = tangon;
    tangon = 2;
    tangon = oscard[tangon];
    option = report.bind(entity)(tangon);
    golfie = option.createStyles;
    tangon = {};
    verify = {};
    offset = '100%';
    verify['width'] = offset;
    tangon['container'] = verify;
    tangon = golfie.bind(option)(tangon);
    var _closure1_slot5 = tangon;
    tangon = 6;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/rtc/native/SecureFramesExistingVerificationsHelpMessage.tsx';
    tangon = report.bind(oscard)(tangon);
    michal = function(argFoo) { // Original name: SecureFramesExistingVerificationsHelpMessage
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            entity = argFoo;
            golfie = entity.style;
            option = entity.userId;
            tangon = entity.userKey;
            entity = _closure1_slot5;
            report = undefined;
            oscard = entity.bind(report)();
            michal = _closure1_slot0;
            zuuluu = _closure1_slot2;
            entity = 3;
            entity = zuuluu[entity];
            zuuluu = michal.bind(report)(entity);
            michal = zuuluu.useSecureFramesUserVerifiedKeysCount;
            entity = {};
            entity['userId'] = option;
            entity['keyToOmit'] = tangon;
            romeon = michal.bind(zuuluu)(entity);
            michal = 0;
            entity = null;
            if(!(michal !== romeon)) { _fun00002_ip = 244; continue _fun00001 }
 85:
            tangon = _closure1_slot4;
            zuuluu = _closure1_slot3;
            michal = {};
            option = oscard.container;
            oscard = new Array(2);
            oscard[0] = option;
            oscard[1] = golfie;
            michal['style'] = oscard;
            golfie = _closure1_slot1;
            foxtra = _closure1_slot2;
            option = 4;
            oscard = foxtra[option];
            golfie = golfie.bind(report)(oscard);
            oscard = {};
            verify = _closure1_slot0;
            option = foxtra[option];
            option = verify.bind(report)(option);
            option = option.HelpMessageTypes;
            option = option.INFO;
            oscard['messageType'] = option;
            option = 5;
            offset = foxtra[option];
            offset = verify.bind(report)(offset);
            yankee = offset.intl;
            offset = yankee.format;
            option = foxtra[option];
            option = verify.bind(report)(option);
            option = option.t;
            verify = option.uZDkz8;
            option = {};
            option['count'] = romeon;
            option = offset.bind(yankee)(verify, option);
            oscard['children'] = option;
            oscard = tangon.bind(report)(golfie, oscard);
            michal['children'] = oscard;
            entity = tangon.bind(report)(zuuluu, michal);
 244:
            return entity;
        }
    };
    zuuluu['default'] = michal;
    return entity;
})();