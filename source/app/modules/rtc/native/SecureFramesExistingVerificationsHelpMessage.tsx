// app/modules/rtc/native/SecureFramesExistingVerificationsHelpMessage.tsx
export default (function(argFoo, argBar, argBaz, _, __, argFred, argPlugh) {
    report = argBar;
    zulu = argFred;
    oscar = argPlugh;
    var _closure1_slot0 = report;
    entity = argBaz;
    var _closure1_slot1 = entity;
    var _closure1_slot2 = oscar;
    entity = global;
    options = entity.Object;
    golf = options.defineProperty;
    tango = {};
    entity = true;
    tango['value'] = entity;
    entity = '__esModule';
    entity = golf.bind(options)(zulu, entity, tango);
    entity = 0;
    tango = oscar[entity];
    entity = undefined;
    tango = report.bind(entity)(tango);
    tango = tango.View;
    var _closure1_slot3 = tango;
    tango = 1;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.jsx;
    var _closure1_slot4 = tango;
    tango = 2;
    tango = oscar[tango];
    options = report.bind(entity)(tango);
    golf = options.createStyles;
    tango = {};
    verify = {};
    offset = '100%';
    verify['width'] = offset;
    tango['container'] = verify;
    tango = golf.bind(options)(tango);
    var _closure1_slot5 = tango;
    tango = 6;
    tango = oscar[tango];
    oscar = report.bind(entity)(tango);
    report = oscar.fileFinishedImporting;
    tango = 'modules/rtc/native/SecureFramesExistingVerificationsHelpMessage.tsx';
    tango = report.bind(oscar)(tango);
    mike = function(argFoo) { // Original name: SecureFramesExistingVerificationsHelpMessage
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            entity = argFoo;
            golf = entity.style;
            options = entity.userId;
            tango = entity.userKey;
            entity = _closure1_slot5;
            report = undefined;
            oscar = entity.bind(report)();
            mike = _closure1_slot0;
            zulu = _closure1_slot2;
            entity = 3;
            entity = zulu[entity];
            zulu = mike.bind(report)(entity);
            mike = zulu.useSecureFramesUserVerifiedKeysCount;
            entity = {};
            entity['userId'] = options;
            entity['keyToOmit'] = tango;
            romeo = mike.bind(zulu)(entity);
            mike = 0;
            entity = null;
            if(!(mike !== romeo)) { _fun00002_ip = 242; continue _fun00001 }
 85:
            tango = _closure1_slot4;
            zulu = _closure1_slot3;
            mike = {};
            options = oscar.container;
            oscar = new Array(2);
            oscar[0] = options;
            oscar[1] = golf;
            mike['style'] = oscar;
            golf = _closure1_slot1;
            foxtrot = _closure1_slot2;
            options = 4;
            oscar = foxtrot[options];
            golf = golf.bind(report)(oscar);
            oscar = {};
            verify = _closure1_slot0;
            options = foxtrot[options];
            options = verify.bind(report)(options);
            options = options.HelpMessageTypes;
            options = options.INFO;
            oscar['messageType'] = options;
            options = 5;
            offset = foxtrot[options];
            offset = verify.bind(report)(offset);
            yankee = offset.intl;
            offset = yankee.format;
            options = foxtrot[options];
            options = verify.bind(report)(options);
            options = options.t;
            verify = options.uZDkz8;
            options = {};
            options['count'] = romeo;
            options = offset.bind(yankee)(verify, options);
            oscar['children'] = options;
            oscar = tango.bind(report)(golf, oscar);
            mike['children'] = oscar;
            entity = tango.bind(report)(zulu, mike);
 242:
            return entity;
        }
    };
    zulu['default'] = mike;
    return entity;
})();