// app/modules/rtc/SecureFramesTracking.tsx
export default (function(global, require, metroImportDefault, metroImportAll, moduleObject, exports, dependencyMap) {
    var5 = require;
    var7 = metroImportDefault;
    var3 = exports;
    var6 = dependencyMap;
    var _closure1_slot0 = var5;
    var _closure1_slot1 = var7;
    var _closure1_slot2 = var6;
    var1 = function getGuildId(arg1) {
        _fun0001: for(var _fun0001_ip = 0; ; ) switch(_fun0001_ip) {
 0:
            var3 = _closure1_slot3;
            var2 = var3.getChannel;
            var1 = arg1;
            var2 = var2.bind(var3)(var1);
            var1 = null;
            var3 = var1 == var2;
            var1 = undefined;
            if(var3) { _fun0001_ip = 36; continue _fun0001 }
 31:
            var1 = var2.guild_id;
 36:
            return var1;
        }
    };
    var _closure1_slot5 = var1;
    var1 = global;
    var9 = var1.Object;
    var8 = var9.defineProperty;
    var4 = {};
    var1 = true;
    var4['value'] = var1;
    var1 = '__esModule';
    var1 = var8.bind(var9)(var3, var1, var4);
    var1 = 0;
    var4 = var6[var1];
    var1 = undefined;
    var4 = var7.bind(var1)(var4);
    var _closure1_slot3 = var4;
    var4 = 1;
    var4 = var6[var4];
    var4 = var5.bind(var1)(var4);
    var4 = var4.AnalyticEvents;
    var _closure1_slot4 = var4;
    var4 = 5;
    var4 = var6[var4];
    var6 = var5.bind(var1)(var4);
    var5 = var6.fileFinishedImporting;
    var4 = 'modules/rtc/SecureFramesTracking.tsx';
    var4 = var5.bind(var6)(var4);
    var4 = function trackRTCPanelViewed(arg1) {
        var1 = arg1;
        var8 = var1.channelId;
        var6 = var1.selectedTab;
        var3 = _closure1_slot1;
        var2 = _closure1_slot2;
        var1 = 2;
        var2 = var2[var1];
        var1 = undefined;
        var5 = var3.bind(var1)(var2);
        var4 = var5.trackWithMetadata;
        var2 = _closure1_slot4;
        var3 = var2.RTC_PANEL_VIEWED;
        var2 = {};
        var2['channel_id'] = var8;
        var7 = _closure1_slot5;
        var7 = var7.bind(var1)(var8);
        var2['guild_id'] = var7;
        var2['selected_tab'] = var6;
        var2 = var4.bind(var5)(var3, var2);
        return var1;
    };
    var3['trackRTCPanelViewed'] = var4;
    var4 = function trackE2EEUserVerificationViewed(arg1) {
        var1 = arg1;
        var10 = var1.channelId;
        var9 = var1.userId;
        var3 = _closure1_slot1;
        var8 = _closure1_slot2;
        var1 = 2;
        var2 = var8[var1];
        var1 = undefined;
        var5 = var3.bind(var1)(var2);
        var4 = var5.trackWithMetadata;
        var2 = _closure1_slot4;
        var3 = var2.E2EE_USER_VERIFICATION_VIEWED;
        var2 = {};
        var2['channel_id'] = var10;
        var7 = _closure1_slot5;
        var7 = var7.bind(var1)(var10);
        var2['guild_id'] = var7;
        var7 = _closure1_slot0;
        var6 = 3;
        var6 = var8[var6];
        var8 = var7.bind(var1)(var6);
        var7 = var8.getTrackUserRelationshipProperties;
        var6 = {};
        var6['userId'] = var9;
        var11 = var7.bind(var8)(var6);
        var12 = var2;
        var6 = copyDataProperties(var12, var11);
        var2 = var4.bind(var5)(var3, var2);
        return var1;
    };
    var3['trackE2EEUserVerificationViewed'] = var4;
    var4 = function trackE2EEUserVerified(arg1) {
        var1 = arg1;
        var11 = var1.channelId;
        var9 = var1.userId;
        var7 = var1.analyticsLocation;
        var3 = _closure1_slot1;
        var8 = _closure1_slot2;
        var1 = 2;
        var2 = var8[var1];
        var1 = undefined;
        var5 = var3.bind(var1)(var2);
        var4 = var5.trackWithMetadata;
        var2 = _closure1_slot4;
        var3 = var2.E2EE_USER_VERIFIED;
        var2 = {};
        var2['channel_id'] = var11;
        var10 = _closure1_slot5;
        var10 = var10.bind(var1)(var11);
        var2['guild_id'] = var10;
        var2['location'] = var7;
        var7 = _closure1_slot0;
        var6 = 3;
        var6 = var8[var6];
        var8 = var7.bind(var1)(var6);
        var7 = var8.getTrackUserRelationshipProperties;
        var6 = {};
        var6['userId'] = var9;
        var12 = var7.bind(var8)(var6);
        var13 = var2;
        var6 = copyDataProperties(var13, var12);
        var2 = var4.bind(var5)(var3, var2);
        return var1;
    };
    var3['trackE2EEUserVerified'] = var4;
    var4 = function trackE2EEUserVerificationFailed(arg1) {
        var1 = arg1;
        var12 = var1.channelId;
        var9 = var1.userId;
        var11 = var1.keyVersion;
        var7 = var1.reason;
        var3 = _closure1_slot1;
        var8 = _closure1_slot2;
        var1 = 2;
        var2 = var8[var1];
        var1 = undefined;
        var5 = var3.bind(var1)(var2);
        var4 = var5.trackWithMetadata;
        var2 = _closure1_slot4;
        var3 = var2.E2EE_USER_VERIFICATION_FAILED;
        var2 = {};
        var2['channel_id'] = var12;
        var10 = _closure1_slot5;
        var10 = var10.bind(var1)(var12);
        var2['guild_id'] = var10;
        var2['failure_reason'] = var7;
        var7 = global;
        var7 = var7.HermesInternal;
        var10 = var7.concat;
        var7 = '';
        var7 = var10.bind(var7)(var11);
        var2['key_version'] = var7;
        var7 = _closure1_slot0;
        var6 = 3;
        var6 = var8[var6];
        var8 = var7.bind(var1)(var6);
        var7 = var8.getTrackUserRelationshipProperties;
        var6 = {};
        var6['userId'] = var9;
        var13 = var7.bind(var8)(var6);
        var14 = var2;
        var6 = copyDataProperties(var14, var13);
        var2 = var4.bind(var5)(var3, var2);
        return var1;
    };
    var3['trackE2EEUserVerificationFailed'] = var4;
    var4 = function trackE2EEUserVerificationShareClicked(arg1) {
        var1 = arg1;
        var10 = var1.channelId;
        var9 = var1.userId;
        var3 = _closure1_slot1;
        var8 = _closure1_slot2;
        var1 = 2;
        var2 = var8[var1];
        var1 = undefined;
        var5 = var3.bind(var1)(var2);
        var4 = var5.trackWithMetadata;
        var2 = _closure1_slot4;
        var3 = var2.E2EE_USER_VERIFICATION_SHARE_CLICKED;
        var2 = {};
        var2['channel_id'] = var10;
        var7 = _closure1_slot5;
        var7 = var7.bind(var1)(var10);
        var2['guild_id'] = var7;
        var7 = _closure1_slot0;
        var6 = 3;
        var6 = var8[var6];
        var8 = var7.bind(var1)(var6);
        var7 = var8.getTrackUserRelationshipProperties;
        var6 = {};
        var6['userId'] = var9;
        var11 = var7.bind(var8)(var6);
        var12 = var2;
        var6 = copyDataProperties(var12, var11);
        var2 = var4.bind(var5)(var3, var2);
        return var1;
    };
    var3['trackE2EEUserVerificationShareClicked'] = var4;
    var4 = function trackE2EEUserVerificationCopied(arg1) {
        var1 = arg1;
        var10 = var1.channelId;
        var9 = var1.userId;
        var3 = _closure1_slot1;
        var8 = _closure1_slot2;
        var1 = 2;
        var2 = var8[var1];
        var1 = undefined;
        var5 = var3.bind(var1)(var2);
        var4 = var5.trackWithMetadata;
        var2 = _closure1_slot4;
        var3 = var2.E2EE_USER_VERIFICATION_CODE_COPIED;
        var2 = {};
        var2['channel_id'] = var10;
        var7 = _closure1_slot5;
        var7 = var7.bind(var1)(var10);
        var2['guild_id'] = var7;
        var7 = _closure1_slot0;
        var6 = 3;
        var6 = var8[var6];
        var8 = var7.bind(var1)(var6);
        var7 = var8.getTrackUserRelationshipProperties;
        var6 = {};
        var6['userId'] = var9;
        var11 = var7.bind(var8)(var6);
        var12 = var2;
        var6 = copyDataProperties(var12, var11);
        var2 = var4.bind(var5)(var3, var2);
        return var1;
    };
    var3['trackE2EEUserVerificationCopied'] = var4;
    var4 = function trackE2EECallVerificationShareClicked(arg1) {
        var1 = arg1;
        var7 = var1.channelId;
        var3 = _closure1_slot1;
        var2 = _closure1_slot2;
        var1 = 2;
        var2 = var2[var1];
        var1 = undefined;
        var5 = var3.bind(var1)(var2);
        var4 = var5.trackWithMetadata;
        var2 = _closure1_slot4;
        var3 = var2.E2EE_CALL_VERIFICATION_SHARE_CLICKED;
        var2 = {};
        var2['channel_id'] = var7;
        var6 = _closure1_slot5;
        var6 = var6.bind(var1)(var7);
        var2['guild_id'] = var6;
        var2 = var4.bind(var5)(var3, var2);
        return var1;
    };
    var3['trackE2EECallVerificationShareClicked'] = var4;
    var4 = function trackE2EECallVerificationCopied(arg1) {
        var1 = arg1;
        var7 = var1.channelId;
        var3 = _closure1_slot1;
        var2 = _closure1_slot2;
        var1 = 2;
        var2 = var2[var1];
        var1 = undefined;
        var5 = var3.bind(var1)(var2);
        var4 = var5.trackWithMetadata;
        var2 = _closure1_slot4;
        var3 = var2.E2EE_CALL_VERIFICATION_CODE_COPIED;
        var2 = {};
        var2['channel_id'] = var7;
        var6 = _closure1_slot5;
        var6 = var6.bind(var1)(var7);
        var2['guild_id'] = var6;
        var2 = var4.bind(var5)(var3, var2);
        return var1;
    };
    var3['trackE2EECallVerificationCopied'] = var4;
    var4 = function trackE2EEStreamVerificationShareClicked(arg1) {
        var1 = arg1;
        var7 = var1.channelId;
        var3 = _closure1_slot1;
        var2 = _closure1_slot2;
        var1 = 2;
        var2 = var2[var1];
        var1 = undefined;
        var5 = var3.bind(var1)(var2);
        var4 = var5.trackWithMetadata;
        var2 = _closure1_slot4;
        var3 = var2.E2EE_STREAM_VERIFICATION_SHARE_CLICKED;
        var2 = {};
        var2['channel_id'] = var7;
        var6 = _closure1_slot5;
        var6 = var6.bind(var1)(var7);
        var2['guild_id'] = var6;
        var2 = var4.bind(var5)(var3, var2);
        return var1;
    };
    var3['trackE2EEStreamVerificationShareClicked'] = var4;
    var4 = function trackE2EEStreamVerificationCopied(arg1) {
        var1 = arg1;
        var7 = var1.channelId;
        var3 = _closure1_slot1;
        var2 = _closure1_slot2;
        var1 = 2;
        var2 = var2[var1];
        var1 = undefined;
        var5 = var3.bind(var1)(var2);
        var4 = var5.trackWithMetadata;
        var2 = _closure1_slot4;
        var3 = var2.E2EE_STREAM_VERIFICATION_CODE_COPIED;
        var2 = {};
        var2['channel_id'] = var7;
        var6 = _closure1_slot5;
        var6 = var6.bind(var1)(var7);
        var2['guild_id'] = var6;
        var2 = var4.bind(var5)(var3, var2);
        return var1;
    };
    var3['trackE2EEStreamVerificationCopied'] = var4;
    var4 = function trackE2EESettingsUserDelete() {
        var4 = _closure1_slot1;
        var3 = _closure1_slot2;
        var1 = 4;
        var3 = var3[var1];
        var1 = undefined;
        var4 = var4.bind(var1)(var3);
        var3 = var4.track;
        var2 = _closure1_slot4;
        var2 = var2.E2EE_SETTINGS_USER_DELETE;
        var2 = var3.bind(var4)(var2);
        return var1;
    };
    var3['trackE2EESettingsUserDelete'] = var4;
    var4 = function trackE2EESettingsDeviceDelete() {
        var4 = _closure1_slot1;
        var3 = _closure1_slot2;
        var1 = 4;
        var3 = var3[var1];
        var1 = undefined;
        var4 = var4.bind(var1)(var3);
        var3 = var4.track;
        var2 = _closure1_slot4;
        var2 = var2.E2EE_SETTINGS_DEVICE_DELETE;
        var2 = var3.bind(var4)(var2);
        return var1;
    };
    var3['trackE2EESettingsDeviceDelete'] = var4;
    var2 = function trackE2EEPublicKeyMismatch(arg1) {
        var4 = _closure1_slot1;
        var3 = _closure1_slot2;
        var1 = 4;
        var3 = var3[var1];
        var1 = undefined;
        var5 = var4.bind(var1)(var3);
        var4 = var5.track;
        var2 = _closure1_slot4;
        var3 = var2.E2EE_PUBLIC_KEY_MISMATCH;
        var2 = {};
        var6 = global;
        var6 = var6.HermesInternal;
        var8 = var6.concat;
        var7 = '';
        var6 = arg1;
        var6 = var8.bind(var7)(var6);
        var2['key_version'] = var6;
        var2 = var4.bind(var5)(var3, var2);
        return var1;
    };
    var3['trackE2EEPublicKeyMismatch'] = var2;
    return var1;
})();