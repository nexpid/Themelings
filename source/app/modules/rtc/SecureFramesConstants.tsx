// app/modules/rtc/SecureFramesConstants.tsx
export default (function(_, argBar, __, ___, ____, argFre, argPlu) {
    zuuluu = argFre;
    entity = global;
    report = entity.Object;
    tangon = report.defineProperty;
    michal = {};
    entity = true;
    michal['value'] = entity;
    entity = '__esModule';
    entity = tangon.bind(report)(zuuluu, entity, michal);
    report = {};
    entity = 'match';
    report['MATCH'] = entity;
    entity = 'other_user_already_verified';
    report['OTHER_USER_ALREADY_VERIFIED'] = entity;
    entity = 'other_user_inconsistent_keys';
    report['OTHER_USER_INCONSISTENT_KEYS'] = entity;
    entity = 'fingerprint_mismatch';
    report['FINGERPRINT_MISMATCH'] = entity;
    entity = 'unable_to_verify';
    report['UNABLE_TO_VERIFY'] = entity;
    entity = 'other_user_disconnected';
    report['OTHER_USER_DISCONNECTED'] = entity;
    entity = 'current_user_disconnected';
    report['CURRENT_USER_DISCONNECTED'] = entity;
    tangon = {};
    entity = 'rtc_debug_panel';
    tangon['RTC_DEBUG_PANEL'] = entity;
    entity = 'rtc_secure_frames';
    tangon['RTC_SECURE_FRAMES'] = entity;
    entity = argPlu;
    michal = 0;
    golfie = entity[michal];
    oscard = argBar;
    entity = undefined;
    option = oscard.bind(entity)(golfie);
    golfie = option.fileFinishedImporting;
    oscard = 'modules/rtc/SecureFramesConstants.tsx';
    oscard = golfie.bind(option)(oscard);
    oscard = 'secure_frames_linking_bottom_sheet_key';
    zuuluu['SECURE_FRAMES_LINKING_BOTTOM_SHEET_KEY'] = oscard;
    oscard = 'secure_frames_call_verification_bottom_sheet_key';
    zuuluu['SECURE_FRAMES_CALL_VERIFICATION_BOTTOM_SHEET_KEY'] = oscard;
    oscard = 'secure_frames_stream_verification_bottom_sheet_key';
    zuuluu['SECURE_FRAMES_STREAM_VERIFICATION_BOTTOM_SHEET_KEY'] = oscard;
    oscard = 'secure_frames_user_verification_modal_key';
    zuuluu['SECURE_FRAMES_USER_VERIFICATION_MODAL_KEY'] = oscard;
    golfie = 5;
    zuuluu['EPOCH_AUTHENTICATOR_CHUNK_SIZE'] = golfie;
    oscard = 30;
    zuuluu['EPOCH_AUTHENTICATOR_LENGTH'] = oscard;
    oscard = 3;
    zuuluu['EPOCH_AUTHENTICATOR_COLUMNS'] = oscard;
    zuuluu['USER_VERIFICATION_CHUNK_SIZE'] = golfie;
    golfie = 45;
    zuuluu['USER_VERIFICATION_LENGTH'] = golfie;
    zuuluu['USER_VERIFICATION_NUM_COLUMNS'] = oscard;
    oscard = 'user_verified_toast_key';
    zuuluu['USER_VERIFIED_TOAST_KEY'] = oscard;
    zuuluu['AnalyticsSecureFramesUserVerification'] = report;
    zuuluu['END_TO_END_ENCRYPTION_DISABLED'] = michal;
    zuuluu['AnalyticsRTCConnectionPanelTab'] = tangon;
    tangon = 1;
    zuuluu['SECURE_FRAMES_PUBLIC_KEY_VERSION'] = tangon;
    zuuluu['SECURE_FRAMES_GENERATE_FINGERPRINT_VERSION'] = michal;
    return entity;
})();