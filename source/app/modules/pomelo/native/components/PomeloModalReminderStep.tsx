// app/modules/pomelo/native/components/PomeloModalReminderStep.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    report = argBar;
    yankee = argBaz;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    var _closure1_slot1 = yankee;
    var _closure1_slot2 = oscard;
    entity = global;
    option = entity.Object;
    golfie = option.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(option)(zuuluu, entity, tangon);
    entity = 0;
    golfie = oscard[entity];
    tangon = argCor;
    entity = undefined;
    tangon = tangon.bind(entity)(golfie);
    tangon = 1;
    tangon = oscard[tangon];
    tangon = yankee.bind(entity)(tangon);
    var _closure1_slot3 = tangon;
    tangon = 2;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.UserSettingsSections;
    var _closure1_slot4 = tangon;
    tangon = 3;
    golfie = oscard[tangon];
    golfie = report.bind(entity)(golfie);
    golfie = golfie.jsx;
    var _closure1_slot5 = golfie;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.jsxs;
    var _closure1_slot6 = tangon;
    tangon = 4;
    tangon = oscard[tangon];
    option = report.bind(entity)(tangon);
    golfie = option.createStyles;
    tangon = {};
    verify = {'paddingTop': 16, 'paddingBottom': 24};
    tangon['header'] = verify;
    verify = {};
    offset = 'center';
    verify['textAlign'] = offset;
    tangon['centerAlign'] = verify;
    verify = {};
    offset = 8;
    verify['marginBottom'] = offset;
    tangon['marginBottom8'] = verify;
    verify = {};
    offset = 5;
    romeon = oscard[offset];
    romeon = yankee.bind(entity)(romeon);
    romeon = romeon.radii;
    romeon = romeon.xxl;
    verify['borderRadius'] = romeon;
    tangon['actionButton'] = verify;
    verify = {};
    offset = oscard[offset];
    offset = yankee.bind(entity)(offset);
    offset = offset.colors;
    offset = offset.TEXT_BRAND;
    verify['color'] = offset;
    tangon['brandColor'] = verify;
    tangon = golfie.bind(option)(tangon);
    var _closure1_slot7 = tangon;
    tangon = 17;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/pomelo/native/components/PomeloModalReminderStep.tsx';
    tangon = report.bind(oscard)(tangon);
    michal = function(argFoo) { // Original name: PomeloModalReminderStep
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            entity = argFoo;
            report = entity.onCloseModal;
            var _closure2_slot0 = report;
            entity = _closure1_slot7;
            tangon = undefined;
            yankee = entity.bind(tangon)();
            sizing = _closure1_slot0;
            verify = _closure1_slot2;
            entity = 6;
            entity = verify[entity];
            michal = sizing.bind(tangon)(entity);
            entity = michal.useNavigation;
            entity = entity.bind(michal)();
            var _closure2_slot1 = entity;
            entity = 7;
            entity = verify[entity];
            michal = sizing.bind(tangon)(entity);
            entity = michal.useForceMigration;
            offset = entity.bind(michal)();
            entity = 8;
            entity = verify[entity];
            golfie = sizing.bind(tangon)(entity);
            zuuluu = golfie.useStateFromStores;
            entity = _closure1_slot3;
            michal = new Array(1);
            michal[0] = entity;
            entity = function() {
                entity = _closure1_slot3;
                entity = entity.locale;
                return entity;
            };
            update = zuuluu.bind(golfie)(michal, entity);
            option = _closure1_slot5;
            golfie = _closure1_slot1;
            zuuluu = 9;
            entity = verify[zuuluu];
            michal = golfie.bind(tangon)(entity);
            entity = {};
            romeon = yankee.actionButton;
            entity['style'] = romeon;
            romeon = verify[zuuluu];
            romeon = golfie.bind(tangon)(romeon);
            romeon = romeon.Sizes;
            romeon = romeon.MEDIUM;
            entity['size'] = romeon;
            backup = 10;
            romeon = verify[backup];
            romeon = sizing.bind(tangon)(romeon);
            output = romeon.intl;
            kiloes = output.string;
            romeon = verify[backup];
            romeon = sizing.bind(tangon)(romeon);
            romeon = romeon.t;
            romeon = romeon.BddRzc;
            romeon = kiloes.bind(output)(romeon);
            entity['text'] = romeon;
            entity['onPress'] = report;
            romeon = option.bind(tangon)(michal, entity);
            entity = verify[zuuluu];
            michal = golfie.bind(tangon)(entity);
            entity = {};
            report = verify[zuuluu];
            report = golfie.bind(tangon)(report);
            report = report.Sizes;
            report = report.MEDIUM;
            entity['size'] = report;
            report = verify[zuuluu];
            report = golfie.bind(tangon)(report);
            report = report.Looks;
            report = report.LINK;
            entity['look'] = report;
            zuuluu = verify[zuuluu];
            zuuluu = golfie.bind(tangon)(zuuluu);
            zuuluu = zuuluu.Colors;
            zuuluu = zuuluu.LINK;
            entity['color'] = zuuluu;
            zuuluu = yankee.brandColor;
            entity['textStyle'] = zuuluu;
            zuuluu = verify[backup];
            zuuluu = sizing.bind(tangon)(zuuluu);
            kiloes = zuuluu.intl;
            report = kiloes.string;
            zuuluu = verify[backup];
            zuuluu = sizing.bind(tangon)(zuuluu);
            zuuluu = zuuluu.t;
            zuuluu = zuuluu.auGQLS;
            zuuluu = report.bind(kiloes)(zuuluu);
            entity['text'] = zuuluu;
            zuuluu = function() { // Original name: onPress
                michal = _closure2_slot1;
                entity = michal.pop;
                entity = entity.bind(michal)();
                return entity;
            };
            entity['onPress'] = zuuluu;
            report = option.bind(tangon)(michal, entity);
            zuuluu = _closure1_slot6;
            entity = 11;
            entity = verify[entity];
            michal = golfie.bind(tangon)(entity);
            entity = {};
            kiloes = true;
            entity['absoluteBottom'] = kiloes;
            entity['action'] = romeon;
            entity['secondaryAction'] = report;
            report = 12;
            report = verify[report];
            golfie = golfie.bind(tangon)(report);
            report = {};
            verify = yankee.header;
            report['style'] = verify;
            echoed = _closure1_slot0;
            source = _closure1_slot2;
            verify = source[backup];
            verify = echoed.bind(tangon)(verify);
            output = verify.intl;
            if(offset) { _fun00002_ip = 525; continue _fun00001 }
 491:
            romeon = output.string;
            verify = source[backup];
            verify = echoed.bind(tangon)(verify);
            verify = verify.t;
            verify = verify.3C+rbG;
            verify = romeon.bind(output)(verify);
            _fun00002_ip = 588; continue _fun00001;
 525:
            sizing = output.formatToPlainString;
            romeon = source[backup];
            romeon = echoed.bind(tangon)(romeon);
            romeon = romeon.t;
            kiloes = romeon.XOWfNj;
            romeon = {};
            result = 13;
            result = source[result];
            echoed = echoed.bind(tangon)(result);
            result = echoed.getLocalizedForcedUUDate;
            result = result.bind(echoed)(update);
            romeon['date'] = result;
            verify = sizing.bind(output)(kiloes, romeon);
 588:
            report['title'] = verify;
            golfie = option.bind(tangon)(golfie, report);
            report = new Array(3);
            report[0] = golfie;
            verify = _closure1_slot5;
            option = _closure1_slot0;
            romeon = _closure1_slot2;
            golfie = 14;
            golfie = romeon[golfie];
            golfie = option.bind(tangon)(golfie);
            option = golfie.Text;
            golfie = {'style': null, 'variant': 'text-md/medium', 'color': 'header-secondary'};
            kiloes = yankee.centerAlign;
            romeon = new Array(2);
            romeon[0] = kiloes;
            kiloes = yankee.marginBottom8;
            romeon[1] = kiloes;
            golfie['style'] = romeon;
            echoed = _closure1_slot0;
            source = _closure1_slot2;
            romeon = source[backup];
            romeon = echoed.bind(tangon)(romeon);
            output = romeon.intl;
            if(offset) { _fun00002_ip = 738; continue _fun00001 }
 704:
            romeon = output.string;
            offset = source[backup];
            offset = echoed.bind(tangon)(offset);
            offset = offset.t;
            offset = offset.TS1L09;
            offset = romeon.bind(output)(offset);
            _fun00002_ip = 801; continue _fun00001;
 738:
            sizing = output.formatToPlainString;
            romeon = source[backup];
            romeon = echoed.bind(tangon)(romeon);
            romeon = romeon.t;
            kiloes = romeon.g/gkAw;
            romeon = {};
            result = 13;
            result = source[result];
            echoed = echoed.bind(tangon)(result);
            result = echoed.getLocalizedForcedUUDate;
            result = result.bind(echoed)(update);
            romeon['date'] = result;
            offset = sizing.bind(output)(kiloes, romeon);
 801:
            golfie['children'] = offset;
            golfie = verify.bind(tangon)(option, golfie);
            report[1] = golfie;
            option = _closure1_slot5;
            offset = _closure1_slot0;
            verify = _closure1_slot2;
            oscard = 15;
            oscard = verify[oscard];
            oscard = offset.bind(tangon)(oscard);
            golfie = oscard.TextWithIOSLinkWorkaround;
            oscard = {'style': null, 'variant': 'text-md/medium', 'color': 'header-secondary'};
            yankee = yankee.centerAlign;
            oscard['style'] = yankee;
            yankee = verify[backup];
            yankee = offset.bind(tangon)(yankee);
            romeon = yankee.intl;
            yankee = romeon.format;
            verify = verify[backup];
            verify = offset.bind(tangon)(verify);
            verify = verify.t;
            offset = verify.bWE0ZG;
            verify = {};
            foxtra = function() { // Original name: onClick
                michal = _closure2_slot0;
                entity = undefined;
                michal = michal.bind(entity)();
                zuuluu = _closure1_slot0;
                tangon = _closure1_slot2;
                michal = 16;
                michal = tangon[michal];
                tangon = zuuluu.bind(entity)(michal);
                zuuluu = tangon.openUserSettings;
                michal = {};
                report = _closure1_slot4;
                report = report.OVERVIEW;
                michal['screen'] = report;
                michal = zuuluu.bind(tangon)(michal);
                return entity;
            };
            verify['onClick'] = foxtra;
            verify = yankee.bind(romeon)(offset, verify);
            oscard['children'] = verify;
            oscard = option.bind(tangon)(golfie, oscard);
            report[2] = oscard;
            entity['children'] = report;
            entity = zuuluu.bind(tangon)(michal, entity);
            return entity;
        }
    };
    zuuluu['default'] = michal;
    return entity;
})();