// app/modules/pomelo/native/components/PomeloModalReminderStep.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    report = argBar;
    yankee = argBaz;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    var _closure1_slot1 = yankee;
    var _closure1_slot2 = oscard;
    entity = global;
    option = entity.Object;
    golfie = option.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(option)(zuuluu, entity, tangon);
    entity = 0;
    golfie = oscard[entity];
    tangon = argCor;
    entity = undefined;
    tangon = tangon.bind(entity)(golfie);
    tangon = 1;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.UserSettingsSections;
    var _closure1_slot3 = tangon;
    tangon = 2;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    golfie = tangon.jsx;
    var _closure1_slot4 = golfie;
    tangon = tangon.jsxs;
    var _closure1_slot5 = tangon;
    tangon = 3;
    tangon = oscard[tangon];
    option = report.bind(entity)(tangon);
    golfie = option.createStyles;
    tangon = {};
    verify = {'paddingTop': 16, 'paddingBottom': 24};
    tangon['header'] = verify;
    verify = {};
    offset = 'center';
    verify['textAlign'] = offset;
    tangon['centerAlign'] = verify;
    verify = {};
    offset = 8;
    verify['marginBottom'] = offset;
    tangon['marginBottom8'] = verify;
    verify = {};
    offset = 4;
    romeon = oscard[offset];
    romeon = yankee.bind(entity)(romeon);
    romeon = romeon.radii;
    romeon = romeon.xxl;
    verify['borderRadius'] = romeon;
    tangon['actionButton'] = verify;
    verify = {};
    offset = oscard[offset];
    offset = yankee.bind(entity)(offset);
    offset = offset.colors;
    offset = offset.TEXT_BRAND;
    verify['color'] = offset;
    tangon['brandColor'] = verify;
    tangon = golfie.bind(option)(tangon);
    var _closure1_slot6 = tangon;
    tangon = 13;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/pomelo/native/components/PomeloModalReminderStep.tsx';
    tangon = report.bind(oscard)(tangon);
    michal = function(argFoo) { // Original name: PomeloModalReminderStep
        entity = argFoo;
        golfie = entity.onCloseModal;
        var _closure2_slot0 = golfie;
        michal = _closure1_slot6;
        tangon = undefined;
        yankee = michal.bind(tangon)();
        offset = _closure1_slot0;
        backup = _closure1_slot2;
        michal = 5;
        michal = backup[michal];
        zuuluu = offset.bind(tangon)(michal);
        michal = zuuluu.useNavigation;
        michal = michal.bind(zuuluu)();
        var _closure2_slot1 = michal;
        option = _closure1_slot4;
        oscard = _closure1_slot1;
        report = 6;
        michal = backup[report];
        zuuluu = oscard.bind(tangon)(michal);
        michal = {};
        verify = yankee.actionButton;
        michal['style'] = verify;
        verify = backup[report];
        verify = oscard.bind(tangon)(verify);
        verify = verify.Sizes;
        verify = verify.MEDIUM;
        michal['size'] = verify;
        verify = 7;
        romeon = backup[verify];
        romeon = offset.bind(tangon)(romeon);
        sizing = romeon.intl;
        kiloes = sizing.string;
        romeon = backup[verify];
        romeon = offset.bind(tangon)(romeon);
        romeon = romeon.t;
        romeon = romeon.BddRzc;
        romeon = kiloes.bind(sizing)(romeon);
        michal['text'] = romeon;
        michal['onPress'] = golfie;
        golfie = option.bind(tangon)(zuuluu, michal);
        michal = backup[report];
        zuuluu = oscard.bind(tangon)(michal);
        michal = {};
        romeon = backup[report];
        romeon = oscard.bind(tangon)(romeon);
        romeon = romeon.Sizes;
        romeon = romeon.MEDIUM;
        michal['size'] = romeon;
        romeon = backup[report];
        romeon = oscard.bind(tangon)(romeon);
        romeon = romeon.Looks;
        romeon = romeon.LINK;
        michal['look'] = romeon;
        report = backup[report];
        report = oscard.bind(tangon)(report);
        report = report.Colors;
        report = report.LINK;
        michal['color'] = report;
        report = yankee.brandColor;
        michal['textStyle'] = report;
        report = backup[verify];
        report = offset.bind(tangon)(report);
        kiloes = report.intl;
        romeon = kiloes.string;
        report = backup[verify];
        report = offset.bind(tangon)(report);
        report = report.t;
        report = report.auGQLS;
        report = romeon.bind(kiloes)(report);
        michal['text'] = report;
        report = function() { // Original name: onPress
            michal = _closure2_slot1;
            entity = michal.pop;
            entity = entity.bind(michal)();
            return entity;
        };
        michal['onPress'] = report;
        report = option.bind(tangon)(zuuluu, michal);
        zuuluu = _closure1_slot5;
        entity = 8;
        entity = backup[entity];
        michal = oscard.bind(tangon)(entity);
        entity = {};
        romeon = true;
        entity['absoluteBottom'] = romeon;
        entity['action'] = golfie;
        entity['secondaryAction'] = report;
        report = 9;
        report = backup[report];
        oscard = oscard.bind(tangon)(report);
        report = {};
        golfie = yankee.header;
        report['style'] = golfie;
        golfie = backup[verify];
        golfie = offset.bind(tangon)(golfie);
        kiloes = golfie.intl;
        romeon = kiloes.string;
        golfie = backup[verify];
        golfie = offset.bind(tangon)(golfie);
        golfie = golfie.t;
        golfie = golfie.3C+rbG;
        golfie = romeon.bind(kiloes)(golfie);
        report['title'] = golfie;
        oscard = option.bind(tangon)(oscard, report);
        report = new Array(3);
        report[0] = oscard;
        oscard = 10;
        oscard = backup[oscard];
        oscard = offset.bind(tangon)(oscard);
        golfie = oscard.Text;
        oscard = {'style': null, 'variant': 'text-md/medium', 'color': 'header-secondary'};
        kiloes = yankee.centerAlign;
        romeon = new Array(2);
        romeon[0] = kiloes;
        kiloes = yankee.marginBottom8;
        romeon[1] = kiloes;
        oscard['style'] = romeon;
        romeon = backup[verify];
        romeon = offset.bind(tangon)(romeon);
        sizing = romeon.intl;
        kiloes = sizing.string;
        romeon = backup[verify];
        romeon = offset.bind(tangon)(romeon);
        romeon = romeon.t;
        romeon = romeon.TS1L09;
        romeon = kiloes.bind(sizing)(romeon);
        oscard['children'] = romeon;
        oscard = option.bind(tangon)(golfie, oscard);
        report[1] = oscard;
        oscard = 11;
        oscard = backup[oscard];
        oscard = offset.bind(tangon)(oscard);
        golfie = oscard.TextWithIOSLinkWorkaround;
        oscard = {'style': null, 'variant': 'text-md/medium', 'color': 'header-secondary'};
        yankee = yankee.centerAlign;
        oscard['style'] = yankee;
        yankee = backup[verify];
        yankee = offset.bind(tangon)(yankee);
        romeon = yankee.intl;
        yankee = romeon.format;
        verify = backup[verify];
        verify = offset.bind(tangon)(verify);
        verify = verify.t;
        offset = verify.bWE0ZG;
        verify = {};
        foxtra = function() { // Original name: onClick
            michal = _closure2_slot0;
            entity = undefined;
            michal = michal.bind(entity)();
            zuuluu = _closure1_slot0;
            tangon = _closure1_slot2;
            michal = 12;
            michal = tangon[michal];
            tangon = zuuluu.bind(entity)(michal);
            zuuluu = tangon.openUserSettings;
            michal = {};
            report = _closure1_slot3;
            report = report.OVERVIEW;
            michal['screen'] = report;
            michal = zuuluu.bind(tangon)(michal);
            return entity;
        };
        verify['onClick'] = foxtra;
        verify = yankee.bind(romeon)(offset, verify);
        oscard['children'] = verify;
        oscard = option.bind(tangon)(golfie, oscard);
        report[2] = oscard;
        entity['children'] = report;
        entity = zuuluu.bind(tangon)(michal, entity);
        return entity;
    };
    zuuluu['default'] = michal;
    return entity;
})();