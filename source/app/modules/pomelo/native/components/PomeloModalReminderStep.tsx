// app/modules/pomelo/native/components/PomeloModalReminderStep.tsx
export default (function(argFoo, argBar, argBaz, argCorge, _, argFred, argPlugh) {
    report = argBar;
    yankee = argBaz;
    zulu = argFred;
    oscar = argPlugh;
    var _closure1_slot0 = report;
    var _closure1_slot1 = yankee;
    var _closure1_slot2 = oscar;
    entity = global;
    options = entity.Object;
    golf = options.defineProperty;
    tango = {};
    entity = true;
    tango['value'] = entity;
    entity = '__esModule';
    entity = golf.bind(options)(zulu, entity, tango);
    entity = 0;
    golf = oscar[entity];
    tango = argCorge;
    entity = undefined;
    tango = tango.bind(entity)(golf);
    tango = 1;
    tango = oscar[tango];
    tango = yankee.bind(entity)(tango);
    var _closure1_slot3 = tango;
    tango = 2;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.UserSettingsSections;
    var _closure1_slot4 = tango;
    tango = 3;
    golf = oscar[tango];
    golf = report.bind(entity)(golf);
    golf = golf.jsx;
    var _closure1_slot5 = golf;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.jsxs;
    var _closure1_slot6 = tango;
    tango = 4;
    tango = oscar[tango];
    options = report.bind(entity)(tango);
    golf = options.createStyles;
    tango = {};
    verify = {'paddingTop': 16, 'paddingBottom': 24};
    tango['header'] = verify;
    verify = {};
    offset = 'center';
    verify['textAlign'] = offset;
    tango['centerAlign'] = verify;
    verify = {};
    offset = 8;
    verify['marginBottom'] = offset;
    tango['marginBottom8'] = verify;
    verify = {};
    offset = 5;
    romeo = oscar[offset];
    romeo = yankee.bind(entity)(romeo);
    romeo = romeo.radii;
    romeo = romeo.xxl;
    verify['borderRadius'] = romeo;
    tango['actionButton'] = verify;
    verify = {};
    offset = oscar[offset];
    offset = yankee.bind(entity)(offset);
    offset = offset.colors;
    offset = offset.TEXT_BRAND;
    verify['color'] = offset;
    tango['brandColor'] = verify;
    tango = golf.bind(options)(tango);
    var _closure1_slot7 = tango;
    tango = 17;
    tango = oscar[tango];
    oscar = report.bind(entity)(tango);
    report = oscar.fileFinishedImporting;
    tango = 'modules/pomelo/native/components/PomeloModalReminderStep.tsx';
    tango = report.bind(oscar)(tango);
    mike = function(argFoo) { // Original name: PomeloModalReminderStep
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            entity = argFoo;
            report = entity.onCloseModal;
            var _closure2_slot0 = report;
            entity = _closure1_slot7;
            tango = undefined;
            yankee = entity.bind(tango)();
            sizing = _closure1_slot0;
            verify = _closure1_slot2;
            entity = 6;
            entity = verify[entity];
            mike = sizing.bind(tango)(entity);
            entity = mike.useNavigation;
            entity = entity.bind(mike)();
            var _closure2_slot1 = entity;
            entity = 7;
            entity = verify[entity];
            mike = sizing.bind(tango)(entity);
            entity = mike.useForceMigration;
            offset = entity.bind(mike)();
            entity = 8;
            entity = verify[entity];
            golf = sizing.bind(tango)(entity);
            zulu = golf.useStateFromStores;
            entity = _closure1_slot3;
            mike = new Array(1);
            mike[0] = entity;
            entity = function() {
                entity = _closure1_slot3;
                entity = entity.locale;
                return entity;
            };
            update = zulu.bind(golf)(mike, entity);
            options = _closure1_slot5;
            golf = _closure1_slot1;
            zulu = 9;
            entity = verify[zulu];
            mike = golf.bind(tango)(entity);
            entity = {};
            romeo = yankee.actionButton;
            entity['style'] = romeo;
            romeo = verify[zulu];
            romeo = golf.bind(tango)(romeo);
            romeo = romeo.Sizes;
            romeo = romeo.MEDIUM;
            entity['size'] = romeo;
            backup = 10;
            romeo = verify[backup];
            romeo = sizing.bind(tango)(romeo);
            output = romeo.intl;
            kilo = output.string;
            romeo = verify[backup];
            romeo = sizing.bind(tango)(romeo);
            romeo = romeo.t;
            romeo = romeo.BddRzc;
            romeo = kilo.bind(output)(romeo);
            entity['text'] = romeo;
            entity['onPress'] = report;
            romeo = options.bind(tango)(mike, entity);
            entity = verify[zulu];
            mike = golf.bind(tango)(entity);
            entity = {};
            report = verify[zulu];
            report = golf.bind(tango)(report);
            report = report.Sizes;
            report = report.MEDIUM;
            entity['size'] = report;
            report = verify[zulu];
            report = golf.bind(tango)(report);
            report = report.Looks;
            report = report.LINK;
            entity['look'] = report;
            zulu = verify[zulu];
            zulu = golf.bind(tango)(zulu);
            zulu = zulu.Colors;
            zulu = zulu.LINK;
            entity['color'] = zulu;
            zulu = yankee.brandColor;
            entity['textStyle'] = zulu;
            zulu = verify[backup];
            zulu = sizing.bind(tango)(zulu);
            kilo = zulu.intl;
            report = kilo.string;
            zulu = verify[backup];
            zulu = sizing.bind(tango)(zulu);
            zulu = zulu.t;
            zulu = zulu.auGQLS;
            zulu = report.bind(kilo)(zulu);
            entity['text'] = zulu;
            zulu = function() { // Original name: onPress
                mike = _closure2_slot1;
                entity = mike.pop;
                entity = entity.bind(mike)();
                return entity;
            };
            entity['onPress'] = zulu;
            report = options.bind(tango)(mike, entity);
            zulu = _closure1_slot6;
            entity = 11;
            entity = verify[entity];
            mike = golf.bind(tango)(entity);
            entity = {};
            kilo = true;
            entity['absoluteBottom'] = kilo;
            entity['action'] = romeo;
            entity['secondaryAction'] = report;
            report = 12;
            report = verify[report];
            golf = golf.bind(tango)(report);
            report = {};
            verify = yankee.header;
            report['style'] = verify;
            echo = _closure1_slot0;
            source = _closure1_slot2;
            verify = source[backup];
            verify = echo.bind(tango)(verify);
            output = verify.intl;
            if(offset) { _fun00002_ip = 525; continue _fun00001 }
 491:
            romeo = output.string;
            verify = source[backup];
            verify = echo.bind(tango)(verify);
            verify = verify.t;
            verify = verify.3C+rbG;
            verify = romeo.bind(output)(verify);
            _fun00002_ip = 588; continue _fun00001;
 525:
            sizing = output.formatToPlainString;
            romeo = source[backup];
            romeo = echo.bind(tango)(romeo);
            romeo = romeo.t;
            kilo = romeo.XOWfNj;
            romeo = {};
            result = 13;
            result = source[result];
            echo = echo.bind(tango)(result);
            result = echo.getLocalizedForcedUUDate;
            result = result.bind(echo)(update);
            romeo['date'] = result;
            verify = sizing.bind(output)(kilo, romeo);
 588:
            report['title'] = verify;
            golf = options.bind(tango)(golf, report);
            report = new Array(3);
            report[0] = golf;
            verify = _closure1_slot5;
            options = _closure1_slot0;
            romeo = _closure1_slot2;
            golf = 14;
            golf = romeo[golf];
            golf = options.bind(tango)(golf);
            options = golf.Text;
            golf = {'style': null, 'variant': 'text-md/medium', 'color': 'header-secondary'};
            kilo = yankee.centerAlign;
            romeo = new Array(2);
            romeo[0] = kilo;
            kilo = yankee.marginBottom8;
            romeo[1] = kilo;
            golf['style'] = romeo;
            echo = _closure1_slot0;
            source = _closure1_slot2;
            romeo = source[backup];
            romeo = echo.bind(tango)(romeo);
            output = romeo.intl;
            if(offset) { _fun00002_ip = 738; continue _fun00001 }
 704:
            romeo = output.string;
            offset = source[backup];
            offset = echo.bind(tango)(offset);
            offset = offset.t;
            offset = offset.TS1L09;
            offset = romeo.bind(output)(offset);
            _fun00002_ip = 801; continue _fun00001;
 738:
            sizing = output.formatToPlainString;
            romeo = source[backup];
            romeo = echo.bind(tango)(romeo);
            romeo = romeo.t;
            kilo = romeo.g/gkAw;
            romeo = {};
            result = 13;
            result = source[result];
            echo = echo.bind(tango)(result);
            result = echo.getLocalizedForcedUUDate;
            result = result.bind(echo)(update);
            romeo['date'] = result;
            offset = sizing.bind(output)(kilo, romeo);
 801:
            golf['children'] = offset;
            golf = verify.bind(tango)(options, golf);
            report[1] = golf;
            options = _closure1_slot5;
            offset = _closure1_slot0;
            verify = _closure1_slot2;
            oscar = 15;
            oscar = verify[oscar];
            oscar = offset.bind(tango)(oscar);
            golf = oscar.TextWithIOSLinkWorkaround;
            oscar = {'style': null, 'variant': 'text-md/medium', 'color': 'header-secondary'};
            yankee = yankee.centerAlign;
            oscar['style'] = yankee;
            yankee = verify[backup];
            yankee = offset.bind(tango)(yankee);
            romeo = yankee.intl;
            yankee = romeo.format;
            verify = verify[backup];
            verify = offset.bind(tango)(verify);
            verify = verify.t;
            offset = verify.bWE0ZG;
            verify = {};
            foxtrot = function() { // Original name: onClick
                mike = _closure2_slot0;
                entity = undefined;
                mike = mike.bind(entity)();
                zulu = _closure1_slot0;
                tango = _closure1_slot2;
                mike = 16;
                mike = tango[mike];
                tango = zulu.bind(entity)(mike);
                zulu = tango.openUserSettings;
                mike = {};
                report = _closure1_slot4;
                report = report.OVERVIEW;
                mike['screen'] = report;
                mike = zulu.bind(tango)(mike);
                return entity;
            };
            verify['onClick'] = foxtrot;
            verify = yankee.bind(romeo)(offset, verify);
            oscar['children'] = verify;
            oscar = options.bind(tango)(golf, oscar);
            report[2] = oscar;
            entity['children'] = report;
            entity = zulu.bind(tango)(mike, entity);
            return entity;
        }
    };
    zulu['default'] = mike;
    return entity;
})();