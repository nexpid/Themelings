// app/modules/pomelo/native/components/PomeloModalDetailsStep.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    report = argBar;
    romeon = argBaz;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    var _closure1_slot1 = romeon;
    var _closure1_slot2 = oscard;
    entity = global;
    option = entity.Object;
    golfie = option.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(option)(zuuluu, entity, tangon);
    entity = 0;
    golfie = oscard[entity];
    tangon = argCor;
    entity = undefined;
    tangon = tangon.bind(entity)(golfie);
    tangon = 1;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    golfie = tangon.Image;
    var _closure1_slot3 = golfie;
    tangon = tangon.View;
    var _closure1_slot4 = tangon;
    tangon = 2;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.PomeloScreens;
    var _closure1_slot5 = tangon;
    tangon = 3;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.HelpdeskArticles;
    var _closure1_slot6 = tangon;
    tangon = 4;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    golfie = tangon.jsx;
    var _closure1_slot7 = golfie;
    tangon = tangon.jsxs;
    var _closure1_slot8 = tangon;
    tangon = 5;
    tangon = oscard[tangon];
    verify = report.bind(entity)(tangon);
    option = verify.createStyles;
    golfie = {};
    tangon = {};
    offset = 'center';
    tangon['textAlign'] = offset;
    golfie['centerAlign'] = tangon;
    tangon = {};
    yankee = 6;
    offset = oscard[yankee];
    offset = romeon.bind(entity)(offset);
    offset = offset.radii;
    offset = offset.xxl;
    tangon['borderRadius'] = offset;
    golfie['actionButton'] = tangon;
    tangon = {};
    offset = 16;
    tangon['marginBottom'] = offset;
    golfie['marginBottom16'] = tangon;
    tangon = {};
    offset = 8;
    tangon['marginBottom'] = offset;
    golfie['marginBottom8'] = tangon;
    tangon = {'flexDirection': 'row', 'alignItems': 'center', 'marginBottom': 20};
    golfie['infoItem'] = tangon;
    tangon = {'width': 40, 'height': 40, 'backgroundColor': null, 'borderRadius': 20, 'alignItems': 'center', 'justifyContent': 'center'};
    offset = oscard[yankee];
    offset = romeon.bind(entity)(offset);
    offset = offset.colors;
    offset = offset.BACKGROUND_SECONDARY;
    tangon['backgroundColor'] = offset;
    golfie['infoItemIconContainer'] = tangon;
    tangon = {'width': 20, 'height': 20};
    golfie['infoItemIcon'] = tangon;
    tangon = {'flex': 1, 'marginLeft': 16};
    golfie['infoItemText'] = tangon;
    tangon = {};
    offset = oscard[yankee];
    offset = romeon.bind(entity)(offset);
    offset = offset.colors;
    offset = offset.INTERACTIVE_NORMAL;
    tangon['color'] = offset;
    golfie['iconColor'] = tangon;
    tangon = {'width': '100%', 'height': 200, 'marginTop': 32};
    golfie['headerImage'] = tangon;
    tangon = 21;
    offset = {'paddingTop': 24, 'paddingBottom': 21};
    golfie['header'] = offset;
    offset = {};
    yankee = oscard[yankee];
    yankee = romeon.bind(entity)(yankee);
    yankee = yankee.colors;
    yankee = yankee.TEXT_BRAND;
    offset['color'] = yankee;
    golfie['brandColor'] = offset;
    golfie = option.bind(verify)(golfie);
    var _closure1_slot9 = golfie;
    golfie = function(argFoo) { // Original name: InfoItem
        entity = argFoo;
        foxtra = entity.icon;
        verify = entity.text;
        entity = _closure1_slot9;
        tangon = undefined;
        offset = entity.bind(tangon)();
        zuuluu = _closure1_slot8;
        michal = _closure1_slot4;
        entity = {};
        report = offset.infoItem;
        entity['style'] = report;
        option = _closure1_slot7;
        report = {};
        golfie = offset.infoItemIconContainer;
        report['style'] = golfie;
        romeon = _closure1_slot1;
        yankee = _closure1_slot2;
        golfie = 7;
        golfie = yankee[golfie];
        romeon = romeon.bind(tangon)(golfie);
        golfie = {};
        backup = offset.infoItemIcon;
        golfie['style'] = backup;
        golfie['source'] = foxtra;
        foxtra = offset.iconColor;
        foxtra = foxtra.color;
        golfie['color'] = foxtra;
        golfie = option.bind(tangon)(romeon, golfie);
        report['children'] = golfie;
        golfie = option.bind(tangon)(michal, report);
        report = new Array(2);
        report[0] = golfie;
        golfie = _closure1_slot0;
        oscard = 8;
        oscard = yankee[oscard];
        oscard = golfie.bind(tangon)(oscard);
        golfie = oscard.Text;
        oscard = {'style': null, 'variant': 'text-sm/medium', 'color': 'header-secondary'};
        offset = offset.infoItemText;
        oscard['style'] = offset;
        oscard['children'] = verify;
        oscard = option.bind(tangon)(golfie, oscard);
        report[1] = oscard;
        entity['children'] = report;
        entity = zuuluu.bind(tangon)(michal, entity);
        return entity;
    };
    var _closure1_slot10 = golfie;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/pomelo/native/components/PomeloModalDetailsStep.tsx';
    tangon = report.bind(oscard)(tangon);
    michal = function(argFoo) { // Original name: PomeloModalDetailsStep
        entity = argFoo;
        foxtra = entity.user;
        entity = _closure1_slot9;
        tangon = undefined;
        sizing = entity.bind(tangon)();
        romeon = _closure1_slot1;
        backup = _closure1_slot2;
        entity = 9;
        entity = backup[entity];
        michal = romeon.bind(tangon)(entity);
        entity = michal.useName;
        update = entity.bind(michal)(foxtra);
        offset = _closure1_slot0;
        entity = 10;
        entity = backup[entity];
        michal = offset.bind(tangon)(entity);
        entity = michal.useNavigation;
        entity = entity.bind(michal)();
        var _closure2_slot0 = entity;
        option = _closure1_slot7;
        report = 11;
        entity = backup[report];
        michal = romeon.bind(tangon)(entity);
        entity = {};
        golfie = sizing.actionButton;
        entity['style'] = golfie;
        golfie = backup[report];
        golfie = romeon.bind(tangon)(golfie);
        golfie = golfie.Sizes;
        golfie = golfie.MEDIUM;
        entity['size'] = golfie;
        verify = 12;
        golfie = backup[verify];
        golfie = offset.bind(tangon)(golfie);
        kiloes = golfie.intl;
        yankee = kiloes.string;
        golfie = backup[verify];
        golfie = offset.bind(tangon)(golfie);
        golfie = golfie.t;
        golfie = golfie.LhlgY2;
        golfie = yankee.bind(kiloes)(golfie);
        entity['text'] = golfie;
        golfie = function() { // Original name: onPress
            zuuluu = _closure2_slot0;
            michal = zuuluu.push;
            entity = _closure1_slot5;
            entity = entity.EDIT;
            entity = michal.bind(zuuluu)(entity);
            entity = undefined;
            return entity;
        };
        entity['onPress'] = golfie;
        golfie = option.bind(tangon)(michal, entity);
        entity = backup[report];
        michal = romeon.bind(tangon)(entity);
        entity = {};
        yankee = backup[report];
        yankee = romeon.bind(tangon)(yankee);
        yankee = yankee.Sizes;
        yankee = yankee.MEDIUM;
        entity['size'] = yankee;
        yankee = backup[report];
        yankee = romeon.bind(tangon)(yankee);
        yankee = yankee.Looks;
        yankee = yankee.LINK;
        entity['look'] = yankee;
        report = backup[report];
        report = romeon.bind(tangon)(report);
        report = report.Colors;
        report = report.LINK;
        entity['color'] = report;
        report = sizing.brandColor;
        entity['textStyle'] = report;
        report = backup[verify];
        report = offset.bind(tangon)(report);
        kiloes = report.intl;
        yankee = kiloes.string;
        report = backup[verify];
        report = offset.bind(tangon)(report);
        report = report.t;
        report = report.1mGbXF;
        report = yankee.bind(kiloes)(report);
        entity['text'] = report;
        zuuluu = function() { // Original name: onPress
            zuuluu = _closure2_slot0;
            michal = zuuluu.push;
            entity = _closure1_slot5;
            entity = entity.REMINDER;
            entity = michal.bind(zuuluu)(entity);
            return entity;
        };
        entity['onPress'] = zuuluu;
        report = option.bind(tangon)(michal, entity);
        zuuluu = _closure1_slot8;
        entity = 13;
        entity = backup[entity];
        michal = romeon.bind(tangon)(entity);
        entity = {'absoluteBottom': true, 'fixActionButtonsToBottom': true, 'hasNavbar': false};
        entity['action'] = golfie;
        entity['secondaryAction'] = report;
        golfie = _closure1_slot3;
        report = {};
        yankee = sizing.headerImage;
        report['style'] = yankee;
        yankee = 'contain';
        report['resizeMode'] = yankee;
        yankee = 14;
        yankee = backup[yankee];
        yankee = romeon.bind(tangon)(yankee);
        report['source'] = yankee;
        golfie = option.bind(tangon)(golfie, report);
        report = new Array(7);
        report[0] = golfie;
        golfie = 15;
        golfie = backup[golfie];
        yankee = romeon.bind(tangon)(golfie);
        golfie = {};
        kiloes = sizing.header;
        golfie['style'] = kiloes;
        kiloes = backup[verify];
        kiloes = offset.bind(tangon)(kiloes);
        echoed = kiloes.intl;
        result = echoed.formatToPlainString;
        kiloes = backup[verify];
        kiloes = offset.bind(tangon)(kiloes);
        kiloes = kiloes.t;
        output = kiloes.au+lPj;
        kiloes = {};
        kiloes['n'] = update;
        kiloes = result.bind(echoed)(output, kiloes);
        golfie['title'] = kiloes;
        golfie = option.bind(tangon)(yankee, golfie);
        report[1] = golfie;
        golfie = 8;
        golfie = backup[golfie];
        golfie = offset.bind(tangon)(golfie);
        yankee = golfie.Text;
        golfie = {'variant': 'text-md/medium', 'color': 'header-secondary'};
        output = sizing.centerAlign;
        kiloes = new Array(2);
        kiloes[0] = output;
        output = sizing.marginBottom16;
        kiloes[1] = output;
        golfie['style'] = kiloes;
        kiloes = backup[verify];
        kiloes = offset.bind(tangon)(kiloes);
        echoed = kiloes.intl;
        result = echoed.format;
        kiloes = backup[verify];
        kiloes = offset.bind(tangon)(kiloes);
        kiloes = kiloes.t;
        output = kiloes.5fwX5+;
        kiloes = {};
        kiloes = result.bind(echoed)(output, kiloes);
        golfie['children'] = kiloes;
        golfie = option.bind(tangon)(yankee, golfie);
        report[2] = golfie;
        golfie = 16;
        golfie = backup[golfie];
        golfie = offset.bind(tangon)(golfie);
        yankee = golfie.TextWithIOSLinkWorkaround;
        golfie = {'variant': 'text-md/medium', 'color': 'header-secondary'};
        output = sizing.centerAlign;
        kiloes = new Array(2);
        kiloes[0] = output;
        sizing = sizing.marginBottom16;
        kiloes[1] = sizing;
        golfie['style'] = kiloes;
        kiloes = backup[verify];
        kiloes = offset.bind(tangon)(kiloes);
        result = kiloes.intl;
        output = result.format;
        kiloes = backup[verify];
        kiloes = offset.bind(tangon)(kiloes);
        kiloes = kiloes.t;
        sizing = kiloes.i2vB8/;
        kiloes = {};
        echoed = 17;
        echoed = backup[echoed];
        source = romeon.bind(tangon)(echoed);
        update = source.getArticleURL;
        echoed = _closure1_slot6;
        echoed = echoed.POMELO_FAQ;
        echoed = update.bind(source)(echoed);
        kiloes['helpdeskArticle'] = echoed;
        kiloes = output.bind(result)(sizing, kiloes);
        golfie['children'] = kiloes;
        golfie = option.bind(tangon)(yankee, golfie);
        report[3] = golfie;
        golfie = _closure1_slot10;
        oscard = {};
        yankee = 18;
        yankee = backup[yankee];
        yankee = romeon.bind(tangon)(yankee);
        oscard['icon'] = yankee;
        yankee = backup[verify];
        yankee = offset.bind(tangon)(yankee);
        output = yankee.intl;
        sizing = output.format;
        yankee = backup[verify];
        yankee = offset.bind(tangon)(yankee);
        yankee = yankee.t;
        kiloes = yankee.SzUaZ2;
        yankee = {};
        yankee = sizing.bind(output)(kiloes, yankee);
        oscard['text'] = yankee;
        oscard = option.bind(tangon)(golfie, oscard);
        report[4] = oscard;
        oscard = {};
        yankee = 19;
        yankee = backup[yankee];
        yankee = romeon.bind(tangon)(yankee);
        oscard['icon'] = yankee;
        yankee = backup[verify];
        yankee = offset.bind(tangon)(yankee);
        output = yankee.intl;
        sizing = output.format;
        yankee = backup[verify];
        yankee = offset.bind(tangon)(yankee);
        yankee = yankee.t;
        kiloes = yankee.UwPc+P;
        yankee = {};
        yankee = sizing.bind(output)(kiloes, yankee);
        oscard['text'] = yankee;
        oscard = option.bind(tangon)(golfie, oscard);
        report[5] = oscard;
        oscard = {};
        yankee = 20;
        yankee = backup[yankee];
        yankee = romeon.bind(tangon)(yankee);
        oscard['icon'] = yankee;
        yankee = backup[verify];
        yankee = offset.bind(tangon)(yankee);
        romeon = yankee.intl;
        yankee = romeon.formatToPlainString;
        verify = backup[verify];
        verify = offset.bind(tangon)(verify);
        verify = verify.t;
        offset = verify.okLjjo;
        verify = {};
        foxtra = foxtra.tag;
        verify['username'] = foxtra;
        verify = yankee.bind(romeon)(offset, verify);
        oscard['text'] = verify;
        oscard = option.bind(tangon)(golfie, oscard);
        report[6] = oscard;
        entity['children'] = report;
        entity = zuuluu.bind(tangon)(michal, entity);
        return entity;
    };
    zuuluu['default'] = michal;
    return entity;
})();