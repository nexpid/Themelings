// app/modules/pomelo/native/useTransitionAnimation.tsx
export default (function(global, require, metroImportDefault, metroImportAll, moduleObject, exports, dependencyMap) {
    var6 = require;
    var3 = exports;
    var7 = dependencyMap;
    var _closure1_slot0 = var6;
    var _closure1_slot1 = var7;
    var1 = global;
    var8 = var1.Object;
    var5 = var8.defineProperty;
    var2 = {};
    var1 = true;
    var2['value'] = var1;
    var1 = '__esModule';
    var1 = var5.bind(var8)(var3, var1, var2);
    var8 = 0;
    var5 = var7[var8];
    var2 = metroImportAll;
    var1 = undefined;
    var2 = var2.bind(var1)(var5);
    var _closure1_slot2 = var2;
    var2 = {};
    var2['UP'] = var8;
    var5 = 'UP';
    var2[var8] = var5;
    var8 = 1;
    var2['DOWN'] = var8;
    var5 = 'DOWN';
    var2[var8] = var5;
    var _closure1_slot3 = var2;
    var5 = {};
    var8 = 'function useTransitionAnimationTsx1(){const{offset}=this.__closure;return{transform:[{translateY:offset.get()*2}],opacity:1-Math.abs(offset.get())};}';
    var5['code'] = var8;
    var _closure1_slot4 = var5;
    var5 = 3;
    var5 = var7[var5];
    var7 = var6.bind(var1)(var5);
    var6 = var7.fileFinishedImporting;
    var5 = 'modules/pomelo/native/useTransitionAnimation.tsx';
    var5 = var6.bind(var7)(var5);
    var4 = function useTransitionAnimation() {
        var7 = _closure1_slot0;
        var8 = _closure1_slot1;
        var4 = 1;
        var1 = var8[var4];
        var5 = undefined;
        var9 = var7.bind(var5)(var1);
        var6 = var9.useSharedValue;
        var1 = 0;
        var6 = var6.bind(var9)(var1);
        var _closure2_slot0 = var6;
        var1 = {};
        var4 = var8[var4];
        var7 = var7.bind(var5)(var4);
        var5 = var7.useAnimatedStyle;
        var4 = function o() {
            var1 = {};
            var3 = {};
            var5 = _closure2_slot0;
            var2 = var5.get;
            var4 = var2.bind(var5)();
            var2 = 2;
            var2 = var2 * var4;
            var3['translateY'] = var2;
            var2 = new Array(1);
            var2[0] = var3;
            var1['transform'] = var2;
            var2 = global;
            var4 = var2.Math;
            var3 = var4.abs;
            var2 = var5.get;
            var2 = var2.bind(var5)();
            var3 = var3.bind(var4)(var2);
            var2 = 1;
            var2 = var2 - var3;
            var1['opacity'] = var2;
            return var1;
        };
        var8 = {};
        var8['offset'] = var6;
        var4['__closure'] = var8;
        var8 = 13853245220103.0;
        var4['__workletHash'] = var8;
        var8 = _closure1_slot4;
        var4['__initData'] = var8;
        var4 = var5.bind(var7)(var4);
        var1['animatedStyles'] = var4;
        var5 = _closure1_slot2;
        var4 = var5.useCallback;
        var3 = new Array(1);
        var3[0] = var6;
        var2 = function(arg1) {
            _fun0001: for(var _fun0001_ip = 0; ; ) switch(_fun0001_ip) {
 0:
                var5 = _closure2_slot0;
                var4 = var5.set;
                var3 = _closure1_slot3;
                var7 = var3.UP;
                var3 = -1;
                var6 = arg1;
                if(!(var6 === var7)) { _fun0001_ip = 41; continue _fun0001 }
 38:
                var3 = 1;
 41:
                var3 = var4.bind(var5)(var3);
                var4 = _closure2_slot0;
                var3 = var4.set;
                var5 = _closure1_slot0;
                var2 = _closure1_slot1;
                var1 = 2;
                var2 = var2[var1];
                var1 = undefined;
                var7 = var5.bind(var1)(var2);
                var6 = var7.withTiming;
                var5 = {};
                var2 = 300;
                var5['duration'] = var2;
                var2 = 0;
                var2 = var6.bind(var7)(var2, var5);
                var2 = var3.bind(var4)(var2);
                return var1;
            }
        };
        var2 = var4.bind(var5)(var2, var3);
        var1['transition'] = var2;
        return var1;
    };
    var3['default'] = var4;
    var3['Direction'] = var2;
    return var1;
})();