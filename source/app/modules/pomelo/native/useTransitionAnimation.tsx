// app/modules/pomelo/native/useTransitionAnimation.tsx
export default (function(argFoo, argBar, _, argCor, __, argFre, argPlu) {
    oscard = argBar;
    zuuluu = argFre;
    golfie = argPlu;
    var _closure1_slot0 = oscard;
    var _closure1_slot1 = golfie;
    entity = global;
    option = entity.Object;
    report = option.defineProperty;
    michal = {};
    entity = true;
    michal['value'] = entity;
    entity = '__esModule';
    entity = report.bind(option)(zuuluu, entity, michal);
    option = 0;
    report = golfie[option];
    michal = argCor;
    entity = undefined;
    michal = michal.bind(entity)(report);
    var _closure1_slot2 = michal;
    michal = {};
    michal['UP'] = option;
    report = 'UP';
    michal[option] = report;
    option = 1;
    michal['DOWN'] = option;
    report = 'DOWN';
    michal[option] = report;
    var _closure1_slot3 = michal;
    report = {};
    option = 'function useTransitionAnimationTsx1(){const{offset}=this.__closure;return{transform:[{translateY:offset.get()*2}],opacity:1-Math.abs(offset.get())};}';
    report['code'] = option;
    var _closure1_slot4 = report;
    report = 3;
    report = golfie[report];
    golfie = oscard.bind(entity)(report);
    oscard = golfie.fileFinishedImporting;
    report = 'modules/pomelo/native/useTransitionAnimation.tsx';
    report = oscard.bind(golfie)(report);
    tangon = function() { // Original name: useTransitionAnimation
        golfie = _closure1_slot0;
        option = _closure1_slot1;
        tangon = 1;
        entity = option[tangon];
        report = undefined;
        verify = golfie.bind(report)(entity);
        oscard = verify.useSharedValue;
        entity = 0;
        oscard = oscard.bind(verify)(entity);
        var _closure2_slot0 = oscard;
        entity = {};
        tangon = option[tangon];
        golfie = golfie.bind(report)(tangon);
        report = golfie.useAnimatedStyle;
        tangon = function() { // Original name: o
            entity = {};
            zuuluu = {};
            report = _closure2_slot0;
            michal = report.get;
            tangon = michal.bind(report)();
            michal = 2;
            michal = michal * tangon;
            zuuluu['translateY'] = michal;
            michal = new Array(1);
            michal[0] = zuuluu;
            entity['transform'] = michal;
            michal = global;
            tangon = michal.Math;
            zuuluu = tangon.abs;
            michal = report.get;
            michal = michal.bind(report)();
            zuuluu = zuuluu.bind(tangon)(michal);
            michal = 1;
            michal = michal - zuuluu;
            entity['opacity'] = michal;
            return entity;
        };
        option = {};
        option['offset'] = oscard;
        tangon['__closure'] = option;
        option = 13853245220103.0;
        tangon['__workletHash'] = option;
        option = _closure1_slot4;
        tangon['__initData'] = option;
        tangon = report.bind(golfie)(tangon);
        entity['animatedStyles'] = tangon;
        report = _closure1_slot2;
        tangon = report.useCallback;
        zuuluu = new Array(1);
        zuuluu[0] = oscard;
        michal = function(argFoo) {
            _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
                report = _closure2_slot0;
                tangon = report.set;
                zuuluu = _closure1_slot3;
                golfie = zuuluu.UP;
                zuuluu = -1;
                oscard = argFoo;
                if(!(oscard === golfie)) { _fun00002_ip = 41; continue _fun00001 }
 38:
                zuuluu = 1;
 41:
                zuuluu = tangon.bind(report)(zuuluu);
                tangon = _closure2_slot0;
                zuuluu = tangon.set;
                report = _closure1_slot0;
                michal = _closure1_slot1;
                entity = 2;
                michal = michal[entity];
                entity = undefined;
                golfie = report.bind(entity)(michal);
                oscard = golfie.withTiming;
                report = {};
                michal = 300;
                report['duration'] = michal;
                michal = 0;
                michal = oscard.bind(golfie)(michal, report);
                michal = zuuluu.bind(tangon)(michal);
                return entity;
            }
        };
        michal = tangon.bind(report)(michal, zuuluu);
        entity['transition'] = michal;
        return entity;
    };
    zuuluu['default'] = tangon;
    zuuluu['Direction'] = michal;
    return entity;
})();