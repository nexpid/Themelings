// app/modules/nuf_channels/native/components/NUFTemplateV2.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    report = argBar;
    yankee = argBaz;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    var _closure1_slot1 = yankee;
    var _closure1_slot2 = oscard;
    entity = global;
    option = entity.Object;
    golfie = option.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(option)(zuuluu, entity, tangon);
    entity = 0;
    golfie = oscard[entity];
    tangon = argCor;
    entity = undefined;
    tangon = tangon.bind(entity)(golfie);
    tangon = 1;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.View;
    var _closure1_slot3 = tangon;
    tangon = 2;
    golfie = oscard[tangon];
    golfie = report.bind(entity)(golfie);
    golfie = golfie.jsx;
    var _closure1_slot4 = golfie;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.jsxs;
    var _closure1_slot5 = tangon;
    tangon = 3;
    tangon = oscard[tangon];
    option = report.bind(entity)(tangon);
    golfie = option.createStyles;
    tangon = {};
    verify = {'padding': 16, 'alignItems': 'center'};
    tangon['container'] = verify;
    verify = {'textAlign': 'center', 'marginBottom': 8};
    tangon['title'] = verify;
    verify = {'textAlign': 'center', 'marginBottom': 46, 'paddingLeft': 18, 'paddingRight': 18};
    tangon['description'] = verify;
    verify = {'alignSelf': 'stretch', 'alignItems': 'center', 'marginBottom': 32};
    tangon['illustration'] = verify;
    verify = {};
    offset = 4;
    offset = oscard[offset];
    offset = yankee.bind(entity)(offset);
    offset = offset.radii;
    offset = offset.xl;
    verify['borderRadius'] = offset;
    offset = '100%';
    verify['width'] = offset;
    tangon['button'] = verify;
    tangon = golfie.bind(option)(tangon);
    var _closure1_slot6 = tangon;
    tangon = 7;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/nuf_channels/native/components/NUFTemplateV2.tsx';
    tangon = report.bind(oscard)(tangon);
    michal = function(argFoo) { // Original name: _default
        entity = argFoo;
        output = entity.title;
        golfie = entity.illustration;
        backup = entity.description;
        verify = entity.onCTAPress;
        yankee = entity.CTALabel;
        entity = _closure1_slot6;
        tangon = undefined;
        offset = entity.bind(tangon)();
        zuuluu = _closure1_slot5;
        michal = _closure1_slot3;
        entity = {};
        report = offset.container;
        entity['style'] = report;
        option = _closure1_slot4;
        report = {};
        romeon = offset.illustration;
        report['style'] = romeon;
        report['children'] = golfie;
        golfie = option.bind(tangon)(michal, report);
        report = new Array(4);
        report[0] = golfie;
        foxtra = _closure1_slot0;
        romeon = _closure1_slot2;
        golfie = 5;
        kiloes = romeon[golfie];
        kiloes = foxtra.bind(tangon)(kiloes);
        sizing = kiloes.Text;
        kiloes = {'style': null, 'accessibilityRole': 'header', 'variant': 'heading-xl/bold'};
        result = offset.title;
        kiloes['style'] = result;
        kiloes['children'] = output;
        kiloes = option.bind(tangon)(sizing, kiloes);
        report[1] = kiloes;
        golfie = romeon[golfie];
        golfie = foxtra.bind(tangon)(golfie);
        foxtra = golfie.Text;
        golfie = {};
        kiloes = offset.description;
        golfie['style'] = kiloes;
        kiloes = 'text-md/medium';
        golfie['variant'] = kiloes;
        golfie['children'] = backup;
        golfie = option.bind(tangon)(foxtra, golfie);
        report[2] = golfie;
        golfie = _closure1_slot1;
        oscard = 6;
        oscard = romeon[oscard];
        golfie = golfie.bind(tangon)(oscard);
        oscard = {};
        oscard['text'] = yankee;
        offset = offset.button;
        oscard['style'] = offset;
        oscard['onPress'] = verify;
        oscard = option.bind(tangon)(golfie, oscard);
        report[3] = oscard;
        entity['children'] = report;
        entity = zuuluu.bind(tangon)(michal, entity);
        return entity;
    };
    zuuluu['default'] = michal;
    return entity;
})();