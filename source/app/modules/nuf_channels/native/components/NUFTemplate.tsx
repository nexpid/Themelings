// app/modules/nuf_channels/native/components/NUFTemplate.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    report = argBar;
    yankee = argBaz;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    var _closure1_slot1 = yankee;
    var _closure1_slot2 = oscard;
    entity = global;
    option = entity.Object;
    golfie = option.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(option)(zuuluu, entity, tangon);
    entity = 0;
    golfie = oscard[entity];
    tangon = argCor;
    entity = undefined;
    tangon = tangon.bind(entity)(golfie);
    tangon = 1;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    golfie = tangon.View;
    var _closure1_slot3 = golfie;
    tangon = tangon.Image;
    var _closure1_slot4 = tangon;
    tangon = 2;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    golfie = tangon.jsx;
    var _closure1_slot5 = golfie;
    tangon = tangon.jsxs;
    var _closure1_slot6 = tangon;
    tangon = 3;
    tangon = oscard[tangon];
    option = report.bind(entity)(tangon);
    golfie = option.createStyles;
    tangon = {};
    verify = {'padding': 16, 'alignItems': 'center'};
    offset = 4;
    offset = oscard[offset];
    offset = yankee.bind(entity)(offset);
    offset = offset.colors;
    offset = offset.BACKGROUND_PRIMARY;
    verify['backgroundColor'] = offset;
    tangon['container'] = verify;
    verify = {'textAlign': 'center', 'marginBottom': 8};
    tangon['title'] = verify;
    offset = 24;
    verify = {'textAlign': 'center', 'lineHeight': 18, 'marginBottom': 24};
    tangon['description'] = verify;
    verify = {};
    verify['marginBottom'] = offset;
    tangon['image'] = verify;
    tangon = golfie.bind(option)(tangon);
    var _closure1_slot7 = tangon;
    tangon = 7;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/nuf_channels/native/components/NUFTemplate.tsx';
    tangon = report.bind(oscard)(tangon);
    michal = function(argFoo) { // Original name: _default
        entity = argFoo;
        output = entity.title;
        kiloes = entity.description;
        backup = entity.imageSrc;
        verify = entity.onCTAPress;
        foxtra = entity.CTALabel;
        entity = _closure1_slot7;
        tangon = undefined;
        yankee = entity.bind(tangon)();
        zuuluu = _closure1_slot6;
        michal = _closure1_slot3;
        entity = {};
        report = yankee.container;
        entity['style'] = report;
        option = _closure1_slot5;
        offset = _closure1_slot0;
        romeon = _closure1_slot2;
        golfie = 5;
        report = romeon[golfie];
        report = offset.bind(tangon)(report);
        sizing = report.Text;
        report = {'style': null, 'accessibilityRole': 'header', 'variant': 'heading-xl/extrabold', 'color': 'header-primary'};
        result = yankee.title;
        report['style'] = result;
        report['children'] = output;
        sizing = option.bind(tangon)(sizing, report);
        report = new Array(4);
        report[0] = sizing;
        golfie = romeon[golfie];
        golfie = offset.bind(tangon)(golfie);
        offset = golfie.Text;
        golfie = {'style': null, 'variant': 'text-sm/medium', 'color': 'header-secondary'};
        sizing = yankee.description;
        golfie['style'] = sizing;
        golfie['children'] = kiloes;
        golfie = option.bind(tangon)(offset, golfie);
        report[1] = golfie;
        offset = _closure1_slot4;
        golfie = {};
        golfie['source'] = backup;
        yankee = yankee.image;
        golfie['style'] = yankee;
        golfie = option.bind(tangon)(offset, golfie);
        report[2] = golfie;
        yankee = _closure1_slot1;
        offset = 6;
        oscard = romeon[offset];
        golfie = yankee.bind(tangon)(oscard);
        oscard = {};
        oscard['text'] = foxtra;
        foxtra = romeon[offset];
        foxtra = yankee.bind(tangon)(foxtra);
        foxtra = foxtra.Sizes;
        foxtra = foxtra.MEDIUM;
        oscard['size'] = foxtra;
        offset = romeon[offset];
        offset = yankee.bind(tangon)(offset);
        offset = offset.Colors;
        offset = offset.BRAND;
        oscard['color'] = offset;
        oscard['onPress'] = verify;
        oscard = option.bind(tangon)(golfie, oscard);
        report[3] = oscard;
        entity['children'] = report;
        entity = zuuluu.bind(tangon)(michal, entity);
        return entity;
    };
    zuuluu['default'] = michal;
    return entity;
})();