// app/modules/nuf_channels/native/components/NUFChannelIllustration.tsx
export default (function(argFoo, argBar, argBaz, argCorge, _, argFred, argPlugh) {
    report = argBar;
    yankee = argBaz;
    zulu = argFred;
    oscar = argPlugh;
    var _closure1_slot0 = report;
    var _closure1_slot1 = yankee;
    var _closure1_slot2 = oscar;
    entity = global;
    options = entity.Object;
    golf = options.defineProperty;
    tango = {};
    entity = true;
    tango['value'] = entity;
    entity = '__esModule';
    entity = golf.bind(options)(zulu, entity, tango);
    entity = 0;
    tango = oscar[entity];
    entity = undefined;
    tango = yankee.bind(entity)(tango);
    var _closure1_slot3 = tango;
    tango = 1;
    golf = oscar[tango];
    tango = argCorge;
    tango = tango.bind(entity)(golf);
    var _closure1_slot4 = tango;
    tango = 2;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    golf = tango.View;
    var _closure1_slot5 = golf;
    tango = tango.Image;
    var _closure1_slot6 = tango;
    tango = 3;
    golf = oscar[tango];
    golf = report.bind(entity)(golf);
    golf = golf.jsx;
    var _closure1_slot7 = golf;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.jsxs;
    var _closure1_slot8 = tango;
    tango = 4;
    tango = oscar[tango];
    options = report.bind(entity)(tango);
    golf = options.createStyles;
    tango = {};
    verify = {'width': '100%', 'maxWidth': 275, 'position': 'relative', 'display': 'flex', 'justifyContent': 'center', 'alignItems': 'center', 'marginTop': 24, 'marginBottom': 24};
    tango['container'] = verify;
    verify = {'padding': 0, 'width': '100%'};
    tango['card'] = verify;
    verify = {'width': '90%', 'height': 12};
    offset = 5;
    romeo = oscar[offset];
    romeo = yankee.bind(entity)(romeo);
    romeo = romeo.radii;
    romeo = romeo.lg;
    verify['borderTopLeftRadius'] = romeo;
    romeo = oscar[offset];
    romeo = yankee.bind(entity)(romeo);
    romeo = romeo.radii;
    romeo = romeo.lg;
    verify['borderTopRightRadius'] = romeo;
    romeo = oscar[offset];
    romeo = yankee.bind(entity)(romeo);
    romeo = romeo.colors;
    romeo = romeo.BG_BASE_TERTIARY;
    verify['backgroundColor'] = romeo;
    tango['cardBackground'] = verify;
    verify = {'paddingVertical': 12, 'paddingHorizontal': 16, 'display': 'flex', 'alignItems': 'center', 'flexDirection': 'row', 'borderBottomColor': null, 'borderBottomWidth': 1};
    offset = oscar[offset];
    offset = yankee.bind(entity)(offset);
    offset = offset.colors;
    offset = offset.BORDER_SUBTLE;
    verify['borderBottomColor'] = offset;
    tango['header'] = verify;
    verify = {'height': 150, 'paddingVertical': 8, 'paddingHorizontal': 16, 'display': 'flex', 'justifyContent': 'flex-end', 'overflow': 'hidden'};
    tango['content'] = verify;
    verify = {'display': 'flex', 'paddingVertical': 8, 'flexDirection': 'row'};
    tango['message'] = verify;
    verify = {'width': 40, 'height': 40, 'marginRight': 12};
    tango['messageAvatar'] = verify;
    verify = {'display': 'flex', 'flex': 1};
    tango['messageContent'] = verify;
    verify = {'height': 25, 'width': 15};
    tango['starMedium'] = verify;
    verify = {'height': 15, 'width': 10};
    tango['starSmall'] = verify;
    verify = {'position': 'absolute', 'top': 5, 'left': 4294967268};
    tango['starGreen'] = verify;
    verify = {'position': 'absolute', 'top': 4294967281, 'left': 4294967286};
    tango['starBlue'] = verify;
    verify = {'position': 'absolute', 'bottom': 4294967278, 'right': 4294967274};
    tango['starPink'] = verify;
    verify = {'position': 'absolute', 'bottom': 4294967266, 'right': 4294967294};
    tango['starPurple'] = verify;
    tango = golf.bind(options)(tango);
    var _closure1_slot9 = tango;
    tango = {};
    golf = 'function NUFChannelIllustrationTsx1(){const{interpolate,messageListAnimation}=this.__closure;return{transform:[{translateY:interpolate(messageListAnimation.get(),[0,1],[50,0])}]};}';
    tango['code'] = golf;
    var _closure1_slot10 = tango;
    tango = 18;
    tango = oscar[tango];
    oscar = report.bind(entity)(tango);
    report = oscar.fileFinishedImporting;
    tango = 'modules/nuf_channels/native/components/NUFChannelIllustration.tsx';
    tango = report.bind(oscar)(tango);
    mike = function() { // Original name: NUFChannelIllustration
        entity = _closure1_slot9;
        tango = undefined;
        output = entity.bind(tango)();
        var _closure2_slot0 = output;
        report = _closure1_slot4;
        mike = report.useState;
        entity = new Array(0);
        zulu = mike.bind(report)(entity);
        mike = _closure1_slot3;
        entity = 2;
        mike = mike.bind(tango)(zulu, entity);
        zulu = 0;
        kilo = mike[zulu];
        var _closure2_slot1 = kilo;
        entity = 1;
        entity = mike[entity];
        var _closure2_slot2 = entity;
        vacuum = _closure1_slot0;
        sizing = _closure1_slot2;
        yankee = 9;
        entity = sizing[yankee];
        mike = vacuum.bind(tango)(entity);
        entity = mike.useSharedValue;
        golf = entity.bind(mike)(zulu);
        var _closure2_slot3 = golf;
        entity = sizing[yankee];
        mike = vacuum.bind(tango)(entity);
        entity = mike.useSharedValue;
        entity = entity.bind(mike)(zulu);
        var _closure2_slot4 = entity;
        options = report.useEffect;
        zulu = function() {
            mike = global;
            oscar = mike.setTimeout;
            report = undefined;
            tango = function() {
                zulu = _closure2_slot2;
                mike = undefined;
                entity = function(argFoo) {
                    entity = new Array(1);
                    foxtrot = argFoo;
                    romeo = 0;
                    backup = entity;
                    zulu = arraySpread(backup, foxtrot, romeo);
                    yankee = _closure1_slot0;
                    options = _closure1_slot2;
                    oscar = 6;
                    mike = options[oscar];
                    golf = undefined;
                    mike = yankee.bind(golf)(mike);
                    verify = mike.intl;
                    tango = verify.string;
                    mike = options[oscar];
                    mike = yankee.bind(golf)(mike);
                    mike = mike.t;
                    mike = mike.5alrl5;
                    tango = tango.bind(verify)(mike);
                    mike = {};
                    verify = options[oscar];
                    verify = yankee.bind(golf)(verify);
                    offset = verify.intl;
                    verify = offset.string;
                    oscar = options[oscar];
                    oscar = yankee.bind(golf)(oscar);
                    oscar = oscar.t;
                    oscar = oscar.9m/Hsb;
                    oscar = verify.bind(offset)(oscar);
                    mike['name'] = oscar;
                    oscar = _closure1_slot1;
                    report = 7;
                    report = options[report];
                    report = oscar.bind(golf)(report);
                    mike['avatar'] = report;
                    mike['message'] = tango;
                    entity[zulu] = mike;
                    mike = 1;
                    mike = zulu + mike;
                    return entity;
                };
                entity = zulu.bind(mike)(entity);
                return entity;
            };
            zulu = 500;
            zulu = oscar.bind(report)(tango, zulu);
            var _closure3_slot0 = zulu;
            tango = mike.setTimeout;
            zulu = function() {
                zulu = _closure2_slot2;
                mike = undefined;
                entity = function(argFoo) {
                    entity = new Array(1);
                    foxtrot = argFoo;
                    romeo = 0;
                    backup = entity;
                    zulu = arraySpread(backup, foxtrot, romeo);
                    yankee = _closure1_slot0;
                    options = _closure1_slot2;
                    oscar = 6;
                    mike = options[oscar];
                    golf = undefined;
                    mike = yankee.bind(golf)(mike);
                    verify = mike.intl;
                    tango = verify.string;
                    mike = options[oscar];
                    mike = yankee.bind(golf)(mike);
                    mike = mike.t;
                    mike = mike.5Oo+vb;
                    tango = tango.bind(verify)(mike);
                    mike = {};
                    verify = options[oscar];
                    verify = yankee.bind(golf)(verify);
                    offset = verify.intl;
                    verify = offset.string;
                    oscar = options[oscar];
                    oscar = yankee.bind(golf)(oscar);
                    oscar = oscar.t;
                    oscar = oscar.AW1kMz;
                    oscar = verify.bind(offset)(oscar);
                    mike['name'] = oscar;
                    oscar = _closure1_slot1;
                    report = 8;
                    report = options[report];
                    report = oscar.bind(golf)(report);
                    mike['avatar'] = report;
                    mike['message'] = tango;
                    entity[zulu] = mike;
                    mike = 1;
                    mike = zulu + mike;
                    return entity;
                };
                entity = zulu.bind(mike)(entity);
                return entity;
            };
            mike = 2000;
            mike = tango.bind(report)(zulu, mike);
            var _closure3_slot1 = mike;
            entity = function() {
                zulu = global;
                report = zulu.clearTimeout;
                tango = _closure3_slot0;
                entity = undefined;
                tango = report.bind(entity)(tango);
                zulu = zulu.clearTimeout;
                mike = _closure3_slot1;
                mike = zulu.bind(entity)(mike);
                return entity;
            };
            return entity;
        };
        mike = new Array(0);
        mike = options.bind(report)(zulu, mike);
        zulu = report.useEffect;
        mike = new Array(2);
        mike[0] = entity;
        mike[1] = kilo;
        entity = function() {
            _fun99440: for(var _fun99440_ip = 0; ; ) switch(_fun99440_ip) {
 0:
                mike = _closure2_slot1;
                zulu = mike.length;
                mike = 2;
                if(!(zulu >= mike)) { _fun99440_ip = 81; continue _fun99440 }
 19:
                zulu = _closure2_slot4;
                mike = zulu.set;
                report = _closure1_slot0;
                tango = _closure1_slot2;
                entity = 10;
                tango = tango[entity];
                entity = undefined;
                oscar = report.bind(entity)(tango);
                report = oscar.withTiming;
                tango = {};
                entity = 250;
                tango['duration'] = entity;
                entity = 1;
                entity = report.bind(oscar)(entity, tango);
                entity = mike.bind(zulu)(entity);
 81:
                entity = undefined;
                return entity;
            }
        };
        entity = zulu.bind(report)(entity, mike);
        zulu = report.useEffect;
        mike = new Array(2);
        mike[0] = golf;
        mike[1] = kilo;
        entity = function() {
            tango = _closure2_slot3;
            mike = tango.set;
            entity = 0;
            entity = mike.bind(tango)(entity);
            zulu = tango.set;
            report = _closure1_slot0;
            mike = _closure1_slot2;
            entity = 10;
            mike = mike[entity];
            entity = undefined;
            golf = report.bind(entity)(mike);
            oscar = golf.withTiming;
            report = {};
            mike = 200;
            report['duration'] = mike;
            mike = 1;
            mike = oscar.bind(golf)(mike, report);
            mike = zulu.bind(tango)(mike);
            return entity;
        };
        entity = zulu.bind(report)(entity, mike);
        entity = sizing[yankee];
        zulu = vacuum.bind(tango)(entity);
        mike = zulu.useAnimatedStyle;
        entity = function() { // Original name: T
            entity = {};
            zulu = {};
            report = _closure1_slot0;
            tango = _closure1_slot2;
            mike = 9;
            tango = tango[mike];
            mike = undefined;
            golf = report.bind(mike)(tango);
            oscar = golf.interpolate;
            tango = _closure2_slot3;
            mike = tango.get;
            report = mike.bind(tango)();
            tango = [0, 1];
            mike = [50, 0];
            mike = oscar.bind(golf)(report, tango, mike);
            zulu['translateY'] = mike;
            mike = new Array(1);
            mike[0] = zulu;
            entity['transform'] = mike;
            return entity;
        };
        report = {};
        options = sizing[yankee];
        options = vacuum.bind(tango)(options);
        options = options.interpolate;
        report['interpolate'] = options;
        report['messageListAnimation'] = golf;
        entity['__closure'] = report;
        report = 1240710065054.0;
        entity['__workletHash'] = report;
        report = _closure1_slot10;
        entity['__initData'] = report;
        backup = mike.bind(zulu)(entity);
        zulu = _closure1_slot8;
        mike = _closure1_slot5;
        entity = {};
        report = output.container;
        entity['style'] = report;
        offset = _closure1_slot7;
        golf = _closure1_slot6;
        report = {};
        romeo = _closure1_slot1;
        oscar = 11;
        oscar = sizing[oscar];
        oscar = romeo.bind(tango)(oscar);
        report['source'] = oscar;
        options = output.starSmall;
        oscar = new Array(2);
        oscar[0] = options;
        options = output.starBlue;
        oscar[1] = options;
        report['style'] = oscar;
        oscar = offset.bind(tango)(golf, report);
        report = new Array(6);
        report[0] = oscar;
        oscar = {};
        options = 12;
        options = sizing[options];
        options = romeo.bind(tango)(options);
        oscar['source'] = options;
        verify = output.starMedium;
        options = new Array(2);
        options[0] = verify;
        verify = output.starPink;
        options[1] = verify;
        oscar['style'] = options;
        oscar = offset.bind(tango)(golf, oscar);
        report[1] = oscar;
        oscar = {};
        options = 13;
        options = sizing[options];
        options = romeo.bind(tango)(options);
        oscar['source'] = options;
        verify = output.starMedium;
        options = new Array(2);
        options[0] = verify;
        verify = output.starGreen;
        options[1] = verify;
        oscar['style'] = options;
        oscar = offset.bind(tango)(golf, oscar);
        report[2] = oscar;
        oscar = {};
        options = 14;
        options = sizing[options];
        options = romeo.bind(tango)(options);
        oscar['source'] = options;
        verify = output.starSmall;
        options = new Array(2);
        options[0] = verify;
        verify = output.starPurple;
        options[1] = verify;
        oscar['style'] = options;
        oscar = offset.bind(tango)(golf, oscar);
        report[3] = oscar;
        oscar = {};
        golf = output.cardBackground;
        oscar['style'] = golf;
        oscar = offset.bind(tango)(mike, oscar);
        report[4] = oscar;
        oscar = 15;
        oscar = sizing[oscar];
        oscar = vacuum.bind(tango)(oscar);
        golf = oscar.Card;
        oscar = {'style': null, 'shadow': 'low', 'border': 'subtle'};
        options = output.card;
        oscar['style'] = options;
        options = {};
        verify = output.header;
        options['style'] = verify;
        verify = 16;
        verify = sizing[verify];
        verify = vacuum.bind(tango)(verify);
        result = verify.TextIcon;
        verify = {};
        echo = 'sm';
        verify['size'] = echo;
        result = offset.bind(tango)(result, verify);
        verify = new Array(2);
        verify[0] = result;
        result = 17;
        result = sizing[result];
        result = vacuum.bind(tango)(result);
        echo = result.Text;
        result = {};
        update = 'text-md/bold';
        result['variant'] = update;
        update = 6;
        source = sizing[update];
        source = vacuum.bind(tango)(source);
        control = source.intl;
        source = control.string;
        update = sizing[update];
        update = vacuum.bind(tango)(update);
        update = update.t;
        update = update.aLOLr6;
        source = source.bind(control)(update);
        update = [' '];
        update[1] = source;
        result['children'] = update;
        result = zulu.bind(tango)(echo, result);
        verify[1] = result;
        options['children'] = verify;
        verify = zulu.bind(tango)(mike, options);
        options = new Array(2);
        options[0] = verify;
        verify = {};
        output = output.content;
        verify['style'] = output;
        yankee = sizing[yankee];
        yankee = romeo.bind(tango)(yankee);
        romeo = yankee.View;
        yankee = {};
        yankee['style'] = backup;
        backup = kilo.map;
        foxtrot = function(argFoo) {
            entity = argFoo;
            report = _closure1_slot8;
            tango = _closure1_slot5;
            zulu = {};
            verify = _closure2_slot0;
            mike = verify.message;
            zulu['style'] = mike;
            yankee = _closure1_slot7;
            golf = _closure1_slot6;
            oscar = {};
            mike = entity.avatar;
            oscar['source'] = mike;
            mike = verify.messageAvatar;
            oscar['style'] = mike;
            mike = undefined;
            golf = yankee.bind(mike)(golf, oscar);
            oscar = new Array(2);
            oscar[0] = golf;
            golf = {};
            verify = verify.messageContent;
            golf['style'] = verify;
            offset = _closure1_slot0;
            romeo = _closure1_slot2;
            verify = 17;
            options = romeo[verify];
            options = offset.bind(mike)(options);
            foxtrot = options.Text;
            options = {};
            backup = 'text-md/semibold';
            options['variant'] = backup;
            backup = entity.name;
            options['children'] = backup;
            foxtrot = yankee.bind(mike)(foxtrot, options);
            options = new Array(2);
            options[0] = foxtrot;
            verify = romeo[verify];
            verify = offset.bind(mike)(verify);
            offset = verify.Text;
            verify = {};
            romeo = 'text-md/medium';
            verify['variant'] = romeo;
            romeo = entity.message;
            verify['children'] = romeo;
            verify = yankee.bind(mike)(offset, verify);
            options[1] = verify;
            golf['children'] = options;
            golf = report.bind(mike)(tango, golf);
            oscar[1] = golf;
            zulu['children'] = oscar;
            entity = entity.message;
            entity = report.bind(mike)(tango, zulu, entity);
            return entity;
        };
        foxtrot = backup.bind(kilo)(foxtrot);
        yankee['children'] = foxtrot;
        yankee = offset.bind(tango)(romeo, yankee);
        verify['children'] = yankee;
        verify = offset.bind(tango)(mike, verify);
        options[1] = verify;
        oscar['children'] = options;
        oscar = zulu.bind(tango)(golf, oscar);
        report[5] = oscar;
        entity['children'] = report;
        entity = zulu.bind(tango)(mike, entity);
        return entity;
    };
    zulu['default'] = mike;
    return entity;
})();