// app/modules/nuf_channels/native/components/NUFChannelIllustration.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    report = argBar;
    yankee = argBaz;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    var _closure1_slot1 = yankee;
    var _closure1_slot2 = oscard;
    entity = global;
    option = entity.Object;
    golfie = option.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(option)(zuuluu, entity, tangon);
    entity = 0;
    tangon = oscard[entity];
    entity = undefined;
    tangon = yankee.bind(entity)(tangon);
    var _closure1_slot3 = tangon;
    tangon = 1;
    golfie = oscard[tangon];
    tangon = argCor;
    tangon = tangon.bind(entity)(golfie);
    var _closure1_slot4 = tangon;
    tangon = 2;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    golfie = tangon.View;
    var _closure1_slot5 = golfie;
    tangon = tangon.Image;
    var _closure1_slot6 = tangon;
    tangon = 3;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    golfie = tangon.jsx;
    var _closure1_slot7 = golfie;
    tangon = tangon.jsxs;
    var _closure1_slot8 = tangon;
    tangon = 4;
    tangon = oscard[tangon];
    option = report.bind(entity)(tangon);
    golfie = option.createStyles;
    tangon = {};
    verify = {'width': '100%', 'maxWidth': 275, 'position': 'relative', 'display': 'flex', 'justifyContent': 'center', 'alignItems': 'center', 'marginTop': 24, 'marginBottom': 24};
    tangon['container'] = verify;
    verify = {'padding': 0, 'width': '100%'};
    tangon['card'] = verify;
    verify = {'width': '90%', 'height': 12};
    offset = 5;
    romeon = oscard[offset];
    romeon = yankee.bind(entity)(romeon);
    romeon = romeon.radii;
    romeon = romeon.lg;
    verify['borderTopLeftRadius'] = romeon;
    romeon = oscard[offset];
    romeon = yankee.bind(entity)(romeon);
    romeon = romeon.radii;
    romeon = romeon.lg;
    verify['borderTopRightRadius'] = romeon;
    romeon = oscard[offset];
    romeon = yankee.bind(entity)(romeon);
    romeon = romeon.colors;
    romeon = romeon.BG_BASE_TERTIARY;
    verify['backgroundColor'] = romeon;
    tangon['cardBackground'] = verify;
    verify = {'paddingVertical': 12, 'paddingHorizontal': 16, 'display': 'flex', 'alignItems': 'center', 'flexDirection': 'row', 'borderBottomColor': null, 'borderBottomWidth': 1};
    offset = oscard[offset];
    offset = yankee.bind(entity)(offset);
    offset = offset.colors;
    offset = offset.BORDER_SUBTLE;
    verify['borderBottomColor'] = offset;
    tangon['header'] = verify;
    verify = {'height': 150, 'paddingVertical': 8, 'paddingHorizontal': 16, 'display': 'flex', 'justifyContent': 'flex-end', 'overflow': 'hidden'};
    tangon['content'] = verify;
    verify = {'display': 'flex', 'paddingVertical': 8, 'flexDirection': 'row'};
    tangon['message'] = verify;
    verify = {'width': 40, 'height': 40, 'marginRight': 12};
    tangon['messageAvatar'] = verify;
    verify = {'display': 'flex', 'flex': 1};
    tangon['messageContent'] = verify;
    verify = {'height': 25, 'width': 15};
    tangon['starMedium'] = verify;
    verify = {'height': 15, 'width': 10};
    tangon['starSmall'] = verify;
    verify = {'position': 'absolute', 'top': 5, 'left': 4294967268};
    tangon['starGreen'] = verify;
    verify = {'position': 'absolute', 'top': 4294967281, 'left': 4294967286};
    tangon['starBlue'] = verify;
    verify = {'position': 'absolute', 'bottom': 4294967278, 'right': 4294967274};
    tangon['starPink'] = verify;
    verify = {'position': 'absolute', 'bottom': 4294967266, 'right': 4294967294};
    tangon['starPurple'] = verify;
    tangon = golfie.bind(option)(tangon);
    var _closure1_slot9 = tangon;
    tangon = {};
    golfie = 'function NUFChannelIllustrationTsx1(){const{interpolate,messageListAnimation}=this.__closure;return{transform:[{translateY:interpolate(messageListAnimation.get(),[0,1],[50,0])}]};}';
    tangon['code'] = golfie;
    var _closure1_slot10 = tangon;
    tangon = 18;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/nuf_channels/native/components/NUFChannelIllustration.tsx';
    tangon = report.bind(oscard)(tangon);
    michal = function() { // Original name: NUFChannelIllustration
        entity = _closure1_slot9;
        tangon = undefined;
        output = entity.bind(tangon)();
        var _closure2_slot0 = output;
        report = _closure1_slot4;
        michal = report.useState;
        entity = new Array(0);
        zuuluu = michal.bind(report)(entity);
        michal = _closure1_slot3;
        entity = 2;
        michal = michal.bind(tangon)(zuuluu, entity);
        zuuluu = 0;
        kiloes = michal[zuuluu];
        var _closure2_slot1 = kiloes;
        entity = 1;
        entity = michal[entity];
        var _closure2_slot2 = entity;
        vacuum = _closure1_slot0;
        sizing = _closure1_slot2;
        yankee = 9;
        entity = sizing[yankee];
        michal = vacuum.bind(tangon)(entity);
        entity = michal.useSharedValue;
        golfie = entity.bind(michal)(zuuluu);
        var _closure2_slot3 = golfie;
        entity = sizing[yankee];
        michal = vacuum.bind(tangon)(entity);
        entity = michal.useSharedValue;
        entity = entity.bind(michal)(zuuluu);
        var _closure2_slot4 = entity;
        option = report.useEffect;
        zuuluu = function() {
            michal = global;
            oscard = michal.setTimeout;
            report = undefined;
            tangon = function() {
                zuuluu = _closure2_slot2;
                michal = undefined;
                entity = function(argFoo) {
                    entity = new Array(1);
                    foxtra = argFoo;
                    romeon = 0;
                    backup = entity;
                    zuuluu = arraySpread(backup, foxtra, romeon);
                    yankee = _closure1_slot0;
                    option = _closure1_slot2;
                    oscard = 6;
                    michal = option[oscard];
                    golfie = undefined;
                    michal = yankee.bind(golfie)(michal);
                    verify = michal.intl;
                    tangon = verify.string;
                    michal = option[oscard];
                    michal = yankee.bind(golfie)(michal);
                    michal = michal.t;
                    michal = michal.5alrl5;
                    tangon = tangon.bind(verify)(michal);
                    michal = {};
                    verify = option[oscard];
                    verify = yankee.bind(golfie)(verify);
                    offset = verify.intl;
                    verify = offset.string;
                    oscard = option[oscard];
                    oscard = yankee.bind(golfie)(oscard);
                    oscard = oscard.t;
                    oscard = oscard.9m/Hsb;
                    oscard = verify.bind(offset)(oscard);
                    michal['name'] = oscard;
                    oscard = _closure1_slot1;
                    report = 7;
                    report = option[report];
                    report = oscard.bind(golfie)(report);
                    michal['avatar'] = report;
                    michal['message'] = tangon;
                    entity[zuuluu] = michal;
                    michal = 1;
                    michal = zuuluu + michal;
                    return entity;
                };
                entity = zuuluu.bind(michal)(entity);
                return entity;
            };
            zuuluu = 500;
            zuuluu = oscard.bind(report)(tangon, zuuluu);
            var _closure3_slot0 = zuuluu;
            tangon = michal.setTimeout;
            zuuluu = function() {
                zuuluu = _closure2_slot2;
                michal = undefined;
                entity = function(argFoo) {
                    entity = new Array(1);
                    foxtra = argFoo;
                    romeon = 0;
                    backup = entity;
                    zuuluu = arraySpread(backup, foxtra, romeon);
                    yankee = _closure1_slot0;
                    option = _closure1_slot2;
                    oscard = 6;
                    michal = option[oscard];
                    golfie = undefined;
                    michal = yankee.bind(golfie)(michal);
                    verify = michal.intl;
                    tangon = verify.string;
                    michal = option[oscard];
                    michal = yankee.bind(golfie)(michal);
                    michal = michal.t;
                    michal = michal.5Oo+vb;
                    tangon = tangon.bind(verify)(michal);
                    michal = {};
                    verify = option[oscard];
                    verify = yankee.bind(golfie)(verify);
                    offset = verify.intl;
                    verify = offset.string;
                    oscard = option[oscard];
                    oscard = yankee.bind(golfie)(oscard);
                    oscard = oscard.t;
                    oscard = oscard.AW1kMz;
                    oscard = verify.bind(offset)(oscard);
                    michal['name'] = oscard;
                    oscard = _closure1_slot1;
                    report = 8;
                    report = option[report];
                    report = oscard.bind(golfie)(report);
                    michal['avatar'] = report;
                    michal['message'] = tangon;
                    entity[zuuluu] = michal;
                    michal = 1;
                    michal = zuuluu + michal;
                    return entity;
                };
                entity = zuuluu.bind(michal)(entity);
                return entity;
            };
            michal = 2000;
            michal = tangon.bind(report)(zuuluu, michal);
            var _closure3_slot1 = michal;
            entity = function() {
                zuuluu = global;
                report = zuuluu.clearTimeout;
                tangon = _closure3_slot0;
                entity = undefined;
                tangon = report.bind(entity)(tangon);
                zuuluu = zuuluu.clearTimeout;
                michal = _closure3_slot1;
                michal = zuuluu.bind(entity)(michal);
                return entity;
            };
            return entity;
        };
        michal = new Array(0);
        michal = option.bind(report)(zuuluu, michal);
        zuuluu = report.useEffect;
        michal = new Array(2);
        michal[0] = entity;
        michal[1] = kiloes;
        entity = function() {
            _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
                michal = _closure2_slot1;
                zuuluu = michal.length;
                michal = 2;
                if(!(zuuluu >= michal)) { _fun00002_ip = 81; continue _fun00001 }
 19:
                zuuluu = _closure2_slot4;
                michal = zuuluu.set;
                report = _closure1_slot0;
                tangon = _closure1_slot2;
                entity = 10;
                tangon = tangon[entity];
                entity = undefined;
                oscard = report.bind(entity)(tangon);
                report = oscard.withTiming;
                tangon = {};
                entity = 250;
                tangon['duration'] = entity;
                entity = 1;
                entity = report.bind(oscard)(entity, tangon);
                entity = michal.bind(zuuluu)(entity);
 81:
                entity = undefined;
                return entity;
            }
        };
        entity = zuuluu.bind(report)(entity, michal);
        zuuluu = report.useEffect;
        michal = new Array(2);
        michal[0] = golfie;
        michal[1] = kiloes;
        entity = function() {
            tangon = _closure2_slot3;
            michal = tangon.set;
            entity = 0;
            entity = michal.bind(tangon)(entity);
            zuuluu = tangon.set;
            report = _closure1_slot0;
            michal = _closure1_slot2;
            entity = 10;
            michal = michal[entity];
            entity = undefined;
            golfie = report.bind(entity)(michal);
            oscard = golfie.withTiming;
            report = {};
            michal = 200;
            report['duration'] = michal;
            michal = 1;
            michal = oscard.bind(golfie)(michal, report);
            michal = zuuluu.bind(tangon)(michal);
            return entity;
        };
        entity = zuuluu.bind(report)(entity, michal);
        entity = sizing[yankee];
        zuuluu = vacuum.bind(tangon)(entity);
        michal = zuuluu.useAnimatedStyle;
        entity = function() { // Original name: T
            entity = {};
            zuuluu = {};
            report = _closure1_slot0;
            tangon = _closure1_slot2;
            michal = 9;
            tangon = tangon[michal];
            michal = undefined;
            golfie = report.bind(michal)(tangon);
            oscard = golfie.interpolate;
            tangon = _closure2_slot3;
            michal = tangon.get;
            report = michal.bind(tangon)();
            tangon = [0, 1];
            michal = [50, 0];
            michal = oscard.bind(golfie)(report, tangon, michal);
            zuuluu['translateY'] = michal;
            michal = new Array(1);
            michal[0] = zuuluu;
            entity['transform'] = michal;
            return entity;
        };
        report = {};
        option = sizing[yankee];
        option = vacuum.bind(tangon)(option);
        option = option.interpolate;
        report['interpolate'] = option;
        report['messageListAnimation'] = golfie;
        entity['__closure'] = report;
        report = 1240710065054.0;
        entity['__workletHash'] = report;
        report = _closure1_slot10;
        entity['__initData'] = report;
        backup = michal.bind(zuuluu)(entity);
        zuuluu = _closure1_slot8;
        michal = _closure1_slot5;
        entity = {};
        report = output.container;
        entity['style'] = report;
        offset = _closure1_slot7;
        golfie = _closure1_slot6;
        report = {};
        romeon = _closure1_slot1;
        oscard = 11;
        oscard = sizing[oscard];
        oscard = romeon.bind(tangon)(oscard);
        report['source'] = oscard;
        option = output.starSmall;
        oscard = new Array(2);
        oscard[0] = option;
        option = output.starBlue;
        oscard[1] = option;
        report['style'] = oscard;
        oscard = offset.bind(tangon)(golfie, report);
        report = new Array(6);
        report[0] = oscard;
        oscard = {};
        option = 12;
        option = sizing[option];
        option = romeon.bind(tangon)(option);
        oscard['source'] = option;
        verify = output.starMedium;
        option = new Array(2);
        option[0] = verify;
        verify = output.starPink;
        option[1] = verify;
        oscard['style'] = option;
        oscard = offset.bind(tangon)(golfie, oscard);
        report[1] = oscard;
        oscard = {};
        option = 13;
        option = sizing[option];
        option = romeon.bind(tangon)(option);
        oscard['source'] = option;
        verify = output.starMedium;
        option = new Array(2);
        option[0] = verify;
        verify = output.starGreen;
        option[1] = verify;
        oscard['style'] = option;
        oscard = offset.bind(tangon)(golfie, oscard);
        report[2] = oscard;
        oscard = {};
        option = 14;
        option = sizing[option];
        option = romeon.bind(tangon)(option);
        oscard['source'] = option;
        verify = output.starSmall;
        option = new Array(2);
        option[0] = verify;
        verify = output.starPurple;
        option[1] = verify;
        oscard['style'] = option;
        oscard = offset.bind(tangon)(golfie, oscard);
        report[3] = oscard;
        oscard = {};
        golfie = output.cardBackground;
        oscard['style'] = golfie;
        oscard = offset.bind(tangon)(michal, oscard);
        report[4] = oscard;
        oscard = 15;
        oscard = sizing[oscard];
        oscard = vacuum.bind(tangon)(oscard);
        golfie = oscard.Card;
        oscard = {'style': null, 'shadow': 'low', 'border': 'subtle'};
        option = output.card;
        oscard['style'] = option;
        option = {};
        verify = output.header;
        option['style'] = verify;
        verify = 16;
        verify = sizing[verify];
        verify = vacuum.bind(tangon)(verify);
        result = verify.TextIcon;
        verify = {};
        echoed = 'sm';
        verify['size'] = echoed;
        result = offset.bind(tangon)(result, verify);
        verify = new Array(2);
        verify[0] = result;
        result = 17;
        result = sizing[result];
        result = vacuum.bind(tangon)(result);
        echoed = result.Text;
        result = {};
        update = 'text-md/bold';
        result['variant'] = update;
        update = 6;
        source = sizing[update];
        source = vacuum.bind(tangon)(source);
        ctrled = source.intl;
        source = ctrled.string;
        update = sizing[update];
        update = vacuum.bind(tangon)(update);
        update = update.t;
        update = update.aLOLr6;
        source = source.bind(ctrled)(update);
        update = [' '];
        update[1] = source;
        result['children'] = update;
        result = zuuluu.bind(tangon)(echoed, result);
        verify[1] = result;
        option['children'] = verify;
        verify = zuuluu.bind(tangon)(michal, option);
        option = new Array(2);
        option[0] = verify;
        verify = {};
        output = output.content;
        verify['style'] = output;
        yankee = sizing[yankee];
        yankee = romeon.bind(tangon)(yankee);
        romeon = yankee.View;
        yankee = {};
        yankee['style'] = backup;
        backup = kiloes.map;
        foxtra = function(argFoo) {
            entity = argFoo;
            report = _closure1_slot8;
            tangon = _closure1_slot5;
            zuuluu = {};
            verify = _closure2_slot0;
            michal = verify.message;
            zuuluu['style'] = michal;
            yankee = _closure1_slot7;
            golfie = _closure1_slot6;
            oscard = {};
            michal = entity.avatar;
            oscard['source'] = michal;
            michal = verify.messageAvatar;
            oscard['style'] = michal;
            michal = undefined;
            golfie = yankee.bind(michal)(golfie, oscard);
            oscard = new Array(2);
            oscard[0] = golfie;
            golfie = {};
            verify = verify.messageContent;
            golfie['style'] = verify;
            offset = _closure1_slot0;
            romeon = _closure1_slot2;
            verify = 17;
            option = romeon[verify];
            option = offset.bind(michal)(option);
            foxtra = option.Text;
            option = {};
            backup = 'text-md/semibold';
            option['variant'] = backup;
            backup = entity.name;
            option['children'] = backup;
            foxtra = yankee.bind(michal)(foxtra, option);
            option = new Array(2);
            option[0] = foxtra;
            verify = romeon[verify];
            verify = offset.bind(michal)(verify);
            offset = verify.Text;
            verify = {};
            romeon = 'text-md/medium';
            verify['variant'] = romeon;
            romeon = entity.message;
            verify['children'] = romeon;
            verify = yankee.bind(michal)(offset, verify);
            option[1] = verify;
            golfie['children'] = option;
            golfie = report.bind(michal)(tangon, golfie);
            oscard[1] = golfie;
            zuuluu['children'] = oscard;
            entity = entity.message;
            entity = report.bind(michal)(tangon, zuuluu, entity);
            return entity;
        };
        foxtra = backup.bind(kiloes)(foxtra);
        yankee['children'] = foxtra;
        yankee = offset.bind(tangon)(romeon, yankee);
        verify['children'] = yankee;
        verify = offset.bind(tangon)(michal, verify);
        option[1] = verify;
        oscard['children'] = option;
        oscard = zuuluu.bind(tangon)(golfie, oscard);
        report[5] = oscard;
        entity['children'] = report;
        entity = zuuluu.bind(tangon)(michal, entity);
        return entity;
    };
    zuuluu['default'] = michal;
    return entity;
})();