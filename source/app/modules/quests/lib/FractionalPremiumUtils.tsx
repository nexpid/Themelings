// app/modules/quests/lib/FractionalPremiumUtils.tsx
export default (function(argFoo, argBar, argBaz, _, __, argFre, argPlu) {
    oscard = argBar;
    zuuluu = argFre;
    report = argPlu;
    var _closure1_slot0 = oscard;
    entity = argBaz;
    var _closure1_slot1 = entity;
    var _closure1_slot2 = report;
    entity = global;
    option = entity.Object;
    golfie = option.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(option)(zuuluu, entity, tangon);
    tangon = function(argFoo) { // Original name: getFractionalPremiumQuestRewards
        entity = argFoo;
        entity = entity.rewardsConfig;
        zuuluu = entity.rewards;
        michal = zuuluu.filter;
        entity = function(argFoo) {
            entity = argFoo;
            michal = entity.type;
            tangon = _closure1_slot0;
            zuuluu = _closure1_slot2;
            entity = 2;
            zuuluu = zuuluu[entity];
            entity = undefined;
            entity = tangon.bind(entity)(zuuluu);
            entity = entity.QuestRewardTypes;
            entity = entity.FRACTIONAL_PREMIUM;
            entity = michal === entity;
            return entity;
        };
        entity = michal.bind(zuuluu)(entity);
        return entity;
    };
    var _closure1_slot3 = tangon;
    entity = 5;
    report = report[entity];
    entity = undefined;
    golfie = oscard.bind(entity)(report);
    oscard = golfie.fileFinishedImporting;
    report = 'modules/quests/lib/FractionalPremiumUtils.tsx';
    report = oscard.bind(golfie)(report);
    report = function(argFoo) {
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            golfie = argFoo;
            tangon = _closure1_slot0;
            entity = _closure1_slot2;
            zuuluu = 0;
            entity = entity[zuuluu];
            option = undefined;
            report = tangon.bind(option)(entity);
            tangon = report.getFractionalPremiumUnitsHoursFromSkuIds;
            oscard = golfie.map;
            entity = function(argFoo) {
                entity = argFoo;
                entity = entity.skuId;
                return entity;
            };
            entity = oscard.bind(golfie)(entity);
            golfie = tangon.bind(report)(entity);
            oscard = 24;
            entity = golfie % oscard;
            if(!(entity !== zuuluu)) { _fun00002_ip = 133; continue _fun00001 }
 66:
            zuuluu = _closure1_slot0;
            verify = _closure1_slot2;
            entity = 1;
            tangon = verify[entity];
            tangon = zuuluu.bind(option)(tangon);
            report = tangon.intl;
            tangon = report.formatToPlainString;
            entity = verify[entity];
            entity = zuuluu.bind(option)(entity);
            entity = entity.t;
            zuuluu = entity.J9Lu4u;
            entity = {};
            entity['hours'] = golfie;
            entity = tangon.bind(report)(zuuluu, entity);
            _fun00002_ip = 202; continue _fun00001;
 133:
            zuuluu = _closure1_slot0;
            verify = _closure1_slot2;
            michal = 1;
            tangon = verify[michal];
            tangon = zuuluu.bind(option)(tangon);
            report = tangon.intl;
            tangon = report.formatToPlainString;
            michal = verify[michal];
            michal = zuuluu.bind(option)(michal);
            michal = michal.t;
            zuuluu = michal.Cz1G9/;
            michal = {};
            oscard = golfie / oscard;
            michal['days'] = oscard;
            entity = tangon.bind(report)(zuuluu, michal);
 202:
            return entity;
        }
    };
    zuuluu['getDurationStringOfFractionalPremium'] = report;
    zuuluu['getFractionalPremiumQuestRewards'] = tangon;
    michal = function(argFoo) {
        zuuluu = _closure1_slot3;
        verify = undefined;
        entity = argFoo;
        tangon = zuuluu.bind(verify)(entity);
        zuuluu = tangon.flatMap;
        entity = function(argFoo) {
            entity = argFoo;
            michal = global;
            tangon = michal.Array;
            zuuluu = entity.quantity;
            michal = undefined;
            zuuluu = tangon.bind(michal)(zuuluu);
            michal = zuuluu.fill;
            entity = entity.skuId;
            entity = michal.bind(zuuluu)(entity);
            return entity;
        };
        tangon = zuuluu.bind(tangon)(entity);
        oscard = _closure1_slot0;
        offset = _closure1_slot2;
        golfie = 0;
        entity = offset[golfie];
        zuuluu = oscard.bind(verify)(entity);
        entity = zuuluu.getFractionalPremiumUnitsHoursFromSkuIds;
        yankee = entity.bind(zuuluu)(tangon);
        option = {};
        entity = 1;
        zuuluu = offset[entity];
        zuuluu = oscard.bind(verify)(zuuluu);
        zuuluu = zuuluu.t;
        zuuluu = zuuluu.fYmir6;
        option['days'] = zuuluu;
        zuuluu = offset[entity];
        zuuluu = oscard.bind(verify)(zuuluu);
        zuuluu = zuuluu.t;
        zuuluu = zuuluu.C3RO+v;
        option['hours'] = zuuluu;
        zuuluu = offset[entity];
        zuuluu = oscard.bind(verify)(zuuluu);
        zuuluu = zuuluu.t;
        zuuluu = zuuluu.r77oHR;
        option['minutes'] = zuuluu;
        report = 3;
        zuuluu = offset[report];
        tangon = oscard.bind(verify)(zuuluu);
        zuuluu = tangon.diffAsUnits;
        romeon = _closure1_slot1;
        michal = 4;
        michal = offset[michal];
        michal = romeon.bind(verify)(michal);
        michal = michal.Millis;
        michal = michal.HOUR;
        michal = yankee * michal;
        golfie = zuuluu.bind(tangon)(golfie, michal);
        michal = offset[entity];
        michal = oscard.bind(verify)(michal);
        tangon = michal.intl;
        zuuluu = tangon.formatToPlainString;
        entity = offset[entity];
        entity = oscard.bind(verify)(entity);
        entity = entity.t;
        michal = entity.4SqnVF;
        entity = {};
        report = offset[report];
        oscard = oscard.bind(verify)(report);
        report = oscard.unitsAsStrings;
        report = report.bind(oscard)(golfie, option);
        entity['time'] = report;
        entity = zuuluu.bind(tangon)(michal, entity);
        return entity;
    };
    zuuluu['getFractionalPremiumQuestRewardName'] = michal;
    return entity;
})();