// app/modules/quests/experiments/QuestsClientMonitoringExperiment.tsx
export default (function(argFoo, argBar, _, __, ___, argFre, argPlu) {
    report = argBar;
    zuuluu = argFre;
    oscard = argPlu;
    entity = global;
    option = entity.Object;
    golfie = option.defineProperty;
    tangon = {};
    foxtra = true;
    tangon['value'] = foxtra;
    entity = '__esModule';
    entity = golfie.bind(option)(zuuluu, entity, tangon);
    entity = 0;
    tangon = oscard[entity];
    entity = undefined;
    verify = report.bind(entity)(tangon);
    option = verify.createExperiment;
    golfie = {'id': '2024-03_quests_client_monitoring', 'kind': 'user', 'label': 'Quests client monitoring experiment'};
    tangon = {};
    yankee = false;
    tangon['enabled'] = yankee;
    golfie['defaultConfig'] = tangon;
    tangon = {'id': 0, 'label': 'disabled'};
    offset = {};
    offset['enabled'] = yankee;
    tangon['config'] = offset;
    offset = new Array(2);
    offset[0] = tangon;
    yankee = {'id': 1, 'label': 'enabled'};
    tangon = 1;
    romeon = {};
    romeon['enabled'] = foxtra;
    yankee['config'] = romeon;
    offset[1] = yankee;
    golfie['treatments'] = offset;
    golfie = option.bind(verify)(golfie);
    var _closure1_slot0 = golfie;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/quests/experiments/QuestsClientMonitoringExperiment.tsx';
    tangon = report.bind(oscard)(tangon);
    michal = function(argFoo) {
        tangon = _closure1_slot0;
        zuuluu = tangon.getCurrentConfig;
        michal = {};
        entity = argFoo;
        michal['location'] = entity;
        entity = {};
        report = false;
        entity['autoTrackExposure'] = report;
        entity = zuuluu.bind(tangon)(michal, entity);
        entity = entity.enabled;
        return entity;
    };
    zuuluu['isEligibleForQuestsClientMonitoring'] = michal;
    return entity;
})();