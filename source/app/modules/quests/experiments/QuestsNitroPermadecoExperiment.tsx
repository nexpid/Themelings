// app/modules/quests/experiments/QuestsNitroPermadecoExperiment.tsx
export default (function(_, argBar, __, ___, ____, argFred, argPlugh) {
    report = argBar;
    zulu = argFred;
    oscar = argPlugh;
    entity = global;
    options = entity.Object;
    golf = options.defineProperty;
    tango = {};
    yankee = true;
    tango['value'] = yankee;
    entity = '__esModule';
    entity = golf.bind(options)(zulu, entity, tango);
    entity = 0;
    tango = oscar[entity];
    entity = undefined;
    tango = report.bind(entity)(tango);
    verify = tango.ExperimentBuckets;
    tango = 1;
    tango = oscar[tango];
    options = report.bind(entity)(tango);
    golf = options.createExperiment;
    tango = {'kind': 'user', 'id': '2024-12_quests_nitro_permadecos', 'label': 'Quests Nitro Permadecos'};
    offset = {};
    romeo = false;
    offset['enabled'] = romeo;
    tango['defaultConfig'] = offset;
    offset = {};
    verify = verify.TREATMENT_1;
    offset['id'] = verify;
    verify = 'Enabled';
    offset['label'] = verify;
    verify = {};
    verify['enabled'] = yankee;
    offset['config'] = verify;
    verify = new Array(1);
    verify[0] = offset;
    tango['treatments'] = verify;
    tango = golf.bind(options)(tango);
    var _closure1_slot0 = tango;
    tango = 2;
    tango = oscar[tango];
    oscar = report.bind(entity)(tango);
    report = oscar.fileFinishedImporting;
    tango = 'modules/quests/experiments/QuestsNitroPermadecoExperiment.tsx';
    tango = report.bind(oscar)(tango);
    mike = function() { // Original name: isQuestsNitroPermadecoExperimentEnabled
        tango = _closure1_slot0;
        zulu = tango.getCurrentConfig;
        mike = {};
        entity = 'quest_nitro_permadecos';
        mike['location'] = entity;
        entity = {};
        report = false;
        entity['autoTrackExposure'] = report;
        entity = zulu.bind(tango)(mike, entity);
        entity = entity.enabled;
        return entity;
    };
    zulu['isQuestsNitroPermadecoExperimentEnabled'] = mike;
    return entity;
})();