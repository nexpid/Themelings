// app/modules/quests/native/QuestContextMenu.tsx
export default (function(argFoo, argBar, argBaz, argCorge, _, argFred, argPlugh) {
    report = argBar;
    options = argBaz;
    zulu = argFred;
    oscar = argPlugh;
    var _closure1_slot0 = report;
    var _closure1_slot1 = options;
    var _closure1_slot2 = oscar;
    entity = global;
    verify = entity.Object;
    golf = verify.defineProperty;
    tango = {};
    entity = true;
    tango['value'] = entity;
    entity = '__esModule';
    entity = golf.bind(verify)(zulu, entity, tango);
    entity = 0;
    golf = oscar[entity];
    tango = argCorge;
    entity = undefined;
    golf = tango.bind(entity)(golf);
    tango = 1;
    tango = oscar[tango];
    tango = options.bind(entity)(tango);
    var _closure1_slot3 = tango;
    tango = 2;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.jsx;
    var _closure1_slot4 = tango;
    tango = golf.memo;
    mike = function(argFoo) {
        _fun96550: for(var _fun96550_ip = 0; ; ) switch(_fun96550_ip) {
 0:
            entity = argFoo;
            mike = entity.quest;
            var _closure2_slot0 = mike;
            options = entity.showShareLink;
            tango = undefined;
            if(!(options === tango)) { _fun96550_ip = 29; continue _fun96550 }
 27:
            options = false;
 29:
            var _closure2_slot1 = tango;
            var _closure2_slot2 = tango;
            var _closure2_slot3 = tango;
            sizing = _closure1_slot0;
            output = _closure1_slot2;
            zulu = 3;
            zulu = output[zulu];
            golf = sizing.bind(tango)(zulu);
            oscar = golf.useQuestPreviewActions;
            zulu = mike.id;
            zulu = oscar.bind(golf)(zulu);
            foxtrot = zulu.handleComplete;
            oscar = zulu.handleProgress;
            _closure2_slot1 = oscar;
            yankee = zulu.handleResetDismissibilityClick;
            romeo = zulu.handleResetStatusClick;
            verify = zulu.handleOverrideDeliveryClick;
            offset = 4;
            zulu = output[offset];
            kilo = sizing.bind(tango)(zulu);
            backup = kilo.useStateFromStores;
            zulu = _closure1_slot3;
            golf = new Array(1);
            golf[0] = zulu;
            oscar = function() {
                entity = _closure1_slot3;
                entity = entity.questDeliveryOverride;
                return entity;
            };
            zulu = new Array(0);
            oscar = backup.bind(kilo)(golf, oscar, zulu);
            zulu = 5;
            zulu = output[zulu];
            golf = sizing.bind(tango)(zulu);
            zulu = golf.useTrackQuestContentClickedWithImpression;
            zulu = zulu.bind(golf)();
            _closure2_slot2 = zulu;
            zulu = 6;
            zulu = output[zulu];
            golf = sizing.bind(tango)(zulu);
            zulu = golf.useQuestImpressionId;
            zulu = zulu.bind(golf)();
            _closure2_slot3 = zulu;
            backup = {};
            zulu = 7;
            golf = output[zulu];
            golf = sizing.bind(tango)(golf);
            result = golf.intl;
            kilo = result.string;
            golf = output[zulu];
            golf = sizing.bind(tango)(golf);
            golf = golf.t;
            golf = golf.lwQdjI;
            golf = kilo.bind(result)(golf);
            backup['label'] = golf;
            golf = 8;
            golf = output[golf];
            golf = sizing.bind(tango)(golf);
            golf = golf.LinkExternalSmallIcon;
            backup['IconComponent'] = golf;
            golf = function() { // Original name: action
                options = _closure1_slot0;
                verify = _closure1_slot2;
                entity = 9;
                mike = verify[entity];
                entity = undefined;
                report = options.bind(entity)(mike);
                tango = report.openGameLink;
                zulu = _closure2_slot0;
                mike = {};
                golf = 10;
                golf = verify[golf];
                golf = options.bind(entity)(golf);
                golf = golf.QuestContent;
                golf = golf.QUEST_HOME_MOBILE;
                mike['content'] = golf;
                golf = 5;
                golf = verify[golf];
                golf = options.bind(entity)(golf);
                golf = golf.QuestContentCTA;
                golf = golf.CONTEXT_MENU_OPEN_GAME_LINK;
                mike['ctaContent'] = golf;
                oscar = _closure2_slot3;
                mike['impressionId'] = oscar;
                mike = tango.bind(report)(zulu, mike);
                return entity;
            };
            backup['action'] = golf;
            golf = new Array(2);
            golf[0] = backup;
            backup = {};
            kilo = output[zulu];
            kilo = sizing.bind(tango)(kilo);
            echo = kilo.intl;
            result = echo.string;
            kilo = output[zulu];
            kilo = sizing.bind(tango)(kilo);
            kilo = kilo.t;
            kilo = kilo.GcsZKC;
            kilo = result.bind(echo)(kilo);
            backup['label'] = kilo;
            kilo = function() { // Original name: action
                zulu = _closure1_slot1;
                options = _closure1_slot2;
                entity = 11;
                mike = options[entity];
                entity = undefined;
                tango = zulu.bind(entity)(mike);
                zulu = tango.showModal;
                mike = {};
                report = _closure2_slot0;
                mike['quest'] = report;
                report = false;
                mike['isTargetedDisclosure'] = report;
                report = {};
                golf = _closure1_slot0;
                oscar = 10;
                oscar = options[oscar];
                oscar = golf.bind(entity)(oscar);
                oscar = oscar.QuestContent;
                oscar = oscar.QUEST_HOME_MOBILE;
                report['content'] = oscar;
                oscar = 5;
                oscar = options[oscar];
                oscar = golf.bind(entity)(oscar);
                oscar = oscar.QuestContentCTA;
                oscar = oscar.CONTEXT_MENU_OPEN_DISCLOSURE;
                report['ctaContent'] = oscar;
                mike['trackingCtx'] = report;
                mike = zulu.bind(tango)(mike);
                return entity;
            };
            backup['action'] = kilo;
            kilo = 12;
            kilo = output[kilo];
            kilo = sizing.bind(tango)(kilo);
            kilo = kilo.CircleQuestionIcon;
            backup['IconComponent'] = kilo;
            golf[1] = backup;
            if(options) { _fun96550_ip = 405; continue _fun96550 }
 399:
            options = new Array(0);
            _fun96550_ip = 508; continue _fun96550;
 405:
            backup = {};
            kilo = _closure1_slot0;
            sizing = _closure1_slot2;
            output = sizing[zulu];
            output = kilo.bind(tango)(output);
            result = output.intl;
            output = result.string;
            zulu = sizing[zulu];
            zulu = kilo.bind(tango)(zulu);
            zulu = zulu.t;
            zulu = zulu.WqhZsr;
            zulu = output.bind(result)(zulu);
            backup['label'] = zulu;
            zulu = 13;
            zulu = sizing[zulu];
            zulu = kilo.bind(tango)(zulu);
            zulu = zulu.CopyIcon;
            backup['IconComponent'] = zulu;
            zulu = function() { // Original name: action
                options = _closure1_slot0;
                verify = _closure1_slot2;
                entity = 9;
                mike = verify[entity];
                entity = undefined;
                report = options.bind(entity)(mike);
                tango = report.copyShareLink;
                mike = _closure2_slot0;
                zulu = mike.id;
                mike = {};
                golf = 10;
                golf = verify[golf];
                golf = options.bind(entity)(golf);
                golf = golf.QuestContent;
                golf = golf.QUEST_HOME_MOBILE;
                mike['content'] = golf;
                golf = 5;
                golf = verify[golf];
                golf = options.bind(entity)(golf);
                golf = golf.QuestContentCTA;
                golf = golf.CONTEXT_MENU_COPY_LINK;
                mike['ctaContent'] = golf;
                oscar = _closure2_slot3;
                mike['impressionId'] = oscar;
                mike = tango.bind(report)(zulu, mike);
                return entity;
            };
            backup['action'] = zulu;
            zulu = new Array(1);
            zulu[0] = backup;
            options = zulu;
 508:
            update = 2;
            control = golf;
            source = options;
            zulu = arraySpread(control, source, update);
            options = {};
            zulu = 'Set Random Quest Progress';
            options['label'] = zulu;
            zulu = function() { // Original name: action
                zulu = _closure2_slot1;
                entity = global;
                mike = entity.Math;
                entity = mike.random;
                mike = entity.bind(mike)();
                entity = 0.9;
                tango = entity * mike;
                mike = undefined;
                entity = 0.03;
                entity = tango + entity;
                entity = zulu.bind(mike)(entity);
                return entity;
            };
            options['action'] = zulu;
            zulu = new Array(4);
            zulu[0] = options;
            options = {};
            backup = 'Complete Quest';
            options['label'] = backup;
            options['action'] = foxtrot;
            zulu[1] = options;
            options = {};
            foxtrot = 'Reset Quest';
            options['label'] = foxtrot;
            options['action'] = romeo;
            zulu[2] = options;
            options = {};
            romeo = 'Reset Dismissibility';
            options['label'] = romeo;
            options['action'] = yankee;
            zulu[3] = options;
            yankee = _closure1_slot0;
            romeo = _closure1_slot2;
            options = 9;
            options = romeo[options];
            yankee = yankee.bind(tango)(options);
            options = yankee.isConsoleQuest;
            options = options.bind(yankee)(mike);
            if(options) { _fun96550_ip = 652; continue _fun96550 }
 646:
            options = new Array(0);
            _fun96550_ip = 713; continue _fun96550;
 652:
            romeo = {};
            yankee = 'Start Console Heartbeat';
            romeo['label'] = yankee;
            yankee = function() { // Original name: action
                zulu = _closure1_slot0;
                mike = _closure1_slot2;
                entity = 14;
                mike = mike[entity];
                entity = undefined;
                tango = zulu.bind(entity)(mike);
                zulu = tango.manuallyStartConsoleQuest;
                entity = _closure2_slot0;
                mike = entity.id;
                entity = true;
                entity = zulu.bind(tango)(mike, entity);
                return entity;
            };
            romeo['action'] = yankee;
            yankee = new Array(2);
            yankee[0] = romeo;
            romeo = {};
            foxtrot = 'Stop Console Heartbeat';
            romeo['label'] = foxtrot;
            foxtrot = function() { // Original name: action
                zulu = _closure1_slot0;
                mike = _closure1_slot2;
                entity = 14;
                mike = mike[entity];
                entity = undefined;
                zulu = zulu.bind(entity)(mike);
                mike = zulu.manualStopConsoleQuest;
                entity = _closure2_slot0;
                entity = entity.id;
                entity = mike.bind(zulu)(entity);
                return entity;
            };
            romeo['action'] = foxtrot;
            yankee[1] = romeo;
            options = yankee;
 713:
            control = zulu;
            source = options;
            update = offset;
            options = arraySpread(control, source, update);
            options = {};
            offset = 'Show in Quest Bar';
            options['label'] = offset;
            options['action'] = verify;
            verify = null;
            verify = verify == oscar;
            offset = undefined;
            if(verify) { _fun96550_ip = 758; continue _fun96550 }
 753:
            offset = oscar.id;
 758:
            verify = mike.id;
            oscar = undefined;
            if(!(offset === verify)) { _fun96550_ip = 795; continue _fun96550 }
 769:
            offset = _closure1_slot0;
            yankee = _closure1_slot2;
            verify = 15;
            verify = yankee[verify];
            verify = offset.bind(tango)(verify);
            oscar = verify.CheckmarkLargeIcon;
 795:
            options['IconComponent'] = oscar;
            oscar = zulu.unshift;
            oscar = oscar.bind(zulu)(options);
            mike = mike.preview;
            oscar = golf;
            if(!mike) { _fun96550_ip = 838; continue _fun96550 }
 823:
            mike = new Array(2);
            mike[0] = golf;
            mike[1] = zulu;
            oscar = mike;
 838:
            zulu = _closure1_slot4;
            mike = _closure1_slot0;
            golf = _closure1_slot2;
            entity = 16;
            entity = golf[entity];
            entity = mike.bind(tango)(entity);
            mike = entity.ContextMenu;
            entity = {};
            entity['items'] = oscar;
            oscar = function() { // Original name: onOpen
                zulu = _closure2_slot2;
                mike = {};
                entity = _closure2_slot0;
                entity = entity.id;
                mike['questId'] = entity;
                report = _closure1_slot0;
                oscar = _closure1_slot2;
                entity = 10;
                tango = oscar[entity];
                entity = undefined;
                tango = report.bind(entity)(tango);
                tango = tango.QuestContent;
                tango = tango.QUEST_HOME_MOBILE;
                mike['questContent'] = tango;
                tango = 5;
                tango = oscar[tango];
                tango = report.bind(entity)(tango);
                tango = tango.QuestContentCTA;
                tango = tango.OPEN_CONTEXT_MENU;
                mike['questContentCTA'] = tango;
                mike = zulu.bind(entity)(mike);
                return entity;
            };
            entity['onOpen'] = oscar;
            report = function(argFoo) { // Original name: children
                tango = _closure1_slot4;
                options = _closure1_slot0;
                verify = _closure1_slot2;
                entity = 17;
                entity = verify[entity];
                zulu = undefined;
                entity = options.bind(zulu)(entity);
                mike = entity.IconButton;
                entity = {};
                offset = argFoo;
                yankee = entity;
                oscar = copyDataProperties(yankee, offset);
                oscar = _closure1_slot1;
                report = 18;
                report = verify[report];
                oscar = oscar.bind(zulu)(report);
                report = 'icon';
                entity[report] = oscar;
                oscar = 'secondary';
                report = 'variant';
                entity[report] = oscar;
                report = 7;
                oscar = verify[report];
                oscar = options.bind(zulu)(oscar);
                golf = oscar.intl;
                oscar = golf.string;
                report = verify[report];
                report = options.bind(zulu)(report);
                report = report.t;
                report = report.UKOtz8;
                oscar = oscar.bind(golf)(report);
                report = 'accessibilityLabel';
                entity[report] = oscar;
                entity = tango.bind(zulu)(mike, entity);
                return entity;
            };
            entity['children'] = report;
            entity = zulu.bind(tango)(mike, entity);
            return entity;
        }
    };
    mike = tango.bind(golf)(mike);
    tango = 19;
    tango = oscar[tango];
    oscar = report.bind(entity)(tango);
    report = oscar.fileFinishedImporting;
    tango = 'modules/quests/native/QuestContextMenu.tsx';
    tango = report.bind(oscar)(tango);
    zulu['default'] = mike;
    return entity;
})();