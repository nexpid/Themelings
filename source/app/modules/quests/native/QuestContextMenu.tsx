// app/modules/quests/native/QuestContextMenu.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    report = argBar;
    option = argBaz;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    var _closure1_slot1 = option;
    var _closure1_slot2 = oscard;
    entity = global;
    verify = entity.Object;
    golfie = verify.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(verify)(zuuluu, entity, tangon);
    entity = 0;
    golfie = oscard[entity];
    tangon = argCor;
    entity = undefined;
    golfie = tangon.bind(entity)(golfie);
    tangon = 1;
    tangon = oscard[tangon];
    tangon = option.bind(entity)(tangon);
    var _closure1_slot3 = tangon;
    tangon = 2;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.jsx;
    var _closure1_slot4 = tangon;
    tangon = golfie.memo;
    michal = function(argFoo) {
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            entity = argFoo;
            michal = entity.quest;
            var _closure2_slot0 = michal;
            option = entity.showShareLink;
            tangon = undefined;
            if(!(option === tangon)) { _fun00002_ip = 29; continue _fun00001 }
 27:
            option = false;
 29:
            var _closure2_slot1 = tangon;
            var _closure2_slot2 = tangon;
            var _closure2_slot3 = tangon;
            sizing = _closure1_slot0;
            output = _closure1_slot2;
            zuuluu = 3;
            zuuluu = output[zuuluu];
            golfie = sizing.bind(tangon)(zuuluu);
            oscard = golfie.useQuestPreviewActions;
            zuuluu = michal.id;
            zuuluu = oscard.bind(golfie)(zuuluu);
            foxtra = zuuluu.handleComplete;
            oscard = zuuluu.handleProgress;
            _closure2_slot1 = oscard;
            yankee = zuuluu.handleResetDismissibilityClick;
            romeon = zuuluu.handleResetStatusClick;
            verify = zuuluu.handleOverrideDeliveryClick;
            offset = 4;
            zuuluu = output[offset];
            kiloes = sizing.bind(tangon)(zuuluu);
            backup = kiloes.useStateFromStores;
            zuuluu = _closure1_slot3;
            golfie = new Array(1);
            golfie[0] = zuuluu;
            oscard = function() {
                entity = _closure1_slot3;
                entity = entity.questDeliveryOverride;
                return entity;
            };
            zuuluu = new Array(0);
            oscard = backup.bind(kiloes)(golfie, oscard, zuuluu);
            zuuluu = 5;
            zuuluu = output[zuuluu];
            golfie = sizing.bind(tangon)(zuuluu);
            zuuluu = golfie.useTrackQuestContentClickedWithImpression;
            zuuluu = zuuluu.bind(golfie)();
            _closure2_slot2 = zuuluu;
            zuuluu = 6;
            zuuluu = output[zuuluu];
            golfie = sizing.bind(tangon)(zuuluu);
            zuuluu = golfie.useQuestImpressionId;
            zuuluu = zuuluu.bind(golfie)();
            _closure2_slot3 = zuuluu;
            backup = {};
            zuuluu = 7;
            golfie = output[zuuluu];
            golfie = sizing.bind(tangon)(golfie);
            result = golfie.intl;
            kiloes = result.string;
            golfie = output[zuuluu];
            golfie = sizing.bind(tangon)(golfie);
            golfie = golfie.t;
            golfie = golfie.lwQdjI;
            golfie = kiloes.bind(result)(golfie);
            backup['label'] = golfie;
            golfie = 8;
            golfie = output[golfie];
            golfie = sizing.bind(tangon)(golfie);
            golfie = golfie.LinkExternalSmallIcon;
            backup['IconComponent'] = golfie;
            golfie = function() { // Original name: action
                option = _closure1_slot0;
                verify = _closure1_slot2;
                entity = 9;
                michal = verify[entity];
                entity = undefined;
                report = option.bind(entity)(michal);
                tangon = report.openGameLink;
                zuuluu = _closure2_slot0;
                michal = {};
                golfie = 10;
                golfie = verify[golfie];
                golfie = option.bind(entity)(golfie);
                golfie = golfie.QuestContent;
                golfie = golfie.QUEST_HOME_MOBILE;
                michal['content'] = golfie;
                golfie = 5;
                golfie = verify[golfie];
                golfie = option.bind(entity)(golfie);
                golfie = golfie.QuestContentCTA;
                golfie = golfie.CONTEXT_MENU_OPEN_GAME_LINK;
                michal['ctaContent'] = golfie;
                oscard = _closure2_slot3;
                michal['impressionId'] = oscard;
                michal = tangon.bind(report)(zuuluu, michal);
                return entity;
            };
            backup['action'] = golfie;
            golfie = new Array(2);
            golfie[0] = backup;
            backup = {};
            kiloes = output[zuuluu];
            kiloes = sizing.bind(tangon)(kiloes);
            echoed = kiloes.intl;
            result = echoed.string;
            kiloes = output[zuuluu];
            kiloes = sizing.bind(tangon)(kiloes);
            kiloes = kiloes.t;
            kiloes = kiloes.GcsZKC;
            kiloes = result.bind(echoed)(kiloes);
            backup['label'] = kiloes;
            kiloes = function() { // Original name: action
                zuuluu = _closure1_slot1;
                option = _closure1_slot2;
                entity = 11;
                michal = option[entity];
                entity = undefined;
                tangon = zuuluu.bind(entity)(michal);
                zuuluu = tangon.showModal;
                michal = {};
                report = _closure2_slot0;
                michal['quest'] = report;
                report = false;
                michal['isTargetedDisclosure'] = report;
                report = {};
                golfie = _closure1_slot0;
                oscard = 10;
                oscard = option[oscard];
                oscard = golfie.bind(entity)(oscard);
                oscard = oscard.QuestContent;
                oscard = oscard.QUEST_HOME_MOBILE;
                report['content'] = oscard;
                oscard = 5;
                oscard = option[oscard];
                oscard = golfie.bind(entity)(oscard);
                oscard = oscard.QuestContentCTA;
                oscard = oscard.CONTEXT_MENU_OPEN_DISCLOSURE;
                report['ctaContent'] = oscard;
                michal['trackingCtx'] = report;
                michal = zuuluu.bind(tangon)(michal);
                return entity;
            };
            backup['action'] = kiloes;
            kiloes = 12;
            kiloes = output[kiloes];
            kiloes = sizing.bind(tangon)(kiloes);
            kiloes = kiloes.CircleQuestionIcon;
            backup['IconComponent'] = kiloes;
            golfie[1] = backup;
            if(option) { _fun00002_ip = 405; continue _fun00001 }
 399:
            option = new Array(0);
            _fun00002_ip = 508; continue _fun00001;
 405:
            backup = {};
            kiloes = _closure1_slot0;
            sizing = _closure1_slot2;
            output = sizing[zuuluu];
            output = kiloes.bind(tangon)(output);
            result = output.intl;
            output = result.string;
            zuuluu = sizing[zuuluu];
            zuuluu = kiloes.bind(tangon)(zuuluu);
            zuuluu = zuuluu.t;
            zuuluu = zuuluu.WqhZsr;
            zuuluu = output.bind(result)(zuuluu);
            backup['label'] = zuuluu;
            zuuluu = 13;
            zuuluu = sizing[zuuluu];
            zuuluu = kiloes.bind(tangon)(zuuluu);
            zuuluu = zuuluu.CopyIcon;
            backup['IconComponent'] = zuuluu;
            zuuluu = function() { // Original name: action
                option = _closure1_slot0;
                verify = _closure1_slot2;
                entity = 9;
                michal = verify[entity];
                entity = undefined;
                report = option.bind(entity)(michal);
                tangon = report.copyShareLink;
                michal = _closure2_slot0;
                zuuluu = michal.id;
                michal = {};
                golfie = 10;
                golfie = verify[golfie];
                golfie = option.bind(entity)(golfie);
                golfie = golfie.QuestContent;
                golfie = golfie.QUEST_HOME_MOBILE;
                michal['content'] = golfie;
                golfie = 5;
                golfie = verify[golfie];
                golfie = option.bind(entity)(golfie);
                golfie = golfie.QuestContentCTA;
                golfie = golfie.CONTEXT_MENU_COPY_LINK;
                michal['ctaContent'] = golfie;
                oscard = _closure2_slot3;
                michal['impressionId'] = oscard;
                michal = tangon.bind(report)(zuuluu, michal);
                return entity;
            };
            backup['action'] = zuuluu;
            zuuluu = new Array(1);
            zuuluu[0] = backup;
            option = zuuluu;
 508:
            update = 2;
            ctrled = golfie;
            source = option;
            zuuluu = arraySpread(ctrled, source, update);
            option = {};
            zuuluu = 'Set Random Quest Progress';
            option['label'] = zuuluu;
            zuuluu = function() { // Original name: action
                zuuluu = _closure2_slot1;
                entity = global;
                michal = entity.Math;
                entity = michal.random;
                michal = entity.bind(michal)();
                entity = 0.9;
                tangon = entity * michal;
                michal = undefined;
                entity = 0.03;
                entity = tangon + entity;
                entity = zuuluu.bind(michal)(entity);
                return entity;
            };
            option['action'] = zuuluu;
            zuuluu = new Array(4);
            zuuluu[0] = option;
            option = {};
            backup = 'Complete Quest';
            option['label'] = backup;
            option['action'] = foxtra;
            zuuluu[1] = option;
            option = {};
            foxtra = 'Reset Quest';
            option['label'] = foxtra;
            option['action'] = romeon;
            zuuluu[2] = option;
            option = {};
            romeon = 'Reset Dismissibility';
            option['label'] = romeon;
            option['action'] = yankee;
            zuuluu[3] = option;
            yankee = _closure1_slot0;
            romeon = _closure1_slot2;
            option = 9;
            option = romeon[option];
            yankee = yankee.bind(tangon)(option);
            option = yankee.isConsoleQuest;
            option = option.bind(yankee)(michal);
            if(option) { _fun00002_ip = 652; continue _fun00001 }
 646:
            option = new Array(0);
            _fun00002_ip = 713; continue _fun00001;
 652:
            romeon = {};
            yankee = 'Start Console Heartbeat';
            romeon['label'] = yankee;
            yankee = function() { // Original name: action
                zuuluu = _closure1_slot0;
                michal = _closure1_slot2;
                entity = 14;
                michal = michal[entity];
                entity = undefined;
                tangon = zuuluu.bind(entity)(michal);
                zuuluu = tangon.manuallyStartConsoleQuest;
                entity = _closure2_slot0;
                michal = entity.id;
                entity = true;
                entity = zuuluu.bind(tangon)(michal, entity);
                return entity;
            };
            romeon['action'] = yankee;
            yankee = new Array(2);
            yankee[0] = romeon;
            romeon = {};
            foxtra = 'Stop Console Heartbeat';
            romeon['label'] = foxtra;
            foxtra = function() { // Original name: action
                zuuluu = _closure1_slot0;
                michal = _closure1_slot2;
                entity = 14;
                michal = michal[entity];
                entity = undefined;
                zuuluu = zuuluu.bind(entity)(michal);
                michal = zuuluu.manualStopConsoleQuest;
                entity = _closure2_slot0;
                entity = entity.id;
                entity = michal.bind(zuuluu)(entity);
                return entity;
            };
            romeon['action'] = foxtra;
            yankee[1] = romeon;
            option = yankee;
 713:
            ctrled = zuuluu;
            source = option;
            update = offset;
            option = arraySpread(ctrled, source, update);
            option = {};
            offset = 'Show in Quest Bar';
            option['label'] = offset;
            option['action'] = verify;
            verify = null;
            verify = verify == oscard;
            offset = undefined;
            if(verify) { _fun00002_ip = 758; continue _fun00001 }
 753:
            offset = oscard.id;
 758:
            verify = michal.id;
            oscard = undefined;
            if(!(offset === verify)) { _fun00002_ip = 795; continue _fun00001 }
 769:
            offset = _closure1_slot0;
            yankee = _closure1_slot2;
            verify = 15;
            verify = yankee[verify];
            verify = offset.bind(tangon)(verify);
            oscard = verify.CheckmarkLargeIcon;
 795:
            option['IconComponent'] = oscard;
            oscard = zuuluu.unshift;
            oscard = oscard.bind(zuuluu)(option);
            michal = michal.preview;
            oscard = golfie;
            if(!michal) { _fun00002_ip = 838; continue _fun00001 }
 823:
            michal = new Array(2);
            michal[0] = golfie;
            michal[1] = zuuluu;
            oscard = michal;
 838:
            zuuluu = _closure1_slot4;
            michal = _closure1_slot0;
            golfie = _closure1_slot2;
            entity = 16;
            entity = golfie[entity];
            entity = michal.bind(tangon)(entity);
            michal = entity.ContextMenu;
            entity = {};
            entity['items'] = oscard;
            oscard = function() { // Original name: onOpen
                zuuluu = _closure2_slot2;
                michal = {};
                entity = _closure2_slot0;
                entity = entity.id;
                michal['questId'] = entity;
                report = _closure1_slot0;
                oscard = _closure1_slot2;
                entity = 10;
                tangon = oscard[entity];
                entity = undefined;
                tangon = report.bind(entity)(tangon);
                tangon = tangon.QuestContent;
                tangon = tangon.QUEST_HOME_MOBILE;
                michal['questContent'] = tangon;
                tangon = 5;
                tangon = oscard[tangon];
                tangon = report.bind(entity)(tangon);
                tangon = tangon.QuestContentCTA;
                tangon = tangon.OPEN_CONTEXT_MENU;
                michal['questContentCTA'] = tangon;
                michal = zuuluu.bind(entity)(michal);
                return entity;
            };
            entity['onOpen'] = oscard;
            report = function(argFoo) { // Original name: children
                tangon = _closure1_slot4;
                option = _closure1_slot0;
                verify = _closure1_slot2;
                entity = 17;
                entity = verify[entity];
                zuuluu = undefined;
                entity = option.bind(zuuluu)(entity);
                michal = entity.IconButton;
                entity = {};
                offset = argFoo;
                yankee = entity;
                oscard = copyDataProperties(yankee, offset);
                oscard = _closure1_slot1;
                report = 18;
                report = verify[report];
                oscard = oscard.bind(zuuluu)(report);
                report = 'icon';
                entity[report] = oscard;
                oscard = 'secondary';
                report = 'variant';
                entity[report] = oscard;
                report = 7;
                oscard = verify[report];
                oscard = option.bind(zuuluu)(oscard);
                golfie = oscard.intl;
                oscard = golfie.string;
                report = verify[report];
                report = option.bind(zuuluu)(report);
                report = report.t;
                report = report.UKOtz8;
                oscard = oscard.bind(golfie)(report);
                report = 'accessibilityLabel';
                entity[report] = oscard;
                entity = tangon.bind(zuuluu)(michal, entity);
                return entity;
            };
            entity['children'] = report;
            entity = zuuluu.bind(tangon)(michal, entity);
            return entity;
        }
    };
    michal = tangon.bind(golfie)(michal);
    tangon = 19;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/quests/native/QuestContextMenu.tsx';
    tangon = report.bind(oscard)(tangon);
    zuuluu['default'] = michal;
    return entity;
})();