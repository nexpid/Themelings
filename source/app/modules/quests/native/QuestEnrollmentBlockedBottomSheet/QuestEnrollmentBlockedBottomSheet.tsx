// app/modules/quests/native/QuestEnrollmentBlockedBottomSheet/QuestEnrollmentBlockedBottomSheet.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    report = argBar;
    yankee = argBaz;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    var _closure1_slot1 = yankee;
    var _closure1_slot2 = oscard;
    entity = function(argFoo) { // Original name: QuestEnrollmentBlockedBottomSheet
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            entity = argFoo;
            michal = entity.questEnrollmentBlockedUntil;
            entity = _closure1_slot6;
            report = undefined;
            yankee = entity.bind(report)();
            zuuluu = _closure1_slot1;
            tangon = _closure1_slot2;
            entity = 9;
            entity = tangon[entity];
            tangon = zuuluu.bind(report)(entity);
            entity = null;
            zuuluu = michal;
            if(!(entity == zuuluu)) { _fun00002_ip = 79; continue _fun00001 }
 51:
            oscard = global;
            oscard = oscard.Date;
            golfie = oscard.prototype;
            golfie = Object.create(golfie, {constructor: {value: oscard}});
            status = golfie;
            oscard = new status[oscard](target);
            zuuluu = oscard instanceof Object ? oscard : golfie;
 79:
            zuuluu = tangon.bind(report)(zuuluu);
            oscard = zuuluu.hours;
            option = zuuluu.minutes;
            tangon = zuuluu.seconds;
            sizing = global;
            zuuluu = sizing.String;
            verify = zuuluu.bind(report)(oscard);
            zuuluu = verify.padStart;
            golfie = 2;
            oscard = '0';
            source = zuuluu.bind(verify)(golfie, oscard);
            zuuluu = sizing.String;
            option = zuuluu.bind(report)(option);
            zuuluu = option.padStart;
            update = zuuluu.bind(option)(golfie, oscard);
            zuuluu = sizing.String;
            tangon = zuuluu.bind(report)(tangon);
            zuuluu = tangon.padStart;
            echoed = zuuluu.bind(tangon)(golfie, oscard);
            michal = entity == michal;
            entity = null;
            if(michal) { _fun00002_ip = 539; continue _fun00001 }
 194:
            tangon = _closure1_slot5;
            foxtra = _closure1_slot0;
            output = _closure1_slot2;
            michal = 10;
            michal = output[michal];
            michal = foxtra.bind(report)(michal);
            zuuluu = michal.BottomSheet;
            michal = {'header': null, 'footer': null, 'startExpanded': true};
            option = _closure1_slot5;
            golfie = _closure1_slot3;
            oscard = {};
            verify = yankee.heading;
            oscard['style'] = verify;
            result = _closure1_slot5;
            verify = 11;
            romeon = output[verify];
            romeon = foxtra.bind(report)(romeon);
            kiloes = romeon.Text;
            backup = {};
            romeon = 'heading-xl/bold';
            backup['variant'] = romeon;
            romeon = 12;
            ctrled = output[romeon];
            ctrled = foxtra.bind(report)(ctrled);
            sequen = ctrled.intl;
            vacuum = sequen.string;
            ctrled = output[romeon];
            ctrled = foxtra.bind(report)(ctrled);
            ctrled = ctrled.t;
            ctrled = ctrled.XEHDT0;
            ctrled = vacuum.bind(sequen)(ctrled);
            backup['children'] = ctrled;
            backup = result.bind(report)(kiloes, backup);
            oscard['children'] = backup;
            oscard = option.bind(report)(golfie, oscard);
            michal['header'] = oscard;
            option = _closure1_slot5;
            golfie = _closure1_slot3;
            oscard = {};
            yankee = yankee.container;
            oscard['style'] = yankee;
            yankee = _closure1_slot5;
            verify = output[verify];
            verify = foxtra.bind(report)(verify);
            offset = verify.Text;
            verify = {};
            backup = 'text-md/normal';
            verify['variant'] = backup;
            backup = output[romeon];
            backup = foxtra.bind(report)(backup);
            kiloes = backup.intl;
            backup = kiloes.formatToPlainString;
            romeon = output[romeon];
            romeon = foxtra.bind(report)(romeon);
            romeon = romeon.t;
            foxtra = romeon.+5XVHx;
            romeon = {};
            sizing = sizing.HermesInternal;
            result = sizing.concat;
            status = '';
            sizing = ':';
            target = source;
            papara = sizing;
            cntext = update;
            record = sizing;
            config = echoed;
            sizing = status[result](target, papara, cntext, record, config, sequen);
            romeon['countdownString'] = sizing;
            romeon = backup.bind(kiloes)(foxtra, romeon);
            verify['children'] = romeon;
            verify = yankee.bind(report)(offset, verify);
            oscard['children'] = verify;
            oscard = option.bind(report)(golfie, oscard);
            michal['children'] = oscard;
            entity = tangon.bind(report)(zuuluu, michal);
 539:
            return entity;
        }
    };
    var _closure1_slot7 = entity;
    entity = global;
    option = entity.Object;
    golfie = option.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(option)(zuuluu, entity, tangon);
    entity = 0;
    golfie = oscard[entity];
    tangon = argCor;
    entity = undefined;
    tangon = tangon.bind(entity)(golfie);
    tangon = 1;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.View;
    var _closure1_slot3 = tangon;
    tangon = 2;
    tangon = oscard[tangon];
    tangon = yankee.bind(entity)(tangon);
    var _closure1_slot4 = tangon;
    tangon = 3;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.jsx;
    var _closure1_slot5 = tangon;
    tangon = 4;
    tangon = oscard[tangon];
    option = report.bind(entity)(tangon);
    golfie = option.createStyles;
    tangon = {};
    verify = {'display': 'flex', 'justifyContent': 'center', 'alignItems': 'center'};
    offset = 5;
    romeon = oscard[offset];
    romeon = yankee.bind(entity)(romeon);
    romeon = romeon.spacing;
    romeon = romeon.PX_16;
    verify['paddingHorizontal'] = romeon;
    romeon = oscard[offset];
    romeon = yankee.bind(entity)(romeon);
    romeon = romeon.spacing;
    romeon = romeon.PX_16;
    verify['paddingTop'] = romeon;
    romeon = oscard[offset];
    romeon = yankee.bind(entity)(romeon);
    romeon = romeon.spacing;
    romeon = romeon.PX_24;
    verify['gap'] = romeon;
    tangon['heading'] = verify;
    verify = {'display': 'flex', 'justifyContent': 'center', 'alignItems': 'center'};
    romeon = oscard[offset];
    romeon = yankee.bind(entity)(romeon);
    romeon = romeon.spacing;
    romeon = romeon.PX_16;
    verify['paddingHorizontal'] = romeon;
    offset = oscard[offset];
    offset = yankee.bind(entity)(offset);
    offset = offset.spacing;
    offset = offset.PX_32;
    verify['paddingBottom'] = offset;
    tangon['container'] = verify;
    tangon = golfie.bind(option)(tangon);
    var _closure1_slot6 = tangon;
    tangon = 13;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/quests/native/QuestEnrollmentBlockedBottomSheet/QuestEnrollmentBlockedBottomSheet.tsx';
    tangon = report.bind(oscard)(tangon);
    michal = function(argFoo) { // Original name: QuestEnrollmentBlockedBottomSheetConnected
        _fun00003: for(var _fun00004_ip = 0; ; ) switch(_fun00004_ip) {
 0:
            entity = argFoo;
            michal = entity.questId;
            var _closure2_slot0 = michal;
            michal = entity.questEnrollmentBlockedUntil;
            var _closure2_slot1 = michal;
            golfie = entity.questContentPosition;
            zuuluu = _closure1_slot0;
            tangon = _closure1_slot2;
            entity = 6;
            entity = tangon[entity];
            report = undefined;
            option = zuuluu.bind(report)(entity);
            tangon = option.useStateFromStores;
            entity = _closure1_slot4;
            zuuluu = new Array(1);
            zuuluu[0] = entity;
            entity = function() {
                zuuluu = _closure1_slot4;
                michal = zuuluu.getQuest;
                entity = _closure2_slot0;
                entity = michal.bind(zuuluu)(entity);
                return entity;
            };
            option = tangon.bind(option)(zuuluu, entity);
            entity = null;
            zuuluu = entity == option;
            if(zuuluu) { _fun00004_ip = 190; continue _fun00003 }
 95:
            tangon = _closure1_slot5;
            verify = _closure1_slot0;
            offset = _closure1_slot2;
            michal = 7;
            michal = offset[michal];
            michal = verify.bind(report)(michal);
            zuuluu = michal.QuestContentImpressionTrackerNative;
            michal = {};
            yankee = true;
            michal['overrideVisibility'] = yankee;
            michal['questOrQuests'] = option;
            option = 8;
            option = offset[option];
            option = verify.bind(report)(option);
            option = option.QuestContent;
            option = option.QUEST_ENROLLMENT_BLOCKED_BOTTOM_SHEET;
            michal['questContent'] = option;
            michal['questContentPosition'] = golfie;
            oscard = function() { // Original name: children
                tangon = _closure1_slot5;
                zuuluu = _closure1_slot7;
                michal = {};
                report = _closure2_slot0;
                michal['questId'] = report;
                entity = _closure2_slot1;
                michal['questEnrollmentBlockedUntil'] = entity;
                entity = undefined;
                entity = tangon.bind(entity)(zuuluu, michal);
                return entity;
            };
            michal['children'] = oscard;
            entity = tangon.bind(report)(zuuluu, michal);
 190:
            return entity;
        }
    };
    zuuluu['default'] = michal;
    return entity;
})();