// app/modules/quests/native/QuestDockDismissalToast.tsx
export default (function(_, argBar, argBaz, argCorge, __, argFred, argPlugh) {
    report = argBar;
    zulu = argFred;
    oscar = argPlugh;
    var _closure1_slot0 = report;
    entity = argBaz;
    var _closure1_slot1 = entity;
    var _closure1_slot2 = oscar;
    entity = function() { // Original name: QuestDockDismissalNotification
        mike = _closure1_slot6;
        tango = undefined;
        mike = mike.bind(tango)();
        var _closure2_slot0 = mike;
        zulu = _closure1_slot5;
        oscar = _closure1_slot0;
        offset = _closure1_slot2;
        entity = 5;
        entity = offset[entity];
        entity = oscar.bind(tango)(entity);
        mike = entity.Text;
        entity = {'color': 'header-primary', 'variant': 'text-sm/semibold'};
        report = 6;
        golf = offset[report];
        golf = oscar.bind(tango)(golf);
        options = golf.intl;
        golf = options.format;
        report = offset[report];
        report = oscar.bind(tango)(report);
        report = report.t;
        oscar = report.dYE1p6;
        report = {};
        verify = function() { // Original name: arrowHook
            tango = _closure1_slot5;
            zulu = _closure1_slot4;
            mike = {};
            options = _closure2_slot0;
            report = options.toastArrowForwardIconContainer;
            mike['style'] = report;
            golf = _closure1_slot5;
            oscar = _closure1_slot3;
            report = {};
            verify = 'contain';
            report['resizeMode'] = verify;
            offset = _closure1_slot1;
            verify = _closure1_slot2;
            entity = 7;
            verify = verify[entity];
            entity = undefined;
            verify = offset.bind(entity)(verify);
            report['source'] = verify;
            options = options.toastArrowForwardIcon;
            report['style'] = options;
            report = golf.bind(entity)(oscar, report);
            mike['children'] = report;
            entity = tango.bind(entity)(zulu, mike);
            return entity;
        };
        report['arrowHook'] = verify;
        report = golf.bind(options)(oscar, report);
        entity['children'] = report;
        entity = zulu.bind(tango)(mike, entity);
        return entity;
    };
    var _closure1_slot7 = entity;
    entity = global;
    options = entity.Object;
    golf = options.defineProperty;
    tango = {};
    entity = true;
    tango['value'] = entity;
    entity = '__esModule';
    entity = golf.bind(options)(zulu, entity, tango);
    entity = 0;
    golf = oscar[entity];
    tango = argCorge;
    entity = undefined;
    tango = tango.bind(entity)(golf);
    tango = 1;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    golf = tango.Image;
    var _closure1_slot3 = golf;
    tango = tango.View;
    var _closure1_slot4 = tango;
    tango = 2;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.jsx;
    var _closure1_slot5 = tango;
    tango = 3;
    tango = oscar[tango];
    options = report.bind(entity)(tango);
    golf = options.createStyles;
    tango = function() {
        entity = {};
        mike = {'height': 6, 'width': 16};
        entity['toastArrowForwardIconContainer'] = mike;
        mike = {'opacity': 0.35, 'position': 'absolute', 'top': '50%', 'left': 0, 'height': 16, 'width': 16};
        report = _closure1_slot1;
        tango = _closure1_slot2;
        zulu = 4;
        tango = tango[zulu];
        zulu = undefined;
        zulu = report.bind(zulu)(tango);
        zulu = zulu.colors;
        zulu = zulu.INTERACTIVE_ACTIVE;
        mike['tintColor'] = zulu;
        tango = {};
        zulu = -10;
        tango['translateY'] = zulu;
        zulu = new Array(1);
        zulu[0] = tango;
        mike['transform'] = zulu;
        entity['toastArrowForwardIcon'] = mike;
        return entity;
    };
    tango = golf.bind(options)(tango);
    var _closure1_slot6 = tango;
    tango = 10;
    tango = oscar[tango];
    oscar = report.bind(entity)(tango);
    report = oscar.fileFinishedImporting;
    tango = 'modules/quests/native/QuestDockDismissalToast.tsx';
    tango = report.bind(oscar)(tango);
    mike = function() { // Original name: displayQuestDismissalToast
        oscar = _closure1_slot1;
        golf = _closure1_slot2;
        entity = 8;
        mike = golf[entity];
        entity = undefined;
        tango = oscar.bind(entity)(mike);
        zulu = tango.open;
        mike = {};
        options = 'QUEST_BAR_DISMISS_TOAST';
        mike['key'] = options;
        report = _closure1_slot7;
        mike['content'] = report;
        report = 9;
        report = golf[report];
        report = oscar.bind(entity)(report);
        mike['icon'] = report;
        report = 'bottom';
        mike['position'] = report;
        mike = zulu.bind(tango)(mike);
        return entity;
    };
    zulu['displayQuestDismissalToast'] = mike;
    return entity;
})();