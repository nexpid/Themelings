// app/modules/quests/native/QuestProgressIndicator.tsx
export default (function(argFoo, argBar, argBaz, _, __, argFred, argPlugh) {
    report = argBar;
    golf = argBaz;
    zulu = argFred;
    oscar = argPlugh;
    var _closure1_slot0 = report;
    var _closure1_slot1 = golf;
    var _closure1_slot2 = oscar;
    entity = global;
    verify = entity.Object;
    options = verify.defineProperty;
    tango = {};
    entity = true;
    tango['value'] = entity;
    entity = '__esModule';
    entity = options.bind(verify)(zulu, entity, tango);
    entity = 0;
    tango = oscar[entity];
    entity = undefined;
    tango = report.bind(entity)(tango);
    options = tango.useMemo;
    var _closure1_slot3 = options;
    options = tango.useEffect;
    var _closure1_slot4 = options;
    tango = tango.useRef;
    var _closure1_slot5 = tango;
    tango = 1;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.View;
    var _closure1_slot6 = tango;
    tango = 2;
    tango = oscar[tango];
    tango = golf.bind(entity)(tango);
    var _closure1_slot7 = tango;
    tango = 3;
    options = oscar[tango];
    options = report.bind(entity)(options);
    options = options.jsx;
    var _closure1_slot8 = options;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.jsxs;
    var _closure1_slot9 = tango;
    tango = ['#666777', '#535564'];
    var _closure1_slot10 = tango;
    tango = 4;
    tango = oscar[tango];
    options = golf.bind(entity)(tango);
    golf = options.createAnimatedComponent;
    tango = 5;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.Circle;
    tango = golf.bind(options)(tango);
    var _closure1_slot11 = tango;
    tango = 6;
    tango = oscar[tango];
    options = report.bind(entity)(tango);
    golf = options.createStyles;
    tango = function(argFoo) {
        tango = argFoo;
        entity = {};
        mike = {};
        zulu = 'relative';
        mike['position'] = zulu;
        entity['wrapper'] = mike;
        mike = {'position': 'relative', 'display': 'flex', 'justifyContent': 'center', 'alignItems': 'center', 'zIndex': 1};
        entity['container'] = mike;
        mike = {'shadowOffset': null, 'shadowRadius': 20, 'shadowOpacity': 0, 'elevation': 4, 'shadowColor': '#30C77399'};
        zulu = {'width': 0, 'height': 0};
        mike['shadowOffset'] = zulu;
        entity['completionGlow'] = mike;
        mike = {};
        report = {};
        zulu = '-90deg';
        report['rotate'] = zulu;
        zulu = new Array(1);
        zulu[0] = report;
        mike['transform'] = zulu;
        entity['canvas'] = mike;
        mike = {};
        golf = 'absolute';
        mike['position'] = golf;
        zulu = 0.78;
        report = zulu * tango;
        mike['height'] = report;
        zulu = zulu * tango;
        mike['width'] = zulu;
        report = _closure1_slot1;
        oscar = _closure1_slot2;
        zulu = 7;
        options = oscar[zulu];
        tango = undefined;
        options = report.bind(tango)(options);
        options = options.radii;
        options = options.round;
        mike['borderRadius'] = options;
        options = 'hidden';
        mike['overflow'] = options;
        entity['imageContainer'] = mike;
        mike = {'height': '100%', 'width': '100%'};
        entity['image'] = mike;
        mike = {};
        options = oscar[zulu];
        options = report.bind(tango)(options);
        options = options.unsafe_rawColors;
        options = options.GREEN_300;
        mike['color'] = options;
        entity['progressPath'] = mike;
        mike = {};
        mike['position'] = golf;
        entity['confetti'] = mike;
        mike = {'backgroundColor': null, 'position': 'absolute', 'top': 0, 'left': 0, 'right': 0, 'bottom': 0, 'zIndex': 2};
        zulu = oscar[zulu];
        zulu = report.bind(tango)(zulu);
        zulu = zulu.colors;
        zulu = zulu.CARD_PRIMARY_BG;
        mike['backgroundColor'] = zulu;
        entity['opacityMask'] = mike;
        return entity;
    };
    tango = golf.bind(options)(tango);
    var _closure1_slot12 = tango;
    tango = {};
    golf = 'function QuestProgressIndicatorTsx1(){const{styles,glowOpacity}=this.__closure;return{...styles.completionGlow,shadowOpacity:glowOpacity.get()};}';
    tango['code'] = golf;
    var _closure1_slot13 = tango;
    tango = {};
    golf = 'function QuestProgressIndicatorTsx2(){const{circumference,animatedProgress}=this.__closure;return{strokeDashoffset:circumference-circumference*animatedProgress.get()};}';
    tango['code'] = golf;
    var _closure1_slot14 = tango;
    tango = {};
    golf = 'function QuestProgressIndicatorTsx3(){const{underlayOpacity,styles}=this.__closure;return{opacity:underlayOpacity.get(),...styles.opacityMask};}';
    tango['code'] = golf;
    var _closure1_slot15 = tango;
    tango = 13;
    tango = oscar[tango];
    oscar = report.bind(entity)(tango);
    report = oscar.fileFinishedImporting;
    tango = 'modules/quests/native/QuestProgressIndicator.tsx';
    tango = report.bind(oscar)(tango);
    mike = function(argFoo) { // Original name: QuestProgressIndicator
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            mike = argFoo;
            backup = mike.quest;
            report = mike.size;
            result = mike.progress;
            var _closure2_slot0 = result;
            output = mike.loading;
            var _closure2_slot1 = output;
            offset = mike.hasConfetti;
            tango = undefined;
            if(!(offset === tango)) { _fun00002_ip = 50; continue _fun00001 }
 48:
            offset = false;
 50:
            var _closure2_slot2 = tango;
            var _closure2_slot3 = tango;
            var _closure2_slot4 = tango;
            var _closure2_slot5 = tango;
            var _closure2_slot6 = tango;
            var _closure2_slot7 = tango;
            var _closure2_slot8 = tango;
            var _closure2_slot9 = tango;
            var _closure2_slot10 = tango;
            var _closure2_slot11 = tango;
            golf = _closure1_slot0;
            zulu = _closure1_slot2;
            mike = 8;
            mike = zulu[mike];
            verify = golf.bind(tango)(mike);
            options = verify.useStateFromStores;
            mike = _closure1_slot7;
            oscar = new Array(1);
            oscar[0] = mike;
            mike = function() {
                entity = _closure1_slot7;
                entity = entity.useReducedMotion;
                return entity;
            };
            oscar = options.bind(verify)(oscar, mike);
            _closure2_slot2 = oscar;
            mike = {'x-sm': 3, 'sm': 3, 'lg': 6};
            sequence = mike[report];
            mike = {'x-sm': 40, 'sm': 64, 'lg': 128};
            kilo = mike[report];
            _closure2_slot3 = kilo;
            quebec = 1;
            mike = {'x-sm': 1.6, 'sm': 1, 'lg': 1.6};
            mike = mike[report];
            _closure2_slot4 = mike;
            context = 2;
            options = kilo / context;
            report = sequence / context;
            record = options - report;
            report = global;
            report = report.Math;
            report = report.PI;
            report = context * report;
            vacuum = report * record;
            _closure2_slot5 = vacuum;
            report = _closure1_slot12;
            foxtrot = report.bind(tango)(kilo);
            _closure2_slot6 = foxtrot;
            report = 4;
            options = zulu[report];
            verify = golf.bind(tango)(options);
            options = verify.useSharedValue;
            papa = options.bind(verify)(result);
            _closure2_slot7 = papa;
            zulu = zulu[report];
            options = golf.bind(tango)(zulu);
            golf = options.useSharedValue;
            whiskey = 0;
            zulu = 0;
            if(!output) { _fun00002_ip = 323; continue _fun00001 }
 313:
            zulu = 0.7;
 323:
            echo = golf.bind(options)(zulu);
            _closure2_slot8 = echo;
            golf = backup.userStatus;
            verify = null;
            options = verify == golf;
            zulu = undefined;
            if(options) { _fun00002_ip = 355; continue _fun00001 }
 349:
            zulu = golf.completedAt;
 355:
            sizing = verify != zulu;
            _closure2_slot9 = sizing;
            golf = _closure1_slot0;
            zulu = _closure1_slot2;
            zulu = zulu[report];
            options = golf.bind(tango)(zulu);
            golf = options.useSharedValue;
            zulu = 0;
            if(!sizing) { _fun00002_ip = 393; continue _fun00001 }
 390:
            zulu = quebec;
 393:
            options = golf.bind(options)(zulu);
            _closure2_slot10 = options;
            update = _closure1_slot0;
            config = _closure1_slot2;
            zulu = config[report];
            yankee = update.bind(tango)(zulu);
            golf = yankee.useAnimatedStyle;
            zulu = function() { // Original name: I
                entity = {};
                zulu = _closure2_slot6;
                tango = zulu.completionGlow;
                report = entity;
                zulu = copyDataProperties(report, tango);
                zulu = _closure2_slot10;
                mike = zulu.get;
                zulu = mike.bind(zulu)();
                mike = 'shadowOpacity';
                entity[mike] = zulu;
                return entity;
            };
            source = {};
            source['styles'] = foxtrot;
            source['glowOpacity'] = options;
            zulu['__closure'] = source;
            source = 6810183053526.0;
            zulu['__workletHash'] = source;
            source = _closure1_slot13;
            zulu['__initData'] = source;
            yankee = golf.bind(yankee)(zulu);
            zulu = config[report];
            source = update.bind(tango)(zulu);
            golf = source.useAnimatedProps;
            zulu = function() { // Original name: O
                entity = {};
                zulu = _closure2_slot5;
                tango = _closure2_slot7;
                mike = tango.get;
                mike = mike.bind(tango)();
                mike = zulu * mike;
                mike = zulu - mike;
                entity['strokeDashoffset'] = mike;
                return entity;
            };
            control = {};
            control['circumference'] = vacuum;
            control['animatedProgress'] = papa;
            zulu['__closure'] = control;
            control = 17281152506254.0;
            zulu['__workletHash'] = control;
            control = _closure1_slot14;
            zulu['__initData'] = control;
            control = golf.bind(source)(zulu);
            zulu = config[report];
            source = update.bind(tango)(zulu);
            golf = source.useAnimatedStyle;
            zulu = function() { // Original name: A
                entity = {};
                tango = _closure2_slot8;
                zulu = tango.get;
                zulu = zulu.bind(tango)();
                entity['opacity'] = zulu;
                mike = _closure2_slot6;
                report = mike.opacityMask;
                oscar = entity;
                mike = copyDataProperties(oscar, report);
                return entity;
            };
            target = {};
            target['underlayOpacity'] = echo;
            target['styles'] = foxtrot;
            zulu['__closure'] = target;
            target = 4427598698568.0;
            zulu['__workletHash'] = target;
            target = _closure1_slot15;
            zulu['__initData'] = target;
            golf = golf.bind(source)(zulu);
            zulu = _closure1_slot4;
            source = new Array(3);
            source[0] = papa;
            source[1] = result;
            source[2] = oscar;
            result = function() {
                _fun00003: for(var _fun00004_ip = 0; ; ) switch(_fun00004_ip) {
 0:
                    zulu = _closure2_slot7;
                    mike = zulu.set;
                    report = _closure1_slot0;
                    tango = _closure1_slot2;
                    entity = 9;
                    tango = tango[entity];
                    entity = undefined;
                    oscar = report.bind(entity)(tango);
                    report = oscar.withTiming;
                    tango = _closure2_slot0;
                    entity = {};
                    options = _closure2_slot2;
                    golf = 500;
                    if(!options) { _fun00004_ip = 63; continue _fun00003 }
 61:
                    golf = 0;
 63:
                    entity['duration'] = golf;
                    entity = report.bind(oscar)(tango, entity);
                    entity = mike.bind(zulu)(entity);
                    entity = function() {
                        zulu = _closure1_slot0;
                        mike = _closure1_slot2;
                        entity = 4;
                        mike = mike[entity];
                        entity = undefined;
                        tango = zulu.bind(entity)(mike);
                        zulu = tango.cancelAnimation;
                        mike = _closure2_slot7;
                        mike = zulu.bind(tango)(mike);
                        return entity;
                    };
                    return entity;
                }
            };
            result = zulu.bind(tango)(result, source);
            result = new Array(2);
            result[0] = echo;
            result[1] = output;
            output = function() {
                _fun00005: for(var _fun00006_ip = 0; ; ) switch(_fun00006_ip) {
 0:
                    zulu = _closure2_slot8;
                    mike = zulu.set;
                    oscar = _closure1_slot0;
                    report = _closure1_slot2;
                    tango = 9;
                    report = report[tango];
                    tango = undefined;
                    oscar = oscar.bind(tango)(report);
                    report = oscar.withTiming;
                    entity = _closure2_slot1;
                    tango = 0;
                    if(!entity) { _fun00006_ip = 61; continue _fun00005 }
 51:
                    tango = 0.7;
 61:
                    entity = {};
                    golf = 500;
                    entity['duration'] = golf;
                    entity = report.bind(oscar)(tango, entity);
                    entity = mike.bind(zulu)(entity);
                    entity = function() {
                        zulu = _closure1_slot0;
                        mike = _closure1_slot2;
                        entity = 4;
                        mike = mike[entity];
                        entity = undefined;
                        tango = zulu.bind(entity)(mike);
                        zulu = tango.cancelAnimation;
                        mike = _closure2_slot8;
                        mike = zulu.bind(tango)(mike);
                        return entity;
                    };
                    return entity;
                }
            };
            output = zulu.bind(tango)(output, result);
            output = _closure1_slot5;
            result = output.bind(tango)(verify);
            _closure2_slot11 = result;
            echo = _closure1_slot3;
            source = foxtrot.confetti;
            output = new Array(3);
            output[0] = source;
            output[1] = mike;
            output[2] = kilo;
            mike = function() {
                entity = {};
                mike = _closure2_slot6;
                report = mike.confetti;
                oscar = entity;
                mike = copyDataProperties(oscar, report);
                tango = _closure2_slot3;
                mike = 'width';
                entity[mike] = tango;
                tango = _closure2_slot3;
                mike = 'height';
                entity[mike] = tango;
                mike = {};
                zulu = _closure2_slot4;
                mike['scale'] = zulu;
                zulu = new Array(1);
                zulu[0] = mike;
                mike = 'transform';
                entity[mike] = zulu;
                return entity;
            };
            output = echo.bind(tango)(mike, output);
            mike = new Array(3);
            mike[0] = sizing;
            mike[1] = options;
            mike[2] = oscar;
            entity = function() {
                _fun00007: for(var _fun00008_ip = 0; ; ) switch(_fun00008_ip) {
 0:
                    mike = _closure2_slot2;
                    if(mike) { _fun00008_ip = 119; continue _fun00007 }
 10:
                    mike = _closure2_slot9;
                    if(!mike) { _fun00008_ip = 119; continue _fun00007 }
 17:
                    mike = _closure2_slot9;
                    if(!mike) { _fun00008_ip = 160; continue _fun00007 }
 27:
                    tango = _closure2_slot10;
                    zulu = tango.set;
                    oscar = _closure1_slot0;
                    report = _closure1_slot2;
                    mike = 9;
                    report = report[mike];
                    mike = undefined;
                    golf = oscar.bind(mike)(report);
                    oscar = golf.withTiming;
                    report = {};
                    mike = 500;
                    report['duration'] = mike;
                    mike = 1;
                    mike = oscar.bind(golf)(mike, report);
                    mike = zulu.bind(tango)(mike);
                    mike = _closure2_slot11;
                    zulu = mike.current;
                    mike = null;
                    if(!(mike != zulu)) { _fun00008_ip = 160; continue _fun00007 }
 107:
                    mike = zulu.play;
                    mike = mike.bind(zulu)();
                    _fun00008_ip = 160; continue _fun00007;
 119:
                    tango = _closure2_slot10;
                    zulu = tango.set;
                    mike = 0;
                    mike = zulu.bind(tango)(mike);
                    entity = _closure2_slot11;
                    mike = entity.current;
                    entity = null;
                    if(!(entity != mike)) { _fun00008_ip = 160; continue _fun00007 }
 150:
                    entity = mike.reset;
                    entity = entity.bind(mike)();
 160:
                    entity = undefined;
                    return entity;
                }
            };
            entity = zulu.bind(tango)(entity, mike);
            zulu = _closure1_slot9;
            oscar = _closure1_slot1;
            entity = config[report];
            entity = oscar.bind(tango)(entity);
            mike = entity.View;
            entity = {};
            sizing = foxtrot.wrapper;
            options = new Array(2);
            options[0] = sizing;
            options[1] = yankee;
            entity['style'] = options;
            source = _closure1_slot8;
            report = config[report];
            report = oscar.bind(tango)(report);
            oscar = report.View;
            report = {};
            report['style'] = golf;
            oscar = source.bind(tango)(oscar, report);
            report = new Array(2);
            report[0] = oscar;
            golf = _closure1_slot6;
            oscar = {};
            options = foxtrot.container;
            oscar['style'] = options;
            echo = 5;
            options = config[echo];
            options = update.bind(tango)(options);
            yankee = options.Svg;
            options = {};
            options['height'] = kilo;
            options['width'] = kilo;
            sizing = foxtrot.canvas;
            options['style'] = sizing;
            sizing = config[echo];
            sizing = update.bind(tango)(sizing);
            papa = sizing.Defs;
            sizing = {};
            target = config[echo];
            target = update.bind(tango)(target);
            status = target.LinearGradient;
            target = {'id': 'underlayGradient', 'x1': '0', 'y1': '0.5', 'x2': '1', 'y2': '0.5'};
            equality = '0';
            variable36 = '1';
            sierra = config[echo];
            sierra = update.bind(tango)(sierra);
            lima = sierra.Stop;
            sierra = {};
            sierra['offset'] = equality;
            equality = _closure1_slot10;
            whiskey = equality[whiskey];
            sierra['stopColor'] = whiskey;
            lima = source.bind(tango)(lima, sierra);
            sierra = new Array(2);
            sierra[0] = lima;
            lima = config[echo];
            lima = update.bind(tango)(lima);
            whiskey = lima.Stop;
            lima = {};
            lima['offset'] = variable36;
            equality = equality[quebec];
            lima['stopColor'] = equality;
            lima = source.bind(tango)(whiskey, lima);
            sierra[1] = lima;
            target['children'] = sierra;
            target = zulu.bind(tango)(status, target);
            sizing['children'] = target;
            papa = source.bind(tango)(papa, sizing);
            sizing = new Array(3);
            sizing[0] = papa;
            echo = config[echo];
            echo = update.bind(tango)(echo);
            update = echo.Circle;
            echo = {};
            config = kilo / context;
            echo['cx'] = config;
            config = kilo / context;
            echo['cy'] = config;
            echo['r'] = record;
            config = 'none';
            echo['fill'] = config;
            papa = 'url(#underlayGradient)';
            echo['stroke'] = papa;
            echo['strokeWidth'] = sequence;
            echo = source.bind(tango)(update, echo);
            sizing[1] = echo;
            update = _closure1_slot11;
            echo = {};
            papa = kilo / context;
            echo['cx'] = papa;
            context = kilo / context;
            echo['cy'] = context;
            echo['r'] = record;
            echo['fill'] = config;
            config = foxtrot.progressPath;
            config = config.color;
            echo['stroke'] = config;
            echo['strokeWidth'] = sequence;
            echo['strokeDasharray'] = vacuum;
            vacuum = 'round';
            echo['strokeLinecap'] = vacuum;
            echo['animatedProps'] = control;
            echo = source.bind(tango)(update, echo);
            sizing[2] = echo;
            options['children'] = sizing;
            yankee = zulu.bind(tango)(yankee, options);
            options = new Array(3);
            options[0] = yankee;
            verify = null;
            if(!offset) { _fun00002_ip = 1335; continue _fun00001 }
 1263:
            sizing = _closure1_slot8;
            yankee = _closure1_slot1;
            echo = _closure1_slot2;
            offset = 10;
            offset = echo[offset];
            yankee = yankee.bind(tango)(offset);
            offset = {};
            offset['ref'] = result;
            offset['style'] = output;
            result = _closure1_slot0;
            output = 11;
            output = echo[output];
            output = result.bind(tango)(output);
            offset['source'] = output;
            output = false;
            offset['autoPlay'] = output;
            offset['loop'] = output;
            verify = sizing.bind(tango)(yankee, offset);
 1335:
            options[1] = verify;
            yankee = _closure1_slot8;
            offset = _closure1_slot6;
            verify = {};
            foxtrot = foxtrot.imageContainer;
            verify['style'] = foxtrot;
            foxtrot = _closure1_slot1;
            sizing = _closure1_slot2;
            romeo = 12;
            romeo = sizing[romeo];
            foxtrot = foxtrot.bind(tango)(romeo);
            romeo = {};
            romeo['quest'] = backup;
            backup = 0.78;
            sizing = backup * kilo;
            romeo['height'] = sizing;
            backup = backup * kilo;
            romeo['width'] = backup;
            romeo = yankee.bind(tango)(foxtrot, romeo);
            verify['children'] = romeo;
            verify = yankee.bind(tango)(offset, verify);
            options[2] = verify;
            oscar['children'] = options;
            oscar = zulu.bind(tango)(golf, oscar);
            report[1] = oscar;
            entity['children'] = report;
            entity = zulu.bind(tango)(mike, entity);
            return entity;
        }
    };
    zulu['default'] = mike;
    return entity;
})();