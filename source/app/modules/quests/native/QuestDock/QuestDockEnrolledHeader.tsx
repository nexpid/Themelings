// app/modules/quests/native/QuestDock/QuestDockEnrolledHeader.tsx
export default (function(_, argBar, argBaz, argCor, __, argFre, argPlu) {
    report = argBar;
    golfie = argBaz;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    var _closure1_slot1 = golfie;
    var _closure1_slot2 = oscard;
    entity = global;
    verify = entity.Object;
    option = verify.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = option.bind(verify)(zuuluu, entity, tangon);
    entity = 0;
    tangon = oscard[entity];
    entity = undefined;
    tangon = golfie.bind(entity)(tangon);
    var _closure1_slot3 = tangon;
    tangon = 1;
    golfie = oscard[tangon];
    tangon = argCor;
    golfie = tangon.bind(entity)(golfie);
    var _closure1_slot4 = golfie;
    tangon = 2;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.View;
    var _closure1_slot5 = tangon;
    tangon = 3;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    option = tangon.jsx;
    var _closure1_slot6 = option;
    tangon = tangon.jsxs;
    var _closure1_slot7 = tangon;
    tangon = 4;
    tangon = oscard[tangon];
    verify = report.bind(entity)(tangon);
    option = verify.createStyles;
    tangon = {};
    offset = {'alignItems': 'center', 'display': 'flex', 'flexDirection': 'row', 'flexGrow': 1, 'flexShrink': 1, 'gap': 8, 'justifyContent': 'center', 'padding': 8};
    tangon['wrapper'] = offset;
    offset = {'flexGrow': 0, 'flexShrink': 0};
    tangon['progressIndicatorWrapper'] = offset;
    offset = {'flexGrow': 1, 'flexShrink': 1};
    tangon['copy'] = offset;
    tangon = option.bind(verify)(tangon);
    var _closure1_slot8 = tangon;
    tangon = golfie.memo;
    michal = function() { // Original name: QuestDockEnrolledHeader
        zuuluu = _closure1_slot4;
        michal = zuuluu.useContext;
        option = _closure1_slot1;
        romeon = _closure1_slot2;
        entity = 5;
        entity = romeon[entity];
        tangon = undefined;
        entity = option.bind(tangon)(entity);
        entity = michal.bind(zuuluu)(entity);
        kiloes = entity.quest;
        entity = _closure1_slot8;
        golfie = entity.bind(tangon)();
        verify = _closure1_slot0;
        entity = 6;
        michal = romeon[entity];
        zuuluu = verify.bind(tangon)(michal);
        michal = zuuluu.useQuestTaskDetails;
        foxtra = michal.bind(zuuluu)(kiloes);
        michal = romeon[entity];
        zuuluu = verify.bind(tangon)(michal);
        michal = zuuluu.useTaskPlatformScreen;
        oscard = michal.bind(zuuluu)(kiloes, foxtra);
        zuuluu = _closure1_slot3;
        michal = 1;
        zuuluu = zuuluu.bind(tangon)(oscard, michal);
        michal = 0;
        oscard = zuuluu[michal];
        michal = romeon[entity];
        zuuluu = verify.bind(tangon)(michal);
        michal = zuuluu.useQuestBarTitle;
        backup = michal.bind(zuuluu)(kiloes);
        entity = romeon[entity];
        zuuluu = verify.bind(tangon)(entity);
        michal = zuuluu.useQuestBarSubtitle;
        entity = {};
        entity['quest'] = kiloes;
        offset = false;
        entity['isExpanded'] = offset;
        entity['activeScreen'] = oscard;
        oscard = 7;
        oscard = romeon[oscard];
        oscard = verify.bind(tangon)(oscard);
        oscard = oscard.QuestContent;
        oscard = oscard.QUEST_BAR_MOBILE;
        entity['sourceQuestContent'] = oscard;
        yankee = michal.bind(zuuluu)(entity);
        zuuluu = _closure1_slot7;
        michal = _closure1_slot5;
        entity = {};
        oscard = golfie.wrapper;
        entity['style'] = oscard;
        offset = _closure1_slot6;
        report = {};
        oscard = golfie.progressIndicatorWrapper;
        report['style'] = oscard;
        oscard = 8;
        oscard = romeon[oscard];
        option = option.bind(tangon)(oscard);
        oscard = {'quest': null, 'size': 'x-sm', 'progress': null, 'loading': false, 'hasConfetti': true};
        oscard['quest'] = kiloes;
        foxtra = foxtra.percentComplete;
        oscard['progress'] = foxtra;
        oscard = offset.bind(tangon)(option, oscard);
        report['children'] = oscard;
        oscard = offset.bind(tangon)(michal, report);
        report = new Array(2);
        report[0] = oscard;
        oscard = {};
        golfie = golfie.copy;
        oscard['style'] = golfie;
        option = 9;
        golfie = romeon[option];
        golfie = verify.bind(tangon)(golfie);
        foxtra = golfie.Text;
        golfie = {'variant': 'heading-md/semibold', 'color': 'header-primary'};
        golfie['children'] = backup;
        foxtra = offset.bind(tangon)(foxtra, golfie);
        golfie = new Array(2);
        golfie[0] = foxtra;
        option = romeon[option];
        option = verify.bind(tangon)(option);
        verify = option.Text;
        option = {'variant': 'text-sm/medium', 'color': 'text-muted'};
        option['children'] = yankee;
        option = offset.bind(tangon)(verify, option);
        golfie[1] = option;
        oscard['children'] = golfie;
        oscard = zuuluu.bind(tangon)(michal, oscard);
        report[1] = oscard;
        entity['children'] = report;
        entity = zuuluu.bind(tangon)(michal, entity);
        return entity;
    };
    michal = tangon.bind(golfie)(michal);
    tangon = 10;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/quests/native/QuestDock/QuestDockEnrolledHeader.tsx';
    tangon = report.bind(oscard)(tangon);
    zuuluu['default'] = michal;
    return entity;
})();