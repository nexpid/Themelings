// app/modules/quests/native/QuestDock/QuestDockEnrolledHeader.tsx
export default (function(_, argBar, argBaz, argCorge, __, argFred, argPlugh) {
    report = argBar;
    golf = argBaz;
    zulu = argFred;
    oscar = argPlugh;
    var _closure1_slot0 = report;
    var _closure1_slot1 = golf;
    var _closure1_slot2 = oscar;
    entity = global;
    verify = entity.Object;
    options = verify.defineProperty;
    tango = {};
    entity = true;
    tango['value'] = entity;
    entity = '__esModule';
    entity = options.bind(verify)(zulu, entity, tango);
    entity = 0;
    tango = oscar[entity];
    entity = undefined;
    tango = golf.bind(entity)(tango);
    var _closure1_slot3 = tango;
    tango = 1;
    golf = oscar[tango];
    tango = argCorge;
    golf = tango.bind(entity)(golf);
    var _closure1_slot4 = golf;
    tango = 2;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.View;
    var _closure1_slot5 = tango;
    tango = 3;
    options = oscar[tango];
    options = report.bind(entity)(options);
    options = options.jsx;
    var _closure1_slot6 = options;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.jsxs;
    var _closure1_slot7 = tango;
    tango = 4;
    tango = oscar[tango];
    verify = report.bind(entity)(tango);
    options = verify.createStyles;
    tango = {};
    offset = {'alignItems': 'center', 'display': 'flex', 'flexDirection': 'row', 'flexGrow': 1, 'flexShrink': 1, 'gap': 8, 'justifyContent': 'center', 'padding': 8};
    tango['wrapper'] = offset;
    offset = {'flexGrow': 0, 'flexShrink': 0};
    tango['progressIndicatorWrapper'] = offset;
    offset = {'flexGrow': 1, 'flexShrink': 1};
    tango['copy'] = offset;
    tango = options.bind(verify)(tango);
    var _closure1_slot8 = tango;
    tango = golf.memo;
    mike = function() { // Original name: QuestDockEnrolledHeader
        zulu = _closure1_slot4;
        mike = zulu.useContext;
        options = _closure1_slot1;
        romeo = _closure1_slot2;
        entity = 5;
        entity = romeo[entity];
        tango = undefined;
        entity = options.bind(tango)(entity);
        entity = mike.bind(zulu)(entity);
        kilo = entity.quest;
        entity = _closure1_slot8;
        golf = entity.bind(tango)();
        verify = _closure1_slot0;
        entity = 6;
        mike = romeo[entity];
        zulu = verify.bind(tango)(mike);
        mike = zulu.useQuestTaskDetails;
        foxtrot = mike.bind(zulu)(kilo);
        mike = romeo[entity];
        zulu = verify.bind(tango)(mike);
        mike = zulu.useTaskPlatformScreen;
        oscar = mike.bind(zulu)(kilo, foxtrot);
        zulu = _closure1_slot3;
        mike = 1;
        zulu = zulu.bind(tango)(oscar, mike);
        mike = 0;
        oscar = zulu[mike];
        mike = romeo[entity];
        zulu = verify.bind(tango)(mike);
        mike = zulu.useQuestBarTitle;
        backup = mike.bind(zulu)(kilo);
        entity = romeo[entity];
        zulu = verify.bind(tango)(entity);
        mike = zulu.useQuestBarSubtitle;
        entity = false;
        yankee = mike.bind(zulu)(kilo, entity, oscar);
        zulu = _closure1_slot7;
        mike = _closure1_slot5;
        entity = {};
        oscar = golf.wrapper;
        entity['style'] = oscar;
        offset = _closure1_slot6;
        report = {};
        oscar = golf.progressIndicatorWrapper;
        report['style'] = oscar;
        oscar = 7;
        oscar = romeo[oscar];
        options = options.bind(tango)(oscar);
        oscar = {'quest': null, 'size': 'x-sm', 'progress': null, 'loading': false, 'hasConfetti': true};
        oscar['quest'] = kilo;
        foxtrot = foxtrot.percentComplete;
        oscar['progress'] = foxtrot;
        oscar = offset.bind(tango)(options, oscar);
        report['children'] = oscar;
        oscar = offset.bind(tango)(mike, report);
        report = new Array(2);
        report[0] = oscar;
        oscar = {};
        golf = golf.copy;
        oscar['style'] = golf;
        options = 8;
        golf = romeo[options];
        golf = verify.bind(tango)(golf);
        foxtrot = golf.Text;
        golf = {'variant': 'heading-md/semibold', 'color': 'header-primary'};
        golf['children'] = backup;
        foxtrot = offset.bind(tango)(foxtrot, golf);
        golf = new Array(2);
        golf[0] = foxtrot;
        options = romeo[options];
        options = verify.bind(tango)(options);
        verify = options.Text;
        options = {'variant': 'text-sm/medium', 'color': 'text-muted'};
        options['children'] = yankee;
        options = offset.bind(tango)(verify, options);
        golf[1] = options;
        oscar['children'] = golf;
        oscar = zulu.bind(tango)(mike, oscar);
        report[1] = oscar;
        entity['children'] = report;
        entity = zulu.bind(tango)(mike, entity);
        return entity;
    };
    mike = tango.bind(golf)(mike);
    tango = 9;
    tango = oscar[tango];
    oscar = report.bind(entity)(tango);
    report = oscar.fileFinishedImporting;
    tango = 'modules/quests/native/QuestDock/QuestDockEnrolledHeader.tsx';
    tango = report.bind(oscar)(tango);
    zulu['default'] = mike;
    return entity;
})();