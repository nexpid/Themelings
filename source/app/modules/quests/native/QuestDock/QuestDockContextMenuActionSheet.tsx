// app/modules/quests/native/QuestDock/QuestDockContextMenuActionSheet.tsx
export default (function(argFoo, argBar, argBaz, argCorge, _, argFred, argPlugh) {
    report = argBar;
    golf = argBaz;
    zulu = argFred;
    oscar = argPlugh;
    var _closure1_slot0 = report;
    var _closure1_slot1 = golf;
    var _closure1_slot2 = oscar;
    entity = global;
    verify = entity.Object;
    options = verify.defineProperty;
    tango = {};
    entity = true;
    tango['value'] = entity;
    entity = '__esModule';
    entity = options.bind(verify)(zulu, entity, tango);
    entity = 0;
    tango = oscar[entity];
    entity = undefined;
    tango = golf.bind(entity)(tango);
    var _closure1_slot3 = tango;
    tango = 1;
    golf = oscar[tango];
    tango = argCorge;
    tango = tango.bind(entity)(golf);
    tango = 2;
    golf = oscar[tango];
    golf = report.bind(entity)(golf);
    golf = golf.jsx;
    var _closure1_slot4 = golf;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.jsxs;
    var _closure1_slot5 = tango;
    tango = 20;
    tango = oscar[tango];
    oscar = report.bind(entity)(tango);
    report = oscar.fileFinishedImporting;
    tango = 'modules/quests/native/QuestDock/QuestDockContextMenuActionSheet.tsx';
    tango = report.bind(oscar)(tango);
    mike = function(argFoo) { // Original name: QuestDockContextMenuActionSheet
        entity = argFoo;
        entity = entity.quest;
        var _closure2_slot0 = entity;
        tango = _closure1_slot5;
        output = _closure1_slot0;
        result = _closure1_slot2;
        entity = 3;
        entity = result[entity];
        zulu = undefined;
        entity = output.bind(zulu)(entity);
        mike = entity.ActionSheet;
        entity = {};
        sizing = 4;
        report = result[sizing];
        report = output.bind(zulu)(report);
        report = report.ActionSheetRow;
        oscar = report.Group;
        report = {};
        yankee = _closure1_slot4;
        golf = result[sizing];
        golf = output.bind(zulu)(golf);
        options = golf.ActionSheetRow;
        golf = {};
        verify = result[sizing];
        verify = output.bind(zulu)(verify);
        verify = verify.ActionSheetRow;
        offset = verify.Icon;
        verify = {};
        backup = 5;
        backup = result[backup];
        backup = output.bind(zulu)(backup);
        backup = backup.LinkExternalMediumIcon;
        verify['IconComponent'] = backup;
        verify = yankee.bind(zulu)(offset, verify);
        golf['icon'] = verify;
        kilo = 6;
        verify = result[kilo];
        verify = output.bind(zulu)(verify);
        offset = verify.FormLabel;
        verify = {};
        backup = 7;
        echo = result[backup];
        echo = output.bind(zulu)(echo);
        source = echo.intl;
        update = source.string;
        echo = result[backup];
        echo = output.bind(zulu)(echo);
        echo = echo.t;
        echo = echo.lwQdjI;
        echo = update.bind(source)(echo);
        verify['text'] = echo;
        verify = yankee.bind(zulu)(offset, verify);
        golf['label'] = verify;
        verify = function() { // Original name: onPress
            verify = _closure1_slot0;
            tango = _closure1_slot2;
            entity = 8;
            zulu = tango[entity];
            entity = undefined;
            golf = verify.bind(entity)(zulu);
            oscar = golf.openGameLink;
            report = _closure2_slot0;
            zulu = {};
            options = 9;
            options = tango[options];
            options = verify.bind(entity)(options);
            options = options.QuestContent;
            options = options.QUEST_BAR_MOBILE;
            zulu['content'] = options;
            options = 10;
            options = tango[options];
            options = verify.bind(entity)(options);
            options = options.QuestContentCTA;
            options = options.CONTEXT_MENU_OPEN_GAME_LINK;
            zulu['ctaContent'] = options;
            zulu = oscar.bind(golf)(report, zulu);
            zulu = _closure1_slot1;
            mike = 11;
            mike = tango[mike];
            zulu = zulu.bind(entity)(mike);
            mike = zulu.hideActionSheet;
            mike = mike.bind(zulu)();
            return entity;
        };
        golf['onPress'] = verify;
        options = yankee.bind(zulu)(options, golf);
        golf = new Array(2);
        golf[0] = options;
        options = result[sizing];
        options = output.bind(zulu)(options);
        verify = options.ActionSheetRow;
        options = {};
        offset = result[sizing];
        offset = output.bind(zulu)(offset);
        offset = offset.ActionSheetRow;
        echo = offset.Icon;
        offset = {};
        update = 12;
        update = result[update];
        update = output.bind(zulu)(update);
        update = update.CopyIcon;
        offset['IconComponent'] = update;
        offset = yankee.bind(zulu)(echo, offset);
        options['icon'] = offset;
        offset = result[kilo];
        offset = output.bind(zulu)(offset);
        echo = offset.FormLabel;
        offset = {};
        update = result[backup];
        update = output.bind(zulu)(update);
        control = update.intl;
        source = control.string;
        update = result[backup];
        update = output.bind(zulu)(update);
        update = update.t;
        update = update.WqhZsr;
        update = source.bind(control)(update);
        offset['text'] = update;
        offset = yankee.bind(zulu)(echo, offset);
        options['label'] = offset;
        offset = function() { // Original name: onPress
            verify = _closure1_slot0;
            tango = _closure1_slot2;
            entity = 8;
            zulu = tango[entity];
            entity = undefined;
            golf = verify.bind(entity)(zulu);
            oscar = golf.copyShareLink;
            zulu = _closure2_slot0;
            report = zulu.id;
            zulu = {};
            options = 9;
            options = tango[options];
            options = verify.bind(entity)(options);
            options = options.QuestContent;
            options = options.QUEST_BAR_MOBILE;
            zulu['content'] = options;
            options = 10;
            options = tango[options];
            options = verify.bind(entity)(options);
            options = options.QuestContentCTA;
            options = options.CONTEXT_MENU_COPY_LINK;
            zulu['ctaContent'] = options;
            zulu = oscar.bind(golf)(report, zulu);
            zulu = _closure1_slot1;
            mike = 11;
            mike = tango[mike];
            zulu = zulu.bind(entity)(mike);
            mike = zulu.hideActionSheet;
            mike = mike.bind(zulu)();
            return entity;
        };
        options['onPress'] = offset;
        options = yankee.bind(zulu)(verify, options);
        golf[1] = options;
        report['children'] = golf;
        oscar = tango.bind(zulu)(oscar, report);
        report = new Array(2);
        report[0] = oscar;
        oscar = result[sizing];
        oscar = output.bind(zulu)(oscar);
        oscar = oscar.ActionSheetRow;
        golf = oscar.Group;
        oscar = {};
        options = result[sizing];
        options = output.bind(zulu)(options);
        verify = options.ActionSheetRow;
        options = {};
        offset = result[sizing];
        offset = output.bind(zulu)(offset);
        offset = offset.ActionSheetRow;
        echo = offset.Icon;
        offset = {};
        source = _closure1_slot1;
        update = 13;
        update = result[update];
        update = source.bind(zulu)(update);
        offset['IconComponent'] = update;
        offset = yankee.bind(zulu)(echo, offset);
        options['icon'] = offset;
        offset = result[kilo];
        offset = output.bind(zulu)(offset);
        echo = offset.FormLabel;
        offset = {};
        update = result[backup];
        update = output.bind(zulu)(update);
        control = update.intl;
        source = control.string;
        update = result[backup];
        update = output.bind(zulu)(update);
        update = update.t;
        update = update.LLLLPD;
        update = source.bind(control)(update);
        offset['text'] = update;
        offset = yankee.bind(zulu)(echo, offset);
        options['label'] = offset;
        offset = function() { // Original name: onPress
            report = _closure1_slot0;
            tango = _closure1_slot2;
            verify = 10;
            zulu = tango[verify];
            entity = undefined;
            options = report.bind(entity)(zulu);
            oscar = options.trackQuestContentClicked;
            zulu = {};
            golf = _closure2_slot0;
            offset = golf.id;
            zulu['questId'] = offset;
            offset = 9;
            offset = tango[offset];
            offset = report.bind(entity)(offset);
            offset = offset.QuestContent;
            offset = offset.QUEST_BAR_MOBILE;
            zulu['questContent'] = offset;
            verify = tango[verify];
            verify = report.bind(entity)(verify);
            verify = verify.QuestContentCTA;
            verify = verify.CONTEXT_MENU_LEARN_MORE;
            zulu['questContentCTA'] = verify;
            zulu = oscar.bind(options)(zulu);
            zulu = 14;
            zulu = tango[zulu];
            oscar = report.bind(entity)(zulu);
            report = oscar.openQuestHome;
            zulu = {};
            golf = golf.id;
            zulu['scrollToQuestId'] = golf;
            zulu = report.bind(oscar)(zulu);
            zulu = _closure1_slot1;
            mike = 11;
            mike = tango[mike];
            zulu = zulu.bind(entity)(mike);
            mike = zulu.hideActionSheet;
            mike = mike.bind(zulu)();
            return entity;
        };
        options['onPress'] = offset;
        verify = yankee.bind(zulu)(verify, options);
        options = new Array(3);
        options[0] = verify;
        verify = result[sizing];
        verify = output.bind(zulu)(verify);
        offset = verify.ActionSheetRow;
        verify = {};
        echo = result[sizing];
        echo = output.bind(zulu)(echo);
        echo = echo.ActionSheetRow;
        update = echo.Icon;
        echo = {};
        source = 15;
        source = result[source];
        source = output.bind(zulu)(source);
        source = source.CircleQuestionIcon;
        echo['IconComponent'] = source;
        echo = yankee.bind(zulu)(update, echo);
        verify['icon'] = echo;
        echo = result[kilo];
        echo = output.bind(zulu)(echo);
        update = echo.FormLabel;
        echo = {};
        source = result[backup];
        source = output.bind(zulu)(source);
        vacuum = source.intl;
        control = vacuum.string;
        source = result[backup];
        source = output.bind(zulu)(source);
        source = source.t;
        source = source.GcsZKC;
        source = control.bind(vacuum)(source);
        echo['text'] = source;
        echo = yankee.bind(zulu)(update, echo);
        verify['label'] = echo;
        echo = function() { // Original name: onPress
            zulu = _closure1_slot1;
            tango = _closure1_slot2;
            entity = 16;
            mike = tango[entity];
            entity = undefined;
            oscar = zulu.bind(entity)(mike);
            report = oscar.showModal;
            mike = {};
            golf = _closure2_slot0;
            mike['quest'] = golf;
            golf = true;
            mike['isTargetedDisclosure'] = golf;
            golf = {};
            verify = _closure1_slot0;
            options = 9;
            options = tango[options];
            options = verify.bind(entity)(options);
            options = options.QuestContent;
            options = options.QUEST_BAR_MOBILE;
            golf['content'] = options;
            options = 10;
            options = tango[options];
            options = verify.bind(entity)(options);
            options = options.QuestContentCTA;
            options = options.CONTEXT_MENU_OPEN_DISCLOSURE;
            golf['ctaContent'] = options;
            mike['trackingCtx'] = golf;
            mike = report.bind(oscar)(mike);
            mike = 11;
            mike = tango[mike];
            zulu = zulu.bind(entity)(mike);
            mike = zulu.hideActionSheet;
            mike = mike.bind(zulu)();
            return entity;
        };
        verify['onPress'] = echo;
        verify = yankee.bind(zulu)(offset, verify);
        options[1] = verify;
        verify = result[sizing];
        verify = output.bind(zulu)(verify);
        offset = verify.ActionSheetRow;
        verify = {};
        sizing = result[sizing];
        sizing = output.bind(zulu)(sizing);
        sizing = sizing.ActionSheetRow;
        echo = sizing.Icon;
        sizing = {};
        update = 17;
        update = result[update];
        update = output.bind(zulu)(update);
        update = update.XSmallIcon;
        sizing['IconComponent'] = update;
        sizing = yankee.bind(zulu)(echo, sizing);
        verify['icon'] = sizing;
        kilo = result[kilo];
        kilo = output.bind(zulu)(kilo);
        sizing = kilo.FormLabel;
        kilo = {};
        echo = result[backup];
        echo = output.bind(zulu)(echo);
        source = echo.intl;
        update = source.string;
        echo = result[backup];
        echo = output.bind(zulu)(echo);
        echo = echo.t;
        echo = echo.NN79Ex;
        echo = update.bind(source)(echo);
        kilo['text'] = echo;
        kilo = yankee.bind(zulu)(sizing, kilo);
        verify['label'] = kilo;
        kilo = result[backup];
        kilo = output.bind(zulu)(kilo);
        sizing = kilo.intl;
        kilo = sizing.string;
        backup = result[backup];
        backup = output.bind(zulu)(backup);
        backup = backup.t;
        backup = backup.V6htNz;
        backup = kilo.bind(sizing)(backup);
        verify['subLabel'] = backup;
        foxtrot = _closure1_slot3;
        romeo = function* () {
            entity = function* () { // Original name: ?anon_0_
                _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
                    StartGenerator();
                    ResumeGenerator(result_out_reg=0, return_bool_out_reg=1);
                    if(mike) { _fun00002_ip = 242; continue _fun00001 }
 10:
                    verify = _closure1_slot0;
                    offset = _closure1_slot2;
                    mike = 18;
                    mike = offset[mike];
                    zulu = undefined;
                    golf = verify.bind(zulu)(mike);
                    oscar = golf.dismissQuestContent;
                    romeo = _closure2_slot0;
                    report = romeo.id;
                    yankee = 9;
                    mike = offset[yankee];
                    mike = verify.bind(zulu)(mike);
                    mike = mike.QuestContent;
                    mike = mike.QUEST_BAR_MOBILE;
                    mike = oscar.bind(golf)(report, mike);
                    oscar = _closure1_slot1;
                    report = 11;
                    report = offset[report];
                    oscar = oscar.bind(zulu)(report);
                    report = oscar.hideActionSheet;
                    report = report.bind(oscar)();
                    options = 10;
                    report = offset[options];
                    golf = verify.bind(zulu)(report);
                    oscar = golf.trackQuestContentClicked;
                    report = {};
                    romeo = romeo.id;
                    report['questId'] = romeo;
                    yankee = offset[yankee];
                    yankee = verify.bind(zulu)(yankee);
                    yankee = yankee.QuestContent;
                    yankee = yankee.QUEST_BAR_MOBILE;
                    report['questContent'] = yankee;
                    options = offset[options];
                    options = verify.bind(zulu)(options);
                    options = options.QuestContentCTA;
                    options = options.CONTEXT_MENU_HIDE_CONTENT;
                    report['questContentCTA'] = options;
                    report = oscar.bind(golf)(report);
                    SaveGenerator(address=200);
 198:
                    return mike;
 200:
                    ResumeGenerator(result_out_reg=1, return_bool_out_reg=4);
                    if(report) { _fun00002_ip = 239; continue _fun00001 }
 206:
                    report = _closure1_slot0;
                    oscar = _closure1_slot2;
                    tango = 19;
                    tango = oscar[tango];
                    report = report.bind(zulu)(tango);
                    tango = report.displayQuestDismissalToast;
                    tango = tango.bind(report)();
                    return zulu;
 239:
                    return mike;
 242:
                    return entity;
                }
            };
            return entity;
        };
        romeo = foxtrot.bind(zulu)(romeo);
        verify['onPress'] = romeo;
        verify = yankee.bind(zulu)(offset, verify);
        options[2] = verify;
        oscar['children'] = options;
        oscar = tango.bind(zulu)(golf, oscar);
        report[1] = oscar;
        entity['children'] = report;
        entity = tango.bind(zulu)(mike, entity);
        return entity;
    };
    zulu['default'] = mike;
    return entity;
})();