// app/modules/quests/native/QuestDock/QuestDockContextMenuActionSheet.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    report = argBar;
    golfie = argBaz;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    var _closure1_slot1 = golfie;
    var _closure1_slot2 = oscard;
    entity = global;
    verify = entity.Object;
    option = verify.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = option.bind(verify)(zuuluu, entity, tangon);
    entity = 0;
    tangon = oscard[entity];
    entity = undefined;
    tangon = golfie.bind(entity)(tangon);
    var _closure1_slot3 = tangon;
    tangon = 1;
    golfie = oscard[tangon];
    tangon = argCor;
    tangon = tangon.bind(entity)(golfie);
    tangon = 2;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.QuestsExperimentLocations;
    var _closure1_slot4 = tangon;
    tangon = 3;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    golfie = tangon.jsx;
    var _closure1_slot5 = golfie;
    tangon = tangon.jsxs;
    var _closure1_slot6 = tangon;
    tangon = 22;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/quests/native/QuestDock/QuestDockContextMenuActionSheet.tsx';
    tangon = report.bind(oscard)(tangon);
    michal = function(argFoo) { // Original name: QuestDockContextMenuActionSheet
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            entity = argFoo;
            kiloes = entity.quest;
            var _closure2_slot0 = kiloes;
            yankee = _closure1_slot0;
            offset = _closure1_slot2;
            entity = 4;
            entity = offset[entity];
            tangon = undefined;
            report = yankee.bind(tangon)(entity);
            zuuluu = report.useShouldAllowMobileVideoTask;
            michal = kiloes.config;
            entity = {};
            oscard = _closure1_slot4;
            oscard = oscard.QUESTS_BAR_MOBILE;
            entity['location'] = oscard;
            romeon = zuuluu.bind(report)(michal, entity);
            zuuluu = _closure1_slot6;
            entity = 5;
            entity = offset[entity];
            entity = yankee.bind(tangon)(entity);
            michal = entity.ActionSheet;
            entity = {};
            output = 6;
            report = offset[output];
            report = yankee.bind(tangon)(report);
            report = report.ActionSheetRow;
            oscard = report.Group;
            report = {};
            verify = _closure1_slot5;
            golfie = offset[output];
            golfie = yankee.bind(tangon)(golfie);
            option = golfie.ActionSheetRow;
            golfie = {};
            sizing = offset[output];
            sizing = yankee.bind(tangon)(sizing);
            sizing = sizing.ActionSheetRow;
            result = sizing.Icon;
            sizing = {};
            echoed = 7;
            echoed = offset[echoed];
            echoed = yankee.bind(tangon)(echoed);
            echoed = echoed.LinkExternalMediumIcon;
            sizing['IconComponent'] = echoed;
            sizing = verify.bind(tangon)(result, sizing);
            golfie['icon'] = sizing;
            sizing = 8;
            offset = offset[sizing];
            offset = yankee.bind(tangon)(offset);
            yankee = offset.FormLabel;
            offset = {};
            echoed = _closure1_slot0;
            update = _closure1_slot2;
            if(romeon) { _fun00002_ip = 280; continue _fun00001 }
 231:
            romeon = 10;
            result = update[romeon];
            result = echoed.bind(tangon)(result);
            source = result.intl;
            result = source.string;
            romeon = update[romeon];
            romeon = echoed.bind(tangon)(romeon);
            romeon = romeon.t;
            romeon = romeon.lwQdjI;
            romeon = result.bind(source)(romeon);
            _fun00002_ip = 308; continue _fun00001;
 280:
            result = 9;
            result = update[result];
            echoed = echoed.bind(tangon)(result);
            result = echoed.getVideoQuestEndCardCtaText;
            kiloes = kiloes.config;
            romeon = result.bind(echoed)(kiloes);
 308:
            offset['text'] = romeon;
            offset = verify.bind(tangon)(yankee, offset);
            golfie['label'] = offset;
            offset = function() { // Original name: onPress
                verify = _closure1_slot0;
                tangon = _closure1_slot2;
                entity = 9;
                zuuluu = tangon[entity];
                entity = undefined;
                golfie = verify.bind(entity)(zuuluu);
                oscard = golfie.openGameLink;
                report = _closure2_slot0;
                zuuluu = {};
                option = 11;
                option = tangon[option];
                option = verify.bind(entity)(option);
                option = option.QuestContent;
                option = option.QUEST_BAR_MOBILE;
                zuuluu['content'] = option;
                option = 12;
                option = tangon[option];
                option = verify.bind(entity)(option);
                option = option.QuestContentCTA;
                option = option.CONTEXT_MENU_OPEN_GAME_LINK;
                zuuluu['ctaContent'] = option;
                zuuluu = oscard.bind(golfie)(report, zuuluu);
                zuuluu = _closure1_slot1;
                michal = 13;
                michal = tangon[michal];
                zuuluu = zuuluu.bind(entity)(michal);
                michal = zuuluu.hideActionSheet;
                michal = michal.bind(zuuluu)();
                return entity;
            };
            golfie['onPress'] = offset;
            option = verify.bind(tangon)(option, golfie);
            golfie = new Array(2);
            golfie[0] = option;
            romeon = _closure1_slot5;
            result = _closure1_slot0;
            echoed = _closure1_slot2;
            option = echoed[output];
            option = result.bind(tangon)(option);
            verify = option.ActionSheetRow;
            option = {};
            offset = echoed[output];
            offset = result.bind(tangon)(offset);
            offset = offset.ActionSheetRow;
            yankee = offset.Icon;
            offset = {};
            kiloes = 14;
            kiloes = echoed[kiloes];
            kiloes = result.bind(tangon)(kiloes);
            kiloes = kiloes.CopyIcon;
            offset['IconComponent'] = kiloes;
            offset = romeon.bind(tangon)(yankee, offset);
            option['icon'] = offset;
            offset = echoed[sizing];
            offset = result.bind(tangon)(offset);
            yankee = offset.FormLabel;
            offset = {};
            kiloes = 10;
            update = echoed[kiloes];
            update = result.bind(tangon)(update);
            ctrled = update.intl;
            source = ctrled.string;
            update = echoed[kiloes];
            update = result.bind(tangon)(update);
            update = update.t;
            update = update.WqhZsr;
            update = source.bind(ctrled)(update);
            offset['text'] = update;
            offset = romeon.bind(tangon)(yankee, offset);
            option['label'] = offset;
            offset = function() { // Original name: onPress
                verify = _closure1_slot0;
                tangon = _closure1_slot2;
                entity = 9;
                zuuluu = tangon[entity];
                entity = undefined;
                golfie = verify.bind(entity)(zuuluu);
                oscard = golfie.copyShareLink;
                zuuluu = _closure2_slot0;
                report = zuuluu.id;
                zuuluu = {};
                option = 11;
                option = tangon[option];
                option = verify.bind(entity)(option);
                option = option.QuestContent;
                option = option.QUEST_BAR_MOBILE;
                zuuluu['content'] = option;
                option = 12;
                option = tangon[option];
                option = verify.bind(entity)(option);
                option = option.QuestContentCTA;
                option = option.CONTEXT_MENU_COPY_LINK;
                zuuluu['ctaContent'] = option;
                zuuluu = oscard.bind(golfie)(report, zuuluu);
                zuuluu = _closure1_slot1;
                michal = 13;
                michal = tangon[michal];
                zuuluu = zuuluu.bind(entity)(michal);
                michal = zuuluu.hideActionSheet;
                michal = michal.bind(zuuluu)();
                return entity;
            };
            option['onPress'] = offset;
            option = romeon.bind(tangon)(verify, option);
            golfie[1] = option;
            report['children'] = golfie;
            oscard = zuuluu.bind(tangon)(oscard, report);
            report = new Array(2);
            report[0] = oscard;
            option = _closure1_slot6;
            oscard = echoed[output];
            oscard = result.bind(tangon)(oscard);
            oscard = oscard.ActionSheetRow;
            golfie = oscard.Group;
            oscard = {};
            verify = echoed[output];
            verify = result.bind(tangon)(verify);
            offset = verify.ActionSheetRow;
            verify = {};
            yankee = echoed[output];
            yankee = result.bind(tangon)(yankee);
            yankee = yankee.ActionSheetRow;
            update = yankee.Icon;
            yankee = {};
            ctrled = _closure1_slot1;
            source = 15;
            source = echoed[source];
            source = ctrled.bind(tangon)(source);
            yankee['IconComponent'] = source;
            yankee = romeon.bind(tangon)(update, yankee);
            verify['icon'] = yankee;
            yankee = echoed[sizing];
            yankee = result.bind(tangon)(yankee);
            update = yankee.FormLabel;
            yankee = {};
            source = echoed[kiloes];
            source = result.bind(tangon)(source);
            vacuum = source.intl;
            ctrled = vacuum.string;
            source = echoed[kiloes];
            source = result.bind(tangon)(source);
            source = source.t;
            source = source.LLLLPD;
            source = ctrled.bind(vacuum)(source);
            yankee['text'] = source;
            yankee = romeon.bind(tangon)(update, yankee);
            verify['label'] = yankee;
            yankee = function() { // Original name: onPress
                report = _closure1_slot0;
                tangon = _closure1_slot2;
                verify = 12;
                zuuluu = tangon[verify];
                entity = undefined;
                option = report.bind(entity)(zuuluu);
                oscard = option.trackQuestContentClicked;
                zuuluu = {};
                golfie = _closure2_slot0;
                offset = golfie.id;
                zuuluu['questId'] = offset;
                offset = 11;
                offset = tangon[offset];
                offset = report.bind(entity)(offset);
                offset = offset.QuestContent;
                offset = offset.QUEST_BAR_MOBILE;
                zuuluu['questContent'] = offset;
                verify = tangon[verify];
                verify = report.bind(entity)(verify);
                verify = verify.QuestContentCTA;
                verify = verify.CONTEXT_MENU_LEARN_MORE;
                zuuluu['questContentCTA'] = verify;
                zuuluu = oscard.bind(option)(zuuluu);
                zuuluu = 16;
                zuuluu = tangon[zuuluu];
                oscard = report.bind(entity)(zuuluu);
                report = oscard.openQuestHome;
                zuuluu = {};
                golfie = golfie.id;
                zuuluu['scrollToQuestId'] = golfie;
                zuuluu = report.bind(oscard)(zuuluu);
                zuuluu = _closure1_slot1;
                michal = 13;
                michal = tangon[michal];
                zuuluu = zuuluu.bind(entity)(michal);
                michal = zuuluu.hideActionSheet;
                michal = michal.bind(zuuluu)();
                return entity;
            };
            verify['onPress'] = yankee;
            offset = romeon.bind(tangon)(offset, verify);
            verify = new Array(3);
            verify[0] = offset;
            offset = echoed[output];
            offset = result.bind(tangon)(offset);
            yankee = offset.ActionSheetRow;
            offset = {};
            update = echoed[output];
            update = result.bind(tangon)(update);
            update = update.ActionSheetRow;
            source = update.Icon;
            update = {};
            ctrled = 17;
            ctrled = echoed[ctrled];
            ctrled = result.bind(tangon)(ctrled);
            ctrled = ctrled.CircleQuestionIcon;
            update['IconComponent'] = ctrled;
            update = romeon.bind(tangon)(source, update);
            offset['icon'] = update;
            update = echoed[sizing];
            update = result.bind(tangon)(update);
            source = update.FormLabel;
            update = {};
            ctrled = echoed[kiloes];
            ctrled = result.bind(tangon)(ctrled);
            sequen = ctrled.intl;
            vacuum = sequen.string;
            ctrled = echoed[kiloes];
            ctrled = result.bind(tangon)(ctrled);
            ctrled = ctrled.t;
            ctrled = ctrled.GcsZKC;
            ctrled = vacuum.bind(sequen)(ctrled);
            update['text'] = ctrled;
            update = romeon.bind(tangon)(source, update);
            offset['label'] = update;
            update = function() { // Original name: onPress
                zuuluu = _closure1_slot1;
                tangon = _closure1_slot2;
                entity = 18;
                michal = tangon[entity];
                entity = undefined;
                oscard = zuuluu.bind(entity)(michal);
                report = oscard.showModal;
                michal = {};
                golfie = _closure2_slot0;
                michal['quest'] = golfie;
                golfie = true;
                michal['isTargetedDisclosure'] = golfie;
                golfie = {};
                verify = _closure1_slot0;
                option = 11;
                option = tangon[option];
                option = verify.bind(entity)(option);
                option = option.QuestContent;
                option = option.QUEST_BAR_MOBILE;
                golfie['content'] = option;
                option = 12;
                option = tangon[option];
                option = verify.bind(entity)(option);
                option = option.QuestContentCTA;
                option = option.CONTEXT_MENU_OPEN_DISCLOSURE;
                golfie['ctaContent'] = option;
                michal['trackingCtx'] = golfie;
                michal = report.bind(oscard)(michal);
                michal = 13;
                michal = tangon[michal];
                zuuluu = zuuluu.bind(entity)(michal);
                michal = zuuluu.hideActionSheet;
                michal = michal.bind(zuuluu)();
                return entity;
            };
            offset['onPress'] = update;
            offset = romeon.bind(tangon)(yankee, offset);
            verify[1] = offset;
            offset = echoed[output];
            offset = result.bind(tangon)(offset);
            yankee = offset.ActionSheetRow;
            offset = {};
            output = echoed[output];
            output = result.bind(tangon)(output);
            output = output.ActionSheetRow;
            update = output.Icon;
            output = {};
            source = 19;
            source = echoed[source];
            source = result.bind(tangon)(source);
            source = source.XSmallIcon;
            output['IconComponent'] = source;
            output = romeon.bind(tangon)(update, output);
            offset['icon'] = output;
            sizing = echoed[sizing];
            sizing = result.bind(tangon)(sizing);
            output = sizing.FormLabel;
            sizing = {};
            update = echoed[kiloes];
            update = result.bind(tangon)(update);
            ctrled = update.intl;
            source = ctrled.string;
            update = echoed[kiloes];
            update = result.bind(tangon)(update);
            update = update.t;
            update = update.NN79Ex;
            update = source.bind(ctrled)(update);
            sizing['text'] = update;
            sizing = romeon.bind(tangon)(output, sizing);
            offset['label'] = sizing;
            sizing = echoed[kiloes];
            sizing = result.bind(tangon)(sizing);
            output = sizing.intl;
            sizing = output.string;
            kiloes = echoed[kiloes];
            kiloes = result.bind(tangon)(kiloes);
            kiloes = kiloes.t;
            kiloes = kiloes.V6htNz;
            kiloes = sizing.bind(output)(kiloes);
            offset['subLabel'] = kiloes;
            backup = _closure1_slot3;
            foxtra = function* () {
                entity = function* () { // Original name: ?anon_0_
                    _fun00003: for(var _fun00004_ip = 0; ; ) switch(_fun00004_ip) {
 0:
                        StartGenerator();
                        ResumeGenerator(result_out_reg=0, return_bool_out_reg=1);
                        if(michal) { _fun00004_ip = 242; continue _fun00003 }
 10:
                        verify = _closure1_slot0;
                        offset = _closure1_slot2;
                        michal = 20;
                        michal = offset[michal];
                        zuuluu = undefined;
                        golfie = verify.bind(zuuluu)(michal);
                        oscard = golfie.dismissQuestContent;
                        romeon = _closure2_slot0;
                        report = romeon.id;
                        yankee = 11;
                        michal = offset[yankee];
                        michal = verify.bind(zuuluu)(michal);
                        michal = michal.QuestContent;
                        michal = michal.QUEST_BAR_MOBILE;
                        michal = oscard.bind(golfie)(report, michal);
                        oscard = _closure1_slot1;
                        report = 13;
                        report = offset[report];
                        oscard = oscard.bind(zuuluu)(report);
                        report = oscard.hideActionSheet;
                        report = report.bind(oscard)();
                        option = 12;
                        report = offset[option];
                        golfie = verify.bind(zuuluu)(report);
                        oscard = golfie.trackQuestContentClicked;
                        report = {};
                        romeon = romeon.id;
                        report['questId'] = romeon;
                        yankee = offset[yankee];
                        yankee = verify.bind(zuuluu)(yankee);
                        yankee = yankee.QuestContent;
                        yankee = yankee.QUEST_BAR_MOBILE;
                        report['questContent'] = yankee;
                        option = offset[option];
                        option = verify.bind(zuuluu)(option);
                        option = option.QuestContentCTA;
                        option = option.CONTEXT_MENU_HIDE_CONTENT;
                        report['questContentCTA'] = option;
                        report = oscard.bind(golfie)(report);
                        SaveGenerator(address=200);
 198:
                        return michal;
 200:
                        ResumeGenerator(result_out_reg=1, return_bool_out_reg=4);
                        if(report) { _fun00004_ip = 239; continue _fun00003 }
 206:
                        report = _closure1_slot0;
                        oscard = _closure1_slot2;
                        tangon = 21;
                        tangon = oscard[tangon];
                        report = report.bind(zuuluu)(tangon);
                        tangon = report.displayQuestDismissalToast;
                        tangon = tangon.bind(report)();
                        return zuuluu;
 239:
                        return michal;
 242:
                        return entity;
                    }
                };
                return entity;
            };
            foxtra = backup.bind(tangon)(foxtra);
            offset['onPress'] = foxtra;
            offset = romeon.bind(tangon)(yankee, offset);
            verify[2] = offset;
            oscard['children'] = verify;
            oscard = option.bind(tangon)(golfie, oscard);
            report[1] = oscard;
            entity['children'] = report;
            entity = zuuluu.bind(tangon)(michal, entity);
            return entity;
        }
    };
    zuuluu['default'] = michal;
    return entity;
})();