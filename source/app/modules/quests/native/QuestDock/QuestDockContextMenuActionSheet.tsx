// app/modules/quests/native/QuestDock/QuestDockContextMenuActionSheet.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    report = argBar;
    golfie = argBaz;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    var _closure1_slot1 = golfie;
    var _closure1_slot2 = oscard;
    entity = global;
    verify = entity.Object;
    option = verify.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = option.bind(verify)(zuuluu, entity, tangon);
    entity = 0;
    tangon = oscard[entity];
    entity = undefined;
    tangon = golfie.bind(entity)(tangon);
    var _closure1_slot3 = tangon;
    tangon = 1;
    golfie = oscard[tangon];
    tangon = argCor;
    tangon = tangon.bind(entity)(golfie);
    tangon = 2;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    golfie = tangon.jsx;
    var _closure1_slot4 = golfie;
    tangon = tangon.jsxs;
    var _closure1_slot5 = tangon;
    tangon = 20;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/quests/native/QuestDock/QuestDockContextMenuActionSheet.tsx';
    tangon = report.bind(oscard)(tangon);
    michal = function(argFoo) { // Original name: QuestDockContextMenuActionSheet
        entity = argFoo;
        entity = entity.quest;
        var _closure2_slot0 = entity;
        tangon = _closure1_slot5;
        output = _closure1_slot0;
        result = _closure1_slot2;
        entity = 3;
        entity = result[entity];
        zuuluu = undefined;
        entity = output.bind(zuuluu)(entity);
        michal = entity.ActionSheet;
        entity = {};
        sizing = 4;
        report = result[sizing];
        report = output.bind(zuuluu)(report);
        report = report.ActionSheetRow;
        oscard = report.Group;
        report = {};
        yankee = _closure1_slot4;
        golfie = result[sizing];
        golfie = output.bind(zuuluu)(golfie);
        option = golfie.ActionSheetRow;
        golfie = {};
        verify = result[sizing];
        verify = output.bind(zuuluu)(verify);
        verify = verify.ActionSheetRow;
        offset = verify.Icon;
        verify = {};
        backup = 5;
        backup = result[backup];
        backup = output.bind(zuuluu)(backup);
        backup = backup.LinkExternalMediumIcon;
        verify['IconComponent'] = backup;
        verify = yankee.bind(zuuluu)(offset, verify);
        golfie['icon'] = verify;
        kiloes = 6;
        verify = result[kiloes];
        verify = output.bind(zuuluu)(verify);
        offset = verify.FormLabel;
        verify = {};
        backup = 7;
        echoed = result[backup];
        echoed = output.bind(zuuluu)(echoed);
        source = echoed.intl;
        update = source.string;
        echoed = result[backup];
        echoed = output.bind(zuuluu)(echoed);
        echoed = echoed.t;
        echoed = echoed.lwQdjI;
        echoed = update.bind(source)(echoed);
        verify['text'] = echoed;
        verify = yankee.bind(zuuluu)(offset, verify);
        golfie['label'] = verify;
        verify = function() { // Original name: onPress
            verify = _closure1_slot0;
            tangon = _closure1_slot2;
            entity = 8;
            zuuluu = tangon[entity];
            entity = undefined;
            golfie = verify.bind(entity)(zuuluu);
            oscard = golfie.openGameLink;
            report = _closure2_slot0;
            zuuluu = {};
            option = 9;
            option = tangon[option];
            option = verify.bind(entity)(option);
            option = option.QuestContent;
            option = option.QUEST_BAR_MOBILE;
            zuuluu['content'] = option;
            option = 10;
            option = tangon[option];
            option = verify.bind(entity)(option);
            option = option.QuestContentCTA;
            option = option.CONTEXT_MENU_OPEN_GAME_LINK;
            zuuluu['ctaContent'] = option;
            zuuluu = oscard.bind(golfie)(report, zuuluu);
            zuuluu = _closure1_slot1;
            michal = 11;
            michal = tangon[michal];
            zuuluu = zuuluu.bind(entity)(michal);
            michal = zuuluu.hideActionSheet;
            michal = michal.bind(zuuluu)();
            return entity;
        };
        golfie['onPress'] = verify;
        option = yankee.bind(zuuluu)(option, golfie);
        golfie = new Array(2);
        golfie[0] = option;
        option = result[sizing];
        option = output.bind(zuuluu)(option);
        verify = option.ActionSheetRow;
        option = {};
        offset = result[sizing];
        offset = output.bind(zuuluu)(offset);
        offset = offset.ActionSheetRow;
        echoed = offset.Icon;
        offset = {};
        update = 12;
        update = result[update];
        update = output.bind(zuuluu)(update);
        update = update.CopyIcon;
        offset['IconComponent'] = update;
        offset = yankee.bind(zuuluu)(echoed, offset);
        option['icon'] = offset;
        offset = result[kiloes];
        offset = output.bind(zuuluu)(offset);
        echoed = offset.FormLabel;
        offset = {};
        update = result[backup];
        update = output.bind(zuuluu)(update);
        ctrled = update.intl;
        source = ctrled.string;
        update = result[backup];
        update = output.bind(zuuluu)(update);
        update = update.t;
        update = update.WqhZsr;
        update = source.bind(ctrled)(update);
        offset['text'] = update;
        offset = yankee.bind(zuuluu)(echoed, offset);
        option['label'] = offset;
        offset = function() { // Original name: onPress
            verify = _closure1_slot0;
            tangon = _closure1_slot2;
            entity = 8;
            zuuluu = tangon[entity];
            entity = undefined;
            golfie = verify.bind(entity)(zuuluu);
            oscard = golfie.copyShareLink;
            zuuluu = _closure2_slot0;
            report = zuuluu.id;
            zuuluu = {};
            option = 9;
            option = tangon[option];
            option = verify.bind(entity)(option);
            option = option.QuestContent;
            option = option.QUEST_BAR_MOBILE;
            zuuluu['content'] = option;
            option = 10;
            option = tangon[option];
            option = verify.bind(entity)(option);
            option = option.QuestContentCTA;
            option = option.CONTEXT_MENU_COPY_LINK;
            zuuluu['ctaContent'] = option;
            zuuluu = oscard.bind(golfie)(report, zuuluu);
            zuuluu = _closure1_slot1;
            michal = 11;
            michal = tangon[michal];
            zuuluu = zuuluu.bind(entity)(michal);
            michal = zuuluu.hideActionSheet;
            michal = michal.bind(zuuluu)();
            return entity;
        };
        option['onPress'] = offset;
        option = yankee.bind(zuuluu)(verify, option);
        golfie[1] = option;
        report['children'] = golfie;
        oscard = tangon.bind(zuuluu)(oscard, report);
        report = new Array(2);
        report[0] = oscard;
        oscard = result[sizing];
        oscard = output.bind(zuuluu)(oscard);
        oscard = oscard.ActionSheetRow;
        golfie = oscard.Group;
        oscard = {};
        option = result[sizing];
        option = output.bind(zuuluu)(option);
        verify = option.ActionSheetRow;
        option = {};
        offset = result[sizing];
        offset = output.bind(zuuluu)(offset);
        offset = offset.ActionSheetRow;
        echoed = offset.Icon;
        offset = {};
        source = _closure1_slot1;
        update = 13;
        update = result[update];
        update = source.bind(zuuluu)(update);
        offset['IconComponent'] = update;
        offset = yankee.bind(zuuluu)(echoed, offset);
        option['icon'] = offset;
        offset = result[kiloes];
        offset = output.bind(zuuluu)(offset);
        echoed = offset.FormLabel;
        offset = {};
        update = result[backup];
        update = output.bind(zuuluu)(update);
        ctrled = update.intl;
        source = ctrled.string;
        update = result[backup];
        update = output.bind(zuuluu)(update);
        update = update.t;
        update = update.LLLLPD;
        update = source.bind(ctrled)(update);
        offset['text'] = update;
        offset = yankee.bind(zuuluu)(echoed, offset);
        option['label'] = offset;
        offset = function() { // Original name: onPress
            report = _closure1_slot0;
            tangon = _closure1_slot2;
            verify = 10;
            zuuluu = tangon[verify];
            entity = undefined;
            option = report.bind(entity)(zuuluu);
            oscard = option.trackQuestContentClicked;
            zuuluu = {};
            golfie = _closure2_slot0;
            offset = golfie.id;
            zuuluu['questId'] = offset;
            offset = 9;
            offset = tangon[offset];
            offset = report.bind(entity)(offset);
            offset = offset.QuestContent;
            offset = offset.QUEST_BAR_MOBILE;
            zuuluu['questContent'] = offset;
            verify = tangon[verify];
            verify = report.bind(entity)(verify);
            verify = verify.QuestContentCTA;
            verify = verify.CONTEXT_MENU_LEARN_MORE;
            zuuluu['questContentCTA'] = verify;
            zuuluu = oscard.bind(option)(zuuluu);
            zuuluu = 14;
            zuuluu = tangon[zuuluu];
            oscard = report.bind(entity)(zuuluu);
            report = oscard.openQuestHome;
            zuuluu = {};
            golfie = golfie.id;
            zuuluu['scrollToQuestId'] = golfie;
            zuuluu = report.bind(oscard)(zuuluu);
            zuuluu = _closure1_slot1;
            michal = 11;
            michal = tangon[michal];
            zuuluu = zuuluu.bind(entity)(michal);
            michal = zuuluu.hideActionSheet;
            michal = michal.bind(zuuluu)();
            return entity;
        };
        option['onPress'] = offset;
        verify = yankee.bind(zuuluu)(verify, option);
        option = new Array(3);
        option[0] = verify;
        verify = result[sizing];
        verify = output.bind(zuuluu)(verify);
        offset = verify.ActionSheetRow;
        verify = {};
        echoed = result[sizing];
        echoed = output.bind(zuuluu)(echoed);
        echoed = echoed.ActionSheetRow;
        update = echoed.Icon;
        echoed = {};
        source = 15;
        source = result[source];
        source = output.bind(zuuluu)(source);
        source = source.CircleQuestionIcon;
        echoed['IconComponent'] = source;
        echoed = yankee.bind(zuuluu)(update, echoed);
        verify['icon'] = echoed;
        echoed = result[kiloes];
        echoed = output.bind(zuuluu)(echoed);
        update = echoed.FormLabel;
        echoed = {};
        source = result[backup];
        source = output.bind(zuuluu)(source);
        vacuum = source.intl;
        ctrled = vacuum.string;
        source = result[backup];
        source = output.bind(zuuluu)(source);
        source = source.t;
        source = source.GcsZKC;
        source = ctrled.bind(vacuum)(source);
        echoed['text'] = source;
        echoed = yankee.bind(zuuluu)(update, echoed);
        verify['label'] = echoed;
        echoed = function() { // Original name: onPress
            zuuluu = _closure1_slot1;
            tangon = _closure1_slot2;
            entity = 16;
            michal = tangon[entity];
            entity = undefined;
            oscard = zuuluu.bind(entity)(michal);
            report = oscard.showModal;
            michal = {};
            golfie = _closure2_slot0;
            michal['quest'] = golfie;
            golfie = true;
            michal['isTargetedDisclosure'] = golfie;
            golfie = {};
            verify = _closure1_slot0;
            option = 9;
            option = tangon[option];
            option = verify.bind(entity)(option);
            option = option.QuestContent;
            option = option.QUEST_BAR_MOBILE;
            golfie['content'] = option;
            option = 10;
            option = tangon[option];
            option = verify.bind(entity)(option);
            option = option.QuestContentCTA;
            option = option.CONTEXT_MENU_OPEN_DISCLOSURE;
            golfie['ctaContent'] = option;
            michal['trackingCtx'] = golfie;
            michal = report.bind(oscard)(michal);
            michal = 11;
            michal = tangon[michal];
            zuuluu = zuuluu.bind(entity)(michal);
            michal = zuuluu.hideActionSheet;
            michal = michal.bind(zuuluu)();
            return entity;
        };
        verify['onPress'] = echoed;
        verify = yankee.bind(zuuluu)(offset, verify);
        option[1] = verify;
        verify = result[sizing];
        verify = output.bind(zuuluu)(verify);
        offset = verify.ActionSheetRow;
        verify = {};
        sizing = result[sizing];
        sizing = output.bind(zuuluu)(sizing);
        sizing = sizing.ActionSheetRow;
        echoed = sizing.Icon;
        sizing = {};
        update = 17;
        update = result[update];
        update = output.bind(zuuluu)(update);
        update = update.XSmallIcon;
        sizing['IconComponent'] = update;
        sizing = yankee.bind(zuuluu)(echoed, sizing);
        verify['icon'] = sizing;
        kiloes = result[kiloes];
        kiloes = output.bind(zuuluu)(kiloes);
        sizing = kiloes.FormLabel;
        kiloes = {};
        echoed = result[backup];
        echoed = output.bind(zuuluu)(echoed);
        source = echoed.intl;
        update = source.string;
        echoed = result[backup];
        echoed = output.bind(zuuluu)(echoed);
        echoed = echoed.t;
        echoed = echoed.NN79Ex;
        echoed = update.bind(source)(echoed);
        kiloes['text'] = echoed;
        kiloes = yankee.bind(zuuluu)(sizing, kiloes);
        verify['label'] = kiloes;
        kiloes = result[backup];
        kiloes = output.bind(zuuluu)(kiloes);
        sizing = kiloes.intl;
        kiloes = sizing.string;
        backup = result[backup];
        backup = output.bind(zuuluu)(backup);
        backup = backup.t;
        backup = backup.V6htNz;
        backup = kiloes.bind(sizing)(backup);
        verify['subLabel'] = backup;
        foxtra = _closure1_slot3;
        romeon = function* () {
            entity = function* () { // Original name: ?anon_0_
                _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
                    StartGenerator();
                    ResumeGenerator(result_out_reg=0, return_bool_out_reg=1);
                    if(michal) { _fun00002_ip = 242; continue _fun00001 }
 10:
                    verify = _closure1_slot0;
                    offset = _closure1_slot2;
                    michal = 18;
                    michal = offset[michal];
                    zuuluu = undefined;
                    golfie = verify.bind(zuuluu)(michal);
                    oscard = golfie.dismissQuestContent;
                    romeon = _closure2_slot0;
                    report = romeon.id;
                    yankee = 9;
                    michal = offset[yankee];
                    michal = verify.bind(zuuluu)(michal);
                    michal = michal.QuestContent;
                    michal = michal.QUEST_BAR_MOBILE;
                    michal = oscard.bind(golfie)(report, michal);
                    oscard = _closure1_slot1;
                    report = 11;
                    report = offset[report];
                    oscard = oscard.bind(zuuluu)(report);
                    report = oscard.hideActionSheet;
                    report = report.bind(oscard)();
                    option = 10;
                    report = offset[option];
                    golfie = verify.bind(zuuluu)(report);
                    oscard = golfie.trackQuestContentClicked;
                    report = {};
                    romeon = romeon.id;
                    report['questId'] = romeon;
                    yankee = offset[yankee];
                    yankee = verify.bind(zuuluu)(yankee);
                    yankee = yankee.QuestContent;
                    yankee = yankee.QUEST_BAR_MOBILE;
                    report['questContent'] = yankee;
                    option = offset[option];
                    option = verify.bind(zuuluu)(option);
                    option = option.QuestContentCTA;
                    option = option.CONTEXT_MENU_HIDE_CONTENT;
                    report['questContentCTA'] = option;
                    report = oscard.bind(golfie)(report);
                    SaveGenerator(address=200);
 198:
                    return michal;
 200:
                    ResumeGenerator(result_out_reg=1, return_bool_out_reg=4);
                    if(report) { _fun00002_ip = 239; continue _fun00001 }
 206:
                    report = _closure1_slot0;
                    oscard = _closure1_slot2;
                    tangon = 19;
                    tangon = oscard[tangon];
                    report = report.bind(zuuluu)(tangon);
                    tangon = report.displayQuestDismissalToast;
                    tangon = tangon.bind(report)();
                    return zuuluu;
 239:
                    return michal;
 242:
                    return entity;
                }
            };
            return entity;
        };
        romeon = foxtra.bind(zuuluu)(romeon);
        verify['onPress'] = romeon;
        verify = yankee.bind(zuuluu)(offset, verify);
        option[2] = verify;
        oscard['children'] = option;
        oscard = tangon.bind(zuuluu)(golfie, oscard);
        report[1] = oscard;
        entity['children'] = report;
        entity = tangon.bind(zuuluu)(michal, entity);
        return entity;
    };
    zuuluu['default'] = michal;
    return entity;
})();