// app/modules/quests/native/QuestDock/QuestDockGestureContext.tsx
export default (function(global, require, metroImportDefault, metroImportAll, moduleObject, exports, dependencyMap) {
    var6 = require;
    var5 = metroImportDefault;
    var3 = exports;
    var7 = dependencyMap;
    var _closure1_slot0 = var6;
    var _closure1_slot1 = var5;
    var _closure1_slot2 = var7;
    var1 = global;
    var9 = var1.Object;
    var8 = var9.defineProperty;
    var4 = {};
    var1 = true;
    var4['value'] = var1;
    var1 = '__esModule';
    var1 = var8.bind(var9)(var3, var1, var4);
    var11 = 0;
    var8 = var7[var11];
    var4 = metroImportAll;
    var1 = undefined;
    var8 = var4.bind(var1)(var8);
    var _closure1_slot3 = var8;
    var4 = 1;
    var4 = var7[var4];
    var4 = var5.bind(var1)(var4);
    var _closure1_slot4 = var4;
    var4 = 2;
    var4 = var7[var4];
    var4 = var6.bind(var1)(var4);
    var10 = var4.QuestDockMode;
    var _closure1_slot5 = var10;
    var4 = 3;
    var4 = var7[var4];
    var4 = var6.bind(var1)(var4);
    var5 = var4.QUEST_DOCK_COLLAPSED_HEIGHT;
    var _closure1_slot6 = var5;
    var4 = var4.QUEST_DOCK_EXPANDED_HEIGHT;
    var _closure1_slot7 = var4;
    var4 = 4;
    var4 = var7[var4];
    var4 = var6.bind(var1)(var4);
    var4 = var4.jsx;
    var _closure1_slot8 = var4;
    var5 = var8.createContext;
    var4 = {};
    var9 = 5;
    var12 = var7[var9];
    var14 = var6.bind(var1)(var12);
    var13 = var14.createFakeSharedValue;
    var12 = {'width': 0, 'height': 0, 'x': 0, 'y': 0, 'prevDeltaY': 0};
    var12 = var13.bind(var14)(var12);
    var4['questDockWrapperSpecs'] = var12;
    var12 = var7[var9];
    var14 = var6.bind(var1)(var12);
    var13 = var14.createFakeSharedValue;
    var12 = {'width': 0, 'height': 0, 'maxContentHeight': 0, 'landscape': false};
    var12 = var13.bind(var14)(var12);
    var4['windowDimensions'] = var12;
    var12 = var7[var9];
    var13 = var6.bind(var1)(var12);
    var12 = var13.createFakeSharedValue;
    var10 = var10.COLLAPSED;
    var10 = var12.bind(var13)(var10);
    var4['activeQuestDockMode'] = var10;
    var9 = var7[var9];
    var10 = var6.bind(var1)(var9);
    var9 = var10.createFakeSharedValue;
    var9 = var9.bind(var10)(var11);
    var4['minExpandedContentHeight'] = var9;
    var4 = var5.bind(var8)(var4);
    var _closure1_slot9 = var4;
    var5 = var8.memo;
    var2 = function QuestDockGestureContextProviderInner(arg1) {
        _fun0001: for(var _fun0001_ip = 0; ; ) switch(_fun0001_ip) {
 0:
            var6 = _closure1_slot3;
            var7 = var6.useMemo;
            var11 = _closure1_slot0;
            var12 = _closure1_slot2;
            var3 = 6;
            var3 = var12[var3];
            var4 = undefined;
            var3 = var11.bind(var4)(var3);
            var5 = var3.getWindowDimensions;
            var3 = new Array(0);
            var13 = var7.bind(var6)(var5, var3);
            var3 = 7;
            var3 = var12[var3];
            var7 = var11.bind(var4)(var3);
            var5 = var7.useMainTabsHeight;
            var3 = {'enabled': true, 'ignoreQuestDock': true};
            var3 = var5.bind(var7)(var3);
            var _closure2_slot0 = var3;
            var5 = var6.useRef;
            var5 = var5.bind(var6)(var3);
            var _closure2_slot1 = var5;
            var7 = 8;
            var5 = var12[var7];
            var8 = var11.bind(var4)(var5);
            var6 = var8.useSharedValue;
            var5 = {};
            var9 = var13.width;
            var5['width'] = var9;
            var9 = var13.height;
            var5['height'] = var9;
            var10 = var13.width;
            var9 = var13.height;
            var9 = var10 > var9;
            var5['landscape'] = var9;
            var9 = var13.height;
            var9 = var9 - var3;
            var5['maxContentHeight'] = var9;
            var10 = var6.bind(var8)(var5);
            var _closure2_slot2 = var10;
            var5 = var12[var7];
            var9 = var11.bind(var4)(var5);
            var8 = var9.useSharedValue;
            var6 = {};
            var5 = 9;
            var14 = var12[var5];
            var17 = var11.bind(var4)(var14);
            var16 = var17.getQuestDockCollapsedWidth;
            var15 = var13.width;
            var13 = 10;
            var14 = var12[var13];
            var18 = var11.bind(var4)(var14);
            var14 = var18.getSafeAreaInsets;
            var14 = var14.bind(var18)();
            var14 = var14.left;
            var13 = var12[var13];
            var18 = var11.bind(var4)(var13);
            var13 = var18.getSafeAreaInsets;
            var13 = var13.bind(var18)();
            var13 = var13.right;
            var13 = var16.bind(var17)(var15, var14, var13);
            var6['width'] = var13;
            var14 = _closure1_slot6;
            var6['height'] = var14;
            var13 = 0;
            var6['x'] = var13;
            var6['y'] = var14;
            var6['prevDeltaY'] = var13;
            var9 = var8.bind(var9)(var6);
            var _closure2_slot3 = var9;
            var6 = var12[var7];
            var8 = var11.bind(var4)(var6);
            var6 = var8.useSharedValue;
            var5 = var12[var5];
            var12 = var11.bind(var4)(var5);
            var11 = var12.isSoftDismissed;
            var5 = _closure1_slot4;
            var5 = var5.questDockSoftDismissedAt;
            var5 = var11.bind(var12)(var5);
            var11 = _closure1_slot5;
            if(var5) { _fun0001_ip = 378; continue _fun0001 }
 370:
            var5 = var11.COLLAPSED;
            _fun0001_ip = 384; continue _fun0001;
 378:
            var5 = var11.SOFT_DISMISSED;
 384:
            var8 = var6.bind(var8)(var5);
            var _closure2_slot4 = var8;
            var6 = _closure1_slot0;
            var5 = _closure1_slot2;
            var5 = var5[var7];
            var7 = var6.bind(var4)(var5);
            var6 = var7.useSharedValue;
            var5 = _closure1_slot7;
            var7 = var6.bind(var7)(var5);
            var _closure2_slot5 = var7;
            var6 = _closure1_slot3;
            var11 = var6.useEffect;
            var5 = new Array(1);
            var5[0] = var3;
            var3 = function() {
                var2 = _closure2_slot1;
                var1 = _closure2_slot0;
                var2['current'] = var1;
                var1 = undefined;
                return var1;
            };
            var3 = var11.bind(var6)(var3, var5);
            var11 = var6.useEffect;
            var5 = new Array(1);
            var5[0] = var10;
            var3 = function() {
                var2 = _closure1_slot1;
                var3 = _closure1_slot2;
                var1 = 11;
                var1 = var3[var1];
                var3 = undefined;
                var2 = var2.bind(var3)(var1);
                var1 = function(arg1) {
                    var1 = arg1;
                    var6 = var1.width;
                    var5 = var1.height;
                    var3 = _closure2_slot2;
                    var2 = var3.set;
                    var1 = {};
                    var1['width'] = var6;
                    var1['height'] = var5;
                    var6 = var6 > var5;
                    var1['landscape'] = var6;
                    var4 = _closure2_slot1;
                    var4 = var4.current;
                    var4 = var5 - var4;
                    var1['maxContentHeight'] = var4;
                    var1 = var2.bind(var3)(var1);
                    var1 = undefined;
                    return var1;
                };
                var1 = var2.bind(var3)(var1);
                return var1;
            };
            var3 = var11.bind(var6)(var3, var5);
            var5 = var6.useMemo;
            var3 = new Array(4);
            var3[0] = var10;
            var3[1] = var9;
            var3[2] = var8;
            var3[3] = var7;
            var2 = function() {
                var1 = {};
                var3 = _closure2_slot2;
                var1['windowDimensions'] = var3;
                var3 = _closure2_slot3;
                var1['questDockWrapperSpecs'] = var3;
                var3 = _closure2_slot4;
                var1['activeQuestDockMode'] = var3;
                var2 = _closure2_slot5;
                var1['minExpandedContentHeight'] = var2;
                return var1;
            };
            var5 = var5.bind(var6)(var2, var3);
            var3 = _closure1_slot8;
            var1 = _closure1_slot9;
            var2 = var1.Provider;
            var1 = {};
            var1['value'] = var5;
            var5 = arg1;
            var5 = var5.children;
            var1['children'] = var5;
            var1 = var3.bind(var4)(var2, var1);
            return var1;
        }
    };
    var2 = var5.bind(var8)(var2);
    var5 = 12;
    var5 = var7[var5];
    var7 = var6.bind(var1)(var5);
    var6 = var7.fileFinishedImporting;
    var5 = 'modules/quests/native/QuestDock/QuestDockGestureContext.tsx';
    var5 = var6.bind(var7)(var5);
    var3['QuestDockGestureContext'] = var4;
    var3['QuestDockGestureContextProvider'] = var2;
    return var1;
})();