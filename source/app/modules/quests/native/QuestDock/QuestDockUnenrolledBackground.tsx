// app/modules/quests/native/QuestDock/QuestDockUnenrolledBackground.tsx
export default (function(_, argBar, argBaz, argCor, __, argFre, argPlu) {
    report = argBar;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    entity = argBaz;
    var _closure1_slot1 = entity;
    var _closure1_slot2 = oscard;
    entity = global;
    option = entity.Object;
    golfie = option.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(option)(zuuluu, entity, tangon);
    entity = 0;
    golfie = oscard[entity];
    tangon = argCor;
    entity = undefined;
    golfie = tangon.bind(entity)(golfie);
    var _closure1_slot3 = golfie;
    kiloes = 1;
    tangon = oscard[kiloes];
    tangon = report.bind(entity)(tangon);
    foxtra = tangon.StyleSheet;
    tangon = 2;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.QuestDockMode;
    var _closure1_slot4 = tangon;
    tangon = 3;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    romeon = tangon.QUEST_DOCK_EXPANDED_HEIGHT;
    option = tangon.QUEST_DOCK_MODE_CHANGE_PHYSICS_CLAMPED;
    var _closure1_slot5 = option;
    tangon = tangon.QUEST_DOCK_UNENROLLED_HEADER_INSET_EXPANDED;
    var _closure1_slot6 = tangon;
    tangon = 4;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.VerticalGradient;
    var _closure1_slot7 = tangon;
    tangon = 5;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    option = tangon.jsx;
    var _closure1_slot8 = option;
    tangon = tangon.jsxs;
    var _closure1_slot9 = tangon;
    tangon = 6;
    tangon = oscard[tangon];
    verify = report.bind(entity)(tangon);
    option = verify.createStyles;
    tangon = {};
    offset = {};
    output = foxtra.absoluteFillObject;
    result = offset;
    yankee = copyDataProperties(result, output);
    yankee = 'right';
    offset[yankee] = entity;
    yankee = 'bottom';
    offset[yankee] = entity;
    yankee = 'height';
    offset[yankee] = romeon;
    backup = 'zIndex';
    offset[backup] = kiloes;
    tangon['backgroundWrapper'] = offset;
    offset = {};
    output = foxtra.absoluteFillObject;
    result = offset;
    backup = copyDataProperties(result, output);
    offset[yankee] = romeon;
    kiloes = 'cover';
    backup = 'resizeMode';
    offset[backup] = kiloes;
    tangon['backgroundHeroAsset'] = offset;
    offset = {};
    output = foxtra.absoluteFillObject;
    result = offset;
    foxtra = copyDataProperties(result, output);
    offset[yankee] = romeon;
    tangon['backgroundGradient'] = offset;
    tangon = option.bind(verify)(tangon);
    var _closure1_slot10 = tangon;
    tangon = {};
    option = 'function QuestDockUnenrolledBackgroundTsx1(){const{withSpring,activeQuestDockMode,QuestDockMode,QUEST_DOCK_UNENROLLED_HEADER_INSET_EXPANDED,QUEST_DOCK_MODE_CHANGE_PHYSICS_CLAMPED,windowDimensions}=this.__closure;return{transform:[{translateX:withSpring(activeQuestDockMode.get()===QuestDockMode.COLLAPSED?QUEST_DOCK_UNENROLLED_HEADER_INSET_EXPANDED*-1:0,QUEST_DOCK_MODE_CHANGE_PHYSICS_CLAMPED)},{translateY:withSpring(activeQuestDockMode.get()===QuestDockMode.COLLAPSED?QUEST_DOCK_UNENROLLED_HEADER_INSET_EXPANDED*-1:0,QUEST_DOCK_MODE_CHANGE_PHYSICS_CLAMPED)}],width:windowDimensions.get().width};}';
    tangon['code'] = option;
    var _closure1_slot11 = tangon;
    tangon = golfie.memo;
    michal = function() { // Original name: QuestDockUnenrolledBackground
        romeon = _closure1_slot3;
        zuuluu = romeon.useContext;
        golfie = _closure1_slot1;
        foxtra = _closure1_slot2;
        michal = 7;
        michal = foxtra[michal];
        tangon = undefined;
        michal = golfie.bind(tangon)(michal);
        michal = zuuluu.bind(romeon)(michal);
        report = michal.quest;
        michal = _closure1_slot10;
        yankee = michal.bind(tangon)();
        sizing = _closure1_slot0;
        michal = 8;
        michal = foxtra[michal];
        zuuluu = sizing.bind(tangon)(michal);
        michal = zuuluu.useQuestDockHeroAssetUrl;
        kiloes = michal.bind(zuuluu)(report);
        zuuluu = romeon.useContext;
        michal = 9;
        michal = foxtra[michal];
        michal = sizing.bind(tangon)(michal);
        michal = michal.QuestDockGestureContext;
        michal = zuuluu.bind(romeon)(michal);
        option = michal.activeQuestDockMode;
        var _closure2_slot0 = option;
        oscard = michal.windowDimensions;
        var _closure2_slot1 = oscard;
        michal = 10;
        michal = foxtra[michal];
        report = sizing.bind(tangon)(michal);
        zuuluu = report.useToken;
        michal = 11;
        michal = foxtra[michal];
        michal = golfie.bind(tangon)(michal);
        michal = michal.colors;
        michal = michal.BACKGROUND_SECONDARY_ALT;
        michal = zuuluu.bind(report)(michal);
        var _closure2_slot2 = michal;
        report = romeon.useMemo;
        zuuluu = new Array(1);
        zuuluu[0] = michal;
        michal = function() {
            michal = _closure1_slot1;
            zuuluu = _closure1_slot2;
            entity = 12;
            entity = zuuluu[entity];
            zuuluu = undefined;
            michal = michal.bind(zuuluu)(entity);
            entity = _closure2_slot2;
            tangon = michal.bind(zuuluu)(entity);
            michal = tangon.alpha;
            entity = 0;
            michal = michal.bind(tangon)(entity);
            entity = michal.hex;
            michal = entity.bind(michal)();
            entity = new Array(4);
            entity[0] = michal;
            zuuluu = tangon.alpha;
            michal = 0.1;
            zuuluu = zuuluu.bind(tangon)(michal);
            michal = zuuluu.hex;
            michal = michal.bind(zuuluu)();
            entity[1] = michal;
            zuuluu = tangon.alpha;
            michal = 0.8;
            zuuluu = zuuluu.bind(tangon)(michal);
            michal = zuuluu.hex;
            michal = michal.bind(zuuluu)();
            entity[2] = michal;
            zuuluu = tangon.alpha;
            michal = 1;
            zuuluu = zuuluu.bind(tangon)(michal);
            michal = zuuluu.hex;
            michal = michal.bind(zuuluu)();
            entity[3] = michal;
            return entity;
        };
        verify = report.bind(romeon)(michal, zuuluu);
        report = romeon.useMemo;
        zuuluu = function() {
            entity = [0, 0.33, 0.76, 1];
            return entity;
        };
        michal = new Array(0);
        romeon = report.bind(romeon)(zuuluu, michal);
        michal = 13;
        michal = foxtra[michal];
        zuuluu = sizing.bind(tangon)(michal);
        michal = zuuluu.useAnimatedStyle;
        entity = function() { // Original name: o
            _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
                entity = {};
                tangon = {};
                zuuluu = _closure1_slot0;
                michal = _closure1_slot2;
                offset = 14;
                michal = michal[offset];
                verify = undefined;
                yankee = zuuluu.bind(verify)(michal);
                golfie = yankee.withSpring;
                oscard = _closure2_slot0;
                zuuluu = oscard.get;
                romeon = zuuluu.bind(oscard)();
                zuuluu = _closure1_slot4;
                zuuluu = zuuluu.COLLAPSED;
                oscard = 0;
                if(!(romeon === zuuluu)) { _fun00002_ip = 80; continue _fun00001 }
 66:
                romeon = _closure1_slot6;
                zuuluu = -1;
                oscard = zuuluu * romeon;
 80:
                zuuluu = _closure1_slot5;
                zuuluu = golfie.bind(yankee)(oscard, zuuluu);
                tangon['translateX'] = zuuluu;
                zuuluu = new Array(2);
                zuuluu[0] = tangon;
                tangon = {};
                golfie = _closure1_slot0;
                oscard = _closure1_slot2;
                oscard = oscard[offset];
                golfie = golfie.bind(verify)(oscard);
                oscard = golfie.withSpring;
                offset = _closure2_slot0;
                verify = offset.get;
                offset = verify.bind(offset)();
                verify = _closure1_slot4;
                verify = verify.COLLAPSED;
                option = 0;
                if(!(offset === verify)) { _fun00002_ip = 170; continue _fun00001 }
 156:
                offset = _closure1_slot6;
                verify = -1;
                option = verify * offset;
 170:
                report = _closure1_slot5;
                report = oscard.bind(golfie)(option, report);
                tangon['translateY'] = report;
                zuuluu[1] = tangon;
                entity['transform'] = zuuluu;
                zuuluu = _closure2_slot1;
                michal = zuuluu.get;
                michal = michal.bind(zuuluu)();
                michal = michal.width;
                entity['width'] = michal;
                return entity;
            }
        };
        report = {};
        backup = 14;
        backup = foxtra[backup];
        backup = sizing.bind(tangon)(backup);
        backup = backup.withSpring;
        report['withSpring'] = backup;
        report['activeQuestDockMode'] = option;
        option = _closure1_slot4;
        report['QuestDockMode'] = option;
        option = _closure1_slot6;
        report['QUEST_DOCK_UNENROLLED_HEADER_INSET_EXPANDED'] = option;
        option = _closure1_slot5;
        report['QUEST_DOCK_MODE_CHANGE_PHYSICS_CLAMPED'] = option;
        report['windowDimensions'] = oscard;
        entity['__closure'] = report;
        report = 3565242281634.0;
        entity['__workletHash'] = report;
        report = _closure1_slot11;
        entity['__initData'] = report;
        oscard = michal.bind(zuuluu)(entity);
        zuuluu = _closure1_slot9;
        entity = 15;
        entity = foxtra[entity];
        michal = golfie.bind(tangon)(entity);
        entity = {};
        option = yankee.backgroundWrapper;
        report = new Array(2);
        report[0] = option;
        report[1] = oscard;
        entity['style'] = report;
        option = _closure1_slot8;
        report = 16;
        report = foxtra[report];
        oscard = golfie.bind(tangon)(report);
        report = {};
        backup = yankee.backgroundHeroAsset;
        report['style'] = backup;
        backup = {};
        backup['uri'] = kiloes;
        report['source'] = backup;
        oscard = option.bind(tangon)(oscard, report);
        report = new Array(2);
        report[0] = oscard;
        oscard = 17;
        oscard = foxtra[oscard];
        golfie = golfie.bind(tangon)(oscard);
        oscard = {};
        oscard['locations'] = romeon;
        yankee = yankee.backgroundGradient;
        oscard['style'] = yankee;
        offset = _closure1_slot7;
        yankee = offset.START;
        oscard['start'] = yankee;
        offset = offset.END;
        oscard['end'] = offset;
        oscard['colors'] = verify;
        oscard = option.bind(tangon)(golfie, oscard);
        report[1] = oscard;
        entity['children'] = report;
        entity = zuuluu.bind(tangon)(michal, entity);
        return entity;
    };
    michal = tangon.bind(golfie)(michal);
    tangon = 18;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/quests/native/QuestDock/QuestDockUnenrolledBackground.tsx';
    tangon = report.bind(oscard)(tangon);
    zuuluu['default'] = michal;
    return entity;
})();