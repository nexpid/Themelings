// app/modules/quests/native/QuestDock/QuestDockUnenrolledBackground.tsx
export default (function(_, argBar, argBaz, argCorge, __, argFred, argPlugh) {
    report = argBar;
    zulu = argFred;
    oscar = argPlugh;
    var _closure1_slot0 = report;
    entity = argBaz;
    var _closure1_slot1 = entity;
    var _closure1_slot2 = oscar;
    entity = global;
    options = entity.Object;
    golf = options.defineProperty;
    tango = {};
    entity = true;
    tango['value'] = entity;
    entity = '__esModule';
    entity = golf.bind(options)(zulu, entity, tango);
    entity = 0;
    golf = oscar[entity];
    tango = argCorge;
    entity = undefined;
    golf = tango.bind(entity)(golf);
    var _closure1_slot3 = golf;
    kilo = 1;
    tango = oscar[kilo];
    tango = report.bind(entity)(tango);
    foxtrot = tango.StyleSheet;
    tango = 2;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.QuestDockMode;
    var _closure1_slot4 = tango;
    tango = 3;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    romeo = tango.QUEST_DOCK_EXPANDED_HEIGHT;
    options = tango.QUEST_DOCK_MODE_CHANGE_PHYSICS_CLAMPED;
    var _closure1_slot5 = options;
    tango = tango.QUEST_DOCK_UNENROLLED_HEADER_INSET_EXPANDED;
    var _closure1_slot6 = tango;
    tango = 4;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.VerticalGradient;
    var _closure1_slot7 = tango;
    tango = 5;
    options = oscar[tango];
    options = report.bind(entity)(options);
    options = options.jsx;
    var _closure1_slot8 = options;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.jsxs;
    var _closure1_slot9 = tango;
    tango = 6;
    tango = oscar[tango];
    verify = report.bind(entity)(tango);
    options = verify.createStyles;
    tango = {};
    offset = {};
    output = foxtrot.absoluteFillObject;
    result = offset;
    yankee = copyDataProperties(result, output);
    yankee = 'right';
    offset[yankee] = entity;
    yankee = 'bottom';
    offset[yankee] = entity;
    yankee = 'height';
    offset[yankee] = romeo;
    backup = 'zIndex';
    offset[backup] = kilo;
    tango['backgroundWrapper'] = offset;
    offset = {};
    output = foxtrot.absoluteFillObject;
    result = offset;
    backup = copyDataProperties(result, output);
    offset[yankee] = romeo;
    kilo = 'cover';
    backup = 'resizeMode';
    offset[backup] = kilo;
    tango['backgroundHeroAsset'] = offset;
    offset = {};
    output = foxtrot.absoluteFillObject;
    result = offset;
    foxtrot = copyDataProperties(result, output);
    offset[yankee] = romeo;
    tango['backgroundGradient'] = offset;
    tango = options.bind(verify)(tango);
    var _closure1_slot10 = tango;
    tango = {};
    options = 'function QuestDockUnenrolledBackgroundTsx1(){const{withSpring,activeQuestDockMode,QuestDockMode,QUEST_DOCK_UNENROLLED_HEADER_INSET_EXPANDED,QUEST_DOCK_MODE_CHANGE_PHYSICS_CLAMPED,windowDimensions}=this.__closure;return{transform:[{translateX:withSpring(activeQuestDockMode.get()===QuestDockMode.COLLAPSED?QUEST_DOCK_UNENROLLED_HEADER_INSET_EXPANDED*-1:0,QUEST_DOCK_MODE_CHANGE_PHYSICS_CLAMPED)},{translateY:withSpring(activeQuestDockMode.get()===QuestDockMode.COLLAPSED?QUEST_DOCK_UNENROLLED_HEADER_INSET_EXPANDED*-1:0,QUEST_DOCK_MODE_CHANGE_PHYSICS_CLAMPED)}],width:windowDimensions.get().width};}';
    tango['code'] = options;
    var _closure1_slot11 = tango;
    tango = golf.memo;
    mike = function() { // Original name: QuestDockUnenrolledBackground
        romeo = _closure1_slot3;
        zulu = romeo.useContext;
        golf = _closure1_slot1;
        foxtrot = _closure1_slot2;
        mike = 7;
        mike = foxtrot[mike];
        tango = undefined;
        mike = golf.bind(tango)(mike);
        mike = zulu.bind(romeo)(mike);
        report = mike.quest;
        mike = _closure1_slot10;
        yankee = mike.bind(tango)();
        sizing = _closure1_slot0;
        mike = 8;
        mike = foxtrot[mike];
        zulu = sizing.bind(tango)(mike);
        mike = zulu.useQuestDockHeroAssetUrl;
        kilo = mike.bind(zulu)(report);
        zulu = romeo.useContext;
        mike = 9;
        mike = foxtrot[mike];
        mike = sizing.bind(tango)(mike);
        mike = mike.QuestDockGestureContext;
        mike = zulu.bind(romeo)(mike);
        options = mike.activeQuestDockMode;
        var _closure2_slot0 = options;
        oscar = mike.windowDimensions;
        var _closure2_slot1 = oscar;
        mike = 10;
        mike = foxtrot[mike];
        report = sizing.bind(tango)(mike);
        zulu = report.useToken;
        mike = 11;
        mike = foxtrot[mike];
        mike = golf.bind(tango)(mike);
        mike = mike.colors;
        mike = mike.BACKGROUND_SECONDARY_ALT;
        mike = zulu.bind(report)(mike);
        var _closure2_slot2 = mike;
        report = romeo.useMemo;
        zulu = new Array(1);
        zulu[0] = mike;
        mike = function() {
            mike = _closure1_slot1;
            zulu = _closure1_slot2;
            entity = 12;
            entity = zulu[entity];
            zulu = undefined;
            mike = mike.bind(zulu)(entity);
            entity = _closure2_slot2;
            tango = mike.bind(zulu)(entity);
            mike = tango.alpha;
            entity = 0;
            mike = mike.bind(tango)(entity);
            entity = mike.hex;
            mike = entity.bind(mike)();
            entity = new Array(4);
            entity[0] = mike;
            zulu = tango.alpha;
            mike = 0.1;
            zulu = zulu.bind(tango)(mike);
            mike = zulu.hex;
            mike = mike.bind(zulu)();
            entity[1] = mike;
            zulu = tango.alpha;
            mike = 0.8;
            zulu = zulu.bind(tango)(mike);
            mike = zulu.hex;
            mike = mike.bind(zulu)();
            entity[2] = mike;
            zulu = tango.alpha;
            mike = 1;
            zulu = zulu.bind(tango)(mike);
            mike = zulu.hex;
            mike = mike.bind(zulu)();
            entity[3] = mike;
            return entity;
        };
        verify = report.bind(romeo)(mike, zulu);
        report = romeo.useMemo;
        zulu = function() {
            entity = [0, 0.33, 0.76, 1];
            return entity;
        };
        mike = new Array(0);
        romeo = report.bind(romeo)(zulu, mike);
        mike = 13;
        mike = foxtrot[mike];
        zulu = sizing.bind(tango)(mike);
        mike = zulu.useAnimatedStyle;
        entity = function() { // Original name: o
            _fun116301: for(var _fun116301_ip = 0; ; ) switch(_fun116301_ip) {
 0:
                entity = {};
                tango = {};
                zulu = _closure1_slot0;
                mike = _closure1_slot2;
                offset = 14;
                mike = mike[offset];
                verify = undefined;
                yankee = zulu.bind(verify)(mike);
                golf = yankee.withSpring;
                oscar = _closure2_slot0;
                zulu = oscar.get;
                romeo = zulu.bind(oscar)();
                zulu = _closure1_slot4;
                zulu = zulu.COLLAPSED;
                oscar = 0;
                if(!(romeo === zulu)) { _fun116301_ip = 80; continue _fun116301 }
 66:
                romeo = _closure1_slot6;
                zulu = -1;
                oscar = zulu * romeo;
 80:
                zulu = _closure1_slot5;
                zulu = golf.bind(yankee)(oscar, zulu);
                tango['translateX'] = zulu;
                zulu = new Array(2);
                zulu[0] = tango;
                tango = {};
                golf = _closure1_slot0;
                oscar = _closure1_slot2;
                oscar = oscar[offset];
                golf = golf.bind(verify)(oscar);
                oscar = golf.withSpring;
                offset = _closure2_slot0;
                verify = offset.get;
                offset = verify.bind(offset)();
                verify = _closure1_slot4;
                verify = verify.COLLAPSED;
                options = 0;
                if(!(offset === verify)) { _fun116301_ip = 170; continue _fun116301 }
 156:
                offset = _closure1_slot6;
                verify = -1;
                options = verify * offset;
 170:
                report = _closure1_slot5;
                report = oscar.bind(golf)(options, report);
                tango['translateY'] = report;
                zulu[1] = tango;
                entity['transform'] = zulu;
                zulu = _closure2_slot1;
                mike = zulu.get;
                mike = mike.bind(zulu)();
                mike = mike.width;
                entity['width'] = mike;
                return entity;
            }
        };
        report = {};
        backup = 14;
        backup = foxtrot[backup];
        backup = sizing.bind(tango)(backup);
        backup = backup.withSpring;
        report['withSpring'] = backup;
        report['activeQuestDockMode'] = options;
        options = _closure1_slot4;
        report['QuestDockMode'] = options;
        options = _closure1_slot6;
        report['QUEST_DOCK_UNENROLLED_HEADER_INSET_EXPANDED'] = options;
        options = _closure1_slot5;
        report['QUEST_DOCK_MODE_CHANGE_PHYSICS_CLAMPED'] = options;
        report['windowDimensions'] = oscar;
        entity['__closure'] = report;
        report = 3565242281634.0;
        entity['__workletHash'] = report;
        report = _closure1_slot11;
        entity['__initData'] = report;
        oscar = mike.bind(zulu)(entity);
        zulu = _closure1_slot9;
        entity = 15;
        entity = foxtrot[entity];
        mike = golf.bind(tango)(entity);
        entity = {};
        options = yankee.backgroundWrapper;
        report = new Array(2);
        report[0] = options;
        report[1] = oscar;
        entity['style'] = report;
        options = _closure1_slot8;
        report = 16;
        report = foxtrot[report];
        oscar = golf.bind(tango)(report);
        report = {};
        backup = yankee.backgroundHeroAsset;
        report['style'] = backup;
        backup = {};
        backup['uri'] = kilo;
        report['source'] = backup;
        oscar = options.bind(tango)(oscar, report);
        report = new Array(2);
        report[0] = oscar;
        oscar = 17;
        oscar = foxtrot[oscar];
        golf = golf.bind(tango)(oscar);
        oscar = {};
        oscar['locations'] = romeo;
        yankee = yankee.backgroundGradient;
        oscar['style'] = yankee;
        offset = _closure1_slot7;
        yankee = offset.START;
        oscar['start'] = yankee;
        offset = offset.END;
        oscar['end'] = offset;
        oscar['colors'] = verify;
        oscar = options.bind(tango)(golf, oscar);
        report[1] = oscar;
        entity['children'] = report;
        entity = zulu.bind(tango)(mike, entity);
        return entity;
    };
    mike = tango.bind(golf)(mike);
    tango = 18;
    tango = oscar[tango];
    oscar = report.bind(entity)(tango);
    report = oscar.fileFinishedImporting;
    tango = 'modules/quests/native/QuestDock/QuestDockUnenrolledBackground.tsx';
    tango = report.bind(oscar)(tango);
    zulu['default'] = mike;
    return entity;
})();