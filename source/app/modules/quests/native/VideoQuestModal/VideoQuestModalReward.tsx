// app/modules/quests/native/VideoQuestModal/VideoQuestModalReward.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    report = argBar;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    entity = argBaz;
    var _closure1_slot1 = entity;
    var _closure1_slot2 = oscard;
    entity = global;
    option = entity.Object;
    golfie = option.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(option)(zuuluu, entity, tangon);
    entity = 0;
    golfie = oscard[entity];
    tangon = argCor;
    entity = undefined;
    tangon = tangon.bind(entity)(golfie);
    var _closure1_slot3 = tangon;
    tangon = 1;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    golfie = tangon.jsx;
    var _closure1_slot4 = golfie;
    tangon = tangon.jsxs;
    var _closure1_slot5 = tangon;
    tangon = 11;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/quests/native/VideoQuestModal/VideoQuestModalReward.tsx';
    tangon = report.bind(oscard)(tangon);
    michal = function(argFoo) { // Original name: VideoQuestModalReward
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            michal = argFoo;
            report = michal.style;
            michal = michal.withRewardName;
            tangon = undefined;
            foxtra = tangon !== michal;
            if(!foxtra) { _fun00002_ip = 28; continue _fun00001 }
 25:
            foxtra = michal;
 28:
            yankee = _closure1_slot0;
            option = _closure1_slot2;
            michal = 2;
            michal = option[michal];
            zuuluu = yankee.bind(tangon)(michal);
            michal = zuuluu.useVideoQuestModalContext;
            michal = michal.bind(zuuluu)();
            result = michal.quest;
            var _closure2_slot0 = result;
            michal = 3;
            michal = option[michal];
            zuuluu = yankee.bind(tangon)(michal);
            michal = zuuluu.useQuestTaskDetails;
            echoed = michal.bind(zuuluu)(result);
            oscard = _closure1_slot3;
            golfie = oscard.useCallback;
            michal = result.id;
            zuuluu = new Array(1);
            zuuluu[0] = michal;
            michal = function() {
                zuuluu = _closure1_slot0;
                michal = _closure1_slot2;
                entity = 4;
                michal = michal[entity];
                entity = undefined;
                tangon = zuuluu.bind(entity)(michal);
                zuuluu = tangon.openRewardDetailsBottomSheet;
                michal = {};
                report = _closure2_slot0;
                report = report.id;
                michal['questId'] = report;
                michal = zuuluu.bind(tangon)(michal);
                return entity;
            };
            output = golfie.bind(oscard)(michal, zuuluu);
            zuuluu = oscard.useMemo;
            golfie = result.config;
            michal = new Array(1);
            michal[0] = golfie;
            entity = function() {
                zuuluu = _closure1_slot0;
                michal = _closure1_slot2;
                entity = 5;
                michal = michal[entity];
                entity = undefined;
                entity = zuuluu.bind(entity)(michal);
                zuuluu = entity.SharedQuestFields;
                michal = zuuluu.build;
                entity = _closure2_slot0;
                entity = entity.config;
                entity = michal.bind(zuuluu)(entity);
                return entity;
            };
            backup = zuuluu.bind(oscard)(entity, michal);
            zuuluu = _closure1_slot5;
            oscard = 6;
            entity = option[oscard];
            entity = yankee.bind(tangon)(entity);
            michal = entity.Stack;
            entity = {'justify': 'center', 'align': 'center'};
            sizing = 'center';
            kiloes = _closure1_slot1;
            verify = 7;
            golfie = option[verify];
            golfie = kiloes.bind(tangon)(golfie);
            golfie = golfie.spacing;
            golfie = golfie.PX_24;
            entity['spacing'] = golfie;
            entity['style'] = report;
            romeon = _closure1_slot4;
            report = 8;
            report = option[report];
            golfie = kiloes.bind(tangon)(report);
            report = {'hasConfetti': true, 'quest': null, 'size': 'md-lg'};
            report['quest'] = result;
            echoed = echoed.percentComplete;
            report['progress'] = echoed;
            report['onPress'] = output;
            golfie = romeon.bind(tangon)(golfie, report);
            report = new Array(2);
            report[0] = golfie;
            oscard = option[oscard];
            oscard = yankee.bind(tangon)(oscard);
            golfie = oscard.Stack;
            oscard = {};
            oscard['align'] = sizing;
            verify = option[verify];
            verify = kiloes.bind(tangon)(verify);
            verify = verify.spacing;
            verify = verify.PX_4;
            oscard['spacing'] = verify;
            verify = 9;
            option = option[verify];
            option = yankee.bind(tangon)(option);
            yankee = option.Text;
            option = {'variant': 'heading-lg/semibold', 'color': 'text-primary'};
            if(foxtra) { _fun00002_ip = 462; continue _fun00001 }
 380:
            kiloes = _closure1_slot0;
            echoed = _closure1_slot2;
            foxtra = 10;
            sizing = echoed[foxtra];
            sizing = kiloes.bind(tangon)(sizing);
            output = sizing.intl;
            sizing = output.formatToPlainString;
            foxtra = echoed[foxtra];
            foxtra = kiloes.bind(tangon)(foxtra);
            foxtra = foxtra.t;
            kiloes = foxtra.EAYZAg;
            foxtra = {};
            result = result.config;
            result = result.messages;
            result = result.questName;
            foxtra['questName'] = result;
            foxtra = sizing.bind(output)(kiloes, foxtra);
            _fun00002_ip = 479; continue _fun00001;
 462:
            backup = backup.defaultReward;
            backup = backup.messages;
            foxtra = backup.name;
 479:
            option['children'] = foxtra;
            yankee = romeon.bind(tangon)(yankee, option);
            option = new Array(2);
            option[0] = yankee;
            yankee = _closure1_slot4;
            kiloes = _closure1_slot0;
            sizing = _closure1_slot2;
            verify = sizing[verify];
            verify = kiloes.bind(tangon)(verify);
            offset = verify.Text;
            verify = {'variant': 'heading-sm/medium', 'color': 'text-secondary'};
            romeon = 10;
            foxtra = sizing[romeon];
            foxtra = kiloes.bind(tangon)(foxtra);
            backup = foxtra.intl;
            foxtra = backup.string;
            romeon = sizing[romeon];
            romeon = kiloes.bind(tangon)(romeon);
            romeon = romeon.t;
            romeon = romeon.1Wvve3;
            romeon = foxtra.bind(backup)(romeon);
            verify['children'] = romeon;
            verify = yankee.bind(tangon)(offset, verify);
            option[1] = verify;
            oscard['children'] = option;
            oscard = zuuluu.bind(tangon)(golfie, oscard);
            report[1] = oscard;
            entity['children'] = report;
            entity = zuuluu.bind(tangon)(michal, entity);
            return entity;
        }
    };
    zuuluu['default'] = michal;
    return entity;
})();