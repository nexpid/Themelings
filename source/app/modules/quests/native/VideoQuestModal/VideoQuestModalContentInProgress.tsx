// app/modules/quests/native/VideoQuestModal/VideoQuestModalContentInProgress.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    report = argBar;
    golfie = argBaz;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    var _closure1_slot1 = golfie;
    var _closure1_slot2 = oscard;
    entity = global;
    verify = entity.Object;
    option = verify.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = option.bind(verify)(zuuluu, entity, tangon);
    entity = 0;
    tangon = oscard[entity];
    entity = undefined;
    tangon = golfie.bind(entity)(tangon);
    var _closure1_slot3 = tangon;
    tangon = 1;
    golfie = oscard[tangon];
    tangon = argCor;
    tangon = tangon.bind(entity)(golfie);
    var _closure1_slot4 = tangon;
    tangon = 2;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    golfie = tangon.View;
    var _closure1_slot5 = golfie;
    tangon = tangon.StyleSheet;
    var _closure1_slot6 = tangon;
    tangon = 3;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.QuestsExperimentLocations;
    var _closure1_slot7 = tangon;
    tangon = 4;
    golfie = oscard[tangon];
    golfie = report.bind(entity)(golfie);
    golfie = golfie.jsx;
    var _closure1_slot8 = golfie;
    golfie = oscard[tangon];
    golfie = report.bind(entity)(golfie);
    golfie = golfie.jsxs;
    var _closure1_slot9 = golfie;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.Fragment;
    var _closure1_slot10 = tangon;
    tangon = 5;
    tangon = oscard[tangon];
    option = report.bind(entity)(tangon);
    golfie = option.createStyles;
    tangon = function(argFoo) {
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            entity = {};
            michal = {'height': 210, 'position': 'relative'};
            entity['videoLandscape'] = michal;
            michal = {'borderRadius': null, 'backgroundColor': null, 'flexGrow': 1, 'flexShrink': 0, 'overflow': 'hidden'};
            option = _closure1_slot1;
            tangon = _closure1_slot2;
            oscard = 6;
            zuuluu = tangon[oscard];
            report = undefined;
            zuuluu = option.bind(report)(zuuluu);
            zuuluu = zuuluu.radii;
            zuuluu = zuuluu.lg;
            michal['borderRadius'] = zuuluu;
            zuuluu = tangon[oscard];
            zuuluu = option.bind(report)(zuuluu);
            zuuluu = zuuluu.colors;
            zuuluu = zuuluu.BACKGROUND_ACCENT;
            michal['backgroundColor'] = zuuluu;
            entity['videoWrapper'] = michal;
            michal = {};
            verify = tangon[oscard];
            verify = option.bind(report)(verify);
            verify = verify.colors;
            verify = verify.BACKGROUND_MOBILE_SECONDARY;
            michal['backgroundColor'] = verify;
            verify = tangon[oscard];
            verify = option.bind(report)(verify);
            verify = verify.radii;
            verify = verify.none;
            michal['borderTopLeftRadius'] = verify;
            verify = tangon[oscard];
            verify = option.bind(report)(verify);
            verify = verify.radii;
            verify = verify.none;
            michal['borderTopRightRadius'] = verify;
            entity['videoWrapperLandscape'] = michal;
            michal = {'flexDirection': 'column', 'pointerEvents': 'box-none', 'flexGrow': 1, 'flexShrink': 0, 'justifyContent': 'space-between'};
            verify = tangon[oscard];
            verify = option.bind(report)(verify);
            verify = verify.spacing;
            verify = verify.PX_16;
            michal['padding'] = verify;
            entity['videoContentWrapper'] = michal;
            michal = {};
            verify = tangon[oscard];
            verify = option.bind(report)(verify);
            verify = verify.spacing;
            verify = verify.PX_24;
            michal['paddingTop'] = verify;
            entity['videoContentWrapperLandscape'] = michal;
            michal = {};
            verify = _closure1_slot6;
            offset = verify.absoluteFillObject;
            yankee = michal;
            verify = copyDataProperties(yankee, offset);
            entity['videoContentWrapperPortrait'] = michal;
            michal = {};
            verify = 'row';
            michal['flexDirection'] = verify;
            entity['videoContentHeaderWrapper'] = michal;
            michal = {'flexGrow': 1, 'flexShrink': 1};
            entity['videoContentHeading'] = michal;
            michal = {'alignItems': 'center', 'flexDirection': 'row'};
            verify = tangon[oscard];
            verify = option.bind(report)(verify);
            verify = verify.spacing;
            verify = verify.PX_24;
            michal['marginBottom'] = verify;
            entity['questDetails'] = michal;
            michal = {'flexGrow': 1, 'flexShrink': 1};
            entity['questDetailsGame'] = michal;
            michal = {'justifyContent': 'flex-end', 'flexDirection': 'row'};
            tangon = tangon[oscard];
            tangon = option.bind(report)(tangon);
            tangon = tangon.spacing;
            tangon = tangon.PX_24;
            michal['padding'] = tangon;
            tangon = argFoo;
            zuuluu = 0;
            if(!tangon) { _fun00002_ip = 448; continue _fun00001 }
 421:
            option = _closure1_slot1;
            tangon = _closure1_slot2;
            tangon = tangon[oscard];
            tangon = option.bind(report)(tangon);
            tangon = tangon.spacing;
            zuuluu = tangon.PX_16;
 448:
            michal['paddingBottom'] = zuuluu;
            tangon = _closure1_slot1;
            zuuluu = _closure1_slot2;
            option = zuuluu[oscard];
            option = tangon.bind(report)(option);
            option = option.spacing;
            option = option.PX_24;
            michal['gap'] = option;
            entity['footer'] = michal;
            michal = {'flexGrow': 0, 'flexShrink': 0};
            entity['questDetailsReward'] = michal;
            michal = {};
            option = zuuluu[oscard];
            option = tangon.bind(report)(option);
            option = option.colors;
            option = option.INTERACTIVE_ACTIVE;
            michal['color'] = option;
            entity['icon'] = michal;
            michal = {};
            option = zuuluu[oscard];
            option = tangon.bind(report)(option);
            option = option.colors;
            option = option.INTERACTIVE_NORMAL;
            michal['color'] = option;
            entity['iconDisabled'] = michal;
            michal = {};
            golfie = _closure1_slot6;
            offset = golfie.absoluteFillObject;
            yankee = michal;
            option = copyDataProperties(yankee, offset);
            entity['video'] = michal;
            michal = {};
            option = 'absolute';
            michal['position'] = option;
            option = zuuluu[oscard];
            option = tangon.bind(report)(option);
            option = option.spacing;
            option = option.PX_16;
            michal['top'] = option;
            option = zuuluu[oscard];
            option = tangon.bind(report)(option);
            option = option.spacing;
            option = option.PX_16;
            michal['right'] = option;
            entity['closeButtonLandscape'] = michal;
            michal = {};
            offset = golfie.absoluteFillObject;
            yankee = michal;
            option = copyDataProperties(yankee, offset);
            option = 'bottom';
            michal[option] = report;
            verify = 70;
            option = 'height';
            michal[option] = verify;
            entity['gradientTop'] = michal;
            michal = {};
            offset = golfie.absoluteFillObject;
            yankee = michal;
            golfie = copyDataProperties(yankee, offset);
            golfie = 'top';
            michal[golfie] = report;
            golfie = 150;
            michal[option] = golfie;
            entity['gradientBottom'] = michal;
            michal = {'margin': 4294967281, 'padding': 15, 'textShadowColor': null, 'textShadowOffset': null, 'textShadowRadius': 15};
            golfie = zuuluu[oscard];
            golfie = tangon.bind(report)(golfie);
            golfie = golfie.colors;
            golfie = golfie.BLACK;
            michal['textShadowColor'] = golfie;
            golfie = {'width': 0, 'height': 0};
            michal['textShadowOffset'] = golfie;
            entity['textShadow'] = michal;
            michal = {'borderRadius': null, 'flexGrow': 1, 'flexShrink': 1};
            zuuluu = zuuluu[oscard];
            zuuluu = tangon.bind(report)(zuuluu);
            zuuluu = zuuluu.radii;
            zuuluu = zuuluu.round;
            michal['borderRadius'] = zuuluu;
            entity['ctaPrimary'] = michal;
            return entity;
        }
    };
    tangon = golfie.bind(option)(tangon);
    var _closure1_slot11 = tangon;
    tangon = 38;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/quests/native/VideoQuestModal/VideoQuestModalContentInProgress.tsx';
    tangon = report.bind(oscard)(tangon);
    michal = function(argFoo) { // Original name: VideoQuestModalContentInProgress
        _fun00003: for(var _fun00004_ip = 0; ; ) switch(_fun00004_ip) {
 0:
            michal = argFoo;
            entity = michal.onClose;
            var _closure2_slot0 = entity;
            whisks = michal.onNavigateToPostWatchVideo;
            oscard = _closure1_slot11;
            michal = _closure1_slot0;
            zuuluu = _closure1_slot2;
            tangon = 7;
            report = zuuluu[tangon];
            tangon = undefined;
            golfie = michal.bind(tangon)(report);
            report = golfie.isAndroid;
            report = report.bind(golfie)();
            vacuum = oscard.bind(tangon)(report);
            golfie = _closure1_slot4;
            oscard = golfie.useState;
            report = false;
            option = oscard.bind(golfie)(report);
            oscard = _closure1_slot3;
            report = 2;
            oscard = oscard.bind(tangon)(option, report);
            status = 0;
            ctrled = oscard[status];
            report = 1;
            report = oscard[report];
            var _closure2_slot1 = report;
            report = 8;
            report = zuuluu[report];
            oscard = michal.bind(tangon)(report);
            report = oscard.useVideoQuestModalContext;
            report = report.bind(oscard)();
            kiloes = report.quest;
            var _closure2_slot2 = kiloes;
            option = golfie.useCallback;
            oscard = function() {
                zuuluu = _closure2_slot1;
                michal = undefined;
                entity = function(argFoo) {
                    entity = argFoo;
                    entity = !entity;
                    return entity;
                };
                entity = zuuluu.bind(michal)(entity);
                return entity;
            };
            report = new Array(0);
            result = option.bind(golfie)(oscard, report);
            option = golfie.useCallback;
            oscard = new Array(1);
            oscard[0] = kiloes;
            report = function() {
                report = _closure1_slot1;
                michal = _closure1_slot2;
                entity = 9;
                tangon = michal[entity];
                entity = undefined;
                oscard = report.bind(entity)(tangon);
                report = oscard.openLazy;
                tangon = _closure1_slot0;
                zuuluu = 11;
                zuuluu = michal[zuuluu];
                tangon = tangon.bind(entity)(zuuluu);
                zuuluu = 10;
                zuuluu = michal[zuuluu];
                michal = michal.paths;
                tangon = tangon.bind(entity)(zuuluu, michal);
                golfie = _closure2_slot2;
                option = golfie.id;
                michal = global;
                michal = michal.HermesInternal;
                zuuluu = michal.concat;
                michal = 'transcript-';
                zuuluu = zuuluu.bind(michal)(option);
                michal = {};
                michal['quest'] = golfie;
                michal = report.bind(oscard)(tangon, zuuluu, michal);
                return entity;
            };
            sizing = option.bind(golfie)(report, oscard);
            option = golfie.useCallback;
            report = kiloes.id;
            oscard = new Array(1);
            oscard[0] = report;
            report = function() {
                oscard = _closure1_slot0;
                golfie = _closure1_slot2;
                entity = 12;
                michal = golfie[entity];
                entity = undefined;
                report = oscard.bind(entity)(michal);
                tangon = report.showShareActionSheet;
                zuuluu = {};
                michal = 13;
                michal = golfie[michal];
                golfie = oscard.bind(entity)(michal);
                oscard = golfie.getQuestUrl;
                michal = _closure2_slot2;
                michal = michal.id;
                michal = oscard.bind(golfie)(michal);
                zuuluu['message'] = michal;
                michal = 'Video Quest Modal';
                michal = tangon.bind(report)(zuuluu, michal);
                return entity;
            };
            yankee = option.bind(golfie)(report, oscard);
            oscard = golfie.useCallback;
            report = new Array(1);
            report[0] = entity;
            entity = function() {
                michal = _closure2_slot0;
                entity = undefined;
                michal = michal.bind(entity)();
                return entity;
            };
            sequen = oscard.bind(golfie)(entity, report);
            entity = 14;
            entity = zuuluu[entity];
            report = michal.bind(tangon)(entity);
            entity = report.useQuestImpressionId;
            entity = entity.bind(report)();
            var _closure2_slot3 = entity;
            oscard = golfie.useCallback;
            report = new Array(2);
            report[0] = kiloes;
            report[1] = entity;
            entity = function() {
                option = _closure1_slot0;
                verify = _closure1_slot2;
                entity = 13;
                michal = verify[entity];
                entity = undefined;
                report = option.bind(entity)(michal);
                tangon = report.openGameLink;
                zuuluu = _closure2_slot2;
                michal = {};
                golfie = 15;
                golfie = verify[golfie];
                golfie = option.bind(entity)(golfie);
                golfie = golfie.QuestContent;
                golfie = golfie.VIDEO_MODAL_MOBILE;
                michal['content'] = golfie;
                golfie = 16;
                golfie = verify[golfie];
                golfie = option.bind(entity)(golfie);
                golfie = golfie.QuestContentCTA;
                golfie = golfie.OPEN_GAME_LINK;
                michal['ctaContent'] = golfie;
                oscard = _closure2_slot3;
                michal['impressionId'] = oscard;
                michal = tangon.bind(report)(zuuluu, michal);
                return entity;
            };
            equals = oscard.bind(golfie)(entity, report);
            oscard = golfie.useCallback;
            entity = kiloes.id;
            report = new Array(1);
            report[0] = entity;
            entity = function() {
                zuuluu = _closure1_slot0;
                michal = _closure1_slot2;
                entity = 17;
                michal = michal[entity];
                entity = undefined;
                tangon = zuuluu.bind(entity)(michal);
                zuuluu = tangon.openRewardDetailsBottomSheet;
                michal = {};
                report = _closure2_slot2;
                report = report.id;
                michal['questId'] = report;
                michal = zuuluu.bind(tangon)(michal);
                return entity;
            };
            limora = oscard.bind(golfie)(entity, report);
            entity = 18;
            entity = zuuluu[entity];
            report = michal.bind(tangon)(entity);
            entity = report.useQuestTaskDetails;
            quebec = entity.bind(report)(kiloes);
            entity = 13;
            entity = zuuluu[entity];
            zuuluu = michal.bind(tangon)(entity);
            michal = zuuluu.getVideoOrientation;
            entity = kiloes.config;
            entity = michal.bind(zuuluu)(entity);
            romeon = 'portrait';
            config = romeon === entity;
            zuuluu = kiloes.userStatus;
            michal = null;
            report = michal == zuuluu;
            entity = undefined;
            if(report) { _fun00004_ip = 418; continue _fun00003 }
 412:
            entity = zuuluu.completedAt;
 418:
            target = michal != entity;
            zuuluu = _closure1_slot9;
            michal = _closure1_slot10;
            entity = {};
            oscard = _closure1_slot5;
            report = {};
            option = vacuum.videoWrapper;
            golfie = new Array(2);
            golfie[0] = option;
            output = !config;
            option = output;
            if(config) { _fun00004_ip = 467; continue _fun00003 }
 461:
            option = vacuum.videoWrapperLandscape;
 467:
            golfie[1] = option;
            report['style'] = golfie;
            verify = _closure1_slot8;
            option = _closure1_slot0;
            offset = _closure1_slot2;
            golfie = 19;
            golfie = offset[golfie];
            golfie = option.bind(tangon)(golfie);
            option = golfie.VideoQuestPlayer;
            golfie = {};
            golfie['captionsEnabled'] = ctrled;
            offset = 'landscape';
            if(!config) { _fun00004_ip = 522; continue _fun00003 }
 519:
            offset = romeon;
 522:
            golfie['orientation'] = offset;
            offset = output;
            if(config) { _fun00004_ip = 539; continue _fun00003 }
 533:
            offset = vacuum.videoLandscape;
 539:
            golfie['style'] = offset;
            offset = {'bottom': null, 'left': 16, 'right': 16};
            romeon = 16;
            if(!config) { _fun00004_ip = 566; continue _fun00003 }
 563:
            romeon = 158;
 566:
            offset['bottom'] = romeon;
            golfie['safeAreaInsets'] = offset;
            option = verify.bind(tangon)(option, golfie);
            golfie = new Array(5);
            golfie[0] = option;
            option = config;
            if(!config) { _fun00004_ip = 810; continue _fun00003 }
 600:
            romeon = _closure1_slot8;
            record = _closure1_slot1;
            cntext = _closure1_slot2;
            verify = 20;
            verify = cntext[verify];
            offset = record.bind(tangon)(verify);
            verify = {};
            echoed = {'x': 0, 'y': 0};
            verify['start'] = echoed;
            echoed = {'x': 0, 'y': 1};
            verify['end'] = echoed;
            echoed = vacuum.gradientTop;
            verify['style'] = echoed;
            source = 21;
            echoed = cntext[source];
            papara = record.bind(tangon)(echoed);
            update = 6;
            echoed = cntext[update];
            echoed = record.bind(tangon)(echoed);
            echoed = echoed.unsafe_rawColors;
            echoed = echoed.PLUM_23;
            sierra = papara.bind(tangon)(echoed);
            papara = sierra.alpha;
            echoed = 0.4;
            papara = papara.bind(sierra)(echoed);
            echoed = papara.hex;
            papara = echoed.bind(papara)();
            echoed = new Array(2);
            echoed[0] = papara;
            source = cntext[source];
            source = record.bind(tangon)(source);
            update = cntext[update];
            update = record.bind(tangon)(update);
            update = update.unsafe_rawColors;
            update = update.PLUM_23;
            source = source.bind(tangon)(update);
            update = source.alpha;
            source = update.bind(source)(status);
            update = source.hex;
            update = update.bind(source)();
            echoed[1] = update;
            verify['colors'] = echoed;
            option = romeon.bind(tangon)(offset, verify);
 810:
            golfie[1] = option;
            option = config;
            if(!config) { _fun00004_ip = 1033; continue _fun00003 }
 823:
            romeon = _closure1_slot8;
            record = _closure1_slot1;
            cntext = _closure1_slot2;
            verify = 20;
            verify = cntext[verify];
            offset = record.bind(tangon)(verify);
            verify = {};
            echoed = {'x': 0, 'y': 0};
            verify['start'] = echoed;
            echoed = {'x': 0, 'y': 1};
            verify['end'] = echoed;
            echoed = vacuum.gradientBottom;
            verify['style'] = echoed;
            source = 21;
            echoed = cntext[source];
            papara = record.bind(tangon)(echoed);
            update = 6;
            echoed = cntext[update];
            echoed = record.bind(tangon)(echoed);
            echoed = echoed.unsafe_rawColors;
            echoed = echoed.PLUM_23;
            papara = papara.bind(tangon)(echoed);
            echoed = papara.alpha;
            papara = echoed.bind(papara)(status);
            echoed = papara.hex;
            papara = echoed.bind(papara)();
            echoed = new Array(2);
            echoed[0] = papara;
            source = cntext[source];
            source = record.bind(tangon)(source);
            update = cntext[update];
            update = record.bind(tangon)(update);
            update = update.unsafe_rawColors;
            update = update.PLUM_23;
            record = source.bind(tangon)(update);
            source = record.alpha;
            update = 0.4;
            source = source.bind(record)(update);
            update = source.hex;
            update = update.bind(source)();
            echoed[1] = update;
            verify['colors'] = echoed;
            option = romeon.bind(tangon)(offset, verify);
 1033:
            golfie[2] = option;
            option = output;
            if(config) { _fun00004_ip = 1090; continue _fun00003 }
 1043:
            romeon = _closure1_slot8;
            offset = _closure1_slot1;
            echoed = _closure1_slot2;
            verify = 22;
            verify = echoed[verify];
            offset = offset.bind(tangon)(verify);
            verify = {};
            verify['onClose'] = sequen;
            echoed = vacuum.closeButtonLandscape;
            verify['style'] = echoed;
            option = romeon.bind(tangon)(offset, verify);
 1090:
            golfie[3] = option;
            offset = _closure1_slot9;
            verify = _closure1_slot5;
            option = {};
            echoed = vacuum.videoContentWrapper;
            romeon = new Array(2);
            romeon[0] = echoed;
            if(config) { _fun00004_ip = 1129; continue _fun00003 }
 1121:
            echoed = vacuum.videoContentWrapperLandscape;
            _fun00004_ip = 1135; continue _fun00003;
 1129:
            echoed = vacuum.videoContentWrapperPortrait;
 1135:
            romeon[1] = echoed;
            option['style'] = romeon;
            echoed = config;
            if(!config) { _fun00004_ip = 1199; continue _fun00003 }
 1149:
            source = _closure1_slot8;
            update = _closure1_slot1;
            record = _closure1_slot2;
            romeon = 23;
            romeon = record[romeon];
            update = update.bind(tangon)(romeon);
            romeon = {'onClose': null, 'showCurrentVideoTime': true, 'withTextShadow': true};
            romeon['onClose'] = sequen;
            echoed = source.bind(tangon)(update, romeon);
 1199:
            romeon = new Array(3);
            romeon[0] = echoed;
            if(config) { _fun00004_ip = 1242; continue _fun00003 }
 1210:
            source = _closure1_slot8;
            update = _closure1_slot1;
            sequen = _closure1_slot2;
            echoed = 24;
            echoed = sequen[echoed];
            update = update.bind(tangon)(echoed);
            echoed = {};
            output = source.bind(tangon)(update, echoed);
 1242:
            romeon[1] = output;
            source = _closure1_slot9;
            echoed = _closure1_slot5;
            output = {};
            update = {};
            sequen = vacuum.questDetails;
            update['style'] = sequen;
            sequen = {};
            record = vacuum.questDetailsGame;
            sequen['style'] = record;
            papara = _closure1_slot8;
            cntext = _closure1_slot0;
            record = _closure1_slot2;
            sierra = 25;
            record = record[sierra];
            record = cntext.bind(tangon)(record);
            cntext = record.Text;
            record = {'variant': 'heading-lg/semibold', 'color': 'white'};
            variable36 = config;
            if(!config) { _fun00004_ip = 1335; continue _fun00003 }
 1329:
            variable36 = vacuum.textShadow;
 1335:
            status = new Array(1);
            status[0] = variable36;
            record['style'] = status;
            status = kiloes.config;
            status = status.messages;
            status = status.gameTitle;
            record['children'] = status;
            cntext = papara.bind(tangon)(cntext, record);
            record = new Array(2);
            record[0] = cntext;
            status = _closure1_slot8;
            papara = _closure1_slot0;
            cntext = _closure1_slot2;
            cntext = cntext[sierra];
            cntext = papara.bind(tangon)(cntext);
            papara = cntext.Text;
            cntext = {'variant': 'heading-sm/semibold', 'color': 'text-normal'};
            variable36 = config;
            if(!config) { _fun00004_ip = 1434; continue _fun00003 }
 1428:
            variable36 = vacuum.textShadow;
 1434:
            sierra = new Array(1);
            sierra[0] = variable36;
            cntext['style'] = sierra;
            sierra = kiloes.config;
            sierra = sierra.messages;
            sierra = sierra.gamePublisher;
            cntext['children'] = sierra;
            cntext = status.bind(tangon)(papara, cntext);
            record[1] = cntext;
            sequen['children'] = record;
            record = source.bind(tangon)(echoed, sequen);
            sequen = new Array(2);
            sequen[0] = record;
            if(!config) { _fun00004_ip = 1591; continue _fun00003 }
 1498:
            papara = _closure1_slot8;
            cntext = _closure1_slot5;
            record = {};
            status = vacuum.questDetailsReward;
            record['style'] = status;
            sierra = _closure1_slot1;
            variable36 = _closure1_slot2;
            status = 26;
            status = variable36[status];
            sierra = sierra.bind(tangon)(status);
            status = {};
            status['quest'] = kiloes;
            variable36 = 'x-sm';
            status['size'] = variable36;
            quebec = quebec.percentComplete;
            status['progress'] = quebec;
            quebec = true;
            status['hasConfetti'] = quebec;
            status['onPress'] = limora;
            status = papara.bind(tangon)(sierra, status);
            record['children'] = status;
            config = papara.bind(tangon)(cntext, record);
 1591:
            sequen[1] = config;
            update['children'] = sequen;
            update = source.bind(tangon)(echoed, update);
            sequen = new Array(2);
            sequen[0] = update;
            cntext = _closure1_slot9;
            variable37 = _closure1_slot0;
            limora = _closure1_slot2;
            update = 27;
            update = limora[update];
            update = variable37.bind(tangon)(update);
            record = update.Stack;
            config = {};
            update = 'horizontal';
            config['direction'] = update;
            status = _closure1_slot1;
            update = 6;
            papara = limora[update];
            papara = status.bind(tangon)(papara);
            papara = papara.spacing;
            papara = papara.PX_16;
            config['spacing'] = papara;
            sierra = _closure1_slot8;
            papara = 28;
            papara = limora[papara];
            status = status.bind(tangon)(papara);
            papara = {};
            papara['onPress'] = equals;
            equals = vacuum.ctaPrimary;
            papara['style'] = equals;
            equals = 29;
            quebec = limora[equals];
            quebec = variable37.bind(tangon)(quebec);
            variable36 = quebec.intl;
            quebec = variable36.string;
            limora = limora[equals];
            limora = variable37.bind(tangon)(limora);
            limora = limora.t;
            limora = limora.hvVgAQ;
            limora = quebec.bind(variable36)(limora);
            papara['text'] = limora;
            status = sierra.bind(tangon)(status, papara);
            papara = new Array(2);
            papara[0] = status;
            if(!target) { _fun00004_ip = 1902; continue _fun00003 }
 1784:
            limora = _closure1_slot8;
            variable38 = _closure1_slot0;
            variable36 = _closure1_slot2;
            status = 30;
            status = variable36[status];
            status = variable38.bind(tangon)(status);
            sierra = status.IconButton;
            status = {};
            quebec = variable36[equals];
            quebec = variable38.bind(tangon)(quebec);
            variable37 = quebec.intl;
            quebec = variable37.string;
            equals = variable36[equals];
            equals = variable38.bind(tangon)(equals);
            equals = equals.t;
            equals = equals.YsCuyM;
            equals = quebec.bind(variable37)(equals);
            status['accessibilityLabel'] = equals;
            quebec = _closure1_slot1;
            equals = 31;
            equals = variable36[equals];
            equals = quebec.bind(tangon)(equals);
            status['icon'] = equals;
            status['onPress'] = whisks;
            whisks = 'secondary';
            status['variant'] = whisks;
            target = limora.bind(tangon)(sierra, status);
 1902:
            papara[1] = target;
            config['children'] = papara;
            config = cntext.bind(tangon)(record, config);
            sequen[1] = config;
            output['children'] = sequen;
            output = source.bind(tangon)(echoed, output);
            romeon[2] = output;
            option['children'] = romeon;
            option = offset.bind(tangon)(verify, option);
            golfie[4] = option;
            report['children'] = golfie;
            oscard = zuuluu.bind(tangon)(oscard, report);
            report = new Array(2);
            report[0] = oscard;
            option = _closure1_slot9;
            golfie = _closure1_slot5;
            oscard = {};
            verify = vacuum.footer;
            oscard['style'] = verify;
            output = _closure1_slot8;
            source = _closure1_slot0;
            sequen = _closure1_slot2;
            offset = 32;
            verify = sequen[offset];
            verify = source.bind(tangon)(verify);
            romeon = verify.PressableOpacity;
            verify = {};
            echoed = 'button';
            verify['accessibilityRole'] = echoed;
            verify['onPress'] = sizing;
            sizing = 33;
            sizing = sequen[sizing];
            sizing = source.bind(tangon)(sizing);
            config = sizing.PaperIcon;
            sizing = {};
            record = vacuum.iconDisabled;
            record = record.color;
            sizing['color'] = record;
            sizing = output.bind(tangon)(config, sizing);
            verify['children'] = sizing;
            romeon = output.bind(tangon)(romeon, verify);
            verify = new Array(4);
            verify[0] = romeon;
            romeon = sequen[offset];
            romeon = source.bind(tangon)(romeon);
            sizing = romeon.PressableOpacity;
            romeon = {};
            romeon['accessibilityRole'] = echoed;
            romeon['onPress'] = result;
            result = 34;
            result = sequen[result];
            result = source.bind(tangon)(result);
            source = result.CaptionIcon;
            result = {};
            if(ctrled) { _fun00004_ip = 2150; continue _fun00003 }
 2137:
            ctrled = vacuum.iconDisabled;
            ctrled = ctrled.color;
            _fun00004_ip = 2160; continue _fun00003;
 2150:
            vacuum = vacuum.icon;
            ctrled = vacuum.color;
 2160:
            result['color'] = ctrled;
            result = output.bind(tangon)(source, result);
            romeon['children'] = result;
            romeon = output.bind(tangon)(sizing, romeon);
            verify[1] = romeon;
            romeon = _closure1_slot8;
            result = _closure1_slot0;
            sizing = _closure1_slot2;
            offset = sizing[offset];
            offset = result.bind(tangon)(offset);
            output = offset.PressableOpacity;
            offset = {};
            offset['accessibilityRole'] = echoed;
            offset['onPress'] = yankee;
            yankee = 35;
            yankee = sizing[yankee];
            yankee = result.bind(tangon)(yankee);
            echoed = yankee.ShareIcon;
            result = {};
            yankee = _closure1_slot1;
            update = sizing[update];
            update = yankee.bind(tangon)(update);
            update = update.colors;
            update = update.TEXT_NORMAL;
            result['color'] = update;
            result = romeon.bind(tangon)(echoed, result);
            offset['children'] = result;
            offset = romeon.bind(tangon)(output, offset);
            verify[2] = offset;
            offset = 36;
            offset = sizing[offset];
            yankee = yankee.bind(tangon)(offset);
            offset = {};
            offset['quest'] = kiloes;
            backup = _closure1_slot7;
            backup = backup.VIDEO_MODAL_MOBILE;
            offset['location'] = backup;
            foxtra = function(argFoo) { // Original name: children
                tangon = _closure1_slot8;
                oscard = _closure1_slot0;
                verify = _closure1_slot2;
                entity = 32;
                entity = verify[entity];
                zuuluu = undefined;
                entity = oscard.bind(zuuluu)(entity);
                michal = entity.PressableOpacity;
                entity = {};
                report = 'button';
                entity['accessibilityRole'] = report;
                offset = argFoo;
                yankee = entity;
                report = copyDataProperties(yankee, offset);
                report = 37;
                report = verify[report];
                report = oscard.bind(zuuluu)(report);
                oscard = report.MoreHorizontalIcon;
                report = {};
                option = _closure1_slot1;
                golfie = 6;
                golfie = verify[golfie];
                golfie = option.bind(zuuluu)(golfie);
                golfie = golfie.colors;
                golfie = golfie.TEXT_NORMAL;
                report['color'] = golfie;
                oscard = tangon.bind(zuuluu)(oscard, report);
                report = 'children';
                entity[report] = oscard;
                entity = tangon.bind(zuuluu)(michal, entity);
                return entity;
            };
            offset['children'] = foxtra;
            offset = romeon.bind(tangon)(yankee, offset);
            verify[3] = offset;
            oscard['children'] = verify;
            oscard = option.bind(tangon)(golfie, oscard);
            report[1] = oscard;
            entity['children'] = report;
            entity = zuuluu.bind(tangon)(michal, entity);
            return entity;
        }
    };
    zuuluu['default'] = michal;
    return entity;
})();