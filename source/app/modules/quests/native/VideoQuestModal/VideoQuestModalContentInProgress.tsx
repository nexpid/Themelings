// app/modules/quests/native/VideoQuestModal/VideoQuestModalContentInProgress.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    report = argBar;
    golfie = argBaz;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    var _closure1_slot1 = golfie;
    var _closure1_slot2 = oscard;
    entity = global;
    verify = entity.Object;
    option = verify.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = option.bind(verify)(zuuluu, entity, tangon);
    entity = 0;
    tangon = oscard[entity];
    entity = undefined;
    tangon = golfie.bind(entity)(tangon);
    var _closure1_slot3 = tangon;
    tangon = 1;
    golfie = oscard[tangon];
    tangon = argCor;
    tangon = tangon.bind(entity)(golfie);
    var _closure1_slot4 = tangon;
    tangon = 2;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    golfie = tangon.View;
    var _closure1_slot5 = golfie;
    tangon = tangon.StyleSheet;
    var _closure1_slot6 = tangon;
    tangon = 3;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.QuestsExperimentLocations;
    var _closure1_slot7 = tangon;
    tangon = 4;
    golfie = oscard[tangon];
    golfie = report.bind(entity)(golfie);
    golfie = golfie.jsx;
    var _closure1_slot8 = golfie;
    golfie = oscard[tangon];
    golfie = report.bind(entity)(golfie);
    golfie = golfie.jsxs;
    var _closure1_slot9 = golfie;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.Fragment;
    var _closure1_slot10 = tangon;
    tangon = 5;
    tangon = oscard[tangon];
    option = report.bind(entity)(tangon);
    golfie = option.createStyles;
    tangon = function(argFoo) {
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            entity = {};
            michal = {'height': 210, 'position': 'relative'};
            entity['videoLandscape'] = michal;
            michal = {'borderRadius': null, 'backgroundColor': null, 'flexGrow': 1, 'flexShrink': 0, 'overflow': 'hidden'};
            option = _closure1_slot1;
            zuuluu = _closure1_slot2;
            oscard = 6;
            tangon = zuuluu[oscard];
            report = undefined;
            tangon = option.bind(report)(tangon);
            tangon = tangon.radii;
            tangon = tangon.xl;
            michal['borderRadius'] = tangon;
            tangon = zuuluu[oscard];
            tangon = option.bind(report)(tangon);
            tangon = tangon.colors;
            tangon = tangon.BACKGROUND_ACCENT;
            michal['backgroundColor'] = tangon;
            entity['videoWrapper'] = michal;
            michal = {};
            verify = zuuluu[oscard];
            verify = option.bind(report)(verify);
            verify = verify.colors;
            verify = verify.BACKGROUND_MOBILE_SECONDARY;
            michal['backgroundColor'] = verify;
            verify = zuuluu[oscard];
            verify = option.bind(report)(verify);
            verify = verify.radii;
            verify = verify.none;
            michal['borderTopLeftRadius'] = verify;
            verify = zuuluu[oscard];
            verify = option.bind(report)(verify);
            verify = verify.radii;
            verify = verify.none;
            michal['borderTopRightRadius'] = verify;
            entity['videoWrapperLandscape'] = michal;
            michal = {'flexDirection': 'column', 'pointerEvents': 'box-none', 'flexGrow': 1, 'flexShrink': 0, 'justifyContent': 'space-between'};
            verify = zuuluu[oscard];
            verify = option.bind(report)(verify);
            verify = verify.spacing;
            verify = verify.PX_16;
            michal['padding'] = verify;
            entity['videoContentWrapper'] = michal;
            michal = {};
            verify = zuuluu[oscard];
            verify = option.bind(report)(verify);
            verify = verify.spacing;
            verify = verify.PX_24;
            michal['paddingTop'] = verify;
            entity['videoContentWrapperLandscape'] = michal;
            michal = {};
            verify = _closure1_slot6;
            offset = verify.absoluteFillObject;
            yankee = michal;
            verify = copyDataProperties(yankee, offset);
            entity['videoContentWrapperPortrait'] = michal;
            michal = {};
            verify = 'row';
            michal['flexDirection'] = verify;
            entity['videoContentHeaderWrapper'] = michal;
            michal = {'flexGrow': 1, 'flexShrink': 1};
            entity['videoContentHeading'] = michal;
            michal = {'alignItems': 'center', 'flexDirection': 'row'};
            verify = zuuluu[oscard];
            verify = option.bind(report)(verify);
            verify = verify.spacing;
            verify = verify.PX_24;
            michal['marginBottom'] = verify;
            entity['questDetails'] = michal;
            michal = {'flexGrow': 1, 'flexShrink': 1};
            entity['questDetailsGame'] = michal;
            michal = {'justifyContent': 'flex-end', 'flexDirection': 'row'};
            zuuluu = zuuluu[oscard];
            zuuluu = option.bind(report)(zuuluu);
            zuuluu = zuuluu.spacing;
            zuuluu = zuuluu.PX_24;
            michal['padding'] = zuuluu;
            option = argFoo;
            zuuluu = undefined;
            if(!option) { _fun00002_ip = 423; continue _fun00001 }
 421:
            zuuluu = 0;
 423:
            michal['paddingBottom'] = zuuluu;
            tangon = _closure1_slot1;
            zuuluu = _closure1_slot2;
            option = zuuluu[oscard];
            option = tangon.bind(report)(option);
            option = option.spacing;
            option = option.PX_24;
            michal['gap'] = option;
            entity['footer'] = michal;
            michal = {'flexGrow': 0, 'flexShrink': 0};
            entity['questDetailsReward'] = michal;
            michal = {};
            option = zuuluu[oscard];
            option = tangon.bind(report)(option);
            option = option.colors;
            option = option.INTERACTIVE_ACTIVE;
            michal['color'] = option;
            entity['icon'] = michal;
            michal = {};
            option = zuuluu[oscard];
            option = tangon.bind(report)(option);
            option = option.colors;
            option = option.INTERACTIVE_NORMAL;
            michal['color'] = option;
            entity['iconDisabled'] = michal;
            michal = {};
            golfie = _closure1_slot6;
            offset = golfie.absoluteFillObject;
            yankee = michal;
            golfie = copyDataProperties(yankee, offset);
            entity['video'] = michal;
            michal = {};
            golfie = 'absolute';
            michal['position'] = golfie;
            golfie = zuuluu[oscard];
            golfie = tangon.bind(report)(golfie);
            golfie = golfie.spacing;
            golfie = golfie.PX_16;
            michal['top'] = golfie;
            zuuluu = zuuluu[oscard];
            zuuluu = tangon.bind(report)(zuuluu);
            zuuluu = zuuluu.spacing;
            zuuluu = zuuluu.PX_16;
            michal['right'] = zuuluu;
            entity['closeButtonLandscape'] = michal;
            return entity;
        }
    };
    tangon = golfie.bind(option)(tangon);
    var _closure1_slot11 = tangon;
    tangon = 37;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/quests/native/VideoQuestModal/VideoQuestModalContentInProgress.tsx';
    tangon = report.bind(oscard)(tangon);
    michal = function(argFoo) { // Original name: VideoQuestModalContentInProgress
        _fun00003: for(var _fun00004_ip = 0; ; ) switch(_fun00004_ip) {
 0:
            michal = argFoo;
            kiloes = michal.quest;
            var _closure2_slot0 = kiloes;
            entity = michal.onClose;
            var _closure2_slot1 = entity;
            zuuluu = michal.fullHeight;
            quebec = michal.onNavigateToPostWatchVideo;
            michal = _closure1_slot11;
            tangon = undefined;
            vacuum = michal.bind(tangon)(zuuluu);
            golfie = _closure1_slot4;
            michal = golfie.useState;
            verify = false;
            michal = michal.bind(golfie)(verify);
            option = _closure1_slot3;
            oscard = 2;
            michal = option.bind(tangon)(michal, oscard);
            report = 0;
            ctrled = michal[report];
            zuuluu = 1;
            michal = michal[zuuluu];
            var _closure2_slot2 = michal;
            michal = golfie.useState;
            michal = michal.bind(golfie)(verify);
            michal = option.bind(tangon)(michal, oscard);
            output = michal[report];
            michal = michal[zuuluu];
            var _closure2_slot3 = michal;
            report = golfie.useCallback;
            zuuluu = function() {
                zuuluu = _closure2_slot2;
                michal = undefined;
                entity = function(argFoo) {
                    entity = argFoo;
                    entity = !entity;
                    return entity;
                };
                entity = zuuluu.bind(michal)(entity);
                return entity;
            };
            michal = new Array(0);
            result = report.bind(golfie)(zuuluu, michal);
            report = golfie.useCallback;
            zuuluu = function() {
                zuuluu = _closure2_slot3;
                michal = undefined;
                entity = function(argFoo) {
                    entity = argFoo;
                    entity = !entity;
                    return entity;
                };
                entity = zuuluu.bind(michal)(entity);
                return entity;
            };
            michal = new Array(0);
            source = report.bind(golfie)(zuuluu, michal);
            report = golfie.useCallback;
            zuuluu = new Array(1);
            zuuluu[0] = kiloes;
            michal = function() {
                report = _closure1_slot1;
                michal = _closure1_slot2;
                entity = 7;
                tangon = michal[entity];
                entity = undefined;
                oscard = report.bind(entity)(tangon);
                report = oscard.openLazy;
                tangon = _closure1_slot0;
                zuuluu = 9;
                zuuluu = michal[zuuluu];
                tangon = tangon.bind(entity)(zuuluu);
                zuuluu = 8;
                zuuluu = michal[zuuluu];
                michal = michal.paths;
                tangon = tangon.bind(entity)(zuuluu, michal);
                golfie = _closure2_slot0;
                option = golfie.id;
                michal = global;
                michal = michal.HermesInternal;
                zuuluu = michal.concat;
                michal = 'transcript-';
                zuuluu = zuuluu.bind(michal)(option);
                michal = {};
                michal['quest'] = golfie;
                michal = report.bind(oscard)(tangon, zuuluu, michal);
                return entity;
            };
            config = report.bind(golfie)(michal, zuuluu);
            report = golfie.useCallback;
            michal = kiloes.id;
            zuuluu = new Array(1);
            zuuluu[0] = michal;
            michal = function() {
                offset = _closure1_slot0;
                golfie = _closure1_slot2;
                entity = 10;
                zuuluu = golfie[entity];
                entity = undefined;
                option = offset.bind(entity)(zuuluu);
                oscard = option.copyShareLink;
                report = _closure2_slot0;
                tangon = report.id;
                zuuluu = {};
                verify = 11;
                verify = golfie[verify];
                verify = offset.bind(entity)(verify);
                verify = verify.QuestContent;
                verify = verify.VIDEO_MODAL_MOBILE;
                zuuluu['content'] = verify;
                verify = 12;
                verify = golfie[verify];
                verify = offset.bind(entity)(verify);
                verify = verify.QuestContentCTA;
                verify = verify.CONTEXT_MENU_COPY_LINK;
                zuuluu['ctaContent'] = verify;
                zuuluu = oscard.bind(option)(tangon, zuuluu);
                oscard = _closure1_slot1;
                michal = 13;
                michal = golfie[michal];
                tangon = oscard.bind(entity)(michal);
                zuuluu = tangon.open;
                michal = {};
                verify = report.id;
                report = global;
                report = report.HermesInternal;
                option = report.concat;
                report = 'copy-share-link-toast-';
                report = option.bind(report)(verify);
                michal['key'] = report;
                report = 14;
                option = golfie[report];
                option = offset.bind(entity)(option);
                verify = option.intl;
                option = verify.string;
                report = golfie[report];
                report = offset.bind(entity)(report);
                report = report.t;
                report = report.t5VZ8/;
                report = option.bind(verify)(report);
                michal['content'] = report;
                report = 15;
                report = golfie[report];
                report = oscard.bind(entity)(report);
                michal['icon'] = report;
                michal = zuuluu.bind(tangon)(michal);
                return entity;
            };
            yankee = report.bind(golfie)(michal, zuuluu);
            zuuluu = golfie.useCallback;
            michal = new Array(1);
            michal[0] = entity;
            entity = function() {
                michal = _closure2_slot1;
                entity = undefined;
                michal = michal.bind(entity)();
                return entity;
            };
            record = zuuluu.bind(golfie)(entity, michal);
            michal = _closure1_slot0;
            zuuluu = _closure1_slot2;
            romeon = 16;
            entity = zuuluu[romeon];
            report = michal.bind(tangon)(entity);
            entity = report.useQuestImpressionId;
            entity = entity.bind(report)();
            var _closure2_slot4 = entity;
            oscard = golfie.useCallback;
            report = new Array(2);
            report[0] = kiloes;
            report[1] = entity;
            entity = function() {
                option = _closure1_slot0;
                verify = _closure1_slot2;
                entity = 10;
                michal = verify[entity];
                entity = undefined;
                report = option.bind(entity)(michal);
                tangon = report.openGameLink;
                zuuluu = _closure2_slot0;
                michal = {};
                golfie = 11;
                golfie = verify[golfie];
                golfie = option.bind(entity)(golfie);
                golfie = golfie.QuestContent;
                golfie = golfie.VIDEO_MODAL_MOBILE;
                michal['content'] = golfie;
                golfie = 12;
                golfie = verify[golfie];
                golfie = option.bind(entity)(golfie);
                golfie = golfie.QuestContentCTA;
                golfie = golfie.OPEN_GAME_LINK;
                michal['ctaContent'] = golfie;
                oscard = _closure2_slot4;
                michal['impressionId'] = oscard;
                michal = tangon.bind(report)(zuuluu, michal);
                return entity;
            };
            variable36 = oscard.bind(golfie)(entity, report);
            oscard = golfie.useCallback;
            entity = kiloes.id;
            report = new Array(1);
            report[0] = entity;
            entity = function() {
                zuuluu = _closure1_slot0;
                michal = _closure1_slot2;
                entity = 17;
                michal = michal[entity];
                entity = undefined;
                tangon = zuuluu.bind(entity)(michal);
                zuuluu = tangon.openRewardDetailsBottomSheet;
                michal = {};
                report = _closure2_slot0;
                report = report.id;
                michal['questId'] = report;
                michal = zuuluu.bind(tangon)(michal);
                return entity;
            };
            equals = oscard.bind(golfie)(entity, report);
            entity = 18;
            entity = zuuluu[entity];
            report = michal.bind(tangon)(entity);
            entity = report.useQuestTaskDetails;
            variable37 = entity.bind(report)(kiloes);
            entity = 10;
            entity = zuuluu[entity];
            zuuluu = michal.bind(tangon)(entity);
            michal = zuuluu.getVideoOrientation;
            entity = kiloes.config;
            michal = michal.bind(zuuluu)(entity);
            entity = 'portrait';
            cntext = entity === michal;
            zuuluu = kiloes.userStatus;
            michal = null;
            report = michal == zuuluu;
            entity = undefined;
            if(report) { _fun00004_ip = 431; continue _fun00003 }
 425:
            entity = zuuluu.completedAt;
 431:
            sierra = michal != entity;
            zuuluu = _closure1_slot9;
            michal = _closure1_slot10;
            entity = {};
            oscard = _closure1_slot5;
            report = {};
            option = vacuum.videoWrapper;
            golfie = new Array(2);
            golfie[0] = option;
            sizing = !cntext;
            option = sizing;
            if(cntext) { _fun00004_ip = 480; continue _fun00003 }
 474:
            option = vacuum.videoWrapperLandscape;
 480:
            golfie[1] = option;
            report['style'] = golfie;
            verify = _closure1_slot8;
            option = _closure1_slot0;
            offset = _closure1_slot2;
            golfie = 19;
            golfie = offset[golfie];
            golfie = option.bind(tangon)(golfie);
            option = golfie.VideoQuestPlayer;
            golfie = {};
            golfie['quest'] = kiloes;
            golfie['captionsEnabled'] = ctrled;
            golfie['muted'] = output;
            offset = sizing;
            if(cntext) { _fun00004_ip = 547; continue _fun00003 }
 541:
            offset = vacuum.videoLandscape;
 547:
            golfie['style'] = offset;
            offset = {'bottom': null, 'left': 16, 'right': 16};
            if(!cntext) { _fun00004_ip = 571; continue _fun00003 }
 568:
            romeon = 158;
 571:
            offset['bottom'] = romeon;
            golfie['safeAreaInsets'] = offset;
            option = verify.bind(tangon)(option, golfie);
            golfie = new Array(3);
            golfie[0] = option;
            option = sizing;
            if(cntext) { _fun00004_ip = 649; continue _fun00003 }
 602:
            romeon = _closure1_slot8;
            offset = _closure1_slot1;
            echoed = _closure1_slot2;
            verify = 20;
            verify = echoed[verify];
            offset = offset.bind(tangon)(verify);
            verify = {};
            verify['onClose'] = record;
            echoed = vacuum.closeButtonLandscape;
            verify['style'] = echoed;
            option = romeon.bind(tangon)(offset, verify);
 649:
            golfie[1] = option;
            offset = _closure1_slot9;
            verify = _closure1_slot5;
            option = {};
            echoed = vacuum.videoContentWrapper;
            romeon = new Array(2);
            romeon[0] = echoed;
            if(cntext) { _fun00004_ip = 688; continue _fun00003 }
 680:
            echoed = vacuum.videoContentWrapperLandscape;
            _fun00004_ip = 694; continue _fun00003;
 688:
            echoed = vacuum.videoContentWrapperPortrait;
 694:
            romeon[1] = echoed;
            option['style'] = romeon;
            echoed = cntext;
            if(!cntext) { _fun00004_ip = 750; continue _fun00003 }
 708:
            sequen = _closure1_slot8;
            update = _closure1_slot1;
            papara = _closure1_slot2;
            romeon = 21;
            romeon = papara[romeon];
            update = update.bind(tangon)(romeon);
            romeon = {};
            romeon['quest'] = kiloes;
            romeon['onClose'] = record;
            echoed = sequen.bind(tangon)(update, romeon);
 750:
            romeon = new Array(3);
            romeon[0] = echoed;
            if(cntext) { _fun00004_ip = 798; continue _fun00003 }
 761:
            sequen = _closure1_slot8;
            update = _closure1_slot1;
            record = _closure1_slot2;
            echoed = 22;
            echoed = record[echoed];
            update = update.bind(tangon)(echoed);
            echoed = {};
            echoed['quest'] = kiloes;
            sizing = sequen.bind(tangon)(update, echoed);
 798:
            romeon[1] = sizing;
            sequen = _closure1_slot9;
            echoed = _closure1_slot5;
            sizing = {};
            update = {};
            record = vacuum.questDetails;
            update['style'] = record;
            record = {};
            papara = vacuum.questDetailsGame;
            record['style'] = papara;
            limora = _closure1_slot8;
            status = _closure1_slot0;
            whisks = _closure1_slot2;
            target = 23;
            papara = whisks[target];
            papara = status.bind(tangon)(papara);
            variable38 = papara.Text;
            papara = {'variant': 'heading-lg/semibold', 'color': 'white'};
            variable39 = kiloes.config;
            variable39 = variable39.messages;
            variable39 = variable39.gameTitle;
            papara['children'] = variable39;
            variable38 = limora.bind(tangon)(variable38, papara);
            papara = new Array(2);
            papara[0] = variable38;
            target = whisks[target];
            target = status.bind(tangon)(target);
            status = target.Text;
            target = {'variant': 'heading-sm/semibold', 'color': 'text-normal'};
            whisks = kiloes.config;
            whisks = whisks.messages;
            whisks = whisks.gamePublisher;
            target['children'] = whisks;
            target = limora.bind(tangon)(status, target);
            papara[1] = target;
            record['children'] = papara;
            papara = sequen.bind(tangon)(echoed, record);
            record = new Array(2);
            record[0] = papara;
            if(!cntext) { _fun00004_ip = 1087; continue _fun00003 }
 994:
            status = _closure1_slot8;
            target = _closure1_slot5;
            papara = {};
            limora = vacuum.questDetailsReward;
            papara['style'] = limora;
            whisks = _closure1_slot1;
            variable38 = _closure1_slot2;
            limora = 24;
            limora = variable38[limora];
            whisks = whisks.bind(tangon)(limora);
            limora = {};
            limora['quest'] = kiloes;
            variable38 = 'x-sm';
            limora['size'] = variable38;
            variable37 = variable37.percentComplete;
            limora['progress'] = variable37;
            variable37 = true;
            limora['hasConfetti'] = variable37;
            limora['onPress'] = equals;
            limora = status.bind(tangon)(whisks, limora);
            papara['children'] = limora;
            cntext = status.bind(tangon)(target, papara);
 1087:
            record[1] = cntext;
            update['children'] = record;
            update = sequen.bind(tangon)(echoed, update);
            record = new Array(2);
            record[0] = update;
            target = _closure1_slot9;
            variable39 = _closure1_slot0;
            equals = _closure1_slot2;
            update = 25;
            update = equals[update];
            update = variable39.bind(tangon)(update);
            papara = update.Stack;
            cntext = {};
            update = 'horizontal';
            cntext['direction'] = update;
            limora = _closure1_slot1;
            update = 6;
            status = equals[update];
            status = limora.bind(tangon)(status);
            status = status.spacing;
            status = status.PX_16;
            cntext['spacing'] = status;
            whisks = _closure1_slot8;
            status = 26;
            status = equals[status];
            status = variable39.bind(tangon)(status);
            limora = status.Button;
            status = {};
            variable37 = true;
            status['grow'] = variable37;
            status['onPress'] = variable36;
            variable36 = 14;
            variable37 = equals[variable36];
            variable37 = variable39.bind(tangon)(variable37);
            variable38 = variable37.intl;
            variable37 = variable38.string;
            equals = equals[variable36];
            equals = variable39.bind(tangon)(equals);
            equals = equals.t;
            equals = equals.hvVgAQ;
            equals = variable37.bind(variable38)(equals);
            status['text'] = equals;
            limora = whisks.bind(tangon)(limora, status);
            status = new Array(2);
            status[0] = limora;
            if(!sierra) { _fun00004_ip = 1401; continue _fun00003 }
 1283:
            equals = _closure1_slot8;
            variable40 = _closure1_slot0;
            variable38 = _closure1_slot2;
            limora = 27;
            limora = variable38[limora];
            limora = variable40.bind(tangon)(limora);
            whisks = limora.IconButton;
            limora = {};
            variable37 = variable38[variable36];
            variable37 = variable40.bind(tangon)(variable37);
            variable39 = variable37.intl;
            variable37 = variable39.string;
            variable36 = variable38[variable36];
            variable36 = variable40.bind(tangon)(variable36);
            variable36 = variable36.t;
            variable36 = variable36.YsCuyM;
            variable36 = variable37.bind(variable39)(variable36);
            limora['accessibilityLabel'] = variable36;
            variable37 = _closure1_slot1;
            variable36 = 28;
            variable36 = variable38[variable36];
            variable36 = variable37.bind(tangon)(variable36);
            limora['icon'] = variable36;
            limora['onPress'] = quebec;
            quebec = 'secondary';
            limora['variant'] = quebec;
            sierra = equals.bind(tangon)(whisks, limora);
 1401:
            status[1] = sierra;
            cntext['children'] = status;
            cntext = target.bind(tangon)(papara, cntext);
            record[1] = cntext;
            sizing['children'] = record;
            sizing = sequen.bind(tangon)(echoed, sizing);
            romeon[2] = sizing;
            option['children'] = romeon;
            option = offset.bind(tangon)(verify, option);
            golfie[2] = option;
            report['children'] = golfie;
            oscard = zuuluu.bind(tangon)(oscard, report);
            report = new Array(2);
            report[0] = oscard;
            option = _closure1_slot9;
            golfie = _closure1_slot5;
            oscard = {};
            verify = vacuum.footer;
            oscard['style'] = verify;
            sizing = _closure1_slot8;
            romeon = _closure1_slot0;
            verify = _closure1_slot2;
            offset = 29;
            verify = verify[offset];
            verify = romeon.bind(tangon)(verify);
            romeon = verify.PressableOpacity;
            verify = {};
            echoed = 'button';
            verify['accessibilityRole'] = echoed;
            verify['onPress'] = source;
            sequen = _closure1_slot0;
            record = _closure1_slot2;
            if(output) { _fun00004_ip = 1560; continue _fun00003 }
 1540:
            output = 31;
            output = record[output];
            output = sequen.bind(tangon)(output);
            source = output.VoiceNormalIcon;
            _fun00004_ip = 1578; continue _fun00003;
 1560:
            output = 30;
            output = record[output];
            output = sequen.bind(tangon)(output);
            source = output.VoiceXIcon;
 1578:
            output = {};
            sequen = vacuum.icon;
            sequen = sequen.color;
            output['color'] = sequen;
            output = sizing.bind(tangon)(source, output);
            verify['children'] = output;
            romeon = sizing.bind(tangon)(romeon, verify);
            verify = new Array(5);
            verify[0] = romeon;
            output = _closure1_slot8;
            source = _closure1_slot0;
            sequen = _closure1_slot2;
            romeon = sequen[offset];
            romeon = source.bind(tangon)(romeon);
            sizing = romeon.PressableOpacity;
            romeon = {};
            romeon['accessibilityRole'] = echoed;
            romeon['onPress'] = config;
            config = 32;
            config = sequen[config];
            config = source.bind(tangon)(config);
            record = config.PaperIcon;
            config = {};
            cntext = vacuum.iconDisabled;
            cntext = cntext.color;
            config['color'] = cntext;
            config = output.bind(tangon)(record, config);
            romeon['children'] = config;
            romeon = output.bind(tangon)(sizing, romeon);
            verify[1] = romeon;
            romeon = sequen[offset];
            romeon = source.bind(tangon)(romeon);
            sizing = romeon.PressableOpacity;
            romeon = {};
            romeon['accessibilityRole'] = echoed;
            romeon['onPress'] = result;
            result = 33;
            result = sequen[result];
            result = source.bind(tangon)(result);
            source = result.CaptionIcon;
            result = {};
            if(ctrled) { _fun00004_ip = 1771; continue _fun00003 }
 1758:
            ctrled = vacuum.iconDisabled;
            ctrled = ctrled.color;
            _fun00004_ip = 1781; continue _fun00003;
 1771:
            vacuum = vacuum.icon;
            ctrled = vacuum.color;
 1781:
            result['color'] = ctrled;
            result = output.bind(tangon)(source, result);
            romeon['children'] = result;
            romeon = output.bind(tangon)(sizing, romeon);
            verify[2] = romeon;
            romeon = _closure1_slot8;
            result = _closure1_slot0;
            sizing = _closure1_slot2;
            offset = sizing[offset];
            offset = result.bind(tangon)(offset);
            output = offset.PressableOpacity;
            offset = {};
            offset['accessibilityRole'] = echoed;
            offset['onPress'] = yankee;
            yankee = 34;
            yankee = sizing[yankee];
            yankee = result.bind(tangon)(yankee);
            echoed = yankee.CopyIcon;
            result = {};
            yankee = _closure1_slot1;
            update = sizing[update];
            update = yankee.bind(tangon)(update);
            update = update.colors;
            update = update.TEXT_NORMAL;
            result['color'] = update;
            result = romeon.bind(tangon)(echoed, result);
            offset['children'] = result;
            offset = romeon.bind(tangon)(output, offset);
            verify[3] = offset;
            offset = 35;
            offset = sizing[offset];
            yankee = yankee.bind(tangon)(offset);
            offset = {};
            offset['quest'] = kiloes;
            backup = _closure1_slot7;
            backup = backup.VIDEO_MODAL_MOBILE;
            offset['location'] = backup;
            foxtra = function(argFoo) { // Original name: children
                tangon = _closure1_slot8;
                oscard = _closure1_slot0;
                verify = _closure1_slot2;
                entity = 29;
                entity = verify[entity];
                zuuluu = undefined;
                entity = oscard.bind(zuuluu)(entity);
                michal = entity.PressableOpacity;
                entity = {};
                report = 'button';
                entity['accessibilityRole'] = report;
                offset = argFoo;
                yankee = entity;
                report = copyDataProperties(yankee, offset);
                report = 36;
                report = verify[report];
                report = oscard.bind(zuuluu)(report);
                oscard = report.MoreHorizontalIcon;
                report = {};
                option = _closure1_slot1;
                golfie = 6;
                golfie = verify[golfie];
                golfie = option.bind(zuuluu)(golfie);
                golfie = golfie.colors;
                golfie = golfie.TEXT_NORMAL;
                report['color'] = golfie;
                oscard = tangon.bind(zuuluu)(oscard, report);
                report = 'children';
                entity[report] = oscard;
                entity = tangon.bind(zuuluu)(michal, entity);
                return entity;
            };
            offset['children'] = foxtra;
            offset = romeon.bind(tangon)(yankee, offset);
            verify[4] = offset;
            oscard['children'] = verify;
            oscard = option.bind(tangon)(golfie, oscard);
            report[1] = oscard;
            entity['children'] = report;
            entity = zuuluu.bind(tangon)(michal, entity);
            return entity;
        }
    };
    zuuluu['default'] = michal;
    return entity;
})();