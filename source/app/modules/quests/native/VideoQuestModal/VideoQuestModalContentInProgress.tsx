// app/modules/quests/native/VideoQuestModal/VideoQuestModalContentInProgress.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    report = argBar;
    golfie = argBaz;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    var _closure1_slot1 = golfie;
    var _closure1_slot2 = oscard;
    entity = global;
    verify = entity.Object;
    option = verify.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = option.bind(verify)(zuuluu, entity, tangon);
    entity = 0;
    tangon = oscard[entity];
    entity = undefined;
    tangon = golfie.bind(entity)(tangon);
    var _closure1_slot3 = tangon;
    tangon = 1;
    golfie = oscard[tangon];
    tangon = argCor;
    tangon = tangon.bind(entity)(golfie);
    var _closure1_slot4 = tangon;
    tangon = 2;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    golfie = tangon.View;
    var _closure1_slot5 = golfie;
    tangon = tangon.StyleSheet;
    var _closure1_slot6 = tangon;
    tangon = 3;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.QuestsExperimentLocations;
    var _closure1_slot7 = tangon;
    tangon = 4;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    golfie = tangon.jsx;
    var _closure1_slot8 = golfie;
    tangon = tangon.jsxs;
    var _closure1_slot9 = tangon;
    tangon = 5;
    tangon = oscard[tangon];
    option = report.bind(entity)(tangon);
    golfie = option.createStyles;
    tangon = function(argFoo) {
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            entity = {};
            verify = 1;
            michal = {'flex': 1, 'justifyContent': 'space-between'};
            entity['wrapper'] = michal;
            michal = {'aspectRatio': 1.7777777777777777, 'width': '100%', 'position': 'relative'};
            entity['videoLandscape'] = michal;
            michal = {'borderRadius': null, 'flexGrow': 0, 'flexShrink': 0, 'overflow': 'hidden'};
            option = _closure1_slot1;
            tangon = _closure1_slot2;
            oscard = 6;
            zuuluu = tangon[oscard];
            report = undefined;
            zuuluu = option.bind(report)(zuuluu);
            zuuluu = zuuluu.radii;
            zuuluu = zuuluu.lg;
            michal['borderRadius'] = zuuluu;
            entity['videoWrapper'] = michal;
            michal = {};
            michal['flexGrow'] = verify;
            offset = tangon[oscard];
            offset = option.bind(report)(offset);
            offset = offset.radii;
            offset = offset.none;
            michal['borderTopLeftRadius'] = offset;
            offset = tangon[oscard];
            offset = option.bind(report)(offset);
            offset = offset.radii;
            offset = offset.none;
            michal['borderTopRightRadius'] = offset;
            entity['videoWrapperLandscape'] = michal;
            michal = {'flexDirection': 'column', 'pointerEvents': 'box-none', 'flexGrow': 1, 'flexShrink': 0, 'justifyContent': 'space-between'};
            offset = tangon[oscard];
            offset = option.bind(report)(offset);
            offset = offset.spacing;
            offset = offset.PX_16;
            michal['padding'] = offset;
            entity['videoContentWrapper'] = michal;
            michal = {'paddingHorizontal': 0, 'paddingBottom': 0};
            offset = tangon[oscard];
            offset = option.bind(report)(offset);
            offset = offset.spacing;
            offset = offset.PX_24;
            michal['paddingTop'] = offset;
            entity['videoContentWrapperLandscape'] = michal;
            michal = {};
            offset = _closure1_slot6;
            yankee = offset.absoluteFillObject;
            romeon = michal;
            offset = copyDataProperties(romeon, yankee);
            entity['videoContentWrapperPortrait'] = michal;
            michal = {};
            offset = 'row';
            michal['flexDirection'] = offset;
            entity['videoContentHeaderWrapper'] = michal;
            michal = {'flexGrow': 1, 'flexShrink': 1};
            entity['videoContentHeading'] = michal;
            michal = {};
            michal['flex'] = verify;
            entity['rewardContainer'] = michal;
            michal = {'alignItems': 'center', 'flexDirection': 'row'};
            entity['questDetails'] = michal;
            michal = {};
            michal['borderTopWidth'] = verify;
            verify = tangon[oscard];
            verify = option.bind(report)(verify);
            verify = verify.colors;
            verify = verify.BACKGROUND_ACCENT;
            michal['borderColor'] = verify;
            verify = tangon[oscard];
            verify = option.bind(report)(verify);
            verify = verify.spacing;
            verify = verify.PX_16;
            michal['paddingHorizontal'] = verify;
            verify = tangon[oscard];
            verify = option.bind(report)(verify);
            verify = verify.spacing;
            verify = verify.PX_24;
            michal['paddingTop'] = verify;
            entity['questDetailsLandscape'] = michal;
            michal = {'flexGrow': 1, 'flexShrink': 1};
            entity['questDetailsPrimary'] = michal;
            michal = {'flexGrow': 0, 'flexShrink': 0};
            entity['questDetailsSecondary'] = michal;
            michal = {};
            verify = tangon[oscard];
            verify = option.bind(report)(verify);
            verify = verify.colors;
            verify = verify.BACKGROUND_ACCENT;
            michal['backgroundColor'] = verify;
            verify = tangon[oscard];
            verify = option.bind(report)(verify);
            verify = verify.radii;
            verify = verify.round;
            michal['borderRadius'] = verify;
            verify = tangon[oscard];
            verify = option.bind(report)(verify);
            verify = verify.spacing;
            verify = verify.PX_8;
            michal['padding'] = verify;
            entity['questDetailsSecondaryButton'] = michal;
            michal = {'justifyContent': 'flex-end', 'flexDirection': 'row'};
            tangon = tangon[oscard];
            tangon = option.bind(report)(tangon);
            tangon = tangon.spacing;
            tangon = tangon.PX_24;
            michal['padding'] = tangon;
            tangon = argFoo;
            zuuluu = 0;
            if(!tangon) { _fun00002_ip = 602; continue _fun00001 }
 575:
            option = _closure1_slot1;
            tangon = _closure1_slot2;
            tangon = tangon[oscard];
            tangon = option.bind(report)(tangon);
            tangon = tangon.spacing;
            zuuluu = tangon.PX_16;
 602:
            michal['paddingBottom'] = zuuluu;
            tangon = _closure1_slot1;
            zuuluu = _closure1_slot2;
            option = zuuluu[oscard];
            option = tangon.bind(report)(option);
            option = option.spacing;
            option = option.PX_24;
            michal['gap'] = option;
            entity['footer'] = michal;
            michal = {};
            option = zuuluu[oscard];
            option = tangon.bind(report)(option);
            option = option.colors;
            option = option.INTERACTIVE_ACTIVE;
            michal['color'] = option;
            entity['icon'] = michal;
            michal = {};
            option = zuuluu[oscard];
            option = tangon.bind(report)(option);
            option = option.colors;
            option = option.INTERACTIVE_NORMAL;
            michal['color'] = option;
            entity['iconDisabled'] = michal;
            michal = {};
            golfie = _closure1_slot6;
            yankee = golfie.absoluteFillObject;
            romeon = michal;
            option = copyDataProperties(romeon, yankee);
            entity['video'] = michal;
            michal = {};
            option = 'absolute';
            michal['position'] = option;
            option = zuuluu[oscard];
            option = tangon.bind(report)(option);
            option = option.spacing;
            option = option.PX_16;
            michal['top'] = option;
            option = zuuluu[oscard];
            option = tangon.bind(report)(option);
            option = option.spacing;
            option = option.PX_16;
            michal['right'] = option;
            entity['closeButtonLandscape'] = michal;
            michal = {};
            yankee = golfie.absoluteFillObject;
            romeon = michal;
            option = copyDataProperties(romeon, yankee);
            option = 'bottom';
            michal[option] = report;
            verify = 70;
            option = 'height';
            michal[option] = verify;
            entity['gradientTop'] = michal;
            michal = {};
            yankee = golfie.absoluteFillObject;
            romeon = michal;
            golfie = copyDataProperties(romeon, yankee);
            golfie = 'top';
            michal[golfie] = report;
            golfie = 150;
            michal[option] = golfie;
            entity['gradientBottom'] = michal;
            michal = {'margin': 4294967281, 'padding': 15, 'textShadowColor': null, 'textShadowOffset': null, 'textShadowRadius': 15};
            golfie = zuuluu[oscard];
            golfie = tangon.bind(report)(golfie);
            golfie = golfie.colors;
            golfie = golfie.BLACK;
            michal['textShadowColor'] = golfie;
            golfie = {'width': 0, 'height': 0};
            michal['textShadowOffset'] = golfie;
            entity['textShadow'] = michal;
            michal = {'borderRadius': null, 'flexGrow': 1, 'flexShrink': 1};
            golfie = zuuluu[oscard];
            golfie = tangon.bind(report)(golfie);
            golfie = golfie.radii;
            golfie = golfie.round;
            michal['borderRadius'] = golfie;
            entity['ctaPrimary'] = michal;
            michal = {'borderRadius': null, 'height': 96, 'width': '100%'};
            zuuluu = zuuluu[oscard];
            zuuluu = tangon.bind(report)(zuuluu);
            zuuluu = zuuluu.radii;
            zuuluu = zuuluu.lg;
            michal['borderRadius'] = zuuluu;
            entity['playerThumbnail'] = michal;
            return entity;
        }
    };
    tangon = golfie.bind(option)(tangon);
    var _closure1_slot10 = tangon;
    tangon = 45;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/quests/native/VideoQuestModal/VideoQuestModalContentInProgress.tsx';
    tangon = report.bind(oscard)(tangon);
    michal = function(argFoo) { // Original name: VideoQuestModalContentInProgress
        _fun00003: for(var _fun00004_ip = 0; ; ) switch(_fun00004_ip) {
 0:
            entity = argFoo;
            zuuluu = entity.onClose;
            var _closure2_slot0 = zuuluu;
            quebec = entity.onNavigateToPostWatchVideo;
            oscard = _closure1_slot10;
            michal = _closure1_slot0;
            entity = _closure1_slot2;
            tangon = 7;
            report = entity[tangon];
            tangon = undefined;
            golfie = michal.bind(tangon)(report);
            report = golfie.isAndroid;
            report = report.bind(golfie)();
            sequen = oscard.bind(tangon)(report);
            var _closure2_slot1 = sequen;
            option = _closure1_slot4;
            oscard = option.useState;
            report = false;
            oscard = oscard.bind(option)(report);
            report = _closure1_slot3;
            yankee = 2;
            report = report.bind(tangon)(oscard, yankee);
            status = 0;
            vacuum = report[status];
            golfie = 1;
            report = report[golfie];
            var _closure2_slot2 = report;
            report = 8;
            report = entity[report];
            oscard = michal.bind(tangon)(report);
            report = oscard.useVideoQuestModalContext;
            report = report.bind(oscard)();
            sizing = report.quest;
            var _closure2_slot3 = sizing;
            verify = option.useCallback;
            oscard = function() {
                zuuluu = _closure2_slot2;
                michal = undefined;
                entity = function(argFoo) {
                    entity = argFoo;
                    entity = !entity;
                    return entity;
                };
                entity = zuuluu.bind(michal)(entity);
                return entity;
            };
            report = new Array(0);
            echoed = verify.bind(option)(oscard, report);
            var _closure2_slot4 = echoed;
            verify = option.useCallback;
            oscard = new Array(1);
            oscard[0] = sizing;
            report = function() {
                report = _closure1_slot1;
                michal = _closure1_slot2;
                entity = 9;
                tangon = michal[entity];
                entity = undefined;
                oscard = report.bind(entity)(tangon);
                report = oscard.openLazy;
                tangon = _closure1_slot0;
                zuuluu = 11;
                zuuluu = michal[zuuluu];
                tangon = tangon.bind(entity)(zuuluu);
                zuuluu = 10;
                zuuluu = michal[zuuluu];
                michal = michal.paths;
                tangon = tangon.bind(entity)(zuuluu, michal);
                golfie = _closure2_slot3;
                option = golfie.id;
                michal = global;
                michal = michal.HermesInternal;
                zuuluu = michal.concat;
                michal = 'transcript-';
                zuuluu = zuuluu.bind(michal)(option);
                michal = {};
                michal['quest'] = golfie;
                michal = report.bind(oscard)(tangon, zuuluu, michal);
                return entity;
            };
            output = verify.bind(option)(report, oscard);
            var _closure2_slot5 = output;
            verify = option.useCallback;
            report = sizing.id;
            oscard = new Array(1);
            oscard[0] = report;
            report = function() {
                oscard = _closure1_slot0;
                golfie = _closure1_slot2;
                entity = 12;
                michal = golfie[entity];
                entity = undefined;
                report = oscard.bind(entity)(michal);
                tangon = report.showShareActionSheet;
                zuuluu = {};
                michal = 13;
                michal = golfie[michal];
                golfie = oscard.bind(entity)(michal);
                oscard = golfie.getQuestUrl;
                michal = _closure2_slot3;
                michal = michal.id;
                michal = oscard.bind(golfie)(michal);
                zuuluu['message'] = michal;
                michal = 'Video Quest Modal';
                michal = tangon.bind(report)(zuuluu, michal);
                return entity;
            };
            romeon = verify.bind(option)(report, oscard);
            oscard = option.useCallback;
            report = new Array(1);
            report[0] = zuuluu;
            zuuluu = function() {
                michal = _closure2_slot0;
                entity = undefined;
                michal = michal.bind(entity)();
                return entity;
            };
            config = oscard.bind(option)(zuuluu, report);
            zuuluu = 14;
            zuuluu = entity[zuuluu];
            report = michal.bind(tangon)(zuuluu);
            zuuluu = report.useQuestImpressionId;
            zuuluu = zuuluu.bind(report)();
            var _closure2_slot6 = zuuluu;
            oscard = option.useCallback;
            report = new Array(2);
            report[0] = sizing;
            report[1] = zuuluu;
            zuuluu = function() {
                option = _closure1_slot0;
                verify = _closure1_slot2;
                entity = 13;
                michal = verify[entity];
                entity = undefined;
                report = option.bind(entity)(michal);
                tangon = report.openGameLink;
                zuuluu = _closure2_slot3;
                michal = {};
                golfie = 15;
                golfie = verify[golfie];
                golfie = option.bind(entity)(golfie);
                golfie = golfie.QuestContent;
                golfie = golfie.VIDEO_MODAL_MOBILE;
                michal['content'] = golfie;
                golfie = 16;
                golfie = verify[golfie];
                golfie = option.bind(entity)(golfie);
                golfie = golfie.QuestContentCTA;
                golfie = golfie.OPEN_GAME_LINK;
                michal['ctaContent'] = golfie;
                oscard = _closure2_slot6;
                michal['impressionId'] = oscard;
                michal = tangon.bind(report)(zuuluu, michal);
                return entity;
            };
            variable39 = oscard.bind(option)(zuuluu, report);
            oscard = option.useCallback;
            zuuluu = sizing.id;
            report = new Array(1);
            report[0] = zuuluu;
            zuuluu = function() {
                zuuluu = _closure1_slot0;
                michal = _closure1_slot2;
                entity = 17;
                michal = michal[entity];
                entity = undefined;
                tangon = zuuluu.bind(entity)(michal);
                zuuluu = tangon.openRewardDetailsBottomSheet;
                michal = {};
                report = _closure2_slot3;
                report = report.id;
                michal['questId'] = report;
                michal = zuuluu.bind(tangon)(michal);
                return entity;
            };
            variable45 = oscard.bind(option)(zuuluu, report);
            oscard = option.useMemo;
            report = new Array(1);
            report[0] = sizing;
            zuuluu = function() {
                oscard = _closure1_slot0;
                golfie = _closure1_slot2;
                entity = 18;
                michal = golfie[entity];
                report = undefined;
                tangon = oscard.bind(report)(michal);
                zuuluu = tangon.getQuestAsset;
                michal = _closure2_slot3;
                entity = golfie[entity];
                entity = oscard.bind(report)(entity);
                entity = entity.QuestAssetType;
                entity = entity.HERO;
                entity = zuuluu.bind(tangon)(michal, entity);
                return entity;
            };
            variable36 = oscard.bind(option)(zuuluu, report);
            zuuluu = 19;
            zuuluu = entity[zuuluu];
            report = michal.bind(tangon)(zuuluu);
            zuuluu = report.useQuestTaskDetails;
            variable47 = zuuluu.bind(report)(sizing);
            variable38 = 13;
            entity = entity[variable38];
            zuuluu = michal.bind(tangon)(entity);
            michal = zuuluu.getVideoOrientation;
            entity = sizing.config;
            entity = michal.bind(zuuluu)(entity);
            result = 'portrait';
            oscard = result === entity;
            var _closure2_slot7 = oscard;
            michal = sizing.userStatus;
            target = null;
            zuuluu = target == michal;
            entity = undefined;
            if(zuuluu) { _fun00004_ip = 460; continue _fun00003 }
 454:
            entity = michal.completedAt;
 460:
            sierra = target != entity;
            option = _closure1_slot4;
            zuuluu = option.useMemo;
            michal = new Array(3);
            michal[0] = oscard;
            michal[1] = output;
            michal[2] = echoed;
            entity = function() {
                _fun00005: for(var _fun00006_ip = 0; ; ) switch(_fun00006_ip) {
 0:
                    entity = _closure2_slot7;
                    if(entity) { _fun00006_ip = 200; continue _fun00005 }
 13:
                    michal = {};
                    option = _closure1_slot0;
                    verify = _closure1_slot2;
                    tangon = 20;
                    entity = verify[tangon];
                    golfie = undefined;
                    entity = option.bind(golfie)(entity);
                    oscard = entity.intl;
                    report = oscard.string;
                    entity = verify[tangon];
                    entity = option.bind(golfie)(entity);
                    entity = entity.t;
                    entity = entity.KCzjTk;
                    entity = report.bind(oscard)(entity);
                    michal['label'] = entity;
                    entity = 21;
                    entity = verify[entity];
                    entity = option.bind(golfie)(entity);
                    entity = entity.PaperIcon;
                    michal['IconComponent'] = entity;
                    entity = _closure2_slot5;
                    michal['action'] = entity;
                    entity = new Array(2);
                    entity[0] = michal;
                    michal = {};
                    report = verify[tangon];
                    report = option.bind(golfie)(report);
                    oscard = report.intl;
                    report = oscard.string;
                    tangon = verify[tangon];
                    tangon = option.bind(golfie)(tangon);
                    tangon = tangon.t;
                    tangon = tangon.bDSZOz;
                    tangon = report.bind(oscard)(tangon);
                    michal['label'] = tangon;
                    tangon = function() { // Original name: IconComponent
                        entity = null;
                        return entity;
                    };
                    michal['IconComponent'] = tangon;
                    zuuluu = _closure2_slot4;
                    michal['action'] = zuuluu;
                    entity[1] = michal;
                    _fun00006_ip = 204; continue _fun00005;
 200:
                    entity = new Array(0);
 204:
                    return entity;
                }
            };
            variable44 = zuuluu.bind(option)(entity, michal);
            michal = _closure1_slot1;
            report = _closure1_slot2;
            entity = 22;
            entity = report[entity];
            entity = michal.bind(tangon)(entity);
            entity = entity.bind(tangon)();
            var _closure2_slot8 = entity;
            michal = option.useState;
            michal = michal.bind(option)(target);
            offset = _closure1_slot3;
            michal = offset.bind(tangon)(michal, yankee);
            update = michal[status];
            var _closure2_slot9 = update;
            michal = michal[golfie];
            var _closure2_slot10 = michal;
            verify = option.useContext;
            michal = _closure1_slot0;
            zuuluu = 23;
            zuuluu = report[zuuluu];
            zuuluu = michal.bind(tangon)(zuuluu);
            zuuluu = zuuluu.QuestDockGestureContext;
            zuuluu = verify.bind(option)(zuuluu);
            verify = zuuluu.windowDimensions;
            var _closure2_slot11 = verify;
            source = option.useCallback;
            foxtra = new Array(1);
            foxtra[0] = verify;
            zuuluu = function(argFoo) {
                entity = argFoo;
                michal = entity.naturalSize;
                michal = michal.width;
                entity = entity.naturalSize;
                entity = entity.height;
                report = michal / entity;
                zuuluu = _closure2_slot11;
                entity = zuuluu.get;
                entity = entity.bind(zuuluu)();
                entity = entity.width;
                zuuluu = _closure2_slot10;
                michal = global;
                tangon = michal.Math;
                michal = tangon.floor;
                entity = entity / report;
                michal = michal.bind(tangon)(entity);
                entity = undefined;
                michal = zuuluu.bind(entity)(michal);
                return entity;
            };
            foxtra = source.bind(option)(zuuluu, foxtra);
            zuuluu = option.useState;
            zuuluu = zuuluu.bind(option)(target);
            zuuluu = offset.bind(tangon)(zuuluu, yankee);
            yankee = zuuluu[status];
            var _closure2_slot12 = yankee;
            zuuluu = zuuluu[golfie];
            var _closure2_slot13 = zuuluu;
            offset = option.useCallback;
            golfie = function(argFoo) {
                entity = argFoo;
                entity = entity.nativeEvent;
                entity = entity.layout;
                zuuluu = entity.height;
                michal = _closure2_slot13;
                entity = undefined;
                michal = michal.bind(entity)(zuuluu);
                return entity;
            };
            zuuluu = new Array(0);
            offset = offset.bind(option)(golfie, zuuluu);
            golfie = option.useMemo;
            zuuluu = new Array(5);
            zuuluu[0] = oscard;
            zuuluu[1] = update;
            zuuluu[2] = yankee;
            zuuluu[3] = verify;
            zuuluu[4] = entity;
            entity = function() {
                _fun00007: for(var _fun00008_ip = 0; ; ) switch(_fun00008_ip) {
 0:
                    michal = _closure2_slot7;
                    if(!michal) { _fun00008_ip = 28; continue _fun00007 }
 10:
                    michal = _closure2_slot9;
                    zuuluu = null;
                    if(!(zuuluu != michal)) { _fun00008_ip = 28; continue _fun00007 }
 20:
                    michal = _closure2_slot12;
                    if(!(zuuluu == michal)) { _fun00008_ip = 32; continue _fun00007 }
 28:
                    michal = undefined;
                    return michal;
 32:
                    michal = global;
                    tangon = michal.Math;
                    zuuluu = tangon.min;
                    report = _closure2_slot11;
                    michal = report.get;
                    michal = michal.bind(report)();
                    report = michal.height;
                    michal = _closure2_slot8;
                    michal = michal.top;
                    report = report - michal;
                    michal = _closure2_slot8;
                    michal = michal.bottom;
                    report = report - michal;
                    michal = _closure2_slot12;
                    michal = report - michal;
                    entity = _closure2_slot9;
                    entity = zuuluu.bind(tangon)(michal, entity);
                    return entity;
                }
            };
            yankee = golfie.bind(option)(entity, zuuluu);
            zuuluu = _closure1_slot9;
            entity = 24;
            entity = report[entity];
            entity = michal.bind(tangon)(entity);
            michal = entity.SafeAreaPaddingView;
            entity = {};
            variable46 = true;
            entity['bottom'] = variable46;
            report = sequen.wrapper;
            entity['style'] = report;
            golfie = _closure1_slot5;
            report = {};
            verify = sequen.videoWrapper;
            option = new Array(3);
            option[0] = verify;
            limora = !oscard;
            verify = limora;
            if(oscard) { _fun00004_ip = 806; continue _fun00003 }
 800:
            verify = sequen.videoWrapperLandscape;
 806:
            option[1] = verify;
            verify = {};
            verify['height'] = yankee;
            option[2] = verify;
            report['style'] = option;
            yankee = _closure1_slot8;
            verify = _closure1_slot0;
            update = _closure1_slot2;
            option = 25;
            option = update[option];
            option = verify.bind(tangon)(option);
            verify = option.VideoQuestPlayer;
            option = {};
            option['captionsEnabled'] = vacuum;
            option['onLoad'] = foxtra;
            foxtra = 'landscape';
            if(!oscard) { _fun00004_ip = 876; continue _fun00003 }
 873:
            foxtra = result;
 876:
            option['orientation'] = foxtra;
            foxtra = limora;
            if(oscard) { _fun00004_ip = 893; continue _fun00003 }
 887:
            foxtra = sequen.videoLandscape;
 893:
            option['style'] = foxtra;
            foxtra = {'bottom': null, 'left': 16, 'right': 16};
            result = 16;
            if(!oscard) { _fun00004_ip = 920; continue _fun00003 }
 917:
            result = 158;
 920:
            foxtra['bottom'] = result;
            option['safeAreaInsets'] = foxtra;
            verify = yankee.bind(tangon)(verify, option);
            option = new Array(5);
            option[0] = verify;
            verify = oscard;
            if(!oscard) { _fun00004_ip = 1164; continue _fun00003 }
 954:
            result = _closure1_slot8;
            record = _closure1_slot1;
            cntext = _closure1_slot2;
            yankee = 26;
            yankee = cntext[yankee];
            foxtra = record.bind(tangon)(yankee);
            yankee = {};
            update = {'x': 0, 'y': 0};
            yankee['start'] = update;
            update = {'x': 0, 'y': 1};
            yankee['end'] = update;
            update = sequen.gradientTop;
            yankee['style'] = update;
            ctrled = 27;
            update = cntext[ctrled];
            papara = record.bind(tangon)(update);
            source = 6;
            update = cntext[source];
            update = record.bind(tangon)(update);
            update = update.unsafe_rawColors;
            update = update.PLUM_23;
            whisks = papara.bind(tangon)(update);
            papara = whisks.alpha;
            update = 0.4;
            papara = papara.bind(whisks)(update);
            update = papara.hex;
            papara = update.bind(papara)();
            update = new Array(2);
            update[0] = papara;
            ctrled = cntext[ctrled];
            ctrled = record.bind(tangon)(ctrled);
            source = cntext[source];
            source = record.bind(tangon)(source);
            source = source.unsafe_rawColors;
            source = source.PLUM_23;
            ctrled = ctrled.bind(tangon)(source);
            source = ctrled.alpha;
            ctrled = source.bind(ctrled)(status);
            source = ctrled.hex;
            source = source.bind(ctrled)();
            update[1] = source;
            yankee['colors'] = update;
            verify = result.bind(tangon)(foxtra, yankee);
 1164:
            option[1] = verify;
            verify = oscard;
            if(!oscard) { _fun00004_ip = 1387; continue _fun00003 }
 1177:
            result = _closure1_slot8;
            record = _closure1_slot1;
            cntext = _closure1_slot2;
            yankee = 26;
            yankee = cntext[yankee];
            foxtra = record.bind(tangon)(yankee);
            yankee = {};
            update = {'x': 0, 'y': 0};
            yankee['start'] = update;
            update = {'x': 0, 'y': 1};
            yankee['end'] = update;
            update = sequen.gradientBottom;
            yankee['style'] = update;
            ctrled = 27;
            update = cntext[ctrled];
            papara = record.bind(tangon)(update);
            source = 6;
            update = cntext[source];
            update = record.bind(tangon)(update);
            update = update.unsafe_rawColors;
            update = update.PLUM_23;
            papara = papara.bind(tangon)(update);
            update = papara.alpha;
            papara = update.bind(papara)(status);
            update = papara.hex;
            papara = update.bind(papara)();
            update = new Array(2);
            update[0] = papara;
            ctrled = cntext[ctrled];
            ctrled = record.bind(tangon)(ctrled);
            source = cntext[source];
            source = record.bind(tangon)(source);
            source = source.unsafe_rawColors;
            source = source.PLUM_23;
            record = ctrled.bind(tangon)(source);
            ctrled = record.alpha;
            source = 0.4;
            ctrled = ctrled.bind(record)(source);
            source = ctrled.hex;
            source = source.bind(ctrled)();
            update[1] = source;
            yankee['colors'] = update;
            verify = result.bind(tangon)(foxtra, yankee);
 1387:
            option[2] = verify;
            verify = limora;
            if(oscard) { _fun00004_ip = 1444; continue _fun00003 }
 1397:
            result = _closure1_slot8;
            foxtra = _closure1_slot1;
            update = _closure1_slot2;
            yankee = 28;
            yankee = update[yankee];
            foxtra = foxtra.bind(tangon)(yankee);
            yankee = {};
            yankee['onClose'] = config;
            update = sequen.closeButtonLandscape;
            yankee['style'] = update;
            verify = result.bind(tangon)(foxtra, yankee);
 1444:
            option[3] = verify;
            foxtra = _closure1_slot9;
            yankee = _closure1_slot5;
            verify = {};
            update = sequen.videoContentWrapper;
            result = new Array(2);
            result[0] = update;
            if(oscard) { _fun00004_ip = 1483; continue _fun00003 }
 1475:
            update = sequen.videoContentWrapperLandscape;
            _fun00004_ip = 1489; continue _fun00003;
 1483:
            update = sequen.videoContentWrapperPortrait;
 1489:
            result[1] = update;
            verify['style'] = result;
            update = oscard;
            if(!oscard) { _fun00004_ip = 1553; continue _fun00003 }
 1503:
            ctrled = _closure1_slot8;
            source = _closure1_slot1;
            record = _closure1_slot2;
            result = 29;
            result = record[result];
            source = source.bind(tangon)(result);
            result = {'onClose': null, 'showCurrentVideoTime': true, 'withTextShadow': true};
            result['onClose'] = config;
            update = ctrled.bind(tangon)(source, result);
 1553:
            result = new Array(4);
            result[0] = update;
            update = limora;
            if(oscard) { _fun00004_ip = 1609; continue _fun00003 }
 1567:
            config = _closure1_slot8;
            ctrled = _closure1_slot1;
            record = _closure1_slot2;
            source = 30;
            source = record[source];
            ctrled = ctrled.bind(tangon)(source);
            source = {};
            record = sequen.rewardContainer;
            source['style'] = record;
            update = config.bind(tangon)(ctrled, source);
 1609:
            result[1] = update;
            update = limora;
            if(oscard) { _fun00004_ip = 1660; continue _fun00003 }
 1619:
            config = _closure1_slot8;
            ctrled = _closure1_slot1;
            record = _closure1_slot2;
            source = 31;
            source = record[source];
            ctrled = ctrled.bind(tangon)(source);
            source = {};
            record = 'top';
            source['align'] = record;
            update = config.bind(tangon)(ctrled, source);
 1660:
            result[2] = update;
            config = _closure1_slot9;
            source = _closure1_slot0;
            record = _closure1_slot2;
            cntext = 32;
            update = record[cntext];
            update = source.bind(tangon)(update);
            ctrled = update.Stack;
            update = {};
            source = 'vertical';
            update['direction'] = source;
            papara = _closure1_slot1;
            source = 6;
            record = record[source];
            record = papara.bind(tangon)(record);
            record = record.spacing;
            record = record.PX_24;
            update['spacing'] = record;
            papara = limora;
            if(oscard) { _fun00004_ip = 1748; continue _fun00003 }
 1742:
            papara = sequen.questDetailsLandscape;
 1748:
            record = new Array(1);
            record[0] = papara;
            update['style'] = record;
            status = _closure1_slot9;
            papara = _closure1_slot5;
            record = {};
            whisks = sequen.questDetails;
            record['style'] = whisks;
            whisks = {};
            equals = sequen.questDetailsPrimary;
            whisks['style'] = equals;
            variable40 = _closure1_slot8;
            variable37 = _closure1_slot0;
            equals = _closure1_slot2;
            variable42 = 33;
            equals = equals[variable42];
            equals = variable37.bind(tangon)(equals);
            variable37 = equals.Text;
            equals = {'variant': 'heading-lg/semibold', 'color': 'white'};
            variable43 = oscard;
            if(!oscard) { _fun00004_ip = 1847; continue _fun00003 }
 1841:
            variable43 = sequen.textShadow;
 1847:
            variable41 = new Array(1);
            variable41[0] = variable43;
            equals['style'] = variable41;
            variable41 = sizing.config;
            variable41 = variable41.messages;
            variable41 = variable41.gameTitle;
            equals['children'] = variable41;
            variable37 = variable40.bind(tangon)(variable37, equals);
            equals = new Array(2);
            equals[0] = variable37;
            variable41 = _closure1_slot8;
            variable40 = _closure1_slot0;
            variable37 = _closure1_slot2;
            variable37 = variable37[variable42];
            variable37 = variable40.bind(tangon)(variable37);
            variable40 = variable37.Text;
            variable37 = {'variant': 'heading-sm/semibold', 'color': 'text-normal'};
            variable43 = oscard;
            if(!oscard) { _fun00004_ip = 1946; continue _fun00003 }
 1940:
            variable43 = sequen.textShadow;
 1946:
            variable42 = new Array(1);
            variable42[0] = variable43;
            variable37['style'] = variable42;
            variable42 = sizing.config;
            variable42 = variable42.messages;
            variable42 = variable42.gamePublisher;
            variable37['children'] = variable42;
            variable37 = variable41.bind(tangon)(variable40, variable37);
            equals[1] = variable37;
            whisks['children'] = equals;
            equals = status.bind(tangon)(papara, whisks);
            whisks = new Array(3);
            whisks[0] = equals;
            equals = oscard;
            if(!oscard) { _fun00004_ip = 2104; continue _fun00003 }
 2013:
            variable41 = _closure1_slot8;
            variable40 = _closure1_slot5;
            variable37 = {};
            variable42 = sequen.questDetailsSecondary;
            variable37['style'] = variable42;
            variable43 = _closure1_slot1;
            variable48 = _closure1_slot2;
            variable42 = 34;
            variable42 = variable48[variable42];
            variable43 = variable43.bind(tangon)(variable42);
            variable42 = {};
            variable42['quest'] = sizing;
            variable48 = 'x-sm';
            variable42['size'] = variable48;
            variable47 = variable47.percentComplete;
            variable42['progress'] = variable47;
            variable42['hasConfetti'] = variable46;
            variable42['onPress'] = variable45;
            variable42 = variable41.bind(tangon)(variable43, variable42);
            variable37['children'] = variable42;
            equals = variable41.bind(tangon)(variable40, variable37);
 2104:
            whisks[1] = equals;
            equals = limora;
            if(oscard) { _fun00004_ip = 2207; continue _fun00003 }
 2114:
            variable41 = _closure1_slot8;
            variable40 = _closure1_slot5;
            variable37 = {};
            variable42 = sequen.questDetailsSecondary;
            variable37['style'] = variable42;
            variable43 = _closure1_slot1;
            variable45 = _closure1_slot2;
            variable42 = 35;
            variable42 = variable45[variable42];
            variable43 = variable43.bind(tangon)(variable42);
            variable42 = {};
            variable42['quest'] = sizing;
            variable45 = _closure1_slot7;
            variable45 = variable45.VIDEO_MODAL_MOBILE;
            variable42['location'] = variable45;
            variable42['additionalItems'] = variable44;
            variable44 = function(argFoo) { // Original name: children
                zuuluu = argFoo;
                option = zuuluu.ref;
                entity = null;
                michal = Object.create(entity);
                entity = 0;
                michal['ref'] = entity;
                foxtra = {};
                romeon = zuuluu;
                yankee = michal;
                romeon = copyDataProperties(foxtra, romeon, yankee);
                tangon = _closure1_slot8;
                oscard = _closure1_slot0;
                verify = _closure1_slot2;
                entity = 36;
                entity = verify[entity];
                zuuluu = undefined;
                entity = oscard.bind(zuuluu)(entity);
                michal = entity.PressableOpacity;
                entity = {};
                offset = 'button';
                entity['accessibilityRole'] = offset;
                offset = _closure2_slot1;
                offset = offset.questDetailsSecondaryButton;
                entity['style'] = offset;
                entity['ref'] = option;
                foxtra = entity;
                report = copyDataProperties(foxtra, romeon);
                report = 37;
                report = verify[report];
                report = oscard.bind(zuuluu)(report);
                oscard = report.MoreHorizontalIcon;
                report = {};
                option = _closure1_slot1;
                golfie = 6;
                golfie = verify[golfie];
                golfie = option.bind(zuuluu)(golfie);
                golfie = golfie.colors;
                golfie = golfie.TEXT_NORMAL;
                report['color'] = golfie;
                oscard = tangon.bind(zuuluu)(oscard, report);
                report = 'children';
                entity[report] = oscard;
                entity = tangon.bind(zuuluu)(michal, entity);
                return entity;
            };
            variable42['children'] = variable44;
            variable42 = variable41.bind(tangon)(variable43, variable42);
            variable37['children'] = variable42;
            equals = variable41.bind(tangon)(variable40, variable37);
 2207:
            whisks[2] = equals;
            record['children'] = whisks;
            papara = status.bind(tangon)(papara, record);
            record = new Array(3);
            record[0] = papara;
            papara = limora;
            if(oscard) { _fun00004_ip = 2239; continue _fun00003 }
 2235:
            papara = target != variable36;
 2239:
            if(!papara) { _fun00004_ip = 2299; continue _fun00003 }
 2242:
            whisks = _closure1_slot8;
            status = _closure1_slot1;
            equals = _closure1_slot2;
            target = 38;
            target = equals[target];
            status = status.bind(tangon)(target);
            target = {};
            equals = {};
            variable36 = variable36.url;
            equals['uri'] = variable36;
            target['source'] = equals;
            equals = sequen.playerThumbnail;
            target['style'] = equals;
            papara = whisks.bind(tangon)(status, target);
 2299:
            record[1] = papara;
            target = _closure1_slot9;
            variable37 = _closure1_slot0;
            variable36 = _closure1_slot2;
            cntext = variable36[cntext];
            cntext = variable37.bind(tangon)(cntext);
            papara = cntext.Stack;
            cntext = {};
            status = 'horizontal';
            cntext['direction'] = status;
            whisks = _closure1_slot1;
            status = variable36[source];
            status = whisks.bind(tangon)(status);
            status = status.spacing;
            status = status.PX_16;
            cntext['spacing'] = status;
            equals = _closure1_slot8;
            status = 39;
            status = variable36[status];
            whisks = whisks.bind(tangon)(status);
            status = {};
            status['onPress'] = variable39;
            variable39 = sequen.ctaPrimary;
            status['style'] = variable39;
            variable36 = variable36[variable38];
            variable38 = variable37.bind(tangon)(variable36);
            variable37 = variable38.getVideoQuestEndCardCtaText;
            variable36 = sizing.config;
            variable36 = variable37.bind(variable38)(variable36);
            status['text'] = variable36;
            whisks = equals.bind(tangon)(whisks, status);
            status = new Array(3);
            status[0] = whisks;
            if(oscard) { _fun00004_ip = 2567; continue _fun00003 }
 2446:
            variable36 = _closure1_slot8;
            variable41 = _closure1_slot0;
            variable39 = _closure1_slot2;
            whisks = 40;
            whisks = variable39[whisks];
            whisks = variable41.bind(tangon)(whisks);
            equals = whisks.IconButton;
            whisks = {};
            variable37 = 20;
            variable38 = variable39[variable37];
            variable38 = variable41.bind(tangon)(variable38);
            variable40 = variable38.intl;
            variable38 = variable40.string;
            variable37 = variable39[variable37];
            variable37 = variable41.bind(tangon)(variable37);
            variable37 = variable37.t;
            variable37 = variable37.Ej3B3d;
            variable37 = variable38.bind(variable40)(variable37);
            whisks['accessibilityLabel'] = variable37;
            variable38 = _closure1_slot1;
            variable37 = 41;
            variable37 = variable39[variable37];
            variable37 = variable38.bind(tangon)(variable37);
            whisks['icon'] = variable37;
            whisks['onPress'] = romeon;
            variable37 = 'secondary';
            whisks['variant'] = variable37;
            limora = variable36.bind(tangon)(equals, whisks);
 2567:
            status[1] = limora;
            if(!sierra) { _fun00004_ip = 2695; continue _fun00003 }
 2574:
            equals = _closure1_slot8;
            variable40 = _closure1_slot0;
            variable38 = _closure1_slot2;
            limora = 40;
            limora = variable38[limora];
            limora = variable40.bind(tangon)(limora);
            whisks = limora.IconButton;
            limora = {};
            variable36 = 20;
            variable37 = variable38[variable36];
            variable37 = variable40.bind(tangon)(variable37);
            variable39 = variable37.intl;
            variable37 = variable39.string;
            variable36 = variable38[variable36];
            variable36 = variable40.bind(tangon)(variable36);
            variable36 = variable36.t;
            variable36 = variable36.YsCuyM;
            variable36 = variable37.bind(variable39)(variable36);
            limora['accessibilityLabel'] = variable36;
            variable37 = _closure1_slot1;
            variable36 = 42;
            variable36 = variable38[variable36];
            variable36 = variable37.bind(tangon)(variable36);
            limora['icon'] = variable36;
            limora['onPress'] = quebec;
            quebec = 'secondary';
            limora['variant'] = quebec;
            sierra = equals.bind(tangon)(whisks, limora);
 2695:
            status[2] = sierra;
            cntext['children'] = status;
            cntext = target.bind(tangon)(papara, cntext);
            record[2] = cntext;
            update['children'] = record;
            update = config.bind(tangon)(ctrled, update);
            result[3] = update;
            verify['children'] = result;
            verify = foxtra.bind(tangon)(yankee, verify);
            option[4] = verify;
            report['children'] = option;
            golfie = zuuluu.bind(tangon)(golfie, report);
            report = new Array(2);
            report[0] = golfie;
            if(!oscard) { _fun00004_ip = 3157; continue _fun00003 }
 2765:
            verify = _closure1_slot9;
            option = _closure1_slot5;
            golfie = {};
            yankee = sequen.footer;
            golfie['style'] = yankee;
            golfie['onLayout'] = offset;
            result = _closure1_slot8;
            ctrled = _closure1_slot0;
            config = _closure1_slot2;
            yankee = 36;
            offset = config[yankee];
            offset = ctrled.bind(tangon)(offset);
            foxtra = offset.PressableOpacity;
            offset = {};
            update = 'button';
            offset['accessibilityRole'] = update;
            offset['onPress'] = output;
            output = 21;
            output = config[output];
            output = ctrled.bind(tangon)(output);
            record = output.PaperIcon;
            output = {};
            cntext = sequen.iconDisabled;
            cntext = cntext.color;
            output['color'] = cntext;
            output = result.bind(tangon)(record, output);
            offset['children'] = output;
            foxtra = result.bind(tangon)(foxtra, offset);
            offset = new Array(4);
            offset[0] = foxtra;
            foxtra = config[yankee];
            foxtra = ctrled.bind(tangon)(foxtra);
            output = foxtra.PressableOpacity;
            foxtra = {};
            foxtra['accessibilityRole'] = update;
            foxtra['onPress'] = echoed;
            echoed = 43;
            echoed = config[echoed];
            echoed = ctrled.bind(tangon)(echoed);
            ctrled = echoed.CaptionIcon;
            echoed = {};
            if(vacuum) { _fun00004_ip = 2954; continue _fun00003 }
 2941:
            vacuum = sequen.iconDisabled;
            vacuum = vacuum.color;
            _fun00004_ip = 2964; continue _fun00003;
 2954:
            sequen = sequen.icon;
            vacuum = sequen.color;
 2964:
            echoed['color'] = vacuum;
            echoed = result.bind(tangon)(ctrled, echoed);
            foxtra['children'] = echoed;
            foxtra = result.bind(tangon)(output, foxtra);
            offset[1] = foxtra;
            foxtra = _closure1_slot8;
            echoed = _closure1_slot0;
            output = _closure1_slot2;
            yankee = output[yankee];
            yankee = echoed.bind(tangon)(yankee);
            result = yankee.PressableOpacity;
            yankee = {};
            yankee['accessibilityRole'] = update;
            yankee['onPress'] = romeon;
            romeon = 44;
            romeon = output[romeon];
            romeon = echoed.bind(tangon)(romeon);
            update = romeon.ShareIcon;
            echoed = {};
            romeon = _closure1_slot1;
            source = output[source];
            source = romeon.bind(tangon)(source);
            source = source.colors;
            source = source.TEXT_NORMAL;
            echoed['color'] = source;
            echoed = foxtra.bind(tangon)(update, echoed);
            yankee['children'] = echoed;
            yankee = foxtra.bind(tangon)(result, yankee);
            offset[2] = yankee;
            yankee = 35;
            yankee = output[yankee];
            romeon = romeon.bind(tangon)(yankee);
            yankee = {};
            yankee['quest'] = sizing;
            kiloes = _closure1_slot7;
            kiloes = kiloes.VIDEO_MODAL_MOBILE;
            yankee['location'] = kiloes;
            backup = function(argFoo) { // Original name: children
                zuuluu = argFoo;
                option = zuuluu.ref;
                entity = null;
                michal = Object.create(entity);
                entity = 0;
                michal['ref'] = entity;
                foxtra = {};
                romeon = zuuluu;
                yankee = michal;
                romeon = copyDataProperties(foxtra, romeon, yankee);
                tangon = _closure1_slot8;
                oscard = _closure1_slot0;
                verify = _closure1_slot2;
                entity = 36;
                entity = verify[entity];
                zuuluu = undefined;
                entity = oscard.bind(zuuluu)(entity);
                michal = entity.PressableOpacity;
                entity = {};
                offset = 'button';
                entity['accessibilityRole'] = offset;
                entity['ref'] = option;
                foxtra = entity;
                report = copyDataProperties(foxtra, romeon);
                report = 37;
                report = verify[report];
                report = oscard.bind(zuuluu)(report);
                oscard = report.MoreHorizontalIcon;
                report = {};
                option = _closure1_slot1;
                golfie = 6;
                golfie = verify[golfie];
                golfie = option.bind(zuuluu)(golfie);
                golfie = golfie.colors;
                golfie = golfie.TEXT_NORMAL;
                report['color'] = golfie;
                oscard = tangon.bind(zuuluu)(oscard, report);
                report = 'children';
                entity[report] = oscard;
                entity = tangon.bind(zuuluu)(michal, entity);
                return entity;
            };
            yankee['children'] = backup;
            yankee = foxtra.bind(tangon)(romeon, yankee);
            offset[3] = yankee;
            golfie['children'] = offset;
            oscard = verify.bind(tangon)(option, golfie);
 3157:
            report[1] = oscard;
            entity['children'] = report;
            entity = zuuluu.bind(tangon)(michal, entity);
            return entity;
        }
    };
    zuuluu['default'] = michal;
    return entity;
})();