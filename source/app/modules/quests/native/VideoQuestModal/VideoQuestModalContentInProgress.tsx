// app/modules/quests/native/VideoQuestModal/VideoQuestModalContentInProgress.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    report = argBar;
    golfie = argBaz;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    var _closure1_slot1 = golfie;
    var _closure1_slot2 = oscard;
    entity = global;
    verify = entity.Object;
    option = verify.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = option.bind(verify)(zuuluu, entity, tangon);
    entity = 0;
    tangon = oscard[entity];
    entity = undefined;
    tangon = golfie.bind(entity)(tangon);
    var _closure1_slot3 = tangon;
    tangon = 1;
    golfie = oscard[tangon];
    tangon = argCor;
    tangon = tangon.bind(entity)(golfie);
    var _closure1_slot4 = tangon;
    tangon = 2;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    golfie = tangon.View;
    var _closure1_slot5 = golfie;
    tangon = tangon.StyleSheet;
    var _closure1_slot6 = tangon;
    tangon = 3;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.QuestsExperimentLocations;
    var _closure1_slot7 = tangon;
    tangon = 4;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    golfie = tangon.jsx;
    var _closure1_slot8 = golfie;
    tangon = tangon.jsxs;
    var _closure1_slot9 = tangon;
    tangon = 5;
    tangon = oscard[tangon];
    option = report.bind(entity)(tangon);
    golfie = option.createStyles;
    tangon = function(argFoo) {
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            entity = {};
            verify = 1;
            michal = {'flex': 1, 'justifyContent': 'space-between'};
            entity['wrapper'] = michal;
            michal = {'aspectRatio': 1.7777777777777777, 'width': '100%', 'position': 'relative'};
            entity['videoLandscape'] = michal;
            michal = {'borderRadius': null, 'flexGrow': 0, 'flexShrink': 0, 'overflow': 'hidden'};
            option = _closure1_slot1;
            tangon = _closure1_slot2;
            oscard = 6;
            zuuluu = tangon[oscard];
            report = undefined;
            zuuluu = option.bind(report)(zuuluu);
            zuuluu = zuuluu.radii;
            zuuluu = zuuluu.lg;
            michal['borderRadius'] = zuuluu;
            zuuluu = 0;
            entity['videoWrapper'] = michal;
            michal = {};
            michal['flexGrow'] = verify;
            offset = tangon[oscard];
            offset = option.bind(report)(offset);
            offset = offset.radii;
            offset = offset.none;
            michal['borderTopLeftRadius'] = offset;
            offset = tangon[oscard];
            offset = option.bind(report)(offset);
            offset = offset.radii;
            offset = offset.none;
            michal['borderTopRightRadius'] = offset;
            entity['videoWrapperLandscape'] = michal;
            michal = {'flexDirection': 'column', 'pointerEvents': 'box-none', 'flexGrow': 1, 'flexShrink': 0, 'justifyContent': 'space-between'};
            offset = tangon[oscard];
            offset = option.bind(report)(offset);
            offset = offset.spacing;
            offset = offset.PX_16;
            michal['padding'] = offset;
            entity['videoContentWrapper'] = michal;
            michal = {};
            michal['padding'] = zuuluu;
            entity['videoContentWrapperLandscape'] = michal;
            michal = {};
            offset = _closure1_slot6;
            romeon = offset.absoluteFillObject;
            foxtra = michal;
            yankee = copyDataProperties(foxtra, romeon);
            entity['videoContentWrapperPortrait'] = michal;
            michal = {};
            yankee = 'row';
            michal['flexDirection'] = yankee;
            entity['videoContentHeaderWrapper'] = michal;
            michal = {'flexGrow': 1, 'flexShrink': 1};
            entity['videoContentHeading'] = michal;
            yankee = 'center';
            michal = {'justifyContent': 'center', 'flex': 1};
            entity['rewardContainer'] = michal;
            michal = {};
            romeon = offset.absoluteFillObject;
            foxtra = michal;
            offset = copyDataProperties(foxtra, romeon);
            offset = 'alignItems';
            michal[offset] = yankee;
            offset = 'justifyContent';
            michal[offset] = yankee;
            entity['rewardContentCentered'] = michal;
            michal = {'alignItems': 'center', 'flexDirection': 'row'};
            entity['questDetails'] = michal;
            michal = {};
            michal['borderTopWidth'] = verify;
            verify = tangon[oscard];
            verify = option.bind(report)(verify);
            verify = verify.colors;
            verify = verify.BACKGROUND_ACCENT;
            michal['borderColor'] = verify;
            verify = tangon[oscard];
            verify = option.bind(report)(verify);
            verify = verify.spacing;
            verify = verify.PX_16;
            michal['paddingHorizontal'] = verify;
            verify = tangon[oscard];
            verify = option.bind(report)(verify);
            verify = verify.spacing;
            verify = verify.PX_24;
            michal['paddingTop'] = verify;
            entity['questDetailsLandscape'] = michal;
            michal = {'flexGrow': 1, 'flexShrink': 1};
            entity['questDetailsPrimary'] = michal;
            michal = {'flexGrow': 0, 'flexShrink': 0};
            entity['questDetailsSecondary'] = michal;
            michal = {};
            verify = tangon[oscard];
            verify = option.bind(report)(verify);
            verify = verify.colors;
            verify = verify.BACKGROUND_ACCENT;
            michal['backgroundColor'] = verify;
            verify = tangon[oscard];
            verify = option.bind(report)(verify);
            verify = verify.radii;
            verify = verify.round;
            michal['borderRadius'] = verify;
            verify = tangon[oscard];
            verify = option.bind(report)(verify);
            verify = verify.spacing;
            verify = verify.PX_8;
            michal['padding'] = verify;
            entity['questDetailsSecondaryButton'] = michal;
            michal = {'justifyContent': 'flex-end', 'flexDirection': 'row'};
            tangon = tangon[oscard];
            tangon = option.bind(report)(tangon);
            tangon = tangon.spacing;
            tangon = tangon.PX_24;
            michal['padding'] = tangon;
            tangon = argFoo;
            if(!tangon) { _fun00002_ip = 619; continue _fun00001 }
 592:
            option = _closure1_slot1;
            tangon = _closure1_slot2;
            tangon = tangon[oscard];
            tangon = option.bind(report)(tangon);
            tangon = tangon.spacing;
            zuuluu = tangon.PX_16;
 619:
            michal['paddingBottom'] = zuuluu;
            tangon = _closure1_slot1;
            zuuluu = _closure1_slot2;
            option = zuuluu[oscard];
            option = tangon.bind(report)(option);
            option = option.spacing;
            option = option.PX_24;
            michal['gap'] = option;
            entity['footer'] = michal;
            michal = {};
            option = zuuluu[oscard];
            option = tangon.bind(report)(option);
            option = option.colors;
            option = option.INTERACTIVE_ACTIVE;
            michal['color'] = option;
            entity['icon'] = michal;
            michal = {};
            option = zuuluu[oscard];
            option = tangon.bind(report)(option);
            option = option.colors;
            option = option.INTERACTIVE_NORMAL;
            michal['color'] = option;
            entity['iconDisabled'] = michal;
            michal = {};
            golfie = _closure1_slot6;
            romeon = golfie.absoluteFillObject;
            foxtra = michal;
            option = copyDataProperties(foxtra, romeon);
            entity['video'] = michal;
            michal = {};
            option = 'absolute';
            michal['position'] = option;
            option = zuuluu[oscard];
            option = tangon.bind(report)(option);
            option = option.spacing;
            option = option.PX_16;
            michal['top'] = option;
            option = zuuluu[oscard];
            option = tangon.bind(report)(option);
            option = option.spacing;
            option = option.PX_16;
            michal['right'] = option;
            entity['closeButtonLandscape'] = michal;
            michal = {};
            romeon = golfie.absoluteFillObject;
            foxtra = michal;
            option = copyDataProperties(foxtra, romeon);
            option = 'bottom';
            michal[option] = report;
            verify = 70;
            option = 'height';
            michal[option] = verify;
            entity['gradientTop'] = michal;
            michal = {};
            romeon = golfie.absoluteFillObject;
            foxtra = michal;
            golfie = copyDataProperties(foxtra, romeon);
            golfie = 'top';
            michal[golfie] = report;
            golfie = 150;
            michal[option] = golfie;
            entity['gradientBottom'] = michal;
            michal = {'margin': 4294967281, 'padding': 15, 'textShadowColor': null, 'textShadowOffset': null, 'textShadowRadius': 15};
            golfie = zuuluu[oscard];
            golfie = tangon.bind(report)(golfie);
            golfie = golfie.colors;
            golfie = golfie.BLACK;
            michal['textShadowColor'] = golfie;
            golfie = {'width': 0, 'height': 0};
            michal['textShadowOffset'] = golfie;
            entity['textShadow'] = michal;
            michal = {'borderRadius': null, 'flexGrow': 1, 'flexShrink': 1};
            golfie = zuuluu[oscard];
            golfie = tangon.bind(report)(golfie);
            golfie = golfie.radii;
            golfie = golfie.round;
            michal['borderRadius'] = golfie;
            entity['ctaPrimary'] = michal;
            michal = {'borderRadius': null, 'height': 96, 'width': '100%'};
            zuuluu = zuuluu[oscard];
            zuuluu = tangon.bind(report)(zuuluu);
            zuuluu = zuuluu.radii;
            zuuluu = zuuluu.lg;
            michal['borderRadius'] = zuuluu;
            entity['playerThumbnail'] = michal;
            michal = {};
            zuuluu = -1;
            michal['zIndex'] = zuuluu;
            entity['cloudsBackground'] = michal;
            return entity;
        }
    };
    tangon = golfie.bind(option)(tangon);
    var _closure1_slot10 = tangon;
    tangon = {};
    golfie = 'function VideoQuestModalContentInProgressTsx1(){const{withDelay,LOGO_REWARD_TRANSITION_DELAY_MS,withTiming,isComponentMounted,LOGO_REWARD_TRANSITION_DURATION_MS}=this.__closure;return{opacity:withDelay(LOGO_REWARD_TRANSITION_DELAY_MS,withTiming(isComponentMounted.get(),{duration:LOGO_REWARD_TRANSITION_DURATION_MS}))};}';
    tangon['code'] = golfie;
    var _closure1_slot11 = tangon;
    tangon = {};
    golfie = 'function VideoQuestModalContentInProgressTsx2(){const{withDelay,LOGO_REWARD_TRANSITION_DELAY_MS,withTiming,isComponentMounted,LOGO_REWARD_TRANSITION_DURATION_MS}=this.__closure;return{opacity:withDelay(LOGO_REWARD_TRANSITION_DELAY_MS,withTiming(1-isComponentMounted.get(),{duration:LOGO_REWARD_TRANSITION_DURATION_MS}))};}';
    tangon['code'] = golfie;
    var _closure1_slot12 = tangon;
    tangon = {};
    golfie = "function VideoQuestModalContentInProgressTsx3(){const{withDelay,LOGO_REWARD_TRANSITION_DELAY_MS,withTiming,isComponentMounted,LOGO_REWARD_TRANSITION_DURATION_MS}=this.__closure;return{pointerEvents:withDelay(LOGO_REWARD_TRANSITION_DELAY_MS,withTiming(isComponentMounted.get()===1?'auto':'none',{duration:LOGO_REWARD_TRANSITION_DURATION_MS}))};}";
    tangon['code'] = golfie;
    var _closure1_slot13 = tangon;
    tangon = function(argFoo) { // Original name: LandscapeLayout
        _fun00003: for(var _fun00004_ip = 0; ; ) switch(_fun00004_ip) {
 0:
            michal = argFoo;
            update = michal.quest;
            var _closure2_slot0 = update;
            verify = michal.captionsEnabled;
            yankee = michal.handleClose;
            config = michal.handlePrimaryCtaPress;
            ctrled = michal.handleShareQuest;
            oscard = michal.handleOpenTranscript;
            var _closure2_slot1 = oscard;
            entity = michal.handleToggleCaptions;
            var _closure2_slot2 = entity;
            vacuum = michal.onNavigateToPostWatchVideo;
            tangon = undefined;
            var _closure2_slot4 = tangon;
            zuuluu = _closure1_slot10;
            report = _closure1_slot0;
            golfie = _closure1_slot2;
            michal = 7;
            michal = golfie[michal];
            report = report.bind(tangon)(michal);
            michal = report.isAndroid;
            michal = michal.bind(report)();
            source = zuuluu.bind(tangon)(michal);
            var _closure2_slot3 = source;
            report = _closure1_slot4;
            zuuluu = report.useMemo;
            michal = new Array(2);
            michal[0] = oscard;
            michal[1] = entity;
            entity = function() {
                michal = {};
                option = _closure1_slot0;
                verify = _closure1_slot2;
                tangon = 8;
                entity = verify[tangon];
                golfie = undefined;
                entity = option.bind(golfie)(entity);
                report = entity.intl;
                zuuluu = report.string;
                entity = verify[tangon];
                entity = option.bind(golfie)(entity);
                entity = entity.t;
                entity = entity.KCzjTk;
                entity = zuuluu.bind(report)(entity);
                michal['label'] = entity;
                entity = 9;
                entity = verify[entity];
                entity = option.bind(golfie)(entity);
                entity = entity.PaperIcon;
                michal['IconComponent'] = entity;
                entity = _closure2_slot1;
                michal['action'] = entity;
                entity = new Array(2);
                entity[0] = michal;
                michal = {};
                report = verify[tangon];
                report = option.bind(golfie)(report);
                oscard = report.intl;
                report = oscard.string;
                tangon = verify[tangon];
                tangon = option.bind(golfie)(tangon);
                tangon = tangon.t;
                tangon = tangon.bDSZOz;
                tangon = report.bind(oscard)(tangon);
                michal['label'] = tangon;
                tangon = function() { // Original name: IconComponent
                    entity = null;
                    return entity;
                };
                michal['IconComponent'] = tangon;
                zuuluu = _closure2_slot2;
                michal['action'] = zuuluu;
                entity[1] = michal;
                return entity;
            };
            status = zuuluu.bind(report)(entity, michal);
            zuuluu = report.useMemo;
            michal = new Array(1);
            michal[0] = update;
            entity = function() {
                oscard = _closure1_slot0;
                golfie = _closure1_slot2;
                entity = 10;
                michal = golfie[entity];
                report = undefined;
                tangon = oscard.bind(report)(michal);
                zuuluu = tangon.getQuestAsset;
                michal = _closure2_slot0;
                entity = golfie[entity];
                entity = oscard.bind(report)(entity);
                entity = entity.QuestAssetType;
                entity = entity.HERO;
                entity = zuuluu.bind(tangon)(michal, entity);
                return entity;
            };
            papara = zuuluu.bind(report)(entity, michal);
            michal = update.userStatus;
            kiloes = null;
            zuuluu = kiloes == michal;
            entity = undefined;
            if(zuuluu) { _fun00004_ip = 199; continue _fun00003 }
 193:
            entity = michal.completedAt;
 199:
            result = kiloes != entity;
            report = _closure1_slot4;
            michal = report.useContext;
            limora = _closure1_slot0;
            sierra = _closure1_slot2;
            entity = 11;
            entity = sierra[entity];
            entity = limora.bind(tangon)(entity);
            entity = entity.QuestDockGestureContext;
            entity = michal.bind(report)(entity);
            whisks = entity.windowDimensions;
            romeon = 12;
            entity = sierra[romeon];
            zuuluu = limora.bind(tangon)(entity);
            michal = zuuluu.useSharedValue;
            entity = 0;
            golfie = michal.bind(zuuluu)(entity);
            _closure2_slot4 = golfie;
            zuuluu = report.useEffect;
            michal = new Array(1);
            michal[0] = golfie;
            entity = function() {
                zuuluu = _closure2_slot4;
                michal = zuuluu.set;
                entity = 1;
                entity = michal.bind(zuuluu)(entity);
                entity = undefined;
                return entity;
            };
            entity = zuuluu.bind(report)(entity, michal);
            entity = sierra[romeon];
            zuuluu = limora.bind(tangon)(entity);
            michal = zuuluu.useAnimatedStyle;
            entity = function() { // Original name: N
                entity = {};
                oscard = _closure1_slot0;
                golfie = _closure1_slot2;
                michal = 12;
                michal = golfie[michal];
                zuuluu = undefined;
                report = oscard.bind(zuuluu)(michal);
                tangon = report.withDelay;
                michal = 13;
                michal = golfie[michal];
                golfie = oscard.bind(zuuluu)(michal);
                oscard = golfie.withTiming;
                zuuluu = _closure2_slot4;
                michal = zuuluu.get;
                zuuluu = michal.bind(zuuluu)();
                michal = {};
                option = 1000;
                michal['duration'] = option;
                zuuluu = oscard.bind(golfie)(zuuluu, michal);
                michal = 3000;
                michal = tangon.bind(report)(michal, zuuluu);
                entity['opacity'] = michal;
                return entity;
            };
            report = {};
            oscard = sierra[romeon];
            oscard = limora.bind(tangon)(oscard);
            oscard = oscard.withDelay;
            report['withDelay'] = oscard;
            offset = 3000;
            report['LOGO_REWARD_TRANSITION_DELAY_MS'] = offset;
            option = 13;
            oscard = sierra[option];
            oscard = limora.bind(tangon)(oscard);
            oscard = oscard.withTiming;
            report['withTiming'] = oscard;
            report['isComponentMounted'] = golfie;
            oscard = 1000;
            report['LOGO_REWARD_TRANSITION_DURATION_MS'] = oscard;
            entity['__closure'] = report;
            report = 16158411062832.0;
            entity['__workletHash'] = report;
            report = _closure1_slot11;
            entity['__initData'] = report;
            output = michal.bind(zuuluu)(entity);
            entity = sierra[romeon];
            zuuluu = limora.bind(tangon)(entity);
            michal = zuuluu.useAnimatedStyle;
            entity = function() { // Original name: M
                entity = {};
                oscard = _closure1_slot0;
                golfie = _closure1_slot2;
                michal = 12;
                michal = golfie[michal];
                zuuluu = undefined;
                report = oscard.bind(zuuluu)(michal);
                tangon = report.withDelay;
                michal = 13;
                michal = golfie[michal];
                golfie = oscard.bind(zuuluu)(michal);
                oscard = golfie.withTiming;
                zuuluu = _closure2_slot4;
                michal = zuuluu.get;
                zuuluu = michal.bind(zuuluu)();
                michal = 1;
                zuuluu = michal - zuuluu;
                michal = {};
                option = 1000;
                michal['duration'] = option;
                zuuluu = oscard.bind(golfie)(zuuluu, michal);
                michal = 3000;
                michal = tangon.bind(report)(michal, zuuluu);
                entity['opacity'] = michal;
                return entity;
            };
            report = {};
            foxtra = sierra[romeon];
            foxtra = limora.bind(tangon)(foxtra);
            foxtra = foxtra.withDelay;
            report['withDelay'] = foxtra;
            report['LOGO_REWARD_TRANSITION_DELAY_MS'] = offset;
            foxtra = sierra[option];
            foxtra = limora.bind(tangon)(foxtra);
            foxtra = foxtra.withTiming;
            report['withTiming'] = foxtra;
            report['isComponentMounted'] = golfie;
            report['LOGO_REWARD_TRANSITION_DURATION_MS'] = oscard;
            entity['__closure'] = report;
            report = 6519805444687.0;
            entity['__workletHash'] = report;
            report = _closure1_slot12;
            entity['__initData'] = report;
            echoed = michal.bind(zuuluu)(entity);
            entity = sierra[romeon];
            zuuluu = limora.bind(tangon)(entity);
            michal = zuuluu.useAnimatedProps;
            entity = function() { // Original name: v
                _fun00005: for(var _fun00006_ip = 0; ; ) switch(_fun00006_ip) {
 0:
                    entity = {};
                    oscard = _closure1_slot0;
                    golfie = _closure1_slot2;
                    michal = 12;
                    michal = golfie[michal];
                    zuuluu = undefined;
                    report = oscard.bind(zuuluu)(michal);
                    tangon = report.withDelay;
                    michal = 13;
                    michal = golfie[michal];
                    golfie = oscard.bind(zuuluu)(michal);
                    oscard = golfie.withTiming;
                    zuuluu = _closure2_slot4;
                    michal = zuuluu.get;
                    option = michal.bind(zuuluu)();
                    zuuluu = 'none';
                    michal = 1;
                    if(!(michal === option)) { _fun00006_ip = 81; continue _fun00005 }
 77:
                    zuuluu = 'auto';
 81:
                    michal = {};
                    option = 1000;
                    michal['duration'] = option;
                    zuuluu = oscard.bind(golfie)(zuuluu, michal);
                    michal = 3000;
                    michal = tangon.bind(report)(michal, zuuluu);
                    entity['pointerEvents'] = michal;
                    return entity;
                }
            };
            report = {};
            romeon = sierra[romeon];
            romeon = limora.bind(tangon)(romeon);
            romeon = romeon.withDelay;
            report['withDelay'] = romeon;
            report['LOGO_REWARD_TRANSITION_DELAY_MS'] = offset;
            option = sierra[option];
            option = limora.bind(tangon)(option);
            option = option.withTiming;
            report['withTiming'] = option;
            report['isComponentMounted'] = golfie;
            report['LOGO_REWARD_TRANSITION_DURATION_MS'] = oscard;
            entity['__closure'] = report;
            report = 13773569112163.0;
            entity['__workletHash'] = report;
            report = _closure1_slot13;
            entity['__initData'] = report;
            backup = michal.bind(zuuluu)(entity);
            zuuluu = _closure1_slot8;
            entity = 14;
            entity = sierra[entity];
            entity = limora.bind(tangon)(entity);
            michal = entity.SafeAreaPaddingView;
            entity = {};
            report = true;
            entity['bottom'] = report;
            report = source.wrapper;
            entity['style'] = report;
            golfie = _closure1_slot9;
            oscard = _closure1_slot5;
            report = {};
            offset = source.videoWrapper;
            option = new Array(2);
            option[0] = offset;
            offset = source.videoWrapperLandscape;
            option[1] = offset;
            report['style'] = option;
            option = 15;
            option = sierra[option];
            option = limora.bind(tangon)(option);
            offset = option.VideoQuestPlayer;
            option = {};
            option['captionsEnabled'] = verify;
            verify = 'landscape';
            option['orientation'] = verify;
            verify = source.videoLandscape;
            option['style'] = verify;
            verify = 16;
            romeon = {'bottom': 16, 'left': 16, 'right': 16};
            option['safeAreaInsets'] = romeon;
            offset = zuuluu.bind(tangon)(offset, option);
            option = new Array(3);
            option[0] = offset;
            cntext = _closure1_slot1;
            verify = sierra[verify];
            offset = cntext.bind(tangon)(verify);
            verify = {};
            verify['onClose'] = yankee;
            yankee = source.closeButtonLandscape;
            verify['style'] = yankee;
            verify = zuuluu.bind(tangon)(offset, verify);
            option[1] = verify;
            verify = {};
            yankee = source.videoContentWrapper;
            offset = new Array(2);
            offset[0] = yankee;
            yankee = source.videoContentWrapperLandscape;
            offset[1] = yankee;
            verify['style'] = offset;
            offset = {};
            yankee = source.rewardContainer;
            offset['style'] = yankee;
            romeon = 17;
            yankee = sierra[romeon];
            foxtra = cntext.bind(tangon)(yankee);
            yankee = {};
            record = source.rewardContentCentered;
            sizing = new Array(2);
            sizing[0] = record;
            sizing[1] = echoed;
            yankee['style'] = sizing;
            sizing = 'none';
            yankee['pointerEvents'] = sizing;
            sizing = 18;
            sizing = sierra[sizing];
            echoed = cntext.bind(tangon)(sizing);
            sizing = {};
            record = 10;
            equals = sierra[record];
            variable36 = limora.bind(tangon)(equals);
            quebec = variable36.getQuestAsset;
            record = sierra[record];
            record = limora.bind(tangon)(record);
            record = record.QuestAssetType;
            equals = record.LOGO_TYPE;
            record = 'dark';
            record = quebec.bind(variable36)(update, equals, record);
            record = record.url;
            sizing['assetUrl'] = record;
            record = 90;
            sizing['maxHeight'] = record;
            record = whisks.get;
            record = record.bind(whisks)();
            whisks = record.width;
            record = 120;
            record = whisks - record;
            sizing['maxWidth'] = record;
            sizing = zuuluu.bind(tangon)(echoed, sizing);
            yankee['children'] = sizing;
            foxtra = zuuluu.bind(tangon)(foxtra, yankee);
            yankee = new Array(2);
            yankee[0] = foxtra;
            romeon = sierra[romeon];
            foxtra = cntext.bind(tangon)(romeon);
            romeon = {};
            echoed = source.rewardContentCentered;
            sizing = new Array(2);
            sizing[0] = echoed;
            sizing[1] = output;
            romeon['style'] = sizing;
            romeon['animatedProps'] = backup;
            backup = 19;
            backup = sierra[backup];
            sizing = cntext.bind(tangon)(backup);
            backup = {};
            backup = zuuluu.bind(tangon)(sizing, backup);
            romeon['children'] = backup;
            romeon = zuuluu.bind(tangon)(foxtra, romeon);
            yankee[1] = romeon;
            offset['children'] = yankee;
            yankee = golfie.bind(tangon)(oscard, offset);
            offset = new Array(3);
            offset[0] = yankee;
            yankee = 20;
            yankee = sierra[yankee];
            romeon = cntext.bind(tangon)(yankee);
            yankee = {};
            foxtra = 'top';
            yankee['align'] = foxtra;
            foxtra = source.cloudsBackground;
            yankee['style'] = foxtra;
            yankee = zuuluu.bind(tangon)(romeon, yankee);
            offset[1] = yankee;
            backup = 21;
            yankee = sierra[backup];
            yankee = limora.bind(tangon)(yankee);
            romeon = yankee.Stack;
            yankee = {};
            foxtra = 'vertical';
            yankee['direction'] = foxtra;
            output = 6;
            foxtra = sierra[output];
            foxtra = cntext.bind(tangon)(foxtra);
            foxtra = foxtra.spacing;
            foxtra = foxtra.PX_24;
            yankee['spacing'] = foxtra;
            foxtra = source.questDetailsLandscape;
            yankee['style'] = foxtra;
            foxtra = {};
            sizing = source.questDetails;
            foxtra['style'] = sizing;
            sizing = {};
            echoed = source.questDetailsPrimary;
            sizing['style'] = echoed;
            record = 22;
            echoed = sierra[record];
            echoed = limora.bind(tangon)(echoed);
            whisks = echoed.Text;
            echoed = {'variant': 'heading-lg/semibold', 'color': 'white'};
            equals = update.config;
            equals = equals.messages;
            equals = equals.gameTitle;
            echoed['children'] = equals;
            whisks = zuuluu.bind(tangon)(whisks, echoed);
            echoed = new Array(2);
            echoed[0] = whisks;
            record = sierra[record];
            record = limora.bind(tangon)(record);
            limora = record.Text;
            record = {'variant': 'heading-sm/semibold', 'color': 'text-normal'};
            whisks = update.config;
            whisks = whisks.messages;
            whisks = whisks.gamePublisher;
            record['children'] = whisks;
            record = zuuluu.bind(tangon)(limora, record);
            echoed[1] = record;
            sizing['children'] = echoed;
            echoed = golfie.bind(tangon)(oscard, sizing);
            sizing = new Array(2);
            sizing[0] = echoed;
            echoed = {};
            record = source.questDetailsSecondary;
            echoed['style'] = record;
            record = 23;
            record = sierra[record];
            cntext = cntext.bind(tangon)(record);
            record = {};
            record['quest'] = update;
            sierra = _closure1_slot7;
            sierra = sierra.VIDEO_MODAL_MOBILE;
            record['location'] = sierra;
            record['additionalItems'] = status;
            target = function(argFoo) { // Original name: children
                zuuluu = argFoo;
                option = zuuluu.ref;
                entity = null;
                michal = Object.create(entity);
                entity = 0;
                michal['ref'] = entity;
                foxtra = {};
                romeon = zuuluu;
                yankee = michal;
                romeon = copyDataProperties(foxtra, romeon, yankee);
                tangon = _closure1_slot8;
                oscard = _closure1_slot0;
                verify = _closure1_slot2;
                entity = 24;
                entity = verify[entity];
                zuuluu = undefined;
                entity = oscard.bind(zuuluu)(entity);
                michal = entity.PressableOpacity;
                entity = {};
                offset = 'button';
                entity['accessibilityRole'] = offset;
                offset = _closure2_slot3;
                offset = offset.questDetailsSecondaryButton;
                entity['style'] = offset;
                entity['ref'] = option;
                foxtra = entity;
                report = copyDataProperties(foxtra, romeon);
                report = 25;
                report = verify[report];
                report = oscard.bind(zuuluu)(report);
                oscard = report.MoreHorizontalIcon;
                report = {};
                option = _closure1_slot1;
                golfie = 6;
                golfie = verify[golfie];
                golfie = option.bind(zuuluu)(golfie);
                golfie = golfie.colors;
                golfie = golfie.TEXT_NORMAL;
                report['color'] = golfie;
                oscard = tangon.bind(zuuluu)(oscard, report);
                report = 'children';
                entity[report] = oscard;
                entity = tangon.bind(zuuluu)(michal, entity);
                return entity;
            };
            record['children'] = target;
            record = zuuluu.bind(tangon)(cntext, record);
            echoed['children'] = record;
            echoed = zuuluu.bind(tangon)(oscard, echoed);
            sizing[1] = echoed;
            foxtra['children'] = sizing;
            sizing = golfie.bind(tangon)(oscard, foxtra);
            foxtra = new Array(3);
            foxtra[0] = sizing;
            kiloes = kiloes != papara;
            if(!kiloes) { _fun00004_ip = 1607; continue _fun00003 }
 1550:
            record = _closure1_slot8;
            echoed = _closure1_slot1;
            cntext = _closure1_slot2;
            sizing = 26;
            sizing = cntext[sizing];
            echoed = echoed.bind(tangon)(sizing);
            sizing = {};
            cntext = {};
            papara = papara.url;
            cntext['uri'] = papara;
            sizing['source'] = cntext;
            cntext = source.playerThumbnail;
            sizing['style'] = cntext;
            kiloes = record.bind(tangon)(echoed, sizing);
 1607:
            foxtra[1] = kiloes;
            sizing = _closure1_slot9;
            limora = _closure1_slot0;
            target = _closure1_slot2;
            backup = target[backup];
            backup = limora.bind(tangon)(backup);
            kiloes = backup.Stack;
            backup = {};
            echoed = 'horizontal';
            backup['direction'] = echoed;
            papara = _closure1_slot1;
            output = target[output];
            output = papara.bind(tangon)(output);
            output = output.spacing;
            output = output.PX_16;
            backup['spacing'] = output;
            record = _closure1_slot8;
            output = 27;
            output = target[output];
            echoed = papara.bind(tangon)(output);
            output = {};
            output['onPress'] = config;
            source = source.ctaPrimary;
            output['style'] = source;
            source = 28;
            source = target[source];
            config = limora.bind(tangon)(source);
            source = config.getVideoQuestEndCardCtaText;
            update = update.config;
            update = source.bind(config)(update);
            output['text'] = update;
            echoed = record.bind(tangon)(echoed, output);
            output = new Array(3);
            output[0] = echoed;
            echoed = 29;
            update = target[echoed];
            update = limora.bind(tangon)(update);
            source = update.IconButton;
            update = {};
            config = 8;
            cntext = target[config];
            cntext = limora.bind(tangon)(cntext);
            sierra = cntext.intl;
            status = sierra.string;
            cntext = target[config];
            cntext = limora.bind(tangon)(cntext);
            cntext = cntext.t;
            cntext = cntext.Ej3B3d;
            cntext = status.bind(sierra)(cntext);
            update['accessibilityLabel'] = cntext;
            cntext = 30;
            cntext = target[cntext];
            cntext = papara.bind(tangon)(cntext);
            update['icon'] = cntext;
            update['onPress'] = ctrled;
            ctrled = 'secondary';
            update['variant'] = ctrled;
            update = record.bind(tangon)(source, update);
            output[1] = update;
            if(!result) { _fun00004_ip = 1977; continue _fun00003 }
 1866:
            source = _closure1_slot8;
            target = _closure1_slot0;
            record = _closure1_slot2;
            echoed = record[echoed];
            echoed = target.bind(tangon)(echoed);
            update = echoed.IconButton;
            echoed = {};
            cntext = record[config];
            cntext = target.bind(tangon)(cntext);
            papara = cntext.intl;
            cntext = papara.string;
            config = record[config];
            config = target.bind(tangon)(config);
            config = config.t;
            config = config.YsCuyM;
            config = cntext.bind(papara)(config);
            echoed['accessibilityLabel'] = config;
            config = _closure1_slot1;
            sequen = 31;
            sequen = record[sequen];
            sequen = config.bind(tangon)(sequen);
            echoed['icon'] = sequen;
            echoed['onPress'] = vacuum;
            echoed['variant'] = ctrled;
            result = source.bind(tangon)(update, echoed);
 1977:
            output[2] = result;
            backup['children'] = output;
            backup = sizing.bind(tangon)(kiloes, backup);
            foxtra[2] = backup;
            yankee['children'] = foxtra;
            yankee = golfie.bind(tangon)(romeon, yankee);
            offset[2] = yankee;
            verify['children'] = offset;
            verify = golfie.bind(tangon)(oscard, verify);
            option[2] = verify;
            report['children'] = option;
            report = golfie.bind(tangon)(oscard, report);
            entity['children'] = report;
            entity = zuuluu.bind(tangon)(michal, entity);
            return entity;
        }
    };
    var _closure1_slot14 = tangon;
    tangon = function(argFoo) { // Original name: PortraitLayout
        _fun00007: for(var _fun00008_ip = 0; ; ) switch(_fun00008_ip) {
 0:
            entity = argFoo;
            kiloes = entity.quest;
            ctrled = entity.captionsEnabled;
            output = entity.handleClose;
            target = entity.handlePrimaryCtaPress;
            quebec = entity.handleRewardDetailsPress;
            yankee = entity.handleShareQuest;
            sizing = entity.handleOpenTranscript;
            result = entity.handleToggleCaptions;
            status = entity.onNavigateToPostWatchVideo;
            tangon = undefined;
            var _closure2_slot0 = tangon;
            var _closure2_slot1 = tangon;
            var _closure2_slot2 = tangon;
            var _closure2_slot3 = tangon;
            var _closure2_slot4 = tangon;
            var _closure2_slot5 = tangon;
            report = _closure1_slot10;
            michal = _closure1_slot0;
            zuuluu = _closure1_slot2;
            entity = 7;
            entity = zuuluu[entity];
            oscard = michal.bind(tangon)(entity);
            entity = oscard.isAndroid;
            entity = entity.bind(oscard)();
            vacuum = report.bind(tangon)(entity);
            entity = 32;
            entity = zuuluu[entity];
            michal = michal.bind(tangon)(entity);
            entity = michal.useQuestTaskDetails;
            variable37 = entity.bind(michal)(kiloes);
            michal = kiloes.userStatus;
            romeon = null;
            zuuluu = romeon == michal;
            entity = undefined;
            if(zuuluu) { _fun00008_ip = 172; continue _fun00007 }
 166:
            entity = michal.completedAt;
 172:
            record = romeon != entity;
            report = _closure1_slot4;
            michal = report.useContext;
            sierra = _closure1_slot0;
            limora = _closure1_slot2;
            entity = 11;
            entity = limora[entity];
            entity = sierra.bind(tangon)(entity);
            entity = entity.QuestDockGestureContext;
            entity = michal.bind(report)(entity);
            oscard = entity.windowDimensions;
            _closure2_slot0 = oscard;
            entity = report.useState;
            entity = entity.bind(report)(romeon);
            verify = _closure1_slot3;
            golfie = 2;
            entity = verify.bind(tangon)(entity, golfie);
            config = 0;
            option = entity[config];
            _closure2_slot1 = option;
            zuuluu = 1;
            entity = entity[zuuluu];
            _closure2_slot2 = entity;
            offset = report.useCallback;
            michal = new Array(1);
            michal[0] = oscard;
            entity = function(argFoo) {
                entity = argFoo;
                michal = entity.naturalSize;
                michal = michal.width;
                entity = entity.naturalSize;
                entity = entity.height;
                report = michal / entity;
                zuuluu = _closure2_slot0;
                entity = zuuluu.get;
                entity = entity.bind(zuuluu)();
                entity = entity.width;
                zuuluu = _closure2_slot2;
                michal = global;
                tangon = michal.Math;
                michal = tangon.floor;
                entity = entity / report;
                michal = michal.bind(tangon)(entity);
                entity = undefined;
                michal = zuuluu.bind(entity)(michal);
                return entity;
            };
            offset = offset.bind(report)(entity, michal);
            cntext = _closure1_slot1;
            entity = 33;
            entity = limora[entity];
            entity = cntext.bind(tangon)(entity);
            entity = entity.bind(tangon)();
            _closure2_slot3 = entity;
            michal = report.useState;
            michal = michal.bind(report)(romeon);
            michal = verify.bind(tangon)(michal, golfie);
            golfie = michal[config];
            _closure2_slot4 = golfie;
            michal = michal[zuuluu];
            _closure2_slot5 = michal;
            verify = report.useCallback;
            zuuluu = function(argFoo) {
                entity = argFoo;
                entity = entity.nativeEvent;
                entity = entity.layout;
                zuuluu = entity.height;
                michal = _closure2_slot5;
                entity = undefined;
                michal = michal.bind(entity)(zuuluu);
                return entity;
            };
            michal = new Array(0);
            verify = verify.bind(report)(zuuluu, michal);
            zuuluu = report.useMemo;
            michal = new Array(4);
            michal[0] = option;
            michal[1] = golfie;
            michal[2] = oscard;
            michal[3] = entity;
            entity = function() {
                _fun00009: for(var _fun00010_ip = 0; ; ) switch(_fun00010_ip) {
 0:
                    michal = _closure2_slot1;
                    zuuluu = null;
                    if(!(zuuluu != michal)) { _fun00010_ip = 21; continue _fun00009 }
 13:
                    michal = _closure2_slot4;
                    if(!(zuuluu == michal)) { _fun00010_ip = 25; continue _fun00009 }
 21:
                    michal = undefined;
                    return michal;
 25:
                    michal = global;
                    tangon = michal.Math;
                    zuuluu = tangon.min;
                    report = _closure2_slot0;
                    michal = report.get;
                    michal = michal.bind(report)();
                    report = michal.height;
                    michal = _closure2_slot3;
                    michal = michal.top;
                    report = report - michal;
                    michal = _closure2_slot3;
                    michal = michal.bottom;
                    report = report - michal;
                    michal = _closure2_slot4;
                    michal = report - michal;
                    entity = _closure2_slot1;
                    entity = zuuluu.bind(tangon)(michal, entity);
                    return entity;
                }
            };
            romeon = zuuluu.bind(report)(entity, michal);
            zuuluu = _closure1_slot9;
            entity = 14;
            entity = limora[entity];
            entity = sierra.bind(tangon)(entity);
            michal = entity.SafeAreaPaddingView;
            entity = {};
            variable36 = true;
            entity['bottom'] = variable36;
            report = vacuum.wrapper;
            entity['style'] = report;
            oscard = _closure1_slot5;
            report = {};
            option = vacuum.videoWrapper;
            golfie = new Array(2);
            golfie[0] = option;
            option = {};
            option['height'] = romeon;
            golfie[1] = option;
            report['style'] = golfie;
            papara = _closure1_slot8;
            golfie = 15;
            golfie = limora[golfie];
            golfie = sierra.bind(tangon)(golfie);
            option = golfie.VideoQuestPlayer;
            golfie = {};
            golfie['captionsEnabled'] = ctrled;
            golfie['onLoad'] = offset;
            offset = 'portrait';
            golfie['orientation'] = offset;
            offset = {'bottom': 158, 'left': 16, 'right': 16};
            golfie['safeAreaInsets'] = offset;
            option = papara.bind(tangon)(option, golfie);
            golfie = new Array(4);
            golfie[0] = option;
            option = 34;
            offset = limora[option];
            romeon = cntext.bind(tangon)(offset);
            offset = {};
            echoed = {'x': 0, 'y': 0};
            offset['start'] = echoed;
            echoed = {'x': 0, 'y': 1};
            offset['end'] = echoed;
            echoed = vacuum.gradientTop;
            offset['style'] = echoed;
            echoed = 35;
            update = limora[echoed];
            sequen = cntext.bind(tangon)(update);
            update = 6;
            source = limora[update];
            source = cntext.bind(tangon)(source);
            source = source.unsafe_rawColors;
            source = source.PLUM_23;
            whisks = sequen.bind(tangon)(source);
            source = whisks.alpha;
            sequen = 0.4;
            whisks = source.bind(whisks)(sequen);
            source = whisks.hex;
            whisks = source.bind(whisks)();
            source = new Array(2);
            source[0] = whisks;
            whisks = limora[echoed];
            equals = cntext.bind(tangon)(whisks);
            whisks = limora[update];
            whisks = cntext.bind(tangon)(whisks);
            whisks = whisks.unsafe_rawColors;
            whisks = whisks.PLUM_23;
            equals = equals.bind(tangon)(whisks);
            whisks = equals.alpha;
            equals = whisks.bind(equals)(config);
            whisks = equals.hex;
            whisks = whisks.bind(equals)();
            source[1] = whisks;
            offset['colors'] = source;
            offset = papara.bind(tangon)(romeon, offset);
            golfie[1] = offset;
            option = limora[option];
            offset = cntext.bind(tangon)(option);
            option = {};
            romeon = {'x': 0, 'y': 0};
            option['start'] = romeon;
            romeon = {'x': 0, 'y': 1};
            option['end'] = romeon;
            romeon = vacuum.gradientBottom;
            option['style'] = romeon;
            romeon = limora[echoed];
            source = cntext.bind(tangon)(romeon);
            romeon = limora[update];
            romeon = cntext.bind(tangon)(romeon);
            romeon = romeon.unsafe_rawColors;
            romeon = romeon.PLUM_23;
            source = source.bind(tangon)(romeon);
            romeon = source.alpha;
            source = romeon.bind(source)(config);
            romeon = source.hex;
            source = romeon.bind(source)();
            romeon = new Array(2);
            romeon[0] = source;
            echoed = limora[echoed];
            source = cntext.bind(tangon)(echoed);
            echoed = limora[update];
            echoed = cntext.bind(tangon)(echoed);
            echoed = echoed.unsafe_rawColors;
            echoed = echoed.PLUM_23;
            source = source.bind(tangon)(echoed);
            echoed = source.alpha;
            source = echoed.bind(source)(sequen);
            echoed = source.hex;
            echoed = echoed.bind(source)();
            romeon[1] = echoed;
            option['colors'] = romeon;
            option = papara.bind(tangon)(offset, option);
            golfie[2] = option;
            option = {};
            romeon = vacuum.videoContentWrapper;
            offset = new Array(2);
            offset[0] = romeon;
            romeon = vacuum.videoContentWrapperPortrait;
            offset[1] = romeon;
            option['style'] = offset;
            offset = 36;
            offset = limora[offset];
            romeon = cntext.bind(tangon)(offset);
            offset = {'onClose': null, 'showCurrentVideoTime': true, 'withTextShadow': true};
            offset['onClose'] = output;
            romeon = papara.bind(tangon)(romeon, offset);
            offset = new Array(2);
            offset[0] = romeon;
            source = 21;
            romeon = limora[source];
            romeon = sierra.bind(tangon)(romeon);
            output = romeon.Stack;
            romeon = {};
            echoed = 'vertical';
            romeon['direction'] = echoed;
            echoed = limora[update];
            echoed = cntext.bind(tangon)(echoed);
            echoed = echoed.spacing;
            echoed = echoed.PX_24;
            romeon['spacing'] = echoed;
            echoed = {};
            sequen = vacuum.questDetails;
            echoed['style'] = sequen;
            sequen = {};
            config = vacuum.questDetailsPrimary;
            sequen['style'] = config;
            whisks = 22;
            config = limora[whisks];
            config = sierra.bind(tangon)(config);
            equals = config.Text;
            config = {'variant': 'heading-lg/semibold', 'color': 'white'};
            variable38 = vacuum.textShadow;
            config['style'] = variable38;
            variable38 = kiloes.config;
            variable38 = variable38.messages;
            variable38 = variable38.gameTitle;
            config['children'] = variable38;
            equals = papara.bind(tangon)(equals, config);
            config = new Array(2);
            config[0] = equals;
            whisks = limora[whisks];
            whisks = sierra.bind(tangon)(whisks);
            equals = whisks.Text;
            whisks = {'variant': 'heading-sm/semibold', 'color': 'text-normal'};
            variable38 = vacuum.textShadow;
            whisks['style'] = variable38;
            variable38 = kiloes.config;
            variable38 = variable38.messages;
            variable38 = variable38.gamePublisher;
            whisks['children'] = variable38;
            whisks = papara.bind(tangon)(equals, whisks);
            config[1] = whisks;
            sequen['children'] = config;
            config = zuuluu.bind(tangon)(oscard, sequen);
            sequen = new Array(2);
            sequen[0] = config;
            config = {};
            whisks = vacuum.questDetailsSecondary;
            config['style'] = whisks;
            whisks = 37;
            whisks = limora[whisks];
            equals = cntext.bind(tangon)(whisks);
            whisks = {};
            whisks['quest'] = kiloes;
            variable38 = 'x-sm';
            whisks['size'] = variable38;
            variable37 = variable37.percentComplete;
            whisks['progress'] = variable37;
            whisks['hasConfetti'] = variable36;
            whisks['onPress'] = quebec;
            whisks = papara.bind(tangon)(equals, whisks);
            config['children'] = whisks;
            config = papara.bind(tangon)(oscard, config);
            sequen[1] = config;
            echoed['children'] = sequen;
            sequen = zuuluu.bind(tangon)(oscard, echoed);
            echoed = new Array(2);
            echoed[0] = sequen;
            source = limora[source];
            source = sierra.bind(tangon)(source);
            sequen = source.Stack;
            source = {};
            config = 'horizontal';
            source['direction'] = config;
            config = limora[update];
            config = cntext.bind(tangon)(config);
            config = config.spacing;
            config = config.PX_16;
            source['spacing'] = config;
            config = 27;
            config = limora[config];
            cntext = cntext.bind(tangon)(config);
            config = {};
            config['onPress'] = target;
            target = vacuum.ctaPrimary;
            config['style'] = target;
            target = 28;
            target = limora[target];
            limora = sierra.bind(tangon)(target);
            sierra = limora.getVideoQuestEndCardCtaText;
            target = kiloes.config;
            target = sierra.bind(limora)(target);
            config['text'] = target;
            cntext = papara.bind(tangon)(cntext, config);
            config = new Array(2);
            config[0] = cntext;
            if(!record) { _fun00008_ip = 1610; continue _fun00007 }
 1489:
            target = _closure1_slot8;
            quebec = _closure1_slot0;
            whisks = _closure1_slot2;
            cntext = 29;
            cntext = whisks[cntext];
            cntext = quebec.bind(tangon)(cntext);
            papara = cntext.IconButton;
            cntext = {};
            sierra = 8;
            limora = whisks[sierra];
            limora = quebec.bind(tangon)(limora);
            equals = limora.intl;
            limora = equals.string;
            sierra = whisks[sierra];
            sierra = quebec.bind(tangon)(sierra);
            sierra = sierra.t;
            sierra = sierra.YsCuyM;
            sierra = limora.bind(equals)(sierra);
            cntext['accessibilityLabel'] = sierra;
            limora = _closure1_slot1;
            sierra = 31;
            sierra = whisks[sierra];
            sierra = limora.bind(tangon)(sierra);
            cntext['icon'] = sierra;
            cntext['onPress'] = status;
            status = 'secondary';
            cntext['variant'] = status;
            record = target.bind(tangon)(papara, cntext);
 1610:
            config[1] = record;
            source['children'] = config;
            source = zuuluu.bind(tangon)(sequen, source);
            echoed[1] = source;
            romeon['children'] = echoed;
            romeon = zuuluu.bind(tangon)(output, romeon);
            offset[1] = romeon;
            option['children'] = offset;
            option = zuuluu.bind(tangon)(oscard, option);
            golfie[3] = option;
            report['children'] = golfie;
            oscard = zuuluu.bind(tangon)(oscard, report);
            report = new Array(2);
            report[0] = oscard;
            option = _closure1_slot9;
            golfie = _closure1_slot5;
            oscard = {};
            offset = vacuum.footer;
            oscard['style'] = offset;
            oscard['onLayout'] = verify;
            output = _closure1_slot8;
            source = _closure1_slot0;
            sequen = _closure1_slot2;
            offset = 24;
            verify = sequen[offset];
            verify = source.bind(tangon)(verify);
            romeon = verify.PressableOpacity;
            verify = {};
            echoed = 'button';
            verify['accessibilityRole'] = echoed;
            verify['onPress'] = sizing;
            sizing = 9;
            sizing = sequen[sizing];
            sizing = source.bind(tangon)(sizing);
            config = sizing.PaperIcon;
            sizing = {};
            record = vacuum.iconDisabled;
            record = record.color;
            sizing['color'] = record;
            sizing = output.bind(tangon)(config, sizing);
            verify['children'] = sizing;
            romeon = output.bind(tangon)(romeon, verify);
            verify = new Array(4);
            verify[0] = romeon;
            romeon = sequen[offset];
            romeon = source.bind(tangon)(romeon);
            sizing = romeon.PressableOpacity;
            romeon = {};
            romeon['accessibilityRole'] = echoed;
            romeon['onPress'] = result;
            result = 38;
            result = sequen[result];
            result = source.bind(tangon)(result);
            source = result.CaptionIcon;
            result = {};
            if(ctrled) { _fun00008_ip = 1863; continue _fun00007 }
 1850:
            ctrled = vacuum.iconDisabled;
            ctrled = ctrled.color;
            _fun00008_ip = 1873; continue _fun00007;
 1863:
            vacuum = vacuum.icon;
            ctrled = vacuum.color;
 1873:
            result['color'] = ctrled;
            result = output.bind(tangon)(source, result);
            romeon['children'] = result;
            romeon = output.bind(tangon)(sizing, romeon);
            verify[1] = romeon;
            romeon = _closure1_slot8;
            result = _closure1_slot0;
            sizing = _closure1_slot2;
            offset = sizing[offset];
            offset = result.bind(tangon)(offset);
            output = offset.PressableOpacity;
            offset = {};
            offset['accessibilityRole'] = echoed;
            offset['onPress'] = yankee;
            yankee = 39;
            yankee = sizing[yankee];
            yankee = result.bind(tangon)(yankee);
            echoed = yankee.ShareIcon;
            result = {};
            yankee = _closure1_slot1;
            update = sizing[update];
            update = yankee.bind(tangon)(update);
            update = update.colors;
            update = update.TEXT_NORMAL;
            result['color'] = update;
            result = romeon.bind(tangon)(echoed, result);
            offset['children'] = result;
            offset = romeon.bind(tangon)(output, offset);
            verify[2] = offset;
            offset = 23;
            offset = sizing[offset];
            yankee = yankee.bind(tangon)(offset);
            offset = {};
            offset['quest'] = kiloes;
            backup = _closure1_slot7;
            backup = backup.VIDEO_MODAL_MOBILE;
            offset['location'] = backup;
            foxtra = function(argFoo) { // Original name: children
                zuuluu = argFoo;
                option = zuuluu.ref;
                entity = null;
                michal = Object.create(entity);
                entity = 0;
                michal['ref'] = entity;
                foxtra = {};
                romeon = zuuluu;
                yankee = michal;
                romeon = copyDataProperties(foxtra, romeon, yankee);
                tangon = _closure1_slot8;
                oscard = _closure1_slot0;
                verify = _closure1_slot2;
                entity = 24;
                entity = verify[entity];
                zuuluu = undefined;
                entity = oscard.bind(zuuluu)(entity);
                michal = entity.PressableOpacity;
                entity = {};
                offset = 'button';
                entity['accessibilityRole'] = offset;
                entity['ref'] = option;
                foxtra = entity;
                report = copyDataProperties(foxtra, romeon);
                report = 25;
                report = verify[report];
                report = oscard.bind(zuuluu)(report);
                oscard = report.MoreHorizontalIcon;
                report = {};
                option = _closure1_slot1;
                golfie = 6;
                golfie = verify[golfie];
                golfie = option.bind(zuuluu)(golfie);
                golfie = golfie.colors;
                golfie = golfie.TEXT_NORMAL;
                report['color'] = golfie;
                oscard = tangon.bind(zuuluu)(oscard, report);
                report = 'children';
                entity[report] = oscard;
                entity = tangon.bind(zuuluu)(michal, entity);
                return entity;
            };
            offset['children'] = foxtra;
            offset = romeon.bind(tangon)(yankee, offset);
            verify[3] = offset;
            oscard['children'] = verify;
            oscard = option.bind(tangon)(golfie, oscard);
            report[1] = oscard;
            entity['children'] = report;
            entity = zuuluu.bind(tangon)(michal, entity);
            return entity;
        }
    };
    var _closure1_slot15 = tangon;
    tangon = 49;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/quests/native/VideoQuestModal/VideoQuestModalContentInProgress.tsx';
    tangon = report.bind(oscard)(tangon);
    michal = function(argFoo) { // Original name: VideoQuestModalContentInProgress
        _fun00011: for(var _fun00012_ip = 0; ; ) switch(_fun00012_ip) {
 0:
            entity = argFoo;
            verify = entity.onClose;
            var _closure2_slot0 = verify;
            report = entity.onNavigateToPostWatchVideo;
            zuuluu = _closure1_slot0;
            backup = _closure1_slot2;
            tangon = 40;
            oscard = backup[tangon];
            tangon = undefined;
            golfie = zuuluu.bind(tangon)(oscard);
            oscard = golfie.useVideoQuestModalContext;
            oscard = oscard.bind(golfie)();
            foxtra = oscard.quest;
            var _closure2_slot1 = foxtra;
            sizing = _closure1_slot4;
            golfie = sizing.useState;
            oscard = false;
            option = golfie.bind(sizing)(oscard);
            golfie = _closure1_slot3;
            oscard = 2;
            golfie = golfie.bind(tangon)(option, oscard);
            oscard = 0;
            romeon = golfie[oscard];
            oscard = 1;
            oscard = golfie[oscard];
            var _closure2_slot2 = oscard;
            option = sizing.useCallback;
            golfie = function() {
                zuuluu = _closure2_slot2;
                michal = undefined;
                entity = function(argFoo) {
                    entity = argFoo;
                    entity = !entity;
                    return entity;
                };
                entity = zuuluu.bind(michal)(entity);
                return entity;
            };
            oscard = new Array(0);
            oscard = option.bind(sizing)(golfie, oscard);
            offset = sizing.useCallback;
            option = new Array(1);
            option[0] = foxtra;
            golfie = function() {
                report = _closure1_slot1;
                michal = _closure1_slot2;
                entity = 41;
                tangon = michal[entity];
                entity = undefined;
                oscard = report.bind(entity)(tangon);
                report = oscard.openLazy;
                tangon = _closure1_slot0;
                zuuluu = 43;
                zuuluu = michal[zuuluu];
                tangon = tangon.bind(entity)(zuuluu);
                zuuluu = 42;
                zuuluu = michal[zuuluu];
                michal = michal.paths;
                tangon = tangon.bind(entity)(zuuluu, michal);
                golfie = _closure2_slot1;
                option = golfie.id;
                michal = global;
                michal = michal.HermesInternal;
                zuuluu = michal.concat;
                michal = 'transcript-';
                zuuluu = zuuluu.bind(michal)(option);
                michal = {};
                michal['quest'] = golfie;
                michal = report.bind(oscard)(tangon, zuuluu, michal);
                return entity;
            };
            golfie = offset.bind(sizing)(golfie, option);
            yankee = sizing.useCallback;
            option = foxtra.id;
            offset = new Array(1);
            offset[0] = option;
            option = function() {
                oscard = _closure1_slot0;
                golfie = _closure1_slot2;
                entity = 44;
                michal = golfie[entity];
                entity = undefined;
                report = oscard.bind(entity)(michal);
                tangon = report.showShareActionSheet;
                zuuluu = {};
                michal = 28;
                michal = golfie[michal];
                golfie = oscard.bind(entity)(michal);
                oscard = golfie.getQuestUrl;
                michal = _closure2_slot1;
                michal = michal.id;
                michal = oscard.bind(golfie)(michal);
                zuuluu['message'] = michal;
                michal = 'Video Quest Modal';
                michal = tangon.bind(report)(zuuluu, michal);
                return entity;
            };
            option = yankee.bind(sizing)(option, offset);
            yankee = sizing.useCallback;
            offset = new Array(1);
            offset[0] = verify;
            verify = function() {
                michal = _closure2_slot0;
                entity = undefined;
                michal = michal.bind(entity)();
                return entity;
            };
            yankee = yankee.bind(sizing)(verify, offset);
            verify = 45;
            verify = backup[verify];
            offset = zuuluu.bind(tangon)(verify);
            verify = offset.useQuestImpressionId;
            verify = verify.bind(offset)();
            var _closure2_slot3 = verify;
            kiloes = sizing.useCallback;
            offset = new Array(2);
            offset[0] = foxtra;
            offset[1] = verify;
            verify = function() {
                option = _closure1_slot0;
                verify = _closure1_slot2;
                entity = 28;
                michal = verify[entity];
                entity = undefined;
                report = option.bind(entity)(michal);
                tangon = report.openGameLink;
                zuuluu = _closure2_slot1;
                michal = {};
                golfie = 46;
                golfie = verify[golfie];
                golfie = option.bind(entity)(golfie);
                golfie = golfie.QuestContent;
                golfie = golfie.VIDEO_MODAL_MOBILE;
                michal['content'] = golfie;
                golfie = 47;
                golfie = verify[golfie];
                golfie = option.bind(entity)(golfie);
                golfie = golfie.QuestContentCTA;
                golfie = golfie.OPEN_GAME_LINK;
                michal['ctaContent'] = golfie;
                oscard = _closure2_slot3;
                michal['impressionId'] = oscard;
                michal = tangon.bind(report)(zuuluu, michal);
                return entity;
            };
            offset = kiloes.bind(sizing)(verify, offset);
            kiloes = sizing.useCallback;
            output = foxtra.id;
            verify = new Array(1);
            verify[0] = output;
            michal = function() {
                zuuluu = _closure1_slot0;
                michal = _closure1_slot2;
                entity = 48;
                michal = michal[entity];
                entity = undefined;
                tangon = zuuluu.bind(entity)(michal);
                zuuluu = tangon.openRewardDetailsBottomSheet;
                michal = {};
                report = _closure2_slot1;
                report = report.id;
                michal['questId'] = report;
                michal = zuuluu.bind(tangon)(michal);
                return entity;
            };
            verify = kiloes.bind(sizing)(michal, verify);
            michal = 28;
            michal = backup[michal];
            backup = zuuluu.bind(tangon)(michal);
            zuuluu = backup.getVideoOrientation;
            michal = foxtra.config;
            backup = zuuluu.bind(backup)(michal);
            zuuluu = _closure1_slot8;
            michal = 'portrait';
            if(!(michal !== backup)) { _fun00012_ip = 352; continue _fun00011 }
 346:
            michal = _closure1_slot14;
            _fun00012_ip = 356; continue _fun00011;
 352:
            michal = _closure1_slot15;
 356:
            entity = {};
            entity['quest'] = foxtra;
            entity['captionsEnabled'] = romeon;
            entity['handleClose'] = yankee;
            entity['handlePrimaryCtaPress'] = offset;
            entity['handleRewardDetailsPress'] = verify;
            entity['handleShareQuest'] = option;
            entity['handleOpenTranscript'] = golfie;
            entity['handleToggleCaptions'] = oscard;
            entity['onNavigateToPostWatchVideo'] = report;
            entity = zuuluu.bind(tangon)(michal, entity);
            return entity;
        }
    };
    zuuluu['default'] = michal;
    return entity;
})();