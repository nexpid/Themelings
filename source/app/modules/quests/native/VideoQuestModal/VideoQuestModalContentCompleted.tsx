// app/modules/quests/native/VideoQuestModal/VideoQuestModalContentCompleted.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    report = argBar;
    yankee = argBaz;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    var _closure1_slot1 = yankee;
    var _closure1_slot2 = oscard;
    entity = global;
    option = entity.Object;
    golfie = option.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(option)(zuuluu, entity, tangon);
    romeon = 0;
    tangon = oscard[romeon];
    entity = undefined;
    tangon = yankee.bind(entity)(tangon);
    var _closure1_slot3 = tangon;
    foxtra = 1;
    golfie = oscard[foxtra];
    tangon = argCor;
    tangon = tangon.bind(entity)(golfie);
    var _closure1_slot4 = tangon;
    tangon = 2;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    golfie = tangon.ActivityIndicator;
    var _closure1_slot5 = golfie;
    tangon = tangon.View;
    var _closure1_slot6 = tangon;
    tangon = 3;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    golfie = tangon.jsx;
    var _closure1_slot7 = golfie;
    tangon = tangon.jsxs;
    var _closure1_slot8 = tangon;
    tangon = {'mass': 0.5, 'damping': 50, 'stiffness': 80, 'overshootClamping': true};
    var _closure1_slot9 = tangon;
    tangon = 4;
    tangon = oscard[tangon];
    option = report.bind(entity)(tangon);
    golfie = option.createStyles;
    tangon = {};
    verify = {'height': '100%', 'flexGrow': 1, 'flexShrink': 1};
    tangon['wrapper'] = verify;
    verify = {};
    offset = 210;
    verify['height'] = offset;
    offset = 5;
    backup = oscard[offset];
    backup = yankee.bind(entity)(backup);
    backup = backup.spacing;
    backup = backup.PX_24;
    verify['marginBottom'] = backup;
    backup = oscard[offset];
    backup = yankee.bind(entity)(backup);
    backup = backup.radii;
    backup = backup.xl;
    verify['borderRadius'] = backup;
    tangon['image'] = verify;
    verify = {};
    backup = oscard[offset];
    backup = yankee.bind(entity)(backup);
    backup = backup.spacing;
    backup = backup.PX_16;
    verify['marginBottom'] = backup;
    tangon['header'] = verify;
    verify = {};
    verify['paddingVertical'] = romeon;
    tangon['ctas'] = verify;
    verify = {};
    backup = oscard[offset];
    backup = yankee.bind(entity)(backup);
    backup = backup.spacing;
    backup = backup.PX_16;
    verify['padding'] = backup;
    tangon['content'] = verify;
    verify = {};
    verify['borderBottomWidth'] = foxtra;
    backup = oscard[offset];
    backup = yankee.bind(entity)(backup);
    backup = backup.colors;
    backup = backup.BORDER_STRONG;
    verify['borderBottomColor'] = backup;
    backup = oscard[offset];
    backup = yankee.bind(entity)(backup);
    backup = backup.spacing;
    backup = backup.PX_24;
    verify['paddingBottom'] = backup;
    tangon['contentEndCard'] = verify;
    verify = {};
    verify['flex'] = foxtra;
    tangon['contentRewardsAnimatedWrapper'] = verify;
    verify = {};
    verify['flex'] = foxtra;
    tangon['contentRewardsWrapper'] = verify;
    verify = {};
    verify['flexGrow'] = romeon;
    offset = oscard[offset];
    offset = yankee.bind(entity)(offset);
    offset = offset.radii;
    offset = offset.round;
    verify['borderRadius'] = offset;
    tangon['ctaPrimary'] = verify;
    tangon = golfie.bind(option)(tangon);
    var _closure1_slot10 = tangon;
    tangon = {};
    golfie = 'function VideoQuestModalContentCompletedTsx1(){const{withSpring,isComponentMounted,ANIMATED_CONTENT_SPRING_CONFIG,interpolate,ANIMATED_CONTENT_OFFSET_Y}=this.__closure;return{opacity:withSpring(isComponentMounted.get(),ANIMATED_CONTENT_SPRING_CONFIG),transform:[{translateY:withSpring(interpolate(isComponentMounted.get(),[0,1],[ANIMATED_CONTENT_OFFSET_Y,0]))}]};}';
    tangon['code'] = golfie;
    var _closure1_slot11 = tangon;
    tangon = 28;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/quests/native/VideoQuestModal/VideoQuestModalContentCompleted.tsx';
    tangon = report.bind(oscard)(tangon);
    michal = function(argFoo) { // Original name: VideoQuestModalContentCompleted
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            michal = argFoo;
            romeon = michal.onClose;
            var _closure2_slot0 = romeon;
            cntext = michal.onRestartVideo;
            michal = _closure1_slot10;
            tangon = undefined;
            update = michal.bind(tangon)();
            michal = _closure1_slot0;
            backup = _closure1_slot2;
            zuuluu = 6;
            zuuluu = backup[zuuluu];
            report = michal.bind(tangon)(zuuluu);
            zuuluu = report.useVideoQuestModalContext;
            zuuluu = zuuluu.bind(report)();
            sequen = zuuluu.quest;
            var _closure2_slot1 = sequen;
            oscard = _closure1_slot4;
            golfie = oscard.useMemo;
            report = new Array(1);
            report[0] = sequen;
            zuuluu = function() {
                report = _closure1_slot0;
                oscard = _closure1_slot2;
                entity = 7;
                zuuluu = oscard[entity];
                michal = undefined;
                tangon = report.bind(michal)(zuuluu);
                zuuluu = tangon.resolveVideoQuestAsset;
                entity = oscard[entity];
                entity = report.bind(michal)(entity);
                entity = entity.VideoQuestAssetId;
                michal = entity.VIDEO_PLAYER_THUMBNAIL;
                entity = _closure2_slot1;
                entity = zuuluu.bind(tangon)(michal, entity);
                return entity;
            };
            output = golfie.bind(oscard)(zuuluu, report);
            zuuluu = 8;
            zuuluu = backup[zuuluu];
            report = michal.bind(tangon)(zuuluu);
            zuuluu = report.useQuestImpressionId;
            zuuluu = zuuluu.bind(report)();
            var _closure2_slot2 = zuuluu;
            golfie = oscard.useCallback;
            report = new Array(2);
            report[0] = sequen;
            report[1] = zuuluu;
            zuuluu = function() {
                option = _closure1_slot0;
                verify = _closure1_slot2;
                entity = 9;
                michal = verify[entity];
                entity = undefined;
                report = option.bind(entity)(michal);
                tangon = report.openGameLink;
                zuuluu = _closure2_slot1;
                michal = {};
                golfie = 10;
                golfie = verify[golfie];
                golfie = option.bind(entity)(golfie);
                golfie = golfie.QuestContent;
                golfie = golfie.VIDEO_MODAL_MOBILE;
                michal['content'] = golfie;
                golfie = 11;
                golfie = verify[golfie];
                golfie = option.bind(entity)(golfie);
                golfie = golfie.QuestContentCTA;
                golfie = golfie.OPEN_GAME_LINK;
                michal['ctaContent'] = golfie;
                oscard = _closure2_slot2;
                michal['impressionId'] = oscard;
                michal = tangon.bind(report)(zuuluu, michal);
                return entity;
            };
            config = golfie.bind(oscard)(zuuluu, report);
            zuuluu = 12;
            zuuluu = backup[zuuluu];
            golfie = michal.bind(tangon)(zuuluu);
            report = golfie.useQuestRewardClaimHandler;
            zuuluu = {};
            zuuluu['quest'] = sequen;
            zuuluu = report.bind(golfie)(zuuluu);
            golfie = zuuluu.isLoading;
            ctrled = zuuluu.isClaiming;
            verify = zuuluu.claim;
            var _closure2_slot3 = verify;
            option = oscard.useCallback;
            report = _closure1_slot3;
            zuuluu = function* () {
                entity = function* () { // Original name: ?anon_0_
                    _fun00003: for(var _fun00004_ip = 0; ; ) switch(_fun00004_ip) {
 0:
                        StartGenerator();
                        ResumeGenerator(result_out_reg=0, return_bool_out_reg=1);
                        if(michal) { _fun00004_ip = 47; continue _fun00003 }
 7:
                        michal = _closure2_slot3;
                        zuuluu = undefined;
                        michal = michal.bind(zuuluu)();
                        SaveGenerator(address=24);
 22:
                        return michal;
 24:
                        ResumeGenerator(result_out_reg=1, return_bool_out_reg=4);
                        if(report) { _fun00004_ip = 44; continue _fun00003 }
 30:
                        if(!michal) { _fun00004_ip = 41; continue _fun00003 }
 33:
                        tangon = _closure2_slot0;
                        tangon = tangon.bind(zuuluu)();
 41:
                        return zuuluu;
 44:
                        return michal;
 47:
                        return entity;
                    }
                };
                return entity;
            };
            report = report.bind(tangon)(zuuluu);
            zuuluu = new Array(2);
            zuuluu[0] = verify;
            zuuluu[1] = romeon;
            source = option.bind(oscard)(report, zuuluu);
            yankee = 13;
            zuuluu = backup[yankee];
            option = michal.bind(tangon)(zuuluu);
            report = option.useSharedValue;
            zuuluu = 0;
            option = report.bind(option)(zuuluu);
            var _closure2_slot4 = option;
            zuuluu = backup[yankee];
            verify = michal.bind(tangon)(zuuluu);
            report = verify.useAnimatedStyle;
            zuuluu = function() { // Original name: c
                entity = {};
                option = _closure1_slot0;
                verify = _closure1_slot2;
                michal = 14;
                tangon = verify[michal];
                golfie = undefined;
                offset = option.bind(golfie)(tangon);
                report = offset.withSpring;
                oscard = _closure2_slot4;
                tangon = oscard.get;
                tangon = tangon.bind(oscard)();
                zuuluu = _closure1_slot9;
                zuuluu = report.bind(offset)(tangon, zuuluu);
                entity['opacity'] = zuuluu;
                zuuluu = {};
                michal = verify[michal];
                report = option.bind(golfie)(michal);
                tangon = report.withSpring;
                michal = 13;
                michal = verify[michal];
                verify = option.bind(golfie)(michal);
                option = verify.interpolate;
                michal = oscard.get;
                golfie = michal.bind(oscard)();
                oscard = [0, 1];
                michal = [25, 0];
                michal = option.bind(verify)(golfie, oscard, michal);
                michal = tangon.bind(report)(michal);
                zuuluu['translateY'] = michal;
                michal = new Array(1);
                michal[0] = zuuluu;
                entity['transform'] = michal;
                return entity;
            };
            offset = {};
            foxtra = 14;
            foxtra = backup[foxtra];
            foxtra = michal.bind(tangon)(foxtra);
            foxtra = foxtra.withSpring;
            offset['withSpring'] = foxtra;
            offset['isComponentMounted'] = option;
            foxtra = _closure1_slot9;
            offset['ANIMATED_CONTENT_SPRING_CONFIG'] = foxtra;
            yankee = backup[yankee];
            yankee = michal.bind(tangon)(yankee);
            yankee = yankee.interpolate;
            offset['interpolate'] = yankee;
            sizing = 25;
            offset['ANIMATED_CONTENT_OFFSET_Y'] = sizing;
            zuuluu['__closure'] = offset;
            offset = 15065296650325.0;
            zuuluu['__workletHash'] = offset;
            offset = _closure1_slot11;
            zuuluu['__initData'] = offset;
            foxtra = report.bind(verify)(zuuluu);
            report = oscard.useEffect;
            zuuluu = new Array(1);
            zuuluu[0] = option;
            entity = function() {
                zuuluu = _closure2_slot4;
                michal = zuuluu.set;
                entity = 1;
                entity = michal.bind(zuuluu)(entity);
                entity = undefined;
                return entity;
            };
            entity = report.bind(oscard)(entity, zuuluu);
            zuuluu = _closure1_slot8;
            entity = 15;
            entity = backup[entity];
            entity = michal.bind(tangon)(entity);
            michal = entity.SafeAreaPaddingView;
            entity = {};
            verify = true;
            entity['bottom'] = verify;
            report = update.wrapper;
            entity['style'] = report;
            oscard = _closure1_slot6;
            report = {};
            offset = update.content;
            option = new Array(2);
            option[0] = offset;
            offset = update.contentEndCard;
            option[1] = offset;
            report['style'] = option;
            yankee = _closure1_slot7;
            offset = _closure1_slot1;
            option = 16;
            option = backup[option];
            offset = offset.bind(tangon)(option);
            option = {};
            option['onClose'] = romeon;
            romeon = update.header;
            option['style'] = romeon;
            offset = yankee.bind(tangon)(offset, option);
            option = new Array(3);
            option[0] = offset;
            offset = null;
            offset = offset != output;
            if(!offset) { _fun00002_ip = 631; continue _fun00001 }
 565:
            backup = _closure1_slot7;
            romeon = _closure1_slot1;
            kiloes = _closure1_slot2;
            yankee = 17;
            yankee = kiloes[yankee];
            romeon = romeon.bind(tangon)(yankee);
            yankee = {};
            kiloes = update.image;
            yankee['style'] = kiloes;
            kiloes = {};
            output = output.url;
            kiloes['uri'] = output;
            yankee['source'] = kiloes;
            kiloes = 'cover';
            yankee['resizeMode'] = kiloes;
            offset = backup.bind(tangon)(romeon, yankee);
 631:
            option[1] = offset;
            backup = _closure1_slot8;
            romeon = _closure1_slot0;
            output = _closure1_slot2;
            offset = 18;
            offset = output[offset];
            offset = romeon.bind(tangon)(offset);
            vacuum = offset.ButtonGroup;
            offset = {};
            yankee = 'horizontal';
            offset['direction'] = yankee;
            yankee = update.ctas;
            offset['style'] = yankee;
            yankee = _closure1_slot7;
            kiloes = 19;
            kiloes = output[kiloes];
            kiloes = romeon.bind(tangon)(kiloes);
            result = kiloes.Button;
            kiloes = {};
            kiloes['grow'] = verify;
            kiloes['onPress'] = config;
            config = 9;
            config = output[config];
            record = romeon.bind(tangon)(config);
            config = record.getVideoQuestEndCardCtaText;
            sequen = sequen.config;
            sequen = config.bind(record)(sequen);
            kiloes['text'] = sequen;
            sequen = 'secondary';
            kiloes['variant'] = sequen;
            kiloes = yankee.bind(tangon)(result, kiloes);
            sequen = new Array(2);
            sequen[0] = kiloes;
            kiloes = 20;
            kiloes = output[kiloes];
            kiloes = romeon.bind(tangon)(kiloes);
            record = kiloes.IconButton;
            config = {};
            result = 21;
            kiloes = output[result];
            kiloes = romeon.bind(tangon)(kiloes);
            target = kiloes.intl;
            papara = target.string;
            kiloes = output[result];
            kiloes = romeon.bind(tangon)(kiloes);
            kiloes = kiloes.t;
            kiloes = kiloes.YsCuyM;
            kiloes = papara.bind(target)(kiloes);
            config['accessibilityLabel'] = kiloes;
            kiloes = _closure1_slot1;
            papara = 22;
            papara = output[papara];
            papara = kiloes.bind(tangon)(papara);
            config['icon'] = papara;
            config['onPress'] = cntext;
            cntext = 'tertiary';
            config['variant'] = cntext;
            config = yankee.bind(tangon)(record, config);
            sequen[1] = config;
            offset['children'] = sequen;
            offset = backup.bind(tangon)(vacuum, offset);
            option[2] = offset;
            report['children'] = option;
            oscard = zuuluu.bind(tangon)(oscard, report);
            report = new Array(3);
            report[0] = oscard;
            oscard = 23;
            oscard = output[oscard];
            offset = kiloes.bind(tangon)(oscard);
            oscard = {};
            vacuum = update.contentRewardsAnimatedWrapper;
            option = new Array(2);
            option[0] = vacuum;
            option[1] = foxtra;
            oscard['style'] = option;
            option = 24;
            option = output[option];
            option = romeon.bind(tangon)(option);
            foxtra = option.Stack;
            romeon = {'align': 'center', 'justify': 'center'};
            option = 5;
            option = output[option];
            option = kiloes.bind(tangon)(option);
            option = option.spacing;
            option = option.PX_24;
            romeon['spacing'] = option;
            kiloes = update.content;
            option = new Array(2);
            option[0] = kiloes;
            kiloes = update.contentRewardsWrapper;
            option[1] = kiloes;
            romeon['style'] = option;
            kiloes = _closure1_slot7;
            if(golfie) { _fun00002_ip = 1081; continue _fun00001 }
 1049:
            option = _closure1_slot1;
            golfie = _closure1_slot2;
            golfie = golfie[sizing];
            option = option.bind(tangon)(golfie);
            golfie = {};
            golfie['withRewardName'] = verify;
            golfie = kiloes.bind(tangon)(option, golfie);
            _fun00002_ip = 1093; continue _fun00001;
 1081:
            verify = _closure1_slot5;
            option = {};
            golfie = kiloes.bind(tangon)(verify, option);
 1093:
            kiloes = new Array(2);
            kiloes[0] = golfie;
            option = _closure1_slot7;
            golfie = _closure1_slot1;
            verify = _closure1_slot2;
            sizing = 26;
            sizing = verify[sizing];
            output = golfie.bind(tangon)(sizing);
            sizing = {};
            sizing['loading'] = ctrled;
            sizing['onPress'] = source;
            update = update.ctaPrimary;
            sizing['style'] = update;
            source = _closure1_slot0;
            echoed = verify[result];
            echoed = source.bind(tangon)(echoed);
            update = echoed.intl;
            echoed = update.string;
            result = verify[result];
            result = source.bind(tangon)(result);
            result = result.t;
            result = result.cfY4PD;
            result = echoed.bind(update)(result);
            sizing['text'] = result;
            sizing = option.bind(tangon)(output, sizing);
            kiloes[1] = sizing;
            romeon['children'] = kiloes;
            romeon = backup.bind(tangon)(foxtra, romeon);
            oscard['children'] = romeon;
            oscard = yankee.bind(tangon)(offset, oscard);
            report[1] = oscard;
            oscard = 27;
            oscard = verify[oscard];
            golfie = golfie.bind(tangon)(oscard);
            oscard = {};
            oscard = option.bind(tangon)(golfie, oscard);
            report[2] = oscard;
            entity['children'] = report;
            entity = zuuluu.bind(tangon)(michal, entity);
            return entity;
        }
    };
    zuuluu['default'] = michal;
    return entity;
})();