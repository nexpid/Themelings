// app/modules/quests/native/VideoQuestModal/VideoQuestModalContentCompleted.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    report = argBar;
    yankee = argBaz;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    var _closure1_slot1 = yankee;
    var _closure1_slot2 = oscard;
    entity = global;
    option = entity.Object;
    golfie = option.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(option)(zuuluu, entity, tangon);
    foxtra = 0;
    tangon = oscard[foxtra];
    entity = undefined;
    tangon = yankee.bind(entity)(tangon);
    var _closure1_slot3 = tangon;
    romeon = 1;
    golfie = oscard[romeon];
    tangon = argCor;
    tangon = tangon.bind(entity)(golfie);
    var _closure1_slot4 = tangon;
    tangon = 2;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    golfie = tangon.ActivityIndicator;
    var _closure1_slot5 = golfie;
    golfie = tangon.View;
    var _closure1_slot6 = golfie;
    backup = tangon.StyleSheet;
    tangon = 3;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    golfie = tangon.jsx;
    var _closure1_slot7 = golfie;
    tangon = tangon.jsxs;
    var _closure1_slot8 = tangon;
    tangon = 4;
    tangon = oscard[tangon];
    option = report.bind(entity)(tangon);
    golfie = option.createStyles;
    tangon = {};
    verify = {};
    verify['flex'] = romeon;
    tangon['wrapper'] = verify;
    verify = {};
    offset = 210;
    verify['height'] = offset;
    offset = 5;
    kiloes = oscard[offset];
    kiloes = yankee.bind(entity)(kiloes);
    kiloes = kiloes.spacing;
    kiloes = kiloes.PX_24;
    verify['marginBottom'] = kiloes;
    tangon['imageContainer'] = verify;
    verify = {};
    output = backup.absoluteFillObject;
    result = verify;
    backup = copyDataProperties(result, output);
    backup = oscard[offset];
    backup = yankee.bind(entity)(backup);
    backup = backup.radii;
    kiloes = backup.xl;
    backup = 'borderRadius';
    verify[backup] = kiloes;
    tangon['image'] = verify;
    verify = {};
    backup = oscard[offset];
    backup = yankee.bind(entity)(backup);
    backup = backup.spacing;
    backup = backup.PX_16;
    verify['marginBottom'] = backup;
    tangon['header'] = verify;
    verify = {};
    verify['paddingVertical'] = foxtra;
    tangon['ctas'] = verify;
    verify = {};
    foxtra = oscard[offset];
    foxtra = yankee.bind(entity)(foxtra);
    foxtra = foxtra.spacing;
    foxtra = foxtra.PX_16;
    verify['padding'] = foxtra;
    tangon['content'] = verify;
    verify = {};
    verify['borderBottomWidth'] = romeon;
    romeon = oscard[offset];
    romeon = yankee.bind(entity)(romeon);
    romeon = romeon.colors;
    romeon = romeon.BORDER_SUBTLE;
    verify['borderBottomColor'] = romeon;
    romeon = oscard[offset];
    romeon = yankee.bind(entity)(romeon);
    romeon = romeon.spacing;
    romeon = romeon.PX_24;
    verify['paddingBottom'] = romeon;
    tangon['contentEndCard'] = verify;
    verify = {};
    romeon = oscard[offset];
    romeon = yankee.bind(entity)(romeon);
    romeon = romeon.spacing;
    romeon = romeon.PX_24;
    verify['paddingTop'] = romeon;
    tangon['contentRewardsWrapper'] = verify;
    verify = {};
    offset = oscard[offset];
    offset = yankee.bind(entity)(offset);
    offset = offset.radii;
    offset = offset.round;
    verify['borderRadius'] = offset;
    tangon['ctaPrimary'] = verify;
    tangon = golfie.bind(option)(tangon);
    var _closure1_slot9 = tangon;
    tangon = 25;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/quests/native/VideoQuestModal/VideoQuestModalContentCompleted.tsx';
    tangon = report.bind(oscard)(tangon);
    michal = function(argFoo) { // Original name: VideoQuestModalContentCompleted
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            michal = argFoo;
            yankee = michal.onClose;
            var _closure2_slot0 = yankee;
            sequen = michal.onRestartVideo;
            michal = _closure1_slot9;
            tangon = undefined;
            output = michal.bind(tangon)();
            michal = _closure1_slot0;
            romeon = _closure1_slot2;
            zuuluu = 6;
            zuuluu = romeon[zuuluu];
            report = michal.bind(tangon)(zuuluu);
            zuuluu = report.useVideoQuestModalContext;
            zuuluu = zuuluu.bind(report)();
            source = zuuluu.quest;
            var _closure2_slot1 = source;
            oscard = _closure1_slot4;
            golfie = oscard.useMemo;
            report = new Array(1);
            report[0] = source;
            zuuluu = function() {
                report = _closure1_slot0;
                oscard = _closure1_slot2;
                entity = 7;
                zuuluu = oscard[entity];
                michal = undefined;
                tangon = report.bind(michal)(zuuluu);
                zuuluu = tangon.resolveVideoQuestAsset;
                entity = oscard[entity];
                entity = report.bind(michal)(entity);
                entity = entity.VideoQuestAssetId;
                michal = entity.VIDEO_PLAYER_THUMBNAIL;
                entity = _closure2_slot1;
                entity = zuuluu.bind(tangon)(michal, entity);
                return entity;
            };
            update = golfie.bind(oscard)(zuuluu, report);
            zuuluu = 8;
            zuuluu = romeon[zuuluu];
            report = michal.bind(tangon)(zuuluu);
            zuuluu = report.useQuestImpressionId;
            zuuluu = zuuluu.bind(report)();
            var _closure2_slot2 = zuuluu;
            golfie = oscard.useCallback;
            report = new Array(2);
            report[0] = source;
            report[1] = zuuluu;
            zuuluu = function() {
                option = _closure1_slot0;
                verify = _closure1_slot2;
                entity = 9;
                michal = verify[entity];
                entity = undefined;
                report = option.bind(entity)(michal);
                tangon = report.openGameLink;
                zuuluu = _closure2_slot1;
                michal = {};
                golfie = 10;
                golfie = verify[golfie];
                golfie = option.bind(entity)(golfie);
                golfie = golfie.QuestContent;
                golfie = golfie.VIDEO_MODAL_MOBILE;
                michal['content'] = golfie;
                golfie = 11;
                golfie = verify[golfie];
                golfie = option.bind(entity)(golfie);
                golfie = golfie.QuestContentCTA;
                golfie = golfie.OPEN_GAME_LINK;
                michal['ctaContent'] = golfie;
                oscard = _closure2_slot2;
                michal['impressionId'] = oscard;
                michal = tangon.bind(report)(zuuluu, michal);
                return entity;
            };
            ctrled = golfie.bind(oscard)(zuuluu, report);
            zuuluu = 12;
            zuuluu = romeon[zuuluu];
            golfie = michal.bind(tangon)(zuuluu);
            report = golfie.useQuestRewardClaimHandler;
            zuuluu = {};
            zuuluu['quest'] = source;
            zuuluu = report.bind(golfie)(zuuluu);
            golfie = zuuluu.isLoading;
            echoed = zuuluu.isClaiming;
            option = zuuluu.claim;
            var _closure2_slot3 = option;
            report = oscard.useCallback;
            zuuluu = _closure1_slot3;
            entity = function* () {
                entity = function* () { // Original name: ?anon_0_
                    _fun00003: for(var _fun00004_ip = 0; ; ) switch(_fun00004_ip) {
 0:
                        StartGenerator();
                        ResumeGenerator(result_out_reg=0, return_bool_out_reg=1);
                        if(michal) { _fun00004_ip = 47; continue _fun00003 }
 7:
                        michal = _closure2_slot3;
                        zuuluu = undefined;
                        michal = michal.bind(zuuluu)();
                        SaveGenerator(address=24);
 22:
                        return michal;
 24:
                        ResumeGenerator(result_out_reg=1, return_bool_out_reg=4);
                        if(report) { _fun00004_ip = 44; continue _fun00003 }
 30:
                        if(!michal) { _fun00004_ip = 41; continue _fun00003 }
 33:
                        tangon = _closure2_slot0;
                        tangon = tangon.bind(zuuluu)();
 41:
                        return zuuluu;
 44:
                        return michal;
 47:
                        return entity;
                    }
                };
                return entity;
            };
            zuuluu = zuuluu.bind(tangon)(entity);
            entity = new Array(2);
            entity[0] = option;
            entity[1] = yankee;
            result = report.bind(oscard)(zuuluu, entity);
            zuuluu = _closure1_slot8;
            entity = 13;
            entity = romeon[entity];
            entity = michal.bind(tangon)(entity);
            michal = entity.SafeAreaPaddingView;
            entity = {};
            vacuum = true;
            entity['bottom'] = vacuum;
            report = output.wrapper;
            entity['style'] = report;
            oscard = _closure1_slot6;
            report = {};
            verify = output.content;
            option = new Array(2);
            option[0] = verify;
            verify = output.contentEndCard;
            option[1] = verify;
            report['style'] = option;
            offset = _closure1_slot7;
            verify = _closure1_slot1;
            option = 14;
            option = romeon[option];
            verify = verify.bind(tangon)(option);
            option = {};
            option['onClose'] = yankee;
            yankee = output.header;
            option['style'] = yankee;
            option = offset.bind(tangon)(verify, option);
            offset = new Array(3);
            offset[0] = option;
            option = null;
            option = option != update;
            if(!option) { _fun00002_ip = 476; continue _fun00001 }
 383:
            romeon = _closure1_slot7;
            yankee = _closure1_slot6;
            verify = {};
            foxtra = output.imageContainer;
            verify['style'] = foxtra;
            backup = _closure1_slot1;
            kiloes = _closure1_slot2;
            foxtra = 15;
            foxtra = kiloes[foxtra];
            backup = backup.bind(tangon)(foxtra);
            foxtra = {};
            kiloes = output.image;
            foxtra['style'] = kiloes;
            kiloes = {};
            update = update.url;
            kiloes['uri'] = update;
            foxtra['source'] = kiloes;
            kiloes = 'cover';
            foxtra['resizeMode'] = kiloes;
            foxtra = romeon.bind(tangon)(backup, foxtra);
            verify['children'] = foxtra;
            option = romeon.bind(tangon)(yankee, verify);
 476:
            offset[1] = option;
            yankee = _closure1_slot8;
            option = _closure1_slot0;
            foxtra = _closure1_slot2;
            verify = 16;
            verify = foxtra[verify];
            verify = option.bind(tangon)(verify);
            update = verify.ButtonGroup;
            backup = {};
            verify = 'horizontal';
            backup['direction'] = verify;
            verify = output.ctas;
            backup['style'] = verify;
            verify = _closure1_slot7;
            romeon = 17;
            romeon = foxtra[romeon];
            romeon = option.bind(tangon)(romeon);
            kiloes = romeon.Button;
            romeon = {};
            romeon['grow'] = vacuum;
            romeon['onPress'] = ctrled;
            ctrled = 9;
            ctrled = foxtra[ctrled];
            vacuum = option.bind(tangon)(ctrled);
            ctrled = vacuum.getVideoQuestEndCardCtaText;
            source = source.config;
            source = ctrled.bind(vacuum)(source);
            romeon['text'] = source;
            source = 'secondary';
            romeon['variant'] = source;
            romeon = verify.bind(tangon)(kiloes, romeon);
            source = new Array(2);
            source[0] = romeon;
            romeon = 18;
            romeon = foxtra[romeon];
            romeon = option.bind(tangon)(romeon);
            vacuum = romeon.IconButton;
            ctrled = {};
            kiloes = 19;
            romeon = foxtra[kiloes];
            romeon = option.bind(tangon)(romeon);
            record = romeon.intl;
            config = record.string;
            romeon = foxtra[kiloes];
            romeon = option.bind(tangon)(romeon);
            romeon = romeon.t;
            romeon = romeon.YsCuyM;
            romeon = config.bind(record)(romeon);
            ctrled['accessibilityLabel'] = romeon;
            romeon = _closure1_slot1;
            config = 20;
            config = foxtra[config];
            config = romeon.bind(tangon)(config);
            ctrled['icon'] = config;
            ctrled['onPress'] = sequen;
            sequen = 'tertiary';
            ctrled['variant'] = sequen;
            ctrled = verify.bind(tangon)(vacuum, ctrled);
            source[1] = ctrled;
            backup['children'] = source;
            backup = yankee.bind(tangon)(update, backup);
            offset[2] = backup;
            report['children'] = offset;
            oscard = zuuluu.bind(tangon)(oscard, report);
            report = new Array(3);
            report[0] = oscard;
            oscard = 21;
            oscard = foxtra[oscard];
            oscard = option.bind(tangon)(oscard);
            offset = oscard.Stack;
            oscard = {};
            option = 'center';
            oscard['align'] = option;
            option = 5;
            option = foxtra[option];
            option = romeon.bind(tangon)(option);
            option = option.spacing;
            option = option.PX_24;
            oscard['spacing'] = option;
            romeon = output.content;
            option = new Array(2);
            option[0] = romeon;
            romeon = output.contentRewardsWrapper;
            option[1] = romeon;
            oscard['style'] = option;
            if(golfie) { _fun00002_ip = 871; continue _fun00001 }
 849:
            option = _closure1_slot1;
            romeon = _closure1_slot2;
            golfie = 22;
            golfie = romeon[golfie];
            option = option.bind(tangon)(golfie);
            _fun00002_ip = 875; continue _fun00001;
 871:
            option = _closure1_slot5;
 875:
            golfie = {};
            golfie = verify.bind(tangon)(option, golfie);
            romeon = new Array(2);
            romeon[0] = golfie;
            option = _closure1_slot7;
            golfie = _closure1_slot1;
            verify = _closure1_slot2;
            foxtra = 23;
            foxtra = verify[foxtra];
            backup = golfie.bind(tangon)(foxtra);
            foxtra = {};
            foxtra['loading'] = echoed;
            foxtra['onPress'] = result;
            output = output.ctaPrimary;
            foxtra['style'] = output;
            result = _closure1_slot0;
            sizing = verify[kiloes];
            sizing = result.bind(tangon)(sizing);
            output = sizing.intl;
            sizing = output.string;
            kiloes = verify[kiloes];
            kiloes = result.bind(tangon)(kiloes);
            kiloes = kiloes.t;
            kiloes = kiloes.cfY4PD;
            kiloes = sizing.bind(output)(kiloes);
            foxtra['text'] = kiloes;
            foxtra = option.bind(tangon)(backup, foxtra);
            romeon[1] = foxtra;
            oscard['children'] = romeon;
            oscard = yankee.bind(tangon)(offset, oscard);
            report[1] = oscard;
            oscard = 24;
            oscard = verify[oscard];
            golfie = golfie.bind(tangon)(oscard);
            oscard = {};
            oscard = option.bind(tangon)(golfie, oscard);
            report[2] = oscard;
            entity['children'] = report;
            entity = zuuluu.bind(tangon)(michal, entity);
            return entity;
        }
    };
    zuuluu['default'] = michal;
    return entity;
})();