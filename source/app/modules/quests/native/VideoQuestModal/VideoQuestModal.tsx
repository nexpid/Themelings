// app/modules/quests/native/VideoQuestModal/VideoQuestModal.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    report = argBar;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    entity = argBaz;
    var _closure1_slot1 = entity;
    var _closure1_slot2 = oscard;
    entity = function(argFoo) { // Original name: WatchTaskWithSwipeGesture
        oscard = _closure1_slot3;
        report = oscard.useContext;
        michal = _closure1_slot0;
        yankee = _closure1_slot2;
        zuuluu = 2;
        zuuluu = yankee[zuuluu];
        tangon = undefined;
        zuuluu = michal.bind(tangon)(zuuluu);
        zuuluu = zuuluu.QuestDockGestureContext;
        zuuluu = report.bind(oscard)(zuuluu);
        report = zuuluu.windowDimensions;
        foxtra = 3;
        zuuluu = yankee[foxtra];
        golfie = michal.bind(tangon)(zuuluu);
        oscard = golfie.useSharedValue;
        zuuluu = 0;
        romeon = oscard.bind(golfie)(zuuluu);
        var _closure2_slot0 = romeon;
        zuuluu = report.get;
        zuuluu = zuuluu.bind(report)();
        golfie = zuuluu.height;
        zuuluu = 0.8;
        offset = zuuluu * golfie;
        var _closure2_slot1 = offset;
        verify = _closure1_slot1;
        zuuluu = 4;
        zuuluu = yankee[zuuluu];
        report = verify.bind(tangon)(zuuluu);
        zuuluu = {};
        oscard = true;
        zuuluu['gestureEnabled'] = oscard;
        zuuluu['height'] = golfie;
        zuuluu['maxTranslate'] = offset;
        oscard = 0.5;
        oscard = oscard * golfie;
        zuuluu['thresholdTranslate'] = oscard;
        zuuluu['translateY'] = romeon;
        report = report.bind(tangon)(zuuluu);
        zuuluu = yankee[foxtra];
        oscard = michal.bind(tangon)(zuuluu);
        zuuluu = oscard.useAnimatedStyle;
        entity = function() { // Original name: o
            entity = {};
            zuuluu = {};
            report = _closure1_slot0;
            tangon = _closure1_slot2;
            michal = 3;
            tangon = tangon[michal];
            michal = undefined;
            golfie = report.bind(michal)(tangon);
            oscard = golfie.interpolate;
            report = _closure2_slot0;
            tangon = report.get;
            report = tangon.bind(report)();
            option = _closure2_slot1;
            tangon = [0];
            tangon[1] = option;
            michal = [0];
            michal[1] = option;
            michal = oscard.bind(golfie)(report, tangon, michal);
            zuuluu['translateY'] = michal;
            michal = new Array(1);
            michal[0] = zuuluu;
            entity['transform'] = michal;
            return entity;
        };
        golfie = {};
        foxtra = yankee[foxtra];
        foxtra = michal.bind(tangon)(foxtra);
        foxtra = foxtra.interpolate;
        golfie['interpolate'] = foxtra;
        golfie['translateY'] = romeon;
        golfie['maxVerticalTranslate'] = offset;
        entity['__closure'] = golfie;
        golfie = 10882296861392.0;
        entity['__workletHash'] = golfie;
        golfie = _closure1_slot5;
        entity['__initData'] = golfie;
        offset = zuuluu.bind(oscard)(entity);
        zuuluu = _closure1_slot4;
        entity = 5;
        entity = yankee[entity];
        entity = michal.bind(tangon)(entity);
        michal = entity.GestureDetector;
        entity = {};
        entity['gesture'] = report;
        golfie = _closure1_slot4;
        report = 6;
        report = yankee[report];
        oscard = verify.bind(tangon)(report);
        report = {};
        report['style'] = offset;
        offset = _closure1_slot4;
        option = 7;
        option = yankee[option];
        verify = verify.bind(tangon)(option);
        option = {};
        backup = argFoo;
        kiloes = option;
        yankee = copyDataProperties(kiloes, backup);
        option = offset.bind(tangon)(verify, option);
        report['children'] = option;
        report = golfie.bind(tangon)(oscard, report);
        entity['children'] = report;
        entity = zuuluu.bind(tangon)(michal, entity);
        return entity;
    };
    var _closure1_slot7 = entity;
    entity = global;
    option = entity.Object;
    golfie = option.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(option)(zuuluu, entity, tangon);
    entity = 0;
    golfie = oscard[entity];
    tangon = argCor;
    entity = undefined;
    tangon = tangon.bind(entity)(golfie);
    var _closure1_slot3 = tangon;
    tangon = 1;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.jsx;
    var _closure1_slot4 = tangon;
    tangon = {};
    golfie = 'function VideoQuestModalTsx1(){const{interpolate,translateY,maxVerticalTranslate}=this.__closure;return{transform:[{translateY:interpolate(translateY.get(),[0,maxVerticalTranslate],[0,maxVerticalTranslate])}]};}';
    tangon['code'] = golfie;
    var _closure1_slot5 = tangon;
    tangon = 8;
    tangon = oscard[tangon];
    option = report.bind(entity)(tangon);
    golfie = option.createStyles;
    tangon = {};
    verify = {};
    offset = 'transparent';
    verify['backgroundColor'] = offset;
    tangon['transparentBackground'] = verify;
    tangon = golfie.bind(option)(tangon);
    var _closure1_slot6 = tangon;
    tangon = 10;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/quests/native/VideoQuestModal/VideoQuestModal.tsx';
    tangon = report.bind(oscard)(tangon);
    michal = function(argFoo) { // Original name: VideoQuestModal
        entity = argFoo;
        option = entity.onClose;
        var _closure2_slot0 = option;
        zuuluu = _closure1_slot6;
        tangon = undefined;
        report = zuuluu.bind(tangon)();
        golfie = _closure1_slot3;
        oscard = golfie.useMemo;
        zuuluu = new Array(1);
        zuuluu[0] = option;
        michal = function() {
            entity = {};
            zuuluu = {};
            tangon = true;
            zuuluu['fullscreen'] = tangon;
            tangon = function() { // Original name: headerLeft
                entity = null;
                return entity;
            };
            zuuluu['headerLeft'] = tangon;
            michal = function() { // Original name: render
                tangon = _closure1_slot4;
                michal = _closure1_slot0;
                zuuluu = _closure1_slot2;
                entity = 2;
                entity = zuuluu[entity];
                zuuluu = undefined;
                entity = michal.bind(zuuluu)(entity);
                michal = entity.QuestDockGestureContextProvider;
                entity = {};
                golfie = _closure1_slot4;
                oscard = _closure1_slot7;
                report = {'fullHeight': true, 'paddingTop': 0, 'paddingBottom': 0};
                option = _closure2_slot0;
                report['onClose'] = option;
                report = golfie.bind(zuuluu)(oscard, report);
                entity['children'] = report;
                entity = tangon.bind(zuuluu)(michal, entity);
                return entity;
            };
            zuuluu['render'] = michal;
            michal = 'watch_mobile_video_quest';
            entity[michal] = zuuluu;
            return entity;
        };
        oscard = oscard.bind(golfie)(michal, zuuluu);
        zuuluu = _closure1_slot4;
        michal = _closure1_slot0;
        golfie = _closure1_slot2;
        entity = 9;
        entity = golfie[entity];
        entity = michal.bind(tangon)(entity);
        michal = entity.Modal;
        entity = {'hideTitle': true, 'initialRouteName': 'watch_mobile_video_quest'};
        entity['screens'] = oscard;
        oscard = report.transparentBackground;
        entity['viewStyle'] = oscard;
        report = report.transparentBackground;
        entity['containerStyle'] = report;
        entity = zuuluu.bind(tangon)(michal, entity);
        return entity;
    };
    zuuluu['default'] = michal;
    return entity;
})();