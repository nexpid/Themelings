// app/modules/quests/native/VideoQuestModal/VideoQuestModal.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    report = argBar;
    backup = argBaz;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    var _closure1_slot1 = backup;
    var _closure1_slot2 = oscard;
    entity = function(argFoo) { // Original name: VideoQuestModalContent
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            michal = argFoo;
            update = michal.onClose;
            zuuluu = _closure1_slot0;
            tangon = _closure1_slot2;
            michal = 5;
            michal = tangon[michal];
            tangon = undefined;
            zuuluu = zuuluu.bind(tangon)(michal);
            michal = zuuluu.useVideoQuestModalContext;
            michal = michal.bind(zuuluu)();
            michal = michal.quest;
            report = michal.userStatus;
            zuuluu = null;
            oscard = zuuluu == report;
            michal = undefined;
            if(oscard) { _fun00002_ip = 75; continue _fun00001 }
 69:
            michal = report.completedAt;
 75:
            michal = zuuluu != michal;
            var _closure2_slot0 = michal;
            oscard = _closure1_slot4;
            report = oscard.useState;
            golfie = _closure1_slot8;
            if(michal) { _fun00002_ip = 107; continue _fun00001 }
 99:
            zuuluu = golfie.WATCH_VIDEO;
            _fun00002_ip = 113; continue _fun00001;
 107:
            zuuluu = golfie.POST_WATCH_VIDEO;
 113:
            oscard = report.bind(oscard)(zuuluu);
            report = _closure1_slot3;
            zuuluu = 2;
            report = report.bind(tangon)(oscard, zuuluu);
            golfie = 0;
            output = report[golfie];
            zuuluu = 1;
            zuuluu = report[zuuluu];
            var _closure2_slot1 = zuuluu;
            oscard = _closure1_slot4;
            report = oscard.useContext;
            romeon = _closure1_slot0;
            result = _closure1_slot2;
            zuuluu = 6;
            zuuluu = result[zuuluu];
            zuuluu = romeon.bind(tangon)(zuuluu);
            zuuluu = zuuluu.QuestDockGestureContext;
            zuuluu = report.bind(oscard)(zuuluu);
            report = zuuluu.windowDimensions;
            zuuluu = _closure1_slot7;
            backup = zuuluu.bind(tangon)();
            foxtra = 7;
            zuuluu = result[foxtra];
            oscard = romeon.bind(tangon)(zuuluu);
            zuuluu = oscard.useSharedValue;
            yankee = zuuluu.bind(oscard)(golfie);
            var _closure2_slot2 = yankee;
            oscard = _closure1_slot1;
            zuuluu = 8;
            zuuluu = result[zuuluu];
            zuuluu = oscard.bind(tangon)(zuuluu);
            zuuluu = zuuluu.bind(tangon)(report);
            source = zuuluu.height;
            zuuluu = 0.8;
            offset = zuuluu * source;
            var _closure2_slot3 = offset;
            zuuluu = 9;
            zuuluu = result[zuuluu];
            report = oscard.bind(tangon)(zuuluu);
            zuuluu = {};
            kiloes = true;
            zuuluu['gestureEnabled'] = kiloes;
            zuuluu['height'] = source;
            zuuluu['maxTranslate'] = offset;
            golfie = 0.5;
            golfie = golfie * source;
            zuuluu['thresholdTranslate'] = golfie;
            zuuluu['translateY'] = yankee;
            report = report.bind(tangon)(zuuluu);
            zuuluu = result[foxtra];
            option = romeon.bind(tangon)(zuuluu);
            golfie = option.useAnimatedStyle;
            zuuluu = function() { // Original name: T
                entity = {};
                zuuluu = {};
                report = _closure1_slot0;
                tangon = _closure1_slot2;
                michal = 7;
                tangon = tangon[michal];
                michal = undefined;
                golfie = report.bind(michal)(tangon);
                oscard = golfie.interpolate;
                report = _closure2_slot2;
                tangon = report.get;
                report = tangon.bind(report)();
                option = _closure2_slot3;
                tangon = [0];
                tangon[1] = option;
                option = _closure2_slot3;
                michal = [0];
                michal[1] = option;
                michal = oscard.bind(golfie)(report, tangon, michal);
                zuuluu['translateY'] = michal;
                michal = new Array(1);
                michal[0] = zuuluu;
                entity['transform'] = michal;
                return entity;
            };
            verify = {};
            foxtra = result[foxtra];
            foxtra = romeon.bind(tangon)(foxtra);
            foxtra = foxtra.interpolate;
            verify['interpolate'] = foxtra;
            verify['translateY'] = yankee;
            verify['maxVerticalTranslate'] = offset;
            zuuluu['__closure'] = verify;
            verify = 10882296861392.0;
            zuuluu['__workletHash'] = verify;
            verify = _closure1_slot9;
            zuuluu['__initData'] = verify;
            option = golfie.bind(option)(zuuluu);
            verify = _closure1_slot4;
            golfie = verify.useLayoutEffect;
            zuuluu = new Array(1);
            zuuluu[0] = michal;
            michal = function() {
                _fun00003: for(var _fun00004_ip = 0; ; ) switch(_fun00004_ip) {
 0:
                    michal = _closure2_slot0;
                    if(!michal) { _fun00004_ip = 34; continue _fun00003 }
 10:
                    zuuluu = _closure2_slot1;
                    entity = _closure1_slot8;
                    michal = entity.POST_WATCH_VIDEO;
                    entity = undefined;
                    entity = zuuluu.bind(entity)(michal);
 34:
                    entity = undefined;
                    return entity;
                }
            };
            michal = golfie.bind(verify)(michal, zuuluu);
            verify = _closure1_slot4;
            golfie = verify.useCallback;
            zuuluu = function() {
                zuuluu = _closure2_slot1;
                entity = _closure1_slot8;
                michal = entity.WATCH_VIDEO;
                entity = undefined;
                michal = zuuluu.bind(entity)(michal);
                return entity;
            };
            michal = new Array(0);
            echoed = golfie.bind(verify)(zuuluu, michal);
            golfie = _closure1_slot4;
            zuuluu = golfie.useCallback;
            michal = function() {
                zuuluu = _closure2_slot1;
                entity = _closure1_slot8;
                michal = entity.POST_WATCH_VIDEO;
                entity = undefined;
                michal = zuuluu.bind(entity)(michal);
                return entity;
            };
            entity = new Array(0);
            ctrled = zuuluu.bind(golfie)(michal, entity);
            zuuluu = _closure1_slot5;
            entity = 10;
            entity = result[entity];
            entity = romeon.bind(tangon)(entity);
            michal = entity.GestureDetector;
            entity = {};
            entity['gesture'] = report;
            golfie = _closure1_slot5;
            report = 11;
            report = result[report];
            oscard = oscard.bind(tangon)(report);
            report = {};
            report['style'] = option;
            offset = _closure1_slot5;
            yankee = 12;
            option = result[yankee];
            option = romeon.bind(tangon)(option);
            verify = option.SafeAreaPaddingView;
            option = {};
            option['top'] = kiloes;
            foxtra = {};
            foxtra['height'] = source;
            option['style'] = foxtra;
            foxtra = _closure1_slot6;
            yankee = result[yankee];
            yankee = romeon.bind(tangon)(yankee);
            romeon = yankee.SafeAreaPaddingView;
            yankee = {};
            yankee['bottom'] = kiloes;
            backup = backup.wrapper;
            yankee['style'] = backup;
            backup = _closure1_slot8;
            backup = backup.WATCH_VIDEO;
            kiloes = output === backup;
            if(!kiloes) { _fun00002_ip = 689; continue _fun00001 }
 647:
            source = _closure1_slot5;
            result = _closure1_slot1;
            vacuum = _closure1_slot2;
            backup = 13;
            backup = vacuum[backup];
            result = result.bind(tangon)(backup);
            backup = {};
            backup['onNavigateToPostWatchVideo'] = ctrled;
            backup['onClose'] = update;
            kiloes = source.bind(tangon)(result, backup);
 689:
            backup = new Array(2);
            backup[0] = kiloes;
            kiloes = _closure1_slot8;
            kiloes = kiloes.POST_WATCH_VIDEO;
            kiloes = output === kiloes;
            if(!kiloes) { _fun00002_ip = 756; continue _fun00001 }
 714:
            result = _closure1_slot5;
            output = _closure1_slot1;
            source = _closure1_slot2;
            sizing = 14;
            sizing = source[sizing];
            output = output.bind(tangon)(sizing);
            sizing = {};
            sizing['onClose'] = update;
            sizing['onRestartVideo'] = echoed;
            kiloes = result.bind(tangon)(output, sizing);
 756:
            backup[1] = kiloes;
            yankee['children'] = backup;
            yankee = foxtra.bind(tangon)(romeon, yankee);
            option['children'] = yankee;
            option = offset.bind(tangon)(verify, option);
            report['children'] = option;
            report = golfie.bind(tangon)(oscard, report);
            entity['children'] = report;
            entity = zuuluu.bind(tangon)(michal, entity);
            return entity;
        }
    };
    var _closure1_slot12 = entity;
    entity = global;
    option = entity.Object;
    golfie = option.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(option)(zuuluu, entity, tangon);
    offset = 0;
    tangon = oscard[offset];
    entity = undefined;
    tangon = backup.bind(entity)(tangon);
    var _closure1_slot3 = tangon;
    verify = 1;
    golfie = oscard[verify];
    tangon = argCor;
    tangon = tangon.bind(entity)(golfie);
    var _closure1_slot4 = tangon;
    tangon = 2;
    golfie = oscard[tangon];
    golfie = report.bind(entity)(golfie);
    golfie = golfie.jsx;
    var _closure1_slot5 = golfie;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.jsxs;
    var _closure1_slot6 = tangon;
    tangon = 3;
    golfie = oscard[tangon];
    yankee = report.bind(entity)(golfie);
    option = yankee.createStyles;
    golfie = {};
    romeon = {'backgroundColor': null, 'borderRadius': null, 'flexDirection': 'column', 'flexGrow': 1, 'flexShrink': 1};
    foxtra = 4;
    kiloes = oscard[foxtra];
    kiloes = backup.bind(entity)(kiloes);
    kiloes = kiloes.colors;
    kiloes = kiloes.BG_BASE_TERTIARY;
    romeon['backgroundColor'] = kiloes;
    foxtra = oscard[foxtra];
    foxtra = backup.bind(entity)(foxtra);
    foxtra = foxtra.radii;
    foxtra = foxtra.lg;
    romeon['borderRadius'] = foxtra;
    golfie['wrapper'] = romeon;
    golfie = option.bind(yankee)(golfie);
    var _closure1_slot7 = golfie;
    golfie = {};
    golfie['WATCH_VIDEO'] = offset;
    option = 'WATCH_VIDEO';
    golfie[offset] = option;
    golfie['POST_WATCH_VIDEO'] = verify;
    option = 'POST_WATCH_VIDEO';
    golfie[verify] = option;
    var _closure1_slot8 = golfie;
    golfie = {};
    option = 'function VideoQuestModalTsx1(){const{interpolate,translateY,maxVerticalTranslate}=this.__closure;return{transform:[{translateY:interpolate(translateY.get(),[0,maxVerticalTranslate],[0,maxVerticalTranslate])}]};}';
    golfie['code'] = option;
    var _closure1_slot9 = golfie;
    golfie = 'watch_mobile_video_quest';
    var _closure1_slot10 = golfie;
    tangon = oscard[tangon];
    option = report.bind(entity)(tangon);
    golfie = option.createStyles;
    tangon = {};
    verify = {};
    offset = 'transparent';
    verify['backgroundColor'] = offset;
    tangon['transparentBackground'] = verify;
    tangon = golfie.bind(option)(tangon);
    var _closure1_slot11 = tangon;
    tangon = 19;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/quests/native/VideoQuestModal/VideoQuestModal.tsx';
    tangon = report.bind(oscard)(tangon);
    michal = function(argFoo) { // Original name: VideoQuestModal
        michal = argFoo;
        verify = michal.questId;
        offset = michal.questContentPosition;
        var _closure2_slot0 = offset;
        foxtra = michal.onClose;
        var _closure2_slot1 = foxtra;
        yankee = michal.videoSessionId;
        var _closure2_slot2 = yankee;
        michal = _closure1_slot11;
        tangon = undefined;
        report = michal.bind(tangon)();
        michal = _closure1_slot0;
        option = _closure1_slot2;
        zuuluu = 15;
        zuuluu = option[zuuluu];
        oscard = michal.bind(tangon)(zuuluu);
        zuuluu = oscard.useNonNullableQuest;
        romeon = zuuluu.bind(oscard)(verify);
        var _closure2_slot3 = romeon;
        verify = _closure1_slot4;
        oscard = verify.useMemo;
        zuuluu = new Array(4);
        zuuluu[0] = foxtra;
        zuuluu[1] = romeon;
        zuuluu[2] = yankee;
        zuuluu[3] = offset;
        entity = function() {
            entity = {};
            zuuluu = _closure1_slot10;
            michal = {};
            report = true;
            michal['fullscreen'] = report;
            report = function() { // Original name: headerLeft
                entity = null;
                return entity;
            };
            michal['headerLeft'] = report;
            tangon = function() { // Original name: render
                tangon = _closure1_slot5;
                michal = _closure1_slot1;
                kiloes = _closure1_slot2;
                entity = 5;
                entity = kiloes[entity];
                zuuluu = undefined;
                entity = michal.bind(zuuluu)(entity);
                michal = entity.Provider;
                entity = {};
                report = {};
                romeon = _closure2_slot3;
                report['quest'] = romeon;
                oscard = _closure2_slot2;
                report['videoSessionId'] = oscard;
                entity['value'] = report;
                golfie = _closure1_slot5;
                backup = _closure1_slot0;
                report = 6;
                report = kiloes[report];
                report = backup.bind(zuuluu)(report);
                oscard = report.QuestDockGestureContextProvider;
                report = {};
                offset = _closure1_slot5;
                option = 16;
                option = kiloes[option];
                option = backup.bind(zuuluu)(option);
                verify = option.QuestContentImpressionTrackerNative;
                option = {};
                foxtra = true;
                option['overrideVisibility'] = foxtra;
                foxtra = 17;
                foxtra = kiloes[foxtra];
                foxtra = backup.bind(zuuluu)(foxtra);
                foxtra = foxtra.QuestContent;
                foxtra = foxtra.VIDEO_MODAL_MOBILE;
                option['questContent'] = foxtra;
                option['questOrQuests'] = romeon;
                yankee = _closure2_slot0;
                option['questContentPosition'] = yankee;
                yankee = function() { // Original name: children
                    tangon = _closure1_slot5;
                    zuuluu = _closure1_slot12;
                    michal = {};
                    entity = _closure2_slot1;
                    michal['onClose'] = entity;
                    entity = undefined;
                    entity = tangon.bind(entity)(zuuluu, michal);
                    return entity;
                };
                option['children'] = yankee;
                option = offset.bind(zuuluu)(verify, option);
                report['children'] = option;
                report = golfie.bind(zuuluu)(oscard, report);
                entity['children'] = report;
                entity = tangon.bind(zuuluu)(michal, entity);
                return entity;
            };
            michal['render'] = tangon;
            entity[zuuluu] = michal;
            return entity;
        };
        oscard = oscard.bind(verify)(entity, zuuluu);
        zuuluu = _closure1_slot5;
        entity = 18;
        entity = option[entity];
        entity = michal.bind(tangon)(entity);
        michal = entity.Modal;
        entity = {};
        option = true;
        entity['hideTitle'] = option;
        golfie = _closure1_slot10;
        entity['initialRouteName'] = golfie;
        entity['screens'] = oscard;
        oscard = report.transparentBackground;
        entity['viewStyle'] = oscard;
        report = report.transparentBackground;
        entity['containerStyle'] = report;
        entity = zuuluu.bind(tangon)(michal, entity);
        return entity;
    };
    zuuluu['default'] = michal;
    return entity;
})();