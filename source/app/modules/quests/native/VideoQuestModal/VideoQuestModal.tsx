// app/modules/quests/native/VideoQuestModal/VideoQuestModal.tsx
export default (function(argFoo, argBar, argBaz, argCorge, _, argFred, argPlugh) {
    report = argBar;
    zulu = argFred;
    oscar = argPlugh;
    var _closure1_slot0 = report;
    entity = argBaz;
    var _closure1_slot1 = entity;
    var _closure1_slot2 = oscar;
    entity = function(argFoo) { // Original name: WatchTaskWithSwipeGesture
        oscar = _closure1_slot3;
        report = oscar.useContext;
        mike = _closure1_slot0;
        yankee = _closure1_slot2;
        zulu = 2;
        zulu = yankee[zulu];
        tango = undefined;
        zulu = mike.bind(tango)(zulu);
        zulu = zulu.QuestDockGestureContext;
        zulu = report.bind(oscar)(zulu);
        report = zulu.windowDimensions;
        foxtrot = 3;
        zulu = yankee[foxtrot];
        golf = mike.bind(tango)(zulu);
        oscar = golf.useSharedValue;
        zulu = 0;
        romeo = oscar.bind(golf)(zulu);
        var _closure2_slot0 = romeo;
        zulu = report.get;
        zulu = zulu.bind(report)();
        golf = zulu.height;
        zulu = 0.8;
        offset = zulu * golf;
        var _closure2_slot1 = offset;
        verify = _closure1_slot1;
        zulu = 4;
        zulu = yankee[zulu];
        report = verify.bind(tango)(zulu);
        zulu = {};
        oscar = true;
        zulu['gestureEnabled'] = oscar;
        zulu['height'] = golf;
        zulu['maxTranslate'] = offset;
        oscar = 0.5;
        oscar = oscar * golf;
        zulu['thresholdTranslate'] = oscar;
        zulu['translateY'] = romeo;
        report = report.bind(tango)(zulu);
        zulu = yankee[foxtrot];
        oscar = mike.bind(tango)(zulu);
        zulu = oscar.useAnimatedStyle;
        entity = function() { // Original name: o
            entity = {};
            zulu = {};
            report = _closure1_slot0;
            tango = _closure1_slot2;
            mike = 3;
            tango = tango[mike];
            mike = undefined;
            golf = report.bind(mike)(tango);
            oscar = golf.interpolate;
            report = _closure2_slot0;
            tango = report.get;
            report = tango.bind(report)();
            options = _closure2_slot1;
            tango = [0];
            tango[1] = options;
            mike = [0];
            mike[1] = options;
            mike = oscar.bind(golf)(report, tango, mike);
            zulu['translateY'] = mike;
            mike = new Array(1);
            mike[0] = zulu;
            entity['transform'] = mike;
            return entity;
        };
        golf = {};
        foxtrot = yankee[foxtrot];
        foxtrot = mike.bind(tango)(foxtrot);
        foxtrot = foxtrot.interpolate;
        golf['interpolate'] = foxtrot;
        golf['translateY'] = romeo;
        golf['maxVerticalTranslate'] = offset;
        entity['__closure'] = golf;
        golf = 10882296861392.0;
        entity['__workletHash'] = golf;
        golf = _closure1_slot5;
        entity['__initData'] = golf;
        offset = zulu.bind(oscar)(entity);
        zulu = _closure1_slot4;
        entity = 5;
        entity = yankee[entity];
        entity = mike.bind(tango)(entity);
        mike = entity.GestureDetector;
        entity = {};
        entity['gesture'] = report;
        golf = _closure1_slot4;
        report = 6;
        report = yankee[report];
        oscar = verify.bind(tango)(report);
        report = {};
        report['style'] = offset;
        offset = _closure1_slot4;
        options = 7;
        options = yankee[options];
        verify = verify.bind(tango)(options);
        options = {};
        backup = argFoo;
        kilo = options;
        yankee = copyDataProperties(kilo, backup);
        options = offset.bind(tango)(verify, options);
        report['children'] = options;
        report = golf.bind(tango)(oscar, report);
        entity['children'] = report;
        entity = zulu.bind(tango)(mike, entity);
        return entity;
    };
    var _closure1_slot7 = entity;
    entity = global;
    options = entity.Object;
    golf = options.defineProperty;
    tango = {};
    entity = true;
    tango['value'] = entity;
    entity = '__esModule';
    entity = golf.bind(options)(zulu, entity, tango);
    entity = 0;
    golf = oscar[entity];
    tango = argCorge;
    entity = undefined;
    tango = tango.bind(entity)(golf);
    var _closure1_slot3 = tango;
    tango = 1;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.jsx;
    var _closure1_slot4 = tango;
    tango = {};
    golf = 'function VideoQuestModalTsx1(){const{interpolate,translateY,maxVerticalTranslate}=this.__closure;return{transform:[{translateY:interpolate(translateY.get(),[0,maxVerticalTranslate],[0,maxVerticalTranslate])}]};}';
    tango['code'] = golf;
    var _closure1_slot5 = tango;
    tango = 8;
    tango = oscar[tango];
    options = report.bind(entity)(tango);
    golf = options.createStyles;
    tango = {};
    verify = {};
    offset = 'transparent';
    verify['backgroundColor'] = offset;
    tango['transparentBackground'] = verify;
    tango = golf.bind(options)(tango);
    var _closure1_slot6 = tango;
    tango = 10;
    tango = oscar[tango];
    oscar = report.bind(entity)(tango);
    report = oscar.fileFinishedImporting;
    tango = 'modules/quests/native/VideoQuestModal/VideoQuestModal.tsx';
    tango = report.bind(oscar)(tango);
    mike = function(argFoo) { // Original name: VideoQuestModal
        entity = argFoo;
        options = entity.onClose;
        var _closure2_slot0 = options;
        zulu = _closure1_slot6;
        tango = undefined;
        report = zulu.bind(tango)();
        golf = _closure1_slot3;
        oscar = golf.useMemo;
        zulu = new Array(1);
        zulu[0] = options;
        mike = function() {
            entity = {};
            zulu = {};
            tango = true;
            zulu['fullscreen'] = tango;
            tango = function() { // Original name: headerLeft
                entity = null;
                return entity;
            };
            zulu['headerLeft'] = tango;
            mike = function() { // Original name: render
                tango = _closure1_slot4;
                mike = _closure1_slot0;
                zulu = _closure1_slot2;
                entity = 2;
                entity = zulu[entity];
                zulu = undefined;
                entity = mike.bind(zulu)(entity);
                mike = entity.QuestDockGestureContextProvider;
                entity = {};
                golf = _closure1_slot4;
                oscar = _closure1_slot7;
                report = {'fullHeight': true, 'paddingTop': 0, 'paddingBottom': 0};
                options = _closure2_slot0;
                report['onClose'] = options;
                report = golf.bind(zulu)(oscar, report);
                entity['children'] = report;
                entity = tango.bind(zulu)(mike, entity);
                return entity;
            };
            zulu['render'] = mike;
            mike = 'watch_mobile_video_quest';
            entity[mike] = zulu;
            return entity;
        };
        oscar = oscar.bind(golf)(mike, zulu);
        zulu = _closure1_slot4;
        mike = _closure1_slot0;
        golf = _closure1_slot2;
        entity = 9;
        entity = golf[entity];
        entity = mike.bind(tango)(entity);
        mike = entity.Modal;
        entity = {'hideTitle': true, 'initialRouteName': 'watch_mobile_video_quest'};
        entity['screens'] = oscar;
        oscar = report.transparentBackground;
        entity['viewStyle'] = oscar;
        report = report.transparentBackground;
        entity['containerStyle'] = report;
        entity = zulu.bind(tango)(mike, entity);
        return entity;
    };
    zulu['default'] = mike;
    return entity;
})();