// app/modules/quests/native/VideoQuestModal/VideoQuestModal.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    oscard = argBar;
    sizing = argBaz;
    zuuluu = argFre;
    golfie = argPlu;
    var _closure1_slot0 = oscard;
    var _closure1_slot1 = sizing;
    var _closure1_slot2 = golfie;
    entity = global;
    option = entity.Object;
    report = option.defineProperty;
    michal = {};
    entity = true;
    michal['value'] = entity;
    entity = '__esModule';
    entity = report.bind(option)(zuuluu, entity, michal);
    verify = 0;
    michal = golfie[verify];
    entity = undefined;
    michal = sizing.bind(entity)(michal);
    var _closure1_slot3 = michal;
    backup = 1;
    report = golfie[backup];
    michal = argCor;
    option = michal.bind(entity)(report);
    var _closure1_slot4 = option;
    result = 2;
    michal = golfie[result];
    michal = oscard.bind(entity)(michal);
    report = michal.View;
    var _closure1_slot5 = report;
    output = michal.StyleSheet;
    michal = 3;
    michal = golfie[michal];
    michal = oscard.bind(entity)(michal);
    michal = michal.ThemeTypes;
    var _closure1_slot6 = michal;
    michal = 4;
    michal = golfie[michal];
    michal = oscard.bind(entity)(michal);
    report = michal.jsx;
    var _closure1_slot7 = report;
    michal = michal.jsxs;
    var _closure1_slot8 = michal;
    michal = {'mass': 1.9, 'damping': 18, 'stiffness': 80, 'overshootClamping': true};
    var _closure1_slot9 = michal;
    michal = {};
    michal['WATCH_VIDEO'] = verify;
    report = 'WATCH_VIDEO';
    michal[verify] = report;
    michal['POST_WATCH_VIDEO'] = backup;
    report = 'POST_WATCH_VIDEO';
    michal[backup] = report;
    var _closure1_slot10 = michal;
    report = 5;
    verify = golfie[report];
    yankee = oscard.bind(entity)(verify);
    offset = yankee.createStyles;
    verify = {};
    romeon = {'flexDirection': 'column', 'flexGrow': 1, 'flexShrink': 1, 'zIndex': 1};
    verify['wrapper'] = romeon;
    romeon = {};
    romeon['flex'] = backup;
    verify['contentWrapper'] = romeon;
    romeon = {};
    ctrled = output.absoluteFillObject;
    vacuum = romeon;
    foxtra = copyDataProperties(vacuum, ctrled);
    foxtra = 6;
    kiloes = golfie[foxtra];
    kiloes = sizing.bind(entity)(kiloes);
    kiloes = kiloes.radii;
    echoed = kiloes.lg;
    kiloes = 'borderRadius';
    romeon[kiloes] = echoed;
    echoed = golfie[foxtra];
    echoed = sizing.bind(entity)(echoed);
    echoed = echoed.colors;
    update = echoed.BG_BASE_TERTIARY;
    echoed = 'backgroundColor';
    romeon[echoed] = update;
    verify['contentBackground'] = romeon;
    romeon = {};
    romeon['zIndex'] = result;
    verify['modalContentWrapper'] = romeon;
    romeon = {};
    ctrled = output.absoluteFillObject;
    vacuum = romeon;
    output = copyDataProperties(vacuum, ctrled);
    foxtra = golfie[foxtra];
    foxtra = sizing.bind(entity)(foxtra);
    foxtra = foxtra.radii;
    foxtra = foxtra.lg;
    romeon[kiloes] = foxtra;
    foxtra = 'flex';
    romeon[foxtra] = backup;
    kiloes = 'hidden';
    foxtra = 'overflow';
    romeon[foxtra] = kiloes;
    kiloes = 'none';
    foxtra = 'pointerEvents';
    romeon[foxtra] = kiloes;
    foxtra = 'zIndex';
    romeon[foxtra] = backup;
    verify['backgroundWrapper'] = romeon;
    verify = offset.bind(yankee)(verify);
    var _closure1_slot11 = verify;
    verify = {};
    offset = 'function VideoQuestModalTsx1(){const{interpolate,translateY,maxVerticalTranslate}=this.__closure;return{transform:[{translateY:interpolate(translateY.get(),[0,maxVerticalTranslate],[0,maxVerticalTranslate])}]};}';
    verify['code'] = offset;
    var _closure1_slot12 = verify;
    verify = {};
    offset = 'function VideoQuestModalTsx2(){const{translateY,height,isModalSignificantlyVisible}=this.__closure;return{currentTranslateY:translateY.get(),currentHeight:height,prevVisibility:isModalSignificantlyVisible};}';
    verify['code'] = offset;
    var _closure1_slot13 = verify;
    verify = {};
    offset = 'function VideoQuestModalTsx3(watchedValues,previousWatchedValues){const{MODAL_VISIBILITY_THRESHOLD,runOnJS,setIsModalSignificantlyVisible}=this.__closure;if(watchedValues.currentTranslateY!==null&&(watchedValues.currentTranslateY!==(previousWatchedValues===null||previousWatchedValues===void 0?void 0:previousWatchedValues.currentTranslateY)||watchedValues.currentHeight!==(previousWatchedValues===null||previousWatchedValues===void 0?void 0:previousWatchedValues.currentHeight))){const threshold=watchedValues.currentHeight*MODAL_VISIBILITY_THRESHOLD;const newVisibility=watchedValues.currentTranslateY<threshold;if(newVisibility!==(previousWatchedValues===null||previousWatchedValues===void 0?void 0:previousWatchedValues.prevVisibility)){runOnJS(setIsModalSignificantlyVisible)(newVisibility);}}}';
    verify['code'] = offset;
    var _closure1_slot14 = verify;
    verify = {};
    offset = 'function VideoQuestModalTsx4(){const{withSpring,clamp,postWatchAnimationState,BACKGROUND_ENTRANCE_ANIMATION_SPRING_CONFIG,interpolate,CLOUDS_BACKGROUND_INVISIBLE_OFFSET_Y}=this.__closure;return{opacity:withSpring(clamp(postWatchAnimationState.get(),0,1),BACKGROUND_ENTRANCE_ANIMATION_SPRING_CONFIG),transform:[{translateY:withSpring(interpolate(postWatchAnimationState.get(),[0,1],[CLOUDS_BACKGROUND_INVISIBLE_OFFSET_Y,0]),BACKGROUND_ENTRANCE_ANIMATION_SPRING_CONFIG)}]};}';
    verify['code'] = offset;
    var _closure1_slot15 = verify;
    verify = {};
    offset = 'function VideoQuestModalTsx5(){const{withSpring,interpolate,postWatchAnimationState,safeAreaInsets,BACKGROUND_ENTRANCE_ANIMATION_SPRING_CONFIG}=this.__closure;return{transform:[{translateY:withSpring(interpolate(postWatchAnimationState.get(),[0,1],[safeAreaInsets.top,0]),BACKGROUND_ENTRANCE_ANIMATION_SPRING_CONFIG)}],opacity:withSpring(postWatchAnimationState.get(),BACKGROUND_ENTRANCE_ANIMATION_SPRING_CONFIG)};}';
    verify['code'] = offset;
    var _closure1_slot16 = verify;
    verify = {};
    offset = 'function VideoQuestModalTsx6(){const{withSpring,interpolate,translateY,gestureDistanceThreshold,isModalClosing,SOLID_BACKGROUND_VISIBLE_OPACITY,BACKGROUND_ENTRANCE_ANIMATION_SPRING_CONFIG}=this.__closure;return{opacity:withSpring(interpolate(translateY.get(),[0,gestureDistanceThreshold],[isModalClosing.get()?0:SOLID_BACKGROUND_VISIBLE_OPACITY,0]),BACKGROUND_ENTRANCE_ANIMATION_SPRING_CONFIG)};}';
    verify['code'] = offset;
    var _closure1_slot17 = verify;
    offset = option.memo;
    verify = function(argFoo) {
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            michal = argFoo;
            sequen = michal.onClose;
            option = michal.initialStep;
            var _closure2_slot0 = option;
            zuuluu = _closure1_slot0;
            michal = _closure1_slot2;
            report = 7;
            michal = michal[report];
            tangon = undefined;
            zuuluu = zuuluu.bind(tangon)(michal);
            michal = zuuluu.useVideoQuestModalContext;
            michal = michal.bind(zuuluu)();
            michal = michal.quest;
            zuuluu = michal.userStatus;
            golfie = null;
            oscard = golfie == zuuluu;
            michal = undefined;
            if(oscard) { _fun00002_ip = 85; continue _fun00001 }
 79:
            michal = zuuluu.completedAt;
 85:
            vacuum = golfie != michal;
            var _closure2_slot1 = vacuum;
            oscard = _closure1_slot4;
            zuuluu = oscard.useState;
            michal = option;
            if(!(golfie == michal)) { _fun00002_ip = 133; continue _fun00001 }
 109:
            offset = _closure1_slot10;
            if(vacuum) { _fun00002_ip = 124; continue _fun00001 }
 116:
            golfie = offset.WATCH_VIDEO;
            _fun00002_ip = 130; continue _fun00001;
 124:
            golfie = offset.POST_WATCH_VIDEO;
 130:
            michal = golfie;
 133:
            michal = zuuluu.bind(oscard)(michal);
            config = _closure1_slot3;
            sizing = 2;
            zuuluu = config.bind(tangon)(michal, sizing);
            michal = 0;
            update = zuuluu[michal];
            var _closure2_slot2 = update;
            golfie = 1;
            zuuluu = zuuluu[golfie];
            var _closure2_slot3 = zuuluu;
            result = _closure1_slot4;
            yankee = result.useContext;
            oscard = _closure1_slot0;
            zuuluu = _closure1_slot2;
            offset = 8;
            offset = zuuluu[offset];
            offset = oscard.bind(tangon)(offset);
            offset = offset.QuestDockGestureContext;
            offset = yankee.bind(result)(offset);
            yankee = offset.windowDimensions;
            romeon = result.useContext;
            offset = _closure1_slot1;
            report = zuuluu[report];
            report = offset.bind(tangon)(report);
            report = romeon.bind(result)(report);
            report = report.isModalPanGestureActive;
            var _closure2_slot4 = report;
            romeon = _closure1_slot11;
            romeon = romeon.bind(tangon)();
            ctrled = 9;
            foxtra = zuuluu[ctrled];
            kiloes = oscard.bind(tangon)(foxtra);
            backup = kiloes.useSharedValue;
            foxtra = false;
            foxtra = backup.bind(kiloes)(foxtra);
            var _closure2_slot5 = foxtra;
            output = result.useCallback;
            kiloes = new Array(1);
            kiloes[0] = report;
            backup = function() {
                michal = _closure2_slot4;
                entity = true;
                michal['current'] = entity;
                entity = undefined;
                return entity;
            };
            cntext = output.bind(result)(backup, kiloes);
            kiloes = result.useCallback;
            backup = new Array(1);
            backup[0] = report;
            report = function() {
                michal = _closure2_slot4;
                entity = false;
                michal['current'] = entity;
                entity = undefined;
                return entity;
            };
            record = kiloes.bind(result)(report, backup);
            kiloes = result.useCallback;
            backup = new Array(1);
            backup[0] = foxtra;
            report = function() {
                zuuluu = _closure2_slot5;
                michal = zuuluu.set;
                entity = true;
                entity = michal.bind(zuuluu)(entity);
                entity = undefined;
                return entity;
            };
            kiloes = kiloes.bind(result)(report, backup);
            report = zuuluu[ctrled];
            backup = oscard.bind(tangon)(report);
            report = backup.useSharedValue;
            source = report.bind(backup)(michal);
            var _closure2_slot6 = source;
            report = 10;
            report = zuuluu[report];
            report = offset.bind(tangon)(report);
            report = report.bind(tangon)(yankee);
            echoed = report.height;
            var _closure2_slot7 = echoed;
            yankee = 0.8;
            papara = yankee * echoed;
            var _closure2_slot8 = papara;
            report = 0.5;
            backup = report * echoed;
            var _closure2_slot9 = backup;
            report = 11;
            report = zuuluu[report];
            offset = offset.bind(tangon)(report);
            report = {};
            output = true;
            report['gestureEnabled'] = output;
            report['height'] = echoed;
            report['maxTranslate'] = papara;
            report['thresholdTranslate'] = backup;
            report['translateY'] = source;
            report['onStart'] = cntext;
            report['onEnd'] = record;
            report['onClose'] = kiloes;
            report = offset.bind(tangon)(report);
            offset = zuuluu[ctrled];
            record = oscard.bind(tangon)(offset);
            kiloes = record.useAnimatedStyle;
            offset = function() { // Original name: u
                entity = {};
                zuuluu = {};
                report = _closure1_slot0;
                tangon = _closure1_slot2;
                michal = 9;
                tangon = tangon[michal];
                michal = undefined;
                golfie = report.bind(michal)(tangon);
                oscard = golfie.interpolate;
                report = _closure2_slot6;
                tangon = report.get;
                report = tangon.bind(report)();
                option = _closure2_slot8;
                tangon = [0];
                tangon[1] = option;
                option = _closure2_slot8;
                michal = [0];
                michal[1] = option;
                michal = oscard.bind(golfie)(report, tangon, michal);
                zuuluu['translateY'] = michal;
                michal = new Array(1);
                michal[0] = zuuluu;
                entity['transform'] = michal;
                return entity;
            };
            cntext = {};
            target = zuuluu[ctrled];
            target = oscard.bind(tangon)(target);
            target = target.interpolate;
            cntext['interpolate'] = target;
            cntext['translateY'] = source;
            cntext['maxVerticalTranslate'] = papara;
            offset['__closure'] = cntext;
            cntext = 10882296861392.0;
            offset['__workletHash'] = cntext;
            cntext = _closure1_slot12;
            offset['__initData'] = cntext;
            kiloes = kiloes.bind(record)(offset);
            record = result.useState;
            offset = source.get;
            cntext = offset.bind(source)();
            status = 0.1;
            offset = status * echoed;
            offset = cntext < offset;
            offset = record.bind(result)(offset);
            offset = config.bind(tangon)(offset, sizing);
            record = offset[michal];
            var _closure2_slot10 = record;
            target = offset[golfie];
            var _closure2_slot11 = target;
            offset = zuuluu[ctrled];
            cntext = oscard.bind(tangon)(offset);
            config = cntext.useAnimatedReaction;
            sizing = function() { // Original name: D
                entity = {};
                tangon = _closure2_slot6;
                zuuluu = tangon.get;
                zuuluu = zuuluu.bind(tangon)();
                entity['currentTranslateY'] = zuuluu;
                zuuluu = _closure2_slot7;
                entity['currentHeight'] = zuuluu;
                michal = _closure2_slot10;
                entity['prevVisibility'] = michal;
                return entity;
            };
            offset = {};
            offset['translateY'] = source;
            offset['height'] = echoed;
            offset['isModalSignificantlyVisible'] = record;
            sizing['__closure'] = offset;
            offset = 896457832268.0;
            sizing['__workletHash'] = offset;
            offset = _closure1_slot13;
            sizing['__initData'] = offset;
            offset = function(argFoo, argBar) { // Original name: c
                _fun00003: for(var _fun00004_ip = 0; ; ) switch(_fun00004_ip) {
 0:
                    michal = argFoo;
                    tangon = argBar;
                    zuuluu = michal.currentTranslateY;
                    entity = null;
                    if(!(entity !== zuuluu)) { _fun00004_ip = 167; continue _fun00003 }
 21:
                    oscard = michal.currentTranslateY;
                    golfie = entity == tangon;
                    zuuluu = undefined;
                    report = undefined;
                    if(golfie) { _fun00004_ip = 44; continue _fun00003 }
 38:
                    report = tangon.currentTranslateY;
 44:
                    if(!(oscard === report)) { _fun00004_ip = 73; continue _fun00003 }
 48:
                    oscard = michal.currentHeight;
                    golfie = entity == tangon;
                    report = undefined;
                    if(golfie) { _fun00004_ip = 69; continue _fun00003 }
 63:
                    report = tangon.currentHeight;
 69:
                    if(!(oscard !== report)) { _fun00004_ip = 167; continue _fun00003 }
 73:
                    oscard = michal.currentHeight;
                    report = 0.1;
                    report = report * oscard;
                    michal = michal.currentTranslateY;
                    michal = michal < report;
                    report = entity == tangon;
                    entity = undefined;
                    if(report) { _fun00004_ip = 118; continue _fun00003 }
 112:
                    entity = tangon.prevVisibility;
 118:
                    if(!(michal !== entity)) { _fun00004_ip = 167; continue _fun00003 }
 122:
                    tangon = _closure1_slot0;
                    report = _closure1_slot2;
                    entity = 9;
                    entity = report[entity];
                    report = tangon.bind(zuuluu)(entity);
                    tangon = report.runOnJS;
                    entity = _closure2_slot11;
                    entity = tangon.bind(report)(entity);
                    entity = entity.bind(zuuluu)(michal);
 167:
                    entity = undefined;
                    return entity;
                }
            };
            papara = {};
            papara['MODAL_VISIBILITY_THRESHOLD'] = status;
            status = zuuluu[ctrled];
            status = oscard.bind(tangon)(status);
            status = status.runOnJS;
            papara['runOnJS'] = status;
            papara['setIsModalSignificantlyVisible'] = target;
            offset['__closure'] = papara;
            papara = 769936951377.0;
            offset['__workletHash'] = papara;
            papara = _closure1_slot14;
            offset['__initData'] = papara;
            offset = config.bind(cntext)(sizing, offset);
            sizing = result.useLayoutEffect;
            offset = new Array(2);
            offset[0] = vacuum;
            offset[1] = option;
            option = function() {
                _fun00005: for(var _fun00006_ip = 0; ; ) switch(_fun00006_ip) {
 0:
                    michal = _closure2_slot1;
                    if(!michal) { _fun00006_ip = 20; continue _fun00005 }
 10:
                    tangon = _closure2_slot0;
                    zuuluu = null;
                    michal = zuuluu == tangon;
 20:
                    if(!michal) { _fun00006_ip = 47; continue _fun00005 }
 23:
                    zuuluu = _closure2_slot3;
                    entity = _closure1_slot10;
                    michal = entity.POST_WATCH_VIDEO;
                    entity = undefined;
                    entity = zuuluu.bind(entity)(michal);
 47:
                    entity = undefined;
                    return entity;
                }
            };
            option = sizing.bind(result)(option, offset);
            sizing = result.useCallback;
            offset = function() {
                zuuluu = _closure2_slot3;
                entity = _closure1_slot10;
                michal = entity.WATCH_VIDEO;
                entity = undefined;
                michal = zuuluu.bind(entity)(michal);
                return entity;
            };
            option = new Array(0);
            vacuum = sizing.bind(result)(offset, option);
            sizing = result.useCallback;
            offset = function() {
                zuuluu = _closure2_slot3;
                entity = _closure1_slot10;
                michal = entity.POST_WATCH_VIDEO;
                entity = undefined;
                michal = zuuluu.bind(entity)(michal);
                return entity;
            };
            option = new Array(0);
            config = sizing.bind(result)(offset, option);
            zuuluu = zuuluu[ctrled];
            oscard = oscard.bind(tangon)(zuuluu);
            zuuluu = oscard.useSharedValue;
            option = _closure1_slot10;
            option = option.POST_WATCH_VIDEO;
            if(!(update === option)) { _fun00002_ip = 917; continue _fun00001 }
 914:
            michal = golfie;
 917:
            golfie = zuuluu.bind(oscard)(michal);
            var _closure2_slot12 = golfie;
            sizing = _closure1_slot0;
            result = _closure1_slot2;
            michal = result[ctrled];
            oscard = sizing.bind(tangon)(michal);
            zuuluu = oscard.useAnimatedStyle;
            michal = function() { // Original name: z
                entity = {};
                offset = _closure1_slot0;
                yankee = _closure1_slot2;
                tangon = 12;
                michal = yankee[tangon];
                verify = undefined;
                romeon = offset.bind(verify)(michal);
                report = romeon.withSpring;
                option = 9;
                michal = yankee[option];
                kiloes = offset.bind(verify)(michal);
                backup = kiloes.clamp;
                zuuluu = _closure2_slot12;
                michal = zuuluu.get;
                foxtra = michal.bind(zuuluu)();
                michal = 0;
                zuuluu = 1;
                zuuluu = backup.bind(kiloes)(foxtra, michal, zuuluu);
                oscard = _closure1_slot9;
                zuuluu = report.bind(romeon)(zuuluu, oscard);
                entity['opacity'] = zuuluu;
                zuuluu = {};
                tangon = yankee[tangon];
                report = offset.bind(verify)(tangon);
                tangon = report.withSpring;
                option = yankee[option];
                offset = offset.bind(verify)(option);
                verify = offset.interpolate;
                option = _closure2_slot12;
                golfie = option.get;
                option = golfie.bind(option)();
                golfie = new Array(2);
                yankee = -100;
                golfie[0] = yankee;
                golfie[1] = michal;
                michal = [0, 1];
                michal = verify.bind(offset)(option, michal, golfie);
                michal = tangon.bind(report)(michal, oscard);
                zuuluu['translateY'] = michal;
                michal = new Array(1);
                michal[0] = zuuluu;
                entity['transform'] = michal;
                return entity;
            };
            option = {};
            target = 12;
            offset = result[target];
            offset = sizing.bind(tangon)(offset);
            offset = offset.withSpring;
            option['withSpring'] = offset;
            offset = result[ctrled];
            offset = sizing.bind(tangon)(offset);
            offset = offset.clamp;
            option['clamp'] = offset;
            option['postWatchAnimationState'] = golfie;
            offset = _closure1_slot9;
            option['BACKGROUND_ENTRANCE_ANIMATION_SPRING_CONFIG'] = offset;
            cntext = result[ctrled];
            cntext = sizing.bind(tangon)(cntext);
            cntext = cntext.interpolate;
            option['interpolate'] = cntext;
            cntext = -100;
            option['CLOUDS_BACKGROUND_INVISIBLE_OFFSET_Y'] = cntext;
            michal['__closure'] = option;
            option = 4954484517594.0;
            michal['__workletHash'] = option;
            option = _closure1_slot15;
            michal['__initData'] = option;
            cntext = zuuluu.bind(oscard)(michal);
            papara = _closure1_slot1;
            michal = 13;
            michal = result[michal];
            michal = papara.bind(tangon)(michal);
            sierra = michal.bind(tangon)();
            var _closure2_slot13 = sierra;
            michal = result[ctrled];
            oscard = sizing.bind(tangon)(michal);
            zuuluu = oscard.useAnimatedStyle;
            michal = function() { // Original name: X
                entity = {};
                verify = {};
                oscard = _closure1_slot0;
                golfie = _closure1_slot2;
                zuuluu = 12;
                michal = golfie[zuuluu];
                tangon = undefined;
                yankee = oscard.bind(tangon)(michal);
                offset = yankee.withSpring;
                michal = 9;
                michal = golfie[michal];
                kiloes = oscard.bind(tangon)(michal);
                backup = kiloes.interpolate;
                romeon = _closure2_slot12;
                option = romeon.get;
                foxtra = option.bind(romeon)();
                option = _closure2_slot13;
                option = option.top;
                romeon = new Array(2);
                romeon[0] = option;
                option = 0;
                romeon[1] = option;
                option = [0, 1];
                option = backup.bind(kiloes)(foxtra, option, romeon);
                report = _closure1_slot9;
                option = offset.bind(yankee)(option, report);
                verify['translateY'] = option;
                option = new Array(1);
                option[0] = verify;
                entity['transform'] = option;
                zuuluu = golfie[zuuluu];
                tangon = oscard.bind(tangon)(zuuluu);
                zuuluu = tangon.withSpring;
                oscard = _closure2_slot12;
                michal = oscard.get;
                michal = michal.bind(oscard)();
                michal = zuuluu.bind(tangon)(michal, report);
                entity['opacity'] = michal;
                return entity;
            };
            option = {};
            status = result[target];
            status = sizing.bind(tangon)(status);
            status = status.withSpring;
            option['withSpring'] = status;
            status = result[ctrled];
            status = sizing.bind(tangon)(status);
            status = status.interpolate;
            option['interpolate'] = status;
            option['postWatchAnimationState'] = golfie;
            option['safeAreaInsets'] = sierra;
            option['BACKGROUND_ENTRANCE_ANIMATION_SPRING_CONFIG'] = offset;
            michal['__closure'] = option;
            option = 16000393024690.0;
            michal['__workletHash'] = option;
            option = _closure1_slot16;
            michal['__initData'] = option;
            status = zuuluu.bind(oscard)(michal);
            michal = result[ctrled];
            oscard = sizing.bind(tangon)(michal);
            zuuluu = oscard.useAnimatedStyle;
            michal = function() { // Original name: Z
                _fun00007: for(var _fun00008_ip = 0; ; ) switch(_fun00008_ip) {
 0:
                    entity = {};
                    golfie = _closure1_slot0;
                    option = _closure1_slot2;
                    zuuluu = 12;
                    zuuluu = option[zuuluu];
                    oscard = undefined;
                    report = golfie.bind(oscard)(zuuluu);
                    tangon = report.withSpring;
                    zuuluu = 9;
                    zuuluu = option[zuuluu];
                    verify = golfie.bind(oscard)(zuuluu);
                    option = verify.interpolate;
                    golfie = _closure2_slot6;
                    oscard = golfie.get;
                    golfie = oscard.bind(golfie)();
                    offset = _closure2_slot9;
                    oscard = [0];
                    oscard[1] = offset;
                    offset = _closure2_slot5;
                    zuuluu = offset.get;
                    zuuluu = zuuluu.bind(offset)();
                    offset = 0.8;
                    if(!zuuluu) { _fun00008_ip = 112; continue _fun00007 }
 110:
                    offset = 0;
 112:
                    zuuluu = new Array(2);
                    zuuluu[0] = offset;
                    offset = 0;
                    zuuluu[1] = offset;
                    zuuluu = option.bind(verify)(golfie, oscard, zuuluu);
                    michal = _closure1_slot9;
                    michal = tangon.bind(report)(zuuluu, michal);
                    entity['opacity'] = michal;
                    return entity;
                }
            };
            option = {};
            target = result[target];
            target = sizing.bind(tangon)(target);
            target = target.withSpring;
            option['withSpring'] = target;
            ctrled = result[ctrled];
            ctrled = sizing.bind(tangon)(ctrled);
            ctrled = ctrled.interpolate;
            option['interpolate'] = ctrled;
            option['translateY'] = source;
            option['gestureDistanceThreshold'] = backup;
            option['isModalClosing'] = foxtra;
            option['SOLID_BACKGROUND_VISIBLE_OPACITY'] = yankee;
            option['BACKGROUND_ENTRANCE_ANIMATION_SPRING_CONFIG'] = offset;
            michal['__closure'] = option;
            option = 772084751654.0;
            michal['__workletHash'] = option;
            option = _closure1_slot17;
            michal['__initData'] = option;
            foxtra = zuuluu.bind(oscard)(michal);
            oscard = _closure1_slot4;
            zuuluu = oscard.useEffect;
            michal = new Array(2);
            michal[0] = golfie;
            michal[1] = update;
            entity = function() {
                _fun00009: for(var _fun00010_ip = 0; ; ) switch(_fun00010_ip) {
 0:
                    zuuluu = _closure2_slot12;
                    michal = zuuluu.set;
                    report = _closure2_slot2;
                    entity = _closure1_slot10;
                    tangon = entity.POST_WATCH_VIDEO;
                    entity = 0;
                    if(!(report === tangon)) { _fun00010_ip = 38; continue _fun00009 }
 35:
                    entity = 1;
 38:
                    entity = michal.bind(zuuluu)(entity);
                    entity = undefined;
                    return entity;
                }
            };
            entity = zuuluu.bind(oscard)(entity, michal);
            zuuluu = _closure1_slot7;
            entity = 14;
            entity = result[entity];
            entity = sizing.bind(tangon)(entity);
            michal = entity.GestureDetector;
            entity = {};
            entity['gesture'] = report;
            golfie = _closure1_slot8;
            oscard = _closure1_slot5;
            report = {};
            backup = 15;
            option = result[backup];
            offset = papara.bind(tangon)(option);
            option = {};
            source = romeon.modalContentWrapper;
            yankee = new Array(2);
            yankee[0] = source;
            yankee[1] = kiloes;
            option['style'] = yankee;
            yankee = {};
            source = romeon.backgroundWrapper;
            kiloes = new Array(2);
            kiloes[0] = source;
            source = {};
            source['height'] = echoed;
            kiloes[1] = source;
            yankee['style'] = kiloes;
            kiloes = result[backup];
            source = papara.bind(tangon)(kiloes);
            kiloes = {};
            target = romeon.contentBackground;
            ctrled = new Array(2);
            ctrled[0] = target;
            target = {};
            sierra = sierra.top;
            target['top'] = sierra;
            ctrled[1] = target;
            kiloes['style'] = ctrled;
            source = zuuluu.bind(tangon)(source, kiloes);
            kiloes = new Array(3);
            kiloes[0] = source;
            source = result[backup];
            ctrled = papara.bind(tangon)(source);
            source = {};
            sierra = romeon.contentBackground;
            target = new Array(2);
            target[0] = sierra;
            target[1] = status;
            source['style'] = target;
            source = zuuluu.bind(tangon)(ctrled, source);
            kiloes[1] = source;
            source = result[backup];
            ctrled = papara.bind(tangon)(source);
            source = {};
            source['style'] = cntext;
            cntext = 16;
            cntext = result[cntext];
            papara = papara.bind(tangon)(cntext);
            cntext = {};
            target = 'top';
            cntext['align'] = target;
            cntext = zuuluu.bind(tangon)(papara, cntext);
            source['children'] = cntext;
            source = zuuluu.bind(tangon)(ctrled, source);
            kiloes[2] = source;
            yankee['children'] = kiloes;
            kiloes = golfie.bind(tangon)(oscard, yankee);
            yankee = new Array(2);
            yankee[0] = kiloes;
            kiloes = 17;
            kiloes = result[kiloes];
            kiloes = sizing.bind(tangon)(kiloes);
            sizing = kiloes.SafeAreaPaddingView;
            kiloes = {};
            kiloes['top'] = output;
            result = romeon.wrapper;
            output = new Array(2);
            output[0] = result;
            result = {};
            result['height'] = echoed;
            output[1] = result;
            kiloes['style'] = output;
            output = {};
            result = romeon.contentWrapper;
            output['style'] = result;
            result = _closure1_slot10;
            result = result.WATCH_VIDEO;
            echoed = update === result;
            if(!echoed) { _fun00002_ip = 1800; continue _fun00001 }
 1748:
            ctrled = _closure1_slot7;
            source = _closure1_slot1;
            cntext = _closure1_slot2;
            result = 18;
            result = cntext[result];
            source = source.bind(tangon)(result);
            result = {};
            result['isModalSignificantlyVisible'] = record;
            result['onNavigateToPostWatchVideo'] = config;
            result['onClose'] = sequen;
            result['onEnd'] = config;
            echoed = ctrled.bind(tangon)(source, result);
 1800:
            result = new Array(2);
            result[0] = echoed;
            echoed = _closure1_slot10;
            echoed = echoed.POST_WATCH_VIDEO;
            echoed = update === echoed;
            if(!echoed) { _fun00002_ip = 1867; continue _fun00001 }
 1825:
            ctrled = _closure1_slot7;
            source = _closure1_slot1;
            config = _closure1_slot2;
            update = 19;
            update = config[update];
            source = source.bind(tangon)(update);
            update = {};
            update['onClose'] = sequen;
            update['onRestartVideo'] = vacuum;
            echoed = ctrled.bind(tangon)(source, update);
 1867:
            result[1] = echoed;
            output['children'] = result;
            output = golfie.bind(tangon)(oscard, output);
            kiloes['children'] = output;
            kiloes = zuuluu.bind(tangon)(sizing, kiloes);
            yankee[1] = kiloes;
            option['children'] = yankee;
            offset = golfie.bind(tangon)(offset, option);
            option = new Array(2);
            option[0] = offset;
            yankee = _closure1_slot7;
            offset = _closure1_slot1;
            verify = _closure1_slot2;
            verify = verify[backup];
            offset = offset.bind(tangon)(verify);
            verify = {};
            backup = romeon.contentBackground;
            romeon = new Array(2);
            romeon[0] = backup;
            romeon[1] = foxtra;
            verify['style'] = romeon;
            verify = yankee.bind(tangon)(offset, verify);
            option[1] = verify;
            report['children'] = option;
            report = golfie.bind(tangon)(oscard, report);
            entity['children'] = report;
            entity = zuuluu.bind(tangon)(michal, entity);
            return entity;
        }
    };
    verify = offset.bind(option)(verify);
    var _closure1_slot18 = verify;
    report = golfie[report];
    offset = oscard.bind(entity)(report);
    verify = offset.createStyles;
    report = {};
    yankee = {};
    romeon = 'transparent';
    yankee['backgroundColor'] = romeon;
    report['transparentBackground'] = yankee;
    report = verify.bind(offset)(report);
    var _closure1_slot19 = report;
    report = option.memo;
    tangon = function(argFoo) { // Original name: VideoQuestModal
        entity = argFoo;
        verify = entity.questId;
        romeon = entity.questContentPosition;
        var _closure2_slot0 = romeon;
        kiloes = entity.onClose;
        var _closure2_slot1 = kiloes;
        foxtra = entity.videoSessionId;
        var _closure2_slot2 = foxtra;
        yankee = entity.initialStep;
        var _closure2_slot3 = yankee;
        michal = _closure1_slot19;
        tangon = undefined;
        report = michal.bind(tangon)();
        michal = _closure1_slot0;
        golfie = _closure1_slot2;
        oscard = 20;
        oscard = golfie[oscard];
        option = michal.bind(tangon)(oscard);
        oscard = option.useNonNullableQuest;
        backup = oscard.bind(option)(verify);
        var _closure2_slot4 = backup;
        verify = _closure1_slot4;
        option = verify.useRef;
        oscard = false;
        offset = option.bind(verify)(oscard);
        var _closure2_slot5 = offset;
        option = verify.useMemo;
        oscard = new Array(6);
        oscard[0] = kiloes;
        oscard[1] = backup;
        oscard[2] = foxtra;
        oscard[3] = romeon;
        oscard[4] = yankee;
        oscard[5] = offset;
        zuuluu = function() {
            entity = {};
            zuuluu = {};
            tangon = true;
            zuuluu['fullscreen'] = tangon;
            tangon = function() { // Original name: headerLeft
                entity = null;
                return entity;
            };
            zuuluu['headerLeft'] = tangon;
            michal = function() { // Original name: render
                tangon = _closure1_slot7;
                backup = _closure1_slot0;
                kiloes = _closure1_slot2;
                entity = 21;
                entity = kiloes[entity];
                zuuluu = undefined;
                entity = backup.bind(zuuluu)(entity);
                michal = entity.ThemeContextProvider;
                entity = {};
                oscard = _closure1_slot6;
                oscard = oscard.DARKER;
                entity['theme'] = oscard;
                oscard = _closure1_slot1;
                report = 7;
                report = kiloes[report];
                report = oscard.bind(zuuluu)(report);
                oscard = report.Provider;
                report = {};
                golfie = {};
                romeon = _closure2_slot4;
                golfie['quest'] = romeon;
                option = _closure2_slot2;
                golfie['videoSessionId'] = option;
                option = _closure2_slot5;
                golfie['isModalPanGestureActive'] = option;
                report['value'] = golfie;
                golfie = 8;
                golfie = kiloes[golfie];
                golfie = backup.bind(zuuluu)(golfie);
                option = golfie.QuestDockGestureContextProvider;
                golfie = {};
                verify = 22;
                verify = kiloes[verify];
                verify = backup.bind(zuuluu)(verify);
                offset = verify.QuestContentImpressionTrackerNative;
                verify = {};
                foxtra = true;
                verify['overrideVisibility'] = foxtra;
                foxtra = 23;
                foxtra = kiloes[foxtra];
                foxtra = backup.bind(zuuluu)(foxtra);
                foxtra = foxtra.QuestContent;
                foxtra = foxtra.VIDEO_MODAL_MOBILE;
                verify['questContent'] = foxtra;
                verify['questOrQuests'] = romeon;
                yankee = _closure2_slot0;
                verify['questContentPosition'] = yankee;
                yankee = function() { // Original name: children
                    tangon = _closure1_slot7;
                    zuuluu = _closure1_slot18;
                    michal = {};
                    report = _closure2_slot3;
                    michal['initialStep'] = report;
                    entity = _closure2_slot1;
                    michal['onClose'] = entity;
                    entity = undefined;
                    entity = tangon.bind(entity)(zuuluu, michal);
                    return entity;
                };
                verify['children'] = yankee;
                verify = tangon.bind(zuuluu)(offset, verify);
                golfie['children'] = verify;
                golfie = tangon.bind(zuuluu)(option, golfie);
                report['children'] = golfie;
                report = tangon.bind(zuuluu)(oscard, report);
                entity['children'] = report;
                entity = tangon.bind(zuuluu)(michal, entity);
                return entity;
            };
            zuuluu['render'] = michal;
            michal = 'watch_mobile_video_quest';
            entity[michal] = zuuluu;
            return entity;
        };
        oscard = option.bind(verify)(zuuluu, oscard);
        zuuluu = _closure1_slot7;
        entity = 24;
        entity = golfie[entity];
        entity = michal.bind(tangon)(entity);
        michal = entity.Modal;
        entity = {'hideTitle': true, 'initialRouteName': 'watch_mobile_video_quest'};
        entity['screens'] = oscard;
        oscard = report.transparentBackground;
        entity['viewStyle'] = oscard;
        report = report.transparentBackground;
        entity['containerStyle'] = report;
        entity = zuuluu.bind(tangon)(michal, entity);
        return entity;
    };
    tangon = report.bind(option)(tangon);
    report = 25;
    report = golfie[report];
    golfie = oscard.bind(entity)(report);
    oscard = golfie.fileFinishedImporting;
    report = 'modules/quests/native/VideoQuestModal/VideoQuestModal.tsx';
    report = oscard.bind(golfie)(report);
    zuuluu['default'] = tangon;
    zuuluu['VideoQuestModalSteps'] = michal;
    return entity;
})();