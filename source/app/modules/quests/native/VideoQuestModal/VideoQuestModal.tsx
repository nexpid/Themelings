// app/modules/quests/native/VideoQuestModal/VideoQuestModal.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    report = argBar;
    golfie = argBaz;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    var _closure1_slot1 = golfie;
    var _closure1_slot2 = oscard;
    entity = function(argFoo) { // Original name: VideoQuestModalContent
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            michal = argFoo;
            entity = michal.fullHeight;
            tangon = undefined;
            sizing = tangon !== entity;
            if(!sizing) { _fun00002_ip = 23; continue _fun00001 }
 20:
            sizing = entity;
 23:
            entity = michal.onClose;
            var _closure2_slot0 = entity;
            zuuluu = michal.paddingTop;
            entity = 0;
            backup = 0;
            if(!(tangon !== zuuluu)) { _fun00002_ip = 50; continue _fun00001 }
 47:
            backup = zuuluu;
 50:
            zuuluu = michal.paddingBottom;
            kiloes = 0;
            if(!(tangon !== zuuluu)) { _fun00002_ip = 65; continue _fun00001 }
 62:
            kiloes = zuuluu;
 65:
            source = michal.quest;
            var _closure2_slot1 = source;
            report = _closure1_slot4;
            zuuluu = report.useContext;
            verify = _closure1_slot0;
            yankee = _closure1_slot2;
            michal = 7;
            michal = yankee[michal];
            michal = verify.bind(tangon)(michal);
            michal = michal.QuestDockGestureContext;
            michal = zuuluu.bind(report)(michal);
            zuuluu = michal.windowDimensions;
            michal = _closure1_slot10;
            target = michal.bind(tangon)(sizing);
            michal = 8;
            michal = yankee[michal];
            report = verify.bind(tangon)(michal);
            michal = report.useQuestTaskDetails;
            variable47 = michal.bind(report)(source);
            result = 9;
            michal = yankee[result];
            report = verify.bind(tangon)(michal);
            michal = report.useSharedValue;
            output = michal.bind(report)(entity);
            var _closure2_slot2 = output;
            oscard = _closure1_slot1;
            michal = 10;
            michal = yankee[michal];
            michal = oscard.bind(tangon)(michal);
            michal = michal.bind(tangon)(zuuluu);
            foxtra = michal.height;
            romeon = michal.maxContentHeight;
            michal = 0.8;
            offset = michal * foxtra;
            var _closure2_slot3 = offset;
            michal = 11;
            michal = yankee[michal];
            zuuluu = oscard.bind(tangon)(michal);
            michal = {};
            variable46 = true;
            michal['gestureEnabled'] = variable46;
            michal['height'] = foxtra;
            michal['maxTranslate'] = offset;
            report = 0.5;
            report = report * foxtra;
            michal['thresholdTranslate'] = report;
            michal['translateY'] = output;
            report = zuuluu.bind(tangon)(michal);
            michal = yankee[result];
            golfie = verify.bind(tangon)(michal);
            zuuluu = golfie.useAnimatedStyle;
            michal = function() { // Original name: l
                entity = {};
                zuuluu = {};
                report = _closure1_slot0;
                tangon = _closure1_slot2;
                michal = 9;
                tangon = tangon[michal];
                michal = undefined;
                golfie = report.bind(michal)(tangon);
                oscard = golfie.interpolate;
                report = _closure2_slot2;
                tangon = report.get;
                report = tangon.bind(report)();
                option = _closure2_slot3;
                tangon = [0];
                tangon[1] = option;
                option = _closure2_slot3;
                michal = [0];
                michal[1] = option;
                michal = oscard.bind(golfie)(report, tangon, michal);
                zuuluu['translateY'] = michal;
                michal = new Array(1);
                michal[0] = zuuluu;
                entity['transform'] = michal;
                return entity;
            };
            option = {};
            result = yankee[result];
            result = verify.bind(tangon)(result);
            result = result.interpolate;
            option['interpolate'] = result;
            option['translateY'] = output;
            option['maxVerticalTranslate'] = offset;
            michal['__closure'] = option;
            option = 10882296861392.0;
            michal['__workletHash'] = option;
            option = _closure1_slot11;
            michal['__initData'] = option;
            option = zuuluu.bind(golfie)(michal);
            golfie = _closure1_slot4;
            zuuluu = golfie.useState;
            michal = false;
            golfie = zuuluu.bind(golfie)(michal);
            zuuluu = _closure1_slot3;
            michal = 2;
            michal = zuuluu.bind(tangon)(golfie, michal);
            papara = michal[entity];
            entity = 1;
            entity = michal[entity];
            var _closure2_slot4 = entity;
            golfie = _closure1_slot4;
            zuuluu = golfie.useCallback;
            michal = new Array(1);
            michal[0] = entity;
            entity = function() {
                zuuluu = _closure2_slot4;
                michal = undefined;
                entity = function(argFoo) {
                    entity = argFoo;
                    entity = !entity;
                    return entity;
                };
                entity = zuuluu.bind(michal)(entity);
                return entity;
            };
            vacuum = zuuluu.bind(golfie)(entity, michal);
            golfie = _closure1_slot4;
            zuuluu = golfie.useCallback;
            entity = source.id;
            michal = new Array(1);
            michal[0] = entity;
            entity = function() {
                offset = _closure1_slot0;
                golfie = _closure1_slot2;
                entity = 12;
                zuuluu = golfie[entity];
                entity = undefined;
                option = offset.bind(entity)(zuuluu);
                oscard = option.copyShareLink;
                zuuluu = _closure2_slot1;
                tangon = zuuluu.id;
                zuuluu = {};
                verify = 13;
                verify = golfie[verify];
                verify = offset.bind(entity)(verify);
                verify = verify.QuestContent;
                verify = verify.VIDEO_MODAL_MOBILE;
                zuuluu['content'] = verify;
                verify = 14;
                verify = golfie[verify];
                verify = offset.bind(entity)(verify);
                verify = verify.QuestContentCTA;
                verify = verify.CONTEXT_MENU_COPY_LINK;
                zuuluu['ctaContent'] = verify;
                zuuluu = oscard.bind(option)(tangon, zuuluu);
                oscard = _closure1_slot1;
                michal = 15;
                michal = golfie[michal];
                tangon = oscard.bind(entity)(michal);
                zuuluu = tangon.open;
                michal = {};
                report = _closure2_slot1;
                verify = report.id;
                report = global;
                report = report.HermesInternal;
                option = report.concat;
                report = 'copy-share-link-toast-';
                report = option.bind(report)(verify);
                michal['key'] = report;
                report = 16;
                option = golfie[report];
                option = offset.bind(entity)(option);
                verify = option.intl;
                option = verify.string;
                report = golfie[report];
                report = offset.bind(entity)(report);
                report = report.t;
                report = report.t5VZ8/;
                report = option.bind(verify)(report);
                michal['content'] = report;
                report = 17;
                report = golfie[report];
                report = oscard.bind(entity)(report);
                michal['icon'] = report;
                michal = zuuluu.bind(tangon)(michal);
                return entity;
            };
            output = zuuluu.bind(golfie)(entity, michal);
            entity = 18;
            entity = yankee[entity];
            michal = verify.bind(tangon)(entity);
            entity = michal.useQuestImpressionId;
            entity = entity.bind(michal)();
            var _closure2_slot5 = entity;
            golfie = _closure1_slot4;
            zuuluu = golfie.useCallback;
            michal = new Array(2);
            michal[0] = source;
            michal[1] = entity;
            entity = function() {
                option = _closure1_slot0;
                verify = _closure1_slot2;
                entity = 12;
                michal = verify[entity];
                entity = undefined;
                report = option.bind(entity)(michal);
                tangon = report.openGameLink;
                zuuluu = _closure2_slot1;
                michal = {};
                golfie = 13;
                golfie = verify[golfie];
                golfie = option.bind(entity)(golfie);
                golfie = golfie.QuestContent;
                golfie = golfie.VIDEO_MODAL_MOBILE;
                michal['content'] = golfie;
                golfie = 14;
                golfie = verify[golfie];
                golfie = option.bind(entity)(golfie);
                golfie = golfie.QuestContentCTA;
                golfie = golfie.CONTEXT_MENU_OPEN_GAME_LINK;
                michal['ctaContent'] = golfie;
                oscard = _closure2_slot5;
                michal['impressionId'] = oscard;
                michal = tangon.bind(report)(zuuluu, michal);
                return entity;
            };
            variable39 = zuuluu.bind(golfie)(entity, michal);
            zuuluu = _closure1_slot8;
            entity = 19;
            entity = yankee[entity];
            entity = verify.bind(tangon)(entity);
            michal = entity.GestureDetector;
            entity = {};
            entity['gesture'] = report;
            golfie = _closure1_slot8;
            report = 20;
            report = yankee[report];
            oscard = oscard.bind(tangon)(report);
            report = {};
            report['style'] = option;
            offset = _closure1_slot9;
            option = 21;
            option = yankee[option];
            option = verify.bind(tangon)(option);
            verify = option.SafeAreaPaddingView;
            option = {};
            option['bottom'] = sizing;
            option['top'] = variable46;
            yankee = {};
            variable50 = target.wrapper;
            variable51 = yankee;
            result = copyDataProperties(variable51, variable50);
            if(sizing) { _fun00002_ip = 661; continue _fun00001 }
 653:
            romeon = romeon - kiloes;
            foxtra = romeon - backup;
 661:
            romeon = 'height';
            yankee[romeon] = foxtra;
            option['style'] = yankee;
            foxtra = _closure1_slot9;
            romeon = _closure1_slot5;
            yankee = {};
            backup = target.videoWrapper;
            yankee['style'] = backup;
            sizing = _closure1_slot8;
            sequen = _closure1_slot0;
            status = _closure1_slot2;
            backup = 22;
            backup = status[backup];
            backup = sequen.bind(tangon)(backup);
            kiloes = backup.VideoQuestPlayer;
            backup = {};
            backup['quest'] = source;
            backup['captionsEnabled'] = papara;
            kiloes = sizing.bind(tangon)(kiloes, backup);
            backup = new Array(2);
            backup[0] = kiloes;
            ctrled = _closure1_slot9;
            result = _closure1_slot5;
            kiloes = {};
            sizing = target.videoContentWrapper;
            kiloes['style'] = sizing;
            limora = _closure1_slot9;
            sierra = _closure1_slot5;
            record = {};
            sizing = target.videoContentHeaderWrapper;
            record['style'] = sizing;
            cntext = _closure1_slot9;
            config = _closure1_slot5;
            sizing = {};
            whisks = target.videoContentHeading;
            sizing['style'] = whisks;
            quebec = _closure1_slot8;
            variable43 = 23;
            whisks = status[variable43];
            whisks = sequen.bind(tangon)(whisks);
            equals = whisks.Text;
            whisks = {'variant': 'heading-md/semibold', 'color': 'white'};
            variable38 = 16;
            variable36 = status[variable38];
            variable36 = sequen.bind(tangon)(variable36);
            variable41 = variable36.intl;
            variable40 = variable41.formatToPlainString;
            variable36 = status[variable38];
            variable36 = sequen.bind(tangon)(variable36);
            variable36 = variable36.t;
            variable37 = variable36.EQa7oq;
            variable36 = {};
            variable42 = source.config;
            variable42 = variable42.messages;
            variable42 = variable42.questName;
            variable36['questName'] = variable42;
            variable36 = variable40.bind(variable41)(variable37, variable36);
            whisks['children'] = variable36;
            equals = quebec.bind(tangon)(equals, whisks);
            whisks = new Array(2);
            whisks[0] = equals;
            variable36 = _closure1_slot8;
            equals = status[variable43];
            equals = sequen.bind(tangon)(equals);
            quebec = equals.Text;
            equals = {'variant': 'heading-md/semibold', 'color': 'interactive-normal'};
            variable37 = 12;
            variable37 = status[variable37];
            variable40 = sequen.bind(tangon)(variable37);
            variable37 = variable40.formatWatchTaskRemainingTime;
            variable37 = variable37.bind(variable40)(variable47);
            equals['children'] = variable37;
            equals = variable36.bind(tangon)(quebec, equals);
            whisks[1] = equals;
            sizing['children'] = whisks;
            sizing = cntext.bind(tangon)(config, sizing);
            whisks = new Array(2);
            whisks[0] = sizing;
            variable36 = _closure1_slot8;
            sizing = 24;
            config = status[sizing];
            config = sequen.bind(tangon)(config);
            quebec = config.PressableOpacity;
            equals = {};
            config = 'button';
            equals['accessibilityRole'] = config;
            cntext = function() { // Original name: onPress
                michal = _closure2_slot0;
                entity = undefined;
                michal = michal.bind(entity)();
                return entity;
            };
            equals['onPress'] = cntext;
            variable41 = _closure1_slot8;
            cntext = 25;
            cntext = status[cntext];
            cntext = sequen.bind(tangon)(cntext);
            variable40 = cntext.XSmallIcon;
            variable37 = {};
            variable44 = _closure1_slot1;
            cntext = 6;
            variable42 = status[cntext];
            variable42 = variable44.bind(tangon)(variable42);
            variable42 = variable42.colors;
            variable42 = variable42.WHITE;
            variable37['color'] = variable42;
            variable37 = variable41.bind(tangon)(variable40, variable37);
            equals['children'] = variable37;
            equals = variable36.bind(tangon)(quebec, equals);
            whisks[1] = equals;
            record['children'] = whisks;
            sierra = limora.bind(tangon)(sierra, record);
            record = new Array(2);
            record[0] = sierra;
            whisks = _closure1_slot9;
            limora = _closure1_slot5;
            sierra = {};
            equals = target.videoContentFooterWrapper;
            sierra['style'] = equals;
            variable36 = _closure1_slot9;
            quebec = _closure1_slot5;
            equals = {};
            variable37 = target.questDetails;
            equals['style'] = variable37;
            variable41 = _closure1_slot9;
            variable40 = _closure1_slot5;
            variable37 = {};
            variable42 = target.questDetailsGame;
            variable37['style'] = variable42;
            variable48 = _closure1_slot8;
            variable42 = status[variable43];
            variable42 = sequen.bind(tangon)(variable42);
            variable45 = variable42.Text;
            variable42 = {'variant': 'heading-lg/semibold', 'color': 'white'};
            variable49 = source.config;
            variable49 = variable49.messages;
            variable49 = variable49.gameTitle;
            variable42['children'] = variable49;
            variable45 = variable48.bind(tangon)(variable45, variable42);
            variable42 = new Array(2);
            variable42[0] = variable45;
            variable48 = _closure1_slot8;
            variable43 = status[variable43];
            variable43 = sequen.bind(tangon)(variable43);
            variable45 = variable43.Text;
            variable43 = {'variant': 'heading-sm/semibold', 'color': 'text-normal'};
            variable49 = source.config;
            variable49 = variable49.messages;
            variable49 = variable49.gamePublisher;
            variable43['children'] = variable49;
            variable43 = variable48.bind(tangon)(variable45, variable43);
            variable42[1] = variable43;
            variable37['children'] = variable42;
            variable40 = variable41.bind(tangon)(variable40, variable37);
            variable37 = new Array(2);
            variable37[0] = variable40;
            variable42 = _closure1_slot8;
            variable41 = _closure1_slot5;
            variable40 = {};
            variable43 = target.questDetailsReward;
            variable40['style'] = variable43;
            variable45 = _closure1_slot8;
            variable43 = 26;
            variable43 = status[variable43];
            variable44 = variable44.bind(tangon)(variable43);
            variable43 = {};
            variable43['quest'] = source;
            variable48 = 'x-sm';
            variable43['size'] = variable48;
            variable47 = variable47.percentComplete;
            variable43['progress'] = variable47;
            variable43['hasConfetti'] = variable46;
            variable43 = variable45.bind(tangon)(variable44, variable43);
            variable40['children'] = variable43;
            variable40 = variable42.bind(tangon)(variable41, variable40);
            variable37[1] = variable40;
            equals['children'] = variable37;
            quebec = variable36.bind(tangon)(quebec, equals);
            equals = new Array(2);
            equals[0] = quebec;
            variable37 = _closure1_slot8;
            quebec = 27;
            quebec = status[quebec];
            quebec = sequen.bind(tangon)(quebec);
            variable36 = quebec.Button;
            quebec = {};
            quebec['onPress'] = variable39;
            variable39 = status[variable38];
            variable39 = sequen.bind(tangon)(variable39);
            variable40 = variable39.intl;
            variable39 = variable40.string;
            variable38 = status[variable38];
            variable38 = sequen.bind(tangon)(variable38);
            variable38 = variable38.t;
            variable38 = variable38.hvVgAQ;
            variable38 = variable39.bind(variable40)(variable38);
            quebec['text'] = variable38;
            quebec = variable37.bind(tangon)(variable36, quebec);
            equals[1] = quebec;
            sierra['children'] = equals;
            sierra = whisks.bind(tangon)(limora, sierra);
            record[1] = sierra;
            kiloes['children'] = record;
            kiloes = ctrled.bind(tangon)(result, kiloes);
            backup[1] = kiloes;
            yankee['children'] = backup;
            romeon = foxtra.bind(tangon)(romeon, yankee);
            yankee = new Array(2);
            yankee[0] = romeon;
            backup = _closure1_slot9;
            foxtra = _closure1_slot5;
            romeon = {};
            kiloes = target.footer;
            romeon['style'] = kiloes;
            ctrled = _closure1_slot8;
            kiloes = status[sizing];
            kiloes = sequen.bind(tangon)(kiloes);
            result = kiloes.PressableOpacity;
            kiloes = {};
            kiloes['accessibilityRole'] = config;
            kiloes['onPress'] = vacuum;
            record = _closure1_slot8;
            vacuum = 28;
            vacuum = status[vacuum];
            vacuum = sequen.bind(tangon)(vacuum);
            sequen = vacuum.CaptionIcon;
            vacuum = {};
            if(papara) { _fun00002_ip = 1692; continue _fun00001 }
 1679:
            papara = target.iconDisabled;
            papara = papara.color;
            _fun00002_ip = 1702; continue _fun00001;
 1692:
            target = target.icon;
            papara = target.color;
 1702:
            vacuum['color'] = papara;
            vacuum = record.bind(tangon)(sequen, vacuum);
            kiloes['children'] = vacuum;
            result = ctrled.bind(tangon)(result, kiloes);
            kiloes = new Array(3);
            kiloes[0] = result;
            vacuum = _closure1_slot8;
            sequen = _closure1_slot0;
            ctrled = _closure1_slot2;
            sizing = ctrled[sizing];
            sizing = sequen.bind(tangon)(sizing);
            result = sizing.PressableOpacity;
            sizing = {};
            sizing['accessibilityRole'] = config;
            sizing['onPress'] = output;
            record = _closure1_slot8;
            output = 29;
            output = ctrled[output];
            output = sequen.bind(tangon)(output);
            config = output.CopyIcon;
            sequen = {};
            output = _closure1_slot1;
            cntext = ctrled[cntext];
            cntext = output.bind(tangon)(cntext);
            cntext = cntext.colors;
            cntext = cntext.TEXT_NORMAL;
            sequen['color'] = cntext;
            sequen = record.bind(tangon)(config, sequen);
            sizing['children'] = sequen;
            sizing = vacuum.bind(tangon)(result, sizing);
            kiloes[1] = sizing;
            result = _closure1_slot8;
            sizing = 30;
            sizing = ctrled[sizing];
            output = output.bind(tangon)(sizing);
            sizing = {};
            sizing['quest'] = source;
            update = _closure1_slot7;
            update = update.VIDEO_MODAL_MOBILE;
            sizing['location'] = update;
            echoed = function(argFoo) { // Original name: children
                tangon = _closure1_slot8;
                oscard = _closure1_slot0;
                offset = _closure1_slot2;
                entity = 24;
                entity = offset[entity];
                zuuluu = undefined;
                entity = oscard.bind(zuuluu)(entity);
                michal = entity.PressableOpacity;
                entity = {};
                report = 'button';
                entity['accessibilityRole'] = report;
                yankee = argFoo;
                romeon = entity;
                report = copyDataProperties(romeon, yankee);
                golfie = _closure1_slot8;
                report = 31;
                report = offset[report];
                report = oscard.bind(zuuluu)(report);
                oscard = report.MoreHorizontalIcon;
                report = {};
                verify = _closure1_slot1;
                option = 6;
                option = offset[option];
                option = verify.bind(zuuluu)(option);
                option = option.colors;
                option = option.TEXT_NORMAL;
                report['color'] = option;
                oscard = golfie.bind(zuuluu)(oscard, report);
                report = 'children';
                entity[report] = oscard;
                entity = tangon.bind(zuuluu)(michal, entity);
                return entity;
            };
            sizing['children'] = echoed;
            sizing = result.bind(tangon)(output, sizing);
            kiloes[2] = sizing;
            romeon['children'] = kiloes;
            romeon = backup.bind(tangon)(foxtra, romeon);
            yankee[1] = romeon;
            option['children'] = yankee;
            option = offset.bind(tangon)(verify, option);
            report['children'] = option;
            report = golfie.bind(tangon)(oscard, report);
            entity['children'] = report;
            entity = zuuluu.bind(tangon)(michal, entity);
            return entity;
        }
    };
    var _closure1_slot13 = entity;
    entity = global;
    verify = entity.Object;
    option = verify.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = option.bind(verify)(zuuluu, entity, tangon);
    entity = 0;
    tangon = oscard[entity];
    entity = undefined;
    tangon = golfie.bind(entity)(tangon);
    var _closure1_slot3 = tangon;
    tangon = 1;
    golfie = oscard[tangon];
    tangon = argCor;
    tangon = tangon.bind(entity)(golfie);
    var _closure1_slot4 = tangon;
    tangon = 2;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    golfie = tangon.View;
    var _closure1_slot5 = golfie;
    tangon = tangon.StyleSheet;
    var _closure1_slot6 = tangon;
    tangon = 3;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.QuestsExperimentLocations;
    var _closure1_slot7 = tangon;
    tangon = 4;
    golfie = oscard[tangon];
    golfie = report.bind(entity)(golfie);
    golfie = golfie.jsx;
    var _closure1_slot8 = golfie;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.jsxs;
    var _closure1_slot9 = tangon;
    tangon = 5;
    golfie = oscard[tangon];
    verify = report.bind(entity)(golfie);
    option = verify.createStyles;
    golfie = function(argFoo) {
        _fun00003: for(var _fun00004_ip = 0; ; ) switch(_fun00004_ip) {
 0:
            entity = {};
            michal = {};
            option = _closure1_slot1;
            tangon = _closure1_slot2;
            golfie = 6;
            report = tangon[golfie];
            oscard = undefined;
            report = option.bind(oscard)(report);
            report = report.colors;
            report = report.BG_BASE_TERTIARY;
            michal['backgroundColor'] = report;
            yankee = 'column';
            michal['flexDirection'] = yankee;
            entity['wrapper'] = michal;
            michal = {'borderRadius': null, 'backgroundColor': null, 'flexGrow': 1, 'flexShrink': 0, 'overflow': 'hidden'};
            report = tangon[golfie];
            report = option.bind(oscard)(report);
            report = report.radii;
            report = report.xl;
            michal['borderRadius'] = report;
            report = tangon[golfie];
            report = option.bind(oscard)(report);
            report = report.colors;
            report = report.BACKGROUND_ACCENT;
            michal['backgroundColor'] = report;
            offset = 1;
            report = 0;
            entity['videoWrapper'] = michal;
            michal = {};
            verify = _closure1_slot6;
            romeon = verify.absoluteFillObject;
            foxtra = michal;
            verify = copyDataProperties(foxtra, romeon);
            verify = 'flexDirection';
            michal[verify] = yankee;
            yankee = 'box-none';
            verify = 'pointerEvents';
            michal[verify] = yankee;
            verify = 'flexGrow';
            michal[verify] = offset;
            verify = 'flexShrink';
            michal[verify] = report;
            offset = 'space-between';
            verify = 'justifyContent';
            michal[verify] = offset;
            verify = tangon[golfie];
            verify = option.bind(oscard)(verify);
            verify = verify.spacing;
            offset = verify.PX_16;
            verify = 'paddingHorizontal';
            michal[verify] = offset;
            verify = tangon[golfie];
            verify = option.bind(oscard)(verify);
            verify = verify.spacing;
            offset = verify.PX_16;
            verify = 'paddingVertical';
            michal[verify] = offset;
            entity['videoContentWrapper'] = michal;
            michal = {};
            verify = 'row';
            michal['flexDirection'] = verify;
            entity['videoContentHeaderWrapper'] = michal;
            michal = {'flexGrow': 1, 'flexShrink': 1};
            entity['videoContentHeading'] = michal;
            michal = {'alignItems': 'center', 'flexDirection': 'row'};
            verify = tangon[golfie];
            verify = option.bind(oscard)(verify);
            verify = verify.spacing;
            verify = verify.PX_24;
            michal['marginBottom'] = verify;
            entity['questDetails'] = michal;
            michal = {'flexGrow': 1, 'flexShrink': 1};
            entity['questDetailsGame'] = michal;
            michal = {};
            entity['videoContentFooterWrapper'] = michal;
            michal = {'justifyContent': 'flex-end', 'flexDirection': 'row'};
            tangon = tangon[golfie];
            tangon = option.bind(oscard)(tangon);
            tangon = tangon.spacing;
            tangon = tangon.PX_24;
            michal['padding'] = tangon;
            option = argFoo;
            tangon = undefined;
            if(!option) { _fun00004_ip = 409; continue _fun00003 }
 407:
            tangon = 0;
 409:
            michal['paddingBottom'] = tangon;
            report = _closure1_slot1;
            tangon = _closure1_slot2;
            option = tangon[golfie];
            option = report.bind(oscard)(option);
            option = option.spacing;
            option = option.PX_24;
            michal['gap'] = option;
            entity['footer'] = michal;
            michal = {'flexGrow': 0, 'flexShrink': 0};
            entity['questDetailsReward'] = michal;
            michal = {};
            option = tangon[golfie];
            option = report.bind(oscard)(option);
            option = option.colors;
            option = option.TEXT_NORMAL;
            michal['color'] = option;
            entity['icon'] = michal;
            michal = {};
            tangon = tangon[golfie];
            tangon = report.bind(oscard)(tangon);
            tangon = tangon.colors;
            tangon = tangon.TEXT_SECONDARY;
            michal['color'] = tangon;
            entity['iconDisabled'] = michal;
            michal = {};
            zuuluu = _closure1_slot6;
            romeon = zuuluu.absoluteFillObject;
            foxtra = michal;
            zuuluu = copyDataProperties(foxtra, romeon);
            entity['video'] = michal;
            return entity;
        }
    };
    golfie = option.bind(verify)(golfie);
    var _closure1_slot10 = golfie;
    golfie = {};
    option = 'function VideoQuestModalTsx1(){const{interpolate,translateY,maxVerticalTranslate}=this.__closure;return{transform:[{translateY:interpolate(translateY.get(),[0,maxVerticalTranslate],[0,maxVerticalTranslate])}]};}';
    golfie['code'] = option;
    var _closure1_slot11 = golfie;
    tangon = oscard[tangon];
    option = report.bind(entity)(tangon);
    golfie = option.createStyles;
    tangon = {};
    verify = {};
    offset = 'transparent';
    verify['backgroundColor'] = offset;
    tangon['transparentBackground'] = verify;
    tangon = golfie.bind(option)(tangon);
    var _closure1_slot12 = tangon;
    tangon = 34;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/quests/native/VideoQuestModal/VideoQuestModal.tsx';
    tangon = report.bind(oscard)(tangon);
    michal = function(argFoo) { // Original name: VideoQuestModal
        entity = argFoo;
        verify = entity.questId;
        yankee = entity.onClose;
        var _closure2_slot0 = yankee;
        michal = _closure1_slot12;
        tangon = undefined;
        report = michal.bind(tangon)();
        michal = _closure1_slot0;
        golfie = _closure1_slot2;
        oscard = 8;
        oscard = golfie[oscard];
        option = michal.bind(tangon)(oscard);
        oscard = option.useNonNullableQuest;
        offset = oscard.bind(option)(verify);
        var _closure2_slot1 = offset;
        verify = _closure1_slot4;
        option = verify.useMemo;
        oscard = new Array(2);
        oscard[0] = yankee;
        oscard[1] = offset;
        zuuluu = function() {
            entity = {};
            zuuluu = {};
            tangon = true;
            zuuluu['fullscreen'] = tangon;
            tangon = function() { // Original name: headerLeft
                entity = null;
                return entity;
            };
            zuuluu['headerLeft'] = tangon;
            michal = function() { // Original name: render
                tangon = _closure1_slot8;
                verify = _closure1_slot0;
                offset = _closure1_slot2;
                entity = 7;
                entity = offset[entity];
                zuuluu = undefined;
                entity = verify.bind(zuuluu)(entity);
                michal = entity.QuestDockGestureContextProvider;
                entity = {};
                golfie = _closure1_slot8;
                report = 32;
                report = offset[report];
                report = verify.bind(zuuluu)(report);
                oscard = report.QuestContentImpressionTrackerNative;
                report = {};
                option = 13;
                option = offset[option];
                option = verify.bind(zuuluu)(option);
                option = option.QuestContent;
                option = option.VIDEO_MODAL_MOBILE;
                report['questContent'] = option;
                option = _closure2_slot1;
                report['questOrQuests'] = option;
                option = function() { // Original name: children
                    tangon = _closure1_slot8;
                    zuuluu = _closure1_slot13;
                    michal = {'fullHeight': true, 'paddingTop': 0, 'paddingBottom': 0};
                    report = _closure2_slot0;
                    michal['onClose'] = report;
                    entity = _closure2_slot1;
                    michal['quest'] = entity;
                    entity = undefined;
                    entity = tangon.bind(entity)(zuuluu, michal);
                    return entity;
                };
                report['children'] = option;
                report = golfie.bind(zuuluu)(oscard, report);
                entity['children'] = report;
                entity = tangon.bind(zuuluu)(michal, entity);
                return entity;
            };
            zuuluu['render'] = michal;
            michal = 'watch_mobile_video_quest';
            entity[michal] = zuuluu;
            return entity;
        };
        oscard = option.bind(verify)(zuuluu, oscard);
        zuuluu = _closure1_slot8;
        entity = 33;
        entity = golfie[entity];
        entity = michal.bind(tangon)(entity);
        michal = entity.Modal;
        entity = {'hideTitle': true, 'initialRouteName': 'watch_mobile_video_quest'};
        entity['screens'] = oscard;
        oscard = report.transparentBackground;
        entity['viewStyle'] = oscard;
        report = report.transparentBackground;
        entity['containerStyle'] = report;
        entity = zuuluu.bind(tangon)(michal, entity);
        return entity;
    };
    zuuluu['default'] = michal;
    return entity;
})();