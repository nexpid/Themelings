// app/modules/quests/native/VideoQuestModal/VideoQuestModal.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    report = argBar;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    entity = argBaz;
    var _closure1_slot1 = entity;
    var _closure1_slot2 = oscard;
    entity = function(argFoo) { // Original name: VideoQuestModalContent
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            michal = argFoo;
            source = function() { // Original name: handleClose
                michal = _closure2_slot0;
                entity = undefined;
                michal = michal.bind(entity)();
                return entity;
            };
            zuuluu = michal.fullHeight;
            tangon = undefined;
            foxtra = tangon !== zuuluu;
            if(!foxtra) { _fun00002_ip = 30; continue _fun00001 }
 27:
            foxtra = zuuluu;
 30:
            zuuluu = michal.onClose;
            var _closure2_slot0 = zuuluu;
            zuuluu = michal.paddingTop;
            report = 0;
            backup = 0;
            if(!(tangon !== zuuluu)) { _fun00002_ip = 57; continue _fun00001 }
 54:
            backup = zuuluu;
 57:
            michal = michal.paddingBottom;
            sizing = 0;
            if(!(tangon !== michal)) { _fun00002_ip = 72; continue _fun00001 }
 69:
            sizing = michal;
 72:
            oscard = _closure1_slot3;
            zuuluu = oscard.useContext;
            verify = _closure1_slot0;
            romeon = _closure1_slot2;
            michal = 5;
            michal = romeon[michal];
            michal = verify.bind(tangon)(michal);
            michal = michal.QuestDockGestureContext;
            michal = zuuluu.bind(oscard)(michal);
            output = michal.windowDimensions;
            michal = _closure1_slot9;
            kiloes = michal.bind(tangon)(foxtra);
            result = 6;
            michal = romeon[result];
            zuuluu = verify.bind(tangon)(michal);
            michal = zuuluu.useSharedValue;
            offset = michal.bind(zuuluu)(report);
            var _closure2_slot1 = offset;
            michal = output.get;
            michal = michal.bind(output)();
            golfie = michal.height;
            michal = 0.8;
            option = michal * golfie;
            var _closure2_slot2 = option;
            oscard = _closure1_slot1;
            michal = 7;
            michal = romeon[michal];
            zuuluu = oscard.bind(tangon)(michal);
            michal = {};
            yankee = true;
            michal['gestureEnabled'] = yankee;
            michal['height'] = golfie;
            michal['maxTranslate'] = option;
            report = 0.5;
            report = report * golfie;
            michal['thresholdTranslate'] = report;
            michal['translateY'] = offset;
            report = zuuluu.bind(tangon)(michal);
            michal = romeon[result];
            zuuluu = verify.bind(tangon)(michal);
            michal = zuuluu.useAnimatedStyle;
            entity = function() { // Original name: l
                entity = {};
                zuuluu = {};
                report = _closure1_slot0;
                tangon = _closure1_slot2;
                michal = 6;
                tangon = tangon[michal];
                michal = undefined;
                golfie = report.bind(michal)(tangon);
                oscard = golfie.interpolate;
                report = _closure2_slot1;
                tangon = report.get;
                report = tangon.bind(report)();
                option = _closure2_slot2;
                tangon = [0];
                tangon[1] = option;
                option = _closure2_slot2;
                michal = [0];
                michal[1] = option;
                michal = oscard.bind(golfie)(report, tangon, michal);
                zuuluu['translateY'] = michal;
                michal = new Array(1);
                michal[0] = zuuluu;
                entity['transform'] = michal;
                return entity;
            };
            golfie = {};
            result = romeon[result];
            result = verify.bind(tangon)(result);
            result = result.interpolate;
            golfie['interpolate'] = result;
            golfie['translateY'] = offset;
            golfie['maxVerticalTranslate'] = option;
            entity['__closure'] = golfie;
            golfie = 10882296861392.0;
            entity['__workletHash'] = golfie;
            golfie = _closure1_slot10;
            entity['__initData'] = golfie;
            option = michal.bind(zuuluu)(entity);
            zuuluu = _closure1_slot6;
            entity = 8;
            entity = romeon[entity];
            entity = verify.bind(tangon)(entity);
            michal = entity.GestureDetector;
            entity = {};
            entity['gesture'] = report;
            golfie = _closure1_slot6;
            report = 9;
            report = romeon[report];
            oscard = oscard.bind(tangon)(report);
            report = {};
            report['style'] = option;
            offset = _closure1_slot7;
            option = 10;
            option = romeon[option];
            option = verify.bind(tangon)(option);
            verify = option.SafeAreaPaddingView;
            option = {};
            option['bottom'] = foxtra;
            option['top'] = yankee;
            yankee = {};
            variable42 = kiloes.wrapper;
            variable43 = yankee;
            romeon = copyDataProperties(variable43, variable42);
            romeon = output.get;
            romeon = romeon.bind(output)();
            if(foxtra) { _fun00002_ip = 469; continue _fun00001 }
 453:
            foxtra = romeon.maxContentHeight;
            foxtra = foxtra - sizing;
            foxtra = foxtra - backup;
            _fun00002_ip = 474; continue _fun00001;
 469:
            foxtra = romeon.height;
 474:
            romeon = 'height';
            yankee[romeon] = foxtra;
            option['style'] = yankee;
            foxtra = _closure1_slot7;
            romeon = _closure1_slot4;
            yankee = {};
            backup = kiloes.videoWrapper;
            yankee['style'] = backup;
            output = _closure1_slot6;
            update = _closure1_slot0;
            sequen = _closure1_slot2;
            backup = 11;
            backup = sequen[backup];
            backup = update.bind(tangon)(backup);
            sizing = backup.VideoComponent;
            backup = {'style': null, 'source': null, 'resizeMode': 'cover', 'mixWithOthers': 'mix', 'muted': true};
            result = kiloes.video;
            backup['style'] = result;
            result = _closure1_slot8;
            backup['source'] = result;
            sizing = output.bind(tangon)(sizing, backup);
            backup = new Array(2);
            backup[0] = sizing;
            record = _closure1_slot7;
            result = _closure1_slot4;
            output = {};
            sizing = kiloes.videoContentWrapper;
            output['style'] = sizing;
            target = _closure1_slot7;
            papara = _closure1_slot4;
            cntext = {};
            sizing = kiloes.videoContentHeaderWrapper;
            cntext['style'] = sizing;
            vacuum = _closure1_slot6;
            variable38 = 12;
            sizing = sequen[variable38];
            sizing = update.bind(tangon)(sizing);
            ctrled = sizing.Text;
            sizing = {'style': null, 'variant': 'heading-md/semibold', 'color': 'header-primary', 'children': 'Quest name'};
            config = kiloes.videoContentHeading;
            sizing['style'] = config;
            sizing = vacuum.bind(tangon)(ctrled, sizing);
            status = new Array(2);
            status[0] = sizing;
            whisks = _closure1_slot6;
            sizing = 13;
            ctrled = sequen[sizing];
            ctrled = update.bind(tangon)(ctrled);
            limora = ctrled.PressableOpacity;
            sierra = {};
            config = 'button';
            sierra['accessibilityRole'] = config;
            sierra['onPress'] = source;
            variable36 = _closure1_slot6;
            ctrled = 14;
            ctrled = sequen[ctrled];
            ctrled = update.bind(tangon)(ctrled);
            quebec = ctrled.XSmallIcon;
            equals = {};
            vacuum = _closure1_slot1;
            ctrled = 4;
            variable37 = sequen[ctrled];
            variable37 = vacuum.bind(tangon)(variable37);
            variable37 = variable37.colors;
            variable37 = variable37.INTERACTIVE_ACTIVE;
            equals['color'] = variable37;
            equals = variable36.bind(tangon)(quebec, equals);
            sierra['children'] = equals;
            sierra = whisks.bind(tangon)(limora, sierra);
            status[1] = sierra;
            cntext['children'] = status;
            papara = target.bind(tangon)(papara, cntext);
            cntext = new Array(2);
            cntext[0] = papara;
            status = _closure1_slot7;
            target = _closure1_slot4;
            papara = {};
            sierra = kiloes.videoContentFooterWrapper;
            papara['style'] = sierra;
            whisks = _closure1_slot7;
            limora = _closure1_slot4;
            sierra = {};
            equals = kiloes.questDetails;
            sierra['style'] = equals;
            variable36 = _closure1_slot7;
            quebec = _closure1_slot4;
            equals = {};
            variable37 = kiloes.questDetailsGame;
            equals['style'] = variable37;
            variable40 = _closure1_slot6;
            variable37 = sequen[variable38];
            variable37 = update.bind(tangon)(variable37);
            variable39 = variable37.Text;
            variable37 = {'variant': 'heading-lg/semibold', 'color': 'header-primary', 'children': 'Game name'};
            variable39 = variable40.bind(tangon)(variable39, variable37);
            variable37 = new Array(2);
            variable37[0] = variable39;
            variable41 = _closure1_slot6;
            variable39 = sequen[variable38];
            variable39 = update.bind(tangon)(variable39);
            variable40 = variable39.Text;
            variable39 = {'variant': 'heading-sm/semibold', 'color': 'text-normal', 'children': 'Publisher name'};
            variable39 = variable41.bind(tangon)(variable40, variable39);
            variable37[1] = variable39;
            equals['children'] = variable37;
            quebec = variable36.bind(tangon)(quebec, equals);
            equals = new Array(2);
            equals[0] = quebec;
            variable37 = _closure1_slot6;
            variable36 = _closure1_slot4;
            quebec = {};
            variable39 = kiloes.questDetailsReward;
            quebec['style'] = variable39;
            variable40 = _closure1_slot6;
            variable38 = sequen[variable38];
            variable38 = update.bind(tangon)(variable38);
            variable39 = variable38.Text;
            variable38 = {'variant': 'text-sm/medium', 'children': 'Reward'};
            variable38 = variable40.bind(tangon)(variable39, variable38);
            quebec['children'] = variable38;
            quebec = variable37.bind(tangon)(variable36, quebec);
            equals[1] = quebec;
            sierra['children'] = equals;
            limora = whisks.bind(tangon)(limora, sierra);
            sierra = new Array(2);
            sierra[0] = limora;
            equals = _closure1_slot6;
            limora = 15;
            limora = sequen[limora];
            limora = update.bind(tangon)(limora);
            whisks = limora.Button;
            limora = {};
            limora['onPress'] = source;
            quebec = 'Download Now';
            limora['text'] = quebec;
            limora = equals.bind(tangon)(whisks, limora);
            sierra[1] = limora;
            papara['children'] = sierra;
            papara = status.bind(tangon)(target, papara);
            cntext[1] = papara;
            output['children'] = cntext;
            output = record.bind(tangon)(result, output);
            backup[1] = output;
            yankee['children'] = backup;
            romeon = foxtra.bind(tangon)(romeon, yankee);
            yankee = new Array(2);
            yankee[0] = romeon;
            backup = _closure1_slot7;
            foxtra = _closure1_slot4;
            romeon = {};
            kiloes = kiloes.footer;
            romeon['style'] = kiloes;
            result = _closure1_slot6;
            kiloes = sequen[sizing];
            kiloes = update.bind(tangon)(kiloes);
            output = kiloes.PressableOpacity;
            kiloes = {};
            kiloes['accessibilityRole'] = config;
            kiloes['onPress'] = source;
            papara = _closure1_slot6;
            record = 16;
            record = sequen[record];
            record = update.bind(tangon)(record);
            cntext = record.CopyIcon;
            record = {};
            target = sequen[ctrled];
            target = vacuum.bind(tangon)(target);
            target = target.colors;
            target = target.TEXT_NORMAL;
            record['color'] = target;
            record = papara.bind(tangon)(cntext, record);
            kiloes['children'] = record;
            output = result.bind(tangon)(output, kiloes);
            kiloes = new Array(2);
            kiloes[0] = output;
            result = _closure1_slot6;
            sizing = sequen[sizing];
            sizing = update.bind(tangon)(sizing);
            output = sizing.PressableOpacity;
            sizing = {};
            sizing['accessibilityRole'] = config;
            sizing['onPress'] = source;
            source = _closure1_slot6;
            echoed = 17;
            echoed = sequen[echoed];
            echoed = update.bind(tangon)(echoed);
            update = echoed.MoreHorizontalIcon;
            echoed = {};
            ctrled = sequen[ctrled];
            ctrled = vacuum.bind(tangon)(ctrled);
            ctrled = ctrled.colors;
            ctrled = ctrled.TEXT_NORMAL;
            echoed['color'] = ctrled;
            echoed = source.bind(tangon)(update, echoed);
            sizing['children'] = echoed;
            sizing = result.bind(tangon)(output, sizing);
            kiloes[1] = sizing;
            romeon['children'] = kiloes;
            romeon = backup.bind(tangon)(foxtra, romeon);
            yankee[1] = romeon;
            option['children'] = yankee;
            option = offset.bind(tangon)(verify, option);
            report['children'] = option;
            report = golfie.bind(tangon)(oscard, report);
            entity['children'] = report;
            entity = zuuluu.bind(tangon)(michal, entity);
            return entity;
        }
    };
    var _closure1_slot12 = entity;
    entity = global;
    option = entity.Object;
    golfie = option.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(option)(zuuluu, entity, tangon);
    entity = 0;
    golfie = oscard[entity];
    tangon = argCor;
    entity = undefined;
    tangon = tangon.bind(entity)(golfie);
    var _closure1_slot3 = tangon;
    tangon = 1;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    golfie = tangon.View;
    var _closure1_slot4 = golfie;
    tangon = tangon.StyleSheet;
    var _closure1_slot5 = tangon;
    tangon = 2;
    golfie = oscard[tangon];
    golfie = report.bind(entity)(golfie);
    golfie = golfie.jsx;
    var _closure1_slot6 = golfie;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.jsxs;
    var _closure1_slot7 = tangon;
    tangon = {};
    golfie = 'https://cdn.discordapp.com/assets/quests/1303112069985603634/video_high_res2.mp4';
    tangon['uri'] = golfie;
    var _closure1_slot8 = tangon;
    tangon = 3;
    golfie = oscard[tangon];
    verify = report.bind(entity)(golfie);
    option = verify.createStyles;
    golfie = function(argFoo) {
        _fun00003: for(var _fun00004_ip = 0; ; ) switch(_fun00004_ip) {
 0:
            entity = {};
            michal = {};
            option = _closure1_slot1;
            tangon = _closure1_slot2;
            golfie = 4;
            report = tangon[golfie];
            oscard = undefined;
            report = option.bind(oscard)(report);
            report = report.colors;
            report = report.BG_BASE_TERTIARY;
            michal['backgroundColor'] = report;
            yankee = 'column';
            michal['flexDirection'] = yankee;
            entity['wrapper'] = michal;
            michal = {'borderRadius': null, 'backgroundColor': null, 'flexGrow': 1, 'flexShrink': 0, 'overflow': 'hidden'};
            report = tangon[golfie];
            report = option.bind(oscard)(report);
            report = report.radii;
            report = report.xl;
            michal['borderRadius'] = report;
            report = tangon[golfie];
            report = option.bind(oscard)(report);
            report = report.colors;
            report = report.BACKGROUND_ACCENT;
            michal['backgroundColor'] = report;
            offset = 1;
            report = 0;
            entity['videoWrapper'] = michal;
            michal = {};
            verify = _closure1_slot5;
            romeon = verify.absoluteFillObject;
            foxtra = michal;
            verify = copyDataProperties(foxtra, romeon);
            verify = 'flexDirection';
            michal[verify] = yankee;
            verify = 'flexGrow';
            michal[verify] = offset;
            verify = 'flexShrink';
            michal[verify] = report;
            offset = 'space-between';
            verify = 'justifyContent';
            michal[verify] = offset;
            verify = tangon[golfie];
            verify = option.bind(oscard)(verify);
            verify = verify.spacing;
            offset = verify.PX_16;
            verify = 'paddingHorizontal';
            michal[verify] = offset;
            verify = tangon[golfie];
            verify = option.bind(oscard)(verify);
            verify = verify.spacing;
            offset = verify.PX_16;
            verify = 'paddingVertical';
            michal[verify] = offset;
            entity['videoContentWrapper'] = michal;
            michal = {};
            verify = 'row';
            michal['flexDirection'] = verify;
            entity['videoContentHeaderWrapper'] = michal;
            michal = {'flexGrow': 1, 'flexShrink': 1};
            entity['videoContentHeading'] = michal;
            michal = {'alignItems': 'center', 'flexDirection': 'row'};
            verify = tangon[golfie];
            verify = option.bind(oscard)(verify);
            verify = verify.spacing;
            verify = verify.PX_24;
            michal['marginBottom'] = verify;
            entity['questDetails'] = michal;
            michal = {'flexGrow': 1, 'flexShrink': 1};
            entity['questDetailsGame'] = michal;
            michal = {};
            entity['videoContentFooterWrapper'] = michal;
            michal = {'justifyContent': 'flex-end', 'flexDirection': 'row'};
            tangon = tangon[golfie];
            tangon = option.bind(oscard)(tangon);
            tangon = tangon.spacing;
            tangon = tangon.PX_24;
            michal['padding'] = tangon;
            option = argFoo;
            tangon = undefined;
            if(!option) { _fun00004_ip = 396; continue _fun00003 }
 394:
            tangon = 0;
 396:
            michal['paddingBottom'] = tangon;
            report = _closure1_slot1;
            tangon = _closure1_slot2;
            tangon = tangon[golfie];
            tangon = report.bind(oscard)(tangon);
            tangon = tangon.spacing;
            tangon = tangon.PX_24;
            michal['gap'] = tangon;
            entity['footer'] = michal;
            michal = {'flexGrow': 0, 'flexShrink': 0};
            entity['questDetailsReward'] = michal;
            michal = {};
            zuuluu = _closure1_slot5;
            romeon = zuuluu.absoluteFillObject;
            foxtra = michal;
            zuuluu = copyDataProperties(foxtra, romeon);
            entity['video'] = michal;
            return entity;
        }
    };
    golfie = option.bind(verify)(golfie);
    var _closure1_slot9 = golfie;
    golfie = {};
    option = 'function VideoQuestModalTsx1(){const{interpolate,translateY,maxVerticalTranslate}=this.__closure;return{transform:[{translateY:interpolate(translateY.get(),[0,maxVerticalTranslate],[0,maxVerticalTranslate])}]};}';
    golfie['code'] = option;
    var _closure1_slot10 = golfie;
    tangon = oscard[tangon];
    option = report.bind(entity)(tangon);
    golfie = option.createStyles;
    tangon = {};
    verify = {};
    offset = 'transparent';
    verify['backgroundColor'] = offset;
    tangon['transparentBackground'] = verify;
    tangon = golfie.bind(option)(tangon);
    var _closure1_slot11 = tangon;
    tangon = 19;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/quests/native/VideoQuestModal/VideoQuestModal.tsx';
    tangon = report.bind(oscard)(tangon);
    michal = function(argFoo) { // Original name: VideoQuestModal
        entity = argFoo;
        option = entity.onClose;
        var _closure2_slot0 = option;
        zuuluu = _closure1_slot11;
        tangon = undefined;
        report = zuuluu.bind(tangon)();
        golfie = _closure1_slot3;
        oscard = golfie.useMemo;
        zuuluu = new Array(1);
        zuuluu[0] = option;
        michal = function() {
            entity = {};
            zuuluu = {};
            tangon = true;
            zuuluu['fullscreen'] = tangon;
            tangon = function() { // Original name: headerLeft
                entity = null;
                return entity;
            };
            zuuluu['headerLeft'] = tangon;
            michal = function() { // Original name: render
                tangon = _closure1_slot6;
                michal = _closure1_slot0;
                zuuluu = _closure1_slot2;
                entity = 5;
                entity = zuuluu[entity];
                zuuluu = undefined;
                entity = michal.bind(zuuluu)(entity);
                michal = entity.QuestDockGestureContextProvider;
                entity = {};
                golfie = _closure1_slot6;
                oscard = _closure1_slot12;
                report = {'fullHeight': true, 'paddingTop': 0, 'paddingBottom': 0};
                option = _closure2_slot0;
                report['onClose'] = option;
                report = golfie.bind(zuuluu)(oscard, report);
                entity['children'] = report;
                entity = tangon.bind(zuuluu)(michal, entity);
                return entity;
            };
            zuuluu['render'] = michal;
            michal = 'watch_mobile_video_quest';
            entity[michal] = zuuluu;
            return entity;
        };
        oscard = oscard.bind(golfie)(michal, zuuluu);
        zuuluu = _closure1_slot6;
        michal = _closure1_slot0;
        golfie = _closure1_slot2;
        entity = 18;
        entity = golfie[entity];
        entity = michal.bind(tangon)(entity);
        michal = entity.Modal;
        entity = {'hideTitle': true, 'initialRouteName': 'watch_mobile_video_quest'};
        entity['screens'] = oscard;
        oscard = report.transparentBackground;
        entity['viewStyle'] = oscard;
        report = report.transparentBackground;
        entity['containerStyle'] = report;
        entity = zuuluu.bind(tangon)(michal, entity);
        return entity;
    };
    zuuluu['default'] = michal;
    return entity;
})();