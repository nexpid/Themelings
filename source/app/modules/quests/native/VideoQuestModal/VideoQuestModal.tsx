// app/modules/quests/native/VideoQuestModal/VideoQuestModal.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    oscard = argBar;
    kiloes = argBaz;
    zuuluu = argFre;
    golfie = argPlu;
    var _closure1_slot0 = oscard;
    var _closure1_slot1 = kiloes;
    var _closure1_slot2 = golfie;
    entity = global;
    option = entity.Object;
    report = option.defineProperty;
    michal = {};
    entity = true;
    michal['value'] = entity;
    entity = '__esModule';
    entity = report.bind(option)(zuuluu, entity, michal);
    verify = 0;
    michal = golfie[verify];
    entity = undefined;
    michal = kiloes.bind(entity)(michal);
    var _closure1_slot3 = michal;
    foxtra = 1;
    report = golfie[foxtra];
    michal = argCor;
    option = michal.bind(entity)(report);
    var _closure1_slot4 = option;
    output = 2;
    michal = golfie[output];
    michal = oscard.bind(entity)(michal);
    report = michal.View;
    var _closure1_slot5 = report;
    sizing = michal.StyleSheet;
    michal = 3;
    michal = golfie[michal];
    michal = oscard.bind(entity)(michal);
    report = michal.jsx;
    var _closure1_slot6 = report;
    michal = michal.jsxs;
    var _closure1_slot7 = michal;
    michal = {'mass': 1.9, 'damping': 18, 'stiffness': 80, 'overshootClamping': true};
    var _closure1_slot8 = michal;
    michal = {};
    michal['WATCH_VIDEO'] = verify;
    report = 'WATCH_VIDEO';
    michal[verify] = report;
    michal['POST_WATCH_VIDEO'] = foxtra;
    report = 'POST_WATCH_VIDEO';
    michal[foxtra] = report;
    var _closure1_slot9 = michal;
    report = 4;
    report = golfie[report];
    offset = oscard.bind(entity)(report);
    verify = offset.createStyles;
    report = {};
    yankee = {'flexDirection': 'column', 'flexGrow': 1, 'flexShrink': 1, 'zIndex': 1};
    report['wrapper'] = yankee;
    yankee = {};
    yankee['flex'] = foxtra;
    report['contentWrapper'] = yankee;
    yankee = {};
    source = sizing.absoluteFillObject;
    ctrled = yankee;
    romeon = copyDataProperties(ctrled, source);
    romeon = 5;
    backup = golfie[romeon];
    backup = kiloes.bind(entity)(backup);
    backup = backup.radii;
    result = backup.lg;
    backup = 'borderRadius';
    yankee[backup] = result;
    result = golfie[romeon];
    result = kiloes.bind(entity)(result);
    result = result.colors;
    echoed = result.BG_BASE_TERTIARY;
    result = 'backgroundColor';
    yankee[result] = echoed;
    report['contentBackground'] = yankee;
    yankee = {};
    yankee['zIndex'] = output;
    report['modalContentWrapper'] = yankee;
    yankee = {};
    source = sizing.absoluteFillObject;
    ctrled = yankee;
    sizing = copyDataProperties(ctrled, source);
    romeon = golfie[romeon];
    romeon = kiloes.bind(entity)(romeon);
    romeon = romeon.radii;
    romeon = romeon.lg;
    yankee[backup] = romeon;
    romeon = 'flex';
    yankee[romeon] = foxtra;
    backup = 'hidden';
    romeon = 'overflow';
    yankee[romeon] = backup;
    backup = 'none';
    romeon = 'pointerEvents';
    yankee[romeon] = backup;
    romeon = 'zIndex';
    yankee[romeon] = foxtra;
    report['backgroundWrapper'] = yankee;
    report = verify.bind(offset)(report);
    var _closure1_slot10 = report;
    report = {};
    verify = 'function VideoQuestModalTsx1(){const{withSpring,clamp,postWatchAnimationState,BACKGROUND_ENTRANCE_ANIMATION_SPRING_CONFIG,interpolate,CLOUDS_BACKGROUND_INVISIBLE_OFFSET_Y}=this.__closure;return{opacity:withSpring(clamp(postWatchAnimationState.get(),0,1),BACKGROUND_ENTRANCE_ANIMATION_SPRING_CONFIG),transform:[{translateY:withSpring(interpolate(postWatchAnimationState.get(),[0,1],[CLOUDS_BACKGROUND_INVISIBLE_OFFSET_Y,0]),BACKGROUND_ENTRANCE_ANIMATION_SPRING_CONFIG)}]};}';
    report['code'] = verify;
    var _closure1_slot11 = report;
    report = {};
    verify = 'function VideoQuestModalTsx2(){const{withSpring,interpolate,postWatchAnimationState,safeAreaInsets,BACKGROUND_ENTRANCE_ANIMATION_SPRING_CONFIG}=this.__closure;return{transform:[{translateY:withSpring(interpolate(postWatchAnimationState.get(),[0,1],[safeAreaInsets.top,0]),BACKGROUND_ENTRANCE_ANIMATION_SPRING_CONFIG)}],opacity:withSpring(postWatchAnimationState.get(),BACKGROUND_ENTRANCE_ANIMATION_SPRING_CONFIG)};}';
    report['code'] = verify;
    var _closure1_slot12 = report;
    verify = option.memo;
    report = function(argFoo) {
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            michal = argFoo;
            result = michal.onClose;
            golfie = michal.initialStep;
            var _closure2_slot0 = golfie;
            zuuluu = _closure1_slot0;
            tangon = _closure1_slot2;
            michal = 6;
            michal = tangon[michal];
            tangon = undefined;
            zuuluu = zuuluu.bind(tangon)(michal);
            michal = zuuluu.useVideoQuestModalContext;
            michal = michal.bind(zuuluu)();
            michal = michal.quest;
            zuuluu = michal.userStatus;
            oscard = null;
            report = oscard == zuuluu;
            michal = undefined;
            if(report) { _fun00002_ip = 85; continue _fun00001 }
 79:
            michal = zuuluu.completedAt;
 85:
            yankee = oscard != michal;
            var _closure2_slot1 = yankee;
            report = _closure1_slot4;
            zuuluu = report.useState;
            michal = golfie;
            if(!(oscard == michal)) { _fun00002_ip = 133; continue _fun00001 }
 109:
            option = _closure1_slot9;
            if(yankee) { _fun00002_ip = 124; continue _fun00001 }
 116:
            oscard = option.WATCH_VIDEO;
            _fun00002_ip = 130; continue _fun00001;
 124:
            oscard = option.POST_WATCH_VIDEO;
 130:
            michal = oscard;
 133:
            report = zuuluu.bind(report)(michal);
            zuuluu = _closure1_slot3;
            michal = 2;
            michal = zuuluu.bind(tangon)(report, michal);
            report = 0;
            kiloes = michal[report];
            var _closure2_slot2 = kiloes;
            oscard = 1;
            michal = michal[oscard];
            var _closure2_slot3 = michal;
            offset = _closure1_slot4;
            verify = offset.useContext;
            zuuluu = _closure1_slot0;
            michal = _closure1_slot2;
            option = 7;
            option = michal[option];
            option = zuuluu.bind(tangon)(option);
            option = option.QuestDockGestureContext;
            option = verify.bind(offset)(option);
            verify = option.windowDimensions;
            option = _closure1_slot10;
            romeon = option.bind(tangon)();
            foxtra = _closure1_slot1;
            option = 8;
            option = michal[option];
            option = foxtra.bind(tangon)(option);
            option = option.bind(tangon)(verify);
            sizing = option.height;
            verify = offset.useLayoutEffect;
            option = new Array(2);
            option[0] = yankee;
            option[1] = golfie;
            golfie = function() {
                _fun00003: for(var _fun00004_ip = 0; ; ) switch(_fun00004_ip) {
 0:
                    michal = _closure2_slot1;
                    if(!michal) { _fun00004_ip = 20; continue _fun00003 }
 10:
                    tangon = _closure2_slot0;
                    zuuluu = null;
                    michal = zuuluu == tangon;
 20:
                    if(!michal) { _fun00004_ip = 47; continue _fun00003 }
 23:
                    zuuluu = _closure2_slot3;
                    entity = _closure1_slot9;
                    michal = entity.POST_WATCH_VIDEO;
                    entity = undefined;
                    entity = zuuluu.bind(entity)(michal);
 47:
                    entity = undefined;
                    return entity;
                }
            };
            golfie = verify.bind(offset)(golfie, option);
            verify = offset.useCallback;
            option = function() {
                zuuluu = _closure2_slot3;
                entity = _closure1_slot9;
                michal = entity.WATCH_VIDEO;
                entity = undefined;
                michal = zuuluu.bind(entity)(michal);
                return entity;
            };
            golfie = new Array(0);
            output = verify.bind(offset)(option, golfie);
            verify = offset.useCallback;
            option = function() {
                zuuluu = _closure2_slot3;
                entity = _closure1_slot9;
                michal = entity.POST_WATCH_VIDEO;
                entity = undefined;
                michal = zuuluu.bind(entity)(michal);
                return entity;
            };
            golfie = new Array(0);
            update = verify.bind(offset)(option, golfie);
            verify = 9;
            michal = michal[verify];
            zuuluu = zuuluu.bind(tangon)(michal);
            michal = zuuluu.useSharedValue;
            golfie = _closure1_slot9;
            golfie = golfie.POST_WATCH_VIDEO;
            if(!(kiloes === golfie)) { _fun00002_ip = 362; continue _fun00001 }
 359:
            report = oscard;
 362:
            oscard = michal.bind(zuuluu)(report);
            var _closure2_slot4 = oscard;
            offset = _closure1_slot0;
            yankee = _closure1_slot2;
            michal = yankee[verify];
            report = offset.bind(tangon)(michal);
            zuuluu = report.useAnimatedStyle;
            michal = function() { // Original name: V
                entity = {};
                offset = _closure1_slot0;
                yankee = _closure1_slot2;
                tangon = 10;
                michal = yankee[tangon];
                verify = undefined;
                romeon = offset.bind(verify)(michal);
                report = romeon.withSpring;
                option = 9;
                michal = yankee[option];
                kiloes = offset.bind(verify)(michal);
                backup = kiloes.clamp;
                zuuluu = _closure2_slot4;
                michal = zuuluu.get;
                foxtra = michal.bind(zuuluu)();
                michal = 0;
                zuuluu = 1;
                zuuluu = backup.bind(kiloes)(foxtra, michal, zuuluu);
                oscard = _closure1_slot8;
                zuuluu = report.bind(romeon)(zuuluu, oscard);
                entity['opacity'] = zuuluu;
                zuuluu = {};
                tangon = yankee[tangon];
                report = offset.bind(verify)(tangon);
                tangon = report.withSpring;
                option = yankee[option];
                offset = offset.bind(verify)(option);
                verify = offset.interpolate;
                option = _closure2_slot4;
                golfie = option.get;
                option = golfie.bind(option)();
                golfie = new Array(2);
                yankee = -100;
                golfie[0] = yankee;
                golfie[1] = michal;
                michal = [0, 1];
                michal = verify.bind(offset)(option, michal, golfie);
                michal = tangon.bind(report)(michal, oscard);
                zuuluu['translateY'] = michal;
                michal = new Array(1);
                michal[0] = zuuluu;
                entity['transform'] = michal;
                return entity;
            };
            golfie = {};
            foxtra = 10;
            option = yankee[foxtra];
            option = offset.bind(tangon)(option);
            option = option.withSpring;
            golfie['withSpring'] = option;
            option = yankee[verify];
            option = offset.bind(tangon)(option);
            option = option.clamp;
            golfie['clamp'] = option;
            golfie['postWatchAnimationState'] = oscard;
            option = _closure1_slot8;
            golfie['BACKGROUND_ENTRANCE_ANIMATION_SPRING_CONFIG'] = option;
            echoed = yankee[verify];
            echoed = offset.bind(tangon)(echoed);
            echoed = echoed.interpolate;
            golfie['interpolate'] = echoed;
            echoed = -100;
            golfie['CLOUDS_BACKGROUND_INVISIBLE_OFFSET_Y'] = echoed;
            michal['__closure'] = golfie;
            golfie = 11571705142399.0;
            michal['__workletHash'] = golfie;
            golfie = _closure1_slot11;
            michal['__initData'] = golfie;
            source = zuuluu.bind(report)(michal);
            ctrled = _closure1_slot1;
            michal = 11;
            michal = yankee[michal];
            michal = ctrled.bind(tangon)(michal);
            record = michal.bind(tangon)();
            var _closure2_slot5 = record;
            michal = yankee[verify];
            report = offset.bind(tangon)(michal);
            zuuluu = report.useAnimatedStyle;
            michal = function() { // Original name: W
                entity = {};
                verify = {};
                oscard = _closure1_slot0;
                golfie = _closure1_slot2;
                zuuluu = 10;
                michal = golfie[zuuluu];
                tangon = undefined;
                yankee = oscard.bind(tangon)(michal);
                offset = yankee.withSpring;
                michal = 9;
                michal = golfie[michal];
                kiloes = oscard.bind(tangon)(michal);
                backup = kiloes.interpolate;
                romeon = _closure2_slot4;
                option = romeon.get;
                foxtra = option.bind(romeon)();
                option = _closure2_slot5;
                option = option.top;
                romeon = new Array(2);
                romeon[0] = option;
                option = 0;
                romeon[1] = option;
                option = [0, 1];
                option = backup.bind(kiloes)(foxtra, option, romeon);
                report = _closure1_slot8;
                option = offset.bind(yankee)(option, report);
                verify['translateY'] = option;
                option = new Array(1);
                option[0] = verify;
                entity['transform'] = option;
                zuuluu = golfie[zuuluu];
                tangon = oscard.bind(tangon)(zuuluu);
                zuuluu = tangon.withSpring;
                oscard = _closure2_slot4;
                michal = oscard.get;
                michal = michal.bind(oscard)();
                michal = zuuluu.bind(tangon)(michal, report);
                entity['opacity'] = michal;
                return entity;
            };
            golfie = {};
            foxtra = yankee[foxtra];
            foxtra = offset.bind(tangon)(foxtra);
            foxtra = foxtra.withSpring;
            golfie['withSpring'] = foxtra;
            verify = yankee[verify];
            verify = offset.bind(tangon)(verify);
            verify = verify.interpolate;
            golfie['interpolate'] = verify;
            golfie['postWatchAnimationState'] = oscard;
            golfie['safeAreaInsets'] = record;
            golfie['BACKGROUND_ENTRANCE_ANIMATION_SPRING_CONFIG'] = option;
            michal['__closure'] = golfie;
            golfie = 9769051401109.0;
            michal['__workletHash'] = golfie;
            golfie = _closure1_slot12;
            michal['__initData'] = golfie;
            config = zuuluu.bind(report)(michal);
            report = _closure1_slot4;
            zuuluu = report.useEffect;
            michal = new Array(2);
            michal[0] = oscard;
            michal[1] = kiloes;
            entity = function() {
                _fun00005: for(var _fun00006_ip = 0; ; ) switch(_fun00006_ip) {
 0:
                    zuuluu = _closure2_slot4;
                    michal = zuuluu.set;
                    report = _closure2_slot2;
                    entity = _closure1_slot9;
                    tangon = entity.POST_WATCH_VIDEO;
                    entity = 0;
                    if(!(report === tangon)) { _fun00006_ip = 38; continue _fun00005 }
 35:
                    entity = 1;
 38:
                    entity = michal.bind(zuuluu)(entity);
                    entity = undefined;
                    return entity;
                }
            };
            entity = zuuluu.bind(report)(entity, michal);
            zuuluu = _closure1_slot6;
            michal = _closure1_slot5;
            entity = {};
            golfie = _closure1_slot7;
            foxtra = 12;
            report = yankee[foxtra];
            oscard = ctrled.bind(tangon)(report);
            report = {};
            option = romeon.modalContentWrapper;
            report['style'] = option;
            option = {};
            echoed = romeon.backgroundWrapper;
            verify = new Array(2);
            verify[0] = echoed;
            echoed = {};
            echoed['height'] = sizing;
            verify[1] = echoed;
            option['style'] = verify;
            verify = yankee[foxtra];
            echoed = ctrled.bind(tangon)(verify);
            verify = {};
            sequen = romeon.contentBackground;
            vacuum = new Array(2);
            vacuum[0] = sequen;
            sequen = {};
            record = record.top;
            sequen['top'] = record;
            vacuum[1] = sequen;
            verify['style'] = vacuum;
            echoed = zuuluu.bind(tangon)(echoed, verify);
            verify = new Array(3);
            verify[0] = echoed;
            echoed = yankee[foxtra];
            vacuum = ctrled.bind(tangon)(echoed);
            echoed = {};
            record = romeon.contentBackground;
            sequen = new Array(2);
            sequen[0] = record;
            sequen[1] = config;
            echoed['style'] = sequen;
            echoed = zuuluu.bind(tangon)(vacuum, echoed);
            verify[1] = echoed;
            foxtra = yankee[foxtra];
            echoed = ctrled.bind(tangon)(foxtra);
            foxtra = {};
            foxtra['style'] = source;
            source = 13;
            source = yankee[source];
            ctrled = ctrled.bind(tangon)(source);
            source = {};
            vacuum = 'top';
            source['align'] = vacuum;
            source = zuuluu.bind(tangon)(ctrled, source);
            foxtra['children'] = source;
            foxtra = zuuluu.bind(tangon)(echoed, foxtra);
            verify[2] = foxtra;
            option['children'] = verify;
            verify = golfie.bind(tangon)(michal, option);
            option = new Array(2);
            option[0] = verify;
            verify = 14;
            verify = yankee[verify];
            verify = offset.bind(tangon)(verify);
            offset = verify.SafeAreaPaddingView;
            verify = {};
            yankee = true;
            verify['top'] = yankee;
            foxtra = romeon.wrapper;
            yankee = new Array(2);
            yankee[0] = foxtra;
            foxtra = {};
            foxtra['height'] = sizing;
            yankee[1] = foxtra;
            verify['style'] = yankee;
            yankee = {};
            romeon = romeon.contentWrapper;
            yankee['style'] = romeon;
            romeon = _closure1_slot9;
            romeon = romeon.WATCH_VIDEO;
            foxtra = kiloes === romeon;
            if(!foxtra) { _fun00002_ip = 1075; continue _fun00001 }
 1028:
            echoed = _closure1_slot6;
            sizing = _closure1_slot1;
            source = _closure1_slot2;
            romeon = 15;
            romeon = source[romeon];
            sizing = sizing.bind(tangon)(romeon);
            romeon = {};
            romeon['onNavigateToPostWatchVideo'] = update;
            romeon['onClose'] = result;
            romeon['onEnd'] = update;
            foxtra = echoed.bind(tangon)(sizing, romeon);
 1075:
            romeon = new Array(2);
            romeon[0] = foxtra;
            foxtra = _closure1_slot9;
            foxtra = foxtra.POST_WATCH_VIDEO;
            foxtra = kiloes === foxtra;
            if(!foxtra) { _fun00002_ip = 1142; continue _fun00001 }
 1100:
            sizing = _closure1_slot6;
            kiloes = _closure1_slot1;
            echoed = _closure1_slot2;
            backup = 16;
            backup = echoed[backup];
            kiloes = kiloes.bind(tangon)(backup);
            backup = {};
            backup['onClose'] = result;
            backup['onRestartVideo'] = output;
            foxtra = sizing.bind(tangon)(kiloes, backup);
 1142:
            romeon[1] = foxtra;
            yankee['children'] = romeon;
            yankee = golfie.bind(tangon)(michal, yankee);
            verify['children'] = yankee;
            verify = zuuluu.bind(tangon)(offset, verify);
            option[1] = verify;
            report['children'] = option;
            report = golfie.bind(tangon)(oscard, report);
            entity['children'] = report;
            entity = zuuluu.bind(tangon)(michal, entity);
            return entity;
        }
    };
    report = verify.bind(option)(report);
    var _closure1_slot13 = report;
    report = option.memo;
    tangon = function(argFoo) { // Original name: VideoQuestModal
        entity = argFoo;
        verify = entity.questId;
        offset = entity.questContentPosition;
        var _closure2_slot0 = offset;
        foxtra = entity.onClose;
        var _closure2_slot1 = foxtra;
        yankee = entity.videoSessionId;
        var _closure2_slot2 = yankee;
        report = entity.initialStep;
        var _closure2_slot3 = report;
        michal = _closure1_slot0;
        oscard = _closure1_slot2;
        tangon = 17;
        golfie = oscard[tangon];
        tangon = undefined;
        option = michal.bind(tangon)(golfie);
        golfie = option.useNonNullableQuest;
        romeon = golfie.bind(option)(verify);
        var _closure2_slot4 = romeon;
        verify = _closure1_slot4;
        option = verify.useMemo;
        golfie = new Array(5);
        golfie[0] = foxtra;
        golfie[1] = romeon;
        golfie[2] = yankee;
        golfie[3] = offset;
        golfie[4] = report;
        report = function() {
            entity = {};
            zuuluu = {};
            tangon = true;
            zuuluu['fullscreen'] = tangon;
            tangon = function() { // Original name: headerLeft
                entity = null;
                return entity;
            };
            zuuluu['headerLeft'] = tangon;
            michal = function() { // Original name: render
                tangon = _closure1_slot6;
                michal = _closure1_slot1;
                foxtra = _closure1_slot2;
                entity = 6;
                entity = foxtra[entity];
                zuuluu = undefined;
                entity = michal.bind(zuuluu)(entity);
                michal = entity.Provider;
                entity = {};
                oscard = {};
                offset = _closure2_slot4;
                oscard['quest'] = offset;
                golfie = _closure2_slot2;
                oscard['videoSessionId'] = golfie;
                entity['value'] = oscard;
                romeon = _closure1_slot0;
                report = 7;
                report = foxtra[report];
                report = romeon.bind(zuuluu)(report);
                oscard = report.QuestDockGestureContextProvider;
                report = {};
                golfie = 18;
                golfie = foxtra[golfie];
                golfie = romeon.bind(zuuluu)(golfie);
                option = golfie.QuestContentImpressionTrackerNative;
                golfie = {};
                yankee = true;
                golfie['overrideVisibility'] = yankee;
                yankee = 19;
                yankee = foxtra[yankee];
                yankee = romeon.bind(zuuluu)(yankee);
                yankee = yankee.QuestContent;
                yankee = yankee.VIDEO_MODAL_MOBILE;
                golfie['questContent'] = yankee;
                golfie['questOrQuests'] = offset;
                verify = _closure2_slot0;
                golfie['questContentPosition'] = verify;
                verify = function() { // Original name: children
                    tangon = _closure1_slot6;
                    zuuluu = _closure1_slot13;
                    michal = {};
                    report = _closure2_slot3;
                    michal['initialStep'] = report;
                    entity = _closure2_slot1;
                    michal['onClose'] = entity;
                    entity = undefined;
                    entity = tangon.bind(entity)(zuuluu, michal);
                    return entity;
                };
                golfie['children'] = verify;
                golfie = tangon.bind(zuuluu)(option, golfie);
                report['children'] = golfie;
                report = tangon.bind(zuuluu)(oscard, report);
                entity['children'] = report;
                entity = tangon.bind(zuuluu)(michal, entity);
                return entity;
            };
            zuuluu['render'] = michal;
            michal = 'watch_mobile_video_quest';
            entity[michal] = zuuluu;
            return entity;
        };
        report = option.bind(verify)(report, golfie);
        option = verify.useLayoutEffect;
        golfie = function() {
            zuuluu = _closure1_slot0;
            michal = _closure1_slot2;
            entity = 20;
            michal = michal[entity];
            entity = undefined;
            tangon = zuuluu.bind(entity)(michal);
            zuuluu = tangon.lockOrientation;
            michal = 'PORTRAIT';
            entity = true;
            entity = zuuluu.bind(tangon)(michal, entity);
            entity = function() {
                zuuluu = _closure1_slot0;
                michal = _closure1_slot2;
                entity = 20;
                michal = michal[entity];
                entity = undefined;
                tangon = zuuluu.bind(entity)(michal);
                zuuluu = tangon.unlockOrientation;
                michal = {};
                report = false;
                michal['unlockAfterRotatingToPreviousLock'] = report;
                michal = zuuluu.bind(tangon)(michal);
                return entity;
            };
            return entity;
        };
        zuuluu = new Array(0);
        zuuluu = option.bind(verify)(golfie, zuuluu);
        zuuluu = _closure1_slot6;
        entity = 21;
        entity = oscard[entity];
        entity = michal.bind(tangon)(entity);
        michal = entity.Modal;
        entity = {'hideTitle': true, 'initialRouteName': 'watch_mobile_video_quest'};
        entity['screens'] = report;
        entity = zuuluu.bind(tangon)(michal, entity);
        return entity;
    };
    tangon = report.bind(option)(tangon);
    report = 22;
    report = golfie[report];
    golfie = oscard.bind(entity)(report);
    oscard = golfie.fileFinishedImporting;
    report = 'modules/quests/native/VideoQuestModal/VideoQuestModal.tsx';
    report = oscard.bind(golfie)(report);
    zuuluu['default'] = tangon;
    zuuluu['VideoQuestModalSteps'] = michal;
    return entity;
})();