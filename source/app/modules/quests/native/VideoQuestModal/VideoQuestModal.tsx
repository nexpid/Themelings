// app/modules/quests/native/VideoQuestModal/VideoQuestModal.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    report = argBar;
    romeon = argBaz;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    var _closure1_slot1 = romeon;
    var _closure1_slot2 = oscard;
    entity = function(argFoo) { // Original name: VideoQuestModalContent
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            michal = argFoo;
            zuuluu = michal.fullHeight;
            tangon = undefined;
            result = tangon !== zuuluu;
            if(!result) { _fun00002_ip = 23; continue _fun00001 }
 20:
            result = zuuluu;
 23:
            output = michal.onClose;
            zuuluu = michal.paddingTop;
            oscard = 0;
            echoed = 0;
            if(!(tangon !== zuuluu)) { _fun00002_ip = 46; continue _fun00001 }
 43:
            echoed = zuuluu;
 46:
            zuuluu = michal.paddingBottom;
            update = 0;
            if(!(tangon !== zuuluu)) { _fun00002_ip = 61; continue _fun00001 }
 58:
            update = zuuluu;
 61:
            sizing = michal.quest;
            report = _closure1_slot3;
            zuuluu = report.useContext;
            offset = _closure1_slot0;
            romeon = _closure1_slot2;
            michal = 4;
            michal = romeon[michal];
            michal = offset.bind(tangon)(michal);
            michal = michal.QuestDockGestureContext;
            michal = zuuluu.bind(report)(michal);
            report = michal.windowDimensions;
            michal = _closure1_slot6;
            source = michal.bind(tangon)();
            verify = 5;
            michal = romeon[verify];
            zuuluu = offset.bind(tangon)(michal);
            michal = zuuluu.useSharedValue;
            option = michal.bind(zuuluu)(oscard);
            var _closure2_slot0 = option;
            zuuluu = _closure1_slot1;
            michal = 6;
            michal = romeon[michal];
            michal = zuuluu.bind(tangon)(michal);
            michal = michal.bind(tangon)(report);
            kiloes = michal.height;
            backup = michal.maxContentHeight;
            michal = 0.8;
            golfie = michal * kiloes;
            var _closure2_slot1 = golfie;
            michal = 7;
            michal = romeon[michal];
            zuuluu = zuuluu.bind(tangon)(michal);
            michal = {};
            yankee = true;
            michal['gestureEnabled'] = yankee;
            michal['height'] = kiloes;
            michal['maxTranslate'] = golfie;
            report = 0.5;
            report = report * kiloes;
            michal['thresholdTranslate'] = report;
            michal['translateY'] = option;
            report = zuuluu.bind(tangon)(michal);
            michal = romeon[verify];
            zuuluu = offset.bind(tangon)(michal);
            michal = zuuluu.useAnimatedStyle;
            entity = function() { // Original name: h
                entity = {};
                zuuluu = {};
                report = _closure1_slot0;
                tangon = _closure1_slot2;
                michal = 5;
                tangon = tangon[michal];
                michal = undefined;
                golfie = report.bind(michal)(tangon);
                oscard = golfie.interpolate;
                report = _closure2_slot0;
                tangon = report.get;
                report = tangon.bind(report)();
                option = _closure2_slot1;
                tangon = [0];
                tangon[1] = option;
                option = _closure2_slot1;
                michal = [0];
                michal[1] = option;
                michal = oscard.bind(golfie)(report, tangon, michal);
                zuuluu['translateY'] = michal;
                michal = new Array(1);
                michal[0] = zuuluu;
                entity['transform'] = michal;
                return entity;
            };
            oscard = {};
            verify = romeon[verify];
            verify = offset.bind(tangon)(verify);
            verify = verify.interpolate;
            oscard['interpolate'] = verify;
            oscard['translateY'] = option;
            oscard['maxVerticalTranslate'] = golfie;
            entity['__closure'] = oscard;
            oscard = 10882296861392.0;
            entity['__workletHash'] = oscard;
            oscard = _closure1_slot7;
            entity['__initData'] = oscard;
            option = michal.bind(zuuluu)(entity);
            zuuluu = sizing.userStatus;
            michal = null;
            oscard = michal == zuuluu;
            entity = undefined;
            if(oscard) { _fun00002_ip = 374; continue _fun00001 }
 368:
            entity = zuuluu.completedAt;
 374:
            romeon = michal != entity;
            zuuluu = _closure1_slot4;
            verify = _closure1_slot0;
            ctrled = _closure1_slot2;
            entity = 8;
            entity = ctrled[entity];
            entity = verify.bind(tangon)(entity);
            michal = entity.GestureDetector;
            entity = {};
            entity['gesture'] = report;
            golfie = _closure1_slot4;
            oscard = _closure1_slot1;
            report = 9;
            report = ctrled[report];
            oscard = oscard.bind(tangon)(report);
            report = {};
            report['style'] = option;
            offset = _closure1_slot5;
            option = 10;
            option = ctrled[option];
            option = verify.bind(tangon)(option);
            verify = option.SafeAreaPaddingView;
            option = {};
            option['bottom'] = result;
            option['top'] = yankee;
            yankee = {};
            vacuum = source.wrapper;
            sequen = yankee;
            source = copyDataProperties(sequen, vacuum);
            if(result) { _fun00002_ip = 499; continue _fun00001 }
 491:
            backup = backup - update;
            kiloes = backup - echoed;
 499:
            backup = 'height';
            yankee[backup] = kiloes;
            option['style'] = yankee;
            backup = !romeon;
            if(romeon) { _fun00002_ip = 565; continue _fun00001 }
 518:
            echoed = _closure1_slot4;
            kiloes = _closure1_slot1;
            update = _closure1_slot2;
            yankee = 11;
            yankee = update[yankee];
            kiloes = kiloes.bind(tangon)(yankee);
            yankee = {};
            yankee['fullHeight'] = result;
            yankee['onClose'] = output;
            yankee['quest'] = sizing;
            backup = echoed.bind(tangon)(kiloes, yankee);
 565:
            yankee = new Array(2);
            yankee[0] = backup;
            if(!romeon) { _fun00002_ip = 623; continue _fun00001 }
 576:
            kiloes = _closure1_slot4;
            backup = _closure1_slot1;
            echoed = _closure1_slot2;
            foxtra = 12;
            foxtra = echoed[foxtra];
            backup = backup.bind(tangon)(foxtra);
            foxtra = {};
            foxtra['fullHeight'] = result;
            foxtra['onClose'] = output;
            foxtra['quest'] = sizing;
            romeon = kiloes.bind(tangon)(backup, foxtra);
 623:
            yankee[1] = romeon;
            option['children'] = yankee;
            option = offset.bind(tangon)(verify, option);
            report['children'] = option;
            report = golfie.bind(tangon)(oscard, report);
            entity['children'] = report;
            entity = zuuluu.bind(tangon)(michal, entity);
            return entity;
        }
    };
    var _closure1_slot9 = entity;
    entity = global;
    option = entity.Object;
    golfie = option.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(option)(zuuluu, entity, tangon);
    entity = 0;
    golfie = oscard[entity];
    tangon = argCor;
    entity = undefined;
    tangon = tangon.bind(entity)(golfie);
    var _closure1_slot3 = tangon;
    tangon = 1;
    golfie = oscard[tangon];
    golfie = report.bind(entity)(golfie);
    golfie = golfie.jsx;
    var _closure1_slot4 = golfie;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.jsxs;
    var _closure1_slot5 = tangon;
    tangon = 2;
    golfie = oscard[tangon];
    verify = report.bind(entity)(golfie);
    option = verify.createStyles;
    golfie = {};
    offset = {};
    yankee = 3;
    yankee = oscard[yankee];
    yankee = romeon.bind(entity)(yankee);
    yankee = yankee.colors;
    yankee = yankee.BG_BASE_TERTIARY;
    offset['backgroundColor'] = yankee;
    yankee = 'column';
    offset['flexDirection'] = yankee;
    golfie['wrapper'] = offset;
    golfie = option.bind(verify)(golfie);
    var _closure1_slot6 = golfie;
    golfie = {};
    option = 'function VideoQuestModalTsx1(){const{interpolate,translateY,maxVerticalTranslate}=this.__closure;return{transform:[{translateY:interpolate(translateY.get(),[0,maxVerticalTranslate],[0,maxVerticalTranslate])}]};}';
    golfie['code'] = option;
    var _closure1_slot7 = golfie;
    tangon = oscard[tangon];
    option = report.bind(entity)(tangon);
    golfie = option.createStyles;
    tangon = {};
    verify = {};
    offset = 'transparent';
    verify['backgroundColor'] = offset;
    tangon['transparentBackground'] = verify;
    tangon = golfie.bind(option)(tangon);
    var _closure1_slot8 = tangon;
    tangon = 17;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/quests/native/VideoQuestModal/VideoQuestModal.tsx';
    tangon = report.bind(oscard)(tangon);
    michal = function(argFoo) { // Original name: VideoQuestModal
        entity = argFoo;
        verify = entity.questId;
        yankee = entity.onClose;
        var _closure2_slot0 = yankee;
        michal = _closure1_slot8;
        tangon = undefined;
        report = michal.bind(tangon)();
        michal = _closure1_slot0;
        golfie = _closure1_slot2;
        oscard = 13;
        oscard = golfie[oscard];
        option = michal.bind(tangon)(oscard);
        oscard = option.useNonNullableQuest;
        offset = oscard.bind(option)(verify);
        var _closure2_slot1 = offset;
        verify = _closure1_slot3;
        option = verify.useMemo;
        oscard = new Array(2);
        oscard[0] = yankee;
        oscard[1] = offset;
        zuuluu = function() {
            entity = {};
            zuuluu = {};
            tangon = true;
            zuuluu['fullscreen'] = tangon;
            tangon = function() { // Original name: headerLeft
                entity = null;
                return entity;
            };
            zuuluu['headerLeft'] = tangon;
            michal = function() { // Original name: render
                tangon = _closure1_slot4;
                verify = _closure1_slot0;
                offset = _closure1_slot2;
                entity = 4;
                entity = offset[entity];
                zuuluu = undefined;
                entity = verify.bind(zuuluu)(entity);
                michal = entity.QuestDockGestureContextProvider;
                entity = {};
                golfie = _closure1_slot4;
                report = 14;
                report = offset[report];
                report = verify.bind(zuuluu)(report);
                oscard = report.QuestContentImpressionTrackerNative;
                report = {};
                option = 15;
                option = offset[option];
                option = verify.bind(zuuluu)(option);
                option = option.QuestContent;
                option = option.VIDEO_MODAL_MOBILE;
                report['questContent'] = option;
                option = _closure2_slot1;
                report['questOrQuests'] = option;
                option = function() { // Original name: children
                    tangon = _closure1_slot4;
                    zuuluu = _closure1_slot9;
                    michal = {'fullHeight': true, 'paddingTop': 0, 'paddingBottom': 0};
                    report = _closure2_slot0;
                    michal['onClose'] = report;
                    entity = _closure2_slot1;
                    michal['quest'] = entity;
                    entity = undefined;
                    entity = tangon.bind(entity)(zuuluu, michal);
                    return entity;
                };
                report['children'] = option;
                report = golfie.bind(zuuluu)(oscard, report);
                entity['children'] = report;
                entity = tangon.bind(zuuluu)(michal, entity);
                return entity;
            };
            zuuluu['render'] = michal;
            michal = 'watch_mobile_video_quest';
            entity[michal] = zuuluu;
            return entity;
        };
        oscard = option.bind(verify)(zuuluu, oscard);
        zuuluu = _closure1_slot4;
        entity = 16;
        entity = golfie[entity];
        entity = michal.bind(tangon)(entity);
        michal = entity.Modal;
        entity = {'hideTitle': true, 'initialRouteName': 'watch_mobile_video_quest'};
        entity['screens'] = oscard;
        oscard = report.transparentBackground;
        entity['viewStyle'] = oscard;
        report = report.transparentBackground;
        entity['containerStyle'] = report;
        entity = zuuluu.bind(tangon)(michal, entity);
        return entity;
    };
    zuuluu['default'] = michal;
    return entity;
})();