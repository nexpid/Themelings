// app/modules/quests/native/VideoQuestModal/VideoQuestModal.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    oscard = argBar;
    foxtra = argBaz;
    zuuluu = argFre;
    golfie = argPlu;
    var _closure1_slot0 = oscard;
    var _closure1_slot1 = foxtra;
    var _closure1_slot2 = golfie;
    entity = function(argFoo) { // Original name: VideoQuestModalContent
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            michal = argFoo;
            update = michal.onClose;
            michal = michal.initialStep;
            var _closure2_slot0 = michal;
            oscard = _closure1_slot0;
            tangon = _closure1_slot2;
            zuuluu = 6;
            report = tangon[zuuluu];
            tangon = undefined;
            oscard = oscard.bind(tangon)(report);
            report = oscard.useVideoQuestModalContext;
            report = report.bind(oscard)();
            report = report.quest;
            oscard = report.userStatus;
            option = null;
            golfie = option == oscard;
            report = undefined;
            if(golfie) { _fun00002_ip = 85; continue _fun00001 }
 79:
            report = oscard.completedAt;
 85:
            kiloes = option != report;
            var _closure2_slot1 = kiloes;
            golfie = _closure1_slot4;
            oscard = golfie.useState;
            report = michal;
            if(!(option == report)) { _fun00002_ip = 133; continue _fun00001 }
 109:
            verify = _closure1_slot8;
            if(kiloes) { _fun00002_ip = 124; continue _fun00001 }
 116:
            option = verify.WATCH_VIDEO;
            _fun00002_ip = 130; continue _fun00001;
 124:
            option = verify.POST_WATCH_VIDEO;
 130:
            report = option;
 133:
            golfie = oscard.bind(golfie)(report);
            oscard = _closure1_slot3;
            report = 2;
            oscard = oscard.bind(tangon)(golfie, report);
            offset = 0;
            output = oscard[offset];
            report = 1;
            report = oscard[report];
            var _closure2_slot2 = report;
            golfie = _closure1_slot4;
            oscard = golfie.useContext;
            verify = _closure1_slot0;
            romeon = _closure1_slot2;
            report = 7;
            report = romeon[report];
            report = verify.bind(tangon)(report);
            report = report.QuestDockGestureContext;
            report = oscard.bind(golfie)(report);
            golfie = report.windowDimensions;
            option = _closure1_slot4;
            report = option.useContext;
            oscard = _closure1_slot1;
            zuuluu = romeon[zuuluu];
            zuuluu = oscard.bind(tangon)(zuuluu);
            zuuluu = report.bind(option)(zuuluu);
            zuuluu = zuuluu.isModalPanGestureActive;
            var _closure2_slot3 = zuuluu;
            report = _closure1_slot9;
            backup = report.bind(tangon)();
            source = 8;
            report = romeon[source];
            option = verify.bind(tangon)(report);
            report = option.useSharedValue;
            echoed = report.bind(option)(offset);
            var _closure2_slot4 = echoed;
            report = 9;
            report = romeon[report];
            report = oscard.bind(tangon)(report);
            report = report.bind(tangon)(golfie);
            foxtra = report.height;
            report = 0.8;
            result = report * foxtra;
            var _closure2_slot5 = result;
            offset = _closure1_slot4;
            option = offset.useCallback;
            golfie = new Array(1);
            golfie[0] = zuuluu;
            report = function() {
                michal = _closure2_slot3;
                entity = true;
                michal['current'] = entity;
                entity = undefined;
                return entity;
            };
            option = option.bind(offset)(report, golfie);
            offset = _closure1_slot4;
            golfie = offset.useCallback;
            report = new Array(1);
            report[0] = zuuluu;
            zuuluu = function() {
                michal = _closure2_slot3;
                entity = false;
                michal['current'] = entity;
                entity = undefined;
                return entity;
            };
            golfie = golfie.bind(offset)(zuuluu, report);
            zuuluu = 10;
            zuuluu = romeon[zuuluu];
            report = oscard.bind(tangon)(zuuluu);
            zuuluu = {};
            yankee = true;
            zuuluu['gestureEnabled'] = yankee;
            zuuluu['height'] = foxtra;
            zuuluu['maxTranslate'] = result;
            offset = 0.5;
            offset = offset * foxtra;
            zuuluu['thresholdTranslate'] = offset;
            zuuluu['translateY'] = echoed;
            zuuluu['onStart'] = option;
            zuuluu['onEnd'] = golfie;
            report = report.bind(tangon)(zuuluu);
            zuuluu = romeon[source];
            option = verify.bind(tangon)(zuuluu);
            golfie = option.useAnimatedStyle;
            zuuluu = function() { // Original name: T
                entity = {};
                zuuluu = {};
                report = _closure1_slot0;
                tangon = _closure1_slot2;
                michal = 8;
                tangon = tangon[michal];
                michal = undefined;
                golfie = report.bind(michal)(tangon);
                oscard = golfie.interpolate;
                report = _closure2_slot4;
                tangon = report.get;
                report = tangon.bind(report)();
                option = _closure2_slot5;
                tangon = [0];
                tangon[1] = option;
                option = _closure2_slot5;
                michal = [0];
                michal[1] = option;
                michal = oscard.bind(golfie)(report, tangon, michal);
                zuuluu['translateY'] = michal;
                michal = new Array(1);
                michal[0] = zuuluu;
                entity['transform'] = michal;
                return entity;
            };
            offset = {};
            source = romeon[source];
            source = verify.bind(tangon)(source);
            source = source.interpolate;
            offset['interpolate'] = source;
            offset['translateY'] = echoed;
            offset['maxVerticalTranslate'] = result;
            zuuluu['__closure'] = offset;
            offset = 10882296861392.0;
            zuuluu['__workletHash'] = offset;
            offset = _closure1_slot10;
            zuuluu['__initData'] = offset;
            option = golfie.bind(option)(zuuluu);
            offset = _closure1_slot4;
            golfie = offset.useLayoutEffect;
            zuuluu = new Array(2);
            zuuluu[0] = kiloes;
            zuuluu[1] = michal;
            michal = function() {
                _fun00003: for(var _fun00004_ip = 0; ; ) switch(_fun00004_ip) {
 0:
                    michal = _closure2_slot1;
                    if(!michal) { _fun00004_ip = 20; continue _fun00003 }
 10:
                    tangon = _closure2_slot0;
                    zuuluu = null;
                    michal = zuuluu == tangon;
 20:
                    if(!michal) { _fun00004_ip = 47; continue _fun00003 }
 23:
                    zuuluu = _closure2_slot2;
                    entity = _closure1_slot8;
                    michal = entity.POST_WATCH_VIDEO;
                    entity = undefined;
                    entity = zuuluu.bind(entity)(michal);
 47:
                    entity = undefined;
                    return entity;
                }
            };
            michal = golfie.bind(offset)(michal, zuuluu);
            offset = _closure1_slot4;
            golfie = offset.useCallback;
            zuuluu = function() {
                zuuluu = _closure2_slot2;
                entity = _closure1_slot8;
                michal = entity.WATCH_VIDEO;
                entity = undefined;
                michal = zuuluu.bind(entity)(michal);
                return entity;
            };
            michal = new Array(0);
            echoed = golfie.bind(offset)(zuuluu, michal);
            golfie = _closure1_slot4;
            zuuluu = golfie.useCallback;
            michal = function() {
                zuuluu = _closure2_slot2;
                entity = _closure1_slot8;
                michal = entity.POST_WATCH_VIDEO;
                entity = undefined;
                michal = zuuluu.bind(entity)(michal);
                return entity;
            };
            entity = new Array(0);
            ctrled = zuuluu.bind(golfie)(michal, entity);
            zuuluu = _closure1_slot6;
            entity = 11;
            entity = romeon[entity];
            entity = verify.bind(tangon)(entity);
            michal = entity.GestureDetector;
            entity = {};
            entity['gesture'] = report;
            golfie = _closure1_slot6;
            report = 12;
            report = romeon[report];
            oscard = oscard.bind(tangon)(report);
            report = {};
            report['style'] = option;
            offset = _closure1_slot6;
            option = 13;
            option = romeon[option];
            option = verify.bind(tangon)(option);
            verify = option.SafeAreaPaddingView;
            option = {};
            option['top'] = yankee;
            romeon = backup.wrapper;
            yankee = new Array(2);
            yankee[0] = romeon;
            romeon = {};
            romeon['height'] = foxtra;
            yankee[1] = romeon;
            option['style'] = yankee;
            foxtra = _closure1_slot7;
            romeon = _closure1_slot5;
            yankee = {};
            backup = backup.contentWrapper;
            yankee['style'] = backup;
            backup = _closure1_slot8;
            backup = backup.WATCH_VIDEO;
            kiloes = output === backup;
            if(!kiloes) { _fun00002_ip = 820; continue _fun00001 }
 778:
            source = _closure1_slot6;
            result = _closure1_slot1;
            vacuum = _closure1_slot2;
            backup = 14;
            backup = vacuum[backup];
            result = result.bind(tangon)(backup);
            backup = {};
            backup['onNavigateToPostWatchVideo'] = ctrled;
            backup['onClose'] = update;
            kiloes = source.bind(tangon)(result, backup);
 820:
            backup = new Array(2);
            backup[0] = kiloes;
            kiloes = _closure1_slot8;
            kiloes = kiloes.POST_WATCH_VIDEO;
            kiloes = output === kiloes;
            if(!kiloes) { _fun00002_ip = 887; continue _fun00001 }
 845:
            result = _closure1_slot6;
            output = _closure1_slot1;
            source = _closure1_slot2;
            sizing = 15;
            sizing = source[sizing];
            output = output.bind(tangon)(sizing);
            sizing = {};
            sizing['onClose'] = update;
            sizing['onRestartVideo'] = echoed;
            kiloes = result.bind(tangon)(output, sizing);
 887:
            backup[1] = kiloes;
            yankee['children'] = backup;
            yankee = foxtra.bind(tangon)(romeon, yankee);
            option['children'] = yankee;
            option = offset.bind(tangon)(verify, option);
            report['children'] = option;
            report = golfie.bind(tangon)(oscard, report);
            entity['children'] = report;
            entity = zuuluu.bind(tangon)(michal, entity);
            return entity;
        }
    };
    var _closure1_slot12 = entity;
    entity = global;
    option = entity.Object;
    report = option.defineProperty;
    michal = {};
    entity = true;
    michal['value'] = entity;
    entity = '__esModule';
    entity = report.bind(option)(zuuluu, entity, michal);
    option = 0;
    michal = golfie[option];
    entity = undefined;
    michal = foxtra.bind(entity)(michal);
    var _closure1_slot3 = michal;
    romeon = 1;
    report = golfie[romeon];
    michal = argCor;
    michal = michal.bind(entity)(report);
    var _closure1_slot4 = michal;
    michal = 2;
    michal = golfie[michal];
    michal = oscard.bind(entity)(michal);
    michal = michal.View;
    var _closure1_slot5 = michal;
    michal = 3;
    michal = golfie[michal];
    michal = oscard.bind(entity)(michal);
    report = michal.jsx;
    var _closure1_slot6 = report;
    michal = michal.jsxs;
    var _closure1_slot7 = michal;
    michal = {};
    michal['WATCH_VIDEO'] = option;
    report = 'WATCH_VIDEO';
    michal[option] = report;
    michal['POST_WATCH_VIDEO'] = romeon;
    report = 'POST_WATCH_VIDEO';
    michal[romeon] = report;
    var _closure1_slot8 = michal;
    report = 4;
    option = golfie[report];
    offset = oscard.bind(entity)(option);
    verify = offset.createStyles;
    option = {};
    yankee = {'flexDirection': 'column', 'flexGrow': 1, 'flexShrink': 1};
    option['wrapper'] = yankee;
    yankee = {};
    yankee['flex'] = romeon;
    romeon = 5;
    backup = golfie[romeon];
    backup = foxtra.bind(entity)(backup);
    backup = backup.colors;
    backup = backup.BG_BASE_TERTIARY;
    yankee['backgroundColor'] = backup;
    romeon = golfie[romeon];
    romeon = foxtra.bind(entity)(romeon);
    romeon = romeon.radii;
    romeon = romeon.lg;
    yankee['borderRadius'] = romeon;
    option['contentWrapper'] = yankee;
    option = verify.bind(offset)(option);
    var _closure1_slot9 = option;
    option = {};
    verify = 'function VideoQuestModalTsx1(){const{interpolate,translateY,maxVerticalTranslate}=this.__closure;return{transform:[{translateY:interpolate(translateY.get(),[0,maxVerticalTranslate],[0,maxVerticalTranslate])}]};}';
    option['code'] = verify;
    var _closure1_slot10 = option;
    report = golfie[report];
    verify = oscard.bind(entity)(report);
    option = verify.createStyles;
    report = {};
    offset = {};
    yankee = 'transparent';
    offset['backgroundColor'] = yankee;
    report['transparentBackground'] = offset;
    report = option.bind(verify)(report);
    var _closure1_slot11 = report;
    report = 20;
    report = golfie[report];
    golfie = oscard.bind(entity)(report);
    oscard = golfie.fileFinishedImporting;
    report = 'modules/quests/native/VideoQuestModal/VideoQuestModal.tsx';
    report = oscard.bind(golfie)(report);
    tangon = function(argFoo) { // Original name: VideoQuestModal
        entity = argFoo;
        verify = entity.questId;
        romeon = entity.questContentPosition;
        var _closure2_slot0 = romeon;
        kiloes = entity.onClose;
        var _closure2_slot1 = kiloes;
        foxtra = entity.videoSessionId;
        var _closure2_slot2 = foxtra;
        yankee = entity.initialStep;
        var _closure2_slot3 = yankee;
        michal = _closure1_slot11;
        tangon = undefined;
        report = michal.bind(tangon)();
        michal = _closure1_slot0;
        golfie = _closure1_slot2;
        oscard = 16;
        oscard = golfie[oscard];
        option = michal.bind(tangon)(oscard);
        oscard = option.useNonNullableQuest;
        backup = oscard.bind(option)(verify);
        var _closure2_slot4 = backup;
        verify = _closure1_slot4;
        option = verify.useRef;
        oscard = false;
        offset = option.bind(verify)(oscard);
        var _closure2_slot5 = offset;
        verify = _closure1_slot4;
        option = verify.useMemo;
        oscard = new Array(6);
        oscard[0] = kiloes;
        oscard[1] = backup;
        oscard[2] = foxtra;
        oscard[3] = romeon;
        oscard[4] = yankee;
        oscard[5] = offset;
        zuuluu = function() {
            entity = {};
            zuuluu = {};
            tangon = true;
            zuuluu['fullscreen'] = tangon;
            tangon = function() { // Original name: headerLeft
                entity = null;
                return entity;
            };
            zuuluu['headerLeft'] = tangon;
            michal = function() { // Original name: render
                tangon = _closure1_slot6;
                michal = _closure1_slot1;
                kiloes = _closure1_slot2;
                entity = 6;
                entity = kiloes[entity];
                zuuluu = undefined;
                entity = michal.bind(zuuluu)(entity);
                michal = entity.Provider;
                entity = {};
                report = {};
                romeon = _closure2_slot4;
                report['quest'] = romeon;
                oscard = _closure2_slot2;
                report['videoSessionId'] = oscard;
                oscard = _closure2_slot5;
                report['isModalPanGestureActive'] = oscard;
                entity['value'] = report;
                golfie = _closure1_slot6;
                backup = _closure1_slot0;
                report = 7;
                report = kiloes[report];
                report = backup.bind(zuuluu)(report);
                oscard = report.QuestDockGestureContextProvider;
                report = {};
                offset = _closure1_slot6;
                option = 17;
                option = kiloes[option];
                option = backup.bind(zuuluu)(option);
                verify = option.QuestContentImpressionTrackerNative;
                option = {};
                foxtra = true;
                option['overrideVisibility'] = foxtra;
                foxtra = 18;
                foxtra = kiloes[foxtra];
                foxtra = backup.bind(zuuluu)(foxtra);
                foxtra = foxtra.QuestContent;
                foxtra = foxtra.VIDEO_MODAL_MOBILE;
                option['questContent'] = foxtra;
                option['questOrQuests'] = romeon;
                yankee = _closure2_slot0;
                option['questContentPosition'] = yankee;
                yankee = function() { // Original name: children
                    tangon = _closure1_slot6;
                    zuuluu = _closure1_slot12;
                    michal = {};
                    report = _closure2_slot3;
                    michal['initialStep'] = report;
                    entity = _closure2_slot1;
                    michal['onClose'] = entity;
                    entity = undefined;
                    entity = tangon.bind(entity)(zuuluu, michal);
                    return entity;
                };
                option['children'] = yankee;
                option = offset.bind(zuuluu)(verify, option);
                report['children'] = option;
                report = golfie.bind(zuuluu)(oscard, report);
                entity['children'] = report;
                entity = tangon.bind(zuuluu)(michal, entity);
                return entity;
            };
            zuuluu['render'] = michal;
            michal = 'watch_mobile_video_quest';
            entity[michal] = zuuluu;
            return entity;
        };
        oscard = option.bind(verify)(zuuluu, oscard);
        zuuluu = _closure1_slot6;
        entity = 19;
        entity = golfie[entity];
        entity = michal.bind(tangon)(entity);
        michal = entity.Modal;
        entity = {'hideTitle': true, 'initialRouteName': 'watch_mobile_video_quest'};
        entity['screens'] = oscard;
        oscard = report.transparentBackground;
        entity['viewStyle'] = oscard;
        report = report.transparentBackground;
        entity['containerStyle'] = report;
        entity = zuuluu.bind(tangon)(michal, entity);
        return entity;
    };
    zuuluu['default'] = tangon;
    zuuluu['VideoQuestModalSteps'] = michal;
    return entity;
})();