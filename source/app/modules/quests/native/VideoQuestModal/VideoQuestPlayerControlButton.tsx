// app/modules/quests/native/VideoQuestModal/VideoQuestPlayerControlButton.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    report = argBar;
    romeon = argBaz;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    var _closure1_slot1 = romeon;
    var _closure1_slot2 = oscard;
    entity = global;
    option = entity.Object;
    golfie = option.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(option)(zuuluu, entity, tangon);
    entity = 0;
    golfie = oscard[entity];
    tangon = argCor;
    entity = undefined;
    golfie = tangon.bind(entity)(golfie);
    tangon = 1;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.jsx;
    var _closure1_slot3 = tangon;
    tangon = 2;
    tangon = oscard[tangon];
    verify = report.bind(entity)(tangon);
    option = verify.createStyles;
    tangon = {};
    offset = {};
    kiloes = 0.5;
    offset['opacity'] = kiloes;
    tangon['disabled'] = offset;
    offset = {};
    yankee = 3;
    foxtra = oscard[yankee];
    foxtra = romeon.bind(entity)(foxtra);
    foxtra = foxtra.radii;
    foxtra = foxtra.round;
    offset['borderRadius'] = foxtra;
    foxtra = 'hidden';
    offset['overflow'] = foxtra;
    tangon['container'] = offset;
    offset = {};
    foxtra = 4;
    foxtra = oscard[foxtra];
    backup = romeon.bind(entity)(foxtra);
    foxtra = oscard[yankee];
    foxtra = romeon.bind(entity)(foxtra);
    foxtra = foxtra.unsafe_rawColors;
    foxtra = foxtra.BLACK_500;
    backup = backup.bind(entity)(foxtra);
    foxtra = backup.alpha;
    backup = foxtra.bind(backup)(kiloes);
    foxtra = backup.hex;
    foxtra = foxtra.bind(backup)();
    offset['backgroundColor'] = foxtra;
    yankee = oscard[yankee];
    yankee = romeon.bind(entity)(yankee);
    yankee = yankee.spacing;
    yankee = yankee.PX_12;
    offset['padding'] = yankee;
    tangon['blur'] = offset;
    tangon = option.bind(verify)(tangon);
    var _closure1_slot4 = tangon;
    tangon = golfie.memo;
    michal = function(argFoo) {
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            zuuluu = argFoo;
            offset = zuuluu.style;
            option = zuuluu.children;
            entity = null;
            michal = Object.create(entity);
            entity = 0;
            michal['style'] = entity;
            michal['children'] = entity;
            kiloes = {};
            backup = zuuluu;
            foxtra = michal;
            oscard = copyDataProperties(kiloes, backup, foxtra);
            entity = _closure1_slot4;
            tangon = undefined;
            verify = entity.bind(tangon)();
            zuuluu = _closure1_slot3;
            michal = _closure1_slot0;
            golfie = _closure1_slot2;
            entity = 5;
            entity = golfie[entity];
            entity = michal.bind(tangon)(entity);
            michal = entity.PressableOpacity;
            entity = {};
            yankee = verify.container;
            golfie = new Array(3);
            golfie[0] = yankee;
            yankee = oscard.disabled;
            if(!yankee) { _fun00002_ip = 111; continue _fun00001 }
 106:
            yankee = verify.disabled;
 111:
            golfie[1] = yankee;
            golfie[2] = offset;
            entity['style'] = golfie;
            kiloes = entity;
            backup = oscard;
            oscard = copyDataProperties(kiloes, backup);
            golfie = _closure1_slot3;
            oscard = _closure1_slot1;
            offset = _closure1_slot2;
            report = 6;
            report = offset[report];
            oscard = oscard.bind(tangon)(report);
            report = {'style': null, 'blurAmount': 0.2, 'blurStyle': 'default', 'blurTheme': 'dark'};
            verify = verify.blur;
            report['style'] = verify;
            report['children'] = option;
            oscard = golfie.bind(tangon)(oscard, report);
            report = 'children';
            entity[report] = oscard;
            entity = zuuluu.bind(tangon)(michal, entity);
            return entity;
        }
    };
    michal = tangon.bind(golfie)(michal);
    tangon = 7;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/quests/native/VideoQuestModal/VideoQuestPlayerControlButton.tsx';
    tangon = report.bind(oscard)(tangon);
    zuuluu['VideoQuestPlayerControlButton'] = michal;
    return entity;
})();