// app/modules/quests/native/QuestBottomSheet/QuestBottomSheetConsoleConnect.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    report = argBar;
    yankee = argBaz;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    var _closure1_slot1 = yankee;
    var _closure1_slot2 = oscard;
    entity = function(argFoo) { // Original name: NonInlineConsoleConnection
        entity = argFoo;
        golfie = entity.consoles;
        entity = entity.onConsoleSelect;
        var _closure2_slot0 = entity;
        tangon = _closure1_slot6;
        michal = _closure1_slot0;
        zuuluu = _closure1_slot2;
        entity = 15;
        entity = zuuluu[entity];
        zuuluu = undefined;
        entity = michal.bind(zuuluu)(entity);
        michal = entity.TableRowGroup;
        entity = {};
        oscard = golfie.map;
        report = function(argFoo) {
            entity = argFoo;
            report = _closure1_slot6;
            tangon = _closure1_slot8;
            zuuluu = {};
            verify = zuuluu;
            option = entity;
            michal = copyDataProperties(verify, option);
            oscard = _closure2_slot0;
            michal = 'onPress';
            zuuluu[michal] = oscard;
            michal = entity.type;
            entity = undefined;
            entity = report.bind(entity)(tangon, zuuluu, michal);
            return entity;
        };
        report = oscard.bind(golfie)(report);
        entity['children'] = report;
        entity = tangon.bind(zuuluu)(michal, entity);
        return entity;
    };
    var _closure1_slot7 = entity;
    entity = function(argFoo) { // Original name: ConsoleRow
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            zuuluu = argFoo;
            entity = zuuluu.onPress;
            var _closure2_slot0 = entity;
            option = null;
            michal = Object.create(option);
            entity = 0;
            michal['onPress'] = entity;
            output = {};
            sizing = zuuluu;
            kiloes = michal;
            oscard = copyDataProperties(output, sizing, kiloes);
            var _closure2_slot1 = oscard;
            michal = oscard.type;
            entity = _closure1_slot4;
            entity = entity.PLAYSTATION;
            if(!(entity !== michal)) { _fun00002_ip = 299; continue _fun00001 }
 66:
            entity = _closure1_slot4;
            entity = entity.XBOX;
            if(!(entity !== michal)) { _fun00002_ip = 82; continue _fun00001 }
 80:
            return option;
 82:
            tangon = _closure1_slot6;
            romeon = _closure1_slot0;
            verify = _closure1_slot2;
            entity = 16;
            entity = verify[entity];
            zuuluu = undefined;
            entity = romeon.bind(zuuluu)(entity);
            michal = entity.TableRow;
            entity = {};
            offset = true;
            entity['arrow'] = offset;
            foxtra = _closure1_slot6;
            offset = 19;
            offset = verify[offset];
            offset = romeon.bind(zuuluu)(offset);
            yankee = offset.XboxNeutralIcon;
            offset = {};
            offset = foxtra.bind(zuuluu)(yankee, offset);
            entity['icon'] = offset;
            backup = 18;
            offset = verify[backup];
            offset = romeon.bind(zuuluu)(offset);
            yankee = offset.intl;
            offset = yankee.string;
            verify = verify[backup];
            verify = romeon.bind(zuuluu)(verify);
            verify = verify.t;
            verify = verify.Nfvo7+;
            verify = offset.bind(yankee)(verify);
            entity['label'] = verify;
            verify = oscard.account;
            offset = option != verify;
            verify = undefined;
            if(!offset) { _fun00002_ip = 275; continue _fun00001 }
 223:
            foxtra = _closure1_slot0;
            offset = _closure1_slot2;
            yankee = offset[backup];
            yankee = foxtra.bind(zuuluu)(yankee);
            romeon = yankee.intl;
            yankee = romeon.string;
            offset = offset[backup];
            offset = foxtra.bind(zuuluu)(offset);
            offset = offset.t;
            offset = offset.u30/ur;
            verify = yankee.bind(romeon)(offset);
 275:
            entity['subLabel'] = verify;
            verify = function() { // Original name: onPress
                zuuluu = _closure2_slot0;
                michal = _closure2_slot1;
                entity = undefined;
                entity = zuuluu.bind(entity)(michal);
                return entity;
            };
            entity['onPress'] = verify;
            entity = tangon.bind(zuuluu)(michal, entity);
            return entity;
 299:
            tangon = _closure1_slot6;
            foxtra = _closure1_slot0;
            verify = _closure1_slot2;
            entity = 16;
            entity = verify[entity];
            zuuluu = undefined;
            entity = foxtra.bind(zuuluu)(entity);
            michal = entity.TableRow;
            entity = {};
            offset = true;
            entity['arrow'] = offset;
            romeon = _closure1_slot6;
            offset = 17;
            offset = verify[offset];
            offset = foxtra.bind(zuuluu)(offset);
            yankee = offset.PlaystationNeutralIcon;
            offset = {};
            offset = romeon.bind(zuuluu)(yankee, offset);
            entity['icon'] = offset;
            yankee = 18;
            offset = verify[yankee];
            offset = foxtra.bind(zuuluu)(offset);
            romeon = offset.intl;
            offset = romeon.string;
            verify = verify[yankee];
            verify = foxtra.bind(zuuluu)(verify);
            verify = verify.t;
            verify = verify.JafL6u;
            verify = offset.bind(romeon)(verify);
            entity['label'] = verify;
            oscard = oscard.account;
            option = option != oscard;
            oscard = undefined;
            if(!option) { _fun00002_ip = 494; continue _fun00001 }
 442:
            offset = _closure1_slot0;
            golfie = _closure1_slot2;
            option = golfie[yankee];
            option = offset.bind(zuuluu)(option);
            verify = option.intl;
            option = verify.string;
            golfie = golfie[yankee];
            golfie = offset.bind(zuuluu)(golfie);
            golfie = golfie.t;
            golfie = golfie.u30/ur;
            oscard = option.bind(verify)(golfie);
 494:
            entity['subLabel'] = oscard;
            report = function() { // Original name: onPress
                zuuluu = _closure2_slot0;
                michal = _closure2_slot1;
                entity = undefined;
                entity = zuuluu.bind(entity)(michal);
                return entity;
            };
            entity['onPress'] = report;
            entity = tangon.bind(zuuluu)(michal, entity);
            return entity;
        }
    };
    var _closure1_slot8 = entity;
    entity = global;
    option = entity.Object;
    golfie = option.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(option)(zuuluu, entity, tangon);
    entity = 0;
    golfie = oscard[entity];
    tangon = argCor;
    entity = undefined;
    tangon = tangon.bind(entity)(golfie);
    var _closure1_slot3 = tangon;
    tangon = 1;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.View;
    tangon = 2;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    golfie = tangon.PlatformTypes;
    var _closure1_slot4 = golfie;
    tangon = tangon.UserSettingsSections;
    var _closure1_slot5 = tangon;
    tangon = 3;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    golfie = tangon.jsx;
    var _closure1_slot6 = golfie;
    golfie = tangon.jsxs;
    tangon = tangon.Fragment;
    offset = 4;
    tangon = oscard[offset];
    tangon = yankee.bind(entity)(tangon);
    tangon = tangon.unsafe_rawColors;
    tangon = tangon.XBOX;
    tangon = oscard[offset];
    tangon = yankee.bind(entity)(tangon);
    tangon = tangon.unsafe_rawColors;
    tangon = tangon.PLAYSTATION;
    tangon = 5;
    tangon = oscard[tangon];
    option = report.bind(entity)(tangon);
    golfie = option.createStyles;
    tangon = {};
    verify = {'display': 'flex', 'flexDirection': 'row', 'gap': null, 'justifyContent': 'space-between'};
    offset = oscard[offset];
    offset = yankee.bind(entity)(offset);
    offset = offset.spacing;
    offset = offset.PX_16;
    verify['gap'] = offset;
    tangon['platformButtonsContainer'] = verify;
    verify = {'flex': 1, 'display': 'flex', 'justifyContent': 'center', 'alignItems': 'center'};
    tangon['platformButton'] = verify;
    tangon = golfie.bind(option)(tangon);
    tangon = 20;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/quests/native/QuestBottomSheet/QuestBottomSheetConsoleConnect.tsx';
    tangon = report.bind(oscard)(tangon);
    michal = function(argFoo) { // Original name: QuestBottomSheetConsoleConnect
        entity = argFoo;
        option = entity.quest;
        var _closure2_slot0 = option;
        michal = entity.step;
        var _closure2_slot1 = michal;
        entity = entity.sourceQuestContent;
        var _closure2_slot2 = entity;
        oscard = _closure1_slot0;
        golfie = _closure1_slot2;
        michal = 6;
        michal = golfie[michal];
        tangon = undefined;
        zuuluu = oscard.bind(tangon)(michal);
        michal = zuuluu.useConnectedAccounts;
        michal = michal.bind(zuuluu)();
        michal = michal.xboxAndPlaystationAccounts;
        var _closure2_slot3 = michal;
        zuuluu = 7;
        zuuluu = golfie[zuuluu];
        oscard = oscard.bind(tangon)(zuuluu);
        zuuluu = oscard.useTrackQuestContentClickedWithImpression;
        zuuluu = zuuluu.bind(oscard)();
        var _closure2_slot4 = zuuluu;
        golfie = _closure1_slot3;
        oscard = golfie.useMemo;
        zuuluu = new Array(2);
        zuuluu[0] = option;
        zuuluu[1] = michal;
        michal = function() {
            zuuluu = _closure1_slot0;
            michal = _closure1_slot2;
            entity = 8;
            michal = michal[entity];
            entity = undefined;
            zuuluu = zuuluu.bind(entity)(michal);
            michal = zuuluu.supportedConsoles;
            entity = _closure2_slot0;
            zuuluu = michal.bind(zuuluu)(entity);
            michal = zuuluu.map;
            entity = function(argFoo) {
                zuuluu = argFoo;
                var _closure4_slot0 = zuuluu;
                entity = {};
                entity['type'] = zuuluu;
                tangon = _closure2_slot3;
                zuuluu = tangon.find;
                michal = function(argFoo) {
                    entity = argFoo;
                    michal = entity.type;
                    entity = _closure4_slot0;
                    entity = michal === entity;
                    return entity;
                };
                michal = zuuluu.bind(tangon)(michal);
                entity['account'] = michal;
                return entity;
            };
            entity = michal.bind(zuuluu)(entity);
            return entity;
        };
        oscard = oscard.bind(golfie)(michal, zuuluu);
        michal = function() { // Original name: openQuestBottomSheet
            report = _closure1_slot1;
            michal = _closure1_slot2;
            entity = 9;
            tangon = michal[entity];
            entity = undefined;
            oscard = report.bind(entity)(tangon);
            report = oscard.openLazy;
            tangon = _closure1_slot0;
            zuuluu = 12;
            zuuluu = michal[zuuluu];
            tangon = tangon.bind(entity)(zuuluu);
            zuuluu = 11;
            zuuluu = michal[zuuluu];
            michal = michal.paths;
            tangon = tangon.bind(entity)(zuuluu, michal);
            zuuluu = {};
            golfie = _closure2_slot0;
            golfie = golfie.id;
            zuuluu['questId'] = golfie;
            golfie = _closure2_slot1;
            zuuluu['initialStep'] = golfie;
            michal = _closure2_slot2;
            zuuluu['sourceQuestContent'] = michal;
            michal = 'QuestBottomSheet';
            michal = report.bind(oscard)(tangon, michal, zuuluu);
            return entity;
        };
        var _closure2_slot5 = michal;
        zuuluu = _closure1_slot6;
        michal = _closure1_slot7;
        entity = {};
        entity['consoles'] = oscard;
        report = function(argFoo) { // Original name: onConsoleSelect
            _fun00003: for(var _fun00004_ip = 0; ; ) switch(_fun00004_ip) {
 0:
                report = argFoo;
                michal = report.account;
                entity = null;
                if(!(entity == michal)) { _fun00004_ip = 178; continue _fun00003 }
 18:
                golfie = _closure2_slot4;
                zuuluu = {};
                entity = _closure2_slot0;
                entity = entity.id;
                zuuluu['questId'] = entity;
                verify = _closure1_slot0;
                oscard = _closure1_slot2;
                entity = 13;
                option = oscard[entity];
                entity = undefined;
                option = verify.bind(entity)(option);
                option = option.QuestContent;
                option = option.QUEST_BOTTOM_SHEET;
                zuuluu['questContent'] = option;
                option = 7;
                option = oscard[option];
                option = verify.bind(entity)(option);
                option = option.QuestContentCTA;
                option = option.CONNECT_CONSOLE;
                zuuluu['questContentCTA'] = option;
                option = _closure2_slot2;
                zuuluu['sourceQuestContent'] = option;
                zuuluu = golfie.bind(entity)(zuuluu);
                zuuluu = _closure1_slot1;
                michal = 14;
                michal = oscard[michal];
                zuuluu = zuuluu.bind(entity)(michal);
                michal = {};
                report = report.type;
                michal['platformType'] = report;
                report = 'quests';
                michal['location'] = report;
                tangon = _closure2_slot5;
                michal['onClose'] = tangon;
                michal = zuuluu.bind(entity)(michal);
                return entity;
 178:
                oscard = _closure2_slot4;
                entity = {};
                michal = _closure2_slot0;
                michal = michal.id;
                entity['questId'] = michal;
                zuuluu = _closure1_slot0;
                report = _closure1_slot2;
                michal = 13;
                option = report[michal];
                michal = undefined;
                option = zuuluu.bind(michal)(option);
                option = option.QuestContent;
                option = option.QUEST_BOTTOM_SHEET;
                entity['questContent'] = option;
                option = 7;
                option = report[option];
                option = zuuluu.bind(michal)(option);
                option = option.QuestContentCTA;
                option = option.VIEW_CONSOLE_CONNECTIONS;
                entity['questContentCTA'] = option;
                golfie = _closure2_slot2;
                entity['sourceQuestContent'] = golfie;
                entity = oscard.bind(michal)(entity);
                oscard = _closure1_slot1;
                entity = 9;
                entity = report[entity];
                oscard = oscard.bind(michal)(entity);
                entity = oscard.hideActionSheet;
                entity = entity.bind(oscard)();
                entity = 10;
                entity = report[entity];
                zuuluu = zuuluu.bind(michal)(entity);
                michal = zuuluu.openUserSettings;
                entity = {};
                tangon = _closure1_slot5;
                tangon = tangon.CONNECTIONS;
                entity['screen'] = tangon;
                entity = michal.bind(zuuluu)(entity);
                entity = undefined;
                return entity;
            }
        };
        entity['onConsoleSelect'] = report;
        entity = zuuluu.bind(tangon)(michal, entity);
        return entity;
    };
    zuuluu['default'] = michal;
    return entity;
})();