// app/modules/quests/native/QuestBottomSheet/QuestBottomSheetConsoleConnect.tsx
export default (function(argFoo, argBar, argBaz, argCorge, _, argFred, argPlugh) {
    report = argBar;
    yankee = argBaz;
    zulu = argFred;
    oscar = argPlugh;
    var _closure1_slot0 = report;
    var _closure1_slot1 = yankee;
    var _closure1_slot2 = oscar;
    entity = function(argFoo) { // Original name: NonInlineConsoleConnection
        entity = argFoo;
        golf = entity.consoles;
        entity = entity.onConsoleSelect;
        var _closure2_slot0 = entity;
        tango = _closure1_slot6;
        mike = _closure1_slot0;
        zulu = _closure1_slot2;
        entity = 15;
        entity = zulu[entity];
        zulu = undefined;
        entity = mike.bind(zulu)(entity);
        mike = entity.TableRowGroup;
        entity = {};
        oscar = golf.map;
        report = function(argFoo) {
            entity = argFoo;
            report = _closure1_slot6;
            tango = _closure1_slot8;
            zulu = {};
            verify = zulu;
            options = entity;
            mike = copyDataProperties(verify, options);
            oscar = _closure2_slot0;
            mike = 'onPress';
            zulu[mike] = oscar;
            mike = entity.type;
            entity = undefined;
            entity = report.bind(entity)(tango, zulu, mike);
            return entity;
        };
        report = oscar.bind(golf)(report);
        entity['children'] = report;
        entity = tango.bind(zulu)(mike, entity);
        return entity;
    };
    var _closure1_slot7 = entity;
    entity = function(argFoo) { // Original name: ConsoleRow
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            zulu = argFoo;
            entity = zulu.onPress;
            var _closure2_slot0 = entity;
            options = null;
            mike = Object.create(options);
            entity = 0;
            mike['onPress'] = entity;
            output = {};
            sizing = zulu;
            kilo = mike;
            oscar = copyDataProperties(output, sizing, kilo);
            var _closure2_slot1 = oscar;
            mike = oscar.type;
            entity = _closure1_slot4;
            entity = entity.PLAYSTATION;
            if(!(entity !== mike)) { _fun00002_ip = 299; continue _fun00001 }
 66:
            entity = _closure1_slot4;
            entity = entity.XBOX;
            if(!(entity !== mike)) { _fun00002_ip = 82; continue _fun00001 }
 80:
            return options;
 82:
            tango = _closure1_slot6;
            romeo = _closure1_slot0;
            verify = _closure1_slot2;
            entity = 16;
            entity = verify[entity];
            zulu = undefined;
            entity = romeo.bind(zulu)(entity);
            mike = entity.TableRow;
            entity = {};
            offset = true;
            entity['arrow'] = offset;
            foxtrot = _closure1_slot6;
            offset = 19;
            offset = verify[offset];
            offset = romeo.bind(zulu)(offset);
            yankee = offset.XboxNeutralIcon;
            offset = {};
            offset = foxtrot.bind(zulu)(yankee, offset);
            entity['icon'] = offset;
            backup = 18;
            offset = verify[backup];
            offset = romeo.bind(zulu)(offset);
            yankee = offset.intl;
            offset = yankee.string;
            verify = verify[backup];
            verify = romeo.bind(zulu)(verify);
            verify = verify.t;
            verify = verify.Nfvo7+;
            verify = offset.bind(yankee)(verify);
            entity['label'] = verify;
            verify = oscar.account;
            offset = options != verify;
            verify = undefined;
            if(!offset) { _fun00002_ip = 275; continue _fun00001 }
 223:
            foxtrot = _closure1_slot0;
            offset = _closure1_slot2;
            yankee = offset[backup];
            yankee = foxtrot.bind(zulu)(yankee);
            romeo = yankee.intl;
            yankee = romeo.string;
            offset = offset[backup];
            offset = foxtrot.bind(zulu)(offset);
            offset = offset.t;
            offset = offset.u30/ur;
            verify = yankee.bind(romeo)(offset);
 275:
            entity['subLabel'] = verify;
            verify = function() { // Original name: onPress
                zulu = _closure2_slot0;
                mike = _closure2_slot1;
                entity = undefined;
                entity = zulu.bind(entity)(mike);
                return entity;
            };
            entity['onPress'] = verify;
            entity = tango.bind(zulu)(mike, entity);
            return entity;
 299:
            tango = _closure1_slot6;
            foxtrot = _closure1_slot0;
            verify = _closure1_slot2;
            entity = 16;
            entity = verify[entity];
            zulu = undefined;
            entity = foxtrot.bind(zulu)(entity);
            mike = entity.TableRow;
            entity = {};
            offset = true;
            entity['arrow'] = offset;
            romeo = _closure1_slot6;
            offset = 17;
            offset = verify[offset];
            offset = foxtrot.bind(zulu)(offset);
            yankee = offset.PlaystationNeutralIcon;
            offset = {};
            offset = romeo.bind(zulu)(yankee, offset);
            entity['icon'] = offset;
            yankee = 18;
            offset = verify[yankee];
            offset = foxtrot.bind(zulu)(offset);
            romeo = offset.intl;
            offset = romeo.string;
            verify = verify[yankee];
            verify = foxtrot.bind(zulu)(verify);
            verify = verify.t;
            verify = verify.JafL6u;
            verify = offset.bind(romeo)(verify);
            entity['label'] = verify;
            oscar = oscar.account;
            options = options != oscar;
            oscar = undefined;
            if(!options) { _fun00002_ip = 492; continue _fun00001 }
 440:
            offset = _closure1_slot0;
            golf = _closure1_slot2;
            options = golf[yankee];
            options = offset.bind(zulu)(options);
            verify = options.intl;
            options = verify.string;
            golf = golf[yankee];
            golf = offset.bind(zulu)(golf);
            golf = golf.t;
            golf = golf.u30/ur;
            oscar = options.bind(verify)(golf);
 492:
            entity['subLabel'] = oscar;
            report = function() { // Original name: onPress
                zulu = _closure2_slot0;
                mike = _closure2_slot1;
                entity = undefined;
                entity = zulu.bind(entity)(mike);
                return entity;
            };
            entity['onPress'] = report;
            entity = tango.bind(zulu)(mike, entity);
            return entity;
        }
    };
    var _closure1_slot8 = entity;
    entity = global;
    options = entity.Object;
    golf = options.defineProperty;
    tango = {};
    entity = true;
    tango['value'] = entity;
    entity = '__esModule';
    entity = golf.bind(options)(zulu, entity, tango);
    entity = 0;
    golf = oscar[entity];
    tango = argCorge;
    entity = undefined;
    tango = tango.bind(entity)(golf);
    var _closure1_slot3 = tango;
    tango = 1;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.View;
    tango = 2;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    golf = tango.PlatformTypes;
    var _closure1_slot4 = golf;
    tango = tango.UserSettingsSections;
    var _closure1_slot5 = tango;
    tango = 3;
    golf = oscar[tango];
    golf = report.bind(entity)(golf);
    golf = golf.jsx;
    var _closure1_slot6 = golf;
    golf = oscar[tango];
    golf = report.bind(entity)(golf);
    golf = golf.jsxs;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.Fragment;
    offset = 4;
    tango = oscar[offset];
    tango = yankee.bind(entity)(tango);
    tango = tango.unsafe_rawColors;
    tango = tango.XBOX;
    tango = oscar[offset];
    tango = yankee.bind(entity)(tango);
    tango = tango.unsafe_rawColors;
    tango = tango.PLAYSTATION;
    tango = 5;
    tango = oscar[tango];
    options = report.bind(entity)(tango);
    golf = options.createStyles;
    tango = {};
    verify = {'display': 'flex', 'flexDirection': 'row', 'gap': null, 'justifyContent': 'space-between'};
    offset = oscar[offset];
    offset = yankee.bind(entity)(offset);
    offset = offset.spacing;
    offset = offset.PX_16;
    verify['gap'] = offset;
    tango['platformButtonsContainer'] = verify;
    verify = {'flex': 1, 'display': 'flex', 'justifyContent': 'center', 'alignItems': 'center'};
    tango['platformButton'] = verify;
    tango = golf.bind(options)(tango);
    tango = 20;
    tango = oscar[tango];
    oscar = report.bind(entity)(tango);
    report = oscar.fileFinishedImporting;
    tango = 'modules/quests/native/QuestBottomSheet/QuestBottomSheetConsoleConnect.tsx';
    tango = report.bind(oscar)(tango);
    mike = function(argFoo) { // Original name: QuestBottomSheetConsoleConnect
        entity = argFoo;
        options = entity.quest;
        var _closure2_slot0 = options;
        entity = entity.step;
        var _closure2_slot1 = entity;
        oscar = _closure1_slot0;
        golf = _closure1_slot2;
        mike = 6;
        mike = golf[mike];
        tango = undefined;
        zulu = oscar.bind(tango)(mike);
        mike = zulu.useConnectedAccounts;
        mike = mike.bind(zulu)();
        mike = mike.xboxAndPlaystationAccounts;
        var _closure2_slot2 = mike;
        zulu = 7;
        zulu = golf[zulu];
        oscar = oscar.bind(tango)(zulu);
        zulu = oscar.useTrackQuestContentClickedWithImpression;
        zulu = zulu.bind(oscar)();
        var _closure2_slot3 = zulu;
        golf = _closure1_slot3;
        oscar = golf.useMemo;
        zulu = new Array(2);
        zulu[0] = options;
        zulu[1] = mike;
        mike = function() {
            zulu = _closure1_slot0;
            mike = _closure1_slot2;
            entity = 8;
            mike = mike[entity];
            entity = undefined;
            zulu = zulu.bind(entity)(mike);
            mike = zulu.supportedConsoles;
            entity = _closure2_slot0;
            zulu = mike.bind(zulu)(entity);
            mike = zulu.map;
            entity = function(argFoo) {
                zulu = argFoo;
                var _closure4_slot0 = zulu;
                entity = {};
                entity['type'] = zulu;
                tango = _closure2_slot2;
                zulu = tango.find;
                mike = function(argFoo) {
                    entity = argFoo;
                    mike = entity.type;
                    entity = _closure4_slot0;
                    entity = mike === entity;
                    return entity;
                };
                mike = zulu.bind(tango)(mike);
                entity['account'] = mike;
                return entity;
            };
            entity = mike.bind(zulu)(entity);
            return entity;
        };
        oscar = oscar.bind(golf)(mike, zulu);
        mike = function() { // Original name: openQuestBottomSheet
            report = _closure1_slot1;
            mike = _closure1_slot2;
            entity = 9;
            tango = mike[entity];
            entity = undefined;
            oscar = report.bind(entity)(tango);
            report = oscar.openLazy;
            tango = _closure1_slot0;
            zulu = 12;
            zulu = mike[zulu];
            tango = tango.bind(entity)(zulu);
            zulu = 11;
            zulu = mike[zulu];
            mike = mike.paths;
            tango = tango.bind(entity)(zulu, mike);
            zulu = {};
            golf = _closure2_slot0;
            golf = golf.id;
            zulu['questId'] = golf;
            mike = _closure2_slot1;
            zulu['initialStep'] = mike;
            mike = 'QuestBottomSheet';
            mike = report.bind(oscar)(tango, mike, zulu);
            return entity;
        };
        var _closure2_slot4 = mike;
        zulu = _closure1_slot6;
        mike = _closure1_slot7;
        entity = {};
        entity['consoles'] = oscar;
        report = function(argFoo) { // Original name: onConsoleSelect
            _fun00003: for(var _fun00004_ip = 0; ; ) switch(_fun00004_ip) {
 0:
                report = argFoo;
                mike = report.account;
                entity = null;
                if(!(entity == mike)) { _fun00004_ip = 169; continue _fun00003 }
 18:
                golf = _closure2_slot3;
                zulu = {};
                entity = _closure2_slot0;
                entity = entity.id;
                zulu['questId'] = entity;
                verify = _closure1_slot0;
                oscar = _closure1_slot2;
                entity = 13;
                options = oscar[entity];
                entity = undefined;
                options = verify.bind(entity)(options);
                options = options.QuestContent;
                options = options.QUEST_BOTTOM_SHEET;
                zulu['questContent'] = options;
                options = 7;
                options = oscar[options];
                options = verify.bind(entity)(options);
                options = options.QuestContentCTA;
                options = options.CONNECT_CONSOLE;
                zulu['questContentCTA'] = options;
                zulu = golf.bind(entity)(zulu);
                zulu = _closure1_slot1;
                mike = 14;
                mike = oscar[mike];
                zulu = zulu.bind(entity)(mike);
                mike = {};
                report = report.type;
                mike['platformType'] = report;
                report = 'quests';
                mike['location'] = report;
                tango = _closure2_slot4;
                mike['onClose'] = tango;
                mike = zulu.bind(entity)(mike);
                return entity;
 169:
                oscar = _closure2_slot3;
                entity = {};
                mike = _closure2_slot0;
                mike = mike.id;
                entity['questId'] = mike;
                zulu = _closure1_slot0;
                report = _closure1_slot2;
                mike = 13;
                golf = report[mike];
                mike = undefined;
                golf = zulu.bind(mike)(golf);
                golf = golf.QuestContent;
                golf = golf.QUEST_BOTTOM_SHEET;
                entity['questContent'] = golf;
                golf = 7;
                golf = report[golf];
                golf = zulu.bind(mike)(golf);
                golf = golf.QuestContentCTA;
                golf = golf.VIEW_CONSOLE_CONNECTIONS;
                entity['questContentCTA'] = golf;
                entity = oscar.bind(mike)(entity);
                oscar = _closure1_slot1;
                entity = 9;
                entity = report[entity];
                oscar = oscar.bind(mike)(entity);
                entity = oscar.hideActionSheet;
                entity = entity.bind(oscar)();
                entity = 10;
                entity = report[entity];
                zulu = zulu.bind(mike)(entity);
                mike = zulu.openUserSettings;
                entity = {};
                tango = _closure1_slot5;
                tango = tango.CONNECTIONS;
                entity['screen'] = tango;
                entity = mike.bind(zulu)(entity);
                entity = undefined;
                return entity;
            }
        };
        entity['onConsoleSelect'] = report;
        entity = zulu.bind(tango)(mike, entity);
        return entity;
    };
    zulu['default'] = mike;
    return entity;
})();