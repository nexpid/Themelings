// app/modules/quests/native/QuestBottomSheet/QuestBottomSheetProgressCard.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    report = argBar;
    romeon = argBaz;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    var _closure1_slot1 = romeon;
    var _closure1_slot2 = oscard;
    entity = global;
    option = entity.Object;
    golfie = option.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(option)(zuuluu, entity, tangon);
    offset = 0;
    golfie = oscard[offset];
    tangon = argCor;
    entity = undefined;
    tangon = tangon.bind(entity)(golfie);
    var _closure1_slot3 = tangon;
    foxtra = 1;
    tangon = oscard[foxtra];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.View;
    var _closure1_slot4 = tangon;
    tangon = 2;
    golfie = oscard[tangon];
    golfie = report.bind(entity)(golfie);
    golfie = golfie.jsx;
    var _closure1_slot5 = golfie;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.jsxs;
    var _closure1_slot6 = tangon;
    tangon = 3;
    tangon = oscard[tangon];
    option = report.bind(entity)(tangon);
    golfie = option.createStyles;
    tangon = {};
    verify = {};
    verify['padding'] = offset;
    tangon['card'] = verify;
    verify = {};
    yankee = 4;
    offset = oscard[yankee];
    offset = romeon.bind(entity)(offset);
    offset = offset.spacing;
    offset = offset.PX_16;
    verify['padding'] = offset;
    tangon['content'] = verify;
    verify = {'padding': 12, 'display': 'flex', 'flexDirection': 'row', 'justifyContent': 'center', 'alignItems': 'center'};
    offset = 'center';
    backup = oscard[yankee];
    backup = romeon.bind(entity)(backup);
    backup = backup.colors;
    backup = backup.BG_MOD_FAINT;
    verify['backgroundColor'] = backup;
    backup = oscard[yankee];
    backup = romeon.bind(entity)(backup);
    backup = backup.radii;
    backup = backup.lg;
    verify['borderBottomLeftRadius'] = backup;
    backup = oscard[yankee];
    backup = romeon.bind(entity)(backup);
    backup = backup.radii;
    backup = backup.lg;
    verify['borderBottomRightRadius'] = backup;
    verify['borderWidth'] = foxtra;
    foxtra = oscard[yankee];
    foxtra = romeon.bind(entity)(foxtra);
    foxtra = foxtra.colors;
    foxtra = foxtra.BORDER_FAINT;
    verify['borderColor'] = foxtra;
    tangon['footer'] = verify;
    verify = {};
    yankee = oscard[yankee];
    yankee = romeon.bind(entity)(yankee);
    yankee = yankee.spacing;
    yankee = yankee.PX_12;
    verify['marginTop'] = yankee;
    verify['textAlign'] = offset;
    tangon['instructionsText'] = verify;
    tangon = golfie.bind(option)(tangon);
    var _closure1_slot7 = tangon;
    tangon = 13;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/quests/native/QuestBottomSheet/QuestBottomSheetProgressCard.tsx';
    tangon = report.bind(oscard)(tangon);
    michal = function(argFoo) { // Original name: ProgressCard
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            michal = argFoo;
            sizing = michal.quest;
            var _closure2_slot0 = sizing;
            tangon = undefined;
            var _closure2_slot3 = tangon;
            var _closure2_slot4 = tangon;
            var _closure2_slot5 = tangon;
            var _closure2_slot6 = tangon;
            var _closure2_slot7 = tangon;
            var _closure2_slot8 = tangon;
            michal = _closure1_slot7;
            romeon = michal.bind(tangon)();
            zuuluu = _closure1_slot0;
            michal = _closure1_slot2;
            report = 5;
            oscard = michal[report];
            golfie = zuuluu.bind(tangon)(oscard);
            oscard = golfie.useQuestTaskDetails;
            backup = oscard.bind(golfie)(sizing);
            var _closure2_slot1 = backup;
            michal = michal[report];
            zuuluu = zuuluu.bind(tangon)(michal);
            michal = zuuluu.useIsQuestProgressing;
            oscard = michal.bind(zuuluu)(sizing);
            var _closure2_slot2 = oscard;
            golfie = sizing.userStatus;
            zuuluu = null;
            option = zuuluu == golfie;
            michal = undefined;
            if(option) { _fun00002_ip = 134; continue _fun00001 }
 128:
            michal = golfie.completedAt;
 134:
            foxtra = zuuluu != michal;
            _closure2_slot3 = foxtra;
            golfie = sizing.userStatus;
            option = zuuluu == golfie;
            michal = undefined;
            if(option) { _fun00002_ip = 163; continue _fun00001 }
 157:
            michal = golfie.claimedAt;
 163:
            result = zuuluu != michal;
            _closure2_slot4 = result;
            golfie = _closure1_slot3;
            option = golfie.useMemo;
            zuuluu = new Array(1);
            zuuluu[0] = sizing;
            michal = function() {
                zuuluu = _closure1_slot0;
                michal = _closure1_slot2;
                entity = 6;
                michal = michal[entity];
                entity = undefined;
                entity = zuuluu.bind(entity)(michal);
                zuuluu = entity.SharedQuestFields;
                michal = zuuluu.build;
                entity = _closure2_slot0;
                entity = entity.config;
                entity = michal.bind(zuuluu)(entity);
                return entity;
            };
            zuuluu = option.bind(golfie)(michal, zuuluu);
            michal = _closure1_slot0;
            output = _closure1_slot2;
            option = 7;
            option = output[option];
            verify = michal.bind(tangon)(option);
            option = verify.supportedTaskPlatforms;
            verify = option.bind(verify)(sizing);
            _closure2_slot5 = verify;
            report = output[report];
            offset = michal.bind(tangon)(report);
            option = offset.useQuestFormattedDate;
            report = zuuluu.rewardsExpireAt;
            option = option.bind(offset)(report);
            _closure2_slot6 = option;
            report = sizing.config;
            report = report.messages;
            kiloes = report.gameTitle;
            _closure2_slot7 = kiloes;
            zuuluu = zuuluu.defaultReward;
            zuuluu = zuuluu.messages;
            offset = zuuluu.name;
            _closure2_slot8 = offset;
            report = golfie.useMemo;
            zuuluu = new Array(8);
            zuuluu[0] = backup;
            zuuluu[1] = foxtra;
            zuuluu[2] = result;
            zuuluu[3] = kiloes;
            zuuluu[4] = offset;
            zuuluu[5] = oscard;
            zuuluu[6] = verify;
            zuuluu[7] = option;
            entity = function() {
                _fun00003: for(var _fun00004_ip = 0; ; ) switch(_fun00004_ip) {
 0:
                    michal = _closure2_slot3;
                    if(!michal) { _fun00004_ip = 109; continue _fun00003 }
 12:
                    michal = _closure2_slot4;
                    if(michal) { _fun00004_ip = 109; continue _fun00003 }
 19:
                    golfie = _closure1_slot0;
                    option = _closure1_slot2;
                    michal = 8;
                    tangon = option[michal];
                    zuuluu = undefined;
                    tangon = golfie.bind(zuuluu)(tangon);
                    oscard = tangon.intl;
                    tangon = oscard.format;
                    michal = option[michal];
                    michal = golfie.bind(zuuluu)(michal);
                    michal = michal.t;
                    zuuluu = michal.e3OlfH;
                    michal = {};
                    golfie = function() { // Original name: rewardHook
                        tangon = _closure1_slot5;
                        michal = _closure1_slot0;
                        zuuluu = _closure1_slot2;
                        entity = 9;
                        entity = zuuluu[entity];
                        zuuluu = undefined;
                        entity = michal.bind(zuuluu)(entity);
                        michal = entity.Text;
                        entity = {'variant': 'text-sm/semibold', 'color': 'text-primary'};
                        report = _closure2_slot8;
                        entity['children'] = report;
                        entity = tangon.bind(zuuluu)(michal, entity);
                        return entity;
                    };
                    michal['rewardHook'] = golfie;
                    golfie = _closure2_slot6;
                    michal['date'] = golfie;
                    michal = tangon.bind(oscard)(zuuluu, michal);
                    return michal;
 109:
                    michal = _closure2_slot2;
                    if(michal) { _fun00004_ip = 581; continue _fun00003 }
 119:
                    michal = _closure2_slot5;
                    zuuluu = michal.length;
                    michal = 1;
                    if(!(!(zuuluu > michal))) { _fun00004_ip = 505; continue _fun00003 }
 138:
                    michal = _closure2_slot1;
                    tangon = michal.taskType;
                    golfie = _closure1_slot0;
                    michal = _closure1_slot2;
                    oscard = 10;
                    michal = michal[oscard];
                    option = undefined;
                    michal = golfie.bind(option)(michal);
                    michal = michal.FirstPartyQuestTaskTypes;
                    michal = michal.STREAM_ON_DESKTOP;
                    if(!(tangon !== michal)) { _fun00004_ip = 434; continue _fun00003 }
 192:
                    michal = _closure2_slot1;
                    tangon = michal.taskType;
                    golfie = _closure1_slot0;
                    michal = _closure1_slot2;
                    michal = michal[oscard];
                    michal = golfie.bind(option)(michal);
                    michal = michal.FirstPartyQuestTaskTypes;
                    michal = michal.PLAY_ON_DESKTOP;
                    if(!(tangon !== michal)) { _fun00004_ip = 363; continue _fun00003 }
 238:
                    tangon = _closure1_slot0;
                    michal = _closure1_slot2;
                    michal = michal[oscard];
                    michal = tangon.bind(option)(michal);
                    michal = michal.FirstPartyQuestTaskTypesSets;
                    oscard = michal.CONSOLE;
                    tangon = oscard.has;
                    michal = _closure2_slot1;
                    michal = michal.taskType;
                    tangon = tangon.bind(oscard)(michal);
                    michal = null;
                    if(!tangon) { _fun00004_ip = 361; continue _fun00003 }
 292:
                    oscard = _closure1_slot0;
                    offset = _closure1_slot2;
                    tangon = 8;
                    golfie = offset[tangon];
                    golfie = oscard.bind(option)(golfie);
                    verify = golfie.intl;
                    golfie = verify.formatToPlainString;
                    tangon = offset[tangon];
                    tangon = oscard.bind(option)(tangon);
                    tangon = tangon.t;
                    oscard = tangon.+8JB6e;
                    tangon = {};
                    offset = _closure2_slot7;
                    tangon['gameTitle'] = offset;
                    michal = golfie.bind(verify)(oscard, tangon);
 361:
                    _fun00004_ip = 432; continue _fun00003;
 363:
                    oscard = _closure1_slot0;
                    offset = _closure1_slot2;
                    tangon = 8;
                    golfie = offset[tangon];
                    golfie = oscard.bind(option)(golfie);
                    verify = golfie.intl;
                    golfie = verify.formatToPlainString;
                    tangon = offset[tangon];
                    tangon = oscard.bind(option)(tangon);
                    tangon = tangon.t;
                    oscard = tangon.9PeldX;
                    tangon = {};
                    offset = _closure2_slot7;
                    tangon['gameName'] = offset;
                    michal = golfie.bind(verify)(oscard, tangon);
 432:
                    _fun00004_ip = 503; continue _fun00003;
 434:
                    tangon = _closure1_slot0;
                    verify = _closure1_slot2;
                    zuuluu = 8;
                    oscard = verify[zuuluu];
                    oscard = tangon.bind(option)(oscard);
                    golfie = oscard.intl;
                    oscard = golfie.formatToPlainString;
                    zuuluu = verify[zuuluu];
                    zuuluu = tangon.bind(option)(zuuluu);
                    zuuluu = zuuluu.t;
                    tangon = zuuluu.boMftL;
                    zuuluu = {};
                    option = _closure2_slot7;
                    zuuluu['gameName'] = option;
                    michal = oscard.bind(golfie)(tangon, zuuluu);
 503:
                    _fun00004_ip = 579; continue _fun00003;
 505:
                    option = _closure1_slot0;
                    verify = _closure1_slot2;
                    zuuluu = 8;
                    oscard = verify[zuuluu];
                    tangon = undefined;
                    oscard = option.bind(tangon)(oscard);
                    golfie = oscard.intl;
                    oscard = golfie.formatToPlainString;
                    zuuluu = verify[zuuluu];
                    zuuluu = option.bind(tangon)(zuuluu);
                    zuuluu = zuuluu.t;
                    tangon = zuuluu.E2R8VV;
                    zuuluu = {};
                    option = _closure2_slot7;
                    zuuluu['gameName'] = option;
                    michal = oscard.bind(golfie)(tangon, zuuluu);
 579:
                    return michal;
 581:
                    entity = _closure2_slot1;
                    michal = entity.targetSeconds;
                    entity = entity.progressSeconds;
                    tangon = michal - entity;
                    entity = global;
                    zuuluu = entity.Math;
                    michal = zuuluu.ceil;
                    entity = 60;
                    entity = tangon / entity;
                    oscard = michal.bind(zuuluu)(entity);
                    golfie = _closure1_slot0;
                    option = _closure1_slot2;
                    entity = 8;
                    zuuluu = option[entity];
                    michal = undefined;
                    zuuluu = golfie.bind(michal)(zuuluu);
                    tangon = zuuluu.intl;
                    zuuluu = tangon.format;
                    entity = option[entity];
                    entity = golfie.bind(michal)(entity);
                    entity = entity.t;
                    michal = entity.aFaRsr;
                    entity = {};
                    entity['minutesLeft'] = oscard;
                    report = function(argFoo) { // Original name: minutesHook
                        tangon = _closure1_slot5;
                        michal = _closure1_slot0;
                        zuuluu = _closure1_slot2;
                        entity = 9;
                        entity = zuuluu[entity];
                        zuuluu = undefined;
                        entity = michal.bind(zuuluu)(entity);
                        michal = entity.Text;
                        entity = {'variant': 'text-sm/semibold', 'color': 'text-primary'};
                        report = argFoo;
                        entity['children'] = report;
                        entity = tangon.bind(zuuluu)(michal, entity);
                        return entity;
                    };
                    entity['minutesHook'] = report;
                    entity = zuuluu.bind(tangon)(michal, entity);
                    return entity;
                }
            };
            kiloes = report.bind(golfie)(entity, zuuluu);
            zuuluu = _closure1_slot6;
            entity = 11;
            entity = output[entity];
            entity = michal.bind(tangon)(entity);
            michal = entity.Card;
            entity = {};
            report = romeon.card;
            entity['style'] = report;
            report = 'subtle';
            entity['border'] = report;
            golfie = _closure1_slot4;
            report = {};
            option = romeon.content;
            report['style'] = option;
            offset = _closure1_slot5;
            verify = _closure1_slot1;
            option = 12;
            option = output[option];
            verify = verify.bind(tangon)(option);
            option = {};
            option['quest'] = sizing;
            output = 'lg';
            option['size'] = output;
            backup = backup.percentComplete;
            option['progress'] = backup;
            if(foxtra) { _fun00002_ip = 474; continue _fun00001 }
 471:
            foxtra = oscard;
 474:
            foxtra = !foxtra;
            option['loading'] = foxtra;
            foxtra = true;
            option['hasConfetti'] = foxtra;
            verify = offset.bind(tangon)(verify, option);
            option = new Array(2);
            option[0] = verify;
            backup = _closure1_slot5;
            foxtra = _closure1_slot0;
            verify = _closure1_slot2;
            offset = 9;
            verify = verify[offset];
            verify = foxtra.bind(tangon)(verify);
            foxtra = verify.Text;
            verify = {'style': null, 'variant': 'text-sm/semibold', 'color': 'text-secondary'};
            output = romeon.instructionsText;
            verify['style'] = output;
            verify['children'] = kiloes;
            verify = backup.bind(tangon)(foxtra, verify);
            option[1] = verify;
            report['children'] = option;
            golfie = zuuluu.bind(tangon)(golfie, report);
            report = new Array(2);
            report[0] = golfie;
            if(!oscard) { _fun00002_ip = 746; continue _fun00001 }
 596:
            verify = _closure1_slot5;
            option = _closure1_slot4;
            golfie = {};
            romeon = romeon.footer;
            golfie['style'] = romeon;
            foxtra = _closure1_slot0;
            output = _closure1_slot2;
            offset = output[offset];
            offset = foxtra.bind(tangon)(offset);
            yankee = offset.Text;
            offset = {'color': 'text-positive', 'variant': 'text-sm/semibold'};
            romeon = 8;
            backup = output[romeon];
            backup = foxtra.bind(tangon)(backup);
            kiloes = backup.intl;
            backup = kiloes.format;
            romeon = output[romeon];
            romeon = foxtra.bind(tangon)(romeon);
            romeon = romeon.t;
            foxtra = romeon.lIFg6O;
            romeon = {};
            sizing = sizing.config;
            sizing = sizing.messages;
            sizing = sizing.gameTitle;
            romeon['gameName'] = sizing;
            romeon = backup.bind(kiloes)(foxtra, romeon);
            offset['children'] = romeon;
            offset = verify.bind(tangon)(yankee, offset);
            golfie['children'] = offset;
            oscard = verify.bind(tangon)(option, golfie);
 746:
            report[1] = oscard;
            entity['children'] = report;
            entity = zuuluu.bind(tangon)(michal, entity);
            return entity;
        }
    };
    zuuluu['default'] = michal;
    return entity;
})();