// app/modules/quests/native/QuestBottomSheet/QuestBottomSheetTaskSelect.tsx
export default (function(argFoo, argBar, _, argCorge, __, argFred, argPlugh) {
    report = argBar;
    zulu = argFred;
    oscar = argPlugh;
    var _closure1_slot0 = report;
    var _closure1_slot1 = oscar;
    entity = global;
    options = entity.Object;
    golf = options.defineProperty;
    tango = {};
    entity = true;
    tango['value'] = entity;
    entity = '__esModule';
    entity = golf.bind(options)(zulu, entity, tango);
    entity = 0;
    golf = oscar[entity];
    tango = argCorge;
    entity = undefined;
    tango = tango.bind(entity)(golf);
    tango = 1;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.QuestTaskPlatform;
    var _closure1_slot2 = tango;
    tango = 2;
    golf = oscar[tango];
    golf = report.bind(entity)(golf);
    golf = golf.jsx;
    var _closure1_slot3 = golf;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.jsxs;
    var _closure1_slot4 = tango;
    tango = 8;
    tango = oscar[tango];
    oscar = report.bind(entity)(tango);
    report = oscar.fileFinishedImporting;
    tango = 'modules/quests/native/QuestBottomSheet/QuestBottomSheetTaskSelect.tsx';
    tango = report.bind(oscar)(tango);
    mike = function(argFoo) { // Original name: QuestBottomSheetTaskSelect
        entity = argFoo;
        entity = entity.onTaskSelect;
        var _closure2_slot0 = entity;
        tango = _closure1_slot4;
        foxtrot = _closure1_slot0;
        backup = _closure1_slot1;
        entity = 3;
        entity = backup[entity];
        zulu = undefined;
        entity = foxtrot.bind(zulu)(entity);
        mike = entity.TableRowGroup;
        entity = {};
        options = _closure1_slot3;
        oscar = 4;
        report = backup[oscar];
        report = foxtrot.bind(zulu)(report);
        golf = report.TableRow;
        report = {};
        yankee = true;
        report['arrow'] = yankee;
        offset = 5;
        offset = backup[offset];
        offset = foxtrot.bind(zulu)(offset);
        romeo = offset.ScreenIcon;
        offset = {};
        offset = options.bind(zulu)(romeo, offset);
        report['icon'] = offset;
        offset = 6;
        romeo = backup[offset];
        romeo = foxtrot.bind(zulu)(romeo);
        sizing = romeo.intl;
        kilo = sizing.string;
        romeo = backup[offset];
        romeo = foxtrot.bind(zulu)(romeo);
        romeo = romeo.t;
        romeo = romeo.QXc019;
        romeo = kilo.bind(sizing)(romeo);
        report['label'] = romeo;
        romeo = function() { // Original name: onPress
            zulu = _closure2_slot0;
            entity = _closure1_slot2;
            mike = entity.DESKTOP;
            entity = undefined;
            entity = zulu.bind(entity)(mike);
            return entity;
        };
        report['onPress'] = romeo;
        golf = options.bind(zulu)(golf, report);
        report = new Array(2);
        report[0] = golf;
        oscar = backup[oscar];
        oscar = foxtrot.bind(zulu)(oscar);
        golf = oscar.TableRow;
        oscar = {};
        oscar['arrow'] = yankee;
        yankee = 7;
        yankee = backup[yankee];
        yankee = foxtrot.bind(zulu)(yankee);
        romeo = yankee.GameControllerIcon;
        yankee = {};
        yankee = options.bind(zulu)(romeo, yankee);
        oscar['icon'] = yankee;
        yankee = backup[offset];
        yankee = foxtrot.bind(zulu)(yankee);
        romeo = yankee.intl;
        yankee = romeo.string;
        offset = backup[offset];
        offset = foxtrot.bind(zulu)(offset);
        offset = offset.t;
        offset = offset.8lAfuL;
        offset = yankee.bind(romeo)(offset);
        oscar['label'] = offset;
        verify = function() { // Original name: onPress
            zulu = _closure2_slot0;
            entity = _closure1_slot2;
            mike = entity.CONSOLE;
            entity = undefined;
            entity = zulu.bind(entity)(mike);
            return entity;
        };
        oscar['onPress'] = verify;
        oscar = options.bind(zulu)(golf, oscar);
        report[1] = oscar;
        entity['children'] = report;
        entity = tango.bind(zulu)(mike, entity);
        return entity;
    };
    zulu['default'] = mike;
    return entity;
})();