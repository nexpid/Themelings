// app/modules/quests/native/QuestHomeEmptyState.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    report = argBar;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    entity = argBaz;
    var _closure1_slot1 = entity;
    var _closure1_slot2 = oscard;
    entity = global;
    option = entity.Object;
    golfie = option.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(option)(zuuluu, entity, tangon);
    entity = 0;
    golfie = oscard[entity];
    tangon = argCor;
    entity = undefined;
    tangon = tangon.bind(entity)(golfie);
    offset = 1;
    tangon = oscard[offset];
    tangon = report.bind(entity)(tangon);
    golfie = tangon.View;
    var _closure1_slot3 = golfie;
    tangon = tangon.ImageBackground;
    var _closure1_slot4 = tangon;
    tangon = 2;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.VerticalGradient;
    var _closure1_slot5 = tangon;
    tangon = 3;
    golfie = oscard[tangon];
    golfie = report.bind(entity)(golfie);
    golfie = golfie.jsx;
    var _closure1_slot6 = golfie;
    golfie = oscard[tangon];
    golfie = report.bind(entity)(golfie);
    golfie = golfie.jsxs;
    var _closure1_slot7 = golfie;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.Fragment;
    var _closure1_slot8 = tangon;
    tangon = 4;
    tangon = oscard[tangon];
    option = report.bind(entity)(tangon);
    golfie = option.createStyles;
    tangon = {};
    verify = {};
    verify['flex'] = offset;
    tangon['container'] = verify;
    offset = 'center';
    verify = {'justifyContent': 'center', 'alignItems': 'center', 'flex': 1};
    tangon['emptyStateContainer'] = verify;
    verify = {'top': 4294967241, 'maxWidth': 263};
    tangon['emptyStateContentContainer'] = verify;
    verify = {};
    verify['textAlign'] = offset;
    tangon['emptyStateContentTitle'] = verify;
    verify = {'textAlign': 'center', 'marginTop': 4};
    tangon['emptyStateContentDescription'] = verify;
    verify = {'flex': 1, 'width': '100%', 'aspectRatio': 1.6375545851528384, 'minWidth': '100%', 'position': 'absolute', 'bottom': 0, 'zIndex': 4294967295};
    tangon['emptyImage'] = verify;
    verify = {'height': 22, 'width': '100%', 'position': 'absolute', 'bottom': 0};
    tangon['gradient'] = verify;
    tangon = golfie.bind(option)(tangon);
    var _closure1_slot9 = tangon;
    tangon = 12;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/quests/native/QuestHomeEmptyState.tsx';
    tangon = report.bind(oscard)(tangon);
    michal = function(argFoo) { // Original name: QuestHomeEmptyState
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            entity = argFoo;
            offset = entity.action;
            entity = _closure1_slot9;
            tangon = undefined;
            result = entity.bind(tangon)();
            echoed = _closure1_slot0;
            update = _closure1_slot2;
            entity = 5;
            entity = update[entity];
            report = echoed.bind(tangon)(entity);
            zuuluu = report.useToken;
            michal = _closure1_slot1;
            entity = 6;
            entity = update[entity];
            entity = michal.bind(tangon)(entity);
            entity = entity.colors;
            entity = entity.BG_BASE_SECONDARY;
            output = zuuluu.bind(report)(entity);
            entity = 7;
            entity = update[entity];
            entity = michal.bind(tangon)(entity);
            entity = entity.bind(tangon)();
            verify = entity.isChatLockedOpen;
            zuuluu = _closure1_slot6;
            michal = _closure1_slot3;
            entity = {};
            report = result.container;
            entity['style'] = report;
            oscard = _closure1_slot7;
            report = {};
            golfie = result.emptyStateContainer;
            report['style'] = golfie;
            golfie = {};
            option = result.emptyStateContentContainer;
            golfie['style'] = option;
            yankee = 8;
            option = update[yankee];
            option = echoed.bind(tangon)(option);
            romeon = option.Text;
            option = {'variant': 'heading-xl/bold', 'color': 'header-primary'};
            foxtra = result.emptyStateContentTitle;
            option['style'] = foxtra;
            foxtra = 9;
            backup = update[foxtra];
            backup = echoed.bind(tangon)(backup);
            source = backup.intl;
            kiloes = source.string;
            backup = update[foxtra];
            backup = echoed.bind(tangon)(backup);
            backup = backup.t;
            backup = backup.SdlRnJ;
            backup = kiloes.bind(source)(backup);
            option['children'] = backup;
            romeon = zuuluu.bind(tangon)(romeon, option);
            option = new Array(3);
            option[0] = romeon;
            yankee = update[yankee];
            yankee = echoed.bind(tangon)(yankee);
            romeon = yankee.Text;
            yankee = {'variant': 'text-md/normal', 'color': 'header-secondary'};
            backup = result.emptyStateContentDescription;
            yankee['style'] = backup;
            backup = update[foxtra];
            backup = echoed.bind(tangon)(backup);
            kiloes = backup.intl;
            backup = kiloes.string;
            foxtra = update[foxtra];
            foxtra = echoed.bind(tangon)(foxtra);
            foxtra = foxtra.t;
            foxtra = foxtra.R7mv+P;
            foxtra = backup.bind(kiloes)(foxtra);
            yankee['children'] = foxtra;
            yankee = zuuluu.bind(tangon)(romeon, yankee);
            option[1] = yankee;
            option[2] = offset;
            golfie['children'] = option;
            option = oscard.bind(tangon)(michal, golfie);
            golfie = new Array(2);
            golfie[0] = option;
            option = null;
            if(verify) { _fun00002_ip = 547; continue _fun00001 }
 384:
            yankee = _closure1_slot7;
            offset = _closure1_slot8;
            verify = {};
            kiloes = _closure1_slot6;
            foxtra = _closure1_slot4;
            romeon = {};
            backup = result.emptyImage;
            romeon['style'] = backup;
            backup = _closure1_slot1;
            echoed = _closure1_slot2;
            update = 10;
            update = echoed[update];
            update = backup.bind(tangon)(update);
            romeon['source'] = update;
            update = 'cover';
            romeon['resizeMode'] = update;
            foxtra = kiloes.bind(tangon)(foxtra, romeon);
            romeon = new Array(2);
            romeon[0] = foxtra;
            foxtra = 11;
            foxtra = echoed[foxtra];
            backup = backup.bind(tangon)(foxtra);
            foxtra = {};
            result = result.gradient;
            foxtra['style'] = result;
            sizing = _closure1_slot5;
            result = sizing.END;
            foxtra['end'] = result;
            sizing = sizing.START;
            foxtra['start'] = sizing;
            sizing = ['rgba(0, 0, 0, 0)'];
            sizing[1] = output;
            foxtra['colors'] = sizing;
            foxtra = kiloes.bind(tangon)(backup, foxtra);
            romeon[1] = foxtra;
            verify['children'] = romeon;
            option = yankee.bind(tangon)(offset, verify);
 547:
            golfie[1] = option;
            report['children'] = golfie;
            report = oscard.bind(tangon)(michal, report);
            entity['children'] = report;
            entity = zuuluu.bind(tangon)(michal, entity);
            return entity;
        }
    };
    zuuluu['default'] = michal;
    return entity;
})();