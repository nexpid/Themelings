// app/modules/quests/types/v2/Quest.tsx
export default (function(argFoo, argBar, _, __, ___, argFred, argPlugh) {
    oscar = argBar;
    zulu = argFred;
    report = argPlugh;
    var _closure1_slot0 = oscar;
    var _closure1_slot1 = report;
    mike = function(argFoo) { // Original name: questCosponsorMetadataFromServer
        _fun67262: for(var _fun67262_ip = 0; ; ) switch(_fun67262_ip) {
 0:
            mike = argFoo;
            entity = null;
            if(!(entity == mike)) { _fun67262_ip = 13; continue _fun67262 }
 9:
            entity = undefined;
            return entity;
 13:
            entity = {};
            zulu = mike.name;
            entity['name'] = zulu;
            zulu = mike.logotype;
            entity['logotype'] = zulu;
            mike = mike.redemption_instructions;
            entity['redemptionInstructions'] = mike;
            return entity;
        }
    };
    var _closure1_slot2 = mike;
    entity = global;
    verify = entity.Object;
    options = verify.defineProperty;
    golf = {};
    entity = true;
    golf['value'] = entity;
    entity = '__esModule';
    entity = options.bind(verify)(zulu, entity, golf);
    entity = 3;
    report = report[entity];
    entity = undefined;
    golf = oscar.bind(entity)(report);
    oscar = golf.fileFinishedImporting;
    report = 'modules/quests/types/v2/Quest.tsx';
    report = oscar.bind(golf)(report);
    tango = function(argFoo) {
        mike = argFoo;
        entity = {};
        zulu = mike.id;
        entity['id'] = zulu;
        golf = 2;
        entity['configVersion'] = golf;
        zulu = mike.starts_at;
        entity['startsAt'] = zulu;
        zulu = mike.expires_at;
        entity['expiresAt'] = zulu;
        zulu = mike.features;
        entity['features'] = zulu;
        zulu = {};
        tango = mike.application;
        tango = tango.id;
        zulu['id'] = tango;
        tango = mike.application;
        tango = tango.name;
        zulu['name'] = tango;
        tango = mike.application;
        tango = tango.link;
        zulu['link'] = tango;
        entity['application'] = zulu;
        zulu = {};
        tango = mike.assets;
        tango = tango.hero;
        zulu['hero'] = tango;
        tango = mike.assets;
        tango = tango.hero_video;
        zulu['heroVideo'] = tango;
        tango = mike.assets;
        tango = tango.quest_bar_hero;
        zulu['questBarHero'] = tango;
        tango = mike.assets;
        tango = tango.quest_bar_hero_video;
        zulu['questBarHeroVideo'] = tango;
        tango = mike.assets;
        tango = tango.game_tile;
        zulu['gameTile'] = tango;
        tango = mike.assets;
        tango = tango.logotype;
        zulu['logotype'] = tango;
        entity['assets'] = zulu;
        zulu = {};
        tango = mike.colors;
        tango = tango.primary;
        zulu['primary'] = tango;
        tango = mike.colors;
        tango = tango.secondary;
        zulu['secondary'] = tango;
        entity['colors'] = zulu;
        zulu = {};
        tango = mike.messages;
        tango = tango.quest_name;
        zulu['questName'] = tango;
        tango = mike.messages;
        tango = tango.game_title;
        zulu['gameTitle'] = tango;
        tango = mike.messages;
        tango = tango.game_publisher;
        zulu['gamePublisher'] = tango;
        entity['messages'] = zulu;
        oscar = _closure1_slot0;
        report = _closure1_slot1;
        tango = 0;
        options = report[tango];
        tango = undefined;
        offset = oscar.bind(tango)(options);
        verify = offset.questTaskConfigFromServer;
        options = mike.task_config;
        options = verify.bind(offset)(options);
        entity['taskConfig'] = options;
        options = 1;
        options = report[options];
        offset = oscar.bind(tango)(options);
        verify = offset.questRewardsConfigV2FromServer;
        options = mike.rewards_config;
        options = verify.bind(offset)(options);
        entity['rewardsConfig'] = options;
        report = report[golf];
        golf = oscar.bind(tango)(report);
        oscar = golf.questVideoMetadataFromServer;
        report = mike.video_metadata;
        report = oscar.bind(golf)(report);
        entity['videoMetadata'] = report;
        zulu = _closure1_slot2;
        mike = mike.cosponsor_metadata;
        mike = zulu.bind(tango)(mike);
        entity['cosponsorMetadata'] = mike;
        return entity;
    };
    zulu['questFromServerV2'] = tango;
    zulu['questCosponsorMetadataFromServer'] = mike;
    return entity;
})();