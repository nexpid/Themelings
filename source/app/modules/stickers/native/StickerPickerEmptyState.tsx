// app/modules/stickers/native/StickerPickerEmptyState.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    report = argBar;
    golfie = argBaz;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    var _closure1_slot1 = golfie;
    var _closure1_slot2 = oscard;
    entity = global;
    verify = entity.Object;
    option = verify.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = option.bind(verify)(zuuluu, entity, tangon);
    entity = 0;
    tangon = oscard[entity];
    entity = undefined;
    tangon = golfie.bind(entity)(tangon);
    var _closure1_slot3 = tangon;
    tangon = 1;
    option = oscard[tangon];
    tangon = argCor;
    tangon = tangon.bind(entity)(option);
    var _closure1_slot4 = tangon;
    offset = 2;
    tangon = oscard[offset];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.View;
    var _closure1_slot5 = tangon;
    tangon = 3;
    tangon = oscard[tangon];
    tangon = golfie.bind(entity)(tangon);
    var _closure1_slot6 = tangon;
    tangon = 4;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.EMPTY_STATE_STICKERS;
    var _closure1_slot7 = tangon;
    tangon = 5;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    golfie = tangon.AnalyticEvents;
    var _closure1_slot8 = golfie;
    tangon = tangon.AnalyticsSections;
    var _closure1_slot9 = tangon;
    tangon = 6;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.PremiumUpsellTypes;
    var _closure1_slot10 = tangon;
    tangon = 7;
    golfie = oscard[tangon];
    golfie = report.bind(entity)(golfie);
    golfie = golfie.jsx;
    var _closure1_slot11 = golfie;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.jsxs;
    var _closure1_slot12 = tangon;
    tangon = 8;
    tangon = oscard[tangon];
    option = report.bind(entity)(tangon);
    golfie = option.createStyles;
    tangon = {};
    verify = {};
    yankee = 16;
    verify['marginBottom'] = yankee;
    tangon['emptyImage'] = verify;
    verify = {'marginBottom': 8, 'textAlign': 'center'};
    tangon['header'] = verify;
    verify = {'lineHeight': 18, 'textAlign': 'center', 'marginBottom': 12};
    tangon['blurb'] = verify;
    verify = {'marginTop': 20, 'alignSelf': 'center', 'paddingLeft': 5, 'paddingRight': 10, 'flexGrow': 0};
    tangon['premiumButton'] = verify;
    verify = {};
    yankee = 32;
    verify['width'] = yankee;
    tangon['nitroWheel'] = verify;
    verify = {'flexDirection': 'row', 'alignSelf': 'center'};
    tangon['stickersRow'] = verify;
    verify = {};
    verify['paddingHorizontal'] = offset;
    tangon['sticker'] = verify;
    tangon = golfie.bind(option)(tangon);
    var _closure1_slot13 = tangon;
    tangon = function(argFoo) { // Original name: EmptyStateSticker
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            entity = argFoo;
            oscard = entity.sticker;
            tangon = entity.isFocused;
            zuuluu = _closure1_slot0;
            golfie = _closure1_slot2;
            entity = 9;
            entity = golfie[entity];
            report = undefined;
            zuuluu = zuuluu.bind(report)(entity);
            entity = zuuluu.useShouldAnimateSticker;
            entity = entity.bind(zuuluu)(tangon);
            tangon = _closure1_slot11;
            zuuluu = _closure1_slot1;
            michal = 10;
            michal = golfie[michal];
            zuuluu = zuuluu.bind(report)(michal);
            michal = {};
            michal['sticker'] = oscard;
            golfie = 60;
            michal['size'] = golfie;
            michal['animated'] = entity;
            entity = null;
            golfie = entity == oscard;
            entity = undefined;
            if(golfie) { _fun00002_ip = 106; continue _fun00001 }
 101:
            entity = oscard.id;
 106:
            entity = tangon.bind(report)(zuuluu, michal, entity);
            return entity;
        }
    };
    var _closure1_slot14 = tangon;
    tangon = 24;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/stickers/native/StickerPickerEmptyState.tsx';
    tangon = report.bind(oscard)(tangon);
    michal = function() { // Original name: _default
        entity = _closure1_slot13;
        tangon = undefined;
        offset = entity.bind(tangon)();
        var _closure2_slot0 = offset;
        output = _closure1_slot0;
        foxtra = _closure1_slot2;
        entity = 9;
        entity = foxtra[entity];
        michal = output.bind(tangon)(entity);
        entity = michal.useFetchStickerPacks;
        entity = entity.bind(michal)();
        romeon = _closure1_slot1;
        entity = 11;
        entity = foxtra[entity];
        michal = romeon.bind(tangon)(entity);
        entity = 12;
        entity = foxtra[entity];
        entity = romeon.bind(tangon)(entity);
        entity = entity.EMPTY_STATE;
        entity = michal.bind(tangon)(entity);
        entity = entity.analyticsLocations;
        var _closure2_slot1 = entity;
        michal = 13;
        michal = foxtra[michal];
        golfie = output.bind(tangon)(michal);
        oscard = golfie.useStateFromStoresArray;
        michal = _closure1_slot6;
        zuuluu = new Array(1);
        zuuluu[0] = michal;
        michal = function() {
            tangon = _closure1_slot7;
            zuuluu = tangon.map;
            michal = function(argFoo) {
                zuuluu = _closure1_slot6;
                michal = zuuluu.getStickerById;
                entity = argFoo;
                entity = michal.bind(zuuluu)(entity);
                return entity;
            };
            zuuluu = zuuluu.bind(tangon)(michal);
            michal = zuuluu.filter;
            entity = function(argFoo) {
                michal = null;
                entity = argFoo;
                entity = michal != entity;
                return entity;
            };
            entity = michal.bind(zuuluu)(entity);
            return entity;
        };
        kiloes = oscard.bind(golfie)(zuuluu, michal);
        oscard = _closure1_slot4;
        zuuluu = oscard.useState;
        michal = null;
        golfie = zuuluu.bind(oscard)(michal);
        zuuluu = _closure1_slot3;
        michal = 2;
        zuuluu = zuuluu.bind(tangon)(golfie, michal);
        michal = 0;
        michal = zuuluu[michal];
        var _closure2_slot2 = michal;
        michal = 1;
        michal = zuuluu[michal];
        var _closure2_slot3 = michal;
        zuuluu = oscard.useEffect;
        michal = new Array(1);
        michal[0] = entity;
        entity = function() {
            zuuluu = _closure1_slot1;
            michal = _closure1_slot2;
            entity = 14;
            michal = michal[entity];
            entity = undefined;
            report = zuuluu.bind(entity)(michal);
            tangon = report.track;
            michal = _closure1_slot8;
            zuuluu = michal.PREMIUM_UPSELL_VIEWED;
            michal = {};
            oscard = _closure1_slot10;
            oscard = oscard.EMPTY_STICKER_PICKER_UPSELL;
            michal['type'] = oscard;
            oscard = {};
            golfie = _closure1_slot9;
            golfie = golfie.EMPTY_STICKER_PICKER_UPSELL;
            oscard['section'] = golfie;
            michal['source'] = oscard;
            oscard = _closure2_slot1;
            michal['location_stack'] = oscard;
            michal = tangon.bind(report)(zuuluu, michal);
            return entity;
        };
        entity = zuuluu.bind(oscard)(entity, michal);
        zuuluu = _closure1_slot12;
        michal = _closure1_slot5;
        entity = {};
        option = _closure1_slot11;
        oscard = 15;
        report = foxtra[oscard];
        report = output.bind(tangon)(report);
        golfie = report.Text;
        report = {'style': null, 'accessibilityRole': 'header', 'variant': 'heading-lg/extrabold', 'color': 'header-primary'};
        yankee = offset.header;
        report['style'] = yankee;
        backup = 16;
        yankee = foxtra[backup];
        yankee = output.bind(tangon)(yankee);
        result = yankee.intl;
        sizing = result.string;
        yankee = foxtra[backup];
        yankee = output.bind(tangon)(yankee);
        yankee = yankee.t;
        yankee = yankee.HEm04O;
        yankee = sizing.bind(result)(yankee);
        report['children'] = yankee;
        golfie = option.bind(tangon)(golfie, report);
        report = new Array(4);
        report[0] = golfie;
        oscard = foxtra[oscard];
        oscard = output.bind(tangon)(oscard);
        golfie = oscard.Text;
        oscard = {'style': null, 'variant': 'text-sm/medium', 'color': 'header-secondary'};
        yankee = offset.blurb;
        oscard['style'] = yankee;
        yankee = foxtra[backup];
        yankee = output.bind(tangon)(yankee);
        result = yankee.intl;
        sizing = result.string;
        yankee = foxtra[backup];
        yankee = output.bind(tangon)(yankee);
        yankee = yankee.t;
        yankee = yankee.FnNud3;
        yankee = sizing.bind(result)(yankee);
        oscard['children'] = yankee;
        oscard = option.bind(tangon)(golfie, oscard);
        report[1] = oscard;
        oscard = {};
        golfie = offset.stickersRow;
        oscard['style'] = golfie;
        yankee = kiloes.map;
        golfie = function(argFoo) {
            _fun00003: for(var _fun00004_ip = 0; ; ) switch(_fun00004_ip) {
 0:
                oscard = argFoo;
                var _closure3_slot0 = oscard;
                report = _closure1_slot11;
                zuuluu = _closure1_slot0;
                tangon = _closure1_slot2;
                michal = 17;
                michal = tangon[michal];
                tangon = undefined;
                michal = zuuluu.bind(tangon)(michal);
                zuuluu = michal.PressableOpacity;
                michal = {};
                option = false;
                michal['accessible'] = option;
                golfie = function() { // Original name: onLongPress
                    tangon = _closure1_slot0;
                    oscard = _closure1_slot2;
                    entity = 18;
                    zuuluu = oscard[entity];
                    entity = undefined;
                    tangon = tangon.bind(entity)(zuuluu);
                    zuuluu = tangon.triggerHapticFeedback;
                    report = _closure1_slot1;
                    michal = 19;
                    michal = oscard[michal];
                    michal = report.bind(entity)(michal);
                    michal = michal.IMPACT_LIGHT;
                    michal = zuuluu.bind(tangon)(michal);
                    zuuluu = _closure2_slot3;
                    michal = _closure3_slot0;
                    michal = michal.id;
                    michal = zuuluu.bind(entity)(michal);
                    return entity;
                };
                michal['onLongPress'] = golfie;
                golfie = _closure2_slot0;
                golfie = golfie.sticker;
                michal['style'] = golfie;
                golfie = _closure1_slot14;
                entity = {};
                entity['sticker'] = oscard;
                verify = _closure2_slot2;
                option = oscard.id;
                option = verify === option;
                entity['isFocused'] = option;
                entity = report.bind(tangon)(golfie, entity);
                michal['children'] = entity;
                entity = null;
                golfie = entity == oscard;
                entity = undefined;
                if(golfie) { _fun00004_ip = 137; continue _fun00003 }
 132:
                entity = oscard.id;
 137:
                entity = report.bind(tangon)(zuuluu, michal, entity);
                return entity;
            }
        };
        golfie = yankee.bind(kiloes)(golfie);
        oscard['children'] = golfie;
        oscard = option.bind(tangon)(michal, oscard);
        report[2] = oscard;
        yankee = 20;
        oscard = foxtra[yankee];
        golfie = romeon.bind(tangon)(oscard);
        oscard = {};
        kiloes = function() { // Original name: renderIcon
            tangon = _closure1_slot11;
            oscard = _closure1_slot1;
            golfie = _closure1_slot2;
            entity = 21;
            entity = golfie[entity];
            zuuluu = undefined;
            michal = oscard.bind(zuuluu)(entity);
            entity = {};
            report = 22;
            report = golfie[report];
            report = oscard.bind(zuuluu)(report);
            entity['source'] = report;
            report = _closure2_slot0;
            report = report.nitroWheel;
            entity['style'] = report;
            report = 'contain';
            entity['resizeMode'] = report;
            entity = tangon.bind(zuuluu)(michal, entity);
            return entity;
        };
        oscard['renderIcon'] = kiloes;
        kiloes = foxtra[backup];
        kiloes = output.bind(tangon)(kiloes);
        sizing = kiloes.intl;
        kiloes = sizing.string;
        backup = foxtra[backup];
        backup = output.bind(tangon)(backup);
        backup = backup.t;
        backup = backup.pj0XBA;
        backup = kiloes.bind(sizing)(backup);
        oscard['text'] = backup;
        backup = foxtra[yankee];
        backup = romeon.bind(tangon)(backup);
        backup = backup.Colors;
        backup = backup.GREEN;
        oscard['color'] = backup;
        yankee = foxtra[yankee];
        yankee = romeon.bind(tangon)(yankee);
        yankee = yankee.Sizes;
        yankee = yankee.SMALL;
        oscard['size'] = yankee;
        offset = offset.premiumButton;
        oscard['style'] = offset;
        verify = function() { // Original name: onPress
            michal = _closure1_slot1;
            zuuluu = _closure1_slot2;
            entity = 23;
            entity = zuuluu[entity];
            zuuluu = undefined;
            michal = michal.bind(zuuluu)(entity);
            entity = {};
            tangon = _closure1_slot9;
            tangon = tangon.EXPRESSION_PICKER;
            entity['section'] = tangon;
            entity = michal.bind(zuuluu)(entity);
            return entity;
        };
        oscard['onPress'] = verify;
        oscard = option.bind(tangon)(golfie, oscard);
        report[3] = oscard;
        entity['children'] = report;
        entity = zuuluu.bind(tangon)(michal, entity);
        return entity;
    };
    zuuluu['default'] = michal;
    return entity;
})();