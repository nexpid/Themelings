// app/modules/stickers/native/StickersPremiumUpsellAlert.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    report = argBar;
    romeon = argBaz;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    var _closure1_slot1 = romeon;
    var _closure1_slot2 = oscard;
    entity = global;
    option = entity.Object;
    golfie = option.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(option)(zuuluu, entity, tangon);
    foxtra = 0;
    golfie = oscard[foxtra];
    tangon = argCor;
    entity = undefined;
    tangon = tangon.bind(entity)(golfie);
    var _closure1_slot3 = tangon;
    tangon = 1;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    golfie = tangon.View;
    var _closure1_slot4 = golfie;
    golfie = tangon.Image;
    var _closure1_slot5 = golfie;
    tangon = tangon.ScrollView;
    var _closure1_slot6 = tangon;
    tangon = 2;
    tangon = oscard[tangon];
    tangon = romeon.bind(entity)(tangon);
    var _closure1_slot7 = tangon;
    tangon = 3;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    golfie = tangon.AnalyticEvents;
    var _closure1_slot8 = golfie;
    golfie = tangon.AnalyticsSections;
    var _closure1_slot9 = golfie;
    tangon = tangon.AnalyticsObjects;
    var _closure1_slot10 = tangon;
    tangon = 4;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    golfie = tangon.SubscriptionPlans;
    var _closure1_slot11 = golfie;
    tangon = tangon.NUM_FREE_GUILD_BOOSTS_WITH_PREMIUM;
    var _closure1_slot12 = tangon;
    tangon = 5;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    golfie = tangon.jsx;
    var _closure1_slot13 = golfie;
    tangon = tangon.jsxs;
    var _closure1_slot14 = tangon;
    golfie = {};
    tangon = 6;
    tangon = oscard[tangon];
    tangon = romeon.bind(entity)(tangon);
    golfie['icon'] = tangon;
    tangon = function() { // Original name: description
        report = _closure1_slot0;
        oscard = _closure1_slot2;
        entity = 7;
        michal = oscard[entity];
        tangon = undefined;
        michal = report.bind(tangon)(michal);
        zuuluu = michal.intl;
        michal = zuuluu.string;
        entity = oscard[entity];
        entity = report.bind(tangon)(entity);
        entity = entity.t;
        entity = entity.uAfKTU;
        entity = michal.bind(zuuluu)(entity);
        return entity;
    };
    golfie['description'] = tangon;
    yankee = 8;
    tangon = oscard[yankee];
    tangon = romeon.bind(entity)(tangon);
    tangon = tangon.unsafe_rawColors;
    tangon = tangon.PREMIUM_PERK_PURPLE;
    golfie['color'] = tangon;
    tangon = new Array(3);
    tangon[0] = golfie;
    golfie = {};
    option = 9;
    option = oscard[option];
    option = romeon.bind(entity)(option);
    golfie['icon'] = option;
    option = function() { // Original name: description
        oscard = _closure1_slot0;
        golfie = _closure1_slot2;
        entity = 7;
        zuuluu = golfie[entity];
        michal = undefined;
        zuuluu = oscard.bind(michal)(zuuluu);
        tangon = zuuluu.intl;
        zuuluu = tangon.formatToPlainString;
        entity = golfie[entity];
        entity = oscard.bind(michal)(entity);
        entity = entity.t;
        michal = entity.aVSVBA;
        entity = {};
        report = _closure1_slot12;
        entity['numFreeGuildSubscriptions'] = report;
        entity = zuuluu.bind(tangon)(michal, entity);
        return entity;
    };
    golfie['description'] = option;
    tangon[1] = golfie;
    golfie = {};
    option = 10;
    option = oscard[option];
    option = romeon.bind(entity)(option);
    golfie['icon'] = option;
    option = function() { // Original name: description
        report = _closure1_slot0;
        oscard = _closure1_slot2;
        entity = 7;
        michal = oscard[entity];
        tangon = undefined;
        michal = report.bind(tangon)(michal);
        zuuluu = michal.intl;
        michal = zuuluu.string;
        entity = oscard[entity];
        entity = report.bind(tangon)(entity);
        entity = entity.t;
        entity = entity.pqHIf3;
        entity = michal.bind(zuuluu)(entity);
        return entity;
    };
    golfie['description'] = option;
    option = oscard[yankee];
    option = romeon.bind(entity)(option);
    option = option.unsafe_rawColors;
    option = option.PREMIUM_PERK_GREEN;
    golfie['color'] = option;
    tangon[2] = golfie;
    var _closure1_slot15 = tangon;
    tangon = 11;
    tangon = oscard[tangon];
    option = report.bind(entity)(tangon);
    golfie = option.createStyles;
    tangon = {};
    verify = {};
    offset = 18;
    verify['paddingTop'] = offset;
    tangon['alert'] = verify;
    verify = {};
    offset = 500;
    verify['height'] = offset;
    tangon['shortHeightAlert'] = verify;
    verify = {};
    offset = 'center';
    verify['alignItems'] = offset;
    tangon['content'] = verify;
    verify = {'flexDirection': 'row-reverse', 'width': '100%', 'marginBottom': 16};
    tangon['closeContainer'] = verify;
    verify = {'textAlign': 'center', 'lineHeight': 20};
    tangon['description'] = verify;
    verify = {'backgroundColor': null, 'borderRadius': null, 'marginTop': 16, 'marginBottom': 0, 'paddingHorizontal': 12, 'paddingVertical': 8, 'width': '100%'};
    offset = oscard[yankee];
    offset = romeon.bind(entity)(offset);
    offset = offset.colors;
    offset = offset.BACKGROUND_SECONDARY;
    verify['backgroundColor'] = offset;
    offset = oscard[yankee];
    offset = romeon.bind(entity)(offset);
    offset = offset.radii;
    offset = offset.sm;
    verify['borderRadius'] = offset;
    offset = 12;
    tangon['perks'] = verify;
    verify = {'paddingVertical': 10, 'borderBottomColor': null, 'borderBottomWidth': 1, 'flexDirection': 'row', 'alignItems': 'center'};
    backup = oscard[yankee];
    backup = romeon.bind(entity)(backup);
    backup = backup.unsafe_rawColors;
    backup = backup.PRIMARY_560;
    verify['borderBottomColor'] = backup;
    tangon['perkRow'] = verify;
    verify = {};
    verify['borderBottomWidth'] = foxtra;
    tangon['lastPerkRow'] = verify;
    verify = {'width': 24, 'marginRight': 20};
    tangon['perkIcon'] = verify;
    verify = {'lineHeight': 20, 'flexShrink': 1};
    tangon['perkText'] = verify;
    verify = {'color': null, 'marginTop': 16, 'fontSize': 12, 'lineHeight': 16};
    yankee = oscard[yankee];
    yankee = romeon.bind(entity)(yankee);
    yankee = yankee.colors;
    yankee = yankee.TEXT_NORMAL;
    verify['color'] = yankee;
    tangon['disclaimer'] = verify;
    verify = {};
    verify['marginBottom'] = offset;
    tangon['imageHeader'] = verify;
    tangon = golfie.bind(option)(tangon);
    var _closure1_slot16 = tangon;
    tangon = function(argFoo) { // Original name: PerkRow
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            entity = argFoo;
            offset = entity.perk;
            option = entity.isLastPerk;
            entity = _closure1_slot16;
            tangon = undefined;
            verify = entity.bind(tangon)();
            zuuluu = _closure1_slot14;
            michal = _closure1_slot4;
            entity = {};
            golfie = verify.perkRow;
            report = new Array(2);
            report[0] = golfie;
            golfie = undefined;
            if(!option) { _fun00002_ip = 63; continue _fun00001 }
 57:
            golfie = verify.lastPerkRow;
 63:
            report[1] = golfie;
            entity['style'] = report;
            option = _closure1_slot13;
            golfie = _closure1_slot1;
            yankee = _closure1_slot2;
            report = 12;
            report = yankee[report];
            golfie = golfie.bind(tangon)(report);
            report = {};
            romeon = verify.perkIcon;
            report['style'] = romeon;
            romeon = offset.icon;
            report['source'] = romeon;
            foxtra = offset.color;
            romeon = null;
            romeon = romeon == foxtra;
            report['disableColor'] = romeon;
            romeon = offset.color;
            report['color'] = romeon;
            golfie = option.bind(tangon)(golfie, report);
            report = new Array(2);
            report[0] = golfie;
            golfie = _closure1_slot0;
            oscard = 13;
            oscard = yankee[oscard];
            oscard = golfie.bind(tangon)(oscard);
            golfie = oscard.Text;
            oscard = {'style': null, 'variant': 'text-md/medium', 'color': 'interactive-active'};
            verify = verify.perkText;
            oscard['style'] = verify;
            verify = offset.description;
            verify = verify.bind(offset)();
            oscard['children'] = verify;
            oscard = option.bind(tangon)(golfie, oscard);
            report[1] = oscard;
            entity['children'] = report;
            entity = zuuluu.bind(tangon)(michal, entity);
            return entity;
        }
    };
    var _closure1_slot17 = tangon;
    tangon = 29;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/stickers/native/StickersPremiumUpsellAlert.tsx';
    tangon = report.bind(oscard)(tangon);
    michal = function(argFoo) { // Original name: _default
        _fun00003: for(var _fun00004_ip = 0; ; ) switch(_fun00004_ip) {
 0:
            entity = argFoo;
            verify = entity.onClose;
            entity = entity.analyticsLocation;
            var _closure2_slot0 = entity;
            tangon = undefined;
            var _closure2_slot1 = tangon;
            entity = _closure1_slot16;
            result = entity.bind(tangon)();
            report = _closure1_slot3;
            zuuluu = report.useEffect;
            michal = function() {
                _fun00005: for(var _fun00006_ip = 0; ; ) switch(_fun00006_ip) {
 0:
                    zuuluu = _closure1_slot7;
                    michal = zuuluu.isReady;
                    michal = michal.bind(zuuluu)();
                    if(michal) { _fun00006_ip = 62; continue _fun00005 }
 20:
                    zuuluu = _closure1_slot1;
                    michal = _closure1_slot2;
                    entity = 14;
                    michal = michal[entity];
                    entity = undefined;
                    zuuluu = zuuluu.bind(entity)(michal);
                    michal = zuuluu.wait;
                    entity = function() {
                        zuuluu = _closure1_slot1;
                        michal = _closure1_slot2;
                        entity = 15;
                        michal = michal[entity];
                        entity = undefined;
                        michal = zuuluu.bind(entity)(michal);
                        entity = michal.loadProducts;
                        entity = entity.bind(michal)();
                        return entity;
                    };
                    entity = michal.bind(zuuluu)(entity);
 62:
                    entity = undefined;
                    return entity;
                }
            };
            entity = new Array(0);
            entity = zuuluu.bind(report)(michal, entity);
            michal = _closure1_slot0;
            zuuluu = _closure1_slot2;
            entity = 16;
            entity = zuuluu[entity];
            report = michal.bind(tangon)(entity);
            zuuluu = report.useStateFromStores;
            entity = _closure1_slot7;
            michal = new Array(1);
            michal[0] = entity;
            entity = function() {
                zuuluu = _closure1_slot7;
                michal = zuuluu.getProduct;
                oscard = _closure1_slot0;
                report = _closure1_slot2;
                tangon = 17;
                report = report[tangon];
                tangon = undefined;
                tangon = oscard.bind(tangon)(report);
                tangon = tangon.BasePlanIdToProductId;
                entity = _closure1_slot11;
                entity = entity.PREMIUM_MONTH_TIER_2;
                entity = tangon[entity];
                entity = michal.bind(zuuluu)(entity);
                return entity;
            };
            entity = zuuluu.bind(report)(michal, entity);
            ctrled = null;
            michal = ctrled == entity;
            vacuum = undefined;
            if(michal) { _fun00004_ip = 131; continue _fun00003 }
 125:
            vacuum = entity.priceString;
 131:
            michal = _closure1_slot1;
            report = _closure1_slot2;
            entity = 18;
            entity = report[entity];
            entity = michal.bind(tangon)(entity);
            entity = entity.bind(tangon)();
            golfie = entity.height;
            entity = 19;
            entity = report[entity];
            entity = michal.bind(tangon)(entity);
            entity = entity.bind(tangon)();
            entity = entity.analyticsLocations;
            _closure2_slot1 = entity;
            zuuluu = _closure1_slot14;
            entity = 20;
            entity = report[entity];
            michal = michal.bind(tangon)(entity);
            entity = {};
            offset = _closure1_slot0;
            sequen = 7;
            oscard = report[sequen];
            oscard = offset.bind(tangon)(oscard);
            yankee = oscard.intl;
            option = yankee.string;
            oscard = report[sequen];
            oscard = offset.bind(tangon)(oscard);
            oscard = oscard.t;
            oscard = oscard.f3Pet7;
            oscard = option.bind(yankee)(oscard);
            entity['cancelText'] = oscard;
            oscard = 21;
            oscard = report[oscard];
            oscard = offset.bind(tangon)(oscard);
            oscard = oscard.ButtonColors;
            oscard = oscard.GREEN;
            entity['confirmColor'] = oscard;
            oscard = report[sequen];
            oscard = offset.bind(tangon)(oscard);
            option = oscard.intl;
            oscard = option.string;
            report = report[sequen];
            report = offset.bind(tangon)(report);
            report = report.t;
            report = report.o3TniY;
            report = oscard.bind(option)(report);
            entity['confirmText'] = report;
            report = function() { // Original name: onConfirm
                report = _closure1_slot1;
                michal = _closure1_slot2;
                entity = 22;
                tangon = michal[entity];
                entity = undefined;
                verify = report.bind(entity)(tangon);
                option = verify.track;
                tangon = _closure1_slot8;
                golfie = tangon.PREMIUM_PROMOTION_OPENED;
                tangon = {};
                offset = {};
                foxtra = _closure2_slot0;
                backup = offset;
                yankee = copyDataProperties(backup, foxtra);
                yankee = _closure1_slot9;
                romeon = yankee.STICKER_PREMIUM_TIER_2_UPSELL_MODAL;
                yankee = 'section';
                offset[yankee] = romeon;
                yankee = _closure1_slot10;
                romeon = yankee.BUTTON_CTA;
                yankee = 'object';
                offset[yankee] = romeon;
                tangon['location'] = offset;
                tangon = option.bind(verify)(golfie, tangon);
                tangon = 23;
                tangon = michal[tangon];
                report = report.bind(entity)(tangon);
                tangon = report.pushLazy;
                golfie = _closure1_slot0;
                zuuluu = 25;
                zuuluu = michal[zuuluu];
                golfie = golfie.bind(entity)(zuuluu);
                zuuluu = 24;
                zuuluu = michal[zuuluu];
                michal = michal.paths;
                zuuluu = golfie.bind(entity)(zuuluu, michal);
                michal = {};
                oscard = _closure2_slot1;
                michal['analyticsLocations'] = oscard;
                michal = tangon.bind(report)(zuuluu, michal);
                return entity;
            };
            entity['onConfirm'] = report;
            entity['onClose'] = verify;
            entity['onCancel'] = verify;
            oscard = result.alert;
            report = new Array(2);
            report[0] = oscard;
            oscard = 580;
            golfie = golfie <= oscard;
            oscard = null;
            if(!golfie) { _fun00004_ip = 397; continue _fun00003 }
 391:
            oscard = result.shortHeightAlert;
 397:
            report[1] = oscard;
            entity['style'] = report;
            option = _closure1_slot13;
            yankee = _closure1_slot4;
            report = {};
            oscard = result.closeContainer;
            report['style'] = oscard;
            echoed = _closure1_slot0;
            kiloes = _closure1_slot2;
            oscard = 26;
            oscard = kiloes[oscard];
            oscard = echoed.bind(tangon)(oscard);
            golfie = oscard.PressableOpacity;
            oscard = {'accessibilityRole': 'button', 'accessibilityLabel': 'close'};
            oscard['onPress'] = verify;
            update = _closure1_slot1;
            verify = 12;
            verify = kiloes[verify];
            offset = update.bind(tangon)(verify);
            verify = {};
            romeon = 27;
            romeon = kiloes[romeon];
            romeon = update.bind(tangon)(romeon);
            verify['source'] = romeon;
            verify = option.bind(tangon)(offset, verify);
            oscard['children'] = verify;
            oscard = option.bind(tangon)(golfie, oscard);
            report['children'] = oscard;
            oscard = option.bind(tangon)(yankee, report);
            report = new Array(2);
            report[0] = oscard;
            golfie = _closure1_slot6;
            oscard = {};
            offset = _closure1_slot14;
            verify = {};
            romeon = result.content;
            verify['style'] = romeon;
            romeon = function() { // Original name: onStartShouldSetResponder
                entity = true;
                return entity;
            };
            verify['onStartShouldSetResponder'] = romeon;
            foxtra = _closure1_slot5;
            romeon = {};
            backup = 28;
            backup = kiloes[backup];
            backup = update.bind(tangon)(backup);
            romeon['source'] = backup;
            backup = result.imageHeader;
            romeon['style'] = backup;
            foxtra = option.bind(tangon)(foxtra, romeon);
            romeon = new Array(3);
            romeon[0] = foxtra;
            foxtra = 13;
            foxtra = kiloes[foxtra];
            foxtra = echoed.bind(tangon)(foxtra);
            backup = foxtra.Text;
            foxtra = {};
            update = result.description;
            foxtra['style'] = update;
            update = 'text-md/medium';
            foxtra['variant'] = update;
            update = kiloes[sequen];
            update = echoed.bind(tangon)(update);
            source = update.intl;
            update = source.format;
            kiloes = kiloes[sequen];
            kiloes = echoed.bind(tangon)(kiloes);
            kiloes = kiloes.t;
            echoed = kiloes.TBsJfX;
            kiloes = {};
            sequen = ctrled != vacuum;
            ctrled = '$...';
            if(!sequen) { _fun00004_ip = 711; continue _fun00003 }
 708:
            ctrled = vacuum;
 711:
            kiloes['monthlyPrice'] = ctrled;
            kiloes = update.bind(source)(echoed, kiloes);
            foxtra['children'] = kiloes;
            foxtra = option.bind(tangon)(backup, foxtra);
            romeon[1] = foxtra;
            kiloes = _closure1_slot13;
            backup = _closure1_slot4;
            foxtra = {};
            result = result.perks;
            foxtra['style'] = result;
            result = _closure1_slot15;
            output = result.map;
            sizing = function(argFoo, argBar) {
                report = argBar;
                tangon = _closure1_slot13;
                zuuluu = _closure1_slot17;
                michal = {};
                oscard = argFoo;
                michal['perk'] = oscard;
                entity = _closure1_slot15;
                oscard = entity.length;
                entity = 1;
                entity = oscard - entity;
                entity = report === entity;
                michal['isLastPerk'] = entity;
                entity = undefined;
                entity = tangon.bind(entity)(zuuluu, michal, report);
                return entity;
            };
            sizing = output.bind(result)(sizing);
            foxtra['children'] = sizing;
            foxtra = kiloes.bind(tangon)(backup, foxtra);
            romeon[2] = foxtra;
            verify['children'] = romeon;
            verify = offset.bind(tangon)(yankee, verify);
            oscard['children'] = verify;
            oscard = option.bind(tangon)(golfie, oscard);
            report[1] = oscard;
            entity['children'] = report;
            entity = zuuluu.bind(tangon)(michal, entity);
            return entity;
        }
    };
    zuuluu['default'] = michal;
    return entity;
})();