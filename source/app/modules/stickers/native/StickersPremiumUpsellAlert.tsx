// app/modules/stickers/native/StickersPremiumUpsellAlert.tsx
export default (function(argFoo, argBar, argBaz, argCorge, _, argFred, argPlugh) {
    report = argBar;
    romeo = argBaz;
    zulu = argFred;
    oscar = argPlugh;
    var _closure1_slot0 = report;
    var _closure1_slot1 = romeo;
    var _closure1_slot2 = oscar;
    entity = global;
    options = entity.Object;
    golf = options.defineProperty;
    tango = {};
    entity = true;
    tango['value'] = entity;
    entity = '__esModule';
    entity = golf.bind(options)(zulu, entity, tango);
    foxtrot = 0;
    golf = oscar[foxtrot];
    tango = argCorge;
    entity = undefined;
    tango = tango.bind(entity)(golf);
    var _closure1_slot3 = tango;
    tango = 1;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    golf = tango.View;
    var _closure1_slot4 = golf;
    golf = tango.Image;
    var _closure1_slot5 = golf;
    tango = tango.ScrollView;
    var _closure1_slot6 = tango;
    tango = 2;
    tango = oscar[tango];
    tango = romeo.bind(entity)(tango);
    var _closure1_slot7 = tango;
    tango = 3;
    tango = oscar[tango];
    tango = romeo.bind(entity)(tango);
    var _closure1_slot8 = tango;
    tango = 4;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    golf = tango.AnalyticEvents;
    var _closure1_slot9 = golf;
    golf = tango.AnalyticsSections;
    var _closure1_slot10 = golf;
    tango = tango.AnalyticsObjects;
    var _closure1_slot11 = tango;
    tango = 5;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    golf = tango.SubscriptionPlans;
    var _closure1_slot12 = golf;
    tango = tango.NUM_FREE_GUILD_BOOSTS_WITH_PREMIUM;
    var _closure1_slot13 = tango;
    tango = 6;
    golf = oscar[tango];
    golf = report.bind(entity)(golf);
    golf = golf.jsx;
    var _closure1_slot14 = golf;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.jsxs;
    var _closure1_slot15 = tango;
    golf = {};
    tango = 7;
    tango = oscar[tango];
    tango = romeo.bind(entity)(tango);
    golf['icon'] = tango;
    tango = function() { // Original name: description
        report = _closure1_slot0;
        oscar = _closure1_slot2;
        entity = 8;
        mike = oscar[entity];
        tango = undefined;
        mike = report.bind(tango)(mike);
        zulu = mike.intl;
        mike = zulu.string;
        entity = oscar[entity];
        entity = report.bind(tango)(entity);
        entity = entity.t;
        entity = entity.uAfKTU;
        entity = mike.bind(zulu)(entity);
        return entity;
    };
    golf['description'] = tango;
    yankee = 9;
    tango = oscar[yankee];
    tango = romeo.bind(entity)(tango);
    tango = tango.unsafe_rawColors;
    tango = tango.PREMIUM_PERK_PURPLE;
    golf['color'] = tango;
    tango = new Array(3);
    tango[0] = golf;
    golf = {};
    options = 10;
    options = oscar[options];
    options = romeo.bind(entity)(options);
    golf['icon'] = options;
    options = function() { // Original name: description
        oscar = _closure1_slot0;
        golf = _closure1_slot2;
        entity = 8;
        zulu = golf[entity];
        mike = undefined;
        zulu = oscar.bind(mike)(zulu);
        tango = zulu.intl;
        zulu = tango.formatToPlainString;
        entity = golf[entity];
        entity = oscar.bind(mike)(entity);
        entity = entity.t;
        mike = entity.aVSVBA;
        entity = {};
        report = _closure1_slot13;
        entity['numFreeGuildSubscriptions'] = report;
        entity = zulu.bind(tango)(mike, entity);
        return entity;
    };
    golf['description'] = options;
    tango[1] = golf;
    golf = {};
    options = 11;
    options = oscar[options];
    options = romeo.bind(entity)(options);
    golf['icon'] = options;
    options = function() { // Original name: description
        report = _closure1_slot0;
        oscar = _closure1_slot2;
        entity = 8;
        mike = oscar[entity];
        tango = undefined;
        mike = report.bind(tango)(mike);
        zulu = mike.intl;
        mike = zulu.string;
        entity = oscar[entity];
        entity = report.bind(tango)(entity);
        entity = entity.t;
        entity = entity.pqHIf3;
        entity = mike.bind(zulu)(entity);
        return entity;
    };
    golf['description'] = options;
    options = oscar[yankee];
    options = romeo.bind(entity)(options);
    options = options.unsafe_rawColors;
    options = options.PREMIUM_PERK_GREEN;
    golf['color'] = options;
    tango[2] = golf;
    var _closure1_slot16 = tango;
    offset = 12;
    tango = oscar[offset];
    options = report.bind(entity)(tango);
    golf = options.createStyles;
    tango = {};
    verify = {};
    backup = 18;
    verify['paddingTop'] = backup;
    tango['alert'] = verify;
    verify = {};
    backup = 500;
    verify['height'] = backup;
    tango['shortHeightAlert'] = verify;
    verify = {};
    backup = 'center';
    verify['alignItems'] = backup;
    tango['content'] = verify;
    verify = {'flexDirection': 'row-reverse', 'width': '100%', 'marginBottom': 16};
    tango['closeContainer'] = verify;
    verify = {'textAlign': 'center', 'lineHeight': 20};
    tango['description'] = verify;
    verify = {'backgroundColor': null, 'borderRadius': null, 'marginTop': 16, 'marginBottom': 0, 'paddingHorizontal': 12, 'paddingVertical': 8, 'width': '100%'};
    backup = oscar[yankee];
    backup = romeo.bind(entity)(backup);
    backup = backup.colors;
    backup = backup.BACKGROUND_SECONDARY;
    verify['backgroundColor'] = backup;
    backup = oscar[yankee];
    backup = romeo.bind(entity)(backup);
    backup = backup.radii;
    backup = backup.sm;
    verify['borderRadius'] = backup;
    tango['perks'] = verify;
    verify = {'paddingVertical': 10, 'borderBottomColor': null, 'borderBottomWidth': 1, 'flexDirection': 'row', 'alignItems': 'center'};
    backup = oscar[yankee];
    backup = romeo.bind(entity)(backup);
    backup = backup.unsafe_rawColors;
    backup = backup.PRIMARY_560;
    verify['borderBottomColor'] = backup;
    tango['perkRow'] = verify;
    verify = {};
    verify['borderBottomWidth'] = foxtrot;
    tango['lastPerkRow'] = verify;
    verify = {'width': 24, 'marginRight': 20};
    tango['perkIcon'] = verify;
    verify = {'lineHeight': 20, 'flexShrink': 1};
    tango['perkText'] = verify;
    verify = {'color': null, 'marginTop': 16, 'fontSize': 12, 'lineHeight': 16};
    yankee = oscar[yankee];
    yankee = romeo.bind(entity)(yankee);
    yankee = yankee.colors;
    yankee = yankee.TEXT_NORMAL;
    verify['color'] = yankee;
    tango['disclaimer'] = verify;
    verify = {};
    verify['marginBottom'] = offset;
    tango['imageHeader'] = verify;
    tango = golf.bind(options)(tango);
    var _closure1_slot17 = tango;
    tango = function(argFoo) { // Original name: PerkRow
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            entity = argFoo;
            offset = entity.perk;
            options = entity.isLastPerk;
            entity = _closure1_slot17;
            tango = undefined;
            verify = entity.bind(tango)();
            zulu = _closure1_slot15;
            mike = _closure1_slot4;
            entity = {};
            golf = verify.perkRow;
            report = new Array(2);
            report[0] = golf;
            golf = undefined;
            if(!options) { _fun00002_ip = 63; continue _fun00001 }
 57:
            golf = verify.lastPerkRow;
 63:
            report[1] = golf;
            entity['style'] = report;
            options = _closure1_slot14;
            golf = _closure1_slot1;
            yankee = _closure1_slot2;
            report = 13;
            report = yankee[report];
            golf = golf.bind(tango)(report);
            report = {};
            romeo = verify.perkIcon;
            report['style'] = romeo;
            romeo = offset.icon;
            report['source'] = romeo;
            foxtrot = offset.color;
            romeo = null;
            romeo = romeo == foxtrot;
            report['disableColor'] = romeo;
            romeo = offset.color;
            report['color'] = romeo;
            golf = options.bind(tango)(golf, report);
            report = new Array(2);
            report[0] = golf;
            golf = _closure1_slot0;
            oscar = 14;
            oscar = yankee[oscar];
            oscar = golf.bind(tango)(oscar);
            golf = oscar.Text;
            oscar = {'style': null, 'variant': 'text-md/medium', 'color': 'interactive-active'};
            verify = verify.perkText;
            oscar['style'] = verify;
            verify = offset.description;
            verify = verify.bind(offset)();
            oscar['children'] = verify;
            oscar = options.bind(tango)(golf, oscar);
            report[1] = oscar;
            entity['children'] = report;
            entity = zulu.bind(tango)(mike, entity);
            return entity;
        }
    };
    var _closure1_slot18 = tango;
    tango = 29;
    tango = oscar[tango];
    oscar = report.bind(entity)(tango);
    report = oscar.fileFinishedImporting;
    tango = 'modules/stickers/native/StickersPremiumUpsellAlert.tsx';
    tango = report.bind(oscar)(tango);
    mike = function(argFoo) { // Original name: _default
        _fun00003: for(var _fun00004_ip = 0; ; ) switch(_fun00004_ip) {
 0:
            entity = argFoo;
            verify = entity.onClose;
            entity = entity.analyticsLocation;
            var _closure2_slot0 = entity;
            tango = undefined;
            var _closure2_slot1 = tango;
            entity = _closure1_slot17;
            result = entity.bind(tango)();
            report = _closure1_slot3;
            zulu = report.useEffect;
            mike = function() {
                _fun00005: for(var _fun00006_ip = 0; ; ) switch(_fun00006_ip) {
 0:
                    zulu = _closure1_slot7;
                    mike = zulu.isReady;
                    mike = mike.bind(zulu)();
                    if(mike) { _fun00006_ip = 62; continue _fun00005 }
 20:
                    zulu = _closure1_slot1;
                    mike = _closure1_slot2;
                    entity = 15;
                    mike = mike[entity];
                    entity = undefined;
                    zulu = zulu.bind(entity)(mike);
                    mike = zulu.wait;
                    entity = function() {
                        zulu = _closure1_slot1;
                        mike = _closure1_slot2;
                        entity = 16;
                        mike = mike[entity];
                        entity = undefined;
                        mike = zulu.bind(entity)(mike);
                        entity = mike.loadProducts;
                        entity = entity.bind(mike)();
                        return entity;
                    };
                    entity = mike.bind(zulu)(entity);
 62:
                    entity = undefined;
                    return entity;
                }
            };
            entity = new Array(0);
            entity = zulu.bind(report)(mike, entity);
            zulu = _closure1_slot0;
            mike = _closure1_slot2;
            entity = 17;
            mike = mike[entity];
            oscar = zulu.bind(tango)(mike);
            report = oscar.useStateFromStores;
            mike = _closure1_slot7;
            zulu = new Array(1);
            zulu[0] = mike;
            mike = function() {
                zulu = _closure1_slot7;
                mike = zulu.getProduct;
                oscar = _closure1_slot0;
                report = _closure1_slot2;
                tango = 18;
                report = report[tango];
                tango = undefined;
                tango = oscar.bind(tango)(report);
                tango = tango.BasePlanIdToProductId;
                entity = _closure1_slot12;
                entity = entity.PREMIUM_MONTH_TIER_2;
                entity = tango[entity];
                entity = mike.bind(zulu)(entity);
                return entity;
            };
            mike = report.bind(oscar)(zulu, mike);
            control = null;
            zulu = control == mike;
            vacuum = undefined;
            if(zulu) { _fun00004_ip = 131; continue _fun00003 }
 125:
            vacuum = mike.priceString;
 131:
            offset = _closure1_slot0;
            report = _closure1_slot2;
            entity = report[entity];
            oscar = offset.bind(tango)(entity);
            zulu = oscar.useStateFromStores;
            entity = _closure1_slot8;
            mike = new Array(1);
            mike[0] = entity;
            entity = function() {
                mike = _closure1_slot8;
                entity = mike.getHeight;
                entity = entity.bind(mike)();
                return entity;
            };
            golf = zulu.bind(oscar)(mike, entity);
            mike = _closure1_slot1;
            entity = 19;
            entity = report[entity];
            entity = mike.bind(tango)(entity);
            entity = entity.bind(tango)();
            entity = entity.analyticsLocations;
            _closure2_slot1 = entity;
            zulu = _closure1_slot15;
            entity = 20;
            entity = report[entity];
            mike = mike.bind(tango)(entity);
            entity = {};
            sequence = 8;
            oscar = report[sequence];
            oscar = offset.bind(tango)(oscar);
            yankee = oscar.intl;
            options = yankee.string;
            oscar = report[sequence];
            oscar = offset.bind(tango)(oscar);
            oscar = oscar.t;
            oscar = oscar.f3Pet7;
            oscar = options.bind(yankee)(oscar);
            entity['cancelText'] = oscar;
            oscar = 21;
            oscar = report[oscar];
            oscar = offset.bind(tango)(oscar);
            oscar = oscar.ButtonColors;
            oscar = oscar.GREEN;
            entity['confirmColor'] = oscar;
            oscar = report[sequence];
            oscar = offset.bind(tango)(oscar);
            options = oscar.intl;
            oscar = options.string;
            report = report[sequence];
            report = offset.bind(tango)(report);
            report = report.t;
            report = report.o3TniY;
            report = oscar.bind(options)(report);
            entity['confirmText'] = report;
            report = function() { // Original name: onConfirm
                report = _closure1_slot1;
                mike = _closure1_slot2;
                entity = 22;
                tango = mike[entity];
                entity = undefined;
                verify = report.bind(entity)(tango);
                options = verify.track;
                tango = _closure1_slot9;
                golf = tango.PREMIUM_PROMOTION_OPENED;
                tango = {};
                offset = {};
                foxtrot = _closure2_slot0;
                backup = offset;
                yankee = copyDataProperties(backup, foxtrot);
                yankee = _closure1_slot10;
                romeo = yankee.STICKER_PREMIUM_TIER_2_UPSELL_MODAL;
                yankee = 'section';
                offset[yankee] = romeo;
                yankee = _closure1_slot11;
                romeo = yankee.BUTTON_CTA;
                yankee = 'object';
                offset[yankee] = romeo;
                tango['location'] = offset;
                tango = options.bind(verify)(golf, tango);
                tango = 23;
                tango = mike[tango];
                report = report.bind(entity)(tango);
                tango = report.pushLazy;
                golf = _closure1_slot0;
                zulu = 25;
                zulu = mike[zulu];
                golf = golf.bind(entity)(zulu);
                zulu = 24;
                zulu = mike[zulu];
                mike = mike.paths;
                zulu = golf.bind(entity)(zulu, mike);
                mike = {};
                oscar = _closure2_slot1;
                mike['analyticsLocations'] = oscar;
                mike = tango.bind(report)(zulu, mike);
                return entity;
            };
            entity['onConfirm'] = report;
            entity['onClose'] = verify;
            entity['onCancel'] = verify;
            oscar = result.alert;
            report = new Array(2);
            report[0] = oscar;
            oscar = 580;
            golf = golf <= oscar;
            oscar = null;
            if(!golf) { _fun00004_ip = 413; continue _fun00003 }
 407:
            oscar = result.shortHeightAlert;
 413:
            report[1] = oscar;
            entity['style'] = report;
            options = _closure1_slot14;
            yankee = _closure1_slot4;
            report = {};
            oscar = result.closeContainer;
            report['style'] = oscar;
            echo = _closure1_slot0;
            kilo = _closure1_slot2;
            oscar = 26;
            oscar = kilo[oscar];
            oscar = echo.bind(tango)(oscar);
            golf = oscar.PressableOpacity;
            oscar = {'accessibilityRole': 'button', 'accessibilityLabel': 'close'};
            oscar['onPress'] = verify;
            update = _closure1_slot1;
            verify = 13;
            verify = kilo[verify];
            offset = update.bind(tango)(verify);
            verify = {};
            romeo = 27;
            romeo = kilo[romeo];
            romeo = update.bind(tango)(romeo);
            verify['source'] = romeo;
            verify = options.bind(tango)(offset, verify);
            oscar['children'] = verify;
            oscar = options.bind(tango)(golf, oscar);
            report['children'] = oscar;
            oscar = options.bind(tango)(yankee, report);
            report = new Array(2);
            report[0] = oscar;
            golf = _closure1_slot6;
            oscar = {};
            offset = _closure1_slot15;
            verify = {};
            romeo = result.content;
            verify['style'] = romeo;
            romeo = function() { // Original name: onStartShouldSetResponder
                entity = true;
                return entity;
            };
            verify['onStartShouldSetResponder'] = romeo;
            foxtrot = _closure1_slot5;
            romeo = {};
            backup = 28;
            backup = kilo[backup];
            backup = update.bind(tango)(backup);
            romeo['source'] = backup;
            backup = result.imageHeader;
            romeo['style'] = backup;
            foxtrot = options.bind(tango)(foxtrot, romeo);
            romeo = new Array(3);
            romeo[0] = foxtrot;
            foxtrot = 14;
            foxtrot = kilo[foxtrot];
            foxtrot = echo.bind(tango)(foxtrot);
            backup = foxtrot.Text;
            foxtrot = {};
            update = result.description;
            foxtrot['style'] = update;
            update = 'text-md/medium';
            foxtrot['variant'] = update;
            update = kilo[sequence];
            update = echo.bind(tango)(update);
            source = update.intl;
            update = source.format;
            kilo = kilo[sequence];
            kilo = echo.bind(tango)(kilo);
            kilo = kilo.t;
            echo = kilo.TBsJfX;
            kilo = {};
            sequence = control != vacuum;
            control = '$...';
            if(!sequence) { _fun00004_ip = 725; continue _fun00003 }
 722:
            control = vacuum;
 725:
            kilo['monthlyPrice'] = control;
            kilo = update.bind(source)(echo, kilo);
            foxtrot['children'] = kilo;
            foxtrot = options.bind(tango)(backup, foxtrot);
            romeo[1] = foxtrot;
            kilo = _closure1_slot14;
            backup = _closure1_slot4;
            foxtrot = {};
            result = result.perks;
            foxtrot['style'] = result;
            result = _closure1_slot16;
            output = result.map;
            sizing = function(argFoo, argBar) {
                report = argBar;
                tango = _closure1_slot14;
                zulu = _closure1_slot18;
                mike = {};
                oscar = argFoo;
                mike['perk'] = oscar;
                entity = _closure1_slot16;
                oscar = entity.length;
                entity = 1;
                entity = oscar - entity;
                entity = report === entity;
                mike['isLastPerk'] = entity;
                entity = undefined;
                entity = tango.bind(entity)(zulu, mike, report);
                return entity;
            };
            sizing = output.bind(result)(sizing);
            foxtrot['children'] = sizing;
            foxtrot = kilo.bind(tango)(backup, foxtrot);
            romeo[2] = foxtrot;
            verify['children'] = romeo;
            verify = offset.bind(tango)(yankee, verify);
            oscar['children'] = verify;
            oscar = options.bind(tango)(golf, oscar);
            report[1] = oscar;
            entity['children'] = report;
            entity = zulu.bind(tango)(mike, entity);
            return entity;
        }
    };
    zulu['default'] = mike;
    return entity;
})();