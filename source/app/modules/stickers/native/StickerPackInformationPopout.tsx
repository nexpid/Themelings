// app/modules/stickers/native/StickerPackInformationPopout.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    report = argBar;
    sizing = argBaz;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    var _closure1_slot1 = oscard;
    entity = global;
    option = entity.Object;
    golfie = option.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(option)(zuuluu, entity, tangon);
    entity = 0;
    golfie = oscard[entity];
    tangon = argCor;
    entity = undefined;
    tangon = tangon.bind(entity)(golfie);
    tangon = 1;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    golfie = tangon.View;
    var _closure1_slot2 = golfie;
    tangon = tangon.FlatList;
    var _closure1_slot3 = tangon;
    tangon = 2;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    foxtra = tangon.Fonts;
    tangon = 3;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    golfie = tangon.jsx;
    var _closure1_slot4 = golfie;
    tangon = tangon.jsxs;
    var _closure1_slot5 = tangon;
    tangon = 4;
    tangon = oscard[tangon];
    option = report.bind(entity)(tangon);
    golfie = option.createStyles;
    tangon = {};
    verify = {'backgroundColor': null, 'width': '90%', 'marginHorizontal': '5%', 'padding': 16};
    romeon = 5;
    offset = oscard[romeon];
    offset = sizing.bind(entity)(offset);
    offset = offset.colors;
    offset = offset.BACKGROUND_PRIMARY;
    verify['backgroundColor'] = offset;
    kiloes = 16;
    offset = oscard[romeon];
    offset = sizing.bind(entity)(offset);
    offset = offset.radii;
    offset = offset.xs;
    verify['borderRadius'] = offset;
    offset = oscard[romeon];
    offset = sizing.bind(entity)(offset);
    offset = offset.colors;
    offset = offset.BLACK;
    verify['shadowColor'] = offset;
    offset = {'width': 2, 'height': 2};
    verify['shadowOffset'] = offset;
    offset = 0.25;
    verify['shadowOpacity'] = offset;
    verify['shadowRadius'] = romeon;
    tangon['informationContainer'] = verify;
    yankee = 'row';
    verify = {'flexDirection': 'row', 'justifyContent': 'space-between', 'marginBottom': 8};
    tangon['headerContainer'] = verify;
    verify = {};
    offset = 20;
    verify['lineHeight'] = offset;
    tangon['informationHeader'] = verify;
    verify = {};
    backup = 6;
    backup = oscard[backup];
    backup = sizing.bind(entity)(backup);
    foxtra = foxtra.DISPLAY_EXTRABOLD;
    romeon = oscard[romeon];
    romeon = sizing.bind(entity)(romeon);
    romeon = romeon.unsafe_rawColors;
    romeon = romeon.BRAND_500;
    result = backup.bind(entity)(foxtra, romeon, kiloes);
    echoed = verify;
    romeon = copyDataProperties(echoed, result);
    tangon['closeText'] = verify;
    verify = {};
    verify['flexDirection'] = yankee;
    tangon['informationContentContainer'] = verify;
    verify = {};
    verify['lineHeight'] = offset;
    tangon['informationContent'] = verify;
    verify = {'flex': 1, 'marginLeft': 5};
    tangon['informationContentDescription'] = verify;
    tangon = golfie.bind(option)(tangon);
    var _closure1_slot6 = tangon;
    tangon = function(argFoo) { // Original name: generateListData
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            entity = new Array(0);
            zuuluu = _closure1_slot0;
            report = _closure1_slot1;
            michal = 7;
            michal = report[michal];
            option = undefined;
            report = zuuluu.bind(option)(michal);
            zuuluu = report.isStickerPackAnimated;
            michal = argFoo;
            michal = zuuluu.bind(report)(michal);
            if(!michal) { _fun00002_ip = 127; continue _fun00001 }
 46:
            zuuluu = entity.push;
            michal = {};
            report = 'animated';
            michal['key'] = report;
            golfie = _closure1_slot0;
            verify = _closure1_slot1;
            tangon = 8;
            report = verify[tangon];
            report = golfie.bind(option)(report);
            oscard = report.intl;
            report = oscard.string;
            tangon = verify[tangon];
            tangon = golfie.bind(option)(tangon);
            tangon = tangon.t;
            tangon = tangon.W11rMT;
            tangon = report.bind(oscard)(tangon);
            michal['description'] = tangon;
            michal = zuuluu.bind(entity)(michal);
 127:
            return entity;
        }
    };
    var _closure1_slot7 = tangon;
    tangon = 12;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/stickers/native/StickerPackInformationPopout.tsx';
    tangon = report.bind(oscard)(tangon);
    tangon = function(argFoo) { // Original name: _default
        entity = argFoo;
        source = entity.stickerPack;
        foxtra = entity.onClose;
        golfie = entity.style;
        entity = _closure1_slot6;
        tangon = undefined;
        sizing = entity.bind(tangon)();
        var _closure2_slot0 = sizing;
        entity = _closure1_slot7;
        offset = entity.bind(tangon)(source);
        zuuluu = _closure1_slot5;
        michal = _closure1_slot2;
        entity = {};
        option = sizing.informationContainer;
        report = new Array(2);
        report[0] = option;
        report[1] = golfie;
        entity['style'] = report;
        report = {};
        golfie = sizing.headerContainer;
        report['style'] = golfie;
        option = _closure1_slot4;
        result = _closure1_slot0;
        echoed = _closure1_slot1;
        golfie = 9;
        golfie = echoed[golfie];
        golfie = result.bind(tangon)(golfie);
        yankee = golfie.Text;
        golfie = {'style': null, 'variant': 'text-md/semibold', 'color': 'header-primary'};
        romeon = sizing.informationHeader;
        golfie['style'] = romeon;
        kiloes = 8;
        romeon = echoed[kiloes];
        romeon = result.bind(tangon)(romeon);
        update = romeon.intl;
        output = update.format;
        romeon = echoed[kiloes];
        romeon = result.bind(tangon)(romeon);
        romeon = romeon.t;
        backup = romeon.XDm6yM;
        romeon = {};
        source = source.name;
        romeon['stickerPackName'] = source;
        romeon = output.bind(update)(backup, romeon);
        golfie['children'] = romeon;
        yankee = option.bind(tangon)(yankee, golfie);
        golfie = new Array(2);
        golfie[0] = yankee;
        yankee = 10;
        yankee = echoed[yankee];
        yankee = result.bind(tangon)(yankee);
        romeon = yankee.PressableOpacity;
        yankee = {};
        yankee['onPress'] = foxtra;
        foxtra = 'button';
        yankee['accessibilityRole'] = foxtra;
        foxtra = echoed[kiloes];
        foxtra = result.bind(tangon)(foxtra);
        output = foxtra.intl;
        backup = output.string;
        foxtra = echoed[kiloes];
        foxtra = result.bind(tangon)(foxtra);
        foxtra = foxtra.t;
        foxtra = foxtra.cpT0Cg;
        foxtra = backup.bind(output)(foxtra);
        yankee['accessibilityLabel'] = foxtra;
        foxtra = 11;
        foxtra = echoed[foxtra];
        foxtra = result.bind(tangon)(foxtra);
        backup = foxtra.LegacyText;
        foxtra = {};
        sizing = sizing.closeText;
        foxtra['style'] = sizing;
        sizing = echoed[kiloes];
        sizing = result.bind(tangon)(sizing);
        output = sizing.intl;
        sizing = output.string;
        kiloes = echoed[kiloes];
        kiloes = result.bind(tangon)(kiloes);
        kiloes = kiloes.t;
        kiloes = kiloes.cpT0Cg;
        kiloes = sizing.bind(output)(kiloes);
        foxtra['children'] = kiloes;
        foxtra = option.bind(tangon)(backup, foxtra);
        yankee['children'] = foxtra;
        yankee = option.bind(tangon)(romeon, yankee);
        golfie[1] = yankee;
        report['children'] = golfie;
        golfie = zuuluu.bind(tangon)(michal, report);
        report = new Array(2);
        report[0] = golfie;
        golfie = _closure1_slot3;
        oscard = {};
        oscard['data'] = offset;
        verify = function(argFoo) { // Original name: renderItem
            entity = argFoo;
            verify = entity.item;
            tangon = _closure1_slot5;
            zuuluu = _closure1_slot2;
            michal = {};
            yankee = _closure2_slot0;
            report = yankee.informationContentContainer;
            michal['style'] = report;
            option = _closure1_slot4;
            golfie = _closure1_slot0;
            offset = _closure1_slot1;
            oscard = 9;
            report = offset[oscard];
            entity = undefined;
            report = golfie.bind(entity)(report);
            romeon = report.Text;
            report = {'style': null, 'variant': 'text-md/medium', 'color': 'header-secondary', 'children': 'â€¢'};
            foxtra = yankee.informationContent;
            report['style'] = foxtra;
            romeon = option.bind(entity)(romeon, report);
            report = new Array(2);
            report[0] = romeon;
            oscard = offset[oscard];
            oscard = golfie.bind(entity)(oscard);
            golfie = oscard.Text;
            oscard = {'style': null, 'variant': 'text-md/medium', 'color': 'header-secondary'};
            romeon = yankee.informationContent;
            offset = new Array(2);
            offset[0] = romeon;
            yankee = yankee.informationContentDescription;
            offset[1] = yankee;
            oscard['style'] = offset;
            verify = verify.description;
            oscard['children'] = verify;
            oscard = option.bind(entity)(golfie, oscard);
            report[1] = oscard;
            michal['children'] = report;
            entity = tangon.bind(entity)(zuuluu, michal);
            return entity;
        };
        oscard['renderItem'] = verify;
        oscard = option.bind(tangon)(golfie, oscard);
        report[1] = oscard;
        entity['children'] = report;
        entity = zuuluu.bind(tangon)(michal, entity);
        return entity;
    };
    zuuluu['default'] = tangon;
    michal = function(argFoo) {
        zuuluu = _closure1_slot7;
        michal = undefined;
        entity = argFoo;
        entity = zuuluu.bind(michal)(entity);
        michal = entity.length;
        entity = 0;
        entity = michal > entity;
        return entity;
    };
    zuuluu['doesStickerPackHavePopoutInformation'] = michal;
    return entity;
})();