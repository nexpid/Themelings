// app/modules/stickers/native/StickerPackInformationPopout.tsx
export default (function(argFoo, argBar, argBaz, argCorge, _, argFred, argPlugh) {
    report = argBar;
    sizing = argBaz;
    zulu = argFred;
    oscar = argPlugh;
    var _closure1_slot0 = report;
    var _closure1_slot1 = oscar;
    entity = global;
    options = entity.Object;
    golf = options.defineProperty;
    tango = {};
    entity = true;
    tango['value'] = entity;
    entity = '__esModule';
    entity = golf.bind(options)(zulu, entity, tango);
    entity = 0;
    golf = oscar[entity];
    tango = argCorge;
    entity = undefined;
    tango = tango.bind(entity)(golf);
    tango = 1;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    golf = tango.View;
    var _closure1_slot2 = golf;
    tango = tango.FlatList;
    var _closure1_slot3 = tango;
    tango = 2;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    foxtrot = tango.Fonts;
    tango = 3;
    golf = oscar[tango];
    golf = report.bind(entity)(golf);
    golf = golf.jsx;
    var _closure1_slot4 = golf;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.jsxs;
    var _closure1_slot5 = tango;
    tango = 4;
    tango = oscar[tango];
    options = report.bind(entity)(tango);
    golf = options.createStyles;
    tango = {};
    verify = {'backgroundColor': null, 'width': '90%', 'marginHorizontal': '5%', 'padding': 16};
    romeo = 5;
    offset = oscar[romeo];
    offset = sizing.bind(entity)(offset);
    offset = offset.colors;
    offset = offset.BACKGROUND_PRIMARY;
    verify['backgroundColor'] = offset;
    kilo = 16;
    offset = oscar[romeo];
    offset = sizing.bind(entity)(offset);
    offset = offset.radii;
    offset = offset.xs;
    verify['borderRadius'] = offset;
    offset = oscar[romeo];
    offset = sizing.bind(entity)(offset);
    offset = offset.colors;
    offset = offset.BLACK;
    verify['shadowColor'] = offset;
    offset = {'width': 2, 'height': 2};
    verify['shadowOffset'] = offset;
    offset = 0.25;
    verify['shadowOpacity'] = offset;
    verify['shadowRadius'] = romeo;
    tango['informationContainer'] = verify;
    yankee = 'row';
    verify = {'flexDirection': 'row', 'justifyContent': 'space-between', 'marginBottom': 8};
    tango['headerContainer'] = verify;
    verify = {};
    offset = 20;
    verify['lineHeight'] = offset;
    tango['informationHeader'] = verify;
    verify = {};
    backup = 6;
    backup = oscar[backup];
    backup = sizing.bind(entity)(backup);
    foxtrot = foxtrot.DISPLAY_EXTRABOLD;
    romeo = oscar[romeo];
    romeo = sizing.bind(entity)(romeo);
    romeo = romeo.unsafe_rawColors;
    romeo = romeo.BRAND_500;
    result = backup.bind(entity)(foxtrot, romeo, kilo);
    echo = verify;
    romeo = copyDataProperties(echo, result);
    tango['closeText'] = verify;
    verify = {};
    verify['flexDirection'] = yankee;
    tango['informationContentContainer'] = verify;
    verify = {};
    verify['lineHeight'] = offset;
    tango['informationContent'] = verify;
    verify = {'flex': 1, 'marginLeft': 5};
    tango['informationContentDescription'] = verify;
    tango = golf.bind(options)(tango);
    var _closure1_slot6 = tango;
    tango = function(argFoo) { // Original name: generateListData
        _fun85039: for(var _fun85039_ip = 0; ; ) switch(_fun85039_ip) {
 0:
            entity = new Array(0);
            zulu = _closure1_slot0;
            report = _closure1_slot1;
            mike = 7;
            mike = report[mike];
            options = undefined;
            report = zulu.bind(options)(mike);
            zulu = report.isStickerPackAnimated;
            mike = argFoo;
            mike = zulu.bind(report)(mike);
            if(!mike) { _fun85039_ip = 125; continue _fun85039 }
 46:
            zulu = entity.push;
            mike = {};
            report = 'animated';
            mike['key'] = report;
            golf = _closure1_slot0;
            verify = _closure1_slot1;
            tango = 8;
            report = verify[tango];
            report = golf.bind(options)(report);
            oscar = report.intl;
            report = oscar.string;
            tango = verify[tango];
            tango = golf.bind(options)(tango);
            tango = tango.t;
            tango = tango.W11rMT;
            tango = report.bind(oscar)(tango);
            mike['description'] = tango;
            mike = zulu.bind(entity)(mike);
 125:
            return entity;
        }
    };
    var _closure1_slot7 = tango;
    tango = 12;
    tango = oscar[tango];
    oscar = report.bind(entity)(tango);
    report = oscar.fileFinishedImporting;
    tango = 'modules/stickers/native/StickerPackInformationPopout.tsx';
    tango = report.bind(oscar)(tango);
    tango = function(argFoo) { // Original name: _default
        entity = argFoo;
        source = entity.stickerPack;
        foxtrot = entity.onClose;
        golf = entity.style;
        entity = _closure1_slot6;
        tango = undefined;
        sizing = entity.bind(tango)();
        var _closure2_slot0 = sizing;
        entity = _closure1_slot7;
        offset = entity.bind(tango)(source);
        zulu = _closure1_slot5;
        mike = _closure1_slot2;
        entity = {};
        options = sizing.informationContainer;
        report = new Array(2);
        report[0] = options;
        report[1] = golf;
        entity['style'] = report;
        report = {};
        golf = sizing.headerContainer;
        report['style'] = golf;
        options = _closure1_slot4;
        result = _closure1_slot0;
        echo = _closure1_slot1;
        golf = 9;
        golf = echo[golf];
        golf = result.bind(tango)(golf);
        yankee = golf.Text;
        golf = {'style': null, 'variant': 'text-md/semibold', 'color': 'header-primary'};
        romeo = sizing.informationHeader;
        golf['style'] = romeo;
        kilo = 8;
        romeo = echo[kilo];
        romeo = result.bind(tango)(romeo);
        update = romeo.intl;
        output = update.format;
        romeo = echo[kilo];
        romeo = result.bind(tango)(romeo);
        romeo = romeo.t;
        backup = romeo.XDm6yM;
        romeo = {};
        source = source.name;
        romeo['stickerPackName'] = source;
        romeo = output.bind(update)(backup, romeo);
        golf['children'] = romeo;
        yankee = options.bind(tango)(yankee, golf);
        golf = new Array(2);
        golf[0] = yankee;
        yankee = 10;
        yankee = echo[yankee];
        yankee = result.bind(tango)(yankee);
        romeo = yankee.PressableOpacity;
        yankee = {};
        yankee['onPress'] = foxtrot;
        foxtrot = 'button';
        yankee['accessibilityRole'] = foxtrot;
        foxtrot = echo[kilo];
        foxtrot = result.bind(tango)(foxtrot);
        output = foxtrot.intl;
        backup = output.string;
        foxtrot = echo[kilo];
        foxtrot = result.bind(tango)(foxtrot);
        foxtrot = foxtrot.t;
        foxtrot = foxtrot.cpT0Cg;
        foxtrot = backup.bind(output)(foxtrot);
        yankee['accessibilityLabel'] = foxtrot;
        foxtrot = 11;
        foxtrot = echo[foxtrot];
        foxtrot = result.bind(tango)(foxtrot);
        backup = foxtrot.LegacyText;
        foxtrot = {};
        sizing = sizing.closeText;
        foxtrot['style'] = sizing;
        sizing = echo[kilo];
        sizing = result.bind(tango)(sizing);
        output = sizing.intl;
        sizing = output.string;
        kilo = echo[kilo];
        kilo = result.bind(tango)(kilo);
        kilo = kilo.t;
        kilo = kilo.cpT0Cg;
        kilo = sizing.bind(output)(kilo);
        foxtrot['children'] = kilo;
        foxtrot = options.bind(tango)(backup, foxtrot);
        yankee['children'] = foxtrot;
        yankee = options.bind(tango)(romeo, yankee);
        golf[1] = yankee;
        report['children'] = golf;
        golf = zulu.bind(tango)(mike, report);
        report = new Array(2);
        report[0] = golf;
        golf = _closure1_slot3;
        oscar = {};
        oscar['data'] = offset;
        verify = function(argFoo) { // Original name: renderItem
            entity = argFoo;
            verify = entity.item;
            tango = _closure1_slot5;
            zulu = _closure1_slot2;
            mike = {};
            yankee = _closure2_slot0;
            report = yankee.informationContentContainer;
            mike['style'] = report;
            options = _closure1_slot4;
            golf = _closure1_slot0;
            offset = _closure1_slot1;
            oscar = 9;
            report = offset[oscar];
            entity = undefined;
            report = golf.bind(entity)(report);
            romeo = report.Text;
            report = {'style': null, 'variant': 'text-md/medium', 'color': 'header-secondary', 'children': 'â€¢'};
            foxtrot = yankee.informationContent;
            report['style'] = foxtrot;
            romeo = options.bind(entity)(romeo, report);
            report = new Array(2);
            report[0] = romeo;
            oscar = offset[oscar];
            oscar = golf.bind(entity)(oscar);
            golf = oscar.Text;
            oscar = {'style': null, 'variant': 'text-md/medium', 'color': 'header-secondary'};
            romeo = yankee.informationContent;
            offset = new Array(2);
            offset[0] = romeo;
            yankee = yankee.informationContentDescription;
            offset[1] = yankee;
            oscar['style'] = offset;
            verify = verify.description;
            oscar['children'] = verify;
            oscar = options.bind(entity)(golf, oscar);
            report[1] = oscar;
            mike['children'] = report;
            entity = tango.bind(entity)(zulu, mike);
            return entity;
        };
        oscar['renderItem'] = verify;
        oscar = options.bind(tango)(golf, oscar);
        report[1] = oscar;
        entity['children'] = report;
        entity = zulu.bind(tango)(mike, entity);
        return entity;
    };
    zulu['default'] = tango;
    mike = function(argFoo) {
        zulu = _closure1_slot7;
        mike = undefined;
        entity = argFoo;
        entity = zulu.bind(mike)(entity);
        mike = entity.length;
        entity = 0;
        entity = mike > entity;
        return entity;
    };
    zulu['doesStickerPackHavePopoutInformation'] = mike;
    return entity;
})();