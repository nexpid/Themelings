// app/modules/stickers/native/StickerPackDetailActionSheet.tsx
export default (function(argFoo, argBar, argBaz, argCorge, _, argFred, argPlugh) {
    report = argBar;
    romeo = argBaz;
    zulu = argFred;
    oscar = argPlugh;
    var _closure1_slot0 = report;
    var _closure1_slot1 = romeo;
    var _closure1_slot2 = oscar;
    entity = global;
    options = entity.Object;
    golf = options.defineProperty;
    tango = {};
    entity = true;
    tango['value'] = entity;
    entity = '__esModule';
    entity = golf.bind(options)(zulu, entity, tango);
    entity = 0;
    tango = oscar[entity];
    entity = undefined;
    tango = romeo.bind(entity)(tango);
    var _closure1_slot3 = tango;
    tango = 1;
    golf = oscar[tango];
    tango = argCorge;
    golf = tango.bind(entity)(golf);
    var _closure1_slot4 = golf;
    tango = 2;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    options = tango.MIN_MARGIN;
    var _closure1_slot5 = options;
    tango = tango.STICKER_SIZE;
    var _closure1_slot6 = tango;
    tango = 3;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.AnalyticEvents;
    var _closure1_slot7 = tango;
    tango = 4;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.ACTION_SHEET_MAX_WIDTH;
    var _closure1_slot8 = tango;
    tango = 5;
    options = oscar[tango];
    options = report.bind(entity)(options);
    options = options.jsx;
    var _closure1_slot9 = options;
    options = oscar[tango];
    options = report.bind(entity)(options);
    options = options.Fragment;
    var _closure1_slot10 = options;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.jsxs;
    var _closure1_slot11 = tango;
    tango = 6;
    tango = oscar[tango];
    verify = report.bind(entity)(tango);
    options = verify.createStyles;
    tango = {};
    offset = {'position': 'absolute', 'left': 0, 'top': 0, 'height': '100%', 'width': '100%', 'alignItems': 'center', 'justifyContent': 'center', 'backgroundColor': 'rgba(0, 0, 0, 0.85)'};
    tango['focusedStickerPreviewContainer'] = offset;
    offset = {'marginHorizontal': 16, 'marginVertical': 8, 'backgroundColor': 'transparent'};
    offset['height'] = entity;
    tango['header'] = offset;
    offset = {'padding': 16, 'paddingBottom': 16};
    yankee = 7;
    yankee = oscar[yankee];
    yankee = romeo.bind(entity)(yankee);
    yankee = yankee.colors;
    yankee = yankee.BACKGROUND_PRIMARY;
    offset['backgroundColor'] = yankee;
    tango['footer'] = offset;
    offset = {'paddingHorizontal': 16, 'marginBottom': 16};
    tango['stickers'] = offset;
    offset = {'position': 'absolute', 'bottom': 50};
    tango['popoutContainer'] = offset;
    offset = {};
    yankee = 40;
    offset['height'] = yankee;
    tango['upsellButton'] = offset;
    offset = {};
    yankee = 32;
    offset['width'] = yankee;
    tango['nitroWheel'] = offset;
    tango = options.bind(verify)(tango);
    var _closure1_slot12 = tango;
    tango = golf.memo;
    mike = function(argFoo) { // Original name: StickerPackDetailActionSheet
        _fun85023: for(var _fun85023_ip = 0; ; ) switch(_fun85023_ip) {
 0:
            mike = argFoo;
            romeo = mike.stickerPack;
            var _closure2_slot0 = romeo;
            entity = mike.analyticsPopoutType;
            var _closure2_slot1 = entity;
            mike = mike.onClose;
            var _closure2_slot2 = mike;
            zulu = _closure1_slot12;
            tango = undefined;
            yankee = zulu.bind(tango)();
            output = _closure1_slot1;
            source = _closure1_slot2;
            zulu = 8;
            zulu = source[zulu];
            zulu = output.bind(tango)(zulu);
            zulu = zulu.bind(tango)();
            kilo = zulu.width;
            report = _closure1_slot4;
            zulu = report.useState;
            options = null;
            zulu = zulu.bind(report)(options);
            foxtrot = _closure1_slot3;
            offset = 2;
            zulu = foxtrot.bind(tango)(zulu, offset);
            oscar = 0;
            result = zulu[oscar];
            verify = 1;
            zulu = zulu[verify];
            var _closure2_slot3 = zulu;
            backup = report.useState;
            zulu = false;
            zulu = backup.bind(report)(zulu);
            zulu = foxtrot.bind(tango)(zulu, offset);
            oscar = zulu[oscar];
            var _closure2_slot4 = oscar;
            zulu = zulu[verify];
            var _closure2_slot5 = zulu;
            zulu = report.useRef;
            zulu = zulu.bind(report)(options);
            var _closure2_slot6 = zulu;
            zulu = 9;
            zulu = source[zulu];
            zulu = output.bind(tango)(zulu);
            zulu = zulu.bind(tango)();
            vacuum = zulu.bottom;
            zulu = global;
            offset = zulu.Math;
            verify = offset.floor;
            backup = zulu.Math;
            foxtrot = backup.min;
            zulu = _closure1_slot8;
            foxtrot = foxtrot.bind(backup)(zulu, kilo);
            backup = _closure1_slot6;
            zulu = _closure1_slot5;
            zulu = backup + zulu;
            zulu = foxtrot / zulu;
            foxtrot = verify.bind(offset)(zulu);
            var _closure2_slot7 = foxtrot;
            zulu = 10;
            zulu = source[zulu];
            offset = output.bind(tango)(zulu);
            verify = offset.chunk;
            zulu = romeo.stickers;
            control = verify.bind(offset)(zulu, foxtrot);
            zulu = report.useRef;
            zulu = zulu.bind(report)(mike);
            var _closure2_slot8 = zulu;
            zulu = function(argFoo) { // Original name: onPressSticker
                zulu = _closure2_slot3;
                entity = undefined;
                mike = argFoo;
                mike = zulu.bind(entity)(mike);
                return entity;
            };
            var _closure2_slot9 = zulu;
            offset = function() { // Original name: toggleDisplayingPackDetails
                _fun85025: for(var _fun85025_ip = 0; ; ) switch(_fun85025_ip) {
 0:
                    entity = _closure2_slot6;
                    zulu = entity.current;
                    entity = null;
                    if(!(entity != zulu)) { _fun85025_ip = 42; continue _fun85025 }
 18:
                    entity = global;
                    tango = entity.clearTimeout;
                    entity = _closure2_slot6;
                    zulu = entity.current;
                    entity = undefined;
                    entity = tango.bind(entity)(zulu);
 42:
                    zulu = _closure2_slot4;
                    report = _closure2_slot5;
                    tango = !zulu;
                    entity = undefined;
                    tango = report.bind(entity)(tango);
                    if(zulu) { _fun85025_ip = 102; continue _fun85025 }
 63:
                    zulu = _closure2_slot6;
                    mike = global;
                    report = mike.setTimeout;
                    tango = function() {
                        zulu = _closure2_slot5;
                        mike = undefined;
                        entity = false;
                        entity = zulu.bind(mike)(entity);
                        return entity;
                    };
                    mike = 4000;
                    mike = report.bind(entity)(tango, mike);
                    zulu['current'] = mike;
 102:
                    return entity;
                }
            };
            verify = report.useEffect;
            zulu = new Array(1);
            zulu[0] = mike;
            mike = function() {
                mike = _closure2_slot8;
                entity = _closure2_slot2;
                mike['current'] = entity;
                entity = undefined;
                return entity;
            };
            mike = verify.bind(report)(mike, zulu);
            verify = report.useEffect;
            zulu = function() {
                entity = function() {
                    _fun85029: for(var _fun85029_ip = 0; ; ) switch(_fun85029_ip) {
 0:
                        entity = _closure2_slot8;
                        zulu = entity.current;
                        entity = null;
                        zulu = entity == zulu;
                        entity = undefined;
                        if(zulu) { _fun85029_ip = 36; continue _fun85029 }
 23:
                        zulu = _closure2_slot8;
                        mike = zulu.current;
                        entity = mike.bind(zulu)();
 36:
                        return entity;
                    }
                };
                return entity;
            };
            mike = new Array(0);
            mike = verify.bind(report)(zulu, mike);
            zulu = report.useEffect;
            mike = new Array(2);
            mike[0] = entity;
            entity = romeo.id;
            mike[1] = entity;
            entity = function() {
                tango = _closure1_slot1;
                zulu = _closure1_slot2;
                entity = 11;
                zulu = zulu[entity];
                entity = undefined;
                report = tango.bind(entity)(zulu);
                tango = report.track;
                mike = _closure1_slot7;
                zulu = mike.OPEN_POPOUT;
                mike = {};
                golf = _closure2_slot1;
                mike['type'] = golf;
                oscar = _closure2_slot0;
                oscar = oscar.id;
                mike['sticker_pack_id'] = oscar;
                mike = tango.bind(report)(zulu, mike);
                return entity;
            };
            entity = zulu.bind(report)(entity, mike);
            zulu = _closure1_slot11;
            mike = _closure1_slot10;
            entity = {};
            backup = _closure1_slot9;
            sequence = _closure1_slot0;
            report = 12;
            report = source[report];
            report = sequence.bind(tango)(report);
            verify = report.BottomSheet;
            report = {'scrollable': true, 'startExpanded': true, 'handleDisabled': true};
            update = true;
            kilo = {};
            foxtrot = 13;
            foxtrot = source[foxtrot];
            echo = output.bind(tango)(foxtrot);
            output = {};
            output['stickerPack'] = romeo;
            foxtrot = yankee.header;
            output['style'] = foxtrot;
            foxtrot = 14;
            source = source[foxtrot];
            sequence = sequence.bind(tango)(source);
            source = sequence.doesStickerPackHavePopoutInformation;
            sequence = source.bind(sequence)(romeo);
            source = undefined;
            if(!sequence) { _fun85023_ip = 506; continue _fun85023 }
 503:
            source = offset;
 506:
            output['onPress'] = source;
            output['withBanner'] = update;
            output['withDescription'] = update;
            output = backup.bind(tango)(echo, output);
            source = new Array(2);
            source[0] = output;
            echo = _closure1_slot9;
            output = _closure1_slot0;
            update = _closure1_slot2;
            sequence = 15;
            sequence = update[sequence];
            sequence = output.bind(tango)(sequence);
            config = sequence.ActionSheetHeaderBar;
            sequence = {};
            record = 16;
            record = update[record];
            record = output.bind(tango)(record);
            record = record.ActionSheetHeaderBarVariants;
            record = record.FLOATING;
            sequence['variant'] = record;
            sequence = echo.bind(tango)(config, sequence);
            source[1] = sequence;
            kilo['children'] = source;
            kilo = zulu.bind(tango)(mike, kilo);
            report['header'] = kilo;
            kilo = 17;
            kilo = update[kilo];
            kilo = output.bind(tango)(kilo);
            output = kilo.BottomSheetScrollView;
            kilo = {};
            update = yankee.stickers;
            kilo['style'] = update;
            update = {};
            source = 32;
            source = source + vacuum;
            update['paddingBottom'] = source;
            kilo['contentContainerStyle'] = update;
            source = control.map;
            update = function(argFoo, argBar) {
                report = _closure1_slot9;
                mike = _closure1_slot1;
                zulu = _closure1_slot2;
                entity = 18;
                entity = zulu[entity];
                tango = undefined;
                zulu = mike.bind(tango)(entity);
                mike = {};
                oscar = _closure2_slot7;
                mike['containerWidth'] = oscar;
                golf = argFoo;
                mike['stickers'] = golf;
                mike['rowSize'] = oscar;
                entity = _closure2_slot9;
                mike['onPressSticker'] = entity;
                entity = false;
                mike['nativeRow'] = entity;
                entity = argBar;
                entity = report.bind(tango)(zulu, mike, entity);
                return entity;
            };
            update = source.bind(control)(update);
            kilo['children'] = update;
            kilo = echo.bind(tango)(output, kilo);
            report['children'] = kilo;
            verify = backup.bind(tango)(verify, report);
            report = new Array(3);
            report[0] = verify;
            options = options != result;
            if(!options) { _fun85023_ip = 826; continue _fun85023 }
 719:
            kilo = _closure1_slot9;
            backup = _closure1_slot0;
            echo = _closure1_slot2;
            verify = 19;
            verify = echo[verify];
            verify = backup.bind(tango)(verify);
            backup = verify.PressableOpacity;
            verify = {};
            output = 'none';
            verify['accessibilityRole'] = output;
            output = yankee.focusedStickerPreviewContainer;
            verify['style'] = output;
            sizing = function() { // Original name: onPress
                zulu = _closure2_slot3;
                mike = undefined;
                entity = null;
                entity = zulu.bind(mike)(entity);
                return entity;
            };
            verify['onPress'] = sizing;
            output = _closure1_slot1;
            sizing = 20;
            sizing = echo[sizing];
            output = output.bind(tango)(sizing);
            sizing = {};
            sizing['sticker'] = result;
            result = 128;
            sizing['size'] = result;
            sizing = kilo.bind(tango)(output, sizing);
            verify['children'] = sizing;
            options = kilo.bind(tango)(backup, verify);
 826:
            report[1] = options;
            if(!oscar) { _fun85023_ip = 882; continue _fun85023 }
 833:
            verify = _closure1_slot9;
            options = _closure1_slot1;
            golf = _closure1_slot2;
            golf = golf[foxtrot];
            options = options.bind(tango)(golf);
            golf = {};
            golf['stickerPack'] = romeo;
            yankee = yankee.popoutContainer;
            golf['style'] = yankee;
            golf['onClose'] = offset;
            oscar = verify.bind(tango)(options, golf);
 882:
            report[2] = oscar;
            entity['children'] = report;
            entity = zulu.bind(tango)(mike, entity);
            return entity;
        }
    };
    mike = tango.bind(golf)(mike);
    tango = 21;
    tango = oscar[tango];
    oscar = report.bind(entity)(tango);
    report = oscar.fileFinishedImporting;
    tango = 'modules/stickers/native/StickerPackDetailActionSheet.tsx';
    tango = report.bind(oscar)(tango);
    zulu['default'] = mike;
    return entity;
})();