// app/modules/stickers/native/StickerPackDetailActionSheet.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    report = argBar;
    romeon = argBaz;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    var _closure1_slot1 = romeon;
    var _closure1_slot2 = oscard;
    entity = global;
    option = entity.Object;
    golfie = option.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(option)(zuuluu, entity, tangon);
    entity = 0;
    tangon = oscard[entity];
    entity = undefined;
    tangon = romeon.bind(entity)(tangon);
    var _closure1_slot3 = tangon;
    tangon = 1;
    golfie = oscard[tangon];
    tangon = argCor;
    golfie = tangon.bind(entity)(golfie);
    var _closure1_slot4 = golfie;
    tangon = 2;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    option = tangon.MIN_MARGIN;
    var _closure1_slot5 = option;
    tangon = tangon.STICKER_SIZE;
    var _closure1_slot6 = tangon;
    tangon = 3;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.AnalyticEvents;
    var _closure1_slot7 = tangon;
    tangon = 4;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.ACTION_SHEET_MAX_WIDTH;
    var _closure1_slot8 = tangon;
    tangon = 5;
    option = oscard[tangon];
    option = report.bind(entity)(option);
    option = option.jsx;
    var _closure1_slot9 = option;
    option = oscard[tangon];
    option = report.bind(entity)(option);
    option = option.Fragment;
    var _closure1_slot10 = option;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.jsxs;
    var _closure1_slot11 = tangon;
    tangon = 6;
    tangon = oscard[tangon];
    verify = report.bind(entity)(tangon);
    option = verify.createStyles;
    tangon = {};
    offset = {'position': 'absolute', 'left': 0, 'top': 0, 'height': '100%', 'width': '100%', 'alignItems': 'center', 'justifyContent': 'center', 'backgroundColor': 'rgba(0, 0, 0, 0.85)'};
    tangon['focusedStickerPreviewContainer'] = offset;
    offset = {'marginHorizontal': 16, 'marginVertical': 8, 'backgroundColor': 'transparent'};
    offset['height'] = entity;
    tangon['header'] = offset;
    offset = {'padding': 16, 'paddingBottom': 16};
    yankee = 7;
    yankee = oscard[yankee];
    yankee = romeon.bind(entity)(yankee);
    yankee = yankee.colors;
    yankee = yankee.BACKGROUND_PRIMARY;
    offset['backgroundColor'] = yankee;
    tangon['footer'] = offset;
    offset = {'paddingHorizontal': 16, 'marginBottom': 16};
    tangon['stickers'] = offset;
    offset = {'position': 'absolute', 'bottom': 50};
    tangon['popoutContainer'] = offset;
    offset = {};
    yankee = 40;
    offset['height'] = yankee;
    tangon['upsellButton'] = offset;
    offset = {};
    yankee = 32;
    offset['width'] = yankee;
    tangon['nitroWheel'] = offset;
    tangon = option.bind(verify)(tangon);
    var _closure1_slot12 = tangon;
    tangon = golfie.memo;
    michal = function(argFoo) { // Original name: StickerPackDetailActionSheet
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            michal = argFoo;
            romeon = michal.stickerPack;
            var _closure2_slot0 = romeon;
            entity = michal.analyticsPopoutType;
            var _closure2_slot1 = entity;
            michal = michal.onClose;
            var _closure2_slot2 = michal;
            zuuluu = _closure1_slot12;
            tangon = undefined;
            yankee = zuuluu.bind(tangon)();
            output = _closure1_slot1;
            source = _closure1_slot2;
            zuuluu = 8;
            zuuluu = source[zuuluu];
            zuuluu = output.bind(tangon)(zuuluu);
            zuuluu = zuuluu.bind(tangon)();
            kiloes = zuuluu.width;
            report = _closure1_slot4;
            zuuluu = report.useState;
            option = null;
            zuuluu = zuuluu.bind(report)(option);
            foxtra = _closure1_slot3;
            offset = 2;
            zuuluu = foxtra.bind(tangon)(zuuluu, offset);
            oscard = 0;
            result = zuuluu[oscard];
            verify = 1;
            zuuluu = zuuluu[verify];
            var _closure2_slot3 = zuuluu;
            backup = report.useState;
            zuuluu = false;
            zuuluu = backup.bind(report)(zuuluu);
            zuuluu = foxtra.bind(tangon)(zuuluu, offset);
            oscard = zuuluu[oscard];
            var _closure2_slot4 = oscard;
            zuuluu = zuuluu[verify];
            var _closure2_slot5 = zuuluu;
            zuuluu = report.useRef;
            zuuluu = zuuluu.bind(report)(option);
            var _closure2_slot6 = zuuluu;
            zuuluu = 9;
            zuuluu = source[zuuluu];
            zuuluu = output.bind(tangon)(zuuluu);
            zuuluu = zuuluu.bind(tangon)();
            vacuum = zuuluu.bottom;
            zuuluu = global;
            offset = zuuluu.Math;
            verify = offset.floor;
            backup = zuuluu.Math;
            foxtra = backup.min;
            zuuluu = _closure1_slot8;
            foxtra = foxtra.bind(backup)(zuuluu, kiloes);
            backup = _closure1_slot6;
            zuuluu = _closure1_slot5;
            zuuluu = backup + zuuluu;
            zuuluu = foxtra / zuuluu;
            foxtra = verify.bind(offset)(zuuluu);
            var _closure2_slot7 = foxtra;
            zuuluu = 10;
            zuuluu = source[zuuluu];
            offset = output.bind(tangon)(zuuluu);
            verify = offset.chunk;
            zuuluu = romeon.stickers;
            ctrled = verify.bind(offset)(zuuluu, foxtra);
            zuuluu = report.useRef;
            zuuluu = zuuluu.bind(report)(michal);
            var _closure2_slot8 = zuuluu;
            zuuluu = function(argFoo) { // Original name: onPressSticker
                zuuluu = _closure2_slot3;
                entity = undefined;
                michal = argFoo;
                michal = zuuluu.bind(entity)(michal);
                return entity;
            };
            var _closure2_slot9 = zuuluu;
            offset = function() { // Original name: toggleDisplayingPackDetails
                _fun00003: for(var _fun00004_ip = 0; ; ) switch(_fun00004_ip) {
 0:
                    entity = _closure2_slot6;
                    zuuluu = entity.current;
                    entity = null;
                    if(!(entity != zuuluu)) { _fun00004_ip = 42; continue _fun00003 }
 18:
                    entity = global;
                    tangon = entity.clearTimeout;
                    entity = _closure2_slot6;
                    zuuluu = entity.current;
                    entity = undefined;
                    entity = tangon.bind(entity)(zuuluu);
 42:
                    zuuluu = _closure2_slot4;
                    report = _closure2_slot5;
                    tangon = !zuuluu;
                    entity = undefined;
                    tangon = report.bind(entity)(tangon);
                    if(zuuluu) { _fun00004_ip = 100; continue _fun00003 }
 63:
                    zuuluu = _closure2_slot6;
                    michal = global;
                    report = michal.setTimeout;
                    tangon = function() {
                        zuuluu = _closure2_slot5;
                        michal = undefined;
                        entity = false;
                        entity = zuuluu.bind(michal)(entity);
                        return entity;
                    };
                    michal = 4000;
                    michal = report.bind(entity)(tangon, michal);
                    zuuluu['current'] = michal;
 100:
                    return entity;
                }
            };
            verify = report.useEffect;
            zuuluu = new Array(1);
            zuuluu[0] = michal;
            michal = function() {
                michal = _closure2_slot8;
                entity = _closure2_slot2;
                michal['current'] = entity;
                entity = undefined;
                return entity;
            };
            michal = verify.bind(report)(michal, zuuluu);
            verify = report.useEffect;
            zuuluu = function() {
                entity = function() {
                    _fun00005: for(var _fun00006_ip = 0; ; ) switch(_fun00006_ip) {
 0:
                        entity = _closure2_slot8;
                        zuuluu = entity.current;
                        entity = null;
                        zuuluu = entity == zuuluu;
                        entity = undefined;
                        if(zuuluu) { _fun00006_ip = 36; continue _fun00005 }
 23:
                        zuuluu = _closure2_slot8;
                        michal = zuuluu.current;
                        entity = michal.bind(zuuluu)();
 36:
                        return entity;
                    }
                };
                return entity;
            };
            michal = new Array(0);
            michal = verify.bind(report)(zuuluu, michal);
            zuuluu = report.useEffect;
            michal = new Array(2);
            michal[0] = entity;
            entity = romeon.id;
            michal[1] = entity;
            entity = function() {
                tangon = _closure1_slot1;
                zuuluu = _closure1_slot2;
                entity = 11;
                zuuluu = zuuluu[entity];
                entity = undefined;
                report = tangon.bind(entity)(zuuluu);
                tangon = report.track;
                michal = _closure1_slot7;
                zuuluu = michal.OPEN_POPOUT;
                michal = {};
                golfie = _closure2_slot1;
                michal['type'] = golfie;
                oscard = _closure2_slot0;
                oscard = oscard.id;
                michal['sticker_pack_id'] = oscard;
                michal = tangon.bind(report)(zuuluu, michal);
                return entity;
            };
            entity = zuuluu.bind(report)(entity, michal);
            zuuluu = _closure1_slot11;
            michal = _closure1_slot10;
            entity = {};
            backup = _closure1_slot9;
            sequen = _closure1_slot0;
            report = 12;
            report = source[report];
            report = sequen.bind(tangon)(report);
            verify = report.BottomSheet;
            report = {'scrollable': true, 'startExpanded': true, 'handleDisabled': true};
            update = true;
            kiloes = {};
            foxtra = 13;
            foxtra = source[foxtra];
            echoed = output.bind(tangon)(foxtra);
            output = {};
            output['stickerPack'] = romeon;
            foxtra = yankee.header;
            output['style'] = foxtra;
            foxtra = 14;
            source = source[foxtra];
            sequen = sequen.bind(tangon)(source);
            source = sequen.doesStickerPackHavePopoutInformation;
            sequen = source.bind(sequen)(romeon);
            source = undefined;
            if(!sequen) { _fun00002_ip = 496; continue _fun00001 }
 493:
            source = offset;
 496:
            output['onPress'] = source;
            output['withBanner'] = update;
            output['withDescription'] = update;
            output = backup.bind(tangon)(echoed, output);
            source = new Array(2);
            source[0] = output;
            echoed = _closure1_slot9;
            output = _closure1_slot0;
            update = _closure1_slot2;
            sequen = 15;
            sequen = update[sequen];
            sequen = output.bind(tangon)(sequen);
            config = sequen.ActionSheetHeaderBar;
            sequen = {};
            record = 16;
            record = update[record];
            record = output.bind(tangon)(record);
            record = record.ActionSheetHeaderBarVariants;
            record = record.FLOATING;
            sequen['variant'] = record;
            sequen = echoed.bind(tangon)(config, sequen);
            source[1] = sequen;
            kiloes['children'] = source;
            kiloes = zuuluu.bind(tangon)(michal, kiloes);
            report['header'] = kiloes;
            kiloes = 17;
            kiloes = update[kiloes];
            kiloes = output.bind(tangon)(kiloes);
            output = kiloes.BottomSheetScrollView;
            kiloes = {};
            update = yankee.stickers;
            kiloes['style'] = update;
            update = {};
            source = 32;
            source = source + vacuum;
            update['paddingBottom'] = source;
            kiloes['contentContainerStyle'] = update;
            source = ctrled.map;
            update = function(argFoo, argBar) {
                report = _closure1_slot9;
                michal = _closure1_slot1;
                zuuluu = _closure1_slot2;
                entity = 18;
                entity = zuuluu[entity];
                tangon = undefined;
                zuuluu = michal.bind(tangon)(entity);
                michal = {};
                oscard = _closure2_slot7;
                michal['containerWidth'] = oscard;
                golfie = argFoo;
                michal['stickers'] = golfie;
                michal['rowSize'] = oscard;
                entity = _closure2_slot9;
                michal['onPressSticker'] = entity;
                entity = false;
                michal['nativeRow'] = entity;
                entity = argBar;
                entity = report.bind(tangon)(zuuluu, michal, entity);
                return entity;
            };
            update = source.bind(ctrled)(update);
            kiloes['children'] = update;
            kiloes = echoed.bind(tangon)(output, kiloes);
            report['children'] = kiloes;
            verify = backup.bind(tangon)(verify, report);
            report = new Array(3);
            report[0] = verify;
            option = option != result;
            if(!option) { _fun00002_ip = 812; continue _fun00001 }
 707:
            kiloes = _closure1_slot9;
            backup = _closure1_slot0;
            echoed = _closure1_slot2;
            verify = 19;
            verify = echoed[verify];
            verify = backup.bind(tangon)(verify);
            backup = verify.PressableOpacity;
            verify = {};
            output = 'none';
            verify['accessibilityRole'] = output;
            output = yankee.focusedStickerPreviewContainer;
            verify['style'] = output;
            sizing = function() { // Original name: onPress
                zuuluu = _closure2_slot3;
                michal = undefined;
                entity = null;
                entity = zuuluu.bind(michal)(entity);
                return entity;
            };
            verify['onPress'] = sizing;
            output = _closure1_slot1;
            sizing = 20;
            sizing = echoed[sizing];
            output = output.bind(tangon)(sizing);
            sizing = {};
            sizing['sticker'] = result;
            result = 128;
            sizing['size'] = result;
            sizing = kiloes.bind(tangon)(output, sizing);
            verify['children'] = sizing;
            option = kiloes.bind(tangon)(backup, verify);
 812:
            report[1] = option;
            if(!oscard) { _fun00002_ip = 868; continue _fun00001 }
 819:
            verify = _closure1_slot9;
            option = _closure1_slot1;
            golfie = _closure1_slot2;
            golfie = golfie[foxtra];
            option = option.bind(tangon)(golfie);
            golfie = {};
            golfie['stickerPack'] = romeon;
            yankee = yankee.popoutContainer;
            golfie['style'] = yankee;
            golfie['onClose'] = offset;
            oscard = verify.bind(tangon)(option, golfie);
 868:
            report[2] = oscard;
            entity['children'] = report;
            entity = zuuluu.bind(tangon)(michal, entity);
            return entity;
        }
    };
    michal = tangon.bind(golfie)(michal);
    tangon = 21;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/stickers/native/StickerPackDetailActionSheet.tsx';
    tangon = report.bind(oscard)(tangon);
    zuuluu['default'] = michal;
    return entity;
})();