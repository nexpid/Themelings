// app/modules/stickers/native/openStickerPackDetailActionSheet.tsx
export default (function(argFoo, argBar, argBaz, _, __, argFre, argPlu) {
    oscard = argBar;
    zuuluu = argFre;
    golfie = argPlu;
    var _closure1_slot0 = oscard;
    entity = argBaz;
    var _closure1_slot1 = entity;
    var _closure1_slot2 = golfie;
    entity = global;
    option = entity.Object;
    report = option.defineProperty;
    michal = {};
    entity = true;
    michal['value'] = entity;
    entity = '__esModule';
    entity = report.bind(option)(zuuluu, entity, michal);
    entity = 0;
    michal = golfie[entity];
    entity = undefined;
    michal = oscard.bind(entity)(michal);
    michal = michal.AnalyticEvents;
    var _closure1_slot3 = michal;
    michal = {};
    report = 'Sticker Pack Detail Sheet (Expression Suggestions Popout)';
    michal['EXPRESSION_SUGGESTIONS'] = report;
    report = 'Sticker Pack Detail Sheet';
    michal['STICKER_PACK_DETAIL'] = report;
    report = 'Sticker Pack Detail Sheet (Sticker Upsell Popout)';
    michal['STICKER_PACK_UPSELL'] = report;
    report = 5;
    report = golfie[report];
    golfie = oscard.bind(entity)(report);
    oscard = golfie.fileFinishedImporting;
    report = 'modules/stickers/native/openStickerPackDetailActionSheet.tsx';
    report = oscard.bind(golfie)(report);
    tangon = function(argFoo) { // Original name: openStickerPackDetailActionSheet
        entity = argFoo;
        yankee = entity.analyticsLocation;
        michal = entity.analyticsPopoutType;
        golfie = entity.stickerPack;
        oscard = _closure1_slot1;
        zuuluu = _closure1_slot2;
        entity = 1;
        report = zuuluu[entity];
        entity = undefined;
        offset = oscard.bind(entity)(report);
        verify = offset.track;
        report = _closure1_slot3;
        option = report.STICKER_PACK_VIEW_ALL;
        report = {};
        report['location'] = yankee;
        yankee = golfie.id;
        report['sticker_pack_id'] = yankee;
        report = verify.bind(offset)(option, report);
        report = 2;
        report = zuuluu[report];
        oscard = oscard.bind(entity)(report);
        report = oscard.openLazy;
        option = _closure1_slot0;
        tangon = 4;
        tangon = zuuluu[tangon];
        option = option.bind(entity)(tangon);
        tangon = 3;
        tangon = zuuluu[tangon];
        zuuluu = zuuluu.paths;
        tangon = option.bind(entity)(tangon, zuuluu);
        zuuluu = {};
        zuuluu['stickerPack'] = golfie;
        zuuluu['analyticsPopoutType'] = michal;
        michal = 'StickerPackDetailActionSheet';
        michal = report.bind(oscard)(tangon, michal, zuuluu);
        return entity;
    };
    zuuluu['default'] = tangon;
    zuuluu['AnalyticsPopoutType'] = michal;
    return entity;
})();