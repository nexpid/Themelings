// app/modules/stickers/native/openStickerPackDetailActionSheet.tsx
export default (function(argFoo, argBar, argBaz, _, __, argFred, argPlugh) {
    oscar = argBar;
    zulu = argFred;
    golf = argPlugh;
    var _closure1_slot0 = oscar;
    entity = argBaz;
    var _closure1_slot1 = entity;
    var _closure1_slot2 = golf;
    entity = global;
    options = entity.Object;
    report = options.defineProperty;
    mike = {};
    entity = true;
    mike['value'] = entity;
    entity = '__esModule';
    entity = report.bind(options)(zulu, entity, mike);
    entity = 0;
    mike = golf[entity];
    entity = undefined;
    mike = oscar.bind(entity)(mike);
    mike = mike.AnalyticEvents;
    var _closure1_slot3 = mike;
    mike = {};
    report = 'Sticker Pack Detail Sheet (Expression Suggestions Popout)';
    mike['EXPRESSION_SUGGESTIONS'] = report;
    report = 'Sticker Pack Detail Sheet';
    mike['STICKER_PACK_DETAIL'] = report;
    report = 'Sticker Pack Detail Sheet (Sticker Upsell Popout)';
    mike['STICKER_PACK_UPSELL'] = report;
    report = 5;
    report = golf[report];
    golf = oscar.bind(entity)(report);
    oscar = golf.fileFinishedImporting;
    report = 'modules/stickers/native/openStickerPackDetailActionSheet.tsx';
    report = oscar.bind(golf)(report);
    tango = function(argFoo) { // Original name: openStickerPackDetailActionSheet
        entity = argFoo;
        yankee = entity.analyticsLocation;
        mike = entity.analyticsPopoutType;
        golf = entity.stickerPack;
        oscar = _closure1_slot1;
        zulu = _closure1_slot2;
        entity = 1;
        report = zulu[entity];
        entity = undefined;
        offset = oscar.bind(entity)(report);
        verify = offset.track;
        report = _closure1_slot3;
        options = report.STICKER_PACK_VIEW_ALL;
        report = {};
        report['location'] = yankee;
        yankee = golf.id;
        report['sticker_pack_id'] = yankee;
        report = verify.bind(offset)(options, report);
        report = 2;
        report = zulu[report];
        oscar = oscar.bind(entity)(report);
        report = oscar.openLazy;
        options = _closure1_slot0;
        tango = 4;
        tango = zulu[tango];
        options = options.bind(entity)(tango);
        tango = 3;
        tango = zulu[tango];
        zulu = zulu.paths;
        tango = options.bind(entity)(tango, zulu);
        zulu = {};
        zulu['stickerPack'] = golf;
        zulu['analyticsPopoutType'] = mike;
        mike = 'StickerPackDetailActionSheet';
        mike = report.bind(oscar)(tango, mike, zulu);
        return entity;
    };
    zulu['default'] = tango;
    zulu['AnalyticsPopoutType'] = mike;
    return entity;
})();