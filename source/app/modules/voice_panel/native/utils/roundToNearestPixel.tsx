// app/modules/voice_panel/native/utils/roundToNearestPixel.tsx
export default (function(argFoo, argBar, _, __, ___, argFred, argPlugh) {
    report = argBar;
    zulu = argFred;
    oscar = argPlugh;
    entity = global;
    options = entity.Object;
    golf = options.defineProperty;
    tango = {};
    entity = true;
    tango['value'] = entity;
    entity = '__esModule';
    entity = golf.bind(options)(zulu, entity, tango);
    entity = 0;
    tango = oscar[entity];
    entity = undefined;
    tango = report.bind(entity)(tango);
    golf = tango.PixelRatio;
    tango = golf.get;
    options = tango.bind(golf)();
    var _closure1_slot0 = options;
    tango = {};
    golf = 'function roundToNearestPixel_roundToNearestPixelTsx1(position){const{PIXEL_DENSITY}=this.__closure;return Math.round(position*PIXEL_DENSITY)/PIXEL_DENSITY;}';
    tango['code'] = golf;
    mike = function(argFoo) { // Original name: t
        entity = global;
        tango = entity.Math;
        zulu = tango.round;
        mike = _closure1_slot0;
        entity = argFoo;
        entity = entity * mike;
        entity = zulu.bind(tango)(entity);
        entity = entity / mike;
        return entity;
    };
    golf = {};
    golf['PIXEL_DENSITY'] = options;
    mike['__closure'] = golf;
    golf = 8009828326153.0;
    mike['__workletHash'] = golf;
    mike['__initData'] = tango;
    tango = 1;
    tango = oscar[tango];
    oscar = report.bind(entity)(tango);
    report = oscar.fileFinishedImporting;
    tango = 'modules/voice_panel/native/utils/roundToNearestPixel.tsx';
    tango = report.bind(oscar)(tango);
    zulu['default'] = mike;
    return entity;
})();