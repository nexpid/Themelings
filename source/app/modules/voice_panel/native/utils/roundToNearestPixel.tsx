// app/modules/voice_panel/native/utils/roundToNearestPixel.tsx
export default (function(argFoo, argBar, _, __, ___, argFre, argPlu) {
    report = argBar;
    zuuluu = argFre;
    oscard = argPlu;
    entity = global;
    option = entity.Object;
    golfie = option.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(option)(zuuluu, entity, tangon);
    entity = 0;
    tangon = oscard[entity];
    entity = undefined;
    tangon = report.bind(entity)(tangon);
    golfie = tangon.PixelRatio;
    tangon = golfie.get;
    option = tangon.bind(golfie)();
    var _closure1_slot0 = option;
    tangon = {};
    golfie = 'function roundToNearestPixel_roundToNearestPixelTsx1(position){const{PIXEL_DENSITY}=this.__closure;return Math.round(position*PIXEL_DENSITY)/PIXEL_DENSITY;}';
    tangon['code'] = golfie;
    michal = function(argFoo) { // Original name: t
        entity = global;
        tangon = entity.Math;
        zuuluu = tangon.round;
        michal = _closure1_slot0;
        entity = argFoo;
        entity = entity * michal;
        entity = zuuluu.bind(tangon)(entity);
        entity = entity / michal;
        return entity;
    };
    golfie = {};
    golfie['PIXEL_DENSITY'] = option;
    michal['__closure'] = golfie;
    golfie = 8009828326153.0;
    michal['__workletHash'] = golfie;
    michal['__initData'] = tangon;
    tangon = 1;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/voice_panel/native/utils/roundToNearestPixel.tsx';
    tangon = report.bind(oscard)(tangon);
    zuuluu['default'] = michal;
    return entity;
})();