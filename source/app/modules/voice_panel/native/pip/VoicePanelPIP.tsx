// app/modules/voice_panel/native/pip/VoicePanelPIP.tsx
export default (function(argFoo, argBar, argBaz, argCorge, _, argFred, argPlugh) {
    report = argBar;
    options = argBaz;
    zulu = argFred;
    oscar = argPlugh;
    var _closure1_slot0 = report;
    var _closure1_slot1 = options;
    var _closure1_slot2 = oscar;
    entity = function(argFoo) { // Original name: VoicePanelPIP
        _fun122500: for(var _fun122500_ip = 0; ; ) switch(_fun122500_ip) {
 0:
            mike = argFoo;
            zulu = mike.type;
            oscar = _closure1_slot4;
            report = oscar.useContext;
            offset = _closure1_slot1;
            sizing = _closure1_slot2;
            mike = 10;
            mike = sizing[mike];
            tango = undefined;
            mike = offset.bind(tango)(mike);
            report = report.bind(oscar)(mike);
            verify = report.controlsSpecs;
            mike = report.setMode;
            var _closure2_slot0 = mike;
            report = report.pipContainerRef;
            backup = _closure1_slot0;
            oscar = 11;
            oscar = sizing[oscar];
            golf = backup.bind(tango)(oscar);
            oscar = golf.usePIPState;
            oscar = oscar.bind(golf)();
            var _closure2_slot1 = oscar;
            golf = function(argFoo) { // Original name: usePIPGesture
                verify = argFoo;
                var _closure3_slot0 = verify;
                report = _closure1_slot4;
                tango = report.useContext;
                oscar = _closure1_slot1;
                vacuum = _closure1_slot2;
                entity = 10;
                entity = vacuum[entity];
                control = undefined;
                entity = oscar.bind(control)(entity);
                entity = tango.bind(report)(entity);
                foxtrot = entity.controlsSpecs;
                var _closure3_slot1 = foxtrot;
                romeo = entity.hideControls;
                var _closure3_slot2 = romeo;
                config = entity.pipAvoidanceSpecs;
                var _closure3_slot3 = config;
                result = entity.safeArea;
                var _closure3_slot4 = result;
                yankee = entity.setFocused;
                var _closure3_slot5 = yankee;
                tango = entity.setMode;
                var _closure3_slot6 = tango;
                offset = entity.showControls;
                var _closure3_slot7 = offset;
                output = entity.windowDimensions;
                var _closure3_slot8 = output;
                sizing = entity.wrapperDimensions;
                var _closure3_slot9 = sizing;
                entity = entity.wrapperOffset;
                var _closure3_slot10 = entity;
                source = _closure1_slot0;
                report = 11;
                report = vacuum[report];
                oscar = source.bind(control)(report);
                report = oscar.usePIPState;
                report = report.bind(oscar)();
                var _closure3_slot11 = report;
                oscar = 12;
                golf = vacuum[oscar];
                kilo = source.bind(control)(golf);
                options = kilo.useSharedValue;
                backup = 0;
                golf = {'x': 0, 'y': 0, 'absoluteX': 0, 'absoluteY': 0, 'active': false, 'pressed': false};
                echo = options.bind(kilo)(golf);
                var _closure3_slot12 = echo;
                golf = vacuum[oscar];
                options = source.bind(control)(golf);
                golf = options.useSharedValue;
                sequence = golf.bind(options)(backup);
                var _closure3_slot13 = sequence;
                kilo = _closure1_slot4;
                backup = kilo.useEffect;
                options = new Array(1);
                options[0] = sequence;
                golf = function() {
                    mike = global;
                    report = mike.setTimeout;
                    tango = undefined;
                    zulu = function() {
                        zulu = _closure3_slot13;
                        mike = zulu.set;
                        entity = 1;
                        entity = mike.bind(zulu)(entity);
                        entity = undefined;
                        return entity;
                    };
                    mike = 200;
                    mike = report.bind(tango)(zulu, mike);
                    var _closure4_slot0 = mike;
                    entity = function() {
                        entity = global;
                        zulu = entity.clearTimeout;
                        mike = _closure4_slot0;
                        entity = undefined;
                        mike = zulu.bind(entity)(mike);
                        return entity;
                    };
                    return entity;
                };
                golf = backup.bind(kilo)(golf, options);
                golf = vacuum[oscar];
                backup = source.bind(control)(golf);
                options = backup.useAnimatedStyle;
                golf = function() { // Original name: B
                    _fun122505: for(var _fun122505_ip = 0; ; ) switch(_fun122505_ip) {
 0:
                        entity = _closure3_slot11;
                        report = entity.width;
                        mike = entity.showSecondaryPIP;
                        entity = _closure3_slot11;
                        if(mike) { _fun122505_ip = 32; continue _fun122505 }
 25:
                        tango = entity.height;
                        _fun122505_ip = 38; continue _fun122505;
 32:
                        tango = entity.containerHeight;
 38:
                        zulu = _closure1_slot0;
                        entity = _closure1_slot2;
                        golf = 13;
                        entity = entity[golf];
                        oscar = undefined;
                        options = zulu.bind(oscar)(entity);
                        zulu = options.getClampedPIPPosition;
                        entity = {};
                        yankee = _closure3_slot9;
                        offset = yankee.get;
                        offset = offset.bind(yankee)();
                        offset = offset.pipX;
                        entity['pipX'] = offset;
                        offset = yankee.get;
                        offset = offset.bind(yankee)();
                        offset = offset.pipY;
                        entity['pipY'] = offset;
                        entity['width'] = report;
                        entity['height'] = tango;
                        yankee = _closure3_slot8;
                        offset = yankee.get;
                        offset = offset.bind(yankee)();
                        entity['windowDimensions'] = offset;
                        yankee = _closure3_slot4;
                        offset = yankee.get;
                        offset = offset.bind(yankee)();
                        entity['safeArea'] = offset;
                        yankee = _closure3_slot3;
                        offset = yankee.get;
                        offset = offset.bind(yankee)();
                        offset = offset.bottom;
                        entity['bottomAvoidanceRegion'] = offset;
                        offset = yankee.get;
                        offset = offset.bind(yankee)();
                        offset = offset.top;
                        entity['topAvoidanceRegion'] = offset;
                        yankee = _closure3_slot12;
                        offset = yankee.get;
                        offset = offset.bind(yankee)();
                        yankee = offset.active;
                        offset = undefined;
                        if(!yankee) { _fun122505_ip = 238; continue _fun122505 }
 225:
                        romeo = _closure3_slot12;
                        yankee = romeo.get;
                        offset = yankee.bind(romeo)();
 238:
                        entity['positionOffset'] = offset;
                        entity = zulu.bind(options)(entity);
                        backup = entity.x;
                        romeo = entity.y;
                        entity = {};
                        entity['width'] = report;
                        entity['height'] = tango;
                        offset = _closure1_slot0;
                        zulu = _closure1_slot2;
                        options = 14;
                        options = zulu[options];
                        sizing = offset.bind(oscar)(options);
                        kilo = sizing.withTiming;
                        yankee = _closure3_slot13;
                        options = yankee.get;
                        foxtrot = options.bind(yankee)();
                        yankee = _closure1_slot15;
                        options = 'animate-never';
                        options = kilo.bind(sizing)(foxtrot, yankee, options);
                        entity['opacity'] = options;
                        options = {};
                        foxtrot = 9;
                        zulu = zulu[foxtrot];
                        yankee = offset.bind(oscar)(zulu);
                        offset = yankee.withSpring;
                        kilo = _closure3_slot12;
                        zulu = kilo.get;
                        zulu = zulu.bind(kilo)();
                        zulu = zulu.active;
                        if(zulu) { _fun122505_ip = 374; continue _fun122505 }
 368:
                        zulu = _closure1_slot14;
                        _fun122505_ip = 378; continue _fun122505;
 374:
                        zulu = _closure1_slot7;
 378:
                        zulu = offset.bind(yankee)(backup, zulu);
                        options['translateX'] = zulu;
                        zulu = new Array(2);
                        zulu[0] = options;
                        options = {};
                        yankee = _closure1_slot0;
                        offset = _closure1_slot2;
                        offset = offset[foxtrot];
                        yankee = yankee.bind(oscar)(offset);
                        offset = yankee.withSpring;
                        foxtrot = _closure3_slot12;
                        verify = foxtrot.get;
                        verify = verify.bind(foxtrot)();
                        verify = verify.active;
                        if(verify) { _fun122505_ip = 449; continue _fun122505 }
 443:
                        verify = _closure1_slot14;
                        _fun122505_ip = 453; continue _fun122505;
 449:
                        verify = _closure1_slot7;
 453:
                        verify = offset.bind(yankee)(romeo, verify);
                        options['translateY'] = verify;
                        zulu[1] = options;
                        entity['transform'] = zulu;
                        zulu = _closure1_slot0;
                        mike = _closure1_slot2;
                        mike = mike[golf];
                        zulu = zulu.bind(oscar)(mike);
                        mike = zulu.getVoicePanelPIPBorderRadius;
                        mike = mike.bind(zulu)(report, tango);
                        entity['borderRadius'] = mike;
                        return entity;
                    }
                };
                kilo = {};
                kilo['pipState'] = report;
                update = 13;
                record = vacuum[update];
                record = source.bind(control)(record);
                record = record.getClampedPIPPosition;
                kilo['getClampedPIPPosition'] = record;
                kilo['wrapperDimensions'] = sizing;
                kilo['windowDimensions'] = output;
                kilo['safeArea'] = result;
                kilo['pipAvoidanceSpecs'] = config;
                kilo['initialGestureOffset'] = echo;
                config = 14;
                config = vacuum[config];
                config = source.bind(control)(config);
                config = config.withTiming;
                kilo['withTiming'] = config;
                kilo['opacity'] = sequence;
                sequence = _closure1_slot15;
                kilo['OPACITY_TIMING'] = sequence;
                sequence = 9;
                sequence = vacuum[sequence];
                sequence = source.bind(control)(sequence);
                sequence = sequence.withSpring;
                kilo['withSpring'] = sequence;
                sequence = _closure1_slot7;
                kilo['DRAWER_SPRING_PHYSICS'] = sequence;
                sequence = _closure1_slot14;
                kilo['LAYOUT_PHYSICS'] = sequence;
                sequence = vacuum[update];
                sequence = source.bind(control)(sequence);
                sequence = sequence.getVoicePanelPIPBorderRadius;
                kilo['getVoicePanelPIPBorderRadius'] = sequence;
                golf['__closure'] = kilo;
                kilo = 15958692806993.0;
                golf['__workletHash'] = kilo;
                kilo = _closure1_slot20;
                golf['__initData'] = kilo;
                options = options.bind(backup)(golf);
                oscar = vacuum[oscar];
                backup = source.bind(control)(oscar);
                golf = backup.useAnimatedStyle;
                oscar = function() { // Original name: U
                    entity = _closure3_slot11;
                    report = entity.width;
                    tango = entity.height;
                    entity = {};
                    entity['width'] = report;
                    entity['height'] = tango;
                    oscar = _closure1_slot0;
                    zulu = _closure1_slot2;
                    mike = 13;
                    zulu = zulu[mike];
                    mike = undefined;
                    zulu = oscar.bind(mike)(zulu);
                    mike = zulu.getVoicePanelPIPBorderRadius;
                    mike = mike.bind(zulu)(report, tango);
                    entity['borderRadius'] = mike;
                    return entity;
                };
                kilo = {};
                kilo['pipState'] = report;
                update = vacuum[update];
                update = source.bind(control)(update);
                update = update.getVoicePanelPIPBorderRadius;
                kilo['getVoicePanelPIPBorderRadius'] = update;
                oscar['__closure'] = kilo;
                kilo = 1914976453427.0;
                oscar['__workletHash'] = kilo;
                kilo = _closure1_slot21;
                oscar['__initData'] = kilo;
                golf = golf.bind(backup)(oscar);
                kilo = _closure1_slot4;
                backup = kilo.useMemo;
                update = report.width;
                oscar = new Array(2);
                oscar[0] = update;
                report = report.height;
                oscar[1] = report;
                report = function() {
                    entity = _closure1_slot18;
                    zulu = entity.pipContentWrapper;
                    entity = new Array(3);
                    entity[0] = zulu;
                    zulu = {};
                    tango = _closure3_slot11;
                    report = tango.width;
                    zulu['width'] = report;
                    report = tango.height;
                    zulu['height'] = report;
                    golf = _closure1_slot0;
                    oscar = _closure1_slot2;
                    report = 13;
                    oscar = oscar[report];
                    report = undefined;
                    golf = golf.bind(report)(oscar);
                    oscar = golf.getVoicePanelPIPBorderRadius;
                    report = tango.width;
                    tango = tango.height;
                    tango = oscar.bind(golf)(report, tango);
                    zulu['borderRadius'] = tango;
                    entity[1] = zulu;
                    mike = _closure1_slot18;
                    mike = mike.inAppElevationShadow;
                    entity[2] = mike;
                    return entity;
                };
                report = backup.bind(kilo)(report, oscar);
                kilo = _closure1_slot4;
                backup = kilo.useCallback;
                oscar = new Array(5);
                oscar[0] = echo;
                oscar[1] = result;
                oscar[2] = output;
                oscar[3] = sizing;
                oscar[4] = entity;
                entity = function() {
                    foxtrot = _closure1_slot0;
                    offset = _closure1_slot2;
                    romeo = 15;
                    mike = offset[romeo];
                    verify = undefined;
                    mike = foxtrot.bind(verify)(mike);
                    zulu = mike.Gesture;
                    mike = zulu.Pan;
                    zulu = mike.bind(zulu)();
                    mike = zulu.enabled;
                    report = true;
                    zulu = mike.bind(zulu)(report);
                    mike = zulu.manualActivation;
                    report = mike.bind(zulu)(report);
                    zulu = report.maxPointers;
                    mike = 1;
                    report = zulu.bind(report)(mike);
                    zulu = report.shouldCancelWhenOutside;
                    mike = false;
                    report = zulu.bind(report)(mike);
                    zulu = report.onBegin;
                    mike = function(argFoo) { // Original name: c
                        entity = argFoo;
                        report = entity.absoluteX;
                        tango = entity.absoluteY;
                        zulu = _closure3_slot12;
                        mike = zulu.set;
                        entity = {'x': 0, 'y': 0, 'absoluteX': null, 'absoluteY': null, 'active': false, 'pressed': true};
                        entity['absoluteX'] = report;
                        entity['absoluteY'] = tango;
                        entity = mike.bind(zulu)(entity);
                        entity = undefined;
                        return entity;
                    };
                    golf = {};
                    oscar = _closure3_slot12;
                    golf['initialGestureOffset'] = oscar;
                    mike['__closure'] = golf;
                    golf = 7706832543946.0;
                    mike['__workletHash'] = golf;
                    golf = _closure1_slot22;
                    mike['__initData'] = golf;
                    report = zulu.bind(report)(mike);
                    zulu = report.onTouchesUp;
                    mike = function() { // Original name: l
                        zulu = _closure1_slot1;
                        mike = _closure1_slot2;
                        entity = 16;
                        mike = mike[entity];
                        entity = undefined;
                        tango = zulu.bind(entity)(mike);
                        zulu = _closure3_slot12;
                        mike = {'active': false, 'pressed': false};
                        mike = tango.bind(entity)(zulu, mike);
                        return entity;
                    };
                    yankee = {};
                    options = _closure1_slot1;
                    golf = 16;
                    backup = offset[golf];
                    backup = options.bind(verify)(backup);
                    yankee['updateSharedValueIfChanged'] = backup;
                    yankee['initialGestureOffset'] = oscar;
                    mike['__closure'] = yankee;
                    yankee = 4606005866023.0;
                    mike['__workletHash'] = yankee;
                    yankee = _closure1_slot23;
                    mike['__initData'] = yankee;
                    report = zulu.bind(report)(mike);
                    zulu = report.onTouchesMove;
                    mike = function(argFoo, argBar) { // Original name: u
                        _fun122511: for(var _fun122511_ip = 0; ; ) switch(_fun122511_ip) {
 0:
                            report = argFoo;
                            tango = argBar;
                            oscar = report.state;
                            golf = _closure1_slot0;
                            zulu = _closure1_slot2;
                            entity = 15;
                            zulu = zulu[entity];
                            entity = undefined;
                            zulu = golf.bind(entity)(zulu);
                            zulu = zulu.State;
                            zulu = zulu.BEGAN;
                            if(!(oscar === zulu)) { _fun122511_ip = 350; continue _fun122511 }
 55:
                            golf = _closure3_slot12;
                            oscar = golf.get;
                            oscar = oscar.bind(golf)();
                            oscar = oscar.active;
                            if(oscar) { _fun122511_ip = 350; continue _fun122511 }
 83:
                            oscar = report.changedTouches;
                            report = 0;
                            report = oscar[report];
                            options = report.absoluteY;
                            verify = report.absoluteX;
                            oscar = global;
                            offset = oscar.Math;
                            golf = offset.abs;
                            yankee = _closure3_slot12;
                            report = yankee.get;
                            report = report.bind(yankee)();
                            report = report.absoluteX;
                            report = report - verify;
                            golf = golf.bind(offset)(report);
                            report = _closure1_slot19;
                            report = golf > report;
                            if(report) { _fun122511_ip = 208; continue _fun122511 }
 160:
                            offset = oscar.Math;
                            golf = offset.abs;
                            yankee = _closure3_slot12;
                            oscar = yankee.get;
                            oscar = oscar.bind(yankee)();
                            oscar = oscar.absoluteY;
                            oscar = oscar - options;
                            golf = golf.bind(offset)(oscar);
                            oscar = _closure1_slot19;
                            report = golf > oscar;
 208:
                            if(!report) { _fun122511_ip = 350; continue _fun122511 }
 214:
                            golf = _closure3_slot12;
                            oscar = golf.set;
                            report = {'x': 0, 'y': 0, 'absoluteX': null, 'absoluteY': null, 'pressed': true, 'active': true};
                            report['absoluteX'] = verify;
                            report['absoluteY'] = options;
                            report = oscar.bind(golf)(report);
                            report = _closure1_slot1;
                            oscar = _closure1_slot2;
                            golf = 16;
                            golf = oscar[golf];
                            options = report.bind(entity)(golf);
                            golf = _closure3_slot10;
                            zulu = {'gestureActive': true, 'x': 0, 'y': 0};
                            zulu = options.bind(entity)(golf, zulu);
                            zulu = tango.activate;
                            zulu = zulu.bind(tango)();
                            zulu = _closure1_slot0;
                            mike = 12;
                            mike = oscar[mike];
                            tango = zulu.bind(entity)(mike);
                            zulu = tango.runOnJS;
                            mike = 17;
                            mike = oscar[mike];
                            mike = report.bind(entity)(mike);
                            mike = zulu.bind(tango)(mike);
                            mike = mike.bind(entity)();
 350:
                            return entity;
                        }
                    };
                    yankee = {};
                    romeo = offset[romeo];
                    romeo = foxtrot.bind(verify)(romeo);
                    romeo = romeo.State;
                    yankee['State'] = romeo;
                    yankee['initialGestureOffset'] = oscar;
                    romeo = _closure1_slot19;
                    yankee['MIN_GESTURE_START'] = romeo;
                    romeo = offset[golf];
                    romeo = options.bind(verify)(romeo);
                    yankee['updateSharedValueIfChanged'] = romeo;
                    backup = _closure3_slot10;
                    yankee['wrapperOffset'] = backup;
                    romeo = 12;
                    sizing = offset[romeo];
                    sizing = foxtrot.bind(verify)(sizing);
                    sizing = sizing.runOnJS;
                    yankee['runOnJS'] = sizing;
                    sizing = 17;
                    sizing = offset[sizing];
                    sizing = options.bind(verify)(sizing);
                    yankee['triggerIOSHaptic'] = sizing;
                    mike['__closure'] = yankee;
                    yankee = 12372145476453.0;
                    mike['__workletHash'] = yankee;
                    yankee = _closure1_slot24;
                    mike['__initData'] = yankee;
                    report = zulu.bind(report)(mike);
                    zulu = report.onChange;
                    mike = function(argFoo) { // Original name: o
                        entity = argFoo;
                        golf = entity.absoluteX;
                        oscar = entity.absoluteY;
                        zulu = _closure1_slot1;
                        mike = _closure1_slot2;
                        entity = 16;
                        mike = mike[entity];
                        entity = undefined;
                        tango = zulu.bind(entity)(mike);
                        zulu = _closure3_slot12;
                        mike = {};
                        report = zulu.get;
                        report = report.bind(zulu)();
                        report = report.absoluteX;
                        report = golf - report;
                        mike['x'] = report;
                        report = zulu.get;
                        report = report.bind(zulu)();
                        report = report.absoluteY;
                        report = oscar - report;
                        mike['y'] = report;
                        mike = tango.bind(entity)(zulu, mike);
                        return entity;
                    };
                    yankee = {};
                    sizing = offset[golf];
                    sizing = options.bind(verify)(sizing);
                    yankee['updateSharedValueIfChanged'] = sizing;
                    yankee['initialGestureOffset'] = oscar;
                    mike['__closure'] = yankee;
                    yankee = 7822444262980.0;
                    mike['__workletHash'] = yankee;
                    yankee = _closure1_slot25;
                    mike['__initData'] = yankee;
                    report = zulu.bind(report)(mike);
                    zulu = report.onEnd;
                    mike = function(argFoo) { // Original name: s
                        entity = argFoo;
                        yankee = entity.velocityX;
                        offset = entity.velocityY;
                        verify = entity.absoluteX;
                        mike = entity.absoluteY;
                        zulu = _closure1_slot0;
                        oscar = _closure1_slot2;
                        entity = 13;
                        report = oscar[entity];
                        entity = undefined;
                        options = zulu.bind(entity)(report);
                        golf = options.calculatePIPPositionFromVelocity;
                        report = {};
                        report['velocityX'] = yankee;
                        report['velocityY'] = offset;
                        report['absoluteX'] = verify;
                        report['absoluteY'] = mike;
                        offset = _closure3_slot8;
                        verify = offset.get;
                        verify = verify.bind(offset)();
                        report['windowDimensions'] = verify;
                        offset = _closure3_slot4;
                        verify = offset.get;
                        verify = verify.bind(offset)();
                        report['safeArea'] = verify;
                        report = golf.bind(options)(report);
                        yankee = report.pipX;
                        offset = report.pipY;
                        report = _closure1_slot1;
                        tango = 16;
                        golf = oscar[tango];
                        verify = report.bind(entity)(golf);
                        options = _closure3_slot9;
                        golf = {};
                        golf['pipX'] = yankee;
                        golf['pipY'] = offset;
                        golf = verify.bind(entity)(options, golf);
                        tango = oscar[tango];
                        golf = report.bind(entity)(tango);
                        tango = _closure3_slot10;
                        mike = {};
                        options = false;
                        mike['gestureActive'] = options;
                        mike = golf.bind(entity)(tango, mike);
                        mike = 12;
                        mike = oscar[mike];
                        tango = zulu.bind(entity)(mike);
                        zulu = tango.runOnJS;
                        mike = 18;
                        mike = oscar[mike];
                        mike = report.bind(entity)(mike);
                        mike = mike.updateSourceTrackingView;
                        mike = zulu.bind(tango)(mike);
                        mike = mike.bind(entity)();
                        return entity;
                    };
                    yankee = {};
                    sizing = 13;
                    sizing = offset[sizing];
                    sizing = foxtrot.bind(verify)(sizing);
                    sizing = sizing.calculatePIPPositionFromVelocity;
                    yankee['calculatePIPPositionFromVelocity'] = sizing;
                    sizing = _closure3_slot8;
                    yankee['windowDimensions'] = sizing;
                    sizing = _closure3_slot4;
                    yankee['safeArea'] = sizing;
                    sizing = offset[golf];
                    sizing = options.bind(verify)(sizing);
                    yankee['updateSharedValueIfChanged'] = sizing;
                    kilo = _closure3_slot9;
                    yankee['wrapperDimensions'] = kilo;
                    yankee['wrapperOffset'] = backup;
                    romeo = offset[romeo];
                    romeo = foxtrot.bind(verify)(romeo);
                    romeo = romeo.runOnJS;
                    yankee['runOnJS'] = romeo;
                    romeo = 18;
                    romeo = offset[romeo];
                    romeo = options.bind(verify)(romeo);
                    romeo = romeo.updateSourceTrackingView;
                    yankee['updateSourceTrackingView'] = romeo;
                    mike['__closure'] = yankee;
                    yankee = 14664553478840.0;
                    mike['__workletHash'] = yankee;
                    yankee = _closure1_slot26;
                    mike['__initData'] = yankee;
                    report = zulu.bind(report)(mike);
                    zulu = report.onTouchesCancelled;
                    mike = function() { // Original name: n
                        zulu = _closure1_slot1;
                        mike = _closure1_slot2;
                        entity = 16;
                        mike = mike[entity];
                        entity = undefined;
                        tango = zulu.bind(entity)(mike);
                        zulu = _closure3_slot12;
                        mike = {'active': false, 'pressed': false};
                        mike = tango.bind(entity)(zulu, mike);
                        return entity;
                    };
                    yankee = {};
                    romeo = offset[golf];
                    romeo = options.bind(verify)(romeo);
                    yankee['updateSharedValueIfChanged'] = romeo;
                    yankee['initialGestureOffset'] = oscar;
                    mike['__closure'] = yankee;
                    yankee = 11771025649835.0;
                    mike['__workletHash'] = yankee;
                    yankee = _closure1_slot27;
                    mike['__initData'] = yankee;
                    zulu = zulu.bind(report)(mike);
                    mike = zulu.onFinalize;
                    entity = function() { // Original name: t
                        zulu = _closure1_slot1;
                        mike = _closure1_slot2;
                        entity = 16;
                        mike = mike[entity];
                        entity = undefined;
                        tango = zulu.bind(entity)(mike);
                        zulu = _closure3_slot12;
                        mike = {'active': false, 'pressed': false};
                        mike = tango.bind(entity)(zulu, mike);
                        return entity;
                    };
                    report = {};
                    golf = offset[golf];
                    golf = options.bind(verify)(golf);
                    report['updateSharedValueIfChanged'] = golf;
                    report['initialGestureOffset'] = oscar;
                    entity['__closure'] = report;
                    report = 14589135665299.0;
                    entity['__workletHash'] = report;
                    tango = _closure1_slot28;
                    entity['__initData'] = tango;
                    entity = mike.bind(zulu)(entity);
                    return entity;
                };
                oscar = backup.bind(kilo)(entity, oscar);
                var _closure3_slot14 = oscar;
                entity = {};
                entity['multiPIPWrapperStyles'] = options;
                entity['mainPIPWrapperStyles'] = golf;
                entity['secondaryPIPWrapperStyles'] = report;
                options = _closure1_slot4;
                golf = options.useMemo;
                report = new Array(7);
                report[0] = foxtrot;
                report[1] = romeo;
                report[2] = yankee;
                report[3] = offset;
                report[4] = verify;
                report[5] = tango;
                report[6] = oscar;
                tango = function() {
                    romeo = _closure1_slot0;
                    foxtrot = _closure1_slot2;
                    golf = 15;
                    entity = foxtrot[golf];
                    oscar = undefined;
                    entity = romeo.bind(oscar)(entity);
                    report = entity.Gesture;
                    tango = report.Exclusive;
                    entity = foxtrot[golf];
                    entity = romeo.bind(oscar)(entity);
                    zulu = entity.Gesture;
                    entity = zulu.Tap;
                    offset = entity.bind(zulu)();
                    options = offset.enabled;
                    backup = _closure3_slot0;
                    zulu = _closure1_slot10;
                    zulu = zulu.IN_APP;
                    zulu = backup !== zulu;
                    options = options.bind(offset)(zulu);
                    zulu = options.maxDistance;
                    offset = 30;
                    kilo = zulu.bind(options)(offset);
                    options = kilo.onStart;
                    zulu = function() { // Original name: s
                        zulu = _closure1_slot0;
                        mike = _closure1_slot2;
                        entity = 12;
                        mike = mike[entity];
                        entity = undefined;
                        tango = zulu.bind(entity)(mike);
                        zulu = tango.runOnJS;
                        mike = _closure3_slot5;
                        zulu = zulu.bind(tango)(mike);
                        mike = null;
                        mike = zulu.bind(entity)(mike);
                        return entity;
                    };
                    sizing = {};
                    yankee = 12;
                    output = foxtrot[yankee];
                    output = romeo.bind(oscar)(output);
                    output = output.runOnJS;
                    sizing['runOnJS'] = output;
                    output = _closure3_slot5;
                    sizing['setFocused'] = output;
                    zulu['__closure'] = sizing;
                    sizing = 10703348418884.0;
                    zulu['__workletHash'] = sizing;
                    sizing = _closure1_slot29;
                    zulu['__initData'] = sizing;
                    kilo = options.bind(kilo)(zulu);
                    options = kilo.numberOfTaps;
                    zulu = 2;
                    zulu = options.bind(kilo)(zulu);
                    golf = foxtrot[golf];
                    golf = romeo.bind(oscar)(golf);
                    options = golf.Gesture;
                    golf = options.Tap;
                    kilo = golf.bind(options)();
                    options = kilo.enabled;
                    golf = true;
                    options = options.bind(kilo)(golf);
                    golf = options.maxDistance;
                    options = golf.bind(options)(offset);
                    golf = options.onStart;
                    mike = function() { // Original name: n
                        _fun122518: for(var _fun122518_ip = 0; ; ) switch(_fun122518_ip) {
 0:
                            tango = _closure3_slot0;
                            zulu = _closure1_slot10;
                            zulu = zulu.IN_APP;
                            if(!(tango !== zulu)) { _fun122518_ip = 140; continue _fun122518 }
 24:
                            tango = _closure3_slot1;
                            zulu = tango.get;
                            zulu = zulu.bind(tango)();
                            tango = zulu.mode;
                            zulu = _closure1_slot9;
                            zulu = zulu.HIDDEN;
                            if(!(tango !== zulu)) { _fun122518_ip = 98; continue _fun122518 }
 56:
                            report = _closure1_slot0;
                            tango = _closure1_slot2;
                            zulu = 12;
                            zulu = tango[zulu];
                            tango = undefined;
                            oscar = report.bind(tango)(zulu);
                            report = oscar.runOnJS;
                            zulu = _closure3_slot2;
                            zulu = report.bind(oscar)(zulu);
                            zulu = zulu.bind(tango)();
                            _fun122518_ip = 191; continue _fun122518;
 98:
                            report = _closure1_slot0;
                            tango = _closure1_slot2;
                            zulu = 12;
                            zulu = tango[zulu];
                            tango = undefined;
                            oscar = report.bind(tango)(zulu);
                            report = oscar.runOnJS;
                            zulu = _closure3_slot7;
                            zulu = report.bind(oscar)(zulu);
                            zulu = zulu.bind(tango)();
                            _fun122518_ip = 191; continue _fun122518;
 140:
                            report = _closure1_slot0;
                            tango = _closure1_slot2;
                            zulu = 12;
                            tango = tango[zulu];
                            zulu = undefined;
                            report = report.bind(zulu)(tango);
                            tango = report.runOnJS;
                            mike = _closure3_slot6;
                            mike = tango.bind(report)(mike);
                            entity = _closure1_slot8;
                            entity = entity.PANEL;
                            entity = mike.bind(zulu)(entity);
 191:
                            entity = undefined;
                            return entity;
                        }
                    };
                    offset = {};
                    offset['type'] = backup;
                    backup = _closure1_slot10;
                    offset['VoicePanelPIPModes'] = backup;
                    yankee = foxtrot[yankee];
                    yankee = romeo.bind(oscar)(yankee);
                    yankee = yankee.runOnJS;
                    offset['runOnJS'] = yankee;
                    yankee = _closure3_slot6;
                    offset['setMode'] = yankee;
                    yankee = _closure1_slot8;
                    offset['VoicePanelModes'] = yankee;
                    yankee = _closure3_slot1;
                    offset['controlsSpecs'] = yankee;
                    yankee = _closure1_slot9;
                    offset['VoicePanelControlsModes'] = yankee;
                    yankee = _closure3_slot7;
                    offset['showControls'] = yankee;
                    yankee = _closure3_slot2;
                    offset['hideControls'] = yankee;
                    mike['__closure'] = offset;
                    offset = 4031760443375.0;
                    mike['__workletHash'] = offset;
                    verify = _closure1_slot30;
                    mike['__initData'] = verify;
                    mike = golf.bind(options)(mike);
                    entity = _closure3_slot14;
                    entity = entity.bind(oscar)();
                    entity = tango.bind(report)(zulu, mike, entity);
                    return entity;
                };
                tango = golf.bind(options)(tango, report);
                entity['mainPIPGesture'] = tango;
                report = _closure1_slot4;
                tango = report.useMemo;
                zulu = new Array(1);
                zulu[0] = oscar;
                mike = function() {
                    offset = _closure1_slot0;
                    yankee = _closure1_slot2;
                    entity = 15;
                    mike = yankee[entity];
                    report = undefined;
                    mike = offset.bind(report)(mike);
                    tango = mike.Gesture;
                    zulu = tango.Exclusive;
                    entity = yankee[entity];
                    entity = offset.bind(report)(entity);
                    mike = entity.Gesture;
                    entity = mike.Tap;
                    oscar = entity.bind(mike)();
                    mike = oscar.maxDistance;
                    entity = 30;
                    oscar = mike.bind(oscar)(entity);
                    mike = oscar.onStart;
                    entity = function() { // Original name: t
                        oscar = _closure1_slot0;
                        golf = _closure1_slot2;
                        entity = 12;
                        zulu = golf[entity];
                        entity = undefined;
                        report = oscar.bind(entity)(zulu);
                        tango = report.runOnJS;
                        zulu = 19;
                        zulu = golf[zulu];
                        zulu = oscar.bind(entity)(zulu);
                        zulu = zulu.updateActivityPanelMode;
                        zulu = tango.bind(report)(zulu);
                        mike = _closure1_slot11;
                        mike = mike.PANEL;
                        mike = zulu.bind(entity)(mike);
                        return entity;
                    };
                    options = {};
                    verify = 12;
                    verify = yankee[verify];
                    verify = offset.bind(report)(verify);
                    verify = verify.runOnJS;
                    options['runOnJS'] = verify;
                    verify = 19;
                    verify = yankee[verify];
                    verify = offset.bind(report)(verify);
                    verify = verify.updateActivityPanelMode;
                    options['updateActivityPanelMode'] = verify;
                    verify = _closure1_slot11;
                    options['ActivityPanelModes'] = verify;
                    entity['__closure'] = options;
                    options = 525612728681.0;
                    entity['__workletHash'] = options;
                    golf = _closure1_slot31;
                    entity['__initData'] = golf;
                    mike = mike.bind(oscar)(entity);
                    entity = _closure3_slot14;
                    entity = entity.bind(report)();
                    entity = zulu.bind(tango)(mike, entity);
                    return entity;
                };
                mike = tango.bind(report)(mike, zulu);
                entity['secondaryPIPGesture'] = mike;
                return entity;
            };
            options = golf.bind(tango)(zulu);
            golf = options.multiPIPWrapperStyles;
            output = options.mainPIPWrapperStyles;
            foxtrot = options.secondaryPIPWrapperStyles;
            echo = options.mainPIPGesture;
            result = options.secondaryPIPGesture;
            options = 20;
            options = sizing[options];
            options = offset.bind(tango)(options);
            options = options.bind(tango)(verify);
            kilo = options.pushToTalk;
            options = 12;
            options = sizing[options];
            offset = backup.bind(tango)(options);
            verify = offset.useAnimatedStyle;
            options = function() { // Original name: s
                entity = {};
                tango = _closure1_slot0;
                zulu = _closure1_slot2;
                mike = 13;
                zulu = zulu[mike];
                mike = undefined;
                report = tango.bind(mike)(zulu);
                tango = report.getVoicePanelPIPBorderRadius;
                mike = _closure2_slot1;
                zulu = mike.width;
                mike = mike.height;
                mike = tango.bind(report)(zulu, mike);
                entity['borderRadius'] = mike;
                return entity;
            };
            yankee = {};
            romeo = 13;
            romeo = sizing[romeo];
            romeo = backup.bind(tango)(romeo);
            romeo = romeo.getVoicePanelPIPBorderRadius;
            yankee['getVoicePanelPIPBorderRadius'] = romeo;
            yankee['pipState'] = oscar;
            options['__closure'] = yankee;
            yankee = 9598016909682.0;
            options['__workletHash'] = yankee;
            yankee = _closure1_slot32;
            options['__initData'] = yankee;
            sizing = verify.bind(offset)(options);
            offset = _closure1_slot4;
            verify = offset.useMemo;
            options = new Array(1);
            options[0] = mike;
            mike = function() {
                entity = {'accessible': true, 'accessibilityLabel': null, 'accessibilityRole': 'button'};
                oscar = _closure1_slot0;
                golf = _closure1_slot2;
                mike = 21;
                zulu = golf[mike];
                report = undefined;
                zulu = oscar.bind(report)(zulu);
                tango = zulu.intl;
                zulu = tango.string;
                mike = golf[mike];
                mike = oscar.bind(report)(mike);
                mike = mike.t;
                mike = mike.oN8bqa;
                mike = zulu.bind(tango)(mike);
                entity['accessibilityLabel'] = mike;
                zulu = {};
                mike = 'activate';
                zulu['name'] = mike;
                mike = new Array(1);
                mike[0] = zulu;
                entity['accessibilityActions'] = mike;
                mike = function() { // Original name: onAccessibilityAction
                    zulu = _closure2_slot0;
                    entity = _closure1_slot8;
                    mike = entity.PANEL;
                    entity = undefined;
                    mike = zulu.bind(entity)(mike);
                    return entity;
                };
                entity['onAccessibilityAction'] = mike;
                return entity;
            };
            verify = verify.bind(offset)(mike, options);
            yankee = _closure1_slot4;
            offset = yankee.useMemo;
            options = function() {
                entity = {};
                mike = true;
                entity['accessible'] = mike;
                oscar = _closure1_slot0;
                golf = _closure1_slot2;
                mike = 21;
                zulu = golf[mike];
                report = undefined;
                zulu = oscar.bind(report)(zulu);
                tango = zulu.intl;
                zulu = tango.string;
                mike = golf[mike];
                mike = oscar.bind(report)(mike);
                mike = mike.t;
                mike = mike.3ejJen;
                mike = zulu.bind(tango)(mike);
                entity['accessibilityLabel'] = mike;
                zulu = {};
                mike = 'activate';
                zulu['name'] = mike;
                mike = new Array(1);
                mike[0] = zulu;
                entity['accessibilityActions'] = mike;
                mike = function() { // Original name: onAccessibilityAction
                    tango = _closure1_slot0;
                    zulu = _closure1_slot2;
                    entity = 19;
                    zulu = zulu[entity];
                    entity = undefined;
                    tango = tango.bind(entity)(zulu);
                    zulu = tango.updateActivityPanelMode;
                    mike = _closure1_slot11;
                    mike = mike.PANEL;
                    mike = zulu.bind(tango)(mike);
                    return entity;
                };
                entity['onAccessibilityAction'] = mike;
                return entity;
            };
            mike = new Array(0);
            romeo = offset.bind(yankee)(options, mike);
            mike = _closure1_slot6;
            entity = function(argFoo) {
                entity = argFoo;
                entity = entity.isActivityFocused;
                return entity;
            };
            mike = mike.bind(tango)(entity);
            if(!kilo) { _fun122500_ip = 357; continue _fun122500 }
 334:
            entity = _closure1_slot10;
            entity = entity.IN_PANEL;
            entity = zulu !== entity;
            if(entity) { _fun122500_ip = 354; continue _fun122500 }
 351:
            entity = mike;
 354:
            kilo = entity;
 357:
            zulu = _closure1_slot13;
            sequence = _closure1_slot1;
            record = _closure1_slot2;
            offset = 22;
            entity = record[offset];
            mike = sequence.bind(tango)(entity);
            entity = {};
            entity['ref'] = report;
            yankee = 'box-none';
            entity['pointerEvents'] = yankee;
            report = _closure1_slot18;
            options = report.multiPIPContainer;
            report = new Array(2);
            report[0] = options;
            report[1] = golf;
            entity['style'] = report;
            report = _closure1_slot17;
            entity['layout'] = report;
            options = _closure1_slot13;
            report = record[offset];
            golf = sequence.bind(tango)(report);
            report = {};
            backup = _closure1_slot18;
            source = backup.pipContentWrapper;
            backup = new Array(3);
            backup[0] = source;
            source = _closure1_slot18;
            source = source.inAppElevationShadow;
            backup[1] = source;
            backup[2] = output;
            report['style'] = backup;
            report['pointerEvents'] = yankee;
            yankee = _closure1_slot17;
            report['layout'] = yankee;
            papa = report;
            context = verify;
            verify = copyDataProperties(papa, context);
            output = _closure1_slot12;
            yankee = _closure1_slot0;
            backup = 15;
            verify = record[backup];
            verify = yankee.bind(tango)(verify);
            yankee = verify.GestureDetector;
            verify = {};
            verify['gesture'] = echo;
            control = _closure1_slot12;
            echo = record[offset];
            source = sequence.bind(tango)(echo);
            echo = {};
            vacuum = _closure1_slot18;
            config = vacuum.pipMask;
            vacuum = new Array(2);
            vacuum[0] = config;
            vacuum[1] = sizing;
            echo['style'] = vacuum;
            vacuum = _closure1_slot17;
            echo['layout'] = vacuum;
            config = _closure1_slot12;
            vacuum = 23;
            vacuum = record[vacuum];
            sequence = sequence.bind(tango)(vacuum);
            vacuum = {};
            vacuum = config.bind(tango)(sequence, vacuum);
            echo['children'] = vacuum;
            echo = control.bind(tango)(source, echo);
            verify['children'] = echo;
            yankee = output.bind(tango)(yankee, verify);
            verify = new Array(2);
            verify[0] = yankee;
            yankee = null;
            if(!kilo) { _fun122500_ip = 684; continue _fun122500 }
 652:
            echo = _closure1_slot12;
            output = _closure1_slot1;
            source = _closure1_slot2;
            kilo = 24;
            kilo = source[kilo];
            output = output.bind(tango)(kilo);
            kilo = {};
            yankee = echo.bind(tango)(output, kilo);
 684:
            verify[1] = yankee;
            yankee = 'children';
            report[yankee] = verify;
            golf = options.bind(tango)(golf, report);
            report = new Array(2);
            report[0] = golf;
            oscar = oscar.showSecondaryPIP;
            if(!oscar) { _fun122500_ip = 928; continue _fun122500 }
 723:
            verify = _closure1_slot12;
            source = _closure1_slot1;
            vacuum = _closure1_slot2;
            output = 25;
            golf = vacuum[output];
            options = source.bind(tango)(golf);
            golf = {};
            golf['style'] = foxtrot;
            papa = golf;
            context = romeo;
            romeo = copyDataProperties(papa, context);
            foxtrot = _closure1_slot12;
            offset = vacuum[offset];
            romeo = source.bind(tango)(offset);
            offset = {};
            kilo = _closure1_slot18;
            echo = kilo.pipMask;
            kilo = new Array(2);
            kilo[0] = echo;
            kilo[1] = sizing;
            offset['style'] = kilo;
            sizing = _closure1_slot12;
            kilo = _closure1_slot0;
            backup = vacuum[backup];
            backup = kilo.bind(tango)(backup);
            kilo = backup.GestureDetector;
            backup = {};
            backup['gesture'] = result;
            echo = _closure1_slot12;
            output = vacuum[output];
            result = source.bind(tango)(output);
            output = {};
            control = _closure1_slot5;
            control = control.absoluteFill;
            output['style'] = control;
            control = _closure1_slot12;
            update = 26;
            update = vacuum[update];
            source = source.bind(tango)(update);
            update = {};
            update = control.bind(tango)(source, update);
            output['children'] = update;
            output = echo.bind(tango)(result, output);
            backup['children'] = output;
            backup = sizing.bind(tango)(kilo, backup);
            offset['children'] = backup;
            offset = foxtrot.bind(tango)(romeo, offset);
            golf[yankee] = offset;
            oscar = verify.bind(tango)(options, golf);
 928:
            report[1] = oscar;
            entity['children'] = report;
            entity = zulu.bind(tango)(mike, entity);
            return entity;
        }
    };
    var _closure1_slot34 = entity;
    entity = function(argFoo, argBar, argBaz, argCorge) { // Original name: renderPIPWrapper
        report = _closure1_slot12;
        tango = _closure1_slot33;
        zulu = {};
        entity = argBar;
        zulu['type'] = entity;
        entity = argBaz;
        zulu['transitionState'] = entity;
        entity = argCorge;
        zulu['transitionCleanUp'] = entity;
        mike = undefined;
        entity = argFoo;
        entity = report.bind(mike)(tango, zulu, entity);
        return entity;
    };
    var _closure1_slot35 = entity;
    entity = global;
    verify = entity.Object;
    golf = verify.defineProperty;
    tango = {};
    entity = true;
    tango['value'] = entity;
    entity = '__esModule';
    entity = golf.bind(verify)(zulu, entity, tango);
    entity = 0;
    tango = oscar[entity];
    entity = undefined;
    tango = options.bind(entity)(tango);
    var _closure1_slot3 = tango;
    tango = 1;
    golf = oscar[tango];
    tango = argCorge;
    golf = tango.bind(entity)(golf);
    var _closure1_slot4 = golf;
    tango = 2;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    offset = tango.StyleSheet;
    var _closure1_slot5 = offset;
    tango = tango.Platform;
    tango = 3;
    tango = oscar[tango];
    tango = options.bind(entity)(tango);
    var _closure1_slot6 = tango;
    tango = 4;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    options = tango.DRAWER_SPRING_PHYSICS;
    var _closure1_slot7 = options;
    options = tango.VoicePanelModes;
    var _closure1_slot8 = options;
    romeo = tango.SECONDARY_PIP_TOP_MARGIN;
    tango = 5;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.VoicePanelControlsModes;
    var _closure1_slot9 = tango;
    tango = 6;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.VoicePanelPIPModes;
    var _closure1_slot10 = tango;
    tango = 7;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.ActivityPanelModes;
    var _closure1_slot11 = tango;
    tango = 8;
    options = oscar[tango];
    options = report.bind(entity)(options);
    options = options.jsx;
    var _closure1_slot12 = options;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.jsxs;
    var _closure1_slot13 = tango;
    tango = {'mass': 0.3, 'damping': 80, 'stiffness': 150};
    var _closure1_slot14 = tango;
    tango = {};
    options = 100;
    tango['duration'] = options;
    var _closure1_slot15 = tango;
    tango = {};
    options = 'function layoutTransition_VoicePanelPIPTsx1(values){const{withSpring,LAYOUT_PHYSICS}=this.__closure;return{animations:{originX:withSpring(values.targetOriginX,LAYOUT_PHYSICS),originY:withSpring(values.targetOriginY,LAYOUT_PHYSICS),width:withSpring(values.targetWidth,LAYOUT_PHYSICS),height:withSpring(values.targetHeight,LAYOUT_PHYSICS)},initialValues:{originX:values.currentOriginX,originY:values.currentOriginY,width:values.currentWidth,height:values.currentHeight}};}';
    tango['code'] = options;
    var _closure1_slot16 = tango;
    tango = function() {
        entity = function(argFoo) { // Original name: layoutTransition
            zulu = argFoo;
            entity = {};
            mike = {};
            golf = _closure1_slot0;
            options = _closure1_slot2;
            report = 9;
            verify = options[report];
            oscar = undefined;
            romeo = golf.bind(oscar)(verify);
            yankee = romeo.withSpring;
            offset = zulu.targetOriginX;
            verify = _closure1_slot14;
            verify = yankee.bind(romeo)(offset, verify);
            mike['originX'] = verify;
            verify = options[report];
            romeo = golf.bind(oscar)(verify);
            yankee = romeo.withSpring;
            offset = zulu.targetOriginY;
            verify = _closure1_slot14;
            verify = yankee.bind(romeo)(offset, verify);
            mike['originY'] = verify;
            verify = options[report];
            romeo = golf.bind(oscar)(verify);
            yankee = romeo.withSpring;
            offset = zulu.targetWidth;
            verify = _closure1_slot14;
            verify = yankee.bind(romeo)(offset, verify);
            mike['width'] = verify;
            report = options[report];
            golf = golf.bind(oscar)(report);
            oscar = golf.withSpring;
            report = zulu.targetHeight;
            tango = _closure1_slot14;
            tango = oscar.bind(golf)(report, tango);
            mike['height'] = tango;
            entity['animations'] = mike;
            mike = {};
            tango = zulu.currentOriginX;
            mike['originX'] = tango;
            tango = zulu.currentOriginY;
            mike['originY'] = tango;
            tango = zulu.currentWidth;
            mike['width'] = tango;
            zulu = zulu.currentHeight;
            mike['height'] = zulu;
            entity['initialValues'] = mike;
            return entity;
        };
        zulu = {};
        oscar = _closure1_slot0;
        report = _closure1_slot2;
        tango = 9;
        report = report[tango];
        tango = undefined;
        tango = oscar.bind(tango)(report);
        tango = tango.withSpring;
        zulu['withSpring'] = tango;
        tango = _closure1_slot14;
        zulu['LAYOUT_PHYSICS'] = tango;
        entity['__closure'] = zulu;
        zulu = 9346092352642.0;
        entity['__workletHash'] = zulu;
        mike = _closure1_slot16;
        entity['__initData'] = mike;
        return entity;
    };
    tango = tango.bind(entity)();
    var _closure1_slot17 = tango;
    verify = offset.create;
    options = {};
    tango = {};
    yankee = 'black';
    tango['backgroundColor'] = yankee;
    options['pipContentWrapper'] = tango;
    tango = {};
    options['noElevationShadow'] = tango;
    tango = {};
    options['inAppElevationShadow'] = tango;
    tango = {};
    options['inPanelElevationShadow'] = tango;
    tango = {};
    kilo = offset.absoluteFillObject;
    sizing = tango;
    yankee = copyDataProperties(sizing, kilo);
    foxtrot = 'hidden';
    yankee = 'overflow';
    tango[yankee] = foxtrot;
    options['pipMask'] = tango;
    yankee = {'position': 'absolute', 'zIndex': 10, 'flexDirection': 'column', 'alignItems': 'center'};
    tango = 10;
    yankee['gap'] = romeo;
    options['multiPIPContainer'] = yankee;
    options = verify.bind(offset)(options);
    var _closure1_slot18 = options;
    var _closure1_slot19 = tango;
    tango = {};
    options = "function VoicePanelPIPTsx2(){const{pipState,getClampedPIPPosition,wrapperDimensions,windowDimensions,safeArea,pipAvoidanceSpecs,initialGestureOffset,withTiming,opacity,OPACITY_TIMING,withSpring,DRAWER_SPRING_PHYSICS,LAYOUT_PHYSICS,getVoicePanelPIPBorderRadius}=this.__closure;const width=pipState.width;const height=!pipState.showSecondaryPIP?pipState.height:pipState.containerHeight;const{x:x,y:y}=getClampedPIPPosition({pipX:wrapperDimensions.get().pipX,pipY:wrapperDimensions.get().pipY,width:width,height:height,windowDimensions:windowDimensions.get(),safeArea:safeArea.get(),bottomAvoidanceRegion:pipAvoidanceSpecs.get().bottom,topAvoidanceRegion:pipAvoidanceSpecs.get().top,positionOffset:initialGestureOffset.get().active?initialGestureOffset.get():undefined});return{width:width,height:height,opacity:withTiming(opacity.get(),OPACITY_TIMING,'animate-never'),transform:[{translateX:withSpring(x,initialGestureOffset.get().active?DRAWER_SPRING_PHYSICS:LAYOUT_PHYSICS)},{translateY:withSpring(y,initialGestureOffset.get().active?DRAWER_SPRING_PHYSICS:LAYOUT_PHYSICS)}],borderRadius:getVoicePanelPIPBorderRadius(width,height)};}";
    tango['code'] = options;
    var _closure1_slot20 = tango;
    tango = {};
    options = 'function VoicePanelPIPTsx3(){const{pipState,getVoicePanelPIPBorderRadius}=this.__closure;const{width:width,height:height}=pipState;return{width:width,height:height,borderRadius:getVoicePanelPIPBorderRadius(width,height)};}';
    tango['code'] = options;
    var _closure1_slot21 = tango;
    tango = {};
    options = 'function VoicePanelPIPTsx4({absoluteX:absoluteX,absoluteY:absoluteY}){const{initialGestureOffset}=this.__closure;initialGestureOffset.set({x:0,y:0,absoluteX:absoluteX,absoluteY:absoluteY,active:false,pressed:true});}';
    tango['code'] = options;
    var _closure1_slot22 = tango;
    tango = {};
    options = 'function VoicePanelPIPTsx5(){const{updateSharedValueIfChanged,initialGestureOffset}=this.__closure;updateSharedValueIfChanged(initialGestureOffset,{active:false,pressed:false});}';
    tango['code'] = options;
    var _closure1_slot23 = tango;
    tango = {};
    options = 'function VoicePanelPIPTsx6(event,manager){const{State,initialGestureOffset,MIN_GESTURE_START,updateSharedValueIfChanged,wrapperOffset,runOnJS,triggerIOSHaptic}=this.__closure;if(event.state!==State.BEGAN||initialGestureOffset.get().active)return;const{absoluteY:absoluteY,absoluteX:absoluteX}=event.changedTouches[0];if(Math.abs(initialGestureOffset.get().absoluteX-absoluteX)>MIN_GESTURE_START||Math.abs(initialGestureOffset.get().absoluteY-absoluteY)>MIN_GESTURE_START){initialGestureOffset.set({x:0,y:0,absoluteX:absoluteX,absoluteY:absoluteY,pressed:true,active:true});updateSharedValueIfChanged(wrapperOffset,{gestureActive:true,x:0,y:0});manager.activate();runOnJS(triggerIOSHaptic)();}}';
    tango['code'] = options;
    var _closure1_slot24 = tango;
    tango = {};
    options = 'function VoicePanelPIPTsx7({absoluteX:absoluteX,absoluteY:absoluteY}){const{updateSharedValueIfChanged,initialGestureOffset}=this.__closure;updateSharedValueIfChanged(initialGestureOffset,{x:absoluteX-initialGestureOffset.get().absoluteX,y:absoluteY-initialGestureOffset.get().absoluteY});}';
    tango['code'] = options;
    var _closure1_slot25 = tango;
    tango = {};
    options = 'function VoicePanelPIPTsx8({velocityX:velocityX,velocityY:velocityY,absoluteX:absoluteX,absoluteY:absoluteY}){const{calculatePIPPositionFromVelocity,windowDimensions,safeArea,updateSharedValueIfChanged,wrapperDimensions,wrapperOffset,runOnJS,updateSourceTrackingView}=this.__closure;const{pipX:pipX,pipY:pipY}=calculatePIPPositionFromVelocity({velocityX:velocityX,velocityY:velocityY,absoluteX:absoluteX,absoluteY:absoluteY,windowDimensions:windowDimensions.get(),safeArea:safeArea.get()});updateSharedValueIfChanged(wrapperDimensions,{pipX:pipX,pipY:pipY});updateSharedValueIfChanged(wrapperOffset,{gestureActive:false});runOnJS(updateSourceTrackingView)();}';
    tango['code'] = options;
    var _closure1_slot26 = tango;
    tango = {};
    options = 'function VoicePanelPIPTsx9(){const{updateSharedValueIfChanged,initialGestureOffset}=this.__closure;updateSharedValueIfChanged(initialGestureOffset,{active:false,pressed:false});}';
    tango['code'] = options;
    var _closure1_slot27 = tango;
    tango = {};
    options = 'function VoicePanelPIPTsx10(){const{updateSharedValueIfChanged,initialGestureOffset}=this.__closure;updateSharedValueIfChanged(initialGestureOffset,{active:false,pressed:false});}';
    tango['code'] = options;
    var _closure1_slot28 = tango;
    tango = {};
    options = 'function VoicePanelPIPTsx11(){const{runOnJS,setFocused}=this.__closure;runOnJS(setFocused)(null);}';
    tango['code'] = options;
    var _closure1_slot29 = tango;
    tango = {};
    options = 'function VoicePanelPIPTsx12(){const{type,VoicePanelPIPModes,runOnJS,setMode,VoicePanelModes,controlsSpecs,VoicePanelControlsModes,showControls,hideControls}=this.__closure;if(type===VoicePanelPIPModes.IN_APP){runOnJS(setMode)(VoicePanelModes.PANEL);}else{if(controlsSpecs.get().mode===VoicePanelControlsModes.HIDDEN){runOnJS(showControls)();}else{runOnJS(hideControls)();}}}';
    tango['code'] = options;
    var _closure1_slot30 = tango;
    tango = {};
    options = 'function VoicePanelPIPTsx13(){const{runOnJS,updateActivityPanelMode,ActivityPanelModes}=this.__closure;runOnJS(updateActivityPanelMode)(ActivityPanelModes.PANEL);}';
    tango['code'] = options;
    var _closure1_slot31 = tango;
    tango = {};
    options = 'function VoicePanelPIPTsx14(){const{getVoicePanelPIPBorderRadius,pipState}=this.__closure;return{borderRadius:getVoicePanelPIPBorderRadius(pipState.width,pipState.height)};}';
    tango['code'] = options;
    var _closure1_slot32 = tango;
    options = golf.memo;
    tango = function(argFoo) {
        _fun122530: for(var _fun122530_ip = 0; ; ) switch(_fun122530_ip) {
 0:
            mike = argFoo;
            oscar = mike.type;
            offset = mike.transitionState;
            var _closure2_slot0 = offset;
            verify = mike.transitionCleanUp;
            var _closure2_slot1 = verify;
            report = undefined;
            var _closure2_slot2 = report;
            golf = _closure1_slot4;
            tango = golf.useState;
            zulu = _closure1_slot10;
            zulu = zulu.IN_PANEL;
            zulu = oscar === zulu;
            if(zulu) { _fun122530_ip = 101; continue _fun122530 }
 65:
            yankee = _closure1_slot0;
            romeo = _closure1_slot2;
            options = 27;
            options = romeo[options];
            options = yankee.bind(report)(options);
            options = options.TransitionStates;
            options = options.MOUNTED;
            zulu = offset === options;
 101:
            golf = tango.bind(golf)(zulu);
            tango = _closure1_slot3;
            zulu = 2;
            golf = tango.bind(report)(golf, zulu);
            zulu = 0;
            zulu = golf[zulu];
            tango = 1;
            tango = golf[tango];
            _closure2_slot2 = tango;
            yankee = _closure1_slot4;
            options = yankee.useEffect;
            golf = function() {
                mike = global;
                report = mike.setTimeout;
                tango = undefined;
                zulu = function() {
                    zulu = _closure2_slot2;
                    mike = undefined;
                    entity = true;
                    entity = zulu.bind(mike)(entity);
                    return entity;
                };
                mike = 400;
                mike = report.bind(tango)(zulu, mike);
                var _closure3_slot0 = mike;
                entity = function() {
                    entity = global;
                    zulu = entity.clearTimeout;
                    mike = _closure3_slot0;
                    entity = undefined;
                    mike = zulu.bind(entity)(mike);
                    return entity;
                };
                return entity;
            };
            tango = new Array(0);
            tango = options.bind(yankee)(golf, tango);
            options = _closure1_slot4;
            golf = options.useEffect;
            tango = new Array(2);
            tango[0] = offset;
            tango[1] = verify;
            entity = function() {
                _fun122534: for(var _fun122534_ip = 0; ; ) switch(_fun122534_ip) {
 0:
                    zulu = _closure2_slot0;
                    tango = _closure1_slot0;
                    mike = _closure1_slot2;
                    entity = 27;
                    mike = mike[entity];
                    entity = undefined;
                    mike = tango.bind(entity)(mike);
                    mike = mike.TransitionStates;
                    mike = mike.YEETED;
                    if(!(zulu === mike)) { _fun122534_ip = 74; continue _fun122534 }
 48:
                    mike = global;
                    tango = mike.setTimeout;
                    zulu = function() {
                        mike = _closure2_slot1;
                        entity = undefined;
                        mike = mike.bind(entity)();
                        return entity;
                    };
                    mike = 17;
                    mike = tango.bind(entity)(zulu, mike);
 74:
                    return entity;
                }
            };
            entity = golf.bind(options)(entity, tango);
            entity = null;
            if(!zulu) { _fun122530_ip = 221; continue _fun122530 }
 201:
            tango = _closure1_slot12;
            zulu = _closure1_slot34;
            mike = {};
            mike['type'] = oscar;
            entity = tango.bind(report)(zulu, mike);
 221:
            return entity;
        }
    };
    tango = options.bind(golf)(tango);
    var _closure1_slot33 = tango;
    tango = golf.memo;
    mike = function() { // Original name: VoicePanelPIPWrapper
        mike = _closure1_slot0;
        golf = _closure1_slot2;
        entity = 11;
        entity = golf[entity];
        tango = undefined;
        zulu = mike.bind(tango)(entity);
        entity = zulu.usePIPState;
        entity = entity.bind(zulu)();
        oscar = entity.mode;
        zulu = _closure1_slot12;
        entity = 27;
        entity = golf[entity];
        entity = mike.bind(tango)(entity);
        mike = entity.TransitionItem;
        entity = {};
        entity['item'] = oscar;
        report = _closure1_slot35;
        entity['renderItem'] = report;
        entity = zulu.bind(tango)(mike, entity);
        return entity;
    };
    mike = tango.bind(golf)(mike);
    tango = 28;
    tango = oscar[tango];
    oscar = report.bind(entity)(tango);
    report = oscar.fileFinishedImporting;
    tango = 'modules/voice_panel/native/pip/VoicePanelPIP.tsx';
    tango = report.bind(oscar)(tango);
    zulu['default'] = mike;
    return entity;
})();