// app/modules/voice_panel/native/pip/VoicePanelPIP.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    report = argBar;
    option = argBaz;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    var _closure1_slot1 = option;
    var _closure1_slot2 = oscard;
    entity = function() { // Original name: VoicePanelPIP
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            report = _closure1_slot4;
            zuuluu = report.useContext;
            verify = _closure1_slot1;
            backup = _closure1_slot2;
            michal = 11;
            michal = backup[michal];
            tangon = undefined;
            michal = verify.bind(tangon)(michal);
            zuuluu = zuuluu.bind(report)(michal);
            option = zuuluu.controlsSpecs;
            michal = zuuluu.setMode;
            var _closure2_slot0 = michal;
            report = zuuluu.pipContainerRef;
            foxtra = _closure1_slot0;
            zuuluu = 12;
            zuuluu = backup[zuuluu];
            oscard = foxtra.bind(tangon)(zuuluu);
            zuuluu = oscard.usePIPState;
            oscard = zuuluu.bind(oscard)();
            var _closure2_slot1 = oscard;
            golfie = oscard.mode;
            zuuluu = function(argFoo) { // Original name: usePIPGesture
                entity = argFoo;
                var _closure3_slot0 = entity;
                oscard = _closure1_slot4;
                report = oscard.useContext;
                option = _closure1_slot1;
                foxtra = _closure1_slot2;
                tangon = 11;
                tangon = foxtra[tangon];
                golfie = undefined;
                tangon = option.bind(golfie)(tangon);
                report = report.bind(oscard)(tangon);
                result = report.controlsSpecs;
                var _closure3_slot1 = result;
                output = report.hideControls;
                var _closure3_slot2 = output;
                config = report.pipAvoidanceSpecs;
                var _closure3_slot3 = config;
                source = report.safeArea;
                var _closure3_slot4 = source;
                verify = report.setFocused;
                var _closure3_slot5 = verify;
                option = report.setMode;
                var _closure3_slot6 = option;
                sizing = report.showControls;
                var _closure3_slot7 = sizing;
                update = report.windowDimensions;
                var _closure3_slot8 = update;
                echoed = report.wrapperDimensions;
                var _closure3_slot9 = echoed;
                tangon = report.wrapperOffset;
                var _closure3_slot10 = tangon;
                report = report.channelId;
                var _closure3_slot11 = report;
                oscard = _closure1_slot0;
                report = 12;
                report = foxtra[report];
                offset = oscard.bind(golfie)(report);
                report = offset.usePIPState;
                report = report.bind(offset)();
                var _closure3_slot12 = report;
                offset = 13;
                yankee = foxtra[offset];
                kiloes = oscard.bind(golfie)(yankee);
                romeon = kiloes.useSharedValue;
                backup = 0;
                yankee = {'x': 0, 'y': 0, 'absoluteX': 0, 'absoluteY': 0, 'active': false, 'pressed': false};
                ctrled = romeon.bind(kiloes)(yankee);
                var _closure3_slot13 = ctrled;
                yankee = foxtra[offset];
                romeon = oscard.bind(golfie)(yankee);
                yankee = romeon.useSharedValue;
                sequen = yankee.bind(romeon)(backup);
                var _closure3_slot14 = sequen;
                kiloes = _closure1_slot4;
                backup = kiloes.useEffect;
                romeon = new Array(1);
                romeon[0] = sequen;
                yankee = function() {
                    michal = global;
                    report = michal.setTimeout;
                    tangon = undefined;
                    zuuluu = function() {
                        zuuluu = _closure3_slot14;
                        michal = zuuluu.set;
                        entity = 1;
                        entity = michal.bind(zuuluu)(entity);
                        entity = undefined;
                        return entity;
                    };
                    michal = 200;
                    michal = report.bind(tangon)(zuuluu, michal);
                    var _closure4_slot0 = michal;
                    entity = function() {
                        entity = global;
                        zuuluu = entity.clearTimeout;
                        michal = _closure4_slot0;
                        entity = undefined;
                        michal = zuuluu.bind(entity)(michal);
                        return entity;
                    };
                    return entity;
                };
                yankee = backup.bind(kiloes)(yankee, romeon);
                yankee = foxtra[offset];
                backup = oscard.bind(golfie)(yankee);
                romeon = backup.useAnimatedStyle;
                yankee = function() { // Original name: F
                    _fun00003: for(var _fun00004_ip = 0; ; ) switch(_fun00004_ip) {
 0:
                        entity = _closure3_slot12;
                        report = entity.width;
                        michal = entity.showSecondaryPIP;
                        entity = _closure3_slot12;
                        if(michal) { _fun00004_ip = 32; continue _fun00003 }
 25:
                        tangon = entity.height;
                        _fun00004_ip = 38; continue _fun00003;
 32:
                        tangon = entity.containerHeight;
 38:
                        zuuluu = _closure1_slot0;
                        entity = _closure1_slot2;
                        golfie = 14;
                        entity = entity[golfie];
                        oscard = undefined;
                        option = zuuluu.bind(oscard)(entity);
                        zuuluu = option.getClampedPIPPosition;
                        entity = {};
                        yankee = _closure3_slot9;
                        offset = yankee.get;
                        offset = offset.bind(yankee)();
                        offset = offset.pipX;
                        entity['pipX'] = offset;
                        offset = yankee.get;
                        offset = offset.bind(yankee)();
                        offset = offset.pipY;
                        entity['pipY'] = offset;
                        entity['width'] = report;
                        entity['height'] = tangon;
                        yankee = _closure3_slot8;
                        offset = yankee.get;
                        offset = offset.bind(yankee)();
                        entity['windowDimensions'] = offset;
                        yankee = _closure3_slot4;
                        offset = yankee.get;
                        offset = offset.bind(yankee)();
                        entity['safeArea'] = offset;
                        yankee = _closure3_slot3;
                        offset = yankee.get;
                        offset = offset.bind(yankee)();
                        offset = offset.bottom;
                        entity['bottomAvoidanceRegion'] = offset;
                        offset = yankee.get;
                        offset = offset.bind(yankee)();
                        offset = offset.top;
                        entity['topAvoidanceRegion'] = offset;
                        yankee = _closure3_slot13;
                        offset = yankee.get;
                        offset = offset.bind(yankee)();
                        yankee = offset.active;
                        offset = undefined;
                        if(!yankee) { _fun00004_ip = 238; continue _fun00003 }
 225:
                        romeon = _closure3_slot13;
                        yankee = romeon.get;
                        offset = yankee.bind(romeon)();
 238:
                        entity['positionOffset'] = offset;
                        entity = zuuluu.bind(option)(entity);
                        backup = entity.x;
                        romeon = entity.y;
                        entity = {};
                        entity['width'] = report;
                        entity['height'] = tangon;
                        offset = _closure1_slot0;
                        zuuluu = _closure1_slot2;
                        option = 15;
                        option = zuuluu[option];
                        sizing = offset.bind(oscard)(option);
                        kiloes = sizing.withTiming;
                        yankee = _closure3_slot14;
                        option = yankee.get;
                        foxtra = option.bind(yankee)();
                        yankee = _closure1_slot16;
                        option = 'animate-never';
                        option = kiloes.bind(sizing)(foxtra, yankee, option);
                        entity['opacity'] = option;
                        option = {};
                        foxtra = 10;
                        zuuluu = zuuluu[foxtra];
                        yankee = offset.bind(oscard)(zuuluu);
                        offset = yankee.withSpring;
                        kiloes = _closure3_slot13;
                        zuuluu = kiloes.get;
                        zuuluu = zuuluu.bind(kiloes)();
                        zuuluu = zuuluu.active;
                        if(zuuluu) { _fun00004_ip = 374; continue _fun00003 }
 368:
                        zuuluu = _closure1_slot15;
                        _fun00004_ip = 378; continue _fun00003;
 374:
                        zuuluu = _closure1_slot8;
 378:
                        zuuluu = offset.bind(yankee)(backup, zuuluu);
                        option['translateX'] = zuuluu;
                        zuuluu = new Array(2);
                        zuuluu[0] = option;
                        option = {};
                        yankee = _closure1_slot0;
                        offset = _closure1_slot2;
                        offset = offset[foxtra];
                        yankee = yankee.bind(oscard)(offset);
                        offset = yankee.withSpring;
                        foxtra = _closure3_slot13;
                        verify = foxtra.get;
                        verify = verify.bind(foxtra)();
                        verify = verify.active;
                        if(verify) { _fun00004_ip = 449; continue _fun00003 }
 443:
                        verify = _closure1_slot15;
                        _fun00004_ip = 453; continue _fun00003;
 449:
                        verify = _closure1_slot8;
 453:
                        verify = offset.bind(yankee)(romeon, verify);
                        option['translateY'] = verify;
                        zuuluu[1] = option;
                        entity['transform'] = zuuluu;
                        zuuluu = _closure1_slot0;
                        michal = _closure1_slot2;
                        michal = michal[golfie];
                        zuuluu = zuuluu.bind(oscard)(michal);
                        michal = zuuluu.getVoicePanelPIPBorderRadius;
                        michal = michal.bind(zuuluu)(report, tangon);
                        entity['borderRadius'] = michal;
                        return entity;
                    }
                };
                kiloes = {};
                kiloes['pipState'] = report;
                vacuum = 14;
                record = foxtra[vacuum];
                record = oscard.bind(golfie)(record);
                record = record.getClampedPIPPosition;
                kiloes['getClampedPIPPosition'] = record;
                kiloes['wrapperDimensions'] = echoed;
                kiloes['windowDimensions'] = update;
                kiloes['safeArea'] = source;
                kiloes['pipAvoidanceSpecs'] = config;
                kiloes['initialGestureOffset'] = ctrled;
                config = 15;
                config = foxtra[config];
                config = oscard.bind(golfie)(config);
                config = config.withTiming;
                kiloes['withTiming'] = config;
                kiloes['opacity'] = sequen;
                sequen = _closure1_slot16;
                kiloes['OPACITY_TIMING'] = sequen;
                sequen = 10;
                sequen = foxtra[sequen];
                sequen = oscard.bind(golfie)(sequen);
                sequen = sequen.withSpring;
                kiloes['withSpring'] = sequen;
                sequen = _closure1_slot8;
                kiloes['DRAWER_SPRING_PHYSICS'] = sequen;
                sequen = _closure1_slot15;
                kiloes['LAYOUT_PHYSICS'] = sequen;
                sequen = foxtra[vacuum];
                sequen = oscard.bind(golfie)(sequen);
                sequen = sequen.getVoicePanelPIPBorderRadius;
                kiloes['getVoicePanelPIPBorderRadius'] = sequen;
                yankee['__closure'] = kiloes;
                kiloes = 15958692806993.0;
                yankee['__workletHash'] = kiloes;
                kiloes = _closure1_slot20;
                yankee['__initData'] = kiloes;
                romeon = romeon.bind(backup)(yankee);
                offset = foxtra[offset];
                backup = oscard.bind(golfie)(offset);
                yankee = backup.useAnimatedStyle;
                offset = function() { // Original name: U
                    entity = _closure3_slot12;
                    report = entity.width;
                    tangon = entity.height;
                    entity = {};
                    entity['width'] = report;
                    entity['height'] = tangon;
                    oscard = _closure1_slot0;
                    zuuluu = _closure1_slot2;
                    michal = 14;
                    zuuluu = zuuluu[michal];
                    michal = undefined;
                    zuuluu = oscard.bind(michal)(zuuluu);
                    michal = zuuluu.getVoicePanelPIPBorderRadius;
                    michal = michal.bind(zuuluu)(report, tangon);
                    entity['borderRadius'] = michal;
                    return entity;
                };
                kiloes = {};
                kiloes['pipState'] = report;
                vacuum = foxtra[vacuum];
                vacuum = oscard.bind(golfie)(vacuum);
                vacuum = vacuum.getVoicePanelPIPBorderRadius;
                kiloes['getVoicePanelPIPBorderRadius'] = vacuum;
                offset['__closure'] = kiloes;
                kiloes = 1914976453427.0;
                offset['__workletHash'] = kiloes;
                kiloes = _closure1_slot21;
                offset['__initData'] = kiloes;
                yankee = yankee.bind(backup)(offset);
                kiloes = _closure1_slot4;
                backup = kiloes.useMemo;
                vacuum = report.width;
                offset = new Array(2);
                offset[0] = vacuum;
                report = report.height;
                offset[1] = report;
                report = function() {
                    entity = _closure1_slot19;
                    zuuluu = entity.pipContentWrapper;
                    entity = new Array(3);
                    entity[0] = zuuluu;
                    zuuluu = {};
                    tangon = _closure3_slot12;
                    report = tangon.width;
                    zuuluu['width'] = report;
                    report = tangon.height;
                    zuuluu['height'] = report;
                    golfie = _closure1_slot0;
                    oscard = _closure1_slot2;
                    report = 14;
                    oscard = oscard[report];
                    report = undefined;
                    golfie = golfie.bind(report)(oscard);
                    oscard = golfie.getVoicePanelPIPBorderRadius;
                    report = tangon.width;
                    tangon = tangon.height;
                    tangon = oscard.bind(golfie)(report, tangon);
                    zuuluu['borderRadius'] = tangon;
                    entity[1] = zuuluu;
                    michal = _closure1_slot19;
                    michal = michal.inAppElevationShadow;
                    entity[2] = michal;
                    return entity;
                };
                report = backup.bind(kiloes)(report, offset);
                kiloes = _closure1_slot4;
                backup = kiloes.useCallback;
                offset = new Array(5);
                offset[0] = ctrled;
                offset[1] = source;
                offset[2] = update;
                offset[3] = echoed;
                offset[4] = tangon;
                tangon = function() {
                    foxtra = _closure1_slot0;
                    offset = _closure1_slot2;
                    romeon = 16;
                    michal = offset[romeon];
                    verify = undefined;
                    michal = foxtra.bind(verify)(michal);
                    zuuluu = michal.Gesture;
                    michal = zuuluu.Pan;
                    zuuluu = michal.bind(zuuluu)();
                    michal = zuuluu.enabled;
                    report = true;
                    zuuluu = michal.bind(zuuluu)(report);
                    michal = zuuluu.manualActivation;
                    report = michal.bind(zuuluu)(report);
                    zuuluu = report.maxPointers;
                    michal = 1;
                    report = zuuluu.bind(report)(michal);
                    zuuluu = report.shouldCancelWhenOutside;
                    michal = false;
                    report = zuuluu.bind(report)(michal);
                    zuuluu = report.onBegin;
                    michal = function(argFoo) { // Original name: c
                        entity = argFoo;
                        report = entity.absoluteX;
                        tangon = entity.absoluteY;
                        zuuluu = _closure3_slot13;
                        michal = zuuluu.set;
                        entity = {'x': 0, 'y': 0, 'absoluteX': null, 'absoluteY': null, 'active': false, 'pressed': true};
                        entity['absoluteX'] = report;
                        entity['absoluteY'] = tangon;
                        entity = michal.bind(zuuluu)(entity);
                        entity = undefined;
                        return entity;
                    };
                    golfie = {};
                    oscard = _closure3_slot13;
                    golfie['initialGestureOffset'] = oscard;
                    michal['__closure'] = golfie;
                    golfie = 4684366251999.0;
                    michal['__workletHash'] = golfie;
                    golfie = _closure1_slot28;
                    michal['__initData'] = golfie;
                    report = zuuluu.bind(report)(michal);
                    zuuluu = report.onTouchesUp;
                    michal = function() { // Original name: l
                        zuuluu = _closure1_slot1;
                        michal = _closure1_slot2;
                        entity = 17;
                        michal = michal[entity];
                        entity = undefined;
                        tangon = zuuluu.bind(entity)(michal);
                        zuuluu = _closure3_slot13;
                        michal = {'active': false, 'pressed': false};
                        michal = tangon.bind(entity)(zuuluu, michal);
                        return entity;
                    };
                    yankee = {};
                    option = _closure1_slot1;
                    golfie = 17;
                    backup = offset[golfie];
                    backup = option.bind(verify)(backup);
                    yankee['updateSharedValueIfChanged'] = backup;
                    yankee['initialGestureOffset'] = oscard;
                    michal['__closure'] = yankee;
                    yankee = 11771025649835.0;
                    michal['__workletHash'] = yankee;
                    yankee = _closure1_slot27;
                    michal['__initData'] = yankee;
                    report = zuuluu.bind(report)(michal);
                    zuuluu = report.onTouchesMove;
                    michal = function(argFoo, argBar) { // Original name: u
                        _fun00005: for(var _fun00006_ip = 0; ; ) switch(_fun00006_ip) {
 0:
                            report = argFoo;
                            tangon = argBar;
                            oscard = report.state;
                            golfie = _closure1_slot0;
                            zuuluu = _closure1_slot2;
                            entity = 16;
                            zuuluu = zuuluu[entity];
                            entity = undefined;
                            zuuluu = golfie.bind(entity)(zuuluu);
                            zuuluu = zuuluu.State;
                            zuuluu = zuuluu.BEGAN;
                            if(!(oscard === zuuluu)) { _fun00006_ip = 345; continue _fun00005 }
 55:
                            golfie = _closure3_slot13;
                            oscard = golfie.get;
                            oscard = oscard.bind(golfie)();
                            oscard = oscard.active;
                            if(oscard) { _fun00006_ip = 345; continue _fun00005 }
 83:
                            oscard = report.changedTouches;
                            report = 0;
                            report = oscard[report];
                            option = report.absoluteY;
                            verify = report.absoluteX;
                            oscard = global;
                            offset = oscard.Math;
                            golfie = offset.abs;
                            yankee = _closure3_slot13;
                            report = yankee.get;
                            report = report.bind(yankee)();
                            report = report.absoluteX;
                            report = report - verify;
                            report = golfie.bind(offset)(report);
                            golfie = 10;
                            report = report > golfie;
                            if(report) { _fun00006_ip = 203; continue _fun00005 }
 159:
                            yankee = oscard.Math;
                            offset = yankee.abs;
                            romeon = _closure3_slot13;
                            oscard = romeon.get;
                            oscard = oscard.bind(romeon)();
                            oscard = oscard.absoluteY;
                            oscard = oscard - option;
                            oscard = offset.bind(yankee)(oscard);
                            report = oscard > golfie;
 203:
                            if(!report) { _fun00006_ip = 345; continue _fun00005 }
 209:
                            golfie = _closure3_slot13;
                            oscard = golfie.set;
                            report = {'x': 0, 'y': 0, 'absoluteX': null, 'absoluteY': null, 'pressed': true, 'active': true};
                            report['absoluteX'] = verify;
                            report['absoluteY'] = option;
                            report = oscard.bind(golfie)(report);
                            report = _closure1_slot1;
                            oscard = _closure1_slot2;
                            golfie = 17;
                            golfie = oscard[golfie];
                            option = report.bind(entity)(golfie);
                            golfie = _closure3_slot10;
                            zuuluu = {'gestureActive': true, 'x': 0, 'y': 0};
                            zuuluu = option.bind(entity)(golfie, zuuluu);
                            zuuluu = tangon.activate;
                            zuuluu = zuuluu.bind(tangon)();
                            zuuluu = _closure1_slot0;
                            michal = 13;
                            michal = oscard[michal];
                            tangon = zuuluu.bind(entity)(michal);
                            zuuluu = tangon.runOnJS;
                            michal = 18;
                            michal = oscard[michal];
                            michal = report.bind(entity)(michal);
                            michal = zuuluu.bind(tangon)(michal);
                            michal = michal.bind(entity)();
 345:
                            return entity;
                        }
                    };
                    yankee = {};
                    romeon = offset[romeon];
                    romeon = foxtra.bind(verify)(romeon);
                    romeon = romeon.State;
                    yankee['State'] = romeon;
                    yankee['initialGestureOffset'] = oscard;
                    romeon = 10;
                    yankee['MIN_GESTURE_START'] = romeon;
                    romeon = offset[golfie];
                    romeon = option.bind(verify)(romeon);
                    yankee['updateSharedValueIfChanged'] = romeon;
                    backup = _closure3_slot10;
                    yankee['wrapperOffset'] = backup;
                    romeon = 13;
                    sizing = offset[romeon];
                    sizing = foxtra.bind(verify)(sizing);
                    sizing = sizing.runOnJS;
                    yankee['runOnJS'] = sizing;
                    sizing = 18;
                    sizing = offset[sizing];
                    sizing = option.bind(verify)(sizing);
                    yankee['triggerIOSHaptic'] = sizing;
                    michal['__closure'] = yankee;
                    yankee = 16714994610987.0;
                    michal['__workletHash'] = yankee;
                    yankee = _closure1_slot26;
                    michal['__initData'] = yankee;
                    report = zuuluu.bind(report)(michal);
                    zuuluu = report.onChange;
                    michal = function(argFoo) { // Original name: s
                        entity = argFoo;
                        golfie = entity.absoluteX;
                        oscard = entity.absoluteY;
                        zuuluu = _closure1_slot1;
                        michal = _closure1_slot2;
                        entity = 17;
                        michal = michal[entity];
                        entity = undefined;
                        tangon = zuuluu.bind(entity)(michal);
                        zuuluu = _closure3_slot13;
                        michal = {};
                        report = zuuluu.get;
                        report = report.bind(zuuluu)();
                        report = report.absoluteX;
                        report = golfie - report;
                        michal['x'] = report;
                        report = zuuluu.get;
                        report = report.bind(zuuluu)();
                        report = report.absoluteY;
                        report = oscard - report;
                        michal['y'] = report;
                        michal = tangon.bind(entity)(zuuluu, michal);
                        return entity;
                    };
                    yankee = {};
                    sizing = offset[golfie];
                    sizing = option.bind(verify)(sizing);
                    yankee['updateSharedValueIfChanged'] = sizing;
                    yankee['initialGestureOffset'] = oscard;
                    michal['__closure'] = yankee;
                    yankee = 7822444262980.0;
                    michal['__workletHash'] = yankee;
                    yankee = _closure1_slot25;
                    michal['__initData'] = yankee;
                    report = zuuluu.bind(report)(michal);
                    zuuluu = report.onEnd;
                    michal = function(argFoo) { // Original name: o
                        entity = argFoo;
                        yankee = entity.velocityX;
                        offset = entity.velocityY;
                        verify = entity.absoluteX;
                        michal = entity.absoluteY;
                        zuuluu = _closure1_slot0;
                        oscard = _closure1_slot2;
                        entity = 14;
                        report = oscard[entity];
                        entity = undefined;
                        option = zuuluu.bind(entity)(report);
                        golfie = option.calculatePIPPositionFromVelocity;
                        report = {};
                        report['velocityX'] = yankee;
                        report['velocityY'] = offset;
                        report['absoluteX'] = verify;
                        report['absoluteY'] = michal;
                        offset = _closure3_slot8;
                        verify = offset.get;
                        verify = verify.bind(offset)();
                        report['windowDimensions'] = verify;
                        offset = _closure3_slot4;
                        verify = offset.get;
                        verify = verify.bind(offset)();
                        report['safeArea'] = verify;
                        report = golfie.bind(option)(report);
                        yankee = report.pipX;
                        offset = report.pipY;
                        report = _closure1_slot1;
                        tangon = 17;
                        golfie = oscard[tangon];
                        verify = report.bind(entity)(golfie);
                        option = _closure3_slot9;
                        golfie = {};
                        golfie['pipX'] = yankee;
                        golfie['pipY'] = offset;
                        golfie = verify.bind(entity)(option, golfie);
                        tangon = oscard[tangon];
                        golfie = report.bind(entity)(tangon);
                        tangon = _closure3_slot10;
                        michal = {};
                        option = false;
                        michal['gestureActive'] = option;
                        michal = golfie.bind(entity)(tangon, michal);
                        michal = 13;
                        michal = oscard[michal];
                        tangon = zuuluu.bind(entity)(michal);
                        zuuluu = tangon.runOnJS;
                        michal = 19;
                        michal = oscard[michal];
                        michal = report.bind(entity)(michal);
                        michal = michal.updateSourceTrackingView;
                        michal = zuuluu.bind(tangon)(michal);
                        michal = michal.bind(entity)();
                        return entity;
                    };
                    yankee = {};
                    sizing = 14;
                    sizing = offset[sizing];
                    sizing = foxtra.bind(verify)(sizing);
                    sizing = sizing.calculatePIPPositionFromVelocity;
                    yankee['calculatePIPPositionFromVelocity'] = sizing;
                    sizing = _closure3_slot8;
                    yankee['windowDimensions'] = sizing;
                    sizing = _closure3_slot4;
                    yankee['safeArea'] = sizing;
                    sizing = offset[golfie];
                    sizing = option.bind(verify)(sizing);
                    yankee['updateSharedValueIfChanged'] = sizing;
                    kiloes = _closure3_slot9;
                    yankee['wrapperDimensions'] = kiloes;
                    yankee['wrapperOffset'] = backup;
                    romeon = offset[romeon];
                    romeon = foxtra.bind(verify)(romeon);
                    romeon = romeon.runOnJS;
                    yankee['runOnJS'] = romeon;
                    romeon = 19;
                    romeon = offset[romeon];
                    romeon = option.bind(verify)(romeon);
                    romeon = romeon.updateSourceTrackingView;
                    yankee['updateSourceTrackingView'] = romeon;
                    michal['__closure'] = yankee;
                    yankee = 11935428351350.0;
                    michal['__workletHash'] = yankee;
                    yankee = _closure1_slot24;
                    michal['__initData'] = yankee;
                    report = zuuluu.bind(report)(michal);
                    zuuluu = report.onTouchesCancelled;
                    michal = function() { // Original name: n
                        zuuluu = _closure1_slot1;
                        michal = _closure1_slot2;
                        entity = 17;
                        michal = michal[entity];
                        entity = undefined;
                        tangon = zuuluu.bind(entity)(michal);
                        zuuluu = _closure3_slot13;
                        michal = {'active': false, 'pressed': false};
                        michal = tangon.bind(entity)(zuuluu, michal);
                        return entity;
                    };
                    yankee = {};
                    romeon = offset[golfie];
                    romeon = option.bind(verify)(romeon);
                    yankee['updateSharedValueIfChanged'] = romeon;
                    yankee['initialGestureOffset'] = oscard;
                    michal['__closure'] = yankee;
                    yankee = 4606005866023.0;
                    michal['__workletHash'] = yankee;
                    yankee = _closure1_slot23;
                    michal['__initData'] = yankee;
                    zuuluu = zuuluu.bind(report)(michal);
                    michal = zuuluu.onFinalize;
                    entity = function() { // Original name: t
                        zuuluu = _closure1_slot1;
                        michal = _closure1_slot2;
                        entity = 17;
                        michal = michal[entity];
                        entity = undefined;
                        tangon = zuuluu.bind(entity)(michal);
                        zuuluu = _closure3_slot13;
                        michal = {'active': false, 'pressed': false};
                        michal = tangon.bind(entity)(zuuluu, michal);
                        return entity;
                    };
                    report = {};
                    golfie = offset[golfie];
                    golfie = option.bind(verify)(golfie);
                    report['updateSharedValueIfChanged'] = golfie;
                    report['initialGestureOffset'] = oscard;
                    entity['__closure'] = report;
                    report = 5443656412422.0;
                    entity['__workletHash'] = report;
                    tangon = _closure1_slot22;
                    entity['__initData'] = tangon;
                    entity = michal.bind(zuuluu)(entity);
                    return entity;
                };
                offset = backup.bind(kiloes)(tangon, offset);
                var _closure3_slot15 = offset;
                kiloes = _closure1_slot4;
                backup = kiloes.useMemo;
                tangon = new Array(7);
                tangon[0] = result;
                tangon[1] = output;
                tangon[2] = verify;
                tangon[3] = sizing;
                tangon[4] = entity;
                tangon[5] = option;
                tangon[6] = offset;
                entity = function() {
                    romeon = _closure1_slot0;
                    foxtra = _closure1_slot2;
                    golfie = 16;
                    entity = foxtra[golfie];
                    oscard = undefined;
                    entity = romeon.bind(oscard)(entity);
                    report = entity.Gesture;
                    tangon = report.Exclusive;
                    entity = foxtra[golfie];
                    entity = romeon.bind(oscard)(entity);
                    zuuluu = entity.Gesture;
                    entity = zuuluu.Tap;
                    offset = entity.bind(zuuluu)();
                    option = offset.enabled;
                    backup = _closure3_slot0;
                    zuuluu = _closure1_slot11;
                    zuuluu = zuuluu.IN_APP;
                    zuuluu = backup !== zuuluu;
                    option = option.bind(offset)(zuuluu);
                    zuuluu = option.maxDistance;
                    offset = 30;
                    kiloes = zuuluu.bind(option)(offset);
                    option = kiloes.onStart;
                    zuuluu = function() { // Original name: o
                        zuuluu = _closure1_slot0;
                        michal = _closure1_slot2;
                        entity = 13;
                        michal = michal[entity];
                        entity = undefined;
                        tangon = zuuluu.bind(entity)(michal);
                        zuuluu = tangon.runOnJS;
                        michal = _closure3_slot5;
                        zuuluu = zuuluu.bind(tangon)(michal);
                        michal = null;
                        michal = zuuluu.bind(entity)(michal);
                        return entity;
                    };
                    sizing = {};
                    yankee = 13;
                    output = foxtra[yankee];
                    output = romeon.bind(oscard)(output);
                    output = output.runOnJS;
                    sizing['runOnJS'] = output;
                    output = _closure3_slot5;
                    sizing['setFocused'] = output;
                    zuuluu['__closure'] = sizing;
                    sizing = 10703348418884.0;
                    zuuluu['__workletHash'] = sizing;
                    sizing = _closure1_slot29;
                    zuuluu['__initData'] = sizing;
                    kiloes = option.bind(kiloes)(zuuluu);
                    option = kiloes.numberOfTaps;
                    zuuluu = 2;
                    zuuluu = option.bind(kiloes)(zuuluu);
                    golfie = foxtra[golfie];
                    golfie = romeon.bind(oscard)(golfie);
                    option = golfie.Gesture;
                    golfie = option.Tap;
                    kiloes = golfie.bind(option)();
                    option = kiloes.enabled;
                    golfie = true;
                    option = option.bind(kiloes)(golfie);
                    golfie = option.maxDistance;
                    option = golfie.bind(option)(offset);
                    golfie = option.onStart;
                    michal = function() { // Original name: n
                        _fun00007: for(var _fun00008_ip = 0; ; ) switch(_fun00008_ip) {
 0:
                            tangon = _closure3_slot0;
                            zuuluu = _closure1_slot11;
                            zuuluu = zuuluu.IN_APP;
                            if(!(tangon !== zuuluu)) { _fun00008_ip = 140; continue _fun00007 }
 24:
                            tangon = _closure3_slot1;
                            zuuluu = tangon.get;
                            zuuluu = zuuluu.bind(tangon)();
                            tangon = zuuluu.mode;
                            zuuluu = _closure1_slot10;
                            zuuluu = zuuluu.HIDDEN;
                            if(!(tangon !== zuuluu)) { _fun00008_ip = 98; continue _fun00007 }
 56:
                            report = _closure1_slot0;
                            tangon = _closure1_slot2;
                            zuuluu = 13;
                            zuuluu = tangon[zuuluu];
                            tangon = undefined;
                            oscard = report.bind(tangon)(zuuluu);
                            report = oscard.runOnJS;
                            zuuluu = _closure3_slot2;
                            zuuluu = report.bind(oscard)(zuuluu);
                            zuuluu = zuuluu.bind(tangon)();
                            _fun00008_ip = 191; continue _fun00007;
 98:
                            report = _closure1_slot0;
                            tangon = _closure1_slot2;
                            zuuluu = 13;
                            zuuluu = tangon[zuuluu];
                            tangon = undefined;
                            oscard = report.bind(tangon)(zuuluu);
                            report = oscard.runOnJS;
                            zuuluu = _closure3_slot7;
                            zuuluu = report.bind(oscard)(zuuluu);
                            zuuluu = zuuluu.bind(tangon)();
                            _fun00008_ip = 191; continue _fun00007;
 140:
                            report = _closure1_slot0;
                            tangon = _closure1_slot2;
                            zuuluu = 13;
                            tangon = tangon[zuuluu];
                            zuuluu = undefined;
                            report = report.bind(zuuluu)(tangon);
                            tangon = report.runOnJS;
                            michal = _closure3_slot6;
                            michal = tangon.bind(report)(michal);
                            entity = _closure1_slot9;
                            entity = entity.PANEL;
                            entity = michal.bind(zuuluu)(entity);
 191:
                            entity = undefined;
                            return entity;
                        }
                    };
                    offset = {};
                    offset['pipMode'] = backup;
                    backup = _closure1_slot11;
                    offset['VoicePanelPIPModes'] = backup;
                    yankee = foxtra[yankee];
                    yankee = romeon.bind(oscard)(yankee);
                    yankee = yankee.runOnJS;
                    offset['runOnJS'] = yankee;
                    yankee = _closure3_slot6;
                    offset['setMode'] = yankee;
                    yankee = _closure1_slot9;
                    offset['VoicePanelModes'] = yankee;
                    yankee = _closure3_slot1;
                    offset['controlsSpecs'] = yankee;
                    yankee = _closure1_slot10;
                    offset['VoicePanelControlsModes'] = yankee;
                    yankee = _closure3_slot7;
                    offset['showControls'] = yankee;
                    yankee = _closure3_slot2;
                    offset['hideControls'] = yankee;
                    michal['__closure'] = offset;
                    offset = 9532493963151.0;
                    michal['__workletHash'] = offset;
                    verify = _closure1_slot30;
                    michal['__initData'] = verify;
                    michal = golfie.bind(option)(michal);
                    entity = _closure3_slot15;
                    entity = entity.bind(oscard)();
                    entity = tangon.bind(report)(zuuluu, michal, entity);
                    return entity;
                };
                tangon = backup.bind(kiloes)(entity, tangon);
                entity = 20;
                entity = foxtra[entity];
                foxtra = oscard.bind(golfie)(entity);
                golfie = foxtra.useStateFromStoresObject;
                entity = _closure1_slot6;
                oscard = new Array(1);
                oscard[0] = entity;
                entity = function() {
                    _fun00009: for(var _fun00010_ip = 0; ; ) switch(_fun00010_ip) {
 0:
                        michal = _closure1_slot6;
                        entity = michal.getCurrentEmbeddedActivity;
                        oscard = entity.bind(michal)();
                        michal = _closure1_slot0;
                        entity = _closure1_slot2;
                        tangon = 21;
                        entity = entity[tangon];
                        report = undefined;
                        golfie = michal.bind(report)(entity);
                        michal = golfie.getEmbeddedActivityLocationStartingChannelId;
                        option = null;
                        verify = option == oscard;
                        entity = undefined;
                        if(verify) { _fun00010_ip = 61; continue _fun00009 }
 56:
                        entity = oscard.location;
 61:
                        verify = michal.bind(golfie)(entity);
                        michal = _closure1_slot0;
                        entity = _closure1_slot2;
                        entity = entity[tangon];
                        tangon = michal.bind(report)(entity);
                        michal = tangon.getEmbeddedActivityLocationChannelId;
                        golfie = option == oscard;
                        entity = undefined;
                        if(golfie) { _fun00010_ip = 103; continue _fun00009 }
 98:
                        entity = oscard.location;
 103:
                        golfie = michal.bind(tangon)(entity);
                        entity = {};
                        michal = _closure3_slot11;
                        michal = verify !== michal;
                        if(!michal) { _fun00010_ip = 132; continue _fun00009 }
 124:
                        tangon = _closure3_slot11;
                        michal = golfie !== tangon;
 132:
                        entity['currentEmbeddedActivityIsNotInCurrentChannel'] = michal;
                        tangon = option != oscard;
                        michal = null;
                        if(!tangon) { _fun00010_ip = 247; continue _fun00009 }
 146:
                        tangon = oscard.location;
                        golfie = tangon.kind;
                        verify = _closure1_slot0;
                        offset = _closure1_slot2;
                        tangon = 22;
                        tangon = offset[tangon];
                        tangon = verify.bind(report)(tangon);
                        tangon = tangon.EmbeddedActivityLocationKind;
                        tangon = tangon.CONTEXTLESS;
                        michal = null;
                        if(!(golfie === tangon)) { _fun00010_ip = 247; continue _fun00009 }
 194:
                        tangon = _closure1_slot0;
                        golfie = _closure1_slot2;
                        zuuluu = 23;
                        zuuluu = golfie[zuuluu];
                        report = tangon.bind(report)(zuuluu);
                        tangon = report.getEmbeddedActivityParticipantId;
                        zuuluu = {};
                        golfie = oscard.applicationId;
                        zuuluu['applicationId'] = golfie;
                        oscard = oscard.compositeInstanceId;
                        zuuluu['instanceId'] = oscard;
                        michal = tangon.bind(report)(zuuluu);
 247:
                        entity['contextlessEmbeddedActivityParticipantId'] = michal;
                        return entity;
                    }
                };
                entity = golfie.bind(foxtra)(oscard, entity);
                golfie = entity.contextlessEmbeddedActivityParticipantId;
                var _closure3_slot16 = golfie;
                oscard = entity.currentEmbeddedActivityIsNotInCurrentChannel;
                var _closure3_slot17 = oscard;
                entity = {};
                entity['multiPIPWrapperStyles'] = romeon;
                entity['mainPIPWrapperStyles'] = yankee;
                entity['secondaryPIPWrapperStyles'] = report;
                entity['mainPIPGesture'] = tangon;
                report = _closure1_slot4;
                tangon = report.useMemo;
                zuuluu = new Array(5);
                zuuluu[0] = offset;
                zuuluu[1] = verify;
                zuuluu[2] = option;
                zuuluu[3] = golfie;
                zuuluu[4] = oscard;
                michal = function() {
                    yankee = _closure1_slot0;
                    romeon = _closure1_slot2;
                    entity = 16;
                    michal = romeon[entity];
                    report = undefined;
                    michal = yankee.bind(report)(michal);
                    tangon = michal.Gesture;
                    zuuluu = tangon.Exclusive;
                    entity = romeon[entity];
                    entity = yankee.bind(report)(entity);
                    michal = entity.Gesture;
                    entity = michal.Tap;
                    oscard = entity.bind(michal)();
                    michal = oscard.maxDistance;
                    entity = 30;
                    golfie = michal.bind(oscard)(entity);
                    oscard = golfie.onStart;
                    michal = function() { // Original name: t
                        _fun00011: for(var _fun00012_ip = 0; ; ) switch(_fun00012_ip) {
 0:
                            michal = _closure3_slot17;
                            if(michal) { _fun00012_ip = 111; continue _fun00011 }
 10:
                            zuuluu = _closure3_slot16;
                            michal = null;
                            if(!(michal != zuuluu)) { _fun00012_ip = 195; continue _fun00011 }
 23:
                            zuuluu = _closure1_slot0;
                            report = _closure1_slot2;
                            michal = 13;
                            golfie = report[michal];
                            tangon = undefined;
                            verify = zuuluu.bind(tangon)(golfie);
                            option = verify.runOnJS;
                            golfie = _closure3_slot6;
                            golfie = option.bind(verify)(golfie);
                            oscard = _closure1_slot9;
                            oscard = oscard.PANEL;
                            oscard = golfie.bind(tangon)(oscard);
                            michal = report[michal];
                            report = zuuluu.bind(tangon)(michal);
                            zuuluu = report.runOnJS;
                            michal = _closure3_slot5;
                            zuuluu = zuuluu.bind(report)(michal);
                            michal = _closure3_slot16;
                            michal = zuuluu.bind(tangon)(michal);
                            _fun00012_ip = 195; continue _fun00011;
 111:
                            tangon = _closure1_slot0;
                            report = _closure1_slot2;
                            michal = 13;
                            golfie = report[michal];
                            zuuluu = undefined;
                            verify = tangon.bind(zuuluu)(golfie);
                            option = verify.runOnJS;
                            golfie = _closure3_slot6;
                            golfie = option.bind(verify)(golfie);
                            oscard = _closure1_slot9;
                            oscard = oscard.PIP;
                            oscard = golfie.bind(zuuluu)(oscard);
                            michal = report[michal];
                            tangon = tangon.bind(zuuluu)(michal);
                            michal = tangon.runOnJS;
                            entity = _closure3_slot5;
                            michal = michal.bind(tangon)(entity);
                            entity = null;
                            entity = michal.bind(zuuluu)(entity);
 195:
                            oscard = _closure1_slot0;
                            golfie = _closure1_slot2;
                            entity = 13;
                            zuuluu = golfie[entity];
                            entity = undefined;
                            report = oscard.bind(entity)(zuuluu);
                            tangon = report.runOnJS;
                            zuuluu = 24;
                            zuuluu = golfie[zuuluu];
                            zuuluu = oscard.bind(entity)(zuuluu);
                            zuuluu = zuuluu.updateActivityPanelMode;
                            zuuluu = tangon.bind(report)(zuuluu);
                            michal = _closure1_slot12;
                            michal = michal.PANEL;
                            michal = zuuluu.bind(entity)(michal);
                            return entity;
                        }
                    };
                    verify = {};
                    offset = _closure3_slot17;
                    verify['currentEmbeddedActivityIsNotInCurrentChannel'] = offset;
                    offset = 13;
                    offset = romeon[offset];
                    offset = yankee.bind(report)(offset);
                    offset = offset.runOnJS;
                    verify['runOnJS'] = offset;
                    offset = _closure3_slot6;
                    verify['setMode'] = offset;
                    offset = _closure1_slot9;
                    verify['VoicePanelModes'] = offset;
                    offset = _closure3_slot5;
                    verify['setFocused'] = offset;
                    offset = _closure3_slot16;
                    verify['contextlessEmbeddedActivityParticipantId'] = offset;
                    offset = 24;
                    offset = romeon[offset];
                    offset = yankee.bind(report)(offset);
                    offset = offset.updateActivityPanelMode;
                    verify['updateActivityPanelMode'] = offset;
                    offset = _closure1_slot12;
                    verify['ActivityPanelModes'] = offset;
                    michal['__closure'] = verify;
                    verify = 16364990619904.0;
                    michal['__workletHash'] = verify;
                    option = _closure1_slot31;
                    michal['__initData'] = option;
                    michal = oscard.bind(golfie)(michal);
                    entity = _closure3_slot15;
                    entity = entity.bind(report)();
                    entity = zuuluu.bind(tangon)(michal, entity);
                    return entity;
                };
                michal = tangon.bind(report)(michal, zuuluu);
                entity['secondaryPIPGesture'] = michal;
                return entity;
            };
            zuuluu = zuuluu.bind(tangon)(golfie);
            golfie = zuuluu.multiPIPWrapperStyles;
            ctrled = zuuluu.mainPIPWrapperStyles;
            romeon = zuuluu.secondaryPIPWrapperStyles;
            source = zuuluu.mainPIPGesture;
            output = zuuluu.secondaryPIPGesture;
            zuuluu = 25;
            zuuluu = backup[zuuluu];
            zuuluu = verify.bind(tangon)(zuuluu);
            zuuluu = zuuluu.bind(tangon)(option);
            sizing = zuuluu.pushToTalk;
            zuuluu = 13;
            zuuluu = backup[zuuluu];
            verify = foxtra.bind(tangon)(zuuluu);
            option = verify.useAnimatedStyle;
            zuuluu = function() { // Original name: t
                entity = {};
                tangon = _closure1_slot0;
                zuuluu = _closure1_slot2;
                michal = 14;
                zuuluu = zuuluu[michal];
                michal = undefined;
                report = tangon.bind(michal)(zuuluu);
                tangon = report.getVoicePanelPIPBorderRadius;
                michal = _closure2_slot1;
                zuuluu = michal.width;
                michal = michal.height;
                michal = tangon.bind(report)(zuuluu, michal);
                entity['borderRadius'] = michal;
                return entity;
            };
            offset = {};
            yankee = 14;
            yankee = backup[yankee];
            yankee = foxtra.bind(tangon)(yankee);
            yankee = yankee.getVoicePanelPIPBorderRadius;
            offset['getVoicePanelPIPBorderRadius'] = yankee;
            offset['pipState'] = oscard;
            zuuluu['__closure'] = offset;
            offset = 9598016909682.0;
            zuuluu['__workletHash'] = offset;
            offset = _closure1_slot32;
            zuuluu['__initData'] = offset;
            backup = option.bind(verify)(zuuluu);
            verify = _closure1_slot4;
            option = verify.useMemo;
            zuuluu = new Array(1);
            zuuluu[0] = michal;
            michal = function() {
                entity = {'accessible': true, 'accessibilityLabel': null, 'accessibilityRole': 'button'};
                oscard = _closure1_slot0;
                golfie = _closure1_slot2;
                michal = 26;
                zuuluu = golfie[michal];
                report = undefined;
                zuuluu = oscard.bind(report)(zuuluu);
                tangon = zuuluu.intl;
                zuuluu = tangon.string;
                michal = golfie[michal];
                michal = oscard.bind(report)(michal);
                michal = michal.t;
                michal = michal.oN8bqa;
                michal = zuuluu.bind(tangon)(michal);
                entity['accessibilityLabel'] = michal;
                zuuluu = {};
                michal = 'activate';
                zuuluu['name'] = michal;
                michal = new Array(1);
                michal[0] = zuuluu;
                entity['accessibilityActions'] = michal;
                michal = function() { // Original name: onAccessibilityAction
                    zuuluu = _closure2_slot0;
                    entity = _closure1_slot9;
                    michal = entity.PANEL;
                    entity = undefined;
                    michal = zuuluu.bind(entity)(michal);
                    return entity;
                };
                entity['onAccessibilityAction'] = michal;
                return entity;
            };
            kiloes = option.bind(verify)(michal, zuuluu);
            verify = _closure1_slot4;
            option = verify.useMemo;
            zuuluu = function() {
                entity = {};
                michal = true;
                entity['accessible'] = michal;
                oscard = _closure1_slot0;
                golfie = _closure1_slot2;
                michal = 26;
                zuuluu = golfie[michal];
                report = undefined;
                zuuluu = oscard.bind(report)(zuuluu);
                tangon = zuuluu.intl;
                zuuluu = tangon.string;
                michal = golfie[michal];
                michal = oscard.bind(report)(michal);
                michal = michal.t;
                michal = michal.3ejJen;
                michal = zuuluu.bind(tangon)(michal);
                entity['accessibilityLabel'] = michal;
                zuuluu = {};
                michal = 'activate';
                zuuluu['name'] = michal;
                michal = new Array(1);
                michal[0] = zuuluu;
                entity['accessibilityActions'] = michal;
                michal = function() { // Original name: onAccessibilityAction
                    tangon = _closure1_slot0;
                    zuuluu = _closure1_slot2;
                    entity = 24;
                    zuuluu = zuuluu[entity];
                    entity = undefined;
                    tangon = tangon.bind(entity)(zuuluu);
                    zuuluu = tangon.updateActivityPanelMode;
                    michal = _closure1_slot12;
                    michal = michal.PANEL;
                    michal = zuuluu.bind(tangon)(michal);
                    return entity;
                };
                entity['onAccessibilityAction'] = michal;
                return entity;
            };
            michal = new Array(0);
            yankee = option.bind(verify)(zuuluu, michal);
            michal = _closure1_slot7;
            entity = function(argFoo) {
                entity = argFoo;
                entity = entity.isActivityFocused;
                return entity;
            };
            michal = michal.bind(tangon)(entity);
            if(!sizing) { _fun00002_ip = 359; continue _fun00001 }
 331:
            zuuluu = oscard.mode;
            entity = _closure1_slot11;
            entity = entity.IN_PANEL;
            entity = zuuluu !== entity;
            if(entity) { _fun00002_ip = 356; continue _fun00001 }
 353:
            entity = michal;
 356:
            sizing = entity;
 359:
            zuuluu = _closure1_slot14;
            michal = _closure1_slot1;
            entity = _closure1_slot2;
            offset = 27;
            entity = entity[offset];
            michal = michal.bind(tangon)(entity);
            entity = {};
            entity['ref'] = report;
            result = 'box-none';
            entity['pointerEvents'] = result;
            report = _closure1_slot19;
            option = report.multiPIPContainer;
            report = new Array(2);
            report[0] = option;
            report[1] = golfie;
            entity['style'] = report;
            report = _closure1_slot18;
            entity['layout'] = report;
            report = oscard.mode;
            foxtra = null;
            golfie = foxtra != report;
            if(!golfie) { _fun00002_ip = 730; continue _fun00001 }
 452:
            verify = _closure1_slot14;
            config = _closure1_slot1;
            cntext = _closure1_slot2;
            report = cntext[offset];
            option = config.bind(tangon)(report);
            report = {};
            update = _closure1_slot19;
            vacuum = update.pipContentWrapper;
            update = new Array(3);
            update[0] = vacuum;
            vacuum = _closure1_slot19;
            vacuum = vacuum.inAppElevationShadow;
            update[1] = vacuum;
            update[2] = ctrled;
            report['style'] = update;
            report['pointerEvents'] = result;
            result = _closure1_slot18;
            report['layout'] = result;
            target = report;
            papara = kiloes;
            kiloes = copyDataProperties(target, papara);
            update = _closure1_slot13;
            result = _closure1_slot0;
            kiloes = 16;
            kiloes = cntext[kiloes];
            kiloes = result.bind(tangon)(kiloes);
            result = kiloes.GestureDetector;
            kiloes = {};
            kiloes['gesture'] = source;
            vacuum = _closure1_slot13;
            source = cntext[offset];
            ctrled = config.bind(tangon)(source);
            source = {};
            sequen = _closure1_slot19;
            record = sequen.pipMask;
            sequen = new Array(2);
            sequen[0] = record;
            sequen[1] = backup;
            source['style'] = sequen;
            sequen = _closure1_slot18;
            source['layout'] = sequen;
            record = _closure1_slot13;
            sequen = 28;
            sequen = cntext[sequen];
            config = config.bind(tangon)(sequen);
            sequen = {};
            sequen = record.bind(tangon)(config, sequen);
            source['children'] = sequen;
            source = vacuum.bind(tangon)(ctrled, source);
            kiloes['children'] = source;
            result = update.bind(tangon)(result, kiloes);
            kiloes = new Array(2);
            kiloes[0] = result;
            foxtra = null;
            if(!sizing) { _fun00002_ip = 711; continue _fun00001 }
 679:
            update = _closure1_slot13;
            result = _closure1_slot1;
            source = _closure1_slot2;
            sizing = 29;
            sizing = source[sizing];
            result = result.bind(tangon)(sizing);
            sizing = {};
            foxtra = update.bind(tangon)(result, sizing);
 711:
            kiloes[1] = foxtra;
            foxtra = 'children';
            report[foxtra] = kiloes;
            golfie = verify.bind(tangon)(option, report);
 730:
            report = new Array(2);
            report[0] = golfie;
            oscard = oscard.showSecondaryPIP;
            if(!oscard) { _fun00002_ip = 962; continue _fun00001 }
 750:
            verify = _closure1_slot13;
            update = _closure1_slot1;
            ctrled = _closure1_slot2;
            sizing = 30;
            golfie = ctrled[sizing];
            option = update.bind(tangon)(golfie);
            golfie = {};
            golfie['style'] = romeon;
            target = golfie;
            papara = yankee;
            yankee = copyDataProperties(target, papara);
            romeon = _closure1_slot13;
            offset = ctrled[offset];
            yankee = update.bind(tangon)(offset);
            offset = {};
            foxtra = _closure1_slot19;
            kiloes = foxtra.pipMask;
            foxtra = new Array(2);
            foxtra[0] = kiloes;
            foxtra[1] = backup;
            offset['style'] = foxtra;
            kiloes = _closure1_slot13;
            backup = _closure1_slot0;
            foxtra = 16;
            foxtra = ctrled[foxtra];
            foxtra = backup.bind(tangon)(foxtra);
            backup = foxtra.GestureDetector;
            foxtra = {};
            foxtra['gesture'] = output;
            result = _closure1_slot13;
            sizing = ctrled[sizing];
            output = update.bind(tangon)(sizing);
            sizing = {};
            source = _closure1_slot5;
            source = source.absoluteFill;
            sizing['style'] = source;
            source = _closure1_slot13;
            echoed = 31;
            echoed = ctrled[echoed];
            update = update.bind(tangon)(echoed);
            echoed = {};
            echoed = source.bind(tangon)(update, echoed);
            sizing['children'] = echoed;
            sizing = result.bind(tangon)(output, sizing);
            foxtra['children'] = sizing;
            foxtra = kiloes.bind(tangon)(backup, foxtra);
            offset['children'] = foxtra;
            yankee = romeon.bind(tangon)(yankee, offset);
            offset = 'children';
            golfie[offset] = yankee;
            oscard = verify.bind(tangon)(option, golfie);
 962:
            report[1] = oscard;
            entity['children'] = report;
            entity = zuuluu.bind(tangon)(michal, entity);
            return entity;
        }
    };
    var _closure1_slot34 = entity;
    entity = function(argFoo, argBar, argBaz, argCor) { // Original name: renderPIPWrapper
        report = _closure1_slot13;
        tangon = _closure1_slot33;
        zuuluu = {};
        entity = argBar;
        entity = entity.pipMode;
        zuuluu['pipMode'] = entity;
        entity = argBaz;
        zuuluu['transitionState'] = entity;
        entity = argCor;
        zuuluu['transitionCleanUp'] = entity;
        michal = undefined;
        entity = argFoo;
        entity = report.bind(michal)(tangon, zuuluu, entity);
        return entity;
    };
    var _closure1_slot35 = entity;
    entity = global;
    verify = entity.Object;
    golfie = verify.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(verify)(zuuluu, entity, tangon);
    entity = 0;
    tangon = oscard[entity];
    entity = undefined;
    tangon = option.bind(entity)(tangon);
    var _closure1_slot3 = tangon;
    tangon = 1;
    golfie = oscard[tangon];
    tangon = argCor;
    golfie = tangon.bind(entity)(golfie);
    var _closure1_slot4 = golfie;
    tangon = 2;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    verify = tangon.StyleSheet;
    var _closure1_slot5 = verify;
    tangon = tangon.Platform;
    tangon = 3;
    tangon = oscard[tangon];
    tangon = option.bind(entity)(tangon);
    var _closure1_slot6 = tangon;
    tangon = 4;
    tangon = oscard[tangon];
    tangon = option.bind(entity)(tangon);
    var _closure1_slot7 = tangon;
    tangon = 5;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    option = tangon.DRAWER_SPRING_PHYSICS;
    var _closure1_slot8 = option;
    option = tangon.VoicePanelModes;
    var _closure1_slot9 = option;
    yankee = tangon.SECONDARY_PIP_TOP_MARGIN;
    tangon = 6;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.VoicePanelControlsModes;
    var _closure1_slot10 = tangon;
    tangon = 7;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.VoicePanelPIPModes;
    var _closure1_slot11 = tangon;
    tangon = 8;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.ActivityPanelModes;
    var _closure1_slot12 = tangon;
    tangon = 9;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    option = tangon.jsx;
    var _closure1_slot13 = option;
    tangon = tangon.jsxs;
    var _closure1_slot14 = tangon;
    tangon = {'mass': 0.3, 'damping': 80, 'stiffness': 150};
    var _closure1_slot15 = tangon;
    tangon = {};
    option = 100;
    tangon['duration'] = option;
    var _closure1_slot16 = tangon;
    tangon = {};
    option = 'function layoutTransition_VoicePanelPIPTsx1(values){const{withSpring,LAYOUT_PHYSICS}=this.__closure;return{animations:{originX:withSpring(values.targetOriginX,LAYOUT_PHYSICS),originY:withSpring(values.targetOriginY,LAYOUT_PHYSICS),width:withSpring(values.targetWidth,LAYOUT_PHYSICS),height:withSpring(values.targetHeight,LAYOUT_PHYSICS)},initialValues:{originX:values.currentOriginX,originY:values.currentOriginY,width:values.currentWidth,height:values.currentHeight}};}';
    tangon['code'] = option;
    var _closure1_slot17 = tangon;
    tangon = function() {
        entity = function(argFoo) { // Original name: layoutTransition
            zuuluu = argFoo;
            entity = {};
            michal = {};
            golfie = _closure1_slot0;
            option = _closure1_slot2;
            report = 10;
            verify = option[report];
            oscard = undefined;
            romeon = golfie.bind(oscard)(verify);
            yankee = romeon.withSpring;
            offset = zuuluu.targetOriginX;
            verify = _closure1_slot15;
            verify = yankee.bind(romeon)(offset, verify);
            michal['originX'] = verify;
            verify = option[report];
            romeon = golfie.bind(oscard)(verify);
            yankee = romeon.withSpring;
            offset = zuuluu.targetOriginY;
            verify = _closure1_slot15;
            verify = yankee.bind(romeon)(offset, verify);
            michal['originY'] = verify;
            verify = option[report];
            romeon = golfie.bind(oscard)(verify);
            yankee = romeon.withSpring;
            offset = zuuluu.targetWidth;
            verify = _closure1_slot15;
            verify = yankee.bind(romeon)(offset, verify);
            michal['width'] = verify;
            report = option[report];
            golfie = golfie.bind(oscard)(report);
            oscard = golfie.withSpring;
            report = zuuluu.targetHeight;
            tangon = _closure1_slot15;
            tangon = oscard.bind(golfie)(report, tangon);
            michal['height'] = tangon;
            entity['animations'] = michal;
            michal = {};
            tangon = zuuluu.currentOriginX;
            michal['originX'] = tangon;
            tangon = zuuluu.currentOriginY;
            michal['originY'] = tangon;
            tangon = zuuluu.currentWidth;
            michal['width'] = tangon;
            zuuluu = zuuluu.currentHeight;
            michal['height'] = zuuluu;
            entity['initialValues'] = michal;
            return entity;
        };
        zuuluu = {};
        oscard = _closure1_slot0;
        report = _closure1_slot2;
        tangon = 10;
        report = report[tangon];
        tangon = undefined;
        tangon = oscard.bind(tangon)(report);
        tangon = tangon.withSpring;
        zuuluu['withSpring'] = tangon;
        tangon = _closure1_slot15;
        zuuluu['LAYOUT_PHYSICS'] = tangon;
        entity['__closure'] = zuuluu;
        zuuluu = 9346092352642.0;
        entity['__workletHash'] = zuuluu;
        michal = _closure1_slot17;
        entity['__initData'] = michal;
        return entity;
    };
    tangon = tangon.bind(entity)();
    var _closure1_slot18 = tangon;
    option = verify.create;
    tangon = {};
    offset = {};
    romeon = 'black';
    offset['backgroundColor'] = romeon;
    tangon['pipContentWrapper'] = offset;
    offset = {};
    tangon['noElevationShadow'] = offset;
    offset = {};
    tangon['inAppElevationShadow'] = offset;
    offset = {};
    tangon['inPanelElevationShadow'] = offset;
    offset = {};
    kiloes = verify.absoluteFillObject;
    sizing = offset;
    romeon = copyDataProperties(sizing, kiloes);
    foxtra = 'hidden';
    romeon = 'overflow';
    offset[romeon] = foxtra;
    tangon['pipMask'] = offset;
    offset = {'position': 'absolute', 'zIndex': 10, 'flexDirection': 'column', 'alignItems': 'center'};
    offset['gap'] = yankee;
    tangon['multiPIPContainer'] = offset;
    tangon = option.bind(verify)(tangon);
    var _closure1_slot19 = tangon;
    tangon = {};
    option = "function VoicePanelPIPTsx2(){const{pipState,getClampedPIPPosition,wrapperDimensions,windowDimensions,safeArea,pipAvoidanceSpecs,initialGestureOffset,withTiming,opacity,OPACITY_TIMING,withSpring,DRAWER_SPRING_PHYSICS,LAYOUT_PHYSICS,getVoicePanelPIPBorderRadius}=this.__closure;const width=pipState.width;const height=!pipState.showSecondaryPIP?pipState.height:pipState.containerHeight;const{x:x,y:y}=getClampedPIPPosition({pipX:wrapperDimensions.get().pipX,pipY:wrapperDimensions.get().pipY,width:width,height:height,windowDimensions:windowDimensions.get(),safeArea:safeArea.get(),bottomAvoidanceRegion:pipAvoidanceSpecs.get().bottom,topAvoidanceRegion:pipAvoidanceSpecs.get().top,positionOffset:initialGestureOffset.get().active?initialGestureOffset.get():undefined});return{width:width,height:height,opacity:withTiming(opacity.get(),OPACITY_TIMING,'animate-never'),transform:[{translateX:withSpring(x,initialGestureOffset.get().active?DRAWER_SPRING_PHYSICS:LAYOUT_PHYSICS)},{translateY:withSpring(y,initialGestureOffset.get().active?DRAWER_SPRING_PHYSICS:LAYOUT_PHYSICS)}],borderRadius:getVoicePanelPIPBorderRadius(width,height)};}";
    tangon['code'] = option;
    var _closure1_slot20 = tangon;
    tangon = {};
    option = 'function VoicePanelPIPTsx3(){const{pipState,getVoicePanelPIPBorderRadius}=this.__closure;const{width:width,height:height}=pipState;return{width:width,height:height,borderRadius:getVoicePanelPIPBorderRadius(width,height)};}';
    tangon['code'] = option;
    var _closure1_slot21 = tangon;
    tangon = {};
    option = 'function VoicePanelPIPTsx4(){const{updateSharedValueIfChanged,initialGestureOffset}=this.__closure;updateSharedValueIfChanged(initialGestureOffset,{active:false,pressed:false});}';
    tangon['code'] = option;
    var _closure1_slot22 = tangon;
    tangon = {};
    option = 'function VoicePanelPIPTsx5(){const{updateSharedValueIfChanged,initialGestureOffset}=this.__closure;updateSharedValueIfChanged(initialGestureOffset,{active:false,pressed:false});}';
    tangon['code'] = option;
    var _closure1_slot23 = tangon;
    tangon = {};
    option = 'function VoicePanelPIPTsx6({velocityX:velocityX,velocityY:velocityY,absoluteX:absoluteX,absoluteY:absoluteY}){const{calculatePIPPositionFromVelocity,windowDimensions,safeArea,updateSharedValueIfChanged,wrapperDimensions,wrapperOffset,runOnJS,updateSourceTrackingView}=this.__closure;const{pipX:pipX,pipY:pipY}=calculatePIPPositionFromVelocity({velocityX:velocityX,velocityY:velocityY,absoluteX:absoluteX,absoluteY:absoluteY,windowDimensions:windowDimensions.get(),safeArea:safeArea.get()});updateSharedValueIfChanged(wrapperDimensions,{pipX:pipX,pipY:pipY});updateSharedValueIfChanged(wrapperOffset,{gestureActive:false});runOnJS(updateSourceTrackingView)();}';
    tangon['code'] = option;
    var _closure1_slot24 = tangon;
    tangon = {};
    option = 'function VoicePanelPIPTsx7({absoluteX:absoluteX,absoluteY:absoluteY}){const{updateSharedValueIfChanged,initialGestureOffset}=this.__closure;updateSharedValueIfChanged(initialGestureOffset,{x:absoluteX-initialGestureOffset.get().absoluteX,y:absoluteY-initialGestureOffset.get().absoluteY});}';
    tangon['code'] = option;
    var _closure1_slot25 = tangon;
    tangon = {};
    option = 'function VoicePanelPIPTsx8(event,manager){const{State,initialGestureOffset,MIN_GESTURE_START,updateSharedValueIfChanged,wrapperOffset,runOnJS,triggerIOSHaptic}=this.__closure;if(event.state!==State.BEGAN||initialGestureOffset.get().active)return;const{absoluteY:absoluteY,absoluteX:absoluteX}=event.changedTouches[0];if(Math.abs(initialGestureOffset.get().absoluteX-absoluteX)>MIN_GESTURE_START||Math.abs(initialGestureOffset.get().absoluteY-absoluteY)>MIN_GESTURE_START){initialGestureOffset.set({x:0,y:0,absoluteX:absoluteX,absoluteY:absoluteY,pressed:true,active:true});updateSharedValueIfChanged(wrapperOffset,{gestureActive:true,x:0,y:0});manager.activate();runOnJS(triggerIOSHaptic)();}}';
    tangon['code'] = option;
    var _closure1_slot26 = tangon;
    tangon = {};
    option = 'function VoicePanelPIPTsx9(){const{updateSharedValueIfChanged,initialGestureOffset}=this.__closure;updateSharedValueIfChanged(initialGestureOffset,{active:false,pressed:false});}';
    tangon['code'] = option;
    var _closure1_slot27 = tangon;
    tangon = {};
    option = 'function VoicePanelPIPTsx10({absoluteX:absoluteX,absoluteY:absoluteY}){const{initialGestureOffset}=this.__closure;initialGestureOffset.set({x:0,y:0,absoluteX:absoluteX,absoluteY:absoluteY,active:false,pressed:true});}';
    tangon['code'] = option;
    var _closure1_slot28 = tangon;
    tangon = {};
    option = 'function VoicePanelPIPTsx11(){const{runOnJS,setFocused}=this.__closure;runOnJS(setFocused)(null);}';
    tangon['code'] = option;
    var _closure1_slot29 = tangon;
    tangon = {};
    option = 'function VoicePanelPIPTsx12(){const{pipMode,VoicePanelPIPModes,runOnJS,setMode,VoicePanelModes,controlsSpecs,VoicePanelControlsModes,showControls,hideControls}=this.__closure;if(pipMode===VoicePanelPIPModes.IN_APP){runOnJS(setMode)(VoicePanelModes.PANEL);}else{if(controlsSpecs.get().mode===VoicePanelControlsModes.HIDDEN){runOnJS(showControls)();}else{runOnJS(hideControls)();}}}';
    tangon['code'] = option;
    var _closure1_slot30 = tangon;
    tangon = {};
    option = 'function VoicePanelPIPTsx13(){const{currentEmbeddedActivityIsNotInCurrentChannel,runOnJS,setMode,VoicePanelModes,setFocused,contextlessEmbeddedActivityParticipantId,updateActivityPanelMode,ActivityPanelModes}=this.__closure;if(currentEmbeddedActivityIsNotInCurrentChannel){runOnJS(setMode)(VoicePanelModes.PIP);runOnJS(setFocused)(null);}else if(contextlessEmbeddedActivityParticipantId!=null){runOnJS(setMode)(VoicePanelModes.PANEL);runOnJS(setFocused)(contextlessEmbeddedActivityParticipantId);}runOnJS(updateActivityPanelMode)(ActivityPanelModes.PANEL);}';
    tangon['code'] = option;
    var _closure1_slot31 = tangon;
    tangon = {};
    option = 'function VoicePanelPIPTsx14(){const{getVoicePanelPIPBorderRadius,pipState}=this.__closure;return{borderRadius:getVoicePanelPIPBorderRadius(pipState.width,pipState.height)};}';
    tangon['code'] = option;
    var _closure1_slot32 = tangon;
    option = golfie.memo;
    tangon = function(argFoo) {
        _fun00013: for(var _fun00014_ip = 0; ; ) switch(_fun00014_ip) {
 0:
            michal = argFoo;
            golfie = michal.pipMode;
            verify = michal.transitionState;
            var _closure2_slot0 = verify;
            option = michal.transitionCleanUp;
            var _closure2_slot1 = option;
            report = undefined;
            var _closure2_slot2 = report;
            oscard = _closure1_slot4;
            tangon = oscard.useState;
            zuuluu = _closure1_slot11;
            zuuluu = zuuluu.IN_PANEL;
            zuuluu = golfie === zuuluu;
            if(zuuluu) { _fun00014_ip = 102; continue _fun00013 }
 66:
            offset = _closure1_slot0;
            yankee = _closure1_slot2;
            golfie = 32;
            golfie = yankee[golfie];
            golfie = offset.bind(report)(golfie);
            golfie = golfie.TransitionStates;
            golfie = golfie.MOUNTED;
            zuuluu = verify === golfie;
 102:
            oscard = tangon.bind(oscard)(zuuluu);
            tangon = _closure1_slot3;
            zuuluu = 2;
            oscard = tangon.bind(report)(oscard, zuuluu);
            zuuluu = 0;
            zuuluu = oscard[zuuluu];
            tangon = 1;
            tangon = oscard[tangon];
            _closure2_slot2 = tangon;
            offset = _closure1_slot4;
            golfie = offset.useEffect;
            oscard = function() {
                michal = global;
                report = michal.setTimeout;
                tangon = undefined;
                zuuluu = function() {
                    zuuluu = _closure2_slot2;
                    michal = undefined;
                    entity = true;
                    entity = zuuluu.bind(michal)(entity);
                    return entity;
                };
                michal = 400;
                michal = report.bind(tangon)(zuuluu, michal);
                var _closure3_slot0 = michal;
                entity = function() {
                    entity = global;
                    zuuluu = entity.clearTimeout;
                    michal = _closure3_slot0;
                    entity = undefined;
                    michal = zuuluu.bind(entity)(michal);
                    return entity;
                };
                return entity;
            };
            tangon = new Array(0);
            tangon = golfie.bind(offset)(oscard, tangon);
            golfie = _closure1_slot4;
            oscard = golfie.useEffect;
            tangon = new Array(2);
            tangon[0] = verify;
            tangon[1] = option;
            entity = function() {
                _fun00015: for(var _fun00016_ip = 0; ; ) switch(_fun00016_ip) {
 0:
                    zuuluu = _closure2_slot0;
                    tangon = _closure1_slot0;
                    michal = _closure1_slot2;
                    entity = 32;
                    michal = michal[entity];
                    entity = undefined;
                    michal = tangon.bind(entity)(michal);
                    michal = michal.TransitionStates;
                    michal = michal.YEETED;
                    if(!(zuuluu === michal)) { _fun00016_ip = 74; continue _fun00015 }
 48:
                    michal = global;
                    tangon = michal.setTimeout;
                    zuuluu = function() {
                        michal = _closure2_slot1;
                        entity = undefined;
                        michal = michal.bind(entity)();
                        return entity;
                    };
                    michal = 17;
                    michal = tangon.bind(entity)(zuuluu, michal);
 74:
                    return entity;
                }
            };
            entity = oscard.bind(golfie)(entity, tangon);
            entity = null;
            if(!zuuluu) { _fun00014_ip = 218; continue _fun00013 }
 202:
            tangon = _closure1_slot13;
            zuuluu = _closure1_slot34;
            michal = {};
            entity = tangon.bind(report)(zuuluu, michal);
 218:
            return entity;
        }
    };
    tangon = option.bind(golfie)(tangon);
    var _closure1_slot33 = tangon;
    tangon = golfie.memo;
    michal = function() { // Original name: VoicePanelPIPWrapper
        _fun00017: for(var _fun00018_ip = 0; ; ) switch(_fun00018_ip) {
 0:
            michal = _closure1_slot0;
            oscard = _closure1_slot2;
            entity = 12;
            entity = oscard[entity];
            tangon = undefined;
            zuuluu = michal.bind(tangon)(entity);
            entity = zuuluu.usePIPState;
            entity = entity.bind(zuuluu)();
            option = entity.mode;
            golfie = entity.showSecondaryPIP;
            zuuluu = _closure1_slot13;
            entity = 32;
            entity = oscard[entity];
            entity = michal.bind(tangon)(entity);
            michal = entity.TransitionItem;
            entity = {};
            oscard = null;
            if(!(oscard == option)) { _fun00018_ip = 81; continue _fun00017 }
 76:
            oscard = undefined;
            if(!golfie) { _fun00018_ip = 91; continue _fun00017 }
 81:
            golfie = {};
            golfie['pipMode'] = option;
            oscard = golfie;
 91:
            entity['item'] = oscard;
            report = _closure1_slot35;
            entity['renderItem'] = report;
            entity = zuuluu.bind(tangon)(michal, entity);
            return entity;
        }
    };
    michal = tangon.bind(golfie)(michal);
    tangon = 33;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/voice_panel/native/pip/VoicePanelPIP.tsx';
    tangon = report.bind(oscard)(tangon);
    zuuluu['default'] = michal;
    return entity;
})();