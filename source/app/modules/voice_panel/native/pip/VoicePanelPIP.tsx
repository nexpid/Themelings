// app/modules/voice_panel/native/pip/VoicePanelPIP.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    report = argBar;
    option = argBaz;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    var _closure1_slot1 = option;
    var _closure1_slot2 = oscard;
    entity = function(argFoo) { // Original name: VoicePanelPIP
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            michal = argFoo;
            zuuluu = michal.type;
            oscard = _closure1_slot4;
            report = oscard.useContext;
            offset = _closure1_slot1;
            sizing = _closure1_slot2;
            michal = 10;
            michal = sizing[michal];
            tangon = undefined;
            michal = offset.bind(tangon)(michal);
            report = report.bind(oscard)(michal);
            verify = report.controlsSpecs;
            michal = report.setMode;
            var _closure2_slot0 = michal;
            report = report.pipContainerRef;
            backup = _closure1_slot0;
            oscard = 11;
            oscard = sizing[oscard];
            golfie = backup.bind(tangon)(oscard);
            oscard = golfie.usePIPState;
            oscard = oscard.bind(golfie)();
            var _closure2_slot1 = oscard;
            golfie = function(argFoo) { // Original name: usePIPGesture
                verify = argFoo;
                var _closure3_slot0 = verify;
                report = _closure1_slot4;
                tangon = report.useContext;
                oscard = _closure1_slot1;
                vacuum = _closure1_slot2;
                entity = 10;
                entity = vacuum[entity];
                ctrled = undefined;
                entity = oscard.bind(ctrled)(entity);
                entity = tangon.bind(report)(entity);
                foxtra = entity.controlsSpecs;
                var _closure3_slot1 = foxtra;
                romeon = entity.hideControls;
                var _closure3_slot2 = romeon;
                config = entity.pipAvoidanceSpecs;
                var _closure3_slot3 = config;
                result = entity.safeArea;
                var _closure3_slot4 = result;
                yankee = entity.setFocused;
                var _closure3_slot5 = yankee;
                tangon = entity.setMode;
                var _closure3_slot6 = tangon;
                offset = entity.showControls;
                var _closure3_slot7 = offset;
                output = entity.windowDimensions;
                var _closure3_slot8 = output;
                sizing = entity.wrapperDimensions;
                var _closure3_slot9 = sizing;
                entity = entity.wrapperOffset;
                var _closure3_slot10 = entity;
                source = _closure1_slot0;
                report = 11;
                report = vacuum[report];
                oscard = source.bind(ctrled)(report);
                report = oscard.usePIPState;
                report = report.bind(oscard)();
                var _closure3_slot11 = report;
                oscard = 12;
                golfie = vacuum[oscard];
                kiloes = source.bind(ctrled)(golfie);
                option = kiloes.useSharedValue;
                backup = 0;
                golfie = {'x': 0, 'y': 0, 'absoluteX': 0, 'absoluteY': 0, 'active': false, 'pressed': false};
                echoed = option.bind(kiloes)(golfie);
                var _closure3_slot12 = echoed;
                golfie = vacuum[oscard];
                option = source.bind(ctrled)(golfie);
                golfie = option.useSharedValue;
                sequen = golfie.bind(option)(backup);
                var _closure3_slot13 = sequen;
                kiloes = _closure1_slot4;
                backup = kiloes.useEffect;
                option = new Array(1);
                option[0] = sequen;
                golfie = function() {
                    michal = global;
                    report = michal.setTimeout;
                    tangon = undefined;
                    zuuluu = function() {
                        zuuluu = _closure3_slot13;
                        michal = zuuluu.set;
                        entity = 1;
                        entity = michal.bind(zuuluu)(entity);
                        entity = undefined;
                        return entity;
                    };
                    michal = 200;
                    michal = report.bind(tangon)(zuuluu, michal);
                    var _closure4_slot0 = michal;
                    entity = function() {
                        entity = global;
                        zuuluu = entity.clearTimeout;
                        michal = _closure4_slot0;
                        entity = undefined;
                        michal = zuuluu.bind(entity)(michal);
                        return entity;
                    };
                    return entity;
                };
                golfie = backup.bind(kiloes)(golfie, option);
                golfie = vacuum[oscard];
                backup = source.bind(ctrled)(golfie);
                option = backup.useAnimatedStyle;
                golfie = function() { // Original name: L
                    _fun00003: for(var _fun00004_ip = 0; ; ) switch(_fun00004_ip) {
 0:
                        entity = _closure3_slot11;
                        report = entity.width;
                        michal = entity.showSecondaryPIP;
                        entity = _closure3_slot11;
                        if(michal) { _fun00004_ip = 32; continue _fun00003 }
 25:
                        tangon = entity.height;
                        _fun00004_ip = 38; continue _fun00003;
 32:
                        tangon = entity.containerHeight;
 38:
                        zuuluu = _closure1_slot0;
                        entity = _closure1_slot2;
                        golfie = 13;
                        entity = entity[golfie];
                        oscard = undefined;
                        option = zuuluu.bind(oscard)(entity);
                        zuuluu = option.getClampedPIPPosition;
                        entity = {};
                        yankee = _closure3_slot9;
                        offset = yankee.get;
                        offset = offset.bind(yankee)();
                        offset = offset.pipX;
                        entity['pipX'] = offset;
                        offset = yankee.get;
                        offset = offset.bind(yankee)();
                        offset = offset.pipY;
                        entity['pipY'] = offset;
                        entity['width'] = report;
                        entity['height'] = tangon;
                        yankee = _closure3_slot8;
                        offset = yankee.get;
                        offset = offset.bind(yankee)();
                        entity['windowDimensions'] = offset;
                        yankee = _closure3_slot4;
                        offset = yankee.get;
                        offset = offset.bind(yankee)();
                        entity['safeArea'] = offset;
                        yankee = _closure3_slot3;
                        offset = yankee.get;
                        offset = offset.bind(yankee)();
                        offset = offset.bottom;
                        entity['bottomAvoidanceRegion'] = offset;
                        offset = yankee.get;
                        offset = offset.bind(yankee)();
                        offset = offset.top;
                        entity['topAvoidanceRegion'] = offset;
                        yankee = _closure3_slot12;
                        offset = yankee.get;
                        offset = offset.bind(yankee)();
                        yankee = offset.active;
                        offset = undefined;
                        if(!yankee) { _fun00004_ip = 238; continue _fun00003 }
 225:
                        romeon = _closure3_slot12;
                        yankee = romeon.get;
                        offset = yankee.bind(romeon)();
 238:
                        entity['positionOffset'] = offset;
                        entity = zuuluu.bind(option)(entity);
                        backup = entity.x;
                        romeon = entity.y;
                        entity = {};
                        entity['width'] = report;
                        entity['height'] = tangon;
                        offset = _closure1_slot0;
                        zuuluu = _closure1_slot2;
                        option = 14;
                        option = zuuluu[option];
                        sizing = offset.bind(oscard)(option);
                        kiloes = sizing.withTiming;
                        yankee = _closure3_slot13;
                        option = yankee.get;
                        foxtra = option.bind(yankee)();
                        yankee = _closure1_slot15;
                        option = 'animate-never';
                        option = kiloes.bind(sizing)(foxtra, yankee, option);
                        entity['opacity'] = option;
                        option = {};
                        foxtra = 9;
                        zuuluu = zuuluu[foxtra];
                        yankee = offset.bind(oscard)(zuuluu);
                        offset = yankee.withSpring;
                        kiloes = _closure3_slot12;
                        zuuluu = kiloes.get;
                        zuuluu = zuuluu.bind(kiloes)();
                        zuuluu = zuuluu.active;
                        if(zuuluu) { _fun00004_ip = 374; continue _fun00003 }
 368:
                        zuuluu = _closure1_slot14;
                        _fun00004_ip = 378; continue _fun00003;
 374:
                        zuuluu = _closure1_slot7;
 378:
                        zuuluu = offset.bind(yankee)(backup, zuuluu);
                        option['translateX'] = zuuluu;
                        zuuluu = new Array(2);
                        zuuluu[0] = option;
                        option = {};
                        yankee = _closure1_slot0;
                        offset = _closure1_slot2;
                        offset = offset[foxtra];
                        yankee = yankee.bind(oscard)(offset);
                        offset = yankee.withSpring;
                        foxtra = _closure3_slot12;
                        verify = foxtra.get;
                        verify = verify.bind(foxtra)();
                        verify = verify.active;
                        if(verify) { _fun00004_ip = 449; continue _fun00003 }
 443:
                        verify = _closure1_slot14;
                        _fun00004_ip = 453; continue _fun00003;
 449:
                        verify = _closure1_slot7;
 453:
                        verify = offset.bind(yankee)(romeon, verify);
                        option['translateY'] = verify;
                        zuuluu[1] = option;
                        entity['transform'] = zuuluu;
                        zuuluu = _closure1_slot0;
                        michal = _closure1_slot2;
                        michal = michal[golfie];
                        zuuluu = zuuluu.bind(oscard)(michal);
                        michal = zuuluu.getVoicePanelPIPBorderRadius;
                        michal = michal.bind(zuuluu)(report, tangon);
                        entity['borderRadius'] = michal;
                        return entity;
                    }
                };
                kiloes = {};
                kiloes['pipState'] = report;
                update = 13;
                record = vacuum[update];
                record = source.bind(ctrled)(record);
                record = record.getClampedPIPPosition;
                kiloes['getClampedPIPPosition'] = record;
                kiloes['wrapperDimensions'] = sizing;
                kiloes['windowDimensions'] = output;
                kiloes['safeArea'] = result;
                kiloes['pipAvoidanceSpecs'] = config;
                kiloes['initialGestureOffset'] = echoed;
                config = 14;
                config = vacuum[config];
                config = source.bind(ctrled)(config);
                config = config.withTiming;
                kiloes['withTiming'] = config;
                kiloes['opacity'] = sequen;
                sequen = _closure1_slot15;
                kiloes['OPACITY_TIMING'] = sequen;
                sequen = 9;
                sequen = vacuum[sequen];
                sequen = source.bind(ctrled)(sequen);
                sequen = sequen.withSpring;
                kiloes['withSpring'] = sequen;
                sequen = _closure1_slot7;
                kiloes['DRAWER_SPRING_PHYSICS'] = sequen;
                sequen = _closure1_slot14;
                kiloes['LAYOUT_PHYSICS'] = sequen;
                sequen = vacuum[update];
                sequen = source.bind(ctrled)(sequen);
                sequen = sequen.getVoicePanelPIPBorderRadius;
                kiloes['getVoicePanelPIPBorderRadius'] = sequen;
                golfie['__closure'] = kiloes;
                kiloes = 15958692806993.0;
                golfie['__workletHash'] = kiloes;
                kiloes = _closure1_slot19;
                golfie['__initData'] = kiloes;
                option = option.bind(backup)(golfie);
                oscard = vacuum[oscard];
                backup = source.bind(ctrled)(oscard);
                golfie = backup.useAnimatedStyle;
                oscard = function() { // Original name: B
                    entity = _closure3_slot11;
                    report = entity.width;
                    tangon = entity.height;
                    entity = {};
                    entity['width'] = report;
                    entity['height'] = tangon;
                    oscard = _closure1_slot0;
                    zuuluu = _closure1_slot2;
                    michal = 13;
                    zuuluu = zuuluu[michal];
                    michal = undefined;
                    zuuluu = oscard.bind(michal)(zuuluu);
                    michal = zuuluu.getVoicePanelPIPBorderRadius;
                    michal = michal.bind(zuuluu)(report, tangon);
                    entity['borderRadius'] = michal;
                    return entity;
                };
                kiloes = {};
                kiloes['pipState'] = report;
                update = vacuum[update];
                update = source.bind(ctrled)(update);
                update = update.getVoicePanelPIPBorderRadius;
                kiloes['getVoicePanelPIPBorderRadius'] = update;
                oscard['__closure'] = kiloes;
                kiloes = 1914976453427.0;
                oscard['__workletHash'] = kiloes;
                kiloes = _closure1_slot20;
                oscard['__initData'] = kiloes;
                golfie = golfie.bind(backup)(oscard);
                kiloes = _closure1_slot4;
                backup = kiloes.useMemo;
                update = report.width;
                oscard = new Array(2);
                oscard[0] = update;
                report = report.height;
                oscard[1] = report;
                report = function() {
                    entity = _closure1_slot18;
                    zuuluu = entity.pipContentWrapper;
                    entity = new Array(3);
                    entity[0] = zuuluu;
                    zuuluu = {};
                    tangon = _closure3_slot11;
                    report = tangon.width;
                    zuuluu['width'] = report;
                    report = tangon.height;
                    zuuluu['height'] = report;
                    golfie = _closure1_slot0;
                    oscard = _closure1_slot2;
                    report = 13;
                    oscard = oscard[report];
                    report = undefined;
                    golfie = golfie.bind(report)(oscard);
                    oscard = golfie.getVoicePanelPIPBorderRadius;
                    report = tangon.width;
                    tangon = tangon.height;
                    tangon = oscard.bind(golfie)(report, tangon);
                    zuuluu['borderRadius'] = tangon;
                    entity[1] = zuuluu;
                    michal = _closure1_slot18;
                    michal = michal.inAppElevationShadow;
                    entity[2] = michal;
                    return entity;
                };
                report = backup.bind(kiloes)(report, oscard);
                kiloes = _closure1_slot4;
                backup = kiloes.useCallback;
                oscard = new Array(5);
                oscard[0] = echoed;
                oscard[1] = result;
                oscard[2] = output;
                oscard[3] = sizing;
                oscard[4] = entity;
                entity = function() {
                    foxtra = _closure1_slot0;
                    offset = _closure1_slot2;
                    romeon = 15;
                    michal = offset[romeon];
                    verify = undefined;
                    michal = foxtra.bind(verify)(michal);
                    zuuluu = michal.Gesture;
                    michal = zuuluu.Pan;
                    zuuluu = michal.bind(zuuluu)();
                    michal = zuuluu.enabled;
                    report = true;
                    zuuluu = michal.bind(zuuluu)(report);
                    michal = zuuluu.manualActivation;
                    report = michal.bind(zuuluu)(report);
                    zuuluu = report.maxPointers;
                    michal = 1;
                    report = zuuluu.bind(report)(michal);
                    zuuluu = report.shouldCancelWhenOutside;
                    michal = false;
                    report = zuuluu.bind(report)(michal);
                    zuuluu = report.onBegin;
                    michal = function(argFoo) { // Original name: c
                        entity = argFoo;
                        report = entity.absoluteX;
                        tangon = entity.absoluteY;
                        zuuluu = _closure3_slot12;
                        michal = zuuluu.set;
                        entity = {'x': 0, 'y': 0, 'absoluteX': null, 'absoluteY': null, 'active': false, 'pressed': true};
                        entity['absoluteX'] = report;
                        entity['absoluteY'] = tangon;
                        entity = michal.bind(zuuluu)(entity);
                        entity = undefined;
                        return entity;
                    };
                    golfie = {};
                    oscard = _closure3_slot12;
                    golfie['initialGestureOffset'] = oscard;
                    michal['__closure'] = golfie;
                    golfie = 7706832543946.0;
                    michal['__workletHash'] = golfie;
                    golfie = _closure1_slot21;
                    michal['__initData'] = golfie;
                    report = zuuluu.bind(report)(michal);
                    zuuluu = report.onTouchesUp;
                    michal = function() { // Original name: l
                        zuuluu = _closure1_slot1;
                        michal = _closure1_slot2;
                        entity = 16;
                        michal = michal[entity];
                        entity = undefined;
                        tangon = zuuluu.bind(entity)(michal);
                        zuuluu = _closure3_slot12;
                        michal = {'active': false, 'pressed': false};
                        michal = tangon.bind(entity)(zuuluu, michal);
                        return entity;
                    };
                    yankee = {};
                    option = _closure1_slot1;
                    golfie = 16;
                    backup = offset[golfie];
                    backup = option.bind(verify)(backup);
                    yankee['updateSharedValueIfChanged'] = backup;
                    yankee['initialGestureOffset'] = oscard;
                    michal['__closure'] = yankee;
                    yankee = 4606005866023.0;
                    michal['__workletHash'] = yankee;
                    yankee = _closure1_slot22;
                    michal['__initData'] = yankee;
                    report = zuuluu.bind(report)(michal);
                    zuuluu = report.onTouchesMove;
                    michal = function(argFoo, argBar) { // Original name: u
                        _fun00005: for(var _fun00006_ip = 0; ; ) switch(_fun00006_ip) {
 0:
                            report = argFoo;
                            tangon = argBar;
                            oscard = report.state;
                            golfie = _closure1_slot0;
                            zuuluu = _closure1_slot2;
                            entity = 15;
                            zuuluu = zuuluu[entity];
                            entity = undefined;
                            zuuluu = golfie.bind(entity)(zuuluu);
                            zuuluu = zuuluu.State;
                            zuuluu = zuuluu.BEGAN;
                            if(!(oscard === zuuluu)) { _fun00006_ip = 345; continue _fun00005 }
 55:
                            golfie = _closure3_slot12;
                            oscard = golfie.get;
                            oscard = oscard.bind(golfie)();
                            oscard = oscard.active;
                            if(oscard) { _fun00006_ip = 345; continue _fun00005 }
 83:
                            oscard = report.changedTouches;
                            report = 0;
                            report = oscard[report];
                            option = report.absoluteY;
                            verify = report.absoluteX;
                            oscard = global;
                            offset = oscard.Math;
                            golfie = offset.abs;
                            yankee = _closure3_slot12;
                            report = yankee.get;
                            report = report.bind(yankee)();
                            report = report.absoluteX;
                            report = report - verify;
                            report = golfie.bind(offset)(report);
                            golfie = 10;
                            report = report > golfie;
                            if(report) { _fun00006_ip = 203; continue _fun00005 }
 159:
                            yankee = oscard.Math;
                            offset = yankee.abs;
                            romeon = _closure3_slot12;
                            oscard = romeon.get;
                            oscard = oscard.bind(romeon)();
                            oscard = oscard.absoluteY;
                            oscard = oscard - option;
                            oscard = offset.bind(yankee)(oscard);
                            report = oscard > golfie;
 203:
                            if(!report) { _fun00006_ip = 345; continue _fun00005 }
 209:
                            golfie = _closure3_slot12;
                            oscard = golfie.set;
                            report = {'x': 0, 'y': 0, 'absoluteX': null, 'absoluteY': null, 'pressed': true, 'active': true};
                            report['absoluteX'] = verify;
                            report['absoluteY'] = option;
                            report = oscard.bind(golfie)(report);
                            report = _closure1_slot1;
                            oscard = _closure1_slot2;
                            golfie = 16;
                            golfie = oscard[golfie];
                            option = report.bind(entity)(golfie);
                            golfie = _closure3_slot10;
                            zuuluu = {'gestureActive': true, 'x': 0, 'y': 0};
                            zuuluu = option.bind(entity)(golfie, zuuluu);
                            zuuluu = tangon.activate;
                            zuuluu = zuuluu.bind(tangon)();
                            zuuluu = _closure1_slot0;
                            michal = 12;
                            michal = oscard[michal];
                            tangon = zuuluu.bind(entity)(michal);
                            zuuluu = tangon.runOnJS;
                            michal = 17;
                            michal = oscard[michal];
                            michal = report.bind(entity)(michal);
                            michal = zuuluu.bind(tangon)(michal);
                            michal = michal.bind(entity)();
 345:
                            return entity;
                        }
                    };
                    yankee = {};
                    romeon = offset[romeon];
                    romeon = foxtra.bind(verify)(romeon);
                    romeon = romeon.State;
                    yankee['State'] = romeon;
                    yankee['initialGestureOffset'] = oscard;
                    romeon = 10;
                    yankee['MIN_GESTURE_START'] = romeon;
                    romeon = offset[golfie];
                    romeon = option.bind(verify)(romeon);
                    yankee['updateSharedValueIfChanged'] = romeon;
                    backup = _closure3_slot10;
                    yankee['wrapperOffset'] = backup;
                    romeon = 12;
                    sizing = offset[romeon];
                    sizing = foxtra.bind(verify)(sizing);
                    sizing = sizing.runOnJS;
                    yankee['runOnJS'] = sizing;
                    sizing = 17;
                    sizing = offset[sizing];
                    sizing = option.bind(verify)(sizing);
                    yankee['triggerIOSHaptic'] = sizing;
                    michal['__closure'] = yankee;
                    yankee = 12372145476453.0;
                    michal['__workletHash'] = yankee;
                    yankee = _closure1_slot23;
                    michal['__initData'] = yankee;
                    report = zuuluu.bind(report)(michal);
                    zuuluu = report.onChange;
                    michal = function(argFoo) { // Original name: o
                        entity = argFoo;
                        golfie = entity.absoluteX;
                        oscard = entity.absoluteY;
                        zuuluu = _closure1_slot1;
                        michal = _closure1_slot2;
                        entity = 16;
                        michal = michal[entity];
                        entity = undefined;
                        tangon = zuuluu.bind(entity)(michal);
                        zuuluu = _closure3_slot12;
                        michal = {};
                        report = zuuluu.get;
                        report = report.bind(zuuluu)();
                        report = report.absoluteX;
                        report = golfie - report;
                        michal['x'] = report;
                        report = zuuluu.get;
                        report = report.bind(zuuluu)();
                        report = report.absoluteY;
                        report = oscard - report;
                        michal['y'] = report;
                        michal = tangon.bind(entity)(zuuluu, michal);
                        return entity;
                    };
                    yankee = {};
                    sizing = offset[golfie];
                    sizing = option.bind(verify)(sizing);
                    yankee['updateSharedValueIfChanged'] = sizing;
                    yankee['initialGestureOffset'] = oscard;
                    michal['__closure'] = yankee;
                    yankee = 7822444262980.0;
                    michal['__workletHash'] = yankee;
                    yankee = _closure1_slot24;
                    michal['__initData'] = yankee;
                    report = zuuluu.bind(report)(michal);
                    zuuluu = report.onEnd;
                    michal = function(argFoo) { // Original name: s
                        entity = argFoo;
                        yankee = entity.velocityX;
                        offset = entity.velocityY;
                        verify = entity.absoluteX;
                        michal = entity.absoluteY;
                        zuuluu = _closure1_slot0;
                        oscard = _closure1_slot2;
                        entity = 13;
                        report = oscard[entity];
                        entity = undefined;
                        option = zuuluu.bind(entity)(report);
                        golfie = option.calculatePIPPositionFromVelocity;
                        report = {};
                        report['velocityX'] = yankee;
                        report['velocityY'] = offset;
                        report['absoluteX'] = verify;
                        report['absoluteY'] = michal;
                        offset = _closure3_slot8;
                        verify = offset.get;
                        verify = verify.bind(offset)();
                        report['windowDimensions'] = verify;
                        offset = _closure3_slot4;
                        verify = offset.get;
                        verify = verify.bind(offset)();
                        report['safeArea'] = verify;
                        report = golfie.bind(option)(report);
                        yankee = report.pipX;
                        offset = report.pipY;
                        report = _closure1_slot1;
                        tangon = 16;
                        golfie = oscard[tangon];
                        verify = report.bind(entity)(golfie);
                        option = _closure3_slot9;
                        golfie = {};
                        golfie['pipX'] = yankee;
                        golfie['pipY'] = offset;
                        golfie = verify.bind(entity)(option, golfie);
                        tangon = oscard[tangon];
                        golfie = report.bind(entity)(tangon);
                        tangon = _closure3_slot10;
                        michal = {};
                        option = false;
                        michal['gestureActive'] = option;
                        michal = golfie.bind(entity)(tangon, michal);
                        michal = 12;
                        michal = oscard[michal];
                        tangon = zuuluu.bind(entity)(michal);
                        zuuluu = tangon.runOnJS;
                        michal = 18;
                        michal = oscard[michal];
                        michal = report.bind(entity)(michal);
                        michal = michal.updateSourceTrackingView;
                        michal = zuuluu.bind(tangon)(michal);
                        michal = michal.bind(entity)();
                        return entity;
                    };
                    yankee = {};
                    sizing = 13;
                    sizing = offset[sizing];
                    sizing = foxtra.bind(verify)(sizing);
                    sizing = sizing.calculatePIPPositionFromVelocity;
                    yankee['calculatePIPPositionFromVelocity'] = sizing;
                    sizing = _closure3_slot8;
                    yankee['windowDimensions'] = sizing;
                    sizing = _closure3_slot4;
                    yankee['safeArea'] = sizing;
                    sizing = offset[golfie];
                    sizing = option.bind(verify)(sizing);
                    yankee['updateSharedValueIfChanged'] = sizing;
                    kiloes = _closure3_slot9;
                    yankee['wrapperDimensions'] = kiloes;
                    yankee['wrapperOffset'] = backup;
                    romeon = offset[romeon];
                    romeon = foxtra.bind(verify)(romeon);
                    romeon = romeon.runOnJS;
                    yankee['runOnJS'] = romeon;
                    romeon = 18;
                    romeon = offset[romeon];
                    romeon = option.bind(verify)(romeon);
                    romeon = romeon.updateSourceTrackingView;
                    yankee['updateSourceTrackingView'] = romeon;
                    michal['__closure'] = yankee;
                    yankee = 14664553478840.0;
                    michal['__workletHash'] = yankee;
                    yankee = _closure1_slot25;
                    michal['__initData'] = yankee;
                    report = zuuluu.bind(report)(michal);
                    zuuluu = report.onTouchesCancelled;
                    michal = function() { // Original name: n
                        zuuluu = _closure1_slot1;
                        michal = _closure1_slot2;
                        entity = 16;
                        michal = michal[entity];
                        entity = undefined;
                        tangon = zuuluu.bind(entity)(michal);
                        zuuluu = _closure3_slot12;
                        michal = {'active': false, 'pressed': false};
                        michal = tangon.bind(entity)(zuuluu, michal);
                        return entity;
                    };
                    yankee = {};
                    romeon = offset[golfie];
                    romeon = option.bind(verify)(romeon);
                    yankee['updateSharedValueIfChanged'] = romeon;
                    yankee['initialGestureOffset'] = oscard;
                    michal['__closure'] = yankee;
                    yankee = 11771025649835.0;
                    michal['__workletHash'] = yankee;
                    yankee = _closure1_slot26;
                    michal['__initData'] = yankee;
                    zuuluu = zuuluu.bind(report)(michal);
                    michal = zuuluu.onFinalize;
                    entity = function() { // Original name: t
                        zuuluu = _closure1_slot1;
                        michal = _closure1_slot2;
                        entity = 16;
                        michal = michal[entity];
                        entity = undefined;
                        tangon = zuuluu.bind(entity)(michal);
                        zuuluu = _closure3_slot12;
                        michal = {'active': false, 'pressed': false};
                        michal = tangon.bind(entity)(zuuluu, michal);
                        return entity;
                    };
                    report = {};
                    golfie = offset[golfie];
                    golfie = option.bind(verify)(golfie);
                    report['updateSharedValueIfChanged'] = golfie;
                    report['initialGestureOffset'] = oscard;
                    entity['__closure'] = report;
                    report = 14589135665299.0;
                    entity['__workletHash'] = report;
                    tangon = _closure1_slot27;
                    entity['__initData'] = tangon;
                    entity = michal.bind(zuuluu)(entity);
                    return entity;
                };
                oscard = backup.bind(kiloes)(entity, oscard);
                var _closure3_slot14 = oscard;
                entity = {};
                entity['multiPIPWrapperStyles'] = option;
                entity['mainPIPWrapperStyles'] = golfie;
                entity['secondaryPIPWrapperStyles'] = report;
                option = _closure1_slot4;
                golfie = option.useMemo;
                report = new Array(7);
                report[0] = foxtra;
                report[1] = romeon;
                report[2] = yankee;
                report[3] = offset;
                report[4] = verify;
                report[5] = tangon;
                report[6] = oscard;
                tangon = function() {
                    romeon = _closure1_slot0;
                    foxtra = _closure1_slot2;
                    golfie = 15;
                    entity = foxtra[golfie];
                    oscard = undefined;
                    entity = romeon.bind(oscard)(entity);
                    report = entity.Gesture;
                    tangon = report.Exclusive;
                    entity = foxtra[golfie];
                    entity = romeon.bind(oscard)(entity);
                    zuuluu = entity.Gesture;
                    entity = zuuluu.Tap;
                    offset = entity.bind(zuuluu)();
                    option = offset.enabled;
                    backup = _closure3_slot0;
                    zuuluu = _closure1_slot10;
                    zuuluu = zuuluu.IN_APP;
                    zuuluu = backup !== zuuluu;
                    option = option.bind(offset)(zuuluu);
                    zuuluu = option.maxDistance;
                    offset = 30;
                    kiloes = zuuluu.bind(option)(offset);
                    option = kiloes.onStart;
                    zuuluu = function() { // Original name: s
                        zuuluu = _closure1_slot0;
                        michal = _closure1_slot2;
                        entity = 12;
                        michal = michal[entity];
                        entity = undefined;
                        tangon = zuuluu.bind(entity)(michal);
                        zuuluu = tangon.runOnJS;
                        michal = _closure3_slot5;
                        zuuluu = zuuluu.bind(tangon)(michal);
                        michal = null;
                        michal = zuuluu.bind(entity)(michal);
                        return entity;
                    };
                    sizing = {};
                    yankee = 12;
                    output = foxtra[yankee];
                    output = romeon.bind(oscard)(output);
                    output = output.runOnJS;
                    sizing['runOnJS'] = output;
                    output = _closure3_slot5;
                    sizing['setFocused'] = output;
                    zuuluu['__closure'] = sizing;
                    sizing = 10703348418884.0;
                    zuuluu['__workletHash'] = sizing;
                    sizing = _closure1_slot28;
                    zuuluu['__initData'] = sizing;
                    kiloes = option.bind(kiloes)(zuuluu);
                    option = kiloes.numberOfTaps;
                    zuuluu = 2;
                    zuuluu = option.bind(kiloes)(zuuluu);
                    golfie = foxtra[golfie];
                    golfie = romeon.bind(oscard)(golfie);
                    option = golfie.Gesture;
                    golfie = option.Tap;
                    kiloes = golfie.bind(option)();
                    option = kiloes.enabled;
                    golfie = true;
                    option = option.bind(kiloes)(golfie);
                    golfie = option.maxDistance;
                    option = golfie.bind(option)(offset);
                    golfie = option.onStart;
                    michal = function() { // Original name: n
                        _fun00007: for(var _fun00008_ip = 0; ; ) switch(_fun00008_ip) {
 0:
                            tangon = _closure3_slot0;
                            zuuluu = _closure1_slot10;
                            zuuluu = zuuluu.IN_APP;
                            if(!(tangon !== zuuluu)) { _fun00008_ip = 140; continue _fun00007 }
 24:
                            tangon = _closure3_slot1;
                            zuuluu = tangon.get;
                            zuuluu = zuuluu.bind(tangon)();
                            tangon = zuuluu.mode;
                            zuuluu = _closure1_slot9;
                            zuuluu = zuuluu.HIDDEN;
                            if(!(tangon !== zuuluu)) { _fun00008_ip = 98; continue _fun00007 }
 56:
                            report = _closure1_slot0;
                            tangon = _closure1_slot2;
                            zuuluu = 12;
                            zuuluu = tangon[zuuluu];
                            tangon = undefined;
                            oscard = report.bind(tangon)(zuuluu);
                            report = oscard.runOnJS;
                            zuuluu = _closure3_slot2;
                            zuuluu = report.bind(oscard)(zuuluu);
                            zuuluu = zuuluu.bind(tangon)();
                            _fun00008_ip = 191; continue _fun00007;
 98:
                            report = _closure1_slot0;
                            tangon = _closure1_slot2;
                            zuuluu = 12;
                            zuuluu = tangon[zuuluu];
                            tangon = undefined;
                            oscard = report.bind(tangon)(zuuluu);
                            report = oscard.runOnJS;
                            zuuluu = _closure3_slot7;
                            zuuluu = report.bind(oscard)(zuuluu);
                            zuuluu = zuuluu.bind(tangon)();
                            _fun00008_ip = 191; continue _fun00007;
 140:
                            report = _closure1_slot0;
                            tangon = _closure1_slot2;
                            zuuluu = 12;
                            tangon = tangon[zuuluu];
                            zuuluu = undefined;
                            report = report.bind(zuuluu)(tangon);
                            tangon = report.runOnJS;
                            michal = _closure3_slot6;
                            michal = tangon.bind(report)(michal);
                            entity = _closure1_slot8;
                            entity = entity.PANEL;
                            entity = michal.bind(zuuluu)(entity);
 191:
                            entity = undefined;
                            return entity;
                        }
                    };
                    offset = {};
                    offset['type'] = backup;
                    backup = _closure1_slot10;
                    offset['VoicePanelPIPModes'] = backup;
                    yankee = foxtra[yankee];
                    yankee = romeon.bind(oscard)(yankee);
                    yankee = yankee.runOnJS;
                    offset['runOnJS'] = yankee;
                    yankee = _closure3_slot6;
                    offset['setMode'] = yankee;
                    yankee = _closure1_slot8;
                    offset['VoicePanelModes'] = yankee;
                    yankee = _closure3_slot1;
                    offset['controlsSpecs'] = yankee;
                    yankee = _closure1_slot9;
                    offset['VoicePanelControlsModes'] = yankee;
                    yankee = _closure3_slot7;
                    offset['showControls'] = yankee;
                    yankee = _closure3_slot2;
                    offset['hideControls'] = yankee;
                    michal['__closure'] = offset;
                    offset = 4031760443375.0;
                    michal['__workletHash'] = offset;
                    verify = _closure1_slot29;
                    michal['__initData'] = verify;
                    michal = golfie.bind(option)(michal);
                    entity = _closure3_slot14;
                    entity = entity.bind(oscard)();
                    entity = tangon.bind(report)(zuuluu, michal, entity);
                    return entity;
                };
                tangon = golfie.bind(option)(tangon, report);
                entity['mainPIPGesture'] = tangon;
                report = _closure1_slot4;
                tangon = report.useMemo;
                zuuluu = new Array(1);
                zuuluu[0] = oscard;
                michal = function() {
                    offset = _closure1_slot0;
                    yankee = _closure1_slot2;
                    entity = 15;
                    michal = yankee[entity];
                    report = undefined;
                    michal = offset.bind(report)(michal);
                    tangon = michal.Gesture;
                    zuuluu = tangon.Exclusive;
                    entity = yankee[entity];
                    entity = offset.bind(report)(entity);
                    michal = entity.Gesture;
                    entity = michal.Tap;
                    oscard = entity.bind(michal)();
                    michal = oscard.maxDistance;
                    entity = 30;
                    oscard = michal.bind(oscard)(entity);
                    michal = oscard.onStart;
                    entity = function() { // Original name: t
                        oscard = _closure1_slot0;
                        golfie = _closure1_slot2;
                        entity = 12;
                        zuuluu = golfie[entity];
                        entity = undefined;
                        report = oscard.bind(entity)(zuuluu);
                        tangon = report.runOnJS;
                        zuuluu = 19;
                        zuuluu = golfie[zuuluu];
                        zuuluu = oscard.bind(entity)(zuuluu);
                        zuuluu = zuuluu.updateActivityPanelMode;
                        zuuluu = tangon.bind(report)(zuuluu);
                        michal = _closure1_slot11;
                        michal = michal.PANEL;
                        michal = zuuluu.bind(entity)(michal);
                        return entity;
                    };
                    option = {};
                    verify = 12;
                    verify = yankee[verify];
                    verify = offset.bind(report)(verify);
                    verify = verify.runOnJS;
                    option['runOnJS'] = verify;
                    verify = 19;
                    verify = yankee[verify];
                    verify = offset.bind(report)(verify);
                    verify = verify.updateActivityPanelMode;
                    option['updateActivityPanelMode'] = verify;
                    verify = _closure1_slot11;
                    option['ActivityPanelModes'] = verify;
                    entity['__closure'] = option;
                    option = 525612728681.0;
                    entity['__workletHash'] = option;
                    golfie = _closure1_slot30;
                    entity['__initData'] = golfie;
                    michal = michal.bind(oscard)(entity);
                    entity = _closure3_slot14;
                    entity = entity.bind(report)();
                    entity = zuuluu.bind(tangon)(michal, entity);
                    return entity;
                };
                michal = tangon.bind(report)(michal, zuuluu);
                entity['secondaryPIPGesture'] = michal;
                return entity;
            };
            option = golfie.bind(tangon)(zuuluu);
            golfie = option.multiPIPWrapperStyles;
            output = option.mainPIPWrapperStyles;
            foxtra = option.secondaryPIPWrapperStyles;
            echoed = option.mainPIPGesture;
            result = option.secondaryPIPGesture;
            option = 20;
            option = sizing[option];
            option = offset.bind(tangon)(option);
            option = option.bind(tangon)(verify);
            kiloes = option.pushToTalk;
            option = 12;
            option = sizing[option];
            offset = backup.bind(tangon)(option);
            verify = offset.useAnimatedStyle;
            option = function() { // Original name: s
                entity = {};
                tangon = _closure1_slot0;
                zuuluu = _closure1_slot2;
                michal = 13;
                zuuluu = zuuluu[michal];
                michal = undefined;
                report = tangon.bind(michal)(zuuluu);
                tangon = report.getVoicePanelPIPBorderRadius;
                michal = _closure2_slot1;
                zuuluu = michal.width;
                michal = michal.height;
                michal = tangon.bind(report)(zuuluu, michal);
                entity['borderRadius'] = michal;
                return entity;
            };
            yankee = {};
            romeon = 13;
            romeon = sizing[romeon];
            romeon = backup.bind(tangon)(romeon);
            romeon = romeon.getVoicePanelPIPBorderRadius;
            yankee['getVoicePanelPIPBorderRadius'] = romeon;
            yankee['pipState'] = oscard;
            option['__closure'] = yankee;
            yankee = 9598016909682.0;
            option['__workletHash'] = yankee;
            yankee = _closure1_slot31;
            option['__initData'] = yankee;
            sizing = verify.bind(offset)(option);
            offset = _closure1_slot4;
            verify = offset.useMemo;
            option = new Array(1);
            option[0] = michal;
            michal = function() {
                entity = {'accessible': true, 'accessibilityLabel': null, 'accessibilityRole': 'button'};
                oscard = _closure1_slot0;
                golfie = _closure1_slot2;
                michal = 21;
                zuuluu = golfie[michal];
                report = undefined;
                zuuluu = oscard.bind(report)(zuuluu);
                tangon = zuuluu.intl;
                zuuluu = tangon.string;
                michal = golfie[michal];
                michal = oscard.bind(report)(michal);
                michal = michal.t;
                michal = michal.oN8bqa;
                michal = zuuluu.bind(tangon)(michal);
                entity['accessibilityLabel'] = michal;
                zuuluu = {};
                michal = 'activate';
                zuuluu['name'] = michal;
                michal = new Array(1);
                michal[0] = zuuluu;
                entity['accessibilityActions'] = michal;
                michal = function() { // Original name: onAccessibilityAction
                    zuuluu = _closure2_slot0;
                    entity = _closure1_slot8;
                    michal = entity.PANEL;
                    entity = undefined;
                    michal = zuuluu.bind(entity)(michal);
                    return entity;
                };
                entity['onAccessibilityAction'] = michal;
                return entity;
            };
            verify = verify.bind(offset)(michal, option);
            yankee = _closure1_slot4;
            offset = yankee.useMemo;
            option = function() {
                entity = {};
                michal = true;
                entity['accessible'] = michal;
                oscard = _closure1_slot0;
                golfie = _closure1_slot2;
                michal = 21;
                zuuluu = golfie[michal];
                report = undefined;
                zuuluu = oscard.bind(report)(zuuluu);
                tangon = zuuluu.intl;
                zuuluu = tangon.string;
                michal = golfie[michal];
                michal = oscard.bind(report)(michal);
                michal = michal.t;
                michal = michal.3ejJen;
                michal = zuuluu.bind(tangon)(michal);
                entity['accessibilityLabel'] = michal;
                zuuluu = {};
                michal = 'activate';
                zuuluu['name'] = michal;
                michal = new Array(1);
                michal[0] = zuuluu;
                entity['accessibilityActions'] = michal;
                michal = function() { // Original name: onAccessibilityAction
                    tangon = _closure1_slot0;
                    zuuluu = _closure1_slot2;
                    entity = 19;
                    zuuluu = zuuluu[entity];
                    entity = undefined;
                    tangon = tangon.bind(entity)(zuuluu);
                    zuuluu = tangon.updateActivityPanelMode;
                    michal = _closure1_slot11;
                    michal = michal.PANEL;
                    michal = zuuluu.bind(tangon)(michal);
                    return entity;
                };
                entity['onAccessibilityAction'] = michal;
                return entity;
            };
            michal = new Array(0);
            romeon = offset.bind(yankee)(option, michal);
            michal = _closure1_slot6;
            entity = function(argFoo) {
                entity = argFoo;
                entity = entity.isActivityFocused;
                return entity;
            };
            michal = michal.bind(tangon)(entity);
            if(!kiloes) { _fun00002_ip = 357; continue _fun00001 }
 334:
            entity = _closure1_slot10;
            entity = entity.IN_PANEL;
            entity = zuuluu !== entity;
            if(entity) { _fun00002_ip = 354; continue _fun00001 }
 351:
            entity = michal;
 354:
            kiloes = entity;
 357:
            zuuluu = _closure1_slot13;
            sequen = _closure1_slot1;
            record = _closure1_slot2;
            offset = 22;
            entity = record[offset];
            michal = sequen.bind(tangon)(entity);
            entity = {};
            entity['ref'] = report;
            yankee = 'box-none';
            entity['pointerEvents'] = yankee;
            report = _closure1_slot18;
            option = report.multiPIPContainer;
            report = new Array(2);
            report[0] = option;
            report[1] = golfie;
            entity['style'] = report;
            report = _closure1_slot17;
            entity['layout'] = report;
            option = _closure1_slot13;
            report = record[offset];
            golfie = sequen.bind(tangon)(report);
            report = {};
            backup = _closure1_slot18;
            source = backup.pipContentWrapper;
            backup = new Array(3);
            backup[0] = source;
            source = _closure1_slot18;
            source = source.inAppElevationShadow;
            backup[1] = source;
            backup[2] = output;
            report['style'] = backup;
            report['pointerEvents'] = yankee;
            yankee = _closure1_slot17;
            report['layout'] = yankee;
            papara = report;
            cntext = verify;
            verify = copyDataProperties(papara, cntext);
            output = _closure1_slot12;
            yankee = _closure1_slot0;
            backup = 15;
            verify = record[backup];
            verify = yankee.bind(tangon)(verify);
            yankee = verify.GestureDetector;
            verify = {};
            verify['gesture'] = echoed;
            ctrled = _closure1_slot12;
            echoed = record[offset];
            source = sequen.bind(tangon)(echoed);
            echoed = {};
            vacuum = _closure1_slot18;
            config = vacuum.pipMask;
            vacuum = new Array(2);
            vacuum[0] = config;
            vacuum[1] = sizing;
            echoed['style'] = vacuum;
            vacuum = _closure1_slot17;
            echoed['layout'] = vacuum;
            config = _closure1_slot12;
            vacuum = 23;
            vacuum = record[vacuum];
            sequen = sequen.bind(tangon)(vacuum);
            vacuum = {};
            vacuum = config.bind(tangon)(sequen, vacuum);
            echoed['children'] = vacuum;
            echoed = ctrled.bind(tangon)(source, echoed);
            verify['children'] = echoed;
            yankee = output.bind(tangon)(yankee, verify);
            verify = new Array(2);
            verify[0] = yankee;
            yankee = null;
            if(!kiloes) { _fun00002_ip = 684; continue _fun00001 }
 652:
            echoed = _closure1_slot12;
            output = _closure1_slot1;
            source = _closure1_slot2;
            kiloes = 24;
            kiloes = source[kiloes];
            output = output.bind(tangon)(kiloes);
            kiloes = {};
            yankee = echoed.bind(tangon)(output, kiloes);
 684:
            verify[1] = yankee;
            yankee = 'children';
            report[yankee] = verify;
            golfie = option.bind(tangon)(golfie, report);
            report = new Array(2);
            report[0] = golfie;
            oscard = oscard.showSecondaryPIP;
            if(!oscard) { _fun00002_ip = 928; continue _fun00001 }
 723:
            verify = _closure1_slot12;
            source = _closure1_slot1;
            vacuum = _closure1_slot2;
            output = 25;
            golfie = vacuum[output];
            option = source.bind(tangon)(golfie);
            golfie = {};
            golfie['style'] = foxtra;
            papara = golfie;
            cntext = romeon;
            romeon = copyDataProperties(papara, cntext);
            foxtra = _closure1_slot12;
            offset = vacuum[offset];
            romeon = source.bind(tangon)(offset);
            offset = {};
            kiloes = _closure1_slot18;
            echoed = kiloes.pipMask;
            kiloes = new Array(2);
            kiloes[0] = echoed;
            kiloes[1] = sizing;
            offset['style'] = kiloes;
            sizing = _closure1_slot12;
            kiloes = _closure1_slot0;
            backup = vacuum[backup];
            backup = kiloes.bind(tangon)(backup);
            kiloes = backup.GestureDetector;
            backup = {};
            backup['gesture'] = result;
            echoed = _closure1_slot12;
            output = vacuum[output];
            result = source.bind(tangon)(output);
            output = {};
            ctrled = _closure1_slot5;
            ctrled = ctrled.absoluteFill;
            output['style'] = ctrled;
            ctrled = _closure1_slot12;
            update = 26;
            update = vacuum[update];
            source = source.bind(tangon)(update);
            update = {};
            update = ctrled.bind(tangon)(source, update);
            output['children'] = update;
            output = echoed.bind(tangon)(result, output);
            backup['children'] = output;
            backup = sizing.bind(tangon)(kiloes, backup);
            offset['children'] = backup;
            offset = foxtra.bind(tangon)(romeon, offset);
            golfie[yankee] = offset;
            oscard = verify.bind(tangon)(option, golfie);
 928:
            report[1] = oscard;
            entity['children'] = report;
            entity = zuuluu.bind(tangon)(michal, entity);
            return entity;
        }
    };
    var _closure1_slot33 = entity;
    entity = function(argFoo, argBar, argBaz, argCor) { // Original name: renderPIPWrapper
        report = _closure1_slot12;
        tangon = _closure1_slot32;
        zuuluu = {};
        entity = argBar;
        zuuluu['type'] = entity;
        entity = argBaz;
        zuuluu['transitionState'] = entity;
        entity = argCor;
        zuuluu['transitionCleanUp'] = entity;
        michal = undefined;
        entity = argFoo;
        entity = report.bind(michal)(tangon, zuuluu, entity);
        return entity;
    };
    var _closure1_slot34 = entity;
    entity = global;
    verify = entity.Object;
    golfie = verify.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(verify)(zuuluu, entity, tangon);
    entity = 0;
    tangon = oscard[entity];
    entity = undefined;
    tangon = option.bind(entity)(tangon);
    var _closure1_slot3 = tangon;
    tangon = 1;
    golfie = oscard[tangon];
    tangon = argCor;
    golfie = tangon.bind(entity)(golfie);
    var _closure1_slot4 = golfie;
    tangon = 2;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    verify = tangon.StyleSheet;
    var _closure1_slot5 = verify;
    tangon = tangon.Platform;
    tangon = 3;
    tangon = oscard[tangon];
    tangon = option.bind(entity)(tangon);
    var _closure1_slot6 = tangon;
    tangon = 4;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    option = tangon.DRAWER_SPRING_PHYSICS;
    var _closure1_slot7 = option;
    option = tangon.VoicePanelModes;
    var _closure1_slot8 = option;
    yankee = tangon.SECONDARY_PIP_TOP_MARGIN;
    tangon = 5;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.VoicePanelControlsModes;
    var _closure1_slot9 = tangon;
    tangon = 6;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.VoicePanelPIPModes;
    var _closure1_slot10 = tangon;
    tangon = 7;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.ActivityPanelModes;
    var _closure1_slot11 = tangon;
    tangon = 8;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    option = tangon.jsx;
    var _closure1_slot12 = option;
    tangon = tangon.jsxs;
    var _closure1_slot13 = tangon;
    tangon = {'mass': 0.3, 'damping': 80, 'stiffness': 150};
    var _closure1_slot14 = tangon;
    tangon = {};
    option = 100;
    tangon['duration'] = option;
    var _closure1_slot15 = tangon;
    tangon = {};
    option = 'function layoutTransition_VoicePanelPIPTsx1(values){const{withSpring,LAYOUT_PHYSICS}=this.__closure;return{animations:{originX:withSpring(values.targetOriginX,LAYOUT_PHYSICS),originY:withSpring(values.targetOriginY,LAYOUT_PHYSICS),width:withSpring(values.targetWidth,LAYOUT_PHYSICS),height:withSpring(values.targetHeight,LAYOUT_PHYSICS)},initialValues:{originX:values.currentOriginX,originY:values.currentOriginY,width:values.currentWidth,height:values.currentHeight}};}';
    tangon['code'] = option;
    var _closure1_slot16 = tangon;
    tangon = function() {
        entity = function(argFoo) { // Original name: layoutTransition
            zuuluu = argFoo;
            entity = {};
            michal = {};
            golfie = _closure1_slot0;
            option = _closure1_slot2;
            report = 9;
            verify = option[report];
            oscard = undefined;
            romeon = golfie.bind(oscard)(verify);
            yankee = romeon.withSpring;
            offset = zuuluu.targetOriginX;
            verify = _closure1_slot14;
            verify = yankee.bind(romeon)(offset, verify);
            michal['originX'] = verify;
            verify = option[report];
            romeon = golfie.bind(oscard)(verify);
            yankee = romeon.withSpring;
            offset = zuuluu.targetOriginY;
            verify = _closure1_slot14;
            verify = yankee.bind(romeon)(offset, verify);
            michal['originY'] = verify;
            verify = option[report];
            romeon = golfie.bind(oscard)(verify);
            yankee = romeon.withSpring;
            offset = zuuluu.targetWidth;
            verify = _closure1_slot14;
            verify = yankee.bind(romeon)(offset, verify);
            michal['width'] = verify;
            report = option[report];
            golfie = golfie.bind(oscard)(report);
            oscard = golfie.withSpring;
            report = zuuluu.targetHeight;
            tangon = _closure1_slot14;
            tangon = oscard.bind(golfie)(report, tangon);
            michal['height'] = tangon;
            entity['animations'] = michal;
            michal = {};
            tangon = zuuluu.currentOriginX;
            michal['originX'] = tangon;
            tangon = zuuluu.currentOriginY;
            michal['originY'] = tangon;
            tangon = zuuluu.currentWidth;
            michal['width'] = tangon;
            zuuluu = zuuluu.currentHeight;
            michal['height'] = zuuluu;
            entity['initialValues'] = michal;
            return entity;
        };
        zuuluu = {};
        oscard = _closure1_slot0;
        report = _closure1_slot2;
        tangon = 9;
        report = report[tangon];
        tangon = undefined;
        tangon = oscard.bind(tangon)(report);
        tangon = tangon.withSpring;
        zuuluu['withSpring'] = tangon;
        tangon = _closure1_slot14;
        zuuluu['LAYOUT_PHYSICS'] = tangon;
        entity['__closure'] = zuuluu;
        zuuluu = 9346092352642.0;
        entity['__workletHash'] = zuuluu;
        michal = _closure1_slot16;
        entity['__initData'] = michal;
        return entity;
    };
    tangon = tangon.bind(entity)();
    var _closure1_slot17 = tangon;
    option = verify.create;
    tangon = {};
    offset = {};
    romeon = 'black';
    offset['backgroundColor'] = romeon;
    tangon['pipContentWrapper'] = offset;
    offset = {};
    tangon['noElevationShadow'] = offset;
    offset = {};
    tangon['inAppElevationShadow'] = offset;
    offset = {};
    tangon['inPanelElevationShadow'] = offset;
    offset = {};
    kiloes = verify.absoluteFillObject;
    sizing = offset;
    romeon = copyDataProperties(sizing, kiloes);
    foxtra = 'hidden';
    romeon = 'overflow';
    offset[romeon] = foxtra;
    tangon['pipMask'] = offset;
    offset = {'position': 'absolute', 'zIndex': 10, 'flexDirection': 'column', 'alignItems': 'center'};
    offset['gap'] = yankee;
    tangon['multiPIPContainer'] = offset;
    tangon = option.bind(verify)(tangon);
    var _closure1_slot18 = tangon;
    tangon = {};
    option = "function VoicePanelPIPTsx2(){const{pipState,getClampedPIPPosition,wrapperDimensions,windowDimensions,safeArea,pipAvoidanceSpecs,initialGestureOffset,withTiming,opacity,OPACITY_TIMING,withSpring,DRAWER_SPRING_PHYSICS,LAYOUT_PHYSICS,getVoicePanelPIPBorderRadius}=this.__closure;const width=pipState.width;const height=!pipState.showSecondaryPIP?pipState.height:pipState.containerHeight;const{x:x,y:y}=getClampedPIPPosition({pipX:wrapperDimensions.get().pipX,pipY:wrapperDimensions.get().pipY,width:width,height:height,windowDimensions:windowDimensions.get(),safeArea:safeArea.get(),bottomAvoidanceRegion:pipAvoidanceSpecs.get().bottom,topAvoidanceRegion:pipAvoidanceSpecs.get().top,positionOffset:initialGestureOffset.get().active?initialGestureOffset.get():undefined});return{width:width,height:height,opacity:withTiming(opacity.get(),OPACITY_TIMING,'animate-never'),transform:[{translateX:withSpring(x,initialGestureOffset.get().active?DRAWER_SPRING_PHYSICS:LAYOUT_PHYSICS)},{translateY:withSpring(y,initialGestureOffset.get().active?DRAWER_SPRING_PHYSICS:LAYOUT_PHYSICS)}],borderRadius:getVoicePanelPIPBorderRadius(width,height)};}";
    tangon['code'] = option;
    var _closure1_slot19 = tangon;
    tangon = {};
    option = 'function VoicePanelPIPTsx3(){const{pipState,getVoicePanelPIPBorderRadius}=this.__closure;const{width:width,height:height}=pipState;return{width:width,height:height,borderRadius:getVoicePanelPIPBorderRadius(width,height)};}';
    tangon['code'] = option;
    var _closure1_slot20 = tangon;
    tangon = {};
    option = 'function VoicePanelPIPTsx4({absoluteX:absoluteX,absoluteY:absoluteY}){const{initialGestureOffset}=this.__closure;initialGestureOffset.set({x:0,y:0,absoluteX:absoluteX,absoluteY:absoluteY,active:false,pressed:true});}';
    tangon['code'] = option;
    var _closure1_slot21 = tangon;
    tangon = {};
    option = 'function VoicePanelPIPTsx5(){const{updateSharedValueIfChanged,initialGestureOffset}=this.__closure;updateSharedValueIfChanged(initialGestureOffset,{active:false,pressed:false});}';
    tangon['code'] = option;
    var _closure1_slot22 = tangon;
    tangon = {};
    option = 'function VoicePanelPIPTsx6(event,manager){const{State,initialGestureOffset,MIN_GESTURE_START,updateSharedValueIfChanged,wrapperOffset,runOnJS,triggerIOSHaptic}=this.__closure;if(event.state!==State.BEGAN||initialGestureOffset.get().active)return;const{absoluteY:absoluteY,absoluteX:absoluteX}=event.changedTouches[0];if(Math.abs(initialGestureOffset.get().absoluteX-absoluteX)>MIN_GESTURE_START||Math.abs(initialGestureOffset.get().absoluteY-absoluteY)>MIN_GESTURE_START){initialGestureOffset.set({x:0,y:0,absoluteX:absoluteX,absoluteY:absoluteY,pressed:true,active:true});updateSharedValueIfChanged(wrapperOffset,{gestureActive:true,x:0,y:0});manager.activate();runOnJS(triggerIOSHaptic)();}}';
    tangon['code'] = option;
    var _closure1_slot23 = tangon;
    tangon = {};
    option = 'function VoicePanelPIPTsx7({absoluteX:absoluteX,absoluteY:absoluteY}){const{updateSharedValueIfChanged,initialGestureOffset}=this.__closure;updateSharedValueIfChanged(initialGestureOffset,{x:absoluteX-initialGestureOffset.get().absoluteX,y:absoluteY-initialGestureOffset.get().absoluteY});}';
    tangon['code'] = option;
    var _closure1_slot24 = tangon;
    tangon = {};
    option = 'function VoicePanelPIPTsx8({velocityX:velocityX,velocityY:velocityY,absoluteX:absoluteX,absoluteY:absoluteY}){const{calculatePIPPositionFromVelocity,windowDimensions,safeArea,updateSharedValueIfChanged,wrapperDimensions,wrapperOffset,runOnJS,updateSourceTrackingView}=this.__closure;const{pipX:pipX,pipY:pipY}=calculatePIPPositionFromVelocity({velocityX:velocityX,velocityY:velocityY,absoluteX:absoluteX,absoluteY:absoluteY,windowDimensions:windowDimensions.get(),safeArea:safeArea.get()});updateSharedValueIfChanged(wrapperDimensions,{pipX:pipX,pipY:pipY});updateSharedValueIfChanged(wrapperOffset,{gestureActive:false});runOnJS(updateSourceTrackingView)();}';
    tangon['code'] = option;
    var _closure1_slot25 = tangon;
    tangon = {};
    option = 'function VoicePanelPIPTsx9(){const{updateSharedValueIfChanged,initialGestureOffset}=this.__closure;updateSharedValueIfChanged(initialGestureOffset,{active:false,pressed:false});}';
    tangon['code'] = option;
    var _closure1_slot26 = tangon;
    tangon = {};
    option = 'function VoicePanelPIPTsx10(){const{updateSharedValueIfChanged,initialGestureOffset}=this.__closure;updateSharedValueIfChanged(initialGestureOffset,{active:false,pressed:false});}';
    tangon['code'] = option;
    var _closure1_slot27 = tangon;
    tangon = {};
    option = 'function VoicePanelPIPTsx11(){const{runOnJS,setFocused}=this.__closure;runOnJS(setFocused)(null);}';
    tangon['code'] = option;
    var _closure1_slot28 = tangon;
    tangon = {};
    option = 'function VoicePanelPIPTsx12(){const{type,VoicePanelPIPModes,runOnJS,setMode,VoicePanelModes,controlsSpecs,VoicePanelControlsModes,showControls,hideControls}=this.__closure;if(type===VoicePanelPIPModes.IN_APP){runOnJS(setMode)(VoicePanelModes.PANEL);}else{if(controlsSpecs.get().mode===VoicePanelControlsModes.HIDDEN){runOnJS(showControls)();}else{runOnJS(hideControls)();}}}';
    tangon['code'] = option;
    var _closure1_slot29 = tangon;
    tangon = {};
    option = 'function VoicePanelPIPTsx13(){const{runOnJS,updateActivityPanelMode,ActivityPanelModes}=this.__closure;runOnJS(updateActivityPanelMode)(ActivityPanelModes.PANEL);}';
    tangon['code'] = option;
    var _closure1_slot30 = tangon;
    tangon = {};
    option = 'function VoicePanelPIPTsx14(){const{getVoicePanelPIPBorderRadius,pipState}=this.__closure;return{borderRadius:getVoicePanelPIPBorderRadius(pipState.width,pipState.height)};}';
    tangon['code'] = option;
    var _closure1_slot31 = tangon;
    option = golfie.memo;
    tangon = function(argFoo) {
        _fun00009: for(var _fun00010_ip = 0; ; ) switch(_fun00010_ip) {
 0:
            michal = argFoo;
            oscard = michal.type;
            offset = michal.transitionState;
            var _closure2_slot0 = offset;
            verify = michal.transitionCleanUp;
            var _closure2_slot1 = verify;
            report = undefined;
            var _closure2_slot2 = report;
            golfie = _closure1_slot4;
            tangon = golfie.useState;
            zuuluu = _closure1_slot10;
            zuuluu = zuuluu.IN_PANEL;
            zuuluu = oscard === zuuluu;
            if(zuuluu) { _fun00010_ip = 101; continue _fun00009 }
 65:
            yankee = _closure1_slot0;
            romeon = _closure1_slot2;
            option = 27;
            option = romeon[option];
            option = yankee.bind(report)(option);
            option = option.TransitionStates;
            option = option.MOUNTED;
            zuuluu = offset === option;
 101:
            golfie = tangon.bind(golfie)(zuuluu);
            tangon = _closure1_slot3;
            zuuluu = 2;
            golfie = tangon.bind(report)(golfie, zuuluu);
            zuuluu = 0;
            zuuluu = golfie[zuuluu];
            tangon = 1;
            tangon = golfie[tangon];
            _closure2_slot2 = tangon;
            yankee = _closure1_slot4;
            option = yankee.useEffect;
            golfie = function() {
                michal = global;
                report = michal.setTimeout;
                tangon = undefined;
                zuuluu = function() {
                    zuuluu = _closure2_slot2;
                    michal = undefined;
                    entity = true;
                    entity = zuuluu.bind(michal)(entity);
                    return entity;
                };
                michal = 400;
                michal = report.bind(tangon)(zuuluu, michal);
                var _closure3_slot0 = michal;
                entity = function() {
                    entity = global;
                    zuuluu = entity.clearTimeout;
                    michal = _closure3_slot0;
                    entity = undefined;
                    michal = zuuluu.bind(entity)(michal);
                    return entity;
                };
                return entity;
            };
            tangon = new Array(0);
            tangon = option.bind(yankee)(golfie, tangon);
            option = _closure1_slot4;
            golfie = option.useEffect;
            tangon = new Array(2);
            tangon[0] = offset;
            tangon[1] = verify;
            entity = function() {
                _fun00011: for(var _fun00012_ip = 0; ; ) switch(_fun00012_ip) {
 0:
                    zuuluu = _closure2_slot0;
                    tangon = _closure1_slot0;
                    michal = _closure1_slot2;
                    entity = 27;
                    michal = michal[entity];
                    entity = undefined;
                    michal = tangon.bind(entity)(michal);
                    michal = michal.TransitionStates;
                    michal = michal.YEETED;
                    if(!(zuuluu === michal)) { _fun00012_ip = 74; continue _fun00011 }
 48:
                    michal = global;
                    tangon = michal.setTimeout;
                    zuuluu = function() {
                        michal = _closure2_slot1;
                        entity = undefined;
                        michal = michal.bind(entity)();
                        return entity;
                    };
                    michal = 17;
                    michal = tangon.bind(entity)(zuuluu, michal);
 74:
                    return entity;
                }
            };
            entity = golfie.bind(option)(entity, tangon);
            entity = null;
            if(!zuuluu) { _fun00010_ip = 221; continue _fun00009 }
 201:
            tangon = _closure1_slot12;
            zuuluu = _closure1_slot33;
            michal = {};
            michal['type'] = oscard;
            entity = tangon.bind(report)(zuuluu, michal);
 221:
            return entity;
        }
    };
    tangon = option.bind(golfie)(tangon);
    var _closure1_slot32 = tangon;
    tangon = golfie.memo;
    michal = function() { // Original name: VoicePanelPIPWrapper
        michal = _closure1_slot0;
        golfie = _closure1_slot2;
        entity = 11;
        entity = golfie[entity];
        tangon = undefined;
        zuuluu = michal.bind(tangon)(entity);
        entity = zuuluu.usePIPState;
        entity = entity.bind(zuuluu)();
        oscard = entity.mode;
        zuuluu = _closure1_slot12;
        entity = 27;
        entity = golfie[entity];
        entity = michal.bind(tangon)(entity);
        michal = entity.TransitionItem;
        entity = {};
        entity['item'] = oscard;
        report = _closure1_slot34;
        entity['renderItem'] = report;
        entity = zuuluu.bind(tangon)(michal, entity);
        return entity;
    };
    michal = tangon.bind(golfie)(michal);
    tangon = 28;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/voice_panel/native/pip/VoicePanelPIP.tsx';
    tangon = report.bind(oscard)(tangon);
    zuuluu['default'] = michal;
    return entity;
})();