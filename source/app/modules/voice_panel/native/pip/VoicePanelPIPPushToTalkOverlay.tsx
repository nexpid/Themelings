// app/modules/voice_panel/native/pip/VoicePanelPIPPushToTalkOverlay.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    report = argBar;
    yankee = argBaz;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    var _closure1_slot1 = yankee;
    var _closure1_slot2 = oscard;
    entity = global;
    option = entity.Object;
    golfie = option.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(option)(zuuluu, entity, tangon);
    entity = 0;
    tangon = oscard[entity];
    entity = undefined;
    tangon = yankee.bind(entity)(tangon);
    var _closure1_slot3 = tangon;
    tangon = 1;
    golfie = oscard[tangon];
    tangon = argCor;
    tangon = tangon.bind(entity)(golfie);
    var _closure1_slot4 = tangon;
    tangon = 2;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    romeon = tangon.StyleSheet;
    tangon = 3;
    tangon = oscard[tangon];
    tangon = yankee.bind(entity)(tangon);
    var _closure1_slot5 = tangon;
    tangon = 4;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.PUSH_TO_TALK_PIP_PHYSICS;
    var _closure1_slot6 = tangon;
    tangon = 5;
    golfie = oscard[tangon];
    golfie = report.bind(entity)(golfie);
    golfie = golfie.jsx;
    var _closure1_slot7 = golfie;
    golfie = oscard[tangon];
    golfie = report.bind(entity)(golfie);
    golfie = golfie.Fragment;
    var _closure1_slot8 = golfie;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.jsxs;
    var _closure1_slot9 = tangon;
    tangon = 6;
    golfie = oscard[tangon];
    verify = yankee.bind(entity)(golfie);
    option = verify.createAnimatedComponent;
    golfie = 7;
    golfie = oscard[golfie];
    golfie = yankee.bind(entity)(golfie);
    golfie = option.bind(verify)(golfie);
    var _closure1_slot10 = golfie;
    tangon = oscard[tangon];
    option = yankee.bind(entity)(tangon);
    golfie = option.createAnimatedComponent;
    tangon = 8;
    tangon = oscard[tangon];
    tangon = yankee.bind(entity)(tangon);
    tangon = golfie.bind(option)(tangon);
    var _closure1_slot11 = tangon;
    tangon = {'top': 6, 'bottom': 6, 'left': 6, 'right': 6};
    var _closure1_slot12 = tangon;
    tangon = 9;
    tangon = oscard[tangon];
    option = report.bind(entity)(tangon);
    golfie = option.createStyles;
    tangon = {};
    verify = {'position': 'absolute', 'width': 32, 'height': 32, 'alignItems': 'center', 'justifyContent': 'center'};
    offset = 10;
    foxtra = oscard[offset];
    foxtra = yankee.bind(entity)(foxtra);
    foxtra = foxtra.radii;
    foxtra = foxtra.round;
    verify['borderRadius'] = foxtra;
    tangon['iconContainer'] = verify;
    verify = {};
    kiloes = romeon.absoluteFillObject;
    sizing = verify;
    romeon = copyDataProperties(sizing, kiloes);
    offset = oscard[offset];
    offset = yankee.bind(entity)(offset);
    offset = offset.colors;
    yankee = offset.BLACK;
    offset = 'backgroundColor';
    verify[offset] = yankee;
    tangon['overlay'] = verify;
    tangon = golfie.bind(option)(tangon);
    var _closure1_slot13 = tangon;
    tangon = {};
    golfie = "function VoicePanelPIPPushToTalkOverlayTsx1(){const{isPushingToTalk,EXPANDED_ICON_SIZE,BASE_ICON_SIZE,withSpring,PUSH_TO_TALK_PIP_PHYSICS,white}=this.__closure;const padding=isPushingToTalk.get()?8*EXPANDED_ICON_SIZE/BASE_ICON_SIZE+8:8;return{right:withSpring(padding,PUSH_TO_TALK_PIP_PHYSICS),bottom:withSpring(padding,PUSH_TO_TALK_PIP_PHYSICS),transform:[{scale:withSpring(isPushingToTalk.get()?EXPANDED_ICON_SIZE/BASE_ICON_SIZE:1,PUSH_TO_TALK_PIP_PHYSICS)}],backgroundColor:withSpring(isPushingToTalk.get()?white:'rgba(0, 0, 0, 0.54)',PUSH_TO_TALK_PIP_PHYSICS)};}";
    tangon['code'] = golfie;
    var _closure1_slot14 = tangon;
    tangon = {};
    golfie = 'function VoicePanelPIPPushToTalkOverlayTsx2(){const{withSpring,isPushingToTalk,black,white,PUSH_TO_TALK_PIP_PHYSICS}=this.__closure;return{tintColor:withSpring(isPushingToTalk.get()?black:white,PUSH_TO_TALK_PIP_PHYSICS)};}';
    tangon['code'] = golfie;
    var _closure1_slot15 = tangon;
    tangon = {};
    golfie = 'function VoicePanelPIPPushToTalkOverlayTsx3(){const{withSpring,isPushingToTalk,PUSH_TO_TALK_PIP_PHYSICS,getVoicePanelPIPBorderRadius,pipState}=this.__closure;return{opacity:withSpring(isPushingToTalk.get()?0.5:0,PUSH_TO_TALK_PIP_PHYSICS),borderRadius:getVoicePanelPIPBorderRadius(pipState.width,pipState.height)};}';
    tangon['code'] = golfie;
    var _closure1_slot16 = tangon;
    tangon = {};
    golfie = 'function VoicePanelPIPPushToTalkOverlayTsx4(event,success){const{runOnJS,handlePushToTalk}=this.__closure;if(!success){return;}runOnJS(handlePushToTalk)(false);}';
    tangon['code'] = golfie;
    var _closure1_slot17 = tangon;
    tangon = {};
    golfie = 'function VoicePanelPIPPushToTalkOverlayTsx5(){const{runOnJS,handlePushToTalk}=this.__closure;runOnJS(handlePushToTalk)(true);}';
    tangon['code'] = golfie;
    var _closure1_slot18 = tangon;
    tangon = {};
    golfie = 'function VoicePanelPIPPushToTalkOverlayTsx6(){const{runOnJS,handlePushToTalk}=this.__closure;runOnJS(handlePushToTalk)(false);}';
    tangon['code'] = golfie;
    var _closure1_slot19 = tangon;
    tangon = 16;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/voice_panel/native/pip/VoicePanelPIPPushToTalkOverlay.tsx';
    tangon = report.bind(oscard)(tangon);
    michal = function() { // Original name: VoicePanelPIPPushToTalkOverlay
        golfie = _closure1_slot0;
        kiloes = _closure1_slot2;
        michal = 11;
        michal = kiloes[michal];
        tangon = undefined;
        zuuluu = golfie.bind(tangon)(michal);
        michal = zuuluu.usePIPState;
        verify = michal.bind(zuuluu)();
        var _closure2_slot0 = verify;
        michal = _closure1_slot13;
        romeon = michal.bind(tangon)();
        michal = function() { // Original name: usePushToTalk
            report = _closure1_slot0;
            tangon = _closure1_slot2;
            zuuluu = 6;
            tangon = tangon[zuuluu];
            zuuluu = undefined;
            report = report.bind(zuuluu)(tangon);
            zuuluu = report.useSharedValue;
            tangon = false;
            zuuluu = zuuluu.bind(report)(tangon);
            var _closure3_slot0 = zuuluu;
            report = _closure1_slot4;
            michal = report.useRef;
            michal = michal.bind(report)(tangon);
            var _closure3_slot1 = michal;
            tangon = report.useCallback;
            michal = new Array(1);
            michal[0] = zuuluu;
            entity = function(argFoo) {
                _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
                    zuuluu = argFoo;
                    var _closure4_slot0 = zuuluu;
                    tangon = _closure3_slot1;
                    tangon = tangon.current;
                    if(!(zuuluu !== tangon)) { _fun00002_ip = 84; continue _fun00001 }
 25:
                    tangon = _closure3_slot1;
                    tangon['current'] = zuuluu;
                    report = _closure1_slot5;
                    tangon = report.getMediaEngine;
                    report = tangon.bind(report)();
                    tangon = report.eachConnection;
                    michal = function(argFoo) {
                        zuuluu = argFoo;
                        michal = zuuluu.setForceAudioInput;
                        entity = _closure4_slot0;
                        entity = michal.bind(zuuluu)(entity);
                        return entity;
                    };
                    michal = tangon.bind(report)(michal);
                    michal = _closure3_slot0;
                    entity = michal.set;
                    entity = entity.bind(michal)(zuuluu);
 84:
                    entity = undefined;
                    return entity;
                }
            };
            michal = tangon.bind(report)(entity, michal);
            entity = new Array(2);
            entity[0] = zuuluu;
            entity[1] = michal;
            return entity;
        };
        report = michal.bind(tangon)();
        zuuluu = _closure1_slot3;
        michal = 2;
        zuuluu = zuuluu.bind(tangon)(report, michal);
        michal = 0;
        output = zuuluu[michal];
        var _closure2_slot1 = output;
        michal = 1;
        oscard = zuuluu[michal];
        var _closure2_slot2 = oscard;
        backup = _closure1_slot1;
        michal = 10;
        zuuluu = kiloes[michal];
        zuuluu = backup.bind(tangon)(zuuluu);
        zuuluu = zuuluu.unsafe_rawColors;
        echoed = zuuluu.WHITE_500;
        var _closure2_slot3 = echoed;
        michal = kiloes[michal];
        michal = backup.bind(tangon)(michal);
        michal = michal.unsafe_rawColors;
        update = michal.BLACK_500;
        var _closure2_slot4 = update;
        michal = 6;
        zuuluu = kiloes[michal];
        option = golfie.bind(tangon)(zuuluu);
        report = option.useAnimatedStyle;
        zuuluu = function() { // Original name: o
            _fun00003: for(var _fun00004_ip = 0; ; ) switch(_fun00004_ip) {
 0:
                michal = _closure2_slot1;
                entity = michal.get;
                entity = entity.bind(michal)();
                yankee = 8;
                if(!entity) { _fun00004_ip = 25; continue _fun00003 }
 22:
                yankee = 20;
 25:
                entity = {};
                option = _closure1_slot0;
                zuuluu = _closure1_slot2;
                golfie = 12;
                tangon = zuuluu[golfie];
                report = undefined;
                verify = option.bind(report)(tangon);
                tangon = verify.withSpring;
                offset = _closure1_slot6;
                tangon = tangon.bind(verify)(yankee, offset);
                entity['right'] = tangon;
                tangon = zuuluu[golfie];
                verify = option.bind(report)(tangon);
                tangon = verify.withSpring;
                tangon = tangon.bind(verify)(yankee, offset);
                entity['bottom'] = tangon;
                tangon = {};
                zuuluu = zuuluu[golfie];
                offset = option.bind(report)(zuuluu);
                verify = offset.withSpring;
                option = _closure2_slot1;
                zuuluu = option.get;
                zuuluu = zuuluu.bind(option)();
                option = 1;
                if(!zuuluu) { _fun00004_ip = 140; continue _fun00003 }
 130:
                option = 1.5;
 140:
                zuuluu = _closure1_slot6;
                zuuluu = verify.bind(offset)(option, zuuluu);
                tangon['scale'] = zuuluu;
                zuuluu = new Array(1);
                zuuluu[0] = tangon;
                entity['transform'] = zuuluu;
                tangon = _closure1_slot0;
                zuuluu = _closure1_slot2;
                zuuluu = zuuluu[golfie];
                report = tangon.bind(report)(zuuluu);
                tangon = report.withSpring;
                golfie = _closure2_slot1;
                zuuluu = golfie.get;
                golfie = zuuluu.bind(golfie)();
                zuuluu = 'rgba(0, 0, 0, 0.54)';
                if(!golfie) { _fun00004_ip = 215; continue _fun00003 }
 211:
                zuuluu = _closure2_slot3;
 215:
                michal = _closure1_slot6;
                michal = tangon.bind(report)(zuuluu, michal);
                entity['backgroundColor'] = michal;
                return entity;
            }
        };
        foxtra = {'isPushingToTalk': null, 'EXPANDED_ICON_SIZE': 48, 'BASE_ICON_SIZE': 32};
        foxtra['isPushingToTalk'] = output;
        result = 12;
        offset = kiloes[result];
        offset = golfie.bind(tangon)(offset);
        offset = offset.withSpring;
        foxtra['withSpring'] = offset;
        offset = _closure1_slot6;
        foxtra['PUSH_TO_TALK_PIP_PHYSICS'] = offset;
        foxtra['white'] = echoed;
        zuuluu['__closure'] = foxtra;
        foxtra = 3936373516983.0;
        zuuluu['__workletHash'] = foxtra;
        foxtra = _closure1_slot14;
        zuuluu['__initData'] = foxtra;
        sizing = report.bind(option)(zuuluu);
        zuuluu = kiloes[michal];
        option = golfie.bind(tangon)(zuuluu);
        report = option.useAnimatedStyle;
        zuuluu = function() { // Original name: H
            _fun00005: for(var _fun00006_ip = 0; ; ) switch(_fun00006_ip) {
 0:
                entity = {};
                report = _closure1_slot0;
                tangon = _closure1_slot2;
                zuuluu = 12;
                tangon = tangon[zuuluu];
                zuuluu = undefined;
                report = report.bind(zuuluu)(tangon);
                tangon = report.withSpring;
                golfie = _closure2_slot1;
                zuuluu = golfie.get;
                zuuluu = zuuluu.bind(golfie)();
                if(zuuluu) { _fun00006_ip = 57; continue _fun00005 }
 51:
                zuuluu = _closure2_slot3;
                _fun00006_ip = 61; continue _fun00005;
 57:
                zuuluu = _closure2_slot4;
 61:
                michal = _closure1_slot6;
                michal = tangon.bind(report)(zuuluu, michal);
                entity['tintColor'] = michal;
                return entity;
            }
        };
        foxtra = {};
        source = kiloes[result];
        source = golfie.bind(tangon)(source);
        source = source.withSpring;
        foxtra['withSpring'] = source;
        foxtra['isPushingToTalk'] = output;
        foxtra['black'] = update;
        foxtra['white'] = echoed;
        foxtra['PUSH_TO_TALK_PIP_PHYSICS'] = offset;
        zuuluu['__closure'] = foxtra;
        foxtra = 11469896791985.0;
        zuuluu['__workletHash'] = foxtra;
        foxtra = _closure1_slot15;
        zuuluu['__initData'] = foxtra;
        foxtra = report.bind(option)(zuuluu);
        michal = kiloes[michal];
        report = golfie.bind(tangon)(michal);
        zuuluu = report.useAnimatedStyle;
        michal = function() { // Original name: f
            _fun00007: for(var _fun00008_ip = 0; ; ) switch(_fun00008_ip) {
 0:
                entity = {};
                tangon = _closure1_slot0;
                report = _closure1_slot2;
                michal = 12;
                michal = report[michal];
                report = undefined;
                option = tangon.bind(report)(michal);
                golfie = option.withSpring;
                oscard = _closure2_slot1;
                tangon = oscard.get;
                tangon = tangon.bind(oscard)();
                oscard = 0;
                if(!tangon) { _fun00008_ip = 63; continue _fun00007 }
 53:
                oscard = 0.5;
 63:
                tangon = _closure1_slot6;
                tangon = golfie.bind(option)(oscard, tangon);
                entity['opacity'] = tangon;
                tangon = _closure1_slot0;
                oscard = _closure1_slot2;
                zuuluu = 13;
                zuuluu = oscard[zuuluu];
                report = tangon.bind(report)(zuuluu);
                tangon = report.getVoicePanelPIPBorderRadius;
                michal = _closure2_slot0;
                zuuluu = michal.width;
                michal = michal.height;
                michal = tangon.bind(report)(zuuluu, michal);
                entity['borderRadius'] = michal;
                return entity;
            }
        };
        option = {};
        result = kiloes[result];
        result = golfie.bind(tangon)(result);
        result = result.withSpring;
        option['withSpring'] = result;
        option['isPushingToTalk'] = output;
        option['PUSH_TO_TALK_PIP_PHYSICS'] = offset;
        offset = 13;
        offset = kiloes[offset];
        offset = golfie.bind(tangon)(offset);
        offset = offset.getVoicePanelPIPBorderRadius;
        option['getVoicePanelPIPBorderRadius'] = offset;
        option['pipState'] = verify;
        michal['__closure'] = option;
        option = 450590017248.0;
        michal['__workletHash'] = option;
        option = _closure1_slot16;
        michal['__initData'] = option;
        output = zuuluu.bind(report)(michal);
        report = _closure1_slot4;
        zuuluu = report.useMemo;
        michal = new Array(1);
        michal[0] = oscard;
        entity = function() {
            romeon = _closure1_slot0;
            foxtra = _closure1_slot2;
            report = 14;
            michal = foxtra[report];
            yankee = undefined;
            michal = romeon.bind(yankee)(michal);
            tangon = michal.Gesture;
            zuuluu = tangon.Exclusive;
            michal = foxtra[report];
            michal = romeon.bind(yankee)(michal);
            oscard = michal.Gesture;
            michal = oscard.Tap;
            option = michal.bind(oscard)();
            oscard = option.maxDistance;
            michal = 30;
            option = oscard.bind(option)(michal);
            oscard = option.onEnd;
            michal = function(argFoo, argBar) { // Original name: o
                _fun00009: for(var _fun00010_ip = 0; ; ) switch(_fun00010_ip) {
 0:
                    entity = argBar;
                    if(!entity) { _fun00010_ip = 55; continue _fun00009 }
 6:
                    michal = _closure1_slot0;
                    zuuluu = _closure1_slot2;
                    entity = 6;
                    entity = zuuluu[entity];
                    zuuluu = undefined;
                    tangon = michal.bind(zuuluu)(entity);
                    michal = tangon.runOnJS;
                    entity = _closure2_slot2;
                    michal = michal.bind(tangon)(entity);
                    entity = false;
                    entity = michal.bind(zuuluu)(entity);
 55:
                    entity = undefined;
                    return entity;
                }
            };
            backup = {};
            offset = 6;
            verify = foxtra[offset];
            verify = romeon.bind(yankee)(verify);
            verify = verify.runOnJS;
            backup['runOnJS'] = verify;
            verify = _closure2_slot2;
            backup['handlePushToTalk'] = verify;
            michal['__closure'] = backup;
            backup = 13736796804739.0;
            michal['__workletHash'] = backup;
            backup = _closure1_slot17;
            michal['__initData'] = backup;
            michal = oscard.bind(option)(michal);
            report = foxtra[report];
            report = romeon.bind(yankee)(report);
            oscard = report.Gesture;
            report = oscard.Pan;
            option = report.bind(oscard)();
            oscard = option.maxPointers;
            report = 1;
            option = oscard.bind(option)(report);
            oscard = option.shouldCancelWhenOutside;
            report = false;
            option = oscard.bind(option)(report);
            oscard = option.onBegin;
            report = function() { // Original name: t
                zuuluu = _closure1_slot0;
                michal = _closure1_slot2;
                entity = 6;
                michal = michal[entity];
                entity = undefined;
                tangon = zuuluu.bind(entity)(michal);
                zuuluu = tangon.runOnJS;
                michal = _closure2_slot2;
                zuuluu = zuuluu.bind(tangon)(michal);
                michal = true;
                michal = zuuluu.bind(entity)(michal);
                return entity;
            };
            backup = {};
            kiloes = foxtra[offset];
            kiloes = romeon.bind(yankee)(kiloes);
            kiloes = kiloes.runOnJS;
            backup['runOnJS'] = kiloes;
            backup['handlePushToTalk'] = verify;
            report['__closure'] = backup;
            backup = 13835424148241.0;
            report['__workletHash'] = backup;
            backup = _closure1_slot18;
            report['__initData'] = backup;
            oscard = oscard.bind(option)(report);
            report = oscard.onFinalize;
            entity = function() { // Original name: n
                zuuluu = _closure1_slot0;
                michal = _closure1_slot2;
                entity = 6;
                michal = michal[entity];
                entity = undefined;
                tangon = zuuluu.bind(entity)(michal);
                zuuluu = tangon.runOnJS;
                michal = _closure2_slot2;
                zuuluu = zuuluu.bind(tangon)(michal);
                michal = false;
                michal = zuuluu.bind(entity)(michal);
                return entity;
            };
            option = {};
            offset = foxtra[offset];
            offset = romeon.bind(yankee)(offset);
            offset = offset.runOnJS;
            option['runOnJS'] = offset;
            option['handlePushToTalk'] = verify;
            entity['__closure'] = option;
            option = 13312872336633.0;
            entity['__workletHash'] = option;
            golfie = _closure1_slot19;
            entity['__initData'] = golfie;
            entity = report.bind(oscard)(entity);
            entity = zuuluu.bind(tangon)(michal, entity);
            return entity;
        };
        verify = zuuluu.bind(report)(entity, michal);
        zuuluu = _closure1_slot9;
        michal = _closure1_slot8;
        entity = {};
        option = _closure1_slot7;
        offset = _closure1_slot10;
        report = {};
        oscard = 'none';
        report['pointerEvents'] = oscard;
        result = romeon.overlay;
        oscard = new Array(2);
        oscard[0] = result;
        oscard[1] = output;
        report['style'] = oscard;
        oscard = option.bind(tangon)(offset, report);
        report = new Array(2);
        report[0] = oscard;
        oscard = 14;
        oscard = kiloes[oscard];
        oscard = golfie.bind(tangon)(oscard);
        golfie = oscard.GestureDetector;
        oscard = {};
        oscard['gesture'] = verify;
        verify = {};
        output = romeon.iconContainer;
        romeon = new Array(2);
        romeon[0] = output;
        romeon[1] = sizing;
        verify['style'] = romeon;
        romeon = _closure1_slot12;
        verify['hitSlop'] = romeon;
        romeon = _closure1_slot11;
        yankee = {};
        yankee['style'] = foxtra;
        foxtra = 8;
        foxtra = kiloes[foxtra];
        foxtra = backup.bind(tangon)(foxtra);
        foxtra = foxtra.Sizes;
        foxtra = foxtra.SMALL_20;
        yankee['size'] = foxtra;
        foxtra = 15;
        foxtra = kiloes[foxtra];
        foxtra = backup.bind(tangon)(foxtra);
        yankee['source'] = foxtra;
        foxtra = true;
        yankee['disableColor'] = foxtra;
        yankee = option.bind(tangon)(romeon, yankee);
        verify['children'] = yankee;
        verify = option.bind(tangon)(offset, verify);
        oscard['children'] = verify;
        oscard = option.bind(tangon)(golfie, oscard);
        report[1] = oscard;
        entity['children'] = report;
        entity = zuuluu.bind(tangon)(michal, entity);
        return entity;
    };
    zuuluu['default'] = michal;
    return entity;
})();