// app/modules/voice_panel/native/header/VoicePanelConsoleFacepile.tsx
export default (function(global, require, metroImportDefault, metroImportAll, moduleObject, exports, dependencyMap) {
    var6 = require;
    var12 = metroImportDefault;
    var3 = exports;
    var7 = dependencyMap;
    var _closure1_slot0 = var6;
    var _closure1_slot1 = var12;
    var _closure1_slot2 = var7;
    var2 = function getConsoleInfo(arg1) {
        _fun0001: for(var _fun0001_ip = 0; ; ) switch(_fun0001_ip) {
 0:
            var3 = arg1;
            var4 = var3.type;
            var1 = _closure1_slot4;
            var1 = var1.XBOX;
            if(!(var1 !== var4)) { _fun0001_ip = 222; continue _fun0001 }
 28:
            var1 = _closure1_slot4;
            var1 = var1.PLAYSTATION;
            if(!(var1 !== var4)) { _fun0001_ip = 46; continue _fun0001 }
 42:
            var1 = null;
            return var1;
 46:
            var1 = {};
            var5 = _closure1_slot1;
            var9 = _closure1_slot2;
            var4 = 5;
            var4 = var9[var4];
            var8 = undefined;
            var6 = var5.bind(var8)(var4);
            var4 = var3.type;
            var4 = var6.bind(var8)(var4);
            var1['icon'] = var4;
            var4 = 4;
            var4 = var9[var4];
            var4 = var5.bind(var8)(var4);
            var4 = var4.unsafe_rawColors;
            var4 = var4.PLAYSTATION;
            var1['color'] = var4;
            var7 = _closure1_slot0;
            var4 = 6;
            var5 = var9[var4];
            var5 = var7.bind(var8)(var5);
            var10 = var5.intl;
            var6 = var10.string;
            var5 = var9[var4];
            var5 = var7.bind(var8)(var5);
            var5 = var5.t;
            var5 = var5.3qLlTU;
            var5 = var6.bind(var10)(var5);
            var1['connectLabel'] = var5;
            var5 = var9[var4];
            var5 = var7.bind(var8)(var5);
            var6 = var5.intl;
            var5 = var6.string;
            var4 = var9[var4];
            var4 = var7.bind(var8)(var4);
            var4 = var4.t;
            var4 = var4./uR9x8;
            var4 = var5.bind(var6)(var4);
            var1['connectSublabel'] = var4;
            return var1;
 222:
            var1 = {};
            var4 = _closure1_slot1;
            var7 = _closure1_slot2;
            var5 = 5;
            var5 = var7[var5];
            var6 = undefined;
            var5 = var4.bind(var6)(var5);
            var3 = var3.type;
            var3 = var5.bind(var6)(var3);
            var1['icon'] = var3;
            var3 = 4;
            var3 = var7[var3];
            var3 = var4.bind(var6)(var3);
            var3 = var3.unsafe_rawColors;
            var3 = var3.XBOX;
            var1['color'] = var3;
            var5 = _closure1_slot0;
            var2 = 6;
            var3 = var7[var2];
            var3 = var5.bind(var6)(var3);
            var8 = var3.intl;
            var4 = var8.string;
            var3 = var7[var2];
            var3 = var5.bind(var6)(var3);
            var3 = var3.t;
            var3 = var3.QN7HXV;
            var3 = var4.bind(var8)(var3);
            var1['connectLabel'] = var3;
            var3 = var7[var2];
            var3 = var5.bind(var6)(var3);
            var4 = var3.intl;
            var3 = var4.string;
            var2 = var7[var2];
            var2 = var5.bind(var6)(var2);
            var2 = var2.t;
            var2 = var2.M/Ld8/;
            var2 = var3.bind(var4)(var2);
            var1['connectSublabel'] = var2;
            return var1;
        }
    };
    var _closure1_slot7 = var2;
    var1 = global;
    var9 = var1.Object;
    var8 = var9.defineProperty;
    var5 = {};
    var1 = true;
    var5['value'] = var1;
    var1 = '__esModule';
    var1 = var8.bind(var9)(var3, var1, var5);
    var1 = 0;
    var8 = var7[var1];
    var5 = metroImportAll;
    var1 = undefined;
    var5 = var5.bind(var1)(var8);
    var _closure1_slot3 = var5;
    var5 = 1;
    var5 = var7[var5];
    var5 = var6.bind(var1)(var5);
    var5 = var5.PlatformTypes;
    var _closure1_slot4 = var5;
    var5 = 2;
    var5 = var7[var5];
    var5 = var6.bind(var1)(var5);
    var5 = var5.jsx;
    var _closure1_slot5 = var5;
    var5 = 3;
    var5 = var7[var5];
    var9 = var6.bind(var1)(var5);
    var8 = var9.createStyles;
    var5 = {};
    var10 = {'borderRadius': null, 'padding': 8, 'margin': 4294967293, 'borderWidth': 3};
    var11 = 4;
    var13 = var7[var11];
    var13 = var12.bind(var1)(var13);
    var13 = var13.radii;
    var13 = var13.round;
    var10['borderRadius'] = var13;
    var13 = var7[var11];
    var13 = var12.bind(var1)(var13);
    var13 = var13.colors;
    var13 = var13.BACKGROUND_PRIMARY;
    var10['borderColor'] = var13;
    var5['consoleIconContainer'] = var10;
    var10 = {};
    var11 = var7[var11];
    var11 = var12.bind(var1)(var11);
    var11 = var11.colors;
    var11 = var11.WHITE;
    var10['tintColor'] = var11;
    var5['consoleIcon'] = var10;
    var5 = var8.bind(var9)(var5);
    var _closure1_slot6 = var5;
    var5 = 12;
    var5 = var7[var5];
    var7 = var6.bind(var1)(var5);
    var6 = var7.fileFinishedImporting;
    var5 = 'modules/voice_panel/native/header/VoicePanelConsoleFacepile.tsx';
    var5 = var6.bind(var7)(var5);
    var4 = function VoicePanelConsoleFacepile() {
        var2 = _closure1_slot6;
        var4 = undefined;
        var10 = var2.bind(var4)();
        var _closure2_slot0 = var10;
        var2 = _closure1_slot1;
        var7 = _closure1_slot2;
        var5 = 7;
        var5 = var7[var5];
        var5 = var2.bind(var4)(var5);
        var5 = var5.bind(var4)();
        var _closure2_slot1 = var5;
        var9 = _closure1_slot3;
        var8 = var9.useMemo;
        var6 = new Array(1);
        var6[0] = var5;
        var5 = function() {
            var4 = _closure2_slot1;
            var3 = var4.map;
            var2 = _closure1_slot7;
            var3 = var3.bind(var4)(var2);
            var2 = var3.filter;
            var5 = _closure1_slot0;
            var4 = _closure1_slot2;
            var1 = 8;
            var4 = var4[var1];
            var1 = undefined;
            var1 = var5.bind(var1)(var4);
            var1 = var1.isNotNullish;
            var1 = var2.bind(var3)(var1);
            return var1;
        };
        var6 = var8.bind(var9)(var5, var6);
        var8 = var9.useCallback;
        var5 = new Array(1);
        var5[0] = var10;
        var3 = function(arg1) {
            var7 = arg1;
            var4 = _closure1_slot5;
            var9 = _closure1_slot1;
            var10 = _closure1_slot2;
            var1 = 9;
            var1 = var10[var1];
            var3 = undefined;
            var2 = var9.bind(var3)(var1);
            var1 = {};
            var11 = _closure2_slot0;
            var6 = var11.consoleIconContainer;
            var5 = new Array(2);
            var5[0] = var6;
            var6 = {};
            var8 = var7.color;
            var6['backgroundColor'] = var8;
            var5[1] = var6;
            var1['style'] = var5;
            var8 = 10;
            var5 = var10[var8];
            var6 = var9.bind(var3)(var5);
            var5 = {};
            var11 = var11.consoleIcon;
            var5['style'] = var11;
            var8 = var10[var8];
            var8 = var9.bind(var3)(var8);
            var8 = var8.Sizes;
            var8 = var8.MEDIUM;
            var5['size'] = var8;
            var7 = var7.icon;
            var5['source'] = var7;
            var5 = var4.bind(var3)(var6, var5);
            var1['children'] = var5;
            var1 = var4.bind(var3)(var2, var1);
            return var1;
        };
        var5 = var8.bind(var9)(var3, var5);
        var3 = _closure1_slot5;
        var1 = 11;
        var1 = var7[var1];
        var2 = var2.bind(var4)(var1);
        var1 = {};
        var1['items'] = var6;
        var1['renderItem'] = var5;
        var5 = -3;
        var1['offsetAmount'] = var5;
        var1 = var3.bind(var4)(var2, var1);
        return var1;
    };
    var3['default'] = var4;
    var3['getConsoleInfo'] = var2;
    return var1;
})();