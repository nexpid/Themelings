// app/modules/voice_panel/native/header/VoicePanelConsoleFacepile.tsx
export default (function(argFoo, argBar, argBaz, argCorge, _, argFred, argPlugh) {
    oscar = argBar;
    romeo = argBaz;
    zulu = argFred;
    golf = argPlugh;
    var _closure1_slot0 = oscar;
    var _closure1_slot1 = romeo;
    var _closure1_slot2 = golf;
    mike = function(argFoo) { // Original name: getConsoleInfo
        _fun121936: for(var _fun121936_ip = 0; ; ) switch(_fun121936_ip) {
 0:
            zulu = argFoo;
            tango = zulu.type;
            entity = _closure1_slot4;
            entity = entity.XBOX;
            if(!(entity !== tango)) { _fun121936_ip = 218; continue _fun121936 }
 28:
            entity = _closure1_slot4;
            entity = entity.PLAYSTATION;
            if(!(entity !== tango)) { _fun121936_ip = 46; continue _fun121936 }
 42:
            entity = null;
            return entity;
 46:
            entity = {};
            report = _closure1_slot1;
            verify = _closure1_slot2;
            tango = 5;
            tango = verify[tango];
            options = undefined;
            oscar = report.bind(options)(tango);
            tango = zulu.type;
            tango = oscar.bind(options)(tango);
            entity['icon'] = tango;
            tango = 4;
            tango = verify[tango];
            tango = report.bind(options)(tango);
            tango = tango.unsafe_rawColors;
            tango = tango.PLAYSTATION;
            entity['color'] = tango;
            golf = _closure1_slot0;
            tango = 6;
            report = verify[tango];
            report = golf.bind(options)(report);
            offset = report.intl;
            oscar = offset.string;
            report = verify[tango];
            report = golf.bind(options)(report);
            report = report.t;
            report = report.3qLlTU;
            report = oscar.bind(offset)(report);
            entity['connectLabel'] = report;
            report = verify[tango];
            report = golf.bind(options)(report);
            oscar = report.intl;
            report = oscar.string;
            tango = verify[tango];
            tango = golf.bind(options)(tango);
            tango = tango.t;
            tango = tango./uR9x8;
            tango = report.bind(oscar)(tango);
            entity['connectSublabel'] = tango;
            return entity;
 218:
            entity = {};
            tango = _closure1_slot1;
            golf = _closure1_slot2;
            report = 5;
            report = golf[report];
            oscar = undefined;
            report = tango.bind(oscar)(report);
            zulu = zulu.type;
            zulu = report.bind(oscar)(zulu);
            entity['icon'] = zulu;
            zulu = 4;
            zulu = golf[zulu];
            zulu = tango.bind(oscar)(zulu);
            zulu = zulu.unsafe_rawColors;
            zulu = zulu.XBOX;
            entity['color'] = zulu;
            report = _closure1_slot0;
            mike = 6;
            zulu = golf[mike];
            zulu = report.bind(oscar)(zulu);
            options = zulu.intl;
            tango = options.string;
            zulu = golf[mike];
            zulu = report.bind(oscar)(zulu);
            zulu = zulu.t;
            zulu = zulu.QN7HXV;
            zulu = tango.bind(options)(zulu);
            entity['connectLabel'] = zulu;
            zulu = golf[mike];
            zulu = report.bind(oscar)(zulu);
            tango = zulu.intl;
            zulu = tango.string;
            mike = golf[mike];
            mike = report.bind(oscar)(mike);
            mike = mike.t;
            mike = mike.M/Ld8/;
            mike = zulu.bind(tango)(mike);
            entity['connectSublabel'] = mike;
            return entity;
        }
    };
    var _closure1_slot7 = mike;
    entity = global;
    verify = entity.Object;
    options = verify.defineProperty;
    report = {};
    entity = true;
    report['value'] = entity;
    entity = '__esModule';
    entity = options.bind(verify)(zulu, entity, report);
    entity = 0;
    options = golf[entity];
    report = argCorge;
    entity = undefined;
    report = report.bind(entity)(options);
    var _closure1_slot3 = report;
    report = 1;
    report = golf[report];
    report = oscar.bind(entity)(report);
    report = report.PlatformTypes;
    var _closure1_slot4 = report;
    report = 2;
    report = golf[report];
    report = oscar.bind(entity)(report);
    report = report.jsx;
    var _closure1_slot5 = report;
    report = 3;
    report = golf[report];
    verify = oscar.bind(entity)(report);
    options = verify.createStyles;
    report = {};
    offset = {'borderRadius': null, 'padding': 8, 'margin': 4294967293, 'borderWidth': 3};
    yankee = 4;
    foxtrot = golf[yankee];
    foxtrot = romeo.bind(entity)(foxtrot);
    foxtrot = foxtrot.radii;
    foxtrot = foxtrot.round;
    offset['borderRadius'] = foxtrot;
    foxtrot = golf[yankee];
    foxtrot = romeo.bind(entity)(foxtrot);
    foxtrot = foxtrot.colors;
    foxtrot = foxtrot.BACKGROUND_PRIMARY;
    offset['borderColor'] = foxtrot;
    report['consoleIconContainer'] = offset;
    offset = {};
    yankee = golf[yankee];
    yankee = romeo.bind(entity)(yankee);
    yankee = yankee.colors;
    yankee = yankee.WHITE;
    offset['tintColor'] = yankee;
    report['consoleIcon'] = offset;
    report = options.bind(verify)(report);
    var _closure1_slot6 = report;
    report = 12;
    report = golf[report];
    golf = oscar.bind(entity)(report);
    oscar = golf.fileFinishedImporting;
    report = 'modules/voice_panel/native/header/VoicePanelConsoleFacepile.tsx';
    report = oscar.bind(golf)(report);
    tango = function() { // Original name: VoicePanelConsoleFacepile
        mike = _closure1_slot6;
        tango = undefined;
        offset = mike.bind(tango)();
        var _closure2_slot0 = offset;
        mike = _closure1_slot1;
        golf = _closure1_slot2;
        report = 7;
        report = golf[report];
        report = mike.bind(tango)(report);
        report = report.bind(tango)();
        var _closure2_slot1 = report;
        verify = _closure1_slot3;
        options = verify.useMemo;
        oscar = new Array(1);
        oscar[0] = report;
        report = function() {
            tango = _closure2_slot1;
            zulu = tango.map;
            mike = _closure1_slot7;
            zulu = zulu.bind(tango)(mike);
            mike = zulu.filter;
            report = _closure1_slot0;
            tango = _closure1_slot2;
            entity = 8;
            tango = tango[entity];
            entity = undefined;
            entity = report.bind(entity)(tango);
            entity = entity.isNotNullish;
            entity = mike.bind(zulu)(entity);
            return entity;
        };
        oscar = options.bind(verify)(report, oscar);
        options = verify.useCallback;
        report = new Array(1);
        report[0] = offset;
        zulu = function(argFoo) {
            golf = argFoo;
            tango = _closure1_slot5;
            verify = _closure1_slot1;
            offset = _closure1_slot2;
            entity = 9;
            entity = offset[entity];
            zulu = undefined;
            mike = verify.bind(zulu)(entity);
            entity = {};
            yankee = _closure2_slot0;
            oscar = yankee.consoleIconContainer;
            report = new Array(2);
            report[0] = oscar;
            oscar = {};
            options = golf.color;
            oscar['backgroundColor'] = options;
            report[1] = oscar;
            entity['style'] = report;
            options = 10;
            report = offset[options];
            oscar = verify.bind(zulu)(report);
            report = {};
            yankee = yankee.consoleIcon;
            report['style'] = yankee;
            options = offset[options];
            options = verify.bind(zulu)(options);
            options = options.Sizes;
            options = options.MEDIUM;
            report['size'] = options;
            golf = golf.icon;
            report['source'] = golf;
            report = tango.bind(zulu)(oscar, report);
            entity['children'] = report;
            entity = tango.bind(zulu)(mike, entity);
            return entity;
        };
        report = options.bind(verify)(zulu, report);
        zulu = _closure1_slot5;
        entity = 11;
        entity = golf[entity];
        mike = mike.bind(tango)(entity);
        entity = {};
        entity['items'] = oscar;
        entity['renderItem'] = report;
        report = -3;
        entity['offsetAmount'] = report;
        entity = zulu.bind(tango)(mike, entity);
        return entity;
    };
    zulu['default'] = tango;
    zulu['getConsoleInfo'] = mike;
    return entity;
})();