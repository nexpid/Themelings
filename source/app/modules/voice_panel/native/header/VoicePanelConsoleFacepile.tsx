// app/modules/voice_panel/native/header/VoicePanelConsoleFacepile.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    oscard = argBar;
    romeon = argBaz;
    zuuluu = argFre;
    golfie = argPlu;
    var _closure1_slot0 = oscard;
    var _closure1_slot1 = romeon;
    var _closure1_slot2 = golfie;
    michal = function(argFoo) { // Original name: getConsoleInfo
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            zuuluu = argFoo;
            tangon = zuuluu.type;
            entity = _closure1_slot4;
            entity = entity.XBOX;
            if(!(entity !== tangon)) { _fun00002_ip = 222; continue _fun00001 }
 28:
            entity = _closure1_slot4;
            entity = entity.PLAYSTATION;
            if(!(entity !== tangon)) { _fun00002_ip = 46; continue _fun00001 }
 42:
            entity = null;
            return entity;
 46:
            entity = {};
            report = _closure1_slot1;
            verify = _closure1_slot2;
            tangon = 5;
            tangon = verify[tangon];
            option = undefined;
            oscard = report.bind(option)(tangon);
            tangon = zuuluu.type;
            tangon = oscard.bind(option)(tangon);
            entity['icon'] = tangon;
            tangon = 4;
            tangon = verify[tangon];
            tangon = report.bind(option)(tangon);
            tangon = tangon.unsafe_rawColors;
            tangon = tangon.PLAYSTATION;
            entity['color'] = tangon;
            golfie = _closure1_slot0;
            tangon = 6;
            report = verify[tangon];
            report = golfie.bind(option)(report);
            offset = report.intl;
            oscard = offset.string;
            report = verify[tangon];
            report = golfie.bind(option)(report);
            report = report.t;
            report = report.3qLlTU;
            report = oscard.bind(offset)(report);
            entity['connectLabel'] = report;
            report = verify[tangon];
            report = golfie.bind(option)(report);
            oscard = report.intl;
            report = oscard.string;
            tangon = verify[tangon];
            tangon = golfie.bind(option)(tangon);
            tangon = tangon.t;
            tangon = tangon./uR9x8;
            tangon = report.bind(oscard)(tangon);
            entity['connectSublabel'] = tangon;
            return entity;
 222:
            entity = {};
            tangon = _closure1_slot1;
            golfie = _closure1_slot2;
            report = 5;
            report = golfie[report];
            oscard = undefined;
            report = tangon.bind(oscard)(report);
            zuuluu = zuuluu.type;
            zuuluu = report.bind(oscard)(zuuluu);
            entity['icon'] = zuuluu;
            zuuluu = 4;
            zuuluu = golfie[zuuluu];
            zuuluu = tangon.bind(oscard)(zuuluu);
            zuuluu = zuuluu.unsafe_rawColors;
            zuuluu = zuuluu.XBOX;
            entity['color'] = zuuluu;
            report = _closure1_slot0;
            michal = 6;
            zuuluu = golfie[michal];
            zuuluu = report.bind(oscard)(zuuluu);
            option = zuuluu.intl;
            tangon = option.string;
            zuuluu = golfie[michal];
            zuuluu = report.bind(oscard)(zuuluu);
            zuuluu = zuuluu.t;
            zuuluu = zuuluu.QN7HXV;
            zuuluu = tangon.bind(option)(zuuluu);
            entity['connectLabel'] = zuuluu;
            zuuluu = golfie[michal];
            zuuluu = report.bind(oscard)(zuuluu);
            tangon = zuuluu.intl;
            zuuluu = tangon.string;
            michal = golfie[michal];
            michal = report.bind(oscard)(michal);
            michal = michal.t;
            michal = michal.M/Ld8/;
            michal = zuuluu.bind(tangon)(michal);
            entity['connectSublabel'] = michal;
            return entity;
        }
    };
    var _closure1_slot7 = michal;
    entity = global;
    verify = entity.Object;
    option = verify.defineProperty;
    report = {};
    entity = true;
    report['value'] = entity;
    entity = '__esModule';
    entity = option.bind(verify)(zuuluu, entity, report);
    entity = 0;
    option = golfie[entity];
    report = argCor;
    entity = undefined;
    report = report.bind(entity)(option);
    var _closure1_slot3 = report;
    report = 1;
    report = golfie[report];
    report = oscard.bind(entity)(report);
    report = report.PlatformTypes;
    var _closure1_slot4 = report;
    report = 2;
    report = golfie[report];
    report = oscard.bind(entity)(report);
    report = report.jsx;
    var _closure1_slot5 = report;
    report = 3;
    report = golfie[report];
    verify = oscard.bind(entity)(report);
    option = verify.createStyles;
    report = {};
    offset = {'borderRadius': null, 'padding': 8, 'margin': 4294967293, 'borderWidth': 3};
    yankee = 4;
    foxtra = golfie[yankee];
    foxtra = romeon.bind(entity)(foxtra);
    foxtra = foxtra.radii;
    foxtra = foxtra.round;
    offset['borderRadius'] = foxtra;
    foxtra = golfie[yankee];
    foxtra = romeon.bind(entity)(foxtra);
    foxtra = foxtra.colors;
    foxtra = foxtra.BACKGROUND_PRIMARY;
    offset['borderColor'] = foxtra;
    report['consoleIconContainer'] = offset;
    offset = {};
    yankee = golfie[yankee];
    yankee = romeon.bind(entity)(yankee);
    yankee = yankee.colors;
    yankee = yankee.WHITE;
    offset['tintColor'] = yankee;
    report['consoleIcon'] = offset;
    report = option.bind(verify)(report);
    var _closure1_slot6 = report;
    report = 12;
    report = golfie[report];
    golfie = oscard.bind(entity)(report);
    oscard = golfie.fileFinishedImporting;
    report = 'modules/voice_panel/native/header/VoicePanelConsoleFacepile.tsx';
    report = oscard.bind(golfie)(report);
    tangon = function() { // Original name: VoicePanelConsoleFacepile
        michal = _closure1_slot6;
        tangon = undefined;
        offset = michal.bind(tangon)();
        var _closure2_slot0 = offset;
        michal = _closure1_slot1;
        golfie = _closure1_slot2;
        report = 7;
        report = golfie[report];
        report = michal.bind(tangon)(report);
        report = report.bind(tangon)();
        var _closure2_slot1 = report;
        verify = _closure1_slot3;
        option = verify.useMemo;
        oscard = new Array(1);
        oscard[0] = report;
        report = function() {
            tangon = _closure2_slot1;
            zuuluu = tangon.map;
            michal = _closure1_slot7;
            zuuluu = zuuluu.bind(tangon)(michal);
            michal = zuuluu.filter;
            report = _closure1_slot0;
            tangon = _closure1_slot2;
            entity = 8;
            tangon = tangon[entity];
            entity = undefined;
            entity = report.bind(entity)(tangon);
            entity = entity.isNotNullish;
            entity = michal.bind(zuuluu)(entity);
            return entity;
        };
        oscard = option.bind(verify)(report, oscard);
        option = verify.useCallback;
        report = new Array(1);
        report[0] = offset;
        zuuluu = function(argFoo) {
            golfie = argFoo;
            tangon = _closure1_slot5;
            verify = _closure1_slot1;
            offset = _closure1_slot2;
            entity = 9;
            entity = offset[entity];
            zuuluu = undefined;
            michal = verify.bind(zuuluu)(entity);
            entity = {};
            yankee = _closure2_slot0;
            oscard = yankee.consoleIconContainer;
            report = new Array(2);
            report[0] = oscard;
            oscard = {};
            option = golfie.color;
            oscard['backgroundColor'] = option;
            report[1] = oscard;
            entity['style'] = report;
            option = 10;
            report = offset[option];
            oscard = verify.bind(zuuluu)(report);
            report = {};
            yankee = yankee.consoleIcon;
            report['style'] = yankee;
            option = offset[option];
            option = verify.bind(zuuluu)(option);
            option = option.Sizes;
            option = option.MEDIUM;
            report['size'] = option;
            golfie = golfie.icon;
            report['source'] = golfie;
            report = tangon.bind(zuuluu)(oscard, report);
            entity['children'] = report;
            entity = tangon.bind(zuuluu)(michal, entity);
            return entity;
        };
        report = option.bind(verify)(zuuluu, report);
        zuuluu = _closure1_slot5;
        entity = 11;
        entity = golfie[entity];
        michal = michal.bind(tangon)(entity);
        entity = {};
        entity['items'] = oscard;
        entity['renderItem'] = report;
        report = -3;
        entity['offsetAmount'] = report;
        entity = zuuluu.bind(tangon)(michal, entity);
        return entity;
    };
    zuuluu['default'] = tangon;
    zuuluu['getConsoleInfo'] = michal;
    return entity;
})();