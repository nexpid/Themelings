// app/modules/voice_panel/native/header/calculateVoicePanelHeaderSpecs.tsx
export default (function(argFoo, argBar, _, __, ___, argFre, argPlu) {
    oscard = argBar;
    zuuluu = argFre;
    golfie = argPlu;
    entity = global;
    option = entity.Object;
    report = option.defineProperty;
    michal = {};
    entity = true;
    michal['value'] = entity;
    entity = '__esModule';
    entity = report.bind(option)(zuuluu, entity, michal);
    entity = 0;
    michal = golfie[entity];
    entity = undefined;
    michal = oscard.bind(entity)(michal);
    michal = michal.EDGE_GUTTER;
    var _closure1_slot0 = michal;
    report = {};
    option = 'function calculateVoicePanelHeaderSpecs_calculateVoicePanelHeaderSpecsTsx1(safeArea){const{EDGE_GUTTER,BASE_VOICE_PANEL_HEADER_HEIGHT}=this.__closure;const paddingTop=Math.max(EDGE_GUTTER,safeArea.top);const paddingLeft=Math.max(EDGE_GUTTER,safeArea.left);const paddingRight=Math.max(EDGE_GUTTER,safeArea.right);const height=BASE_VOICE_PANEL_HEADER_HEIGHT+paddingTop;return{height:height,paddingTop:paddingTop,paddingLeft:paddingLeft,paddingRight:paddingRight};}';
    report['code'] = option;
    tangon = function(argFoo) { // Original name: t
        michal = argFoo;
        zuuluu = global;
        oscard = zuuluu.Math;
        tangon = oscard.max;
        report = _closure1_slot0;
        entity = michal.top;
        tangon = tangon.bind(oscard)(report, entity);
        entity = {};
        oscard = 44;
        oscard = oscard + tangon;
        entity['height'] = oscard;
        entity['paddingTop'] = tangon;
        golfie = zuuluu.Math;
        oscard = golfie.max;
        tangon = michal.left;
        tangon = oscard.bind(golfie)(report, tangon);
        entity['paddingLeft'] = tangon;
        tangon = zuuluu.Math;
        zuuluu = tangon.max;
        michal = michal.right;
        michal = zuuluu.bind(tangon)(report, michal);
        entity['paddingRight'] = michal;
        return entity;
    };
    option = {};
    option['EDGE_GUTTER'] = michal;
    michal = 44;
    option['BASE_VOICE_PANEL_HEADER_HEIGHT'] = michal;
    tangon['__closure'] = option;
    option = 12950553046958.0;
    tangon['__workletHash'] = option;
    tangon['__initData'] = report;
    report = 1;
    report = golfie[report];
    golfie = oscard.bind(entity)(report);
    oscard = golfie.fileFinishedImporting;
    report = 'modules/voice_panel/native/header/calculateVoicePanelHeaderSpecs.tsx';
    report = oscard.bind(golfie)(report);
    zuuluu['default'] = tangon;
    zuuluu['BASE_VOICE_PANEL_HEADER_HEIGHT'] = michal;
    return entity;
})();