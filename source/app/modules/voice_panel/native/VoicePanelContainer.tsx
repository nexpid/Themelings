// app/modules/voice_panel/native/VoicePanelContainer.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    report = argBar;
    option = argBaz;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    var _closure1_slot1 = option;
    var _closure1_slot2 = oscard;
    entity = function(argFoo) { // Original name: VoicePanel
        golfie = argFoo;
        var _closure2_slot0 = golfie;
        michal = _closure1_slot0;
        verify = _closure1_slot2;
        entity = 4;
        entity = verify[entity];
        tangon = undefined;
        option = michal.bind(tangon)(entity);
        zuuluu = option.useStateFromStores;
        entity = _closure1_slot4;
        michal = new Array(1);
        michal[0] = entity;
        entity = function() {
            _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
                zuuluu = _closure1_slot4;
                michal = zuuluu.getChannel;
                entity = _closure2_slot0;
                entity = entity.channelId;
                michal = michal.bind(zuuluu)(entity);
                entity = null;
                zuuluu = entity == michal;
                entity = undefined;
                if(zuuluu) { _fun00002_ip = 45; continue _fun00001 }
 40:
                entity = michal.guild_id;
 45:
                return entity;
            }
        };
        option = zuuluu.bind(option)(michal, entity);
        zuuluu = _closure1_slot6;
        michal = _closure1_slot1;
        entity = 5;
        entity = verify[entity];
        michal = michal.bind(tangon)(entity);
        entity = {};
        yankee = entity;
        offset = golfie;
        golfie = copyDataProperties(yankee, offset);
        golfie = 'guildId';
        entity[golfie] = option;
        option = _closure1_slot3;
        golfie = option.useMemo;
        oscard = function() {
            tangon = _closure1_slot6;
            michal = _closure1_slot1;
            zuuluu = _closure1_slot2;
            entity = 6;
            entity = zuuluu[entity];
            zuuluu = undefined;
            michal = michal.bind(zuuluu)(entity);
            entity = {};
            entity = tangon.bind(zuuluu)(michal, entity);
            return entity;
        };
        report = new Array(0);
        oscard = golfie.bind(option)(oscard, report);
        report = 'children';
        entity[report] = oscard;
        entity = zuuluu.bind(tangon)(michal, entity);
        return entity;
    };
    var _closure1_slot7 = entity;
    entity = function(argFoo) { // Original name: getChannelKey
        entity = argFoo;
        return entity;
    };
    var _closure1_slot8 = entity;
    entity = function(argFoo, argBar, argBaz, argCor) { // Original name: renderVoicePanel
        report = argBar;
        tangon = _closure1_slot6;
        zuuluu = _closure1_slot7;
        michal = {};
        michal['channelId'] = report;
        entity = argBaz;
        michal['transitionState'] = entity;
        entity = argCor;
        michal['transitionCleanUp'] = entity;
        entity = undefined;
        entity = tangon.bind(entity)(zuuluu, michal, report);
        return entity;
    };
    var _closure1_slot9 = entity;
    entity = global;
    verify = entity.Object;
    golfie = verify.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(verify)(zuuluu, entity, tangon);
    entity = 0;
    golfie = oscard[entity];
    tangon = argCor;
    entity = undefined;
    golfie = tangon.bind(entity)(golfie);
    var _closure1_slot3 = golfie;
    tangon = 1;
    tangon = oscard[tangon];
    tangon = option.bind(entity)(tangon);
    var _closure1_slot4 = tangon;
    tangon = 2;
    tangon = oscard[tangon];
    tangon = option.bind(entity)(tangon);
    var _closure1_slot5 = tangon;
    tangon = 3;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.jsx;
    var _closure1_slot6 = tangon;
    tangon = golfie.memo;
    michal = function() { // Original name: VoicePanelContainer
        oscard = _closure1_slot5;
        michal = _closure1_slot0;
        golfie = _closure1_slot2;
        entity = 7;
        entity = golfie[entity];
        tangon = undefined;
        entity = michal.bind(tangon)(entity);
        zuuluu = entity.shallow;
        entity = function(argFoo) {
            entity = argFoo;
            zuuluu = entity.channels;
            entity = global;
            michal = entity.Array;
            entity = michal.from;
            entity = entity.bind(michal)(zuuluu);
            return entity;
        };
        oscard = oscard.bind(tangon)(entity, zuuluu);
        zuuluu = _closure1_slot6;
        entity = 8;
        entity = golfie[entity];
        entity = michal.bind(tangon)(entity);
        michal = entity.TransitionGroup;
        entity = {};
        entity['items'] = oscard;
        oscard = _closure1_slot8;
        entity['getItemKey'] = oscard;
        report = _closure1_slot9;
        entity['renderItem'] = report;
        entity = zuuluu.bind(tangon)(michal, entity);
        return entity;
    };
    michal = tangon.bind(golfie)(michal);
    tangon = 9;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/voice_panel/native/VoicePanelContainer.tsx';
    tangon = report.bind(oscard)(tangon);
    zuuluu['default'] = michal;
    return entity;
})();