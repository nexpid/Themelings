// app/modules/voice_panel/native/shared/VoicePanelChannelOptInNotice.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    report = argBar;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    entity = argBaz;
    var _closure1_slot1 = entity;
    var _closure1_slot2 = oscard;
    entity = global;
    option = entity.Object;
    golfie = option.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(option)(zuuluu, entity, tangon);
    entity = 0;
    golfie = oscard[entity];
    tangon = argCor;
    entity = undefined;
    golfie = tangon.bind(entity)(golfie);
    var _closure1_slot3 = golfie;
    tangon = 1;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.jsx;
    var _closure1_slot4 = tangon;
    tangon = golfie.memo;
    michal = function(argFoo) { // Original name: VoicePanelChannelOptInNotice
        michal = argFoo;
        oscard = michal.style;
        option = michal.channel;
        var _closure2_slot0 = option;
        golfie = michal.analyticsSection;
        var _closure2_slot1 = golfie;
        tangon = _closure1_slot3;
        zuuluu = tangon.useCallback;
        michal = new Array(2);
        michal[0] = option;
        michal[1] = golfie;
        entity = function() {
            zuuluu = _closure1_slot0;
            michal = _closure1_slot2;
            entity = 2;
            michal = michal[entity];
            entity = undefined;
            golfie = zuuluu.bind(entity)(michal);
            oscard = golfie.setOptInChannel;
            zuuluu = _closure2_slot0;
            yankee = zuuluu.guild_id;
            offset = zuuluu.id;
            zuuluu = {};
            michal = _closure2_slot1;
            zuuluu['section'] = michal;
            verify = true;
            romeon = golfie;
            option = zuuluu;
            michal = romeon[oscard](yankee, offset, verify, option, golfie);
            return entity;
        };
        golfie = zuuluu.bind(tangon)(entity, michal);
        tangon = _closure1_slot4;
        yankee = _closure1_slot1;
        romeon = _closure1_slot2;
        entity = 3;
        entity = romeon[entity];
        zuuluu = undefined;
        michal = yankee.bind(zuuluu)(entity);
        entity = {};
        entity['style'] = oscard;
        verify = _closure1_slot0;
        report = 4;
        report = romeon[report];
        report = verify.bind(zuuluu)(report);
        oscard = report.TableRow;
        report = {};
        option = 5;
        offset = romeon[option];
        offset = verify.bind(zuuluu)(offset);
        backup = offset.intl;
        foxtra = backup.string;
        offset = romeon[option];
        offset = verify.bind(zuuluu)(offset);
        offset = offset.t;
        offset = offset.9mysCg;
        offset = foxtra.bind(backup)(offset);
        report['label'] = offset;
        offset = romeon[option];
        offset = verify.bind(zuuluu)(offset);
        foxtra = offset.intl;
        offset = foxtra.string;
        option = romeon[option];
        option = verify.bind(zuuluu)(option);
        option = option.t;
        option = option.PDUCIC;
        option = offset.bind(foxtra)(option);
        report['subLabel'] = option;
        option = 6;
        option = romeon[option];
        option = verify.bind(zuuluu)(option);
        verify = option.TableRowIcon;
        option = {};
        offset = 7;
        offset = romeon[offset];
        offset = yankee.bind(zuuluu)(offset);
        option['source'] = offset;
        offset = 'blurple';
        option['variant'] = offset;
        option = tangon.bind(zuuluu)(verify, option);
        report['icon'] = option;
        report['onPress'] = golfie;
        golfie = true;
        report['start'] = golfie;
        report['end'] = golfie;
        report['arrow'] = golfie;
        report = tangon.bind(zuuluu)(oscard, report);
        entity['children'] = report;
        entity = tangon.bind(zuuluu)(michal, entity);
        return entity;
    };
    michal = tangon.bind(golfie)(michal);
    tangon = 8;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/voice_panel/native/shared/VoicePanelChannelOptInNotice.tsx';
    tangon = report.bind(oscard)(tangon);
    zuuluu['default'] = michal;
    return entity;
})();