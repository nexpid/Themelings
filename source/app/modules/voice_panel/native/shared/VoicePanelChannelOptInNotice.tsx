// app/modules/voice_panel/native/shared/VoicePanelChannelOptInNotice.tsx
export default (function(argFoo, argBar, argBaz, argCorge, _, argFred, argPlugh) {
    report = argBar;
    zulu = argFred;
    oscar = argPlugh;
    var _closure1_slot0 = report;
    entity = argBaz;
    var _closure1_slot1 = entity;
    var _closure1_slot2 = oscar;
    entity = global;
    options = entity.Object;
    golf = options.defineProperty;
    tango = {};
    entity = true;
    tango['value'] = entity;
    entity = '__esModule';
    entity = golf.bind(options)(zulu, entity, tango);
    entity = 0;
    golf = oscar[entity];
    tango = argCorge;
    entity = undefined;
    golf = tango.bind(entity)(golf);
    var _closure1_slot3 = golf;
    tango = 1;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.jsx;
    var _closure1_slot4 = tango;
    tango = golf.memo;
    mike = function(argFoo) { // Original name: VoicePanelChannelOptInNotice
        mike = argFoo;
        oscar = mike.style;
        options = mike.channel;
        var _closure2_slot0 = options;
        golf = mike.analyticsSection;
        var _closure2_slot1 = golf;
        tango = _closure1_slot3;
        zulu = tango.useCallback;
        mike = new Array(2);
        mike[0] = options;
        mike[1] = golf;
        entity = function() {
            zulu = _closure1_slot0;
            mike = _closure1_slot2;
            entity = 2;
            mike = mike[entity];
            entity = undefined;
            golf = zulu.bind(entity)(mike);
            oscar = golf.setOptInChannel;
            zulu = _closure2_slot0;
            yankee = zulu.guild_id;
            offset = zulu.id;
            zulu = {};
            mike = _closure2_slot1;
            zulu['section'] = mike;
            verify = true;
            romeo = golf;
            options = zulu;
            mike = romeo[oscar](yankee, offset, verify, options, golf);
            return entity;
        };
        golf = zulu.bind(tango)(entity, mike);
        tango = _closure1_slot4;
        yankee = _closure1_slot1;
        romeo = _closure1_slot2;
        entity = 3;
        entity = romeo[entity];
        zulu = undefined;
        mike = yankee.bind(zulu)(entity);
        entity = {};
        entity['style'] = oscar;
        verify = _closure1_slot0;
        report = 4;
        report = romeo[report];
        report = verify.bind(zulu)(report);
        oscar = report.TableRow;
        report = {};
        options = 5;
        offset = romeo[options];
        offset = verify.bind(zulu)(offset);
        backup = offset.intl;
        foxtrot = backup.string;
        offset = romeo[options];
        offset = verify.bind(zulu)(offset);
        offset = offset.t;
        offset = offset.9mysCg;
        offset = foxtrot.bind(backup)(offset);
        report['label'] = offset;
        offset = romeo[options];
        offset = verify.bind(zulu)(offset);
        foxtrot = offset.intl;
        offset = foxtrot.string;
        options = romeo[options];
        options = verify.bind(zulu)(options);
        options = options.t;
        options = options.PDUCIC;
        options = offset.bind(foxtrot)(options);
        report['subLabel'] = options;
        options = 6;
        options = romeo[options];
        options = verify.bind(zulu)(options);
        verify = options.TableRowIcon;
        options = {};
        offset = 7;
        offset = romeo[offset];
        offset = yankee.bind(zulu)(offset);
        options['source'] = offset;
        offset = 'blurple';
        options['variant'] = offset;
        options = tango.bind(zulu)(verify, options);
        report['icon'] = options;
        report['onPress'] = golf;
        golf = true;
        report['start'] = golf;
        report['end'] = golf;
        report['arrow'] = golf;
        report = tango.bind(zulu)(oscar, report);
        entity['children'] = report;
        entity = tango.bind(zulu)(mike, entity);
        return entity;
    };
    mike = tango.bind(golf)(mike);
    tango = 8;
    tango = oscar[tango];
    oscar = report.bind(entity)(tango);
    report = oscar.fileFinishedImporting;
    tango = 'modules/voice_panel/native/shared/VoicePanelChannelOptInNotice.tsx';
    tango = report.bind(oscar)(tango);
    zulu['default'] = mike;
    return entity;
})();