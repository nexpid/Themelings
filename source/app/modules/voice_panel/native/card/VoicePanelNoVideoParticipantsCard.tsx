// app/modules/voice_panel/native/card/VoicePanelNoVideoParticipantsCard.tsx
export default (function(_, argBar, argBaz, argCor, __, argFre, argPlu) {
    report = argBar;
    romeon = argBaz;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    var _closure1_slot1 = romeon;
    var _closure1_slot2 = oscard;
    entity = global;
    option = entity.Object;
    golfie = option.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(option)(zuuluu, entity, tangon);
    entity = 0;
    golfie = oscard[entity];
    tangon = argCor;
    entity = undefined;
    golfie = tangon.bind(entity)(golfie);
    var _closure1_slot3 = golfie;
    tangon = 1;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.Pressable;
    var _closure1_slot4 = tangon;
    tangon = 2;
    option = oscard[tangon];
    option = report.bind(entity)(option);
    option = option.jsx;
    var _closure1_slot5 = option;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.jsxs;
    var _closure1_slot6 = tangon;
    tangon = 3;
    tangon = oscard[tangon];
    verify = report.bind(entity)(tangon);
    option = verify.createStyles;
    tangon = {};
    offset = {'width': '100%', 'height': '100%', 'alignItems': 'center', 'justifyContent': 'center', 'padding': 16};
    yankee = 4;
    foxtra = oscard[yankee];
    foxtra = romeon.bind(entity)(foxtra);
    foxtra = foxtra.colors;
    foxtra = foxtra.VOICE_VIDEO_VIDEO_TILE_BACKGROUND;
    offset['backgroundColor'] = foxtra;
    tangon['container'] = offset;
    offset = {'marginBottom': 16, 'textAlign': 'center'};
    tangon['label'] = offset;
    offset = {'paddingHorizontal': 20, 'paddingVertical': 12, 'backgroundColor': 'white'};
    foxtra = oscard[yankee];
    foxtra = romeon.bind(entity)(foxtra);
    foxtra = foxtra.radii;
    foxtra = foxtra.round;
    offset['borderRadius'] = foxtra;
    tangon['button'] = offset;
    offset = {};
    yankee = oscard[yankee];
    yankee = romeon.bind(entity)(yankee);
    yankee = yankee.unsafe_rawColors;
    yankee = yankee.PRIMARY_860;
    offset['color'] = yankee;
    tangon['buttonText'] = offset;
    tangon = option.bind(verify)(tangon);
    var _closure1_slot7 = tangon;
    tangon = golfie.memo;
    michal = function() { // Original name: VoicePanelNoVideoParticipantsCard
        golfie = _closure1_slot3;
        report = golfie.useContext;
        michal = _closure1_slot1;
        kiloes = _closure1_slot2;
        zuuluu = 5;
        zuuluu = kiloes[zuuluu];
        tangon = undefined;
        zuuluu = michal.bind(tangon)(zuuluu);
        zuuluu = report.bind(golfie)(zuuluu);
        option = zuuluu.channelId;
        var _closure2_slot0 = option;
        zuuluu = _closure1_slot7;
        romeon = zuuluu.bind(tangon)();
        report = golfie.useCallback;
        zuuluu = new Array(1);
        zuuluu[0] = option;
        entity = function() {
            zuuluu = _closure1_slot1;
            michal = _closure1_slot2;
            entity = 6;
            michal = michal[entity];
            entity = undefined;
            report = zuuluu.bind(entity)(michal);
            tangon = report.toggleVoiceParticipantsHidden;
            zuuluu = _closure2_slot0;
            michal = false;
            michal = tangon.bind(report)(zuuluu, michal);
            return entity;
        };
        offset = report.bind(golfie)(entity, zuuluu);
        zuuluu = _closure1_slot6;
        entity = 7;
        entity = kiloes[entity];
        michal = michal.bind(tangon)(entity);
        entity = {};
        report = romeon.container;
        entity['style'] = report;
        option = _closure1_slot5;
        backup = _closure1_slot0;
        verify = 8;
        report = kiloes[verify];
        report = backup.bind(tangon)(report);
        golfie = report.Text;
        report = {'style': null, 'variant': 'text-md/semibold', 'color': 'always-white'};
        yankee = romeon.label;
        report['style'] = yankee;
        yankee = 9;
        foxtra = kiloes[yankee];
        foxtra = backup.bind(tangon)(foxtra);
        output = foxtra.intl;
        sizing = output.string;
        foxtra = kiloes[yankee];
        foxtra = backup.bind(tangon)(foxtra);
        foxtra = foxtra.t;
        foxtra = foxtra.8eBJ7+;
        foxtra = sizing.bind(output)(foxtra);
        report['children'] = foxtra;
        golfie = option.bind(tangon)(golfie, report);
        report = new Array(2);
        report[0] = golfie;
        golfie = _closure1_slot4;
        oscard = {};
        foxtra = romeon.button;
        oscard['style'] = foxtra;
        oscard['onPress'] = offset;
        verify = kiloes[verify];
        verify = backup.bind(tangon)(verify);
        offset = verify.Text;
        verify = {};
        foxtra = 'text-sm/semibold';
        verify['variant'] = foxtra;
        romeon = romeon.buttonText;
        verify['style'] = romeon;
        romeon = kiloes[yankee];
        romeon = backup.bind(tangon)(romeon);
        foxtra = romeon.intl;
        romeon = foxtra.string;
        yankee = kiloes[yankee];
        yankee = backup.bind(tangon)(yankee);
        yankee = yankee.t;
        yankee = yankee.kLQySE;
        yankee = romeon.bind(foxtra)(yankee);
        verify['children'] = yankee;
        verify = option.bind(tangon)(offset, verify);
        oscard['children'] = verify;
        oscard = option.bind(tangon)(golfie, oscard);
        report[1] = oscard;
        entity['children'] = report;
        entity = zuuluu.bind(tangon)(michal, entity);
        return entity;
    };
    michal = tangon.bind(golfie)(michal);
    tangon = 10;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/voice_panel/native/card/VoicePanelNoVideoParticipantsCard.tsx';
    tangon = report.bind(oscard)(tangon);
    zuuluu['default'] = michal;
    return entity;
})();