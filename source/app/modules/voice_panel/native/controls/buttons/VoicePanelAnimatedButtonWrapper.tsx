// app/modules/voice_panel/native/controls/buttons/VoicePanelAnimatedButtonWrapper.tsx
export default (function(argFoo, argBar, argBaz, argCorge, _, argFred, argPlugh) {
    report = argBar;
    golf = argBaz;
    zulu = argFred;
    oscar = argPlugh;
    var _closure1_slot0 = report;
    var _closure1_slot1 = golf;
    var _closure1_slot2 = oscar;
    entity = global;
    verify = entity.Object;
    options = verify.defineProperty;
    tango = {};
    entity = true;
    tango['value'] = entity;
    entity = '__esModule';
    entity = options.bind(verify)(zulu, entity, tango);
    entity = 0;
    options = oscar[entity];
    tango = argCorge;
    entity = undefined;
    tango = tango.bind(entity)(options);
    var _closure1_slot3 = tango;
    tango = 1;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    options = tango.Pressable;
    tango = 2;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.MODE_CHANGE_PHYSICS;
    var _closure1_slot4 = tango;
    tango = 3;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.jsx;
    var _closure1_slot5 = tango;
    tango = 4;
    tango = oscar[tango];
    offset = report.bind(entity)(tango);
    verify = offset.createStyles;
    tango = {};
    yankee = {'justifyContent': 'center', 'alignItems': 'center'};
    romeo = 5;
    romeo = oscar[romeo];
    romeo = golf.bind(entity)(romeo);
    romeo = romeo.radii;
    romeo = romeo.round;
    yankee['borderRadius'] = romeo;
    tango['pressableWrapper'] = yankee;
    tango = verify.bind(offset)(tango);
    var _closure1_slot6 = tango;
    tango = 6;
    tango = oscar[tango];
    golf = golf.bind(entity)(tango);
    tango = golf.createAnimatedComponent;
    tango = tango.bind(golf)(options);
    var _closure1_slot7 = tango;
    tango = {};
    golf = 'function VoicePanelAnimatedButtonWrapperTsx1(values){const{offsetFromCenter,withSpring,MODE_CHANGE_PHYSICS,withTiming}=this.__closure;offsetFromCenter.set(values.windowWidth/2-values.targetGlobalOriginX-values.targetWidth/2);return{initialValues:{originX:values.targetOriginX+offsetFromCenter.get(),opacity:0,transform:[{scale:0.5}]},animations:{originX:withSpring(values.targetOriginX,MODE_CHANGE_PHYSICS),opacity:withTiming(1,{duration:100}),transform:[{scale:withSpring(1,MODE_CHANGE_PHYSICS)}]}};}';
    tango['code'] = golf;
    var _closure1_slot8 = tango;
    tango = {};
    golf = 'function VoicePanelAnimatedButtonWrapperTsx2(values){const{withSpring,offsetFromCenter,MODE_CHANGE_PHYSICS,withTiming}=this.__closure;return{initialValues:{originX:values.currentOriginX,opacity:1,transform:[{scale:1}]},animations:{originX:withSpring(values.currentOriginX+offsetFromCenter.get(),MODE_CHANGE_PHYSICS),opacity:withTiming(0,{duration:100}),transform:[{scale:withSpring(0.5,MODE_CHANGE_PHYSICS)}]}};}';
    tango['code'] = golf;
    var _closure1_slot9 = tango;
    tango = 11;
    tango = oscar[tango];
    oscar = report.bind(entity)(tango);
    report = oscar.fileFinishedImporting;
    tango = 'modules/voice_panel/native/controls/buttons/VoicePanelAnimatedButtonWrapper.tsx';
    tango = report.bind(oscar)(tango);
    mike = function(argFoo) { // Original name: AnimatedButtonWrapper
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            entity = argFoo;
            golf = entity.props;
            offset = entity.onPress;
            verify = entity.onLongPress;
            kilo = entity.onPressIn;
            var _closure2_slot0 = kilo;
            report = entity.onPressOut;
            var _closure2_slot1 = report;
            options = entity.accessibilityLabel;
            output = entity.style;
            var _closure2_slot2 = output;
            oscar = entity.children;
            zulu = entity.pressed;
            tango = undefined;
            var _closure2_slot3 = tango;
            var _closure2_slot4 = tango;
            var _closure2_slot5 = tango;
            var _closure2_slot6 = tango;
            var _closure2_slot7 = tango;
            var _closure2_slot8 = tango;
            foxtrot = _closure1_slot0;
            romeo = _closure1_slot2;
            yankee = 6;
            romeo = romeo[yankee];
            backup = foxtrot.bind(tango)(romeo);
            foxtrot = backup.useSharedValue;
            romeo = false;
            echo = foxtrot.bind(backup)(romeo);
            romeo = null;
            if(!(romeo != zulu)) { _fun00002_ip = 136; continue _fun00001 }
 133:
            echo = zulu;
 136:
            _closure2_slot3 = echo;
            foxtrot = _closure1_slot1;
            zulu = _closure1_slot2;
            romeo = 7;
            romeo = zulu[romeo];
            romeo = foxtrot.bind(tango)(romeo);
            result = romeo.bind(tango)();
            _closure2_slot4 = result;
            romeo = _closure1_slot6;
            sizing = romeo.bind(tango)();
            _closure2_slot5 = sizing;
            foxtrot = _closure1_slot3;
            backup = foxtrot.useMemo;
            romeo = new Array(4);
            romeo[0] = echo;
            romeo[1] = result;
            romeo[2] = kilo;
            romeo[3] = report;
            report = function() {
                _fun00003: for(var _fun00004_ip = 0; ; ) switch(_fun00004_ip) {
 0:
                    entity = {};
                    tango = _closure2_slot0;
                    report = null;
                    if(!(report == tango)) { _fun00004_ip = 26; continue _fun00003 }
 17:
                    tango = function() {
                        zulu = _closure2_slot4;
                        mike = zulu.lock;
                        mike = mike.bind(zulu)();
                        zulu = _closure2_slot3;
                        mike = zulu.set;
                        entity = true;
                        entity = mike.bind(zulu)(entity);
                        entity = undefined;
                        return entity;
                    };
                    _fun00004_ip = 30; continue _fun00003;
 26:
                    tango = _closure2_slot0;
 30:
                    entity['onPressIn'] = tango;
                    tango = _closure2_slot1;
                    if(!(report == tango)) { _fun00004_ip = 52; continue _fun00003 }
 43:
                    mike = function() {
                        zulu = _closure2_slot4;
                        mike = zulu.unlock;
                        mike = mike.bind(zulu)();
                        zulu = _closure2_slot3;
                        mike = zulu.set;
                        entity = false;
                        entity = mike.bind(zulu)(entity);
                        entity = undefined;
                        return entity;
                    };
                    _fun00004_ip = 56; continue _fun00003;
 52:
                    mike = _closure2_slot1;
 56:
                    entity['onPressOut'] = mike;
                    return entity;
                }
            };
            report = backup.bind(foxtrot)(report, romeo);
            kilo = golf.width;
            _closure2_slot6 = kilo;
            backup = golf.height;
            _closure2_slot7 = backup;
            golf = _closure1_slot0;
            zulu = zulu[yankee];
            yankee = golf.bind(tango)(zulu);
            golf = yankee.useSharedValue;
            zulu = 0;
            zulu = golf.bind(yankee)(zulu);
            _closure2_slot8 = zulu;
            romeo = foxtrot.useMemo;
            yankee = new Array(1);
            yankee[0] = zulu;
            golf = function() {
                _fun00005: for(var _fun00006_ip = 0; ; ) switch(_fun00006_ip) {
 0:
                    tango = _closure1_slot0;
                    mike = _closure1_slot2;
                    entity = 8;
                    mike = mike[entity];
                    entity = undefined;
                    tango = tango.bind(entity)(mike);
                    mike = tango.isAndroid;
                    mike = mike.bind(tango)();
                    if(mike) { _fun00006_ip = 153; continue _fun00005 }
 37:
                    mike = function(argFoo) { // Original name: t
                        tango = argFoo;
                        report = _closure2_slot8;
                        mike = report.set;
                        entity = tango.windowWidth;
                        golf = 2;
                        oscar = entity / golf;
                        entity = tango.targetGlobalOriginX;
                        oscar = oscar - entity;
                        entity = tango.targetWidth;
                        entity = entity / golf;
                        entity = oscar - entity;
                        entity = mike.bind(report)(entity);
                        entity = {};
                        mike = {};
                        report = tango.targetOriginX;
                        oscar = _closure2_slot8;
                        zulu = oscar.get;
                        zulu = zulu.bind(oscar)();
                        zulu = report + zulu;
                        mike['originX'] = zulu;
                        zulu = 0;
                        mike['opacity'] = zulu;
                        report = {};
                        zulu = 0.5;
                        report['scale'] = zulu;
                        zulu = new Array(1);
                        zulu[0] = report;
                        mike['transform'] = zulu;
                        entity['initialValues'] = mike;
                        mike = {};
                        options = _closure1_slot0;
                        verify = _closure1_slot2;
                        zulu = 9;
                        oscar = verify[zulu];
                        report = undefined;
                        offset = options.bind(report)(oscar);
                        oscar = offset.withSpring;
                        tango = tango.targetOriginX;
                        golf = _closure1_slot4;
                        tango = oscar.bind(offset)(tango, golf);
                        mike['originX'] = tango;
                        tango = 10;
                        tango = verify[tango];
                        yankee = options.bind(report)(tango);
                        offset = yankee.withTiming;
                        tango = {};
                        oscar = 100;
                        tango['duration'] = oscar;
                        oscar = 1;
                        tango = offset.bind(yankee)(oscar, tango);
                        mike['opacity'] = tango;
                        tango = {};
                        zulu = verify[zulu];
                        report = options.bind(report)(zulu);
                        zulu = report.withSpring;
                        zulu = zulu.bind(report)(oscar, golf);
                        tango['scale'] = zulu;
                        zulu = new Array(1);
                        zulu[0] = tango;
                        mike['transform'] = zulu;
                        entity['animations'] = mike;
                        return entity;
                    };
                    tango = {};
                    report = _closure2_slot8;
                    tango['offsetFromCenter'] = report;
                    oscar = _closure1_slot0;
                    golf = _closure1_slot2;
                    report = 9;
                    report = golf[report];
                    report = oscar.bind(entity)(report);
                    report = report.withSpring;
                    tango['withSpring'] = report;
                    report = _closure1_slot4;
                    tango['MODE_CHANGE_PHYSICS'] = report;
                    report = 10;
                    report = golf[report];
                    report = oscar.bind(entity)(report);
                    report = report.withTiming;
                    tango['withTiming'] = report;
                    mike['__closure'] = tango;
                    tango = 16238937246135.0;
                    mike['__workletHash'] = tango;
                    zulu = _closure1_slot8;
                    mike['__initData'] = zulu;
                    return mike;
 153:
                    return entity;
                }
            };
            romeo = romeo.bind(foxtrot)(golf, yankee);
            yankee = foxtrot.useMemo;
            golf = new Array(1);
            golf[0] = zulu;
            zulu = function() {
                _fun00007: for(var _fun00008_ip = 0; ; ) switch(_fun00008_ip) {
 0:
                    tango = _closure1_slot0;
                    mike = _closure1_slot2;
                    entity = 8;
                    mike = mike[entity];
                    entity = undefined;
                    tango = tango.bind(entity)(mike);
                    mike = tango.isAndroid;
                    mike = mike.bind(tango)();
                    if(mike) { _fun00008_ip = 153; continue _fun00007 }
 37:
                    mike = function(argFoo) { // Original name: t
                        tango = argFoo;
                        entity = {};
                        mike = {};
                        zulu = tango.currentOriginX;
                        mike['originX'] = zulu;
                        zulu = 1;
                        mike['opacity'] = zulu;
                        report = {};
                        report['scale'] = zulu;
                        zulu = new Array(1);
                        zulu[0] = report;
                        mike['transform'] = zulu;
                        entity['initialValues'] = mike;
                        mike = {};
                        oscar = _closure1_slot0;
                        options = _closure1_slot2;
                        zulu = 9;
                        verify = options[zulu];
                        report = undefined;
                        offset = oscar.bind(report)(verify);
                        verify = offset.withSpring;
                        yankee = tango.currentOriginX;
                        romeo = _closure2_slot8;
                        tango = romeo.get;
                        tango = tango.bind(romeo)();
                        tango = yankee + tango;
                        golf = _closure1_slot4;
                        tango = verify.bind(offset)(tango, golf);
                        mike['originX'] = tango;
                        tango = 10;
                        tango = options[tango];
                        yankee = oscar.bind(report)(tango);
                        offset = yankee.withTiming;
                        verify = {};
                        tango = 100;
                        verify['duration'] = tango;
                        tango = 0;
                        tango = offset.bind(yankee)(tango, verify);
                        mike['opacity'] = tango;
                        tango = {};
                        zulu = options[zulu];
                        oscar = oscar.bind(report)(zulu);
                        report = oscar.withSpring;
                        zulu = 0.5;
                        zulu = report.bind(oscar)(zulu, golf);
                        tango['scale'] = zulu;
                        zulu = new Array(1);
                        zulu[0] = tango;
                        mike['transform'] = zulu;
                        entity['animations'] = mike;
                        return entity;
                    };
                    tango = {};
                    oscar = _closure1_slot0;
                    golf = _closure1_slot2;
                    report = 9;
                    report = golf[report];
                    report = oscar.bind(entity)(report);
                    report = report.withSpring;
                    tango['withSpring'] = report;
                    report = _closure2_slot8;
                    tango['offsetFromCenter'] = report;
                    report = _closure1_slot4;
                    tango['MODE_CHANGE_PHYSICS'] = report;
                    report = 10;
                    report = golf[report];
                    report = oscar.bind(entity)(report);
                    report = report.withTiming;
                    tango['withTiming'] = report;
                    mike['__closure'] = tango;
                    tango = 17504057367727.0;
                    mike['__workletHash'] = tango;
                    zulu = _closure1_slot9;
                    mike['__initData'] = zulu;
                    return mike;
 153:
                    return entity;
                }
            };
            yankee = yankee.bind(foxtrot)(zulu, golf);
            golf = foxtrot.useMemo;
            zulu = new Array(4);
            zulu[0] = output;
            sizing = sizing.pressableWrapper;
            zulu[1] = sizing;
            zulu[2] = kilo;
            zulu[3] = backup;
            mike = function() {
                entity = _closure2_slot5;
                zulu = entity.pressableWrapper;
                entity = new Array(3);
                entity[0] = zulu;
                zulu = {};
                tango = _closure2_slot6;
                zulu['width'] = tango;
                tango = _closure2_slot7;
                zulu['height'] = tango;
                entity[1] = zulu;
                mike = _closure2_slot2;
                entity[2] = mike;
                return entity;
            };
            golf = golf.bind(foxtrot)(mike, zulu);
            zulu = _closure1_slot5;
            mike = _closure1_slot7;
            entity = {};
            entity['entering'] = romeo;
            entity['exiting'] = yankee;
            entity['onPress'] = offset;
            entity['onLongPress'] = verify;
            source = entity;
            update = report;
            report = copyDataProperties(source, update);
            verify = 'button';
            report = 'accessibilityRole';
            entity[report] = verify;
            report = 'accessibilityLabel';
            entity[report] = options;
            report = 'style';
            entity[report] = golf;
            report = 'children';
            entity[report] = oscar;
            entity = zulu.bind(tango)(mike, entity);
            return entity;
        }
    };
    zulu['default'] = mike;
    return entity;
})();