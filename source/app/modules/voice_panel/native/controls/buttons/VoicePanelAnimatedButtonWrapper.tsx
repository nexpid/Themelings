// app/modules/voice_panel/native/controls/buttons/VoicePanelAnimatedButtonWrapper.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    report = argBar;
    golfie = argBaz;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    var _closure1_slot1 = golfie;
    var _closure1_slot2 = oscard;
    entity = global;
    verify = entity.Object;
    option = verify.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = option.bind(verify)(zuuluu, entity, tangon);
    entity = 0;
    option = oscard[entity];
    tangon = argCor;
    entity = undefined;
    tangon = tangon.bind(entity)(option);
    var _closure1_slot3 = tangon;
    tangon = 1;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    option = tangon.Pressable;
    tangon = 2;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.MODE_CHANGE_PHYSICS;
    var _closure1_slot4 = tangon;
    tangon = 3;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.jsx;
    var _closure1_slot5 = tangon;
    tangon = 4;
    tangon = oscard[tangon];
    offset = report.bind(entity)(tangon);
    verify = offset.createStyles;
    tangon = {};
    yankee = {'justifyContent': 'center', 'alignItems': 'center'};
    romeon = 5;
    romeon = oscard[romeon];
    romeon = golfie.bind(entity)(romeon);
    romeon = romeon.radii;
    romeon = romeon.round;
    yankee['borderRadius'] = romeon;
    tangon['pressableWrapper'] = yankee;
    tangon = verify.bind(offset)(tangon);
    var _closure1_slot6 = tangon;
    tangon = 6;
    tangon = oscard[tangon];
    golfie = golfie.bind(entity)(tangon);
    tangon = golfie.createAnimatedComponent;
    tangon = tangon.bind(golfie)(option);
    var _closure1_slot7 = tangon;
    tangon = {};
    golfie = 'function VoicePanelAnimatedButtonWrapperTsx1(values){const{offsetFromCenter,withSpring,MODE_CHANGE_PHYSICS,withTiming}=this.__closure;offsetFromCenter.set(values.windowWidth/2-values.targetGlobalOriginX-values.targetWidth/2);return{initialValues:{originX:values.targetOriginX+offsetFromCenter.get(),opacity:0,transform:[{scale:0.5}]},animations:{originX:withSpring(values.targetOriginX,MODE_CHANGE_PHYSICS),opacity:withTiming(1,{duration:100}),transform:[{scale:withSpring(1,MODE_CHANGE_PHYSICS)}]}};}';
    tangon['code'] = golfie;
    var _closure1_slot8 = tangon;
    tangon = {};
    golfie = 'function VoicePanelAnimatedButtonWrapperTsx2(values){const{withSpring,offsetFromCenter,MODE_CHANGE_PHYSICS,withTiming}=this.__closure;return{initialValues:{originX:values.currentOriginX,opacity:1,transform:[{scale:1}]},animations:{originX:withSpring(values.currentOriginX+offsetFromCenter.get(),MODE_CHANGE_PHYSICS),opacity:withTiming(0,{duration:100}),transform:[{scale:withSpring(0.5,MODE_CHANGE_PHYSICS)}]}};}';
    tangon['code'] = golfie;
    var _closure1_slot9 = tangon;
    tangon = 11;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/voice_panel/native/controls/buttons/VoicePanelAnimatedButtonWrapper.tsx';
    tangon = report.bind(oscard)(tangon);
    michal = function(argFoo) { // Original name: AnimatedButtonWrapper
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            entity = argFoo;
            golfie = entity.props;
            offset = entity.onPress;
            verify = entity.onLongPress;
            kiloes = entity.onPressIn;
            var _closure2_slot0 = kiloes;
            report = entity.onPressOut;
            var _closure2_slot1 = report;
            option = entity.accessibilityLabel;
            output = entity.style;
            var _closure2_slot2 = output;
            oscard = entity.children;
            zuuluu = entity.pressed;
            tangon = undefined;
            var _closure2_slot3 = tangon;
            var _closure2_slot4 = tangon;
            var _closure2_slot5 = tangon;
            var _closure2_slot6 = tangon;
            var _closure2_slot7 = tangon;
            var _closure2_slot8 = tangon;
            foxtra = _closure1_slot0;
            romeon = _closure1_slot2;
            yankee = 6;
            romeon = romeon[yankee];
            backup = foxtra.bind(tangon)(romeon);
            foxtra = backup.useSharedValue;
            romeon = false;
            echoed = foxtra.bind(backup)(romeon);
            romeon = null;
            if(!(romeon != zuuluu)) { _fun00002_ip = 136; continue _fun00001 }
 133:
            echoed = zuuluu;
 136:
            _closure2_slot3 = echoed;
            foxtra = _closure1_slot1;
            zuuluu = _closure1_slot2;
            romeon = 7;
            romeon = zuuluu[romeon];
            romeon = foxtra.bind(tangon)(romeon);
            result = romeon.bind(tangon)();
            _closure2_slot4 = result;
            romeon = _closure1_slot6;
            sizing = romeon.bind(tangon)();
            _closure2_slot5 = sizing;
            foxtra = _closure1_slot3;
            backup = foxtra.useMemo;
            romeon = new Array(4);
            romeon[0] = echoed;
            romeon[1] = result;
            romeon[2] = kiloes;
            romeon[3] = report;
            report = function() {
                _fun00003: for(var _fun00004_ip = 0; ; ) switch(_fun00004_ip) {
 0:
                    entity = {};
                    tangon = _closure2_slot0;
                    report = null;
                    if(!(report == tangon)) { _fun00004_ip = 26; continue _fun00003 }
 17:
                    tangon = function() {
                        zuuluu = _closure2_slot4;
                        michal = zuuluu.lock;
                        michal = michal.bind(zuuluu)();
                        zuuluu = _closure2_slot3;
                        michal = zuuluu.set;
                        entity = true;
                        entity = michal.bind(zuuluu)(entity);
                        entity = undefined;
                        return entity;
                    };
                    _fun00004_ip = 30; continue _fun00003;
 26:
                    tangon = _closure2_slot0;
 30:
                    entity['onPressIn'] = tangon;
                    tangon = _closure2_slot1;
                    if(!(report == tangon)) { _fun00004_ip = 52; continue _fun00003 }
 43:
                    michal = function() {
                        zuuluu = _closure2_slot4;
                        michal = zuuluu.unlock;
                        michal = michal.bind(zuuluu)();
                        zuuluu = _closure2_slot3;
                        michal = zuuluu.set;
                        entity = false;
                        entity = michal.bind(zuuluu)(entity);
                        entity = undefined;
                        return entity;
                    };
                    _fun00004_ip = 56; continue _fun00003;
 52:
                    michal = _closure2_slot1;
 56:
                    entity['onPressOut'] = michal;
                    return entity;
                }
            };
            report = backup.bind(foxtra)(report, romeon);
            kiloes = golfie.width;
            _closure2_slot6 = kiloes;
            backup = golfie.height;
            _closure2_slot7 = backup;
            golfie = _closure1_slot0;
            zuuluu = zuuluu[yankee];
            yankee = golfie.bind(tangon)(zuuluu);
            golfie = yankee.useSharedValue;
            zuuluu = 0;
            zuuluu = golfie.bind(yankee)(zuuluu);
            _closure2_slot8 = zuuluu;
            romeon = foxtra.useMemo;
            yankee = new Array(1);
            yankee[0] = zuuluu;
            golfie = function() {
                _fun00005: for(var _fun00006_ip = 0; ; ) switch(_fun00006_ip) {
 0:
                    tangon = _closure1_slot0;
                    michal = _closure1_slot2;
                    entity = 8;
                    michal = michal[entity];
                    entity = undefined;
                    tangon = tangon.bind(entity)(michal);
                    michal = tangon.isAndroid;
                    michal = michal.bind(tangon)();
                    if(michal) { _fun00006_ip = 153; continue _fun00005 }
 37:
                    michal = function(argFoo) { // Original name: t
                        tangon = argFoo;
                        report = _closure2_slot8;
                        michal = report.set;
                        entity = tangon.windowWidth;
                        golfie = 2;
                        oscard = entity / golfie;
                        entity = tangon.targetGlobalOriginX;
                        oscard = oscard - entity;
                        entity = tangon.targetWidth;
                        entity = entity / golfie;
                        entity = oscard - entity;
                        entity = michal.bind(report)(entity);
                        entity = {};
                        michal = {};
                        report = tangon.targetOriginX;
                        oscard = _closure2_slot8;
                        zuuluu = oscard.get;
                        zuuluu = zuuluu.bind(oscard)();
                        zuuluu = report + zuuluu;
                        michal['originX'] = zuuluu;
                        zuuluu = 0;
                        michal['opacity'] = zuuluu;
                        report = {};
                        zuuluu = 0.5;
                        report['scale'] = zuuluu;
                        zuuluu = new Array(1);
                        zuuluu[0] = report;
                        michal['transform'] = zuuluu;
                        entity['initialValues'] = michal;
                        michal = {};
                        option = _closure1_slot0;
                        verify = _closure1_slot2;
                        zuuluu = 9;
                        oscard = verify[zuuluu];
                        report = undefined;
                        offset = option.bind(report)(oscard);
                        oscard = offset.withSpring;
                        tangon = tangon.targetOriginX;
                        golfie = _closure1_slot4;
                        tangon = oscard.bind(offset)(tangon, golfie);
                        michal['originX'] = tangon;
                        tangon = 10;
                        tangon = verify[tangon];
                        yankee = option.bind(report)(tangon);
                        offset = yankee.withTiming;
                        tangon = {};
                        oscard = 100;
                        tangon['duration'] = oscard;
                        oscard = 1;
                        tangon = offset.bind(yankee)(oscard, tangon);
                        michal['opacity'] = tangon;
                        tangon = {};
                        zuuluu = verify[zuuluu];
                        report = option.bind(report)(zuuluu);
                        zuuluu = report.withSpring;
                        zuuluu = zuuluu.bind(report)(oscard, golfie);
                        tangon['scale'] = zuuluu;
                        zuuluu = new Array(1);
                        zuuluu[0] = tangon;
                        michal['transform'] = zuuluu;
                        entity['animations'] = michal;
                        return entity;
                    };
                    tangon = {};
                    report = _closure2_slot8;
                    tangon['offsetFromCenter'] = report;
                    oscard = _closure1_slot0;
                    golfie = _closure1_slot2;
                    report = 9;
                    report = golfie[report];
                    report = oscard.bind(entity)(report);
                    report = report.withSpring;
                    tangon['withSpring'] = report;
                    report = _closure1_slot4;
                    tangon['MODE_CHANGE_PHYSICS'] = report;
                    report = 10;
                    report = golfie[report];
                    report = oscard.bind(entity)(report);
                    report = report.withTiming;
                    tangon['withTiming'] = report;
                    michal['__closure'] = tangon;
                    tangon = 16238937246135.0;
                    michal['__workletHash'] = tangon;
                    zuuluu = _closure1_slot8;
                    michal['__initData'] = zuuluu;
                    return michal;
 153:
                    return entity;
                }
            };
            romeon = romeon.bind(foxtra)(golfie, yankee);
            yankee = foxtra.useMemo;
            golfie = new Array(1);
            golfie[0] = zuuluu;
            zuuluu = function() {
                _fun00007: for(var _fun00008_ip = 0; ; ) switch(_fun00008_ip) {
 0:
                    tangon = _closure1_slot0;
                    michal = _closure1_slot2;
                    entity = 8;
                    michal = michal[entity];
                    entity = undefined;
                    tangon = tangon.bind(entity)(michal);
                    michal = tangon.isAndroid;
                    michal = michal.bind(tangon)();
                    if(michal) { _fun00008_ip = 153; continue _fun00007 }
 37:
                    michal = function(argFoo) { // Original name: t
                        tangon = argFoo;
                        entity = {};
                        michal = {};
                        zuuluu = tangon.currentOriginX;
                        michal['originX'] = zuuluu;
                        zuuluu = 1;
                        michal['opacity'] = zuuluu;
                        report = {};
                        report['scale'] = zuuluu;
                        zuuluu = new Array(1);
                        zuuluu[0] = report;
                        michal['transform'] = zuuluu;
                        entity['initialValues'] = michal;
                        michal = {};
                        oscard = _closure1_slot0;
                        option = _closure1_slot2;
                        zuuluu = 9;
                        verify = option[zuuluu];
                        report = undefined;
                        offset = oscard.bind(report)(verify);
                        verify = offset.withSpring;
                        yankee = tangon.currentOriginX;
                        romeon = _closure2_slot8;
                        tangon = romeon.get;
                        tangon = tangon.bind(romeon)();
                        tangon = yankee + tangon;
                        golfie = _closure1_slot4;
                        tangon = verify.bind(offset)(tangon, golfie);
                        michal['originX'] = tangon;
                        tangon = 10;
                        tangon = option[tangon];
                        yankee = oscard.bind(report)(tangon);
                        offset = yankee.withTiming;
                        verify = {};
                        tangon = 100;
                        verify['duration'] = tangon;
                        tangon = 0;
                        tangon = offset.bind(yankee)(tangon, verify);
                        michal['opacity'] = tangon;
                        tangon = {};
                        zuuluu = option[zuuluu];
                        oscard = oscard.bind(report)(zuuluu);
                        report = oscard.withSpring;
                        zuuluu = 0.5;
                        zuuluu = report.bind(oscard)(zuuluu, golfie);
                        tangon['scale'] = zuuluu;
                        zuuluu = new Array(1);
                        zuuluu[0] = tangon;
                        michal['transform'] = zuuluu;
                        entity['animations'] = michal;
                        return entity;
                    };
                    tangon = {};
                    oscard = _closure1_slot0;
                    golfie = _closure1_slot2;
                    report = 9;
                    report = golfie[report];
                    report = oscard.bind(entity)(report);
                    report = report.withSpring;
                    tangon['withSpring'] = report;
                    report = _closure2_slot8;
                    tangon['offsetFromCenter'] = report;
                    report = _closure1_slot4;
                    tangon['MODE_CHANGE_PHYSICS'] = report;
                    report = 10;
                    report = golfie[report];
                    report = oscard.bind(entity)(report);
                    report = report.withTiming;
                    tangon['withTiming'] = report;
                    michal['__closure'] = tangon;
                    tangon = 17504057367727.0;
                    michal['__workletHash'] = tangon;
                    zuuluu = _closure1_slot9;
                    michal['__initData'] = zuuluu;
                    return michal;
 153:
                    return entity;
                }
            };
            yankee = yankee.bind(foxtra)(zuuluu, golfie);
            golfie = foxtra.useMemo;
            zuuluu = new Array(4);
            zuuluu[0] = output;
            sizing = sizing.pressableWrapper;
            zuuluu[1] = sizing;
            zuuluu[2] = kiloes;
            zuuluu[3] = backup;
            michal = function() {
                entity = _closure2_slot5;
                zuuluu = entity.pressableWrapper;
                entity = new Array(3);
                entity[0] = zuuluu;
                zuuluu = {};
                tangon = _closure2_slot6;
                zuuluu['width'] = tangon;
                tangon = _closure2_slot7;
                zuuluu['height'] = tangon;
                entity[1] = zuuluu;
                michal = _closure2_slot2;
                entity[2] = michal;
                return entity;
            };
            golfie = golfie.bind(foxtra)(michal, zuuluu);
            zuuluu = _closure1_slot5;
            michal = _closure1_slot7;
            entity = {};
            entity['entering'] = romeon;
            entity['exiting'] = yankee;
            entity['onPress'] = offset;
            entity['onLongPress'] = verify;
            source = entity;
            update = report;
            report = copyDataProperties(source, update);
            verify = 'button';
            report = 'accessibilityRole';
            entity[report] = verify;
            report = 'accessibilityLabel';
            entity[report] = option;
            report = 'style';
            entity[report] = golfie;
            report = 'children';
            entity[report] = oscard;
            entity = zuuluu.bind(tangon)(michal, entity);
            return entity;
        }
    };
    zuuluu['default'] = michal;
    return entity;
})();