// app/modules/voice_panel/native/controls/buttons/VoicePanelActivitiesButton.tsx
export default (function(argFoo, argBar, argBaz, argCorge, _, argFred, argPlugh) {
    report = argBar;
    yankee = argBaz;
    zulu = argFred;
    oscar = argPlugh;
    var _closure1_slot0 = report;
    var _closure1_slot1 = yankee;
    var _closure1_slot2 = oscar;
    entity = global;
    options = entity.Object;
    golf = options.defineProperty;
    tango = {};
    entity = true;
    tango['value'] = entity;
    entity = '__esModule';
    entity = golf.bind(options)(zulu, entity, tango);
    entity = 0;
    golf = oscar[entity];
    tango = argCorge;
    entity = undefined;
    tango = tango.bind(entity)(golf);
    var _closure1_slot3 = tango;
    tango = 1;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.View;
    var _closure1_slot4 = tango;
    tango = 2;
    golf = oscar[tango];
    golf = report.bind(entity)(golf);
    golf = golf.jsx;
    var _closure1_slot5 = golf;
    golf = oscar[tango];
    golf = report.bind(entity)(golf);
    golf = golf.Fragment;
    var _closure1_slot6 = golf;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.jsxs;
    var _closure1_slot7 = tango;
    tango = 3;
    tango = oscar[tango];
    options = report.bind(entity)(tango);
    golf = options.createStyles;
    tango = {};
    verify = {};
    offset = 4;
    romeo = oscar[offset];
    romeo = yankee.bind(entity)(romeo);
    romeo = romeo.colors;
    romeo = romeo.WHITE;
    verify['tintColor'] = romeo;
    tango['icon'] = verify;
    verify = {'position': 'absolute', 'justifyContent': 'center', 'alignItems': 'center', 'width': '100%', 'height': '100%'};
    tango['iconContainer'] = verify;
    verify = {'position': 'absolute', 'zIndex': 1, 'width': 10, 'height': 10, 'borderRadius': null, 'top': 0, 'right': 0};
    romeo = oscar[offset];
    romeo = yankee.bind(entity)(romeo);
    romeo = romeo.radii;
    romeo = romeo.round;
    verify['borderRadius'] = romeo;
    tango['badge'] = verify;
    verify = {};
    offset = oscar[offset];
    offset = yankee.bind(entity)(offset);
    offset = offset.colors;
    offset = offset.WHITE;
    verify['backgroundColor'] = offset;
    tango['whiteBG'] = verify;
    tango = golf.bind(options)(tango);
    var _closure1_slot8 = tango;
    tango = 14;
    tango = oscar[tango];
    oscar = report.bind(entity)(tango);
    report = oscar.fileFinishedImporting;
    tango = 'modules/voice_panel/native/controls/buttons/VoicePanelActivitiesButton.tsx';
    tango = report.bind(oscar)(tango);
    mike = function(argFoo) { // Original name: ActivitiesButton
        _fun122416: for(var _fun122416_ip = 0; ; ) switch(_fun122416_ip) {
 0:
            entity = argFoo;
            romeo = entity.props;
            var _closure2_slot0 = romeo;
            mike = entity.openTab;
            var _closure2_slot1 = mike;
            verify = entity.wrapperSpecs;
            entity = _closure1_slot8;
            tango = undefined;
            yankee = entity.bind(tango)();
            var _closure2_slot2 = yankee;
            zulu = _closure1_slot0;
            options = _closure1_slot2;
            entity = 5;
            entity = options[entity];
            golf = zulu.bind(tango)(entity);
            entity = golf.useVoicePanelButtonStyles;
            verify = entity.bind(golf)(verify);
            var _closure2_slot3 = verify;
            entity = 6;
            entity = options[entity];
            golf = zulu.bind(tango)(entity);
            entity = golf.useShowActivityIndicator;
            backup = entity.bind(golf)();
            var _closure2_slot4 = backup;
            offset = _closure1_slot3;
            golf = offset.useRef;
            entity = null;
            entity = golf.bind(offset)(entity);
            var _closure2_slot5 = entity;
            entity = 7;
            entity = options[entity];
            entity = zulu.bind(tango)(entity);
            foxtrot = entity.OpenPlatformAppLauncherExperiment;
            golf = foxtrot.useExperiment;
            zulu = {};
            entity = 'VoicePanelActivitiesButton';
            zulu['location'] = entity;
            entity = {};
            kilo = true;
            entity['autoTrackExposure'] = kilo;
            entity = golf.bind(foxtrot)(zulu, entity);
            entity = entity.enabled;
            var _closure2_slot6 = entity;
            golf = offset.useCallback;
            zulu = new Array(1);
            zulu[0] = mike;
            mike = function() {
                zulu = _closure2_slot1;
                mike = {};
                entity = 'app_launcher';
                mike['tab'] = entity;
                report = _closure1_slot0;
                tango = _closure1_slot2;
                entity = 8;
                tango = tango[entity];
                entity = undefined;
                tango = report.bind(entity)(tango);
                tango = tango.VoicePanelTabAnalyticsSources;
                tango = tango.CONNECTED_BUTTON;
                mike['source'] = tango;
                mike = zulu.bind(entity)(mike);
                return entity;
            };
            golf = golf.bind(offset)(mike, zulu);
            mike = verify.iconBg;
            foxtrot = mike.backgroundColor;
            var _closure2_slot7 = foxtrot;
            zulu = offset.useMemo;
            mike = verify.iconFill;
            kilo = mike.color;
            mike = new Array(3);
            mike[0] = kilo;
            mike[1] = entity;
            entity = yankee.iconContainer;
            mike[2] = entity;
            entity = function() {
                _fun122418: for(var _fun122418_ip = 0; ; ) switch(_fun122418_ip) {
 0:
                    report = _closure1_slot5;
                    mike = _closure2_slot6;
                    golf = _closure1_slot0;
                    tango = _closure1_slot2;
                    if(mike) { _fun122418_ip = 47; continue _fun122418 }
 25:
                    mike = 10;
                    zulu = tango[mike];
                    mike = undefined;
                    mike = golf.bind(mike)(zulu);
                    zulu = mike.ActivitiesIcon;
                    _fun122418_ip = 67; continue _fun122418;
 47:
                    mike = 9;
                    tango = tango[mike];
                    mike = undefined;
                    mike = golf.bind(mike)(tango);
                    zulu = mike.AppsIcon;
 67:
                    mike = {};
                    tango = _closure2_slot3;
                    tango = tango.iconFill;
                    tango = tango.color;
                    mike['color'] = tango;
                    tango = undefined;
                    report = report.bind(tango)(zulu, mike);
                    zulu = _closure1_slot5;
                    mike = _closure1_slot4;
                    entity = {};
                    golf = _closure2_slot2;
                    golf = golf.iconContainer;
                    entity['style'] = golf;
                    oscar = _closure2_slot5;
                    entity['ref'] = oscar;
                    entity['children'] = report;
                    entity = zulu.bind(tango)(mike, entity);
                    return entity;
                }
            };
            offset = zulu.bind(offset)(entity, mike);
            var _closure2_slot8 = offset;
            zulu = _closure1_slot5;
            mike = _closure1_slot1;
            entity = 11;
            entity = options[entity];
            mike = mike.bind(tango)(entity);
            entity = {};
            entity['onPress'] = golf;
            entity['props'] = romeo;
            golf = undefined;
            if(backup) { _fun122416_ip = 328; continue _fun122416 }
 319:
            options = {};
            options['backgroundColor'] = foxtrot;
            golf = options;
 328:
            entity['style'] = golf;
            sizing = _closure1_slot0;
            output = _closure1_slot2;
            golf = 12;
            options = output[golf];
            options = sizing.bind(tango)(options);
            kilo = options.intl;
            options = kilo.string;
            golf = output[golf];
            golf = sizing.bind(tango)(golf);
            golf = golf.t;
            golf = golf.IC5Anp;
            golf = options.bind(kilo)(golf);
            entity['accessibilityLabel'] = golf;
            options = _closure1_slot3;
            golf = options.useMemo;
            oscar = new Array(6);
            oscar[0] = backup;
            oscar[1] = foxtrot;
            romeo = romeo.width;
            oscar[2] = romeo;
            yankee = yankee.badge;
            oscar[3] = yankee;
            oscar[4] = offset;
            verify = verify.iconBadgeIndicator;
            oscar[5] = verify;
            report = function() {
                _fun122419: for(var _fun122419_ip = 0; ; ) switch(_fun122419_ip) {
 0:
                    entity = _closure2_slot4;
                    if(entity) { _fun122419_ip = 19; continue _fun122419 }
 10:
                    entity = _closure2_slot8;
                    _fun122419_ip = 205; continue _fun122419;
 19:
                    report = _closure1_slot7;
                    tango = _closure1_slot6;
                    zulu = {};
                    offset = _closure1_slot5;
                    golf = _closure1_slot1;
                    oscar = _closure1_slot2;
                    mike = 13;
                    oscar = oscar[mike];
                    mike = undefined;
                    verify = golf.bind(mike)(oscar);
                    oscar = {'fill': null, 'circleRadius': null, 'cutoutRadius': 8, 'enableCutout': null, 'cutoutPositionInDegrees': 45, 'alignBadgeEdgeWithCircleEdge': true, 'badgeRadius': 5, 'scaleToPixelDensity': true};
                    golf = _closure2_slot7;
                    oscar['fill'] = golf;
                    golf = _closure2_slot0;
                    yankee = golf.width;
                    golf = 2;
                    golf = yankee / golf;
                    oscar['circleRadius'] = golf;
                    golf = _closure2_slot4;
                    oscar['enableCutout'] = golf;
                    verify = offset.bind(mike)(verify, oscar);
                    oscar = new Array(3);
                    oscar[0] = verify;
                    verify = _closure2_slot8;
                    oscar[1] = verify;
                    if(!golf) { _fun122419_ip = 191; continue _fun122419 }
 139:
                    offset = _closure1_slot5;
                    verify = _closure1_slot4;
                    options = {};
                    yankee = _closure2_slot2;
                    foxtrot = yankee.badge;
                    yankee = new Array(2);
                    yankee[0] = foxtrot;
                    romeo = _closure2_slot3;
                    romeo = romeo.iconBadgeIndicator;
                    yankee[1] = romeo;
                    options['style'] = yankee;
                    golf = offset.bind(mike)(verify, options);
 191:
                    oscar[2] = golf;
                    zulu['children'] = oscar;
                    entity = report.bind(mike)(tango, zulu);
 205:
                    return entity;
                }
            };
            report = golf.bind(options)(report, oscar);
            entity['children'] = report;
            entity = zulu.bind(tango)(mike, entity);
            return entity;
        }
    };
    zulu['default'] = mike;
    return entity;
})();