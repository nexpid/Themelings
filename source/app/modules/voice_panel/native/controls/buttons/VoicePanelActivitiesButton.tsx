// app/modules/voice_panel/native/controls/buttons/VoicePanelActivitiesButton.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    report = argBar;
    yankee = argBaz;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    var _closure1_slot1 = yankee;
    var _closure1_slot2 = oscard;
    entity = global;
    option = entity.Object;
    golfie = option.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(option)(zuuluu, entity, tangon);
    entity = 0;
    golfie = oscard[entity];
    tangon = argCor;
    entity = undefined;
    tangon = tangon.bind(entity)(golfie);
    var _closure1_slot3 = tangon;
    tangon = 1;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.View;
    var _closure1_slot4 = tangon;
    tangon = 2;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.ContentDismissActionType;
    var _closure1_slot5 = tangon;
    tangon = 3;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    golfie = tangon.jsx;
    var _closure1_slot6 = golfie;
    golfie = tangon.Fragment;
    var _closure1_slot7 = golfie;
    tangon = tangon.jsxs;
    var _closure1_slot8 = tangon;
    tangon = 4;
    tangon = oscard[tangon];
    option = report.bind(entity)(tangon);
    golfie = option.createStyles;
    tangon = {};
    verify = {};
    offset = 5;
    romeon = oscard[offset];
    romeon = yankee.bind(entity)(romeon);
    romeon = romeon.colors;
    romeon = romeon.WHITE;
    verify['tintColor'] = romeon;
    tangon['icon'] = verify;
    verify = {'position': 'absolute', 'justifyContent': 'center', 'alignItems': 'center', 'width': '100%', 'height': '100%'};
    tangon['iconContainer'] = verify;
    verify = {'position': 'absolute', 'zIndex': 1, 'width': 10, 'height': 10, 'borderRadius': null, 'top': 0, 'right': 0};
    romeon = oscard[offset];
    romeon = yankee.bind(entity)(romeon);
    romeon = romeon.radii;
    romeon = romeon.round;
    verify['borderRadius'] = romeon;
    tangon['badge'] = verify;
    verify = {};
    offset = oscard[offset];
    offset = yankee.bind(entity)(offset);
    offset = offset.colors;
    offset = offset.WHITE;
    verify['backgroundColor'] = offset;
    tangon['whiteBG'] = verify;
    tangon = golfie.bind(option)(tangon);
    var _closure1_slot9 = tangon;
    tangon = 18;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/voice_panel/native/controls/buttons/VoicePanelActivitiesButton.tsx';
    tangon = report.bind(oscard)(tangon);
    michal = function(argFoo) { // Original name: ActivitiesButton
        entity = argFoo;
        michal = entity.props;
        var _closure2_slot0 = michal;
        golfie = entity.openTab;
        var _closure2_slot1 = golfie;
        offset = entity.wrapperSpecs;
        michal = _closure1_slot9;
        tangon = undefined;
        michal = michal.bind(tangon)();
        var _closure2_slot2 = michal;
        option = _closure1_slot0;
        verify = _closure1_slot2;
        zuuluu = 6;
        zuuluu = verify[zuuluu];
        oscard = option.bind(tangon)(zuuluu);
        zuuluu = oscard.useVoicePanelButtonStyles;
        zuuluu = zuuluu.bind(oscard)(offset);
        var _closure2_slot3 = zuuluu;
        oscard = 7;
        oscard = verify[oscard];
        yankee = option.bind(tangon)(oscard);
        offset = yankee.useNewestBadgeableVersion;
        oscard = {};
        romeon = 8;
        romeon = verify[romeon];
        romeon = option.bind(tangon)(romeon);
        romeon = romeon.EmbeddedActivitySurfaces;
        romeon = romeon.VOICE_LAUNCHER;
        oscard['surface'] = romeon;
        oscard = offset.bind(yankee)(oscard);
        offset = _closure1_slot3;
        romeon = offset.useRef;
        yankee = null;
        yankee = romeon.bind(offset)(yankee);
        var _closure2_slot4 = yankee;
        yankee = 9;
        yankee = verify[yankee];
        yankee = option.bind(tangon)(yankee);
        backup = yankee.ActivitiesControllerIconMobileExperiment;
        foxtra = backup.useExperiment;
        romeon = {};
        yankee = 'VoicePanelActivitiesButton';
        romeon['location'] = yankee;
        yankee = {};
        kiloes = true;
        yankee['autoTrackExposure'] = kiloes;
        yankee = foxtra.bind(backup)(romeon, yankee);
        yankee = yankee.enabled;
        var _closure2_slot5 = yankee;
        foxtra = offset.useCallback;
        romeon = new Array(1);
        romeon[0] = golfie;
        golfie = function() {
            zuuluu = _closure2_slot1;
            michal = {};
            entity = 'app_launcher';
            michal['tab'] = entity;
            report = _closure1_slot0;
            tangon = _closure1_slot2;
            entity = 10;
            tangon = tangon[entity];
            entity = undefined;
            tangon = report.bind(entity)(tangon);
            tangon = tangon.VoicePanelTabAnalyticsSources;
            tangon = tangon.CONNECTED_BUTTON;
            michal['source'] = tangon;
            michal = zuuluu.bind(entity)(michal);
            return entity;
        };
        golfie = foxtra.bind(offset)(golfie, romeon);
        var _closure2_slot6 = golfie;
        golfie = zuuluu.iconBg;
        golfie = golfie.backgroundColor;
        var _closure2_slot7 = golfie;
        golfie = offset.useMemo;
        zuuluu = zuuluu.iconFill;
        romeon = zuuluu.color;
        zuuluu = new Array(3);
        zuuluu[0] = romeon;
        zuuluu[1] = yankee;
        michal = michal.iconContainer;
        zuuluu[2] = michal;
        michal = function() {
            _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
                report = _closure1_slot6;
                michal = _closure2_slot5;
                golfie = _closure1_slot0;
                tangon = _closure1_slot2;
                if(michal) { _fun00002_ip = 47; continue _fun00001 }
 25:
                michal = 12;
                zuuluu = tangon[michal];
                michal = undefined;
                michal = golfie.bind(michal)(zuuluu);
                zuuluu = michal.AppsIcon;
                _fun00002_ip = 67; continue _fun00001;
 47:
                michal = 11;
                tangon = tangon[michal];
                michal = undefined;
                michal = golfie.bind(michal)(tangon);
                zuuluu = michal.GameControllerIcon;
 67:
                michal = {};
                tangon = _closure2_slot3;
                tangon = tangon.iconFill;
                tangon = tangon.color;
                michal['color'] = tangon;
                tangon = undefined;
                report = report.bind(tangon)(zuuluu, michal);
                zuuluu = _closure1_slot6;
                michal = _closure1_slot4;
                entity = {};
                golfie = _closure2_slot2;
                golfie = golfie.iconContainer;
                entity['style'] = golfie;
                oscard = _closure2_slot4;
                entity['ref'] = oscard;
                entity['children'] = report;
                entity = zuuluu.bind(tangon)(michal, entity);
                return entity;
            }
        };
        michal = golfie.bind(offset)(michal, zuuluu);
        var _closure2_slot8 = michal;
        zuuluu = _closure1_slot6;
        entity = 13;
        entity = verify[entity];
        entity = option.bind(tangon)(entity);
        michal = entity.SelectedVersionedDismissibleContent;
        entity = {};
        golfie = 14;
        golfie = verify[golfie];
        golfie = option.bind(tangon)(golfie);
        golfie = golfie.DismissibleContent;
        golfie = golfie.ACTIVITIES_VOICE_LAUNCHER_BADGE;
        entity['contentType'] = golfie;
        entity['latestVersion'] = oscard;
        report = function(argFoo) { // Original name: children
            _fun00003: for(var _fun00004_ip = 0; ; ) switch(_fun00004_ip) {
 0:
                entity = argFoo;
                michal = entity.visibleContent;
                entity = entity.markAsDismissed;
                var _closure3_slot0 = entity;
                zuuluu = _closure1_slot0;
                oscard = _closure1_slot2;
                entity = 14;
                entity = oscard[entity];
                tangon = undefined;
                entity = zuuluu.bind(tangon)(entity);
                entity = entity.DismissibleContent;
                entity = entity.ACTIVITIES_VOICE_LAUNCHER_BADGE;
                offset = michal === entity;
                zuuluu = _closure1_slot6;
                michal = _closure1_slot1;
                entity = 15;
                entity = oscard[entity];
                michal = michal.bind(tangon)(entity);
                entity = {};
                report = function() { // Original name: onPress
                    zuuluu = _closure3_slot0;
                    entity = _closure1_slot5;
                    michal = entity.TAKE_ACTION;
                    entity = undefined;
                    michal = zuuluu.bind(entity)(michal);
                    michal = _closure2_slot6;
                    michal = michal.bind(entity)();
                    return entity;
                };
                entity['onPress'] = report;
                report = _closure2_slot0;
                entity['props'] = report;
                report = undefined;
                if(offset) { _fun00004_ip = 124; continue _fun00003 }
 111:
                oscard = {};
                golfie = _closure2_slot7;
                oscard['backgroundColor'] = golfie;
                report = oscard;
 124:
                entity['style'] = report;
                option = _closure1_slot0;
                verify = _closure1_slot2;
                report = 16;
                oscard = verify[report];
                oscard = option.bind(tangon)(oscard);
                golfie = oscard.intl;
                oscard = golfie.string;
                report = verify[report];
                report = option.bind(tangon)(report);
                report = report.t;
                report = report.IC5Anp;
                report = oscard.bind(golfie)(report);
                entity['accessibilityLabel'] = report;
                if(offset) { _fun00004_ip = 201; continue _fun00003 }
 192:
                report = _closure2_slot8;
                _fun00004_ip = 378; continue _fun00003;
 201:
                option = _closure1_slot8;
                golfie = _closure1_slot7;
                oscard = {};
                foxtra = _closure1_slot6;
                romeon = _closure1_slot1;
                backup = _closure1_slot2;
                verify = 17;
                verify = backup[verify];
                romeon = romeon.bind(tangon)(verify);
                verify = {'fill': null, 'circleRadius': null, 'cutoutRadius': 8, 'enableCutout': null, 'cutoutPositionInDegrees': 45, 'alignBadgeEdgeWithCircleEdge': true, 'badgeRadius': 5, 'scaleToPixelDensity': true};
                backup = _closure2_slot7;
                verify['fill'] = backup;
                backup = _closure2_slot0;
                sizing = backup.width;
                backup = 2;
                backup = sizing / backup;
                verify['circleRadius'] = backup;
                verify['enableCutout'] = offset;
                romeon = foxtra.bind(tangon)(romeon, verify);
                verify = new Array(3);
                verify[0] = romeon;
                romeon = _closure2_slot8;
                verify[1] = romeon;
                if(!offset) { _fun00004_ip = 364; continue _fun00003 }
 312:
                foxtra = _closure1_slot6;
                romeon = _closure1_slot4;
                yankee = {};
                backup = _closure2_slot2;
                sizing = backup.badge;
                backup = new Array(2);
                backup[0] = sizing;
                kiloes = _closure2_slot3;
                kiloes = kiloes.iconBadgeIndicator;
                backup[1] = kiloes;
                yankee['style'] = backup;
                offset = foxtra.bind(tangon)(romeon, yankee);
 364:
                verify[2] = offset;
                oscard['children'] = verify;
                report = option.bind(tangon)(golfie, oscard);
 378:
                entity['children'] = report;
                entity = zuuluu.bind(tangon)(michal, entity);
                return entity;
            }
        };
        entity['children'] = report;
        entity = zuuluu.bind(tangon)(michal, entity);
        return entity;
    };
    zuuluu['default'] = michal;
    return entity;
})();