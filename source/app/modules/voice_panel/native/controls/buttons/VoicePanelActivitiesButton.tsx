// app/modules/voice_panel/native/controls/buttons/VoicePanelActivitiesButton.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    report = argBar;
    yankee = argBaz;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    var _closure1_slot1 = yankee;
    var _closure1_slot2 = oscard;
    entity = global;
    option = entity.Object;
    golfie = option.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(option)(zuuluu, entity, tangon);
    entity = 0;
    golfie = oscard[entity];
    tangon = argCor;
    entity = undefined;
    tangon = tangon.bind(entity)(golfie);
    var _closure1_slot3 = tangon;
    tangon = 1;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.View;
    var _closure1_slot4 = tangon;
    tangon = 2;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    golfie = tangon.jsx;
    var _closure1_slot5 = golfie;
    golfie = tangon.Fragment;
    var _closure1_slot6 = golfie;
    tangon = tangon.jsxs;
    var _closure1_slot7 = tangon;
    tangon = 3;
    tangon = oscard[tangon];
    option = report.bind(entity)(tangon);
    golfie = option.createStyles;
    tangon = {};
    verify = {};
    offset = 4;
    romeon = oscard[offset];
    romeon = yankee.bind(entity)(romeon);
    romeon = romeon.colors;
    romeon = romeon.WHITE;
    verify['tintColor'] = romeon;
    tangon['icon'] = verify;
    verify = {'position': 'absolute', 'justifyContent': 'center', 'alignItems': 'center', 'width': '100%', 'height': '100%'};
    tangon['iconContainer'] = verify;
    verify = {'position': 'absolute', 'zIndex': 1, 'width': 10, 'height': 10, 'borderRadius': null, 'top': 0, 'right': 0};
    romeon = oscard[offset];
    romeon = yankee.bind(entity)(romeon);
    romeon = romeon.radii;
    romeon = romeon.round;
    verify['borderRadius'] = romeon;
    tangon['badge'] = verify;
    verify = {};
    offset = oscard[offset];
    offset = yankee.bind(entity)(offset);
    offset = offset.colors;
    offset = offset.WHITE;
    verify['backgroundColor'] = offset;
    tangon['whiteBG'] = verify;
    tangon = golfie.bind(option)(tangon);
    var _closure1_slot8 = tangon;
    tangon = 15;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/voice_panel/native/controls/buttons/VoicePanelActivitiesButton.tsx';
    tangon = report.bind(oscard)(tangon);
    michal = function(argFoo) { // Original name: ActivitiesButton
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            entity = argFoo;
            romeon = entity.props;
            var _closure2_slot0 = romeon;
            michal = entity.openTab;
            var _closure2_slot1 = michal;
            verify = entity.wrapperSpecs;
            entity = _closure1_slot8;
            tangon = undefined;
            yankee = entity.bind(tangon)();
            var _closure2_slot2 = yankee;
            zuuluu = _closure1_slot0;
            option = _closure1_slot2;
            entity = 5;
            entity = option[entity];
            golfie = zuuluu.bind(tangon)(entity);
            entity = golfie.useVoicePanelButtonStyles;
            verify = entity.bind(golfie)(verify);
            var _closure2_slot3 = verify;
            entity = 6;
            entity = option[entity];
            offset = zuuluu.bind(tangon)(entity);
            golfie = offset.useShowActivityIndicator;
            entity = {};
            foxtra = 7;
            foxtra = option[foxtra];
            foxtra = zuuluu.bind(tangon)(foxtra);
            foxtra = foxtra.EmbeddedActivitySurfaces;
            foxtra = foxtra.VOICE_LAUNCHER;
            entity['surface'] = foxtra;
            backup = golfie.bind(offset)(entity);
            var _closure2_slot4 = backup;
            offset = _closure1_slot3;
            golfie = offset.useRef;
            entity = null;
            entity = golfie.bind(offset)(entity);
            var _closure2_slot5 = entity;
            entity = 8;
            entity = option[entity];
            entity = zuuluu.bind(tangon)(entity);
            foxtra = entity.ActivitiesControllerIconMobileExperiment;
            golfie = foxtra.useExperiment;
            zuuluu = {};
            entity = 'VoicePanelActivitiesButton';
            zuuluu['location'] = entity;
            entity = {};
            kiloes = true;
            entity['autoTrackExposure'] = kiloes;
            entity = golfie.bind(foxtra)(zuuluu, entity);
            entity = entity.enabled;
            var _closure2_slot6 = entity;
            golfie = offset.useCallback;
            zuuluu = new Array(1);
            zuuluu[0] = michal;
            michal = function() {
                zuuluu = _closure2_slot1;
                michal = {};
                entity = 'app_launcher';
                michal['tab'] = entity;
                report = _closure1_slot0;
                tangon = _closure1_slot2;
                entity = 9;
                tangon = tangon[entity];
                entity = undefined;
                tangon = report.bind(entity)(tangon);
                tangon = tangon.VoicePanelTabAnalyticsSources;
                tangon = tangon.CONNECTED_BUTTON;
                michal['source'] = tangon;
                michal = zuuluu.bind(entity)(michal);
                return entity;
            };
            golfie = golfie.bind(offset)(michal, zuuluu);
            michal = verify.iconBg;
            foxtra = michal.backgroundColor;
            var _closure2_slot7 = foxtra;
            zuuluu = offset.useMemo;
            michal = verify.iconFill;
            kiloes = michal.color;
            michal = new Array(3);
            michal[0] = kiloes;
            michal[1] = entity;
            entity = yankee.iconContainer;
            michal[2] = entity;
            entity = function() {
                _fun00003: for(var _fun00004_ip = 0; ; ) switch(_fun00004_ip) {
 0:
                    report = _closure1_slot5;
                    michal = _closure2_slot6;
                    golfie = _closure1_slot0;
                    tangon = _closure1_slot2;
                    if(michal) { _fun00004_ip = 47; continue _fun00003 }
 25:
                    michal = 11;
                    zuuluu = tangon[michal];
                    michal = undefined;
                    michal = golfie.bind(michal)(zuuluu);
                    zuuluu = michal.AppsIcon;
                    _fun00004_ip = 67; continue _fun00003;
 47:
                    michal = 10;
                    tangon = tangon[michal];
                    michal = undefined;
                    michal = golfie.bind(michal)(tangon);
                    zuuluu = michal.GameControllerIcon;
 67:
                    michal = {};
                    tangon = _closure2_slot3;
                    tangon = tangon.iconFill;
                    tangon = tangon.color;
                    michal['color'] = tangon;
                    tangon = undefined;
                    report = report.bind(tangon)(zuuluu, michal);
                    zuuluu = _closure1_slot5;
                    michal = _closure1_slot4;
                    entity = {};
                    golfie = _closure2_slot2;
                    golfie = golfie.iconContainer;
                    entity['style'] = golfie;
                    oscard = _closure2_slot5;
                    entity['ref'] = oscard;
                    entity['children'] = report;
                    entity = zuuluu.bind(tangon)(michal, entity);
                    return entity;
                }
            };
            offset = zuuluu.bind(offset)(entity, michal);
            var _closure2_slot8 = offset;
            zuuluu = _closure1_slot5;
            michal = _closure1_slot1;
            entity = 12;
            entity = option[entity];
            michal = michal.bind(tangon)(entity);
            entity = {};
            entity['onPress'] = golfie;
            entity['props'] = romeon;
            golfie = undefined;
            if(backup) { _fun00002_ip = 360; continue _fun00001 }
 351:
            option = {};
            option['backgroundColor'] = foxtra;
            golfie = option;
 360:
            entity['style'] = golfie;
            sizing = _closure1_slot0;
            output = _closure1_slot2;
            golfie = 13;
            option = output[golfie];
            option = sizing.bind(tangon)(option);
            kiloes = option.intl;
            option = kiloes.string;
            golfie = output[golfie];
            golfie = sizing.bind(tangon)(golfie);
            golfie = golfie.t;
            golfie = golfie.IC5Anp;
            golfie = option.bind(kiloes)(golfie);
            entity['accessibilityLabel'] = golfie;
            option = _closure1_slot3;
            golfie = option.useMemo;
            oscard = new Array(6);
            oscard[0] = backup;
            oscard[1] = foxtra;
            romeon = romeon.width;
            oscard[2] = romeon;
            yankee = yankee.badge;
            oscard[3] = yankee;
            oscard[4] = offset;
            verify = verify.iconBadgeIndicator;
            oscard[5] = verify;
            report = function() {
                _fun00005: for(var _fun00006_ip = 0; ; ) switch(_fun00006_ip) {
 0:
                    entity = _closure2_slot4;
                    if(entity) { _fun00006_ip = 19; continue _fun00005 }
 10:
                    entity = _closure2_slot8;
                    _fun00006_ip = 205; continue _fun00005;
 19:
                    report = _closure1_slot7;
                    tangon = _closure1_slot6;
                    zuuluu = {};
                    offset = _closure1_slot5;
                    golfie = _closure1_slot1;
                    oscard = _closure1_slot2;
                    michal = 14;
                    oscard = oscard[michal];
                    michal = undefined;
                    verify = golfie.bind(michal)(oscard);
                    oscard = {'fill': null, 'circleRadius': null, 'cutoutRadius': 8, 'enableCutout': null, 'cutoutPositionInDegrees': 45, 'alignBadgeEdgeWithCircleEdge': true, 'badgeRadius': 5, 'scaleToPixelDensity': true};
                    golfie = _closure2_slot7;
                    oscard['fill'] = golfie;
                    golfie = _closure2_slot0;
                    yankee = golfie.width;
                    golfie = 2;
                    golfie = yankee / golfie;
                    oscard['circleRadius'] = golfie;
                    golfie = _closure2_slot4;
                    oscard['enableCutout'] = golfie;
                    verify = offset.bind(michal)(verify, oscard);
                    oscard = new Array(3);
                    oscard[0] = verify;
                    verify = _closure2_slot8;
                    oscard[1] = verify;
                    if(!golfie) { _fun00006_ip = 191; continue _fun00005 }
 139:
                    offset = _closure1_slot5;
                    verify = _closure1_slot4;
                    option = {};
                    yankee = _closure2_slot2;
                    foxtra = yankee.badge;
                    yankee = new Array(2);
                    yankee[0] = foxtra;
                    romeon = _closure2_slot3;
                    romeon = romeon.iconBadgeIndicator;
                    yankee[1] = romeon;
                    option['style'] = yankee;
                    golfie = offset.bind(michal)(verify, option);
 191:
                    oscard[2] = golfie;
                    zuuluu['children'] = oscard;
                    entity = report.bind(michal)(tangon, zuuluu);
 205:
                    return entity;
                }
            };
            report = golfie.bind(option)(report, oscard);
            entity['children'] = report;
            entity = zuuluu.bind(tangon)(michal, entity);
            return entity;
        }
    };
    zuuluu['default'] = michal;
    return entity;
})();