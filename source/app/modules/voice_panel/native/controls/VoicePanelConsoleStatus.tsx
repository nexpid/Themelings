// app/modules/voice_panel/native/controls/VoicePanelConsoleStatus.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    golfie = argBar;
    sizing = argBaz;
    zuuluu = argFre;
    option = argPlu;
    var _closure1_slot0 = golfie;
    var _closure1_slot1 = sizing;
    var _closure1_slot2 = option;
    report = function(argFoo) { // Original name: VoicePanelConsoleStatus
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            zuuluu = argFoo;
            golfie = zuuluu.wrapperSpecs;
            report = zuuluu.accessoryHeights;
            michal = zuuluu.state;
            var _closure2_slot0 = michal;
            romeon = zuuluu.cleanUp;
            var _closure2_slot1 = romeon;
            zuuluu = _closure1_slot9;
            tangon = undefined;
            offset = zuuluu.bind(tangon)();
            option = _closure1_slot3;
            oscard = option.useContext;
            ctrled = _closure1_slot1;
            echoed = _closure1_slot2;
            zuuluu = 8;
            zuuluu = echoed[zuuluu];
            zuuluu = ctrled.bind(tangon)(zuuluu);
            zuuluu = oscard.bind(option)(zuuluu);
            yankee = zuuluu.channelId;
            option = zuuluu.windowDimensions;
            var _closure2_slot2 = option;
            zuuluu = zuuluu.mode;
            oscard = 9;
            oscard = echoed[oscard];
            oscard = ctrled.bind(tangon)(oscard);
            oscard = oscard.bind(tangon)(yankee);
            record = oscard.icon;
            sequen = oscard.text;
            backup = oscard.color;
            var _closure2_slot3 = backup;
            update = oscard.displayCancel;
            source = _closure1_slot0;
            oscard = 10;
            yankee = echoed[oscard];
            kiloes = source.bind(tangon)(yankee);
            foxtra = kiloes.useSharedValue;
            yankee = false;
            foxtra = foxtra.bind(kiloes)(yankee);
            var _closure2_slot4 = foxtra;
            sizing = _closure1_slot3;
            kiloes = sizing.useEffect;
            yankee = new Array(2);
            yankee[0] = foxtra;
            yankee[1] = michal;
            michal = function() {
                tangon = _closure2_slot4;
                zuuluu = tangon.set;
                report = _closure2_slot0;
                oscard = _closure1_slot0;
                michal = _closure1_slot2;
                entity = 11;
                michal = michal[entity];
                entity = undefined;
                michal = oscard.bind(entity)(michal);
                michal = michal.TransitionStates;
                michal = michal.YEETED;
                michal = report !== michal;
                michal = zuuluu.bind(tangon)(michal);
                return entity;
            };
            michal = kiloes.bind(sizing)(michal, yankee);
            michal = 12;
            michal = echoed[michal];
            michal = ctrled.bind(tangon)(michal);
            golfie = michal.bind(tangon)(zuuluu, golfie, report);
            michal = echoed[oscard];
            report = source.bind(tangon)(michal);
            zuuluu = report.useAnimatedStyle;
            michal = function() { // Original name: V
                _fun00003: for(var _fun00004_ip = 0; ; ) switch(_fun00004_ip) {
 0:
                    entity = {};
                    michal = _closure2_slot3;
                    entity['backgroundColor'] = michal;
                    zuuluu = _closure2_slot2;
                    michal = zuuluu.get;
                    michal = michal.bind(zuuluu)();
                    tangon = michal.width;
                    report = _closure1_slot4;
                    zuuluu = 2;
                    zuuluu = zuuluu * report;
                    zuuluu = tangon - zuuluu;
                    entity['width'] = zuuluu;
                    tangon = _closure1_slot5;
                    zuuluu = 36;
                    zuuluu = tangon + zuuluu;
                    entity['height'] = zuuluu;
                    zuuluu = 32;
                    entity['borderRadius'] = zuuluu;
                    zuuluu = {};
                    report = _closure1_slot0;
                    oscard = _closure1_slot2;
                    tangon = 13;
                    tangon = oscard[tangon];
                    foxtra = undefined;
                    option = report.bind(foxtra)(tangon);
                    golfie = option.withSpring;
                    report = _closure2_slot4;
                    tangon = report.get;
                    tangon = tangon.bind(report)();
                    oscard = 100;
                    if(!tangon) { _fun00004_ip = 125; continue _fun00003 }
 123:
                    oscard = 0;
 125:
                    output = _closure1_slot10;
                    tangon = function(argFoo) { // Original name: n
                        _fun00005: for(var _fun00006_ip = 0; ; ) switch(_fun00006_ip) {
 0:
                            entity = argFoo;
                            if(!entity) { _fun00006_ip = 25; continue _fun00005 }
 6:
                            zuuluu = _closure2_slot4;
                            michal = zuuluu.get;
                            michal = michal.bind(zuuluu)();
                            entity = !michal;
 25:
                            if(!entity) { _fun00006_ip = 74; continue _fun00005 }
 28:
                            zuuluu = _closure1_slot0;
                            michal = _closure1_slot2;
                            entity = 10;
                            entity = michal[entity];
                            michal = undefined;
                            tangon = zuuluu.bind(michal)(entity);
                            zuuluu = tangon.runOnJS;
                            entity = _closure2_slot1;
                            entity = zuuluu.bind(tangon)(entity);
                            entity = entity.bind(michal)();
 74:
                            entity = undefined;
                            return entity;
                        }
                    };
                    verify = {};
                    yankee = _closure2_slot4;
                    verify['shouldShow'] = yankee;
                    romeon = _closure1_slot0;
                    backup = _closure1_slot2;
                    yankee = 10;
                    yankee = backup[yankee];
                    yankee = romeon.bind(foxtra)(yankee);
                    yankee = yankee.runOnJS;
                    verify['runOnJS'] = yankee;
                    offset = _closure2_slot1;
                    verify['cleanUp'] = offset;
                    tangon['__closure'] = verify;
                    verify = 9820708059867.0;
                    tangon['__workletHash'] = verify;
                    michal = _closure1_slot12;
                    tangon['__initData'] = michal;
                    sizing = 'respect-motion-settings';
                    echoed = option;
                    result = oscard;
                    kiloes = tangon;
                    michal = echoed[golfie](result, output, sizing, kiloes, backup);
                    zuuluu['translateY'] = michal;
                    michal = new Array(1);
                    michal[0] = zuuluu;
                    entity['transform'] = michal;
                    return entity;
                }
            };
            yankee = {};
            yankee['color'] = backup;
            yankee['windowDimensions'] = option;
            backup = _closure1_slot4;
            yankee['EDGE_GUTTER'] = backup;
            backup = _closure1_slot5;
            yankee['CONTROLS_HEIGHT'] = backup;
            backup = 36;
            yankee['CONSOLE_STATUS_HEIGHT'] = backup;
            backup = 13;
            backup = echoed[backup];
            backup = source.bind(tangon)(backup);
            backup = backup.withSpring;
            yankee['withSpring'] = backup;
            yankee['shouldShow'] = foxtra;
            foxtra = _closure1_slot10;
            yankee['FADE_IN_MODE_PHYSICS'] = foxtra;
            foxtra = echoed[oscard];
            foxtra = source.bind(tangon)(foxtra);
            foxtra = foxtra.runOnJS;
            yankee['runOnJS'] = foxtra;
            yankee['cleanUp'] = romeon;
            michal['__closure'] = yankee;
            yankee = 14156265059426.0;
            michal['__workletHash'] = yankee;
            yankee = _closure1_slot11;
            michal['__initData'] = yankee;
            sizing = zuuluu.bind(report)(michal);
            michal = echoed[oscard];
            zuuluu = source.bind(tangon)(michal);
            michal = zuuluu.useAnimatedStyle;
            entity = function() { // Original name: y
                entity = {};
                zuuluu = _closure2_slot2;
                michal = zuuluu.get;
                michal = michal.bind(zuuluu)();
                zuuluu = michal.width;
                tangon = _closure1_slot4;
                michal = 2;
                michal = michal * tangon;
                michal = zuuluu - michal;
                entity['width'] = michal;
                return entity;
            };
            report = {};
            report['windowDimensions'] = option;
            option = _closure1_slot4;
            report['EDGE_GUTTER'] = option;
            entity['__closure'] = report;
            report = 2418678233810.0;
            entity['__workletHash'] = report;
            report = _closure1_slot13;
            entity['__initData'] = report;
            yankee = michal.bind(zuuluu)(entity);
            zuuluu = _closure1_slot8;
            entity = echoed[oscard];
            entity = ctrled.bind(tangon)(entity);
            michal = entity.View;
            entity = {};
            option = offset.consoleParentContainer;
            report = new Array(2);
            report[0] = option;
            report[1] = golfie;
            entity['style'] = report;
            option = _closure1_slot7;
            kiloes = 14;
            report = echoed[kiloes];
            golfie = ctrled.bind(tangon)(report);
            report = {};
            foxtra = offset.consoleContainer;
            romeon = new Array(1);
            romeon[0] = foxtra;
            report['style'] = romeon;
            backup = _closure1_slot7;
            romeon = echoed[oscard];
            romeon = ctrled.bind(tangon)(romeon);
            foxtra = romeon.View;
            romeon = {};
            romeon['style'] = sizing;
            output = _closure1_slot8;
            kiloes = echoed[kiloes];
            sizing = ctrled.bind(tangon)(kiloes);
            kiloes = {};
            result = offset.consoleItemContainer;
            kiloes['style'] = result;
            vacuum = _closure1_slot7;
            config = 15;
            result = echoed[config];
            ctrled = ctrled.bind(tangon)(result);
            result = {};
            result['source'] = record;
            record = _closure1_slot6;
            record = record.WHITE;
            result['color'] = record;
            config = echoed[config];
            config = source.bind(tangon)(config);
            config = config.IconSizes;
            config = config.SMALL;
            result['size'] = config;
            ctrled = vacuum.bind(tangon)(ctrled, result);
            result = new Array(3);
            result[0] = ctrled;
            ctrled = _closure1_slot7;
            vacuum = 16;
            echoed = echoed[vacuum];
            echoed = source.bind(tangon)(echoed);
            source = echoed.Text;
            echoed = {'variant': 'text-sm/medium', 'color': 'always-white'};
            config = offset.consoleText;
            echoed['style'] = config;
            echoed['children'] = sequen;
            echoed = ctrled.bind(tangon)(source, echoed);
            result[1] = echoed;
            echoed = null;
            if(!update) { _fun00002_ip = 892; continue _fun00001 }
 731:
            ctrled = _closure1_slot7;
            target = _closure1_slot0;
            status = _closure1_slot2;
            update = 17;
            update = status[update];
            update = target.bind(tangon)(update);
            source = update.PressableOpacity;
            update = {};
            sequen = 4;
            update['hitSlop'] = sequen;
            sequen = 18;
            sequen = status[sequen];
            sequen = target.bind(tangon)(sequen);
            sequen = sequen.disconnectRemote;
            update['onPress'] = sequen;
            config = _closure1_slot7;
            vacuum = status[vacuum];
            vacuum = target.bind(tangon)(vacuum);
            sequen = vacuum.Text;
            vacuum = {'variant': 'text-sm/medium', 'color': 'always-white'};
            record = 19;
            cntext = status[record];
            cntext = target.bind(tangon)(cntext);
            papara = cntext.intl;
            cntext = papara.string;
            record = status[record];
            record = target.bind(tangon)(record);
            record = record.t;
            record = record.ETE/oK;
            record = cntext.bind(papara)(record);
            vacuum['children'] = record;
            vacuum = config.bind(tangon)(sequen, vacuum);
            update['children'] = vacuum;
            echoed = ctrled.bind(tangon)(source, update);
 892:
            result[2] = echoed;
            kiloes['children'] = result;
            kiloes = output.bind(tangon)(sizing, kiloes);
            romeon['children'] = kiloes;
            romeon = backup.bind(tangon)(foxtra, romeon);
            report['children'] = romeon;
            golfie = option.bind(tangon)(golfie, report);
            report = new Array(2);
            report[0] = golfie;
            option = _closure1_slot7;
            golfie = _closure1_slot1;
            romeon = _closure1_slot2;
            oscard = romeon[oscard];
            oscard = golfie.bind(tangon)(oscard);
            golfie = oscard.View;
            oscard = {};
            foxtra = offset.blockingControlCover;
            offset = new Array(2);
            offset[0] = foxtra;
            offset[1] = yankee;
            oscard['style'] = offset;
            yankee = _closure1_slot7;
            offset = _closure1_slot0;
            verify = 20;
            verify = romeon[verify];
            verify = offset.bind(tangon)(verify);
            offset = verify.VoicePanelVisualEffectView;
            verify = {};
            verify = yankee.bind(tangon)(offset, verify);
            oscard['children'] = verify;
            oscard = option.bind(tangon)(golfie, oscard);
            report[1] = oscard;
            entity['children'] = report;
            entity = zuuluu.bind(tangon)(michal, entity);
            return entity;
        }
    };
    var _closure1_slot14 = report;
    entity = global;
    verify = entity.Object;
    oscard = verify.defineProperty;
    tangon = {};
    offset = true;
    tangon['value'] = offset;
    entity = '__esModule';
    entity = oscard.bind(verify)(zuuluu, entity, tangon);
    entity = 0;
    oscard = option[entity];
    tangon = argCor;
    entity = undefined;
    tangon = tangon.bind(entity)(oscard);
    var _closure1_slot3 = tangon;
    tangon = 1;
    tangon = option[tangon];
    tangon = golfie.bind(entity)(tangon);
    echoed = tangon.MODE_CHANGE_PHYSICS;
    tangon = 2;
    tangon = option[tangon];
    tangon = golfie.bind(entity)(tangon);
    tangon = tangon.EDGE_GUTTER;
    var _closure1_slot4 = tangon;
    tangon = 3;
    tangon = option[tangon];
    tangon = golfie.bind(entity)(tangon);
    backup = tangon.CONTROLS_HEIGHT;
    var _closure1_slot5 = backup;
    tangon = 4;
    tangon = option[tangon];
    tangon = golfie.bind(entity)(tangon);
    tangon = tangon.Colors;
    var _closure1_slot6 = tangon;
    tangon = 5;
    tangon = option[tangon];
    tangon = golfie.bind(entity)(tangon);
    oscard = tangon.jsx;
    var _closure1_slot7 = oscard;
    tangon = tangon.jsxs;
    var _closure1_slot8 = tangon;
    tangon = 6;
    tangon = option[tangon];
    romeon = golfie.bind(entity)(tangon);
    yankee = romeon.createStyles;
    oscard = {};
    foxtra = 'hidden';
    tangon = {'zIndex': 1, 'position': 'absolute', 'bottom': 0, 'overflow': 'hidden', 'left': -0.5, 'right': 0, 'alignItems': 'center'};
    oscard['consoleParentContainer'] = tangon;
    tangon = {};
    kiloes = 7;
    output = option[kiloes];
    output = sizing.bind(entity)(output);
    output = output.radii;
    output = output.xxl;
    tangon['borderRadius'] = output;
    tangon['overflow'] = foxtra;
    oscard['consoleContainer'] = tangon;
    tangon = 36;
    foxtra = {'flexDirection': 'row', 'alignItems': 'center', 'height': 36, 'marginHorizontal': 18};
    oscard['consoleItemContainer'] = foxtra;
    foxtra = {'textAlign': 'left', 'marginStart': 4, 'flex': 1};
    oscard['consoleText'] = foxtra;
    foxtra = {'position': 'absolute', 'bottom': 0, 'borderRadius': null, 'flex': 1, 'height': null, 'overflow': 'hidden'};
    kiloes = option[kiloes];
    kiloes = sizing.bind(entity)(kiloes);
    kiloes = kiloes.radii;
    kiloes = kiloes.xxl;
    foxtra['borderRadius'] = kiloes;
    foxtra['height'] = backup;
    oscard['blockingControlCover'] = foxtra;
    oscard = yankee.bind(romeon)(oscard);
    var _closure1_slot9 = oscard;
    oscard = {};
    update = oscard;
    verify = copyDataProperties(update, echoed);
    verify = 'overshootClamping';
    oscard[verify] = offset;
    var _closure1_slot10 = oscard;
    oscard = {};
    verify = "function VoicePanelConsoleStatusTsx1(){const{color,windowDimensions,EDGE_GUTTER,CONTROLS_HEIGHT,CONSOLE_STATUS_HEIGHT,withSpring,shouldShow,FADE_IN_MODE_PHYSICS,runOnJS,cleanUp}=this.__closure;return{backgroundColor:color,width:windowDimensions.get().width-EDGE_GUTTER*2,height:CONTROLS_HEIGHT+CONSOLE_STATUS_HEIGHT,borderRadius:32,transform:[{translateY:withSpring(shouldShow.get()?0:100,FADE_IN_MODE_PHYSICS,'respect-motion-settings',function(finished){if(finished&&!shouldShow.get()){runOnJS(cleanUp)();}})}]};}";
    oscard['code'] = verify;
    var _closure1_slot11 = oscard;
    oscard = {};
    verify = 'function VoicePanelConsoleStatusTsx2(finished){const{shouldShow,runOnJS,cleanUp}=this.__closure;if(finished&&!shouldShow.get()){runOnJS(cleanUp)();}}';
    oscard['code'] = verify;
    var _closure1_slot12 = oscard;
    oscard = {};
    verify = 'function VoicePanelConsoleStatusTsx3(){const{windowDimensions,EDGE_GUTTER}=this.__closure;return{width:windowDimensions.get().width-EDGE_GUTTER*2};}';
    oscard['code'] = verify;
    var _closure1_slot13 = oscard;
    oscard = 21;
    oscard = option[oscard];
    option = golfie.bind(entity)(oscard);
    golfie = option.fileFinishedImporting;
    oscard = 'modules/voice_panel/native/controls/VoicePanelConsoleStatus.tsx';
    oscard = golfie.bind(option)(oscard);
    zuuluu['default'] = report;
    zuuluu['CONSOLE_STATUS_HEIGHT'] = tangon;
    michal = function(argFoo, argBar, argBaz, argCor) { // Original name: renderVoicePanelConsoleStatus
        report = _closure1_slot7;
        tangon = _closure1_slot14;
        zuuluu = {};
        golfie = argBar;
        option = zuuluu;
        entity = copyDataProperties(option, golfie);
        michal = argBaz;
        entity = 'state';
        zuuluu[entity] = michal;
        michal = argCor;
        entity = 'cleanUp';
        zuuluu[entity] = michal;
        michal = undefined;
        entity = argFoo;
        entity = report.bind(michal)(tangon, zuuluu, entity);
        return entity;
    };
    zuuluu['renderVoicePanelConsoleStatus'] = michal;
    return entity;
})();