// app/modules/voice_panel/native/controls/VoicePanelFloatingCTAContainer.tsx
export default (function(argFoo, argBar, argBaz, argCorge, _, argFred, argPlugh) {
    golf = argBar;
    kilo = argBaz;
    zulu = argFred;
    options = argPlugh;
    var _closure1_slot0 = golf;
    var _closure1_slot1 = kilo;
    var _closure1_slot2 = options;
    entity = function(argFoo) { // Original name: FloatingCTA
        zulu = argFoo;
        verify = zulu.trailing;
        offset = null;
        mike = Object.create(offset);
        entity = 0;
        mike['trailing'] = entity;
        backup = {};
        foxtrot = zulu;
        romeo = mike;
        foxtrot = copyDataProperties(backup, foxtrot, romeo);
        tango = _closure1_slot9;
        oscar = _closure1_slot0;
        yankee = _closure1_slot2;
        entity = 10;
        entity = yankee[entity];
        zulu = undefined;
        entity = oscar.bind(zulu)(entity);
        mike = entity.Stack;
        entity = {};
        golf = _closure1_slot9;
        report = 11;
        report = yankee[report];
        report = oscar.bind(zulu)(report);
        oscar = report.RowButton;
        report = {};
        yankee = true;
        report['experimental_withBlurBackground'] = yankee;
        offset = offset == verify;
        report['arrow'] = offset;
        report['trailing'] = verify;
        backup = report;
        options = copyDataProperties(backup, foxtrot);
        report = golf.bind(zulu)(oscar, report);
        entity['children'] = report;
        entity = tango.bind(zulu)(mike, entity);
        return entity;
    };
    var _closure1_slot14 = entity;
    report = function(argFoo) { // Original name: VoicePanelFloatingCTAContainer
        _fun122288: for(var _fun122288_ip = 0; ; ) switch(_fun122288_ip) {
 0:
            entity = argFoo;
            output = entity.wrapperSpecs;
            var _closure2_slot0 = output;
            kilo = entity.accessoryHeights;
            var _closure2_slot1 = kilo;
            source = entity.controlsSpecs;
            var _closure2_slot2 = source;
            control = entity.state;
            var _closure2_slot3 = control;
            result = entity.cleanUp;
            var _closure2_slot4 = result;
            sizing = entity.gestureState;
            var _closure2_slot5 = sizing;
            entity = _closure1_slot10;
            tango = undefined;
            report = entity.bind(tango)();
            golf = _closure1_slot4;
            zulu = golf.useContext;
            mike = _closure1_slot1;
            foxtrot = _closure1_slot2;
            entity = 13;
            entity = foxtrot[entity];
            entity = mike.bind(tango)(entity);
            entity = zulu.bind(golf)(entity);
            sequence = entity.windowDimensions;
            var _closure2_slot6 = sequence;
            yankee = entity.channelId;
            var _closure2_slot7 = yankee;
            vacuum = entity.safeArea;
            var _closure2_slot8 = vacuum;
            entity = 14;
            entity = foxtrot[entity];
            entity = mike.bind(tango)(entity);
            offset = entity.bind(tango)(yankee);
            update = _closure1_slot0;
            entity = 15;
            entity = foxtrot[entity];
            zulu = update.bind(tango)(entity);
            entity = zulu.useGetDismissibleContent;
            golf = entity.bind(zulu)(offset);
            zulu = _closure1_slot3;
            entity = 1;
            zulu = zulu.bind(tango)(golf, entity);
            entity = 0;
            entity = zulu[entity];
            var _closure2_slot9 = entity;
            zulu = 16;
            zulu = foxtrot[zulu];
            romeo = update.bind(tango)(zulu);
            options = romeo.useStateFromStores;
            zulu = _closure1_slot5;
            golf = new Array(1);
            golf[0] = zulu;
            zulu = function() {
                zulu = _closure1_slot5;
                mike = zulu.getChannel;
                entity = _closure2_slot7;
                entity = mike.bind(zulu)(entity);
                return entity;
            };
            options = options.bind(romeo)(golf, zulu);
            var _closure2_slot10 = options;
            romeo = _closure1_slot4;
            golf = romeo.useMemo;
            zulu = new Array(2);
            zulu[0] = entity;
            zulu[1] = options;
            entity = function() {
                zulu = _closure1_slot0;
                mike = _closure1_slot2;
                entity = 17;
                mike = mike[entity];
                entity = undefined;
                zulu = zulu.bind(entity)(mike);
                mike = zulu.getDismissableCTAProps;
                entity = {};
                report = _closure2_slot9;
                entity['dismissableContent'] = report;
                tango = _closure2_slot10;
                entity['channel'] = tango;
                entity = mike.bind(zulu)(entity);
                return entity;
            };
            golf = golf.bind(romeo)(entity, zulu);
            var _closure2_slot11 = golf;
            entity = 17;
            entity = foxtrot[entity];
            zulu = update.bind(tango)(entity);
            entity = zulu.useFloatingCTAProps;
            romeo = entity.bind(zulu)(options);
            echo = 18;
            entity = foxtrot[echo];
            options = update.bind(tango)(entity);
            zulu = options.useAnimatedStyle;
            entity = function() { // Original name: A
                _fun122291: for(var _fun122291_ip = 0; ; ) switch(_fun122291_ip) {
 0:
                    zulu = _closure1_slot0;
                    entity = _closure1_slot2;
                    mike = 19;
                    mike = entity[mike];
                    golf = undefined;
                    offset = zulu.bind(golf)(mike);
                    verify = offset.getControlsDefaultWidth;
                    report = _closure2_slot6;
                    mike = report.get;
                    mike = mike.bind(report)();
                    oscar = mike.width;
                    yankee = _closure2_slot8;
                    mike = yankee.get;
                    mike = mike.bind(yankee)();
                    report = mike.left;
                    mike = yankee.get;
                    mike = mike.bind(yankee)();
                    mike = mike.right;
                    report = verify.bind(offset)(oscar, report, mike);
                    mike = _closure2_slot3;
                    backup = 20;
                    entity = entity[backup];
                    entity = zulu.bind(golf)(entity);
                    entity = entity.TransitionStates;
                    entity = entity.YEETED;
                    foxtrot = 1;
                    if(!(mike === entity)) { _fun122291_ip = 128; continue _fun122291 }
 126:
                    foxtrot = 0;
 128:
                    entity = {};
                    zulu = _closure2_slot2;
                    mike = zulu.get;
                    mike = mike.bind(zulu)();
                    zulu = mike.height;
                    mike = 16;
                    mike = zulu + mike;
                    entity['bottom'] = mike;
                    entity['width'] = report;
                    zulu = _closure1_slot1;
                    offset = _closure1_slot2;
                    mike = 21;
                    mike = offset[mike];
                    zulu = zulu.bind(golf)(mike);
                    mike = 2;
                    mike = report / mike;
                    zulu = zulu.bind(golf)(mike);
                    mike = -1;
                    mike = mike * zulu;
                    entity['marginLeft'] = mike;
                    oscar = _closure1_slot0;
                    report = 22;
                    mike = offset[report];
                    romeo = oscar.bind(golf)(mike);
                    yankee = romeo.withSpring;
                    result = _closure1_slot11;
                    zulu = function(argFoo) { // Original name: t
                        _fun122292: for(var _fun122292_ip = 0; ; ) switch(_fun122292_ip) {
 0:
                            entity = argFoo;
                            if(!entity) { _fun122292_ip = 54; continue _fun122292 }
 6:
                            zulu = _closure2_slot3;
                            report = _closure1_slot0;
                            tango = _closure1_slot2;
                            mike = 20;
                            tango = tango[mike];
                            mike = undefined;
                            mike = report.bind(mike)(tango);
                            mike = mike.TransitionStates;
                            mike = mike.YEETED;
                            entity = zulu === mike;
 54:
                            if(!entity) { _fun122292_ip = 103; continue _fun122292 }
 57:
                            zulu = _closure1_slot0;
                            mike = _closure1_slot2;
                            entity = 18;
                            entity = mike[entity];
                            mike = undefined;
                            tango = zulu.bind(mike)(entity);
                            zulu = tango.runOnJS;
                            entity = _closure2_slot4;
                            entity = zulu.bind(tango)(entity);
                            entity = entity.bind(mike)();
 103:
                            entity = undefined;
                            return entity;
                        }
                    };
                    mike = {};
                    kilo = _closure2_slot3;
                    mike['state'] = kilo;
                    backup = offset[backup];
                    backup = oscar.bind(golf)(backup);
                    backup = backup.TransitionStates;
                    mike['TransitionStates'] = backup;
                    backup = 18;
                    backup = offset[backup];
                    backup = oscar.bind(golf)(backup);
                    backup = backup.runOnJS;
                    mike['runOnJS'] = backup;
                    backup = _closure2_slot4;
                    mike['cleanUp'] = backup;
                    zulu['__closure'] = mike;
                    mike = 7334460639890.0;
                    zulu['__workletHash'] = mike;
                    mike = _closure1_slot13;
                    zulu['__initData'] = mike;
                    output = 'respect-motion-settings';
                    update = romeo;
                    echo = foxtrot;
                    sizing = zulu;
                    mike = update[yankee](echo, result, output, sizing, kilo);
                    entity['opacity'] = mike;
                    zulu = {};
                    mike = offset[report];
                    foxtrot = oscar.bind(golf)(mike);
                    romeo = foxtrot.withSpring;
                    verify = _closure2_slot0;
                    mike = verify.get;
                    mike = mike.bind(verify)();
                    yankee = mike.x;
                    mike = _closure1_slot6;
                    mike = romeo.bind(foxtrot)(yankee, mike);
                    zulu['translateX'] = mike;
                    mike = new Array(2);
                    mike[0] = zulu;
                    zulu = {};
                    report = offset[report];
                    golf = oscar.bind(golf)(report);
                    oscar = golf.withSpring;
                    report = verify.get;
                    report = report.bind(verify)();
                    report = report.hidden;
                    if(report) { _fun122291_ip = 514; continue _fun122291 }
 450:
                    verify = _closure2_slot5;
                    report = verify.get;
                    report = report.bind(verify)();
                    report = report.active;
                    if(!report) { _fun122291_ip = 494; continue _fun122291 }
 472:
                    verify = _closure2_slot5;
                    report = verify.get;
                    report = report.bind(verify)();
                    report = report.requiresPop;
                    if(!report) { _fun122291_ip = 514; continue _fun122291 }
 494:
                    verify = _closure2_slot0;
                    report = verify.get;
                    report = report.bind(verify)();
                    report = report.y;
                    _fun122291_ip = 557; continue _fun122291;
 514:
                    offset = _closure2_slot0;
                    verify = offset.get;
                    verify = verify.bind(offset)();
                    offset = verify.height;
                    verify = _closure1_slot7;
                    verify = offset + verify;
                    offset = _closure2_slot1;
                    options = offset.get;
                    options = options.bind(offset)();
                    report = verify + options;
 557:
                    tango = _closure1_slot6;
                    tango = oscar.bind(golf)(report, tango);
                    zulu['translateY'] = tango;
                    mike[1] = zulu;
                    entity['transform'] = mike;
                    return entity;
                }
            };
            backup = {};
            config = 19;
            config = foxtrot[config];
            config = update.bind(tango)(config);
            config = config.getControlsDefaultWidth;
            backup['getControlsDefaultWidth'] = config;
            backup['windowDimensions'] = sequence;
            backup['safeArea'] = vacuum;
            backup['state'] = control;
            control = 20;
            control = foxtrot[control];
            control = update.bind(tango)(control);
            control = control.TransitionStates;
            backup['TransitionStates'] = control;
            backup['controlsSpecs'] = source;
            source = 21;
            source = foxtrot[source];
            source = mike.bind(tango)(source);
            backup['roundToNearestPixel'] = source;
            source = 22;
            source = foxtrot[source];
            source = update.bind(tango)(source);
            source = source.withSpring;
            backup['withSpring'] = source;
            source = _closure1_slot11;
            backup['OPACITY_CHANGE_PHYSICS'] = source;
            echo = foxtrot[echo];
            echo = update.bind(tango)(echo);
            echo = echo.runOnJS;
            backup['runOnJS'] = echo;
            backup['cleanUp'] = result;
            backup['wrapperSpecs'] = output;
            output = _closure1_slot6;
            backup['UI_SHOW_HIDE_PHYSICS'] = output;
            backup['gestureState'] = sizing;
            sizing = _closure1_slot7;
            backup['CALL_TILE_GUTTER'] = sizing;
            backup['accessoryHeights'] = kilo;
            entity['__closure'] = backup;
            backup = 3338259366067.0;
            entity['__workletHash'] = backup;
            backup = _closure1_slot12;
            entity['__initData'] = backup;
            options = zulu.bind(options)(entity);
            zulu = _closure1_slot9;
            entity = 23;
            entity = foxtrot[entity];
            mike = mike.bind(tango)(entity);
            entity = {};
            foxtrot = report.container;
            report = new Array(2);
            report[0] = foxtrot;
            report[1] = options;
            entity['style'] = report;
            report = null;
            if(!(report == golf)) { _fun122288_ip = 664; continue _fun122288 }
 594:
            if(!(report == romeo)) { _fun122288_ip = 636; continue _fun122288 }
 598:
            options = _closure1_slot9;
            golf = _closure1_slot1;
            foxtrot = _closure1_slot2;
            report = 25;
            report = foxtrot[report];
            golf = golf.bind(tango)(report);
            report = {};
            report['channelId'] = yankee;
            report = options.bind(tango)(golf, report);
            _fun122288_ip = 662; continue _fun122288;
 636:
            yankee = _closure1_slot9;
            options = _closure1_slot14;
            golf = {};
            context = golf;
            record = romeo;
            romeo = copyDataProperties(context, record);
            report = yankee.bind(tango)(options, golf);
 662:
            _fun122288_ip = 712; continue _fun122288;
 664:
            options = _closure1_slot9;
            golf = _closure1_slot1;
            yankee = _closure1_slot2;
            oscar = 24;
            oscar = yankee[oscar];
            golf = golf.bind(tango)(oscar);
            oscar = {};
            oscar['contentTypes'] = offset;
            verify = function() { // Original name: children
                tango = _closure1_slot9;
                zulu = _closure1_slot14;
                mike = {};
                report = _closure2_slot11;
                oscar = mike;
                entity = copyDataProperties(oscar, report);
                entity = undefined;
                entity = tango.bind(entity)(zulu, mike);
                return entity;
            };
            oscar['children'] = verify;
            report = options.bind(tango)(golf, oscar);
 712:
            entity['children'] = report;
            entity = zulu.bind(tango)(mike, entity);
            return entity;
        }
    };
    var _closure1_slot15 = report;
    entity = global;
    verify = entity.Object;
    oscar = verify.defineProperty;
    tango = {};
    offset = true;
    tango['value'] = offset;
    entity = '__esModule';
    entity = oscar.bind(verify)(zulu, entity, tango);
    entity = 0;
    tango = options[entity];
    entity = undefined;
    tango = kilo.bind(entity)(tango);
    var _closure1_slot3 = tango;
    tango = 1;
    oscar = options[tango];
    tango = argCorge;
    tango = tango.bind(entity)(oscar);
    var _closure1_slot4 = tango;
    tango = 2;
    tango = options[tango];
    tango = golf.bind(entity)(tango);
    oscar = tango.TABLE_ROW_HEIGHT;
    tango = 3;
    tango = options[tango];
    tango = kilo.bind(entity)(tango);
    var _closure1_slot5 = tango;
    tango = 4;
    tango = options[tango];
    tango = golf.bind(entity)(tango);
    output = tango.MODE_CHANGE_PHYSICS;
    tango = tango.UI_SHOW_HIDE_PHYSICS;
    var _closure1_slot6 = tango;
    tango = 5;
    tango = options[tango];
    tango = golf.bind(entity)(tango);
    tango = tango.CALL_TILE_GUTTER;
    var _closure1_slot7 = tango;
    tango = 6;
    tango = options[tango];
    tango = golf.bind(entity)(tango);
    tango = tango.ThemeTypes;
    var _closure1_slot8 = tango;
    tango = 7;
    tango = options[tango];
    tango = golf.bind(entity)(tango);
    tango = tango.jsx;
    var _closure1_slot9 = tango;
    tango = 16;
    tango = oscar + tango;
    oscar = 8;
    oscar = options[oscar];
    romeo = golf.bind(entity)(oscar);
    yankee = romeo.createStyles;
    oscar = {};
    foxtrot = {'zIndex': 1, 'position': 'absolute', 'bottom': 0, 'left': '50%', 'overflow': 'hidden', 'alignItems': 'center'};
    backup = 9;
    backup = options[backup];
    backup = kilo.bind(entity)(backup);
    backup = backup.radii;
    backup = backup.lg;
    foxtrot['borderRadius'] = backup;
    oscar['container'] = foxtrot;
    oscar = yankee.bind(romeo)(oscar);
    var _closure1_slot10 = oscar;
    oscar = {};
    result = oscar;
    verify = copyDataProperties(result, output);
    verify = 'overshootClamping';
    oscar[verify] = offset;
    var _closure1_slot11 = oscar;
    oscar = {};
    verify = "function VoicePanelFloatingCTAContainerTsx1(){const{getControlsDefaultWidth,windowDimensions,safeArea,state,TransitionStates,controlsSpecs,roundToNearestPixel,withSpring,OPACITY_CHANGE_PHYSICS,runOnJS,cleanUp,wrapperSpecs,UI_SHOW_HIDE_PHYSICS,gestureState,CALL_TILE_GUTTER,accessoryHeights}=this.__closure;const width=getControlsDefaultWidth(windowDimensions.get().width,safeArea.get().left,safeArea.get().right);const opacity=state===TransitionStates.YEETED?0:1;return{bottom:controlsSpecs.get().height+16,width:width,marginLeft:roundToNearestPixel(width/2)*-1,opacity:withSpring(opacity,OPACITY_CHANGE_PHYSICS,'respect-motion-settings',function(finished){if(finished&&state===TransitionStates.YEETED){runOnJS(cleanUp)();}}),transform:[{translateX:withSpring(wrapperSpecs.get().x,UI_SHOW_HIDE_PHYSICS)},{translateY:withSpring(wrapperSpecs.get().hidden||gestureState.get().active&&!gestureState.get().requiresPop?wrapperSpecs.get().height+CALL_TILE_GUTTER+accessoryHeights.get():wrapperSpecs.get().y,UI_SHOW_HIDE_PHYSICS)}]};}";
    oscar['code'] = verify;
    var _closure1_slot12 = oscar;
    oscar = {};
    verify = 'function VoicePanelFloatingCTAContainerTsx2(finished){const{state,TransitionStates,runOnJS,cleanUp}=this.__closure;if(finished&&state===TransitionStates.YEETED){runOnJS(cleanUp)();}}';
    oscar['code'] = verify;
    var _closure1_slot13 = oscar;
    oscar = 26;
    oscar = options[oscar];
    options = golf.bind(entity)(oscar);
    golf = options.fileFinishedImporting;
    oscar = 'modules/voice_panel/native/controls/VoicePanelFloatingCTAContainer.tsx';
    oscar = golf.bind(options)(oscar);
    zulu['default'] = report;
    zulu['FLOATING_CTA_TOTAL_VIEW_HEIGHT'] = tango;
    mike = function(argFoo, argBar, argBaz, argCorge) { // Original name: renderVoicePanelFloatingCTA
        report = _closure1_slot9;
        zulu = _closure1_slot0;
        tango = _closure1_slot2;
        mike = 12;
        mike = tango[mike];
        tango = undefined;
        mike = zulu.bind(tango)(mike);
        zulu = mike.ThemeContextProvider;
        mike = {};
        oscar = _closure1_slot8;
        oscar = oscar.DARK;
        mike['theme'] = oscar;
        golf = _closure1_slot9;
        oscar = _closure1_slot15;
        entity = {};
        yankee = argBar;
        romeo = entity;
        options = copyDataProperties(romeo, yankee);
        verify = argBaz;
        options = 'state';
        entity[options] = verify;
        verify = argCorge;
        options = 'cleanUp';
        entity[options] = verify;
        entity = golf.bind(tango)(oscar, entity);
        mike['children'] = entity;
        entity = argFoo;
        entity = report.bind(tango)(zulu, mike, entity);
        return entity;
    };
    zulu['renderVoicePanelFloatingCTA'] = mike;
    return entity;
})();