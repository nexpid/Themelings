// app/modules/voice_panel/native/controls/VoicePanelControlsDimOverlay.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    report = argBar;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    entity = argBaz;
    var _closure1_slot1 = entity;
    var _closure1_slot2 = oscard;
    entity = global;
    option = entity.Object;
    golfie = option.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(option)(zuuluu, entity, tangon);
    entity = 0;
    golfie = oscard[entity];
    tangon = argCor;
    entity = undefined;
    golfie = tangon.bind(entity)(golfie);
    var _closure1_slot3 = golfie;
    tangon = 1;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.BACKDROP_OPAQUE_MAX_OPACITY;
    var _closure1_slot4 = tangon;
    tangon = 2;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    option = tangon.PANEL_CONTROLS_HEIGHT_PHYSICS;
    var _closure1_slot5 = option;
    tangon = tangon.VoicePanelModes;
    var _closure1_slot6 = tangon;
    tangon = 3;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.VoicePanelControlsModes;
    var _closure1_slot7 = tangon;
    tangon = 4;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.jsx;
    var _closure1_slot8 = tangon;
    tangon = {};
    option = "function VoicePanelControlsDimOverlayTsx1(){const{windowDimensions,getDrawerSpec,safeArea,controlsSpecs,VoicePanelControlsModes,mode,VoicePanelModes,interpolate,wrapperSpecs,BACKDROP_OPAQUE_MAX_OPACITY}=this.__closure;const{height:height}=windowDimensions.get();const{minHeight:minHeight,maxHeight:maxHeight}=getDrawerSpec(height,safeArea.get().top);if(controlsSpecs.get().mode!==VoicePanelControlsModes.DRAWER||mode.get()!==VoicePanelModes.PANEL){return 0;}return interpolate(wrapperSpecs.get().height,[minHeight,maxHeight],[0,BACKDROP_OPAQUE_MAX_OPACITY],'clamp');}";
    tangon['code'] = option;
    var _closure1_slot9 = tangon;
    tangon = {};
    option = 'function VoicePanelControlsDimOverlayTsx2(){const{overlayOpacity}=this.__closure;return overlayOpacity.get()>=0.35;}';
    tangon['code'] = option;
    var _closure1_slot10 = tangon;
    tangon = {};
    option = "function VoicePanelControlsDimOverlayTsx3(){const{withSpring,overlayOpacity,PANEL_CONTROLS_HEIGHT_PHYSICS,accessibilityPreferencesSharedValue,overlayActive}=this.__closure;return{zIndex:1,opacity:withSpring(overlayOpacity.get(),PANEL_CONTROLS_HEIGHT_PHYSICS),display:accessibilityPreferencesSharedValue.get().screenReaderEnabled&&!overlayActive.get()?'none':'flex'};}";
    tangon['code'] = option;
    var _closure1_slot11 = tangon;
    tangon = {};
    option = "function VoicePanelControlsDimOverlayTsx4(){const{overlayActive}=this.__closure;return{pointerEvents:!overlayActive.get()?'none':'auto'};}";
    tangon['code'] = option;
    var _closure1_slot12 = tangon;
    tangon = golfie.memo;
    michal = function(argFoo) { // Original name: VoicePanelControlsDimOverlay
        entity = argFoo;
        foxtra = entity.wrapperSpecs;
        var _closure2_slot0 = foxtra;
        offset = _closure1_slot3;
        report = offset.useContext;
        oscard = _closure1_slot1;
        option = _closure1_slot2;
        michal = 5;
        michal = option[michal];
        tangon = undefined;
        michal = oscard.bind(tangon)(michal);
        michal = report.bind(offset)(michal);
        output = michal.windowDimensions;
        var _closure2_slot1 = output;
        yankee = michal.setControlsMode;
        var _closure2_slot2 = yankee;
        kiloes = michal.controlsSpecs;
        var _closure2_slot3 = kiloes;
        sizing = michal.safeArea;
        var _closure2_slot4 = sizing;
        backup = michal.mode;
        var _closure2_slot5 = backup;
        michal = _closure1_slot0;
        report = 6;
        oscard = option[report];
        verify = michal.bind(tangon)(oscard);
        golfie = verify.useDerivedValue;
        oscard = function() { // Original name: A
            _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
                michal = _closure2_slot1;
                entity = michal.get;
                entity = entity.bind(michal)();
                oscard = entity.height;
                zuuluu = _closure1_slot0;
                report = _closure1_slot2;
                entity = 7;
                entity = report[entity];
                golfie = undefined;
                report = zuuluu.bind(golfie)(entity);
                zuuluu = report.getDrawerSpec;
                option = _closure2_slot4;
                entity = option.get;
                entity = entity.bind(option)();
                entity = entity.top;
                entity = zuuluu.bind(report)(oscard, entity);
                option = entity.minHeight;
                zuuluu = entity.maxHeight;
                report = _closure2_slot3;
                entity = report.get;
                entity = entity.bind(report)();
                oscard = entity.mode;
                entity = _closure1_slot7;
                report = entity.DRAWER;
                entity = 0;
                if(!(oscard === report)) { _fun00002_ip = 242; continue _fun00001 }
 122:
                oscard = _closure2_slot5;
                report = oscard.get;
                oscard = report.bind(oscard)();
                report = _closure1_slot6;
                report = report.PANEL;
                entity = 0;
                if(!(oscard === report)) { _fun00002_ip = 242; continue _fun00001 }
 151:
                oscard = _closure1_slot0;
                verify = _closure1_slot2;
                report = 6;
                report = verify[report];
                golfie = oscard.bind(golfie)(report);
                oscard = golfie.interpolate;
                report = _closure2_slot0;
                tangon = report.get;
                tangon = tangon.bind(report)();
                foxtra = tangon.height;
                tangon = new Array(2);
                tangon[0] = option;
                tangon[1] = zuuluu;
                michal = _closure1_slot4;
                zuuluu = [0];
                zuuluu[1] = michal;
                offset = 'clamp';
                backup = golfie;
                romeon = tangon;
                yankee = zuuluu;
                entity = backup[oscard](foxtra, romeon, yankee, offset, verify);
 242:
                return entity;
            }
        };
        romeon = {};
        romeon['windowDimensions'] = output;
        output = 7;
        output = option[output];
        output = michal.bind(tangon)(output);
        output = output.getDrawerSpec;
        romeon['getDrawerSpec'] = output;
        romeon['safeArea'] = sizing;
        romeon['controlsSpecs'] = kiloes;
        kiloes = _closure1_slot7;
        romeon['VoicePanelControlsModes'] = kiloes;
        romeon['mode'] = backup;
        backup = _closure1_slot6;
        romeon['VoicePanelModes'] = backup;
        backup = option[report];
        backup = michal.bind(tangon)(backup);
        backup = backup.interpolate;
        romeon['interpolate'] = backup;
        romeon['wrapperSpecs'] = foxtra;
        foxtra = _closure1_slot4;
        romeon['BACKDROP_OPAQUE_MAX_OPACITY'] = foxtra;
        oscard['__closure'] = romeon;
        romeon = 17386741533055.0;
        oscard['__workletHash'] = romeon;
        romeon = _closure1_slot9;
        oscard['__initData'] = romeon;
        backup = golfie.bind(verify)(oscard);
        var _closure2_slot6 = backup;
        oscard = option[report];
        verify = michal.bind(tangon)(oscard);
        golfie = verify.useDerivedValue;
        oscard = function() { // Original name: y
            michal = _closure2_slot6;
            entity = michal.get;
            michal = entity.bind(michal)();
            entity = 0.35;
            entity = michal >= entity;
            return entity;
        };
        romeon = {};
        romeon['overlayOpacity'] = backup;
        oscard['__closure'] = romeon;
        romeon = 733654137262.0;
        oscard['__workletHash'] = romeon;
        romeon = _closure1_slot10;
        oscard['__initData'] = romeon;
        foxtra = golfie.bind(verify)(oscard);
        var _closure2_slot7 = foxtra;
        oscard = option[report];
        verify = michal.bind(tangon)(oscard);
        golfie = verify.useAnimatedStyle;
        oscard = function() { // Original name: S
            _fun00003: for(var _fun00004_ip = 0; ; ) switch(_fun00004_ip) {
 0:
                entity = {};
                michal = 1;
                entity['zIndex'] = michal;
                report = _closure1_slot0;
                oscard = _closure1_slot2;
                zuuluu = 8;
                zuuluu = oscard[zuuluu];
                tangon = undefined;
                verify = report.bind(tangon)(zuuluu);
                option = verify.withSpring;
                offset = _closure2_slot6;
                golfie = offset.get;
                golfie = golfie.bind(offset)();
                michal = _closure1_slot5;
                michal = option.bind(verify)(golfie, michal);
                entity['opacity'] = michal;
                michal = 9;
                michal = oscard[michal];
                michal = report.bind(tangon)(michal);
                tangon = michal.accessibilityPreferencesSharedValue;
                michal = tangon.get;
                michal = michal.bind(tangon)();
                report = michal.screenReaderEnabled;
                tangon = 'flex';
                michal = tangon;
                if(!report) { _fun00004_ip = 136; continue _fun00003 }
 113:
                report = _closure2_slot7;
                zuuluu = report.get;
                zuuluu = zuuluu.bind(report)();
                michal = tangon;
                if(zuuluu) { _fun00004_ip = 136; continue _fun00003 }
 132:
                michal = 'none';
 136:
                entity['display'] = michal;
                return entity;
            }
        };
        romeon = {};
        kiloes = 8;
        kiloes = option[kiloes];
        kiloes = michal.bind(tangon)(kiloes);
        kiloes = kiloes.withSpring;
        romeon['withSpring'] = kiloes;
        romeon['overlayOpacity'] = backup;
        backup = _closure1_slot5;
        romeon['PANEL_CONTROLS_HEIGHT_PHYSICS'] = backup;
        backup = 9;
        backup = option[backup];
        backup = michal.bind(tangon)(backup);
        backup = backup.accessibilityPreferencesSharedValue;
        romeon['accessibilityPreferencesSharedValue'] = backup;
        romeon['overlayActive'] = foxtra;
        oscard['__closure'] = romeon;
        romeon = 7500180433000.0;
        oscard['__workletHash'] = romeon;
        romeon = _closure1_slot11;
        oscard['__initData'] = romeon;
        oscard = golfie.bind(verify)(oscard);
        report = option[report];
        verify = michal.bind(tangon)(report);
        golfie = verify.useAnimatedProps;
        report = function() { // Original name: v
            _fun00005: for(var _fun00006_ip = 0; ; ) switch(_fun00006_ip) {
 0:
                entity = {};
                zuuluu = _closure2_slot7;
                michal = zuuluu.get;
                zuuluu = michal.bind(zuuluu)();
                michal = 'none';
                if(!zuuluu) { _fun00006_ip = 29; continue _fun00005 }
 25:
                michal = 'auto';
 29:
                entity['pointerEvents'] = michal;
                return entity;
            }
        };
        romeon = {};
        romeon['overlayActive'] = foxtra;
        report['__closure'] = romeon;
        romeon = 873976025930.0;
        report['__workletHash'] = romeon;
        romeon = _closure1_slot12;
        report['__initData'] = romeon;
        report = golfie.bind(verify)(report);
        verify = offset.useCallback;
        golfie = new Array(1);
        golfie[0] = yankee;
        zuuluu = function() {
            zuuluu = _closure2_slot2;
            michal = {};
            entity = _closure1_slot7;
            entity = entity.FLOATING_DEFAULT;
            michal['mode'] = entity;
            entity = undefined;
            michal = zuuluu.bind(entity)(michal);
            return entity;
        };
        golfie = verify.bind(offset)(zuuluu, golfie);
        zuuluu = _closure1_slot8;
        entity = 10;
        entity = option[entity];
        entity = michal.bind(tangon)(entity);
        michal = entity.Backdrop;
        entity = {};
        entity['onDismiss'] = golfie;
        entity['style'] = oscard;
        entity['animatedProps'] = report;
        report = true;
        entity['opaque'] = report;
        entity['aria-hidden'] = report;
        entity = zuuluu.bind(tangon)(michal, entity);
        return entity;
    };
    michal = tangon.bind(golfie)(michal);
    tangon = 11;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/voice_panel/native/controls/VoicePanelControlsDimOverlay.tsx';
    tangon = report.bind(oscard)(tangon);
    zuuluu['default'] = michal;
    return entity;
})();