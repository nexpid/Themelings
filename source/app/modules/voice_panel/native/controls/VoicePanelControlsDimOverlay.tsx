// app/modules/voice_panel/native/controls/VoicePanelControlsDimOverlay.tsx
export default (function(argFoo, argBar, argBaz, argCorge, _, argFred, argPlugh) {
    report = argBar;
    zulu = argFred;
    oscar = argPlugh;
    var _closure1_slot0 = report;
    entity = argBaz;
    var _closure1_slot1 = entity;
    var _closure1_slot2 = oscar;
    entity = global;
    options = entity.Object;
    golf = options.defineProperty;
    tango = {};
    entity = true;
    tango['value'] = entity;
    entity = '__esModule';
    entity = golf.bind(options)(zulu, entity, tango);
    entity = 0;
    golf = oscar[entity];
    tango = argCorge;
    entity = undefined;
    golf = tango.bind(entity)(golf);
    var _closure1_slot3 = golf;
    tango = 1;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.BACKDROP_OPAQUE_MAX_OPACITY;
    var _closure1_slot4 = tango;
    tango = 2;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    options = tango.PANEL_CONTROLS_HEIGHT_PHYSICS;
    var _closure1_slot5 = options;
    tango = tango.VoicePanelModes;
    var _closure1_slot6 = tango;
    tango = 3;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.VoicePanelControlsModes;
    var _closure1_slot7 = tango;
    tango = 4;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.jsx;
    var _closure1_slot8 = tango;
    tango = {};
    options = "function VoicePanelControlsDimOverlayTsx1(){const{windowDimensions,getDrawerSpec,safeArea,controlsSpecs,VoicePanelControlsModes,mode,VoicePanelModes,interpolate,wrapperSpecs,BACKDROP_OPAQUE_MAX_OPACITY}=this.__closure;const{height:height}=windowDimensions.get();const{minHeight:minHeight,maxHeight:maxHeight}=getDrawerSpec(height,safeArea.get().top);if(controlsSpecs.get().mode!==VoicePanelControlsModes.DRAWER||mode.get()!==VoicePanelModes.PANEL){return 0;}return interpolate(wrapperSpecs.get().height,[minHeight,maxHeight],[0,BACKDROP_OPAQUE_MAX_OPACITY],'clamp');}";
    tango['code'] = options;
    var _closure1_slot9 = tango;
    tango = {};
    options = 'function VoicePanelControlsDimOverlayTsx2(){const{overlayOpacity}=this.__closure;return overlayOpacity.get()>=0.35;}';
    tango['code'] = options;
    var _closure1_slot10 = tango;
    tango = {};
    options = "function VoicePanelControlsDimOverlayTsx3(){const{withSpring,overlayOpacity,PANEL_CONTROLS_HEIGHT_PHYSICS,accessibilityPreferencesSharedValue,overlayActive}=this.__closure;return{zIndex:1,opacity:withSpring(overlayOpacity.get(),PANEL_CONTROLS_HEIGHT_PHYSICS),display:accessibilityPreferencesSharedValue.get().screenReaderEnabled&&!overlayActive.get()?'none':'flex'};}";
    tango['code'] = options;
    var _closure1_slot11 = tango;
    tango = {};
    options = "function VoicePanelControlsDimOverlayTsx4(){const{overlayActive}=this.__closure;return{pointerEvents:!overlayActive.get()?'none':'auto'};}";
    tango['code'] = options;
    var _closure1_slot12 = tango;
    tango = golf.memo;
    mike = function(argFoo) { // Original name: VoicePanelControlsDimOverlay
        entity = argFoo;
        foxtrot = entity.wrapperSpecs;
        var _closure2_slot0 = foxtrot;
        offset = _closure1_slot3;
        report = offset.useContext;
        oscar = _closure1_slot1;
        options = _closure1_slot2;
        mike = 5;
        mike = options[mike];
        tango = undefined;
        mike = oscar.bind(tango)(mike);
        mike = report.bind(offset)(mike);
        output = mike.windowDimensions;
        var _closure2_slot1 = output;
        yankee = mike.setControlsMode;
        var _closure2_slot2 = yankee;
        kilo = mike.controlsSpecs;
        var _closure2_slot3 = kilo;
        sizing = mike.safeArea;
        var _closure2_slot4 = sizing;
        backup = mike.mode;
        var _closure2_slot5 = backup;
        mike = _closure1_slot0;
        report = 6;
        oscar = options[report];
        verify = mike.bind(tango)(oscar);
        golf = verify.useDerivedValue;
        oscar = function() { // Original name: A
            _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
                mike = _closure2_slot1;
                entity = mike.get;
                entity = entity.bind(mike)();
                oscar = entity.height;
                zulu = _closure1_slot0;
                report = _closure1_slot2;
                entity = 7;
                entity = report[entity];
                golf = undefined;
                report = zulu.bind(golf)(entity);
                zulu = report.getDrawerSpec;
                options = _closure2_slot4;
                entity = options.get;
                entity = entity.bind(options)();
                entity = entity.top;
                entity = zulu.bind(report)(oscar, entity);
                options = entity.minHeight;
                zulu = entity.maxHeight;
                report = _closure2_slot3;
                entity = report.get;
                entity = entity.bind(report)();
                oscar = entity.mode;
                entity = _closure1_slot7;
                report = entity.DRAWER;
                entity = 0;
                if(!(oscar === report)) { _fun00002_ip = 242; continue _fun00001 }
 122:
                oscar = _closure2_slot5;
                report = oscar.get;
                oscar = report.bind(oscar)();
                report = _closure1_slot6;
                report = report.PANEL;
                entity = 0;
                if(!(oscar === report)) { _fun00002_ip = 242; continue _fun00001 }
 151:
                oscar = _closure1_slot0;
                verify = _closure1_slot2;
                report = 6;
                report = verify[report];
                golf = oscar.bind(golf)(report);
                oscar = golf.interpolate;
                report = _closure2_slot0;
                tango = report.get;
                tango = tango.bind(report)();
                foxtrot = tango.height;
                tango = new Array(2);
                tango[0] = options;
                tango[1] = zulu;
                mike = _closure1_slot4;
                zulu = [0];
                zulu[1] = mike;
                offset = 'clamp';
                backup = golf;
                romeo = tango;
                yankee = zulu;
                entity = backup[oscar](foxtrot, romeo, yankee, offset, verify);
 242:
                return entity;
            }
        };
        romeo = {};
        romeo['windowDimensions'] = output;
        output = 7;
        output = options[output];
        output = mike.bind(tango)(output);
        output = output.getDrawerSpec;
        romeo['getDrawerSpec'] = output;
        romeo['safeArea'] = sizing;
        romeo['controlsSpecs'] = kilo;
        kilo = _closure1_slot7;
        romeo['VoicePanelControlsModes'] = kilo;
        romeo['mode'] = backup;
        backup = _closure1_slot6;
        romeo['VoicePanelModes'] = backup;
        backup = options[report];
        backup = mike.bind(tango)(backup);
        backup = backup.interpolate;
        romeo['interpolate'] = backup;
        romeo['wrapperSpecs'] = foxtrot;
        foxtrot = _closure1_slot4;
        romeo['BACKDROP_OPAQUE_MAX_OPACITY'] = foxtrot;
        oscar['__closure'] = romeo;
        romeo = 17386741533055.0;
        oscar['__workletHash'] = romeo;
        romeo = _closure1_slot9;
        oscar['__initData'] = romeo;
        backup = golf.bind(verify)(oscar);
        var _closure2_slot6 = backup;
        oscar = options[report];
        verify = mike.bind(tango)(oscar);
        golf = verify.useDerivedValue;
        oscar = function() { // Original name: y
            mike = _closure2_slot6;
            entity = mike.get;
            mike = entity.bind(mike)();
            entity = 0.35;
            entity = mike >= entity;
            return entity;
        };
        romeo = {};
        romeo['overlayOpacity'] = backup;
        oscar['__closure'] = romeo;
        romeo = 733654137262.0;
        oscar['__workletHash'] = romeo;
        romeo = _closure1_slot10;
        oscar['__initData'] = romeo;
        foxtrot = golf.bind(verify)(oscar);
        var _closure2_slot7 = foxtrot;
        oscar = options[report];
        verify = mike.bind(tango)(oscar);
        golf = verify.useAnimatedStyle;
        oscar = function() { // Original name: S
            _fun00003: for(var _fun00004_ip = 0; ; ) switch(_fun00004_ip) {
 0:
                entity = {};
                mike = 1;
                entity['zIndex'] = mike;
                report = _closure1_slot0;
                oscar = _closure1_slot2;
                zulu = 8;
                zulu = oscar[zulu];
                tango = undefined;
                verify = report.bind(tango)(zulu);
                options = verify.withSpring;
                offset = _closure2_slot6;
                golf = offset.get;
                golf = golf.bind(offset)();
                mike = _closure1_slot5;
                mike = options.bind(verify)(golf, mike);
                entity['opacity'] = mike;
                mike = 9;
                mike = oscar[mike];
                mike = report.bind(tango)(mike);
                tango = mike.accessibilityPreferencesSharedValue;
                mike = tango.get;
                mike = mike.bind(tango)();
                report = mike.screenReaderEnabled;
                tango = 'flex';
                mike = tango;
                if(!report) { _fun00004_ip = 136; continue _fun00003 }
 113:
                report = _closure2_slot7;
                zulu = report.get;
                zulu = zulu.bind(report)();
                mike = tango;
                if(zulu) { _fun00004_ip = 136; continue _fun00003 }
 132:
                mike = 'none';
 136:
                entity['display'] = mike;
                return entity;
            }
        };
        romeo = {};
        kilo = 8;
        kilo = options[kilo];
        kilo = mike.bind(tango)(kilo);
        kilo = kilo.withSpring;
        romeo['withSpring'] = kilo;
        romeo['overlayOpacity'] = backup;
        backup = _closure1_slot5;
        romeo['PANEL_CONTROLS_HEIGHT_PHYSICS'] = backup;
        backup = 9;
        backup = options[backup];
        backup = mike.bind(tango)(backup);
        backup = backup.accessibilityPreferencesSharedValue;
        romeo['accessibilityPreferencesSharedValue'] = backup;
        romeo['overlayActive'] = foxtrot;
        oscar['__closure'] = romeo;
        romeo = 7500180433000.0;
        oscar['__workletHash'] = romeo;
        romeo = _closure1_slot11;
        oscar['__initData'] = romeo;
        oscar = golf.bind(verify)(oscar);
        report = options[report];
        verify = mike.bind(tango)(report);
        golf = verify.useAnimatedProps;
        report = function() { // Original name: v
            _fun00005: for(var _fun00006_ip = 0; ; ) switch(_fun00006_ip) {
 0:
                entity = {};
                zulu = _closure2_slot7;
                mike = zulu.get;
                zulu = mike.bind(zulu)();
                mike = 'none';
                if(!zulu) { _fun00006_ip = 29; continue _fun00005 }
 25:
                mike = 'auto';
 29:
                entity['pointerEvents'] = mike;
                return entity;
            }
        };
        romeo = {};
        romeo['overlayActive'] = foxtrot;
        report['__closure'] = romeo;
        romeo = 873976025930.0;
        report['__workletHash'] = romeo;
        romeo = _closure1_slot12;
        report['__initData'] = romeo;
        report = golf.bind(verify)(report);
        verify = offset.useCallback;
        golf = new Array(1);
        golf[0] = yankee;
        zulu = function() {
            zulu = _closure2_slot2;
            mike = {};
            entity = _closure1_slot7;
            entity = entity.FLOATING_DEFAULT;
            mike['mode'] = entity;
            entity = undefined;
            mike = zulu.bind(entity)(mike);
            return entity;
        };
        golf = verify.bind(offset)(zulu, golf);
        zulu = _closure1_slot8;
        entity = 10;
        entity = options[entity];
        entity = mike.bind(tango)(entity);
        mike = entity.Backdrop;
        entity = {};
        entity['onDismiss'] = golf;
        entity['style'] = oscar;
        entity['animatedProps'] = report;
        report = true;
        entity['opaque'] = report;
        entity['aria-hidden'] = report;
        entity = zulu.bind(tango)(mike, entity);
        return entity;
    };
    mike = tango.bind(golf)(mike);
    tango = 11;
    tango = oscar[tango];
    oscar = report.bind(entity)(tango);
    report = oscar.fileFinishedImporting;
    tango = 'modules/voice_panel/native/controls/VoicePanelControlsDimOverlay.tsx';
    tango = report.bind(oscar)(tango);
    zulu['default'] = mike;
    return entity;
})();