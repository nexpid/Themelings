// app/modules/voice_panel/native/controls/utils/VoicePanelControlUtils.tsx
export default (function(argFoo, argBar, argBaz, _, __, argFre, argPlu) {
    zuuluu = argFre;
    report = argPlu;
    michal = argBaz;
    var _closure1_slot0 = michal;
    var _closure1_slot1 = report;
    michal = global;
    golfie = michal.Object;
    oscard = golfie.defineProperty;
    tangon = {};
    michal = true;
    tangon['value'] = michal;
    michal = '__esModule';
    michal = oscard.bind(golfie)(zuuluu, michal, tangon);
    michal = {};
    tangon = 'function getDrawerSpec_VoicePanelControlUtilsTsx1(height,top){const{roundToNearestPixel}=this.__closure;const maxHeight=height-top;return{minHeight:roundToNearestPixel(maxHeight*0.65),maxHeight:maxHeight};}';
    michal['code'] = tangon;
    var _closure1_slot2 = michal;
    michal = function() {
        entity = function(argFoo, argBar) { // Original name: getDrawerSpec
            michal = argFoo;
            entity = argBar;
            michal = michal - entity;
            entity = {};
            tangon = _closure1_slot0;
            report = _closure1_slot1;
            zuuluu = 0;
            zuuluu = report[zuuluu];
            report = undefined;
            tangon = tangon.bind(report)(zuuluu);
            zuuluu = 0.65;
            zuuluu = zuuluu * michal;
            zuuluu = tangon.bind(report)(zuuluu);
            entity['minHeight'] = zuuluu;
            entity['maxHeight'] = michal;
            return entity;
        };
        zuuluu = {};
        oscard = _closure1_slot0;
        report = _closure1_slot1;
        tangon = 0;
        report = report[tangon];
        tangon = undefined;
        tangon = oscard.bind(tangon)(report);
        zuuluu['roundToNearestPixel'] = tangon;
        entity['__closure'] = zuuluu;
        zuuluu = 3647675988513.0;
        entity['__workletHash'] = zuuluu;
        michal = _closure1_slot2;
        entity['__initData'] = michal;
        return entity;
    };
    entity = undefined;
    michal = michal.bind(entity)();
    tangon = 1;
    report = report[tangon];
    tangon = argBar;
    oscard = tangon.bind(entity)(report);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/voice_panel/native/controls/utils/VoicePanelControlUtils.tsx';
    tangon = report.bind(oscard)(tangon);
    zuuluu['getDrawerSpec'] = michal;
    return entity;
})();