// app/modules/voice_panel/native/controls/VoicePanelFloatingSoundboardButton.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    report = argBar;
    romeon = argBaz;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    var _closure1_slot1 = romeon;
    var _closure1_slot2 = oscard;
    entity = global;
    option = entity.Object;
    golfie = option.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(option)(zuuluu, entity, tangon);
    entity = 0;
    golfie = oscard[entity];
    tangon = argCor;
    entity = undefined;
    golfie = tangon.bind(entity)(golfie);
    tangon = 1;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.View;
    var _closure1_slot3 = tangon;
    tangon = 2;
    option = oscard[tangon];
    option = report.bind(entity)(option);
    option = option.jsx;
    var _closure1_slot4 = option;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.jsxs;
    var _closure1_slot5 = tangon;
    tangon = 3;
    tangon = oscard[tangon];
    verify = report.bind(entity)(tangon);
    option = verify.createStyles;
    tangon = {};
    offset = {};
    yankee = 4;
    foxtra = oscard[yankee];
    foxtra = romeon.bind(entity)(foxtra);
    foxtra = foxtra.radii;
    foxtra = foxtra.round;
    offset['borderRadius'] = foxtra;
    foxtra = 'hidden';
    offset['overflow'] = foxtra;
    tangon['container'] = offset;
    offset = {};
    foxtra = 'row';
    offset['flexDirection'] = foxtra;
    tangon['iconButton'] = offset;
    offset = {};
    yankee = oscard[yankee];
    yankee = romeon.bind(entity)(yankee);
    yankee = yankee.spacing;
    yankee = yankee.PX_4;
    offset['marginStart'] = yankee;
    tangon['image'] = offset;
    tangon = option.bind(verify)(tangon);
    var _closure1_slot6 = tangon;
    tangon = golfie.memo;
    michal = function(argFoo) {
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            entity = argFoo;
            zuuluu = entity.channelId;
            entity = _closure1_slot6;
            report = undefined;
            output = entity.bind(report)();
            tangon = _closure1_slot1;
            oscard = _closure1_slot2;
            entity = 5;
            michal = oscard[entity];
            michal = tangon.bind(report)(michal);
            tangon = _closure1_slot0;
            entity = oscard[entity];
            entity = tangon.bind(report)(entity);
            entity = entity.SoundboardButtonLocation;
            entity = entity.FLOATING_BUTTON;
            entity = michal.bind(report)(zuuluu, entity);
            michal = entity.visible;
            romeon = entity.handlePress;
            foxtra = entity.disabled;
            golfie = entity.showIndicator;
            entity = null;
            if(!michal) { _fun00002_ip = 450; continue _fun00001 }
 103:
            tangon = _closure1_slot5;
            zuuluu = _closure1_slot3;
            michal = {};
            oscard = output.container;
            michal['style'] = oscard;
            yankee = _closure1_slot4;
            sizing = _closure1_slot0;
            result = _closure1_slot2;
            oscard = 6;
            oscard = result[oscard];
            oscard = sizing.bind(report)(oscard);
            verify = oscard.VoicePanelVisualEffectView;
            oscard = {};
            verify = yankee.bind(report)(verify, oscard);
            oscard = new Array(3);
            oscard[0] = verify;
            verify = 7;
            verify = result[verify];
            verify = sizing.bind(report)(verify);
            offset = verify.IconButton;
            verify = {};
            backup = 8;
            kiloes = result[backup];
            kiloes = sizing.bind(report)(kiloes);
            echoed = kiloes.intl;
            kiloes = echoed.string;
            backup = result[backup];
            backup = sizing.bind(report)(backup);
            backup = backup.t;
            backup = backup.6EJvHh;
            backup = kiloes.bind(echoed)(backup);
            verify['accessibilityLabel'] = backup;
            verify['disabled'] = foxtra;
            foxtra = {};
            backup = output.iconButton;
            foxtra['style'] = backup;
            backup = 9;
            backup = result[backup];
            backup = sizing.bind(report)(backup);
            kiloes = backup.ChevronSmallUpIcon;
            backup = {'color': 'white', 'size': 'xs'};
            kiloes = yankee.bind(report)(kiloes, backup);
            backup = new Array(2);
            backup[0] = kiloes;
            kiloes = 10;
            kiloes = result[kiloes];
            kiloes = sizing.bind(report)(kiloes);
            sizing = kiloes.SoundboardIcon;
            kiloes = {'style': null, 'color': 'white', 'size': 'xs'};
            output = output.image;
            kiloes['style'] = output;
            kiloes = yankee.bind(report)(sizing, kiloes);
            backup[1] = kiloes;
            foxtra['children'] = backup;
            foxtra = tangon.bind(report)(zuuluu, foxtra);
            verify['icon'] = foxtra;
            verify['onPress'] = romeon;
            romeon = 'secondary-overlay';
            verify['variant'] = romeon;
            romeon = 'sm';
            verify['size'] = romeon;
            verify = yankee.bind(report)(offset, verify);
            oscard[1] = verify;
            if(!golfie) { _fun00002_ip = 436; continue _fun00001 }
 404:
            offset = _closure1_slot4;
            verify = _closure1_slot1;
            yankee = _closure1_slot2;
            option = 11;
            option = yankee[option];
            verify = verify.bind(report)(option);
            option = {};
            golfie = offset.bind(report)(verify, option);
 436:
            oscard[2] = golfie;
            michal['children'] = oscard;
            entity = tangon.bind(report)(zuuluu, michal);
 450:
            return entity;
        }
    };
    michal = tangon.bind(golfie)(michal);
    tangon = 12;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/voice_panel/native/controls/VoicePanelFloatingSoundboardButton.tsx';
    tangon = report.bind(oscard)(tangon);
    zuuluu['default'] = michal;
    return entity;
})();