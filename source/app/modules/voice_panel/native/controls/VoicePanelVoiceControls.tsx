// app/modules/voice_panel/native/controls/VoicePanelVoiceControls.tsx
export default (function(argFoo, argBar, argBaz, argCorge, _, argFred, argPlugh) {
    report = argBar;
    verify = argBaz;
    zulu = argFred;
    oscar = argPlugh;
    var _closure1_slot0 = report;
    var _closure1_slot1 = verify;
    var _closure1_slot2 = oscar;
    entity = function() { // Original name: NOOP
        entity = undefined;
        return entity;
    };
    var _closure1_slot13 = entity;
    entity = global;
    options = entity.Object;
    golf = options.defineProperty;
    tango = {};
    entity = true;
    tango['value'] = entity;
    entity = '__esModule';
    entity = golf.bind(options)(zulu, entity, tango);
    entity = 0;
    golf = oscar[entity];
    tango = argCorge;
    entity = undefined;
    golf = tango.bind(entity)(golf);
    var _closure1_slot3 = golf;
    kilo = 1;
    tango = oscar[kilo];
    tango = report.bind(entity)(tango);
    romeo = tango.StyleSheet;
    offset = tango.ScrollView;
    tango = 2;
    tango = oscar[tango];
    tango = verify.bind(entity)(tango);
    var _closure1_slot4 = tango;
    tango = 3;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    options = tango.CONTROLS_DRAWER_HEADER_EXPANDED_SIZE;
    tango = 4;
    yankee = oscar[tango];
    yankee = report.bind(entity)(yankee);
    yankee = yankee.jsx;
    var _closure1_slot5 = yankee;
    yankee = oscar[tango];
    yankee = report.bind(entity)(yankee);
    yankee = yankee.jsxs;
    var _closure1_slot6 = yankee;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.Fragment;
    var _closure1_slot7 = tango;
    yankee = romeo.create;
    tango = {};
    foxtrot = {};
    foxtrot['flex'] = kilo;
    tango['wrapper'] = foxtrot;
    foxtrot = {};
    foxtrot['flex'] = kilo;
    backup = 5;
    sizing = oscar[backup];
    sizing = verify.bind(entity)(sizing);
    sizing = sizing.spacing;
    sizing = sizing.PX_16;
    foxtrot['paddingHorizontal'] = sizing;
    tango['scrollView'] = foxtrot;
    foxtrot = {};
    foxtrot['flex'] = kilo;
    kilo = oscar[backup];
    kilo = verify.bind(entity)(kilo);
    kilo = kilo.spacing;
    kilo = kilo.PX_16;
    foxtrot['paddingHorizontal'] = kilo;
    foxtrot['marginTop'] = options;
    tango['scrollViewScreenReader'] = foxtrot;
    foxtrot = {};
    backup = oscar[backup];
    backup = verify.bind(entity)(backup);
    backup = backup.spacing;
    backup = backup.PX_16;
    foxtrot['marginBottom'] = backup;
    tango['groupSpacing'] = foxtrot;
    foxtrot = {'position': 'absolute', 'top': 0, 'left': 0, 'right': 0};
    tango['blur'] = foxtrot;
    foxtrot = {};
    foxtrot['height'] = options;
    tango['blurRegion'] = foxtrot;
    foxtrot = {};
    backup = 'relative';
    foxtrot['position'] = backup;
    foxtrot['height'] = options;
    tango['blurRegionScreenReader'] = foxtrot;
    tango = yankee.bind(romeo)(tango);
    var _closure1_slot8 = tango;
    tango = 6;
    tango = oscar[tango];
    verify = verify.bind(entity)(tango);
    tango = verify.createAnimatedComponent;
    tango = tango.bind(verify)(offset);
    var _closure1_slot9 = tango;
    verify = golf.memo;
    tango = function(argFoo) {
        _fun122451: for(var _fun122451_ip = 0; ; ) switch(_fun122451_ip) {
 0:
            entity = argFoo;
            control = entity.channel;
            oscar = _closure1_slot3;
            zulu = oscar.useContext;
            mike = _closure1_slot1;
            report = _closure1_slot2;
            entity = 7;
            entity = report[entity];
            tango = undefined;
            entity = mike.bind(tango)(entity);
            entity = zulu.bind(oscar)(entity);
            sizing = entity.channelId;
            entity = 8;
            entity = report[entity];
            entity = mike.bind(tango)(entity);
            romeo = entity.bind(tango)(sizing);
            mike = _closure1_slot0;
            kilo = 9;
            entity = report[kilo];
            zulu = mike.bind(tango)(entity);
            entity = zulu.useEmbeddedActivityLaunchability;
            verify = entity.bind(zulu)(sizing);
            entity = 10;
            entity = report[entity];
            entity = mike.bind(tango)(entity);
            zulu = entity.DeveloperMode;
            entity = zulu.useSetting;
            options = entity.bind(zulu)();
            zulu = _closure1_slot6;
            entity = 11;
            entity = report[entity];
            entity = mike.bind(tango)(entity);
            mike = entity.Stack;
            entity = {};
            report = 24;
            entity['spacing'] = report;
            oscar = romeo;
            if(!romeo) { _fun122451_ip = 277; continue _fun122451 }
 162:
            yankee = _closure1_slot6;
            output = _closure1_slot0;
            echo = _closure1_slot2;
            report = 12;
            report = echo[report];
            report = output.bind(tango)(report);
            golf = report.TableRowGroup;
            report = {};
            result = _closure1_slot5;
            backup = 13;
            foxtrot = echo[backup];
            foxtrot = output.bind(tango)(foxtrot);
            update = foxtrot.SoundboardButton;
            foxtrot = {};
            foxtrot['channel'] = control;
            update = result.bind(tango)(update, foxtrot);
            foxtrot = new Array(2);
            foxtrot[0] = update;
            backup = echo[backup];
            backup = output.bind(tango)(backup);
            output = backup.ScreenshareButton;
            backup = {};
            backup['channel'] = control;
            backup = result.bind(tango)(output, backup);
            foxtrot[1] = backup;
            report['children'] = foxtrot;
            oscar = yankee.bind(tango)(golf, report);
 277:
            report = new Array(7);
            report[0] = oscar;
            source = _closure1_slot5;
            update = _closure1_slot0;
            echo = _closure1_slot2;
            backup = 13;
            oscar = echo[backup];
            oscar = update.bind(tango)(oscar);
            golf = oscar.GameConsoles;
            oscar = {};
            oscar['channel'] = control;
            oscar['connected'] = romeo;
            oscar = source.bind(tango)(golf, oscar);
            report[1] = oscar;
            oscar = echo[backup];
            oscar = update.bind(tango)(oscar);
            golf = oscar.StreamVolumeItem;
            oscar = {};
            oscar = source.bind(tango)(golf, oscar);
            report[2] = oscar;
            output = _closure1_slot6;
            golf = 12;
            oscar = echo[golf];
            oscar = update.bind(tango)(oscar);
            yankee = oscar.TableRowGroup;
            oscar = {};
            foxtrot = 14;
            result = echo[foxtrot];
            result = update.bind(tango)(result);
            sequence = result.intl;
            vacuum = sequence.string;
            result = echo[foxtrot];
            result = update.bind(tango)(result);
            result = result.t;
            result = result.NiTd0d;
            result = vacuum.bind(sequence)(result);
            oscar['title'] = result;
            result = echo[backup];
            result = update.bind(tango)(result);
            vacuum = result.DeafenSwitch;
            result = {};
            vacuum = source.bind(tango)(vacuum, result);
            result = new Array(5);
            result[0] = vacuum;
            vacuum = echo[backup];
            vacuum = update.bind(tango)(vacuum);
            sequence = vacuum.AudioRouteButton;
            vacuum = {};
            vacuum['channel'] = control;
            vacuum['connected'] = romeo;
            vacuum = source.bind(tango)(sequence, vacuum);
            result[1] = vacuum;
            vacuum = echo[backup];
            vacuum = update.bind(tango)(vacuum);
            sequence = vacuum.HideNonVideoParticipants;
            vacuum = {};
            vacuum['channelId'] = sizing;
            vacuum = source.bind(tango)(sequence, vacuum);
            result[2] = vacuum;
            echo = echo[backup];
            echo = update.bind(tango)(echo);
            update = echo.HideSelfVideo;
            echo = {};
            echo = source.bind(tango)(update, echo);
            result[3] = echo;
            echo = romeo;
            if(!echo) { _fun122451_ip = 613; continue _fun122451 }
 569:
            vacuum = _closure1_slot5;
            source = _closure1_slot0;
            update = _closure1_slot2;
            update = update[backup];
            update = source.bind(tango)(update);
            source = update.InviteButton;
            update = {};
            update['channel'] = control;
            update['connected'] = romeo;
            echo = vacuum.bind(tango)(source, update);
 613:
            result[4] = echo;
            oscar['children'] = result;
            oscar = output.bind(tango)(yankee, oscar);
            report[3] = oscar;
            source = _closure1_slot5;
            update = _closure1_slot0;
            echo = _closure1_slot2;
            oscar = 15;
            oscar = echo[oscar];
            oscar = update.bind(tango)(oscar);
            yankee = oscar.VoiceProcessingOptions;
            oscar = {};
            oscar = source.bind(tango)(yankee, oscar);
            report[4] = oscar;
            output = _closure1_slot6;
            oscar = echo[golf];
            oscar = update.bind(tango)(oscar);
            yankee = oscar.TableRowGroup;
            oscar = {};
            result = echo[backup];
            result = update.bind(tango)(result);
            vacuum = result.VoiceSettingsButton;
            result = {};
            sequence = control.guild_id;
            result['guildId'] = sequence;
            vacuum = source.bind(tango)(vacuum, result);
            result = new Array(2);
            result[0] = vacuum;
            echo = echo[backup];
            echo = update.bind(tango)(echo);
            update = echo.ReportStreamIssueButton;
            echo = {};
            echo['channel'] = control;
            echo = source.bind(tango)(update, echo);
            result[1] = echo;
            oscar['children'] = result;
            oscar = output.bind(tango)(yankee, oscar);
            report[5] = oscar;
            oscar = null;
            if(!romeo) { _fun122451_ip = 1013; continue _fun122451 }
 787:
            oscar = null;
            if(!options) { _fun122451_ip = 1013; continue _fun122451 }
 795:
            romeo = _closure1_slot0;
            options = _closure1_slot2;
            options = options[kilo];
            options = romeo.bind(tango)(options);
            options = options.EmbeddedActivityLaunchability;
            options = options.CAN_LAUNCH;
            oscar = null;
            if(!(verify === options)) { _fun122451_ip = 1013; continue _fun122451 }
 833:
            verify = _closure1_slot6;
            romeo = _closure1_slot0;
            yankee = _closure1_slot2;
            golf = yankee[golf];
            golf = romeo.bind(tango)(golf);
            options = golf.TableRowGroup;
            golf = {};
            kilo = yankee[foxtrot];
            kilo = romeo.bind(tango)(kilo);
            output = kilo.intl;
            kilo = output.string;
            foxtrot = yankee[foxtrot];
            foxtrot = romeo.bind(tango)(foxtrot);
            foxtrot = foxtrot.t;
            foxtrot = foxtrot.J6rqBw;
            foxtrot = kilo.bind(output)(foxtrot);
            golf['title'] = foxtrot;
            foxtrot = _closure1_slot5;
            offset = yankee[backup];
            offset = romeo.bind(tango)(offset);
            kilo = offset.LeaveActivitiesButton;
            offset = {};
            offset['channelId'] = sizing;
            kilo = foxtrot.bind(tango)(kilo, offset);
            offset = new Array(3);
            offset[0] = kilo;
            kilo = yankee[backup];
            kilo = romeo.bind(tango)(kilo);
            sizing = kilo.ShareActivityLogsButton;
            kilo = {};
            kilo = foxtrot.bind(tango)(sizing, kilo);
            offset[1] = kilo;
            yankee = yankee[backup];
            yankee = romeo.bind(tango)(yankee);
            romeo = yankee.ToggleShowActivitiesDebugOverlay;
            yankee = {};
            yankee = foxtrot.bind(tango)(romeo, yankee);
            offset[2] = yankee;
            golf['children'] = offset;
            oscar = verify.bind(tango)(options, golf);
 1013:
            report[6] = oscar;
            entity['children'] = report;
            entity = zulu.bind(tango)(mike, entity);
            return entity;
        }
    };
    tango = verify.bind(golf)(tango);
    var _closure1_slot10 = tango;
    tango = {};
    tango['top'] = options;
    var _closure1_slot11 = tango;
    tango = {};
    options = 'function VoicePanelVoiceControlsTsx1({offset:offset}){const{isScrolled}=this.__closure;isScrolled.set(offset>0);}';
    tango['code'] = options;
    var _closure1_slot12 = tango;
    tango = golf.memo;
    mike = function(argFoo) { // Original name: VoicePanelVoiceControls
        _fun122452: for(var _fun122452_ip = 0; ; ) switch(_fun122452_ip) {
 0:
            mike = argFoo;
            mike = mike.isVisible;
            var _closure2_slot0 = mike;
            report = _closure1_slot3;
            oscar = report.useContext;
            golf = _closure1_slot1;
            romeo = _closure1_slot2;
            zulu = 7;
            zulu = romeo[zulu];
            tango = undefined;
            zulu = golf.bind(tango)(zulu);
            zulu = oscar.bind(report)(zulu);
            zulu = zulu.channelId;
            var _closure2_slot1 = zulu;
            golf = _closure1_slot0;
            zulu = 16;
            zulu = romeo[zulu];
            verify = golf.bind(tango)(zulu);
            options = verify.useStateFromStores;
            zulu = _closure1_slot4;
            oscar = new Array(1);
            oscar[0] = zulu;
            zulu = function() {
                zulu = _closure1_slot4;
                mike = zulu.getChannel;
                entity = _closure2_slot1;
                entity = mike.bind(zulu)(entity);
                return entity;
            };
            result = options.bind(verify)(oscar, zulu);
            zulu = 6;
            zulu = romeo[zulu];
            options = golf.bind(tango)(zulu);
            oscar = options.useSharedValue;
            zulu = false;
            yankee = oscar.bind(options)(zulu);
            var _closure2_slot2 = yankee;
            options = report.useCallback;
            oscar = function(argFoo) { // Original name: o
                entity = argFoo;
                tango = entity.offset;
                zulu = _closure2_slot2;
                mike = zulu.set;
                entity = 0;
                entity = tango > entity;
                entity = mike.bind(zulu)(entity);
                entity = undefined;
                return entity;
            };
            zulu = {};
            zulu['isScrolled'] = yankee;
            oscar['__closure'] = zulu;
            zulu = 16758626276795.0;
            oscar['__workletHash'] = zulu;
            zulu = _closure1_slot12;
            oscar['__initData'] = zulu;
            zulu = new Array(1);
            zulu[0] = yankee;
            options = options.bind(report)(oscar, zulu);
            oscar = report.useContext;
            zulu = 17;
            zulu = romeo[zulu];
            zulu = golf.bind(tango)(zulu);
            zulu = zulu.ControlsGestureScrollLock;
            oscar = oscar.bind(report)(zulu);
            zulu = {};
            zulu['onScrollHandlerWorkletized'] = options;
            zulu = oscar.bind(tango)(zulu);
            backup = zulu.onScroll;
            options = zulu.gestureRef;
            var _closure2_slot3 = options;
            kilo = zulu.scrollerRef;
            var _closure2_slot4 = kilo;
            foxtrot = zulu.animatedProps;
            zulu = 18;
            zulu = romeo[zulu];
            oscar = golf.bind(tango)(zulu);
            zulu = oscar.useIsScreenReaderEnabled;
            oscar = zulu.bind(oscar)();
            verify = report.useEffect;
            zulu = new Array(2);
            zulu[0] = mike;
            zulu[1] = kilo;
            mike = function() {
                _fun122455: for(var _fun122455_ip = 0; ; ) switch(_fun122455_ip) {
 0:
                    mike = _closure2_slot0;
                    if(!mike) { _fun122455_ip = 20; continue _fun122455 }
 10:
                    tango = _closure2_slot4;
                    zulu = null;
                    mike = zulu != tango;
 20:
                    if(!mike) { _fun122455_ip = 59; continue _fun122455 }
 23:
                    entity = _closure2_slot4;
                    zulu = entity.current;
                    entity = null;
                    if(!(entity != zulu)) { _fun122455_ip = 59; continue _fun122455 }
 38:
                    mike = zulu.scrollTo;
                    entity = {'x': 0, 'y': 0, 'animated': false};
                    entity = mike.bind(zulu)(entity);
 59:
                    entity = undefined;
                    return entity;
                }
            };
            mike = verify.bind(report)(mike, zulu);
            zulu = report.useMemo;
            mike = new Array(1);
            mike[0] = options;
            entity = function() {
                _fun122456: for(var _fun122456_ip = 0; ; ) switch(_fun122456_ip) {
 0:
                    zulu = _closure1_slot0;
                    mike = _closure1_slot2;
                    entity = 19;
                    mike = mike[entity];
                    entity = undefined;
                    entity = zulu.bind(entity)(mike);
                    mike = entity.Gesture;
                    entity = mike.Native;
                    tango = entity.bind(mike)();
                    report = _closure2_slot3;
                    zulu = null;
                    entity = tango;
                    if(!(zulu != report)) { _fun122456_ip = 72; continue _fun122456 }
 57:
                    zulu = tango.simultaneousWithExternalGesture;
                    mike = _closure2_slot3;
                    entity = zulu.bind(tango)(mike);
 72:
                    return entity;
                }
            };
            verify = zulu.bind(report)(entity, mike);
            zulu = _closure1_slot6;
            mike = _closure1_slot7;
            entity = {};
            options = _closure1_slot5;
            report = 19;
            report = romeo[report];
            report = golf.bind(tango)(report);
            golf = report.GestureDetector;
            report = {};
            report['gesture'] = verify;
            romeo = _closure1_slot9;
            verify = {};
            output = _closure1_slot8;
            if(oscar) { _fun122452_ip = 416; continue _fun122452 }
 408:
            sizing = output.scrollView;
            _fun122452_ip = 422; continue _fun122452;
 416:
            sizing = output.scrollViewScreenReader;
 422:
            verify['style'] = sizing;
            verify['ref'] = kilo;
            verify['onScroll'] = backup;
            verify['animatedProps'] = foxtrot;
            foxtrot = _closure1_slot13;
            verify['onMomentumScrollEnd'] = foxtrot;
            foxtrot = 8.333333333333334;
            verify['scrollEventThrottle'] = foxtrot;
            foxtrot = _closure1_slot11;
            verify['scrollIndicatorInsets'] = foxtrot;
            backup = !oscar;
            if(!backup) { _fun122452_ip = 525; continue _fun122452 }
 479:
            sizing = _closure1_slot5;
            kilo = _closure1_slot1;
            output = _closure1_slot2;
            foxtrot = 20;
            foxtrot = output[foxtrot];
            kilo = kilo.bind(tango)(foxtrot);
            foxtrot = {};
            output = _closure1_slot8;
            output = output.blurRegion;
            foxtrot['style'] = output;
            backup = sizing.bind(tango)(kilo, foxtrot);
 525:
            foxtrot = new Array(3);
            foxtrot[0] = backup;
            backup = null;
            backup = backup != result;
            if(!backup) { _fun122452_ip = 562; continue _fun122452 }
 542:
            output = _closure1_slot5;
            sizing = _closure1_slot10;
            kilo = {};
            kilo['channel'] = result;
            backup = output.bind(tango)(sizing, kilo);
 562:
            foxtrot[1] = backup;
            sizing = _closure1_slot5;
            kilo = _closure1_slot0;
            output = _closure1_slot2;
            backup = 21;
            backup = output[backup];
            backup = kilo.bind(tango)(backup);
            kilo = backup.SafeAreaPaddingView;
            backup = {};
            output = true;
            backup['bottom'] = output;
            backup = sizing.bind(tango)(kilo, backup);
            foxtrot[2] = backup;
            verify['children'] = foxtrot;
            verify = zulu.bind(tango)(romeo, verify);
            report['children'] = verify;
            golf = options.bind(tango)(golf, report);
            report = new Array(2);
            report[0] = golf;
            oscar = !oscar;
            if(!oscar) { _fun122452_ip = 699; continue _fun122452 }
 648:
            verify = _closure1_slot5;
            options = _closure1_slot1;
            romeo = _closure1_slot2;
            golf = 22;
            golf = romeo[golf];
            options = options.bind(tango)(golf);
            golf = {};
            golf['shown'] = yankee;
            offset = _closure1_slot8;
            offset = offset.blurRegion;
            golf['style'] = offset;
            oscar = verify.bind(tango)(options, golf);
 699:
            report[1] = oscar;
            entity['children'] = report;
            entity = zulu.bind(tango)(mike, entity);
            return entity;
        }
    };
    mike = tango.bind(golf)(mike);
    tango = 23;
    tango = oscar[tango];
    oscar = report.bind(entity)(tango);
    report = oscar.fileFinishedImporting;
    tango = 'modules/voice_panel/native/controls/VoicePanelVoiceControls.tsx';
    tango = report.bind(oscar)(tango);
    zulu['default'] = mike;
    return entity;
})();