// app/modules/voice_panel/native/alerts/VoicePanelMaxCapacityAlert.tsx
export default (function(global, require, metroImportDefault, metroImportAll, moduleObject, exports, dependencyMap) {
    var5 = require;
    var7 = metroImportDefault;
    var3 = exports;
    var6 = dependencyMap;
    var _closure1_slot0 = var5;
    var _closure1_slot1 = var7;
    var _closure1_slot2 = var6;
    var1 = global;
    var9 = var1.Object;
    var8 = var9.defineProperty;
    var4 = {};
    var1 = true;
    var4['value'] = var1;
    var1 = '__esModule';
    var1 = var8.bind(var9)(var3, var1, var4);
    var1 = 0;
    var8 = var6[var1];
    var4 = metroImportAll;
    var1 = undefined;
    var4 = var4.bind(var1)(var8);
    var4 = 1;
    var4 = var6[var4];
    var4 = var7.bind(var1)(var4);
    var _closure1_slot3 = var4;
    var4 = 2;
    var4 = var6[var4];
    var4 = var5.bind(var1)(var4);
    var4 = var4.jsx;
    var _closure1_slot4 = var4;
    var4 = 8;
    var4 = var6[var4];
    var6 = var5.bind(var1)(var4);
    var5 = var6.fileFinishedImporting;
    var4 = 'modules/voice_panel/native/alerts/VoicePanelMaxCapacityAlert.tsx';
    var4 = var5.bind(var6)(var4);
    var2 = function VoicePanelMaxCapacityAlert(arg1) {
        var2 = arg1;
        var8 = var2.channelId;
        var _closure2_slot0 = var8;
        var11 = _closure1_slot0;
        var12 = _closure1_slot2;
        var2 = 3;
        var2 = var12[var2];
        var4 = undefined;
        var7 = var11.bind(var4)(var2);
        var5 = var7.useStateFromStores;
        var2 = _closure1_slot3;
        var3 = new Array(1);
        var3[0] = var2;
        var2 = new Array(1);
        var2[0] = var8;
        var1 = function() {
            _fun0001: for(var _fun0001_ip = 0; ; ) switch(_fun0001_ip) {
case 0:
                var3 = _closure1_slot3;
                var2 = var3.getChannel;
                var1 = _closure2_slot0;
                var3 = var2.bind(var3)(var1);
                var1 = null;
                var4 = var1 == var3;
                var2 = undefined;
                if(var4) { _fun0001_ip = 2; continue _fun0001 }
case 3:
                var2 = var3.userLimit;
case 2:
                var3 = var1 != var2;
                var1 = 0;
                if(!var3) { _fun0001_ip = 4; continue _fun0001 }
case 5:
                var1 = var2;
case 4:
                return var1;
            }
        };
        var14 = var5.bind(var7)(var3, var1, var2);
        var5 = 4;
        var1 = var12[var5];
        var2 = var11.bind(var4)(var1);
        var1 = var2.useDismissModalCallback;
        var7 = var1.bind(var2)();
        var3 = _closure1_slot4;
        var1 = 5;
        var1 = var12[var1];
        var1 = var11.bind(var4)(var1);
        var2 = var1.AlertModal;
        var1 = {};
        var8 = _closure1_slot1;
        var6 = 6;
        var6 = var12[var6];
        var8 = var8.bind(var4)(var6);
        var6 = {};
        var6 = var3.bind(var4)(var8, var6);
        var1['header'] = var6;
        var8 = 7;
        var6 = var12[var8];
        var6 = var11.bind(var4)(var6);
        var10 = var6.intl;
        var9 = var10.string;
        var6 = var12[var8];
        var6 = var11.bind(var4)(var6);
        var6 = var6.t;
        var6 = var6.hHbsQk;
        var6 = var9.bind(var10)(var6);
        var1['title'] = var6;
        var6 = var12[var8];
        var6 = var11.bind(var4)(var6);
        var13 = var6.intl;
        var10 = var13.formatToPlainString;
        var6 = var12[var8];
        var6 = var11.bind(var4)(var6);
        var6 = var6.t;
        var9 = var6.387SQE;
        var6 = {};
        var6['count'] = var14;
        var6 = var10.bind(var13)(var9, var6);
        var1['content'] = var6;
        var5 = var12[var5];
        var5 = var11.bind(var4)(var5);
        var6 = var5.AlertActionButton;
        var5 = {};
        var9 = 'secondary';
        var5['variant'] = var9;
        var9 = var12[var8];
        var9 = var11.bind(var4)(var9);
        var10 = var9.intl;
        var9 = var10.string;
        var8 = var12[var8];
        var8 = var11.bind(var4)(var8);
        var8 = var8.t;
        var8 = var8.NX+WJC;
        var8 = var9.bind(var10)(var8);
        var5['text'] = var8;
        var5['onPress'] = var7;
        var5 = var3.bind(var4)(var6, var5);
        var1['actions'] = var5;
        var1 = var3.bind(var4)(var2, var1);
        return var1;
    };
    var3['default'] = var2;
    var2 = 'voice-panel-max-capacity';
    var3['VOICE_PANEL_MAX_CAPACITY_KEY'] = var2;
    return var1;
})();