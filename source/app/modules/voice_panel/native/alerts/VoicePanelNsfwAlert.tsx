// app/modules/voice_panel/native/alerts/VoicePanelNsfwAlert.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    report = argBar;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    entity = argBaz;
    var _closure1_slot1 = entity;
    var _closure1_slot2 = oscard;
    entity = global;
    option = entity.Object;
    golfie = option.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(option)(zuuluu, entity, tangon);
    entity = 0;
    golfie = oscard[entity];
    tangon = argCor;
    entity = undefined;
    tangon = tangon.bind(entity)(golfie);
    tangon = 1;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.Image;
    var _closure1_slot3 = tangon;
    tangon = 2;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    golfie = tangon.jsx;
    var _closure1_slot4 = golfie;
    tangon = tangon.jsxs;
    var _closure1_slot5 = tangon;
    tangon = 3;
    tangon = oscard[tangon];
    option = report.bind(entity)(tangon);
    golfie = option.createStyles;
    tangon = {};
    verify = {'width': 150, 'height': 100, 'resizeMode': 'contain', 'alignSelf': 'center'};
    tangon['emptyImage'] = verify;
    tangon = golfie.bind(option)(tangon);
    var _closure1_slot6 = tangon;
    tangon = 10;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/voice_panel/native/alerts/VoicePanelNsfwAlert.tsx';
    tangon = report.bind(oscard)(tangon);
    michal = function(argFoo) { // Original name: VoicePanelNsfwAlert
        entity = argFoo;
        michal = entity.guildId;
        var _closure2_slot0 = michal;
        entity = entity.channelId;
        var _closure2_slot1 = entity;
        entity = _closure1_slot6;
        tangon = undefined;
        foxtra = entity.bind(tangon)();
        backup = _closure1_slot0;
        kiloes = _closure1_slot2;
        entity = 4;
        entity = kiloes[entity];
        michal = backup.bind(tangon)(entity);
        entity = michal.useNsfwSource;
        yankee = entity.bind(michal)();
        report = 5;
        entity = kiloes[report];
        michal = backup.bind(tangon)(entity);
        entity = michal.useDismissModalCallback;
        entity = entity.bind(michal)();
        var _closure2_slot2 = entity;
        zuuluu = _closure1_slot4;
        offset = 6;
        entity = kiloes[offset];
        entity = backup.bind(tangon)(entity);
        michal = entity.AlertModal;
        entity = {};
        verify = 7;
        golfie = kiloes[verify];
        golfie = backup.bind(tangon)(golfie);
        sizing = golfie.intl;
        option = sizing.string;
        golfie = kiloes[verify];
        golfie = backup.bind(tangon)(golfie);
        golfie = golfie.t;
        golfie = golfie.ZmwvDQ;
        golfie = option.bind(sizing)(golfie);
        entity['title'] = golfie;
        option = _closure1_slot3;
        golfie = {};
        foxtra = foxtra.emptyImage;
        golfie['style'] = foxtra;
        golfie['source'] = yankee;
        golfie = zuuluu.bind(tangon)(option, golfie);
        entity['header'] = golfie;
        golfie = kiloes[verify];
        golfie = backup.bind(tangon)(golfie);
        yankee = golfie.intl;
        option = yankee.string;
        golfie = kiloes[verify];
        golfie = backup.bind(tangon)(golfie);
        golfie = golfie.t;
        golfie = golfie.E4Cd5O;
        golfie = option.bind(yankee)(golfie);
        entity['content'] = golfie;
        golfie = _closure1_slot5;
        report = kiloes[report];
        report = backup.bind(tangon)(report);
        oscard = report.AlertActions;
        report = {};
        option = kiloes[offset];
        option = backup.bind(tangon)(option);
        foxtra = option.AlertActionButton;
        yankee = {};
        option = 'destructive';
        yankee['variant'] = option;
        option = function() { // Original name: onPress
            tangon = _closure1_slot1;
            report = _closure1_slot2;
            entity = 8;
            michal = report[entity];
            entity = undefined;
            golfie = tangon.bind(entity)(michal);
            oscard = golfie.nsfwAgree;
            zuuluu = _closure2_slot0;
            zuuluu = oscard.bind(golfie)(zuuluu);
            zuuluu = 9;
            zuuluu = report[zuuluu];
            report = tangon.bind(entity)(zuuluu);
            tangon = report.selectVoiceChannel;
            zuuluu = _closure2_slot1;
            zuuluu = tangon.bind(report)(zuuluu);
            michal = _closure2_slot2;
            michal = michal.bind(entity)();
            return entity;
        };
        yankee['onPress'] = option;
        option = kiloes[verify];
        option = backup.bind(tangon)(option);
        output = option.intl;
        sizing = output.string;
        option = kiloes[verify];
        option = backup.bind(tangon)(option);
        option = option.t;
        option = option.wVq7ur;
        option = sizing.bind(output)(option);
        yankee['text'] = option;
        option = 'confirm';
        yankee = zuuluu.bind(tangon)(foxtra, yankee, option);
        option = new Array(2);
        option[0] = yankee;
        offset = kiloes[offset];
        offset = backup.bind(tangon)(offset);
        yankee = offset.AlertActionButton;
        offset = {};
        foxtra = 'secondary';
        offset['variant'] = foxtra;
        romeon = function() { // Original name: onPress
            zuuluu = _closure1_slot1;
            michal = _closure1_slot2;
            entity = 8;
            michal = michal[entity];
            entity = undefined;
            report = zuuluu.bind(entity)(michal);
            tangon = report.nsfwReturnToSafety;
            zuuluu = _closure2_slot0;
            zuuluu = tangon.bind(report)(zuuluu);
            michal = _closure2_slot2;
            michal = michal.bind(entity)();
            return entity;
        };
        offset['onPress'] = romeon;
        romeon = kiloes[verify];
        romeon = backup.bind(tangon)(romeon);
        foxtra = romeon.intl;
        romeon = foxtra.string;
        verify = kiloes[verify];
        verify = backup.bind(tangon)(verify);
        verify = verify.t;
        verify = verify.hg1uxs;
        verify = romeon.bind(foxtra)(verify);
        offset['text'] = verify;
        verify = 'add-profile-picture';
        verify = zuuluu.bind(tangon)(yankee, offset, verify);
        option[1] = verify;
        report['children'] = option;
        report = golfie.bind(tangon)(oscard, report);
        entity['actions'] = report;
        entity = zuuluu.bind(tangon)(michal, entity);
        return entity;
    };
    zuuluu['default'] = michal;
    michal = 'voice-panel-nsfw';
    zuuluu['VOICE_PANEL_NSFW_KEY'] = michal;
    return entity;
})();