// app/modules/voice_panel/native/alerts/VoicePanelNsfwAlert.tsx
export default (function(argFoo, argBar, argBaz, argCorge, _, argFred, argPlugh) {
    report = argBar;
    zulu = argFred;
    oscar = argPlugh;
    var _closure1_slot0 = report;
    entity = argBaz;
    var _closure1_slot1 = entity;
    var _closure1_slot2 = oscar;
    entity = global;
    options = entity.Object;
    golf = options.defineProperty;
    tango = {};
    entity = true;
    tango['value'] = entity;
    entity = '__esModule';
    entity = golf.bind(options)(zulu, entity, tango);
    entity = 0;
    golf = oscar[entity];
    tango = argCorge;
    entity = undefined;
    tango = tango.bind(entity)(golf);
    tango = 1;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.Image;
    var _closure1_slot3 = tango;
    tango = 2;
    golf = oscar[tango];
    golf = report.bind(entity)(golf);
    golf = golf.jsx;
    var _closure1_slot4 = golf;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.jsxs;
    var _closure1_slot5 = tango;
    tango = 3;
    tango = oscar[tango];
    options = report.bind(entity)(tango);
    golf = options.createStyles;
    tango = {};
    verify = {'width': 150, 'height': 100, 'resizeMode': 'contain', 'alignSelf': 'center'};
    tango['emptyImage'] = verify;
    tango = golf.bind(options)(tango);
    var _closure1_slot6 = tango;
    tango = 10;
    tango = oscar[tango];
    oscar = report.bind(entity)(tango);
    report = oscar.fileFinishedImporting;
    tango = 'modules/voice_panel/native/alerts/VoicePanelNsfwAlert.tsx';
    tango = report.bind(oscar)(tango);
    mike = function(argFoo) { // Original name: VoicePanelNsfwAlert
        entity = argFoo;
        mike = entity.guildId;
        var _closure2_slot0 = mike;
        entity = entity.channelId;
        var _closure2_slot1 = entity;
        entity = _closure1_slot6;
        tango = undefined;
        foxtrot = entity.bind(tango)();
        backup = _closure1_slot0;
        kilo = _closure1_slot2;
        entity = 4;
        entity = kilo[entity];
        mike = backup.bind(tango)(entity);
        entity = mike.useNsfwSource;
        yankee = entity.bind(mike)();
        report = 5;
        entity = kilo[report];
        mike = backup.bind(tango)(entity);
        entity = mike.useDismissModalCallback;
        entity = entity.bind(mike)();
        var _closure2_slot2 = entity;
        zulu = _closure1_slot4;
        offset = 6;
        entity = kilo[offset];
        entity = backup.bind(tango)(entity);
        mike = entity.AlertModal;
        entity = {};
        verify = 7;
        golf = kilo[verify];
        golf = backup.bind(tango)(golf);
        sizing = golf.intl;
        options = sizing.string;
        golf = kilo[verify];
        golf = backup.bind(tango)(golf);
        golf = golf.t;
        golf = golf.ZmwvDQ;
        golf = options.bind(sizing)(golf);
        entity['title'] = golf;
        options = _closure1_slot3;
        golf = {};
        foxtrot = foxtrot.emptyImage;
        golf['style'] = foxtrot;
        golf['source'] = yankee;
        golf = zulu.bind(tango)(options, golf);
        entity['header'] = golf;
        golf = kilo[verify];
        golf = backup.bind(tango)(golf);
        yankee = golf.intl;
        options = yankee.string;
        golf = kilo[verify];
        golf = backup.bind(tango)(golf);
        golf = golf.t;
        golf = golf.E4Cd5O;
        golf = options.bind(yankee)(golf);
        entity['content'] = golf;
        golf = _closure1_slot5;
        report = kilo[report];
        report = backup.bind(tango)(report);
        oscar = report.AlertActions;
        report = {};
        options = kilo[offset];
        options = backup.bind(tango)(options);
        foxtrot = options.AlertActionButton;
        yankee = {};
        options = 'destructive';
        yankee['variant'] = options;
        options = function() { // Original name: onPress
            tango = _closure1_slot1;
            report = _closure1_slot2;
            entity = 8;
            mike = report[entity];
            entity = undefined;
            golf = tango.bind(entity)(mike);
            oscar = golf.nsfwAgree;
            zulu = _closure2_slot0;
            zulu = oscar.bind(golf)(zulu);
            zulu = 9;
            zulu = report[zulu];
            report = tango.bind(entity)(zulu);
            tango = report.selectVoiceChannel;
            zulu = _closure2_slot1;
            zulu = tango.bind(report)(zulu);
            mike = _closure2_slot2;
            mike = mike.bind(entity)();
            return entity;
        };
        yankee['onPress'] = options;
        options = kilo[verify];
        options = backup.bind(tango)(options);
        output = options.intl;
        sizing = output.string;
        options = kilo[verify];
        options = backup.bind(tango)(options);
        options = options.t;
        options = options.wVq7ur;
        options = sizing.bind(output)(options);
        yankee['text'] = options;
        options = 'confirm';
        yankee = zulu.bind(tango)(foxtrot, yankee, options);
        options = new Array(2);
        options[0] = yankee;
        offset = kilo[offset];
        offset = backup.bind(tango)(offset);
        yankee = offset.AlertActionButton;
        offset = {};
        foxtrot = 'secondary';
        offset['variant'] = foxtrot;
        romeo = function() { // Original name: onPress
            zulu = _closure1_slot1;
            mike = _closure1_slot2;
            entity = 8;
            mike = mike[entity];
            entity = undefined;
            report = zulu.bind(entity)(mike);
            tango = report.nsfwReturnToSafety;
            zulu = _closure2_slot0;
            zulu = tango.bind(report)(zulu);
            mike = _closure2_slot2;
            mike = mike.bind(entity)();
            return entity;
        };
        offset['onPress'] = romeo;
        romeo = kilo[verify];
        romeo = backup.bind(tango)(romeo);
        foxtrot = romeo.intl;
        romeo = foxtrot.string;
        verify = kilo[verify];
        verify = backup.bind(tango)(verify);
        verify = verify.t;
        verify = verify.hg1uxs;
        verify = romeo.bind(foxtrot)(verify);
        offset['text'] = verify;
        verify = 'add-profile-picture';
        verify = zulu.bind(tango)(yankee, offset, verify);
        options[1] = verify;
        report['children'] = options;
        report = golf.bind(tango)(oscar, report);
        entity['actions'] = report;
        entity = zulu.bind(tango)(mike, entity);
        return entity;
    };
    zulu['default'] = mike;
    mike = 'voice-panel-nsfw';
    zulu['VOICE_PANEL_NSFW_KEY'] = mike;
    return entity;
})();