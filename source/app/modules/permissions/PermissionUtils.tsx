// app/modules/permissions/PermissionUtils.tsx
export default (function(argFoo, argBar, argBaz, _, __, argFre, argPlu) {
    oscard = argBar;
    zuuluu = argFre;
    golfie = argPlu;
    var _closure1_slot0 = oscard;
    var _closure1_slot1 = golfie;
    entity = function(argFoo) { // Original name: filterExperimental
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            entity = argFoo;
            michal = arguments[1];
            zuuluu = undefined;
            if(!(michal === zuuluu)) { _fun00002_ip = 14; continue _fun00001 }
 12:
            michal = false;
 14:
            if(michal) { _fun00002_ip = 48; continue _fun00001 }
 17:
            tangon = entity.permissions;
            zuuluu = tangon.filter;
            michal = function(argFoo) {
                entity = argFoo;
                entity = entity.isExperimental;
                entity = !entity;
                return entity;
            };
            michal = zuuluu.bind(tangon)(michal);
            entity['permissions'] = michal;
 48:
            return entity;
        }
    };
    var _closure1_slot3 = entity;
    entity = function(argFoo, argBar) { // Original name: getPermissionsSpecList
        zuuluu = argFoo;
        michal = argBar;
        var _closure2_slot0 = michal;
        michal = zuuluu.map;
        entity = function(argFoo) {
            zuuluu = argFoo;
            michal = _closure2_slot0;
            entity = zuuluu.toString;
            entity = entity.bind(zuuluu)();
            entity = michal[entity];
            return entity;
        };
        entity = michal.bind(zuuluu)(entity);
        return entity;
    };
    var _closure1_slot4 = entity;
    tangon = function(argFoo) { // Original name: getGuildPermissionSpec
        _fun00003: for(var _fun00004_ip = 0; ; ) switch(_fun00004_ip) {
 0:
            report = argFoo;
            entity = {};
            michal = _closure1_slot2;
            zuuluu = michal.VIEW_CHANNEL;
            michal = zuuluu.toString;
            zuuluu = michal.bind(zuuluu)();
            michal = {};
            verify = _closure1_slot0;
            oscard = _closure1_slot1;
            option = 1;
            offset = oscard[option];
            golfie = undefined;
            offset = verify.bind(golfie)(offset);
            romeon = offset.intl;
            yankee = romeon.string;
            offset = oscard[option];
            offset = verify.bind(golfie)(offset);
            offset = offset.t;
            offset = offset.uV83ys;
            offset = yankee.bind(romeon)(offset);
            michal['title'] = offset;
            offset = oscard[option];
            offset = verify.bind(golfie)(offset);
            offset = offset.t;
            offset = offset.ybTHLi;
            michal['description'] = offset;
            offset = _closure1_slot2;
            offset = offset.VIEW_CHANNEL;
            michal['flag'] = offset;
            entity[zuuluu] = michal;
            michal = _closure1_slot2;
            zuuluu = michal.MANAGE_CHANNELS;
            michal = zuuluu.toString;
            zuuluu = michal.bind(zuuluu)();
            michal = {};
            offset = oscard[option];
            offset = verify.bind(golfie)(offset);
            romeon = offset.intl;
            yankee = romeon.string;
            offset = oscard[option];
            offset = verify.bind(golfie)(offset);
            offset = offset.t;
            offset = offset.9qLtWl;
            offset = yankee.bind(romeon)(offset);
            michal['title'] = offset;
            offset = oscard[option];
            offset = verify.bind(golfie)(offset);
            offset = offset.t;
            offset = offset.qfJnur;
            michal['description'] = offset;
            offset = _closure1_slot2;
            offset = offset.MANAGE_CHANNELS;
            michal['flag'] = offset;
            entity[zuuluu] = michal;
            michal = _closure1_slot2;
            zuuluu = michal.MANAGE_ROLES;
            michal = zuuluu.toString;
            zuuluu = michal.bind(zuuluu)();
            michal = {};
            offset = oscard[option];
            offset = verify.bind(golfie)(offset);
            romeon = offset.intl;
            yankee = romeon.string;
            offset = oscard[option];
            offset = verify.bind(golfie)(offset);
            offset = offset.t;
            offset = offset.C8d+oK;
            offset = yankee.bind(romeon)(offset);
            michal['title'] = offset;
            offset = oscard[option];
            offset = verify.bind(golfie)(offset);
            offset = offset.t;
            offset = offset.buo9u7;
            michal['description'] = offset;
            offset = _closure1_slot2;
            offset = offset.MANAGE_ROLES;
            michal['flag'] = offset;
            entity[zuuluu] = michal;
            michal = _closure1_slot2;
            zuuluu = michal.MANAGE_GUILD_EXPRESSIONS;
            michal = zuuluu.toString;
            zuuluu = michal.bind(zuuluu)();
            michal = {};
            offset = oscard[option];
            offset = verify.bind(golfie)(offset);
            romeon = offset.intl;
            yankee = romeon.string;
            offset = oscard[option];
            offset = verify.bind(golfie)(offset);
            offset = offset.t;
            offset = offset.bbuXIi;
            offset = yankee.bind(romeon)(offset);
            michal['title'] = offset;
            offset = oscard[option];
            offset = verify.bind(golfie)(offset);
            offset = offset.t;
            offset = offset.4vb3//;
            michal['description'] = offset;
            offset = _closure1_slot2;
            offset = offset.MANAGE_GUILD_EXPRESSIONS;
            michal['flag'] = offset;
            entity[zuuluu] = michal;
            michal = _closure1_slot2;
            zuuluu = michal.CREATE_GUILD_EXPRESSIONS;
            michal = zuuluu.toString;
            zuuluu = michal.bind(zuuluu)();
            michal = {};
            offset = oscard[option];
            offset = verify.bind(golfie)(offset);
            romeon = offset.intl;
            yankee = romeon.string;
            offset = oscard[option];
            offset = verify.bind(golfie)(offset);
            offset = offset.t;
            offset = offset.HarVuL;
            offset = yankee.bind(romeon)(offset);
            michal['title'] = offset;
            offset = oscard[option];
            offset = verify.bind(golfie)(offset);
            offset = offset.t;
            offset = offset.gkdHvL;
            michal['description'] = offset;
            offset = _closure1_slot2;
            offset = offset.CREATE_GUILD_EXPRESSIONS;
            michal['flag'] = offset;
            entity[zuuluu] = michal;
            michal = _closure1_slot2;
            zuuluu = michal.VIEW_AUDIT_LOG;
            michal = zuuluu.toString;
            zuuluu = michal.bind(zuuluu)();
            michal = {};
            offset = oscard[option];
            offset = verify.bind(golfie)(offset);
            romeon = offset.intl;
            yankee = romeon.string;
            offset = oscard[option];
            offset = verify.bind(golfie)(offset);
            offset = offset.t;
            offset = offset.fZgLpK;
            offset = yankee.bind(romeon)(offset);
            michal['title'] = offset;
            offset = oscard[option];
            offset = verify.bind(golfie)(offset);
            offset = offset.t;
            offset = offset.0hx75u;
            michal['description'] = offset;
            offset = _closure1_slot2;
            offset = offset.VIEW_AUDIT_LOG;
            michal['flag'] = offset;
            entity[zuuluu] = michal;
            michal = _closure1_slot2;
            zuuluu = michal.VIEW_GUILD_ANALYTICS;
            michal = zuuluu.toString;
            zuuluu = michal.bind(zuuluu)();
            michal = {};
            offset = oscard[option];
            offset = verify.bind(golfie)(offset);
            romeon = offset.intl;
            yankee = romeon.string;
            offset = oscard[option];
            offset = verify.bind(golfie)(offset);
            offset = offset.t;
            offset = offset.rQJBEx;
            offset = yankee.bind(romeon)(offset);
            michal['title'] = offset;
            offset = oscard[option];
            offset = verify.bind(golfie)(offset);
            offset = offset.t;
            offset = offset.whVKhY;
            michal['description'] = offset;
            offset = _closure1_slot2;
            offset = offset.VIEW_GUILD_ANALYTICS;
            michal['flag'] = offset;
            entity[zuuluu] = michal;
            michal = _closure1_slot2;
            zuuluu = michal.VIEW_CREATOR_MONETIZATION_ANALYTICS;
            michal = zuuluu.toString;
            zuuluu = michal.bind(zuuluu)();
            michal = {};
            offset = oscard[option];
            offset = verify.bind(golfie)(offset);
            romeon = offset.intl;
            yankee = romeon.string;
            offset = oscard[option];
            offset = verify.bind(golfie)(offset);
            offset = offset.t;
            offset = offset.0lTLTk;
            offset = yankee.bind(romeon)(offset);
            michal['title'] = offset;
            offset = oscard[option];
            offset = verify.bind(golfie)(offset);
            offset = offset.t;
            offset = offset.mut6NT;
            michal['description'] = offset;
            offset = _closure1_slot2;
            offset = offset.VIEW_CREATOR_MONETIZATION_ANALYTICS;
            michal['flag'] = offset;
            entity[zuuluu] = michal;
            michal = _closure1_slot2;
            zuuluu = michal.MANAGE_WEBHOOKS;
            michal = zuuluu.toString;
            zuuluu = michal.bind(zuuluu)();
            michal = {};
            offset = oscard[option];
            offset = verify.bind(golfie)(offset);
            romeon = offset.intl;
            yankee = romeon.string;
            offset = oscard[option];
            offset = verify.bind(golfie)(offset);
            offset = offset.t;
            offset = offset./ADKmJ;
            offset = yankee.bind(romeon)(offset);
            michal['title'] = offset;
            offset = oscard[option];
            offset = verify.bind(golfie)(offset);
            offset = offset.t;
            offset = offset.LczYqK;
            michal['description'] = offset;
            offset = _closure1_slot2;
            offset = offset.MANAGE_WEBHOOKS;
            michal['flag'] = offset;
            entity[zuuluu] = michal;
            michal = _closure1_slot2;
            zuuluu = michal.MANAGE_GUILD;
            michal = zuuluu.toString;
            zuuluu = michal.bind(zuuluu)();
            michal = {};
            offset = oscard[option];
            offset = verify.bind(golfie)(offset);
            romeon = offset.intl;
            yankee = romeon.string;
            offset = oscard[option];
            offset = verify.bind(golfie)(offset);
            offset = offset.t;
            offset = offset.QZRcfH;
            offset = yankee.bind(romeon)(offset);
            michal['title'] = offset;
            offset = oscard[option];
            offset = verify.bind(golfie)(offset);
            offset = offset.t;
            offset = offset.KoQe/P;
            michal['description'] = offset;
            offset = _closure1_slot2;
            offset = offset.MANAGE_GUILD;
            michal['flag'] = offset;
            entity[zuuluu] = michal;
            michal = _closure1_slot2;
            zuuluu = michal.CREATE_INSTANT_INVITE;
            michal = zuuluu.toString;
            zuuluu = michal.bind(zuuluu)();
            michal = {};
            offset = oscard[option];
            offset = verify.bind(golfie)(offset);
            romeon = offset.intl;
            yankee = romeon.string;
            offset = oscard[option];
            offset = verify.bind(golfie)(offset);
            offset = offset.t;
            offset = offset.zJrgTE;
            offset = yankee.bind(romeon)(offset);
            michal['title'] = offset;
            offset = oscard[option];
            offset = verify.bind(golfie)(offset);
            offset = offset.t;
            offset = offset.PCFOZW;
            michal['description'] = offset;
            offset = _closure1_slot2;
            offset = offset.CREATE_INSTANT_INVITE;
            michal['flag'] = offset;
            entity[zuuluu] = michal;
            michal = _closure1_slot2;
            zuuluu = michal.CHANGE_NICKNAME;
            michal = zuuluu.toString;
            zuuluu = michal.bind(zuuluu)();
            michal = {};
            offset = oscard[option];
            offset = verify.bind(golfie)(offset);
            romeon = offset.intl;
            yankee = romeon.string;
            offset = oscard[option];
            offset = verify.bind(golfie)(offset);
            offset = offset.t;
            offset = offset.dilOFx;
            offset = yankee.bind(romeon)(offset);
            michal['title'] = offset;
            offset = oscard[option];
            offset = verify.bind(golfie)(offset);
            offset = offset.t;
            offset = offset.b8B++v;
            michal['description'] = offset;
            offset = _closure1_slot2;
            offset = offset.CHANGE_NICKNAME;
            michal['flag'] = offset;
            entity[zuuluu] = michal;
            michal = _closure1_slot2;
            zuuluu = michal.MANAGE_NICKNAMES;
            michal = zuuluu.toString;
            zuuluu = michal.bind(zuuluu)();
            michal = {};
            offset = oscard[option];
            offset = verify.bind(golfie)(offset);
            romeon = offset.intl;
            yankee = romeon.string;
            offset = oscard[option];
            offset = verify.bind(golfie)(offset);
            offset = offset.t;
            offset = offset.t+Ct5+;
            offset = yankee.bind(romeon)(offset);
            michal['title'] = offset;
            oscard = oscard[option];
            oscard = verify.bind(golfie)(oscard);
            oscard = oscard.t;
            oscard = oscard.hTnlMT;
            michal['description'] = oscard;
            oscard = _closure1_slot2;
            oscard = oscard.MANAGE_NICKNAMES;
            michal['flag'] = oscard;
            entity[zuuluu] = michal;
            michal = _closure1_slot2;
            zuuluu = michal.KICK_MEMBERS;
            michal = zuuluu.toString;
            zuuluu = michal.bind(zuuluu)();
            michal = {};
            oscard = report.showMembershipManualApprovalPermissions;
            romeon = _closure1_slot0;
            verify = _closure1_slot1;
            offset = verify[option];
            offset = romeon.bind(golfie)(offset);
            yankee = offset.intl;
            offset = yankee.string;
            verify = verify[option];
            verify = romeon.bind(golfie)(verify);
            verify = verify.t;
            if(oscard) { _fun00004_ip = 1600; continue _fun00003 }
 1587:
            oscard = verify.pBNv6u;
            oscard = offset.bind(yankee)(oscard);
            _fun00004_ip = 1613; continue _fun00003;
 1600:
            verify = verify.9TxXwc;
            oscard = offset.bind(yankee)(verify);
 1613:
            michal['title'] = oscard;
            oscard = report.showMembershipManualApprovalPermissions;
            offset = _closure1_slot0;
            verify = _closure1_slot1;
            verify = verify[option];
            verify = offset.bind(golfie)(verify);
            verify = verify.t;
            if(oscard) { _fun00004_ip = 1658; continue _fun00003 }
 1648:
            oscard = verify.rwdPaG;
            _fun00004_ip = 1666; continue _fun00003;
 1658:
            oscard = verify.hGBAn5;
 1666:
            michal['description'] = oscard;
            oscard = _closure1_slot2;
            oscard = oscard.KICK_MEMBERS;
            michal['flag'] = oscard;
            entity[zuuluu] = michal;
            michal = _closure1_slot2;
            zuuluu = michal.BAN_MEMBERS;
            michal = zuuluu.toString;
            zuuluu = michal.bind(zuuluu)();
            michal = {};
            verify = _closure1_slot0;
            oscard = _closure1_slot1;
            offset = oscard[option];
            offset = verify.bind(golfie)(offset);
            romeon = offset.intl;
            yankee = romeon.string;
            offset = oscard[option];
            offset = verify.bind(golfie)(offset);
            offset = offset.t;
            offset = offset.oTBA7O;
            offset = yankee.bind(romeon)(offset);
            michal['title'] = offset;
            offset = oscard[option];
            offset = verify.bind(golfie)(offset);
            offset = offset.t;
            offset = offset.OqNY09;
            michal['description'] = offset;
            offset = _closure1_slot2;
            offset = offset.BAN_MEMBERS;
            michal['flag'] = offset;
            entity[zuuluu] = michal;
            michal = _closure1_slot2;
            zuuluu = michal.MODERATE_MEMBERS;
            michal = zuuluu.toString;
            zuuluu = michal.bind(zuuluu)();
            michal = {};
            offset = oscard[option];
            offset = verify.bind(golfie)(offset);
            romeon = offset.intl;
            yankee = romeon.string;
            offset = oscard[option];
            offset = verify.bind(golfie)(offset);
            offset = offset.t;
            offset = offset.+RL6p6;
            offset = yankee.bind(romeon)(offset);
            michal['title'] = offset;
            oscard = oscard[option];
            oscard = verify.bind(golfie)(oscard);
            oscard = oscard.t;
            oscard = oscard.T6bZsb;
            michal['description'] = oscard;
            oscard = _closure1_slot2;
            oscard = oscard.MODERATE_MEMBERS;
            michal['flag'] = oscard;
            entity[zuuluu] = michal;
            michal = _closure1_slot2;
            zuuluu = michal.SEND_MESSAGES;
            michal = zuuluu.toString;
            zuuluu = michal.bind(zuuluu)();
            michal = {};
            oscard = report.showForumPermissions;
            romeon = _closure1_slot0;
            verify = _closure1_slot1;
            offset = verify[option];
            offset = romeon.bind(golfie)(offset);
            yankee = offset.intl;
            offset = yankee.string;
            verify = verify[option];
            verify = romeon.bind(golfie)(verify);
            verify = verify.t;
            if(oscard) { _fun00004_ip = 2012; continue _fun00003 }
 1999:
            oscard = verify.T32rkJ;
            oscard = offset.bind(yankee)(oscard);
            _fun00004_ip = 2023; continue _fun00003;
 2012:
            verify = verify.S1VOwc;
            oscard = offset.bind(yankee)(verify);
 2023:
            michal['title'] = oscard;
            oscard = report.showForumPermissions;
            offset = _closure1_slot0;
            verify = _closure1_slot1;
            verify = verify[option];
            verify = offset.bind(golfie)(verify);
            verify = verify.t;
            if(oscard) { _fun00004_ip = 2068; continue _fun00003 }
 2058:
            oscard = verify.qry4PT;
            _fun00004_ip = 2076; continue _fun00003;
 2068:
            oscard = verify.prvWKi;
 2076:
            michal['description'] = oscard;
            oscard = _closure1_slot2;
            oscard = oscard.SEND_MESSAGES;
            michal['flag'] = oscard;
            entity[zuuluu] = michal;
            michal = _closure1_slot2;
            zuuluu = michal.EMBED_LINKS;
            michal = zuuluu.toString;
            zuuluu = michal.bind(zuuluu)();
            michal = {};
            yankee = _closure1_slot0;
            oscard = _closure1_slot1;
            verify = oscard[option];
            verify = yankee.bind(golfie)(verify);
            romeon = verify.intl;
            offset = romeon.string;
            verify = oscard[option];
            verify = yankee.bind(golfie)(verify);
            verify = verify.t;
            verify = verify.969dEB;
            verify = offset.bind(romeon)(verify);
            michal['title'] = verify;
            verify = oscard[option];
            verify = yankee.bind(golfie)(verify);
            verify = verify.t;
            verify = verify.ChoIi4;
            michal['description'] = verify;
            verify = _closure1_slot2;
            verify = verify.EMBED_LINKS;
            michal['flag'] = verify;
            entity[zuuluu] = michal;
            michal = _closure1_slot2;
            zuuluu = michal.ATTACH_FILES;
            michal = zuuluu.toString;
            zuuluu = michal.bind(zuuluu)();
            michal = {};
            verify = oscard[option];
            verify = yankee.bind(golfie)(verify);
            romeon = verify.intl;
            offset = romeon.string;
            verify = oscard[option];
            verify = yankee.bind(golfie)(verify);
            verify = verify.t;
            verify = verify.3AS4UF;
            verify = offset.bind(romeon)(verify);
            michal['title'] = verify;
            verify = oscard[option];
            verify = yankee.bind(golfie)(verify);
            verify = verify.t;
            verify = verify./87mYG;
            michal['description'] = verify;
            verify = _closure1_slot2;
            verify = verify.ATTACH_FILES;
            michal['flag'] = verify;
            entity[zuuluu] = michal;
            michal = _closure1_slot2;
            zuuluu = michal.ADD_REACTIONS;
            michal = zuuluu.toString;
            zuuluu = michal.bind(zuuluu)();
            michal = {};
            verify = oscard[option];
            verify = yankee.bind(golfie)(verify);
            romeon = verify.intl;
            offset = romeon.string;
            verify = oscard[option];
            verify = yankee.bind(golfie)(verify);
            verify = verify.t;
            verify = verify.yEoJAg;
            verify = offset.bind(romeon)(verify);
            michal['title'] = verify;
            verify = oscard[option];
            verify = yankee.bind(golfie)(verify);
            verify = verify.t;
            verify = verify.FEYwX1;
            michal['description'] = verify;
            verify = _closure1_slot2;
            verify = verify.ADD_REACTIONS;
            michal['flag'] = verify;
            entity[zuuluu] = michal;
            michal = _closure1_slot2;
            zuuluu = michal.USE_EXTERNAL_EMOJIS;
            michal = zuuluu.toString;
            zuuluu = michal.bind(zuuluu)();
            michal = {};
            verify = oscard[option];
            verify = yankee.bind(golfie)(verify);
            romeon = verify.intl;
            offset = romeon.string;
            verify = oscard[option];
            verify = yankee.bind(golfie)(verify);
            verify = verify.t;
            verify = verify.+bxf3N;
            verify = offset.bind(romeon)(verify);
            michal['title'] = verify;
            verify = oscard[option];
            verify = yankee.bind(golfie)(verify);
            verify = verify.t;
            verify = verify.POeVIi;
            michal['description'] = verify;
            verify = _closure1_slot2;
            verify = verify.USE_EXTERNAL_EMOJIS;
            michal['flag'] = verify;
            entity[zuuluu] = michal;
            michal = _closure1_slot2;
            zuuluu = michal.USE_EXTERNAL_STICKERS;
            michal = zuuluu.toString;
            zuuluu = michal.bind(zuuluu)();
            michal = {};
            verify = oscard[option];
            verify = yankee.bind(golfie)(verify);
            romeon = verify.intl;
            offset = romeon.string;
            verify = oscard[option];
            verify = yankee.bind(golfie)(verify);
            verify = verify.t;
            verify = verify.ERNhYW;
            verify = offset.bind(romeon)(verify);
            michal['title'] = verify;
            verify = oscard[option];
            verify = yankee.bind(golfie)(verify);
            verify = verify.t;
            verify = verify.AdXVhI;
            michal['description'] = verify;
            verify = _closure1_slot2;
            verify = verify.USE_EXTERNAL_STICKERS;
            michal['flag'] = verify;
            entity[zuuluu] = michal;
            michal = _closure1_slot2;
            zuuluu = michal.MENTION_EVERYONE;
            michal = zuuluu.toString;
            zuuluu = michal.bind(zuuluu)();
            michal = {};
            verify = oscard[option];
            verify = yankee.bind(golfie)(verify);
            romeon = verify.intl;
            offset = romeon.string;
            verify = oscard[option];
            verify = yankee.bind(golfie)(verify);
            verify = verify.t;
            verify = verify.Y78KGB;
            verify = offset.bind(romeon)(verify);
            michal['title'] = verify;
            verify = oscard[option];
            verify = yankee.bind(golfie)(verify);
            verify = verify.t;
            verify = verify.ryj6Nz;
            michal['description'] = verify;
            verify = _closure1_slot2;
            verify = verify.MENTION_EVERYONE;
            michal['flag'] = verify;
            entity[zuuluu] = michal;
            michal = _closure1_slot2;
            zuuluu = michal.MANAGE_MESSAGES;
            michal = zuuluu.toString;
            zuuluu = michal.bind(zuuluu)();
            michal = {};
            verify = oscard[option];
            verify = yankee.bind(golfie)(verify);
            romeon = verify.intl;
            offset = romeon.string;
            verify = oscard[option];
            verify = yankee.bind(golfie)(verify);
            verify = verify.t;
            verify = verify.6lU9xM;
            verify = offset.bind(romeon)(verify);
            michal['title'] = verify;
            verify = oscard[option];
            verify = yankee.bind(golfie)(verify);
            verify = verify.t;
            verify = verify.RXMG//;
            michal['description'] = verify;
            verify = _closure1_slot2;
            verify = verify.MANAGE_MESSAGES;
            michal['flag'] = verify;
            entity[zuuluu] = michal;
            michal = _closure1_slot2;
            zuuluu = michal.READ_MESSAGE_HISTORY;
            michal = zuuluu.toString;
            zuuluu = michal.bind(zuuluu)();
            michal = {};
            verify = oscard[option];
            verify = yankee.bind(golfie)(verify);
            romeon = verify.intl;
            offset = romeon.string;
            verify = oscard[option];
            verify = yankee.bind(golfie)(verify);
            verify = verify.t;
            verify = verify.l9ufaW;
            verify = offset.bind(romeon)(verify);
            michal['title'] = verify;
            verify = oscard[option];
            verify = yankee.bind(golfie)(verify);
            verify = verify.t;
            verify = verify.rmHPFR;
            michal['description'] = verify;
            verify = _closure1_slot2;
            verify = verify.READ_MESSAGE_HISTORY;
            michal['flag'] = verify;
            entity[zuuluu] = michal;
            michal = _closure1_slot2;
            zuuluu = michal.SEND_TTS_MESSAGES;
            michal = zuuluu.toString;
            zuuluu = michal.bind(zuuluu)();
            michal = {};
            verify = oscard[option];
            verify = yankee.bind(golfie)(verify);
            romeon = verify.intl;
            offset = romeon.string;
            verify = oscard[option];
            verify = yankee.bind(golfie)(verify);
            verify = verify.t;
            verify = verify.mMbwh4;
            verify = offset.bind(romeon)(verify);
            michal['title'] = verify;
            verify = oscard[option];
            verify = yankee.bind(golfie)(verify);
            verify = verify.t;
            verify = verify.D6x8Nj;
            michal['description'] = verify;
            verify = _closure1_slot2;
            verify = verify.SEND_TTS_MESSAGES;
            michal['flag'] = verify;
            entity[zuuluu] = michal;
            michal = _closure1_slot2;
            zuuluu = michal.USE_APPLICATION_COMMANDS;
            michal = zuuluu.toString;
            zuuluu = michal.bind(zuuluu)();
            michal = {};
            verify = oscard[option];
            verify = yankee.bind(golfie)(verify);
            romeon = verify.intl;
            offset = romeon.string;
            verify = oscard[option];
            verify = yankee.bind(golfie)(verify);
            verify = verify.t;
            verify = verify.nkoPOj;
            verify = offset.bind(romeon)(verify);
            michal['title'] = verify;
            verify = oscard[option];
            verify = yankee.bind(golfie)(verify);
            verify = verify.t;
            verify = verify.pJrJ39;
            michal['description'] = verify;
            verify = _closure1_slot2;
            verify = verify.USE_APPLICATION_COMMANDS;
            michal['flag'] = verify;
            entity[zuuluu] = michal;
            michal = _closure1_slot2;
            zuuluu = michal.USE_EXTERNAL_APPS;
            michal = zuuluu.toString;
            zuuluu = michal.bind(zuuluu)();
            michal = {};
            verify = oscard[option];
            verify = yankee.bind(golfie)(verify);
            romeon = verify.intl;
            offset = romeon.string;
            verify = oscard[option];
            verify = yankee.bind(golfie)(verify);
            verify = verify.t;
            verify = verify.TtA5rK;
            verify = offset.bind(romeon)(verify);
            michal['title'] = verify;
            verify = oscard[option];
            verify = yankee.bind(golfie)(verify);
            verify = verify.t;
            verify = verify.mzLoDQ;
            michal['description'] = verify;
            verify = _closure1_slot2;
            verify = verify.USE_EXTERNAL_APPS;
            michal['flag'] = verify;
            entity[zuuluu] = michal;
            michal = _closure1_slot2;
            zuuluu = michal.SEND_VOICE_MESSAGES;
            michal = zuuluu.toString;
            zuuluu = michal.bind(zuuluu)();
            michal = {};
            verify = oscard[option];
            verify = yankee.bind(golfie)(verify);
            romeon = verify.intl;
            offset = romeon.string;
            verify = oscard[option];
            verify = yankee.bind(golfie)(verify);
            verify = verify.t;
            verify = verify.WlWSBQ;
            verify = offset.bind(romeon)(verify);
            michal['title'] = verify;
            verify = oscard[option];
            verify = yankee.bind(golfie)(verify);
            verify = verify.t;
            verify = verify.pDuyi4;
            michal['description'] = verify;
            verify = _closure1_slot2;
            verify = verify.SEND_VOICE_MESSAGES;
            michal['flag'] = verify;
            entity[zuuluu] = michal;
            michal = _closure1_slot2;
            zuuluu = michal.USE_CLYDE_AI;
            michal = zuuluu.toString;
            zuuluu = michal.bind(zuuluu)();
            michal = {};
            verify = oscard[option];
            verify = yankee.bind(golfie)(verify);
            romeon = verify.intl;
            offset = romeon.string;
            verify = oscard[option];
            verify = yankee.bind(golfie)(verify);
            verify = verify.t;
            verify = verify.8eeEZm;
            verify = offset.bind(romeon)(verify);
            michal['title'] = verify;
            verify = oscard[option];
            verify = yankee.bind(golfie)(verify);
            verify = verify.t;
            verify = verify.Tx5TjI;
            michal['description'] = verify;
            verify = _closure1_slot2;
            verify = verify.USE_CLYDE_AI;
            michal['flag'] = verify;
            entity[zuuluu] = michal;
            michal = _closure1_slot2;
            zuuluu = michal.SEND_POLLS;
            michal = zuuluu.toString;
            zuuluu = michal.bind(zuuluu)();
            michal = {};
            verify = oscard[option];
            verify = yankee.bind(golfie)(verify);
            romeon = verify.intl;
            offset = romeon.string;
            verify = oscard[option];
            verify = yankee.bind(golfie)(verify);
            verify = verify.t;
            verify = verify.UMQ7W1;
            verify = offset.bind(romeon)(verify);
            michal['title'] = verify;
            verify = oscard[option];
            verify = yankee.bind(golfie)(verify);
            verify = verify.t;
            verify = verify.Xl6W+P;
            michal['description'] = verify;
            verify = _closure1_slot2;
            verify = verify.SEND_POLLS;
            michal['flag'] = verify;
            entity[zuuluu] = michal;
            michal = _closure1_slot2;
            zuuluu = michal.CONNECT;
            michal = zuuluu.toString;
            zuuluu = michal.bind(zuuluu)();
            michal = {};
            verify = oscard[option];
            verify = yankee.bind(golfie)(verify);
            romeon = verify.intl;
            offset = romeon.string;
            verify = oscard[option];
            verify = yankee.bind(golfie)(verify);
            verify = verify.t;
            verify = verify.S0W8Z2;
            verify = offset.bind(romeon)(verify);
            michal['title'] = verify;
            verify = oscard[option];
            verify = yankee.bind(golfie)(verify);
            verify = verify.t;
            verify = verify.3GCm/f;
            michal['description'] = verify;
            verify = _closure1_slot2;
            verify = verify.CONNECT;
            michal['flag'] = verify;
            entity[zuuluu] = michal;
            michal = _closure1_slot2;
            zuuluu = michal.SPEAK;
            michal = zuuluu.toString;
            zuuluu = michal.bind(zuuluu)();
            michal = {};
            verify = oscard[option];
            verify = yankee.bind(golfie)(verify);
            romeon = verify.intl;
            offset = romeon.string;
            verify = oscard[option];
            verify = yankee.bind(golfie)(verify);
            verify = verify.t;
            verify = verify.8w1tIS;
            verify = offset.bind(romeon)(verify);
            michal['title'] = verify;
            verify = oscard[option];
            verify = yankee.bind(golfie)(verify);
            verify = verify.t;
            verify = verify.y4MncH;
            michal['description'] = verify;
            verify = _closure1_slot2;
            verify = verify.SPEAK;
            michal['flag'] = verify;
            entity[zuuluu] = michal;
            michal = _closure1_slot2;
            zuuluu = michal.STREAM;
            michal = zuuluu.toString;
            zuuluu = michal.bind(zuuluu)();
            michal = {};
            verify = oscard[option];
            verify = yankee.bind(golfie)(verify);
            romeon = verify.intl;
            offset = romeon.string;
            verify = oscard[option];
            verify = yankee.bind(golfie)(verify);
            verify = verify.t;
            verify = verify.FlNoSU;
            verify = offset.bind(romeon)(verify);
            michal['title'] = verify;
            verify = oscard[option];
            verify = yankee.bind(golfie)(verify);
            verify = verify.t;
            verify = verify.6Z0j9v;
            michal['description'] = verify;
            verify = _closure1_slot2;
            verify = verify.STREAM;
            michal['flag'] = verify;
            entity[zuuluu] = michal;
            michal = _closure1_slot2;
            zuuluu = michal.USE_EMBEDDED_ACTIVITIES;
            michal = zuuluu.toString;
            zuuluu = michal.bind(zuuluu)();
            michal = {};
            verify = oscard[option];
            verify = yankee.bind(golfie)(verify);
            romeon = verify.intl;
            offset = romeon.string;
            verify = oscard[option];
            verify = yankee.bind(golfie)(verify);
            verify = verify.t;
            verify = verify.rLSGen;
            verify = offset.bind(romeon)(verify);
            michal['title'] = verify;
            verify = oscard[option];
            verify = yankee.bind(golfie)(verify);
            verify = verify.t;
            verify = verify.BEqU5O;
            michal['description'] = verify;
            verify = _closure1_slot2;
            verify = verify.USE_EMBEDDED_ACTIVITIES;
            michal['flag'] = verify;
            entity[zuuluu] = michal;
            michal = _closure1_slot2;
            zuuluu = michal.USE_SOUNDBOARD;
            michal = zuuluu.toString;
            zuuluu = michal.bind(zuuluu)();
            michal = {};
            verify = oscard[option];
            verify = yankee.bind(golfie)(verify);
            offset = verify.intl;
            verify = offset.string;
            oscard = oscard[option];
            oscard = yankee.bind(golfie)(oscard);
            oscard = oscard.t;
            oscard = oscard.Bco7ND;
            oscard = verify.bind(offset)(oscard);
            michal['title'] = oscard;
            verify = null;
            offset = verify == report;
            oscard = undefined;
            if(offset) { _fun00004_ip = 4262; continue _fun00003 }
 4256:
            oscard = report.SOUNDBOARD_DESCRIPTION;
 4262:
            if(!(verify == oscard)) { _fun00004_ip = 4296; continue _fun00003 }
 4266:
            yankee = _closure1_slot0;
            offset = _closure1_slot1;
            offset = offset[option];
            offset = yankee.bind(golfie)(offset);
            offset = offset.t;
            oscard = offset.+8p+fX;
 4296:
            michal['description'] = oscard;
            oscard = _closure1_slot2;
            oscard = oscard.USE_SOUNDBOARD;
            michal['flag'] = oscard;
            entity[zuuluu] = michal;
            michal = _closure1_slot2;
            zuuluu = michal.USE_EXTERNAL_SOUNDS;
            michal = zuuluu.toString;
            zuuluu = michal.bind(zuuluu)();
            michal = {};
            romeon = _closure1_slot0;
            oscard = _closure1_slot1;
            offset = oscard[option];
            offset = romeon.bind(golfie)(offset);
            foxtra = offset.intl;
            yankee = foxtra.string;
            offset = oscard[option];
            offset = romeon.bind(golfie)(offset);
            offset = offset.t;
            offset = offset.pwaVJy;
            offset = yankee.bind(foxtra)(offset);
            michal['title'] = offset;
            offset = oscard[option];
            offset = romeon.bind(golfie)(offset);
            offset = offset.t;
            offset = offset.qDpPtb;
            michal['description'] = offset;
            offset = _closure1_slot2;
            offset = offset.USE_EXTERNAL_SOUNDS;
            michal['flag'] = offset;
            entity[zuuluu] = michal;
            michal = _closure1_slot2;
            zuuluu = michal.USE_VAD;
            michal = zuuluu.toString;
            zuuluu = michal.bind(zuuluu)();
            michal = {};
            offset = oscard[option];
            offset = romeon.bind(golfie)(offset);
            foxtra = offset.intl;
            yankee = foxtra.string;
            offset = oscard[option];
            offset = romeon.bind(golfie)(offset);
            offset = offset.t;
            offset = offset.08zAV1;
            offset = yankee.bind(foxtra)(offset);
            michal['title'] = offset;
            offset = oscard[option];
            offset = romeon.bind(golfie)(offset);
            offset = offset.t;
            offset = offset.7CHjmZ;
            michal['description'] = offset;
            offset = _closure1_slot2;
            offset = offset.USE_VAD;
            michal['flag'] = offset;
            entity[zuuluu] = michal;
            michal = _closure1_slot2;
            zuuluu = michal.PRIORITY_SPEAKER;
            michal = zuuluu.toString;
            zuuluu = michal.bind(zuuluu)();
            michal = {};
            offset = oscard[option];
            offset = romeon.bind(golfie)(offset);
            yankee = offset.intl;
            offset = yankee.string;
            oscard = oscard[option];
            oscard = romeon.bind(golfie)(oscard);
            oscard = oscard.t;
            oscard = oscard.BVK71t;
            oscard = offset.bind(yankee)(oscard);
            michal['title'] = oscard;
            offset = verify == report;
            oscard = undefined;
            if(offset) { _fun00004_ip = 4640; continue _fun00003 }
 4634:
            oscard = report.PRIORITY_SPEAKER_DESCRIPTION;
 4640:
            if(!(verify == oscard)) { _fun00004_ip = 4674; continue _fun00003 }
 4644:
            offset = _closure1_slot0;
            verify = _closure1_slot1;
            verify = verify[option];
            verify = offset.bind(golfie)(verify);
            verify = verify.t;
            oscard = verify.OJkrrq;
 4674:
            michal['description'] = oscard;
            oscard = _closure1_slot2;
            oscard = oscard.PRIORITY_SPEAKER;
            michal['flag'] = oscard;
            entity[zuuluu] = michal;
            michal = _closure1_slot2;
            zuuluu = michal.MUTE_MEMBERS;
            michal = zuuluu.toString;
            zuuluu = michal.bind(zuuluu)();
            michal = {};
            verify = _closure1_slot0;
            oscard = _closure1_slot1;
            offset = oscard[option];
            offset = verify.bind(golfie)(offset);
            romeon = offset.intl;
            yankee = romeon.string;
            offset = oscard[option];
            offset = verify.bind(golfie)(offset);
            offset = offset.t;
            offset = offset.8EI309;
            offset = yankee.bind(romeon)(offset);
            michal['title'] = offset;
            offset = oscard[option];
            offset = verify.bind(golfie)(offset);
            offset = offset.t;
            offset = offset.PIhGAw;
            michal['description'] = offset;
            offset = _closure1_slot2;
            offset = offset.MUTE_MEMBERS;
            michal['flag'] = offset;
            entity[zuuluu] = michal;
            michal = _closure1_slot2;
            zuuluu = michal.DEAFEN_MEMBERS;
            michal = zuuluu.toString;
            zuuluu = michal.bind(zuuluu)();
            michal = {};
            offset = oscard[option];
            offset = verify.bind(golfie)(offset);
            romeon = offset.intl;
            yankee = romeon.string;
            offset = oscard[option];
            offset = verify.bind(golfie)(offset);
            offset = offset.t;
            offset = offset.9L47Fh;
            offset = yankee.bind(romeon)(offset);
            michal['title'] = offset;
            offset = oscard[option];
            offset = verify.bind(golfie)(offset);
            offset = offset.t;
            offset = offset.FQr3+v;
            michal['description'] = offset;
            offset = _closure1_slot2;
            offset = offset.DEAFEN_MEMBERS;
            michal['flag'] = offset;
            entity[zuuluu] = michal;
            michal = _closure1_slot2;
            zuuluu = michal.MOVE_MEMBERS;
            michal = zuuluu.toString;
            zuuluu = michal.bind(zuuluu)();
            michal = {};
            offset = oscard[option];
            offset = verify.bind(golfie)(offset);
            romeon = offset.intl;
            yankee = romeon.string;
            offset = oscard[option];
            offset = verify.bind(golfie)(offset);
            offset = offset.t;
            offset = offset.YtjJPT;
            offset = yankee.bind(romeon)(offset);
            michal['title'] = offset;
            offset = oscard[option];
            offset = verify.bind(golfie)(offset);
            offset = offset.t;
            offset = offset.SEe0Gh;
            michal['description'] = offset;
            offset = _closure1_slot2;
            offset = offset.MOVE_MEMBERS;
            michal['flag'] = offset;
            entity[zuuluu] = michal;
            michal = _closure1_slot2;
            zuuluu = michal.REQUEST_TO_SPEAK;
            michal = zuuluu.toString;
            zuuluu = michal.bind(zuuluu)();
            michal = {};
            offset = oscard[option];
            offset = verify.bind(golfie)(offset);
            romeon = offset.intl;
            yankee = romeon.string;
            offset = oscard[option];
            offset = verify.bind(golfie)(offset);
            offset = offset.t;
            offset = offset.5kicT0;
            offset = yankee.bind(romeon)(offset);
            michal['title'] = offset;
            offset = oscard[option];
            offset = verify.bind(golfie)(offset);
            offset = offset.t;
            offset = offset.yNE+Q0;
            michal['description'] = offset;
            offset = _closure1_slot2;
            offset = offset.REQUEST_TO_SPEAK;
            michal['flag'] = offset;
            offset = true;
            michal['isExperimental'] = offset;
            entity[zuuluu] = michal;
            michal = _closure1_slot2;
            zuuluu = michal.ADMINISTRATOR;
            michal = zuuluu.toString;
            zuuluu = michal.bind(zuuluu)();
            michal = {};
            offset = oscard[option];
            offset = verify.bind(golfie)(offset);
            romeon = offset.intl;
            yankee = romeon.string;
            offset = oscard[option];
            offset = verify.bind(golfie)(offset);
            offset = offset.t;
            offset = offset.PGvZqa;
            offset = yankee.bind(romeon)(offset);
            michal['title'] = offset;
            oscard = oscard[option];
            oscard = verify.bind(golfie)(oscard);
            oscard = oscard.t;
            oscard = oscard.UJxMrK;
            verify = 'string';
            oscard = typeof oscard;
            if(!(verify !== oscard)) { _fun00004_ip = 5330; continue _fun00003 }
 5273:
            verify = _closure1_slot0;
            oscard = _closure1_slot1;
            offset = oscard[option];
            offset = verify.bind(golfie)(offset);
            yankee = offset.intl;
            offset = yankee.format;
            oscard = oscard[option];
            oscard = verify.bind(golfie)(oscard);
            oscard = oscard.t;
            verify = oscard.UJxMrK;
            oscard = {};
            oscard = offset.bind(yankee)(verify, oscard);
            _fun00004_ip = 5358; continue _fun00003;
 5330:
            offset = _closure1_slot0;
            verify = _closure1_slot1;
            verify = verify[option];
            verify = offset.bind(golfie)(verify);
            verify = verify.t;
            oscard = verify.UJxMrK;
 5358:
            michal['description'] = oscard;
            oscard = _closure1_slot2;
            oscard = oscard.ADMINISTRATOR;
            michal['flag'] = oscard;
            entity[zuuluu] = michal;
            michal = _closure1_slot2;
            zuuluu = michal.MANAGE_EVENTS;
            michal = zuuluu.toString;
            zuuluu = michal.bind(zuuluu)();
            michal = {};
            verify = _closure1_slot0;
            oscard = _closure1_slot1;
            offset = oscard[option];
            offset = verify.bind(golfie)(offset);
            romeon = offset.intl;
            yankee = romeon.string;
            offset = oscard[option];
            offset = verify.bind(golfie)(offset);
            offset = offset.t;
            offset = offset.HIgA5e;
            offset = yankee.bind(romeon)(offset);
            michal['title'] = offset;
            offset = oscard[option];
            offset = verify.bind(golfie)(offset);
            offset = offset.t;
            offset = offset.SL+qgI;
            michal['description'] = offset;
            offset = _closure1_slot2;
            offset = offset.MANAGE_EVENTS;
            michal['flag'] = offset;
            entity[zuuluu] = michal;
            michal = _closure1_slot2;
            zuuluu = michal.CREATE_EVENTS;
            michal = zuuluu.toString;
            zuuluu = michal.bind(zuuluu)();
            michal = {};
            offset = oscard[option];
            offset = verify.bind(golfie)(offset);
            romeon = offset.intl;
            yankee = romeon.string;
            offset = oscard[option];
            offset = verify.bind(golfie)(offset);
            offset = offset.t;
            offset = offset.qyjZub;
            offset = yankee.bind(romeon)(offset);
            michal['title'] = offset;
            oscard = oscard[option];
            oscard = verify.bind(golfie)(oscard);
            oscard = oscard.t;
            oscard = oscard.bQEFJS;
            michal['description'] = oscard;
            oscard = _closure1_slot2;
            oscard = oscard.CREATE_EVENTS;
            michal['flag'] = oscard;
            entity[zuuluu] = michal;
            michal = _closure1_slot2;
            zuuluu = michal.MANAGE_THREADS;
            michal = zuuluu.toString;
            zuuluu = michal.bind(zuuluu)();
            michal = {};
            oscard = report.showForumPermissions;
            romeon = _closure1_slot0;
            verify = _closure1_slot1;
            offset = verify[option];
            offset = romeon.bind(golfie)(offset);
            yankee = offset.intl;
            offset = yankee.string;
            verify = verify[option];
            verify = romeon.bind(golfie)(verify);
            verify = verify.t;
            if(oscard) { _fun00004_ip = 5704; continue _fun00003 }
 5691:
            oscard = verify.kEqgr6;
            oscard = offset.bind(yankee)(oscard);
            _fun00004_ip = 5715; continue _fun00003;
 5704:
            verify = verify.QKe7Q0;
            oscard = offset.bind(yankee)(verify);
 5715:
            michal['title'] = oscard;
            oscard = report.showForumPermissions;
            offset = _closure1_slot0;
            verify = _closure1_slot1;
            verify = verify[option];
            verify = offset.bind(golfie)(verify);
            verify = verify.t;
            if(oscard) { _fun00004_ip = 5760; continue _fun00003 }
 5750:
            oscard = verify.AKdc4O;
            _fun00004_ip = 5768; continue _fun00003;
 5760:
            oscard = verify.QAxIIi;
 5768:
            michal['description'] = oscard;
            oscard = _closure1_slot2;
            oscard = oscard.MANAGE_THREADS;
            michal['flag'] = oscard;
            entity[zuuluu] = michal;
            michal = _closure1_slot2;
            zuuluu = michal.CREATE_PUBLIC_THREADS;
            michal = zuuluu.toString;
            zuuluu = michal.bind(zuuluu)();
            michal = {};
            verify = _closure1_slot0;
            oscard = _closure1_slot1;
            offset = oscard[option];
            offset = verify.bind(golfie)(offset);
            romeon = offset.intl;
            yankee = romeon.string;
            offset = oscard[option];
            offset = verify.bind(golfie)(offset);
            offset = offset.t;
            offset = offset.25rKnZ;
            offset = yankee.bind(romeon)(offset);
            michal['title'] = offset;
            offset = oscard[option];
            offset = verify.bind(golfie)(offset);
            offset = offset.t;
            offset = offset.ODCYj4;
            michal['description'] = offset;
            offset = _closure1_slot2;
            offset = offset.CREATE_PUBLIC_THREADS;
            michal['flag'] = offset;
            entity[zuuluu] = michal;
            michal = _closure1_slot2;
            zuuluu = michal.CREATE_PRIVATE_THREADS;
            michal = zuuluu.toString;
            zuuluu = michal.bind(zuuluu)();
            michal = {};
            offset = oscard[option];
            offset = verify.bind(golfie)(offset);
            romeon = offset.intl;
            yankee = romeon.string;
            offset = oscard[option];
            offset = verify.bind(golfie)(offset);
            offset = offset.t;
            offset = offset.QwbTSU;
            offset = yankee.bind(romeon)(offset);
            michal['title'] = offset;
            oscard = oscard[option];
            oscard = verify.bind(golfie)(oscard);
            oscard = oscard.t;
            oscard = oscard.G/cc3t;
            michal['description'] = oscard;
            oscard = _closure1_slot2;
            oscard = oscard.CREATE_PRIVATE_THREADS;
            michal['flag'] = oscard;
            entity[zuuluu] = michal;
            michal = _closure1_slot2;
            zuuluu = michal.SEND_MESSAGES_IN_THREADS;
            michal = zuuluu.toString;
            zuuluu = michal.bind(zuuluu)();
            michal = {};
            oscard = report.showForumPermissions;
            romeon = _closure1_slot0;
            verify = _closure1_slot1;
            offset = verify[option];
            offset = romeon.bind(golfie)(offset);
            yankee = offset.intl;
            offset = yankee.string;
            verify = verify[option];
            verify = romeon.bind(golfie)(verify);
            verify = verify.t;
            if(oscard) { _fun00004_ip = 6114; continue _fun00003 }
 6101:
            oscard = verify.fTE74u;
            oscard = offset.bind(yankee)(oscard);
            _fun00004_ip = 6125; continue _fun00003;
 6114:
            verify = verify.5QlVGx;
            oscard = offset.bind(yankee)(verify);
 6125:
            michal['title'] = oscard;
            report = report.showForumPermissions;
            verify = _closure1_slot0;
            oscard = _closure1_slot1;
            oscard = oscard[option];
            oscard = verify.bind(golfie)(oscard);
            oscard = oscard.t;
            if(report) { _fun00004_ip = 6170; continue _fun00003 }
 6160:
            report = oscard.6pyXvr;
            _fun00004_ip = 6178; continue _fun00003;
 6170:
            report = oscard.C2ZPEx;
 6178:
            michal['description'] = report;
            report = _closure1_slot2;
            report = report.SEND_MESSAGES_IN_THREADS;
            michal['flag'] = report;
            entity[zuuluu] = michal;
            michal = _closure1_slot2;
            zuuluu = michal.USE_CLYDE_AI;
            michal = zuuluu.toString;
            zuuluu = michal.bind(zuuluu)();
            michal = {};
            oscard = _closure1_slot0;
            report = _closure1_slot1;
            verify = report[option];
            verify = oscard.bind(golfie)(verify);
            yankee = verify.intl;
            offset = yankee.string;
            verify = report[option];
            verify = oscard.bind(golfie)(verify);
            verify = verify.t;
            verify = verify.8eeEZm;
            verify = offset.bind(yankee)(verify);
            michal['title'] = verify;
            verify = report[option];
            verify = oscard.bind(golfie)(verify);
            verify = verify.t;
            verify = verify.Tx5TjI;
            michal['description'] = verify;
            verify = _closure1_slot2;
            verify = verify.USE_CLYDE_AI;
            michal['flag'] = verify;
            entity[zuuluu] = michal;
            michal = _closure1_slot2;
            zuuluu = michal.SET_VOICE_CHANNEL_STATUS;
            michal = zuuluu.toString;
            zuuluu = michal.bind(zuuluu)();
            michal = {};
            verify = report[option];
            verify = oscard.bind(golfie)(verify);
            yankee = verify.intl;
            offset = yankee.string;
            verify = report[option];
            verify = oscard.bind(golfie)(verify);
            verify = verify.t;
            verify = verify.VBwkUV;
            verify = offset.bind(yankee)(verify);
            michal['title'] = verify;
            report = report[option];
            report = oscard.bind(golfie)(report);
            report = report.t;
            report = report.C6BzX1;
            michal['description'] = report;
            tangon = _closure1_slot2;
            tangon = tangon.SET_VOICE_CHANNEL_STATUS;
            michal['flag'] = tangon;
            entity[zuuluu] = michal;
            return entity;
        }
    };
    var _closure1_slot5 = tangon;
    entity = function(argFoo, argBar) { // Original name: generateGuildGeneralSection
        _fun00005: for(var _fun00006_ip = 0; ; ) switch(_fun00006_ip) {
 0:
            entity = _closure1_slot2;
            entity = entity.VIEW_CHANNEL;
            oscard = new Array(7);
            oscard[0] = entity;
            entity = _closure1_slot2;
            entity = entity.MANAGE_CHANNELS;
            oscard[1] = entity;
            entity = _closure1_slot2;
            entity = entity.MANAGE_ROLES;
            oscard[2] = entity;
            entity = _closure1_slot2;
            entity = entity.CREATE_GUILD_EXPRESSIONS;
            oscard[3] = entity;
            entity = _closure1_slot2;
            entity = entity.MANAGE_GUILD_EXPRESSIONS;
            oscard[4] = entity;
            entity = _closure1_slot2;
            entity = entity.VIEW_AUDIT_LOG;
            oscard[5] = entity;
            entity = _closure1_slot2;
            entity = entity.VIEW_GUILD_ANALYTICS;
            oscard[6] = entity;
            entity = argBar;
            entity = entity.showCreatorMonetizationAnalyticsPermission;
            if(!entity) { _fun00006_ip = 137; continue _fun00005 }
 117:
            michal = oscard.push;
            entity = _closure1_slot2;
            entity = entity.VIEW_CREATOR_MONETIZATION_ANALYTICS;
            entity = michal.bind(oscard)(entity);
 137:
            michal = oscard.push;
            entity = _closure1_slot2;
            entity = entity.MANAGE_WEBHOOKS;
            entity = michal.bind(oscard)(entity);
            michal = oscard.push;
            entity = _closure1_slot2;
            entity = entity.MANAGE_GUILD;
            entity = michal.bind(oscard)(entity);
            zuuluu = _closure1_slot3;
            entity = {};
            verify = _closure1_slot0;
            offset = _closure1_slot1;
            report = 1;
            golfie = offset[report];
            michal = undefined;
            golfie = verify.bind(michal)(golfie);
            option = golfie.intl;
            golfie = option.string;
            report = offset[report];
            report = verify.bind(michal)(report);
            report = report.t;
            report = report.mYck+P;
            report = golfie.bind(option)(report);
            entity['title'] = report;
            report = _closure1_slot4;
            tangon = argFoo;
            tangon = report.bind(michal)(oscard, tangon);
            entity['permissions'] = tangon;
            michal = zuuluu.bind(michal)(entity);
            return entity;
        }
    };
    var _closure1_slot6 = entity;
    entity = function(argFoo) { // Original name: generateGuildMembershipSection
        entity = _closure1_slot2;
        entity = entity.CREATE_INSTANT_INVITE;
        oscard = new Array(6);
        oscard[0] = entity;
        entity = _closure1_slot2;
        entity = entity.CHANGE_NICKNAME;
        oscard[1] = entity;
        entity = _closure1_slot2;
        entity = entity.MANAGE_NICKNAMES;
        oscard[2] = entity;
        entity = _closure1_slot2;
        entity = entity.KICK_MEMBERS;
        oscard[3] = entity;
        entity = _closure1_slot2;
        entity = entity.BAN_MEMBERS;
        oscard[4] = entity;
        entity = _closure1_slot2;
        entity = entity.MODERATE_MEMBERS;
        oscard[5] = entity;
        zuuluu = _closure1_slot3;
        entity = {};
        verify = _closure1_slot0;
        offset = _closure1_slot1;
        report = 1;
        golfie = offset[report];
        michal = undefined;
        golfie = verify.bind(michal)(golfie);
        option = golfie.intl;
        golfie = option.string;
        report = offset[report];
        report = verify.bind(michal)(report);
        report = report.t;
        report = report.Ny49TE;
        report = golfie.bind(option)(report);
        entity['title'] = report;
        report = _closure1_slot4;
        tangon = argFoo;
        tangon = report.bind(michal)(oscard, tangon);
        entity['permissions'] = tangon;
        michal = zuuluu.bind(michal)(entity);
        return entity;
    };
    var _closure1_slot7 = entity;
    entity = function(argFoo, argBar) { // Original name: generateGuildTextSection
        _fun00007: for(var _fun00008_ip = 0; ; ) switch(_fun00008_ip) {
 0:
            michal = argBar;
            zuuluu = _closure1_slot2;
            zuuluu = zuuluu.SEND_MESSAGES;
            golfie = new Array(18);
            golfie[0] = zuuluu;
            zuuluu = _closure1_slot2;
            zuuluu = zuuluu.SEND_MESSAGES_IN_THREADS;
            golfie[1] = zuuluu;
            zuuluu = _closure1_slot2;
            zuuluu = zuuluu.CREATE_PUBLIC_THREADS;
            golfie[2] = zuuluu;
            zuuluu = _closure1_slot2;
            zuuluu = zuuluu.CREATE_PRIVATE_THREADS;
            golfie[3] = zuuluu;
            zuuluu = _closure1_slot2;
            zuuluu = zuuluu.EMBED_LINKS;
            golfie[4] = zuuluu;
            zuuluu = _closure1_slot2;
            zuuluu = zuuluu.ATTACH_FILES;
            golfie[5] = zuuluu;
            zuuluu = _closure1_slot2;
            zuuluu = zuuluu.ADD_REACTIONS;
            golfie[6] = zuuluu;
            zuuluu = _closure1_slot2;
            zuuluu = zuuluu.USE_EXTERNAL_EMOJIS;
            golfie[7] = zuuluu;
            zuuluu = _closure1_slot2;
            zuuluu = zuuluu.USE_EXTERNAL_STICKERS;
            golfie[8] = zuuluu;
            zuuluu = _closure1_slot2;
            zuuluu = zuuluu.USE_EXTERNAL_SOUNDS;
            golfie[9] = zuuluu;
            zuuluu = _closure1_slot2;
            zuuluu = zuuluu.MENTION_EVERYONE;
            golfie[10] = zuuluu;
            zuuluu = _closure1_slot2;
            zuuluu = zuuluu.MANAGE_MESSAGES;
            golfie[11] = zuuluu;
            zuuluu = _closure1_slot2;
            zuuluu = zuuluu.MANAGE_THREADS;
            golfie[12] = zuuluu;
            zuuluu = _closure1_slot2;
            zuuluu = zuuluu.READ_MESSAGE_HISTORY;
            golfie[13] = zuuluu;
            zuuluu = _closure1_slot2;
            zuuluu = zuuluu.SEND_TTS_MESSAGES;
            golfie[14] = zuuluu;
            zuuluu = _closure1_slot2;
            zuuluu = zuuluu.SEND_VOICE_MESSAGES;
            golfie[15] = zuuluu;
            zuuluu = _closure1_slot2;
            zuuluu = zuuluu.USE_CLYDE_AI;
            golfie[16] = zuuluu;
            zuuluu = _closure1_slot2;
            zuuluu = zuuluu.SEND_POLLS;
            golfie[17] = zuuluu;
            report = michal.inSoundmojiExperiment;
            zuuluu = golfie;
            if(report) { _fun00008_ip = 293; continue _fun00007 }
 276:
            oscard = golfie.filter;
            report = function(argFoo) {
                entity = _closure1_slot2;
                michal = entity.USE_EXTERNAL_SOUNDS;
                entity = argFoo;
                entity = entity !== michal;
                return entity;
            };
            zuuluu = oscard.bind(golfie)(report);
 293:
            michal = michal.showClydeAIPermissions;
            oscard = zuuluu;
            if(michal) { _fun00008_ip = 322; continue _fun00007 }
 305:
            michal = zuuluu.filter;
            entity = function(argFoo) {
                entity = _closure1_slot2;
                michal = entity.USE_CLYDE_AI;
                entity = argFoo;
                entity = entity !== michal;
                return entity;
            };
            oscard = michal.bind(zuuluu)(entity);
 322:
            zuuluu = _closure1_slot3;
            entity = {};
            verify = _closure1_slot0;
            offset = _closure1_slot1;
            report = 1;
            golfie = offset[report];
            michal = undefined;
            golfie = verify.bind(michal)(golfie);
            option = golfie.intl;
            golfie = option.string;
            report = offset[report];
            report = verify.bind(michal)(report);
            report = report.t;
            report = report.cKobOz;
            report = golfie.bind(option)(report);
            entity['title'] = report;
            report = _closure1_slot4;
            tangon = argFoo;
            tangon = report.bind(michal)(oscard, tangon);
            entity['permissions'] = tangon;
            michal = zuuluu.bind(michal)(entity);
            return entity;
        }
    };
    var _closure1_slot8 = entity;
    entity = function(argFoo) { // Original name: generateGuildVoiceSection
        entity = _closure1_slot2;
        entity = entity.CONNECT;
        oscard = new Array(11);
        oscard[0] = entity;
        entity = _closure1_slot2;
        entity = entity.SPEAK;
        oscard[1] = entity;
        entity = _closure1_slot2;
        entity = entity.STREAM;
        oscard[2] = entity;
        entity = _closure1_slot2;
        entity = entity.USE_SOUNDBOARD;
        oscard[3] = entity;
        entity = _closure1_slot2;
        entity = entity.USE_EXTERNAL_SOUNDS;
        oscard[4] = entity;
        entity = _closure1_slot2;
        entity = entity.USE_VAD;
        oscard[5] = entity;
        entity = _closure1_slot2;
        entity = entity.PRIORITY_SPEAKER;
        oscard[6] = entity;
        entity = _closure1_slot2;
        entity = entity.MUTE_MEMBERS;
        oscard[7] = entity;
        entity = _closure1_slot2;
        entity = entity.DEAFEN_MEMBERS;
        oscard[8] = entity;
        entity = _closure1_slot2;
        entity = entity.MOVE_MEMBERS;
        oscard[9] = entity;
        entity = _closure1_slot2;
        entity = entity.SET_VOICE_CHANNEL_STATUS;
        oscard[10] = entity;
        zuuluu = _closure1_slot3;
        entity = {};
        verify = _closure1_slot0;
        offset = _closure1_slot1;
        report = 1;
        golfie = offset[report];
        michal = undefined;
        golfie = verify.bind(michal)(golfie);
        option = golfie.intl;
        golfie = option.string;
        report = offset[report];
        report = verify.bind(michal)(report);
        report = report.t;
        report = report.46Ra1d;
        report = golfie.bind(option)(report);
        entity['title'] = report;
        report = _closure1_slot4;
        tangon = argFoo;
        tangon = report.bind(michal)(oscard, tangon);
        entity['permissions'] = tangon;
        michal = zuuluu.bind(michal)(entity);
        return entity;
    };
    var _closure1_slot9 = entity;
    entity = function(argFoo) { // Original name: generateGuildAppsSection
        entity = _closure1_slot2;
        entity = entity.USE_APPLICATION_COMMANDS;
        oscard = new Array(3);
        oscard[0] = entity;
        entity = _closure1_slot2;
        entity = entity.USE_EMBEDDED_ACTIVITIES;
        oscard[1] = entity;
        entity = _closure1_slot2;
        entity = entity.USE_EXTERNAL_APPS;
        oscard[2] = entity;
        zuuluu = _closure1_slot3;
        entity = {};
        verify = _closure1_slot0;
        offset = _closure1_slot1;
        report = 1;
        golfie = offset[report];
        michal = undefined;
        golfie = verify.bind(michal)(golfie);
        option = golfie.intl;
        golfie = option.string;
        report = offset[report];
        report = verify.bind(michal)(report);
        report = report.t;
        report = report.rrh/W1;
        report = golfie.bind(option)(report);
        entity['title'] = report;
        report = _closure1_slot4;
        tangon = argFoo;
        tangon = report.bind(michal)(oscard, tangon);
        entity['permissions'] = tangon;
        michal = zuuluu.bind(michal)(entity);
        return entity;
    };
    var _closure1_slot10 = entity;
    entity = global;
    verify = entity.Object;
    option = verify.defineProperty;
    report = {};
    entity = true;
    report['value'] = entity;
    entity = '__esModule';
    entity = option.bind(verify)(zuuluu, entity, report);
    entity = 0;
    report = golfie[entity];
    entity = undefined;
    report = oscard.bind(entity)(report);
    report = report.Permissions;
    var _closure1_slot2 = report;
    report = 3;
    report = golfie[report];
    golfie = oscard.bind(entity)(report);
    oscard = golfie.fileFinishedImporting;
    report = 'modules/permissions/PermissionUtils.tsx';
    report = oscard.bind(golfie)(report);
    zuuluu['getGuildPermissionSpec'] = tangon;
    tangon = function(argFoo) { // Original name: generateGuildPermissionSpec
        _fun00009: for(var _fun00010_ip = 0; ; ) switch(_fun00010_ip) {
 0:
            offset = argFoo;
            entity = _closure1_slot5;
            report = undefined;
            option = entity.bind(report)(offset);
            entity = _closure1_slot6;
            michal = entity.bind(report)(option, offset);
            entity = new Array(5);
            entity[0] = michal;
            michal = _closure1_slot7;
            michal = michal.bind(report)(option);
            entity[1] = michal;
            michal = _closure1_slot8;
            michal = michal.bind(report)(option, offset);
            entity[2] = michal;
            michal = _closure1_slot9;
            michal = michal.bind(report)(option);
            entity[3] = michal;
            michal = _closure1_slot10;
            michal = michal.bind(report)(option);
            entity[4] = michal;
            michal = offset.showStageChannelPermissions;
            if(!michal) { _fun00010_ip = 217; continue _fun00009 }
 97:
            zuuluu = entity.push;
            golfie = _closure1_slot3;
            michal = {};
            romeon = _closure1_slot0;
            foxtra = _closure1_slot1;
            tangon = 1;
            verify = foxtra[tangon];
            verify = romeon.bind(report)(verify);
            yankee = verify.intl;
            verify = yankee.string;
            tangon = foxtra[tangon];
            tangon = romeon.bind(report)(tangon);
            tangon = tangon.t;
            tangon = tangon.yniaur;
            tangon = verify.bind(yankee)(tangon);
            michal['title'] = tangon;
            verify = _closure1_slot4;
            tangon = _closure1_slot2;
            yankee = tangon.REQUEST_TO_SPEAK;
            tangon = new Array(1);
            tangon[0] = yankee;
            tangon = verify.bind(report)(tangon, option);
            michal['permissions'] = tangon;
            tangon = offset.showExperimental;
            tangon = golfie.bind(report)(michal, tangon);
            michal = zuuluu.bind(entity)(michal);
 217:
            zuuluu = entity.push;
            tangon = _closure1_slot3;
            michal = {};
            romeon = _closure1_slot0;
            foxtra = _closure1_slot1;
            verify = 1;
            golfie = foxtra[verify];
            golfie = romeon.bind(report)(golfie);
            backup = golfie.intl;
            yankee = backup.string;
            golfie = foxtra[verify];
            golfie = romeon.bind(report)(golfie);
            golfie = golfie.t;
            golfie = golfie.b8lplZ;
            golfie = yankee.bind(backup)(golfie);
            michal['title'] = golfie;
            golfie = _closure1_slot4;
            yankee = _closure1_slot2;
            backup = yankee.CREATE_EVENTS;
            yankee = new Array(2);
            yankee[0] = backup;
            backup = _closure1_slot2;
            backup = backup.MANAGE_EVENTS;
            yankee[1] = backup;
            yankee = golfie.bind(report)(yankee, option);
            michal['permissions'] = yankee;
            offset = offset.showExperimental;
            offset = tangon.bind(report)(michal, offset);
            michal = zuuluu.bind(entity)(michal);
            zuuluu = entity.push;
            michal = {};
            offset = foxtra[verify];
            offset = romeon.bind(report)(offset);
            yankee = offset.intl;
            offset = yankee.string;
            verify = foxtra[verify];
            verify = romeon.bind(report)(verify);
            verify = verify.t;
            verify = verify.3uI5CQ;
            verify = offset.bind(yankee)(verify);
            michal['title'] = verify;
            oscard = _closure1_slot2;
            verify = oscard.ADMINISTRATOR;
            oscard = new Array(1);
            oscard[0] = verify;
            oscard = golfie.bind(report)(oscard, option);
            michal['permissions'] = oscard;
            tangon = tangon.bind(report)(michal);
            michal = zuuluu.bind(entity)(michal);
            return entity;
        }
    };
    zuuluu['generateGuildPermissionSpec'] = tangon;
    tangon = function(argFoo, argBar) { // Original name: generateChannelGeneralSection
        _fun00011: for(var _fun00012_ip = 0; ; ) switch(_fun00012_ip) {
 0:
            michal = arguments[2];
            report = undefined;
            if(!(michal === report)) { _fun00012_ip = 21; continue _fun00011 }
 9:
            entity = {};
            zuuluu = true;
            entity['showManageWebhooks'] = zuuluu;
            michal = entity;
 21:
            entity = {};
            zuuluu = argBar;
            entity['title'] = zuuluu;
            tangon = _closure1_slot4;
            zuuluu = null;
            if(!(zuuluu != michal)) { _fun00012_ip = 52; continue _fun00011 }
 43:
            michal = michal.showManageWebhooks;
            if(michal) { _fun00012_ip = 100; continue _fun00011 }
 52:
            michal = _closure1_slot2;
            michal = michal.VIEW_CHANNEL;
            zuuluu = new Array(3);
            zuuluu[0] = michal;
            michal = _closure1_slot2;
            michal = michal.MANAGE_CHANNELS;
            zuuluu[1] = michal;
            michal = _closure1_slot2;
            michal = michal.MANAGE_ROLES;
            zuuluu[2] = michal;
            _fun00012_ip = 163; continue _fun00011;
 100:
            michal = _closure1_slot2;
            golfie = michal.VIEW_CHANNEL;
            michal = new Array(4);
            michal[0] = golfie;
            golfie = _closure1_slot2;
            golfie = golfie.MANAGE_CHANNELS;
            michal[1] = golfie;
            golfie = _closure1_slot2;
            golfie = golfie.MANAGE_ROLES;
            michal[2] = golfie;
            oscard = _closure1_slot2;
            oscard = oscard.MANAGE_WEBHOOKS;
            michal[3] = oscard;
            zuuluu = michal;
 163:
            michal = argFoo;
            michal = tangon.bind(report)(zuuluu, michal);
            entity['permissions'] = michal;
            return entity;
        }
    };
    zuuluu['generateChannelGeneralSection'] = tangon;
    tangon = function(argFoo, argBar) { // Original name: generateChannelMembershipSection
        entity = {};
        michal = argBar;
        entity['title'] = michal;
        report = _closure1_slot4;
        michal = _closure1_slot2;
        michal = michal.CREATE_INSTANT_INVITE;
        tangon = new Array(1);
        tangon[0] = michal;
        zuuluu = undefined;
        michal = argFoo;
        michal = report.bind(zuuluu)(tangon, michal);
        entity['permissions'] = michal;
        return entity;
    };
    zuuluu['generateChannelMembershipSection'] = tangon;
    tangon = function(argFoo, argBar, argBaz) { // Original name: generateChannelTextSection
        _fun00013: for(var _fun00014_ip = 0; ; ) switch(_fun00014_ip) {
 0:
            zuuluu = argBaz;
            tangon = _closure1_slot2;
            tangon = tangon.SEND_MESSAGES;
            golfie = new Array(18);
            golfie[0] = tangon;
            tangon = _closure1_slot2;
            tangon = tangon.SEND_MESSAGES_IN_THREADS;
            golfie[1] = tangon;
            tangon = _closure1_slot2;
            tangon = tangon.CREATE_PUBLIC_THREADS;
            golfie[2] = tangon;
            tangon = _closure1_slot2;
            tangon = tangon.CREATE_PRIVATE_THREADS;
            golfie[3] = tangon;
            tangon = _closure1_slot2;
            tangon = tangon.EMBED_LINKS;
            golfie[4] = tangon;
            tangon = _closure1_slot2;
            tangon = tangon.ATTACH_FILES;
            golfie[5] = tangon;
            tangon = _closure1_slot2;
            tangon = tangon.ADD_REACTIONS;
            golfie[6] = tangon;
            tangon = _closure1_slot2;
            tangon = tangon.USE_EXTERNAL_EMOJIS;
            golfie[7] = tangon;
            tangon = _closure1_slot2;
            tangon = tangon.USE_EXTERNAL_STICKERS;
            golfie[8] = tangon;
            tangon = _closure1_slot2;
            tangon = tangon.USE_EXTERNAL_SOUNDS;
            golfie[9] = tangon;
            tangon = _closure1_slot2;
            tangon = tangon.MENTION_EVERYONE;
            golfie[10] = tangon;
            tangon = _closure1_slot2;
            tangon = tangon.MANAGE_MESSAGES;
            golfie[11] = tangon;
            tangon = _closure1_slot2;
            tangon = tangon.MANAGE_THREADS;
            golfie[12] = tangon;
            tangon = _closure1_slot2;
            tangon = tangon.READ_MESSAGE_HISTORY;
            golfie[13] = tangon;
            tangon = _closure1_slot2;
            tangon = tangon.SEND_TTS_MESSAGES;
            golfie[14] = tangon;
            tangon = _closure1_slot2;
            tangon = tangon.SEND_VOICE_MESSAGES;
            golfie[15] = tangon;
            tangon = _closure1_slot2;
            tangon = tangon.USE_CLYDE_AI;
            golfie[16] = tangon;
            tangon = _closure1_slot2;
            tangon = tangon.SEND_POLLS;
            golfie[17] = tangon;
            tangon = zuuluu.inSoundmojiExperiment;
            oscard = golfie;
            if(tangon) { _fun00014_ip = 293; continue _fun00013 }
 276:
            report = golfie.filter;
            tangon = function(argFoo) {
                entity = _closure1_slot2;
                michal = entity.USE_EXTERNAL_SOUNDS;
                entity = argFoo;
                entity = entity !== michal;
                return entity;
            };
            oscard = report.bind(golfie)(tangon);
 293:
            tangon = zuuluu.showPrivateThreads;
            if(!tangon) { _fun00014_ip = 308; continue _fun00013 }
 302:
            tangon = zuuluu.showCreateThreads;
 308:
            golfie = oscard;
            if(tangon) { _fun00014_ip = 331; continue _fun00013 }
 314:
            report = oscard.filter;
            tangon = function(argFoo) {
                entity = _closure1_slot2;
                michal = entity.CREATE_PRIVATE_THREADS;
                entity = argFoo;
                entity = entity !== michal;
                return entity;
            };
            golfie = report.bind(oscard)(tangon);
 331:
            tangon = zuuluu.showCreateThreads;
            oscard = golfie;
            if(tangon) { _fun00014_ip = 360; continue _fun00013 }
 343:
            report = golfie.filter;
            tangon = function(argFoo) {
                entity = _closure1_slot2;
                michal = entity.CREATE_PUBLIC_THREADS;
                entity = argFoo;
                entity = entity !== michal;
                return entity;
            };
            oscard = report.bind(golfie)(tangon);
 360:
            tangon = zuuluu.showClydeAIPermissions;
            report = oscard;
            if(tangon) { _fun00014_ip = 389; continue _fun00013 }
 372:
            tangon = oscard.filter;
            entity = function(argFoo) {
                entity = _closure1_slot2;
                michal = entity.USE_CLYDE_AI;
                entity = argFoo;
                entity = entity !== michal;
                return entity;
            };
            report = tangon.bind(oscard)(entity);
 389:
            entity = {};
            tangon = argBar;
            entity['title'] = tangon;
            zuuluu = zuuluu.sectionDescription;
            entity['description'] = zuuluu;
            tangon = _closure1_slot4;
            zuuluu = undefined;
            michal = argFoo;
            michal = tangon.bind(zuuluu)(report, michal);
            entity['permissions'] = michal;
            return entity;
        }
    };
    zuuluu['generateChannelTextSection'] = tangon;
    tangon = function(argFoo, argBar) { // Original name: generateChannelVoiceSection
        entity = {};
        michal = argBar;
        entity['title'] = michal;
        report = _closure1_slot4;
        zuuluu = _closure1_slot2;
        zuuluu = zuuluu.CONNECT;
        tangon = new Array(11);
        tangon[0] = zuuluu;
        zuuluu = _closure1_slot2;
        zuuluu = zuuluu.SPEAK;
        tangon[1] = zuuluu;
        zuuluu = _closure1_slot2;
        zuuluu = zuuluu.STREAM;
        tangon[2] = zuuluu;
        zuuluu = _closure1_slot2;
        zuuluu = zuuluu.USE_SOUNDBOARD;
        tangon[3] = zuuluu;
        zuuluu = _closure1_slot2;
        zuuluu = zuuluu.USE_EXTERNAL_SOUNDS;
        tangon[4] = zuuluu;
        zuuluu = _closure1_slot2;
        zuuluu = zuuluu.USE_VAD;
        tangon[5] = zuuluu;
        zuuluu = _closure1_slot2;
        zuuluu = zuuluu.PRIORITY_SPEAKER;
        tangon[6] = zuuluu;
        zuuluu = _closure1_slot2;
        zuuluu = zuuluu.MUTE_MEMBERS;
        tangon[7] = zuuluu;
        zuuluu = _closure1_slot2;
        zuuluu = zuuluu.DEAFEN_MEMBERS;
        tangon[8] = zuuluu;
        zuuluu = _closure1_slot2;
        zuuluu = zuuluu.MOVE_MEMBERS;
        tangon[9] = zuuluu;
        michal = _closure1_slot2;
        michal = michal.SET_VOICE_CHANNEL_STATUS;
        tangon[10] = michal;
        zuuluu = undefined;
        michal = argFoo;
        michal = report.bind(zuuluu)(tangon, michal);
        entity['permissions'] = michal;
        return entity;
    };
    zuuluu['generateChannelVoiceSection'] = tangon;
    tangon = function(argFoo, argBar, argBaz) { // Original name: generateChannelVoiceChatSection
        _fun00015: for(var _fun00016_ip = 0; ; ) switch(_fun00016_ip) {
 0:
            zuuluu = argBaz;
            entity = _closure1_slot2;
            entity = entity.SEND_MESSAGES;
            oscard = new Array(14);
            oscard[0] = entity;
            entity = _closure1_slot2;
            entity = entity.EMBED_LINKS;
            oscard[1] = entity;
            entity = _closure1_slot2;
            entity = entity.ATTACH_FILES;
            oscard[2] = entity;
            entity = _closure1_slot2;
            entity = entity.ADD_REACTIONS;
            oscard[3] = entity;
            entity = _closure1_slot2;
            entity = entity.USE_EXTERNAL_EMOJIS;
            oscard[4] = entity;
            entity = _closure1_slot2;
            entity = entity.USE_EXTERNAL_STICKERS;
            oscard[5] = entity;
            entity = _closure1_slot2;
            entity = entity.USE_EXTERNAL_SOUNDS;
            oscard[6] = entity;
            entity = _closure1_slot2;
            entity = entity.MENTION_EVERYONE;
            oscard[7] = entity;
            entity = _closure1_slot2;
            entity = entity.MANAGE_MESSAGES;
            oscard[8] = entity;
            entity = _closure1_slot2;
            entity = entity.READ_MESSAGE_HISTORY;
            oscard[9] = entity;
            entity = _closure1_slot2;
            entity = entity.SEND_TTS_MESSAGES;
            oscard[10] = entity;
            entity = _closure1_slot2;
            entity = entity.USE_APPLICATION_COMMANDS;
            oscard[11] = entity;
            entity = _closure1_slot2;
            entity = entity.SEND_VOICE_MESSAGES;
            oscard[12] = entity;
            entity = _closure1_slot2;
            entity = entity.SEND_POLLS;
            oscard[13] = entity;
            entity = zuuluu.inSoundmojiExperiment;
            report = oscard;
            if(entity) { _fun00016_ip = 237; continue _fun00015 }
 218:
            tangon = oscard.filter;
            entity = function(argFoo) {
                entity = _closure1_slot2;
                michal = entity.USE_EXTERNAL_SOUNDS;
                entity = argFoo;
                entity = entity !== michal;
                return entity;
            };
            report = tangon.bind(oscard)(entity);
 237:
            entity = {};
            tangon = argBar;
            entity['title'] = tangon;
            zuuluu = zuuluu.sectionDescription;
            entity['description'] = zuuluu;
            tangon = _closure1_slot4;
            zuuluu = undefined;
            michal = argFoo;
            michal = tangon.bind(zuuluu)(report, michal);
            entity['permissions'] = michal;
            return entity;
        }
    };
    zuuluu['generateChannelVoiceChatSection'] = tangon;
    tangon = function(argFoo, argBar) { // Original name: generateChannelAppsSection
        _fun00017: for(var _fun00018_ip = 0; ; ) switch(_fun00018_ip) {
 0:
            zuuluu = arguments[2];
            report = undefined;
            if(!(zuuluu === report)) { _fun00018_ip = 21; continue _fun00017 }
 9:
            entity = {};
            michal = true;
            entity['showActivities'] = michal;
            zuuluu = entity;
 21:
            entity = {};
            michal = argBar;
            entity['title'] = michal;
            tangon = _closure1_slot4;
            oscard = _closure1_slot2;
            golfie = oscard.USE_APPLICATION_COMMANDS;
            oscard = new Array(3);
            oscard[0] = golfie;
            golfie = zuuluu.showActivities;
            zuuluu = null;
            if(!golfie) { _fun00018_ip = 76; continue _fun00017 }
 66:
            golfie = _closure1_slot2;
            zuuluu = golfie.USE_EMBEDDED_ACTIVITIES;
 76:
            oscard[1] = zuuluu;
            zuuluu = _closure1_slot2;
            zuuluu = zuuluu.USE_EXTERNAL_APPS;
            oscard[2] = zuuluu;
            zuuluu = oscard.filter;
            golfie = _closure1_slot0;
            option = _closure1_slot1;
            michal = 2;
            michal = option[michal];
            michal = golfie.bind(report)(michal);
            michal = michal.isNotNullish;
            zuuluu = zuuluu.bind(oscard)(michal);
            michal = argFoo;
            michal = tangon.bind(report)(zuuluu, michal);
            entity['permissions'] = michal;
            return entity;
        }
    };
    zuuluu['generateChannelAppsSection'] = tangon;
    tangon = function(argFoo, argBar, argBaz) { // Original name: generateChannelStageVoiceSection
        _fun00019: for(var _fun00020_ip = 0; ; ) switch(_fun00020_ip) {
 0:
            entity = {};
            michal = argBar;
            entity['title'] = michal;
            report = _closure1_slot4;
            michal = _closure1_slot2;
            oscard = michal.CONNECT;
            michal = argBaz;
            if(michal) { _fun00020_ip = 70; continue _fun00019 }
 32:
            tangon = new Array(3);
            tangon[0] = oscard;
            michal = _closure1_slot2;
            michal = michal.MUTE_MEMBERS;
            tangon[1] = michal;
            michal = _closure1_slot2;
            michal = michal.MOVE_MEMBERS;
            tangon[2] = michal;
            _fun00020_ip = 123; continue _fun00019;
 70:
            michal = new Array(4);
            michal[0] = oscard;
            oscard = _closure1_slot2;
            oscard = oscard.STREAM;
            michal[1] = oscard;
            oscard = _closure1_slot2;
            oscard = oscard.MUTE_MEMBERS;
            michal[2] = oscard;
            zuuluu = _closure1_slot2;
            zuuluu = zuuluu.MOVE_MEMBERS;
            michal[3] = zuuluu;
            tangon = michal;
 123:
            zuuluu = undefined;
            michal = argFoo;
            michal = report.bind(zuuluu)(tangon, michal);
            entity['permissions'] = michal;
            return entity;
        }
    };
    zuuluu['generateChannelStageVoiceSection'] = tangon;
    tangon = function(argFoo, argBar) { // Original name: generateChannelStageSection
        entity = {};
        michal = argBar;
        entity['title'] = michal;
        report = _closure1_slot4;
        zuuluu = _closure1_slot2;
        zuuluu = zuuluu.REQUEST_TO_SPEAK;
        tangon = new Array(2);
        tangon[0] = zuuluu;
        michal = _closure1_slot2;
        michal = michal.MENTION_EVERYONE;
        tangon[1] = michal;
        zuuluu = undefined;
        michal = argFoo;
        michal = report.bind(zuuluu)(tangon, michal);
        entity['permissions'] = michal;
        return entity;
    };
    zuuluu['generateChannelStageSection'] = tangon;
    tangon = function(argFoo, argBar) { // Original name: generateChannelEventsSection
        entity = {};
        michal = argBar;
        entity['title'] = michal;
        report = _closure1_slot4;
        zuuluu = _closure1_slot2;
        zuuluu = zuuluu.CREATE_EVENTS;
        tangon = new Array(2);
        tangon[0] = zuuluu;
        michal = _closure1_slot2;
        michal = michal.MANAGE_EVENTS;
        tangon[1] = michal;
        zuuluu = undefined;
        michal = argFoo;
        michal = report.bind(zuuluu)(tangon, michal);
        entity['permissions'] = michal;
        return entity;
    };
    zuuluu['generateChannelEventsSection'] = tangon;
    michal = function(argFoo) { // Original name: renderDescription
        _fun00021: for(var _fun00022_ip = 0; ; ) switch(_fun00022_ip) {
 0:
            tangon = argFoo;
            michal = null;
            entity = tangon;
            if(!(michal != entity)) { _fun00022_ip = 92; continue _fun00021 }
 12:
            report = typeof tangon;
            michal = 'string';
            if(!(michal !== report)) { _fun00022_ip = 79; continue _fun00021 }
 23:
            zuuluu = 'function';
            michal = tangon;
            if(!(zuuluu === report)) { _fun00022_ip = 77; continue _fun00021 }
 34:
            oscard = _closure1_slot0;
            report = _closure1_slot1;
            zuuluu = 1;
            report = report[zuuluu];
            zuuluu = undefined;
            zuuluu = oscard.bind(zuuluu)(report);
            oscard = zuuluu.intl;
            report = oscard.format;
            zuuluu = {};
            michal = report.bind(oscard)(tangon, zuuluu);
 77:
            _fun00022_ip = 89; continue _fun00021;
 79:
            zuuluu = tangon.trim;
            michal = zuuluu.bind(tangon)();
 89:
            entity = michal;
 92:
            return entity;
        }
    };
    zuuluu['renderDescription'] = michal;
    return entity;
})();