// app/modules/permissions/PermissionUtils.tsx
export default (function(argFoo, argBar, argBaz, _, __, argFred, argPlugh) {
    oscar = argBar;
    zulu = argFred;
    golf = argPlugh;
    var _closure1_slot0 = oscar;
    var _closure1_slot1 = golf;
    entity = function(argFoo) { // Original name: filterExperimental
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            entity = argFoo;
            mike = arguments[1];
            zulu = undefined;
            if(!(mike === zulu)) { _fun00002_ip = 14; continue _fun00001 }
 12:
            mike = false;
 14:
            if(mike) { _fun00002_ip = 48; continue _fun00001 }
 17:
            tango = entity.permissions;
            zulu = tango.filter;
            mike = function(argFoo) {
                entity = argFoo;
                entity = entity.isExperimental;
                entity = !entity;
                return entity;
            };
            mike = zulu.bind(tango)(mike);
            entity['permissions'] = mike;
 48:
            return entity;
        }
    };
    var _closure1_slot3 = entity;
    entity = function(argFoo, argBar) { // Original name: getPermissionsSpecList
        zulu = argFoo;
        mike = argBar;
        var _closure2_slot0 = mike;
        mike = zulu.map;
        entity = function(argFoo) {
            zulu = argFoo;
            mike = _closure2_slot0;
            entity = zulu.toString;
            entity = entity.bind(zulu)();
            entity = mike[entity];
            return entity;
        };
        entity = mike.bind(zulu)(entity);
        return entity;
    };
    var _closure1_slot4 = entity;
    tango = function(argFoo) { // Original name: getGuildPermissionSpec
        _fun00003: for(var _fun00004_ip = 0; ; ) switch(_fun00004_ip) {
 0:
            report = argFoo;
            entity = {};
            mike = _closure1_slot2;
            zulu = mike.VIEW_CHANNEL;
            mike = zulu.toString;
            zulu = mike.bind(zulu)();
            mike = {};
            verify = _closure1_slot0;
            oscar = _closure1_slot1;
            options = 1;
            offset = oscar[options];
            golf = undefined;
            offset = verify.bind(golf)(offset);
            romeo = offset.intl;
            yankee = romeo.string;
            offset = oscar[options];
            offset = verify.bind(golf)(offset);
            offset = offset.t;
            offset = offset.uV83ys;
            offset = yankee.bind(romeo)(offset);
            mike['title'] = offset;
            offset = oscar[options];
            offset = verify.bind(golf)(offset);
            offset = offset.t;
            offset = offset.ybTHLi;
            mike['description'] = offset;
            offset = _closure1_slot2;
            offset = offset.VIEW_CHANNEL;
            mike['flag'] = offset;
            entity[zulu] = mike;
            mike = _closure1_slot2;
            zulu = mike.MANAGE_CHANNELS;
            mike = zulu.toString;
            zulu = mike.bind(zulu)();
            mike = {};
            offset = oscar[options];
            offset = verify.bind(golf)(offset);
            romeo = offset.intl;
            yankee = romeo.string;
            offset = oscar[options];
            offset = verify.bind(golf)(offset);
            offset = offset.t;
            offset = offset.9qLtWl;
            offset = yankee.bind(romeo)(offset);
            mike['title'] = offset;
            offset = oscar[options];
            offset = verify.bind(golf)(offset);
            offset = offset.t;
            offset = offset.qfJnur;
            mike['description'] = offset;
            offset = _closure1_slot2;
            offset = offset.MANAGE_CHANNELS;
            mike['flag'] = offset;
            entity[zulu] = mike;
            mike = _closure1_slot2;
            zulu = mike.MANAGE_ROLES;
            mike = zulu.toString;
            zulu = mike.bind(zulu)();
            mike = {};
            offset = oscar[options];
            offset = verify.bind(golf)(offset);
            romeo = offset.intl;
            yankee = romeo.string;
            offset = oscar[options];
            offset = verify.bind(golf)(offset);
            offset = offset.t;
            offset = offset.C8d+oK;
            offset = yankee.bind(romeo)(offset);
            mike['title'] = offset;
            offset = oscar[options];
            offset = verify.bind(golf)(offset);
            offset = offset.t;
            offset = offset.buo9u7;
            mike['description'] = offset;
            offset = _closure1_slot2;
            offset = offset.MANAGE_ROLES;
            mike['flag'] = offset;
            entity[zulu] = mike;
            mike = _closure1_slot2;
            zulu = mike.MANAGE_GUILD_EXPRESSIONS;
            mike = zulu.toString;
            zulu = mike.bind(zulu)();
            mike = {};
            offset = oscar[options];
            offset = verify.bind(golf)(offset);
            romeo = offset.intl;
            yankee = romeo.string;
            offset = oscar[options];
            offset = verify.bind(golf)(offset);
            offset = offset.t;
            offset = offset.bbuXIi;
            offset = yankee.bind(romeo)(offset);
            mike['title'] = offset;
            offset = oscar[options];
            offset = verify.bind(golf)(offset);
            offset = offset.t;
            offset = offset.4vb3//;
            mike['description'] = offset;
            offset = _closure1_slot2;
            offset = offset.MANAGE_GUILD_EXPRESSIONS;
            mike['flag'] = offset;
            entity[zulu] = mike;
            mike = _closure1_slot2;
            zulu = mike.CREATE_GUILD_EXPRESSIONS;
            mike = zulu.toString;
            zulu = mike.bind(zulu)();
            mike = {};
            offset = oscar[options];
            offset = verify.bind(golf)(offset);
            romeo = offset.intl;
            yankee = romeo.string;
            offset = oscar[options];
            offset = verify.bind(golf)(offset);
            offset = offset.t;
            offset = offset.HarVuL;
            offset = yankee.bind(romeo)(offset);
            mike['title'] = offset;
            offset = oscar[options];
            offset = verify.bind(golf)(offset);
            offset = offset.t;
            offset = offset.gkdHvL;
            mike['description'] = offset;
            offset = _closure1_slot2;
            offset = offset.CREATE_GUILD_EXPRESSIONS;
            mike['flag'] = offset;
            entity[zulu] = mike;
            mike = _closure1_slot2;
            zulu = mike.VIEW_AUDIT_LOG;
            mike = zulu.toString;
            zulu = mike.bind(zulu)();
            mike = {};
            offset = oscar[options];
            offset = verify.bind(golf)(offset);
            romeo = offset.intl;
            yankee = romeo.string;
            offset = oscar[options];
            offset = verify.bind(golf)(offset);
            offset = offset.t;
            offset = offset.fZgLpK;
            offset = yankee.bind(romeo)(offset);
            mike['title'] = offset;
            offset = oscar[options];
            offset = verify.bind(golf)(offset);
            offset = offset.t;
            offset = offset.0hx75u;
            mike['description'] = offset;
            offset = _closure1_slot2;
            offset = offset.VIEW_AUDIT_LOG;
            mike['flag'] = offset;
            entity[zulu] = mike;
            mike = _closure1_slot2;
            zulu = mike.VIEW_GUILD_ANALYTICS;
            mike = zulu.toString;
            zulu = mike.bind(zulu)();
            mike = {};
            offset = oscar[options];
            offset = verify.bind(golf)(offset);
            romeo = offset.intl;
            yankee = romeo.string;
            offset = oscar[options];
            offset = verify.bind(golf)(offset);
            offset = offset.t;
            offset = offset.rQJBEx;
            offset = yankee.bind(romeo)(offset);
            mike['title'] = offset;
            offset = oscar[options];
            offset = verify.bind(golf)(offset);
            offset = offset.t;
            offset = offset.whVKhY;
            mike['description'] = offset;
            offset = _closure1_slot2;
            offset = offset.VIEW_GUILD_ANALYTICS;
            mike['flag'] = offset;
            entity[zulu] = mike;
            mike = _closure1_slot2;
            zulu = mike.VIEW_CREATOR_MONETIZATION_ANALYTICS;
            mike = zulu.toString;
            zulu = mike.bind(zulu)();
            mike = {};
            offset = oscar[options];
            offset = verify.bind(golf)(offset);
            romeo = offset.intl;
            yankee = romeo.string;
            offset = oscar[options];
            offset = verify.bind(golf)(offset);
            offset = offset.t;
            offset = offset.0lTLTk;
            offset = yankee.bind(romeo)(offset);
            mike['title'] = offset;
            offset = oscar[options];
            offset = verify.bind(golf)(offset);
            offset = offset.t;
            offset = offset.mut6NT;
            mike['description'] = offset;
            offset = _closure1_slot2;
            offset = offset.VIEW_CREATOR_MONETIZATION_ANALYTICS;
            mike['flag'] = offset;
            entity[zulu] = mike;
            mike = _closure1_slot2;
            zulu = mike.MANAGE_WEBHOOKS;
            mike = zulu.toString;
            zulu = mike.bind(zulu)();
            mike = {};
            offset = oscar[options];
            offset = verify.bind(golf)(offset);
            romeo = offset.intl;
            yankee = romeo.string;
            offset = oscar[options];
            offset = verify.bind(golf)(offset);
            offset = offset.t;
            offset = offset./ADKmJ;
            offset = yankee.bind(romeo)(offset);
            mike['title'] = offset;
            offset = oscar[options];
            offset = verify.bind(golf)(offset);
            offset = offset.t;
            offset = offset.LczYqK;
            mike['description'] = offset;
            offset = _closure1_slot2;
            offset = offset.MANAGE_WEBHOOKS;
            mike['flag'] = offset;
            entity[zulu] = mike;
            mike = _closure1_slot2;
            zulu = mike.MANAGE_GUILD;
            mike = zulu.toString;
            zulu = mike.bind(zulu)();
            mike = {};
            offset = oscar[options];
            offset = verify.bind(golf)(offset);
            romeo = offset.intl;
            yankee = romeo.string;
            offset = oscar[options];
            offset = verify.bind(golf)(offset);
            offset = offset.t;
            offset = offset.QZRcfH;
            offset = yankee.bind(romeo)(offset);
            mike['title'] = offset;
            offset = oscar[options];
            offset = verify.bind(golf)(offset);
            offset = offset.t;
            offset = offset.KoQe/P;
            mike['description'] = offset;
            offset = _closure1_slot2;
            offset = offset.MANAGE_GUILD;
            mike['flag'] = offset;
            entity[zulu] = mike;
            mike = _closure1_slot2;
            zulu = mike.CREATE_INSTANT_INVITE;
            mike = zulu.toString;
            zulu = mike.bind(zulu)();
            mike = {};
            offset = oscar[options];
            offset = verify.bind(golf)(offset);
            romeo = offset.intl;
            yankee = romeo.string;
            offset = oscar[options];
            offset = verify.bind(golf)(offset);
            offset = offset.t;
            offset = offset.zJrgTE;
            offset = yankee.bind(romeo)(offset);
            mike['title'] = offset;
            offset = oscar[options];
            offset = verify.bind(golf)(offset);
            offset = offset.t;
            offset = offset.PCFOZW;
            mike['description'] = offset;
            offset = _closure1_slot2;
            offset = offset.CREATE_INSTANT_INVITE;
            mike['flag'] = offset;
            entity[zulu] = mike;
            mike = _closure1_slot2;
            zulu = mike.CHANGE_NICKNAME;
            mike = zulu.toString;
            zulu = mike.bind(zulu)();
            mike = {};
            offset = oscar[options];
            offset = verify.bind(golf)(offset);
            romeo = offset.intl;
            yankee = romeo.string;
            offset = oscar[options];
            offset = verify.bind(golf)(offset);
            offset = offset.t;
            offset = offset.dilOFx;
            offset = yankee.bind(romeo)(offset);
            mike['title'] = offset;
            offset = oscar[options];
            offset = verify.bind(golf)(offset);
            offset = offset.t;
            offset = offset.b8B++v;
            mike['description'] = offset;
            offset = _closure1_slot2;
            offset = offset.CHANGE_NICKNAME;
            mike['flag'] = offset;
            entity[zulu] = mike;
            mike = _closure1_slot2;
            zulu = mike.MANAGE_NICKNAMES;
            mike = zulu.toString;
            zulu = mike.bind(zulu)();
            mike = {};
            offset = oscar[options];
            offset = verify.bind(golf)(offset);
            romeo = offset.intl;
            yankee = romeo.string;
            offset = oscar[options];
            offset = verify.bind(golf)(offset);
            offset = offset.t;
            offset = offset.t+Ct5+;
            offset = yankee.bind(romeo)(offset);
            mike['title'] = offset;
            oscar = oscar[options];
            oscar = verify.bind(golf)(oscar);
            oscar = oscar.t;
            oscar = oscar.hTnlMT;
            mike['description'] = oscar;
            oscar = _closure1_slot2;
            oscar = oscar.MANAGE_NICKNAMES;
            mike['flag'] = oscar;
            entity[zulu] = mike;
            mike = _closure1_slot2;
            zulu = mike.KICK_MEMBERS;
            mike = zulu.toString;
            zulu = mike.bind(zulu)();
            mike = {};
            oscar = report.showMembershipManualApprovalPermissions;
            romeo = _closure1_slot0;
            verify = _closure1_slot1;
            offset = verify[options];
            offset = romeo.bind(golf)(offset);
            yankee = offset.intl;
            offset = yankee.string;
            verify = verify[options];
            verify = romeo.bind(golf)(verify);
            verify = verify.t;
            if(oscar) { _fun00004_ip = 1574; continue _fun00003 }
 1561:
            oscar = verify.pBNv6u;
            oscar = offset.bind(yankee)(oscar);
            _fun00004_ip = 1585; continue _fun00003;
 1574:
            verify = verify.9TxXwc;
            oscar = offset.bind(yankee)(verify);
 1585:
            mike['title'] = oscar;
            oscar = report.showMembershipManualApprovalPermissions;
            offset = _closure1_slot0;
            verify = _closure1_slot1;
            verify = verify[options];
            verify = offset.bind(golf)(verify);
            verify = verify.t;
            if(oscar) { _fun00004_ip = 1628; continue _fun00003 }
 1620:
            oscar = verify.rwdPaG;
            _fun00004_ip = 1634; continue _fun00003;
 1628:
            oscar = verify.hGBAn5;
 1634:
            mike['description'] = oscar;
            oscar = _closure1_slot2;
            oscar = oscar.KICK_MEMBERS;
            mike['flag'] = oscar;
            entity[zulu] = mike;
            mike = _closure1_slot2;
            zulu = mike.BAN_MEMBERS;
            mike = zulu.toString;
            zulu = mike.bind(zulu)();
            mike = {};
            verify = _closure1_slot0;
            oscar = _closure1_slot1;
            offset = oscar[options];
            offset = verify.bind(golf)(offset);
            romeo = offset.intl;
            yankee = romeo.string;
            offset = oscar[options];
            offset = verify.bind(golf)(offset);
            offset = offset.t;
            offset = offset.oTBA7O;
            offset = yankee.bind(romeo)(offset);
            mike['title'] = offset;
            offset = oscar[options];
            offset = verify.bind(golf)(offset);
            offset = offset.t;
            offset = offset.OqNY09;
            mike['description'] = offset;
            offset = _closure1_slot2;
            offset = offset.BAN_MEMBERS;
            mike['flag'] = offset;
            entity[zulu] = mike;
            mike = _closure1_slot2;
            zulu = mike.MODERATE_MEMBERS;
            mike = zulu.toString;
            zulu = mike.bind(zulu)();
            mike = {};
            offset = oscar[options];
            offset = verify.bind(golf)(offset);
            romeo = offset.intl;
            yankee = romeo.string;
            offset = oscar[options];
            offset = verify.bind(golf)(offset);
            offset = offset.t;
            offset = offset.+RL6p6;
            offset = yankee.bind(romeo)(offset);
            mike['title'] = offset;
            oscar = oscar[options];
            oscar = verify.bind(golf)(oscar);
            oscar = oscar.t;
            oscar = oscar.T6bZsb;
            mike['description'] = oscar;
            oscar = _closure1_slot2;
            oscar = oscar.MODERATE_MEMBERS;
            mike['flag'] = oscar;
            entity[zulu] = mike;
            mike = _closure1_slot2;
            zulu = mike.SEND_MESSAGES;
            mike = zulu.toString;
            zulu = mike.bind(zulu)();
            mike = {};
            oscar = report.showForumPermissions;
            romeo = _closure1_slot0;
            verify = _closure1_slot1;
            offset = verify[options];
            offset = romeo.bind(golf)(offset);
            yankee = offset.intl;
            offset = yankee.string;
            verify = verify[options];
            verify = romeo.bind(golf)(verify);
            verify = verify.t;
            if(oscar) { _fun00004_ip = 1976; continue _fun00003 }
 1963:
            oscar = verify.T32rkJ;
            oscar = offset.bind(yankee)(oscar);
            _fun00004_ip = 1987; continue _fun00003;
 1976:
            verify = verify.S1VOwc;
            oscar = offset.bind(yankee)(verify);
 1987:
            mike['title'] = oscar;
            oscar = report.showForumPermissions;
            offset = _closure1_slot0;
            verify = _closure1_slot1;
            verify = verify[options];
            verify = offset.bind(golf)(verify);
            verify = verify.t;
            if(oscar) { _fun00004_ip = 2030; continue _fun00003 }
 2022:
            oscar = verify.qry4PT;
            _fun00004_ip = 2036; continue _fun00003;
 2030:
            oscar = verify.prvWKi;
 2036:
            mike['description'] = oscar;
            oscar = _closure1_slot2;
            oscar = oscar.SEND_MESSAGES;
            mike['flag'] = oscar;
            entity[zulu] = mike;
            mike = _closure1_slot2;
            zulu = mike.EMBED_LINKS;
            mike = zulu.toString;
            zulu = mike.bind(zulu)();
            mike = {};
            yankee = _closure1_slot0;
            oscar = _closure1_slot1;
            verify = oscar[options];
            verify = yankee.bind(golf)(verify);
            romeo = verify.intl;
            offset = romeo.string;
            verify = oscar[options];
            verify = yankee.bind(golf)(verify);
            verify = verify.t;
            verify = verify.969dEB;
            verify = offset.bind(romeo)(verify);
            mike['title'] = verify;
            verify = oscar[options];
            verify = yankee.bind(golf)(verify);
            verify = verify.t;
            verify = verify.ChoIi4;
            mike['description'] = verify;
            verify = _closure1_slot2;
            verify = verify.EMBED_LINKS;
            mike['flag'] = verify;
            entity[zulu] = mike;
            mike = _closure1_slot2;
            zulu = mike.ATTACH_FILES;
            mike = zulu.toString;
            zulu = mike.bind(zulu)();
            mike = {};
            verify = oscar[options];
            verify = yankee.bind(golf)(verify);
            romeo = verify.intl;
            offset = romeo.string;
            verify = oscar[options];
            verify = yankee.bind(golf)(verify);
            verify = verify.t;
            verify = verify.3AS4UF;
            verify = offset.bind(romeo)(verify);
            mike['title'] = verify;
            verify = oscar[options];
            verify = yankee.bind(golf)(verify);
            verify = verify.t;
            verify = verify./87mYG;
            mike['description'] = verify;
            verify = _closure1_slot2;
            verify = verify.ATTACH_FILES;
            mike['flag'] = verify;
            entity[zulu] = mike;
            mike = _closure1_slot2;
            zulu = mike.ADD_REACTIONS;
            mike = zulu.toString;
            zulu = mike.bind(zulu)();
            mike = {};
            verify = oscar[options];
            verify = yankee.bind(golf)(verify);
            romeo = verify.intl;
            offset = romeo.string;
            verify = oscar[options];
            verify = yankee.bind(golf)(verify);
            verify = verify.t;
            verify = verify.yEoJAg;
            verify = offset.bind(romeo)(verify);
            mike['title'] = verify;
            verify = oscar[options];
            verify = yankee.bind(golf)(verify);
            verify = verify.t;
            verify = verify.FEYwX1;
            mike['description'] = verify;
            verify = _closure1_slot2;
            verify = verify.ADD_REACTIONS;
            mike['flag'] = verify;
            entity[zulu] = mike;
            mike = _closure1_slot2;
            zulu = mike.USE_EXTERNAL_EMOJIS;
            mike = zulu.toString;
            zulu = mike.bind(zulu)();
            mike = {};
            verify = oscar[options];
            verify = yankee.bind(golf)(verify);
            romeo = verify.intl;
            offset = romeo.string;
            verify = oscar[options];
            verify = yankee.bind(golf)(verify);
            verify = verify.t;
            verify = verify.+bxf3N;
            verify = offset.bind(romeo)(verify);
            mike['title'] = verify;
            verify = oscar[options];
            verify = yankee.bind(golf)(verify);
            verify = verify.t;
            verify = verify.POeVIi;
            mike['description'] = verify;
            verify = _closure1_slot2;
            verify = verify.USE_EXTERNAL_EMOJIS;
            mike['flag'] = verify;
            entity[zulu] = mike;
            mike = _closure1_slot2;
            zulu = mike.USE_EXTERNAL_STICKERS;
            mike = zulu.toString;
            zulu = mike.bind(zulu)();
            mike = {};
            verify = oscar[options];
            verify = yankee.bind(golf)(verify);
            romeo = verify.intl;
            offset = romeo.string;
            verify = oscar[options];
            verify = yankee.bind(golf)(verify);
            verify = verify.t;
            verify = verify.ERNhYW;
            verify = offset.bind(romeo)(verify);
            mike['title'] = verify;
            verify = oscar[options];
            verify = yankee.bind(golf)(verify);
            verify = verify.t;
            verify = verify.AdXVhI;
            mike['description'] = verify;
            verify = _closure1_slot2;
            verify = verify.USE_EXTERNAL_STICKERS;
            mike['flag'] = verify;
            entity[zulu] = mike;
            mike = _closure1_slot2;
            zulu = mike.MENTION_EVERYONE;
            mike = zulu.toString;
            zulu = mike.bind(zulu)();
            mike = {};
            verify = oscar[options];
            verify = yankee.bind(golf)(verify);
            romeo = verify.intl;
            offset = romeo.string;
            verify = oscar[options];
            verify = yankee.bind(golf)(verify);
            verify = verify.t;
            verify = verify.Y78KGB;
            verify = offset.bind(romeo)(verify);
            mike['title'] = verify;
            verify = oscar[options];
            verify = yankee.bind(golf)(verify);
            verify = verify.t;
            verify = verify.ryj6Nz;
            mike['description'] = verify;
            verify = _closure1_slot2;
            verify = verify.MENTION_EVERYONE;
            mike['flag'] = verify;
            entity[zulu] = mike;
            mike = _closure1_slot2;
            zulu = mike.MANAGE_MESSAGES;
            mike = zulu.toString;
            zulu = mike.bind(zulu)();
            mike = {};
            verify = oscar[options];
            verify = yankee.bind(golf)(verify);
            romeo = verify.intl;
            offset = romeo.string;
            verify = oscar[options];
            verify = yankee.bind(golf)(verify);
            verify = verify.t;
            verify = verify.6lU9xM;
            verify = offset.bind(romeo)(verify);
            mike['title'] = verify;
            verify = oscar[options];
            verify = yankee.bind(golf)(verify);
            verify = verify.t;
            verify = verify.RXMG//;
            mike['description'] = verify;
            verify = _closure1_slot2;
            verify = verify.MANAGE_MESSAGES;
            mike['flag'] = verify;
            entity[zulu] = mike;
            mike = _closure1_slot2;
            zulu = mike.READ_MESSAGE_HISTORY;
            mike = zulu.toString;
            zulu = mike.bind(zulu)();
            mike = {};
            verify = oscar[options];
            verify = yankee.bind(golf)(verify);
            romeo = verify.intl;
            offset = romeo.string;
            verify = oscar[options];
            verify = yankee.bind(golf)(verify);
            verify = verify.t;
            verify = verify.l9ufaW;
            verify = offset.bind(romeo)(verify);
            mike['title'] = verify;
            verify = oscar[options];
            verify = yankee.bind(golf)(verify);
            verify = verify.t;
            verify = verify.rmHPFR;
            mike['description'] = verify;
            verify = _closure1_slot2;
            verify = verify.READ_MESSAGE_HISTORY;
            mike['flag'] = verify;
            entity[zulu] = mike;
            mike = _closure1_slot2;
            zulu = mike.SEND_TTS_MESSAGES;
            mike = zulu.toString;
            zulu = mike.bind(zulu)();
            mike = {};
            verify = oscar[options];
            verify = yankee.bind(golf)(verify);
            romeo = verify.intl;
            offset = romeo.string;
            verify = oscar[options];
            verify = yankee.bind(golf)(verify);
            verify = verify.t;
            verify = verify.mMbwh4;
            verify = offset.bind(romeo)(verify);
            mike['title'] = verify;
            verify = oscar[options];
            verify = yankee.bind(golf)(verify);
            verify = verify.t;
            verify = verify.D6x8Nj;
            mike['description'] = verify;
            verify = _closure1_slot2;
            verify = verify.SEND_TTS_MESSAGES;
            mike['flag'] = verify;
            entity[zulu] = mike;
            mike = _closure1_slot2;
            zulu = mike.USE_APPLICATION_COMMANDS;
            mike = zulu.toString;
            zulu = mike.bind(zulu)();
            mike = {};
            verify = oscar[options];
            verify = yankee.bind(golf)(verify);
            romeo = verify.intl;
            offset = romeo.string;
            verify = oscar[options];
            verify = yankee.bind(golf)(verify);
            verify = verify.t;
            verify = verify.nkoPOj;
            verify = offset.bind(romeo)(verify);
            mike['title'] = verify;
            verify = oscar[options];
            verify = yankee.bind(golf)(verify);
            verify = verify.t;
            verify = verify.pJrJ39;
            mike['description'] = verify;
            verify = _closure1_slot2;
            verify = verify.USE_APPLICATION_COMMANDS;
            mike['flag'] = verify;
            entity[zulu] = mike;
            mike = _closure1_slot2;
            zulu = mike.USE_EXTERNAL_APPS;
            mike = zulu.toString;
            zulu = mike.bind(zulu)();
            mike = {};
            verify = oscar[options];
            verify = yankee.bind(golf)(verify);
            romeo = verify.intl;
            offset = romeo.string;
            verify = oscar[options];
            verify = yankee.bind(golf)(verify);
            verify = verify.t;
            verify = verify.TtA5rK;
            verify = offset.bind(romeo)(verify);
            mike['title'] = verify;
            verify = oscar[options];
            verify = yankee.bind(golf)(verify);
            verify = verify.t;
            verify = verify.mzLoDQ;
            mike['description'] = verify;
            verify = _closure1_slot2;
            verify = verify.USE_EXTERNAL_APPS;
            mike['flag'] = verify;
            entity[zulu] = mike;
            mike = _closure1_slot2;
            zulu = mike.SEND_VOICE_MESSAGES;
            mike = zulu.toString;
            zulu = mike.bind(zulu)();
            mike = {};
            verify = oscar[options];
            verify = yankee.bind(golf)(verify);
            romeo = verify.intl;
            offset = romeo.string;
            verify = oscar[options];
            verify = yankee.bind(golf)(verify);
            verify = verify.t;
            verify = verify.WlWSBQ;
            verify = offset.bind(romeo)(verify);
            mike['title'] = verify;
            verify = oscar[options];
            verify = yankee.bind(golf)(verify);
            verify = verify.t;
            verify = verify.pDuyi4;
            mike['description'] = verify;
            verify = _closure1_slot2;
            verify = verify.SEND_VOICE_MESSAGES;
            mike['flag'] = verify;
            entity[zulu] = mike;
            mike = _closure1_slot2;
            zulu = mike.USE_CLYDE_AI;
            mike = zulu.toString;
            zulu = mike.bind(zulu)();
            mike = {};
            verify = oscar[options];
            verify = yankee.bind(golf)(verify);
            romeo = verify.intl;
            offset = romeo.string;
            verify = oscar[options];
            verify = yankee.bind(golf)(verify);
            verify = verify.t;
            verify = verify.8eeEZm;
            verify = offset.bind(romeo)(verify);
            mike['title'] = verify;
            verify = oscar[options];
            verify = yankee.bind(golf)(verify);
            verify = verify.t;
            verify = verify.Tx5TjI;
            mike['description'] = verify;
            verify = _closure1_slot2;
            verify = verify.USE_CLYDE_AI;
            mike['flag'] = verify;
            entity[zulu] = mike;
            mike = _closure1_slot2;
            zulu = mike.SEND_POLLS;
            mike = zulu.toString;
            zulu = mike.bind(zulu)();
            mike = {};
            verify = oscar[options];
            verify = yankee.bind(golf)(verify);
            romeo = verify.intl;
            offset = romeo.string;
            verify = oscar[options];
            verify = yankee.bind(golf)(verify);
            verify = verify.t;
            verify = verify.UMQ7W1;
            verify = offset.bind(romeo)(verify);
            mike['title'] = verify;
            verify = oscar[options];
            verify = yankee.bind(golf)(verify);
            verify = verify.t;
            verify = verify.Xl6W+P;
            mike['description'] = verify;
            verify = _closure1_slot2;
            verify = verify.SEND_POLLS;
            mike['flag'] = verify;
            entity[zulu] = mike;
            mike = _closure1_slot2;
            zulu = mike.CONNECT;
            mike = zulu.toString;
            zulu = mike.bind(zulu)();
            mike = {};
            verify = oscar[options];
            verify = yankee.bind(golf)(verify);
            romeo = verify.intl;
            offset = romeo.string;
            verify = oscar[options];
            verify = yankee.bind(golf)(verify);
            verify = verify.t;
            verify = verify.S0W8Z2;
            verify = offset.bind(romeo)(verify);
            mike['title'] = verify;
            verify = oscar[options];
            verify = yankee.bind(golf)(verify);
            verify = verify.t;
            verify = verify.3GCm/f;
            mike['description'] = verify;
            verify = _closure1_slot2;
            verify = verify.CONNECT;
            mike['flag'] = verify;
            entity[zulu] = mike;
            mike = _closure1_slot2;
            zulu = mike.SPEAK;
            mike = zulu.toString;
            zulu = mike.bind(zulu)();
            mike = {};
            verify = oscar[options];
            verify = yankee.bind(golf)(verify);
            romeo = verify.intl;
            offset = romeo.string;
            verify = oscar[options];
            verify = yankee.bind(golf)(verify);
            verify = verify.t;
            verify = verify.8w1tIS;
            verify = offset.bind(romeo)(verify);
            mike['title'] = verify;
            verify = oscar[options];
            verify = yankee.bind(golf)(verify);
            verify = verify.t;
            verify = verify.y4MncH;
            mike['description'] = verify;
            verify = _closure1_slot2;
            verify = verify.SPEAK;
            mike['flag'] = verify;
            entity[zulu] = mike;
            mike = _closure1_slot2;
            zulu = mike.STREAM;
            mike = zulu.toString;
            zulu = mike.bind(zulu)();
            mike = {};
            verify = oscar[options];
            verify = yankee.bind(golf)(verify);
            romeo = verify.intl;
            offset = romeo.string;
            verify = oscar[options];
            verify = yankee.bind(golf)(verify);
            verify = verify.t;
            verify = verify.FlNoSU;
            verify = offset.bind(romeo)(verify);
            mike['title'] = verify;
            verify = oscar[options];
            verify = yankee.bind(golf)(verify);
            verify = verify.t;
            verify = verify.6Z0j9v;
            mike['description'] = verify;
            verify = _closure1_slot2;
            verify = verify.STREAM;
            mike['flag'] = verify;
            entity[zulu] = mike;
            mike = _closure1_slot2;
            zulu = mike.USE_EMBEDDED_ACTIVITIES;
            mike = zulu.toString;
            zulu = mike.bind(zulu)();
            mike = {};
            verify = oscar[options];
            verify = yankee.bind(golf)(verify);
            romeo = verify.intl;
            offset = romeo.string;
            verify = oscar[options];
            verify = yankee.bind(golf)(verify);
            verify = verify.t;
            verify = verify.rLSGen;
            verify = offset.bind(romeo)(verify);
            mike['title'] = verify;
            verify = oscar[options];
            verify = yankee.bind(golf)(verify);
            verify = verify.t;
            verify = verify.BEqU5O;
            mike['description'] = verify;
            verify = _closure1_slot2;
            verify = verify.USE_EMBEDDED_ACTIVITIES;
            mike['flag'] = verify;
            entity[zulu] = mike;
            mike = _closure1_slot2;
            zulu = mike.USE_SOUNDBOARD;
            mike = zulu.toString;
            zulu = mike.bind(zulu)();
            mike = {};
            verify = oscar[options];
            verify = yankee.bind(golf)(verify);
            offset = verify.intl;
            verify = offset.string;
            oscar = oscar[options];
            oscar = yankee.bind(golf)(oscar);
            oscar = oscar.t;
            oscar = oscar.Bco7ND;
            oscar = verify.bind(offset)(oscar);
            mike['title'] = oscar;
            verify = null;
            offset = verify == report;
            oscar = undefined;
            if(offset) { _fun00004_ip = 4188; continue _fun00003 }
 4182:
            oscar = report.SOUNDBOARD_DESCRIPTION;
 4188:
            if(!(verify == oscar)) { _fun00004_ip = 4220; continue _fun00003 }
 4192:
            yankee = _closure1_slot0;
            offset = _closure1_slot1;
            offset = offset[options];
            offset = yankee.bind(golf)(offset);
            offset = offset.t;
            oscar = offset.+8p+fX;
 4220:
            mike['description'] = oscar;
            oscar = _closure1_slot2;
            oscar = oscar.USE_SOUNDBOARD;
            mike['flag'] = oscar;
            entity[zulu] = mike;
            mike = _closure1_slot2;
            zulu = mike.USE_EXTERNAL_SOUNDS;
            mike = zulu.toString;
            zulu = mike.bind(zulu)();
            mike = {};
            romeo = _closure1_slot0;
            oscar = _closure1_slot1;
            offset = oscar[options];
            offset = romeo.bind(golf)(offset);
            foxtrot = offset.intl;
            yankee = foxtrot.string;
            offset = oscar[options];
            offset = romeo.bind(golf)(offset);
            offset = offset.t;
            offset = offset.pwaVJy;
            offset = yankee.bind(foxtrot)(offset);
            mike['title'] = offset;
            offset = oscar[options];
            offset = romeo.bind(golf)(offset);
            offset = offset.t;
            offset = offset.qDpPtb;
            mike['description'] = offset;
            offset = _closure1_slot2;
            offset = offset.USE_EXTERNAL_SOUNDS;
            mike['flag'] = offset;
            entity[zulu] = mike;
            mike = _closure1_slot2;
            zulu = mike.USE_VAD;
            mike = zulu.toString;
            zulu = mike.bind(zulu)();
            mike = {};
            offset = oscar[options];
            offset = romeo.bind(golf)(offset);
            foxtrot = offset.intl;
            yankee = foxtrot.string;
            offset = oscar[options];
            offset = romeo.bind(golf)(offset);
            offset = offset.t;
            offset = offset.08zAV1;
            offset = yankee.bind(foxtrot)(offset);
            mike['title'] = offset;
            offset = oscar[options];
            offset = romeo.bind(golf)(offset);
            offset = offset.t;
            offset = offset.7CHjmZ;
            mike['description'] = offset;
            offset = _closure1_slot2;
            offset = offset.USE_VAD;
            mike['flag'] = offset;
            entity[zulu] = mike;
            mike = _closure1_slot2;
            zulu = mike.PRIORITY_SPEAKER;
            mike = zulu.toString;
            zulu = mike.bind(zulu)();
            mike = {};
            offset = oscar[options];
            offset = romeo.bind(golf)(offset);
            yankee = offset.intl;
            offset = yankee.string;
            oscar = oscar[options];
            oscar = romeo.bind(golf)(oscar);
            oscar = oscar.t;
            oscar = oscar.BVK71t;
            oscar = offset.bind(yankee)(oscar);
            mike['title'] = oscar;
            offset = verify == report;
            oscar = undefined;
            if(offset) { _fun00004_ip = 4562; continue _fun00003 }
 4556:
            oscar = report.PRIORITY_SPEAKER_DESCRIPTION;
 4562:
            if(!(verify == oscar)) { _fun00004_ip = 4594; continue _fun00003 }
 4566:
            offset = _closure1_slot0;
            verify = _closure1_slot1;
            verify = verify[options];
            verify = offset.bind(golf)(verify);
            verify = verify.t;
            oscar = verify.OJkrrq;
 4594:
            mike['description'] = oscar;
            oscar = _closure1_slot2;
            oscar = oscar.PRIORITY_SPEAKER;
            mike['flag'] = oscar;
            entity[zulu] = mike;
            mike = _closure1_slot2;
            zulu = mike.MUTE_MEMBERS;
            mike = zulu.toString;
            zulu = mike.bind(zulu)();
            mike = {};
            verify = _closure1_slot0;
            oscar = _closure1_slot1;
            offset = oscar[options];
            offset = verify.bind(golf)(offset);
            romeo = offset.intl;
            yankee = romeo.string;
            offset = oscar[options];
            offset = verify.bind(golf)(offset);
            offset = offset.t;
            offset = offset.8EI309;
            offset = yankee.bind(romeo)(offset);
            mike['title'] = offset;
            offset = oscar[options];
            offset = verify.bind(golf)(offset);
            offset = offset.t;
            offset = offset.PIhGAw;
            mike['description'] = offset;
            offset = _closure1_slot2;
            offset = offset.MUTE_MEMBERS;
            mike['flag'] = offset;
            entity[zulu] = mike;
            mike = _closure1_slot2;
            zulu = mike.DEAFEN_MEMBERS;
            mike = zulu.toString;
            zulu = mike.bind(zulu)();
            mike = {};
            offset = oscar[options];
            offset = verify.bind(golf)(offset);
            romeo = offset.intl;
            yankee = romeo.string;
            offset = oscar[options];
            offset = verify.bind(golf)(offset);
            offset = offset.t;
            offset = offset.9L47Fh;
            offset = yankee.bind(romeo)(offset);
            mike['title'] = offset;
            offset = oscar[options];
            offset = verify.bind(golf)(offset);
            offset = offset.t;
            offset = offset.FQr3+v;
            mike['description'] = offset;
            offset = _closure1_slot2;
            offset = offset.DEAFEN_MEMBERS;
            mike['flag'] = offset;
            entity[zulu] = mike;
            mike = _closure1_slot2;
            zulu = mike.MOVE_MEMBERS;
            mike = zulu.toString;
            zulu = mike.bind(zulu)();
            mike = {};
            offset = oscar[options];
            offset = verify.bind(golf)(offset);
            romeo = offset.intl;
            yankee = romeo.string;
            offset = oscar[options];
            offset = verify.bind(golf)(offset);
            offset = offset.t;
            offset = offset.YtjJPT;
            offset = yankee.bind(romeo)(offset);
            mike['title'] = offset;
            offset = oscar[options];
            offset = verify.bind(golf)(offset);
            offset = offset.t;
            offset = offset.SEe0Gh;
            mike['description'] = offset;
            offset = _closure1_slot2;
            offset = offset.MOVE_MEMBERS;
            mike['flag'] = offset;
            entity[zulu] = mike;
            mike = _closure1_slot2;
            zulu = mike.REQUEST_TO_SPEAK;
            mike = zulu.toString;
            zulu = mike.bind(zulu)();
            mike = {};
            offset = oscar[options];
            offset = verify.bind(golf)(offset);
            romeo = offset.intl;
            yankee = romeo.string;
            offset = oscar[options];
            offset = verify.bind(golf)(offset);
            offset = offset.t;
            offset = offset.5kicT0;
            offset = yankee.bind(romeo)(offset);
            mike['title'] = offset;
            offset = oscar[options];
            offset = verify.bind(golf)(offset);
            offset = offset.t;
            offset = offset.yNE+Q0;
            mike['description'] = offset;
            offset = _closure1_slot2;
            offset = offset.REQUEST_TO_SPEAK;
            mike['flag'] = offset;
            offset = true;
            mike['isExperimental'] = offset;
            entity[zulu] = mike;
            mike = _closure1_slot2;
            zulu = mike.ADMINISTRATOR;
            mike = zulu.toString;
            zulu = mike.bind(zulu)();
            mike = {};
            offset = oscar[options];
            offset = verify.bind(golf)(offset);
            romeo = offset.intl;
            yankee = romeo.string;
            offset = oscar[options];
            offset = verify.bind(golf)(offset);
            offset = offset.t;
            offset = offset.PGvZqa;
            offset = yankee.bind(romeo)(offset);
            mike['title'] = offset;
            oscar = oscar[options];
            oscar = verify.bind(golf)(oscar);
            oscar = oscar.t;
            oscar = oscar.UJxMrK;
            verify = 'string';
            oscar = typeof oscar;
            if(!(verify !== oscar)) { _fun00004_ip = 5242; continue _fun00003 }
 5185:
            verify = _closure1_slot0;
            oscar = _closure1_slot1;
            offset = oscar[options];
            offset = verify.bind(golf)(offset);
            yankee = offset.intl;
            offset = yankee.format;
            oscar = oscar[options];
            oscar = verify.bind(golf)(oscar);
            oscar = oscar.t;
            verify = oscar.UJxMrK;
            oscar = {};
            oscar = offset.bind(yankee)(verify, oscar);
            _fun00004_ip = 5270; continue _fun00003;
 5242:
            offset = _closure1_slot0;
            verify = _closure1_slot1;
            verify = verify[options];
            verify = offset.bind(golf)(verify);
            verify = verify.t;
            oscar = verify.UJxMrK;
 5270:
            mike['description'] = oscar;
            oscar = _closure1_slot2;
            oscar = oscar.ADMINISTRATOR;
            mike['flag'] = oscar;
            entity[zulu] = mike;
            mike = _closure1_slot2;
            zulu = mike.MANAGE_EVENTS;
            mike = zulu.toString;
            zulu = mike.bind(zulu)();
            mike = {};
            verify = _closure1_slot0;
            oscar = _closure1_slot1;
            offset = oscar[options];
            offset = verify.bind(golf)(offset);
            romeo = offset.intl;
            yankee = romeo.string;
            offset = oscar[options];
            offset = verify.bind(golf)(offset);
            offset = offset.t;
            offset = offset.HIgA5e;
            offset = yankee.bind(romeo)(offset);
            mike['title'] = offset;
            offset = oscar[options];
            offset = verify.bind(golf)(offset);
            offset = offset.t;
            offset = offset.SL+qgI;
            mike['description'] = offset;
            offset = _closure1_slot2;
            offset = offset.MANAGE_EVENTS;
            mike['flag'] = offset;
            entity[zulu] = mike;
            mike = _closure1_slot2;
            zulu = mike.CREATE_EVENTS;
            mike = zulu.toString;
            zulu = mike.bind(zulu)();
            mike = {};
            offset = oscar[options];
            offset = verify.bind(golf)(offset);
            romeo = offset.intl;
            yankee = romeo.string;
            offset = oscar[options];
            offset = verify.bind(golf)(offset);
            offset = offset.t;
            offset = offset.qyjZub;
            offset = yankee.bind(romeo)(offset);
            mike['title'] = offset;
            oscar = oscar[options];
            oscar = verify.bind(golf)(oscar);
            oscar = oscar.t;
            oscar = oscar.bQEFJS;
            mike['description'] = oscar;
            oscar = _closure1_slot2;
            oscar = oscar.CREATE_EVENTS;
            mike['flag'] = oscar;
            entity[zulu] = mike;
            mike = _closure1_slot2;
            zulu = mike.MANAGE_THREADS;
            mike = zulu.toString;
            zulu = mike.bind(zulu)();
            mike = {};
            oscar = report.showForumPermissions;
            romeo = _closure1_slot0;
            verify = _closure1_slot1;
            offset = verify[options];
            offset = romeo.bind(golf)(offset);
            yankee = offset.intl;
            offset = yankee.string;
            verify = verify[options];
            verify = romeo.bind(golf)(verify);
            verify = verify.t;
            if(oscar) { _fun00004_ip = 5612; continue _fun00003 }
 5599:
            oscar = verify.kEqgr6;
            oscar = offset.bind(yankee)(oscar);
            _fun00004_ip = 5623; continue _fun00003;
 5612:
            verify = verify.QKe7Q0;
            oscar = offset.bind(yankee)(verify);
 5623:
            mike['title'] = oscar;
            oscar = report.showForumPermissions;
            offset = _closure1_slot0;
            verify = _closure1_slot1;
            verify = verify[options];
            verify = offset.bind(golf)(verify);
            verify = verify.t;
            if(oscar) { _fun00004_ip = 5666; continue _fun00003 }
 5658:
            oscar = verify.AKdc4O;
            _fun00004_ip = 5672; continue _fun00003;
 5666:
            oscar = verify.QAxIIi;
 5672:
            mike['description'] = oscar;
            oscar = _closure1_slot2;
            oscar = oscar.MANAGE_THREADS;
            mike['flag'] = oscar;
            entity[zulu] = mike;
            mike = _closure1_slot2;
            zulu = mike.CREATE_PUBLIC_THREADS;
            mike = zulu.toString;
            zulu = mike.bind(zulu)();
            mike = {};
            verify = _closure1_slot0;
            oscar = _closure1_slot1;
            offset = oscar[options];
            offset = verify.bind(golf)(offset);
            romeo = offset.intl;
            yankee = romeo.string;
            offset = oscar[options];
            offset = verify.bind(golf)(offset);
            offset = offset.t;
            offset = offset.25rKnZ;
            offset = yankee.bind(romeo)(offset);
            mike['title'] = offset;
            offset = oscar[options];
            offset = verify.bind(golf)(offset);
            offset = offset.t;
            offset = offset.ODCYj4;
            mike['description'] = offset;
            offset = _closure1_slot2;
            offset = offset.CREATE_PUBLIC_THREADS;
            mike['flag'] = offset;
            entity[zulu] = mike;
            mike = _closure1_slot2;
            zulu = mike.CREATE_PRIVATE_THREADS;
            mike = zulu.toString;
            zulu = mike.bind(zulu)();
            mike = {};
            offset = oscar[options];
            offset = verify.bind(golf)(offset);
            romeo = offset.intl;
            yankee = romeo.string;
            offset = oscar[options];
            offset = verify.bind(golf)(offset);
            offset = offset.t;
            offset = offset.QwbTSU;
            offset = yankee.bind(romeo)(offset);
            mike['title'] = offset;
            oscar = oscar[options];
            oscar = verify.bind(golf)(oscar);
            oscar = oscar.t;
            oscar = oscar.G/cc3t;
            mike['description'] = oscar;
            oscar = _closure1_slot2;
            oscar = oscar.CREATE_PRIVATE_THREADS;
            mike['flag'] = oscar;
            entity[zulu] = mike;
            mike = _closure1_slot2;
            zulu = mike.SEND_MESSAGES_IN_THREADS;
            mike = zulu.toString;
            zulu = mike.bind(zulu)();
            mike = {};
            oscar = report.showForumPermissions;
            romeo = _closure1_slot0;
            verify = _closure1_slot1;
            offset = verify[options];
            offset = romeo.bind(golf)(offset);
            yankee = offset.intl;
            offset = yankee.string;
            verify = verify[options];
            verify = romeo.bind(golf)(verify);
            verify = verify.t;
            if(oscar) { _fun00004_ip = 6014; continue _fun00003 }
 6001:
            oscar = verify.fTE74u;
            oscar = offset.bind(yankee)(oscar);
            _fun00004_ip = 6025; continue _fun00003;
 6014:
            verify = verify.5QlVGx;
            oscar = offset.bind(yankee)(verify);
 6025:
            mike['title'] = oscar;
            report = report.showForumPermissions;
            verify = _closure1_slot0;
            oscar = _closure1_slot1;
            oscar = oscar[options];
            oscar = verify.bind(golf)(oscar);
            oscar = oscar.t;
            if(report) { _fun00004_ip = 6068; continue _fun00003 }
 6060:
            report = oscar.6pyXvr;
            _fun00004_ip = 6074; continue _fun00003;
 6068:
            report = oscar.C2ZPEx;
 6074:
            mike['description'] = report;
            report = _closure1_slot2;
            report = report.SEND_MESSAGES_IN_THREADS;
            mike['flag'] = report;
            entity[zulu] = mike;
            mike = _closure1_slot2;
            zulu = mike.USE_CLYDE_AI;
            mike = zulu.toString;
            zulu = mike.bind(zulu)();
            mike = {};
            oscar = _closure1_slot0;
            report = _closure1_slot1;
            verify = report[options];
            verify = oscar.bind(golf)(verify);
            yankee = verify.intl;
            offset = yankee.string;
            verify = report[options];
            verify = oscar.bind(golf)(verify);
            verify = verify.t;
            verify = verify.8eeEZm;
            verify = offset.bind(yankee)(verify);
            mike['title'] = verify;
            verify = report[options];
            verify = oscar.bind(golf)(verify);
            verify = verify.t;
            verify = verify.Tx5TjI;
            mike['description'] = verify;
            verify = _closure1_slot2;
            verify = verify.USE_CLYDE_AI;
            mike['flag'] = verify;
            entity[zulu] = mike;
            mike = _closure1_slot2;
            zulu = mike.SET_VOICE_CHANNEL_STATUS;
            mike = zulu.toString;
            zulu = mike.bind(zulu)();
            mike = {};
            verify = report[options];
            verify = oscar.bind(golf)(verify);
            yankee = verify.intl;
            offset = yankee.string;
            verify = report[options];
            verify = oscar.bind(golf)(verify);
            verify = verify.t;
            verify = verify.VBwkUV;
            verify = offset.bind(yankee)(verify);
            mike['title'] = verify;
            report = report[options];
            report = oscar.bind(golf)(report);
            report = report.t;
            report = report.C6BzX1;
            mike['description'] = report;
            tango = _closure1_slot2;
            tango = tango.SET_VOICE_CHANNEL_STATUS;
            mike['flag'] = tango;
            entity[zulu] = mike;
            return entity;
        }
    };
    var _closure1_slot5 = tango;
    entity = function(argFoo, argBar) { // Original name: generateGuildGeneralSection
        _fun00005: for(var _fun00006_ip = 0; ; ) switch(_fun00006_ip) {
 0:
            entity = _closure1_slot2;
            entity = entity.VIEW_CHANNEL;
            oscar = new Array(7);
            oscar[0] = entity;
            entity = _closure1_slot2;
            entity = entity.MANAGE_CHANNELS;
            oscar[1] = entity;
            entity = _closure1_slot2;
            entity = entity.MANAGE_ROLES;
            oscar[2] = entity;
            entity = _closure1_slot2;
            entity = entity.CREATE_GUILD_EXPRESSIONS;
            oscar[3] = entity;
            entity = _closure1_slot2;
            entity = entity.MANAGE_GUILD_EXPRESSIONS;
            oscar[4] = entity;
            entity = _closure1_slot2;
            entity = entity.VIEW_AUDIT_LOG;
            oscar[5] = entity;
            entity = _closure1_slot2;
            entity = entity.VIEW_GUILD_ANALYTICS;
            oscar[6] = entity;
            entity = argBar;
            entity = entity.showCreatorMonetizationAnalyticsPermission;
            if(!entity) { _fun00006_ip = 137; continue _fun00005 }
 117:
            mike = oscar.push;
            entity = _closure1_slot2;
            entity = entity.VIEW_CREATOR_MONETIZATION_ANALYTICS;
            entity = mike.bind(oscar)(entity);
 137:
            mike = oscar.push;
            entity = _closure1_slot2;
            entity = entity.MANAGE_WEBHOOKS;
            entity = mike.bind(oscar)(entity);
            mike = oscar.push;
            entity = _closure1_slot2;
            entity = entity.MANAGE_GUILD;
            entity = mike.bind(oscar)(entity);
            zulu = _closure1_slot3;
            entity = {};
            verify = _closure1_slot0;
            offset = _closure1_slot1;
            report = 1;
            golf = offset[report];
            mike = undefined;
            golf = verify.bind(mike)(golf);
            options = golf.intl;
            golf = options.string;
            report = offset[report];
            report = verify.bind(mike)(report);
            report = report.t;
            report = report.mYck+P;
            report = golf.bind(options)(report);
            entity['title'] = report;
            report = _closure1_slot4;
            tango = argFoo;
            tango = report.bind(mike)(oscar, tango);
            entity['permissions'] = tango;
            mike = zulu.bind(mike)(entity);
            return entity;
        }
    };
    var _closure1_slot6 = entity;
    entity = function(argFoo) { // Original name: generateGuildMembershipSection
        entity = _closure1_slot2;
        entity = entity.CREATE_INSTANT_INVITE;
        oscar = new Array(6);
        oscar[0] = entity;
        entity = _closure1_slot2;
        entity = entity.CHANGE_NICKNAME;
        oscar[1] = entity;
        entity = _closure1_slot2;
        entity = entity.MANAGE_NICKNAMES;
        oscar[2] = entity;
        entity = _closure1_slot2;
        entity = entity.KICK_MEMBERS;
        oscar[3] = entity;
        entity = _closure1_slot2;
        entity = entity.BAN_MEMBERS;
        oscar[4] = entity;
        entity = _closure1_slot2;
        entity = entity.MODERATE_MEMBERS;
        oscar[5] = entity;
        zulu = _closure1_slot3;
        entity = {};
        verify = _closure1_slot0;
        offset = _closure1_slot1;
        report = 1;
        golf = offset[report];
        mike = undefined;
        golf = verify.bind(mike)(golf);
        options = golf.intl;
        golf = options.string;
        report = offset[report];
        report = verify.bind(mike)(report);
        report = report.t;
        report = report.Ny49TE;
        report = golf.bind(options)(report);
        entity['title'] = report;
        report = _closure1_slot4;
        tango = argFoo;
        tango = report.bind(mike)(oscar, tango);
        entity['permissions'] = tango;
        mike = zulu.bind(mike)(entity);
        return entity;
    };
    var _closure1_slot7 = entity;
    entity = function(argFoo, argBar) { // Original name: generateGuildTextSection
        _fun00007: for(var _fun00008_ip = 0; ; ) switch(_fun00008_ip) {
 0:
            mike = argBar;
            zulu = _closure1_slot2;
            zulu = zulu.SEND_MESSAGES;
            golf = new Array(18);
            golf[0] = zulu;
            zulu = _closure1_slot2;
            zulu = zulu.SEND_MESSAGES_IN_THREADS;
            golf[1] = zulu;
            zulu = _closure1_slot2;
            zulu = zulu.CREATE_PUBLIC_THREADS;
            golf[2] = zulu;
            zulu = _closure1_slot2;
            zulu = zulu.CREATE_PRIVATE_THREADS;
            golf[3] = zulu;
            zulu = _closure1_slot2;
            zulu = zulu.EMBED_LINKS;
            golf[4] = zulu;
            zulu = _closure1_slot2;
            zulu = zulu.ATTACH_FILES;
            golf[5] = zulu;
            zulu = _closure1_slot2;
            zulu = zulu.ADD_REACTIONS;
            golf[6] = zulu;
            zulu = _closure1_slot2;
            zulu = zulu.USE_EXTERNAL_EMOJIS;
            golf[7] = zulu;
            zulu = _closure1_slot2;
            zulu = zulu.USE_EXTERNAL_STICKERS;
            golf[8] = zulu;
            zulu = _closure1_slot2;
            zulu = zulu.USE_EXTERNAL_SOUNDS;
            golf[9] = zulu;
            zulu = _closure1_slot2;
            zulu = zulu.MENTION_EVERYONE;
            golf[10] = zulu;
            zulu = _closure1_slot2;
            zulu = zulu.MANAGE_MESSAGES;
            golf[11] = zulu;
            zulu = _closure1_slot2;
            zulu = zulu.MANAGE_THREADS;
            golf[12] = zulu;
            zulu = _closure1_slot2;
            zulu = zulu.READ_MESSAGE_HISTORY;
            golf[13] = zulu;
            zulu = _closure1_slot2;
            zulu = zulu.SEND_TTS_MESSAGES;
            golf[14] = zulu;
            zulu = _closure1_slot2;
            zulu = zulu.SEND_VOICE_MESSAGES;
            golf[15] = zulu;
            zulu = _closure1_slot2;
            zulu = zulu.USE_CLYDE_AI;
            golf[16] = zulu;
            zulu = _closure1_slot2;
            zulu = zulu.SEND_POLLS;
            golf[17] = zulu;
            report = mike.inSoundmojiExperiment;
            zulu = golf;
            if(report) { _fun00008_ip = 293; continue _fun00007 }
 276:
            oscar = golf.filter;
            report = function(argFoo) {
                entity = _closure1_slot2;
                mike = entity.USE_EXTERNAL_SOUNDS;
                entity = argFoo;
                entity = entity !== mike;
                return entity;
            };
            zulu = oscar.bind(golf)(report);
 293:
            mike = mike.showClydeAIPermissions;
            oscar = zulu;
            if(mike) { _fun00008_ip = 322; continue _fun00007 }
 305:
            mike = zulu.filter;
            entity = function(argFoo) {
                entity = _closure1_slot2;
                mike = entity.USE_CLYDE_AI;
                entity = argFoo;
                entity = entity !== mike;
                return entity;
            };
            oscar = mike.bind(zulu)(entity);
 322:
            zulu = _closure1_slot3;
            entity = {};
            verify = _closure1_slot0;
            offset = _closure1_slot1;
            report = 1;
            golf = offset[report];
            mike = undefined;
            golf = verify.bind(mike)(golf);
            options = golf.intl;
            golf = options.string;
            report = offset[report];
            report = verify.bind(mike)(report);
            report = report.t;
            report = report.cKobOz;
            report = golf.bind(options)(report);
            entity['title'] = report;
            report = _closure1_slot4;
            tango = argFoo;
            tango = report.bind(mike)(oscar, tango);
            entity['permissions'] = tango;
            mike = zulu.bind(mike)(entity);
            return entity;
        }
    };
    var _closure1_slot8 = entity;
    entity = function(argFoo) { // Original name: generateGuildVoiceSection
        entity = _closure1_slot2;
        entity = entity.CONNECT;
        oscar = new Array(11);
        oscar[0] = entity;
        entity = _closure1_slot2;
        entity = entity.SPEAK;
        oscar[1] = entity;
        entity = _closure1_slot2;
        entity = entity.STREAM;
        oscar[2] = entity;
        entity = _closure1_slot2;
        entity = entity.USE_SOUNDBOARD;
        oscar[3] = entity;
        entity = _closure1_slot2;
        entity = entity.USE_EXTERNAL_SOUNDS;
        oscar[4] = entity;
        entity = _closure1_slot2;
        entity = entity.USE_VAD;
        oscar[5] = entity;
        entity = _closure1_slot2;
        entity = entity.PRIORITY_SPEAKER;
        oscar[6] = entity;
        entity = _closure1_slot2;
        entity = entity.MUTE_MEMBERS;
        oscar[7] = entity;
        entity = _closure1_slot2;
        entity = entity.DEAFEN_MEMBERS;
        oscar[8] = entity;
        entity = _closure1_slot2;
        entity = entity.MOVE_MEMBERS;
        oscar[9] = entity;
        entity = _closure1_slot2;
        entity = entity.SET_VOICE_CHANNEL_STATUS;
        oscar[10] = entity;
        zulu = _closure1_slot3;
        entity = {};
        verify = _closure1_slot0;
        offset = _closure1_slot1;
        report = 1;
        golf = offset[report];
        mike = undefined;
        golf = verify.bind(mike)(golf);
        options = golf.intl;
        golf = options.string;
        report = offset[report];
        report = verify.bind(mike)(report);
        report = report.t;
        report = report.46Ra1d;
        report = golf.bind(options)(report);
        entity['title'] = report;
        report = _closure1_slot4;
        tango = argFoo;
        tango = report.bind(mike)(oscar, tango);
        entity['permissions'] = tango;
        mike = zulu.bind(mike)(entity);
        return entity;
    };
    var _closure1_slot9 = entity;
    entity = function(argFoo) { // Original name: generateGuildAppsSection
        entity = _closure1_slot2;
        entity = entity.USE_APPLICATION_COMMANDS;
        oscar = new Array(3);
        oscar[0] = entity;
        entity = _closure1_slot2;
        entity = entity.USE_EMBEDDED_ACTIVITIES;
        oscar[1] = entity;
        entity = _closure1_slot2;
        entity = entity.USE_EXTERNAL_APPS;
        oscar[2] = entity;
        zulu = _closure1_slot3;
        entity = {};
        verify = _closure1_slot0;
        offset = _closure1_slot1;
        report = 1;
        golf = offset[report];
        mike = undefined;
        golf = verify.bind(mike)(golf);
        options = golf.intl;
        golf = options.string;
        report = offset[report];
        report = verify.bind(mike)(report);
        report = report.t;
        report = report.rrh/W1;
        report = golf.bind(options)(report);
        entity['title'] = report;
        report = _closure1_slot4;
        tango = argFoo;
        tango = report.bind(mike)(oscar, tango);
        entity['permissions'] = tango;
        mike = zulu.bind(mike)(entity);
        return entity;
    };
    var _closure1_slot10 = entity;
    entity = global;
    verify = entity.Object;
    options = verify.defineProperty;
    report = {};
    entity = true;
    report['value'] = entity;
    entity = '__esModule';
    entity = options.bind(verify)(zulu, entity, report);
    entity = 0;
    report = golf[entity];
    entity = undefined;
    report = oscar.bind(entity)(report);
    report = report.Permissions;
    var _closure1_slot2 = report;
    report = 2;
    report = golf[report];
    golf = oscar.bind(entity)(report);
    oscar = golf.fileFinishedImporting;
    report = 'modules/permissions/PermissionUtils.tsx';
    report = oscar.bind(golf)(report);
    zulu['getGuildPermissionSpec'] = tango;
    tango = function(argFoo) { // Original name: generateGuildPermissionSpec
        _fun00009: for(var _fun00010_ip = 0; ; ) switch(_fun00010_ip) {
 0:
            offset = argFoo;
            entity = _closure1_slot5;
            report = undefined;
            options = entity.bind(report)(offset);
            entity = _closure1_slot6;
            mike = entity.bind(report)(options, offset);
            entity = new Array(5);
            entity[0] = mike;
            mike = _closure1_slot7;
            mike = mike.bind(report)(options);
            entity[1] = mike;
            mike = _closure1_slot8;
            mike = mike.bind(report)(options, offset);
            entity[2] = mike;
            mike = _closure1_slot9;
            mike = mike.bind(report)(options);
            entity[3] = mike;
            mike = _closure1_slot10;
            mike = mike.bind(report)(options);
            entity[4] = mike;
            mike = offset.showStageChannelPermissions;
            if(!mike) { _fun00010_ip = 217; continue _fun00009 }
 97:
            zulu = entity.push;
            golf = _closure1_slot3;
            mike = {};
            romeo = _closure1_slot0;
            foxtrot = _closure1_slot1;
            tango = 1;
            verify = foxtrot[tango];
            verify = romeo.bind(report)(verify);
            yankee = verify.intl;
            verify = yankee.string;
            tango = foxtrot[tango];
            tango = romeo.bind(report)(tango);
            tango = tango.t;
            tango = tango.yniaur;
            tango = verify.bind(yankee)(tango);
            mike['title'] = tango;
            verify = _closure1_slot4;
            tango = _closure1_slot2;
            yankee = tango.REQUEST_TO_SPEAK;
            tango = new Array(1);
            tango[0] = yankee;
            tango = verify.bind(report)(tango, options);
            mike['permissions'] = tango;
            tango = offset.showExperimental;
            tango = golf.bind(report)(mike, tango);
            mike = zulu.bind(entity)(mike);
 217:
            zulu = entity.push;
            tango = _closure1_slot3;
            mike = {};
            romeo = _closure1_slot0;
            foxtrot = _closure1_slot1;
            verify = 1;
            golf = foxtrot[verify];
            golf = romeo.bind(report)(golf);
            backup = golf.intl;
            yankee = backup.string;
            golf = foxtrot[verify];
            golf = romeo.bind(report)(golf);
            golf = golf.t;
            golf = golf.b8lplZ;
            golf = yankee.bind(backup)(golf);
            mike['title'] = golf;
            golf = _closure1_slot4;
            yankee = _closure1_slot2;
            backup = yankee.CREATE_EVENTS;
            yankee = new Array(2);
            yankee[0] = backup;
            backup = _closure1_slot2;
            backup = backup.MANAGE_EVENTS;
            yankee[1] = backup;
            yankee = golf.bind(report)(yankee, options);
            mike['permissions'] = yankee;
            offset = offset.showExperimental;
            offset = tango.bind(report)(mike, offset);
            mike = zulu.bind(entity)(mike);
            zulu = entity.push;
            mike = {};
            offset = foxtrot[verify];
            offset = romeo.bind(report)(offset);
            yankee = offset.intl;
            offset = yankee.string;
            verify = foxtrot[verify];
            verify = romeo.bind(report)(verify);
            verify = verify.t;
            verify = verify.3uI5CQ;
            verify = offset.bind(yankee)(verify);
            mike['title'] = verify;
            oscar = _closure1_slot2;
            verify = oscar.ADMINISTRATOR;
            oscar = new Array(1);
            oscar[0] = verify;
            oscar = golf.bind(report)(oscar, options);
            mike['permissions'] = oscar;
            tango = tango.bind(report)(mike);
            mike = zulu.bind(entity)(mike);
            return entity;
        }
    };
    zulu['generateGuildPermissionSpec'] = tango;
    tango = function(argFoo, argBar) { // Original name: generateChannelGeneralSection
        _fun00011: for(var _fun00012_ip = 0; ; ) switch(_fun00012_ip) {
 0:
            mike = arguments[2];
            report = undefined;
            if(!(mike === report)) { _fun00012_ip = 21; continue _fun00011 }
 9:
            entity = {};
            zulu = true;
            entity['showManageWebhooks'] = zulu;
            mike = entity;
 21:
            entity = {};
            zulu = argBar;
            entity['title'] = zulu;
            tango = _closure1_slot4;
            zulu = null;
            if(!(zulu != mike)) { _fun00012_ip = 52; continue _fun00011 }
 43:
            mike = mike.showManageWebhooks;
            if(mike) { _fun00012_ip = 100; continue _fun00011 }
 52:
            mike = _closure1_slot2;
            mike = mike.VIEW_CHANNEL;
            zulu = new Array(3);
            zulu[0] = mike;
            mike = _closure1_slot2;
            mike = mike.MANAGE_CHANNELS;
            zulu[1] = mike;
            mike = _closure1_slot2;
            mike = mike.MANAGE_ROLES;
            zulu[2] = mike;
            _fun00012_ip = 163; continue _fun00011;
 100:
            mike = _closure1_slot2;
            golf = mike.VIEW_CHANNEL;
            mike = new Array(4);
            mike[0] = golf;
            golf = _closure1_slot2;
            golf = golf.MANAGE_CHANNELS;
            mike[1] = golf;
            golf = _closure1_slot2;
            golf = golf.MANAGE_ROLES;
            mike[2] = golf;
            oscar = _closure1_slot2;
            oscar = oscar.MANAGE_WEBHOOKS;
            mike[3] = oscar;
            zulu = mike;
 163:
            mike = argFoo;
            mike = tango.bind(report)(zulu, mike);
            entity['permissions'] = mike;
            return entity;
        }
    };
    zulu['generateChannelGeneralSection'] = tango;
    tango = function(argFoo, argBar) { // Original name: generateChannelMembershipSection
        entity = {};
        mike = argBar;
        entity['title'] = mike;
        report = _closure1_slot4;
        mike = _closure1_slot2;
        mike = mike.CREATE_INSTANT_INVITE;
        tango = new Array(1);
        tango[0] = mike;
        zulu = undefined;
        mike = argFoo;
        mike = report.bind(zulu)(tango, mike);
        entity['permissions'] = mike;
        return entity;
    };
    zulu['generateChannelMembershipSection'] = tango;
    tango = function(argFoo, argBar, argBaz) { // Original name: generateChannelTextSection
        _fun00013: for(var _fun00014_ip = 0; ; ) switch(_fun00014_ip) {
 0:
            zulu = argBaz;
            tango = _closure1_slot2;
            tango = tango.SEND_MESSAGES;
            golf = new Array(18);
            golf[0] = tango;
            tango = _closure1_slot2;
            tango = tango.SEND_MESSAGES_IN_THREADS;
            golf[1] = tango;
            tango = _closure1_slot2;
            tango = tango.CREATE_PUBLIC_THREADS;
            golf[2] = tango;
            tango = _closure1_slot2;
            tango = tango.CREATE_PRIVATE_THREADS;
            golf[3] = tango;
            tango = _closure1_slot2;
            tango = tango.EMBED_LINKS;
            golf[4] = tango;
            tango = _closure1_slot2;
            tango = tango.ATTACH_FILES;
            golf[5] = tango;
            tango = _closure1_slot2;
            tango = tango.ADD_REACTIONS;
            golf[6] = tango;
            tango = _closure1_slot2;
            tango = tango.USE_EXTERNAL_EMOJIS;
            golf[7] = tango;
            tango = _closure1_slot2;
            tango = tango.USE_EXTERNAL_STICKERS;
            golf[8] = tango;
            tango = _closure1_slot2;
            tango = tango.USE_EXTERNAL_SOUNDS;
            golf[9] = tango;
            tango = _closure1_slot2;
            tango = tango.MENTION_EVERYONE;
            golf[10] = tango;
            tango = _closure1_slot2;
            tango = tango.MANAGE_MESSAGES;
            golf[11] = tango;
            tango = _closure1_slot2;
            tango = tango.MANAGE_THREADS;
            golf[12] = tango;
            tango = _closure1_slot2;
            tango = tango.READ_MESSAGE_HISTORY;
            golf[13] = tango;
            tango = _closure1_slot2;
            tango = tango.SEND_TTS_MESSAGES;
            golf[14] = tango;
            tango = _closure1_slot2;
            tango = tango.SEND_VOICE_MESSAGES;
            golf[15] = tango;
            tango = _closure1_slot2;
            tango = tango.USE_CLYDE_AI;
            golf[16] = tango;
            tango = _closure1_slot2;
            tango = tango.SEND_POLLS;
            golf[17] = tango;
            tango = zulu.inSoundmojiExperiment;
            oscar = golf;
            if(tango) { _fun00014_ip = 293; continue _fun00013 }
 276:
            report = golf.filter;
            tango = function(argFoo) {
                entity = _closure1_slot2;
                mike = entity.USE_EXTERNAL_SOUNDS;
                entity = argFoo;
                entity = entity !== mike;
                return entity;
            };
            oscar = report.bind(golf)(tango);
 293:
            tango = zulu.showPrivateThreads;
            if(!tango) { _fun00014_ip = 308; continue _fun00013 }
 302:
            tango = zulu.showCreateThreads;
 308:
            golf = oscar;
            if(tango) { _fun00014_ip = 331; continue _fun00013 }
 314:
            report = oscar.filter;
            tango = function(argFoo) {
                entity = _closure1_slot2;
                mike = entity.CREATE_PRIVATE_THREADS;
                entity = argFoo;
                entity = entity !== mike;
                return entity;
            };
            golf = report.bind(oscar)(tango);
 331:
            tango = zulu.showCreateThreads;
            oscar = golf;
            if(tango) { _fun00014_ip = 360; continue _fun00013 }
 343:
            report = golf.filter;
            tango = function(argFoo) {
                entity = _closure1_slot2;
                mike = entity.CREATE_PUBLIC_THREADS;
                entity = argFoo;
                entity = entity !== mike;
                return entity;
            };
            oscar = report.bind(golf)(tango);
 360:
            tango = zulu.showClydeAIPermissions;
            report = oscar;
            if(tango) { _fun00014_ip = 389; continue _fun00013 }
 372:
            tango = oscar.filter;
            entity = function(argFoo) {
                entity = _closure1_slot2;
                mike = entity.USE_CLYDE_AI;
                entity = argFoo;
                entity = entity !== mike;
                return entity;
            };
            report = tango.bind(oscar)(entity);
 389:
            entity = {};
            tango = argBar;
            entity['title'] = tango;
            zulu = zulu.sectionDescription;
            entity['description'] = zulu;
            tango = _closure1_slot4;
            zulu = undefined;
            mike = argFoo;
            mike = tango.bind(zulu)(report, mike);
            entity['permissions'] = mike;
            return entity;
        }
    };
    zulu['generateChannelTextSection'] = tango;
    tango = function(argFoo, argBar) { // Original name: generateChannelVoiceSection
        entity = {};
        mike = argBar;
        entity['title'] = mike;
        report = _closure1_slot4;
        zulu = _closure1_slot2;
        zulu = zulu.CONNECT;
        tango = new Array(11);
        tango[0] = zulu;
        zulu = _closure1_slot2;
        zulu = zulu.SPEAK;
        tango[1] = zulu;
        zulu = _closure1_slot2;
        zulu = zulu.STREAM;
        tango[2] = zulu;
        zulu = _closure1_slot2;
        zulu = zulu.USE_SOUNDBOARD;
        tango[3] = zulu;
        zulu = _closure1_slot2;
        zulu = zulu.USE_EXTERNAL_SOUNDS;
        tango[4] = zulu;
        zulu = _closure1_slot2;
        zulu = zulu.USE_VAD;
        tango[5] = zulu;
        zulu = _closure1_slot2;
        zulu = zulu.PRIORITY_SPEAKER;
        tango[6] = zulu;
        zulu = _closure1_slot2;
        zulu = zulu.MUTE_MEMBERS;
        tango[7] = zulu;
        zulu = _closure1_slot2;
        zulu = zulu.DEAFEN_MEMBERS;
        tango[8] = zulu;
        zulu = _closure1_slot2;
        zulu = zulu.MOVE_MEMBERS;
        tango[9] = zulu;
        mike = _closure1_slot2;
        mike = mike.SET_VOICE_CHANNEL_STATUS;
        tango[10] = mike;
        zulu = undefined;
        mike = argFoo;
        mike = report.bind(zulu)(tango, mike);
        entity['permissions'] = mike;
        return entity;
    };
    zulu['generateChannelVoiceSection'] = tango;
    tango = function(argFoo, argBar, argBaz) { // Original name: generateChannelVoiceChatSection
        _fun00015: for(var _fun00016_ip = 0; ; ) switch(_fun00016_ip) {
 0:
            zulu = argBaz;
            entity = _closure1_slot2;
            entity = entity.SEND_MESSAGES;
            oscar = new Array(14);
            oscar[0] = entity;
            entity = _closure1_slot2;
            entity = entity.EMBED_LINKS;
            oscar[1] = entity;
            entity = _closure1_slot2;
            entity = entity.ATTACH_FILES;
            oscar[2] = entity;
            entity = _closure1_slot2;
            entity = entity.ADD_REACTIONS;
            oscar[3] = entity;
            entity = _closure1_slot2;
            entity = entity.USE_EXTERNAL_EMOJIS;
            oscar[4] = entity;
            entity = _closure1_slot2;
            entity = entity.USE_EXTERNAL_STICKERS;
            oscar[5] = entity;
            entity = _closure1_slot2;
            entity = entity.USE_EXTERNAL_SOUNDS;
            oscar[6] = entity;
            entity = _closure1_slot2;
            entity = entity.MENTION_EVERYONE;
            oscar[7] = entity;
            entity = _closure1_slot2;
            entity = entity.MANAGE_MESSAGES;
            oscar[8] = entity;
            entity = _closure1_slot2;
            entity = entity.READ_MESSAGE_HISTORY;
            oscar[9] = entity;
            entity = _closure1_slot2;
            entity = entity.SEND_TTS_MESSAGES;
            oscar[10] = entity;
            entity = _closure1_slot2;
            entity = entity.USE_APPLICATION_COMMANDS;
            oscar[11] = entity;
            entity = _closure1_slot2;
            entity = entity.SEND_VOICE_MESSAGES;
            oscar[12] = entity;
            entity = _closure1_slot2;
            entity = entity.SEND_POLLS;
            oscar[13] = entity;
            entity = zulu.inSoundmojiExperiment;
            report = oscar;
            if(entity) { _fun00016_ip = 237; continue _fun00015 }
 218:
            tango = oscar.filter;
            entity = function(argFoo) {
                entity = _closure1_slot2;
                mike = entity.USE_EXTERNAL_SOUNDS;
                entity = argFoo;
                entity = entity !== mike;
                return entity;
            };
            report = tango.bind(oscar)(entity);
 237:
            entity = {};
            tango = argBar;
            entity['title'] = tango;
            zulu = zulu.sectionDescription;
            entity['description'] = zulu;
            tango = _closure1_slot4;
            zulu = undefined;
            mike = argFoo;
            mike = tango.bind(zulu)(report, mike);
            entity['permissions'] = mike;
            return entity;
        }
    };
    zulu['generateChannelVoiceChatSection'] = tango;
    tango = function(argFoo, argBar) { // Original name: generateChannelAppsSection
        entity = {};
        mike = argBar;
        entity['title'] = mike;
        report = _closure1_slot4;
        zulu = _closure1_slot2;
        zulu = zulu.USE_APPLICATION_COMMANDS;
        tango = new Array(3);
        tango[0] = zulu;
        zulu = _closure1_slot2;
        zulu = zulu.USE_EMBEDDED_ACTIVITIES;
        tango[1] = zulu;
        mike = _closure1_slot2;
        mike = mike.USE_EXTERNAL_APPS;
        tango[2] = mike;
        zulu = undefined;
        mike = argFoo;
        mike = report.bind(zulu)(tango, mike);
        entity['permissions'] = mike;
        return entity;
    };
    zulu['generateChannelAppsSection'] = tango;
    tango = function(argFoo, argBar, argBaz) { // Original name: generateChannelStageVoiceSection
        _fun00017: for(var _fun00018_ip = 0; ; ) switch(_fun00018_ip) {
 0:
            entity = {};
            mike = argBar;
            entity['title'] = mike;
            report = _closure1_slot4;
            mike = _closure1_slot2;
            oscar = mike.CONNECT;
            mike = argBaz;
            if(mike) { _fun00018_ip = 70; continue _fun00017 }
 32:
            tango = new Array(3);
            tango[0] = oscar;
            mike = _closure1_slot2;
            mike = mike.MUTE_MEMBERS;
            tango[1] = mike;
            mike = _closure1_slot2;
            mike = mike.MOVE_MEMBERS;
            tango[2] = mike;
            _fun00018_ip = 123; continue _fun00017;
 70:
            mike = new Array(4);
            mike[0] = oscar;
            oscar = _closure1_slot2;
            oscar = oscar.STREAM;
            mike[1] = oscar;
            oscar = _closure1_slot2;
            oscar = oscar.MUTE_MEMBERS;
            mike[2] = oscar;
            zulu = _closure1_slot2;
            zulu = zulu.MOVE_MEMBERS;
            mike[3] = zulu;
            tango = mike;
 123:
            zulu = undefined;
            mike = argFoo;
            mike = report.bind(zulu)(tango, mike);
            entity['permissions'] = mike;
            return entity;
        }
    };
    zulu['generateChannelStageVoiceSection'] = tango;
    tango = function(argFoo, argBar) { // Original name: generateChannelStageSection
        entity = {};
        mike = argBar;
        entity['title'] = mike;
        report = _closure1_slot4;
        zulu = _closure1_slot2;
        zulu = zulu.REQUEST_TO_SPEAK;
        tango = new Array(2);
        tango[0] = zulu;
        mike = _closure1_slot2;
        mike = mike.MENTION_EVERYONE;
        tango[1] = mike;
        zulu = undefined;
        mike = argFoo;
        mike = report.bind(zulu)(tango, mike);
        entity['permissions'] = mike;
        return entity;
    };
    zulu['generateChannelStageSection'] = tango;
    tango = function(argFoo, argBar) { // Original name: generateChannelEventsSection
        entity = {};
        mike = argBar;
        entity['title'] = mike;
        report = _closure1_slot4;
        zulu = _closure1_slot2;
        zulu = zulu.CREATE_EVENTS;
        tango = new Array(2);
        tango[0] = zulu;
        mike = _closure1_slot2;
        mike = mike.MANAGE_EVENTS;
        tango[1] = mike;
        zulu = undefined;
        mike = argFoo;
        mike = report.bind(zulu)(tango, mike);
        entity['permissions'] = mike;
        return entity;
    };
    zulu['generateChannelEventsSection'] = tango;
    mike = function(argFoo) { // Original name: renderDescription
        _fun00019: for(var _fun00020_ip = 0; ; ) switch(_fun00020_ip) {
 0:
            tango = argFoo;
            mike = null;
            entity = tango;
            if(!(mike != entity)) { _fun00020_ip = 92; continue _fun00019 }
 12:
            report = typeof tango;
            mike = 'string';
            if(!(mike !== report)) { _fun00020_ip = 79; continue _fun00019 }
 23:
            zulu = 'function';
            mike = tango;
            if(!(zulu === report)) { _fun00020_ip = 77; continue _fun00019 }
 34:
            oscar = _closure1_slot0;
            report = _closure1_slot1;
            zulu = 1;
            report = report[zulu];
            zulu = undefined;
            zulu = oscar.bind(zulu)(report);
            oscar = zulu.intl;
            report = oscar.format;
            zulu = {};
            mike = report.bind(oscar)(tango, zulu);
 77:
            _fun00020_ip = 89; continue _fun00019;
 79:
            zulu = tango.trim;
            mike = zulu.bind(tango)();
 89:
            entity = mike;
 92:
            return entity;
        }
    };
    zulu['renderDescription'] = mike;
    return entity;
})();