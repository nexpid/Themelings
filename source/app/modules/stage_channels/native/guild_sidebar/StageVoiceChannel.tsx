// app/modules/stage_channels/native/guild_sidebar/StageVoiceChannel.tsx
export default (function(global, require, metroImportDefault, metroImportAll, moduleObject, exports, dependencyMap) {
    var5 = require;
    var12 = metroImportDefault;
    var7 = metroImportAll;
    var3 = exports;
    var6 = dependencyMap;
    var _closure1_slot0 = var5;
    var _closure1_slot1 = var12;
    var _closure1_slot2 = var7;
    var _closure1_slot3 = var6;
    var1 = function getStageChannelAccessibilityProps(arg1) {
        _fun0001: for(var _fun0001_ip = 0; ; ) switch(_fun0001_ip) {
case 0:
            var1 = arg1;
            var8 = var1.channelName;
            var6 = var1.channel;
            var7 = var1.userCount;
            var3 = _closure1_slot0;
            var2 = _closure1_slot3;
            var10 = 11;
            var4 = var2[var10];
            var9 = undefined;
            var4 = var3.bind(var9)(var4);
            var5 = var4.intl;
            var4 = var5.formatToPlainString;
            var2 = var2[var10];
            var2 = var3.bind(var9)(var2);
            var2 = var2.t;
            var3 = var2.TPPk2d;
            var2 = {};
            var2['channelName'] = var8;
            var2 = var4.bind(var5)(var3, var2);
            var4 = var6.userLimit;
            var3 = null;
            if(!(var3 != var4)) { _fun0001_ip = 2; continue _fun0001 }
case 3:
            var4 = var6.userLimit;
            var3 = 0;
            if(!(!(var4 > var3))) { _fun0001_ip = 4; continue _fun0001 }
case 2:
            var3 = 0;
            if(!(var7 > var3)) { _fun0001_ip = 5; continue _fun0001 }
case 6:
            var4 = _closure1_slot0;
            var3 = _closure1_slot3;
            var5 = var3[var10];
            var5 = var4.bind(var9)(var5);
            var11 = var5.intl;
            var5 = var11.formatToPlainString;
            var3 = var3[var10];
            var3 = var4.bind(var9)(var3);
            var3 = var3.t;
            var4 = var3.7yr3QU;
            var3 = {};
            var3['channelName'] = var8;
            var3['userCount'] = var7;
            var2 = var5.bind(var11)(var4, var3);
            _fun0001_ip = 5; continue _fun0001;
case 4:
            var3 = _closure1_slot0;
            var1 = _closure1_slot3;
            var4 = var1[var10];
            var4 = var3.bind(var9)(var4);
            var5 = var4.intl;
            var4 = var5.formatToPlainString;
            var1 = var1[var10];
            var1 = var3.bind(var9)(var1);
            var1 = var1.t;
            var3 = var1.rhh6Eh;
            var1 = {};
            var1['channelName'] = var8;
            var1['userCount'] = var7;
            var6 = var6.userLimit;
            var1['limit'] = var6;
            var2 = var4.bind(var5)(var3, var1);
case 5:
            var1 = {'accessible': true, 'accessibilityRole': 'button'};
            var1['accessibilityLabel'] = var2;
            return var1;
        }
    };
    var _closure1_slot17 = var1;
    var1 = global;
    var9 = var1.Object;
    var8 = var9.defineProperty;
    var4 = {};
    var1 = true;
    var4['value'] = var1;
    var1 = '__esModule';
    var1 = var8.bind(var9)(var3, var1, var4);
    var1 = 0;
    var4 = var6[var1];
    var1 = undefined;
    var7 = var7.bind(var1)(var4);
    var _closure1_slot4 = var7;
    var4 = 1;
    var4 = var6[var4];
    var4 = var5.bind(var1)(var4);
    var4 = var4.View;
    var _closure1_slot5 = var4;
    var4 = 2;
    var4 = var6[var4];
    var4 = var12.bind(var1)(var4);
    var _closure1_slot6 = var4;
    var4 = 3;
    var4 = var6[var4];
    var4 = var12.bind(var1)(var4);
    var _closure1_slot7 = var4;
    var4 = 4;
    var4 = var6[var4];
    var4 = var12.bind(var1)(var4);
    var _closure1_slot8 = var4;
    var4 = 5;
    var4 = var6[var4];
    var4 = var12.bind(var1)(var4);
    var _closure1_slot9 = var4;
    var4 = 6;
    var8 = var6[var4];
    var8 = var12.bind(var1)(var8);
    var _closure1_slot10 = var8;
    var4 = var6[var4];
    var4 = var5.bind(var1)(var4);
    var4 = var4.NO_VOICE_STATES;
    var _closure1_slot11 = var4;
    var4 = 7;
    var4 = var6[var4];
    var4 = var12.bind(var1)(var4);
    var _closure1_slot12 = var4;
    var11 = 8;
    var4 = var6[var11];
    var4 = var5.bind(var1)(var4);
    var8 = var4.MAX_STAGE_VOICE_USER_LIMIT;
    var _closure1_slot13 = var8;
    var4 = var4.Permissions;
    var _closure1_slot14 = var4;
    var4 = 9;
    var4 = var6[var4];
    var4 = var5.bind(var1)(var4);
    var13 = var4.CHANNEL_MARGIN_VERTICAL;
    var4 = 10;
    var4 = var6[var4];
    var4 = var5.bind(var1)(var4);
    var4 = var4.jsx;
    var _closure1_slot15 = var4;
    var4 = 12;
    var4 = var6[var4];
    var9 = var5.bind(var1)(var4);
    var8 = var9.createStyles;
    var4 = {};
    var10 = {'marginLeft': 36, 'marginBottom': 8};
    var4['voiceStates'] = var10;
    var10 = {};
    var10['marginVertical'] = var13;
    var10['marginHorizontal'] = var11;
    var11 = 13;
    var11 = var6[var11];
    var11 = var12.bind(var1)(var11);
    var11 = var11.radii;
    var11 = var11.md;
    var10['borderRadius'] = var11;
    var4['container'] = var10;
    var4 = var8.bind(var9)(var4);
    var _closure1_slot16 = var4;
    var4 = var7.memo;
    var2 = function(arg1) {
        _fun0002: for(var _fun0002_ip = 0; ; ) switch(_fun0002_ip) {
case 0:
            var2 = arg1;
            var14 = var2.channel;
            var _closure2_slot0 = var14;
            var16 = var2.selected;
            var2 = _closure1_slot16;
            var4 = undefined;
            var10 = var2.bind(var4)();
            var3 = _closure1_slot0;
            var5 = _closure1_slot3;
            var2 = 14;
            var2 = var5[var2];
            var8 = var3.bind(var4)(var2);
            var7 = var8.useStateFromStoresObject;
            var2 = _closure1_slot12;
            var6 = new Array(6);
            var6[0] = var2;
            var2 = _closure1_slot8;
            var6[1] = var2;
            var2 = _closure1_slot9;
            var6[2] = var2;
            var2 = _closure1_slot10;
            var6[3] = var2;
            var2 = _closure1_slot7;
            var6[4] = var2;
            var2 = _closure1_slot6;
            var6[5] = var2;
            var3 = new Array(1);
            var3[0] = var14;
            var2 = function() {
                var1 = {};
                var6 = _closure1_slot12;
                var5 = var6.getStageInstanceByChannel;
                var2 = _closure2_slot0;
                var4 = var2.id;
                var4 = var5.bind(var6)(var4);
                var1['stageInstance'] = var4;
                var6 = _closure1_slot8;
                var5 = var6.hasUnread;
                var4 = var2.id;
                var4 = var5.bind(var6)(var4);
                var1['hasUnread'] = var4;
                var5 = _closure1_slot9;
                var4 = var5.resolveUnreadSetting;
                var4 = var4.bind(var5)(var2);
                var1['resolvedUnreadSetting'] = var4;
                var5 = _closure1_slot10;
                var4 = var5.getVoiceStatesForChannel;
                var4 = var4.bind(var5)(var2);
                var1['voiceStates'] = var4;
                var6 = _closure1_slot0;
                var5 = _closure1_slot3;
                var4 = 15;
                var5 = var5[var4];
                var4 = undefined;
                var6 = var6.bind(var4)(var5);
                var5 = var6.getStageHasMedia;
                var4 = var2.id;
                var4 = var5.bind(var6)(var4);
                var1['hasMedia'] = var4;
                var6 = _closure1_slot7;
                var5 = var6.can;
                var4 = _closure1_slot14;
                var4 = var4.CONNECT;
                var4 = var5.bind(var6)(var4, var2);
                var4 = !var4;
                var1['locked'] = var4;
                var4 = _closure1_slot6;
                var3 = var4.isCollapsed;
                var2 = var2.id;
                var2 = var3.bind(var4)(var2);
                var1['collapsed'] = var2;
                return var1;
            };
            var2 = var7.bind(var8)(var6, var2, var3);
            var19 = var2.stageInstance;
            var17 = var2.hasUnread;
            var7 = var2.resolvedUnreadSetting;
            var8 = var2.voiceStates;
            var15 = var2.hasMedia;
            var21 = var2.locked;
            var13 = var2.collapsed;
            var3 = _closure1_slot1;
            var2 = 16;
            var2 = var5[var2];
            var3 = var3.bind(var4)(var2);
            var2 = var14.guild_id;
            var3 = var3.bind(var4)(var2);
            var2 = var14.id;
            var12 = var3[var2];
            var18 = null;
            if(!(var18 == var12)) { _fun0002_ip = 7; continue _fun0002 }
case 8:
            var12 = _closure1_slot11;
case 7:
            var2 = _closure1_slot0;
            var3 = _closure1_slot3;
            var5 = 17;
            var5 = var3[var5];
            var20 = var2.bind(var4)(var5);
            var11 = var20.useStageParticipantsCount;
            var6 = var14.id;
            var5 = 18;
            var5 = var3[var5];
            var5 = var2.bind(var4)(var5);
            var5 = var5.StageChannelParticipantNamedIndex;
            var5 = var5.AUDIENCE;
            var11 = var11.bind(var20)(var6, var5);
            var5 = var12.length;
            var25 = var11 + var5;
            var20 = _closure1_slot4;
            var22 = var20.useCallback;
            var6 = new Array(1);
            var6[0] = var14;
            var5 = function() {
                _fun0003: for(var _fun0003_ip = 0; ; ) switch(_fun0003_ip) {
case 0:
                    var2 = _closure2_slot0;
                    var1 = var2.getGuildId;
                    var3 = var1.bind(var2)();
                    var1 = null;
                    if(!(var1 != var3)) { _fun0003_ip = 9; continue _fun0003 }
case 10:
                    var6 = _closure1_slot0;
                    var4 = _closure1_slot3;
                    var2 = 19;
                    var2 = var4[var2];
                    var4 = undefined;
                    var6 = var6.bind(var4)(var2);
                    var2 = var6.shouldShowMembershipVerificationGate;
                    var2 = var2.bind(var6)(var3);
                    if(var2) { _fun0003_ip = 11; continue _fun0003 }
case 9:
                    var9 = _closure1_slot2;
                    var8 = _closure1_slot3;
                    var2 = 21;
                    var7 = var8[var2];
                    var2 = undefined;
                    var9 = var9.bind(var2)(var7);
                    var7 = var9.dismissGlobalKeyboard;
                    var7 = var7.bind(var9)();
                    var7 = _closure1_slot0;
                    var6 = 22;
                    var6 = var8[var6];
                    var7 = var7.bind(var2)(var6);
                    var6 = var7.connectAndOpen;
                    var5 = _closure2_slot0;
                    var5 = var6.bind(var7)(var5);
                    return var2;
case 11:
                    var2 = _closure1_slot0;
                    var5 = _closure1_slot3;
                    var1 = 20;
                    var1 = var5[var1];
                    var2 = var2.bind(var4)(var1);
                    var1 = var2.openMemberVerificationModal;
                    var1 = var1.bind(var2)(var3);
                    return var1;
                }
            };
            var23 = var22.bind(var20)(var5, var6);
            var6 = var20.useCallback;
            var22 = var14.id;
            var5 = new Array(1);
            var5[0] = var22;
            var1 = function() {
                var3 = _closure1_slot0;
                var2 = _closure1_slot3;
                var1 = 23;
                var2 = var2[var1];
                var1 = undefined;
                var4 = var3.bind(var1)(var2);
                var3 = var4.openChannelLongPressActionSheet;
                var2 = _closure2_slot0;
                var2 = var2.id;
                var2 = var3.bind(var4)(var2);
                return var1;
            };
            var22 = var6.bind(var20)(var1, var5);
            var5 = _closure1_slot1;
            var1 = 24;
            var1 = var3[var1];
            var5 = var5.bind(var4)(var1);
            var1 = false;
            var26 = var5.bind(var4)(var14, var1);
            var1 = 25;
            var1 = var3[var1];
            var2 = var2.bind(var4)(var1);
            var1 = var2.useIsConnectedToVoiceChannel;
            var5 = var1.bind(var2)(var14);
            var1 = var18 == var19;
            var6 = undefined;
            if(var1) { _fun0002_ip = 12; continue _fun0002 }
case 13:
            var6 = var19.topic;
case 12:
            var3 = _closure1_slot15;
            var2 = _closure1_slot1;
            var20 = _closure1_slot3;
            var1 = 26;
            var1 = var20[var1];
            var2 = var2.bind(var4)(var1);
            var1 = {};
            var24 = _closure1_slot17;
            var20 = {};
            var20['channel'] = var14;
            var20['channelName'] = var26;
            var20['userCount'] = var25;
            var29 = var24.bind(var4)(var20);
            var30 = var1;
            var20 = copyDataProperties(var30, var29);
            var20 = 'onPress';
            var1[var20] = var23;
            var20 = 'onLongPress';
            var1[var20] = var22;
            var22 = var10.container;
            var20 = 'style';
            var1[var20] = var22;
            var20 = 'channel';
            var1[var20] = var14;
            var20 = 'selected';
            var1[var20] = var16;
            var20 = 'locked';
            var1[var20] = var21;
            var19 = var18 != var19;
            var18 = 'isChannelLive';
            var1[var18] = var19;
            if(!var17) { _fun0002_ip = 14; continue _fun0002 }
case 15:
            var17 = var5;
case 14:
            var5 = 'unread';
            var1[var5] = var17;
            var5 = 'resolvedUnreadSetting';
            var1[var5] = var7;
            var5 = 'subtitle';
            var1[var5] = var6;
            var7 = _closure1_slot15;
            var6 = _closure1_slot1;
            var17 = _closure1_slot3;
            var5 = 27;
            var5 = var17[var5];
            var6 = var6.bind(var4)(var5);
            var5 = {};
            var5['channel'] = var14;
            var5['isChannelSelected'] = var16;
            var5['isChannelCollapsed'] = var13;
            if(var15) { _fun0002_ip = 16; continue _fun0002 }
case 17:
            var17 = var14.userLimit;
            var16 = 0;
            var16 = var17 > var16;
            if(!var16) { _fun0002_ip = 18; continue _fun0002 }
case 19:
            var18 = var14.userLimit;
            var17 = _closure1_slot13;
            var16 = var18 < var17;
case 18:
            var15 = var16;
case 16:
            var5['enableConnectedUserLimit'] = var15;
            var5['voiceStates'] = var8;
            var6 = var7.bind(var4)(var6, var5);
            var5 = 'channelInfo';
            var1[var5] = var6;
            var6 = var12.length;
            var5 = 0;
            var6 = var6 > var5;
            if(!var6) { _fun0002_ip = 20; continue _fun0002 }
case 21:
            var8 = _closure1_slot15;
            var7 = _closure1_slot5;
            var5 = {};
            var10 = var10.voiceStates;
            var5['style'] = var10;
            var10 = _closure1_slot1;
            var15 = _closure1_slot3;
            var9 = 28;
            var9 = var15[var9];
            var10 = var10.bind(var4)(var9);
            var9 = {};
            var9['channel'] = var14;
            var9['collapsed'] = var13;
            var9['voiceStates'] = var12;
            var9['audienceCount'] = var11;
            var9 = var8.bind(var4)(var10, var9);
            var5['children'] = var9;
            var6 = var8.bind(var4)(var7, var5);
case 20:
            var5 = 'children';
            var1[var5] = var6;
            var1 = var3.bind(var4)(var2, var1);
            return var1;
        }
    };
    var2 = var4.bind(var7)(var2);
    var4 = 29;
    var4 = var6[var4];
    var6 = var5.bind(var1)(var4);
    var5 = var6.fileFinishedImporting;
    var4 = 'modules/stage_channels/native/guild_sidebar/StageVoiceChannel.tsx';
    var4 = var5.bind(var6)(var4);
    var3['default'] = var2;
    return var1;
})();