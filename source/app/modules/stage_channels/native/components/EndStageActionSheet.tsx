// app/modules/stage_channels/native/components/EndStageActionSheet.tsx
export default (function(argFoo, argBar, argBaz, argCorge, _, argFred, argPlugh) {
    report = argBar;
    romeo = argBaz;
    zulu = argFred;
    oscar = argPlugh;
    var _closure1_slot0 = report;
    var _closure1_slot1 = romeo;
    var _closure1_slot2 = oscar;
    entity = global;
    options = entity.Object;
    golf = options.defineProperty;
    tango = {};
    entity = true;
    tango['value'] = entity;
    entity = '__esModule';
    entity = golf.bind(options)(zulu, entity, tango);
    entity = 0;
    golf = oscar[entity];
    tango = argCorge;
    entity = undefined;
    tango = tango.bind(entity)(golf);
    tango = 1;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.View;
    var _closure1_slot3 = tango;
    tango = 2;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.EXPLICIT_END_STAGE_SHEET_KEY;
    var _closure1_slot4 = tango;
    tango = 3;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    offset = tango.Fonts;
    tango = 4;
    golf = oscar[tango];
    golf = report.bind(entity)(golf);
    golf = golf.jsx;
    var _closure1_slot5 = golf;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.jsxs;
    var _closure1_slot6 = tango;
    tango = 5;
    tango = oscar[tango];
    options = report.bind(entity)(tango);
    golf = options.createStyles;
    tango = {};
    yankee = 24;
    verify = {'paddingVertical': 24, 'paddingHorizontal': 16, 'alignItems': 'center'};
    tango['container'] = verify;
    verify = {'fontSize': 24, 'fontFamily': null, 'textAlign': 'center'};
    offset = offset.PRIMARY_BOLD;
    verify['fontFamily'] = offset;
    offset = 6;
    offset = oscar[offset];
    offset = romeo.bind(entity)(offset);
    offset = offset.colors;
    offset = offset.HEADER_PRIMARY;
    verify['color'] = offset;
    tango['title'] = verify;
    offset = 8;
    verify = {'marginTop': 8, 'textAlign': 'center'};
    tango['subtitle'] = verify;
    verify = {};
    verify['marginTop'] = yankee;
    tango['cancelButton'] = verify;
    verify = {};
    verify['marginTop'] = offset;
    tango['confirmButton'] = verify;
    tango = golf.bind(options)(tango);
    var _closure1_slot7 = tango;
    tango = 15;
    tango = oscar[tango];
    oscar = report.bind(entity)(tango);
    report = oscar.fileFinishedImporting;
    tango = 'modules/stage_channels/native/components/EndStageActionSheet.tsx';
    tango = report.bind(oscar)(tango);
    mike = function(argFoo) { // Original name: EndStageActionSheet
        entity = argFoo;
        entity = entity.channel;
        var _closure2_slot0 = entity;
        result = function() { // Original name: handleClose
            report = _closure1_slot1;
            tango = _closure1_slot2;
            entity = 7;
            zulu = tango[entity];
            entity = undefined;
            oscar = report.bind(entity)(zulu);
            report = oscar.hideActionSheet;
            zulu = _closure1_slot4;
            zulu = report.bind(oscar)(zulu);
            zulu = _closure1_slot0;
            mike = 8;
            mike = tango[mike];
            tango = zulu.bind(entity)(mike);
            zulu = tango.handleDisconnect;
            mike = _closure2_slot0;
            mike = zulu.bind(tango)(mike);
            return entity;
        };
        var _closure2_slot1 = result;
        entity = _closure1_slot7;
        tango = undefined;
        output = entity.bind(tango)();
        zulu = _closure1_slot5;
        backup = _closure1_slot1;
        sizing = _closure1_slot2;
        entity = 9;
        entity = sizing[entity];
        mike = backup.bind(tango)(entity);
        entity = {};
        golf = _closure1_slot6;
        oscar = _closure1_slot3;
        report = {};
        verify = output.container;
        report['style'] = verify;
        kilo = _closure1_slot0;
        options = 10;
        options = sizing[options];
        options = kilo.bind(tango)(options);
        verify = options.LegacyText;
        options = {};
        offset = output.title;
        options['style'] = offset;
        offset = 'header';
        options['accessibilityRole'] = offset;
        romeo = 11;
        offset = sizing[romeo];
        offset = kilo.bind(tango)(offset);
        echo = offset.intl;
        foxtrot = echo.string;
        offset = sizing[romeo];
        offset = kilo.bind(tango)(offset);
        offset = offset.t;
        offset = offset.pADdJi;
        offset = foxtrot.bind(echo)(offset);
        options['children'] = offset;
        verify = zulu.bind(tango)(verify, options);
        options = new Array(4);
        options[0] = verify;
        verify = 12;
        verify = sizing[verify];
        verify = kilo.bind(tango)(verify);
        offset = verify.Text;
        verify = {'style': null, 'variant': 'text-md/medium', 'color': 'header-secondary'};
        foxtrot = output.subtitle;
        verify['style'] = foxtrot;
        foxtrot = sizing[romeo];
        foxtrot = kilo.bind(tango)(foxtrot);
        update = foxtrot.intl;
        echo = update.string;
        foxtrot = sizing[romeo];
        foxtrot = kilo.bind(tango)(foxtrot);
        foxtrot = foxtrot.t;
        foxtrot = foxtrot.mT7jwM;
        foxtrot = echo.bind(update)(foxtrot);
        verify['children'] = foxtrot;
        verify = zulu.bind(tango)(offset, verify);
        options[1] = verify;
        foxtrot = 13;
        verify = sizing[foxtrot];
        offset = backup.bind(tango)(verify);
        verify = {};
        echo = output.cancelButton;
        verify['style'] = echo;
        echo = sizing[foxtrot];
        echo = backup.bind(tango)(echo);
        echo = echo.Colors;
        echo = echo.GREY;
        verify['color'] = echo;
        echo = sizing[romeo];
        echo = kilo.bind(tango)(echo);
        source = echo.intl;
        update = source.string;
        echo = sizing[romeo];
        echo = kilo.bind(tango)(echo);
        echo = echo.t;
        echo = echo.xTwqz8;
        echo = update.bind(source)(echo);
        verify['text'] = echo;
        verify['onPress'] = result;
        verify = zulu.bind(tango)(offset, verify);
        options[2] = verify;
        verify = sizing[foxtrot];
        offset = backup.bind(tango)(verify);
        verify = {};
        output = output.confirmButton;
        verify['style'] = output;
        foxtrot = sizing[foxtrot];
        foxtrot = backup.bind(tango)(foxtrot);
        foxtrot = foxtrot.Colors;
        foxtrot = foxtrot.RED;
        verify['color'] = foxtrot;
        foxtrot = sizing[romeo];
        foxtrot = kilo.bind(tango)(foxtrot);
        backup = foxtrot.intl;
        foxtrot = backup.string;
        romeo = sizing[romeo];
        romeo = kilo.bind(tango)(romeo);
        romeo = romeo.t;
        romeo = romeo.wnWqGh;
        romeo = foxtrot.bind(backup)(romeo);
        verify['text'] = romeo;
        yankee = function() { // Original name: onPress
            zulu = _closure1_slot0;
            mike = _closure1_slot2;
            entity = 14;
            mike = mike[entity];
            entity = undefined;
            report = zulu.bind(entity)(mike);
            tango = report.endStage;
            zulu = _closure2_slot0;
            zulu = tango.bind(report)(zulu);
            mike = _closure2_slot1;
            mike = mike.bind(entity)();
            return entity;
        };
        verify['onPress'] = yankee;
        verify = zulu.bind(tango)(offset, verify);
        options[3] = verify;
        report['children'] = options;
        report = golf.bind(tango)(oscar, report);
        entity['children'] = report;
        entity = zulu.bind(tango)(mike, entity);
        return entity;
    };
    zulu['default'] = mike;
    return entity;
})();