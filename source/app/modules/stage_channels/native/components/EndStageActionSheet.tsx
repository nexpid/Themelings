// app/modules/stage_channels/native/components/EndStageActionSheet.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    report = argBar;
    romeon = argBaz;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    var _closure1_slot1 = romeon;
    var _closure1_slot2 = oscard;
    entity = global;
    option = entity.Object;
    golfie = option.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(option)(zuuluu, entity, tangon);
    entity = 0;
    golfie = oscard[entity];
    tangon = argCor;
    entity = undefined;
    tangon = tangon.bind(entity)(golfie);
    tangon = 1;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.View;
    var _closure1_slot3 = tangon;
    tangon = 2;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.EXPLICIT_END_STAGE_SHEET_KEY;
    var _closure1_slot4 = tangon;
    tangon = 3;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    offset = tangon.Fonts;
    tangon = 4;
    golfie = oscard[tangon];
    golfie = report.bind(entity)(golfie);
    golfie = golfie.jsx;
    var _closure1_slot5 = golfie;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.jsxs;
    var _closure1_slot6 = tangon;
    tangon = 5;
    tangon = oscard[tangon];
    option = report.bind(entity)(tangon);
    golfie = option.createStyles;
    tangon = {};
    yankee = 24;
    verify = {'paddingVertical': 24, 'paddingHorizontal': 16, 'alignItems': 'center'};
    tangon['container'] = verify;
    verify = {'fontSize': 24, 'fontFamily': null, 'textAlign': 'center'};
    offset = offset.PRIMARY_BOLD;
    verify['fontFamily'] = offset;
    offset = 6;
    offset = oscard[offset];
    offset = romeon.bind(entity)(offset);
    offset = offset.colors;
    offset = offset.HEADER_PRIMARY;
    verify['color'] = offset;
    tangon['title'] = verify;
    offset = 8;
    verify = {'marginTop': 8, 'textAlign': 'center'};
    tangon['subtitle'] = verify;
    verify = {};
    verify['marginTop'] = yankee;
    tangon['cancelButton'] = verify;
    verify = {};
    verify['marginTop'] = offset;
    tangon['confirmButton'] = verify;
    tangon = golfie.bind(option)(tangon);
    var _closure1_slot7 = tangon;
    tangon = 15;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/stage_channels/native/components/EndStageActionSheet.tsx';
    tangon = report.bind(oscard)(tangon);
    michal = function(argFoo) { // Original name: EndStageActionSheet
        entity = argFoo;
        entity = entity.channel;
        var _closure2_slot0 = entity;
        result = function() { // Original name: handleClose
            report = _closure1_slot1;
            tangon = _closure1_slot2;
            entity = 7;
            zuuluu = tangon[entity];
            entity = undefined;
            oscard = report.bind(entity)(zuuluu);
            report = oscard.hideActionSheet;
            zuuluu = _closure1_slot4;
            zuuluu = report.bind(oscard)(zuuluu);
            zuuluu = _closure1_slot0;
            michal = 8;
            michal = tangon[michal];
            tangon = zuuluu.bind(entity)(michal);
            zuuluu = tangon.handleDisconnect;
            michal = _closure2_slot0;
            michal = zuuluu.bind(tangon)(michal);
            return entity;
        };
        var _closure2_slot1 = result;
        entity = _closure1_slot7;
        tangon = undefined;
        output = entity.bind(tangon)();
        zuuluu = _closure1_slot5;
        backup = _closure1_slot1;
        sizing = _closure1_slot2;
        entity = 9;
        entity = sizing[entity];
        michal = backup.bind(tangon)(entity);
        entity = {};
        golfie = _closure1_slot6;
        oscard = _closure1_slot3;
        report = {};
        verify = output.container;
        report['style'] = verify;
        kiloes = _closure1_slot0;
        option = 10;
        option = sizing[option];
        option = kiloes.bind(tangon)(option);
        verify = option.LegacyText;
        option = {};
        offset = output.title;
        option['style'] = offset;
        offset = 'header';
        option['accessibilityRole'] = offset;
        romeon = 11;
        offset = sizing[romeon];
        offset = kiloes.bind(tangon)(offset);
        echoed = offset.intl;
        foxtra = echoed.string;
        offset = sizing[romeon];
        offset = kiloes.bind(tangon)(offset);
        offset = offset.t;
        offset = offset.pADdJi;
        offset = foxtra.bind(echoed)(offset);
        option['children'] = offset;
        verify = zuuluu.bind(tangon)(verify, option);
        option = new Array(4);
        option[0] = verify;
        verify = 12;
        verify = sizing[verify];
        verify = kiloes.bind(tangon)(verify);
        offset = verify.Text;
        verify = {'style': null, 'variant': 'text-md/medium', 'color': 'header-secondary'};
        foxtra = output.subtitle;
        verify['style'] = foxtra;
        foxtra = sizing[romeon];
        foxtra = kiloes.bind(tangon)(foxtra);
        update = foxtra.intl;
        echoed = update.string;
        foxtra = sizing[romeon];
        foxtra = kiloes.bind(tangon)(foxtra);
        foxtra = foxtra.t;
        foxtra = foxtra.mT7jwM;
        foxtra = echoed.bind(update)(foxtra);
        verify['children'] = foxtra;
        verify = zuuluu.bind(tangon)(offset, verify);
        option[1] = verify;
        foxtra = 13;
        verify = sizing[foxtra];
        offset = backup.bind(tangon)(verify);
        verify = {};
        echoed = output.cancelButton;
        verify['style'] = echoed;
        echoed = sizing[foxtra];
        echoed = backup.bind(tangon)(echoed);
        echoed = echoed.Colors;
        echoed = echoed.GREY;
        verify['color'] = echoed;
        echoed = sizing[romeon];
        echoed = kiloes.bind(tangon)(echoed);
        source = echoed.intl;
        update = source.string;
        echoed = sizing[romeon];
        echoed = kiloes.bind(tangon)(echoed);
        echoed = echoed.t;
        echoed = echoed.xTwqz8;
        echoed = update.bind(source)(echoed);
        verify['text'] = echoed;
        verify['onPress'] = result;
        verify = zuuluu.bind(tangon)(offset, verify);
        option[2] = verify;
        verify = sizing[foxtra];
        offset = backup.bind(tangon)(verify);
        verify = {};
        output = output.confirmButton;
        verify['style'] = output;
        foxtra = sizing[foxtra];
        foxtra = backup.bind(tangon)(foxtra);
        foxtra = foxtra.Colors;
        foxtra = foxtra.RED;
        verify['color'] = foxtra;
        foxtra = sizing[romeon];
        foxtra = kiloes.bind(tangon)(foxtra);
        backup = foxtra.intl;
        foxtra = backup.string;
        romeon = sizing[romeon];
        romeon = kiloes.bind(tangon)(romeon);
        romeon = romeon.t;
        romeon = romeon.wnWqGh;
        romeon = foxtra.bind(backup)(romeon);
        verify['text'] = romeon;
        yankee = function() { // Original name: onPress
            zuuluu = _closure1_slot0;
            michal = _closure1_slot2;
            entity = 14;
            michal = michal[entity];
            entity = undefined;
            report = zuuluu.bind(entity)(michal);
            tangon = report.endStage;
            zuuluu = _closure2_slot0;
            zuuluu = tangon.bind(report)(zuuluu);
            michal = _closure2_slot1;
            michal = michal.bind(entity)();
            return entity;
        };
        verify['onPress'] = yankee;
        verify = zuuluu.bind(tangon)(offset, verify);
        option[3] = verify;
        report['children'] = option;
        report = golfie.bind(tangon)(oscard, report);
        entity['children'] = report;
        entity = zuuluu.bind(tangon)(michal, entity);
        return entity;
    };
    zuuluu['default'] = michal;
    return entity;
})();