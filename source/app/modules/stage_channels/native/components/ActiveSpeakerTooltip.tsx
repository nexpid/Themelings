// app/modules/stage_channels/native/components/ActiveSpeakerTooltip.tsx
export default (function(argFoo, argBar, argBaz, argCorge, _, argFred, argPlugh) {
    report = argBar;
    romeo = argBaz;
    zulu = argFred;
    oscar = argPlugh;
    var _closure1_slot0 = report;
    var _closure1_slot1 = romeo;
    var _closure1_slot2 = oscar;
    entity = global;
    options = entity.Object;
    golf = options.defineProperty;
    tango = {};
    entity = true;
    tango['value'] = entity;
    entity = '__esModule';
    entity = golf.bind(options)(zulu, entity, tango);
    entity = 0;
    tango = oscar[entity];
    entity = undefined;
    tango = romeo.bind(entity)(tango);
    var _closure1_slot3 = tango;
    tango = 1;
    golf = oscar[tango];
    tango = argCorge;
    golf = tango.bind(entity)(golf);
    tango = 2;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.View;
    var _closure1_slot4 = tango;
    tango = 3;
    tango = oscar[tango];
    tango = romeo.bind(entity)(tango);
    var _closure1_slot5 = tango;
    tango = 4;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    options = tango.useActiveSpeakerPillScrollHandler;
    var _closure1_slot6 = options;
    tango = tango.useActiveSpeakerPillState;
    var _closure1_slot7 = tango;
    tango = 5;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    foxtrot = tango.Fonts;
    tango = 6;
    options = oscar[tango];
    options = report.bind(entity)(options);
    options = options.jsx;
    var _closure1_slot8 = options;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.jsxs;
    var _closure1_slot9 = tango;
    tango = 7;
    tango = oscar[tango];
    verify = report.bind(entity)(tango);
    options = verify.createStyles;
    tango = {};
    offset = {'width': '100%', 'flexDirection': 'column', 'alignItems': 'center', 'justifyContent': 'center'};
    tango['container'] = offset;
    offset = {'padding': 10, 'flexDirection': 'row', 'alignItems': 'center', 'justifyContent': 'center'};
    yankee = 8;
    backup = oscar[yankee];
    backup = romeo.bind(entity)(backup);
    backup = backup.colors;
    backup = backup.BACKGROUND_TERTIARY;
    offset['backgroundColor'] = backup;
    backup = oscar[yankee];
    backup = romeo.bind(entity)(backup);
    backup = backup.radii;
    backup = backup.round;
    offset['borderRadius'] = backup;
    tango['participantItemContainer'] = offset;
    offset = {'alignItems': 'center', 'justifyContent': 'center'};
    tango['participantAvatarContainer'] = offset;
    offset = {};
    backup = 12;
    offset['fontSize'] = backup;
    foxtrot = foxtrot.PRIMARY_SEMIBOLD;
    offset['fontFamily'] = foxtrot;
    foxtrot = oscar[yankee];
    foxtrot = romeo.bind(entity)(foxtrot);
    foxtrot = foxtrot.colors;
    foxtrot = foxtrot.HEADER_PRIMARY;
    offset['color'] = foxtrot;
    foxtrot = 18;
    offset['lineHeight'] = foxtrot;
    tango['participantAvatarText'] = offset;
    offset = {'paddingHorizontal': 3, 'flexDirection': 'row', 'alignItems': 'center', 'justifyContent': 'center'};
    tango['participantNameplateContainer'] = offset;
    offset = {};
    offset['lineHeight'] = foxtrot;
    yankee = oscar[yankee];
    yankee = romeo.bind(entity)(yankee);
    yankee = yankee.colors;
    yankee = yankee.HEADER_SECONDARY;
    offset['color'] = yankee;
    tango['participantNameplateSpeakingText'] = offset;
    tango = options.bind(verify)(tango);
    var _closure1_slot10 = tango;
    tango = golf.memo;
    mike = function(argFoo) {
        _fun104086: for(var _fun104086_ip = 0; ; ) switch(_fun104086_ip) {
 0:
            mike = argFoo;
            kilo = mike.channel;
            var _closure2_slot0 = kilo;
            mike = _closure1_slot10;
            report = undefined;
            foxtrot = mike.bind(report)();
            options = _closure1_slot0;
            verify = _closure1_slot2;
            mike = 9;
            mike = verify[mike];
            golf = options.bind(report)(mike);
            oscar = golf.useStateFromStores;
            mike = _closure1_slot5;
            tango = new Array(1);
            tango[0] = mike;
            mike = kilo.id;
            zulu = new Array(1);
            zulu[0] = mike;
            mike = 10;
            mike = verify[mike];
            mike = options.bind(report)(mike);
            echo = mike.isVersionEqual;
            source = function() {
                tango = _closure1_slot5;
                zulu = tango.getSpeakingParticipants;
                mike = _closure2_slot0;
                entity = mike.id;
                report = zulu.bind(tango)(entity);
                zulu = report.map;
                entity = function(argFoo) {
                    entity = argFoo;
                    entity = entity.user;
                    return entity;
                };
                zulu = zulu.bind(report)(entity);
                entity = new Array(2);
                entity[0] = zulu;
                zulu = tango.getParticipantsVersion;
                mike = mike.id;
                mike = zulu.bind(tango)(mike);
                entity[1] = mike;
                return entity;
            };
            vacuum = golf;
            control = tango;
            update = zulu;
            entity = vacuum[oscar](control, source, update, echo, result);
            oscar = _closure1_slot3;
            zulu = 1;
            entity = oscar.bind(report)(entity, zulu);
            golf = 0;
            output = entity[golf];
            entity = _closure1_slot7;
            entity = entity.bind(report)();
            entity = oscar.bind(report)(entity, zulu);
            mike = entity[golf];
            entity = _closure1_slot6;
            tango = entity.bind(report)();
            entity = 2;
            entity = oscar.bind(report)(tango, entity);
            oscar = entity[zulu];
            tango = output.length;
            entity = null;
            if(!(golf !== tango)) { _fun104086_ip = 526; continue _fun104086 }
 187:
            entity = null;
            if(!mike) { _fun104086_ip = 526; continue _fun104086 }
 195:
            tango = _closure1_slot8;
            backup = _closure1_slot0;
            result = _closure1_slot2;
            mike = 11;
            mike = result[mike];
            mike = backup.bind(report)(mike);
            zulu = mike.PressableOpacity;
            mike = {};
            golf = 'button';
            mike['accessibilityRole'] = golf;
            golf = foxtrot.container;
            mike['style'] = golf;
            mike['onPress'] = oscar;
            options = _closure1_slot9;
            golf = _closure1_slot4;
            oscar = {};
            verify = foxtrot.participantItemContainer;
            oscar['style'] = verify;
            verify = {};
            yankee = foxtrot.participantAvatarContainer;
            verify['style'] = yankee;
            yankee = _closure1_slot1;
            offset = 12;
            offset = result[offset];
            yankee = yankee.bind(report)(offset);
            offset = {};
            romeo = foxtrot.participantAvatarText;
            offset['namesStyle'] = romeo;
            offset['users'] = output;
            romeo = true;
            offset['withNames'] = romeo;
            romeo = kilo.id;
            offset['channelId'] = romeo;
            romeo = kilo.getGuildId;
            romeo = romeo.bind(kilo)();
            offset['guildId'] = romeo;
            offset = tango.bind(report)(yankee, offset);
            verify['children'] = offset;
            offset = tango.bind(report)(golf, verify);
            verify = new Array(2);
            verify[0] = offset;
            offset = {};
            yankee = foxtrot.participantNameplateContainer;
            offset['style'] = yankee;
            yankee = 13;
            yankee = result[yankee];
            yankee = backup.bind(report)(yankee);
            romeo = yankee.Text;
            yankee = {'style': null, 'variant': 'text-xs/medium', 'color': 'header-secondary'};
            foxtrot = foxtrot.participantNameplateSpeakingText;
            yankee['style'] = foxtrot;
            foxtrot = 14;
            kilo = result[foxtrot];
            kilo = backup.bind(report)(kilo);
            sizing = kilo.intl;
            kilo = sizing.format;
            foxtrot = result[foxtrot];
            foxtrot = backup.bind(report)(foxtrot);
            foxtrot = foxtrot.t;
            backup = foxtrot.+dia6u;
            foxtrot = {};
            output = output.length;
            foxtrot['count'] = output;
            foxtrot = kilo.bind(sizing)(backup, foxtrot);
            yankee['children'] = foxtrot;
            yankee = tango.bind(report)(romeo, yankee);
            offset['children'] = yankee;
            offset = tango.bind(report)(golf, offset);
            verify[1] = offset;
            oscar['children'] = verify;
            oscar = options.bind(report)(golf, oscar);
            mike['children'] = oscar;
            entity = tango.bind(report)(zulu, mike);
 526:
            return entity;
        }
    };
    mike = tango.bind(golf)(mike);
    tango = 15;
    tango = oscar[tango];
    oscar = report.bind(entity)(tango);
    report = oscar.fileFinishedImporting;
    tango = 'modules/stage_channels/native/components/ActiveSpeakerTooltip.tsx';
    tango = report.bind(oscar)(tango);
    zulu['default'] = mike;
    return entity;
})();