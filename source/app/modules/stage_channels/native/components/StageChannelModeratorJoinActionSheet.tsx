// app/modules/stage_channels/native/components/StageChannelModeratorJoinActionSheet.tsx
export default (function(argFoo, argBar, argBaz, argCorge, _, argFred, argPlugh) {
    report = argBar;
    golf = argCorge;
    zulu = argFred;
    oscar = argPlugh;
    var _closure1_slot0 = report;
    entity = argBaz;
    var _closure1_slot1 = entity;
    var _closure1_slot2 = golf;
    var _closure1_slot3 = oscar;
    entity = global;
    verify = entity.Object;
    options = verify.defineProperty;
    tango = {};
    entity = true;
    tango['value'] = entity;
    entity = '__esModule';
    entity = options.bind(verify)(zulu, entity, tango);
    entity = 0;
    tango = oscar[entity];
    entity = undefined;
    tango = golf.bind(entity)(tango);
    tango = 1;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.View;
    var _closure1_slot4 = tango;
    tango = 2;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.STAGE_MODERATOR_JOIN_SHEET_KEY;
    var _closure1_slot5 = tango;
    tango = 3;
    golf = oscar[tango];
    golf = report.bind(entity)(golf);
    golf = golf.jsx;
    var _closure1_slot6 = golf;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.jsxs;
    var _closure1_slot7 = tango;
    tango = 4;
    tango = oscar[tango];
    options = report.bind(entity)(tango);
    golf = options.createStyles;
    tango = {};
    yankee = 'center';
    verify = {'padding': 16, 'alignItems': 'center'};
    tango['container'] = verify;
    offset = 8;
    verify = {'marginTop': 16, 'marginBottom': 8, 'textAlign': 'center'};
    tango['title'] = verify;
    verify = {};
    verify['textAlign'] = yankee;
    tango['body'] = verify;
    verify = {'marginTop': 16, 'display': 'flex', 'flexDirection': 'row'};
    tango['buttons'] = verify;
    verify = {};
    verify['marginEnd'] = offset;
    tango['spacing'] = verify;
    tango = golf.bind(options)(tango);
    var _closure1_slot8 = tango;
    tango = 17;
    tango = oscar[tango];
    oscar = report.bind(entity)(tango);
    report = oscar.fileFinishedImporting;
    tango = 'modules/stage_channels/native/components/StageChannelModeratorJoinActionSheet.tsx';
    tango = report.bind(oscar)(tango);
    mike = function(argFoo) { // Original name: StageChannelModeratorJoinActionSheet
        entity = argFoo;
        entity = entity.channel;
        var _closure2_slot0 = entity;
        entity = _closure1_slot8;
        tango = undefined;
        foxtrot = entity.bind(tango)();
        var _closure2_slot1 = foxtrot;
        kilo = function() { // Original name: handleDismiss
            tango = _closure1_slot1;
            zulu = _closure1_slot3;
            entity = 5;
            zulu = zulu[entity];
            entity = undefined;
            tango = tango.bind(entity)(zulu);
            zulu = tango.hideActionSheet;
            mike = _closure1_slot5;
            mike = zulu.bind(tango)(mike);
            return entity;
        };
        var _closure2_slot2 = kilo;
        zulu = _closure1_slot6;
        result = _closure1_slot1;
        update = _closure1_slot3;
        entity = 6;
        entity = update[entity];
        mike = result.bind(tango)(entity);
        entity = {};
        golf = _closure1_slot7;
        report = 7;
        report = update[report];
        oscar = result.bind(tango)(report);
        report = {};
        options = foxtrot.container;
        report['style'] = options;
        options = 8;
        options = update[options];
        offset = result.bind(tango)(options);
        options = {};
        offset = zulu.bind(tango)(offset, options);
        options = new Array(4);
        options[0] = offset;
        echo = _closure1_slot0;
        offset = 9;
        yankee = update[offset];
        yankee = echo.bind(tango)(yankee);
        romeo = yankee.Text;
        yankee = {'style': null, 'accessibilityRole': 'header', 'variant': 'heading-lg/semibold', 'color': 'header-primary'};
        sizing = foxtrot.title;
        yankee['style'] = sizing;
        sizing = 10;
        output = update[sizing];
        output = echo.bind(tango)(output);
        control = output.intl;
        source = control.string;
        output = update[sizing];
        output = echo.bind(tango)(output);
        output = output.t;
        output = output.njetU1;
        output = source.bind(control)(output);
        yankee['children'] = output;
        yankee = zulu.bind(tango)(romeo, yankee);
        options[1] = yankee;
        offset = update[offset];
        offset = echo.bind(tango)(offset);
        yankee = offset.Text;
        offset = {'style': null, 'variant': 'text-sm/medium', 'color': 'header-secondary'};
        romeo = foxtrot.body;
        offset['style'] = romeo;
        romeo = update[sizing];
        romeo = echo.bind(tango)(romeo);
        source = romeo.intl;
        output = source.string;
        romeo = update[sizing];
        romeo = echo.bind(tango)(romeo);
        romeo = romeo.t;
        romeo = romeo.LQY4JS;
        romeo = output.bind(source)(romeo);
        offset['children'] = romeo;
        offset = zulu.bind(tango)(yankee, offset);
        options[2] = offset;
        offset = _closure1_slot4;
        verify = {};
        yankee = foxtrot.buttons;
        verify['style'] = yankee;
        output = 11;
        yankee = update[output];
        romeo = result.bind(tango)(yankee);
        yankee = {};
        source = update[output];
        source = result.bind(tango)(source);
        source = source.Colors;
        source = source.GREY;
        yankee['color'] = source;
        source = update[sizing];
        source = echo.bind(tango)(source);
        vacuum = source.intl;
        control = vacuum.string;
        source = update[sizing];
        source = echo.bind(tango)(source);
        source = source.t;
        source = source.Q8o/tb;
        source = control.bind(vacuum)(source);
        yankee['text'] = source;
        source = function() { // Original name: onPress
            zulu = _closure1_slot2;
            mike = _closure1_slot3;
            entity = 12;
            mike = mike[entity];
            entity = undefined;
            oscar = zulu.bind(entity)(mike);
            report = oscar.audienceAckRequestToSpeak;
            tango = _closure2_slot0;
            zulu = false;
            zulu = report.bind(oscar)(tango, zulu);
            mike = _closure2_slot2;
            mike = mike.bind(entity)();
            return entity;
        };
        yankee['onPress'] = source;
        source = function() { // Original name: renderIcon
            tango = _closure1_slot6;
            oscar = _closure1_slot1;
            golf = _closure1_slot3;
            entity = 13;
            entity = golf[entity];
            zulu = undefined;
            mike = oscar.bind(zulu)(entity);
            entity = {};
            report = _closure2_slot1;
            report = report.spacing;
            entity['style'] = report;
            report = 14;
            report = golf[report];
            report = oscar.bind(zulu)(report);
            report = report.unsafe_rawColors;
            report = report.WHITE_500;
            entity['color'] = report;
            report = 15;
            report = golf[report];
            report = oscar.bind(zulu)(report);
            entity['source'] = report;
            entity = tango.bind(zulu)(mike, entity);
            return entity;
        };
        yankee['renderIcon'] = source;
        foxtrot = foxtrot.spacing;
        yankee['style'] = foxtrot;
        romeo = zulu.bind(tango)(romeo, yankee);
        yankee = new Array(2);
        yankee[0] = romeo;
        romeo = update[output];
        foxtrot = result.bind(tango)(romeo);
        romeo = {};
        output = update[output];
        output = result.bind(tango)(output);
        output = output.Colors;
        output = output.GREY;
        romeo['color'] = output;
        output = update[sizing];
        output = echo.bind(tango)(output);
        result = output.intl;
        output = result.string;
        sizing = update[sizing];
        sizing = echo.bind(tango)(sizing);
        sizing = sizing.t;
        sizing = sizing.N3/Oyc;
        sizing = output.bind(result)(sizing);
        romeo['text'] = sizing;
        romeo['onPress'] = kilo;
        backup = function() { // Original name: renderIcon
            tango = _closure1_slot6;
            oscar = _closure1_slot1;
            golf = _closure1_slot3;
            entity = 13;
            entity = golf[entity];
            zulu = undefined;
            mike = oscar.bind(zulu)(entity);
            entity = {};
            report = _closure2_slot1;
            report = report.spacing;
            entity['style'] = report;
            report = 14;
            report = golf[report];
            report = oscar.bind(zulu)(report);
            report = report.unsafe_rawColors;
            report = report.WHITE_500;
            entity['color'] = report;
            report = 16;
            report = golf[report];
            report = oscar.bind(zulu)(report);
            entity['source'] = report;
            entity = tango.bind(zulu)(mike, entity);
            return entity;
        };
        romeo['renderIcon'] = backup;
        romeo = zulu.bind(tango)(foxtrot, romeo);
        yankee[1] = romeo;
        verify['children'] = yankee;
        verify = golf.bind(tango)(offset, verify);
        options[3] = verify;
        report['children'] = options;
        report = golf.bind(tango)(oscar, report);
        entity['children'] = report;
        entity = zulu.bind(tango)(mike, entity);
        return entity;
    };
    zulu['default'] = mike;
    return entity;
})();