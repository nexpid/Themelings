// app/modules/stage_channels/native/components/StageChannelModeratorJoinActionSheet.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    report = argBar;
    golfie = argCor;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    entity = argBaz;
    var _closure1_slot1 = entity;
    var _closure1_slot2 = golfie;
    var _closure1_slot3 = oscard;
    entity = global;
    verify = entity.Object;
    option = verify.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = option.bind(verify)(zuuluu, entity, tangon);
    entity = 0;
    tangon = oscard[entity];
    entity = undefined;
    tangon = golfie.bind(entity)(tangon);
    tangon = 1;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.View;
    var _closure1_slot4 = tangon;
    tangon = 2;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.STAGE_MODERATOR_JOIN_SHEET_KEY;
    var _closure1_slot5 = tangon;
    tangon = 3;
    golfie = oscard[tangon];
    golfie = report.bind(entity)(golfie);
    golfie = golfie.jsx;
    var _closure1_slot6 = golfie;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.jsxs;
    var _closure1_slot7 = tangon;
    tangon = 4;
    tangon = oscard[tangon];
    option = report.bind(entity)(tangon);
    golfie = option.createStyles;
    tangon = {};
    yankee = 'center';
    verify = {'padding': 16, 'alignItems': 'center'};
    tangon['container'] = verify;
    offset = 8;
    verify = {'marginTop': 16, 'marginBottom': 8, 'textAlign': 'center'};
    tangon['title'] = verify;
    verify = {};
    verify['textAlign'] = yankee;
    tangon['body'] = verify;
    verify = {'marginTop': 16, 'display': 'flex', 'flexDirection': 'row'};
    tangon['buttons'] = verify;
    verify = {};
    verify['marginEnd'] = offset;
    tangon['spacing'] = verify;
    tangon = golfie.bind(option)(tangon);
    var _closure1_slot8 = tangon;
    tangon = 17;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/stage_channels/native/components/StageChannelModeratorJoinActionSheet.tsx';
    tangon = report.bind(oscard)(tangon);
    michal = function(argFoo) { // Original name: StageChannelModeratorJoinActionSheet
        entity = argFoo;
        entity = entity.channel;
        var _closure2_slot0 = entity;
        entity = _closure1_slot8;
        tangon = undefined;
        foxtra = entity.bind(tangon)();
        var _closure2_slot1 = foxtra;
        kiloes = function() { // Original name: handleDismiss
            tangon = _closure1_slot1;
            zuuluu = _closure1_slot3;
            entity = 5;
            zuuluu = zuuluu[entity];
            entity = undefined;
            tangon = tangon.bind(entity)(zuuluu);
            zuuluu = tangon.hideActionSheet;
            michal = _closure1_slot5;
            michal = zuuluu.bind(tangon)(michal);
            return entity;
        };
        var _closure2_slot2 = kiloes;
        zuuluu = _closure1_slot6;
        result = _closure1_slot1;
        update = _closure1_slot3;
        entity = 6;
        entity = update[entity];
        michal = result.bind(tangon)(entity);
        entity = {};
        golfie = _closure1_slot7;
        report = 7;
        report = update[report];
        oscard = result.bind(tangon)(report);
        report = {};
        option = foxtra.container;
        report['style'] = option;
        option = 8;
        option = update[option];
        offset = result.bind(tangon)(option);
        option = {};
        offset = zuuluu.bind(tangon)(offset, option);
        option = new Array(4);
        option[0] = offset;
        echoed = _closure1_slot0;
        offset = 9;
        yankee = update[offset];
        yankee = echoed.bind(tangon)(yankee);
        romeon = yankee.Text;
        yankee = {'style': null, 'accessibilityRole': 'header', 'variant': 'heading-lg/semibold', 'color': 'header-primary'};
        sizing = foxtra.title;
        yankee['style'] = sizing;
        sizing = 10;
        output = update[sizing];
        output = echoed.bind(tangon)(output);
        ctrled = output.intl;
        source = ctrled.string;
        output = update[sizing];
        output = echoed.bind(tangon)(output);
        output = output.t;
        output = output.njetU1;
        output = source.bind(ctrled)(output);
        yankee['children'] = output;
        yankee = zuuluu.bind(tangon)(romeon, yankee);
        option[1] = yankee;
        offset = update[offset];
        offset = echoed.bind(tangon)(offset);
        yankee = offset.Text;
        offset = {'style': null, 'variant': 'text-sm/medium', 'color': 'header-secondary'};
        romeon = foxtra.body;
        offset['style'] = romeon;
        romeon = update[sizing];
        romeon = echoed.bind(tangon)(romeon);
        source = romeon.intl;
        output = source.string;
        romeon = update[sizing];
        romeon = echoed.bind(tangon)(romeon);
        romeon = romeon.t;
        romeon = romeon.LQY4JS;
        romeon = output.bind(source)(romeon);
        offset['children'] = romeon;
        offset = zuuluu.bind(tangon)(yankee, offset);
        option[2] = offset;
        offset = _closure1_slot4;
        verify = {};
        yankee = foxtra.buttons;
        verify['style'] = yankee;
        output = 11;
        yankee = update[output];
        romeon = result.bind(tangon)(yankee);
        yankee = {};
        source = update[output];
        source = result.bind(tangon)(source);
        source = source.Colors;
        source = source.GREY;
        yankee['color'] = source;
        source = update[sizing];
        source = echoed.bind(tangon)(source);
        vacuum = source.intl;
        ctrled = vacuum.string;
        source = update[sizing];
        source = echoed.bind(tangon)(source);
        source = source.t;
        source = source.Q8o/tb;
        source = ctrled.bind(vacuum)(source);
        yankee['text'] = source;
        source = function() { // Original name: onPress
            zuuluu = _closure1_slot2;
            michal = _closure1_slot3;
            entity = 12;
            michal = michal[entity];
            entity = undefined;
            oscard = zuuluu.bind(entity)(michal);
            report = oscard.audienceAckRequestToSpeak;
            tangon = _closure2_slot0;
            zuuluu = false;
            zuuluu = report.bind(oscard)(tangon, zuuluu);
            michal = _closure2_slot2;
            michal = michal.bind(entity)();
            return entity;
        };
        yankee['onPress'] = source;
        source = function() { // Original name: renderIcon
            tangon = _closure1_slot6;
            oscard = _closure1_slot1;
            golfie = _closure1_slot3;
            entity = 13;
            entity = golfie[entity];
            zuuluu = undefined;
            michal = oscard.bind(zuuluu)(entity);
            entity = {};
            report = _closure2_slot1;
            report = report.spacing;
            entity['style'] = report;
            report = 14;
            report = golfie[report];
            report = oscard.bind(zuuluu)(report);
            report = report.unsafe_rawColors;
            report = report.WHITE_500;
            entity['color'] = report;
            report = 15;
            report = golfie[report];
            report = oscard.bind(zuuluu)(report);
            entity['source'] = report;
            entity = tangon.bind(zuuluu)(michal, entity);
            return entity;
        };
        yankee['renderIcon'] = source;
        foxtra = foxtra.spacing;
        yankee['style'] = foxtra;
        romeon = zuuluu.bind(tangon)(romeon, yankee);
        yankee = new Array(2);
        yankee[0] = romeon;
        romeon = update[output];
        foxtra = result.bind(tangon)(romeon);
        romeon = {};
        output = update[output];
        output = result.bind(tangon)(output);
        output = output.Colors;
        output = output.GREY;
        romeon['color'] = output;
        output = update[sizing];
        output = echoed.bind(tangon)(output);
        result = output.intl;
        output = result.string;
        sizing = update[sizing];
        sizing = echoed.bind(tangon)(sizing);
        sizing = sizing.t;
        sizing = sizing.N3/Oyc;
        sizing = output.bind(result)(sizing);
        romeon['text'] = sizing;
        romeon['onPress'] = kiloes;
        backup = function() { // Original name: renderIcon
            tangon = _closure1_slot6;
            oscard = _closure1_slot1;
            golfie = _closure1_slot3;
            entity = 13;
            entity = golfie[entity];
            zuuluu = undefined;
            michal = oscard.bind(zuuluu)(entity);
            entity = {};
            report = _closure2_slot1;
            report = report.spacing;
            entity['style'] = report;
            report = 14;
            report = golfie[report];
            report = oscard.bind(zuuluu)(report);
            report = report.unsafe_rawColors;
            report = report.WHITE_500;
            entity['color'] = report;
            report = 16;
            report = golfie[report];
            report = oscard.bind(zuuluu)(report);
            entity['source'] = report;
            entity = tangon.bind(zuuluu)(michal, entity);
            return entity;
        };
        romeon['renderIcon'] = backup;
        romeon = zuuluu.bind(tangon)(foxtra, romeon);
        yankee[1] = romeon;
        verify['children'] = yankee;
        verify = golfie.bind(tangon)(offset, verify);
        option[3] = verify;
        report['children'] = option;
        report = golfie.bind(tangon)(oscard, report);
        entity['children'] = report;
        entity = zuuluu.bind(tangon)(michal, entity);
        return entity;
    };
    zuuluu['default'] = michal;
    return entity;
})();