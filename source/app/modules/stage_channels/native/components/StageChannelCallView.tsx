// app/modules/stage_channels/native/components/StageChannelCallView.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    report = argBar;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    entity = argBaz;
    var _closure1_slot1 = entity;
    var _closure1_slot2 = oscard;
    entity = function(argFoo) { // Original name: StageChannelCallBackground
        entity = argFoo;
        option = entity.children;
        golfie = entity.channelId;
        entity = _closure1_slot7;
        tangon = undefined;
        verify = entity.bind(tangon)();
        oscard = _closure1_slot1;
        yankee = _closure1_slot2;
        entity = 4;
        entity = yankee[entity];
        entity = oscard.bind(tangon)(entity);
        entity = entity.bind(tangon)();
        offset = entity.top;
        michal = _closure1_slot0;
        entity = 5;
        entity = yankee[entity];
        zuuluu = michal.bind(tangon)(entity);
        michal = zuuluu.useStageActionBarAnimation;
        entity = _closure1_slot6;
        entity = entity.bind(tangon)(offset);
        offset = michal.bind(zuuluu)(golfie, entity);
        zuuluu = _closure1_slot3;
        entity = 6;
        entity = yankee[entity];
        michal = oscard.bind(tangon)(entity);
        entity = {};
        golfie = _closure1_slot3;
        report = 7;
        report = yankee[report];
        report = oscard.bind(tangon)(report);
        oscard = report.View;
        report = {};
        yankee = verify.container;
        verify = new Array(2);
        verify[0] = yankee;
        verify[1] = offset;
        report['style'] = verify;
        report['children'] = option;
        report = golfie.bind(tangon)(oscard, report);
        entity['children'] = report;
        entity = zuuluu.bind(tangon)(michal, entity);
        return entity;
    };
    var _closure1_slot8 = entity;
    entity = global;
    option = entity.Object;
    golfie = option.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(option)(zuuluu, entity, tangon);
    entity = 0;
    golfie = oscard[entity];
    tangon = argCor;
    entity = undefined;
    tangon = tangon.bind(entity)(golfie);
    tangon = 1;
    golfie = oscard[tangon];
    golfie = report.bind(entity)(golfie);
    golfie = golfie.jsx;
    var _closure1_slot3 = golfie;
    golfie = oscard[tangon];
    golfie = report.bind(entity)(golfie);
    golfie = golfie.Fragment;
    var _closure1_slot4 = golfie;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.jsxs;
    var _closure1_slot5 = tangon;
    tangon = function(argFoo) { // Original name: CONTROL_PADDING_PX
        zuuluu = _closure1_slot0;
        michal = _closure1_slot2;
        entity = 2;
        michal = michal[entity];
        entity = undefined;
        entity = zuuluu.bind(entity)(michal);
        michal = entity.FOCUSED_CONTROLS_HEADER_HEIGHT;
        entity = argFoo;
        entity = michal + entity;
        return entity;
    };
    var _closure1_slot6 = tangon;
    tangon = 3;
    tangon = oscard[tangon];
    option = report.bind(entity)(tangon);
    golfie = option.createStyles;
    tangon = {};
    verify = {'flex': 1, 'paddingHorizontal': 12};
    tangon['container'] = verify;
    tangon = golfie.bind(option)(tangon);
    var _closure1_slot7 = tangon;
    tangon = 10;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/stage_channels/native/components/StageChannelCallView.tsx';
    tangon = report.bind(oscard)(tangon);
    michal = function(argFoo) { // Original name: StageChannelCallView
        entity = argFoo;
        romeon = entity.channel;
        tangon = _closure1_slot5;
        zuuluu = _closure1_slot4;
        michal = {};
        golfie = _closure1_slot3;
        offset = _closure1_slot1;
        foxtra = _closure1_slot2;
        entity = 8;
        report = foxtra[entity];
        entity = undefined;
        oscard = offset.bind(entity)(report);
        report = {'animated': true, 'barStyle': 'light-content'};
        oscard = golfie.bind(entity)(oscard, report);
        report = new Array(2);
        report[0] = oscard;
        option = _closure1_slot3;
        golfie = _closure1_slot8;
        oscard = {};
        yankee = romeon.id;
        oscard['channelId'] = yankee;
        yankee = _closure1_slot3;
        verify = 9;
        verify = foxtra[verify];
        offset = offset.bind(entity)(verify);
        verify = {};
        verify['channel'] = romeon;
        verify = yankee.bind(entity)(offset, verify);
        oscard['children'] = verify;
        oscard = option.bind(entity)(golfie, oscard);
        report[1] = oscard;
        michal['children'] = report;
        entity = tangon.bind(entity)(zuuluu, michal);
        return entity;
    };
    zuuluu['default'] = michal;
    return entity;
})();