// app/modules/stage_channels/native/components/StageSectionHeader.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    report = argBar;
    yankee = argBaz;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    var _closure1_slot1 = yankee;
    var _closure1_slot2 = oscard;
    entity = global;
    option = entity.Object;
    golfie = option.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(option)(zuuluu, entity, tangon);
    entity = 0;
    golfie = oscard[entity];
    tangon = argCor;
    entity = undefined;
    tangon = tangon.bind(entity)(golfie);
    tangon = 1;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    golfie = tangon.TouchableOpacity;
    var _closure1_slot3 = golfie;
    tangon = tangon.View;
    var _closure1_slot4 = tangon;
    tangon = 2;
    golfie = oscard[tangon];
    golfie = report.bind(entity)(golfie);
    golfie = golfie.jsxs;
    var _closure1_slot5 = golfie;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.jsx;
    var _closure1_slot6 = tangon;
    tangon = 3;
    tangon = oscard[tangon];
    option = report.bind(entity)(tangon);
    golfie = option.createStyles;
    tangon = {};
    offset = 4;
    verify = {'height': 48, 'paddingHorizontal': 4};
    tangon['section'] = verify;
    verify = {};
    romeon = 12;
    verify['marginLeft'] = romeon;
    tangon['children'] = verify;
    verify = {};
    romeon = 'auto';
    verify['marginLeft'] = romeon;
    tangon['collapseButton'] = verify;
    verify = {};
    romeon = oscard[offset];
    romeon = yankee.bind(entity)(romeon);
    romeon = romeon.colors;
    romeon = romeon.HEADER_PRIMARY;
    verify['tintColor'] = romeon;
    tangon['collapseIcon'] = verify;
    verify = {'height': 48, 'flex': 1, 'flexDirection': 'row', 'alignItems': 'center', 'borderBottomWidth': 1, 'borderBottomColor': null, 'paddingHorizontal': 4};
    romeon = oscard[offset];
    romeon = yankee.bind(entity)(romeon);
    romeon = romeon.colors;
    romeon = romeon.BACKGROUND_MODIFIER_ACCENT;
    verify['borderBottomColor'] = romeon;
    offset = oscard[offset];
    offset = yankee.bind(entity)(offset);
    offset = offset.radii;
    offset = offset.xs;
    verify['borderRadius'] = offset;
    tangon['audience'] = verify;
    tangon = golfie.bind(option)(tangon);
    var _closure1_slot7 = tangon;
    tangon = {};
    golfie = "function StageSectionHeaderTsx1(){const{withTiming,collapsed}=this.__closure;return{transform:[{rotate:withTiming(collapsed?'180deg':'0deg',{duration:150})}]};}";
    tangon['code'] = golfie;
    var _closure1_slot8 = tangon;
    tangon = 10;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/stage_channels/native/components/StageSectionHeader.tsx';
    tangon = report.bind(oscard)(tangon);
    michal = function(argFoo) { // Original name: StageSectionHeader
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            michal = argFoo;
            kiloes = michal.label;
            yankee = michal.count;
            oscard = michal.collapsed;
            var _closure2_slot0 = oscard;
            option = michal.onToggleCollapse;
            output = michal.children;
            michal = _closure1_slot7;
            tangon = undefined;
            sizing = michal.bind(tangon)();
            verify = _closure1_slot0;
            offset = _closure1_slot2;
            romeon = 5;
            michal = offset[romeon];
            zuuluu = verify.bind(tangon)(michal);
            michal = zuuluu.useAnimatedStyle;
            entity = function() { // Original name: y
                _fun00003: for(var _fun00004_ip = 0; ; ) switch(_fun00004_ip) {
 0:
                    entity = {};
                    zuuluu = {};
                    report = _closure1_slot0;
                    tangon = _closure1_slot2;
                    michal = 6;
                    tangon = tangon[michal];
                    michal = undefined;
                    oscard = report.bind(michal)(tangon);
                    report = oscard.withTiming;
                    michal = _closure2_slot0;
                    tangon = '0deg';
                    if(!michal) { _fun00004_ip = 56; continue _fun00003 }
 50:
                    tangon = '180deg';
 56:
                    michal = {};
                    golfie = 150;
                    michal['duration'] = golfie;
                    michal = report.bind(oscard)(tangon, michal);
                    zuuluu['rotate'] = michal;
                    michal = new Array(1);
                    michal[0] = zuuluu;
                    entity['transform'] = michal;
                    return entity;
                }
            };
            report = {};
            golfie = 6;
            golfie = offset[golfie];
            golfie = verify.bind(tangon)(golfie);
            golfie = golfie.withTiming;
            report['withTiming'] = golfie;
            report['collapsed'] = oscard;
            entity['__closure'] = report;
            report = 13855092771739.0;
            entity['__workletHash'] = report;
            report = _closure1_slot8;
            entity['__initData'] = report;
            backup = michal.bind(zuuluu)(entity);
            zuuluu = _closure1_slot6;
            michal = _closure1_slot4;
            entity = {};
            report = sizing.section;
            entity['style'] = report;
            golfie = _closure1_slot5;
            oscard = _closure1_slot3;
            report = {};
            result = sizing.audience;
            report['style'] = result;
            report['onPress'] = option;
            option = 7;
            option = offset[option];
            option = verify.bind(tangon)(option);
            verify = option.Text;
            option = {'variant': 'text-md/semibold', 'color': 'always-white', 'accessibilityRole': 'header'};
            offset = new Array(3);
            offset[0] = kiloes;
            kiloes = ' â€” ';
            offset[1] = kiloes;
            offset[2] = yankee;
            option['children'] = offset;
            verify = golfie.bind(tangon)(verify, option);
            option = new Array(3);
            option[0] = verify;
            verify = null;
            verify = verify != output;
            if(!verify) { _fun00002_ip = 299; continue _fun00001 }
 270:
            kiloes = _closure1_slot6;
            yankee = _closure1_slot4;
            offset = {};
            result = sizing.children;
            offset['style'] = result;
            offset['children'] = output;
            verify = kiloes.bind(tangon)(yankee, offset);
 299:
            option[1] = verify;
            yankee = _closure1_slot6;
            offset = _closure1_slot4;
            verify = {};
            kiloes = sizing.collapseButton;
            verify['style'] = kiloes;
            result = _closure1_slot1;
            echoed = _closure1_slot2;
            romeon = echoed[romeon];
            romeon = result.bind(tangon)(romeon);
            foxtra = romeon.View;
            romeon = {};
            romeon['style'] = backup;
            backup = 8;
            backup = echoed[backup];
            kiloes = result.bind(tangon)(backup);
            backup = {};
            output = 9;
            output = echoed[output];
            output = result.bind(tangon)(output);
            backup['source'] = output;
            sizing = sizing.collapseIcon;
            backup['style'] = sizing;
            backup = yankee.bind(tangon)(kiloes, backup);
            romeon['children'] = backup;
            romeon = yankee.bind(tangon)(foxtra, romeon);
            verify['children'] = romeon;
            verify = yankee.bind(tangon)(offset, verify);
            option[2] = verify;
            report['children'] = option;
            report = golfie.bind(tangon)(oscard, report);
            entity['children'] = report;
            entity = zuuluu.bind(tangon)(michal, entity);
            return entity;
        }
    };
    zuuluu['default'] = michal;
    return entity;
})();