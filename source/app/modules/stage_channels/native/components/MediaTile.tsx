// app/modules/stage_channels/native/components/MediaTile.tsx
export default (function(argFoo, argBar, argBaz, argCorge, _, argFred, argPlugh) {
    report = argBar;
    romeo = argBaz;
    zulu = argFred;
    oscar = argPlugh;
    var _closure1_slot0 = report;
    var _closure1_slot1 = romeo;
    var _closure1_slot2 = oscar;
    entity = global;
    options = entity.Object;
    golf = options.defineProperty;
    tango = {};
    entity = true;
    tango['value'] = entity;
    entity = '__esModule';
    entity = golf.bind(options)(zulu, entity, tango);
    entity = 0;
    golf = oscar[entity];
    tango = argCorge;
    entity = undefined;
    golf = tango.bind(entity)(golf);
    yankee = 1;
    tango = oscar[yankee];
    tango = report.bind(entity)(tango);
    options = tango.useWindowDimensions;
    var _closure1_slot3 = options;
    tango = tango.View;
    var _closure1_slot4 = tango;
    tango = 2;
    tango = oscar[tango];
    tango = romeo.bind(entity)(tango);
    var _closure1_slot5 = tango;
    tango = 3;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.ParticipantTypes;
    var _closure1_slot6 = tango;
    tango = 4;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.jsx;
    var _closure1_slot7 = tango;
    tango = 5;
    tango = oscar[tango];
    verify = report.bind(entity)(tango);
    options = verify.createStyles;
    tango = {};
    offset = {'flex': 1, 'marginHorizontal': 4, 'marginVertical': 4};
    tango['container'] = offset;
    offset = {};
    offset['flex'] = yankee;
    yankee = 6;
    yankee = oscar[yankee];
    yankee = romeo.bind(entity)(yankee);
    yankee = yankee.radii;
    yankee = yankee.sm;
    offset['borderRadius'] = yankee;
    tango['media'] = offset;
    tango = options.bind(verify)(tango);
    var _closure1_slot8 = tango;
    tango = golf.memo;
    mike = function(argFoo) {
        _fun104012: for(var _fun104012_ip = 0; ; ) switch(_fun104012_ip) {
 0:
            mike = argFoo;
            offset = mike.channel;
            var _closure2_slot0 = offset;
            yankee = mike.participant;
            var _closure2_slot1 = yankee;
            sizing = mike.size;
            mike = _closure1_slot8;
            report = undefined;
            options = mike.bind(report)();
            zulu = _closure1_slot0;
            tango = _closure1_slot2;
            verify = 7;
            mike = tango[verify];
            golf = zulu.bind(report)(mike);
            mike = golf.useSpeakerTileStyles;
            result = mike.bind(golf)();
            mike = _closure1_slot3;
            mike = mike.bind(report)();
            kilo = mike.width;
            mike = 8;
            mike = tango[mike];
            golf = zulu.bind(report)(mike);
            tango = golf.useStateFromStores;
            mike = _closure1_slot5;
            zulu = new Array(1);
            zulu[0] = mike;
            romeo = offset.id;
            mike = new Array(2);
            mike[0] = romeo;
            yankee = yankee.id;
            mike[1] = yankee;
            entity = function() {
                tango = _closure1_slot5;
                zulu = tango.getParticipant;
                mike = _closure2_slot0;
                mike = mike.id;
                entity = _closure2_slot1;
                entity = entity.id;
                entity = zulu.bind(tango)(mike, entity);
                return entity;
            };
            yankee = tango.bind(golf)(zulu, entity, mike);
            tango = null;
            mike = tango == yankee;
            entity = null;
            if(mike) { _fun104012_ip = 375; continue _fun104012 }
 164:
            zulu = yankee.type;
            mike = _closure1_slot6;
            mike = mike.ACTIVITY;
            entity = null;
            if(!(zulu !== mike)) { _fun104012_ip = 375; continue _fun104012 }
 188:
            tango = _closure1_slot7;
            zulu = _closure1_slot4;
            mike = {};
            romeo = options.container;
            golf = new Array(3);
            golf[0] = romeo;
            romeo = _closure1_slot0;
            foxtrot = _closure1_slot2;
            backup = foxtrot[verify];
            output = romeo.bind(report)(backup);
            backup = output.getSizeStyle;
            backup = backup.bind(output)(sizing, result);
            golf[1] = backup;
            verify = foxtrot[verify];
            backup = romeo.bind(report)(verify);
            verify = backup.getTileWidthStyle;
            verify = verify.bind(backup)(sizing, kilo);
            golf[2] = verify;
            mike['style'] = golf;
            golf = _closure1_slot1;
            oscar = 9;
            oscar = foxtrot[oscar];
            golf = golf.bind(report)(oscar);
            oscar = {'hasBottomSafeArea': false, 'hasLeftSafeArea': false, 'hasRightSafeArea': false, 'hasTopSafeArea': false};
            verify = false;
            oscar['participant'] = yankee;
            yankee = 10;
            yankee = foxtrot[yankee];
            yankee = romeo.bind(report)(yankee);
            yankee = yankee.AvatarSizes;
            yankee = yankee.XLARGE;
            oscar['avatarSize'] = yankee;
            oscar['channel'] = offset;
            oscar['shrinkStreamEmptyState'] = verify;
            options = options.media;
            oscar['contentStyle'] = options;
            oscar = tango.bind(report)(golf, oscar);
            mike['children'] = oscar;
            entity = tango.bind(report)(zulu, mike);
 375:
            return entity;
        }
    };
    mike = tango.bind(golf)(mike);
    tango = 11;
    tango = oscar[tango];
    oscar = report.bind(entity)(tango);
    report = oscar.fileFinishedImporting;
    tango = 'modules/stage_channels/native/components/MediaTile.tsx';
    tango = report.bind(oscar)(tango);
    zulu['default'] = mike;
    return entity;
})();