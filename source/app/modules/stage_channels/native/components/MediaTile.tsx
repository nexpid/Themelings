// app/modules/stage_channels/native/components/MediaTile.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    report = argBar;
    romeon = argBaz;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    var _closure1_slot1 = romeon;
    var _closure1_slot2 = oscard;
    entity = global;
    option = entity.Object;
    golfie = option.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(option)(zuuluu, entity, tangon);
    entity = 0;
    golfie = oscard[entity];
    tangon = argCor;
    entity = undefined;
    golfie = tangon.bind(entity)(golfie);
    yankee = 1;
    tangon = oscard[yankee];
    tangon = report.bind(entity)(tangon);
    option = tangon.useWindowDimensions;
    var _closure1_slot3 = option;
    tangon = tangon.View;
    var _closure1_slot4 = tangon;
    tangon = 2;
    tangon = oscard[tangon];
    tangon = romeon.bind(entity)(tangon);
    var _closure1_slot5 = tangon;
    tangon = 3;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.ParticipantTypes;
    var _closure1_slot6 = tangon;
    tangon = 4;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.jsx;
    var _closure1_slot7 = tangon;
    tangon = 5;
    tangon = oscard[tangon];
    verify = report.bind(entity)(tangon);
    option = verify.createStyles;
    tangon = {};
    offset = {'flex': 1, 'marginHorizontal': 4, 'marginVertical': 4};
    tangon['container'] = offset;
    offset = {};
    offset['flex'] = yankee;
    yankee = 6;
    yankee = oscard[yankee];
    yankee = romeon.bind(entity)(yankee);
    yankee = yankee.radii;
    yankee = yankee.sm;
    offset['borderRadius'] = yankee;
    tangon['media'] = offset;
    tangon = option.bind(verify)(tangon);
    var _closure1_slot8 = tangon;
    tangon = golfie.memo;
    michal = function(argFoo) {
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            michal = argFoo;
            offset = michal.channel;
            var _closure2_slot0 = offset;
            yankee = michal.participant;
            var _closure2_slot1 = yankee;
            sizing = michal.size;
            michal = _closure1_slot8;
            report = undefined;
            option = michal.bind(report)();
            zuuluu = _closure1_slot0;
            tangon = _closure1_slot2;
            verify = 7;
            michal = tangon[verify];
            golfie = zuuluu.bind(report)(michal);
            michal = golfie.useSpeakerTileStyles;
            result = michal.bind(golfie)();
            michal = _closure1_slot3;
            michal = michal.bind(report)();
            kiloes = michal.width;
            michal = 8;
            michal = tangon[michal];
            golfie = zuuluu.bind(report)(michal);
            tangon = golfie.useStateFromStores;
            michal = _closure1_slot5;
            zuuluu = new Array(1);
            zuuluu[0] = michal;
            romeon = offset.id;
            michal = new Array(2);
            michal[0] = romeon;
            yankee = yankee.id;
            michal[1] = yankee;
            entity = function() {
                tangon = _closure1_slot5;
                zuuluu = tangon.getParticipant;
                michal = _closure2_slot0;
                michal = michal.id;
                entity = _closure2_slot1;
                entity = entity.id;
                entity = zuuluu.bind(tangon)(michal, entity);
                return entity;
            };
            yankee = tangon.bind(golfie)(zuuluu, entity, michal);
            tangon = null;
            michal = tangon == yankee;
            entity = null;
            if(michal) { _fun00002_ip = 371; continue _fun00001 }
 164:
            zuuluu = yankee.type;
            michal = _closure1_slot6;
            michal = michal.ACTIVITY;
            entity = null;
            if(!(zuuluu !== michal)) { _fun00002_ip = 371; continue _fun00001 }
 188:
            tangon = _closure1_slot7;
            zuuluu = _closure1_slot4;
            michal = {};
            romeon = option.container;
            golfie = new Array(3);
            golfie[0] = romeon;
            romeon = _closure1_slot0;
            foxtra = _closure1_slot2;
            backup = foxtra[verify];
            output = romeon.bind(report)(backup);
            backup = output.getSizeStyle;
            backup = backup.bind(output)(sizing, result);
            golfie[1] = backup;
            verify = foxtra[verify];
            backup = romeon.bind(report)(verify);
            verify = backup.getTileWidthStyle;
            verify = verify.bind(backup)(sizing, kiloes);
            golfie[2] = verify;
            michal['style'] = golfie;
            golfie = _closure1_slot1;
            oscard = 9;
            oscard = foxtra[oscard];
            golfie = golfie.bind(report)(oscard);
            oscard = {'hasBottomSafeArea': false, 'hasLeftSafeArea': false, 'hasRightSafeArea': false, 'hasTopSafeArea': false};
            verify = false;
            oscard['participant'] = yankee;
            yankee = 10;
            yankee = foxtra[yankee];
            yankee = romeon.bind(report)(yankee);
            yankee = yankee.AvatarSizes;
            yankee = yankee.XLARGE;
            oscard['avatarSize'] = yankee;
            oscard['channel'] = offset;
            oscard['shrinkStreamEmptyState'] = verify;
            option = option.media;
            oscard['contentStyle'] = option;
            oscard = tangon.bind(report)(golfie, oscard);
            michal['children'] = oscard;
            entity = tangon.bind(report)(zuuluu, michal);
 371:
            return entity;
        }
    };
    michal = tangon.bind(golfie)(michal);
    tangon = 11;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/stage_channels/native/components/MediaTile.tsx';
    tangon = report.bind(oscard)(tangon);
    zuuluu['default'] = michal;
    return entity;
})();