// app/modules/stage_channels/native/components/ModeratorOverlayState.tsx
export default (function(argFoo, argBar, _, __, ___, argFred, argPlugh) {
    report = argBar;
    zulu = argFred;
    oscar = argPlugh;
    var _closure1_slot0 = report;
    var _closure1_slot1 = oscar;
    entity = global;
    options = entity.Object;
    golf = options.defineProperty;
    tango = {};
    entity = true;
    tango['value'] = entity;
    entity = '__esModule';
    entity = golf.bind(options)(zulu, entity, tango);
    entity = 0;
    tango = oscar[entity];
    entity = undefined;
    options = report.bind(entity)(tango);
    golf = options.createWithEqualityFn;
    tango = function(argFoo, argBar) {
        entity = argFoo;
        var _closure2_slot0 = entity;
        entity = argBar;
        var _closure2_slot1 = entity;
        entity = {};
        zulu = global;
        zulu = zulu.Set;
        tango = zulu.prototype;
        tango = Object.create(tango, {constructor: {value: zulu}});
        report = tango;
        zulu = new report[zulu](tango);
        zulu = zulu instanceof Object ? zulu : tango;
        entity['overlayDismissedChannelIds'] = zulu;
        mike = function(argFoo) { // Original name: dismissOverlay
            zulu = _closure2_slot1;
            entity = undefined;
            zulu = zulu.bind(entity)();
            report = zulu.overlayDismissedChannelIds;
            var _closure3_slot0 = report;
            tango = report.add;
            zulu = argFoo;
            zulu = tango.bind(report)(zulu);
            tango = _closure1_slot0;
            report = _closure1_slot1;
            zulu = 1;
            zulu = report[zulu];
            tango = tango.bind(entity)(zulu);
            zulu = tango.batchUpdates;
            mike = function() {
                zulu = _closure2_slot0;
                mike = {};
                entity = _closure3_slot0;
                mike['overlayDismissedChannelIds'] = entity;
                entity = undefined;
                entity = zulu.bind(entity)(mike);
                return entity;
            };
            mike = zulu.bind(tango)(mike);
            return entity;
        };
        entity['dismissOverlay'] = mike;
        return entity;
    };
    tango = golf.bind(options)(tango);
    var _closure1_slot2 = tango;
    tango = 3;
    tango = oscar[tango];
    oscar = report.bind(entity)(tango);
    report = oscar.fileFinishedImporting;
    tango = 'modules/stage_channels/native/components/ModeratorOverlayState.tsx';
    tango = report.bind(oscar)(tango);
    mike = function(argFoo) { // Original name: useModeratorOverlayChannelState
        tango = argFoo;
        var _closure2_slot0 = tango;
        golf = _closure1_slot2;
        report = _closure1_slot0;
        options = _closure1_slot1;
        entity = 2;
        zulu = options[entity];
        oscar = undefined;
        zulu = report.bind(oscar)(zulu);
        verify = zulu.shallow;
        zulu = function(argFoo) {
            entity = argFoo;
            entity = entity.overlayDismissedChannelIds;
            return entity;
        };
        zulu = golf.bind(oscar)(zulu, verify);
        entity = options[entity];
        entity = report.bind(oscar)(entity);
        report = entity.shallow;
        entity = function(argFoo) {
            entity = argFoo;
            entity = entity.dismissOverlay;
            return entity;
        };
        entity = golf.bind(oscar)(entity, report);
        var _closure2_slot1 = entity;
        entity = zulu.has;
        entity = entity.bind(zulu)(tango);
        zulu = !entity;
        entity = new Array(2);
        entity[0] = zulu;
        mike = function() {
            zulu = _closure2_slot1;
            mike = _closure2_slot0;
            entity = undefined;
            entity = zulu.bind(entity)(mike);
            return entity;
        };
        entity[1] = mike;
        return entity;
    };
    zulu['useModeratorOverlayChannelState'] = mike;
    return entity;
})();