// app/modules/stage_channels/native/components/ModeratorOverlayState.tsx
export default (function(global, require, metroImportDefault, metroImportAll, moduleObject, exports, dependencyMap) {
    var5 = require;
    var3 = exports;
    var6 = dependencyMap;
    var _closure1_slot0 = var5;
    var _closure1_slot1 = var6;
    var1 = global;
    var8 = var1.Object;
    var7 = var8.defineProperty;
    var4 = {};
    var1 = true;
    var4['value'] = var1;
    var1 = '__esModule';
    var1 = var7.bind(var8)(var3, var1, var4);
    var1 = 0;
    var4 = var6[var1];
    var1 = undefined;
    var8 = var5.bind(var1)(var4);
    var7 = var8.createWithEqualityFn;
    var4 = function(arg1, arg2) {
        var1 = arg1;
        var _closure2_slot0 = var1;
        var1 = arg2;
        var _closure2_slot1 = var1;
        var1 = {};
        var3 = global;
        var3 = var3.Set;
        var4 = var3.prototype;
        var4 = Object.create(var4, {constructor: {value: var3}});
        var5 = var4;
        var3 = new var5[var3](var4);
        var3 = var3 instanceof Object ? var3 : var4;
        var1['overlayDismissedChannelIds'] = var3;
        var2 = function dismissOverlay(arg1) {
            var3 = _closure2_slot1;
            var1 = undefined;
            var3 = var3.bind(var1)();
            var5 = var3.overlayDismissedChannelIds;
            var _closure3_slot0 = var5;
            var4 = var5.add;
            var3 = arg1;
            var3 = var4.bind(var5)(var3);
            var4 = _closure1_slot0;
            var5 = _closure1_slot1;
            var3 = 1;
            var3 = var5[var3];
            var4 = var4.bind(var1)(var3);
            var3 = var4.batchUpdates;
            var2 = function() {
                var3 = _closure2_slot0;
                var2 = {};
                var1 = _closure3_slot0;
                var2['overlayDismissedChannelIds'] = var1;
                var1 = undefined;
                var1 = var3.bind(var1)(var2);
                return var1;
            };
            var2 = var3.bind(var4)(var2);
            return var1;
        };
        var1['dismissOverlay'] = var2;
        return var1;
    };
    var4 = var7.bind(var8)(var4);
    var _closure1_slot2 = var4;
    var4 = 3;
    var4 = var6[var4];
    var6 = var5.bind(var1)(var4);
    var5 = var6.fileFinishedImporting;
    var4 = 'modules/stage_channels/native/components/ModeratorOverlayState.tsx';
    var4 = var5.bind(var6)(var4);
    var2 = function useModeratorOverlayChannelState(arg1) {
        var4 = arg1;
        var _closure2_slot0 = var4;
        var7 = _closure1_slot2;
        var5 = _closure1_slot0;
        var8 = _closure1_slot1;
        var1 = 2;
        var3 = var8[var1];
        var6 = undefined;
        var3 = var5.bind(var6)(var3);
        var9 = var3.shallow;
        var3 = function(arg1) {
            var1 = arg1;
            var1 = var1.overlayDismissedChannelIds;
            return var1;
        };
        var3 = var7.bind(var6)(var3, var9);
        var1 = var8[var1];
        var1 = var5.bind(var6)(var1);
        var5 = var1.shallow;
        var1 = function(arg1) {
            var1 = arg1;
            var1 = var1.dismissOverlay;
            return var1;
        };
        var1 = var7.bind(var6)(var1, var5);
        var _closure2_slot1 = var1;
        var1 = var3.has;
        var1 = var1.bind(var3)(var4);
        var3 = !var1;
        var1 = new Array(2);
        var1[0] = var3;
        var2 = function() {
            var3 = _closure2_slot1;
            var2 = _closure2_slot0;
            var1 = undefined;
            var1 = var3.bind(var1)(var2);
            return var1;
        };
        var1[1] = var2;
        return var1;
    };
    var3['useModeratorOverlayChannelState'] = var2;
    return var1;
})();