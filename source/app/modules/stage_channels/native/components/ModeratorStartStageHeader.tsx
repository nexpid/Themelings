// app/modules/stage_channels/native/components/ModeratorStartStageHeader.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    report = argBar;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    entity = argBaz;
    var _closure1_slot1 = entity;
    var _closure1_slot2 = oscard;
    entity = global;
    option = entity.Object;
    golfie = option.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(option)(zuuluu, entity, tangon);
    entity = 0;
    golfie = oscard[entity];
    tangon = argCor;
    entity = undefined;
    golfie = tangon.bind(entity)(golfie);
    tangon = 1;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.View;
    var _closure1_slot3 = tangon;
    tangon = 2;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    option = tangon.jsx;
    var _closure1_slot4 = option;
    tangon = tangon.jsxs;
    var _closure1_slot5 = tangon;
    tangon = 3;
    tangon = oscard[tangon];
    verify = report.bind(entity)(tangon);
    option = verify.createStyles;
    tangon = {};
    offset = {'height': null, 'flexDirection': 'row', 'alignItems': 'center', 'paddingHorizontal': 8, 'marginTop': 4, 'overflow': 'visible'};
    yankee = 4;
    yankee = oscard[yankee];
    yankee = report.bind(entity)(yankee);
    yankee = yankee.NAV_BAR_HEIGHT;
    offset['height'] = yankee;
    tangon['header'] = offset;
    offset = {'marginRight': 4, 'marginLeft': 4};
    tangon['chatButton'] = offset;
    tangon = option.bind(verify)(tangon);
    var _closure1_slot6 = tangon;
    tangon = golfie.memo;
    michal = function(argFoo) {
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            entity = argFoo;
            verify = entity.channel;
            entity = _closure1_slot6;
            tangon = undefined;
            report = entity.bind(tangon)();
            michal = _closure1_slot1;
            zuuluu = _closure1_slot2;
            entity = 5;
            entity = zuuluu[entity];
            michal = michal.bind(tangon)(entity);
            entity = verify.id;
            entity = michal.bind(tangon)(entity);
            michal = null;
            michal = michal == entity;
            golfie = undefined;
            if(michal) { _fun00002_ip = 68; continue _fun00001 }
 62:
            golfie = entity.speaker;
 68:
            zuuluu = _closure1_slot5;
            michal = _closure1_slot3;
            entity = {};
            report = report.header;
            entity['style'] = report;
            report = 'box-none';
            entity['pointerEvents'] = report;
            romeon = _closure1_slot4;
            yankee = _closure1_slot0;
            option = _closure1_slot2;
            offset = 6;
            report = option[offset];
            report = yankee.bind(tangon)(report);
            foxtra = report.HideStageChannelCallIcon;
            report = {};
            report['channel'] = verify;
            foxtra = romeon.bind(tangon)(foxtra, report);
            report = new Array(4);
            report[0] = foxtra;
            option = option[offset];
            option = yankee.bind(tangon)(option);
            yankee = option.StageChannelCallHeader;
            option = {};
            option['channel'] = verify;
            option = romeon.bind(tangon)(yankee, option);
            report[1] = option;
            if(!golfie) { _fun00002_ip = 226; continue _fun00001 }
 182:
            romeon = _closure1_slot4;
            yankee = _closure1_slot0;
            option = _closure1_slot2;
            option = option[offset];
            option = yankee.bind(tangon)(option);
            yankee = option.MusicMuteButton;
            option = {};
            foxtra = verify.id;
            option['channelId'] = foxtra;
            golfie = romeon.bind(tangon)(yankee, option);
 226:
            report[2] = golfie;
            option = _closure1_slot4;
            golfie = _closure1_slot0;
            oscard = _closure1_slot2;
            oscard = oscard[offset];
            oscard = golfie.bind(tangon)(oscard);
            golfie = oscard.StageInviteButton;
            oscard = {};
            verify = verify.id;
            oscard['channelId'] = verify;
            oscard = option.bind(tangon)(golfie, oscard);
            report[3] = oscard;
            entity['children'] = report;
            entity = zuuluu.bind(tangon)(michal, entity);
            return entity;
        }
    };
    michal = tangon.bind(golfie)(michal);
    tangon = 7;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/stage_channels/native/components/ModeratorStartStageHeader.tsx';
    tangon = report.bind(oscard)(tangon);
    zuuluu['default'] = michal;
    return entity;
})();