// app/modules/stage_channels/native/components/StageBlockedUsersActionSheet.tsx
export default (function(argFoo, argBar, argBaz, argCorge, _, argFred, argPlugh) {
    report = argBar;
    yankee = argBaz;
    zulu = argFred;
    oscar = argPlugh;
    var _closure1_slot0 = report;
    var _closure1_slot1 = yankee;
    var _closure1_slot2 = oscar;
    entity = function(argFoo) { // Original name: StageBlockedUsersActionSheetHeader
        _fun67716: for(var _fun67716_ip = 0; ; ) switch(_fun67716_ip) {
 0:
            entity = argFoo;
            kilo = entity.blockedUserCount;
            sizing = entity.ignoredUserCount;
            entity = _closure1_slot11;
            tango = undefined;
            yankee = entity.bind(tango)();
            zulu = _closure1_slot10;
            mike = _closure1_slot5;
            entity = 0;
            if(!(kilo > entity)) { _fun67716_ip = 49; continue _fun67716 }
 42:
            if(!(!(sizing > entity))) { _fun67716_ip = 571; continue _fun67716 }
 49:
            if(!(!(sizing > entity))) { _fun67716_ip = 312; continue _fun67716 }
 56:
            entity = {};
            report = yankee.header;
            entity['style'] = report;
            verify = _closure1_slot9;
            romeo = _closure1_slot0;
            output = _closure1_slot2;
            oscar = 14;
            report = output[oscar];
            report = romeo.bind(tango)(report);
            golf = report.Text;
            report = {'style': null, 'accessibilityRole': 'header', 'variant': 'heading-lg/extrabold', 'color': 'header-primary'};
            offset = yankee.title;
            report['style'] = offset;
            offset = 10;
            foxtrot = output[offset];
            foxtrot = romeo.bind(tango)(foxtrot);
            echo = foxtrot.intl;
            result = echo.format;
            foxtrot = output[offset];
            foxtrot = romeo.bind(tango)(foxtrot);
            foxtrot = foxtrot.t;
            backup = foxtrot.HviVAw;
            foxtrot = {};
            foxtrot['number'] = kilo;
            foxtrot = result.bind(echo)(backup, foxtrot);
            report['children'] = foxtrot;
            golf = verify.bind(tango)(golf, report);
            report = new Array(2);
            report[0] = golf;
            verify = _closure1_slot9;
            oscar = output[oscar];
            oscar = romeo.bind(tango)(oscar);
            golf = oscar.Text;
            oscar = {'style': null, 'variant': 'text-sm/medium', 'color': 'header-secondary'};
            foxtrot = yankee.description;
            oscar['style'] = foxtrot;
            foxtrot = output[offset];
            foxtrot = romeo.bind(tango)(foxtrot);
            backup = foxtrot.intl;
            foxtrot = backup.format;
            offset = output[offset];
            offset = romeo.bind(tango)(offset);
            offset = offset.t;
            romeo = offset.28qZMT;
            offset = {};
            offset['number'] = kilo;
            offset = foxtrot.bind(backup)(romeo, offset);
            oscar['children'] = offset;
            oscar = verify.bind(tango)(golf, oscar);
            report[1] = oscar;
            entity['children'] = report;
            _fun67716_ip = 566; continue _fun67716;
 312:
            report = {};
            oscar = yankee.header;
            report['style'] = oscar;
            offset = _closure1_slot9;
            foxtrot = _closure1_slot0;
            output = _closure1_slot2;
            golf = 14;
            oscar = output[golf];
            oscar = foxtrot.bind(tango)(oscar);
            verify = oscar.Text;
            oscar = {'style': null, 'accessibilityRole': 'header', 'variant': 'heading-lg/extrabold', 'color': 'header-primary'};
            romeo = yankee.title;
            oscar['style'] = romeo;
            romeo = 10;
            backup = output[romeo];
            backup = foxtrot.bind(tango)(backup);
            echo = backup.intl;
            result = echo.format;
            backup = output[romeo];
            backup = foxtrot.bind(tango)(backup);
            backup = backup.t;
            kilo = backup.wvygk5;
            backup = {};
            backup['number'] = sizing;
            backup = result.bind(echo)(kilo, backup);
            oscar['children'] = backup;
            verify = offset.bind(tango)(verify, oscar);
            oscar = new Array(2);
            oscar[0] = verify;
            offset = _closure1_slot9;
            golf = output[golf];
            golf = foxtrot.bind(tango)(golf);
            verify = golf.Text;
            golf = {'style': null, 'variant': 'text-sm/medium', 'color': 'header-secondary'};
            backup = yankee.description;
            golf['style'] = backup;
            backup = output[romeo];
            backup = foxtrot.bind(tango)(backup);
            kilo = backup.intl;
            backup = kilo.format;
            romeo = output[romeo];
            romeo = foxtrot.bind(tango)(romeo);
            romeo = romeo.t;
            foxtrot = romeo.Ri3o39;
            romeo = {};
            romeo['number'] = sizing;
            romeo = backup.bind(kilo)(foxtrot, romeo);
            golf['children'] = romeo;
            golf = offset.bind(tango)(verify, golf);
            oscar[1] = golf;
            report['children'] = oscar;
            entity = report;
 566:
            _fun67716_ip = 809; continue _fun67716;
 571:
            report = {};
            oscar = yankee.header;
            report['style'] = oscar;
            romeo = _closure1_slot9;
            foxtrot = _closure1_slot0;
            backup = _closure1_slot2;
            golf = 14;
            oscar = backup[golf];
            oscar = foxtrot.bind(tango)(oscar);
            verify = oscar.Text;
            oscar = {'style': null, 'accessibilityRole': 'header', 'variant': 'heading-lg/extrabold', 'color': 'header-primary'};
            offset = yankee.title;
            oscar['style'] = offset;
            offset = 10;
            kilo = backup[offset];
            kilo = foxtrot.bind(tango)(kilo);
            output = kilo.intl;
            sizing = output.string;
            kilo = backup[offset];
            kilo = foxtrot.bind(tango)(kilo);
            kilo = kilo.t;
            kilo = kilo.Uzdyho;
            kilo = sizing.bind(output)(kilo);
            oscar['children'] = kilo;
            verify = romeo.bind(tango)(verify, oscar);
            oscar = new Array(2);
            oscar[0] = verify;
            verify = _closure1_slot9;
            golf = backup[golf];
            golf = foxtrot.bind(tango)(golf);
            options = golf.Text;
            golf = {'style': null, 'variant': 'text-sm/medium', 'color': 'header-secondary'};
            yankee = yankee.description;
            golf['style'] = yankee;
            yankee = backup[offset];
            yankee = foxtrot.bind(tango)(yankee);
            romeo = yankee.intl;
            yankee = romeo.string;
            offset = backup[offset];
            offset = foxtrot.bind(tango)(offset);
            offset = offset.t;
            offset = offset.P/KFX1;
            offset = yankee.bind(romeo)(offset);
            golf['children'] = offset;
            golf = verify.bind(tango)(options, golf);
            oscar[1] = golf;
            report['children'] = oscar;
            entity = report;
 809:
            entity = zulu.bind(tango)(mike, entity);
            return entity;
        }
    };
    var _closure1_slot13 = entity;
    entity = global;
    options = entity.Object;
    golf = options.defineProperty;
    tango = {};
    entity = true;
    tango['value'] = entity;
    entity = '__esModule';
    entity = golf.bind(options)(zulu, entity, tango);
    entity = 0;
    tango = oscar[entity];
    entity = undefined;
    tango = yankee.bind(entity)(tango);
    var _closure1_slot3 = tango;
    tango = 1;
    golf = oscar[tango];
    tango = argCorge;
    tango = tango.bind(entity)(golf);
    var _closure1_slot4 = tango;
    tango = 2;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.View;
    var _closure1_slot5 = tango;
    tango = 3;
    tango = oscar[tango];
    tango = yankee.bind(entity)(tango);
    var _closure1_slot6 = tango;
    tango = 4;
    tango = oscar[tango];
    tango = yankee.bind(entity)(tango);
    var _closure1_slot7 = tango;
    tango = 5;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.STAGE_BLOCKED_USERS_SHEET_KEY;
    var _closure1_slot8 = tango;
    tango = 6;
    golf = oscar[tango];
    golf = report.bind(entity)(golf);
    golf = golf.jsx;
    var _closure1_slot9 = golf;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.jsxs;
    var _closure1_slot10 = tango;
    tango = 7;
    tango = oscar[tango];
    options = report.bind(entity)(tango);
    golf = options.createStyles;
    tango = {};
    verify = {};
    offset = 16;
    verify['paddingHorizontal'] = offset;
    tango['container'] = verify;
    verify = {};
    verify['padding'] = offset;
    tango['header'] = verify;
    offset = 8;
    verify = {'marginTop': 16, 'marginBottom': 8, 'textAlign': 'center'};
    tango['title'] = verify;
    verify = {'textAlign': 'center', 'marginBottom': 16};
    tango['description'] = verify;
    verify = {};
    verify['marginBottom'] = offset;
    tango['button'] = verify;
    verify = {'width': '100%', 'backgroundColor': null, 'paddingHorizontal': 16, 'paddingVertical': 8};
    romeo = oscar[offset];
    romeo = yankee.bind(entity)(romeo);
    romeo = romeo.colors;
    romeo = romeo.BACKGROUND_MOBILE_PRIMARY;
    verify['backgroundColor'] = romeo;
    tango['buttons'] = verify;
    verify = {'display': 'flex', 'flexDirection': 'row', 'alignItems': 'center', 'justifyContent': 'flex-start', 'marginVertical': 8, 'width': '100%'};
    tango['userContainer'] = verify;
    verify = {'position': 'relative', 'padding': 8, 'paddingTop': 0, 'paddingBottom': 4, 'marginEnd': 12};
    tango['avatarContainer'] = verify;
    verify = {};
    romeo = 0.5;
    verify['opacity'] = romeo;
    tango['avatar'] = verify;
    verify = {'position': 'absolute', 'top': 4294967292, 'right': 4, 'height': 16, 'width': 16, 'alignItems': 'center', 'justifyContent': 'center', 'borderRadius': 8, 'borderWidth': 1};
    romeo = oscar[offset];
    romeo = yankee.bind(entity)(romeo);
    romeo = romeo.colors;
    romeo = romeo.BACKGROUND_MOBILE_PRIMARY;
    verify['borderColor'] = romeo;
    romeo = oscar[offset];
    romeo = yankee.bind(entity)(romeo);
    romeo = romeo.colors;
    romeo = romeo.BACKGROUND_ACCENT;
    verify['backgroundColor'] = romeo;
    tango['iconContainer'] = verify;
    verify = {'height': 12, 'width': 12};
    tango['icon'] = verify;
    verify = {'display': 'flex', 'flexDirection': 'row'};
    tango['flex'] = verify;
    verify = {};
    romeo = oscar[offset];
    romeo = yankee.bind(entity)(romeo);
    romeo = romeo.unsafe_rawColors;
    romeo = romeo.RED_400;
    verify['color'] = romeo;
    tango['blocked'] = verify;
    verify = {};
    offset = oscar[offset];
    offset = yankee.bind(entity)(offset);
    offset = offset.colors;
    offset = offset.TEXT_NORMAL;
    verify['color'] = offset;
    tango['ignored'] = verify;
    tango = golf.bind(options)(tango);
    var _closure1_slot11 = tango;
    tango = function(argFoo) { // Original name: RestrictedUser
        _fun67717: for(var _fun67717_ip = 0; ; ) switch(_fun67717_ip) {
 0:
            entity = argFoo;
            sizing = entity.participant;
            golf = entity.guildId;
            entity = entity.channelId;
            var _closure2_slot0 = entity;
            entity = _closure1_slot11;
            tango = undefined;
            source = entity.bind(tango)();
            report = sizing.user;
            var _closure2_slot1 = report;
            verify = sizing.speaker;
            oscar = _closure1_slot0;
            mike = _closure1_slot2;
            options = 9;
            entity = mike[options];
            romeo = oscar.bind(tango)(entity);
            yankee = romeo.useStateFromStores;
            entity = _closure1_slot7;
            offset = new Array(1);
            offset[0] = entity;
            entity = function() {
                tango = _closure1_slot7;
                zulu = tango.isModerator;
                mike = _closure2_slot1;
                mike = mike.id;
                entity = _closure2_slot0;
                entity = zulu.bind(tango)(mike, entity);
                return entity;
            };
            entity = yankee.bind(romeo)(offset, entity);
            options = mike[options];
            yankee = oscar.bind(tango)(options);
            offset = yankee.useStateFromStores;
            romeo = _closure1_slot6;
            options = new Array(1);
            options[0] = romeo;
            zulu = function() {
                zulu = _closure1_slot6;
                mike = zulu.isBlocked;
                entity = _closure2_slot1;
                entity = entity.id;
                entity = mike.bind(zulu)(entity);
                return entity;
            };
            echo = offset.bind(yankee)(options, zulu);
            zulu = report.getAvatarSource;
            foxtrot = zulu.bind(report)(golf);
            sequence = 10;
            zulu = mike[sequence];
            zulu = oscar.bind(tango)(zulu);
            report = zulu.intl;
            zulu = report.string;
            mike = mike[sequence];
            mike = oscar.bind(tango)(mike);
            mike = mike.t;
            mike = mike.suRAp6;
            mike = zulu.bind(report)(mike);
            if(verify) { _fun67717_ip = 263; continue _fun67717 }
 203:
            result = mike;
            if(!entity) { _fun67717_ip = 315; continue _fun67717 }
 209:
            report = _closure1_slot0;
            entity = _closure1_slot2;
            mike = entity[sequence];
            mike = report.bind(tango)(mike);
            zulu = mike.intl;
            mike = zulu.string;
            entity = entity[sequence];
            entity = report.bind(tango)(entity);
            entity = entity.t;
            entity = entity.GMZqSk;
            result = mike.bind(zulu)(entity);
            _fun67717_ip = 315; continue _fun67717;
 263:
            report = _closure1_slot0;
            entity = _closure1_slot2;
            mike = entity[sequence];
            mike = report.bind(tango)(mike);
            zulu = mike.intl;
            mike = zulu.string;
            entity = entity[sequence];
            entity = report.bind(tango)(entity);
            entity = entity.t;
            entity = entity.LqMmGx;
            result = mike.bind(zulu)(entity);
 315:
            zulu = _closure1_slot10;
            mike = _closure1_slot5;
            entity = {};
            report = source.userContainer;
            entity['style'] = report;
            golf = _closure1_slot10;
            oscar = _closure1_slot5;
            report = {};
            options = source.avatarContainer;
            report['style'] = options;
            yankee = _closure1_slot9;
            offset = _closure1_slot1;
            kilo = _closure1_slot2;
            romeo = 11;
            options = kilo[romeo];
            offset = offset.bind(tango)(options);
            options = {};
            options['source'] = foxtrot;
            foxtrot = _closure1_slot0;
            romeo = kilo[romeo];
            romeo = foxtrot.bind(tango)(romeo);
            romeo = romeo.AvatarSizes;
            romeo = romeo.REFRESH_MEDIUM_32;
            options['size'] = romeo;
            romeo = source.avatar;
            options['style'] = romeo;
            offset = yankee.bind(tango)(offset, options);
            options = new Array(2);
            options[0] = offset;
            if(!verify) { _fun67717_ip = 566; continue _fun67717 }
 444:
            romeo = _closure1_slot9;
            yankee = _closure1_slot5;
            offset = {};
            kilo = source.iconContainer;
            foxtrot = new Array(1);
            foxtrot[0] = kilo;
            offset['style'] = foxtrot;
            output = _closure1_slot9;
            control = _closure1_slot1;
            vacuum = _closure1_slot2;
            foxtrot = 12;
            foxtrot = vacuum[foxtrot];
            kilo = control.bind(tango)(foxtrot);
            foxtrot = {};
            update = source.icon;
            foxtrot['style'] = update;
            update = 13;
            update = vacuum[update];
            update = control.bind(tango)(update);
            foxtrot['source'] = update;
            update = 8;
            update = vacuum[update];
            update = control.bind(tango)(update);
            update = update.unsafe_rawColors;
            update = update.WHITE_500;
            foxtrot['color'] = update;
            foxtrot = output.bind(tango)(kilo, foxtrot);
            offset['children'] = foxtrot;
            verify = romeo.bind(tango)(yankee, offset);
 566:
            options[1] = verify;
            report['children'] = options;
            oscar = golf.bind(tango)(oscar, report);
            report = new Array(2);
            report[0] = oscar;
            options = _closure1_slot10;
            golf = _closure1_slot5;
            oscar = {};
            verify = {};
            offset = source.flex;
            verify['style'] = offset;
            romeo = _closure1_slot9;
            yankee = _closure1_slot0;
            offset = _closure1_slot2;
            output = 14;
            offset = offset[output];
            offset = yankee.bind(tango)(offset);
            yankee = offset.Text;
            offset = {'variant': 'text-sm/medium', 'color': 'header-primary'};
            kilo = sizing.user;
            foxtrot = kilo.toString;
            foxtrot = foxtrot.bind(kilo)();
            offset['children'] = foxtrot;
            yankee = romeo.bind(tango)(yankee, offset);
            offset = new Array(2);
            offset[0] = yankee;
            romeo = sizing.user;
            yankee = romeo.isPomelo;
            yankee = yankee.bind(romeo)();
            yankee = !yankee;
            if(!yankee) { _fun67717_ip = 780; continue _fun67717 }
 705:
            kilo = _closure1_slot10;
            foxtrot = _closure1_slot0;
            romeo = _closure1_slot2;
            romeo = romeo[output];
            romeo = foxtrot.bind(tango)(romeo);
            foxtrot = romeo.Text;
            romeo = {'variant': 'text-sm/medium', 'color': 'header-secondary'};
            sizing = sizing.user;
            update = sizing.discriminator;
            sizing = ['#'];
            sizing[1] = update;
            romeo['children'] = sizing;
            yankee = kilo.bind(tango)(foxtrot, romeo);
 780:
            offset[1] = yankee;
            verify['children'] = offset;
            offset = options.bind(tango)(golf, verify);
            verify = new Array(2);
            verify[0] = offset;
            romeo = _closure1_slot10;
            yankee = _closure1_slot5;
            offset = {};
            foxtrot = source.flex;
            offset['style'] = foxtrot;
            sizing = _closure1_slot9;
            kilo = _closure1_slot0;
            update = _closure1_slot2;
            foxtrot = 15;
            foxtrot = update[foxtrot];
            foxtrot = kilo.bind(tango)(foxtrot);
            kilo = foxtrot.LegacyText;
            foxtrot = {};
            if(echo) { _fun67717_ip = 864; continue _fun67717 }
 856:
            update = source.ignored;
            _fun67717_ip = 870; continue _fun67717;
 864:
            update = source.blocked;
 870:
            foxtrot['style'] = update;
            vacuum = _closure1_slot0;
            update = _closure1_slot2;
            source = update[sequence];
            source = vacuum.bind(tango)(source);
            control = source.intl;
            source = control.string;
            update = update[sequence];
            update = vacuum.bind(tango)(update);
            update = update.t;
            if(echo) { _fun67717_ip = 931; continue _fun67717 }
 918:
            echo = update.tFY5ZW;
            echo = source.bind(control)(echo);
            _fun67717_ip = 942; continue _fun67717;
 931:
            update = update.4bDptL;
            echo = source.bind(control)(update);
 942:
            foxtrot['children'] = echo;
            kilo = sizing.bind(tango)(kilo, foxtrot);
            foxtrot = new Array(2);
            foxtrot[0] = kilo;
            sizing = _closure1_slot10;
            kilo = _closure1_slot0;
            backup = _closure1_slot2;
            backup = backup[output];
            backup = kilo.bind(tango)(backup);
            kilo = backup.Text;
            backup = {'variant': 'text-sm/medium', 'color': 'text-muted'};
            output = [' ', '| '];
            output[2] = result;
            backup['children'] = output;
            backup = sizing.bind(tango)(kilo, backup);
            foxtrot[1] = backup;
            offset['children'] = foxtrot;
            offset = romeo.bind(tango)(yankee, offset);
            verify[1] = offset;
            oscar['children'] = verify;
            oscar = options.bind(tango)(golf, oscar);
            report[1] = oscar;
            entity['children'] = report;
            entity = zulu.bind(tango)(mike, entity);
            return entity;
        }
    };
    var _closure1_slot12 = tango;
    tango = 22;
    tango = oscar[tango];
    oscar = report.bind(entity)(tango);
    report = oscar.fileFinishedImporting;
    tango = 'modules/stage_channels/native/components/StageBlockedUsersActionSheet.tsx';
    tango = report.bind(oscar)(tango);
    mike = function(argFoo) { // Original name: StageBlockedUsersActionSheet
        entity = argFoo;
        mike = entity.channel;
        var _closure2_slot0 = mike;
        entity = entity.onAccept;
        var _closure2_slot1 = entity;
        entity = _closure1_slot11;
        tango = undefined;
        foxtrot = entity.bind(tango)();
        yankee = _closure1_slot4;
        entity = yankee.useState;
        zulu = 0;
        golf = entity.bind(yankee)(zulu);
        report = _closure1_slot3;
        entity = 2;
        report = report.bind(tango)(golf, entity);
        offset = report[zulu];
        entity = 1;
        entity = report[entity];
        var _closure2_slot2 = entity;
        vacuum = function() { // Original name: handleDismiss
            tango = _closure1_slot1;
            zulu = _closure1_slot2;
            entity = 16;
            zulu = zulu[entity];
            entity = undefined;
            tango = tango.bind(entity)(zulu);
            zulu = tango.hideActionSheet;
            mike = _closure1_slot8;
            mike = zulu.bind(tango)(mike);
            return entity;
        };
        var _closure2_slot3 = vacuum;
        kilo = _closure1_slot0;
        sizing = _closure1_slot2;
        report = 17;
        entity = sizing[report];
        options = kilo.bind(tango)(entity);
        golf = options.useStageBlockedUsers;
        entity = mike.id;
        entity = golf.bind(options)(entity);
        report = sizing[report];
        golf = kilo.bind(tango)(report);
        report = golf.useStageIgnoredUsers;
        mike = mike.id;
        mike = report.bind(golf)(mike);
        update = entity.length;
        echo = mike.length;
        options = yankee.useCallback;
        golf = function(argFoo) {
            zulu = _closure2_slot2;
            entity = argFoo;
            entity = entity.nativeEvent;
            entity = entity.layout;
            mike = entity.height;
            entity = undefined;
            mike = zulu.bind(entity)(mike);
            return entity;
        };
        report = new Array(0);
        golf = options.bind(yankee)(golf, report);
        yankee = _closure1_slot10;
        report = 18;
        report = sizing[report];
        report = kilo.bind(tango)(report);
        options = report.SafeAreaPaddingView;
        report = {};
        backup = true;
        report['bottom'] = backup;
        romeo = foxtrot.buttons;
        report['style'] = romeo;
        report['onLayout'] = golf;
        source = _closure1_slot9;
        golf = _closure1_slot1;
        sequence = 19;
        romeo = sizing[sequence];
        result = golf.bind(tango)(romeo);
        output = {};
        romeo = sizing[sequence];
        romeo = golf.bind(tango)(romeo);
        romeo = romeo.Colors;
        romeo = romeo.BRAND;
        output['color'] = romeo;
        romeo = 10;
        control = sizing[romeo];
        control = kilo.bind(tango)(control);
        record = control.intl;
        config = record.string;
        control = sizing[romeo];
        control = kilo.bind(tango)(control);
        control = control.t;
        control = control.mbD50N;
        control = config.bind(record)(control);
        output['text'] = control;
        control = function() { // Original name: onPress
            tango = _closure2_slot1;
            zulu = _closure2_slot0;
            entity = undefined;
            zulu = tango.bind(entity)(zulu);
            mike = _closure2_slot3;
            mike = mike.bind(entity)();
            return entity;
        };
        output['onPress'] = control;
        result = source.bind(tango)(result, output);
        output = new Array(2);
        output[0] = result;
        control = _closure1_slot9;
        result = sizing[sequence];
        source = golf.bind(tango)(result);
        result = {};
        sequence = sizing[sequence];
        sequence = golf.bind(tango)(sequence);
        sequence = sequence.Colors;
        sequence = sequence.TRANSPARENT;
        result['color'] = sequence;
        sequence = sizing[romeo];
        sequence = kilo.bind(tango)(sequence);
        record = sequence.intl;
        config = record.string;
        sequence = sizing[romeo];
        sequence = kilo.bind(tango)(sequence);
        sequence = sequence.t;
        sequence = sequence.CZGqeX;
        sequence = config.bind(record)(sequence);
        result['text'] = sequence;
        result['onPress'] = vacuum;
        result = control.bind(tango)(source, result);
        output[1] = result;
        report['children'] = output;
        report = yankee.bind(tango)(options, report);
        yankee = new Array(0);
        target = yankee;
        papa = entity;
        context = 0;
        context = arraySpread(target, papa, context);
        target = yankee;
        papa = mike;
        entity = arraySpread(target, papa, context);
        var _closure2_slot4 = yankee;
        zulu = _closure1_slot10;
        entity = 20;
        entity = sizing[entity];
        entity = kilo.bind(tango)(entity);
        mike = entity.BottomSheet;
        entity = {};
        entity['scrollable'] = backup;
        result = _closure1_slot9;
        output = _closure1_slot13;
        options = {};
        options['blockedUserCount'] = update;
        options['ignoredUserCount'] = echo;
        options = result.bind(tango)(output, options);
        entity['header'] = options;
        entity['footer'] = report;
        options = _closure1_slot9;
        report = 21;
        report = sizing[report];
        golf = golf.bind(tango)(report);
        report = {};
        report['inActionSheet'] = backup;
        foxtrot = foxtrot.container;
        report['contentContainerStyle'] = foxtrot;
        foxtrot = sizing[romeo];
        foxtrot = kilo.bind(tango)(foxtrot);
        backup = foxtrot.intl;
        foxtrot = backup.string;
        romeo = sizing[romeo];
        romeo = kilo.bind(tango)(romeo);
        romeo = romeo.t;
        romeo = romeo.3VoRLC;
        romeo = foxtrot.bind(backup)(romeo);
        report['accessibilityLabel'] = romeo;
        romeo = yankee.length;
        yankee = new Array(1);
        yankee[0] = romeo;
        report['sections'] = yankee;
        yankee = function(argFoo, argBar) { // Original name: renderItem
            tango = _closure1_slot9;
            zulu = _closure1_slot12;
            mike = {};
            oscar = _closure2_slot4;
            report = argBar;
            report = oscar[report];
            mike['participant'] = report;
            entity = _closure2_slot0;
            report = entity.getGuildId;
            report = report.bind(entity)();
            mike['guildId'] = report;
            entity = entity.id;
            mike['channelId'] = entity;
            entity = undefined;
            entity = tango.bind(entity)(zulu, mike);
            return entity;
        };
        report['renderItem'] = yankee;
        verify = function() { // Original name: itemSize
            entity = 48;
            return entity;
        };
        report['itemSize'] = verify;
        golf = options.bind(tango)(golf, report);
        report = new Array(2);
        report[0] = golf;
        options = _closure1_slot9;
        golf = _closure1_slot5;
        oscar = {};
        verify = {};
        verify['height'] = offset;
        oscar['style'] = verify;
        oscar = options.bind(tango)(golf, oscar);
        report[1] = oscar;
        entity['children'] = report;
        entity = zulu.bind(tango)(mike, entity);
        return entity;
    };
    zulu['default'] = mike;
    return entity;
})();