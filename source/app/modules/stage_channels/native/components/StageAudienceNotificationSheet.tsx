// app/modules/stage_channels/native/components/StageAudienceNotificationSheet.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    report = argBar;
    foxtra = argBaz;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    var _closure1_slot1 = foxtra;
    var _closure1_slot2 = oscard;
    entity = function() { // Original name: handleDismiss
        tangon = _closure1_slot1;
        zuuluu = _closure1_slot2;
        entity = 8;
        zuuluu = zuuluu[entity];
        entity = undefined;
        tangon = tangon.bind(entity)(zuuluu);
        zuuluu = tangon.hideActionSheet;
        michal = _closure1_slot5;
        michal = zuuluu.bind(tangon)(michal);
        return entity;
    };
    var _closure1_slot10 = entity;
    entity = function(argFoo) { // Original name: BulletIcon
        entity = argFoo;
        romeon = entity.source;
        entity = _closure1_slot9;
        tangon = undefined;
        option = entity.bind(tangon)();
        zuuluu = _closure1_slot7;
        michal = _closure1_slot3;
        entity = {};
        oscard = option.headerBulletIconContainer;
        entity['style'] = oscard;
        golfie = _closure1_slot7;
        offset = _closure1_slot1;
        yankee = _closure1_slot2;
        verify = 9;
        report = yankee[verify];
        oscard = offset.bind(tangon)(report);
        report = {};
        report['source'] = romeon;
        verify = yankee[verify];
        verify = offset.bind(tangon)(verify);
        verify = verify.Sizes;
        verify = verify.MEDIUM;
        report['size'] = verify;
        option = option.headerBulletIconComponent;
        report['style'] = option;
        report = golfie.bind(tangon)(oscard, report);
        entity['children'] = report;
        entity = zuuluu.bind(tangon)(michal, entity);
        return entity;
    };
    var _closure1_slot11 = entity;
    entity = global;
    option = entity.Object;
    golfie = option.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(option)(zuuluu, entity, tangon);
    offset = 0;
    golfie = oscard[offset];
    tangon = argCor;
    entity = undefined;
    tangon = tangon.bind(entity)(golfie);
    tangon = 1;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.View;
    var _closure1_slot3 = tangon;
    tangon = 2;
    tangon = oscard[tangon];
    tangon = foxtra.bind(entity)(tangon);
    var _closure1_slot4 = tangon;
    tangon = 3;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.STAGE_AUDIENCE_NOTICE_SHEET_KEY;
    var _closure1_slot5 = tangon;
    tangon = 4;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.GuildScheduledEventPrivacyLevel;
    var _closure1_slot6 = tangon;
    tangon = 5;
    golfie = oscard[tangon];
    golfie = report.bind(entity)(golfie);
    golfie = golfie.jsx;
    var _closure1_slot7 = golfie;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.jsxs;
    var _closure1_slot8 = tangon;
    tangon = 6;
    tangon = oscard[tangon];
    option = report.bind(entity)(tangon);
    golfie = option.createStyles;
    tangon = {};
    verify = {};
    yankee = 16;
    verify['padding'] = yankee;
    tangon['container'] = verify;
    verify = {'alignItems': 'center', 'paddingVertical': 16};
    tangon['header'] = verify;
    verify = {};
    tangon['headerImage'] = verify;
    verify = {'marginTop': 16, 'marginBottom': 8};
    tangon['headerTitle'] = verify;
    verify = {'alignItems': 'center', 'justifyContent': 'center', 'height': 40, 'width': 40, 'borderRadius': 20};
    yankee = 20;
    romeon = 7;
    backup = oscard[romeon];
    backup = foxtra.bind(entity)(backup);
    backup = backup.colors;
    backup = backup.BACKGROUND_TERTIARY;
    verify['backgroundColor'] = backup;
    tangon['headerBulletIconContainer'] = verify;
    verify = {};
    romeon = oscard[romeon];
    romeon = foxtra.bind(entity)(romeon);
    romeon = romeon.colors;
    romeon = romeon.INTERACTIVE_NORMAL;
    verify['tintColor'] = romeon;
    tangon['headerBulletIconComponent'] = verify;
    verify = {'flexDirection': 'column', 'alignItems': 'flex-start'};
    tangon['headerBulletList'] = verify;
    verify = {};
    verify['lineHeight'] = yankee;
    tangon['headerBullet'] = verify;
    verify = {};
    verify['marginTop'] = offset;
    tangon['startButton'] = verify;
    tangon = golfie.bind(option)(tangon);
    var _closure1_slot9 = tangon;
    tangon = 22;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/stage_channels/native/components/StageAudienceNotificationSheet.tsx';
    tangon = report.bind(oscard)(tangon);
    michal = function(argFoo) { // Original name: StageAudienceNotificationSheet
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            michal = argFoo;
            michal = michal.channelId;
            var _closure2_slot0 = michal;
            michal = _closure1_slot9;
            tangon = undefined;
            romeon = michal.bind(tangon)();
            zuuluu = _closure1_slot0;
            report = _closure1_slot2;
            michal = 10;
            michal = report[michal];
            report = zuuluu.bind(tangon)(michal);
            zuuluu = report.useStateFromStores;
            oscard = _closure1_slot4;
            michal = new Array(1);
            michal[0] = oscard;
            entity = function() {
                zuuluu = _closure1_slot4;
                michal = zuuluu.getStageInstanceByChannel;
                entity = _closure2_slot0;
                entity = michal.bind(zuuluu)(entity);
                return entity;
            };
            entity = zuuluu.bind(report)(michal, entity);
            sizing = null;
            michal = sizing == entity;
            echoed = undefined;
            if(michal) { _fun00002_ip = 92; continue _fun00001 }
 86:
            echoed = entity.privacy_level;
 92:
            entity = _closure1_slot6;
            result = entity.PUBLIC;
            zuuluu = _closure1_slot7;
            status = _closure1_slot1;
            papara = _closure1_slot2;
            entity = 11;
            entity = papara[entity];
            michal = status.bind(tangon)(entity);
            entity = {};
            golfie = _closure1_slot8;
            oscard = _closure1_slot3;
            report = {};
            option = romeon.container;
            report['style'] = option;
            verify = _closure1_slot3;
            option = {};
            offset = romeon.header;
            option['style'] = offset;
            foxtra = _closure1_slot7;
            offset = 12;
            offset = papara[offset];
            yankee = status.bind(tangon)(offset);
            offset = {};
            backup = 13;
            backup = papara[backup];
            backup = status.bind(tangon)(backup);
            offset['source'] = backup;
            backup = romeon.headerImage;
            offset['style'] = backup;
            yankee = foxtra.bind(tangon)(yankee, offset);
            offset = new Array(3);
            offset[0] = yankee;
            backup = _closure1_slot7;
            sierra = _closure1_slot0;
            source = 14;
            yankee = papara[source];
            yankee = sierra.bind(tangon)(yankee);
            foxtra = yankee.Text;
            yankee = {'style': null, 'accessibilityRole': 'header', 'variant': 'heading-xl/extrabold', 'color': 'header-primary'};
            output = romeon.headerTitle;
            yankee['style'] = output;
            update = 15;
            output = papara[update];
            output = sierra.bind(tangon)(output);
            vacuum = output.intl;
            ctrled = vacuum.string;
            output = papara[update];
            output = sierra.bind(tangon)(output);
            output = output.t;
            output = output.UVuXCg;
            output = ctrled.bind(vacuum)(output);
            yankee['children'] = output;
            yankee = backup.bind(tangon)(foxtra, yankee);
            offset[1] = yankee;
            foxtra = _closure1_slot3;
            yankee = {};
            backup = romeon.headerBulletList;
            yankee['style'] = backup;
            vacuum = _closure1_slot7;
            output = 16;
            backup = papara[output];
            backup = sierra.bind(tangon)(backup);
            ctrled = backup.FormRow;
            backup = {};
            config = _closure1_slot7;
            cntext = _closure1_slot11;
            sequen = {};
            record = 17;
            record = papara[record];
            record = status.bind(tangon)(record);
            sequen['source'] = record;
            sequen = config.bind(tangon)(cntext, sequen);
            backup['leading'] = sequen;
            record = _closure1_slot7;
            sequen = papara[source];
            sequen = sierra.bind(tangon)(sequen);
            config = sequen.Text;
            sequen = {'style': null, 'variant': 'text-md/medium', 'color': 'header-secondary'};
            target = romeon.headerBullet;
            sequen['style'] = target;
            target = papara[update];
            target = sierra.bind(tangon)(target);
            whisks = target.intl;
            limora = whisks.string;
            target = papara[update];
            target = sierra.bind(tangon)(target);
            target = target.t;
            target = target.sBDfo6;
            target = limora.bind(whisks)(target);
            sequen['children'] = target;
            sequen = record.bind(tangon)(config, sequen);
            backup['label'] = sequen;
            ctrled = vacuum.bind(tangon)(ctrled, backup);
            backup = new Array(4);
            backup[0] = ctrled;
            sequen = _closure1_slot7;
            ctrled = papara[output];
            ctrled = sierra.bind(tangon)(ctrled);
            vacuum = ctrled.FormRow;
            ctrled = {};
            record = _closure1_slot7;
            config = {};
            target = 18;
            target = papara[target];
            target = status.bind(tangon)(target);
            config['source'] = target;
            config = record.bind(tangon)(cntext, config);
            ctrled['leading'] = config;
            target = _closure1_slot7;
            config = papara[source];
            config = sierra.bind(tangon)(config);
            record = config.Text;
            config = {'style': null, 'variant': 'text-md/medium', 'color': 'header-secondary'};
            limora = romeon.headerBullet;
            config['style'] = limora;
            limora = papara[update];
            limora = sierra.bind(tangon)(limora);
            equals = limora.intl;
            whisks = equals.string;
            limora = papara[update];
            limora = sierra.bind(tangon)(limora);
            limora = limora.t;
            limora = limora.x58YtL;
            limora = whisks.bind(equals)(limora);
            config['children'] = limora;
            config = target.bind(tangon)(record, config);
            ctrled['label'] = config;
            ctrled = sequen.bind(tangon)(vacuum, ctrled);
            backup[1] = ctrled;
            sequen = _closure1_slot7;
            ctrled = papara[output];
            ctrled = sierra.bind(tangon)(ctrled);
            vacuum = ctrled.FormRow;
            ctrled = {};
            record = _closure1_slot7;
            config = {};
            target = 19;
            target = papara[target];
            target = status.bind(tangon)(target);
            config['source'] = target;
            config = record.bind(tangon)(cntext, config);
            ctrled['leading'] = config;
            cntext = _closure1_slot7;
            config = papara[source];
            config = sierra.bind(tangon)(config);
            record = config.Text;
            config = {'style': null, 'variant': 'text-md/medium', 'color': 'header-secondary'};
            target = romeon.headerBullet;
            config['style'] = target;
            target = papara[update];
            target = sierra.bind(tangon)(target);
            status = target.intl;
            target = status.string;
            papara = papara[update];
            papara = sierra.bind(tangon)(papara);
            papara = papara.t;
            papara = papara.XtVqlZ;
            papara = target.bind(status)(papara);
            config['children'] = papara;
            config = cntext.bind(tangon)(record, config);
            ctrled['label'] = config;
            ctrled = sequen.bind(tangon)(vacuum, ctrled);
            backup[2] = ctrled;
            sizing = null;
            if(!(echoed === result)) { _fun00002_ip = 1054; continue _fun00001 }
 874:
            echoed = _closure1_slot7;
            cntext = _closure1_slot0;
            sequen = _closure1_slot2;
            output = sequen[output];
            output = cntext.bind(tangon)(output);
            result = output.FormRow;
            output = {};
            config = _closure1_slot7;
            vacuum = _closure1_slot11;
            ctrled = {};
            papara = _closure1_slot1;
            record = 20;
            record = sequen[record];
            record = papara.bind(tangon)(record);
            ctrled['source'] = record;
            ctrled = config.bind(tangon)(vacuum, ctrled);
            output['leading'] = ctrled;
            vacuum = _closure1_slot7;
            source = sequen[source];
            source = cntext.bind(tangon)(source);
            ctrled = source.Text;
            source = {'style': null, 'variant': 'text-md/medium', 'color': 'header-secondary'};
            config = romeon.headerBullet;
            source['style'] = config;
            config = sequen[update];
            config = cntext.bind(tangon)(config);
            record = config.intl;
            config = record.string;
            sequen = sequen[update];
            sequen = cntext.bind(tangon)(sequen);
            sequen = sequen.t;
            sequen = sequen.nDsbJi;
            sequen = config.bind(record)(sequen);
            source['children'] = sequen;
            source = vacuum.bind(tangon)(ctrled, source);
            output['label'] = source;
            sizing = echoed.bind(tangon)(result, output);
 1054:
            backup[3] = sizing;
            yankee['children'] = backup;
            yankee = golfie.bind(tangon)(foxtra, yankee);
            offset[2] = yankee;
            option['children'] = offset;
            verify = golfie.bind(tangon)(verify, option);
            option = new Array(2);
            option[0] = verify;
            yankee = _closure1_slot7;
            offset = _closure1_slot3;
            verify = {};
            romeon = romeon.startButton;
            verify['style'] = romeon;
            backup = _closure1_slot7;
            foxtra = _closure1_slot1;
            sizing = _closure1_slot2;
            romeon = 21;
            romeon = sizing[romeon];
            foxtra = foxtra.bind(tangon)(romeon);
            romeon = {};
            echoed = _closure1_slot0;
            output = sizing[update];
            output = echoed.bind(tangon)(output);
            result = output.intl;
            output = result.string;
            sizing = sizing[update];
            sizing = echoed.bind(tangon)(sizing);
            sizing = sizing.t;
            sizing = sizing.obLqZ2;
            sizing = output.bind(result)(sizing);
            romeon['text'] = sizing;
            kiloes = _closure1_slot10;
            romeon['onPress'] = kiloes;
            romeon = backup.bind(tangon)(foxtra, romeon);
            verify['children'] = romeon;
            verify = yankee.bind(tangon)(offset, verify);
            option[1] = verify;
            report['children'] = option;
            report = golfie.bind(tangon)(oscard, report);
            entity['children'] = report;
            entity = zuuluu.bind(tangon)(michal, entity);
            return entity;
        }
    };
    zuuluu['default'] = michal;
    return entity;
})();