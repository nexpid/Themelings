// app/modules/stage_channels/native/components/StageAudienceNotificationSheet.tsx
export default (function(argFoo, argBar, argBaz, argCorge, _, argFred, argPlugh) {
    report = argBar;
    foxtrot = argBaz;
    zulu = argFred;
    oscar = argPlugh;
    var _closure1_slot0 = report;
    var _closure1_slot1 = foxtrot;
    var _closure1_slot2 = oscar;
    entity = function() { // Original name: handleDismiss
        tango = _closure1_slot1;
        zulu = _closure1_slot2;
        entity = 8;
        zulu = zulu[entity];
        entity = undefined;
        tango = tango.bind(entity)(zulu);
        zulu = tango.hideActionSheet;
        mike = _closure1_slot5;
        mike = zulu.bind(tango)(mike);
        return entity;
    };
    var _closure1_slot10 = entity;
    entity = function(argFoo) { // Original name: BulletIcon
        entity = argFoo;
        romeo = entity.source;
        entity = _closure1_slot9;
        tango = undefined;
        options = entity.bind(tango)();
        zulu = _closure1_slot7;
        mike = _closure1_slot3;
        entity = {};
        oscar = options.headerBulletIconContainer;
        entity['style'] = oscar;
        golf = _closure1_slot7;
        offset = _closure1_slot1;
        yankee = _closure1_slot2;
        verify = 9;
        report = yankee[verify];
        oscar = offset.bind(tango)(report);
        report = {};
        report['source'] = romeo;
        verify = yankee[verify];
        verify = offset.bind(tango)(verify);
        verify = verify.Sizes;
        verify = verify.MEDIUM;
        report['size'] = verify;
        options = options.headerBulletIconComponent;
        report['style'] = options;
        report = golf.bind(tango)(oscar, report);
        entity['children'] = report;
        entity = zulu.bind(tango)(mike, entity);
        return entity;
    };
    var _closure1_slot11 = entity;
    entity = global;
    options = entity.Object;
    golf = options.defineProperty;
    tango = {};
    entity = true;
    tango['value'] = entity;
    entity = '__esModule';
    entity = golf.bind(options)(zulu, entity, tango);
    offset = 0;
    golf = oscar[offset];
    tango = argCorge;
    entity = undefined;
    tango = tango.bind(entity)(golf);
    tango = 1;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.View;
    var _closure1_slot3 = tango;
    tango = 2;
    tango = oscar[tango];
    tango = foxtrot.bind(entity)(tango);
    var _closure1_slot4 = tango;
    tango = 3;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.STAGE_AUDIENCE_NOTICE_SHEET_KEY;
    var _closure1_slot5 = tango;
    tango = 4;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.GuildScheduledEventPrivacyLevel;
    var _closure1_slot6 = tango;
    tango = 5;
    golf = oscar[tango];
    golf = report.bind(entity)(golf);
    golf = golf.jsx;
    var _closure1_slot7 = golf;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.jsxs;
    var _closure1_slot8 = tango;
    tango = 6;
    tango = oscar[tango];
    options = report.bind(entity)(tango);
    golf = options.createStyles;
    tango = {};
    verify = {};
    yankee = 16;
    verify['padding'] = yankee;
    tango['container'] = verify;
    verify = {'alignItems': 'center', 'paddingVertical': 16};
    tango['header'] = verify;
    verify = {};
    tango['headerImage'] = verify;
    verify = {'marginTop': 16, 'marginBottom': 8};
    tango['headerTitle'] = verify;
    verify = {'alignItems': 'center', 'justifyContent': 'center', 'height': 40, 'width': 40, 'borderRadius': 20};
    yankee = 20;
    romeo = 7;
    backup = oscar[romeo];
    backup = foxtrot.bind(entity)(backup);
    backup = backup.colors;
    backup = backup.BACKGROUND_TERTIARY;
    verify['backgroundColor'] = backup;
    tango['headerBulletIconContainer'] = verify;
    verify = {};
    romeo = oscar[romeo];
    romeo = foxtrot.bind(entity)(romeo);
    romeo = romeo.colors;
    romeo = romeo.INTERACTIVE_NORMAL;
    verify['tintColor'] = romeo;
    tango['headerBulletIconComponent'] = verify;
    verify = {'flexDirection': 'column', 'alignItems': 'flex-start'};
    tango['headerBulletList'] = verify;
    verify = {};
    verify['lineHeight'] = yankee;
    tango['headerBullet'] = verify;
    verify = {};
    verify['marginTop'] = offset;
    tango['startButton'] = verify;
    tango = golf.bind(options)(tango);
    var _closure1_slot9 = tango;
    tango = 22;
    tango = oscar[tango];
    oscar = report.bind(entity)(tango);
    report = oscar.fileFinishedImporting;
    tango = 'modules/stage_channels/native/components/StageAudienceNotificationSheet.tsx';
    tango = report.bind(oscar)(tango);
    mike = function(argFoo) { // Original name: StageAudienceNotificationSheet
        _fun67715: for(var _fun67715_ip = 0; ; ) switch(_fun67715_ip) {
 0:
            mike = argFoo;
            mike = mike.channelId;
            var _closure2_slot0 = mike;
            mike = _closure1_slot9;
            tango = undefined;
            romeo = mike.bind(tango)();
            zulu = _closure1_slot0;
            report = _closure1_slot2;
            mike = 10;
            mike = report[mike];
            report = zulu.bind(tango)(mike);
            zulu = report.useStateFromStores;
            oscar = _closure1_slot4;
            mike = new Array(1);
            mike[0] = oscar;
            entity = function() {
                zulu = _closure1_slot4;
                mike = zulu.getStageInstanceByChannel;
                entity = _closure2_slot0;
                entity = mike.bind(zulu)(entity);
                return entity;
            };
            entity = zulu.bind(report)(mike, entity);
            sizing = null;
            mike = sizing == entity;
            echo = undefined;
            if(mike) { _fun67715_ip = 94; continue _fun67715 }
 88:
            echo = entity.privacy_level;
 94:
            entity = _closure1_slot6;
            result = entity.PUBLIC;
            zulu = _closure1_slot7;
            status = _closure1_slot1;
            papa = _closure1_slot2;
            entity = 11;
            entity = papa[entity];
            mike = status.bind(tango)(entity);
            entity = {};
            golf = _closure1_slot8;
            oscar = _closure1_slot3;
            report = {};
            options = romeo.container;
            report['style'] = options;
            verify = _closure1_slot3;
            options = {};
            offset = romeo.header;
            options['style'] = offset;
            foxtrot = _closure1_slot7;
            offset = 12;
            offset = papa[offset];
            yankee = status.bind(tango)(offset);
            offset = {};
            backup = 13;
            backup = papa[backup];
            backup = status.bind(tango)(backup);
            offset['source'] = backup;
            backup = romeo.headerImage;
            offset['style'] = backup;
            yankee = foxtrot.bind(tango)(yankee, offset);
            offset = new Array(3);
            offset[0] = yankee;
            backup = _closure1_slot7;
            sierra = _closure1_slot0;
            source = 14;
            yankee = papa[source];
            yankee = sierra.bind(tango)(yankee);
            foxtrot = yankee.Text;
            yankee = {'style': null, 'accessibilityRole': 'header', 'variant': 'heading-xl/extrabold', 'color': 'header-primary'};
            output = romeo.headerTitle;
            yankee['style'] = output;
            update = 15;
            output = papa[update];
            output = sierra.bind(tango)(output);
            vacuum = output.intl;
            control = vacuum.string;
            output = papa[update];
            output = sierra.bind(tango)(output);
            output = output.t;
            output = output.UVuXCg;
            output = control.bind(vacuum)(output);
            yankee['children'] = output;
            yankee = backup.bind(tango)(foxtrot, yankee);
            offset[1] = yankee;
            foxtrot = _closure1_slot3;
            yankee = {};
            backup = romeo.headerBulletList;
            yankee['style'] = backup;
            vacuum = _closure1_slot7;
            output = 16;
            backup = papa[output];
            backup = sierra.bind(tango)(backup);
            control = backup.FormRow;
            backup = {};
            config = _closure1_slot7;
            context = _closure1_slot11;
            sequence = {};
            record = 17;
            record = papa[record];
            record = status.bind(tango)(record);
            sequence['source'] = record;
            sequence = config.bind(tango)(context, sequence);
            backup['leading'] = sequence;
            record = _closure1_slot7;
            sequence = papa[source];
            sequence = sierra.bind(tango)(sequence);
            config = sequence.Text;
            sequence = {'style': null, 'variant': 'text-md/medium', 'color': 'header-secondary'};
            target = romeo.headerBullet;
            sequence['style'] = target;
            target = papa[update];
            target = sierra.bind(tango)(target);
            whiskey = target.intl;
            lima = whiskey.string;
            target = papa[update];
            target = sierra.bind(tango)(target);
            target = target.t;
            target = target.sBDfo6;
            target = lima.bind(whiskey)(target);
            sequence['children'] = target;
            sequence = record.bind(tango)(config, sequence);
            backup['label'] = sequence;
            control = vacuum.bind(tango)(control, backup);
            backup = new Array(4);
            backup[0] = control;
            sequence = _closure1_slot7;
            control = papa[output];
            control = sierra.bind(tango)(control);
            vacuum = control.FormRow;
            control = {};
            record = _closure1_slot7;
            config = {};
            target = 18;
            target = papa[target];
            target = status.bind(tango)(target);
            config['source'] = target;
            config = record.bind(tango)(context, config);
            control['leading'] = config;
            target = _closure1_slot7;
            config = papa[source];
            config = sierra.bind(tango)(config);
            record = config.Text;
            config = {'style': null, 'variant': 'text-md/medium', 'color': 'header-secondary'};
            lima = romeo.headerBullet;
            config['style'] = lima;
            lima = papa[update];
            lima = sierra.bind(tango)(lima);
            equality = lima.intl;
            whiskey = equality.string;
            lima = papa[update];
            lima = sierra.bind(tango)(lima);
            lima = lima.t;
            lima = lima.x58YtL;
            lima = whiskey.bind(equality)(lima);
            config['children'] = lima;
            config = target.bind(tango)(record, config);
            control['label'] = config;
            control = sequence.bind(tango)(vacuum, control);
            backup[1] = control;
            sequence = _closure1_slot7;
            control = papa[output];
            control = sierra.bind(tango)(control);
            vacuum = control.FormRow;
            control = {};
            record = _closure1_slot7;
            config = {};
            target = 19;
            target = papa[target];
            target = status.bind(tango)(target);
            config['source'] = target;
            config = record.bind(tango)(context, config);
            control['leading'] = config;
            context = _closure1_slot7;
            config = papa[source];
            config = sierra.bind(tango)(config);
            record = config.Text;
            config = {'style': null, 'variant': 'text-md/medium', 'color': 'header-secondary'};
            target = romeo.headerBullet;
            config['style'] = target;
            target = papa[update];
            target = sierra.bind(tango)(target);
            status = target.intl;
            target = status.string;
            papa = papa[update];
            papa = sierra.bind(tango)(papa);
            papa = papa.t;
            papa = papa.XtVqlZ;
            papa = target.bind(status)(papa);
            config['children'] = papa;
            config = context.bind(tango)(record, config);
            control['label'] = config;
            control = sequence.bind(tango)(vacuum, control);
            backup[2] = control;
            sizing = null;
            if(!(echo === result)) { _fun67715_ip = 1046; continue _fun67715 }
 868:
            echo = _closure1_slot7;
            context = _closure1_slot0;
            sequence = _closure1_slot2;
            output = sequence[output];
            output = context.bind(tango)(output);
            result = output.FormRow;
            output = {};
            config = _closure1_slot7;
            vacuum = _closure1_slot11;
            control = {};
            papa = _closure1_slot1;
            record = 20;
            record = sequence[record];
            record = papa.bind(tango)(record);
            control['source'] = record;
            control = config.bind(tango)(vacuum, control);
            output['leading'] = control;
            vacuum = _closure1_slot7;
            source = sequence[source];
            source = context.bind(tango)(source);
            control = source.Text;
            source = {'style': null, 'variant': 'text-md/medium', 'color': 'header-secondary'};
            config = romeo.headerBullet;
            source['style'] = config;
            config = sequence[update];
            config = context.bind(tango)(config);
            record = config.intl;
            config = record.string;
            sequence = sequence[update];
            sequence = context.bind(tango)(sequence);
            sequence = sequence.t;
            sequence = sequence.nDsbJi;
            sequence = config.bind(record)(sequence);
            source['children'] = sequence;
            source = vacuum.bind(tango)(control, source);
            output['label'] = source;
            sizing = echo.bind(tango)(result, output);
 1046:
            backup[3] = sizing;
            yankee['children'] = backup;
            yankee = golf.bind(tango)(foxtrot, yankee);
            offset[2] = yankee;
            options['children'] = offset;
            verify = golf.bind(tango)(verify, options);
            options = new Array(2);
            options[0] = verify;
            yankee = _closure1_slot7;
            offset = _closure1_slot3;
            verify = {};
            romeo = romeo.startButton;
            verify['style'] = romeo;
            backup = _closure1_slot7;
            foxtrot = _closure1_slot1;
            sizing = _closure1_slot2;
            romeo = 21;
            romeo = sizing[romeo];
            foxtrot = foxtrot.bind(tango)(romeo);
            romeo = {};
            echo = _closure1_slot0;
            output = sizing[update];
            output = echo.bind(tango)(output);
            result = output.intl;
            output = result.string;
            sizing = sizing[update];
            sizing = echo.bind(tango)(sizing);
            sizing = sizing.t;
            sizing = sizing.obLqZ2;
            sizing = output.bind(result)(sizing);
            romeo['text'] = sizing;
            kilo = _closure1_slot10;
            romeo['onPress'] = kilo;
            romeo = backup.bind(tango)(foxtrot, romeo);
            verify['children'] = romeo;
            verify = yankee.bind(tango)(offset, verify);
            options[1] = verify;
            report['children'] = options;
            report = golf.bind(tango)(oscar, report);
            entity['children'] = report;
            entity = zulu.bind(tango)(mike, entity);
            return entity;
        }
    };
    zulu['default'] = mike;
    return entity;
})();