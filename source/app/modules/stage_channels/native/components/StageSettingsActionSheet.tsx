// app/modules/stage_channels/native/components/StageSettingsActionSheet.tsx
export default (function(argFoo, argBar, argBaz, argCorge, _, argFred, argPlugh) {
    report = argBar;
    yankee = argBaz;
    zulu = argFred;
    oscar = argPlugh;
    var _closure1_slot0 = report;
    var _closure1_slot1 = yankee;
    var _closure1_slot2 = oscar;
    entity = function() { // Original name: close
        tango = _closure1_slot1;
        zulu = _closure1_slot2;
        entity = 11;
        zulu = zulu[entity];
        entity = undefined;
        tango = tango.bind(entity)(zulu);
        zulu = tango.hideActionSheet;
        mike = _closure1_slot9;
        mike = zulu.bind(tango)(mike);
        return entity;
    };
    var _closure1_slot15 = entity;
    entity = global;
    options = entity.Object;
    golf = options.defineProperty;
    tango = {};
    entity = true;
    tango['value'] = entity;
    entity = '__esModule';
    entity = golf.bind(options)(zulu, entity, tango);
    entity = 0;
    golf = oscar[entity];
    tango = argCorge;
    entity = undefined;
    tango = tango.bind(entity)(golf);
    var _closure1_slot3 = tango;
    tango = 1;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.View;
    var _closure1_slot4 = tango;
    tango = 2;
    tango = oscar[tango];
    tango = yankee.bind(entity)(tango);
    var _closure1_slot5 = tango;
    tango = 3;
    tango = oscar[tango];
    tango = yankee.bind(entity)(tango);
    var _closure1_slot6 = tango;
    tango = 4;
    tango = oscar[tango];
    tango = yankee.bind(entity)(tango);
    var _closure1_slot7 = tango;
    tango = 5;
    tango = oscar[tango];
    tango = yankee.bind(entity)(tango);
    var _closure1_slot8 = tango;
    tango = 6;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.STAGE_SETTINGS_SHEET_KEY;
    var _closure1_slot9 = tango;
    tango = 7;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    golf = tango.ChannelSettingsSections;
    var _closure1_slot10 = golf;
    tango = tango.UserSettingsSections;
    var _closure1_slot11 = tango;
    offset = 8;
    tango = oscar[offset];
    tango = report.bind(entity)(tango);
    tango = tango.jsx;
    var _closure1_slot12 = tango;
    tango = oscar[offset];
    tango = report.bind(entity)(tango);
    tango = tango.jsxs;
    var _closure1_slot13 = tango;
    tango = 9;
    tango = oscar[tango];
    options = report.bind(entity)(tango);
    golf = options.createStyles;
    tango = {};
    verify = {};
    verify['marginTop'] = offset;
    tango['container'] = verify;
    verify = {};
    offset = 10;
    romeo = oscar[offset];
    romeo = yankee.bind(entity)(romeo);
    romeo = romeo.colors;
    romeo = romeo.INTERACTIVE_NORMAL;
    verify['color'] = romeo;
    tango['icon'] = verify;
    verify = {};
    offset = oscar[offset];
    offset = yankee.bind(entity)(offset);
    offset = offset.unsafe_rawColors;
    offset = offset.RED_400;
    verify['color'] = offset;
    tango['warning'] = verify;
    tango = golf.bind(options)(tango);
    var _closure1_slot14 = tango;
    tango = 27;
    tango = oscar[tango];
    oscar = report.bind(entity)(tango);
    report = oscar.fileFinishedImporting;
    tango = 'modules/stage_channels/native/components/StageSettingsActionSheet.tsx';
    tango = report.bind(oscar)(tango);
    mike = function(argFoo) { // Original name: StageSettingsActionSheet
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            entity = argFoo;
            oscar = entity.channelId;
            var _closure2_slot0 = oscar;
            yankee = entity.onOpenRTCDebugOverlay;
            var _closure2_slot1 = yankee;
            entity = _closure1_slot14;
            report = undefined;
            echo = entity.bind(report)();
            zulu = _closure1_slot0;
            tango = _closure1_slot2;
            mike = 12;
            entity = tango[mike];
            verify = zulu.bind(report)(entity);
            options = verify.useStateFromStores;
            entity = _closure1_slot6;
            golf = new Array(1);
            golf[0] = entity;
            entity = function() {
                zulu = _closure1_slot6;
                mike = zulu.getChannel;
                entity = _closure2_slot0;
                entity = mike.bind(zulu)(entity);
                return entity;
            };
            entity = options.bind(verify)(golf, entity);
            var _closure2_slot2 = entity;
            golf = tango[mike];
            offset = zulu.bind(report)(golf);
            verify = offset.useStateFromStores;
            golf = _closure1_slot7;
            options = new Array(1);
            options[0] = golf;
            golf = function() {
                tango = _closure1_slot7;
                zulu = tango.can;
                report = _closure1_slot0;
                mike = _closure1_slot2;
                entity = 13;
                mike = mike[entity];
                entity = undefined;
                entity = report.bind(entity)(mike);
                mike = entity.MODERATE_STAGE_CHANNEL_PERMISSIONS;
                entity = _closure2_slot2;
                entity = zulu.bind(tango)(mike, entity);
                return entity;
            };
            backup = verify.bind(offset)(options, golf);
            golf = tango[mike];
            offset = zulu.bind(report)(golf);
            verify = offset.useStateFromStores;
            golf = _closure1_slot5;
            options = new Array(1);
            options[0] = golf;
            golf = new Array(1);
            golf[0] = oscar;
            oscar = function() {
                zulu = _closure1_slot5;
                mike = zulu.getSelectedParticipant;
                entity = _closure2_slot0;
                entity = mike.bind(zulu)(entity);
                return entity;
            };
            verify = verify.bind(offset)(options, oscar, golf);
            mike = tango[mike];
            oscar = zulu.bind(report)(mike);
            tango = oscar.useStateFromStores;
            mike = _closure1_slot8;
            zulu = new Array(1);
            zulu[0] = mike;
            mike = function() {
                zulu = _closure1_slot8;
                mike = zulu.getStageInstanceByChannel;
                entity = _closure2_slot0;
                entity = mike.bind(zulu)(entity);
                return entity;
            };
            output = tango.bind(oscar)(zulu, mike);
            oscar = _closure1_slot3;
            tango = oscar.useEffect;
            zulu = new Array(1);
            zulu[0] = entity;
            mike = function() {
                _fun00003: for(var _fun00004_ip = 0; ; ) switch(_fun00004_ip) {
 0:
                    mike = _closure2_slot2;
                    entity = null;
                    if(!(entity == mike)) { _fun00004_ip = 26; continue _fun00003 }
 13:
                    mike = _closure1_slot15;
                    entity = undefined;
                    entity = mike.bind(entity)();
 26:
                    entity = undefined;
                    return entity;
                }
            };
            mike = tango.bind(oscar)(mike, zulu);
            offset = null;
            mike = offset == entity;
            entity = null;
            if(mike) { _fun00002_ip = 1256; continue _fun00001 }
 251:
            tango = _closure1_slot12;
            zulu = _closure1_slot0;
            oscar = _closure1_slot2;
            mike = 14;
            mike = oscar[mike];
            mike = zulu.bind(report)(mike);
            zulu = mike.ActionSheet;
            mike = {};
            oscar = 'always';
            mike['keyboardShouldPersistTaps'] = oscar;
            options = _closure1_slot13;
            golf = _closure1_slot4;
            oscar = {};
            romeo = echo.container;
            oscar['style'] = romeo;
            romeo = null;
            if(!backup) { _fun00002_ip = 567; continue _fun00001 }
 321:
            verify = offset == verify;
            romeo = null;
            if(!verify) { _fun00002_ip = 567; continue _fun00001 }
 333:
            sizing = _closure1_slot12;
            backup = _closure1_slot0;
            result = _closure1_slot2;
            verify = 15;
            verify = result[verify];
            verify = backup.bind(report)(verify);
            backup = verify.FormRow;
            verify = {};
            if(!(offset == output)) { _fun00002_ip = 426; continue _fun00001 }
 369:
            source = _closure1_slot0;
            control = _closure1_slot2;
            output = 16;
            result = control[output];
            result = source.bind(report)(result);
            update = result.intl;
            result = update.string;
            output = control[output];
            output = source.bind(report)(output);
            output = output.t;
            output = output.s8mM8P;
            output = result.bind(update)(output);
            _fun00002_ip = 481; continue _fun00001;
 426:
            control = _closure1_slot0;
            vacuum = _closure1_slot2;
            result = 16;
            update = vacuum[result];
            update = control.bind(report)(update);
            source = update.intl;
            update = source.string;
            result = vacuum[result];
            result = control.bind(report)(result);
            result = result.t;
            result = result.5BKP4+;
            output = update.bind(source)(result);
 481:
            verify['label'] = output;
            update = _closure1_slot12;
            control = _closure1_slot1;
            vacuum = _closure1_slot2;
            output = 17;
            output = vacuum[output];
            result = control.bind(report)(output);
            output = {};
            source = 18;
            source = vacuum[source];
            source = control.bind(report)(source);
            output['source'] = source;
            source = echo.icon;
            source = source.color;
            output['color'] = source;
            output = update.bind(report)(result, output);
            verify['leading'] = output;
            output = function() { // Original name: onPress
                tango = _closure1_slot0;
                zulu = _closure1_slot2;
                entity = 19;
                zulu = zulu[entity];
                entity = undefined;
                report = tango.bind(entity)(zulu);
                tango = report.openStageChannelSettings;
                zulu = _closure2_slot2;
                zulu = tango.bind(report)(zulu);
                mike = _closure1_slot15;
                mike = mike.bind(entity)();
                return entity;
            };
            verify['onPress'] = output;
            romeo = sizing.bind(report)(backup, verify);
 567:
            verify = new Array(5);
            verify[0] = romeo;
            result = _closure1_slot12;
            record = _closure1_slot0;
            config = _closure1_slot2;
            sizing = 15;
            romeo = config[sizing];
            romeo = record.bind(report)(romeo);
            output = romeo.FormRow;
            romeo = {};
            update = 16;
            backup = config[update];
            backup = record.bind(report)(backup);
            control = backup.intl;
            source = control.string;
            backup = config[update];
            backup = record.bind(report)(backup);
            backup = backup.t;
            backup = backup.NiTd0d;
            backup = source.bind(control)(backup);
            romeo['label'] = backup;
            sequence = _closure1_slot1;
            backup = 17;
            source = config[backup];
            control = sequence.bind(report)(source);
            source = {};
            vacuum = 20;
            vacuum = config[vacuum];
            vacuum = sequence.bind(report)(vacuum);
            source['source'] = vacuum;
            vacuum = echo.icon;
            vacuum = vacuum.color;
            source['color'] = vacuum;
            source = result.bind(report)(control, source);
            romeo['leading'] = source;
            source = function() { // Original name: onPress
                tango = _closure1_slot0;
                zulu = _closure1_slot2;
                entity = 21;
                zulu = zulu[entity];
                entity = undefined;
                report = tango.bind(entity)(zulu);
                tango = report.openUserSettings;
                zulu = {};
                oscar = _closure1_slot11;
                oscar = oscar.VOICE;
                zulu['screen'] = oscar;
                zulu = tango.bind(report)(zulu);
                mike = _closure1_slot15;
                mike = mike.bind(entity)();
                return entity;
            };
            romeo['onPress'] = source;
            romeo = result.bind(report)(output, romeo);
            verify[1] = romeo;
            romeo = config[sizing];
            romeo = record.bind(report)(romeo);
            output = romeo.FormRow;
            romeo = {};
            source = config[update];
            source = record.bind(report)(source);
            vacuum = source.intl;
            control = vacuum.string;
            source = config[update];
            source = record.bind(report)(source);
            source = source.t;
            source = source.h850Sk;
            source = control.bind(vacuum)(source);
            romeo['label'] = source;
            source = config[backup];
            control = sequence.bind(report)(source);
            source = {};
            vacuum = 22;
            vacuum = config[vacuum];
            vacuum = sequence.bind(report)(vacuum);
            source['source'] = vacuum;
            vacuum = echo.icon;
            vacuum = vacuum.color;
            source['color'] = vacuum;
            source = result.bind(report)(control, source);
            romeo['leading'] = source;
            source = function() { // Original name: onPress
                tango = _closure1_slot1;
                report = _closure1_slot2;
                zulu = 23;
                oscar = report[zulu];
                entity = undefined;
                options = tango.bind(entity)(oscar);
                golf = options.setSection;
                oscar = _closure1_slot10;
                oscar = oscar.NOTIFICATIONS;
                oscar = golf.bind(options)(oscar);
                zulu = report[zulu];
                report = tango.bind(entity)(zulu);
                tango = report.open;
                zulu = _closure2_slot2;
                zulu = zulu.id;
                zulu = tango.bind(report)(zulu);
                mike = _closure1_slot15;
                mike = mike.bind(entity)();
                return entity;
            };
            romeo['onPress'] = source;
            romeo = result.bind(report)(output, romeo);
            verify[2] = romeo;
            offset = offset != yankee;
            if(!offset) { _fun00002_ip = 1030; continue _fun00001 }
 882:
            output = _closure1_slot12;
            vacuum = _closure1_slot0;
            sequence = _closure1_slot2;
            yankee = sequence[sizing];
            yankee = vacuum.bind(report)(yankee);
            romeo = yankee.FormRow;
            yankee = {};
            result = sequence[update];
            result = vacuum.bind(report)(result);
            control = result.intl;
            source = control.string;
            result = sequence[update];
            result = vacuum.bind(report)(result);
            result = result.t;
            result = result.X8bCMT;
            result = source.bind(control)(result);
            yankee['label'] = result;
            vacuum = _closure1_slot1;
            result = sequence[backup];
            source = vacuum.bind(report)(result);
            result = {};
            control = 24;
            control = sequence[control];
            control = vacuum.bind(report)(control);
            result['source'] = control;
            control = echo.icon;
            control = control.color;
            result['color'] = control;
            result = output.bind(report)(source, result);
            yankee['leading'] = result;
            result = function() { // Original name: onPress
                _fun00005: for(var _fun00006_ip = 0; ; ) switch(_fun00006_ip) {
 0:
                    zulu = _closure2_slot1;
                    mike = null;
                    if(!(mike != zulu)) { _fun00006_ip = 23; continue _fun00005 }
 13:
                    mike = _closure2_slot1;
                    entity = undefined;
                    entity = mike.bind(entity)();
 23:
                    mike = _closure1_slot15;
                    entity = undefined;
                    mike = mike.bind(entity)();
                    return entity;
                }
            };
            yankee['onPress'] = result;
            offset = output.bind(report)(romeo, yankee);
 1030:
            verify[3] = offset;
            romeo = _closure1_slot12;
            vacuum = _closure1_slot0;
            result = _closure1_slot2;
            offset = result[sizing];
            offset = vacuum.bind(report)(offset);
            yankee = offset.FormRow;
            offset = {};
            sizing = result[sizing];
            sizing = vacuum.bind(report)(sizing);
            output = sizing.FormLabel;
            sizing = {};
            source = result[update];
            source = vacuum.bind(report)(source);
            control = source.intl;
            source = control.string;
            update = result[update];
            update = vacuum.bind(report)(update);
            update = update.t;
            update = update.+78Pfn;
            update = source.bind(control)(update);
            sizing['text'] = update;
            echo = echo.warning;
            sizing['style'] = echo;
            sizing = romeo.bind(report)(output, sizing);
            offset['label'] = sizing;
            output = _closure1_slot1;
            backup = result[backup];
            kilo = output.bind(report)(backup);
            backup = {};
            sizing = 10;
            sizing = result[sizing];
            sizing = output.bind(report)(sizing);
            sizing = sizing.unsafe_rawColors;
            sizing = sizing.RED_400;
            backup['color'] = sizing;
            sizing = 25;
            sizing = result[sizing];
            sizing = output.bind(report)(sizing);
            backup['source'] = sizing;
            backup = romeo.bind(report)(kilo, backup);
            offset['leading'] = backup;
            foxtrot = function() { // Original name: onPress
                tango = _closure1_slot0;
                zulu = _closure1_slot2;
                entity = 26;
                zulu = zulu[entity];
                entity = undefined;
                report = tango.bind(entity)(zulu);
                tango = report.showReportModalForStageChannel;
                zulu = _closure2_slot2;
                zulu = tango.bind(report)(zulu);
                mike = _closure1_slot15;
                mike = mike.bind(entity)();
                return entity;
            };
            offset['onPress'] = foxtrot;
            offset = romeo.bind(report)(yankee, offset);
            verify[4] = offset;
            oscar['children'] = verify;
            oscar = options.bind(report)(golf, oscar);
            mike['children'] = oscar;
            entity = tango.bind(report)(zulu, mike);
 1256:
            return entity;
        }
    };
    zulu['default'] = mike;
    return entity;
})();