// app/modules/stage_channels/native/components/StageChannelAnimationUtils.tsx
export default (function(argFoo, argBar, argBaz, _, __, argFred, argPlugh) {
    report = argBar;
    zulu = argFred;
    oscar = argPlugh;
    var _closure1_slot0 = report;
    entity = argBaz;
    var _closure1_slot1 = entity;
    var _closure1_slot2 = oscar;
    entity = global;
    options = entity.Object;
    golf = options.defineProperty;
    tango = {};
    entity = true;
    tango['value'] = entity;
    entity = '__esModule';
    entity = golf.bind(options)(zulu, entity, tango);
    tango = {};
    entity = 250;
    tango['duration'] = entity;
    romeo = 0;
    golf = oscar[romeo];
    entity = undefined;
    golf = report.bind(entity)(golf);
    yankee = golf.Easing;
    offset = yankee.bezier;
    sizing = 0.66;
    backup = 0.2;
    foxtrot = 1;
    output = yankee;
    kilo = 0;
    golf = output[offset](sizing, kilo, backup, foxtrot, romeo);
    tango['easing'] = golf;
    var _closure1_slot3 = tango;
    tango = {};
    golf = 'function StageChannelAnimationUtilsTsx1(){const{isInvited,actionBarHeight,ACTION_BAR_SAFE_AREA_PADDING,safeAreaTop,controlPadding}=this.__closure;return isInvited?actionBarHeight+ACTION_BAR_SAFE_AREA_PADDING+safeAreaTop:controlPadding;}';
    tango['code'] = golf;
    var _closure1_slot4 = tango;
    tango = {};
    golf = 'function StageChannelAnimationUtilsTsx2(){const{withTiming,paddingTop,TIMING_CONFIG}=this.__closure;return{paddingTop:withTiming(paddingTop.get(),TIMING_CONFIG)};}';
    tango['code'] = golf;
    var _closure1_slot5 = tango;
    tango = 5;
    tango = oscar[tango];
    oscar = report.bind(entity)(tango);
    report = oscar.fileFinishedImporting;
    tango = 'modules/stage_channels/native/components/StageChannelAnimationUtils.tsx';
    tango = report.bind(oscar)(tango);
    mike = function(argFoo, argBar) { // Original name: useStageActionBarAnimation
        yankee = argBar;
        var _closure2_slot0 = yankee;
        zulu = _closure1_slot1;
        offset = _closure1_slot2;
        mike = 1;
        mike = offset[mike];
        verify = undefined;
        mike = zulu.bind(verify)(mike);
        backup = mike.bind(verify)();
        var _closure2_slot1 = backup;
        options = _closure1_slot0;
        mike = 2;
        mike = offset[mike];
        oscar = options.bind(verify)(mike);
        report = oscar.useGetActionBarHeight;
        mike = argFoo;
        foxtrot = report.bind(oscar)(mike);
        var _closure2_slot2 = foxtrot;
        mike = 3;
        mike = offset[mike];
        mike = zulu.bind(verify)(mike);
        mike = mike.bind(verify)();
        romeo = mike.top;
        var _closure2_slot3 = romeo;
        mike = 0;
        zulu = offset[mike];
        oscar = options.bind(verify)(zulu);
        report = oscar.useDerivedValue;
        zulu = function() { // Original name: A
            _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
                entity = _closure2_slot1;
                if(entity) { _fun00002_ip = 16; continue _fun00001 }
 10:
                entity = _closure2_slot0;
                _fun00002_ip = 35; continue _fun00001;
 16:
                tango = _closure2_slot2;
                zulu = 10;
                zulu = tango + zulu;
                mike = _closure2_slot3;
                entity = zulu + mike;
 35:
                return entity;
            }
        };
        golf = {};
        golf['isInvited'] = backup;
        golf['actionBarHeight'] = foxtrot;
        foxtrot = 10;
        golf['ACTION_BAR_SAFE_AREA_PADDING'] = foxtrot;
        golf['safeAreaTop'] = romeo;
        golf['controlPadding'] = yankee;
        zulu['__closure'] = golf;
        golf = 2568370943746.0;
        zulu['__workletHash'] = golf;
        golf = _closure1_slot4;
        zulu['__initData'] = golf;
        oscar = report.bind(oscar)(zulu);
        var _closure2_slot4 = oscar;
        mike = offset[mike];
        zulu = options.bind(verify)(mike);
        mike = zulu.useAnimatedStyle;
        entity = function() { // Original name: c
            entity = {};
            report = _closure1_slot0;
            tango = _closure1_slot2;
            zulu = 4;
            tango = tango[zulu];
            zulu = undefined;
            report = report.bind(zulu)(tango);
            tango = report.withTiming;
            oscar = _closure2_slot4;
            zulu = oscar.get;
            zulu = zulu.bind(oscar)();
            mike = _closure1_slot3;
            mike = tango.bind(report)(zulu, mike);
            entity['paddingTop'] = mike;
            return entity;
        };
        report = {};
        golf = 4;
        golf = offset[golf];
        golf = options.bind(verify)(golf);
        golf = golf.withTiming;
        report['withTiming'] = golf;
        report['paddingTop'] = oscar;
        oscar = _closure1_slot3;
        report['TIMING_CONFIG'] = oscar;
        entity['__closure'] = report;
        report = 16816216105718.0;
        entity['__workletHash'] = report;
        tango = _closure1_slot5;
        entity['__initData'] = tango;
        entity = mike.bind(zulu)(entity);
        return entity;
    };
    zulu['useStageActionBarAnimation'] = mike;
    return entity;
})();