// app/modules/stage_channels/native/components/StageChannelAnimationUtils.tsx
export default (function(argFoo, argBar, argBaz, _, __, argFre, argPlu) {
    report = argBar;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    entity = argBaz;
    var _closure1_slot1 = entity;
    var _closure1_slot2 = oscard;
    entity = global;
    option = entity.Object;
    golfie = option.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(option)(zuuluu, entity, tangon);
    tangon = {};
    entity = 250;
    tangon['duration'] = entity;
    romeon = 0;
    golfie = oscard[romeon];
    entity = undefined;
    golfie = report.bind(entity)(golfie);
    yankee = golfie.Easing;
    offset = yankee.bezier;
    sizing = 0.66;
    backup = 0.2;
    foxtra = 1;
    output = yankee;
    kiloes = 0;
    golfie = output[offset](sizing, kiloes, backup, foxtra, romeon);
    tangon['easing'] = golfie;
    var _closure1_slot3 = tangon;
    tangon = {};
    golfie = 'function StageChannelAnimationUtilsTsx1(){const{isInvited,actionBarHeight,ACTION_BAR_SAFE_AREA_PADDING,safeAreaTop,controlPadding}=this.__closure;return isInvited?actionBarHeight+ACTION_BAR_SAFE_AREA_PADDING+safeAreaTop:controlPadding;}';
    tangon['code'] = golfie;
    var _closure1_slot4 = tangon;
    tangon = {};
    golfie = 'function StageChannelAnimationUtilsTsx2(){const{withTiming,paddingTop,TIMING_CONFIG}=this.__closure;return{paddingTop:withTiming(paddingTop.get(),TIMING_CONFIG)};}';
    tangon['code'] = golfie;
    var _closure1_slot5 = tangon;
    tangon = 5;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/stage_channels/native/components/StageChannelAnimationUtils.tsx';
    tangon = report.bind(oscard)(tangon);
    michal = function(argFoo, argBar) { // Original name: useStageActionBarAnimation
        yankee = argBar;
        var _closure2_slot0 = yankee;
        zuuluu = _closure1_slot1;
        offset = _closure1_slot2;
        michal = 1;
        michal = offset[michal];
        verify = undefined;
        michal = zuuluu.bind(verify)(michal);
        backup = michal.bind(verify)();
        var _closure2_slot1 = backup;
        option = _closure1_slot0;
        michal = 2;
        michal = offset[michal];
        oscard = option.bind(verify)(michal);
        report = oscard.useGetActionBarHeight;
        michal = argFoo;
        foxtra = report.bind(oscard)(michal);
        var _closure2_slot2 = foxtra;
        michal = 3;
        michal = offset[michal];
        michal = zuuluu.bind(verify)(michal);
        michal = michal.bind(verify)();
        romeon = michal.top;
        var _closure2_slot3 = romeon;
        michal = 0;
        zuuluu = offset[michal];
        oscard = option.bind(verify)(zuuluu);
        report = oscard.useDerivedValue;
        zuuluu = function() { // Original name: A
            _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
                entity = _closure2_slot1;
                if(entity) { _fun00002_ip = 16; continue _fun00001 }
 10:
                entity = _closure2_slot0;
                _fun00002_ip = 35; continue _fun00001;
 16:
                tangon = _closure2_slot2;
                zuuluu = 10;
                zuuluu = tangon + zuuluu;
                michal = _closure2_slot3;
                entity = zuuluu + michal;
 35:
                return entity;
            }
        };
        golfie = {};
        golfie['isInvited'] = backup;
        golfie['actionBarHeight'] = foxtra;
        foxtra = 10;
        golfie['ACTION_BAR_SAFE_AREA_PADDING'] = foxtra;
        golfie['safeAreaTop'] = romeon;
        golfie['controlPadding'] = yankee;
        zuuluu['__closure'] = golfie;
        golfie = 2568370943746.0;
        zuuluu['__workletHash'] = golfie;
        golfie = _closure1_slot4;
        zuuluu['__initData'] = golfie;
        oscard = report.bind(oscard)(zuuluu);
        var _closure2_slot4 = oscard;
        michal = offset[michal];
        zuuluu = option.bind(verify)(michal);
        michal = zuuluu.useAnimatedStyle;
        entity = function() { // Original name: c
            entity = {};
            report = _closure1_slot0;
            tangon = _closure1_slot2;
            zuuluu = 4;
            tangon = tangon[zuuluu];
            zuuluu = undefined;
            report = report.bind(zuuluu)(tangon);
            tangon = report.withTiming;
            oscard = _closure2_slot4;
            zuuluu = oscard.get;
            zuuluu = zuuluu.bind(oscard)();
            michal = _closure1_slot3;
            michal = tangon.bind(report)(zuuluu, michal);
            entity['paddingTop'] = michal;
            return entity;
        };
        report = {};
        golfie = 4;
        golfie = offset[golfie];
        golfie = option.bind(verify)(golfie);
        golfie = golfie.withTiming;
        report['withTiming'] = golfie;
        report['paddingTop'] = oscard;
        oscard = _closure1_slot3;
        report['TIMING_CONFIG'] = oscard;
        entity['__closure'] = report;
        report = 16816216105718.0;
        entity['__workletHash'] = report;
        tangon = _closure1_slot5;
        entity['__initData'] = tangon;
        entity = michal.bind(zuuluu)(entity);
        return entity;
    };
    zuuluu['useStageActionBarAnimation'] = michal;
    return entity;
})();