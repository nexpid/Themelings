// app/modules/stage_channels/native/create_channel/AddModerators.tsx
export default (function(argFoo, argBar, argBaz, argCorge, _, argFred, argPlugh) {
    report = argBar;
    foxtrot = argBaz;
    zulu = argFred;
    oscar = argPlugh;
    var _closure1_slot0 = report;
    var _closure1_slot1 = foxtrot;
    var _closure1_slot2 = oscar;
    entity = global;
    options = entity.Object;
    golf = options.defineProperty;
    tango = {};
    entity = true;
    tango['value'] = entity;
    entity = '__esModule';
    entity = golf.bind(options)(zulu, entity, tango);
    romeo = 0;
    tango = oscar[romeo];
    entity = undefined;
    tango = foxtrot.bind(entity)(tango);
    var _closure1_slot3 = tango;
    yankee = 1;
    golf = oscar[yankee];
    tango = argCorge;
    tango = tango.bind(entity)(golf);
    var _closure1_slot4 = tango;
    tango = 2;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.View;
    var _closure1_slot5 = tango;
    tango = 3;
    tango = oscar[tango];
    tango = foxtrot.bind(entity)(tango);
    var _closure1_slot6 = tango;
    tango = 4;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.RowType;
    var _closure1_slot7 = tango;
    tango = 5;
    golf = oscar[tango];
    golf = report.bind(entity)(golf);
    golf = golf.jsx;
    var _closure1_slot8 = golf;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.jsxs;
    var _closure1_slot9 = tango;
    tango = 6;
    tango = oscar[tango];
    options = report.bind(entity)(tango);
    golf = options.createStyles;
    tango = {};
    verify = {'flexDirection': 'row', 'alignItems': 'center'};
    tango['flexRow'] = verify;
    offset = 16;
    verify = {'width': 16, 'height': 16};
    tango['labelIcon'] = verify;
    verify = {};
    verify['marginRight'] = romeo;
    tango['radioSelector'] = verify;
    verify = {'marginLeft': 0, 'marginRight': 16};
    tango['channelTypeIcon'] = verify;
    verify = {};
    verify['paddingHorizontal'] = offset;
    tango['suggestions'] = verify;
    verify = {'marginTop': 12, 'marginRight': 8};
    tango['suggestionPill'] = verify;
    verify = {};
    romeo = 7;
    romeo = oscar[romeo];
    romeo = foxtrot.bind(entity)(romeo);
    romeo = romeo.colors;
    romeo = romeo.BACKGROUND_MOBILE_SECONDARY;
    verify['backgroundColor'] = romeo;
    verify['flex'] = yankee;
    tango['addMembersContainer'] = verify;
    verify = {};
    verify['margin'] = offset;
    tango['moderatorDescriptionContainer'] = verify;
    verify = {'margin': 16, 'marginBottom': 0};
    tango['errorMessage'] = verify;
    tango = golf.bind(options)(tango);
    var _closure1_slot10 = tango;
    tango = 20;
    tango = oscar[tango];
    oscar = report.bind(entity)(tango);
    report = oscar.fileFinishedImporting;
    tango = 'modules/stage_channels/native/create_channel/AddModerators.tsx';
    tango = report.bind(oscar)(tango);
    mike = function(argFoo) { // Original name: AddModerators
        _fun76768: for(var _fun76768_ip = 0; ; ) switch(_fun76768_ip) {
 0:
            oscar = argFoo;
            mike = oscar.guildId;
            var _closure2_slot0 = mike;
            report = oscar.onChannelCreated;
            backup = null;
            tango = Object.create(backup);
            verify = 0;
            tango['guildId'] = verify;
            tango['onChannelCreated'] = verify;
            sequence = {};
            vacuum = oscar;
            control = tango;
            kilo = copyDataProperties(sequence, vacuum, control);
            var _closure2_slot1 = kilo;
            zulu = _closure1_slot10;
            tango = undefined;
            sizing = zulu.bind(tango)();
            update = _closure1_slot0;
            yankee = _closure1_slot2;
            zulu = 8;
            zulu = yankee[zulu];
            oscar = update.bind(tango)(zulu);
            zulu = oscar.useNavigation;
            golf = zulu.bind(oscar)();
            var _closure2_slot2 = golf;
            oscar = _closure1_slot6;
            zulu = oscar.getGuild;
            foxtrot = zulu.bind(oscar)(mike);
            oscar = _closure1_slot1;
            zulu = 9;
            zulu = yankee[zulu];
            offset = oscar.bind(tango)(zulu);
            options = backup != foxtrot;
            zulu = 'Guild must not be null';
            zulu = offset.bind(tango)(options, zulu);
            zulu = 10;
            zulu = yankee[zulu];
            zulu = oscar.bind(tango)(zulu);
            report = zulu.bind(tango)(report);
            echo = _closure1_slot3;
            zulu = 3;
            zulu = echo.bind(tango)(report, zulu);
            oscar = zulu[verify];
            var _closure2_slot3 = oscar;
            options = 1;
            result = zulu[options];
            offset = 2;
            output = zulu[offset];
            var _closure2_slot4 = output;
            report = _closure1_slot4;
            source = report.useState;
            zulu = {};
            zulu = source.bind(report)(zulu);
            zulu = echo.bind(tango)(zulu, offset);
            offset = zulu[verify];
            var _closure2_slot5 = offset;
            verify = zulu[options];
            options = report.useCallback;
            zulu = new Array(4);
            zulu[0] = output;
            zulu[1] = offset;
            zulu[2] = kilo;
            zulu[3] = mike;
            mike = function() {
                _fun76769: for(var _fun76769_ip = 0; ; ) switch(_fun76769_ip) {
 0:
                    mike = global;
                    report = mike.Object;
                    zulu = report.values;
                    mike = _closure2_slot5;
                    report = zulu.bind(report)(mike);
                    zulu = report.filter;
                    mike = function(argFoo) {
                        entity = argFoo;
                        entity = entity.row;
                        mike = entity.id;
                        entity = null;
                        entity = entity != mike;
                        return entity;
                    };
                    zulu = zulu.bind(report)(mike);
                    mike = zulu.map;
                    entity = function(argFoo) {
                        _fun76771: for(var _fun76771_ip = 0; ; ) switch(_fun76771_ip) {
 0:
                            entity = argFoo;
                            mike = entity.row;
                            tango = mike.rowType;
                            entity = _closure1_slot7;
                            entity = entity.ROLE;
                            if(!(tango !== entity)) { _fun76771_ip = 97; continue _fun76771 }
 32:
                            options = _closure1_slot0;
                            verify = _closure1_slot2;
                            entity = 11;
                            entity = verify[entity];
                            golf = undefined;
                            oscar = options.bind(golf)(entity);
                            report = oscar.createModeratorOverwrite;
                            tango = mike.id;
                            entity = 12;
                            entity = verify[entity];
                            entity = options.bind(golf)(entity);
                            entity = entity.PermissionOverwriteType;
                            entity = entity.MEMBER;
                            entity = report.bind(oscar)(tango, entity);
                            _fun76771_ip = 160; continue _fun76771;
 97:
                            golf = _closure1_slot0;
                            options = _closure1_slot2;
                            zulu = 11;
                            zulu = options[zulu];
                            oscar = undefined;
                            report = golf.bind(oscar)(zulu);
                            tango = report.createModeratorOverwrite;
                            zulu = mike.id;
                            mike = 12;
                            mike = options[mike];
                            mike = golf.bind(oscar)(mike);
                            mike = mike.PermissionOverwriteType;
                            mike = mike.ROLE;
                            entity = tango.bind(report)(zulu, mike);
 160:
                            return entity;
                        }
                    };
                    oscar = mike.bind(zulu)(entity);
                    zulu = _closure2_slot4;
                    mike = {};
                    entity = _closure2_slot1;
                    verify = mike;
                    options = entity;
                    report = copyDataProperties(verify, options);
                    report = _closure2_slot0;
                    tango = 'guildId';
                    mike[tango] = report;
                    tango = new Array(0);
                    golf = 0;
                    verify = tango;
                    options = oscar;
                    report = arraySpread(verify, options, golf);
                    entity = entity.overwrites;
                    oscar = null;
                    if(!(oscar == entity)) { _fun76769_ip = 126; continue _fun76769 }
 122:
                    entity = new Array(0);
 126:
                    verify = tango;
                    options = entity;
                    golf = report;
                    entity = arraySpread(verify, options, golf);
                    entity = 'overwrites';
                    mike[entity] = tango;
                    entity = undefined;
                    entity = zulu.bind(entity)(mike);
                    return entity;
                }
            };
            options = options.bind(report)(mike, zulu);
            var _closure2_slot6 = options;
            zulu = report.useLayoutEffect;
            mike = new Array(4);
            mike[0] = options;
            mike[1] = golf;
            mike[2] = offset;
            mike[3] = oscar;
            entity = function() {
                _fun76772: for(var _fun76772_ip = 0; ; ) switch(_fun76772_ip) {
 0:
                    entity = global;
                    zulu = entity.Object;
                    mike = zulu.keys;
                    entity = _closure2_slot5;
                    entity = mike.bind(zulu)(entity);
                    mike = entity.length;
                    entity = 0;
                    if(!(!(mike > entity))) { _fun76772_ip = 100; continue _fun76772 }
 38:
                    golf = _closure1_slot0;
                    options = _closure1_slot2;
                    entity = 13;
                    mike = options[entity];
                    oscar = undefined;
                    mike = golf.bind(oscar)(mike);
                    zulu = mike.intl;
                    mike = zulu.string;
                    entity = options[entity];
                    entity = golf.bind(oscar)(entity);
                    entity = entity.t;
                    entity = entity.5WxrcX;
                    entity = mike.bind(zulu)(entity);
                    _fun76772_ip = 160; continue _fun76772;
 100:
                    options = _closure1_slot0;
                    verify = _closure1_slot2;
                    mike = 13;
                    zulu = verify[mike];
                    golf = undefined;
                    zulu = options.bind(golf)(zulu);
                    oscar = zulu.intl;
                    zulu = oscar.string;
                    mike = verify[mike];
                    mike = options.bind(golf)(mike);
                    mike = mike.t;
                    mike = mike.CumH4u;
                    entity = zulu.bind(oscar)(mike);
 160:
                    var _closure3_slot0 = entity;
                    zulu = _closure2_slot2;
                    mike = zulu.setOptions;
                    entity = {};
                    tango = _closure2_slot3;
                    if(tango) { _fun76772_ip = 192; continue _fun76772 }
 183:
                    tango = function() {
                        tango = _closure1_slot8;
                        mike = _closure1_slot0;
                        zulu = _closure1_slot2;
                        entity = 15;
                        entity = zulu[entity];
                        zulu = undefined;
                        entity = mike.bind(zulu)(entity);
                        mike = entity.HeaderActionButton;
                        entity = {};
                        report = _closure3_slot0;
                        entity['text'] = report;
                        report = _closure2_slot6;
                        entity['onPress'] = report;
                        entity = tango.bind(zulu)(mike, entity);
                        return entity;
                    };
                    _fun76772_ip = 199; continue _fun76772;
 192:
                    tango = function() {
                        tango = _closure1_slot8;
                        mike = _closure1_slot0;
                        zulu = _closure1_slot2;
                        entity = 14;
                        entity = zulu[entity];
                        zulu = undefined;
                        entity = mike.bind(zulu)(entity);
                        mike = entity.HeaderSubmittingIndicator;
                        entity = {};
                        entity = tango.bind(zulu)(mike, entity);
                        return entity;
                    };
 199:
                    entity['headerRight'] = tango;
                    entity = mike.bind(zulu)(entity);
                    entity = undefined;
                    return entity;
                }
            };
            entity = zulu.bind(report)(entity, mike);
            zulu = _closure1_slot9;
            mike = _closure1_slot5;
            entity = {};
            report = sizing.addMembersContainer;
            entity['style'] = report;
            oscar = _closure1_slot8;
            report = {};
            golf = sizing.moderatorDescriptionContainer;
            report['style'] = golf;
            golf = 16;
            golf = yankee[golf];
            golf = update.bind(tango)(golf);
            options = golf.Text;
            golf = {'variant': 'text-sm/medium', 'color': 'header-secondary'};
            kilo = 13;
            output = yankee[kilo];
            output = update.bind(tango)(output);
            echo = output.intl;
            output = echo.string;
            yankee = yankee[kilo];
            yankee = update.bind(tango)(yankee);
            yankee = yankee.t;
            yankee = yankee.f7VbhI;
            yankee = output.bind(echo)(yankee);
            golf['children'] = yankee;
            golf = oscar.bind(tango)(options, golf);
            report['children'] = golf;
            oscar = oscar.bind(tango)(mike, report);
            report = new Array(3);
            report[0] = oscar;
            oscar = result.message;
            golf = backup != oscar;
            oscar = null;
            if(!golf) { _fun76768_ip = 569; continue _fun76768 }
 472:
            yankee = _closure1_slot8;
            options = _closure1_slot5;
            golf = {};
            sizing = sizing.errorMessage;
            golf['style'] = sizing;
            output = _closure1_slot1;
            source = _closure1_slot2;
            echo = 17;
            sizing = source[echo];
            output = output.bind(tango)(sizing);
            sizing = {};
            update = _closure1_slot0;
            echo = source[echo];
            echo = update.bind(tango)(echo);
            echo = echo.HelpMessageTypes;
            echo = echo.ERROR;
            sizing['messageType'] = echo;
            result = result.message;
            sizing['children'] = result;
            sizing = yankee.bind(tango)(output, sizing);
            golf['children'] = sizing;
            oscar = yankee.bind(tango)(options, golf);
 569:
            report[1] = oscar;
            options = _closure1_slot8;
            golf = _closure1_slot1;
            yankee = _closure1_slot2;
            oscar = 18;
            oscar = yankee[oscar];
            golf = golf.bind(tango)(oscar);
            oscar = {};
            oscar['channel'] = backup;
            oscar['guild'] = foxtrot;
            backup = _closure1_slot0;
            romeo = 19;
            romeo = yankee[romeo];
            romeo = backup.bind(tango)(romeo);
            romeo = romeo.MODERATE_STAGE_CHANNEL_PERMISSIONS;
            oscar['permission'] = romeo;
            romeo = yankee[kilo];
            romeo = backup.bind(tango)(romeo);
            foxtrot = romeo.intl;
            romeo = foxtrot.string;
            yankee = yankee[kilo];
            yankee = backup.bind(tango)(yankee);
            yankee = yankee.t;
            yankee = yankee.Ch6+n5;
            yankee = romeo.bind(foxtrot)(yankee);
            oscar['inputDesc'] = yankee;
            oscar['pendingAdditions'] = offset;
            oscar['setPendingAdditions'] = verify;
            verify = true;
            oscar['fullScreen'] = verify;
            oscar = options.bind(tango)(golf, oscar);
            report[2] = oscar;
            entity['children'] = report;
            entity = zulu.bind(tango)(mike, entity);
            return entity;
        }
    };
    zulu['default'] = mike;
    return entity;
})();