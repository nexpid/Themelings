// app/modules/stage_channels/native/create_channel/AddModerators.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    report = argBar;
    foxtra = argBaz;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    var _closure1_slot1 = foxtra;
    var _closure1_slot2 = oscard;
    entity = global;
    option = entity.Object;
    golfie = option.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(option)(zuuluu, entity, tangon);
    romeon = 0;
    tangon = oscard[romeon];
    entity = undefined;
    tangon = foxtra.bind(entity)(tangon);
    var _closure1_slot3 = tangon;
    yankee = 1;
    golfie = oscard[yankee];
    tangon = argCor;
    tangon = tangon.bind(entity)(golfie);
    var _closure1_slot4 = tangon;
    tangon = 2;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.View;
    var _closure1_slot5 = tangon;
    tangon = 3;
    tangon = oscard[tangon];
    tangon = foxtra.bind(entity)(tangon);
    var _closure1_slot6 = tangon;
    tangon = 4;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.RowType;
    var _closure1_slot7 = tangon;
    tangon = 5;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    golfie = tangon.jsx;
    var _closure1_slot8 = golfie;
    tangon = tangon.jsxs;
    var _closure1_slot9 = tangon;
    tangon = 6;
    tangon = oscard[tangon];
    option = report.bind(entity)(tangon);
    golfie = option.createStyles;
    tangon = {};
    verify = {'flexDirection': 'row', 'alignItems': 'center'};
    tangon['flexRow'] = verify;
    offset = 16;
    verify = {'width': 16, 'height': 16};
    tangon['labelIcon'] = verify;
    verify = {};
    verify['marginRight'] = romeon;
    tangon['radioSelector'] = verify;
    verify = {'marginLeft': 0, 'marginRight': 16};
    tangon['channelTypeIcon'] = verify;
    verify = {};
    verify['paddingHorizontal'] = offset;
    tangon['suggestions'] = verify;
    verify = {'marginTop': 12, 'marginRight': 8};
    tangon['suggestionPill'] = verify;
    verify = {};
    romeon = 7;
    romeon = oscard[romeon];
    romeon = foxtra.bind(entity)(romeon);
    romeon = romeon.colors;
    romeon = romeon.BACKGROUND_MOBILE_SECONDARY;
    verify['backgroundColor'] = romeon;
    verify['flex'] = yankee;
    tangon['addMembersContainer'] = verify;
    verify = {};
    verify['margin'] = offset;
    tangon['moderatorDescriptionContainer'] = verify;
    verify = {'margin': 16, 'marginBottom': 0};
    tangon['errorMessage'] = verify;
    tangon = golfie.bind(option)(tangon);
    var _closure1_slot10 = tangon;
    tangon = 20;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/stage_channels/native/create_channel/AddModerators.tsx';
    tangon = report.bind(oscard)(tangon);
    michal = function(argFoo) { // Original name: AddModerators
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            oscard = argFoo;
            michal = oscard.guildId;
            var _closure2_slot0 = michal;
            report = oscard.onChannelCreated;
            backup = null;
            tangon = Object.create(backup);
            verify = 0;
            tangon['guildId'] = verify;
            tangon['onChannelCreated'] = verify;
            sequen = {};
            vacuum = oscard;
            ctrled = tangon;
            kiloes = copyDataProperties(sequen, vacuum, ctrled);
            var _closure2_slot1 = kiloes;
            zuuluu = _closure1_slot10;
            tangon = undefined;
            sizing = zuuluu.bind(tangon)();
            update = _closure1_slot0;
            yankee = _closure1_slot2;
            zuuluu = 8;
            zuuluu = yankee[zuuluu];
            oscard = update.bind(tangon)(zuuluu);
            zuuluu = oscard.useNavigation;
            golfie = zuuluu.bind(oscard)();
            var _closure2_slot2 = golfie;
            oscard = _closure1_slot6;
            zuuluu = oscard.getGuild;
            foxtra = zuuluu.bind(oscard)(michal);
            oscard = _closure1_slot1;
            zuuluu = 9;
            zuuluu = yankee[zuuluu];
            offset = oscard.bind(tangon)(zuuluu);
            option = backup != foxtra;
            zuuluu = 'Guild must not be null';
            zuuluu = offset.bind(tangon)(option, zuuluu);
            zuuluu = 10;
            zuuluu = yankee[zuuluu];
            zuuluu = oscard.bind(tangon)(zuuluu);
            report = zuuluu.bind(tangon)(report);
            echoed = _closure1_slot3;
            zuuluu = 3;
            zuuluu = echoed.bind(tangon)(report, zuuluu);
            oscard = zuuluu[verify];
            var _closure2_slot3 = oscard;
            option = 1;
            result = zuuluu[option];
            offset = 2;
            output = zuuluu[offset];
            var _closure2_slot4 = output;
            report = _closure1_slot4;
            source = report.useState;
            zuuluu = {};
            zuuluu = source.bind(report)(zuuluu);
            zuuluu = echoed.bind(tangon)(zuuluu, offset);
            offset = zuuluu[verify];
            var _closure2_slot5 = offset;
            verify = zuuluu[option];
            option = report.useCallback;
            zuuluu = new Array(4);
            zuuluu[0] = output;
            zuuluu[1] = offset;
            zuuluu[2] = kiloes;
            zuuluu[3] = michal;
            michal = function() {
                _fun00003: for(var _fun00004_ip = 0; ; ) switch(_fun00004_ip) {
 0:
                    michal = global;
                    report = michal.Object;
                    zuuluu = report.values;
                    michal = _closure2_slot5;
                    report = zuuluu.bind(report)(michal);
                    zuuluu = report.filter;
                    michal = function(argFoo) {
                        entity = argFoo;
                        entity = entity.row;
                        michal = entity.id;
                        entity = null;
                        entity = entity != michal;
                        return entity;
                    };
                    zuuluu = zuuluu.bind(report)(michal);
                    michal = zuuluu.map;
                    entity = function(argFoo) {
                        _fun00005: for(var _fun00006_ip = 0; ; ) switch(_fun00006_ip) {
 0:
                            entity = argFoo;
                            michal = entity.row;
                            tangon = michal.rowType;
                            entity = _closure1_slot7;
                            entity = entity.ROLE;
                            if(!(tangon !== entity)) { _fun00006_ip = 97; continue _fun00005 }
 32:
                            option = _closure1_slot0;
                            verify = _closure1_slot2;
                            entity = 11;
                            entity = verify[entity];
                            golfie = undefined;
                            oscard = option.bind(golfie)(entity);
                            report = oscard.createModeratorOverwrite;
                            tangon = michal.id;
                            entity = 12;
                            entity = verify[entity];
                            entity = option.bind(golfie)(entity);
                            entity = entity.PermissionOverwriteType;
                            entity = entity.MEMBER;
                            entity = report.bind(oscard)(tangon, entity);
                            _fun00006_ip = 160; continue _fun00005;
 97:
                            golfie = _closure1_slot0;
                            option = _closure1_slot2;
                            zuuluu = 11;
                            zuuluu = option[zuuluu];
                            oscard = undefined;
                            report = golfie.bind(oscard)(zuuluu);
                            tangon = report.createModeratorOverwrite;
                            zuuluu = michal.id;
                            michal = 12;
                            michal = option[michal];
                            michal = golfie.bind(oscard)(michal);
                            michal = michal.PermissionOverwriteType;
                            michal = michal.ROLE;
                            entity = tangon.bind(report)(zuuluu, michal);
 160:
                            return entity;
                        }
                    };
                    oscard = michal.bind(zuuluu)(entity);
                    zuuluu = _closure2_slot4;
                    michal = {};
                    entity = _closure2_slot1;
                    verify = michal;
                    option = entity;
                    report = copyDataProperties(verify, option);
                    report = _closure2_slot0;
                    tangon = 'guildId';
                    michal[tangon] = report;
                    tangon = new Array(0);
                    golfie = 0;
                    verify = tangon;
                    option = oscard;
                    report = arraySpread(verify, option, golfie);
                    entity = entity.overwrites;
                    oscard = null;
                    if(!(oscard == entity)) { _fun00004_ip = 122; continue _fun00003 }
 118:
                    entity = new Array(0);
 122:
                    verify = tangon;
                    option = entity;
                    golfie = report;
                    entity = arraySpread(verify, option, golfie);
                    entity = 'overwrites';
                    michal[entity] = tangon;
                    entity = undefined;
                    entity = zuuluu.bind(entity)(michal);
                    return entity;
                }
            };
            option = option.bind(report)(michal, zuuluu);
            var _closure2_slot6 = option;
            zuuluu = report.useLayoutEffect;
            michal = new Array(4);
            michal[0] = option;
            michal[1] = golfie;
            michal[2] = offset;
            michal[3] = oscard;
            entity = function() {
                _fun00007: for(var _fun00008_ip = 0; ; ) switch(_fun00008_ip) {
 0:
                    entity = global;
                    zuuluu = entity.Object;
                    michal = zuuluu.keys;
                    entity = _closure2_slot5;
                    entity = michal.bind(zuuluu)(entity);
                    michal = entity.length;
                    entity = 0;
                    if(!(!(michal > entity))) { _fun00008_ip = 100; continue _fun00007 }
 38:
                    golfie = _closure1_slot0;
                    option = _closure1_slot2;
                    entity = 13;
                    michal = option[entity];
                    oscard = undefined;
                    michal = golfie.bind(oscard)(michal);
                    zuuluu = michal.intl;
                    michal = zuuluu.string;
                    entity = option[entity];
                    entity = golfie.bind(oscard)(entity);
                    entity = entity.t;
                    entity = entity.5WxrcX;
                    entity = michal.bind(zuuluu)(entity);
                    _fun00008_ip = 160; continue _fun00007;
 100:
                    option = _closure1_slot0;
                    verify = _closure1_slot2;
                    michal = 13;
                    zuuluu = verify[michal];
                    golfie = undefined;
                    zuuluu = option.bind(golfie)(zuuluu);
                    oscard = zuuluu.intl;
                    zuuluu = oscard.string;
                    michal = verify[michal];
                    michal = option.bind(golfie)(michal);
                    michal = michal.t;
                    michal = michal.CumH4u;
                    entity = zuuluu.bind(oscard)(michal);
 160:
                    var _closure3_slot0 = entity;
                    zuuluu = _closure2_slot2;
                    michal = zuuluu.setOptions;
                    entity = {};
                    tangon = _closure2_slot3;
                    if(tangon) { _fun00008_ip = 190; continue _fun00007 }
 183:
                    tangon = function() {
                        tangon = _closure1_slot8;
                        michal = _closure1_slot0;
                        zuuluu = _closure1_slot2;
                        entity = 15;
                        entity = zuuluu[entity];
                        zuuluu = undefined;
                        entity = michal.bind(zuuluu)(entity);
                        michal = entity.HeaderActionButton;
                        entity = {};
                        report = _closure3_slot0;
                        entity['text'] = report;
                        report = _closure2_slot6;
                        entity['onPress'] = report;
                        entity = tangon.bind(zuuluu)(michal, entity);
                        return entity;
                    };
                    _fun00008_ip = 195; continue _fun00007;
 190:
                    tangon = function() {
                        tangon = _closure1_slot8;
                        michal = _closure1_slot0;
                        zuuluu = _closure1_slot2;
                        entity = 14;
                        entity = zuuluu[entity];
                        zuuluu = undefined;
                        entity = michal.bind(zuuluu)(entity);
                        michal = entity.HeaderSubmittingIndicator;
                        entity = {};
                        entity = tangon.bind(zuuluu)(michal, entity);
                        return entity;
                    };
 195:
                    entity['headerRight'] = tangon;
                    entity = michal.bind(zuuluu)(entity);
                    entity = undefined;
                    return entity;
                }
            };
            entity = zuuluu.bind(report)(entity, michal);
            zuuluu = _closure1_slot9;
            michal = _closure1_slot5;
            entity = {};
            report = sizing.addMembersContainer;
            entity['style'] = report;
            oscard = _closure1_slot8;
            report = {};
            golfie = sizing.moderatorDescriptionContainer;
            report['style'] = golfie;
            golfie = 16;
            golfie = yankee[golfie];
            golfie = update.bind(tangon)(golfie);
            option = golfie.Text;
            golfie = {'variant': 'text-sm/medium', 'color': 'header-secondary'};
            kiloes = 13;
            output = yankee[kiloes];
            output = update.bind(tangon)(output);
            echoed = output.intl;
            output = echoed.string;
            yankee = yankee[kiloes];
            yankee = update.bind(tangon)(yankee);
            yankee = yankee.t;
            yankee = yankee.f7VbhI;
            yankee = output.bind(echoed)(yankee);
            golfie['children'] = yankee;
            golfie = oscard.bind(tangon)(option, golfie);
            report['children'] = golfie;
            oscard = oscard.bind(tangon)(michal, report);
            report = new Array(3);
            report[0] = oscard;
            oscard = result.message;
            golfie = backup != oscard;
            oscard = null;
            if(!golfie) { _fun00002_ip = 561; continue _fun00001 }
 464:
            yankee = _closure1_slot8;
            option = _closure1_slot5;
            golfie = {};
            sizing = sizing.errorMessage;
            golfie['style'] = sizing;
            output = _closure1_slot1;
            source = _closure1_slot2;
            echoed = 17;
            sizing = source[echoed];
            output = output.bind(tangon)(sizing);
            sizing = {};
            update = _closure1_slot0;
            echoed = source[echoed];
            echoed = update.bind(tangon)(echoed);
            echoed = echoed.HelpMessageTypes;
            echoed = echoed.ERROR;
            sizing['messageType'] = echoed;
            result = result.message;
            sizing['children'] = result;
            sizing = yankee.bind(tangon)(output, sizing);
            golfie['children'] = sizing;
            oscard = yankee.bind(tangon)(option, golfie);
 561:
            report[1] = oscard;
            option = _closure1_slot8;
            golfie = _closure1_slot1;
            yankee = _closure1_slot2;
            oscard = 18;
            oscard = yankee[oscard];
            golfie = golfie.bind(tangon)(oscard);
            oscard = {};
            oscard['channel'] = backup;
            oscard['guild'] = foxtra;
            backup = _closure1_slot0;
            romeon = 19;
            romeon = yankee[romeon];
            romeon = backup.bind(tangon)(romeon);
            romeon = romeon.MODERATE_STAGE_CHANNEL_PERMISSIONS;
            oscard['permission'] = romeon;
            romeon = yankee[kiloes];
            romeon = backup.bind(tangon)(romeon);
            foxtra = romeon.intl;
            romeon = foxtra.string;
            yankee = yankee[kiloes];
            yankee = backup.bind(tangon)(yankee);
            yankee = yankee.t;
            yankee = yankee.Ch6+n5;
            yankee = romeon.bind(foxtra)(yankee);
            oscard['inputDesc'] = yankee;
            oscard['pendingAdditions'] = offset;
            oscard['setPendingAdditions'] = verify;
            oscard = option.bind(tangon)(golfie, oscard);
            report[2] = oscard;
            entity['children'] = report;
            entity = zuuluu.bind(tangon)(michal, entity);
            return entity;
        }
    };
    zuuluu['default'] = michal;
    return entity;
})();