// app/modules/stage_channels/sendStageRequestToSpeakEphemeralMessage.tsx
export default (function(global, require, metroImportDefault, metroImportAll, moduleObject, exports, dependencyMap) {
    var5 = require;
    var3 = exports;
    var6 = dependencyMap;
    var1 = metroImportDefault;
    var _closure1_slot0 = var1;
    var _closure1_slot1 = var6;
    var1 = function createRequestToSpeakMessage(arg1) {
        var1 = arg1;
        var5 = var1.channelId;
        var2 = var1.requesterUser;
        var4 = var1.requestToSpeakTimestamp;
        var1 = {};
        var8 = _closure1_slot0;
        var7 = _closure1_slot1;
        var6 = 2;
        var7 = var7[var6];
        var6 = undefined;
        var8 = var8.bind(var6)(var7);
        var7 = var8.fromTimestamp;
        var6 = global;
        var9 = var6.Date;
        var6 = var9.parse;
        var6 = var6.bind(var9)(var4);
        var6 = var7.bind(var8)(var6);
        var1['id'] = var6;
        var6 = _closure1_slot4;
        var6 = var6.STAGE_RAISE_HAND;
        var1['type'] = var6;
        var6 = _closure1_slot2;
        var6 = var6.EPHEMERAL;
        var1['flags'] = var6;
        var6 = '';
        var1['content'] = var6;
        var1['channel_id'] = var5;
        var1['author'] = var2;
        var2 = new Array(0);
        var1['attachments'] = var2;
        var2 = new Array(0);
        var1['embeds'] = var2;
        var2 = false;
        var1['pinned'] = var2;
        var5 = new Array(0);
        var1['mentions'] = var5;
        var5 = new Array(0);
        var1['mention_channels'] = var5;
        var5 = new Array(0);
        var1['mention_roles'] = var5;
        var1['mention_everyone'] = var2;
        var1['timestamp'] = var4;
        var3 = _closure1_slot3;
        var3 = var3.SENT;
        var1['state'] = var3;
        var1['tts'] = var2;
        return var1;
    };
    var _closure1_slot5 = var1;
    var1 = global;
    var8 = var1.Object;
    var7 = var8.defineProperty;
    var4 = {};
    var1 = true;
    var4['value'] = var1;
    var1 = '__esModule';
    var1 = var7.bind(var8)(var3, var1, var4);
    var1 = 0;
    var4 = var6[var1];
    var1 = undefined;
    var4 = var5.bind(var1)(var4);
    var7 = var4.MessageFlags;
    var _closure1_slot2 = var7;
    var7 = var4.MessageStates;
    var _closure1_slot3 = var7;
    var4 = var4.MessageTypes;
    var _closure1_slot4 = var4;
    var4 = 3;
    var4 = var6[var4];
    var6 = var5.bind(var1)(var4);
    var5 = var6.fileFinishedImporting;
    var4 = 'modules/stage_channels/sendStageRequestToSpeakEphemeralMessage.tsx';
    var4 = var5.bind(var6)(var4);
    var2 = function sendStageRequestToSpeakEphemeralMessage(arg1, arg2, arg3) {
        var7 = arg1;
        var3 = _closure1_slot0;
        var2 = _closure1_slot1;
        var1 = 1;
        var2 = var2[var1];
        var1 = undefined;
        var4 = var3.bind(var1)(var2);
        var3 = var4.dispatch;
        var2 = {'type': 'MESSAGE_CREATE', 'channelId': null, 'message': null, 'optimistic': false, 'sendMessageOptions': null, 'isPushNotification': false};
        var2['channelId'] = var7;
        var6 = _closure1_slot5;
        var5 = {};
        var5['channelId'] = var7;
        var7 = arg2;
        var5['requesterUser'] = var7;
        var7 = arg3;
        var5['requestToSpeakTimestamp'] = var7;
        var5 = var6.bind(var1)(var5);
        var2['message'] = var5;
        var5 = {};
        var2['sendMessageOptions'] = var5;
        var2 = var3.bind(var4)(var2);
        return var1;
    };
    var3['sendStageRequestToSpeakEphemeralMessage'] = var2;
    return var1;
})();