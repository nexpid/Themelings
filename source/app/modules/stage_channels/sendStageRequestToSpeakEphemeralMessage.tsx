// app/modules/stage_channels/sendStageRequestToSpeakEphemeralMessage.tsx
export default (function(argFoo, argBar, argBaz, _, __, argFre, argPlu) {
    report = argBar;
    zuuluu = argFre;
    oscard = argPlu;
    entity = argBaz;
    var _closure1_slot0 = entity;
    var _closure1_slot1 = oscard;
    entity = function(argFoo) { // Original name: createRequestToSpeakMessage
        entity = argFoo;
        report = entity.channelId;
        michal = entity.requesterUser;
        tangon = entity.requestToSpeakTimestamp;
        entity = {};
        option = _closure1_slot0;
        golfie = _closure1_slot1;
        oscard = 2;
        golfie = golfie[oscard];
        oscard = undefined;
        option = option.bind(oscard)(golfie);
        golfie = option.fromTimestamp;
        oscard = global;
        verify = oscard.Date;
        oscard = verify.parse;
        oscard = oscard.bind(verify)(tangon);
        oscard = golfie.bind(option)(oscard);
        entity['id'] = oscard;
        oscard = _closure1_slot4;
        oscard = oscard.STAGE_RAISE_HAND;
        entity['type'] = oscard;
        oscard = _closure1_slot2;
        oscard = oscard.EPHEMERAL;
        entity['flags'] = oscard;
        oscard = '';
        entity['content'] = oscard;
        entity['channel_id'] = report;
        entity['author'] = michal;
        michal = new Array(0);
        entity['attachments'] = michal;
        michal = new Array(0);
        entity['embeds'] = michal;
        michal = false;
        entity['pinned'] = michal;
        report = new Array(0);
        entity['mentions'] = report;
        report = new Array(0);
        entity['mention_channels'] = report;
        report = new Array(0);
        entity['mention_roles'] = report;
        entity['mention_everyone'] = michal;
        entity['timestamp'] = tangon;
        zuuluu = _closure1_slot3;
        zuuluu = zuuluu.SENT;
        entity['state'] = zuuluu;
        entity['tts'] = michal;
        return entity;
    };
    var _closure1_slot5 = entity;
    entity = global;
    option = entity.Object;
    golfie = option.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(option)(zuuluu, entity, tangon);
    entity = 0;
    tangon = oscard[entity];
    entity = undefined;
    tangon = report.bind(entity)(tangon);
    golfie = tangon.MessageFlags;
    var _closure1_slot2 = golfie;
    golfie = tangon.MessageStates;
    var _closure1_slot3 = golfie;
    tangon = tangon.MessageTypes;
    var _closure1_slot4 = tangon;
    tangon = 3;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/stage_channels/sendStageRequestToSpeakEphemeralMessage.tsx';
    tangon = report.bind(oscard)(tangon);
    michal = function(argFoo, argBar, argBaz) { // Original name: sendStageRequestToSpeakEphemeralMessage
        golfie = argFoo;
        zuuluu = _closure1_slot0;
        michal = _closure1_slot1;
        entity = 1;
        michal = michal[entity];
        entity = undefined;
        tangon = zuuluu.bind(entity)(michal);
        zuuluu = tangon.dispatch;
        michal = {'type': 'MESSAGE_CREATE', 'channelId': null, 'message': null, 'optimistic': false, 'sendMessageOptions': null, 'isPushNotification': false};
        michal['channelId'] = golfie;
        oscard = _closure1_slot5;
        report = {};
        report['channelId'] = golfie;
        golfie = argBar;
        report['requesterUser'] = golfie;
        golfie = argBaz;
        report['requestToSpeakTimestamp'] = golfie;
        report = oscard.bind(entity)(report);
        michal['message'] = report;
        report = {};
        michal['sendMessageOptions'] = report;
        michal = zuuluu.bind(tangon)(michal);
        return entity;
    };
    zuuluu['sendStageRequestToSpeakEphemeralMessage'] = michal;
    return entity;
})();