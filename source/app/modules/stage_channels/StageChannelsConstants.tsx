// app/modules/stage_channels/StageChannelsConstants.tsx
export default (function(_, argBar, argBaz, __, ___, argFred, argPlugh) {
    golf = argBar;
    zulu = argFred;
    options = argPlugh;
    var _closure1_slot0 = golf;
    entity = argBaz;
    var _closure1_slot1 = entity;
    var _closure1_slot2 = options;
    entity = global;
    oscar = entity.Object;
    report = oscar.defineProperty;
    mike = {};
    entity = true;
    mike['value'] = entity;
    entity = '__esModule';
    entity = report.bind(oscar)(zulu, entity, mike);
    romeo = 0;
    mike = options[romeo];
    entity = undefined;
    mike = golf.bind(entity)(mike);
    mike = mike.HelpdeskArticles;
    var _closure1_slot3 = mike;
    report = {};
    yankee = 1;
    report['EVERYONE'] = yankee;
    mike = 'EVERYONE';
    report[yankee] = mike;
    offset = 2;
    report['NO_ONE'] = offset;
    mike = 'NO_ONE';
    report[offset] = mike;
    oscar = 3;
    report['ROLES'] = oscar;
    mike = 'ROLES';
    report[oscar] = mike;
    mike = {};
    mike['GUILD_SELECTION'] = romeo;
    verify = 'GUILD_SELECTION';
    mike[romeo] = verify;
    mike['STAGE_CHANNEL_SETTINGS'] = yankee;
    verify = 'STAGE_CHANNEL_SETTINGS';
    mike[yankee] = verify;
    mike['PUBLIC_STAGE_PREVIEW'] = offset;
    verify = 'PUBLIC_STAGE_PREVIEW';
    mike[offset] = verify;
    oscar = options[oscar];
    options = golf.bind(entity)(oscar);
    golf = options.fileFinishedImporting;
    oscar = 'modules/stage_channels/StageChannelsConstants.tsx';
    oscar = golf.bind(options)(oscar);
    oscar = 240;
    zulu['MAX_STAGE_TOPIC_LENGTH'] = oscar;
    oscar = 4;
    zulu['MAX_AUDIENCE_ROW_LIMIT'] = oscar;
    oscar = '834488117758001152';
    zulu['STAGE_APPLICATION_ID'] = oscar;
    oscar = 'request-to-speak-list';
    zulu['REQUEST_TO_SPEAK_SHEET_KEY'] = oscar;
    oscar = 'start-stage-channel-event';
    zulu['START_STAGE_CHANNEL_EVENT_SHEET_KEY'] = oscar;
    oscar = 'start-stage-channel-event-modal';
    zulu['START_STAGE_CHANNEL_EVENT_MODAL_KEY'] = oscar;
    oscar = 'public-stage-info-action-sheet';
    zulu['PUBLIC_STAGE_INFO_ACTION_SHEET_KEY'] = oscar;
    oscar = 'stage-channel-audience-notice';
    zulu['STAGE_AUDIENCE_NOTICE_SHEET_KEY'] = oscar;
    oscar = 'stage-channel-moderator-join';
    zulu['STAGE_MODERATOR_JOIN_SHEET_KEY'] = oscar;
    oscar = 'stage-channel-blocked-users';
    zulu['STAGE_BLOCKED_USERS_SHEET_KEY'] = oscar;
    oscar = 'stage-settings';
    zulu['STAGE_SETTINGS_SHEET_KEY'] = oscar;
    oscar = 'explicit-end-stage';
    zulu['EXPLICIT_END_STAGE_SHEET_KEY'] = oscar;
    oscar = 'stage-invite';
    zulu['STAGE_INVITE_STATE_KEY'] = oscar;
    oscar = 'stage-boosting';
    zulu['STAGE_BOOSTING_SHEET_KEY'] = oscar;
    oscar = 'stage-channel-audience-notice-shown';
    zulu['STAGE_AUDIENCE_NOTICE_SHOWN_STORAGE_KEY'] = oscar;
    zulu['RequestToSpeakPermissionStates'] = report;
    tango = function() { // Original name: getStagePublicInfoText
        oscar = _closure1_slot0;
        golf = _closure1_slot2;
        mike = 1;
        entity = golf[mike];
        report = undefined;
        entity = oscar.bind(report)(entity);
        tango = entity.intl;
        zulu = tango.string;
        entity = golf[mike];
        entity = oscar.bind(report)(entity);
        entity = entity.t;
        entity = entity.9XlQ9f;
        zulu = zulu.bind(tango)(entity);
        entity = new Array(4);
        entity[0] = zulu;
        zulu = golf[mike];
        zulu = oscar.bind(report)(zulu);
        options = zulu.intl;
        tango = options.string;
        zulu = golf[mike];
        zulu = oscar.bind(report)(zulu);
        zulu = zulu.t;
        zulu = zulu.lF0IbG;
        zulu = tango.bind(options)(zulu);
        entity[1] = zulu;
        zulu = golf[mike];
        zulu = oscar.bind(report)(zulu);
        verify = zulu.intl;
        options = verify.format;
        zulu = golf[mike];
        zulu = oscar.bind(report)(zulu);
        zulu = zulu.t;
        tango = zulu.q2jZ6O;
        zulu = {};
        romeo = _closure1_slot1;
        yankee = 2;
        yankee = golf[yankee];
        romeo = romeo.bind(report)(yankee);
        yankee = romeo.getArticleURL;
        offset = _closure1_slot3;
        offset = offset.STAGE_CHANNEL_GUIDELINES;
        offset = yankee.bind(romeo)(offset);
        zulu['articleURL'] = offset;
        zulu = options.bind(verify)(tango, zulu);
        entity[2] = zulu;
        zulu = golf[mike];
        zulu = oscar.bind(report)(zulu);
        tango = zulu.intl;
        zulu = tango.string;
        mike = golf[mike];
        mike = oscar.bind(report)(mike);
        mike = mike.t;
        mike = mike.xfb7ZW;
        mike = zulu.bind(tango)(mike);
        entity[3] = mike;
        return entity;
    };
    zulu['getStagePublicInfoText'] = tango;
    zulu['StartStageSteps'] = mike;
    return entity;
})();