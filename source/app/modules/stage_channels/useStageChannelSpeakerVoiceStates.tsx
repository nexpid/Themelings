// app/modules/stage_channels/useStageChannelSpeakerVoiceStates.tsx
export default (function(argFoo, argBar, argBaz, _, __, argFred, argPlugh) {
    oscar = argBar;
    options = argBaz;
    zulu = argFred;
    golf = argPlugh;
    var _closure1_slot0 = oscar;
    var _closure1_slot1 = options;
    var _closure1_slot2 = golf;
    mike = function(argFoo) { // Original name: transformParticipantToSortedVoiceState
        entity = argFoo;
        report = entity.voiceState;
        tango = entity.userNick;
        mike = entity.user;
        entity = {};
        entity['user'] = mike;
        entity['voiceState'] = report;
        entity['nick'] = tango;
        zulu = _closure1_slot6;
        mike = undefined;
        mike = zulu.bind(mike)(report, tango);
        entity['comparator'] = mike;
        return entity;
    };
    var _closure1_slot9 = mike;
    entity = global;
    offset = entity.Object;
    verify = offset.defineProperty;
    report = {};
    entity = true;
    report['value'] = entity;
    entity = '__esModule';
    entity = verify.bind(offset)(zulu, entity, report);
    entity = 0;
    report = golf[entity];
    entity = undefined;
    report = options.bind(entity)(report);
    var _closure1_slot3 = report;
    report = 1;
    report = golf[report];
    report = options.bind(entity)(report);
    var _closure1_slot4 = report;
    report = 2;
    report = golf[report];
    report = options.bind(entity)(report);
    var _closure1_slot5 = report;
    report = 3;
    report = golf[report];
    report = oscar.bind(entity)(report);
    report = report.getComparator;
    var _closure1_slot6 = report;
    report = 4;
    report = golf[report];
    report = options.bind(entity)(report);
    var _closure1_slot7 = report;
    report = 5;
    report = golf[report];
    report = oscar.bind(entity)(report);
    report = report.FAVORITES;
    var _closure1_slot8 = report;
    report = 11;
    report = golf[report];
    golf = oscar.bind(entity)(report);
    oscar = golf.fileFinishedImporting;
    report = 'modules/stage_channels/useStageChannelSpeakerVoiceStates.tsx';
    report = oscar.bind(golf)(report);
    tango = function(argFoo) { // Original name: useStageChannelSpeakerVoiceStates
        zulu = argFoo;
        var _closure2_slot0 = zulu;
        verify = _closure1_slot0;
        offset = _closure1_slot2;
        tango = 6;
        report = offset[tango];
        tango = undefined;
        options = verify.bind(tango)(report);
        golf = options.useStateFromStores;
        report = _closure1_slot7;
        oscar = new Array(3);
        oscar[0] = report;
        report = _closure1_slot5;
        oscar[1] = report;
        report = _closure1_slot4;
        oscar[2] = report;
        report = new Array(1);
        report[0] = zulu;
        zulu = 10;
        zulu = offset[zulu];
        zulu = verify.bind(tango)(zulu);
        yankee = zulu.isVersionEqual;
        foxtrot = function() {
            _fun113799: for(var _fun113799_ip = 0; ; ) switch(_fun113799_ip) {
 0:
                report = _closure2_slot0;
                tango = _closure1_slot8;
                if(!(report !== tango)) { _fun113799_ip = 41; continue _fun113799 }
 20:
                report = _closure1_slot7;
                tango = report.getChannels;
                zulu = _closure2_slot0;
                report = tango.bind(report)(zulu);
                _fun113799_ip = 153; continue _fun113799;
 41:
                tango = _closure1_slot1;
                options = _closure1_slot2;
                zulu = 7;
                zulu = options[zulu];
                golf = undefined;
                oscar = tango.bind(golf)(zulu);
                tango = oscar.keys;
                verify = _closure1_slot4;
                zulu = verify.getFavoriteChannels;
                zulu = zulu.bind(verify)();
                oscar = tango.bind(oscar)(zulu);
                tango = oscar.map;
                zulu = function(argFoo) {
                    zulu = _closure1_slot5;
                    mike = zulu.getChannel;
                    entity = argFoo;
                    entity = mike.bind(zulu)(entity);
                    return entity;
                };
                tango = tango.bind(oscar)(zulu);
                zulu = tango.filter;
                oscar = _closure1_slot0;
                entity = 8;
                entity = options[entity];
                entity = oscar.bind(golf)(entity);
                entity = entity.isNotNullish;
                tango = zulu.bind(tango)(entity);
                zulu = tango.filter;
                entity = function(argFoo) {
                    mike = argFoo;
                    entity = mike.isGuildStageVoice;
                    entity = entity.bind(mike)();
                    return entity;
                };
                report = zulu.bind(tango)(entity);
 153:
                tango = report.reduce;
                zulu = function(argFoo, argBar) {
                    entity = argFoo;
                    zulu = argBar;
                    golf = _closure1_slot7;
                    oscar = golf.getMutableParticipants;
                    report = zulu.id;
                    verify = _closure1_slot0;
                    options = _closure1_slot2;
                    tango = 9;
                    options = options[tango];
                    tango = undefined;
                    tango = verify.bind(tango)(options);
                    tango = tango.StageChannelParticipantNamedIndex;
                    tango = tango.SPEAKER;
                    oscar = oscar.bind(golf)(report, tango);
                    zulu = zulu.id;
                    report = oscar.filter;
                    tango = function(argFoo) {
                        entity = argFoo;
                        mike = entity.type;
                        tango = _closure1_slot0;
                        zulu = _closure1_slot2;
                        entity = 9;
                        zulu = zulu[entity];
                        entity = undefined;
                        entity = tango.bind(entity)(zulu);
                        entity = entity.StageChannelParticipantTypes;
                        entity = entity.VOICE;
                        entity = mike === entity;
                        return entity;
                    };
                    report = report.bind(oscar)(tango);
                    tango = report.map;
                    mike = _closure1_slot9;
                    mike = tango.bind(report)(mike);
                    entity[zulu] = mike;
                    return entity;
                };
                entity = {};
                zulu = tango.bind(report)(zulu, entity);
                entity = new Array(2);
                entity[0] = zulu;
                tango = report.reduce;
                zulu = function(argFoo, argBar) {
                    entity = argBar;
                    zulu = entity.id;
                    mike = _closure1_slot7;
                    entity = mike.getParticipantsVersion;
                    mike = entity.bind(mike)(zulu);
                    entity = argFoo;
                    entity = entity + mike;
                    return entity;
                };
                mike = 0;
                mike = tango.bind(report)(zulu, mike);
                entity[1] = mike;
                return entity;
            }
        };
        kilo = options;
        backup = oscar;
        romeo = report;
        zulu = kilo[golf](backup, foxtrot, romeo, yankee, offset);
        mike = _closure1_slot3;
        entity = 1;
        mike = mike.bind(tango)(zulu, entity);
        entity = 0;
        entity = mike[entity];
        return entity;
    };
    zulu['default'] = tango;
    zulu['transformParticipantToSortedVoiceState'] = mike;
    return entity;
})();