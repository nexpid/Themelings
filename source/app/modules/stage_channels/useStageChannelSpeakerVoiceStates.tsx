// app/modules/stage_channels/useStageChannelSpeakerVoiceStates.tsx
export default (function(argFoo, argBar, argBaz, _, __, argFre, argPlu) {
    oscard = argBar;
    option = argBaz;
    zuuluu = argFre;
    golfie = argPlu;
    var _closure1_slot0 = oscard;
    var _closure1_slot1 = option;
    var _closure1_slot2 = golfie;
    michal = function(argFoo) { // Original name: transformParticipantToSortedVoiceState
        entity = argFoo;
        report = entity.voiceState;
        tangon = entity.userNick;
        michal = entity.user;
        entity = {};
        entity['user'] = michal;
        entity['voiceState'] = report;
        entity['nick'] = tangon;
        zuuluu = _closure1_slot6;
        michal = undefined;
        michal = zuuluu.bind(michal)(report, tangon);
        entity['comparator'] = michal;
        return entity;
    };
    var _closure1_slot9 = michal;
    entity = global;
    offset = entity.Object;
    verify = offset.defineProperty;
    report = {};
    entity = true;
    report['value'] = entity;
    entity = '__esModule';
    entity = verify.bind(offset)(zuuluu, entity, report);
    entity = 0;
    report = golfie[entity];
    entity = undefined;
    report = option.bind(entity)(report);
    var _closure1_slot3 = report;
    report = 1;
    report = golfie[report];
    report = option.bind(entity)(report);
    var _closure1_slot4 = report;
    report = 2;
    report = golfie[report];
    report = option.bind(entity)(report);
    var _closure1_slot5 = report;
    report = 3;
    report = golfie[report];
    report = oscard.bind(entity)(report);
    report = report.getComparator;
    var _closure1_slot6 = report;
    report = 4;
    report = golfie[report];
    report = option.bind(entity)(report);
    var _closure1_slot7 = report;
    report = 5;
    report = golfie[report];
    report = oscard.bind(entity)(report);
    report = report.FAVORITES;
    var _closure1_slot8 = report;
    report = 11;
    report = golfie[report];
    golfie = oscard.bind(entity)(report);
    oscard = golfie.fileFinishedImporting;
    report = 'modules/stage_channels/useStageChannelSpeakerVoiceStates.tsx';
    report = oscard.bind(golfie)(report);
    tangon = function(argFoo) { // Original name: useStageChannelSpeakerVoiceStates
        zuuluu = argFoo;
        var _closure2_slot0 = zuuluu;
        verify = _closure1_slot0;
        offset = _closure1_slot2;
        tangon = 6;
        report = offset[tangon];
        tangon = undefined;
        option = verify.bind(tangon)(report);
        golfie = option.useStateFromStores;
        report = _closure1_slot7;
        oscard = new Array(3);
        oscard[0] = report;
        report = _closure1_slot5;
        oscard[1] = report;
        report = _closure1_slot4;
        oscard[2] = report;
        report = new Array(1);
        report[0] = zuuluu;
        zuuluu = 10;
        zuuluu = offset[zuuluu];
        zuuluu = verify.bind(tangon)(zuuluu);
        yankee = zuuluu.isVersionEqual;
        foxtra = function() {
            _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
                report = _closure2_slot0;
                tangon = _closure1_slot8;
                if(!(report !== tangon)) { _fun00002_ip = 41; continue _fun00001 }
 20:
                report = _closure1_slot7;
                tangon = report.getChannels;
                zuuluu = _closure2_slot0;
                report = tangon.bind(report)(zuuluu);
                _fun00002_ip = 153; continue _fun00001;
 41:
                tangon = _closure1_slot1;
                option = _closure1_slot2;
                zuuluu = 7;
                zuuluu = option[zuuluu];
                golfie = undefined;
                oscard = tangon.bind(golfie)(zuuluu);
                tangon = oscard.keys;
                verify = _closure1_slot4;
                zuuluu = verify.getFavoriteChannels;
                zuuluu = zuuluu.bind(verify)();
                oscard = tangon.bind(oscard)(zuuluu);
                tangon = oscard.map;
                zuuluu = function(argFoo) {
                    zuuluu = _closure1_slot5;
                    michal = zuuluu.getChannel;
                    entity = argFoo;
                    entity = michal.bind(zuuluu)(entity);
                    return entity;
                };
                tangon = tangon.bind(oscard)(zuuluu);
                zuuluu = tangon.filter;
                oscard = _closure1_slot0;
                entity = 8;
                entity = option[entity];
                entity = oscard.bind(golfie)(entity);
                entity = entity.isNotNullish;
                tangon = zuuluu.bind(tangon)(entity);
                zuuluu = tangon.filter;
                entity = function(argFoo) {
                    michal = argFoo;
                    entity = michal.isGuildStageVoice;
                    entity = entity.bind(michal)();
                    return entity;
                };
                report = zuuluu.bind(tangon)(entity);
 153:
                tangon = report.reduce;
                zuuluu = function(argFoo, argBar) {
                    entity = argFoo;
                    zuuluu = argBar;
                    golfie = _closure1_slot7;
                    oscard = golfie.getMutableParticipants;
                    report = zuuluu.id;
                    verify = _closure1_slot0;
                    option = _closure1_slot2;
                    tangon = 9;
                    option = option[tangon];
                    tangon = undefined;
                    tangon = verify.bind(tangon)(option);
                    tangon = tangon.StageChannelParticipantNamedIndex;
                    tangon = tangon.SPEAKER;
                    oscard = oscard.bind(golfie)(report, tangon);
                    zuuluu = zuuluu.id;
                    report = oscard.filter;
                    tangon = function(argFoo) {
                        entity = argFoo;
                        michal = entity.type;
                        tangon = _closure1_slot0;
                        zuuluu = _closure1_slot2;
                        entity = 9;
                        zuuluu = zuuluu[entity];
                        entity = undefined;
                        entity = tangon.bind(entity)(zuuluu);
                        entity = entity.StageChannelParticipantTypes;
                        entity = entity.VOICE;
                        entity = michal === entity;
                        return entity;
                    };
                    report = report.bind(oscard)(tangon);
                    tangon = report.map;
                    michal = _closure1_slot9;
                    michal = tangon.bind(report)(michal);
                    entity[zuuluu] = michal;
                    return entity;
                };
                entity = {};
                zuuluu = tangon.bind(report)(zuuluu, entity);
                entity = new Array(2);
                entity[0] = zuuluu;
                tangon = report.reduce;
                zuuluu = function(argFoo, argBar) {
                    entity = argBar;
                    zuuluu = entity.id;
                    michal = _closure1_slot7;
                    entity = michal.getParticipantsVersion;
                    michal = entity.bind(michal)(zuuluu);
                    entity = argFoo;
                    entity = entity + michal;
                    return entity;
                };
                michal = 0;
                michal = tangon.bind(report)(zuuluu, michal);
                entity[1] = michal;
                return entity;
            }
        };
        kiloes = option;
        backup = oscard;
        romeon = report;
        zuuluu = kiloes[golfie](backup, foxtra, romeon, yankee, offset);
        michal = _closure1_slot3;
        entity = 1;
        michal = michal.bind(tangon)(zuuluu, entity);
        entity = 0;
        entity = michal[entity];
        return entity;
    };
    zuuluu['default'] = tangon;
    zuuluu['transformParticipantToSortedVoiceState'] = michal;
    return entity;
})();