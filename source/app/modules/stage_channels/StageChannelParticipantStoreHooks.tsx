// app/modules/stage_channels/StageChannelParticipantStoreHooks.tsx
export default (function(global, require, metroImportDefault, metroImportAll, moduleObject, exports, dependencyMap) {
    var5 = require;
    var7 = metroImportDefault;
    var3 = exports;
    var6 = dependencyMap;
    var _closure1_slot0 = var5;
    var _closure1_slot1 = var6;
    var1 = global;
    var9 = var1.Object;
    var8 = var9.defineProperty;
    var4 = {};
    var1 = true;
    var4['value'] = var1;
    var1 = '__esModule';
    var1 = var8.bind(var9)(var3, var1, var4);
    var1 = 0;
    var4 = var6[var1];
    var1 = undefined;
    var4 = var7.bind(var1)(var4);
    var _closure1_slot2 = var4;
    var4 = 1;
    var4 = var6[var4];
    var4 = var7.bind(var1)(var4);
    var _closure1_slot3 = var4;
    var4 = 5;
    var4 = var6[var4];
    var6 = var5.bind(var1)(var4);
    var5 = var6.fileFinishedImporting;
    var4 = 'modules/stage_channels/StageChannelParticipantStoreHooks.tsx';
    var4 = var5.bind(var6)(var4);
    var4 = function useStageParticipants(arg1, arg2) {
        var11 = arg1;
        var3 = arg2;
        var _closure2_slot0 = var11;
        var _closure2_slot1 = var3;
        var9 = _closure1_slot0;
        var10 = _closure1_slot1;
        var4 = 2;
        var5 = var10[var4];
        var4 = undefined;
        var8 = var9.bind(var4)(var5);
        var7 = var8.useStateFromStores;
        var5 = _closure1_slot3;
        var6 = new Array(1);
        var6[0] = var5;
        var5 = new Array(2);
        var5[0] = var11;
        var5[1] = var3;
        var3 = 3;
        var3 = var10[var3];
        var3 = var9.bind(var4)(var3);
        var12 = var3.isVersionEqual;
        var14 = function() {
            var4 = _closure1_slot3;
            var2 = var4.getMutableParticipants;
            var3 = _closure2_slot0;
            var1 = _closure2_slot1;
            var2 = var2.bind(var4)(var3, var1);
            var1 = new Array(2);
            var1[0] = var2;
            var2 = var4.getParticipantsVersion;
            var2 = var2.bind(var4)(var3);
            var1[1] = var2;
            return var1;
        };
        var16 = var8;
        var15 = var6;
        var13 = var5;
        var3 = var16[var7](var15, var14, var13, var12, var11);
        var2 = _closure1_slot2;
        var1 = 1;
        var2 = var2.bind(var4)(var3, var1);
        var1 = 0;
        var1 = var2[var1];
        return var1;
    };
    var3['useStageParticipants'] = var4;
    var4 = function useStageParticipantsCount(arg1, arg2) {
        var7 = arg1;
        var6 = arg2;
        var _closure2_slot0 = var7;
        var _closure2_slot1 = var6;
        var5 = _closure1_slot0;
        var4 = _closure1_slot1;
        var3 = 2;
        var4 = var4[var3];
        var3 = undefined;
        var5 = var5.bind(var3)(var4);
        var4 = var5.useStateFromStores;
        var2 = _closure1_slot3;
        var3 = new Array(1);
        var3[0] = var2;
        var2 = new Array(2);
        var2[0] = var7;
        var2[1] = var6;
        var1 = function() {
            var4 = _closure1_slot3;
            var3 = var4.getParticipantCount;
            var2 = _closure2_slot0;
            var1 = _closure2_slot1;
            var1 = var3.bind(var4)(var2, var1);
            return var1;
        };
        var1 = var4.bind(var5)(var3, var1, var2);
        return var1;
    };
    var3['useStageParticipantsCount'] = var4;
    var4 = function useSortedRequestToSpeakParticipants(arg1) {
        var3 = arg1;
        var _closure2_slot0 = var3;
        var9 = _closure1_slot0;
        var10 = _closure1_slot1;
        var4 = 2;
        var5 = var10[var4];
        var4 = undefined;
        var8 = var9.bind(var4)(var5);
        var7 = var8.useStateFromStores;
        var5 = _closure1_slot3;
        var6 = new Array(1);
        var6[0] = var5;
        var5 = new Array(1);
        var5[0] = var3;
        var3 = 3;
        var3 = var10[var3];
        var3 = var9.bind(var4)(var3);
        var11 = var3.isVersionEqual;
        var13 = function() {
            var4 = _closure1_slot3;
            var1 = var4.getMutableRequestToSpeakParticipants;
            var3 = _closure2_slot0;
            var2 = var1.bind(var4)(var3);
            var1 = new Array(2);
            var1[0] = var2;
            var2 = var4.getRequestToSpeakParticipantsVersion;
            var2 = var2.bind(var4)(var3);
            var1[1] = var2;
            return var1;
        };
        var15 = var8;
        var14 = var6;
        var12 = var5;
        var3 = var15[var7](var14, var13, var12, var11, var10);
        var2 = _closure1_slot2;
        var1 = 1;
        var2 = var2.bind(var4)(var3, var1);
        var1 = 0;
        var1 = var2[var1];
        return var1;
    };
    var3['useSortedRequestToSpeakParticipants'] = var4;
    var2 = function useActualStageSpeakerCount(arg1) {
        var6 = arg1;
        var _closure2_slot0 = var6;
        var5 = _closure1_slot0;
        var4 = _closure1_slot1;
        var3 = 2;
        var4 = var4[var3];
        var3 = undefined;
        var5 = var5.bind(var3)(var4);
        var4 = var5.useStateFromStores;
        var2 = _closure1_slot3;
        var3 = new Array(1);
        var3[0] = var2;
        var2 = new Array(1);
        var2[0] = var6;
        var1 = function() {
            var4 = _closure1_slot3;
            var3 = var4.getMutableParticipants;
            var2 = _closure2_slot0;
            var6 = _closure1_slot0;
            var5 = _closure1_slot1;
            var1 = 4;
            var5 = var5[var1];
            var1 = undefined;
            var1 = var6.bind(var1)(var5);
            var1 = var1.StageChannelParticipantNamedIndex;
            var1 = var1.SPEAKER;
            var3 = var3.bind(var4)(var2, var1);
            var2 = var3.filter;
            var1 = function(arg1) {
                var1 = arg1;
                var2 = var1.type;
                var4 = _closure1_slot0;
                var3 = _closure1_slot1;
                var1 = 4;
                var3 = var3[var1];
                var1 = undefined;
                var1 = var4.bind(var1)(var3);
                var1 = var1.StageChannelParticipantTypes;
                var1 = var1.VOICE;
                var1 = var2 === var1;
                return var1;
            };
            var1 = var2.bind(var3)(var1);
            var1 = var1.length;
            return var1;
        };
        var1 = var4.bind(var5)(var3, var1, var2);
        return var1;
    };
    var3['useActualStageSpeakerCount'] = var2;
    return var1;
})();