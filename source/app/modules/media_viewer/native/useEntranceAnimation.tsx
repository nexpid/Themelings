// app/modules/media_viewer/native/useEntranceAnimation.tsx
export default (function(global, require, metroImportDefault, metroImportAll, moduleObject, exports, dependencyMap) {
    var6 = require;
    var3 = exports;
    var7 = dependencyMap;
    var _closure1_slot0 = var6;
    var _closure1_slot1 = var7;
    var1 = function setUseEntranceAnimationState(arg1) {
        var1 = arg1;
        var _closure2_slot0 = var1;
        var4 = _closure1_slot0;
        var3 = _closure1_slot1;
        var1 = 4;
        var3 = var3[var1];
        var1 = undefined;
        var4 = var4.bind(var1)(var3);
        var3 = var4.batchUpdates;
        var2 = function() {
            var3 = _closure1_slot5;
            var2 = var3.setState;
            var1 = _closure2_slot0;
            var1 = var2.bind(var3)(var1);
            return var1;
        };
        var2 = var3.bind(var4)(var2);
        return var1;
    };
    var _closure1_slot8 = var1;
    var1 = global;
    var8 = var1.Object;
    var5 = var8.defineProperty;
    var4 = {};
    var1 = true;
    var4['value'] = var1;
    var1 = '__esModule';
    var1 = var5.bind(var8)(var3, var1, var4);
    var1 = 0;
    var5 = var7[var1];
    var4 = metroImportDefault;
    var1 = undefined;
    var4 = var4.bind(var1)(var5);
    var _closure1_slot2 = var4;
    var4 = 1;
    var5 = var7[var4];
    var4 = metroImportAll;
    var4 = var4.bind(var1)(var5);
    var _closure1_slot3 = var4;
    var4 = {};
    var5 = 300;
    var4['duration'] = var5;
    var5 = 2;
    var5 = var7[var5];
    var5 = var6.bind(var1)(var5);
    var5 = var5.STANDARD_EASING;
    var4['easing'] = var5;
    var _closure1_slot4 = var4;
    var4 = 3;
    var4 = var7[var4];
    var8 = var6.bind(var1)(var4);
    var5 = var8.create;
    var4 = function() {
        var1 = {};
        var2 = false;
        var1['isComplete'] = var2;
        return var1;
    };
    var4 = var5.bind(var8)(var4);
    var _closure1_slot5 = var4;
    var5 = {};
    var8 = 'function useEntranceAnimationTsx1(){const{runOnJS,setUseEntranceAnimationState}=this.__closure;runOnJS(setUseEntranceAnimationState)({isComplete:true});}';
    var5['code'] = var8;
    var _closure1_slot6 = var5;
    var5 = {};
    var8 = 'function useEntranceAnimationTsx2(){const{runOnJS,setUseEntranceAnimationState,incrementLoads}=this.__closure;runOnJS(setUseEntranceAnimationState)({isComplete:true});runOnJS(incrementLoads)();}';
    var5['code'] = var8;
    var _closure1_slot7 = var5;
    var5 = 7;
    var5 = var7[var5];
    var7 = var6.bind(var1)(var5);
    var6 = var7.fileFinishedImporting;
    var5 = 'modules/media_viewer/native/useEntranceAnimation.tsx';
    var5 = var6.bind(var7)(var5);
    var3['useEntranceAnimationState'] = var4;
    var2 = function useEntranceAnimation(arg1) {
        var7 = arg1;
        var _closure2_slot0 = var7;
        var6 = _closure1_slot3;
        var4 = var6.useState;
        var2 = 0;
        var8 = var4.bind(var6)(var2);
        var5 = _closure1_slot2;
        var4 = undefined;
        var3 = 2;
        var3 = var5.bind(var4)(var8, var3);
        var4 = var3[var2];
        var2 = 1;
        var2 = var3[var2];
        var _closure2_slot1 = var2;
        var5 = var6.useCallback;
        var3 = function() {
            var3 = _closure2_slot1;
            var1 = undefined;
            var2 = function(arg1) {
                var2 = arg1;
                var1 = 1;
                var1 = var2 + var1;
                return var1;
            };
            var2 = var3.bind(var1)(var2);
            return var1;
        };
        var2 = new Array(0);
        var8 = var5.bind(var6)(var3, var2);
        var _closure2_slot2 = var8;
        var5 = var6.useCallback;
        var3 = new Array(1);
        var3[0] = var7;
        var2 = function() {
            var11 = _closure1_slot0;
            var12 = _closure1_slot1;
            var1 = 4;
            var3 = var12[var1];
            var1 = undefined;
            var6 = var11.bind(var1)(var3);
            var4 = var6.batchUpdates;
            var3 = function() {
                var3 = _closure1_slot5;
                var2 = var3.setState;
                var1 = {};
                var4 = false;
                var1['isComplete'] = var4;
                var1 = var2.bind(var3)(var1);
                return var1;
            };
            var3 = var4.bind(var6)(var3);
            var4 = _closure2_slot0;
            var3 = var4.set;
            var6 = 5;
            var6 = var12[var6];
            var9 = var11.bind(var1)(var6);
            var8 = var9.withTiming;
            var15 = _closure1_slot4;
            var6 = function t() {
                var4 = _closure1_slot0;
                var3 = _closure1_slot1;
                var1 = 6;
                var3 = var3[var1];
                var1 = undefined;
                var4 = var4.bind(var1)(var3);
                var3 = var4.runOnJS;
                var2 = _closure1_slot8;
                var3 = var3.bind(var4)(var2);
                var2 = {};
                var4 = true;
                var2['isComplete'] = var4;
                var2 = var3.bind(var1)(var2);
                return var1;
            };
            var5 = {};
            var10 = 6;
            var10 = var12[var10];
            var10 = var11.bind(var1)(var10);
            var10 = var10.runOnJS;
            var5['runOnJS'] = var10;
            var10 = _closure1_slot8;
            var5['setUseEntranceAnimationState'] = var10;
            var6['__closure'] = var5;
            var5 = 7427534745615.0;
            var6['__workletHash'] = var5;
            var2 = _closure1_slot6;
            var6['__initData'] = var2;
            var16 = 1;
            var14 = 'respect-motion-settings';
            var17 = var9;
            var13 = var6;
            var2 = var17[var8](var16, var15, var14, var13, var12);
            var2 = var3.bind(var4)(var2);
            return var1;
        };
        var3 = var5.bind(var6)(var2, var3);
        var5 = var6.useCallback;
        var2 = new Array(2);
        var2[0] = var8;
        var2[1] = var7;
        var1 = function() {
            _fun0001: for(var _fun0001_ip = 0; ; ) switch(_fun0001_ip) {
case 0:
                var2 = _closure2_slot0;
                var1 = var2.get;
                var1 = var1.bind(var2)();
                var8 = 1;
                if(!(var8 === var1)) { _fun0001_ip = 2; continue _fun0001 }
case 3:
                var2 = _closure2_slot2;
                var1 = undefined;
                var1 = var2.bind(var1)();
                _fun0001_ip = 4; continue _fun0001;
case 2:
                var13 = _closure1_slot0;
                var14 = _closure1_slot1;
                var2 = 4;
                var2 = var14[var2];
                var12 = undefined;
                var5 = var13.bind(var12)(var2);
                var3 = var5.batchUpdates;
                var2 = function() {
                    var3 = _closure1_slot5;
                    var2 = var3.setState;
                    var1 = {};
                    var4 = false;
                    var1['isComplete'] = var4;
                    var1 = var2.bind(var3)(var1);
                    return var1;
                };
                var2 = var3.bind(var5)(var2);
                var3 = _closure2_slot0;
                var2 = var3.set;
                var5 = 5;
                var5 = var14[var5];
                var7 = var13.bind(var12)(var5);
                var6 = var7.withTiming;
                var17 = _closure1_slot4;
                var4 = function t() {
                    var3 = _closure1_slot0;
                    var4 = _closure1_slot1;
                    var2 = 6;
                    var6 = var4[var2];
                    var1 = undefined;
                    var7 = var3.bind(var1)(var6);
                    var6 = var7.runOnJS;
                    var5 = _closure1_slot8;
                    var6 = var6.bind(var7)(var5);
                    var5 = {};
                    var7 = true;
                    var5['isComplete'] = var7;
                    var5 = var6.bind(var1)(var5);
                    var2 = var4[var2];
                    var4 = var3.bind(var1)(var2);
                    var3 = var4.runOnJS;
                    var2 = _closure2_slot2;
                    var2 = var3.bind(var4)(var2);
                    var2 = var2.bind(var1)();
                    return var1;
                };
                var9 = {};
                var11 = 6;
                var11 = var14[var11];
                var11 = var13.bind(var12)(var11);
                var11 = var11.runOnJS;
                var9['runOnJS'] = var11;
                var11 = _closure1_slot8;
                var9['setUseEntranceAnimationState'] = var11;
                var10 = _closure2_slot2;
                var9['incrementLoads'] = var10;
                var4['__closure'] = var9;
                var9 = 9904090637386.0;
                var4['__workletHash'] = var9;
                var1 = _closure1_slot7;
                var4['__initData'] = var1;
                var16 = 'respect-motion-settings';
                var19 = var7;
                var18 = var8;
                var15 = var4;
                var1 = var19[var6](var18, var17, var16, var15, var14);
                var1 = var2.bind(var3)(var1);
case 4:
                var1 = undefined;
                return var1;
            }
        };
        var2 = var5.bind(var6)(var1, var2);
        var1 = {};
        var1['loads'] = var4;
        var1['handleLoadStart'] = var3;
        var1['handleError'] = var2;
        var1['handleLoad'] = var2;
        return var1;
    };
    var3['useEntranceAnimation'] = var2;
    return var1;
})();