// app/modules/media_viewer/native/useEntranceAnimation.tsx
export default (function(argFoo, argBar, argBaz, argCorge, _, argFred, argPlugh) {
    oscar = argBar;
    zulu = argFred;
    golf = argPlugh;
    var _closure1_slot0 = oscar;
    var _closure1_slot1 = golf;
    entity = function(argFoo) { // Original name: setUseEntranceAnimationState
        entity = argFoo;
        var _closure2_slot0 = entity;
        tango = _closure1_slot0;
        zulu = _closure1_slot1;
        entity = 4;
        zulu = zulu[entity];
        entity = undefined;
        tango = tango.bind(entity)(zulu);
        zulu = tango.batchUpdates;
        mike = function() {
            zulu = _closure1_slot5;
            mike = zulu.setState;
            entity = _closure2_slot0;
            entity = mike.bind(zulu)(entity);
            return entity;
        };
        mike = zulu.bind(tango)(mike);
        return entity;
    };
    var _closure1_slot8 = entity;
    entity = global;
    options = entity.Object;
    report = options.defineProperty;
    tango = {};
    entity = true;
    tango['value'] = entity;
    entity = '__esModule';
    entity = report.bind(options)(zulu, entity, tango);
    entity = 0;
    report = golf[entity];
    tango = argBaz;
    entity = undefined;
    tango = tango.bind(entity)(report);
    var _closure1_slot2 = tango;
    tango = 1;
    report = golf[tango];
    tango = argCorge;
    tango = tango.bind(entity)(report);
    var _closure1_slot3 = tango;
    tango = {};
    report = 300;
    tango['duration'] = report;
    report = 2;
    report = golf[report];
    report = oscar.bind(entity)(report);
    report = report.STANDARD_EASING;
    tango['easing'] = report;
    var _closure1_slot4 = tango;
    tango = 3;
    tango = golf[tango];
    options = oscar.bind(entity)(tango);
    report = options.create;
    tango = function() {
        entity = {};
        mike = false;
        entity['isComplete'] = mike;
        return entity;
    };
    tango = report.bind(options)(tango);
    var _closure1_slot5 = tango;
    report = {};
    options = 'function useEntranceAnimationTsx1(){const{runOnJS,setUseEntranceAnimationState}=this.__closure;runOnJS(setUseEntranceAnimationState)({isComplete:true});}';
    report['code'] = options;
    var _closure1_slot6 = report;
    report = {};
    options = 'function useEntranceAnimationTsx2(){const{runOnJS,setUseEntranceAnimationState,incrementLoads}=this.__closure;runOnJS(setUseEntranceAnimationState)({isComplete:true});runOnJS(incrementLoads)();}';
    report['code'] = options;
    var _closure1_slot7 = report;
    report = 7;
    report = golf[report];
    golf = oscar.bind(entity)(report);
    oscar = golf.fileFinishedImporting;
    report = 'modules/media_viewer/native/useEntranceAnimation.tsx';
    report = oscar.bind(golf)(report);
    zulu['useEntranceAnimationState'] = tango;
    mike = function(argFoo) { // Original name: useEntranceAnimation
        golf = argFoo;
        var _closure2_slot0 = golf;
        oscar = _closure1_slot3;
        tango = oscar.useState;
        mike = 0;
        options = tango.bind(oscar)(mike);
        report = _closure1_slot2;
        tango = undefined;
        zulu = 2;
        zulu = report.bind(tango)(options, zulu);
        tango = zulu[mike];
        mike = 1;
        mike = zulu[mike];
        var _closure2_slot1 = mike;
        report = oscar.useCallback;
        zulu = function() {
            zulu = _closure2_slot1;
            entity = undefined;
            mike = function(argFoo) {
                mike = argFoo;
                entity = 1;
                entity = mike + entity;
                return entity;
            };
            mike = zulu.bind(entity)(mike);
            return entity;
        };
        mike = new Array(0);
        options = report.bind(oscar)(zulu, mike);
        var _closure2_slot2 = options;
        report = oscar.useCallback;
        zulu = new Array(1);
        zulu[0] = golf;
        mike = function() {
            yankee = _closure1_slot0;
            romeo = _closure1_slot1;
            entity = 4;
            zulu = romeo[entity];
            entity = undefined;
            oscar = yankee.bind(entity)(zulu);
            tango = oscar.batchUpdates;
            zulu = function() {
                zulu = _closure1_slot5;
                mike = zulu.setState;
                entity = {};
                tango = false;
                entity['isComplete'] = tango;
                entity = mike.bind(zulu)(entity);
                return entity;
            };
            zulu = tango.bind(oscar)(zulu);
            tango = _closure2_slot0;
            zulu = tango.set;
            oscar = 5;
            oscar = romeo[oscar];
            verify = yankee.bind(entity)(oscar);
            options = verify.withTiming;
            kilo = _closure1_slot4;
            oscar = function() { // Original name: t
                tango = _closure1_slot0;
                zulu = _closure1_slot1;
                entity = 6;
                zulu = zulu[entity];
                entity = undefined;
                tango = tango.bind(entity)(zulu);
                zulu = tango.runOnJS;
                mike = _closure1_slot8;
                zulu = zulu.bind(tango)(mike);
                mike = {};
                tango = true;
                mike['isComplete'] = tango;
                mike = zulu.bind(entity)(mike);
                return entity;
            };
            report = {};
            offset = 6;
            offset = romeo[offset];
            offset = yankee.bind(entity)(offset);
            offset = offset.runOnJS;
            report['runOnJS'] = offset;
            offset = _closure1_slot8;
            report['setUseEntranceAnimationState'] = offset;
            oscar['__closure'] = report;
            report = 7427534745615.0;
            oscar['__workletHash'] = report;
            mike = _closure1_slot6;
            oscar['__initData'] = mike;
            sizing = 1;
            backup = 'respect-motion-settings';
            output = verify;
            foxtrot = oscar;
            mike = output[options](sizing, kilo, backup, foxtrot, romeo);
            mike = zulu.bind(tango)(mike);
            return entity;
        };
        zulu = report.bind(oscar)(mike, zulu);
        report = oscar.useCallback;
        mike = new Array(2);
        mike[0] = options;
        mike[1] = golf;
        entity = function() {
            _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
                mike = _closure2_slot0;
                entity = mike.get;
                entity = entity.bind(mike)();
                options = 1;
                if(!(options === entity)) { _fun00002_ip = 40; continue _fun00001 }
 25:
                mike = _closure2_slot2;
                entity = undefined;
                entity = mike.bind(entity)();
                _fun00002_ip = 219; continue _fun00001;
 40:
                foxtrot = _closure1_slot0;
                backup = _closure1_slot1;
                mike = 4;
                mike = backup[mike];
                romeo = undefined;
                report = foxtrot.bind(romeo)(mike);
                zulu = report.batchUpdates;
                mike = function() {
                    zulu = _closure1_slot5;
                    mike = zulu.setState;
                    entity = {};
                    tango = false;
                    entity['isComplete'] = tango;
                    entity = mike.bind(zulu)(entity);
                    return entity;
                };
                mike = zulu.bind(report)(mike);
                zulu = _closure2_slot0;
                mike = zulu.set;
                report = 5;
                report = backup[report];
                golf = foxtrot.bind(romeo)(report);
                oscar = golf.withTiming;
                output = _closure1_slot4;
                tango = function() { // Original name: t
                    zulu = _closure1_slot0;
                    tango = _closure1_slot1;
                    mike = 6;
                    oscar = tango[mike];
                    entity = undefined;
                    golf = zulu.bind(entity)(oscar);
                    oscar = golf.runOnJS;
                    report = _closure1_slot8;
                    oscar = oscar.bind(golf)(report);
                    report = {};
                    golf = true;
                    report['isComplete'] = golf;
                    report = oscar.bind(entity)(report);
                    mike = tango[mike];
                    tango = zulu.bind(entity)(mike);
                    zulu = tango.runOnJS;
                    mike = _closure2_slot2;
                    mike = zulu.bind(tango)(mike);
                    mike = mike.bind(entity)();
                    return entity;
                };
                verify = {};
                yankee = 6;
                yankee = backup[yankee];
                yankee = foxtrot.bind(romeo)(yankee);
                yankee = yankee.runOnJS;
                verify['runOnJS'] = yankee;
                yankee = _closure1_slot8;
                verify['setUseEntranceAnimationState'] = yankee;
                offset = _closure2_slot2;
                verify['incrementLoads'] = offset;
                tango['__closure'] = verify;
                verify = 9904090637386.0;
                tango['__workletHash'] = verify;
                entity = _closure1_slot7;
                tango['__initData'] = entity;
                sizing = 'respect-motion-settings';
                echo = golf;
                result = options;
                kilo = tango;
                entity = echo[oscar](result, output, sizing, kilo, backup);
                entity = mike.bind(zulu)(entity);
 219:
                entity = undefined;
                return entity;
            }
        };
        mike = report.bind(oscar)(entity, mike);
        entity = {};
        entity['loads'] = tango;
        entity['handleLoadStart'] = zulu;
        entity['handleError'] = mike;
        entity['handleLoad'] = mike;
        return entity;
    };
    zulu['useEntranceAnimation'] = mike;
    return entity;
})();