// app/modules/media_viewer/native/useEntranceAnimation.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    oscard = argBar;
    zuuluu = argFre;
    golfie = argPlu;
    var _closure1_slot0 = oscard;
    var _closure1_slot1 = golfie;
    entity = function(argFoo) { // Original name: setUseEntranceAnimationState
        entity = argFoo;
        var _closure2_slot0 = entity;
        tangon = _closure1_slot0;
        zuuluu = _closure1_slot1;
        entity = 4;
        zuuluu = zuuluu[entity];
        entity = undefined;
        tangon = tangon.bind(entity)(zuuluu);
        zuuluu = tangon.batchUpdates;
        michal = function() {
            zuuluu = _closure1_slot5;
            michal = zuuluu.setState;
            entity = _closure2_slot0;
            entity = michal.bind(zuuluu)(entity);
            return entity;
        };
        michal = zuuluu.bind(tangon)(michal);
        return entity;
    };
    var _closure1_slot8 = entity;
    entity = global;
    option = entity.Object;
    report = option.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = report.bind(option)(zuuluu, entity, tangon);
    entity = 0;
    report = golfie[entity];
    tangon = argBaz;
    entity = undefined;
    tangon = tangon.bind(entity)(report);
    var _closure1_slot2 = tangon;
    tangon = 1;
    report = golfie[tangon];
    tangon = argCor;
    tangon = tangon.bind(entity)(report);
    var _closure1_slot3 = tangon;
    tangon = {};
    report = 300;
    tangon['duration'] = report;
    report = 2;
    report = golfie[report];
    report = oscard.bind(entity)(report);
    report = report.STANDARD_EASING;
    tangon['easing'] = report;
    var _closure1_slot4 = tangon;
    tangon = 3;
    tangon = golfie[tangon];
    option = oscard.bind(entity)(tangon);
    report = option.create;
    tangon = function() {
        entity = {};
        michal = false;
        entity['isComplete'] = michal;
        return entity;
    };
    tangon = report.bind(option)(tangon);
    var _closure1_slot5 = tangon;
    report = {};
    option = 'function useEntranceAnimationTsx1(){const{runOnJS,setUseEntranceAnimationState}=this.__closure;runOnJS(setUseEntranceAnimationState)({isComplete:true});}';
    report['code'] = option;
    var _closure1_slot6 = report;
    report = {};
    option = 'function useEntranceAnimationTsx2(){const{runOnJS,setUseEntranceAnimationState,incrementLoads}=this.__closure;runOnJS(setUseEntranceAnimationState)({isComplete:true});runOnJS(incrementLoads)();}';
    report['code'] = option;
    var _closure1_slot7 = report;
    report = 7;
    report = golfie[report];
    golfie = oscard.bind(entity)(report);
    oscard = golfie.fileFinishedImporting;
    report = 'modules/media_viewer/native/useEntranceAnimation.tsx';
    report = oscard.bind(golfie)(report);
    zuuluu['useEntranceAnimationState'] = tangon;
    michal = function(argFoo) { // Original name: useEntranceAnimation
        golfie = argFoo;
        var _closure2_slot0 = golfie;
        oscard = _closure1_slot3;
        tangon = oscard.useState;
        michal = 0;
        option = tangon.bind(oscard)(michal);
        report = _closure1_slot2;
        tangon = undefined;
        zuuluu = 2;
        zuuluu = report.bind(tangon)(option, zuuluu);
        tangon = zuuluu[michal];
        michal = 1;
        michal = zuuluu[michal];
        var _closure2_slot1 = michal;
        report = oscard.useCallback;
        zuuluu = function() {
            zuuluu = _closure2_slot1;
            entity = undefined;
            michal = function(argFoo) {
                michal = argFoo;
                entity = 1;
                entity = michal + entity;
                return entity;
            };
            michal = zuuluu.bind(entity)(michal);
            return entity;
        };
        michal = new Array(0);
        option = report.bind(oscard)(zuuluu, michal);
        var _closure2_slot2 = option;
        report = oscard.useCallback;
        zuuluu = new Array(1);
        zuuluu[0] = golfie;
        michal = function() {
            yankee = _closure1_slot0;
            romeon = _closure1_slot1;
            entity = 4;
            zuuluu = romeon[entity];
            entity = undefined;
            oscard = yankee.bind(entity)(zuuluu);
            tangon = oscard.batchUpdates;
            zuuluu = function() {
                zuuluu = _closure1_slot5;
                michal = zuuluu.setState;
                entity = {};
                tangon = false;
                entity['isComplete'] = tangon;
                entity = michal.bind(zuuluu)(entity);
                return entity;
            };
            zuuluu = tangon.bind(oscard)(zuuluu);
            tangon = _closure2_slot0;
            zuuluu = tangon.set;
            oscard = 5;
            oscard = romeon[oscard];
            verify = yankee.bind(entity)(oscard);
            option = verify.withTiming;
            kiloes = _closure1_slot4;
            oscard = function() { // Original name: t
                tangon = _closure1_slot0;
                zuuluu = _closure1_slot1;
                entity = 6;
                zuuluu = zuuluu[entity];
                entity = undefined;
                tangon = tangon.bind(entity)(zuuluu);
                zuuluu = tangon.runOnJS;
                michal = _closure1_slot8;
                zuuluu = zuuluu.bind(tangon)(michal);
                michal = {};
                tangon = true;
                michal['isComplete'] = tangon;
                michal = zuuluu.bind(entity)(michal);
                return entity;
            };
            report = {};
            offset = 6;
            offset = romeon[offset];
            offset = yankee.bind(entity)(offset);
            offset = offset.runOnJS;
            report['runOnJS'] = offset;
            offset = _closure1_slot8;
            report['setUseEntranceAnimationState'] = offset;
            oscard['__closure'] = report;
            report = 7427534745615.0;
            oscard['__workletHash'] = report;
            michal = _closure1_slot6;
            oscard['__initData'] = michal;
            sizing = 1;
            backup = 'respect-motion-settings';
            output = verify;
            foxtra = oscard;
            michal = output[option](sizing, kiloes, backup, foxtra, romeon);
            michal = zuuluu.bind(tangon)(michal);
            return entity;
        };
        zuuluu = report.bind(oscard)(michal, zuuluu);
        report = oscard.useCallback;
        michal = new Array(2);
        michal[0] = option;
        michal[1] = golfie;
        entity = function() {
            _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
                michal = _closure2_slot0;
                entity = michal.get;
                entity = entity.bind(michal)();
                option = 1;
                if(!(option === entity)) { _fun00002_ip = 40; continue _fun00001 }
 25:
                michal = _closure2_slot2;
                entity = undefined;
                entity = michal.bind(entity)();
                _fun00002_ip = 219; continue _fun00001;
 40:
                foxtra = _closure1_slot0;
                backup = _closure1_slot1;
                michal = 4;
                michal = backup[michal];
                romeon = undefined;
                report = foxtra.bind(romeon)(michal);
                zuuluu = report.batchUpdates;
                michal = function() {
                    zuuluu = _closure1_slot5;
                    michal = zuuluu.setState;
                    entity = {};
                    tangon = false;
                    entity['isComplete'] = tangon;
                    entity = michal.bind(zuuluu)(entity);
                    return entity;
                };
                michal = zuuluu.bind(report)(michal);
                zuuluu = _closure2_slot0;
                michal = zuuluu.set;
                report = 5;
                report = backup[report];
                golfie = foxtra.bind(romeon)(report);
                oscard = golfie.withTiming;
                output = _closure1_slot4;
                tangon = function() { // Original name: t
                    zuuluu = _closure1_slot0;
                    tangon = _closure1_slot1;
                    michal = 6;
                    oscard = tangon[michal];
                    entity = undefined;
                    golfie = zuuluu.bind(entity)(oscard);
                    oscard = golfie.runOnJS;
                    report = _closure1_slot8;
                    oscard = oscard.bind(golfie)(report);
                    report = {};
                    golfie = true;
                    report['isComplete'] = golfie;
                    report = oscard.bind(entity)(report);
                    michal = tangon[michal];
                    tangon = zuuluu.bind(entity)(michal);
                    zuuluu = tangon.runOnJS;
                    michal = _closure2_slot2;
                    michal = zuuluu.bind(tangon)(michal);
                    michal = michal.bind(entity)();
                    return entity;
                };
                verify = {};
                yankee = 6;
                yankee = backup[yankee];
                yankee = foxtra.bind(romeon)(yankee);
                yankee = yankee.runOnJS;
                verify['runOnJS'] = yankee;
                yankee = _closure1_slot8;
                verify['setUseEntranceAnimationState'] = yankee;
                offset = _closure2_slot2;
                verify['incrementLoads'] = offset;
                tangon['__closure'] = verify;
                verify = 9904090637386.0;
                tangon['__workletHash'] = verify;
                entity = _closure1_slot7;
                tangon['__initData'] = entity;
                sizing = 'respect-motion-settings';
                echoed = golfie;
                result = option;
                kiloes = tangon;
                entity = echoed[oscard](result, output, sizing, kiloes, backup);
                entity = michal.bind(zuuluu)(entity);
 219:
                entity = undefined;
                return entity;
            }
        };
        michal = report.bind(oscard)(entity, michal);
        entity = {};
        entity['loads'] = tangon;
        entity['handleLoadStart'] = zuuluu;
        entity['handleError'] = michal;
        entity['handleLoad'] = michal;
        return entity;
    };
    zuuluu['useEntranceAnimation'] = michal;
    return entity;
})();