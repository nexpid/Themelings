// app/modules/media_viewer/native/components/MediaModalHeader.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    report = argBar;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    entity = argBaz;
    var _closure1_slot1 = entity;
    var _closure1_slot2 = oscard;
    entity = global;
    option = entity.Object;
    golfie = option.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(option)(zuuluu, entity, tangon);
    entity = 0;
    golfie = oscard[entity];
    tangon = argCor;
    entity = undefined;
    tangon = tangon.bind(entity)(golfie);
    offset = 1;
    tangon = oscard[offset];
    tangon = report.bind(entity)(tangon);
    option = tangon.StyleSheet;
    var _closure1_slot3 = option;
    tangon = tangon.View;
    var _closure1_slot4 = tangon;
    tangon = 2;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    golfie = tangon.jsx;
    var _closure1_slot5 = golfie;
    tangon = tangon.jsxs;
    var _closure1_slot6 = tangon;
    golfie = option.create;
    tangon = {};
    verify = {'flex': 1, 'alignItems': 'center', 'flexDirection': 'row', 'height': null, 'paddingHorizontal': 6, 'justifyContent': 'space-between'};
    yankee = 3;
    yankee = oscard[yankee];
    yankee = report.bind(entity)(yankee);
    yankee = yankee.NAV_BAR_HEIGHT;
    verify['height'] = yankee;
    tangon['navbarInner'] = verify;
    verify = {'flexShrink': 1, 'flexDirection': 'row', 'marginRight': 8};
    tangon['navbarLeft'] = verify;
    verify = {'flexShrink': 0, 'justifyContent': 'flex-end', 'flexDirection': 'row', 'gap': 8};
    tangon['navbarRight'] = verify;
    verify = {'flexShrink': 1, 'alignItems': 'center', 'height': 40, 'marginLeft': 8};
    tangon['navbarName'] = verify;
    verify = {'borderRadius': 20, 'justifyContent': 'center', 'alignItems': 'center', 'backgroundColor': 'rgba(0, 0, 0, 0.7)', 'flex': 1, 'flexDirection': 'row', 'paddingHorizontal': 18};
    tangon['navbarNameInner'] = verify;
    verify = {};
    verify['flexShrink'] = offset;
    tangon['navbarNameShrinkWrapper'] = verify;
    verify = {'width': 18, 'height': 18, 'marginRight': 6};
    tangon['contextIcon'] = verify;
    tangon = golfie.bind(option)(tangon);
    var _closure1_slot7 = tangon;
    tangon = 21;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/media_viewer/native/components/MediaModalHeader.tsx';
    tangon = report.bind(oscard)(tangon);
    michal = function(argFoo) { // Original name: MediaModalHeader
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            entity = argFoo;
            backup = entity.onClose;
            config = entity.source;
            option = entity.disableDownload;
            source = entity.disableRemix;
            result = entity.disableMediaOverlayButton;
            golfie = entity.shareable;
            limora = entity.contextName;
            equals = entity.contextIcon;
            report = entity.animationDriver;
            zuuluu = entity.channelId;
            sequen = entity.setClickedRemix;
            sizing = _closure1_slot0;
            echoed = _closure1_slot2;
            entity = 4;
            entity = echoed[entity];
            tangon = undefined;
            michal = sizing.bind(tangon)(entity);
            entity = michal.useHeaderLayoutAnimation;
            oscard = entity.bind(michal)(report);
            entity = 5;
            entity = echoed[entity];
            report = sizing.bind(tangon)(entity);
            michal = report.useMediaShareActions;
            entity = {};
            entity['source'] = config;
            entity['disableDownload'] = option;
            entity['shareable'] = golfie;
            update = michal.bind(report)(entity);
            michal = _closure1_slot1;
            entity = 6;
            entity = echoed[entity];
            entity = michal.bind(tangon)(entity);
            yankee = entity.bind(tangon)(zuuluu);
            zuuluu = _closure1_slot5;
            entity = 7;
            entity = echoed[entity];
            entity = michal.bind(tangon)(entity);
            michal = entity.View;
            entity = {};
            golfie = {};
            report = _closure1_slot3;
            quebec = report.absoluteFillObject;
            variable36 = golfie;
            report = copyDataProperties(variable36, quebec);
            report = 'bottom';
            golfie[report] = tangon;
            report = new Array(2);
            report[0] = golfie;
            report[1] = oscard;
            entity['style'] = report;
            report = 8;
            report = echoed[report];
            report = sizing.bind(tangon)(report);
            oscard = report.SafeAreaPaddingView;
            report = {'top': true, 'left': true, 'right': true, 'pointerEvents': 'box-none'};
            offset = 'box-none';
            verify = _closure1_slot6;
            option = _closure1_slot4;
            golfie = {};
            romeon = _closure1_slot7;
            foxtra = romeon.navbarInner;
            golfie['style'] = foxtra;
            golfie['pointerEvents'] = offset;
            offset = {};
            romeon = romeon.navbarLeft;
            offset['style'] = romeon;
            romeon = 9;
            romeon = echoed[romeon];
            romeon = sizing.bind(tangon)(romeon);
            foxtra = romeon.MediaOverlayIconButton;
            romeon = {};
            kiloes = 10;
            ctrled = echoed[kiloes];
            ctrled = sizing.bind(tangon)(ctrled);
            vacuum = ctrled.intl;
            ctrled = vacuum.string;
            kiloes = echoed[kiloes];
            kiloes = sizing.bind(tangon)(kiloes);
            kiloes = kiloes.t;
            kiloes = kiloes.cpT0Cg;
            kiloes = ctrled.bind(vacuum)(kiloes);
            romeon['accessibilityLabel'] = kiloes;
            kiloes = 11;
            kiloes = echoed[kiloes];
            kiloes = sizing.bind(tangon)(kiloes);
            sizing = kiloes.XSmallIcon;
            kiloes = {'size': 'md', 'color': 'interactive-active'};
            kiloes = zuuluu.bind(tangon)(sizing, kiloes);
            romeon['icon'] = kiloes;
            romeon['onPress'] = backup;
            foxtra = zuuluu.bind(tangon)(foxtra, romeon);
            romeon = new Array(2);
            romeon[0] = foxtra;
            sizing = null;
            foxtra = sizing != limora;
            if(!foxtra) { _fun00002_ip = 712; continue _fun00001 }
 448:
            echoed = _closure1_slot5;
            kiloes = _closure1_slot4;
            backup = {};
            record = _closure1_slot7;
            ctrled = record.navbarName;
            backup['style'] = ctrled;
            vacuum = _closure1_slot6;
            ctrled = {};
            record = record.navbarNameInner;
            ctrled['style'] = record;
            cntext = sizing != equals;
            if(!cntext) { _fun00002_ip = 597; continue _fun00001 }
 495:
            target = _closure1_slot5;
            sierra = _closure1_slot1;
            whisks = _closure1_slot2;
            status = 12;
            record = whisks[status];
            papara = sierra.bind(tangon)(record);
            record = {};
            record['source'] = equals;
            equals = 13;
            equals = whisks[equals];
            equals = sierra.bind(tangon)(equals);
            equals = equals.unsafe_rawColors;
            equals = equals.WHITE_600;
            record['color'] = equals;
            status = whisks[status];
            status = sierra.bind(tangon)(status);
            status = status.Sizes;
            status = status.CUSTOM;
            record['size'] = status;
            status = _closure1_slot7;
            status = status.contextIcon;
            record['style'] = status;
            cntext = target.bind(tangon)(papara, record);
 597:
            record = new Array(2);
            record[0] = cntext;
            target = _closure1_slot5;
            papara = _closure1_slot4;
            cntext = {};
            status = _closure1_slot7;
            status = status.navbarNameShrinkWrapper;
            cntext['style'] = status;
            sierra = _closure1_slot0;
            whisks = _closure1_slot2;
            status = 14;
            status = whisks[status];
            status = sierra.bind(tangon)(status);
            sierra = status.Text;
            status = {'accessibilityRole': 'header', 'variant': 'heading-md/medium', 'lineClamp': 1, 'ellipsizeMode': 'tail', 'color': 'always-white'};
            status['children'] = limora;
            status = target.bind(tangon)(sierra, status);
            cntext['children'] = status;
            cntext = target.bind(tangon)(papara, cntext);
            record[1] = cntext;
            ctrled['children'] = record;
            ctrled = vacuum.bind(tangon)(kiloes, ctrled);
            backup['children'] = ctrled;
            foxtra = echoed.bind(tangon)(kiloes, backup);
 712:
            romeon[1] = foxtra;
            offset['children'] = romeon;
            romeon = verify.bind(tangon)(option, offset);
            offset = new Array(2);
            offset[0] = romeon;
            yankee = !yankee;
            if(!yankee) { _fun00002_ip = 936; continue _fun00001 }
 743:
            backup = _closure1_slot6;
            foxtra = _closure1_slot4;
            romeon = {};
            kiloes = _closure1_slot7;
            kiloes = kiloes.navbarRight;
            romeon['style'] = kiloes;
            ctrled = _closure1_slot5;
            echoed = _closure1_slot1;
            vacuum = _closure1_slot2;
            kiloes = 15;
            kiloes = vacuum[kiloes];
            echoed = echoed.bind(tangon)(kiloes);
            kiloes = {};
            kiloes['source'] = config;
            echoed = ctrled.bind(tangon)(echoed, kiloes);
            kiloes = new Array(3);
            kiloes[0] = echoed;
            echoed = null;
            if(source) { _fun00002_ip = 857; continue _fun00001 }
 816:
            vacuum = _closure1_slot5;
            ctrled = _closure1_slot1;
            record = _closure1_slot2;
            source = 16;
            source = record[source];
            ctrled = ctrled.bind(tangon)(source);
            source = {};
            source['source'] = config;
            source['setClickedRemix'] = sequen;
            echoed = vacuum.bind(tangon)(ctrled, source);
 857:
            kiloes[1] = echoed;
            sizing = null;
            if(result) { _fun00002_ip = 922; continue _fun00001 }
 866:
            echoed = _closure1_slot5;
            result = _closure1_slot0;
            source = _closure1_slot2;
            output = 17;
            output = source[output];
            output = result.bind(tangon)(output);
            result = output.ContextMenu;
            output = {};
            output['items'] = update;
            update = function(argFoo) { // Original name: children
                _fun00003: for(var _fun00004_ip = 0; ; ) switch(_fun00004_ip) {
 0:
                    zuuluu = argFoo;
                    oscard = zuuluu.ref;
                    entity = null;
                    michal = Object.create(entity);
                    entity = 0;
                    michal['ref'] = entity;
                    kiloes = {};
                    backup = zuuluu;
                    foxtra = michal;
                    report = copyDataProperties(kiloes, backup, foxtra);
                    tangon = _closure1_slot5;
                    verify = _closure1_slot0;
                    offset = _closure1_slot2;
                    entity = 9;
                    entity = offset[entity];
                    zuuluu = undefined;
                    entity = verify.bind(zuuluu)(entity);
                    michal = entity.MediaOverlayIconButton;
                    entity = {};
                    golfie = 10;
                    yankee = offset[golfie];
                    yankee = verify.bind(zuuluu)(yankee);
                    romeon = yankee.intl;
                    yankee = romeon.string;
                    golfie = offset[golfie];
                    golfie = verify.bind(zuuluu)(golfie);
                    golfie = golfie.t;
                    golfie = golfie.PdRCRk;
                    golfie = yankee.bind(romeon)(golfie);
                    entity['accessibilityLabel'] = golfie;
                    golfie = 18;
                    golfie = offset[golfie];
                    verify = verify.bind(zuuluu)(golfie);
                    golfie = verify.isAndroid;
                    golfie = golfie.bind(verify)();
                    offset = _closure1_slot5;
                    verify = _closure1_slot0;
                    yankee = _closure1_slot2;
                    if(golfie) { _fun00004_ip = 195; continue _fun00003 }
 155:
                    golfie = 20;
                    golfie = yankee[golfie];
                    golfie = verify.bind(zuuluu)(golfie);
                    option = golfie.MoreHorizontalIcon;
                    golfie = {'size': 'md', 'color': 'interactive-active'};
                    golfie = offset.bind(zuuluu)(option, golfie);
                    _fun00004_ip = 233; continue _fun00003;
 195:
                    option = 19;
                    option = yankee[option];
                    option = verify.bind(zuuluu)(option);
                    verify = option.MoreVerticalIcon;
                    option = {'size': 'md', 'color': 'interactive-active'};
                    golfie = offset.bind(zuuluu)(verify, option);
 233:
                    entity['icon'] = golfie;
                    entity['ref'] = oscard;
                    kiloes = entity;
                    backup = report;
                    report = copyDataProperties(kiloes, backup);
                    entity = tangon.bind(zuuluu)(michal, entity);
                    return entity;
                }
            };
            output['children'] = update;
            sizing = echoed.bind(tangon)(result, output);
 922:
            kiloes[2] = sizing;
            romeon['children'] = kiloes;
            yankee = backup.bind(tangon)(foxtra, romeon);
 936:
            offset[1] = yankee;
            golfie['children'] = offset;
            golfie = verify.bind(tangon)(option, golfie);
            report['children'] = golfie;
            report = zuuluu.bind(tangon)(oscard, report);
            entity['children'] = report;
            entity = zuuluu.bind(tangon)(michal, entity);
            return entity;
        }
    };
    zuuluu['MediaModalHeader'] = michal;
    return entity;
})();