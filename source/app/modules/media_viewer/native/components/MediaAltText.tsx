// app/modules/media_viewer/native/components/MediaAltText.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    report = argBar;
    romeon = argBaz;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    var _closure1_slot1 = romeon;
    var _closure1_slot2 = oscard;
    entity = global;
    option = entity.Object;
    golfie = option.defineProperty;
    tangon = {};
    offset = true;
    tangon['value'] = offset;
    entity = '__esModule';
    entity = golfie.bind(option)(zuuluu, entity, tangon);
    entity = 0;
    tangon = oscard[entity];
    entity = undefined;
    tangon = romeon.bind(entity)(tangon);
    var _closure1_slot3 = tangon;
    tangon = 1;
    golfie = oscard[tangon];
    tangon = argCor;
    tangon = tangon.bind(entity)(golfie);
    var _closure1_slot4 = tangon;
    tangon = 2;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    option = tangon.StyleSheet;
    golfie = tangon.TouchableOpacity;
    var _closure1_slot5 = golfie;
    tangon = tangon.View;
    var _closure1_slot6 = tangon;
    tangon = 3;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    yankee = tangon.Fonts;
    tangon = 4;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.jsx;
    var _closure1_slot7 = tangon;
    golfie = option.create;
    tangon = {};
    verify = {};
    foxtra = 'rgba(0, 0, 0, 0.6)';
    verify['backgroundColor'] = foxtra;
    tangon['transparentContainer'] = verify;
    verify = {'alignSelf': 'flex-end', 'height': 40, 'width': 40, 'borderRadius': 20, 'alignItems': 'center', 'justifyContent': 'center'};
    tangon['circleContainer'] = verify;
    verify = {};
    foxtra = 5;
    foxtra = oscard[foxtra];
    backup = romeon.bind(entity)(foxtra);
    foxtra = yankee.DISPLAY_SEMIBOLD;
    yankee = 6;
    yankee = oscard[yankee];
    yankee = romeon.bind(entity)(yankee);
    yankee = yankee.unsafe_rawColors;
    output = yankee.WHITE_500;
    yankee = {};
    yankee['uppercase'] = offset;
    sizing = 12;
    echoed = undefined;
    result = foxtra;
    kiloes = yankee;
    output = echoed[backup](result, output, sizing, kiloes, backup);
    result = verify;
    offset = copyDataProperties(result, output);
    tangon['circleText'] = verify;
    verify = {'marginLeft': 0, 'marginRight': 12};
    tangon['closeIcon'] = verify;
    tangon = golfie.bind(option)(tangon);
    var _closure1_slot8 = tangon;
    tangon = 13;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/media_viewer/native/components/MediaAltText.tsx';
    tangon = report.bind(oscard)(tangon);
    michal = function(argFoo) { // Original name: MediaAltText
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            michal = argFoo;
            offset = michal.description;
            var _closure2_slot0 = offset;
            zuuluu = michal.onFullViewToggle;
            var _closure2_slot1 = zuuluu;
            tangon = _closure1_slot0;
            report = _closure1_slot2;
            michal = 7;
            michal = report[michal];
            report = undefined;
            michal = tangon.bind(report)(michal);
            tangon = michal.ViewImageDescriptions;
            michal = tangon.useSetting;
            tangon = michal.bind(tangon)();
            golfie = _closure1_slot4;
            oscard = golfie.useState;
            michal = true;
            verify = oscard.bind(golfie)(michal);
            oscard = _closure1_slot3;
            michal = 2;
            verify = oscard.bind(report)(verify, michal);
            michal = 0;
            michal = verify[michal];
            oscard = 1;
            oscard = verify[oscard];
            var _closure2_slot2 = oscard;
            verify = golfie.useCallback;
            oscard = new Array(1);
            oscard[0] = zuuluu;
            zuuluu = function() {
                _fun00003: for(var _fun00004_ip = 0; ; ) switch(_fun00004_ip) {
 0:
                    zuuluu = _closure2_slot1;
                    michal = null;
                    if(!(michal != zuuluu)) { _fun00004_ip = 26; continue _fun00003 }
 13:
                    tangon = _closure2_slot1;
                    zuuluu = undefined;
                    michal = false;
                    michal = tangon.bind(zuuluu)(michal);
 26:
                    zuuluu = _closure2_slot2;
                    entity = undefined;
                    michal = true;
                    michal = zuuluu.bind(entity)(michal);
                    return entity;
                }
            };
            verify = verify.bind(golfie)(zuuluu, oscard);
            var _closure2_slot3 = verify;
            oscard = golfie.useCallback;
            zuuluu = new Array(2);
            zuuluu[0] = offset;
            zuuluu[1] = verify;
            entity = function() {
                report = _closure1_slot1;
                michal = _closure1_slot2;
                entity = 8;
                tangon = michal[entity];
                entity = undefined;
                golfie = report.bind(entity)(tangon);
                oscard = golfie.openLazy;
                tangon = _closure1_slot0;
                zuuluu = 10;
                zuuluu = michal[zuuluu];
                tangon = tangon.bind(entity)(zuuluu);
                zuuluu = 9;
                zuuluu = michal[zuuluu];
                michal = michal.paths;
                report = tangon.bind(entity)(zuuluu, michal);
                tangon = {};
                zuuluu = _closure2_slot0;
                tangon['description'] = zuuluu;
                zuuluu = _closure2_slot3;
                tangon['onClose'] = zuuluu;
                zuuluu = 'none';
                tangon['backdropKind'] = zuuluu;
                zuuluu = 'MediaViewerAltTextSheet';
                zuuluu = oscard.bind(golfie)(report, zuuluu, tangon);
                zuuluu = _closure2_slot2;
                michal = false;
                michal = zuuluu.bind(entity)(michal);
                return entity;
            };
            oscard = oscard.bind(golfie)(entity, zuuluu);
            entity = null;
            if(!tangon) { _fun00002_ip = 385; continue _fun00001 }
 181:
            entity = null;
            if(!michal) { _fun00002_ip = 385; continue _fun00001 }
 189:
            tangon = _closure1_slot7;
            zuuluu = _closure1_slot5;
            michal = {};
            offset = _closure1_slot8;
            verify = offset.transparentContainer;
            golfie = new Array(2);
            golfie[0] = verify;
            verify = offset.circleContainer;
            golfie[1] = verify;
            michal['style'] = golfie;
            michal['onPress'] = oscard;
            oscard = {'top': 6, 'bottom': 6, 'left': 6, 'right': 6};
            michal['hitSlop'] = oscard;
            golfie = _closure1_slot6;
            oscard = {};
            verify = offset.circleContainer;
            oscard['style'] = verify;
            foxtra = _closure1_slot0;
            backup = _closure1_slot2;
            option = 11;
            option = backup[option];
            option = foxtra.bind(report)(option);
            verify = option.LegacyText;
            option = {};
            offset = offset.circleText;
            option['style'] = offset;
            offset = 12;
            yankee = backup[offset];
            yankee = foxtra.bind(report)(yankee);
            romeon = yankee.intl;
            yankee = romeon.string;
            offset = backup[offset];
            offset = foxtra.bind(report)(offset);
            offset = offset.t;
            offset = offset.Q5VqrK;
            offset = yankee.bind(romeon)(offset);
            option['children'] = offset;
            option = tangon.bind(report)(verify, option);
            oscard['children'] = option;
            oscard = tangon.bind(report)(golfie, oscard);
            michal['children'] = oscard;
            entity = tangon.bind(report)(zuuluu, michal);
 385:
            return entity;
        }
    };
    zuuluu['default'] = michal;
    return entity;
})();