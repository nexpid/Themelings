// app/modules/media_viewer/native/components/MediaAltText.tsx
export default (function(argFoo, argBar, argBaz, argCorge, _, argFred, argPlugh) {
    report = argBar;
    romeo = argBaz;
    zulu = argFred;
    oscar = argPlugh;
    var _closure1_slot0 = report;
    var _closure1_slot1 = romeo;
    var _closure1_slot2 = oscar;
    entity = global;
    options = entity.Object;
    golf = options.defineProperty;
    tango = {};
    offset = true;
    tango['value'] = offset;
    entity = '__esModule';
    entity = golf.bind(options)(zulu, entity, tango);
    entity = 0;
    tango = oscar[entity];
    entity = undefined;
    tango = romeo.bind(entity)(tango);
    var _closure1_slot3 = tango;
    tango = 1;
    golf = oscar[tango];
    tango = argCorge;
    tango = tango.bind(entity)(golf);
    var _closure1_slot4 = tango;
    tango = 2;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    options = tango.StyleSheet;
    golf = tango.TouchableOpacity;
    var _closure1_slot5 = golf;
    tango = tango.View;
    var _closure1_slot6 = tango;
    tango = 3;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    yankee = tango.Fonts;
    tango = 4;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.jsx;
    var _closure1_slot7 = tango;
    golf = options.create;
    tango = {};
    verify = {};
    foxtrot = 'rgba(0, 0, 0, 0.6)';
    verify['backgroundColor'] = foxtrot;
    tango['transparentContainer'] = verify;
    verify = {'alignSelf': 'flex-end', 'height': 40, 'width': 40, 'borderRadius': 20, 'alignItems': 'center', 'justifyContent': 'center'};
    tango['circleContainer'] = verify;
    verify = {};
    foxtrot = 5;
    foxtrot = oscar[foxtrot];
    backup = romeo.bind(entity)(foxtrot);
    foxtrot = yankee.DISPLAY_SEMIBOLD;
    yankee = 6;
    yankee = oscar[yankee];
    yankee = romeo.bind(entity)(yankee);
    yankee = yankee.unsafe_rawColors;
    output = yankee.WHITE_500;
    yankee = {};
    yankee['uppercase'] = offset;
    sizing = 12;
    echo = undefined;
    result = foxtrot;
    kilo = yankee;
    output = echo[backup](result, output, sizing, kilo, backup);
    result = verify;
    offset = copyDataProperties(result, output);
    tango['circleText'] = verify;
    verify = {'marginLeft': 0, 'marginRight': 12};
    tango['closeIcon'] = verify;
    tango = golf.bind(options)(tango);
    var _closure1_slot8 = tango;
    tango = 13;
    tango = oscar[tango];
    oscar = report.bind(entity)(tango);
    report = oscar.fileFinishedImporting;
    tango = 'modules/media_viewer/native/components/MediaAltText.tsx';
    tango = report.bind(oscar)(tango);
    mike = function(argFoo) { // Original name: MediaAltText
        _fun102225: for(var _fun102225_ip = 0; ; ) switch(_fun102225_ip) {
 0:
            mike = argFoo;
            offset = mike.description;
            var _closure2_slot0 = offset;
            zulu = mike.onFullViewToggle;
            var _closure2_slot1 = zulu;
            tango = _closure1_slot0;
            report = _closure1_slot2;
            mike = 7;
            mike = report[mike];
            report = undefined;
            mike = tango.bind(report)(mike);
            tango = mike.ViewImageDescriptions;
            mike = tango.useSetting;
            tango = mike.bind(tango)();
            golf = _closure1_slot4;
            oscar = golf.useState;
            mike = true;
            verify = oscar.bind(golf)(mike);
            oscar = _closure1_slot3;
            mike = 2;
            verify = oscar.bind(report)(verify, mike);
            mike = 0;
            mike = verify[mike];
            oscar = 1;
            oscar = verify[oscar];
            var _closure2_slot2 = oscar;
            verify = golf.useCallback;
            oscar = new Array(1);
            oscar[0] = zulu;
            zulu = function() {
                _fun102226: for(var _fun102226_ip = 0; ; ) switch(_fun102226_ip) {
 0:
                    zulu = _closure2_slot1;
                    mike = null;
                    if(!(mike != zulu)) { _fun102226_ip = 26; continue _fun102226 }
 13:
                    tango = _closure2_slot1;
                    zulu = undefined;
                    mike = false;
                    mike = tango.bind(zulu)(mike);
 26:
                    zulu = _closure2_slot2;
                    entity = undefined;
                    mike = true;
                    mike = zulu.bind(entity)(mike);
                    return entity;
                }
            };
            verify = verify.bind(golf)(zulu, oscar);
            var _closure2_slot3 = verify;
            oscar = golf.useCallback;
            zulu = new Array(2);
            zulu[0] = offset;
            zulu[1] = verify;
            entity = function() {
                report = _closure1_slot1;
                mike = _closure1_slot2;
                entity = 8;
                tango = mike[entity];
                entity = undefined;
                golf = report.bind(entity)(tango);
                oscar = golf.openLazy;
                tango = _closure1_slot0;
                zulu = 10;
                zulu = mike[zulu];
                tango = tango.bind(entity)(zulu);
                zulu = 9;
                zulu = mike[zulu];
                mike = mike.paths;
                report = tango.bind(entity)(zulu, mike);
                tango = {};
                zulu = _closure2_slot0;
                tango['description'] = zulu;
                zulu = _closure2_slot3;
                tango['onClose'] = zulu;
                zulu = 'none';
                tango['backdropKind'] = zulu;
                zulu = 'MediaViewerAltTextSheet';
                zulu = oscar.bind(golf)(report, zulu, tango);
                zulu = _closure2_slot2;
                mike = false;
                mike = zulu.bind(entity)(mike);
                return entity;
            };
            oscar = oscar.bind(golf)(entity, zulu);
            entity = null;
            if(!tango) { _fun102225_ip = 385; continue _fun102225 }
 181:
            entity = null;
            if(!mike) { _fun102225_ip = 385; continue _fun102225 }
 189:
            tango = _closure1_slot7;
            zulu = _closure1_slot5;
            mike = {};
            offset = _closure1_slot8;
            verify = offset.transparentContainer;
            golf = new Array(2);
            golf[0] = verify;
            verify = offset.circleContainer;
            golf[1] = verify;
            mike['style'] = golf;
            mike['onPress'] = oscar;
            oscar = {'top': 6, 'bottom': 6, 'left': 6, 'right': 6};
            mike['hitSlop'] = oscar;
            golf = _closure1_slot6;
            oscar = {};
            verify = offset.circleContainer;
            oscar['style'] = verify;
            foxtrot = _closure1_slot0;
            backup = _closure1_slot2;
            options = 11;
            options = backup[options];
            options = foxtrot.bind(report)(options);
            verify = options.LegacyText;
            options = {};
            offset = offset.circleText;
            options['style'] = offset;
            offset = 12;
            yankee = backup[offset];
            yankee = foxtrot.bind(report)(yankee);
            romeo = yankee.intl;
            yankee = romeo.string;
            offset = backup[offset];
            offset = foxtrot.bind(report)(offset);
            offset = offset.t;
            offset = offset.Q5VqrK;
            offset = yankee.bind(romeo)(offset);
            options['children'] = offset;
            options = tango.bind(report)(verify, options);
            oscar['children'] = options;
            oscar = tango.bind(report)(golf, oscar);
            mike['children'] = oscar;
            entity = tango.bind(report)(zulu, mike);
 385:
            return entity;
        }
    };
    zulu['default'] = mike;
    return entity;
})();