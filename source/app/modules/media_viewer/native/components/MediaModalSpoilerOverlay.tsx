// app/modules/media_viewer/native/components/MediaModalSpoilerOverlay.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
        report = argBar;
        kiloes = argBaz;
        zuuluu = argFre;
        oscard = argPlu;
        var _closure1_slot0 = report;
        var _closure1_slot1 = kiloes;
        var _closure1_slot2 = oscard;
        entity = global;
        option = entity.Object;
        golfie = option.defineProperty;
        tangon = {};
        entity = true;
        tangon['value'] = entity;
        entity = '__esModule';
        entity = golfie.bind(option)(zuuluu, entity, tangon);
        romeon = 0;
        tangon = oscard[romeon];
        entity = undefined;
        tangon = kiloes.bind(entity)(tangon);
        var _closure1_slot3 = tangon;
        tangon = 1;
        golfie = oscard[tangon];
        tangon = argCor;
        golfie = tangon.bind(entity)(golfie);
        tangon = 2;
        tangon = oscard[tangon];
        tangon = report.bind(entity)(tangon);
        verify = tangon.StyleSheet;
        var _closure1_slot4 = verify;
        tangon = tangon.View;
        var _closure1_slot5 = tangon;
        tangon = 3;
        tangon = oscard[tangon];
        tangon = report.bind(entity)(tangon);
        option = tangon.jsx;
        var _closure1_slot6 = option;
        tangon = tangon.jsxs;
        var _closure1_slot7 = tangon;
        option = verify.create;
        tangon = {};
        yankee = 'center';
        offset = {'justifyContent': 'center', 'alignContent': 'center', 'flex': 1};
        tangon['spoilerOverlayContainer'] = offset;
        offset = {'gap': null, 'justifyContent': 'center', 'alignItems': 'center', 'alignSelf': 'center'};
        backup = 4;
        foxtra = oscard[backup];
        foxtra = kiloes.bind(entity)(foxtra);
        foxtra = foxtra.spacing;
        foxtra = foxtra.PX_4;
        offset['gap'] = foxtra;
        tangon['obscureContentContainer'] = offset;
        offset = {};
        foxtra = oscard[backup];
        foxtra = kiloes.bind(entity)(foxtra);
        foxtra = foxtra.spacing;
        foxtra = foxtra.PX_16;
        offset['paddingHorizontal'] = foxtra;
        foxtra = oscard[backup];
        foxtra = kiloes.bind(entity)(foxtra);
        foxtra = foxtra.radii;
        foxtra = foxtra.lg;
        offset['borderRadius'] = foxtra;
        foxtra = oscard[backup];
        foxtra = kiloes.bind(entity)(foxtra);
        foxtra = foxtra.spacing;
        foxtra = foxtra.PX_32;
        offset['height'] = foxtra;
        foxtra = 5;
        foxtra = oscard[foxtra];
        sizing = report.bind(entity)(foxtra);
        foxtra = sizing.isAndroid;
        foxtra = foxtra.bind(sizing)();
        backup = oscard[backup];
        backup = kiloes.bind(entity)(backup);
        backup = backup.unsafe_rawColors;
        if(foxtra) { _fun00002_ip = 348; continue _fun00001 }
 340:
        foxtra = backup.PRIMARY_600;
        _fun00002_ip = 354; continue _fun00001;
 348:
        foxtra = backup.PRIMARY_800;
 354:
        offset['backgroundColor'] = foxtra;
        offset['flexGrow'] = romeon;
        offset['justifyContent'] = yankee;
        offset['alignItems'] = yankee;
        offset['alignSelf'] = yankee;
        tangon['spoilerOverlayBackground'] = offset;
        tangon = option.bind(verify)(tangon);
        var _closure1_slot8 = tangon;
        tangon = golfie.memo;
        michal = function(argFoo) { // Original name: MediaModalSpoilerOverlay
            _fun00003: for(var _fun00004_ip = 0; ; ) switch(_fun00004_ip) {
 0:
                entity = argFoo;
                romeon = entity.style;
                zuuluu = entity.index;
                offset = entity.source;
                michal = _closure1_slot0;
                tangon = _closure1_slot2;
                entity = 6;
                entity = tangon[entity];
                report = undefined;
                golfie = michal.bind(report)(entity);
                oscard = golfie.useToken;
                option = _closure1_slot1;
                entity = 4;
                entity = tangon[entity];
                entity = option.bind(report)(entity);
                entity = entity.colors;
                entity = entity.SPOILER_HIDDEN_BACKGROUND;
                verify = oscard.bind(golfie)(entity);
                entity = 7;
                entity = tangon[entity];
                michal = michal.bind(report)(entity);
                entity = michal.useMediaItemSpoilerState;
                zuuluu = entity.bind(michal)(zuuluu);
                michal = _closure1_slot3;
                entity = 2;
                zuuluu = michal.bind(report)(zuuluu, entity);
                entity = 0;
                michal = zuuluu[entity];
                entity = 1;
                option = zuuluu[entity];
                entity = null;
                if(!michal) { _fun00004_ip = 693; continue _fun00003 }
 138:
                tangon = _closure1_slot7;
                golfie = _closure1_slot1;
                yankee = _closure1_slot2;
                michal = 8;
                michal = yankee[michal];
                michal = golfie.bind(report)(michal);
                zuuluu = michal.View;
                michal = {};
                oscard = new Array(3);
                oscard[0] = romeon;
                romeon = _closure1_slot4;
                romeon = romeon.absoluteFill;
                oscard[1] = romeon;
                oscard[2] = option;
                michal['style'] = oscard;
                option = _closure1_slot6;
                oscard = 9;
                oscard = yankee[oscard];
                golfie = golfie.bind(report)(oscard);
                oscard = {};
                yankee = offset.obscure;
                if(yankee) { _fun00004_ip = 262; continue _fun00003 }
 226:
                romeon = _closure1_slot0;
                foxtra = _closure1_slot2;
                yankee = 5;
                yankee = foxtra[yankee];
                romeon = romeon.bind(report)(yankee);
                yankee = romeon.isAndroid;
                romeon = yankee.bind(romeon)();
                yankee = 'light';
                if(!romeon) { _fun00004_ip = 266; continue _fun00003 }
 262:
                yankee = 'dark';
 266:
                oscard['blurTheme'] = yankee;
                oscard['android_fallbackColor'] = verify;
                verify = _closure1_slot4;
                verify = verify.absoluteFill;
                oscard['style'] = verify;
                golfie = option.bind(report)(golfie, oscard);
                oscard = new Array(2);
                oscard[0] = golfie;
                verify = _closure1_slot6;
                option = _closure1_slot5;
                golfie = {};
                yankee = _closure1_slot8;
                yankee = yankee.spoilerOverlayContainer;
                golfie['style'] = yankee;
                offset = offset.obscure;
                if(offset) { _fun00004_ip = 485; continue _fun00003 }
 340:
                romeon = _closure1_slot6;
                yankee = _closure1_slot5;
                offset = {};
                foxtra = _closure1_slot8;
                foxtra = foxtra.spoilerOverlayBackground;
                offset['style'] = foxtra;
                echoed = _closure1_slot0;
                update = _closure1_slot2;
                foxtra = 11;
                foxtra = update[foxtra];
                foxtra = echoed.bind(report)(foxtra);
                kiloes = foxtra.Text;
                foxtra = {'accessibilityRole': 'text', 'variant': 'heading-md/medium', 'color': 'always-white'};
                sizing = 12;
                output = update[sizing];
                output = echoed.bind(report)(output);
                result = output.intl;
                output = result.string;
                sizing = update[sizing];
                sizing = echoed.bind(report)(sizing);
                sizing = sizing.t;
                sizing = sizing.F+x38P;
                output = output.bind(result)(sizing);
                sizing = output.toUpperCase;
                sizing = sizing.bind(output)();
                foxtra['children'] = sizing;
                foxtra = romeon.bind(report)(kiloes, foxtra);
                offset['children'] = foxtra;
                offset = romeon.bind(report)(yankee, offset);
                _fun00004_ip = 669; continue _fun00003;
 485:
                foxtra = _closure1_slot7;
                romeon = _closure1_slot5;
                yankee = {};
                kiloes = _closure1_slot8;
                kiloes = kiloes.obscureContentContainer;
                yankee['style'] = kiloes;
                output = _closure1_slot6;
                source = _closure1_slot0;
                ctrled = _closure1_slot2;
                backup = 10;
                backup = ctrled[backup];
                backup = source.bind(report)(backup);
                kiloes = backup.ImageWarningIcon;
                backup = {'size': 'lg', 'color': 'white'};
                kiloes = output.bind(report)(kiloes, backup);
                backup = new Array(2);
                backup[0] = kiloes;
                kiloes = 11;
                kiloes = ctrled[kiloes];
                kiloes = source.bind(report)(kiloes);
                sizing = kiloes.Text;
                kiloes = {'accessibilityRole': 'text', 'variant': 'heading-md/medium', 'color': 'always-white'};
                result = 12;
                echoed = ctrled[result];
                echoed = source.bind(report)(echoed);
                update = echoed.intl;
                echoed = update.string;
                result = ctrled[result];
                result = source.bind(report)(result);
                result = result.t;
                result = result.SpxcUV;
                result = echoed.bind(update)(result);
                kiloes['children'] = result;
                kiloes = output.bind(report)(sizing, kiloes);
                backup[1] = kiloes;
                yankee['children'] = backup;
                offset = foxtra.bind(report)(romeon, yankee);
 669:
                golfie['children'] = offset;
                golfie = verify.bind(report)(option, golfie);
                oscard[1] = golfie;
                michal['children'] = oscard;
                entity = tangon.bind(report)(zuuluu, michal);
 693:
                return entity;
            }
        };
        michal = tangon.bind(golfie)(michal);
        tangon = 13;
        tangon = oscard[tangon];
        oscard = report.bind(entity)(tangon);
        report = oscard.fileFinishedImporting;
        tangon = 'modules/media_viewer/native/components/MediaModalSpoilerOverlay.tsx';
        tangon = report.bind(oscard)(tangon);
        zuuluu['default'] = michal;
        return entity;
    }
})();