// app/modules/media_viewer/native/useOverlayLayoutDriver.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    report = argBar;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    entity = argBaz;
    var _closure1_slot1 = entity;
    var _closure1_slot2 = oscard;
    entity = global;
    option = entity.Object;
    golfie = option.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(option)(zuuluu, entity, tangon);
    entity = 0;
    golfie = oscard[entity];
    tangon = argCor;
    entity = undefined;
    tangon = tangon.bind(entity)(golfie);
    var _closure1_slot3 = tangon;
    tangon = {};
    golfie = 'function useOverlayLayoutDriverTsx1(){const{interpolate,animationDriver}=this.__closure;return{transform:[{translateY:interpolate(animationDriver.get(),[0,0.75,1],[-50,-50,0])}],opacity:interpolate(animationDriver.get(),[0,0.75,1],[0,0,1])};}';
    tangon['code'] = golfie;
    var _closure1_slot4 = tangon;
    tangon = {};
    golfie = 'function useOverlayLayoutDriverTsx2(){const{interpolate,animationDriver}=this.__closure;return{transform:[{translateY:interpolate(animationDriver.get(),[0,0.75,1],[50,50,0])}],opacity:interpolate(animationDriver.get(),[0,0.75,1],[0,0,1])};}';
    tangon['code'] = golfie;
    var _closure1_slot5 = tangon;
    tangon = 5;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/media_viewer/native/useOverlayLayoutDriver.tsx';
    tangon = report.bind(oscard)(tangon);
    tangon = function() { // Original name: useOverlayLayoutDriver
        tangon = _closure1_slot0;
        golfie = _closure1_slot2;
        entity = 1;
        entity = golfie[entity];
        report = undefined;
        oscard = tangon.bind(report)(entity);
        tangon = oscard.useSharedValue;
        entity = 0;
        entity = tangon.bind(oscard)(entity);
        var _closure2_slot0 = entity;
        oscard = _closure1_slot1;
        tangon = 2;
        tangon = golfie[tangon];
        tangon = oscard.bind(report)(tangon);
        tangon = tangon.bind(report)();
        golfie = tangon.height;
        oscard = tangon.width;
        report = _closure1_slot3;
        tangon = report.useEffect;
        zuuluu = new Array(3);
        zuuluu[0] = entity;
        zuuluu[1] = golfie;
        zuuluu[2] = oscard;
        michal = function() {
            tangon = _closure2_slot0;
            zuuluu = tangon.set;
            option = _closure1_slot0;
            verify = _closure1_slot2;
            entity = 3;
            michal = verify[entity];
            entity = undefined;
            golfie = option.bind(entity)(michal);
            oscard = golfie.withTiming;
            report = {};
            michal = 300;
            report['duration'] = michal;
            michal = 4;
            michal = verify[michal];
            michal = option.bind(entity)(michal);
            michal = michal.STANDARD_EASING;
            report['easing'] = michal;
            michal = 1;
            michal = oscard.bind(golfie)(michal, report);
            michal = zuuluu.bind(tangon)(michal);
            return entity;
        };
        michal = tangon.bind(report)(michal, zuuluu);
        return entity;
    };
    zuuluu['useOverlayLayoutDriver'] = tangon;
    tangon = function(argFoo) { // Original name: useHeaderLayoutAnimation
        oscard = argFoo;
        var _closure2_slot0 = oscard;
        verify = _closure1_slot0;
        offset = _closure1_slot2;
        golfie = 1;
        michal = offset[golfie];
        option = undefined;
        zuuluu = verify.bind(option)(michal);
        michal = zuuluu.useAnimatedStyle;
        entity = function() { // Original name: o
            entity = {};
            option = {};
            report = _closure1_slot0;
            oscard = _closure1_slot2;
            michal = 1;
            zuuluu = oscard[michal];
            tangon = undefined;
            romeon = report.bind(tangon)(zuuluu);
            yankee = romeon.interpolate;
            zuuluu = _closure2_slot0;
            golfie = zuuluu.get;
            offset = golfie.bind(zuuluu)();
            verify = new Array(3);
            golfie = -50;
            verify[0] = golfie;
            verify[1] = golfie;
            golfie = 0;
            verify[2] = golfie;
            golfie = [0, 0.75, 1];
            golfie = yankee.bind(romeon)(offset, golfie, verify);
            option['translateY'] = golfie;
            golfie = new Array(1);
            golfie[0] = option;
            entity['transform'] = golfie;
            michal = oscard[michal];
            oscard = report.bind(tangon)(michal);
            report = oscard.interpolate;
            michal = zuuluu.get;
            tangon = michal.bind(zuuluu)();
            zuuluu = [0, 0.75, 1];
            michal = [0, 0, 1];
            michal = report.bind(oscard)(tangon, zuuluu, michal);
            entity['opacity'] = michal;
            return entity;
        };
        report = {};
        golfie = offset[golfie];
        golfie = verify.bind(option)(golfie);
        golfie = golfie.interpolate;
        report['interpolate'] = golfie;
        report['animationDriver'] = oscard;
        entity['__closure'] = report;
        report = 13622939479876.0;
        entity['__workletHash'] = report;
        tangon = _closure1_slot4;
        entity['__initData'] = tangon;
        entity = michal.bind(zuuluu)(entity);
        return entity;
    };
    zuuluu['useHeaderLayoutAnimation'] = tangon;
    michal = function(argFoo) { // Original name: useFooterLayoutAnimation
        oscard = argFoo;
        var _closure2_slot0 = oscard;
        verify = _closure1_slot0;
        offset = _closure1_slot2;
        golfie = 1;
        michal = offset[golfie];
        option = undefined;
        zuuluu = verify.bind(option)(michal);
        michal = zuuluu.useAnimatedStyle;
        entity = function() { // Original name: n
            entity = {};
            option = {};
            report = _closure1_slot0;
            oscard = _closure1_slot2;
            michal = 1;
            zuuluu = oscard[michal];
            tangon = undefined;
            romeon = report.bind(tangon)(zuuluu);
            yankee = romeon.interpolate;
            zuuluu = _closure2_slot0;
            golfie = zuuluu.get;
            offset = golfie.bind(zuuluu)();
            verify = [0, 0.75, 1];
            golfie = [50, 50, 0];
            golfie = yankee.bind(romeon)(offset, verify, golfie);
            option['translateY'] = golfie;
            golfie = new Array(1);
            golfie[0] = option;
            entity['transform'] = golfie;
            michal = oscard[michal];
            oscard = report.bind(tangon)(michal);
            report = oscard.interpolate;
            michal = zuuluu.get;
            tangon = michal.bind(zuuluu)();
            zuuluu = [0, 0.75, 1];
            michal = [0, 0, 1];
            michal = report.bind(oscard)(tangon, zuuluu, michal);
            entity['opacity'] = michal;
            return entity;
        };
        report = {};
        golfie = offset[golfie];
        golfie = verify.bind(option)(golfie);
        golfie = golfie.interpolate;
        report['interpolate'] = golfie;
        report['animationDriver'] = oscard;
        entity['__closure'] = report;
        report = 15220711492711.0;
        entity['__workletHash'] = report;
        tangon = _closure1_slot5;
        entity['__initData'] = tangon;
        entity = michal.bind(zuuluu)(entity);
        return entity;
    };
    zuuluu['useFooterLayoutAnimation'] = michal;
    return entity;
})();