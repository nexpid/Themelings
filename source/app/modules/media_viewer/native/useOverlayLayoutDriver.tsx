// app/modules/media_viewer/native/useOverlayLayoutDriver.tsx
export default (function(argFoo, argBar, argBaz, argCorge, _, argFred, argPlugh) {
    report = argBar;
    zulu = argFred;
    oscar = argPlugh;
    var _closure1_slot0 = report;
    entity = argBaz;
    var _closure1_slot1 = entity;
    var _closure1_slot2 = oscar;
    entity = global;
    options = entity.Object;
    golf = options.defineProperty;
    tango = {};
    entity = true;
    tango['value'] = entity;
    entity = '__esModule';
    entity = golf.bind(options)(zulu, entity, tango);
    entity = 0;
    golf = oscar[entity];
    tango = argCorge;
    entity = undefined;
    tango = tango.bind(entity)(golf);
    var _closure1_slot3 = tango;
    tango = {};
    golf = 'function useOverlayLayoutDriverTsx1(){const{interpolate,animationDriver}=this.__closure;return{transform:[{translateY:interpolate(animationDriver.get(),[0,0.75,1],[-50,-50,0])}],opacity:interpolate(animationDriver.get(),[0,0.75,1],[0,0,1])};}';
    tango['code'] = golf;
    var _closure1_slot4 = tango;
    tango = {};
    golf = 'function useOverlayLayoutDriverTsx2(){const{interpolate,animationDriver}=this.__closure;return{transform:[{translateY:interpolate(animationDriver.get(),[0,0.75,1],[50,50,0])}],opacity:interpolate(animationDriver.get(),[0,0.75,1],[0,0,1])};}';
    tango['code'] = golf;
    var _closure1_slot5 = tango;
    tango = 5;
    tango = oscar[tango];
    oscar = report.bind(entity)(tango);
    report = oscar.fileFinishedImporting;
    tango = 'modules/media_viewer/native/useOverlayLayoutDriver.tsx';
    tango = report.bind(oscar)(tango);
    tango = function() { // Original name: useOverlayLayoutDriver
        tango = _closure1_slot0;
        golf = _closure1_slot2;
        entity = 1;
        entity = golf[entity];
        report = undefined;
        oscar = tango.bind(report)(entity);
        tango = oscar.useSharedValue;
        entity = 0;
        entity = tango.bind(oscar)(entity);
        var _closure2_slot0 = entity;
        oscar = _closure1_slot1;
        tango = 2;
        tango = golf[tango];
        tango = oscar.bind(report)(tango);
        tango = tango.bind(report)();
        golf = tango.height;
        oscar = tango.width;
        report = _closure1_slot3;
        tango = report.useEffect;
        zulu = new Array(3);
        zulu[0] = entity;
        zulu[1] = golf;
        zulu[2] = oscar;
        mike = function() {
            tango = _closure2_slot0;
            zulu = tango.set;
            options = _closure1_slot0;
            verify = _closure1_slot2;
            entity = 3;
            mike = verify[entity];
            entity = undefined;
            golf = options.bind(entity)(mike);
            oscar = golf.withTiming;
            report = {};
            mike = 300;
            report['duration'] = mike;
            mike = 4;
            mike = verify[mike];
            mike = options.bind(entity)(mike);
            mike = mike.STANDARD_EASING;
            report['easing'] = mike;
            mike = 1;
            mike = oscar.bind(golf)(mike, report);
            mike = zulu.bind(tango)(mike);
            return entity;
        };
        mike = tango.bind(report)(mike, zulu);
        return entity;
    };
    zulu['useOverlayLayoutDriver'] = tango;
    tango = function(argFoo) { // Original name: useHeaderLayoutAnimation
        oscar = argFoo;
        var _closure2_slot0 = oscar;
        verify = _closure1_slot0;
        offset = _closure1_slot2;
        golf = 1;
        mike = offset[golf];
        options = undefined;
        zulu = verify.bind(options)(mike);
        mike = zulu.useAnimatedStyle;
        entity = function() { // Original name: o
            entity = {};
            options = {};
            report = _closure1_slot0;
            oscar = _closure1_slot2;
            mike = 1;
            zulu = oscar[mike];
            tango = undefined;
            romeo = report.bind(tango)(zulu);
            yankee = romeo.interpolate;
            zulu = _closure2_slot0;
            golf = zulu.get;
            offset = golf.bind(zulu)();
            verify = new Array(3);
            golf = -50;
            verify[0] = golf;
            verify[1] = golf;
            golf = 0;
            verify[2] = golf;
            golf = [0, 0.75, 1];
            golf = yankee.bind(romeo)(offset, golf, verify);
            options['translateY'] = golf;
            golf = new Array(1);
            golf[0] = options;
            entity['transform'] = golf;
            mike = oscar[mike];
            oscar = report.bind(tango)(mike);
            report = oscar.interpolate;
            mike = zulu.get;
            tango = mike.bind(zulu)();
            zulu = [0, 0.75, 1];
            mike = [0, 0, 1];
            mike = report.bind(oscar)(tango, zulu, mike);
            entity['opacity'] = mike;
            return entity;
        };
        report = {};
        golf = offset[golf];
        golf = verify.bind(options)(golf);
        golf = golf.interpolate;
        report['interpolate'] = golf;
        report['animationDriver'] = oscar;
        entity['__closure'] = report;
        report = 13622939479876.0;
        entity['__workletHash'] = report;
        tango = _closure1_slot4;
        entity['__initData'] = tango;
        entity = mike.bind(zulu)(entity);
        return entity;
    };
    zulu['useHeaderLayoutAnimation'] = tango;
    mike = function(argFoo) { // Original name: useFooterLayoutAnimation
        oscar = argFoo;
        var _closure2_slot0 = oscar;
        verify = _closure1_slot0;
        offset = _closure1_slot2;
        golf = 1;
        mike = offset[golf];
        options = undefined;
        zulu = verify.bind(options)(mike);
        mike = zulu.useAnimatedStyle;
        entity = function() { // Original name: n
            entity = {};
            options = {};
            report = _closure1_slot0;
            oscar = _closure1_slot2;
            mike = 1;
            zulu = oscar[mike];
            tango = undefined;
            romeo = report.bind(tango)(zulu);
            yankee = romeo.interpolate;
            zulu = _closure2_slot0;
            golf = zulu.get;
            offset = golf.bind(zulu)();
            verify = [0, 0.75, 1];
            golf = [50, 50, 0];
            golf = yankee.bind(romeo)(offset, verify, golf);
            options['translateY'] = golf;
            golf = new Array(1);
            golf[0] = options;
            entity['transform'] = golf;
            mike = oscar[mike];
            oscar = report.bind(tango)(mike);
            report = oscar.interpolate;
            mike = zulu.get;
            tango = mike.bind(zulu)();
            zulu = [0, 0.75, 1];
            mike = [0, 0, 1];
            mike = report.bind(oscar)(tango, zulu, mike);
            entity['opacity'] = mike;
            return entity;
        };
        report = {};
        golf = offset[golf];
        golf = verify.bind(options)(golf);
        golf = golf.interpolate;
        report['interpolate'] = golf;
        report['animationDriver'] = oscar;
        entity['__closure'] = report;
        report = 15220711492711.0;
        entity['__workletHash'] = report;
        tango = _closure1_slot5;
        entity['__initData'] = tango;
        entity = mike.bind(zulu)(entity);
        return entity;
    };
    zulu['useFooterLayoutAnimation'] = mike;
    return entity;
})();