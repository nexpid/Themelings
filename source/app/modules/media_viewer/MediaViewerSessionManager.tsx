// app/modules/media_viewer/MediaViewerSessionManager.tsx
export default (function(global, require, metroImportDefault, metroImportAll, moduleObject, exports, dependencyMap) {
    var7 = require;
    var3 = exports;
    var8 = dependencyMap;
    var _closure1_slot0 = var7;
    var1 = metroImportDefault;
    var _closure1_slot1 = var1;
    var _closure1_slot2 = var8;
    var1 = function getSessionAnalytics() {
        var1 = {};
        var3 = _closure1_slot5;
        var2 = var3.getState;
        var2 = var2.bind(var3)();
        var2 = var2.channelId;
        var1['channel_id'] = var2;
        return var1;
    };
    var _closure1_slot6 = var1;
    var6 = global;
    var9 = var6.Object;
    var5 = var9.defineProperty;
    var4 = {};
    var1 = true;
    var4['value'] = var1;
    var1 = '__esModule';
    var1 = var5.bind(var9)(var3, var1, var4);
    var9 = 0;
    var4 = var8[var9];
    var1 = undefined;
    var4 = var7.bind(var1)(var4);
    var4 = var4.AnalyticEvents;
    var _closure1_slot3 = var4;
    var5 = {};
    var4 = 'number_viewer_swipes';
    var5['VIEWER_SWIPE'] = var4;
    var4 = 'number_thumbnail_swipes';
    var5['THUMBNAIL_SWIPE'] = var4;
    var4 = 'number_selected_item_changes';
    var5['SELECTED_ITEM_CHANGE'] = var4;
    var4 = 'number_zoom_in_button_pressed';
    var5['ZOOM_IN_BUTTON_PRESSED'] = var4;
    var4 = 'number_zoom_in_image_pressed';
    var5['ZOOM_IN_IMAGE_PRESSED'] = var4;
    var4 = 'number_zoom_out_button_pressed';
    var5['ZOOM_OUT_BUTTON_PRESSED'] = var4;
    var4 = 'number_zoom_out_image_pressed';
    var5['ZOOM_OUT_IMAGE_PRESSED'] = var4;
    var4 = 'number_forward_button_pressed';
    var5['FORWARD_PRESSED'] = var4;
    var4 = 'number_save_media_button_pressed';
    var5['SAVE_MEDIA_PRESSED'] = var4;
    var4 = 'number_open_link_button_pressed';
    var5['OPEN_LINK_PRESSED'] = var4;
    var4 = 'number_more_button_pressed';
    var5['MORE_BUTTON_PRESSED'] = var4;
    var4 = 'number_copy_image_more_menu_pressed';
    var5['COPY_IMAGE_PRESSED'] = var4;
    var4 = 'number_copy_link_more_menu_pressed';
    var5['COPY_LINK_PRESSED'] = var4;
    var4 = 'number_context_menu_opened';
    var5['CONTEXT_MENU_OPENED'] = var4;
    var4 = {};
    var4['guildId'] = var1;
    var4['channelId'] = var1;
    var4['channelType'] = var1;
    var4['numMediaItems'] = var9;
    var4['hasMediaOptions'] = var1;
    var4['source'] = var1;
    var10 = var6.Object;
    var9 = var10.fromEntries;
    var11 = var6.Object;
    var6 = var11.values;
    var12 = var6.bind(var11)(var5);
    var11 = var12.map;
    var6 = function(arg1) {
        var1 = new Array(2);
        var2 = arg1;
        var1[0] = var2;
        var2 = 0;
        var1[1] = var2;
        return var1;
    };
    var6 = var11.bind(var12)(var6);
    var6 = var9.bind(var10)(var6);
    var4['incrementableActions'] = var6;
    var _closure1_slot4 = var4;
    var4 = 1;
    var4 = var8[var4];
    var9 = var7.bind(var1)(var4);
    var6 = var9.create;
    var4 = function() {
        var1 = _closure1_slot4;
        return var1;
    };
    var4 = var6.bind(var9)(var4);
    var _closure1_slot5 = var4;
    var6 = 4;
    var6 = var8[var6];
    var8 = var7.bind(var1)(var6);
    var7 = var8.fileFinishedImporting;
    var6 = 'modules/media_viewer/MediaViewerSessionManager.tsx';
    var6 = var7.bind(var8)(var6);
    var3['IncrementableMediaViewerActions'] = var5;
    var3['useMediaViewerSessionManager'] = var4;
    var4 = function startMediaViewerSession(arg1) {
        var1 = arg1;
        var _closure2_slot0 = var1;
        var4 = _closure1_slot0;
        var3 = _closure1_slot2;
        var1 = 2;
        var3 = var3[var1];
        var1 = undefined;
        var4 = var4.bind(var1)(var3);
        var3 = var4.batchUpdates;
        var2 = function() {
            var3 = _closure1_slot5;
            var2 = var3.setState;
            var1 = {};
            var5 = _closure1_slot4;
            var6 = var1;
            var4 = copyDataProperties(var6, var5);
            var5 = _closure2_slot0;
            var6 = var1;
            var4 = copyDataProperties(var6, var5);
            var1 = var2.bind(var3)(var1);
            return var1;
        };
        var2 = var3.bind(var4)(var2);
        return var1;
    };
    var3['startMediaViewerSession'] = var4;
    var4 = function endMediaViewerSession() {
        var3 = _closure1_slot5;
        var1 = var3.getState;
        var8 = var1.bind(var3)();
        var5 = _closure1_slot1;
        var4 = _closure1_slot2;
        var1 = 3;
        var3 = var4[var1];
        var1 = undefined;
        var7 = var5.bind(var1)(var3);
        var6 = var7.track;
        var3 = _closure1_slot3;
        var5 = var3.MEDIA_VIEWER_SESSION_COMPLETED;
        var3 = {};
        var9 = var8.source;
        var3['source'] = var9;
        var9 = var8.guildId;
        var3['guild_id'] = var9;
        var9 = var8.channelId;
        var3['channel_id'] = var9;
        var9 = var8.channelType;
        var3['channel_type'] = var9;
        var9 = var8.numMediaItems;
        var3['number_media_items'] = var9;
        var9 = var8.hasMediaOptions;
        var3['has_media_options'] = var9;
        var10 = var8.incrementableActions;
        var11 = var3;
        var8 = copyDataProperties(var11, var10);
        var3 = var6.bind(var7)(var5, var3);
        var3 = _closure1_slot0;
        var2 = 2;
        var2 = var4[var2];
        var4 = var3.bind(var1)(var2);
        var3 = var4.batchUpdates;
        var2 = function() {
            var3 = _closure1_slot5;
            var2 = var3.setState;
            var1 = {};
            var5 = _closure1_slot4;
            var6 = var1;
            var4 = copyDataProperties(var6, var5);
            var1 = var2.bind(var3)(var1);
            return var1;
        };
        var2 = var3.bind(var4)(var2);
        return var1;
    };
    var3['endMediaViewerSession'] = var4;
    var4 = function incrementMediaViewerAction(arg1) {
        var1 = arg1;
        var _closure2_slot0 = var1;
        var4 = _closure1_slot0;
        var3 = _closure1_slot2;
        var1 = 2;
        var3 = var3[var1];
        var1 = undefined;
        var4 = var4.bind(var1)(var3);
        var3 = var4.batchUpdates;
        var2 = function() {
            var3 = _closure1_slot5;
            var2 = var3.setState;
            var1 = function(arg1) {
                var3 = arg1;
                var1 = {};
                var2 = {};
                var6 = var3.incrementableActions;
                var7 = var2;
                var4 = copyDataProperties(var7, var6);
                var4 = _closure2_slot0;
                var3 = var3.incrementableActions;
                var5 = var3[var4];
                var3 = 1;
                var3 = var5 + var3;
                var2[var4] = var3;
                var1['incrementableActions'] = var2;
                return var1;
            };
            var1 = var2.bind(var3)(var1);
            var1 = undefined;
            return var1;
        };
        var2 = var3.bind(var4)(var2);
        return var1;
    };
    var3['incrementMediaViewerAction'] = var4;
    var4 = function setNumMediaItems(arg1) {
        var1 = arg1;
        var _closure2_slot0 = var1;
        var4 = _closure1_slot0;
        var3 = _closure1_slot2;
        var1 = 2;
        var3 = var3[var1];
        var1 = undefined;
        var4 = var4.bind(var1)(var3);
        var3 = var4.batchUpdates;
        var2 = function() {
            var3 = _closure1_slot5;
            var2 = var3.setState;
            var1 = {};
            var4 = _closure2_slot0;
            var1['numMediaItems'] = var4;
            var1 = var2.bind(var3)(var1);
            return var1;
        };
        var2 = var3.bind(var4)(var2);
        return var1;
    };
    var3['setNumMediaItems'] = var4;
    var4 = function trackMediaViewerImageSaved(arg1, arg2) {
        var3 = _closure1_slot1;
        var2 = _closure1_slot2;
        var1 = 3;
        var2 = var2[var1];
        var1 = undefined;
        var5 = var3.bind(var1)(var2);
        var4 = var5.track;
        var2 = _closure1_slot3;
        var3 = var2.MEDIA_VIEWER_IMAGE_SAVED;
        var2 = {};
        var7 = arg1;
        var2['url'] = var7;
        var7 = arg2;
        var2['success'] = var7;
        var6 = _closure1_slot6;
        var8 = var6.bind(var1)();
        var9 = var2;
        var6 = copyDataProperties(var9, var8);
        var2 = var4.bind(var5)(var3, var2);
        return var1;
    };
    var3['trackMediaViewerImageSaved'] = var4;
    var4 = function trackMediaViewerImageCopied(arg1, arg2) {
        var3 = _closure1_slot1;
        var2 = _closure1_slot2;
        var1 = 3;
        var2 = var2[var1];
        var1 = undefined;
        var5 = var3.bind(var1)(var2);
        var4 = var5.track;
        var2 = _closure1_slot3;
        var3 = var2.MEDIA_VIEWER_IMAGE_COPIED;
        var2 = {};
        var7 = arg1;
        var2['url'] = var7;
        var7 = arg2;
        var2['success'] = var7;
        var6 = _closure1_slot6;
        var8 = var6.bind(var1)();
        var9 = var2;
        var6 = copyDataProperties(var9, var8);
        var2 = var4.bind(var5)(var3, var2);
        return var1;
    };
    var3['trackMediaViewerImageCopied'] = var4;
    var4 = function trackMediaViewerLinkCopied(arg1, arg2) {
        var3 = _closure1_slot1;
        var2 = _closure1_slot2;
        var1 = 3;
        var2 = var2[var1];
        var1 = undefined;
        var5 = var3.bind(var1)(var2);
        var4 = var5.track;
        var2 = _closure1_slot3;
        var3 = var2.MEDIA_VIEWER_LINK_COPIED;
        var2 = {};
        var7 = arg1;
        var2['href'] = var7;
        var7 = arg2;
        var2['success'] = var7;
        var6 = _closure1_slot6;
        var8 = var6.bind(var1)();
        var9 = var2;
        var6 = copyDataProperties(var9, var8);
        var2 = var4.bind(var5)(var3, var2);
        return var1;
    };
    var3['trackMediaViewerLinkCopied'] = var4;
    var2 = function trackMediaViewerLinkOpened(arg1) {
        var3 = _closure1_slot1;
        var2 = _closure1_slot2;
        var1 = 3;
        var2 = var2[var1];
        var1 = undefined;
        var5 = var3.bind(var1)(var2);
        var4 = var5.track;
        var2 = _closure1_slot3;
        var3 = var2.MEDIA_VIEWER_LINK_OPENED;
        var2 = {};
        var7 = arg1;
        var2['href'] = var7;
        var6 = _closure1_slot6;
        var8 = var6.bind(var1)();
        var9 = var2;
        var6 = copyDataProperties(var9, var8);
        var2 = var4.bind(var5)(var3, var2);
        return var1;
    };
    var3['trackMediaViewerLinkOpened'] = var2;
    return var1;
})();