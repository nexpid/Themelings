// app/modules/safety_hub/native/SuspendedUserPage.tsx
export default (function(_, argBar, argBaz, argCorge, __, argFred, argPlugh) {
    report = argBar;
    yankee = argBaz;
    zulu = argFred;
    oscar = argPlugh;
    var _closure1_slot0 = report;
    var _closure1_slot1 = yankee;
    var _closure1_slot2 = oscar;
    entity = global;
    options = entity.Object;
    golf = options.defineProperty;
    tango = {};
    entity = true;
    tango['value'] = entity;
    entity = '__esModule';
    entity = golf.bind(options)(zulu, entity, tango);
    entity = 0;
    golf = oscar[entity];
    tango = argCorge;
    entity = undefined;
    tango = tango.bind(entity)(golf);
    tango = 1;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.View;
    var _closure1_slot3 = tango;
    tango = 2;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.SafetyHubLinks;
    var _closure1_slot4 = tango;
    tango = 3;
    golf = oscar[tango];
    golf = report.bind(entity)(golf);
    golf = golf.jsx;
    var _closure1_slot5 = golf;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.jsxs;
    var _closure1_slot6 = tango;
    tango = 4;
    tango = oscar[tango];
    options = report.bind(entity)(tango);
    golf = options.createStyles;
    tango = {};
    verify = {'backgroundColor': null, 'display': 'flex', 'flexDirection': 'column', 'height': '100%'};
    offset = 5;
    romeo = oscar[offset];
    romeo = yankee.bind(entity)(romeo);
    romeo = romeo.colors;
    romeo = romeo.BACKGROUND_MOBILE_SECONDARY;
    verify['backgroundColor'] = romeo;
    tango['container'] = verify;
    verify = {};
    romeo = oscar[offset];
    romeo = yankee.bind(entity)(romeo);
    romeo = romeo.colors;
    romeo = romeo.BUTTON_DANGER_BACKGROUND;
    verify['backgroundColor'] = romeo;
    romeo = 'row';
    verify['flexDirection'] = romeo;
    romeo = oscar[offset];
    romeo = yankee.bind(entity)(romeo);
    romeo = romeo.spacing;
    romeo = romeo.PX_8;
    verify['paddingVertical'] = romeo;
    romeo = 'center';
    verify['alignItems'] = romeo;
    tango['header'] = verify;
    verify = {'marginRight': null, 'textAlign': 'left', 'flexShrink': 1};
    offset = oscar[offset];
    offset = yankee.bind(entity)(offset);
    offset = offset.spacing;
    offset = offset.PX_8;
    verify['marginRight'] = offset;
    tango['text'] = verify;
    verify = {};
    offset = 'underline';
    verify['textDecorationLine'] = offset;
    tango['link'] = verify;
    tango = golf.bind(options)(tango);
    var _closure1_slot7 = tango;
    tango = 14;
    tango = oscar[tango];
    oscar = report.bind(entity)(tango);
    report = oscar.fileFinishedImporting;
    tango = 'modules/safety_hub/native/SuspendedUserPage.tsx';
    tango = report.bind(oscar)(tango);
    mike = function() { // Original name: SuspendedUserSafetyHubPage
        entity = _closure1_slot7;
        tango = undefined;
        echo = entity.bind(tango)();
        zulu = _closure1_slot5;
        source = _closure1_slot0;
        romeo = _closure1_slot2;
        entity = 6;
        entity = romeo[entity];
        entity = source.bind(tango)(entity);
        mike = entity.SafeAreaPaddingView;
        entity = {'top': true, 'right': true};
        yankee = true;
        golf = _closure1_slot6;
        oscar = _closure1_slot3;
        report = {};
        options = echo.container;
        report['style'] = options;
        options = {};
        verify = echo.header;
        options['style'] = verify;
        verify = 7;
        verify = romeo[verify];
        verify = source.bind(tango)(verify);
        foxtrot = verify.IconButton;
        verify = {};
        backup = 'destructive';
        verify['variant'] = backup;
        result = 8;
        backup = romeo[result];
        backup = source.bind(tango)(backup);
        output = backup.intl;
        sizing = output.string;
        backup = romeo[result];
        backup = source.bind(tango)(backup);
        backup = backup.t;
        backup = backup.cpT0Cg;
        backup = sizing.bind(output)(backup);
        verify['accessibilityLabel'] = backup;
        backup = function() { // Original name: onPress
            zulu = _closure1_slot1;
            mike = _closure1_slot2;
            entity = 9;
            mike = mike[entity];
            entity = undefined;
            zulu = zulu.bind(entity)(mike);
            mike = zulu.closeSuspendedUser;
            mike = mike.bind(zulu)();
            return entity;
        };
        verify['onPress'] = backup;
        offset = _closure1_slot1;
        backup = 10;
        backup = romeo[backup];
        backup = offset.bind(tango)(backup);
        verify['icon'] = backup;
        foxtrot = zulu.bind(tango)(foxtrot, verify);
        verify = new Array(2);
        verify[0] = foxtrot;
        sizing = 11;
        foxtrot = romeo[sizing];
        foxtrot = source.bind(tango)(foxtrot);
        backup = foxtrot.Text;
        foxtrot = {};
        output = echo.text;
        foxtrot['style'] = output;
        kilo = function() { // Original name: onPress
            tango = _closure1_slot1;
            zulu = _closure1_slot2;
            entity = 12;
            zulu = zulu[entity];
            entity = undefined;
            tango = tango.bind(entity)(zulu);
            zulu = tango.openURL;
            mike = _closure1_slot4;
            mike = mike.WARNING_SYSTEM_HELPCENTER_LINK;
            mike = zulu.bind(tango)(mike);
            return entity;
        };
        foxtrot['onPress'] = kilo;
        kilo = 'text-xs/medium';
        foxtrot['variant'] = kilo;
        kilo = 'status-danger-text';
        foxtrot['color'] = kilo;
        kilo = romeo[result];
        kilo = source.bind(tango)(kilo);
        update = kilo.intl;
        output = update.string;
        kilo = romeo[result];
        kilo = source.bind(tango)(kilo);
        kilo = kilo.t;
        kilo = kilo.MG+Bzc;
        output = output.bind(update)(kilo);
        kilo = new Array(3);
        kilo[0] = output;
        output = ' ';
        kilo[1] = output;
        sizing = romeo[sizing];
        sizing = source.bind(tango)(sizing);
        output = sizing.Text;
        sizing = {'style': null, 'variant': 'text-xs/medium', 'color': 'status-danger-text'};
        echo = echo.link;
        sizing['style'] = echo;
        echo = romeo[result];
        echo = source.bind(tango)(echo);
        update = echo.intl;
        echo = update.string;
        result = romeo[result];
        result = source.bind(tango)(result);
        result = result.t;
        result = result.9JceHB;
        result = echo.bind(update)(result);
        sizing['children'] = result;
        sizing = zulu.bind(tango)(output, sizing);
        kilo[2] = sizing;
        foxtrot['children'] = kilo;
        foxtrot = golf.bind(tango)(backup, foxtrot);
        verify[1] = foxtrot;
        options['children'] = verify;
        verify = golf.bind(tango)(oscar, options);
        options = new Array(2);
        options[0] = verify;
        verify = 13;
        verify = romeo[verify];
        offset = offset.bind(tango)(verify);
        verify = {};
        verify['visible'] = yankee;
        verify = zulu.bind(tango)(offset, verify);
        options[1] = verify;
        report['children'] = options;
        report = golf.bind(tango)(oscar, report);
        entity['children'] = report;
        entity = zulu.bind(tango)(mike, entity);
        return entity;
    };
    zulu['default'] = mike;
    return entity;
})();