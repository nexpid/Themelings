// app/modules/safety_hub/native/SuspendedUserPage.tsx
export default (function(_, argBar, argBaz, argCor, __, argFre, argPlu) {
    report = argBar;
    yankee = argBaz;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    var _closure1_slot1 = yankee;
    var _closure1_slot2 = oscard;
    entity = global;
    option = entity.Object;
    golfie = option.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(option)(zuuluu, entity, tangon);
    entity = 0;
    golfie = oscard[entity];
    tangon = argCor;
    entity = undefined;
    tangon = tangon.bind(entity)(golfie);
    tangon = 1;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.View;
    var _closure1_slot3 = tangon;
    tangon = 2;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.SafetyHubLinks;
    var _closure1_slot4 = tangon;
    tangon = 3;
    golfie = oscard[tangon];
    golfie = report.bind(entity)(golfie);
    golfie = golfie.jsx;
    var _closure1_slot5 = golfie;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.jsxs;
    var _closure1_slot6 = tangon;
    tangon = 4;
    tangon = oscard[tangon];
    option = report.bind(entity)(tangon);
    golfie = option.createStyles;
    tangon = {};
    verify = {'backgroundColor': null, 'display': 'flex', 'flexDirection': 'column', 'height': '100%'};
    offset = 5;
    romeon = oscard[offset];
    romeon = yankee.bind(entity)(romeon);
    romeon = romeon.colors;
    romeon = romeon.BACKGROUND_MOBILE_SECONDARY;
    verify['backgroundColor'] = romeon;
    tangon['container'] = verify;
    verify = {};
    romeon = oscard[offset];
    romeon = yankee.bind(entity)(romeon);
    romeon = romeon.colors;
    romeon = romeon.BUTTON_DANGER_BACKGROUND;
    verify['backgroundColor'] = romeon;
    romeon = 'row';
    verify['flexDirection'] = romeon;
    romeon = oscard[offset];
    romeon = yankee.bind(entity)(romeon);
    romeon = romeon.spacing;
    romeon = romeon.PX_8;
    verify['paddingVertical'] = romeon;
    romeon = 'center';
    verify['alignItems'] = romeon;
    tangon['header'] = verify;
    verify = {'marginRight': null, 'textAlign': 'left', 'flexShrink': 1};
    offset = oscard[offset];
    offset = yankee.bind(entity)(offset);
    offset = offset.spacing;
    offset = offset.PX_8;
    verify['marginRight'] = offset;
    tangon['text'] = verify;
    verify = {};
    offset = 'underline';
    verify['textDecorationLine'] = offset;
    tangon['link'] = verify;
    tangon = golfie.bind(option)(tangon);
    var _closure1_slot7 = tangon;
    tangon = 14;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/safety_hub/native/SuspendedUserPage.tsx';
    tangon = report.bind(oscard)(tangon);
    michal = function() { // Original name: SuspendedUserSafetyHubPage
        entity = _closure1_slot7;
        tangon = undefined;
        echoed = entity.bind(tangon)();
        zuuluu = _closure1_slot5;
        source = _closure1_slot0;
        romeon = _closure1_slot2;
        entity = 6;
        entity = romeon[entity];
        entity = source.bind(tangon)(entity);
        michal = entity.SafeAreaPaddingView;
        entity = {'top': true, 'right': true};
        yankee = true;
        golfie = _closure1_slot6;
        oscard = _closure1_slot3;
        report = {};
        option = echoed.container;
        report['style'] = option;
        option = {};
        verify = echoed.header;
        option['style'] = verify;
        verify = 7;
        verify = romeon[verify];
        verify = source.bind(tangon)(verify);
        foxtra = verify.IconButton;
        verify = {};
        backup = 'destructive';
        verify['variant'] = backup;
        result = 8;
        backup = romeon[result];
        backup = source.bind(tangon)(backup);
        output = backup.intl;
        sizing = output.string;
        backup = romeon[result];
        backup = source.bind(tangon)(backup);
        backup = backup.t;
        backup = backup.cpT0Cg;
        backup = sizing.bind(output)(backup);
        verify['accessibilityLabel'] = backup;
        backup = function() { // Original name: onPress
            zuuluu = _closure1_slot1;
            michal = _closure1_slot2;
            entity = 9;
            michal = michal[entity];
            entity = undefined;
            zuuluu = zuuluu.bind(entity)(michal);
            michal = zuuluu.closeSuspendedUser;
            michal = michal.bind(zuuluu)();
            return entity;
        };
        verify['onPress'] = backup;
        offset = _closure1_slot1;
        backup = 10;
        backup = romeon[backup];
        backup = offset.bind(tangon)(backup);
        verify['icon'] = backup;
        foxtra = zuuluu.bind(tangon)(foxtra, verify);
        verify = new Array(2);
        verify[0] = foxtra;
        sizing = 11;
        foxtra = romeon[sizing];
        foxtra = source.bind(tangon)(foxtra);
        backup = foxtra.Text;
        foxtra = {};
        output = echoed.text;
        foxtra['style'] = output;
        kiloes = function() { // Original name: onPress
            tangon = _closure1_slot1;
            zuuluu = _closure1_slot2;
            entity = 12;
            zuuluu = zuuluu[entity];
            entity = undefined;
            tangon = tangon.bind(entity)(zuuluu);
            zuuluu = tangon.openURL;
            michal = _closure1_slot4;
            michal = michal.WARNING_SYSTEM_HELPCENTER_LINK;
            michal = zuuluu.bind(tangon)(michal);
            return entity;
        };
        foxtra['onPress'] = kiloes;
        kiloes = 'text-xs/medium';
        foxtra['variant'] = kiloes;
        kiloes = 'status-danger-text';
        foxtra['color'] = kiloes;
        kiloes = romeon[result];
        kiloes = source.bind(tangon)(kiloes);
        update = kiloes.intl;
        output = update.string;
        kiloes = romeon[result];
        kiloes = source.bind(tangon)(kiloes);
        kiloes = kiloes.t;
        kiloes = kiloes.MG+Bzc;
        output = output.bind(update)(kiloes);
        kiloes = new Array(3);
        kiloes[0] = output;
        output = ' ';
        kiloes[1] = output;
        sizing = romeon[sizing];
        sizing = source.bind(tangon)(sizing);
        output = sizing.Text;
        sizing = {'style': null, 'variant': 'text-xs/medium', 'color': 'status-danger-text'};
        echoed = echoed.link;
        sizing['style'] = echoed;
        echoed = romeon[result];
        echoed = source.bind(tangon)(echoed);
        update = echoed.intl;
        echoed = update.string;
        result = romeon[result];
        result = source.bind(tangon)(result);
        result = result.t;
        result = result.9JceHB;
        result = echoed.bind(update)(result);
        sizing['children'] = result;
        sizing = zuuluu.bind(tangon)(output, sizing);
        kiloes[2] = sizing;
        foxtra['children'] = kiloes;
        foxtra = golfie.bind(tangon)(backup, foxtra);
        verify[1] = foxtra;
        option['children'] = verify;
        verify = golfie.bind(tangon)(oscard, option);
        option = new Array(2);
        option[0] = verify;
        verify = 13;
        verify = romeon[verify];
        offset = offset.bind(tangon)(verify);
        verify = {};
        verify['visible'] = yankee;
        verify = zuuluu.bind(tangon)(offset, verify);
        option[1] = verify;
        report['children'] = option;
        report = golfie.bind(tangon)(oscard, report);
        entity['children'] = report;
        entity = zuuluu.bind(tangon)(michal, entity);
        return entity;
    };
    zuuluu['default'] = michal;
    return entity;
})();