// app/modules/safety_hub/native/AppealIngestionRequestSent.tsx
export default (function(_, argBar, argBaz, argCor, __, argFre, argPlu) {
    report = argBar;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    entity = argBaz;
    var _closure1_slot1 = entity;
    var _closure1_slot2 = oscard;
    entity = global;
    option = entity.Object;
    golfie = option.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(option)(zuuluu, entity, tangon);
    entity = 0;
    golfie = oscard[entity];
    tangon = argCor;
    entity = undefined;
    tangon = tangon.bind(entity)(golfie);
    tangon = 1;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    golfie = tangon.View;
    var _closure1_slot3 = golfie;
    tangon = tangon.Image;
    var _closure1_slot4 = tangon;
    tangon = 2;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    golfie = tangon.SafetyHubAnalyticsActions;
    var _closure1_slot5 = golfie;
    tangon = tangon.SafetyHubLinks;
    var _closure1_slot6 = tangon;
    tangon = 3;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    golfie = tangon.jsx;
    var _closure1_slot7 = golfie;
    tangon = tangon.jsxs;
    var _closure1_slot8 = tangon;
    tangon = 4;
    tangon = oscard[tangon];
    option = report.bind(entity)(tangon);
    golfie = option.createStyles;
    tangon = {};
    verify = {'flex': 1, 'padding': 8};
    tangon['container'] = verify;
    verify = {'marginTop': 31, 'marginBottom': 16};
    tangon['actionsHeader'] = verify;
    verify = {'width': 86, 'height': 78.33, 'marginLeft': 4294967294, 'alignSelf': 'center'};
    tangon['checkboxPng'] = verify;
    tangon = golfie.bind(option)(tangon);
    var _closure1_slot9 = tangon;
    tangon = 11;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/safety_hub/native/AppealIngestionRequestSent.tsx';
    tangon = report.bind(oscard)(tangon);
    michal = function() { // Original name: AppealIngestionRequestSent
        sizing = _closure1_slot0;
        output = _closure1_slot2;
        entity = 5;
        entity = output[entity];
        tangon = undefined;
        michal = sizing.bind(tangon)(entity);
        entity = michal.useEmitAppealIngestionEvent;
        entity = entity.bind(michal)();
        var _closure2_slot0 = entity;
        entity = _closure1_slot9;
        kiloes = entity.bind(tangon)();
        foxtra = 6;
        entity = output[foxtra];
        entity = sizing.bind(tangon)(entity);
        zuuluu = entity.intl;
        michal = zuuluu.string;
        entity = output[foxtra];
        entity = sizing.bind(tangon)(entity);
        entity = entity.t;
        entity = entity.QMbTSk;
        echoed = michal.bind(zuuluu)(entity);
        entity = output[foxtra];
        entity = sizing.bind(tangon)(entity);
        zuuluu = entity.intl;
        michal = zuuluu.string;
        entity = output[foxtra];
        entity = sizing.bind(tangon)(entity);
        entity = entity.t;
        entity = entity.Qdx8AA;
        result = michal.bind(zuuluu)(entity);
        zuuluu = _closure1_slot7;
        verify = 7;
        entity = output[verify];
        entity = sizing.bind(tangon)(entity);
        michal = entity.AppealIngestionModalScreen;
        entity = {};
        golfie = _closure1_slot8;
        oscard = _closure1_slot3;
        report = {};
        option = kiloes.container;
        report['style'] = option;
        backup = _closure1_slot4;
        option = {};
        offset = _closure1_slot1;
        update = 8;
        update = output[update];
        update = offset.bind(tangon)(update);
        option['source'] = update;
        update = kiloes.checkboxPng;
        option['style'] = update;
        backup = zuuluu.bind(tangon)(backup, option);
        option = new Array(5);
        option[0] = backup;
        verify = output[verify];
        verify = sizing.bind(tangon)(verify);
        backup = verify.AppealIngestionModalHeader;
        verify = {};
        verify['headerText'] = echoed;
        verify['subHeaderText'] = result;
        verify = zuuluu.bind(tangon)(backup, verify);
        option[1] = verify;
        verify = 9;
        verify = output[verify];
        verify = sizing.bind(tangon)(verify);
        backup = verify.Text;
        verify = {'variant': 'heading-md/bold', 'color': 'header-primary'};
        kiloes = kiloes.actionsHeader;
        verify['style'] = kiloes;
        kiloes = output[foxtra];
        kiloes = sizing.bind(tangon)(kiloes);
        echoed = kiloes.intl;
        result = echoed.string;
        kiloes = output[foxtra];
        kiloes = sizing.bind(tangon)(kiloes);
        kiloes = kiloes.t;
        kiloes = kiloes.9BRc1N;
        kiloes = result.bind(echoed)(kiloes);
        verify['children'] = kiloes;
        verify = zuuluu.bind(tangon)(backup, verify);
        option[2] = verify;
        verify = 10;
        backup = output[verify];
        kiloes = offset.bind(tangon)(backup);
        backup = {};
        result = output[foxtra];
        result = sizing.bind(tangon)(result);
        update = result.intl;
        echoed = update.string;
        result = output[foxtra];
        result = sizing.bind(tangon)(result);
        result = result.t;
        result = result.PxL38P;
        result = echoed.bind(update)(result);
        backup['text'] = result;
        romeon = _closure1_slot6;
        result = romeon.COMMUNITY_GUIDELINES;
        backup['url'] = result;
        result = function() { // Original name: onPress
            zuuluu = _closure2_slot0;
            entity = _closure1_slot5;
            michal = entity.ClickCommunityGuidelinesLink;
            entity = undefined;
            entity = zuuluu.bind(entity)(michal);
            return entity;
        };
        backup['onPress'] = result;
        backup = zuuluu.bind(tangon)(kiloes, backup);
        option[3] = backup;
        verify = output[verify];
        offset = offset.bind(tangon)(verify);
        verify = {};
        backup = output[foxtra];
        backup = sizing.bind(tangon)(backup);
        kiloes = backup.intl;
        backup = kiloes.string;
        foxtra = output[foxtra];
        foxtra = sizing.bind(tangon)(foxtra);
        foxtra = foxtra.t;
        foxtra = foxtra.qC3XKS;
        foxtra = backup.bind(kiloes)(foxtra);
        verify['text'] = foxtra;
        romeon = romeon.WARNING_SYSTEM_HELPCENTER_LINK;
        verify['url'] = romeon;
        yankee = function() { // Original name: onPress
            zuuluu = _closure2_slot0;
            entity = _closure1_slot5;
            michal = entity.ClickWarningSystemHelpcenterLink;
            entity = undefined;
            entity = zuuluu.bind(entity)(michal);
            return entity;
        };
        verify['onPress'] = yankee;
        verify = zuuluu.bind(tangon)(offset, verify);
        option[4] = verify;
        report['children'] = option;
        report = golfie.bind(tangon)(oscard, report);
        entity['children'] = report;
        entity = zuuluu.bind(tangon)(michal, entity);
        return entity;
    };
    zuuluu['default'] = michal;
    return entity;
})();