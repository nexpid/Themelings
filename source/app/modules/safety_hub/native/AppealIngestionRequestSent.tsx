// app/modules/safety_hub/native/AppealIngestionRequestSent.tsx
export default (function(_, argBar, argBaz, argCorge, __, argFred, argPlugh) {
    report = argBar;
    zulu = argFred;
    oscar = argPlugh;
    var _closure1_slot0 = report;
    entity = argBaz;
    var _closure1_slot1 = entity;
    var _closure1_slot2 = oscar;
    entity = global;
    options = entity.Object;
    golf = options.defineProperty;
    tango = {};
    entity = true;
    tango['value'] = entity;
    entity = '__esModule';
    entity = golf.bind(options)(zulu, entity, tango);
    entity = 0;
    golf = oscar[entity];
    tango = argCorge;
    entity = undefined;
    tango = tango.bind(entity)(golf);
    tango = 1;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    golf = tango.View;
    var _closure1_slot3 = golf;
    tango = tango.Image;
    var _closure1_slot4 = tango;
    tango = 2;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    golf = tango.SafetyHubAnalyticsActions;
    var _closure1_slot5 = golf;
    tango = tango.SafetyHubLinks;
    var _closure1_slot6 = tango;
    tango = 3;
    golf = oscar[tango];
    golf = report.bind(entity)(golf);
    golf = golf.jsx;
    var _closure1_slot7 = golf;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.jsxs;
    var _closure1_slot8 = tango;
    tango = 4;
    tango = oscar[tango];
    options = report.bind(entity)(tango);
    golf = options.createStyles;
    tango = {};
    verify = {'flex': 1, 'padding': 8};
    tango['container'] = verify;
    verify = {'marginTop': 31, 'marginBottom': 16};
    tango['actionsHeader'] = verify;
    verify = {'width': 86, 'height': 78.33, 'marginLeft': 4294967294, 'alignSelf': 'center'};
    tango['checkboxPng'] = verify;
    tango = golf.bind(options)(tango);
    var _closure1_slot9 = tango;
    tango = 11;
    tango = oscar[tango];
    oscar = report.bind(entity)(tango);
    report = oscar.fileFinishedImporting;
    tango = 'modules/safety_hub/native/AppealIngestionRequestSent.tsx';
    tango = report.bind(oscar)(tango);
    mike = function() { // Original name: AppealIngestionRequestSent
        sizing = _closure1_slot0;
        output = _closure1_slot2;
        entity = 5;
        entity = output[entity];
        tango = undefined;
        mike = sizing.bind(tango)(entity);
        entity = mike.useEmitAppealIngestionEvent;
        entity = entity.bind(mike)();
        var _closure2_slot0 = entity;
        entity = _closure1_slot9;
        kilo = entity.bind(tango)();
        foxtrot = 6;
        entity = output[foxtrot];
        entity = sizing.bind(tango)(entity);
        zulu = entity.intl;
        mike = zulu.string;
        entity = output[foxtrot];
        entity = sizing.bind(tango)(entity);
        entity = entity.t;
        entity = entity.QMbTSk;
        echo = mike.bind(zulu)(entity);
        entity = output[foxtrot];
        entity = sizing.bind(tango)(entity);
        zulu = entity.intl;
        mike = zulu.string;
        entity = output[foxtrot];
        entity = sizing.bind(tango)(entity);
        entity = entity.t;
        entity = entity.Qdx8AA;
        result = mike.bind(zulu)(entity);
        zulu = _closure1_slot7;
        verify = 7;
        entity = output[verify];
        entity = sizing.bind(tango)(entity);
        mike = entity.AppealIngestionModalScreen;
        entity = {};
        golf = _closure1_slot8;
        oscar = _closure1_slot3;
        report = {};
        options = kilo.container;
        report['style'] = options;
        backup = _closure1_slot4;
        options = {};
        offset = _closure1_slot1;
        update = 8;
        update = output[update];
        update = offset.bind(tango)(update);
        options['source'] = update;
        update = kilo.checkboxPng;
        options['style'] = update;
        backup = zulu.bind(tango)(backup, options);
        options = new Array(5);
        options[0] = backup;
        verify = output[verify];
        verify = sizing.bind(tango)(verify);
        backup = verify.AppealIngestionModalHeader;
        verify = {};
        verify['headerText'] = echo;
        verify['subHeaderText'] = result;
        verify = zulu.bind(tango)(backup, verify);
        options[1] = verify;
        verify = 9;
        verify = output[verify];
        verify = sizing.bind(tango)(verify);
        backup = verify.Text;
        verify = {'variant': 'heading-md/bold', 'color': 'header-primary'};
        kilo = kilo.actionsHeader;
        verify['style'] = kilo;
        kilo = output[foxtrot];
        kilo = sizing.bind(tango)(kilo);
        echo = kilo.intl;
        result = echo.string;
        kilo = output[foxtrot];
        kilo = sizing.bind(tango)(kilo);
        kilo = kilo.t;
        kilo = kilo.9BRc1N;
        kilo = result.bind(echo)(kilo);
        verify['children'] = kilo;
        verify = zulu.bind(tango)(backup, verify);
        options[2] = verify;
        verify = 10;
        backup = output[verify];
        kilo = offset.bind(tango)(backup);
        backup = {};
        result = output[foxtrot];
        result = sizing.bind(tango)(result);
        update = result.intl;
        echo = update.string;
        result = output[foxtrot];
        result = sizing.bind(tango)(result);
        result = result.t;
        result = result.PxL38P;
        result = echo.bind(update)(result);
        backup['text'] = result;
        romeo = _closure1_slot6;
        result = romeo.COMMUNITY_GUIDELINES;
        backup['url'] = result;
        result = function() { // Original name: onPress
            zulu = _closure2_slot0;
            entity = _closure1_slot5;
            mike = entity.ClickCommunityGuidelinesLink;
            entity = undefined;
            entity = zulu.bind(entity)(mike);
            return entity;
        };
        backup['onPress'] = result;
        backup = zulu.bind(tango)(kilo, backup);
        options[3] = backup;
        verify = output[verify];
        offset = offset.bind(tango)(verify);
        verify = {};
        backup = output[foxtrot];
        backup = sizing.bind(tango)(backup);
        kilo = backup.intl;
        backup = kilo.string;
        foxtrot = output[foxtrot];
        foxtrot = sizing.bind(tango)(foxtrot);
        foxtrot = foxtrot.t;
        foxtrot = foxtrot.qC3XKS;
        foxtrot = backup.bind(kilo)(foxtrot);
        verify['text'] = foxtrot;
        romeo = romeo.WARNING_SYSTEM_HELPCENTER_LINK;
        verify['url'] = romeo;
        yankee = function() { // Original name: onPress
            zulu = _closure2_slot0;
            entity = _closure1_slot5;
            mike = entity.ClickWarningSystemHelpcenterLink;
            entity = undefined;
            entity = zulu.bind(entity)(mike);
            return entity;
        };
        verify['onPress'] = yankee;
        verify = zulu.bind(tango)(offset, verify);
        options[4] = verify;
        report['children'] = options;
        report = golf.bind(tango)(oscar, report);
        entity['children'] = report;
        entity = zulu.bind(tango)(mike, entity);
        return entity;
    };
    zulu['default'] = mike;
    return entity;
})();