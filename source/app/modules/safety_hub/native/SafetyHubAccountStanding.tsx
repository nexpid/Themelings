// app/modules/safety_hub/native/SafetyHubAccountStanding.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    report = argBar;
    yankee = argBaz;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    var _closure1_slot1 = yankee;
    var _closure1_slot2 = oscard;
    entity = global;
    option = entity.Object;
    golfie = option.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(option)(zuuluu, entity, tangon);
    entity = 0;
    tangon = oscard[entity];
    entity = undefined;
    tangon = yankee.bind(entity)(tangon);
    var _closure1_slot3 = tangon;
    tangon = 1;
    golfie = oscard[tangon];
    tangon = argCor;
    tangon = tangon.bind(entity)(golfie);
    var _closure1_slot4 = tangon;
    tangon = 2;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.View;
    var _closure1_slot5 = tangon;
    tangon = 3;
    tangon = oscard[tangon];
    tangon = yankee.bind(entity)(tangon);
    var _closure1_slot6 = tangon;
    tangon = 4;
    tangon = oscard[tangon];
    tangon = yankee.bind(entity)(tangon);
    var _closure1_slot7 = tangon;
    tangon = 5;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.SafetyHubLinks;
    var _closure1_slot8 = tangon;
    tangon = 6;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    golfie = tangon.jsx;
    var _closure1_slot9 = golfie;
    tangon = tangon.jsxs;
    var _closure1_slot10 = tangon;
    tangon = {};
    golfie = 7;
    option = oscard[golfie];
    option = report.bind(entity)(option);
    option = option.AccountStandingState;
    verify = option.ALL_GOOD;
    option = {};
    offset = '0%';
    option['left'] = offset;
    tangon[verify] = option;
    option = oscard[golfie];
    option = report.bind(entity)(option);
    option = option.AccountStandingState;
    offset = option.LIMITED;
    option = {};
    verify = '25%';
    option['left'] = verify;
    foxtra = {};
    verify = 8;
    romeon = oscard[verify];
    romeon = report.bind(entity)(romeon);
    romeon = romeon.SUBWAY_MARKER_WIDTH;
    backup = -0.5;
    romeon = backup * romeon;
    foxtra['translateX'] = romeon;
    romeon = new Array(1);
    romeon[0] = foxtra;
    option['transform'] = romeon;
    tangon[offset] = option;
    option = oscard[golfie];
    option = report.bind(entity)(option);
    option = option.AccountStandingState;
    offset = option.VERY_LIMITED;
    option = {};
    romeon = '50%';
    option['left'] = romeon;
    foxtra = {};
    romeon = oscard[verify];
    romeon = report.bind(entity)(romeon);
    romeon = romeon.SUBWAY_MARKER_WIDTH;
    romeon = backup * romeon;
    foxtra['translateX'] = romeon;
    romeon = new Array(1);
    romeon[0] = foxtra;
    option['transform'] = romeon;
    tangon[offset] = option;
    option = oscard[golfie];
    option = report.bind(entity)(option);
    option = option.AccountStandingState;
    offset = option.AT_RISK;
    option = {};
    romeon = '75%';
    option['left'] = romeon;
    foxtra = {};
    romeon = oscard[verify];
    romeon = report.bind(entity)(romeon);
    romeon = romeon.SUBWAY_MARKER_WIDTH;
    romeon = backup * romeon;
    foxtra['translateX'] = romeon;
    romeon = new Array(1);
    romeon[0] = foxtra;
    option['transform'] = romeon;
    tangon[offset] = option;
    golfie = oscard[golfie];
    golfie = report.bind(entity)(golfie);
    golfie = golfie.AccountStandingState;
    option = golfie.SUSPENDED;
    golfie = {};
    offset = '100%';
    golfie['left'] = offset;
    offset = {};
    verify = oscard[verify];
    verify = report.bind(entity)(verify);
    verify = verify.SUBWAY_MARKER_WIDTH;
    verify = -verify;
    offset['translateX'] = verify;
    verify = new Array(1);
    verify[0] = offset;
    golfie['transform'] = verify;
    tangon[option] = golfie;
    var _closure1_slot11 = tangon;
    tangon = 9;
    tangon = oscard[tangon];
    option = report.bind(entity)(tangon);
    golfie = option.createStyles;
    tangon = {};
    verify = {'display': 'flex', 'flexDirection': 'column', 'rowGap': 12, 'padding': 24, 'alignItems': 'center', 'justifyContent': 'center'};
    offset = 10;
    romeon = oscard[offset];
    romeon = yankee.bind(entity)(romeon);
    romeon = romeon.colors;
    romeon = romeon.CARD_PRIMARY_BG;
    verify['backgroundColor'] = romeon;
    romeon = oscard[offset];
    romeon = yankee.bind(entity)(romeon);
    romeon = romeon.radii;
    romeon = romeon.md;
    verify['borderRadius'] = romeon;
    tangon['container'] = verify;
    verify = {'position': 'relative', 'justifyContent': 'center', 'alignItems': 'center'};
    romeon = oscard[offset];
    romeon = yankee.bind(entity)(romeon);
    romeon = romeon.spacing;
    romeon = romeon.PX_4;
    verify['padding'] = romeon;
    romeon = oscard[offset];
    romeon = yankee.bind(entity)(romeon);
    romeon = romeon.colors;
    romeon = romeon.BG_MOD_STRONG;
    verify['backgroundColor'] = romeon;
    romeon = oscard[offset];
    romeon = yankee.bind(entity)(romeon);
    romeon = romeon.radii;
    romeon = romeon.round;
    verify['borderRadius'] = romeon;
    tangon['avatarBackground'] = verify;
    verify = {};
    romeon = oscard[offset];
    romeon = yankee.bind(entity)(romeon);
    romeon = romeon.colors;
    romeon = romeon.STATUS_POSITIVE;
    verify['color'] = romeon;
    tangon['good'] = verify;
    verify = {};
    romeon = oscard[offset];
    romeon = yankee.bind(entity)(romeon);
    romeon = romeon.colors;
    romeon = romeon.STATUS_WARNING;
    verify['color'] = romeon;
    tangon['limited'] = verify;
    verify = {};
    romeon = '#FF7A00';
    verify['color'] = romeon;
    tangon['veryLimited'] = verify;
    verify = {};
    romeon = oscard[offset];
    romeon = yankee.bind(entity)(romeon);
    romeon = romeon.colors;
    romeon = romeon.STATUS_DANGER;
    verify['color'] = romeon;
    tangon['atRisk'] = verify;
    verify = {};
    romeon = oscard[offset];
    romeon = yankee.bind(entity)(romeon);
    romeon = romeon.colors;
    romeon = romeon.STATUS_DANGER;
    verify['color'] = romeon;
    tangon['suspended'] = verify;
    verify = {'display': 'flex', 'rowGap': 40, 'width': '100%'};
    tangon['body'] = verify;
    verify = {};
    romeon = oscard[offset];
    romeon = yankee.bind(entity)(romeon);
    romeon = romeon.spacing;
    romeon = romeon.PX_8;
    verify['rowGap'] = romeon;
    tangon['bodyText'] = verify;
    verify = {'position': 'relative', 'left': 0, 'right': 0, 'marginBottom': 18};
    tangon['health'] = verify;
    verify = {'height': 3, 'width': '100%', 'position': 'absolute', 'top': 8.5};
    romeon = 'absolute';
    foxtra = oscard[offset];
    foxtra = yankee.bind(entity)(foxtra);
    foxtra = foxtra.colors;
    foxtra = foxtra.BG_BASE_TERTIARY;
    verify['backgroundColor'] = foxtra;
    tangon['line'] = verify;
    verify = {};
    verify['position'] = romeon;
    tangon['subwayMarker'] = verify;
    verify = {};
    romeon = oscard[offset];
    romeon = yankee.bind(entity)(romeon);
    romeon = romeon.radii;
    romeon = romeon.round;
    verify['borderRadius'] = romeon;
    offset = oscard[offset];
    offset = yankee.bind(entity)(offset);
    offset = offset.colors;
    offset = offset.BG_SURFACE_RAISED;
    verify['backgroundColor'] = offset;
    tangon['icon'] = verify;
    tangon = golfie.bind(option)(tangon);
    var _closure1_slot12 = tangon;
    tangon = 22;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/safety_hub/native/SafetyHubAccountStanding.tsx';
    tangon = report.bind(oscard)(tangon);
    michal = function() { // Original name: SafetyHubAccountStanding
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            michal = _closure1_slot7;
            entity = michal.getAccountStanding;
            entity = entity.bind(michal)();
            var _closure2_slot0 = entity;
            golfie = _closure1_slot4;
            zuuluu = golfie.useState;
            michal = 0;
            oscard = zuuluu.bind(golfie)(michal);
            report = _closure1_slot3;
            tangon = undefined;
            zuuluu = 2;
            zuuluu = report.bind(tangon)(oscard, zuuluu);
            sizing = zuuluu[michal];
            var _closure2_slot1 = sizing;
            michal = 1;
            michal = zuuluu[michal];
            var _closure2_slot2 = michal;
            michal = _closure1_slot12;
            backup = michal.bind(tangon)();
            var _closure2_slot3 = backup;
            report = golfie.useMemo;
            zuuluu = new Array(1);
            zuuluu[0] = backup;
            michal = function() {
                entity = {};
                option = _closure1_slot0;
                golfie = _closure1_slot2;
                michal = 7;
                zuuluu = golfie[michal];
                oscard = undefined;
                zuuluu = option.bind(oscard)(zuuluu);
                zuuluu = zuuluu.AccountStandingState;
                offset = zuuluu.ALL_GOOD;
                zuuluu = {};
                verify = 11;
                tangon = golfie[verify];
                tangon = option.bind(oscard)(tangon);
                tangon = tangon.t;
                tangon = tangon.uaKrRk;
                zuuluu['title'] = tangon;
                tangon = golfie[verify];
                tangon = option.bind(oscard)(tangon);
                foxtra = tangon.intl;
                romeon = foxtra.format;
                tangon = golfie[verify];
                tangon = option.bind(oscard)(tangon);
                tangon = tangon.t;
                yankee = tangon.pEdBDw;
                tangon = {};
                backup = _closure1_slot8;
                kiloes = backup.TOS_LINK;
                tangon['termsOfService'] = kiloes;
                backup = backup.COMMUNITY_GUIDELINES;
                tangon['communityGuidelines'] = backup;
                tangon = romeon.bind(foxtra)(yankee, tangon);
                zuuluu['description'] = tangon;
                tangon = golfie[verify];
                tangon = option.bind(oscard)(tangon);
                tangon = tangon.t;
                tangon = tangon./Idfam;
                zuuluu['status'] = tangon;
                tangon = _closure2_slot3;
                yankee = tangon.good;
                zuuluu['style'] = yankee;
                yankee = 12;
                yankee = golfie[yankee];
                yankee = option.bind(oscard)(yankee);
                yankee = yankee.CircleCheckIcon;
                zuuluu['CustomIcon'] = yankee;
                entity[offset] = zuuluu;
                zuuluu = golfie[michal];
                zuuluu = option.bind(oscard)(zuuluu);
                zuuluu = zuuluu.AccountStandingState;
                offset = zuuluu.LIMITED;
                zuuluu = {};
                yankee = golfie[verify];
                yankee = option.bind(oscard)(yankee);
                yankee = yankee.t;
                yankee = yankee.epkcmZ;
                zuuluu['title'] = yankee;
                yankee = golfie[verify];
                yankee = option.bind(oscard)(yankee);
                foxtra = yankee.intl;
                romeon = foxtra.string;
                yankee = golfie[verify];
                yankee = option.bind(oscard)(yankee);
                yankee = yankee.t;
                yankee = yankee.774jub;
                yankee = romeon.bind(foxtra)(yankee);
                zuuluu['description'] = yankee;
                yankee = golfie[verify];
                yankee = option.bind(oscard)(yankee);
                yankee = yankee.t;
                yankee = yankee.umleq6;
                zuuluu['status'] = yankee;
                yankee = tangon.limited;
                zuuluu['style'] = yankee;
                romeon = 13;
                yankee = golfie[romeon];
                yankee = option.bind(oscard)(yankee);
                yankee = yankee.CircleWarningIcon;
                zuuluu['CustomIcon'] = yankee;
                report = _closure1_slot1;
                yankee = 14;
                foxtra = golfie[yankee];
                foxtra = report.bind(oscard)(foxtra);
                zuuluu['iconSource'] = foxtra;
                entity[offset] = zuuluu;
                zuuluu = golfie[michal];
                zuuluu = option.bind(oscard)(zuuluu);
                zuuluu = zuuluu.AccountStandingState;
                offset = zuuluu.VERY_LIMITED;
                zuuluu = {};
                foxtra = golfie[verify];
                foxtra = option.bind(oscard)(foxtra);
                foxtra = foxtra.t;
                foxtra = foxtra.crzE2d;
                zuuluu['title'] = foxtra;
                foxtra = golfie[verify];
                foxtra = option.bind(oscard)(foxtra);
                kiloes = foxtra.intl;
                backup = kiloes.string;
                foxtra = golfie[verify];
                foxtra = option.bind(oscard)(foxtra);
                foxtra = foxtra.t;
                foxtra = foxtra.T/Ufh4;
                foxtra = backup.bind(kiloes)(foxtra);
                zuuluu['description'] = foxtra;
                foxtra = golfie[verify];
                foxtra = option.bind(oscard)(foxtra);
                foxtra = foxtra.t;
                foxtra = foxtra.WBtMHR;
                zuuluu['status'] = foxtra;
                foxtra = tangon.veryLimited;
                zuuluu['style'] = foxtra;
                foxtra = golfie[romeon];
                foxtra = option.bind(oscard)(foxtra);
                foxtra = foxtra.CircleWarningIcon;
                zuuluu['CustomIcon'] = foxtra;
                foxtra = golfie[yankee];
                foxtra = report.bind(oscard)(foxtra);
                zuuluu['iconSource'] = foxtra;
                entity[offset] = zuuluu;
                zuuluu = golfie[michal];
                zuuluu = option.bind(oscard)(zuuluu);
                zuuluu = zuuluu.AccountStandingState;
                offset = zuuluu.AT_RISK;
                zuuluu = {};
                foxtra = golfie[verify];
                foxtra = option.bind(oscard)(foxtra);
                foxtra = foxtra.t;
                foxtra = foxtra.XRNVzM;
                zuuluu['title'] = foxtra;
                foxtra = golfie[verify];
                foxtra = option.bind(oscard)(foxtra);
                kiloes = foxtra.intl;
                backup = kiloes.string;
                foxtra = golfie[verify];
                foxtra = option.bind(oscard)(foxtra);
                foxtra = foxtra.t;
                foxtra = foxtra.hbH+9f;
                foxtra = backup.bind(kiloes)(foxtra);
                zuuluu['description'] = foxtra;
                foxtra = golfie[verify];
                foxtra = option.bind(oscard)(foxtra);
                foxtra = foxtra.t;
                foxtra = foxtra.7f+4Li;
                zuuluu['status'] = foxtra;
                foxtra = tangon.atRisk;
                zuuluu['style'] = foxtra;
                romeon = golfie[romeon];
                romeon = option.bind(oscard)(romeon);
                romeon = romeon.CircleWarningIcon;
                zuuluu['CustomIcon'] = romeon;
                yankee = golfie[yankee];
                yankee = report.bind(oscard)(yankee);
                zuuluu['iconSource'] = yankee;
                entity[offset] = zuuluu;
                michal = golfie[michal];
                michal = option.bind(oscard)(michal);
                michal = michal.AccountStandingState;
                zuuluu = michal.SUSPENDED;
                michal = {};
                offset = golfie[verify];
                offset = option.bind(oscard)(offset);
                offset = offset.t;
                offset = offset.MExFk5;
                michal['title'] = offset;
                offset = golfie[verify];
                offset = option.bind(oscard)(offset);
                romeon = offset.intl;
                yankee = romeon.string;
                offset = golfie[verify];
                offset = option.bind(oscard)(offset);
                offset = offset.t;
                offset = offset.2liUvr;
                offset = yankee.bind(romeon)(offset);
                michal['description'] = offset;
                verify = golfie[verify];
                verify = option.bind(oscard)(verify);
                verify = verify.t;
                verify = verify.0OONGB;
                michal['status'] = verify;
                tangon = tangon.suspended;
                michal['style'] = tangon;
                tangon = 15;
                tangon = golfie[tangon];
                tangon = option.bind(oscard)(tangon);
                tangon = tangon.CircleXIcon;
                michal['CustomIcon'] = tangon;
                tangon = 16;
                tangon = golfie[tangon];
                tangon = report.bind(oscard)(tangon);
                michal['iconSource'] = tangon;
                entity[zuuluu] = michal;
                return entity;
            };
            michal = report.bind(golfie)(michal, zuuluu);
            var _closure2_slot4 = michal;
            oscard = golfie.useMemo;
            report = new Array(4);
            report[0] = entity;
            report[1] = michal;
            report[2] = sizing;
            report[3] = backup;
            zuuluu = function() {
                entity = global;
                zuuluu = entity.Object;
                michal = zuuluu.entries;
                entity = _closure2_slot4;
                zuuluu = michal.bind(zuuluu)(entity);
                michal = zuuluu.map;
                entity = function(argFoo, argBar) {
                    _fun00003: for(var _fun00004_ip = 0; ; ) switch(_fun00004_ip) {
 0:
                        report = argBar;
                        oscard = argFoo;
                        entity = oscard[Symbol.iterator];
                        oscard = entity().next;
                        golfie = oscard().value;
                        michal = entity;
                        tangon = undefined;
                        michal = michal === tangon;
                        zuuluu = undefined;
                        if(michal) { _fun00004_ip = 30; continue _fun00003 }
 27:
                        zuuluu = golfie;
 30:
                        romeon = undefined;
                        if(michal) { _fun00004_ip = 60; continue _fun00003 }
 35:
                        golfie = oscard().value;
                        oscard = entity;
                        oscard = oscard === tangon;
                        romeon = undefined;
                        michal = oscard;
                        if(oscard) { _fun00004_ip = 60; continue _fun00003 }
 54:
                        romeon = golfie;
                        michal = oscard;
 60:
                        if(michal) { _fun00004_ip = 66; continue _fun00003 }
 63:
                        entity.return();
 66:
                        entity = global;
                        michal = entity.parseInt;
                        yankee = michal.bind(tangon)(zuuluu);
                        zuuluu = entity.Object;
                        michal = zuuluu.keys;
                        entity = _closure2_slot4;
                        entity = michal.bind(zuuluu)(entity);
                        option = entity.length;
                        backup = romeon.CustomIcon;
                        zuuluu = _closure1_slot9;
                        michal = _closure1_slot5;
                        entity = {};
                        verify = _closure2_slot3;
                        foxtra = verify.subwayMarker;
                        golfie = new Array(2);
                        golfie[0] = foxtra;
                        foxtra = _closure1_slot11;
                        foxtra = foxtra[yankee];
                        golfie[1] = foxtra;
                        entity['style'] = golfie;
                        golfie = _closure1_slot1;
                        foxtra = _closure1_slot2;
                        oscard = 8;
                        oscard = foxtra[oscard];
                        golfie = golfie.bind(tangon)(oscard);
                        oscard = {};
                        foxtra = {};
                        kiloes = {};
                        result = verify.icon;
                        echoed = kiloes;
                        verify = copyDataProperties(echoed, result);
                        verify = 20;
                        sizing = 'width';
                        kiloes[sizing] = verify;
                        sizing = 'height';
                        kiloes[sizing] = verify;
                        foxtra['style'] = kiloes;
                        kiloes = romeon.style;
                        kiloes = kiloes.color;
                        foxtra['color'] = kiloes;
                        foxtra = zuuluu.bind(tangon)(backup, foxtra);
                        oscard['selectedIcon'] = foxtra;
                        foxtra = romeon.style;
                        oscard['style'] = foxtra;
                        romeon = romeon.status;
                        oscard['status'] = romeon;
                        offset = _closure2_slot0;
                        offset = offset.state;
                        offset = yankee === offset;
                        oscard['isSelected'] = offset;
                        oscard['index'] = report;
                        offset = function(argFoo) { // Original name: onLayout
                            _fun00005: for(var _fun00006_ip = 0; ; ) switch(_fun00006_ip) {
 0:
                                entity = argFoo;
                                michal = entity.nativeEvent;
                                michal = michal.layout;
                                tangon = michal.height;
                                zuuluu = _closure2_slot1;
                                if(!(tangon > zuuluu)) { _fun00006_ip = 57; continue _fun00005 }
 30:
                                zuuluu = _closure2_slot2;
                                entity = entity.nativeEvent;
                                entity = entity.layout;
                                michal = entity.height;
                                entity = undefined;
                                entity = zuuluu.bind(entity)(michal);
 57:
                                entity = undefined;
                                return entity;
                            }
                        };
                        oscard['onLayout'] = offset;
                        oscard['size'] = verify;
                        oscard['numOptions'] = option;
                        oscard = zuuluu.bind(tangon)(golfie, oscard, report);
                        entity['children'] = oscard;
                        entity = zuuluu.bind(tangon)(michal, entity, report);
                        return entity;
                    }
                };
                entity = michal.bind(zuuluu)(entity);
                return entity;
            };
            romeon = oscard.bind(golfie)(zuuluu, report);
            report = _closure1_slot0;
            oscard = _closure1_slot2;
            zuuluu = 17;
            zuuluu = oscard[zuuluu];
            golfie = report.bind(tangon)(zuuluu);
            oscard = golfie.useStateFromStores;
            zuuluu = _closure1_slot6;
            report = new Array(1);
            report[0] = zuuluu;
            zuuluu = function() {
                michal = _closure1_slot6;
                entity = michal.getCurrentUser;
                entity = entity.bind(michal)();
                return entity;
            };
            foxtra = oscard.bind(golfie)(report, zuuluu);
            verify = null;
            if(!(verify == foxtra)) { _fun00002_ip = 231; continue _fun00001 }
 209:
            report = _closure1_slot1;
            oscard = _closure1_slot2;
            zuuluu = 19;
            zuuluu = oscard[zuuluu];
            kiloes = report.bind(tangon)(zuuluu);
            _fun00002_ip = 262; continue _fun00001;
 231:
            report = _closure1_slot1;
            oscard = _closure1_slot2;
            zuuluu = 18;
            zuuluu = oscard[zuuluu];
            report = report.bind(tangon)(zuuluu);
            zuuluu = report.getUserAvatarSource;
            kiloes = zuuluu.bind(report)(foxtra);
 262:
            entity = entity.state;
            entity = michal[entity];
            sequen = entity.title;
            output = entity.description;
            entity = entity.style;
            var _closure2_slot5 = entity;
            zuuluu = _closure1_slot10;
            michal = _closure1_slot5;
            entity = {};
            oscard = backup.container;
            report = new Array(1);
            report[0] = oscard;
            entity['style'] = report;
            oscard = _closure1_slot9;
            report = {};
            golfie = backup.avatarBackground;
            report['style'] = golfie;
            option = _closure1_slot1;
            result = _closure1_slot2;
            yankee = 20;
            golfie = result[yankee];
            option = option.bind(tangon)(golfie);
            golfie = {};
            golfie['source'] = kiloes;
            kiloes = _closure1_slot0;
            yankee = result[yankee];
            yankee = kiloes.bind(tangon)(yankee);
            yankee = yankee.AvatarSizes;
            yankee = yankee.XXLARGE;
            golfie['size'] = yankee;
            kiloes = verify == foxtra;
            yankee = undefined;
            if(kiloes) { _fun00002_ip = 402; continue _fun00001 }
 397:
            yankee = foxtra.username;
 402:
            foxtra = verify != yankee;
            verify = '';
            if(!foxtra) { _fun00002_ip = 416; continue _fun00001 }
 413:
            verify = yankee;
 416:
            golfie['aria-label'] = verify;
            golfie = oscard.bind(tangon)(option, golfie);
            report['children'] = golfie;
            oscard = oscard.bind(tangon)(michal, report);
            report = new Array(2);
            report[0] = oscard;
            option = _closure1_slot10;
            golfie = _closure1_slot5;
            oscard = {};
            verify = backup.body;
            oscard['style'] = verify;
            verify = {};
            yankee = backup.bodyText;
            verify['style'] = yankee;
            foxtra = _closure1_slot9;
            kiloes = _closure1_slot0;
            result = _closure1_slot2;
            yankee = 21;
            offset = result[yankee];
            offset = kiloes.bind(tangon)(offset);
            update = offset.Text;
            offset = {'variant': 'heading-lg/medium', 'color': 'text-normal'};
            source = {};
            echoed = 'center';
            source['textAlign'] = echoed;
            offset['style'] = source;
            source = 11;
            source = result[source];
            source = kiloes.bind(tangon)(source);
            vacuum = source.intl;
            ctrled = vacuum.format;
            source = {};
            config = function(argFoo, argBar) { // Original name: hook
                report = _closure1_slot9;
                michal = _closure1_slot0;
                zuuluu = _closure1_slot2;
                entity = 21;
                entity = zuuluu[entity];
                tangon = undefined;
                entity = michal.bind(tangon)(entity);
                zuuluu = entity.Text;
                michal = {};
                entity = _closure2_slot5;
                michal['style'] = entity;
                entity = 'heading-lg/bold';
                michal['variant'] = entity;
                entity = argFoo;
                michal['children'] = entity;
                entity = argBar;
                entity = report.bind(tangon)(zuuluu, michal, entity);
                return entity;
            };
            source['hook'] = config;
            source = ctrled.bind(vacuum)(sequen, source);
            offset['children'] = source;
            update = foxtra.bind(tangon)(update, offset);
            offset = new Array(2);
            offset[0] = update;
            yankee = result[yankee];
            yankee = kiloes.bind(tangon)(yankee);
            kiloes = yankee.Text;
            yankee = {'variant': 'text-sm/medium', 'color': 'text-muted'};
            result = {};
            result['textAlign'] = echoed;
            yankee['style'] = result;
            yankee['children'] = output;
            yankee = foxtra.bind(tangon)(kiloes, yankee);
            offset[1] = yankee;
            verify['children'] = offset;
            offset = option.bind(tangon)(golfie, verify);
            verify = new Array(2);
            verify[0] = offset;
            offset = {};
            kiloes = backup.health;
            yankee = new Array(2);
            yankee[0] = kiloes;
            kiloes = {};
            kiloes['height'] = sizing;
            yankee[1] = kiloes;
            offset['style'] = yankee;
            yankee = {};
            backup = backup.line;
            yankee['style'] = backup;
            foxtra = foxtra.bind(tangon)(golfie, yankee);
            yankee = new Array(2);
            yankee[0] = foxtra;
            yankee[1] = romeon;
            offset['children'] = yankee;
            offset = option.bind(tangon)(golfie, offset);
            verify[1] = offset;
            oscard['children'] = verify;
            oscard = option.bind(tangon)(golfie, oscard);
            report[1] = oscard;
            entity['children'] = report;
            entity = zuuluu.bind(tangon)(michal, entity);
            return entity;
        }
    };
    zuuluu['default'] = michal;
    return entity;
})();