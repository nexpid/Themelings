// app/modules/safety_hub/native/SafetyHubAccountStanding.tsx
export default (function(argFoo, argBar, argBaz, argCorge, _, argFred, argPlugh) {
    report = argBar;
    yankee = argBaz;
    zulu = argFred;
    oscar = argPlugh;
    var _closure1_slot0 = report;
    var _closure1_slot1 = yankee;
    var _closure1_slot2 = oscar;
    entity = global;
    options = entity.Object;
    golf = options.defineProperty;
    tango = {};
    entity = true;
    tango['value'] = entity;
    entity = '__esModule';
    entity = golf.bind(options)(zulu, entity, tango);
    entity = 0;
    tango = oscar[entity];
    entity = undefined;
    tango = yankee.bind(entity)(tango);
    var _closure1_slot3 = tango;
    tango = 1;
    golf = oscar[tango];
    tango = argCorge;
    tango = tango.bind(entity)(golf);
    var _closure1_slot4 = tango;
    tango = 2;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.View;
    var _closure1_slot5 = tango;
    tango = 3;
    tango = oscar[tango];
    tango = yankee.bind(entity)(tango);
    var _closure1_slot6 = tango;
    tango = 4;
    tango = oscar[tango];
    tango = yankee.bind(entity)(tango);
    var _closure1_slot7 = tango;
    tango = 5;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.SafetyHubLinks;
    var _closure1_slot8 = tango;
    tango = 6;
    golf = oscar[tango];
    golf = report.bind(entity)(golf);
    golf = golf.jsx;
    var _closure1_slot9 = golf;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.jsxs;
    var _closure1_slot10 = tango;
    tango = {};
    golf = 7;
    options = oscar[golf];
    options = report.bind(entity)(options);
    options = options.AccountStandingState;
    verify = options.ALL_GOOD;
    options = {};
    offset = '0%';
    options['left'] = offset;
    tango[verify] = options;
    options = oscar[golf];
    options = report.bind(entity)(options);
    options = options.AccountStandingState;
    offset = options.LIMITED;
    options = {};
    verify = '25%';
    options['left'] = verify;
    foxtrot = {};
    verify = 8;
    romeo = oscar[verify];
    romeo = report.bind(entity)(romeo);
    romeo = romeo.SUBWAY_MARKER_WIDTH;
    backup = -0.5;
    romeo = backup * romeo;
    foxtrot['translateX'] = romeo;
    romeo = new Array(1);
    romeo[0] = foxtrot;
    options['transform'] = romeo;
    tango[offset] = options;
    options = oscar[golf];
    options = report.bind(entity)(options);
    options = options.AccountStandingState;
    offset = options.VERY_LIMITED;
    options = {};
    romeo = '50%';
    options['left'] = romeo;
    foxtrot = {};
    romeo = oscar[verify];
    romeo = report.bind(entity)(romeo);
    romeo = romeo.SUBWAY_MARKER_WIDTH;
    romeo = backup * romeo;
    foxtrot['translateX'] = romeo;
    romeo = new Array(1);
    romeo[0] = foxtrot;
    options['transform'] = romeo;
    tango[offset] = options;
    options = oscar[golf];
    options = report.bind(entity)(options);
    options = options.AccountStandingState;
    offset = options.AT_RISK;
    options = {};
    romeo = '75%';
    options['left'] = romeo;
    foxtrot = {};
    romeo = oscar[verify];
    romeo = report.bind(entity)(romeo);
    romeo = romeo.SUBWAY_MARKER_WIDTH;
    romeo = backup * romeo;
    foxtrot['translateX'] = romeo;
    romeo = new Array(1);
    romeo[0] = foxtrot;
    options['transform'] = romeo;
    tango[offset] = options;
    golf = oscar[golf];
    golf = report.bind(entity)(golf);
    golf = golf.AccountStandingState;
    options = golf.SUSPENDED;
    golf = {};
    offset = '100%';
    golf['left'] = offset;
    offset = {};
    verify = oscar[verify];
    verify = report.bind(entity)(verify);
    verify = verify.SUBWAY_MARKER_WIDTH;
    verify = -verify;
    offset['translateX'] = verify;
    verify = new Array(1);
    verify[0] = offset;
    golf['transform'] = verify;
    tango[options] = golf;
    var _closure1_slot11 = tango;
    tango = 9;
    tango = oscar[tango];
    options = report.bind(entity)(tango);
    golf = options.createStyles;
    tango = {};
    verify = {'display': 'flex', 'flexDirection': 'column', 'rowGap': 12, 'padding': 24, 'alignItems': 'center', 'justifyContent': 'center'};
    offset = 10;
    romeo = oscar[offset];
    romeo = yankee.bind(entity)(romeo);
    romeo = romeo.colors;
    romeo = romeo.CARD_PRIMARY_BG;
    verify['backgroundColor'] = romeo;
    romeo = oscar[offset];
    romeo = yankee.bind(entity)(romeo);
    romeo = romeo.radii;
    romeo = romeo.md;
    verify['borderRadius'] = romeo;
    tango['container'] = verify;
    verify = {'position': 'relative', 'justifyContent': 'center', 'alignItems': 'center'};
    romeo = oscar[offset];
    romeo = yankee.bind(entity)(romeo);
    romeo = romeo.spacing;
    romeo = romeo.PX_4;
    verify['padding'] = romeo;
    romeo = oscar[offset];
    romeo = yankee.bind(entity)(romeo);
    romeo = romeo.colors;
    romeo = romeo.BG_MOD_STRONG;
    verify['backgroundColor'] = romeo;
    romeo = oscar[offset];
    romeo = yankee.bind(entity)(romeo);
    romeo = romeo.radii;
    romeo = romeo.round;
    verify['borderRadius'] = romeo;
    tango['avatarBackground'] = verify;
    verify = {};
    romeo = oscar[offset];
    romeo = yankee.bind(entity)(romeo);
    romeo = romeo.colors;
    romeo = romeo.STATUS_POSITIVE;
    verify['color'] = romeo;
    tango['good'] = verify;
    verify = {};
    romeo = oscar[offset];
    romeo = yankee.bind(entity)(romeo);
    romeo = romeo.colors;
    romeo = romeo.STATUS_WARNING;
    verify['color'] = romeo;
    tango['limited'] = verify;
    verify = {};
    romeo = '#FF7A00';
    verify['color'] = romeo;
    tango['veryLimited'] = verify;
    verify = {};
    romeo = oscar[offset];
    romeo = yankee.bind(entity)(romeo);
    romeo = romeo.colors;
    romeo = romeo.STATUS_DANGER;
    verify['color'] = romeo;
    tango['atRisk'] = verify;
    verify = {};
    romeo = oscar[offset];
    romeo = yankee.bind(entity)(romeo);
    romeo = romeo.colors;
    romeo = romeo.STATUS_DANGER;
    verify['color'] = romeo;
    tango['suspended'] = verify;
    verify = {'display': 'flex', 'rowGap': 40, 'width': '100%'};
    tango['body'] = verify;
    verify = {};
    romeo = oscar[offset];
    romeo = yankee.bind(entity)(romeo);
    romeo = romeo.spacing;
    romeo = romeo.PX_8;
    verify['rowGap'] = romeo;
    tango['bodyText'] = verify;
    verify = {'position': 'relative', 'left': 0, 'right': 0, 'marginBottom': 18};
    tango['health'] = verify;
    verify = {'height': 3, 'width': '100%', 'position': 'absolute', 'top': 8.5};
    romeo = 'absolute';
    foxtrot = oscar[offset];
    foxtrot = yankee.bind(entity)(foxtrot);
    foxtrot = foxtrot.colors;
    foxtrot = foxtrot.BG_BASE_TERTIARY;
    verify['backgroundColor'] = foxtrot;
    tango['line'] = verify;
    verify = {};
    verify['position'] = romeo;
    tango['subwayMarker'] = verify;
    verify = {};
    romeo = oscar[offset];
    romeo = yankee.bind(entity)(romeo);
    romeo = romeo.radii;
    romeo = romeo.round;
    verify['borderRadius'] = romeo;
    offset = oscar[offset];
    offset = yankee.bind(entity)(offset);
    offset = offset.colors;
    offset = offset.BG_SURFACE_RAISED;
    verify['backgroundColor'] = offset;
    tango['icon'] = verify;
    tango = golf.bind(options)(tango);
    var _closure1_slot12 = tango;
    tango = 22;
    tango = oscar[tango];
    oscar = report.bind(entity)(tango);
    report = oscar.fileFinishedImporting;
    tango = 'modules/safety_hub/native/SafetyHubAccountStanding.tsx';
    tango = report.bind(oscar)(tango);
    mike = function() { // Original name: SafetyHubAccountStanding
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            mike = _closure1_slot7;
            entity = mike.getAccountStanding;
            entity = entity.bind(mike)();
            var _closure2_slot0 = entity;
            golf = _closure1_slot4;
            zulu = golf.useState;
            mike = 0;
            oscar = zulu.bind(golf)(mike);
            report = _closure1_slot3;
            tango = undefined;
            zulu = 2;
            zulu = report.bind(tango)(oscar, zulu);
            sizing = zulu[mike];
            var _closure2_slot1 = sizing;
            mike = 1;
            mike = zulu[mike];
            var _closure2_slot2 = mike;
            mike = _closure1_slot12;
            backup = mike.bind(tango)();
            var _closure2_slot3 = backup;
            report = golf.useMemo;
            zulu = new Array(1);
            zulu[0] = backup;
            mike = function() {
                entity = {};
                options = _closure1_slot0;
                golf = _closure1_slot2;
                mike = 7;
                zulu = golf[mike];
                oscar = undefined;
                zulu = options.bind(oscar)(zulu);
                zulu = zulu.AccountStandingState;
                offset = zulu.ALL_GOOD;
                zulu = {};
                verify = 11;
                tango = golf[verify];
                tango = options.bind(oscar)(tango);
                tango = tango.t;
                tango = tango.uaKrRk;
                zulu['title'] = tango;
                tango = golf[verify];
                tango = options.bind(oscar)(tango);
                foxtrot = tango.intl;
                romeo = foxtrot.format;
                tango = golf[verify];
                tango = options.bind(oscar)(tango);
                tango = tango.t;
                yankee = tango.pEdBDw;
                tango = {};
                backup = _closure1_slot8;
                kilo = backup.TOS_LINK;
                tango['termsOfService'] = kilo;
                backup = backup.COMMUNITY_GUIDELINES;
                tango['communityGuidelines'] = backup;
                tango = romeo.bind(foxtrot)(yankee, tango);
                zulu['description'] = tango;
                tango = golf[verify];
                tango = options.bind(oscar)(tango);
                tango = tango.t;
                tango = tango./Idfam;
                zulu['status'] = tango;
                tango = _closure2_slot3;
                yankee = tango.good;
                zulu['style'] = yankee;
                yankee = 12;
                yankee = golf[yankee];
                yankee = options.bind(oscar)(yankee);
                yankee = yankee.CircleCheckIcon;
                zulu['CustomIcon'] = yankee;
                entity[offset] = zulu;
                zulu = golf[mike];
                zulu = options.bind(oscar)(zulu);
                zulu = zulu.AccountStandingState;
                offset = zulu.LIMITED;
                zulu = {};
                yankee = golf[verify];
                yankee = options.bind(oscar)(yankee);
                yankee = yankee.t;
                yankee = yankee.epkcmZ;
                zulu['title'] = yankee;
                yankee = golf[verify];
                yankee = options.bind(oscar)(yankee);
                foxtrot = yankee.intl;
                romeo = foxtrot.string;
                yankee = golf[verify];
                yankee = options.bind(oscar)(yankee);
                yankee = yankee.t;
                yankee = yankee.774jub;
                yankee = romeo.bind(foxtrot)(yankee);
                zulu['description'] = yankee;
                yankee = golf[verify];
                yankee = options.bind(oscar)(yankee);
                yankee = yankee.t;
                yankee = yankee.umleq6;
                zulu['status'] = yankee;
                yankee = tango.limited;
                zulu['style'] = yankee;
                romeo = 13;
                yankee = golf[romeo];
                yankee = options.bind(oscar)(yankee);
                yankee = yankee.CircleWarningIcon;
                zulu['CustomIcon'] = yankee;
                report = _closure1_slot1;
                yankee = 14;
                foxtrot = golf[yankee];
                foxtrot = report.bind(oscar)(foxtrot);
                zulu['iconSource'] = foxtrot;
                entity[offset] = zulu;
                zulu = golf[mike];
                zulu = options.bind(oscar)(zulu);
                zulu = zulu.AccountStandingState;
                offset = zulu.VERY_LIMITED;
                zulu = {};
                foxtrot = golf[verify];
                foxtrot = options.bind(oscar)(foxtrot);
                foxtrot = foxtrot.t;
                foxtrot = foxtrot.crzE2d;
                zulu['title'] = foxtrot;
                foxtrot = golf[verify];
                foxtrot = options.bind(oscar)(foxtrot);
                kilo = foxtrot.intl;
                backup = kilo.string;
                foxtrot = golf[verify];
                foxtrot = options.bind(oscar)(foxtrot);
                foxtrot = foxtrot.t;
                foxtrot = foxtrot.T/Ufh4;
                foxtrot = backup.bind(kilo)(foxtrot);
                zulu['description'] = foxtrot;
                foxtrot = golf[verify];
                foxtrot = options.bind(oscar)(foxtrot);
                foxtrot = foxtrot.t;
                foxtrot = foxtrot.WBtMHR;
                zulu['status'] = foxtrot;
                foxtrot = tango.veryLimited;
                zulu['style'] = foxtrot;
                foxtrot = golf[romeo];
                foxtrot = options.bind(oscar)(foxtrot);
                foxtrot = foxtrot.CircleWarningIcon;
                zulu['CustomIcon'] = foxtrot;
                foxtrot = golf[yankee];
                foxtrot = report.bind(oscar)(foxtrot);
                zulu['iconSource'] = foxtrot;
                entity[offset] = zulu;
                zulu = golf[mike];
                zulu = options.bind(oscar)(zulu);
                zulu = zulu.AccountStandingState;
                offset = zulu.AT_RISK;
                zulu = {};
                foxtrot = golf[verify];
                foxtrot = options.bind(oscar)(foxtrot);
                foxtrot = foxtrot.t;
                foxtrot = foxtrot.XRNVzM;
                zulu['title'] = foxtrot;
                foxtrot = golf[verify];
                foxtrot = options.bind(oscar)(foxtrot);
                kilo = foxtrot.intl;
                backup = kilo.string;
                foxtrot = golf[verify];
                foxtrot = options.bind(oscar)(foxtrot);
                foxtrot = foxtrot.t;
                foxtrot = foxtrot.hbH+9f;
                foxtrot = backup.bind(kilo)(foxtrot);
                zulu['description'] = foxtrot;
                foxtrot = golf[verify];
                foxtrot = options.bind(oscar)(foxtrot);
                foxtrot = foxtrot.t;
                foxtrot = foxtrot.7f+4Li;
                zulu['status'] = foxtrot;
                foxtrot = tango.atRisk;
                zulu['style'] = foxtrot;
                romeo = golf[romeo];
                romeo = options.bind(oscar)(romeo);
                romeo = romeo.CircleWarningIcon;
                zulu['CustomIcon'] = romeo;
                yankee = golf[yankee];
                yankee = report.bind(oscar)(yankee);
                zulu['iconSource'] = yankee;
                entity[offset] = zulu;
                mike = golf[mike];
                mike = options.bind(oscar)(mike);
                mike = mike.AccountStandingState;
                zulu = mike.SUSPENDED;
                mike = {};
                offset = golf[verify];
                offset = options.bind(oscar)(offset);
                offset = offset.t;
                offset = offset.MExFk5;
                mike['title'] = offset;
                offset = golf[verify];
                offset = options.bind(oscar)(offset);
                romeo = offset.intl;
                yankee = romeo.string;
                offset = golf[verify];
                offset = options.bind(oscar)(offset);
                offset = offset.t;
                offset = offset.2liUvr;
                offset = yankee.bind(romeo)(offset);
                mike['description'] = offset;
                verify = golf[verify];
                verify = options.bind(oscar)(verify);
                verify = verify.t;
                verify = verify.0OONGB;
                mike['status'] = verify;
                tango = tango.suspended;
                mike['style'] = tango;
                tango = 15;
                tango = golf[tango];
                tango = options.bind(oscar)(tango);
                tango = tango.CircleXIcon;
                mike['CustomIcon'] = tango;
                tango = 16;
                tango = golf[tango];
                tango = report.bind(oscar)(tango);
                mike['iconSource'] = tango;
                entity[zulu] = mike;
                return entity;
            };
            mike = report.bind(golf)(mike, zulu);
            var _closure2_slot4 = mike;
            oscar = golf.useMemo;
            report = new Array(4);
            report[0] = entity;
            report[1] = mike;
            report[2] = sizing;
            report[3] = backup;
            zulu = function() {
                entity = global;
                zulu = entity.Object;
                mike = zulu.entries;
                entity = _closure2_slot4;
                zulu = mike.bind(zulu)(entity);
                mike = zulu.map;
                entity = function(argFoo, argBar) {
                    _fun00003: for(var _fun00004_ip = 0; ; ) switch(_fun00004_ip) {
 0:
                        report = argBar;
                        oscar = argFoo;
                        entity = oscar[Symbol.iterator];
                        oscar = entity().next;
                        golf = oscar().value;
                        mike = entity;
                        tango = undefined;
                        mike = mike === tango;
                        zulu = undefined;
                        if(mike) { _fun00004_ip = 30; continue _fun00003 }
 27:
                        zulu = golf;
 30:
                        romeo = undefined;
                        if(mike) { _fun00004_ip = 60; continue _fun00003 }
 35:
                        golf = oscar().value;
                        oscar = entity;
                        oscar = oscar === tango;
                        romeo = undefined;
                        mike = oscar;
                        if(oscar) { _fun00004_ip = 60; continue _fun00003 }
 54:
                        romeo = golf;
                        mike = oscar;
 60:
                        if(mike) { _fun00004_ip = 66; continue _fun00003 }
 63:
                        entity.return();
 66:
                        entity = global;
                        mike = entity.parseInt;
                        yankee = mike.bind(tango)(zulu);
                        zulu = entity.Object;
                        mike = zulu.keys;
                        entity = _closure2_slot4;
                        entity = mike.bind(zulu)(entity);
                        options = entity.length;
                        backup = romeo.CustomIcon;
                        zulu = _closure1_slot9;
                        mike = _closure1_slot5;
                        entity = {};
                        verify = _closure2_slot3;
                        foxtrot = verify.subwayMarker;
                        golf = new Array(2);
                        golf[0] = foxtrot;
                        foxtrot = _closure1_slot11;
                        foxtrot = foxtrot[yankee];
                        golf[1] = foxtrot;
                        entity['style'] = golf;
                        golf = _closure1_slot1;
                        foxtrot = _closure1_slot2;
                        oscar = 8;
                        oscar = foxtrot[oscar];
                        golf = golf.bind(tango)(oscar);
                        oscar = {};
                        foxtrot = {};
                        kilo = {};
                        result = verify.icon;
                        echo = kilo;
                        verify = copyDataProperties(echo, result);
                        verify = 20;
                        sizing = 'width';
                        kilo[sizing] = verify;
                        sizing = 'height';
                        kilo[sizing] = verify;
                        foxtrot['style'] = kilo;
                        kilo = romeo.style;
                        kilo = kilo.color;
                        foxtrot['color'] = kilo;
                        foxtrot = zulu.bind(tango)(backup, foxtrot);
                        oscar['selectedIcon'] = foxtrot;
                        foxtrot = romeo.style;
                        oscar['style'] = foxtrot;
                        romeo = romeo.status;
                        oscar['status'] = romeo;
                        offset = _closure2_slot0;
                        offset = offset.state;
                        offset = yankee === offset;
                        oscar['isSelected'] = offset;
                        oscar['index'] = report;
                        offset = function(argFoo) { // Original name: onLayout
                            _fun00005: for(var _fun00006_ip = 0; ; ) switch(_fun00006_ip) {
 0:
                                entity = argFoo;
                                mike = entity.nativeEvent;
                                mike = mike.layout;
                                tango = mike.height;
                                zulu = _closure2_slot1;
                                if(!(tango > zulu)) { _fun00006_ip = 57; continue _fun00005 }
 30:
                                zulu = _closure2_slot2;
                                entity = entity.nativeEvent;
                                entity = entity.layout;
                                mike = entity.height;
                                entity = undefined;
                                entity = zulu.bind(entity)(mike);
 57:
                                entity = undefined;
                                return entity;
                            }
                        };
                        oscar['onLayout'] = offset;
                        oscar['size'] = verify;
                        oscar['numOptions'] = options;
                        oscar = zulu.bind(tango)(golf, oscar, report);
                        entity['children'] = oscar;
                        entity = zulu.bind(tango)(mike, entity, report);
                        return entity;
                    }
                };
                entity = mike.bind(zulu)(entity);
                return entity;
            };
            romeo = oscar.bind(golf)(zulu, report);
            report = _closure1_slot0;
            oscar = _closure1_slot2;
            zulu = 17;
            zulu = oscar[zulu];
            golf = report.bind(tango)(zulu);
            oscar = golf.useStateFromStores;
            zulu = _closure1_slot6;
            report = new Array(1);
            report[0] = zulu;
            zulu = function() {
                mike = _closure1_slot6;
                entity = mike.getCurrentUser;
                entity = entity.bind(mike)();
                return entity;
            };
            foxtrot = oscar.bind(golf)(report, zulu);
            verify = null;
            if(!(verify == foxtrot)) { _fun00002_ip = 231; continue _fun00001 }
 209:
            report = _closure1_slot1;
            oscar = _closure1_slot2;
            zulu = 19;
            zulu = oscar[zulu];
            kilo = report.bind(tango)(zulu);
            _fun00002_ip = 262; continue _fun00001;
 231:
            report = _closure1_slot1;
            oscar = _closure1_slot2;
            zulu = 18;
            zulu = oscar[zulu];
            report = report.bind(tango)(zulu);
            zulu = report.getUserAvatarSource;
            kilo = zulu.bind(report)(foxtrot);
 262:
            entity = entity.state;
            entity = mike[entity];
            sequence = entity.title;
            output = entity.description;
            entity = entity.style;
            var _closure2_slot5 = entity;
            zulu = _closure1_slot10;
            mike = _closure1_slot5;
            entity = {};
            oscar = backup.container;
            report = new Array(1);
            report[0] = oscar;
            entity['style'] = report;
            oscar = _closure1_slot9;
            report = {};
            golf = backup.avatarBackground;
            report['style'] = golf;
            options = _closure1_slot1;
            result = _closure1_slot2;
            yankee = 20;
            golf = result[yankee];
            options = options.bind(tango)(golf);
            golf = {};
            golf['source'] = kilo;
            kilo = _closure1_slot0;
            yankee = result[yankee];
            yankee = kilo.bind(tango)(yankee);
            yankee = yankee.AvatarSizes;
            yankee = yankee.XXLARGE;
            golf['size'] = yankee;
            kilo = verify == foxtrot;
            yankee = undefined;
            if(kilo) { _fun00002_ip = 402; continue _fun00001 }
 397:
            yankee = foxtrot.username;
 402:
            foxtrot = verify != yankee;
            verify = '';
            if(!foxtrot) { _fun00002_ip = 416; continue _fun00001 }
 413:
            verify = yankee;
 416:
            golf['aria-label'] = verify;
            golf = oscar.bind(tango)(options, golf);
            report['children'] = golf;
            oscar = oscar.bind(tango)(mike, report);
            report = new Array(2);
            report[0] = oscar;
            options = _closure1_slot10;
            golf = _closure1_slot5;
            oscar = {};
            verify = backup.body;
            oscar['style'] = verify;
            verify = {};
            yankee = backup.bodyText;
            verify['style'] = yankee;
            foxtrot = _closure1_slot9;
            kilo = _closure1_slot0;
            result = _closure1_slot2;
            yankee = 21;
            offset = result[yankee];
            offset = kilo.bind(tango)(offset);
            update = offset.Text;
            offset = {'variant': 'heading-lg/medium', 'color': 'text-normal'};
            source = {};
            echo = 'center';
            source['textAlign'] = echo;
            offset['style'] = source;
            source = 11;
            source = result[source];
            source = kilo.bind(tango)(source);
            vacuum = source.intl;
            control = vacuum.format;
            source = {};
            config = function(argFoo) { // Original name: hook
                tango = _closure1_slot9;
                mike = _closure1_slot0;
                zulu = _closure1_slot2;
                entity = 21;
                entity = zulu[entity];
                zulu = undefined;
                entity = mike.bind(zulu)(entity);
                mike = entity.Text;
                entity = {};
                report = _closure2_slot5;
                entity['style'] = report;
                report = 'heading-lg/bold';
                entity['variant'] = report;
                report = argFoo;
                entity['children'] = report;
                entity = tango.bind(zulu)(mike, entity);
                return entity;
            };
            source['hook'] = config;
            source = control.bind(vacuum)(sequence, source);
            offset['children'] = source;
            update = foxtrot.bind(tango)(update, offset);
            offset = new Array(2);
            offset[0] = update;
            yankee = result[yankee];
            yankee = kilo.bind(tango)(yankee);
            kilo = yankee.Text;
            yankee = {'variant': 'text-sm/medium', 'color': 'text-muted'};
            result = {};
            result['textAlign'] = echo;
            yankee['style'] = result;
            yankee['children'] = output;
            yankee = foxtrot.bind(tango)(kilo, yankee);
            offset[1] = yankee;
            verify['children'] = offset;
            offset = options.bind(tango)(golf, verify);
            verify = new Array(2);
            verify[0] = offset;
            offset = {};
            kilo = backup.health;
            yankee = new Array(2);
            yankee[0] = kilo;
            kilo = {};
            kilo['height'] = sizing;
            yankee[1] = kilo;
            offset['style'] = yankee;
            yankee = {};
            backup = backup.line;
            yankee['style'] = backup;
            foxtrot = foxtrot.bind(tango)(golf, yankee);
            yankee = new Array(2);
            yankee[0] = foxtrot;
            yankee[1] = romeo;
            offset['children'] = yankee;
            offset = options.bind(tango)(golf, offset);
            verify[1] = offset;
            oscar['children'] = verify;
            oscar = options.bind(tango)(golf, oscar);
            report[1] = oscar;
            entity['children'] = report;
            entity = zulu.bind(tango)(mike, entity);
            return entity;
        }
    };
    zulu['default'] = mike;
    return entity;
})();