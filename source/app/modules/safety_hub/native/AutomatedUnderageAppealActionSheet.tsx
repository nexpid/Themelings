// app/modules/safety_hub/native/AutomatedUnderageAppealActionSheet.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    report = argBar;
    yankee = argBaz;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    var _closure1_slot1 = yankee;
    var _closure1_slot2 = oscard;
    entity = global;
    option = entity.Object;
    golfie = option.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(option)(zuuluu, entity, tangon);
    entity = 0;
    golfie = oscard[entity];
    tangon = argCor;
    entity = undefined;
    tangon = tangon.bind(entity)(golfie);
    var _closure1_slot3 = tangon;
    foxtra = 1;
    tangon = oscard[foxtra];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.View;
    var _closure1_slot4 = tangon;
    tangon = 2;
    tangon = oscard[tangon];
    tangon = yankee.bind(entity)(tangon);
    var _closure1_slot5 = tangon;
    tangon = 3;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    golfie = tangon.AGE_APPEAL_ACTION_SHEET_NAME;
    var _closure1_slot6 = golfie;
    tangon = tangon.SafetyHubLinks;
    var _closure1_slot7 = tangon;
    tangon = 4;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    golfie = tangon.jsx;
    var _closure1_slot8 = golfie;
    tangon = tangon.jsxs;
    var _closure1_slot9 = tangon;
    tangon = 5;
    tangon = oscard[tangon];
    option = report.bind(entity)(tangon);
    golfie = option.createStyles;
    tangon = {};
    verify = {};
    verify['flex'] = foxtra;
    offset = 6;
    romeon = oscard[offset];
    romeon = yankee.bind(entity)(romeon);
    romeon = romeon.spacing;
    romeon = romeon.PX_16;
    verify['paddingHorizontal'] = romeon;
    romeon = oscard[offset];
    romeon = yankee.bind(entity)(romeon);
    romeon = romeon.spacing;
    romeon = romeon.PX_8;
    verify['paddingTop'] = romeon;
    tangon['container'] = verify;
    verify = {};
    romeon = 'center';
    verify['alignItems'] = romeon;
    tangon['header'] = verify;
    verify = {};
    verify['flex'] = foxtra;
    foxtra = oscard[offset];
    foxtra = yankee.bind(entity)(foxtra);
    foxtra = foxtra.spacing;
    foxtra = foxtra.PX_16;
    verify['gap'] = foxtra;
    tangon['content'] = verify;
    verify = {};
    foxtra = oscard[offset];
    foxtra = yankee.bind(entity)(foxtra);
    foxtra = foxtra.spacing;
    foxtra = foxtra.PX_4;
    verify['gap'] = foxtra;
    tangon['moreInfo'] = verify;
    verify = {};
    foxtra = oscard[offset];
    foxtra = yankee.bind(entity)(foxtra);
    foxtra = foxtra.spacing;
    foxtra = foxtra.PX_12;
    verify['marginTop'] = foxtra;
    verify['textAlign'] = romeon;
    romeon = oscard[offset];
    romeon = yankee.bind(entity)(romeon);
    romeon = romeon.spacing;
    romeon = romeon.PX_32;
    verify['paddingBottom'] = romeon;
    tangon['learnMore'] = verify;
    verify = {};
    romeon = oscard[offset];
    romeon = yankee.bind(entity)(romeon);
    romeon = romeon.spacing;
    romeon = romeon.PX_8;
    verify['marginTop'] = romeon;
    tangon['footer'] = verify;
    verify = {'alignItems': 'center', 'justifyContent': 'center', 'width': 32, 'height': 32};
    romeon = oscard[offset];
    romeon = yankee.bind(entity)(romeon);
    romeon = romeon.radii;
    romeon = romeon.round;
    verify['borderRadius'] = romeon;
    offset = oscard[offset];
    offset = yankee.bind(entity)(offset);
    offset = offset.colors;
    offset = offset.BG_MOD_SUBTLE;
    verify['backgroundColor'] = offset;
    tangon['number'] = verify;
    tangon = golfie.bind(option)(tangon);
    var _closure1_slot10 = tangon;
    golfie = {};
    option = 7;
    tangon = oscard[option];
    tangon = report.bind(entity)(tangon);
    offset = tangon.intl;
    verify = offset.string;
    tangon = oscard[option];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.t;
    tangon = tangon.1+E7LC;
    tangon = verify.bind(offset)(tangon);
    golfie['title'] = tangon;
    tangon = oscard[option];
    tangon = report.bind(entity)(tangon);
    offset = tangon.intl;
    verify = offset.string;
    tangon = oscard[option];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.t;
    tangon = tangon.BXiat7;
    tangon = verify.bind(offset)(tangon);
    golfie['description'] = tangon;
    tangon = new Array(3);
    tangon[0] = golfie;
    golfie = {};
    verify = oscard[option];
    verify = report.bind(entity)(verify);
    yankee = verify.intl;
    offset = yankee.string;
    verify = oscard[option];
    verify = report.bind(entity)(verify);
    verify = verify.t;
    verify = verify.iMQXtL;
    verify = offset.bind(yankee)(verify);
    golfie['title'] = verify;
    verify = oscard[option];
    verify = report.bind(entity)(verify);
    yankee = verify.intl;
    offset = yankee.string;
    verify = oscard[option];
    verify = report.bind(entity)(verify);
    verify = verify.t;
    verify = verify.oQ0vws;
    verify = offset.bind(yankee)(verify);
    golfie['description'] = verify;
    tangon[1] = golfie;
    golfie = {};
    verify = oscard[option];
    verify = report.bind(entity)(verify);
    yankee = verify.intl;
    offset = yankee.string;
    verify = oscard[option];
    verify = report.bind(entity)(verify);
    verify = verify.t;
    verify = verify.oY/z1d;
    verify = offset.bind(yankee)(verify);
    golfie['title'] = verify;
    verify = oscard[option];
    verify = report.bind(entity)(verify);
    offset = verify.intl;
    verify = offset.string;
    option = oscard[option];
    option = report.bind(entity)(option);
    option = option.t;
    option = option.wtj02d;
    option = verify.bind(offset)(option);
    golfie['description'] = option;
    tangon[2] = golfie;
    var _closure1_slot11 = tangon;
    tangon = 22;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/safety_hub/native/AutomatedUnderageAppealActionSheet.tsx';
    tangon = report.bind(oscard)(tangon);
    michal = function(argFoo) { // Original name: AutomatedUnderageAppealActionSheet
        michal = argFoo;
        entity = michal.onClose;
        var _closure2_slot0 = entity;
        michal = michal.classificationId;
        var _closure2_slot1 = michal;
        michal = _closure1_slot10;
        tangon = undefined;
        output = michal.bind(tangon)();
        var _closure2_slot2 = output;
        sizing = _closure1_slot0;
        update = _closure1_slot2;
        zuuluu = 8;
        michal = update[zuuluu];
        option = sizing.bind(tangon)(michal);
        golfie = option.useStateFromStores;
        michal = _closure1_slot5;
        oscard = new Array(1);
        oscard[0] = michal;
        report = function() {
            michal = _closure1_slot5;
            entity = michal.getAgeVerificationWebviewUrl;
            entity = entity.bind(michal)();
            return entity;
        };
        oscard = golfie.bind(option)(oscard, report);
        var _closure2_slot3 = oscard;
        zuuluu = update[zuuluu];
        golfie = sizing.bind(tangon)(zuuluu);
        report = golfie.useStateFromStores;
        zuuluu = new Array(1);
        zuuluu[0] = michal;
        michal = function() {
            michal = _closure1_slot5;
            entity = michal.getIsLoadingAgeVerification;
            entity = entity.bind(michal)();
            return entity;
        };
        backup = report.bind(golfie)(zuuluu, michal);
        golfie = _closure1_slot1;
        michal = 9;
        michal = update[michal];
        michal = golfie.bind(tangon)(michal);
        michal = michal.bind(tangon)();
        romeon = michal.bottom;
        report = _closure1_slot3;
        zuuluu = report.useCallback;
        michal = new Array(1);
        michal[0] = entity;
        entity = function() {
            _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
                zuuluu = _closure2_slot0;
                michal = null;
                if(!(michal != zuuluu)) { _fun00002_ip = 23; continue _fun00001 }
 13:
                michal = _closure2_slot0;
                entity = undefined;
                entity = michal.bind(entity)();
 23:
                zuuluu = _closure1_slot1;
                michal = _closure1_slot2;
                entity = 10;
                michal = michal[entity];
                entity = undefined;
                zuuluu = zuuluu.bind(entity)(michal);
                michal = zuuluu.close;
                michal = michal.bind(zuuluu)();
                return entity;
            }
        };
        entity = zuuluu.bind(report)(entity, michal);
        var _closure2_slot4 = entity;
        zuuluu = report.useCallback;
        michal = new Array(1);
        michal[0] = entity;
        entity = function() {
            zuuluu = _closure1_slot1;
            tangon = _closure1_slot2;
            michal = 10;
            report = tangon[michal];
            entity = undefined;
            oscard = zuuluu.bind(entity)(report);
            report = oscard.success;
            report = report.bind(oscard)();
            report = _closure2_slot4;
            report = report.bind(entity)();
            michal = tangon[michal];
            zuuluu = zuuluu.bind(entity)(michal);
            michal = zuuluu.start_verification_check;
            michal = michal.bind(zuuluu)();
            return entity;
        };
        entity = zuuluu.bind(report)(entity, michal);
        var _closure2_slot5 = entity;
        zuuluu = report.useEffect;
        michal = new Array(2);
        michal[0] = oscard;
        michal[1] = entity;
        entity = function() {
            _fun00003: for(var _fun00004_ip = 0; ; ) switch(_fun00004_ip) {
 0:
                michal = _closure2_slot3;
                entity = '';
                if(!(entity !== michal)) { _fun00004_ip = 98; continue _fun00003 }
 15:
                tangon = _closure1_slot1;
                report = _closure1_slot2;
                michal = 11;
                michal = report[michal];
                zuuluu = undefined;
                golfie = tangon.bind(zuuluu)(michal);
                oscard = golfie.showAgeVerification;
                michal = {};
                verify = _closure2_slot3;
                michal['webviewUrl'] = verify;
                option = _closure2_slot5;
                michal['onComplete'] = option;
                michal = oscard.bind(golfie)(michal);
                michal = 12;
                michal = report[michal];
                zuuluu = tangon.bind(zuuluu)(michal);
                michal = zuuluu.hideActionSheet;
                entity = _closure1_slot6;
                entity = michal.bind(zuuluu)(entity);
 98:
                entity = undefined;
                return entity;
            }
        };
        entity = zuuluu.bind(report)(entity, michal);
        zuuluu = _closure1_slot8;
        entity = 13;
        entity = update[entity];
        entity = sizing.bind(tangon)(entity);
        michal = entity.BottomSheet;
        entity = {};
        report = true;
        entity['scrollable'] = report;
        report = 425;
        option = report + romeon;
        report = 6;
        oscard = update[report];
        oscard = golfie.bind(tangon)(oscard);
        oscard = oscard.spacing;
        oscard = oscard.PX_16;
        oscard = option + oscard;
        report = update[report];
        report = golfie.bind(tangon)(report);
        report = report.spacing;
        report = report.PX_32;
        report = oscard + report;
        entity['startHeight'] = report;
        report = 14;
        report = update[report];
        report = sizing.bind(tangon)(report);
        oscard = report.BottomSheetScrollView;
        report = {};
        golfie = output.container;
        report['style'] = golfie;
        verify = _closure1_slot9;
        option = _closure1_slot4;
        golfie = {};
        offset = {};
        record = output.content;
        cntext = offset;
        yankee = copyDataProperties(cntext, record);
        yankee = 'paddingBottom';
        offset[yankee] = romeon;
        golfie['style'] = offset;
        offset = {};
        yankee = output.header;
        offset['style'] = yankee;
        romeon = 15;
        yankee = update[romeon];
        yankee = sizing.bind(tangon)(yankee);
        foxtra = yankee.Text;
        yankee = {'variant': 'heading-xl/bold', 'color': 'header-primary'};
        kiloes = 7;
        source = update[kiloes];
        source = sizing.bind(tangon)(source);
        vacuum = source.intl;
        ctrled = vacuum.string;
        source = update[kiloes];
        source = sizing.bind(tangon)(source);
        source = source.t;
        source = source.9SDLnp;
        source = ctrled.bind(vacuum)(source);
        yankee['children'] = source;
        foxtra = zuuluu.bind(tangon)(foxtra, yankee);
        yankee = new Array(2);
        yankee[0] = foxtra;
        romeon = update[romeon];
        romeon = sizing.bind(tangon)(romeon);
        foxtra = romeon.Text;
        romeon = {'variant': 'heading-md/medium', 'color': 'header-secondary'};
        source = update[kiloes];
        source = sizing.bind(tangon)(source);
        vacuum = source.intl;
        ctrled = vacuum.string;
        source = update[kiloes];
        source = sizing.bind(tangon)(source);
        source = source.t;
        source = source.yvx///;
        source = ctrled.bind(vacuum)(source);
        romeon['children'] = source;
        romeon = zuuluu.bind(tangon)(foxtra, romeon);
        yankee[1] = romeon;
        offset['children'] = yankee;
        yankee = verify.bind(tangon)(option, offset);
        offset = new Array(4);
        offset[0] = yankee;
        yankee = {};
        romeon = 16;
        foxtra = update[romeon];
        foxtra = sizing.bind(tangon)(foxtra);
        source = foxtra.TableRowGroup;
        foxtra = {};
        sequen = _closure1_slot11;
        vacuum = sequen.map;
        ctrled = function(argFoo, argBar) {
            entity = argFoo;
            report = argBar;
            option = entity.title;
            golfie = entity.description;
            tangon = _closure1_slot8;
            verify = _closure1_slot0;
            offset = _closure1_slot2;
            entity = 17;
            entity = offset[entity];
            zuuluu = undefined;
            entity = verify.bind(zuuluu)(entity);
            michal = entity.TableRow;
            entity = {};
            entity['label'] = option;
            entity['subLabel'] = golfie;
            golfie = _closure1_slot4;
            oscard = {};
            option = _closure2_slot2;
            option = option.number;
            oscard['style'] = option;
            option = 15;
            option = offset[option];
            option = verify.bind(zuuluu)(option);
            verify = option.Text;
            option = {'variant': 'heading-md/semibold', 'color': 'text-brand'};
            offset = 1;
            offset = report + offset;
            option['children'] = offset;
            option = tangon.bind(zuuluu)(verify, option);
            oscard['children'] = option;
            oscard = tangon.bind(zuuluu)(golfie, oscard);
            entity['icon'] = oscard;
            entity = tangon.bind(zuuluu)(michal, entity, report);
            return entity;
        };
        ctrled = vacuum.bind(sequen)(ctrled);
        foxtra['children'] = ctrled;
        foxtra = zuuluu.bind(tangon)(source, foxtra);
        yankee['children'] = foxtra;
        yankee = zuuluu.bind(tangon)(option, yankee);
        offset[1] = yankee;
        yankee = {};
        foxtra = output.moreInfo;
        yankee['style'] = foxtra;
        romeon = update[romeon];
        romeon = sizing.bind(tangon)(romeon);
        foxtra = romeon.TableRowGroup;
        romeon = {};
        source = update[kiloes];
        source = sizing.bind(tangon)(source);
        vacuum = source.intl;
        ctrled = vacuum.string;
        source = update[kiloes];
        source = sizing.bind(tangon)(source);
        source = source.t;
        source = source.WPwp1d;
        source = ctrled.bind(vacuum)(source);
        romeon['title'] = source;
        source = 17;
        source = update[source];
        source = sizing.bind(tangon)(source);
        ctrled = source.TableRow;
        source = {'label': null, 'subLabel': null, 'onPress': null, 'arrow': true, 'start': true, 'end': true};
        vacuum = update[kiloes];
        vacuum = sizing.bind(tangon)(vacuum);
        config = vacuum.intl;
        sequen = config.string;
        vacuum = update[kiloes];
        vacuum = sizing.bind(tangon)(vacuum);
        vacuum = vacuum.t;
        vacuum = vacuum.N9WJMD;
        vacuum = sequen.bind(config)(vacuum);
        source['label'] = vacuum;
        vacuum = update[kiloes];
        vacuum = sizing.bind(tangon)(vacuum);
        config = vacuum.intl;
        sequen = config.string;
        vacuum = update[kiloes];
        vacuum = sizing.bind(tangon)(vacuum);
        vacuum = vacuum.t;
        vacuum = vacuum.NHq38/;
        vacuum = sequen.bind(config)(vacuum);
        source['subLabel'] = vacuum;
        vacuum = function() { // Original name: onPress
            tangon = _closure1_slot1;
            zuuluu = _closure1_slot2;
            michal = 18;
            zuuluu = zuuluu[michal];
            michal = undefined;
            zuuluu = tangon.bind(michal)(zuuluu);
            michal = zuuluu.openURL;
            entity = _closure1_slot7;
            entity = entity.AGE_VERIFICATION_LINK;
            entity = michal.bind(zuuluu)(entity);
            return entity;
        };
        source['onPress'] = vacuum;
        source = zuuluu.bind(tangon)(ctrled, source);
        romeon['children'] = source;
        romeon = zuuluu.bind(tangon)(foxtra, romeon);
        yankee['children'] = romeon;
        yankee = zuuluu.bind(tangon)(option, yankee);
        offset[2] = yankee;
        yankee = {};
        romeon = output.footer;
        yankee['style'] = romeon;
        romeon = 19;
        romeon = update[romeon];
        romeon = sizing.bind(tangon)(romeon);
        foxtra = romeon.Button;
        romeon = {};
        result = function() { // Original name: onPress
            zuuluu = _closure1_slot0;
            michal = _closure1_slot2;
            entity = 20;
            michal = michal[entity];
            entity = undefined;
            zuuluu = zuuluu.bind(entity)(michal);
            michal = zuuluu.requestSuspendedUserAgeVerification;
            entity = _closure2_slot1;
            entity = michal.bind(zuuluu)(entity);
            return entity;
        };
        romeon['onPress'] = result;
        romeon['loading'] = backup;
        romeon['disabled'] = backup;
        backup = update[kiloes];
        backup = sizing.bind(tangon)(backup);
        source = backup.intl;
        result = source.string;
        backup = update[kiloes];
        backup = sizing.bind(tangon)(backup);
        backup = backup.t;
        backup = backup.54b8V1;
        backup = result.bind(source)(backup);
        romeon['text'] = backup;
        foxtra = zuuluu.bind(tangon)(foxtra, romeon);
        romeon = new Array(2);
        romeon[0] = foxtra;
        foxtra = 21;
        foxtra = update[foxtra];
        foxtra = sizing.bind(tangon)(foxtra);
        backup = foxtra.TextWithIOSLinkWorkaround;
        foxtra = {'variant': 'heading-sm/medium', 'color': 'text-secondary'};
        output = output.learnMore;
        foxtra['style'] = output;
        output = update[kiloes];
        output = sizing.bind(tangon)(output);
        result = output.intl;
        output = result.format;
        kiloes = update[kiloes];
        kiloes = sizing.bind(tangon)(kiloes);
        kiloes = kiloes.t;
        sizing = kiloes.ZbWsOD;
        kiloes = {};
        echoed = _closure1_slot7;
        echoed = echoed.LEARN_MORE_UU_APPEAL_LINK;
        kiloes['learnMoreLink'] = echoed;
        kiloes = output.bind(result)(sizing, kiloes);
        foxtra['children'] = kiloes;
        foxtra = zuuluu.bind(tangon)(backup, foxtra);
        romeon[1] = foxtra;
        yankee['children'] = romeon;
        yankee = verify.bind(tangon)(option, yankee);
        offset[3] = yankee;
        golfie['children'] = offset;
        golfie = verify.bind(tangon)(option, golfie);
        report['children'] = golfie;
        report = zuuluu.bind(tangon)(oscard, report);
        entity['children'] = report;
        entity = zuuluu.bind(tangon)(michal, entity);
        return entity;
    };
    zuuluu['default'] = michal;
    return entity;
})();