// app/modules/safety_hub/native/AutomatedUnderageAppealActionSheet.tsx
export default (function(argFoo, argBar, argBaz, argCorge, _, argFred, argPlugh) {
    report = argBar;
    yankee = argBaz;
    zulu = argFred;
    oscar = argPlugh;
    var _closure1_slot0 = report;
    var _closure1_slot1 = yankee;
    var _closure1_slot2 = oscar;
    entity = global;
    options = entity.Object;
    golf = options.defineProperty;
    tango = {};
    entity = true;
    tango['value'] = entity;
    entity = '__esModule';
    entity = golf.bind(options)(zulu, entity, tango);
    entity = 0;
    golf = oscar[entity];
    tango = argCorge;
    entity = undefined;
    tango = tango.bind(entity)(golf);
    var _closure1_slot3 = tango;
    foxtrot = 1;
    tango = oscar[foxtrot];
    tango = report.bind(entity)(tango);
    tango = tango.View;
    var _closure1_slot4 = tango;
    tango = 2;
    tango = oscar[tango];
    tango = yankee.bind(entity)(tango);
    var _closure1_slot5 = tango;
    tango = 3;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    golf = tango.AGE_APPEAL_ACTION_SHEET_NAME;
    var _closure1_slot6 = golf;
    tango = tango.SafetyHubLinks;
    var _closure1_slot7 = tango;
    tango = 4;
    golf = oscar[tango];
    golf = report.bind(entity)(golf);
    golf = golf.jsx;
    var _closure1_slot8 = golf;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.jsxs;
    var _closure1_slot9 = tango;
    tango = 5;
    tango = oscar[tango];
    options = report.bind(entity)(tango);
    golf = options.createStyles;
    tango = {};
    verify = {};
    verify['flex'] = foxtrot;
    offset = 6;
    romeo = oscar[offset];
    romeo = yankee.bind(entity)(romeo);
    romeo = romeo.spacing;
    romeo = romeo.PX_16;
    verify['paddingHorizontal'] = romeo;
    romeo = oscar[offset];
    romeo = yankee.bind(entity)(romeo);
    romeo = romeo.spacing;
    romeo = romeo.PX_8;
    verify['paddingTop'] = romeo;
    tango['container'] = verify;
    verify = {};
    romeo = 'center';
    verify['alignItems'] = romeo;
    tango['header'] = verify;
    verify = {};
    verify['flex'] = foxtrot;
    foxtrot = oscar[offset];
    foxtrot = yankee.bind(entity)(foxtrot);
    foxtrot = foxtrot.spacing;
    foxtrot = foxtrot.PX_16;
    verify['gap'] = foxtrot;
    tango['content'] = verify;
    verify = {};
    foxtrot = oscar[offset];
    foxtrot = yankee.bind(entity)(foxtrot);
    foxtrot = foxtrot.spacing;
    foxtrot = foxtrot.PX_4;
    verify['gap'] = foxtrot;
    tango['moreInfo'] = verify;
    verify = {};
    foxtrot = oscar[offset];
    foxtrot = yankee.bind(entity)(foxtrot);
    foxtrot = foxtrot.spacing;
    foxtrot = foxtrot.PX_12;
    verify['marginTop'] = foxtrot;
    verify['textAlign'] = romeo;
    romeo = oscar[offset];
    romeo = yankee.bind(entity)(romeo);
    romeo = romeo.spacing;
    romeo = romeo.PX_32;
    verify['paddingBottom'] = romeo;
    tango['learnMore'] = verify;
    verify = {};
    romeo = oscar[offset];
    romeo = yankee.bind(entity)(romeo);
    romeo = romeo.spacing;
    romeo = romeo.PX_8;
    verify['marginTop'] = romeo;
    tango['footer'] = verify;
    verify = {'alignItems': 'center', 'justifyContent': 'center', 'width': 32, 'height': 32};
    romeo = oscar[offset];
    romeo = yankee.bind(entity)(romeo);
    romeo = romeo.radii;
    romeo = romeo.round;
    verify['borderRadius'] = romeo;
    offset = oscar[offset];
    offset = yankee.bind(entity)(offset);
    offset = offset.colors;
    offset = offset.BG_MOD_SUBTLE;
    verify['backgroundColor'] = offset;
    tango['number'] = verify;
    tango = golf.bind(options)(tango);
    var _closure1_slot10 = tango;
    golf = {};
    options = 7;
    tango = oscar[options];
    tango = report.bind(entity)(tango);
    offset = tango.intl;
    verify = offset.string;
    tango = oscar[options];
    tango = report.bind(entity)(tango);
    tango = tango.t;
    tango = tango.1+E7LC;
    tango = verify.bind(offset)(tango);
    golf['title'] = tango;
    tango = oscar[options];
    tango = report.bind(entity)(tango);
    offset = tango.intl;
    verify = offset.string;
    tango = oscar[options];
    tango = report.bind(entity)(tango);
    tango = tango.t;
    tango = tango.BXiat7;
    tango = verify.bind(offset)(tango);
    golf['description'] = tango;
    tango = new Array(3);
    tango[0] = golf;
    golf = {};
    verify = oscar[options];
    verify = report.bind(entity)(verify);
    yankee = verify.intl;
    offset = yankee.string;
    verify = oscar[options];
    verify = report.bind(entity)(verify);
    verify = verify.t;
    verify = verify.iMQXtL;
    verify = offset.bind(yankee)(verify);
    golf['title'] = verify;
    verify = oscar[options];
    verify = report.bind(entity)(verify);
    yankee = verify.intl;
    offset = yankee.string;
    verify = oscar[options];
    verify = report.bind(entity)(verify);
    verify = verify.t;
    verify = verify.oQ0vws;
    verify = offset.bind(yankee)(verify);
    golf['description'] = verify;
    tango[1] = golf;
    golf = {};
    verify = oscar[options];
    verify = report.bind(entity)(verify);
    yankee = verify.intl;
    offset = yankee.string;
    verify = oscar[options];
    verify = report.bind(entity)(verify);
    verify = verify.t;
    verify = verify.oY/z1d;
    verify = offset.bind(yankee)(verify);
    golf['title'] = verify;
    verify = oscar[options];
    verify = report.bind(entity)(verify);
    offset = verify.intl;
    verify = offset.string;
    options = oscar[options];
    options = report.bind(entity)(options);
    options = options.t;
    options = options.wtj02d;
    options = verify.bind(offset)(options);
    golf['description'] = options;
    tango[2] = golf;
    var _closure1_slot11 = tango;
    tango = 21;
    tango = oscar[tango];
    oscar = report.bind(entity)(tango);
    report = oscar.fileFinishedImporting;
    tango = 'modules/safety_hub/native/AutomatedUnderageAppealActionSheet.tsx';
    tango = report.bind(oscar)(tango);
    mike = function(argFoo) { // Original name: AutomatedUnderageAppealActionSheet
        entity = argFoo;
        entity = entity.onClose;
        var _closure2_slot0 = entity;
        mike = _closure1_slot10;
        tango = undefined;
        output = mike.bind(tango)();
        var _closure2_slot1 = output;
        sizing = _closure1_slot0;
        update = _closure1_slot2;
        zulu = 8;
        mike = update[zulu];
        options = sizing.bind(tango)(mike);
        golf = options.useStateFromStores;
        mike = _closure1_slot5;
        oscar = new Array(1);
        oscar[0] = mike;
        report = function() {
            mike = _closure1_slot5;
            entity = mike.getAgeVerificationWebviewUrl;
            entity = entity.bind(mike)();
            return entity;
        };
        oscar = golf.bind(options)(oscar, report);
        var _closure2_slot2 = oscar;
        zulu = update[zulu];
        golf = sizing.bind(tango)(zulu);
        report = golf.useStateFromStores;
        zulu = new Array(1);
        zulu[0] = mike;
        mike = function() {
            mike = _closure1_slot5;
            entity = mike.getIsLoadingAgeVerification;
            entity = entity.bind(mike)();
            return entity;
        };
        backup = report.bind(golf)(zulu, mike);
        golf = _closure1_slot1;
        mike = 9;
        mike = update[mike];
        mike = golf.bind(tango)(mike);
        mike = mike.bind(tango)();
        romeo = mike.bottom;
        report = _closure1_slot3;
        zulu = report.useCallback;
        mike = new Array(1);
        mike[0] = entity;
        entity = function() {
            _fun92666: for(var _fun92666_ip = 0; ; ) switch(_fun92666_ip) {
 0:
                zulu = _closure2_slot0;
                mike = null;
                if(!(mike != zulu)) { _fun92666_ip = 23; continue _fun92666 }
 13:
                mike = _closure2_slot0;
                entity = undefined;
                entity = mike.bind(entity)();
 23:
                zulu = _closure1_slot1;
                mike = _closure1_slot2;
                entity = 10;
                mike = mike[entity];
                entity = undefined;
                zulu = zulu.bind(entity)(mike);
                mike = zulu.close;
                mike = mike.bind(zulu)();
                return entity;
            }
        };
        entity = zulu.bind(report)(entity, mike);
        var _closure2_slot3 = entity;
        zulu = report.useCallback;
        mike = new Array(1);
        mike[0] = entity;
        entity = function() {
            zulu = _closure1_slot1;
            tango = _closure1_slot2;
            mike = 10;
            report = tango[mike];
            entity = undefined;
            oscar = zulu.bind(entity)(report);
            report = oscar.success;
            report = report.bind(oscar)();
            report = _closure2_slot3;
            report = report.bind(entity)();
            mike = tango[mike];
            zulu = zulu.bind(entity)(mike);
            mike = zulu.start_verification_check;
            mike = mike.bind(zulu)();
            return entity;
        };
        entity = zulu.bind(report)(entity, mike);
        var _closure2_slot4 = entity;
        zulu = report.useEffect;
        mike = new Array(2);
        mike[0] = oscar;
        mike[1] = entity;
        entity = function() {
            _fun92668: for(var _fun92668_ip = 0; ; ) switch(_fun92668_ip) {
 0:
                mike = _closure2_slot2;
                entity = '';
                if(!(entity !== mike)) { _fun92668_ip = 98; continue _fun92668 }
 15:
                tango = _closure1_slot1;
                report = _closure1_slot2;
                mike = 11;
                mike = report[mike];
                zulu = undefined;
                golf = tango.bind(zulu)(mike);
                oscar = golf.showAgeVerification;
                mike = {};
                verify = _closure2_slot2;
                mike['webviewUrl'] = verify;
                options = _closure2_slot4;
                mike['onComplete'] = options;
                mike = oscar.bind(golf)(mike);
                mike = 12;
                mike = report[mike];
                zulu = tango.bind(zulu)(mike);
                mike = zulu.hideActionSheet;
                entity = _closure1_slot6;
                entity = mike.bind(zulu)(entity);
 98:
                entity = undefined;
                return entity;
            }
        };
        entity = zulu.bind(report)(entity, mike);
        zulu = _closure1_slot8;
        entity = 13;
        entity = update[entity];
        entity = sizing.bind(tango)(entity);
        mike = entity.BottomSheet;
        entity = {};
        report = true;
        entity['scrollable'] = report;
        report = 425;
        options = report + romeo;
        report = 6;
        oscar = update[report];
        oscar = golf.bind(tango)(oscar);
        oscar = oscar.spacing;
        oscar = oscar.PX_16;
        oscar = options + oscar;
        report = update[report];
        report = golf.bind(tango)(report);
        report = report.spacing;
        report = report.PX_16;
        report = oscar + report;
        entity['startHeight'] = report;
        report = 14;
        report = update[report];
        report = sizing.bind(tango)(report);
        oscar = report.BottomSheetScrollView;
        report = {};
        golf = output.container;
        report['style'] = golf;
        verify = _closure1_slot9;
        options = _closure1_slot4;
        golf = {};
        offset = {};
        record = output.content;
        context = offset;
        yankee = copyDataProperties(context, record);
        yankee = 'paddingBottom';
        offset[yankee] = romeo;
        golf['style'] = offset;
        offset = {};
        yankee = output.header;
        offset['style'] = yankee;
        romeo = 15;
        yankee = update[romeo];
        yankee = sizing.bind(tango)(yankee);
        foxtrot = yankee.Text;
        yankee = {'variant': 'heading-xl/bold', 'color': 'header-primary'};
        kilo = 7;
        result = update[kilo];
        result = sizing.bind(tango)(result);
        vacuum = result.intl;
        source = vacuum.string;
        result = update[kilo];
        result = sizing.bind(tango)(result);
        result = result.t;
        result = result.9SDLnp;
        result = source.bind(vacuum)(result);
        yankee['children'] = result;
        foxtrot = zulu.bind(tango)(foxtrot, yankee);
        yankee = new Array(2);
        yankee[0] = foxtrot;
        romeo = update[romeo];
        romeo = sizing.bind(tango)(romeo);
        foxtrot = romeo.Text;
        romeo = {'variant': 'heading-md/medium', 'color': 'header-secondary'};
        result = update[kilo];
        result = sizing.bind(tango)(result);
        vacuum = result.intl;
        source = vacuum.string;
        result = update[kilo];
        result = sizing.bind(tango)(result);
        result = result.t;
        result = result.yvx///;
        result = source.bind(vacuum)(result);
        romeo['children'] = result;
        romeo = zulu.bind(tango)(foxtrot, romeo);
        yankee[1] = romeo;
        offset['children'] = yankee;
        yankee = verify.bind(tango)(options, offset);
        offset = new Array(4);
        offset[0] = yankee;
        yankee = {};
        romeo = 16;
        foxtrot = update[romeo];
        foxtrot = sizing.bind(tango)(foxtrot);
        result = foxtrot.TableRowGroup;
        foxtrot = {};
        sequence = _closure1_slot11;
        vacuum = sequence.map;
        source = function(argFoo, argBar) {
            entity = argFoo;
            report = argBar;
            options = entity.title;
            golf = entity.description;
            tango = _closure1_slot8;
            verify = _closure1_slot0;
            offset = _closure1_slot2;
            entity = 17;
            entity = offset[entity];
            zulu = undefined;
            entity = verify.bind(zulu)(entity);
            mike = entity.TableRow;
            entity = {};
            entity['label'] = options;
            entity['subLabel'] = golf;
            golf = _closure1_slot4;
            oscar = {};
            options = _closure2_slot1;
            options = options.number;
            oscar['style'] = options;
            options = 15;
            options = offset[options];
            options = verify.bind(zulu)(options);
            verify = options.Text;
            options = {'variant': 'heading-md/semibold', 'color': 'text-brand'};
            offset = 1;
            offset = report + offset;
            options['children'] = offset;
            options = tango.bind(zulu)(verify, options);
            oscar['children'] = options;
            oscar = tango.bind(zulu)(golf, oscar);
            entity['icon'] = oscar;
            entity = tango.bind(zulu)(mike, entity, report);
            return entity;
        };
        source = vacuum.bind(sequence)(source);
        foxtrot['children'] = source;
        foxtrot = zulu.bind(tango)(result, foxtrot);
        yankee['children'] = foxtrot;
        yankee = zulu.bind(tango)(options, yankee);
        offset[1] = yankee;
        yankee = {};
        foxtrot = output.moreInfo;
        yankee['style'] = foxtrot;
        romeo = update[romeo];
        romeo = sizing.bind(tango)(romeo);
        foxtrot = romeo.TableRowGroup;
        romeo = {};
        result = update[kilo];
        result = sizing.bind(tango)(result);
        vacuum = result.intl;
        source = vacuum.string;
        result = update[kilo];
        result = sizing.bind(tango)(result);
        result = result.t;
        result = result.WPwp1d;
        result = source.bind(vacuum)(result);
        romeo['title'] = result;
        result = 17;
        result = update[result];
        result = sizing.bind(tango)(result);
        source = result.TableRow;
        result = {'label': null, 'subLabel': null, 'onPress': null, 'arrow': true, 'start': true, 'end': true};
        vacuum = update[kilo];
        vacuum = sizing.bind(tango)(vacuum);
        config = vacuum.intl;
        sequence = config.string;
        vacuum = update[kilo];
        vacuum = sizing.bind(tango)(vacuum);
        vacuum = vacuum.t;
        vacuum = vacuum.N9WJMD;
        vacuum = sequence.bind(config)(vacuum);
        result['label'] = vacuum;
        vacuum = update[kilo];
        vacuum = sizing.bind(tango)(vacuum);
        config = vacuum.intl;
        sequence = config.string;
        vacuum = update[kilo];
        vacuum = sizing.bind(tango)(vacuum);
        vacuum = vacuum.t;
        vacuum = vacuum.NHq38/;
        vacuum = sequence.bind(config)(vacuum);
        result['subLabel'] = vacuum;
        control = function() { // Original name: onPress
            entity = global;
            tango = entity.window;
            zulu = tango.open;
            entity = _closure1_slot7;
            mike = entity.AGE_VERIFICATION_LINK;
            entity = '_blank';
            entity = zulu.bind(tango)(mike, entity);
            return entity;
        };
        result['onPress'] = control;
        result = zulu.bind(tango)(source, result);
        romeo['children'] = result;
        romeo = zulu.bind(tango)(foxtrot, romeo);
        yankee['children'] = romeo;
        yankee = zulu.bind(tango)(options, yankee);
        offset[2] = yankee;
        yankee = {};
        romeo = output.footer;
        yankee['style'] = romeo;
        romeo = 18;
        romeo = update[romeo];
        romeo = sizing.bind(tango)(romeo);
        foxtrot = romeo.Button;
        romeo = {};
        result = 19;
        result = update[result];
        result = sizing.bind(tango)(result);
        result = result.requestSuspendedUserAgeVerification;
        romeo['onPress'] = result;
        romeo['loading'] = backup;
        romeo['disabled'] = backup;
        backup = update[kilo];
        backup = sizing.bind(tango)(backup);
        source = backup.intl;
        result = source.string;
        backup = update[kilo];
        backup = sizing.bind(tango)(backup);
        backup = backup.t;
        backup = backup.54b8V1;
        backup = result.bind(source)(backup);
        romeo['text'] = backup;
        foxtrot = zulu.bind(tango)(foxtrot, romeo);
        romeo = new Array(2);
        romeo[0] = foxtrot;
        foxtrot = 20;
        foxtrot = update[foxtrot];
        foxtrot = sizing.bind(tango)(foxtrot);
        backup = foxtrot.TextWithIOSLinkWorkaround;
        foxtrot = {'variant': 'heading-sm/medium', 'color': 'text-secondary'};
        output = output.learnMore;
        foxtrot['style'] = output;
        output = update[kilo];
        output = sizing.bind(tango)(output);
        result = output.intl;
        output = result.format;
        kilo = update[kilo];
        kilo = sizing.bind(tango)(kilo);
        kilo = kilo.t;
        sizing = kilo.ZbWsOD;
        kilo = {};
        echo = _closure1_slot7;
        echo = echo.LEARN_MORE_UU_APPEAL_LINK;
        kilo['learnMoreLink'] = echo;
        kilo = output.bind(result)(sizing, kilo);
        foxtrot['children'] = kilo;
        foxtrot = zulu.bind(tango)(backup, foxtrot);
        romeo[1] = foxtrot;
        yankee['children'] = romeo;
        yankee = verify.bind(tango)(options, yankee);
        offset[3] = yankee;
        golf['children'] = offset;
        golf = verify.bind(tango)(options, golf);
        report['children'] = golf;
        report = zulu.bind(tango)(oscar, report);
        entity['children'] = report;
        entity = zulu.bind(tango)(mike, entity);
        return entity;
    };
    zulu['default'] = mike;
    return entity;
})();