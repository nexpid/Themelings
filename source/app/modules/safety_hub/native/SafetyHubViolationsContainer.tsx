// app/modules/safety_hub/native/SafetyHubViolationsContainer.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    oscard = argBar;
    romeon = argBaz;
    zuuluu = argFre;
    golfie = argPlu;
    var _closure1_slot0 = oscard;
    var _closure1_slot1 = romeon;
    var _closure1_slot2 = golfie;
    entity = function(argFoo) { // Original name: SafetyHubViolationsHeader
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            entity = argFoo;
            sequen = entity.count;
            report = entity.onClick;
            oscard = entity.opened;
            kiloes = entity.status;
            entity = _closure1_slot14;
            tangon = undefined;
            verify = entity.bind(tangon)();
            zuuluu = _closure1_slot12;
            michal = _closure1_slot1;
            backup = _closure1_slot2;
            entity = 9;
            entity = backup[entity];
            michal = michal.bind(tangon)(entity);
            entity = {};
            entity['onPress'] = report;
            option = verify.header;
            report = new Array(1);
            report[0] = option;
            entity['style'] = report;
            offset = _closure1_slot11;
            option = _closure1_slot6;
            report = {};
            romeon = verify.iconBackground;
            yankee = new Array(1);
            yankee[0] = romeon;
            report['style'] = yankee;
            foxtra = _closure1_slot11;
            romeon = _closure1_slot0;
            yankee = 10;
            yankee = backup[yankee];
            yankee = romeon.bind(tangon)(yankee);
            romeon = yankee.WarningIcon;
            yankee = {};
            backup = 'active';
            sizing = backup === kiloes;
            kiloes = _closure1_slot1;
            output = _closure1_slot2;
            backup = 8;
            backup = output[backup];
            backup = kiloes.bind(tangon)(backup);
            kiloes = backup.colors;
            if(sizing) { _fun00002_ip = 185; continue _fun00001 }
 177:
            backup = kiloes.INTERACTIVE_MUTED;
            _fun00002_ip = 191; continue _fun00001;
 185:
            backup = kiloes.INTERACTIVE_NORMAL;
 191:
            yankee['color'] = backup;
            backup = 'xs';
            yankee['size'] = backup;
            yankee = foxtra.bind(tangon)(romeon, yankee);
            report['children'] = yankee;
            option = offset.bind(tangon)(option, report);
            report = new Array(3);
            report[0] = option;
            yankee = _closure1_slot12;
            offset = _closure1_slot6;
            option = {};
            foxtra = verify.headerTextContainer;
            romeon = new Array(1);
            romeon[0] = foxtra;
            option['style'] = romeon;
            backup = _closure1_slot11;
            foxtra = _closure1_slot0;
            romeon = _closure1_slot2;
            output = 11;
            romeon = romeon[output];
            romeon = foxtra.bind(tangon)(romeon);
            foxtra = romeon.Text;
            romeon = {};
            kiloes = 'heading-sm/semibold';
            romeon['variant'] = kiloes;
            result = _closure1_slot0;
            kiloes = _closure1_slot2;
            source = 12;
            echoed = kiloes[source];
            echoed = result.bind(tangon)(echoed);
            ctrled = echoed.intl;
            update = ctrled.formatToPlainString;
            kiloes = kiloes[source];
            kiloes = result.bind(tangon)(kiloes);
            result = kiloes.t;
            if(sizing) { _fun00002_ip = 374; continue _fun00001 }
 343:
            echoed = result.fZAHBQ;
            kiloes = {};
            vacuum = sequen.toString;
            vacuum = vacuum.bind(sequen)();
            kiloes['count'] = vacuum;
            kiloes = update.bind(ctrled)(echoed, kiloes);
            _fun00002_ip = 403; continue _fun00001;
 374:
            echoed = result.IeV2oa;
            result = {};
            vacuum = sequen.toString;
            vacuum = vacuum.bind(sequen)();
            result['count'] = vacuum;
            kiloes = update.bind(ctrled)(echoed, result);
 403:
            romeon['children'] = kiloes;
            foxtra = backup.bind(tangon)(foxtra, romeon);
            romeon = new Array(2);
            romeon[0] = foxtra;
            kiloes = _closure1_slot11;
            backup = _closure1_slot0;
            foxtra = _closure1_slot2;
            foxtra = foxtra[output];
            foxtra = backup.bind(tangon)(foxtra);
            backup = foxtra.Text;
            foxtra = {'variant': 'text-xxs/normal', 'color': 'text-muted'};
            update = _closure1_slot0;
            output = _closure1_slot2;
            result = output[source];
            result = update.bind(tangon)(result);
            echoed = result.intl;
            result = echoed.string;
            output = output[source];
            output = update.bind(tangon)(output);
            output = output.t;
            if(sizing) { _fun00002_ip = 520; continue _fun00001 }
 505:
            sizing = output.SzGV0t;
            sizing = result.bind(echoed)(sizing);
            _fun00002_ip = 533; continue _fun00001;
 520:
            output = output.XJ2YVV;
            sizing = result.bind(echoed)(output);
 533:
            foxtra['children'] = sizing;
            foxtra = kiloes.bind(tangon)(backup, foxtra);
            romeon[1] = foxtra;
            option['children'] = romeon;
            option = yankee.bind(tangon)(offset, option);
            report[1] = option;
            option = _closure1_slot11;
            offset = _closure1_slot0;
            yankee = _closure1_slot2;
            if(oscard) { _fun00002_ip = 596; continue _fun00001 }
 576:
            oscard = 14;
            oscard = yankee[oscard];
            oscard = offset.bind(tangon)(oscard);
            golfie = oscard.ChevronSmallDownIcon;
            _fun00002_ip = 614; continue _fun00001;
 596:
            oscard = 13;
            oscard = yankee[oscard];
            oscard = offset.bind(tangon)(oscard);
            golfie = oscard.ChevronSmallUpIcon;
 614:
            oscard = {};
            offset = 'md';
            oscard['size'] = offset;
            offset = verify.chevron;
            verify = new Array(1);
            verify[0] = offset;
            oscard['style'] = verify;
            oscard = option.bind(tangon)(golfie, oscard);
            report[2] = oscard;
            entity['children'] = report;
            entity = zuuluu.bind(tangon)(michal, entity);
            return entity;
        }
    };
    var _closure1_slot17 = entity;
    entity = function() { // Original name: EmptyActiveState
        entity = _closure1_slot14;
        tangon = undefined;
        report = entity.bind(tangon)();
        zuuluu = _closure1_slot12;
        michal = _closure1_slot6;
        entity = {};
        oscard = report.emptyState;
        report = new Array(1);
        report[0] = oscard;
        entity['style'] = report;
        offset = _closure1_slot11;
        romeon = _closure1_slot0;
        foxtra = _closure1_slot2;
        oscard = 11;
        report = foxtra[oscard];
        report = romeon.bind(tangon)(report);
        option = report.Text;
        report = {};
        verify = 'heading-sm/extrabold';
        report['variant'] = verify;
        verify = 12;
        yankee = foxtra[verify];
        yankee = romeon.bind(tangon)(yankee);
        kiloes = yankee.intl;
        backup = kiloes.string;
        yankee = foxtra[verify];
        yankee = romeon.bind(tangon)(yankee);
        yankee = yankee.t;
        yankee = yankee.reLFaW;
        yankee = backup.bind(kiloes)(yankee);
        report['children'] = yankee;
        option = offset.bind(tangon)(option, report);
        report = new Array(2);
        report[0] = option;
        option = _closure1_slot11;
        oscard = foxtra[oscard];
        oscard = romeon.bind(tangon)(oscard);
        golfie = oscard.Text;
        oscard = {};
        offset = 'text-xs/normal';
        oscard['variant'] = offset;
        offset = foxtra[verify];
        offset = romeon.bind(tangon)(offset);
        yankee = offset.intl;
        offset = yankee.string;
        verify = foxtra[verify];
        verify = romeon.bind(tangon)(verify);
        verify = verify.t;
        verify = verify.ERdH1t;
        verify = offset.bind(yankee)(verify);
        oscard['children'] = verify;
        oscard = option.bind(tangon)(golfie, oscard);
        report[1] = oscard;
        entity['children'] = report;
        entity = zuuluu.bind(tangon)(michal, entity);
        return entity;
    };
    var _closure1_slot18 = entity;
    entity = function() { // Original name: EmptyExpiredState
        entity = _closure1_slot14;
        tangon = undefined;
        oscard = entity.bind(tangon)();
        zuuluu = _closure1_slot11;
        michal = _closure1_slot6;
        entity = {};
        golfie = oscard.emptyState;
        oscard = new Array(1);
        oscard[0] = golfie;
        entity['style'] = oscard;
        golfie = _closure1_slot11;
        yankee = _closure1_slot0;
        romeon = _closure1_slot2;
        report = 11;
        report = romeon[report];
        report = yankee.bind(tangon)(report);
        oscard = report.Text;
        report = {};
        option = 'text-xs/normal';
        report['variant'] = option;
        option = 12;
        verify = romeon[option];
        verify = yankee.bind(tangon)(verify);
        offset = verify.intl;
        verify = offset.string;
        option = romeon[option];
        option = yankee.bind(tangon)(option);
        option = option.t;
        option = option.RV3AXV;
        option = verify.bind(offset)(option);
        report['children'] = option;
        report = golfie.bind(tangon)(oscard, report);
        entity['children'] = report;
        entity = zuuluu.bind(tangon)(michal, entity);
        return entity;
    };
    var _closure1_slot19 = entity;
    entity = function(argFoo) { // Original name: ClassificationDetail
        _fun00003: for(var _fun00004_ip = 0; ; ) switch(_fun00004_ip) {
 0:
            entity = argFoo;
            report = entity.classification;
            entity = _closure1_slot14;
            tangon = undefined;
            foxtra = entity.bind(tangon)();
            verify = report.id;
            var _closure2_slot0 = verify;
            oscard = report.description;
            var _closure2_slot1 = oscard;
            entity = report.guild_metadata;
            var _closure2_slot2 = entity;
            zuuluu = _closure1_slot1;
            golfie = _closure1_slot2;
            michal = 16;
            michal = golfie[michal];
            zuuluu = zuuluu.bind(tangon)(michal);
            michal = zuuluu.extractTimestamp;
            backup = michal.bind(zuuluu)(verify);
            zuuluu = _closure1_slot0;
            michal = 17;
            michal = golfie[michal];
            zuuluu = zuuluu.bind(tangon)(michal);
            michal = zuuluu.useIsNewClassification;
            yankee = michal.bind(zuuluu)(report);
            report = _closure1_slot4;
            zuuluu = report.useMemo;
            michal = new Array(2);
            michal[0] = oscard;
            michal[1] = entity;
            entity = function() {
                _fun00005: for(var _fun00006_ip = 0; ; ) switch(_fun00006_ip) {
 0:
                    yankee = function(argFoo, argBar) { // Original name: hook
                        report = _closure1_slot11;
                        michal = _closure1_slot0;
                        zuuluu = _closure1_slot2;
                        entity = 11;
                        entity = zuuluu[entity];
                        tangon = undefined;
                        entity = michal.bind(tangon)(entity);
                        zuuluu = entity.Text;
                        michal = {};
                        entity = 'heading-md/extrabold';
                        michal['variant'] = entity;
                        entity = argFoo;
                        michal['children'] = entity;
                        entity = argBar;
                        entity = report.bind(tangon)(zuuluu, michal, entity);
                        return entity;
                    };
                    verify = {};
                    entity = _closure2_slot1;
                    verify['description'] = entity;
                    verify['descriptionHook'] = yankee;
                    entity = _closure2_slot2;
                    offset = null;
                    if(!(offset == entity)) { _fun00006_ip = 107; continue _fun00005 }
 39:
                    report = _closure1_slot0;
                    oscard = _closure1_slot2;
                    entity = 12;
                    michal = oscard[entity];
                    tangon = undefined;
                    michal = report.bind(tangon)(michal);
                    zuuluu = michal.intl;
                    michal = zuuluu.format;
                    entity = oscard[entity];
                    entity = report.bind(tangon)(entity);
                    entity = entity.t;
                    entity = entity.QY4g5u;
                    entity = michal.bind(zuuluu)(entity, verify);
                    _fun00006_ip = 376; continue _fun00005;
 107:
                    michal = _closure2_slot2;
                    michal = offset == michal;
                    option = undefined;
                    tangon = undefined;
                    if(michal) { _fun00006_ip = 132; continue _fun00005 }
 122:
                    michal = _closure2_slot2;
                    tangon = michal.member_type;
 132:
                    report = _closure1_slot0;
                    oscard = _closure1_slot2;
                    michal = 18;
                    michal = oscard[michal];
                    michal = report.bind(option)(michal);
                    michal = michal.MemberType;
                    michal = michal.OWNER;
                    if(!(tangon !== michal)) { _fun00006_ip = 272; continue _fun00005 }
 171:
                    tangon = _closure1_slot0;
                    romeon = _closure1_slot2;
                    michal = 12;
                    report = romeon[michal];
                    report = tangon.bind(option)(report);
                    oscard = report.intl;
                    report = oscard.format;
                    michal = romeon[michal];
                    michal = tangon.bind(option)(michal);
                    michal = michal.t;
                    tangon = michal.rmpEPD;
                    michal = {};
                    romeon = _closure2_slot1;
                    michal['classification_type'] = romeon;
                    michal['classificationHook'] = yankee;
                    yankee = _closure2_slot2;
                    romeon = offset == yankee;
                    yankee = undefined;
                    if(romeon) { _fun00006_ip = 259; continue _fun00005 }
 250:
                    romeon = _closure2_slot2;
                    yankee = romeon.name;
 259:
                    michal['guildName'] = yankee;
                    michal = report.bind(oscard)(tangon, michal);
                    _fun00006_ip = 373; continue _fun00005;
 272:
                    tangon = _closure1_slot0;
                    yankee = _closure1_slot2;
                    zuuluu = 12;
                    report = yankee[zuuluu];
                    report = tangon.bind(option)(report);
                    oscard = report.intl;
                    report = oscard.format;
                    zuuluu = yankee[zuuluu];
                    zuuluu = tangon.bind(option)(zuuluu);
                    zuuluu = zuuluu.t;
                    tangon = zuuluu.Lb0HVl;
                    zuuluu = {};
                    backup = zuuluu;
                    foxtra = verify;
                    verify = copyDataProperties(backup, foxtra);
                    verify = _closure2_slot2;
                    verify = offset == verify;
                    option = undefined;
                    if(verify) { _fun00006_ip = 358; continue _fun00005 }
 349:
                    golfie = _closure2_slot2;
                    option = golfie.name;
 358:
                    golfie = 'guildName';
                    zuuluu[golfie] = option;
                    michal = report.bind(oscard)(tangon, zuuluu);
 373:
                    entity = michal;
 376:
                    return entity;
                }
            };
            kiloes = zuuluu.bind(report)(entity, michal);
            zuuluu = _closure1_slot11;
            michal = _closure1_slot6;
            entity = {};
            oscard = foxtra.detailContainerOuter;
            report = new Array(2);
            report[0] = oscard;
            oscard = null;
            if(!yankee) { _fun00004_ip = 179; continue _fun00003 }
 173:
            oscard = foxtra.detailContainerOuterNew;
 179:
            report[1] = oscard;
            entity['style'] = report;
            golfie = _closure1_slot11;
            oscard = _closure1_slot1;
            verify = _closure1_slot2;
            report = 9;
            report = verify[report];
            oscard = oscard.bind(tangon)(report);
            report = {};
            option = function() { // Original name: onPress
                tangon = _closure1_slot1;
                michal = _closure1_slot2;
                entity = 19;
                zuuluu = michal[entity];
                entity = undefined;
                report = tangon.bind(entity)(zuuluu);
                tangon = report.pushLazy;
                golfie = _closure1_slot0;
                zuuluu = 21;
                zuuluu = michal[zuuluu];
                golfie = golfie.bind(entity)(zuuluu);
                zuuluu = 20;
                zuuluu = michal[zuuluu];
                michal = michal.paths;
                zuuluu = golfie.bind(entity)(zuuluu, michal);
                michal = {};
                golfie = _closure2_slot0;
                michal['classificationId'] = golfie;
                oscard = _closure1_slot8;
                oscard = oscard.StandingTab;
                michal['source'] = oscard;
                michal = tangon.bind(report)(zuuluu, michal);
                return entity;
            };
            report['onPress'] = option;
            offset = _closure1_slot12;
            verify = _closure1_slot6;
            option = {};
            sizing = foxtra.detailContainerInner;
            foxtra = new Array(1);
            foxtra[0] = sizing;
            option['style'] = foxtra;
            sizing = _closure1_slot11;
            if(yankee) { _fun00004_ip = 278; continue _fun00003 }
 259:
            foxtra = _closure1_slot15;
            yankee = {};
            yankee['timestamp'] = backup;
            foxtra = sizing.bind(tangon)(foxtra, yankee);
            _fun00004_ip = 290; continue _fun00003;
 278:
            backup = _closure1_slot16;
            yankee = {};
            foxtra = sizing.bind(tangon)(backup, yankee);
 290:
            yankee = new Array(2);
            yankee[0] = foxtra;
            backup = _closure1_slot11;
            foxtra = _closure1_slot0;
            sizing = _closure1_slot2;
            romeon = 11;
            romeon = sizing[romeon];
            romeon = foxtra.bind(tangon)(romeon);
            foxtra = romeon.Text;
            romeon = {};
            sizing = 'heading-md/normal';
            romeon['variant'] = sizing;
            romeon['children'] = kiloes;
            romeon = backup.bind(tangon)(foxtra, romeon);
            yankee[1] = romeon;
            option['children'] = yankee;
            option = offset.bind(tangon)(verify, option);
            report['children'] = option;
            report = golfie.bind(tangon)(oscard, report);
            entity['children'] = report;
            entity = zuuluu.bind(tangon)(michal, entity);
            return entity;
        }
    };
    var _closure1_slot20 = entity;
    tangon = function(argFoo) { // Original name: SafetyHubViolationsContainer
        _fun00007: for(var _fun00008_ip = 0; ; ) switch(_fun00008_ip) {
 0:
            entity = argFoo;
            backup = entity.status;
            kiloes = entity.classifications;
            var _closure2_slot0 = kiloes;
            tangon = undefined;
            var _closure2_slot8 = tangon;
            entity = _closure1_slot14;
            cntext = entity.bind(tangon)();
            zuuluu = _closure1_slot4;
            michal = zuuluu.useState;
            entity = false;
            michal = michal.bind(zuuluu)(entity);
            entity = _closure1_slot3;
            golfie = 2;
            entity = entity.bind(tangon)(michal, golfie);
            foxtra = 0;
            oscard = entity[foxtra];
            var _closure2_slot1 = oscard;
            report = 1;
            entity = entity[report];
            var _closure2_slot2 = entity;
            zuuluu = _closure1_slot4;
            entity = zuuluu.useState;
            michal = 3;
            zuuluu = entity.bind(zuuluu)(michal);
            entity = _closure1_slot3;
            entity = entity.bind(tangon)(zuuluu, golfie);
            zuuluu = entity[foxtra];
            var _closure2_slot3 = zuuluu;
            entity = entity[report];
            var _closure2_slot4 = entity;
            report = _closure1_slot0;
            golfie = _closure1_slot2;
            entity = 22;
            entity = golfie[entity];
            option = report.bind(tangon)(entity);
            entity = option.useSafetyHubAccountStanding;
            option = entity.bind(option)();
            var _closure2_slot5 = option;
            entity = 23;
            entity = golfie[entity];
            verify = report.bind(tangon)(entity);
            golfie = verify.useStateFromStores;
            entity = _closure1_slot7;
            report = new Array(1);
            report[0] = entity;
            entity = function() {
                michal = _closure1_slot7;
                entity = michal.getIsDsaEligible;
                entity = entity.bind(michal)();
                return entity;
            };
            entity = golfie.bind(verify)(report, entity);
            var _closure2_slot6 = entity;
            verify = _closure1_slot4;
            golfie = verify.useMemo;
            report = new Array(2);
            report[0] = kiloes;
            report[1] = zuuluu;
            zuuluu = function() {
                tangon = _closure2_slot0;
                zuuluu = tangon.slice;
                michal = _closure2_slot3;
                entity = 0;
                entity = zuuluu.bind(tangon)(entity, michal);
                return entity;
            };
            yankee = golfie.bind(verify)(zuuluu, report);
            var _closure2_slot7 = yankee;
            golfie = _closure1_slot4;
            report = golfie.useEffect;
            zuuluu = new Array(4);
            zuuluu[0] = oscard;
            option = option.state;
            zuuluu[1] = option;
            zuuluu[2] = yankee;
            zuuluu[3] = entity;
            entity = function() {
                _fun00009: for(var _fun00010_ip = 0; ; ) switch(_fun00010_ip) {
 0:
                    entity = _closure2_slot1;
                    if(!entity) { _fun00010_ip = 147; continue _fun00009 }
 13:
                    zuuluu = _closure1_slot1;
                    michal = _closure1_slot2;
                    entity = 24;
                    michal = michal[entity];
                    entity = undefined;
                    tangon = zuuluu.bind(entity)(michal);
                    zuuluu = tangon.track;
                    entity = _closure1_slot10;
                    michal = entity.SAFETY_HUB_ACTION;
                    entity = {};
                    golfie = _closure1_slot9;
                    golfie = golfie.ViewViolationsDropdown;
                    entity['action'] = golfie;
                    golfie = _closure2_slot5;
                    golfie = golfie.state;
                    entity['account_standing'] = golfie;
                    verify = _closure2_slot7;
                    option = verify.map;
                    golfie = function(argFoo) {
                        entity = global;
                        zuuluu = entity.Number;
                        entity = argFoo;
                        michal = entity.id;
                        entity = undefined;
                        entity = zuuluu.bind(entity)(michal);
                        return entity;
                    };
                    golfie = option.bind(verify)(golfie);
                    entity['classification_ids'] = golfie;
                    oscard = _closure1_slot8;
                    oscard = oscard.StandingTab;
                    entity['source'] = oscard;
                    oscard = false;
                    entity['is_violative_content_shown'] = oscard;
                    report = _closure2_slot6;
                    entity['is_dsa_eligible'] = report;
                    entity = zuuluu.bind(tangon)(michal, entity);
 147:
                    entity = undefined;
                    return entity;
                }
            };
            entity = report.bind(golfie)(entity, zuuluu);
            zuuluu = kiloes.length;
            entity = yankee.length;
            entity = zuuluu - entity;
            whisks = michal;
            if(!(!(entity > whisks))) { _fun00008_ip = 330; continue _fun00007 }
 316:
            michal = kiloes.length;
            entity = yankee.length;
            whisks = michal - entity;
 330:
            _closure2_slot8 = whisks;
            zuuluu = _closure1_slot12;
            michal = _closure1_slot6;
            entity = {};
            golfie = cntext.container;
            report = new Array(1);
            report[0] = golfie;
            entity['style'] = report;
            option = _closure1_slot11;
            golfie = _closure1_slot17;
            report = {};
            report['status'] = backup;
            verify = function() { // Original name: onClick
                zuuluu = _closure2_slot2;
                michal = undefined;
                entity = function(argFoo) {
                    entity = argFoo;
                    entity = !entity;
                    return entity;
                };
                entity = zuuluu.bind(michal)(entity);
                return entity;
            };
            report['onClick'] = verify;
            report['opened'] = oscard;
            verify = kiloes.length;
            report['count'] = verify;
            golfie = option.bind(tangon)(golfie, report);
            report = new Array(2);
            report[0] = golfie;
            if(!oscard) { _fun00008_ip = 887; continue _fun00007 }
 421:
            verify = _closure1_slot12;
            option = _closure1_slot6;
            golfie = {};
            sizing = _closure1_slot11;
            offset = {};
            result = cntext.separator;
            output = new Array(1);
            output[0] = result;
            offset['style'] = output;
            sizing = sizing.bind(tangon)(option, offset);
            offset = new Array(5);
            offset[0] = sizing;
            sizing = yankee.length;
            sizing = sizing > foxtra;
            if(!sizing) { _fun00008_ip = 498; continue _fun00007 }
 481:
            result = yankee.map;
            output = function(argFoo) {
                entity = argFoo;
                report = _closure1_slot11;
                tangon = _closure1_slot20;
                zuuluu = {};
                zuuluu['classification'] = entity;
                michal = entity.id;
                entity = undefined;
                entity = report.bind(entity)(tangon, zuuluu, michal);
                return entity;
            };
            sizing = result.bind(yankee)(output);
 498:
            offset[1] = sizing;
            sizing = yankee.length;
            kiloes = kiloes.length;
            kiloes = sizing < kiloes;
            if(!kiloes) { _fun00008_ip = 785; continue _fun00007 }
 522:
            result = _closure1_slot12;
            output = _closure1_slot13;
            sizing = {};
            source = _closure1_slot11;
            update = _closure1_slot6;
            echoed = {};
            vacuum = cntext.separator;
            ctrled = new Array(1);
            ctrled[0] = vacuum;
            echoed['style'] = ctrled;
            update = source.bind(tangon)(update, echoed);
            echoed = new Array(2);
            echoed[0] = update;
            ctrled = _closure1_slot11;
            source = _closure1_slot6;
            update = {};
            sequen = cntext.moreButtonContainer;
            vacuum = new Array(1);
            vacuum[0] = sequen;
            update['style'] = vacuum;
            config = _closure1_slot11;
            sequen = _closure1_slot5;
            vacuum = {};
            papara = cntext.moreButton;
            cntext = new Array(1);
            cntext[0] = papara;
            vacuum['style'] = cntext;
            record = function() { // Original name: onPress
                zuuluu = _closure2_slot4;
                michal = undefined;
                entity = function(argFoo) {
                    michal = _closure2_slot8;
                    entity = argFoo;
                    entity = entity + michal;
                    return entity;
                };
                entity = zuuluu.bind(michal)(entity);
                return entity;
            };
            vacuum['onPress'] = record;
            papara = _closure1_slot11;
            status = _closure1_slot0;
            equals = _closure1_slot2;
            record = 11;
            record = equals[record];
            record = status.bind(tangon)(record);
            cntext = record.Text;
            record = {};
            target = 'heading-sm/semibold';
            record['variant'] = target;
            target = 12;
            sierra = equals[target];
            sierra = status.bind(tangon)(sierra);
            limora = sierra.intl;
            sierra = limora.format;
            target = equals[target];
            target = status.bind(tangon)(target);
            target = target.t;
            status = target.9Ml56O;
            target = {};
            target['nextPageSize'] = whisks;
            target = sierra.bind(limora)(status, target);
            record['children'] = target;
            record = papara.bind(tangon)(cntext, record);
            vacuum['children'] = record;
            vacuum = config.bind(tangon)(sequen, vacuum);
            update['children'] = vacuum;
            update = ctrled.bind(tangon)(source, update);
            echoed[1] = update;
            sizing['children'] = echoed;
            kiloes = result.bind(tangon)(output, sizing);
 785:
            offset[2] = kiloes;
            kiloes = yankee.length;
            kiloes = foxtra === kiloes;
            if(!kiloes) { _fun00008_ip = 809; continue _fun00007 }
 801:
            sizing = 'active';
            kiloes = sizing === backup;
 809:
            if(!kiloes) { _fun00008_ip = 828; continue _fun00007 }
 812:
            result = _closure1_slot11;
            output = _closure1_slot18;
            sizing = {};
            kiloes = result.bind(tangon)(output, sizing);
 828:
            offset[3] = kiloes;
            yankee = yankee.length;
            yankee = foxtra === yankee;
            if(!yankee) { _fun00008_ip = 854; continue _fun00007 }
 844:
            foxtra = 'expired';
            yankee = foxtra === backup;
 854:
            if(!yankee) { _fun00008_ip = 873; continue _fun00007 }
 857:
            backup = _closure1_slot11;
            foxtra = _closure1_slot19;
            romeon = {};
            yankee = backup.bind(tangon)(foxtra, romeon);
 873:
            offset[4] = yankee;
            golfie['children'] = offset;
            oscard = verify.bind(tangon)(option, golfie);
 887:
            report[1] = oscard;
            entity['children'] = report;
            entity = zuuluu.bind(tangon)(michal, entity);
            return entity;
        }
    };
    var _closure1_slot21 = tangon;
    entity = global;
    verify = entity.Object;
    option = verify.defineProperty;
    report = {};
    entity = true;
    report['value'] = entity;
    entity = '__esModule';
    entity = option.bind(verify)(zuuluu, entity, report);
    entity = 0;
    report = golfie[entity];
    entity = undefined;
    report = romeon.bind(entity)(report);
    var _closure1_slot3 = report;
    report = 1;
    option = golfie[report];
    report = argCor;
    report = report.bind(entity)(option);
    var _closure1_slot4 = report;
    report = 2;
    report = golfie[report];
    report = oscard.bind(entity)(report);
    option = report.Pressable;
    var _closure1_slot5 = option;
    report = report.View;
    var _closure1_slot6 = report;
    report = 3;
    report = golfie[report];
    report = romeon.bind(entity)(report);
    var _closure1_slot7 = report;
    report = 4;
    report = golfie[report];
    report = oscard.bind(entity)(report);
    option = report.SafetyHubAnalyticsActionSource;
    var _closure1_slot8 = option;
    report = report.SafetyHubAnalyticsActions;
    var _closure1_slot9 = report;
    report = 5;
    report = golfie[report];
    report = oscard.bind(entity)(report);
    report = report.AnalyticEvents;
    var _closure1_slot10 = report;
    report = 6;
    option = golfie[report];
    option = oscard.bind(entity)(option);
    option = option.jsx;
    var _closure1_slot11 = option;
    option = golfie[report];
    option = oscard.bind(entity)(option);
    option = option.jsxs;
    var _closure1_slot12 = option;
    report = golfie[report];
    report = oscard.bind(entity)(report);
    report = report.Fragment;
    var _closure1_slot13 = report;
    report = 7;
    report = golfie[report];
    verify = oscard.bind(entity)(report);
    option = verify.createStyles;
    report = {};
    offset = {'display': 'flex', 'marginTop': null, 'marginBottom': 36};
    foxtra = 'flex';
    yankee = 8;
    backup = golfie[yankee];
    backup = romeon.bind(entity)(backup);
    backup = backup.spacing;
    backup = backup.PX_12;
    offset['marginTop'] = backup;
    backup = golfie[yankee];
    backup = romeon.bind(entity)(backup);
    backup = backup.spacing;
    backup = backup.PX_12;
    offset['gap'] = backup;
    report['connectedContainer'] = offset;
    offset = {};
    backup = golfie[yankee];
    backup = romeon.bind(entity)(backup);
    backup = backup.colors;
    backup = backup.CARD_PRIMARY_BG;
    offset['backgroundColor'] = backup;
    backup = golfie[yankee];
    backup = romeon.bind(entity)(backup);
    backup = backup.radii;
    backup = backup.md;
    offset['borderRadius'] = backup;
    backup = golfie[yankee];
    backup = romeon.bind(entity)(backup);
    backup = backup.spacing;
    backup = backup.PX_8;
    offset['padding'] = backup;
    backup = '100%';
    offset['width'] = backup;
    report['container'] = offset;
    offset = {'display': 'flex', 'flexDirection': 'row', 'alignItems': 'center', 'gap': null, 'width': '100%'};
    backup = golfie[yankee];
    backup = romeon.bind(entity)(backup);
    backup = backup.spacing;
    backup = backup.PX_16;
    offset['gap'] = backup;
    report['header'] = offset;
    offset = {};
    backup = golfie[yankee];
    backup = romeon.bind(entity)(backup);
    backup = backup.colors;
    backup = backup.BG_MOD_STRONG;
    offset['backgroundColor'] = backup;
    backup = golfie[yankee];
    backup = romeon.bind(entity)(backup);
    backup = backup.radii;
    backup = backup.md;
    offset['borderRadius'] = backup;
    backup = golfie[yankee];
    backup = romeon.bind(entity)(backup);
    backup = backup.spacing;
    backup = backup.PX_12;
    offset['padding'] = backup;
    backup = 10;
    offset['marginTop'] = backup;
    report['detailContainerOuter'] = offset;
    offset = {'borderColor': null, 'borderWidth': 1, 'borderStyle': 'solid'};
    backup = golfie[yankee];
    backup = romeon.bind(entity)(backup);
    backup = backup.colors;
    backup = backup.REDESIGN_BUTTON_PRIMARY_BACKGROUND;
    offset['borderColor'] = backup;
    report['detailContainerOuterNew'] = offset;
    offset = {};
    offset['display'] = foxtra;
    foxtra = golfie[yankee];
    foxtra = romeon.bind(entity)(foxtra);
    foxtra = foxtra.spacing;
    foxtra = foxtra.PX_8;
    offset['gap'] = foxtra;
    report['detailContainerInner'] = offset;
    offset = {'display': 'flex', 'borderRadius': null, 'backgroundColor': null, 'justifyContent': 'center', 'alignItems': 'center', 'padding': 6};
    foxtra = golfie[yankee];
    foxtra = romeon.bind(entity)(foxtra);
    foxtra = foxtra.radii;
    foxtra = foxtra.round;
    offset['borderRadius'] = foxtra;
    foxtra = golfie[yankee];
    foxtra = romeon.bind(entity)(foxtra);
    foxtra = foxtra.colors;
    foxtra = foxtra.BG_BASE_TERTIARY;
    offset['backgroundColor'] = foxtra;
    report['iconBackground'] = offset;
    offset = {};
    foxtra = 'auto';
    offset['marginLeft'] = foxtra;
    report['chevron'] = offset;
    offset = {};
    foxtra = 'flex-start';
    offset['alignSelf'] = foxtra;
    foxtra = golfie[yankee];
    foxtra = romeon.bind(entity)(foxtra);
    foxtra = foxtra.colors;
    foxtra = foxtra.BG_BASE_TERTIARY;
    offset['backgroundColor'] = foxtra;
    foxtra = golfie[yankee];
    foxtra = romeon.bind(entity)(foxtra);
    foxtra = foxtra.radii;
    foxtra = foxtra.md;
    offset['borderRadius'] = foxtra;
    foxtra = golfie[yankee];
    foxtra = romeon.bind(entity)(foxtra);
    foxtra = foxtra.spacing;
    foxtra = foxtra.PX_4;
    offset['paddingVertical'] = foxtra;
    foxtra = golfie[yankee];
    foxtra = romeon.bind(entity)(foxtra);
    foxtra = foxtra.spacing;
    foxtra = foxtra.PX_8;
    offset['paddingHorizontal'] = foxtra;
    report['incidentDate'] = offset;
    offset = {};
    foxtra = golfie[yankee];
    foxtra = romeon.bind(entity)(foxtra);
    foxtra = foxtra.colors;
    foxtra = foxtra.BG_BRAND;
    offset['backgroundColor'] = foxtra;
    foxtra = golfie[yankee];
    foxtra = romeon.bind(entity)(foxtra);
    foxtra = foxtra.colors;
    foxtra = foxtra.REDESIGN_BUTTON_PRIMARY_TEXT;
    offset['color'] = foxtra;
    report['incidentDateNew'] = offset;
    offset = {};
    foxtra = 'capitalize';
    offset['textTransform'] = foxtra;
    report['newText'] = offset;
    offset = {'display': 'flex', 'alignItems': 'center'};
    foxtra = golfie[yankee];
    foxtra = romeon.bind(entity)(foxtra);
    foxtra = foxtra.colors;
    foxtra = foxtra.BG_BASE_SECONDARY;
    offset['backgroundColor'] = foxtra;
    foxtra = golfie[yankee];
    foxtra = romeon.bind(entity)(foxtra);
    foxtra = foxtra.radii;
    foxtra = foxtra.md;
    offset['borderRadius'] = foxtra;
    foxtra = golfie[yankee];
    foxtra = romeon.bind(entity)(foxtra);
    foxtra = foxtra.spacing;
    foxtra = foxtra.PX_8;
    offset['gap'] = foxtra;
    foxtra = golfie[yankee];
    foxtra = romeon.bind(entity)(foxtra);
    foxtra = foxtra.spacing;
    foxtra = foxtra.PX_8;
    offset['marginTop'] = foxtra;
    foxtra = golfie[yankee];
    foxtra = romeon.bind(entity)(foxtra);
    foxtra = foxtra.spacing;
    foxtra = foxtra.PX_24;
    offset['paddingTop'] = foxtra;
    foxtra = golfie[yankee];
    foxtra = romeon.bind(entity)(foxtra);
    foxtra = foxtra.spacing;
    foxtra = foxtra.PX_24;
    offset['paddingBottom'] = foxtra;
    report['emptyState'] = offset;
    offset = {'paddingTop': 15, 'paddingBottom': 15};
    report['emptyExpired'] = offset;
    offset = {};
    foxtra = golfie[yankee];
    foxtra = romeon.bind(entity)(foxtra);
    foxtra = foxtra.spacing;
    foxtra = foxtra.PX_12;
    offset['padding'] = foxtra;
    foxtra = golfie[yankee];
    foxtra = romeon.bind(entity)(foxtra);
    foxtra = foxtra.spacing;
    foxtra = foxtra.PX_4;
    offset['marginTop'] = foxtra;
    report['emptyIcon'] = offset;
    offset = {'height': 1, 'width': '100%', 'backgroundColor': null, 'marginTop': 10};
    foxtra = golfie[yankee];
    foxtra = romeon.bind(entity)(foxtra);
    foxtra = foxtra.colors;
    foxtra = foxtra.BACKGROUND_MODIFIER_ACCENT;
    offset['backgroundColor'] = foxtra;
    report['separator'] = offset;
    offset = {'display': 'flex', 'alignItems': 'center', 'justifyContent': 'center'};
    report['moreButtonContainer'] = offset;
    offset = {'display': 'flex', 'alignItems': 'center', 'justifyContent': 'center', 'borderBottomEndRadius': null, 'borderBottomStartRadius': null, 'backgroundColor': null, 'height': 29, 'width': 207};
    foxtra = golfie[yankee];
    foxtra = romeon.bind(entity)(foxtra);
    foxtra = foxtra.radii;
    foxtra = foxtra.xs;
    offset['borderBottomEndRadius'] = foxtra;
    foxtra = golfie[yankee];
    foxtra = romeon.bind(entity)(foxtra);
    foxtra = foxtra.radii;
    foxtra = foxtra.xs;
    offset['borderBottomStartRadius'] = foxtra;
    yankee = golfie[yankee];
    yankee = romeon.bind(entity)(yankee);
    yankee = yankee.colors;
    yankee = yankee.INTERACTIVE_MUTED;
    offset['backgroundColor'] = yankee;
    report['moreButton'] = offset;
    offset = {'flexShrink': 0, 'flexGrow': 1, 'gap': 2};
    report['headerTextContainer'] = offset;
    report = option.bind(verify)(report);
    var _closure1_slot14 = report;
    report = function(argFoo) { // Original name: RelativeIncidentTime
        entity = argFoo;
        offset = entity.timestamp;
        entity = _closure1_slot14;
        tangon = undefined;
        oscard = entity.bind(tangon)();
        zuuluu = _closure1_slot11;
        michal = _closure1_slot6;
        entity = {};
        oscard = oscard.incidentDate;
        entity['style'] = oscard;
        golfie = _closure1_slot11;
        verify = _closure1_slot0;
        yankee = _closure1_slot2;
        report = 11;
        report = yankee[report];
        report = verify.bind(tangon)(report);
        oscard = report.Text;
        report = {};
        option = 'text-xs/medium';
        report['variant'] = option;
        option = 15;
        option = yankee[option];
        verify = verify.bind(tangon)(option);
        option = verify.getClassificationRelativeIncidentTime;
        option = option.bind(verify)(offset);
        report['children'] = option;
        report = golfie.bind(tangon)(oscard, report);
        entity['children'] = report;
        entity = zuuluu.bind(tangon)(michal, entity);
        return entity;
    };
    var _closure1_slot15 = report;
    report = function() { // Original name: NewBadge
        entity = _closure1_slot14;
        tangon = undefined;
        option = entity.bind(tangon)();
        zuuluu = _closure1_slot11;
        michal = _closure1_slot6;
        entity = {};
        golfie = option.incidentDate;
        oscard = new Array(2);
        oscard[0] = golfie;
        golfie = option.incidentDateNew;
        oscard[1] = golfie;
        entity['style'] = oscard;
        golfie = _closure1_slot11;
        yankee = _closure1_slot0;
        romeon = _closure1_slot2;
        report = 11;
        report = romeon[report];
        report = yankee.bind(tangon)(report);
        oscard = report.Text;
        report = {'variant': 'text-xs/medium', 'color': 'always-white'};
        option = option.newText;
        report['style'] = option;
        option = 12;
        verify = romeon[option];
        verify = yankee.bind(tangon)(verify);
        offset = verify.intl;
        verify = offset.string;
        option = romeon[option];
        option = yankee.bind(tangon)(option);
        option = option.t;
        option = option.QKMRCw;
        option = verify.bind(offset)(option);
        report['children'] = option;
        report = golfie.bind(tangon)(oscard, report);
        entity['children'] = report;
        entity = zuuluu.bind(tangon)(michal, entity);
        return entity;
    };
    var _closure1_slot16 = report;
    report = 26;
    report = golfie[report];
    golfie = oscard.bind(entity)(report);
    oscard = golfie.fileFinishedImporting;
    report = 'modules/safety_hub/native/SafetyHubViolationsContainer.tsx';
    report = oscard.bind(golfie)(report);
    zuuluu['default'] = tangon;
    michal = function() { // Original name: ConnectedSafetyHubViolationsContainer
        _fun00011: for(var _fun00012_ip = 0; ; ) switch(_fun00012_ip) {
 0:
            entity = _closure1_slot14;
            report = undefined;
            oscard = entity.bind(report)();
            michal = _closure1_slot0;
            zuuluu = _closure1_slot2;
            entity = 25;
            tangon = zuuluu[entity];
            option = michal.bind(report)(tangon);
            tangon = option.useActiveSafetyHubClassifications;
            yankee = tangon.bind(option)();
            entity = zuuluu[entity];
            michal = michal.bind(report)(entity);
            entity = michal.useExpiredSafetyHubClassifications;
            offset = entity.bind(michal)();
            entity = yankee.length;
            zuuluu = 0;
            if(!(zuuluu === entity)) { _fun00012_ip = 84; continue _fun00011 }
 73:
            michal = offset.length;
            entity = null;
            if(!(zuuluu !== michal)) { _fun00012_ip = 190; continue _fun00011 }
 84:
            tangon = _closure1_slot12;
            zuuluu = _closure1_slot6;
            michal = {};
            option = oscard.connectedContainer;
            oscard = new Array(1);
            oscard[0] = option;
            michal['style'] = oscard;
            option = _closure1_slot11;
            verify = _closure1_slot21;
            oscard = {};
            romeon = 'active';
            oscard['status'] = romeon;
            oscard['classifications'] = yankee;
            option = option.bind(report)(verify, oscard);
            oscard = new Array(2);
            oscard[0] = option;
            option = _closure1_slot11;
            golfie = {};
            yankee = 'expired';
            golfie['status'] = yankee;
            golfie['classifications'] = offset;
            golfie = option.bind(report)(verify, golfie);
            oscard[1] = golfie;
            michal['children'] = oscard;
            entity = tangon.bind(report)(zuuluu, michal);
 190:
            return entity;
        }
    };
    zuuluu['ConnectedSafetyHubViolationsContainer'] = michal;
    return entity;
})();