// app/modules/safety_hub/native/SafetyHubViolationsContainer.tsx
export default (function(argFoo, argBar, argBaz, argCorge, _, argFred, argPlugh) {
    oscar = argBar;
    romeo = argBaz;
    zulu = argFred;
    golf = argPlugh;
    var _closure1_slot0 = oscar;
    var _closure1_slot1 = romeo;
    var _closure1_slot2 = golf;
    entity = function(argFoo) { // Original name: SafetyHubViolationsHeader
        _fun100042: for(var _fun100042_ip = 0; ; ) switch(_fun100042_ip) {
 0:
            entity = argFoo;
            sequence = entity.count;
            report = entity.onClick;
            oscar = entity.opened;
            kilo = entity.status;
            entity = _closure1_slot14;
            tango = undefined;
            verify = entity.bind(tango)();
            zulu = _closure1_slot12;
            mike = _closure1_slot1;
            backup = _closure1_slot2;
            entity = 9;
            entity = backup[entity];
            mike = mike.bind(tango)(entity);
            entity = {};
            entity['onPress'] = report;
            options = verify.header;
            report = new Array(1);
            report[0] = options;
            entity['style'] = report;
            offset = _closure1_slot11;
            options = _closure1_slot6;
            report = {};
            romeo = verify.iconBackground;
            yankee = new Array(1);
            yankee[0] = romeo;
            report['style'] = yankee;
            foxtrot = _closure1_slot11;
            romeo = _closure1_slot0;
            yankee = 10;
            yankee = backup[yankee];
            yankee = romeo.bind(tango)(yankee);
            romeo = yankee.WarningIcon;
            yankee = {};
            backup = 'active';
            sizing = backup === kilo;
            kilo = _closure1_slot1;
            output = _closure1_slot2;
            backup = 8;
            backup = output[backup];
            backup = kilo.bind(tango)(backup);
            kilo = backup.colors;
            if(sizing) { _fun100042_ip = 185; continue _fun100042 }
 177:
            backup = kilo.INTERACTIVE_MUTED;
            _fun100042_ip = 191; continue _fun100042;
 185:
            backup = kilo.INTERACTIVE_NORMAL;
 191:
            yankee['color'] = backup;
            backup = 'xs';
            yankee['size'] = backup;
            yankee = foxtrot.bind(tango)(romeo, yankee);
            report['children'] = yankee;
            options = offset.bind(tango)(options, report);
            report = new Array(3);
            report[0] = options;
            yankee = _closure1_slot12;
            offset = _closure1_slot6;
            options = {};
            foxtrot = verify.headerTextContainer;
            romeo = new Array(1);
            romeo[0] = foxtrot;
            options['style'] = romeo;
            backup = _closure1_slot11;
            foxtrot = _closure1_slot0;
            romeo = _closure1_slot2;
            output = 11;
            romeo = romeo[output];
            romeo = foxtrot.bind(tango)(romeo);
            foxtrot = romeo.Text;
            romeo = {};
            kilo = 'heading-sm/semibold';
            romeo['variant'] = kilo;
            result = _closure1_slot0;
            kilo = _closure1_slot2;
            source = 12;
            echo = kilo[source];
            echo = result.bind(tango)(echo);
            control = echo.intl;
            update = control.formatToPlainString;
            kilo = kilo[source];
            kilo = result.bind(tango)(kilo);
            result = kilo.t;
            if(sizing) { _fun100042_ip = 372; continue _fun100042 }
 343:
            echo = result.fZAHBQ;
            kilo = {};
            vacuum = sequence.toString;
            vacuum = vacuum.bind(sequence)();
            kilo['count'] = vacuum;
            kilo = update.bind(control)(echo, kilo);
            _fun100042_ip = 399; continue _fun100042;
 372:
            echo = result.IeV2oa;
            result = {};
            vacuum = sequence.toString;
            vacuum = vacuum.bind(sequence)();
            result['count'] = vacuum;
            kilo = update.bind(control)(echo, result);
 399:
            romeo['children'] = kilo;
            foxtrot = backup.bind(tango)(foxtrot, romeo);
            romeo = new Array(2);
            romeo[0] = foxtrot;
            kilo = _closure1_slot11;
            backup = _closure1_slot0;
            foxtrot = _closure1_slot2;
            foxtrot = foxtrot[output];
            foxtrot = backup.bind(tango)(foxtrot);
            backup = foxtrot.Text;
            foxtrot = {'variant': 'text-xxs/normal', 'color': 'text-muted'};
            update = _closure1_slot0;
            output = _closure1_slot2;
            result = output[source];
            result = update.bind(tango)(result);
            echo = result.intl;
            result = echo.string;
            output = output[source];
            output = update.bind(tango)(output);
            output = output.t;
            if(sizing) { _fun100042_ip = 514; continue _fun100042 }
 501:
            sizing = output.SzGV0t;
            sizing = result.bind(echo)(sizing);
            _fun100042_ip = 525; continue _fun100042;
 514:
            output = output.XJ2YVV;
            sizing = result.bind(echo)(output);
 525:
            foxtrot['children'] = sizing;
            foxtrot = kilo.bind(tango)(backup, foxtrot);
            romeo[1] = foxtrot;
            options['children'] = romeo;
            options = yankee.bind(tango)(offset, options);
            report[1] = options;
            options = _closure1_slot11;
            offset = _closure1_slot0;
            yankee = _closure1_slot2;
            if(oscar) { _fun100042_ip = 588; continue _fun100042 }
 568:
            oscar = 14;
            oscar = yankee[oscar];
            oscar = offset.bind(tango)(oscar);
            golf = oscar.ChevronSmallDownIcon;
            _fun100042_ip = 606; continue _fun100042;
 588:
            oscar = 13;
            oscar = yankee[oscar];
            oscar = offset.bind(tango)(oscar);
            golf = oscar.ChevronSmallUpIcon;
 606:
            oscar = {};
            offset = 'md';
            oscar['size'] = offset;
            offset = verify.chevron;
            verify = new Array(1);
            verify[0] = offset;
            oscar['style'] = verify;
            oscar = options.bind(tango)(golf, oscar);
            report[2] = oscar;
            entity['children'] = report;
            entity = zulu.bind(tango)(mike, entity);
            return entity;
        }
    };
    var _closure1_slot17 = entity;
    entity = function() { // Original name: EmptyActiveState
        entity = _closure1_slot14;
        tango = undefined;
        report = entity.bind(tango)();
        zulu = _closure1_slot12;
        mike = _closure1_slot6;
        entity = {};
        oscar = report.emptyState;
        report = new Array(1);
        report[0] = oscar;
        entity['style'] = report;
        offset = _closure1_slot11;
        romeo = _closure1_slot0;
        foxtrot = _closure1_slot2;
        oscar = 11;
        report = foxtrot[oscar];
        report = romeo.bind(tango)(report);
        options = report.Text;
        report = {};
        verify = 'heading-sm/extrabold';
        report['variant'] = verify;
        verify = 12;
        yankee = foxtrot[verify];
        yankee = romeo.bind(tango)(yankee);
        kilo = yankee.intl;
        backup = kilo.string;
        yankee = foxtrot[verify];
        yankee = romeo.bind(tango)(yankee);
        yankee = yankee.t;
        yankee = yankee.reLFaW;
        yankee = backup.bind(kilo)(yankee);
        report['children'] = yankee;
        options = offset.bind(tango)(options, report);
        report = new Array(2);
        report[0] = options;
        options = _closure1_slot11;
        oscar = foxtrot[oscar];
        oscar = romeo.bind(tango)(oscar);
        golf = oscar.Text;
        oscar = {};
        offset = 'text-xs/normal';
        oscar['variant'] = offset;
        offset = foxtrot[verify];
        offset = romeo.bind(tango)(offset);
        yankee = offset.intl;
        offset = yankee.string;
        verify = foxtrot[verify];
        verify = romeo.bind(tango)(verify);
        verify = verify.t;
        verify = verify.ERdH1t;
        verify = offset.bind(yankee)(verify);
        oscar['children'] = verify;
        oscar = options.bind(tango)(golf, oscar);
        report[1] = oscar;
        entity['children'] = report;
        entity = zulu.bind(tango)(mike, entity);
        return entity;
    };
    var _closure1_slot18 = entity;
    entity = function() { // Original name: EmptyExpiredState
        entity = _closure1_slot14;
        tango = undefined;
        oscar = entity.bind(tango)();
        zulu = _closure1_slot11;
        mike = _closure1_slot6;
        entity = {};
        golf = oscar.emptyState;
        oscar = new Array(1);
        oscar[0] = golf;
        entity['style'] = oscar;
        golf = _closure1_slot11;
        yankee = _closure1_slot0;
        romeo = _closure1_slot2;
        report = 11;
        report = romeo[report];
        report = yankee.bind(tango)(report);
        oscar = report.Text;
        report = {};
        options = 'text-xs/normal';
        report['variant'] = options;
        options = 12;
        verify = romeo[options];
        verify = yankee.bind(tango)(verify);
        offset = verify.intl;
        verify = offset.string;
        options = romeo[options];
        options = yankee.bind(tango)(options);
        options = options.t;
        options = options.RV3AXV;
        options = verify.bind(offset)(options);
        report['children'] = options;
        report = golf.bind(tango)(oscar, report);
        entity['children'] = report;
        entity = zulu.bind(tango)(mike, entity);
        return entity;
    };
    var _closure1_slot19 = entity;
    entity = function(argFoo) { // Original name: ClassificationDetail
        _fun100045: for(var _fun100045_ip = 0; ; ) switch(_fun100045_ip) {
 0:
            entity = argFoo;
            report = entity.classification;
            entity = _closure1_slot14;
            tango = undefined;
            foxtrot = entity.bind(tango)();
            verify = report.id;
            var _closure2_slot0 = verify;
            oscar = report.description;
            var _closure2_slot1 = oscar;
            entity = report.guild_metadata;
            var _closure2_slot2 = entity;
            zulu = _closure1_slot1;
            golf = _closure1_slot2;
            mike = 16;
            mike = golf[mike];
            zulu = zulu.bind(tango)(mike);
            mike = zulu.extractTimestamp;
            backup = mike.bind(zulu)(verify);
            zulu = _closure1_slot0;
            mike = 17;
            mike = golf[mike];
            zulu = zulu.bind(tango)(mike);
            mike = zulu.useIsNewClassification;
            yankee = mike.bind(zulu)(report);
            report = _closure1_slot4;
            zulu = report.useMemo;
            mike = new Array(2);
            mike[0] = oscar;
            mike[1] = entity;
            entity = function() {
                _fun100046: for(var _fun100046_ip = 0; ; ) switch(_fun100046_ip) {
 0:
                    yankee = function(argFoo, argBar) { // Original name: hook
                        report = _closure1_slot11;
                        mike = _closure1_slot0;
                        zulu = _closure1_slot2;
                        entity = 11;
                        entity = zulu[entity];
                        tango = undefined;
                        entity = mike.bind(tango)(entity);
                        zulu = entity.Text;
                        mike = {};
                        entity = 'heading-md/extrabold';
                        mike['variant'] = entity;
                        entity = argFoo;
                        mike['children'] = entity;
                        entity = argBar;
                        entity = report.bind(tango)(zulu, mike, entity);
                        return entity;
                    };
                    verify = {};
                    entity = _closure2_slot1;
                    verify['description'] = entity;
                    verify['descriptionHook'] = yankee;
                    entity = _closure2_slot2;
                    offset = null;
                    if(!(offset == entity)) { _fun100046_ip = 105; continue _fun100046 }
 39:
                    report = _closure1_slot0;
                    oscar = _closure1_slot2;
                    entity = 12;
                    mike = oscar[entity];
                    tango = undefined;
                    mike = report.bind(tango)(mike);
                    zulu = mike.intl;
                    mike = zulu.format;
                    entity = oscar[entity];
                    entity = report.bind(tango)(entity);
                    entity = entity.t;
                    entity = entity.QY4g5u;
                    entity = mike.bind(zulu)(entity, verify);
                    _fun100046_ip = 372; continue _fun100046;
 105:
                    mike = _closure2_slot2;
                    mike = offset == mike;
                    options = undefined;
                    tango = undefined;
                    if(mike) { _fun100046_ip = 130; continue _fun100046 }
 120:
                    mike = _closure2_slot2;
                    tango = mike.member_type;
 130:
                    report = _closure1_slot0;
                    oscar = _closure1_slot2;
                    mike = 18;
                    mike = oscar[mike];
                    mike = report.bind(options)(mike);
                    mike = mike.MemberType;
                    mike = mike.OWNER;
                    if(!(tango !== mike)) { _fun100046_ip = 270; continue _fun100046 }
 169:
                    tango = _closure1_slot0;
                    romeo = _closure1_slot2;
                    mike = 12;
                    report = romeo[mike];
                    report = tango.bind(options)(report);
                    oscar = report.intl;
                    report = oscar.format;
                    mike = romeo[mike];
                    mike = tango.bind(options)(mike);
                    mike = mike.t;
                    tango = mike.rmpEPD;
                    mike = {};
                    romeo = _closure2_slot1;
                    mike['classification_type'] = romeo;
                    mike['classificationHook'] = yankee;
                    yankee = _closure2_slot2;
                    romeo = offset == yankee;
                    yankee = undefined;
                    if(romeo) { _fun100046_ip = 257; continue _fun100046 }
 248:
                    romeo = _closure2_slot2;
                    yankee = romeo.name;
 257:
                    mike['guildName'] = yankee;
                    mike = report.bind(oscar)(tango, mike);
                    _fun100046_ip = 369; continue _fun100046;
 270:
                    tango = _closure1_slot0;
                    yankee = _closure1_slot2;
                    zulu = 12;
                    report = yankee[zulu];
                    report = tango.bind(options)(report);
                    oscar = report.intl;
                    report = oscar.format;
                    zulu = yankee[zulu];
                    zulu = tango.bind(options)(zulu);
                    zulu = zulu.t;
                    tango = zulu.Lb0HVl;
                    zulu = {};
                    backup = zulu;
                    foxtrot = verify;
                    verify = copyDataProperties(backup, foxtrot);
                    verify = _closure2_slot2;
                    verify = offset == verify;
                    options = undefined;
                    if(verify) { _fun100046_ip = 354; continue _fun100046 }
 345:
                    golf = _closure2_slot2;
                    options = golf.name;
 354:
                    golf = 'guildName';
                    zulu[golf] = options;
                    mike = report.bind(oscar)(tango, zulu);
 369:
                    entity = mike;
 372:
                    return entity;
                }
            };
            kilo = zulu.bind(report)(entity, mike);
            zulu = _closure1_slot11;
            mike = _closure1_slot6;
            entity = {};
            oscar = foxtrot.detailContainerOuter;
            report = new Array(2);
            report[0] = oscar;
            oscar = null;
            if(!yankee) { _fun100045_ip = 179; continue _fun100045 }
 173:
            oscar = foxtrot.detailContainerOuterNew;
 179:
            report[1] = oscar;
            entity['style'] = report;
            golf = _closure1_slot11;
            oscar = _closure1_slot1;
            verify = _closure1_slot2;
            report = 9;
            report = verify[report];
            oscar = oscar.bind(tango)(report);
            report = {};
            options = function() { // Original name: onPress
                tango = _closure1_slot1;
                mike = _closure1_slot2;
                entity = 19;
                zulu = mike[entity];
                entity = undefined;
                report = tango.bind(entity)(zulu);
                tango = report.pushLazy;
                golf = _closure1_slot0;
                zulu = 21;
                zulu = mike[zulu];
                golf = golf.bind(entity)(zulu);
                zulu = 20;
                zulu = mike[zulu];
                mike = mike.paths;
                zulu = golf.bind(entity)(zulu, mike);
                mike = {};
                golf = _closure2_slot0;
                mike['classificationId'] = golf;
                oscar = _closure1_slot8;
                oscar = oscar.StandingTab;
                mike['source'] = oscar;
                mike = tango.bind(report)(zulu, mike);
                return entity;
            };
            report['onPress'] = options;
            offset = _closure1_slot12;
            verify = _closure1_slot6;
            options = {};
            sizing = foxtrot.detailContainerInner;
            foxtrot = new Array(1);
            foxtrot[0] = sizing;
            options['style'] = foxtrot;
            sizing = _closure1_slot11;
            if(yankee) { _fun100045_ip = 278; continue _fun100045 }
 259:
            foxtrot = _closure1_slot15;
            yankee = {};
            yankee['timestamp'] = backup;
            foxtrot = sizing.bind(tango)(foxtrot, yankee);
            _fun100045_ip = 290; continue _fun100045;
 278:
            backup = _closure1_slot16;
            yankee = {};
            foxtrot = sizing.bind(tango)(backup, yankee);
 290:
            yankee = new Array(2);
            yankee[0] = foxtrot;
            backup = _closure1_slot11;
            foxtrot = _closure1_slot0;
            sizing = _closure1_slot2;
            romeo = 11;
            romeo = sizing[romeo];
            romeo = foxtrot.bind(tango)(romeo);
            foxtrot = romeo.Text;
            romeo = {};
            sizing = 'heading-md/normal';
            romeo['variant'] = sizing;
            romeo['children'] = kilo;
            romeo = backup.bind(tango)(foxtrot, romeo);
            yankee[1] = romeo;
            options['children'] = yankee;
            options = offset.bind(tango)(verify, options);
            report['children'] = options;
            report = golf.bind(tango)(oscar, report);
            entity['children'] = report;
            entity = zulu.bind(tango)(mike, entity);
            return entity;
        }
    };
    var _closure1_slot20 = entity;
    tango = function(argFoo) { // Original name: SafetyHubViolationsContainer
        _fun100049: for(var _fun100049_ip = 0; ; ) switch(_fun100049_ip) {
 0:
            entity = argFoo;
            backup = entity.status;
            kilo = entity.classifications;
            var _closure2_slot0 = kilo;
            tango = undefined;
            var _closure2_slot8 = tango;
            entity = _closure1_slot14;
            context = entity.bind(tango)();
            zulu = _closure1_slot4;
            mike = zulu.useState;
            entity = false;
            mike = mike.bind(zulu)(entity);
            entity = _closure1_slot3;
            golf = 2;
            entity = entity.bind(tango)(mike, golf);
            foxtrot = 0;
            oscar = entity[foxtrot];
            var _closure2_slot1 = oscar;
            report = 1;
            entity = entity[report];
            var _closure2_slot2 = entity;
            zulu = _closure1_slot4;
            entity = zulu.useState;
            mike = 3;
            zulu = entity.bind(zulu)(mike);
            entity = _closure1_slot3;
            entity = entity.bind(tango)(zulu, golf);
            zulu = entity[foxtrot];
            var _closure2_slot3 = zulu;
            entity = entity[report];
            var _closure2_slot4 = entity;
            report = _closure1_slot0;
            golf = _closure1_slot2;
            entity = 22;
            entity = golf[entity];
            options = report.bind(tango)(entity);
            entity = options.useSafetyHubAccountStanding;
            options = entity.bind(options)();
            var _closure2_slot5 = options;
            entity = 23;
            entity = golf[entity];
            verify = report.bind(tango)(entity);
            golf = verify.useStateFromStores;
            entity = _closure1_slot7;
            report = new Array(1);
            report[0] = entity;
            entity = function() {
                mike = _closure1_slot7;
                entity = mike.getIsDsaEligible;
                entity = entity.bind(mike)();
                return entity;
            };
            entity = golf.bind(verify)(report, entity);
            var _closure2_slot6 = entity;
            verify = _closure1_slot4;
            golf = verify.useMemo;
            report = new Array(2);
            report[0] = kilo;
            report[1] = zulu;
            zulu = function() {
                tango = _closure2_slot0;
                zulu = tango.slice;
                mike = _closure2_slot3;
                entity = 0;
                entity = zulu.bind(tango)(entity, mike);
                return entity;
            };
            yankee = golf.bind(verify)(zulu, report);
            var _closure2_slot7 = yankee;
            golf = _closure1_slot4;
            report = golf.useEffect;
            zulu = new Array(4);
            zulu[0] = oscar;
            options = options.state;
            zulu[1] = options;
            zulu[2] = yankee;
            zulu[3] = entity;
            entity = function() {
                _fun100052: for(var _fun100052_ip = 0; ; ) switch(_fun100052_ip) {
 0:
                    entity = _closure2_slot1;
                    if(!entity) { _fun100052_ip = 147; continue _fun100052 }
 13:
                    zulu = _closure1_slot1;
                    mike = _closure1_slot2;
                    entity = 24;
                    mike = mike[entity];
                    entity = undefined;
                    tango = zulu.bind(entity)(mike);
                    zulu = tango.track;
                    entity = _closure1_slot10;
                    mike = entity.SAFETY_HUB_ACTION;
                    entity = {};
                    golf = _closure1_slot9;
                    golf = golf.ViewViolationsDropdown;
                    entity['action'] = golf;
                    golf = _closure2_slot5;
                    golf = golf.state;
                    entity['account_standing'] = golf;
                    verify = _closure2_slot7;
                    options = verify.map;
                    golf = function(argFoo) {
                        entity = global;
                        zulu = entity.Number;
                        entity = argFoo;
                        mike = entity.id;
                        entity = undefined;
                        entity = zulu.bind(entity)(mike);
                        return entity;
                    };
                    golf = options.bind(verify)(golf);
                    entity['classification_ids'] = golf;
                    oscar = _closure1_slot8;
                    oscar = oscar.StandingTab;
                    entity['source'] = oscar;
                    oscar = false;
                    entity['is_violative_content_shown'] = oscar;
                    report = _closure2_slot6;
                    entity['is_dsa_eligible'] = report;
                    entity = zulu.bind(tango)(mike, entity);
 147:
                    entity = undefined;
                    return entity;
                }
            };
            entity = report.bind(golf)(entity, zulu);
            zulu = kilo.length;
            entity = yankee.length;
            entity = zulu - entity;
            whiskey = mike;
            if(!(!(entity > whiskey))) { _fun100049_ip = 330; continue _fun100049 }
 316:
            mike = kilo.length;
            entity = yankee.length;
            whiskey = mike - entity;
 330:
            _closure2_slot8 = whiskey;
            zulu = _closure1_slot12;
            mike = _closure1_slot6;
            entity = {};
            golf = context.container;
            report = new Array(1);
            report[0] = golf;
            entity['style'] = report;
            options = _closure1_slot11;
            golf = _closure1_slot17;
            report = {};
            report['status'] = backup;
            verify = function() { // Original name: onClick
                zulu = _closure2_slot2;
                mike = undefined;
                entity = function(argFoo) {
                    entity = argFoo;
                    entity = !entity;
                    return entity;
                };
                entity = zulu.bind(mike)(entity);
                return entity;
            };
            report['onClick'] = verify;
            report['opened'] = oscar;
            verify = kilo.length;
            report['count'] = verify;
            golf = options.bind(tango)(golf, report);
            report = new Array(2);
            report[0] = golf;
            if(!oscar) { _fun100049_ip = 885; continue _fun100049 }
 421:
            verify = _closure1_slot12;
            options = _closure1_slot6;
            golf = {};
            sizing = _closure1_slot11;
            offset = {};
            result = context.separator;
            output = new Array(1);
            output[0] = result;
            offset['style'] = output;
            sizing = sizing.bind(tango)(options, offset);
            offset = new Array(5);
            offset[0] = sizing;
            sizing = yankee.length;
            sizing = sizing > foxtrot;
            if(!sizing) { _fun100049_ip = 498; continue _fun100049 }
 481:
            result = yankee.map;
            output = function(argFoo) {
                entity = argFoo;
                report = _closure1_slot11;
                tango = _closure1_slot20;
                zulu = {};
                zulu['classification'] = entity;
                mike = entity.id;
                entity = undefined;
                entity = report.bind(entity)(tango, zulu, mike);
                return entity;
            };
            sizing = result.bind(yankee)(output);
 498:
            offset[1] = sizing;
            sizing = yankee.length;
            kilo = kilo.length;
            kilo = sizing < kilo;
            if(!kilo) { _fun100049_ip = 783; continue _fun100049 }
 522:
            result = _closure1_slot12;
            output = _closure1_slot13;
            sizing = {};
            source = _closure1_slot11;
            update = _closure1_slot6;
            echo = {};
            vacuum = context.separator;
            control = new Array(1);
            control[0] = vacuum;
            echo['style'] = control;
            update = source.bind(tango)(update, echo);
            echo = new Array(2);
            echo[0] = update;
            control = _closure1_slot11;
            source = _closure1_slot6;
            update = {};
            sequence = context.moreButtonContainer;
            vacuum = new Array(1);
            vacuum[0] = sequence;
            update['style'] = vacuum;
            config = _closure1_slot11;
            sequence = _closure1_slot5;
            vacuum = {};
            papa = context.moreButton;
            context = new Array(1);
            context[0] = papa;
            vacuum['style'] = context;
            record = function() { // Original name: onPress
                zulu = _closure2_slot4;
                mike = undefined;
                entity = function(argFoo) {
                    mike = _closure2_slot8;
                    entity = argFoo;
                    entity = entity + mike;
                    return entity;
                };
                entity = zulu.bind(mike)(entity);
                return entity;
            };
            vacuum['onPress'] = record;
            papa = _closure1_slot11;
            status = _closure1_slot0;
            equality = _closure1_slot2;
            record = 11;
            record = equality[record];
            record = status.bind(tango)(record);
            context = record.Text;
            record = {};
            target = 'heading-sm/semibold';
            record['variant'] = target;
            target = 12;
            sierra = equality[target];
            sierra = status.bind(tango)(sierra);
            lima = sierra.intl;
            sierra = lima.format;
            target = equality[target];
            target = status.bind(tango)(target);
            target = target.t;
            status = target.9Ml56O;
            target = {};
            target['nextPageSize'] = whiskey;
            target = sierra.bind(lima)(status, target);
            record['children'] = target;
            record = papa.bind(tango)(context, record);
            vacuum['children'] = record;
            vacuum = config.bind(tango)(sequence, vacuum);
            update['children'] = vacuum;
            update = control.bind(tango)(source, update);
            echo[1] = update;
            sizing['children'] = echo;
            kilo = result.bind(tango)(output, sizing);
 783:
            offset[2] = kilo;
            kilo = yankee.length;
            kilo = foxtrot === kilo;
            if(!kilo) { _fun100049_ip = 807; continue _fun100049 }
 799:
            sizing = 'active';
            kilo = sizing === backup;
 807:
            if(!kilo) { _fun100049_ip = 826; continue _fun100049 }
 810:
            result = _closure1_slot11;
            output = _closure1_slot18;
            sizing = {};
            kilo = result.bind(tango)(output, sizing);
 826:
            offset[3] = kilo;
            yankee = yankee.length;
            yankee = foxtrot === yankee;
            if(!yankee) { _fun100049_ip = 852; continue _fun100049 }
 842:
            foxtrot = 'expired';
            yankee = foxtrot === backup;
 852:
            if(!yankee) { _fun100049_ip = 871; continue _fun100049 }
 855:
            backup = _closure1_slot11;
            foxtrot = _closure1_slot19;
            romeo = {};
            yankee = backup.bind(tango)(foxtrot, romeo);
 871:
            offset[4] = yankee;
            golf['children'] = offset;
            oscar = verify.bind(tango)(options, golf);
 885:
            report[1] = oscar;
            entity['children'] = report;
            entity = zulu.bind(tango)(mike, entity);
            return entity;
        }
    };
    var _closure1_slot21 = tango;
    entity = global;
    verify = entity.Object;
    options = verify.defineProperty;
    report = {};
    entity = true;
    report['value'] = entity;
    entity = '__esModule';
    entity = options.bind(verify)(zulu, entity, report);
    entity = 0;
    report = golf[entity];
    entity = undefined;
    report = romeo.bind(entity)(report);
    var _closure1_slot3 = report;
    report = 1;
    options = golf[report];
    report = argCorge;
    report = report.bind(entity)(options);
    var _closure1_slot4 = report;
    report = 2;
    report = golf[report];
    report = oscar.bind(entity)(report);
    options = report.Pressable;
    var _closure1_slot5 = options;
    report = report.View;
    var _closure1_slot6 = report;
    report = 3;
    report = golf[report];
    report = romeo.bind(entity)(report);
    var _closure1_slot7 = report;
    report = 4;
    report = golf[report];
    report = oscar.bind(entity)(report);
    options = report.SafetyHubAnalyticsActionSource;
    var _closure1_slot8 = options;
    report = report.SafetyHubAnalyticsActions;
    var _closure1_slot9 = report;
    report = 5;
    report = golf[report];
    report = oscar.bind(entity)(report);
    report = report.AnalyticEvents;
    var _closure1_slot10 = report;
    report = 6;
    options = golf[report];
    options = oscar.bind(entity)(options);
    options = options.jsx;
    var _closure1_slot11 = options;
    options = golf[report];
    options = oscar.bind(entity)(options);
    options = options.jsxs;
    var _closure1_slot12 = options;
    report = golf[report];
    report = oscar.bind(entity)(report);
    report = report.Fragment;
    var _closure1_slot13 = report;
    report = 7;
    report = golf[report];
    verify = oscar.bind(entity)(report);
    options = verify.createStyles;
    report = {};
    offset = {'display': 'flex', 'marginTop': null, 'marginBottom': 36};
    foxtrot = 'flex';
    yankee = 8;
    backup = golf[yankee];
    backup = romeo.bind(entity)(backup);
    backup = backup.spacing;
    backup = backup.PX_12;
    offset['marginTop'] = backup;
    backup = golf[yankee];
    backup = romeo.bind(entity)(backup);
    backup = backup.spacing;
    backup = backup.PX_12;
    offset['gap'] = backup;
    report['connectedContainer'] = offset;
    offset = {};
    backup = golf[yankee];
    backup = romeo.bind(entity)(backup);
    backup = backup.colors;
    backup = backup.CARD_PRIMARY_BG;
    offset['backgroundColor'] = backup;
    backup = golf[yankee];
    backup = romeo.bind(entity)(backup);
    backup = backup.radii;
    backup = backup.md;
    offset['borderRadius'] = backup;
    backup = golf[yankee];
    backup = romeo.bind(entity)(backup);
    backup = backup.spacing;
    backup = backup.PX_8;
    offset['padding'] = backup;
    backup = '100%';
    offset['width'] = backup;
    report['container'] = offset;
    offset = {'display': 'flex', 'flexDirection': 'row', 'alignItems': 'center', 'gap': null, 'width': '100%'};
    backup = golf[yankee];
    backup = romeo.bind(entity)(backup);
    backup = backup.spacing;
    backup = backup.PX_16;
    offset['gap'] = backup;
    report['header'] = offset;
    offset = {};
    backup = golf[yankee];
    backup = romeo.bind(entity)(backup);
    backup = backup.colors;
    backup = backup.BG_MOD_STRONG;
    offset['backgroundColor'] = backup;
    backup = golf[yankee];
    backup = romeo.bind(entity)(backup);
    backup = backup.radii;
    backup = backup.md;
    offset['borderRadius'] = backup;
    backup = golf[yankee];
    backup = romeo.bind(entity)(backup);
    backup = backup.spacing;
    backup = backup.PX_12;
    offset['padding'] = backup;
    backup = 10;
    offset['marginTop'] = backup;
    report['detailContainerOuter'] = offset;
    offset = {'borderColor': null, 'borderWidth': 1, 'borderStyle': 'solid'};
    backup = golf[yankee];
    backup = romeo.bind(entity)(backup);
    backup = backup.colors;
    backup = backup.REDESIGN_BUTTON_PRIMARY_BACKGROUND;
    offset['borderColor'] = backup;
    report['detailContainerOuterNew'] = offset;
    offset = {};
    offset['display'] = foxtrot;
    foxtrot = golf[yankee];
    foxtrot = romeo.bind(entity)(foxtrot);
    foxtrot = foxtrot.spacing;
    foxtrot = foxtrot.PX_8;
    offset['gap'] = foxtrot;
    report['detailContainerInner'] = offset;
    offset = {'display': 'flex', 'borderRadius': null, 'backgroundColor': null, 'justifyContent': 'center', 'alignItems': 'center', 'padding': 6};
    foxtrot = golf[yankee];
    foxtrot = romeo.bind(entity)(foxtrot);
    foxtrot = foxtrot.radii;
    foxtrot = foxtrot.round;
    offset['borderRadius'] = foxtrot;
    foxtrot = golf[yankee];
    foxtrot = romeo.bind(entity)(foxtrot);
    foxtrot = foxtrot.colors;
    foxtrot = foxtrot.BG_BASE_TERTIARY;
    offset['backgroundColor'] = foxtrot;
    report['iconBackground'] = offset;
    offset = {};
    foxtrot = 'auto';
    offset['marginLeft'] = foxtrot;
    report['chevron'] = offset;
    offset = {};
    foxtrot = 'flex-start';
    offset['alignSelf'] = foxtrot;
    foxtrot = golf[yankee];
    foxtrot = romeo.bind(entity)(foxtrot);
    foxtrot = foxtrot.colors;
    foxtrot = foxtrot.BG_BASE_TERTIARY;
    offset['backgroundColor'] = foxtrot;
    foxtrot = golf[yankee];
    foxtrot = romeo.bind(entity)(foxtrot);
    foxtrot = foxtrot.radii;
    foxtrot = foxtrot.md;
    offset['borderRadius'] = foxtrot;
    foxtrot = golf[yankee];
    foxtrot = romeo.bind(entity)(foxtrot);
    foxtrot = foxtrot.spacing;
    foxtrot = foxtrot.PX_4;
    offset['paddingVertical'] = foxtrot;
    foxtrot = golf[yankee];
    foxtrot = romeo.bind(entity)(foxtrot);
    foxtrot = foxtrot.spacing;
    foxtrot = foxtrot.PX_8;
    offset['paddingHorizontal'] = foxtrot;
    report['incidentDate'] = offset;
    offset = {};
    foxtrot = golf[yankee];
    foxtrot = romeo.bind(entity)(foxtrot);
    foxtrot = foxtrot.colors;
    foxtrot = foxtrot.BG_BRAND;
    offset['backgroundColor'] = foxtrot;
    foxtrot = golf[yankee];
    foxtrot = romeo.bind(entity)(foxtrot);
    foxtrot = foxtrot.colors;
    foxtrot = foxtrot.REDESIGN_BUTTON_PRIMARY_TEXT;
    offset['color'] = foxtrot;
    report['incidentDateNew'] = offset;
    offset = {};
    foxtrot = 'capitalize';
    offset['textTransform'] = foxtrot;
    report['newText'] = offset;
    offset = {'display': 'flex', 'alignItems': 'center'};
    foxtrot = golf[yankee];
    foxtrot = romeo.bind(entity)(foxtrot);
    foxtrot = foxtrot.colors;
    foxtrot = foxtrot.BG_BASE_SECONDARY;
    offset['backgroundColor'] = foxtrot;
    foxtrot = golf[yankee];
    foxtrot = romeo.bind(entity)(foxtrot);
    foxtrot = foxtrot.radii;
    foxtrot = foxtrot.md;
    offset['borderRadius'] = foxtrot;
    foxtrot = golf[yankee];
    foxtrot = romeo.bind(entity)(foxtrot);
    foxtrot = foxtrot.spacing;
    foxtrot = foxtrot.PX_8;
    offset['gap'] = foxtrot;
    foxtrot = golf[yankee];
    foxtrot = romeo.bind(entity)(foxtrot);
    foxtrot = foxtrot.spacing;
    foxtrot = foxtrot.PX_8;
    offset['marginTop'] = foxtrot;
    foxtrot = golf[yankee];
    foxtrot = romeo.bind(entity)(foxtrot);
    foxtrot = foxtrot.spacing;
    foxtrot = foxtrot.PX_24;
    offset['paddingTop'] = foxtrot;
    foxtrot = golf[yankee];
    foxtrot = romeo.bind(entity)(foxtrot);
    foxtrot = foxtrot.spacing;
    foxtrot = foxtrot.PX_24;
    offset['paddingBottom'] = foxtrot;
    report['emptyState'] = offset;
    offset = {'paddingTop': 15, 'paddingBottom': 15};
    report['emptyExpired'] = offset;
    offset = {};
    foxtrot = golf[yankee];
    foxtrot = romeo.bind(entity)(foxtrot);
    foxtrot = foxtrot.spacing;
    foxtrot = foxtrot.PX_12;
    offset['padding'] = foxtrot;
    foxtrot = golf[yankee];
    foxtrot = romeo.bind(entity)(foxtrot);
    foxtrot = foxtrot.spacing;
    foxtrot = foxtrot.PX_4;
    offset['marginTop'] = foxtrot;
    report['emptyIcon'] = offset;
    offset = {'height': 1, 'width': '100%', 'backgroundColor': null, 'marginTop': 10};
    foxtrot = golf[yankee];
    foxtrot = romeo.bind(entity)(foxtrot);
    foxtrot = foxtrot.colors;
    foxtrot = foxtrot.BACKGROUND_MODIFIER_ACCENT;
    offset['backgroundColor'] = foxtrot;
    report['separator'] = offset;
    offset = {'display': 'flex', 'alignItems': 'center', 'justifyContent': 'center'};
    report['moreButtonContainer'] = offset;
    offset = {'display': 'flex', 'alignItems': 'center', 'justifyContent': 'center', 'borderBottomEndRadius': null, 'borderBottomStartRadius': null, 'backgroundColor': null, 'height': 29, 'width': 207};
    foxtrot = golf[yankee];
    foxtrot = romeo.bind(entity)(foxtrot);
    foxtrot = foxtrot.radii;
    foxtrot = foxtrot.xs;
    offset['borderBottomEndRadius'] = foxtrot;
    foxtrot = golf[yankee];
    foxtrot = romeo.bind(entity)(foxtrot);
    foxtrot = foxtrot.radii;
    foxtrot = foxtrot.xs;
    offset['borderBottomStartRadius'] = foxtrot;
    yankee = golf[yankee];
    yankee = romeo.bind(entity)(yankee);
    yankee = yankee.colors;
    yankee = yankee.INTERACTIVE_MUTED;
    offset['backgroundColor'] = yankee;
    report['moreButton'] = offset;
    offset = {'flexShrink': 0, 'flexGrow': 1, 'gap': 2};
    report['headerTextContainer'] = offset;
    report = options.bind(verify)(report);
    var _closure1_slot14 = report;
    report = function(argFoo) { // Original name: RelativeIncidentTime
        entity = argFoo;
        offset = entity.timestamp;
        entity = _closure1_slot14;
        tango = undefined;
        oscar = entity.bind(tango)();
        zulu = _closure1_slot11;
        mike = _closure1_slot6;
        entity = {};
        oscar = oscar.incidentDate;
        entity['style'] = oscar;
        golf = _closure1_slot11;
        verify = _closure1_slot0;
        yankee = _closure1_slot2;
        report = 11;
        report = yankee[report];
        report = verify.bind(tango)(report);
        oscar = report.Text;
        report = {};
        options = 'text-xs/medium';
        report['variant'] = options;
        options = 15;
        options = yankee[options];
        verify = verify.bind(tango)(options);
        options = verify.getClassificationRelativeIncidentTime;
        options = options.bind(verify)(offset);
        report['children'] = options;
        report = golf.bind(tango)(oscar, report);
        entity['children'] = report;
        entity = zulu.bind(tango)(mike, entity);
        return entity;
    };
    var _closure1_slot15 = report;
    report = function() { // Original name: NewBadge
        entity = _closure1_slot14;
        tango = undefined;
        options = entity.bind(tango)();
        zulu = _closure1_slot11;
        mike = _closure1_slot6;
        entity = {};
        golf = options.incidentDate;
        oscar = new Array(2);
        oscar[0] = golf;
        golf = options.incidentDateNew;
        oscar[1] = golf;
        entity['style'] = oscar;
        golf = _closure1_slot11;
        yankee = _closure1_slot0;
        romeo = _closure1_slot2;
        report = 11;
        report = romeo[report];
        report = yankee.bind(tango)(report);
        oscar = report.Text;
        report = {'variant': 'text-xs/medium', 'color': 'always-white'};
        options = options.newText;
        report['style'] = options;
        options = 12;
        verify = romeo[options];
        verify = yankee.bind(tango)(verify);
        offset = verify.intl;
        verify = offset.string;
        options = romeo[options];
        options = yankee.bind(tango)(options);
        options = options.t;
        options = options.QKMRCw;
        options = verify.bind(offset)(options);
        report['children'] = options;
        report = golf.bind(tango)(oscar, report);
        entity['children'] = report;
        entity = zulu.bind(tango)(mike, entity);
        return entity;
    };
    var _closure1_slot16 = report;
    report = 26;
    report = golf[report];
    golf = oscar.bind(entity)(report);
    oscar = golf.fileFinishedImporting;
    report = 'modules/safety_hub/native/SafetyHubViolationsContainer.tsx';
    report = oscar.bind(golf)(report);
    zulu['default'] = tango;
    mike = function() { // Original name: ConnectedSafetyHubViolationsContainer
        _fun100061: for(var _fun100061_ip = 0; ; ) switch(_fun100061_ip) {
 0:
            entity = _closure1_slot14;
            report = undefined;
            oscar = entity.bind(report)();
            mike = _closure1_slot0;
            zulu = _closure1_slot2;
            entity = 25;
            tango = zulu[entity];
            options = mike.bind(report)(tango);
            tango = options.useActiveSafetyHubClassifications;
            yankee = tango.bind(options)();
            entity = zulu[entity];
            mike = mike.bind(report)(entity);
            entity = mike.useExpiredSafetyHubClassifications;
            offset = entity.bind(mike)();
            entity = yankee.length;
            zulu = 0;
            if(!(zulu === entity)) { _fun100061_ip = 84; continue _fun100061 }
 73:
            mike = offset.length;
            entity = null;
            if(!(zulu !== mike)) { _fun100061_ip = 190; continue _fun100061 }
 84:
            tango = _closure1_slot12;
            zulu = _closure1_slot6;
            mike = {};
            options = oscar.connectedContainer;
            oscar = new Array(1);
            oscar[0] = options;
            mike['style'] = oscar;
            options = _closure1_slot11;
            verify = _closure1_slot21;
            oscar = {};
            romeo = 'active';
            oscar['status'] = romeo;
            oscar['classifications'] = yankee;
            options = options.bind(report)(verify, oscar);
            oscar = new Array(2);
            oscar[0] = options;
            options = _closure1_slot11;
            golf = {};
            yankee = 'expired';
            golf['status'] = yankee;
            golf['classifications'] = offset;
            golf = options.bind(report)(verify, golf);
            oscar[1] = golf;
            mike['children'] = oscar;
            entity = tango.bind(report)(zulu, mike);
 190:
            return entity;
        }
    };
    zulu['ConnectedSafetyHubViolationsContainer'] = mike;
    return entity;
})();