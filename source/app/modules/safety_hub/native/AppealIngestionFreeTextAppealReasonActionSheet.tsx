// app/modules/safety_hub/native/AppealIngestionFreeTextAppealReasonActionSheet.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    report = argBar;
    yankee = argBaz;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    var _closure1_slot1 = yankee;
    var _closure1_slot2 = oscard;
    entity = global;
    option = entity.Object;
    golfie = option.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(option)(zuuluu, entity, tangon);
    entity = 0;
    tangon = oscard[entity];
    entity = undefined;
    tangon = yankee.bind(entity)(tangon);
    var _closure1_slot3 = tangon;
    tangon = 1;
    golfie = oscard[tangon];
    tangon = argCor;
    tangon = tangon.bind(entity)(golfie);
    var _closure1_slot4 = tangon;
    tangon = 2;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.View;
    var _closure1_slot5 = tangon;
    tangon = 3;
    tangon = oscard[tangon];
    tangon = yankee.bind(entity)(tangon);
    var _closure1_slot6 = tangon;
    tangon = 4;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    offset = tangon.Fonts;
    tangon = 5;
    golfie = oscard[tangon];
    golfie = report.bind(entity)(golfie);
    golfie = golfie.jsx;
    var _closure1_slot7 = golfie;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.jsxs;
    var _closure1_slot8 = tangon;
    tangon = 6;
    tangon = oscard[tangon];
    option = report.bind(entity)(tangon);
    golfie = option.createStyles;
    tangon = {};
    verify = {};
    romeon = 14;
    verify['fontSize'] = romeon;
    offset = offset.PRIMARY_SEMIBOLD;
    verify['fontFamily'] = offset;
    tangon['buttonTextStyles'] = verify;
    verify = {};
    offset = 'center';
    verify['textAlign'] = offset;
    tangon['footerText'] = verify;
    verify = {'marginTop': 4294967280, 'marginBottom': 36};
    tangon['textArea'] = verify;
    verify = {'height': 1, 'backgroundColor': null, 'marginHorizontal': 4294967280};
    offset = 7;
    offset = oscard[offset];
    offset = yankee.bind(entity)(offset);
    offset = offset.colors;
    offset = offset.BACKGROUND_MODIFIER_ACCENT;
    verify['backgroundColor'] = offset;
    tangon['separator'] = verify;
    verify = {'alignSelf': 'flex-end', 'flexDirection': 'row', 'marginBottom': 4294967270};
    tangon['closeIcon'] = verify;
    tangon = golfie.bind(option)(tangon);
    var _closure1_slot9 = tangon;
    tangon = 18;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/safety_hub/native/AppealIngestionFreeTextAppealReasonActionSheet.tsx';
    tangon = report.bind(oscard)(tangon);
    michal = function(argFoo) { // Original name: AppealIngestionFreeTextAppealReasonActionSheet
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            entity = argFoo;
            michal = entity.onSave;
            var _closure2_slot0 = michal;
            output = entity.onClose;
            entity = _closure1_slot9;
            tangon = undefined;
            romeon = entity.bind(tangon)();
            michal = _closure1_slot0;
            zuuluu = _closure1_slot2;
            entity = 8;
            entity = zuuluu[entity];
            report = michal.bind(tangon)(entity);
            zuuluu = report.useStateFromStores;
            entity = _closure1_slot6;
            michal = new Array(1);
            michal[0] = entity;
            entity = function() {
                michal = _closure1_slot6;
                entity = michal.getFreeTextAppealReason;
                entity = entity.bind(michal)();
                return entity;
            };
            michal = zuuluu.bind(report)(michal, entity);
            zuuluu = _closure1_slot4;
            entity = zuuluu.useState;
            report = entity.bind(zuuluu)(michal);
            zuuluu = _closure1_slot3;
            entity = 2;
            zuuluu = zuuluu.bind(tangon)(report, entity);
            entity = 0;
            echoed = zuuluu[entity];
            var _closure2_slot1 = echoed;
            entity = 1;
            result = zuuluu[entity];
            entity = '';
            if(!(entity !== michal)) { _fun00002_ip = 193; continue _fun00001 }
 136:
            report = _closure1_slot0;
            oscard = _closure1_slot2;
            entity = 9;
            michal = oscard[entity];
            michal = report.bind(tangon)(michal);
            zuuluu = michal.intl;
            michal = zuuluu.string;
            entity = oscard[entity];
            entity = report.bind(tangon)(entity);
            entity = entity.t;
            entity = entity.tnE3bW;
            source = michal.bind(zuuluu)(entity);
            _fun00002_ip = 248; continue _fun00001;
 193:
            report = _closure1_slot0;
            oscard = _closure1_slot2;
            entity = 9;
            michal = oscard[entity];
            michal = report.bind(tangon)(michal);
            zuuluu = michal.intl;
            michal = zuuluu.string;
            entity = oscard[entity];
            entity = report.bind(tangon)(entity);
            entity = entity.t;
            entity = entity.uoQFIi;
            source = michal.bind(zuuluu)(entity);
 248:
            backup = _closure1_slot0;
            kiloes = _closure1_slot2;
            yankee = 9;
            entity = kiloes[yankee];
            entity = backup.bind(tangon)(entity);
            zuuluu = entity.intl;
            michal = zuuluu.string;
            entity = kiloes[yankee];
            entity = backup.bind(tangon)(entity);
            entity = entity.t;
            entity = entity.Rk+uJy;
            update = michal.bind(zuuluu)(entity);
            zuuluu = _closure1_slot7;
            entity = 10;
            entity = kiloes[entity];
            entity = backup.bind(tangon)(entity);
            michal = entity.BottomSheet;
            entity = {};
            report = true;
            entity['startExpanded'] = report;
            golfie = _closure1_slot8;
            report = 11;
            report = kiloes[report];
            report = backup.bind(tangon)(report);
            oscard = report.Stack;
            report = {};
            offset = 16;
            report['spacing'] = offset;
            option = 12;
            option = kiloes[option];
            option = backup.bind(tangon)(option);
            sizing = option.PressableOpacity;
            option = {};
            option['onPress'] = output;
            output = romeon.closeIcon;
            option['style'] = output;
            output = 13;
            output = kiloes[output];
            output = backup.bind(tangon)(output);
            ctrled = output.XSmallIcon;
            output = {};
            vacuum = 'md';
            output['size'] = vacuum;
            output = zuuluu.bind(tangon)(ctrled, output);
            option['children'] = output;
            sizing = zuuluu.bind(tangon)(sizing, option);
            option = new Array(6);
            option[0] = sizing;
            sizing = 14;
            sizing = kiloes[sizing];
            sizing = backup.bind(tangon)(sizing);
            output = sizing.AppealIngestionModalHeader;
            sizing = {};
            sizing['headerText'] = source;
            sizing['subHeaderText'] = update;
            sizing = zuuluu.bind(tangon)(output, sizing);
            option[1] = sizing;
            sizing = 15;
            sizing = kiloes[sizing];
            sizing = backup.bind(tangon)(sizing);
            output = sizing.TextArea;
            sizing = {};
            update = 1024;
            sizing['maxLength'] = update;
            update = kiloes[yankee];
            update = backup.bind(tangon)(update);
            ctrled = update.intl;
            source = ctrled.string;
            update = kiloes[yankee];
            update = backup.bind(tangon)(update);
            update = update.t;
            update = update.bQrZIC;
            update = source.bind(ctrled)(update);
            sizing['placeholder'] = update;
            update = romeon.textArea;
            sizing['containerStyle'] = update;
            sizing['value'] = echoed;
            sizing['onChange'] = result;
            sizing = zuuluu.bind(tangon)(output, sizing);
            option[2] = sizing;
            output = _closure1_slot5;
            sizing = {};
            result = romeon.separator;
            sizing['style'] = result;
            sizing = zuuluu.bind(tangon)(output, sizing);
            option[3] = sizing;
            offset = kiloes[offset];
            offset = backup.bind(tangon)(offset);
            sizing = offset.Text;
            offset = {'variant': 'text-xs/medium', 'color': 'header-secondary'};
            output = romeon.footerText;
            offset['style'] = output;
            output = kiloes[yankee];
            output = backup.bind(tangon)(output);
            echoed = output.intl;
            result = echoed.string;
            output = kiloes[yankee];
            output = backup.bind(tangon)(output);
            output = output.t;
            output = output.xfNY3N;
            output = result.bind(echoed)(output);
            offset['children'] = output;
            offset = zuuluu.bind(tangon)(sizing, offset);
            option[4] = offset;
            offset = _closure1_slot1;
            verify = 17;
            verify = kiloes[verify];
            offset = offset.bind(tangon)(verify);
            verify = {};
            foxtra = function() { // Original name: onPress
                zuuluu = _closure2_slot0;
                michal = _closure2_slot1;
                entity = undefined;
                entity = zuuluu.bind(entity)(michal);
                return entity;
            };
            verify['onPress'] = foxtra;
            romeon = romeon.buttonTextStyles;
            verify['textStyle'] = romeon;
            romeon = kiloes[yankee];
            romeon = backup.bind(tangon)(romeon);
            foxtra = romeon.intl;
            romeon = foxtra.string;
            yankee = kiloes[yankee];
            yankee = backup.bind(tangon)(yankee);
            yankee = yankee.t;
            yankee = yankee.R3BPHx;
            yankee = romeon.bind(foxtra)(yankee);
            verify['text'] = yankee;
            verify = zuuluu.bind(tangon)(offset, verify);
            option[5] = verify;
            report['children'] = option;
            report = golfie.bind(tangon)(oscard, report);
            entity['children'] = report;
            entity = zuuluu.bind(tangon)(michal, entity);
            return entity;
        }
    };
    zuuluu['default'] = michal;
    return entity;
})();