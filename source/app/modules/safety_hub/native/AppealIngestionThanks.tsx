// app/modules/safety_hub/native/AppealIngestionThanks.tsx
export default (function(_, argBar, __, argCor, ___, argFre, argPlu) {
    report = argBar;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    var _closure1_slot1 = oscard;
    entity = global;
    option = entity.Object;
    golfie = option.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(option)(zuuluu, entity, tangon);
    entity = 0;
    golfie = oscard[entity];
    tangon = argCor;
    entity = undefined;
    tangon = tangon.bind(entity)(golfie);
    tangon = 1;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.View;
    var _closure1_slot2 = tangon;
    tangon = 2;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.jsx;
    var _closure1_slot3 = tangon;
    tangon = 3;
    tangon = oscard[tangon];
    option = report.bind(entity)(tangon);
    golfie = option.createStyles;
    tangon = {};
    verify = {'flex': 1, 'alignItems': 'center', 'justifyContent': 'center'};
    tangon['container'] = verify;
    tangon = golfie.bind(option)(tangon);
    var _closure1_slot4 = tangon;
    tangon = 7;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/safety_hub/native/AppealIngestionThanks.tsx';
    tangon = report.bind(oscard)(tangon);
    michal = function() { // Original name: AppealIngestionThanks
        entity = _closure1_slot4;
        tangon = undefined;
        verify = entity.bind(tangon)();
        zuuluu = _closure1_slot3;
        offset = _closure1_slot0;
        yankee = _closure1_slot1;
        entity = 4;
        entity = yankee[entity];
        entity = offset.bind(tangon)(entity);
        michal = entity.AppealIngestionModalScreen;
        entity = {};
        oscard = _closure1_slot2;
        report = {};
        golfie = verify.container;
        report['style'] = golfie;
        golfie = 5;
        golfie = yankee[golfie];
        golfie = offset.bind(tangon)(golfie);
        option = golfie.SafeAreaPaddingView;
        golfie = {};
        romeon = true;
        golfie['bottom'] = romeon;
        verify = verify.container;
        golfie['style'] = verify;
        verify = 6;
        verify = yankee[verify];
        verify = offset.bind(tangon)(verify);
        offset = verify.LegacyText;
        verify = {};
        yankee = 'TODO - Thanks';
        verify['children'] = yankee;
        verify = zuuluu.bind(tangon)(offset, verify);
        golfie['children'] = verify;
        golfie = zuuluu.bind(tangon)(option, golfie);
        report['children'] = golfie;
        report = zuuluu.bind(tangon)(oscard, report);
        entity['children'] = report;
        entity = zuuluu.bind(tangon)(michal, entity);
        return entity;
    };
    zuuluu['default'] = michal;
    return entity;
})();