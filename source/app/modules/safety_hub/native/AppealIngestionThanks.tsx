// app/modules/safety_hub/native/AppealIngestionThanks.tsx
export default (function(_, argBar, __, argCorge, ___, argFred, argPlugh) {
    report = argBar;
    zulu = argFred;
    oscar = argPlugh;
    var _closure1_slot0 = report;
    var _closure1_slot1 = oscar;
    entity = global;
    options = entity.Object;
    golf = options.defineProperty;
    tango = {};
    entity = true;
    tango['value'] = entity;
    entity = '__esModule';
    entity = golf.bind(options)(zulu, entity, tango);
    entity = 0;
    golf = oscar[entity];
    tango = argCorge;
    entity = undefined;
    tango = tango.bind(entity)(golf);
    tango = 1;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.View;
    var _closure1_slot2 = tango;
    tango = 2;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.jsx;
    var _closure1_slot3 = tango;
    tango = 3;
    tango = oscar[tango];
    options = report.bind(entity)(tango);
    golf = options.createStyles;
    tango = {};
    verify = {'flex': 1, 'alignItems': 'center', 'justifyContent': 'center'};
    tango['container'] = verify;
    tango = golf.bind(options)(tango);
    var _closure1_slot4 = tango;
    tango = 7;
    tango = oscar[tango];
    oscar = report.bind(entity)(tango);
    report = oscar.fileFinishedImporting;
    tango = 'modules/safety_hub/native/AppealIngestionThanks.tsx';
    tango = report.bind(oscar)(tango);
    mike = function() { // Original name: AppealIngestionThanks
        entity = _closure1_slot4;
        tango = undefined;
        verify = entity.bind(tango)();
        zulu = _closure1_slot3;
        offset = _closure1_slot0;
        yankee = _closure1_slot1;
        entity = 4;
        entity = yankee[entity];
        entity = offset.bind(tango)(entity);
        mike = entity.AppealIngestionModalScreen;
        entity = {};
        oscar = _closure1_slot2;
        report = {};
        golf = verify.container;
        report['style'] = golf;
        golf = 5;
        golf = yankee[golf];
        golf = offset.bind(tango)(golf);
        options = golf.SafeAreaPaddingView;
        golf = {};
        romeo = true;
        golf['bottom'] = romeo;
        verify = verify.container;
        golf['style'] = verify;
        verify = 6;
        verify = yankee[verify];
        verify = offset.bind(tango)(verify);
        offset = verify.LegacyText;
        verify = {};
        yankee = 'TODO - Thanks';
        verify['children'] = yankee;
        verify = zulu.bind(tango)(offset, verify);
        golf['children'] = verify;
        golf = zulu.bind(tango)(options, golf);
        report['children'] = golf;
        report = zulu.bind(tango)(oscar, report);
        entity['children'] = report;
        entity = zulu.bind(tango)(mike, entity);
        return entity;
    };
    zulu['default'] = mike;
    return entity;
})();