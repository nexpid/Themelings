// app/modules/safety_hub/native/ClassificationEvidence.tsx
export default (function(argFoo, argBar, argBaz, argCorge, _, argFred, argPlugh) {
    report = argBar;
    yankee = argBaz;
    zulu = argFred;
    oscar = argPlugh;
    var _closure1_slot0 = report;
    var _closure1_slot1 = yankee;
    var _closure1_slot2 = oscar;
    entity = global;
    options = entity.Object;
    golf = options.defineProperty;
    tango = {};
    entity = true;
    tango['value'] = entity;
    entity = '__esModule';
    entity = golf.bind(options)(zulu, entity, tango);
    entity = 0;
    golf = oscar[entity];
    tango = argCorge;
    entity = undefined;
    tango = tango.bind(entity)(golf);
    offset = 1;
    tango = oscar[offset];
    tango = report.bind(entity)(tango);
    tango = tango.View;
    var _closure1_slot3 = tango;
    tango = 2;
    golf = oscar[tango];
    golf = report.bind(entity)(golf);
    golf = golf.jsx;
    var _closure1_slot4 = golf;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.jsxs;
    var _closure1_slot5 = tango;
    tango = 3;
    tango = oscar[tango];
    options = report.bind(entity)(tango);
    golf = options.createStyles;
    tango = {};
    verify = 4;
    romeo = oscar[verify];
    foxtrot = report.bind(entity)(romeo);
    romeo = foxtrot.generateBoxShadowStyle;
    verify = oscar[verify];
    verify = report.bind(entity)(verify);
    verify = verify.FOUR_DP_ELEVATION_SHADOW_PARAMS;
    verify = romeo.bind(foxtrot)(verify);
    tango['cardShadow'] = verify;
    verify = {};
    verify['borderWidth'] = offset;
    offset = 5;
    romeo = oscar[offset];
    romeo = yankee.bind(entity)(romeo);
    romeo = romeo.radii;
    romeo = romeo.sm;
    verify['borderRadius'] = romeo;
    romeo = oscar[offset];
    romeo = yankee.bind(entity)(romeo);
    romeo = romeo.colors;
    romeo = romeo.BG_BASE_TERTIARY;
    verify['borderColor'] = romeo;
    romeo = oscar[offset];
    romeo = yankee.bind(entity)(romeo);
    romeo = romeo.colors;
    romeo = romeo.CHANNELTEXTAREA_BACKGROUND;
    verify['backgroundColor'] = romeo;
    romeo = 20;
    verify['padding'] = romeo;
    tango['flaggedContent'] = verify;
    verify = {};
    romeo = 'flex';
    verify['display'] = romeo;
    offset = oscar[offset];
    offset = yankee.bind(entity)(offset);
    offset = offset.spacing;
    offset = offset.PX_8;
    verify['gap'] = offset;
    tango['sectionContainer'] = verify;
    tango = golf.bind(options)(tango);
    var _closure1_slot6 = tango;
    tango = 9;
    tango = oscar[tango];
    oscar = report.bind(entity)(tango);
    report = oscar.fileFinishedImporting;
    tango = 'modules/safety_hub/native/ClassificationEvidence.tsx';
    tango = report.bind(oscar)(tango);
    mike = function(argFoo) { // Original name: ClassificationEvidence
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            entity = argFoo;
            yankee = entity.flaggedContent;
            entity = _closure1_slot6;
            report = undefined;
            foxtrot = entity.bind(report)();
            zulu = yankee.length;
            mike = 0;
            entity = null;
            if(!(mike !== zulu)) { _fun00002_ip = 249; continue _fun00001 }
 38:
            tango = _closure1_slot5;
            zulu = _closure1_slot3;
            mike = {};
            oscar = foxtrot.sectionContainer;
            mike['style'] = oscar;
            options = _closure1_slot4;
            sizing = _closure1_slot0;
            romeo = _closure1_slot2;
            oscar = 6;
            oscar = romeo[oscar];
            oscar = sizing.bind(report)(oscar);
            golf = oscar.Text;
            oscar = {'variant': 'eyebrow', 'color': 'header-secondary'};
            offset = 7;
            backup = romeo[offset];
            backup = sizing.bind(report)(backup);
            kilo = backup.intl;
            backup = kilo.string;
            offset = romeo[offset];
            offset = sizing.bind(report)(offset);
            offset = offset.t;
            offset = offset.s64CMj;
            offset = backup.bind(kilo)(offset);
            oscar['children'] = offset;
            golf = options.bind(report)(golf, oscar);
            oscar = new Array(2);
            oscar[0] = golf;
            golf = {};
            backup = foxtrot.flaggedContent;
            offset = new Array(2);
            offset[0] = backup;
            foxtrot = foxtrot.cardShadow;
            offset[1] = foxtrot;
            golf['style'] = offset;
            offset = _closure1_slot1;
            verify = 8;
            verify = romeo[verify];
            offset = offset.bind(report)(verify);
            verify = {};
            verify['flaggedContent'] = yankee;
            verify = options.bind(report)(offset, verify);
            golf['children'] = verify;
            golf = options.bind(report)(zulu, golf);
            oscar[1] = golf;
            mike['children'] = oscar;
            entity = tango.bind(report)(zulu, mike);
 249:
            return entity;
        }
    };
    zulu['default'] = mike;
    return entity;
})();