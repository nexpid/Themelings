// app/modules/safety_hub/native/ClassificationEvidence.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    report = argBar;
    yankee = argBaz;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    var _closure1_slot1 = yankee;
    var _closure1_slot2 = oscard;
    entity = global;
    option = entity.Object;
    golfie = option.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(option)(zuuluu, entity, tangon);
    entity = 0;
    golfie = oscard[entity];
    tangon = argCor;
    entity = undefined;
    tangon = tangon.bind(entity)(golfie);
    offset = 1;
    tangon = oscard[offset];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.View;
    var _closure1_slot3 = tangon;
    tangon = 2;
    golfie = oscard[tangon];
    golfie = report.bind(entity)(golfie);
    golfie = golfie.jsx;
    var _closure1_slot4 = golfie;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.jsxs;
    var _closure1_slot5 = tangon;
    tangon = 3;
    tangon = oscard[tangon];
    option = report.bind(entity)(tangon);
    golfie = option.createStyles;
    tangon = {};
    verify = 4;
    romeon = oscard[verify];
    foxtra = report.bind(entity)(romeon);
    romeon = foxtra.generateBoxShadowStyle;
    verify = oscard[verify];
    verify = report.bind(entity)(verify);
    verify = verify.FOUR_DP_ELEVATION_SHADOW_PARAMS;
    verify = romeon.bind(foxtra)(verify);
    tangon['cardShadow'] = verify;
    verify = {};
    verify['borderWidth'] = offset;
    offset = 5;
    romeon = oscard[offset];
    romeon = yankee.bind(entity)(romeon);
    romeon = romeon.radii;
    romeon = romeon.sm;
    verify['borderRadius'] = romeon;
    romeon = oscard[offset];
    romeon = yankee.bind(entity)(romeon);
    romeon = romeon.colors;
    romeon = romeon.BG_BASE_TERTIARY;
    verify['borderColor'] = romeon;
    romeon = oscard[offset];
    romeon = yankee.bind(entity)(romeon);
    romeon = romeon.colors;
    romeon = romeon.CHANNELTEXTAREA_BACKGROUND;
    verify['backgroundColor'] = romeon;
    romeon = 20;
    verify['padding'] = romeon;
    tangon['flaggedContent'] = verify;
    verify = {};
    romeon = 'flex';
    verify['display'] = romeon;
    offset = oscard[offset];
    offset = yankee.bind(entity)(offset);
    offset = offset.spacing;
    offset = offset.PX_8;
    verify['gap'] = offset;
    tangon['sectionContainer'] = verify;
    tangon = golfie.bind(option)(tangon);
    var _closure1_slot6 = tangon;
    tangon = 9;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/safety_hub/native/ClassificationEvidence.tsx';
    tangon = report.bind(oscard)(tangon);
    michal = function(argFoo) { // Original name: ClassificationEvidence
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            entity = argFoo;
            yankee = entity.flaggedContent;
            entity = _closure1_slot6;
            report = undefined;
            foxtra = entity.bind(report)();
            zuuluu = yankee.length;
            michal = 0;
            entity = null;
            if(!(michal !== zuuluu)) { _fun00002_ip = 251; continue _fun00001 }
 38:
            tangon = _closure1_slot5;
            zuuluu = _closure1_slot3;
            michal = {};
            oscard = foxtra.sectionContainer;
            michal['style'] = oscard;
            option = _closure1_slot4;
            sizing = _closure1_slot0;
            romeon = _closure1_slot2;
            oscard = 6;
            oscard = romeon[oscard];
            oscard = sizing.bind(report)(oscard);
            golfie = oscard.Text;
            oscard = {'variant': 'eyebrow', 'color': 'header-secondary'};
            offset = 7;
            backup = romeon[offset];
            backup = sizing.bind(report)(backup);
            kiloes = backup.intl;
            backup = kiloes.string;
            offset = romeon[offset];
            offset = sizing.bind(report)(offset);
            offset = offset.t;
            offset = offset.s64CMj;
            offset = backup.bind(kiloes)(offset);
            oscard['children'] = offset;
            golfie = option.bind(report)(golfie, oscard);
            oscard = new Array(2);
            oscard[0] = golfie;
            golfie = {};
            backup = foxtra.flaggedContent;
            offset = new Array(2);
            offset[0] = backup;
            foxtra = foxtra.cardShadow;
            offset[1] = foxtra;
            golfie['style'] = offset;
            offset = _closure1_slot1;
            verify = 8;
            verify = romeon[verify];
            offset = offset.bind(report)(verify);
            verify = {};
            verify['flaggedContent'] = yankee;
            verify = option.bind(report)(offset, verify);
            golfie['children'] = verify;
            golfie = option.bind(report)(zuuluu, golfie);
            oscard[1] = golfie;
            michal['children'] = oscard;
            entity = tangon.bind(report)(zuuluu, michal);
 251:
            return entity;
        }
    };
    zuuluu['default'] = michal;
    return entity;
})();