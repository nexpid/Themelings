// app/modules/safety_hub/native/SafetyHubErrorActionSheet.tsx
export default (function(argFoo, argBar, argBaz, argCorge, _, argFred, argPlugh) {
    report = argBar;
    yankee = argBaz;
    golf = argCorge;
    zulu = argFred;
    oscar = argPlugh;
    var _closure1_slot0 = report;
    var _closure1_slot1 = yankee;
    var _closure1_slot2 = golf;
    var _closure1_slot3 = oscar;
    entity = global;
    verify = entity.Object;
    options = verify.defineProperty;
    tango = {};
    entity = true;
    tango['value'] = entity;
    entity = '__esModule';
    entity = options.bind(verify)(zulu, entity, tango);
    entity = 0;
    tango = oscar[entity];
    entity = undefined;
    tango = golf.bind(entity)(tango);
    tango = 1;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.View;
    var _closure1_slot4 = tango;
    tango = 2;
    golf = oscar[tango];
    golf = report.bind(entity)(golf);
    golf = golf.jsx;
    var _closure1_slot5 = golf;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.jsxs;
    var _closure1_slot6 = tango;
    tango = 3;
    tango = oscar[tango];
    options = report.bind(entity)(tango);
    golf = options.createStyles;
    tango = {};
    verify = {'display': 'flex', 'alignItems': 'center', 'justifyContent': 'center'};
    offset = 4;
    romeo = oscar[offset];
    romeo = yankee.bind(entity)(romeo);
    romeo = romeo.spacing;
    romeo = romeo.PX_8;
    verify['paddingTop'] = romeo;
    romeo = oscar[offset];
    romeo = yankee.bind(entity)(romeo);
    romeo = romeo.spacing;
    romeo = romeo.PX_24;
    verify['paddingBottom'] = romeo;
    romeo = oscar[offset];
    romeo = yankee.bind(entity)(romeo);
    romeo = romeo.spacing;
    romeo = romeo.PX_16;
    verify['gap'] = romeo;
    romeo = 120;
    verify['minHeight'] = romeo;
    tango['errorContainer'] = verify;
    verify = {'display': 'flex', 'justifyContent': 'center', 'alignItems': 'center', 'height': 48, 'width': 48};
    romeo = oscar[offset];
    romeo = yankee.bind(entity)(romeo);
    romeo = romeo.radii;
    romeo = romeo.round;
    verify['borderRadius'] = romeo;
    romeo = oscar[offset];
    romeo = yankee.bind(entity)(romeo);
    romeo = romeo.colors;
    romeo = romeo.STATUS_DANGER;
    verify['backgroundColor'] = romeo;
    tango['errorIconContainer'] = verify;
    verify = {'display': 'flex', 'justifyContent': 'center', 'alignItems': 'center', 'height': 40, 'width': 40};
    romeo = oscar[offset];
    romeo = yankee.bind(entity)(romeo);
    romeo = romeo.radii;
    romeo = romeo.round;
    verify['borderRadius'] = romeo;
    offset = oscar[offset];
    offset = yankee.bind(entity)(offset);
    offset = offset.colors;
    offset = offset.WHITE;
    verify['backgroundColor'] = offset;
    tango['redesignErrorIconContainer'] = verify;
    verify = {'height': 50, 'width': 50};
    tango['redesignErrorIcon'] = verify;
    tango = golf.bind(options)(tango);
    var _closure1_slot7 = tango;
    tango = 12;
    tango = oscar[tango];
    oscar = report.bind(entity)(tango);
    report = oscar.fileFinishedImporting;
    tango = 'modules/safety_hub/native/SafetyHubErrorActionSheet.tsx';
    tango = report.bind(oscar)(tango);
    mike = function(argFoo) { // Original name: SafetyHubErrorActionSheet
        _fun100028: for(var _fun100028_ip = 0; ; ) switch(_fun100028_ip) {
 0:
            mike = argFoo;
            entity = null;
            if(!(mike != entity)) { _fun100028_ip = 432; continue _fun100028 }
 12:
            entity = _closure1_slot7;
            report = undefined;
            sizing = entity.bind(report)();
            options = _closure1_slot1;
            kilo = _closure1_slot3;
            entity = 5;
            entity = kilo[entity];
            entity = options.bind(report)(entity);
            offset = entity.bind(report)();
            tango = _closure1_slot6;
            backup = _closure1_slot0;
            entity = 6;
            entity = kilo[entity];
            entity = backup.bind(report)(entity);
            zulu = entity.BottomSheet;
            entity = {};
            golf = _closure1_slot4;
            oscar = {};
            romeo = sizing.errorContainer;
            yankee = new Array(1);
            yankee[0] = romeo;
            oscar['style'] = yankee;
            verify = _closure1_slot5;
            yankee = {};
            foxtrot = sizing.redesignErrorIconContainer;
            romeo = new Array(1);
            romeo[0] = foxtrot;
            yankee['style'] = romeo;
            romeo = 7;
            romeo = kilo[romeo];
            romeo = backup.bind(report)(romeo);
            foxtrot = romeo.CircleXIcon;
            romeo = {};
            output = 'custom';
            romeo['size'] = output;
            output = 4;
            output = kilo[output];
            output = options.bind(report)(output);
            output = output.colors;
            output = output.BUTTON_DANGER_BACKGROUND;
            romeo['color'] = output;
            output = sizing.redesignErrorIcon;
            sizing = new Array(1);
            sizing[0] = output;
            romeo['style'] = sizing;
            romeo = verify.bind(report)(foxtrot, romeo);
            yankee['children'] = romeo;
            yankee = verify.bind(report)(golf, yankee);
            romeo = new Array(2);
            romeo[0] = yankee;
            yankee = 8;
            yankee = kilo[yankee];
            yankee = backup.bind(report)(yankee);
            sizing = yankee.Text;
            foxtrot = {};
            yankee = 'heading-lg/normal';
            foxtrot['variant'] = yankee;
            yankee = 9;
            output = kilo[yankee];
            output = backup.bind(report)(output);
            echo = output.intl;
            result = echo.string;
            output = kilo[yankee];
            output = backup.bind(report)(output);
            output = output.t;
            output = output.TDRvqq;
            output = result.bind(echo)(output);
            foxtrot['children'] = output;
            foxtrot = verify.bind(report)(sizing, foxtrot);
            romeo[1] = foxtrot;
            oscar['children'] = romeo;
            golf = tango.bind(report)(golf, oscar);
            oscar = new Array(2);
            oscar[0] = golf;
            golf = 10;
            golf = kilo[golf];
            options = options.bind(report)(golf);
            golf = {};
            romeo = function() { // Original name: onPress
                zulu = _closure1_slot2;
                mike = _closure1_slot3;
                entity = 11;
                mike = mike[entity];
                entity = undefined;
                mike = zulu.bind(entity)(mike);
                entity = mike.getSafetyHubData;
                entity = entity.bind(mike)();
                return entity;
            };
            golf['onPress'] = romeo;
            romeo = kilo[yankee];
            romeo = backup.bind(report)(romeo);
            foxtrot = romeo.intl;
            romeo = foxtrot.string;
            yankee = kilo[yankee];
            yankee = backup.bind(report)(yankee);
            yankee = yankee.t;
            yankee = yankee.R1AN4O;
            yankee = romeo.bind(foxtrot)(yankee);
            golf['text'] = yankee;
            golf['loading'] = offset;
            golf = verify.bind(report)(options, golf);
            oscar[1] = golf;
            entity['children'] = oscar;
            entity = tango.bind(report)(zulu, entity);
            return entity;
 432:
            update = "Cannot destructure 'undefined' or 'null'.";
            source = mike;
            entity = throwTypeError(source, update);
            entity = undefined;
            throw entity;
        }
    };
    zulu['default'] = mike;
    return entity;
})();