// app/modules/safety_hub/native/AppealIngestionConfirmSubmission.tsx
export default (function(argFoo, argBar, argBaz, argCorge, _, argFred, argPlugh) {
    report = argBar;
    golf = argBaz;
    zulu = argFred;
    oscar = argPlugh;
    var _closure1_slot0 = report;
    var _closure1_slot1 = golf;
    var _closure1_slot2 = oscar;
    entity = global;
    verify = entity.Object;
    options = verify.defineProperty;
    tango = {};
    entity = true;
    tango['value'] = entity;
    entity = '__esModule';
    entity = options.bind(verify)(zulu, entity, tango);
    entity = 0;
    options = oscar[entity];
    tango = argCorge;
    entity = undefined;
    tango = tango.bind(entity)(options);
    tango = 1;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.View;
    var _closure1_slot3 = tango;
    tango = 2;
    tango = oscar[tango];
    tango = golf.bind(entity)(tango);
    var _closure1_slot4 = tango;
    tango = 3;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.EMPTY_STRING_SNOWFLAKE_ID;
    var _closure1_slot5 = tango;
    tango = 4;
    golf = oscar[tango];
    golf = report.bind(entity)(golf);
    golf = golf.jsx;
    var _closure1_slot6 = golf;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.jsxs;
    var _closure1_slot7 = tango;
    tango = 5;
    tango = oscar[tango];
    options = report.bind(entity)(tango);
    golf = options.createStyles;
    tango = {};
    offset = 16;
    verify = {'flex': 1, 'paddingHorizontal': 16};
    tango['container'] = verify;
    verify = {};
    verify['marginBottom'] = offset;
    tango['detailsAction'] = verify;
    tango = golf.bind(options)(tango);
    var _closure1_slot8 = tango;
    tango = 19;
    tango = oscar[tango];
    oscar = report.bind(entity)(tango);
    report = oscar.fileFinishedImporting;
    tango = 'modules/safety_hub/native/AppealIngestionConfirmSubmission.tsx';
    tango = report.bind(oscar)(tango);
    mike = function(argFoo) { // Original name: AppealIngestionConfirmSubmission
        _fun92715: for(var _fun92715_ip = 0; ; ) switch(_fun92715_ip) {
 0:
            entity = argFoo;
            offset = entity.isDsaEligible;
            entity = _closure1_slot8;
            tango = undefined;
            result = entity.bind(tango)();
            zulu = _closure1_slot0;
            report = _closure1_slot2;
            oscar = 6;
            entity = report[oscar];
            options = zulu.bind(tango)(entity);
            golf = options.useStateFromStores;
            entity = _closure1_slot4;
            mike = new Array(1);
            mike[0] = entity;
            entity = function() {
                mike = _closure1_slot4;
                entity = mike.getAppealClassificationId;
                entity = entity.bind(mike)();
                return entity;
            };
            mike = golf.bind(options)(mike, entity);
            entity = 7;
            entity = report[entity];
            report = zulu.bind(tango)(entity);
            zulu = report.useSafetyHubClassification;
            entity = null;
            if(!(entity == mike)) { _fun92715_ip = 102; continue _fun92715 }
 98:
            mike = _closure1_slot5;
 102:
            romeo = zulu.bind(report)(mike);
            report = _closure1_slot0;
            zulu = _closure1_slot2;
            mike = zulu[oscar];
            foxtrot = report.bind(tango)(mike);
            yankee = foxtrot.useStateFromStores;
            mike = _closure1_slot4;
            options = new Array(1);
            options[0] = mike;
            golf = function() {
                mike = _closure1_slot4;
                entity = mike.getAppealSignal;
                entity = entity.bind(mike)();
                return entity;
            };
            update = yankee.bind(foxtrot)(options, golf);
            zulu = zulu[oscar];
            oscar = report.bind(tango)(zulu);
            report = oscar.useStateFromStores;
            zulu = new Array(1);
            zulu[0] = mike;
            mike = function() {
                mike = _closure1_slot4;
                entity = mike.getFreeTextAppealReason;
                entity = entity.bind(mike)();
                return entity;
            };
            sizing = report.bind(oscar)(zulu, mike);
            mike = romeo.classification;
            zulu = entity == mike;
            kilo = undefined;
            if(zulu) { _fun92715_ip = 210; continue _fun92715 }
 204:
            kilo = mike.flagged_content;
 210:
            if(!(entity == kilo)) { _fun92715_ip = 218; continue _fun92715 }
 214:
            kilo = new Array(0);
 218:
            echo = _closure1_slot0;
            control = _closure1_slot2;
            source = 8;
            entity = control[source];
            entity = echo.bind(tango)(entity);
            zulu = entity.intl;
            mike = zulu.string;
            entity = control[source];
            entity = echo.bind(tango)(entity);
            entity = entity.t;
            entity = entity.C5q+pa;
            options = mike.bind(zulu)(entity);
            entity = control[source];
            entity = echo.bind(tango)(entity);
            zulu = entity.intl;
            mike = zulu.string;
            entity = control[source];
            entity = echo.bind(tango)(entity);
            entity = entity.t;
            entity = entity.G2g/g4;
            golf = mike.bind(zulu)(entity);
            zulu = _closure1_slot7;
            report = 9;
            entity = control[report];
            entity = echo.bind(tango)(entity);
            mike = entity.AppealIngestionModalScreen;
            entity = {};
            foxtrot = _closure1_slot6;
            report = control[report];
            report = echo.bind(tango)(report);
            oscar = report.AppealIngestionModalHeader;
            report = {};
            report['headerText'] = options;
            report['subHeaderText'] = golf;
            oscar = foxtrot.bind(tango)(oscar, report);
            report = new Array(2);
            report[0] = oscar;
            golf = _closure1_slot3;
            oscar = {};
            options = result.container;
            oscar['style'] = options;
            yankee = _closure1_slot1;
            options = 10;
            options = control[options];
            yankee = yankee.bind(tango)(options);
            options = {};
            backup = 11;
            backup = control[backup];
            echo = echo.bind(tango)(backup);
            backup = echo.getAppealSignalDisplayText;
            backup = backup.bind(echo)(update);
            update = new Array(2);
            update[0] = backup;
            update[1] = sizing;
            echo = update.filter;
            backup = function(argFoo) {
                entity = argFoo;
                mike = entity.length;
                entity = 0;
                entity = mike > entity;
                return entity;
            };
            backup = echo.bind(update)(backup);
            options['reasons'] = backup;
            yankee = foxtrot.bind(tango)(yankee, options);
            options = new Array(4);
            options[0] = yankee;
            if(!offset) { _fun92715_ip = 687; continue _fun92715 }
 496:
            backup = _closure1_slot6;
            foxtrot = _closure1_slot0;
            echo = _closure1_slot2;
            yankee = 12;
            yankee = echo[yankee];
            yankee = foxtrot.bind(tango)(yankee);
            foxtrot = yankee.Text;
            yankee = {'variant': 'heading-md/normal', 'color': 'text-link'};
            result = result.detailsAction;
            yankee['style'] = result;
            output = function() { // Original name: onPress
                report = _closure1_slot1;
                mike = _closure1_slot2;
                tango = 13;
                tango = mike[tango];
                golf = undefined;
                report = report.bind(golf)(tango);
                tango = report.openLazy;
                oscar = _closure1_slot0;
                zulu = 15;
                zulu = mike[zulu];
                oscar = oscar.bind(golf)(zulu);
                zulu = 14;
                zulu = mike[zulu];
                mike = mike.paths;
                zulu = oscar.bind(golf)(zulu, mike);
                mike = {};
                oscar = function(argFoo) { // Original name: onSave
                    zulu = _closure1_slot1;
                    tango = _closure1_slot2;
                    entity = 16;
                    mike = tango[entity];
                    entity = undefined;
                    oscar = zulu.bind(entity)(mike);
                    report = oscar.dispatch;
                    mike = {};
                    golf = 'SAFETY_HUB_APPEAL_SIGNAL_CUSTOM_INPUT_CHANGE';
                    mike['type'] = golf;
                    golf = argFoo;
                    mike['userInput'] = golf;
                    mike = report.bind(oscar)(mike);
                    mike = 13;
                    mike = tango[mike];
                    tango = zulu.bind(entity)(mike);
                    zulu = tango.hideActionSheet;
                    mike = 'AppealIngestionFreeTextAppealReasonActionSheet';
                    mike = zulu.bind(tango)(mike);
                    return entity;
                };
                mike['onSave'] = oscar;
                entity = function() { // Original name: onClose
                    zulu = _closure1_slot1;
                    mike = _closure1_slot2;
                    entity = 13;
                    mike = mike[entity];
                    entity = undefined;
                    zulu = zulu.bind(entity)(mike);
                    mike = zulu.hideActionSheet;
                    entity = 'AppealIngestionFreeTextAppealReasonActionSheet';
                    entity = mike.bind(zulu)(entity);
                    return entity;
                };
                mike['onClose'] = entity;
                entity = 'AppealIngestionFreeTextAppealReasonActionSheet';
                entity = tango.bind(report)(zulu, entity, mike);
                return entity;
            };
            yankee['onPress'] = output;
            output = sizing.length;
            sizing = 0;
            if(!(!(output > sizing))) { _fun92715_ip = 625; continue _fun92715 }
 571:
            echo = _closure1_slot0;
            sizing = _closure1_slot2;
            output = sizing[source];
            output = echo.bind(tango)(output);
            result = output.intl;
            output = result.string;
            sizing = sizing[source];
            sizing = echo.bind(tango)(sizing);
            sizing = sizing.t;
            sizing = sizing.uoQFIi;
            sizing = output.bind(result)(sizing);
            _fun92715_ip = 677; continue _fun92715;
 625:
            update = _closure1_slot0;
            output = _closure1_slot2;
            result = output[source];
            result = update.bind(tango)(result);
            echo = result.intl;
            result = echo.string;
            output = output[source];
            output = update.bind(tango)(output);
            output = output.t;
            output = output.tnE3bW;
            sizing = result.bind(echo)(output);
 677:
            yankee['children'] = sizing;
            offset = backup.bind(tango)(foxtrot, yankee);
 687:
            options[1] = offset;
            yankee = kilo.length;
            offset = 0;
            offset = yankee > offset;
            if(!offset) { _fun92715_ip = 742; continue _fun92715 }
 705:
            backup = _closure1_slot6;
            foxtrot = _closure1_slot1;
            sizing = _closure1_slot2;
            yankee = 17;
            yankee = sizing[yankee];
            foxtrot = foxtrot.bind(tango)(yankee);
            yankee = {};
            yankee['flaggedContent'] = kilo;
            offset = backup.bind(tango)(foxtrot, yankee);
 742:
            options[2] = offset;
            yankee = _closure1_slot6;
            offset = _closure1_slot1;
            foxtrot = _closure1_slot2;
            verify = 18;
            verify = foxtrot[verify];
            offset = offset.bind(tango)(verify);
            verify = {};
            romeo = romeo.classification;
            verify['classification'] = romeo;
            verify = yankee.bind(tango)(offset, verify);
            options[3] = verify;
            oscar['children'] = options;
            oscar = zulu.bind(tango)(golf, oscar);
            report[1] = oscar;
            entity['children'] = report;
            entity = zulu.bind(tango)(mike, entity);
            return entity;
        }
    };
    zulu['default'] = mike;
    return entity;
})();