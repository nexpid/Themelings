// app/modules/safety_hub/native/AppealIngestionBreadcrumbs.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    report = argBar;
    yankee = argBaz;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    var _closure1_slot1 = oscard;
    entity = global;
    option = entity.Object;
    golfie = option.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(option)(zuuluu, entity, tangon);
    entity = 0;
    golfie = oscard[entity];
    tangon = argCor;
    entity = undefined;
    tangon = tangon.bind(entity)(golfie);
    tangon = 1;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.View;
    var _closure1_slot2 = tangon;
    tangon = 2;
    golfie = oscard[tangon];
    golfie = report.bind(entity)(golfie);
    golfie = golfie.jsx;
    var _closure1_slot3 = golfie;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.jsxs;
    var _closure1_slot4 = tangon;
    tangon = 3;
    tangon = oscard[tangon];
    option = report.bind(entity)(tangon);
    golfie = option.createStyles;
    tangon = {};
    verify = {'flex': 0, 'alignSelf': 'stretch', 'marginBottom': 8};
    tangon['container'] = verify;
    verify = {'lineHeight': 16, 'marginBottom': 8};
    tangon['title'] = verify;
    verify = {'flexDirection': 'row', 'justifyContent': 'flex-start', 'marginBottom': 8, 'marginEnd': 32, 'overflow': 'visible'};
    tangon['breadCrumbItemContainer'] = verify;
    verify = {'marginStart': 2, 'marginTop': 8, 'width': 4, 'height': 4, 'borderRadius': 2};
    offset = 4;
    romeon = oscard[offset];
    romeon = yankee.bind(entity)(romeon);
    romeon = romeon.colors;
    romeon = romeon.BG_BRAND;
    verify['backgroundColor'] = romeon;
    tangon['breadCrumbDot'] = verify;
    verify = {'position': 'absolute', 'width': 2, 'top': 10, 'bottom': 4294967284, 'left': 3};
    offset = oscard[offset];
    offset = yankee.bind(entity)(offset);
    offset = offset.colors;
    offset = offset.BACKGROUND_TERTIARY;
    verify['backgroundColor'] = offset;
    tangon['breadCrumbBar'] = verify;
    verify = {'marginStart': 8, 'lineHeight': 20};
    tangon['breadCrumbText'] = verify;
    tangon = golfie.bind(option)(tangon);
    var _closure1_slot5 = tangon;
    tangon = 7;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/safety_hub/native/AppealIngestionBreadcrumbs.tsx';
    tangon = report.bind(oscard)(tangon);
    michal = function(argFoo) { // Original name: AppealIngestionBreadcrumbs
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            entity = argFoo;
            verify = entity.reasons;
            entity = _closure1_slot5;
            report = undefined;
            yankee = entity.bind(report)();
            var _closure2_slot0 = yankee;
            zuuluu = verify.length;
            michal = 0;
            entity = null;
            if(!(michal !== zuuluu)) { _fun00002_ip = 215; continue _fun00001 }
 44:
            tangon = _closure1_slot4;
            zuuluu = _closure1_slot2;
            michal = {};
            option = yankee.container;
            michal['style'] = option;
            offset = _closure1_slot3;
            backup = _closure1_slot0;
            kiloes = _closure1_slot1;
            oscard = 5;
            oscard = kiloes[oscard];
            oscard = backup.bind(report)(oscard);
            option = oscard.Text;
            oscard = {'style': null, 'accessibilityRole': 'header', 'variant': 'text-xs/bold'};
            yankee = yankee.title;
            oscard['style'] = yankee;
            yankee = 6;
            romeon = kiloes[yankee];
            romeon = backup.bind(report)(romeon);
            foxtra = romeon.intl;
            romeon = foxtra.string;
            yankee = kiloes[yankee];
            yankee = backup.bind(report)(yankee);
            yankee = yankee.t;
            yankee = yankee.eQg0Cg;
            yankee = romeon.bind(foxtra)(yankee);
            oscard['children'] = yankee;
            option = offset.bind(report)(option, oscard);
            oscard = new Array(2);
            oscard[0] = option;
            option = verify.map;
            golfie = function(argFoo, argBar) {
                verify = argFoo;
                report = _closure1_slot4;
                tangon = _closure1_slot2;
                zuuluu = {};
                offset = _closure2_slot0;
                entity = offset.breadCrumbItemContainer;
                zuuluu['style'] = entity;
                option = _closure1_slot3;
                entity = {};
                michal = offset.breadCrumbBar;
                entity['style'] = michal;
                michal = undefined;
                golfie = option.bind(michal)(tangon, entity);
                entity = new Array(3);
                entity[0] = golfie;
                golfie = {};
                yankee = offset.breadCrumbDot;
                golfie['style'] = yankee;
                golfie = option.bind(michal)(tangon, golfie);
                entity[1] = golfie;
                golfie = _closure1_slot0;
                yankee = _closure1_slot1;
                oscard = 5;
                oscard = yankee[oscard];
                oscard = golfie.bind(michal)(oscard);
                golfie = oscard.Text;
                oscard = {'lineClamp': 2, 'ellipsizeMode': 'tail', 'style': null, 'variant': 'text-md/medium'};
                offset = offset.breadCrumbText;
                oscard['style'] = offset;
                oscard['children'] = verify;
                oscard = option.bind(michal)(golfie, oscard);
                entity[2] = oscard;
                zuuluu['children'] = entity;
                entity = global;
                entity = entity.HermesInternal;
                option = entity.concat;
                golfie = '';
                oscard = '+';
                entity = argBar;
                entity = option.bind(golfie)(verify, oscard, entity);
                entity = report.bind(michal)(tangon, zuuluu, entity);
                return entity;
            };
            golfie = option.bind(verify)(golfie);
            oscard[1] = golfie;
            michal['children'] = oscard;
            entity = tangon.bind(report)(zuuluu, michal);
 215:
            return entity;
        }
    };
    zuuluu['default'] = michal;
    return entity;
})();