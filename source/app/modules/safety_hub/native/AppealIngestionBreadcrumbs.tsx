// app/modules/safety_hub/native/AppealIngestionBreadcrumbs.tsx
export default (function(argFoo, argBar, argBaz, argCorge, _, argFred, argPlugh) {
    report = argBar;
    yankee = argBaz;
    zulu = argFred;
    oscar = argPlugh;
    var _closure1_slot0 = report;
    var _closure1_slot1 = oscar;
    entity = global;
    options = entity.Object;
    golf = options.defineProperty;
    tango = {};
    entity = true;
    tango['value'] = entity;
    entity = '__esModule';
    entity = golf.bind(options)(zulu, entity, tango);
    entity = 0;
    golf = oscar[entity];
    tango = argCorge;
    entity = undefined;
    tango = tango.bind(entity)(golf);
    tango = 1;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.View;
    var _closure1_slot2 = tango;
    tango = 2;
    golf = oscar[tango];
    golf = report.bind(entity)(golf);
    golf = golf.jsx;
    var _closure1_slot3 = golf;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.jsxs;
    var _closure1_slot4 = tango;
    tango = 3;
    tango = oscar[tango];
    options = report.bind(entity)(tango);
    golf = options.createStyles;
    tango = {};
    verify = {'flex': 0, 'alignSelf': 'stretch', 'marginBottom': 8};
    tango['container'] = verify;
    verify = {'lineHeight': 16, 'marginBottom': 8};
    tango['title'] = verify;
    verify = {'flexDirection': 'row', 'justifyContent': 'flex-start', 'marginBottom': 8, 'marginEnd': 32, 'overflow': 'visible'};
    tango['breadCrumbItemContainer'] = verify;
    verify = {'marginStart': 2, 'marginTop': 8, 'width': 4, 'height': 4, 'borderRadius': 2};
    offset = 4;
    romeo = oscar[offset];
    romeo = yankee.bind(entity)(romeo);
    romeo = romeo.colors;
    romeo = romeo.BG_BRAND;
    verify['backgroundColor'] = romeo;
    tango['breadCrumbDot'] = verify;
    verify = {'position': 'absolute', 'width': 2, 'top': 10, 'bottom': 4294967284, 'left': 3};
    offset = oscar[offset];
    offset = yankee.bind(entity)(offset);
    offset = offset.colors;
    offset = offset.BACKGROUND_TERTIARY;
    verify['backgroundColor'] = offset;
    tango['breadCrumbBar'] = verify;
    verify = {'marginStart': 8, 'lineHeight': 20};
    tango['breadCrumbText'] = verify;
    tango = golf.bind(options)(tango);
    var _closure1_slot5 = tango;
    tango = 7;
    tango = oscar[tango];
    oscar = report.bind(entity)(tango);
    report = oscar.fileFinishedImporting;
    tango = 'modules/safety_hub/native/AppealIngestionBreadcrumbs.tsx';
    tango = report.bind(oscar)(tango);
    mike = function(argFoo) { // Original name: AppealIngestionBreadcrumbs
        _fun92756: for(var _fun92756_ip = 0; ; ) switch(_fun92756_ip) {
 0:
            entity = argFoo;
            verify = entity.reasons;
            entity = _closure1_slot5;
            report = undefined;
            yankee = entity.bind(report)();
            var _closure2_slot0 = yankee;
            zulu = verify.length;
            mike = 0;
            entity = null;
            if(!(mike !== zulu)) { _fun92756_ip = 213; continue _fun92756 }
 44:
            tango = _closure1_slot4;
            zulu = _closure1_slot2;
            mike = {};
            options = yankee.container;
            mike['style'] = options;
            offset = _closure1_slot3;
            backup = _closure1_slot0;
            kilo = _closure1_slot1;
            oscar = 5;
            oscar = kilo[oscar];
            oscar = backup.bind(report)(oscar);
            options = oscar.Text;
            oscar = {'style': null, 'accessibilityRole': 'header', 'variant': 'text-xs/bold'};
            yankee = yankee.title;
            oscar['style'] = yankee;
            yankee = 6;
            romeo = kilo[yankee];
            romeo = backup.bind(report)(romeo);
            foxtrot = romeo.intl;
            romeo = foxtrot.string;
            yankee = kilo[yankee];
            yankee = backup.bind(report)(yankee);
            yankee = yankee.t;
            yankee = yankee.eQg0Cg;
            yankee = romeo.bind(foxtrot)(yankee);
            oscar['children'] = yankee;
            options = offset.bind(report)(options, oscar);
            oscar = new Array(2);
            oscar[0] = options;
            options = verify.map;
            golf = function(argFoo, argBar) {
                verify = argFoo;
                report = _closure1_slot4;
                tango = _closure1_slot2;
                zulu = {};
                offset = _closure2_slot0;
                entity = offset.breadCrumbItemContainer;
                zulu['style'] = entity;
                options = _closure1_slot3;
                entity = {};
                mike = offset.breadCrumbBar;
                entity['style'] = mike;
                mike = undefined;
                golf = options.bind(mike)(tango, entity);
                entity = new Array(3);
                entity[0] = golf;
                golf = {};
                yankee = offset.breadCrumbDot;
                golf['style'] = yankee;
                golf = options.bind(mike)(tango, golf);
                entity[1] = golf;
                golf = _closure1_slot0;
                yankee = _closure1_slot1;
                oscar = 5;
                oscar = yankee[oscar];
                oscar = golf.bind(mike)(oscar);
                golf = oscar.Text;
                oscar = {'lineClamp': 2, 'ellipsizeMode': 'tail', 'style': null, 'variant': 'text-md/medium'};
                offset = offset.breadCrumbText;
                oscar['style'] = offset;
                oscar['children'] = verify;
                oscar = options.bind(mike)(golf, oscar);
                entity[2] = oscar;
                zulu['children'] = entity;
                entity = global;
                entity = entity.HermesInternal;
                options = entity.concat;
                golf = '';
                oscar = '+';
                entity = argBar;
                entity = options.bind(golf)(verify, oscar, entity);
                entity = report.bind(mike)(tango, zulu, entity);
                return entity;
            };
            golf = options.bind(verify)(golf);
            oscar[1] = golf;
            mike['children'] = oscar;
            entity = tango.bind(report)(zulu, mike);
 213:
            return entity;
        }
    };
    zulu['default'] = mike;
    return entity;
})();