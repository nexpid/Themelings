// app/modules/avatar_decorations/native/EditAvatarDecorationListItems.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    oscard = argBar;
    romeon = argBaz;
    zuuluu = argFre;
    golfie = argPlu;
    var _closure1_slot0 = oscard;
    var _closure1_slot1 = romeon;
    var _closure1_slot2 = golfie;
    entity = global;
    option = entity.Object;
    report = option.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = report.bind(option)(zuuluu, entity, tangon);
    entity = 0;
    report = golfie[entity];
    tangon = argCor;
    entity = undefined;
    tangon = tangon.bind(entity)(report);
    tangon = 1;
    tangon = golfie[tangon];
    tangon = oscard.bind(entity)(tangon);
    tangon = tangon.View;
    var _closure1_slot3 = tangon;
    tangon = 2;
    tangon = golfie[tangon];
    tangon = romeon.bind(entity)(tangon);
    var _closure1_slot4 = tangon;
    tangon = 3;
    tangon = golfie[tangon];
    tangon = oscard.bind(entity)(tangon);
    tangon = tangon.AVATAR_DECORATION_SIZE;
    var _closure1_slot5 = tangon;
    offset = 4;
    tangon = golfie[offset];
    tangon = oscard.bind(entity)(tangon);
    report = tangon.jsx;
    var _closure1_slot6 = report;
    tangon = tangon.jsxs;
    var _closure1_slot7 = tangon;
    tangon = 5;
    tangon = golfie[tangon];
    option = oscard.bind(entity)(tangon);
    report = option.createStyles;
    tangon = {};
    verify = {'borderWidth': 2, 'borderColor': 'transparent', 'borderRadius': null, 'backgroundColor': null, 'alignItems': 'center', 'justifyContent': 'center', 'marginTop': 10};
    yankee = 6;
    foxtra = golfie[yankee];
    foxtra = romeon.bind(entity)(foxtra);
    foxtra = foxtra.radii;
    foxtra = foxtra.sm;
    verify['borderRadius'] = foxtra;
    foxtra = golfie[yankee];
    foxtra = romeon.bind(entity)(foxtra);
    foxtra = foxtra.colors;
    foxtra = foxtra.BACKGROUND_FLOATING;
    verify['backgroundColor'] = foxtra;
    tangon['item'] = verify;
    verify = {};
    yankee = golfie[yankee];
    yankee = romeon.bind(entity)(yankee);
    yankee = yankee.colors;
    yankee = yankee.BUTTON_OUTLINE_BRAND_BORDER_ACTIVE;
    verify['borderColor'] = yankee;
    tangon['selected'] = verify;
    verify = {'justifyContent': 'center', 'alignItems': 'center'};
    tangon['optionCell'] = verify;
    verify = {};
    verify['marginTop'] = offset;
    tangon['optionCellText'] = verify;
    verify = {'position': 'absolute', 'top': 4294967284, 'right': 5};
    tangon['newIcon'] = verify;
    verify = {'position': 'absolute', 'top': 4294967284, 'right': 4294967286};
    tangon['lockIcon'] = verify;
    tangon = report.bind(option)(tangon);
    var _closure1_slot8 = tangon;
    tangon = function(argFoo) { // Original name: EditAvatarDecorationListItem
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            entity = argFoo;
            yankee = entity.size;
            foxtra = entity.isSelected;
            golfie = entity.children;
            verify = entity.style;
            michal = entity.onPress;
            var _closure2_slot0 = michal;
            offset = entity.onLongPress;
            oscard = entity.accessibilityLabel;
            option = entity.accessibilityRole;
            tangon = undefined;
            if(!(option === tangon)) { _fun00002_ip = 61; continue _fun00001 }
 57:
            option = 'button';
 61:
            kiloes = entity.disabled;
            entity = _closure1_slot8;
            romeon = entity.bind(tangon)();
            zuuluu = _closure1_slot6;
            michal = _closure1_slot0;
            sizing = _closure1_slot2;
            entity = 7;
            entity = sizing[entity];
            entity = michal.bind(tangon)(entity);
            michal = entity.PressableOpacity;
            entity = {};
            entity['disabled'] = kiloes;
            backup = function() { // Original name: onPress
                tangon = _closure1_slot0;
                oscard = _closure1_slot2;
                entity = 8;
                zuuluu = oscard[entity];
                entity = undefined;
                tangon = tangon.bind(entity)(zuuluu);
                zuuluu = tangon.triggerHapticFeedback;
                report = _closure1_slot1;
                michal = 9;
                michal = oscard[michal];
                michal = report.bind(entity)(michal);
                michal = michal.IMPACT_LIGHT;
                michal = zuuluu.bind(tangon)(michal);
                michal = _closure2_slot0;
                michal = michal.bind(entity)();
                return entity;
            };
            entity['onPress'] = backup;
            entity['onLongPress'] = offset;
            entity['accessibilityRole'] = option;
            entity['accessibilityLabel'] = oscard;
            oscard = {};
            oscard['selected'] = foxtra;
            entity['accessibilityState'] = oscard;
            oscard = _closure1_slot3;
            report = {};
            offset = romeon.item;
            option = new Array(4);
            option[0] = offset;
            offset = null;
            if(!foxtra) { _fun00002_ip = 177; continue _fun00001 }
 171:
            offset = romeon.selected;
 177:
            option[1] = offset;
            offset = {};
            offset['width'] = yankee;
            offset['height'] = yankee;
            option[2] = offset;
            option[3] = verify;
            report['style'] = option;
            report['children'] = golfie;
            report = zuuluu.bind(tangon)(oscard, report);
            entity['children'] = report;
            entity = zuuluu.bind(tangon)(michal, entity);
            return entity;
        }
    };
    var _closure1_slot9 = tangon;
    report = 21;
    report = golfie[report];
    golfie = oscard.bind(entity)(report);
    oscard = golfie.fileFinishedImporting;
    report = 'modules/avatar_decorations/native/EditAvatarDecorationListItems.tsx';
    report = oscard.bind(golfie)(report);
    zuuluu['EditAvatarDecorationListItem'] = tangon;
    tangon = function(argFoo) {
        _fun00003: for(var _fun00004_ip = 0; ; ) switch(_fun00004_ip) {
 0:
            verify = argFoo;
            entity = _closure1_slot8;
            tangon = undefined;
            yankee = entity.bind(tangon)();
            zuuluu = _closure1_slot7;
            michal = _closure1_slot9;
            entity = {};
            report = yankee.optionCell;
            entity['style'] = report;
            sizing = entity;
            kiloes = verify;
            report = copyDataProperties(sizing, kiloes);
            option = _closure1_slot6;
            backup = _closure1_slot1;
            romeon = _closure1_slot2;
            foxtra = 10;
            report = romeon[foxtra];
            oscard = backup.bind(tangon)(report);
            report = {};
            golfie = 11;
            golfie = romeon[golfie];
            golfie = backup.bind(tangon)(golfie);
            report['source'] = golfie;
            golfie = _closure1_slot0;
            foxtra = romeon[foxtra];
            foxtra = golfie.bind(tangon)(foxtra);
            foxtra = foxtra.IconSizes;
            foxtra = foxtra.LARGE;
            report['size'] = foxtra;
            report = option.bind(tangon)(oscard, report);
            oscard = new Array(2);
            oscard[0] = report;
            report = 12;
            report = romeon[report];
            report = golfie.bind(tangon)(report);
            golfie = report.Text;
            report = {'variant': 'text-sm/medium', 'color': 'header-primary'};
            yankee = yankee.optionCellText;
            report['style'] = yankee;
            verify = verify.asDefault;
            foxtra = _closure1_slot0;
            backup = _closure1_slot2;
            offset = 13;
            yankee = backup[offset];
            yankee = foxtra.bind(tangon)(yankee);
            romeon = yankee.intl;
            yankee = romeon.string;
            offset = backup[offset];
            offset = foxtra.bind(tangon)(offset);
            offset = offset.t;
            if(verify) { _fun00004_ip = 238; continue _fun00003 }
 225:
            verify = offset.PoWNfX;
            verify = yankee.bind(romeon)(verify);
            _fun00004_ip = 249; continue _fun00003;
 238:
            offset = offset.CHf9iI;
            verify = yankee.bind(romeon)(offset);
 249:
            report['children'] = verify;
            report = option.bind(tangon)(golfie, report);
            oscard[1] = report;
            report = 'children';
            entity[report] = oscard;
            entity = zuuluu.bind(tangon)(michal, entity);
            return entity;
        }
    };
    zuuluu['EditAvatarDecorationNoneItem'] = tangon;
    tangon = function(argFoo) {
        entity = _closure1_slot8;
        tangon = undefined;
        verify = entity.bind(tangon)();
        zuuluu = _closure1_slot7;
        michal = _closure1_slot9;
        entity = {'style': null, 'disabled': false, 'isSelected': false};
        report = verify.optionCell;
        entity['style'] = report;
        kiloes = argFoo;
        sizing = entity;
        report = copyDataProperties(sizing, kiloes);
        option = _closure1_slot6;
        foxtra = _closure1_slot1;
        offset = _closure1_slot2;
        yankee = 10;
        report = offset[yankee];
        oscard = foxtra.bind(tangon)(report);
        report = {};
        romeon = 14;
        romeon = offset[romeon];
        romeon = foxtra.bind(tangon)(romeon);
        report['source'] = romeon;
        golfie = _closure1_slot0;
        yankee = offset[yankee];
        yankee = golfie.bind(tangon)(yankee);
        yankee = yankee.IconSizes;
        yankee = yankee.LARGE;
        report['size'] = yankee;
        report = option.bind(tangon)(oscard, report);
        oscard = new Array(3);
        oscard[0] = report;
        report = 12;
        report = offset[report];
        report = golfie.bind(tangon)(report);
        yankee = report.Text;
        report = {'variant': 'text-sm/medium', 'color': 'header-primary'};
        romeon = verify.optionCellText;
        report['style'] = romeon;
        romeon = 13;
        foxtra = offset[romeon];
        foxtra = golfie.bind(tangon)(foxtra);
        backup = foxtra.intl;
        foxtra = backup.string;
        romeon = offset[romeon];
        romeon = golfie.bind(tangon)(romeon);
        romeon = romeon.t;
        romeon = romeon.pWG4zc;
        romeon = foxtra.bind(backup)(romeon);
        report['children'] = romeon;
        report = option.bind(tangon)(yankee, report);
        oscard[1] = report;
        report = 15;
        report = offset[report];
        report = golfie.bind(tangon)(report);
        golfie = report.NewBadge;
        report = {};
        verify = verify.newIcon;
        report['style'] = verify;
        report = option.bind(tangon)(golfie, report);
        oscard[2] = report;
        report = 'children';
        entity[report] = oscard;
        entity = zuuluu.bind(tangon)(michal, entity);
        return entity;
    };
    zuuluu['EditAvatarDecorationShopItem'] = tangon;
    michal = function(argFoo) {
        _fun00005: for(var _fun00006_ip = 0; ; ) switch(_fun00006_ip) {
 0:
            tangon = argFoo;
            backup = tangon.avatarDecoration;
            foxtra = tangon.isSelected;
            option = tangon.children;
            zuuluu = {'avatarDecoration': 0, 'isSelected': 0, 'children': 0};
            entity = null;
            result = zuuluu;
            output = null;
            michal = silentSetPrototypeOf(result, output);
            result = {};
            output = tangon;
            sizing = zuuluu;
            oscard = copyDataProperties(result, output, sizing);
            report = _closure1_slot0;
            zuuluu = _closure1_slot2;
            michal = 16;
            michal = zuuluu[michal];
            tangon = undefined;
            yankee = report.bind(tangon)(michal);
            offset = yankee.useStateFromStores;
            michal = _closure1_slot4;
            verify = new Array(1);
            verify[0] = michal;
            michal = function() {
                michal = _closure1_slot4;
                entity = michal.getCurrentUser;
                entity = entity.bind(michal)();
                return entity;
            };
            yankee = offset.bind(yankee)(verify, michal);
            offset = _closure1_slot1;
            michal = 17;
            michal = zuuluu[michal];
            verify = offset.bind(tangon)(michal);
            michal = verify.canUseCollectibles;
            michal = michal.bind(verify)(yankee);
            verify = 18;
            verify = zuuluu[verify];
            offset = offset.bind(tangon)(verify);
            verify = backup.skuId;
            verify = offset.bind(tangon)(verify);
            verify = verify.purchase;
            romeon = 19;
            zuuluu = zuuluu[romeon];
            offset = report.bind(tangon)(zuuluu);
            report = offset.isProductNew;
            zuuluu = backup.skuId;
            offset = report.bind(offset)(zuuluu);
            zuuluu = _closure1_slot8;
            yankee = zuuluu.bind(tangon)();
            report = entity == verify;
            if(report) { _fun00006_ip = 245; continue _fun00005 }
 208:
            zuuluu = _closure1_slot0;
            entity = _closure1_slot2;
            entity = entity[romeon];
            zuuluu = zuuluu.bind(tangon)(entity);
            entity = zuuluu.isPremiumCollectiblesPurchase;
            entity = entity.bind(zuuluu)(verify);
            if(!entity) { _fun00006_ip = 242; continue _fun00005 }
 239:
            entity = !michal;
 242:
            report = entity;
 245:
            zuuluu = _closure1_slot7;
            michal = _closure1_slot9;
            entity = {};
            entity['isSelected'] = foxtra;
            verify = backup.label;
            entity['accessibilityLabel'] = verify;
            result = entity;
            output = oscard;
            oscard = copyDataProperties(result, output);
            romeon = _closure1_slot6;
            verify = _closure1_slot1;
            kiloes = _closure1_slot2;
            oscard = 20;
            oscard = kiloes[oscard];
            verify = verify.bind(tangon)(oscard);
            oscard = {};
            oscard['avatarDecoration'] = backup;
            backup = _closure1_slot5;
            oscard['size'] = backup;
            oscard['animate'] = foxtra;
            verify = romeon.bind(tangon)(verify, oscard);
            oscard = new Array(3);
            oscard[0] = verify;
            oscard[1] = option;
            if(!report) { _fun00006_ip = 405; continue _fun00005 }
 344:
            verify = _closure1_slot6;
            option = _closure1_slot0;
            romeon = _closure1_slot2;
            golfie = 15;
            golfie = romeon[golfie];
            golfie = option.bind(tangon)(golfie);
            option = golfie.LockBadge;
            golfie = {};
            romeon = yankee.lockIcon;
            yankee = new Array(1);
            yankee[0] = romeon;
            golfie['style'] = yankee;
            golfie['isNew'] = offset;
            report = verify.bind(tangon)(option, golfie);
 405:
            oscard[2] = report;
            report = 'children';
            entity[report] = oscard;
            entity = zuuluu.bind(tangon)(michal, entity);
            return entity;
        }
    };
    zuuluu['EditAvatarDecorationItem'] = michal;
    return entity;
})();