// app/modules/debug/logAppStart.tsx
export default (function(global, require, metroImportDefault, metroImportAll, moduleObject, exports, dependencyMap) {
    var4 = require;
    var3 = exports;
    var5 = dependencyMap;
    var1 = global;
    var7 = var1.Object;
    var6 = var7.defineProperty;
    var2 = {};
    var1 = true;
    var2['value'] = var1;
    var1 = '__esModule';
    var1 = var6.bind(var7)(var3, var1, var2);
    var1 = 0;
    var2 = var5[var1];
    var1 = undefined;
    var6 = var4.bind(var1)(var2);
    var2 = var6.clear;
    var2 = var2.bind(var6)();
    var2 = 1;
    var2 = var5[var2];
    var2 = var4.bind(var1)(var2);
    var7 = var2.default;
    var2 = var7.prototype;
    var6 = Object.create(var2, {constructor: {value: var7}});
    var10 = 'app';
    var11 = var6;
    var2 = new var11[var7](var10, var9);
    var7 = var2 instanceof Object ? var2 : var6;
    var6 = var7.log;
    var2 = 'Initializing app';
    var2 = var6.bind(var7)(var2);
    var2 = 2;
    var6 = var5[var2];
    var6 = var4.bind(var1)(var6);
    var6 = var6.default;
    var7 = var6.loadIndex;
    var6 = var7.recordStart;
    var6 = var6.bind(var7)();
    var2 = var5[var2];
    var2 = var4.bind(var1)(var2);
    var2 = var2.default;
    var6 = var2.loadImports;
    var2 = var6.recordStart;
    var2 = var2.bind(var6)();
    var2 = 3;
    var2 = var5[var2];
    var5 = var4.bind(var1)(var2);
    var4 = var5.fileFinishedImporting;
    var2 = 'modules/debug/logAppStart.tsx';
    var2 = var4.bind(var5)(var2);
    var2 = null;
    var3['default'] = var2;
    return var1;
})();