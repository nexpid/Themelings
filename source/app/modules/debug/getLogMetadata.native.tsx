// app/modules/debug/getLogMetadata.native.tsx
export default (function(_, argBar, __, argCorge, ___, argFred, argPlugh) {
    report = argBar;
    zulu = argFred;
    tango = argPlugh;
    var _closure1_slot0 = report;
    entity = argCorge;
    var _closure1_slot1 = entity;
    var _closure1_slot2 = tango;
    entity = global;
    options = entity.Object;
    golf = options.defineProperty;
    oscar = {};
    entity = true;
    oscar['value'] = entity;
    entity = '__esModule';
    entity = golf.bind(options)(zulu, entity, oscar);
    entity = 2;
    tango = tango[entity];
    entity = undefined;
    oscar = report.bind(entity)(tango);
    report = oscar.fileFinishedImporting;
    tango = 'modules/debug/getLogMetadata.native.tsx';
    tango = report.bind(oscar)(tango);
    mike = function() { // Original name: getLogMetadata
        golf = _closure1_slot1;
        report = _closure1_slot2;
        oscar = 0;
        entity = report[oscar];
        tango = undefined;
        zulu = golf.bind(tango)(entity);
        entity = zulu.getConstants;
        entity = entity.bind(zulu)();
        romeo = entity.Identifier;
        yankee = entity.Version;
        offset = entity.Manifest;
        verify = entity.ReleaseChannel;
        options = entity.Build;
        zulu = entity.DeviceVendorID;
        entity = {};
        foxtrot = global;
        foxtrot = foxtrot.Date;
        backup = foxtrot.prototype;
        backup = Object.create(backup, {constructor: {value: foxtrot}});
        sizing = backup;
        foxtrot = new sizing[foxtrot](kilo);
        backup = foxtrot instanceof Object ? foxtrot : backup;
        foxtrot = backup.toISOString;
        foxtrot = foxtrot.bind(backup)();
        entity['logsUploaded'] = foxtrot;
        entity['Identifier'] = romeo;
        entity['Version'] = yankee;
        entity['Manifest'] = offset;
        entity['ReleaseChannel'] = verify;
        entity['Build'] = options;
        oscar = report[oscar];
        golf = golf.bind(tango)(oscar);
        oscar = golf.getBuildNumberLabel;
        oscar = oscar.bind(golf)();
        entity['JSBuildNumber'] = oscar;
        entity['DeviceVendorID'] = zulu;
        zulu = _closure1_slot0;
        mike = 1;
        oscar = report[mike];
        golf = zulu.bind(tango)(oscar);
        oscar = golf.getDeviceInfo;
        oscar = oscar.bind(golf)();
        entity['DeviceInfo'] = oscar;
        mike = report[mike];
        zulu = zulu.bind(tango)(mike);
        mike = zulu.getSystemVersion;
        mike = mike.bind(zulu)();
        entity['systemVersion'] = mike;
        return entity;
    };
    zulu['default'] = mike;
    return entity;
})();