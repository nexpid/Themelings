// app/modules/debug/getLogMetadata.native.tsx
export default (function(_, argBar, __, argCor, ___, argFre, argPlu) {
    report = argBar;
    zuuluu = argFre;
    tangon = argPlu;
    var _closure1_slot0 = report;
    entity = argCor;
    var _closure1_slot1 = entity;
    var _closure1_slot2 = tangon;
    entity = global;
    option = entity.Object;
    golfie = option.defineProperty;
    oscard = {};
    entity = true;
    oscard['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(option)(zuuluu, entity, oscard);
    entity = 2;
    tangon = tangon[entity];
    entity = undefined;
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/debug/getLogMetadata.native.tsx';
    tangon = report.bind(oscard)(tangon);
    michal = function() { // Original name: getLogMetadata
        golfie = _closure1_slot1;
        report = _closure1_slot2;
        oscard = 0;
        entity = report[oscard];
        tangon = undefined;
        zuuluu = golfie.bind(tangon)(entity);
        entity = zuuluu.getConstants;
        entity = entity.bind(zuuluu)();
        romeon = entity.Identifier;
        yankee = entity.Version;
        offset = entity.Manifest;
        verify = entity.ReleaseChannel;
        option = entity.Build;
        zuuluu = entity.DeviceVendorID;
        entity = {};
        foxtra = global;
        foxtra = foxtra.Date;
        backup = foxtra.prototype;
        backup = Object.create(backup, {constructor: {value: foxtra}});
        sizing = backup;
        foxtra = new sizing[foxtra](kiloes);
        backup = foxtra instanceof Object ? foxtra : backup;
        foxtra = backup.toISOString;
        foxtra = foxtra.bind(backup)();
        entity['logsUploaded'] = foxtra;
        entity['Identifier'] = romeon;
        entity['Version'] = yankee;
        entity['Manifest'] = offset;
        entity['ReleaseChannel'] = verify;
        entity['Build'] = option;
        oscard = report[oscard];
        golfie = golfie.bind(tangon)(oscard);
        oscard = golfie.getBuildNumberLabel;
        oscard = oscard.bind(golfie)();
        entity['JSBuildNumber'] = oscard;
        entity['DeviceVendorID'] = zuuluu;
        zuuluu = _closure1_slot0;
        michal = 1;
        oscard = report[michal];
        golfie = zuuluu.bind(tangon)(oscard);
        oscard = golfie.getDeviceInfo;
        oscard = oscard.bind(golfie)();
        entity['DeviceInfo'] = oscard;
        michal = report[michal];
        zuuluu = zuuluu.bind(tangon)(michal);
        michal = zuuluu.getSystemVersion;
        michal = michal.bind(zuuluu)();
        entity['systemVersion'] = michal;
        return entity;
    };
    zuuluu['default'] = michal;
    return entity;
})();