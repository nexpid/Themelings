// app/modules/guild_sidebar/native/VoiceUserSummary.tsx
export default (function(argFoo, argBar, argBaz, argCorge, _, argFred, argPlugh) {
    oscar = argBar;
    foxtrot = argBaz;
    zulu = argFred;
    golf = argPlugh;
    var _closure1_slot0 = oscar;
    var _closure1_slot1 = foxtrot;
    var _closure1_slot2 = golf;
    entity = global;
    options = entity.Object;
    report = options.defineProperty;
    mike = {};
    entity = true;
    mike['value'] = entity;
    entity = '__esModule';
    entity = report.bind(options)(zulu, entity, mike);
    entity = 0;
    report = golf[entity];
    mike = argCorge;
    entity = undefined;
    options = mike.bind(entity)(report);
    mike = 1;
    mike = golf[mike];
    mike = oscar.bind(entity)(mike);
    mike = mike.View;
    var _closure1_slot3 = mike;
    mike = 2;
    report = golf[mike];
    report = oscar.bind(entity)(report);
    report = report.jsx;
    var _closure1_slot4 = report;
    mike = golf[mike];
    mike = oscar.bind(entity)(mike);
    mike = mike.jsxs;
    var _closure1_slot5 = mike;
    mike = 3;
    mike = golf[mike];
    offset = oscar.bind(entity)(mike);
    verify = offset.createStyles;
    report = {};
    mike = 40;
    yankee = {'flexDirection': 'row', 'alignItems': 'center', 'paddingHorizontal': 16, 'height': 40};
    report['container'] = yankee;
    yankee = {'flexDirection': 'row', 'alignItems': 'center', 'height': 40};
    report['containerNoPadding'] = yankee;
    yankee = {};
    yankee['height'] = mike;
    report['iconContainer'] = yankee;
    yankee = {'width': 20, 'height': 20, 'marginRight': 8};
    backup = 4;
    romeo = golf[backup];
    romeo = oscar.bind(entity)(romeo);
    romeo = romeo.DARK_PRIMARY_360_LIGHT_PRIMARY_400;
    yankee['tintColor'] = romeo;
    report['channelIcon'] = yankee;
    yankee = {};
    yankee['marginRight'] = backup;
    report['redesignChannelIcon'] = yankee;
    yankee = {};
    romeo = 5;
    kilo = golf[romeo];
    kilo = foxtrot.bind(entity)(kilo);
    kilo = kilo.radii;
    kilo = kilo.lg;
    yankee['borderRadius'] = kilo;
    yankee['borderWidth'] = backup;
    romeo = golf[romeo];
    romeo = foxtrot.bind(entity)(romeo);
    romeo = romeo.colors;
    romeo = romeo.BACKGROUND_MOBILE_SECONDARY;
    yankee['borderColor'] = romeo;
    report['iconWrapper'] = yankee;
    yankee = {'height': 20, 'paddingHorizontal': 4, 'paddingVertical': 0, 'display': 'flex', 'flexDirection': 'row', 'alignItems': 'center'};
    report['overflow'] = yankee;
    yankee = {};
    romeo = 'transparent';
    yankee['borderColor'] = romeo;
    report['transparentBorder'] = yankee;
    report = verify.bind(offset)(report);
    var _closure1_slot6 = report;
    report = options.memo;
    tango = function(argFoo) {
        _fun115796: for(var _fun115796_ip = 0; ; ) switch(_fun115796_ip) {
 0:
            entity = argFoo;
            yankee = entity.users;
            offset = entity.max;
            mike = entity.guildId;
            var _closure2_slot0 = mike;
            oscar = entity.renderIcon;
            golf = entity.noPadding;
            report = entity.stageIcon;
            entity = _closure1_slot6;
            tango = undefined;
            kilo = entity.bind(tango)();
            mike = _closure1_slot1;
            zulu = _closure1_slot2;
            entity = 6;
            entity = zulu[entity];
            entity = mike.bind(tango)(entity);
            entity = entity.bind(tango)();
            sizing = null;
            if(!entity) { _fun115796_ip = 91; continue _fun115796 }
 85:
            sizing = kilo.transparentBorder;
 91:
            mike = _closure1_slot0;
            zulu = _closure1_slot2;
            entity = 7;
            entity = zulu[entity];
            mike = mike.bind(tango)(entity);
            entity = mike.useClientThemesOverride;
            options = entity.bind(mike)();
            zulu = _closure1_slot5;
            mike = _closure1_slot3;
            entity = {};
            if(golf) { _fun115796_ip = 141; continue _fun115796 }
 134:
            romeo = kilo.container;
            _fun115796_ip = 147; continue _fun115796;
 141:
            romeo = kilo.containerNoPadding;
 147:
            golf = new Array(2);
            golf[0] = romeo;
            golf[1] = options;
            entity['style'] = golf;
            golf = _closure1_slot4;
            if(!oscar) { _fun115796_ip = 173; continue _fun115796 }
 170:
            if(report) { _fun115796_ip = 201; continue _fun115796 }
 173:
            oscar = _closure1_slot0;
            options = _closure1_slot2;
            report = 9;
            report = options[report];
            report = oscar.bind(tango)(report);
            oscar = report.VoiceNormalIcon;
            _fun115796_ip = 227; continue _fun115796;
 201:
            options = _closure1_slot0;
            romeo = _closure1_slot2;
            report = 8;
            report = romeo[report];
            report = options.bind(tango)(report);
            oscar = report.StageIcon;
 227:
            report = {'size': 'sm', 'color': 'channel-icon'};
            options = kilo.redesignChannelIcon;
            report['style'] = options;
            oscar = golf.bind(tango)(oscar, report);
            report = new Array(2);
            report[0] = oscar;
            options = _closure1_slot4;
            golf = _closure1_slot1;
            backup = _closure1_slot2;
            romeo = 10;
            oscar = backup[romeo];
            golf = golf.bind(tango)(oscar);
            oscar = {};
            output = -14;
            oscar['offsetAmount'] = output;
            output = kilo.iconContainer;
            oscar['style'] = output;
            result = kilo.iconWrapper;
            output = new Array(2);
            output[0] = result;
            output[1] = sizing;
            oscar['iconWrapperStyle'] = output;
            output = kilo.overflow;
            kilo = new Array(2);
            kilo[0] = output;
            kilo[1] = sizing;
            oscar['overflowStyle'] = kilo;
            foxtrot = _closure1_slot0;
            romeo = backup[romeo];
            romeo = foxtrot.bind(tango)(romeo);
            romeo = romeo.OverflowTextSmall;
            oscar['overflowComponent'] = romeo;
            oscar['items'] = yankee;
            oscar['max'] = offset;
            verify = function(argFoo) { // Original name: renderItem
                tango = _closure1_slot4;
                mike = _closure1_slot1;
                golf = _closure1_slot2;
                report = 11;
                entity = golf[report];
                zulu = undefined;
                mike = mike.bind(zulu)(entity);
                entity = {};
                options = argFoo;
                entity['user'] = options;
                options = _closure2_slot0;
                entity['guildId'] = options;
                oscar = _closure1_slot0;
                report = golf[report];
                report = oscar.bind(zulu)(report);
                report = report.AvatarSizes;
                report = report.XSMALL_20;
                entity['size'] = report;
                entity = tango.bind(zulu)(mike, entity);
                return entity;
            };
            oscar['renderItem'] = verify;
            oscar = options.bind(tango)(golf, oscar);
            report[1] = oscar;
            entity['children'] = report;
            entity = zulu.bind(tango)(mike, entity);
            return entity;
        }
    };
    tango = report.bind(options)(tango);
    report = 12;
    report = golf[report];
    golf = oscar.bind(entity)(report);
    oscar = golf.fileFinishedImporting;
    report = 'modules/guild_sidebar/native/VoiceUserSummary.tsx';
    report = oscar.bind(golf)(report);
    zulu['default'] = tango;
    zulu['VOICE_USER_SUMMARY_HEIGHT'] = mike;
    return entity;
})();