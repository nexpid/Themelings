// app/modules/guild_sidebar/native/VoiceUserSummary.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    oscard = argBar;
    foxtra = argBaz;
    zuuluu = argFre;
    golfie = argPlu;
    var _closure1_slot0 = oscard;
    var _closure1_slot1 = foxtra;
    var _closure1_slot2 = golfie;
    entity = global;
    option = entity.Object;
    report = option.defineProperty;
    michal = {};
    entity = true;
    michal['value'] = entity;
    entity = '__esModule';
    entity = report.bind(option)(zuuluu, entity, michal);
    entity = 0;
    report = golfie[entity];
    michal = argCor;
    entity = undefined;
    option = michal.bind(entity)(report);
    michal = 1;
    michal = golfie[michal];
    michal = oscard.bind(entity)(michal);
    michal = michal.View;
    var _closure1_slot3 = michal;
    michal = 2;
    michal = golfie[michal];
    michal = oscard.bind(entity)(michal);
    report = michal.jsx;
    var _closure1_slot4 = report;
    michal = michal.jsxs;
    var _closure1_slot5 = michal;
    michal = 3;
    michal = golfie[michal];
    offset = oscard.bind(entity)(michal);
    verify = offset.createStyles;
    report = {};
    michal = 40;
    yankee = {'flexDirection': 'row', 'alignItems': 'center', 'paddingHorizontal': 16, 'height': 40};
    report['container'] = yankee;
    yankee = {'flexDirection': 'row', 'alignItems': 'center', 'height': 40};
    report['containerNoPadding'] = yankee;
    yankee = {};
    yankee['height'] = michal;
    report['iconContainer'] = yankee;
    yankee = {'width': 20, 'height': 20, 'marginRight': 8};
    backup = 4;
    romeon = golfie[backup];
    romeon = oscard.bind(entity)(romeon);
    romeon = romeon.DARK_PRIMARY_360_LIGHT_PRIMARY_400;
    yankee['tintColor'] = romeon;
    report['channelIcon'] = yankee;
    yankee = {};
    yankee['marginRight'] = backup;
    report['redesignChannelIcon'] = yankee;
    yankee = {};
    romeon = 5;
    kiloes = golfie[romeon];
    kiloes = foxtra.bind(entity)(kiloes);
    kiloes = kiloes.radii;
    kiloes = kiloes.lg;
    yankee['borderRadius'] = kiloes;
    yankee['borderWidth'] = backup;
    romeon = golfie[romeon];
    romeon = foxtra.bind(entity)(romeon);
    romeon = romeon.colors;
    romeon = romeon.BACKGROUND_MOBILE_SECONDARY;
    yankee['borderColor'] = romeon;
    report['iconWrapper'] = yankee;
    yankee = {'height': 20, 'paddingHorizontal': 4, 'paddingVertical': 0, 'display': 'flex', 'flexDirection': 'row', 'alignItems': 'center'};
    report['overflow'] = yankee;
    yankee = {};
    romeon = 'transparent';
    yankee['borderColor'] = romeon;
    report['transparentBorder'] = yankee;
    report = verify.bind(offset)(report);
    var _closure1_slot6 = report;
    report = option.memo;
    tangon = function(argFoo) {
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            entity = argFoo;
            yankee = entity.users;
            offset = entity.max;
            michal = entity.guildId;
            var _closure2_slot0 = michal;
            oscard = entity.renderIcon;
            golfie = entity.noPadding;
            report = entity.stageIcon;
            entity = _closure1_slot6;
            tangon = undefined;
            kiloes = entity.bind(tangon)();
            michal = _closure1_slot1;
            zuuluu = _closure1_slot2;
            entity = 6;
            entity = zuuluu[entity];
            entity = michal.bind(tangon)(entity);
            entity = entity.bind(tangon)();
            sizing = null;
            if(!entity) { _fun00002_ip = 91; continue _fun00001 }
 85:
            sizing = kiloes.transparentBorder;
 91:
            michal = _closure1_slot0;
            zuuluu = _closure1_slot2;
            entity = 7;
            entity = zuuluu[entity];
            michal = michal.bind(tangon)(entity);
            entity = michal.useClientThemesOverride;
            option = entity.bind(michal)();
            zuuluu = _closure1_slot5;
            michal = _closure1_slot3;
            entity = {};
            if(golfie) { _fun00002_ip = 141; continue _fun00001 }
 134:
            romeon = kiloes.container;
            _fun00002_ip = 147; continue _fun00001;
 141:
            romeon = kiloes.containerNoPadding;
 147:
            golfie = new Array(2);
            golfie[0] = romeon;
            golfie[1] = option;
            entity['style'] = golfie;
            golfie = _closure1_slot4;
            if(!oscard) { _fun00002_ip = 173; continue _fun00001 }
 170:
            if(report) { _fun00002_ip = 201; continue _fun00001 }
 173:
            oscard = _closure1_slot0;
            option = _closure1_slot2;
            report = 9;
            report = option[report];
            report = oscard.bind(tangon)(report);
            oscard = report.VoiceNormalIcon;
            _fun00002_ip = 227; continue _fun00001;
 201:
            option = _closure1_slot0;
            romeon = _closure1_slot2;
            report = 8;
            report = romeon[report];
            report = option.bind(tangon)(report);
            oscard = report.StageIcon;
 227:
            report = {'size': 'sm', 'color': 'channel-icon'};
            option = kiloes.redesignChannelIcon;
            report['style'] = option;
            oscard = golfie.bind(tangon)(oscard, report);
            report = new Array(2);
            report[0] = oscard;
            option = _closure1_slot4;
            golfie = _closure1_slot1;
            backup = _closure1_slot2;
            romeon = 10;
            oscard = backup[romeon];
            golfie = golfie.bind(tangon)(oscard);
            oscard = {};
            output = -14;
            oscard['offsetAmount'] = output;
            output = kiloes.iconContainer;
            oscard['style'] = output;
            result = kiloes.iconWrapper;
            output = new Array(2);
            output[0] = result;
            output[1] = sizing;
            oscard['iconWrapperStyle'] = output;
            output = kiloes.overflow;
            kiloes = new Array(2);
            kiloes[0] = output;
            kiloes[1] = sizing;
            oscard['overflowStyle'] = kiloes;
            foxtra = _closure1_slot0;
            romeon = backup[romeon];
            romeon = foxtra.bind(tangon)(romeon);
            romeon = romeon.OverflowTextSmall;
            oscard['overflowComponent'] = romeon;
            oscard['items'] = yankee;
            oscard['max'] = offset;
            verify = function(argFoo) { // Original name: renderItem
                tangon = _closure1_slot4;
                michal = _closure1_slot1;
                golfie = _closure1_slot2;
                report = 11;
                entity = golfie[report];
                zuuluu = undefined;
                michal = michal.bind(zuuluu)(entity);
                entity = {};
                option = argFoo;
                entity['user'] = option;
                option = _closure2_slot0;
                entity['guildId'] = option;
                oscard = _closure1_slot0;
                report = golfie[report];
                report = oscard.bind(zuuluu)(report);
                report = report.AvatarSizes;
                report = report.XSMALL_20;
                entity['size'] = report;
                entity = tangon.bind(zuuluu)(michal, entity);
                return entity;
            };
            oscard['renderItem'] = verify;
            oscard = option.bind(tangon)(golfie, oscard);
            report[1] = oscard;
            entity['children'] = report;
            entity = zuuluu.bind(tangon)(michal, entity);
            return entity;
        }
    };
    tangon = report.bind(option)(tangon);
    report = 12;
    report = golfie[report];
    golfie = oscard.bind(entity)(report);
    oscard = golfie.fileFinishedImporting;
    report = 'modules/guild_sidebar/native/VoiceUserSummary.tsx';
    report = oscard.bind(golfie)(report);
    zuuluu['default'] = tangon;
    zuuluu['VOICE_USER_SUMMARY_HEIGHT'] = michal;
    return entity;
})();