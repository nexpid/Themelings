// app/modules/guild_sidebar/native/GuildMFAWarning.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    report = argBar;
    romeon = argBaz;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    var _closure1_slot1 = romeon;
    var _closure1_slot2 = oscard;
    entity = function() { // Original name: handlePress
        entity = undefined;
        tangon = _closure1_slot10;
        zuuluu = tangon.apply;
        entity = arguments;
        michal = entity;
        entity = this;
        entity = zuuluu.bind(tangon)(entity, michal);
        return entity;
    };
    var _closure1_slot9 = entity;
    entity = function() { // Original name: _handlePress
        report = undefined;
        entity = undefined;
        tangon = _closure1_slot3;
        zuuluu = function* () {
            entity = function* () { // Original name: ?anon_0_
                _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
                    StartGenerator();
                    ResumeGenerator(result_out_reg=0, return_bool_out_reg=1);
                    if(michal) { _fun00002_ip = 123; continue _fun00001 }
 7:
                    oscard = _closure1_slot0;
                    michal = _closure1_slot2;
                    zuuluu = 9;
                    report = michal[zuuluu];
                    zuuluu = undefined;
                    oscard = oscard.bind(zuuluu)(report);
                    report = 8;
                    report = michal[report];
                    michal = michal.paths;
                    michal = oscard.bind(zuuluu)(report, michal);
                    SaveGenerator(address=54);
 52:
                    return michal;
 54:
                    ResumeGenerator(result_out_reg=1, return_bool_out_reg=4);
                    if(report) { _fun00002_ip = 120; continue _fun00001 }
 60:
                    option = michal.default;
                    oscard = _closure1_slot1;
                    golfie = _closure1_slot2;
                    report = 10;
                    report = golfie[report];
                    oscard = oscard.bind(zuuluu)(report);
                    report = oscard.openURL;
                    golfie = option.getArticleURL;
                    tangon = _closure1_slot5;
                    tangon = tangon.SETTING_UP_TWO_FACTOR;
                    tangon = golfie.bind(option)(tangon);
                    tangon = report.bind(oscard)(tangon);
                    return zuuluu;
 120:
                    return michal;
 123:
                    return entity;
                }
            };
            return entity;
        };
        tangon = tangon.bind(report)(zuuluu);
        _closure1_slot10 = tangon;
        zuuluu = tangon.apply;
        entity = arguments;
        michal = entity;
        entity = this;
        entity = zuuluu.bind(tangon)(entity, michal);
        return entity;
    };
    var _closure1_slot10 = entity;
    entity = global;
    option = entity.Object;
    golfie = option.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(option)(zuuluu, entity, tangon);
    entity = 0;
    tangon = oscard[entity];
    entity = undefined;
    tangon = romeon.bind(entity)(tangon);
    var _closure1_slot3 = tangon;
    tangon = 1;
    golfie = oscard[tangon];
    tangon = argCor;
    tangon = tangon.bind(entity)(golfie);
    tangon = 2;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.Image;
    var _closure1_slot4 = tangon;
    tangon = 3;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    offset = tangon.Fonts;
    tangon = tangon.HelpdeskArticles;
    var _closure1_slot5 = tangon;
    tangon = 4;
    golfie = oscard[tangon];
    golfie = report.bind(entity)(golfie);
    golfie = golfie.jsx;
    var _closure1_slot6 = golfie;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.jsxs;
    var _closure1_slot7 = tangon;
    tangon = 5;
    tangon = oscard[tangon];
    option = report.bind(entity)(tangon);
    golfie = option.createStyles;
    tangon = {};
    verify = {'backgroundColor': null, 'padding': 10, 'alignItems': 'center'};
    yankee = 6;
    foxtra = oscard[yankee];
    foxtra = romeon.bind(entity)(foxtra);
    foxtra = foxtra.colors;
    foxtra = foxtra.BACKGROUND_PRIMARY;
    verify['backgroundColor'] = foxtra;
    tangon['MFAWarning'] = verify;
    verify = {'marginVertical': 10, 'width': 98, 'height': 53};
    tangon['MFAWarningIcon'] = verify;
    verify = {};
    yankee = oscard[yankee];
    yankee = romeon.bind(entity)(yankee);
    yankee = yankee.unsafe_rawColors;
    yankee = yankee.BLUE_345;
    verify['color'] = yankee;
    offset = offset.PRIMARY_SEMIBOLD;
    verify['fontFamily'] = offset;
    tangon['MFAWarningLink'] = verify;
    tangon = golfie.bind(option)(tangon);
    var _closure1_slot8 = tangon;
    tangon = 15;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/guild_sidebar/native/GuildMFAWarning.tsx';
    tangon = report.bind(oscard)(tangon);
    tangon = function() { // Original name: GuildMFAWarning
        entity = _closure1_slot8;
        tangon = undefined;
        romeon = entity.bind(tangon)();
        zuuluu = _closure1_slot7;
        backup = _closure1_slot0;
        kiloes = _closure1_slot2;
        entity = 11;
        entity = kiloes[entity];
        entity = backup.bind(tangon)(entity);
        michal = entity.PressableOpacity;
        entity = {};
        report = 'button';
        entity['accessibilityRole'] = report;
        report = romeon.MFAWarning;
        entity['style'] = report;
        report = _closure1_slot9;
        entity['onPress'] = report;
        golfie = _closure1_slot6;
        oscard = _closure1_slot4;
        report = {};
        verify = romeon.MFAWarningIcon;
        report['style'] = verify;
        verify = _closure1_slot1;
        option = 12;
        option = kiloes[option];
        option = verify.bind(tangon)(option);
        report['source'] = option;
        oscard = golfie.bind(tangon)(oscard, report);
        report = new Array(2);
        report[0] = oscard;
        oscard = 7;
        oscard = kiloes[oscard];
        oscard = backup.bind(tangon)(oscard);
        golfie = oscard.Text;
        oscard = {'variant': 'text-xs/medium', 'color': 'header-secondary'};
        yankee = 13;
        option = kiloes[yankee];
        option = backup.bind(tangon)(option);
        offset = option.intl;
        verify = offset.string;
        option = kiloes[yankee];
        option = backup.bind(tangon)(option);
        option = option.t;
        option = option.ZIf8Ag;
        verify = verify.bind(offset)(option);
        option = new Array(2);
        option[0] = verify;
        verify = 14;
        verify = kiloes[verify];
        verify = backup.bind(tangon)(verify);
        offset = verify.LegacyText;
        verify = {};
        romeon = romeon.MFAWarningLink;
        verify['style'] = romeon;
        romeon = kiloes[yankee];
        romeon = backup.bind(tangon)(romeon);
        foxtra = romeon.intl;
        romeon = foxtra.string;
        yankee = kiloes[yankee];
        yankee = backup.bind(tangon)(yankee);
        yankee = yankee.t;
        yankee = yankee.hvVgAQ;
        romeon = romeon.bind(foxtra)(yankee);
        yankee = [' '];
        yankee[1] = romeon;
        verify['children'] = yankee;
        verify = zuuluu.bind(tangon)(offset, verify);
        option[1] = verify;
        oscard['children'] = option;
        oscard = zuuluu.bind(tangon)(golfie, oscard);
        report[1] = oscard;
        entity['children'] = report;
        entity = zuuluu.bind(tangon)(michal, entity);
        return entity;
    };
    zuuluu['default'] = tangon;
    michal = function(argFoo) { // Original name: getScaledGuildMFAWarningHeight
        zuuluu = _closure1_slot0;
        michal = _closure1_slot2;
        entity = 7;
        michal = michal[entity];
        entity = undefined;
        entity = zuuluu.bind(entity)(michal);
        entity = entity.TextStyleSheet;
        entity = entity.text-xs/medium;
        michal = entity.lineHeight;
        entity = argFoo;
        michal = michal * entity;
        entity = 5;
        michal = michal * entity;
        entity = 83;
        entity = entity + michal;
        michal = 10;
        entity = entity + michal;
        entity = entity + michal;
        return entity;
    };
    zuuluu['getScaledGuildMFAWarningHeight'] = michal;
    return entity;
})();