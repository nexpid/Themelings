// app/modules/guild_sidebar/native/GuildActionRows.tsx
export default (function(argFoo, argBar, argBaz, argCorge, _, argFred, argPlugh) {
    report = argBar;
    romeo = argBaz;
    zulu = argFred;
    oscar = argPlugh;
    var _closure1_slot0 = report;
    var _closure1_slot1 = romeo;
    var _closure1_slot2 = oscar;
    entity = global;
    options = entity.Object;
    golf = options.defineProperty;
    tango = {};
    entity = true;
    tango['value'] = entity;
    entity = '__esModule';
    entity = golf.bind(options)(zulu, entity, tango);
    entity = 0;
    golf = oscar[entity];
    tango = argCorge;
    entity = undefined;
    tango = tango.bind(entity)(golf);
    var _closure1_slot3 = tango;
    tango = 1;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.View;
    var _closure1_slot4 = tango;
    tango = 2;
    tango = oscar[tango];
    tango = romeo.bind(entity)(tango);
    var _closure1_slot5 = tango;
    tango = 3;
    tango = oscar[tango];
    tango = romeo.bind(entity)(tango);
    var _closure1_slot6 = tango;
    offset = 4;
    tango = oscar[offset];
    tango = report.bind(entity)(tango);
    foxtrot = tango.CHANNEL_MARGIN_VERTICAL;
    tango = 5;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.CHANNELS_AND_ROLES_MODAL_KEY;
    var _closure1_slot7 = tango;
    tango = 6;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.ReadStateTypes;
    var _closure1_slot8 = tango;
    tango = 7;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.jsx;
    var _closure1_slot9 = tango;
    yankee = 8;
    tango = oscar[yankee];
    options = report.bind(entity)(tango);
    golf = options.createStyles;
    tango = {};
    verify = {};
    verify['marginVertical'] = foxtrot;
    verify['marginHorizontal'] = yankee;
    yankee = 9;
    yankee = oscar[yankee];
    yankee = romeo.bind(entity)(yankee);
    yankee = yankee.radii;
    yankee = yankee.md;
    verify['borderRadius'] = yankee;
    tango['container'] = verify;
    verify = {};
    verify['paddingStart'] = offset;
    tango['channelInfoContainer'] = verify;
    tango = golf.bind(options)(tango);
    var _closure1_slot10 = tango;
    tango = 23;
    tango = oscar[tango];
    oscar = report.bind(entity)(tango);
    report = oscar.fileFinishedImporting;
    tango = 'modules/guild_sidebar/native/GuildActionRows.tsx';
    tango = report.bind(oscar)(tango);
    mike = function(argFoo) { // Original name: GuildRolesAndChannelsRow
        _fun115943: for(var _fun115943_ip = 0; ; ) switch(_fun115943_ip) {
 0:
            mike = argFoo;
            entity = mike.guild;
            var _closure2_slot0 = entity;
            options = mike.selected;
            mike = _closure1_slot10;
            tango = undefined;
            golf = mike.bind(tango)();
            zulu = _closure1_slot1;
            report = _closure1_slot2;
            mike = 10;
            mike = report[mike];
            mike = zulu.bind(tango)(mike);
            yankee = mike.bind(tango)(entity);
            kilo = entity.id;
            var _closure2_slot1 = kilo;
            romeo = _closure1_slot0;
            entity = 11;
            entity = report[entity];
            zulu = romeo.bind(tango)(entity);
            mike = zulu.useIsDismissibleContentDismissed;
            entity = 12;
            entity = report[entity];
            entity = romeo.bind(tango)(entity);
            entity = entity.DismissibleContent;
            entity = entity.CHANNEL_BROWSER_NEW_BADGE_NUX;
            entity = mike.bind(zulu)(entity);
            mike = 13;
            zulu = report[mike];
            backup = romeo.bind(tango)(zulu);
            foxtrot = backup.useStateFromStores;
            zulu = _closure1_slot6;
            offset = new Array(1);
            offset[0] = zulu;
            zulu = function() {
                tango = _closure1_slot6;
                zulu = tango.hasUnread;
                mike = _closure2_slot0;
                mike = mike.id;
                entity = _closure1_slot8;
                entity = entity.GUILD_ONBOARDING_QUESTION;
                entity = zulu.bind(tango)(mike, entity);
                return entity;
            };
            zulu = foxtrot.bind(backup)(offset, zulu);
            mike = report[mike];
            backup = romeo.bind(tango)(mike);
            foxtrot = backup.useStateFromStores;
            mike = _closure1_slot5;
            offset = new Array(1);
            offset[0] = mike;
            mike = function() {
                tango = _closure1_slot5;
                zulu = tango.getNewChannelIds;
                mike = _closure2_slot0;
                mike = mike.id;
                mike = zulu.bind(tango)(mike);
                mike = mike.size;
                tango = _closure1_slot0;
                zulu = _closure1_slot2;
                entity = 14;
                zulu = zulu[entity];
                entity = undefined;
                entity = tango.bind(entity)(zulu);
                entity = entity.MAX_NEW_CHANNELS_TO_SHOW;
                entity = mike > entity;
                return entity;
            };
            mike = foxtrot.bind(backup)(offset, mike);
            backup = _closure1_slot3;
            foxtrot = backup.useCallback;
            offset = new Array(1);
            offset[0] = kilo;
            oscar = function() {
                report = _closure1_slot1;
                zulu = _closure1_slot2;
                entity = 15;
                tango = zulu[entity];
                entity = undefined;
                oscar = report.bind(entity)(tango);
                report = oscar.pushLazy;
                golf = _closure1_slot0;
                tango = 17;
                tango = zulu[tango];
                golf = golf.bind(entity)(tango);
                tango = 16;
                tango = zulu[tango];
                zulu = zulu.paths;
                tango = golf.bind(entity)(tango, zulu);
                zulu = {};
                golf = _closure2_slot1;
                zulu['guildId'] = golf;
                mike = _closure1_slot7;
                mike = report.bind(oscar)(tango, zulu, mike);
                return entity;
            };
            offset = foxtrot.bind(backup)(oscar, offset);
            oscar = 18;
            report = report[oscar];
            report = romeo.bind(tango)(report);
            report = report.ChannelModes;
            romeo = report.DEFAULT;
            if(!options) { _fun115943_ip = 285; continue _fun115943 }
 256:
            foxtrot = _closure1_slot0;
            report = _closure1_slot2;
            report = report[oscar];
            report = foxtrot.bind(tango)(report);
            report = report.ChannelModes;
            romeo = report.SELECTED;
 285:
            entity = !entity;
            if(entity) { _fun115943_ip = 294; continue _fun115943 }
 291:
            entity = zulu;
 294:
            if(entity) { _fun115943_ip = 300; continue _fun115943 }
 297:
            entity = mike;
 300:
            report = null;
            if(!entity) { _fun115943_ip = 369; continue _fun115943 }
 305:
            zulu = _closure1_slot9;
            mike = _closure1_slot4;
            entity = {};
            foxtrot = golf.channelInfoContainer;
            entity['style'] = foxtrot;
            backup = _closure1_slot0;
            kilo = _closure1_slot2;
            foxtrot = 19;
            foxtrot = kilo[foxtrot];
            foxtrot = backup.bind(tango)(foxtrot);
            backup = foxtrot.NewBadge;
            foxtrot = {};
            foxtrot = zulu.bind(tango)(backup, foxtrot);
            entity['children'] = foxtrot;
            report = zulu.bind(tango)(mike, entity);
 369:
            zulu = _closure1_slot9;
            mike = _closure1_slot1;
            entity = _closure1_slot2;
            entity = entity[oscar];
            mike = mike.bind(tango)(entity);
            entity = {};
            entity['onPress'] = offset;
            golf = golf.container;
            entity['style'] = golf;
            golf = true;
            entity['accessible'] = golf;
            offset = _closure1_slot0;
            golf = _closure1_slot2;
            output = 20;
            foxtrot = golf[output];
            foxtrot = offset.bind(tango)(foxtrot);
            backup = foxtrot.intl;
            foxtrot = backup.string;
            golf = golf[output];
            golf = offset.bind(tango)(golf);
            offset = golf.t;
            if(yankee) { _fun115943_ip = 472; continue _fun115943 }
 459:
            golf = offset.et6wam;
            golf = foxtrot.bind(backup)(golf);
            _fun115943_ip = 483; continue _fun115943;
 472:
            offset = offset.h9mGOD;
            golf = foxtrot.bind(backup)(offset);
 483:
            entity['accessibilityLabel'] = golf;
            golf = {};
            golf['selected'] = options;
            entity['accessibilityState'] = golf;
            entity['mode'] = romeo;
            offset = _closure1_slot9;
            options = _closure1_slot0;
            golf = _closure1_slot2;
            golf = golf[oscar];
            golf = options.bind(tango)(golf);
            options = golf.BaseChannelName;
            golf = {};
            sizing = _closure1_slot0;
            foxtrot = _closure1_slot2;
            backup = foxtrot[output];
            backup = sizing.bind(tango)(backup);
            kilo = backup.intl;
            backup = kilo.string;
            foxtrot = foxtrot[output];
            foxtrot = sizing.bind(tango)(foxtrot);
            foxtrot = foxtrot.t;
            if(yankee) { _fun115943_ip = 589; continue _fun115943 }
 576:
            yankee = foxtrot.et6wam;
            yankee = backup.bind(kilo)(yankee);
            _fun115943_ip = 600; continue _fun115943;
 589:
            foxtrot = foxtrot.h9mGOD;
            yankee = backup.bind(kilo)(foxtrot);
 600:
            golf['name'] = yankee;
            golf['mode'] = romeo;
            golf = offset.bind(tango)(options, golf);
            entity['name'] = golf;
            options = _closure1_slot9;
            offset = _closure1_slot0;
            yankee = _closure1_slot2;
            oscar = yankee[oscar];
            oscar = offset.bind(tango)(oscar);
            golf = oscar.BaseChannelIcon;
            oscar = {};
            oscar['mode'] = romeo;
            romeo = _closure1_slot1;
            verify = 21;
            verify = yankee[verify];
            verify = romeo.bind(tango)(verify);
            oscar['source'] = verify;
            verify = 22;
            verify = yankee[verify];
            verify = offset.bind(tango)(verify);
            verify = verify.ChannelListMagnifyingGlassIcon;
            oscar['IconComponent'] = verify;
            oscar = options.bind(tango)(golf, oscar);
            entity['icon'] = oscar;
            entity['channelInfo'] = report;
            entity = zulu.bind(tango)(mike, entity);
            return entity;
        }
    };
    zulu['GuildRolesAndChannelsRow'] = mike;
    return entity;
})();