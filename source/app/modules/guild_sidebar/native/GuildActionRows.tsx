// app/modules/guild_sidebar/native/GuildActionRows.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    report = argBar;
    romeon = argBaz;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    var _closure1_slot1 = romeon;
    var _closure1_slot2 = oscard;
    entity = global;
    option = entity.Object;
    golfie = option.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(option)(zuuluu, entity, tangon);
    entity = 0;
    golfie = oscard[entity];
    tangon = argCor;
    entity = undefined;
    tangon = tangon.bind(entity)(golfie);
    var _closure1_slot3 = tangon;
    tangon = 1;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.View;
    var _closure1_slot4 = tangon;
    tangon = 2;
    tangon = oscard[tangon];
    tangon = romeon.bind(entity)(tangon);
    var _closure1_slot5 = tangon;
    tangon = 3;
    tangon = oscard[tangon];
    tangon = romeon.bind(entity)(tangon);
    var _closure1_slot6 = tangon;
    offset = 4;
    tangon = oscard[offset];
    tangon = report.bind(entity)(tangon);
    foxtra = tangon.CHANNEL_MARGIN_VERTICAL;
    tangon = 5;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.CHANNELS_AND_ROLES_MODAL_KEY;
    var _closure1_slot7 = tangon;
    tangon = 6;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.ReadStateTypes;
    var _closure1_slot8 = tangon;
    tangon = 7;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.jsx;
    var _closure1_slot9 = tangon;
    yankee = 8;
    tangon = oscard[yankee];
    option = report.bind(entity)(tangon);
    golfie = option.createStyles;
    tangon = {};
    verify = {};
    verify['marginVertical'] = foxtra;
    verify['marginHorizontal'] = yankee;
    yankee = 9;
    yankee = oscard[yankee];
    yankee = romeon.bind(entity)(yankee);
    yankee = yankee.radii;
    yankee = yankee.md;
    verify['borderRadius'] = yankee;
    tangon['container'] = verify;
    verify = {};
    verify['paddingStart'] = offset;
    tangon['channelInfoContainer'] = verify;
    tangon = golfie.bind(option)(tangon);
    var _closure1_slot10 = tangon;
    tangon = 23;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/guild_sidebar/native/GuildActionRows.tsx';
    tangon = report.bind(oscard)(tangon);
    michal = function(argFoo) { // Original name: GuildRolesAndChannelsRow
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            michal = argFoo;
            entity = michal.guild;
            var _closure2_slot0 = entity;
            option = michal.selected;
            michal = _closure1_slot10;
            tangon = undefined;
            golfie = michal.bind(tangon)();
            zuuluu = _closure1_slot1;
            report = _closure1_slot2;
            michal = 10;
            michal = report[michal];
            michal = zuuluu.bind(tangon)(michal);
            yankee = michal.bind(tangon)(entity);
            kiloes = entity.id;
            var _closure2_slot1 = kiloes;
            romeon = _closure1_slot0;
            entity = 11;
            entity = report[entity];
            zuuluu = romeon.bind(tangon)(entity);
            michal = zuuluu.UNSAFE_useIsDismissibleContentDismissed;
            entity = 12;
            entity = report[entity];
            entity = romeon.bind(tangon)(entity);
            entity = entity.DismissibleContent;
            entity = entity.CHANNEL_BROWSER_NEW_BADGE_NUX;
            entity = michal.bind(zuuluu)(entity);
            michal = 13;
            zuuluu = report[michal];
            backup = romeon.bind(tangon)(zuuluu);
            foxtra = backup.useStateFromStores;
            zuuluu = _closure1_slot6;
            offset = new Array(1);
            offset[0] = zuuluu;
            zuuluu = function() {
                tangon = _closure1_slot6;
                zuuluu = tangon.hasUnread;
                michal = _closure2_slot0;
                michal = michal.id;
                entity = _closure1_slot8;
                entity = entity.GUILD_ONBOARDING_QUESTION;
                entity = zuuluu.bind(tangon)(michal, entity);
                return entity;
            };
            zuuluu = foxtra.bind(backup)(offset, zuuluu);
            michal = report[michal];
            backup = romeon.bind(tangon)(michal);
            foxtra = backup.useStateFromStores;
            michal = _closure1_slot5;
            offset = new Array(1);
            offset[0] = michal;
            michal = function() {
                tangon = _closure1_slot5;
                zuuluu = tangon.getNewChannelIds;
                michal = _closure2_slot0;
                michal = michal.id;
                michal = zuuluu.bind(tangon)(michal);
                michal = michal.size;
                tangon = _closure1_slot0;
                zuuluu = _closure1_slot2;
                entity = 14;
                zuuluu = zuuluu[entity];
                entity = undefined;
                entity = tangon.bind(entity)(zuuluu);
                entity = entity.MAX_NEW_CHANNELS_TO_SHOW;
                entity = michal > entity;
                return entity;
            };
            michal = foxtra.bind(backup)(offset, michal);
            backup = _closure1_slot3;
            foxtra = backup.useCallback;
            offset = new Array(1);
            offset[0] = kiloes;
            oscard = function() {
                report = _closure1_slot1;
                zuuluu = _closure1_slot2;
                entity = 15;
                tangon = zuuluu[entity];
                entity = undefined;
                oscard = report.bind(entity)(tangon);
                report = oscard.pushLazy;
                golfie = _closure1_slot0;
                tangon = 17;
                tangon = zuuluu[tangon];
                golfie = golfie.bind(entity)(tangon);
                tangon = 16;
                tangon = zuuluu[tangon];
                zuuluu = zuuluu.paths;
                tangon = golfie.bind(entity)(tangon, zuuluu);
                zuuluu = {};
                golfie = _closure2_slot1;
                zuuluu['guildId'] = golfie;
                michal = _closure1_slot7;
                michal = report.bind(oscard)(tangon, zuuluu, michal);
                return entity;
            };
            offset = foxtra.bind(backup)(oscard, offset);
            oscard = 18;
            report = report[oscard];
            report = romeon.bind(tangon)(report);
            report = report.ChannelModes;
            romeon = report.DEFAULT;
            if(!option) { _fun00002_ip = 285; continue _fun00001 }
 256:
            foxtra = _closure1_slot0;
            report = _closure1_slot2;
            report = report[oscard];
            report = foxtra.bind(tangon)(report);
            report = report.ChannelModes;
            romeon = report.SELECTED;
 285:
            entity = !entity;
            if(entity) { _fun00002_ip = 294; continue _fun00001 }
 291:
            entity = zuuluu;
 294:
            if(entity) { _fun00002_ip = 300; continue _fun00001 }
 297:
            entity = michal;
 300:
            report = null;
            if(!entity) { _fun00002_ip = 369; continue _fun00001 }
 305:
            zuuluu = _closure1_slot9;
            michal = _closure1_slot4;
            entity = {};
            foxtra = golfie.channelInfoContainer;
            entity['style'] = foxtra;
            backup = _closure1_slot0;
            kiloes = _closure1_slot2;
            foxtra = 19;
            foxtra = kiloes[foxtra];
            foxtra = backup.bind(tangon)(foxtra);
            backup = foxtra.NewBadge;
            foxtra = {};
            foxtra = zuuluu.bind(tangon)(backup, foxtra);
            entity['children'] = foxtra;
            report = zuuluu.bind(tangon)(michal, entity);
 369:
            zuuluu = _closure1_slot9;
            michal = _closure1_slot1;
            entity = _closure1_slot2;
            entity = entity[oscard];
            michal = michal.bind(tangon)(entity);
            entity = {};
            entity['onPress'] = offset;
            golfie = golfie.container;
            entity['style'] = golfie;
            golfie = true;
            entity['accessible'] = golfie;
            offset = _closure1_slot0;
            golfie = _closure1_slot2;
            output = 20;
            foxtra = golfie[output];
            foxtra = offset.bind(tangon)(foxtra);
            backup = foxtra.intl;
            foxtra = backup.string;
            golfie = golfie[output];
            golfie = offset.bind(tangon)(golfie);
            offset = golfie.t;
            if(yankee) { _fun00002_ip = 472; continue _fun00001 }
 459:
            golfie = offset.et6wam;
            golfie = foxtra.bind(backup)(golfie);
            _fun00002_ip = 483; continue _fun00001;
 472:
            offset = offset.h9mGOD;
            golfie = foxtra.bind(backup)(offset);
 483:
            entity['accessibilityLabel'] = golfie;
            golfie = {};
            golfie['selected'] = option;
            entity['accessibilityState'] = golfie;
            entity['mode'] = romeon;
            offset = _closure1_slot9;
            option = _closure1_slot0;
            golfie = _closure1_slot2;
            golfie = golfie[oscard];
            golfie = option.bind(tangon)(golfie);
            option = golfie.BaseChannelName;
            golfie = {};
            sizing = _closure1_slot0;
            foxtra = _closure1_slot2;
            backup = foxtra[output];
            backup = sizing.bind(tangon)(backup);
            kiloes = backup.intl;
            backup = kiloes.string;
            foxtra = foxtra[output];
            foxtra = sizing.bind(tangon)(foxtra);
            foxtra = foxtra.t;
            if(yankee) { _fun00002_ip = 589; continue _fun00001 }
 576:
            yankee = foxtra.et6wam;
            yankee = backup.bind(kiloes)(yankee);
            _fun00002_ip = 600; continue _fun00001;
 589:
            foxtra = foxtra.h9mGOD;
            yankee = backup.bind(kiloes)(foxtra);
 600:
            golfie['name'] = yankee;
            golfie['mode'] = romeon;
            golfie = offset.bind(tangon)(option, golfie);
            entity['name'] = golfie;
            option = _closure1_slot9;
            offset = _closure1_slot0;
            yankee = _closure1_slot2;
            oscard = yankee[oscard];
            oscard = offset.bind(tangon)(oscard);
            golfie = oscard.BaseChannelIcon;
            oscard = {};
            oscard['mode'] = romeon;
            romeon = _closure1_slot1;
            verify = 21;
            verify = yankee[verify];
            verify = romeon.bind(tangon)(verify);
            oscard['source'] = verify;
            verify = 22;
            verify = yankee[verify];
            verify = offset.bind(tangon)(verify);
            verify = verify.ChannelListMagnifyingGlassIcon;
            oscard['IconComponent'] = verify;
            oscard = option.bind(tangon)(golfie, oscard);
            entity['icon'] = oscard;
            entity['channelInfo'] = report;
            entity = zuuluu.bind(tangon)(michal, entity);
            return entity;
        }
    };
    zuuluu['GuildRolesAndChannelsRow'] = michal;
    return entity;
})();