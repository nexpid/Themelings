// app/modules/guild_sidebar/native/PremiumGuildSubscriptionPromptTooltip.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    report = argBar;
    yankee = argBaz;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    var _closure1_slot1 = yankee;
    var _closure1_slot2 = oscard;
    entity = global;
    option = entity.Object;
    golfie = option.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(option)(zuuluu, entity, tangon);
    entity = 0;
    golfie = oscard[entity];
    tangon = argCor;
    entity = undefined;
    tangon = tangon.bind(entity)(golfie);
    var _closure1_slot3 = tangon;
    tangon = 1;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    option = tangon.StyleSheet;
    tangon = 2;
    tangon = oscard[tangon];
    tangon = yankee.bind(entity)(tangon);
    var _closure1_slot4 = tangon;
    tangon = 3;
    tangon = oscard[tangon];
    tangon = yankee.bind(entity)(tangon);
    var _closure1_slot5 = tangon;
    tangon = 4;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.jsx;
    var _closure1_slot6 = tangon;
    golfie = option.create;
    tangon = {};
    offset = 16;
    verify = {'marginTop': 8, 'marginLeft': 190, 'top': 2, 'position': 'relative', 'borderTopWidth': 0, 'borderRightWidth': 0, 'borderBottomWidth': 16, 'borderLeftWidth': 16};
    tangon['arrow'] = verify;
    verify = {};
    romeon = 173;
    verify['marginLeft'] = romeon;
    tangon['shortWidthArrow'] = verify;
    verify = {};
    verify['padding'] = offset;
    tangon['tooltip'] = verify;
    verify = {'position': 'absolute', 'width': 240, 'zIndex': 10, 'right': 8, 'top': 4294967286};
    tangon['tooltipContainer'] = verify;
    verify = {};
    offset = 200;
    verify['width'] = offset;
    tangon['shortWidthTooltipContainer'] = verify;
    verify = {};
    offset = 'center';
    verify['textAlign'] = offset;
    tangon['tooltipText'] = verify;
    verify = {'paddingVertical': 0, 'marginTop': 14, 'alignSelf': 'stretch'};
    offset = 5;
    romeon = oscard[offset];
    romeon = yankee.bind(entity)(romeon);
    romeon = romeon.unsafe_rawColors;
    romeon = romeon.PRIMARY_100;
    verify['backgroundColor'] = romeon;
    tangon['closeButton'] = verify;
    verify = {};
    offset = oscard[offset];
    offset = yankee.bind(entity)(offset);
    offset = offset.unsafe_rawColors;
    offset = offset.BRAND_500;
    verify['color'] = offset;
    tangon['closeButtonText'] = verify;
    tangon = golfie.bind(option)(tangon);
    var _closure1_slot7 = tangon;
    tangon = {};
    golfie = 'function PremiumGuildSubscriptionPromptTooltipTsx1(){const{scrollPosition}=this.__closure;return scrollPosition.get();}';
    tangon['code'] = golfie;
    var _closure1_slot8 = tangon;
    tangon = {};
    golfie = 'function PremiumGuildSubscriptionPromptTooltipTsx2(current,previous){const{bannerOffset,headerHeight,runOnJS,checkScrolling}=this.__closure;const newTranslateY=Math.max(bannerOffset-current,headerHeight/2);const oldTranslateY=Math.max(bannerOffset-(previous!==null&&previous!==void 0?previous:0),headerHeight/2);if(newTranslateY!==oldTranslateY){runOnJS(checkScrolling)();}}';
    tangon['code'] = golfie;
    var _closure1_slot9 = tangon;
    tangon = {};
    golfie = 'function PremiumGuildSubscriptionPromptTooltipTsx3(){const{bannerOffset,scrollPosition,headerHeight,withTiming,opacity,shouldLoop,withRepeat,withSequence,translateBounceOffset}=this.__closure;const translateY=Math.max(bannerOffset-scrollPosition.get(),headerHeight/2);return{opacity:withTiming(opacity.get(),{duration:500}),transform:[{translateY:!shouldLoop.get()?translateY:withRepeat(withSequence(withTiming(translateY,{duration:500}),withTiming(translateY+translateBounceOffset,{duration:500})),-1,true)}]};}';
    tangon['code'] = golfie;
    var _closure1_slot10 = tangon;
    tangon = {};
    golfie = 'function PremiumGuildSubscriptionPromptTooltipTsx4(){const{scrollPosition}=this.__closure;return scrollPosition.get();}';
    tangon['code'] = golfie;
    var _closure1_slot11 = tangon;
    tangon = {};
    golfie = 'function PremiumGuildSubscriptionPromptTooltipTsx5(current,previous){const{bannerOffset,bannerHeight,headerHeight,runOnJS,checkScrolling}=this.__closure;const newTranslateY=Math.max(current-bannerOffset,bannerHeight+headerHeight/2);const oldTranslateY=Math.max((previous!==null&&previous!==void 0?previous:0)-bannerOffset,bannerHeight+headerHeight/2);if(newTranslateY!==oldTranslateY){runOnJS(checkScrolling)();}}';
    tangon['code'] = golfie;
    var _closure1_slot12 = tangon;
    tangon = {};
    golfie = 'function PremiumGuildSubscriptionPromptTooltipTsx6(){const{scrollPosition,bannerHeight,headerHeight,withTiming,opacity,shouldLoop,withRepeat,withSequence,translateBounceOffset}=this.__closure;let sp=scrollPosition.get();if(sp<=bannerHeight){sp=bannerHeight+headerHeight/2;}else{sp=sp+headerHeight/2;}const translateY=sp;return{opacity:withTiming(opacity.get(),{duration:500}),transform:[{translateY:!shouldLoop.get()?translateY:withRepeat(withSequence(withTiming(translateY,{duration:500}),withTiming(translateY+translateBounceOffset,{duration:500})),-1,true)}]};}';
    tangon['code'] = golfie;
    var _closure1_slot13 = tangon;
    tangon = 12;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/guild_sidebar/native/PremiumGuildSubscriptionPromptTooltip.tsx';
    tangon = report.bind(oscard)(tangon);
    tangon = function(argFoo) { // Original name: PremiumGuildSubscriptionPromptTooltip
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            entity = argFoo;
            result = entity.bannerHeight;
            var _closure2_slot0 = result;
            output = entity.headerHeight;
            var _closure2_slot1 = output;
            echoed = entity.scrollPosition;
            var _closure2_slot2 = echoed;
            kiloes = entity.onClosePress;
            tangon = undefined;
            var _closure2_slot5 = tangon;
            var _closure2_slot6 = tangon;
            var _closure2_slot7 = tangon;
            var _closure2_slot8 = tangon;
            zuuluu = -result;
            entity = 2;
            entity = output / entity;
            ctrled = zuuluu - entity;
            var _closure2_slot3 = ctrled;
            golfie = _closure1_slot0;
            option = _closure1_slot2;
            report = 6;
            entity = option[report];
            oscard = golfie.bind(tangon)(entity);
            zuuluu = oscard.useSharedValue;
            entity = 0;
            offset = zuuluu.bind(oscard)(entity);
            var _closure2_slot4 = offset;
            oscard = 7;
            zuuluu = option[oscard];
            romeon = golfie.bind(tangon)(zuuluu);
            yankee = romeon.useStateFromStores;
            zuuluu = _closure1_slot5;
            verify = new Array(1);
            verify[0] = zuuluu;
            zuuluu = function() {
                michal = _closure1_slot5;
                entity = michal.getWidth;
                entity = entity.bind(michal)();
                return entity;
            };
            zuuluu = yankee.bind(romeon)(verify, zuuluu);
            oscard = option[oscard];
            verify = golfie.bind(tangon)(oscard);
            option = verify.useStateFromStores;
            oscard = _closure1_slot4;
            golfie = new Array(1);
            golfie[0] = oscard;
            oscard = function() {
                entity = _closure1_slot4;
                entity = entity.useReducedMotion;
                return entity;
            };
            oscard = option.bind(verify)(golfie, oscard);
            romeon = 4;
            if(!oscard) { _fun00002_ip = 205; continue _fun00001 }
 203:
            romeon = 0;
 205:
            _closure2_slot5 = romeon;
            sizing = _closure1_slot0;
            entity = _closure1_slot2;
            oscard = entity[report];
            option = sizing.bind(tangon)(oscard);
            golfie = option.useSharedValue;
            oscard = false;
            foxtra = golfie.bind(option)(oscard);
            _closure2_slot6 = foxtra;
            verify = _closure1_slot3;
            golfie = verify.useRef;
            oscard = -1;
            oscard = golfie.bind(verify)(oscard);
            _closure2_slot7 = oscard;
            option = verify.useCallback;
            golfie = new Array(2);
            golfie[0] = oscard;
            golfie[1] = foxtra;
            oscard = function() {
                zuuluu = global;
                report = zuuluu.clearTimeout;
                entity = _closure2_slot7;
                tangon = entity.current;
                entity = undefined;
                tangon = report.bind(entity)(tangon);
                tangon = _closure2_slot7;
                oscard = zuuluu.setTimeout;
                report = function() {
                    zuuluu = _closure2_slot6;
                    michal = zuuluu.set;
                    entity = true;
                    entity = michal.bind(zuuluu)(entity);
                    entity = undefined;
                    return entity;
                };
                zuuluu = 100;
                zuuluu = oscard.bind(entity)(report, zuuluu);
                tangon['current'] = zuuluu;
                tangon = _closure2_slot6;
                zuuluu = tangon.set;
                michal = false;
                michal = zuuluu.bind(tangon)(michal);
                return entity;
            };
            source = option.bind(verify)(oscard, golfie);
            _closure2_slot8 = source;
            oscard = entity[report];
            yankee = sizing.bind(tangon)(oscard);
            option = yankee.useAnimatedReaction;
            golfie = function() { // Original name: _
                michal = _closure2_slot2;
                entity = michal.get;
                entity = entity.bind(michal)();
                return entity;
            };
            oscard = {};
            oscard['scrollPosition'] = echoed;
            golfie['__closure'] = oscard;
            oscard = 17178753567879.0;
            golfie['__workletHash'] = oscard;
            oscard = _closure1_slot11;
            golfie['__initData'] = oscard;
            oscard = function(argFoo, argBar) { // Original name: T
                _fun00003: for(var _fun00004_ip = 0; ; ) switch(_fun00004_ip) {
 0:
                    michal = argBar;
                    tangon = global;
                    golfie = tangon.Math;
                    oscard = golfie.max;
                    report = _closure2_slot3;
                    zuuluu = argFoo;
                    report = zuuluu - report;
                    verify = _closure2_slot0;
                    zuuluu = _closure2_slot1;
                    option = 2;
                    zuuluu = zuuluu / option;
                    zuuluu = verify + zuuluu;
                    zuuluu = oscard.bind(golfie)(report, zuuluu);
                    oscard = tangon.Math;
                    report = oscard.max;
                    tangon = null;
                    golfie = tangon != michal;
                    tangon = 0;
                    if(!golfie) { _fun00004_ip = 80; continue _fun00003 }
 77:
                    tangon = michal;
 80:
                    michal = _closure2_slot3;
                    tangon = tangon - michal;
                    golfie = _closure2_slot0;
                    michal = _closure2_slot1;
                    michal = michal / option;
                    michal = golfie + michal;
                    michal = report.bind(oscard)(tangon, michal);
                    if(!(zuuluu !== michal)) { _fun00004_ip = 157; continue _fun00003 }
 114:
                    tangon = _closure1_slot0;
                    zuuluu = _closure1_slot2;
                    michal = 6;
                    zuuluu = zuuluu[michal];
                    michal = undefined;
                    tangon = tangon.bind(michal)(zuuluu);
                    zuuluu = tangon.runOnJS;
                    entity = _closure2_slot8;
                    entity = zuuluu.bind(tangon)(entity);
                    entity = entity.bind(michal)();
 157:
                    entity = undefined;
                    return entity;
                }
            };
            update = {};
            update['bannerOffset'] = ctrled;
            update['bannerHeight'] = result;
            update['headerHeight'] = output;
            ctrled = entity[report];
            ctrled = sizing.bind(tangon)(ctrled);
            ctrled = ctrled.runOnJS;
            update['runOnJS'] = ctrled;
            update['checkScrolling'] = source;
            oscard['__closure'] = update;
            update = 12896852940649.0;
            oscard['__workletHash'] = update;
            update = _closure1_slot12;
            oscard['__initData'] = update;
            oscard = option.bind(yankee)(golfie, oscard);
            oscard = entity[report];
            option = sizing.bind(tangon)(oscard);
            golfie = option.useAnimatedStyle;
            oscard = function() { // Original name: R
                _fun00005: for(var _fun00006_ip = 0; ; ) switch(_fun00006_ip) {
 0:
                    michal = _closure2_slot2;
                    entity = michal.get;
                    michal = entity.bind(michal)();
                    entity = _closure2_slot0;
                    if(!(!(michal <= entity))) { _fun00006_ip = 41; continue _fun00005 }
 24:
                    zuuluu = _closure2_slot1;
                    entity = 2;
                    entity = zuuluu / entity;
                    offset = michal + entity;
                    _fun00006_ip = 60; continue _fun00005;
 41:
                    michal = _closure2_slot0;
                    zuuluu = _closure2_slot1;
                    entity = 2;
                    entity = zuuluu / entity;
                    offset = michal + entity;
 60:
                    entity = {};
                    zuuluu = _closure1_slot0;
                    michal = _closure1_slot2;
                    kiloes = 8;
                    michal = michal[kiloes];
                    backup = undefined;
                    golfie = zuuluu.bind(backup)(michal);
                    oscard = golfie.withTiming;
                    zuuluu = _closure2_slot4;
                    michal = zuuluu.get;
                    zuuluu = michal.bind(zuuluu)();
                    michal = {};
                    foxtra = 500;
                    michal['duration'] = foxtra;
                    michal = oscard.bind(golfie)(zuuluu, michal);
                    entity['opacity'] = michal;
                    zuuluu = {};
                    oscard = _closure2_slot6;
                    michal = oscard.get;
                    oscard = michal.bind(oscard)();
                    michal = offset;
                    if(!oscard) { _fun00006_ip = 273; continue _fun00005 }
 151:
                    romeon = _closure1_slot0;
                    yankee = _closure1_slot2;
                    report = 6;
                    oscard = yankee[report];
                    option = romeon.bind(backup)(oscard);
                    golfie = option.withRepeat;
                    report = yankee[report];
                    verify = romeon.bind(backup)(report);
                    oscard = verify.withSequence;
                    report = yankee[kiloes];
                    output = romeon.bind(backup)(report);
                    sizing = output.withTiming;
                    report = {};
                    report['duration'] = foxtra;
                    report = sizing.bind(output)(offset, report);
                    yankee = yankee[kiloes];
                    romeon = romeon.bind(backup)(yankee);
                    yankee = romeon.withTiming;
                    tangon = _closure2_slot5;
                    offset = offset + tangon;
                    tangon = {};
                    tangon['duration'] = foxtra;
                    tangon = yankee.bind(romeon)(offset, tangon);
                    oscard = oscard.bind(verify)(report, tangon);
                    report = -1;
                    tangon = true;
                    michal = golfie.bind(option)(oscard, report, tangon);
 273:
                    zuuluu['translateY'] = michal;
                    michal = new Array(1);
                    michal[0] = zuuluu;
                    entity['transform'] = michal;
                    return entity;
                }
            };
            yankee = {};
            yankee['scrollPosition'] = echoed;
            yankee['bannerHeight'] = result;
            yankee['headerHeight'] = output;
            output = 8;
            output = entity[output];
            output = sizing.bind(tangon)(output);
            output = output.withTiming;
            yankee['withTiming'] = output;
            yankee['opacity'] = offset;
            yankee['shouldLoop'] = foxtra;
            foxtra = entity[report];
            foxtra = sizing.bind(tangon)(foxtra);
            foxtra = foxtra.withRepeat;
            yankee['withRepeat'] = foxtra;
            foxtra = entity[report];
            foxtra = sizing.bind(tangon)(foxtra);
            foxtra = foxtra.withSequence;
            yankee['withSequence'] = foxtra;
            yankee['translateBounceOffset'] = romeon;
            oscard['__closure'] = yankee;
            yankee = 17167097810223.0;
            oscard['__workletHash'] = yankee;
            yankee = _closure1_slot13;
            oscard['__initData'] = yankee;
            oscard = golfie.bind(option)(oscard);
            option = verify.useEffect;
            golfie = new Array(1);
            golfie[0] = offset;
            michal = function() {
                entity = global;
                tangon = entity.setTimeout;
                entity = undefined;
                zuuluu = function() {
                    zuuluu = _closure2_slot4;
                    michal = zuuluu.set;
                    entity = 1;
                    entity = michal.bind(zuuluu)(entity);
                    entity = undefined;
                    return entity;
                };
                michal = 500;
                michal = tangon.bind(entity)(zuuluu, michal);
                return entity;
            };
            michal = option.bind(verify)(michal, golfie);
            michal = 330;
            offset = zuuluu <= michal;
            zuuluu = _closure1_slot6;
            michal = _closure1_slot1;
            entity = entity[report];
            entity = michal.bind(tangon)(entity);
            michal = entity.View;
            entity = {};
            report = _closure1_slot7;
            golfie = report.tooltipContainer;
            report = new Array(3);
            report[0] = golfie;
            golfie = null;
            if(!offset) { _fun00002_ip = 690; continue _fun00001 }
 680:
            option = _closure1_slot7;
            golfie = option.shortWidthTooltipContainer;
 690:
            report[1] = golfie;
            report[2] = oscard;
            entity['style'] = report;
            golfie = _closure1_slot6;
            oscard = _closure1_slot1;
            option = _closure1_slot2;
            report = 9;
            report = option[report];
            oscard = oscard.bind(tangon)(report);
            report = {};
            option = _closure1_slot7;
            yankee = option.tooltip;
            report['containerStyle'] = yankee;
            yankee = option.tooltipText;
            report['labelStyle'] = yankee;
            yankee = option.arrow;
            option = new Array(2);
            option[0] = yankee;
            verify = null;
            if(!offset) { _fun00002_ip = 783; continue _fun00001 }
 773:
            offset = _closure1_slot7;
            verify = offset.shortWidthArrow;
 783:
            option[1] = verify;
            report['arrowStyle'] = option;
            echoed = _closure1_slot0;
            foxtra = _closure1_slot2;
            sizing = 10;
            option = foxtra[sizing];
            option = echoed.bind(tangon)(option);
            offset = option.intl;
            verify = offset.string;
            option = foxtra[sizing];
            option = echoed.bind(tangon)(option);
            option = option.t;
            option = option.UyHD4O;
            option = verify.bind(offset)(option);
            report['label'] = option;
            option = foxtra[sizing];
            option = echoed.bind(tangon)(option);
            offset = option.intl;
            verify = offset.string;
            option = foxtra[sizing];
            option = echoed.bind(tangon)(option);
            option = option.t;
            option = option.Q3qa4+;
            option = verify.bind(offset)(option);
            report['title'] = option;
            offset = _closure1_slot6;
            romeon = _closure1_slot1;
            yankee = 11;
            option = foxtra[yankee];
            verify = romeon.bind(tangon)(option);
            option = {};
            output = foxtra[sizing];
            output = echoed.bind(tangon)(output);
            result = output.intl;
            output = result.string;
            sizing = foxtra[sizing];
            sizing = echoed.bind(tangon)(sizing);
            sizing = sizing.t;
            sizing = sizing.U9PrMz;
            sizing = output.bind(result)(sizing);
            option['text'] = sizing;
            option['onPress'] = kiloes;
            kiloes = foxtra[yankee];
            kiloes = romeon.bind(tangon)(kiloes);
            kiloes = kiloes.Colors;
            kiloes = kiloes.PRIMARY;
            option['color'] = kiloes;
            backup = _closure1_slot7;
            kiloes = backup.closeButtonText;
            option['textStyle'] = kiloes;
            backup = backup.closeButton;
            option['style'] = backup;
            yankee = foxtra[yankee];
            yankee = romeon.bind(tangon)(yankee);
            yankee = yankee.Sizes;
            yankee = yankee.SMALL;
            option['size'] = yankee;
            yankee = true;
            option['shrink'] = yankee;
            option = offset.bind(tangon)(verify, option);
            report['children'] = option;
            report = golfie.bind(tangon)(oscard, report);
            entity['children'] = report;
            entity = zuuluu.bind(tangon)(michal, entity);
            return entity;
        }
    };
    zuuluu['default'] = tangon;
    michal = function(argFoo) { // Original name: PremiumGuildSubscriptionPromptTooltipFlashList
        _fun00007: for(var _fun00008_ip = 0; ; ) switch(_fun00008_ip) {
 0:
            entity = argFoo;
            zuuluu = entity.bannerHeight;
            output = entity.headerHeight;
            var _closure2_slot0 = output;
            result = entity.scrollPosition;
            var _closure2_slot1 = result;
            kiloes = entity.onClosePress;
            tangon = undefined;
            var _closure2_slot4 = tangon;
            var _closure2_slot5 = tangon;
            var _closure2_slot6 = tangon;
            var _closure2_slot7 = tangon;
            entity = 2;
            entity = output / entity;
            echoed = entity + zuuluu;
            var _closure2_slot2 = echoed;
            golfie = _closure1_slot0;
            option = _closure1_slot2;
            report = 6;
            entity = option[report];
            oscard = golfie.bind(tangon)(entity);
            zuuluu = oscard.useSharedValue;
            entity = 0;
            offset = zuuluu.bind(oscard)(entity);
            var _closure2_slot3 = offset;
            oscard = 7;
            zuuluu = option[oscard];
            romeon = golfie.bind(tangon)(zuuluu);
            yankee = romeon.useStateFromStores;
            zuuluu = _closure1_slot5;
            verify = new Array(1);
            verify[0] = zuuluu;
            zuuluu = function() {
                michal = _closure1_slot5;
                entity = michal.getWidth;
                entity = entity.bind(michal)();
                return entity;
            };
            zuuluu = yankee.bind(romeon)(verify, zuuluu);
            oscard = option[oscard];
            verify = golfie.bind(tangon)(oscard);
            option = verify.useStateFromStores;
            oscard = _closure1_slot4;
            golfie = new Array(1);
            golfie[0] = oscard;
            oscard = function() {
                entity = _closure1_slot4;
                entity = entity.useReducedMotion;
                return entity;
            };
            oscard = option.bind(verify)(golfie, oscard);
            romeon = 4;
            if(!oscard) { _fun00008_ip = 198; continue _fun00007 }
 196:
            romeon = 0;
 198:
            _closure2_slot4 = romeon;
            sizing = _closure1_slot0;
            entity = _closure1_slot2;
            oscard = entity[report];
            option = sizing.bind(tangon)(oscard);
            golfie = option.useSharedValue;
            oscard = false;
            foxtra = golfie.bind(option)(oscard);
            _closure2_slot5 = foxtra;
            verify = _closure1_slot3;
            golfie = verify.useRef;
            oscard = -1;
            oscard = golfie.bind(verify)(oscard);
            _closure2_slot6 = oscard;
            option = verify.useCallback;
            golfie = new Array(2);
            golfie[0] = oscard;
            golfie[1] = foxtra;
            oscard = function() {
                zuuluu = global;
                report = zuuluu.clearTimeout;
                entity = _closure2_slot6;
                tangon = entity.current;
                entity = undefined;
                tangon = report.bind(entity)(tangon);
                tangon = _closure2_slot6;
                oscard = zuuluu.setTimeout;
                report = function() {
                    zuuluu = _closure2_slot5;
                    michal = zuuluu.set;
                    entity = true;
                    entity = michal.bind(zuuluu)(entity);
                    entity = undefined;
                    return entity;
                };
                zuuluu = 100;
                zuuluu = oscard.bind(entity)(report, zuuluu);
                tangon['current'] = zuuluu;
                tangon = _closure2_slot5;
                zuuluu = tangon.set;
                michal = false;
                michal = zuuluu.bind(tangon)(michal);
                return entity;
            };
            source = option.bind(verify)(oscard, golfie);
            _closure2_slot7 = source;
            oscard = entity[report];
            yankee = sizing.bind(tangon)(oscard);
            option = yankee.useAnimatedReaction;
            golfie = function() { // Original name: _
                michal = _closure2_slot1;
                entity = michal.get;
                entity = entity.bind(michal)();
                return entity;
            };
            oscard = {};
            oscard['scrollPosition'] = result;
            golfie['__closure'] = oscard;
            oscard = 2831463390050.0;
            golfie['__workletHash'] = oscard;
            oscard = _closure1_slot8;
            golfie['__initData'] = oscard;
            oscard = function(argFoo, argBar) { // Original name: T
                _fun00009: for(var _fun00010_ip = 0; ; ) switch(_fun00010_ip) {
 0:
                    option = argBar;
                    michal = global;
                    verify = michal.Math;
                    oscard = verify.max;
                    tangon = _closure2_slot2;
                    zuuluu = argFoo;
                    report = tangon - zuuluu;
                    zuuluu = _closure2_slot0;
                    golfie = 2;
                    zuuluu = zuuluu / golfie;
                    zuuluu = oscard.bind(verify)(report, zuuluu);
                    oscard = michal.Math;
                    report = oscard.max;
                    michal = null;
                    verify = michal != option;
                    michal = 0;
                    if(!verify) { _fun00010_ip = 72; continue _fun00009 }
 69:
                    michal = option;
 72:
                    tangon = tangon - michal;
                    michal = _closure2_slot0;
                    michal = michal / golfie;
                    michal = report.bind(oscard)(tangon, michal);
                    if(!(zuuluu !== michal)) { _fun00010_ip = 137; continue _fun00009 }
 94:
                    tangon = _closure1_slot0;
                    zuuluu = _closure1_slot2;
                    michal = 6;
                    zuuluu = zuuluu[michal];
                    michal = undefined;
                    tangon = tangon.bind(michal)(zuuluu);
                    zuuluu = tangon.runOnJS;
                    entity = _closure2_slot7;
                    entity = zuuluu.bind(tangon)(entity);
                    entity = entity.bind(michal)();
 137:
                    entity = undefined;
                    return entity;
                }
            };
            update = {};
            update['bannerOffset'] = echoed;
            update['headerHeight'] = output;
            ctrled = entity[report];
            ctrled = sizing.bind(tangon)(ctrled);
            ctrled = ctrled.runOnJS;
            update['runOnJS'] = ctrled;
            update['checkScrolling'] = source;
            oscard['__closure'] = update;
            update = 10643233591625.0;
            oscard['__workletHash'] = update;
            update = _closure1_slot9;
            oscard['__initData'] = update;
            oscard = option.bind(yankee)(golfie, oscard);
            oscard = entity[report];
            option = sizing.bind(tangon)(oscard);
            golfie = option.useAnimatedStyle;
            oscard = function() { // Original name: R
                _fun00011: for(var _fun00012_ip = 0; ; ) switch(_fun00012_ip) {
 0:
                    entity = global;
                    report = entity.Math;
                    zuuluu = report.max;
                    michal = _closure2_slot2;
                    oscard = _closure2_slot1;
                    entity = oscard.get;
                    entity = entity.bind(oscard)();
                    michal = michal - entity;
                    oscard = _closure2_slot0;
                    entity = 2;
                    entity = oscard / entity;
                    offset = zuuluu.bind(report)(michal, entity);
                    entity = {};
                    zuuluu = _closure1_slot0;
                    michal = _closure1_slot2;
                    kiloes = 8;
                    michal = michal[kiloes];
                    backup = undefined;
                    golfie = zuuluu.bind(backup)(michal);
                    oscard = golfie.withTiming;
                    zuuluu = _closure2_slot3;
                    michal = zuuluu.get;
                    zuuluu = michal.bind(zuuluu)();
                    michal = {};
                    foxtra = 500;
                    michal['duration'] = foxtra;
                    michal = oscard.bind(golfie)(zuuluu, michal);
                    entity['opacity'] = michal;
                    zuuluu = {};
                    oscard = _closure2_slot5;
                    michal = oscard.get;
                    oscard = michal.bind(oscard)();
                    michal = offset;
                    if(!oscard) { _fun00012_ip = 267; continue _fun00011 }
 145:
                    romeon = _closure1_slot0;
                    yankee = _closure1_slot2;
                    report = 6;
                    oscard = yankee[report];
                    option = romeon.bind(backup)(oscard);
                    golfie = option.withRepeat;
                    report = yankee[report];
                    verify = romeon.bind(backup)(report);
                    oscard = verify.withSequence;
                    report = yankee[kiloes];
                    output = romeon.bind(backup)(report);
                    sizing = output.withTiming;
                    report = {};
                    report['duration'] = foxtra;
                    report = sizing.bind(output)(offset, report);
                    yankee = yankee[kiloes];
                    romeon = romeon.bind(backup)(yankee);
                    yankee = romeon.withTiming;
                    tangon = _closure2_slot4;
                    offset = offset + tangon;
                    tangon = {};
                    tangon['duration'] = foxtra;
                    tangon = yankee.bind(romeon)(offset, tangon);
                    oscard = oscard.bind(verify)(report, tangon);
                    report = -1;
                    tangon = true;
                    michal = golfie.bind(option)(oscard, report, tangon);
 267:
                    zuuluu['translateY'] = michal;
                    michal = new Array(1);
                    michal[0] = zuuluu;
                    entity['transform'] = michal;
                    return entity;
                }
            };
            yankee = {};
            yankee['bannerOffset'] = echoed;
            yankee['scrollPosition'] = result;
            yankee['headerHeight'] = output;
            output = 8;
            output = entity[output];
            output = sizing.bind(tangon)(output);
            output = output.withTiming;
            yankee['withTiming'] = output;
            yankee['opacity'] = offset;
            yankee['shouldLoop'] = foxtra;
            foxtra = entity[report];
            foxtra = sizing.bind(tangon)(foxtra);
            foxtra = foxtra.withRepeat;
            yankee['withRepeat'] = foxtra;
            foxtra = entity[report];
            foxtra = sizing.bind(tangon)(foxtra);
            foxtra = foxtra.withSequence;
            yankee['withSequence'] = foxtra;
            yankee['translateBounceOffset'] = romeon;
            oscard['__closure'] = yankee;
            yankee = 167669905565.0;
            oscard['__workletHash'] = yankee;
            yankee = _closure1_slot10;
            oscard['__initData'] = yankee;
            oscard = golfie.bind(option)(oscard);
            option = verify.useEffect;
            golfie = new Array(1);
            golfie[0] = offset;
            michal = function() {
                entity = global;
                tangon = entity.setTimeout;
                entity = undefined;
                zuuluu = function() {
                    zuuluu = _closure2_slot3;
                    michal = zuuluu.set;
                    entity = 1;
                    entity = michal.bind(zuuluu)(entity);
                    entity = undefined;
                    return entity;
                };
                michal = 500;
                michal = tangon.bind(entity)(zuuluu, michal);
                return entity;
            };
            michal = option.bind(verify)(michal, golfie);
            michal = 330;
            offset = zuuluu <= michal;
            zuuluu = _closure1_slot6;
            michal = _closure1_slot1;
            entity = entity[report];
            entity = michal.bind(tangon)(entity);
            michal = entity.View;
            entity = {};
            report = _closure1_slot7;
            golfie = report.tooltipContainer;
            report = new Array(3);
            report[0] = golfie;
            golfie = null;
            if(!offset) { _fun00008_ip = 678; continue _fun00007 }
 668:
            option = _closure1_slot7;
            golfie = option.shortWidthTooltipContainer;
 678:
            report[1] = golfie;
            report[2] = oscard;
            entity['style'] = report;
            golfie = _closure1_slot6;
            oscard = _closure1_slot1;
            option = _closure1_slot2;
            report = 9;
            report = option[report];
            oscard = oscard.bind(tangon)(report);
            report = {};
            option = _closure1_slot7;
            yankee = option.tooltip;
            report['containerStyle'] = yankee;
            yankee = option.tooltipText;
            report['labelStyle'] = yankee;
            yankee = option.arrow;
            option = new Array(2);
            option[0] = yankee;
            verify = null;
            if(!offset) { _fun00008_ip = 771; continue _fun00007 }
 761:
            offset = _closure1_slot7;
            verify = offset.shortWidthArrow;
 771:
            option[1] = verify;
            report['arrowStyle'] = option;
            echoed = _closure1_slot0;
            foxtra = _closure1_slot2;
            sizing = 10;
            option = foxtra[sizing];
            option = echoed.bind(tangon)(option);
            offset = option.intl;
            verify = offset.string;
            option = foxtra[sizing];
            option = echoed.bind(tangon)(option);
            option = option.t;
            option = option.UyHD4O;
            option = verify.bind(offset)(option);
            report['label'] = option;
            option = foxtra[sizing];
            option = echoed.bind(tangon)(option);
            offset = option.intl;
            verify = offset.string;
            option = foxtra[sizing];
            option = echoed.bind(tangon)(option);
            option = option.t;
            option = option.Q3qa4+;
            option = verify.bind(offset)(option);
            report['title'] = option;
            offset = _closure1_slot6;
            romeon = _closure1_slot1;
            yankee = 11;
            option = foxtra[yankee];
            verify = romeon.bind(tangon)(option);
            option = {};
            output = foxtra[sizing];
            output = echoed.bind(tangon)(output);
            result = output.intl;
            output = result.string;
            sizing = foxtra[sizing];
            sizing = echoed.bind(tangon)(sizing);
            sizing = sizing.t;
            sizing = sizing.U9PrMz;
            sizing = output.bind(result)(sizing);
            option['text'] = sizing;
            option['onPress'] = kiloes;
            kiloes = foxtra[yankee];
            kiloes = romeon.bind(tangon)(kiloes);
            kiloes = kiloes.Colors;
            kiloes = kiloes.PRIMARY;
            option['color'] = kiloes;
            backup = _closure1_slot7;
            kiloes = backup.closeButtonText;
            option['textStyle'] = kiloes;
            backup = backup.closeButton;
            option['style'] = backup;
            yankee = foxtra[yankee];
            yankee = romeon.bind(tangon)(yankee);
            yankee = yankee.Sizes;
            yankee = yankee.SMALL;
            option['size'] = yankee;
            yankee = true;
            option['shrink'] = yankee;
            option = offset.bind(tangon)(verify, option);
            report['children'] = option;
            report = golfie.bind(tangon)(oscard, report);
            entity['children'] = report;
            entity = zuuluu.bind(tangon)(michal, entity);
            return entity;
        }
    };
    zuuluu['PremiumGuildSubscriptionPromptTooltipFlashList'] = michal;
    return entity;
})();