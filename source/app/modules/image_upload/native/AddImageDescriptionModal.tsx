// app/modules/image_upload/native/AddImageDescriptionModal.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    report = argBar;
    yankee = argBaz;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    var _closure1_slot1 = yankee;
    var _closure1_slot2 = oscard;
    entity = function(argFoo) { // Original name: AddDescription
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            michal = argFoo;
            update = michal.source;
            result = michal.channelId;
            var _closure2_slot0 = result;
            backup = michal.id;
            var _closure2_slot1 = backup;
            tangon = undefined;
            var _closure2_slot3 = tangon;
            var _closure2_slot4 = tangon;
            var _closure2_slot5 = tangon;
            michal = _closure1_slot12;
            offset = michal.bind(tangon)();
            zuuluu = _closure1_slot0;
            report = _closure1_slot2;
            michal = 8;
            michal = report[michal];
            option = zuuluu.bind(tangon)(michal);
            golfie = option.useStateFromStores;
            michal = _closure1_slot9;
            zuuluu = new Array(1);
            zuuluu[0] = michal;
            michal = function() {
                report = _closure1_slot9;
                tangon = report.getUpload;
                zuuluu = _closure2_slot0;
                michal = _closure2_slot1;
                entity = _closure1_slot8;
                entity = entity.ChannelMessage;
                entity = tangon.bind(report)(zuuluu, michal, entity);
                return entity;
            };
            foxtra = golfie.bind(option)(zuuluu, michal);
            var _closure2_slot2 = foxtra;
            zuuluu = _closure1_slot1;
            michal = 9;
            michal = report[michal];
            zuuluu = zuuluu.bind(tangon)(michal);
            michal = {};
            verify = true;
            michal['ignoreKeyboard'] = verify;
            vacuum = zuuluu.bind(tangon)(michal);
            golfie = update.width;
            report = update.height;
            michal = null;
            option = michal != golfie;
            zuuluu = 1;
            config = zuuluu;
            if(!option) { _fun00002_ip = 190; continue _fun00001 }
 160:
            option = michal != report;
            config = zuuluu;
            if(!option) { _fun00002_ip = 190; continue _fun00001 }
 170:
            option = 0;
            config = zuuluu;
            if(!(option !== golfie)) { _fun00002_ip = 190; continue _fun00001 }
 179:
            config = zuuluu;
            if(!(option !== report)) { _fun00002_ip = 190; continue _fun00001 }
 186:
            config = golfie / report;
 190:
            golfie = _closure1_slot4;
            report = golfie.useState;
            yankee = michal == foxtra;
            option = undefined;
            if(yankee) { _fun00002_ip = 213; continue _fun00001 }
 208:
            option = foxtra.description;
 213:
            yankee = michal != option;
            michal = '';
            if(!yankee) { _fun00002_ip = 227; continue _fun00001 }
 224:
            michal = option;
 227:
            report = report.bind(golfie)(michal);
            michal = _closure1_slot3;
            sequen = 2;
            michal = michal.bind(tangon)(report, sequen);
            report = 0;
            romeon = michal[report];
            _closure2_slot3 = romeon;
            yankee = michal[zuuluu];
            zuuluu = _closure1_slot4;
            michal = zuuluu.useRef;
            michal = michal.bind(zuuluu)(romeon);
            _closure2_slot4 = michal;
            sizing = _closure1_slot0;
            output = _closure1_slot2;
            michal = 10;
            michal = output[michal];
            zuuluu = sizing.bind(tangon)(michal);
            michal = zuuluu.useNavigation;
            option = michal.bind(zuuluu)();
            _closure2_slot5 = option;
            kiloes = _closure1_slot1;
            michal = 11;
            michal = output[michal];
            zuuluu = kiloes.bind(tangon)(michal);
            michal = {};
            michal['includeKeyboardHeightIOS'] = verify;
            michal = zuuluu.bind(tangon)(michal);
            golfie = michal.insets;
            echoed = _closure1_slot4;
            report = echoed.useEffect;
            zuuluu = new Array(1);
            zuuluu[0] = romeon;
            michal = function() {
                michal = _closure2_slot4;
                entity = _closure2_slot3;
                michal['current'] = entity;
                entity = undefined;
                return entity;
            };
            michal = report.bind(echoed)(michal, zuuluu);
            report = _closure1_slot4;
            zuuluu = report.useEffect;
            michal = new Array(4);
            michal[0] = result;
            michal[1] = backup;
            michal[2] = foxtra;
            michal[3] = option;
            entity = function() {
                zuuluu = _closure2_slot5;
                michal = zuuluu.setOptions;
                entity = {};
                tangon = function(argFoo) { // Original name: headerRight
                    golfie = _closure1_slot0;
                    option = _closure1_slot2;
                    entity = 12;
                    entity = option[entity];
                    zuuluu = undefined;
                    report = golfie.bind(zuuluu)(entity);
                    tangon = report.getRenderHeaderTextButton;
                    entity = 13;
                    michal = option[entity];
                    michal = golfie.bind(zuuluu)(michal);
                    oscard = michal.intl;
                    michal = oscard.string;
                    entity = option[entity];
                    entity = golfie.bind(zuuluu)(entity);
                    entity = entity.t;
                    entity = entity.R3BPHx;
                    michal = michal.bind(oscard)(entity);
                    entity = function() {
                        zuuluu = _closure1_slot1;
                        tangon = _closure1_slot2;
                        entity = 14;
                        report = tangon[entity];
                        entity = undefined;
                        verify = zuuluu.bind(entity)(report);
                        option = verify.update;
                        golfie = _closure2_slot0;
                        oscard = _closure2_slot1;
                        michal = _closure1_slot8;
                        foxtra = michal.ChannelMessage;
                        michal = {};
                        backup = _closure2_slot2;
                        kiloes = michal;
                        yankee = copyDataProperties(kiloes, backup);
                        offset = _closure2_slot4;
                        yankee = offset.current;
                        offset = 'description';
                        michal[offset] = yankee;
                        sizing = verify;
                        kiloes = golfie;
                        backup = oscard;
                        romeon = michal;
                        michal = sizing[option](kiloes, backup, foxtra, romeon, yankee);
                        michal = 15;
                        michal = tangon[michal];
                        zuuluu = zuuluu.bind(entity)(michal);
                        michal = zuuluu.close;
                        michal = michal.bind(zuuluu)();
                        return entity;
                    };
                    michal = tangon.bind(report)(michal, entity);
                    entity = {};
                    verify = argFoo;
                    offset = entity;
                    tangon = copyDataProperties(offset, verify);
                    entity = michal.bind(zuuluu)(entity);
                    return entity;
                };
                entity['headerRight'] = tangon;
                entity = michal.bind(zuuluu)(entity);
                entity = undefined;
                return entity;
            };
            entity = zuuluu.bind(report)(entity, michal);
            zuuluu = _closure1_slot11;
            michal = _closure1_slot7;
            entity = {};
            report = offset.contentContainer;
            entity['style'] = report;
            report = {};
            backup = 7;
            option = output[backup];
            option = kiloes.bind(tangon)(option);
            option = option.spacing;
            option = option.PX_16;
            report['padding'] = option;
            option = golfie.bottom;
            golfie = output[backup];
            golfie = kiloes.bind(tangon)(golfie);
            golfie = golfie.spacing;
            golfie = golfie.PX_16;
            golfie = option + golfie;
            report['paddingBottom'] = golfie;
            entity['contentContainerStyle'] = report;
            option = _closure1_slot10;
            golfie = _closure1_slot5;
            report = {};
            foxtra = offset.imageContainer;
            report['style'] = foxtra;
            echoed = _closure1_slot10;
            result = _closure1_slot6;
            foxtra = {};
            ctrled = offset.image;
            source = new Array(2);
            source[0] = ctrled;
            ctrled = {};
            ctrled['aspectRatio'] = config;
            vacuum = vacuum.height;
            vacuum = vacuum / sequen;
            ctrled['maxHeight'] = vacuum;
            source[1] = ctrled;
            foxtra['style'] = source;
            foxtra['source'] = update;
            foxtra = echoed.bind(tangon)(result, foxtra);
            report['children'] = foxtra;
            golfie = option.bind(tangon)(golfie, report);
            report = new Array(2);
            report[0] = golfie;
            option = _closure1_slot10;
            oscard = 16;
            oscard = output[oscard];
            oscard = sizing.bind(tangon)(oscard);
            golfie = oscard.TextArea;
            oscard = {};
            foxtra = {};
            backup = output[backup];
            backup = kiloes.bind(tangon)(backup);
            backup = backup.spacing;
            backup = backup.PX_16;
            foxtra['paddingTop'] = backup;
            oscard['containerStyle'] = foxtra;
            foxtra = 13;
            backup = output[foxtra];
            backup = sizing.bind(tangon)(backup);
            result = backup.intl;
            kiloes = result.string;
            backup = output[foxtra];
            backup = sizing.bind(tangon)(backup);
            backup = backup.t;
            backup = backup.eOB2eX;
            backup = kiloes.bind(result)(backup);
            oscard['label'] = backup;
            backup = output[foxtra];
            backup = sizing.bind(tangon)(backup);
            kiloes = backup.intl;
            backup = kiloes.string;
            foxtra = output[foxtra];
            foxtra = sizing.bind(tangon)(foxtra);
            foxtra = foxtra.t;
            foxtra = foxtra.RNH1jo;
            foxtra = backup.bind(kiloes)(foxtra);
            oscard['placeholder'] = foxtra;
            oscard['value'] = romeon;
            oscard['onChange'] = yankee;
            offset = offset.placeholderText;
            offset = offset.color;
            oscard['placeholderTextColor'] = offset;
            offset = 1000;
            oscard['maxLength'] = offset;
            oscard['autoFocus'] = verify;
            oscard = option.bind(tangon)(golfie, oscard);
            report[1] = oscard;
            entity['children'] = report;
            entity = zuuluu.bind(tangon)(michal, entity);
            return entity;
        }
    };
    var _closure1_slot13 = entity;
    entity = global;
    option = entity.Object;
    golfie = option.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(option)(zuuluu, entity, tangon);
    entity = 0;
    tangon = oscard[entity];
    entity = undefined;
    tangon = yankee.bind(entity)(tangon);
    var _closure1_slot3 = tangon;
    tangon = 1;
    golfie = oscard[tangon];
    tangon = argCor;
    tangon = tangon.bind(entity)(golfie);
    var _closure1_slot4 = tangon;
    tangon = 2;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    golfie = tangon.View;
    var _closure1_slot5 = golfie;
    golfie = tangon.Image;
    var _closure1_slot6 = golfie;
    tangon = tangon.ScrollView;
    var _closure1_slot7 = tangon;
    tangon = 3;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.DraftType;
    var _closure1_slot8 = tangon;
    tangon = 4;
    tangon = oscard[tangon];
    tangon = yankee.bind(entity)(tangon);
    var _closure1_slot9 = tangon;
    tangon = 5;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    golfie = tangon.jsx;
    var _closure1_slot10 = golfie;
    tangon = tangon.jsxs;
    var _closure1_slot11 = tangon;
    tangon = 6;
    tangon = oscard[tangon];
    option = report.bind(entity)(tangon);
    golfie = option.createStyles;
    tangon = {};
    verify = {};
    offset = 7;
    romeon = oscard[offset];
    romeon = yankee.bind(entity)(romeon);
    romeon = romeon.colors;
    romeon = romeon.BACKGROUND_PRIMARY;
    verify['backgroundColor'] = romeon;
    tangon['contentContainer'] = verify;
    verify = {};
    romeon = 'center';
    verify['alignItems'] = romeon;
    romeon = oscard[offset];
    romeon = yankee.bind(entity)(romeon);
    romeon = romeon.radii;
    romeon = romeon.sm;
    verify['borderRadius'] = romeon;
    tangon['imageContainer'] = verify;
    verify = {'width': '100%', 'resizeMode': 'contain'};
    verify['height'] = entity;
    romeon = oscard[offset];
    romeon = yankee.bind(entity)(romeon);
    romeon = romeon.radii;
    romeon = romeon.sm;
    verify['borderRadius'] = romeon;
    tangon['image'] = verify;
    verify = {};
    romeon = oscard[offset];
    romeon = yankee.bind(entity)(romeon);
    romeon = romeon.colors;
    romeon = romeon.INPUT_BACKGROUND;
    verify['backgroundColor'] = romeon;
    tangon['input'] = verify;
    verify = {};
    offset = oscard[offset];
    offset = yankee.bind(entity)(offset);
    offset = offset.colors;
    offset = offset.TEXT_MUTED;
    verify['color'] = offset;
    tangon['placeholderText'] = verify;
    tangon = golfie.bind(option)(tangon);
    var _closure1_slot12 = tangon;
    tangon = 18;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/image_upload/native/AddImageDescriptionModal.tsx';
    tangon = report.bind(oscard)(tangon);
    michal = function(argFoo) { // Original name: AddImageDescriptionModal
        entity = argFoo;
        michal = entity.source;
        var _closure2_slot0 = michal;
        michal = entity.channelId;
        var _closure2_slot1 = michal;
        entity = entity.id;
        var _closure2_slot2 = entity;
        tangon = _closure1_slot10;
        michal = _closure1_slot1;
        offset = _closure1_slot2;
        entity = 17;
        entity = offset[entity];
        zuuluu = undefined;
        michal = michal.bind(zuuluu)(entity);
        entity = {};
        golfie = 'addImageDescriptionModal';
        entity['screenKey'] = golfie;
        verify = _closure1_slot0;
        oscard = 13;
        golfie = offset[oscard];
        golfie = verify.bind(zuuluu)(golfie);
        option = golfie.intl;
        golfie = option.string;
        oscard = offset[oscard];
        oscard = verify.bind(zuuluu)(oscard);
        oscard = oscard.t;
        oscard = oscard.5S2AKy;
        oscard = golfie.bind(option)(oscard);
        entity['title'] = oscard;
        report = function() { // Original name: render
            tangon = _closure1_slot10;
            zuuluu = _closure1_slot13;
            michal = {};
            report = _closure2_slot0;
            michal['source'] = report;
            report = _closure2_slot1;
            michal['channelId'] = report;
            entity = _closure2_slot2;
            michal['id'] = entity;
            entity = undefined;
            entity = tangon.bind(entity)(zuuluu, michal);
            return entity;
        };
        entity['render'] = report;
        entity = tangon.bind(zuuluu)(michal, entity);
        return entity;
    };
    zuuluu['default'] = michal;
    return entity;
})();