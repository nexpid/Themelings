// app/modules/image_upload/native/AddImageDescriptionModal.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    report = argBar;
    yankee = argBaz;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    var _closure1_slot1 = yankee;
    var _closure1_slot2 = oscard;
    entity = function(argFoo) { // Original name: AddDescription
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            entity = argFoo;
            sizing = entity.source;
            record = entity.channelId;
            var _closure2_slot0 = record;
            ctrled = entity.id;
            var _closure2_slot1 = ctrled;
            tangon = undefined;
            var _closure2_slot5 = tangon;
            var _closure2_slot6 = tangon;
            var _closure2_slot7 = tangon;
            var _closure2_slot8 = tangon;
            var _closure2_slot9 = tangon;
            var _closure2_slot10 = tangon;
            entity = _closure1_slot14;
            foxtra = entity.bind(tangon)();
            michal = _closure1_slot0;
            entity = _closure1_slot2;
            zuuluu = 14;
            oscard = entity[zuuluu];
            verify = michal.bind(tangon)(oscard);
            option = verify.useStateFromStores;
            oscard = _closure1_slot8;
            golfie = new Array(1);
            golfie[0] = oscard;
            oscard = function() {
                report = _closure1_slot8;
                tangon = report.getUpload;
                zuuluu = _closure2_slot0;
                michal = _closure2_slot1;
                entity = _closure1_slot7;
                entity = entity.ChannelMessage;
                entity = tangon.bind(report)(zuuluu, michal, entity);
                return entity;
            };
            source = option.bind(verify)(golfie, oscard);
            var _closure2_slot2 = source;
            entity = entity[zuuluu];
            golfie = michal.bind(tangon)(entity);
            oscard = golfie.useStateFromStores;
            entity = _closure1_slot10;
            michal = new Array(1);
            michal[0] = entity;
            entity = function() {
                michal = _closure1_slot10;
                entity = michal.getHeight;
                entity = entity.bind(michal)();
                return entity;
            };
            sequen = oscard.bind(golfie)(michal, entity);
            michal = _closure1_slot4;
            entity = michal.useState;
            output = false;
            michal = entity.bind(michal)(output);
            entity = _closure1_slot3;
            vacuum = 2;
            michal = entity.bind(tangon)(michal, vacuum);
            golfie = 0;
            entity = michal[golfie];
            var _closure2_slot3 = entity;
            oscard = 1;
            michal = michal[oscard];
            var _closure2_slot4 = michal;
            option = sizing.width;
            michal = sizing.height;
            verify = null;
            yankee = verify != option;
            config = oscard;
            if(!yankee) { _fun00002_ip = 258; continue _fun00001 }
 230:
            yankee = verify != michal;
            config = oscard;
            if(!yankee) { _fun00002_ip = 258; continue _fun00001 }
 240:
            config = oscard;
            if(!(golfie !== option)) { _fun00002_ip = 258; continue _fun00001 }
 247:
            config = oscard;
            if(!(golfie !== michal)) { _fun00002_ip = 258; continue _fun00001 }
 254:
            config = option / michal;
 258:
            yankee = _closure1_slot4;
            option = yankee.useState;
            michal = verify == source;
            romeon = undefined;
            if(michal) { _fun00002_ip = 281; continue _fun00001 }
 276:
            romeon = source.description;
 281:
            backup = verify != romeon;
            michal = '';
            if(!backup) { _fun00002_ip = 295; continue _fun00001 }
 292:
            michal = romeon;
 295:
            option = option.bind(yankee)(michal);
            michal = _closure1_slot3;
            michal = michal.bind(tangon)(option, vacuum);
            kiloes = michal[golfie];
            _closure2_slot5 = kiloes;
            backup = michal[oscard];
            oscard = _closure1_slot4;
            michal = oscard.useRef;
            michal = michal.bind(oscard)(kiloes);
            _closure2_slot6 = michal;
            echoed = _closure1_slot0;
            update = _closure1_slot2;
            michal = 15;
            michal = update[michal];
            oscard = echoed.bind(tangon)(michal);
            michal = oscard.useNavigation;
            michal = michal.bind(oscard)();
            _closure2_slot7 = michal;
            golfie = _closure1_slot4;
            oscard = golfie.useRef;
            oscard = oscard.bind(golfie)(verify);
            _closure2_slot8 = oscard;
            zuuluu = update[zuuluu];
            romeon = echoed.bind(tangon)(zuuluu);
            yankee = romeon.useStateFromStoresObject;
            zuuluu = _closure1_slot9;
            option = new Array(1);
            option[0] = zuuluu;
            golfie = function() {
                entity = {};
                zuuluu = _closure1_slot9;
                zuuluu = zuuluu.keyboardHeight;
                entity['keyboardHeight'] = zuuluu;
                michal = _closure1_slot9;
                michal = michal.keyboardOpen;
                entity['keyboardOpen'] = michal;
                return entity;
            };
            zuuluu = new Array(0);
            zuuluu = yankee.bind(romeon)(option, golfie, zuuluu);
            romeon = zuuluu.keyboardHeight;
            zuuluu = zuuluu.keyboardOpen;
            _closure2_slot9 = zuuluu;
            golfie = _closure1_slot1;
            yankee = 16;
            zuuluu = update[yankee];
            zuuluu = golfie.bind(tangon)(zuuluu);
            zuuluu = zuuluu.bind(tangon)();
            option = zuuluu.bottom;
            cntext = _closure1_slot4;
            result = cntext.useEffect;
            golfie = new Array(1);
            golfie[0] = kiloes;
            zuuluu = function() {
                michal = _closure2_slot6;
                entity = _closure2_slot5;
                michal['current'] = entity;
                entity = undefined;
                return entity;
            };
            zuuluu = result.bind(cntext)(zuuluu, golfie);
            golfie = _closure1_slot4;
            zuuluu = golfie.useRef;
            result = zuuluu.bind(golfie)(verify);
            _closure2_slot10 = result;
            verify = _closure1_slot4;
            golfie = verify.useEffect;
            zuuluu = new Array(4);
            zuuluu[0] = record;
            zuuluu[1] = ctrled;
            zuuluu[2] = source;
            zuuluu[3] = michal;
            michal = function() {
                zuuluu = _closure2_slot7;
                michal = zuuluu.setOptions;
                entity = {};
                tangon = function() { // Original name: headerRight
                    tangon = _closure1_slot11;
                    option = _closure1_slot0;
                    verify = _closure1_slot2;
                    entity = 13;
                    entity = verify[entity];
                    zuuluu = undefined;
                    entity = option.bind(zuuluu)(entity);
                    michal = entity.HeaderActionButton;
                    entity = {};
                    report = 10;
                    oscard = verify[report];
                    oscard = option.bind(zuuluu)(oscard);
                    golfie = oscard.intl;
                    oscard = golfie.string;
                    report = verify[report];
                    report = option.bind(zuuluu)(report);
                    report = report.t;
                    report = report.R3BPHx;
                    report = oscard.bind(golfie)(report);
                    entity['text'] = report;
                    report = function() { // Original name: onPress
                        zuuluu = _closure1_slot1;
                        tangon = _closure1_slot2;
                        entity = 17;
                        report = tangon[entity];
                        entity = undefined;
                        verify = zuuluu.bind(entity)(report);
                        option = verify.update;
                        golfie = _closure2_slot0;
                        oscard = _closure2_slot1;
                        michal = _closure1_slot7;
                        foxtra = michal.ChannelMessage;
                        michal = {};
                        backup = _closure2_slot2;
                        kiloes = michal;
                        yankee = copyDataProperties(kiloes, backup);
                        offset = _closure2_slot6;
                        yankee = offset.current;
                        offset = 'description';
                        michal[offset] = yankee;
                        sizing = verify;
                        kiloes = golfie;
                        backup = oscard;
                        romeon = michal;
                        michal = sizing[option](kiloes, backup, foxtra, romeon, yankee);
                        michal = 12;
                        michal = tangon[michal];
                        zuuluu = zuuluu.bind(entity)(michal);
                        michal = zuuluu.close;
                        michal = michal.bind(zuuluu)();
                        return entity;
                    };
                    entity['onPress'] = report;
                    entity = tangon.bind(zuuluu)(michal, entity);
                    return entity;
                };
                entity['headerRight'] = tangon;
                entity = michal.bind(zuuluu)(entity);
                entity = undefined;
                return entity;
            };
            michal = golfie.bind(verify)(michal, zuuluu);
            golfie = _closure1_slot4;
            zuuluu = golfie.useEffect;
            michal = new Array(1);
            michal[0] = entity;
            entity = function() {
                _fun00003: for(var _fun00004_ip = 0; ; ) switch(_fun00004_ip) {
 0:
                    tangon = _closure1_slot0;
                    zuuluu = _closure1_slot2;
                    entity = 18;
                    zuuluu = zuuluu[entity];
                    entity = undefined;
                    tangon = tangon.bind(entity)(zuuluu);
                    zuuluu = tangon.isAndroid;
                    zuuluu = zuuluu.bind(tangon)();
                    if(!zuuluu) { _fun00004_ip = 47; continue _fun00003 }
 37:
                    tangon = _closure2_slot3;
                    zuuluu = !tangon;
 47:
                    if(!zuuluu) { _fun00004_ip = 90; continue _fun00003 }
 50:
                    zuuluu = _closure1_slot0;
                    tangon = _closure1_slot2;
                    michal = 19;
                    michal = tangon[michal];
                    tangon = zuuluu.bind(entity)(michal);
                    zuuluu = tangon.runAfterInteractions;
                    michal = function() {
                        _fun00005: for(var _fun00006_ip = 0; ; ) switch(_fun00006_ip) {
 0:
                            michal = _closure2_slot10;
                            zuuluu = michal.current;
                            michal = null;
                            if(!(michal != zuuluu)) { _fun00006_ip = 28; continue _fun00005 }
 18:
                            michal = zuuluu.focus;
                            michal = michal.bind(zuuluu)();
 28:
                            zuuluu = _closure2_slot4;
                            entity = undefined;
                            michal = true;
                            michal = zuuluu.bind(entity)(michal);
                            return entity;
                        }
                    };
                    michal = zuuluu.bind(tangon)(michal);
 90:
                    return entity;
                }
            };
            entity = zuuluu.bind(golfie)(entity, michal);
            zuuluu = _closure1_slot12;
            verify = 20;
            entity = update[verify];
            entity = echoed.bind(tangon)(entity);
            michal = entity.Form;
            entity = {};
            entity['ref'] = oscard;
            golfie = foxtra.contentContainer;
            oscard = new Array(2);
            oscard[0] = golfie;
            golfie = {};
            option = option + romeon;
            option = option + yankee;
            golfie['paddingBottom'] = option;
            oscard[1] = golfie;
            entity['style'] = oscard;
            report = function() { // Original name: onLayout
                _fun00007: for(var _fun00008_ip = 0; ; ) switch(_fun00008_ip) {
 0:
                    michal = _closure2_slot9;
                    if(!michal) { _fun00008_ip = 35; continue _fun00007 }
 10:
                    entity = _closure2_slot8;
                    michal = entity.current;
                    entity = null;
                    if(!(entity != michal)) { _fun00008_ip = 35; continue _fun00007 }
 25:
                    entity = michal.scrollToEnd;
                    entity = entity.bind(michal)();
 35:
                    entity = undefined;
                    return entity;
                }
            };
            entity['onLayout'] = report;
            entity['scrollsToTop'] = output;
            golfie = _closure1_slot11;
            oscard = _closure1_slot5;
            report = {};
            option = foxtra.imageContainer;
            report['style'] = option;
            romeon = _closure1_slot11;
            yankee = _closure1_slot6;
            option = {};
            ctrled = foxtra.image;
            source = new Array(2);
            source[0] = ctrled;
            ctrled = {};
            ctrled['aspectRatio'] = config;
            vacuum = sequen / vacuum;
            ctrled['maxHeight'] = vacuum;
            source[1] = ctrled;
            option['style'] = source;
            option['source'] = sizing;
            option = romeon.bind(tangon)(yankee, option);
            report['children'] = option;
            oscard = golfie.bind(tangon)(oscard, report);
            report = new Array(2);
            report[0] = oscard;
            option = _closure1_slot11;
            oscard = update[verify];
            oscard = echoed.bind(tangon)(oscard);
            golfie = oscard.FormSection;
            oscard = {'inset': true, 'thinTitle': true};
            romeon = true;
            sizing = 10;
            yankee = update[sizing];
            yankee = echoed.bind(tangon)(yankee);
            ctrled = yankee.intl;
            source = ctrled.string;
            yankee = update[sizing];
            yankee = echoed.bind(tangon)(yankee);
            yankee = yankee.t;
            yankee = yankee.eOB2eX;
            yankee = source.bind(ctrled)(yankee);
            oscard['title'] = yankee;
            yankee = _closure1_slot11;
            verify = update[verify];
            verify = echoed.bind(tangon)(verify);
            offset = verify.FormInput;
            verify = {};
            verify['ref'] = result;
            result = foxtra.input;
            verify['style'] = result;
            verify['showBorder'] = output;
            result = 18;
            source = update[result];
            ctrled = echoed.bind(tangon)(source);
            source = ctrled.isAndroid;
            source = source.bind(ctrled)();
            source = !source;
            verify['autoFocus'] = source;
            result = update[result];
            source = echoed.bind(tangon)(result);
            result = source.isAndroid;
            result = result.bind(source)();
            verify['disableConstantNumberOfLines'] = result;
            verify['showTopContainer'] = output;
            output = 4;
            verify['numberOfLines'] = output;
            output = update[sizing];
            output = echoed.bind(tangon)(output);
            result = output.intl;
            output = result.string;
            sizing = update[sizing];
            sizing = echoed.bind(tangon)(sizing);
            sizing = sizing.t;
            sizing = sizing.RNH1jo;
            sizing = output.bind(result)(sizing);
            verify['placeholder'] = sizing;
            verify['value'] = kiloes;
            verify['onChange'] = backup;
            verify['multiline'] = romeon;
            foxtra = foxtra.placeholderText;
            foxtra = foxtra.color;
            verify['placeholderTextColor'] = foxtra;
            foxtra = 1000;
            verify['maxLength'] = foxtra;
            verify['showCharactersRemaining'] = romeon;
            verify = yankee.bind(tangon)(offset, verify);
            oscard['children'] = verify;
            oscard = option.bind(tangon)(golfie, oscard);
            report[1] = oscard;
            entity['children'] = report;
            entity = zuuluu.bind(tangon)(michal, entity);
            return entity;
        }
    };
    var _closure1_slot15 = entity;
    entity = global;
    option = entity.Object;
    golfie = option.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(option)(zuuluu, entity, tangon);
    entity = 0;
    tangon = oscard[entity];
    entity = undefined;
    tangon = yankee.bind(entity)(tangon);
    var _closure1_slot3 = tangon;
    tangon = 1;
    golfie = oscard[tangon];
    tangon = argCor;
    tangon = tangon.bind(entity)(golfie);
    var _closure1_slot4 = tangon;
    tangon = 2;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    golfie = tangon.View;
    var _closure1_slot5 = golfie;
    tangon = tangon.Image;
    var _closure1_slot6 = tangon;
    tangon = 3;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.DraftType;
    var _closure1_slot7 = tangon;
    tangon = 4;
    tangon = oscard[tangon];
    tangon = yankee.bind(entity)(tangon);
    var _closure1_slot8 = tangon;
    tangon = 5;
    tangon = oscard[tangon];
    tangon = yankee.bind(entity)(tangon);
    var _closure1_slot9 = tangon;
    tangon = 6;
    tangon = oscard[tangon];
    tangon = yankee.bind(entity)(tangon);
    var _closure1_slot10 = tangon;
    tangon = 7;
    golfie = oscard[tangon];
    golfie = report.bind(entity)(golfie);
    golfie = golfie.jsx;
    var _closure1_slot11 = golfie;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.jsxs;
    var _closure1_slot12 = tangon;
    tangon = {};
    golfie = 'ADD_DESCRIPTION';
    tangon['ADD_DESCRIPTION'] = golfie;
    var _closure1_slot13 = tangon;
    tangon = 8;
    tangon = oscard[tangon];
    option = report.bind(entity)(tangon);
    golfie = option.createStyles;
    tangon = {};
    verify = {'flex': 1, 'padding': 16};
    tangon['contentContainer'] = verify;
    verify = {};
    offset = 'center';
    verify['alignItems'] = offset;
    offset = 9;
    romeon = oscard[offset];
    romeon = yankee.bind(entity)(romeon);
    romeon = romeon.radii;
    romeon = romeon.sm;
    verify['borderRadius'] = romeon;
    tangon['imageContainer'] = verify;
    verify = {'width': '100%', 'resizeMode': 'contain'};
    verify['height'] = entity;
    romeon = oscard[offset];
    romeon = yankee.bind(entity)(romeon);
    romeon = romeon.radii;
    romeon = romeon.sm;
    verify['borderRadius'] = romeon;
    tangon['image'] = verify;
    verify = {};
    romeon = oscard[offset];
    romeon = yankee.bind(entity)(romeon);
    romeon = romeon.colors;
    romeon = romeon.INPUT_BACKGROUND;
    verify['backgroundColor'] = romeon;
    tangon['input'] = verify;
    verify = {};
    offset = oscard[offset];
    offset = yankee.bind(entity)(offset);
    offset = offset.colors;
    offset = offset.TEXT_MUTED;
    verify['color'] = offset;
    tangon['placeholderText'] = verify;
    tangon = golfie.bind(option)(tangon);
    var _closure1_slot14 = tangon;
    tangon = 23;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/image_upload/native/AddImageDescriptionModal.tsx';
    tangon = report.bind(oscard)(tangon);
    michal = function(argFoo) { // Original name: AddImageDescriptionModal
        entity = argFoo;
        var _closure2_slot0 = entity;
        report = _closure1_slot1;
        golfie = _closure1_slot2;
        zuuluu = 21;
        zuuluu = golfie[zuuluu];
        tangon = undefined;
        zuuluu = report.bind(tangon)(zuuluu);
        michal = function() {
            entity = {};
            tangon = _closure1_slot13;
            michal = tangon.ADD_DESCRIPTION;
            entity['name'] = michal;
            michal = {};
            backup = _closure2_slot0;
            kiloes = michal;
            zuuluu = copyDataProperties(kiloes, backup);
            entity['params'] = michal;
            michal = new Array(1);
            michal[0] = entity;
            entity = {};
            zuuluu = {};
            report = tangon.ADD_DESCRIPTION;
            tangon = {};
            verify = _closure1_slot0;
            romeon = _closure1_slot2;
            option = 10;
            offset = romeon[option];
            yankee = undefined;
            offset = verify.bind(yankee)(offset);
            foxtra = offset.intl;
            offset = foxtra.string;
            option = romeon[option];
            option = verify.bind(yankee)(option);
            option = option.t;
            option = option.5S2AKy;
            option = offset.bind(foxtra)(option);
            tangon['title'] = option;
            option = 11;
            option = romeon[option];
            verify = verify.bind(yankee)(option);
            option = verify.getHeaderCloseButton;
            offset = _closure1_slot1;
            golfie = 12;
            golfie = romeon[golfie];
            golfie = offset.bind(yankee)(golfie);
            golfie = golfie.close;
            golfie = option.bind(verify)(golfie);
            tangon['headerLeft'] = golfie;
            golfie = function() { // Original name: headerRight
                tangon = _closure1_slot11;
                option = _closure1_slot0;
                verify = _closure1_slot2;
                entity = 13;
                entity = verify[entity];
                zuuluu = undefined;
                entity = option.bind(zuuluu)(entity);
                michal = entity.HeaderActionButton;
                entity = {};
                report = 10;
                oscard = verify[report];
                oscard = option.bind(zuuluu)(oscard);
                golfie = oscard.intl;
                oscard = golfie.string;
                report = verify[report];
                report = option.bind(zuuluu)(report);
                report = report.t;
                report = report.R3BPHx;
                report = oscard.bind(golfie)(report);
                entity['text'] = report;
                report = true;
                entity['disabled'] = report;
                entity = tangon.bind(zuuluu)(michal, entity);
                return entity;
            };
            tangon['headerRight'] = golfie;
            oscard = function(argFoo) { // Original name: render
                tangon = _closure1_slot11;
                zuuluu = _closure1_slot15;
                michal = {};
                report = argFoo;
                oscard = michal;
                entity = copyDataProperties(oscard, report);
                entity = undefined;
                entity = tangon.bind(entity)(zuuluu, michal);
                return entity;
            };
            tangon['render'] = oscard;
            zuuluu[report] = tangon;
            entity['screens'] = zuuluu;
            entity['initialStack'] = michal;
            return entity;
        };
        michal = zuuluu.bind(tangon)(michal);
        oscard = michal.screens;
        report = michal.initialStack;
        zuuluu = _closure1_slot11;
        michal = _closure1_slot0;
        entity = 22;
        entity = golfie[entity];
        entity = michal.bind(tangon)(entity);
        michal = entity.Navigator;
        entity = {};
        entity['screens'] = oscard;
        entity['initialRouteStack'] = report;
        entity = zuuluu.bind(tangon)(michal, entity);
        return entity;
    };
    zuuluu['default'] = michal;
    return entity;
})();