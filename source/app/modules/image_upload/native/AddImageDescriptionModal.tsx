// app/modules/image_upload/native/AddImageDescriptionModal.tsx
export default (function(argFoo, argBar, argBaz, argCorge, _, argFred, argPlugh) {
    report = argBar;
    yankee = argBaz;
    zulu = argFred;
    oscar = argPlugh;
    var _closure1_slot0 = report;
    var _closure1_slot1 = yankee;
    var _closure1_slot2 = oscar;
    entity = function(argFoo) { // Original name: AddDescription
        _fun102510: for(var _fun102510_ip = 0; ; ) switch(_fun102510_ip) {
 0:
            entity = argFoo;
            sizing = entity.source;
            record = entity.channelId;
            var _closure2_slot0 = record;
            control = entity.id;
            var _closure2_slot1 = control;
            tango = undefined;
            var _closure2_slot5 = tango;
            var _closure2_slot6 = tango;
            var _closure2_slot7 = tango;
            var _closure2_slot8 = tango;
            var _closure2_slot9 = tango;
            var _closure2_slot10 = tango;
            entity = _closure1_slot14;
            foxtrot = entity.bind(tango)();
            mike = _closure1_slot0;
            entity = _closure1_slot2;
            zulu = 14;
            oscar = entity[zulu];
            verify = mike.bind(tango)(oscar);
            options = verify.useStateFromStores;
            oscar = _closure1_slot8;
            golf = new Array(1);
            golf[0] = oscar;
            oscar = function() {
                report = _closure1_slot8;
                tango = report.getUpload;
                zulu = _closure2_slot0;
                mike = _closure2_slot1;
                entity = _closure1_slot7;
                entity = entity.ChannelMessage;
                entity = tango.bind(report)(zulu, mike, entity);
                return entity;
            };
            source = options.bind(verify)(golf, oscar);
            var _closure2_slot2 = source;
            entity = entity[zulu];
            golf = mike.bind(tango)(entity);
            oscar = golf.useStateFromStores;
            entity = _closure1_slot10;
            mike = new Array(1);
            mike[0] = entity;
            entity = function() {
                mike = _closure1_slot10;
                entity = mike.getHeight;
                entity = entity.bind(mike)();
                return entity;
            };
            sequence = oscar.bind(golf)(mike, entity);
            mike = _closure1_slot4;
            entity = mike.useState;
            output = false;
            mike = entity.bind(mike)(output);
            entity = _closure1_slot3;
            vacuum = 2;
            mike = entity.bind(tango)(mike, vacuum);
            golf = 0;
            entity = mike[golf];
            var _closure2_slot3 = entity;
            oscar = 1;
            mike = mike[oscar];
            var _closure2_slot4 = mike;
            options = sizing.width;
            mike = sizing.height;
            verify = null;
            yankee = verify != options;
            config = oscar;
            if(!yankee) { _fun102510_ip = 258; continue _fun102510 }
 230:
            yankee = verify != mike;
            config = oscar;
            if(!yankee) { _fun102510_ip = 258; continue _fun102510 }
 240:
            config = oscar;
            if(!(golf !== options)) { _fun102510_ip = 258; continue _fun102510 }
 247:
            config = oscar;
            if(!(golf !== mike)) { _fun102510_ip = 258; continue _fun102510 }
 254:
            config = options / mike;
 258:
            yankee = _closure1_slot4;
            options = yankee.useState;
            mike = verify == source;
            romeo = undefined;
            if(mike) { _fun102510_ip = 281; continue _fun102510 }
 276:
            romeo = source.description;
 281:
            backup = verify != romeo;
            mike = '';
            if(!backup) { _fun102510_ip = 295; continue _fun102510 }
 292:
            mike = romeo;
 295:
            options = options.bind(yankee)(mike);
            mike = _closure1_slot3;
            mike = mike.bind(tango)(options, vacuum);
            kilo = mike[golf];
            _closure2_slot5 = kilo;
            backup = mike[oscar];
            oscar = _closure1_slot4;
            mike = oscar.useRef;
            mike = mike.bind(oscar)(kilo);
            _closure2_slot6 = mike;
            echo = _closure1_slot0;
            update = _closure1_slot2;
            mike = 15;
            mike = update[mike];
            oscar = echo.bind(tango)(mike);
            mike = oscar.useNavigation;
            mike = mike.bind(oscar)();
            _closure2_slot7 = mike;
            golf = _closure1_slot4;
            oscar = golf.useRef;
            oscar = oscar.bind(golf)(verify);
            _closure2_slot8 = oscar;
            zulu = update[zulu];
            romeo = echo.bind(tango)(zulu);
            yankee = romeo.useStateFromStoresObject;
            zulu = _closure1_slot9;
            options = new Array(1);
            options[0] = zulu;
            golf = function() {
                entity = {};
                zulu = _closure1_slot9;
                zulu = zulu.keyboardHeight;
                entity['keyboardHeight'] = zulu;
                mike = _closure1_slot9;
                mike = mike.keyboardOpen;
                entity['keyboardOpen'] = mike;
                return entity;
            };
            zulu = new Array(0);
            zulu = yankee.bind(romeo)(options, golf, zulu);
            romeo = zulu.keyboardHeight;
            zulu = zulu.keyboardOpen;
            _closure2_slot9 = zulu;
            golf = _closure1_slot1;
            yankee = 16;
            zulu = update[yankee];
            zulu = golf.bind(tango)(zulu);
            zulu = zulu.bind(tango)();
            options = zulu.bottom;
            context = _closure1_slot4;
            result = context.useEffect;
            golf = new Array(1);
            golf[0] = kilo;
            zulu = function() {
                mike = _closure2_slot6;
                entity = _closure2_slot5;
                mike['current'] = entity;
                entity = undefined;
                return entity;
            };
            zulu = result.bind(context)(zulu, golf);
            golf = _closure1_slot4;
            zulu = golf.useRef;
            result = zulu.bind(golf)(verify);
            _closure2_slot10 = result;
            verify = _closure1_slot4;
            golf = verify.useEffect;
            zulu = new Array(4);
            zulu[0] = record;
            zulu[1] = control;
            zulu[2] = source;
            zulu[3] = mike;
            mike = function() {
                zulu = _closure2_slot7;
                mike = zulu.setOptions;
                entity = {};
                tango = function() { // Original name: headerRight
                    tango = _closure1_slot11;
                    options = _closure1_slot0;
                    verify = _closure1_slot2;
                    entity = 13;
                    entity = verify[entity];
                    zulu = undefined;
                    entity = options.bind(zulu)(entity);
                    mike = entity.HeaderActionButton;
                    entity = {};
                    report = 10;
                    oscar = verify[report];
                    oscar = options.bind(zulu)(oscar);
                    golf = oscar.intl;
                    oscar = golf.string;
                    report = verify[report];
                    report = options.bind(zulu)(report);
                    report = report.t;
                    report = report.R3BPHx;
                    report = oscar.bind(golf)(report);
                    entity['text'] = report;
                    report = function() { // Original name: onPress
                        zulu = _closure1_slot1;
                        tango = _closure1_slot2;
                        entity = 17;
                        report = tango[entity];
                        entity = undefined;
                        verify = zulu.bind(entity)(report);
                        options = verify.update;
                        golf = _closure2_slot0;
                        oscar = _closure2_slot1;
                        mike = _closure1_slot7;
                        foxtrot = mike.ChannelMessage;
                        mike = {};
                        backup = _closure2_slot2;
                        kilo = mike;
                        yankee = copyDataProperties(kilo, backup);
                        offset = _closure2_slot6;
                        yankee = offset.current;
                        offset = 'description';
                        mike[offset] = yankee;
                        sizing = verify;
                        kilo = golf;
                        backup = oscar;
                        romeo = mike;
                        mike = sizing[options](kilo, backup, foxtrot, romeo, yankee);
                        mike = 12;
                        mike = tango[mike];
                        zulu = zulu.bind(entity)(mike);
                        mike = zulu.close;
                        mike = mike.bind(zulu)();
                        return entity;
                    };
                    entity['onPress'] = report;
                    entity = tango.bind(zulu)(mike, entity);
                    return entity;
                };
                entity['headerRight'] = tango;
                entity = mike.bind(zulu)(entity);
                entity = undefined;
                return entity;
            };
            mike = golf.bind(verify)(mike, zulu);
            golf = _closure1_slot4;
            zulu = golf.useEffect;
            mike = new Array(1);
            mike[0] = entity;
            entity = function() {
                _fun102518: for(var _fun102518_ip = 0; ; ) switch(_fun102518_ip) {
 0:
                    tango = _closure1_slot0;
                    zulu = _closure1_slot2;
                    entity = 18;
                    zulu = zulu[entity];
                    entity = undefined;
                    tango = tango.bind(entity)(zulu);
                    zulu = tango.isAndroid;
                    zulu = zulu.bind(tango)();
                    if(!zulu) { _fun102518_ip = 47; continue _fun102518 }
 37:
                    tango = _closure2_slot3;
                    zulu = !tango;
 47:
                    if(!zulu) { _fun102518_ip = 90; continue _fun102518 }
 50:
                    zulu = _closure1_slot0;
                    tango = _closure1_slot2;
                    mike = 19;
                    mike = tango[mike];
                    tango = zulu.bind(entity)(mike);
                    zulu = tango.runAfterInteractions;
                    mike = function() {
                        _fun102519: for(var _fun102519_ip = 0; ; ) switch(_fun102519_ip) {
 0:
                            mike = _closure2_slot10;
                            zulu = mike.current;
                            mike = null;
                            if(!(mike != zulu)) { _fun102519_ip = 28; continue _fun102519 }
 18:
                            mike = zulu.focus;
                            mike = mike.bind(zulu)();
 28:
                            zulu = _closure2_slot4;
                            entity = undefined;
                            mike = true;
                            mike = zulu.bind(entity)(mike);
                            return entity;
                        }
                    };
                    mike = zulu.bind(tango)(mike);
 90:
                    return entity;
                }
            };
            entity = zulu.bind(golf)(entity, mike);
            zulu = _closure1_slot12;
            verify = 20;
            entity = update[verify];
            entity = echo.bind(tango)(entity);
            mike = entity.Form;
            entity = {};
            entity['ref'] = oscar;
            golf = foxtrot.contentContainer;
            oscar = new Array(2);
            oscar[0] = golf;
            golf = {};
            options = options + romeo;
            options = options + yankee;
            golf['paddingBottom'] = options;
            oscar[1] = golf;
            entity['style'] = oscar;
            report = function() { // Original name: onLayout
                _fun102520: for(var _fun102520_ip = 0; ; ) switch(_fun102520_ip) {
 0:
                    mike = _closure2_slot9;
                    if(!mike) { _fun102520_ip = 35; continue _fun102520 }
 10:
                    entity = _closure2_slot8;
                    mike = entity.current;
                    entity = null;
                    if(!(entity != mike)) { _fun102520_ip = 35; continue _fun102520 }
 25:
                    entity = mike.scrollToEnd;
                    entity = entity.bind(mike)();
 35:
                    entity = undefined;
                    return entity;
                }
            };
            entity['onLayout'] = report;
            entity['scrollsToTop'] = output;
            golf = _closure1_slot11;
            oscar = _closure1_slot5;
            report = {};
            options = foxtrot.imageContainer;
            report['style'] = options;
            romeo = _closure1_slot11;
            yankee = _closure1_slot6;
            options = {};
            control = foxtrot.image;
            source = new Array(2);
            source[0] = control;
            control = {};
            control['aspectRatio'] = config;
            vacuum = sequence / vacuum;
            control['maxHeight'] = vacuum;
            source[1] = control;
            options['style'] = source;
            options['source'] = sizing;
            options = romeo.bind(tango)(yankee, options);
            report['children'] = options;
            oscar = golf.bind(tango)(oscar, report);
            report = new Array(2);
            report[0] = oscar;
            options = _closure1_slot11;
            oscar = update[verify];
            oscar = echo.bind(tango)(oscar);
            golf = oscar.FormSection;
            oscar = {'inset': true, 'thinTitle': true};
            romeo = true;
            sizing = 10;
            yankee = update[sizing];
            yankee = echo.bind(tango)(yankee);
            control = yankee.intl;
            source = control.string;
            yankee = update[sizing];
            yankee = echo.bind(tango)(yankee);
            yankee = yankee.t;
            yankee = yankee.eOB2eX;
            yankee = source.bind(control)(yankee);
            oscar['title'] = yankee;
            yankee = _closure1_slot11;
            verify = update[verify];
            verify = echo.bind(tango)(verify);
            offset = verify.FormInput;
            verify = {};
            verify['ref'] = result;
            result = foxtrot.input;
            verify['style'] = result;
            verify['showBorder'] = output;
            result = 18;
            source = update[result];
            control = echo.bind(tango)(source);
            source = control.isAndroid;
            source = source.bind(control)();
            source = !source;
            verify['autoFocus'] = source;
            result = update[result];
            source = echo.bind(tango)(result);
            result = source.isAndroid;
            result = result.bind(source)();
            verify['disableConstantNumberOfLines'] = result;
            verify['showTopContainer'] = output;
            output = 4;
            verify['numberOfLines'] = output;
            output = update[sizing];
            output = echo.bind(tango)(output);
            result = output.intl;
            output = result.string;
            sizing = update[sizing];
            sizing = echo.bind(tango)(sizing);
            sizing = sizing.t;
            sizing = sizing.RNH1jo;
            sizing = output.bind(result)(sizing);
            verify['placeholder'] = sizing;
            verify['value'] = kilo;
            verify['onChange'] = backup;
            verify['multiline'] = romeo;
            foxtrot = foxtrot.placeholderText;
            foxtrot = foxtrot.color;
            verify['placeholderTextColor'] = foxtrot;
            foxtrot = 1000;
            verify['maxLength'] = foxtrot;
            verify['showCharactersRemaining'] = romeo;
            verify = yankee.bind(tango)(offset, verify);
            oscar['children'] = verify;
            oscar = options.bind(tango)(golf, oscar);
            report[1] = oscar;
            entity['children'] = report;
            entity = zulu.bind(tango)(mike, entity);
            return entity;
        }
    };
    var _closure1_slot15 = entity;
    entity = global;
    options = entity.Object;
    golf = options.defineProperty;
    tango = {};
    entity = true;
    tango['value'] = entity;
    entity = '__esModule';
    entity = golf.bind(options)(zulu, entity, tango);
    entity = 0;
    tango = oscar[entity];
    entity = undefined;
    tango = yankee.bind(entity)(tango);
    var _closure1_slot3 = tango;
    tango = 1;
    golf = oscar[tango];
    tango = argCorge;
    tango = tango.bind(entity)(golf);
    var _closure1_slot4 = tango;
    tango = 2;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    golf = tango.View;
    var _closure1_slot5 = golf;
    tango = tango.Image;
    var _closure1_slot6 = tango;
    tango = 3;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.DraftType;
    var _closure1_slot7 = tango;
    tango = 4;
    tango = oscar[tango];
    tango = yankee.bind(entity)(tango);
    var _closure1_slot8 = tango;
    tango = 5;
    tango = oscar[tango];
    tango = yankee.bind(entity)(tango);
    var _closure1_slot9 = tango;
    tango = 6;
    tango = oscar[tango];
    tango = yankee.bind(entity)(tango);
    var _closure1_slot10 = tango;
    tango = 7;
    golf = oscar[tango];
    golf = report.bind(entity)(golf);
    golf = golf.jsx;
    var _closure1_slot11 = golf;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.jsxs;
    var _closure1_slot12 = tango;
    tango = {};
    golf = 'ADD_DESCRIPTION';
    tango['ADD_DESCRIPTION'] = golf;
    var _closure1_slot13 = tango;
    tango = 8;
    tango = oscar[tango];
    options = report.bind(entity)(tango);
    golf = options.createStyles;
    tango = {};
    verify = {'flex': 1, 'padding': 16};
    tango['contentContainer'] = verify;
    verify = {};
    offset = 'center';
    verify['alignItems'] = offset;
    offset = 9;
    romeo = oscar[offset];
    romeo = yankee.bind(entity)(romeo);
    romeo = romeo.radii;
    romeo = romeo.sm;
    verify['borderRadius'] = romeo;
    tango['imageContainer'] = verify;
    verify = {'width': '100%', 'resizeMode': 'contain'};
    verify['height'] = entity;
    romeo = oscar[offset];
    romeo = yankee.bind(entity)(romeo);
    romeo = romeo.radii;
    romeo = romeo.sm;
    verify['borderRadius'] = romeo;
    tango['image'] = verify;
    verify = {};
    romeo = oscar[offset];
    romeo = yankee.bind(entity)(romeo);
    romeo = romeo.colors;
    romeo = romeo.INPUT_BACKGROUND;
    verify['backgroundColor'] = romeo;
    tango['input'] = verify;
    verify = {};
    offset = oscar[offset];
    offset = yankee.bind(entity)(offset);
    offset = offset.colors;
    offset = offset.TEXT_MUTED;
    verify['color'] = offset;
    tango['placeholderText'] = verify;
    tango = golf.bind(options)(tango);
    var _closure1_slot14 = tango;
    tango = 23;
    tango = oscar[tango];
    oscar = report.bind(entity)(tango);
    report = oscar.fileFinishedImporting;
    tango = 'modules/image_upload/native/AddImageDescriptionModal.tsx';
    tango = report.bind(oscar)(tango);
    mike = function(argFoo) { // Original name: AddImageDescriptionModal
        entity = argFoo;
        var _closure2_slot0 = entity;
        report = _closure1_slot1;
        golf = _closure1_slot2;
        zulu = 21;
        zulu = golf[zulu];
        tango = undefined;
        zulu = report.bind(tango)(zulu);
        mike = function() {
            entity = {};
            tango = _closure1_slot13;
            mike = tango.ADD_DESCRIPTION;
            entity['name'] = mike;
            mike = {};
            backup = _closure2_slot0;
            kilo = mike;
            zulu = copyDataProperties(kilo, backup);
            entity['params'] = mike;
            mike = new Array(1);
            mike[0] = entity;
            entity = {};
            zulu = {};
            report = tango.ADD_DESCRIPTION;
            tango = {};
            verify = _closure1_slot0;
            romeo = _closure1_slot2;
            options = 10;
            offset = romeo[options];
            yankee = undefined;
            offset = verify.bind(yankee)(offset);
            foxtrot = offset.intl;
            offset = foxtrot.string;
            options = romeo[options];
            options = verify.bind(yankee)(options);
            options = options.t;
            options = options.5S2AKy;
            options = offset.bind(foxtrot)(options);
            tango['title'] = options;
            options = 11;
            options = romeo[options];
            verify = verify.bind(yankee)(options);
            options = verify.getHeaderCloseButton;
            offset = _closure1_slot1;
            golf = 12;
            golf = romeo[golf];
            golf = offset.bind(yankee)(golf);
            golf = golf.close;
            golf = options.bind(verify)(golf);
            tango['headerLeft'] = golf;
            golf = function() { // Original name: headerRight
                tango = _closure1_slot11;
                options = _closure1_slot0;
                verify = _closure1_slot2;
                entity = 13;
                entity = verify[entity];
                zulu = undefined;
                entity = options.bind(zulu)(entity);
                mike = entity.HeaderActionButton;
                entity = {};
                report = 10;
                oscar = verify[report];
                oscar = options.bind(zulu)(oscar);
                golf = oscar.intl;
                oscar = golf.string;
                report = verify[report];
                report = options.bind(zulu)(report);
                report = report.t;
                report = report.R3BPHx;
                report = oscar.bind(golf)(report);
                entity['text'] = report;
                report = true;
                entity['disabled'] = report;
                entity = tango.bind(zulu)(mike, entity);
                return entity;
            };
            tango['headerRight'] = golf;
            oscar = function(argFoo) { // Original name: render
                tango = _closure1_slot11;
                zulu = _closure1_slot15;
                mike = {};
                report = argFoo;
                oscar = mike;
                entity = copyDataProperties(oscar, report);
                entity = undefined;
                entity = tango.bind(entity)(zulu, mike);
                return entity;
            };
            tango['render'] = oscar;
            zulu[report] = tango;
            entity['screens'] = zulu;
            entity['initialStack'] = mike;
            return entity;
        };
        mike = zulu.bind(tango)(mike);
        oscar = mike.screens;
        report = mike.initialStack;
        zulu = _closure1_slot11;
        mike = _closure1_slot0;
        entity = 22;
        entity = golf[entity];
        entity = mike.bind(tango)(entity);
        mike = entity.Navigator;
        entity = {};
        entity['screens'] = oscar;
        entity['initialRouteStack'] = report;
        entity = zulu.bind(tango)(mike, entity);
        return entity;
    };
    zulu['default'] = mike;
    return entity;
})();