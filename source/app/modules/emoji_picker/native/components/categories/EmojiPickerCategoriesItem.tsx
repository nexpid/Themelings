// app/modules/emoji_picker/native/components/categories/EmojiPickerCategoriesItem.tsx
export default (function(global, require, metroImportDefault, metroImportAll, moduleObject, exports, dependencyMap) {
    var5 = require;
    var12 = metroImportDefault;
    var3 = exports;
    var6 = dependencyMap;
    var _closure1_slot0 = var5;
    var _closure1_slot1 = var12;
    var _closure1_slot2 = var6;
    var1 = global;
    var8 = var1.Object;
    var7 = var8.defineProperty;
    var4 = {};
    var1 = true;
    var4['value'] = var1;
    var1 = '__esModule';
    var1 = var7.bind(var8)(var3, var1, var4);
    var1 = 0;
    var7 = var6[var1];
    var4 = metroImportAll;
    var1 = undefined;
    var7 = var4.bind(var1)(var7);
    var _closure1_slot3 = var7;
    var4 = 1;
    var4 = var6[var4];
    var4 = var5.bind(var1)(var4);
    var4 = var4.View;
    var _closure1_slot4 = var4;
    var14 = 2;
    var4 = var6[var14];
    var4 = var5.bind(var1)(var4);
    var4 = var4.EmojiCategoryTypes;
    var _closure1_slot5 = var4;
    var4 = 3;
    var4 = var6[var4];
    var4 = var5.bind(var1)(var4);
    var8 = var4.CATEGORY_ICON_RIPPLE_CONFIG;
    var _closure1_slot6 = var8;
    var13 = var4.CATEGORY_ICON_SIZE;
    var11 = var4.NODE_SIZE;
    var4 = 4;
    var4 = var6[var4];
    var4 = var5.bind(var1)(var4);
    var8 = var4.jsx;
    var _closure1_slot7 = var8;
    var4 = var4.jsxs;
    var _closure1_slot8 = var4;
    var4 = 5;
    var4 = var6[var4];
    var9 = var5.bind(var1)(var4);
    var8 = var9.createStyles;
    var4 = {};
    var10 = {'justifyContent': 'center', 'alignItems': 'center'};
    var10['height'] = var11;
    var10['width'] = var11;
    var11 = var11 / var14;
    var10['borderRadius'] = var11;
    var4['itemInner'] = var10;
    var10 = {};
    var11 = 6;
    var15 = var6[var11];
    var15 = var12.bind(var1)(var15);
    var15 = var15.colors;
    var15 = var15.ICON_TRANSPARENT;
    var10['backgroundColor'] = var15;
    var4['fadedItem'] = var10;
    var10 = {};
    var15 = var6[var11];
    var15 = var12.bind(var1)(var15);
    var15 = var15.colors;
    var15 = var15.BACKGROUND_MODIFIER_ACTIVE;
    var10['backgroundColor'] = var15;
    var4['activeItem'] = var10;
    var10 = {};
    var10['height'] = var13;
    var10['width'] = var13;
    var13 = var13 / var14;
    var10['borderRadius'] = var13;
    var4['guildItem'] = var10;
    var10 = {};
    var13 = var6[var11];
    var13 = var12.bind(var1)(var13);
    var13 = var13.colors;
    var13 = var13.BACKGROUND_ACCENT;
    var10['backgroundColor'] = var13;
    var4['guildItemPlaceholder'] = var10;
    var10 = {'width': 12, 'height': 12, 'position': 'absolute', 'bottom': 0, 'end': 0, 'backgroundColor': null, 'borderRadius': null, 'alignItems': 'center', 'justifyContent': 'center'};
    var13 = var6[var11];
    var13 = var12.bind(var1)(var13);
    var13 = var13.colors;
    var13 = var13.BACKGROUND_PRIMARY;
    var10['backgroundColor'] = var13;
    var13 = var6[var11];
    var13 = var12.bind(var1)(var13);
    var13 = var13.radii;
    var13 = var13.round;
    var10['borderRadius'] = var13;
    var4['lockContainer'] = var10;
    var10 = {'width': 7.5, 'height': 7.5};
    var11 = var6[var11];
    var11 = var12.bind(var1)(var11);
    var11 = var11.colors;
    var11 = var11.TEXT_NORMAL;
    var10['tintColor'] = var11;
    var4['lock'] = var10;
    var4 = var8.bind(var9)(var4);
    var _closure1_slot9 = var4;
    var4 = {};
    var8 = 'function EmojiPickerCategoriesItemTsx1(){const{withTiming,categoryIndexActive,index,timingStandard,styleColorActive,styleColorTransparent}=this.__closure;return{opacity:withTiming(categoryIndexActive.get()===index?1:0.5,timingStandard),backgroundColor:categoryIndexActive.get()===index?styleColorActive:styleColorTransparent};}';
    var4['code'] = var8;
    var _closure1_slot10 = var4;
    var4 = var7.memo;
    var2 = function EmojiPickerCategoriesItem(arg1) {
        _fun0001: for(var _fun0001_ip = 0; ; ) switch(_fun0001_ip) {
case 0:
            var2 = arg1;
            var18 = var2.category;
            var _closure2_slot0 = var18;
            var20 = var2.categoryIndexActive;
            var _closure2_slot1 = var20;
            var14 = var2.handlePressCategory;
            var _closure2_slot2 = var14;
            var12 = var2.index;
            var _closure2_slot3 = var12;
            var16 = var2.loadingStyle;
            var9 = var2.locked;
            var6 = var2.style;
            var2 = _closure1_slot9;
            var4 = undefined;
            var15 = var2.bind(var4)();
            var2 = var15.activeItem;
            var19 = var2.backgroundColor;
            var _closure2_slot4 = var19;
            var2 = var15.fadedItem;
            var17 = var2.backgroundColor;
            var _closure2_slot5 = var17;
            var2 = _closure1_slot0;
            var7 = _closure1_slot2;
            var8 = 7;
            var3 = var7[var8];
            var10 = var2.bind(var4)(var3);
            var5 = var10.useAnimatedStyle;
            var3 = function T() {
                _fun0002: for(var _fun0002_ip = 0; ; ) switch(_fun0002_ip) {
case 0:
                    var1 = {};
                    var4 = _closure1_slot0;
                    var5 = _closure1_slot2;
                    var3 = 8;
                    var3 = var5[var3];
                    var8 = undefined;
                    var6 = var4.bind(var8)(var3);
                    var5 = var6.withTiming;
                    var7 = _closure2_slot1;
                    var4 = var7.get;
                    var9 = var4.bind(var7)();
                    var7 = _closure2_slot3;
                    var4 = 0.5;
                    if(!(var9 === var7)) { _fun0002_ip = 2; continue _fun0002 }
case 3:
                    var4 = 1;
case 2:
                    var7 = _closure1_slot0;
                    var9 = _closure1_slot2;
                    var2 = 9;
                    var2 = var9[var2];
                    var2 = var7.bind(var8)(var2);
                    var2 = var2.timingStandard;
                    var2 = var5.bind(var6)(var4, var2);
                    var1['opacity'] = var2;
                    var4 = _closure2_slot1;
                    var2 = var4.get;
                    var4 = var2.bind(var4)();
                    var2 = _closure2_slot3;
                    if(!(var4 !== var2)) { _fun0002_ip = 4; continue _fun0002 }
case 5:
                    var2 = _closure2_slot5;
                    _fun0002_ip = 6; continue _fun0002;
case 4:
                    var2 = _closure2_slot4;
case 6:
                    var1['backgroundColor'] = var2;
                    return var1;
                }
            };
            var11 = {};
            var21 = 8;
            var21 = var7[var21];
            var21 = var2.bind(var4)(var21);
            var21 = var21.withTiming;
            var11['withTiming'] = var21;
            var11['categoryIndexActive'] = var20;
            var11['index'] = var12;
            var20 = 9;
            var20 = var7[var20];
            var20 = var2.bind(var4)(var20);
            var20 = var20.timingStandard;
            var11['timingStandard'] = var20;
            var11['styleColorActive'] = var19;
            var11['styleColorTransparent'] = var17;
            var3['__closure'] = var11;
            var11 = 3335518235623.0;
            var3['__workletHash'] = var11;
            var11 = _closure1_slot10;
            var3['__initData'] = var11;
            var10 = var5.bind(var10)(var3);
            var11 = _closure1_slot3;
            var5 = var11.useCallback;
            var3 = new Array(3);
            var3[0] = var14;
            var3[1] = var12;
            var3[2] = var18;
            var1 = function() {
                var4 = _closure2_slot2;
                var3 = _closure2_slot3;
                var2 = _closure2_slot0;
                var1 = undefined;
                var1 = var4.bind(var1)(var3, var2);
                return var1;
            };
            var5 = var5.bind(var11)(var1, var3);
            var3 = _closure1_slot7;
            var1 = 10;
            var1 = var7[var1];
            var1 = var2.bind(var4)(var1);
            var2 = var1.PressableOpacity;
            var1 = {};
            var7 = _closure1_slot6;
            var1['androidRippleConfig'] = var7;
            var1['style'] = var6;
            var1['onPress'] = var5;
            var5 = 'button';
            var1['accessibilityRole'] = var5;
            var6 = var18.type;
            var5 = _closure1_slot5;
            var5 = var5.GUILD;
            if(!(var6 !== var5)) { _fun0001_ip = 7; continue _fun0001 }
case 8:
            var5 = var18.name;
            _fun0001_ip = 9; continue _fun0001;
case 7:
            var6 = var18.guild;
            var5 = var6.name;
case 9:
            var1['accessibilityLabel'] = var5;
            var7 = _closure1_slot8;
            var6 = _closure1_slot1;
            var5 = _closure1_slot2;
            var5 = var5[var8];
            var5 = var6.bind(var4)(var5);
            var6 = var5.View;
            var5 = {};
            var11 = var15.itemInner;
            var8 = new Array(2);
            var8[0] = var11;
            var8[1] = var10;
            var5['style'] = var8;
            var10 = var18.type;
            var8 = _closure1_slot5;
            var8 = var8.GUILD;
            if(!(var10 !== var8)) { _fun0001_ip = 10; continue _fun0001 }
case 11:
            var11 = _closure1_slot7;
            var10 = _closure1_slot1;
            var12 = _closure1_slot2;
            var8 = 12;
            var8 = var12[var8];
            var10 = var10.bind(var4)(var8);
            var8 = {};
            var12 = var18.id;
            var8['id'] = var12;
            var10 = var11.bind(var4)(var10, var8);
            _fun0001_ip = 12; continue _fun0001;
case 10:
            var12 = _closure1_slot7;
            var11 = _closure1_slot1;
            var17 = _closure1_slot2;
            var14 = 11;
            var8 = var17[var14];
            var11 = var11.bind(var4)(var8);
            var8 = {};
            var18 = var18.guild;
            var8['guild'] = var18;
            var8['loadingStyle'] = var16;
            var16 = _closure1_slot0;
            var14 = var17[var14];
            var14 = var16.bind(var4)(var14);
            var14 = var14.GuildIconSizes;
            var14 = var14.XSMALL;
            var8['size'] = var14;
            var14 = var15.guildItem;
            var8['style'] = var14;
            var10 = var12.bind(var4)(var11, var8);
case 12:
            var8 = new Array(2);
            var8[0] = var10;
            if(!var9) { _fun0001_ip = 13; continue _fun0001 }
case 14:
            var12 = _closure1_slot7;
            var11 = _closure1_slot4;
            var10 = {};
            var14 = var15.lockContainer;
            var10['style'] = var14;
            var14 = _closure1_slot0;
            var16 = _closure1_slot2;
            var13 = 13;
            var13 = var16[var13];
            var13 = var14.bind(var4)(var13);
            var14 = var13.LockIcon;
            var13 = {};
            var15 = var15.lock;
            var13['style'] = var15;
            var13 = var12.bind(var4)(var14, var13);
            var10['children'] = var13;
            var9 = var12.bind(var4)(var11, var10);
case 13:
            var8[1] = var9;
            var5['children'] = var8;
            var5 = var7.bind(var4)(var6, var5);
            var1['children'] = var5;
            var1 = var3.bind(var4)(var2, var1);
            return var1;
        }
    };
    var2 = var4.bind(var7)(var2);
    var4 = 14;
    var4 = var6[var4];
    var6 = var5.bind(var1)(var4);
    var5 = var6.fileFinishedImporting;
    var4 = 'modules/emoji_picker/native/components/categories/EmojiPickerCategoriesItem.tsx';
    var4 = var5.bind(var6)(var4);
    var3['default'] = var2;
    return var1;
})();