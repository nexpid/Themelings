// app/modules/emoji_picker/native/components/categories/EmojiPickerCategoriesBackspaceItem.tsx
export default (function(argFoo, argBar, _, argCor, __, argFre, argPlu) {
    report = argBar;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    var _closure1_slot1 = oscard;
    entity = global;
    option = entity.Object;
    golfie = option.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(option)(zuuluu, entity, tangon);
    entity = 0;
    golfie = oscard[entity];
    tangon = argCor;
    entity = undefined;
    tangon = tangon.bind(entity)(golfie);
    var _closure1_slot2 = tangon;
    tangon = 1;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.Pressable;
    var _closure1_slot3 = tangon;
    tangon = 2;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.NODE_MARGIN;
    var _closure1_slot4 = tangon;
    tangon = 3;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.jsx;
    var _closure1_slot5 = tangon;
    tangon = 7;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/emoji_picker/native/components/categories/EmojiPickerCategoriesBackspaceItem.tsx';
    tangon = report.bind(oscard)(tangon);
    michal = function(argFoo) { // Original name: EmojiPickerCategoriesBackspaceItem
        michal = argFoo;
        yankee = michal.style;
        option = michal.iconStyle;
        michal = michal.onBackspace;
        var _closure2_slot0 = michal;
        tangon = undefined;
        var _closure2_slot2 = tangon;
        zuuluu = _closure1_slot2;
        offset = zuuluu.useRef;
        oscard = _closure1_slot0;
        golfie = _closure1_slot1;
        report = 4;
        verify = golfie[report];
        verify = oscard.bind(tangon)(verify);
        verify = verify.Interval;
        romeon = verify.prototype;
        romeon = Object.create(romeon, {constructor: {value: verify}});
        output = romeon;
        verify = new output[verify](sizing);
        verify = verify instanceof Object ? verify : romeon;
        verify = offset.bind(zuuluu)(verify);
        var _closure2_slot1 = verify;
        verify = zuuluu.useRef;
        report = golfie[report];
        report = oscard.bind(tangon)(report);
        backup = report.DelayedCall;
        report = backup.prototype;
        romeon = Object.create(report, {constructor: {value: backup}});
        offset = 500;
        kiloes = function() {
            michal = _closure2_slot2;
            zuuluu = michal.current;
            michal = zuuluu.cancel;
            michal = michal.bind(zuuluu)();
            michal = _closure2_slot1;
            tangon = michal.current;
            zuuluu = tangon.start;
            michal = _closure2_slot0;
            entity = 50;
            entity = zuuluu.bind(tangon)(entity, michal);
            entity = undefined;
            return entity;
        };
        output = romeon;
        sizing = offset;
        report = new output[backup](sizing, kiloes, backup);
        report = report instanceof Object ? report : romeon;
        report = verify.bind(zuuluu)(report);
        _closure2_slot2 = report;
        romeon = zuuluu.useCallback;
        verify = new Array(1);
        verify[0] = michal;
        report = function() {
            zuuluu = _closure2_slot0;
            entity = undefined;
            zuuluu = zuuluu.bind(entity)();
            michal = _closure2_slot2;
            zuuluu = michal.current;
            michal = zuuluu.delay;
            michal = michal.bind(zuuluu)();
            return entity;
        };
        report = romeon.bind(zuuluu)(report, verify);
        romeon = zuuluu.useCallback;
        verify = new Array(1);
        verify[0] = michal;
        michal = function() {
            michal = _closure2_slot2;
            zuuluu = michal.current;
            michal = zuuluu.cancel;
            michal = michal.bind(zuuluu)();
            michal = _closure2_slot1;
            zuuluu = michal.current;
            michal = zuuluu.stop;
            michal = michal.bind(zuuluu)();
            michal = _closure2_slot0;
            entity = undefined;
            michal = michal.bind(entity)();
            return entity;
        };
        verify = romeon.bind(zuuluu)(michal, verify);
        michal = zuuluu.useEffect;
        entity = function() {
            zuuluu = _closure2_slot1;
            zuuluu = zuuluu.current;
            var _closure3_slot0 = zuuluu;
            michal = _closure2_slot2;
            michal = michal.current;
            var _closure3_slot1 = michal;
            entity = function() {
                zuuluu = _closure3_slot0;
                michal = zuuluu.stop;
                michal = michal.bind(zuuluu)();
                michal = _closure3_slot1;
                entity = michal.cancel;
                entity = entity.bind(michal)();
                entity = undefined;
                return entity;
            };
            return entity;
        };
        entity = michal.bind(zuuluu)(entity);
        zuuluu = _closure1_slot5;
        michal = _closure1_slot3;
        entity = {};
        romeon = {};
        foxtra = _closure1_slot4;
        romeon['top'] = foxtra;
        romeon['bottom'] = foxtra;
        romeon['right'] = foxtra;
        romeon['left'] = foxtra;
        entity['hitSlop'] = romeon;
        entity['style'] = yankee;
        yankee = 'keyboardkey';
        entity['accessibilityRole'] = yankee;
        yankee = 5;
        romeon = golfie[yankee];
        romeon = oscard.bind(tangon)(romeon);
        foxtra = romeon.intl;
        romeon = foxtra.string;
        yankee = golfie[yankee];
        yankee = oscard.bind(tangon)(yankee);
        yankee = yankee.t;
        yankee = yankee.4SnBzM;
        yankee = romeon.bind(foxtra)(yankee);
        entity['accessibilityLabel'] = yankee;
        entity['delayLongPress'] = offset;
        entity['onPressOut'] = verify;
        entity['onLongPress'] = report;
        report = 6;
        report = golfie[report];
        report = oscard.bind(tangon)(report);
        oscard = report.BackspaceIcon;
        report = {};
        golfie = new Array(2);
        golfie[0] = option;
        option = {};
        verify = 0.5;
        option['opacity'] = verify;
        golfie[1] = option;
        report['style'] = golfie;
        report = zuuluu.bind(tangon)(oscard, report);
        entity['children'] = report;
        entity = zuuluu.bind(tangon)(michal, entity);
        return entity;
    };
    zuuluu['default'] = michal;
    return entity;
})();