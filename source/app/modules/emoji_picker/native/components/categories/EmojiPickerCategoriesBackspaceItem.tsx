// app/modules/emoji_picker/native/components/categories/EmojiPickerCategoriesBackspaceItem.tsx
export default (function(argFoo, argBar, _, argCorge, __, argFred, argPlugh) {
    report = argBar;
    zulu = argFred;
    oscar = argPlugh;
    var _closure1_slot0 = report;
    var _closure1_slot1 = oscar;
    entity = global;
    options = entity.Object;
    golf = options.defineProperty;
    tango = {};
    entity = true;
    tango['value'] = entity;
    entity = '__esModule';
    entity = golf.bind(options)(zulu, entity, tango);
    entity = 0;
    golf = oscar[entity];
    tango = argCorge;
    entity = undefined;
    tango = tango.bind(entity)(golf);
    var _closure1_slot2 = tango;
    tango = 1;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.Pressable;
    var _closure1_slot3 = tango;
    tango = 2;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.NODE_MARGIN;
    var _closure1_slot4 = tango;
    tango = 3;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.jsx;
    var _closure1_slot5 = tango;
    tango = 7;
    tango = oscar[tango];
    oscar = report.bind(entity)(tango);
    report = oscar.fileFinishedImporting;
    tango = 'modules/emoji_picker/native/components/categories/EmojiPickerCategoriesBackspaceItem.tsx';
    tango = report.bind(oscar)(tango);
    mike = function(argFoo) { // Original name: EmojiPickerCategoriesBackspaceItem
        mike = argFoo;
        yankee = mike.style;
        options = mike.iconStyle;
        mike = mike.onBackspace;
        var _closure2_slot0 = mike;
        tango = undefined;
        var _closure2_slot2 = tango;
        zulu = _closure1_slot2;
        offset = zulu.useRef;
        oscar = _closure1_slot0;
        golf = _closure1_slot1;
        report = 4;
        verify = golf[report];
        verify = oscar.bind(tango)(verify);
        verify = verify.Interval;
        romeo = verify.prototype;
        romeo = Object.create(romeo, {constructor: {value: verify}});
        output = romeo;
        verify = new output[verify](sizing);
        verify = verify instanceof Object ? verify : romeo;
        verify = offset.bind(zulu)(verify);
        var _closure2_slot1 = verify;
        verify = zulu.useRef;
        report = golf[report];
        report = oscar.bind(tango)(report);
        backup = report.DelayedCall;
        report = backup.prototype;
        romeo = Object.create(report, {constructor: {value: backup}});
        offset = 500;
        kilo = function() {
            mike = _closure2_slot2;
            zulu = mike.current;
            mike = zulu.cancel;
            mike = mike.bind(zulu)();
            mike = _closure2_slot1;
            tango = mike.current;
            zulu = tango.start;
            mike = _closure2_slot0;
            entity = 50;
            entity = zulu.bind(tango)(entity, mike);
            entity = undefined;
            return entity;
        };
        output = romeo;
        sizing = offset;
        report = new output[backup](sizing, kilo, backup);
        report = report instanceof Object ? report : romeo;
        report = verify.bind(zulu)(report);
        _closure2_slot2 = report;
        romeo = zulu.useCallback;
        verify = new Array(1);
        verify[0] = mike;
        report = function() {
            zulu = _closure2_slot0;
            entity = undefined;
            zulu = zulu.bind(entity)();
            mike = _closure2_slot2;
            zulu = mike.current;
            mike = zulu.delay;
            mike = mike.bind(zulu)();
            return entity;
        };
        report = romeo.bind(zulu)(report, verify);
        romeo = zulu.useCallback;
        verify = new Array(1);
        verify[0] = mike;
        mike = function() {
            mike = _closure2_slot2;
            zulu = mike.current;
            mike = zulu.cancel;
            mike = mike.bind(zulu)();
            mike = _closure2_slot1;
            zulu = mike.current;
            mike = zulu.stop;
            mike = mike.bind(zulu)();
            mike = _closure2_slot0;
            entity = undefined;
            mike = mike.bind(entity)();
            return entity;
        };
        verify = romeo.bind(zulu)(mike, verify);
        mike = zulu.useEffect;
        entity = function() {
            zulu = _closure2_slot1;
            zulu = zulu.current;
            var _closure3_slot0 = zulu;
            mike = _closure2_slot2;
            mike = mike.current;
            var _closure3_slot1 = mike;
            entity = function() {
                zulu = _closure3_slot0;
                mike = zulu.stop;
                mike = mike.bind(zulu)();
                mike = _closure3_slot1;
                entity = mike.cancel;
                entity = entity.bind(mike)();
                entity = undefined;
                return entity;
            };
            return entity;
        };
        entity = mike.bind(zulu)(entity);
        zulu = _closure1_slot5;
        mike = _closure1_slot3;
        entity = {};
        romeo = {};
        foxtrot = _closure1_slot4;
        romeo['top'] = foxtrot;
        romeo['bottom'] = foxtrot;
        romeo['right'] = foxtrot;
        romeo['left'] = foxtrot;
        entity['hitSlop'] = romeo;
        entity['style'] = yankee;
        yankee = 'keyboardkey';
        entity['accessibilityRole'] = yankee;
        yankee = 5;
        romeo = golf[yankee];
        romeo = oscar.bind(tango)(romeo);
        foxtrot = romeo.intl;
        romeo = foxtrot.string;
        yankee = golf[yankee];
        yankee = oscar.bind(tango)(yankee);
        yankee = yankee.t;
        yankee = yankee.4SnBzM;
        yankee = romeo.bind(foxtrot)(yankee);
        entity['accessibilityLabel'] = yankee;
        entity['delayLongPress'] = offset;
        entity['onPressOut'] = verify;
        entity['onLongPress'] = report;
        report = 6;
        report = golf[report];
        report = oscar.bind(tango)(report);
        oscar = report.BackspaceIcon;
        report = {};
        golf = new Array(2);
        golf[0] = options;
        options = {};
        verify = 0.5;
        options['opacity'] = verify;
        golf[1] = options;
        report['style'] = golf;
        report = zulu.bind(tango)(oscar, report);
        entity['children'] = report;
        entity = zulu.bind(tango)(mike, entity);
        return entity;
    };
    zulu['default'] = mike;
    return entity;
})();