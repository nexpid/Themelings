// app/modules/emoji_picker/native/components/EmojiPickerListConstants.tsx
export default (function(_, argBar, __, ___, ____, argFre, argPlu) {
    oscard = argBar;
    zuuluu = argFre;
    golfie = argPlu;
    entity = global;
    report = entity.Object;
    tangon = report.defineProperty;
    michal = {};
    entity = true;
    michal['value'] = entity;
    entity = '__esModule';
    entity = tangon.bind(report)(zuuluu, entity, michal);
    option = 0;
    michal = golfie[option];
    entity = undefined;
    michal = oscard.bind(entity)(michal);
    michal = michal.PADDING_VERTICAL;
    verify = 2;
    report = verify * michal;
    michal = {};
    michal['EMOJI'] = option;
    tangon = 'EMOJI';
    michal[option] = tangon;
    tangon = 1;
    michal['NSFW'] = tangon;
    option = 'NSFW';
    michal[tangon] = option;
    michal['NATIVE_SECTION'] = verify;
    option = 'NATIVE_SECTION';
    michal[verify] = option;
    tangon = golfie[tangon];
    golfie = oscard.bind(entity)(tangon);
    oscard = golfie.fileFinishedImporting;
    tangon = 'modules/emoji_picker/native/components/EmojiPickerListConstants.tsx';
    tangon = oscard.bind(golfie)(tangon);
    tangon = 33;
    zuuluu['IMAGE_SIZE'] = tangon;
    oscard = 8;
    zuuluu['LABEL_MARGIN'] = oscard;
    oscard = 16;
    zuuluu['LABEL_HEIGHT'] = oscard;
    tangon = tangon + report;
    zuuluu['ROW_HEIGHT'] = tangon;
    tangon = 4;
    zuuluu['SPACER_TOP_HEIGHT'] = tangon;
    zuuluu['EmojiPickerRenderingDataType'] = michal;
    michal = 40;
    zuuluu['NSFW_ROW_HEIGHT'] = michal;
    return entity;
})();