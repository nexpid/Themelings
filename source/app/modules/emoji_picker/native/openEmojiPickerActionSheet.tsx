// app/modules/emoji_picker/native/openEmojiPickerActionSheet.tsx
export default (function(argFoo, argBar, argBaz, _, __, argFre, argPlu) {
    report = argBar;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    entity = argBaz;
    var _closure1_slot1 = entity;
    var _closure1_slot2 = oscard;
    entity = global;
    option = entity.Object;
    golfie = option.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(option)(zuuluu, entity, tangon);
    entity = 0;
    tangon = oscard[entity];
    entity = undefined;
    tangon = report.bind(entity)(tangon);
    tangon = tangon.EmojiInteractionPoint;
    var _closure1_slot3 = tangon;
    tangon = 5;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/emoji_picker/native/openEmojiPickerActionSheet.tsx';
    tangon = report.bind(oscard)(tangon);
    tangon = 'EmojiPickerActionSheet';
    zuuluu['EMOJI_PICKER_ACTION_SHEET_KEY'] = tangon;
    michal = function(argFoo) { // Original name: openEmojiPickerActionSheet
        tangon = _closure1_slot0;
        michal = _closure1_slot2;
        entity = 1;
        report = michal[entity];
        entity = undefined;
        golfie = tangon.bind(entity)(report);
        oscard = golfie.initiateEmojiInteraction;
        report = _closure1_slot3;
        report = report.EmojiPickerActionSheetOpened;
        report = oscard.bind(golfie)(report);
        report = _closure1_slot1;
        zuuluu = 2;
        zuuluu = michal[zuuluu];
        oscard = report.bind(entity)(zuuluu);
        report = oscard.openLazy;
        zuuluu = 4;
        zuuluu = michal[zuuluu];
        tangon = tangon.bind(entity)(zuuluu);
        zuuluu = 3;
        zuuluu = michal[zuuluu];
        michal = michal.paths;
        tangon = tangon.bind(entity)(zuuluu, michal);
        zuuluu = 'EmojiPickerActionSheet';
        michal = argFoo;
        michal = report.bind(oscard)(tangon, zuuluu, michal);
        return entity;
    };
    zuuluu['openEmojiPickerActionSheet'] = michal;
    return entity;
})();