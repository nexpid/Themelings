// app/modules/webauthn/experiments/PasskeyUpsellOnLoginP2Experiment.tsx
export default (function(_, argBar, __, ___, ____, argFre, argPlu) {
    report = argBar;
    zuuluu = argFre;
    oscard = argPlu;
    entity = global;
    golfie = entity.Object;
    tangon = golfie.defineProperty;
    michal = {};
    entity = true;
    michal['value'] = entity;
    entity = '__esModule';
    entity = tangon.bind(golfie)(zuuluu, entity, michal);
    entity = 0;
    michal = oscard[entity];
    entity = undefined;
    golfie = report.bind(entity)(michal);
    tangon = golfie.createExperiment;
    michal = {'id': '2024-07_passkey_upsell_on_login_p2', 'label': 'Passkey Upsell on Login Phase 2', 'kind': 'user'};
    offset = 1;
    option = oscard[offset];
    option = report.bind(entity)(option);
    option = option.PasskeyUpsellOnLoginExperimentState;
    option = option.None;
    michal['defaultConfig'] = option;
    verify = {'id': 0, 'label': 'Control'};
    option = oscard[offset];
    option = report.bind(entity)(option);
    option = option.PasskeyUpsellOnLoginExperimentState;
    option = option.Control;
    verify['config'] = option;
    option = new Array(2);
    option[0] = verify;
    verify = {'id': 1, 'label': 'Enabled with Sheet'};
    offset = oscard[offset];
    offset = report.bind(entity)(offset);
    offset = offset.PasskeyUpsellOnLoginExperimentState;
    offset = offset.Sheet;
    verify['config'] = offset;
    option[1] = verify;
    michal['treatments'] = option;
    michal = tangon.bind(golfie)(michal);
    tangon = 2;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/webauthn/experiments/PasskeyUpsellOnLoginP2Experiment.tsx';
    tangon = report.bind(oscard)(tangon);
    zuuluu['default'] = michal;
    return entity;
})();