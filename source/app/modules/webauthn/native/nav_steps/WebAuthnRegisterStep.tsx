// app/modules/webauthn/native/nav_steps/WebAuthnRegisterStep.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    report = argBar;
    verify = argBaz;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    var _closure1_slot1 = verify;
    var _closure1_slot2 = oscard;
    entity = function(argFoo) { // Original name: AndroidPasskeyRadioGroup
        entity = argFoo;
        verify = entity.authenticatorSelection;
        michal = entity.onChange;
        var _closure2_slot0 = michal;
        option = entity.registering;
        michal = _closure1_slot9;
        tangon = undefined;
        romeon = michal.bind(tangon)();
        michal = {};
        zuuluu = _closure1_slot10;
        zuuluu = zuuluu.PASSKEY_CREDENTIAL_MANAGER;
        michal['value'] = zuuluu;
        foxtra = _closure1_slot0;
        golfie = _closure1_slot2;
        zuuluu = 8;
        report = golfie[zuuluu];
        report = foxtra.bind(tangon)(report);
        yankee = report.intl;
        oscard = yankee.string;
        report = golfie[zuuluu];
        report = foxtra.bind(tangon)(report);
        report = report.t;
        report = report.JQbo8P;
        report = oscard.bind(yankee)(report);
        michal['name'] = report;
        yankee = new Array(3);
        yankee[0] = michal;
        michal = {};
        report = _closure1_slot10;
        report = report.PASSKEY_DEVICE;
        michal['value'] = report;
        report = golfie[zuuluu];
        report = foxtra.bind(tangon)(report);
        backup = report.intl;
        oscard = backup.string;
        report = golfie[zuuluu];
        report = foxtra.bind(tangon)(report);
        report = report.t;
        report = report.GjBNMj;
        report = oscard.bind(backup)(report);
        michal['name'] = report;
        yankee[1] = michal;
        michal = {};
        report = _closure1_slot10;
        report = report.OTHER_AND_ANDROID_NONDISCOVERABLE;
        michal['value'] = report;
        report = golfie[zuuluu];
        report = foxtra.bind(tangon)(report);
        oscard = report.intl;
        report = oscard.string;
        zuuluu = golfie[zuuluu];
        zuuluu = foxtra.bind(tangon)(zuuluu);
        zuuluu = zuuluu.t;
        zuuluu = zuuluu.OhC77+;
        zuuluu = report.bind(oscard)(zuuluu);
        michal['name'] = zuuluu;
        yankee[2] = michal;
        zuuluu = _closure1_slot7;
        oscard = _closure1_slot1;
        report = 9;
        entity = golfie[report];
        michal = oscard.bind(tangon)(entity);
        entity = {};
        romeon = romeon.radioItem;
        entity['style'] = romeon;
        entity['options'] = yankee;
        offset = function(argFoo) { // Original name: onChange
            entity = argFoo;
            zuuluu = entity.value;
            michal = _closure2_slot0;
            entity = undefined;
            entity = michal.bind(entity)(zuuluu);
            return entity;
        };
        entity['onChange'] = offset;
        entity['value'] = verify;
        entity['disabled'] = option;
        report = golfie[report];
        report = oscard.bind(tangon)(report);
        report = report.Sizes;
        report = report.LARGE;
        entity['size'] = report;
        report = true;
        entity['withSpacing'] = report;
        entity = zuuluu.bind(tangon)(michal, entity);
        return entity;
    };
    var _closure1_slot12 = entity;
    entity = global;
    option = entity.Object;
    golfie = option.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(option)(zuuluu, entity, tangon);
    yankee = 0;
    tangon = oscard[yankee];
    entity = undefined;
    tangon = verify.bind(entity)(tangon);
    var _closure1_slot3 = tangon;
    offset = 1;
    golfie = oscard[offset];
    tangon = argCor;
    tangon = tangon.bind(entity)(golfie);
    var _closure1_slot4 = tangon;
    golfie = 2;
    tangon = oscard[golfie];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.View;
    var _closure1_slot5 = tangon;
    tangon = 3;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.WebAuthnScreens;
    var _closure1_slot6 = tangon;
    tangon = 4;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    option = tangon.jsx;
    var _closure1_slot7 = option;
    tangon = tangon.jsxs;
    var _closure1_slot8 = tangon;
    tangon = 5;
    tangon = oscard[tangon];
    romeon = report.bind(entity)(tangon);
    option = romeon.createStyles;
    tangon = {};
    foxtra = {'flex': 1, 'flexDirection': 'column', 'alignItems': 'stretch', 'justifyContent': 'space-between', 'marginLeft': 16, 'marginRight': 16, 'marginTop': 16};
    tangon['flexContainer'] = foxtra;
    foxtra = {'display': 'flex', 'alignItems': 'center'};
    tangon['centerFlex'] = foxtra;
    foxtra = {'marginTop': 16, 'textAlign': 'center'};
    tangon['margin'] = foxtra;
    foxtra = {};
    backup = 6;
    kiloes = oscard[backup];
    kiloes = verify.bind(entity)(kiloes);
    kiloes = kiloes.colors;
    kiloes = kiloes.BACKGROUND_SECONDARY;
    foxtra['backgroundColor'] = kiloes;
    backup = oscard[backup];
    backup = verify.bind(entity)(backup);
    backup = backup.radii;
    backup = backup.md;
    foxtra['borderRadius'] = backup;
    tangon['radioItem'] = foxtra;
    tangon = option.bind(romeon)(tangon);
    var _closure1_slot9 = tangon;
    option = {};
    option['PASSKEY_CREDENTIAL_MANAGER'] = yankee;
    tangon = 'PASSKEY_CREDENTIAL_MANAGER';
    option[yankee] = tangon;
    option['PASSKEY_DEVICE'] = offset;
    tangon = 'PASSKEY_DEVICE';
    option[offset] = tangon;
    option['OTHER_AND_ANDROID_NONDISCOVERABLE'] = golfie;
    tangon = 'OTHER_AND_ANDROID_NONDISCOVERABLE';
    option[golfie] = tangon;
    var _closure1_slot10 = option;
    tangon = {};
    yankee = option.PASSKEY_CREDENTIAL_MANAGER;
    golfie = 7;
    offset = oscard[golfie];
    offset = verify.bind(entity)(offset);
    offset = offset.registerPasskey;
    tangon[yankee] = offset;
    yankee = option.PASSKEY_DEVICE;
    offset = oscard[golfie];
    offset = verify.bind(entity)(offset);
    offset = offset.registerAndroidDevicePasskey;
    tangon[yankee] = offset;
    option = option.OTHER_AND_ANDROID_NONDISCOVERABLE;
    golfie = oscard[golfie];
    golfie = verify.bind(entity)(golfie);
    golfie = golfie.registerSecurityKey;
    tangon[option] = golfie;
    var _closure1_slot11 = tangon;
    tangon = 17;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/webauthn/native/nav_steps/WebAuthnRegisterStep.tsx';
    tangon = report.bind(oscard)(tangon);
    michal = function() { // Original name: WebAuthnRegisterStep
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            report = _closure1_slot0;
            zuuluu = _closure1_slot2;
            entity = 10;
            entity = zuuluu[entity];
            tangon = undefined;
            michal = report.bind(tangon)(entity);
            entity = michal.useNavigation;
            michal = entity.bind(michal)();
            var _closure2_slot0 = michal;
            entity = _closure1_slot9;
            output = entity.bind(tangon)();
            kiloes = _closure1_slot4;
            oscard = kiloes.useState;
            entity = false;
            entity = oscard.bind(kiloes)(entity);
            option = _closure1_slot3;
            yankee = 2;
            entity = option.bind(tangon)(entity, yankee);
            verify = 0;
            foxtra = entity[verify];
            golfie = 1;
            entity = entity[golfie];
            var _closure2_slot1 = entity;
            offset = kiloes.useState;
            oscard = '';
            oscard = offset.bind(kiloes)(oscard);
            oscard = option.bind(tangon)(oscard, yankee);
            echoed = oscard[verify];
            oscard = oscard[golfie];
            var _closure2_slot2 = oscard;
            option = 11;
            zuuluu = zuuluu[option];
            report = report.bind(tangon)(zuuluu);
            zuuluu = report.isAndroid;
            report = zuuluu.bind(report)();
            zuuluu = _closure1_slot10;
            if(report) { _fun00002_ip = 163; continue _fun00001 }
 155:
            offset = zuuluu.OTHER_AND_ANDROID_NONDISCOVERABLE;
            _fun00002_ip = 169; continue _fun00001;
 163:
            offset = zuuluu.PASSKEY_CREDENTIAL_MANAGER;
 169:
            report = _closure1_slot4;
            zuuluu = report.useState;
            offset = zuuluu.bind(report)(offset);
            zuuluu = _closure1_slot3;
            zuuluu = zuuluu.bind(tangon)(offset, yankee);
            yankee = zuuluu[verify];
            var _closure2_slot3 = yankee;
            offset = zuuluu[golfie];
            golfie = report.useCallback;
            zuuluu = new Array(1);
            zuuluu[0] = michal;
            michal = function(argFoo) {
                tangon = _closure2_slot0;
                zuuluu = tangon.push;
                entity = _closure1_slot6;
                michal = entity.NAME;
                entity = argFoo;
                entity = zuuluu.bind(tangon)(michal, entity);
                entity = undefined;
                return entity;
            };
            golfie = golfie.bind(report)(michal, zuuluu);
            var _closure2_slot4 = golfie;
            verify = report.useMemo;
            zuuluu = new Array(1);
            zuuluu[0] = yankee;
            michal = function() {
                michal = _closure1_slot11;
                entity = _closure2_slot3;
                entity = michal[entity];
                return entity;
            };
            michal = verify.bind(report)(michal, zuuluu);
            var _closure2_slot5 = michal;
            zuuluu = report.useMemo;
            michal = new Array(3);
            michal[0] = golfie;
            michal[1] = oscard;
            michal[2] = entity;
            entity = function() {
                entity = {};
                zuuluu = _closure2_slot4;
                entity['onRegisterSuccess'] = zuuluu;
                zuuluu = _closure2_slot2;
                entity['setError'] = zuuluu;
                michal = _closure2_slot1;
                entity['setRegistering'] = michal;
                return entity;
            };
            entity = zuuluu.bind(report)(entity, michal);
            var _closure2_slot6 = entity;
            zuuluu = _closure1_slot8;
            kiloes = _closure1_slot0;
            verify = _closure1_slot2;
            entity = 12;
            entity = verify[entity];
            entity = kiloes.bind(tangon)(entity);
            michal = entity.SafeAreaPaddingView;
            entity = {'bottom': true, 'left': true, 'right': true};
            report = output.flexContainer;
            entity['style'] = report;
            oscard = _closure1_slot5;
            report = {};
            golfie = output.centerFlex;
            report['style'] = golfie;
            result = _closure1_slot7;
            golfie = 13;
            golfie = verify[golfie];
            golfie = kiloes.bind(tangon)(golfie);
            sizing = golfie.KeyImage;
            golfie = {};
            sizing = result.bind(tangon)(sizing, golfie);
            golfie = new Array(3);
            golfie[0] = sizing;
            sizing = _closure1_slot7;
            update = 14;
            verify = verify[update];
            verify = kiloes.bind(tangon)(verify);
            kiloes = verify.Text;
            verify = {};
            output = output.margin;
            verify['style'] = output;
            output = 'text-md/normal';
            verify['variant'] = output;
            source = _closure1_slot0;
            output = _closure1_slot2;
            result = 8;
            ctrled = output[result];
            ctrled = source.bind(tangon)(ctrled);
            vacuum = ctrled.intl;
            ctrled = vacuum.string;
            output = output[result];
            output = source.bind(tangon)(output);
            source = output.t;
            if(foxtra) { _fun00002_ip = 516; continue _fun00001 }
 501:
            output = source.Lh5vTU;
            output = ctrled.bind(vacuum)(output);
            _fun00002_ip = 529; continue _fun00001;
 516:
            source = source.aVMiX1;
            output = ctrled.bind(vacuum)(source);
 529:
            verify['children'] = output;
            verify = sizing.bind(tangon)(kiloes, verify);
            golfie[1] = verify;
            verify = null;
            verify = verify != echoed;
            if(!verify) { _fun00002_ip = 602; continue _fun00001 }
 552:
            output = _closure1_slot7;
            sizing = _closure1_slot0;
            kiloes = _closure1_slot2;
            kiloes = kiloes[update];
            kiloes = sizing.bind(tangon)(kiloes);
            sizing = kiloes.Text;
            kiloes = {'variant': 'text-md/normal', 'color': 'status-danger'};
            kiloes['children'] = echoed;
            verify = output.bind(tangon)(sizing, kiloes);
 602:
            golfie[2] = verify;
            report['children'] = golfie;
            oscard = zuuluu.bind(tangon)(oscard, report);
            report = new Array(3);
            report[0] = oscard;
            golfie = _closure1_slot0;
            oscard = _closure1_slot2;
            oscard = oscard[option];
            golfie = golfie.bind(tangon)(oscard);
            oscard = golfie.isAndroid;
            oscard = oscard.bind(golfie)();
            if(!oscard) { _fun00002_ip = 684; continue _fun00001 }
 653:
            verify = _closure1_slot7;
            option = _closure1_slot12;
            golfie = {};
            golfie['authenticatorSelection'] = yankee;
            golfie['registering'] = foxtra;
            golfie['onChange'] = offset;
            oscard = verify.bind(tangon)(option, golfie);
 684:
            report[1] = oscard;
            option = _closure1_slot7;
            offset = _closure1_slot0;
            kiloes = _closure1_slot2;
            oscard = 15;
            oscard = kiloes[oscard];
            oscard = offset.bind(tangon)(oscard);
            golfie = oscard.ButtonGroup;
            oscard = {};
            yankee = _closure1_slot7;
            verify = 16;
            verify = kiloes[verify];
            verify = offset.bind(tangon)(verify);
            offset = verify.Button;
            verify = {};
            kiloes = _closure1_slot0;
            backup = _closure1_slot2;
            sizing = backup[result];
            sizing = kiloes.bind(tangon)(sizing);
            output = sizing.intl;
            sizing = output.string;
            backup = backup[result];
            backup = kiloes.bind(tangon)(backup);
            kiloes = backup.t;
            if(foxtra) { _fun00002_ip = 803; continue _fun00001 }
 788:
            backup = kiloes.oibaQU;
            backup = sizing.bind(output)(backup);
            _fun00002_ip = 814; continue _fun00001;
 803:
            kiloes = kiloes.wePEBA;
            backup = sizing.bind(output)(kiloes);
 814:
            verify['text'] = backup;
            verify['disabled'] = foxtra;
            verify['loading'] = foxtra;
            romeon = function() { // Original name: onPress
                zuuluu = _closure2_slot5;
                michal = _closure2_slot6;
                entity = undefined;
                entity = zuuluu.bind(entity)(michal);
                return entity;
            };
            verify['onPress'] = romeon;
            romeon = 'lg';
            verify['size'] = romeon;
            verify = yankee.bind(tangon)(offset, verify);
            oscard['children'] = verify;
            oscard = option.bind(tangon)(golfie, oscard);
            report[2] = oscard;
            entity['children'] = report;
            entity = zuuluu.bind(tangon)(michal, entity);
            return entity;
        }
    };
    zuuluu['default'] = michal;
    return entity;
})();