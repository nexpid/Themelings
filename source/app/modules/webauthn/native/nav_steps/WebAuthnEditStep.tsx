// app/modules/webauthn/native/nav_steps/WebAuthnEditStep.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    report = argBar;
    yankee = argBaz;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    var _closure1_slot1 = yankee;
    var _closure1_slot2 = oscard;
    entity = global;
    option = entity.Object;
    golfie = option.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(option)(zuuluu, entity, tangon);
    entity = 0;
    tangon = oscard[entity];
    entity = undefined;
    tangon = yankee.bind(entity)(tangon);
    var _closure1_slot3 = tangon;
    tangon = 1;
    golfie = oscard[tangon];
    tangon = argCor;
    tangon = tangon.bind(entity)(golfie);
    var _closure1_slot4 = tangon;
    tangon = 2;
    golfie = oscard[tangon];
    golfie = report.bind(entity)(golfie);
    golfie = golfie.jsx;
    var _closure1_slot5 = golfie;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.jsxs;
    var _closure1_slot6 = tangon;
    tangon = 3;
    tangon = oscard[tangon];
    option = report.bind(entity)(tangon);
    golfie = option.createStyles;
    tangon = {};
    verify = {};
    offset = 4;
    romeon = oscard[offset];
    romeon = yankee.bind(entity)(romeon);
    romeon = romeon.spacing;
    romeon = romeon.PX_16;
    verify['marginBottom'] = romeon;
    tangon['inputField'] = verify;
    verify = {};
    offset = oscard[offset];
    offset = yankee.bind(entity)(offset);
    offset = offset.spacing;
    offset = offset.PX_16;
    verify['paddingHorizontal'] = offset;
    tangon['form'] = verify;
    tangon = golfie.bind(option)(tangon);
    var _closure1_slot7 = tangon;
    tangon = 15;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/webauthn/native/nav_steps/WebAuthnEditStep.tsx';
    tangon = report.bind(oscard)(tangon);
    michal = function(argFoo) { // Original name: EditCredentialModal
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            entity = argFoo;
            verify = entity.credential;
            var _closure2_slot0 = verify;
            entity = _closure1_slot7;
            tangon = undefined;
            result = entity.bind(tangon)();
            golfie = _closure1_slot0;
            sizing = _closure1_slot2;
            entity = 5;
            entity = sizing[entity];
            michal = golfie.bind(tangon)(entity);
            entity = michal.useNavigation;
            entity = entity.bind(michal)();
            var _closure2_slot1 = entity;
            report = _closure1_slot4;
            michal = report.useState;
            update = false;
            michal = michal.bind(report)(update);
            backup = _closure1_slot3;
            option = 2;
            michal = backup.bind(tangon)(michal, option);
            oscard = 0;
            yankee = michal[oscard];
            zuuluu = 1;
            michal = michal[zuuluu];
            var _closure2_slot2 = michal;
            michal = report.useState;
            kiloes = '';
            michal = michal.bind(report)(kiloes);
            michal = backup.bind(tangon)(michal, option);
            foxtra = michal[oscard];
            var _closure2_slot3 = foxtra;
            echoed = michal[zuuluu];
            output = report.useState;
            michal = null;
            michal = output.bind(report)(michal);
            michal = backup.bind(tangon)(michal, option);
            backup = michal[oscard];
            michal = michal[zuuluu];
            var _closure2_slot4 = michal;
            zuuluu = report.useLayoutEffect;
            michal = new Array(1);
            michal[0] = entity;
            entity = function() {
                tangon = _closure2_slot1;
                zuuluu = tangon.setOptions;
                michal = {};
                oscard = _closure1_slot0;
                report = _closure1_slot2;
                entity = 6;
                report = report[entity];
                entity = undefined;
                golfie = oscard.bind(entity)(report);
                oscard = golfie.getHeaderBackButton;
                report = function() {
                    michal = _closure2_slot1;
                    entity = michal.pop;
                    entity = entity.bind(michal)();
                    entity = undefined;
                    return entity;
                };
                report = oscard.bind(golfie)(report);
                michal['headerLeft'] = report;
                michal = zuuluu.bind(tangon)(michal);
                return entity;
            };
            entity = zuuluu.bind(report)(entity, michal);
            zuuluu = _closure1_slot6;
            oscard = 7;
            entity = sizing[oscard];
            entity = golfie.bind(tangon)(entity);
            michal = entity.Form;
            entity = {};
            report = result.form;
            entity['style'] = report;
            option = _closure1_slot5;
            report = sizing[oscard];
            report = golfie.bind(tangon)(report);
            output = report.FormInput;
            report = {};
            report['showTopContainer'] = update;
            report['value'] = foxtra;
            report['onChange'] = echoed;
            result = result.inputField;
            report['style'] = result;
            report['error'] = backup;
            backup = 8;
            result = sizing[backup];
            result = golfie.bind(tangon)(result);
            update = result.intl;
            echoed = update.string;
            result = sizing[backup];
            result = golfie.bind(tangon)(result);
            result = result.t;
            result = result.Jzd+z8;
            result = echoed.bind(update)(result);
            report['title'] = result;
            verify = verify.name;
            report['placeholder'] = verify;
            report['disabled'] = yankee;
            verify = 9;
            verify = sizing[verify];
            verify = golfie.bind(tangon)(verify);
            verify = verify.ClearButtonVisibility;
            verify = verify.WITH_CONTENT;
            report['clearButtonVisibility'] = verify;
            verify = true;
            report['autoFocus'] = verify;
            report['showBorder'] = verify;
            report['required'] = verify;
            report['large'] = verify;
            output = option.bind(tangon)(output, report);
            report = new Array(3);
            report[0] = output;
            oscard = sizing[oscard];
            oscard = golfie.bind(tangon)(oscard);
            output = oscard.FormDivider;
            oscard = {};
            oscard = option.bind(tangon)(output, oscard);
            report[1] = oscard;
            oscard = 10;
            oscard = sizing[oscard];
            oscard = golfie.bind(tangon)(oscard);
            golfie = oscard.Button;
            oscard = {};
            romeon = function() { // Original name: onPress
                report = _closure2_slot2;
                entity = undefined;
                tangon = true;
                tangon = report.bind(entity)(tangon);
                report = _closure2_slot4;
                tangon = null;
                tangon = report.bind(entity)(tangon);
                report = _closure1_slot0;
                oscard = _closure1_slot2;
                tangon = 11;
                tangon = oscard[tangon];
                oscard = report.bind(entity)(tangon);
                report = oscard.editWebAuthnCredential;
                tangon = _closure2_slot0;
                tangon = tangon.id;
                zuuluu = _closure2_slot3;
                report = report.bind(oscard)(tangon, zuuluu);
                tangon = report.then;
                zuuluu = function() {
                    option = _closure1_slot1;
                    golfie = _closure1_slot2;
                    entity = 12;
                    michal = golfie[entity];
                    entity = undefined;
                    tangon = option.bind(entity)(michal);
                    zuuluu = tangon.open;
                    michal = {};
                    oscard = 'WEBAUTHN_CREDENTIAL_EDIT_SUCCESS_TOAST_KEY';
                    michal['key'] = oscard;
                    oscard = _closure1_slot0;
                    report = 8;
                    verify = golfie[report];
                    verify = oscard.bind(entity)(verify);
                    offset = verify.intl;
                    verify = offset.string;
                    report = golfie[report];
                    report = oscard.bind(entity)(report);
                    report = report.t;
                    report = report.IV13mJ;
                    report = verify.bind(offset)(report);
                    michal['content'] = report;
                    report = 13;
                    report = golfie[report];
                    report = option.bind(entity)(report);
                    michal['icon'] = report;
                    report = 14;
                    report = golfie[report];
                    report = oscard.bind(entity)(report);
                    report = report.CircleCheckIcon;
                    michal['IconComponent'] = report;
                    report = 'status-positive';
                    michal['iconColor'] = report;
                    michal = zuuluu.bind(tangon)(michal);
                    zuuluu = _closure2_slot1;
                    michal = zuuluu.popToTop;
                    michal = michal.bind(zuuluu)();
                    return entity;
                };
                report = tangon.bind(report)(zuuluu);
                tangon = report.catch;
                zuuluu = function(argFoo) {
                    zuuluu = _closure2_slot4;
                    entity = argFoo;
                    entity = entity.body;
                    michal = entity.message;
                    entity = undefined;
                    michal = zuuluu.bind(entity)(michal);
                    return entity;
                };
                tangon = tangon.bind(report)(zuuluu);
                zuuluu = tangon.finally;
                michal = function() {
                    zuuluu = _closure2_slot2;
                    entity = undefined;
                    michal = false;
                    michal = zuuluu.bind(entity)(michal);
                    return entity;
                };
                michal = zuuluu.bind(tangon)(michal);
                return entity;
            };
            oscard['onPress'] = romeon;
            romeon = yankee;
            if(romeon) { _fun00002_ip = 478; continue _fun00001 }
 474:
            romeon = kiloes === foxtra;
 478:
            oscard['disabled'] = romeon;
            oscard['loading'] = yankee;
            yankee = 'lg';
            oscard['size'] = yankee;
            foxtra = _closure1_slot0;
            offset = _closure1_slot2;
            yankee = offset[backup];
            yankee = foxtra.bind(tangon)(yankee);
            romeon = yankee.intl;
            yankee = romeon.string;
            offset = offset[backup];
            offset = foxtra.bind(tangon)(offset);
            offset = offset.t;
            offset = offset.7asiR0;
            offset = yankee.bind(romeon)(offset);
            oscard['text'] = offset;
            oscard['grow'] = verify;
            oscard = option.bind(tangon)(golfie, oscard);
            report[2] = oscard;
            entity['children'] = report;
            entity = zuuluu.bind(tangon)(michal, entity);
            return entity;
        }
    };
    zuuluu['default'] = michal;
    return entity;
})();