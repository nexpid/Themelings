// app/modules/webauthn/native/nav_steps/WebAuthnNameStep.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    report = argBar;
    golfie = argBaz;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    var _closure1_slot1 = golfie;
    var _closure1_slot2 = oscard;
    entity = global;
    verify = entity.Object;
    option = verify.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = option.bind(verify)(zuuluu, entity, tangon);
    entity = 0;
    tangon = oscard[entity];
    entity = undefined;
    tangon = golfie.bind(entity)(tangon);
    var _closure1_slot3 = tangon;
    tangon = 1;
    tangon = oscard[tangon];
    tangon = golfie.bind(entity)(tangon);
    var _closure1_slot4 = tangon;
    tangon = 2;
    golfie = oscard[tangon];
    tangon = argCor;
    tangon = tangon.bind(entity)(golfie);
    var _closure1_slot5 = tangon;
    tangon = 3;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.WebAuthnScreens;
    var _closure1_slot6 = tangon;
    tangon = 4;
    golfie = oscard[tangon];
    golfie = report.bind(entity)(golfie);
    golfie = golfie.jsx;
    var _closure1_slot7 = golfie;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.jsxs;
    var _closure1_slot8 = tangon;
    tangon = 5;
    tangon = oscard[tangon];
    option = report.bind(entity)(tangon);
    golfie = option.createStyles;
    tangon = {};
    verify = {};
    offset = 16;
    verify['margin'] = offset;
    tangon['margin'] = verify;
    tangon = golfie.bind(option)(tangon);
    var _closure1_slot9 = tangon;
    tangon = 15;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/webauthn/native/nav_steps/WebAuthnNameStep.tsx';
    tangon = report.bind(oscard)(tangon);
    michal = function(argFoo) { // Original name: WebAuthnNameStep
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            michal = argFoo;
            zuuluu = michal.ticket;
            var _closure2_slot0 = zuuluu;
            zuuluu = michal.credential;
            var _closure2_slot1 = zuuluu;
            offset = michal.name;
            tangon = undefined;
            var _closure2_slot5 = tangon;
            michal = _closure1_slot9;
            sizing = michal.bind(tangon)();
            zuuluu = _closure1_slot0;
            report = _closure1_slot2;
            michal = 6;
            michal = report[michal];
            zuuluu = zuuluu.bind(tangon)(michal);
            michal = zuuluu.useNavigation;
            michal = michal.bind(zuuluu)();
            var _closure2_slot2 = michal;
            verify = _closure1_slot5;
            michal = verify.useState;
            echoed = false;
            michal = michal.bind(verify)(echoed);
            yankee = _closure1_slot4;
            option = 2;
            michal = yankee.bind(tangon)(michal, option);
            report = 0;
            output = michal[report];
            zuuluu = 1;
            michal = michal[zuuluu];
            var _closure2_slot3 = michal;
            golfie = verify.useState;
            michal = null;
            golfie = golfie.bind(verify)(michal);
            golfie = yankee.bind(tangon)(golfie, option);
            backup = golfie[report];
            golfie = golfie[zuuluu];
            var _closure2_slot4 = golfie;
            golfie = verify.useState;
            yankee = michal != offset;
            foxtra = '';
            michal = foxtra;
            if(!yankee) { _fun00002_ip = 179; continue _fun00001 }
 176:
            michal = offset;
 179:
            golfie = golfie.bind(verify)(michal);
            michal = _closure1_slot4;
            michal = michal.bind(tangon)(golfie, option);
            romeon = michal[report];
            _closure2_slot5 = romeon;
            result = michal[zuuluu];
            entity = function() {
                tangon = _closure1_slot3;
                zuuluu = undefined;
                michal = function* () {
                    entity = function* () { // Original name: ?anon_0_
                        _fun00003: for(var _fun00004_ip = 0; ; ) switch(_fun00004_ip) {
 0:
                            StartGenerator();
                            ResumeGenerator(result_out_reg=0, return_bool_out_reg=1);
                            if(michal) { _fun00004_ip = 354; continue _fun00003 }
 10: // try_start_0 // try_start_1
                            tangon = _closure2_slot3;
                            report = undefined;
                            michal = true;
                            michal = tangon.bind(report)(michal);
                            oscard = _closure1_slot0;
                            golfie = _closure1_slot2;
                            michal = 7;
                            michal = golfie[michal];
                            verify = oscard.bind(report)(michal);
                            option = verify.finishRegisterWebAuthnCredential;
                            golfie = _closure2_slot5;
                            oscard = _closure2_slot0;
                            michal = _closure2_slot1;
                            michal = option.bind(verify)(golfie, oscard, michal);
                            SaveGenerator(address=78);
 76:
                            return michal;
 78:
                            ResumeGenerator(result_out_reg=1, return_bool_out_reg=5);
                            if(oscard) { _fun00004_ip = 278; continue _fun00003 }
 87: // try_end0 // try_end1
                            golfie = _closure2_slot3;
                            oscard = false;
                            oscard = golfie.bind(report)(oscard);
                            romeon = _closure1_slot1;
                            yankee = _closure1_slot2;
                            oscard = 8;
                            oscard = yankee[oscard];
                            option = romeon.bind(report)(oscard);
                            golfie = option.open;
                            oscard = {};
                            verify = 'WEBAUTHN_CREDENTIAL_REGISTER_SUCCESS_TOAST_KEY';
                            oscard['key'] = verify;
                            offset = _closure1_slot0;
                            verify = 9;
                            foxtra = yankee[verify];
                            foxtra = offset.bind(report)(foxtra);
                            backup = foxtra.intl;
                            foxtra = backup.string;
                            verify = yankee[verify];
                            verify = offset.bind(report)(verify);
                            verify = verify.t;
                            verify = verify.j3d5qK;
                            verify = foxtra.bind(backup)(verify);
                            oscard['content'] = verify;
                            verify = 10;
                            verify = yankee[verify];
                            verify = romeon.bind(report)(verify);
                            oscard['icon'] = verify;
                            verify = 11;
                            verify = yankee[verify];
                            verify = offset.bind(report)(verify);
                            verify = verify.CircleCheckIcon;
                            oscard['IconComponent'] = verify;
                            verify = 'status-success';
                            oscard['iconColor'] = verify;
                            oscard = golfie.bind(option)(oscard);
                            option = _closure2_slot2;
                            golfie = option.push;
                            tangon = _closure1_slot6;
                            oscard = tangon.SUCCESS;
                            tangon = {};
                            tangon = golfie.bind(option)(oscard, tangon);
                            return report;
 278:
                            tangon = _closure2_slot3;
                            zuuluu = false;
                            zuuluu = tangon.bind(report)(zuuluu);
                            return michal;
 292: // try_start_2 // catch_target0
                            CatchBlockStart(arg_register=1);
                            tangon = _closure2_slot4;
                            michal = michal.body;
                            michal = michal.message;
                            report = undefined;
                            michal = tangon.bind(report)(michal);
 318: // try_end2
                            tangon = _closure2_slot3;
                            zuuluu = false;
                            zuuluu = tangon.bind(report)(zuuluu);
                            michal = undefined;
                            return michal;
 334: // catch_target1 // catch_target2
                            CatchBlockStart(arg_register=1);
                            report = _closure2_slot3;
                            tangon = undefined;
                            zuuluu = false;
                            zuuluu = report.bind(tangon)(zuuluu);
                            throw michal;
 354:
                            return entity;
                        }
                    };
                    return entity;
                };
                michal = tangon.bind(zuuluu)(michal);
                var _closure3_slot0 = michal;
                entity = function() {
                    entity = undefined;
                    tangon = _closure3_slot0;
                    zuuluu = tangon.apply;
                    entity = arguments;
                    michal = entity;
                    entity = this;
                    entity = zuuluu.bind(tangon)(entity, michal);
                    return entity;
                };
                return entity;
            };
            kiloes = entity.bind(tangon)();
            zuuluu = _closure1_slot8;
            offset = _closure1_slot0;
            yankee = _closure1_slot2;
            golfie = 12;
            entity = yankee[golfie];
            entity = offset.bind(tangon)(entity);
            michal = entity.Form;
            entity = {};
            option = _closure1_slot7;
            report = yankee[golfie];
            report = offset.bind(tangon)(report);
            verify = report.FormInput;
            report = {};
            report['showTopContainer'] = echoed;
            report['value'] = romeon;
            report['onChange'] = result;
            result = sizing.margin;
            report['style'] = result;
            report['error'] = backup;
            backup = 9;
            result = yankee[backup];
            result = offset.bind(tangon)(result);
            update = result.intl;
            echoed = update.string;
            result = yankee[backup];
            result = offset.bind(tangon)(result);
            result = result.t;
            result = result.Jzd+z8;
            result = echoed.bind(update)(result);
            report['title'] = result;
            result = yankee[backup];
            result = offset.bind(tangon)(result);
            update = result.intl;
            echoed = update.string;
            result = yankee[backup];
            result = offset.bind(tangon)(result);
            result = result.t;
            result = result.I/sJtL;
            result = echoed.bind(update)(result);
            report['placeholder'] = result;
            report['disabled'] = output;
            output = 13;
            output = yankee[output];
            output = offset.bind(tangon)(output);
            output = output.ClearButtonVisibility;
            output = output.WITH_CONTENT;
            report['clearButtonVisibility'] = output;
            output = true;
            report['autoFocus'] = output;
            report['showBorder'] = output;
            report['required'] = output;
            report['large'] = output;
            verify = option.bind(tangon)(verify, report);
            report = new Array(3);
            report[0] = verify;
            golfie = yankee[golfie];
            golfie = offset.bind(tangon)(golfie);
            verify = golfie.FormDivider;
            golfie = {};
            golfie = option.bind(tangon)(verify, golfie);
            report[1] = golfie;
            golfie = _closure1_slot1;
            verify = 14;
            oscard = yankee[verify];
            golfie = golfie.bind(tangon)(oscard);
            oscard = {};
            sizing = sizing.margin;
            oscard['style'] = sizing;
            oscard['onPress'] = kiloes;
            kiloes = yankee[backup];
            kiloes = offset.bind(tangon)(kiloes);
            sizing = kiloes.intl;
            kiloes = sizing.string;
            backup = yankee[backup];
            backup = offset.bind(tangon)(backup);
            backup = backup.t;
            backup = backup.5dyZ1d;
            backup = kiloes.bind(sizing)(backup);
            oscard['text'] = backup;
            romeon = foxtra === romeon;
            oscard['disabled'] = romeon;
            verify = yankee[verify];
            verify = offset.bind(tangon)(verify);
            verify = verify.ButtonSizes;
            verify = verify.LARGE;
            oscard['size'] = verify;
            oscard = option.bind(tangon)(golfie, oscard);
            report[2] = oscard;
            entity['children'] = report;
            entity = zuuluu.bind(tangon)(michal, entity);
            return entity;
        }
    };
    zuuluu['default'] = michal;
    return entity;
})();