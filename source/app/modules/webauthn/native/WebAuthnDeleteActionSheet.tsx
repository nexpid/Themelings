// app/modules/webauthn/native/WebAuthnDeleteActionSheet.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    report = argBar;
    yankee = argBaz;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    var _closure1_slot1 = yankee;
    var _closure1_slot2 = oscard;
    entity = global;
    option = entity.Object;
    golfie = option.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(option)(zuuluu, entity, tangon);
    entity = 0;
    golfie = oscard[entity];
    tangon = argCor;
    entity = undefined;
    tangon = tangon.bind(entity)(golfie);
    tangon = 1;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    golfie = tangon.Image;
    var _closure1_slot3 = golfie;
    tangon = tangon.View;
    var _closure1_slot4 = tangon;
    tangon = 2;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    golfie = tangon.jsx;
    var _closure1_slot5 = golfie;
    tangon = tangon.jsxs;
    var _closure1_slot6 = tangon;
    tangon = 3;
    tangon = oscard[tangon];
    option = report.bind(entity)(tangon);
    golfie = option.createStyles;
    tangon = {};
    verify = {};
    offset = 'center';
    verify['alignItems'] = offset;
    tangon['content'] = verify;
    verify = {};
    verify['textAlign'] = offset;
    offset = 4;
    romeon = oscard[offset];
    romeon = yankee.bind(entity)(romeon);
    romeon = romeon.spacing;
    romeon = romeon.PX_16;
    verify['marginTop'] = romeon;
    tangon['subtitle'] = verify;
    verify = {};
    romeon = oscard[offset];
    romeon = yankee.bind(entity)(romeon);
    romeon = romeon.spacing;
    romeon = romeon.PX_16;
    verify['paddingHorizontal'] = romeon;
    romeon = oscard[offset];
    romeon = yankee.bind(entity)(romeon);
    romeon = romeon.spacing;
    romeon = romeon.PX_16;
    verify['paddingBottom'] = romeon;
    tangon['sheetContent'] = verify;
    verify = {};
    romeon = oscard[offset];
    romeon = yankee.bind(entity)(romeon);
    romeon = romeon.spacing;
    romeon = romeon.PX_16;
    verify['gap'] = romeon;
    offset = oscard[offset];
    offset = yankee.bind(entity)(offset);
    offset = offset.spacing;
    offset = offset.PX_16;
    verify['paddingBottom'] = offset;
    tangon['sheetBody'] = verify;
    tangon = golfie.bind(option)(tangon);
    var _closure1_slot7 = tangon;
    tangon = 19;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/webauthn/native/WebAuthnDeleteActionSheet.tsx';
    tangon = report.bind(oscard)(tangon);
    michal = function(argFoo) { // Original name: WebAuthnDeleteActionSheet
        entity = argFoo;
        update = entity.credential;
        var _closure2_slot0 = update;
        romeon = entity.deleting;
        entity = entity.setDeleting;
        var _closure2_slot1 = entity;
        entity = _closure1_slot7;
        tangon = undefined;
        sizing = entity.bind(tangon)();
        yankee = function() { // Original name: handleClose
            zuuluu = _closure1_slot1;
            michal = _closure1_slot2;
            entity = 5;
            michal = michal[entity];
            entity = undefined;
            zuuluu = zuuluu.bind(entity)(michal);
            michal = zuuluu.hideActionSheet;
            michal = michal.bind(zuuluu)();
            return entity;
        };
        var _closure2_slot2 = yankee;
        zuuluu = _closure1_slot6;
        output = _closure1_slot0;
        result = _closure1_slot2;
        entity = 6;
        entity = result[entity];
        entity = output.bind(tangon)(entity);
        michal = entity.BottomSheet;
        entity = {};
        report = sizing.sheetContent;
        entity['contentStyles'] = report;
        report = sizing.sheetBody;
        entity['bodyStyles'] = report;
        option = _closure1_slot5;
        report = 7;
        report = result[report];
        report = output.bind(tangon)(report);
        oscard = report.BottomSheetTitleHeader;
        report = {};
        backup = 8;
        golfie = result[backup];
        golfie = output.bind(tangon)(golfie);
        echoed = golfie.intl;
        offset = echoed.formatToPlainString;
        golfie = result[backup];
        golfie = output.bind(tangon)(golfie);
        golfie = golfie.t;
        verify = golfie.mI3CoK;
        golfie = {};
        update = update.name;
        golfie['keyName'] = update;
        golfie = offset.bind(echoed)(verify, golfie);
        report['title'] = golfie;
        golfie = 9;
        golfie = result[golfie];
        golfie = output.bind(tangon)(golfie);
        verify = golfie.ActionSheetCloseButton;
        golfie = {};
        golfie['onPress'] = yankee;
        golfie = option.bind(tangon)(verify, golfie);
        report['trailing'] = golfie;
        oscard = option.bind(tangon)(oscard, report);
        report = new Array(4);
        report[0] = oscard;
        golfie = _closure1_slot4;
        oscard = {};
        verify = sizing.content;
        oscard['style'] = verify;
        offset = _closure1_slot3;
        verify = {};
        echoed = _closure1_slot1;
        kiloes = 10;
        kiloes = result[kiloes];
        kiloes = echoed.bind(tangon)(kiloes);
        verify['source'] = kiloes;
        offset = option.bind(tangon)(offset, verify);
        verify = new Array(2);
        verify[0] = offset;
        offset = 11;
        offset = result[offset];
        offset = output.bind(tangon)(offset);
        kiloes = offset.Text;
        offset = {};
        echoed = 'heading-md/normal';
        offset['variant'] = echoed;
        sizing = sizing.subtitle;
        offset['style'] = sizing;
        sizing = result[backup];
        sizing = output.bind(tangon)(sizing);
        update = sizing.intl;
        echoed = update.string;
        sizing = result[backup];
        sizing = output.bind(tangon)(sizing);
        sizing = sizing.t;
        sizing = sizing.IfTbc3;
        sizing = echoed.bind(update)(sizing);
        offset['children'] = sizing;
        offset = option.bind(tangon)(kiloes, offset);
        verify[1] = offset;
        oscard['children'] = verify;
        oscard = zuuluu.bind(tangon)(golfie, oscard);
        report[1] = oscard;
        oscard = {};
        verify = 12;
        offset = result[verify];
        offset = output.bind(tangon)(offset);
        kiloes = offset.Button;
        offset = {};
        sizing = result[backup];
        sizing = output.bind(tangon)(sizing);
        update = sizing.intl;
        echoed = update.string;
        sizing = result[backup];
        sizing = output.bind(tangon)(sizing);
        sizing = sizing.t;
        sizing = sizing.lqK///;
        sizing = echoed.bind(update)(sizing);
        offset['text'] = sizing;
        offset['onPress'] = yankee;
        yankee = 'primary';
        offset['variant'] = yankee;
        yankee = true;
        offset['grow'] = yankee;
        offset = option.bind(tangon)(kiloes, offset);
        oscard['children'] = offset;
        oscard = option.bind(tangon)(golfie, oscard);
        report[2] = oscard;
        oscard = {};
        verify = result[verify];
        verify = output.bind(tangon)(verify);
        offset = verify.Button;
        verify = {};
        kiloes = result[backup];
        kiloes = output.bind(tangon)(kiloes);
        sizing = kiloes.intl;
        kiloes = sizing.string;
        backup = result[backup];
        backup = output.bind(tangon)(backup);
        backup = backup.t;
        backup = backup.zYOk0d;
        backup = kiloes.bind(sizing)(backup);
        verify['text'] = backup;
        foxtra = function() { // Original name: onPress
            report = _closure2_slot1;
            entity = undefined;
            tangon = true;
            tangon = report.bind(entity)(tangon);
            tangon = _closure2_slot2;
            tangon = tangon.bind(entity)();
            report = _closure1_slot0;
            oscard = _closure1_slot2;
            tangon = 13;
            tangon = oscard[tangon];
            report = report.bind(entity)(tangon);
            tangon = report.deleteWebAuthnCredentialAsync;
            zuuluu = _closure2_slot0;
            report = tangon.bind(report)(zuuluu);
            tangon = report.then;
            zuuluu = function() {
                option = _closure1_slot1;
                golfie = _closure1_slot2;
                entity = 14;
                michal = golfie[entity];
                entity = undefined;
                tangon = option.bind(entity)(michal);
                zuuluu = tangon.open;
                michal = {};
                oscard = 'WEBAUTHN_CREDENTIAL_DELETE_SUCCESS_TOAST_KEY';
                michal['key'] = oscard;
                oscard = _closure1_slot0;
                report = 8;
                verify = golfie[report];
                verify = oscard.bind(entity)(verify);
                offset = verify.intl;
                verify = offset.string;
                report = golfie[report];
                report = oscard.bind(entity)(report);
                report = report.t;
                report = report.ZnkeXl;
                report = verify.bind(offset)(report);
                michal['content'] = report;
                report = 15;
                report = golfie[report];
                report = option.bind(entity)(report);
                michal['icon'] = report;
                report = 16;
                report = golfie[report];
                report = oscard.bind(entity)(report);
                report = report.CircleCheckIcon;
                michal['IconComponent'] = report;
                report = 'status-positive';
                michal['iconColor'] = report;
                michal = zuuluu.bind(tangon)(michal);
                return entity;
            };
            report = tangon.bind(report)(zuuluu);
            tangon = report.catch;
            zuuluu = function(argFoo) {
                option = _closure1_slot1;
                golfie = _closure1_slot2;
                entity = 14;
                michal = golfie[entity];
                entity = undefined;
                tangon = option.bind(entity)(michal);
                zuuluu = tangon.open;
                michal = {};
                oscard = 'WEBAUTHN_CREDENTIAL_DELETE_ERROR_TOAST_KEY';
                michal['key'] = oscard;
                oscard = argFoo;
                oscard = oscard.message;
                michal['content'] = oscard;
                oscard = 17;
                oscard = golfie[oscard];
                oscard = option.bind(entity)(oscard);
                michal['icon'] = oscard;
                oscard = _closure1_slot0;
                report = 18;
                report = golfie[report];
                report = oscard.bind(entity)(report);
                report = report.WarningIcon;
                michal['IconComponent'] = report;
                report = 'status-danger';
                michal['iconColor'] = report;
                michal = zuuluu.bind(tangon)(michal);
                return entity;
            };
            tangon = tangon.bind(report)(zuuluu);
            zuuluu = tangon.finally;
            michal = function() {
                zuuluu = _closure2_slot1;
                entity = undefined;
                michal = false;
                michal = zuuluu.bind(entity)(michal);
                return entity;
            };
            michal = zuuluu.bind(tangon)(michal);
            return entity;
        };
        verify['onPress'] = foxtra;
        foxtra = 'destructive';
        verify['variant'] = foxtra;
        verify['disabled'] = romeon;
        verify['loading'] = romeon;
        verify['grow'] = yankee;
        verify = option.bind(tangon)(offset, verify);
        oscard['children'] = verify;
        oscard = option.bind(tangon)(golfie, oscard);
        report[3] = oscard;
        entity['children'] = report;
        entity = zuuluu.bind(tangon)(michal, entity);
        return entity;
    };
    zuuluu['default'] = michal;
    return entity;
})();