// app/modules/webauthn/native/WebAuthnDeleteActionSheet.tsx
export default (function(argFoo, argBar, argBaz, argCorge, _, argFred, argPlugh) {
    report = argBar;
    yankee = argBaz;
    zulu = argFred;
    oscar = argPlugh;
    var _closure1_slot0 = report;
    var _closure1_slot1 = yankee;
    var _closure1_slot2 = oscar;
    entity = global;
    options = entity.Object;
    golf = options.defineProperty;
    tango = {};
    entity = true;
    tango['value'] = entity;
    entity = '__esModule';
    entity = golf.bind(options)(zulu, entity, tango);
    entity = 0;
    golf = oscar[entity];
    tango = argCorge;
    entity = undefined;
    tango = tango.bind(entity)(golf);
    tango = 1;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    golf = tango.Image;
    var _closure1_slot3 = golf;
    tango = tango.View;
    var _closure1_slot4 = tango;
    tango = 2;
    golf = oscar[tango];
    golf = report.bind(entity)(golf);
    golf = golf.jsx;
    var _closure1_slot5 = golf;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.jsxs;
    var _closure1_slot6 = tango;
    tango = 3;
    tango = oscar[tango];
    options = report.bind(entity)(tango);
    golf = options.createStyles;
    tango = {};
    verify = {};
    offset = 'center';
    verify['alignItems'] = offset;
    tango['content'] = verify;
    verify = {};
    verify['textAlign'] = offset;
    offset = 4;
    romeo = oscar[offset];
    romeo = yankee.bind(entity)(romeo);
    romeo = romeo.spacing;
    romeo = romeo.PX_16;
    verify['marginTop'] = romeo;
    tango['subtitle'] = verify;
    verify = {};
    romeo = oscar[offset];
    romeo = yankee.bind(entity)(romeo);
    romeo = romeo.spacing;
    romeo = romeo.PX_16;
    verify['paddingHorizontal'] = romeo;
    romeo = oscar[offset];
    romeo = yankee.bind(entity)(romeo);
    romeo = romeo.spacing;
    romeo = romeo.PX_16;
    verify['paddingBottom'] = romeo;
    tango['sheetContent'] = verify;
    verify = {};
    romeo = oscar[offset];
    romeo = yankee.bind(entity)(romeo);
    romeo = romeo.spacing;
    romeo = romeo.PX_16;
    verify['gap'] = romeo;
    offset = oscar[offset];
    offset = yankee.bind(entity)(offset);
    offset = offset.spacing;
    offset = offset.PX_16;
    verify['paddingBottom'] = offset;
    tango['sheetBody'] = verify;
    tango = golf.bind(options)(tango);
    var _closure1_slot7 = tango;
    tango = 19;
    tango = oscar[tango];
    oscar = report.bind(entity)(tango);
    report = oscar.fileFinishedImporting;
    tango = 'modules/webauthn/native/WebAuthnDeleteActionSheet.tsx';
    tango = report.bind(oscar)(tango);
    mike = function(argFoo) { // Original name: WebAuthnDeleteActionSheet
        entity = argFoo;
        update = entity.credential;
        var _closure2_slot0 = update;
        romeo = entity.deleting;
        entity = entity.setDeleting;
        var _closure2_slot1 = entity;
        entity = _closure1_slot7;
        tango = undefined;
        sizing = entity.bind(tango)();
        yankee = function() { // Original name: handleClose
            zulu = _closure1_slot1;
            mike = _closure1_slot2;
            entity = 5;
            mike = mike[entity];
            entity = undefined;
            zulu = zulu.bind(entity)(mike);
            mike = zulu.hideActionSheet;
            mike = mike.bind(zulu)();
            return entity;
        };
        var _closure2_slot2 = yankee;
        zulu = _closure1_slot6;
        output = _closure1_slot0;
        result = _closure1_slot2;
        entity = 6;
        entity = result[entity];
        entity = output.bind(tango)(entity);
        mike = entity.BottomSheet;
        entity = {};
        report = sizing.sheetContent;
        entity['contentStyles'] = report;
        report = sizing.sheetBody;
        entity['bodyStyles'] = report;
        options = _closure1_slot5;
        report = 7;
        report = result[report];
        report = output.bind(tango)(report);
        oscar = report.BottomSheetTitleHeader;
        report = {};
        backup = 8;
        golf = result[backup];
        golf = output.bind(tango)(golf);
        echo = golf.intl;
        offset = echo.formatToPlainString;
        golf = result[backup];
        golf = output.bind(tango)(golf);
        golf = golf.t;
        verify = golf.mI3CoK;
        golf = {};
        update = update.name;
        golf['keyName'] = update;
        golf = offset.bind(echo)(verify, golf);
        report['title'] = golf;
        golf = 9;
        golf = result[golf];
        golf = output.bind(tango)(golf);
        verify = golf.ActionSheetCloseButton;
        golf = {};
        golf['onPress'] = yankee;
        golf = options.bind(tango)(verify, golf);
        report['trailing'] = golf;
        oscar = options.bind(tango)(oscar, report);
        report = new Array(4);
        report[0] = oscar;
        golf = _closure1_slot4;
        oscar = {};
        verify = sizing.content;
        oscar['style'] = verify;
        offset = _closure1_slot3;
        verify = {};
        echo = _closure1_slot1;
        kilo = 10;
        kilo = result[kilo];
        kilo = echo.bind(tango)(kilo);
        verify['source'] = kilo;
        offset = options.bind(tango)(offset, verify);
        verify = new Array(2);
        verify[0] = offset;
        offset = 11;
        offset = result[offset];
        offset = output.bind(tango)(offset);
        kilo = offset.Text;
        offset = {};
        echo = 'heading-md/normal';
        offset['variant'] = echo;
        sizing = sizing.subtitle;
        offset['style'] = sizing;
        sizing = result[backup];
        sizing = output.bind(tango)(sizing);
        update = sizing.intl;
        echo = update.string;
        sizing = result[backup];
        sizing = output.bind(tango)(sizing);
        sizing = sizing.t;
        sizing = sizing.IfTbc3;
        sizing = echo.bind(update)(sizing);
        offset['children'] = sizing;
        offset = options.bind(tango)(kilo, offset);
        verify[1] = offset;
        oscar['children'] = verify;
        oscar = zulu.bind(tango)(golf, oscar);
        report[1] = oscar;
        oscar = {};
        verify = 12;
        offset = result[verify];
        offset = output.bind(tango)(offset);
        kilo = offset.Button;
        offset = {};
        sizing = result[backup];
        sizing = output.bind(tango)(sizing);
        update = sizing.intl;
        echo = update.string;
        sizing = result[backup];
        sizing = output.bind(tango)(sizing);
        sizing = sizing.t;
        sizing = sizing.lqK///;
        sizing = echo.bind(update)(sizing);
        offset['text'] = sizing;
        offset['onPress'] = yankee;
        yankee = 'primary';
        offset['variant'] = yankee;
        yankee = true;
        offset['grow'] = yankee;
        offset = options.bind(tango)(kilo, offset);
        oscar['children'] = offset;
        oscar = options.bind(tango)(golf, oscar);
        report[2] = oscar;
        oscar = {};
        verify = result[verify];
        verify = output.bind(tango)(verify);
        offset = verify.Button;
        verify = {};
        kilo = result[backup];
        kilo = output.bind(tango)(kilo);
        sizing = kilo.intl;
        kilo = sizing.string;
        backup = result[backup];
        backup = output.bind(tango)(backup);
        backup = backup.t;
        backup = backup.zYOk0d;
        backup = kilo.bind(sizing)(backup);
        verify['text'] = backup;
        foxtrot = function() { // Original name: onPress
            report = _closure2_slot1;
            entity = undefined;
            tango = true;
            tango = report.bind(entity)(tango);
            tango = _closure2_slot2;
            tango = tango.bind(entity)();
            report = _closure1_slot0;
            oscar = _closure1_slot2;
            tango = 13;
            tango = oscar[tango];
            report = report.bind(entity)(tango);
            tango = report.deleteWebAuthnCredentialAsync;
            zulu = _closure2_slot0;
            report = tango.bind(report)(zulu);
            tango = report.then;
            zulu = function() {
                options = _closure1_slot1;
                golf = _closure1_slot2;
                entity = 14;
                mike = golf[entity];
                entity = undefined;
                tango = options.bind(entity)(mike);
                zulu = tango.open;
                mike = {};
                oscar = 'WEBAUTHN_CREDENTIAL_DELETE_SUCCESS_TOAST_KEY';
                mike['key'] = oscar;
                oscar = _closure1_slot0;
                report = 8;
                verify = golf[report];
                verify = oscar.bind(entity)(verify);
                offset = verify.intl;
                verify = offset.string;
                report = golf[report];
                report = oscar.bind(entity)(report);
                report = report.t;
                report = report.ZnkeXl;
                report = verify.bind(offset)(report);
                mike['content'] = report;
                report = 15;
                report = golf[report];
                report = options.bind(entity)(report);
                mike['icon'] = report;
                report = 16;
                report = golf[report];
                report = oscar.bind(entity)(report);
                report = report.CircleCheckIcon;
                mike['IconComponent'] = report;
                report = 'status-positive';
                mike['iconColor'] = report;
                mike = zulu.bind(tango)(mike);
                return entity;
            };
            report = tango.bind(report)(zulu);
            tango = report.catch;
            zulu = function(argFoo) {
                options = _closure1_slot1;
                golf = _closure1_slot2;
                entity = 14;
                mike = golf[entity];
                entity = undefined;
                tango = options.bind(entity)(mike);
                zulu = tango.open;
                mike = {};
                oscar = 'WEBAUTHN_CREDENTIAL_DELETE_ERROR_TOAST_KEY';
                mike['key'] = oscar;
                oscar = argFoo;
                oscar = oscar.message;
                mike['content'] = oscar;
                oscar = 17;
                oscar = golf[oscar];
                oscar = options.bind(entity)(oscar);
                mike['icon'] = oscar;
                oscar = _closure1_slot0;
                report = 18;
                report = golf[report];
                report = oscar.bind(entity)(report);
                report = report.WarningIcon;
                mike['IconComponent'] = report;
                report = 'status-danger';
                mike['iconColor'] = report;
                mike = zulu.bind(tango)(mike);
                return entity;
            };
            tango = tango.bind(report)(zulu);
            zulu = tango.finally;
            mike = function() {
                zulu = _closure2_slot1;
                entity = undefined;
                mike = false;
                mike = zulu.bind(entity)(mike);
                return entity;
            };
            mike = zulu.bind(tango)(mike);
            return entity;
        };
        verify['onPress'] = foxtrot;
        foxtrot = 'destructive';
        verify['variant'] = foxtrot;
        verify['disabled'] = romeo;
        verify['loading'] = romeo;
        verify['grow'] = yankee;
        verify = options.bind(tango)(offset, verify);
        oscar['children'] = verify;
        oscar = options.bind(tango)(golf, oscar);
        report[3] = oscar;
        entity['children'] = report;
        entity = zulu.bind(tango)(mike, entity);
        return entity;
    };
    zulu['default'] = mike;
    return entity;
})();