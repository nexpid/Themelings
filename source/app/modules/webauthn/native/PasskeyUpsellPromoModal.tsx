// app/modules/webauthn/native/PasskeyUpsellPromoModal.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    report = argBar;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    entity = argBaz;
    var _closure1_slot1 = entity;
    var _closure1_slot2 = oscard;
    entity = global;
    option = entity.Object;
    golfie = option.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(option)(zuuluu, entity, tangon);
    entity = 0;
    golfie = oscard[entity];
    tangon = argCor;
    entity = undefined;
    tangon = tangon.bind(entity)(golfie);
    tangon = 1;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.WebAuthnScreens;
    var _closure1_slot3 = tangon;
    tangon = 2;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.jsx;
    var _closure1_slot4 = tangon;
    tangon = 6;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/webauthn/native/PasskeyUpsellPromoModal.tsx';
    tangon = report.bind(oscard)(tangon);
    michal = function(argFoo) { // Original name: PasskeyUpsellPromoModal
        zuuluu = _closure1_slot1;
        golfie = _closure1_slot2;
        michal = 3;
        michal = golfie[michal];
        tangon = undefined;
        report = zuuluu.bind(tangon)(michal);
        zuuluu = report.getScreens;
        michal = {};
        oscard = true;
        michal['isModal'] = oscard;
        oscard = zuuluu.bind(report)(michal);
        zuuluu = {};
        michal = _closure1_slot3;
        michal = michal.NAME;
        zuuluu['name'] = michal;
        report = {};
        yankee = argFoo;
        romeon = report;
        michal = copyDataProperties(romeon, yankee);
        michal = _closure1_slot0;
        option = 4;
        verify = golfie[option];
        verify = michal.bind(tangon)(verify);
        offset = verify.intl;
        verify = offset.string;
        option = golfie[option];
        option = michal.bind(tangon)(option);
        option = option.t;
        option = option.8H5RmJ;
        verify = verify.bind(offset)(option);
        option = 'name';
        report[option] = verify;
        zuuluu['params'] = report;
        report = new Array(1);
        report[0] = zuuluu;
        zuuluu = _closure1_slot4;
        entity = 5;
        entity = golfie[entity];
        entity = michal.bind(tangon)(entity);
        michal = entity.Modal;
        entity = {};
        entity['screens'] = oscard;
        entity['initialRouteStack'] = report;
        entity = zuuluu.bind(tangon)(michal, entity);
        return entity;
    };
    zuuluu['default'] = michal;
    return entity;
})();