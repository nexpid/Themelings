// app/modules/webauthn/native/PasskeyUpsellPromoModal.tsx
export default (function(argFoo, argBar, argBaz, argCorge, _, argFred, argPlugh) {
    report = argBar;
    zulu = argFred;
    oscar = argPlugh;
    var _closure1_slot0 = report;
    entity = argBaz;
    var _closure1_slot1 = entity;
    var _closure1_slot2 = oscar;
    entity = global;
    options = entity.Object;
    golf = options.defineProperty;
    tango = {};
    entity = true;
    tango['value'] = entity;
    entity = '__esModule';
    entity = golf.bind(options)(zulu, entity, tango);
    entity = 0;
    golf = oscar[entity];
    tango = argCorge;
    entity = undefined;
    tango = tango.bind(entity)(golf);
    tango = 1;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.WebAuthnScreens;
    var _closure1_slot3 = tango;
    tango = 2;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.jsx;
    var _closure1_slot4 = tango;
    tango = 6;
    tango = oscar[tango];
    oscar = report.bind(entity)(tango);
    report = oscar.fileFinishedImporting;
    tango = 'modules/webauthn/native/PasskeyUpsellPromoModal.tsx';
    tango = report.bind(oscar)(tango);
    mike = function(argFoo) { // Original name: PasskeyUpsellPromoModal
        zulu = _closure1_slot1;
        golf = _closure1_slot2;
        mike = 3;
        mike = golf[mike];
        tango = undefined;
        report = zulu.bind(tango)(mike);
        zulu = report.getScreens;
        mike = {};
        oscar = true;
        mike['isModal'] = oscar;
        oscar = zulu.bind(report)(mike);
        zulu = {};
        mike = _closure1_slot3;
        mike = mike.NAME;
        zulu['name'] = mike;
        report = {};
        yankee = argFoo;
        romeo = report;
        mike = copyDataProperties(romeo, yankee);
        mike = _closure1_slot0;
        options = 4;
        verify = golf[options];
        verify = mike.bind(tango)(verify);
        offset = verify.intl;
        verify = offset.string;
        options = golf[options];
        options = mike.bind(tango)(options);
        options = options.t;
        options = options.8H5RmJ;
        verify = verify.bind(offset)(options);
        options = 'name';
        report[options] = verify;
        zulu['params'] = report;
        report = new Array(1);
        report[0] = zulu;
        zulu = _closure1_slot4;
        entity = 5;
        entity = golf[entity];
        entity = mike.bind(tango)(entity);
        mike = entity.Modal;
        entity = {};
        entity['screens'] = oscar;
        entity['initialRouteStack'] = report;
        entity = zulu.bind(tango)(mike, entity);
        return entity;
    };
    zulu['default'] = mike;
    return entity;
})();