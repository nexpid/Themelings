// app/modules/webauthn/native/PasskeyUpsellPromoSheet.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    report = argBar;
    golfie = argBaz;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    var _closure1_slot1 = golfie;
    var _closure1_slot2 = oscard;
    entity = global;
    verify = entity.Object;
    option = verify.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = option.bind(verify)(zuuluu, entity, tangon);
    entity = 0;
    tangon = oscard[entity];
    entity = undefined;
    tangon = golfie.bind(entity)(tangon);
    var _closure1_slot3 = tangon;
    tangon = 1;
    golfie = oscard[tangon];
    tangon = argCor;
    tangon = tangon.bind(entity)(golfie);
    var _closure1_slot4 = tangon;
    tangon = 2;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.Image;
    var _closure1_slot5 = tangon;
    tangon = 3;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.ContentDismissActionType;
    var _closure1_slot6 = tangon;
    tangon = 4;
    golfie = oscard[tangon];
    golfie = report.bind(entity)(golfie);
    golfie = golfie.jsx;
    var _closure1_slot7 = golfie;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.jsxs;
    var _closure1_slot8 = tangon;
    tangon = 14;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/webauthn/native/PasskeyUpsellPromoSheet.tsx';
    tangon = report.bind(oscard)(tangon);
    michal = function() { // Original name: PasswordlessUpsellPromoSheet
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            tangon = _closure1_slot7;
            michal = _closure1_slot5;
            entity = {};
            oscard = _closure1_slot0;
            golfie = _closure1_slot2;
            zuuluu = 5;
            report = golfie[zuuluu];
            zuuluu = undefined;
            report = oscard.bind(zuuluu)(report);
            entity['source'] = report;
            report = {'height': 190, 'width': 220, 'resizeMode': 'contain'};
            entity['style'] = report;
            report = tangon.bind(zuuluu)(michal, entity);
            romeon = _closure1_slot4;
            michal = romeon.useState;
            entity = '';
            entity = michal.bind(romeon)(entity);
            offset = _closure1_slot3;
            verify = 2;
            entity = offset.bind(zuuluu)(entity, verify);
            option = 0;
            michal = entity[option];
            michal = 1;
            entity = entity[michal];
            var _closure2_slot0 = entity;
            yankee = romeon.useState;
            entity = false;
            entity = yankee.bind(romeon)(entity);
            entity = offset.bind(zuuluu)(entity, verify);
            romeon = entity[option];
            entity = entity[michal];
            var _closure2_slot1 = entity;
            entity = function(argFoo) { // Original name: onRegisterSuccess
                zuuluu = _closure1_slot1;
                tangon = _closure1_slot2;
                michal = 6;
                report = tangon[michal];
                entity = undefined;
                oscard = zuuluu.bind(entity)(report);
                report = oscard.closePasskeyUpsellPromoSheet;
                report = report.bind(oscard)();
                michal = tangon[michal];
                tangon = zuuluu.bind(entity)(michal);
                zuuluu = tangon.openPasskeyUpsellPromoModal;
                michal = argFoo;
                michal = zuuluu.bind(tangon)(michal);
                return entity;
            };
            var _closure2_slot2 = entity;
            entity = 7;
            entity = golfie[entity];
            entity = oscard.bind(zuuluu)(entity);
            michal = entity.PromoSheet;
            entity = {};
            entity['illustration'] = report;
            output = 8;
            report = golfie[output];
            report = oscard.bind(zuuluu)(report);
            verify = report.intl;
            option = verify.string;
            report = golfie[output];
            report = oscard.bind(zuuluu)(report);
            report = report.t;
            report = report.CjleBg;
            report = option.bind(verify)(report);
            entity['title'] = report;
            report = 9;
            report = golfie[report];
            oscard = oscard.bind(zuuluu)(report);
            report = oscard.isIOS;
            report = report.bind(oscard)();
            verify = _closure1_slot0;
            oscard = _closure1_slot2;
            golfie = oscard[output];
            golfie = verify.bind(zuuluu)(golfie);
            option = golfie.intl;
            golfie = option.string;
            oscard = oscard[output];
            oscard = verify.bind(zuuluu)(oscard);
            oscard = oscard.t;
            if(report) { _fun00002_ip = 309; continue _fun00001 }
 296:
            report = oscard.d6uxJy;
            report = golfie.bind(option)(report);
            _fun00002_ip = 320; continue _fun00001;
 309:
            oscard = oscard.7yxR9v;
            report = golfie.bind(option)(oscard);
 320:
            entity['description'] = report;
            report = function() { // Original name: onDismiss
                tangon = _closure1_slot1;
                zuuluu = _closure1_slot2;
                michal = 10;
                zuuluu = zuuluu[michal];
                michal = undefined;
                zuuluu = tangon.bind(michal)(zuuluu);
                michal = zuuluu.markDismissed;
                entity = _closure1_slot6;
                entity = entity.USER_DISMISS;
                entity = michal.bind(zuuluu)(entity);
                return entity;
            };
            entity['onDismiss'] = report;
            golfie = _closure1_slot8;
            verify = _closure1_slot0;
            option = _closure1_slot2;
            report = 11;
            report = option[report];
            report = verify.bind(zuuluu)(report);
            oscard = report.ButtonGroup;
            report = {};
            offset = _closure1_slot7;
            kiloes = 12;
            option = option[kiloes];
            option = verify.bind(zuuluu)(option);
            verify = option.Button;
            option = {};
            yankee = 'lg';
            option['size'] = yankee;
            yankee = function() { // Original name: onPress
                zuuluu = _closure1_slot1;
                tangon = _closure1_slot2;
                entity = 10;
                report = tangon[entity];
                entity = undefined;
                oscard = zuuluu.bind(entity)(report);
                report = oscard.markDismissed;
                michal = _closure1_slot6;
                michal = michal.TAKE_ACTION;
                michal = report.bind(oscard)(michal);
                michal = 13;
                michal = tangon[michal];
                tangon = zuuluu.bind(entity)(michal);
                zuuluu = tangon.registerPasskey;
                michal = {};
                oscard = _closure2_slot1;
                michal['setRegistering'] = oscard;
                oscard = _closure2_slot0;
                michal['setError'] = oscard;
                report = _closure2_slot2;
                michal['onRegisterSuccess'] = report;
                michal = zuuluu.bind(tangon)(michal);
                return entity;
            };
            option['onPress'] = yankee;
            sizing = _closure1_slot0;
            yankee = _closure1_slot2;
            result = yankee[output];
            result = sizing.bind(zuuluu)(result);
            echoed = result.intl;
            result = echoed.string;
            yankee = yankee[output];
            yankee = sizing.bind(zuuluu)(yankee);
            sizing = yankee.t;
            if(romeon) { _fun00002_ip = 468; continue _fun00001 }
 455:
            yankee = sizing.NIFmCA;
            yankee = result.bind(echoed)(yankee);
            _fun00002_ip = 479; continue _fun00001;
 468:
            sizing = sizing.wePEBA;
            yankee = result.bind(echoed)(sizing);
 479:
            option['text'] = yankee;
            option['loading'] = romeon;
            option['disabled'] = romeon;
            verify = offset.bind(zuuluu)(verify, option);
            option = new Array(2);
            option[0] = verify;
            yankee = _closure1_slot7;
            offset = _closure1_slot0;
            verify = _closure1_slot2;
            verify = verify[kiloes];
            verify = offset.bind(zuuluu)(verify);
            offset = verify.Button;
            verify = {'size': 'lg', 'variant': 'secondary'};
            backup = function() { // Original name: onPress
                zuuluu = _closure1_slot1;
                tangon = _closure1_slot2;
                entity = 10;
                report = tangon[entity];
                entity = undefined;
                oscard = zuuluu.bind(entity)(report);
                report = oscard.markDismissed;
                michal = _closure1_slot6;
                michal = michal.USER_DISMISS;
                michal = report.bind(oscard)(michal);
                michal = 6;
                michal = tangon[michal];
                zuuluu = zuuluu.bind(entity)(michal);
                michal = zuuluu.closePasskeyUpsellPromoSheet;
                michal = michal.bind(zuuluu)();
                return entity;
            };
            verify['onPress'] = backup;
            backup = _closure1_slot0;
            foxtra = _closure1_slot2;
            kiloes = foxtra[output];
            kiloes = backup.bind(zuuluu)(kiloes);
            sizing = kiloes.intl;
            kiloes = sizing.string;
            foxtra = foxtra[output];
            foxtra = backup.bind(zuuluu)(foxtra);
            backup = foxtra.t;
            if(romeon) { _fun00002_ip = 615; continue _fun00001 }
 602:
            foxtra = backup.7J6/nJ;
            foxtra = kiloes.bind(sizing)(foxtra);
            _fun00002_ip = 626; continue _fun00001;
 615:
            backup = backup.wePEBA;
            foxtra = kiloes.bind(sizing)(backup);
 626:
            verify['text'] = foxtra;
            verify['disabled'] = romeon;
            verify = yankee.bind(zuuluu)(offset, verify);
            option[1] = verify;
            report['children'] = option;
            report = golfie.bind(zuuluu)(oscard, report);
            entity['actions'] = report;
            entity = tangon.bind(zuuluu)(michal, entity);
            return entity;
        }
    };
    zuuluu['default'] = michal;
    michal = 'PASSWORDLESS_UPSELL_MODAL_KEY';
    zuuluu['PASSWORDLESS_UPSELL_MODAL_KEY'] = michal;
    return entity;
})();