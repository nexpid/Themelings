// app/modules/build_overrides/native/BuildOverrideModal.tsx
export default (function(argFoo, argBar, argBaz, argCorge, _, argFred, argPlugh) {
    report = argBar;
    romeo = argBaz;
    zulu = argFred;
    oscar = argPlugh;
    var _closure1_slot0 = report;
    var _closure1_slot1 = romeo;
    var _closure1_slot2 = oscar;
    entity = global;
    options = entity.Object;
    golf = options.defineProperty;
    tango = {};
    entity = true;
    tango['value'] = entity;
    entity = '__esModule';
    entity = golf.bind(options)(zulu, entity, tango);
    offset = 0;
    golf = oscar[offset];
    tango = argCorge;
    entity = undefined;
    tango = tango.bind(entity)(golf);
    tango = 1;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    golf = tango.Image;
    var _closure1_slot3 = golf;
    tango = tango.View;
    var _closure1_slot4 = tango;
    tango = 2;
    tango = oscar[tango];
    tango = romeo.bind(entity)(tango);
    var _closure1_slot5 = tango;
    tango = 3;
    golf = oscar[tango];
    golf = report.bind(entity)(golf);
    golf = golf.jsx;
    var _closure1_slot6 = golf;
    golf = oscar[tango];
    golf = report.bind(entity)(golf);
    golf = golf.Fragment;
    var _closure1_slot7 = golf;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.jsxs;
    var _closure1_slot8 = tango;
    tango = 4;
    tango = oscar[tango];
    options = report.bind(entity)(tango);
    golf = options.createStyles;
    tango = {};
    verify = {'flex': 1, 'height': '100%', 'alignItems': 'center', 'backgroundColor': null, 'paddingHorizontal': 16};
    yankee = 5;
    foxtrot = oscar[yankee];
    foxtrot = romeo.bind(entity)(foxtrot);
    foxtrot = foxtrot.colors;
    foxtrot = foxtrot.BACKGROUND_MOBILE_PRIMARY;
    verify['backgroundColor'] = foxtrot;
    tango['container'] = verify;
    verify = {'marginTop': 160, 'flex': 1, 'alignItems': 'center'};
    tango['content'] = verify;
    verify = {'width': 100, 'height': 100, 'borderRadius': null, 'marginBottom': 16, 'backgroundColor': null, 'alignItems': 'center', 'justifyContent': 'center'};
    foxtrot = oscar[yankee];
    foxtrot = romeo.bind(entity)(foxtrot);
    foxtrot = foxtrot.radii;
    foxtrot = foxtrot.round;
    verify['borderRadius'] = foxtrot;
    yankee = oscar[yankee];
    yankee = romeo.bind(entity)(yankee);
    yankee = yankee.colors;
    yankee = yankee.BACKGROUND_TERTIARY;
    verify['backgroundColor'] = yankee;
    tango['imageWrapper'] = verify;
    romeo = 24;
    verify = {'lineHeight': 24, 'textAlign': 'center'};
    tango['text'] = verify;
    verify = {};
    yankee = 8;
    verify['marginTop'] = yankee;
    tango['buildOverrideName'] = verify;
    verify = {};
    verify['lineHeight'] = romeo;
    tango['buildOverrideExpiration'] = verify;
    verify = {};
    verify['marginTop'] = yankee;
    tango['buildOverrideInvalid'] = verify;
    verify = {};
    yankee = 'stretch';
    verify['alignSelf'] = yankee;
    tango['buttonWrapper'] = verify;
    verify = {'flex': 0, 'marginBottom': 8};
    tango['actionButton'] = verify;
    verify = {};
    verify['flex'] = offset;
    tango['skipButton'] = verify;
    tango = golf.bind(options)(tango);
    var _closure1_slot9 = tango;
    tango = 18;
    tango = oscar[tango];
    oscar = report.bind(entity)(tango);
    report = oscar.fileFinishedImporting;
    tango = 'modules/build_overrides/native/BuildOverrideModal.tsx';
    tango = report.bind(oscar)(tango);
    mike = function(argFoo) { // Original name: BuildOverrideModal
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            entity = argFoo;
            entity = entity.overrideUrl;
            tango = undefined;
            if(!(entity === tango)) { _fun00002_ip = 21; continue _fun00001 }
 17:
            entity = '';
 21:
            var _closure2_slot0 = entity;
            var _closure2_slot1 = tango;
            mike = _closure1_slot9;
            source = mike.bind(tango)();
            zulu = _closure1_slot1;
            oscar = _closure1_slot2;
            mike = 6;
            mike = oscar[mike];
            mike = zulu.bind(tango)(mike);
            report = mike.bind(tango)();
            zulu = _closure1_slot0;
            mike = 7;
            mike = oscar[mike];
            zulu = zulu.bind(tango)(mike);
            mike = zulu.isThemeDark;
            mike = mike.bind(zulu)(report);
            zulu = _closure1_slot1;
            report = _closure1_slot2;
            if(mike) { _fun00002_ip = 116; continue _fun00001 }
 102:
            mike = 9;
            mike = report[mike];
            backup = zulu.bind(tango)(mike);
            _fun00002_ip = 128; continue _fun00001;
 116:
            mike = 8;
            mike = report[mike];
            backup = zulu.bind(tango)(mike);
 128:
            zulu = _closure1_slot0;
            report = _closure1_slot2;
            mike = 10;
            mike = report[mike];
            oscar = zulu.bind(tango)(mike);
            report = oscar.useStateFromStores;
            mike = _closure1_slot5;
            zulu = new Array(1);
            zulu[0] = mike;
            mike = new Array(1);
            mike[0] = entity;
            entity = function() {
                zulu = _closure1_slot5;
                mike = zulu.getBuildOverride;
                entity = _closure2_slot0;
                entity = mike.bind(zulu)(entity);
                return entity;
            };
            entity = report.bind(oscar)(zulu, entity, mike);
            _closure2_slot1 = entity;
            golf = entity.override;
            offset = null;
            entity = offset == golf;
            verify = undefined;
            if(entity) { _fun00002_ip = 267; continue _fun00001 }
 208:
            mike = golf.targetBuildOverride;
            entity = offset == mike;
            verify = undefined;
            if(entity) { _fun00002_ip = 267; continue _fun00001 }
 223:
            zulu = _closure1_slot0;
            report = _closure1_slot2;
            entity = 11;
            entity = report[entity];
            entity = zulu.bind(tango)(entity);
            entity = entity.DEVICE_FIELD;
            entity = mike[entity];
            mike = offset == entity;
            verify = undefined;
            if(mike) { _fun00002_ip = 267; continue _fun00001 }
 262:
            verify = entity.id;
 267:
            report = _closure1_slot1;
            oscar = _closure1_slot2;
            entity = 12;
            mike = oscar[entity];
            zulu = report.bind(tango)(mike);
            mike = zulu.duration;
            entity = oscar[entity];
            entity = report.bind(tango)(entity);
            oscar = entity.bind(tango)();
            report = oscar.diff;
            options = offset == golf;
            entity = undefined;
            if(options) { _fun00002_ip = 326; continue _fun00001 }
 320:
            entity = golf.expiresAt;
 326:
            entity = report.bind(oscar)(entity);
            mike = mike.bind(zulu)(entity);
            entity = mike.humanize;
            record = entity.bind(mike)();
            zulu = _closure1_slot8;
            echo = _closure1_slot0;
            foxtrot = _closure1_slot2;
            entity = 13;
            entity = foxtrot[entity];
            entity = echo.bind(tango)(entity);
            mike = entity.SafeAreaPaddingView;
            entity = {'top': true, 'bottom': true};
            report = source.container;
            entity['style'] = report;
            oscar = _closure1_slot4;
            report = {};
            golf = source.content;
            report['style'] = golf;
            romeo = _closure1_slot6;
            golf = {};
            options = source.imageWrapper;
            golf['style'] = options;
            yankee = _closure1_slot3;
            options = {};
            options['source'] = backup;
            options = romeo.bind(tango)(yankee, options);
            golf['children'] = options;
            options = romeo.bind(tango)(oscar, golf);
            golf = new Array(3);
            golf[0] = options;
            sizing = 14;
            options = foxtrot[sizing];
            options = echo.bind(tango)(options);
            yankee = options.Text;
            options = {};
            backup = source.text;
            options['style'] = backup;
            backup = 'text-md/medium';
            options['variant'] = backup;
            control = 15;
            backup = foxtrot[control];
            backup = echo.bind(tango)(backup);
            result = backup.intl;
            backup = result.string;
            foxtrot = foxtrot[control];
            foxtrot = echo.bind(tango)(foxtrot);
            foxtrot = foxtrot.t;
            foxtrot = foxtrot.6ILkND;
            foxtrot = backup.bind(result)(foxtrot);
            options['children'] = foxtrot;
            options = romeo.bind(tango)(yankee, options);
            golf[1] = options;
            if(!(offset == verify)) { _fun00002_ip = 672; continue _fun00001 }
 561:
            romeo = _closure1_slot6;
            echo = _closure1_slot0;
            foxtrot = _closure1_slot2;
            options = foxtrot[sizing];
            options = echo.bind(tango)(options);
            yankee = options.Text;
            options = {'style': null, 'variant': 'heading-xl/extrabold', 'color': 'header-primary'};
            backup = source.buildOverrideInvalid;
            options['style'] = backup;
            backup = foxtrot[control];
            backup = echo.bind(tango)(backup);
            result = backup.intl;
            backup = result.string;
            foxtrot = foxtrot[control];
            foxtrot = echo.bind(tango)(foxtrot);
            foxtrot = foxtrot.t;
            foxtrot = foxtrot.cz+sub;
            foxtrot = backup.bind(result)(foxtrot);
            options['children'] = foxtrot;
            options = romeo.bind(tango)(yankee, options);
            _fun00002_ip = 870; continue _fun00001;
 672:
            foxtrot = _closure1_slot8;
            romeo = _closure1_slot7;
            yankee = {};
            echo = _closure1_slot6;
            vacuum = _closure1_slot0;
            update = _closure1_slot2;
            backup = update[sizing];
            backup = vacuum.bind(tango)(backup);
            result = backup.Text;
            backup = {'style': null, 'variant': 'heading-xl/extrabold', 'color': 'header-primary'};
            sequence = source.buildOverrideName;
            backup['style'] = sequence;
            backup['children'] = verify;
            result = echo.bind(tango)(result, backup);
            backup = new Array(2);
            backup[0] = result;
            sizing = update[sizing];
            sizing = vacuum.bind(tango)(sizing);
            result = sizing.Text;
            sizing = {'style': null, 'variant': 'text-md/medium', 'color': 'header-secondary'};
            sequence = source.buildOverrideExpiration;
            sizing['style'] = sequence;
            sequence = update[control];
            sequence = vacuum.bind(tango)(sequence);
            config = sequence.intl;
            sequence = config.format;
            update = update[control];
            update = vacuum.bind(tango)(update);
            update = update.t;
            vacuum = update.lOsPpq;
            update = {};
            update['expirationDuration'] = record;
            update = sequence.bind(config)(vacuum, update);
            sizing['children'] = update;
            sizing = echo.bind(tango)(result, sizing);
            backup[1] = sizing;
            yankee['children'] = backup;
            options = foxtrot.bind(tango)(romeo, yankee);
 870:
            golf[2] = options;
            report['children'] = golf;
            oscar = zulu.bind(tango)(oscar, report);
            report = new Array(2);
            report[0] = oscar;
            options = _closure1_slot6;
            golf = _closure1_slot4;
            oscar = {};
            yankee = source.buttonWrapper;
            oscar['style'] = yankee;
            if(!(offset == verify)) { _fun00002_ip = 1026; continue _fun00001 }
 916:
            yankee = _closure1_slot6;
            offset = _closure1_slot1;
            romeo = _closure1_slot2;
            verify = 16;
            verify = romeo[verify];
            offset = offset.bind(tango)(verify);
            verify = {};
            sizing = _closure1_slot0;
            foxtrot = romeo[control];
            foxtrot = sizing.bind(tango)(foxtrot);
            backup = foxtrot.intl;
            foxtrot = backup.string;
            romeo = romeo[control];
            romeo = sizing.bind(tango)(romeo);
            romeo = romeo.t;
            romeo = romeo.WRkdCQ;
            romeo = foxtrot.bind(backup)(romeo);
            verify['text'] = romeo;
            romeo = source.skipButton;
            verify['style'] = romeo;
            romeo = function() { // Original name: onPress
                zulu = _closure1_slot1;
                mike = _closure1_slot2;
                entity = 17;
                mike = mike[entity];
                entity = undefined;
                mike = zulu.bind(entity)(mike);
                entity = mike.pop;
                entity = entity.bind(mike)();
                return entity;
            };
            verify['onPress'] = romeo;
            verify = yankee.bind(tango)(offset, verify);
            _fun00002_ip = 1275; continue _fun00001;
 1026:
            romeo = _closure1_slot8;
            yankee = _closure1_slot7;
            offset = {};
            sizing = _closure1_slot6;
            echo = _closure1_slot1;
            update = _closure1_slot2;
            result = 16;
            foxtrot = update[result];
            backup = echo.bind(tango)(foxtrot);
            foxtrot = {};
            vacuum = source.actionButton;
            foxtrot['style'] = vacuum;
            config = _closure1_slot0;
            kilo = update[control];
            kilo = config.bind(tango)(kilo);
            sequence = kilo.intl;
            vacuum = sequence.string;
            kilo = update[control];
            kilo = config.bind(tango)(kilo);
            kilo = kilo.t;
            kilo = kilo.v0MBqK;
            kilo = vacuum.bind(sequence)(kilo);
            foxtrot['text'] = kilo;
            kilo = function() { // Original name: onPress
                _fun00003: for(var _fun00004_ip = 0; ; ) switch(_fun00004_ip) {
 0:
                    zulu = _closure1_slot0;
                    mike = _closure1_slot2;
                    entity = 11;
                    mike = mike[entity];
                    entity = undefined;
                    tango = zulu.bind(entity)(mike);
                    zulu = tango.setBuildOverrideFromLink;
                    mike = _closure2_slot1;
                    report = mike.validatedURL;
                    mike = null;
                    oscar = mike != report;
                    mike = '';
                    if(!oscar) { _fun00004_ip = 60; continue _fun00003 }
 57:
                    mike = report;
 60:
                    mike = zulu.bind(tango)(mike);
                    return entity;
                }
            };
            foxtrot['onPress'] = kilo;
            backup = sizing.bind(tango)(backup, foxtrot);
            foxtrot = new Array(2);
            foxtrot[0] = backup;
            backup = update[result];
            kilo = echo.bind(tango)(backup);
            backup = {};
            vacuum = update[control];
            vacuum = config.bind(tango)(vacuum);
            sequence = vacuum.intl;
            vacuum = sequence.string;
            control = update[control];
            control = config.bind(tango)(control);
            control = control.t;
            control = control.b5KKpq;
            control = vacuum.bind(sequence)(control);
            backup['text'] = control;
            source = source.skipButton;
            backup['style'] = source;
            result = update[result];
            result = echo.bind(tango)(result);
            result = result.Looks;
            result = result.OUTLINED;
            backup['look'] = result;
            output = function() { // Original name: onPress
                zulu = _closure1_slot1;
                mike = _closure1_slot2;
                entity = 17;
                mike = mike[entity];
                entity = undefined;
                mike = zulu.bind(entity)(mike);
                entity = mike.pop;
                entity = entity.bind(mike)();
                return entity;
            };
            backup['onPress'] = output;
            backup = sizing.bind(tango)(kilo, backup);
            foxtrot[1] = backup;
            offset['children'] = foxtrot;
            verify = romeo.bind(tango)(yankee, offset);
 1275:
            oscar['children'] = verify;
            oscar = options.bind(tango)(golf, oscar);
            report[1] = oscar;
            entity['children'] = report;
            entity = zulu.bind(tango)(mike, entity);
            return entity;
        }
    };
    zulu['default'] = mike;
    return entity;
})();