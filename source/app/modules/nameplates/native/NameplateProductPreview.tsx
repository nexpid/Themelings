// app/modules/nameplates/native/NameplateProductPreview.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    report = argBar;
    yankee = argBaz;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    var _closure1_slot1 = yankee;
    var _closure1_slot2 = oscard;
    entity = global;
    option = entity.Object;
    golfie = option.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(option)(zuuluu, entity, tangon);
    entity = 0;
    golfie = oscard[entity];
    tangon = argCor;
    entity = undefined;
    tangon = tangon.bind(entity)(golfie);
    var _closure1_slot3 = tangon;
    tangon = 1;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.View;
    var _closure1_slot4 = tangon;
    tangon = 2;
    tangon = oscard[tangon];
    tangon = yankee.bind(entity)(tangon);
    var _closure1_slot5 = tangon;
    tangon = 3;
    tangon = oscard[tangon];
    tangon = yankee.bind(entity)(tangon);
    var _closure1_slot6 = tangon;
    tangon = 4;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    golfie = tangon.jsx;
    var _closure1_slot7 = golfie;
    tangon = tangon.jsxs;
    var _closure1_slot8 = tangon;
    tangon = 5;
    tangon = oscard[tangon];
    option = report.bind(entity)(tangon);
    golfie = option.createStyles;
    tangon = {};
    verify = {};
    offset = 'relative';
    verify['position'] = offset;
    offset = 6;
    romeon = oscard[offset];
    romeon = yankee.bind(entity)(romeon);
    romeon = romeon.spacing;
    romeon = romeon.PX_12;
    verify['marginBottom'] = romeon;
    tangon['container'] = verify;
    verify = {};
    romeon = oscard[offset];
    romeon = yankee.bind(entity)(romeon);
    romeon = romeon.spacing;
    romeon = romeon.PX_16;
    verify['paddingHorizontal'] = romeon;
    tangon['memberListContainer'] = verify;
    verify = {};
    romeon = oscard[offset];
    romeon = yankee.bind(entity)(romeon);
    romeon = romeon.spacing;
    romeon = romeon.PX_24;
    verify['paddingTop'] = romeon;
    romeon = oscard[offset];
    romeon = yankee.bind(entity)(romeon);
    romeon = romeon.spacing;
    romeon = romeon.PX_8;
    verify['paddingBottom'] = romeon;
    tangon['memberListTitle'] = verify;
    verify = {};
    romeon = oscard[offset];
    romeon = yankee.bind(entity)(romeon);
    romeon = romeon.colors;
    romeon = romeon.BACKGROUND_BASE_LOW;
    verify['backgroundColor'] = romeon;
    tangon['memberListUser'] = verify;
    verify = {'position': 'absolute', 'right': 0, 'left': 0, 'top': 0, 'bottom': 0};
    offset = oscard[offset];
    offset = yankee.bind(entity)(offset);
    offset = offset.colors;
    offset = offset.BG_BASE_SECONDARY;
    verify['color'] = offset;
    tangon['memberListGradient'] = verify;
    tangon = golfie.bind(option)(tangon);
    var _closure1_slot9 = tangon;
    tangon = function(argFoo) { // Original name: NameplateUser
        entity = argFoo;
        golfie = entity.nameplate;
        michal = _closure1_slot0;
        option = _closure1_slot2;
        tangon = 14;
        report = option[tangon];
        tangon = undefined;
        oscard = michal.bind(tangon)(report);
        report = oscard.useCurrentUser;
        foxtra = report.bind(oscard)();
        var _closure2_slot0 = foxtra;
        report = 15;
        report = option[report];
        oscard = michal.bind(tangon)(report);
        report = oscard.useAvatarDecoration;
        romeon = report.bind(oscard)(foxtra);
        var _closure2_slot1 = romeon;
        report = 7;
        report = option[report];
        offset = michal.bind(tangon)(report);
        verify = offset.useStateFromStores;
        report = _closure1_slot5;
        oscard = new Array(1);
        oscard[0] = report;
        report = function() {
            entity = _closure1_slot5;
            entity = entity.useReducedMotion;
            return entity;
        };
        yankee = verify.bind(offset)(oscard, report);
        var _closure2_slot2 = yankee;
        oscard = _closure1_slot1;
        report = 16;
        report = option[report];
        oscard = oscard.bind(tangon)(report);
        report = oscard.getName;
        report = report.bind(oscard)(foxtra);
        offset = _closure1_slot3;
        verify = offset.useMemo;
        oscard = new Array(3);
        oscard[0] = foxtra;
        oscard[1] = romeon;
        oscard[2] = yankee;
        zuuluu = function() {
            tangon = _closure1_slot7;
            michal = _closure1_slot1;
            option = _closure1_slot2;
            oscard = 17;
            entity = option[oscard];
            zuuluu = undefined;
            michal = michal.bind(zuuluu)(entity);
            entity = {};
            verify = _closure2_slot0;
            entity['user'] = verify;
            entity['guildId'] = zuuluu;
            golfie = _closure1_slot0;
            oscard = option[oscard];
            oscard = golfie.bind(zuuluu)(oscard);
            oscard = oscard.AvatarSizes;
            oscard = oscard.NORMAL;
            entity['size'] = oscard;
            oscard = _closure2_slot1;
            entity['avatarDecoration'] = oscard;
            report = _closure2_slot2;
            report = !report;
            entity['animate'] = report;
            report = true;
            entity['autoStatusCutout'] = report;
            entity['aria-hidden'] = report;
            entity = tangon.bind(zuuluu)(michal, entity);
            return entity;
        };
        oscard = verify.bind(offset)(zuuluu, oscard);
        zuuluu = _closure1_slot7;
        entity = 18;
        entity = option[entity];
        entity = michal.bind(tangon)(entity);
        michal = entity.UserNameplateRow;
        entity = {};
        entity['nameplate'] = golfie;
        entity['icon'] = oscard;
        entity['label'] = report;
        report = true;
        entity['isPreviewRow'] = report;
        entity = zuuluu.bind(tangon)(michal, entity);
        return entity;
    };
    var _closure1_slot10 = tangon;
    tangon = function(argFoo) { // Original name: PlaceholderUser
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            entity = argFoo;
            golfie = entity.user;
            oscard = entity.start;
            tangon = undefined;
            if(!(oscard === tangon)) { _fun00002_ip = 21; continue _fun00001 }
 19:
            oscard = false;
 21:
            report = entity.end;
            if(!(report === tangon)) { _fun00002_ip = 32; continue _fun00001 }
 30:
            report = false;
 32:
            zuuluu = _closure1_slot7;
            yankee = _closure1_slot0;
            romeon = _closure1_slot2;
            entity = 19;
            entity = romeon[entity];
            entity = yankee.bind(tangon)(entity);
            michal = entity.TableRow;
            entity = {};
            verify = _closure1_slot1;
            offset = 17;
            option = romeon[offset];
            verify = verify.bind(tangon)(option);
            option = {};
            foxtra = {};
            backup = golfie.avatarSrc;
            foxtra['uri'] = backup;
            option['source'] = foxtra;
            offset = romeon[offset];
            offset = yankee.bind(tangon)(offset);
            offset = offset.AvatarSizes;
            offset = offset.NORMAL;
            option['size'] = offset;
            offset = true;
            option['aria-hidden'] = offset;
            option = zuuluu.bind(tangon)(verify, option);
            entity['icon'] = option;
            golfie = golfie.name;
            entity['label'] = golfie;
            entity['start'] = oscard;
            entity['end'] = report;
            entity = zuuluu.bind(tangon)(michal, entity);
            return entity;
        }
    };
    var _closure1_slot11 = tangon;
    tangon = 20;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/nameplates/native/NameplateProductPreview.tsx';
    tangon = report.bind(oscard)(tangon);
    michal = function() { // Original name: _default
        _fun00003: for(var _fun00004_ip = 0; ; ) switch(_fun00004_ip) {
 0:
            entity = _closure1_slot9;
            report = undefined;
            backup = entity.bind(report)();
            michal = _closure1_slot0;
            tangon = _closure1_slot2;
            entity = 7;
            entity = tangon[entity];
            oscard = michal.bind(report)(entity);
            zuuluu = oscard.useStateFromStores;
            entity = _closure1_slot6;
            michal = new Array(1);
            michal[0] = entity;
            entity = function() {
                michal = _closure1_slot6;
                entity = michal.getPendingNameplate;
                entity = entity.bind(michal)();
                return entity;
            };
            zuuluu = zuuluu.bind(oscard)(michal, entity);
            michal = _closure1_slot1;
            entity = 8;
            entity = tangon[entity];
            michal = michal.bind(report)(entity);
            yankee = null;
            tangon = yankee == zuuluu;
            entity = undefined;
            if(tangon) { _fun00004_ip = 98; continue _fun00003 }
 92:
            entity = zuuluu.skuId;
 98:
            entity = michal.bind(report)(entity);
            romeon = entity.product;
            entity = yankee != zuuluu;
            source = undefined;
            if(!entity) { _fun00004_ip = 149; continue _fun00003 }
 118:
            michal = _closure1_slot0;
            tangon = _closure1_slot2;
            entity = 9;
            entity = tangon[entity];
            michal = michal.bind(report)(entity);
            entity = michal.getNameplateDataFromRecord;
            source = entity.bind(michal)(zuuluu);
 149:
            michal = _closure1_slot0;
            zuuluu = _closure1_slot2;
            entity = 10;
            entity = zuuluu[entity];
            michal = michal.bind(report)(entity);
            entity = michal.getNameplateSampleUsers;
            output = entity.bind(michal)();
            michal = yankee == source;
            entity = null;
            if(michal) { _fun00004_ip = 989; continue _fun00003 }
 191:
            tangon = _closure1_slot7;
            zuuluu = _closure1_slot4;
            michal = {};
            oscard = backup.container;
            michal['style'] = oscard;
            oscard = 'box-none';
            michal['pointerEvents'] = oscard;
            golfie = _closure1_slot0;
            oscard = _closure1_slot2;
            echoed = 11;
            option = oscard[echoed];
            option = golfie.bind(report)(option);
            verify = option.intl;
            option = verify.formatToPlainString;
            oscard = oscard[echoed];
            oscard = golfie.bind(report)(oscard);
            oscard = oscard.t;
            golfie = oscard.D6zVpq;
            oscard = {};
            foxtra = yankee == romeon;
            yankee = undefined;
            if(foxtra) { _fun00004_ip = 289; continue _fun00003 }
 284:
            yankee = romeon.name;
 289:
            oscard['nameplate'] = yankee;
            oscard = option.bind(verify)(golfie, oscard);
            michal['accessibilityLabel'] = oscard;
            oscard = 'image';
            michal['accessibilityRole'] = oscard;
            option = _closure1_slot8;
            golfie = _closure1_slot4;
            oscard = {};
            verify = backup.memberListContainer;
            oscard['style'] = verify;
            romeon = _closure1_slot7;
            foxtra = _closure1_slot11;
            verify = {};
            yankee = output.mallow;
            verify['user'] = yankee;
            sizing = true;
            verify['end'] = sizing;
            yankee = romeon.bind(report)(foxtra, verify);
            verify = new Array(9);
            verify[0] = yankee;
            ctrled = _closure1_slot0;
            kiloes = _closure1_slot2;
            yankee = 12;
            result = kiloes[yankee];
            result = ctrled.bind(report)(result);
            update = result.Text;
            result = {'maxFontSizeMultiplier': 2, 'variant': 'text-sm/semibold', 'accessibilityRole': 'header', 'color': 'interactive-normal'};
            vacuum = backup.memberListTitle;
            result['style'] = vacuum;
            vacuum = kiloes[echoed];
            vacuum = ctrled.bind(report)(vacuum);
            config = vacuum.intl;
            sequen = config.string;
            vacuum = kiloes[echoed];
            vacuum = ctrled.bind(report)(vacuum);
            vacuum = vacuum.t;
            vacuum = vacuum.yzW/fX;
            sequen = sequen.bind(config)(vacuum);
            vacuum = new Array(2);
            vacuum[0] = sequen;
            sequen = ' — 3';
            vacuum[1] = sequen;
            result['children'] = vacuum;
            result = option.bind(report)(update, result);
            verify[1] = result;
            result = {};
            update = output.phibi;
            result['user'] = update;
            result['start'] = sizing;
            result = romeon.bind(report)(foxtra, result);
            verify[2] = result;
            update = _closure1_slot10;
            result = {};
            result['nameplate'] = source;
            result = romeon.bind(report)(update, result);
            verify[3] = result;
            result = {};
            update = output.locke;
            result['user'] = update;
            result['end'] = sizing;
            result = romeon.bind(report)(foxtra, result);
            verify[4] = result;
            yankee = kiloes[yankee];
            yankee = ctrled.bind(report)(yankee);
            result = yankee.Text;
            yankee = {'maxFontSizeMultiplier': 2, 'variant': 'text-sm/semibold', 'accessibilityRole': 'header', 'color': 'interactive-normal'};
            update = backup.memberListTitle;
            yankee['style'] = update;
            update = kiloes[echoed];
            update = ctrled.bind(report)(update);
            source = update.intl;
            update = source.string;
            echoed = kiloes[echoed];
            echoed = ctrled.bind(report)(echoed);
            echoed = echoed.t;
            echoed = echoed.NG43//;
            update = update.bind(source)(echoed);
            echoed = new Array(2);
            echoed[0] = update;
            update = ' — 12';
            echoed[1] = update;
            yankee['children'] = echoed;
            yankee = option.bind(report)(result, yankee);
            verify[5] = yankee;
            yankee = {};
            output = output.boom;
            yankee['user'] = output;
            yankee['start'] = sizing;
            yankee = romeon.bind(report)(foxtra, yankee);
            verify[6] = yankee;
            yankee = _closure1_slot1;
            offset = 13;
            foxtra = kiloes[offset];
            echoed = yankee.bind(report)(foxtra);
            result = {};
            foxtra = backup.memberListGradient;
            result['style'] = foxtra;
            foxtra = {'x': 0, 'y': 0};
            result['start'] = foxtra;
            foxtra = {'x': 0, 'y': 0.4};
            result['end'] = foxtra;
            foxtra = backup.memberListGradient;
            foxtra = foxtra.color;
            update = new Array(2);
            update[0] = foxtra;
            foxtra = backup.memberListGradient;
            ctrled = foxtra.color;
            foxtra = global;
            sizing = foxtra.HermesInternal;
            source = sizing.concat;
            output = '';
            sizing = '00';
            source = source.bind(output)(ctrled, sizing);
            update[1] = source;
            result['colors'] = update;
            result = romeon.bind(report)(echoed, result);
            verify[7] = result;
            offset = kiloes[offset];
            yankee = yankee.bind(report)(offset);
            offset = {};
            kiloes = backup.memberListGradient;
            offset['style'] = kiloes;
            kiloes = {'x': 0, 'y': 0.6};
            offset['start'] = kiloes;
            kiloes = {'x': 0, 'y': 1};
            offset['end'] = kiloes;
            kiloes = backup.memberListGradient;
            kiloes = kiloes.color;
            foxtra = foxtra.HermesInternal;
            foxtra = foxtra.concat;
            kiloes = foxtra.bind(output)(kiloes, sizing);
            foxtra = new Array(2);
            foxtra[0] = kiloes;
            backup = backup.memberListGradient;
            backup = backup.color;
            foxtra[1] = backup;
            offset['colors'] = foxtra;
            offset = romeon.bind(report)(yankee, offset);
            verify[8] = offset;
            oscard['children'] = verify;
            oscard = option.bind(report)(golfie, oscard);
            michal['children'] = oscard;
            entity = tangon.bind(report)(zuuluu, michal);
 989:
            return entity;
        }
    };
    zuuluu['default'] = michal;
    return entity;
})();