// app/modules/group_dm/native/ChatGDMUpsellActionSheet.tsx
export default (function(argFoo, argBar, argBaz, argCorge, _, argFred, argPlugh) {
    report = argBar;
    yankee = argBaz;
    zulu = argFred;
    oscar = argPlugh;
    var _closure1_slot0 = report;
    var _closure1_slot1 = yankee;
    var _closure1_slot2 = oscar;
    entity = global;
    options = entity.Object;
    golf = options.defineProperty;
    tango = {};
    entity = true;
    tango['value'] = entity;
    entity = '__esModule';
    entity = golf.bind(options)(zulu, entity, tango);
    entity = 0;
    golf = oscar[entity];
    tango = argCorge;
    entity = undefined;
    tango = tango.bind(entity)(golf);
    var _closure1_slot3 = tango;
    romeo = 1;
    tango = oscar[romeo];
    tango = report.bind(entity)(tango);
    tango = tango.View;
    var _closure1_slot4 = tango;
    tango = 2;
    golf = oscar[tango];
    golf = report.bind(entity)(golf);
    golf = golf.jsx;
    var _closure1_slot5 = golf;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.jsxs;
    var _closure1_slot6 = tango;
    tango = 3;
    tango = oscar[tango];
    options = report.bind(entity)(tango);
    golf = options.createStyles;
    tango = {};
    verify = {};
    offset = 4;
    foxtrot = oscar[offset];
    foxtrot = yankee.bind(entity)(foxtrot);
    foxtrot = foxtrot.spacing;
    foxtrot = foxtrot.PX_4;
    verify['marginBottom'] = foxtrot;
    foxtrot = 'center';
    verify['textAlign'] = foxtrot;
    tango['title'] = verify;
    verify = {};
    backup = oscar[offset];
    backup = yankee.bind(entity)(backup);
    backup = backup.colors;
    backup = backup.BG_BASE_PRIMARY;
    verify['backgroundColor'] = backup;
    backup = oscar[offset];
    backup = yankee.bind(entity)(backup);
    backup = backup.spacing;
    backup = backup.PX_16;
    verify['padding'] = backup;
    tango['footer'] = verify;
    verify = {};
    verify['textAlign'] = foxtrot;
    tango['body'] = verify;
    verify = {};
    foxtrot = oscar[offset];
    foxtrot = yankee.bind(entity)(foxtrot);
    foxtrot = foxtrot.radii;
    foxtrot = foxtrot.sm;
    verify['borderRadius'] = foxtrot;
    foxtrot = oscar[offset];
    foxtrot = yankee.bind(entity)(foxtrot);
    foxtrot = foxtrot.spacing;
    foxtrot = foxtrot.PX_16;
    verify['marginVertical'] = foxtrot;
    foxtrot = oscar[offset];
    foxtrot = yankee.bind(entity)(foxtrot);
    foxtrot = foxtrot.spacing;
    foxtrot = foxtrot.PX_16;
    verify['padding'] = foxtrot;
    tango['noticeContainer'] = verify;
    verify = {'flexDirection': 'row', 'alignItems': 'center', 'paddingBottom': 16};
    tango['innerContainer'] = verify;
    verify = {'flexDirection': 'row', 'alignItems': 'center'};
    tango['secondInnerContainer'] = verify;
    verify = {};
    verify['flex'] = romeo;
    tango['text'] = verify;
    verify = {'padding': 16, 'justifyContent': 'center', 'alignItems': 'center'};
    tango['titleImage'] = verify;
    verify = {'backgroundColor': null, 'marginRight': 16, 'height': 40, 'width': 40, 'borderRadius': 20, 'alignItems': 'center', 'justifyContent': 'center'};
    romeo = oscar[offset];
    romeo = yankee.bind(entity)(romeo);
    romeo = romeo.colors;
    romeo = romeo.BG_MOD_STRONG;
    verify['backgroundColor'] = romeo;
    tango['item'] = verify;
    verify = {};
    offset = oscar[offset];
    offset = yankee.bind(entity)(offset);
    offset = offset.spacing;
    offset = offset.PX_16;
    verify['paddingTop'] = offset;
    tango['button'] = verify;
    tango = golf.bind(options)(tango);
    var _closure1_slot7 = tango;
    tango = 18;
    tango = oscar[tango];
    oscar = report.bind(entity)(tango);
    report = oscar.fileFinishedImporting;
    tango = 'modules/group_dm/native/ChatGDMUpsellActionSheet.tsx';
    tango = report.bind(oscar)(tango);
    mike = function(argFoo) { // Original name: ChatGDMUpsellActionSheet
        entity = argFoo;
        entity = entity.onClick;
        var _closure2_slot0 = entity;
        mike = _closure1_slot7;
        tango = undefined;
        output = mike.bind(tango)();
        backup = _closure1_slot1;
        update = _closure1_slot2;
        mike = 5;
        mike = update[mike];
        mike = backup.bind(tango)(mike);
        mike = mike.bind(tango)();
        verify = mike.bottom;
        oscar = _closure1_slot3;
        zulu = oscar.useCallback;
        mike = new Array(1);
        mike[0] = entity;
        entity = function() {
            golf = _closure1_slot0;
            tango = _closure1_slot2;
            entity = 6;
            zulu = tango[entity];
            entity = undefined;
            oscar = golf.bind(entity)(zulu);
            report = oscar.markDismissibleContentAsDismissed;
            zulu = 7;
            zulu = tango[zulu];
            zulu = golf.bind(entity)(zulu);
            zulu = zulu.DismissibleContent;
            zulu = zulu.GDM_INVITE_REMINDER;
            zulu = report.bind(oscar)(zulu);
            zulu = _closure1_slot1;
            mike = 8;
            mike = tango[mike];
            zulu = zulu.bind(entity)(mike);
            mike = zulu.hideActionSheet;
            mike = mike.bind(zulu)();
            mike = _closure2_slot0;
            mike = mike.bind(entity)();
            return entity;
        };
        yankee = zulu.bind(oscar)(entity, mike);
        zulu = _closure1_slot5;
        echo = _closure1_slot0;
        entity = 9;
        entity = update[entity];
        entity = echo.bind(tango)(entity);
        mike = entity.BottomSheet;
        entity = {'showGradient': true, 'scrollable': true, 'startExpanded': true};
        offset = _closure1_slot4;
        oscar = {};
        golf = output.titleImage;
        oscar['style'] = golf;
        golf = 10;
        golf = update[golf];
        options = backup.bind(tango)(golf);
        golf = {};
        foxtrot = 11;
        foxtrot = update[foxtrot];
        foxtrot = backup.bind(tango)(foxtrot);
        golf['source'] = foxtrot;
        foxtrot = 'contain';
        golf['resizeMode'] = foxtrot;
        golf = zulu.bind(tango)(options, golf);
        oscar['children'] = golf;
        oscar = zulu.bind(tango)(offset, oscar);
        entity['header'] = oscar;
        golf = _closure1_slot6;
        report = {};
        options = output.footer;
        oscar = new Array(2);
        oscar[0] = options;
        options = {};
        foxtrot = 16;
        options['padding'] = foxtrot;
        verify = verify + foxtrot;
        options['paddingBottom'] = verify;
        oscar[1] = options;
        report['style'] = oscar;
        verify = 12;
        oscar = update[verify];
        oscar = echo.bind(tango)(oscar);
        options = oscar.Button;
        oscar = {};
        sizing = 13;
        backup = update[sizing];
        backup = echo.bind(tango)(backup);
        result = backup.intl;
        kilo = result.string;
        backup = update[sizing];
        backup = echo.bind(tango)(backup);
        backup = backup.t;
        backup = backup.3PatS0;
        backup = kilo.bind(result)(backup);
        oscar['text'] = backup;
        oscar['onPress'] = yankee;
        options = zulu.bind(tango)(options, oscar);
        oscar = new Array(2);
        oscar[0] = options;
        options = {};
        yankee = output.button;
        options['style'] = yankee;
        verify = update[verify];
        verify = echo.bind(tango)(verify);
        yankee = verify.Button;
        verify = {};
        backup = update[sizing];
        backup = echo.bind(tango)(backup);
        result = backup.intl;
        kilo = result.string;
        backup = update[sizing];
        backup = echo.bind(tango)(backup);
        backup = backup.t;
        backup = backup.ETE/oK;
        backup = kilo.bind(result)(backup);
        verify['text'] = backup;
        romeo = function() { // Original name: onPress
            zulu = _closure1_slot1;
            mike = _closure1_slot2;
            entity = 8;
            mike = mike[entity];
            entity = undefined;
            zulu = zulu.bind(entity)(mike);
            mike = zulu.hideActionSheet;
            mike = mike.bind(zulu)();
            return entity;
        };
        verify['onPress'] = romeo;
        romeo = 'tertiary';
        verify['variant'] = romeo;
        verify = zulu.bind(tango)(yankee, verify);
        options['children'] = verify;
        options = zulu.bind(tango)(offset, options);
        oscar[1] = options;
        report['children'] = oscar;
        report = golf.bind(tango)(offset, report);
        entity['footer'] = report;
        report = 14;
        report = update[report];
        report = echo.bind(tango)(report);
        oscar = report.BottomSheetScrollView;
        report = {};
        backup = 15;
        options = update[backup];
        options = echo.bind(tango)(options);
        verify = options.Text;
        options = {'style': null, 'variant': 'heading-lg/extrabold', 'accessibilityRole': 'header'};
        yankee = output.title;
        options['style'] = yankee;
        yankee = update[sizing];
        yankee = echo.bind(tango)(yankee);
        kilo = yankee.intl;
        romeo = kilo.string;
        yankee = update[sizing];
        yankee = echo.bind(tango)(yankee);
        yankee = yankee.t;
        yankee = yankee.bkqux8;
        yankee = romeo.bind(kilo)(yankee);
        options['children'] = yankee;
        verify = zulu.bind(tango)(verify, options);
        options = new Array(3);
        options[0] = verify;
        verify = update[backup];
        verify = echo.bind(tango)(verify);
        yankee = verify.Text;
        verify = {'style': null, 'variant': 'text-md/medium', 'color': 'text-muted'};
        romeo = output.body;
        verify['style'] = romeo;
        romeo = update[sizing];
        romeo = echo.bind(tango)(romeo);
        result = romeo.intl;
        kilo = result.string;
        romeo = update[sizing];
        romeo = echo.bind(tango)(romeo);
        romeo = romeo.t;
        romeo = romeo.N6TdqK;
        romeo = kilo.bind(result)(romeo);
        verify['children'] = romeo;
        verify = zulu.bind(tango)(yankee, verify);
        options[1] = verify;
        verify = {};
        yankee = output.noticeContainer;
        verify['style'] = yankee;
        yankee = {};
        romeo = output.innerContainer;
        yankee['style'] = romeo;
        romeo = {};
        kilo = output.item;
        romeo['style'] = kilo;
        foxtrot = update[foxtrot];
        foxtrot = echo.bind(tango)(foxtrot);
        kilo = foxtrot.TimerIcon;
        foxtrot = {};
        source = 'sm';
        foxtrot['size'] = source;
        foxtrot = zulu.bind(tango)(kilo, foxtrot);
        romeo['children'] = foxtrot;
        foxtrot = zulu.bind(tango)(offset, romeo);
        romeo = new Array(2);
        romeo[0] = foxtrot;
        foxtrot = update[backup];
        foxtrot = echo.bind(tango)(foxtrot);
        kilo = foxtrot.Text;
        foxtrot = {'style': null, 'variant': 'text-sm/medium', 'color': 'header-secondary'};
        result = output.text;
        foxtrot['style'] = result;
        result = update[sizing];
        result = echo.bind(tango)(result);
        vacuum = result.intl;
        control = vacuum.string;
        result = update[sizing];
        result = echo.bind(tango)(result);
        result = result.t;
        result = result.Fq3DJS;
        result = control.bind(vacuum)(result);
        foxtrot['children'] = result;
        foxtrot = zulu.bind(tango)(kilo, foxtrot);
        romeo[1] = foxtrot;
        yankee['children'] = romeo;
        romeo = golf.bind(tango)(offset, yankee);
        yankee = new Array(2);
        yankee[0] = romeo;
        romeo = {};
        foxtrot = output.secondInnerContainer;
        romeo['style'] = foxtrot;
        foxtrot = {};
        kilo = output.item;
        foxtrot['style'] = kilo;
        kilo = 17;
        kilo = update[kilo];
        kilo = echo.bind(tango)(kilo);
        result = kilo.LinkIcon;
        kilo = {};
        kilo['size'] = source;
        kilo = zulu.bind(tango)(result, kilo);
        foxtrot['children'] = kilo;
        kilo = zulu.bind(tango)(offset, foxtrot);
        foxtrot = new Array(2);
        foxtrot[0] = kilo;
        backup = update[backup];
        backup = echo.bind(tango)(backup);
        kilo = backup.Text;
        backup = {'style': null, 'variant': 'text-sm/medium', 'color': 'header-secondary'};
        output = output.text;
        backup['style'] = output;
        output = update[sizing];
        output = echo.bind(tango)(output);
        result = output.intl;
        output = result.string;
        sizing = update[sizing];
        sizing = echo.bind(tango)(sizing);
        sizing = sizing.t;
        sizing = sizing.XKbf2N;
        sizing = output.bind(result)(sizing);
        backup['children'] = sizing;
        backup = zulu.bind(tango)(kilo, backup);
        foxtrot[1] = backup;
        romeo['children'] = foxtrot;
        romeo = golf.bind(tango)(offset, romeo);
        yankee[1] = romeo;
        verify['children'] = yankee;
        verify = golf.bind(tango)(offset, verify);
        options[2] = verify;
        report['children'] = options;
        report = golf.bind(tango)(oscar, report);
        entity['children'] = report;
        entity = zulu.bind(tango)(mike, entity);
        return entity;
    };
    zulu['default'] = mike;
    return entity;
})();