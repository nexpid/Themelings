// app/modules/group_dm/native/ChatGDMUpsellActionSheet.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    report = argBar;
    yankee = argBaz;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    var _closure1_slot1 = yankee;
    var _closure1_slot2 = oscard;
    entity = global;
    option = entity.Object;
    golfie = option.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(option)(zuuluu, entity, tangon);
    entity = 0;
    golfie = oscard[entity];
    tangon = argCor;
    entity = undefined;
    tangon = tangon.bind(entity)(golfie);
    var _closure1_slot3 = tangon;
    romeon = 1;
    tangon = oscard[romeon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.View;
    var _closure1_slot4 = tangon;
    tangon = 2;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    golfie = tangon.jsx;
    var _closure1_slot5 = golfie;
    tangon = tangon.jsxs;
    var _closure1_slot6 = tangon;
    tangon = 3;
    tangon = oscard[tangon];
    option = report.bind(entity)(tangon);
    golfie = option.createStyles;
    tangon = {};
    verify = {};
    offset = 4;
    foxtra = oscard[offset];
    foxtra = yankee.bind(entity)(foxtra);
    foxtra = foxtra.spacing;
    foxtra = foxtra.PX_4;
    verify['marginBottom'] = foxtra;
    foxtra = 'center';
    verify['textAlign'] = foxtra;
    tangon['title'] = verify;
    verify = {};
    backup = oscard[offset];
    backup = yankee.bind(entity)(backup);
    backup = backup.colors;
    backup = backup.BG_BASE_PRIMARY;
    verify['backgroundColor'] = backup;
    backup = oscard[offset];
    backup = yankee.bind(entity)(backup);
    backup = backup.spacing;
    backup = backup.PX_16;
    verify['padding'] = backup;
    tangon['footer'] = verify;
    verify = {};
    verify['textAlign'] = foxtra;
    tangon['body'] = verify;
    verify = {};
    foxtra = oscard[offset];
    foxtra = yankee.bind(entity)(foxtra);
    foxtra = foxtra.radii;
    foxtra = foxtra.sm;
    verify['borderRadius'] = foxtra;
    foxtra = oscard[offset];
    foxtra = yankee.bind(entity)(foxtra);
    foxtra = foxtra.spacing;
    foxtra = foxtra.PX_16;
    verify['marginVertical'] = foxtra;
    foxtra = oscard[offset];
    foxtra = yankee.bind(entity)(foxtra);
    foxtra = foxtra.spacing;
    foxtra = foxtra.PX_16;
    verify['padding'] = foxtra;
    tangon['noticeContainer'] = verify;
    verify = {'flexDirection': 'row', 'alignItems': 'center', 'paddingBottom': 16};
    tangon['innerContainer'] = verify;
    verify = {'flexDirection': 'row', 'alignItems': 'center'};
    tangon['secondInnerContainer'] = verify;
    verify = {};
    verify['flex'] = romeon;
    tangon['text'] = verify;
    verify = {'padding': 16, 'justifyContent': 'center', 'alignItems': 'center'};
    tangon['titleImage'] = verify;
    verify = {'backgroundColor': null, 'marginRight': 16, 'height': 40, 'width': 40, 'borderRadius': 20, 'alignItems': 'center', 'justifyContent': 'center'};
    romeon = oscard[offset];
    romeon = yankee.bind(entity)(romeon);
    romeon = romeon.colors;
    romeon = romeon.BG_MOD_STRONG;
    verify['backgroundColor'] = romeon;
    tangon['item'] = verify;
    verify = {};
    offset = oscard[offset];
    offset = yankee.bind(entity)(offset);
    offset = offset.spacing;
    offset = offset.PX_16;
    verify['paddingTop'] = offset;
    tangon['button'] = verify;
    tangon = golfie.bind(option)(tangon);
    var _closure1_slot7 = tangon;
    tangon = 18;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/group_dm/native/ChatGDMUpsellActionSheet.tsx';
    tangon = report.bind(oscard)(tangon);
    michal = function(argFoo) { // Original name: ChatGDMUpsellActionSheet
        entity = argFoo;
        entity = entity.onClick;
        var _closure2_slot0 = entity;
        michal = _closure1_slot7;
        tangon = undefined;
        output = michal.bind(tangon)();
        backup = _closure1_slot1;
        update = _closure1_slot2;
        michal = 5;
        michal = update[michal];
        michal = backup.bind(tangon)(michal);
        michal = michal.bind(tangon)();
        verify = michal.bottom;
        oscard = _closure1_slot3;
        zuuluu = oscard.useCallback;
        michal = new Array(1);
        michal[0] = entity;
        entity = function() {
            golfie = _closure1_slot0;
            tangon = _closure1_slot2;
            entity = 6;
            zuuluu = tangon[entity];
            entity = undefined;
            oscard = golfie.bind(entity)(zuuluu);
            report = oscard.UNSAFE_markDismissibleContentAsDismissed;
            zuuluu = 7;
            zuuluu = tangon[zuuluu];
            zuuluu = golfie.bind(entity)(zuuluu);
            zuuluu = zuuluu.DismissibleContent;
            zuuluu = zuuluu.GDM_INVITE_REMINDER;
            zuuluu = report.bind(oscard)(zuuluu);
            zuuluu = _closure1_slot1;
            michal = 8;
            michal = tangon[michal];
            zuuluu = zuuluu.bind(entity)(michal);
            michal = zuuluu.hideActionSheet;
            michal = michal.bind(zuuluu)();
            michal = _closure2_slot0;
            michal = michal.bind(entity)();
            return entity;
        };
        yankee = zuuluu.bind(oscard)(entity, michal);
        zuuluu = _closure1_slot5;
        echoed = _closure1_slot0;
        entity = 9;
        entity = update[entity];
        entity = echoed.bind(tangon)(entity);
        michal = entity.BottomSheet;
        entity = {'showGradient': true, 'scrollable': true, 'startExpanded': true};
        offset = _closure1_slot4;
        oscard = {};
        golfie = output.titleImage;
        oscard['style'] = golfie;
        golfie = 10;
        golfie = update[golfie];
        option = backup.bind(tangon)(golfie);
        golfie = {};
        foxtra = 11;
        foxtra = update[foxtra];
        foxtra = backup.bind(tangon)(foxtra);
        golfie['source'] = foxtra;
        foxtra = 'contain';
        golfie['resizeMode'] = foxtra;
        golfie = zuuluu.bind(tangon)(option, golfie);
        oscard['children'] = golfie;
        oscard = zuuluu.bind(tangon)(offset, oscard);
        entity['header'] = oscard;
        golfie = _closure1_slot6;
        report = {};
        option = output.footer;
        oscard = new Array(2);
        oscard[0] = option;
        option = {};
        foxtra = 16;
        option['padding'] = foxtra;
        verify = verify + foxtra;
        option['paddingBottom'] = verify;
        oscard[1] = option;
        report['style'] = oscard;
        verify = 12;
        oscard = update[verify];
        oscard = echoed.bind(tangon)(oscard);
        option = oscard.Button;
        oscard = {};
        sizing = 13;
        backup = update[sizing];
        backup = echoed.bind(tangon)(backup);
        result = backup.intl;
        kiloes = result.string;
        backup = update[sizing];
        backup = echoed.bind(tangon)(backup);
        backup = backup.t;
        backup = backup.3PatS0;
        backup = kiloes.bind(result)(backup);
        oscard['text'] = backup;
        oscard['onPress'] = yankee;
        option = zuuluu.bind(tangon)(option, oscard);
        oscard = new Array(2);
        oscard[0] = option;
        option = {};
        yankee = output.button;
        option['style'] = yankee;
        verify = update[verify];
        verify = echoed.bind(tangon)(verify);
        yankee = verify.Button;
        verify = {};
        backup = update[sizing];
        backup = echoed.bind(tangon)(backup);
        result = backup.intl;
        kiloes = result.string;
        backup = update[sizing];
        backup = echoed.bind(tangon)(backup);
        backup = backup.t;
        backup = backup.ETE/oK;
        backup = kiloes.bind(result)(backup);
        verify['text'] = backup;
        romeon = function() { // Original name: onPress
            zuuluu = _closure1_slot1;
            michal = _closure1_slot2;
            entity = 8;
            michal = michal[entity];
            entity = undefined;
            zuuluu = zuuluu.bind(entity)(michal);
            michal = zuuluu.hideActionSheet;
            michal = michal.bind(zuuluu)();
            return entity;
        };
        verify['onPress'] = romeon;
        romeon = 'tertiary';
        verify['variant'] = romeon;
        verify = zuuluu.bind(tangon)(yankee, verify);
        option['children'] = verify;
        option = zuuluu.bind(tangon)(offset, option);
        oscard[1] = option;
        report['children'] = oscard;
        report = golfie.bind(tangon)(offset, report);
        entity['footer'] = report;
        report = 14;
        report = update[report];
        report = echoed.bind(tangon)(report);
        oscard = report.BottomSheetScrollView;
        report = {};
        backup = 15;
        option = update[backup];
        option = echoed.bind(tangon)(option);
        verify = option.Text;
        option = {'style': null, 'variant': 'heading-lg/extrabold', 'accessibilityRole': 'header'};
        yankee = output.title;
        option['style'] = yankee;
        yankee = update[sizing];
        yankee = echoed.bind(tangon)(yankee);
        kiloes = yankee.intl;
        romeon = kiloes.string;
        yankee = update[sizing];
        yankee = echoed.bind(tangon)(yankee);
        yankee = yankee.t;
        yankee = yankee.bkqux8;
        yankee = romeon.bind(kiloes)(yankee);
        option['children'] = yankee;
        verify = zuuluu.bind(tangon)(verify, option);
        option = new Array(3);
        option[0] = verify;
        verify = update[backup];
        verify = echoed.bind(tangon)(verify);
        yankee = verify.Text;
        verify = {'style': null, 'variant': 'text-md/medium', 'color': 'text-muted'};
        romeon = output.body;
        verify['style'] = romeon;
        romeon = update[sizing];
        romeon = echoed.bind(tangon)(romeon);
        result = romeon.intl;
        kiloes = result.string;
        romeon = update[sizing];
        romeon = echoed.bind(tangon)(romeon);
        romeon = romeon.t;
        romeon = romeon.N6TdqK;
        romeon = kiloes.bind(result)(romeon);
        verify['children'] = romeon;
        verify = zuuluu.bind(tangon)(yankee, verify);
        option[1] = verify;
        verify = {};
        yankee = output.noticeContainer;
        verify['style'] = yankee;
        yankee = {};
        romeon = output.innerContainer;
        yankee['style'] = romeon;
        romeon = {};
        kiloes = output.item;
        romeon['style'] = kiloes;
        foxtra = update[foxtra];
        foxtra = echoed.bind(tangon)(foxtra);
        kiloes = foxtra.TimerIcon;
        foxtra = {};
        source = 'sm';
        foxtra['size'] = source;
        foxtra = zuuluu.bind(tangon)(kiloes, foxtra);
        romeon['children'] = foxtra;
        foxtra = zuuluu.bind(tangon)(offset, romeon);
        romeon = new Array(2);
        romeon[0] = foxtra;
        foxtra = update[backup];
        foxtra = echoed.bind(tangon)(foxtra);
        kiloes = foxtra.Text;
        foxtra = {'style': null, 'variant': 'text-sm/medium', 'color': 'header-secondary'};
        result = output.text;
        foxtra['style'] = result;
        result = update[sizing];
        result = echoed.bind(tangon)(result);
        vacuum = result.intl;
        ctrled = vacuum.string;
        result = update[sizing];
        result = echoed.bind(tangon)(result);
        result = result.t;
        result = result.Fq3DJS;
        result = ctrled.bind(vacuum)(result);
        foxtra['children'] = result;
        foxtra = zuuluu.bind(tangon)(kiloes, foxtra);
        romeon[1] = foxtra;
        yankee['children'] = romeon;
        romeon = golfie.bind(tangon)(offset, yankee);
        yankee = new Array(2);
        yankee[0] = romeon;
        romeon = {};
        foxtra = output.secondInnerContainer;
        romeon['style'] = foxtra;
        foxtra = {};
        kiloes = output.item;
        foxtra['style'] = kiloes;
        kiloes = 17;
        kiloes = update[kiloes];
        kiloes = echoed.bind(tangon)(kiloes);
        result = kiloes.LinkIcon;
        kiloes = {};
        kiloes['size'] = source;
        kiloes = zuuluu.bind(tangon)(result, kiloes);
        foxtra['children'] = kiloes;
        kiloes = zuuluu.bind(tangon)(offset, foxtra);
        foxtra = new Array(2);
        foxtra[0] = kiloes;
        backup = update[backup];
        backup = echoed.bind(tangon)(backup);
        kiloes = backup.Text;
        backup = {'style': null, 'variant': 'text-sm/medium', 'color': 'header-secondary'};
        output = output.text;
        backup['style'] = output;
        output = update[sizing];
        output = echoed.bind(tangon)(output);
        result = output.intl;
        output = result.string;
        sizing = update[sizing];
        sizing = echoed.bind(tangon)(sizing);
        sizing = sizing.t;
        sizing = sizing.XKbf2N;
        sizing = output.bind(result)(sizing);
        backup['children'] = sizing;
        backup = zuuluu.bind(tangon)(kiloes, backup);
        foxtra[1] = backup;
        romeon['children'] = foxtra;
        romeon = golfie.bind(tangon)(offset, romeon);
        yankee[1] = romeon;
        verify['children'] = yankee;
        verify = golfie.bind(tangon)(offset, verify);
        option[2] = verify;
        report['children'] = option;
        report = golfie.bind(tangon)(oscard, report);
        entity['children'] = report;
        entity = zuuluu.bind(tangon)(michal, entity);
        return entity;
    };
    zuuluu['default'] = michal;
    return entity;
})();