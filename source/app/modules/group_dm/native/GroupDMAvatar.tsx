// app/modules/group_dm/native/GroupDMAvatar.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    oscard = argBar;
    option = argBaz;
    zuuluu = argFre;
    golfie = argPlu;
    var _closure1_slot0 = oscard;
    var _closure1_slot1 = option;
    var _closure1_slot2 = golfie;
    michal = function(argFoo) { // Original name: FacepileGroupDMAvatar
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            michal = argFoo;
            result = michal.style;
            report = michal.size;
            offset = michal.animate;
            yankee = michal.users;
            romeon = michal.sources;
            foxtra = michal.pileSizeOverride;
            output = michal.status;
            golfie = michal.accessible;
            oscard = michal.accessibilityLabel;
            tangon = undefined;
            var _closure2_slot1 = tangon;
            michal = _closure1_slot11;
            backup = michal.bind(tangon)();
            option = _closure1_slot0;
            zuuluu = _closure1_slot2;
            michal = 7;
            zuuluu = zuuluu[michal];
            zuuluu = option.bind(tangon)(zuuluu);
            zuuluu = zuuluu.AVATAR_SIZE_MAP;
            update = zuuluu[report];
            var _closure2_slot0 = update;
            kiloes = _closure1_slot3;
            verify = kiloes.useMemo;
            option = new Array(1);
            option[0] = update;
            zuuluu = function() {
                entity = {};
                michal = _closure2_slot0;
                entity['width'] = michal;
                entity['height'] = michal;
                return entity;
            };
            echoed = verify.bind(kiloes)(zuuluu, option);
            verify = null;
            if(!(verify == foxtra)) { _fun00002_ip = 148; continue _fun00001 }
 140:
            zuuluu = _closure1_slot10;
            foxtra = zuuluu[report];
 148:
            zuuluu = _closure1_slot0;
            report = _closure1_slot2;
            michal = report[michal];
            michal = zuuluu.bind(tangon)(michal);
            michal = michal.AVATAR_SIZE_MAP;
            kiloes = michal[foxtra];
            _closure2_slot1 = kiloes;
            option = _closure1_slot3;
            zuuluu = option.useMemo;
            michal = new Array(2);
            michal[0] = update;
            michal[1] = kiloes;
            entity = function() {
                entity = _closure2_slot1;
                offset = 2;
                golfie = entity / offset;
                entity = _closure1_slot9;
                option = golfie + entity;
                michal = offset * option;
                entity = global;
                verify = entity.Math;
                report = verify.sqrt;
                yankee = entity.Math;
                zuuluu = yankee.pow;
                zuuluu = zuuluu.bind(yankee)(option, offset);
                zuuluu = offset * zuuluu;
                zuuluu = report.bind(verify)(zuuluu);
                report = _closure2_slot0;
                golfie = report - golfie;
                report = _closure2_slot1;
                report = golfie - report;
                verify = entity.Math;
                golfie = verify.sqrt;
                yankee = entity.Math;
                entity = yankee.pow;
                entity = entity.bind(yankee)(report, offset);
                entity = offset * entity;
                entity = golfie.bind(verify)(entity);
                golfie = -zuuluu;
                zuuluu = option - zuuluu;
                zuuluu = golfie - zuuluu;
                zuuluu = zuuluu - entity;
                entity = entity - report;
                report = zuuluu + entity;
                entity = {};
                zuuluu = {};
                option = _closure1_slot0;
                golfie = _closure1_slot2;
                oscard = 8;
                golfie = golfie[oscard];
                oscard = undefined;
                oscard = option.bind(oscard)(golfie);
                oscard = oscard.CutoutShape;
                oscard = oscard.Circle;
                zuuluu['shape'] = oscard;
                oscard = _closure2_slot1;
                oscard = oscard - michal;
                oscard = oscard - report;
                zuuluu['x'] = oscard;
                tangon = _closure2_slot1;
                tangon = tangon - michal;
                tangon = tangon - report;
                zuuluu['y'] = tangon;
                zuuluu['size'] = michal;
                michal = new Array(1);
                michal[0] = zuuluu;
                entity['nativeCutouts'] = michal;
                return entity;
            };
            option = zuuluu.bind(option)(entity, michal);
            zuuluu = _closure1_slot8;
            michal = _closure1_slot4;
            entity = {};
            kiloes = new Array(2);
            kiloes[0] = echoed;
            kiloes[1] = result;
            entity['style'] = kiloes;
            entity['accessible'] = golfie;
            entity['accessibilityLabel'] = oscard;
            kiloes = true;
            entity['accessibilityElementsHidden'] = kiloes;
            oscard = 'no-hide-descendants';
            entity['importantForAccessibility'] = oscard;
            golfie = _closure1_slot7;
            oscard = _closure1_slot1;
            result = 5;
            report = report[result];
            oscard = oscard.bind(tangon)(report);
            report = {};
            echoed = backup.firstFace;
            report['style'] = echoed;
            report['size'] = foxtra;
            report['guildId'] = tangon;
            report['cutout'] = option;
            report['animate'] = offset;
            if(!(verify != yankee)) { _fun00002_ip = 332; continue _fun00001 }
 318:
            option = {};
            echoed = 0;
            echoed = yankee[echoed];
            option['user'] = echoed;
            _fun00002_ip = 347; continue _fun00001;
 332:
            echoed = {};
            update = 0;
            update = romeon[update];
            echoed['source'] = update;
            option = echoed;
 347:
            ctrled = report;
            source = option;
            option = copyDataProperties(ctrled, source);
            oscard = golfie.bind(tangon)(oscard, report);
            report = new Array(2);
            report[0] = oscard;
            option = _closure1_slot7;
            golfie = _closure1_slot1;
            oscard = _closure1_slot2;
            oscard = oscard[result];
            golfie = golfie.bind(tangon)(oscard);
            oscard = {};
            oscard['status'] = output;
            sizing = _closure1_slot6;
            sizing = sizing.REFRESH_MEDIUM_10;
            oscard['statusSizeOverride'] = sizing;
            oscard['autoStatusCutout'] = kiloes;
            backup = backup.secondFace;
            oscard['style'] = backup;
            oscard['size'] = foxtra;
            oscard['guildId'] = tangon;
            oscard['animate'] = offset;
            if(!(verify != yankee)) { _fun00002_ip = 460; continue _fun00001 }
 445:
            verify = {};
            offset = 1;
            offset = yankee[offset];
            verify['user'] = offset;
            _fun00002_ip = 476; continue _fun00001;
 460:
            offset = {};
            yankee = 1;
            yankee = romeon[yankee];
            offset['source'] = yankee;
            verify = offset;
 476:
            ctrled = oscard;
            source = verify;
            verify = copyDataProperties(ctrled, source);
            oscard = option.bind(tangon)(golfie, oscard);
            report[1] = oscard;
            entity['children'] = report;
            entity = zuuluu.bind(tangon)(michal, entity);
            return entity;
        }
    };
    var _closure1_slot12 = michal;
    entity = global;
    offset = entity.Object;
    verify = offset.defineProperty;
    report = {};
    entity = true;
    report['value'] = entity;
    entity = '__esModule';
    entity = verify.bind(offset)(zuuluu, entity, report);
    entity = 0;
    verify = golfie[entity];
    report = argCor;
    entity = undefined;
    report = report.bind(entity)(verify);
    var _closure1_slot3 = report;
    report = 1;
    report = golfie[report];
    report = oscard.bind(entity)(report);
    report = report.View;
    var _closure1_slot4 = report;
    report = 2;
    report = golfie[report];
    report = option.bind(entity)(report);
    var _closure1_slot5 = report;
    report = 3;
    option = golfie[report];
    option = oscard.bind(entity)(option);
    option = option.StatusSizes;
    var _closure1_slot6 = option;
    option = 4;
    verify = golfie[option];
    verify = oscard.bind(entity)(verify);
    verify = verify.jsx;
    var _closure1_slot7 = verify;
    option = golfie[option];
    option = oscard.bind(entity)(option);
    option = option.jsxs;
    var _closure1_slot8 = option;
    var _closure1_slot9 = report;
    report = {};
    option = 5;
    verify = golfie[option];
    verify = oscard.bind(entity)(verify);
    verify = verify.AvatarSizes;
    offset = verify.LARGE_48;
    verify = golfie[option];
    verify = oscard.bind(entity)(verify);
    verify = verify.AvatarSizes;
    verify = verify.SMALL;
    report[offset] = verify;
    verify = golfie[option];
    verify = oscard.bind(entity)(verify);
    verify = verify.AvatarSizes;
    offset = verify.XLARGE;
    verify = golfie[option];
    verify = oscard.bind(entity)(verify);
    verify = verify.AvatarSizes;
    verify = verify.NORMAL;
    report[offset] = verify;
    verify = golfie[option];
    verify = oscard.bind(entity)(verify);
    verify = verify.AvatarSizes;
    offset = verify.XXLARGE;
    verify = golfie[option];
    verify = oscard.bind(entity)(verify);
    verify = verify.AvatarSizes;
    verify = verify.LARGE;
    report[offset] = verify;
    verify = golfie[option];
    verify = oscard.bind(entity)(verify);
    verify = verify.AvatarSizes;
    offset = verify.PROFILE;
    verify = golfie[option];
    verify = oscard.bind(entity)(verify);
    verify = verify.AvatarSizes;
    verify = verify.XXLARGE;
    report[offset] = verify;
    verify = golfie[option];
    verify = oscard.bind(entity)(verify);
    verify = verify.AvatarSizes;
    offset = verify.REFRESH_MEDIUM_32;
    verify = golfie[option];
    verify = oscard.bind(entity)(verify);
    verify = verify.AvatarSizes;
    verify = verify.XSMALL_20;
    report[offset] = verify;
    verify = golfie[option];
    verify = oscard.bind(entity)(verify);
    verify = verify.AvatarSizes;
    offset = verify.XSMALL;
    verify = golfie[option];
    verify = oscard.bind(entity)(verify);
    verify = verify.AvatarSizes;
    verify = verify.SIZE_16;
    report[offset] = verify;
    verify = golfie[option];
    verify = oscard.bind(entity)(verify);
    verify = verify.AvatarSizes;
    offset = verify.SIZE_16;
    verify = golfie[option];
    verify = oscard.bind(entity)(verify);
    verify = verify.AvatarSizes;
    verify = verify.XXSMALL_10;
    report[offset] = verify;
    verify = golfie[option];
    verify = oscard.bind(entity)(verify);
    verify = verify.AvatarSizes;
    verify = verify.NORMAL;
    option = golfie[option];
    option = oscard.bind(entity)(option);
    option = option.AvatarSizes;
    option = option.XSMALL;
    report[verify] = option;
    var _closure1_slot10 = report;
    report = 6;
    report = golfie[report];
    verify = oscard.bind(entity)(report);
    option = verify.createStyles;
    report = {};
    offset = {'position': 'absolute', 'top': 0, 'left': 0};
    report['firstFace'] = offset;
    offset = {'position': 'absolute', 'bottom': 0, 'right': 0};
    report['secondFace'] = offset;
    report = option.bind(verify)(report);
    var _closure1_slot11 = report;
    report = 11;
    report = golfie[report];
    golfie = oscard.bind(entity)(report);
    oscard = golfie.fileFinishedImporting;
    report = 'modules/group_dm/native/GroupDMAvatar.tsx';
    report = oscard.bind(golfie)(report);
    tangon = function(argFoo) { // Original name: GroupDMAvatar
        _fun00003: for(var _fun00004_ip = 0; ; ) switch(_fun00004_ip) {
 0:
            michal = argFoo;
            yankee = michal.style;
            verify = michal.channel;
            var _closure2_slot0 = verify;
            offset = michal.size;
            option = michal.animate;
            foxtra = michal.pileSizeOverride;
            romeon = michal.status;
            golfie = michal.accessible;
            oscard = michal.accessibilityLabel;
            tangon = _closure1_slot0;
            report = _closure1_slot2;
            zuuluu = 9;
            zuuluu = report[zuuluu];
            report = undefined;
            backup = tangon.bind(report)(zuuluu);
            tangon = backup.useStateFromStoresArray;
            kiloes = _closure1_slot5;
            zuuluu = new Array(1);
            zuuluu[0] = kiloes;
            entity = function() {
                entity = _closure2_slot0;
                zuuluu = entity.recipients;
                michal = zuuluu.map;
                entity = function(argFoo) {
                    zuuluu = _closure1_slot5;
                    michal = zuuluu.getUser;
                    entity = argFoo;
                    entity = michal.bind(zuuluu)(entity);
                    return entity;
                };
                zuuluu = michal.bind(zuuluu)(entity);
                michal = zuuluu.filter;
                report = _closure1_slot0;
                tangon = _closure1_slot2;
                entity = 10;
                tangon = tangon[entity];
                entity = undefined;
                entity = report.bind(entity)(tangon);
                entity = entity.isNotNullish;
                entity = michal.bind(zuuluu)(entity);
                return entity;
            };
            kiloes = tangon.bind(backup)(zuuluu, entity);
            zuuluu = verify.icon;
            entity = null;
            if(!(entity == zuuluu)) { _fun00004_ip = 297; continue _fun00003 }
 120:
            entity = verify.recipients;
            entity = entity.length;
            backup = 0;
            if(!(backup !== entity)) { _fun00004_ip = 297; continue _fun00003 }
 140:
            entity = kiloes.length;
            if(!(backup !== entity)) { _fun00004_ip = 297; continue _fun00003 }
 152:
            zuuluu = kiloes.length;
            entity = 1;
            if(!(entity !== zuuluu)) { _fun00004_ip = 218; continue _fun00003 }
 164:
            tangon = _closure1_slot7;
            zuuluu = _closure1_slot12;
            entity = {};
            entity['status'] = romeon;
            entity['style'] = yankee;
            entity['size'] = offset;
            entity['animate'] = option;
            entity['users'] = kiloes;
            entity['pileSizeOverride'] = foxtra;
            entity['accessible'] = golfie;
            entity['accessibilityLabel'] = oscard;
            entity = tangon.bind(report)(zuuluu, entity);
            _fun00004_ip = 295; continue _fun00003;
 218:
            foxtra = _closure1_slot7;
            tangon = _closure1_slot1;
            sizing = _closure1_slot2;
            zuuluu = 5;
            zuuluu = sizing[zuuluu];
            tangon = tangon.bind(report)(zuuluu);
            zuuluu = {};
            sizing = true;
            zuuluu['autoStatusCutout'] = sizing;
            zuuluu['status'] = romeon;
            zuuluu['style'] = yankee;
            zuuluu['size'] = offset;
            backup = kiloes[backup];
            zuuluu['user'] = backup;
            zuuluu['guildId'] = report;
            zuuluu['animate'] = option;
            zuuluu['accessible'] = golfie;
            zuuluu['accessibilityLabel'] = oscard;
            entity = foxtra.bind(report)(tangon, zuuluu);
 295:
            _fun00004_ip = 366; continue _fun00003;
 297:
            tangon = _closure1_slot7;
            zuuluu = _closure1_slot1;
            foxtra = _closure1_slot2;
            michal = 5;
            michal = foxtra[michal];
            zuuluu = zuuluu.bind(report)(michal);
            michal = {};
            foxtra = true;
            michal['autoStatusCutout'] = foxtra;
            michal['status'] = romeon;
            michal['style'] = yankee;
            michal['size'] = offset;
            michal['channel'] = verify;
            michal['animate'] = option;
            michal['accessible'] = golfie;
            michal['accessibilityLabel'] = oscard;
            entity = tangon.bind(report)(zuuluu, michal);
 366:
            return entity;
        }
    };
    zuuluu['default'] = tangon;
    zuuluu['FacepileGroupDMAvatar'] = michal;
    return entity;
})();