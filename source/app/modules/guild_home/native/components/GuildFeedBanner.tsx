// app/modules/guild_home/native/components/GuildFeedBanner.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    report = argBar;
    romeon = argBaz;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    var _closure1_slot1 = romeon;
    var _closure1_slot2 = oscard;
    entity = global;
    option = entity.Object;
    golfie = option.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(option)(zuuluu, entity, tangon);
    entity = 0;
    golfie = oscard[entity];
    tangon = argCor;
    entity = undefined;
    golfie = tangon.bind(entity)(golfie);
    var _closure1_slot3 = golfie;
    tangon = 1;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    option = tangon.View;
    var _closure1_slot4 = option;
    tangon = tangon.Image;
    var _closure1_slot5 = tangon;
    tangon = 2;
    tangon = oscard[tangon];
    tangon = romeon.bind(entity)(tangon);
    var _closure1_slot6 = tangon;
    tangon = 3;
    tangon = oscard[tangon];
    tangon = romeon.bind(entity)(tangon);
    var _closure1_slot7 = tangon;
    backup = 4;
    tangon = oscard[backup];
    tangon = report.bind(entity)(tangon);
    foxtra = tangon.GUILD_FEED_CARD_MARGIN_HORIZONTAL;
    var _closure1_slot8 = foxtra;
    tangon = tangon.GUILD_FEED_MIN_BANNER_HEIGHT;
    var _closure1_slot9 = tangon;
    tangon = 5;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.GuildFeatures;
    var _closure1_slot10 = tangon;
    tangon = 6;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    option = tangon.jsx;
    var _closure1_slot11 = option;
    tangon = tangon.jsxs;
    var _closure1_slot12 = tangon;
    tangon = 7;
    tangon = oscard[tangon];
    verify = report.bind(entity)(tangon);
    option = verify.createStyles;
    tangon = {};
    offset = {'borderRadius': null, 'height': 64, 'width': 64};
    yankee = 8;
    kiloes = oscard[yankee];
    kiloes = romeon.bind(entity)(kiloes);
    kiloes = kiloes.radii;
    kiloes = kiloes.lg;
    offset['borderRadius'] = kiloes;
    tangon['avatar'] = offset;
    offset = {};
    kiloes = 24;
    offset['paddingBottom'] = kiloes;
    kiloes = oscard[yankee];
    kiloes = romeon.bind(entity)(kiloes);
    kiloes = kiloes.colors;
    kiloes = kiloes.BACKGROUND_SECONDARY;
    offset['backgroundColor'] = kiloes;
    tangon['container'] = offset;
    offset = {};
    offset['marginTop'] = backup;
    tangon['description'] = offset;
    offset = {'marginTop': null, 'alignItems': 'center', 'flexDirection': 'row'};
    offset['marginTop'] = foxtra;
    foxtra = 'center';
    tangon['textContainer'] = offset;
    offset = {};
    backup = '100%';
    offset['width'] = backup;
    tangon['content'] = offset;
    offset = {};
    offset['marginLeft'] = yankee;
    tangon['icon'] = offset;
    offset = {};
    offset['alignItems'] = foxtra;
    foxtra = oscard[yankee];
    foxtra = romeon.bind(entity)(foxtra);
    foxtra = foxtra.colors;
    foxtra = foxtra.BACKGROUND_SECONDARY;
    offset['backgroundColor'] = foxtra;
    tangon['headerContainer'] = offset;
    offset = {};
    foxtra = oscard[yankee];
    foxtra = romeon.bind(entity)(foxtra);
    foxtra = foxtra.radii;
    foxtra = foxtra.lg;
    offset['borderTopRightRadius'] = foxtra;
    foxtra = oscard[yankee];
    foxtra = romeon.bind(entity)(foxtra);
    foxtra = foxtra.radii;
    foxtra = foxtra.lg;
    offset['borderTopLeftRadius'] = foxtra;
    foxtra = -16;
    offset['marginTop'] = foxtra;
    tangon['headerBorder'] = offset;
    offset = {'padding': 4, 'borderRadius': null, 'alignSelf': 'flex-start'};
    foxtra = oscard[yankee];
    foxtra = romeon.bind(entity)(foxtra);
    foxtra = foxtra.radii;
    foxtra = foxtra.lg;
    offset['borderRadius'] = foxtra;
    foxtra = oscard[yankee];
    foxtra = romeon.bind(entity)(foxtra);
    foxtra = foxtra.colors;
    foxtra = foxtra.BACKGROUND_SECONDARY;
    offset['backgroundColor'] = foxtra;
    tangon['guildIconContainer'] = offset;
    offset = {'width': 4, 'height': 4, 'borderRadius': null, 'marginRight': 4};
    foxtra = oscard[yankee];
    foxtra = romeon.bind(entity)(foxtra);
    foxtra = foxtra.radii;
    foxtra = foxtra.xs;
    offset['borderRadius'] = foxtra;
    foxtra = oscard[yankee];
    foxtra = romeon.bind(entity)(foxtra);
    foxtra = foxtra.unsafe_rawColors;
    foxtra = foxtra.GREEN_360;
    offset['backgroundColor'] = foxtra;
    tangon['dotOnline'] = offset;
    offset = {'width': 8, 'height': 8, 'borderRadius': null, 'marginRight': 4, 'marginLeft': 16};
    foxtra = oscard[yankee];
    foxtra = romeon.bind(entity)(foxtra);
    foxtra = foxtra.radii;
    foxtra = foxtra.sm;
    offset['borderRadius'] = foxtra;
    yankee = oscard[yankee];
    yankee = romeon.bind(entity)(yankee);
    yankee = yankee.unsafe_rawColors;
    yankee = yankee.PRIMARY_400;
    offset['backgroundColor'] = yankee;
    tangon['dotOffline'] = offset;
    offset = {'flexDirection': 'row', 'alignItems': 'center', 'marginRight': 12};
    tangon['publicInfo'] = offset;
    offset = {'marginRight': 4, 'width': 14, 'height': 14};
    tangon['publicIcon'] = offset;
    offset = {'marginTop': 4, 'flexDirection': 'row', 'alignItems': 'center'};
    tangon['memberInfo'] = offset;
    offset = {};
    yankee = '90%';
    offset['maxWidth'] = yankee;
    tangon['title'] = offset;
    tangon = option.bind(verify)(tangon);
    var _closure1_slot13 = tangon;
    tangon = {};
    option = 'function GuildFeedBannerTsx1(){const{opacity}=this.__closure;return{opacity:opacity.get()};}';
    tangon['code'] = option;
    var _closure1_slot14 = tangon;
    tangon = function(argFoo) { // Original name: GuildFeedBanner
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            entity = argFoo;
            kiloes = entity.guild;
            var _closure2_slot0 = kiloes;
            output = entity.description;
            michal = entity.hideDescription;
            foxtra = entity.hideMemberCount;
            tangon = undefined;
            var _closure2_slot2 = tangon;
            var _closure2_slot3 = tangon;
            var _closure2_slot4 = tangon;
            var _closure2_slot5 = tangon;
            entity = _closure1_slot13;
            record = entity.bind(tangon)();
            zuuluu = _closure1_slot0;
            oscard = _closure1_slot2;
            entity = 9;
            report = oscard[entity];
            option = zuuluu.bind(tangon)(report);
            golfie = option.useSharedValue;
            report = 0;
            option = golfie.bind(option)(report);
            var _closure2_slot1 = option;
            entity = oscard[entity];
            report = zuuluu.bind(tangon)(entity);
            zuuluu = report.useAnimatedStyle;
            entity = function() { // Original name: R
                entity = {};
                zuuluu = _closure2_slot1;
                michal = zuuluu.get;
                michal = michal.bind(zuuluu)();
                entity['opacity'] = michal;
                return entity;
            };
            golfie = {};
            golfie['opacity'] = option;
            entity['__closure'] = golfie;
            golfie = 10872399645496.0;
            entity['__workletHash'] = golfie;
            golfie = _closure1_slot14;
            entity['__initData'] = golfie;
            romeon = zuuluu.bind(report)(entity);
            report = _closure1_slot1;
            entity = 10;
            zuuluu = oscard[entity];
            zuuluu = report.bind(tangon)(zuuluu);
            zuuluu = zuuluu.bind(tangon)();
            golfie = zuuluu.height;
            zuuluu = global;
            verify = zuuluu.Math;
            option = verify.max;
            zuuluu = 0.22;
            golfie = zuuluu * golfie;
            zuuluu = _closure1_slot9;
            yankee = option.bind(verify)(golfie, zuuluu);
            zuuluu = 11;
            zuuluu = oscard[zuuluu];
            zuuluu = report.bind(tangon)(zuuluu);
            update = zuuluu.bind(tangon)();
            golfie = _closure1_slot3;
            oscard = golfie.useEffect;
            report = new Array(1);
            report[0] = kiloes;
            zuuluu = function() {
                zuuluu = _closure1_slot0;
                michal = _closure1_slot2;
                entity = 12;
                michal = michal[entity];
                entity = undefined;
                tangon = zuuluu.bind(entity)(michal);
                zuuluu = tangon.fetchGuildForPopout;
                michal = _closure2_slot0;
                michal = michal.id;
                michal = zuuluu.bind(tangon)(michal);
                return entity;
            };
            zuuluu = oscard.bind(golfie)(zuuluu, report);
            oscard = golfie.useMemo;
            report = new Array(1);
            report[0] = kiloes;
            zuuluu = function() {
                _fun00003: for(var _fun00004_ip = 0; ; ) switch(_fun00004_ip) {
 0:
                    entity = _closure2_slot0;
                    tangon = entity.features;
                    zuuluu = tangon.has;
                    entity = _closure1_slot10;
                    entity = entity.ANIMATED_BANNER;
                    option = zuuluu.bind(tangon)(entity);
                    if(!option) { _fun00004_ip = 73; continue _fun00003 }
 39:
                    tangon = _closure1_slot0;
                    zuuluu = _closure1_slot2;
                    entity = 13;
                    zuuluu = zuuluu[entity];
                    entity = undefined;
                    zuuluu = tangon.bind(entity)(zuuluu);
                    entity = zuuluu.isAndroid;
                    entity = entity.bind(zuuluu)();
                    option = !entity;
 73:
                    entity = _closure2_slot0;
                    entity = entity.banner;
                    tangon = null;
                    entity = tangon != entity;
                    oscard = null;
                    if(!entity) { _fun00004_ip = 154; continue _fun00003 }
 94:
                    golfie = _closure1_slot1;
                    zuuluu = _closure1_slot2;
                    entity = 14;
                    zuuluu = zuuluu[entity];
                    entity = undefined;
                    golfie = golfie.bind(entity)(zuuluu);
                    zuuluu = golfie.getGuildBannerSource;
                    entity = {};
                    verify = _closure2_slot0;
                    offset = verify.id;
                    entity['id'] = offset;
                    verify = verify.banner;
                    entity['banner'] = verify;
                    oscard = zuuluu.bind(golfie)(entity, option);
 154:
                    zuuluu = _closure2_slot0;
                    entity = oscard;
                    if(!(tangon != zuuluu)) { _fun00004_ip = 241; continue _fun00003 }
 165:
                    zuuluu = _closure2_slot0;
                    zuuluu = zuuluu.homeHeader;
                    entity = oscard;
                    if(!(tangon != zuuluu)) { _fun00004_ip = 241; continue _fun00003 }
 182:
                    tangon = _closure1_slot1;
                    zuuluu = _closure1_slot2;
                    michal = 14;
                    zuuluu = zuuluu[michal];
                    michal = undefined;
                    tangon = tangon.bind(michal)(zuuluu);
                    zuuluu = tangon.getGuildHomeHeaderSource;
                    michal = {};
                    report = _closure2_slot0;
                    oscard = report.id;
                    michal['id'] = oscard;
                    report = report.homeHeader;
                    michal['homeHeader'] = report;
                    entity = zuuluu.bind(tangon)(michal);
 241:
                    return entity;
                }
            };
            offset = oscard.bind(golfie)(zuuluu, report);
            sizing = kiloes.name;
            echoed = null;
            if(!(echoed == output)) { _fun00002_ip = 311; continue _fun00001 }
 306:
            output = kiloes.description;
 311:
            if(!michal) { _fun00002_ip = 316; continue _fun00001 }
 314:
            output = undefined;
 316:
            michal = _closure1_slot0;
            zuuluu = _closure1_slot2;
            report = 15;
            report = zuuluu[report];
            oscard = michal.bind(tangon)(report);
            report = oscard.getGuildBadgeSource;
            config = report.bind(oscard)(kiloes);
            verify = function() { // Original name: handleLoad
                tangon = _closure2_slot1;
                zuuluu = tangon.set;
                report = _closure1_slot0;
                option = _closure1_slot2;
                entity = 16;
                michal = option[entity];
                entity = undefined;
                golfie = report.bind(entity)(michal);
                oscard = golfie.withTiming;
                michal = 17;
                michal = option[michal];
                michal = report.bind(entity)(michal);
                report = michal.timingSlow;
                michal = 1;
                michal = oscard.bind(golfie)(michal, report);
                michal = zuuluu.bind(tangon)(michal);
                return entity;
            };
            report = 18;
            report = zuuluu[report];
            backup = michal.bind(tangon)(report);
            option = backup.useStateFromStoresObject;
            report = _closure1_slot6;
            golfie = new Array(1);
            golfie[0] = report;
            oscard = new Array(1);
            oscard[0] = kiloes;
            report = function() {
                entity = {};
                tangon = _closure1_slot6;
                zuuluu = tangon.getGuild;
                michal = _closure2_slot0;
                michal = michal.id;
                michal = zuuluu.bind(tangon)(michal);
                entity['discoverableGuild'] = michal;
                return entity;
            };
            report = option.bind(backup)(golfie, report, oscard);
            target = report.discoverableGuild;
            report = _closure1_slot1;
            oscard = 19;
            oscard = zuuluu[oscard];
            oscard = report.bind(tangon)(oscard);
            oscard = oscard.bind(tangon)();
            _closure2_slot2 = oscard;
            entity = zuuluu[entity];
            entity = report.bind(tangon)(entity);
            entity = entity.bind(tangon)();
            option = entity.width;
            _closure2_slot3 = option;
            golfie = entity.height;
            _closure2_slot4 = golfie;
            entity = 20;
            entity = zuuluu[entity];
            michal = michal.bind(tangon)(entity);
            entity = michal.useDrawerWidth;
            entity = entity.bind(michal)();
            _closure2_slot5 = entity;
            report = _closure1_slot3;
            zuuluu = report.useMemo;
            michal = new Array(4);
            michal[0] = option;
            michal[1] = golfie;
            michal[2] = oscard;
            michal[3] = entity;
            entity = function() {
                _fun00005: for(var _fun00006_ip = 0; ; ) switch(_fun00006_ip) {
 0:
                    michal = global;
                    oscard = michal.Math;
                    report = oscard.min;
                    tangon = _closure2_slot3;
                    zuuluu = _closure2_slot4;
                    tangon = report.bind(oscard)(tangon, zuuluu);
                    zuuluu = _closure2_slot2;
                    if(zuuluu) { _fun00006_ip = 57; continue _fun00005 }
 37:
                    report = _closure1_slot8;
                    zuuluu = 2;
                    zuuluu = zuuluu * report;
                    zuuluu = tangon - zuuluu;
                    return zuuluu;
 57:
                    golfie = michal.Math;
                    oscard = golfie.max;
                    report = _closure2_slot3;
                    zuuluu = _closure2_slot4;
                    report = oscard.bind(golfie)(report, zuuluu);
                    zuuluu = michal.Math;
                    michal = zuuluu.min;
                    entity = _closure2_slot5;
                    entity = report - entity;
                    entity = michal.bind(zuuluu)(entity, tangon);
                    return entity;
                }
            };
            backup = zuuluu.bind(report)(entity, michal);
            zuuluu = _closure1_slot12;
            michal = _closure1_slot4;
            entity = {};
            report = record.container;
            entity['style'] = report;
            golfie = _closure1_slot11;
            oscard = _closure1_slot5;
            if(!(echoed == offset)) { _fun00002_ip = 679; continue _fun00001 }
 566:
            report = {};
            result = {};
            result['height'] = yankee;
            option = '100%';
            result['width'] = option;
            option = new Array(2);
            option[0] = result;
            option[1] = romeon;
            report['style'] = option;
            result = _closure1_slot0;
            ctrled = _closure1_slot2;
            option = 21;
            option = ctrled[option];
            result = result.bind(tangon)(option);
            option = result.isThemeDark;
            option = option.bind(result)(update);
            update = _closure1_slot1;
            ctrled = _closure1_slot2;
            if(option) { _fun00002_ip = 656; continue _fun00001 }
 642:
            option = 23;
            option = ctrled[option];
            option = update.bind(tangon)(option);
            _fun00002_ip = 668; continue _fun00001;
 656:
            result = 22;
            result = ctrled[result];
            option = update.bind(tangon)(result);
 668:
            report['source'] = option;
            report['onLoad'] = verify;
            _fun00002_ip = 725; continue _fun00001;
 679:
            option = {};
            result = {};
            result['height'] = yankee;
            yankee = '100%';
            result['width'] = yankee;
            yankee = new Array(2);
            yankee[0] = result;
            yankee[1] = romeon;
            option['style'] = yankee;
            option['source'] = offset;
            option['onLoad'] = verify;
            report = option;
 725:
            oscard = golfie.bind(tangon)(oscard, report);
            report = new Array(2);
            report[0] = oscard;
            option = _closure1_slot11;
            golfie = _closure1_slot4;
            oscard = {};
            offset = record.headerContainer;
            verify = new Array(2);
            verify[0] = offset;
            offset = record.headerBorder;
            verify[1] = offset;
            oscard['style'] = verify;
            offset = _closure1_slot12;
            verify = {};
            romeon = record.content;
            yankee = new Array(2);
            yankee[0] = romeon;
            romeon = {};
            romeon['width'] = backup;
            backup = -32;
            romeon['marginTop'] = backup;
            yankee[1] = romeon;
            verify['style'] = yankee;
            yankee = {};
            romeon = record.guildIconContainer;
            yankee['style'] = romeon;
            result = _closure1_slot1;
            backup = _closure1_slot2;
            update = 24;
            romeon = backup[update];
            result = result.bind(tangon)(romeon);
            romeon = {};
            ctrled = record.avatar;
            romeon['style'] = ctrled;
            romeon['guild'] = kiloes;
            kiloes = _closure1_slot0;
            update = backup[update];
            update = kiloes.bind(tangon)(update);
            update = update.GuildIconSizes;
            update = update.XLARGE;
            romeon['size'] = update;
            sequen = true;
            romeon['animate'] = sequen;
            romeon = option.bind(tangon)(result, romeon);
            yankee['children'] = romeon;
            romeon = option.bind(tangon)(golfie, yankee);
            yankee = new Array(4);
            yankee[0] = romeon;
            romeon = {};
            result = record.textContainer;
            romeon['style'] = result;
            ctrled = 25;
            backup = backup[ctrled];
            backup = kiloes.bind(tangon)(backup);
            kiloes = backup.Text;
            backup = {'lineClamp': 1, 'variant': 'heading-xl/extrabold', 'color': 'header-primary'};
            result = record.title;
            backup['style'] = result;
            backup['children'] = sizing;
            kiloes = option.bind(tangon)(kiloes, backup);
            backup = new Array(2);
            backup[0] = kiloes;
            sizing = echoed != config;
            kiloes = null;
            if(!sizing) { _fun00002_ip = 1057; continue _fun00001 }
 1007:
            update = _closure1_slot11;
            result = _closure1_slot1;
            cntext = _closure1_slot2;
            sizing = 26;
            sizing = cntext[sizing];
            result = result.bind(tangon)(sizing);
            sizing = {};
            cntext = record.icon;
            sizing['style'] = cntext;
            sizing['source'] = config;
            sizing['disableColor'] = sequen;
            kiloes = update.bind(tangon)(result, sizing);
 1057:
            backup[1] = kiloes;
            romeon['children'] = backup;
            romeon = offset.bind(tangon)(golfie, romeon);
            yankee[1] = romeon;
            backup = echoed != output;
            romeon = null;
            if(!backup) { _fun00002_ip = 1145; continue _fun00001 }
 1084:
            sizing = _closure1_slot11;
            kiloes = _closure1_slot0;
            backup = _closure1_slot2;
            backup = backup[ctrled];
            backup = kiloes.bind(tangon)(backup);
            kiloes = backup.Text;
            backup = {'style': null, 'variant': 'text-sm/medium', 'color': 'header-secondary'};
            result = record.description;
            backup['style'] = result;
            backup['children'] = output;
            romeon = sizing.bind(tangon)(kiloes, backup);
 1145:
            yankee[2] = romeon;
            romeon = echoed != target;
            if(!romeon) { _fun00002_ip = 1159; continue _fun00001 }
 1156:
            romeon = !foxtra;
 1159:
            if(!romeon) { _fun00002_ip = 1677; continue _fun00001 }
 1165:
            kiloes = _closure1_slot12;
            backup = _closure1_slot4;
            foxtra = {};
            sizing = record.memberInfo;
            foxtra['style'] = sizing;
            result = target.features;
            output = result.has;
            sizing = _closure1_slot10;
            sizing = sizing.DISCOVERABLE;
            sizing = output.bind(result)(sizing);
            output = null;
            if(!sizing) { _fun00002_ip = 1439; continue _fun00001 }
 1219:
            update = _closure1_slot12;
            limora = _closure1_slot0;
            whisks = _closure1_slot2;
            sizing = 27;
            sizing = whisks[sizing];
            sizing = limora.bind(tangon)(sizing);
            result = sizing.PressableOpacity;
            sizing = {};
            sequen = record.publicInfo;
            sizing['style'] = sequen;
            sequen = 'button';
            sizing['accessibilityRole'] = sequen;
            source = function() { // Original name: onPress
                zuuluu = _closure1_slot1;
                verify = _closure1_slot2;
                entity = 28;
                michal = verify[entity];
                entity = undefined;
                tangon = zuuluu.bind(entity)(michal);
                zuuluu = tangon.open;
                michal = {};
                oscard = 'DISCOVERABLE_GUILD_HEADER_PUBLIC_INFO';
                michal['key'] = oscard;
                option = _closure1_slot0;
                report = 29;
                oscard = verify[report];
                oscard = option.bind(entity)(oscard);
                golfie = oscard.intl;
                oscard = golfie.string;
                report = verify[report];
                report = option.bind(entity)(report);
                report = report.t;
                report = report.O8lDIy;
                report = oscard.bind(golfie)(report);
                michal['content'] = report;
                michal = zuuluu.bind(tangon)(michal);
                return entity;
            };
            sizing['onPress'] = source;
            cntext = _closure1_slot11;
            papara = _closure1_slot1;
            source = 26;
            source = whisks[source];
            sequen = papara.bind(tangon)(source);
            source = {};
            config = record.publicIcon;
            source['style'] = config;
            config = 30;
            config = whisks[config];
            config = papara.bind(tangon)(config);
            source['source'] = config;
            sequen = cntext.bind(tangon)(sequen, source);
            source = new Array(2);
            source[0] = sequen;
            sequen = whisks[ctrled];
            sequen = limora.bind(tangon)(sequen);
            config = sequen.Text;
            sequen = {'variant': 'text-xs/medium', 'color': 'header-secondary'};
            papara = 29;
            status = whisks[papara];
            status = limora.bind(tangon)(status);
            sierra = status.intl;
            status = sierra.string;
            papara = whisks[papara];
            papara = limora.bind(tangon)(papara);
            papara = papara.t;
            papara = papara.B/vjCg;
            papara = status.bind(sierra)(papara);
            sequen['children'] = papara;
            sequen = cntext.bind(tangon)(config, sequen);
            source[1] = sequen;
            sizing['children'] = source;
            output = update.bind(tangon)(result, sizing);
 1439:
            sizing = new Array(2);
            sizing[0] = output;
            output = target.presenceCount;
            result = echoed != output;
            output = null;
            if(!result) { _fun00002_ip = 1663; continue _fun00001 }
 1465:
            result = target.memberCount;
            result = echoed != result;
            output = null;
            if(!result) { _fun00002_ip = 1663; continue _fun00001 }
 1483:
            update = _closure1_slot12;
            result = _closure1_slot3;
            echoed = result.Fragment;
            result = {};
            sequen = _closure1_slot11;
            config = _closure1_slot4;
            source = {};
            record = record.dotOnline;
            source['style'] = record;
            config = sequen.bind(tangon)(config, source);
            source = new Array(2);
            source[0] = config;
            record = _closure1_slot0;
            status = _closure1_slot2;
            ctrled = status[ctrled];
            ctrled = record.bind(tangon)(ctrled);
            vacuum = ctrled.Text;
            ctrled = {'variant': 'text-xs/medium', 'color': 'header-secondary'};
            config = 29;
            cntext = status[config];
            cntext = record.bind(tangon)(cntext);
            papara = cntext.intl;
            cntext = papara.format;
            config = status[config];
            config = record.bind(tangon)(config);
            config = config.t;
            record = config.QCNv6O;
            config = {};
            status = target.presenceCount;
            config['online'] = status;
            target = target.memberCount;
            config['offline'] = target;
            config = cntext.bind(papara)(record, config);
            ctrled['children'] = config;
            ctrled = sequen.bind(tangon)(vacuum, ctrled);
            source[1] = ctrled;
            result['children'] = source;
            output = update.bind(tangon)(echoed, result);
 1663:
            sizing[1] = output;
            foxtra['children'] = sizing;
            romeon = kiloes.bind(tangon)(backup, foxtra);
 1677:
            yankee[3] = romeon;
            verify['children'] = yankee;
            verify = offset.bind(tangon)(golfie, verify);
            oscard['children'] = verify;
            oscard = option.bind(tangon)(golfie, oscard);
            report[1] = oscard;
            entity['children'] = report;
            entity = zuuluu.bind(tangon)(michal, entity);
            return entity;
        }
    };
    var _closure1_slot15 = tangon;
    tangon = golfie.memo;
    michal = function(argFoo) {
        _fun00007: for(var _fun00008_ip = 0; ; ) switch(_fun00008_ip) {
 0:
            michal = argFoo;
            zuuluu = michal.guildId;
            var _closure2_slot0 = zuuluu;
            option = michal.description;
            golfie = michal.hideDescription;
            oscard = michal.hideMemberCount;
            tangon = _closure1_slot0;
            report = _closure1_slot2;
            zuuluu = 18;
            zuuluu = report[zuuluu];
            report = undefined;
            verify = tangon.bind(report)(zuuluu);
            tangon = verify.useStateFromStores;
            offset = _closure1_slot7;
            zuuluu = new Array(1);
            zuuluu[0] = offset;
            entity = function() {
                zuuluu = _closure1_slot7;
                michal = zuuluu.getGuild;
                entity = _closure2_slot0;
                entity = michal.bind(zuuluu)(entity);
                return entity;
            };
            verify = tangon.bind(verify)(zuuluu, entity);
            entity = null;
            zuuluu = entity == verify;
            if(zuuluu) { _fun00008_ip = 129; continue _fun00007 }
 95:
            tangon = _closure1_slot11;
            zuuluu = _closure1_slot15;
            michal = {};
            michal['guild'] = verify;
            michal['description'] = option;
            michal['hideDescription'] = golfie;
            michal['hideMemberCount'] = oscard;
            entity = tangon.bind(report)(zuuluu, michal);
 129:
            return entity;
        }
    };
    michal = tangon.bind(golfie)(michal);
    tangon = 31;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/guild_home/native/components/GuildFeedBanner.tsx';
    tangon = report.bind(oscard)(tangon);
    zuuluu['default'] = michal;
    return entity;
})();