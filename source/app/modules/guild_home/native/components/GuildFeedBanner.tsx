// app/modules/guild_home/native/components/GuildFeedBanner.tsx
export default (function(argFoo, argBar, argBaz, argCorge, _, argFred, argPlugh) {
    report = argBar;
    romeo = argBaz;
    zulu = argFred;
    oscar = argPlugh;
    var _closure1_slot0 = report;
    var _closure1_slot1 = romeo;
    var _closure1_slot2 = oscar;
    entity = global;
    options = entity.Object;
    golf = options.defineProperty;
    tango = {};
    entity = true;
    tango['value'] = entity;
    entity = '__esModule';
    entity = golf.bind(options)(zulu, entity, tango);
    entity = 0;
    tango = oscar[entity];
    entity = undefined;
    tango = romeo.bind(entity)(tango);
    var _closure1_slot3 = tango;
    tango = 1;
    golf = oscar[tango];
    tango = argCorge;
    golf = tango.bind(entity)(golf);
    var _closure1_slot4 = golf;
    tango = 2;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    options = tango.View;
    var _closure1_slot5 = options;
    options = tango.Animated;
    var _closure1_slot6 = options;
    tango = tango.Easing;
    var _closure1_slot7 = tango;
    tango = 3;
    tango = oscar[tango];
    tango = romeo.bind(entity)(tango);
    var _closure1_slot8 = tango;
    kilo = 4;
    tango = oscar[kilo];
    tango = romeo.bind(entity)(tango);
    var _closure1_slot9 = tango;
    tango = 5;
    tango = oscar[tango];
    tango = romeo.bind(entity)(tango);
    var _closure1_slot10 = tango;
    tango = 6;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    foxtrot = tango.GUILD_FEED_CARD_MARGIN_HORIZONTAL;
    var _closure1_slot11 = foxtrot;
    tango = tango.GUILD_FEED_MIN_BANNER_HEIGHT;
    var _closure1_slot12 = tango;
    tango = 7;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.GuildFeatures;
    var _closure1_slot13 = tango;
    backup = 8;
    tango = oscar[backup];
    tango = report.bind(entity)(tango);
    tango = tango.jsx;
    var _closure1_slot14 = tango;
    tango = oscar[backup];
    tango = report.bind(entity)(tango);
    tango = tango.jsxs;
    var _closure1_slot15 = tango;
    tango = 9;
    tango = oscar[tango];
    verify = report.bind(entity)(tango);
    options = verify.createStyles;
    tango = {};
    offset = {'borderRadius': null, 'height': 64, 'width': 64};
    yankee = 10;
    sizing = oscar[yankee];
    sizing = romeo.bind(entity)(sizing);
    sizing = sizing.radii;
    sizing = sizing.lg;
    offset['borderRadius'] = sizing;
    tango['avatar'] = offset;
    offset = {};
    sizing = 24;
    offset['paddingBottom'] = sizing;
    sizing = oscar[yankee];
    sizing = romeo.bind(entity)(sizing);
    sizing = sizing.colors;
    sizing = sizing.BACKGROUND_SECONDARY;
    offset['backgroundColor'] = sizing;
    tango['container'] = offset;
    offset = {};
    offset['marginTop'] = kilo;
    tango['description'] = offset;
    offset = {'marginTop': null, 'alignItems': 'center', 'flexDirection': 'row'};
    offset['marginTop'] = foxtrot;
    foxtrot = 'center';
    tango['textContainer'] = offset;
    offset = {};
    kilo = '100%';
    offset['width'] = kilo;
    tango['content'] = offset;
    offset = {};
    offset['marginLeft'] = backup;
    tango['icon'] = offset;
    offset = {};
    offset['alignItems'] = foxtrot;
    foxtrot = oscar[yankee];
    foxtrot = romeo.bind(entity)(foxtrot);
    foxtrot = foxtrot.colors;
    foxtrot = foxtrot.BACKGROUND_SECONDARY;
    offset['backgroundColor'] = foxtrot;
    tango['headerContainer'] = offset;
    offset = {};
    foxtrot = oscar[yankee];
    foxtrot = romeo.bind(entity)(foxtrot);
    foxtrot = foxtrot.radii;
    foxtrot = foxtrot.lg;
    offset['borderTopRightRadius'] = foxtrot;
    foxtrot = oscar[yankee];
    foxtrot = romeo.bind(entity)(foxtrot);
    foxtrot = foxtrot.radii;
    foxtrot = foxtrot.lg;
    offset['borderTopLeftRadius'] = foxtrot;
    foxtrot = -16;
    offset['marginTop'] = foxtrot;
    tango['headerBorder'] = offset;
    offset = {'padding': 4, 'borderRadius': null, 'alignSelf': 'flex-start'};
    foxtrot = oscar[yankee];
    foxtrot = romeo.bind(entity)(foxtrot);
    foxtrot = foxtrot.radii;
    foxtrot = foxtrot.lg;
    offset['borderRadius'] = foxtrot;
    foxtrot = oscar[yankee];
    foxtrot = romeo.bind(entity)(foxtrot);
    foxtrot = foxtrot.colors;
    foxtrot = foxtrot.BACKGROUND_SECONDARY;
    offset['backgroundColor'] = foxtrot;
    tango['guildIconContainer'] = offset;
    offset = {'width': 4, 'height': 4, 'borderRadius': null, 'marginRight': 4};
    foxtrot = oscar[yankee];
    foxtrot = romeo.bind(entity)(foxtrot);
    foxtrot = foxtrot.radii;
    foxtrot = foxtrot.xs;
    offset['borderRadius'] = foxtrot;
    foxtrot = oscar[yankee];
    foxtrot = romeo.bind(entity)(foxtrot);
    foxtrot = foxtrot.unsafe_rawColors;
    foxtrot = foxtrot.GREEN_360;
    offset['backgroundColor'] = foxtrot;
    tango['dotOnline'] = offset;
    offset = {'width': 8, 'height': 8, 'borderRadius': null, 'marginRight': 4, 'marginLeft': 16};
    foxtrot = oscar[yankee];
    foxtrot = romeo.bind(entity)(foxtrot);
    foxtrot = foxtrot.radii;
    foxtrot = foxtrot.sm;
    offset['borderRadius'] = foxtrot;
    yankee = oscar[yankee];
    yankee = romeo.bind(entity)(yankee);
    yankee = yankee.unsafe_rawColors;
    yankee = yankee.PRIMARY_400;
    offset['backgroundColor'] = yankee;
    tango['dotOffline'] = offset;
    offset = {'flexDirection': 'row', 'alignItems': 'center', 'marginRight': 12};
    tango['publicInfo'] = offset;
    offset = {'marginRight': 4, 'width': 14, 'height': 14};
    tango['publicIcon'] = offset;
    offset = {'marginTop': 4, 'flexDirection': 'row', 'alignItems': 'center'};
    tango['memberInfo'] = offset;
    offset = {};
    yankee = '90%';
    offset['maxWidth'] = yankee;
    tango['title'] = offset;
    tango = options.bind(verify)(tango);
    var _closure1_slot16 = tango;
    tango = function(argFoo) { // Original name: GuildFeedBanner
        _fun112145: for(var _fun112145_ip = 0; ; ) switch(_fun112145_ip) {
 0:
            mike = argFoo;
            kilo = mike.guild;
            var _closure2_slot0 = kilo;
            output = mike.description;
            entity = mike.hideDescription;
            foxtrot = mike.hideMemberCount;
            tango = undefined;
            var _closure2_slot2 = tango;
            mike = _closure1_slot16;
            record = mike.bind(tango)();
            golf = _closure1_slot4;
            report = golf.useState;
            mike = _closure1_slot6;
            mike = mike.Value;
            zulu = mike.prototype;
            oscar = Object.create(zulu, {constructor: {value: mike}});
            zulu = 0;
            variable37 = oscar;
            variable36 = 0;
            mike = new variable37[mike](variable36, quebec);
            mike = mike instanceof Object ? mike : oscar;
            oscar = report.bind(golf)(mike);
            report = _closure1_slot3;
            mike = 1;
            mike = report.bind(tango)(oscar, mike);
            yankee = mike[zulu];
            var _closure2_slot1 = yankee;
            zulu = _closure1_slot0;
            oscar = _closure1_slot2;
            report = 11;
            mike = oscar[report];
            verify = zulu.bind(tango)(mike);
            options = verify.useStateFromStores;
            mike = _closure1_slot10;
            zulu = new Array(1);
            zulu[0] = mike;
            mike = function() {
                entity = global;
                tango = entity.Math;
                zulu = tango.max;
                report = _closure1_slot10;
                mike = report.getHeight;
                report = mike.bind(report)();
                mike = 0.22;
                mike = mike * report;
                entity = _closure1_slot12;
                entity = zulu.bind(tango)(mike, entity);
                return entity;
            };
            result = options.bind(verify)(zulu, mike);
            zulu = _closure1_slot1;
            mike = 12;
            mike = oscar[mike];
            mike = zulu.bind(tango)(mike);
            update = mike.bind(tango)();
            oscar = golf.useEffect;
            zulu = new Array(1);
            zulu[0] = kilo;
            mike = function() {
                zulu = _closure1_slot0;
                mike = _closure1_slot2;
                entity = 13;
                mike = mike[entity];
                entity = undefined;
                tango = zulu.bind(entity)(mike);
                zulu = tango.fetchGuildForPopout;
                mike = _closure2_slot0;
                mike = mike.id;
                mike = zulu.bind(tango)(mike);
                return entity;
            };
            mike = oscar.bind(golf)(mike, zulu);
            oscar = golf.useMemo;
            zulu = new Array(1);
            zulu[0] = kilo;
            mike = function() {
                _fun112148: for(var _fun112148_ip = 0; ; ) switch(_fun112148_ip) {
 0:
                    tango = _closure2_slot0;
                    zulu = tango.hasFeature;
                    entity = _closure1_slot13;
                    entity = entity.ANIMATED_BANNER;
                    options = zulu.bind(tango)(entity);
                    if(!options) { _fun112148_ip = 68; continue _fun112148 }
 34:
                    tango = _closure1_slot0;
                    zulu = _closure1_slot2;
                    entity = 14;
                    zulu = zulu[entity];
                    entity = undefined;
                    zulu = tango.bind(entity)(zulu);
                    entity = zulu.isAndroid;
                    entity = entity.bind(zulu)();
                    options = !entity;
 68:
                    entity = _closure2_slot0;
                    entity = entity.banner;
                    tango = null;
                    entity = tango != entity;
                    oscar = null;
                    if(!entity) { _fun112148_ip = 149; continue _fun112148 }
 89:
                    golf = _closure1_slot1;
                    zulu = _closure1_slot2;
                    entity = 15;
                    zulu = zulu[entity];
                    entity = undefined;
                    golf = golf.bind(entity)(zulu);
                    zulu = golf.getGuildBannerSource;
                    entity = {};
                    verify = _closure2_slot0;
                    offset = verify.id;
                    entity['id'] = offset;
                    verify = verify.banner;
                    entity['banner'] = verify;
                    oscar = zulu.bind(golf)(entity, options);
 149:
                    zulu = _closure2_slot0;
                    entity = oscar;
                    if(!(tango != zulu)) { _fun112148_ip = 236; continue _fun112148 }
 160:
                    zulu = _closure2_slot0;
                    zulu = zulu.homeHeader;
                    entity = oscar;
                    if(!(tango != zulu)) { _fun112148_ip = 236; continue _fun112148 }
 177:
                    tango = _closure1_slot1;
                    zulu = _closure1_slot2;
                    mike = 15;
                    zulu = zulu[mike];
                    mike = undefined;
                    tango = tango.bind(mike)(zulu);
                    zulu = tango.getGuildHomeHeaderSource;
                    mike = {};
                    report = _closure2_slot0;
                    oscar = report.id;
                    mike['id'] = oscar;
                    report = report.homeHeader;
                    mike['homeHeader'] = report;
                    entity = zulu.bind(tango)(mike);
 236:
                    return entity;
                }
            };
            offset = oscar.bind(golf)(mike, zulu);
            sizing = kilo.name;
            echo = null;
            if(!(echo == output)) { _fun112145_ip = 255; continue _fun112145 }
 250:
            output = kilo.description;
 255:
            if(!entity) { _fun112145_ip = 260; continue _fun112145 }
 258:
            output = undefined;
 260:
            zulu = _closure1_slot0;
            mike = _closure1_slot2;
            entity = 16;
            entity = mike[entity];
            oscar = zulu.bind(tango)(entity);
            entity = oscar.getGuildBadgeSource;
            config = entity.bind(oscar)(kilo);
            verify = function() { // Original name: handleLoad
                tango = _closure1_slot6;
                zulu = tango.timing;
                mike = _closure2_slot1;
                entity = {'toValue': 1, 'easing': null, 'duration': 3000, 'isInteraction': false, 'useNativeDriver': true};
                golf = _closure1_slot7;
                oscar = golf.out;
                report = golf.exp;
                report = oscar.bind(golf)(report);
                entity['easing'] = report;
                mike = zulu.bind(tango)(mike, entity);
                entity = mike.start;
                entity = entity.bind(mike)();
                entity = undefined;
                return entity;
            };
            entity = mike[report];
            romeo = zulu.bind(tango)(entity);
            options = romeo.useStateFromStoresObject;
            entity = _closure1_slot8;
            golf = new Array(1);
            golf[0] = entity;
            oscar = new Array(1);
            oscar[0] = kilo;
            entity = function() {
                entity = {};
                tango = _closure1_slot8;
                zulu = tango.getGuild;
                mike = _closure2_slot0;
                mike = mike.id;
                mike = zulu.bind(tango)(mike);
                entity['discoverableGuild'] = mike;
                return entity;
            };
            entity = options.bind(romeo)(golf, entity, oscar);
            target = entity.discoverableGuild;
            oscar = _closure1_slot1;
            entity = 17;
            entity = mike[entity];
            entity = oscar.bind(tango)(entity);
            entity = entity.bind(tango)();
            _closure2_slot2 = entity;
            mike = mike[report];
            oscar = zulu.bind(tango)(mike);
            report = oscar.useStateFromStores;
            mike = _closure1_slot10;
            zulu = new Array(1);
            zulu[0] = mike;
            mike = new Array(1);
            mike[0] = entity;
            entity = function() {
                _fun112151: for(var _fun112151_ip = 0; ; ) switch(_fun112151_ip) {
 0:
                    zulu = _closure1_slot10;
                    entity = zulu.getWidth;
                    golf = entity.bind(zulu)();
                    entity = zulu.getHeight;
                    oscar = entity.bind(zulu)();
                    entity = global;
                    tango = entity.Math;
                    zulu = tango.min;
                    tango = zulu.bind(tango)(golf, oscar);
                    zulu = _closure2_slot2;
                    if(zulu) { _fun112151_ip = 73; continue _fun112151 }
 56:
                    report = _closure1_slot11;
                    zulu = 2;
                    zulu = zulu * report;
                    zulu = tango - zulu;
                    return zulu;
 73:
                    report = entity.Math;
                    zulu = report.max;
                    zulu = zulu.bind(report)(golf, oscar);
                    oscar = _closure1_slot0;
                    report = _closure1_slot2;
                    mike = 18;
                    report = report[mike];
                    mike = undefined;
                    report = oscar.bind(mike)(report);
                    mike = report.getDrawerWidth;
                    mike = mike.bind(report)();
                    zulu = zulu - mike;
                    mike = entity.Math;
                    entity = mike.min;
                    entity = entity.bind(mike)(zulu, tango);
                    return entity;
                }
            };
            backup = report.bind(oscar)(zulu, entity, mike);
            zulu = _closure1_slot15;
            mike = _closure1_slot5;
            entity = {};
            report = record.container;
            entity['style'] = report;
            golf = _closure1_slot14;
            report = _closure1_slot6;
            oscar = report.Image;
            if(!(echo == offset)) { _fun112145_ip = 575; continue _fun112145 }
 462:
            report = {};
            romeo = {};
            romeo['height'] = result;
            options = '100%';
            romeo['width'] = options;
            romeo['opacity'] = yankee;
            options = new Array(1);
            options[0] = romeo;
            report['style'] = options;
            romeo = _closure1_slot0;
            control = _closure1_slot2;
            options = 19;
            options = control[options];
            romeo = romeo.bind(tango)(options);
            options = romeo.isThemeDark;
            options = options.bind(romeo)(update);
            update = _closure1_slot1;
            control = _closure1_slot2;
            if(options) { _fun112145_ip = 552; continue _fun112145 }
 538:
            options = 21;
            options = control[options];
            options = update.bind(tango)(options);
            _fun112145_ip = 564; continue _fun112145;
 552:
            romeo = 20;
            romeo = control[romeo];
            options = update.bind(tango)(romeo);
 564:
            report['source'] = options;
            report['onLoad'] = verify;
            _fun112145_ip = 621; continue _fun112145;
 575:
            options = {};
            romeo = {};
            romeo['height'] = result;
            result = '100%';
            romeo['width'] = result;
            romeo['opacity'] = yankee;
            yankee = new Array(1);
            yankee[0] = romeo;
            options['style'] = yankee;
            options['source'] = offset;
            options['onLoad'] = verify;
            report = options;
 621:
            oscar = golf.bind(tango)(oscar, report);
            report = new Array(2);
            report[0] = oscar;
            options = _closure1_slot14;
            golf = _closure1_slot5;
            oscar = {};
            offset = record.headerContainer;
            verify = new Array(2);
            verify[0] = offset;
            offset = record.headerBorder;
            verify[1] = offset;
            oscar['style'] = verify;
            offset = _closure1_slot15;
            verify = {};
            romeo = record.content;
            yankee = new Array(2);
            yankee[0] = romeo;
            romeo = {};
            romeo['width'] = backup;
            backup = -32;
            romeo['marginTop'] = backup;
            yankee[1] = romeo;
            verify['style'] = yankee;
            yankee = {};
            romeo = record.guildIconContainer;
            yankee['style'] = romeo;
            result = _closure1_slot1;
            backup = _closure1_slot2;
            update = 22;
            romeo = backup[update];
            result = result.bind(tango)(romeo);
            romeo = {};
            control = record.avatar;
            romeo['style'] = control;
            romeo['guild'] = kilo;
            kilo = _closure1_slot0;
            update = backup[update];
            update = kilo.bind(tango)(update);
            update = update.GuildIconSizes;
            update = update.XLARGE;
            romeo['size'] = update;
            sequence = true;
            romeo['animate'] = sequence;
            romeo = options.bind(tango)(result, romeo);
            yankee['children'] = romeo;
            romeo = options.bind(tango)(golf, yankee);
            yankee = new Array(4);
            yankee[0] = romeo;
            romeo = {};
            result = record.textContainer;
            romeo['style'] = result;
            control = 23;
            backup = backup[control];
            backup = kilo.bind(tango)(backup);
            kilo = backup.Text;
            backup = {'lineClamp': 1, 'variant': 'heading-xl/extrabold', 'color': 'header-primary'};
            result = record.title;
            backup['style'] = result;
            backup['children'] = sizing;
            kilo = options.bind(tango)(kilo, backup);
            backup = new Array(2);
            backup[0] = kilo;
            sizing = echo != config;
            kilo = null;
            if(!sizing) { _fun112145_ip = 953; continue _fun112145 }
 903:
            update = _closure1_slot14;
            result = _closure1_slot1;
            context = _closure1_slot2;
            sizing = 24;
            sizing = context[sizing];
            result = result.bind(tango)(sizing);
            sizing = {};
            context = record.icon;
            sizing['style'] = context;
            sizing['source'] = config;
            sizing['disableColor'] = sequence;
            kilo = update.bind(tango)(result, sizing);
 953:
            backup[1] = kilo;
            romeo['children'] = backup;
            romeo = offset.bind(tango)(golf, romeo);
            yankee[1] = romeo;
            backup = echo != output;
            romeo = null;
            if(!backup) { _fun112145_ip = 1041; continue _fun112145 }
 980:
            sizing = _closure1_slot14;
            kilo = _closure1_slot0;
            backup = _closure1_slot2;
            backup = backup[control];
            backup = kilo.bind(tango)(backup);
            kilo = backup.Text;
            backup = {'style': null, 'variant': 'text-sm/medium', 'color': 'header-secondary'};
            result = record.description;
            backup['style'] = result;
            backup['children'] = output;
            romeo = sizing.bind(tango)(kilo, backup);
 1041:
            yankee[2] = romeo;
            romeo = echo != target;
            if(!romeo) { _fun112145_ip = 1055; continue _fun112145 }
 1052:
            romeo = !foxtrot;
 1055:
            if(!romeo) { _fun112145_ip = 1576; continue _fun112145 }
 1061:
            kilo = _closure1_slot15;
            backup = _closure1_slot5;
            foxtrot = {};
            sizing = record.memberInfo;
            foxtrot['style'] = sizing;
            result = target.features;
            output = result.has;
            sizing = _closure1_slot13;
            sizing = sizing.DISCOVERABLE;
            sizing = output.bind(result)(sizing);
            output = null;
            if(!sizing) { _fun112145_ip = 1337; continue _fun112145 }
 1115:
            update = _closure1_slot15;
            lima = _closure1_slot0;
            whiskey = _closure1_slot2;
            sizing = 25;
            sizing = whiskey[sizing];
            sizing = lima.bind(tango)(sizing);
            result = sizing.PressableOpacity;
            sizing = {};
            sequence = record.publicInfo;
            sizing['style'] = sequence;
            sequence = 'button';
            sizing['accessibilityRole'] = sequence;
            source = function() { // Original name: onPress
                zulu = _closure1_slot1;
                verify = _closure1_slot2;
                entity = 26;
                mike = verify[entity];
                entity = undefined;
                tango = zulu.bind(entity)(mike);
                zulu = tango.open;
                mike = {};
                oscar = 'DISCOVERABLE_GUILD_HEADER_PUBLIC_INFO';
                mike['key'] = oscar;
                options = _closure1_slot0;
                report = 27;
                oscar = verify[report];
                oscar = options.bind(entity)(oscar);
                golf = oscar.intl;
                oscar = golf.string;
                report = verify[report];
                report = options.bind(entity)(report);
                report = report.t;
                report = report.O8lDIy;
                report = oscar.bind(golf)(report);
                mike['content'] = report;
                mike = zulu.bind(tango)(mike);
                return entity;
            };
            sizing['onPress'] = source;
            context = _closure1_slot14;
            papa = _closure1_slot1;
            source = 24;
            source = whiskey[source];
            sequence = papa.bind(tango)(source);
            source = {};
            config = record.publicIcon;
            source['style'] = config;
            config = 28;
            config = whiskey[config];
            config = papa.bind(tango)(config);
            source['source'] = config;
            sequence = context.bind(tango)(sequence, source);
            source = new Array(2);
            source[0] = sequence;
            sequence = whiskey[control];
            sequence = lima.bind(tango)(sequence);
            config = sequence.Text;
            sequence = {'variant': 'text-xs/medium', 'color': 'header-secondary'};
            papa = 27;
            status = whiskey[papa];
            status = lima.bind(tango)(status);
            sierra = status.intl;
            status = sierra.string;
            papa = whiskey[papa];
            papa = lima.bind(tango)(papa);
            papa = papa.t;
            papa = papa.B/vjCg;
            papa = status.bind(sierra)(papa);
            sequence['children'] = papa;
            sequence = context.bind(tango)(config, sequence);
            source[1] = sequence;
            sizing['children'] = source;
            output = update.bind(tango)(result, sizing);
 1337:
            sizing = new Array(2);
            sizing[0] = output;
            output = target.presenceCount;
            result = echo != output;
            output = null;
            if(!result) { _fun112145_ip = 1562; continue _fun112145 }
 1363:
            result = target.memberCount;
            result = echo != result;
            output = null;
            if(!result) { _fun112145_ip = 1562; continue _fun112145 }
 1381:
            update = _closure1_slot15;
            result = _closure1_slot4;
            echo = result.Fragment;
            result = {};
            sequence = _closure1_slot14;
            config = _closure1_slot5;
            source = {};
            record = record.dotOnline;
            source['style'] = record;
            config = sequence.bind(tango)(config, source);
            source = new Array(2);
            source[0] = config;
            record = _closure1_slot0;
            status = _closure1_slot2;
            control = status[control];
            control = record.bind(tango)(control);
            vacuum = control.Text;
            control = {'variant': 'text-xs/medium', 'color': 'header-secondary'};
            config = 27;
            context = status[config];
            context = record.bind(tango)(context);
            papa = context.intl;
            context = papa.format;
            config = status[config];
            config = record.bind(tango)(config);
            config = config.t;
            record = config.QCNv6O;
            config = {};
            status = target.presenceCount;
            config['online'] = status;
            target = target.memberCount;
            config['offline'] = target;
            config = context.bind(papa)(record, config);
            control['children'] = config;
            control = sequence.bind(tango)(vacuum, control);
            source[1] = control;
            result['children'] = source;
            output = update.bind(tango)(echo, result);
 1562:
            sizing[1] = output;
            foxtrot['children'] = sizing;
            romeo = kilo.bind(tango)(backup, foxtrot);
 1576:
            yankee[3] = romeo;
            verify['children'] = yankee;
            verify = offset.bind(tango)(golf, verify);
            oscar['children'] = verify;
            oscar = options.bind(tango)(golf, oscar);
            report[1] = oscar;
            entity['children'] = report;
            entity = zulu.bind(tango)(mike, entity);
            return entity;
        }
    };
    var _closure1_slot17 = tango;
    tango = golf.memo;
    mike = function(argFoo) {
        _fun112153: for(var _fun112153_ip = 0; ; ) switch(_fun112153_ip) {
 0:
            mike = argFoo;
            zulu = mike.guildId;
            var _closure2_slot0 = zulu;
            options = mike.description;
            golf = mike.hideDescription;
            oscar = mike.hideMemberCount;
            tango = _closure1_slot0;
            report = _closure1_slot2;
            zulu = 11;
            zulu = report[zulu];
            report = undefined;
            verify = tango.bind(report)(zulu);
            tango = verify.useStateFromStores;
            offset = _closure1_slot9;
            zulu = new Array(1);
            zulu[0] = offset;
            entity = function() {
                zulu = _closure1_slot9;
                mike = zulu.getGuild;
                entity = _closure2_slot0;
                entity = mike.bind(zulu)(entity);
                return entity;
            };
            verify = tango.bind(verify)(zulu, entity);
            entity = null;
            zulu = entity == verify;
            if(zulu) { _fun112153_ip = 129; continue _fun112153 }
 95:
            tango = _closure1_slot14;
            zulu = _closure1_slot17;
            mike = {};
            mike['guild'] = verify;
            mike['description'] = options;
            mike['hideDescription'] = golf;
            mike['hideMemberCount'] = oscar;
            entity = tango.bind(report)(zulu, mike);
 129:
            return entity;
        }
    };
    mike = tango.bind(golf)(mike);
    tango = 29;
    tango = oscar[tango];
    oscar = report.bind(entity)(tango);
    report = oscar.fileFinishedImporting;
    tango = 'modules/guild_home/native/components/GuildFeedBanner.tsx';
    tango = report.bind(oscar)(tango);
    zulu['default'] = mike;
    return entity;
})();