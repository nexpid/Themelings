// app/modules/guild_home/native/components/guild_sidebar/GuildHomeChannelRow.tsx
export default (function(global, require, metroImportDefault, metroImportAll, moduleObject, exports, dependencyMap) {
    var5 = require;
    var11 = metroImportDefault;
    var3 = exports;
    var6 = dependencyMap;
    var _closure1_slot0 = var5;
    var _closure1_slot1 = var11;
    var _closure1_slot2 = var6;
    var1 = global;
    var8 = var1.Object;
    var7 = var8.defineProperty;
    var4 = {};
    var1 = true;
    var4['value'] = var1;
    var1 = '__esModule';
    var1 = var7.bind(var8)(var3, var1, var4);
    var1 = 0;
    var7 = var6[var1];
    var4 = metroImportAll;
    var1 = undefined;
    var4 = var4.bind(var1)(var7);
    var _closure1_slot3 = var4;
    var4 = 1;
    var4 = var6[var4];
    var4 = var5.bind(var1)(var4);
    var4 = var4.Routes;
    var _closure1_slot4 = var4;
    var4 = 2;
    var4 = var6[var4];
    var4 = var5.bind(var1)(var4);
    var4 = var4.StaticChannelRoute;
    var _closure1_slot5 = var4;
    var4 = 3;
    var4 = var6[var4];
    var4 = var5.bind(var1)(var4);
    var10 = var4.CHANNEL_MARGIN_VERTICAL;
    var4 = 4;
    var4 = var6[var4];
    var4 = var5.bind(var1)(var4);
    var4 = var4.jsx;
    var _closure1_slot6 = var4;
    var4 = 5;
    var4 = var6[var4];
    var8 = var5.bind(var1)(var4);
    var7 = var8.createStyles;
    var4 = {};
    var9 = {};
    var9['marginVertical'] = var10;
    var10 = 8;
    var9['marginHorizontal'] = var10;
    var10 = 6;
    var10 = var6[var10];
    var10 = var11.bind(var1)(var10);
    var10 = var10.radii;
    var10 = var10.md;
    var9['borderRadius'] = var10;
    var4['container'] = var9;
    var4 = var7.bind(var8)(var4);
    var _closure1_slot7 = var4;
    var4 = 11;
    var4 = var6[var4];
    var6 = var5.bind(var1)(var4);
    var5 = var6.fileFinishedImporting;
    var4 = 'modules/guild_home/native/components/guild_sidebar/GuildHomeChannelRow.tsx';
    var4 = var5.bind(var6)(var4);
    var2 = function GuildHomeChannelRow(arg1) {
        _fun0001: for(var _fun0001_ip = 0; ; ) switch(_fun0001_ip) {
case 0:
            var3 = arg1;
            var2 = var3.guild;
            var10 = var3.selected;
            var3 = _closure1_slot7;
            var4 = undefined;
            var8 = var3.bind(var4)();
            var7 = var2.id;
            var _closure2_slot0 = var7;
            var5 = _closure1_slot3;
            var3 = var5.useCallback;
            var2 = new Array(1);
            var2[0] = var7;
            var1 = function() {
                var4 = _closure1_slot0;
                var3 = _closure1_slot2;
                var1 = 7;
                var3 = var3[var1];
                var1 = undefined;
                var4 = var4.bind(var1)(var3);
                var3 = var4.transitionTo;
                var7 = _closure1_slot4;
                var6 = var7.CHANNEL;
                var5 = _closure2_slot0;
                var2 = _closure1_slot5;
                var2 = var2.GUILD_HOME;
                var2 = var6.bind(var7)(var5, var2);
                var2 = var3.bind(var4)(var2);
                return var1;
            };
            var11 = var3.bind(var5)(var1, var2);
            var2 = _closure1_slot0;
            var1 = _closure1_slot2;
            var5 = 8;
            var1 = var1[var5];
            var1 = var2.bind(var4)(var1);
            var1 = var1.ChannelModes;
            if(var10) { _fun0001_ip = 2; continue _fun0001 }
case 3:
            var7 = var1.DEFAULT;
            _fun0001_ip = 4; continue _fun0001;
case 2:
            var7 = var1.SELECTED;
case 4:
            var3 = _closure1_slot6;
            var2 = _closure1_slot1;
            var9 = _closure1_slot2;
            var1 = var9[var5];
            var2 = var2.bind(var4)(var1);
            var1 = {};
            var1['onPress'] = var11;
            var8 = var8.container;
            var1['style'] = var8;
            var8 = true;
            var1['accessible'] = var8;
            var8 = _closure1_slot0;
            var11 = 9;
            var6 = var9[var11];
            var6 = var8.bind(var4)(var6);
            var13 = var6.intl;
            var12 = var13.string;
            var6 = var9[var11];
            var6 = var8.bind(var4)(var6);
            var6 = var6.t;
            var6 = var6.VbpLyc;
            var6 = var12.bind(var13)(var6);
            var1['accessibilityLabel'] = var6;
            var6 = {};
            var6['selected'] = var10;
            var1['accessibilityState'] = var6;
            var1['mode'] = var7;
            var6 = var9[var5];
            var6 = var8.bind(var4)(var6);
            var10 = var6.BaseChannelName;
            var6 = {};
            var12 = var9[var11];
            var12 = var8.bind(var4)(var12);
            var13 = var12.intl;
            var12 = var13.string;
            var11 = var9[var11];
            var11 = var8.bind(var4)(var11);
            var11 = var11.t;
            var11 = var11.VbpLyc;
            var11 = var12.bind(var13)(var11);
            var6['name'] = var11;
            var6['mode'] = var7;
            var6 = var3.bind(var4)(var10, var6);
            var1['name'] = var6;
            var5 = var9[var5];
            var5 = var8.bind(var4)(var5);
            var6 = var5.BaseChannelIcon;
            var5 = {};
            var5['mode'] = var7;
            var7 = 10;
            var7 = var9[var7];
            var7 = var8.bind(var4)(var7);
            var7 = var7.SignPostIcon;
            var5['IconComponent'] = var7;
            var5 = var3.bind(var4)(var6, var5);
            var1['icon'] = var5;
            var1 = var3.bind(var4)(var2, var1);
            return var1;
        }
    };
    var3['default'] = var2;
    return var1;
})();