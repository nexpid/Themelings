// app/modules/threads/ThreadBrowserHooks.tsx
export default (function(argFoo, argBar, argBaz, argCorge, _, argFred, argPlugh) {
    oscar = argBar;
    options = argBaz;
    zulu = argFred;
    golf = argPlugh;
    var _closure1_slot0 = oscar;
    var _closure1_slot1 = options;
    var _closure1_slot2 = golf;
    tango = function(argFoo) { // Original name: useActiveThreadIds
        zulu = argFoo;
        var _closure2_slot0 = zulu;
        oscar = _closure1_slot0;
        report = _closure1_slot2;
        tango = 10;
        report = report[tango];
        tango = undefined;
        golf = oscar.bind(tango)(report);
        oscar = golf.useStateFromStoresArray;
        tango = _closure1_slot6;
        report = new Array(3);
        report[0] = tango;
        tango = _closure1_slot8;
        report[1] = tango;
        tango = _closure1_slot5;
        report[2] = tango;
        options = zulu.guild_id;
        tango = new Array(2);
        tango[0] = options;
        zulu = zulu.id;
        tango[1] = zulu;
        zulu = function() {
            tango = _closure1_slot1;
            golf = _closure1_slot2;
            zulu = 11;
            zulu = golf[zulu];
            oscar = undefined;
            tango = tango.bind(oscar)(zulu);
            verify = _closure1_slot8;
            options = verify.getThreadsForParent;
            zulu = _closure2_slot0;
            report = zulu.guild_id;
            zulu = zulu.id;
            zulu = options.bind(verify)(report, zulu);
            tango = tango.bind(oscar)(zulu);
            zulu = tango.values;
            report = zulu.bind(tango)();
            tango = report.map;
            zulu = function(argFoo) {
                entity = argFoo;
                zulu = entity.id;
                mike = _closure1_slot5;
                entity = mike.getChannel;
                entity = entity.bind(mike)(zulu);
                return entity;
            };
            tango = tango.bind(report)(zulu);
            zulu = tango.filter;
            report = _closure1_slot0;
            mike = 12;
            mike = golf[mike];
            mike = report.bind(oscar)(mike);
            mike = mike.isNotNullish;
            tango = zulu.bind(tango)(mike);
            zulu = tango.filter;
            mike = function(argFoo) {
                tango = _closure1_slot6;
                zulu = tango.can;
                entity = _closure1_slot11;
                mike = entity.VIEW_CHANNEL;
                entity = argFoo;
                entity = zulu.bind(tango)(mike, entity);
                return entity;
            };
            zulu = zulu.bind(tango)(mike);
            mike = zulu.map;
            entity = function(argFoo) {
                entity = argFoo;
                entity = entity.id;
                return entity;
            };
            mike = mike.bind(zulu)(entity);
            entity = mike.value;
            entity = entity.bind(mike)();
            return entity;
        };
        report = oscar.bind(golf)(report, zulu, tango);
        var _closure2_slot1 = report;
        tango = _closure1_slot4;
        zulu = tango.useMemo;
        mike = new Array(1);
        mike[0] = report;
        entity = function() {
            mike = _closure1_slot1;
            zulu = _closure1_slot2;
            entity = 11;
            entity = zulu[entity];
            zulu = undefined;
            mike = mike.bind(zulu)(entity);
            entity = _closure2_slot1;
            zulu = mike.bind(zulu)(entity);
            mike = zulu.sort;
            entity = function(argFoo, argBar) {
                tango = _closure1_slot1;
                zulu = _closure1_slot2;
                mike = 13;
                zulu = zulu[mike];
                mike = undefined;
                tango = tango.bind(mike)(zulu);
                zulu = tango.compare;
                oscar = _closure1_slot7;
                report = oscar.lastMessageId;
                mike = argFoo;
                mike = report.bind(oscar)(mike);
                oscar = _closure1_slot7;
                report = oscar.lastMessageId;
                entity = argBar;
                entity = report.bind(oscar)(entity);
                entity = zulu.bind(tango)(mike, entity);
                return entity;
            };
            mike = mike.bind(zulu)(entity);
            entity = mike.reverse;
            mike = entity.bind(mike)();
            entity = mike.value;
            entity = entity.bind(mike)();
            return entity;
        };
        entity = zulu.bind(tango)(entity, mike);
        return entity;
    };
    var _closure1_slot12 = tango;
    entity = global;
    offset = entity.Object;
    verify = offset.defineProperty;
    report = {};
    entity = true;
    report['value'] = entity;
    entity = '__esModule';
    entity = verify.bind(offset)(zulu, entity, report);
    entity = 0;
    report = golf[entity];
    entity = undefined;
    report = options.bind(entity)(report);
    var _closure1_slot3 = report;
    report = 1;
    verify = golf[report];
    report = argCorge;
    report = report.bind(entity)(verify);
    var _closure1_slot4 = report;
    report = 2;
    report = golf[report];
    report = options.bind(entity)(report);
    var _closure1_slot5 = report;
    report = 3;
    report = golf[report];
    report = options.bind(entity)(report);
    var _closure1_slot6 = report;
    report = 4;
    report = golf[report];
    report = options.bind(entity)(report);
    var _closure1_slot7 = report;
    report = 5;
    report = golf[report];
    report = options.bind(entity)(report);
    var _closure1_slot8 = report;
    report = 6;
    report = golf[report];
    report = options.bind(entity)(report);
    var _closure1_slot9 = report;
    report = 7;
    report = golf[report];
    report = options.bind(entity)(report);
    var _closure1_slot10 = report;
    report = 8;
    report = golf[report];
    report = oscar.bind(entity)(report);
    report = report.Permissions;
    var _closure1_slot11 = report;
    report = 16;
    report = golf[report];
    golf = oscar.bind(entity)(report);
    oscar = golf.fileFinishedImporting;
    report = 'modules/threads/ThreadBrowserHooks.tsx';
    report = oscar.bind(golf)(report);
    report = function() { // Original name: useTrackThreadBrowserTab
        tango = _closure1_slot4;
        zulu = tango.useEffect;
        mike = function() {
            zulu = _closure1_slot0;
            mike = _closure1_slot2;
            entity = 9;
            mike = mike[entity];
            entity = undefined;
            zulu = zulu.bind(entity)(mike);
            mike = zulu.trackThreadBrowserTab;
            mike = mike.bind(zulu)();
            return entity;
        };
        entity = new Array(0);
        entity = zulu.bind(tango)(mike, entity);
        entity = undefined;
        return entity;
    };
    zulu['useTrackThreadBrowserTab'] = report;
    zulu['useActiveThreadIds'] = tango;
    tango = function(argFoo) { // Original name: useActiveThreads
        report = _closure1_slot12;
        tango = undefined;
        zulu = argFoo;
        yankee = report.bind(tango)(zulu);
        var _closure2_slot0 = yankee;
        verify = _closure1_slot0;
        offset = _closure1_slot2;
        zulu = 10;
        report = offset[zulu];
        options = verify.bind(tango)(report);
        golf = options.useStateFromStores;
        report = _closure1_slot10;
        oscar = new Array(1);
        oscar[0] = report;
        report = new Array(1);
        report[0] = yankee;
        zulu = offset[zulu];
        zulu = verify.bind(tango)(zulu);
        romeo = zulu.statesWillNeverBeEqual;
        backup = function() {
            zulu = _closure1_slot1;
            mike = _closure1_slot2;
            entity = 11;
            mike = mike[entity];
            entity = undefined;
            tango = zulu.bind(entity)(mike);
            zulu = tango.partition;
            mike = _closure2_slot0;
            entity = function(argFoo) {
                zulu = _closure1_slot10;
                mike = zulu.hasJoined;
                entity = argFoo;
                entity = mike.bind(zulu)(entity);
                return entity;
            };
            entity = zulu.bind(tango)(mike, entity);
            return entity;
        };
        sizing = options;
        kilo = oscar;
        foxtrot = report;
        zulu = sizing[golf](kilo, backup, foxtrot, romeo, yankee);
        mike = _closure1_slot3;
        entity = 2;
        zulu = mike.bind(tango)(zulu, entity);
        entity = {};
        mike = 0;
        mike = zulu[mike];
        entity['joinedThreadIds'] = mike;
        mike = 1;
        mike = zulu[mike];
        entity['unjoinedThreadIds'] = mike;
        return entity;
    };
    zulu['useActiveThreads'] = tango;
    tango = function(argFoo) { // Original name: useActiveGuildThreads
        zulu = argFoo;
        var _closure2_slot0 = zulu;
        oscar = _closure1_slot0;
        report = _closure1_slot2;
        tango = 10;
        report = report[tango];
        tango = undefined;
        golf = oscar.bind(tango)(report);
        oscar = golf.useStateFromStoresArray;
        tango = _closure1_slot6;
        report = new Array(3);
        report[0] = tango;
        tango = _closure1_slot8;
        report[1] = tango;
        tango = _closure1_slot5;
        report[2] = tango;
        tango = new Array(1);
        tango[0] = zulu;
        zulu = function() {
            tango = _closure1_slot1;
            golf = _closure1_slot2;
            zulu = 11;
            zulu = golf[zulu];
            oscar = undefined;
            tango = tango.bind(oscar)(zulu);
            options = _closure1_slot8;
            report = options.getThreadsForGuild;
            zulu = _closure2_slot0;
            zulu = report.bind(options)(zulu);
            tango = tango.bind(oscar)(zulu);
            zulu = tango.values;
            report = zulu.bind(tango)();
            tango = report.map;
            zulu = function(argFoo) {
                zulu = _closure1_slot1;
                mike = _closure1_slot2;
                entity = 11;
                mike = mike[entity];
                entity = undefined;
                zulu = zulu.bind(entity)(mike);
                mike = zulu.values;
                entity = argFoo;
                entity = mike.bind(zulu)(entity);
                return entity;
            };
            tango = tango.bind(report)(zulu);
            zulu = tango.flatten;
            report = zulu.bind(tango)();
            tango = report.map;
            zulu = function(argFoo) {
                entity = argFoo;
                zulu = entity.id;
                mike = _closure1_slot5;
                entity = mike.getChannel;
                entity = entity.bind(mike)(zulu);
                return entity;
            };
            tango = tango.bind(report)(zulu);
            zulu = tango.filter;
            report = _closure1_slot0;
            mike = 12;
            mike = golf[mike];
            mike = report.bind(oscar)(mike);
            mike = mike.isNotNullish;
            tango = zulu.bind(tango)(mike);
            zulu = tango.filter;
            mike = function(argFoo) {
                tango = _closure1_slot6;
                zulu = tango.can;
                entity = _closure1_slot11;
                mike = entity.VIEW_CHANNEL;
                entity = argFoo;
                entity = zulu.bind(tango)(mike, entity);
                return entity;
            };
            zulu = zulu.bind(tango)(mike);
            mike = zulu.map;
            entity = function(argFoo) {
                entity = argFoo;
                entity = entity.id;
                return entity;
            };
            mike = mike.bind(zulu)(entity);
            entity = mike.value;
            entity = entity.bind(mike)();
            return entity;
        };
        report = oscar.bind(golf)(report, zulu, tango);
        var _closure2_slot1 = report;
        tango = _closure1_slot4;
        zulu = tango.useMemo;
        mike = new Array(1);
        mike[0] = report;
        entity = function() {
            mike = _closure1_slot1;
            zulu = _closure1_slot2;
            entity = 11;
            entity = zulu[entity];
            zulu = undefined;
            mike = mike.bind(zulu)(entity);
            entity = _closure2_slot1;
            zulu = mike.bind(zulu)(entity);
            mike = zulu.sort;
            entity = function(argFoo, argBar) {
                tango = _closure1_slot1;
                zulu = _closure1_slot2;
                mike = 13;
                zulu = zulu[mike];
                mike = undefined;
                tango = tango.bind(mike)(zulu);
                zulu = tango.compare;
                oscar = _closure1_slot7;
                report = oscar.lastMessageId;
                mike = argFoo;
                mike = report.bind(oscar)(mike);
                oscar = _closure1_slot7;
                report = oscar.lastMessageId;
                entity = argBar;
                entity = report.bind(oscar)(entity);
                entity = zulu.bind(tango)(mike, entity);
                return entity;
            };
            mike = mike.bind(zulu)(entity);
            entity = mike.reverse;
            mike = entity.bind(mike)();
            entity = mike.value;
            entity = entity.bind(mike)();
            return entity;
        };
        entity = zulu.bind(tango)(entity, mike);
        return entity;
    };
    zulu['useActiveGuildThreads'] = tango;
    mike = function(argFoo, argBar, argBaz) { // Original name: useArchivedThreads
        _fun102090: for(var _fun102090_ip = 0; ; ) switch(_fun102090_ip) {
 0:
            entity = argFoo;
            output = argBar;
            foxtrot = argBaz;
            var _closure2_slot0 = entity;
            var _closure2_slot1 = output;
            var _closure2_slot2 = foxtrot;
            verify = _closure1_slot0;
            romeo = _closure1_slot2;
            golf = 10;
            mike = romeo[golf];
            options = undefined;
            report = verify.bind(options)(mike);
            tango = report.useStateFromStoresObject;
            yankee = _closure1_slot9;
            zulu = new Array(1);
            zulu[0] = yankee;
            mike = function() {
                entity = {};
                mike = _closure1_slot9;
                oscar = mike.isLoading;
                tango = _closure2_slot0;
                report = tango.id;
                tango = _closure2_slot1;
                zulu = _closure2_slot2;
                zulu = oscar.bind(mike)(report, tango, zulu);
                entity['loading'] = zulu;
                zulu = mike.isInitialLoad;
                entity['isInitialLoad'] = zulu;
                zulu = mike.canLoadMore;
                entity['canLoadMore'] = zulu;
                mike = mike.nextOffset;
                entity['nextOffset'] = mike;
                return entity;
            };
            tango = tango.bind(report)(zulu, mike);
            report = tango.canLoadMore;
            zulu = tango.loading;
            mike = tango.nextOffset;
            var _closure2_slot3 = mike;
            tango = tango.isInitialLoad;
            var _closure2_slot4 = tango;
            sizing = _closure1_slot4;
            kilo = sizing.useCallback;
            backup = new Array(4);
            backup[0] = entity;
            backup[1] = output;
            backup[2] = foxtrot;
            backup[3] = mike;
            mike = function() {
                _fun102092: for(var _fun102092_ip = 0; ; ) switch(_fun102092_ip) {
 0:
                    oscar = _closure1_slot6;
                    report = oscar.can;
                    entity = _closure1_slot11;
                    tango = entity.READ_MESSAGE_HISTORY;
                    zulu = _closure2_slot0;
                    zulu = report.bind(oscar)(tango, zulu);
                    if(!zulu) { _fun102092_ip = 100; continue _fun102092 }
 39:
                    tango = _closure1_slot1;
                    zulu = _closure1_slot2;
                    mike = 14;
                    zulu = zulu[mike];
                    mike = undefined;
                    golf = tango.bind(mike)(zulu);
                    oscar = golf.loadArchivedThreads;
                    mike = _closure2_slot0;
                    romeo = mike.guild_id;
                    yankee = mike.id;
                    offset = _closure2_slot1;
                    verify = _closure2_slot2;
                    options = _closure2_slot3;
                    foxtrot = golf;
                    entity = foxtrot[oscar](romeo, yankee, offset, verify, options, golf);
 100:
                    entity = undefined;
                    return entity;
                }
            };
            mike = kilo.bind(sizing)(mike, backup);
            var _closure2_slot5 = mike;
            kilo = _closure1_slot4;
            backup = kilo.useRef;
            backup = backup.bind(kilo)(mike);
            var _closure2_slot6 = backup;
            sizing = _closure1_slot4;
            kilo = sizing.useEffect;
            backup = function() {
                mike = _closure2_slot6;
                entity = _closure2_slot5;
                mike['current'] = entity;
                entity = undefined;
                return entity;
            };
            backup = kilo.bind(sizing)(backup);
            sizing = _closure1_slot4;
            kilo = sizing.useEffect;
            result = entity.id;
            backup = new Array(4);
            backup[0] = result;
            backup[1] = output;
            backup[2] = foxtrot;
            backup[3] = tango;
            foxtrot = function() {
                _fun102094: for(var _fun102094_ip = 0; ; ) switch(_fun102094_ip) {
 0:
                    mike = _closure2_slot4;
                    if(!mike) { _fun102094_ip = 23; continue _fun102094 }
 10:
                    mike = _closure2_slot6;
                    entity = mike.current;
                    entity = entity.bind(mike)();
 23:
                    entity = undefined;
                    return entity;
                }
            };
            foxtrot = kilo.bind(sizing)(foxtrot, backup);
            kilo = _closure1_slot4;
            backup = kilo.useEffect;
            entity = entity.id;
            foxtrot = new Array(1);
            foxtrot[0] = entity;
            entity = function() {
                zulu = _closure1_slot1;
                mike = _closure1_slot2;
                entity = 15;
                mike = mike[entity];
                entity = undefined;
                tango = zulu.bind(entity)(mike);
                zulu = tango.resort;
                mike = _closure2_slot0;
                mike = mike.id;
                mike = zulu.bind(tango)(mike);
                return entity;
            };
            entity = backup.bind(kilo)(entity, foxtrot);
            entity = {};
            golf = romeo[golf];
            verify = verify.bind(options)(golf);
            options = verify.useStateFromStoresArray;
            golf = new Array(3);
            golf[0] = yankee;
            yankee = _closure1_slot5;
            golf[1] = yankee;
            offset = _closure1_slot6;
            golf[2] = offset;
            oscar = function() {
                tango = _closure1_slot1;
                zulu = _closure1_slot2;
                mike = 11;
                mike = zulu[mike];
                zulu = undefined;
                mike = tango.bind(zulu)(mike);
                golf = _closure1_slot9;
                oscar = golf.getThreads;
                tango = _closure2_slot0;
                report = tango.id;
                tango = _closure2_slot1;
                entity = _closure2_slot2;
                entity = oscar.bind(golf)(report, tango, entity);
                zulu = mike.bind(zulu)(entity);
                mike = zulu.filter;
                entity = function(argFoo) {
                    _fun102097: for(var _fun102097_ip = 0; ; ) switch(_fun102097_ip) {
 0:
                        tango = _closure1_slot5;
                        zulu = tango.getChannel;
                        entity = argFoo;
                        report = zulu.bind(tango)(entity);
                        entity = null;
                        entity = entity != report;
                        if(!entity) { _fun102097_ip = 55; continue _fun102097 }
 29:
                        tango = _closure1_slot6;
                        zulu = tango.can;
                        mike = _closure1_slot11;
                        mike = mike.VIEW_CHANNEL;
                        entity = zulu.bind(tango)(mike, report);
 55:
                        return entity;
                    }
                };
                mike = mike.bind(zulu)(entity);
                entity = mike.value;
                entity = entity.bind(mike)();
                return entity;
            };
            oscar = options.bind(verify)(golf, oscar);
            entity['threadIds'] = oscar;
            entity['canLoadMore'] = report;
            if(zulu) { _fun102090_ip = 348; continue _fun102090 }
 345:
            zulu = tango;
 348:
            entity['loading'] = zulu;
            entity['loadMore'] = mike;
            return entity;
        }
    };
    zulu['useArchivedThreads'] = mike;
    return entity;
})();