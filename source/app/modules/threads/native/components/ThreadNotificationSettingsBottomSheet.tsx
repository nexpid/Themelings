// app/modules/threads/native/components/ThreadNotificationSettingsBottomSheet.tsx
export default (function(global, require, metroImportDefault, metroImportAll, moduleObject, exports, dependencyMap) {
    var5 = require;
    var11 = metroImportDefault;
    var3 = exports;
    var6 = dependencyMap;
    var _closure1_slot0 = var5;
    var _closure1_slot1 = var11;
    var _closure1_slot2 = var6;
    var1 = global;
    var8 = var1.Object;
    var7 = var8.defineProperty;
    var4 = {};
    var1 = true;
    var4['value'] = var1;
    var1 = '__esModule';
    var1 = var7.bind(var8)(var3, var1, var4);
    var1 = 0;
    var7 = var6[var1];
    var4 = metroImportAll;
    var1 = undefined;
    var4 = var4.bind(var1)(var7);
    var4 = 1;
    var4 = var6[var4];
    var4 = var5.bind(var1)(var4);
    var4 = var4.View;
    var _closure1_slot3 = var4;
    var4 = 2;
    var4 = var6[var4];
    var4 = var5.bind(var1)(var4);
    var4 = var4.getThreadNotificationOptions;
    var _closure1_slot4 = var4;
    var4 = 3;
    var4 = var6[var4];
    var4 = var5.bind(var1)(var4);
    var7 = var4.jsx;
    var _closure1_slot5 = var7;
    var4 = var4.jsxs;
    var _closure1_slot6 = var4;
    var4 = 4;
    var4 = var6[var4];
    var8 = var5.bind(var1)(var4);
    var7 = var8.createStyles;
    var4 = {};
    var9 = {'backgroundColor': null, 'paddingTop': 8, 'paddingBottom': 64};
    var10 = 5;
    var12 = var6[var10];
    var12 = var11.bind(var1)(var12);
    var12 = var12.colors;
    var12 = var12.BACKGROUND_SECONDARY;
    var9['backgroundColor'] = var12;
    var4['container'] = var9;
    var9 = {};
    var12 = var6[var10];
    var12 = var11.bind(var1)(var12);
    var12 = var12.radii;
    var12 = var12.sm;
    var9['borderRadius'] = var12;
    var4['cardBody'] = var9;
    var9 = {'width': 22, 'height': 22};
    var4['checkbox'] = var9;
    var9 = {'height': 1, 'alignSelf': 'stretch', 'backgroundColor': null, 'marginLeft': 16};
    var10 = var6[var10];
    var10 = var11.bind(var1)(var10);
    var10 = var10.colors;
    var10 = var10.BACKGROUND_MODIFIER_ACCENT;
    var9['backgroundColor'] = var10;
    var4['divider'] = var9;
    var4 = var7.bind(var8)(var4);
    var _closure1_slot7 = var4;
    var4 = 12;
    var4 = var6[var4];
    var6 = var5.bind(var1)(var4);
    var5 = var6.fileFinishedImporting;
    var4 = 'modules/threads/native/components/ThreadNotificationSettingsBottomSheet.tsx';
    var4 = var5.bind(var6)(var4);
    var2 = function ThreadNotificationsBottomSheet(arg1) {
        var1 = arg1;
        var3 = var1.channel;
        var _closure2_slot0 = var3;
        var1 = _closure1_slot7;
        var4 = undefined;
        var12 = var1.bind(var4)();
        var _closure2_slot1 = var12;
        var14 = _closure1_slot0;
        var15 = _closure1_slot2;
        var1 = 6;
        var1 = var15[var1];
        var2 = var14.bind(var4)(var1);
        var1 = var2.useThreadNotificationSetting;
        var1 = var1.bind(var2)(var3);
        var _closure2_slot2 = var1;
        var3 = _closure1_slot6;
        var1 = 7;
        var1 = var15[var1];
        var1 = var14.bind(var4)(var1);
        var2 = var1.BottomSheet;
        var1 = {};
        var8 = _closure1_slot5;
        var5 = 8;
        var5 = var15[var5];
        var5 = var14.bind(var4)(var5);
        var6 = var5.BottomSheetTitleHeader;
        var5 = {};
        var11 = 9;
        var7 = var15[var11];
        var7 = var14.bind(var4)(var7);
        var16 = var7.intl;
        var13 = var16.string;
        var7 = var15[var11];
        var7 = var14.bind(var4)(var7);
        var7 = var7.t;
        var7 = var7.h850Sk;
        var7 = var13.bind(var16)(var7);
        var5['title'] = var7;
        var6 = var8.bind(var4)(var6, var5);
        var5 = new Array(2);
        var5[0] = var6;
        var6 = 10;
        var6 = var15[var6];
        var6 = var14.bind(var4)(var6);
        var7 = var6.FormCardSection;
        var6 = {};
        var12 = var12.cardBody;
        var6['cardStyle'] = var12;
        var12 = var15[var11];
        var12 = var14.bind(var4)(var12);
        var13 = var12.intl;
        var12 = var13.string;
        var11 = var15[var11];
        var11 = var14.bind(var4)(var11);
        var11 = var11.t;
        var11 = var11.h850Sk;
        var11 = var12.bind(var13)(var11);
        var6['accessibilityLabel'] = var11;
        var11 = 'radiogroup';
        var6['accessibilityRole'] = var11;
        var10 = _closure1_slot4;
        var11 = var10.bind(var4)();
        var10 = var11.map;
        var9 = function(arg1, arg2, arg3) {
            _fun0001: for(var _fun0001_ip = 0; ; ) switch(_fun0001_ip) {
case 0:
                var1 = arg1;
                var7 = var1.setting;
                var _closure3_slot0 = var7;
                var11 = var1.label;
                var5 = _closure1_slot6;
                var4 = _closure1_slot3;
                var3 = {};
                var9 = _closure1_slot5;
                var6 = _closure1_slot0;
                var2 = _closure1_slot2;
                var1 = 10;
                var1 = var2[var1];
                var2 = undefined;
                var1 = var6.bind(var2)(var1);
                var6 = var1.FormRadioRow;
                var1 = {};
                var12 = 'right';
                var1['align'] = var12;
                var1['label'] = var11;
                var10 = function onPress() {
                    var3 = _closure1_slot1;
                    var2 = _closure1_slot2;
                    var1 = 11;
                    var2 = var2[var1];
                    var1 = undefined;
                    var4 = var3.bind(var1)(var2);
                    var3 = var4.setNotificationSettings;
                    var2 = _closure2_slot0;
                    var1 = {};
                    var5 = _closure3_slot0;
                    var1['flags'] = var5;
                    var1 = var3.bind(var4)(var2, var1);
                    return var1;
                };
                var1['onPress'] = var10;
                var10 = _closure2_slot2;
                var10 = var10 === var7;
                var1['selected'] = var10;
                var6 = var9.bind(var2)(var6, var1);
                var1 = new Array(2);
                var1[0] = var6;
                var6 = arg3;
                var9 = var6.length;
                var6 = 1;
                var10 = var9 - var6;
                var9 = arg2;
                var6 = null;
                if(!(var9 !== var10)) { _fun0001_ip = 2; continue _fun0001 }
case 3:
                var10 = _closure1_slot5;
                var9 = _closure1_slot3;
                var8 = {};
                var11 = _closure2_slot1;
                var11 = var11.divider;
                var8['style'] = var11;
                var6 = var10.bind(var2)(var9, var8);
case 2:
                var1[1] = var6;
                var3['children'] = var1;
                var1 = global;
                var1 = var1.HermesInternal;
                var6 = var1.concat;
                var1 = '';
                var1 = var6.bind(var1)(var7);
                var1 = var5.bind(var2)(var4, var3, var1);
                return var1;
            }
        };
        var9 = var10.bind(var11)(var9);
        var6['children'] = var9;
        var6 = var8.bind(var4)(var7, var6);
        var5[1] = var6;
        var1['children'] = var5;
        var1 = var3.bind(var4)(var2, var1);
        return var1;
    };
    var3['default'] = var2;
    return var1;
})();