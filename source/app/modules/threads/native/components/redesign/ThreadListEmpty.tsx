// app/modules/threads/native/components/redesign/ThreadListEmpty.tsx
export default (function(argFoo, argBar, argBaz, argCorge, _, argFred, argPlugh) {
    report = argBar;
    romeo = argBaz;
    zulu = argFred;
    oscar = argPlugh;
    var _closure1_slot0 = report;
    var _closure1_slot1 = romeo;
    var _closure1_slot2 = oscar;
    entity = global;
    options = entity.Object;
    golf = options.defineProperty;
    tango = {};
    entity = true;
    tango['value'] = entity;
    entity = '__esModule';
    entity = golf.bind(options)(zulu, entity, tango);
    entity = 0;
    golf = oscar[entity];
    tango = argCorge;
    entity = undefined;
    golf = tango.bind(entity)(golf);
    tango = 1;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.View;
    var _closure1_slot3 = tango;
    tango = 2;
    options = oscar[tango];
    options = report.bind(entity)(options);
    options = options.jsx;
    var _closure1_slot4 = options;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.jsxs;
    var _closure1_slot5 = tango;
    tango = 3;
    tango = oscar[tango];
    verify = report.bind(entity)(tango);
    options = verify.createStyles;
    tango = {};
    offset = {'flex': 1, 'justifyContent': 'center', 'alignItems': 'center'};
    tango['container'] = offset;
    offset = {};
    yankee = 4;
    foxtrot = oscar[yankee];
    foxtrot = romeo.bind(entity)(foxtrot);
    foxtrot = foxtrot.colors;
    foxtrot = foxtrot.BG_MOD_SUBTLE;
    offset['backgroundColor'] = foxtrot;
    yankee = oscar[yankee];
    yankee = romeo.bind(entity)(yankee);
    yankee = yankee.radii;
    yankee = yankee.round;
    offset['borderRadius'] = yankee;
    yankee = 12;
    offset['padding'] = yankee;
    tango['iconWrapper'] = offset;
    offset = {'textAlign': 'center', 'marginTop': 16, 'marginHorizontal': 16};
    tango['title'] = offset;
    offset = {'textAlign': 'center', 'marginTop': 4, 'marginHorizontal': 16, 'marginBottom': 16};
    tango['subtext'] = offset;
    tango = options.bind(verify)(tango);
    var _closure1_slot6 = tango;
    tango = golf.memo;
    mike = function(argFoo) {
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            entity = argFoo;
            yankee = entity.onCreateThreadPress;
            entity = _closure1_slot6;
            tango = undefined;
            romeo = entity.bind(tango)();
            zulu = _closure1_slot5;
            mike = _closure1_slot3;
            entity = {};
            report = romeo.container;
            entity['style'] = report;
            verify = _closure1_slot4;
            report = {};
            oscar = romeo.iconWrapper;
            report['style'] = oscar;
            backup = _closure1_slot1;
            offset = _closure1_slot2;
            foxtrot = 5;
            oscar = offset[foxtrot];
            options = backup.bind(tango)(oscar);
            oscar = {};
            kilo = 6;
            kilo = offset[kilo];
            kilo = backup.bind(tango)(kilo);
            oscar['source'] = kilo;
            foxtrot = offset[foxtrot];
            foxtrot = backup.bind(tango)(foxtrot);
            foxtrot = foxtrot.Sizes;
            foxtrot = foxtrot.MEDIUM;
            oscar['size'] = foxtrot;
            oscar = verify.bind(tango)(options, oscar);
            report['children'] = oscar;
            oscar = verify.bind(tango)(mike, report);
            report = new Array(4);
            report[0] = oscar;
            kilo = _closure1_slot0;
            oscar = 7;
            options = offset[oscar];
            options = kilo.bind(tango)(options);
            foxtrot = options.Text;
            options = {'style': null, 'accessibilityRole': 'header', 'maxFontSizeMultiplier': 2, 'variant': 'heading-lg/semibold', 'color': 'header-primary'};
            backup = romeo.title;
            options['style'] = backup;
            backup = 8;
            sizing = offset[backup];
            sizing = kilo.bind(tango)(sizing);
            result = sizing.intl;
            output = result.string;
            sizing = offset[backup];
            sizing = kilo.bind(tango)(sizing);
            sizing = sizing.t;
            sizing = sizing.HgTQ8v;
            sizing = output.bind(result)(sizing);
            options['children'] = sizing;
            options = verify.bind(tango)(foxtrot, options);
            report[1] = options;
            oscar = offset[oscar];
            oscar = kilo.bind(tango)(oscar);
            options = oscar.Text;
            oscar = {'style': null, 'maxFontSizeMultiplier': 2, 'variant': 'text-sm/medium', 'color': 'header-secondary'};
            romeo = romeo.subtext;
            oscar['style'] = romeo;
            romeo = offset[backup];
            romeo = kilo.bind(tango)(romeo);
            foxtrot = romeo.intl;
            romeo = foxtrot.string;
            offset = offset[backup];
            offset = kilo.bind(tango)(offset);
            offset = offset.t;
            offset = offset.jmq9GB;
            offset = romeo.bind(foxtrot)(offset);
            oscar['children'] = offset;
            oscar = verify.bind(tango)(options, oscar);
            report[2] = oscar;
            oscar = null;
            oscar = oscar != yankee;
            if(!oscar) { _fun00002_ip = 448; continue _fun00001 }
 358:
            verify = _closure1_slot4;
            foxtrot = _closure1_slot0;
            offset = _closure1_slot2;
            golf = 9;
            golf = offset[golf];
            golf = foxtrot.bind(tango)(golf);
            options = golf.Button;
            golf = {};
            golf['onPress'] = yankee;
            yankee = offset[backup];
            yankee = foxtrot.bind(tango)(yankee);
            romeo = yankee.intl;
            yankee = romeo.string;
            offset = offset[backup];
            offset = foxtrot.bind(tango)(offset);
            offset = offset.t;
            offset = offset.rBIGBA;
            offset = yankee.bind(romeo)(offset);
            golf['text'] = offset;
            oscar = verify.bind(tango)(options, golf);
 448:
            report[3] = oscar;
            entity['children'] = report;
            entity = zulu.bind(tango)(mike, entity);
            return entity;
        }
    };
    mike = tango.bind(golf)(mike);
    tango = 10;
    tango = oscar[tango];
    oscar = report.bind(entity)(tango);
    report = oscar.fileFinishedImporting;
    tango = 'modules/threads/native/components/redesign/ThreadListEmpty.tsx';
    tango = report.bind(oscar)(tango);
    zulu['default'] = mike;
    return entity;
})();