// app/modules/replies/PendingReplyActionCreators.tsx
export default (function(argFoo, argBar, argBaz, _, __, argFred, argPlugh) {
    zulu = argFred;
    tango = argPlugh;
    entity = argBaz;
    var _closure1_slot0 = entity;
    var _closure1_slot1 = tango;
    entity = global;
    golf = entity.Object;
    oscar = golf.defineProperty;
    report = {};
    entity = true;
    report['value'] = entity;
    entity = '__esModule';
    entity = oscar.bind(golf)(zulu, entity, report);
    entity = 1;
    report = tango[entity];
    tango = argBar;
    entity = undefined;
    oscar = tango.bind(entity)(report);
    report = oscar.fileFinishedImporting;
    tango = 'modules/replies/PendingReplyActionCreators.tsx';
    tango = report.bind(oscar)(tango);
    tango = function(argFoo) { // Original name: createPendingReply
        entity = argFoo;
        verify = entity.message;
        options = entity.channel;
        golf = entity.shouldMention;
        oscar = entity.showMentionToggle;
        report = entity.source;
        zulu = _closure1_slot0;
        mike = _closure1_slot1;
        entity = 0;
        mike = mike[entity];
        entity = undefined;
        tango = zulu.bind(entity)(mike);
        zulu = tango.dispatch;
        mike = {};
        offset = 'CREATE_PENDING_REPLY';
        mike['type'] = offset;
        mike['message'] = verify;
        mike['channel'] = options;
        mike['shouldMention'] = golf;
        mike['showMentionToggle'] = oscar;
        mike['source'] = report;
        mike = zulu.bind(tango)(mike);
        return entity;
    };
    zulu['createPendingReply'] = tango;
    tango = function(argFoo) { // Original name: createShallowPendingReply
        entity = argFoo;
        golf = entity.messageId;
        oscar = entity.channel;
        report = entity.shouldMention;
        tango = entity.showMentionToggle;
        zulu = _closure1_slot0;
        mike = _closure1_slot1;
        entity = 0;
        mike = mike[entity];
        entity = undefined;
        zulu = zulu.bind(entity)(mike);
        mike = zulu.dispatch;
        entity = {};
        options = 'CREATE_SHALLOW_PENDING_REPLY';
        entity['type'] = options;
        entity['messageId'] = golf;
        entity['channel'] = oscar;
        entity['shouldMention'] = report;
        entity['showMentionToggle'] = tango;
        entity = mike.bind(zulu)(entity);
        return entity;
    };
    zulu['createShallowPendingReply'] = tango;
    tango = function(argFoo, argBar) { // Original name: setPendingReplyShouldMention
        zulu = _closure1_slot0;
        mike = _closure1_slot1;
        entity = 0;
        mike = mike[entity];
        entity = undefined;
        tango = zulu.bind(entity)(mike);
        zulu = tango.dispatch;
        mike = {};
        report = 'SET_PENDING_REPLY_SHOULD_MENTION';
        mike['type'] = report;
        report = argFoo;
        mike['channelId'] = report;
        report = argBar;
        mike['shouldMention'] = report;
        mike = zulu.bind(tango)(mike);
        return entity;
    };
    zulu['setPendingReplyShouldMention'] = tango;
    mike = function(argFoo) { // Original name: deletePendingReply
        zulu = _closure1_slot0;
        mike = _closure1_slot1;
        entity = 0;
        mike = mike[entity];
        entity = undefined;
        tango = zulu.bind(entity)(mike);
        zulu = tango.dispatch;
        mike = {};
        report = 'DELETE_PENDING_REPLY';
        mike['type'] = report;
        report = argFoo;
        mike['channelId'] = report;
        mike = zulu.bind(tango)(mike);
        return entity;
    };
    zulu['deletePendingReply'] = mike;
    return entity;
})();