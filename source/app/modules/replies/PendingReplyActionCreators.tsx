// app/modules/replies/PendingReplyActionCreators.tsx
export default (function(argFoo, argBar, argBaz, _, __, argFre, argPlu) {
    zuuluu = argFre;
    tangon = argPlu;
    entity = argBaz;
    var _closure1_slot0 = entity;
    var _closure1_slot1 = tangon;
    entity = global;
    golfie = entity.Object;
    oscard = golfie.defineProperty;
    report = {};
    entity = true;
    report['value'] = entity;
    entity = '__esModule';
    entity = oscard.bind(golfie)(zuuluu, entity, report);
    entity = 1;
    report = tangon[entity];
    tangon = argBar;
    entity = undefined;
    oscard = tangon.bind(entity)(report);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/replies/PendingReplyActionCreators.tsx';
    tangon = report.bind(oscard)(tangon);
    tangon = function(argFoo) { // Original name: createPendingReply
        entity = argFoo;
        verify = entity.message;
        option = entity.channel;
        golfie = entity.shouldMention;
        oscard = entity.showMentionToggle;
        report = entity.source;
        zuuluu = _closure1_slot0;
        michal = _closure1_slot1;
        entity = 0;
        michal = michal[entity];
        entity = undefined;
        tangon = zuuluu.bind(entity)(michal);
        zuuluu = tangon.dispatch;
        michal = {};
        offset = 'CREATE_PENDING_REPLY';
        michal['type'] = offset;
        michal['message'] = verify;
        michal['channel'] = option;
        michal['shouldMention'] = golfie;
        michal['showMentionToggle'] = oscard;
        michal['source'] = report;
        michal = zuuluu.bind(tangon)(michal);
        return entity;
    };
    zuuluu['createPendingReply'] = tangon;
    tangon = function(argFoo) { // Original name: createShallowPendingReply
        entity = argFoo;
        golfie = entity.messageId;
        oscard = entity.channel;
        report = entity.shouldMention;
        tangon = entity.showMentionToggle;
        zuuluu = _closure1_slot0;
        michal = _closure1_slot1;
        entity = 0;
        michal = michal[entity];
        entity = undefined;
        zuuluu = zuuluu.bind(entity)(michal);
        michal = zuuluu.dispatch;
        entity = {};
        option = 'CREATE_SHALLOW_PENDING_REPLY';
        entity['type'] = option;
        entity['messageId'] = golfie;
        entity['channel'] = oscard;
        entity['shouldMention'] = report;
        entity['showMentionToggle'] = tangon;
        entity = michal.bind(zuuluu)(entity);
        return entity;
    };
    zuuluu['createShallowPendingReply'] = tangon;
    tangon = function(argFoo, argBar) { // Original name: setPendingReplyShouldMention
        zuuluu = _closure1_slot0;
        michal = _closure1_slot1;
        entity = 0;
        michal = michal[entity];
        entity = undefined;
        tangon = zuuluu.bind(entity)(michal);
        zuuluu = tangon.dispatch;
        michal = {};
        report = 'SET_PENDING_REPLY_SHOULD_MENTION';
        michal['type'] = report;
        report = argFoo;
        michal['channelId'] = report;
        report = argBar;
        michal['shouldMention'] = report;
        michal = zuuluu.bind(tangon)(michal);
        return entity;
    };
    zuuluu['setPendingReplyShouldMention'] = tangon;
    michal = function(argFoo) { // Original name: deletePendingReply
        zuuluu = _closure1_slot0;
        michal = _closure1_slot1;
        entity = 0;
        michal = michal[entity];
        entity = undefined;
        tangon = zuuluu.bind(entity)(michal);
        zuuluu = tangon.dispatch;
        michal = {};
        report = 'DELETE_PENDING_REPLY';
        michal['type'] = report;
        report = argFoo;
        michal['channelId'] = report;
        michal = zuuluu.bind(tangon)(michal);
        return entity;
    };
    zuuluu['deletePendingReply'] = michal;
    return entity;
})();