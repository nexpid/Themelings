// app/modules/clan/native/components/ClanJoinSuccessActionSheet.tsx
export default (function(argFoo, argBar, argBaz, argCorge, _, argFred, argPlugh) {
    report = argBar;
    romeo = argBaz;
    zulu = argFred;
    oscar = argPlugh;
    var _closure1_slot0 = report;
    var _closure1_slot1 = romeo;
    var _closure1_slot2 = oscar;
    entity = global;
    options = entity.Object;
    golf = options.defineProperty;
    tango = {};
    entity = true;
    tango['value'] = entity;
    entity = '__esModule';
    entity = golf.bind(options)(zulu, entity, tango);
    entity = 0;
    golf = oscar[entity];
    tango = argCorge;
    entity = undefined;
    tango = tango.bind(entity)(golf);
    var _closure1_slot3 = tango;
    tango = 1;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    golf = tango.fetchClanInfo;
    var _closure1_slot4 = golf;
    tango = tango.useClanInfo;
    var _closure1_slot5 = tango;
    tango = 2;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.ClanTagBadgeSize;
    var _closure1_slot6 = tango;
    tango = 3;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.ACTION_SHEET_BACKGROUND_COLOR;
    var _closure1_slot7 = tango;
    tango = 4;
    golf = oscar[tango];
    golf = report.bind(entity)(golf);
    golf = golf.jsx;
    var _closure1_slot8 = golf;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.jsxs;
    var _closure1_slot9 = tango;
    tango = 5;
    tango = oscar[tango];
    options = report.bind(entity)(tango);
    golf = options.createStyles;
    tango = {};
    offset = 'center';
    verify = {'display': 'flex', 'flexDirection': 'column', 'alignItems': 'center', 'paddingHorizontal': 24};
    tango['container'] = verify;
    verify = {'paddingVertical': 8, 'paddingHorizontal': 12, 'marginTop': 40, 'marginBottom': 32, 'backgroundColor': null, 'borderColor': null, 'borderWidth': 1};
    yankee = 6;
    foxtrot = oscar[yankee];
    foxtrot = romeo.bind(entity)(foxtrot);
    foxtrot = foxtrot.colors;
    foxtrot = foxtrot.BG_BASE_PRIMARY;
    verify['backgroundColor'] = foxtrot;
    yankee = oscar[yankee];
    yankee = romeo.bind(entity)(yankee);
    yankee = yankee.colors;
    yankee = yankee.BORDER_SUBTLE;
    verify['borderColor'] = yankee;
    tango['tag'] = verify;
    verify = {};
    yankee = 36;
    verify['lineHeight'] = yankee;
    tango['tagText'] = verify;
    verify = {};
    verify['textAlign'] = offset;
    tango['headerText'] = verify;
    verify = {'textAlign': 'center', 'marginTop': 16, 'marginBottom': 32};
    tango['subheaderText'] = verify;
    verify = {'position': 'absolute', 'top': 0, 'left': 0, 'right': 0, 'bottom': 0};
    tango['backgroundGradient'] = verify;
    tango = golf.bind(options)(tango);
    var _closure1_slot10 = tango;
    tango = function(argFoo) { // Original name: RadialGradientBackground
        entity = argFoo;
        kilo = entity.startColor;
        sizing = entity.endColor;
        entity = _closure1_slot10;
        tango = undefined;
        options = entity.bind(tango)();
        zulu = _closure1_slot9;
        golf = _closure1_slot0;
        verify = _closure1_slot2;
        oscar = 7;
        entity = verify[oscar];
        entity = golf.bind(tango)(entity);
        mike = entity.Svg;
        entity = {'height': '100%', 'width': '100%'};
        options = options.backgroundGradient;
        entity['style'] = options;
        options = _closure1_slot8;
        report = verify[oscar];
        report = golf.bind(tango)(report);
        offset = report.Defs;
        report = {};
        yankee = verify[oscar];
        yankee = golf.bind(tango)(yankee);
        romeo = yankee.RadialGradient;
        yankee = {'id': 'grad', 'cx': '50%', 'cy': '0%', 'r': '70%', 'fx': '50%', 'fy': '0%'};
        foxtrot = verify[oscar];
        foxtrot = golf.bind(tango)(foxtrot);
        backup = foxtrot.Stop;
        foxtrot = {'offset': '0', 'stopColor': null, 'stopOpacity': '0.5'};
        foxtrot['stopColor'] = kilo;
        backup = options.bind(tango)(backup, foxtrot);
        foxtrot = new Array(2);
        foxtrot[0] = backup;
        backup = verify[oscar];
        backup = golf.bind(tango)(backup);
        kilo = backup.Stop;
        backup = {'offset': '1', 'stopColor': null, 'stopOpacity': '0'};
        backup['stopColor'] = sizing;
        backup = options.bind(tango)(kilo, backup);
        foxtrot[1] = backup;
        yankee['children'] = foxtrot;
        yankee = zulu.bind(tango)(romeo, yankee);
        report['children'] = yankee;
        offset = options.bind(tango)(offset, report);
        report = new Array(2);
        report[0] = offset;
        oscar = verify[oscar];
        oscar = golf.bind(tango)(oscar);
        golf = oscar.Rect;
        oscar = {'width': '100%', 'height': '100%', 'fill': 'url(#grad)'};
        oscar = options.bind(tango)(golf, oscar);
        report[1] = oscar;
        entity['children'] = report;
        entity = zulu.bind(tango)(mike, entity);
        return entity;
    };
    var _closure1_slot11 = tango;
    tango = 21;
    tango = oscar[tango];
    oscar = report.bind(entity)(tango);
    report = oscar.fileFinishedImporting;
    tango = 'modules/clan/native/components/ClanJoinSuccessActionSheet.tsx';
    tango = report.bind(oscar)(tango);
    mike = function(argFoo) { // Original name: ClanJoinSuccessActionSheet
        _fun123754: for(var _fun123754_ip = 0; ; ) switch(_fun123754_ip) {
 0:
            mike = argFoo;
            offset = mike.guildId;
            var _closure2_slot0 = offset;
            golf = mike.onDismiss;
            var _closure2_slot1 = golf;
            mike = _closure1_slot10;
            tango = undefined;
            echo = mike.bind(tango)();
            mike = _closure1_slot5;
            config = mike.bind(tango)(offset);
            mike = _closure1_slot0;
            zulu = _closure1_slot2;
            report = 8;
            report = zulu[report];
            options = mike.bind(tango)(report);
            report = options.useBottomSheetRef;
            options = report.bind(options)();
            report = options.bottomSheetRef;
            romeo = options.bottomSheetClose;
            var _closure2_slot2 = romeo;
            yankee = _closure1_slot3;
            foxtrot = yankee.useEffect;
            verify = new Array(1);
            verify[0] = offset;
            options = function() {
                zulu = _closure1_slot4;
                mike = _closure2_slot0;
                entity = undefined;
                mike = zulu.bind(entity)(mike);
                return entity;
            };
            options = foxtrot.bind(yankee)(options, verify);
            verify = yankee.useCallback;
            options = new Array(2);
            options[0] = golf;
            options[1] = romeo;
            entity = function() {
                zulu = _closure2_slot1;
                entity = undefined;
                zulu = zulu.bind(entity)();
                mike = _closure2_slot2;
                mike = mike.bind(entity)();
                return entity;
            };
            verify = verify.bind(yankee)(entity, options);
            entity = 9;
            entity = zulu[entity];
            options = mike.bind(tango)(entity);
            zulu = options.getClanBadgeUrl;
            yankee = null;
            entity = yankee == config;
            mike = undefined;
            if(entity) { _fun123754_ip = 193; continue _fun123754 }
 181:
            entity = config.badge;
            mike = entity.imageHash;
 193:
            entity = _closure1_slot6;
            entity = entity.SIZE_24;
            sizing = zulu.bind(options)(offset, mike, entity);
            mike = _closure1_slot0;
            zulu = _closure1_slot2;
            entity = 10;
            entity = zulu[entity];
            offset = mike.bind(tango)(entity);
            options = offset.useToken;
            entity = _closure1_slot7;
            backup = options.bind(offset)(entity);
            entity = 11;
            entity = zulu[entity];
            zulu = mike.bind(tango)(entity);
            mike = zulu.getClanPrimaryButtonStyles;
            options = yankee == config;
            entity = undefined;
            if(options) { _fun123754_ip = 284; continue _fun123754 }
 272:
            options = config.branding;
            entity = options.primaryColor;
 284:
            romeo = mike.bind(zulu)(entity, backup);
            mike = yankee == romeo;
            entity = undefined;
            if(mike) { _fun123754_ip = 322; continue _fun123754 }
 299:
            zulu = romeo.backgroundColor;
            mike = yankee == zulu;
            entity = undefined;
            if(mike) { _fun123754_ip = 322; continue _fun123754 }
 313:
            mike = zulu.toString;
            entity = mike.bind(zulu)();
 322:
            mike = yankee != entity;
            foxtrot = null;
            if(!mike) { _fun123754_ip = 334; continue _fun123754 }
 331:
            foxtrot = entity;
 334:
            zulu = _closure1_slot9;
            mike = _closure1_slot0;
            options = _closure1_slot2;
            entity = 12;
            entity = options[entity];
            entity = mike.bind(tango)(entity);
            mike = entity.BottomSheet;
            entity = {};
            entity['onDismiss'] = golf;
            entity['ref'] = report;
            golf = yankee != foxtrot;
            if(!golf) { _fun123754_ip = 463; continue _fun123754 }
 382:
            offset = _closure1_slot8;
            options = _closure1_slot11;
            report = {};
            report['startColor'] = foxtrot;
            kilo = _closure1_slot1;
            output = _closure1_slot2;
            foxtrot = 13;
            foxtrot = output[foxtrot];
            foxtrot = kilo.bind(tango)(foxtrot);
            kilo = foxtrot.bind(tango)(backup);
            backup = kilo.alpha;
            foxtrot = 0.2;
            backup = backup.bind(kilo)(foxtrot);
            foxtrot = backup.hex;
            foxtrot = foxtrot.bind(backup)();
            report['endColor'] = foxtrot;
            golf = offset.bind(tango)(options, report);
 463:
            report = new Array(3);
            report[0] = golf;
            offset = _closure1_slot9;
            backup = _closure1_slot0;
            output = _closure1_slot2;
            golf = 14;
            golf = output[golf];
            golf = backup.bind(tango)(golf);
            options = golf.SafeAreaPaddingView;
            golf = {};
            foxtrot = true;
            golf['bottom'] = foxtrot;
            foxtrot = echo.container;
            golf['style'] = foxtrot;
            kilo = _closure1_slot8;
            foxtrot = 15;
            foxtrot = output[foxtrot];
            foxtrot = backup.bind(tango)(foxtrot);
            backup = foxtrot.BaseClanTagChiplet;
            foxtrot = {};
            output = echo.tag;
            foxtrot['containerStyles'] = output;
            output = echo.tagText;
            foxtrot['textStyle'] = output;
            result = yankee == config;
            output = undefined;
            if(result) { _fun123754_ip = 577; continue _fun123754 }
 572:
            output = config.tag;
 577:
            foxtrot['clanTag'] = output;
            foxtrot['clanBadge'] = sizing;
            sizing = _closure1_slot6;
            sizing = sizing.SIZE_32;
            foxtrot['badgeSize'] = sizing;
            sizing = 'heading-xxl/semibold';
            foxtrot['textVariant'] = sizing;
            sizing = 'text-normal';
            foxtrot['textColor'] = sizing;
            backup = kilo.bind(tango)(backup, foxtrot);
            foxtrot = new Array(4);
            foxtrot[0] = backup;
            result = _closure1_slot8;
            source = _closure1_slot0;
            update = _closure1_slot2;
            backup = 16;
            kilo = update[backup];
            kilo = source.bind(tango)(kilo);
            sizing = kilo.Text;
            kilo = {'style': null, 'variant': 'heading-xl/medium', 'color': 'header-primary'};
            output = echo.headerText;
            kilo['style'] = output;
            output = 17;
            control = update[output];
            control = source.bind(tango)(control);
            vacuum = control.intl;
            control = vacuum.format;
            update = update[output];
            update = source.bind(tango)(update);
            update = update.t;
            source = update.orbR8f;
            update = {};
            record = yankee == config;
            sequence = undefined;
            if(record) { _fun123754_ip = 751; continue _fun123754 }
 746:
            sequence = config.name;
 751:
            update['name'] = sequence;
            update = control.bind(vacuum)(source, update);
            kilo['children'] = update;
            kilo = result.bind(tango)(sizing, kilo);
            foxtrot[1] = kilo;
            sizing = _closure1_slot8;
            control = _closure1_slot0;
            result = _closure1_slot2;
            backup = result[backup];
            backup = control.bind(tango)(backup);
            kilo = backup.Text;
            backup = {'style': null, 'variant': 'text-md/medium', 'color': 'text-secondary'};
            echo = echo.subheaderText;
            backup['style'] = echo;
            echo = result[output];
            echo = control.bind(tango)(echo);
            source = echo.intl;
            update = source.string;
            echo = result[output];
            echo = control.bind(tango)(echo);
            echo = echo.t;
            echo = echo.fVROcn;
            echo = update.bind(source)(echo);
            backup['children'] = echo;
            backup = sizing.bind(tango)(kilo, backup);
            foxtrot[2] = backup;
            kilo = _closure1_slot1;
            backup = 18;
            backup = result[backup];
            kilo = kilo.bind(tango)(backup);
            backup = {};
            echo = yankee != romeo;
            result = undefined;
            if(!echo) { _fun123754_ip = 915; continue _fun123754 }
 912:
            result = romeo;
 915:
            backup['style'] = result;
            result = yankee != romeo;
            yankee = undefined;
            if(!result) { _fun123754_ip = 931; continue _fun123754 }
 928:
            yankee = romeo;
 931:
            backup['textStyle'] = yankee;
            yankee = _closure1_slot0;
            romeo = _closure1_slot2;
            result = romeo[output];
            result = yankee.bind(tango)(result);
            echo = result.intl;
            result = echo.string;
            output = romeo[output];
            output = yankee.bind(tango)(output);
            output = output.t;
            output = output.aYmu19;
            output = result.bind(echo)(output);
            backup['text'] = output;
            backup['onPress'] = verify;
            backup = sizing.bind(tango)(kilo, backup);
            foxtrot[3] = backup;
            golf['children'] = foxtrot;
            golf = offset.bind(tango)(options, golf);
            report[1] = golf;
            options = _closure1_slot8;
            oscar = 19;
            oscar = romeo[oscar];
            oscar = yankee.bind(tango)(oscar);
            golf = oscar.ActionSheetHeaderBar;
            oscar = {};
            offset = 20;
            offset = romeo[offset];
            offset = yankee.bind(tango)(offset);
            offset = offset.ActionSheetHeaderBarVariants;
            offset = offset.FLOATING;
            oscar['variant'] = offset;
            oscar['onPress'] = verify;
            oscar = options.bind(tango)(golf, oscar);
            report[2] = oscar;
            entity['children'] = report;
            entity = zulu.bind(tango)(mike, entity);
            return entity;
        }
    };
    zulu['default'] = mike;
    return entity;
})();