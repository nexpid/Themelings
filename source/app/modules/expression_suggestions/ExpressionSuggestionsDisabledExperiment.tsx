// app/modules/expression_suggestions/ExpressionSuggestionsDisabledExperiment.tsx
export default (function(_, argBar, __, ___, ____, argFre, argPlu) {
    report = argBar;
    zuuluu = argFre;
    oscard = argPlu;
    entity = global;
    golfie = entity.Object;
    tangon = golfie.defineProperty;
    michal = {};
    offset = true;
    michal['value'] = offset;
    entity = '__esModule';
    entity = tangon.bind(golfie)(zuuluu, entity, michal);
    entity = 0;
    michal = oscard[entity];
    entity = undefined;
    michal = report.bind(entity)(michal);
    option = michal.CommonTriggerPoints;
    michal = 1;
    michal = oscard[michal];
    golfie = report.bind(entity)(michal);
    tangon = golfie.createExperiment;
    michal = {'kind': 'user', 'id': '2024-11_expression_suggestions_disabled', 'label': 'Expression Suggestions Disabled Experiment'};
    verify = {};
    yankee = false;
    verify['disabled'] = yankee;
    michal['defaultConfig'] = verify;
    option = option.CONNECTION_OPEN;
    michal['commonTriggerPoint'] = option;
    verify = {'id': 1, 'label': 'Disable sticker expression suggestions'};
    option = {};
    option['disabled'] = offset;
    verify['config'] = option;
    option = new Array(1);
    option[0] = verify;
    michal['treatments'] = option;
    michal = tangon.bind(golfie)(michal);
    tangon = 2;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/expression_suggestions/ExpressionSuggestionsDisabledExperiment.tsx';
    tangon = report.bind(oscard)(tangon);
    zuuluu['ExpressionSuggestionsDisabledExperiment'] = michal;
    return entity;
})();