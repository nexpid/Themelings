// app/modules/message_request/native/spam/SpamMessageHamActionSheet.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    report = argBar;
    romeon = argBaz;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    var _closure1_slot1 = romeon;
    var _closure1_slot2 = oscard;
    entity = global;
    option = entity.Object;
    golfie = option.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(option)(zuuluu, entity, tangon);
    offset = 0;
    tangon = oscard[offset];
    entity = undefined;
    tangon = romeon.bind(entity)(tangon);
    var _closure1_slot3 = tangon;
    tangon = 1;
    golfie = oscard[tangon];
    tangon = argCor;
    tangon = tangon.bind(entity)(golfie);
    var _closure1_slot4 = tangon;
    tangon = 2;
    tangon = oscard[tangon];
    tangon = romeon.bind(entity)(tangon);
    var _closure1_slot5 = tangon;
    tangon = 3;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    golfie = tangon.jsx;
    var _closure1_slot6 = golfie;
    tangon = tangon.jsxs;
    var _closure1_slot7 = tangon;
    tangon = 4;
    tangon = oscard[tangon];
    option = report.bind(entity)(tangon);
    golfie = option.createStyles;
    tangon = {};
    verify = {};
    yankee = 5;
    yankee = oscard[yankee];
    yankee = romeon.bind(entity)(yankee);
    yankee = yankee.colors;
    yankee = yankee.BACKGROUND_SECONDARY;
    verify['backgroundColor'] = yankee;
    tangon['header'] = verify;
    yankee = 24;
    verify = {'paddingVertical': 24, 'paddingHorizontal': 16};
    tangon['container'] = verify;
    verify = {};
    verify['marginTop'] = yankee;
    tangon['button'] = verify;
    verify = {};
    verify['paddingHorizontal'] = offset;
    tangon['switch'] = verify;
    tangon = golfie.bind(option)(tangon);
    var _closure1_slot8 = tangon;
    tangon = 17;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/message_request/native/spam/SpamMessageHamActionSheet.tsx';
    tangon = report.bind(oscard)(tangon);
    michal = function(argFoo) { // Original name: SpamMessageRequestHamActionSheet
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            entity = argFoo;
            michal = entity.channel;
            var _closure2_slot0 = michal;
            michal = entity.onConfirm;
            var _closure2_slot1 = michal;
            entity = entity.onCancel;
            var _closure2_slot2 = entity;
            update = function() { // Original name: handleClose
                michal = _closure2_slot2;
                entity = undefined;
                michal = michal.bind(entity)();
                return entity;
            };
            entity = _closure1_slot8;
            tangon = undefined;
            yankee = entity.bind(tangon)();
            zuuluu = _closure1_slot4;
            michal = zuuluu.useState;
            entity = false;
            zuuluu = michal.bind(zuuluu)(entity);
            michal = _closure1_slot3;
            entity = 2;
            michal = michal.bind(tangon)(zuuluu, entity);
            entity = 0;
            result = michal[entity];
            var _closure2_slot3 = result;
            entity = 1;
            entity = michal[entity];
            var _closure2_slot4 = entity;
            sizing = _closure1_slot0;
            output = _closure1_slot2;
            entity = 6;
            entity = output[entity];
            report = sizing.bind(tangon)(entity);
            zuuluu = report.useStateFromStores;
            entity = _closure1_slot5;
            michal = new Array(1);
            michal[0] = entity;
            entity = function() {
                zuuluu = _closure1_slot5;
                michal = zuuluu.getUser;
                tangon = _closure2_slot0;
                entity = tangon.getRecipientId;
                entity = entity.bind(tangon)();
                entity = michal.bind(zuuluu)(entity);
                return entity;
            };
            report = zuuluu.bind(report)(michal, entity);
            entity = 7;
            entity = output[entity];
            zuuluu = sizing.bind(tangon)(entity);
            michal = zuuluu.useMessageRequestActions;
            entity = {};
            entity['user'] = report;
            report = function() { // Original name: onError
                oscard = _closure1_slot1;
                golfie = _closure1_slot2;
                entity = 8;
                michal = golfie[entity];
                entity = undefined;
                tangon = oscard.bind(entity)(michal);
                zuuluu = tangon.open;
                michal = {};
                option = 'MESSAGE_REQUEST_REQUEST_ERROR_ALERT_TITLE';
                michal['key'] = option;
                offset = _closure1_slot0;
                report = 9;
                option = golfie[report];
                option = offset.bind(entity)(option);
                verify = option.intl;
                option = verify.string;
                report = golfie[report];
                report = offset.bind(entity)(report);
                report = report.t;
                report = report.EDYbS0;
                report = option.bind(verify)(report);
                michal['content'] = report;
                report = 10;
                report = golfie[report];
                report = oscard.bind(entity)(report);
                michal['icon'] = report;
                michal = zuuluu.bind(tangon)(michal);
                return entity;
            };
            entity['onError'] = report;
            report = function() { // Original name: onAcceptSuccess
                zuuluu = _closure1_slot1;
                michal = _closure1_slot2;
                entity = 11;
                michal = michal[entity];
                entity = undefined;
                zuuluu = zuuluu.bind(entity)(michal);
                michal = zuuluu.hideActionSheet;
                michal = michal.bind(zuuluu)();
                return entity;
            };
            entity['onAcceptSuccess'] = report;
            entity = michal.bind(zuuluu)(entity);
            michal = entity.acceptMessageRequest;
            var _closure2_slot5 = michal;
            verify = entity.isAcceptLoading;
            romeon = entity.isUserProfileLoading;
            offset = entity.isOptimisticAccepted;
            zuuluu = _closure1_slot7;
            entity = 12;
            entity = output[entity];
            entity = sizing.bind(tangon)(entity);
            michal = entity.BottomSheet;
            entity = {};
            entity['onDismiss'] = update;
            option = _closure1_slot6;
            report = 13;
            report = output[report];
            report = sizing.bind(tangon)(report);
            golfie = report.BottomSheetTitleHeader;
            report = {};
            foxtra = 9;
            kiloes = output[foxtra];
            kiloes = sizing.bind(tangon)(kiloes);
            source = kiloes.intl;
            echoed = source.string;
            kiloes = output[foxtra];
            kiloes = sizing.bind(tangon)(kiloes);
            kiloes = kiloes.t;
            kiloes = kiloes.9ty6yc;
            kiloes = echoed.bind(source)(kiloes);
            report['title'] = kiloes;
            kiloes = 14;
            kiloes = output[kiloes];
            kiloes = sizing.bind(tangon)(kiloes);
            echoed = kiloes.ActionSheetCloseButton;
            kiloes = {};
            kiloes['onPress'] = update;
            kiloes = option.bind(tangon)(echoed, kiloes);
            report['trailing'] = kiloes;
            kiloes = yankee.header;
            report['backgroundColor'] = kiloes;
            golfie = option.bind(tangon)(golfie, report);
            report = new Array(3);
            report[0] = golfie;
            golfie = 15;
            golfie = output[golfie];
            golfie = sizing.bind(tangon)(golfie);
            kiloes = golfie.FormSwitchRow;
            golfie = {};
            echoed = yankee.switch;
            golfie['style'] = echoed;
            echoed = output[foxtra];
            echoed = sizing.bind(tangon)(echoed);
            source = echoed.intl;
            update = source.string;
            echoed = output[foxtra];
            echoed = sizing.bind(tangon)(echoed);
            echoed = echoed.t;
            echoed = echoed.ZhGpNT;
            echoed = update.bind(source)(echoed);
            golfie['label'] = echoed;
            golfie['value'] = result;
            result = {};
            echoed = true;
            result['renderIosBackground'] = echoed;
            golfie['switchProps'] = result;
            result = function(argFoo) { // Original name: onValueChange
                zuuluu = _closure2_slot4;
                michal = undefined;
                entity = argFoo;
                entity = zuuluu.bind(michal)(entity);
                return entity;
            };
            golfie['onValueChange'] = result;
            golfie = option.bind(tangon)(kiloes, golfie);
            report[1] = golfie;
            result = _closure1_slot1;
            kiloes = 16;
            oscard = output[kiloes];
            golfie = result.bind(tangon)(oscard);
            oscard = {};
            echoed = output[kiloes];
            echoed = result.bind(tangon)(echoed);
            echoed = echoed.Looks;
            echoed = echoed.FILLED;
            oscard['look'] = echoed;
            echoed = output[kiloes];
            echoed = result.bind(tangon)(echoed);
            echoed = echoed.Sizes;
            echoed = echoed.MEDIUM;
            oscard['size'] = echoed;
            kiloes = output[kiloes];
            kiloes = result.bind(tangon)(kiloes);
            kiloes = kiloes.Colors;
            kiloes = kiloes.BRAND;
            oscard['color'] = kiloes;
            backup = function() { // Original name: onPress
                tangon = _closure2_slot1;
                zuuluu = _closure2_slot3;
                entity = undefined;
                zuuluu = tangon.bind(entity)(zuuluu);
                zuuluu = _closure2_slot5;
                michal = _closure2_slot0;
                michal = michal.id;
                michal = zuuluu.bind(entity)(michal);
                return entity;
            };
            oscard['onPress'] = backup;
            backup = output[foxtra];
            backup = sizing.bind(tangon)(backup);
            kiloes = backup.intl;
            backup = kiloes.string;
            foxtra = output[foxtra];
            foxtra = sizing.bind(tangon)(foxtra);
            foxtra = foxtra.t;
            foxtra = foxtra.olZgw8;
            foxtra = backup.bind(kiloes)(foxtra);
            oscard['text'] = foxtra;
            yankee = yankee.button;
            oscard['style'] = yankee;
            yankee = verify;
            if(verify) { _fun00002_ip = 691; continue _fun00001 }
 688:
            yankee = romeon;
 691:
            if(yankee) { _fun00002_ip = 697; continue _fun00001 }
 694:
            yankee = offset;
 697:
            oscard['disabled'] = yankee;
            if(verify) { _fun00002_ip = 707; continue _fun00001 }
 704:
            verify = offset;
 707:
            oscard['loading'] = verify;
            oscard = option.bind(tangon)(golfie, oscard);
            report[2] = oscard;
            entity['children'] = report;
            entity = zuuluu.bind(tangon)(michal, entity);
            return entity;
        }
    };
    zuuluu['default'] = michal;
    return entity;
})();