// app/modules/message_request/native/spam/SpamMessageHamActionSheet.tsx
export default (function(argFoo, argBar, argBaz, argCorge, _, argFred, argPlugh) {
    report = argBar;
    romeo = argBaz;
    zulu = argFred;
    oscar = argPlugh;
    var _closure1_slot0 = report;
    var _closure1_slot1 = romeo;
    var _closure1_slot2 = oscar;
    entity = global;
    options = entity.Object;
    golf = options.defineProperty;
    tango = {};
    entity = true;
    tango['value'] = entity;
    entity = '__esModule';
    entity = golf.bind(options)(zulu, entity, tango);
    offset = 0;
    tango = oscar[offset];
    entity = undefined;
    tango = romeo.bind(entity)(tango);
    var _closure1_slot3 = tango;
    tango = 1;
    golf = oscar[tango];
    tango = argCorge;
    tango = tango.bind(entity)(golf);
    var _closure1_slot4 = tango;
    tango = 2;
    tango = oscar[tango];
    tango = romeo.bind(entity)(tango);
    var _closure1_slot5 = tango;
    tango = 3;
    golf = oscar[tango];
    golf = report.bind(entity)(golf);
    golf = golf.jsx;
    var _closure1_slot6 = golf;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.jsxs;
    var _closure1_slot7 = tango;
    tango = 4;
    tango = oscar[tango];
    options = report.bind(entity)(tango);
    golf = options.createStyles;
    tango = {};
    verify = {};
    yankee = 5;
    yankee = oscar[yankee];
    yankee = romeo.bind(entity)(yankee);
    yankee = yankee.colors;
    yankee = yankee.BACKGROUND_SECONDARY;
    verify['backgroundColor'] = yankee;
    tango['header'] = verify;
    yankee = 24;
    verify = {'paddingVertical': 24, 'paddingHorizontal': 16};
    tango['container'] = verify;
    verify = {};
    verify['marginTop'] = yankee;
    tango['button'] = verify;
    verify = {};
    verify['paddingHorizontal'] = offset;
    tango['switch'] = verify;
    tango = golf.bind(options)(tango);
    var _closure1_slot8 = tango;
    tango = 17;
    tango = oscar[tango];
    oscar = report.bind(entity)(tango);
    report = oscar.fileFinishedImporting;
    tango = 'modules/message_request/native/spam/SpamMessageHamActionSheet.tsx';
    tango = report.bind(oscar)(tango);
    mike = function(argFoo) { // Original name: SpamMessageRequestHamActionSheet
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            entity = argFoo;
            mike = entity.channel;
            var _closure2_slot0 = mike;
            mike = entity.onConfirm;
            var _closure2_slot1 = mike;
            entity = entity.onCancel;
            var _closure2_slot2 = entity;
            update = function() { // Original name: handleClose
                mike = _closure2_slot2;
                entity = undefined;
                mike = mike.bind(entity)();
                return entity;
            };
            entity = _closure1_slot8;
            tango = undefined;
            yankee = entity.bind(tango)();
            zulu = _closure1_slot4;
            mike = zulu.useState;
            entity = false;
            zulu = mike.bind(zulu)(entity);
            mike = _closure1_slot3;
            entity = 2;
            mike = mike.bind(tango)(zulu, entity);
            entity = 0;
            result = mike[entity];
            var _closure2_slot3 = result;
            entity = 1;
            entity = mike[entity];
            var _closure2_slot4 = entity;
            sizing = _closure1_slot0;
            output = _closure1_slot2;
            entity = 6;
            entity = output[entity];
            report = sizing.bind(tango)(entity);
            zulu = report.useStateFromStores;
            entity = _closure1_slot5;
            mike = new Array(1);
            mike[0] = entity;
            entity = function() {
                zulu = _closure1_slot5;
                mike = zulu.getUser;
                tango = _closure2_slot0;
                entity = tango.getRecipientId;
                entity = entity.bind(tango)();
                entity = mike.bind(zulu)(entity);
                return entity;
            };
            report = zulu.bind(report)(mike, entity);
            entity = 7;
            entity = output[entity];
            zulu = sizing.bind(tango)(entity);
            mike = zulu.useMessageRequestActions;
            entity = {};
            entity['user'] = report;
            report = function() { // Original name: onError
                oscar = _closure1_slot1;
                golf = _closure1_slot2;
                entity = 8;
                mike = golf[entity];
                entity = undefined;
                tango = oscar.bind(entity)(mike);
                zulu = tango.open;
                mike = {};
                options = 'MESSAGE_REQUEST_REQUEST_ERROR_ALERT_TITLE';
                mike['key'] = options;
                offset = _closure1_slot0;
                report = 9;
                options = golf[report];
                options = offset.bind(entity)(options);
                verify = options.intl;
                options = verify.string;
                report = golf[report];
                report = offset.bind(entity)(report);
                report = report.t;
                report = report.EDYbS0;
                report = options.bind(verify)(report);
                mike['content'] = report;
                report = 10;
                report = golf[report];
                report = oscar.bind(entity)(report);
                mike['icon'] = report;
                mike = zulu.bind(tango)(mike);
                return entity;
            };
            entity['onError'] = report;
            report = function() { // Original name: onAcceptSuccess
                zulu = _closure1_slot1;
                mike = _closure1_slot2;
                entity = 11;
                mike = mike[entity];
                entity = undefined;
                zulu = zulu.bind(entity)(mike);
                mike = zulu.hideActionSheet;
                mike = mike.bind(zulu)();
                return entity;
            };
            entity['onAcceptSuccess'] = report;
            entity = mike.bind(zulu)(entity);
            mike = entity.acceptMessageRequest;
            var _closure2_slot5 = mike;
            verify = entity.isAcceptLoading;
            romeo = entity.isUserProfileLoading;
            offset = entity.isOptimisticAccepted;
            zulu = _closure1_slot7;
            entity = 12;
            entity = output[entity];
            entity = sizing.bind(tango)(entity);
            mike = entity.BottomSheet;
            entity = {};
            entity['onDismiss'] = update;
            options = _closure1_slot6;
            report = 13;
            report = output[report];
            report = sizing.bind(tango)(report);
            golf = report.BottomSheetTitleHeader;
            report = {};
            foxtrot = 9;
            kilo = output[foxtrot];
            kilo = sizing.bind(tango)(kilo);
            source = kilo.intl;
            echo = source.string;
            kilo = output[foxtrot];
            kilo = sizing.bind(tango)(kilo);
            kilo = kilo.t;
            kilo = kilo.9ty6yc;
            kilo = echo.bind(source)(kilo);
            report['title'] = kilo;
            kilo = 14;
            kilo = output[kilo];
            kilo = sizing.bind(tango)(kilo);
            echo = kilo.ActionSheetCloseButton;
            kilo = {};
            kilo['onPress'] = update;
            kilo = options.bind(tango)(echo, kilo);
            report['trailing'] = kilo;
            kilo = yankee.header;
            report['backgroundColor'] = kilo;
            golf = options.bind(tango)(golf, report);
            report = new Array(3);
            report[0] = golf;
            golf = 15;
            golf = output[golf];
            golf = sizing.bind(tango)(golf);
            kilo = golf.FormSwitchRow;
            golf = {};
            echo = yankee.switch;
            golf['style'] = echo;
            echo = output[foxtrot];
            echo = sizing.bind(tango)(echo);
            source = echo.intl;
            update = source.string;
            echo = output[foxtrot];
            echo = sizing.bind(tango)(echo);
            echo = echo.t;
            echo = echo.ZhGpNT;
            echo = update.bind(source)(echo);
            golf['label'] = echo;
            golf['value'] = result;
            result = {};
            echo = true;
            result['renderIosBackground'] = echo;
            golf['switchProps'] = result;
            result = function(argFoo) { // Original name: onValueChange
                zulu = _closure2_slot4;
                mike = undefined;
                entity = argFoo;
                entity = zulu.bind(mike)(entity);
                return entity;
            };
            golf['onValueChange'] = result;
            golf = options.bind(tango)(kilo, golf);
            report[1] = golf;
            result = _closure1_slot1;
            kilo = 16;
            oscar = output[kilo];
            golf = result.bind(tango)(oscar);
            oscar = {};
            echo = output[kilo];
            echo = result.bind(tango)(echo);
            echo = echo.Looks;
            echo = echo.FILLED;
            oscar['look'] = echo;
            echo = output[kilo];
            echo = result.bind(tango)(echo);
            echo = echo.Sizes;
            echo = echo.MEDIUM;
            oscar['size'] = echo;
            kilo = output[kilo];
            kilo = result.bind(tango)(kilo);
            kilo = kilo.Colors;
            kilo = kilo.BRAND;
            oscar['color'] = kilo;
            backup = function() { // Original name: onPress
                tango = _closure2_slot1;
                zulu = _closure2_slot3;
                entity = undefined;
                zulu = tango.bind(entity)(zulu);
                zulu = _closure2_slot5;
                mike = _closure2_slot0;
                mike = mike.id;
                mike = zulu.bind(entity)(mike);
                return entity;
            };
            oscar['onPress'] = backup;
            backup = output[foxtrot];
            backup = sizing.bind(tango)(backup);
            kilo = backup.intl;
            backup = kilo.string;
            foxtrot = output[foxtrot];
            foxtrot = sizing.bind(tango)(foxtrot);
            foxtrot = foxtrot.t;
            foxtrot = foxtrot.olZgw8;
            foxtrot = backup.bind(kilo)(foxtrot);
            oscar['text'] = foxtrot;
            yankee = yankee.button;
            oscar['style'] = yankee;
            yankee = verify;
            if(verify) { _fun00002_ip = 691; continue _fun00001 }
 688:
            yankee = romeo;
 691:
            if(yankee) { _fun00002_ip = 697; continue _fun00001 }
 694:
            yankee = offset;
 697:
            oscar['disabled'] = yankee;
            if(verify) { _fun00002_ip = 707; continue _fun00001 }
 704:
            verify = offset;
 707:
            oscar['loading'] = verify;
            oscar = options.bind(tango)(golf, oscar);
            report[2] = oscar;
            entity['children'] = report;
            entity = zulu.bind(tango)(mike, entity);
            return entity;
        }
    };
    zulu['default'] = mike;
    return entity;
})();