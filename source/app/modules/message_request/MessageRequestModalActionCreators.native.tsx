// app/modules/message_request/MessageRequestModalActionCreators.native.tsx
export default (function(argFoo, argBar, argBaz, _, __, argFred, argPlugh) {
    report = argBar;
    zulu = argFred;
    oscar = argPlugh;
    var _closure1_slot0 = report;
    entity = argBaz;
    var _closure1_slot1 = entity;
    var _closure1_slot2 = oscar;
    entity = global;
    options = entity.Object;
    golf = options.defineProperty;
    tango = {};
    entity = true;
    tango['value'] = entity;
    entity = '__esModule';
    entity = golf.bind(options)(zulu, entity, tango);
    entity = 0;
    tango = oscar[entity];
    entity = undefined;
    tango = report.bind(entity)(tango);
    tango = tango.MESSAGE_REQUEST_ACCEPT_CONFIRMATION_MODAL;
    var _closure1_slot3 = tango;
    tango = 1;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.AnalyticEvents;
    var _closure1_slot4 = tango;
    tango = 9;
    tango = oscar[tango];
    oscar = report.bind(entity)(tango);
    report = oscar.fileFinishedImporting;
    tango = 'modules/message_request/MessageRequestModalActionCreators.native.tsx';
    tango = report.bind(oscar)(tango);
    tango = function(argFoo) { // Original name: openAcceptMessageRequestConfirmModal
        entity = argFoo;
        yankee = entity.channelId;
        options = entity.onConfirm;
        report = entity.onCancel;
        oscar = _closure1_slot1;
        golf = _closure1_slot2;
        entity = 2;
        mike = golf[entity];
        entity = undefined;
        offset = oscar.bind(entity)(mike);
        tango = offset.track;
        mike = _closure1_slot4;
        zulu = mike.OPEN_MODAL;
        mike = {};
        romeo = _closure1_slot3;
        mike['type'] = romeo;
        mike['channel_id'] = yankee;
        mike = tango.bind(offset)(zulu, mike);
        mike = 3;
        mike = golf[mike];
        tango = oscar.bind(entity)(mike);
        zulu = tango.show;
        mike = {};
        romeo = _closure1_slot0;
        verify = 4;
        offset = golf[verify];
        offset = romeo.bind(entity)(offset);
        foxtrot = offset.intl;
        yankee = foxtrot.string;
        offset = golf[verify];
        offset = romeo.bind(entity)(offset);
        offset = offset.t;
        offset = offset.66tnnp;
        offset = yankee.bind(foxtrot)(offset);
        mike['title'] = offset;
        offset = golf[verify];
        offset = romeo.bind(entity)(offset);
        foxtrot = offset.intl;
        yankee = foxtrot.string;
        offset = golf[verify];
        offset = romeo.bind(entity)(offset);
        offset = offset.t;
        offset = offset.c/k4SU;
        offset = yankee.bind(foxtrot)(offset);
        mike['body'] = offset;
        offset = golf[verify];
        offset = romeo.bind(entity)(offset);
        foxtrot = offset.intl;
        yankee = foxtrot.string;
        offset = golf[verify];
        offset = romeo.bind(entity)(offset);
        offset = offset.t;
        offset = offset.ETE/oK;
        offset = yankee.bind(foxtrot)(offset);
        mike['cancelText'] = offset;
        offset = golf[verify];
        offset = romeo.bind(entity)(offset);
        yankee = offset.intl;
        offset = yankee.string;
        verify = golf[verify];
        verify = romeo.bind(entity)(verify);
        verify = verify.t;
        verify = verify.cY+Ooa;
        verify = offset.bind(yankee)(verify);
        mike['confirmText'] = verify;
        mike['onConfirm'] = options;
        mike['onCancel'] = report;
        report = 5;
        report = golf[report];
        report = oscar.bind(entity)(report);
        report = report.Colors;
        report = report.BRAND;
        mike['confirmColor'] = report;
        mike = zulu.bind(tango)(mike);
        return entity;
    };
    zulu['openAcceptMessageRequestConfirmModal'] = tango;
    mike = function(argFoo) { // Original name: onMarkAsNotSpamConfirmationModal
        entity = argFoo;
        golf = entity.onConfirm;
        mike = entity.onCancel;
        options = entity.channel;
        oscar = _closure1_slot1;
        zulu = _closure1_slot2;
        entity = 6;
        report = zulu[entity];
        entity = undefined;
        oscar = oscar.bind(entity)(report);
        report = oscar.openLazy;
        verify = _closure1_slot0;
        tango = 8;
        tango = zulu[tango];
        verify = verify.bind(entity)(tango);
        tango = 7;
        tango = zulu[tango];
        zulu = zulu.paths;
        tango = verify.bind(entity)(tango, zulu);
        zulu = {};
        zulu['channel'] = options;
        zulu['onConfirm'] = golf;
        zulu['onCancel'] = mike;
        mike = 'SpamMessageHamActionSheet';
        mike = report.bind(oscar)(tango, mike, zulu);
        return entity;
    };
    zulu['onMarkAsNotSpamConfirmationModal'] = mike;
    return entity;
})();