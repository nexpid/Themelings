// app/modules/message_request/MessageRequestModalActionCreators.native.tsx
export default (function(argFoo, argBar, argBaz, _, __, argFre, argPlu) {
    report = argBar;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    entity = argBaz;
    var _closure1_slot1 = entity;
    var _closure1_slot2 = oscard;
    entity = global;
    option = entity.Object;
    golfie = option.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(option)(zuuluu, entity, tangon);
    entity = 0;
    tangon = oscard[entity];
    entity = undefined;
    tangon = report.bind(entity)(tangon);
    tangon = tangon.MESSAGE_REQUEST_ACCEPT_CONFIRMATION_MODAL;
    var _closure1_slot3 = tangon;
    tangon = 1;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.AnalyticEvents;
    var _closure1_slot4 = tangon;
    tangon = 9;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/message_request/MessageRequestModalActionCreators.native.tsx';
    tangon = report.bind(oscard)(tangon);
    tangon = function(argFoo) { // Original name: openAcceptMessageRequestConfirmModal
        entity = argFoo;
        yankee = entity.channelId;
        option = entity.onConfirm;
        report = entity.onCancel;
        oscard = _closure1_slot1;
        golfie = _closure1_slot2;
        entity = 2;
        michal = golfie[entity];
        entity = undefined;
        offset = oscard.bind(entity)(michal);
        tangon = offset.track;
        michal = _closure1_slot4;
        zuuluu = michal.OPEN_MODAL;
        michal = {};
        romeon = _closure1_slot3;
        michal['type'] = romeon;
        michal['channel_id'] = yankee;
        michal = tangon.bind(offset)(zuuluu, michal);
        michal = 3;
        michal = golfie[michal];
        tangon = oscard.bind(entity)(michal);
        zuuluu = tangon.show;
        michal = {};
        romeon = _closure1_slot0;
        verify = 4;
        offset = golfie[verify];
        offset = romeon.bind(entity)(offset);
        foxtra = offset.intl;
        yankee = foxtra.string;
        offset = golfie[verify];
        offset = romeon.bind(entity)(offset);
        offset = offset.t;
        offset = offset.66tnnp;
        offset = yankee.bind(foxtra)(offset);
        michal['title'] = offset;
        offset = golfie[verify];
        offset = romeon.bind(entity)(offset);
        foxtra = offset.intl;
        yankee = foxtra.string;
        offset = golfie[verify];
        offset = romeon.bind(entity)(offset);
        offset = offset.t;
        offset = offset.c/k4SU;
        offset = yankee.bind(foxtra)(offset);
        michal['body'] = offset;
        offset = golfie[verify];
        offset = romeon.bind(entity)(offset);
        foxtra = offset.intl;
        yankee = foxtra.string;
        offset = golfie[verify];
        offset = romeon.bind(entity)(offset);
        offset = offset.t;
        offset = offset.ETE/oK;
        offset = yankee.bind(foxtra)(offset);
        michal['cancelText'] = offset;
        offset = golfie[verify];
        offset = romeon.bind(entity)(offset);
        yankee = offset.intl;
        offset = yankee.string;
        verify = golfie[verify];
        verify = romeon.bind(entity)(verify);
        verify = verify.t;
        verify = verify.cY+Ooa;
        verify = offset.bind(yankee)(verify);
        michal['confirmText'] = verify;
        michal['onConfirm'] = option;
        michal['onCancel'] = report;
        report = 5;
        report = golfie[report];
        report = oscard.bind(entity)(report);
        report = report.Colors;
        report = report.BRAND;
        michal['confirmColor'] = report;
        michal = zuuluu.bind(tangon)(michal);
        return entity;
    };
    zuuluu['openAcceptMessageRequestConfirmModal'] = tangon;
    michal = function(argFoo) { // Original name: onMarkAsNotSpamConfirmationModal
        entity = argFoo;
        golfie = entity.onConfirm;
        michal = entity.onCancel;
        option = entity.channel;
        oscard = _closure1_slot1;
        zuuluu = _closure1_slot2;
        entity = 6;
        report = zuuluu[entity];
        entity = undefined;
        oscard = oscard.bind(entity)(report);
        report = oscard.openLazy;
        verify = _closure1_slot0;
        tangon = 8;
        tangon = zuuluu[tangon];
        verify = verify.bind(entity)(tangon);
        tangon = 7;
        tangon = zuuluu[tangon];
        zuuluu = zuuluu.paths;
        tangon = verify.bind(entity)(tangon, zuuluu);
        zuuluu = {};
        zuuluu['channel'] = option;
        zuuluu['onConfirm'] = golfie;
        zuuluu['onCancel'] = michal;
        michal = 'SpamMessageHamActionSheet';
        michal = report.bind(oscard)(tangon, michal, zuuluu);
        return entity;
    };
    zuuluu['onMarkAsNotSpamConfirmationModal'] = michal;
    return entity;
})();