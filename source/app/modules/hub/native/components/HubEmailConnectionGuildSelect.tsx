// app/modules/hub/native/components/HubEmailConnectionGuildSelect.tsx
export default (function(argFoo, argBar, argBaz, argCorge, _, argFred, argPlugh) {
    oscar = argBar;
    yankee = argBaz;
    zulu = argFred;
    golf = argPlugh;
    var _closure1_slot0 = oscar;
    var _closure1_slot1 = yankee;
    var _closure1_slot2 = golf;
    entity = global;
    options = entity.Object;
    report = options.defineProperty;
    mike = {};
    entity = true;
    mike['value'] = entity;
    entity = '__esModule';
    entity = report.bind(options)(zulu, entity, mike);
    romeo = 0;
    mike = golf[romeo];
    entity = undefined;
    mike = yankee.bind(entity)(mike);
    var _closure1_slot3 = mike;
    mike = 1;
    mike = golf[mike];
    mike = yankee.bind(entity)(mike);
    var _closure1_slot4 = mike;
    mike = 2;
    report = golf[mike];
    mike = argCorge;
    mike = mike.bind(entity)(report);
    var _closure1_slot5 = mike;
    mike = 3;
    mike = golf[mike];
    mike = oscar.bind(entity)(mike);
    report = mike.View;
    var _closure1_slot6 = report;
    mike = mike.FlatList;
    var _closure1_slot7 = mike;
    mike = 4;
    mike = golf[mike];
    mike = yankee.bind(entity)(mike);
    var _closure1_slot8 = mike;
    mike = 5;
    mike = golf[mike];
    mike = oscar.bind(entity)(mike);
    mike = mike.HubEmailConnectionSteps;
    var _closure1_slot9 = mike;
    mike = 6;
    mike = golf[mike];
    mike = oscar.bind(entity)(mike);
    foxtrot = mike.Fonts;
    mike = 7;
    report = golf[mike];
    report = oscar.bind(entity)(report);
    report = report.jsx;
    var _closure1_slot10 = report;
    mike = golf[mike];
    mike = oscar.bind(entity)(mike);
    mike = mike.jsxs;
    var _closure1_slot11 = mike;
    sizing = 8;
    mike = golf[sizing];
    options = oscar.bind(entity)(mike);
    report = options.createStyles;
    mike = {};
    kilo = 'center';
    verify = {'flex': 1, 'alignItems': 'center', 'justifyContent': 'center'};
    mike['loadingContainer'] = verify;
    verify = {'marginHorizontal': 16, 'borderRadius': null, 'padding': 12};
    backup = 16;
    offset = 9;
    output = golf[offset];
    output = yankee.bind(entity)(output);
    output = output.radii;
    output = output.sm;
    verify['borderRadius'] = output;
    output = golf[offset];
    output = yankee.bind(entity)(output);
    output = output.colors;
    output = output.BACKGROUND_SECONDARY_ALT;
    verify['backgroundColor'] = output;
    mike['rowContainer'] = verify;
    verify = {};
    output = golf[offset];
    output = yankee.bind(entity)(output);
    output = output.radii;
    output = output.sm;
    verify['borderRadius'] = output;
    mike['guildIcon'] = verify;
    verify = {};
    verify['height'] = sizing;
    mike['separator'] = verify;
    verify = {'padding': 16, 'alignItems': 'center', 'justifyContent': 'center'};
    mike['header'] = verify;
    verify = {'marginBottom': 8, 'textAlign': 'center'};
    mike['title'] = verify;
    verify = {};
    verify['marginLeft'] = sizing;
    mike['closeIcon'] = verify;
    verify = {'backgroundColor': null, 'position': 'absolute', 'bottom': 0, 'width': '100%'};
    sizing = golf[offset];
    sizing = yankee.bind(entity)(sizing);
    sizing = sizing.colors;
    sizing = sizing.BACKGROUND_PRIMARY;
    verify['backgroundColor'] = sizing;
    mike['footerSafeAreaContainer'] = verify;
    verify = {'paddingHorizontal': 16, 'height': 110, 'justifyContent': 'center', 'alignItems': 'center'};
    mike['footerContainer'] = verify;
    verify = {};
    sizing = 10;
    sizing = golf[sizing];
    result = yankee.bind(entity)(sizing);
    output = foxtrot.DISPLAY_SEMIBOLD;
    foxtrot = golf[offset];
    foxtrot = yankee.bind(entity)(foxtrot);
    foxtrot = foxtrot.colors;
    sizing = foxtrot.HEADER_PRIMARY;
    foxtrot = 20;
    update = result.bind(entity)(output, sizing, foxtrot);
    source = verify;
    foxtrot = copyDataProperties(source, update);
    foxtrot = 'alignSelf';
    verify[foxtrot] = kilo;
    foxtrot = 'textAlign';
    verify[foxtrot] = kilo;
    foxtrot = 'marginBottom';
    verify[foxtrot] = backup;
    mike['footerTitle'] = verify;
    verify = {};
    verify['flexGrow'] = romeo;
    romeo = golf[offset];
    romeo = yankee.bind(entity)(romeo);
    romeo = romeo.colors;
    romeo = romeo.BACKGROUND_ACCENT;
    verify['backgroundColor'] = romeo;
    mike['footerButton'] = verify;
    verify = {'color': null, 'alignSelf': 'center', 'fontSize': 14, 'marginVertical': 8};
    offset = golf[offset];
    offset = yankee.bind(entity)(offset);
    offset = offset.unsafe_rawColors;
    offset = offset.RED_400;
    verify['color'] = offset;
    mike['error'] = verify;
    mike = report.bind(options)(mike);
    var _closure1_slot12 = mike;
    mike = function(argFoo) { // Original name: HubEmailConnectionGuildSelectRow
        entity = argFoo;
        romeo = entity.guildInfo;
        verify = entity.signup;
        options = entity.loading;
        entity = _closure1_slot12;
        tango = undefined;
        yankee = entity.bind(tango)();
        zulu = _closure1_slot10;
        oscar = _closure1_slot0;
        golf = _closure1_slot2;
        report = 11;
        entity = golf[report];
        entity = oscar.bind(tango)(entity);
        mike = entity.FormRow;
        entity = {};
        entity['onPress'] = verify;
        entity['disabled'] = options;
        options = yankee.rowContainer;
        entity['DEPRECATED_style'] = options;
        options = romeo.name;
        entity['label'] = options;
        verify = _closure1_slot1;
        options = 12;
        options = golf[options];
        verify = verify.bind(tango)(options);
        options = {};
        yankee = yankee.guildIcon;
        options['style'] = yankee;
        offset = _closure1_slot8;
        yankee = offset.prototype;
        yankee = Object.create(yankee, {constructor: {value: offset}});
        kilo = yankee;
        backup = romeo;
        offset = new kilo[offset](backup, foxtrot);
        offset = offset instanceof Object ? offset : yankee;
        options['guild'] = offset;
        options = zulu.bind(tango)(verify, options);
        entity['leading'] = options;
        report = golf[report];
        report = oscar.bind(tango)(report);
        report = report.FormRow;
        oscar = report.Arrow;
        report = {};
        report = zulu.bind(tango)(oscar, report);
        entity['trailing'] = report;
        entity = zulu.bind(tango)(mike, entity);
        return entity;
    };
    var _closure1_slot13 = mike;
    report = function() { // Original name: HubEmailConnectionGuildSelectHeader
        entity = _closure1_slot12;
        tango = undefined;
        golf = entity.bind(tango)();
        zulu = _closure1_slot10;
        mike = _closure1_slot6;
        entity = {};
        oscar = golf.header;
        entity['style'] = oscar;
        offset = _closure1_slot0;
        yankee = _closure1_slot2;
        report = 13;
        report = yankee[report];
        report = offset.bind(tango)(report);
        oscar = report.Text;
        report = {'style': null, 'accessibilityRole': 'header', 'variant': 'heading-xl/extrabold', 'color': 'header-primary'};
        golf = golf.title;
        report['style'] = golf;
        golf = 14;
        options = yankee[golf];
        options = offset.bind(tango)(options);
        verify = options.intl;
        options = verify.string;
        golf = yankee[golf];
        golf = offset.bind(tango)(golf);
        golf = golf.t;
        golf = golf.mOMeiY;
        golf = options.bind(verify)(golf);
        report['children'] = golf;
        report = zulu.bind(tango)(oscar, report);
        entity['children'] = report;
        entity = zulu.bind(tango)(mike, entity);
        return entity;
    };
    var _closure1_slot14 = report;
    report = function(argFoo) { // Original name: HubEmailConnectionGuildSelectFooter
        _fun93767: for(var _fun93767_ip = 0; ; ) switch(_fun93767_ip) {
 0:
            entity = argFoo;
            backup = entity.errors;
            yankee = entity.loading;
            offset = entity.onFooterButtonPressed;
            entity = _closure1_slot12;
            tango = undefined;
            foxtrot = entity.bind(tango)();
            options = _closure1_slot1;
            output = _closure1_slot2;
            entity = 15;
            entity = output[entity];
            entity = options.bind(tango)(entity);
            entity = entity.bind(tango)();
            golf = entity.bottom;
            zulu = _closure1_slot10;
            mike = _closure1_slot6;
            entity = {};
            oscar = foxtrot.footerSafeAreaContainer;
            report = new Array(2);
            report[0] = oscar;
            oscar = {};
            oscar['paddingBottom'] = golf;
            report[1] = oscar;
            entity['style'] = report;
            oscar = _closure1_slot11;
            report = {};
            golf = foxtrot.footerContainer;
            report['style'] = golf;
            golf = 16;
            golf = output[golf];
            options = options.bind(tango)(golf);
            golf = {};
            golf['loading'] = yankee;
            yankee = foxtrot.footerButton;
            golf['style'] = yankee;
            sizing = _closure1_slot0;
            yankee = 14;
            romeo = output[yankee];
            romeo = sizing.bind(tango)(romeo);
            kilo = romeo.intl;
            romeo = kilo.string;
            yankee = output[yankee];
            yankee = sizing.bind(tango)(yankee);
            yankee = yankee.t;
            yankee = yankee.G3Zk7e;
            yankee = romeo.bind(kilo)(yankee);
            golf['text'] = yankee;
            golf['onPress'] = offset;
            options = zulu.bind(tango)(options, golf);
            golf = new Array(2);
            golf[0] = options;
            romeo = null;
            options = romeo != backup;
            if(!options) { _fun93767_ip = 299; continue _fun93767 }
 229:
            yankee = _closure1_slot10;
            offset = _closure1_slot0;
            kilo = _closure1_slot2;
            verify = 17;
            verify = kilo[verify];
            verify = offset.bind(tango)(verify);
            offset = verify.LegacyText;
            verify = {};
            foxtrot = foxtrot.error;
            verify['style'] = foxtrot;
            foxtrot = romeo == backup;
            romeo = undefined;
            if(foxtrot) { _fun93767_ip = 289; continue _fun93767 }
 279:
            foxtrot = backup.getAnyErrorMessage;
            romeo = foxtrot.bind(backup)();
 289:
            verify['children'] = romeo;
            options = yankee.bind(tango)(offset, verify);
 299:
            golf[1] = options;
            report['children'] = golf;
            report = oscar.bind(tango)(mike, report);
            entity['children'] = report;
            entity = zulu.bind(tango)(mike, entity);
            return entity;
        }
    };
    var _closure1_slot15 = report;
    report = 24;
    report = golf[report];
    golf = oscar.bind(entity)(report);
    oscar = golf.fileFinishedImporting;
    report = 'modules/hub/native/components/HubEmailConnectionGuildSelect.tsx';
    report = oscar.bind(golf)(report);
    tango = function(argFoo) { // Original name: HubEmailConnectionGuildSelect
        mike = argFoo;
        entity = mike.onClose;
        var _closure2_slot0 = entity;
        verify = mike.email;
        var _closure2_slot1 = verify;
        foxtrot = mike.guildsInfo;
        var _closure2_slot2 = foxtrot;
        mike = _closure1_slot12;
        tango = undefined;
        mike = mike.bind(tango)();
        var _closure2_slot3 = mike;
        mike = _closure1_slot0;
        report = _closure1_slot2;
        zulu = 18;
        zulu = report[zulu];
        golf = mike.bind(tango)(zulu);
        zulu = golf.useNavigation;
        options = zulu.bind(golf)();
        var _closure2_slot4 = options;
        sizing = _closure1_slot5;
        offset = sizing.useLayoutEffect;
        golf = new Array(4);
        golf[0] = verify;
        golf[1] = foxtrot;
        golf[2] = options;
        golf[3] = entity;
        zulu = function() {
            zulu = _closure2_slot4;
            mike = zulu.setOptions;
            entity = {};
            tango = function() { // Original name: headerRight
                tango = _closure1_slot10;
                mike = _closure1_slot0;
                golf = _closure1_slot2;
                entity = 19;
                entity = golf[entity];
                zulu = undefined;
                entity = mike.bind(zulu)(entity);
                mike = entity.HeaderActionButton;
                entity = {};
                oscar = _closure1_slot1;
                report = 20;
                report = golf[report];
                report = oscar.bind(zulu)(report);
                entity['source'] = report;
                report = function() { // Original name: onPress
                    tango = _closure2_slot4;
                    zulu = tango.push;
                    entity = _closure1_slot9;
                    mike = entity.SELECT_SCHOOL_SEARCH;
                    entity = {};
                    oscar = _closure2_slot1;
                    entity['email'] = oscar;
                    oscar = _closure2_slot0;
                    entity['onClose'] = oscar;
                    report = _closure2_slot2;
                    entity['guildsInfo'] = report;
                    entity = zulu.bind(tango)(mike, entity);
                    entity = undefined;
                    return entity;
                };
                entity['onPress'] = report;
                entity = tango.bind(zulu)(mike, entity);
                return entity;
            };
            entity['headerRight'] = tango;
            entity = mike.bind(zulu)(entity);
            entity = undefined;
            return entity;
        };
        zulu = offset.bind(sizing)(zulu, golf);
        golf = sizing.useCallback;
        zulu = new Array(3);
        zulu[0] = verify;
        zulu[1] = options;
        zulu[2] = entity;
        entity = function() {
            tango = _closure2_slot4;
            zulu = tango.push;
            entity = _closure1_slot9;
            mike = entity.SUBMIT_SCHOOL;
            entity = {};
            oscar = _closure2_slot1;
            entity['email'] = oscar;
            report = _closure2_slot0;
            entity['onClose'] = report;
            entity = zulu.bind(tango)(mike, entity);
            entity = undefined;
            return entity;
        };
        verify = golf.bind(sizing)(entity, zulu);
        zulu = _closure1_slot1;
        entity = 15;
        entity = report[entity];
        entity = zulu.bind(tango)(entity);
        entity = entity.bind(tango)();
        backup = entity.bottom;
        zulu = sizing.useState;
        entity = null;
        entity = zulu.bind(sizing)(entity);
        offset = _closure1_slot4;
        options = 2;
        entity = offset.bind(tango)(entity, options);
        golf = 0;
        yankee = entity[golf];
        zulu = 1;
        entity = entity[zulu];
        var _closure2_slot5 = entity;
        kilo = sizing.useState;
        entity = false;
        entity = kilo.bind(sizing)(entity);
        entity = offset.bind(tango)(entity, options);
        offset = entity[golf];
        var _closure2_slot6 = offset;
        entity = entity[zulu];
        var _closure2_slot7 = entity;
        zulu = _closure1_slot11;
        entity = 23;
        entity = report[entity];
        entity = mike.bind(tango)(entity);
        mike = entity.HubEmailConnectionScreen;
        entity = {};
        options = _closure1_slot10;
        golf = _closure1_slot7;
        report = {};
        report['data'] = foxtrot;
        foxtrot = function() { // Original name: ListHeaderComponent
            tango = _closure1_slot10;
            zulu = _closure1_slot14;
            mike = undefined;
            entity = {};
            entity = tango.bind(mike)(zulu, entity);
            return entity;
        };
        report['ListHeaderComponent'] = foxtrot;
        foxtrot = function(argFoo) { // Original name: renderItem
            entity = argFoo;
            oscar = entity.item;
            tango = _closure1_slot10;
            zulu = _closure1_slot13;
            mike = {};
            mike['guildInfo'] = oscar;
            oscar = oscar.id;
            var _closure3_slot0 = oscar;
            oscar = _closure1_slot3;
            entity = undefined;
            report = function* () {
                entity = function* () { // Original name: ?anon_0_
                    _fun93776: for(var _fun93776_ip = 0; ; ) switch(_fun93776_ip) {
 0:
                        StartGenerator();
                        ResumeGenerator(result_out_reg=0, return_bool_out_reg=1);
                        if(mike) { _fun93776_ip = 255; continue _fun93776 }
 10:
                        tango = _closure2_slot5;
                        report = undefined;
                        mike = null;
                        mike = tango.bind(report)(mike);
                        mike = _closure2_slot7;
                        offset = true;
                        mike = mike.bind(report)(offset);
 37: // try_start_0 // try_start_1
                        oscar = _closure1_slot1;
                        golf = _closure1_slot2;
                        mike = 21;
                        mike = golf[mike];
                        options = oscar.bind(report)(mike);
                        golf = options.sendVerificationEmail;
                        oscar = _closure2_slot1;
                        mike = _closure3_slot0;
                        mike = golf.bind(options)(oscar, offset, mike);
                        SaveGenerator(address=88);
 86:
                        return mike;
 88:
                        ResumeGenerator(result_out_reg=1, return_bool_out_reg=5);
                        if(oscar) { _fun93776_ip = 149; continue _fun93776 }
 94:
                        options = _closure2_slot4;
                        golf = options.push;
                        tango = _closure1_slot9;
                        oscar = tango.VERIFY_PIN;
                        tango = {};
                        offset = _closure2_slot1;
                        tango['email'] = offset;
                        offset = _closure2_slot0;
                        tango['onClose'] = offset;
                        verify = _closure3_slot0;
                        tango['guildId'] = verify;
                        tango = golf.bind(options)(oscar, tango);
 147: // try_end0
                        _fun93776_ip = 226; continue _fun93776;
 149: // try_end1
                        oscar = _closure2_slot7;
                        tango = false;
                        tango = oscar.bind(report)(tango);
                        return mike;
 163: // try_start_2 // catch_target0
                        CatchBlockStart(arg_register=6);
                        tango = _closure2_slot5;
                        oscar = _closure1_slot0;
                        options = _closure1_slot2;
                        mike = 22;
                        mike = options[mike];
                        mike = oscar.bind(report)(mike);
                        mike = mike.APIError;
                        oscar = mike.prototype;
                        oscar = Object.create(oscar, {constructor: {value: mike}});
                        backup = oscar;
                        foxtrot = golf;
                        mike = new backup[mike](foxtrot, romeo);
                        mike = mike instanceof Object ? mike : oscar;
                        mike = tango.bind(report)(mike);
 226: // try_end2
                        tango = _closure2_slot7;
                        mike = false;
                        mike = tango.bind(report)(mike);
                        return report;
 240: // catch_target1 // catch_target2
                        CatchBlockStart(arg_register=1);
                        tango = _closure2_slot7;
                        zulu = false;
                        zulu = tango.bind(report)(zulu);
                        throw mike;
 255:
                        return entity;
                    }
                };
                return entity;
            };
            report = oscar.bind(entity)(report);
            mike['signup'] = report;
            report = _closure2_slot6;
            mike['loading'] = report;
            entity = tango.bind(entity)(zulu, mike);
            return entity;
        };
        report['renderItem'] = foxtrot;
        romeo = function() { // Original name: ItemSeparatorComponent
            tango = _closure1_slot10;
            zulu = _closure1_slot6;
            mike = {};
            entity = _closure2_slot3;
            entity = entity.separator;
            mike['style'] = entity;
            entity = undefined;
            entity = tango.bind(entity)(zulu, mike);
            return entity;
        };
        report['ItemSeparatorComponent'] = romeo;
        romeo = {};
        foxtrot = 110;
        backup = foxtrot + backup;
        foxtrot = 8;
        foxtrot = backup + foxtrot;
        romeo['paddingBottom'] = foxtrot;
        report['contentContainerStyle'] = romeo;
        golf = options.bind(tango)(golf, report);
        report = new Array(2);
        report[0] = golf;
        golf = _closure1_slot15;
        oscar = {};
        oscar['errors'] = yankee;
        oscar['loading'] = offset;
        oscar['onFooterButtonPressed'] = verify;
        oscar = options.bind(tango)(golf, oscar);
        report[1] = oscar;
        entity['children'] = report;
        entity = zulu.bind(tango)(mike, entity);
        return entity;
    };
    zulu['default'] = tango;
    zulu['HubEmailConnectionGuildSelectRow'] = mike;
    return entity;
})();