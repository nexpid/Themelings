// app/modules/hub/native/components/HubEmailConnectionStudentPrompt.tsx
export default (function(argFoo, argBar, argBaz, argCorge, _, argFred, argPlugh) {
    report = argBar;
    romeo = argBaz;
    zulu = argFred;
    oscar = argPlugh;
    var _closure1_slot0 = report;
    var _closure1_slot1 = romeo;
    var _closure1_slot2 = oscar;
    entity = global;
    options = entity.Object;
    golf = options.defineProperty;
    tango = {};
    entity = true;
    tango['value'] = entity;
    entity = '__esModule';
    entity = golf.bind(options)(zulu, entity, tango);
    entity = 0;
    golf = oscar[entity];
    tango = argCorge;
    entity = undefined;
    tango = tango.bind(entity)(golf);
    tango = 1;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    golf = tango.View;
    var _closure1_slot3 = golf;
    tango = tango.Image;
    var _closure1_slot4 = tango;
    tango = 2;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.HubEmailConnectionSteps;
    var _closure1_slot5 = tango;
    tango = 3;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    yankee = tango.Fonts;
    tango = tango.AnalyticEvents;
    var _closure1_slot6 = tango;
    tango = 4;
    golf = oscar[tango];
    golf = report.bind(entity)(golf);
    golf = golf.jsx;
    var _closure1_slot7 = golf;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.jsxs;
    var _closure1_slot8 = tango;
    tango = 5;
    tango = oscar[tango];
    verify = report.bind(entity)(tango);
    options = verify.createStyles;
    golf = {};
    kilo = 'center';
    tango = 16;
    offset = {'display': 'flex', 'alignItems': 'center', 'justifyContent': 'center', 'padding': 16};
    golf['container'] = offset;
    offset = {};
    foxtrot = 6;
    foxtrot = oscar[foxtrot];
    output = romeo.bind(entity)(foxtrot);
    sizing = yankee.PRIMARY_BOLD;
    yankee = 7;
    foxtrot = oscar[yankee];
    foxtrot = romeo.bind(entity)(foxtrot);
    foxtrot = foxtrot.colors;
    foxtrot = foxtrot.HEADER_PRIMARY;
    backup = 24;
    echo = output.bind(entity)(sizing, foxtrot, backup);
    update = offset;
    foxtrot = copyDataProperties(update, echo);
    foxtrot = 'textAlign';
    offset[foxtrot] = kilo;
    foxtrot = 'marginBottom';
    offset[foxtrot] = backup;
    golf['header'] = offset;
    offset = {};
    foxtrot = oscar[yankee];
    foxtrot = romeo.bind(entity)(foxtrot);
    foxtrot = foxtrot.radii;
    foxtrot = foxtrot.sm;
    offset['borderRadius'] = foxtrot;
    foxtrot = 8;
    offset['marginBottom'] = foxtrot;
    yankee = oscar[yankee];
    yankee = romeo.bind(entity)(yankee);
    yankee = yankee.colors;
    yankee = yankee.BACKGROUND_SECONDARY;
    offset['backgroundColor'] = yankee;
    golf['row'] = offset;
    golf = options.bind(verify)(golf);
    var _closure1_slot9 = golf;
    tango = oscar[tango];
    oscar = report.bind(entity)(tango);
    report = oscar.fileFinishedImporting;
    tango = 'modules/hub/native/components/HubEmailConnectionStudentPrompt.tsx';
    tango = report.bind(oscar)(tango);
    mike = function(argFoo) { // Original name: HubEmailConnectionStudentPrompt
        entity = argFoo;
        yankee = entity.onClose;
        var _closure2_slot0 = yankee;
        entity = entity.invite;
        var _closure2_slot1 = entity;
        entity = _closure1_slot9;
        tango = undefined;
        output = entity.bind(tango)();
        kilo = _closure1_slot0;
        sizing = _closure1_slot2;
        entity = 8;
        entity = sizing[entity];
        mike = kilo.bind(tango)(entity);
        entity = mike.useNavigation;
        entity = entity.bind(mike)();
        var _closure2_slot2 = entity;
        zulu = _closure1_slot7;
        entity = 9;
        entity = sizing[entity];
        entity = kilo.bind(tango)(entity);
        mike = entity.HubEmailConnectionScreen;
        entity = {};
        golf = _closure1_slot8;
        oscar = _closure1_slot3;
        report = {};
        options = output.container;
        report['style'] = options;
        options = 10;
        options = sizing[options];
        options = kilo.bind(tango)(options);
        verify = options.LegacyText;
        options = {};
        offset = output.header;
        options['style'] = offset;
        romeo = 11;
        offset = sizing[romeo];
        offset = kilo.bind(tango)(offset);
        backup = offset.intl;
        foxtrot = backup.string;
        offset = sizing[romeo];
        offset = kilo.bind(tango)(offset);
        offset = offset.t;
        offset = offset.+/Pv0t;
        offset = foxtrot.bind(backup)(offset);
        options['children'] = offset;
        verify = zulu.bind(tango)(verify, options);
        options = new Array(3);
        options[0] = verify;
        backup = _closure1_slot1;
        foxtrot = 12;
        verify = sizing[foxtrot];
        offset = backup.bind(tango)(verify);
        verify = {};
        update = output.row;
        verify['DEPRECATED_style'] = update;
        result = _closure1_slot4;
        update = {};
        source = 13;
        source = sizing[source];
        source = backup.bind(tango)(source);
        update['source'] = source;
        update = zulu.bind(tango)(result, update);
        verify['leading'] = update;
        update = sizing[foxtrot];
        update = backup.bind(tango)(update);
        update = update.Arrow;
        verify['trailing'] = update;
        update = sizing[romeo];
        update = kilo.bind(tango)(update);
        control = update.intl;
        source = control.string;
        update = sizing[romeo];
        update = kilo.bind(tango)(update);
        update = update.t;
        update = update.a7a/Dw;
        update = source.bind(control)(update);
        verify['label'] = update;
        update = sizing[romeo];
        update = kilo.bind(tango)(update);
        control = update.intl;
        source = control.string;
        update = sizing[romeo];
        update = kilo.bind(tango)(update);
        update = update.t;
        update = update.Gsegk5;
        update = source.bind(control)(update);
        verify['subLabel'] = update;
        echo = function() { // Original name: onPress
            tango = _closure1_slot1;
            zulu = _closure1_slot2;
            entity = 14;
            zulu = zulu[entity];
            entity = undefined;
            report = tango.bind(entity)(zulu);
            tango = report.track;
            zulu = _closure1_slot6;
            zulu = zulu.HUB_STUDENT_PROMPT_CLICKED;
            zulu = tango.bind(report)(zulu);
            report = _closure2_slot2;
            tango = report.push;
            mike = _closure1_slot5;
            zulu = mike.VERIFY_EMAIL;
            mike = {};
            golf = _closure2_slot0;
            mike['onClose'] = golf;
            oscar = _closure2_slot1;
            mike['invite'] = oscar;
            mike = tango.bind(report)(zulu, mike);
            return entity;
        };
        verify['onPress'] = echo;
        verify = zulu.bind(tango)(offset, verify);
        options[1] = verify;
        verify = sizing[foxtrot];
        offset = backup.bind(tango)(verify);
        verify = {};
        output = output.row;
        verify['DEPRECATED_style'] = output;
        output = {};
        echo = 15;
        echo = sizing[echo];
        echo = backup.bind(tango)(echo);
        output['source'] = echo;
        output = zulu.bind(tango)(result, output);
        verify['leading'] = output;
        foxtrot = sizing[foxtrot];
        foxtrot = backup.bind(tango)(foxtrot);
        foxtrot = foxtrot.Arrow;
        verify['trailing'] = foxtrot;
        foxtrot = sizing[romeo];
        foxtrot = kilo.bind(tango)(foxtrot);
        backup = foxtrot.intl;
        foxtrot = backup.string;
        romeo = sizing[romeo];
        romeo = kilo.bind(tango)(romeo);
        romeo = romeo.t;
        romeo = romeo.GLG9n5;
        romeo = foxtrot.bind(backup)(romeo);
        verify['label'] = romeo;
        verify['onPress'] = yankee;
        verify = zulu.bind(tango)(offset, verify);
        options[2] = verify;
        report['children'] = options;
        report = golf.bind(tango)(oscar, report);
        entity['children'] = report;
        entity = zulu.bind(tango)(mike, entity);
        return entity;
    };
    zulu['default'] = mike;
    return entity;
})();