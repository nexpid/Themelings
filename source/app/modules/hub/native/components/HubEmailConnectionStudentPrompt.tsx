// app/modules/hub/native/components/HubEmailConnectionStudentPrompt.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    report = argBar;
    romeon = argBaz;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    var _closure1_slot1 = romeon;
    var _closure1_slot2 = oscard;
    entity = global;
    option = entity.Object;
    golfie = option.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(option)(zuuluu, entity, tangon);
    entity = 0;
    golfie = oscard[entity];
    tangon = argCor;
    entity = undefined;
    tangon = tangon.bind(entity)(golfie);
    tangon = 1;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    golfie = tangon.View;
    var _closure1_slot3 = golfie;
    tangon = tangon.Image;
    var _closure1_slot4 = tangon;
    tangon = 2;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.HubEmailConnectionSteps;
    var _closure1_slot5 = tangon;
    tangon = 3;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    yankee = tangon.Fonts;
    tangon = tangon.AnalyticEvents;
    var _closure1_slot6 = tangon;
    tangon = 4;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    golfie = tangon.jsx;
    var _closure1_slot7 = golfie;
    tangon = tangon.jsxs;
    var _closure1_slot8 = tangon;
    tangon = 5;
    tangon = oscard[tangon];
    verify = report.bind(entity)(tangon);
    option = verify.createStyles;
    golfie = {};
    kiloes = 'center';
    tangon = 16;
    offset = {'display': 'flex', 'alignItems': 'center', 'justifyContent': 'center', 'padding': 16};
    golfie['container'] = offset;
    offset = {};
    foxtra = 6;
    foxtra = oscard[foxtra];
    output = romeon.bind(entity)(foxtra);
    sizing = yankee.PRIMARY_BOLD;
    yankee = 7;
    foxtra = oscard[yankee];
    foxtra = romeon.bind(entity)(foxtra);
    foxtra = foxtra.colors;
    foxtra = foxtra.HEADER_PRIMARY;
    backup = 24;
    echoed = output.bind(entity)(sizing, foxtra, backup);
    update = offset;
    foxtra = copyDataProperties(update, echoed);
    foxtra = 'textAlign';
    offset[foxtra] = kiloes;
    foxtra = 'marginBottom';
    offset[foxtra] = backup;
    golfie['header'] = offset;
    offset = {};
    foxtra = oscard[yankee];
    foxtra = romeon.bind(entity)(foxtra);
    foxtra = foxtra.radii;
    foxtra = foxtra.sm;
    offset['borderRadius'] = foxtra;
    foxtra = 8;
    offset['marginBottom'] = foxtra;
    yankee = oscard[yankee];
    yankee = romeon.bind(entity)(yankee);
    yankee = yankee.colors;
    yankee = yankee.BACKGROUND_SECONDARY;
    offset['backgroundColor'] = yankee;
    golfie['row'] = offset;
    golfie = option.bind(verify)(golfie);
    var _closure1_slot9 = golfie;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/hub/native/components/HubEmailConnectionStudentPrompt.tsx';
    tangon = report.bind(oscard)(tangon);
    michal = function(argFoo) { // Original name: HubEmailConnectionStudentPrompt
        entity = argFoo;
        yankee = entity.onClose;
        var _closure2_slot0 = yankee;
        entity = entity.invite;
        var _closure2_slot1 = entity;
        entity = _closure1_slot9;
        tangon = undefined;
        output = entity.bind(tangon)();
        kiloes = _closure1_slot0;
        sizing = _closure1_slot2;
        entity = 8;
        entity = sizing[entity];
        michal = kiloes.bind(tangon)(entity);
        entity = michal.useNavigation;
        entity = entity.bind(michal)();
        var _closure2_slot2 = entity;
        zuuluu = _closure1_slot7;
        entity = 9;
        entity = sizing[entity];
        entity = kiloes.bind(tangon)(entity);
        michal = entity.HubEmailConnectionScreen;
        entity = {};
        golfie = _closure1_slot8;
        oscard = _closure1_slot3;
        report = {};
        option = output.container;
        report['style'] = option;
        option = 10;
        option = sizing[option];
        option = kiloes.bind(tangon)(option);
        verify = option.LegacyText;
        option = {};
        offset = output.header;
        option['style'] = offset;
        romeon = 11;
        offset = sizing[romeon];
        offset = kiloes.bind(tangon)(offset);
        backup = offset.intl;
        foxtra = backup.string;
        offset = sizing[romeon];
        offset = kiloes.bind(tangon)(offset);
        offset = offset.t;
        offset = offset.+/Pv0t;
        offset = foxtra.bind(backup)(offset);
        option['children'] = offset;
        verify = zuuluu.bind(tangon)(verify, option);
        option = new Array(3);
        option[0] = verify;
        backup = _closure1_slot1;
        foxtra = 12;
        verify = sizing[foxtra];
        offset = backup.bind(tangon)(verify);
        verify = {};
        update = output.row;
        verify['DEPRECATED_style'] = update;
        result = _closure1_slot4;
        update = {};
        source = 13;
        source = sizing[source];
        source = backup.bind(tangon)(source);
        update['source'] = source;
        update = zuuluu.bind(tangon)(result, update);
        verify['leading'] = update;
        update = sizing[foxtra];
        update = backup.bind(tangon)(update);
        update = update.Arrow;
        verify['trailing'] = update;
        update = sizing[romeon];
        update = kiloes.bind(tangon)(update);
        ctrled = update.intl;
        source = ctrled.string;
        update = sizing[romeon];
        update = kiloes.bind(tangon)(update);
        update = update.t;
        update = update.a7a/Dw;
        update = source.bind(ctrled)(update);
        verify['label'] = update;
        update = sizing[romeon];
        update = kiloes.bind(tangon)(update);
        ctrled = update.intl;
        source = ctrled.string;
        update = sizing[romeon];
        update = kiloes.bind(tangon)(update);
        update = update.t;
        update = update.Gsegk5;
        update = source.bind(ctrled)(update);
        verify['subLabel'] = update;
        echoed = function() { // Original name: onPress
            tangon = _closure1_slot1;
            zuuluu = _closure1_slot2;
            entity = 14;
            zuuluu = zuuluu[entity];
            entity = undefined;
            report = tangon.bind(entity)(zuuluu);
            tangon = report.track;
            zuuluu = _closure1_slot6;
            zuuluu = zuuluu.HUB_STUDENT_PROMPT_CLICKED;
            zuuluu = tangon.bind(report)(zuuluu);
            report = _closure2_slot2;
            tangon = report.push;
            michal = _closure1_slot5;
            zuuluu = michal.VERIFY_EMAIL;
            michal = {};
            golfie = _closure2_slot0;
            michal['onClose'] = golfie;
            oscard = _closure2_slot1;
            michal['invite'] = oscard;
            michal = tangon.bind(report)(zuuluu, michal);
            return entity;
        };
        verify['onPress'] = echoed;
        verify = zuuluu.bind(tangon)(offset, verify);
        option[1] = verify;
        verify = sizing[foxtra];
        offset = backup.bind(tangon)(verify);
        verify = {};
        output = output.row;
        verify['DEPRECATED_style'] = output;
        output = {};
        echoed = 15;
        echoed = sizing[echoed];
        echoed = backup.bind(tangon)(echoed);
        output['source'] = echoed;
        output = zuuluu.bind(tangon)(result, output);
        verify['leading'] = output;
        foxtra = sizing[foxtra];
        foxtra = backup.bind(tangon)(foxtra);
        foxtra = foxtra.Arrow;
        verify['trailing'] = foxtra;
        foxtra = sizing[romeon];
        foxtra = kiloes.bind(tangon)(foxtra);
        backup = foxtra.intl;
        foxtra = backup.string;
        romeon = sizing[romeon];
        romeon = kiloes.bind(tangon)(romeon);
        romeon = romeon.t;
        romeon = romeon.GLG9n5;
        romeon = foxtra.bind(backup)(romeon);
        verify['label'] = romeon;
        verify['onPress'] = yankee;
        verify = zuuluu.bind(tangon)(offset, verify);
        option[2] = verify;
        report['children'] = option;
        report = golfie.bind(tangon)(oscard, report);
        entity['children'] = report;
        entity = zuuluu.bind(tangon)(michal, entity);
        return entity;
    };
    zuuluu['default'] = michal;
    return entity;
})();