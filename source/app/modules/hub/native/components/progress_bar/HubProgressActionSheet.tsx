// app/modules/hub/native/components/progress_bar/HubProgressActionSheet.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    report = argBar;
    golfie = argBaz;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    var _closure1_slot1 = golfie;
    var _closure1_slot2 = oscard;
    entity = function() { // Original name: dismissActionSheet
        tangon = _closure1_slot1;
        zuuluu = _closure1_slot2;
        entity = 8;
        zuuluu = zuuluu[entity];
        entity = undefined;
        tangon = tangon.bind(entity)(zuuluu);
        zuuluu = tangon.hideActionSheet;
        michal = _closure1_slot6;
        michal = zuuluu.bind(tangon)(michal);
        return entity;
    };
    var _closure1_slot17 = entity;
    entity = global;
    verify = entity.Object;
    option = verify.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = option.bind(verify)(zuuluu, entity, tangon);
    entity = 0;
    option = oscard[entity];
    tangon = argCor;
    entity = undefined;
    tangon = tangon.bind(entity)(option);
    var _closure1_slot3 = tangon;
    tangon = 1;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.View;
    var _closure1_slot4 = tangon;
    tangon = 2;
    tangon = oscard[tangon];
    tangon = golfie.bind(entity)(tangon);
    var _closure1_slot5 = tangon;
    tangon = 3;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    golfie = tangon.HUB_PROGRESS_ACTION_SHEET_ID;
    var _closure1_slot6 = golfie;
    tangon = tangon.HUB_PROGRESS_NUM_TOTAL_STEPS;
    var _closure1_slot7 = tangon;
    tangon = 4;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    golfie = tangon.AnalyticEvents;
    var _closure1_slot8 = golfie;
    golfie = tangon.AnalyticsLocations;
    var _closure1_slot9 = golfie;
    tangon = tangon.Routes;
    var _closure1_slot10 = tangon;
    tangon = 5;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.DirectoryChannelScrollBehavior;
    var _closure1_slot11 = tangon;
    tangon = 6;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    golfie = tangon.AnalyticsActions;
    var _closure1_slot12 = golfie;
    tangon = tangon.AnalyticsSetupTypes;
    var _closure1_slot13 = tangon;
    tangon = 7;
    golfie = oscard[tangon];
    golfie = report.bind(entity)(golfie);
    golfie = golfie.jsx;
    var _closure1_slot14 = golfie;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.jsxs;
    var _closure1_slot15 = tangon;
    tangon = 9;
    tangon = oscard[tangon];
    option = report.bind(entity)(tangon);
    golfie = option.createStyles;
    tangon = {};
    verify = {};
    offset = 16;
    verify['padding'] = offset;
    tangon['container'] = verify;
    verify = {'marginTop': 12, 'display': 'flex', 'alignItems': 'center'};
    tangon['footer'] = verify;
    tangon = golfie.bind(option)(tangon);
    var _closure1_slot16 = tangon;
    tangon = 28;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/hub/native/components/progress_bar/HubProgressActionSheet.tsx';
    tangon = report.bind(oscard)(tangon);
    michal = function(argFoo) { // Original name: HubProgressActionSheet
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            entity = argFoo;
            michal = entity.guild;
            var _closure2_slot0 = michal;
            report = entity.analyticsSource;
            var _closure2_slot1 = report;
            tangon = undefined;
            var _closure2_slot3 = tangon;
            foxtra = function() { // Original name: handleFinishPress
                tangon = _closure1_slot1;
                oscard = _closure1_slot2;
                entity = 12;
                zuuluu = oscard[entity];
                entity = undefined;
                option = tangon.bind(entity)(zuuluu);
                golfie = option.track;
                zuuluu = _closure1_slot8;
                report = zuuluu.SERVER_SETUP_CTA_CLICKED;
                tangon = {};
                zuuluu = _closure1_slot13;
                zuuluu = zuuluu.HUB_PROGRESS;
                tangon['setup_type'] = zuuluu;
                zuuluu = _closure1_slot12;
                zuuluu = zuuluu.DISMISS;
                tangon['action'] = zuuluu;
                zuuluu = _closure1_slot7;
                tangon['num_total_actions'] = zuuluu;
                verify = _closure2_slot3;
                tangon['num_actions_completed'] = verify;
                tangon = golfie.bind(option)(report, tangon);
                report = _closure1_slot0;
                tangon = 13;
                tangon = oscard[tangon];
                report = report.bind(entity)(tangon);
                tangon = report.skipHubProgress;
                zuuluu = _closure2_slot0;
                zuuluu = zuuluu.id;
                zuuluu = tangon.bind(report)(zuuluu);
                michal = _closure1_slot17;
                michal = michal.bind(entity)();
                return entity;
            };
            zuuluu = _closure1_slot16;
            offset = zuuluu.bind(tangon)();
            oscard = _closure1_slot0;
            golfie = _closure1_slot2;
            zuuluu = 10;
            zuuluu = golfie[zuuluu];
            option = oscard.bind(tangon)(zuuluu);
            zuuluu = option.useHubProgressBarCompletedSteps;
            output = zuuluu.bind(option)(michal);
            var _closure2_slot2 = output;
            ctrled = output.size;
            _closure2_slot3 = ctrled;
            zuuluu = global;
            verify = zuuluu.Math;
            option = verify.max;
            zuuluu = 11;
            zuuluu = golfie[zuuluu];
            zuuluu = oscard.bind(tangon)(zuuluu);
            golfie = zuuluu.MIN_PROGRESS_PERCENT;
            zuuluu = 100;
            yankee = zuuluu * ctrled;
            oscard = _closure1_slot7;
            oscard = yankee / oscard;
            yankee = option.bind(verify)(golfie, oscard);
            verify = zuuluu === yankee;
            oscard = _closure1_slot3;
            zuuluu = oscard.useRef;
            zuuluu = zuuluu.bind(oscard)(report);
            var _closure2_slot4 = zuuluu;
            report = oscard.useEffect;
            zuuluu = function() {
                michal = _closure2_slot4;
                entity = _closure2_slot1;
                michal['current'] = entity;
                entity = undefined;
                return entity;
            };
            zuuluu = report.bind(oscard)(zuuluu);
            report = oscard.useEffect;
            michal = michal.id;
            zuuluu = new Array(1);
            zuuluu[0] = michal;
            michal = function() {
                tangon = _closure1_slot1;
                zuuluu = _closure1_slot2;
                entity = 12;
                zuuluu = zuuluu[entity];
                entity = undefined;
                report = tangon.bind(entity)(zuuluu);
                tangon = report.track;
                michal = _closure1_slot8;
                zuuluu = michal.OPEN_MODAL;
                michal = {};
                oscard = 'Hub Progress Action Sheet';
                michal['type'] = oscard;
                golfie = _closure2_slot0;
                golfie = golfie.id;
                michal['guild_id'] = golfie;
                oscard = _closure2_slot4;
                oscard = oscard.current;
                michal['source'] = oscard;
                michal = tangon.bind(report)(zuuluu, michal);
                return entity;
            };
            michal = report.bind(oscard)(michal, zuuluu);
            oscard = _closure1_slot0;
            michal = _closure1_slot2;
            result = 14;
            zuuluu = michal[result];
            zuuluu = oscard.bind(tangon)(zuuluu);
            report = zuuluu.intl;
            zuuluu = report.string;
            michal = michal[result];
            michal = oscard.bind(tangon)(michal);
            michal = michal.t;
            if(verify) { _fun00002_ip = 276; continue _fun00001 }
 261:
            oscard = michal.hRVjpa;
            romeon = zuuluu.bind(report)(oscard);
            _fun00002_ip = 289; continue _fun00001;
 276:
            michal = michal.zQ4gGh;
            romeon = zuuluu.bind(report)(michal);
 289:
            report = _closure1_slot15;
            zuuluu = _closure1_slot4;
            michal = {};
            oscard = offset.container;
            michal['style'] = oscard;
            option = _closure1_slot14;
            echoed = _closure1_slot0;
            update = _closure1_slot2;
            oscard = 15;
            oscard = update[oscard];
            oscard = echoed.bind(tangon)(oscard);
            golfie = oscard.GuildProgressHeader;
            oscard = {};
            oscard['title'] = romeon;
            romeon = update[result];
            romeon = echoed.bind(tangon)(romeon);
            source = romeon.intl;
            kiloes = source.format;
            romeon = update[result];
            romeon = echoed.bind(tangon)(romeon);
            romeon = romeon.t;
            backup = romeon.l6iRLi;
            romeon = {};
            romeon['numFinished'] = ctrled;
            ctrled = _closure1_slot7;
            romeon['total'] = ctrled;
            ctrled = function(argFoo, argBar) { // Original name: stepsHook
                report = _closure1_slot14;
                michal = _closure1_slot0;
                zuuluu = _closure1_slot2;
                entity = 16;
                entity = zuuluu[entity];
                tangon = undefined;
                entity = michal.bind(tangon)(entity);
                zuuluu = entity.Text;
                michal = {'variant': 'text-sm/medium', 'color': 'header-primary'};
                entity = argFoo;
                michal['children'] = entity;
                entity = argBar;
                entity = report.bind(tangon)(zuuluu, michal, entity);
                return entity;
            };
            romeon['stepsHook'] = ctrled;
            romeon = kiloes.bind(source)(backup, romeon);
            oscard['subtitle'] = romeon;
            oscard['percentCompleted'] = yankee;
            golfie = option.bind(tangon)(golfie, oscard);
            oscard = new Array(5);
            oscard[0] = golfie;
            source = _closure1_slot1;
            golfie = 17;
            yankee = update[golfie];
            ctrled = source.bind(tangon)(yankee);
            yankee = {};
            romeon = function() { // Original name: onPress
                _fun00003: for(var _fun00004_ip = 0; ; ) switch(_fun00004_ip) {
 0:
                    report = _closure1_slot5;
                    tangon = report.getDefaultChannel;
                    michal = _closure2_slot0;
                    michal = michal.id;
                    michal = tangon.bind(report)(michal);
                    tangon = null;
                    if(!(tangon != michal)) { _fun00004_ip = 154; continue _fun00003 }
 36:
                    golfie = _closure1_slot0;
                    report = _closure1_slot2;
                    tangon = 18;
                    oscard = report[tangon];
                    tangon = undefined;
                    golfie = golfie.bind(tangon)(oscard);
                    oscard = golfie.transitionTo;
                    verify = _closure1_slot10;
                    option = verify.CHANNEL;
                    zuuluu = _closure2_slot0;
                    zuuluu = zuuluu.id;
                    michal = michal.id;
                    zuuluu = option.bind(verify)(zuuluu, michal);
                    michal = {};
                    option = {};
                    verify = _closure1_slot11;
                    verify = verify.GUILD_LIST_TOP;
                    option['scrollBehavior'] = verify;
                    michal['state'] = option;
                    michal = oscard.bind(golfie)(zuuluu, michal);
                    zuuluu = _closure1_slot1;
                    michal = 8;
                    michal = report[michal];
                    zuuluu = zuuluu.bind(tangon)(michal);
                    michal = zuuluu.hideActionSheet;
                    entity = _closure1_slot6;
                    entity = michal.bind(zuuluu)(entity);
 154:
                    entity = undefined;
                    return entity;
                }
            };
            yankee['onPress'] = romeon;
            romeon = 19;
            romeon = update[romeon];
            romeon = source.bind(tangon)(romeon);
            yankee['source'] = romeon;
            romeon = update[result];
            romeon = echoed.bind(tangon)(romeon);
            kiloes = romeon.intl;
            backup = kiloes.string;
            romeon = update[result];
            romeon = echoed.bind(tangon)(romeon);
            romeon = romeon.t;
            romeon = romeon.iNR25u;
            romeon = backup.bind(kiloes)(romeon);
            yankee['title'] = romeon;
            backup = output.has;
            kiloes = 20;
            romeon = update[kiloes];
            romeon = echoed.bind(tangon)(romeon);
            romeon = romeon.HubProgressStep;
            romeon = romeon.JOIN_GUILD;
            romeon = backup.bind(output)(romeon);
            yankee['isCompleted'] = romeon;
            backup = _closure1_slot13;
            romeon = backup.HUB_PROGRESS;
            yankee['analyticsSetupType'] = romeon;
            romeon = _closure1_slot12;
            vacuum = romeon.JOIN_GUILD;
            yankee['analyticsAction'] = vacuum;
            yankee = option.bind(tangon)(ctrled, yankee);
            oscard[1] = yankee;
            yankee = update[golfie];
            ctrled = source.bind(tangon)(yankee);
            yankee = {};
            vacuum = function() { // Original name: onPress
                _fun00005: for(var _fun00006_ip = 0; ; ) switch(_fun00006_ip) {
 0:
                    oscard = _closure1_slot5;
                    report = oscard.getDefaultChannel;
                    tangon = _closure2_slot0;
                    michal = tangon.id;
                    michal = report.bind(oscard)(michal);
                    report = oscard.getChannels;
                    tangon = tangon.id;
                    oscard = report.bind(oscard)(tangon);
                    report = null;
                    tangon = report != michal;
                    if(!tangon) { _fun00006_ip = 59; continue _fun00005 }
 55:
                    tangon = report != oscard;
 59:
                    if(!tangon) { _fun00006_ip = 119; continue _fun00005 }
 62:
                    golfie = _closure1_slot0;
                    report = _closure1_slot2;
                    tangon = 21;
                    report = report[tangon];
                    tangon = undefined;
                    report = golfie.bind(tangon)(report);
                    tangon = report.handleOpenInviteActionsheet;
                    yankee = _closure2_slot0;
                    offset = michal.id;
                    entity = _closure1_slot9;
                    option = entity.HUB_PROGRESS;
                    romeon = report;
                    verify = oscard;
                    entity = romeon[tangon](yankee, offset, verify, option, golfie);
 119:
                    entity = undefined;
                    return entity;
                }
            };
            yankee['onPress'] = vacuum;
            vacuum = 22;
            vacuum = update[vacuum];
            vacuum = source.bind(tangon)(vacuum);
            yankee['source'] = vacuum;
            vacuum = update[result];
            vacuum = echoed.bind(tangon)(vacuum);
            config = vacuum.intl;
            sequen = config.string;
            vacuum = update[result];
            vacuum = echoed.bind(tangon)(vacuum);
            vacuum = vacuum.t;
            vacuum = vacuum.3NlTYW;
            vacuum = sequen.bind(config)(vacuum);
            yankee['title'] = vacuum;
            sequen = output.has;
            vacuum = update[kiloes];
            vacuum = echoed.bind(tangon)(vacuum);
            vacuum = vacuum.HubProgressStep;
            vacuum = vacuum.INVITE_USER;
            vacuum = sequen.bind(output)(vacuum);
            yankee['isCompleted'] = vacuum;
            vacuum = backup.HUB_PROGRESS;
            yankee['analyticsSetupType'] = vacuum;
            vacuum = romeon.INVITE;
            yankee['analyticsAction'] = vacuum;
            yankee = option.bind(tangon)(ctrled, yankee);
            oscard[2] = yankee;
            golfie = update[golfie];
            yankee = source.bind(tangon)(golfie);
            golfie = {};
            sizing = function() { // Original name: onPress
                _fun00007: for(var _fun00008_ip = 0; ; ) switch(_fun00008_ip) {
 0:
                    report = _closure2_slot2;
                    tangon = report.has;
                    oscard = _closure1_slot0;
                    zuuluu = _closure1_slot2;
                    entity = 20;
                    zuuluu = zuuluu[entity];
                    entity = undefined;
                    zuuluu = oscard.bind(entity)(zuuluu);
                    zuuluu = zuuluu.HubProgressStep;
                    zuuluu = zuuluu.CONTACT_SYNC;
                    zuuluu = tangon.bind(report)(zuuluu);
                    if(zuuluu) { _fun00008_ip = 109; continue _fun00007 }
 57:
                    tangon = _closure1_slot0;
                    report = _closure1_slot2;
                    zuuluu = 23;
                    zuuluu = report[zuuluu];
                    oscard = tangon.bind(entity)(zuuluu);
                    report = oscard.openContactSyncModal;
                    zuuluu = _closure1_slot9;
                    tangon = zuuluu.HUB_PROGRESS;
                    zuuluu = {};
                    zuuluu = report.bind(oscard)(zuuluu, tangon);
                    michal = _closure1_slot17;
                    michal = michal.bind(entity)();
 109:
                    return entity;
                }
            };
            golfie['onPress'] = sizing;
            sizing = 24;
            sizing = update[sizing];
            sizing = source.bind(tangon)(sizing);
            golfie['source'] = sizing;
            sizing = update[result];
            sizing = echoed.bind(tangon)(sizing);
            ctrled = sizing.intl;
            source = ctrled.string;
            sizing = update[result];
            sizing = echoed.bind(tangon)(sizing);
            sizing = sizing.t;
            sizing = sizing.HFvFtb;
            sizing = source.bind(ctrled)(sizing);
            golfie['title'] = sizing;
            sizing = output.has;
            kiloes = update[kiloes];
            kiloes = echoed.bind(tangon)(kiloes);
            kiloes = kiloes.HubProgressStep;
            kiloes = kiloes.CONTACT_SYNC;
            kiloes = sizing.bind(output)(kiloes);
            golfie['isCompleted'] = kiloes;
            backup = backup.HUB_PROGRESS;
            golfie['analyticsSetupType'] = backup;
            romeon = romeon.CONTACT_SYNC;
            golfie['analyticsAction'] = romeon;
            golfie = option.bind(tangon)(yankee, golfie);
            oscard[3] = golfie;
            golfie = {};
            yankee = offset.footer;
            offset = new Array(1);
            offset[0] = yankee;
            golfie['style'] = offset;
            romeon = _closure1_slot14;
            if(verify) { _fun00002_ip = 1088; continue _fun00001 }
 951:
            echoed = _closure1_slot0;
            kiloes = _closure1_slot2;
            verify = 26;
            verify = kiloes[verify];
            verify = echoed.bind(tangon)(verify);
            offset = verify.PressableOpacity;
            verify = {};
            yankee = 'button';
            verify['accessibilityRole'] = yankee;
            verify['onPress'] = foxtra;
            yankee = 16;
            yankee = kiloes[yankee];
            yankee = echoed.bind(tangon)(yankee);
            backup = yankee.Text;
            yankee = {'variant': 'text-sm/medium', 'color': 'header-secondary'};
            sizing = kiloes[result];
            sizing = echoed.bind(tangon)(sizing);
            output = sizing.intl;
            sizing = output.string;
            kiloes = kiloes[result];
            kiloes = echoed.bind(tangon)(kiloes);
            kiloes = kiloes.t;
            kiloes = kiloes.9E36wc;
            kiloes = sizing.bind(output)(kiloes);
            yankee['children'] = kiloes;
            yankee = romeon.bind(tangon)(backup, yankee);
            verify['children'] = yankee;
            verify = romeon.bind(tangon)(offset, verify);
            _fun00002_ip = 1172; continue _fun00001;
 1088:
            yankee = _closure1_slot1;
            backup = _closure1_slot2;
            offset = 25;
            offset = backup[offset];
            yankee = yankee.bind(tangon)(offset);
            offset = {};
            output = _closure1_slot0;
            kiloes = backup[result];
            kiloes = output.bind(tangon)(kiloes);
            sizing = kiloes.intl;
            kiloes = sizing.string;
            backup = backup[result];
            backup = output.bind(tangon)(backup);
            backup = backup.t;
            backup = backup.0/5zho;
            backup = kiloes.bind(sizing)(backup);
            offset['text'] = backup;
            offset['onPress'] = foxtra;
            verify = romeon.bind(tangon)(yankee, offset);
 1172:
            golfie['children'] = verify;
            golfie = option.bind(tangon)(zuuluu, golfie);
            oscard[4] = golfie;
            michal['children'] = oscard;
            report = report.bind(tangon)(zuuluu, michal);
            zuuluu = _closure1_slot14;
            michal = _closure1_slot0;
            oscard = _closure1_slot2;
            entity = 27;
            entity = oscard[entity];
            entity = michal.bind(tangon)(entity);
            michal = entity.BottomSheet;
            entity = {};
            oscard = true;
            entity['startExpanded'] = oscard;
            entity['children'] = report;
            entity = zuuluu.bind(tangon)(michal, entity);
            return entity;
        }
    };
    zuuluu['default'] = michal;
    return entity;
})();