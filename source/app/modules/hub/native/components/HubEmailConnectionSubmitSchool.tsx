// app/modules/hub/native/components/HubEmailConnectionSubmitSchool.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    report = argBar;
    yankee = argBaz;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    var _closure1_slot1 = yankee;
    var _closure1_slot2 = oscard;
    entity = global;
    option = entity.Object;
    golfie = option.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(option)(zuuluu, entity, tangon);
    entity = 0;
    tangon = oscard[entity];
    entity = undefined;
    tangon = yankee.bind(entity)(tangon);
    var _closure1_slot3 = tangon;
    tangon = 1;
    tangon = oscard[tangon];
    tangon = yankee.bind(entity)(tangon);
    var _closure1_slot4 = tangon;
    romeon = 2;
    golfie = oscard[romeon];
    tangon = argCor;
    tangon = tangon.bind(entity)(golfie);
    var _closure1_slot5 = tangon;
    tangon = 3;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    golfie = tangon.View;
    var _closure1_slot6 = golfie;
    tangon = tangon.ScrollView;
    var _closure1_slot7 = tangon;
    tangon = 4;
    tangon = oscard[tangon];
    tangon = yankee.bind(entity)(tangon);
    var _closure1_slot8 = tangon;
    tangon = 5;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.HubEmailConnectionSteps;
    var _closure1_slot9 = tangon;
    tangon = 6;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    offset = tangon.Fonts;
    tangon = 7;
    golfie = oscard[tangon];
    golfie = report.bind(entity)(golfie);
    golfie = golfie.jsx;
    var _closure1_slot10 = golfie;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.jsxs;
    var _closure1_slot11 = tangon;
    foxtra = 8;
    tangon = oscard[foxtra];
    option = report.bind(entity)(tangon);
    golfie = option.createStyles;
    tangon = {};
    verify = {};
    backup = 16;
    verify['paddingHorizontal'] = backup;
    tangon['container'] = verify;
    verify = {'fontFamily': null, 'color': null, 'fontSize': 24, 'textAlign': 'center', 'marginBottom': 8};
    offset = offset.PRIMARY_BOLD;
    verify['fontFamily'] = offset;
    offset = 9;
    backup = oscard[offset];
    backup = yankee.bind(entity)(backup);
    backup = backup.colors;
    backup = backup.HEADER_PRIMARY;
    verify['color'] = backup;
    tangon['title'] = verify;
    verify = {'textAlign': 'center', 'marginBottom': 24};
    tangon['description'] = verify;
    verify = {};
    verify['flexGrow'] = romeon;
    tangon['scrollViewContainer'] = verify;
    verify = {};
    verify['marginBottom'] = foxtra;
    tangon['input'] = verify;
    verify = {};
    foxtra = oscard[offset];
    foxtra = yankee.bind(entity)(foxtra);
    foxtra = foxtra.radii;
    foxtra = foxtra.lg;
    verify['borderRadius'] = foxtra;
    tangon['redesignTextInput'] = verify;
    verify = {};
    verify['flexGrow'] = romeon;
    romeon = oscard[offset];
    romeon = yankee.bind(entity)(romeon);
    romeon = romeon.spacing;
    romeon = romeon.PX_24;
    verify['minHeight'] = romeon;
    tangon['redesignGrowSpacing'] = verify;
    verify = {};
    offset = oscard[offset];
    offset = yankee.bind(entity)(offset);
    offset = offset.spacing;
    offset = offset.PX_16;
    verify['paddingHorizontal'] = offset;
    tangon['redesignSubmit'] = verify;
    verify = {'flexGrow': 0, 'marginBottom': 8};
    tangon['submit'] = verify;
    tangon = golfie.bind(option)(tangon);
    var _closure1_slot12 = tangon;
    tangon = 22;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/hub/native/components/HubEmailConnectionSubmitSchool.tsx';
    tangon = report.bind(oscard)(tangon);
    michal = function(argFoo) { // Original name: HubEmailConnectionSubmitSchool
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            entity = argFoo;
            michal = entity.onClose;
            var _closure2_slot0 = michal;
            entity = entity.email;
            var _closure2_slot1 = entity;
            entity = _closure1_slot12;
            tangon = undefined;
            foxtra = entity.bind(tangon)();
            michal = _closure1_slot0;
            report = _closure1_slot2;
            entity = 10;
            entity = report[entity];
            zuuluu = michal.bind(tangon)(entity);
            entity = zuuluu.useNavigation;
            entity = entity.bind(zuuluu)();
            var _closure2_slot2 = entity;
            backup = _closure1_slot5;
            zuuluu = backup.useState;
            entity = false;
            entity = zuuluu.bind(backup)(entity);
            verify = _closure1_slot4;
            golfie = 2;
            entity = verify.bind(tangon)(entity, golfie);
            oscard = 0;
            sizing = entity[oscard];
            zuuluu = 1;
            entity = entity[zuuluu];
            var _closure2_slot3 = entity;
            entity = backup.useState;
            source = null;
            entity = entity.bind(backup)(source);
            entity = verify.bind(tangon)(entity, golfie);
            vacuum = entity[oscard];
            entity = entity[zuuluu];
            var _closure2_slot4 = entity;
            option = _closure1_slot1;
            entity = 11;
            entity = report[entity];
            entity = option.bind(tangon)(entity);
            entity = entity.bind(tangon)();
            offset = entity.bottom;
            entity = backup.useRef;
            option = entity.bind(backup)(source);
            var _closure2_slot5 = option;
            yankee = backup.useState;
            entity = '';
            entity = yankee.bind(backup)(entity);
            entity = verify.bind(tangon)(entity, golfie);
            record = entity[oscard];
            var _closure2_slot6 = record;
            ctrled = entity[zuuluu];
            entity = 12;
            entity = report[entity];
            golfie = michal.bind(tangon)(entity);
            oscard = golfie.useStateFromStores;
            entity = _closure1_slot8;
            zuuluu = new Array(1);
            zuuluu[0] = entity;
            entity = function() {
                entity = _closure1_slot8;
                entity = entity.keyboardOpen;
                return entity;
            };
            kiloes = oscard.bind(golfie)(zuuluu, entity);
            entity = function() {
                tangon = _closure1_slot3;
                zuuluu = undefined;
                michal = function* () {
                    entity = function* () { // Original name: ?anon_0_
                        _fun00003: for(var _fun00004_ip = 0; ; ) switch(_fun00004_ip) {
 0:
                            StartGenerator();
                            ResumeGenerator(result_out_reg=0, return_bool_out_reg=1);
                            if(michal) { _fun00004_ip = 243; continue _fun00003 }
 10:
                            tangon = _closure2_slot4;
                            report = undefined;
                            michal = null;
                            michal = tangon.bind(report)(michal);
 26: // try_start_0 // try_start_1
                            tangon = _closure2_slot3;
                            michal = true;
                            michal = tangon.bind(report)(michal);
                            oscard = _closure1_slot1;
                            golfie = _closure1_slot2;
                            michal = 13;
                            michal = golfie[michal];
                            option = oscard.bind(report)(michal);
                            golfie = option.signup;
                            oscard = _closure2_slot1;
                            michal = _closure2_slot6;
                            michal = golfie.bind(option)(oscard, michal);
                            SaveGenerator(address=84);
 82:
                            return michal;
 84:
                            ResumeGenerator(result_out_reg=1, return_bool_out_reg=5);
                            if(oscard) { _fun00004_ip = 137; continue _fun00003 }
 90:
                            option = _closure2_slot2;
                            golfie = option.push;
                            tangon = _closure1_slot9;
                            oscard = tangon.EMAIL_WAITLIST;
                            tangon = {};
                            verify = _closure2_slot6;
                            tangon['school'] = verify;
                            verify = _closure2_slot0;
                            tangon['onClose'] = verify;
                            tangon = golfie.bind(option)(oscard, tangon);
 135: // try_end0
                            _fun00004_ip = 214; continue _fun00003;
 137: // try_end1
                            oscard = _closure2_slot3;
                            tangon = false;
                            tangon = oscard.bind(report)(tangon);
                            return michal;
 151: // try_start_2 // catch_target0
                            CatchBlockStart(arg_register=6);
                            tangon = _closure2_slot4;
                            oscard = _closure1_slot0;
                            option = _closure1_slot2;
                            michal = 14;
                            michal = option[michal];
                            michal = oscard.bind(report)(michal);
                            michal = michal.APIError;
                            oscard = michal.prototype;
                            oscard = Object.create(oscard, {constructor: {value: michal}});
                            romeon = oscard;
                            yankee = golfie;
                            michal = new romeon[michal](yankee, offset);
                            michal = michal instanceof Object ? michal : oscard;
                            michal = tangon.bind(report)(michal);
 214: // try_end2
                            tangon = _closure2_slot3;
                            michal = false;
                            michal = tangon.bind(report)(michal);
                            return report;
 228: // catch_target1 // catch_target2
                            CatchBlockStart(arg_register=1);
                            tangon = _closure2_slot3;
                            zuuluu = false;
                            zuuluu = tangon.bind(report)(zuuluu);
                            throw michal;
 243:
                            return entity;
                        }
                    };
                    return entity;
                };
                michal = tangon.bind(zuuluu)(michal);
                var _closure3_slot0 = michal;
                entity = function() {
                    entity = undefined;
                    tangon = _closure3_slot0;
                    zuuluu = tangon.apply;
                    entity = arguments;
                    michal = entity;
                    entity = this;
                    entity = zuuluu.bind(tangon)(entity, michal);
                    return entity;
                };
                return entity;
            };
            backup = entity.bind(tangon)();
            zuuluu = _closure1_slot10;
            entity = 15;
            entity = report[entity];
            entity = michal.bind(tangon)(entity);
            michal = entity.HubEmailConnectionScreen;
            entity = {};
            golfie = _closure1_slot11;
            oscard = _closure1_slot7;
            report = {};
            report['ref'] = option;
            option = 'handled';
            report['keyboardShouldPersistTaps'] = option;
            verify = foxtra.scrollViewContainer;
            option = new Array(2);
            option[0] = verify;
            verify = {};
            output = _closure1_slot1;
            result = _closure1_slot2;
            yankee = 9;
            yankee = result[yankee];
            yankee = output.bind(tangon)(yankee);
            yankee = yankee.spacing;
            yankee = yankee.PX_16;
            if(kiloes) { _fun00002_ip = 375; continue _fun00001 }
 369:
            offset = offset + yankee;
            _fun00002_ip = 378; continue _fun00001;
 375:
            offset = yankee;
 378:
            verify['paddingBottom'] = offset;
            option[1] = verify;
            report['contentContainerStyle'] = option;
            offset = _closure1_slot11;
            verify = _closure1_slot6;
            option = {};
            yankee = foxtra.container;
            option['style'] = yankee;
            result = _closure1_slot10;
            sequen = _closure1_slot0;
            config = _closure1_slot2;
            yankee = 16;
            yankee = config[yankee];
            yankee = sequen.bind(tangon)(yankee);
            kiloes = yankee.LegacyText;
            yankee = {};
            output = foxtra.title;
            yankee['style'] = output;
            output = 'header';
            yankee['accessibilityRole'] = output;
            echoed = 17;
            output = config[echoed];
            output = sequen.bind(tangon)(output);
            papara = output.intl;
            cntext = papara.string;
            output = config[echoed];
            output = sequen.bind(tangon)(output);
            output = output.t;
            output = output.2FNWBA;
            output = cntext.bind(papara)(output);
            yankee['children'] = output;
            kiloes = result.bind(tangon)(kiloes, yankee);
            yankee = new Array(3);
            yankee[0] = kiloes;
            kiloes = 18;
            kiloes = config[kiloes];
            kiloes = sequen.bind(tangon)(kiloes);
            output = kiloes.Text;
            kiloes = {'style': null, 'variant': 'text-sm/medium', 'color': 'header-secondary'};
            cntext = foxtra.description;
            kiloes['style'] = cntext;
            cntext = config[echoed];
            cntext = sequen.bind(tangon)(cntext);
            target = cntext.intl;
            papara = target.string;
            cntext = config[echoed];
            cntext = sequen.bind(tangon)(cntext);
            cntext = cntext.t;
            cntext = cntext./4y6o6;
            cntext = papara.bind(target)(cntext);
            kiloes['children'] = cntext;
            kiloes = result.bind(tangon)(output, kiloes);
            yankee[1] = kiloes;
            output = _closure1_slot1;
            kiloes = 19;
            kiloes = config[kiloes];
            output = output.bind(tangon)(kiloes);
            kiloes = {};
            cntext = config[echoed];
            cntext = sequen.bind(tangon)(cntext);
            target = cntext.intl;
            papara = target.string;
            cntext = config[echoed];
            cntext = sequen.bind(tangon)(cntext);
            cntext = cntext.t;
            cntext = cntext.L+AfJi;
            cntext = papara.bind(target)(cntext);
            kiloes['label'] = cntext;
            cntext = config[echoed];
            cntext = sequen.bind(tangon)(cntext);
            target = cntext.intl;
            papara = target.string;
            cntext = config[echoed];
            cntext = sequen.bind(tangon)(cntext);
            cntext = cntext.t;
            cntext = cntext.Y1btJS;
            cntext = papara.bind(target)(cntext);
            kiloes['placeholder'] = cntext;
            kiloes['value'] = record;
            kiloes['onChangeText'] = ctrled;
            ctrled = foxtra.input;
            kiloes['style'] = ctrled;
            ctrled = foxtra.redesignTextInput;
            kiloes['textStyle'] = ctrled;
            ctrled = 20;
            ctrled = config[ctrled];
            ctrled = sequen.bind(tangon)(ctrled);
            ctrled = ctrled.ClearButtonVisibility;
            ctrled = ctrled.WITH_CONTENT;
            kiloes['clearButtonVisibility'] = ctrled;
            ctrled = source == vacuum;
            source = undefined;
            if(ctrled) { _fun00002_ip = 822; continue _fun00001 }
 812:
            ctrled = vacuum.getAnyErrorMessage;
            source = ctrled.bind(vacuum)();
 822:
            kiloes['error'] = source;
            source = function() { // Original name: onFocus
                entity = global;
                tangon = entity.setTimeout;
                entity = undefined;
                zuuluu = function() {
                    _fun00005: for(var _fun00006_ip = 0; ; ) switch(_fun00006_ip) {
 0:
                        entity = _closure2_slot5;
                        michal = entity.current;
                        entity = null;
                        if(!(entity != michal)) { _fun00006_ip = 28; continue _fun00005 }
 18:
                        entity = michal.scrollToEnd;
                        entity = entity.bind(michal)();
 28:
                        entity = undefined;
                        return entity;
                    }
                };
                michal = 100;
                michal = tangon.bind(entity)(zuuluu, michal);
                return entity;
            };
            kiloes['onFocus'] = source;
            update = function() { // Original name: onBlur
                entity = global;
                tangon = entity.setTimeout;
                entity = undefined;
                zuuluu = function() {
                    _fun00007: for(var _fun00008_ip = 0; ; ) switch(_fun00008_ip) {
 0:
                        entity = _closure2_slot5;
                        michal = entity.current;
                        entity = null;
                        if(!(entity != michal)) { _fun00008_ip = 28; continue _fun00007 }
 18:
                        entity = michal.scrollToEnd;
                        entity = entity.bind(michal)();
 28:
                        entity = undefined;
                        return entity;
                    }
                };
                michal = 100;
                michal = tangon.bind(entity)(zuuluu, michal);
                return entity;
            };
            kiloes['onBlur'] = update;
            kiloes = result.bind(tangon)(output, kiloes);
            yankee[2] = kiloes;
            option['children'] = yankee;
            verify = offset.bind(tangon)(verify, option);
            option = new Array(3);
            option[0] = verify;
            yankee = _closure1_slot10;
            offset = _closure1_slot6;
            verify = {};
            kiloes = foxtra.redesignGrowSpacing;
            verify['style'] = kiloes;
            verify = yankee.bind(tangon)(offset, verify);
            option[1] = verify;
            verify = {};
            foxtra = foxtra.redesignSubmit;
            verify['style'] = foxtra;
            result = _closure1_slot0;
            kiloes = _closure1_slot2;
            romeon = 21;
            romeon = kiloes[romeon];
            romeon = result.bind(tangon)(romeon);
            foxtra = romeon.Button;
            romeon = {};
            output = 'lg';
            romeon['size'] = output;
            romeon['loading'] = sizing;
            sizing = kiloes[echoed];
            sizing = result.bind(tangon)(sizing);
            output = sizing.intl;
            sizing = output.string;
            kiloes = kiloes[echoed];
            kiloes = result.bind(tangon)(kiloes);
            kiloes = kiloes.t;
            kiloes = kiloes.PDsYAg;
            kiloes = sizing.bind(output)(kiloes);
            romeon['text'] = kiloes;
            romeon['onPress'] = backup;
            romeon = yankee.bind(tangon)(foxtra, romeon);
            verify['children'] = romeon;
            verify = yankee.bind(tangon)(offset, verify);
            option[2] = verify;
            report['children'] = option;
            report = golfie.bind(tangon)(oscard, report);
            entity['children'] = report;
            entity = zuuluu.bind(tangon)(michal, entity);
            return entity;
        }
    };
    zuuluu['default'] = michal;
    return entity;
})();