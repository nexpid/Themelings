// app/modules/hub/native/components/HubEmailConnectionSubmitSchool.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    report = argBar;
    yankee = argBaz;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    var _closure1_slot1 = yankee;
    var _closure1_slot2 = oscard;
    entity = global;
    option = entity.Object;
    golfie = option.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(option)(zuuluu, entity, tangon);
    entity = 0;
    tangon = oscard[entity];
    entity = undefined;
    tangon = yankee.bind(entity)(tangon);
    var _closure1_slot3 = tangon;
    tangon = 1;
    tangon = oscard[tangon];
    tangon = yankee.bind(entity)(tangon);
    var _closure1_slot4 = tangon;
    romeon = 2;
    golfie = oscard[romeon];
    tangon = argCor;
    tangon = tangon.bind(entity)(golfie);
    var _closure1_slot5 = tangon;
    tangon = 3;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    golfie = tangon.View;
    var _closure1_slot6 = golfie;
    tangon = tangon.ScrollView;
    var _closure1_slot7 = tangon;
    tangon = 4;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.HubEmailConnectionSteps;
    var _closure1_slot8 = tangon;
    tangon = 5;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    offset = tangon.Fonts;
    tangon = 6;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    golfie = tangon.jsx;
    var _closure1_slot9 = golfie;
    tangon = tangon.jsxs;
    var _closure1_slot10 = tangon;
    tangon = 7;
    tangon = oscard[tangon];
    option = report.bind(entity)(tangon);
    golfie = option.createStyles;
    tangon = {};
    verify = {};
    foxtra = 16;
    verify['paddingHorizontal'] = foxtra;
    tangon['container'] = verify;
    verify = {'fontFamily': null, 'color': null, 'fontSize': 24, 'textAlign': 'center', 'marginBottom': 8};
    offset = offset.PRIMARY_BOLD;
    verify['fontFamily'] = offset;
    offset = 8;
    foxtra = oscard[offset];
    foxtra = yankee.bind(entity)(foxtra);
    foxtra = foxtra.colors;
    foxtra = foxtra.HEADER_PRIMARY;
    verify['color'] = foxtra;
    tangon['title'] = verify;
    verify = {'textAlign': 'center', 'marginBottom': 24};
    tangon['description'] = verify;
    verify = {};
    verify['flexGrow'] = romeon;
    tangon['scrollViewContainer'] = verify;
    verify = {};
    verify['marginBottom'] = offset;
    tangon['input'] = verify;
    verify = {};
    foxtra = oscard[offset];
    foxtra = yankee.bind(entity)(foxtra);
    foxtra = foxtra.radii;
    foxtra = foxtra.lg;
    verify['borderRadius'] = foxtra;
    tangon['redesignTextInput'] = verify;
    verify = {};
    verify['flexGrow'] = romeon;
    romeon = oscard[offset];
    romeon = yankee.bind(entity)(romeon);
    romeon = romeon.spacing;
    romeon = romeon.PX_24;
    verify['minHeight'] = romeon;
    tangon['redesignGrowSpacing'] = verify;
    verify = {};
    offset = oscard[offset];
    offset = yankee.bind(entity)(offset);
    offset = offset.spacing;
    offset = offset.PX_16;
    verify['paddingHorizontal'] = offset;
    tangon['redesignSubmit'] = verify;
    verify = {'flexGrow': 0, 'marginBottom': 8};
    tangon['submit'] = verify;
    tangon = golfie.bind(option)(tangon);
    var _closure1_slot11 = tangon;
    tangon = 20;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/hub/native/components/HubEmailConnectionSubmitSchool.tsx';
    tangon = report.bind(oscard)(tangon);
    michal = function(argFoo) { // Original name: HubEmailConnectionSubmitSchool
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            entity = argFoo;
            michal = entity.onClose;
            var _closure2_slot0 = michal;
            entity = entity.email;
            var _closure2_slot1 = entity;
            entity = _closure1_slot11;
            tangon = undefined;
            foxtra = entity.bind(tangon)();
            ctrled = _closure1_slot0;
            vacuum = _closure1_slot2;
            entity = 9;
            entity = vacuum[entity];
            michal = ctrled.bind(tangon)(entity);
            entity = michal.useNavigation;
            entity = entity.bind(michal)();
            var _closure2_slot2 = entity;
            verify = _closure1_slot5;
            michal = verify.useState;
            entity = false;
            entity = michal.bind(verify)(entity);
            oscard = _closure1_slot4;
            report = 2;
            entity = oscard.bind(tangon)(entity, report);
            zuuluu = 0;
            sizing = entity[zuuluu];
            michal = 1;
            entity = entity[michal];
            var _closure2_slot3 = entity;
            entity = verify.useState;
            result = null;
            entity = entity.bind(verify)(result);
            entity = oscard.bind(tangon)(entity, report);
            source = entity[zuuluu];
            entity = entity[michal];
            var _closure2_slot4 = entity;
            kiloes = _closure1_slot1;
            entity = 10;
            entity = vacuum[entity];
            entity = kiloes.bind(tangon)(entity);
            entity = entity.bind(tangon)();
            offset = entity.insets;
            entity = verify.useRef;
            option = entity.bind(verify)(result);
            var _closure2_slot5 = option;
            golfie = verify.useState;
            entity = '';
            entity = golfie.bind(verify)(entity);
            entity = oscard.bind(tangon)(entity, report);
            sequen = entity[zuuluu];
            var _closure2_slot6 = sequen;
            update = entity[michal];
            entity = function() {
                tangon = _closure1_slot3;
                zuuluu = undefined;
                michal = function* () {
                    entity = function* () { // Original name: ?anon_0_
                        _fun00003: for(var _fun00004_ip = 0; ; ) switch(_fun00004_ip) {
 0:
                            StartGenerator();
                            ResumeGenerator(result_out_reg=0, return_bool_out_reg=1);
                            if(michal) { _fun00004_ip = 243; continue _fun00003 }
 10:
                            tangon = _closure2_slot4;
                            report = undefined;
                            michal = null;
                            michal = tangon.bind(report)(michal);
 26: // try_start_0 // try_start_1
                            tangon = _closure2_slot3;
                            michal = true;
                            michal = tangon.bind(report)(michal);
                            oscard = _closure1_slot1;
                            golfie = _closure1_slot2;
                            michal = 11;
                            michal = golfie[michal];
                            option = oscard.bind(report)(michal);
                            golfie = option.signup;
                            oscard = _closure2_slot1;
                            michal = _closure2_slot6;
                            michal = golfie.bind(option)(oscard, michal);
                            SaveGenerator(address=84);
 82:
                            return michal;
 84:
                            ResumeGenerator(result_out_reg=1, return_bool_out_reg=5);
                            if(oscard) { _fun00004_ip = 137; continue _fun00003 }
 90:
                            option = _closure2_slot2;
                            golfie = option.push;
                            tangon = _closure1_slot8;
                            oscard = tangon.EMAIL_WAITLIST;
                            tangon = {};
                            verify = _closure2_slot6;
                            tangon['school'] = verify;
                            verify = _closure2_slot0;
                            tangon['onClose'] = verify;
                            tangon = golfie.bind(option)(oscard, tangon);
 135: // try_end0
                            _fun00004_ip = 214; continue _fun00003;
 137: // try_end1
                            oscard = _closure2_slot3;
                            tangon = false;
                            tangon = oscard.bind(report)(tangon);
                            return michal;
 151: // try_start_2 // catch_target0
                            CatchBlockStart(arg_register=6);
                            tangon = _closure2_slot4;
                            oscard = _closure1_slot0;
                            option = _closure1_slot2;
                            michal = 12;
                            michal = option[michal];
                            michal = oscard.bind(report)(michal);
                            michal = michal.APIError;
                            oscard = michal.prototype;
                            oscard = Object.create(oscard, {constructor: {value: michal}});
                            romeon = oscard;
                            yankee = golfie;
                            michal = new romeon[michal](yankee, offset);
                            michal = michal instanceof Object ? michal : oscard;
                            michal = tangon.bind(report)(michal);
 214: // try_end2
                            tangon = _closure2_slot3;
                            michal = false;
                            michal = tangon.bind(report)(michal);
                            return report;
 228: // catch_target1 // catch_target2
                            CatchBlockStart(arg_register=1);
                            tangon = _closure2_slot3;
                            zuuluu = false;
                            zuuluu = tangon.bind(report)(zuuluu);
                            throw michal;
 243:
                            return entity;
                        }
                    };
                    return entity;
                };
                michal = tangon.bind(zuuluu)(michal);
                var _closure3_slot0 = michal;
                entity = function() {
                    entity = undefined;
                    tangon = _closure3_slot0;
                    zuuluu = tangon.apply;
                    entity = arguments;
                    michal = entity;
                    entity = this;
                    entity = zuuluu.bind(tangon)(entity, michal);
                    return entity;
                };
                return entity;
            };
            backup = entity.bind(tangon)();
            zuuluu = _closure1_slot9;
            entity = 13;
            entity = vacuum[entity];
            entity = ctrled.bind(tangon)(entity);
            michal = entity.HubEmailConnectionScreen;
            entity = {};
            golfie = _closure1_slot10;
            oscard = _closure1_slot7;
            report = {};
            report['ref'] = option;
            verify = foxtra.scrollViewContainer;
            option = new Array(2);
            option[0] = verify;
            verify = {};
            yankee = offset.bottom;
            offset = 8;
            offset = vacuum[offset];
            offset = kiloes.bind(tangon)(offset);
            offset = offset.spacing;
            offset = offset.PX_16;
            offset = yankee + offset;
            verify['paddingBottom'] = offset;
            option[1] = verify;
            report['contentContainerStyle'] = option;
            verify = _closure1_slot6;
            option = {};
            offset = foxtra.container;
            option['style'] = offset;
            offset = 14;
            offset = vacuum[offset];
            offset = ctrled.bind(tangon)(offset);
            yankee = offset.LegacyText;
            offset = {};
            echoed = foxtra.title;
            offset['style'] = echoed;
            echoed = 'header';
            offset['accessibilityRole'] = echoed;
            echoed = 15;
            config = vacuum[echoed];
            config = ctrled.bind(tangon)(config);
            cntext = config.intl;
            record = cntext.string;
            config = vacuum[echoed];
            config = ctrled.bind(tangon)(config);
            config = config.t;
            config = config.2FNWBA;
            config = record.bind(cntext)(config);
            offset['children'] = config;
            yankee = zuuluu.bind(tangon)(yankee, offset);
            offset = new Array(3);
            offset[0] = yankee;
            yankee = 16;
            yankee = vacuum[yankee];
            yankee = ctrled.bind(tangon)(yankee);
            config = yankee.Text;
            yankee = {'style': null, 'variant': 'text-sm/medium', 'color': 'header-secondary'};
            record = foxtra.description;
            yankee['style'] = record;
            record = vacuum[echoed];
            record = ctrled.bind(tangon)(record);
            papara = record.intl;
            cntext = papara.string;
            record = vacuum[echoed];
            record = ctrled.bind(tangon)(record);
            record = record.t;
            record = record./4y6o6;
            record = cntext.bind(papara)(record);
            yankee['children'] = record;
            yankee = zuuluu.bind(tangon)(config, yankee);
            offset[1] = yankee;
            yankee = 17;
            yankee = vacuum[yankee];
            kiloes = kiloes.bind(tangon)(yankee);
            yankee = {};
            config = vacuum[echoed];
            config = ctrled.bind(tangon)(config);
            cntext = config.intl;
            record = cntext.string;
            config = vacuum[echoed];
            config = ctrled.bind(tangon)(config);
            config = config.t;
            config = config.L+AfJi;
            config = record.bind(cntext)(config);
            yankee['label'] = config;
            config = vacuum[echoed];
            config = ctrled.bind(tangon)(config);
            cntext = config.intl;
            record = cntext.string;
            config = vacuum[echoed];
            config = ctrled.bind(tangon)(config);
            config = config.t;
            config = config.Y1btJS;
            config = record.bind(cntext)(config);
            yankee['placeholder'] = config;
            yankee['value'] = sequen;
            yankee['onChangeText'] = update;
            update = foxtra.input;
            yankee['style'] = update;
            update = foxtra.redesignTextInput;
            yankee['textStyle'] = update;
            update = 18;
            update = vacuum[update];
            update = ctrled.bind(tangon)(update);
            update = update.ClearButtonVisibility;
            update = update.WITH_CONTENT;
            yankee['clearButtonVisibility'] = update;
            update = result == source;
            result = undefined;
            if(update) { _fun00002_ip = 744; continue _fun00001 }
 734:
            update = source.getAnyErrorMessage;
            result = update.bind(source)();
 744:
            yankee['error'] = result;
            result = function() { // Original name: onFocus
                entity = global;
                tangon = entity.setTimeout;
                entity = undefined;
                zuuluu = function() {
                    _fun00005: for(var _fun00006_ip = 0; ; ) switch(_fun00006_ip) {
 0:
                        entity = _closure2_slot5;
                        michal = entity.current;
                        entity = null;
                        if(!(entity != michal)) { _fun00006_ip = 28; continue _fun00005 }
 18:
                        entity = michal.scrollToEnd;
                        entity = entity.bind(michal)();
 28:
                        entity = undefined;
                        return entity;
                    }
                };
                michal = 100;
                michal = tangon.bind(entity)(zuuluu, michal);
                return entity;
            };
            yankee['onFocus'] = result;
            output = function() { // Original name: onBlur
                entity = global;
                tangon = entity.setTimeout;
                entity = undefined;
                zuuluu = function() {
                    _fun00007: for(var _fun00008_ip = 0; ; ) switch(_fun00008_ip) {
 0:
                        entity = _closure2_slot5;
                        michal = entity.current;
                        entity = null;
                        if(!(entity != michal)) { _fun00008_ip = 28; continue _fun00007 }
 18:
                        entity = michal.scrollToEnd;
                        entity = entity.bind(michal)();
 28:
                        entity = undefined;
                        return entity;
                    }
                };
                michal = 100;
                michal = tangon.bind(entity)(zuuluu, michal);
                return entity;
            };
            yankee['onBlur'] = output;
            yankee = zuuluu.bind(tangon)(kiloes, yankee);
            offset[2] = yankee;
            option['children'] = offset;
            verify = golfie.bind(tangon)(verify, option);
            option = new Array(3);
            option[0] = verify;
            yankee = _closure1_slot9;
            offset = _closure1_slot6;
            verify = {};
            kiloes = foxtra.redesignGrowSpacing;
            verify['style'] = kiloes;
            verify = yankee.bind(tangon)(offset, verify);
            option[1] = verify;
            verify = {};
            foxtra = foxtra.redesignSubmit;
            verify['style'] = foxtra;
            result = _closure1_slot0;
            kiloes = _closure1_slot2;
            romeon = 19;
            romeon = kiloes[romeon];
            romeon = result.bind(tangon)(romeon);
            foxtra = romeon.Button;
            romeon = {};
            output = 'lg';
            romeon['size'] = output;
            romeon['loading'] = sizing;
            sizing = kiloes[echoed];
            sizing = result.bind(tangon)(sizing);
            output = sizing.intl;
            sizing = output.string;
            kiloes = kiloes[echoed];
            kiloes = result.bind(tangon)(kiloes);
            kiloes = kiloes.t;
            kiloes = kiloes.PDsYAg;
            kiloes = sizing.bind(output)(kiloes);
            romeon['text'] = kiloes;
            romeon['onPress'] = backup;
            romeon = yankee.bind(tangon)(foxtra, romeon);
            verify['children'] = romeon;
            verify = yankee.bind(tangon)(offset, verify);
            option[2] = verify;
            report['children'] = option;
            report = golfie.bind(tangon)(oscard, report);
            entity['children'] = report;
            entity = zuuluu.bind(tangon)(michal, entity);
            return entity;
        }
    };
    zuuluu['default'] = michal;
    return entity;
})();