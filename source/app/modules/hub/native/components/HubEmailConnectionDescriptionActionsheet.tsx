// app/modules/hub/native/components/HubEmailConnectionDescriptionActionsheet.tsx
export default (function(_, argBar, __, argCorge, ___, argFred, argPlugh) {
    report = argBar;
    zulu = argFred;
    oscar = argPlugh;
    var _closure1_slot0 = report;
    var _closure1_slot1 = oscar;
    entity = global;
    options = entity.Object;
    golf = options.defineProperty;
    tango = {};
    entity = true;
    tango['value'] = entity;
    entity = '__esModule';
    entity = golf.bind(options)(zulu, entity, tango);
    entity = 0;
    golf = oscar[entity];
    tango = argCorge;
    entity = undefined;
    tango = tango.bind(entity)(golf);
    tango = 1;
    golf = oscar[tango];
    golf = report.bind(entity)(golf);
    golf = golf.jsx;
    var _closure1_slot2 = golf;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.jsxs;
    var _closure1_slot3 = tango;
    tango = 2;
    tango = oscar[tango];
    options = report.bind(entity)(tango);
    golf = options.createStyles;
    tango = {};
    verify = {};
    offset = 16;
    verify['padding'] = offset;
    tango['container'] = verify;
    verify = {};
    offset = 8;
    verify['marginBottom'] = offset;
    tango['description'] = verify;
    tango = golf.bind(options)(tango);
    var _closure1_slot4 = tango;
    tango = 7;
    tango = oscar[tango];
    oscar = report.bind(entity)(tango);
    report = oscar.fileFinishedImporting;
    tango = 'modules/hub/native/components/HubEmailConnectionDescriptionActionsheet.tsx';
    tango = report.bind(oscar)(tango);
    mike = function() { // Original name: _default
        entity = _closure1_slot4;
        tango = undefined;
        offset = entity.bind(tango)();
        zulu = _closure1_slot3;
        romeo = _closure1_slot0;
        foxtrot = _closure1_slot1;
        entity = 3;
        entity = foxtrot[entity];
        entity = romeo.bind(tango)(entity);
        mike = entity.BottomSheet;
        entity = {};
        options = _closure1_slot2;
        report = 4;
        report = foxtrot[report];
        report = romeo.bind(tango)(report);
        oscar = report.BottomSheetTitleHeader;
        report = {};
        verify = 5;
        golf = foxtrot[verify];
        golf = romeo.bind(tango)(golf);
        backup = golf.intl;
        yankee = backup.string;
        golf = foxtrot[verify];
        golf = romeo.bind(tango)(golf);
        golf = golf.t;
        golf = golf.48kg+P;
        golf = yankee.bind(backup)(golf);
        report['title'] = golf;
        oscar = options.bind(tango)(oscar, report);
        report = new Array(3);
        report[0] = oscar;
        oscar = 6;
        golf = foxtrot[oscar];
        golf = romeo.bind(tango)(golf);
        yankee = golf.Text;
        golf = {'style': null, 'variant': 'text-sm/medium', 'color': 'header-secondary'};
        backup = offset.description;
        golf['style'] = backup;
        backup = foxtrot[verify];
        backup = romeo.bind(tango)(backup);
        sizing = backup.intl;
        kilo = sizing.string;
        backup = foxtrot[verify];
        backup = romeo.bind(tango)(backup);
        backup = backup.t;
        backup = backup.O1k9XV;
        backup = kilo.bind(sizing)(backup);
        golf['children'] = backup;
        golf = options.bind(tango)(yankee, golf);
        report[1] = golf;
        oscar = foxtrot[oscar];
        oscar = romeo.bind(tango)(oscar);
        golf = oscar.Text;
        oscar = {'style': null, 'variant': 'text-sm/medium', 'color': 'header-secondary'};
        offset = offset.description;
        oscar['style'] = offset;
        offset = foxtrot[verify];
        offset = romeo.bind(tango)(offset);
        yankee = offset.intl;
        offset = yankee.string;
        verify = foxtrot[verify];
        verify = romeo.bind(tango)(verify);
        verify = verify.t;
        verify = verify.FV5dvr;
        verify = offset.bind(yankee)(verify);
        oscar['children'] = verify;
        oscar = options.bind(tango)(golf, oscar);
        report[2] = oscar;
        entity['children'] = report;
        entity = zulu.bind(tango)(mike, entity);
        return entity;
    };
    zulu['default'] = mike;
    return entity;
})();