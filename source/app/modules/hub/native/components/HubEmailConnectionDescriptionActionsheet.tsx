// app/modules/hub/native/components/HubEmailConnectionDescriptionActionsheet.tsx
export default (function(_, argBar, __, argCor, ___, argFre, argPlu) {
    report = argBar;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    var _closure1_slot1 = oscard;
    entity = global;
    option = entity.Object;
    golfie = option.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(option)(zuuluu, entity, tangon);
    entity = 0;
    golfie = oscard[entity];
    tangon = argCor;
    entity = undefined;
    tangon = tangon.bind(entity)(golfie);
    tangon = 1;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    golfie = tangon.jsx;
    var _closure1_slot2 = golfie;
    tangon = tangon.jsxs;
    var _closure1_slot3 = tangon;
    tangon = 2;
    tangon = oscard[tangon];
    option = report.bind(entity)(tangon);
    golfie = option.createStyles;
    tangon = {};
    verify = {};
    offset = 16;
    verify['padding'] = offset;
    tangon['container'] = verify;
    verify = {};
    offset = 8;
    verify['marginBottom'] = offset;
    tangon['description'] = verify;
    tangon = golfie.bind(option)(tangon);
    var _closure1_slot4 = tangon;
    tangon = 7;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/hub/native/components/HubEmailConnectionDescriptionActionsheet.tsx';
    tangon = report.bind(oscard)(tangon);
    michal = function() { // Original name: _default
        entity = _closure1_slot4;
        tangon = undefined;
        offset = entity.bind(tangon)();
        zuuluu = _closure1_slot3;
        romeon = _closure1_slot0;
        foxtra = _closure1_slot1;
        entity = 3;
        entity = foxtra[entity];
        entity = romeon.bind(tangon)(entity);
        michal = entity.BottomSheet;
        entity = {};
        option = _closure1_slot2;
        report = 4;
        report = foxtra[report];
        report = romeon.bind(tangon)(report);
        oscard = report.BottomSheetTitleHeader;
        report = {};
        verify = 5;
        golfie = foxtra[verify];
        golfie = romeon.bind(tangon)(golfie);
        backup = golfie.intl;
        yankee = backup.string;
        golfie = foxtra[verify];
        golfie = romeon.bind(tangon)(golfie);
        golfie = golfie.t;
        golfie = golfie.48kg+P;
        golfie = yankee.bind(backup)(golfie);
        report['title'] = golfie;
        oscard = option.bind(tangon)(oscard, report);
        report = new Array(3);
        report[0] = oscard;
        oscard = 6;
        golfie = foxtra[oscard];
        golfie = romeon.bind(tangon)(golfie);
        yankee = golfie.Text;
        golfie = {'style': null, 'variant': 'text-sm/medium', 'color': 'header-secondary'};
        backup = offset.description;
        golfie['style'] = backup;
        backup = foxtra[verify];
        backup = romeon.bind(tangon)(backup);
        sizing = backup.intl;
        kiloes = sizing.string;
        backup = foxtra[verify];
        backup = romeon.bind(tangon)(backup);
        backup = backup.t;
        backup = backup.O1k9XV;
        backup = kiloes.bind(sizing)(backup);
        golfie['children'] = backup;
        golfie = option.bind(tangon)(yankee, golfie);
        report[1] = golfie;
        oscard = foxtra[oscard];
        oscard = romeon.bind(tangon)(oscard);
        golfie = oscard.Text;
        oscard = {'style': null, 'variant': 'text-sm/medium', 'color': 'header-secondary'};
        offset = offset.description;
        oscard['style'] = offset;
        offset = foxtra[verify];
        offset = romeon.bind(tangon)(offset);
        yankee = offset.intl;
        offset = yankee.string;
        verify = foxtra[verify];
        verify = romeon.bind(tangon)(verify);
        verify = verify.t;
        verify = verify.FV5dvr;
        verify = offset.bind(yankee)(verify);
        oscard['children'] = verify;
        oscard = option.bind(tangon)(golfie, oscard);
        report[2] = oscard;
        entity['children'] = report;
        entity = zuuluu.bind(tangon)(michal, entity);
        return entity;
    };
    zuuluu['default'] = michal;
    return entity;
})();