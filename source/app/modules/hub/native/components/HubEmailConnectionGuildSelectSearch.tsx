// app/modules/hub/native/components/HubEmailConnectionGuildSelectSearch.tsx
export default (function(argFoo, argBar, argBaz, argCorge, _, argFred, argPlugh) {
    report = argBar;
    yankee = argBaz;
    zulu = argFred;
    oscar = argPlugh;
    var _closure1_slot0 = report;
    var _closure1_slot1 = yankee;
    var _closure1_slot2 = oscar;
    entity = global;
    options = entity.Object;
    golf = options.defineProperty;
    tango = {};
    entity = true;
    tango['value'] = entity;
    entity = '__esModule';
    entity = golf.bind(options)(zulu, entity, tango);
    foxtrot = 0;
    tango = oscar[foxtrot];
    entity = undefined;
    tango = yankee.bind(entity)(tango);
    var _closure1_slot3 = tango;
    tango = 1;
    tango = oscar[tango];
    tango = yankee.bind(entity)(tango);
    var _closure1_slot4 = tango;
    tango = 2;
    golf = oscar[tango];
    tango = argCorge;
    tango = tango.bind(entity)(golf);
    var _closure1_slot5 = tango;
    tango = 3;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    golf = tango.View;
    var _closure1_slot6 = golf;
    golf = tango.Image;
    var _closure1_slot7 = golf;
    tango = tango.FlatList;
    var _closure1_slot8 = tango;
    tango = 4;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.HubEmailConnectionSteps;
    var _closure1_slot9 = tango;
    tango = 5;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    romeo = tango.Fonts;
    tango = 6;
    golf = oscar[tango];
    golf = report.bind(entity)(golf);
    golf = golf.jsx;
    var _closure1_slot10 = golf;
    golf = oscar[tango];
    golf = report.bind(entity)(golf);
    golf = golf.jsxs;
    var _closure1_slot11 = golf;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.Fragment;
    var _closure1_slot12 = tango;
    tango = 7;
    tango = oscar[tango];
    options = report.bind(entity)(tango);
    golf = options.createStyles;
    tango = {};
    verify = {'flex': 1, 'height': '100%'};
    tango['flex'] = verify;
    verify = {'flex': 1, 'width': '100%'};
    offset = 8;
    backup = oscar[offset];
    backup = yankee.bind(entity)(backup);
    backup = backup.colors;
    backup = backup.BACKGROUND_PRIMARY;
    verify['backgroundColor'] = backup;
    tango['scrollContainer'] = verify;
    verify = {};
    verify['paddingHorizontal'] = foxtrot;
    tango['fauxHeader'] = verify;
    foxtrot = 'center';
    verify = {'flex': 1, 'alignItems': 'center', 'justifyContent': 'center', 'marginTop': 64, 'paddingHorizontal': 16};
    tango['emptyWrapper'] = verify;
    verify = {};
    backup = 24;
    verify['marginBottom'] = backup;
    tango['emptyStateImage'] = verify;
    verify = {};
    backup = oscar[offset];
    backup = yankee.bind(entity)(backup);
    backup = backup.colors;
    backup = backup.HEADER_SECONDARY;
    verify['color'] = backup;
    verify['textAlign'] = foxtrot;
    tango['emptyStateText'] = verify;
    verify = {'marginBottom': 4, 'textAlign': 'center'};
    tango['emptyStateTitle'] = verify;
    verify = {};
    romeo = romeo.PRIMARY_BOLD;
    verify['fontFamily'] = romeo;
    romeo = oscar[offset];
    romeo = yankee.bind(entity)(romeo);
    romeo = romeo.unsafe_rawColors;
    romeo = romeo.GREEN_360;
    verify['color'] = romeo;
    romeo = 'uppercase';
    verify['textTransform'] = romeo;
    tango['proTip'] = verify;
    verify = {};
    romeo = oscar[offset];
    romeo = yankee.bind(entity)(romeo);
    romeo = romeo.colors;
    romeo = romeo.BACKGROUND_MODIFIER_ACCENT;
    verify['backgroundColor'] = romeo;
    tango['divider'] = verify;
    verify = {'color': null, 'alignSelf': 'center', 'fontSize': 14, 'marginBottom': 8};
    offset = oscar[offset];
    offset = yankee.bind(entity)(offset);
    offset = offset.unsafe_rawColors;
    offset = offset.RED_400;
    verify['color'] = offset;
    tango['error'] = verify;
    tango = golf.bind(options)(tango);
    var _closure1_slot13 = tango;
    tango = function() { // Original name: EmptyState
        entity = _closure1_slot13;
        tango = undefined;
        verify = entity.bind(tango)();
        zulu = _closure1_slot11;
        mike = _closure1_slot6;
        entity = {};
        report = verify.emptyWrapper;
        entity['style'] = report;
        options = _closure1_slot10;
        golf = _closure1_slot7;
        report = {};
        offset = verify.emptyStateImage;
        report['style'] = offset;
        yankee = _closure1_slot1;
        foxtrot = _closure1_slot2;
        offset = 9;
        offset = foxtrot[offset];
        offset = yankee.bind(tango)(offset);
        report['source'] = offset;
        golf = options.bind(tango)(golf, report);
        report = new Array(2);
        report[0] = golf;
        romeo = _closure1_slot0;
        oscar = 10;
        oscar = foxtrot[oscar];
        oscar = romeo.bind(tango)(oscar);
        golf = oscar.Text;
        oscar = {'style': null, 'variant': 'text-sm/semibold', 'color': 'header-primary'};
        verify = verify.emptyStateTitle;
        oscar['style'] = verify;
        verify = 11;
        offset = foxtrot[verify];
        offset = romeo.bind(tango)(offset);
        yankee = offset.intl;
        offset = yankee.string;
        verify = foxtrot[verify];
        verify = romeo.bind(tango)(verify);
        verify = verify.t;
        verify = verify.6HXiuL;
        verify = offset.bind(yankee)(verify);
        oscar['children'] = verify;
        oscar = options.bind(tango)(golf, oscar);
        report[1] = oscar;
        entity['children'] = report;
        entity = zulu.bind(tango)(mike, entity);
        return entity;
    };
    var _closure1_slot14 = tango;
    tango = 21;
    tango = oscar[tango];
    oscar = report.bind(entity)(tango);
    report = oscar.fileFinishedImporting;
    tango = 'modules/hub/native/components/HubEmailConnectionGuildSelectSearch.tsx';
    tango = report.bind(oscar)(tango);
    mike = function(argFoo) { // Original name: HubEmailConnectionGuildSelectSearch
        _fun93804: for(var _fun93804_ip = 0; ; ) switch(_fun93804_ip) {
 0:
            entity = argFoo;
            options = entity.guildsInfo;
            mike = entity.email;
            var _closure2_slot0 = mike;
            entity = entity.onClose;
            var _closure2_slot1 = entity;
            tango = undefined;
            var _closure2_slot8 = tango;
            entity = _closure1_slot13;
            verify = entity.bind(tango)();
            var _closure2_slot2 = verify;
            mike = _closure1_slot0;
            golf = _closure1_slot2;
            entity = 12;
            entity = golf[entity];
            mike = mike.bind(tango)(entity);
            entity = mike.useNavigation;
            entity = entity.bind(mike)();
            var _closure2_slot3 = entity;
            sizing = _closure1_slot5;
            mike = sizing.useState;
            entity = '';
            entity = mike.bind(sizing)(entity);
            foxtrot = _closure1_slot4;
            romeo = 2;
            entity = foxtrot.bind(tango)(entity, romeo);
            yankee = 0;
            mike = entity[yankee];
            var _closure2_slot4 = mike;
            report = 1;
            kilo = entity[report];
            mike = sizing.useState;
            entity = null;
            mike = mike.bind(sizing)(entity);
            mike = foxtrot.bind(tango)(mike, romeo);
            zulu = mike[yankee];
            mike = mike[report];
            var _closure2_slot5 = mike;
            backup = sizing.useState;
            mike = false;
            mike = backup.bind(sizing)(mike);
            mike = foxtrot.bind(tango)(mike, romeo);
            yankee = mike[yankee];
            var _closure2_slot6 = yankee;
            mike = mike[report];
            var _closure2_slot7 = mike;
            report = options.filter;
            mike = function(argFoo) {
                mike = _closure1_slot1;
                zulu = _closure1_slot2;
                entity = 13;
                entity = zulu[entity];
                tango = undefined;
                zulu = mike.bind(tango)(entity);
                mike = _closure2_slot4;
                entity = mike.toLowerCase;
                mike = entity.bind(mike)();
                entity = argFoo;
                report = entity.name;
                entity = report.toLowerCase;
                entity = entity.bind(report)();
                entity = zulu.bind(tango)(mike, entity);
                return entity;
            };
            romeo = report.bind(options)(mike);
            report = _closure1_slot1;
            mike = 14;
            mike = golf[mike];
            mike = report.bind(tango)(mike);
            mike = mike.bind(tango)();
            yankee = mike.bottom;
            mike = entity == zulu;
            entity = undefined;
            if(mike) { _fun93804_ip = 259; continue _fun93804 }
 249:
            mike = zulu.getAnyErrorMessage;
            entity = mike.bind(zulu)();
 259:
            _closure2_slot8 = entity;
            zulu = _closure1_slot11;
            mike = _closure1_slot12;
            entity = {};
            options = _closure1_slot10;
            echo = _closure1_slot0;
            update = _closure1_slot2;
            report = 17;
            report = update[report];
            report = echo.bind(tango)(report);
            golf = report.FauxHeader;
            report = {};
            foxtrot = verify.fauxHeader;
            report['style'] = foxtrot;
            backup = _closure1_slot1;
            foxtrot = 18;
            foxtrot = update[foxtrot];
            backup = backup.bind(tango)(foxtrot);
            foxtrot = {};
            sizing = 11;
            output = update[sizing];
            output = echo.bind(tango)(output);
            result = output.intl;
            output = result.string;
            sizing = update[sizing];
            sizing = echo.bind(tango)(sizing);
            sizing = sizing.t;
            sizing = sizing.nL2wKC;
            sizing = output.bind(result)(sizing);
            foxtrot['placeholder'] = sizing;
            foxtrot['onChange'] = kilo;
            kilo = function() { // Original name: onClose
                mike = _closure2_slot3;
                entity = mike.pop;
                entity = entity.bind(mike)();
                entity = undefined;
                return entity;
            };
            foxtrot['onClose'] = kilo;
            foxtrot = options.bind(tango)(backup, foxtrot);
            report['children'] = foxtrot;
            golf = options.bind(tango)(golf, report);
            report = new Array(2);
            report[0] = golf;
            golf = _closure1_slot8;
            oscar = {};
            foxtrot = 'always';
            oscar['keyboardShouldPersistTaps'] = foxtrot;
            oscar['data'] = romeo;
            romeo = function() { // Original name: ListHeaderComponent
                _fun93807: for(var _fun93807_ip = 0; ; ) switch(_fun93807_ip) {
 0:
                    entity = _closure2_slot8;
                    tango = null;
                    mike = tango != entity;
                    entity = null;
                    if(!mike) { _fun93807_ip = 96; continue _fun93807 }
 18:
                    zulu = _closure2_slot8;
                    mike = '';
                    entity = null;
                    if(!(mike !== zulu)) { _fun93807_ip = 96; continue _fun93807 }
 32:
                    report = _closure1_slot10;
                    zulu = _closure1_slot0;
                    tango = _closure1_slot2;
                    mike = 19;
                    mike = tango[mike];
                    tango = undefined;
                    mike = zulu.bind(tango)(mike);
                    zulu = mike.LegacyText;
                    mike = {};
                    golf = _closure2_slot2;
                    golf = golf.error;
                    mike['style'] = golf;
                    oscar = _closure2_slot8;
                    mike['children'] = oscar;
                    entity = report.bind(tango)(zulu, mike);
 96:
                    return entity;
                }
            };
            oscar['ListHeaderComponent'] = romeo;
            romeo = function(argFoo) { // Original name: renderItem
                entity = argFoo;
                report = entity.item;
                tango = _closure1_slot10;
                mike = _closure1_slot0;
                zulu = _closure1_slot2;
                entity = 20;
                entity = zulu[entity];
                zulu = undefined;
                entity = mike.bind(zulu)(entity);
                mike = entity.HubEmailConnectionGuildSelectRow;
                entity = {};
                options = report.id;
                var _closure3_slot0 = options;
                golf = _closure1_slot3;
                oscar = function* () {
                    entity = function* () { // Original name: ?anon_0_
                        _fun93810: for(var _fun93810_ip = 0; ; ) switch(_fun93810_ip) {
 0:
                            StartGenerator();
                            ResumeGenerator(result_out_reg=0, return_bool_out_reg=1);
                            if(mike) { _fun93810_ip = 255; continue _fun93810 }
 10:
                            tango = _closure2_slot5;
                            report = undefined;
                            mike = null;
                            mike = tango.bind(report)(mike);
                            mike = _closure2_slot7;
                            offset = true;
                            mike = mike.bind(report)(offset);
 37: // try_start_0 // try_start_1
                            oscar = _closure1_slot1;
                            golf = _closure1_slot2;
                            mike = 15;
                            mike = golf[mike];
                            options = oscar.bind(report)(mike);
                            golf = options.sendVerificationEmail;
                            oscar = _closure2_slot0;
                            mike = _closure3_slot0;
                            mike = golf.bind(options)(oscar, offset, mike);
                            SaveGenerator(address=88);
 86:
                            return mike;
 88:
                            ResumeGenerator(result_out_reg=1, return_bool_out_reg=5);
                            if(oscar) { _fun93810_ip = 149; continue _fun93810 }
 94:
                            options = _closure2_slot3;
                            golf = options.push;
                            tango = _closure1_slot9;
                            oscar = tango.VERIFY_PIN;
                            tango = {};
                            offset = _closure2_slot0;
                            tango['email'] = offset;
                            offset = _closure2_slot1;
                            tango['onClose'] = offset;
                            verify = _closure3_slot0;
                            tango['guildId'] = verify;
                            tango = golf.bind(options)(oscar, tango);
 147: // try_end0
                            _fun93810_ip = 226; continue _fun93810;
 149: // try_end1
                            oscar = _closure2_slot7;
                            tango = false;
                            tango = oscar.bind(report)(tango);
                            return mike;
 163: // try_start_2 // catch_target0
                            CatchBlockStart(arg_register=6);
                            tango = _closure2_slot5;
                            oscar = _closure1_slot0;
                            options = _closure1_slot2;
                            mike = 16;
                            mike = options[mike];
                            mike = oscar.bind(report)(mike);
                            mike = mike.APIError;
                            oscar = mike.prototype;
                            oscar = Object.create(oscar, {constructor: {value: mike}});
                            backup = oscar;
                            foxtrot = golf;
                            mike = new backup[mike](foxtrot, romeo);
                            mike = mike instanceof Object ? mike : oscar;
                            mike = tango.bind(report)(mike);
 226: // try_end2
                            tango = _closure2_slot7;
                            mike = false;
                            mike = tango.bind(report)(mike);
                            return report;
 240: // catch_target1 // catch_target2
                            CatchBlockStart(arg_register=1);
                            tango = _closure2_slot7;
                            zulu = false;
                            zulu = tango.bind(report)(zulu);
                            throw mike;
 255:
                            return entity;
                        }
                    };
                    return entity;
                };
                oscar = golf.bind(zulu)(oscar);
                entity['signup'] = oscar;
                entity['guildInfo'] = report;
                report = _closure2_slot6;
                entity['loading'] = report;
                entity = tango.bind(zulu)(mike, entity);
                return entity;
            };
            oscar['renderItem'] = romeo;
            romeo = function(argFoo) { // Original name: keyExtractor
                entity = argFoo;
                entity = entity.id;
                return entity;
            };
            oscar['keyExtractor'] = romeo;
            romeo = function() { // Original name: ListEmptyComponent
                tango = _closure1_slot10;
                zulu = _closure1_slot14;
                mike = undefined;
                entity = {};
                entity = tango.bind(mike)(zulu, entity);
                return entity;
            };
            oscar['ListEmptyComponent'] = romeo;
            offset = function() { // Original name: ItemSeparatorComponent
                tango = _closure1_slot10;
                zulu = _closure1_slot6;
                mike = {};
                entity = {};
                report = 8;
                entity['height'] = report;
                mike['style'] = entity;
                entity = undefined;
                entity = tango.bind(entity)(zulu, mike);
                return entity;
            };
            oscar['ItemSeparatorComponent'] = offset;
            verify = verify.scrollContainer;
            oscar['style'] = verify;
            verify = {};
            offset = 16;
            yankee = yankee + offset;
            verify['paddingBottom'] = yankee;
            verify['paddingTop'] = offset;
            oscar['contentContainerStyle'] = verify;
            oscar = options.bind(tango)(golf, oscar);
            report[1] = oscar;
            entity['children'] = report;
            entity = zulu.bind(tango)(mike, entity);
            return entity;
        }
    };
    zulu['default'] = mike;
    return entity;
})();