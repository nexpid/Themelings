// app/modules/hub/native/components/HubEmailConnectionGuildSelectSearch.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    report = argBar;
    yankee = argBaz;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    var _closure1_slot1 = yankee;
    var _closure1_slot2 = oscard;
    entity = global;
    option = entity.Object;
    golfie = option.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(option)(zuuluu, entity, tangon);
    foxtra = 0;
    tangon = oscard[foxtra];
    entity = undefined;
    tangon = yankee.bind(entity)(tangon);
    var _closure1_slot3 = tangon;
    tangon = 1;
    tangon = oscard[tangon];
    tangon = yankee.bind(entity)(tangon);
    var _closure1_slot4 = tangon;
    tangon = 2;
    golfie = oscard[tangon];
    tangon = argCor;
    tangon = tangon.bind(entity)(golfie);
    var _closure1_slot5 = tangon;
    tangon = 3;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    golfie = tangon.View;
    var _closure1_slot6 = golfie;
    golfie = tangon.Image;
    var _closure1_slot7 = golfie;
    tangon = tangon.FlatList;
    var _closure1_slot8 = tangon;
    tangon = 4;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.HubEmailConnectionSteps;
    var _closure1_slot9 = tangon;
    tangon = 5;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    romeon = tangon.Fonts;
    tangon = 6;
    golfie = oscard[tangon];
    golfie = report.bind(entity)(golfie);
    golfie = golfie.jsx;
    var _closure1_slot10 = golfie;
    golfie = oscard[tangon];
    golfie = report.bind(entity)(golfie);
    golfie = golfie.jsxs;
    var _closure1_slot11 = golfie;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.Fragment;
    var _closure1_slot12 = tangon;
    tangon = 7;
    tangon = oscard[tangon];
    option = report.bind(entity)(tangon);
    golfie = option.createStyles;
    tangon = {};
    verify = {'flex': 1, 'height': '100%'};
    tangon['flex'] = verify;
    verify = {'flex': 1, 'width': '100%'};
    offset = 8;
    backup = oscard[offset];
    backup = yankee.bind(entity)(backup);
    backup = backup.colors;
    backup = backup.BACKGROUND_PRIMARY;
    verify['backgroundColor'] = backup;
    tangon['scrollContainer'] = verify;
    verify = {};
    verify['paddingHorizontal'] = foxtra;
    tangon['fauxHeader'] = verify;
    foxtra = 'center';
    verify = {'flex': 1, 'alignItems': 'center', 'justifyContent': 'center', 'marginTop': 64, 'paddingHorizontal': 16};
    tangon['emptyWrapper'] = verify;
    verify = {};
    backup = 24;
    verify['marginBottom'] = backup;
    tangon['emptyStateImage'] = verify;
    verify = {};
    backup = oscard[offset];
    backup = yankee.bind(entity)(backup);
    backup = backup.colors;
    backup = backup.HEADER_SECONDARY;
    verify['color'] = backup;
    verify['textAlign'] = foxtra;
    tangon['emptyStateText'] = verify;
    verify = {'marginBottom': 4, 'textAlign': 'center'};
    tangon['emptyStateTitle'] = verify;
    verify = {};
    romeon = romeon.PRIMARY_BOLD;
    verify['fontFamily'] = romeon;
    romeon = oscard[offset];
    romeon = yankee.bind(entity)(romeon);
    romeon = romeon.unsafe_rawColors;
    romeon = romeon.GREEN_360;
    verify['color'] = romeon;
    romeon = 'uppercase';
    verify['textTransform'] = romeon;
    tangon['proTip'] = verify;
    verify = {};
    romeon = oscard[offset];
    romeon = yankee.bind(entity)(romeon);
    romeon = romeon.colors;
    romeon = romeon.BACKGROUND_MODIFIER_ACCENT;
    verify['backgroundColor'] = romeon;
    tangon['divider'] = verify;
    verify = {'color': null, 'alignSelf': 'center', 'fontSize': 14, 'marginBottom': 8};
    offset = oscard[offset];
    offset = yankee.bind(entity)(offset);
    offset = offset.unsafe_rawColors;
    offset = offset.RED_400;
    verify['color'] = offset;
    tangon['error'] = verify;
    tangon = golfie.bind(option)(tangon);
    var _closure1_slot13 = tangon;
    tangon = function() { // Original name: EmptyState
        entity = _closure1_slot13;
        tangon = undefined;
        verify = entity.bind(tangon)();
        zuuluu = _closure1_slot11;
        michal = _closure1_slot6;
        entity = {};
        report = verify.emptyWrapper;
        entity['style'] = report;
        option = _closure1_slot10;
        golfie = _closure1_slot7;
        report = {};
        offset = verify.emptyStateImage;
        report['style'] = offset;
        yankee = _closure1_slot1;
        foxtra = _closure1_slot2;
        offset = 9;
        offset = foxtra[offset];
        offset = yankee.bind(tangon)(offset);
        report['source'] = offset;
        golfie = option.bind(tangon)(golfie, report);
        report = new Array(2);
        report[0] = golfie;
        romeon = _closure1_slot0;
        oscard = 10;
        oscard = foxtra[oscard];
        oscard = romeon.bind(tangon)(oscard);
        golfie = oscard.Text;
        oscard = {'style': null, 'variant': 'text-sm/semibold', 'color': 'header-primary'};
        verify = verify.emptyStateTitle;
        oscard['style'] = verify;
        verify = 11;
        offset = foxtra[verify];
        offset = romeon.bind(tangon)(offset);
        yankee = offset.intl;
        offset = yankee.string;
        verify = foxtra[verify];
        verify = romeon.bind(tangon)(verify);
        verify = verify.t;
        verify = verify.6HXiuL;
        verify = offset.bind(yankee)(verify);
        oscard['children'] = verify;
        oscard = option.bind(tangon)(golfie, oscard);
        report[1] = oscard;
        entity['children'] = report;
        entity = zuuluu.bind(tangon)(michal, entity);
        return entity;
    };
    var _closure1_slot14 = tangon;
    tangon = 21;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/hub/native/components/HubEmailConnectionGuildSelectSearch.tsx';
    tangon = report.bind(oscard)(tangon);
    michal = function(argFoo) { // Original name: HubEmailConnectionGuildSelectSearch
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            entity = argFoo;
            option = entity.guildsInfo;
            michal = entity.email;
            var _closure2_slot0 = michal;
            entity = entity.onClose;
            var _closure2_slot1 = entity;
            tangon = undefined;
            var _closure2_slot8 = tangon;
            entity = _closure1_slot13;
            verify = entity.bind(tangon)();
            var _closure2_slot2 = verify;
            michal = _closure1_slot0;
            golfie = _closure1_slot2;
            entity = 12;
            entity = golfie[entity];
            michal = michal.bind(tangon)(entity);
            entity = michal.useNavigation;
            entity = entity.bind(michal)();
            var _closure2_slot3 = entity;
            sizing = _closure1_slot5;
            michal = sizing.useState;
            entity = '';
            entity = michal.bind(sizing)(entity);
            foxtra = _closure1_slot4;
            romeon = 2;
            entity = foxtra.bind(tangon)(entity, romeon);
            yankee = 0;
            michal = entity[yankee];
            var _closure2_slot4 = michal;
            report = 1;
            kiloes = entity[report];
            michal = sizing.useState;
            entity = null;
            michal = michal.bind(sizing)(entity);
            michal = foxtra.bind(tangon)(michal, romeon);
            zuuluu = michal[yankee];
            michal = michal[report];
            var _closure2_slot5 = michal;
            backup = sizing.useState;
            michal = false;
            michal = backup.bind(sizing)(michal);
            michal = foxtra.bind(tangon)(michal, romeon);
            yankee = michal[yankee];
            var _closure2_slot6 = yankee;
            michal = michal[report];
            var _closure2_slot7 = michal;
            report = option.filter;
            michal = function(argFoo) {
                michal = _closure1_slot1;
                zuuluu = _closure1_slot2;
                entity = 13;
                entity = zuuluu[entity];
                tangon = undefined;
                zuuluu = michal.bind(tangon)(entity);
                michal = _closure2_slot4;
                entity = michal.toLowerCase;
                michal = entity.bind(michal)();
                entity = argFoo;
                report = entity.name;
                entity = report.toLowerCase;
                entity = entity.bind(report)();
                entity = zuuluu.bind(tangon)(michal, entity);
                return entity;
            };
            romeon = report.bind(option)(michal);
            report = _closure1_slot1;
            michal = 14;
            michal = golfie[michal];
            michal = report.bind(tangon)(michal);
            michal = michal.bind(tangon)();
            yankee = michal.bottom;
            michal = entity == zuuluu;
            entity = undefined;
            if(michal) { _fun00002_ip = 259; continue _fun00001 }
 249:
            michal = zuuluu.getAnyErrorMessage;
            entity = michal.bind(zuuluu)();
 259:
            _closure2_slot8 = entity;
            zuuluu = _closure1_slot11;
            michal = _closure1_slot12;
            entity = {};
            option = _closure1_slot10;
            echoed = _closure1_slot0;
            update = _closure1_slot2;
            report = 17;
            report = update[report];
            report = echoed.bind(tangon)(report);
            golfie = report.FauxHeader;
            report = {};
            foxtra = verify.fauxHeader;
            report['style'] = foxtra;
            backup = _closure1_slot1;
            foxtra = 18;
            foxtra = update[foxtra];
            backup = backup.bind(tangon)(foxtra);
            foxtra = {};
            sizing = 11;
            output = update[sizing];
            output = echoed.bind(tangon)(output);
            result = output.intl;
            output = result.string;
            sizing = update[sizing];
            sizing = echoed.bind(tangon)(sizing);
            sizing = sizing.t;
            sizing = sizing.nL2wKC;
            sizing = output.bind(result)(sizing);
            foxtra['placeholder'] = sizing;
            foxtra['onChange'] = kiloes;
            kiloes = function() { // Original name: onClose
                michal = _closure2_slot3;
                entity = michal.pop;
                entity = entity.bind(michal)();
                entity = undefined;
                return entity;
            };
            foxtra['onClose'] = kiloes;
            foxtra = option.bind(tangon)(backup, foxtra);
            report['children'] = foxtra;
            golfie = option.bind(tangon)(golfie, report);
            report = new Array(2);
            report[0] = golfie;
            golfie = _closure1_slot8;
            oscard = {};
            foxtra = 'always';
            oscard['keyboardShouldPersistTaps'] = foxtra;
            oscard['data'] = romeon;
            romeon = function() { // Original name: ListHeaderComponent
                _fun00003: for(var _fun00004_ip = 0; ; ) switch(_fun00004_ip) {
 0:
                    entity = _closure2_slot8;
                    tangon = null;
                    michal = tangon != entity;
                    entity = null;
                    if(!michal) { _fun00004_ip = 96; continue _fun00003 }
 18:
                    zuuluu = _closure2_slot8;
                    michal = '';
                    entity = null;
                    if(!(michal !== zuuluu)) { _fun00004_ip = 96; continue _fun00003 }
 32:
                    report = _closure1_slot10;
                    zuuluu = _closure1_slot0;
                    tangon = _closure1_slot2;
                    michal = 19;
                    michal = tangon[michal];
                    tangon = undefined;
                    michal = zuuluu.bind(tangon)(michal);
                    zuuluu = michal.LegacyText;
                    michal = {};
                    golfie = _closure2_slot2;
                    golfie = golfie.error;
                    michal['style'] = golfie;
                    oscard = _closure2_slot8;
                    michal['children'] = oscard;
                    entity = report.bind(tangon)(zuuluu, michal);
 96:
                    return entity;
                }
            };
            oscard['ListHeaderComponent'] = romeon;
            romeon = function(argFoo) { // Original name: renderItem
                entity = argFoo;
                report = entity.item;
                tangon = _closure1_slot10;
                michal = _closure1_slot0;
                zuuluu = _closure1_slot2;
                entity = 20;
                entity = zuuluu[entity];
                zuuluu = undefined;
                entity = michal.bind(zuuluu)(entity);
                michal = entity.HubEmailConnectionGuildSelectRow;
                entity = {};
                option = report.id;
                var _closure3_slot0 = option;
                golfie = _closure1_slot3;
                oscard = function* () {
                    entity = function* () { // Original name: ?anon_0_
                        _fun00005: for(var _fun00006_ip = 0; ; ) switch(_fun00006_ip) {
 0:
                            StartGenerator();
                            ResumeGenerator(result_out_reg=0, return_bool_out_reg=1);
                            if(michal) { _fun00006_ip = 255; continue _fun00005 }
 10:
                            tangon = _closure2_slot5;
                            report = undefined;
                            michal = null;
                            michal = tangon.bind(report)(michal);
                            michal = _closure2_slot7;
                            offset = true;
                            michal = michal.bind(report)(offset);
 37: // try_start_0 // try_start_1
                            oscard = _closure1_slot1;
                            golfie = _closure1_slot2;
                            michal = 15;
                            michal = golfie[michal];
                            option = oscard.bind(report)(michal);
                            golfie = option.sendVerificationEmail;
                            oscard = _closure2_slot0;
                            michal = _closure3_slot0;
                            michal = golfie.bind(option)(oscard, offset, michal);
                            SaveGenerator(address=88);
 86:
                            return michal;
 88:
                            ResumeGenerator(result_out_reg=1, return_bool_out_reg=5);
                            if(oscard) { _fun00006_ip = 149; continue _fun00005 }
 94:
                            option = _closure2_slot3;
                            golfie = option.push;
                            tangon = _closure1_slot9;
                            oscard = tangon.VERIFY_PIN;
                            tangon = {};
                            offset = _closure2_slot0;
                            tangon['email'] = offset;
                            offset = _closure2_slot1;
                            tangon['onClose'] = offset;
                            verify = _closure3_slot0;
                            tangon['guildId'] = verify;
                            tangon = golfie.bind(option)(oscard, tangon);
 147: // try_end0
                            _fun00006_ip = 226; continue _fun00005;
 149: // try_end1
                            oscard = _closure2_slot7;
                            tangon = false;
                            tangon = oscard.bind(report)(tangon);
                            return michal;
 163: // try_start_2 // catch_target0
                            CatchBlockStart(arg_register=6);
                            tangon = _closure2_slot5;
                            oscard = _closure1_slot0;
                            option = _closure1_slot2;
                            michal = 16;
                            michal = option[michal];
                            michal = oscard.bind(report)(michal);
                            michal = michal.APIError;
                            oscard = michal.prototype;
                            oscard = Object.create(oscard, {constructor: {value: michal}});
                            backup = oscard;
                            foxtra = golfie;
                            michal = new backup[michal](foxtra, romeon);
                            michal = michal instanceof Object ? michal : oscard;
                            michal = tangon.bind(report)(michal);
 226: // try_end2
                            tangon = _closure2_slot7;
                            michal = false;
                            michal = tangon.bind(report)(michal);
                            return report;
 240: // catch_target1 // catch_target2
                            CatchBlockStart(arg_register=1);
                            tangon = _closure2_slot7;
                            zuuluu = false;
                            zuuluu = tangon.bind(report)(zuuluu);
                            throw michal;
 255:
                            return entity;
                        }
                    };
                    return entity;
                };
                oscard = golfie.bind(zuuluu)(oscard);
                entity['signup'] = oscard;
                entity['guildInfo'] = report;
                report = _closure2_slot6;
                entity['loading'] = report;
                entity = tangon.bind(zuuluu)(michal, entity);
                return entity;
            };
            oscard['renderItem'] = romeon;
            romeon = function(argFoo) { // Original name: keyExtractor
                entity = argFoo;
                entity = entity.id;
                return entity;
            };
            oscard['keyExtractor'] = romeon;
            romeon = function() { // Original name: ListEmptyComponent
                tangon = _closure1_slot10;
                zuuluu = _closure1_slot14;
                michal = undefined;
                entity = {};
                entity = tangon.bind(michal)(zuuluu, entity);
                return entity;
            };
            oscard['ListEmptyComponent'] = romeon;
            offset = function() { // Original name: ItemSeparatorComponent
                tangon = _closure1_slot10;
                zuuluu = _closure1_slot6;
                michal = {};
                entity = {};
                report = 8;
                entity['height'] = report;
                michal['style'] = entity;
                entity = undefined;
                entity = tangon.bind(entity)(zuuluu, michal);
                return entity;
            };
            oscard['ItemSeparatorComponent'] = offset;
            verify = verify.scrollContainer;
            oscard['style'] = verify;
            verify = {};
            offset = 16;
            yankee = yankee + offset;
            verify['paddingBottom'] = yankee;
            verify['paddingTop'] = offset;
            oscard['contentContainerStyle'] = verify;
            oscard = option.bind(tangon)(golfie, oscard);
            report[1] = oscard;
            entity['children'] = report;
            entity = zuuluu.bind(tangon)(michal, entity);
            return entity;
        }
    };
    zuuluu['default'] = michal;
    return entity;
})();