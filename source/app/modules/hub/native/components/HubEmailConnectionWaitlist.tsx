// app/modules/hub/native/components/HubEmailConnectionWaitlist.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    report = argBar;
    yankee = argBaz;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    var _closure1_slot1 = yankee;
    var _closure1_slot2 = oscard;
    entity = global;
    option = entity.Object;
    golfie = option.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(option)(zuuluu, entity, tangon);
    entity = 0;
    golfie = oscard[entity];
    tangon = argCor;
    entity = undefined;
    tangon = tangon.bind(entity)(golfie);
    var _closure1_slot3 = tangon;
    tangon = 1;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    golfie = tangon.View;
    var _closure1_slot4 = golfie;
    tangon = tangon.Image;
    var _closure1_slot5 = tangon;
    tangon = 2;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    offset = tangon.Fonts;
    tangon = 3;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    golfie = tangon.jsx;
    var _closure1_slot6 = golfie;
    tangon = tangon.jsxs;
    var _closure1_slot7 = tangon;
    tangon = 4;
    tangon = oscard[tangon];
    option = report.bind(entity)(tangon);
    golfie = option.createStyles;
    tangon = {};
    verify = {'flex': 1, 'alignItems': 'center', 'justifyContent': 'center'};
    tangon['container'] = verify;
    verify = {};
    romeon = 16;
    verify['marginBottom'] = romeon;
    tangon['header'] = verify;
    verify = {'fontFamily': null, 'color': null, 'fontSize': 24, 'textAlign': 'center', 'marginBottom': 8};
    offset = offset.PRIMARY_BOLD;
    verify['fontFamily'] = offset;
    offset = 5;
    offset = oscard[offset];
    offset = yankee.bind(entity)(offset);
    offset = offset.colors;
    offset = offset.HEADER_PRIMARY;
    verify['color'] = offset;
    tangon['title'] = verify;
    verify = {'textAlign': 'center', 'marginBottom': 16};
    tangon['description'] = verify;
    verify = {'paddingHorizontal': 16, 'width': '100%'};
    tangon['redesignButton'] = verify;
    verify = {'marginHorizontal': 16, 'flexGrow': 0};
    tangon['button'] = verify;
    tangon = golfie.bind(option)(tangon);
    var _closure1_slot8 = tangon;
    tangon = 13;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/hub/native/components/HubEmailConnectionWaitlist.tsx';
    tangon = report.bind(oscard)(tangon);
    michal = function(argFoo) { // Original name: HubEmailConnectionWaitlist
        michal = argFoo;
        result = michal.school;
        offset = michal.onClose;
        var _closure2_slot0 = offset;
        michal = _closure1_slot8;
        tangon = undefined;
        option = michal.bind(tangon)();
        backup = _closure1_slot0;
        kiloes = _closure1_slot2;
        michal = 6;
        michal = kiloes[michal];
        zuuluu = backup.bind(tangon)(michal);
        michal = zuuluu.useNavigation;
        oscard = michal.bind(zuuluu)();
        var _closure2_slot1 = oscard;
        report = _closure1_slot3;
        zuuluu = report.useLayoutEffect;
        michal = new Array(2);
        michal[0] = oscard;
        michal[1] = offset;
        entity = function() {
            zuuluu = _closure2_slot1;
            michal = zuuluu.setOptions;
            entity = {};
            tangon = function() { // Original name: headerLeft
                tangon = _closure1_slot6;
                option = _closure1_slot0;
                verify = _closure1_slot2;
                entity = 7;
                entity = verify[entity];
                zuuluu = undefined;
                entity = option.bind(zuuluu)(entity);
                michal = entity.HeaderActionButton;
                entity = {};
                report = 8;
                oscard = verify[report];
                oscard = option.bind(zuuluu)(oscard);
                golfie = oscard.intl;
                oscard = golfie.string;
                report = verify[report];
                report = option.bind(zuuluu)(report);
                report = report.t;
                report = report.cpT0Cg;
                report = oscard.bind(golfie)(report);
                entity['text'] = report;
                report = _closure2_slot0;
                entity['onPress'] = report;
                entity = tangon.bind(zuuluu)(michal, entity);
                return entity;
            };
            entity['headerLeft'] = tangon;
            entity = michal.bind(zuuluu)(entity);
            entity = undefined;
            return entity;
        };
        entity = zuuluu.bind(report)(entity, michal);
        zuuluu = _closure1_slot7;
        michal = _closure1_slot4;
        entity = {};
        report = option.container;
        entity['style'] = report;
        golfie = _closure1_slot6;
        oscard = _closure1_slot5;
        report = {};
        yankee = _closure1_slot1;
        verify = 9;
        verify = kiloes[verify];
        verify = yankee.bind(tangon)(verify);
        report['source'] = verify;
        verify = option.header;
        report['style'] = verify;
        oscard = golfie.bind(tangon)(oscard, report);
        report = new Array(4);
        report[0] = oscard;
        oscard = 10;
        oscard = kiloes[oscard];
        oscard = backup.bind(tangon)(oscard);
        verify = oscard.LegacyText;
        oscard = {};
        yankee = option.title;
        oscard['style'] = yankee;
        yankee = 'header';
        oscard['accessibilityRole'] = yankee;
        yankee = 8;
        romeon = kiloes[yankee];
        romeon = backup.bind(tangon)(romeon);
        sizing = romeon.intl;
        foxtra = sizing.string;
        romeon = kiloes[yankee];
        romeon = backup.bind(tangon)(romeon);
        romeon = romeon.t;
        romeon = romeon.OaloU1;
        romeon = foxtra.bind(sizing)(romeon);
        oscard['children'] = romeon;
        oscard = golfie.bind(tangon)(verify, oscard);
        report[1] = oscard;
        oscard = 11;
        oscard = kiloes[oscard];
        oscard = backup.bind(tangon)(oscard);
        verify = oscard.Text;
        oscard = {'style': null, 'variant': 'text-sm/medium', 'color': 'header-secondary'};
        romeon = option.description;
        oscard['style'] = romeon;
        romeon = kiloes[yankee];
        romeon = backup.bind(tangon)(romeon);
        output = romeon.intl;
        sizing = output.format;
        romeon = kiloes[yankee];
        romeon = backup.bind(tangon)(romeon);
        romeon = romeon.t;
        foxtra = romeon.Rs7MXF;
        romeon = {};
        romeon['school'] = result;
        romeon = sizing.bind(output)(foxtra, romeon);
        oscard['children'] = romeon;
        oscard = golfie.bind(tangon)(verify, oscard);
        report[2] = oscard;
        oscard = {};
        option = option.redesignButton;
        oscard['style'] = option;
        option = 12;
        option = kiloes[option];
        option = backup.bind(tangon)(option);
        verify = option.Button;
        option = {};
        romeon = 'lg';
        option['size'] = romeon;
        romeon = kiloes[yankee];
        romeon = backup.bind(tangon)(romeon);
        foxtra = romeon.intl;
        romeon = foxtra.string;
        yankee = kiloes[yankee];
        yankee = backup.bind(tangon)(yankee);
        yankee = yankee.t;
        yankee = yankee.i4jeWV;
        yankee = romeon.bind(foxtra)(yankee);
        option['text'] = yankee;
        option['onPress'] = offset;
        option = golfie.bind(tangon)(verify, option);
        oscard['children'] = option;
        oscard = golfie.bind(tangon)(michal, oscard);
        report[3] = oscard;
        entity['children'] = report;
        entity = zuuluu.bind(tangon)(michal, entity);
        return entity;
    };
    zuuluu['default'] = michal;
    return entity;
})();