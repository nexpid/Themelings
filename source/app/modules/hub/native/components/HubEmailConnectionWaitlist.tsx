// app/modules/hub/native/components/HubEmailConnectionWaitlist.tsx
export default (function(argFoo, argBar, argBaz, argCorge, _, argFred, argPlugh) {
    report = argBar;
    yankee = argBaz;
    zulu = argFred;
    oscar = argPlugh;
    var _closure1_slot0 = report;
    var _closure1_slot1 = yankee;
    var _closure1_slot2 = oscar;
    entity = global;
    options = entity.Object;
    golf = options.defineProperty;
    tango = {};
    entity = true;
    tango['value'] = entity;
    entity = '__esModule';
    entity = golf.bind(options)(zulu, entity, tango);
    entity = 0;
    golf = oscar[entity];
    tango = argCorge;
    entity = undefined;
    tango = tango.bind(entity)(golf);
    var _closure1_slot3 = tango;
    tango = 1;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    golf = tango.View;
    var _closure1_slot4 = golf;
    tango = tango.Image;
    var _closure1_slot5 = tango;
    tango = 2;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    offset = tango.Fonts;
    tango = 3;
    golf = oscar[tango];
    golf = report.bind(entity)(golf);
    golf = golf.jsx;
    var _closure1_slot6 = golf;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.jsxs;
    var _closure1_slot7 = tango;
    tango = 4;
    tango = oscar[tango];
    options = report.bind(entity)(tango);
    golf = options.createStyles;
    tango = {};
    verify = {'flex': 1, 'alignItems': 'center', 'justifyContent': 'center'};
    tango['container'] = verify;
    verify = {};
    romeo = 16;
    verify['marginBottom'] = romeo;
    tango['header'] = verify;
    verify = {'fontFamily': null, 'color': null, 'fontSize': 24, 'textAlign': 'center', 'marginBottom': 8};
    offset = offset.PRIMARY_BOLD;
    verify['fontFamily'] = offset;
    offset = 5;
    offset = oscar[offset];
    offset = yankee.bind(entity)(offset);
    offset = offset.colors;
    offset = offset.HEADER_PRIMARY;
    verify['color'] = offset;
    tango['title'] = verify;
    verify = {'textAlign': 'center', 'marginBottom': 16};
    tango['description'] = verify;
    verify = {'paddingHorizontal': 16, 'width': '100%'};
    tango['redesignButton'] = verify;
    verify = {'marginHorizontal': 16, 'flexGrow': 0};
    tango['button'] = verify;
    tango = golf.bind(options)(tango);
    var _closure1_slot8 = tango;
    tango = 13;
    tango = oscar[tango];
    oscar = report.bind(entity)(tango);
    report = oscar.fileFinishedImporting;
    tango = 'modules/hub/native/components/HubEmailConnectionWaitlist.tsx';
    tango = report.bind(oscar)(tango);
    mike = function(argFoo) { // Original name: HubEmailConnectionWaitlist
        mike = argFoo;
        result = mike.school;
        offset = mike.onClose;
        var _closure2_slot0 = offset;
        mike = _closure1_slot8;
        tango = undefined;
        options = mike.bind(tango)();
        backup = _closure1_slot0;
        kilo = _closure1_slot2;
        mike = 6;
        mike = kilo[mike];
        zulu = backup.bind(tango)(mike);
        mike = zulu.useNavigation;
        oscar = mike.bind(zulu)();
        var _closure2_slot1 = oscar;
        report = _closure1_slot3;
        zulu = report.useLayoutEffect;
        mike = new Array(2);
        mike[0] = oscar;
        mike[1] = offset;
        entity = function() {
            zulu = _closure2_slot1;
            mike = zulu.setOptions;
            entity = {};
            tango = function() { // Original name: headerLeft
                tango = _closure1_slot6;
                options = _closure1_slot0;
                verify = _closure1_slot2;
                entity = 7;
                entity = verify[entity];
                zulu = undefined;
                entity = options.bind(zulu)(entity);
                mike = entity.HeaderActionButton;
                entity = {};
                report = 8;
                oscar = verify[report];
                oscar = options.bind(zulu)(oscar);
                golf = oscar.intl;
                oscar = golf.string;
                report = verify[report];
                report = options.bind(zulu)(report);
                report = report.t;
                report = report.cpT0Cg;
                report = oscar.bind(golf)(report);
                entity['text'] = report;
                report = _closure2_slot0;
                entity['onPress'] = report;
                entity = tango.bind(zulu)(mike, entity);
                return entity;
            };
            entity['headerLeft'] = tango;
            entity = mike.bind(zulu)(entity);
            entity = undefined;
            return entity;
        };
        entity = zulu.bind(report)(entity, mike);
        zulu = _closure1_slot7;
        mike = _closure1_slot4;
        entity = {};
        report = options.container;
        entity['style'] = report;
        golf = _closure1_slot6;
        oscar = _closure1_slot5;
        report = {};
        yankee = _closure1_slot1;
        verify = 9;
        verify = kilo[verify];
        verify = yankee.bind(tango)(verify);
        report['source'] = verify;
        verify = options.header;
        report['style'] = verify;
        oscar = golf.bind(tango)(oscar, report);
        report = new Array(4);
        report[0] = oscar;
        oscar = 10;
        oscar = kilo[oscar];
        oscar = backup.bind(tango)(oscar);
        verify = oscar.LegacyText;
        oscar = {};
        yankee = options.title;
        oscar['style'] = yankee;
        yankee = 'header';
        oscar['accessibilityRole'] = yankee;
        yankee = 8;
        romeo = kilo[yankee];
        romeo = backup.bind(tango)(romeo);
        sizing = romeo.intl;
        foxtrot = sizing.string;
        romeo = kilo[yankee];
        romeo = backup.bind(tango)(romeo);
        romeo = romeo.t;
        romeo = romeo.OaloU1;
        romeo = foxtrot.bind(sizing)(romeo);
        oscar['children'] = romeo;
        oscar = golf.bind(tango)(verify, oscar);
        report[1] = oscar;
        oscar = 11;
        oscar = kilo[oscar];
        oscar = backup.bind(tango)(oscar);
        verify = oscar.Text;
        oscar = {'style': null, 'variant': 'text-sm/medium', 'color': 'header-secondary'};
        romeo = options.description;
        oscar['style'] = romeo;
        romeo = kilo[yankee];
        romeo = backup.bind(tango)(romeo);
        output = romeo.intl;
        sizing = output.format;
        romeo = kilo[yankee];
        romeo = backup.bind(tango)(romeo);
        romeo = romeo.t;
        foxtrot = romeo.Rs7MXF;
        romeo = {};
        romeo['school'] = result;
        romeo = sizing.bind(output)(foxtrot, romeo);
        oscar['children'] = romeo;
        oscar = golf.bind(tango)(verify, oscar);
        report[2] = oscar;
        oscar = {};
        options = options.redesignButton;
        oscar['style'] = options;
        options = 12;
        options = kilo[options];
        options = backup.bind(tango)(options);
        verify = options.Button;
        options = {};
        romeo = 'lg';
        options['size'] = romeo;
        romeo = kilo[yankee];
        romeo = backup.bind(tango)(romeo);
        foxtrot = romeo.intl;
        romeo = foxtrot.string;
        yankee = kilo[yankee];
        yankee = backup.bind(tango)(yankee);
        yankee = yankee.t;
        yankee = yankee.i4jeWV;
        yankee = romeo.bind(foxtrot)(yankee);
        options['text'] = yankee;
        options['onPress'] = offset;
        options = golf.bind(tango)(verify, options);
        oscar['children'] = options;
        oscar = golf.bind(tango)(mike, oscar);
        report[3] = oscar;
        entity['children'] = report;
        entity = zulu.bind(tango)(mike, entity);
        return entity;
    };
    zulu['default'] = mike;
    return entity;
})();