// app/modules/rpc/native/server/transports/WebViewWindowProxySocketFactory.tsx
export default (function(argFoo, argBar, argBaz, _, __, argFred, argPlugh) {
    zulu = argFred;
    tango = argPlugh;
    entity = argBaz;
    var _closure1_slot0 = entity;
    var _closure1_slot1 = tango;
    entity = global;
    golf = entity.Object;
    oscar = golf.defineProperty;
    report = {};
    entity = true;
    report['value'] = entity;
    entity = '__esModule';
    entity = oscar.bind(golf)(zulu, entity, report);
    entity = 2;
    report = tango[entity];
    tango = argBar;
    entity = undefined;
    oscar = tango.bind(entity)(report);
    report = oscar.fileFinishedImporting;
    tango = 'modules/rpc/native/server/transports/WebViewWindowProxySocketFactory.tsx';
    tango = report.bind(oscar)(tango);
    mike = function(argFoo) { // Original name: _default
        entity = argFoo;
        offset = entity.origin;
        verify = entity.postMessageToRPCClient;
        options = entity.frameId;
        golf = entity.version;
        oscar = entity.encoding;
        report = entity.logger;
        var _closure2_slot0 = report;
        tango = entity.postClose;
        yankee = _closure1_slot0;
        zulu = _closure1_slot1;
        entity = 0;
        zulu = zulu[entity];
        entity = undefined;
        zulu = yankee.bind(entity)(zulu);
        entity = {};
        entity['origin'] = offset;
        entity['postMessageToRPCClient'] = verify;
        entity['frameId'] = options;
        entity['version'] = golf;
        entity['encoding'] = oscar;
        entity['logger'] = report;
        entity['postClose'] = tango;
        mike = function(argFoo, argBar) { // Original name: onSendingToRPCClient
            report = _closure2_slot0;
            tango = report.info;
            entity = global;
            entity = entity.HermesInternal;
            zulu = entity.concat;
            mike = 'Socket Emit: ';
            entity = argBar;
            zulu = zulu.bind(mike)(entity);
            oscar = _closure1_slot0;
            mike = _closure1_slot1;
            entity = 1;
            mike = mike[entity];
            entity = undefined;
            oscar = oscar.bind(entity)(mike);
            mike = argFoo;
            mike = oscar.bind(entity)(mike);
            mike = tango.bind(report)(zulu, mike);
            return entity;
        };
        entity['onSendingToRPCClient'] = mike;
        mike = zulu.prototype;
        mike = Object.create(mike, {constructor: {value: zulu}});
        foxtrot = mike;
        romeo = entity;
        entity = new foxtrot[zulu](romeo, yankee);
        entity = entity instanceof Object ? entity : mike;
        return entity;
    };
    zulu['default'] = mike;
    return entity;
})();