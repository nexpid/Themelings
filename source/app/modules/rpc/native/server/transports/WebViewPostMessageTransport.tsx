// app/modules/rpc/native/server/transports/WebViewPostMessageTransport.tsx
export default (function(argFoo, argBar, argBaz, _, __, argFre, argPlu) {
    report = argBar;
    golfie = argBaz;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = golfie;
    var _closure1_slot1 = oscard;
    entity = global;
    verify = entity.Object;
    option = verify.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = option.bind(verify)(zuuluu, entity, tangon);
    entity = 0;
    tangon = oscard[entity];
    entity = undefined;
    verify = golfie.bind(entity)(tangon);
    tangon = verify.prototype;
    option = Object.create(tangon, {constructor: {value: verify}});
    backup = 'RPCServer:PostMessage';
    kiloes = option;
    tangon = new kiloes[verify](backup, foxtra);
    foxtra = tangon instanceof Object ? tangon : option;
    tangon = 2;
    tangon = oscard[tangon];
    verify = golfie.bind(entity)(tangon);
    tangon = 3;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    option = tangon.validateSocketClient;
    tangon = 4;
    tangon = oscard[tangon];
    romeon = golfie.bind(entity)(tangon);
    tangon = verify.prototype;
    tangon = Object.create(tangon, {constructor: {value: verify}});
    yankee = function(argFoo, argBar, argBaz) {
        report = argBar;
        tangon = report.info;
        entity = argBaz;
        zuuluu = entity.id;
        entity = global;
        entity = entity.HermesInternal;
        michal = entity.concat;
        entity = 'Socket Message: ';
        zuuluu = michal.bind(entity)(zuuluu);
        oscard = _closure1_slot0;
        michal = _closure1_slot1;
        entity = 1;
        michal = michal[entity];
        entity = undefined;
        oscard = oscard.bind(entity)(michal);
        michal = argFoo;
        michal = oscard.bind(entity)(michal);
        michal = tangon.bind(report)(zuuluu, michal);
        return entity;
    };
    kiloes = tangon;
    backup = option;
    michal = new kiloes[verify](backup, foxtra, romeon, yankee, offset);
    michal = michal instanceof Object ? michal : tangon;
    tangon = 5;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/rpc/native/server/transports/WebViewPostMessageTransport.tsx';
    tangon = report.bind(oscard)(tangon);
    zuuluu['default'] = michal;
    return entity;
})();