// app/modules/rpc/native/server/commands/voiceSettings.tsx
export default (function(_, argBar, __, ___, ____, argFre, argPlu) {
    report = argBar;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    var _closure1_slot1 = oscard;
    entity = global;
    golfie = entity.Object;
    tangon = golfie.defineProperty;
    michal = {};
    entity = true;
    michal['value'] = entity;
    entity = '__esModule';
    entity = tangon.bind(golfie)(zuuluu, entity, michal);
    entity = 0;
    michal = oscard[entity];
    entity = undefined;
    michal = report.bind(entity)(michal);
    offset = michal.RPC_SCOPE_CONFIG;
    michal = {};
    tangon = 1;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.RPCCommands;
    golfie = tangon.GET_VOICE_SETTINGS;
    tangon = {};
    verify = {};
    yankee = offset.ANY;
    romeon = 2;
    offset = oscard[romeon];
    offset = report.bind(entity)(offset);
    offset = offset.OAuth2Scopes;
    foxtra = offset.RPC;
    offset = new Array(2);
    offset[0] = foxtra;
    romeon = oscard[romeon];
    romeon = report.bind(entity)(romeon);
    romeon = romeon.OAuth2Scopes;
    romeon = romeon.RPC_VOICE_READ;
    offset[1] = romeon;
    verify[yankee] = offset;
    tangon['scope'] = verify;
    option = function() { // Original name: handler
        zuuluu = _closure1_slot0;
        michal = _closure1_slot1;
        entity = 3;
        michal = michal[entity];
        entity = undefined;
        michal = zuuluu.bind(entity)(michal);
        entity = michal.getDeprecatedVoiceSettings;
        entity = entity.bind(michal)();
        return entity;
    };
    tangon['handler'] = option;
    michal[golfie] = tangon;
    tangon = 4;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/rpc/native/server/commands/voiceSettings.tsx';
    tangon = report.bind(oscard)(tangon);
    zuuluu['default'] = michal;
    return entity;
})();