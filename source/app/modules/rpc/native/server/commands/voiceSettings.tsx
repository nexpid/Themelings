// app/modules/rpc/native/server/commands/voiceSettings.tsx
export default (function(_, argBar, __, ___, ____, argFred, argPlugh) {
    report = argBar;
    zulu = argFred;
    oscar = argPlugh;
    var _closure1_slot0 = report;
    var _closure1_slot1 = oscar;
    entity = global;
    golf = entity.Object;
    tango = golf.defineProperty;
    mike = {};
    entity = true;
    mike['value'] = entity;
    entity = '__esModule';
    entity = tango.bind(golf)(zulu, entity, mike);
    entity = 0;
    mike = oscar[entity];
    entity = undefined;
    mike = report.bind(entity)(mike);
    offset = mike.RPC_SCOPE_CONFIG;
    mike = {};
    tango = 1;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.RPCCommands;
    golf = tango.GET_VOICE_SETTINGS;
    tango = {};
    verify = {};
    yankee = offset.ANY;
    romeo = 2;
    offset = oscar[romeo];
    offset = report.bind(entity)(offset);
    offset = offset.OAuth2Scopes;
    foxtrot = offset.RPC;
    offset = new Array(2);
    offset[0] = foxtrot;
    romeo = oscar[romeo];
    romeo = report.bind(entity)(romeo);
    romeo = romeo.OAuth2Scopes;
    romeo = romeo.RPC_VOICE_READ;
    offset[1] = romeo;
    verify[yankee] = offset;
    tango['scope'] = verify;
    options = function() { // Original name: handler
        zulu = _closure1_slot0;
        mike = _closure1_slot1;
        entity = 3;
        mike = mike[entity];
        entity = undefined;
        mike = zulu.bind(entity)(mike);
        entity = mike.getDeprecatedVoiceSettings;
        entity = entity.bind(mike)();
        return entity;
    };
    tango['handler'] = options;
    mike[golf] = tango;
    tango = 4;
    tango = oscar[tango];
    oscar = report.bind(entity)(tango);
    report = oscar.fileFinishedImporting;
    tango = 'modules/rpc/native/server/commands/voiceSettings.tsx';
    tango = report.bind(oscar)(tango);
    zulu['default'] = mike;
    return entity;
})();