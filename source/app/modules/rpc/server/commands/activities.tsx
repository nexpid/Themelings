// app/modules/rpc/server/commands/activities.tsx
export default (function(argFoo, argBar, _, __, ___, argFre, argPlu) {
    report = argBar;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    var _closure1_slot1 = oscard;
    entity = global;
    golfie = entity.Object;
    tangon = golfie.defineProperty;
    michal = {};
    entity = true;
    michal['value'] = entity;
    entity = '__esModule';
    entity = tangon.bind(golfie)(zuuluu, entity, michal);
    entity = 0;
    michal = oscard[entity];
    entity = undefined;
    michal = report.bind(entity)(michal);
    tangon = michal.RPCCommands;
    michal = {};
    golfie = tangon.GET_ACTIVITY_INSTANCE_CONNECTED_PARTICIPANTS;
    option = 1;
    option = oscard[option];
    offset = report.bind(entity)(option);
    verify = offset.createRPCCommand;
    option = tangon.GET_ACTIVITY_INSTANCE_CONNECTED_PARTICIPANTS;
    tangon = {};
    romeon = 2;
    romeon = oscard[romeon];
    romeon = report.bind(entity)(romeon);
    romeon = romeon.activityInstanceConnectedParticipantsScope;
    tangon['scope'] = romeon;
    yankee = function(argFoo) { // Original name: handler
        entity = argFoo;
        entity = entity.socket;
        zuuluu = _closure1_slot0;
        tangon = _closure1_slot1;
        michal = 3;
        report = tangon[michal];
        michal = undefined;
        oscard = zuuluu.bind(michal)(report);
        report = oscard.validatePostMessageTransport;
        entity = entity.transport;
        entity = report.bind(oscard)(entity);
        entity = 2;
        entity = tangon[entity];
        michal = zuuluu.bind(michal)(entity);
        entity = michal.activityInstanceConnectedParticipants;
        entity = entity.bind(michal)();
        return entity;
    };
    tangon['handler'] = yankee;
    tangon = verify.bind(offset)(option, tangon);
    michal[golfie] = tangon;
    tangon = 4;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/rpc/server/commands/activities.tsx';
    tangon = report.bind(oscard)(tangon);
    zuuluu['default'] = michal;
    return entity;
})();