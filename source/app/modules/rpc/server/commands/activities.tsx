// app/modules/rpc/server/commands/activities.tsx
export default (function(global, require, metroImportDefault, metroImportAll, moduleObject, exports, dependencyMap) {
    var5 = require;
    var3 = exports;
    var6 = dependencyMap;
    var _closure1_slot0 = var5;
    var _closure1_slot1 = var6;
    var1 = global;
    var7 = var1.Object;
    var4 = var7.defineProperty;
    var2 = {};
    var1 = true;
    var2['value'] = var1;
    var1 = '__esModule';
    var1 = var4.bind(var7)(var3, var1, var2);
    var1 = 0;
    var2 = var6[var1];
    var1 = undefined;
    var2 = var5.bind(var1)(var2);
    var4 = var2.RPCCommands;
    var2 = {};
    var7 = var4.GET_ACTIVITY_INSTANCE_CONNECTED_PARTICIPANTS;
    var8 = 1;
    var8 = var6[var8];
    var10 = var5.bind(var1)(var8);
    var9 = var10.createRPCCommand;
    var8 = var4.GET_ACTIVITY_INSTANCE_CONNECTED_PARTICIPANTS;
    var4 = {};
    var12 = 2;
    var12 = var6[var12];
    var12 = var5.bind(var1)(var12);
    var12 = var12.activityInstanceConnectedParticipantsScope;
    var4['scope'] = var12;
    var11 = function handler(arg1) {
        var1 = arg1;
        var1 = var1.socket;
        var3 = _closure1_slot0;
        var4 = _closure1_slot1;
        var2 = 3;
        var5 = var4[var2];
        var2 = undefined;
        var6 = var3.bind(var2)(var5);
        var5 = var6.validatePostMessageTransport;
        var1 = var1.transport;
        var1 = var5.bind(var6)(var1);
        var1 = 2;
        var1 = var4[var1];
        var2 = var3.bind(var2)(var1);
        var1 = var2.activityInstanceConnectedParticipants;
        var1 = var1.bind(var2)();
        return var1;
    };
    var4['handler'] = var11;
    var4 = var9.bind(var10)(var8, var4);
    var2[var7] = var4;
    var4 = 4;
    var4 = var6[var4];
    var6 = var5.bind(var1)(var4);
    var5 = var6.fileFinishedImporting;
    var4 = 'modules/rpc/server/commands/activities.tsx';
    var4 = var5.bind(var6)(var4);
    var3['default'] = var2;
    return var1;
})();