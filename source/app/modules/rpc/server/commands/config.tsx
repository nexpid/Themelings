// app/modules/rpc/server/commands/config.tsx
export default (function(native1, native2, native3, native4, native5, native6, native7) {
    var5 = native2;
    var3 = native6;
    var6 = native7;
    var1 = native3;
    var _closure1_slot0 = var1;
    var _closure1_slot1 = var6;
    var1 = global;
    var7 = var1.Object;
    var4 = var7.defineProperty;
    var2 = {};
    var1 = true;
    var2['value'] = var1;
    var1 = '__esModule';
    var1 = var4.bind(var7)(var3, var1, var2);
    var1 = 0;
    var2 = var6[var1];
    var1 = undefined;
    var2 = var5.bind(var1)(var2);
    var4 = var2.TransportTypes;
    var _closure1_slot2 = var4;
    var9 = var2.RPC_AUTHENTICATED_SCOPE;
    var2 = 1;
    var2 = var6[var2];
    var2 = var5.bind(var1)(var2);
    var4 = var2.RPCCommands;
    var2 = var2.RPCErrors;
    var _closure1_slot3 = var2;
    var2 = {};
    var7 = var4.SET_CONFIG;
    var4 = {};
    var4['scope'] = var9;
    var9 = function validation(arg1) {
        var5 = arg1;
        var3 = _closure1_slot0;
        var2 = _closure1_slot1;
        var1 = 2;
        var1 = var2[var1];
        var2 = undefined;
        var1 = var3.bind(var2)(var1);
        var2 = var1.bind(var2)(var5);
        var1 = var2.required;
        var3 = var1.bind(var2)();
        var2 = var3.keys;
        var1 = {};
        var4 = var5.boolean;
        var4 = var4.bind(var5)();
        var1['use_interactive_pip'] = var4;
        var1 = var2.bind(var3)(var1);
        return var1;
    };
    var4['validation'] = var9;
    var8 = function handler(arg1) {
        _fun0001: for(var _fun0001_ip = 0; ; ) switch(_fun0001_ip) {
 0:
            var2 = arg1;
            var1 = var2.socket;
            var2 = var2.args;
            var6 = var2.use_interactive_pip;
            var4 = var1.transport;
            var3 = _closure1_slot2;
            var3 = var3.POST_MESSAGE;
            if(!(var4 === var3)) { _fun0001_ip = 230; continue _fun0001 }
 47:
            var3 = var1.application;
            var4 = var3.id;
            var3 = null;
            if(!(var3 != var4)) { _fun0001_ip = 160; continue _fun0001 }
 63:
            var5 = _closure1_slot0;
            var4 = _closure1_slot1;
            var3 = 4;
            var4 = var4[var3];
            var3 = undefined;
            var5 = var5.bind(var3)(var4);
            var4 = var5.dispatch;
            var3 = {};
            var7 = 'EMBEDDED_ACTIVITY_SET_CONFIG';
            var3['type'] = var7;
            var7 = var1.application;
            var7 = var7.id;
            var3['applicationId'] = var7;
            var7 = {};
            var7['useInteractivePIP'] = var6;
            var3['config'] = var7;
            var3 = var4.bind(var5)(var3);
            var3 = global;
            var5 = var3.Promise;
            var4 = var5.resolve;
            var3 = {};
            var3['use_interactive_pip'] = var6;
            var3 = var4.bind(var5)(var3);
            return var3;
 160:
            var5 = _closure1_slot0;
            var4 = _closure1_slot1;
            var3 = 3;
            var4 = var4[var3];
            var3 = undefined;
            var6 = var5.bind(var3)(var4);
            var5 = {};
            var3 = _closure1_slot3;
            var3 = var3.INVALID_COMMAND;
            var5['errorCode'] = var3;
            var3 = var6.prototype;
            var4 = Object.create(var3, {constructor: {value: var6}});
            var9 = 'invalid application';
            var11 = var4;
            var10 = var5;
            var3 = new var11[var6](var10, var9, var8);
            var3 = var3 instanceof Object ? var3 : var4;
            throw var3;
 230:
            var5 = _closure1_slot0;
            var4 = _closure1_slot1;
            var3 = 3;
            var4 = var4[var3];
            var3 = undefined;
            var4 = var5.bind(var3)(var4);
            var3 = {};
            var2 = _closure1_slot3;
            var2 = var2.INVALID_COMMAND;
            var3['errorCode'] = var2;
            var6 = var1.transport;
            var1 = global;
            var1 = var1.HermesInternal;
            var5 = var1.concat;
            var2 = 'command not available from "';
            var1 = ' transport';
            var9 = var5.bind(var2)(var6, var1);
            var2 = var4.prototype;
            var2 = Object.create(var2, {constructor: {value: var4}});
            var11 = var2;
            var10 = var3;
            var1 = new var11[var4](var10, var9, var8);
            var1 = var1 instanceof Object ? var1 : var2;
            throw var1;
        }
    };
    var4['handler'] = var8;
    var2[var7] = var4;
    var4 = 5;
    var4 = var6[var4];
    var6 = var5.bind(var1)(var4);
    var5 = var6.fileFinishedImporting;
    var4 = 'modules/rpc/server/commands/config.tsx';
    var4 = var5.bind(var6)(var4);
    var3['default'] = var2;
    return var1;
})();