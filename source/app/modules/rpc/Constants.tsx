// app/modules/rpc/Constants.tsx
export default (function(_, argBar, __, ___, ____, argFre, argPlu) {
    zuuluu = argFre;
    entity = global;
    report = entity.Object;
    tangon = report.defineProperty;
    michal = {};
    entity = true;
    michal['value'] = entity;
    entity = '__esModule';
    entity = tangon.bind(report)(zuuluu, entity, michal);
    oscard = {};
    entity = '$any';
    oscard['ANY'] = entity;
    entity = '$all';
    oscard['ALL'] = entity;
    report = {};
    entity = 'USER_SETTINGS';
    report['USER_SETTINGS'] = entity;
    entity = 'CHANGELOG';
    report['CHANGELOG'] = entity;
    entity = 'LIBRARY';
    report['LIBRARY'] = entity;
    entity = 'STORE_HOME';
    report['STORE_HOME'] = entity;
    entity = 'STORE_LISTING';
    report['STORE_LISTING'] = entity;
    entity = 'CHANNEL';
    report['CHANNEL'] = entity;
    entity = 'PICK_GUILD_SETTINGS';
    report['PICK_GUILD_SETTINGS'] = entity;
    entity = 'QUEST_HOME';
    report['QUEST_HOME'] = entity;
    entity = 'DISCOVERY_GAME_RESULTS';
    report['DISCOVERY_GAME_RESULTS'] = entity;
    entity = 'OAUTH2';
    report['OAUTH2'] = entity;
    tangon = {};
    michal = 101;
    tangon['APPLICATION_NOT_FOUND'] = michal;
    entity = 'APPLICATION_NOT_FOUND';
    tangon[michal] = entity;
    michal = 2022;
    tangon['DISK_LOW'] = michal;
    entity = 'DISK_LOW';
    tangon[michal] = entity;
    michal = 2025;
    tangon['DISK_PERMISSION_DENIED'] = michal;
    entity = 'DISK_PERMISSION_DENIED';
    tangon[michal] = entity;
    tangon['POST_INSTALL_FAILED'] = michal;
    entity = 'POST_INSTALL_FAILED';
    tangon[michal] = entity;
    michal = 2026;
    tangon['REDISTRIBUTABLE_INSTALL_FAILED'] = michal;
    entity = 'REDISTRIBUTABLE_INSTALL_FAILED';
    tangon[michal] = entity;
    michal = 2034;
    tangon['APPLICATION_LOAD_FAILED'] = michal;
    entity = 'APPLICATION_LOAD_FAILED';
    tangon[michal] = entity;
    michal = 2047;
    tangon['DESERIALIZATION_FAILED'] = michal;
    entity = 'DESERIALIZATION_FAILED';
    tangon[michal] = entity;
    michal = 2055;
    tangon['INTERRUPTED'] = michal;
    entity = 'INTERRUPTED';
    tangon[michal] = entity;
    michal = 2058;
    tangon['MAX_REQUEST_RETRIES_EXCEEDED'] = michal;
    entity = 'MAX_REQUEST_RETRIES_EXCEEDED';
    tangon[michal] = entity;
    michal = 2063;
    tangon['AUTHENTICATION_FAILED'] = michal;
    entity = 'AUTHENTICATION_FAILED';
    tangon[michal] = entity;
    michal = 2064;
    tangon['IO_PERMISSION_DENIED'] = michal;
    entity = 'IO_PERMISSION_DENIED';
    tangon[michal] = entity;
    michal = 2065;
    tangon['NO_MANIFESTS'] = michal;
    entity = 'NO_MANIFESTS';
    tangon[michal] = entity;
    michal = 2066;
    tangon['POST_INSTALL_CANCELLED'] = michal;
    entity = 'POST_INSTALL_CANCELLED';
    tangon[michal] = entity;
    michal = 2069;
    tangon['API_ERROR'] = michal;
    entity = 'API_ERROR';
    tangon[michal] = entity;
    michal = 2072;
    tangon['FILE_NAME_TOO_LONG'] = michal;
    entity = 'FILE_NAME_TOO_LONG';
    tangon[michal] = entity;
    michal = 2073;
    tangon['NOT_ENTITLED'] = michal;
    entity = 'NOT_ENTITLED';
    tangon[michal] = entity;
    michal = 2076;
    tangon['APPLICATION_LOCK_FAILED'] = michal;
    entity = 'APPLICATION_LOCK_FAILED';
    tangon[michal] = entity;
    michal = 2077;
    tangon['NOT_DIRECTORY'] = michal;
    entity = 'NOT_DIRECTORY';
    tangon[michal] = entity;
    michal = 2078;
    tangon['INVALID_DRIVE'] = michal;
    entity = 'INVALID_DRIVE';
    tangon[michal] = entity;
    michal = 2080;
    tangon['DISK_FULL'] = michal;
    entity = 'DISK_FULL';
    tangon[michal] = entity;
    michal = {};
    entity = 'ipc';
    michal['IPC'] = entity;
    entity = 'ws';
    michal['WEBSOCKET'] = entity;
    entity = 'http';
    michal['HTTP'] = entity;
    entity = 'post_message';
    michal['POST_MESSAGE'] = entity;
    golfie = argPlu;
    entity = 0;
    option = golfie[entity];
    golfie = argBar;
    entity = undefined;
    verify = golfie.bind(entity)(option);
    option = verify.fileFinishedImporting;
    golfie = 'modules/rpc/Constants.tsx';
    golfie = option.bind(verify)(golfie);
    zuuluu['RPC_SCOPE_CONFIG'] = oscard;
    oscard = 'RPC_PRIVATE_SCOPE';
    zuuluu['RPC_PRIVATE_SCOPE'] = oscard;
    oscard = 'RPC_PRIVATE_LIMITED_SCOPE';
    zuuluu['RPC_PRIVATE_LIMITED_SCOPE'] = oscard;
    oscard = 'RPC_LOCAL_SCOPE';
    zuuluu['RPC_LOCAL_SCOPE'] = oscard;
    oscard = 'RPC_AUTHENTICATED_SCOPE';
    zuuluu['RPC_AUTHENTICATED_SCOPE'] = oscard;
    oscard = 'RPC_EMBEDDED_APP_SCOPE';
    zuuluu['RPC_EMBEDDED_APP_SCOPE'] = oscard;
    zuuluu['RPCDeepLinks'] = report;
    zuuluu['DispatchErrorCodes'] = tangon;
    zuuluu['TransportTypes'] = michal;
    return entity;
})();