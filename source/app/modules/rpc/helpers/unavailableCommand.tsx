// app/modules/rpc/helpers/unavailableCommand.tsx
export default (function(argFoo, argBar, argBaz, _, __, argFre, argPlu) {
    oscard = argBar;
    zuuluu = argFre;
    golfie = argPlu;
    entity = argBaz;
    var _closure1_slot0 = entity;
    var _closure1_slot1 = golfie;
    entity = global;
    option = entity.Object;
    tangon = option.defineProperty;
    michal = {};
    entity = true;
    michal['value'] = entity;
    entity = '__esModule';
    entity = tangon.bind(option)(zuuluu, entity, michal);
    entity = 0;
    michal = golfie[entity];
    entity = undefined;
    michal = oscard.bind(entity)(michal);
    michal = michal.RPCErrors;
    var _closure1_slot2 = michal;
    tangon = {};
    michal = function(argFoo) { // Original name: handler
        tangon = _closure1_slot0;
        zuuluu = _closure1_slot1;
        michal = 1;
        zuuluu = zuuluu[michal];
        michal = undefined;
        tangon = tangon.bind(michal)(zuuluu);
        zuuluu = {};
        entity = _closure1_slot2;
        entity = entity.INVALID_COMMAND;
        zuuluu['errorCode'] = entity;
        entity = argFoo;
        report = entity.cmd;
        entity = global;
        entity = entity.HermesInternal;
        michal = entity.concat;
        entity = 'Unsupported command: ';
        oscard = michal.bind(entity)(report);
        michal = tangon.prototype;
        michal = Object.create(michal, {constructor: {value: tangon}});
        option = michal;
        golfie = zuuluu;
        entity = new option[tangon](golfie, oscard, report);
        entity = entity instanceof Object ? entity : michal;
        throw entity;
    };
    tangon['handler'] = michal;
    michal = {};
    report = function(argFoo) { // Original name: handler
        tangon = _closure1_slot0;
        zuuluu = _closure1_slot1;
        michal = 1;
        zuuluu = zuuluu[michal];
        michal = undefined;
        tangon = tangon.bind(michal)(zuuluu);
        zuuluu = {};
        entity = _closure1_slot2;
        entity = entity.INVALID_COMMAND;
        zuuluu['errorCode'] = entity;
        entity = argFoo;
        report = entity.cmd;
        entity = global;
        entity = entity.HermesInternal;
        michal = entity.concat;
        entity = 'Deprecated command: ';
        oscard = michal.bind(entity)(report);
        michal = tangon.prototype;
        michal = Object.create(michal, {constructor: {value: tangon}});
        option = michal;
        golfie = zuuluu;
        entity = new option[tangon](golfie, oscard, report);
        entity = entity instanceof Object ? entity : michal;
        throw entity;
    };
    michal['handler'] = report;
    report = 2;
    report = golfie[report];
    golfie = oscard.bind(entity)(report);
    oscard = golfie.fileFinishedImporting;
    report = 'modules/rpc/helpers/unavailableCommand.tsx';
    report = oscard.bind(golfie)(report);
    zuuluu['unsupportedCommand'] = tangon;
    zuuluu['deprecatedCommand'] = michal;
    return entity;
})();