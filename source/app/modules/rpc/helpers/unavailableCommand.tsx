// app/modules/rpc/helpers/unavailableCommand.tsx
export default (function(global, require, metroImportDefault, metroImportAll, moduleObject, exports, dependencyMap) {
    var6 = require;
    var3 = exports;
    var7 = dependencyMap;
    var1 = metroImportDefault;
    var _closure1_slot0 = var1;
    var _closure1_slot1 = var7;
    var1 = global;
    var8 = var1.Object;
    var4 = var8.defineProperty;
    var2 = {};
    var1 = true;
    var2['value'] = var1;
    var1 = '__esModule';
    var1 = var4.bind(var8)(var3, var1, var2);
    var1 = 0;
    var2 = var7[var1];
    var1 = undefined;
    var2 = var6.bind(var1)(var2);
    var2 = var2.RPCErrors;
    var _closure1_slot2 = var2;
    var4 = {};
    var2 = function handler(arg1) {
        var4 = _closure1_slot0;
        var3 = _closure1_slot1;
        var2 = 1;
        var3 = var3[var2];
        var2 = undefined;
        var4 = var4.bind(var2)(var3);
        var3 = {};
        var1 = _closure1_slot2;
        var1 = var1.INVALID_COMMAND;
        var3['errorCode'] = var1;
        var1 = arg1;
        var5 = var1.cmd;
        var1 = global;
        var1 = var1.HermesInternal;
        var2 = var1.concat;
        var1 = 'Unsupported command: ';
        var6 = var2.bind(var1)(var5);
        var2 = var4.prototype;
        var2 = Object.create(var2, {constructor: {value: var4}});
        var8 = var2;
        var7 = var3;
        var1 = new var8[var4](var7, var6, var5);
        var1 = var1 instanceof Object ? var1 : var2;
        throw var1;
    };
    var4['handler'] = var2;
    var2 = {};
    var5 = function handler(arg1) {
        var4 = _closure1_slot0;
        var3 = _closure1_slot1;
        var2 = 1;
        var3 = var3[var2];
        var2 = undefined;
        var4 = var4.bind(var2)(var3);
        var3 = {};
        var1 = _closure1_slot2;
        var1 = var1.INVALID_COMMAND;
        var3['errorCode'] = var1;
        var1 = arg1;
        var5 = var1.cmd;
        var1 = global;
        var1 = var1.HermesInternal;
        var2 = var1.concat;
        var1 = 'Deprecated command: ';
        var6 = var2.bind(var1)(var5);
        var2 = var4.prototype;
        var2 = Object.create(var2, {constructor: {value: var4}});
        var8 = var2;
        var7 = var3;
        var1 = new var8[var4](var7, var6, var5);
        var1 = var1 instanceof Object ? var1 : var2;
        throw var1;
    };
    var2['handler'] = var5;
    var5 = 2;
    var5 = var7[var5];
    var7 = var6.bind(var1)(var5);
    var6 = var7.fileFinishedImporting;
    var5 = 'modules/rpc/helpers/unavailableCommand.tsx';
    var5 = var6.bind(var7)(var5);
    var3['unsupportedCommand'] = var4;
    var3['deprecatedCommand'] = var2;
    return var1;
})();