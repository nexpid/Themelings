// app/modules/multi_account/native/MultiAccountManagerNative.tsx
export default (function(argFoo, argBar, argBaz, _, __, argFre, argPlu) {
    report = argBar;
    golfie = argBaz;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    var _closure1_slot1 = golfie;
    var _closure1_slot2 = oscard;
    entity = global;
    verify = entity.Object;
    option = verify.defineProperty;
    michal = {};
    entity = true;
    michal['value'] = entity;
    entity = '__esModule';
    entity = option.bind(verify)(zuuluu, entity, michal);
    entity = 0;
    michal = oscard[entity];
    entity = undefined;
    michal = report.bind(entity)(michal);
    michal = michal.SWITCH_ACCOUNTS_MODAL_KEY;
    var _closure1_slot3 = michal;
    michal = 1;
    michal = oscard[michal];
    michal = report.bind(entity)(michal);
    michal = michal.Routes;
    var _closure1_slot4 = michal;
    michal = null;
    var _closure1_slot5 = michal;
    michal = 2;
    michal = oscard[michal];
    golfie = golfie.bind(entity)(michal);
    michal = {};
    option = function() { // Original name: onSwitchStart
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            report = _closure1_slot1;
            michal = _closure1_slot2;
            entity = 3;
            tangon = michal[entity];
            entity = undefined;
            golfie = report.bind(entity)(tangon);
            oscard = golfie.pushLazy;
            report = _closure1_slot0;
            tangon = 5;
            tangon = michal[tangon];
            report = report.bind(entity)(tangon);
            tangon = 4;
            tangon = michal[tangon];
            michal = michal.paths;
            report = report.bind(entity)(tangon, michal);
            tangon = {};
            michal = 'switch-accounts-spinner-modal';
            michal = oscard.bind(golfie)(report, tangon, michal);
            tangon = _closure1_slot5;
            michal = null;
            if(!(michal !== tangon)) { _fun00002_ip = 107; continue _fun00001 }
 90:
            michal = global;
            tangon = michal.clearTimeout;
            michal = _closure1_slot5;
            michal = tangon.bind(entity)(michal);
 107:
            michal = global;
            report = michal.setTimeout;
            tangon = function() {
                zuuluu = _closure1_slot1;
                michal = _closure1_slot2;
                entity = 3;
                michal = michal[entity];
                entity = undefined;
                zuuluu = zuuluu.bind(entity)(michal);
                michal = zuuluu.popWithKey;
                entity = 'switch-accounts-spinner-modal';
                entity = michal.bind(zuuluu)(entity);
                return entity;
            };
            michal = 15000;
            michal = report.bind(entity)(tangon, michal);
            _closure1_slot5 = michal;
            return entity;
        }
    };
    michal['onSwitchStart'] = option;
    option = function(argFoo, argBar) { // Original name: onSwitchSuccess
        entity = argFoo;
        var _closure2_slot0 = entity;
        entity = argBar;
        var _closure2_slot1 = entity;
        entity = global;
        tangon = entity.setTimeout;
        entity = undefined;
        zuuluu = function() {
            _fun00003: for(var _fun00004_ip = 0; ; ) switch(_fun00004_ip) {
 0:
                entity = _closure2_slot1;
                if(!entity) { _fun00004_ip = 56; continue _fun00003 }
 10:
                tangon = _closure1_slot0;
                zuuluu = _closure1_slot2;
                michal = 6;
                zuuluu = zuuluu[michal];
                michal = undefined;
                zuuluu = tangon.bind(michal)(zuuluu);
                michal = zuuluu.transitionTo;
                entity = _closure1_slot4;
                entity = entity.ME;
                entity = michal.bind(zuuluu)(entity);
 56:
                oscard = _closure1_slot1;
                golfie = _closure1_slot2;
                entity = 7;
                michal = golfie[entity];
                entity = undefined;
                tangon = oscard.bind(entity)(michal);
                zuuluu = tangon.open;
                michal = {};
                option = 'SWITCH_ACCOUNTS_TOAST_LOGIN_SUCCESS';
                michal['key'] = option;
                option = _closure1_slot0;
                report = 8;
                verify = golfie[report];
                verify = option.bind(entity)(verify);
                offset = verify.intl;
                verify = offset.formatToPlainString;
                report = golfie[report];
                report = option.bind(entity)(report);
                report = report.t;
                option = report.wx7O3N;
                report = {};
                yankee = _closure2_slot0;
                yankee = yankee.username;
                report['username'] = yankee;
                report = verify.bind(offset)(option, report);
                michal['content'] = report;
                report = 9;
                report = golfie[report];
                report = oscard.bind(entity)(report);
                michal['icon'] = report;
                michal = zuuluu.bind(tangon)(michal);
                return entity;
            }
        };
        michal = 100;
        michal = tangon.bind(entity)(zuuluu, michal);
        return entity;
    };
    michal['onSwitchSuccess'] = option;
    option = function() { // Original name: onSwitchError
        oscard = _closure1_slot1;
        golfie = _closure1_slot2;
        entity = 7;
        michal = golfie[entity];
        entity = undefined;
        tangon = oscard.bind(entity)(michal);
        zuuluu = tangon.open;
        michal = {};
        option = 'SWITCH_ACCOUNTS_TOAST_LOGIN_ERROR';
        michal['key'] = option;
        offset = _closure1_slot0;
        report = 8;
        option = golfie[report];
        option = offset.bind(entity)(option);
        verify = option.intl;
        option = verify.string;
        report = golfie[report];
        report = offset.bind(entity)(report);
        report = report.t;
        report = report.pqvKWF;
        report = option.bind(verify)(report);
        michal['content'] = report;
        report = 9;
        report = golfie[report];
        report = oscard.bind(entity)(report);
        michal['icon'] = report;
        michal = zuuluu.bind(tangon)(michal);
        return entity;
    };
    michal['onSwitchError'] = option;
    tangon = function() { // Original name: onTokenSet
        tangon = _closure1_slot1;
        report = _closure1_slot2;
        zuuluu = 3;
        oscard = report[zuuluu];
        entity = undefined;
        option = tangon.bind(entity)(oscard);
        golfie = option.popWithKey;
        oscard = _closure1_slot3;
        oscard = golfie.bind(option)(oscard);
        zuuluu = report[zuuluu];
        report = tangon.bind(entity)(zuuluu);
        tangon = report.popWithKey;
        zuuluu = 'switch-accounts-spinner-modal';
        zuuluu = tangon.bind(report)(zuuluu);
        zuuluu = global;
        zuuluu = zuuluu.clearTimeout;
        michal = _closure1_slot5;
        michal = zuuluu.bind(entity)(michal);
        return entity;
    };
    michal['onTokenSet'] = tangon;
    tangon = golfie.prototype;
    tangon = Object.create(tangon, {constructor: {value: golfie}});
    foxtra = tangon;
    romeon = michal;
    michal = new foxtra[golfie](romeon, yankee);
    michal = michal instanceof Object ? michal : tangon;
    tangon = 10;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/multi_account/native/MultiAccountManagerNative.tsx';
    tangon = report.bind(oscard)(tangon);
    zuuluu['default'] = michal;
    return entity;
})();