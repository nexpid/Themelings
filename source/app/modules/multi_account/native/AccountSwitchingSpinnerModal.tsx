// app/modules/multi_account/native/AccountSwitchingSpinnerModal.tsx
export default (function(_, argBar, argBaz, argCor, __, argFre, argPlu) {
    report = argBar;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    entity = argBaz;
    var _closure1_slot1 = entity;
    var _closure1_slot2 = oscard;
    michal = function() { // Original name: AccountSwitchingSpinnerModal
        entity = _closure1_slot6;
        tangon = undefined;
        report = entity.bind(tangon)();
        zuuluu = _closure1_slot5;
        michal = _closure1_slot4;
        entity = {};
        report = report.switchingSpinnerContainer;
        entity['style'] = report;
        report = true;
        entity['accessible'] = report;
        verify = _closure1_slot0;
        offset = _closure1_slot2;
        report = 4;
        oscard = offset[report];
        oscard = verify.bind(tangon)(oscard);
        golfie = oscard.intl;
        oscard = golfie.string;
        report = offset[report];
        report = verify.bind(tangon)(report);
        report = report.t;
        report = report.n8qMHx;
        report = oscard.bind(golfie)(report);
        entity['accessibilityLabel'] = report;
        golfie = _closure1_slot5;
        oscard = _closure1_slot3;
        report = {'animating': true, 'size': 'large'};
        verify = _closure1_slot1;
        option = 5;
        option = offset[option];
        option = verify.bind(tangon)(option);
        option = option.unsafe_rawColors;
        option = option.BRAND_500;
        report['color'] = option;
        report = golfie.bind(tangon)(oscard, report);
        entity['children'] = report;
        entity = zuuluu.bind(tangon)(michal, entity);
        return entity;
    };
    entity = global;
    verify = entity.Object;
    option = verify.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = option.bind(verify)(zuuluu, entity, tangon);
    entity = 0;
    option = oscard[entity];
    tangon = argCor;
    entity = undefined;
    tangon = tangon.bind(entity)(option);
    tangon = 1;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    option = tangon.ActivityIndicator;
    var _closure1_slot3 = option;
    tangon = tangon.View;
    var _closure1_slot4 = tangon;
    tangon = 2;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.jsx;
    var _closure1_slot5 = tangon;
    tangon = 3;
    tangon = oscard[tangon];
    verify = report.bind(entity)(tangon);
    option = verify.createStyles;
    tangon = {};
    offset = {'flex': 1, 'alignItems': 'center', 'justifyContent': 'center'};
    tangon['switchingSpinnerContainer'] = offset;
    tangon = option.bind(verify)(tangon);
    var _closure1_slot6 = tangon;
    tangon = {};
    golfie = 6;
    golfie = oscard[golfie];
    golfie = report.bind(entity)(golfie);
    golfie = golfie.ModalAnimation;
    golfie = golfie.FADE;
    tangon['animation'] = golfie;
    golfie = false;
    tangon['closable'] = golfie;
    michal['modalConfig'] = tangon;
    tangon = 7;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/multi_account/native/AccountSwitchingSpinnerModal.tsx';
    tangon = report.bind(oscard)(tangon);
    zuuluu['default'] = michal;
    return entity;
})();