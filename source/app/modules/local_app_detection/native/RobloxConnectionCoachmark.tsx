// app/modules/local_app_detection/native/RobloxConnectionCoachmark.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    report = argBar;
    yankee = argBaz;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    var _closure1_slot1 = yankee;
    var _closure1_slot2 = oscard;
    entity = function(argFoo) { // Original name: RobloxIcon
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            entity = argFoo;
            zuuluu = entity.theme;
            entity = _closure1_slot15;
            tangon = undefined;
            report = entity.bind(tangon)();
            michal = _closure1_slot0;
            oscard = _closure1_slot2;
            entity = 24;
            entity = oscard[entity];
            michal = michal.bind(tangon)(entity);
            entity = michal.isThemeDark;
            entity = entity.bind(michal)(zuuluu);
            zuuluu = _closure1_slot1;
            michal = 25;
            michal = oscard[michal];
            oscard = zuuluu.bind(tangon)(michal);
            zuuluu = oscard.get;
            michal = _closure1_slot10;
            michal = michal.ROBLOX;
            oscard = zuuluu.bind(oscard)(michal);
            golfie = 'white';
            if(!entity) { _fun00002_ip = 99; continue _fun00001 }
 95:
            golfie = 'black';
 99:
            zuuluu = _closure1_slot0;
            option = _closure1_slot2;
            michal = 26;
            michal = option[michal];
            zuuluu = zuuluu.bind(tangon)(michal);
            michal = zuuluu.makeSource;
            oscard = oscard.icon;
            if(entity) { _fun00002_ip = 141; continue _fun00001 }
 133:
            entity = oscard.lightPNG;
            _fun00002_ip = 147; continue _fun00001;
 141:
            entity = oscard.darkPNG;
 147:
            option = michal.bind(zuuluu)(entity);
            zuuluu = _closure1_slot13;
            michal = _closure1_slot5;
            entity = {};
            oscard = report.robloxIconContainer;
            report = new Array(2);
            report[0] = oscard;
            oscard = {};
            oscard['backgroundColor'] = golfie;
            report[1] = oscard;
            entity['style'] = report;
            golfie = _closure1_slot13;
            oscard = _closure1_slot1;
            yankee = _closure1_slot2;
            verify = 27;
            report = yankee[verify];
            oscard = oscard.bind(tangon)(report);
            report = {};
            offset = _closure1_slot0;
            verify = yankee[verify];
            verify = offset.bind(tangon)(verify);
            verify = verify.IconSizes;
            verify = verify.LARGE;
            report['size'] = verify;
            report['source'] = option;
            option = true;
            report['disableColor'] = option;
            report = golfie.bind(tangon)(oscard, report);
            entity['children'] = report;
            entity = zuuluu.bind(tangon)(michal, entity);
            return entity;
        }
    };
    var _closure1_slot16 = entity;
    entity = function(argFoo) { // Original name: UnionIcon
        _fun00003: for(var _fun00004_ip = 0; ; ) switch(_fun00004_ip) {
 0:
            entity = argFoo;
            zuuluu = entity.theme;
            michal = _closure1_slot0;
            tangon = _closure1_slot2;
            entity = 24;
            entity = tangon[entity];
            tangon = undefined;
            michal = michal.bind(tangon)(entity);
            entity = michal.isThemeDark;
            entity = entity.bind(michal)(zuuluu);
            sizing = 'black';
            if(!entity) { _fun00004_ip = 55; continue _fun00003 }
 51:
            sizing = 'white';
 55:
            zuuluu = _closure1_slot14;
            michal = _closure1_slot1;
            output = _closure1_slot2;
            foxtra = 28;
            entity = output[foxtra];
            michal = michal.bind(tangon)(entity);
            entity = {'width': 25, 'height': 4, 'viewBox': '0 0 25 4'};
            golfie = _closure1_slot13;
            backup = _closure1_slot0;
            report = output[foxtra];
            report = backup.bind(tangon)(report);
            oscard = report.Path;
            report = {'fill': 'url(#a)', 'd': 'M1.7002 0.799805C2.36285 0.79991 2.90039 1.33732 2.90039 2C2.90029 2.66259 2.36278 3.20009 1.7002 3.2002C1.03752 3.2002 0.500106 2.66265 0.5 2C0.5 1.33726 1.03745 0.799805 1.7002 0.799805ZM8.90039 0.799805C9.56297 0.799989 10.0996 1.33737 10.0996 2C10.0995 2.66254 9.56291 3.20001 8.90039 3.2002C8.23771 3.2002 7.70029 2.66266 7.7002 2C7.7002 1.33726 8.23765 0.799805 8.90039 0.799805ZM16.0996 0.799805C16.7624 0.799805 17.2998 1.33726 17.2998 2C17.2997 2.66266 16.7623 3.2002 16.0996 3.2002C15.4371 3.19996 14.9005 2.66251 14.9004 2C14.9004 1.3374 15.4371 0.800042 16.0996 0.799805ZM23.2998 0.799805C23.9625 0.799805 24.5 1.33726 24.5 2C24.4999 2.66266 23.9625 3.2002 23.2998 3.2002C22.6372 3.20006 22.0997 2.66258 22.0996 2C22.0996 1.33734 22.6372 0.799936 23.2998 0.799805Z'};
            oscard = golfie.bind(tangon)(oscard, report);
            report = new Array(2);
            report[0] = oscard;
            option = _closure1_slot13;
            oscard = output[foxtra];
            oscard = backup.bind(tangon)(oscard);
            golfie = oscard.Defs;
            oscard = {};
            yankee = _closure1_slot14;
            verify = output[foxtra];
            verify = backup.bind(tangon)(verify);
            offset = verify.LinearGradient;
            verify = {'id': 'a', 'x1': 0.5, 'y1': 2, 'x2': 24.5, 'y2': 2, 'gradientUnits': 'userSpaceOnUse'};
            echoed = _closure1_slot13;
            romeon = output[foxtra];
            romeon = backup.bind(tangon)(romeon);
            result = romeon.Stop;
            romeon = {};
            romeon['stopColor'] = sizing;
            update = 0.3;
            romeon['stopOpacity'] = update;
            result = echoed.bind(tangon)(result, romeon);
            romeon = new Array(2);
            romeon[0] = result;
            kiloes = _closure1_slot13;
            foxtra = output[foxtra];
            foxtra = backup.bind(tangon)(foxtra);
            backup = foxtra.Stop;
            foxtra = {'offset': 1, 'stopColor': null, 'stopOpacity': 0.7};
            foxtra['stopColor'] = sizing;
            foxtra = kiloes.bind(tangon)(backup, foxtra);
            romeon[1] = foxtra;
            verify['children'] = romeon;
            verify = yankee.bind(tangon)(offset, verify);
            oscard['children'] = verify;
            oscard = option.bind(tangon)(golfie, oscard);
            report[1] = oscard;
            entity['children'] = report;
            entity = zuuluu.bind(tangon)(michal, entity);
            return entity;
        }
    };
    var _closure1_slot17 = entity;
    entity = function() { // Original name: UserIcon
        entity = _closure1_slot15;
        tangon = undefined;
        offset = entity.bind(tangon)();
        yankee = _closure1_slot0;
        romeon = _closure1_slot2;
        entity = 29;
        entity = romeon[entity];
        report = yankee.bind(tangon)(entity);
        zuuluu = report.useStateFromStores;
        entity = _closure1_slot7;
        michal = new Array(1);
        michal[0] = entity;
        entity = function() {
            michal = _closure1_slot7;
            entity = michal.getCurrentUser;
            entity = entity.bind(michal)();
            return entity;
        };
        verify = zuuluu.bind(report)(michal, entity);
        zuuluu = _closure1_slot14;
        michal = _closure1_slot5;
        entity = {};
        report = offset.avatarContainer;
        entity['style'] = report;
        option = _closure1_slot13;
        golfie = _closure1_slot5;
        report = {};
        offset = offset.avatarInnerBorder;
        report['style'] = offset;
        golfie = option.bind(tangon)(golfie, report);
        report = new Array(2);
        report[0] = golfie;
        option = _closure1_slot13;
        golfie = _closure1_slot1;
        offset = 30;
        oscard = romeon[offset];
        golfie = golfie.bind(tangon)(oscard);
        oscard = {};
        offset = romeon[offset];
        offset = yankee.bind(tangon)(offset);
        offset = offset.AvatarSizes;
        offset = offset.NORMAL;
        oscard['size'] = offset;
        oscard['user'] = verify;
        oscard['guildId'] = tangon;
        oscard = option.bind(tangon)(golfie, oscard);
        report[1] = oscard;
        entity['children'] = report;
        entity = zuuluu.bind(tangon)(michal, entity);
        return entity;
    };
    var _closure1_slot18 = entity;
    entity = global;
    option = entity.Object;
    golfie = option.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(option)(zuuluu, entity, tangon);
    entity = 0;
    tangon = oscard[entity];
    entity = undefined;
    tangon = yankee.bind(entity)(tangon);
    var _closure1_slot3 = tangon;
    tangon = 1;
    golfie = oscard[tangon];
    tangon = argCor;
    tangon = tangon.bind(entity)(golfie);
    var _closure1_slot4 = tangon;
    tangon = 2;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.View;
    var _closure1_slot5 = tangon;
    tangon = 3;
    tangon = oscard[tangon];
    tangon = yankee.bind(entity)(tangon);
    var _closure1_slot6 = tangon;
    tangon = 4;
    tangon = oscard[tangon];
    tangon = yankee.bind(entity)(tangon);
    var _closure1_slot7 = tangon;
    tangon = 5;
    tangon = oscard[tangon];
    tangon = yankee.bind(entity)(tangon);
    var _closure1_slot8 = tangon;
    tangon = 6;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    golfie = tangon.AnalyticsLocations;
    var _closure1_slot9 = golfie;
    golfie = tangon.PlatformTypes;
    var _closure1_slot10 = golfie;
    tangon = tangon.UserSettingsSections;
    var _closure1_slot11 = tangon;
    tangon = 7;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.ContentDismissActionType;
    var _closure1_slot12 = tangon;
    tangon = 8;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    golfie = tangon.jsx;
    var _closure1_slot13 = golfie;
    tangon = tangon.jsxs;
    var _closure1_slot14 = tangon;
    tangon = 9;
    tangon = oscard[tangon];
    option = report.bind(entity)(tangon);
    golfie = option.createStyles;
    tangon = {};
    verify = {'width': 40, 'height': 40, 'borderRadius': null, 'alignItems': 'center', 'justifyContent': 'center'};
    offset = 10;
    romeon = oscard[offset];
    romeon = yankee.bind(entity)(romeon);
    romeon = romeon.radii;
    romeon = romeon.md;
    verify['borderRadius'] = romeon;
    romeon = 'center';
    foxtra = oscard[offset];
    foxtra = yankee.bind(entity)(foxtra);
    foxtra = foxtra.colors;
    foxtra = foxtra.BG_BASE_TERTIARY;
    verify['backgroundColor'] = foxtra;
    tangon['robloxIconContainer'] = verify;
    verify = {};
    foxtra = oscard[offset];
    foxtra = yankee.bind(entity)(foxtra);
    foxtra = foxtra.spacing;
    foxtra = foxtra.PX_16;
    verify['paddingHorizontal'] = foxtra;
    tangon['content'] = verify;
    verify = {};
    verify['textAlign'] = romeon;
    tangon['text'] = verify;
    verify = {};
    romeon = 'relative';
    verify['position'] = romeon;
    tangon['avatarContainer'] = verify;
    verify = {'zIndex': 1, 'position': 'absolute', 'borderColor': null, 'borderRadius': null, 'borderWidth': 1, 'width': '100%', 'height': '100%'};
    romeon = oscard[offset];
    romeon = yankee.bind(entity)(romeon);
    romeon = romeon.colors;
    romeon = romeon.BORDER_STRONG;
    verify['borderColor'] = romeon;
    offset = oscard[offset];
    offset = yankee.bind(entity)(offset);
    offset = offset.radii;
    offset = offset.round;
    verify['borderRadius'] = offset;
    tangon['avatarInnerBorder'] = verify;
    tangon = golfie.bind(option)(tangon);
    var _closure1_slot15 = tangon;
    tangon = 36;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/local_app_detection/native/RobloxConnectionCoachmark.tsx';
    tangon = report.bind(oscard)(tangon);
    tangon = function(argFoo) { // Original name: RobloxConnectionActionSheet
        entity = argFoo;
        entity = entity.markAsDismissed;
        var _closure2_slot0 = entity;
        entity = _closure1_slot15;
        tangon = undefined;
        vacuum = entity.bind(tangon)();
        update = _closure1_slot0;
        source = _closure1_slot2;
        entity = 11;
        entity = source[entity];
        michal = update.bind(tangon)(entity);
        entity = michal.useThemeContext;
        entity = entity.bind(michal)();
        ctrled = entity.theme;
        record = _closure1_slot1;
        entity = 12;
        entity = source[entity];
        entity = record.bind(tangon)(entity);
        entity = entity.bind(tangon)();
        offset = entity.bottom;
        sizing = function() { // Original name: handleCancel
            _fun00005: for(var _fun00006_ip = 0; ; ) switch(_fun00006_ip) {
 0:
                tangon = _closure1_slot1;
                zuuluu = _closure1_slot2;
                entity = 13;
                zuuluu = zuuluu[entity];
                entity = undefined;
                tangon = tangon.bind(entity)(zuuluu);
                zuuluu = tangon.hideActionSheet;
                zuuluu = zuuluu.bind(tangon)();
                report = _closure2_slot0;
                tangon = null;
                if(!(tangon != report)) { _fun00006_ip = 67; continue _fun00005 }
 48:
                zuuluu = _closure2_slot0;
                michal = _closure1_slot12;
                michal = michal.DISMISS;
                michal = zuuluu.bind(entity)(michal);
 67:
                return entity;
            }
        };
        zuuluu = _closure1_slot13;
        entity = 14;
        entity = source[entity];
        entity = update.bind(tangon)(entity);
        michal = entity.BottomSheet;
        entity = {};
        report = true;
        entity['startExpanded'] = report;
        report = vacuum.content;
        entity['contentStyles'] = report;
        golfie = _closure1_slot13;
        report = 15;
        report = source[report];
        report = update.bind(tangon)(report);
        oscard = report.BottomSheetTitleHeader;
        report = {};
        option = null;
        report['title'] = option;
        yankee = _closure1_slot13;
        option = 16;
        option = source[option];
        option = update.bind(tangon)(option);
        verify = option.ActionSheetCloseButton;
        option = {};
        option['onPress'] = sizing;
        option = yankee.bind(tangon)(verify, option);
        report['leading'] = option;
        report = golfie.bind(tangon)(oscard, report);
        entity['header'] = report;
        report = function() { // Original name: onDismiss
            zuuluu = _closure2_slot0;
            entity = _closure1_slot12;
            michal = entity.DISMISS;
            entity = undefined;
            entity = zuuluu.bind(entity)(michal);
            return entity;
        };
        entity['onDismiss'] = report;
        golfie = _closure1_slot14;
        verify = 17;
        report = source[verify];
        report = update.bind(tangon)(report);
        oscard = report.Stack;
        report = {};
        option = 24;
        report['spacing'] = option;
        option = {};
        option['paddingBottom'] = offset;
        report['style'] = option;
        yankee = _closure1_slot14;
        option = source[verify];
        option = update.bind(tangon)(option);
        offset = option.Stack;
        option = {'justify': 'center', 'align': 'center', 'direction': 'horizontal'};
        foxtra = 'center';
        output = _closure1_slot13;
        kiloes = _closure1_slot16;
        romeon = {};
        romeon['theme'] = ctrled;
        kiloes = output.bind(tangon)(kiloes, romeon);
        romeon = new Array(3);
        romeon[0] = kiloes;
        result = _closure1_slot13;
        output = _closure1_slot17;
        kiloes = {};
        kiloes['theme'] = ctrled;
        kiloes = result.bind(tangon)(output, kiloes);
        romeon[1] = kiloes;
        result = _closure1_slot13;
        output = _closure1_slot18;
        kiloes = {};
        kiloes = result.bind(tangon)(output, kiloes);
        romeon[2] = kiloes;
        option['children'] = romeon;
        offset = yankee.bind(tangon)(offset, option);
        option = new Array(3);
        option[0] = offset;
        romeon = _closure1_slot14;
        offset = source[verify];
        offset = update.bind(tangon)(offset);
        yankee = offset.Stack;
        offset = {};
        offset['justify'] = foxtra;
        ctrled = _closure1_slot13;
        kiloes = 18;
        foxtra = source[kiloes];
        foxtra = update.bind(tangon)(foxtra);
        result = foxtra.Text;
        foxtra = {};
        output = 'heading-xl/bold';
        foxtra['variant'] = output;
        output = vacuum.text;
        foxtra['style'] = output;
        output = 19;
        sequen = source[output];
        sequen = update.bind(tangon)(sequen);
        cntext = sequen.intl;
        config = cntext.string;
        sequen = source[output];
        sequen = update.bind(tangon)(sequen);
        sequen = sequen.t;
        sequen = sequen.t3asUV;
        sequen = config.bind(cntext)(sequen);
        foxtra['children'] = sequen;
        result = ctrled.bind(tangon)(result, foxtra);
        foxtra = new Array(2);
        foxtra[0] = result;
        ctrled = _closure1_slot13;
        kiloes = source[kiloes];
        kiloes = update.bind(tangon)(kiloes);
        result = kiloes.Text;
        kiloes = {};
        sequen = 'text-md/medium';
        kiloes['variant'] = sequen;
        vacuum = vacuum.text;
        kiloes['style'] = vacuum;
        vacuum = source[output];
        vacuum = update.bind(tangon)(vacuum);
        config = vacuum.intl;
        sequen = config.string;
        vacuum = source[output];
        vacuum = update.bind(tangon)(vacuum);
        vacuum = vacuum.t;
        vacuum = vacuum.no96NT;
        vacuum = sequen.bind(config)(vacuum);
        kiloes['children'] = vacuum;
        kiloes = ctrled.bind(tangon)(result, kiloes);
        foxtra[1] = kiloes;
        offset['children'] = foxtra;
        offset = romeon.bind(tangon)(yankee, offset);
        option[1] = offset;
        yankee = _closure1_slot14;
        verify = source[verify];
        verify = update.bind(tangon)(verify);
        offset = verify.Stack;
        verify = {};
        result = _closure1_slot13;
        foxtra = 20;
        romeon = source[foxtra];
        romeon = update.bind(tangon)(romeon);
        kiloes = romeon.Button;
        romeon = {};
        ctrled = source[output];
        ctrled = update.bind(tangon)(ctrled);
        sequen = ctrled.intl;
        vacuum = sequen.string;
        ctrled = source[output];
        ctrled = update.bind(tangon)(ctrled);
        ctrled = ctrled.t;
        ctrled = ctrled.ItuabG;
        ctrled = vacuum.bind(sequen)(ctrled);
        romeon['text'] = ctrled;
        sequen = _closure1_slot13;
        ctrled = 21;
        ctrled = source[ctrled];
        ctrled = update.bind(tangon)(ctrled);
        vacuum = ctrled.WindowLaunchIcon;
        ctrled = {};
        config = 'sm';
        ctrled['size'] = config;
        config = 10;
        config = source[config];
        config = record.bind(tangon)(config);
        config = config.colors;
        config = config.BUTTON_FILLED_BRAND_TEXT;
        ctrled['color'] = config;
        ctrled = sequen.bind(tangon)(vacuum, ctrled);
        romeon['icon'] = ctrled;
        ctrled = 'end';
        romeon['iconPosition'] = ctrled;
        ctrled = 'lg';
        romeon['size'] = ctrled;
        echoed = function() { // Original name: onPress
            _fun00007: for(var _fun00008_ip = 0; ; ) switch(_fun00008_ip) {
 0:
                zuuluu = _closure1_slot1;
                michal = _closure1_slot2;
                entity = 13;
                michal = michal[entity];
                entity = undefined;
                zuuluu = zuuluu.bind(entity)(michal);
                michal = zuuluu.hideActionSheet;
                michal = michal.bind(zuuluu)();
                tangon = _closure2_slot0;
                zuuluu = null;
                if(!(zuuluu != tangon)) { _fun00008_ip = 67; continue _fun00007 }
 48:
                zuuluu = _closure2_slot0;
                michal = _closure1_slot12;
                michal = michal.PRIMARY;
                michal = zuuluu.bind(entity)(michal);
 67:
                zuuluu = _closure1_slot1;
                tangon = _closure1_slot2;
                michal = 22;
                michal = tangon[michal];
                zuuluu = zuuluu.bind(entity)(michal);
                michal = {};
                oscard = _closure1_slot10;
                oscard = oscard.ROBLOX;
                michal['platformType'] = oscard;
                oscard = _closure1_slot9;
                oscard = oscard.ROBLOX_CONNECTION_ACTION_SHEET;
                michal['location'] = oscard;
                michal = zuuluu.bind(entity)(michal);
                zuuluu = _closure1_slot0;
                michal = 23;
                michal = tangon[michal];
                tangon = zuuluu.bind(entity)(michal);
                zuuluu = tangon.openUserSettings;
                michal = {};
                report = _closure1_slot11;
                report = report.CONNECTIONS;
                michal['screen'] = report;
                michal = zuuluu.bind(tangon)(michal);
                return entity;
            }
        };
        romeon['onPress'] = echoed;
        kiloes = result.bind(tangon)(kiloes, romeon);
        romeon = new Array(2);
        romeon[0] = kiloes;
        kiloes = _closure1_slot13;
        foxtra = source[foxtra];
        foxtra = update.bind(tangon)(foxtra);
        backup = foxtra.Button;
        foxtra = {'text': null, 'variant': 'secondary', 'size': 'lg'};
        result = source[output];
        result = update.bind(tangon)(result);
        echoed = result.intl;
        result = echoed.string;
        output = source[output];
        output = update.bind(tangon)(output);
        output = output.t;
        output = output.DiGJy8;
        output = result.bind(echoed)(output);
        foxtra['text'] = output;
        foxtra['onPress'] = sizing;
        foxtra = kiloes.bind(tangon)(backup, foxtra);
        romeon[1] = foxtra;
        verify['children'] = romeon;
        verify = yankee.bind(tangon)(offset, verify);
        option[2] = verify;
        report['children'] = option;
        report = golfie.bind(tangon)(oscard, report);
        entity['children'] = report;
        entity = zuuluu.bind(tangon)(michal, entity);
        return entity;
    };
    zuuluu['default'] = tangon;
    michal = function(argFoo) { // Original name: useShouldShowRobloxConnectionCoachmark
        _fun00009: for(var _fun00010_ip = 0; ; ) switch(_fun00010_ip) {
 0:
            zuuluu = _closure1_slot1;
            offset = _closure1_slot2;
            michal = 31;
            michal = offset[michal];
            verify = undefined;
            tangon = zuuluu.bind(verify)(michal);
            zuuluu = tangon.useExperiment;
            michal = argFoo;
            tangon = zuuluu.bind(tangon)(michal);
            var _closure2_slot0 = tangon;
            golfie = _closure1_slot0;
            michal = 29;
            zuuluu = offset[michal];
            yankee = golfie.bind(verify)(zuuluu);
            option = yankee.useStateFromStores;
            zuuluu = _closure1_slot8;
            oscard = new Array(1);
            oscard[0] = zuuluu;
            zuuluu = function() {
                zuuluu = _closure1_slot8;
                michal = zuuluu.isAppInstalled;
                report = _closure1_slot0;
                tangon = _closure1_slot2;
                entity = 32;
                tangon = tangon[entity];
                entity = undefined;
                entity = report.bind(entity)(tangon);
                entity = entity.DetectableAppNames;
                entity = entity.ROBLOX;
                entity = michal.bind(zuuluu)(entity);
                return entity;
            };
            zuuluu = option.bind(yankee)(oscard, zuuluu);
            var _closure2_slot1 = zuuluu;
            option = _closure1_slot4;
            yankee = option.useState;
            oscard = false;
            romeon = yankee.bind(option)(oscard);
            yankee = _closure1_slot3;
            oscard = 2;
            romeon = yankee.bind(verify)(romeon, oscard);
            oscard = 0;
            oscard = romeon[oscard];
            var _closure2_slot2 = oscard;
            yankee = 1;
            yankee = romeon[yankee];
            var _closure2_slot3 = yankee;
            michal = offset[michal];
            verify = golfie.bind(verify)(michal);
            golfie = verify.useStateFromStoresObject;
            entity = _closure1_slot6;
            michal = new Array(1);
            michal[0] = entity;
            entity = function() {
                entity = {};
                zuuluu = _closure1_slot6;
                michal = zuuluu.isFetching;
                michal = michal.bind(zuuluu)();
                entity['fetchingAccounts'] = michal;
                michal = zuuluu.getAccounts;
                tangon = michal.bind(zuuluu)();
                zuuluu = tangon.find;
                michal = function(argFoo) {
                    entity = argFoo;
                    michal = entity.type;
                    entity = _closure1_slot10;
                    entity = entity.ROBLOX;
                    entity = michal === entity;
                    return entity;
                };
                zuuluu = zuuluu.bind(tangon)(michal);
                michal = null;
                michal = michal != zuuluu;
                entity['hasRoloxAccount'] = michal;
                return entity;
            };
            michal = golfie.bind(verify)(michal, entity);
            entity = michal.fetchingAccounts;
            michal = michal.hasRoloxAccount;
            var _closure2_slot4 = michal;
            verify = option.useEffect;
            golfie = new Array(3);
            golfie[0] = oscard;
            oscard = tangon.enabled;
            golfie[1] = oscard;
            golfie[2] = zuuluu;
            oscard = function() {
                _fun00011: for(var _fun00012_ip = 0; ; ) switch(_fun00012_ip) {
 0:
                    michal = _closure2_slot0;
                    michal = michal.enabled;
                    if(!michal) { _fun00012_ip = 19; continue _fun00011 }
 15:
                    michal = _closure2_slot1;
 19:
                    if(!michal) { _fun00012_ip = 29; continue _fun00011 }
 22:
                    zuuluu = _closure2_slot2;
                    michal = !zuuluu;
 29:
                    if(!michal) { _fun00012_ip = 78; continue _fun00011 }
 32:
                    michal = _closure2_slot3;
                    zuuluu = undefined;
                    entity = true;
                    entity = michal.bind(zuuluu)(entity);
                    michal = _closure1_slot1;
                    tangon = _closure1_slot2;
                    entity = 33;
                    entity = tangon[entity];
                    michal = michal.bind(zuuluu)(entity);
                    entity = michal.fetch;
                    entity = entity.bind(michal)();
 78:
                    entity = undefined;
                    return entity;
                }
            };
            oscard = verify.bind(option)(oscard, golfie);
            golfie = option.useEffect;
            oscard = new Array(1);
            oscard[0] = michal;
            report = function() {
                _fun00013: for(var _fun00014_ip = 0; ; ) switch(_fun00014_ip) {
 0:
                    entity = _closure2_slot4;
                    if(!entity) { _fun00014_ip = 88; continue _fun00013 }
 10:
                    oscard = _closure1_slot0;
                    golfie = _closure1_slot2;
                    entity = 34;
                    entity = golfie[entity];
                    michal = undefined;
                    tangon = oscard.bind(michal)(entity);
                    zuuluu = tangon.markDismissibleContentAsDismissed;
                    entity = 35;
                    entity = golfie[entity];
                    entity = oscard.bind(michal)(entity);
                    entity = entity.DismissibleContent;
                    michal = entity.ROBLOX_CONNECTION_COACHMARK;
                    entity = {};
                    report = _closure1_slot12;
                    report = report.INDIRECT_ACTION;
                    entity['dismissAction'] = report;
                    entity = zuuluu.bind(tangon)(michal, entity);
 88:
                    entity = undefined;
                    return entity;
                }
            };
            report = golfie.bind(option)(report, oscard);
            entity = !entity;
            if(!entity) { _fun00010_ip = 277; continue _fun00009 }
 272:
            entity = tangon.enabled;
 277:
            if(!entity) { _fun00010_ip = 283; continue _fun00009 }
 280:
            entity = zuuluu;
 283:
            if(!entity) { _fun00010_ip = 289; continue _fun00009 }
 286:
            entity = !michal;
 289:
            return entity;
        }
    };
    zuuluu['useShouldShowRobloxConnectionCoachmark'] = michal;
    return entity;
})();