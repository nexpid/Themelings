// app/modules/global_discovery/native/components/layout/GlobalDiscoveryLearnMoreCard.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    report = argBar;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    entity = argBaz;
    var _closure1_slot1 = entity;
    var _closure1_slot2 = oscard;
    entity = global;
    option = entity.Object;
    golfie = option.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(option)(zuuluu, entity, tangon);
    entity = 0;
    golfie = oscard[entity];
    tangon = argCor;
    entity = undefined;
    tangon = tangon.bind(entity)(golfie);
    var _closure1_slot3 = tangon;
    tangon = 1;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.View;
    var _closure1_slot4 = tangon;
    tangon = 2;
    golfie = oscard[tangon];
    golfie = report.bind(entity)(golfie);
    golfie = golfie.jsx;
    var _closure1_slot5 = golfie;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.jsxs;
    var _closure1_slot6 = tangon;
    tangon = 3;
    tangon = oscard[tangon];
    option = report.bind(entity)(tangon);
    golfie = option.createStyles;
    tangon = {};
    verify = {'flex': 1, 'flexDirection': 'row', 'alignItems': 'flex-start', 'gap': 16};
    tangon['container'] = verify;
    verify = {};
    offset = 4;
    verify['marginBottom'] = offset;
    tangon['title'] = verify;
    verify = {};
    offset = 12;
    verify['marginBottom'] = offset;
    tangon['description'] = verify;
    verify = {'flex': 1, 'alignItems': 'flex-start'};
    tangon['content'] = verify;
    tangon = golfie.bind(option)(tangon);
    var _closure1_slot7 = tangon;
    tangon = 10;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/global_discovery/native/components/layout/GlobalDiscoveryLearnMoreCard.tsx';
    tangon = report.bind(oscard)(tangon);
    michal = function(argFoo) { // Original name: GlobalDiscoveryLearnMoreCard
        michal = argFoo;
        option = michal.style;
        kiloes = michal.title;
        foxtra = michal.description;
        golfie = michal.icon;
        verify = michal.helpdeskArticle;
        var _closure2_slot0 = verify;
        michal = _closure1_slot7;
        tangon = undefined;
        backup = michal.bind(tangon)();
        report = _closure1_slot3;
        zuuluu = report.useCallback;
        michal = new Array(1);
        michal[0] = verify;
        entity = function() {
            report = _closure1_slot1;
            oscard = _closure1_slot2;
            entity = 4;
            michal = oscard[entity];
            entity = undefined;
            tangon = report.bind(entity)(michal);
            zuuluu = tangon.openURL;
            michal = 5;
            michal = oscard[michal];
            oscard = report.bind(entity)(michal);
            report = oscard.getArticleURL;
            michal = _closure2_slot0;
            michal = report.bind(oscard)(michal);
            michal = zuuluu.bind(tangon)(michal);
            return entity;
        };
        romeon = zuuluu.bind(report)(entity, michal);
        zuuluu = _closure1_slot6;
        sizing = _closure1_slot0;
        output = _closure1_slot2;
        entity = 6;
        entity = output[entity];
        entity = sizing.bind(tangon)(entity);
        michal = entity.Card;
        entity = {};
        verify = backup.container;
        report = new Array(2);
        report[0] = verify;
        report[1] = option;
        entity['style'] = report;
        yankee = _closure1_slot5;
        report = {};
        option = 'lg';
        report['size'] = option;
        golfie = yankee.bind(tangon)(golfie, report);
        report = new Array(2);
        report[0] = golfie;
        golfie = _closure1_slot4;
        oscard = {};
        option = backup.content;
        oscard['style'] = option;
        verify = 7;
        option = output[verify];
        option = sizing.bind(tangon)(option);
        offset = option.Text;
        option = {'variant': 'heading-md/semibold', 'color': 'header-primary'};
        result = backup.title;
        option['style'] = result;
        option['children'] = kiloes;
        offset = yankee.bind(tangon)(offset, option);
        option = new Array(3);
        option[0] = offset;
        verify = output[verify];
        verify = sizing.bind(tangon)(verify);
        offset = verify.Text;
        verify = {'variant': 'text-xs/normal', 'color': 'text-secondary'};
        backup = backup.description;
        verify['style'] = backup;
        verify['children'] = foxtra;
        verify = yankee.bind(tangon)(offset, verify);
        option[1] = verify;
        verify = 8;
        verify = output[verify];
        verify = sizing.bind(tangon)(verify);
        offset = verify.Button;
        verify = {'variant': 'primary', 'size': 'sm', 'text': null, 'onPress': null, 'grow': false};
        foxtra = 9;
        backup = output[foxtra];
        backup = sizing.bind(tangon)(backup);
        kiloes = backup.intl;
        backup = kiloes.string;
        foxtra = output[foxtra];
        foxtra = sizing.bind(tangon)(foxtra);
        foxtra = foxtra.t;
        foxtra = foxtra.hvVgAQ;
        foxtra = backup.bind(kiloes)(foxtra);
        verify['text'] = foxtra;
        verify['onPress'] = romeon;
        verify = yankee.bind(tangon)(offset, verify);
        option[2] = verify;
        oscard['children'] = option;
        oscard = zuuluu.bind(tangon)(golfie, oscard);
        report[1] = oscard;
        entity['children'] = report;
        entity = zuuluu.bind(tangon)(michal, entity);
        return entity;
    };
    zuuluu['default'] = michal;
    return entity;
})();