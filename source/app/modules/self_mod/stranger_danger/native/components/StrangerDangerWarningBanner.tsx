// app/modules/self_mod/stranger_danger/native/components/StrangerDangerWarningBanner.tsx
export default (function(argFoo, argBar, argBaz, argCorge, _, argFred, argPlugh) {
    report = argBar;
    romeo = argBaz;
    zulu = argFred;
    oscar = argPlugh;
    var _closure1_slot0 = report;
    var _closure1_slot1 = romeo;
    var _closure1_slot2 = oscar;
    mike = function(argFoo) { // Original name: StrangerDangerWarningBanner
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            entity = argFoo;
            foxtrot = entity.channelId;
            var _closure2_slot0 = foxtrot;
            romeo = entity.warningId;
            var _closure2_slot1 = romeo;
            golf = entity.senderId;
            var _closure2_slot2 = golf;
            entity = _closure1_slot11;
            tango = undefined;
            entity = entity.bind(tango)();
            var _closure2_slot3 = entity;
            backup = _closure1_slot0;
            yankee = _closure1_slot2;
            entity = 9;
            entity = yankee[entity];
            verify = backup.bind(tango)(entity);
            oscar = verify.useStateFromStores;
            entity = _closure1_slot4;
            zulu = new Array(1);
            zulu[0] = entity;
            mike = new Array(1);
            mike[0] = golf;
            entity = function() {
                zulu = _closure1_slot4;
                mike = zulu.isBlocked;
                entity = _closure2_slot2;
                entity = mike.bind(zulu)(entity);
                return entity;
            };
            oscar = oscar.bind(verify)(zulu, entity, mike);
            entity = 10;
            entity = yankee[entity];
            zulu = backup.bind(tango)(entity);
            mike = zulu.useIsStealthRemediationEnabled;
            entity = {};
            verify = 'stranger_danger_warning_banner';
            entity['location'] = verify;
            entity = mike.bind(zulu)(entity);
            var _closure2_slot4 = entity;
            offset = _closure1_slot3;
            verify = offset.useEffect;
            zulu = new Array(3);
            zulu[0] = foxtrot;
            zulu[1] = romeo;
            zulu[2] = golf;
            mike = function() {
                zulu = _closure1_slot0;
                mike = _closure1_slot2;
                entity = 11;
                mike = mike[entity];
                entity = undefined;
                report = zulu.bind(entity)(mike);
                tango = report.trackViewedEvent;
                mike = _closure1_slot8;
                zulu = mike.SAFETY_WARNING_VIEWED;
                mike = {};
                options = _closure2_slot0;
                mike['channelId'] = options;
                options = _closure2_slot1;
                mike['warningId'] = options;
                golf = _closure2_slot2;
                mike['senderId'] = golf;
                oscar = _closure1_slot5;
                oscar = oscar.STRANGER_DANGER;
                mike['warningType'] = oscar;
                mike = tango.bind(report)(zulu, mike);
                return entity;
            };
            mike = verify.bind(offset)(mike, zulu);
            offset = _closure1_slot3;
            verify = offset.useCallback;
            zulu = new Array(2);
            zulu[0] = foxtrot;
            zulu[1] = romeo;
            mike = function() {
                tango = _closure1_slot0;
                report = _closure1_slot2;
                entity = 12;
                zulu = report[entity];
                entity = undefined;
                golf = tango.bind(entity)(zulu);
                oscar = golf.dismissChannelSafetyWarnings;
                tango = _closure2_slot0;
                options = _closure2_slot1;
                zulu = new Array(1);
                zulu[0] = options;
                zulu = oscar.bind(golf)(tango, zulu);
                tango = _closure1_slot1;
                zulu = 13;
                zulu = report[zulu];
                tango = tango.bind(entity)(zulu);
                zulu = tango.popWithKey;
                mike = _closure1_slot6;
                mike = zulu.bind(tango)(mike);
                return entity;
            };
            offset = verify.bind(offset)(mike, zulu);
            var _closure2_slot5 = offset;
            kilo = _closure1_slot3;
            verify = kilo.useCallback;
            zulu = new Array(4);
            zulu[0] = offset;
            zulu[1] = foxtrot;
            zulu[2] = romeo;
            zulu[3] = golf;
            mike = function(argFoo) {
                mike = argFoo;
                var _closure3_slot0 = mike;
                entity = function() {
                    mike = _closure2_slot5;
                    entity = undefined;
                    mike = mike.bind(entity)();
                    zulu = _closure1_slot0;
                    tango = _closure1_slot2;
                    mike = 11;
                    mike = tango[mike];
                    tango = zulu.bind(entity)(mike);
                    zulu = tango.trackCtaEvent;
                    mike = {};
                    golf = _closure2_slot0;
                    mike['channelId'] = golf;
                    golf = _closure2_slot1;
                    mike['warningId'] = golf;
                    oscar = _closure2_slot2;
                    mike['senderId'] = oscar;
                    report = _closure1_slot5;
                    report = report.STRANGER_DANGER;
                    mike['warningType'] = report;
                    report = _closure3_slot0;
                    mike['cta'] = report;
                    mike = zulu.bind(tango)(mike);
                    return entity;
                };
                return entity;
            };
            kilo = verify.bind(kilo)(mike, zulu);
            var _closure2_slot6 = kilo;
            verify = _closure1_slot3;
            zulu = verify.useCallback;
            mike = new Array(6);
            mike[0] = kilo;
            mike[1] = offset;
            mike[2] = entity;
            mike[3] = foxtrot;
            mike[4] = romeo;
            mike[5] = golf;
            entity = function(argFoo, argBar) {
                mike = argFoo;
                var _closure3_slot0 = mike;
                mike = argBar;
                var _closure3_slot1 = mike;
                entity = function() {
                    _fun00003: for(var _fun00004_ip = 0; ; ) switch(_fun00004_ip) {
 0:
                        mike = _closure2_slot4;
                        zulu = _closure1_slot1;
                        verify = _closure1_slot2;
                        if(mike) { _fun00004_ip = 67; continue _fun00003 }
 23:
                        mike = 18;
                        tango = verify[mike];
                        mike = undefined;
                        report = zulu.bind(mike)(tango);
                        tango = report.openLazy;
                        mike = {};
                        golf = function() { // Original name: importer
                            zulu = _closure1_slot0;
                            entity = _closure1_slot2;
                            mike = 16;
                            mike = entity[mike];
                            tango = undefined;
                            zulu = zulu.bind(tango)(mike);
                            mike = 19;
                            mike = entity[mike];
                            entity = entity.paths;
                            zulu = zulu.bind(tango)(mike, entity);
                            mike = zulu.then;
                            entity = function(argFoo) {
                                mike = argFoo;
                                mike = mike.default;
                                var _closure6_slot0 = mike;
                                entity = function(argFoo) {
                                    report = argFoo;
                                    var _closure7_slot0 = report;
                                    tango = _closure1_slot10;
                                    zulu = _closure6_slot0;
                                    mike = {};
                                    options = mike;
                                    golf = report;
                                    report = copyDataProperties(options, golf);
                                    report = function() { // Original name: onCancel
                                        mike = _closure7_slot0;
                                        entity = mike.onClose;
                                        entity = entity.bind(mike)();
                                        zulu = _closure1_slot0;
                                        mike = _closure1_slot2;
                                        entity = 11;
                                        mike = mike[entity];
                                        entity = undefined;
                                        tango = zulu.bind(entity)(mike);
                                        zulu = tango.trackCtaEvent;
                                        mike = {};
                                        golf = _closure2_slot0;
                                        mike['channelId'] = golf;
                                        golf = _closure2_slot1;
                                        mike['warningId'] = golf;
                                        oscar = _closure2_slot2;
                                        mike['senderId'] = oscar;
                                        report = _closure1_slot5;
                                        report = report.STRANGER_DANGER;
                                        mike['warningType'] = report;
                                        report = _closure3_slot1;
                                        mike['cta'] = report;
                                        mike = zulu.bind(tango)(mike);
                                        return entity;
                                    };
                                    entity = 'onCancel';
                                    mike[entity] = report;
                                    oscar = _closure2_slot2;
                                    report = 'userId';
                                    mike[report] = oscar;
                                    oscar = _closure2_slot0;
                                    report = 'channelId';
                                    mike[report] = oscar;
                                    oscar = _closure2_slot6;
                                    report = _closure3_slot0;
                                    entity = undefined;
                                    oscar = oscar.bind(entity)(report);
                                    report = 'onBlock';
                                    mike[report] = oscar;
                                    entity = tango.bind(entity)(zulu, mike);
                                    return entity;
                                };
                                return entity;
                            };
                            entity = mike.bind(zulu)(entity);
                            return entity;
                        };
                        mike['importer'] = golf;
                        mike = tango.bind(report)(mike);
                        _fun00004_ip = 224; continue _fun00003;
 67:
                        mike = 14;
                        mike = verify[mike];
                        options = undefined;
                        report = zulu.bind(options)(mike);
                        tango = report.openLazy;
                        golf = _closure1_slot0;
                        mike = 16;
                        mike = verify[mike];
                        yankee = golf.bind(options)(mike);
                        mike = 15;
                        zulu = verify[mike];
                        mike = verify.paths;
                        zulu = yankee.bind(options)(zulu, mike);
                        mike = _closure1_slot9;
                        entity = {};
                        yankee = _closure2_slot2;
                        entity['userId'] = yankee;
                        yankee = _closure2_slot0;
                        entity['channelId'] = yankee;
                        yankee = _closure2_slot6;
                        offset = _closure3_slot0;
                        offset = yankee.bind(options)(offset);
                        entity['onBlock'] = offset;
                        offset = function() { // Original name: onSuccess
                            zulu = _closure1_slot1;
                            mike = _closure1_slot2;
                            entity = 14;
                            mike = mike[entity];
                            entity = undefined;
                            mike = zulu.bind(entity)(mike);
                            entity = mike.hideActionSheet;
                            entity = entity.bind(mike)();
                            return entity;
                        };
                        entity['onSuccess'] = offset;
                        oscar = function() { // Original name: onIgnore
                            mike = _closure2_slot5;
                            entity = undefined;
                            mike = mike.bind(entity)();
                            oscar = _closure1_slot0;
                            golf = _closure1_slot2;
                            report = 11;
                            mike = golf[report];
                            tango = oscar.bind(entity)(mike);
                            zulu = tango.trackCtaEvent;
                            mike = {};
                            offset = _closure2_slot0;
                            mike['channelId'] = offset;
                            offset = _closure2_slot1;
                            mike['warningId'] = offset;
                            verify = _closure2_slot2;
                            mike['senderId'] = verify;
                            options = _closure1_slot5;
                            options = options.STRANGER_DANGER;
                            mike['warningType'] = options;
                            report = golf[report];
                            report = oscar.bind(entity)(report);
                            report = report.CtaEventTypes;
                            report = report.USER_BANNER_IGNORE_CONFIRM;
                            mike['cta'] = report;
                            mike = zulu.bind(tango)(mike);
                            return entity;
                        };
                        entity['onIgnore'] = oscar;
                        oscar = 17;
                        oscar = verify[oscar];
                        oscar = golf.bind(options)(oscar);
                        oscar = oscar.ImpressionNames;
                        oscar = oscar.BLOCK_USER_CONFIRMATION;
                        entity['impressionName'] = oscar;
                        entity = tango.bind(report)(zulu, mike, entity);
 224:
                        entity = undefined;
                        return entity;
                    }
                };
                return entity;
            };
            verify = zulu.bind(verify)(entity, mike);
            var _closure2_slot7 = verify;
            zulu = _closure1_slot10;
            mike = _closure1_slot1;
            entity = 20;
            entity = yankee[entity];
            mike = mike.bind(tango)(entity);
            entity = {};
            entity['channelId'] = foxtrot;
            entity['warningId'] = romeo;
            entity['senderId'] = golf;
            golf = _closure1_slot5;
            golf = golf.STRANGER_DANGER;
            entity['warningType'] = golf;
            golf = 21;
            romeo = yankee[golf];
            romeo = backup.bind(tango)(romeo);
            kilo = romeo.intl;
            foxtrot = kilo.string;
            romeo = yankee[golf];
            romeo = backup.bind(tango)(romeo);
            romeo = romeo.t;
            romeo = romeo.iOkDpK;
            romeo = foxtrot.bind(kilo)(romeo);
            entity['header'] = romeo;
            romeo = yankee[golf];
            romeo = backup.bind(tango)(romeo);
            kilo = romeo.intl;
            foxtrot = kilo.string;
            romeo = yankee[golf];
            romeo = backup.bind(tango)(romeo);
            romeo = romeo.t;
            romeo = romeo.ISUbcH;
            romeo = foxtrot.bind(kilo)(romeo);
            entity['description'] = romeo;
            entity['onDismiss'] = offset;
            offset = {};
            romeo = yankee[golf];
            romeo = backup.bind(tango)(romeo);
            foxtrot = romeo.intl;
            romeo = foxtrot.string;
            yankee = yankee[golf];
            yankee = backup.bind(tango)(yankee);
            yankee = yankee.t;
            yankee = yankee.Qk/c4+;
            yankee = romeo.bind(foxtrot)(yankee);
            offset['text'] = yankee;
            yankee = 'primary';
            offset['variant'] = yankee;
            report = function() { // Original name: onpress
                backup = _closure1_slot1;
                golf = _closure1_slot2;
                entity = 13;
                mike = golf[entity];
                entity = undefined;
                foxtrot = backup.bind(entity)(mike);
                romeo = foxtrot.pushLazy;
                oscar = _closure1_slot0;
                mike = 16;
                mike = golf[mike];
                tango = oscar.bind(entity)(mike);
                mike = 22;
                zulu = golf[mike];
                mike = golf.paths;
                tango = tango.bind(entity)(zulu, mike);
                zulu = {};
                mike = _closure1_slot6;
                zulu['modalKey'] = mike;
                mike = _closure2_slot3;
                mike = mike.moreTipsHeader;
                zulu['headerStyle'] = mike;
                yankee = _closure2_slot0;
                zulu['channelId'] = yankee;
                offset = _closure2_slot1;
                zulu['warningId'] = offset;
                verify = _closure2_slot2;
                zulu['senderId'] = verify;
                mike = 21;
                kilo = golf[mike];
                kilo = oscar.bind(entity)(kilo);
                sizing = kilo.intl;
                kilo = sizing.string;
                mike = golf[mike];
                mike = oscar.bind(entity)(mike);
                mike = mike.t;
                mike = mike.DJMZX1;
                mike = kilo.bind(sizing)(mike);
                zulu['description'] = mike;
                mike = _closure1_slot7;
                sizing = mike.bind(entity)();
                kilo = sizing.map;
                mike = function(argFoo, argBar) {
                    report = _closure1_slot10;
                    mike = _closure1_slot0;
                    zulu = _closure1_slot2;
                    entity = 23;
                    entity = zulu[entity];
                    tango = undefined;
                    entity = mike.bind(tango)(entity);
                    zulu = entity.Text;
                    mike = {};
                    entity = 'text-sm/medium';
                    mike['variant'] = entity;
                    entity = argFoo;
                    mike['children'] = entity;
                    entity = argBar;
                    entity = report.bind(tango)(zulu, mike, entity);
                    return entity;
                };
                mike = kilo.bind(sizing)(mike);
                zulu['safetyTips'] = mike;
                kilo = _closure1_slot10;
                mike = 24;
                mike = golf[mike];
                backup = backup.bind(entity)(mike);
                mike = {};
                mike['channelId'] = yankee;
                mike['warningId'] = offset;
                mike['senderId'] = verify;
                result = _closure2_slot7;
                report = 11;
                sizing = golf[report];
                sizing = oscar.bind(entity)(sizing);
                sizing = sizing.CtaEventTypes;
                output = sizing.USER_MODAL_BLOCK_CONFIRM;
                sizing = golf[report];
                sizing = oscar.bind(entity)(sizing);
                sizing = sizing.CtaEventTypes;
                sizing = sizing.USER_MODAL_BLOCK_CANCEL;
                sizing = result.bind(entity)(output, sizing);
                mike['onBlockPressed'] = sizing;
                mike = kilo.bind(entity)(backup, mike);
                zulu['actionItems'] = mike;
                mike = _closure1_slot6;
                mike = romeo.bind(foxtrot)(tango, zulu, mike);
                mike = golf[report];
                tango = oscar.bind(entity)(mike);
                zulu = tango.trackCtaEvent;
                mike = {};
                mike['channelId'] = yankee;
                mike['warningId'] = offset;
                mike['senderId'] = verify;
                options = _closure1_slot5;
                options = options.STRANGER_DANGER;
                mike['warningType'] = options;
                report = golf[report];
                report = oscar.bind(entity)(report);
                report = report.CtaEventTypes;
                report = report.OPEN_MORE_TIPS;
                mike['cta'] = report;
                mike = zulu.bind(tango)(mike);
                return entity;
            };
            offset['onpress'] = report;
            report = new Array(1);
            report[0] = offset;
            if(oscar) { _fun00002_ip = 698; continue _fun00001 }
 564:
            oscar = {};
            offset = _closure1_slot0;
            yankee = _closure1_slot2;
            options = yankee[golf];
            options = offset.bind(tango)(options);
            romeo = options.intl;
            options = romeo.string;
            golf = yankee[golf];
            golf = offset.bind(tango)(golf);
            golf = golf.t;
            golf = golf.ie0QdH;
            golf = options.bind(romeo)(golf);
            oscar['text'] = golf;
            golf = 'destructive';
            oscar['variant'] = golf;
            golf = 11;
            options = yankee[golf];
            options = offset.bind(tango)(options);
            options = options.CtaEventTypes;
            options = options.USER_BANNER_BLOCK_CONFIRM;
            golf = yankee[golf];
            golf = offset.bind(tango)(golf);
            golf = golf.CtaEventTypes;
            golf = golf.USER_BANNER_BLOCK_CANCEL;
            golf = verify.bind(tango)(options, golf);
            oscar['onpress'] = golf;
            golf = new Array(1);
            golf[0] = oscar;
            _fun00002_ip = 702; continue _fun00001;
 698:
            golf = new Array(0);
 702:
            sizing = 1;
            result = report;
            output = golf;
            oscar = arraySpread(result, output, sizing);
            entity['buttons'] = report;
            entity = zulu.bind(tango)(mike, entity);
            return entity;
        }
    };
    entity = global;
    verify = entity.Object;
    options = verify.defineProperty;
    tango = {};
    entity = true;
    tango['value'] = entity;
    entity = '__esModule';
    entity = options.bind(verify)(zulu, entity, tango);
    entity = 0;
    options = oscar[entity];
    tango = argCorge;
    entity = undefined;
    tango = tango.bind(entity)(options);
    var _closure1_slot3 = tango;
    tango = 1;
    tango = oscar[tango];
    tango = romeo.bind(entity)(tango);
    var _closure1_slot4 = tango;
    tango = 2;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.SafetyWarningTypes;
    var _closure1_slot5 = tango;
    tango = 3;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    options = tango.STRANGER_DANGER_MORE_TIPS_MODAL_KEY;
    var _closure1_slot6 = options;
    tango = tango.getStrangerDangerSafetyTips;
    var _closure1_slot7 = tango;
    tango = 4;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.AnalyticEvents;
    var _closure1_slot8 = tango;
    tango = 5;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.BLOCK_CONFIRMATION_ACTION_SHEET_KEY;
    var _closure1_slot9 = tango;
    tango = 6;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.jsx;
    var _closure1_slot10 = tango;
    tango = 7;
    tango = oscar[tango];
    verify = report.bind(entity)(tango);
    options = verify.createStyles;
    tango = {};
    offset = {};
    yankee = 8;
    yankee = oscar[yankee];
    yankee = romeo.bind(entity)(yankee);
    yankee = yankee.colors;
    yankee = yankee.BG_BASE_SECONDARY;
    offset['backgroundColor'] = yankee;
    yankee = 'transparent';
    offset['shadowColor'] = yankee;
    tango['moreTipsHeader'] = offset;
    tango = options.bind(verify)(tango);
    var _closure1_slot11 = tango;
    tango = 25;
    tango = oscar[tango];
    oscar = report.bind(entity)(tango);
    report = oscar.fileFinishedImporting;
    tango = 'modules/self_mod/stranger_danger/native/components/StrangerDangerWarningBanner.tsx';
    tango = report.bind(oscar)(tango);
    zulu['default'] = mike;
    zulu['StrangerDangerWarningBanner'] = mike;
    return entity;
})();