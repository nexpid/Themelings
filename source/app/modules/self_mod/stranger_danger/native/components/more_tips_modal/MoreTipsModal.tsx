// app/modules/self_mod/stranger_danger/native/components/more_tips_modal/MoreTipsModal.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    report = argBar;
    yankee = argBaz;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    var _closure1_slot1 = yankee;
    var _closure1_slot2 = oscard;
    entity = function(argFoo) { // Original name: MoreTipsModalScreen
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            entity = argFoo;
            backup = entity.channelId;
            foxtra = entity.warningId;
            romeon = entity.senderId;
            update = entity.description;
            echoed = entity.safetyTips;
            result = entity.actionItems;
            ctrled = entity.learnMore;
            entity = _closure1_slot10;
            tangon = undefined;
            source = entity.bind(tangon)();
            zuuluu = _closure1_slot8;
            michal = _closure1_slot5;
            entity = {};
            report = 'handled';
            entity['keyboardShouldPersistTaps'] = report;
            report = source.scroll;
            entity['style'] = report;
            golfie = _closure1_slot9;
            oscard = _closure1_slot4;
            report = {};
            option = source.contentContainer;
            report['style'] = option;
            yankee = _closure1_slot9;
            offset = _closure1_slot4;
            option = {};
            kiloes = source.tipsContainer;
            option['style'] = kiloes;
            output = _closure1_slot8;
            sizing = _closure1_slot1;
            vacuum = _closure1_slot2;
            kiloes = 7;
            kiloes = vacuum[kiloes];
            sizing = sizing.bind(tangon)(kiloes);
            kiloes = {};
            kiloes['description'] = update;
            kiloes['safetyTips'] = echoed;
            echoed = true;
            kiloes['showHeader'] = echoed;
            sizing = output.bind(tangon)(sizing, kiloes);
            kiloes = new Array(2);
            kiloes[0] = sizing;
            sizing = null;
            output = sizing != ctrled;
            if(!output) { _fun00002_ip = 220; continue _fun00001 }
 190:
            update = _closure1_slot8;
            echoed = _closure1_slot4;
            output = {};
            vacuum = source.learnMore;
            output['style'] = vacuum;
            output['children'] = ctrled;
            sizing = update.bind(tangon)(echoed, output);
 220:
            kiloes[1] = sizing;
            option['children'] = kiloes;
            offset = yankee.bind(tangon)(offset, option);
            option = new Array(3);
            option[0] = offset;
            sizing = _closure1_slot9;
            yankee = _closure1_slot4;
            offset = {};
            update = _closure1_slot8;
            sequen = _closure1_slot0;
            kiloes = _closure1_slot2;
            output = 8;
            output = kiloes[output];
            output = sequen.bind(tangon)(output);
            echoed = output.Text;
            output = {'variant': 'eyebrow', 'color': 'header-secondary'};
            source = source.header;
            output['style'] = source;
            source = 9;
            ctrled = kiloes[source];
            ctrled = sequen.bind(tangon)(ctrled);
            vacuum = ctrled.intl;
            ctrled = vacuum.string;
            source = kiloes[source];
            source = sequen.bind(tangon)(source);
            source = source.t;
            source = source.K5FKtb;
            source = ctrled.bind(vacuum)(source);
            output['children'] = source;
            echoed = update.bind(tangon)(echoed, output);
            output = new Array(2);
            output[0] = echoed;
            output[1] = result;
            offset['children'] = output;
            offset = sizing.bind(tangon)(yankee, offset);
            option[1] = offset;
            yankee = _closure1_slot8;
            offset = _closure1_slot1;
            verify = 10;
            verify = kiloes[verify];
            offset = offset.bind(tangon)(verify);
            verify = {};
            verify['channelId'] = backup;
            verify['warningId'] = foxtra;
            verify['senderId'] = romeon;
            verify = yankee.bind(tangon)(offset, verify);
            option[2] = verify;
            report['children'] = option;
            report = golfie.bind(tangon)(oscard, report);
            entity['children'] = report;
            entity = zuuluu.bind(tangon)(michal, entity);
            return entity;
        }
    };
    var _closure1_slot11 = entity;
    entity = function(argFoo) { // Original name: getScreens
        entity = argFoo;
        tangon = entity.headerStyle;
        michal = entity.modalKey;
        var _closure2_slot0 = michal;
        michal = entity.channelId;
        var _closure2_slot1 = michal;
        michal = entity.warningId;
        var _closure2_slot2 = michal;
        michal = entity.senderId;
        var _closure2_slot3 = michal;
        michal = entity.description;
        var _closure2_slot4 = michal;
        michal = entity.safetyTips;
        var _closure2_slot5 = michal;
        michal = entity.actionItems;
        var _closure2_slot6 = michal;
        entity = entity.learnMore;
        var _closure2_slot7 = entity;
        entity = {};
        michal = {};
        report = function() { // Original name: headerRight
            tangon = _closure1_slot8;
            option = _closure1_slot0;
            verify = _closure1_slot2;
            entity = 11;
            entity = verify[entity];
            zuuluu = undefined;
            entity = option.bind(zuuluu)(entity);
            michal = entity.HeaderActionButton;
            entity = {};
            oscard = function() { // Original name: onPress
                zuuluu = _closure1_slot1;
                michal = _closure1_slot2;
                entity = 12;
                michal = michal[entity];
                entity = undefined;
                zuuluu = zuuluu.bind(entity)(michal);
                michal = zuuluu.popWithKey;
                entity = _closure2_slot0;
                entity = michal.bind(zuuluu)(entity);
                return entity;
            };
            entity['onPress'] = oscard;
            oscard = _closure1_slot1;
            report = 13;
            report = verify[report];
            report = oscard.bind(zuuluu)(report);
            entity['source'] = report;
            report = 14;
            report = verify[report];
            report = option.bind(zuuluu)(report);
            report = report.IconSizes;
            report = report.MEDIUM;
            entity['iconSize'] = report;
            report = 9;
            oscard = verify[report];
            oscard = option.bind(zuuluu)(oscard);
            golfie = oscard.intl;
            oscard = golfie.string;
            report = verify[report];
            report = option.bind(zuuluu)(report);
            report = report.t;
            report = report.cpT0Cg;
            report = oscard.bind(golfie)(report);
            entity['accessibilityLabel'] = report;
            entity = tangon.bind(zuuluu)(michal, entity);
            return entity;
        };
        michal['headerRight'] = report;
        report = function() { // Original name: headerTitle
            entity = null;
            return entity;
        };
        michal['headerTitle'] = report;
        report = function() { // Original name: headerLeft
            entity = null;
            return entity;
        };
        michal['headerLeft'] = report;
        michal['headerStyle'] = tangon;
        zuuluu = function() { // Original name: render
            tangon = _closure1_slot8;
            zuuluu = _closure1_slot11;
            michal = {};
            report = _closure2_slot1;
            michal['channelId'] = report;
            report = _closure2_slot2;
            michal['warningId'] = report;
            report = _closure2_slot3;
            michal['senderId'] = report;
            report = _closure2_slot4;
            michal['description'] = report;
            report = _closure2_slot5;
            michal['safetyTips'] = report;
            report = _closure2_slot6;
            michal['actionItems'] = report;
            entity = _closure2_slot7;
            michal['learnMore'] = entity;
            entity = undefined;
            entity = tangon.bind(entity)(zuuluu, michal);
            return entity;
        };
        michal['render'] = zuuluu;
        entity['MORE_TIPS'] = michal;
        return entity;
    };
    var _closure1_slot12 = entity;
    entity = global;
    option = entity.Object;
    golfie = option.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(option)(zuuluu, entity, tangon);
    entity = 0;
    golfie = oscard[entity];
    tangon = argCor;
    entity = undefined;
    tangon = tangon.bind(entity)(golfie);
    var _closure1_slot3 = tangon;
    tangon = 1;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    golfie = tangon.View;
    var _closure1_slot4 = golfie;
    tangon = tangon.ScrollView;
    var _closure1_slot5 = tangon;
    tangon = 2;
    tangon = oscard[tangon];
    tangon = yankee.bind(entity)(tangon);
    var _closure1_slot6 = tangon;
    tangon = 3;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.AnalyticEvents;
    var _closure1_slot7 = tangon;
    tangon = 4;
    golfie = oscard[tangon];
    golfie = report.bind(entity)(golfie);
    golfie = golfie.jsx;
    var _closure1_slot8 = golfie;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.jsxs;
    var _closure1_slot9 = tangon;
    tangon = 5;
    tangon = oscard[tangon];
    option = report.bind(entity)(tangon);
    golfie = option.createStyles;
    tangon = {};
    verify = {};
    offset = 6;
    romeon = oscard[offset];
    romeon = yankee.bind(entity)(romeon);
    romeon = romeon.colors;
    romeon = romeon.BG_BASE_SECONDARY;
    verify['backgroundColor'] = romeon;
    tangon['scroll'] = verify;
    verify = {};
    romeon = oscard[offset];
    romeon = yankee.bind(entity)(romeon);
    romeon = romeon.spacing;
    romeon = romeon.PX_16;
    verify['marginHorizontal'] = romeon;
    romeon = oscard[offset];
    romeon = yankee.bind(entity)(romeon);
    romeon = romeon.spacing;
    romeon = romeon.PX_16;
    verify['marginBottom'] = romeon;
    romeon = oscard[offset];
    romeon = yankee.bind(entity)(romeon);
    romeon = romeon.spacing;
    romeon = romeon.PX_16;
    verify['gap'] = romeon;
    tangon['contentContainer'] = verify;
    verify = {};
    romeon = oscard[offset];
    romeon = yankee.bind(entity)(romeon);
    romeon = romeon.spacing;
    romeon = romeon.PX_8;
    verify['gap'] = romeon;
    tangon['tipsContainer'] = verify;
    verify = {};
    romeon = 'center';
    verify['alignItems'] = romeon;
    tangon['learnMore'] = verify;
    verify = {};
    romeon = oscard[offset];
    romeon = yankee.bind(entity)(romeon);
    romeon = romeon.spacing;
    romeon = romeon.PX_16;
    verify['marginTop'] = romeon;
    offset = oscard[offset];
    offset = yankee.bind(entity)(offset);
    offset = offset.spacing;
    offset = offset.PX_4;
    verify['marginBottom'] = offset;
    tangon['header'] = verify;
    tangon = golfie.bind(option)(tangon);
    var _closure1_slot10 = tangon;
    tangon = 21;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/self_mod/stranger_danger/native/components/more_tips_modal/MoreTipsModal.tsx';
    tangon = report.bind(oscard)(tangon);
    michal = function(argFoo) { // Original name: MoreTipsModal
        golfie = argFoo;
        backup = golfie.channelId;
        var _closure2_slot0 = backup;
        foxtra = golfie.warningId;
        var _closure2_slot1 = foxtra;
        romeon = golfie.senderId;
        var _closure2_slot2 = romeon;
        zuuluu = _closure1_slot1;
        option = _closure1_slot2;
        michal = 15;
        michal = option[michal];
        tangon = undefined;
        michal = zuuluu.bind(tangon)(michal);
        michal = michal.bind(tangon)();
        report = michal.top;
        michal = _closure1_slot0;
        zuuluu = 16;
        zuuluu = option[zuuluu];
        yankee = michal.bind(tangon)(zuuluu);
        offset = yankee.useStateFromStores;
        zuuluu = _closure1_slot6;
        verify = new Array(1);
        verify[0] = zuuluu;
        zuuluu = function() {
            tangon = _closure1_slot6;
            zuuluu = tangon.getChannelSafetyWarning;
            michal = _closure2_slot0;
            entity = _closure2_slot1;
            entity = zuuluu.bind(tangon)(michal, entity);
            return entity;
        };
        yankee = offset.bind(yankee)(verify, zuuluu);
        var _closure2_slot3 = yankee;
        offset = _closure1_slot3;
        verify = offset.useEffect;
        zuuluu = new Array(4);
        zuuluu[0] = backup;
        zuuluu[1] = foxtra;
        zuuluu[2] = romeon;
        zuuluu[3] = yankee;
        entity = function() {
            _fun00003: for(var _fun00004_ip = 0; ; ) switch(_fun00004_ip) {
 0:
                zuuluu = _closure1_slot0;
                michal = _closure1_slot2;
                entity = 17;
                michal = michal[entity];
                entity = undefined;
                oscard = zuuluu.bind(entity)(michal);
                tangon = oscard.trackViewedEvent;
                michal = _closure1_slot7;
                zuuluu = michal.SAFETY_WARNING_MODAL_VIEWED;
                michal = {};
                golfie = _closure2_slot0;
                michal['channelId'] = golfie;
                golfie = _closure2_slot1;
                michal['warningId'] = golfie;
                golfie = _closure2_slot2;
                michal['senderId'] = golfie;
                verify = _closure2_slot3;
                golfie = null;
                verify = golfie == verify;
                golfie = undefined;
                if(verify) { _fun00004_ip = 96; continue _fun00003 }
 87:
                option = _closure2_slot3;
                golfie = option.type;
 96:
                michal['warningType'] = golfie;
                michal = tangon.bind(oscard)(zuuluu, michal);
                zuuluu = _closure1_slot1;
                golfie = _closure1_slot2;
                michal = 18;
                michal = golfie[michal];
                tangon = zuuluu.bind(entity)(michal);
                zuuluu = tangon.increment;
                michal = {};
                oscard = _closure1_slot0;
                report = 19;
                report = golfie[report];
                report = oscard.bind(entity)(report);
                report = report.MetricEvents;
                report = report.SAFETY_WARNING_MODAL_VIEW;
                michal['name'] = report;
                michal = zuuluu.bind(tangon)(michal);
                return entity;
            }
        };
        entity = verify.bind(offset)(entity, zuuluu);
        zuuluu = _closure1_slot8;
        entity = 20;
        entity = option[entity];
        entity = michal.bind(tangon)(entity);
        michal = entity.Navigator;
        entity = {};
        oscard = _closure1_slot12;
        oscard = oscard.bind(tangon)(golfie);
        entity['screens'] = oscard;
        oscard = 'MORE_TIPS';
        entity['initialRouteName'] = oscard;
        entity['headerStatusBarHeight'] = report;
        entity = zuuluu.bind(tangon)(michal, entity);
        return entity;
    };
    zuuluu['default'] = michal;
    return entity;
})();