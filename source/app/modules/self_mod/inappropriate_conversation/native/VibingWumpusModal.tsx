// app/modules/self_mod/inappropriate_conversation/native/VibingWumpusModal.tsx
export default (function(_, argBar, argBaz, argCorge, __, argFred, argPlugh) {
    oscar = argBar;
    foxtrot = argBaz;
    zulu = argFred;
    golf = argPlugh;
    var _closure1_slot0 = oscar;
    var _closure1_slot1 = foxtrot;
    var _closure1_slot2 = golf;
    mike = function() { // Original name: VibingWumpusScreen
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            entity = _closure1_slot15;
            tango = undefined;
            foxtrot = entity.bind(tango)();
            zulu = _closure1_slot4;
            mike = zulu.useState;
            entity = false;
            zulu = mike.bind(zulu)(entity);
            mike = _closure1_slot3;
            entity = 2;
            mike = mike.bind(tango)(zulu, entity);
            entity = 0;
            output = mike[entity];
            var _closure2_slot0 = output;
            entity = 1;
            entity = mike[entity];
            var _closure2_slot1 = entity;
            zulu = _closure1_slot4;
            mike = zulu.useRef;
            entity = null;
            romeo = mike.bind(zulu)(entity);
            var _closure2_slot2 = romeo;
            sizing = _closure1_slot0;
            echo = _closure1_slot2;
            entity = 10;
            entity = echo[entity];
            report = sizing.bind(tango)(entity);
            zulu = report.useStateFromStores;
            entity = _closure1_slot7;
            mike = new Array(1);
            mike[0] = entity;
            entity = function() {
                entity = _closure1_slot7;
                entity = entity.useReducedMotion;
                return entity;
            };
            backup = zulu.bind(report)(mike, entity);
            var _closure2_slot3 = backup;
            report = _closure1_slot4;
            zulu = report.useEffect;
            mike = function() {
                mike = global;
                mike = mike.Date;
                zulu = mike.prototype;
                zulu = Object.create(zulu, {constructor: {value: mike}});
                verify = zulu;
                mike = new verify[mike](options);
                mike = mike instanceof Object ? mike : zulu;
                var _closure3_slot0 = mike;
                zulu = _closure1_slot0;
                report = _closure1_slot2;
                mike = 11;
                mike = report[mike];
                tango = undefined;
                zulu = zulu.bind(tango)(mike);
                mike = zulu.playVibingWumpusMusic;
                mike = mike.bind(zulu)();
                zulu = _closure1_slot1;
                mike = 12;
                mike = report[mike];
                report = zulu.bind(tango)(mike);
                tango = report.track;
                mike = _closure1_slot11;
                zulu = mike.VIBING_WUMPUS_VIEWED;
                mike = {};
                oscar = _closure1_slot10;
                oscar = oscar.INAPPROPRIATE_CONVERSATION;
                mike['source'] = oscar;
                mike = tango.bind(report)(zulu, mike);
                entity = function() {
                    report = _closure1_slot1;
                    tango = _closure1_slot2;
                    entity = 12;
                    zulu = tango[entity];
                    entity = undefined;
                    golf = report.bind(entity)(zulu);
                    oscar = golf.track;
                    zulu = _closure1_slot11;
                    report = zulu.VIBING_WUMPUS_CLOSED;
                    zulu = {};
                    options = global;
                    options = options.Date;
                    verify = options.prototype;
                    verify = Object.create(verify, {constructor: {value: options}});
                    foxtrot = verify;
                    options = new foxtrot[options](romeo);
                    verify = options instanceof Object ? options : verify;
                    options = verify.getTime;
                    verify = options.bind(verify)();
                    offset = _closure3_slot0;
                    options = offset.getTime;
                    options = options.bind(offset)();
                    options = verify - options;
                    zulu['duration_open_ms'] = options;
                    options = _closure1_slot10;
                    options = options.INAPPROPRIATE_CONVERSATION;
                    zulu['source'] = options;
                    zulu = oscar.bind(golf)(report, zulu);
                    zulu = _closure1_slot0;
                    mike = 11;
                    mike = tango[mike];
                    zulu = zulu.bind(entity)(mike);
                    mike = zulu.stopVibingWumpusMusic;
                    mike = mike.bind(zulu)();
                    return entity;
                };
                return entity;
            };
            entity = new Array(0);
            entity = zulu.bind(report)(mike, entity);
            zulu = _closure1_slot13;
            mike = _closure1_slot14;
            entity = {};
            golf = _closure1_slot12;
            oscar = _closure1_slot5;
            report = {};
            offset = _closure1_slot1;
            options = 13;
            options = echo[options];
            options = offset.bind(tango)(options);
            report['source'] = options;
            options = foxtrot.rings;
            report['style'] = options;
            oscar = golf.bind(tango)(oscar, report);
            report = new Array(2);
            report[0] = oscar;
            options = _closure1_slot13;
            golf = _closure1_slot6;
            oscar = {};
            verify = foxtrot.container;
            oscar['style'] = verify;
            yankee = _closure1_slot12;
            verify = 14;
            verify = echo[verify];
            offset = offset.bind(tango)(verify);
            verify = {};
            kilo = 15;
            kilo = echo[kilo];
            kilo = sizing.bind(tango)(kilo);
            verify['source'] = kilo;
            verify['ref'] = romeo;
            romeo = !backup;
            verify['autoPlay'] = romeo;
            romeo = true;
            verify['loop'] = romeo;
            romeo = foxtrot.wumpus;
            verify['style'] = romeo;
            romeo = undefined;
            if(!backup) { _fun00002_ip = 322; continue _fun00001 }
 312:
            romeo = 0.8;
 322:
            verify['progress'] = romeo;
            offset = yankee.bind(tango)(offset, verify);
            verify = new Array(3);
            verify[0] = offset;
            romeo = _closure1_slot13;
            yankee = _closure1_slot6;
            offset = {};
            backup = foxtrot.warningText;
            offset['style'] = backup;
            control = _closure1_slot12;
            kilo = _closure1_slot0;
            echo = _closure1_slot2;
            sizing = 16;
            backup = echo[sizing];
            backup = kilo.bind(tango)(backup);
            source = backup.Text;
            backup = {'variant': 'heading-xl/semibold', 'style': null, 'accessibilityRole': 'header'};
            vacuum = foxtrot.takeoverHeader;
            backup['style'] = vacuum;
            sequence = 17;
            vacuum = echo[sequence];
            vacuum = kilo.bind(tango)(vacuum);
            record = vacuum.intl;
            config = record.string;
            vacuum = echo[sequence];
            vacuum = kilo.bind(tango)(vacuum);
            vacuum = vacuum.t;
            vacuum = vacuum.L4ifkZ;
            vacuum = config.bind(record)(vacuum);
            backup['children'] = vacuum;
            source = control.bind(tango)(source, backup);
            backup = new Array(2);
            backup[0] = source;
            control = _closure1_slot12;
            sizing = echo[sizing];
            sizing = kilo.bind(tango)(sizing);
            source = sizing.Text;
            sizing = {};
            vacuum = 'text-md/medium';
            sizing['variant'] = vacuum;
            vacuum = foxtrot.takeoverDescription;
            sizing['style'] = vacuum;
            vacuum = echo[sequence];
            vacuum = kilo.bind(tango)(vacuum);
            record = vacuum.intl;
            config = record.string;
            vacuum = echo[sequence];
            vacuum = kilo.bind(tango)(vacuum);
            vacuum = vacuum.t;
            vacuum = vacuum.R8LCMT;
            vacuum = config.bind(record)(vacuum);
            sizing['children'] = vacuum;
            sizing = control.bind(tango)(source, sizing);
            backup[1] = sizing;
            offset['children'] = backup;
            offset = romeo.bind(tango)(yankee, offset);
            verify[1] = offset;
            romeo = _closure1_slot13;
            yankee = _closure1_slot6;
            offset = {};
            foxtrot = foxtrot.ctaContainer;
            offset['style'] = foxtrot;
            source = _closure1_slot12;
            backup = 18;
            foxtrot = echo[backup];
            foxtrot = kilo.bind(tango)(foxtrot);
            sizing = foxtrot.Button;
            foxtrot = {'variant': 'primary', 'size': 'lg', 'text': null, 'grow': true};
            control = echo[sequence];
            control = kilo.bind(tango)(control);
            config = control.intl;
            vacuum = config.string;
            control = echo[sequence];
            control = kilo.bind(tango)(control);
            control = control.t;
            control = control.8eKkaW;
            control = vacuum.bind(config)(control);
            foxtrot['text'] = control;
            control = function() { // Original name: onPress
                tango = _closure1_slot1;
                report = _closure1_slot2;
                entity = 12;
                zulu = report[entity];
                entity = undefined;
                options = tango.bind(entity)(zulu);
                golf = options.track;
                zulu = _closure1_slot11;
                oscar = zulu.VIBING_WUMPUS_ACTION;
                zulu = {};
                verify = _closure1_slot9;
                verify = verify.BACK_TO_CONVERSATION;
                zulu['action'] = verify;
                zulu = golf.bind(options)(oscar, zulu);
                zulu = 19;
                zulu = report[zulu];
                tango = tango.bind(entity)(zulu);
                zulu = tango.popWithKey;
                mike = _closure1_slot8;
                mike = zulu.bind(tango)(mike);
                return entity;
            };
            foxtrot['onPress'] = control;
            sizing = source.bind(tango)(sizing, foxtrot);
            foxtrot = new Array(2);
            foxtrot[0] = sizing;
            sizing = _closure1_slot12;
            backup = echo[backup];
            backup = kilo.bind(tango)(backup);
            kilo = backup.Button;
            backup = {'variant': 'tertiary', 'size': 'lg', 'text': null, 'grow': true};
            source = _closure1_slot0;
            echo = _closure1_slot2;
            control = echo[sequence];
            control = source.bind(tango)(control);
            vacuum = control.intl;
            control = vacuum.string;
            echo = echo[sequence];
            echo = source.bind(tango)(echo);
            source = echo.t;
            if(output) { _fun00002_ip = 812; continue _fun00001 }
 799:
            echo = source.ZcgDJS;
            echo = control.bind(vacuum)(echo);
            _fun00002_ip = 823; continue _fun00001;
 812:
            source = source.RscU7O;
            echo = control.bind(vacuum)(source);
 823:
            backup['text'] = echo;
            result = function() { // Original name: onPress
                _fun00003: for(var _fun00004_ip = 0; ; ) switch(_fun00004_ip) {
 0:
                    zulu = _closure2_slot0;
                    oscar = _closure1_slot0;
                    report = _closure1_slot2;
                    entity = 11;
                    tango = report[entity];
                    entity = undefined;
                    tango = oscar.bind(entity)(tango);
                    if(zulu) { _fun00004_ip = 100; continue _fun00003 }
 35:
                    zulu = tango.pauseVibingWumpusMusic;
                    zulu = zulu.bind(tango)();
                    oscar = _closure1_slot1;
                    zulu = 12;
                    zulu = report[zulu];
                    verify = oscar.bind(entity)(zulu);
                    options = verify.track;
                    zulu = _closure1_slot11;
                    oscar = zulu.VIBING_WUMPUS_ACTION;
                    zulu = {};
                    offset = _closure1_slot9;
                    offset = offset.PAUSE;
                    zulu['action'] = offset;
                    zulu = options.bind(verify)(oscar, zulu);
                    _fun00004_ip = 163; continue _fun00003;
 100:
                    zulu = tango.playVibingWumpusMusic;
                    zulu = zulu.bind(tango)();
                    tango = _closure1_slot1;
                    zulu = 12;
                    zulu = report[zulu];
                    oscar = tango.bind(entity)(zulu);
                    report = oscar.track;
                    zulu = _closure1_slot11;
                    tango = zulu.VIBING_WUMPUS_ACTION;
                    zulu = {};
                    golf = _closure1_slot9;
                    golf = golf.PLAY;
                    zulu['action'] = golf;
                    zulu = report.bind(oscar)(tango, zulu);
 163:
                    zulu = _closure2_slot3;
                    if(zulu) { _fun00004_ip = 204; continue _fun00003 }
 170:
                    zulu = _closure2_slot0;
                    if(!zulu) { _fun00004_ip = 204; continue _fun00003 }
 177:
                    zulu = _closure2_slot2;
                    tango = zulu.current;
                    zulu = null;
                    if(!(zulu != tango)) { _fun00004_ip = 243; continue _fun00003 }
 192:
                    zulu = tango.resume;
                    zulu = zulu.bind(tango)();
                    _fun00004_ip = 243; continue _fun00003;
 204:
                    zulu = _closure2_slot3;
                    if(zulu) { _fun00004_ip = 243; continue _fun00003 }
 211:
                    zulu = _closure2_slot0;
                    if(zulu) { _fun00004_ip = 243; continue _fun00003 }
 218:
                    zulu = _closure2_slot2;
                    tango = zulu.current;
                    zulu = null;
                    if(!(zulu != tango)) { _fun00004_ip = 243; continue _fun00003 }
 233:
                    zulu = tango.pause;
                    zulu = zulu.bind(tango)();
 243:
                    zulu = _closure2_slot1;
                    mike = _closure2_slot0;
                    mike = !mike;
                    mike = zulu.bind(entity)(mike);
                    return entity;
                }
            };
            backup['onPress'] = result;
            echo = _closure1_slot12;
            source = _closure1_slot0;
            control = _closure1_slot2;
            if(output) { _fun00002_ip = 873; continue _fun00001 }
 853:
            output = 21;
            output = control[output];
            output = source.bind(tango)(output);
            result = output.PauseIcon;
            _fun00002_ip = 891; continue _fun00001;
 873:
            output = 20;
            output = control[output];
            output = source.bind(tango)(output);
            result = output.PlayIcon;
 891:
            output = {};
            source = 'md';
            output['size'] = source;
            source = _closure1_slot1;
            control = _closure1_slot2;
            update = 9;
            update = control[update];
            update = source.bind(tango)(update);
            update = update.colors;
            update = update.REDESIGN_BUTTON_TERTIARY_TEXT;
            output['color'] = update;
            output = echo.bind(tango)(result, output);
            backup['icon'] = output;
            backup = sizing.bind(tango)(kilo, backup);
            foxtrot[1] = backup;
            offset['children'] = foxtrot;
            offset = romeo.bind(tango)(yankee, offset);
            verify[2] = offset;
            oscar['children'] = verify;
            oscar = options.bind(tango)(golf, oscar);
            report[1] = oscar;
            entity['children'] = report;
            entity = zulu.bind(tango)(mike, entity);
            return entity;
        }
    };
    var _closure1_slot16 = mike;
    entity = global;
    verify = entity.Object;
    options = verify.defineProperty;
    report = {};
    entity = true;
    report['value'] = entity;
    entity = '__esModule';
    entity = options.bind(verify)(zulu, entity, report);
    entity = 0;
    report = golf[entity];
    entity = undefined;
    report = foxtrot.bind(entity)(report);
    var _closure1_slot3 = report;
    report = 1;
    options = golf[report];
    report = argCorge;
    report = report.bind(entity)(options);
    var _closure1_slot4 = report;
    report = 2;
    report = golf[report];
    report = oscar.bind(entity)(report);
    options = report.Image;
    var _closure1_slot5 = options;
    report = report.View;
    var _closure1_slot6 = report;
    report = 3;
    report = golf[report];
    report = foxtrot.bind(entity)(report);
    var _closure1_slot7 = report;
    report = 4;
    report = golf[report];
    report = oscar.bind(entity)(report);
    report = report.VIBING_WUMPUS_MODAL_KEY;
    var _closure1_slot8 = report;
    report = 5;
    report = golf[report];
    report = oscar.bind(entity)(report);
    options = report.VibingWumpusAction;
    var _closure1_slot9 = options;
    report = report.VibingWumpusSource;
    var _closure1_slot10 = report;
    report = 6;
    report = golf[report];
    report = oscar.bind(entity)(report);
    report = report.AnalyticEvents;
    var _closure1_slot11 = report;
    report = 7;
    options = golf[report];
    options = oscar.bind(entity)(options);
    options = options.jsx;
    var _closure1_slot12 = options;
    options = golf[report];
    options = oscar.bind(entity)(options);
    options = options.jsxs;
    var _closure1_slot13 = options;
    report = golf[report];
    report = oscar.bind(entity)(report);
    report = report.Fragment;
    var _closure1_slot14 = report;
    report = 8;
    report = golf[report];
    verify = oscar.bind(entity)(report);
    options = verify.createStyles;
    report = {};
    offset = {'display': 'flex', 'alignItems': 'center', 'justifyContent': 'center', 'padding': null, 'gap': null, 'height': '100%'};
    yankee = 'center';
    romeo = 9;
    backup = golf[romeo];
    backup = foxtrot.bind(entity)(backup);
    backup = backup.spacing;
    backup = backup.PX_32;
    offset['padding'] = backup;
    backup = golf[romeo];
    backup = foxtrot.bind(entity)(backup);
    backup = backup.spacing;
    backup = backup.PX_16;
    offset['gap'] = backup;
    report['container'] = offset;
    offset = {};
    backup = golf[romeo];
    backup = foxtrot.bind(entity)(backup);
    backup = backup.spacing;
    backup = backup.PX_16;
    offset['marginBottom'] = backup;
    backup = golf[romeo];
    backup = foxtrot.bind(entity)(backup);
    backup = backup.spacing;
    backup = backup.PX_4;
    offset['gap'] = backup;
    report['warningText'] = offset;
    offset = {'display': 'flex', 'alignItems': 'center', 'alignSelf': 'stretch'};
    romeo = golf[romeo];
    romeo = foxtrot.bind(entity)(romeo);
    romeo = romeo.spacing;
    romeo = romeo.PX_16;
    offset['gap'] = romeo;
    report['ctaContainer'] = offset;
    offset = {};
    offset['textAlign'] = yankee;
    report['takeoverHeader'] = offset;
    offset = {};
    offset['textAlign'] = yankee;
    report['takeoverDescription'] = offset;
    offset = {};
    yankee = 187;
    offset['height'] = yankee;
    report['wumpus'] = offset;
    offset = {'position': 'absolute', 'width': '100%', 'height': 440, 'top': 120};
    report['rings'] = offset;
    report = options.bind(verify)(report);
    var _closure1_slot15 = report;
    report = 23;
    report = golf[report];
    golf = oscar.bind(entity)(report);
    oscar = golf.fileFinishedImporting;
    report = 'modules/self_mod/inappropriate_conversation/native/VibingWumpusModal.tsx';
    report = oscar.bind(golf)(report);
    tango = function() { // Original name: VibingWumpusModal
        tango = _closure1_slot12;
        mike = _closure1_slot0;
        zulu = _closure1_slot2;
        entity = 22;
        entity = zulu[entity];
        zulu = undefined;
        entity = mike.bind(zulu)(entity);
        mike = entity.Navigator;
        entity = {};
        report = {};
        oscar = {'title': '', 'fullscreen': true, 'headerShown': false};
        golf = function() { // Original name: render
            tango = _closure1_slot12;
            zulu = _closure1_slot16;
            mike = undefined;
            entity = {};
            entity = tango.bind(mike)(zulu, entity);
            return entity;
        };
        oscar['render'] = golf;
        report['VIBING_WUMPUS'] = oscar;
        entity['screens'] = report;
        report = 'VIBING_WUMPUS';
        entity['initialRouteName'] = report;
        entity = tango.bind(zulu)(mike, entity);
        return entity;
    };
    zulu['default'] = tango;
    zulu['VibingWumpusScreen'] = mike;
    return entity;
})();