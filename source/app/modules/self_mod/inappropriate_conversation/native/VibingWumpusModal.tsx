// app/modules/self_mod/inappropriate_conversation/native/VibingWumpusModal.tsx
export default (function(_, argBar, argBaz, argCor, __, argFre, argPlu) {
    oscard = argBar;
    foxtra = argBaz;
    zuuluu = argFre;
    golfie = argPlu;
    var _closure1_slot0 = oscard;
    var _closure1_slot1 = foxtra;
    var _closure1_slot2 = golfie;
    michal = function() { // Original name: VibingWumpusScreen
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            entity = _closure1_slot15;
            tangon = undefined;
            foxtra = entity.bind(tangon)();
            zuuluu = _closure1_slot4;
            michal = zuuluu.useState;
            entity = false;
            zuuluu = michal.bind(zuuluu)(entity);
            michal = _closure1_slot3;
            entity = 2;
            michal = michal.bind(tangon)(zuuluu, entity);
            entity = 0;
            output = michal[entity];
            var _closure2_slot0 = output;
            entity = 1;
            entity = michal[entity];
            var _closure2_slot1 = entity;
            zuuluu = _closure1_slot4;
            michal = zuuluu.useRef;
            entity = null;
            romeon = michal.bind(zuuluu)(entity);
            var _closure2_slot2 = romeon;
            sizing = _closure1_slot0;
            echoed = _closure1_slot2;
            entity = 10;
            entity = echoed[entity];
            report = sizing.bind(tangon)(entity);
            zuuluu = report.useStateFromStores;
            entity = _closure1_slot7;
            michal = new Array(1);
            michal[0] = entity;
            entity = function() {
                entity = _closure1_slot7;
                entity = entity.useReducedMotion;
                return entity;
            };
            backup = zuuluu.bind(report)(michal, entity);
            var _closure2_slot3 = backup;
            report = _closure1_slot4;
            zuuluu = report.useEffect;
            michal = function() {
                michal = global;
                michal = michal.Date;
                zuuluu = michal.prototype;
                zuuluu = Object.create(zuuluu, {constructor: {value: michal}});
                verify = zuuluu;
                michal = new verify[michal](option);
                michal = michal instanceof Object ? michal : zuuluu;
                var _closure3_slot0 = michal;
                zuuluu = _closure1_slot0;
                report = _closure1_slot2;
                michal = 11;
                michal = report[michal];
                tangon = undefined;
                zuuluu = zuuluu.bind(tangon)(michal);
                michal = zuuluu.playVibingWumpusMusic;
                michal = michal.bind(zuuluu)();
                zuuluu = _closure1_slot1;
                michal = 12;
                michal = report[michal];
                report = zuuluu.bind(tangon)(michal);
                tangon = report.track;
                michal = _closure1_slot11;
                zuuluu = michal.VIBING_WUMPUS_VIEWED;
                michal = {};
                oscard = _closure1_slot10;
                oscard = oscard.INAPPROPRIATE_CONVERSATION;
                michal['source'] = oscard;
                michal = tangon.bind(report)(zuuluu, michal);
                entity = function() {
                    report = _closure1_slot1;
                    tangon = _closure1_slot2;
                    entity = 12;
                    zuuluu = tangon[entity];
                    entity = undefined;
                    golfie = report.bind(entity)(zuuluu);
                    oscard = golfie.track;
                    zuuluu = _closure1_slot11;
                    report = zuuluu.VIBING_WUMPUS_CLOSED;
                    zuuluu = {};
                    option = global;
                    option = option.Date;
                    verify = option.prototype;
                    verify = Object.create(verify, {constructor: {value: option}});
                    foxtra = verify;
                    option = new foxtra[option](romeon);
                    verify = option instanceof Object ? option : verify;
                    option = verify.getTime;
                    verify = option.bind(verify)();
                    offset = _closure3_slot0;
                    option = offset.getTime;
                    option = option.bind(offset)();
                    option = verify - option;
                    zuuluu['duration_open_ms'] = option;
                    option = _closure1_slot10;
                    option = option.INAPPROPRIATE_CONVERSATION;
                    zuuluu['source'] = option;
                    zuuluu = oscard.bind(golfie)(report, zuuluu);
                    zuuluu = _closure1_slot0;
                    michal = 11;
                    michal = tangon[michal];
                    zuuluu = zuuluu.bind(entity)(michal);
                    michal = zuuluu.stopVibingWumpusMusic;
                    michal = michal.bind(zuuluu)();
                    return entity;
                };
                return entity;
            };
            entity = new Array(0);
            entity = zuuluu.bind(report)(michal, entity);
            zuuluu = _closure1_slot13;
            michal = _closure1_slot14;
            entity = {};
            golfie = _closure1_slot12;
            oscard = _closure1_slot5;
            report = {};
            offset = _closure1_slot1;
            option = 13;
            option = echoed[option];
            option = offset.bind(tangon)(option);
            report['source'] = option;
            option = foxtra.rings;
            report['style'] = option;
            oscard = golfie.bind(tangon)(oscard, report);
            report = new Array(2);
            report[0] = oscard;
            option = _closure1_slot13;
            golfie = _closure1_slot6;
            oscard = {};
            verify = foxtra.container;
            oscard['style'] = verify;
            yankee = _closure1_slot12;
            verify = 14;
            verify = echoed[verify];
            offset = offset.bind(tangon)(verify);
            verify = {};
            kiloes = 15;
            kiloes = echoed[kiloes];
            kiloes = sizing.bind(tangon)(kiloes);
            verify['source'] = kiloes;
            verify['ref'] = romeon;
            romeon = !backup;
            verify['autoPlay'] = romeon;
            romeon = true;
            verify['loop'] = romeon;
            romeon = foxtra.wumpus;
            verify['style'] = romeon;
            romeon = undefined;
            if(!backup) { _fun00002_ip = 326; continue _fun00001 }
 316:
            romeon = 0.8;
 326:
            verify['progress'] = romeon;
            offset = yankee.bind(tangon)(offset, verify);
            verify = new Array(3);
            verify[0] = offset;
            romeon = _closure1_slot13;
            yankee = _closure1_slot6;
            offset = {};
            backup = foxtra.warningText;
            offset['style'] = backup;
            ctrled = _closure1_slot12;
            kiloes = _closure1_slot0;
            echoed = _closure1_slot2;
            sizing = 16;
            backup = echoed[sizing];
            backup = kiloes.bind(tangon)(backup);
            source = backup.Text;
            backup = {'variant': 'heading-xl/semibold', 'style': null, 'accessibilityRole': 'header'};
            vacuum = foxtra.takeoverHeader;
            backup['style'] = vacuum;
            sequen = 17;
            vacuum = echoed[sequen];
            vacuum = kiloes.bind(tangon)(vacuum);
            record = vacuum.intl;
            config = record.string;
            vacuum = echoed[sequen];
            vacuum = kiloes.bind(tangon)(vacuum);
            vacuum = vacuum.t;
            vacuum = vacuum.L4ifkZ;
            vacuum = config.bind(record)(vacuum);
            backup['children'] = vacuum;
            source = ctrled.bind(tangon)(source, backup);
            backup = new Array(2);
            backup[0] = source;
            ctrled = _closure1_slot12;
            sizing = echoed[sizing];
            sizing = kiloes.bind(tangon)(sizing);
            source = sizing.Text;
            sizing = {};
            vacuum = 'text-md/medium';
            sizing['variant'] = vacuum;
            vacuum = foxtra.takeoverDescription;
            sizing['style'] = vacuum;
            vacuum = echoed[sequen];
            vacuum = kiloes.bind(tangon)(vacuum);
            record = vacuum.intl;
            config = record.string;
            vacuum = echoed[sequen];
            vacuum = kiloes.bind(tangon)(vacuum);
            vacuum = vacuum.t;
            vacuum = vacuum.R8LCMT;
            vacuum = config.bind(record)(vacuum);
            sizing['children'] = vacuum;
            sizing = ctrled.bind(tangon)(source, sizing);
            backup[1] = sizing;
            offset['children'] = backup;
            offset = romeon.bind(tangon)(yankee, offset);
            verify[1] = offset;
            romeon = _closure1_slot13;
            yankee = _closure1_slot6;
            offset = {};
            foxtra = foxtra.ctaContainer;
            offset['style'] = foxtra;
            source = _closure1_slot12;
            backup = 18;
            foxtra = echoed[backup];
            foxtra = kiloes.bind(tangon)(foxtra);
            sizing = foxtra.Button;
            foxtra = {'variant': 'primary', 'size': 'lg', 'text': null, 'grow': true};
            ctrled = echoed[sequen];
            ctrled = kiloes.bind(tangon)(ctrled);
            config = ctrled.intl;
            vacuum = config.string;
            ctrled = echoed[sequen];
            ctrled = kiloes.bind(tangon)(ctrled);
            ctrled = ctrled.t;
            ctrled = ctrled.8eKkaW;
            ctrled = vacuum.bind(config)(ctrled);
            foxtra['text'] = ctrled;
            ctrled = function() { // Original name: onPress
                tangon = _closure1_slot1;
                report = _closure1_slot2;
                entity = 12;
                zuuluu = report[entity];
                entity = undefined;
                option = tangon.bind(entity)(zuuluu);
                golfie = option.track;
                zuuluu = _closure1_slot11;
                oscard = zuuluu.VIBING_WUMPUS_ACTION;
                zuuluu = {};
                verify = _closure1_slot9;
                verify = verify.BACK_TO_CONVERSATION;
                zuuluu['action'] = verify;
                zuuluu = golfie.bind(option)(oscard, zuuluu);
                zuuluu = 19;
                zuuluu = report[zuuluu];
                tangon = tangon.bind(entity)(zuuluu);
                zuuluu = tangon.popWithKey;
                michal = _closure1_slot8;
                michal = zuuluu.bind(tangon)(michal);
                return entity;
            };
            foxtra['onPress'] = ctrled;
            sizing = source.bind(tangon)(sizing, foxtra);
            foxtra = new Array(2);
            foxtra[0] = sizing;
            sizing = _closure1_slot12;
            backup = echoed[backup];
            backup = kiloes.bind(tangon)(backup);
            kiloes = backup.Button;
            backup = {'variant': 'tertiary', 'size': 'lg', 'text': null, 'grow': true};
            source = _closure1_slot0;
            echoed = _closure1_slot2;
            ctrled = echoed[sequen];
            ctrled = source.bind(tangon)(ctrled);
            vacuum = ctrled.intl;
            ctrled = vacuum.string;
            echoed = echoed[sequen];
            echoed = source.bind(tangon)(echoed);
            source = echoed.t;
            if(output) { _fun00002_ip = 822; continue _fun00001 }
 809:
            echoed = source.ZcgDJS;
            echoed = ctrled.bind(vacuum)(echoed);
            _fun00002_ip = 833; continue _fun00001;
 822:
            source = source.RscU7O;
            echoed = ctrled.bind(vacuum)(source);
 833:
            backup['text'] = echoed;
            result = function() { // Original name: onPress
                _fun00003: for(var _fun00004_ip = 0; ; ) switch(_fun00004_ip) {
 0:
                    zuuluu = _closure2_slot0;
                    oscard = _closure1_slot0;
                    report = _closure1_slot2;
                    entity = 11;
                    tangon = report[entity];
                    entity = undefined;
                    tangon = oscard.bind(entity)(tangon);
                    if(zuuluu) { _fun00004_ip = 100; continue _fun00003 }
 35:
                    zuuluu = tangon.pauseVibingWumpusMusic;
                    zuuluu = zuuluu.bind(tangon)();
                    oscard = _closure1_slot1;
                    zuuluu = 12;
                    zuuluu = report[zuuluu];
                    verify = oscard.bind(entity)(zuuluu);
                    option = verify.track;
                    zuuluu = _closure1_slot11;
                    oscard = zuuluu.VIBING_WUMPUS_ACTION;
                    zuuluu = {};
                    offset = _closure1_slot9;
                    offset = offset.PAUSE;
                    zuuluu['action'] = offset;
                    zuuluu = option.bind(verify)(oscard, zuuluu);
                    _fun00004_ip = 163; continue _fun00003;
 100:
                    zuuluu = tangon.playVibingWumpusMusic;
                    zuuluu = zuuluu.bind(tangon)();
                    tangon = _closure1_slot1;
                    zuuluu = 12;
                    zuuluu = report[zuuluu];
                    oscard = tangon.bind(entity)(zuuluu);
                    report = oscard.track;
                    zuuluu = _closure1_slot11;
                    tangon = zuuluu.VIBING_WUMPUS_ACTION;
                    zuuluu = {};
                    golfie = _closure1_slot9;
                    golfie = golfie.PLAY;
                    zuuluu['action'] = golfie;
                    zuuluu = report.bind(oscard)(tangon, zuuluu);
 163:
                    zuuluu = _closure2_slot3;
                    if(zuuluu) { _fun00004_ip = 204; continue _fun00003 }
 170:
                    zuuluu = _closure2_slot0;
                    if(!zuuluu) { _fun00004_ip = 204; continue _fun00003 }
 177:
                    zuuluu = _closure2_slot2;
                    tangon = zuuluu.current;
                    zuuluu = null;
                    if(!(zuuluu != tangon)) { _fun00004_ip = 243; continue _fun00003 }
 192:
                    zuuluu = tangon.resume;
                    zuuluu = zuuluu.bind(tangon)();
                    _fun00004_ip = 243; continue _fun00003;
 204:
                    zuuluu = _closure2_slot3;
                    if(zuuluu) { _fun00004_ip = 243; continue _fun00003 }
 211:
                    zuuluu = _closure2_slot0;
                    if(zuuluu) { _fun00004_ip = 243; continue _fun00003 }
 218:
                    zuuluu = _closure2_slot2;
                    tangon = zuuluu.current;
                    zuuluu = null;
                    if(!(zuuluu != tangon)) { _fun00004_ip = 243; continue _fun00003 }
 233:
                    zuuluu = tangon.pause;
                    zuuluu = zuuluu.bind(tangon)();
 243:
                    zuuluu = _closure2_slot1;
                    michal = _closure2_slot0;
                    michal = !michal;
                    michal = zuuluu.bind(entity)(michal);
                    return entity;
                }
            };
            backup['onPress'] = result;
            echoed = _closure1_slot12;
            source = _closure1_slot0;
            ctrled = _closure1_slot2;
            if(output) { _fun00002_ip = 885; continue _fun00001 }
 865:
            output = 21;
            output = ctrled[output];
            output = source.bind(tangon)(output);
            result = output.PauseIcon;
            _fun00002_ip = 903; continue _fun00001;
 885:
            output = 20;
            output = ctrled[output];
            output = source.bind(tangon)(output);
            result = output.PlayIcon;
 903:
            output = {};
            source = 'md';
            output['size'] = source;
            source = _closure1_slot1;
            ctrled = _closure1_slot2;
            update = 9;
            update = ctrled[update];
            update = source.bind(tangon)(update);
            update = update.colors;
            update = update.REDESIGN_BUTTON_TERTIARY_TEXT;
            output['color'] = update;
            output = echoed.bind(tangon)(result, output);
            backup['icon'] = output;
            backup = sizing.bind(tangon)(kiloes, backup);
            foxtra[1] = backup;
            offset['children'] = foxtra;
            offset = romeon.bind(tangon)(yankee, offset);
            verify[2] = offset;
            oscard['children'] = verify;
            oscard = option.bind(tangon)(golfie, oscard);
            report[1] = oscard;
            entity['children'] = report;
            entity = zuuluu.bind(tangon)(michal, entity);
            return entity;
        }
    };
    var _closure1_slot16 = michal;
    entity = global;
    verify = entity.Object;
    option = verify.defineProperty;
    report = {};
    entity = true;
    report['value'] = entity;
    entity = '__esModule';
    entity = option.bind(verify)(zuuluu, entity, report);
    entity = 0;
    report = golfie[entity];
    entity = undefined;
    report = foxtra.bind(entity)(report);
    var _closure1_slot3 = report;
    report = 1;
    option = golfie[report];
    report = argCor;
    report = report.bind(entity)(option);
    var _closure1_slot4 = report;
    report = 2;
    report = golfie[report];
    report = oscard.bind(entity)(report);
    option = report.Image;
    var _closure1_slot5 = option;
    report = report.View;
    var _closure1_slot6 = report;
    report = 3;
    report = golfie[report];
    report = foxtra.bind(entity)(report);
    var _closure1_slot7 = report;
    report = 4;
    report = golfie[report];
    report = oscard.bind(entity)(report);
    report = report.VIBING_WUMPUS_MODAL_KEY;
    var _closure1_slot8 = report;
    report = 5;
    report = golfie[report];
    report = oscard.bind(entity)(report);
    option = report.VibingWumpusAction;
    var _closure1_slot9 = option;
    report = report.VibingWumpusSource;
    var _closure1_slot10 = report;
    report = 6;
    report = golfie[report];
    report = oscard.bind(entity)(report);
    report = report.AnalyticEvents;
    var _closure1_slot11 = report;
    report = 7;
    report = golfie[report];
    report = oscard.bind(entity)(report);
    option = report.jsx;
    var _closure1_slot12 = option;
    option = report.jsxs;
    var _closure1_slot13 = option;
    report = report.Fragment;
    var _closure1_slot14 = report;
    report = 8;
    report = golfie[report];
    verify = oscard.bind(entity)(report);
    option = verify.createStyles;
    report = {};
    offset = {'display': 'flex', 'alignItems': 'center', 'justifyContent': 'center', 'padding': null, 'gap': null, 'height': '100%'};
    yankee = 'center';
    romeon = 9;
    backup = golfie[romeon];
    backup = foxtra.bind(entity)(backup);
    backup = backup.spacing;
    backup = backup.PX_32;
    offset['padding'] = backup;
    backup = golfie[romeon];
    backup = foxtra.bind(entity)(backup);
    backup = backup.spacing;
    backup = backup.PX_16;
    offset['gap'] = backup;
    report['container'] = offset;
    offset = {};
    backup = golfie[romeon];
    backup = foxtra.bind(entity)(backup);
    backup = backup.spacing;
    backup = backup.PX_16;
    offset['marginBottom'] = backup;
    backup = golfie[romeon];
    backup = foxtra.bind(entity)(backup);
    backup = backup.spacing;
    backup = backup.PX_4;
    offset['gap'] = backup;
    report['warningText'] = offset;
    offset = {'display': 'flex', 'alignItems': 'center', 'alignSelf': 'stretch'};
    romeon = golfie[romeon];
    romeon = foxtra.bind(entity)(romeon);
    romeon = romeon.spacing;
    romeon = romeon.PX_16;
    offset['gap'] = romeon;
    report['ctaContainer'] = offset;
    offset = {};
    offset['textAlign'] = yankee;
    report['takeoverHeader'] = offset;
    offset = {};
    offset['textAlign'] = yankee;
    report['takeoverDescription'] = offset;
    offset = {};
    yankee = 187;
    offset['height'] = yankee;
    report['wumpus'] = offset;
    offset = {'position': 'absolute', 'width': '100%', 'height': 440, 'top': 120};
    report['rings'] = offset;
    report = option.bind(verify)(report);
    var _closure1_slot15 = report;
    report = 23;
    report = golfie[report];
    golfie = oscard.bind(entity)(report);
    oscard = golfie.fileFinishedImporting;
    report = 'modules/self_mod/inappropriate_conversation/native/VibingWumpusModal.tsx';
    report = oscard.bind(golfie)(report);
    tangon = function() { // Original name: VibingWumpusModal
        tangon = _closure1_slot12;
        michal = _closure1_slot0;
        zuuluu = _closure1_slot2;
        entity = 22;
        entity = zuuluu[entity];
        zuuluu = undefined;
        entity = michal.bind(zuuluu)(entity);
        michal = entity.Navigator;
        entity = {};
        report = {};
        oscard = {'title': '', 'fullscreen': true, 'headerShown': false};
        golfie = function() { // Original name: render
            tangon = _closure1_slot12;
            zuuluu = _closure1_slot16;
            michal = undefined;
            entity = {};
            entity = tangon.bind(michal)(zuuluu, entity);
            return entity;
        };
        oscard['render'] = golfie;
        report['VIBING_WUMPUS'] = oscard;
        entity['screens'] = report;
        report = 'VIBING_WUMPUS';
        entity['initialRouteName'] = report;
        entity = tangon.bind(zuuluu)(michal, entity);
        return entity;
    };
    zuuluu['default'] = tangon;
    zuuluu['VibingWumpusScreen'] = michal;
    return entity;
})();