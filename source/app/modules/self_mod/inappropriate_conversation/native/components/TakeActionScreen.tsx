// app/modules/self_mod/inappropriate_conversation/native/components/TakeActionScreen.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    report = argBar;
    romeon = argBaz;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    var _closure1_slot1 = romeon;
    var _closure1_slot2 = oscard;
    entity = global;
    option = entity.Object;
    golfie = option.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(option)(zuuluu, entity, tangon);
    entity = 0;
    tangon = oscard[entity];
    entity = undefined;
    tangon = romeon.bind(entity)(tangon);
    var _closure1_slot3 = tangon;
    tangon = 1;
    tangon = oscard[tangon];
    tangon = romeon.bind(entity)(tangon);
    var _closure1_slot4 = tangon;
    tangon = 2;
    option = oscard[tangon];
    golfie = argCor;
    golfie = golfie.bind(entity)(option);
    var _closure1_slot5 = golfie;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.useState;
    var _closure1_slot6 = tangon;
    tangon = 3;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.View;
    var _closure1_slot7 = tangon;
    tangon = 4;
    tangon = oscard[tangon];
    tangon = romeon.bind(entity)(tangon);
    var _closure1_slot8 = tangon;
    tangon = 5;
    tangon = oscard[tangon];
    tangon = romeon.bind(entity)(tangon);
    var _closure1_slot9 = tangon;
    tangon = 6;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    golfie = tangon.MODAL_LOCATION_CONTEXT_MOBILE;
    var _closure1_slot10 = golfie;
    golfie = tangon.NOFILTR_URL;
    var _closure1_slot11 = golfie;
    golfie = tangon.THROUGHLINE_URL;
    var _closure1_slot12 = golfie;
    golfie = tangon.REPORTED_USER_CONFIRMATION_TOAST_KEY;
    var _closure1_slot13 = golfie;
    tangon = tangon.TOAST_CHECKMARK_ICON_COLOR;
    var _closure1_slot14 = tangon;
    tangon = 7;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    golfie = tangon.jsx;
    var _closure1_slot15 = golfie;
    tangon = tangon.jsxs;
    var _closure1_slot16 = tangon;
    tangon = 8;
    tangon = oscard[tangon];
    option = report.bind(entity)(tangon);
    golfie = option.createStyles;
    tangon = {};
    verify = {'display': 'flex', 'alignItems': 'center', 'alignSelf': 'stretch'};
    offset = 'center';
    yankee = 9;
    foxtra = oscard[yankee];
    foxtra = romeon.bind(entity)(foxtra);
    foxtra = foxtra.spacing;
    foxtra = foxtra.PX_16;
    verify['gap'] = foxtra;
    tangon['container'] = verify;
    verify = {};
    foxtra = oscard[yankee];
    foxtra = romeon.bind(entity)(foxtra);
    foxtra = foxtra.spacing;
    foxtra = foxtra.PX_8;
    verify['paddingHorizontal'] = foxtra;
    foxtra = oscard[yankee];
    foxtra = romeon.bind(entity)(foxtra);
    foxtra = foxtra.spacing;
    foxtra = foxtra.PX_12;
    verify['paddingVertical'] = foxtra;
    tangon['toastContainer'] = verify;
    verify = {'display': 'flex', 'alignSelf': 'stretch'};
    yankee = oscard[yankee];
    yankee = romeon.bind(entity)(yankee);
    yankee = yankee.spacing;
    yankee = yankee.PX_4;
    verify['gap'] = yankee;
    tangon['helplineGroup'] = verify;
    verify = {};
    verify['textAlign'] = offset;
    tangon['textCenter'] = verify;
    tangon = golfie.bind(option)(tangon);
    var _closure1_slot17 = tangon;
    tangon = 30;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/self_mod/inappropriate_conversation/native/components/TakeActionScreen.tsx';
    tangon = report.bind(oscard)(tangon);
    michal = function(argFoo) { // Original name: TakeActionButtons
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            entity = argFoo;
            ctrled = entity.senderId;
            var _closure2_slot0 = ctrled;
            kiloes = entity.channelId;
            var _closure2_slot1 = kiloes;
            sizing = entity.isReported;
            backup = entity.setReported;
            var _closure2_slot2 = backup;
            golfie = entity.trackAnalyticsEvent;
            var _closure2_slot3 = golfie;
            entity = _closure1_slot17;
            tangon = undefined;
            echoed = entity.bind(tangon)();
            var _closure2_slot4 = echoed;
            verify = _closure1_slot0;
            source = _closure1_slot2;
            entity = 10;
            entity = source[entity];
            oscard = verify.bind(tangon)(entity);
            report = oscard.useStateFromStores;
            entity = _closure1_slot8;
            zuuluu = new Array(1);
            zuuluu[0] = entity;
            michal = new Array(1);
            michal[0] = ctrled;
            entity = function() {
                zuuluu = _closure1_slot8;
                michal = zuuluu.isBlocked;
                entity = _closure2_slot0;
                entity = michal.bind(zuuluu)(entity);
                return entity;
            };
            update = report.bind(oscard)(zuuluu, entity, michal);
            entity = 11;
            entity = source[entity];
            michal = verify.bind(tangon)(entity);
            entity = michal.useLastChannelMessage;
            yankee = entity.bind(michal)(kiloes);
            var _closure2_slot5 = yankee;
            entity = 12;
            michal = source[entity];
            zuuluu = verify.bind(tangon)(michal);
            michal = zuuluu.useShouldShowHelplineLink;
            option = michal.bind(zuuluu)();
            zuuluu = _closure1_slot6;
            michal = false;
            report = zuuluu.bind(tangon)(michal);
            zuuluu = _closure1_slot4;
            michal = 2;
            zuuluu = zuuluu.bind(tangon)(report, michal);
            michal = 0;
            output = zuuluu[michal];
            michal = 1;
            michal = zuuluu[michal];
            var _closure2_slot6 = michal;
            michal = 13;
            michal = source[michal];
            zuuluu = verify.bind(tangon)(michal);
            michal = zuuluu.useNavigation;
            michal = michal.bind(zuuluu)();
            var _closure2_slot7 = michal;
            entity = source[entity];
            michal = verify.bind(tangon)(entity);
            entity = michal.useShouldShowThroughlineLink;
            oscard = entity.bind(michal)();
            report = _closure1_slot5;
            zuuluu = report.useCallback;
            michal = new Array(3);
            michal[0] = ctrled;
            michal[1] = kiloes;
            michal[2] = golfie;
            entity = function() {
                tangon = _closure1_slot1;
                report = _closure1_slot2;
                entity = 14;
                zuuluu = report[entity];
                entity = undefined;
                option = tangon.bind(entity)(zuuluu);
                golfie = option.blockUser;
                oscard = _closure2_slot0;
                tangon = {};
                verify = _closure1_slot10;
                tangon['location'] = verify;
                golfie = golfie.bind(option)(oscard, tangon);
                oscard = golfie.then;
                tangon = function() {
                    zuuluu = _closure1_slot1;
                    michal = _closure1_slot2;
                    entity = 15;
                    michal = michal[entity];
                    entity = undefined;
                    report = zuuluu.bind(entity)(michal);
                    tangon = report.showBlockSuccessToast;
                    zuuluu = _closure2_slot0;
                    michal = _closure2_slot1;
                    michal = tangon.bind(report)(zuuluu, michal);
                    return entity;
                };
                tangon = oscard.bind(golfie)(tangon);
                zuuluu = _closure2_slot3;
                tangon = _closure1_slot0;
                michal = 16;
                michal = report[michal];
                michal = tangon.bind(entity)(michal);
                michal = michal.CtaEventTypes;
                michal = michal.USER_TAKEOVER_MODAL_BLOCK;
                michal = zuuluu.bind(entity)(michal);
                return entity;
            };
            foxtra = zuuluu.bind(report)(entity, michal);
            zuuluu = report.useCallback;
            michal = new Array(3);
            michal[0] = ctrled;
            michal[1] = kiloes;
            michal[2] = golfie;
            entity = function() {
                oscard = _closure1_slot1;
                report = _closure1_slot2;
                entity = 14;
                zuuluu = report[entity];
                entity = undefined;
                verify = oscard.bind(entity)(zuuluu);
                golfie = verify.unblockUser;
                option = _closure2_slot0;
                tangon = {};
                offset = _closure1_slot10;
                tangon['location'] = offset;
                tangon = golfie.bind(verify)(option, tangon);
                tangon = 15;
                tangon = report[tangon];
                golfie = oscard.bind(entity)(tangon);
                oscard = golfie.showUnblockSuccessToast;
                tangon = _closure2_slot1;
                tangon = oscard.bind(golfie)(option, tangon);
                zuuluu = _closure2_slot3;
                tangon = _closure1_slot0;
                michal = 16;
                michal = report[michal];
                michal = tangon.bind(entity)(michal);
                michal = michal.CtaEventTypes;
                michal = michal.USER_TAKEOVER_MODAL_UNBLOCK;
                michal = zuuluu.bind(entity)(michal);
                return entity;
            };
            result = zuuluu.bind(report)(entity, michal);
            zuuluu = report.useCallback;
            michal = _closure1_slot3;
            entity = function* () {
                entity = function* () { // Original name: ?anon_0_
                    _fun00003: for(var _fun00004_ip = 0; ; ) switch(_fun00004_ip) {
 0:
                        StartGenerator();
                        ResumeGenerator(result_out_reg=0, return_bool_out_reg=2);
                        if(zuuluu) { _fun00004_ip = 216; continue _fun00003 }
 12:
                        golfie = _closure1_slot9;
                        oscard = golfie.getUser;
                        report = _closure2_slot0;
                        oscard = oscard.bind(golfie)(report);
                        report = null;
                        if(!(report != oscard)) { _fun00004_ip = 208; continue _fun00003 }
 46:
                        golfie = _closure2_slot6;
                        report = undefined;
                        oscard = true;
                        oscard = golfie.bind(report)(oscard);
                        golfie = _closure1_slot0;
                        option = _closure1_slot2;
                        oscard = 17;
                        oscard = option[oscard];
                        verify = golfie.bind(report)(oscard);
                        option = verify.submitReportForInappropriateConversationSafetyAlert;
                        golfie = _closure2_slot5;
                        oscard = function() {
                            zuuluu = _closure2_slot2;
                            entity = undefined;
                            michal = true;
                            michal = zuuluu.bind(entity)(michal);
                            offset = _closure1_slot1;
                            verify = _closure1_slot2;
                            michal = 18;
                            michal = verify[michal];
                            tangon = offset.bind(entity)(michal);
                            zuuluu = tangon.open;
                            michal = {};
                            golfie = _closure1_slot13;
                            michal['key'] = golfie;
                            option = _closure1_slot0;
                            golfie = 19;
                            yankee = verify[golfie];
                            yankee = option.bind(entity)(yankee);
                            romeon = yankee.intl;
                            yankee = romeon.string;
                            golfie = verify[golfie];
                            golfie = option.bind(entity)(golfie);
                            golfie = golfie.t;
                            golfie = golfie.gn2c6e;
                            golfie = yankee.bind(romeon)(golfie);
                            michal['content'] = golfie;
                            golfie = 20;
                            golfie = verify[golfie];
                            golfie = offset.bind(entity)(golfie);
                            michal['icon'] = golfie;
                            golfie = 21;
                            golfie = verify[golfie];
                            golfie = option.bind(entity)(golfie);
                            golfie = golfie.CircleCheckIcon;
                            michal['IconComponent'] = golfie;
                            oscard = _closure1_slot14;
                            michal['iconColor'] = oscard;
                            report = _closure2_slot4;
                            report = report.toastContainer;
                            michal['containerStyle'] = report;
                            michal = zuuluu.bind(tangon)(michal);
                            return entity;
                        };
                        michal = function() {
                            golfie = _closure1_slot0;
                            option = _closure1_slot2;
                            entity = 22;
                            michal = option[entity];
                            entity = undefined;
                            tangon = golfie.bind(entity)(michal);
                            zuuluu = tangon.presentFailedToast;
                            michal = 19;
                            report = option[michal];
                            report = golfie.bind(entity)(report);
                            oscard = report.intl;
                            report = oscard.string;
                            michal = option[michal];
                            michal = golfie.bind(entity)(michal);
                            michal = michal.t;
                            michal = michal.0YV04+;
                            michal = report.bind(oscard)(michal);
                            michal = zuuluu.bind(tangon)(michal);
                            return entity;
                        };
                        michal = option.bind(verify)(golfie, oscard, michal);
                        SaveGenerator(address=114);
 112:
                        return michal;
 114:
                        ResumeGenerator(result_out_reg=1, return_bool_out_reg=5);
                        if(oscard) { _fun00004_ip = 213; continue _fun00003 }
 120:
                        golfie = _closure2_slot6;
                        oscard = false;
                        oscard = golfie.bind(report)(oscard);
                        option = _closure1_slot1;
                        golfie = _closure1_slot2;
                        oscard = 15;
                        oscard = golfie[oscard];
                        offset = option.bind(report)(oscard);
                        verify = offset.showReportSuccessToast;
                        option = _closure2_slot0;
                        oscard = _closure2_slot1;
                        oscard = verify.bind(offset)(option, oscard);
                        tangon = _closure2_slot3;
                        oscard = _closure1_slot0;
                        zuuluu = 16;
                        zuuluu = golfie[zuuluu];
                        zuuluu = oscard.bind(report)(zuuluu);
                        zuuluu = zuuluu.CtaEventTypes;
                        zuuluu = zuuluu.USER_TAKEOVER_MODAL_REPORT;
                        zuuluu = tangon.bind(report)(zuuluu);
 208:
                        zuuluu = undefined;
                        return zuuluu;
 213:
                        return michal;
 216:
                        return entity;
                    }
                };
                return entity;
            };
            michal = michal.bind(tangon)(entity);
            entity = new Array(6);
            entity[0] = ctrled;
            entity[1] = kiloes;
            kiloes = echoed.toastContainer;
            entity[2] = kiloes;
            entity[3] = backup;
            entity[4] = yankee;
            entity[5] = golfie;
            entity = zuuluu.bind(report)(michal, entity);
            var _closure2_slot8 = entity;
            zuuluu = _closure1_slot16;
            michal = _closure1_slot7;
            entity = {};
            report = echoed.container;
            entity['style'] = report;
            yankee = _closure1_slot15;
            golfie = 23;
            report = source[golfie];
            report = verify.bind(tangon)(report);
            verify = report.Button;
            report = {'variant': 'primary', 'size': 'lg', 'icon': null, 'text': null, 'grow': true};
            kiloes = _closure1_slot1;
            backup = 24;
            backup = source[backup];
            backup = kiloes.bind(tangon)(backup);
            report['icon'] = backup;
            source = _closure1_slot0;
            backup = _closure1_slot2;
            kiloes = 19;
            ctrled = backup[kiloes];
            ctrled = source.bind(tangon)(ctrled);
            vacuum = ctrled.intl;
            ctrled = vacuum.string;
            backup = backup[kiloes];
            backup = source.bind(tangon)(backup);
            source = backup.t;
            if(update) { _fun00002_ip = 537; continue _fun00001 }
 522:
            backup = source.VTIBaG;
            backup = ctrled.bind(vacuum)(backup);
            _fun00002_ip = 548; continue _fun00001;
 537:
            source = source.Hro409;
            backup = ctrled.bind(vacuum)(source);
 548:
            report['text'] = backup;
            backup = true;
            if(!update) { _fun00002_ip = 562; continue _fun00001 }
 559:
            foxtra = result;
 562:
            report['onPress'] = foxtra;
            verify = yankee.bind(tangon)(verify, report);
            report = new Array(3);
            report[0] = verify;
            foxtra = _closure1_slot15;
            yankee = _closure1_slot0;
            source = _closure1_slot2;
            verify = source[golfie];
            verify = yankee.bind(tangon)(verify);
            yankee = verify.Button;
            verify = {'variant': 'secondary', 'size': 'lg'};
            update = _closure1_slot1;
            result = 25;
            result = source[result];
            result = update.bind(tangon)(result);
            verify['icon'] = result;
            verify['loading'] = output;
            verify['disabled'] = sizing;
            source = _closure1_slot0;
            output = _closure1_slot2;
            result = output[kiloes];
            result = source.bind(tangon)(result);
            update = result.intl;
            result = update.string;
            output = output[kiloes];
            output = source.bind(tangon)(output);
            output = output.t;
            if(sizing) { _fun00002_ip = 709; continue _fun00001 }
 694:
            sizing = output.7fHyEx;
            sizing = result.bind(update)(sizing);
            _fun00002_ip = 722; continue _fun00001;
 709:
            output = output.QvwOJy;
            sizing = result.bind(update)(output);
 722:
            verify['text'] = sizing;
            verify['grow'] = backup;
            backup = function() { // Original name: onPress
                michal = _closure2_slot8;
                entity = undefined;
                michal = michal.bind(entity)();
                return entity;
            };
            verify['onPress'] = backup;
            verify = foxtra.bind(tangon)(yankee, verify);
            report[1] = verify;
            if(option) { _fun00002_ip = 1200; continue _fun00001 }
 758:
            verify = _closure1_slot16;
            option = _closure1_slot7;
            yankee = {};
            foxtra = echoed.helplineGroup;
            yankee['style'] = foxtra;
            output = _closure1_slot15;
            source = _closure1_slot0;
            result = _closure1_slot2;
            foxtra = result[golfie];
            foxtra = source.bind(tangon)(foxtra);
            backup = foxtra.Button;
            foxtra = {'variant': 'secondary', 'size': 'lg', 'icon': null, 'text': null, 'grow': true};
            update = _closure1_slot1;
            sizing = 27;
            sizing = result[sizing];
            sizing = update.bind(tangon)(sizing);
            foxtra['icon'] = sizing;
            sizing = result[kiloes];
            sizing = source.bind(tangon)(sizing);
            ctrled = sizing.intl;
            update = ctrled.string;
            sizing = result[kiloes];
            sizing = source.bind(tangon)(sizing);
            sizing = sizing.t;
            if(oscard) { _fun00002_ip = 1037; continue _fun00001 }
 880:
            oscard = sizing.65XQam;
            oscard = update.bind(ctrled)(oscard);
            foxtra['text'] = oscard;
            oscard = function() { // Original name: onPress
                tangon = _closure1_slot1;
                report = _closure1_slot2;
                entity = 28;
                zuuluu = report[entity];
                entity = undefined;
                oscard = tangon.bind(entity)(zuuluu);
                tangon = oscard.openURL;
                zuuluu = _closure1_slot11;
                zuuluu = tangon.bind(oscard)(zuuluu);
                zuuluu = _closure2_slot3;
                tangon = _closure1_slot0;
                michal = 16;
                michal = report[michal];
                michal = tangon.bind(entity)(michal);
                michal = michal.CtaEventTypes;
                michal = michal.USER_TAKEOVER_MODAL_NO_FILTR;
                michal = zuuluu.bind(entity)(michal);
                return entity;
            };
            foxtra['onPress'] = oscard;
            vacuum = output.bind(tangon)(backup, foxtra);
            oscard = new Array(2);
            oscard[0] = vacuum;
            vacuum = 29;
            vacuum = result[vacuum];
            vacuum = source.bind(tangon)(vacuum);
            sequen = vacuum.Text;
            vacuum = {'variant': 'text-xs/medium', 'color': 'header-secondary'};
            config = echoed.textCenter;
            vacuum['style'] = config;
            config = result[kiloes];
            config = source.bind(tangon)(config);
            cntext = config.intl;
            record = cntext.string;
            config = result[kiloes];
            config = source.bind(tangon)(config);
            config = config.t;
            config = config.XNwhxM;
            config = record.bind(cntext)(config);
            vacuum['children'] = config;
            vacuum = output.bind(tangon)(sequen, vacuum);
            oscard[1] = vacuum;
            yankee['children'] = oscard;
            oscard = yankee;
            _fun00002_ip = 1189; continue _fun00001;
 1037:
            sizing = sizing.HQ2nKi;
            sizing = update.bind(ctrled)(sizing);
            foxtra['text'] = sizing;
            sizing = function() { // Original name: onPress
                tangon = _closure1_slot1;
                report = _closure1_slot2;
                entity = 28;
                zuuluu = report[entity];
                entity = undefined;
                oscard = tangon.bind(entity)(zuuluu);
                tangon = oscard.openURL;
                zuuluu = _closure1_slot12;
                zuuluu = tangon.bind(oscard)(zuuluu);
                zuuluu = _closure2_slot3;
                tangon = _closure1_slot0;
                michal = 16;
                michal = report[michal];
                michal = tangon.bind(entity)(michal);
                michal = michal.CtaEventTypes;
                michal = michal.USER_TAKEOVER_MODAL_THROUGHLINE;
                michal = zuuluu.bind(entity)(michal);
                return entity;
            };
            foxtra['onPress'] = sizing;
            backup = output.bind(tangon)(backup, foxtra);
            foxtra = new Array(2);
            foxtra[0] = backup;
            backup = 29;
            backup = result[backup];
            backup = source.bind(tangon)(backup);
            sizing = backup.Text;
            backup = {'variant': 'text-xs/medium', 'color': 'header-secondary'};
            echoed = echoed.textCenter;
            backup['style'] = echoed;
            echoed = result[kiloes];
            echoed = source.bind(tangon)(echoed);
            update = echoed.intl;
            echoed = update.string;
            result = result[kiloes];
            result = source.bind(tangon)(result);
            result = result.t;
            result = result.PMeb/v;
            result = echoed.bind(update)(result);
            backup['children'] = result;
            backup = output.bind(tangon)(sizing, backup);
            foxtra[1] = backup;
            yankee['children'] = foxtra;
            oscard = yankee;
 1189:
            oscard = verify.bind(tangon)(option, oscard);
            _fun00002_ip = 1332; continue _fun00001;
 1200:
            verify = _closure1_slot15;
            backup = _closure1_slot0;
            yankee = _closure1_slot2;
            golfie = yankee[golfie];
            golfie = backup.bind(tangon)(golfie);
            option = golfie.Button;
            golfie = {'variant': 'secondary', 'size': 'lg', 'icon': null, 'text': null, 'grow': true};
            foxtra = _closure1_slot1;
            romeon = 26;
            romeon = yankee[romeon];
            romeon = foxtra.bind(tangon)(romeon);
            golfie['icon'] = romeon;
            romeon = yankee[kiloes];
            romeon = backup.bind(tangon)(romeon);
            foxtra = romeon.intl;
            romeon = foxtra.string;
            yankee = yankee[kiloes];
            yankee = backup.bind(tangon)(yankee);
            yankee = yankee.t;
            yankee = yankee.sZf6c3;
            yankee = romeon.bind(foxtra)(yankee);
            golfie['text'] = yankee;
            offset = function() { // Original name: onPress
                tangon = _closure2_slot7;
                zuuluu = tangon.push;
                michal = 'CRISIS_TEXT_LINE';
                michal = zuuluu.bind(tangon)(michal);
                zuuluu = _closure2_slot3;
                tangon = _closure1_slot0;
                michal = _closure1_slot2;
                entity = 16;
                michal = michal[entity];
                entity = undefined;
                michal = tangon.bind(entity)(michal);
                michal = michal.CtaEventTypes;
                michal = michal.USER_TAKEOVER_MODAL_CTL;
                michal = zuuluu.bind(entity)(michal);
                return entity;
            };
            golfie['onPress'] = offset;
            oscard = verify.bind(tangon)(option, golfie);
 1332:
            report[2] = oscard;
            entity['children'] = report;
            entity = zuuluu.bind(tangon)(michal, entity);
            return entity;
        }
    };
    zuuluu['default'] = michal;
    return entity;
})();