// app/modules/self_mod/inappropriate_conversation/native/components/TakeActionScreen.tsx
export default (function(argFoo, argBar, argBaz, argCorge, _, argFred, argPlugh) {
    report = argBar;
    romeo = argBaz;
    zulu = argFred;
    oscar = argPlugh;
    var _closure1_slot0 = report;
    var _closure1_slot1 = romeo;
    var _closure1_slot2 = oscar;
    entity = global;
    options = entity.Object;
    golf = options.defineProperty;
    tango = {};
    entity = true;
    tango['value'] = entity;
    entity = '__esModule';
    entity = golf.bind(options)(zulu, entity, tango);
    entity = 0;
    tango = oscar[entity];
    entity = undefined;
    tango = romeo.bind(entity)(tango);
    var _closure1_slot3 = tango;
    tango = 1;
    tango = oscar[tango];
    tango = romeo.bind(entity)(tango);
    var _closure1_slot4 = tango;
    tango = 2;
    options = oscar[tango];
    golf = argCorge;
    golf = golf.bind(entity)(options);
    var _closure1_slot5 = golf;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.useState;
    var _closure1_slot6 = tango;
    tango = 3;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    golf = tango.Linking;
    var _closure1_slot7 = golf;
    tango = tango.View;
    var _closure1_slot8 = tango;
    tango = 4;
    tango = oscar[tango];
    tango = romeo.bind(entity)(tango);
    var _closure1_slot9 = tango;
    tango = 5;
    tango = oscar[tango];
    tango = romeo.bind(entity)(tango);
    var _closure1_slot10 = tango;
    tango = 6;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    golf = tango.MODAL_LOCATION_CONTEXT_MOBILE;
    var _closure1_slot11 = golf;
    golf = tango.NOFILTR_URL;
    var _closure1_slot12 = golf;
    golf = tango.THROUGHLINE_URL;
    var _closure1_slot13 = golf;
    golf = tango.REPORTED_USER_CONFIRMATION_TOAST_KEY;
    var _closure1_slot14 = golf;
    tango = tango.TOAST_CHECKMARK_ICON_COLOR;
    var _closure1_slot15 = tango;
    tango = 7;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.RelationshipTypes;
    var _closure1_slot16 = tango;
    tango = 8;
    golf = oscar[tango];
    golf = report.bind(entity)(golf);
    golf = golf.jsx;
    var _closure1_slot17 = golf;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.jsxs;
    var _closure1_slot18 = tango;
    tango = 9;
    tango = oscar[tango];
    options = report.bind(entity)(tango);
    golf = options.createStyles;
    tango = {};
    verify = {'display': 'flex', 'alignItems': 'center', 'alignSelf': 'stretch'};
    offset = 'center';
    yankee = 10;
    foxtrot = oscar[yankee];
    foxtrot = romeo.bind(entity)(foxtrot);
    foxtrot = foxtrot.spacing;
    foxtrot = foxtrot.PX_16;
    verify['gap'] = foxtrot;
    tango['container'] = verify;
    verify = {};
    foxtrot = oscar[yankee];
    foxtrot = romeo.bind(entity)(foxtrot);
    foxtrot = foxtrot.spacing;
    foxtrot = foxtrot.PX_8;
    verify['paddingHorizontal'] = foxtrot;
    foxtrot = oscar[yankee];
    foxtrot = romeo.bind(entity)(foxtrot);
    foxtrot = foxtrot.spacing;
    foxtrot = foxtrot.PX_12;
    verify['paddingVertical'] = foxtrot;
    tango['toastContainer'] = verify;
    verify = {'display': 'flex', 'alignSelf': 'stretch'};
    yankee = oscar[yankee];
    yankee = romeo.bind(entity)(yankee);
    yankee = yankee.spacing;
    yankee = yankee.PX_4;
    verify['gap'] = yankee;
    tango['helplineGroup'] = verify;
    verify = {};
    verify['textAlign'] = offset;
    tango['textCenter'] = verify;
    tango = golf.bind(options)(tango);
    var _closure1_slot19 = tango;
    tango = 30;
    tango = oscar[tango];
    oscar = report.bind(entity)(tango);
    report = oscar.fileFinishedImporting;
    tango = 'modules/self_mod/inappropriate_conversation/native/components/TakeActionScreen.tsx';
    tango = report.bind(oscar)(tango);
    mike = function(argFoo) { // Original name: TakeActionButtons
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            entity = argFoo;
            control = entity.senderId;
            var _closure2_slot0 = control;
            kilo = entity.channelId;
            var _closure2_slot1 = kilo;
            sizing = entity.isReported;
            backup = entity.setReported;
            var _closure2_slot2 = backup;
            golf = entity.trackAnalyticsEvent;
            var _closure2_slot3 = golf;
            entity = _closure1_slot19;
            tango = undefined;
            echo = entity.bind(tango)();
            var _closure2_slot4 = echo;
            verify = _closure1_slot0;
            source = _closure1_slot2;
            entity = 11;
            entity = source[entity];
            oscar = verify.bind(tango)(entity);
            report = oscar.useStateFromStores;
            entity = _closure1_slot9;
            zulu = new Array(1);
            zulu[0] = entity;
            mike = new Array(1);
            mike[0] = control;
            entity = function() {
                zulu = _closure1_slot9;
                mike = zulu.isBlocked;
                entity = _closure2_slot0;
                entity = mike.bind(zulu)(entity);
                return entity;
            };
            update = report.bind(oscar)(zulu, entity, mike);
            entity = 12;
            entity = source[entity];
            mike = verify.bind(tango)(entity);
            entity = mike.useLastChannelMessage;
            yankee = entity.bind(mike)(kilo);
            var _closure2_slot5 = yankee;
            entity = 13;
            mike = source[entity];
            zulu = verify.bind(tango)(mike);
            mike = zulu.useShouldShowHelplineLink;
            options = mike.bind(zulu)();
            zulu = _closure1_slot6;
            mike = false;
            report = zulu.bind(tango)(mike);
            zulu = _closure1_slot4;
            mike = 2;
            zulu = zulu.bind(tango)(report, mike);
            mike = 0;
            output = zulu[mike];
            mike = 1;
            mike = zulu[mike];
            var _closure2_slot6 = mike;
            mike = 14;
            mike = source[mike];
            zulu = verify.bind(tango)(mike);
            mike = zulu.useNavigation;
            mike = mike.bind(zulu)();
            var _closure2_slot7 = mike;
            entity = source[entity];
            mike = verify.bind(tango)(entity);
            entity = mike.useShouldShowThroughlineLink;
            oscar = entity.bind(mike)();
            report = _closure1_slot5;
            zulu = report.useCallback;
            mike = new Array(3);
            mike[0] = control;
            mike[1] = kilo;
            mike[2] = golf;
            entity = function() {
                oscar = _closure1_slot1;
                report = _closure1_slot2;
                entity = 15;
                zulu = report[entity];
                entity = undefined;
                verify = oscar.bind(entity)(zulu);
                golf = verify.addRelationship;
                tango = {};
                options = _closure2_slot0;
                tango['userId'] = options;
                offset = {};
                yankee = _closure1_slot11;
                offset['location'] = yankee;
                tango['context'] = offset;
                offset = _closure1_slot16;
                offset = offset.BLOCKED;
                tango['type'] = offset;
                tango = golf.bind(verify)(tango);
                tango = 16;
                tango = report[tango];
                golf = oscar.bind(entity)(tango);
                oscar = golf.showBlockSuccessToast;
                tango = _closure2_slot1;
                tango = oscar.bind(golf)(options, tango);
                zulu = _closure2_slot3;
                tango = _closure1_slot0;
                mike = 17;
                mike = report[mike];
                mike = tango.bind(entity)(mike);
                mike = mike.CtaEventTypes;
                mike = mike.USER_TAKEOVER_MODAL_BLOCK;
                mike = zulu.bind(entity)(mike);
                return entity;
            };
            foxtrot = zulu.bind(report)(entity, mike);
            zulu = report.useCallback;
            mike = new Array(3);
            mike[0] = control;
            mike[1] = kilo;
            mike[2] = golf;
            entity = function() {
                oscar = _closure1_slot1;
                report = _closure1_slot2;
                entity = 15;
                zulu = report[entity];
                entity = undefined;
                verify = oscar.bind(entity)(zulu);
                golf = verify.unblockUser;
                options = _closure2_slot0;
                tango = {};
                offset = _closure1_slot11;
                tango['location'] = offset;
                tango = golf.bind(verify)(options, tango);
                tango = 16;
                tango = report[tango];
                golf = oscar.bind(entity)(tango);
                oscar = golf.showUnblockSuccessToast;
                tango = _closure2_slot1;
                tango = oscar.bind(golf)(options, tango);
                zulu = _closure2_slot3;
                tango = _closure1_slot0;
                mike = 17;
                mike = report[mike];
                mike = tango.bind(entity)(mike);
                mike = mike.CtaEventTypes;
                mike = mike.USER_TAKEOVER_MODAL_UNBLOCK;
                mike = zulu.bind(entity)(mike);
                return entity;
            };
            result = zulu.bind(report)(entity, mike);
            zulu = report.useCallback;
            mike = _closure1_slot3;
            entity = function* () {
                entity = function* () { // Original name: ?anon_0_
                    _fun00003: for(var _fun00004_ip = 0; ; ) switch(_fun00004_ip) {
 0:
                        StartGenerator();
                        ResumeGenerator(result_out_reg=0, return_bool_out_reg=2);
                        if(zulu) { _fun00004_ip = 216; continue _fun00003 }
 12:
                        golf = _closure1_slot10;
                        oscar = golf.getUser;
                        report = _closure2_slot0;
                        oscar = oscar.bind(golf)(report);
                        report = null;
                        if(!(report != oscar)) { _fun00004_ip = 208; continue _fun00003 }
 46:
                        golf = _closure2_slot6;
                        report = undefined;
                        oscar = true;
                        oscar = golf.bind(report)(oscar);
                        golf = _closure1_slot0;
                        options = _closure1_slot2;
                        oscar = 18;
                        oscar = options[oscar];
                        verify = golf.bind(report)(oscar);
                        options = verify.submitReportForInappropriateConversationSafetyAlert;
                        golf = _closure2_slot5;
                        oscar = function() {
                            zulu = _closure2_slot2;
                            entity = undefined;
                            mike = true;
                            mike = zulu.bind(entity)(mike);
                            offset = _closure1_slot1;
                            verify = _closure1_slot2;
                            mike = 19;
                            mike = verify[mike];
                            tango = offset.bind(entity)(mike);
                            zulu = tango.open;
                            mike = {};
                            golf = _closure1_slot14;
                            mike['key'] = golf;
                            options = _closure1_slot0;
                            golf = 20;
                            yankee = verify[golf];
                            yankee = options.bind(entity)(yankee);
                            romeo = yankee.intl;
                            yankee = romeo.string;
                            golf = verify[golf];
                            golf = options.bind(entity)(golf);
                            golf = golf.t;
                            golf = golf.gn2c6e;
                            golf = yankee.bind(romeo)(golf);
                            mike['content'] = golf;
                            golf = 21;
                            golf = verify[golf];
                            golf = offset.bind(entity)(golf);
                            mike['icon'] = golf;
                            golf = 22;
                            golf = verify[golf];
                            golf = options.bind(entity)(golf);
                            golf = golf.CircleCheckIcon;
                            mike['IconComponent'] = golf;
                            oscar = _closure1_slot15;
                            mike['iconColor'] = oscar;
                            report = _closure2_slot4;
                            report = report.toastContainer;
                            mike['containerStyle'] = report;
                            mike = zulu.bind(tango)(mike);
                            return entity;
                        };
                        mike = function() {
                            golf = _closure1_slot0;
                            options = _closure1_slot2;
                            entity = 23;
                            mike = options[entity];
                            entity = undefined;
                            tango = golf.bind(entity)(mike);
                            zulu = tango.presentFailedToast;
                            mike = 20;
                            report = options[mike];
                            report = golf.bind(entity)(report);
                            oscar = report.intl;
                            report = oscar.string;
                            mike = options[mike];
                            mike = golf.bind(entity)(mike);
                            mike = mike.t;
                            mike = mike.0YV04+;
                            mike = report.bind(oscar)(mike);
                            mike = zulu.bind(tango)(mike);
                            return entity;
                        };
                        mike = options.bind(verify)(golf, oscar, mike);
                        SaveGenerator(address=114);
 112:
                        return mike;
 114:
                        ResumeGenerator(result_out_reg=1, return_bool_out_reg=5);
                        if(oscar) { _fun00004_ip = 213; continue _fun00003 }
 120:
                        golf = _closure2_slot6;
                        oscar = false;
                        oscar = golf.bind(report)(oscar);
                        options = _closure1_slot1;
                        golf = _closure1_slot2;
                        oscar = 16;
                        oscar = golf[oscar];
                        offset = options.bind(report)(oscar);
                        verify = offset.showReportSuccessToast;
                        options = _closure2_slot0;
                        oscar = _closure2_slot1;
                        oscar = verify.bind(offset)(options, oscar);
                        tango = _closure2_slot3;
                        oscar = _closure1_slot0;
                        zulu = 17;
                        zulu = golf[zulu];
                        zulu = oscar.bind(report)(zulu);
                        zulu = zulu.CtaEventTypes;
                        zulu = zulu.USER_TAKEOVER_MODAL_REPORT;
                        zulu = tango.bind(report)(zulu);
 208:
                        zulu = undefined;
                        return zulu;
 213:
                        return mike;
 216:
                        return entity;
                    }
                };
                return entity;
            };
            mike = mike.bind(tango)(entity);
            entity = new Array(6);
            entity[0] = control;
            entity[1] = kilo;
            kilo = echo.toastContainer;
            entity[2] = kilo;
            entity[3] = backup;
            entity[4] = yankee;
            entity[5] = golf;
            entity = zulu.bind(report)(mike, entity);
            var _closure2_slot8 = entity;
            zulu = _closure1_slot18;
            mike = _closure1_slot8;
            entity = {};
            report = echo.container;
            entity['style'] = report;
            yankee = _closure1_slot17;
            golf = 24;
            report = source[golf];
            report = verify.bind(tango)(report);
            verify = report.Button;
            report = {'variant': 'primary', 'size': 'lg', 'icon': null, 'text': null, 'grow': true};
            kilo = _closure1_slot1;
            backup = 25;
            backup = source[backup];
            backup = kilo.bind(tango)(backup);
            report['icon'] = backup;
            source = _closure1_slot0;
            backup = _closure1_slot2;
            kilo = 20;
            control = backup[kilo];
            control = source.bind(tango)(control);
            vacuum = control.intl;
            control = vacuum.string;
            backup = backup[kilo];
            backup = source.bind(tango)(backup);
            source = backup.t;
            if(update) { _fun00002_ip = 535; continue _fun00001 }
 522:
            backup = source.VTIBaG;
            backup = control.bind(vacuum)(backup);
            _fun00002_ip = 546; continue _fun00001;
 535:
            source = source.Hro409;
            backup = control.bind(vacuum)(source);
 546:
            report['text'] = backup;
            backup = true;
            if(!update) { _fun00002_ip = 560; continue _fun00001 }
 557:
            foxtrot = result;
 560:
            report['onPress'] = foxtrot;
            verify = yankee.bind(tango)(verify, report);
            report = new Array(3);
            report[0] = verify;
            foxtrot = _closure1_slot17;
            yankee = _closure1_slot0;
            source = _closure1_slot2;
            verify = source[golf];
            verify = yankee.bind(tango)(verify);
            yankee = verify.Button;
            verify = {'variant': 'secondary', 'size': 'lg'};
            update = _closure1_slot1;
            result = 26;
            result = source[result];
            result = update.bind(tango)(result);
            verify['icon'] = result;
            verify['loading'] = output;
            verify['disabled'] = sizing;
            source = _closure1_slot0;
            output = _closure1_slot2;
            result = output[kilo];
            result = source.bind(tango)(result);
            update = result.intl;
            result = update.string;
            output = output[kilo];
            output = source.bind(tango)(output);
            output = output.t;
            if(sizing) { _fun00002_ip = 705; continue _fun00001 }
 692:
            sizing = output.7fHyEx;
            sizing = result.bind(update)(sizing);
            _fun00002_ip = 716; continue _fun00001;
 705:
            output = output.QvwOJy;
            sizing = result.bind(update)(output);
 716:
            verify['text'] = sizing;
            verify['grow'] = backup;
            backup = function() { // Original name: onPress
                mike = _closure2_slot8;
                entity = undefined;
                mike = mike.bind(entity)();
                return entity;
            };
            verify['onPress'] = backup;
            verify = foxtrot.bind(tango)(yankee, verify);
            report[1] = verify;
            if(options) { _fun00002_ip = 1186; continue _fun00001 }
 752:
            verify = _closure1_slot18;
            options = _closure1_slot8;
            yankee = {};
            foxtrot = echo.helplineGroup;
            yankee['style'] = foxtrot;
            output = _closure1_slot17;
            source = _closure1_slot0;
            result = _closure1_slot2;
            foxtrot = result[golf];
            foxtrot = source.bind(tango)(foxtrot);
            backup = foxtrot.Button;
            foxtrot = {'variant': 'secondary', 'size': 'lg', 'icon': null, 'text': null, 'grow': true};
            update = _closure1_slot1;
            sizing = 28;
            sizing = result[sizing];
            sizing = update.bind(tango)(sizing);
            foxtrot['icon'] = sizing;
            sizing = result[kilo];
            sizing = source.bind(tango)(sizing);
            control = sizing.intl;
            update = control.string;
            sizing = result[kilo];
            sizing = source.bind(tango)(sizing);
            sizing = sizing.t;
            if(oscar) { _fun00002_ip = 1027; continue _fun00001 }
 874:
            oscar = sizing.65XQam;
            oscar = update.bind(control)(oscar);
            foxtrot['text'] = oscar;
            oscar = function() { // Original name: onPress
                tango = _closure1_slot7;
                zulu = tango.openURL;
                mike = _closure1_slot12;
                mike = zulu.bind(tango)(mike);
                zulu = _closure2_slot3;
                tango = _closure1_slot0;
                mike = _closure1_slot2;
                entity = 17;
                mike = mike[entity];
                entity = undefined;
                mike = tango.bind(entity)(mike);
                mike = mike.CtaEventTypes;
                mike = mike.USER_TAKEOVER_MODAL_NO_FILTR;
                mike = zulu.bind(entity)(mike);
                return entity;
            };
            foxtrot['onPress'] = oscar;
            vacuum = output.bind(tango)(backup, foxtrot);
            oscar = new Array(2);
            oscar[0] = vacuum;
            vacuum = 29;
            vacuum = result[vacuum];
            vacuum = source.bind(tango)(vacuum);
            sequence = vacuum.Text;
            vacuum = {'variant': 'text-xs/medium', 'color': 'header-secondary'};
            config = echo.textCenter;
            vacuum['style'] = config;
            config = result[kilo];
            config = source.bind(tango)(config);
            context = config.intl;
            record = context.string;
            config = result[kilo];
            config = source.bind(tango)(config);
            config = config.t;
            config = config.XNwhxM;
            config = record.bind(context)(config);
            vacuum['children'] = config;
            vacuum = output.bind(tango)(sequence, vacuum);
            oscar[1] = vacuum;
            yankee['children'] = oscar;
            oscar = yankee;
            _fun00002_ip = 1175; continue _fun00001;
 1027:
            sizing = sizing.HQ2nKi;
            sizing = update.bind(control)(sizing);
            foxtrot['text'] = sizing;
            sizing = function() { // Original name: onPress
                tango = _closure1_slot7;
                zulu = tango.openURL;
                mike = _closure1_slot13;
                mike = zulu.bind(tango)(mike);
                zulu = _closure2_slot3;
                tango = _closure1_slot0;
                mike = _closure1_slot2;
                entity = 17;
                mike = mike[entity];
                entity = undefined;
                mike = tango.bind(entity)(mike);
                mike = mike.CtaEventTypes;
                mike = mike.USER_TAKEOVER_MODAL_THROUGHLINE;
                mike = zulu.bind(entity)(mike);
                return entity;
            };
            foxtrot['onPress'] = sizing;
            backup = output.bind(tango)(backup, foxtrot);
            foxtrot = new Array(2);
            foxtrot[0] = backup;
            backup = 29;
            backup = result[backup];
            backup = source.bind(tango)(backup);
            sizing = backup.Text;
            backup = {'variant': 'text-xs/medium', 'color': 'header-secondary'};
            echo = echo.textCenter;
            backup['style'] = echo;
            echo = result[kilo];
            echo = source.bind(tango)(echo);
            update = echo.intl;
            echo = update.string;
            result = result[kilo];
            result = source.bind(tango)(result);
            result = result.t;
            result = result.PMeb/v;
            result = echo.bind(update)(result);
            backup['children'] = result;
            backup = output.bind(tango)(sizing, backup);
            foxtrot[1] = backup;
            yankee['children'] = foxtrot;
            oscar = yankee;
 1175:
            oscar = verify.bind(tango)(options, oscar);
            _fun00002_ip = 1316; continue _fun00001;
 1186:
            verify = _closure1_slot17;
            backup = _closure1_slot0;
            yankee = _closure1_slot2;
            golf = yankee[golf];
            golf = backup.bind(tango)(golf);
            options = golf.Button;
            golf = {'variant': 'secondary', 'size': 'lg', 'icon': null, 'text': null, 'grow': true};
            foxtrot = _closure1_slot1;
            romeo = 27;
            romeo = yankee[romeo];
            romeo = foxtrot.bind(tango)(romeo);
            golf['icon'] = romeo;
            romeo = yankee[kilo];
            romeo = backup.bind(tango)(romeo);
            foxtrot = romeo.intl;
            romeo = foxtrot.string;
            yankee = yankee[kilo];
            yankee = backup.bind(tango)(yankee);
            yankee = yankee.t;
            yankee = yankee.sZf6c3;
            yankee = romeo.bind(foxtrot)(yankee);
            golf['text'] = yankee;
            offset = function() { // Original name: onPress
                tango = _closure2_slot7;
                zulu = tango.push;
                mike = 'CRISIS_TEXT_LINE';
                mike = zulu.bind(tango)(mike);
                zulu = _closure2_slot3;
                tango = _closure1_slot0;
                mike = _closure1_slot2;
                entity = 17;
                mike = mike[entity];
                entity = undefined;
                mike = tango.bind(entity)(mike);
                mike = mike.CtaEventTypes;
                mike = mike.USER_TAKEOVER_MODAL_CTL;
                mike = zulu.bind(entity)(mike);
                return entity;
            };
            golf['onPress'] = offset;
            oscar = verify.bind(tango)(options, golf);
 1316:
            report[2] = oscar;
            entity['children'] = report;
            entity = zulu.bind(tango)(mike, entity);
            return entity;
        }
    };
    zulu['default'] = mike;
    return entity;
})();