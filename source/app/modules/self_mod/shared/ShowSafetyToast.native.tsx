// app/modules/self_mod/shared/ShowSafetyToast.native.tsx
export default (function(argFoo, argBar, argBaz, _, __, argFred, argPlugh) {
    report = argBar;
    zulu = argFred;
    tango = argPlugh;
    var _closure1_slot0 = report;
    entity = argBaz;
    var _closure1_slot1 = entity;
    var _closure1_slot2 = tango;
    entity = global;
    options = entity.Object;
    golf = options.defineProperty;
    oscar = {};
    entity = true;
    oscar['value'] = entity;
    entity = '__esModule';
    entity = golf.bind(options)(zulu, entity, oscar);
    entity = 3;
    tango = tango[entity];
    entity = undefined;
    oscar = report.bind(entity)(tango);
    report = oscar.fileFinishedImporting;
    tango = 'modules/self_mod/shared/ShowSafetyToast.native.tsx';
    tango = report.bind(oscar)(tango);
    mike = function(argFoo) { // Original name: showSafetyToast
        entity = argFoo;
        golf = entity.id;
        report = entity.text;
        verify = _closure1_slot1;
        options = _closure1_slot2;
        entity = 0;
        mike = options[entity];
        entity = undefined;
        tango = verify.bind(entity)(mike);
        zulu = tango.open;
        mike = {};
        mike['key'] = golf;
        golf = 1;
        golf = options[golf];
        golf = verify.bind(entity)(golf);
        mike['icon'] = golf;
        golf = _closure1_slot0;
        oscar = 2;
        oscar = options[oscar];
        oscar = golf.bind(entity)(oscar);
        oscar = oscar.ShieldIcon;
        mike['IconComponent'] = oscar;
        oscar = 'text-brand';
        mike['iconColor'] = oscar;
        mike['content'] = report;
        mike = zulu.bind(tango)(mike);
        return entity;
    };
    zulu['showSafetyToast'] = mike;
    return entity;
})();