// app/modules/self_mod/shared/native/SafetyTipsSection.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    report = argBar;
    yankee = argBaz;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    var _closure1_slot1 = yankee;
    var _closure1_slot2 = oscard;
    entity = global;
    option = entity.Object;
    golfie = option.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(option)(zuuluu, entity, tangon);
    entity = 0;
    golfie = oscard[entity];
    tangon = argCor;
    entity = undefined;
    tangon = tangon.bind(entity)(golfie);
    tangon = 1;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    golfie = tangon.Image;
    var _closure1_slot3 = golfie;
    tangon = tangon.View;
    var _closure1_slot4 = tangon;
    tangon = 2;
    golfie = oscard[tangon];
    golfie = report.bind(entity)(golfie);
    golfie = golfie.jsx;
    var _closure1_slot5 = golfie;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.jsxs;
    var _closure1_slot6 = tangon;
    tangon = 3;
    tangon = oscard[tangon];
    option = report.bind(entity)(tangon);
    golfie = option.createStyles;
    tangon = {};
    verify = {};
    offset = 4;
    romeon = oscard[offset];
    romeon = yankee.bind(entity)(romeon);
    romeon = romeon.radii;
    romeon = romeon.sm;
    verify['borderRadius'] = romeon;
    romeon = 'hidden';
    verify['overflow'] = romeon;
    tangon['container'] = verify;
    verify = {'width': '100%', 'minHeight': 80};
    tangon['banner'] = verify;
    verify = {'width': '100%', 'minHeight': 80, 'zIndex': 1};
    tangon['bannerGradient'] = verify;
    verify = {'position': 'absolute', 'height': '100%', 'width': '100%'};
    tangon['bannerImg'] = verify;
    verify = {'flex': 1, 'margin': null, 'justifyContent': 'center', 'maxWidth': 235};
    romeon = oscard[offset];
    romeon = yankee.bind(entity)(romeon);
    romeon = romeon.spacing;
    romeon = romeon.PX_16;
    verify['margin'] = romeon;
    tangon['bannerTextContainer'] = verify;
    verify = {};
    romeon = oscard[offset];
    romeon = yankee.bind(entity)(romeon);
    romeon = romeon.spacing;
    romeon = romeon.PX_8;
    verify['marginBottom'] = romeon;
    tangon['bannerTextHeader'] = verify;
    verify = {};
    romeon = oscard[offset];
    romeon = yankee.bind(entity)(romeon);
    romeon = romeon.spacing;
    romeon = romeon.PX_16;
    verify['padding'] = romeon;
    romeon = oscard[offset];
    romeon = yankee.bind(entity)(romeon);
    romeon = romeon.colors;
    romeon = romeon.BG_SURFACE_RAISED;
    verify['backgroundColor'] = romeon;
    tangon['tips'] = verify;
    verify = {};
    offset = oscard[offset];
    offset = yankee.bind(entity)(offset);
    offset = offset.spacing;
    offset = offset.PX_16;
    verify['marginBottom'] = offset;
    tangon['tipRow'] = verify;
    tangon = golfie.bind(option)(tangon);
    var _closure1_slot7 = tangon;
    tangon = 11;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/self_mod/shared/native/SafetyTipsSection.tsx';
    tangon = report.bind(oscard)(tangon);
    michal = function(argFoo) { // Original name: SafetyTipsContainer
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            entity = argFoo;
            echoed = entity.description;
            yankee = entity.safetyTips;
            var _closure2_slot0 = yankee;
            option = entity.showHeader;
            entity = _closure1_slot7;
            tangon = undefined;
            offset = entity.bind(tangon)();
            var _closure2_slot1 = offset;
            zuuluu = _closure1_slot6;
            michal = _closure1_slot4;
            entity = {};
            report = offset.container;
            entity['style'] = report;
            report = {};
            golfie = offset.banner;
            report['style'] = golfie;
            foxtra = _closure1_slot5;
            romeon = _closure1_slot1;
            sizing = _closure1_slot2;
            golfie = 5;
            golfie = sizing[golfie];
            romeon = romeon.bind(tangon)(golfie);
            golfie = {};
            backup = offset.bannerGradient;
            golfie['style'] = backup;
            kiloes = _closure1_slot0;
            backup = 6;
            output = sizing[backup];
            output = kiloes.bind(tangon)(output);
            output = output.HorizontalGradient;
            output = output.START;
            golfie['start'] = output;
            backup = sizing[backup];
            backup = kiloes.bind(tangon)(backup);
            backup = backup.HorizontalGradient;
            backup = backup.END;
            golfie['end'] = backup;
            backup = [0, 0.68];
            golfie['locations'] = backup;
            backup = ['#5865f200', '#5865F2'];
            golfie['colors'] = backup;
            backup = true;
            golfie['useAngle'] = backup;
            backup = 270;
            golfie['angle'] = backup;
            backup = {};
            kiloes = offset.bannerTextContainer;
            backup['style'] = kiloes;
            if(!option) { _fun00002_ip = 341; continue _fun00001 }
 229:
            output = _closure1_slot5;
            ctrled = _closure1_slot0;
            vacuum = _closure1_slot2;
            kiloes = 7;
            kiloes = vacuum[kiloes];
            kiloes = ctrled.bind(tangon)(kiloes);
            sizing = kiloes.Text;
            kiloes = {'variant': 'eyebrow', 'color': 'status-positive-text'};
            result = offset.bannerTextHeader;
            kiloes['style'] = result;
            result = 8;
            update = vacuum[result];
            update = ctrled.bind(tangon)(update);
            source = update.intl;
            update = source.string;
            result = vacuum[result];
            result = ctrled.bind(tangon)(result);
            result = result.t;
            result = result.lyt43N;
            result = update.bind(source)(result);
            kiloes['children'] = result;
            option = output.bind(tangon)(sizing, kiloes);
 341:
            kiloes = new Array(2);
            kiloes[0] = option;
            option = _closure1_slot5;
            result = _closure1_slot0;
            sizing = _closure1_slot2;
            output = 7;
            output = sizing[output];
            output = result.bind(tangon)(output);
            result = output.Text;
            output = {'accessibilityRole': 'header', 'variant': 'heading-lg/bold', 'color': 'status-positive-text'};
            output['children'] = echoed;
            output = option.bind(tangon)(result, output);
            kiloes[1] = output;
            backup['children'] = kiloes;
            backup = zuuluu.bind(tangon)(michal, backup);
            golfie['children'] = backup;
            romeon = foxtra.bind(tangon)(romeon, golfie);
            golfie = new Array(2);
            golfie[0] = romeon;
            foxtra = _closure1_slot3;
            romeon = {};
            backup = offset.bannerImg;
            romeon['style'] = backup;
            kiloes = _closure1_slot1;
            backup = 9;
            backup = sizing[backup];
            backup = kiloes.bind(tangon)(backup);
            romeon['source'] = backup;
            backup = 'cover';
            romeon['resizeMode'] = backup;
            romeon = option.bind(tangon)(foxtra, romeon);
            golfie[1] = romeon;
            report['children'] = golfie;
            golfie = zuuluu.bind(tangon)(michal, report);
            report = new Array(2);
            report[0] = golfie;
            golfie = _closure1_slot4;
            oscard = {};
            offset = offset.tips;
            oscard['style'] = offset;
            offset = yankee.map;
            verify = function(argFoo, argBar) {
                _fun00003: for(var _fun00004_ip = 0; ; ) switch(_fun00004_ip) {
 0:
                    report = argBar;
                    tangon = _closure1_slot5;
                    zuuluu = _closure1_slot4;
                    michal = {};
                    entity = _closure2_slot0;
                    entity = entity.length;
                    verify = 1;
                    offset = entity - verify;
                    entity = undefined;
                    golfie = undefined;
                    if(!(report !== offset)) { _fun00004_ip = 53; continue _fun00003 }
 43:
                    option = _closure2_slot1;
                    golfie = option.tipRow;
 53:
                    michal['style'] = golfie;
                    option = _closure1_slot5;
                    golfie = _closure1_slot1;
                    offset = _closure1_slot2;
                    oscard = 10;
                    oscard = offset[oscard];
                    golfie = golfie.bind(entity)(oscard);
                    oscard = {};
                    verify = report + verify;
                    oscard['index'] = verify;
                    verify = argFoo;
                    oscard['tip'] = verify;
                    oscard = option.bind(entity)(golfie, oscard);
                    michal['children'] = oscard;
                    entity = tangon.bind(entity)(zuuluu, michal, report);
                    return entity;
                }
            };
            verify = offset.bind(yankee)(verify);
            oscard['children'] = verify;
            oscard = option.bind(tangon)(golfie, oscard);
            report[1] = oscard;
            entity['children'] = report;
            entity = zuuluu.bind(tangon)(michal, entity);
            return entity;
        }
    };
    zuuluu['default'] = michal;
    return entity;
})();