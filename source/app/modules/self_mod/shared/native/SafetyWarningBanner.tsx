// app/modules/self_mod/shared/native/SafetyWarningBanner.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    report = argBar;
    romeon = argBaz;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    var _closure1_slot1 = romeon;
    var _closure1_slot2 = oscard;
    michal = function(argFoo) { // Original name: SafetyWarningBanner
        michal = argFoo;
        romeon = michal.channelId;
        var _closure2_slot0 = romeon;
        option = michal.warningId;
        var _closure2_slot1 = option;
        golfie = michal.senderId;
        var _closure2_slot2 = golfie;
        entity = michal.warningType;
        var _closure2_slot3 = entity;
        sequen = michal.header;
        source = michal.description;
        foxtra = michal.onDismiss;
        var _closure2_slot4 = foxtra;
        yankee = michal.buttons;
        michal = _closure1_slot9;
        tangon = undefined;
        offset = michal.bind(tangon)();
        backup = _closure1_slot3;
        report = backup.useEffect;
        zuuluu = function() {
            zuuluu = _closure1_slot1;
            golfie = _closure1_slot2;
            entity = 5;
            michal = golfie[entity];
            entity = undefined;
            tangon = zuuluu.bind(entity)(michal);
            zuuluu = tangon.increment;
            michal = {};
            oscard = _closure1_slot0;
            report = 6;
            report = golfie[report];
            report = oscard.bind(entity)(report);
            report = report.MetricEvents;
            report = report.SAFETY_WARNING_VIEW;
            michal['name'] = report;
            michal = zuuluu.bind(tangon)(michal);
            return entity;
        };
        michal = new Array(0);
        michal = report.bind(backup)(zuuluu, michal);
        report = _closure1_slot3;
        zuuluu = report.useCallback;
        michal = new Array(5);
        michal[0] = foxtra;
        michal[1] = romeon;
        michal[2] = option;
        michal[3] = golfie;
        michal[4] = entity;
        entity = function() {
            _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
                michal = _closure2_slot4;
                entity = null;
                if(!(entity != michal)) { _fun00002_ip = 23; continue _fun00001 }
 13:
                michal = _closure2_slot4;
                entity = undefined;
                entity = michal.bind(entity)();
 23:
                oscard = _closure1_slot0;
                golfie = _closure1_slot2;
                report = 7;
                michal = golfie[report];
                entity = undefined;
                tangon = oscard.bind(entity)(michal);
                zuuluu = tangon.trackCtaEvent;
                michal = {};
                verify = _closure2_slot0;
                michal['channelId'] = verify;
                verify = _closure2_slot1;
                michal['warningId'] = verify;
                verify = _closure2_slot2;
                michal['senderId'] = verify;
                option = _closure2_slot3;
                michal['warningType'] = option;
                report = golfie[report];
                report = oscard.bind(entity)(report);
                report = report.CtaEventTypes;
                report = report.USER_BANNER_DISMISS;
                michal['cta'] = report;
                michal = zuuluu.bind(tangon)(michal);
                return entity;
            }
        };
        romeon = zuuluu.bind(report)(entity, michal);
        zuuluu = _closure1_slot8;
        michal = _closure1_slot6;
        entity = {};
        report = offset.container;
        entity['style'] = report;
        option = _closure1_slot7;
        golfie = _closure1_slot5;
        report = {};
        foxtra = offset.closeButton;
        report['style'] = foxtra;
        report['onPress'] = romeon;
        echoed = _closure1_slot0;
        ctrled = _closure1_slot2;
        romeon = 8;
        foxtra = ctrled[romeon];
        foxtra = echoed.bind(tangon)(foxtra);
        backup = foxtra.intl;
        foxtra = backup.string;
        romeon = ctrled[romeon];
        romeon = echoed.bind(tangon)(romeon);
        romeon = romeon.t;
        romeon = romeon.1UatJy;
        romeon = foxtra.bind(backup)(romeon);
        report['accessibilityLabel'] = romeon;
        backup = _closure1_slot7;
        vacuum = _closure1_slot1;
        kiloes = 9;
        romeon = ctrled[kiloes];
        foxtra = vacuum.bind(tangon)(romeon);
        romeon = {};
        sizing = offset.closeButtonIcon;
        romeon['style'] = sizing;
        sizing = 10;
        sizing = ctrled[sizing];
        sizing = vacuum.bind(tangon)(sizing);
        romeon['source'] = sizing;
        kiloes = ctrled[kiloes];
        kiloes = echoed.bind(tangon)(kiloes);
        kiloes = kiloes.IconSizes;
        kiloes = kiloes.MEDIUM;
        romeon['size'] = kiloes;
        romeon = backup.bind(tangon)(foxtra, romeon);
        report['children'] = romeon;
        golfie = option.bind(tangon)(golfie, report);
        report = new Array(3);
        report[0] = golfie;
        romeon = _closure1_slot8;
        option = _closure1_slot6;
        golfie = {};
        foxtra = offset.contentContainer;
        golfie['style'] = foxtra;
        kiloes = _closure1_slot7;
        backup = _closure1_slot6;
        foxtra = {};
        sizing = offset.safetyShieldIconContainer;
        foxtra['style'] = sizing;
        result = _closure1_slot7;
        output = _closure1_slot4;
        sizing = {};
        update = offset.safetyShieldIcon;
        sizing['style'] = update;
        update = 11;
        update = ctrled[update];
        update = vacuum.bind(tangon)(update);
        sizing['source'] = update;
        update = 'contain';
        sizing['resizeMode'] = update;
        sizing = result.bind(tangon)(output, sizing);
        foxtra['children'] = sizing;
        backup = kiloes.bind(tangon)(backup, foxtra);
        foxtra = new Array(2);
        foxtra[0] = backup;
        sizing = _closure1_slot8;
        kiloes = _closure1_slot6;
        backup = {};
        output = offset.textContainer;
        backup['style'] = output;
        vacuum = _closure1_slot7;
        result = 12;
        output = ctrled[result];
        output = echoed.bind(tangon)(output);
        update = output.Text;
        output = {};
        config = offset.text;
        output['style'] = config;
        config = 'heading-md/semibold';
        output['variant'] = config;
        output['children'] = sequen;
        update = vacuum.bind(tangon)(update, output);
        output = new Array(2);
        output[0] = update;
        update = _closure1_slot7;
        result = ctrled[result];
        result = echoed.bind(tangon)(result);
        echoed = result.Text;
        result = {};
        ctrled = offset.text;
        result['style'] = ctrled;
        ctrled = 'heading-sm/normal';
        result['variant'] = ctrled;
        result['children'] = source;
        result = update.bind(tangon)(echoed, result);
        output[1] = result;
        backup['children'] = output;
        backup = sizing.bind(tangon)(kiloes, backup);
        foxtra[1] = backup;
        golfie['children'] = foxtra;
        golfie = romeon.bind(tangon)(option, golfie);
        report[1] = golfie;
        option = _closure1_slot7;
        golfie = _closure1_slot6;
        oscard = {};
        offset = offset.buttonsContainer;
        oscard['style'] = offset;
        offset = yankee.map;
        verify = function(argFoo, argBar) {
            _fun00003: for(var _fun00004_ip = 0; ; ) switch(_fun00004_ip) {
 0:
                entity = argFoo;
                report = _closure1_slot7;
                zuuluu = _closure1_slot0;
                tangon = _closure1_slot2;
                michal = 13;
                michal = tangon[michal];
                tangon = undefined;
                michal = zuuluu.bind(tangon)(michal);
                zuuluu = michal.Button;
                michal = {};
                oscard = 'md';
                michal['size'] = oscard;
                golfie = entity.variant;
                oscard = null;
                option = oscard != golfie;
                oscard = 'primary';
                if(!option) { _fun00004_ip = 69; continue _fun00003 }
 66:
                oscard = golfie;
 69:
                michal['variant'] = oscard;
                oscard = entity.text;
                michal['text'] = oscard;
                oscard = entity.text;
                michal['accessibilityLabel'] = oscard;
                entity = entity.onpress;
                michal['onPress'] = entity;
                entity = true;
                michal['grow'] = entity;
                entity = argBar;
                entity = report.bind(tangon)(zuuluu, michal, entity);
                return entity;
            }
        };
        verify = offset.bind(yankee)(verify);
        oscard['children'] = verify;
        oscard = option.bind(tangon)(golfie, oscard);
        report[2] = oscard;
        entity['children'] = report;
        entity = zuuluu.bind(tangon)(michal, entity);
        return entity;
    };
    entity = global;
    verify = entity.Object;
    option = verify.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = option.bind(verify)(zuuluu, entity, tangon);
    entity = 0;
    option = oscard[entity];
    tangon = argCor;
    entity = undefined;
    tangon = tangon.bind(entity)(option);
    var _closure1_slot3 = tangon;
    backup = 1;
    tangon = oscard[backup];
    tangon = report.bind(entity)(tangon);
    option = tangon.Image;
    var _closure1_slot4 = option;
    option = tangon.Pressable;
    var _closure1_slot5 = option;
    tangon = tangon.View;
    var _closure1_slot6 = tangon;
    tangon = 2;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    option = tangon.jsx;
    var _closure1_slot7 = option;
    tangon = tangon.jsxs;
    var _closure1_slot8 = tangon;
    tangon = 3;
    tangon = oscard[tangon];
    verify = report.bind(entity)(tangon);
    option = verify.createStyles;
    tangon = {};
    offset = {};
    yankee = 4;
    foxtra = oscard[yankee];
    foxtra = romeon.bind(entity)(foxtra);
    foxtra = foxtra.colors;
    foxtra = foxtra.BG_SURFACE_OVERLAY;
    offset['backgroundColor'] = foxtra;
    foxtra = oscard[yankee];
    foxtra = romeon.bind(entity)(foxtra);
    foxtra = foxtra.spacing;
    foxtra = foxtra.PX_16;
    offset['paddingHorizontal'] = foxtra;
    foxtra = oscard[yankee];
    foxtra = romeon.bind(entity)(foxtra);
    foxtra = foxtra.spacing;
    foxtra = foxtra.PX_12;
    offset['paddingVertical'] = foxtra;
    foxtra = oscard[yankee];
    foxtra = romeon.bind(entity)(foxtra);
    foxtra = foxtra.shadows;
    output = foxtra.SHADOW_LOW;
    result = offset;
    foxtra = copyDataProperties(result, output);
    tangon['container'] = offset;
    foxtra = 'row';
    offset = {'flexDirection': 'row', 'alignItems': 'center'};
    tangon['contentContainer'] = offset;
    offset = {'width': 42, 'height': 50};
    tangon['safetyShieldIconContainer'] = offset;
    offset = {'flex': 1, 'width': 'auto', 'height': 'auto'};
    tangon['safetyShieldIcon'] = offset;
    offset = {};
    offset['flex'] = backup;
    kiloes = oscard[yankee];
    kiloes = romeon.bind(entity)(kiloes);
    kiloes = kiloes.spacing;
    kiloes = kiloes.PX_16;
    offset['marginLeft'] = kiloes;
    kiloes = oscard[yankee];
    kiloes = romeon.bind(entity)(kiloes);
    kiloes = kiloes.spacing;
    kiloes = kiloes.PX_40;
    offset['marginRight'] = kiloes;
    tangon['textContainer'] = offset;
    offset = {};
    kiloes = oscard[yankee];
    kiloes = romeon.bind(entity)(kiloes);
    kiloes = kiloes.colors;
    kiloes = kiloes.HEADER_PRIMARY;
    offset['color'] = kiloes;
    tangon['text'] = offset;
    offset = {};
    kiloes = 'absolute';
    offset['position'] = kiloes;
    kiloes = oscard[yankee];
    kiloes = romeon.bind(entity)(kiloes);
    kiloes = kiloes.spacing;
    kiloes = kiloes.PX_8;
    offset['top'] = kiloes;
    kiloes = oscard[yankee];
    kiloes = romeon.bind(entity)(kiloes);
    kiloes = kiloes.spacing;
    kiloes = kiloes.PX_16;
    offset['right'] = kiloes;
    offset['zIndex'] = backup;
    tangon['closeButton'] = offset;
    offset = {};
    backup = oscard[yankee];
    backup = romeon.bind(entity)(backup);
    backup = backup.colors;
    backup = backup.INTERACTIVE_NORMAL;
    offset['tintColor'] = backup;
    tangon['closeButtonIcon'] = offset;
    offset = {};
    offset['flexDirection'] = foxtra;
    foxtra = oscard[yankee];
    foxtra = romeon.bind(entity)(foxtra);
    foxtra = foxtra.spacing;
    foxtra = foxtra.PX_16;
    offset['marginTop'] = foxtra;
    yankee = oscard[yankee];
    yankee = romeon.bind(entity)(yankee);
    yankee = yankee.spacing;
    yankee = yankee.PX_8;
    offset['gap'] = yankee;
    tangon['buttonsContainer'] = offset;
    tangon = option.bind(verify)(tangon);
    var _closure1_slot9 = tangon;
    tangon = 14;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/self_mod/shared/native/SafetyWarningBanner.tsx';
    tangon = report.bind(oscard)(tangon);
    zuuluu['default'] = michal;
    zuuluu['SafetyWarningBanner'] = michal;
    return entity;
})();