// app/modules/self_mod/shared/native/SafetyWarningBanner.tsx
export default (function(argFoo, argBar, argBaz, argCorge, _, argFred, argPlugh) {
    report = argBar;
    romeo = argBaz;
    zulu = argFred;
    oscar = argPlugh;
    var _closure1_slot0 = report;
    var _closure1_slot1 = romeo;
    var _closure1_slot2 = oscar;
    mike = function(argFoo) { // Original name: SafetyWarningBanner
        mike = argFoo;
        romeo = mike.channelId;
        var _closure2_slot0 = romeo;
        options = mike.warningId;
        var _closure2_slot1 = options;
        golf = mike.senderId;
        var _closure2_slot2 = golf;
        entity = mike.warningType;
        var _closure2_slot3 = entity;
        sequence = mike.header;
        source = mike.description;
        foxtrot = mike.onDismiss;
        var _closure2_slot4 = foxtrot;
        yankee = mike.buttons;
        mike = _closure1_slot9;
        tango = undefined;
        offset = mike.bind(tango)();
        backup = _closure1_slot3;
        report = backup.useEffect;
        zulu = function() {
            zulu = _closure1_slot1;
            golf = _closure1_slot2;
            entity = 5;
            mike = golf[entity];
            entity = undefined;
            tango = zulu.bind(entity)(mike);
            zulu = tango.increment;
            mike = {};
            oscar = _closure1_slot0;
            report = 6;
            report = golf[report];
            report = oscar.bind(entity)(report);
            report = report.MetricEvents;
            report = report.SAFETY_WARNING_VIEW;
            mike['name'] = report;
            mike = zulu.bind(tango)(mike);
            return entity;
        };
        mike = new Array(0);
        mike = report.bind(backup)(zulu, mike);
        report = _closure1_slot3;
        zulu = report.useCallback;
        mike = new Array(5);
        mike[0] = foxtrot;
        mike[1] = romeo;
        mike[2] = options;
        mike[3] = golf;
        mike[4] = entity;
        entity = function() {
            _fun89625: for(var _fun89625_ip = 0; ; ) switch(_fun89625_ip) {
 0:
                mike = _closure2_slot4;
                entity = null;
                if(!(entity != mike)) { _fun89625_ip = 23; continue _fun89625 }
 13:
                mike = _closure2_slot4;
                entity = undefined;
                entity = mike.bind(entity)();
 23:
                oscar = _closure1_slot0;
                golf = _closure1_slot2;
                report = 7;
                mike = golf[report];
                entity = undefined;
                tango = oscar.bind(entity)(mike);
                zulu = tango.trackCtaEvent;
                mike = {};
                verify = _closure2_slot0;
                mike['channelId'] = verify;
                verify = _closure2_slot1;
                mike['warningId'] = verify;
                verify = _closure2_slot2;
                mike['senderId'] = verify;
                options = _closure2_slot3;
                mike['warningType'] = options;
                report = golf[report];
                report = oscar.bind(entity)(report);
                report = report.CtaEventTypes;
                report = report.USER_BANNER_DISMISS;
                mike['cta'] = report;
                mike = zulu.bind(tango)(mike);
                return entity;
            }
        };
        romeo = zulu.bind(report)(entity, mike);
        zulu = _closure1_slot8;
        mike = _closure1_slot6;
        entity = {};
        report = offset.container;
        entity['style'] = report;
        options = _closure1_slot7;
        golf = _closure1_slot5;
        report = {};
        foxtrot = offset.closeButton;
        report['style'] = foxtrot;
        report['onPress'] = romeo;
        echo = _closure1_slot0;
        control = _closure1_slot2;
        romeo = 8;
        foxtrot = control[romeo];
        foxtrot = echo.bind(tango)(foxtrot);
        backup = foxtrot.intl;
        foxtrot = backup.string;
        romeo = control[romeo];
        romeo = echo.bind(tango)(romeo);
        romeo = romeo.t;
        romeo = romeo.1UatJy;
        romeo = foxtrot.bind(backup)(romeo);
        report['accessibilityLabel'] = romeo;
        backup = _closure1_slot7;
        vacuum = _closure1_slot1;
        kilo = 9;
        romeo = control[kilo];
        foxtrot = vacuum.bind(tango)(romeo);
        romeo = {};
        sizing = offset.closeButtonIcon;
        romeo['style'] = sizing;
        sizing = 10;
        sizing = control[sizing];
        sizing = vacuum.bind(tango)(sizing);
        romeo['source'] = sizing;
        kilo = control[kilo];
        kilo = echo.bind(tango)(kilo);
        kilo = kilo.IconSizes;
        kilo = kilo.MEDIUM;
        romeo['size'] = kilo;
        romeo = backup.bind(tango)(foxtrot, romeo);
        report['children'] = romeo;
        golf = options.bind(tango)(golf, report);
        report = new Array(3);
        report[0] = golf;
        romeo = _closure1_slot8;
        options = _closure1_slot6;
        golf = {};
        foxtrot = offset.contentContainer;
        golf['style'] = foxtrot;
        kilo = _closure1_slot7;
        backup = _closure1_slot6;
        foxtrot = {};
        sizing = offset.safetyShieldIconContainer;
        foxtrot['style'] = sizing;
        result = _closure1_slot7;
        output = _closure1_slot4;
        sizing = {};
        update = offset.safetyShieldIcon;
        sizing['style'] = update;
        update = 11;
        update = control[update];
        update = vacuum.bind(tango)(update);
        sizing['source'] = update;
        update = 'contain';
        sizing['resizeMode'] = update;
        sizing = result.bind(tango)(output, sizing);
        foxtrot['children'] = sizing;
        backup = kilo.bind(tango)(backup, foxtrot);
        foxtrot = new Array(2);
        foxtrot[0] = backup;
        sizing = _closure1_slot8;
        kilo = _closure1_slot6;
        backup = {};
        output = offset.textContainer;
        backup['style'] = output;
        vacuum = _closure1_slot7;
        result = 12;
        output = control[result];
        output = echo.bind(tango)(output);
        update = output.Text;
        output = {};
        config = offset.text;
        output['style'] = config;
        config = 'heading-md/semibold';
        output['variant'] = config;
        output['children'] = sequence;
        update = vacuum.bind(tango)(update, output);
        output = new Array(2);
        output[0] = update;
        update = _closure1_slot7;
        result = control[result];
        result = echo.bind(tango)(result);
        echo = result.Text;
        result = {};
        control = offset.text;
        result['style'] = control;
        control = 'heading-sm/normal';
        result['variant'] = control;
        result['children'] = source;
        result = update.bind(tango)(echo, result);
        output[1] = result;
        backup['children'] = output;
        backup = sizing.bind(tango)(kilo, backup);
        foxtrot[1] = backup;
        golf['children'] = foxtrot;
        golf = romeo.bind(tango)(options, golf);
        report[1] = golf;
        options = _closure1_slot7;
        golf = _closure1_slot6;
        oscar = {};
        offset = offset.buttonsContainer;
        oscar['style'] = offset;
        offset = yankee.map;
        verify = function(argFoo, argBar) {
            _fun89626: for(var _fun89626_ip = 0; ; ) switch(_fun89626_ip) {
 0:
                entity = argFoo;
                report = _closure1_slot7;
                zulu = _closure1_slot0;
                tango = _closure1_slot2;
                mike = 13;
                mike = tango[mike];
                tango = undefined;
                mike = zulu.bind(tango)(mike);
                zulu = mike.Button;
                mike = {};
                oscar = 'md';
                mike['size'] = oscar;
                golf = entity.variant;
                oscar = null;
                options = oscar != golf;
                oscar = 'primary';
                if(!options) { _fun89626_ip = 69; continue _fun89626 }
 66:
                oscar = golf;
 69:
                mike['variant'] = oscar;
                oscar = entity.text;
                mike['text'] = oscar;
                oscar = entity.text;
                mike['accessibilityLabel'] = oscar;
                entity = entity.onpress;
                mike['onPress'] = entity;
                entity = true;
                mike['grow'] = entity;
                entity = argBar;
                entity = report.bind(tango)(zulu, mike, entity);
                return entity;
            }
        };
        verify = offset.bind(yankee)(verify);
        oscar['children'] = verify;
        oscar = options.bind(tango)(golf, oscar);
        report[2] = oscar;
        entity['children'] = report;
        entity = zulu.bind(tango)(mike, entity);
        return entity;
    };
    entity = global;
    verify = entity.Object;
    options = verify.defineProperty;
    tango = {};
    entity = true;
    tango['value'] = entity;
    entity = '__esModule';
    entity = options.bind(verify)(zulu, entity, tango);
    entity = 0;
    options = oscar[entity];
    tango = argCorge;
    entity = undefined;
    tango = tango.bind(entity)(options);
    var _closure1_slot3 = tango;
    backup = 1;
    tango = oscar[backup];
    tango = report.bind(entity)(tango);
    options = tango.Image;
    var _closure1_slot4 = options;
    options = tango.Pressable;
    var _closure1_slot5 = options;
    tango = tango.View;
    var _closure1_slot6 = tango;
    tango = 2;
    options = oscar[tango];
    options = report.bind(entity)(options);
    options = options.jsx;
    var _closure1_slot7 = options;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.jsxs;
    var _closure1_slot8 = tango;
    tango = 3;
    tango = oscar[tango];
    verify = report.bind(entity)(tango);
    options = verify.createStyles;
    tango = {};
    offset = {};
    yankee = 4;
    foxtrot = oscar[yankee];
    foxtrot = romeo.bind(entity)(foxtrot);
    foxtrot = foxtrot.colors;
    foxtrot = foxtrot.BG_SURFACE_OVERLAY;
    offset['backgroundColor'] = foxtrot;
    foxtrot = oscar[yankee];
    foxtrot = romeo.bind(entity)(foxtrot);
    foxtrot = foxtrot.spacing;
    foxtrot = foxtrot.PX_16;
    offset['paddingHorizontal'] = foxtrot;
    foxtrot = oscar[yankee];
    foxtrot = romeo.bind(entity)(foxtrot);
    foxtrot = foxtrot.spacing;
    foxtrot = foxtrot.PX_12;
    offset['paddingVertical'] = foxtrot;
    foxtrot = oscar[yankee];
    foxtrot = romeo.bind(entity)(foxtrot);
    foxtrot = foxtrot.shadows;
    output = foxtrot.SHADOW_LOW;
    result = offset;
    foxtrot = copyDataProperties(result, output);
    tango['container'] = offset;
    foxtrot = 'row';
    offset = {'flexDirection': 'row', 'alignItems': 'center'};
    tango['contentContainer'] = offset;
    offset = {'width': 42, 'height': 50};
    tango['safetyShieldIconContainer'] = offset;
    offset = {'flex': 1, 'width': 'auto', 'height': 'auto'};
    tango['safetyShieldIcon'] = offset;
    offset = {};
    offset['flex'] = backup;
    kilo = oscar[yankee];
    kilo = romeo.bind(entity)(kilo);
    kilo = kilo.spacing;
    kilo = kilo.PX_16;
    offset['marginLeft'] = kilo;
    kilo = oscar[yankee];
    kilo = romeo.bind(entity)(kilo);
    kilo = kilo.spacing;
    kilo = kilo.PX_40;
    offset['marginRight'] = kilo;
    tango['textContainer'] = offset;
    offset = {};
    kilo = oscar[yankee];
    kilo = romeo.bind(entity)(kilo);
    kilo = kilo.colors;
    kilo = kilo.HEADER_PRIMARY;
    offset['color'] = kilo;
    tango['text'] = offset;
    offset = {};
    kilo = 'absolute';
    offset['position'] = kilo;
    kilo = oscar[yankee];
    kilo = romeo.bind(entity)(kilo);
    kilo = kilo.spacing;
    kilo = kilo.PX_8;
    offset['top'] = kilo;
    kilo = oscar[yankee];
    kilo = romeo.bind(entity)(kilo);
    kilo = kilo.spacing;
    kilo = kilo.PX_16;
    offset['right'] = kilo;
    offset['zIndex'] = backup;
    tango['closeButton'] = offset;
    offset = {};
    backup = oscar[yankee];
    backup = romeo.bind(entity)(backup);
    backup = backup.colors;
    backup = backup.INTERACTIVE_NORMAL;
    offset['tintColor'] = backup;
    tango['closeButtonIcon'] = offset;
    offset = {};
    offset['flexDirection'] = foxtrot;
    foxtrot = oscar[yankee];
    foxtrot = romeo.bind(entity)(foxtrot);
    foxtrot = foxtrot.spacing;
    foxtrot = foxtrot.PX_16;
    offset['marginTop'] = foxtrot;
    yankee = oscar[yankee];
    yankee = romeo.bind(entity)(yankee);
    yankee = yankee.spacing;
    yankee = yankee.PX_8;
    offset['gap'] = yankee;
    tango['buttonsContainer'] = offset;
    tango = options.bind(verify)(tango);
    var _closure1_slot9 = tango;
    tango = 14;
    tango = oscar[tango];
    oscar = report.bind(entity)(tango);
    report = oscar.fileFinishedImporting;
    tango = 'modules/self_mod/shared/native/SafetyWarningBanner.tsx';
    tango = report.bind(oscar)(tango);
    zulu['default'] = mike;
    zulu['SafetyWarningBanner'] = mike;
    return entity;
})();