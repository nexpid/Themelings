// app/modules/self_mod/shared/native/SafetyToolsSafetyTipsActionSheet.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    report = argBar;
    yankee = argBaz;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    var _closure1_slot1 = yankee;
    var _closure1_slot2 = oscard;
    entity = global;
    option = entity.Object;
    golfie = option.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(option)(zuuluu, entity, tangon);
    entity = 0;
    golfie = oscard[entity];
    tangon = argCor;
    entity = undefined;
    tangon = tangon.bind(entity)(golfie);
    tangon = 1;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.View;
    var _closure1_slot3 = tangon;
    tangon = 2;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.getInappropriateConversationsSafetyTips;
    var _closure1_slot4 = tangon;
    tangon = 3;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.jsx;
    var _closure1_slot5 = tangon;
    tangon = 4;
    tangon = oscard[tangon];
    option = report.bind(entity)(tangon);
    golfie = option.createStyles;
    tangon = {};
    verify = {};
    offset = 5;
    offset = oscard[offset];
    offset = yankee.bind(entity)(offset);
    offset = offset.spacing;
    offset = offset.PX_16;
    verify['marginHorizontal'] = offset;
    tangon['safetyTipsContainer'] = verify;
    tangon = golfie.bind(option)(tangon);
    var _closure1_slot6 = tangon;
    tangon = 10;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/self_mod/shared/native/SafetyToolsSafetyTipsActionSheet.tsx';
    tangon = report.bind(oscard)(tangon);
    michal = function(argFoo) { // Original name: SafetyToolsSafetyTipsActionSheet
        entity = argFoo;
        oscard = entity.channelId;
        romeon = entity.recipientId;
        yankee = entity.warningId;
        offset = entity.warningType;
        report = entity.onClose;
        entity = _closure1_slot6;
        tangon = undefined;
        golfie = entity.bind(tangon)();
        zuuluu = _closure1_slot5;
        option = _closure1_slot1;
        backup = _closure1_slot2;
        entity = 6;
        entity = backup[entity];
        michal = option.bind(tangon)(entity);
        entity = {};
        foxtra = true;
        entity['hasHeaderBack'] = foxtra;
        entity['recipientId'] = romeon;
        entity['warningId'] = yankee;
        entity['warningType'] = offset;
        foxtra = _closure1_slot0;
        offset = 7;
        yankee = backup[offset];
        yankee = foxtra.bind(tangon)(yankee);
        kiloes = yankee.intl;
        romeon = kiloes.string;
        yankee = backup[offset];
        yankee = foxtra.bind(tangon)(yankee);
        yankee = yankee.t;
        yankee = yankee.EtNxi4;
        yankee = romeon.bind(kiloes)(yankee);
        entity['headerTitle'] = yankee;
        entity['channelId'] = oscard;
        entity['onClose'] = report;
        oscard = _closure1_slot3;
        report = {};
        golfie = golfie.safetyTipsContainer;
        report['style'] = golfie;
        golfie = 8;
        golfie = backup[golfie];
        option = option.bind(tangon)(golfie);
        golfie = {};
        yankee = backup[offset];
        yankee = foxtra.bind(tangon)(yankee);
        romeon = yankee.intl;
        yankee = romeon.string;
        offset = backup[offset];
        offset = foxtra.bind(tangon)(offset);
        offset = offset.t;
        offset = offset.DJMZX1;
        offset = yankee.bind(romeon)(offset);
        golfie['description'] = offset;
        verify = _closure1_slot4;
        yankee = verify.bind(tangon)();
        offset = yankee.map;
        verify = function(argFoo, argBar) {
            report = _closure1_slot5;
            michal = _closure1_slot0;
            zuuluu = _closure1_slot2;
            entity = 9;
            entity = zuuluu[entity];
            tangon = undefined;
            entity = michal.bind(tangon)(entity);
            zuuluu = entity.Text;
            michal = {};
            entity = 'text-sm/medium';
            michal['variant'] = entity;
            entity = argFoo;
            michal['children'] = entity;
            entity = argBar;
            entity = report.bind(tangon)(zuuluu, michal, entity);
            return entity;
        };
        verify = offset.bind(yankee)(verify);
        golfie['safetyTips'] = verify;
        golfie = zuuluu.bind(tangon)(option, golfie);
        report['children'] = golfie;
        report = zuuluu.bind(tangon)(oscard, report);
        entity['children'] = report;
        entity = zuuluu.bind(tangon)(michal, entity);
        return entity;
    };
    zuuluu['default'] = michal;
    return entity;
})();