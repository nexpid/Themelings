// app/modules/self_mod/shared/native/SafetyToolsSafetyTipsActionSheet.tsx
export default (function(argFoo, argBar, argBaz, argCorge, _, argFred, argPlugh) {
    report = argBar;
    yankee = argBaz;
    zulu = argFred;
    oscar = argPlugh;
    var _closure1_slot0 = report;
    var _closure1_slot1 = yankee;
    var _closure1_slot2 = oscar;
    entity = global;
    options = entity.Object;
    golf = options.defineProperty;
    tango = {};
    entity = true;
    tango['value'] = entity;
    entity = '__esModule';
    entity = golf.bind(options)(zulu, entity, tango);
    entity = 0;
    golf = oscar[entity];
    tango = argCorge;
    entity = undefined;
    tango = tango.bind(entity)(golf);
    tango = 1;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.View;
    var _closure1_slot3 = tango;
    tango = 2;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.getInappropriateConversationsSafetyTips;
    var _closure1_slot4 = tango;
    tango = 3;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.jsx;
    var _closure1_slot5 = tango;
    tango = 4;
    tango = oscar[tango];
    options = report.bind(entity)(tango);
    golf = options.createStyles;
    tango = {};
    verify = {};
    offset = 5;
    offset = oscar[offset];
    offset = yankee.bind(entity)(offset);
    offset = offset.spacing;
    offset = offset.PX_16;
    verify['marginHorizontal'] = offset;
    tango['safetyTipsContainer'] = verify;
    tango = golf.bind(options)(tango);
    var _closure1_slot6 = tango;
    tango = 10;
    tango = oscar[tango];
    oscar = report.bind(entity)(tango);
    report = oscar.fileFinishedImporting;
    tango = 'modules/self_mod/shared/native/SafetyToolsSafetyTipsActionSheet.tsx';
    tango = report.bind(oscar)(tango);
    mike = function(argFoo) { // Original name: SafetyToolsSafetyTipsActionSheet
        entity = argFoo;
        oscar = entity.channelId;
        romeo = entity.recipientId;
        yankee = entity.warningId;
        offset = entity.warningType;
        report = entity.onClose;
        entity = _closure1_slot6;
        tango = undefined;
        golf = entity.bind(tango)();
        zulu = _closure1_slot5;
        options = _closure1_slot1;
        backup = _closure1_slot2;
        entity = 6;
        entity = backup[entity];
        mike = options.bind(tango)(entity);
        entity = {};
        foxtrot = true;
        entity['hasHeaderBack'] = foxtrot;
        entity['recipientId'] = romeo;
        entity['warningId'] = yankee;
        entity['warningType'] = offset;
        foxtrot = _closure1_slot0;
        offset = 7;
        yankee = backup[offset];
        yankee = foxtrot.bind(tango)(yankee);
        kilo = yankee.intl;
        romeo = kilo.string;
        yankee = backup[offset];
        yankee = foxtrot.bind(tango)(yankee);
        yankee = yankee.t;
        yankee = yankee.EtNxi4;
        yankee = romeo.bind(kilo)(yankee);
        entity['headerTitle'] = yankee;
        entity['channelId'] = oscar;
        entity['onClose'] = report;
        oscar = _closure1_slot3;
        report = {};
        golf = golf.safetyTipsContainer;
        report['style'] = golf;
        golf = 8;
        golf = backup[golf];
        options = options.bind(tango)(golf);
        golf = {};
        yankee = backup[offset];
        yankee = foxtrot.bind(tango)(yankee);
        romeo = yankee.intl;
        yankee = romeo.string;
        offset = backup[offset];
        offset = foxtrot.bind(tango)(offset);
        offset = offset.t;
        offset = offset.DJMZX1;
        offset = yankee.bind(romeo)(offset);
        golf['description'] = offset;
        verify = _closure1_slot4;
        yankee = verify.bind(tango)();
        offset = yankee.map;
        verify = function(argFoo, argBar) {
            report = _closure1_slot5;
            mike = _closure1_slot0;
            zulu = _closure1_slot2;
            entity = 9;
            entity = zulu[entity];
            tango = undefined;
            entity = mike.bind(tango)(entity);
            zulu = entity.Text;
            mike = {};
            entity = 'text-sm/medium';
            mike['variant'] = entity;
            entity = argFoo;
            mike['children'] = entity;
            entity = argBar;
            entity = report.bind(tango)(zulu, mike, entity);
            return entity;
        };
        verify = offset.bind(yankee)(verify);
        golf['safetyTips'] = verify;
        golf = zulu.bind(tango)(options, golf);
        report['children'] = golf;
        report = zulu.bind(tango)(oscar, report);
        entity['children'] = report;
        entity = zulu.bind(tango)(mike, entity);
        return entity;
    };
    zulu['default'] = mike;
    return entity;
})();