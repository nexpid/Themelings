// app/modules/self_mod/shared/native/SafetyToolsAboutActionSheet.tsx
export default (function(argFoo, argBar, argBaz, argCorge, _, argFred, argPlugh) {
    report = argBar;
    yankee = argBaz;
    zulu = argFred;
    oscar = argPlugh;
    var _closure1_slot0 = report;
    var _closure1_slot1 = yankee;
    var _closure1_slot2 = oscar;
    entity = global;
    options = entity.Object;
    golf = options.defineProperty;
    tango = {};
    entity = true;
    tango['value'] = entity;
    entity = '__esModule';
    entity = golf.bind(options)(zulu, entity, tango);
    entity = 0;
    tango = oscar[entity];
    entity = undefined;
    tango = yankee.bind(entity)(tango);
    var _closure1_slot3 = tango;
    tango = 1;
    golf = oscar[tango];
    tango = argCorge;
    tango = tango.bind(entity)(golf);
    var _closure1_slot4 = tango;
    tango = 2;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.View;
    var _closure1_slot5 = tango;
    tango = 3;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.getSafetyToolsActionSheetKey;
    var _closure1_slot6 = tango;
    tango = 4;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.HelpdeskArticles;
    var _closure1_slot7 = tango;
    tango = 5;
    golf = oscar[tango];
    golf = report.bind(entity)(golf);
    golf = golf.jsx;
    var _closure1_slot8 = golf;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.jsxs;
    var _closure1_slot9 = tango;
    tango = 6;
    tango = oscar[tango];
    options = report.bind(entity)(tango);
    golf = options.createStyles;
    tango = {};
    verify = {};
    offset = 7;
    romeo = oscar[offset];
    romeo = yankee.bind(entity)(romeo);
    romeo = romeo.spacing;
    romeo = romeo.PX_32;
    verify['marginHorizontal'] = romeo;
    tango['aboutContainer'] = verify;
    verify = {'alignSelf': 'center', 'textAlign': 'center'};
    romeo = oscar[offset];
    romeo = yankee.bind(entity)(romeo);
    romeo = romeo.spacing;
    romeo = romeo.PX_24;
    verify['marginBottom'] = romeo;
    tango['description'] = verify;
    verify = {'alignSelf': 'center', 'textAlign': 'center'};
    offset = oscar[offset];
    offset = yankee.bind(entity)(offset);
    offset = offset.spacing;
    offset = offset.PX_8;
    verify['marginTop'] = offset;
    tango['reportFalsePositive'] = verify;
    tango = golf.bind(options)(tango);
    var _closure1_slot10 = tango;
    tango = 20;
    tango = oscar[tango];
    oscar = report.bind(entity)(tango);
    report = oscar.fileFinishedImporting;
    tango = 'modules/self_mod/shared/native/SafetyToolsAboutActionSheet.tsx';
    tango = report.bind(oscar)(tango);
    mike = function(argFoo) { // Original name: SafetyToolsAboutScreen
        entity = argFoo;
        oscar = entity.channelId;
        var _closure2_slot0 = oscar;
        verify = entity.recipientId;
        var _closure2_slot1 = verify;
        options = entity.warningId;
        var _closure2_slot2 = options;
        golf = entity.warningType;
        var _closure2_slot3 = golf;
        report = entity.onClose;
        romeo = _closure1_slot4;
        mike = romeo.useState;
        entity = false;
        zulu = mike.bind(romeo)(entity);
        mike = _closure1_slot3;
        tango = undefined;
        entity = 2;
        mike = mike.bind(tango)(zulu, entity);
        entity = 0;
        result = mike[entity];
        var _closure2_slot4 = result;
        entity = 1;
        entity = mike[entity];
        var _closure2_slot5 = entity;
        entity = _closure1_slot10;
        yankee = entity.bind(tango)();
        offset = _closure1_slot0;
        backup = _closure1_slot2;
        entity = 8;
        entity = backup[entity];
        mike = offset.bind(tango)(entity);
        entity = mike.useSafetyToolsButtonTooltipForChannel;
        mike = entity.bind(mike)(oscar);
        entity = null;
        entity = entity != mike;
        var _closure2_slot6 = entity;
        zulu = romeo.useCallback;
        mike = new Array(5);
        mike[0] = oscar;
        mike[1] = options;
        mike[2] = golf;
        mike[3] = verify;
        mike[4] = entity;
        entity = function() {
            tango = _closure1_slot1;
            options = _closure1_slot2;
            entity = 9;
            zulu = options[entity];
            entity = undefined;
            oscar = tango.bind(entity)(zulu);
            tango = oscar.hideActionSheet;
            zulu = _closure1_slot6;
            verify = _closure2_slot0;
            zulu = zulu.bind(entity)(verify);
            zulu = tango.bind(oscar)(zulu);
            golf = _closure1_slot0;
            oscar = 10;
            mike = options[oscar];
            tango = golf.bind(entity)(mike);
            zulu = tango.trackCtaEvent;
            mike = {};
            mike['channelId'] = verify;
            verify = _closure2_slot2;
            mike['warningId'] = verify;
            verify = _closure2_slot3;
            mike['warningType'] = verify;
            verify = _closure2_slot1;
            mike['senderId'] = verify;
            oscar = options[oscar];
            oscar = golf.bind(entity)(oscar);
            oscar = oscar.CtaEventTypes;
            oscar = oscar.USER_SAFETY_TOOLS_ABOUT_SAFETY_ALERTS_DISMISS;
            mike['cta'] = oscar;
            report = _closure2_slot6;
            mike['isNudgeWarning'] = report;
            mike = zulu.bind(tango)(mike);
            return entity;
        };
        output = zulu.bind(romeo)(entity, mike);
        zulu = romeo.useCallback;
        mike = new Array(2);
        mike[0] = oscar;
        mike[1] = result;
        entity = function() {
            _fun79642: for(var _fun79642_ip = 0; ; ) switch(_fun79642_ip) {
 0:
                zulu = _closure2_slot4;
                if(zulu) { _fun79642_ip = 98; continue _fun79642 }
 12:
                tango = _closure2_slot5;
                report = undefined;
                zulu = true;
                zulu = tango.bind(report)(zulu);
                tango = _closure1_slot0;
                oscar = _closure1_slot2;
                zulu = 11;
                zulu = oscar[zulu];
                tango = tango.bind(report)(zulu);
                zulu = tango.reportFalsePositive;
                mike = _closure2_slot0;
                tango = zulu.bind(tango)(mike);
                zulu = tango.then;
                mike = function() {
                    tango = _closure2_slot5;
                    entity = undefined;
                    zulu = false;
                    zulu = tango.bind(entity)(zulu);
                    yankee = _closure1_slot0;
                    oscar = _closure1_slot2;
                    zulu = 12;
                    zulu = oscar[zulu];
                    golf = yankee.bind(entity)(zulu);
                    tango = golf.showSafetyToast;
                    zulu = {};
                    options = 'safety-tools-report-false-positive';
                    zulu['id'] = options;
                    options = 13;
                    verify = oscar[options];
                    verify = yankee.bind(entity)(verify);
                    offset = verify.intl;
                    verify = offset.string;
                    options = oscar[options];
                    options = yankee.bind(entity)(options);
                    options = options.t;
                    options = options.FhgVWl;
                    options = verify.bind(offset)(options);
                    zulu['text'] = options;
                    zulu = tango.bind(golf)(zulu);
                    tango = _closure1_slot1;
                    zulu = 9;
                    zulu = oscar[zulu];
                    tango = tango.bind(entity)(zulu);
                    zulu = tango.hideActionSheet;
                    report = _closure1_slot6;
                    mike = _closure2_slot0;
                    mike = report.bind(entity)(mike);
                    mike = zulu.bind(tango)(mike);
                    return entity;
                };
                zulu = zulu.bind(tango)(mike);
                mike = zulu.catch;
                entity = function() {
                    zulu = _closure2_slot5;
                    entity = undefined;
                    mike = false;
                    mike = zulu.bind(entity)(mike);
                    golf = _closure1_slot0;
                    options = _closure1_slot2;
                    mike = 14;
                    mike = options[mike];
                    tango = golf.bind(entity)(mike);
                    zulu = tango.presentError;
                    mike = 13;
                    report = options[mike];
                    report = golf.bind(entity)(report);
                    oscar = report.intl;
                    report = oscar.string;
                    mike = options[mike];
                    mike = golf.bind(entity)(mike);
                    mike = mike.t;
                    mike = mike.R0RpRU;
                    mike = report.bind(oscar)(mike);
                    mike = zulu.bind(tango)(mike);
                    return entity;
                };
                entity = mike.bind(zulu)(entity);
 98:
                entity = undefined;
                return entity;
            }
        };
        entity = zulu.bind(romeo)(entity, mike);
        var _closure2_slot7 = entity;
        zulu = _closure1_slot9;
        sequence = _closure1_slot1;
        entity = 15;
        entity = backup[entity];
        mike = sequence.bind(tango)(entity);
        entity = {};
        romeo = true;
        entity['hasHeaderBack'] = romeo;
        entity['recipientId'] = verify;
        entity['warningId'] = options;
        entity['warningType'] = golf;
        verify = 13;
        golf = backup[verify];
        golf = offset.bind(tango)(golf);
        romeo = golf.intl;
        options = romeo.string;
        golf = backup[verify];
        golf = offset.bind(tango)(golf);
        golf = golf.t;
        golf = golf.qI14KC;
        golf = options.bind(romeo)(golf);
        entity['headerTitle'] = golf;
        entity['channelId'] = oscar;
        entity['onClose'] = report;
        oscar = _closure1_slot5;
        report = {};
        golf = yankee.aboutContainer;
        report['style'] = golf;
        options = _closure1_slot8;
        golf = 16;
        golf = backup[golf];
        golf = offset.bind(tango)(golf);
        kilo = golf.TextWithIOSLinkWorkaround;
        golf = {};
        romeo = 'text-md/medium';
        golf['variant'] = romeo;
        sizing = yankee.description;
        golf['style'] = sizing;
        sizing = backup[verify];
        sizing = offset.bind(tango)(sizing);
        source = sizing.intl;
        update = source.format;
        sizing = backup[verify];
        sizing = offset.bind(tango)(sizing);
        sizing = sizing.t;
        echo = sizing.njJ/Cg;
        sizing = {};
        vacuum = 17;
        vacuum = backup[vacuum];
        sequence = sequence.bind(tango)(vacuum);
        vacuum = sequence.getArticleURL;
        control = _closure1_slot7;
        control = control.SAFETY_ALERTS;
        control = vacuum.bind(sequence)(control);
        sizing['learnMoreLink'] = control;
        sizing = update.bind(source)(echo, sizing);
        golf['children'] = sizing;
        kilo = options.bind(tango)(kilo, golf);
        golf = new Array(2);
        golf[0] = kilo;
        kilo = 18;
        kilo = backup[kilo];
        kilo = offset.bind(tango)(kilo);
        sizing = kilo.Button;
        kilo = {'variant': 'secondary', 'size': 'lg'};
        kilo['disabled'] = result;
        result = backup[verify];
        result = offset.bind(tango)(result);
        update = result.intl;
        echo = update.string;
        result = backup[verify];
        result = offset.bind(tango)(result);
        result = result.t;
        result = result.Xb2REB;
        result = echo.bind(update)(result);
        kilo['text'] = result;
        kilo['onPress'] = output;
        kilo = options.bind(tango)(sizing, kilo);
        golf[1] = kilo;
        report['children'] = golf;
        oscar = zulu.bind(tango)(oscar, report);
        report = new Array(2);
        report[0] = oscar;
        oscar = 19;
        oscar = backup[oscar];
        oscar = offset.bind(tango)(oscar);
        golf = oscar.Text;
        oscar = {};
        oscar['variant'] = romeo;
        yankee = yankee.reportFalsePositive;
        oscar['style'] = yankee;
        yankee = backup[verify];
        yankee = offset.bind(tango)(yankee);
        romeo = yankee.intl;
        yankee = romeo.format;
        verify = backup[verify];
        verify = offset.bind(tango)(verify);
        verify = verify.t;
        offset = verify.2uYViI;
        verify = {};
        foxtrot = function(argFoo, argBar) { // Original name: reportFalsePositiveHook
            report = _closure1_slot8;
            mike = _closure1_slot0;
            zulu = _closure1_slot2;
            entity = 19;
            entity = zulu[entity];
            tango = undefined;
            entity = mike.bind(tango)(entity);
            zulu = entity.Text;
            mike = {'variant': 'text-sm/medium', 'color': 'text-link'};
            oscar = _closure2_slot4;
            mike['disabled'] = oscar;
            entity = _closure2_slot7;
            mike['onPress'] = entity;
            entity = argFoo;
            mike['children'] = entity;
            entity = argBar;
            entity = report.bind(tango)(zulu, mike, entity);
            return entity;
        };
        verify['reportFalsePositiveHook'] = foxtrot;
        verify = yankee.bind(romeo)(offset, verify);
        oscar['children'] = verify;
        oscar = options.bind(tango)(golf, oscar);
        report[1] = oscar;
        entity['children'] = report;
        entity = zulu.bind(tango)(mike, entity);
        return entity;
    };
    zulu['default'] = mike;
    return entity;
})();