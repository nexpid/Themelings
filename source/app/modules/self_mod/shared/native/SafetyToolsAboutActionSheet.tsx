// app/modules/self_mod/shared/native/SafetyToolsAboutActionSheet.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    report = argBar;
    yankee = argBaz;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    var _closure1_slot1 = yankee;
    var _closure1_slot2 = oscard;
    entity = global;
    option = entity.Object;
    golfie = option.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(option)(zuuluu, entity, tangon);
    entity = 0;
    tangon = oscard[entity];
    entity = undefined;
    tangon = yankee.bind(entity)(tangon);
    var _closure1_slot3 = tangon;
    tangon = 1;
    golfie = oscard[tangon];
    tangon = argCor;
    tangon = tangon.bind(entity)(golfie);
    var _closure1_slot4 = tangon;
    tangon = 2;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.View;
    var _closure1_slot5 = tangon;
    tangon = 3;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.getSafetyToolsActionSheetKey;
    var _closure1_slot6 = tangon;
    tangon = 4;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.HelpdeskArticles;
    var _closure1_slot7 = tangon;
    tangon = 5;
    golfie = oscard[tangon];
    golfie = report.bind(entity)(golfie);
    golfie = golfie.jsx;
    var _closure1_slot8 = golfie;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.jsxs;
    var _closure1_slot9 = tangon;
    tangon = 6;
    tangon = oscard[tangon];
    option = report.bind(entity)(tangon);
    golfie = option.createStyles;
    tangon = {};
    verify = {};
    offset = 7;
    romeon = oscard[offset];
    romeon = yankee.bind(entity)(romeon);
    romeon = romeon.spacing;
    romeon = romeon.PX_32;
    verify['marginHorizontal'] = romeon;
    tangon['aboutContainer'] = verify;
    verify = {'alignSelf': 'center', 'textAlign': 'center'};
    romeon = oscard[offset];
    romeon = yankee.bind(entity)(romeon);
    romeon = romeon.spacing;
    romeon = romeon.PX_24;
    verify['marginBottom'] = romeon;
    tangon['description'] = verify;
    verify = {'alignSelf': 'center', 'textAlign': 'center'};
    offset = oscard[offset];
    offset = yankee.bind(entity)(offset);
    offset = offset.spacing;
    offset = offset.PX_8;
    verify['marginTop'] = offset;
    tangon['reportFalsePositive'] = verify;
    tangon = golfie.bind(option)(tangon);
    var _closure1_slot10 = tangon;
    tangon = 20;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/self_mod/shared/native/SafetyToolsAboutActionSheet.tsx';
    tangon = report.bind(oscard)(tangon);
    michal = function(argFoo) { // Original name: SafetyToolsAboutScreen
        entity = argFoo;
        oscard = entity.channelId;
        var _closure2_slot0 = oscard;
        verify = entity.recipientId;
        var _closure2_slot1 = verify;
        option = entity.warningId;
        var _closure2_slot2 = option;
        golfie = entity.warningType;
        var _closure2_slot3 = golfie;
        report = entity.onClose;
        romeon = _closure1_slot4;
        michal = romeon.useState;
        entity = false;
        zuuluu = michal.bind(romeon)(entity);
        michal = _closure1_slot3;
        tangon = undefined;
        entity = 2;
        michal = michal.bind(tangon)(zuuluu, entity);
        entity = 0;
        result = michal[entity];
        var _closure2_slot4 = result;
        entity = 1;
        entity = michal[entity];
        var _closure2_slot5 = entity;
        entity = _closure1_slot10;
        yankee = entity.bind(tangon)();
        offset = _closure1_slot0;
        backup = _closure1_slot2;
        entity = 8;
        entity = backup[entity];
        michal = offset.bind(tangon)(entity);
        entity = michal.useSafetyToolsButtonTooltipForChannel;
        michal = entity.bind(michal)(oscard);
        entity = null;
        entity = entity != michal;
        var _closure2_slot6 = entity;
        zuuluu = romeon.useCallback;
        michal = new Array(5);
        michal[0] = oscard;
        michal[1] = option;
        michal[2] = golfie;
        michal[3] = verify;
        michal[4] = entity;
        entity = function() {
            tangon = _closure1_slot1;
            option = _closure1_slot2;
            entity = 9;
            zuuluu = option[entity];
            entity = undefined;
            oscard = tangon.bind(entity)(zuuluu);
            tangon = oscard.hideActionSheet;
            zuuluu = _closure1_slot6;
            verify = _closure2_slot0;
            zuuluu = zuuluu.bind(entity)(verify);
            zuuluu = tangon.bind(oscard)(zuuluu);
            golfie = _closure1_slot0;
            oscard = 10;
            michal = option[oscard];
            tangon = golfie.bind(entity)(michal);
            zuuluu = tangon.trackCtaEvent;
            michal = {};
            michal['channelId'] = verify;
            verify = _closure2_slot2;
            michal['warningId'] = verify;
            verify = _closure2_slot3;
            michal['warningType'] = verify;
            verify = _closure2_slot1;
            michal['senderId'] = verify;
            oscard = option[oscard];
            oscard = golfie.bind(entity)(oscard);
            oscard = oscard.CtaEventTypes;
            oscard = oscard.USER_SAFETY_TOOLS_ABOUT_SAFETY_ALERTS_DISMISS;
            michal['cta'] = oscard;
            report = _closure2_slot6;
            michal['isNudgeWarning'] = report;
            michal = zuuluu.bind(tangon)(michal);
            return entity;
        };
        output = zuuluu.bind(romeon)(entity, michal);
        zuuluu = romeon.useCallback;
        michal = new Array(2);
        michal[0] = oscard;
        michal[1] = result;
        entity = function() {
            _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
                zuuluu = _closure2_slot4;
                if(zuuluu) { _fun00002_ip = 94; continue _fun00001 }
 12:
                tangon = _closure2_slot5;
                report = undefined;
                zuuluu = true;
                zuuluu = tangon.bind(report)(zuuluu);
                tangon = _closure1_slot0;
                oscard = _closure1_slot2;
                zuuluu = 11;
                zuuluu = oscard[zuuluu];
                tangon = tangon.bind(report)(zuuluu);
                zuuluu = tangon.reportFalsePositive;
                michal = _closure2_slot0;
                tangon = zuuluu.bind(tangon)(michal);
                zuuluu = tangon.then;
                michal = function() {
                    tangon = _closure2_slot5;
                    entity = undefined;
                    zuuluu = false;
                    zuuluu = tangon.bind(entity)(zuuluu);
                    yankee = _closure1_slot0;
                    oscard = _closure1_slot2;
                    zuuluu = 12;
                    zuuluu = oscard[zuuluu];
                    golfie = yankee.bind(entity)(zuuluu);
                    tangon = golfie.showSafetyToast;
                    zuuluu = {};
                    option = 'safety-tools-report-false-positive';
                    zuuluu['id'] = option;
                    option = 13;
                    verify = oscard[option];
                    verify = yankee.bind(entity)(verify);
                    offset = verify.intl;
                    verify = offset.string;
                    option = oscard[option];
                    option = yankee.bind(entity)(option);
                    option = option.t;
                    option = option.FhgVWl;
                    option = verify.bind(offset)(option);
                    zuuluu['text'] = option;
                    zuuluu = tangon.bind(golfie)(zuuluu);
                    tangon = _closure1_slot1;
                    zuuluu = 9;
                    zuuluu = oscard[zuuluu];
                    tangon = tangon.bind(entity)(zuuluu);
                    zuuluu = tangon.hideActionSheet;
                    report = _closure1_slot6;
                    michal = _closure2_slot0;
                    michal = report.bind(entity)(michal);
                    michal = zuuluu.bind(tangon)(michal);
                    return entity;
                };
                zuuluu = zuuluu.bind(tangon)(michal);
                michal = zuuluu.catch;
                entity = function() {
                    zuuluu = _closure2_slot5;
                    entity = undefined;
                    michal = false;
                    michal = zuuluu.bind(entity)(michal);
                    golfie = _closure1_slot0;
                    option = _closure1_slot2;
                    michal = 14;
                    michal = option[michal];
                    tangon = golfie.bind(entity)(michal);
                    zuuluu = tangon.presentError;
                    michal = 13;
                    report = option[michal];
                    report = golfie.bind(entity)(report);
                    oscard = report.intl;
                    report = oscard.string;
                    michal = option[michal];
                    michal = golfie.bind(entity)(michal);
                    michal = michal.t;
                    michal = michal.R0RpRU;
                    michal = report.bind(oscard)(michal);
                    michal = zuuluu.bind(tangon)(michal);
                    return entity;
                };
                entity = michal.bind(zuuluu)(entity);
 94:
                entity = undefined;
                return entity;
            }
        };
        entity = zuuluu.bind(romeon)(entity, michal);
        var _closure2_slot7 = entity;
        zuuluu = _closure1_slot9;
        sequen = _closure1_slot1;
        entity = 15;
        entity = backup[entity];
        michal = sequen.bind(tangon)(entity);
        entity = {};
        romeon = true;
        entity['hasHeaderBack'] = romeon;
        entity['recipientId'] = verify;
        entity['warningId'] = option;
        entity['warningType'] = golfie;
        verify = 13;
        golfie = backup[verify];
        golfie = offset.bind(tangon)(golfie);
        romeon = golfie.intl;
        option = romeon.string;
        golfie = backup[verify];
        golfie = offset.bind(tangon)(golfie);
        golfie = golfie.t;
        golfie = golfie.qI14KC;
        golfie = option.bind(romeon)(golfie);
        entity['headerTitle'] = golfie;
        entity['channelId'] = oscard;
        entity['onClose'] = report;
        oscard = _closure1_slot5;
        report = {};
        golfie = yankee.aboutContainer;
        report['style'] = golfie;
        option = _closure1_slot8;
        golfie = 16;
        golfie = backup[golfie];
        golfie = offset.bind(tangon)(golfie);
        kiloes = golfie.TextWithIOSLinkWorkaround;
        golfie = {};
        romeon = 'text-md/medium';
        golfie['variant'] = romeon;
        sizing = yankee.description;
        golfie['style'] = sizing;
        sizing = backup[verify];
        sizing = offset.bind(tangon)(sizing);
        source = sizing.intl;
        update = source.format;
        sizing = backup[verify];
        sizing = offset.bind(tangon)(sizing);
        sizing = sizing.t;
        echoed = sizing.njJ/Cg;
        sizing = {};
        vacuum = 17;
        vacuum = backup[vacuum];
        sequen = sequen.bind(tangon)(vacuum);
        vacuum = sequen.getArticleURL;
        ctrled = _closure1_slot7;
        ctrled = ctrled.SAFETY_ALERTS;
        ctrled = vacuum.bind(sequen)(ctrled);
        sizing['learnMoreLink'] = ctrled;
        sizing = update.bind(source)(echoed, sizing);
        golfie['children'] = sizing;
        kiloes = option.bind(tangon)(kiloes, golfie);
        golfie = new Array(2);
        golfie[0] = kiloes;
        kiloes = 18;
        kiloes = backup[kiloes];
        kiloes = offset.bind(tangon)(kiloes);
        sizing = kiloes.Button;
        kiloes = {'variant': 'secondary', 'size': 'lg'};
        kiloes['disabled'] = result;
        result = backup[verify];
        result = offset.bind(tangon)(result);
        update = result.intl;
        echoed = update.string;
        result = backup[verify];
        result = offset.bind(tangon)(result);
        result = result.t;
        result = result.Xb2REB;
        result = echoed.bind(update)(result);
        kiloes['text'] = result;
        kiloes['onPress'] = output;
        kiloes = option.bind(tangon)(sizing, kiloes);
        golfie[1] = kiloes;
        report['children'] = golfie;
        oscard = zuuluu.bind(tangon)(oscard, report);
        report = new Array(2);
        report[0] = oscard;
        oscard = 19;
        oscard = backup[oscard];
        oscard = offset.bind(tangon)(oscard);
        golfie = oscard.Text;
        oscard = {};
        oscard['variant'] = romeon;
        yankee = yankee.reportFalsePositive;
        oscard['style'] = yankee;
        yankee = backup[verify];
        yankee = offset.bind(tangon)(yankee);
        romeon = yankee.intl;
        yankee = romeon.format;
        verify = backup[verify];
        verify = offset.bind(tangon)(verify);
        verify = verify.t;
        offset = verify.2uYViI;
        verify = {};
        foxtra = function(argFoo, argBar) { // Original name: reportFalsePositiveHook
            report = _closure1_slot8;
            michal = _closure1_slot0;
            zuuluu = _closure1_slot2;
            entity = 19;
            entity = zuuluu[entity];
            tangon = undefined;
            entity = michal.bind(tangon)(entity);
            zuuluu = entity.Text;
            michal = {'variant': 'text-sm/medium', 'color': 'text-link'};
            oscard = _closure2_slot4;
            michal['disabled'] = oscard;
            entity = _closure2_slot7;
            michal['onPress'] = entity;
            entity = argFoo;
            michal['children'] = entity;
            entity = argBar;
            entity = report.bind(tangon)(zuuluu, michal, entity);
            return entity;
        };
        verify['reportFalsePositiveHook'] = foxtra;
        verify = yankee.bind(romeon)(offset, verify);
        oscard['children'] = verify;
        oscard = option.bind(tangon)(golfie, oscard);
        report[1] = oscard;
        entity['children'] = report;
        entity = zuuluu.bind(tangon)(michal, entity);
        return entity;
    };
    zuuluu['default'] = michal;
    return entity;
})();