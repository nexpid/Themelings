// app/modules/self_mod/shared/native/SafetyTipsRow.tsx
export default (function(argFoo, argBar, argBaz, argCorge, _, argFred, argPlugh) {
    report = argBar;
    romeo = argBaz;
    zulu = argFred;
    oscar = argPlugh;
    var _closure1_slot0 = report;
    var _closure1_slot1 = oscar;
    entity = global;
    options = entity.Object;
    golf = options.defineProperty;
    tango = {};
    entity = true;
    tango['value'] = entity;
    entity = '__esModule';
    entity = golf.bind(options)(zulu, entity, tango);
    entity = 0;
    golf = oscar[entity];
    tango = argCorge;
    entity = undefined;
    tango = tango.bind(entity)(golf);
    offset = 1;
    tango = oscar[offset];
    tango = report.bind(entity)(tango);
    tango = tango.View;
    var _closure1_slot2 = tango;
    tango = 2;
    golf = oscar[tango];
    golf = report.bind(entity)(golf);
    golf = golf.jsx;
    var _closure1_slot3 = golf;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.jsxs;
    var _closure1_slot4 = tango;
    tango = 3;
    tango = oscar[tango];
    options = report.bind(entity)(tango);
    golf = options.createStyles;
    tango = {};
    verify = {};
    yankee = 'row';
    verify['flexDirection'] = yankee;
    tango['container'] = verify;
    verify = {'width': 32, 'height': 32, 'backgroundColor': null, 'borderRadius': null, 'alignItems': 'center', 'justifyContent': 'center'};
    yankee = 4;
    foxtrot = oscar[yankee];
    foxtrot = romeo.bind(entity)(foxtrot);
    foxtrot = foxtrot.colors;
    foxtrot = foxtrot.BG_MOD_SUBTLE;
    verify['backgroundColor'] = foxtrot;
    foxtrot = oscar[yankee];
    foxtrot = romeo.bind(entity)(foxtrot);
    foxtrot = foxtrot.radii;
    foxtrot = foxtrot.round;
    verify['borderRadius'] = foxtrot;
    yankee = oscar[yankee];
    yankee = romeo.bind(entity)(yankee);
    yankee = yankee.spacing;
    yankee = yankee.PX_8;
    verify['marginRight'] = yankee;
    tango['indexContainer'] = verify;
    verify = {};
    verify['flex'] = offset;
    tango['tipContainer'] = verify;
    tango = golf.bind(options)(tango);
    var _closure1_slot5 = tango;
    tango = 6;
    tango = oscar[tango];
    oscar = report.bind(entity)(tango);
    report = oscar.fileFinishedImporting;
    tango = 'modules/self_mod/shared/native/SafetyTipsRow.tsx';
    tango = report.bind(oscar)(tango);
    mike = function(argFoo) { // Original name: SafetyTipsRow
        entity = argFoo;
        yankee = entity.index;
        options = entity.tip;
        entity = _closure1_slot5;
        tango = undefined;
        verify = entity.bind(tango)();
        zulu = _closure1_slot4;
        mike = _closure1_slot2;
        entity = {};
        report = verify.container;
        entity['style'] = report;
        golf = _closure1_slot3;
        report = {};
        offset = verify.indexContainer;
        report['style'] = offset;
        offset = _closure1_slot0;
        romeo = _closure1_slot1;
        oscar = 5;
        oscar = romeo[oscar];
        oscar = offset.bind(tango)(oscar);
        offset = oscar.Text;
        oscar = {'variant': 'heading-md/semibold', 'color': 'text-brand'};
        oscar['children'] = yankee;
        oscar = golf.bind(tango)(offset, oscar);
        report['children'] = oscar;
        oscar = golf.bind(tango)(mike, report);
        report = new Array(2);
        report[0] = oscar;
        oscar = {};
        verify = verify.tipContainer;
        oscar['style'] = verify;
        oscar['children'] = options;
        oscar = golf.bind(tango)(mike, oscar);
        report[1] = oscar;
        entity['children'] = report;
        entity = zulu.bind(tango)(mike, entity);
        return entity;
    };
    zulu['default'] = mike;
    return entity;
})();