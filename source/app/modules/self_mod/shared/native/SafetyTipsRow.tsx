// app/modules/self_mod/shared/native/SafetyTipsRow.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    report = argBar;
    romeon = argBaz;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    var _closure1_slot1 = oscard;
    entity = global;
    option = entity.Object;
    golfie = option.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(option)(zuuluu, entity, tangon);
    entity = 0;
    golfie = oscard[entity];
    tangon = argCor;
    entity = undefined;
    tangon = tangon.bind(entity)(golfie);
    offset = 1;
    tangon = oscard[offset];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.View;
    var _closure1_slot2 = tangon;
    tangon = 2;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.jsx;
    var _closure1_slot3 = tangon;
    tangon = 3;
    tangon = oscard[tangon];
    option = report.bind(entity)(tangon);
    golfie = option.createStyles;
    tangon = {};
    verify = {};
    yankee = 'row';
    verify['flexDirection'] = yankee;
    tangon['container'] = verify;
    verify = {'width': 32, 'height': 32, 'backgroundColor': null, 'borderRadius': null, 'alignItems': 'center', 'justifyContent': 'center'};
    yankee = 4;
    foxtra = oscard[yankee];
    foxtra = romeon.bind(entity)(foxtra);
    foxtra = foxtra.colors;
    foxtra = foxtra.BG_MOD_SUBTLE;
    verify['backgroundColor'] = foxtra;
    foxtra = oscard[yankee];
    foxtra = romeon.bind(entity)(foxtra);
    foxtra = foxtra.radii;
    foxtra = foxtra.round;
    verify['borderRadius'] = foxtra;
    yankee = oscard[yankee];
    yankee = romeon.bind(entity)(yankee);
    yankee = yankee.spacing;
    yankee = yankee.PX_4;
    verify['marginRight'] = yankee;
    tangon['indexContainer'] = verify;
    verify = {};
    verify['flex'] = offset;
    tangon['tipContainer'] = verify;
    tangon = golfie.bind(option)(tangon);
    var _closure1_slot4 = tangon;
    tangon = 7;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/self_mod/shared/native/SafetyTipsRow.tsx';
    tangon = report.bind(oscard)(tangon);
    michal = function(argFoo) { // Original name: SafetyTipsRow
        entity = argFoo;
        offset = entity.index;
        golfie = entity.tip;
        oscard = entity.description;
        report = entity.end;
        michal = _closure1_slot4;
        tangon = undefined;
        michal = michal.bind(tangon)();
        var _closure2_slot0 = michal;
        zuuluu = _closure1_slot3;
        michal = _closure1_slot0;
        verify = _closure1_slot1;
        entity = 5;
        entity = verify[entity];
        entity = michal.bind(tangon)(entity);
        michal = entity.TableRow;
        entity = {};
        verify = {};
        verify['index'] = offset;
        option = function(argFoo) {
            entity = argFoo;
            golfie = entity.index;
            tangon = _closure1_slot3;
            zuuluu = _closure1_slot2;
            michal = {};
            report = _closure2_slot0;
            report = report.indexContainer;
            michal['style'] = report;
            oscard = _closure1_slot0;
            report = _closure1_slot1;
            entity = 6;
            report = report[entity];
            entity = undefined;
            report = oscard.bind(entity)(report);
            oscard = report.Text;
            report = {'variant': 'heading-md/semibold', 'color': 'text-brand'};
            report['children'] = golfie;
            report = tangon.bind(entity)(oscard, report);
            michal['children'] = report;
            entity = tangon.bind(entity)(zuuluu, michal);
            return entity;
        };
        option = zuuluu.bind(tangon)(option, verify);
        entity['icon'] = option;
        entity['label'] = golfie;
        entity['subLabel'] = oscard;
        entity['end'] = report;
        entity = zuuluu.bind(tangon)(michal, entity);
        return entity;
    };
    zuuluu['default'] = michal;
    return entity;
})();