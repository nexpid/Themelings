// app/modules/self_mod/shared/native/ConfirmBlockUserAlert.tsx
export default (function(argFoo, argBar, argBaz, argCorge, _, argFred, argPlugh) {
    report = argBar;
    yankee = argBaz;
    zulu = argFred;
    oscar = argPlugh;
    var _closure1_slot0 = report;
    var _closure1_slot1 = yankee;
    var _closure1_slot2 = oscar;
    entity = global;
    options = entity.Object;
    golf = options.defineProperty;
    tango = {};
    entity = true;
    tango['value'] = entity;
    entity = '__esModule';
    entity = golf.bind(options)(zulu, entity, tango);
    entity = 0;
    golf = oscar[entity];
    tango = argCorge;
    entity = undefined;
    tango = tango.bind(entity)(golf);
    var _closure1_slot3 = tango;
    tango = 1;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.View;
    var _closure1_slot4 = tango;
    tango = 2;
    tango = oscar[tango];
    tango = yankee.bind(entity)(tango);
    var _closure1_slot5 = tango;
    tango = 3;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.LOCATION_CONTEXT_MOBILE;
    var _closure1_slot6 = tango;
    tango = 4;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.RelationshipTypes;
    var _closure1_slot7 = tango;
    tango = 5;
    golf = oscar[tango];
    golf = report.bind(entity)(golf);
    golf = golf.jsx;
    var _closure1_slot8 = golf;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.jsxs;
    var _closure1_slot9 = tango;
    tango = 6;
    tango = oscar[tango];
    options = report.bind(entity)(tango);
    golf = options.createStyles;
    tango = {};
    verify = {};
    offset = 7;
    romeo = oscar[offset];
    romeo = yankee.bind(entity)(romeo);
    romeo = romeo.colors;
    romeo = romeo.HEADER_PRIMARY;
    verify['color'] = romeo;
    romeo = 'center';
    verify['textAlign'] = romeo;
    tango['header'] = verify;
    verify = {};
    foxtrot = oscar[offset];
    foxtrot = yankee.bind(entity)(foxtrot);
    foxtrot = foxtrot.colors;
    foxtrot = foxtrot.HEADER_SECONDARY;
    verify['color'] = foxtrot;
    foxtrot = oscar[offset];
    foxtrot = yankee.bind(entity)(foxtrot);
    foxtrot = foxtrot.spacing;
    foxtrot = foxtrot.PX_8;
    verify['marginTop'] = foxtrot;
    foxtrot = oscar[offset];
    foxtrot = yankee.bind(entity)(foxtrot);
    foxtrot = foxtrot.spacing;
    foxtrot = foxtrot.PX_24;
    verify['marginBottom'] = foxtrot;
    foxtrot = oscar[offset];
    foxtrot = yankee.bind(entity)(foxtrot);
    foxtrot = foxtrot.spacing;
    foxtrot = foxtrot.PX_4;
    verify['marginHorizontal'] = foxtrot;
    verify['textAlign'] = romeo;
    tango['text'] = verify;
    verify = {};
    romeo = oscar[offset];
    romeo = yankee.bind(entity)(romeo);
    romeo = romeo.spacing;
    romeo = romeo.PX_12;
    verify['gap'] = romeo;
    offset = oscar[offset];
    offset = yankee.bind(entity)(offset);
    offset = offset.spacing;
    offset = offset.PX_8;
    offset = -offset;
    verify['marginBottom'] = offset;
    tango['buttonsContainer'] = verify;
    tango = golf.bind(options)(tango);
    var _closure1_slot10 = tango;
    tango = 18;
    tango = oscar[tango];
    oscar = report.bind(entity)(tango);
    report = oscar.fileFinishedImporting;
    tango = 'modules/self_mod/shared/native/ConfirmBlockUserAlert.tsx';
    tango = report.bind(oscar)(tango);
    mike = function(argFoo) { // Original name: ConfirmBlockUserAlert
        _fun79603: for(var _fun79603_ip = 0; ; ) switch(_fun79603_ip) {
 0:
            mike = argFoo;
            result = mike.userId;
            var _closure2_slot0 = result;
            entity = mike.channelId;
            var _closure2_slot1 = entity;
            yankee = mike.description;
            oscar = mike.onCancel;
            var _closure2_slot2 = oscar;
            backup = mike.onClose;
            var _closure2_slot3 = backup;
            foxtrot = mike.onBlockAndReport;
            var _closure2_slot4 = foxtrot;
            zulu = mike.onBlock;
            var _closure2_slot5 = zulu;
            update = mike.blockButtonVariant;
            mike = _closure1_slot10;
            tango = undefined;
            verify = mike.bind(tango)();
            golf = _closure1_slot0;
            offset = _closure1_slot2;
            mike = 8;
            mike = offset[mike];
            sizing = golf.bind(tango)(mike);
            kilo = sizing.useStateFromStores;
            mike = _closure1_slot5;
            options = new Array(1);
            options[0] = mike;
            mike = function() {
                zulu = _closure1_slot5;
                mike = zulu.getUser;
                entity = _closure2_slot0;
                entity = mike.bind(zulu)(entity);
                return entity;
            };
            output = kilo.bind(sizing)(options, mike);
            mike = 9;
            mike = offset[mike];
            options = golf.bind(tango)(mike);
            mike = options.useLastChannelMessage;
            kilo = mike.bind(options)(entity);
            var _closure2_slot6 = kilo;
            mike = _closure1_slot1;
            options = 10;
            options = offset[options];
            sizing = mike.bind(tango)(options);
            options = sizing.useName;
            control = options.bind(sizing)(output);
            options = _closure1_slot3;
            output = options.useCallback;
            sizing = new Array(2);
            sizing[0] = result;
            sizing[1] = entity;
            entity = function() {
                tango = _closure1_slot1;
                oscar = _closure1_slot2;
                entity = 11;
                mike = oscar[entity];
                entity = undefined;
                options = tango.bind(entity)(mike);
                golf = options.addRelationship;
                zulu = {};
                report = _closure2_slot0;
                zulu['userId'] = report;
                offset = {};
                yankee = _closure1_slot6;
                offset['location'] = yankee;
                zulu['context'] = offset;
                verify = _closure1_slot7;
                verify = verify.BLOCKED;
                zulu['type'] = verify;
                zulu = golf.bind(options)(zulu);
                zulu = 12;
                zulu = oscar[zulu];
                tango = tango.bind(entity)(zulu);
                zulu = tango.showBlockSuccessToast;
                mike = _closure2_slot1;
                mike = zulu.bind(tango)(report, mike);
                return entity;
            };
            entity = output.bind(options)(entity, sizing);
            var _closure2_slot7 = entity;
            output = options.useCallback;
            sizing = new Array(2);
            sizing[0] = backup;
            sizing[1] = oscar;
            oscar = function() {
                zulu = _closure2_slot3;
                entity = undefined;
                zulu = zulu.bind(entity)();
                mike = _closure2_slot2;
                mike = mike.bind(entity)();
                return entity;
            };
            oscar = output.bind(options)(oscar, sizing);
            var _closure2_slot8 = oscar;
            sizing = options.useCallback;
            oscar = new Array(3);
            oscar[0] = backup;
            oscar[1] = entity;
            oscar[2] = zulu;
            zulu = function() {
                zulu = _closure2_slot3;
                entity = undefined;
                zulu = zulu.bind(entity)();
                zulu = _closure2_slot7;
                zulu = zulu.bind(entity)();
                mike = _closure2_slot5;
                mike = mike.bind(entity)();
                return entity;
            };
            source = sizing.bind(options)(zulu, oscar);
            oscar = options.useCallback;
            zulu = new Array(4);
            zulu[0] = kilo;
            zulu[1] = backup;
            zulu[2] = entity;
            zulu[3] = foxtrot;
            entity = function() {
                _fun79608: for(var _fun79608_ip = 0; ; ) switch(_fun79608_ip) {
 0:
                    zulu = _closure2_slot3;
                    entity = undefined;
                    zulu = zulu.bind(entity)();
                    zulu = _closure2_slot7;
                    zulu = zulu.bind(entity)();
                    tango = _closure1_slot0;
                    report = _closure1_slot2;
                    zulu = 13;
                    zulu = report[zulu];
                    report = tango.bind(entity)(zulu);
                    tango = report.showReportModalForInappropriateConversationSafetyAlert;
                    zulu = _closure2_slot6;
                    zulu = tango.bind(report)(zulu);
                    tango = _closure2_slot4;
                    zulu = null;
                    if(!(zulu != tango)) { _fun79608_ip = 77; continue _fun79608 }
 69:
                    mike = _closure2_slot4;
                    mike = mike.bind(entity)();
 77:
                    return entity;
                }
            };
            kilo = oscar.bind(options)(entity, zulu);
            zulu = _closure1_slot9;
            entity = 14;
            entity = offset[entity];
            mike = mike.bind(tango)(entity);
            entity = {};
            report = function() { // Original name: renderConfirmButton
                tango = _closure1_slot8;
                options = _closure1_slot0;
                verify = _closure1_slot2;
                entity = 15;
                entity = verify[entity];
                zulu = undefined;
                entity = options.bind(zulu)(entity);
                mike = entity.Button;
                entity = {};
                report = 'lg';
                entity['size'] = report;
                report = _closure2_slot8;
                entity['onPress'] = report;
                report = 16;
                oscar = verify[report];
                oscar = options.bind(zulu)(oscar);
                golf = oscar.intl;
                oscar = golf.string;
                report = verify[report];
                report = options.bind(zulu)(report);
                report = report.t;
                report = report.ETE/oK;
                report = oscar.bind(golf)(report);
                entity['text'] = report;
                report = 'secondary';
                entity['variant'] = report;
                entity = tango.bind(zulu)(mike, entity);
                return entity;
            };
            entity['renderConfirmButton'] = report;
            options = _closure1_slot8;
            oscar = 17;
            report = offset[oscar];
            report = golf.bind(tango)(report);
            backup = report.Text;
            report = {'style': null, 'variant': 'heading-lg/bold', 'color': 'header-primary'};
            sizing = verify.header;
            report['style'] = sizing;
            result = 16;
            sizing = offset[result];
            sizing = golf.bind(tango)(sizing);
            vacuum = sizing.intl;
            echo = vacuum.format;
            sizing = offset[result];
            sizing = golf.bind(tango)(sizing);
            sizing = sizing.t;
            output = sizing.x5pOn5;
            sizing = {};
            sizing['name'] = control;
            sizing = echo.bind(vacuum)(output, sizing);
            report['children'] = sizing;
            backup = options.bind(tango)(backup, report);
            report = new Array(3);
            report[0] = backup;
            oscar = offset[oscar];
            oscar = golf.bind(tango)(oscar);
            golf = oscar.Text;
            oscar = {};
            offset = verify.text;
            oscar['style'] = offset;
            offset = 'text-md/medium';
            oscar['variant'] = offset;
            offset = null;
            if(!(offset == yankee)) { _fun79603_ip = 577; continue _fun79603 }
 518:
            sizing = _closure1_slot0;
            backup = _closure1_slot2;
            output = backup[result];
            output = sizing.bind(tango)(output);
            echo = output.intl;
            output = echo.format;
            backup = backup[result];
            backup = sizing.bind(tango)(backup);
            backup = backup.t;
            sizing = backup.pegItL;
            backup = {};
            backup['name'] = control;
            yankee = output.bind(echo)(sizing, backup);
 577:
            oscar['children'] = yankee;
            oscar = options.bind(tango)(golf, oscar);
            report[1] = oscar;
            options = _closure1_slot9;
            golf = _closure1_slot4;
            oscar = {};
            verify = verify.buttonsContainer;
            oscar['style'] = verify;
            output = _closure1_slot8;
            vacuum = _closure1_slot0;
            echo = _closure1_slot2;
            yankee = 15;
            verify = echo[yankee];
            verify = vacuum.bind(tango)(verify);
            backup = verify.Button;
            verify = {};
            sizing = 'lg';
            verify['size'] = sizing;
            verify['onPress'] = source;
            source = echo[result];
            source = vacuum.bind(tango)(source);
            control = source.intl;
            source = control.string;
            echo = echo[result];
            echo = vacuum.bind(tango)(echo);
            echo = echo.t;
            echo = echo.l4EmaW;
            echo = source.bind(control)(echo);
            verify['text'] = echo;
            source = offset != update;
            echo = 'destructive';
            if(!source) { _fun79603_ip = 719; continue _fun79603 }
 716:
            echo = update;
 719:
            verify['variant'] = echo;
            backup = output.bind(tango)(backup, verify);
            verify = new Array(2);
            verify[0] = backup;
            offset = offset != foxtrot;
            if(!offset) { _fun79603_ip = 843; continue _fun79603 }
 744:
            foxtrot = _closure1_slot8;
            output = _closure1_slot0;
            backup = _closure1_slot2;
            yankee = backup[yankee];
            yankee = output.bind(tango)(yankee);
            romeo = yankee.Button;
            yankee = {};
            yankee['size'] = sizing;
            yankee['onPress'] = kilo;
            kilo = backup[result];
            kilo = output.bind(tango)(kilo);
            sizing = kilo.intl;
            kilo = sizing.string;
            backup = backup[result];
            backup = output.bind(tango)(backup);
            backup = backup.t;
            backup = backup.39O+8P;
            backup = kilo.bind(sizing)(backup);
            yankee['text'] = backup;
            backup = 'secondary';
            yankee['variant'] = backup;
            offset = foxtrot.bind(tango)(romeo, yankee);
 843:
            verify[1] = offset;
            oscar['children'] = verify;
            oscar = options.bind(tango)(golf, oscar);
            report[2] = oscar;
            entity['children'] = report;
            entity = zulu.bind(tango)(mike, entity);
            return entity;
        }
    };
    zulu['default'] = mike;
    return entity;
})();