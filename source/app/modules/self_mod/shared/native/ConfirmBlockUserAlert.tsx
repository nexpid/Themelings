// app/modules/self_mod/shared/native/ConfirmBlockUserAlert.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    report = argBar;
    yankee = argBaz;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    var _closure1_slot1 = yankee;
    var _closure1_slot2 = oscard;
    entity = global;
    option = entity.Object;
    golfie = option.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(option)(zuuluu, entity, tangon);
    entity = 0;
    golfie = oscard[entity];
    tangon = argCor;
    entity = undefined;
    tangon = tangon.bind(entity)(golfie);
    var _closure1_slot3 = tangon;
    tangon = 1;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.View;
    var _closure1_slot4 = tangon;
    tangon = 2;
    tangon = oscard[tangon];
    tangon = yankee.bind(entity)(tangon);
    var _closure1_slot5 = tangon;
    tangon = 3;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.LOCATION_CONTEXT_MOBILE;
    var _closure1_slot6 = tangon;
    tangon = 4;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    golfie = tangon.jsx;
    var _closure1_slot7 = golfie;
    tangon = tangon.jsxs;
    var _closure1_slot8 = tangon;
    tangon = 5;
    tangon = oscard[tangon];
    option = report.bind(entity)(tangon);
    golfie = option.createStyles;
    tangon = {};
    verify = {};
    offset = 6;
    romeon = oscard[offset];
    romeon = yankee.bind(entity)(romeon);
    romeon = romeon.colors;
    romeon = romeon.HEADER_PRIMARY;
    verify['color'] = romeon;
    romeon = 'center';
    verify['textAlign'] = romeon;
    tangon['header'] = verify;
    verify = {};
    foxtra = oscard[offset];
    foxtra = yankee.bind(entity)(foxtra);
    foxtra = foxtra.colors;
    foxtra = foxtra.HEADER_SECONDARY;
    verify['color'] = foxtra;
    foxtra = oscard[offset];
    foxtra = yankee.bind(entity)(foxtra);
    foxtra = foxtra.spacing;
    foxtra = foxtra.PX_8;
    verify['marginTop'] = foxtra;
    foxtra = oscard[offset];
    foxtra = yankee.bind(entity)(foxtra);
    foxtra = foxtra.spacing;
    foxtra = foxtra.PX_24;
    verify['marginBottom'] = foxtra;
    foxtra = oscard[offset];
    foxtra = yankee.bind(entity)(foxtra);
    foxtra = foxtra.spacing;
    foxtra = foxtra.PX_4;
    verify['marginHorizontal'] = foxtra;
    verify['textAlign'] = romeon;
    tangon['text'] = verify;
    verify = {};
    romeon = oscard[offset];
    romeon = yankee.bind(entity)(romeon);
    romeon = romeon.spacing;
    romeon = romeon.PX_12;
    verify['gap'] = romeon;
    offset = oscard[offset];
    offset = yankee.bind(entity)(offset);
    offset = offset.spacing;
    offset = offset.PX_8;
    offset = -offset;
    verify['marginBottom'] = offset;
    tangon['buttonsContainer'] = verify;
    tangon = golfie.bind(option)(tangon);
    var _closure1_slot9 = tangon;
    tangon = 17;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/self_mod/shared/native/ConfirmBlockUserAlert.tsx';
    tangon = report.bind(oscard)(tangon);
    michal = function(argFoo) { // Original name: ConfirmBlockUserAlert
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            michal = argFoo;
            result = michal.userId;
            var _closure2_slot0 = result;
            entity = michal.channelId;
            var _closure2_slot1 = entity;
            yankee = michal.description;
            oscard = michal.onCancel;
            var _closure2_slot2 = oscard;
            backup = michal.onClose;
            var _closure2_slot3 = backup;
            foxtra = michal.onBlockAndReport;
            var _closure2_slot4 = foxtra;
            zuuluu = michal.onBlock;
            var _closure2_slot5 = zuuluu;
            update = michal.blockButtonVariant;
            michal = _closure1_slot9;
            tangon = undefined;
            verify = michal.bind(tangon)();
            golfie = _closure1_slot0;
            offset = _closure1_slot2;
            michal = 7;
            michal = offset[michal];
            sizing = golfie.bind(tangon)(michal);
            kiloes = sizing.useStateFromStores;
            michal = _closure1_slot5;
            option = new Array(1);
            option[0] = michal;
            michal = function() {
                zuuluu = _closure1_slot5;
                michal = zuuluu.getUser;
                entity = _closure2_slot0;
                entity = michal.bind(zuuluu)(entity);
                return entity;
            };
            output = kiloes.bind(sizing)(option, michal);
            michal = 8;
            michal = offset[michal];
            option = golfie.bind(tangon)(michal);
            michal = option.useLastChannelMessage;
            kiloes = michal.bind(option)(entity);
            var _closure2_slot6 = kiloes;
            michal = _closure1_slot1;
            option = 9;
            option = offset[option];
            sizing = michal.bind(tangon)(option);
            option = sizing.useName;
            ctrled = option.bind(sizing)(output);
            option = _closure1_slot3;
            output = option.useCallback;
            sizing = new Array(2);
            sizing[0] = result;
            sizing[1] = entity;
            entity = function() {
                zuuluu = _closure1_slot1;
                michal = _closure1_slot2;
                entity = 10;
                michal = michal[entity];
                entity = undefined;
                report = zuuluu.bind(entity)(michal);
                tangon = report.blockUser;
                zuuluu = _closure2_slot0;
                michal = {};
                oscard = _closure1_slot6;
                michal['location'] = oscard;
                tangon = tangon.bind(report)(zuuluu, michal);
                zuuluu = tangon.then;
                michal = function() {
                    zuuluu = _closure1_slot1;
                    michal = _closure1_slot2;
                    entity = 11;
                    michal = michal[entity];
                    entity = undefined;
                    report = zuuluu.bind(entity)(michal);
                    tangon = report.showBlockSuccessToast;
                    zuuluu = _closure2_slot0;
                    michal = _closure2_slot1;
                    michal = tangon.bind(report)(zuuluu, michal);
                    return entity;
                };
                michal = zuuluu.bind(tangon)(michal);
                return entity;
            };
            entity = output.bind(option)(entity, sizing);
            var _closure2_slot7 = entity;
            output = option.useCallback;
            sizing = new Array(2);
            sizing[0] = backup;
            sizing[1] = oscard;
            oscard = function() {
                zuuluu = _closure2_slot3;
                entity = undefined;
                zuuluu = zuuluu.bind(entity)();
                michal = _closure2_slot2;
                michal = michal.bind(entity)();
                return entity;
            };
            oscard = output.bind(option)(oscard, sizing);
            var _closure2_slot8 = oscard;
            sizing = option.useCallback;
            oscard = new Array(3);
            oscard[0] = backup;
            oscard[1] = entity;
            oscard[2] = zuuluu;
            zuuluu = function() {
                zuuluu = _closure2_slot3;
                entity = undefined;
                zuuluu = zuuluu.bind(entity)();
                zuuluu = _closure2_slot7;
                zuuluu = zuuluu.bind(entity)();
                michal = _closure2_slot5;
                michal = michal.bind(entity)();
                return entity;
            };
            source = sizing.bind(option)(zuuluu, oscard);
            oscard = option.useCallback;
            zuuluu = new Array(4);
            zuuluu[0] = kiloes;
            zuuluu[1] = backup;
            zuuluu[2] = entity;
            zuuluu[3] = foxtra;
            entity = function() {
                _fun00003: for(var _fun00004_ip = 0; ; ) switch(_fun00004_ip) {
 0:
                    zuuluu = _closure2_slot3;
                    entity = undefined;
                    zuuluu = zuuluu.bind(entity)();
                    zuuluu = _closure2_slot7;
                    zuuluu = zuuluu.bind(entity)();
                    tangon = _closure1_slot0;
                    report = _closure1_slot2;
                    zuuluu = 12;
                    zuuluu = report[zuuluu];
                    report = tangon.bind(entity)(zuuluu);
                    tangon = report.showReportModalForInappropriateConversationSafetyAlert;
                    zuuluu = _closure2_slot6;
                    zuuluu = tangon.bind(report)(zuuluu);
                    tangon = _closure2_slot4;
                    zuuluu = null;
                    if(!(zuuluu != tangon)) { _fun00004_ip = 77; continue _fun00003 }
 69:
                    michal = _closure2_slot4;
                    michal = michal.bind(entity)();
 77:
                    return entity;
                }
            };
            kiloes = oscard.bind(option)(entity, zuuluu);
            zuuluu = _closure1_slot8;
            entity = 13;
            entity = offset[entity];
            michal = michal.bind(tangon)(entity);
            entity = {};
            report = function() { // Original name: renderConfirmButton
                tangon = _closure1_slot7;
                option = _closure1_slot0;
                verify = _closure1_slot2;
                entity = 14;
                entity = verify[entity];
                zuuluu = undefined;
                entity = option.bind(zuuluu)(entity);
                michal = entity.Button;
                entity = {};
                report = 'lg';
                entity['size'] = report;
                report = _closure2_slot8;
                entity['onPress'] = report;
                report = 15;
                oscard = verify[report];
                oscard = option.bind(zuuluu)(oscard);
                golfie = oscard.intl;
                oscard = golfie.string;
                report = verify[report];
                report = option.bind(zuuluu)(report);
                report = report.t;
                report = report.ETE/oK;
                report = oscard.bind(golfie)(report);
                entity['text'] = report;
                report = 'secondary';
                entity['variant'] = report;
                entity = tangon.bind(zuuluu)(michal, entity);
                return entity;
            };
            entity['renderConfirmButton'] = report;
            option = _closure1_slot7;
            oscard = 16;
            report = offset[oscard];
            report = golfie.bind(tangon)(report);
            backup = report.Text;
            report = {'style': null, 'variant': 'heading-lg/bold', 'color': 'header-primary'};
            sizing = verify.header;
            report['style'] = sizing;
            result = 15;
            sizing = offset[result];
            sizing = golfie.bind(tangon)(sizing);
            vacuum = sizing.intl;
            echoed = vacuum.format;
            sizing = offset[result];
            sizing = golfie.bind(tangon)(sizing);
            sizing = sizing.t;
            output = sizing.x5pOn5;
            sizing = {};
            sizing['name'] = ctrled;
            sizing = echoed.bind(vacuum)(output, sizing);
            report['children'] = sizing;
            backup = option.bind(tangon)(backup, report);
            report = new Array(3);
            report[0] = backup;
            oscard = offset[oscard];
            oscard = golfie.bind(tangon)(oscard);
            golfie = oscard.Text;
            oscard = {};
            offset = verify.text;
            oscard['style'] = offset;
            offset = 'text-md/medium';
            oscard['variant'] = offset;
            offset = null;
            if(!(offset == yankee)) { _fun00002_ip = 585; continue _fun00001 }
 524:
            sizing = _closure1_slot0;
            backup = _closure1_slot2;
            output = backup[result];
            output = sizing.bind(tangon)(output);
            echoed = output.intl;
            output = echoed.format;
            backup = backup[result];
            backup = sizing.bind(tangon)(backup);
            backup = backup.t;
            sizing = backup.pegItL;
            backup = {};
            backup['name'] = ctrled;
            yankee = output.bind(echoed)(sizing, backup);
 585:
            oscard['children'] = yankee;
            oscard = option.bind(tangon)(golfie, oscard);
            report[1] = oscard;
            option = _closure1_slot8;
            golfie = _closure1_slot4;
            oscard = {};
            verify = verify.buttonsContainer;
            oscard['style'] = verify;
            output = _closure1_slot7;
            vacuum = _closure1_slot0;
            echoed = _closure1_slot2;
            yankee = 14;
            verify = echoed[yankee];
            verify = vacuum.bind(tangon)(verify);
            backup = verify.Button;
            verify = {};
            sizing = 'lg';
            verify['size'] = sizing;
            verify['onPress'] = source;
            source = echoed[result];
            source = vacuum.bind(tangon)(source);
            ctrled = source.intl;
            source = ctrled.string;
            echoed = echoed[result];
            echoed = vacuum.bind(tangon)(echoed);
            echoed = echoed.t;
            echoed = echoed.l4EmaW;
            echoed = source.bind(ctrled)(echoed);
            verify['text'] = echoed;
            source = offset != update;
            echoed = 'destructive';
            if(!source) { _fun00002_ip = 727; continue _fun00001 }
 724:
            echoed = update;
 727:
            verify['variant'] = echoed;
            backup = output.bind(tangon)(backup, verify);
            verify = new Array(2);
            verify[0] = backup;
            offset = offset != foxtra;
            if(!offset) { _fun00002_ip = 853; continue _fun00001 }
 752:
            foxtra = _closure1_slot7;
            output = _closure1_slot0;
            backup = _closure1_slot2;
            yankee = backup[yankee];
            yankee = output.bind(tangon)(yankee);
            romeon = yankee.Button;
            yankee = {};
            yankee['size'] = sizing;
            yankee['onPress'] = kiloes;
            kiloes = backup[result];
            kiloes = output.bind(tangon)(kiloes);
            sizing = kiloes.intl;
            kiloes = sizing.string;
            backup = backup[result];
            backup = output.bind(tangon)(backup);
            backup = backup.t;
            backup = backup.39O+8P;
            backup = kiloes.bind(sizing)(backup);
            yankee['text'] = backup;
            backup = 'secondary';
            yankee['variant'] = backup;
            offset = foxtra.bind(tangon)(romeon, yankee);
 853:
            verify[1] = offset;
            oscard['children'] = verify;
            oscard = option.bind(tangon)(golfie, oscard);
            report[2] = oscard;
            entity['children'] = report;
            entity = zuuluu.bind(tangon)(michal, entity);
            return entity;
        }
    };
    zuuluu['default'] = michal;
    return entity;
})();