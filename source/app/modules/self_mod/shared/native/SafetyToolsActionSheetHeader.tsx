// app/modules/self_mod/shared/native/SafetyToolsActionSheetHeader.tsx
export default (function(argFoo, argBar, argBaz, argCorge, _, argFred, argPlugh) {
    report = argBar;
    zulu = argFred;
    oscar = argPlugh;
    var _closure1_slot0 = report;
    var _closure1_slot1 = oscar;
    entity = global;
    options = entity.Object;
    golf = options.defineProperty;
    tango = {};
    entity = true;
    tango['value'] = entity;
    entity = '__esModule';
    entity = golf.bind(options)(zulu, entity, tango);
    entity = 0;
    golf = oscar[entity];
    tango = argCorge;
    entity = undefined;
    tango = tango.bind(entity)(golf);
    var _closure1_slot2 = tango;
    tango = 1;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.View;
    var _closure1_slot3 = tango;
    tango = 2;
    golf = oscar[tango];
    golf = report.bind(entity)(golf);
    golf = golf.jsx;
    var _closure1_slot4 = golf;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.jsxs;
    var _closure1_slot5 = tango;
    tango = 3;
    tango = oscar[tango];
    options = report.bind(entity)(tango);
    golf = options.createStyles;
    tango = {};
    verify = {'display': 'flex', 'flexDirection': 'row', 'justifyContent': 'center'};
    tango['navbarContainer'] = verify;
    verify = {};
    offset = 'absolute';
    verify['position'] = offset;
    offset = 4;
    yankee = oscar[offset];
    offset = argBaz;
    offset = offset.bind(entity)(yankee);
    offset = offset.spacing;
    offset = offset.PX_16;
    verify['left'] = offset;
    tango['navbarLeft'] = verify;
    tango = golf.bind(options)(tango);
    var _closure1_slot6 = tango;
    tango = 8;
    tango = oscar[tango];
    oscar = report.bind(entity)(tango);
    report = oscar.fileFinishedImporting;
    tango = 'modules/self_mod/shared/native/SafetyToolsActionSheetHeader.tsx';
    tango = report.bind(oscar)(tango);
    mike = function(argFoo) { // Original name: SafetyToolsActionSheetHeader
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            zulu = argFoo;
            verify = zulu.title;
            foxtrot = zulu.channelId;
            var _closure2_slot0 = foxtrot;
            romeo = zulu.recipientId;
            var _closure2_slot1 = romeo;
            yankee = zulu.warningId;
            var _closure2_slot2 = yankee;
            mike = zulu.warningType;
            var _closure2_slot3 = mike;
            options = zulu.hasBackButton;
            zulu = _closure1_slot6;
            tango = undefined;
            golf = zulu.bind(tango)();
            var _closure2_slot4 = golf;
            report = _closure1_slot2;
            offset = report.useCallback;
            zulu = new Array(4);
            zulu[0] = foxtrot;
            zulu[1] = romeo;
            zulu[2] = yankee;
            zulu[3] = mike;
            mike = function() {
                zulu = _closure1_slot0;
                mike = _closure1_slot1;
                entity = 5;
                mike = mike[entity];
                entity = undefined;
                golf = zulu.bind(entity)(mike);
                oscar = golf.openSafetyToolsActionSheet;
                yankee = _closure2_slot0;
                offset = _closure2_slot1;
                verify = _closure2_slot2;
                options = _closure2_slot3;
                romeo = golf;
                mike = romeo[oscar](yankee, offset, verify, options, golf);
                return entity;
            };
            offset = offset.bind(report)(mike, zulu);
            var _closure2_slot5 = offset;
            zulu = report.useMemo;
            mike = new Array(2);
            mike[0] = offset;
            offset = golf.navbarLeft;
            mike[1] = offset;
            entity = function() {
                zulu = _closure1_slot0;
                tango = _closure1_slot1;
                mike = 6;
                mike = tango[mike];
                tango = undefined;
                oscar = zulu.bind(tango)(mike);
                zulu = oscar.getHeaderBackButton;
                mike = _closure2_slot5;
                zulu = zulu.bind(oscar)(mike);
                mike = _closure1_slot4;
                entity = {};
                report = _closure2_slot4;
                report = report.navbarLeft;
                entity['style'] = report;
                entity = mike.bind(tango)(zulu, entity);
                return entity;
            };
            report = zulu.bind(report)(entity, mike);
            zulu = _closure1_slot5;
            mike = _closure1_slot3;
            entity = {};
            golf = golf.navbarContainer;
            entity['style'] = golf;
            golf = null;
            golf = golf != options;
            if(!golf) { _fun00002_ip = 182; continue _fun00001 }
 179:
            golf = report;
 182:
            report = new Array(2);
            report[0] = golf;
            options = _closure1_slot4;
            golf = _closure1_slot0;
            offset = _closure1_slot1;
            oscar = 7;
            oscar = offset[oscar];
            oscar = golf.bind(tango)(oscar);
            golf = oscar.Text;
            oscar = {'variant': 'heading-lg/bold', 'color': 'header-primary'};
            oscar['children'] = verify;
            oscar = options.bind(tango)(golf, oscar);
            report[1] = oscar;
            entity['children'] = report;
            entity = zulu.bind(tango)(mike, entity);
            return entity;
        }
    };
    zulu['default'] = mike;
    return entity;
})();