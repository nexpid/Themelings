// app/modules/calls/mediaEngineContextFromParticipantType.tsx
export default (function(argFoo, argBar, _, __, ___, argFre, argPlu) {
    report = argBar;
    zuuluu = argFre;
    oscard = argPlu;
    tangon = global;
    verify = tangon.Object;
    option = verify.defineProperty;
    golfie = {};
    entity = true;
    golfie['value'] = entity;
    entity = '__esModule';
    entity = option.bind(verify)(zuuluu, entity, golfie);
    entity = 0;
    golfie = oscard[entity];
    entity = undefined;
    golfie = report.bind(entity)(golfie);
    offset = golfie.ParticipantTypes;
    golfie = 1;
    golfie = oscard[golfie];
    golfie = report.bind(entity)(golfie);
    verify = golfie.MediaEngineContextTypes;
    option = tangon.Object;
    golfie = option.freeze;
    tangon = {};
    romeon = offset.STREAM;
    yankee = verify.STREAM;
    tangon[romeon] = yankee;
    romeon = offset.HIDDEN_STREAM;
    yankee = verify.STREAM;
    tangon[romeon] = yankee;
    romeon = offset.USER;
    yankee = verify.DEFAULT;
    tangon[romeon] = yankee;
    offset = offset.ACTIVITY;
    verify = verify.DEFAULT;
    tangon[offset] = verify;
    tangon = golfie.bind(option)(tangon);
    var _closure1_slot0 = tangon;
    tangon = 2;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/calls/mediaEngineContextFromParticipantType.tsx';
    tangon = report.bind(oscard)(tangon);
    michal = function(argFoo) { // Original name: mediaEngineContextFromParticipantType
        michal = _closure1_slot0;
        entity = argFoo;
        entity = michal[entity];
        return entity;
    };
    zuuluu['default'] = michal;
    return entity;
})();