// app/modules/haptics/HapticFeedbackTypes.tsx
export default (function(_, argBar, __, ___, ____, argFre, argPlu) {
    zuuluu = argFre;
    entity = global;
    report = entity.Object;
    tangon = report.defineProperty;
    michal = {};
    entity = true;
    michal['value'] = entity;
    entity = '__esModule';
    entity = tangon.bind(report)(zuuluu, entity, michal);
    michal = {};
    tangon = 0;
    michal['IMPACT_LIGHT'] = tangon;
    entity = 'IMPACT_LIGHT';
    michal[tangon] = entity;
    report = 1;
    michal['IMPACT_MEDIUM'] = report;
    entity = 'IMPACT_MEDIUM';
    michal[report] = entity;
    report = 2;
    michal['IMPACT_HEAVY'] = report;
    entity = 'IMPACT_HEAVY';
    michal[report] = entity;
    report = 3;
    michal['NOTIFICATION_ERROR'] = report;
    entity = 'NOTIFICATION_ERROR';
    michal[report] = entity;
    report = 4;
    michal['DRAG_AND_DROP_START'] = report;
    entity = 'DRAG_AND_DROP_START';
    michal[report] = entity;
    report = 5;
    michal['DRAG_AND_DROP_END'] = report;
    entity = 'DRAG_AND_DROP_END';
    michal[report] = entity;
    report = 6;
    michal['DRAG_AND_DROP_MOVE'] = report;
    entity = 'DRAG_AND_DROP_MOVE';
    michal[report] = entity;
    entity = argPlu;
    report = entity[tangon];
    tangon = argBar;
    entity = undefined;
    oscard = tangon.bind(entity)(report);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/haptics/HapticFeedbackTypes.tsx';
    tangon = report.bind(oscard)(tangon);
    zuuluu['default'] = michal;
    return entity;
})();