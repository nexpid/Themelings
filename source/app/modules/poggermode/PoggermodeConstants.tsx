// app/modules/poggermode/PoggermodeConstants.tsx
export default (function(argFoo, argBar, _, __, ___, argFred, argPlugh) {
    zulu = argFred;
    mike = global;
    golf = mike.Object;
    oscar = golf.defineProperty;
    report = {};
    tango = true;
    report['value'] = tango;
    tango = '__esModule';
    tango = oscar.bind(golf)(zulu, tango, report);
    golf = {};
    options = 0;
    golf['CHAT_INPUT'] = options;
    tango = 'CHAT_INPUT';
    golf[options] = tango;
    yankee = 1;
    golf['REACTION'] = yankee;
    report = 'REACTION';
    golf[yankee] = report;
    offset = 2;
    golf['MEMBER_USER'] = offset;
    report = 'MEMBER_USER';
    golf[offset] = report;
    verify = 3;
    golf['CALL_TILE'] = verify;
    report = 'CALL_TILE';
    golf[verify] = report;
    oscar = {};
    oscar['CHAT_INPUT'] = options;
    oscar[options] = tango;
    oscar['VOICE_USER'] = yankee;
    tango = 'VOICE_USER';
    oscar[yankee] = tango;
    oscar['MENTION'] = offset;
    tango = 'MENTION';
    oscar[offset] = tango;
    report = {};
    report['LEVEL_1'] = options;
    tango = 'LEVEL_1';
    report[options] = tango;
    report['LEVEL_2'] = yankee;
    tango = 'LEVEL_2';
    report[yankee] = tango;
    report['LEVEL_3'] = offset;
    tango = 'LEVEL_3';
    report[offset] = tango;
    report['LEVEL_4'] = verify;
    tango = 'LEVEL_4';
    report[verify] = tango;
    verify = 4;
    report['LEVEL_5'] = verify;
    tango = 'LEVEL_5';
    report[verify] = tango;
    offset = {};
    verify = report.LEVEL_1;
    tango = new Array(8);
    yankee = [1, 0.0001];
    tango[0] = yankee;
    yankee = [25, 0.05];
    tango[1] = yankee;
    yankee = [50, 0.1];
    tango[2] = yankee;
    yankee = [100, 0.5];
    tango[3] = yankee;
    yankee = [250, 1];
    tango[4] = yankee;
    yankee = [500, 2];
    tango[5] = yankee;
    yankee = [1000, 3];
    tango[6] = yankee;
    yankee = [9001, 4];
    tango[7] = yankee;
    offset[verify] = tango;
    verify = report.LEVEL_2;
    tango = new Array(8);
    yankee = [1, 0.0001];
    tango[0] = yankee;
    yankee = [25, 0.25];
    tango[1] = yankee;
    yankee = [50, 0.5];
    tango[2] = yankee;
    yankee = [100, 1];
    tango[3] = yankee;
    yankee = [250, 2.5];
    tango[4] = yankee;
    yankee = [500, 5];
    tango[5] = yankee;
    yankee = [1000, 7.5];
    tango[6] = yankee;
    yankee = [9001, 10];
    tango[7] = yankee;
    offset[verify] = tango;
    verify = report.LEVEL_3;
    tango = new Array(8);
    yankee = [1, 0.001];
    tango[0] = yankee;
    yankee = [25, 0.5];
    tango[1] = yankee;
    yankee = [50, 1];
    tango[2] = yankee;
    yankee = [100, 2];
    tango[3] = yankee;
    yankee = [250, 4];
    tango[4] = yankee;
    yankee = [500, 8];
    tango[5] = yankee;
    yankee = [1000, 12];
    tango[6] = yankee;
    yankee = [9001, 16];
    tango[7] = yankee;
    offset[verify] = tango;
    verify = report.LEVEL_4;
    tango = new Array(8);
    yankee = [1, 0.25];
    tango[0] = yankee;
    yankee = [25, 0.75];
    tango[1] = yankee;
    yankee = [50, 1];
    tango[2] = yankee;
    yankee = [100, 2];
    tango[3] = yankee;
    yankee = [250, 4];
    tango[4] = yankee;
    yankee = [500, 8];
    tango[5] = yankee;
    yankee = [1000, 20];
    tango[6] = yankee;
    yankee = [9001, 50];
    tango[7] = yankee;
    offset[verify] = tango;
    verify = report.LEVEL_5;
    tango = new Array(8);
    yankee = [1, 0.001];
    tango[0] = yankee;
    yankee = [25, 0.5];
    tango[1] = yankee;
    yankee = [50, 1];
    tango[2] = yankee;
    yankee = [100, 2];
    tango[3] = yankee;
    yankee = [250, 5];
    tango[4] = yankee;
    yankee = [500, 10];
    tango[5] = yankee;
    yankee = [1000, 100];
    tango[6] = yankee;
    yankee = [9001, 10000];
    tango[7] = yankee;
    offset[verify] = tango;
    var _closure1_slot0 = offset;
    verify = mike.Object;
    tango = verify.keys;
    romeo = tango.bind(verify)(offset);
    yankee = romeo.reduce;
    verify = {};
    foxtrot = report.LEVEL_1;
    tango = new Array(0);
    verify[foxtrot] = tango;
    foxtrot = report.LEVEL_2;
    tango = new Array(0);
    verify[foxtrot] = tango;
    foxtrot = report.LEVEL_3;
    tango = new Array(0);
    verify[foxtrot] = tango;
    foxtrot = report.LEVEL_4;
    tango = new Array(0);
    verify[foxtrot] = tango;
    foxtrot = report.LEVEL_5;
    tango = new Array(0);
    verify[foxtrot] = tango;
    tango = function(argFoo, argBar) {
        zulu = argBar;
        entity = {};
        oscar = argFoo;
        golf = entity;
        mike = copyDataProperties(golf, oscar);
        mike = _closure1_slot0;
        report = mike[zulu];
        tango = report.map;
        mike = function(argFoo) {
            _fun66852: for(var _fun66852_ip = 0; ; ) switch(_fun66852_ip) {
 0:
                entity = argFoo;
                mike = entity[Symbol.iterator];
                entity = mike().next;
                tango = entity().value;
                zulu = mike;
                entity = undefined;
                zulu = zulu === entity;
                if(zulu) { _fun66852_ip = 25; continue _fun66852 }
 22:
                entity = tango;
 25:
                if(zulu) { _fun66852_ip = 31; continue _fun66852 }
 28:
                mike.return();
 31:
                return entity;
            }
        };
        mike = tango.bind(report)(mike);
        entity[zulu] = mike;
        return entity;
    };
    tango = yankee.bind(romeo)(tango, verify);
    verify = mike.Object;
    mike = verify.keys;
    offset = mike.bind(verify)(offset);
    verify = offset.reduce;
    mike = {};
    romeo = report.LEVEL_1;
    yankee = new Array(0);
    mike[romeo] = yankee;
    romeo = report.LEVEL_2;
    yankee = new Array(0);
    mike[romeo] = yankee;
    romeo = report.LEVEL_3;
    yankee = new Array(0);
    mike[romeo] = yankee;
    romeo = report.LEVEL_4;
    yankee = new Array(0);
    mike[romeo] = yankee;
    romeo = report.LEVEL_5;
    yankee = new Array(0);
    mike[romeo] = yankee;
    entity = function(argFoo, argBar) {
        zulu = argBar;
        entity = {};
        oscar = argFoo;
        golf = entity;
        mike = copyDataProperties(golf, oscar);
        mike = _closure1_slot0;
        report = mike[zulu];
        tango = report.map;
        mike = function(argFoo) {
            _fun66854: for(var _fun66854_ip = 0; ; ) switch(_fun66854_ip) {
 0:
                tango = argFoo;
                mike = tango[Symbol.iterator];
                tango = mike().next;
                entity = tango().value;
                entity = mike;
                oscar = undefined;
                zulu = entity === oscar;
                entity = undefined;
                if(zulu) { _fun66854_ip = 49; continue _fun66854 }
 24:
                report = tango().value;
                tango = mike;
                tango = tango === oscar;
                entity = undefined;
                zulu = tango;
                if(tango) { _fun66854_ip = 49; continue _fun66854 }
 43:
                entity = report;
                zulu = tango;
 49:
                if(zulu) { _fun66854_ip = 55; continue _fun66854 }
 52:
                mike.return();
 55:
                return entity;
            }
        };
        mike = tango.bind(report)(mike);
        entity[zulu] = mike;
        return entity;
    };
    mike = verify.bind(offset)(entity, mike);
    entity = argPlugh;
    verify = entity[options];
    options = argBar;
    entity = undefined;
    offset = options.bind(entity)(verify);
    verify = offset.fileFinishedImporting;
    options = 'modules/poggermode/PoggermodeConstants.tsx';
    options = verify.bind(offset)(options);
    zulu['ConfettiLocation'] = golf;
    zulu['ShakeLocation'] = oscar;
    zulu['ShakeLevel'] = report;
    zulu['SHAKE_STEPS'] = tango;
    zulu['SHAKE_STEP_DIVIDER'] = mike;
    return entity;
})();