// app/modules/poggermode/PoggermodeConstants.tsx
export default (function(global, require, metroImportDefault, metroImportAll, moduleObject, exports, dependencyMap) {
    var3 = exports;
    var2 = global;
    var7 = var2.Object;
    var6 = var7.defineProperty;
    var5 = {};
    var4 = true;
    var5['value'] = var4;
    var4 = '__esModule';
    var4 = var6.bind(var7)(var3, var4, var5);
    var7 = {};
    var8 = 0;
    var7['CHAT_INPUT'] = var8;
    var4 = 'CHAT_INPUT';
    var7[var8] = var4;
    var11 = 1;
    var7['REACTION'] = var11;
    var5 = 'REACTION';
    var7[var11] = var5;
    var10 = 2;
    var7['MEMBER_USER'] = var10;
    var5 = 'MEMBER_USER';
    var7[var10] = var5;
    var9 = 3;
    var7['CALL_TILE'] = var9;
    var5 = 'CALL_TILE';
    var7[var9] = var5;
    var6 = {};
    var6['CHAT_INPUT'] = var8;
    var6[var8] = var4;
    var6['VOICE_USER'] = var11;
    var4 = 'VOICE_USER';
    var6[var11] = var4;
    var6['MENTION'] = var10;
    var4 = 'MENTION';
    var6[var10] = var4;
    var5 = {};
    var5['LEVEL_1'] = var8;
    var4 = 'LEVEL_1';
    var5[var8] = var4;
    var5['LEVEL_2'] = var11;
    var4 = 'LEVEL_2';
    var5[var11] = var4;
    var5['LEVEL_3'] = var10;
    var4 = 'LEVEL_3';
    var5[var10] = var4;
    var5['LEVEL_4'] = var9;
    var4 = 'LEVEL_4';
    var5[var9] = var4;
    var9 = 4;
    var5['LEVEL_5'] = var9;
    var4 = 'LEVEL_5';
    var5[var9] = var4;
    var10 = {};
    var9 = var5.LEVEL_1;
    var4 = new Array(8);
    var11 = [1, 0.0001];
    var4[0] = var11;
    var11 = [25, 0.05];
    var4[1] = var11;
    var11 = [50, 0.1];
    var4[2] = var11;
    var11 = [100, 0.5];
    var4[3] = var11;
    var11 = [250, 1];
    var4[4] = var11;
    var11 = [500, 2];
    var4[5] = var11;
    var11 = [1000, 3];
    var4[6] = var11;
    var11 = [9001, 4];
    var4[7] = var11;
    var10[var9] = var4;
    var9 = var5.LEVEL_2;
    var4 = new Array(8);
    var11 = [1, 0.0001];
    var4[0] = var11;
    var11 = [25, 0.25];
    var4[1] = var11;
    var11 = [50, 0.5];
    var4[2] = var11;
    var11 = [100, 1];
    var4[3] = var11;
    var11 = [250, 2.5];
    var4[4] = var11;
    var11 = [500, 5];
    var4[5] = var11;
    var11 = [1000, 7.5];
    var4[6] = var11;
    var11 = [9001, 10];
    var4[7] = var11;
    var10[var9] = var4;
    var9 = var5.LEVEL_3;
    var4 = new Array(8);
    var11 = [1, 0.001];
    var4[0] = var11;
    var11 = [25, 0.5];
    var4[1] = var11;
    var11 = [50, 1];
    var4[2] = var11;
    var11 = [100, 2];
    var4[3] = var11;
    var11 = [250, 4];
    var4[4] = var11;
    var11 = [500, 8];
    var4[5] = var11;
    var11 = [1000, 12];
    var4[6] = var11;
    var11 = [9001, 16];
    var4[7] = var11;
    var10[var9] = var4;
    var9 = var5.LEVEL_4;
    var4 = new Array(8);
    var11 = [1, 0.25];
    var4[0] = var11;
    var11 = [25, 0.75];
    var4[1] = var11;
    var11 = [50, 1];
    var4[2] = var11;
    var11 = [100, 2];
    var4[3] = var11;
    var11 = [250, 4];
    var4[4] = var11;
    var11 = [500, 8];
    var4[5] = var11;
    var11 = [1000, 20];
    var4[6] = var11;
    var11 = [9001, 50];
    var4[7] = var11;
    var10[var9] = var4;
    var9 = var5.LEVEL_5;
    var4 = new Array(8);
    var11 = [1, 0.001];
    var4[0] = var11;
    var11 = [25, 0.5];
    var4[1] = var11;
    var11 = [50, 1];
    var4[2] = var11;
    var11 = [100, 2];
    var4[3] = var11;
    var11 = [250, 5];
    var4[4] = var11;
    var11 = [500, 10];
    var4[5] = var11;
    var11 = [1000, 100];
    var4[6] = var11;
    var11 = [9001, 10000];
    var4[7] = var11;
    var10[var9] = var4;
    var _closure1_slot0 = var10;
    var9 = var2.Object;
    var4 = var9.keys;
    var12 = var4.bind(var9)(var10);
    var11 = var12.reduce;
    var9 = {};
    var13 = var5.LEVEL_1;
    var4 = new Array(0);
    var9[var13] = var4;
    var13 = var5.LEVEL_2;
    var4 = new Array(0);
    var9[var13] = var4;
    var13 = var5.LEVEL_3;
    var4 = new Array(0);
    var9[var13] = var4;
    var13 = var5.LEVEL_4;
    var4 = new Array(0);
    var9[var13] = var4;
    var13 = var5.LEVEL_5;
    var4 = new Array(0);
    var9[var13] = var4;
    var4 = function(arg1, arg2) {
        var3 = arg2;
        var1 = {};
        var6 = arg1;
        var7 = var1;
        var2 = copyDataProperties(var7, var6);
        var2 = _closure1_slot0;
        var5 = var2[var3];
        var4 = var5.map;
        var2 = function(arg1) {
            _fun0001: for(var _fun0001_ip = 0; ; ) switch(_fun0001_ip) {
 0:
                var1 = arg1;
                var2 = var1[Symbol.iterator];
                var1 = var2().next;
                var4 = var1().value;
                var3 = var2;
                var1 = undefined;
                var3 = var3 === var1;
                if(var3) { _fun0001_ip = 25; continue _fun0001 }
 22:
                var1 = var4;
 25:
                if(var3) { _fun0001_ip = 31; continue _fun0001 }
 28:
                var2.return();
 31:
                return var1;
            }
        };
        var2 = var4.bind(var5)(var2);
        var1[var3] = var2;
        return var1;
    };
    var4 = var11.bind(var12)(var4, var9);
    var9 = var2.Object;
    var2 = var9.keys;
    var10 = var2.bind(var9)(var10);
    var9 = var10.reduce;
    var2 = {};
    var12 = var5.LEVEL_1;
    var11 = new Array(0);
    var2[var12] = var11;
    var12 = var5.LEVEL_2;
    var11 = new Array(0);
    var2[var12] = var11;
    var12 = var5.LEVEL_3;
    var11 = new Array(0);
    var2[var12] = var11;
    var12 = var5.LEVEL_4;
    var11 = new Array(0);
    var2[var12] = var11;
    var12 = var5.LEVEL_5;
    var11 = new Array(0);
    var2[var12] = var11;
    var1 = function(arg1, arg2) {
        var3 = arg2;
        var1 = {};
        var6 = arg1;
        var7 = var1;
        var2 = copyDataProperties(var7, var6);
        var2 = _closure1_slot0;
        var5 = var2[var3];
        var4 = var5.map;
        var2 = function(arg1) {
            _fun0002: for(var _fun0002_ip = 0; ; ) switch(_fun0002_ip) {
 0:
                var4 = arg1;
                var2 = var4[Symbol.iterator];
                var4 = var2().next;
                var1 = var4().value;
                var1 = var2;
                var6 = undefined;
                var3 = var1 === var6;
                var1 = undefined;
                if(var3) { _fun0002_ip = 49; continue _fun0002 }
 24:
                var5 = var4().value;
                var4 = var2;
                var4 = var4 === var6;
                var1 = undefined;
                var3 = var4;
                if(var4) { _fun0002_ip = 49; continue _fun0002 }
 43:
                var1 = var5;
                var3 = var4;
 49:
                if(var3) { _fun0002_ip = 55; continue _fun0002 }
 52:
                var2.return();
 55:
                return var1;
            }
        };
        var2 = var4.bind(var5)(var2);
        var1[var3] = var2;
        return var1;
    };
    var2 = var9.bind(var10)(var1, var2);
    var1 = dependencyMap;
    var9 = var1[var8];
    var8 = require;
    var1 = undefined;
    var10 = var8.bind(var1)(var9);
    var9 = var10.fileFinishedImporting;
    var8 = 'modules/poggermode/PoggermodeConstants.tsx';
    var8 = var9.bind(var10)(var8);
    var3['ConfettiLocation'] = var7;
    var3['ShakeLocation'] = var6;
    var3['ShakeLevel'] = var5;
    var3['SHAKE_STEPS'] = var4;
    var3['SHAKE_STEP_DIVIDER'] = var2;
    return var1;
})();