// app/modules/quarantine/native/QuarantineModeInfoAlert.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    report = argBar;
    yankee = argBaz;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    var _closure1_slot1 = yankee;
    var _closure1_slot2 = oscard;
    entity = global;
    option = entity.Object;
    golfie = option.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(option)(zuuluu, entity, tangon);
    entity = 0;
    golfie = oscard[entity];
    tangon = argCor;
    entity = undefined;
    tangon = tangon.bind(entity)(golfie);
    tangon = 1;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    offset = tangon.Fonts;
    tangon = 2;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    golfie = tangon.jsx;
    var _closure1_slot3 = golfie;
    tangon = tangon.jsxs;
    var _closure1_slot4 = tangon;
    tangon = 3;
    tangon = oscard[tangon];
    option = report.bind(entity)(tangon);
    golfie = option.createStyles;
    tangon = {};
    verify = {};
    romeon = 4;
    romeon = oscard[romeon];
    foxtra = yankee.bind(entity)(romeon);
    romeon = offset.PRIMARY_BOLD;
    offset = 5;
    offset = oscard[offset];
    offset = yankee.bind(entity)(offset);
    offset = offset.colors;
    yankee = offset.HEADER_PRIMARY;
    offset = 24;
    kiloes = foxtra.bind(entity)(romeon, yankee, offset);
    sizing = verify;
    offset = copyDataProperties(sizing, kiloes);
    yankee = 'center';
    offset = 'textAlign';
    verify[offset] = yankee;
    yankee = 12;
    offset = 'marginVertical';
    verify[offset] = yankee;
    tangon['header'] = verify;
    verify = {'textAlign': 'center', 'marginVertical': 8};
    tangon['text'] = verify;
    tangon = golfie.bind(option)(tangon);
    var _closure1_slot5 = tangon;
    tangon = 10;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/quarantine/native/QuarantineModeInfoAlert.tsx';
    tangon = report.bind(oscard)(tangon);
    michal = function(argFoo) { // Original name: _default
        entity = argFoo;
        report = entity.onClose;
        entity = _closure1_slot5;
        tangon = undefined;
        offset = entity.bind(tangon)();
        zuuluu = _closure1_slot4;
        oscard = _closure1_slot1;
        foxtra = _closure1_slot2;
        entity = 6;
        entity = foxtra[entity];
        michal = oscard.bind(tangon)(entity);
        entity = {};
        entity['onClose'] = report;
        option = _closure1_slot3;
        report = 7;
        report = foxtra[report];
        oscard = oscard.bind(tangon)(report);
        report = {};
        verify = offset.header;
        report['style'] = verify;
        romeon = _closure1_slot0;
        verify = 8;
        golfie = foxtra[verify];
        golfie = romeon.bind(tangon)(golfie);
        backup = golfie.intl;
        yankee = backup.string;
        golfie = foxtra[verify];
        golfie = romeon.bind(tangon)(golfie);
        golfie = golfie.t;
        golfie = golfie.EouHws;
        golfie = yankee.bind(backup)(golfie);
        report['children'] = golfie;
        oscard = option.bind(tangon)(oscard, report);
        report = new Array(2);
        report[0] = oscard;
        oscard = 9;
        oscard = foxtra[oscard];
        oscard = romeon.bind(tangon)(oscard);
        golfie = oscard.Text;
        oscard = {};
        offset = offset.text;
        oscard['style'] = offset;
        offset = 'text-md/medium';
        oscard['variant'] = offset;
        offset = foxtra[verify];
        offset = romeon.bind(tangon)(offset);
        yankee = offset.intl;
        offset = yankee.string;
        verify = foxtra[verify];
        verify = romeon.bind(tangon)(verify);
        verify = verify.t;
        verify = verify.zNPBMD;
        verify = offset.bind(yankee)(verify);
        oscard['children'] = verify;
        oscard = option.bind(tangon)(golfie, oscard);
        report[1] = oscard;
        entity['children'] = report;
        entity = zuuluu.bind(tangon)(michal, entity);
        return entity;
    };
    zuuluu['default'] = michal;
    return entity;
})();