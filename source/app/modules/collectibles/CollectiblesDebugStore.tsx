// app/modules/collectibles/CollectiblesDebugStore.tsx
export default (function(global, require, metroImportDefault, metroImportAll, moduleObject, exports, dependencyMap) {
    var6 = require;
    var3 = exports;
    var7 = dependencyMap;
    var1 = global;
    var8 = var1.Object;
    var5 = var8.defineProperty;
    var4 = {};
    var1 = true;
    var4['value'] = var1;
    var1 = '__esModule';
    var1 = var5.bind(var8)(var3, var1, var4);
    var1 = 0;
    var4 = var7[var1];
    var1 = undefined;
    var8 = var6.bind(var1)(var4);
    var5 = var8.create;
    var4 = function(arg1) {
        var1 = arg1;
        var _closure2_slot0 = var1;
        var1 = {};
        var3 = new Array(0);
        var1['logs'] = var3;
        var3 = function addLog(arg1) {
            var2 = arg1;
            var _closure3_slot0 = var2;
            var3 = _closure2_slot0;
            var2 = undefined;
            var1 = function(arg1) {
                var1 = {};
                var2 = arg1;
                var10 = var2.logs;
                var2 = new Array(1);
                var6 = 0;
                var11 = var2;
                var9 = 0;
                var4 = arraySpread(var11, var10, var9);
                var3 = global;
                var5 = var3.Date;
                var7 = var5.prototype;
                var7 = Object.create(var7, {constructor: {value: var5}});
                var12 = var7;
                var5 = new var12[var5](var11);
                var7 = var5 instanceof Object ? var5 : var7;
                var5 = var7.toISOString;
                var8 = var5.bind(var7)();
                var7 = var8.split;
                var5 = 'T';
                var5 = var7.bind(var8)(var5);
                var8 = var5[var6];
                var7 = _closure3_slot0;
                var3 = var3.HermesInternal;
                var6 = var3.concat;
                var5 = '[';
                var3 = '] ';
                var3 = var6.bind(var5)(var8, var3, var7);
                var2[var4] = var3;
                var3 = 1;
                var3 = var4 + var3;
                var1['logs'] = var2;
                return var1;
            };
            var1 = var3.bind(var2)(var1);
            return var1;
        };
        var1['addLog'] = var3;
        var2 = function clearLogs() {
            var3 = _closure2_slot0;
            var2 = {};
            var1 = new Array(0);
            var2['logs'] = var1;
            var1 = undefined;
            var1 = var3.bind(var1)(var2);
            return var1;
        };
        var1['clearLogs'] = var2;
        return var1;
    };
    var4 = var5.bind(var8)(var4);
    var _closure1_slot0 = var4;
    var5 = 1;
    var5 = var7[var5];
    var7 = var6.bind(var1)(var5);
    var6 = var7.fileFinishedImporting;
    var5 = 'modules/collectibles/CollectiblesDebugStore.tsx';
    var5 = var6.bind(var7)(var5);
    var3['useCollectiblesDebugStore'] = var4;
    var2 = function(arg1) {
        var1 = global;
        var2 = var1.Date;
        var3 = var2.prototype;
        var3 = Object.create(var3, {constructor: {value: var2}});
        var11 = var3;
        var2 = new var11[var2](var10);
        var5 = var2 instanceof Object ? var2 : var3;
        var4 = var5.toLocaleTimeString;
        var3 = {};
        var2 = false;
        var3['hour12'] = var2;
        var2 = 'en-US';
        var7 = var4.bind(var5)(var2, var3);
        var3 = _closure1_slot0;
        var2 = var3.getState;
        var3 = var2.bind(var3)();
        var2 = var3.addLog;
        var1 = var1.HermesInternal;
        var6 = var1.concat;
        var5 = '[';
        var4 = '] ';
        var1 = arg1;
        var1 = var6.bind(var5)(var7, var4, var1);
        var1 = var2.bind(var3)(var1);
        var1 = undefined;
        return var1;
    };
    var3['addDebugLog'] = var2;
    return var1;
})();