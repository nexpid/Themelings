// app/modules/collectibles/native/BundleSample.tsx
export default (function(argFoo, argBar, argBaz, _, __, argFre, argPlu) {
    report = argBar;
    zuuluu = argFre;
    oscard = argPlu;
    entity = argBaz;
    var _closure1_slot0 = entity;
    var _closure1_slot1 = oscard;
    entity = global;
    option = entity.Object;
    golfie = option.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(option)(zuuluu, entity, tangon);
    entity = 0;
    tangon = oscard[entity];
    entity = undefined;
    tangon = report.bind(entity)(tangon);
    tangon = tangon.View;
    var _closure1_slot2 = tangon;
    tangon = 1;
    golfie = oscard[tangon];
    golfie = report.bind(entity)(golfie);
    golfie = golfie.jsx;
    var _closure1_slot3 = golfie;
    golfie = oscard[tangon];
    golfie = report.bind(entity)(golfie);
    golfie = golfie.Fragment;
    var _closure1_slot4 = golfie;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.jsxs;
    var _closure1_slot5 = tangon;
    tangon = 2;
    tangon = oscard[tangon];
    option = report.bind(entity)(tangon);
    golfie = option.createStyles;
    tangon = {};
    verify = {'position': 'absolute', 'top': 12, 'left': 20, 'width': 75, 'height': 115, 'transform': null, 'alignItems': 'flex-start', 'justifyContent': 'flex-start', 'flexDirection': 'column', 'zIndex': 0};
    yankee = {};
    offset = '-8deg';
    yankee['rotate'] = offset;
    offset = new Array(1);
    offset[0] = yankee;
    verify['transform'] = offset;
    tangon['pfx'] = verify;
    verify = {'position': 'absolute', 'top': 34, 'left': 72, 'transform': null, 'zIndex': 1, 'alignItems': 'center', 'justifyContent': 'center'};
    yankee = {};
    offset = '8deg';
    yankee['rotate'] = offset;
    offset = new Array(1);
    offset[0] = yankee;
    verify['transform'] = offset;
    tangon['avatar'] = verify;
    tangon = golfie.bind(option)(tangon);
    var _closure1_slot6 = tangon;
    tangon = 5;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/collectibles/native/BundleSample.tsx';
    tangon = report.bind(oscard)(tangon);
    michal = function(argFoo) { // Original name: _default
        entity = argFoo;
        foxtra = entity.isPurchased;
        romeon = entity.deco;
        output = entity.pfx;
        sizing = entity.condensed;
        yankee = entity.isDarkTheme;
        entity = _closure1_slot6;
        tangon = undefined;
        verify = entity.bind(tangon)();
        zuuluu = _closure1_slot5;
        michal = _closure1_slot4;
        entity = {};
        option = _closure1_slot3;
        golfie = _closure1_slot2;
        report = {};
        backup = verify.pfx;
        offset = new Array(1);
        offset[0] = backup;
        report['style'] = offset;
        offset = _closure1_slot0;
        backup = _closure1_slot1;
        oscard = 3;
        oscard = backup[oscard];
        kiloes = offset.bind(tangon)(oscard);
        oscard = {};
        oscard['item'] = output;
        oscard['isPurchased'] = foxtra;
        oscard['condensed'] = sizing;
        oscard['isDarkTheme'] = yankee;
        yankee = true;
        oscard['bundle'] = yankee;
        oscard = option.bind(tangon)(kiloes, oscard);
        report['children'] = oscard;
        oscard = option.bind(tangon)(golfie, report);
        report = new Array(2);
        report[0] = oscard;
        oscard = {};
        kiloes = verify.avatar;
        verify = new Array(1);
        verify[0] = kiloes;
        oscard['style'] = verify;
        verify = 4;
        verify = backup[verify];
        offset = offset.bind(tangon)(verify);
        verify = {};
        verify['isPurchased'] = foxtra;
        verify['item'] = romeon;
        romeon = 70;
        verify['size'] = romeon;
        verify['bundle'] = yankee;
        verify = option.bind(tangon)(offset, verify);
        oscard['children'] = verify;
        oscard = option.bind(tangon)(golfie, oscard);
        report[1] = oscard;
        entity['children'] = report;
        entity = zuuluu.bind(tangon)(michal, entity);
        return entity;
    };
    zuuluu['default'] = michal;
    return entity;
})();