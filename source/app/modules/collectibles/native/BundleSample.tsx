// app/modules/collectibles/native/BundleSample.tsx
export default (function(argFoo, argBar, argBaz, _, __, argFred, argPlugh) {
    report = argBar;
    zulu = argFred;
    oscar = argPlugh;
    entity = argBaz;
    var _closure1_slot0 = entity;
    var _closure1_slot1 = oscar;
    entity = global;
    options = entity.Object;
    golf = options.defineProperty;
    tango = {};
    entity = true;
    tango['value'] = entity;
    entity = '__esModule';
    entity = golf.bind(options)(zulu, entity, tango);
    entity = 0;
    tango = oscar[entity];
    entity = undefined;
    tango = report.bind(entity)(tango);
    tango = tango.View;
    var _closure1_slot2 = tango;
    tango = 1;
    golf = oscar[tango];
    golf = report.bind(entity)(golf);
    golf = golf.jsx;
    var _closure1_slot3 = golf;
    golf = oscar[tango];
    golf = report.bind(entity)(golf);
    golf = golf.Fragment;
    var _closure1_slot4 = golf;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.jsxs;
    var _closure1_slot5 = tango;
    tango = 2;
    tango = oscar[tango];
    options = report.bind(entity)(tango);
    golf = options.createStyles;
    tango = {};
    verify = {'position': 'absolute', 'top': 12, 'left': 20, 'width': 75, 'height': 115, 'transform': null, 'alignItems': 'flex-start', 'justifyContent': 'flex-start', 'flexDirection': 'column', 'zIndex': 0};
    yankee = {};
    offset = '-8deg';
    yankee['rotate'] = offset;
    offset = new Array(1);
    offset[0] = yankee;
    verify['transform'] = offset;
    tango['pfx'] = verify;
    verify = {'position': 'absolute', 'top': 34, 'left': 72, 'transform': null, 'zIndex': 1, 'alignItems': 'center', 'justifyContent': 'center'};
    yankee = {};
    offset = '8deg';
    yankee['rotate'] = offset;
    offset = new Array(1);
    offset[0] = yankee;
    verify['transform'] = offset;
    tango['avatar'] = verify;
    tango = golf.bind(options)(tango);
    var _closure1_slot6 = tango;
    tango = 5;
    tango = oscar[tango];
    oscar = report.bind(entity)(tango);
    report = oscar.fileFinishedImporting;
    tango = 'modules/collectibles/native/BundleSample.tsx';
    tango = report.bind(oscar)(tango);
    mike = function(argFoo) { // Original name: _default
        entity = argFoo;
        foxtrot = entity.isPurchased;
        romeo = entity.deco;
        output = entity.pfx;
        sizing = entity.condensed;
        yankee = entity.isDarkTheme;
        entity = _closure1_slot6;
        tango = undefined;
        verify = entity.bind(tango)();
        zulu = _closure1_slot5;
        mike = _closure1_slot4;
        entity = {};
        options = _closure1_slot3;
        golf = _closure1_slot2;
        report = {};
        backup = verify.pfx;
        offset = new Array(1);
        offset[0] = backup;
        report['style'] = offset;
        offset = _closure1_slot0;
        backup = _closure1_slot1;
        oscar = 3;
        oscar = backup[oscar];
        kilo = offset.bind(tango)(oscar);
        oscar = {};
        oscar['item'] = output;
        oscar['isPurchased'] = foxtrot;
        oscar['condensed'] = sizing;
        oscar['isDarkTheme'] = yankee;
        yankee = true;
        oscar['bundle'] = yankee;
        oscar = options.bind(tango)(kilo, oscar);
        report['children'] = oscar;
        oscar = options.bind(tango)(golf, report);
        report = new Array(2);
        report[0] = oscar;
        oscar = {};
        kilo = verify.avatar;
        verify = new Array(1);
        verify[0] = kilo;
        oscar['style'] = verify;
        verify = 4;
        verify = backup[verify];
        offset = offset.bind(tango)(verify);
        verify = {};
        verify['isPurchased'] = foxtrot;
        verify['item'] = romeo;
        romeo = 70;
        verify['size'] = romeo;
        verify['bundle'] = yankee;
        verify = options.bind(tango)(offset, verify);
        oscar['children'] = verify;
        oscar = options.bind(tango)(golf, oscar);
        report[1] = oscar;
        entity['children'] = report;
        entity = zulu.bind(tango)(mike, entity);
        return entity;
    };
    zulu['default'] = mike;
    return entity;
})();