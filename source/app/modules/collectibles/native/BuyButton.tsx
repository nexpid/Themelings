// app/modules/collectibles/native/BuyButton.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    report = argBar;
    yankee = argBaz;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    var _closure1_slot1 = yankee;
    var _closure1_slot2 = oscard;
    entity = global;
    option = entity.Object;
    golfie = option.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(option)(zuuluu, entity, tangon);
    entity = 0;
    tangon = oscard[entity];
    entity = undefined;
    tangon = yankee.bind(entity)(tangon);
    var _closure1_slot3 = tangon;
    tangon = 1;
    golfie = oscard[tangon];
    tangon = argCor;
    tangon = tangon.bind(entity)(golfie);
    tangon = 2;
    tangon = oscard[tangon];
    tangon = yankee.bind(entity)(tangon);
    var _closure1_slot4 = tangon;
    tangon = 3;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.MarketingURLs;
    var _closure1_slot5 = tangon;
    tangon = 4;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    golfie = tangon.jsx;
    var _closure1_slot6 = golfie;
    golfie = tangon.Fragment;
    var _closure1_slot7 = golfie;
    tangon = tangon.jsxs;
    var _closure1_slot8 = tangon;
    tangon = 5;
    tangon = oscard[tangon];
    option = report.bind(entity)(tangon);
    golfie = option.createStyles;
    tangon = {};
    verify = {};
    offset = 6;
    offset = oscard[offset];
    offset = yankee.bind(entity)(offset);
    offset = offset.radii;
    offset = offset.round;
    verify['borderRadius'] = offset;
    tangon['button'] = verify;
    offset = 0.5;
    verify = {'opacity': 0.5, 'marginTop': 4};
    tangon['disclaimer'] = verify;
    verify = {};
    verify['opacity'] = offset;
    tangon['disclaimerCondensed'] = verify;
    verify = {};
    offset = 40;
    verify['height'] = offset;
    tangon['unlockWithNitroButton'] = verify;
    tangon = golfie.bind(option)(tangon);
    var _closure1_slot9 = tangon;
    tangon = 21;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/collectibles/native/BuyButton.tsx';
    tangon = report.bind(oscard)(tangon);
    michal = function(argFoo) { // Original name: _default
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            michal = argFoo;
            entity = michal.product;
            var _closure2_slot0 = entity;
            update = michal.analyticsLocations;
            result = michal.onBuy;
            sizing = michal.condensed;
            michal = _closure1_slot9;
            tangon = undefined;
            option = michal.bind(tangon)();
            backup = _closure1_slot0;
            kiloes = _closure1_slot2;
            michal = 7;
            michal = kiloes[michal];
            zuuluu = backup.bind(tangon)(michal);
            michal = zuuluu.useCurrentUser;
            report = michal.bind(zuuluu)();
            michal = 8;
            michal = kiloes[michal];
            zuuluu = backup.bind(tangon)(michal);
            michal = zuuluu.useProductPurchaseState;
            michal = michal.bind(zuuluu)(entity);
            romeon = michal.isPurchased;
            foxtra = michal.isPartiallyOwnedBundle;
            michal = 9;
            michal = kiloes[michal];
            offset = backup.bind(tangon)(michal);
            verify = offset.useStateFromStoresArray;
            michal = _closure1_slot4;
            golfie = new Array(1);
            golfie[0] = michal;
            zuuluu = new Array(1);
            zuuluu[0] = entity;
            michal = function() {
                entity = _closure1_slot4;
                zuuluu = entity.isClaiming;
                entity = _closure2_slot0;
                michal = entity.skuId;
                entity = new Array(1);
                michal = zuuluu === michal;
                entity[0] = michal;
                return entity;
            };
            golfie = verify.bind(offset)(golfie, michal, zuuluu);
            zuuluu = _closure1_slot3;
            michal = 1;
            zuuluu = zuuluu.bind(tangon)(golfie, michal);
            michal = 0;
            offset = zuuluu[michal];
            output = _closure1_slot1;
            michal = 10;
            michal = kiloes[michal];
            zuuluu = output.bind(tangon)(michal);
            michal = zuuluu.canUseCollectibles;
            michal = michal.bind(zuuluu)(report);
            report = 11;
            zuuluu = kiloes[report];
            golfie = backup.bind(tangon)(zuuluu);
            zuuluu = golfie.isPremiumCollectiblesProduct;
            zuuluu = zuuluu.bind(golfie)(entity);
            report = kiloes[report];
            golfie = backup.bind(tangon)(report);
            report = golfie.isFreeCollectiblesProduct;
            yankee = report.bind(golfie)(entity);
            report = 12;
            report = kiloes[report];
            verify = backup.bind(tangon)(report);
            golfie = verify.useHandleUseNow;
            report = {};
            report['product'] = entity;
            golfie = golfie.bind(verify)(report);
            report = golfie.handleUseNow;
            golfie = golfie.isApplying;
            verify = 13;
            verify = kiloes[verify];
            output = output.bind(tangon)(verify);
            verify = {};
            verify['product'] = entity;
            verify['analyticsLocations'] = update;
            verify['onBuy'] = result;
            verify = output.bind(tangon)(verify);
            output = verify.handleBuyNow;
            result = verify.isBuying;
            verify = 14;
            verify = kiloes[verify];
            kiloes = backup.bind(tangon)(verify);
            backup = kiloes.useHandleClaim;
            verify = {};
            verify['product'] = entity;
            verify = backup.bind(kiloes)(verify);
            verify = verify.handleClaim;
            if(romeon) { _fun00002_ip = 1095; continue _fun00001 }
 382:
            if(!zuuluu) { _fun00002_ip = 452; continue _fun00001 }
 385:
            if(michal) { _fun00002_ip = 452; continue _fun00001 }
 388:
            if(yankee) { _fun00002_ip = 452; continue _fun00001 }
 391:
            kiloes = _closure1_slot6;
            backup = _closure1_slot0;
            update = _closure1_slot2;
            romeon = 17;
            romeon = update[romeon];
            romeon = backup.bind(tangon)(romeon);
            backup = romeon.UnlockWithNitroButton;
            romeon = {};
            echoed = function() { // Original name: text
                tangon = _closure1_slot6;
                option = _closure1_slot0;
                verify = _closure1_slot2;
                entity = 18;
                entity = verify[entity];
                zuuluu = undefined;
                entity = option.bind(zuuluu)(entity);
                michal = entity.Text;
                entity = {'variant': 'text-sm/semibold', 'color': 'interactive-active'};
                report = 16;
                oscard = verify[report];
                oscard = option.bind(zuuluu)(oscard);
                golfie = oscard.intl;
                oscard = golfie.string;
                report = verify[report];
                report = option.bind(zuuluu)(report);
                report = report.t;
                report = report.sEAnVF;
                report = oscard.bind(golfie)(report);
                entity['children'] = report;
                entity = tangon.bind(zuuluu)(michal, entity);
                return entity;
            };
            romeon['text'] = echoed;
            echoed = option.unlockWithNitroButton;
            romeon['style'] = echoed;
            romeon = kiloes.bind(tangon)(backup, romeon);
            return romeon;
 452:
            if(yankee) { _fun00002_ip = 985; continue _fun00001 }
 458:
            if(!zuuluu) { _fun00002_ip = 467; continue _fun00001 }
 461:
            if(michal) { _fun00002_ip = 985; continue _fun00001 }
 467:
            zuuluu = entity.type;
            romeon = _closure1_slot0;
            michal = _closure1_slot2;
            yankee = 19;
            michal = michal[yankee];
            michal = romeon.bind(tangon)(michal);
            michal = michal.CollectiblesItemType;
            michal = michal.PROFILE_EFFECT;
            if(!(zuuluu !== michal)) { _fun00002_ip = 667; continue _fun00001 }
 511:
            michal = entity.type;
            zuuluu = _closure1_slot0;
            entity = _closure1_slot2;
            entity = entity[yankee];
            entity = zuuluu.bind(tangon)(entity);
            entity = entity.CollectiblesItemType;
            entity = entity.BUNDLE;
            if(!(michal !== entity)) { _fun00002_ip = 608; continue _fun00001 }
 549:
            yankee = _closure1_slot0;
            romeon = _closure1_slot2;
            entity = 16;
            michal = romeon[entity];
            michal = yankee.bind(tangon)(michal);
            zuuluu = michal.intl;
            michal = zuuluu.string;
            entity = romeon[entity];
            entity = yankee.bind(tangon)(entity);
            entity = entity.t;
            entity = entity.AQ0Ven;
            echoed = michal.bind(zuuluu)(entity);
            _fun00002_ip = 665; continue _fun00001;
 608:
            yankee = _closure1_slot0;
            romeon = _closure1_slot2;
            entity = 16;
            michal = romeon[entity];
            michal = yankee.bind(tangon)(michal);
            zuuluu = michal.intl;
            michal = zuuluu.string;
            entity = romeon[entity];
            entity = yankee.bind(tangon)(entity);
            entity = entity.t;
            entity = entity.V1AWw8;
            echoed = michal.bind(zuuluu)(entity);
 665:
            _fun00002_ip = 724; continue _fun00001;
 667:
            yankee = _closure1_slot0;
            romeon = _closure1_slot2;
            entity = 16;
            michal = romeon[entity];
            michal = yankee.bind(tangon)(michal);
            zuuluu = michal.intl;
            michal = zuuluu.string;
            entity = romeon[entity];
            entity = yankee.bind(tangon)(entity);
            entity = entity.t;
            entity = entity.kAeDcH;
            echoed = michal.bind(zuuluu)(entity);
 724:
            zuuluu = _closure1_slot8;
            michal = _closure1_slot7;
            entity = {};
            backup = _closure1_slot6;
            romeon = _closure1_slot1;
            kiloes = _closure1_slot2;
            yankee = 15;
            yankee = kiloes[yankee];
            romeon = romeon.bind(tangon)(yankee);
            yankee = {};
            update = option.button;
            yankee['style'] = update;
            yankee['loading'] = result;
            yankee['text'] = echoed;
            yankee['onPress'] = output;
            yankee['disabled'] = foxtra;
            romeon = backup.bind(tangon)(romeon, yankee);
            yankee = new Array(2);
            yankee[0] = romeon;
            foxtra = _closure1_slot0;
            romeon = 20;
            romeon = kiloes[romeon];
            romeon = foxtra.bind(tangon)(romeon);
            foxtra = romeon.TextWithIOSLinkWorkaround;
            romeon = {};
            if(sizing) { _fun00002_ip = 836; continue _fun00001 }
 828:
            kiloes = option.disclaimer;
            _fun00002_ip = 842; continue _fun00001;
 836:
            kiloes = option.disclaimerCondensed;
 842:
            romeon['style'] = kiloes;
            kiloes = 'text-xs/normal';
            if(!sizing) { _fun00002_ip = 861; continue _fun00001 }
 855:
            kiloes = 'text-xxs/normal';
 861:
            romeon['variant'] = kiloes;
            kiloes = 'interactive-active';
            romeon['color'] = kiloes;
            sizing = _closure1_slot0;
            update = _closure1_slot2;
            kiloes = 16;
            output = update[kiloes];
            output = sizing.bind(tangon)(output);
            result = output.intl;
            output = result.format;
            kiloes = update[kiloes];
            kiloes = sizing.bind(tangon)(kiloes);
            kiloes = kiloes.t;
            sizing = kiloes.zFXJX1;
            kiloes = {};
            kiloes['buyButtonLabel'] = echoed;
            echoed = _closure1_slot5;
            echoed = echoed.PAID_TERMS;
            kiloes['paidServiceTermURL'] = echoed;
            kiloes = output.bind(result)(sizing, kiloes);
            romeon['children'] = kiloes;
            romeon = backup.bind(tangon)(foxtra, romeon);
            yankee[1] = romeon;
            entity['children'] = yankee;
            entity = zuuluu.bind(tangon)(michal, entity);
            return entity;
 985:
            zuuluu = _closure1_slot6;
            michal = _closure1_slot1;
            kiloes = _closure1_slot2;
            entity = 15;
            entity = kiloes[entity];
            michal = michal.bind(tangon)(entity);
            entity = {};
            yankee = option.button;
            entity['style'] = yankee;
            backup = _closure1_slot0;
            yankee = 16;
            romeon = kiloes[yankee];
            romeon = backup.bind(tangon)(romeon);
            foxtra = romeon.intl;
            romeon = foxtra.string;
            yankee = kiloes[yankee];
            yankee = backup.bind(tangon)(yankee);
            yankee = yankee.t;
            yankee = yankee.zp6caG;
            yankee = romeon.bind(foxtra)(yankee);
            entity['text'] = yankee;
            entity['loading'] = offset;
            entity['onPress'] = verify;
            entity = zuuluu.bind(tangon)(michal, entity);
            return entity;
 1095:
            zuuluu = _closure1_slot6;
            michal = _closure1_slot1;
            offset = _closure1_slot2;
            entity = 15;
            entity = offset[entity];
            michal = michal.bind(tangon)(entity);
            entity = {};
            option = option.button;
            entity['style'] = option;
            entity['loading'] = golfie;
            verify = _closure1_slot0;
            oscard = 16;
            golfie = offset[oscard];
            golfie = verify.bind(tangon)(golfie);
            option = golfie.intl;
            golfie = option.string;
            oscard = offset[oscard];
            oscard = verify.bind(tangon)(oscard);
            oscard = oscard.t;
            oscard = oscard.MAS7uL;
            oscard = golfie.bind(option)(oscard);
            entity['text'] = oscard;
            entity['onPress'] = report;
            entity = zuuluu.bind(tangon)(michal, entity);
            return entity;
        }
    };
    zuuluu['default'] = michal;
    return entity;
})();