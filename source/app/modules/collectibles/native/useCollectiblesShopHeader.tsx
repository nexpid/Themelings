// app/modules/collectibles/native/useCollectiblesShopHeader.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    report = argBar;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    entity = argBaz;
    var _closure1_slot1 = entity;
    var _closure1_slot2 = oscard;
    entity = global;
    option = entity.Object;
    golfie = option.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(option)(zuuluu, entity, tangon);
    entity = 0;
    golfie = oscard[entity];
    tangon = argCor;
    entity = undefined;
    tangon = tangon.bind(entity)(golfie);
    var _closure1_slot3 = tangon;
    tangon = 1;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    golfie = tangon.Image;
    var _closure1_slot4 = golfie;
    tangon = tangon.View;
    var _closure1_slot5 = tangon;
    tangon = 2;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    golfie = tangon.jsx;
    var _closure1_slot6 = golfie;
    tangon = tangon.jsxs;
    var _closure1_slot7 = tangon;
    tangon = 3;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.LOGO_ASPECT_RATIO;
    yankee = 45;
    offset = yankee * tangon;
    tangon = 4;
    tangon = oscard[tangon];
    option = report.bind(entity)(tangon);
    golfie = option.createStyles;
    tangon = {};
    verify = {};
    romeon = 15;
    verify['paddingHorizontal'] = romeon;
    tangon['headerContainer'] = verify;
    verify = {'flexDirection': 'row', 'alignItems': 'center', 'gap': 8, 'marginBottom': 10};
    tangon['headerTitle'] = verify;
    verify = {};
    verify['height'] = yankee;
    verify['width'] = offset;
    tangon['discordLogo'] = verify;
    tangon = golfie.bind(option)(tangon);
    var _closure1_slot8 = tangon;
    tangon = function(argFoo) { // Original name: CollectiblesShopHeader
        michal = argFoo;
        foxtra = michal.navigation;
        verify = michal.onClose;
        option = _closure1_slot1;
        sizing = _closure1_slot2;
        michal = 5;
        michal = sizing[michal];
        tangon = undefined;
        michal = option.bind(tangon)(michal);
        oscard = michal.bind(tangon)();
        var _closure2_slot0 = oscard;
        michal = _closure1_slot8;
        offset = michal.bind(tangon)();
        michal = 6;
        michal = sizing[michal];
        michal = option.bind(tangon)(michal);
        michal = michal.bind(tangon)();
        golfie = michal.top;
        report = _closure1_slot3;
        zuuluu = report.useMemo;
        michal = new Array(1);
        michal[0] = oscard;
        entity = function() {
            _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
                zuuluu = _closure1_slot0;
                tangon = _closure1_slot2;
                entity = 7;
                entity = tangon[entity];
                tangon = undefined;
                report = zuuluu.bind(tangon)(entity);
                zuuluu = report.isThemeDark;
                entity = _closure2_slot0;
                entity = zuuluu.bind(report)(entity);
                zuuluu = _closure1_slot1;
                report = _closure1_slot2;
                if(entity) { _fun00002_ip = 68; continue _fun00001 }
 54:
                entity = 9;
                entity = report[entity];
                entity = zuuluu.bind(tangon)(entity);
                _fun00002_ip = 80; continue _fun00001;
 68:
                michal = 8;
                michal = report[michal];
                entity = zuuluu.bind(tangon)(michal);
 80:
                return entity;
            }
        };
        yankee = zuuluu.bind(report)(entity, michal);
        zuuluu = _closure1_slot6;
        michal = _closure1_slot5;
        entity = {};
        report = {};
        output = offset.headerContainer;
        result = report;
        oscard = copyDataProperties(result, output);
        oscard = 'paddingTop';
        report[oscard] = golfie;
        entity['style'] = report;
        oscard = _closure1_slot7;
        report = {};
        golfie = offset.headerTitle;
        report['style'] = golfie;
        golfie = 10;
        golfie = sizing[golfie];
        option = option.bind(tangon)(golfie);
        golfie = {};
        golfie['navigation'] = foxtra;
        golfie['onPress'] = verify;
        option = zuuluu.bind(tangon)(option, golfie);
        golfie = new Array(2);
        golfie[0] = option;
        verify = _closure1_slot4;
        option = {'accessible': true, 'accessibilityLabel': null, 'accessibilityRole': 'header', 'source': null, 'style': null, 'resizeMode': 'contain'};
        kiloes = _closure1_slot0;
        romeon = 11;
        foxtra = sizing[romeon];
        foxtra = kiloes.bind(tangon)(foxtra);
        backup = foxtra.intl;
        foxtra = backup.string;
        romeon = sizing[romeon];
        romeon = kiloes.bind(tangon)(romeon);
        romeon = romeon.t;
        romeon = romeon.5upuq6;
        romeon = foxtra.bind(backup)(romeon);
        option['accessibilityLabel'] = romeon;
        option['source'] = yankee;
        offset = offset.discordLogo;
        option['style'] = offset;
        option = zuuluu.bind(tangon)(verify, option);
        golfie[1] = option;
        report['children'] = golfie;
        report = oscard.bind(tangon)(michal, report);
        entity['children'] = report;
        entity = zuuluu.bind(tangon)(michal, entity);
        return entity;
    };
    var _closure1_slot9 = tangon;
    tangon = 13;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/collectibles/native/useCollectiblesShopHeader.tsx';
    tangon = report.bind(oscard)(tangon);
    michal = function() { // Original name: _default
        _fun00003: for(var _fun00004_ip = 0; ; ) switch(_fun00004_ip) {
 0:
            zuuluu = arguments[0];
            entity = undefined;
            if(!(zuuluu === entity)) { _fun00004_ip = 13; continue _fun00003 }
 11:
            zuuluu = {};
 13:
            oscard = zuuluu.onClose;
            var _closure2_slot0 = oscard;
            var _closure2_slot1 = entity;
            report = _closure1_slot0;
            golfie = _closure1_slot2;
            tangon = 12;
            tangon = golfie[tangon];
            report = report.bind(entity)(tangon);
            tangon = report.useNativeStackNavigation;
            golfie = tangon.bind(report)();
            _closure2_slot1 = golfie;
            report = _closure1_slot3;
            tangon = report.useEffect;
            zuuluu = new Array(2);
            zuuluu[0] = golfie;
            zuuluu[1] = oscard;
            michal = function() {
                tangon = _closure2_slot1;
                zuuluu = tangon.setOptions;
                michal = {};
                report = function() { // Original name: header
                    tangon = _closure1_slot6;
                    zuuluu = _closure1_slot9;
                    michal = {};
                    report = _closure2_slot1;
                    michal['navigation'] = report;
                    entity = _closure2_slot0;
                    michal['onClose'] = entity;
                    entity = undefined;
                    entity = tangon.bind(entity)(zuuluu, michal);
                    return entity;
                };
                michal['header'] = report;
                report = true;
                michal['headerTransparent'] = report;
                michal = zuuluu.bind(tangon)(michal);
                entity = function() {
                    tangon = _closure2_slot1;
                    zuuluu = tangon.setOptions;
                    michal = {};
                    entity = undefined;
                    michal['header'] = entity;
                    michal = zuuluu.bind(tangon)(michal);
                    return entity;
                };
                return entity;
            };
            michal = tangon.bind(report)(michal, zuuluu);
            return entity;
        }
    };
    zuuluu['default'] = michal;
    return entity;
})();