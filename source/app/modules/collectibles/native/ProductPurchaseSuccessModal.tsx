// app/modules/collectibles/native/ProductPurchaseSuccessModal.tsx
export default (function(argFoo, argBar, argBaz, argCorge, _, argFred, argPlugh) {
    report = argBar;
    options = argBaz;
    zulu = argFred;
    oscar = argPlugh;
    var _closure1_slot0 = report;
    var _closure1_slot1 = options;
    var _closure1_slot2 = oscar;
    entity = global;
    verify = entity.Object;
    golf = verify.defineProperty;
    tango = {};
    entity = true;
    tango['value'] = entity;
    entity = '__esModule';
    entity = golf.bind(verify)(zulu, entity, tango);
    entity = 0;
    tango = oscar[entity];
    entity = undefined;
    tango = options.bind(entity)(tango);
    var _closure1_slot3 = tango;
    backup = 1;
    tango = oscar[backup];
    tango = options.bind(entity)(tango);
    var _closure1_slot4 = tango;
    tango = 2;
    golf = oscar[tango];
    tango = argCorge;
    tango = tango.bind(entity)(golf);
    var _closure1_slot5 = tango;
    tango = 3;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    golf = tango.View;
    var _closure1_slot6 = golf;
    tango = tango.useWindowDimensions;
    var _closure1_slot7 = tango;
    tango = 4;
    tango = oscar[tango];
    tango = options.bind(entity)(tango);
    var _closure1_slot8 = tango;
    tango = 5;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.VerticalGradient;
    var _closure1_slot9 = tango;
    tango = 6;
    golf = oscar[tango];
    golf = report.bind(entity)(golf);
    golf = golf.jsx;
    var _closure1_slot10 = golf;
    golf = oscar[tango];
    golf = report.bind(entity)(golf);
    golf = golf.Fragment;
    var _closure1_slot11 = golf;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.jsxs;
    var _closure1_slot12 = tango;
    verify = 7;
    tango = oscar[verify];
    romeo = report.bind(entity)(tango);
    yankee = romeo.createStyles;
    offset = {};
    kilo = {'width': 32, 'height': 32, 'tintColor': null, 'marginHorizontal': 16, 'opacity': 0.8};
    tango = 32;
    foxtrot = 8;
    golf = oscar[foxtrot];
    golf = options.bind(entity)(golf);
    golf = golf.colors;
    golf = golf.HEADER_PRIMARY;
    kilo['tintColor'] = golf;
    golf = 16;
    offset['closeButton'] = kilo;
    offset = yankee.bind(romeo)(offset);
    var _closure1_slot13 = offset;
    verify = oscar[verify];
    yankee = report.bind(entity)(verify);
    offset = yankee.createStyles;
    verify = {};
    romeo = {};
    romeo['flex'] = backup;
    verify['backdrop'] = romeo;
    romeo = {};
    romeo['flex'] = backup;
    verify['main'] = romeo;
    romeo = {};
    romeo['flex'] = backup;
    verify['root'] = romeo;
    romeo = {'position': 'absolute', 'backgroundColor': null, 'top': 0, 'bottom': 0, 'left': 0, 'right': 0};
    backup = oscar[foxtrot];
    backup = options.bind(entity)(backup);
    backup = backup.colors;
    backup = backup.BLACK;
    romeo['backgroundColor'] = backup;
    verify['curtain'] = romeo;
    romeo = {'flex': 1, 'flexDirection': 'column', 'justifyContent': 'center'};
    verify['body'] = romeo;
    romeo = {'flex': 1, 'flexDirection': 'row', 'justifyContent': 'center', 'alignItems': 'center', 'overflow': 'hidden'};
    verify['preview'] = romeo;
    romeo = {};
    backup = '10%';
    romeo['marginTop'] = backup;
    verify['previewAvatarDeco'] = romeo;
    romeo = {'height': '40%', 'flexDirection': 'column', 'alignItems': 'center', 'justifyContent': 'flex-start', 'gap': 16};
    verify['messages'] = romeo;
    romeo = {};
    backup = '32%';
    romeo['height'] = backup;
    verify['messagesAvatarDeco'] = romeo;
    romeo = {};
    backup = '38%';
    romeo['height'] = backup;
    verify['messagesProfileEffect'] = romeo;
    romeo = {'textAlign': 'center', 'marginHorizontal': 32};
    verify['title'] = romeo;
    romeo = {'textAlign': 'center', 'marginHorizontal': 16};
    verify['subTitle'] = romeo;
    romeo = {};
    romeo['marginBottom'] = golf;
    verify['footer'] = romeo;
    romeo = {'paddingVertical': 16, 'marginHorizontal': 24};
    foxtrot = oscar[foxtrot];
    foxtrot = options.bind(entity)(foxtrot);
    foxtrot = foxtrot.radii;
    foxtrot = foxtrot.round;
    romeo['borderRadius'] = foxtrot;
    verify['cta'] = romeo;
    romeo = {'minHeight': '91.5%', 'marginHorizontal': 37, 'flexGrow': 1};
    verify['profilePreview'] = romeo;
    romeo = {'resizeMode': 'cover', 'top': 0, 'bottom': 0, 'left': 0, 'right': 0, 'opacity': 0.5, 'position': 'absolute'};
    verify['imageBackground'] = romeo;
    verify = offset.bind(yankee)(verify);
    var _closure1_slot14 = verify;
    verify = function(argFoo) { // Original name: Header
        entity = argFoo;
        entity = entity.tintColor;
        var _closure2_slot0 = entity;
        mike = _closure1_slot13;
        tango = undefined;
        mike = mike.bind(tango)();
        var _closure2_slot1 = mike;
        golf = _closure1_slot5;
        oscar = golf.useCallback;
        zulu = function() {
            zulu = _closure1_slot1;
            mike = _closure1_slot2;
            entity = 9;
            mike = mike[entity];
            entity = undefined;
            zulu = zulu.bind(entity)(mike);
            mike = zulu.close;
            mike = mike.bind(zulu)();
            return entity;
        };
        mike = new Array(0);
        oscar = oscar.bind(golf)(zulu, mike);
        zulu = _closure1_slot10;
        options = _closure1_slot0;
        verify = _closure1_slot2;
        entity = 10;
        entity = verify[entity];
        entity = options.bind(tango)(entity);
        mike = entity.HeaderBackButton;
        entity = {};
        entity['onPress'] = oscar;
        report = function() { // Original name: backImage
            tango = _closure1_slot10;
            mike = _closure1_slot0;
            zulu = _closure1_slot2;
            entity = 11;
            entity = zulu[entity];
            zulu = undefined;
            entity = mike.bind(zulu)(entity);
            mike = entity.XSmallIcon;
            entity = {};
            report = 'md';
            entity['size'] = report;
            report = _closure2_slot1;
            oscar = report.closeButton;
            report = new Array(2);
            report[0] = oscar;
            oscar = {};
            golf = _closure2_slot0;
            oscar['tintColor'] = golf;
            report[1] = oscar;
            entity['style'] = report;
            entity = tango.bind(zulu)(mike, entity);
            return entity;
        };
        entity['backImage'] = report;
        report = 12;
        oscar = verify[report];
        oscar = options.bind(tango)(oscar);
        golf = oscar.intl;
        oscar = golf.string;
        report = verify[report];
        report = options.bind(tango)(report);
        report = report.t;
        report = report.cpT0Cg;
        report = oscar.bind(golf)(report);
        entity['accessibilityLabel'] = report;
        report = false;
        entity['labelVisible'] = report;
        entity = zulu.bind(tango)(mike, entity);
        return entity;
    };
    var _closure1_slot15 = verify;
    verify = {};
    offset = 'function ProductPurchaseSuccessModalTsx1(){const{interpolate,springInput,isProfileEffect}=this.__closure;return{opacity:interpolate(springInput.get(),[0,1],[0.1,1]),transform:[{scale:interpolate(springInput.get(),[0,1],[isProfileEffect?0.6:0,1])}]};}';
    verify['code'] = offset;
    var _closure1_slot16 = verify;
    verify = {};
    offset = 'function ProductPurchaseSuccessModalTsx2(){const{interpolate,springInput}=this.__closure;return{opacity:interpolate(springInput.get(),[0,1],[0,1]),transform:[{scale:interpolate(springInput.get(),[0,1],[0.75,1])}]};}';
    verify['code'] = offset;
    var _closure1_slot17 = verify;
    verify = {};
    offset = 'function ProductPurchaseSuccessModalTsx3(){const{interpolate,linearInput}=this.__closure;return{opacity:interpolate(linearInput.get(),[0,1],[0.5,0])};}';
    verify['code'] = offset;
    var _closure1_slot18 = verify;
    golf = oscar[golf];
    options = options.bind(entity)(golf);
    golf = 'black';
    options = options.bind(entity)(golf);
    golf = options.toHexString;
    golf = golf.bind(options)();
    var _closure1_slot19 = golf;
    golf = [80, 79, 78, 75, 72, 50, 45, 35, 70];
    var _closure1_slot20 = golf;
    tango = oscar[tango];
    oscar = report.bind(entity)(tango);
    report = oscar.fileFinishedImporting;
    tango = 'modules/collectibles/native/ProductPurchaseSuccessModal.tsx';
    tango = report.bind(oscar)(tango);
    mike = function(argFoo) { // Original name: _default
        _fun88080: for(var _fun88080_ip = 0; ; ) switch(_fun88080_ip) {
 0:
            entity = argFoo;
            variable40 = entity.product;
            var _closure2_slot0 = variable40;
            record = entity.renderMessages;
            tango = undefined;
            var _closure2_slot2 = tango;
            entity = _closure1_slot14;
            verify = entity.bind(tango)();
            var _closure2_slot3 = verify;
            options = _closure1_slot0;
            backup = _closure1_slot2;
            entity = 18;
            entity = backup[entity];
            mike = options.bind(tango)(entity);
            entity = mike.useCurrentUser;
            report = entity.bind(mike)();
            var _closure2_slot4 = report;
            romeo = _closure1_slot1;
            entity = 19;
            entity = backup[entity];
            mike = romeo.bind(tango)(entity);
            entity = variable40.styles;
            entity = mike.bind(tango)(entity);
            output = entity.backgroundColors;
            var _closure2_slot5 = output;
            zulu = 20;
            entity = backup[zulu];
            offset = options.bind(tango)(entity);
            golf = offset.useToken;
            mike = 8;
            entity = backup[mike];
            entity = romeo.bind(tango)(entity);
            entity = entity.colors;
            entity = entity.BACKGROUND_PRIMARY;
            golf = golf.bind(offset)(entity);
            var _closure2_slot6 = golf;
            entity = backup[zulu];
            yankee = options.bind(tango)(entity);
            offset = yankee.useToken;
            entity = backup[mike];
            entity = romeo.bind(tango)(entity);
            entity = entity.colors;
            entity = entity.BACKGROUND_SECONDARY;
            entity = offset.bind(yankee)(entity);
            var _closure2_slot7 = entity;
            zulu = backup[zulu];
            offset = options.bind(tango)(zulu);
            zulu = offset.useToken;
            mike = backup[mike];
            mike = romeo.bind(tango)(mike);
            mike = mike.colors;
            mike = mike.INTERACTIVE_ACTIVE;
            yankee = zulu.bind(offset)(mike);
            offset = _closure1_slot5;
            zulu = offset.useMemo;
            mike = new Array(3);
            mike[0] = output;
            mike[1] = golf;
            mike[2] = entity;
            entity = function() {
                _fun88081: for(var _fun88081_ip = 0; ; ) switch(_fun88081_ip) {
 0:
                    mike = _closure2_slot5;
                    entity = null;
                    if(!(entity != mike)) { _fun88081_ip = 98; continue _fun88081 }
 13:
                    mike = _closure2_slot5;
                    tango = mike.primary;
                    entity = tango.toHexString;
                    tango = entity.bind(tango)();
                    entity = new Array(5);
                    entity[0] = tango;
                    report = mike.primary;
                    tango = report.toHexString;
                    tango = tango.bind(report)();
                    entity[1] = tango;
                    tango = mike.secondary;
                    mike = tango.toHexString;
                    mike = mike.bind(tango)();
                    entity[2] = mike;
                    mike = _closure1_slot19;
                    entity[3] = mike;
                    entity[4] = mike;
                    _fun88081_ip = 140; continue _fun88081;
 98:
                    tango = _closure2_slot6;
                    mike = new Array(5);
                    mike[0] = tango;
                    mike[1] = tango;
                    zulu = _closure2_slot7;
                    mike[2] = zulu;
                    zulu = _closure1_slot19;
                    mike[3] = zulu;
                    mike[4] = zulu;
                    entity = mike;
 140:
                    return entity;
                }
            };
            golf = zulu.bind(offset)(entity, mike);
            mike = offset.useRef;
            entity = _closure1_slot20;
            entity = mike.bind(offset)(entity);
            var _closure2_slot1 = entity;
            zulu = offset.useCallback;
            mike = function() {
                _fun88082: for(var _fun88082_ip = 0; ; ) switch(_fun88082_ip) {
 0:
                    tango = _closure1_slot4;
                    entity = _closure2_slot1;
                    zulu = entity.current;
                    entity = undefined;
                    golf = tango.bind(entity)(zulu);
                    options = 0;
                    oscar = golf[options];
                    tango = golf.slice;
                    zulu = 1;
                    zulu = tango.bind(golf)(zulu);
                    tango = null;
                    if(!(tango != oscar)) { _fun88082_ip = 63; continue _fun88082 }
 51:
                    golf = zulu.length;
                    if(!(options !== golf)) { _fun88082_ip = 196; continue _fun88082 }
 63:
                    options = zulu.length;
                    golf = _closure1_slot20;
                    verify = golf.length;
                    golf = 2;
                    golf = verify / golf;
                    if(!(!(options >= golf))) { _fun88082_ip = 142; continue _fun88082 }
 88:
                    offset = _closure1_slot0;
                    yankee = _closure1_slot2;
                    golf = 17;
                    options = yankee[golf];
                    verify = offset.bind(entity)(options);
                    options = verify.triggerHapticFeedback;
                    golf = yankee[golf];
                    golf = offset.bind(entity)(golf);
                    golf = golf.HapticFeedbackTypes;
                    golf = golf.IMPACT_MEDIUM;
                    golf = options.bind(verify)(golf);
                    _fun88082_ip = 248; continue _fun88082;
 142:
                    offset = _closure1_slot0;
                    yankee = _closure1_slot2;
                    golf = 17;
                    options = yankee[golf];
                    verify = offset.bind(entity)(options);
                    options = verify.triggerHapticFeedback;
                    golf = yankee[golf];
                    golf = offset.bind(entity)(golf);
                    golf = golf.HapticFeedbackTypes;
                    golf = golf.IMPACT_LIGHT;
                    golf = options.bind(verify)(golf);
                    _fun88082_ip = 248; continue _fun88082;
 196:
                    verify = _closure1_slot0;
                    offset = _closure1_slot2;
                    report = 17;
                    golf = offset[report];
                    options = verify.bind(entity)(golf);
                    golf = options.triggerHapticFeedback;
                    report = offset[report];
                    report = verify.bind(entity)(report);
                    report = report.HapticFeedbackTypes;
                    report = report.IMPACT_HEAVY;
                    report = golf.bind(options)(report);
 248:
                    if(!(tango != oscar)) { _fun88082_ip = 270; continue _fun88082 }
 252:
                    tango = global;
                    report = tango.setTimeout;
                    tango = _closure2_slot2;
                    tango = report.bind(entity)(tango, oscar);
 270:
                    mike = _closure2_slot1;
                    mike['current'] = zulu;
                    return entity;
                }
            };
            entity = new Array(0);
            entity = zulu.bind(offset)(mike, entity);
            _closure2_slot2 = entity;
            zulu = offset.useEffect;
            mike = new Array(1);
            mike[0] = entity;
            entity = function() {
                mike = _closure2_slot2;
                entity = undefined;
                entity = mike.bind(entity)();
                entity = function() {
                    mike = _closure2_slot1;
                    entity = new Array(0);
                    mike['current'] = entity;
                    entity = undefined;
                    return entity;
                };
                return entity;
            };
            entity = zulu.bind(offset)(entity, mike);
            entity = _closure1_slot7;
            entity = entity.bind(tango)();
            entity = entity.width;
            var _closure2_slot8 = entity;
            zulu = offset.useMemo;
            mike = new Array(1);
            mike[0] = entity;
            entity = function() {
                mike = _closure2_slot8;
                entity = 2;
                mike = entity * mike;
                entity = 3;
                entity = mike / entity;
                return entity;
            };
            mike = zulu.bind(offset)(entity, mike);
            var _closure2_slot9 = mike;
            entity = 21;
            entity = backup[entity];
            foxtrot = options.bind(tango)(entity);
            offset = foxtrot.useStateFromStores;
            entity = _closure1_slot8;
            zulu = new Array(1);
            zulu[0] = entity;
            entity = function() {
                entity = _closure1_slot8;
                entity = entity.useReducedMotion;
                return entity;
            };
            zulu = offset.bind(foxtrot)(zulu, entity);
            offset = variable40.type;
            context = 22;
            entity = backup[context];
            entity = options.bind(tango)(entity);
            entity = entity.CollectiblesItemType;
            entity = entity.PROFILE_EFFECT;
            target = offset === entity;
            entity = function(argFoo, argBar) {
                entity = argFoo;
                backup = argBar;
                var _closure3_slot0 = entity;
                var _closure3_slot1 = backup;
                offset = _closure1_slot0;
                yankee = _closure1_slot2;
                options = 13;
                zulu = yankee[options];
                verify = undefined;
                tango = offset.bind(verify)(zulu);
                zulu = tango.useSharedValue;
                oscar = 0;
                foxtrot = zulu.bind(tango)(oscar);
                var _closure3_slot2 = foxtrot;
                zulu = yankee[options];
                tango = offset.bind(verify)(zulu);
                zulu = tango.useSharedValue;
                golf = zulu.bind(tango)(oscar);
                var _closure3_slot3 = golf;
                oscar = _closure1_slot5;
                tango = oscar.useEffect;
                zulu = new Array(3);
                zulu[0] = foxtrot;
                zulu[1] = entity;
                zulu[2] = golf;
                entity = function() {
                    _fun88088: for(var _fun88088_ip = 0; ; ) switch(_fun88088_ip) {
 0:
                        tango = _closure3_slot2;
                        zulu = tango.set;
                        report = _closure3_slot0;
                        offset = 1;
                        mike = offset;
                        if(report) { _fun88088_ip = 102; continue _fun88088 }
 25:
                        verify = _closure1_slot0;
                        yankee = _closure1_slot2;
                        report = 13;
                        report = yankee[report];
                        oscar = undefined;
                        options = verify.bind(oscar)(report);
                        golf = options.withDelay;
                        report = 14;
                        report = yankee[report];
                        verify = verify.bind(oscar)(report);
                        oscar = verify.withSpring;
                        report = {'duration': 500, 'dampingRatio': 0.7};
                        oscar = oscar.bind(verify)(offset, report);
                        report = 200;
                        mike = golf.bind(options)(report, oscar);
 102:
                        mike = zulu.bind(tango)(mike);
                        zulu = _closure3_slot3;
                        mike = zulu.set;
                        tango = _closure3_slot0;
                        entity = offset;
                        if(tango) { _fun88088_ip = 195; continue _fun88088 }
 126:
                        options = _closure1_slot0;
                        verify = _closure1_slot2;
                        tango = 13;
                        tango = verify[tango];
                        report = undefined;
                        golf = options.bind(report)(tango);
                        oscar = golf.withDelay;
                        tango = 15;
                        tango = verify[tango];
                        verify = options.bind(report)(tango);
                        options = verify.withTiming;
                        tango = {};
                        report = 200;
                        tango['duration'] = report;
                        tango = options.bind(verify)(offset, tango);
                        entity = oscar.bind(golf)(report, tango);
 195:
                        entity = mike.bind(zulu)(entity);
                        entity = undefined;
                        return entity;
                    }
                };
                entity = tango.bind(oscar)(entity, zulu);
                entity = {};
                zulu = yankee[options];
                oscar = offset.bind(verify)(zulu);
                tango = oscar.useAnimatedStyle;
                zulu = function() { // Original name: n
                    _fun88089: for(var _fun88089_ip = 0; ; ) switch(_fun88089_ip) {
 0:
                        entity = {};
                        golf = _closure1_slot0;
                        options = _closure1_slot2;
                        tango = 13;
                        mike = options[tango];
                        oscar = undefined;
                        romeo = golf.bind(oscar)(mike);
                        yankee = romeo.interpolate;
                        report = _closure3_slot2;
                        zulu = report.get;
                        offset = zulu.bind(report)();
                        verify = [0, 1];
                        zulu = [0.1, 1];
                        zulu = yankee.bind(romeo)(offset, verify, zulu);
                        entity['opacity'] = zulu;
                        zulu = {};
                        tango = options[tango];
                        golf = golf.bind(oscar)(tango);
                        oscar = golf.interpolate;
                        tango = report.get;
                        report = tango.bind(report)();
                        tango = _closure3_slot1;
                        mike = 0;
                        if(!tango) { _fun88089_ip = 125; continue _fun88089 }
 115:
                        mike = 0.6;
 125:
                        tango = new Array(2);
                        tango[0] = mike;
                        mike = 1;
                        tango[1] = mike;
                        mike = [0, 1];
                        mike = oscar.bind(golf)(report, mike, tango);
                        zulu['scale'] = mike;
                        mike = new Array(1);
                        mike[0] = zulu;
                        entity['transform'] = mike;
                        return entity;
                    }
                };
                romeo = {};
                kilo = yankee[options];
                kilo = offset.bind(verify)(kilo);
                kilo = kilo.interpolate;
                romeo['interpolate'] = kilo;
                romeo['springInput'] = foxtrot;
                romeo['isProfileEffect'] = backup;
                zulu['__closure'] = romeo;
                romeo = 5554673710726.0;
                zulu['__workletHash'] = romeo;
                romeo = _closure1_slot16;
                zulu['__initData'] = romeo;
                zulu = tango.bind(oscar)(zulu);
                entity['previewViewStyle'] = zulu;
                zulu = yankee[options];
                oscar = offset.bind(verify)(zulu);
                tango = oscar.useAnimatedStyle;
                zulu = function() { // Original name: s
                    entity = {};
                    oscar = _closure1_slot0;
                    golf = _closure1_slot2;
                    mike = 13;
                    zulu = golf[mike];
                    report = undefined;
                    yankee = oscar.bind(report)(zulu);
                    offset = yankee.interpolate;
                    tango = _closure3_slot2;
                    zulu = tango.get;
                    verify = zulu.bind(tango)();
                    options = [0, 1];
                    zulu = [0, 1];
                    zulu = offset.bind(yankee)(verify, options, zulu);
                    entity['opacity'] = zulu;
                    zulu = {};
                    mike = golf[mike];
                    golf = oscar.bind(report)(mike);
                    oscar = golf.interpolate;
                    mike = tango.get;
                    report = mike.bind(tango)();
                    tango = [0, 1];
                    mike = [0.75, 1];
                    mike = oscar.bind(golf)(report, tango, mike);
                    zulu['scale'] = mike;
                    mike = new Array(1);
                    mike[0] = zulu;
                    entity['transform'] = mike;
                    return entity;
                };
                romeo = {};
                backup = yankee[options];
                backup = offset.bind(verify)(backup);
                backup = backup.interpolate;
                romeo['interpolate'] = backup;
                romeo['springInput'] = foxtrot;
                zulu['__closure'] = romeo;
                romeo = 4517716462039.0;
                zulu['__workletHash'] = romeo;
                romeo = _closure1_slot17;
                zulu['__initData'] = romeo;
                zulu = tango.bind(oscar)(zulu);
                entity['textViewStyle'] = zulu;
                zulu = yankee[options];
                tango = offset.bind(verify)(zulu);
                zulu = tango.useAnimatedStyle;
                mike = function() { // Original name: c
                    entity = {};
                    tango = _closure1_slot0;
                    zulu = _closure1_slot2;
                    mike = 13;
                    zulu = zulu[mike];
                    mike = undefined;
                    oscar = tango.bind(mike)(zulu);
                    report = oscar.interpolate;
                    zulu = _closure3_slot3;
                    mike = zulu.get;
                    tango = mike.bind(zulu)();
                    zulu = [0, 1];
                    mike = [0.5, 0];
                    mike = report.bind(oscar)(tango, zulu, mike);
                    entity['opacity'] = mike;
                    return entity;
                };
                oscar = {};
                options = yankee[options];
                options = offset.bind(verify)(options);
                options = options.interpolate;
                oscar['interpolate'] = options;
                oscar['linearInput'] = golf;
                mike['__closure'] = oscar;
                oscar = 6018737312.0;
                mike['__workletHash'] = oscar;
                report = _closure1_slot18;
                mike['__initData'] = report;
                mike = zulu.bind(tango)(mike);
                entity['curtainViewStyle'] = mike;
                return entity;
            };
            entity = entity.bind(tango)(zulu, target);
            status = entity.previewViewStyle;
            papa = entity.textViewStyle;
            offset = entity.curtainViewStyle;
            foxtrot = _closure1_slot3;
            zulu = variable40.items;
            entity = 1;
            zulu = foxtrot.bind(tango)(zulu, entity);
            entity = 0;
            entity = zulu[entity];
            var _closure2_slot10 = entity;
            entity = 23;
            entity = backup[entity];
            foxtrot = options.bind(tango)(entity);
            zulu = foxtrot.useHandleUseNow;
            entity = {};
            entity['product'] = variable40;
            entity = zulu.bind(foxtrot)(entity);
            control = entity.handleUseNow;
            vacuum = entity.isApplying;
            zulu = report.getAvatarSource;
            entity = 24;
            entity = backup[entity];
            entity = options.bind(tango)(entity);
            entity = entity.avatarPlaceholderSizeRatio;
            mike = mike * entity;
            entity = false;
            entity = zulu.bind(report)(tango, entity, mike);
            var _closure2_slot11 = entity;
            entity = 25;
            entity = backup[entity];
            zulu = options.bind(tango)(entity);
            mike = zulu.usePreviewCollectibleProduct;
            entity = true;
            entity = mike.bind(zulu)(variable40, entity);
            zulu = _closure1_slot12;
            mike = _closure1_slot6;
            entity = {};
            report = verify.root;
            entity['style'] = report;
            report = variable40.skuId;
            entity['id'] = report;
            foxtrot = _closure1_slot10;
            report = 26;
            report = backup[report];
            romeo = romeo.bind(tango)(report);
            report = {};
            kilo = verify.backdrop;
            report['style'] = kilo;
            kilo = _closure1_slot9;
            sizing = kilo.START;
            report['start'] = sizing;
            kilo = kilo.END;
            report['end'] = kilo;
            kilo = [0, 0.05, 0.6, 0.95, 1];
            report['locations'] = kilo;
            report['colors'] = golf;
            golf = 27;
            golf = backup[golf];
            golf = options.bind(tango)(golf);
            kilo = golf.SafeAreaPaddingView;
            backup = {'style': null, 'top': true, 'bottom': true, 'left': true, 'right': true};
            options = verify.main;
            golf = new Array(1);
            golf[0] = options;
            backup['style'] = golf;
            options = _closure1_slot15;
            golf = {};
            config = null;
            result = config == output;
            sizing = undefined;
            if(result) { _fun88080_ip = 831; continue _fun88080 }
 816:
            result = output.label;
            output = result.toHexString;
            sizing = output.bind(result)();
 831:
            if(!(config != sizing)) { _fun88080_ip = 838; continue _fun88080 }
 835:
            yankee = sizing;
 838:
            golf['tintColor'] = yankee;
            golf = foxtrot.bind(tango)(options, golf);
            sizing = new Array(3);
            sizing[0] = golf;
            output = _closure1_slot12;
            options = _closure1_slot6;
            golf = {};
            yankee = verify.body;
            golf['style'] = yankee;
            sequence = _closure1_slot10;
            echo = _closure1_slot1;
            result = _closure1_slot2;
            yankee = 13;
            result = result[yankee];
            result = echo.bind(tango)(result);
            update = result.View;
            result = {};
            sierra = verify.preview;
            echo = new Array(3);
            echo[0] = sierra;
            sierra = !target;
            if(target) { _fun88080_ip = 933; continue _fun88080 }
 927:
            sierra = verify.previewAvatarDeco;
 933:
            echo[1] = sierra;
            echo[2] = status;
            result['style'] = echo;
            status = _closure1_slot0;
            echo = _closure1_slot2;
            sierra = 28;
            sierra = echo[sierra];
            whiskey = status.bind(tango)(sierra);
            lima = whiskey.match;
            sierra = variable40.type;
            equality = lima.bind(whiskey)(sierra);
            whiskey = equality.with;
            sierra = echo[context];
            sierra = status.bind(tango)(sierra);
            sierra = sierra.CollectiblesItemType;
            lima = sierra.AVATAR_DECORATION;
            sierra = function() {
                tango = _closure1_slot10;
                mike = _closure1_slot1;
                zulu = _closure1_slot2;
                entity = 24;
                entity = zulu[entity];
                zulu = undefined;
                mike = mike.bind(zulu)(entity);
                entity = {};
                oscar = _closure2_slot10;
                entity['item'] = oscar;
                oscar = _closure2_slot9;
                entity['size'] = oscar;
                report = _closure2_slot11;
                entity['avatarSource'] = report;
                report = true;
                entity['animate'] = report;
                entity = tango.bind(zulu)(mike, entity);
                return entity;
            };
            equality = whiskey.bind(equality)(lima, sierra);
            whiskey = equality.with;
            sierra = echo[context];
            sierra = status.bind(tango)(sierra);
            sierra = sierra.CollectiblesItemType;
            lima = sierra.PROFILE_EFFECT;
            sierra = function() {
                tango = _closure1_slot10;
                mike = _closure1_slot1;
                zulu = _closure1_slot2;
                entity = 29;
                entity = zulu[entity];
                zulu = undefined;
                mike = mike.bind(zulu)(entity);
                entity = {};
                oscar = _closure2_slot4;
                entity['user'] = oscar;
                oscar = _closure2_slot3;
                oscar = oscar.profilePreview;
                entity['style'] = oscar;
                report = _closure2_slot0;
                oscar = report.items;
                report = 0;
                report = oscar[report];
                entity['pendingProfileEffectRecord'] = report;
                report = 74;
                entity['containerMargin'] = report;
                entity = tango.bind(zulu)(mike, entity);
                return entity;
            };
            lima = whiskey.bind(equality)(lima, sierra);
            sierra = lima.with;
            context = echo[context];
            context = status.bind(tango)(context);
            context = context.CollectiblesItemType;
            status = context.BUNDLE;
            context = function() {
                tango = _closure1_slot10;
                mike = _closure1_slot1;
                zulu = _closure1_slot2;
                entity = 29;
                entity = zulu[entity];
                zulu = undefined;
                mike = mike.bind(zulu)(entity);
                entity = {};
                oscar = _closure2_slot4;
                entity['user'] = oscar;
                oscar = _closure2_slot3;
                oscar = oscar.profilePreview;
                entity['style'] = oscar;
                report = _closure2_slot0;
                oscar = report.items;
                report = 1;
                report = oscar[report];
                entity['pendingProfileEffectRecord'] = report;
                report = 74;
                entity['containerMargin'] = report;
                entity = tango.bind(zulu)(mike, entity);
                return entity;
            };
            sierra = sierra.bind(lima)(status, context);
            status = sierra.otherwise;
            context = function() {
                entity = null;
                return entity;
            };
            context = status.bind(sierra)(context);
            result['children'] = context;
            update = sequence.bind(tango)(update, result);
            result = new Array(2);
            result[0] = update;
            sequence = _closure1_slot10;
            update = _closure1_slot1;
            echo = echo[yankee];
            echo = update.bind(tango)(echo);
            update = echo.View;
            echo = {};
            status = verify.messages;
            context = new Array(3);
            context[0] = status;
            if(target) { _fun88080_ip = 1186; continue _fun88080 }
 1178:
            target = verify.messagesAvatarDeco;
            _fun88080_ip = 1192; continue _fun88080;
 1186:
            target = verify.messagesProfileEffect;
 1192:
            context[1] = target;
            context[2] = papa;
            echo['style'] = context;
            if(!(config == record)) { _fun88080_ip = 1458; continue _fun88080 }
 1211:
            papa = _closure1_slot12;
            context = _closure1_slot11;
            config = {};
            lima = _closure1_slot10;
            variable36 = _closure1_slot0;
            variable37 = _closure1_slot2;
            status = 30;
            target = variable37[status];
            target = variable36.bind(tango)(target);
            sierra = target.Text;
            target = {'variant': 'heading-xl/bold', 'color': 'white'};
            whiskey = verify.title;
            target['style'] = whiskey;
            whiskey = 12;
            equality = variable37[whiskey];
            equality = variable36.bind(tango)(equality);
            variable39 = equality.intl;
            variable38 = variable39.format;
            equality = variable37[whiskey];
            equality = variable36.bind(tango)(equality);
            equality = equality.t;
            quebec = equality.YNaxMj;
            equality = {};
            variable40 = variable40.name;
            equality['itemName'] = variable40;
            equality = variable38.bind(variable39)(quebec, equality);
            target['children'] = equality;
            sierra = lima.bind(tango)(sierra, target);
            target = new Array(2);
            target[0] = sierra;
            status = variable37[status];
            status = variable36.bind(tango)(status);
            sierra = status.Text;
            status = {'variant': 'text-md/medium', 'color': 'white'};
            equality = verify.title;
            status['style'] = equality;
            equality = variable37[whiskey];
            equality = variable36.bind(tango)(equality);
            quebec = equality.intl;
            equality = quebec.string;
            whiskey = variable37[whiskey];
            whiskey = variable36.bind(tango)(whiskey);
            whiskey = whiskey.t;
            whiskey = whiskey.44b50t;
            whiskey = equality.bind(quebec)(whiskey);
            status['children'] = whiskey;
            status = lima.bind(tango)(sierra, status);
            target[1] = status;
            config['children'] = target;
            config = papa.bind(tango)(context, config);
            _fun88080_ip = 1462; continue _fun88080;
 1458:
            config = record.bind(tango)();
 1462:
            echo['children'] = config;
            echo = sequence.bind(tango)(update, echo);
            result[1] = echo;
            golf['children'] = result;
            golf = output.bind(tango)(options, golf);
            sizing[1] = golf;
            options = _closure1_slot10;
            result = _closure1_slot6;
            output = {};
            golf = verify.footer;
            output['style'] = golf;
            golf = _closure1_slot1;
            oscar = _closure1_slot2;
            echo = 31;
            echo = oscar[echo];
            update = golf.bind(tango)(echo);
            echo = {};
            echo['loading'] = vacuum;
            echo['onPress'] = control;
            source = function() { // Original name: text
                tango = _closure1_slot10;
                options = _closure1_slot0;
                verify = _closure1_slot2;
                entity = 30;
                entity = verify[entity];
                zulu = undefined;
                entity = options.bind(zulu)(entity);
                mike = entity.Text;
                entity = {'variant': 'text-md/semibold', 'color': 'white'};
                report = 12;
                oscar = verify[report];
                oscar = options.bind(zulu)(oscar);
                golf = oscar.intl;
                oscar = golf.string;
                report = verify[report];
                report = options.bind(zulu)(report);
                report = report.t;
                report = report.MAS7uL;
                report = oscar.bind(golf)(report);
                entity['children'] = report;
                entity = tango.bind(zulu)(mike, entity);
                return entity;
            };
            echo['text'] = source;
            source = verify.cta;
            echo['style'] = source;
            echo = options.bind(tango)(update, echo);
            output['children'] = echo;
            output = options.bind(tango)(result, output);
            sizing[2] = output;
            backup['children'] = sizing;
            backup = zulu.bind(tango)(kilo, backup);
            report['children'] = backup;
            romeo = foxtrot.bind(tango)(romeo, report);
            report = new Array(2);
            report[0] = romeo;
            oscar = oscar[yankee];
            oscar = golf.bind(tango)(oscar);
            golf = oscar.View;
            oscar = {};
            yankee = verify.curtain;
            verify = new Array(2);
            verify[0] = yankee;
            verify[1] = offset;
            oscar['style'] = verify;
            verify = 'none';
            oscar['pointerEvents'] = verify;
            oscar = options.bind(tango)(golf, oscar);
            report[1] = oscar;
            entity['children'] = report;
            entity = zulu.bind(tango)(mike, entity);
            return entity;
        }
    };
    zulu['default'] = mike;
    return entity;
})();