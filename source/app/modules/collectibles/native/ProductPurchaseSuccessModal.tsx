// app/modules/collectibles/native/ProductPurchaseSuccessModal.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    report = argBar;
    option = argBaz;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    var _closure1_slot1 = option;
    var _closure1_slot2 = oscard;
    entity = global;
    verify = entity.Object;
    golfie = verify.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(verify)(zuuluu, entity, tangon);
    entity = 0;
    tangon = oscard[entity];
    entity = undefined;
    tangon = option.bind(entity)(tangon);
    var _closure1_slot3 = tangon;
    backup = 1;
    tangon = oscard[backup];
    tangon = option.bind(entity)(tangon);
    var _closure1_slot4 = tangon;
    tangon = 2;
    golfie = oscard[tangon];
    tangon = argCor;
    tangon = tangon.bind(entity)(golfie);
    var _closure1_slot5 = tangon;
    tangon = 3;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    golfie = tangon.View;
    var _closure1_slot6 = golfie;
    tangon = tangon.useWindowDimensions;
    var _closure1_slot7 = tangon;
    tangon = 4;
    tangon = oscard[tangon];
    tangon = option.bind(entity)(tangon);
    var _closure1_slot8 = tangon;
    tangon = 5;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.VerticalGradient;
    var _closure1_slot9 = tangon;
    tangon = 6;
    golfie = oscard[tangon];
    golfie = report.bind(entity)(golfie);
    golfie = golfie.jsx;
    var _closure1_slot10 = golfie;
    golfie = oscard[tangon];
    golfie = report.bind(entity)(golfie);
    golfie = golfie.Fragment;
    var _closure1_slot11 = golfie;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.jsxs;
    var _closure1_slot12 = tangon;
    verify = 7;
    tangon = oscard[verify];
    romeon = report.bind(entity)(tangon);
    yankee = romeon.createStyles;
    offset = {};
    kiloes = {'width': 32, 'height': 32, 'tintColor': null, 'marginHorizontal': 16, 'opacity': 0.8};
    tangon = 32;
    foxtra = 8;
    golfie = oscard[foxtra];
    golfie = option.bind(entity)(golfie);
    golfie = golfie.colors;
    golfie = golfie.HEADER_PRIMARY;
    kiloes['tintColor'] = golfie;
    golfie = 16;
    offset['closeButton'] = kiloes;
    offset = yankee.bind(romeon)(offset);
    var _closure1_slot13 = offset;
    verify = oscard[verify];
    yankee = report.bind(entity)(verify);
    offset = yankee.createStyles;
    verify = {};
    romeon = {};
    romeon['flex'] = backup;
    verify['backdrop'] = romeon;
    romeon = {};
    romeon['flex'] = backup;
    verify['main'] = romeon;
    romeon = {};
    romeon['flex'] = backup;
    verify['root'] = romeon;
    romeon = {'position': 'absolute', 'backgroundColor': null, 'top': 0, 'bottom': 0, 'left': 0, 'right': 0};
    backup = oscard[foxtra];
    backup = option.bind(entity)(backup);
    backup = backup.colors;
    backup = backup.BLACK;
    romeon['backgroundColor'] = backup;
    verify['curtain'] = romeon;
    romeon = {'flex': 1, 'flexDirection': 'column', 'justifyContent': 'center'};
    verify['body'] = romeon;
    romeon = {'flex': 1, 'flexDirection': 'row', 'justifyContent': 'center', 'alignItems': 'center', 'overflow': 'hidden'};
    verify['preview'] = romeon;
    romeon = {};
    backup = '10%';
    romeon['marginTop'] = backup;
    verify['previewAvatarDeco'] = romeon;
    romeon = {'height': '40%', 'flexDirection': 'column', 'alignItems': 'center', 'justifyContent': 'flex-start', 'gap': 16};
    verify['messages'] = romeon;
    romeon = {};
    backup = '32%';
    romeon['height'] = backup;
    verify['messagesAvatarDeco'] = romeon;
    romeon = {};
    backup = '38%';
    romeon['height'] = backup;
    verify['messagesProfileEffect'] = romeon;
    romeon = {'textAlign': 'center', 'marginHorizontal': 32};
    verify['title'] = romeon;
    romeon = {'textAlign': 'center', 'marginHorizontal': 16};
    verify['subTitle'] = romeon;
    romeon = {};
    romeon['marginBottom'] = golfie;
    verify['footer'] = romeon;
    romeon = {'paddingVertical': 16, 'marginHorizontal': 24};
    foxtra = oscard[foxtra];
    foxtra = option.bind(entity)(foxtra);
    foxtra = foxtra.radii;
    foxtra = foxtra.round;
    romeon['borderRadius'] = foxtra;
    verify['cta'] = romeon;
    romeon = {'minHeight': '91.5%', 'marginHorizontal': 37, 'flexGrow': 1};
    verify['profilePreview'] = romeon;
    romeon = {'resizeMode': 'cover', 'top': 0, 'bottom': 0, 'left': 0, 'right': 0, 'opacity': 0.5, 'position': 'absolute'};
    verify['imageBackground'] = romeon;
    verify = offset.bind(yankee)(verify);
    var _closure1_slot14 = verify;
    verify = function(argFoo) { // Original name: Header
        entity = argFoo;
        entity = entity.tintColor;
        var _closure2_slot0 = entity;
        michal = _closure1_slot13;
        tangon = undefined;
        michal = michal.bind(tangon)();
        var _closure2_slot1 = michal;
        golfie = _closure1_slot5;
        oscard = golfie.useCallback;
        zuuluu = function() {
            zuuluu = _closure1_slot1;
            michal = _closure1_slot2;
            entity = 9;
            michal = michal[entity];
            entity = undefined;
            zuuluu = zuuluu.bind(entity)(michal);
            michal = zuuluu.close;
            michal = michal.bind(zuuluu)();
            return entity;
        };
        michal = new Array(0);
        oscard = oscard.bind(golfie)(zuuluu, michal);
        zuuluu = _closure1_slot10;
        option = _closure1_slot0;
        verify = _closure1_slot2;
        entity = 10;
        entity = verify[entity];
        entity = option.bind(tangon)(entity);
        michal = entity.HeaderBackButton;
        entity = {};
        entity['onPress'] = oscard;
        report = function() { // Original name: backImage
            tangon = _closure1_slot10;
            michal = _closure1_slot0;
            zuuluu = _closure1_slot2;
            entity = 11;
            entity = zuuluu[entity];
            zuuluu = undefined;
            entity = michal.bind(zuuluu)(entity);
            michal = entity.XSmallIcon;
            entity = {};
            report = 'md';
            entity['size'] = report;
            report = _closure2_slot1;
            oscard = report.closeButton;
            report = new Array(2);
            report[0] = oscard;
            oscard = {};
            golfie = _closure2_slot0;
            oscard['tintColor'] = golfie;
            report[1] = oscard;
            entity['style'] = report;
            entity = tangon.bind(zuuluu)(michal, entity);
            return entity;
        };
        entity['backImage'] = report;
        report = 12;
        oscard = verify[report];
        oscard = option.bind(tangon)(oscard);
        golfie = oscard.intl;
        oscard = golfie.string;
        report = verify[report];
        report = option.bind(tangon)(report);
        report = report.t;
        report = report.cpT0Cg;
        report = oscard.bind(golfie)(report);
        entity['accessibilityLabel'] = report;
        report = false;
        entity['labelVisible'] = report;
        entity = zuuluu.bind(tangon)(michal, entity);
        return entity;
    };
    var _closure1_slot15 = verify;
    verify = {};
    offset = 'function ProductPurchaseSuccessModalTsx1(){const{interpolate,springInput,isProfileEffect}=this.__closure;return{opacity:interpolate(springInput.get(),[0,1],[0.1,1]),transform:[{scale:interpolate(springInput.get(),[0,1],[isProfileEffect?0.6:0,1])}]};}';
    verify['code'] = offset;
    var _closure1_slot16 = verify;
    verify = {};
    offset = 'function ProductPurchaseSuccessModalTsx2(){const{interpolate,springInput}=this.__closure;return{opacity:interpolate(springInput.get(),[0,1],[0,1]),transform:[{scale:interpolate(springInput.get(),[0,1],[0.75,1])}]};}';
    verify['code'] = offset;
    var _closure1_slot17 = verify;
    verify = {};
    offset = 'function ProductPurchaseSuccessModalTsx3(){const{interpolate,linearInput}=this.__closure;return{opacity:interpolate(linearInput.get(),[0,1],[0.5,0])};}';
    verify['code'] = offset;
    var _closure1_slot18 = verify;
    golfie = oscard[golfie];
    option = option.bind(entity)(golfie);
    golfie = 'black';
    option = option.bind(entity)(golfie);
    golfie = option.toHexString;
    golfie = golfie.bind(option)();
    var _closure1_slot19 = golfie;
    golfie = [80, 79, 78, 75, 72, 50, 45, 35, 70];
    var _closure1_slot20 = golfie;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/collectibles/native/ProductPurchaseSuccessModal.tsx';
    tangon = report.bind(oscard)(tangon);
    michal = function(argFoo) { // Original name: _default
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            entity = argFoo;
            variable40 = entity.product;
            var _closure2_slot0 = variable40;
            record = entity.renderMessages;
            tangon = undefined;
            var _closure2_slot2 = tangon;
            entity = _closure1_slot14;
            verify = entity.bind(tangon)();
            var _closure2_slot3 = verify;
            option = _closure1_slot0;
            backup = _closure1_slot2;
            entity = 18;
            entity = backup[entity];
            michal = option.bind(tangon)(entity);
            entity = michal.useCurrentUser;
            report = entity.bind(michal)();
            var _closure2_slot4 = report;
            romeon = _closure1_slot1;
            entity = 19;
            entity = backup[entity];
            michal = romeon.bind(tangon)(entity);
            entity = variable40.styles;
            entity = michal.bind(tangon)(entity);
            output = entity.backgroundColors;
            var _closure2_slot5 = output;
            zuuluu = 20;
            entity = backup[zuuluu];
            offset = option.bind(tangon)(entity);
            golfie = offset.useToken;
            michal = 8;
            entity = backup[michal];
            entity = romeon.bind(tangon)(entity);
            entity = entity.colors;
            entity = entity.BACKGROUND_PRIMARY;
            golfie = golfie.bind(offset)(entity);
            var _closure2_slot6 = golfie;
            entity = backup[zuuluu];
            yankee = option.bind(tangon)(entity);
            offset = yankee.useToken;
            entity = backup[michal];
            entity = romeon.bind(tangon)(entity);
            entity = entity.colors;
            entity = entity.BACKGROUND_SECONDARY;
            entity = offset.bind(yankee)(entity);
            var _closure2_slot7 = entity;
            zuuluu = backup[zuuluu];
            offset = option.bind(tangon)(zuuluu);
            zuuluu = offset.useToken;
            michal = backup[michal];
            michal = romeon.bind(tangon)(michal);
            michal = michal.colors;
            michal = michal.INTERACTIVE_ACTIVE;
            yankee = zuuluu.bind(offset)(michal);
            offset = _closure1_slot5;
            zuuluu = offset.useMemo;
            michal = new Array(3);
            michal[0] = output;
            michal[1] = golfie;
            michal[2] = entity;
            entity = function() {
                _fun00003: for(var _fun00004_ip = 0; ; ) switch(_fun00004_ip) {
 0:
                    michal = _closure2_slot5;
                    entity = null;
                    if(!(entity != michal)) { _fun00004_ip = 98; continue _fun00003 }
 13:
                    michal = _closure2_slot5;
                    tangon = michal.primary;
                    entity = tangon.toHexString;
                    tangon = entity.bind(tangon)();
                    entity = new Array(5);
                    entity[0] = tangon;
                    report = michal.primary;
                    tangon = report.toHexString;
                    tangon = tangon.bind(report)();
                    entity[1] = tangon;
                    tangon = michal.secondary;
                    michal = tangon.toHexString;
                    michal = michal.bind(tangon)();
                    entity[2] = michal;
                    michal = _closure1_slot19;
                    entity[3] = michal;
                    entity[4] = michal;
                    _fun00004_ip = 140; continue _fun00003;
 98:
                    tangon = _closure2_slot6;
                    michal = new Array(5);
                    michal[0] = tangon;
                    michal[1] = tangon;
                    zuuluu = _closure2_slot7;
                    michal[2] = zuuluu;
                    zuuluu = _closure1_slot19;
                    michal[3] = zuuluu;
                    michal[4] = zuuluu;
                    entity = michal;
 140:
                    return entity;
                }
            };
            golfie = zuuluu.bind(offset)(entity, michal);
            michal = offset.useRef;
            entity = _closure1_slot20;
            entity = michal.bind(offset)(entity);
            var _closure2_slot1 = entity;
            zuuluu = offset.useCallback;
            michal = function() {
                _fun00005: for(var _fun00006_ip = 0; ; ) switch(_fun00006_ip) {
 0:
                    tangon = _closure1_slot4;
                    entity = _closure2_slot1;
                    zuuluu = entity.current;
                    entity = undefined;
                    golfie = tangon.bind(entity)(zuuluu);
                    option = 0;
                    oscard = golfie[option];
                    tangon = golfie.slice;
                    zuuluu = 1;
                    zuuluu = tangon.bind(golfie)(zuuluu);
                    tangon = null;
                    if(!(tangon != oscard)) { _fun00006_ip = 63; continue _fun00005 }
 51:
                    golfie = zuuluu.length;
                    if(!(option !== golfie)) { _fun00006_ip = 196; continue _fun00005 }
 63:
                    option = zuuluu.length;
                    golfie = _closure1_slot20;
                    verify = golfie.length;
                    golfie = 2;
                    golfie = verify / golfie;
                    if(!(!(option >= golfie))) { _fun00006_ip = 142; continue _fun00005 }
 88:
                    offset = _closure1_slot0;
                    yankee = _closure1_slot2;
                    golfie = 17;
                    option = yankee[golfie];
                    verify = offset.bind(entity)(option);
                    option = verify.triggerHapticFeedback;
                    golfie = yankee[golfie];
                    golfie = offset.bind(entity)(golfie);
                    golfie = golfie.HapticFeedbackTypes;
                    golfie = golfie.IMPACT_MEDIUM;
                    golfie = option.bind(verify)(golfie);
                    _fun00006_ip = 248; continue _fun00005;
 142:
                    offset = _closure1_slot0;
                    yankee = _closure1_slot2;
                    golfie = 17;
                    option = yankee[golfie];
                    verify = offset.bind(entity)(option);
                    option = verify.triggerHapticFeedback;
                    golfie = yankee[golfie];
                    golfie = offset.bind(entity)(golfie);
                    golfie = golfie.HapticFeedbackTypes;
                    golfie = golfie.IMPACT_LIGHT;
                    golfie = option.bind(verify)(golfie);
                    _fun00006_ip = 248; continue _fun00005;
 196:
                    verify = _closure1_slot0;
                    offset = _closure1_slot2;
                    report = 17;
                    golfie = offset[report];
                    option = verify.bind(entity)(golfie);
                    golfie = option.triggerHapticFeedback;
                    report = offset[report];
                    report = verify.bind(entity)(report);
                    report = report.HapticFeedbackTypes;
                    report = report.IMPACT_HEAVY;
                    report = golfie.bind(option)(report);
 248:
                    if(!(tangon != oscard)) { _fun00006_ip = 270; continue _fun00005 }
 252:
                    tangon = global;
                    report = tangon.setTimeout;
                    tangon = _closure2_slot2;
                    tangon = report.bind(entity)(tangon, oscard);
 270:
                    michal = _closure2_slot1;
                    michal['current'] = zuuluu;
                    return entity;
                }
            };
            entity = new Array(0);
            entity = zuuluu.bind(offset)(michal, entity);
            _closure2_slot2 = entity;
            zuuluu = offset.useEffect;
            michal = new Array(1);
            michal[0] = entity;
            entity = function() {
                michal = _closure2_slot2;
                entity = undefined;
                entity = michal.bind(entity)();
                entity = function() {
                    michal = _closure2_slot1;
                    entity = new Array(0);
                    michal['current'] = entity;
                    entity = undefined;
                    return entity;
                };
                return entity;
            };
            entity = zuuluu.bind(offset)(entity, michal);
            entity = _closure1_slot7;
            entity = entity.bind(tangon)();
            entity = entity.width;
            var _closure2_slot8 = entity;
            zuuluu = offset.useMemo;
            michal = new Array(1);
            michal[0] = entity;
            entity = function() {
                michal = _closure2_slot8;
                entity = 2;
                michal = entity * michal;
                entity = 3;
                entity = michal / entity;
                return entity;
            };
            michal = zuuluu.bind(offset)(entity, michal);
            var _closure2_slot9 = michal;
            entity = 21;
            entity = backup[entity];
            foxtra = option.bind(tangon)(entity);
            offset = foxtra.useStateFromStores;
            entity = _closure1_slot8;
            zuuluu = new Array(1);
            zuuluu[0] = entity;
            entity = function() {
                entity = _closure1_slot8;
                entity = entity.useReducedMotion;
                return entity;
            };
            zuuluu = offset.bind(foxtra)(zuuluu, entity);
            offset = variable40.type;
            cntext = 22;
            entity = backup[cntext];
            entity = option.bind(tangon)(entity);
            entity = entity.CollectiblesItemType;
            entity = entity.PROFILE_EFFECT;
            target = offset === entity;
            entity = function(argFoo, argBar) {
                entity = argFoo;
                backup = argBar;
                var _closure3_slot0 = entity;
                var _closure3_slot1 = backup;
                offset = _closure1_slot0;
                yankee = _closure1_slot2;
                option = 13;
                zuuluu = yankee[option];
                verify = undefined;
                tangon = offset.bind(verify)(zuuluu);
                zuuluu = tangon.useSharedValue;
                oscard = 0;
                foxtra = zuuluu.bind(tangon)(oscard);
                var _closure3_slot2 = foxtra;
                zuuluu = yankee[option];
                tangon = offset.bind(verify)(zuuluu);
                zuuluu = tangon.useSharedValue;
                golfie = zuuluu.bind(tangon)(oscard);
                var _closure3_slot3 = golfie;
                oscard = _closure1_slot5;
                tangon = oscard.useEffect;
                zuuluu = new Array(3);
                zuuluu[0] = foxtra;
                zuuluu[1] = entity;
                zuuluu[2] = golfie;
                entity = function() {
                    _fun00007: for(var _fun00008_ip = 0; ; ) switch(_fun00008_ip) {
 0:
                        tangon = _closure3_slot2;
                        zuuluu = tangon.set;
                        report = _closure3_slot0;
                        offset = 1;
                        michal = offset;
                        if(report) { _fun00008_ip = 102; continue _fun00007 }
 25:
                        verify = _closure1_slot0;
                        yankee = _closure1_slot2;
                        report = 13;
                        report = yankee[report];
                        oscard = undefined;
                        option = verify.bind(oscard)(report);
                        golfie = option.withDelay;
                        report = 14;
                        report = yankee[report];
                        verify = verify.bind(oscard)(report);
                        oscard = verify.withSpring;
                        report = {'duration': 500, 'dampingRatio': 0.7};
                        oscard = oscard.bind(verify)(offset, report);
                        report = 200;
                        michal = golfie.bind(option)(report, oscard);
 102:
                        michal = zuuluu.bind(tangon)(michal);
                        zuuluu = _closure3_slot3;
                        michal = zuuluu.set;
                        tangon = _closure3_slot0;
                        entity = offset;
                        if(tangon) { _fun00008_ip = 195; continue _fun00007 }
 126:
                        option = _closure1_slot0;
                        verify = _closure1_slot2;
                        tangon = 13;
                        tangon = verify[tangon];
                        report = undefined;
                        golfie = option.bind(report)(tangon);
                        oscard = golfie.withDelay;
                        tangon = 15;
                        tangon = verify[tangon];
                        verify = option.bind(report)(tangon);
                        option = verify.withTiming;
                        tangon = {};
                        report = 200;
                        tangon['duration'] = report;
                        tangon = option.bind(verify)(offset, tangon);
                        entity = oscard.bind(golfie)(report, tangon);
 195:
                        entity = michal.bind(zuuluu)(entity);
                        entity = undefined;
                        return entity;
                    }
                };
                entity = tangon.bind(oscard)(entity, zuuluu);
                entity = {};
                zuuluu = yankee[option];
                oscard = offset.bind(verify)(zuuluu);
                tangon = oscard.useAnimatedStyle;
                zuuluu = function() { // Original name: n
                    _fun00009: for(var _fun00010_ip = 0; ; ) switch(_fun00010_ip) {
 0:
                        entity = {};
                        golfie = _closure1_slot0;
                        option = _closure1_slot2;
                        tangon = 13;
                        michal = option[tangon];
                        oscard = undefined;
                        romeon = golfie.bind(oscard)(michal);
                        yankee = romeon.interpolate;
                        report = _closure3_slot2;
                        zuuluu = report.get;
                        offset = zuuluu.bind(report)();
                        verify = [0, 1];
                        zuuluu = [0.1, 1];
                        zuuluu = yankee.bind(romeon)(offset, verify, zuuluu);
                        entity['opacity'] = zuuluu;
                        zuuluu = {};
                        tangon = option[tangon];
                        golfie = golfie.bind(oscard)(tangon);
                        oscard = golfie.interpolate;
                        tangon = report.get;
                        report = tangon.bind(report)();
                        tangon = _closure3_slot1;
                        michal = 0;
                        if(!tangon) { _fun00010_ip = 125; continue _fun00009 }
 115:
                        michal = 0.6;
 125:
                        tangon = new Array(2);
                        tangon[0] = michal;
                        michal = 1;
                        tangon[1] = michal;
                        michal = [0, 1];
                        michal = oscard.bind(golfie)(report, michal, tangon);
                        zuuluu['scale'] = michal;
                        michal = new Array(1);
                        michal[0] = zuuluu;
                        entity['transform'] = michal;
                        return entity;
                    }
                };
                romeon = {};
                kiloes = yankee[option];
                kiloes = offset.bind(verify)(kiloes);
                kiloes = kiloes.interpolate;
                romeon['interpolate'] = kiloes;
                romeon['springInput'] = foxtra;
                romeon['isProfileEffect'] = backup;
                zuuluu['__closure'] = romeon;
                romeon = 5554673710726.0;
                zuuluu['__workletHash'] = romeon;
                romeon = _closure1_slot16;
                zuuluu['__initData'] = romeon;
                zuuluu = tangon.bind(oscard)(zuuluu);
                entity['previewViewStyle'] = zuuluu;
                zuuluu = yankee[option];
                oscard = offset.bind(verify)(zuuluu);
                tangon = oscard.useAnimatedStyle;
                zuuluu = function() { // Original name: s
                    entity = {};
                    oscard = _closure1_slot0;
                    golfie = _closure1_slot2;
                    michal = 13;
                    zuuluu = golfie[michal];
                    report = undefined;
                    yankee = oscard.bind(report)(zuuluu);
                    offset = yankee.interpolate;
                    tangon = _closure3_slot2;
                    zuuluu = tangon.get;
                    verify = zuuluu.bind(tangon)();
                    option = [0, 1];
                    zuuluu = [0, 1];
                    zuuluu = offset.bind(yankee)(verify, option, zuuluu);
                    entity['opacity'] = zuuluu;
                    zuuluu = {};
                    michal = golfie[michal];
                    golfie = oscard.bind(report)(michal);
                    oscard = golfie.interpolate;
                    michal = tangon.get;
                    report = michal.bind(tangon)();
                    tangon = [0, 1];
                    michal = [0.75, 1];
                    michal = oscard.bind(golfie)(report, tangon, michal);
                    zuuluu['scale'] = michal;
                    michal = new Array(1);
                    michal[0] = zuuluu;
                    entity['transform'] = michal;
                    return entity;
                };
                romeon = {};
                backup = yankee[option];
                backup = offset.bind(verify)(backup);
                backup = backup.interpolate;
                romeon['interpolate'] = backup;
                romeon['springInput'] = foxtra;
                zuuluu['__closure'] = romeon;
                romeon = 4517716462039.0;
                zuuluu['__workletHash'] = romeon;
                romeon = _closure1_slot17;
                zuuluu['__initData'] = romeon;
                zuuluu = tangon.bind(oscard)(zuuluu);
                entity['textViewStyle'] = zuuluu;
                zuuluu = yankee[option];
                tangon = offset.bind(verify)(zuuluu);
                zuuluu = tangon.useAnimatedStyle;
                michal = function() { // Original name: c
                    entity = {};
                    tangon = _closure1_slot0;
                    zuuluu = _closure1_slot2;
                    michal = 13;
                    zuuluu = zuuluu[michal];
                    michal = undefined;
                    oscard = tangon.bind(michal)(zuuluu);
                    report = oscard.interpolate;
                    zuuluu = _closure3_slot3;
                    michal = zuuluu.get;
                    tangon = michal.bind(zuuluu)();
                    zuuluu = [0, 1];
                    michal = [0.5, 0];
                    michal = report.bind(oscard)(tangon, zuuluu, michal);
                    entity['opacity'] = michal;
                    return entity;
                };
                oscard = {};
                option = yankee[option];
                option = offset.bind(verify)(option);
                option = option.interpolate;
                oscard['interpolate'] = option;
                oscard['linearInput'] = golfie;
                michal['__closure'] = oscard;
                oscard = 6018737312.0;
                michal['__workletHash'] = oscard;
                report = _closure1_slot18;
                michal['__initData'] = report;
                michal = zuuluu.bind(tangon)(michal);
                entity['curtainViewStyle'] = michal;
                return entity;
            };
            entity = entity.bind(tangon)(zuuluu, target);
            status = entity.previewViewStyle;
            papara = entity.textViewStyle;
            offset = entity.curtainViewStyle;
            foxtra = _closure1_slot3;
            zuuluu = variable40.items;
            entity = 1;
            zuuluu = foxtra.bind(tangon)(zuuluu, entity);
            entity = 0;
            entity = zuuluu[entity];
            var _closure2_slot10 = entity;
            entity = 23;
            entity = backup[entity];
            foxtra = option.bind(tangon)(entity);
            zuuluu = foxtra.useHandleUseNow;
            entity = {};
            entity['product'] = variable40;
            entity = zuuluu.bind(foxtra)(entity);
            ctrled = entity.handleUseNow;
            vacuum = entity.isApplying;
            zuuluu = report.getAvatarSource;
            entity = 24;
            entity = backup[entity];
            entity = option.bind(tangon)(entity);
            entity = entity.avatarPlaceholderSizeRatio;
            michal = michal * entity;
            entity = false;
            entity = zuuluu.bind(report)(tangon, entity, michal);
            var _closure2_slot11 = entity;
            entity = 25;
            entity = backup[entity];
            zuuluu = option.bind(tangon)(entity);
            michal = zuuluu.usePreviewCollectibleProduct;
            entity = true;
            entity = michal.bind(zuuluu)(variable40, entity);
            zuuluu = _closure1_slot12;
            michal = _closure1_slot6;
            entity = {};
            report = verify.root;
            entity['style'] = report;
            report = variable40.skuId;
            entity['id'] = report;
            foxtra = _closure1_slot10;
            report = 26;
            report = backup[report];
            romeon = romeon.bind(tangon)(report);
            report = {};
            kiloes = verify.backdrop;
            report['style'] = kiloes;
            kiloes = _closure1_slot9;
            sizing = kiloes.START;
            report['start'] = sizing;
            kiloes = kiloes.END;
            report['end'] = kiloes;
            kiloes = [0, 0.05, 0.6, 0.95, 1];
            report['locations'] = kiloes;
            report['colors'] = golfie;
            golfie = 27;
            golfie = backup[golfie];
            golfie = option.bind(tangon)(golfie);
            kiloes = golfie.SafeAreaPaddingView;
            backup = {'style': null, 'top': true, 'bottom': true, 'left': true, 'right': true};
            option = verify.main;
            golfie = new Array(1);
            golfie[0] = option;
            backup['style'] = golfie;
            option = _closure1_slot15;
            golfie = {};
            config = null;
            result = config == output;
            sizing = undefined;
            if(result) { _fun00002_ip = 831; continue _fun00001 }
 816:
            result = output.label;
            output = result.toHexString;
            sizing = output.bind(result)();
 831:
            if(!(config != sizing)) { _fun00002_ip = 838; continue _fun00001 }
 835:
            yankee = sizing;
 838:
            golfie['tintColor'] = yankee;
            golfie = foxtra.bind(tangon)(option, golfie);
            sizing = new Array(3);
            sizing[0] = golfie;
            output = _closure1_slot12;
            option = _closure1_slot6;
            golfie = {};
            yankee = verify.body;
            golfie['style'] = yankee;
            sequen = _closure1_slot10;
            echoed = _closure1_slot1;
            result = _closure1_slot2;
            yankee = 13;
            result = result[yankee];
            result = echoed.bind(tangon)(result);
            update = result.View;
            result = {};
            sierra = verify.preview;
            echoed = new Array(3);
            echoed[0] = sierra;
            sierra = !target;
            if(target) { _fun00002_ip = 933; continue _fun00001 }
 927:
            sierra = verify.previewAvatarDeco;
 933:
            echoed[1] = sierra;
            echoed[2] = status;
            result['style'] = echoed;
            status = _closure1_slot0;
            echoed = _closure1_slot2;
            sierra = 28;
            sierra = echoed[sierra];
            whisks = status.bind(tangon)(sierra);
            limora = whisks.match;
            sierra = variable40.type;
            equals = limora.bind(whisks)(sierra);
            whisks = equals.with;
            sierra = echoed[cntext];
            sierra = status.bind(tangon)(sierra);
            sierra = sierra.CollectiblesItemType;
            limora = sierra.AVATAR_DECORATION;
            sierra = function() {
                tangon = _closure1_slot10;
                michal = _closure1_slot1;
                zuuluu = _closure1_slot2;
                entity = 24;
                entity = zuuluu[entity];
                zuuluu = undefined;
                michal = michal.bind(zuuluu)(entity);
                entity = {};
                oscard = _closure2_slot10;
                entity['item'] = oscard;
                oscard = _closure2_slot9;
                entity['size'] = oscard;
                report = _closure2_slot11;
                entity['avatarSource'] = report;
                report = true;
                entity['animate'] = report;
                entity = tangon.bind(zuuluu)(michal, entity);
                return entity;
            };
            equals = whisks.bind(equals)(limora, sierra);
            whisks = equals.with;
            sierra = echoed[cntext];
            sierra = status.bind(tangon)(sierra);
            sierra = sierra.CollectiblesItemType;
            limora = sierra.PROFILE_EFFECT;
            sierra = function() {
                tangon = _closure1_slot10;
                michal = _closure1_slot1;
                zuuluu = _closure1_slot2;
                entity = 29;
                entity = zuuluu[entity];
                zuuluu = undefined;
                michal = michal.bind(zuuluu)(entity);
                entity = {};
                oscard = _closure2_slot4;
                entity['user'] = oscard;
                oscard = _closure2_slot3;
                oscard = oscard.profilePreview;
                entity['style'] = oscard;
                report = _closure2_slot0;
                oscard = report.items;
                report = 0;
                report = oscard[report];
                entity['pendingProfileEffectRecord'] = report;
                report = 74;
                entity['containerMargin'] = report;
                entity = tangon.bind(zuuluu)(michal, entity);
                return entity;
            };
            limora = whisks.bind(equals)(limora, sierra);
            sierra = limora.with;
            cntext = echoed[cntext];
            cntext = status.bind(tangon)(cntext);
            cntext = cntext.CollectiblesItemType;
            status = cntext.BUNDLE;
            cntext = function() {
                tangon = _closure1_slot10;
                michal = _closure1_slot1;
                zuuluu = _closure1_slot2;
                entity = 29;
                entity = zuuluu[entity];
                zuuluu = undefined;
                michal = michal.bind(zuuluu)(entity);
                entity = {};
                oscard = _closure2_slot4;
                entity['user'] = oscard;
                oscard = _closure2_slot3;
                oscard = oscard.profilePreview;
                entity['style'] = oscard;
                report = _closure2_slot0;
                oscard = report.items;
                report = 1;
                report = oscard[report];
                entity['pendingProfileEffectRecord'] = report;
                report = 74;
                entity['containerMargin'] = report;
                entity = tangon.bind(zuuluu)(michal, entity);
                return entity;
            };
            sierra = sierra.bind(limora)(status, cntext);
            status = sierra.otherwise;
            cntext = function() {
                entity = null;
                return entity;
            };
            cntext = status.bind(sierra)(cntext);
            result['children'] = cntext;
            update = sequen.bind(tangon)(update, result);
            result = new Array(2);
            result[0] = update;
            sequen = _closure1_slot10;
            update = _closure1_slot1;
            echoed = echoed[yankee];
            echoed = update.bind(tangon)(echoed);
            update = echoed.View;
            echoed = {};
            status = verify.messages;
            cntext = new Array(3);
            cntext[0] = status;
            if(target) { _fun00002_ip = 1186; continue _fun00001 }
 1178:
            target = verify.messagesAvatarDeco;
            _fun00002_ip = 1192; continue _fun00001;
 1186:
            target = verify.messagesProfileEffect;
 1192:
            cntext[1] = target;
            cntext[2] = papara;
            echoed['style'] = cntext;
            if(!(config == record)) { _fun00002_ip = 1450; continue _fun00001 }
 1211:
            papara = _closure1_slot12;
            cntext = _closure1_slot11;
            config = {};
            limora = _closure1_slot10;
            variable36 = _closure1_slot0;
            variable37 = _closure1_slot2;
            status = 30;
            target = variable37[status];
            target = variable36.bind(tangon)(target);
            sierra = target.Text;
            target = {'variant': 'heading-xl/bold', 'color': 'white'};
            whisks = verify.title;
            target['style'] = whisks;
            whisks = 12;
            equals = variable37[whisks];
            equals = variable36.bind(tangon)(equals);
            variable39 = equals.intl;
            variable38 = variable39.format;
            equals = variable37[whisks];
            equals = variable36.bind(tangon)(equals);
            equals = equals.t;
            quebec = equals.YNaxMj;
            equals = {};
            variable40 = variable40.name;
            equals['itemName'] = variable40;
            equals = variable38.bind(variable39)(quebec, equals);
            target['children'] = equals;
            sierra = limora.bind(tangon)(sierra, target);
            target = new Array(2);
            target[0] = sierra;
            status = variable37[status];
            status = variable36.bind(tangon)(status);
            sierra = status.Text;
            status = {'variant': 'text-md/medium', 'color': 'white'};
            equals = verify.title;
            status['style'] = equals;
            equals = variable37[whisks];
            equals = variable36.bind(tangon)(equals);
            quebec = equals.intl;
            equals = quebec.string;
            whisks = variable37[whisks];
            whisks = variable36.bind(tangon)(whisks);
            whisks = whisks.t;
            whisks = whisks.44b50t;
            whisks = equals.bind(quebec)(whisks);
            status['children'] = whisks;
            status = limora.bind(tangon)(sierra, status);
            target[1] = status;
            config['children'] = target;
            config = papara.bind(tangon)(cntext, config);
            _fun00002_ip = 1454; continue _fun00001;
 1450:
            config = record.bind(tangon)();
 1454:
            echoed['children'] = config;
            echoed = sequen.bind(tangon)(update, echoed);
            result[1] = echoed;
            golfie['children'] = result;
            golfie = output.bind(tangon)(option, golfie);
            sizing[1] = golfie;
            option = _closure1_slot10;
            result = _closure1_slot6;
            output = {};
            golfie = verify.footer;
            output['style'] = golfie;
            golfie = _closure1_slot1;
            oscard = _closure1_slot2;
            echoed = 31;
            echoed = oscard[echoed];
            update = golfie.bind(tangon)(echoed);
            echoed = {};
            echoed['loading'] = vacuum;
            echoed['onPress'] = ctrled;
            source = function() { // Original name: text
                tangon = _closure1_slot10;
                option = _closure1_slot0;
                verify = _closure1_slot2;
                entity = 30;
                entity = verify[entity];
                zuuluu = undefined;
                entity = option.bind(zuuluu)(entity);
                michal = entity.Text;
                entity = {'variant': 'text-md/semibold', 'color': 'white'};
                report = 12;
                oscard = verify[report];
                oscard = option.bind(zuuluu)(oscard);
                golfie = oscard.intl;
                oscard = golfie.string;
                report = verify[report];
                report = option.bind(zuuluu)(report);
                report = report.t;
                report = report.MAS7uL;
                report = oscard.bind(golfie)(report);
                entity['children'] = report;
                entity = tangon.bind(zuuluu)(michal, entity);
                return entity;
            };
            echoed['text'] = source;
            source = verify.cta;
            echoed['style'] = source;
            echoed = option.bind(tangon)(update, echoed);
            output['children'] = echoed;
            output = option.bind(tangon)(result, output);
            sizing[2] = output;
            backup['children'] = sizing;
            backup = zuuluu.bind(tangon)(kiloes, backup);
            report['children'] = backup;
            romeon = foxtra.bind(tangon)(romeon, report);
            report = new Array(2);
            report[0] = romeon;
            oscard = oscard[yankee];
            oscard = golfie.bind(tangon)(oscard);
            golfie = oscard.View;
            oscard = {};
            yankee = verify.curtain;
            verify = new Array(2);
            verify[0] = yankee;
            verify[1] = offset;
            oscard['style'] = verify;
            verify = 'none';
            oscard['pointerEvents'] = verify;
            oscard = option.bind(tangon)(golfie, oscard);
            report[1] = oscard;
            entity['children'] = report;
            entity = zuuluu.bind(tangon)(michal, entity);
            return entity;
        }
    };
    zuuluu['default'] = michal;
    return entity;
})();