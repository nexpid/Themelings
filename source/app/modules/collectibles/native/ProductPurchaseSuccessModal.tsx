// app/modules/collectibles/native/ProductPurchaseSuccessModal.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    report = argBar;
    golfie = argBaz;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    var _closure1_slot1 = golfie;
    var _closure1_slot2 = oscard;
    entity = global;
    verify = entity.Object;
    option = verify.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = option.bind(verify)(zuuluu, entity, tangon);
    entity = 0;
    tangon = oscard[entity];
    entity = undefined;
    tangon = golfie.bind(entity)(tangon);
    var _closure1_slot3 = tangon;
    tangon = 1;
    tangon = oscard[tangon];
    tangon = golfie.bind(entity)(tangon);
    var _closure1_slot4 = tangon;
    tangon = 2;
    option = oscard[tangon];
    tangon = argCor;
    tangon = tangon.bind(entity)(option);
    var _closure1_slot5 = tangon;
    tangon = 3;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    option = tangon.Image;
    var _closure1_slot6 = option;
    option = tangon.useWindowDimensions;
    var _closure1_slot7 = option;
    tangon = tangon.View;
    var _closure1_slot8 = tangon;
    tangon = 4;
    tangon = oscard[tangon];
    tangon = golfie.bind(entity)(tangon);
    var _closure1_slot9 = tangon;
    tangon = 5;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.VerticalGradient;
    var _closure1_slot10 = tangon;
    tangon = 6;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    option = tangon.jsx;
    var _closure1_slot11 = option;
    option = tangon.Fragment;
    var _closure1_slot12 = option;
    tangon = tangon.jsxs;
    var _closure1_slot13 = tangon;
    tangon = 7;
    option = oscard[tangon];
    offset = report.bind(entity)(option);
    verify = offset.createStyles;
    option = {};
    yankee = {};
    romeon = 'flex-start';
    yankee['alignSelf'] = romeon;
    romeon = 8;
    foxtra = oscard[romeon];
    foxtra = golfie.bind(entity)(foxtra);
    foxtra = foxtra.spacing;
    foxtra = foxtra.PX_16;
    yankee['marginHorizontal'] = foxtra;
    option['closeButton'] = yankee;
    yankee = {};
    romeon = oscard[romeon];
    romeon = golfie.bind(entity)(romeon);
    romeon = romeon.colors;
    romeon = romeon.HEADER_PRIMARY;
    yankee['tintColor'] = romeon;
    option['closeButtonIcon'] = yankee;
    option = verify.bind(offset)(option);
    var _closure1_slot14 = option;
    tangon = oscard[tangon];
    verify = report.bind(entity)(tangon);
    option = verify.createStyles;
    tangon = function(argFoo) {
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            verify = argFoo;
            entity = {};
            michal = {};
            yankee = 1;
            michal['flex'] = yankee;
            offset = _closure1_slot1;
            option = _closure1_slot2;
            oscard = 8;
            tangon = option[oscard];
            report = undefined;
            tangon = offset.bind(report)(tangon);
            tangon = tangon.colors;
            tangon = tangon.BACKGROUND_PRIMARY;
            michal['backgroundColor'] = tangon;
            entity['root'] = michal;
            michal = {'resizeMode': 'cover', 'position': 'absolute', 'top': 0, 'bottom': 0, 'left': 0, 'right': 0};
            entity['imageBackground'] = michal;
            michal = {'position': 'absolute', 'top': 0, 'bottom': 0, 'left': 0, 'right': 0};
            entity['backdrop'] = michal;
            michal = {};
            michal['flex'] = yankee;
            entity['main'] = michal;
            michal = {'position': 'absolute', 'backgroundColor': null, 'top': 0, 'bottom': 0, 'left': 0, 'right': 0};
            golfie = option[oscard];
            golfie = offset.bind(report)(golfie);
            golfie = golfie.colors;
            golfie = golfie.BLACK;
            michal['backgroundColor'] = golfie;
            entity['curtain'] = michal;
            golfie = 'center';
            michal = {'flex': 1, 'flexDirection': 'column', 'justifyContent': 'center'};
            entity['body'] = michal;
            michal = {'flexDirection': 'row', 'justifyContent': 'center', 'alignItems': 'center', 'overflow': 'hidden'};
            romeon = _closure1_slot0;
            offset = 9;
            option = option[offset];
            option = romeon.bind(report)(option);
            option = option.CollectiblesItemType;
            romeon = option.AVATAR_DECORATION;
            option = 0;
            if(!(verify === romeon)) { _fun00002_ip = 226; continue _fun00001 }
 223:
            option = yankee;
 226:
            michal['flex'] = option;
            yankee = _closure1_slot0;
            option = _closure1_slot2;
            option = option[offset];
            option = yankee.bind(report)(option);
            option = option.CollectiblesItemType;
            option = option.AVATAR_DECORATION;
            tangon = 0;
            if(!(verify === option)) { _fun00002_ip = 271; continue _fun00001 }
 265:
            tangon = '20%';
 271:
            michal['marginTop'] = tangon;
            option = _closure1_slot0;
            tangon = _closure1_slot2;
            tangon = tangon[offset];
            tangon = option.bind(report)(tangon);
            tangon = tangon.CollectiblesItemType;
            option = tangon.NAMEPLATE;
            tangon = undefined;
            if(!(verify === option)) { _fun00002_ip = 338; continue _fun00001 }
 310:
            yankee = _closure1_slot1;
            option = _closure1_slot2;
            option = option[oscard];
            option = yankee.bind(report)(option);
            option = option.spacing;
            tangon = option.PX_32;
 338:
            michal['marginHorizontal'] = tangon;
            entity['preview'] = michal;
            michal = {'paddingTop': null, 'height': null, 'flexDirection': 'column', 'alignItems': 'center', 'justifyContent': 'flex-start'};
            yankee = _closure1_slot1;
            tangon = _closure1_slot2;
            option = tangon[oscard];
            option = yankee.bind(report)(option);
            option = option.spacing;
            option = option.PX_24;
            michal['paddingTop'] = option;
            option = _closure1_slot0;
            tangon = tangon[offset];
            tangon = option.bind(report)(tangon);
            tangon = tangon.CollectiblesItemType;
            option = tangon.AVATAR_DECORATION;
            tangon = undefined;
            if(!(verify === option)) { _fun00002_ip = 433; continue _fun00001 }
 427:
            tangon = '32%';
 433:
            michal['height'] = tangon;
            tangon = _closure1_slot1;
            zuuluu = _closure1_slot2;
            option = zuuluu[oscard];
            option = tangon.bind(report)(option);
            option = option.spacing;
            option = option.PX_16;
            michal['gap'] = option;
            entity['messages'] = michal;
            michal = {};
            michal['textAlign'] = golfie;
            golfie = zuuluu[oscard];
            golfie = tangon.bind(report)(golfie);
            golfie = golfie.spacing;
            golfie = golfie.PX_32;
            michal['marginHorizontal'] = golfie;
            entity['title'] = michal;
            michal = {};
            golfie = zuuluu[oscard];
            golfie = tangon.bind(report)(golfie);
            golfie = golfie.spacing;
            golfie = golfie.PX_16;
            michal['marginBottom'] = golfie;
            entity['footer'] = michal;
            michal = {};
            golfie = zuuluu[oscard];
            golfie = tangon.bind(report)(golfie);
            golfie = golfie.spacing;
            golfie = golfie.PX_16;
            michal['paddingVertical'] = golfie;
            golfie = zuuluu[oscard];
            golfie = tangon.bind(report)(golfie);
            golfie = golfie.spacing;
            golfie = golfie.PX_24;
            michal['marginHorizontal'] = golfie;
            zuuluu = zuuluu[oscard];
            zuuluu = tangon.bind(report)(zuuluu);
            zuuluu = zuuluu.radii;
            zuuluu = zuuluu.round;
            michal['borderRadius'] = zuuluu;
            entity['cta'] = michal;
            michal = {'alignSelf': 'flex-end', 'flexGrow': 1};
            entity['profilePreview'] = michal;
            return entity;
        }
    };
    tangon = option.bind(verify)(tangon);
    var _closure1_slot15 = tangon;
    tangon = function(argFoo) { // Original name: CancelButton
        entity = argFoo;
        entity = entity.tintColor;
        var _closure2_slot0 = entity;
        michal = _closure1_slot14;
        tangon = undefined;
        report = michal.bind(tangon)();
        var _closure2_slot1 = report;
        option = _closure1_slot5;
        golfie = option.useCallback;
        zuuluu = function() {
            zuuluu = _closure1_slot1;
            michal = _closure1_slot2;
            entity = 10;
            michal = michal[entity];
            entity = undefined;
            zuuluu = zuuluu.bind(entity)(michal);
            michal = zuuluu.close;
            michal = michal.bind(zuuluu)();
            return entity;
        };
        michal = new Array(0);
        golfie = golfie.bind(option)(zuuluu, michal);
        zuuluu = _closure1_slot11;
        verify = _closure1_slot0;
        offset = _closure1_slot2;
        entity = 11;
        entity = offset[entity];
        entity = verify.bind(tangon)(entity);
        michal = entity.HeaderBackButton;
        entity = {};
        entity['onPress'] = golfie;
        oscard = function() { // Original name: backImage
            tangon = _closure1_slot11;
            michal = _closure1_slot0;
            zuuluu = _closure1_slot2;
            entity = 12;
            entity = zuuluu[entity];
            zuuluu = undefined;
            entity = michal.bind(zuuluu)(entity);
            michal = entity.XSmallIcon;
            entity = {};
            report = 'lg';
            entity['size'] = report;
            report = _closure2_slot1;
            oscard = report.closeButtonIcon;
            report = new Array(2);
            report[0] = oscard;
            oscard = {};
            golfie = _closure2_slot0;
            oscard['tintColor'] = golfie;
            report[1] = oscard;
            entity['style'] = report;
            entity = tangon.bind(zuuluu)(michal, entity);
            return entity;
        };
        entity['backImage'] = oscard;
        oscard = 13;
        golfie = offset[oscard];
        golfie = verify.bind(tangon)(golfie);
        option = golfie.intl;
        golfie = option.string;
        oscard = offset[oscard];
        oscard = verify.bind(tangon)(oscard);
        oscard = oscard.t;
        oscard = oscard.cpT0Cg;
        oscard = golfie.bind(option)(oscard);
        entity['accessibilityLabel'] = oscard;
        oscard = false;
        entity['labelVisible'] = oscard;
        report = report.closeButton;
        entity['style'] = report;
        entity = zuuluu.bind(tangon)(michal, entity);
        return entity;
    };
    var _closure1_slot16 = tangon;
    tangon = {};
    option = 'function ProductPurchaseSuccessModalTsx1(){const{interpolate,springInput,isProfileEffect}=this.__closure;return{opacity:interpolate(springInput.get(),[0,1],[0.1,1]),transform:[{scale:interpolate(springInput.get(),[0,1],[isProfileEffect?0.6:0,1])}]};}';
    tangon['code'] = option;
    var _closure1_slot17 = tangon;
    tangon = {};
    option = 'function ProductPurchaseSuccessModalTsx2(){const{interpolate,springInput}=this.__closure;return{opacity:interpolate(springInput.get(),[0,1],[0,1]),transform:[{scale:interpolate(springInput.get(),[0,1],[0.75,1])}]};}';
    tangon['code'] = option;
    var _closure1_slot18 = tangon;
    tangon = {};
    option = 'function ProductPurchaseSuccessModalTsx3(){const{interpolate,linearInput}=this.__closure;return{opacity:interpolate(linearInput.get(),[0,1],[0.5,0])};}';
    tangon['code'] = option;
    var _closure1_slot19 = tangon;
    tangon = [80, 79, 78, 75, 72, 50, 45, 35, 70];
    var _closure1_slot20 = tangon;
    tangon = 18;
    tangon = oscard[tangon];
    golfie = golfie.bind(entity)(tangon);
    tangon = 'black';
    golfie = golfie.bind(entity)(tangon);
    tangon = golfie.toHexString;
    tangon = tangon.bind(golfie)();
    var _closure1_slot21 = tangon;
    tangon = function(argFoo) { // Original name: ProductPurchaseGradientBackground
        michal = argFoo;
        zuuluu = michal.product;
        report = _closure1_slot15;
        michal = zuuluu.type;
        tangon = undefined;
        golfie = report.bind(tangon)(michal);
        michal = _closure1_slot1;
        option = _closure1_slot2;
        report = 19;
        report = option[report];
        report = michal.bind(tangon)(report);
        zuuluu = zuuluu.styles;
        zuuluu = report.bind(tangon)(zuuluu);
        romeon = zuuluu.backgroundColors;
        var _closure2_slot0 = romeon;
        verify = _closure1_slot0;
        report = 20;
        zuuluu = option[report];
        foxtra = verify.bind(tangon)(zuuluu);
        yankee = foxtra.useToken;
        zuuluu = 8;
        offset = option[zuuluu];
        offset = michal.bind(tangon)(offset);
        offset = offset.colors;
        offset = offset.BACKGROUND_PRIMARY;
        yankee = yankee.bind(foxtra)(offset);
        var _closure2_slot1 = yankee;
        report = option[report];
        verify = verify.bind(tangon)(report);
        report = verify.useToken;
        zuuluu = option[zuuluu];
        zuuluu = michal.bind(tangon)(zuuluu);
        zuuluu = zuuluu.colors;
        zuuluu = zuuluu.BACKGROUND_SECONDARY;
        offset = report.bind(verify)(zuuluu);
        var _closure2_slot2 = offset;
        verify = _closure1_slot5;
        report = verify.useMemo;
        zuuluu = new Array(3);
        zuuluu[0] = romeon;
        zuuluu[1] = yankee;
        zuuluu[2] = offset;
        entity = function() {
            _fun00003: for(var _fun00004_ip = 0; ; ) switch(_fun00004_ip) {
 0:
                michal = _closure2_slot0;
                entity = null;
                if(!(entity != michal)) { _fun00004_ip = 98; continue _fun00003 }
 13:
                michal = _closure2_slot0;
                tangon = michal.primary;
                entity = tangon.toHexString;
                tangon = entity.bind(tangon)();
                entity = new Array(5);
                entity[0] = tangon;
                report = michal.primary;
                tangon = report.toHexString;
                tangon = tangon.bind(report)();
                entity[1] = tangon;
                tangon = michal.secondary;
                michal = tangon.toHexString;
                michal = michal.bind(tangon)();
                entity[2] = michal;
                michal = _closure1_slot21;
                entity[3] = michal;
                entity[4] = michal;
                _fun00004_ip = 140; continue _fun00003;
 98:
                tangon = _closure2_slot1;
                michal = new Array(5);
                michal[0] = tangon;
                michal[1] = tangon;
                zuuluu = _closure2_slot2;
                michal[2] = zuuluu;
                zuuluu = _closure1_slot21;
                michal[3] = zuuluu;
                michal[4] = zuuluu;
                entity = michal;
 140:
                return entity;
            }
        };
        report = report.bind(verify)(entity, zuuluu);
        zuuluu = _closure1_slot11;
        entity = 21;
        entity = option[entity];
        michal = michal.bind(tangon)(entity);
        entity = {};
        golfie = golfie.backdrop;
        entity['style'] = golfie;
        oscard = _closure1_slot10;
        golfie = oscard.START;
        entity['start'] = golfie;
        oscard = oscard.END;
        entity['end'] = oscard;
        oscard = [0, 0.05, 0.6, 0.95, 1];
        entity['locations'] = oscard;
        entity['colors'] = report;
        entity = zuuluu.bind(tangon)(michal, entity);
        return entity;
    };
    var _closure1_slot22 = tangon;
    tangon = 36;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/collectibles/native/ProductPurchaseSuccessModal.tsx';
    tangon = report.bind(oscard)(tangon);
    michal = function(argFoo) { // Original name: _default
        _fun00005: for(var _fun00006_ip = 0; ; ) switch(_fun00006_ip) {
 0:
            entity = argFoo;
            variable36 = entity.product;
            var _closure2_slot0 = variable36;
            sizing = entity.useCategoryImage;
            tangon = undefined;
            if(!(sizing === tangon)) { _fun00006_ip = 29; continue _fun00005 }
 27:
            sizing = false;
 29:
            var _closure2_slot1 = sizing;
            config = entity.renderMessages;
            romeon = entity.onSuccess;
            var _closure2_slot2 = tangon;
            var _closure2_slot3 = tangon;
            var _closure2_slot4 = tangon;
            var _closure2_slot5 = tangon;
            var _closure2_slot6 = tangon;
            var _closure2_slot7 = tangon;
            var _closure2_slot8 = tangon;
            var _closure2_slot9 = tangon;
            var _closure2_slot10 = tangon;
            var _closure2_slot11 = tangon;
            michal = _closure1_slot15;
            entity = variable36.type;
            verify = michal.bind(tangon)(entity);
            _closure2_slot4 = verify;
            zuuluu = _closure1_slot0;
            yankee = _closure1_slot2;
            entity = 22;
            entity = yankee[entity];
            michal = zuuluu.bind(tangon)(entity);
            entity = michal.useCurrentUser;
            option = entity.bind(michal)();
            _closure2_slot5 = option;
            golfie = _closure1_slot1;
            entity = 19;
            entity = yankee[entity];
            michal = golfie.bind(tangon)(entity);
            entity = variable36.styles;
            entity = michal.bind(tangon)(entity);
            output = entity.backgroundColors;
            entity = 20;
            entity = yankee[entity];
            report = zuuluu.bind(tangon)(entity);
            michal = report.useToken;
            entity = 8;
            entity = yankee[entity];
            entity = golfie.bind(tangon)(entity);
            entity = entity.colors;
            entity = entity.INTERACTIVE_ACTIVE;
            kiloes = michal.bind(report)(entity);
            report = _closure1_slot5;
            michal = report.useRef;
            entity = _closure1_slot20;
            entity = michal.bind(report)(entity);
            _closure2_slot2 = entity;
            golfie = report.useCallback;
            michal = function() {
                _fun00007: for(var _fun00008_ip = 0; ; ) switch(_fun00008_ip) {
 0:
                    tangon = _closure1_slot4;
                    entity = _closure2_slot2;
                    zuuluu = entity.current;
                    entity = undefined;
                    golfie = tangon.bind(entity)(zuuluu);
                    option = 0;
                    oscard = golfie[option];
                    tangon = golfie.slice;
                    zuuluu = 1;
                    zuuluu = tangon.bind(golfie)(zuuluu);
                    tangon = null;
                    if(!(tangon != oscard)) { _fun00008_ip = 63; continue _fun00007 }
 51:
                    golfie = zuuluu.length;
                    if(!(option !== golfie)) { _fun00008_ip = 196; continue _fun00007 }
 63:
                    option = zuuluu.length;
                    golfie = _closure1_slot20;
                    verify = golfie.length;
                    golfie = 2;
                    golfie = verify / golfie;
                    if(!(!(option >= golfie))) { _fun00008_ip = 142; continue _fun00007 }
 88:
                    offset = _closure1_slot0;
                    yankee = _closure1_slot2;
                    golfie = 17;
                    option = yankee[golfie];
                    verify = offset.bind(entity)(option);
                    option = verify.triggerHapticFeedback;
                    golfie = yankee[golfie];
                    golfie = offset.bind(entity)(golfie);
                    golfie = golfie.HapticFeedbackTypes;
                    golfie = golfie.IMPACT_MEDIUM;
                    golfie = option.bind(verify)(golfie);
                    _fun00008_ip = 248; continue _fun00007;
 142:
                    offset = _closure1_slot0;
                    yankee = _closure1_slot2;
                    golfie = 17;
                    option = yankee[golfie];
                    verify = offset.bind(entity)(option);
                    option = verify.triggerHapticFeedback;
                    golfie = yankee[golfie];
                    golfie = offset.bind(entity)(golfie);
                    golfie = golfie.HapticFeedbackTypes;
                    golfie = golfie.IMPACT_LIGHT;
                    golfie = option.bind(verify)(golfie);
                    _fun00008_ip = 248; continue _fun00007;
 196:
                    verify = _closure1_slot0;
                    offset = _closure1_slot2;
                    report = 17;
                    golfie = offset[report];
                    option = verify.bind(entity)(golfie);
                    golfie = option.triggerHapticFeedback;
                    report = offset[report];
                    report = verify.bind(entity)(report);
                    report = report.HapticFeedbackTypes;
                    report = report.IMPACT_HEAVY;
                    report = golfie.bind(option)(report);
 248:
                    if(!(tangon != oscard)) { _fun00008_ip = 270; continue _fun00007 }
 252:
                    tangon = global;
                    report = tangon.setTimeout;
                    tangon = _closure2_slot3;
                    tangon = report.bind(entity)(tangon, oscard);
 270:
                    michal = _closure2_slot2;
                    michal['current'] = zuuluu;
                    return entity;
                }
            };
            entity = new Array(0);
            entity = golfie.bind(report)(michal, entity);
            _closure2_slot3 = entity;
            golfie = report.useEffect;
            michal = new Array(1);
            michal[0] = entity;
            entity = function() {
                michal = _closure2_slot3;
                entity = undefined;
                entity = michal.bind(entity)();
                entity = function() {
                    michal = _closure2_slot2;
                    entity = new Array(0);
                    michal['current'] = entity;
                    entity = undefined;
                    return entity;
                };
                return entity;
            };
            entity = golfie.bind(report)(entity, michal);
            entity = 23;
            entity = yankee[entity];
            michal = zuuluu.bind(tangon)(entity);
            entity = michal.useAvatarDecorationPreviewSizes;
            entity = entity.bind(michal)();
            golfie = entity.avatarSize;
            entity = entity.avatarDecorationSize;
            _closure2_slot6 = entity;
            entity = 24;
            entity = yankee[entity];
            foxtra = zuuluu.bind(tangon)(entity);
            offset = foxtra.useStateFromStores;
            entity = _closure1_slot9;
            michal = new Array(1);
            michal[0] = entity;
            entity = function() {
                entity = _closure1_slot9;
                entity = entity.useReducedMotion;
                return entity;
            };
            offset = offset.bind(foxtra)(michal, entity);
            _closure2_slot7 = offset;
            foxtra = variable36.type;
            papara = 9;
            entity = yankee[papara];
            entity = zuuluu.bind(tangon)(entity);
            entity = entity.CollectiblesItemType;
            entity = entity.PROFILE_EFFECT;
            michal = function(argFoo, argBar) {
                entity = argFoo;
                backup = argBar;
                var _closure3_slot0 = entity;
                var _closure3_slot1 = backup;
                offset = _closure1_slot0;
                yankee = _closure1_slot2;
                option = 14;
                zuuluu = yankee[option];
                verify = undefined;
                tangon = offset.bind(verify)(zuuluu);
                zuuluu = tangon.useSharedValue;
                oscard = 0;
                foxtra = zuuluu.bind(tangon)(oscard);
                var _closure3_slot2 = foxtra;
                zuuluu = yankee[option];
                tangon = offset.bind(verify)(zuuluu);
                zuuluu = tangon.useSharedValue;
                golfie = zuuluu.bind(tangon)(oscard);
                var _closure3_slot3 = golfie;
                oscard = _closure1_slot5;
                tangon = oscard.useEffect;
                zuuluu = new Array(3);
                zuuluu[0] = foxtra;
                zuuluu[1] = entity;
                zuuluu[2] = golfie;
                entity = function() {
                    _fun00009: for(var _fun00010_ip = 0; ; ) switch(_fun00010_ip) {
 0:
                        tangon = _closure3_slot2;
                        zuuluu = tangon.set;
                        report = _closure3_slot0;
                        offset = 1;
                        michal = offset;
                        if(report) { _fun00010_ip = 102; continue _fun00009 }
 25:
                        verify = _closure1_slot0;
                        yankee = _closure1_slot2;
                        report = 14;
                        report = yankee[report];
                        oscard = undefined;
                        option = verify.bind(oscard)(report);
                        golfie = option.withDelay;
                        report = 15;
                        report = yankee[report];
                        verify = verify.bind(oscard)(report);
                        oscard = verify.withSpring;
                        report = {'duration': 500, 'dampingRatio': 0.7};
                        oscard = oscard.bind(verify)(offset, report);
                        report = 200;
                        michal = golfie.bind(option)(report, oscard);
 102:
                        michal = zuuluu.bind(tangon)(michal);
                        zuuluu = _closure3_slot3;
                        michal = zuuluu.set;
                        tangon = _closure3_slot0;
                        entity = offset;
                        if(tangon) { _fun00010_ip = 195; continue _fun00009 }
 126:
                        option = _closure1_slot0;
                        verify = _closure1_slot2;
                        tangon = 14;
                        tangon = verify[tangon];
                        report = undefined;
                        golfie = option.bind(report)(tangon);
                        oscard = golfie.withDelay;
                        tangon = 16;
                        tangon = verify[tangon];
                        verify = option.bind(report)(tangon);
                        option = verify.withTiming;
                        tangon = {};
                        report = 200;
                        tangon['duration'] = report;
                        tangon = option.bind(verify)(offset, tangon);
                        entity = oscard.bind(golfie)(report, tangon);
 195:
                        entity = michal.bind(zuuluu)(entity);
                        entity = undefined;
                        return entity;
                    }
                };
                entity = tangon.bind(oscard)(entity, zuuluu);
                entity = {};
                zuuluu = yankee[option];
                oscard = offset.bind(verify)(zuuluu);
                tangon = oscard.useAnimatedStyle;
                zuuluu = function() { // Original name: n
                    _fun00011: for(var _fun00012_ip = 0; ; ) switch(_fun00012_ip) {
 0:
                        entity = {};
                        golfie = _closure1_slot0;
                        option = _closure1_slot2;
                        tangon = 14;
                        michal = option[tangon];
                        oscard = undefined;
                        romeon = golfie.bind(oscard)(michal);
                        yankee = romeon.interpolate;
                        report = _closure3_slot2;
                        zuuluu = report.get;
                        offset = zuuluu.bind(report)();
                        verify = [0, 1];
                        zuuluu = [0.1, 1];
                        zuuluu = yankee.bind(romeon)(offset, verify, zuuluu);
                        entity['opacity'] = zuuluu;
                        zuuluu = {};
                        tangon = option[tangon];
                        golfie = golfie.bind(oscard)(tangon);
                        oscard = golfie.interpolate;
                        tangon = report.get;
                        report = tangon.bind(report)();
                        tangon = _closure3_slot1;
                        michal = 0;
                        if(!tangon) { _fun00012_ip = 125; continue _fun00011 }
 115:
                        michal = 0.6;
 125:
                        tangon = new Array(2);
                        tangon[0] = michal;
                        michal = 1;
                        tangon[1] = michal;
                        michal = [0, 1];
                        michal = oscard.bind(golfie)(report, michal, tangon);
                        zuuluu['scale'] = michal;
                        michal = new Array(1);
                        michal[0] = zuuluu;
                        entity['transform'] = michal;
                        return entity;
                    }
                };
                romeon = {};
                kiloes = yankee[option];
                kiloes = offset.bind(verify)(kiloes);
                kiloes = kiloes.interpolate;
                romeon['interpolate'] = kiloes;
                romeon['springInput'] = foxtra;
                romeon['isProfileEffect'] = backup;
                zuuluu['__closure'] = romeon;
                romeon = 5554673710726.0;
                zuuluu['__workletHash'] = romeon;
                romeon = _closure1_slot17;
                zuuluu['__initData'] = romeon;
                zuuluu = tangon.bind(oscard)(zuuluu);
                entity['previewViewStyle'] = zuuluu;
                zuuluu = yankee[option];
                oscard = offset.bind(verify)(zuuluu);
                tangon = oscard.useAnimatedStyle;
                zuuluu = function() { // Original name: s
                    entity = {};
                    oscard = _closure1_slot0;
                    golfie = _closure1_slot2;
                    michal = 14;
                    zuuluu = golfie[michal];
                    report = undefined;
                    yankee = oscard.bind(report)(zuuluu);
                    offset = yankee.interpolate;
                    tangon = _closure3_slot2;
                    zuuluu = tangon.get;
                    verify = zuuluu.bind(tangon)();
                    option = [0, 1];
                    zuuluu = [0, 1];
                    zuuluu = offset.bind(yankee)(verify, option, zuuluu);
                    entity['opacity'] = zuuluu;
                    zuuluu = {};
                    michal = golfie[michal];
                    golfie = oscard.bind(report)(michal);
                    oscard = golfie.interpolate;
                    michal = tangon.get;
                    report = michal.bind(tangon)();
                    tangon = [0, 1];
                    michal = [0.75, 1];
                    michal = oscard.bind(golfie)(report, tangon, michal);
                    zuuluu['scale'] = michal;
                    michal = new Array(1);
                    michal[0] = zuuluu;
                    entity['transform'] = michal;
                    return entity;
                };
                romeon = {};
                backup = yankee[option];
                backup = offset.bind(verify)(backup);
                backup = backup.interpolate;
                romeon['interpolate'] = backup;
                romeon['springInput'] = foxtra;
                zuuluu['__closure'] = romeon;
                romeon = 4517716462039.0;
                zuuluu['__workletHash'] = romeon;
                romeon = _closure1_slot18;
                zuuluu['__initData'] = romeon;
                zuuluu = tangon.bind(oscard)(zuuluu);
                entity['textViewStyle'] = zuuluu;
                zuuluu = yankee[option];
                tangon = offset.bind(verify)(zuuluu);
                zuuluu = tangon.useAnimatedStyle;
                michal = function() { // Original name: c
                    entity = {};
                    tangon = _closure1_slot0;
                    zuuluu = _closure1_slot2;
                    michal = 14;
                    zuuluu = zuuluu[michal];
                    michal = undefined;
                    oscard = tangon.bind(michal)(zuuluu);
                    report = oscard.interpolate;
                    zuuluu = _closure3_slot3;
                    michal = zuuluu.get;
                    tangon = michal.bind(zuuluu)();
                    zuuluu = [0, 1];
                    michal = [0.5, 0];
                    michal = report.bind(oscard)(tangon, zuuluu, michal);
                    entity['opacity'] = michal;
                    return entity;
                };
                oscard = {};
                option = yankee[option];
                option = offset.bind(verify)(option);
                option = option.interpolate;
                oscard['interpolate'] = option;
                oscard['linearInput'] = golfie;
                michal['__closure'] = oscard;
                oscard = 6018737312.0;
                michal['__workletHash'] = oscard;
                report = _closure1_slot19;
                michal['__initData'] = report;
                michal = zuuluu.bind(tangon)(michal);
                entity['curtainViewStyle'] = michal;
                return entity;
            };
            entity = foxtra === entity;
            entity = michal.bind(tangon)(offset, entity);
            status = entity.previewViewStyle;
            cntext = entity.textViewStyle;
            offset = entity.curtainViewStyle;
            entity = _closure1_slot7;
            entity = entity.bind(tangon)();
            entity = entity.height;
            _closure2_slot8 = entity;
            michal = 25;
            michal = yankee[michal];
            yankee = zuuluu.bind(tangon)(michal);
            zuuluu = yankee.useFetchCollectiblesProductCategory;
            michal = variable36.skuId;
            michal = zuuluu.bind(yankee)(michal);
            michal = michal.category;
            _closure2_slot9 = michal;
            zuuluu = report.useMemo;
            sequen = null;
            foxtra = sequen == michal;
            yankee = undefined;
            if(foxtra) { _fun00006_ip = 518; continue _fun00005 }
 512:
            yankee = michal.mobileBg;
 518:
            michal = new Array(3);
            michal[0] = yankee;
            michal[1] = sizing;
            michal[2] = entity;
            entity = function() {
                _fun00013: for(var _fun00014_ip = 0; ; ) switch(_fun00014_ip) {
 0:
                    michal = _closure2_slot1;
                    zuuluu = '';
                    entity = zuuluu;
                    if(!michal) { _fun00014_ip = 109; continue _fun00013 }
 17:
                    michal = _closure2_slot9;
                    report = null;
                    golfie = report == michal;
                    tangon = undefined;
                    michal = undefined;
                    if(golfie) { _fun00014_ip = 44; continue _fun00013 }
 34:
                    golfie = _closure2_slot9;
                    michal = golfie.mobileBg;
 44:
                    michal = report != michal;
                    entity = zuuluu;
                    if(!michal) { _fun00014_ip = 109; continue _fun00013 }
 54:
                    zuuluu = _closure1_slot0;
                    report = _closure1_slot2;
                    michal = 26;
                    michal = report[michal];
                    report = zuuluu.bind(tangon)(michal);
                    tangon = report.getCollectiblesAssetURL;
                    michal = _closure2_slot9;
                    zuuluu = michal.mobileBg;
                    michal = {};
                    oscard = _closure2_slot8;
                    michal['size'] = oscard;
                    entity = tangon.bind(report)(zuuluu, michal);
 109:
                    return entity;
                }
            };
            backup = zuuluu.bind(report)(entity, michal);
            zuuluu = _closure1_slot3;
            michal = variable36.items;
            entity = 1;
            michal = zuuluu.bind(tangon)(michal, entity);
            entity = 0;
            entity = michal[entity];
            _closure2_slot10 = entity;
            michal = _closure1_slot0;
            zuuluu = _closure1_slot2;
            entity = 27;
            entity = zuuluu[entity];
            yankee = michal.bind(tangon)(entity);
            report = yankee.useHandleUseNow;
            entity = {};
            entity['product'] = variable36;
            entity['onSuccess'] = romeon;
            entity = report.bind(yankee)(entity);
            source = entity.handleUseNow;
            ctrled = entity.isApplying;
            report = option.getAvatarSource;
            entity = false;
            entity = report.bind(option)(tangon, entity, golfie);
            _closure2_slot11 = entity;
            entity = 28;
            entity = zuuluu[entity];
            zuuluu = michal.bind(tangon)(entity);
            michal = zuuluu.usePreviewCollectibleProduct;
            entity = true;
            entity = michal.bind(zuuluu)(variable36, entity);
            zuuluu = _closure1_slot13;
            michal = _closure1_slot8;
            entity = {};
            report = verify.root;
            entity['style'] = report;
            report = variable36.skuId;
            entity['id'] = report;
            if(sizing) { _fun00006_ip = 732; continue _fun00005 }
 709:
            option = _closure1_slot11;
            golfie = _closure1_slot22;
            report = {};
            report['product'] = variable36;
            golfie = option.bind(tangon)(golfie, report);
            _fun00006_ip = 783; continue _fun00005;
 732:
            report = '';
            report = report !== backup;
            if(!report) { _fun00006_ip = 780; continue _fun00005 }
 743:
            romeon = _closure1_slot11;
            yankee = _closure1_slot6;
            option = {};
            foxtra = {};
            foxtra['uri'] = backup;
            option['source'] = foxtra;
            foxtra = verify.imageBackground;
            option['style'] = foxtra;
            report = romeon.bind(tangon)(yankee, option);
 780:
            golfie = report;
 783:
            report = new Array(3);
            report[0] = golfie;
            backup = _closure1_slot13;
            option = _closure1_slot0;
            yankee = _closure1_slot2;
            golfie = 29;
            golfie = yankee[golfie];
            golfie = option.bind(tangon)(golfie);
            foxtra = golfie.SafeAreaPaddingView;
            romeon = {'style': null, 'top': true, 'bottom': true, 'left': true, 'right': true};
            option = verify.main;
            golfie = new Array(2);
            golfie[0] = option;
            option = {};
            yankee = undefined;
            if(!sizing) { _fun00006_ip = 862; continue _fun00005 }
 856:
            yankee = 'rgba(0, 0, 0, 0.3)';
 862:
            option['backgroundColor'] = yankee;
            golfie[1] = option;
            romeon['style'] = golfie;
            yankee = _closure1_slot11;
            option = _closure1_slot16;
            golfie = {};
            result = sequen == output;
            sizing = undefined;
            if(result) { _fun00006_ip = 910; continue _fun00005 }
 895:
            result = output.label;
            output = result.toHexString;
            sizing = output.bind(result)();
 910:
            if(!(sequen != sizing)) { _fun00006_ip = 917; continue _fun00005 }
 914:
            kiloes = sizing;
 917:
            golfie['tintColor'] = kiloes;
            golfie = yankee.bind(tangon)(option, golfie);
            kiloes = new Array(3);
            kiloes[0] = golfie;
            sizing = _closure1_slot13;
            option = _closure1_slot8;
            golfie = {};
            yankee = verify.body;
            golfie['style'] = yankee;
            vacuum = _closure1_slot11;
            echoed = _closure1_slot1;
            result = _closure1_slot2;
            yankee = 14;
            output = result[yankee];
            output = echoed.bind(tangon)(output);
            record = output.View;
            output = {};
            sierra = verify.preview;
            target = new Array(2);
            target[0] = sierra;
            target[1] = status;
            output['style'] = target;
            target = _closure1_slot0;
            status = 30;
            status = result[status];
            limora = target.bind(tangon)(status);
            sierra = limora.match;
            status = variable36.type;
            whisks = sierra.bind(limora)(status);
            limora = whisks.with;
            status = result[papara];
            status = target.bind(tangon)(status);
            status = status.CollectiblesItemType;
            sierra = status.AVATAR_DECORATION;
            status = function() {
                tangon = _closure1_slot11;
                michal = _closure1_slot1;
                zuuluu = _closure1_slot2;
                entity = 31;
                entity = zuuluu[entity];
                zuuluu = undefined;
                michal = michal.bind(zuuluu)(entity);
                entity = {};
                oscard = _closure2_slot10;
                entity['item'] = oscard;
                oscard = _closure2_slot6;
                entity['size'] = oscard;
                oscard = _closure2_slot11;
                entity['avatarSource'] = oscard;
                report = _closure2_slot7;
                report = !report;
                entity['animate'] = report;
                entity = tangon.bind(zuuluu)(michal, entity);
                return entity;
            };
            whisks = limora.bind(whisks)(sierra, status);
            limora = whisks.with;
            status = result[papara];
            status = target.bind(tangon)(status);
            status = status.CollectiblesItemType;
            sierra = status.PROFILE_EFFECT;
            status = function() {
                tangon = _closure1_slot11;
                michal = _closure1_slot1;
                zuuluu = _closure1_slot2;
                entity = 32;
                entity = zuuluu[entity];
                zuuluu = undefined;
                michal = michal.bind(zuuluu)(entity);
                entity = {};
                oscard = _closure2_slot5;
                entity['user'] = oscard;
                oscard = _closure2_slot4;
                oscard = oscard.profilePreview;
                entity['style'] = oscard;
                report = _closure2_slot0;
                oscard = report.items;
                report = 0;
                report = oscard[report];
                entity['pendingProfileEffectRecord'] = report;
                report = 1;
                entity['bioLineClamp'] = report;
                entity = tangon.bind(zuuluu)(michal, entity);
                return entity;
            };
            whisks = limora.bind(whisks)(sierra, status);
            limora = whisks.with;
            status = result[papara];
            status = target.bind(tangon)(status);
            status = status.CollectiblesItemType;
            sierra = status.NAMEPLATE;
            status = function() {
                tangon = _closure1_slot11;
                michal = _closure1_slot0;
                zuuluu = _closure1_slot2;
                entity = 33;
                entity = zuuluu[entity];
                zuuluu = undefined;
                entity = michal.bind(zuuluu)(entity);
                michal = entity.NameplatePreview;
                entity = {};
                oscard = _closure2_slot5;
                entity['user'] = oscard;
                report = _closure2_slot0;
                oscard = report.items;
                report = 0;
                report = oscard[report];
                entity['nameplate'] = report;
                entity = tangon.bind(zuuluu)(michal, entity);
                return entity;
            };
            sierra = limora.bind(whisks)(sierra, status);
            status = sierra.with;
            papara = result[papara];
            papara = target.bind(tangon)(papara);
            papara = papara.CollectiblesItemType;
            target = papara.BUNDLE;
            papara = function() {
                tangon = _closure1_slot11;
                michal = _closure1_slot1;
                zuuluu = _closure1_slot2;
                entity = 32;
                entity = zuuluu[entity];
                zuuluu = undefined;
                michal = michal.bind(zuuluu)(entity);
                entity = {};
                oscard = _closure2_slot5;
                entity['user'] = oscard;
                oscard = _closure2_slot4;
                oscard = oscard.profilePreview;
                entity['style'] = oscard;
                report = _closure2_slot0;
                oscard = report.items;
                report = 1;
                oscard = oscard[report];
                entity['pendingProfileEffectRecord'] = oscard;
                entity['bioLineClamp'] = report;
                entity = tangon.bind(zuuluu)(michal, entity);
                return entity;
            };
            status = status.bind(sierra)(target, papara);
            target = status.otherwise;
            papara = function() {
                entity = null;
                return entity;
            };
            papara = target.bind(status)(papara);
            output['children'] = papara;
            record = vacuum.bind(tangon)(record, output);
            output = new Array(2);
            output[0] = record;
            result = result[yankee];
            result = echoed.bind(tangon)(result);
            echoed = result.View;
            result = {};
            papara = verify.messages;
            record = new Array(2);
            record[0] = papara;
            record[1] = cntext;
            result['style'] = record;
            if(!(sequen == config)) { _fun00006_ip = 1541; continue _fun00005 }
 1281:
            cntext = _closure1_slot13;
            record = _closure1_slot12;
            sequen = {};
            sierra = _closure1_slot11;
            whisks = _closure1_slot0;
            variable37 = _closure1_slot2;
            target = 34;
            papara = variable37[target];
            papara = whisks.bind(tangon)(papara);
            status = papara.Text;
            papara = {'variant': 'heading-xl/bold', 'color': 'white'};
            limora = verify.title;
            papara['style'] = limora;
            limora = 13;
            equals = variable37[limora];
            equals = whisks.bind(tangon)(equals);
            variable39 = equals.intl;
            variable38 = variable39.format;
            equals = variable37[limora];
            equals = whisks.bind(tangon)(equals);
            equals = equals.t;
            quebec = equals.YNaxMj;
            equals = {};
            variable40 = variable36.name;
            equals['itemName'] = variable40;
            equals = variable38.bind(variable39)(quebec, equals);
            papara['children'] = equals;
            status = sierra.bind(tangon)(status, papara);
            papara = new Array(2);
            papara[0] = status;
            target = variable37[target];
            target = whisks.bind(tangon)(target);
            status = target.Text;
            target = {'variant': 'text-md/medium', 'color': 'white'};
            equals = verify.title;
            target['style'] = equals;
            equals = variable37[limora];
            equals = whisks.bind(tangon)(equals);
            quebec = equals.intl;
            equals = quebec.format;
            limora = variable37[limora];
            limora = whisks.bind(tangon)(limora);
            limora = limora.t;
            whisks = limora.4kp0AA;
            limora = {};
            variable36 = variable36.name;
            limora['itemName'] = variable36;
            limora = equals.bind(quebec)(whisks, limora);
            target['children'] = limora;
            target = sierra.bind(tangon)(status, target);
            papara[1] = target;
            sequen['children'] = papara;
            sequen = cntext.bind(tangon)(record, sequen);
            _fun00006_ip = 1545; continue _fun00005;
 1541:
            sequen = config.bind(tangon)();
 1545:
            result['children'] = sequen;
            result = vacuum.bind(tangon)(echoed, result);
            output[1] = result;
            golfie['children'] = output;
            golfie = sizing.bind(tangon)(option, golfie);
            kiloes[1] = golfie;
            option = _closure1_slot11;
            output = _closure1_slot8;
            sizing = {};
            golfie = verify.footer;
            sizing['style'] = golfie;
            golfie = _closure1_slot1;
            oscard = _closure1_slot2;
            result = 35;
            result = oscard[result];
            echoed = golfie.bind(tangon)(result);
            result = {};
            result['loading'] = ctrled;
            result['onPress'] = source;
            update = function() { // Original name: text
                tangon = _closure1_slot11;
                option = _closure1_slot0;
                verify = _closure1_slot2;
                entity = 34;
                entity = verify[entity];
                zuuluu = undefined;
                entity = option.bind(zuuluu)(entity);
                michal = entity.Text;
                entity = {'variant': 'text-md/semibold', 'color': 'white'};
                report = 13;
                oscard = verify[report];
                oscard = option.bind(zuuluu)(oscard);
                golfie = oscard.intl;
                oscard = golfie.string;
                report = verify[report];
                report = option.bind(zuuluu)(report);
                report = report.t;
                report = report.MAS7uL;
                report = oscard.bind(golfie)(report);
                entity['children'] = report;
                entity = tangon.bind(zuuluu)(michal, entity);
                return entity;
            };
            result['text'] = update;
            update = verify.cta;
            result['style'] = update;
            result = option.bind(tangon)(echoed, result);
            sizing['children'] = result;
            sizing = option.bind(tangon)(output, sizing);
            kiloes[2] = sizing;
            romeon['children'] = kiloes;
            romeon = backup.bind(tangon)(foxtra, romeon);
            report[1] = romeon;
            oscard = oscard[yankee];
            oscard = golfie.bind(tangon)(oscard);
            golfie = oscard.View;
            oscard = {};
            yankee = verify.curtain;
            verify = new Array(2);
            verify[0] = yankee;
            verify[1] = offset;
            oscard['style'] = verify;
            verify = 'none';
            oscard['pointerEvents'] = verify;
            oscard = option.bind(tangon)(golfie, oscard);
            report[2] = oscard;
            entity['children'] = report;
            entity = zuuluu.bind(tangon)(michal, entity);
            return entity;
        }
    };
    zuuluu['default'] = michal;
    return entity;
})();