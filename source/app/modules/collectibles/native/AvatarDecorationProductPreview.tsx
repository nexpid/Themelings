// app/modules/collectibles/native/AvatarDecorationProductPreview.tsx
export default (function(_, argBar, argBaz, argCorge, __, argFred, argPlugh) {
    report = argBar;
    yankee = argBaz;
    zulu = argFred;
    oscar = argPlugh;
    var _closure1_slot0 = report;
    var _closure1_slot1 = yankee;
    var _closure1_slot2 = oscar;
    entity = global;
    options = entity.Object;
    golf = options.defineProperty;
    tango = {};
    entity = true;
    tango['value'] = entity;
    entity = '__esModule';
    entity = golf.bind(options)(zulu, entity, tango);
    entity = 0;
    golf = oscar[entity];
    tango = argCorge;
    entity = undefined;
    tango = tango.bind(entity)(golf);
    tango = 1;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.View;
    var _closure1_slot3 = tango;
    tango = 2;
    tango = oscar[tango];
    tango = yankee.bind(entity)(tango);
    var _closure1_slot4 = tango;
    tango = 3;
    tango = oscar[tango];
    tango = yankee.bind(entity)(tango);
    var _closure1_slot5 = tango;
    tango = 4;
    golf = oscar[tango];
    golf = report.bind(entity)(golf);
    golf = golf.jsx;
    var _closure1_slot6 = golf;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.jsxs;
    var _closure1_slot7 = tango;
    tango = 5;
    tango = oscar[tango];
    options = report.bind(entity)(tango);
    golf = options.createStyles;
    tango = {};
    verify = {'position': 'relative', 'paddingBottom': 38};
    tango['container'] = verify;
    verify = {'position': 'absolute', 'bottom': 0, 'right': 0, 'borderRadius': null, 'backgroundColor': null, 'borderWidth': 1};
    offset = 6;
    romeo = oscar[offset];
    romeo = yankee.bind(entity)(romeo);
    romeo = romeo.radii;
    romeo = romeo.sm;
    verify['borderRadius'] = romeo;
    romeo = oscar[offset];
    romeo = yankee.bind(entity)(romeo);
    romeo = romeo.colors;
    romeo = romeo.BACKGROUND_PRIMARY;
    verify['backgroundColor'] = romeo;
    romeo = oscar[offset];
    romeo = yankee.bind(entity)(romeo);
    romeo = romeo.colors;
    romeo = romeo.BACKGROUND_MODIFIER_ACCENT;
    verify['borderColor'] = romeo;
    romeo = oscar[offset];
    romeo = yankee.bind(entity)(romeo);
    romeo = romeo.shadows;
    kilo = romeo.SHADOW_HIGH;
    sizing = verify;
    romeo = copyDataProperties(sizing, kilo);
    foxtrot = '70%';
    romeo = 'width';
    verify[romeo] = foxtrot;
    foxtrot = 12;
    romeo = 'padding';
    verify[romeo] = foxtrot;
    tango['chat'] = verify;
    verify = {'flexDirection': 'row', 'gap': 10};
    tango['messageRow'] = verify;
    verify = {};
    romeo = 'column';
    verify['flexDirection'] = romeo;
    tango['messageColumn'] = verify;
    verify = {'height': 17, 'flexDirection': 'row', 'alignItems': 'flex-end'};
    tango['messageHeader'] = verify;
    verify = {};
    romeo = '95%';
    verify['width'] = romeo;
    tango['messagePreview'] = verify;
    verify = {'flexDirection': 'row', 'alignItems': 'center', 'justifyContent': 'space-between', 'backgroundColor': null, 'borderRadius': null, 'marginTop': 13, 'height': 32, 'paddingHorizontal': 7};
    romeo = oscar[offset];
    romeo = yankee.bind(entity)(romeo);
    romeo = romeo.colors;
    romeo = romeo.REDESIGN_CHAT_INPUT_BACKGROUND;
    verify['backgroundColor'] = romeo;
    offset = oscar[offset];
    offset = yankee.bind(entity)(offset);
    offset = offset.radii;
    offset = offset.sm;
    verify['borderRadius'] = offset;
    tango['chatInput'] = verify;
    verify = {'height': 20, 'width': 20};
    tango['chatIcon'] = verify;
    tango = golf.bind(options)(tango);
    var _closure1_slot8 = tango;
    tango = 21;
    tango = oscar[tango];
    oscar = report.bind(entity)(tango);
    report = oscar.fileFinishedImporting;
    tango = 'modules/collectibles/native/AvatarDecorationProductPreview.tsx';
    tango = report.bind(oscar)(tango);
    mike = function() { // Original name: _default
        _fun99664: for(var _fun99664_ip = 0; ; ) switch(_fun99664_ip) {
 0:
            mike = _closure1_slot8;
            tango = undefined;
            kilo = mike.bind(tango)();
            zulu = _closure1_slot0;
            report = _closure1_slot2;
            mike = 7;
            mike = report[mike];
            oscar = zulu.bind(tango)(mike);
            mike = oscar.useCurrentUser;
            update = mike.bind(oscar)();
            mike = 8;
            oscar = report[mike];
            verify = zulu.bind(tango)(oscar);
            options = verify.useStateFromStores;
            oscar = _closure1_slot5;
            golf = new Array(1);
            golf[0] = oscar;
            oscar = function() {
                mike = _closure1_slot5;
                entity = mike.getWidth;
                entity = entity.bind(mike)();
                return entity;
            };
            options = options.bind(verify)(golf, oscar);
            mike = report[mike];
            golf = zulu.bind(tango)(mike);
            oscar = golf.useStateFromStores;
            mike = _closure1_slot4;
            zulu = new Array(1);
            zulu[0] = mike;
            mike = function() {
                mike = _closure1_slot4;
                entity = mike.getPendingAvatarDecoration;
                entity = entity.bind(mike)();
                return entity;
            };
            foxtrot = oscar.bind(golf)(zulu, mike);
            zulu = _closure1_slot1;
            mike = 9;
            mike = report[mike];
            zulu = zulu.bind(tango)(mike);
            offset = null;
            report = offset == foxtrot;
            mike = undefined;
            if(report) { _fun99664_ip = 159; continue _fun99664 }
 153:
            mike = foxtrot.skuId;
 159:
            mike = zulu.bind(tango)(mike);
            yankee = mike.product;
            zulu = _closure1_slot1;
            report = _closure1_slot2;
            mike = 10;
            mike = report[mike];
            mike = zulu.bind(tango)(mike);
            entity = function() {
                zulu = _closure1_slot0;
                mike = _closure1_slot2;
                entity = 11;
                mike = mike[entity];
                entity = undefined;
                zulu = zulu.bind(entity)(mike);
                mike = zulu.calendarFormat;
                entity = global;
                entity = entity.Date;
                tango = entity.prototype;
                tango = Object.create(tango, {constructor: {value: entity}});
                oscar = tango;
                entity = new oscar[entity](report);
                entity = entity instanceof Object ? entity : tango;
                entity = mike.bind(zulu)(entity);
                return entity;
            };
            vacuum = mike.bind(tango)(entity);
            zulu = _closure1_slot7;
            mike = _closure1_slot3;
            entity = {};
            oscar = kilo.container;
            entity['style'] = oscar;
            oscar = 'box-none';
            entity['pointerEvents'] = oscar;
            oscar = _closure1_slot0;
            source = 12;
            golf = report[source];
            golf = oscar.bind(tango)(golf);
            verify = golf.intl;
            golf = verify.formatToPlainString;
            report = report[source];
            report = oscar.bind(tango)(report);
            report = report.t;
            oscar = report.hORo2d;
            report = {};
            backup = offset == yankee;
            offset = undefined;
            if(backup) { _fun99664_ip = 294; continue _fun99664 }
 289:
            offset = yankee.name;
 294:
            report['avatarDecoration'] = offset;
            report = golf.bind(verify)(oscar, report);
            entity['accessibilityLabel'] = report;
            report = 'image';
            entity['accessibilityRole'] = report;
            backup = _closure1_slot6;
            output = _closure1_slot1;
            result = _closure1_slot2;
            report = 13;
            report = result[report];
            oscar = output.bind(tango)(report);
            report = {};
            report['user'] = update;
            golf = true;
            report['compact'] = golf;
            golf = 0.3;
            golf = golf * options;
            report['containerMargin'] = golf;
            golf = {'width': '85%', 'height': '65%'};
            report['style'] = golf;
            oscar = backup.bind(tango)(oscar, report);
            report = new Array(2);
            report[0] = oscar;
            options = _closure1_slot7;
            golf = _closure1_slot3;
            oscar = {};
            verify = kilo.chat;
            oscar['style'] = verify;
            verify = {};
            offset = kilo.messageRow;
            verify['style'] = offset;
            offset = 14;
            offset = result[offset];
            yankee = output.bind(tango)(offset);
            offset = {};
            offset['user'] = update;
            offset['pendingAvatarDecoration'] = foxtrot;
            romeo = _closure1_slot0;
            foxtrot = 15;
            foxtrot = result[foxtrot];
            foxtrot = romeo.bind(tango)(foxtrot);
            foxtrot = foxtrot.AvatarSizes;
            foxtrot = foxtrot.NORMAL;
            offset['size'] = foxtrot;
            yankee = backup.bind(tango)(yankee, offset);
            offset = new Array(2);
            offset[0] = yankee;
            yankee = {};
            foxtrot = kilo.messageColumn;
            yankee['style'] = foxtrot;
            foxtrot = {};
            sizing = kilo.messageHeader;
            foxtrot['style'] = sizing;
            sizing = 16;
            sizing = result[sizing];
            echo = output.bind(tango)(sizing);
            sizing = {'user': null, 'textVariant': 'heading-sm/extrabold', 'hideSubname': true};
            sizing['user'] = update;
            echo = backup.bind(tango)(echo, sizing);
            sizing = new Array(2);
            sizing[0] = echo;
            echo = 17;
            update = result[echo];
            update = romeo.bind(tango)(update);
            control = update.Text;
            update = {'variant': 'text-xxs/normal', 'color': 'text-normal'};
            update['children'] = vacuum;
            update = backup.bind(tango)(control, update);
            sizing[1] = update;
            foxtrot['children'] = sizing;
            sizing = options.bind(tango)(golf, foxtrot);
            foxtrot = new Array(2);
            foxtrot[0] = sizing;
            sizing = {};
            update = kilo.messagePreview;
            sizing['style'] = update;
            echo = result[echo];
            echo = romeo.bind(tango)(echo);
            update = echo.Text;
            echo = {'variant': 'text-sm/normal', 'color': 'text-normal', 'lineClamp': 2};
            control = result[source];
            control = romeo.bind(tango)(control);
            vacuum = control.intl;
            control = vacuum.string;
            source = result[source];
            source = romeo.bind(tango)(source);
            source = source.t;
            source = source.d5YwKy;
            source = control.bind(vacuum)(source);
            echo['children'] = source;
            echo = backup.bind(tango)(update, echo);
            sizing['children'] = echo;
            sizing = backup.bind(tango)(golf, sizing);
            foxtrot[1] = sizing;
            yankee['children'] = foxtrot;
            yankee = options.bind(tango)(golf, yankee);
            offset[1] = yankee;
            verify['children'] = offset;
            offset = options.bind(tango)(golf, verify);
            verify = new Array(2);
            verify[0] = offset;
            offset = {};
            yankee = kilo.chatInput;
            offset['style'] = yankee;
            yankee = 18;
            yankee = result[yankee];
            yankee = romeo.bind(tango)(yankee);
            romeo = yankee.CirclePlusIcon;
            yankee = {};
            foxtrot = 6;
            foxtrot = result[foxtrot];
            foxtrot = output.bind(tango)(foxtrot);
            foxtrot = foxtrot.colors;
            foxtrot = foxtrot.INTERACTIVE_NORMAL;
            yankee['color'] = foxtrot;
            foxtrot = kilo.chatIcon;
            yankee['style'] = foxtrot;
            romeo = backup.bind(tango)(romeo, yankee);
            yankee = new Array(2);
            yankee[0] = romeo;
            romeo = 19;
            romeo = result[romeo];
            foxtrot = output.bind(tango)(romeo);
            romeo = {};
            sizing = 20;
            sizing = result[sizing];
            sizing = output.bind(tango)(sizing);
            romeo['source'] = sizing;
            kilo = kilo.chatIcon;
            romeo['style'] = kilo;
            romeo = backup.bind(tango)(foxtrot, romeo);
            yankee[1] = romeo;
            offset['children'] = yankee;
            offset = options.bind(tango)(golf, offset);
            verify[1] = offset;
            oscar['children'] = verify;
            oscar = options.bind(tango)(golf, oscar);
            report[1] = oscar;
            entity['children'] = report;
            entity = zulu.bind(tango)(mike, entity);
            return entity;
        }
    };
    zulu['default'] = mike;
    return entity;
})();