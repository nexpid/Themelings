// app/modules/collectibles/native/CollectiblesProgressiveImage.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    report = argBar;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    entity = argBaz;
    var _closure1_slot1 = entity;
    var _closure1_slot2 = oscard;
    entity = global;
    option = entity.Object;
    golfie = option.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(option)(zuuluu, entity, tangon);
    entity = 0;
    golfie = oscard[entity];
    tangon = argCor;
    entity = undefined;
    tangon = tangon.bind(entity)(golfie);
    offset = 1;
    tangon = oscard[offset];
    tangon = report.bind(entity)(tangon);
    golfie = tangon.View;
    var _closure1_slot3 = golfie;
    tangon = tangon.StyleSheet;
    var _closure1_slot4 = tangon;
    tangon = 2;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    golfie = tangon.jsx;
    var _closure1_slot5 = golfie;
    tangon = tangon.jsxs;
    var _closure1_slot6 = tangon;
    tangon = 3;
    tangon = oscard[tangon];
    option = report.bind(entity)(tangon);
    golfie = option.createStyles;
    tangon = {};
    verify = {};
    verify['flex'] = offset;
    tangon['gradient'] = verify;
    tangon = golfie.bind(option)(tangon);
    var _closure1_slot7 = tangon;
    tangon = 7;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/collectibles/native/CollectiblesProgressiveImage.tsx';
    tangon = report.bind(oscard)(tangon);
    michal = function(argFoo) { // Original name: CollectiblesProgressiveImage
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            tangon = argFoo;
            foxtra = tangon.source;
            offset = tangon.placeholderGradient;
            report = tangon.style;
            michal = {'source': 0, 'placeholderGradient': 0, 'style': 0};
            kiloes = null;
            update = michal;
            echoed = null;
            entity = silentSetPrototypeOf(update, echoed);
            zuuluu = 0;
            update = {};
            echoed = tangon;
            result = michal;
            yankee = copyDataProperties(update, echoed, result);
            entity = _closure1_slot7;
            tangon = undefined;
            sizing = entity.bind(tangon)();
            michal = _closure1_slot0;
            output = _closure1_slot2;
            backup = 4;
            entity = output[backup];
            michal = michal.bind(tangon)(entity);
            entity = michal.useSharedValue;
            romeon = entity.bind(michal)(zuuluu);
            var _closure2_slot0 = romeon;
            zuuluu = _closure1_slot6;
            michal = _closure1_slot3;
            entity = {};
            entity['style'] = report;
            option = _closure1_slot5;
            golfie = _closure1_slot1;
            report = 5;
            report = output[report];
            golfie = golfie.bind(tangon)(report);
            report = {};
            if(!(kiloes == offset)) { _fun00002_ip = 147; continue _fun00001 }
 143:
            offset = new Array(0);
 147:
            report['colors'] = offset;
            offset = _closure1_slot4;
            output = offset.absoluteFill;
            kiloes = new Array(2);
            kiloes[0] = output;
            sizing = sizing.gradient;
            kiloes[1] = sizing;
            report['style'] = kiloes;
            golfie = option.bind(tangon)(golfie, report);
            report = new Array(2);
            report[0] = golfie;
            option = _closure1_slot5;
            golfie = _closure1_slot1;
            oscard = _closure1_slot2;
            oscard = oscard[backup];
            oscard = golfie.bind(tangon)(oscard);
            golfie = oscard.Image;
            oscard = {};
            update = oscard;
            echoed = yankee;
            yankee = copyDataProperties(update, echoed);
            yankee = 'source';
            oscard[yankee] = foxtra;
            yankee = {};
            echoed = offset.absoluteFillObject;
            update = yankee;
            offset = copyDataProperties(update, echoed);
            offset = 'opacity';
            yankee[offset] = romeon;
            offset = 'style';
            oscard[offset] = yankee;
            offset = function() { // Original name: onLoad
                tangon = _closure2_slot0;
                zuuluu = tangon.set;
                offset = _closure1_slot0;
                yankee = _closure1_slot2;
                entity = 6;
                michal = yankee[entity];
                entity = undefined;
                golfie = offset.bind(entity)(michal);
                oscard = golfie.withTiming;
                report = {};
                michal = 500;
                report['duration'] = michal;
                michal = 4;
                option = yankee[michal];
                option = offset.bind(entity)(option);
                verify = option.Easing;
                option = verify.inOut;
                michal = yankee[michal];
                michal = offset.bind(entity)(michal);
                michal = michal.Easing;
                michal = michal.ease;
                michal = option.bind(verify)(michal);
                report['easing'] = michal;
                michal = 1;
                michal = oscard.bind(golfie)(michal, report);
                michal = zuuluu.bind(tangon)(michal);
                return entity;
            };
            verify = 'onLoad';
            oscard[verify] = offset;
            oscard = option.bind(tangon)(golfie, oscard);
            report[1] = oscard;
            entity['children'] = report;
            entity = zuuluu.bind(tangon)(michal, entity);
            return entity;
        }
    };
    zuuluu['CollectiblesProgressiveImage'] = michal;
    return entity;
})();