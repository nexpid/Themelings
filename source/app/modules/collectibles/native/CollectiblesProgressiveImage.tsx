// app/modules/collectibles/native/CollectiblesProgressiveImage.tsx
export default (function(argFoo, argBar, argBaz, argCorge, _, argFred, argPlugh) {
    report = argBar;
    zulu = argFred;
    oscar = argPlugh;
    var _closure1_slot0 = report;
    entity = argBaz;
    var _closure1_slot1 = entity;
    var _closure1_slot2 = oscar;
    entity = global;
    options = entity.Object;
    golf = options.defineProperty;
    tango = {};
    entity = true;
    tango['value'] = entity;
    entity = '__esModule';
    entity = golf.bind(options)(zulu, entity, tango);
    entity = 0;
    golf = oscar[entity];
    tango = argCorge;
    entity = undefined;
    tango = tango.bind(entity)(golf);
    offset = 1;
    tango = oscar[offset];
    tango = report.bind(entity)(tango);
    golf = tango.View;
    var _closure1_slot3 = golf;
    tango = tango.StyleSheet;
    var _closure1_slot4 = tango;
    tango = 2;
    golf = oscar[tango];
    golf = report.bind(entity)(golf);
    golf = golf.jsx;
    var _closure1_slot5 = golf;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.jsxs;
    var _closure1_slot6 = tango;
    tango = 3;
    tango = oscar[tango];
    options = report.bind(entity)(tango);
    golf = options.createStyles;
    tango = {};
    verify = {};
    verify['flex'] = offset;
    tango['gradient'] = verify;
    tango = golf.bind(options)(tango);
    var _closure1_slot7 = tango;
    tango = 7;
    tango = oscar[tango];
    oscar = report.bind(entity)(tango);
    report = oscar.fileFinishedImporting;
    tango = 'modules/collectibles/native/CollectiblesProgressiveImage.tsx';
    tango = report.bind(oscar)(tango);
    mike = function(argFoo) { // Original name: CollectiblesProgressiveImage
        _fun99772: for(var _fun99772_ip = 0; ; ) switch(_fun99772_ip) {
 0:
            tango = argFoo;
            foxtrot = tango.source;
            offset = tango.placeholderGradient;
            report = tango.style;
            mike = {'source': 0, 'placeholderGradient': 0, 'style': 0};
            kilo = null;
            update = mike;
            echo = null;
            entity = silentSetPrototypeOf(update, echo);
            zulu = 0;
            update = {};
            echo = tango;
            result = mike;
            yankee = copyDataProperties(update, echo, result);
            entity = _closure1_slot7;
            tango = undefined;
            sizing = entity.bind(tango)();
            mike = _closure1_slot0;
            output = _closure1_slot2;
            backup = 4;
            entity = output[backup];
            mike = mike.bind(tango)(entity);
            entity = mike.useSharedValue;
            romeo = entity.bind(mike)(zulu);
            var _closure2_slot0 = romeo;
            zulu = _closure1_slot6;
            mike = _closure1_slot3;
            entity = {};
            entity['style'] = report;
            options = _closure1_slot5;
            golf = _closure1_slot1;
            report = 5;
            report = output[report];
            golf = golf.bind(tango)(report);
            report = {};
            if(!(kilo == offset)) { _fun99772_ip = 147; continue _fun99772 }
 143:
            offset = new Array(0);
 147:
            report['colors'] = offset;
            offset = _closure1_slot4;
            output = offset.absoluteFill;
            kilo = new Array(2);
            kilo[0] = output;
            sizing = sizing.gradient;
            kilo[1] = sizing;
            report['style'] = kilo;
            golf = options.bind(tango)(golf, report);
            report = new Array(2);
            report[0] = golf;
            options = _closure1_slot5;
            golf = _closure1_slot1;
            oscar = _closure1_slot2;
            oscar = oscar[backup];
            oscar = golf.bind(tango)(oscar);
            golf = oscar.Image;
            oscar = {};
            update = oscar;
            echo = yankee;
            yankee = copyDataProperties(update, echo);
            yankee = 'source';
            oscar[yankee] = foxtrot;
            yankee = {};
            echo = offset.absoluteFillObject;
            update = yankee;
            offset = copyDataProperties(update, echo);
            offset = 'opacity';
            yankee[offset] = romeo;
            offset = 'style';
            oscar[offset] = yankee;
            offset = function() { // Original name: onLoad
                tango = _closure2_slot0;
                zulu = tango.set;
                offset = _closure1_slot0;
                yankee = _closure1_slot2;
                entity = 6;
                mike = yankee[entity];
                entity = undefined;
                golf = offset.bind(entity)(mike);
                oscar = golf.withTiming;
                report = {};
                mike = 500;
                report['duration'] = mike;
                mike = 4;
                options = yankee[mike];
                options = offset.bind(entity)(options);
                verify = options.Easing;
                options = verify.inOut;
                mike = yankee[mike];
                mike = offset.bind(entity)(mike);
                mike = mike.Easing;
                mike = mike.ease;
                mike = options.bind(verify)(mike);
                report['easing'] = mike;
                mike = 1;
                mike = oscar.bind(golf)(mike, report);
                mike = zulu.bind(tango)(mike);
                return entity;
            };
            verify = 'onLoad';
            oscar[verify] = offset;
            oscar = options.bind(tango)(golf, oscar);
            report[1] = oscar;
            entity['children'] = report;
            entity = zulu.bind(tango)(mike, entity);
            return entity;
        }
    };
    zulu['CollectiblesProgressiveImage'] = mike;
    return entity;
})();