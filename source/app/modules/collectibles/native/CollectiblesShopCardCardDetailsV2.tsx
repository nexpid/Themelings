// app/modules/collectibles/native/CollectiblesShopCardCardDetailsV2.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    report = argBar;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    entity = argBaz;
    var _closure1_slot1 = entity;
    var _closure1_slot2 = oscard;
    entity = global;
    option = entity.Object;
    golfie = option.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(option)(zuuluu, entity, tangon);
    entity = 0;
    golfie = oscard[entity];
    tangon = argCor;
    entity = undefined;
    golfie = tangon.bind(entity)(golfie);
    tangon = 1;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.View;
    var _closure1_slot3 = tangon;
    tangon = 2;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.VerticalGradient;
    var _closure1_slot4 = tangon;
    romeon = 3;
    tangon = oscard[romeon];
    tangon = report.bind(entity)(tangon);
    option = tangon.jsx;
    var _closure1_slot5 = option;
    tangon = tangon.jsxs;
    var _closure1_slot6 = tangon;
    yankee = 4;
    tangon = oscard[yankee];
    verify = report.bind(entity)(tangon);
    option = verify.createStyles;
    tangon = {};
    offset = {'position': 'absolute', 'height': '50%', 'width': '100%', 'padding': 10, 'flex': 1, 'bottom': 0, 'overflow': 'hidden', 'display': 'flex', 'flexDirection': 'column', 'justifyContent': 'flex-end'};
    tangon['regularMetadataContainer'] = offset;
    offset = {};
    offset['marginBottom'] = yankee;
    tangon['assetName'] = offset;
    offset = {'display': 'flex', 'flexDirection': 'row'};
    tangon['priceDescription'] = offset;
    offset = {};
    offset['paddingLeft'] = romeon;
    tangon['discountPercentage'] = offset;
    offset = {};
    offset['marginRight'] = yankee;
    tangon['wheelIcon'] = offset;
    tangon = option.bind(verify)(tangon);
    var _closure1_slot7 = tangon;
    option = golfie.memo;
    tangon = function(argFoo) {
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            entity = argFoo;
            zuuluu = entity.product;
            report = entity.isPremiumUser;
            offset = entity.styles;
            michal = _closure1_slot0;
            oscard = _closure1_slot2;
            entity = 5;
            entity = oscard[entity];
            tangon = undefined;
            verify = michal.bind(tangon)(entity);
            option = verify.getFormattedPriceForCollectiblesProduct;
            entity = true;
            romeon = option.bind(verify)(zuuluu, report, entity);
            entity = 6;
            entity = oscard[entity];
            michal = michal.bind(tangon)(entity);
            entity = michal.getProductDiscount;
            entity = entity.bind(michal)(zuuluu, report);
            foxtra = entity.discountPercentage;
            zuuluu = _closure1_slot6;
            michal = _closure1_slot3;
            entity = {};
            oscard = offset.priceDescription;
            entity['style'] = oscard;
            oscard = report;
            if(!oscard) { _fun00002_ip = 177; continue _fun00001 }
 117:
            verify = _closure1_slot5;
            option = _closure1_slot0;
            yankee = _closure1_slot2;
            report = 7;
            report = yankee[report];
            report = option.bind(tangon)(report);
            option = report.NitroWheelIcon;
            report = {'size': 'xxs', 'color': 'text-primary'};
            yankee = offset.wheelIcon;
            report['style'] = yankee;
            oscard = verify.bind(tangon)(option, report);
 177:
            report = new Array(3);
            report[0] = oscard;
            verify = _closure1_slot5;
            option = _closure1_slot0;
            oscard = _closure1_slot2;
            yankee = 8;
            oscard = oscard[yankee];
            oscard = option.bind(tangon)(oscard);
            option = oscard.Text;
            oscard = {'variant': 'text-xxs/semibold', 'color': 'text-primary', 'lineClamp': 1};
            oscard['children'] = romeon;
            oscard = verify.bind(tangon)(option, oscard);
            report[1] = oscard;
            oscard = 0;
            oscard = foxtra > oscard;
            if(!oscard) { _fun00002_ip = 340; continue _fun00001 }
 251:
            verify = _closure1_slot5;
            option = _closure1_slot0;
            golfie = _closure1_slot2;
            golfie = golfie[yankee];
            golfie = option.bind(tangon)(golfie);
            option = golfie.Text;
            golfie = {'style': null, 'color': 'text-positive', 'variant': 'text-xxs/semibold', 'lineClamp': 1};
            offset = offset.discountPercentage;
            golfie['style'] = offset;
            offset = global;
            offset = offset.HermesInternal;
            romeon = offset.concat;
            yankee = '-';
            offset = '%';
            offset = romeon.bind(yankee)(foxtra, offset);
            golfie['children'] = offset;
            oscard = verify.bind(tangon)(option, golfie);
 340:
            report[2] = oscard;
            entity['children'] = report;
            entity = zuuluu.bind(tangon)(michal, entity);
            return entity;
        }
    };
    option = option.bind(golfie)(tangon);
    var _closure1_slot8 = option;
    tangon = 'PriceDescription';
    option['displayName'] = tangon;
    tangon = golfie.memo;
    michal = function(argFoo) {
        _fun00003: for(var _fun00004_ip = 0; ; ) switch(_fun00004_ip) {
 0:
            entity = argFoo;
            foxtra = entity.product;
            entity = _closure1_slot7;
            report = undefined;
            yankee = entity.bind(report)();
            tangon = _closure1_slot0;
            oscard = _closure1_slot2;
            entity = 9;
            entity = oscard[entity];
            michal = tangon.bind(report)(entity);
            entity = michal.useCurrentUser;
            zuuluu = entity.bind(michal)();
            entity = 6;
            entity = oscard[entity];
            michal = tangon.bind(report)(entity);
            entity = michal.isPremiumCollectiblesProduct;
            golfie = entity.bind(michal)(foxtra);
            verify = _closure1_slot1;
            entity = 10;
            entity = oscard[entity];
            michal = verify.bind(report)(entity);
            entity = michal.canUseCollectibles;
            romeon = entity.bind(michal)(zuuluu);
            entity = 11;
            entity = oscard[entity];
            zuuluu = tangon.bind(report)(entity);
            michal = zuuluu.useToken;
            entity = 12;
            entity = oscard[entity];
            entity = verify.bind(report)(entity);
            entity = entity.colors;
            entity = entity.BACKGROUND_PRIMARY;
            verify = michal.bind(zuuluu)(entity);
            entity = 13;
            michal = oscard[entity];
            offset = tangon.bind(report)(michal);
            zuuluu = offset.hexToRgbaString;
            michal = oscard[entity];
            kiloes = tangon.bind(report)(michal);
            backup = kiloes.hexWithOpacity;
            michal = 0.5;
            michal = backup.bind(kiloes)(verify, michal);
            offset = zuuluu.bind(offset)(michal);
            michal = oscard[entity];
            zuuluu = tangon.bind(report)(michal);
            michal = zuuluu.hexToRgbaString;
            entity = oscard[entity];
            oscard = tangon.bind(report)(entity);
            tangon = oscard.hexWithOpacity;
            entity = 0;
            entity = tangon.bind(oscard)(verify, entity);
            kiloes = michal.bind(zuuluu)(entity);
            entity = null;
            entity = entity == foxtra;
            michal = undefined;
            if(entity) { _fun00004_ip = 261; continue _fun00003 }
 256:
            michal = foxtra.type;
 261:
            zuuluu = _closure1_slot0;
            tangon = _closure1_slot2;
            entity = 14;
            entity = tangon[entity];
            entity = zuuluu.bind(report)(entity);
            entity = entity.CollectiblesItemType;
            entity = entity.AVATAR_DECORATION;
            if(!(michal === entity)) { _fun00004_ip = 462; continue _fun00003 }
 300:
            zuuluu = _closure1_slot6;
            michal = _closure1_slot3;
            entity = {};
            oscard = yankee.regularMetadataContainer;
            tangon = new Array(1);
            tangon[0] = oscard;
            entity['style'] = tangon;
            backup = _closure1_slot5;
            oscard = _closure1_slot0;
            sizing = _closure1_slot2;
            tangon = 8;
            tangon = sizing[tangon];
            tangon = oscard.bind(report)(tangon);
            oscard = tangon.Text;
            tangon = {'style': null, 'variant': 'heading-sm/bold', 'color': 'header-primary', 'lineClamp': 1, 'accessibilityRole': 'header'};
            sizing = yankee.assetName;
            tangon['style'] = sizing;
            sizing = foxtra.name;
            tangon['children'] = sizing;
            oscard = backup.bind(report)(oscard, tangon);
            tangon = new Array(2);
            tangon[0] = oscard;
            oscard = !golfie;
            if(!oscard) { _fun00004_ip = 443; continue _fun00003 }
 412:
            output = _closure1_slot5;
            sizing = _closure1_slot8;
            backup = {};
            backup['product'] = foxtra;
            backup['isPremiumUser'] = romeon;
            backup['styles'] = yankee;
            oscard = output.bind(report)(sizing, backup);
 443:
            tangon[1] = oscard;
            entity['children'] = tangon;
            entity = zuuluu.bind(report)(michal, entity);
            _fun00004_ip = 675; continue _fun00003;
 462:
            tangon = _closure1_slot6;
            zuuluu = _closure1_slot1;
            backup = _closure1_slot2;
            michal = 15;
            michal = backup[michal];
            zuuluu = zuuluu.bind(report)(michal);
            michal = {};
            sizing = yankee.regularMetadataContainer;
            oscard = new Array(1);
            oscard[0] = sizing;
            michal['style'] = oscard;
            oscard = new Array(3);
            oscard[0] = kiloes;
            oscard[1] = offset;
            oscard[2] = verify;
            michal['colors'] = oscard;
            oscard = _closure1_slot4;
            verify = oscard.START;
            michal['start'] = verify;
            oscard = oscard.END;
            michal['end'] = oscard;
            offset = _closure1_slot5;
            verify = _closure1_slot0;
            oscard = 8;
            oscard = backup[oscard];
            oscard = verify.bind(report)(oscard);
            verify = oscard.Text;
            oscard = {'style': null, 'variant': 'heading-sm/bold', 'color': 'header-primary', 'lineClamp': 1, 'accessibilityRole': 'header'};
            backup = yankee.assetName;
            oscard['style'] = backup;
            backup = foxtra.name;
            oscard['children'] = backup;
            verify = offset.bind(report)(verify, oscard);
            oscard = new Array(2);
            oscard[0] = verify;
            golfie = !golfie;
            if(!golfie) { _fun00004_ip = 661; continue _fun00003 }
 630:
            offset = _closure1_slot5;
            verify = _closure1_slot8;
            option = {};
            option['product'] = foxtra;
            option['isPremiumUser'] = romeon;
            option['styles'] = yankee;
            golfie = offset.bind(report)(verify, option);
 661:
            oscard[1] = golfie;
            michal['children'] = oscard;
            entity = tangon.bind(report)(zuuluu, michal);
 675:
            return entity;
        }
    };
    michal = tangon.bind(golfie)(michal);
    tangon = 16;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/collectibles/native/CollectiblesShopCardCardDetailsV2.tsx';
    tangon = report.bind(oscard)(tangon);
    zuuluu['default'] = michal;
    return entity;
})();