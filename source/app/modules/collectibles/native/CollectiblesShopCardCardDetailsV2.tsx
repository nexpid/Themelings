// app/modules/collectibles/native/CollectiblesShopCardCardDetailsV2.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
        report = argBar;
        sizing = argBaz;
        zuuluu = argFre;
        oscard = argPlu;
        var _closure1_slot0 = report;
        var _closure1_slot1 = sizing;
        var _closure1_slot2 = oscard;
        entity = global;
        option = entity.Object;
        golfie = option.defineProperty;
        tangon = {};
        entity = true;
        tangon['value'] = entity;
        entity = '__esModule';
        entity = golfie.bind(option)(zuuluu, entity, tangon);
        romeon = 0;
        golfie = oscard[romeon];
        tangon = argCor;
        entity = undefined;
        golfie = tangon.bind(entity)(golfie);
        foxtra = 1;
        tangon = oscard[foxtra];
        tangon = report.bind(entity)(tangon);
        tangon = tangon.View;
        var _closure1_slot3 = tangon;
        tangon = 2;
        tangon = oscard[tangon];
        tangon = report.bind(entity)(tangon);
        tangon = tangon.VerticalGradient;
        var _closure1_slot4 = tangon;
        yankee = 3;
        tangon = oscard[yankee];
        tangon = report.bind(entity)(tangon);
        option = tangon.jsx;
        var _closure1_slot5 = option;
        tangon = tangon.jsxs;
        var _closure1_slot6 = tangon;
        backup = 4;
        tangon = oscard[backup];
        verify = report.bind(entity)(tangon);
        option = verify.createStyles;
        tangon = {};
        offset = {'position': 'absolute', 'height': '50%', 'width': '100%', 'padding': 10, 'flex': 1, 'bottom': 0, 'overflow': 'hidden', 'display': 'flex', 'flexDirection': 'column', 'justifyContent': 'flex-end'};
        kiloes = 5;
        kiloes = oscard[kiloes];
        kiloes = sizing.bind(entity)(kiloes);
        kiloes = kiloes.radii;
        kiloes = kiloes.sm;
        offset['borderRadius'] = kiloes;
        tangon['regularMetadataContainer'] = offset;
        offset = {};
        offset['marginBottom'] = backup;
        tangon['assetName'] = offset;
        offset = {'display': 'flex', 'flexDirection': 'row', 'alignItems': 'center'};
        tangon['priceDescription'] = offset;
        offset = {};
        offset['paddingLeft'] = yankee;
        tangon['discountPercentage'] = offset;
        offset = {};
        backup = 6;
        backup = oscard[backup];
        kiloes = report.bind(entity)(backup);
        backup = kiloes.isAndroid;
        backup = backup.bind(kiloes)();
        if(!backup) { _fun00002_ip = 283; continue _fun00001 }
 280:
        romeon = foxtra;
 283:
        offset['marginTop'] = romeon;
        offset['marginRight'] = yankee;
        tangon['wheelIcon'] = offset;
        tangon = option.bind(verify)(tangon);
        var _closure1_slot7 = tangon;
        option = golfie.memo;
        tangon = function(argFoo) {
            _fun00003: for(var _fun00004_ip = 0; ; ) switch(_fun00004_ip) {
 0:
                entity = argFoo;
                option = entity.product;
                golfie = entity.isPremiumUser;
                oscard = entity.styles;
                michal = entity.collectibleProductState;
                zuuluu = _closure1_slot0;
                verify = _closure1_slot2;
                entity = 7;
                entity = verify[entity];
                tangon = undefined;
                yankee = zuuluu.bind(tangon)(entity);
                offset = yankee.getFormattedPriceForCollectiblesProduct;
                entity = true;
                yankee = offset.bind(yankee)(option, golfie, entity);
                entity = 8;
                entity = verify[entity];
                zuuluu = zuuluu.bind(tangon)(entity);
                entity = zuuluu.getProductDiscount;
                entity = entity.bind(zuuluu)(option, golfie);
                kiloes = entity.discountPercentage;
                entity = 'partiallyOwnedBundle';
                if(!(entity !== michal)) { _fun00004_ip = 796; continue _fun00003 }
 110:
                entity = 'purchased';
                if(!(entity !== michal)) { _fun00004_ip = 668; continue _fun00003 }
 121:
                entity = 'nitroUpsell';
                if(!(entity !== michal)) { _fun00004_ip = 540; continue _fun00003 }
 132:
                entity = 'nitroClaim';
                if(!(entity !== michal)) { _fun00004_ip = 410; continue _fun00003 }
 145:
                zuuluu = _closure1_slot6;
                michal = _closure1_slot3;
                entity = {};
                option = oscard.priceDescription;
                entity['style'] = option;
                option = golfie;
                if(!option) { _fun00004_ip = 231; continue _fun00003 }
 171:
                offset = _closure1_slot5;
                verify = _closure1_slot0;
                romeon = _closure1_slot2;
                golfie = 11;
                golfie = romeon[golfie];
                golfie = verify.bind(tangon)(golfie);
                verify = golfie.NitroWheelIcon;
                golfie = {'size': 'xs', 'color': 'header-primary'};
                romeon = oscard.wheelIcon;
                golfie['style'] = romeon;
                option = offset.bind(tangon)(verify, golfie);
 231:
                golfie = new Array(3);
                golfie[0] = option;
                offset = _closure1_slot5;
                verify = _closure1_slot0;
                option = _closure1_slot2;
                romeon = 9;
                option = option[romeon];
                option = verify.bind(tangon)(option);
                verify = option.Text;
                option = {'variant': 'text-xs/semibold', 'color': 'header-primary', 'lineClamp': 1};
                option['children'] = yankee;
                option = offset.bind(tangon)(verify, option);
                golfie[1] = option;
                option = 0;
                option = kiloes > option;
                if(!option) { _fun00004_ip = 394; continue _fun00003 }
 305:
                yankee = _closure1_slot5;
                offset = _closure1_slot0;
                verify = _closure1_slot2;
                verify = verify[romeon];
                verify = offset.bind(tangon)(verify);
                offset = verify.Text;
                verify = {'style': null, 'color': 'text-positive', 'variant': 'text-xs/semibold', 'lineClamp': 1};
                romeon = oscard.discountPercentage;
                verify['style'] = romeon;
                romeon = global;
                romeon = romeon.HermesInternal;
                backup = romeon.concat;
                foxtra = '-';
                romeon = '%';
                romeon = backup.bind(foxtra)(kiloes, romeon);
                verify['children'] = romeon;
                option = yankee.bind(tangon)(offset, verify);
 394:
                golfie[2] = option;
                entity['children'] = golfie;
                entity = zuuluu.bind(tangon)(michal, entity);
                return entity;
 410:
                zuuluu = _closure1_slot5;
                michal = _closure1_slot3;
                entity = {};
                golfie = oscard.priceDescription;
                entity['style'] = golfie;
                romeon = _closure1_slot0;
                foxtra = _closure1_slot2;
                golfie = 9;
                golfie = foxtra[golfie];
                golfie = romeon.bind(tangon)(golfie);
                option = golfie.Text;
                golfie = {'variant': 'text-xs/semibold', 'color': 'header-primary', 'lineClamp': 1};
                verify = 10;
                offset = foxtra[verify];
                offset = romeon.bind(tangon)(offset);
                yankee = offset.intl;
                offset = yankee.string;
                verify = foxtra[verify];
                verify = romeon.bind(tangon)(verify);
                verify = verify.t;
                verify = verify.rt69oq;
                verify = offset.bind(yankee)(verify);
                golfie['children'] = verify;
                golfie = zuuluu.bind(tangon)(option, golfie);
                entity['children'] = golfie;
                entity = zuuluu.bind(tangon)(michal, entity);
                return entity;
 540:
                zuuluu = _closure1_slot5;
                michal = _closure1_slot3;
                entity = {};
                golfie = oscard.priceDescription;
                entity['style'] = golfie;
                romeon = _closure1_slot0;
                foxtra = _closure1_slot2;
                golfie = 9;
                golfie = foxtra[golfie];
                golfie = romeon.bind(tangon)(golfie);
                option = golfie.Text;
                golfie = {'variant': 'text-xs/semibold', 'color': 'header-primary', 'lineClamp': 1};
                verify = 10;
                offset = foxtra[verify];
                offset = romeon.bind(tangon)(offset);
                yankee = offset.intl;
                offset = yankee.string;
                verify = foxtra[verify];
                verify = romeon.bind(tangon)(verify);
                verify = verify.t;
                verify = verify.sEAnVF;
                verify = offset.bind(yankee)(verify);
                golfie['children'] = verify;
                golfie = zuuluu.bind(tangon)(option, golfie);
                entity['children'] = golfie;
                entity = zuuluu.bind(tangon)(michal, entity);
                return entity;
 668:
                zuuluu = _closure1_slot5;
                michal = _closure1_slot3;
                entity = {};
                golfie = oscard.priceDescription;
                entity['style'] = golfie;
                romeon = _closure1_slot0;
                foxtra = _closure1_slot2;
                golfie = 9;
                golfie = foxtra[golfie];
                golfie = romeon.bind(tangon)(golfie);
                option = golfie.Text;
                golfie = {'variant': 'text-xs/semibold', 'color': 'header-primary', 'lineClamp': 1};
                verify = 10;
                offset = foxtra[verify];
                offset = romeon.bind(tangon)(offset);
                yankee = offset.intl;
                offset = yankee.string;
                verify = foxtra[verify];
                verify = romeon.bind(tangon)(verify);
                verify = verify.t;
                verify = verify.6cfuDg;
                verify = offset.bind(yankee)(verify);
                golfie['children'] = verify;
                golfie = zuuluu.bind(tangon)(option, golfie);
                entity['children'] = golfie;
                entity = zuuluu.bind(tangon)(michal, entity);
                return entity;
 796:
                zuuluu = _closure1_slot5;
                michal = _closure1_slot3;
                entity = {};
                oscard = oscard.priceDescription;
                entity['style'] = oscard;
                offset = _closure1_slot0;
                yankee = _closure1_slot2;
                report = 9;
                report = yankee[report];
                report = offset.bind(tangon)(report);
                oscard = report.Text;
                report = {'variant': 'text-xs/semibold', 'color': 'header-primary', 'lineClamp': 1};
                golfie = 10;
                option = yankee[golfie];
                option = offset.bind(tangon)(option);
                verify = option.intl;
                option = verify.string;
                golfie = yankee[golfie];
                golfie = offset.bind(tangon)(golfie);
                golfie = golfie.t;
                golfie = golfie.BEjTio;
                golfie = option.bind(verify)(golfie);
                report['children'] = golfie;
                report = zuuluu.bind(tangon)(oscard, report);
                entity['children'] = report;
                entity = zuuluu.bind(tangon)(michal, entity);
                return entity;
            }
        };
        option = option.bind(golfie)(tangon);
        var _closure1_slot8 = option;
        tangon = 'PriceDescription';
        option['displayName'] = tangon;
        tangon = golfie.memo;
        michal = function(argFoo) {
            _fun00005: for(var _fun00006_ip = 0; ; ) switch(_fun00006_ip) {
 0:
                entity = argFoo;
                foxtra = entity.product;
                offset = entity.collectibleProductState;
                entity = _closure1_slot7;
                report = undefined;
                yankee = entity.bind(report)();
                tangon = _closure1_slot0;
                oscard = _closure1_slot2;
                entity = 12;
                entity = oscard[entity];
                michal = tangon.bind(report)(entity);
                entity = michal.useCurrentUser;
                zuuluu = entity.bind(michal)();
                option = _closure1_slot1;
                entity = 13;
                entity = oscard[entity];
                michal = option.bind(report)(entity);
                entity = michal.canUseCollectibles;
                romeon = entity.bind(michal)(zuuluu);
                entity = 14;
                entity = oscard[entity];
                zuuluu = tangon.bind(report)(entity);
                michal = zuuluu.useToken;
                entity = 5;
                entity = oscard[entity];
                entity = option.bind(report)(entity);
                entity = entity.colors;
                entity = entity.BACKGROUND_PRIMARY;
                option = michal.bind(zuuluu)(entity);
                entity = 15;
                michal = oscard[entity];
                verify = tangon.bind(report)(michal);
                zuuluu = verify.hexToRgbaString;
                michal = oscard[entity];
                kiloes = tangon.bind(report)(michal);
                backup = kiloes.hexWithOpacity;
                michal = 0.5;
                michal = backup.bind(kiloes)(option, michal);
                verify = zuuluu.bind(verify)(michal);
                michal = oscard[entity];
                zuuluu = tangon.bind(report)(michal);
                michal = zuuluu.hexToRgbaString;
                entity = oscard[entity];
                oscard = tangon.bind(report)(entity);
                tangon = oscard.hexWithOpacity;
                entity = 0;
                entity = tangon.bind(oscard)(option, entity);
                kiloes = michal.bind(zuuluu)(entity);
                entity = null;
                entity = entity == foxtra;
                michal = undefined;
                if(entity) { _fun00006_ip = 244; continue _fun00005 }
 239:
                michal = foxtra.type;
 244:
                zuuluu = _closure1_slot0;
                tangon = _closure1_slot2;
                entity = 16;
                entity = tangon[entity];
                entity = zuuluu.bind(report)(entity);
                entity = entity.CollectiblesItemType;
                entity = entity.AVATAR_DECORATION;
                if(!(michal === entity)) { _fun00006_ip = 440; continue _fun00005 }
 283:
                zuuluu = _closure1_slot6;
                michal = _closure1_slot3;
                entity = {};
                oscard = yankee.regularMetadataContainer;
                tangon = new Array(1);
                tangon[0] = oscard;
                entity['style'] = tangon;
                sizing = _closure1_slot5;
                oscard = _closure1_slot0;
                backup = _closure1_slot2;
                tangon = 9;
                tangon = backup[tangon];
                tangon = oscard.bind(report)(tangon);
                oscard = tangon.Text;
                tangon = {'style': null, 'variant': 'heading-sm/bold', 'color': 'header-primary', 'lineClamp': 1, 'accessibilityRole': 'header'};
                backup = yankee.assetName;
                tangon['style'] = backup;
                backup = foxtra.name;
                tangon['children'] = backup;
                oscard = sizing.bind(report)(oscard, tangon);
                tangon = new Array(2);
                tangon[0] = oscard;
                backup = _closure1_slot8;
                oscard = {};
                oscard['product'] = foxtra;
                oscard['isPremiumUser'] = romeon;
                oscard['styles'] = yankee;
                oscard['collectibleProductState'] = offset;
                oscard = sizing.bind(report)(backup, oscard);
                tangon[1] = oscard;
                entity['children'] = tangon;
                entity = zuuluu.bind(report)(michal, entity);
                _fun00006_ip = 648; continue _fun00005;
 440:
                tangon = _closure1_slot6;
                zuuluu = _closure1_slot1;
                backup = _closure1_slot2;
                michal = 17;
                michal = backup[michal];
                zuuluu = zuuluu.bind(report)(michal);
                michal = {};
                sizing = yankee.regularMetadataContainer;
                oscard = new Array(1);
                oscard[0] = sizing;
                michal['style'] = oscard;
                oscard = new Array(3);
                oscard[0] = kiloes;
                oscard[1] = verify;
                oscard[2] = option;
                michal['colors'] = oscard;
                oscard = _closure1_slot4;
                option = oscard.START;
                michal['start'] = option;
                oscard = oscard.END;
                michal['end'] = oscard;
                verify = _closure1_slot5;
                option = _closure1_slot0;
                oscard = 9;
                oscard = backup[oscard];
                oscard = option.bind(report)(oscard);
                option = oscard.Text;
                oscard = {'style': null, 'variant': 'heading-sm/bold', 'color': 'header-primary', 'lineClamp': 1, 'accessibilityRole': 'header'};
                backup = yankee.assetName;
                oscard['style'] = backup;
                backup = foxtra.name;
                oscard['children'] = backup;
                option = verify.bind(report)(option, oscard);
                oscard = new Array(2);
                oscard[0] = option;
                option = _closure1_slot8;
                golfie = {};
                golfie['product'] = foxtra;
                golfie['isPremiumUser'] = romeon;
                golfie['styles'] = yankee;
                golfie['collectibleProductState'] = offset;
                golfie = verify.bind(report)(option, golfie);
                oscard[1] = golfie;
                michal['children'] = oscard;
                entity = tangon.bind(report)(zuuluu, michal);
 648:
                return entity;
            }
        };
        michal = tangon.bind(golfie)(michal);
        tangon = 18;
        tangon = oscard[tangon];
        oscard = report.bind(entity)(tangon);
        report = oscard.fileFinishedImporting;
        tangon = 'modules/collectibles/native/CollectiblesShopCardCardDetailsV2.tsx';
        tangon = report.bind(oscard)(tangon);
        zuuluu['default'] = michal;
        return entity;
    }
})();