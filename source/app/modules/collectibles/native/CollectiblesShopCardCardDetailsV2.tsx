// app/modules/collectibles/native/CollectiblesShopCardCardDetailsV2.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    report = argBar;
    backup = argBaz;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    var _closure1_slot1 = backup;
    var _closure1_slot2 = oscard;
    entity = global;
    option = entity.Object;
    golfie = option.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(option)(zuuluu, entity, tangon);
    entity = 0;
    golfie = oscard[entity];
    tangon = argCor;
    entity = undefined;
    golfie = tangon.bind(entity)(golfie);
    tangon = 1;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.View;
    var _closure1_slot3 = tangon;
    tangon = 2;
    tangon = oscard[tangon];
    tangon = backup.bind(entity)(tangon);
    var _closure1_slot4 = tangon;
    yankee = 3;
    tangon = oscard[yankee];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.VerticalGradient;
    var _closure1_slot5 = tangon;
    romeon = 4;
    tangon = oscard[romeon];
    tangon = report.bind(entity)(tangon);
    option = tangon.jsx;
    var _closure1_slot6 = option;
    tangon = tangon.jsxs;
    var _closure1_slot7 = tangon;
    tangon = 5;
    tangon = oscard[tangon];
    verify = report.bind(entity)(tangon);
    option = verify.createStyles;
    tangon = {};
    offset = {'position': 'absolute', 'height': '50%', 'width': '100%', 'padding': 10, 'flex': 1, 'bottom': 0, 'overflow': 'hidden', 'display': 'flex', 'flexDirection': 'column', 'justifyContent': 'flex-end'};
    foxtra = 6;
    foxtra = oscard[foxtra];
    foxtra = backup.bind(entity)(foxtra);
    foxtra = foxtra.radii;
    foxtra = foxtra.sm;
    offset['borderRadius'] = foxtra;
    tangon['regularMetadataContainer'] = offset;
    offset = {};
    offset['marginBottom'] = romeon;
    tangon['assetName'] = offset;
    offset = {'display': 'flex', 'flexDirection': 'row', 'alignItems': 'center'};
    tangon['priceDescription'] = offset;
    offset = {};
    offset['paddingLeft'] = yankee;
    tangon['discountPercentage'] = offset;
    offset = {'marginTop': 0, 'marginRight': 3};
    tangon['wheelIcon'] = offset;
    tangon = option.bind(verify)(tangon);
    var _closure1_slot8 = tangon;
    option = golfie.memo;
    tangon = function(argFoo) {
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            entity = argFoo;
            option = entity.product;
            golfie = entity.isPremiumUser;
            oscard = entity.styles;
            zuuluu = entity.collectibleProductState;
            michal = entity.isFetchingGoogleSkus;
            verify = _closure1_slot0;
            report = _closure1_slot2;
            tangon = 7;
            report = report[tangon];
            tangon = undefined;
            offset = verify.bind(tangon)(report);
            verify = offset.getFormattedPriceForCollectiblesProduct;
            report = true;
            yankee = verify.bind(offset)(option, golfie, report);
            if(!michal) { _fun00002_ip = 85; continue _fun00001 }
 76:
            michal = null;
            if(!(michal != yankee)) { _fun00002_ip = 930; continue _fun00001 }
 85:
            report = _closure1_slot0;
            verify = _closure1_slot2;
            michal = 9;
            michal = verify[michal];
            report = report.bind(tangon)(michal);
            michal = report.getProductDiscount;
            michal = michal.bind(report)(option, golfie);
            kiloes = michal.discountPercentage;
            michal = 'partiallyOwnedBundle';
            if(!(michal !== zuuluu)) { _fun00002_ip = 806; continue _fun00001 }
 136:
            michal = 'purchased';
            if(!(michal !== zuuluu)) { _fun00002_ip = 682; continue _fun00001 }
 147:
            michal = 'nitroUpsell';
            if(!(michal !== zuuluu)) { _fun00002_ip = 558; continue _fun00001 }
 158:
            michal = 'nitroClaim';
            if(!(michal !== zuuluu)) { _fun00002_ip = 432; continue _fun00001 }
 171:
            report = _closure1_slot7;
            zuuluu = _closure1_slot3;
            michal = {};
            option = oscard.priceDescription;
            michal['style'] = option;
            option = golfie;
            if(!option) { _fun00002_ip = 257; continue _fun00001 }
 197:
            offset = _closure1_slot6;
            verify = _closure1_slot0;
            romeon = _closure1_slot2;
            golfie = 12;
            golfie = romeon[golfie];
            golfie = verify.bind(tangon)(golfie);
            verify = golfie.NitroWheelIcon;
            golfie = {'size': 'xs', 'color': 'header-primary'};
            romeon = oscard.wheelIcon;
            golfie['style'] = romeon;
            option = offset.bind(tangon)(verify, golfie);
 257:
            golfie = new Array(3);
            golfie[0] = option;
            offset = _closure1_slot6;
            verify = _closure1_slot0;
            option = _closure1_slot2;
            romeon = 10;
            option = option[romeon];
            option = verify.bind(tangon)(option);
            verify = option.Text;
            option = {'variant': 'text-xs/semibold', 'color': 'header-primary', 'lineClamp': 1};
            option['children'] = yankee;
            option = offset.bind(tangon)(verify, option);
            golfie[1] = option;
            option = 0;
            option = kiloes > option;
            if(!option) { _fun00002_ip = 416; continue _fun00001 }
 327:
            yankee = _closure1_slot6;
            offset = _closure1_slot0;
            verify = _closure1_slot2;
            verify = verify[romeon];
            verify = offset.bind(tangon)(verify);
            offset = verify.Text;
            verify = {'style': null, 'color': 'text-positive', 'variant': 'text-xs/semibold', 'lineClamp': 1};
            romeon = oscard.discountPercentage;
            verify['style'] = romeon;
            romeon = global;
            romeon = romeon.HermesInternal;
            backup = romeon.concat;
            foxtra = '-';
            romeon = '%';
            romeon = backup.bind(foxtra)(kiloes, romeon);
            verify['children'] = romeon;
            option = yankee.bind(tangon)(offset, verify);
 416:
            golfie[2] = option;
            michal['children'] = golfie;
            michal = report.bind(tangon)(zuuluu, michal);
            return michal;
 432:
            report = _closure1_slot6;
            zuuluu = _closure1_slot3;
            michal = {};
            golfie = oscard.priceDescription;
            michal['style'] = golfie;
            romeon = _closure1_slot0;
            foxtra = _closure1_slot2;
            golfie = 10;
            golfie = foxtra[golfie];
            golfie = romeon.bind(tangon)(golfie);
            option = golfie.Text;
            golfie = {'variant': 'text-xs/semibold', 'color': 'header-primary', 'lineClamp': 1};
            verify = 11;
            offset = foxtra[verify];
            offset = romeon.bind(tangon)(offset);
            yankee = offset.intl;
            offset = yankee.string;
            verify = foxtra[verify];
            verify = romeon.bind(tangon)(verify);
            verify = verify.t;
            verify = verify.rt69oq;
            verify = offset.bind(yankee)(verify);
            golfie['children'] = verify;
            golfie = report.bind(tangon)(option, golfie);
            michal['children'] = golfie;
            michal = report.bind(tangon)(zuuluu, michal);
            return michal;
 558:
            report = _closure1_slot6;
            zuuluu = _closure1_slot3;
            michal = {};
            golfie = oscard.priceDescription;
            michal['style'] = golfie;
            romeon = _closure1_slot0;
            foxtra = _closure1_slot2;
            golfie = 10;
            golfie = foxtra[golfie];
            golfie = romeon.bind(tangon)(golfie);
            option = golfie.Text;
            golfie = {'variant': 'text-xs/semibold', 'color': 'header-primary', 'lineClamp': 1};
            verify = 11;
            offset = foxtra[verify];
            offset = romeon.bind(tangon)(offset);
            yankee = offset.intl;
            offset = yankee.string;
            verify = foxtra[verify];
            verify = romeon.bind(tangon)(verify);
            verify = verify.t;
            verify = verify.sEAnVF;
            verify = offset.bind(yankee)(verify);
            golfie['children'] = verify;
            golfie = report.bind(tangon)(option, golfie);
            michal['children'] = golfie;
            michal = report.bind(tangon)(zuuluu, michal);
            return michal;
 682:
            report = _closure1_slot6;
            zuuluu = _closure1_slot3;
            michal = {};
            golfie = oscard.priceDescription;
            michal['style'] = golfie;
            romeon = _closure1_slot0;
            foxtra = _closure1_slot2;
            golfie = 10;
            golfie = foxtra[golfie];
            golfie = romeon.bind(tangon)(golfie);
            option = golfie.Text;
            golfie = {'variant': 'text-xs/semibold', 'color': 'header-primary', 'lineClamp': 1};
            verify = 11;
            offset = foxtra[verify];
            offset = romeon.bind(tangon)(offset);
            yankee = offset.intl;
            offset = yankee.string;
            verify = foxtra[verify];
            verify = romeon.bind(tangon)(verify);
            verify = verify.t;
            verify = verify.6cfuDg;
            verify = offset.bind(yankee)(verify);
            golfie['children'] = verify;
            golfie = report.bind(tangon)(option, golfie);
            michal['children'] = golfie;
            michal = report.bind(tangon)(zuuluu, michal);
            return michal;
 806:
            report = _closure1_slot6;
            zuuluu = _closure1_slot3;
            michal = {};
            oscard = oscard.priceDescription;
            michal['style'] = oscard;
            yankee = _closure1_slot0;
            romeon = _closure1_slot2;
            oscard = 10;
            oscard = romeon[oscard];
            oscard = yankee.bind(tangon)(oscard);
            golfie = oscard.Text;
            oscard = {'variant': 'text-xs/semibold', 'color': 'header-primary', 'lineClamp': 1};
            option = 11;
            verify = romeon[option];
            verify = yankee.bind(tangon)(verify);
            offset = verify.intl;
            verify = offset.string;
            option = romeon[option];
            option = yankee.bind(tangon)(option);
            option = option.t;
            option = option.BEjTio;
            option = verify.bind(offset)(option);
            oscard['children'] = option;
            oscard = report.bind(tangon)(golfie, oscard);
            michal['children'] = oscard;
            michal = report.bind(tangon)(zuuluu, michal);
            return michal;
 930:
            zuuluu = _closure1_slot6;
            michal = _closure1_slot0;
            report = _closure1_slot2;
            entity = 8;
            entity = report[entity];
            entity = michal.bind(tangon)(entity);
            michal = entity.CollectiblesShopPricePlaceholder;
            entity = {};
            entity = zuuluu.bind(tangon)(michal, entity);
            return entity;
        }
    };
    option = option.bind(golfie)(tangon);
    var _closure1_slot9 = option;
    tangon = 'PriceDescription';
    option['displayName'] = tangon;
    tangon = golfie.memo;
    michal = function(argFoo) {
        _fun00003: for(var _fun00004_ip = 0; ; ) switch(_fun00004_ip) {
 0:
            entity = argFoo;
            backup = entity.product;
            yankee = entity.collectibleProductState;
            entity = _closure1_slot8;
            report = undefined;
            romeon = entity.bind(report)();
            michal = _closure1_slot0;
            zuuluu = _closure1_slot2;
            entity = 13;
            entity = zuuluu[entity];
            tangon = michal.bind(report)(entity);
            entity = tangon.useCurrentUser;
            oscard = entity.bind(tangon)();
            option = _closure1_slot1;
            entity = 14;
            entity = zuuluu[entity];
            tangon = option.bind(report)(entity);
            entity = tangon.canUseCollectibles;
            foxtra = entity.bind(tangon)(oscard);
            entity = 15;
            entity = zuuluu[entity];
            oscard = michal.bind(report)(entity);
            tangon = oscard.useToken;
            entity = 6;
            entity = zuuluu[entity];
            entity = option.bind(report)(entity);
            entity = entity.colors;
            entity = entity.BACKGROUND_PRIMARY;
            option = tangon.bind(oscard)(entity);
            entity = 16;
            tangon = zuuluu[entity];
            verify = michal.bind(report)(tangon);
            oscard = verify.hexToRgbaString;
            tangon = zuuluu[entity];
            kiloes = michal.bind(report)(tangon);
            offset = kiloes.hexWithOpacity;
            tangon = 0.5;
            tangon = offset.bind(kiloes)(option, tangon);
            verify = oscard.bind(verify)(tangon);
            tangon = zuuluu[entity];
            oscard = michal.bind(report)(tangon);
            tangon = oscard.hexToRgbaString;
            entity = zuuluu[entity];
            kiloes = michal.bind(report)(entity);
            offset = kiloes.hexWithOpacity;
            entity = 0;
            entity = offset.bind(kiloes)(option, entity);
            sizing = tangon.bind(oscard)(entity);
            entity = 17;
            entity = zuuluu[entity];
            tangon = michal.bind(report)(entity);
            zuuluu = tangon.useStateFromStores;
            entity = _closure1_slot4;
            michal = new Array(1);
            michal[0] = entity;
            entity = function() {
                michal = _closure1_slot4;
                entity = michal.isFetchingGoogleSkus;
                entity = entity.bind(michal)();
                return entity;
            };
            offset = zuuluu.bind(tangon)(michal, entity);
            entity = null;
            entity = entity == backup;
            michal = undefined;
            if(entity) { _fun00004_ip = 288; continue _fun00003 }
 283:
            michal = backup.type;
 288:
            zuuluu = _closure1_slot0;
            tangon = _closure1_slot2;
            entity = 18;
            entity = tangon[entity];
            entity = zuuluu.bind(report)(entity);
            entity = entity.CollectiblesItemType;
            entity = entity.AVATAR_DECORATION;
            if(!(michal === entity)) { _fun00004_ip = 489; continue _fun00003 }
 327:
            zuuluu = _closure1_slot7;
            michal = _closure1_slot3;
            entity = {};
            oscard = romeon.regularMetadataContainer;
            tangon = new Array(1);
            tangon[0] = oscard;
            entity['style'] = tangon;
            output = _closure1_slot6;
            oscard = _closure1_slot0;
            kiloes = _closure1_slot2;
            tangon = 10;
            tangon = kiloes[tangon];
            tangon = oscard.bind(report)(tangon);
            oscard = tangon.Text;
            tangon = {'style': null, 'variant': 'heading-sm/bold', 'color': 'header-primary', 'lineClamp': 1, 'accessibilityRole': 'header'};
            kiloes = romeon.assetName;
            tangon['style'] = kiloes;
            kiloes = backup.name;
            tangon['children'] = kiloes;
            oscard = output.bind(report)(oscard, tangon);
            tangon = new Array(2);
            tangon[0] = oscard;
            kiloes = _closure1_slot9;
            oscard = {};
            oscard['product'] = backup;
            oscard['isPremiumUser'] = foxtra;
            oscard['styles'] = romeon;
            oscard['collectibleProductState'] = yankee;
            oscard['isFetchingGoogleSkus'] = offset;
            oscard = output.bind(report)(kiloes, oscard);
            tangon[1] = oscard;
            entity['children'] = tangon;
            entity = zuuluu.bind(report)(michal, entity);
            _fun00004_ip = 702; continue _fun00003;
 489:
            tangon = _closure1_slot7;
            zuuluu = _closure1_slot1;
            kiloes = _closure1_slot2;
            michal = 19;
            michal = kiloes[michal];
            zuuluu = zuuluu.bind(report)(michal);
            michal = {};
            output = romeon.regularMetadataContainer;
            oscard = new Array(1);
            oscard[0] = output;
            michal['style'] = oscard;
            oscard = new Array(3);
            oscard[0] = sizing;
            oscard[1] = verify;
            oscard[2] = option;
            michal['colors'] = oscard;
            oscard = _closure1_slot5;
            option = oscard.START;
            michal['start'] = option;
            oscard = oscard.END;
            michal['end'] = oscard;
            verify = _closure1_slot6;
            option = _closure1_slot0;
            oscard = 10;
            oscard = kiloes[oscard];
            oscard = option.bind(report)(oscard);
            option = oscard.Text;
            oscard = {'style': null, 'variant': 'heading-sm/bold', 'color': 'header-primary', 'lineClamp': 1, 'accessibilityRole': 'header'};
            kiloes = romeon.assetName;
            oscard['style'] = kiloes;
            kiloes = backup.name;
            oscard['children'] = kiloes;
            option = verify.bind(report)(option, oscard);
            oscard = new Array(2);
            oscard[0] = option;
            option = _closure1_slot9;
            golfie = {};
            golfie['product'] = backup;
            golfie['isPremiumUser'] = foxtra;
            golfie['styles'] = romeon;
            golfie['collectibleProductState'] = yankee;
            golfie['isFetchingGoogleSkus'] = offset;
            golfie = verify.bind(report)(option, golfie);
            oscard[1] = golfie;
            michal['children'] = oscard;
            entity = tangon.bind(report)(zuuluu, michal);
 702:
            return entity;
        }
    };
    michal = tangon.bind(golfie)(michal);
    tangon = 20;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/collectibles/native/CollectiblesShopCardCardDetailsV2.tsx';
    tangon = report.bind(oscard)(tangon);
    zuuluu['default'] = michal;
    return entity;
})();