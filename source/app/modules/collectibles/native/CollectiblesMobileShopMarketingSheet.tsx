// app/modules/collectibles/native/CollectiblesMobileShopMarketingSheet.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    report = argBar;
    yankee = argBaz;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    var _closure1_slot1 = yankee;
    var _closure1_slot2 = oscard;
    entity = global;
    option = entity.Object;
    golfie = option.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(option)(zuuluu, entity, tangon);
    entity = 0;
    tangon = oscard[entity];
    entity = undefined;
    tangon = yankee.bind(entity)(tangon);
    var _closure1_slot3 = tangon;
    offset = 1;
    golfie = oscard[offset];
    tangon = argCor;
    tangon = tangon.bind(entity)(golfie);
    var _closure1_slot4 = tangon;
    tangon = 2;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    golfie = tangon.Image;
    var _closure1_slot5 = golfie;
    tangon = tangon.View;
    var _closure1_slot6 = tangon;
    tangon = 3;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.ContentDismissActionType;
    var _closure1_slot7 = tangon;
    tangon = 4;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    golfie = tangon.jsx;
    var _closure1_slot8 = golfie;
    tangon = tangon.jsxs;
    var _closure1_slot9 = tangon;
    tangon = 5;
    tangon = oscard[tangon];
    option = report.bind(entity)(tangon);
    golfie = option.createStyles;
    tangon = {};
    verify = {};
    verify['flex'] = offset;
    offset = 6;
    romeon = oscard[offset];
    romeon = yankee.bind(entity)(romeon);
    romeon = romeon.colors;
    romeon = romeon.BG_BASE_SECONDARY;
    verify['backgroundColor'] = romeon;
    romeon = oscard[offset];
    romeon = yankee.bind(entity)(romeon);
    romeon = romeon.radii;
    romeon = romeon.md;
    verify['borderRadius'] = romeon;
    tangon['container'] = verify;
    romeon = 16;
    verify = {'marginBottom': 50, 'marginTop': 16, 'flexDirection': 'column', 'gap': 20};
    tangon['body'] = verify;
    verify = {'width': '100%', 'height': 178};
    tangon['banner'] = verify;
    verify = {'flexDirection': 'column', 'gap': 24, 'alignItems': 'center'};
    tangon['textBody'] = verify;
    verify = {'flexDirection': 'row', 'alignItems': 'center', 'width': '90%', 'justifyContent': 'space-between', 'gap': 12, 'marginBottom': 8};
    tangon['description'] = verify;
    verify = {'display': 'flex', 'flexDirection': 'row', 'flexWrap': 'wrap', 'flex': 1};
    tangon['textContainer'] = verify;
    verify = {};
    foxtra = oscard[offset];
    foxtra = yankee.bind(entity)(foxtra);
    foxtra = foxtra.colors;
    foxtra = foxtra.BACKGROUND_TERTIARY;
    verify['backgroundColor'] = foxtra;
    verify['padding'] = offset;
    foxtra = oscard[offset];
    foxtra = yankee.bind(entity)(foxtra);
    foxtra = foxtra.radii;
    foxtra = foxtra.round;
    verify['borderRadius'] = foxtra;
    tangon['iconContainer'] = verify;
    verify = {};
    verify['paddingHorizontal'] = romeon;
    tangon['buttonContainer'] = verify;
    verify = {};
    offset = oscard[offset];
    offset = yankee.bind(entity)(offset);
    offset = offset.radii;
    offset = offset.round;
    verify['borderRadius'] = offset;
    tangon['button'] = verify;
    tangon = golfie.bind(option)(tangon);
    var _closure1_slot10 = tangon;
    tangon = 21;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/collectibles/native/CollectiblesMobileShopMarketingSheet.tsx';
    tangon = report.bind(oscard)(tangon);
    michal = function(argFoo) { // Original name: CollectiblesMobileShopMarketingSheet
        entity = argFoo;
        michal = entity.markAsDismissed;
        var _closure2_slot0 = michal;
        entity = _closure1_slot10;
        tangon = undefined;
        result = entity.bind(tangon)();
        kiloes = _closure1_slot1;
        source = _closure1_slot2;
        entity = 7;
        entity = source[entity];
        entity = kiloes.bind(tangon)(entity);
        entity = entity.bind(tangon)();
        entity = entity.bottom;
        var _closure2_slot1 = entity;
        report = _closure1_slot4;
        oscard = report.useEffect;
        zuuluu = new Array(1);
        zuuluu[0] = michal;
        michal = function() {
            entity = function() {
                zuuluu = _closure2_slot0;
                entity = _closure1_slot7;
                michal = entity.USER_DISMISS;
                entity = undefined;
                entity = zuuluu.bind(entity)(michal);
                return entity;
            };
            return entity;
        };
        michal = oscard.bind(report)(michal, zuuluu);
        michal = report.useState;
        zuuluu = 1;
        golfie = michal.bind(report)(zuuluu);
        oscard = _closure1_slot3;
        michal = 2;
        michal = oscard.bind(tangon)(golfie, michal);
        oscard = 0;
        golfie = michal[oscard];
        var _closure2_slot2 = golfie;
        oscard = michal[zuuluu];
        var _closure2_slot3 = oscard;
        zuuluu = report.useCallback;
        michal = new Array(3);
        michal[0] = golfie;
        michal[1] = oscard;
        michal[2] = entity;
        entity = function(argFoo, argBar) {
            _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
                michal = argBar;
                zuuluu = _closure2_slot2;
                if(!(michal !== zuuluu)) { _fun00002_ip = 33; continue _fun00001 }
 14:
                zuuluu = _closure2_slot3;
                entity = _closure2_slot1;
                michal = michal + entity;
                entity = undefined;
                entity = zuuluu.bind(entity)(michal);
 33:
                entity = undefined;
                return entity;
            }
        };
        verify = zuuluu.bind(report)(entity, michal);
        zuuluu = _closure1_slot8;
        update = _closure1_slot0;
        entity = 8;
        entity = source[entity];
        entity = update.bind(tangon)(entity);
        michal = entity.ThemeContextProvider;
        entity = {};
        report = 9;
        report = source[report];
        report = update.bind(tangon)(report);
        oscard = report.BottomSheet;
        report = {};
        option = function() { // Original name: onDismiss
            zuuluu = _closure2_slot0;
            entity = _closure1_slot7;
            michal = entity.USER_DISMISS;
            entity = undefined;
            entity = zuuluu.bind(entity)(michal);
            return entity;
        };
        report['onDismiss'] = option;
        report['contentHeight'] = golfie;
        golfie = true;
        report['scrollable'] = golfie;
        report['startExpanded'] = golfie;
        golfie = 10;
        golfie = source[golfie];
        golfie = update.bind(tangon)(golfie);
        option = golfie.BottomSheetScrollView;
        golfie = {};
        golfie['onContentSizeChange'] = verify;
        verify = false;
        golfie['scrollsToTop'] = verify;
        offset = result.container;
        verify = new Array(1);
        verify[0] = offset;
        golfie['style'] = verify;
        yankee = _closure1_slot9;
        offset = _closure1_slot6;
        verify = {};
        foxtra = result.body;
        verify['style'] = foxtra;
        foxtra = _closure1_slot5;
        romeon = {};
        backup = 'contain';
        romeon['resizeMode'] = backup;
        backup = 11;
        backup = source[backup];
        backup = kiloes.bind(tangon)(backup);
        romeon['source'] = backup;
        backup = result.banner;
        romeon['style'] = backup;
        foxtra = zuuluu.bind(tangon)(foxtra, romeon);
        romeon = new Array(3);
        romeon[0] = foxtra;
        foxtra = {};
        backup = result.textBody;
        foxtra['style'] = backup;
        sequen = 12;
        backup = source[sequen];
        backup = update.bind(tangon)(backup);
        echoed = backup.Text;
        backup = {'variant': 'heading-xl/bold', 'color': 'header-primary'};
        output = 13;
        ctrled = source[output];
        ctrled = update.bind(tangon)(ctrled);
        config = ctrled.intl;
        vacuum = config.string;
        ctrled = source[output];
        ctrled = update.bind(tangon)(ctrled);
        ctrled = ctrled.t;
        ctrled = ctrled.RUtg4u;
        ctrled = vacuum.bind(config)(ctrled);
        backup['children'] = ctrled;
        echoed = zuuluu.bind(tangon)(echoed, backup);
        backup = new Array(4);
        backup[0] = echoed;
        echoed = {};
        ctrled = result.description;
        echoed['style'] = ctrled;
        ctrled = {};
        vacuum = result.iconContainer;
        ctrled['style'] = vacuum;
        vacuum = 14;
        vacuum = source[vacuum];
        vacuum = update.bind(tangon)(vacuum);
        config = vacuum.ShopIcon;
        vacuum = {};
        record = 'md';
        vacuum['size'] = record;
        vacuum = zuuluu.bind(tangon)(config, vacuum);
        ctrled['children'] = vacuum;
        vacuum = zuuluu.bind(tangon)(offset, ctrled);
        ctrled = new Array(2);
        ctrled[0] = vacuum;
        vacuum = {};
        config = result.textContainer;
        vacuum['style'] = config;
        config = source[sequen];
        config = update.bind(tangon)(config);
        cntext = config.Text;
        config = {'variant': 'heading-sm/medium', 'color': 'header-secondary'};
        papara = source[output];
        papara = update.bind(tangon)(papara);
        status = papara.intl;
        target = status.string;
        papara = source[output];
        papara = update.bind(tangon)(papara);
        papara = papara.t;
        papara = papara.MQkmBQ;
        papara = target.bind(status)(papara);
        config['children'] = papara;
        config = zuuluu.bind(tangon)(cntext, config);
        vacuum['children'] = config;
        vacuum = zuuluu.bind(tangon)(offset, vacuum);
        ctrled[1] = vacuum;
        echoed['children'] = ctrled;
        echoed = yankee.bind(tangon)(offset, echoed);
        backup[1] = echoed;
        echoed = {};
        ctrled = result.description;
        echoed['style'] = ctrled;
        ctrled = {};
        vacuum = result.iconContainer;
        ctrled['style'] = vacuum;
        vacuum = 15;
        vacuum = source[vacuum];
        vacuum = update.bind(tangon)(vacuum);
        config = vacuum.SparklesIcon;
        vacuum = {};
        vacuum['size'] = record;
        vacuum = zuuluu.bind(tangon)(config, vacuum);
        ctrled['children'] = vacuum;
        vacuum = zuuluu.bind(tangon)(offset, ctrled);
        ctrled = new Array(2);
        ctrled[0] = vacuum;
        vacuum = {};
        config = result.textContainer;
        vacuum['style'] = config;
        config = source[sequen];
        config = update.bind(tangon)(config);
        cntext = config.Text;
        config = {'variant': 'heading-sm/medium', 'color': 'header-secondary'};
        papara = source[output];
        papara = update.bind(tangon)(papara);
        status = papara.intl;
        target = status.string;
        papara = source[output];
        papara = update.bind(tangon)(papara);
        papara = papara.t;
        papara = papara.Lh3QfX;
        papara = target.bind(status)(papara);
        config['children'] = papara;
        config = zuuluu.bind(tangon)(cntext, config);
        vacuum['children'] = config;
        vacuum = zuuluu.bind(tangon)(offset, vacuum);
        ctrled[1] = vacuum;
        echoed['children'] = ctrled;
        echoed = yankee.bind(tangon)(offset, echoed);
        backup[2] = echoed;
        echoed = {};
        ctrled = result.description;
        echoed['style'] = ctrled;
        ctrled = {};
        vacuum = result.iconContainer;
        ctrled['style'] = vacuum;
        vacuum = 16;
        vacuum = source[vacuum];
        vacuum = update.bind(tangon)(vacuum);
        config = vacuum.NitroWheelIcon;
        vacuum = {};
        vacuum['size'] = record;
        vacuum = zuuluu.bind(tangon)(config, vacuum);
        ctrled['children'] = vacuum;
        vacuum = zuuluu.bind(tangon)(offset, ctrled);
        ctrled = new Array(2);
        ctrled[0] = vacuum;
        vacuum = {};
        config = result.textContainer;
        vacuum['style'] = config;
        sequen = source[sequen];
        sequen = update.bind(tangon)(sequen);
        config = sequen.Text;
        sequen = {'variant': 'heading-sm/medium', 'color': 'header-secondary'};
        record = source[output];
        record = update.bind(tangon)(record);
        papara = record.intl;
        cntext = papara.string;
        record = source[output];
        record = update.bind(tangon)(record);
        record = record.t;
        record = record.gxEIl5;
        record = cntext.bind(papara)(record);
        sequen['children'] = record;
        sequen = zuuluu.bind(tangon)(config, sequen);
        vacuum['children'] = sequen;
        vacuum = zuuluu.bind(tangon)(offset, vacuum);
        ctrled[1] = vacuum;
        echoed['children'] = ctrled;
        echoed = yankee.bind(tangon)(offset, echoed);
        backup[3] = echoed;
        foxtra['children'] = backup;
        foxtra = yankee.bind(tangon)(offset, foxtra);
        romeon[1] = foxtra;
        foxtra = {};
        backup = result.buttonContainer;
        foxtra['style'] = backup;
        backup = 17;
        backup = source[backup];
        kiloes = kiloes.bind(tangon)(backup);
        backup = {};
        result = result.button;
        backup['style'] = result;
        result = source[output];
        result = update.bind(tangon)(result);
        echoed = result.intl;
        result = echoed.string;
        output = source[output];
        output = update.bind(tangon)(output);
        output = output.t;
        output = output.nHOGt7;
        output = result.bind(echoed)(output);
        backup['text'] = output;
        sizing = function() { // Original name: onPress
            tangon = _closure1_slot0;
            report = _closure1_slot2;
            entity = 18;
            zuuluu = report[entity];
            entity = undefined;
            golfie = tangon.bind(entity)(zuuluu);
            oscard = golfie.openCollectiblesShop;
            zuuluu = {};
            tangon = _closure1_slot1;
            option = 19;
            verify = report[option];
            verify = tangon.bind(entity)(verify);
            offset = verify.COLLECTIBLES_MOBILE_SHOP_MARKETING_SHEET;
            verify = new Array(1);
            verify[0] = offset;
            zuuluu['analyticsLocations'] = verify;
            option = report[option];
            option = tangon.bind(entity)(option);
            option = option.COLLECTIBLES_MOBILE_SHOP_MARKETING_SHEET;
            zuuluu['analyticsSource'] = option;
            zuuluu = oscard.bind(golfie)(zuuluu);
            zuuluu = 20;
            zuuluu = report[zuuluu];
            tangon = tangon.bind(entity)(zuuluu);
            zuuluu = tangon.hideActionSheet;
            zuuluu = zuuluu.bind(tangon)();
            zuuluu = _closure2_slot0;
            michal = _closure1_slot7;
            michal = michal.TAKE_ACTION;
            michal = zuuluu.bind(entity)(michal);
            return entity;
        };
        backup['onPress'] = sizing;
        backup = zuuluu.bind(tangon)(kiloes, backup);
        foxtra['children'] = backup;
        foxtra = zuuluu.bind(tangon)(offset, foxtra);
        romeon[2] = foxtra;
        verify['children'] = romeon;
        verify = yankee.bind(tangon)(offset, verify);
        golfie['children'] = verify;
        golfie = zuuluu.bind(tangon)(option, golfie);
        report['children'] = golfie;
        report = zuuluu.bind(tangon)(oscard, report);
        entity['children'] = report;
        entity = zuuluu.bind(tangon)(michal, entity);
        return entity;
    };
    zuuluu['default'] = michal;
    return entity;
})();