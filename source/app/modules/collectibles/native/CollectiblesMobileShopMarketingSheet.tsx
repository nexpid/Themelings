// app/modules/collectibles/native/CollectiblesMobileShopMarketingSheet.tsx
export default (function(argFoo, argBar, argBaz, argCorge, _, argFred, argPlugh) {
    report = argBar;
    yankee = argBaz;
    zulu = argFred;
    oscar = argPlugh;
    var _closure1_slot0 = report;
    var _closure1_slot1 = yankee;
    var _closure1_slot2 = oscar;
    entity = global;
    options = entity.Object;
    golf = options.defineProperty;
    tango = {};
    entity = true;
    tango['value'] = entity;
    entity = '__esModule';
    entity = golf.bind(options)(zulu, entity, tango);
    entity = 0;
    tango = oscar[entity];
    entity = undefined;
    tango = yankee.bind(entity)(tango);
    var _closure1_slot3 = tango;
    offset = 1;
    golf = oscar[offset];
    tango = argCorge;
    tango = tango.bind(entity)(golf);
    var _closure1_slot4 = tango;
    tango = 2;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    golf = tango.Image;
    var _closure1_slot5 = golf;
    tango = tango.View;
    var _closure1_slot6 = tango;
    tango = 3;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.ContentDismissActionType;
    var _closure1_slot7 = tango;
    tango = 4;
    golf = oscar[tango];
    golf = report.bind(entity)(golf);
    golf = golf.jsx;
    var _closure1_slot8 = golf;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.jsxs;
    var _closure1_slot9 = tango;
    tango = 5;
    tango = oscar[tango];
    options = report.bind(entity)(tango);
    golf = options.createStyles;
    tango = {};
    verify = {};
    verify['flex'] = offset;
    offset = 6;
    romeo = oscar[offset];
    romeo = yankee.bind(entity)(romeo);
    romeo = romeo.colors;
    romeo = romeo.BG_BASE_SECONDARY;
    verify['backgroundColor'] = romeo;
    romeo = oscar[offset];
    romeo = yankee.bind(entity)(romeo);
    romeo = romeo.radii;
    romeo = romeo.md;
    verify['borderRadius'] = romeo;
    tango['container'] = verify;
    romeo = 16;
    verify = {'marginBottom': 50, 'marginTop': 16, 'flexDirection': 'column', 'gap': 20};
    tango['body'] = verify;
    verify = {'width': '100%', 'height': 178};
    tango['banner'] = verify;
    verify = {'flexDirection': 'column', 'gap': 24, 'alignItems': 'center'};
    tango['textBody'] = verify;
    verify = {'flexDirection': 'row', 'alignItems': 'center', 'width': '90%', 'justifyContent': 'space-between', 'gap': 12, 'marginBottom': 8};
    tango['description'] = verify;
    verify = {'display': 'flex', 'flexDirection': 'row', 'flexWrap': 'wrap', 'flex': 1};
    tango['textContainer'] = verify;
    verify = {};
    foxtrot = oscar[offset];
    foxtrot = yankee.bind(entity)(foxtrot);
    foxtrot = foxtrot.colors;
    foxtrot = foxtrot.BACKGROUND_TERTIARY;
    verify['backgroundColor'] = foxtrot;
    verify['padding'] = offset;
    foxtrot = oscar[offset];
    foxtrot = yankee.bind(entity)(foxtrot);
    foxtrot = foxtrot.radii;
    foxtrot = foxtrot.round;
    verify['borderRadius'] = foxtrot;
    tango['iconContainer'] = verify;
    verify = {};
    verify['paddingHorizontal'] = romeo;
    tango['buttonContainer'] = verify;
    verify = {};
    offset = oscar[offset];
    offset = yankee.bind(entity)(offset);
    offset = offset.radii;
    offset = offset.round;
    verify['borderRadius'] = offset;
    tango['button'] = verify;
    tango = golf.bind(options)(tango);
    var _closure1_slot10 = tango;
    tango = 21;
    tango = oscar[tango];
    oscar = report.bind(entity)(tango);
    report = oscar.fileFinishedImporting;
    tango = 'modules/collectibles/native/CollectiblesMobileShopMarketingSheet.tsx';
    tango = report.bind(oscar)(tango);
    mike = function(argFoo) { // Original name: CollectiblesMobileShopMarketingSheet
        entity = argFoo;
        mike = entity.markAsDismissed;
        var _closure2_slot0 = mike;
        entity = _closure1_slot10;
        tango = undefined;
        result = entity.bind(tango)();
        kilo = _closure1_slot1;
        source = _closure1_slot2;
        entity = 7;
        entity = source[entity];
        entity = kilo.bind(tango)(entity);
        entity = entity.bind(tango)();
        entity = entity.bottom;
        var _closure2_slot1 = entity;
        report = _closure1_slot4;
        oscar = report.useEffect;
        zulu = new Array(1);
        zulu[0] = mike;
        mike = function() {
            entity = function() {
                zulu = _closure2_slot0;
                entity = _closure1_slot7;
                mike = entity.USER_DISMISS;
                entity = undefined;
                entity = zulu.bind(entity)(mike);
                return entity;
            };
            return entity;
        };
        mike = oscar.bind(report)(mike, zulu);
        mike = report.useState;
        zulu = 1;
        golf = mike.bind(report)(zulu);
        oscar = _closure1_slot3;
        mike = 2;
        mike = oscar.bind(tango)(golf, mike);
        oscar = 0;
        golf = mike[oscar];
        var _closure2_slot2 = golf;
        oscar = mike[zulu];
        var _closure2_slot3 = oscar;
        zulu = report.useCallback;
        mike = new Array(3);
        mike[0] = golf;
        mike[1] = oscar;
        mike[2] = entity;
        entity = function(argFoo) {
            _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
                mike = argFoo;
                entity = mike.nativeEvent;
                entity = entity.layout;
                tango = entity.height;
                zulu = _closure2_slot2;
                if(!(tango !== zulu)) { _fun00002_ip = 65; continue _fun00001 }
 30:
                zulu = _closure2_slot3;
                mike = mike.nativeEvent;
                mike = mike.layout;
                mike = mike.height;
                entity = _closure2_slot1;
                mike = mike + entity;
                entity = undefined;
                entity = zulu.bind(entity)(mike);
 65:
                entity = undefined;
                return entity;
            }
        };
        verify = zulu.bind(report)(entity, mike);
        zulu = _closure1_slot8;
        update = _closure1_slot0;
        entity = 8;
        entity = source[entity];
        entity = update.bind(tango)(entity);
        mike = entity.ThemeContextProvider;
        entity = {};
        report = 9;
        report = source[report];
        report = update.bind(tango)(report);
        oscar = report.BottomSheet;
        report = {};
        options = function() { // Original name: onDismiss
            zulu = _closure2_slot0;
            entity = _closure1_slot7;
            mike = entity.USER_DISMISS;
            entity = undefined;
            entity = zulu.bind(entity)(mike);
            return entity;
        };
        report['onDismiss'] = options;
        report['contentHeight'] = golf;
        golf = true;
        report['scrollable'] = golf;
        report['startExpanded'] = golf;
        golf = 10;
        golf = source[golf];
        golf = update.bind(tango)(golf);
        options = golf.BottomSheetScrollView;
        golf = {};
        golf['onLayout'] = verify;
        verify = false;
        golf['scrollsToTop'] = verify;
        offset = result.container;
        verify = new Array(1);
        verify[0] = offset;
        golf['style'] = verify;
        yankee = _closure1_slot9;
        offset = _closure1_slot6;
        verify = {};
        foxtrot = result.body;
        verify['style'] = foxtrot;
        foxtrot = _closure1_slot5;
        romeo = {};
        backup = 'contain';
        romeo['resizeMode'] = backup;
        backup = 11;
        backup = source[backup];
        backup = kilo.bind(tango)(backup);
        romeo['source'] = backup;
        backup = result.banner;
        romeo['style'] = backup;
        foxtrot = zulu.bind(tango)(foxtrot, romeo);
        romeo = new Array(3);
        romeo[0] = foxtrot;
        foxtrot = {};
        backup = result.textBody;
        foxtrot['style'] = backup;
        sequence = 12;
        backup = source[sequence];
        backup = update.bind(tango)(backup);
        echo = backup.Text;
        backup = {'variant': 'heading-xl/bold', 'color': 'header-primary'};
        output = 13;
        control = source[output];
        control = update.bind(tango)(control);
        config = control.intl;
        vacuum = config.string;
        control = source[output];
        control = update.bind(tango)(control);
        control = control.t;
        control = control.RUtg4u;
        control = vacuum.bind(config)(control);
        backup['children'] = control;
        echo = zulu.bind(tango)(echo, backup);
        backup = new Array(4);
        backup[0] = echo;
        echo = {};
        control = result.description;
        echo['style'] = control;
        control = {};
        vacuum = result.iconContainer;
        control['style'] = vacuum;
        vacuum = 14;
        vacuum = source[vacuum];
        vacuum = update.bind(tango)(vacuum);
        config = vacuum.ShopIcon;
        vacuum = {};
        record = 'md';
        vacuum['size'] = record;
        vacuum = zulu.bind(tango)(config, vacuum);
        control['children'] = vacuum;
        vacuum = zulu.bind(tango)(offset, control);
        control = new Array(2);
        control[0] = vacuum;
        vacuum = {};
        config = result.textContainer;
        vacuum['style'] = config;
        config = source[sequence];
        config = update.bind(tango)(config);
        context = config.Text;
        config = {'variant': 'heading-sm/medium', 'color': 'header-secondary'};
        papa = source[output];
        papa = update.bind(tango)(papa);
        status = papa.intl;
        target = status.string;
        papa = source[output];
        papa = update.bind(tango)(papa);
        papa = papa.t;
        papa = papa.MQkmBQ;
        papa = target.bind(status)(papa);
        config['children'] = papa;
        config = zulu.bind(tango)(context, config);
        vacuum['children'] = config;
        vacuum = zulu.bind(tango)(offset, vacuum);
        control[1] = vacuum;
        echo['children'] = control;
        echo = yankee.bind(tango)(offset, echo);
        backup[1] = echo;
        echo = {};
        control = result.description;
        echo['style'] = control;
        control = {};
        vacuum = result.iconContainer;
        control['style'] = vacuum;
        vacuum = 15;
        vacuum = source[vacuum];
        vacuum = update.bind(tango)(vacuum);
        config = vacuum.SparklesIcon;
        vacuum = {};
        vacuum['size'] = record;
        vacuum = zulu.bind(tango)(config, vacuum);
        control['children'] = vacuum;
        vacuum = zulu.bind(tango)(offset, control);
        control = new Array(2);
        control[0] = vacuum;
        vacuum = {};
        config = result.textContainer;
        vacuum['style'] = config;
        config = source[sequence];
        config = update.bind(tango)(config);
        context = config.Text;
        config = {'variant': 'heading-sm/medium', 'color': 'header-secondary'};
        papa = source[output];
        papa = update.bind(tango)(papa);
        status = papa.intl;
        target = status.string;
        papa = source[output];
        papa = update.bind(tango)(papa);
        papa = papa.t;
        papa = papa.Lh3QfX;
        papa = target.bind(status)(papa);
        config['children'] = papa;
        config = zulu.bind(tango)(context, config);
        vacuum['children'] = config;
        vacuum = zulu.bind(tango)(offset, vacuum);
        control[1] = vacuum;
        echo['children'] = control;
        echo = yankee.bind(tango)(offset, echo);
        backup[2] = echo;
        echo = {};
        control = result.description;
        echo['style'] = control;
        control = {};
        vacuum = result.iconContainer;
        control['style'] = vacuum;
        vacuum = 16;
        vacuum = source[vacuum];
        vacuum = update.bind(tango)(vacuum);
        config = vacuum.NitroWheelIcon;
        vacuum = {};
        vacuum['size'] = record;
        vacuum = zulu.bind(tango)(config, vacuum);
        control['children'] = vacuum;
        vacuum = zulu.bind(tango)(offset, control);
        control = new Array(2);
        control[0] = vacuum;
        vacuum = {};
        config = result.textContainer;
        vacuum['style'] = config;
        sequence = source[sequence];
        sequence = update.bind(tango)(sequence);
        config = sequence.Text;
        sequence = {'variant': 'heading-sm/medium', 'color': 'header-secondary'};
        record = source[output];
        record = update.bind(tango)(record);
        papa = record.intl;
        context = papa.string;
        record = source[output];
        record = update.bind(tango)(record);
        record = record.t;
        record = record.gxEIl5;
        record = context.bind(papa)(record);
        sequence['children'] = record;
        sequence = zulu.bind(tango)(config, sequence);
        vacuum['children'] = sequence;
        vacuum = zulu.bind(tango)(offset, vacuum);
        control[1] = vacuum;
        echo['children'] = control;
        echo = yankee.bind(tango)(offset, echo);
        backup[3] = echo;
        foxtrot['children'] = backup;
        foxtrot = yankee.bind(tango)(offset, foxtrot);
        romeo[1] = foxtrot;
        foxtrot = {};
        backup = result.buttonContainer;
        foxtrot['style'] = backup;
        backup = 17;
        backup = source[backup];
        kilo = kilo.bind(tango)(backup);
        backup = {};
        result = result.button;
        backup['style'] = result;
        result = source[output];
        result = update.bind(tango)(result);
        echo = result.intl;
        result = echo.string;
        output = source[output];
        output = update.bind(tango)(output);
        output = output.t;
        output = output.nHOGt7;
        output = result.bind(echo)(output);
        backup['text'] = output;
        sizing = function() { // Original name: onPress
            tango = _closure1_slot0;
            report = _closure1_slot2;
            entity = 18;
            zulu = report[entity];
            entity = undefined;
            golf = tango.bind(entity)(zulu);
            oscar = golf.openCollectiblesShop;
            zulu = {};
            tango = _closure1_slot1;
            options = 19;
            verify = report[options];
            verify = tango.bind(entity)(verify);
            offset = verify.COLLECTIBLES_MOBILE_SHOP_MARKETING_SHEET;
            verify = new Array(1);
            verify[0] = offset;
            zulu['analyticsLocations'] = verify;
            options = report[options];
            options = tango.bind(entity)(options);
            options = options.COLLECTIBLES_MOBILE_SHOP_MARKETING_SHEET;
            zulu['analyticsSource'] = options;
            zulu = oscar.bind(golf)(zulu);
            zulu = 20;
            zulu = report[zulu];
            tango = tango.bind(entity)(zulu);
            zulu = tango.hideActionSheet;
            zulu = zulu.bind(tango)();
            zulu = _closure2_slot0;
            mike = _closure1_slot7;
            mike = mike.TAKE_ACTION;
            mike = zulu.bind(entity)(mike);
            return entity;
        };
        backup['onPress'] = sizing;
        backup = zulu.bind(tango)(kilo, backup);
        foxtrot['children'] = backup;
        foxtrot = zulu.bind(tango)(offset, foxtrot);
        romeo[2] = foxtrot;
        verify['children'] = romeo;
        verify = yankee.bind(tango)(offset, verify);
        golf['children'] = verify;
        golf = zulu.bind(tango)(options, golf);
        report['children'] = golf;
        report = zulu.bind(tango)(oscar, report);
        entity['children'] = report;
        entity = zulu.bind(tango)(mike, entity);
        return entity;
    };
    zulu['default'] = mike;
    return entity;
})();