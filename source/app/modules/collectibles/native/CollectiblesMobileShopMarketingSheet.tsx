// app/modules/collectibles/native/CollectiblesMobileShopMarketingSheet.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    report = argBar;
    romeon = argBaz;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    var _closure1_slot1 = romeon;
    var _closure1_slot2 = oscard;
    entity = global;
    option = entity.Object;
    golfie = option.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(option)(zuuluu, entity, tangon);
    entity = 0;
    tangon = oscard[entity];
    entity = undefined;
    tangon = romeon.bind(entity)(tangon);
    var _closure1_slot3 = tangon;
    offset = 1;
    golfie = oscard[offset];
    tangon = argCor;
    tangon = tangon.bind(entity)(golfie);
    var _closure1_slot4 = tangon;
    tangon = 2;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    golfie = tangon.Image;
    var _closure1_slot5 = golfie;
    tangon = tangon.View;
    var _closure1_slot6 = tangon;
    tangon = 3;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.CollectiblesMobileShopScreen;
    var _closure1_slot7 = tangon;
    tangon = 4;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.UserSettingsSections;
    var _closure1_slot8 = tangon;
    tangon = 5;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.ContentDismissActionType;
    var _closure1_slot9 = tangon;
    backup = 6;
    tangon = oscard[backup];
    tangon = report.bind(entity)(tangon);
    golfie = tangon.jsx;
    var _closure1_slot10 = golfie;
    tangon = tangon.jsxs;
    var _closure1_slot11 = tangon;
    tangon = 7;
    tangon = oscard[tangon];
    verify = report.bind(entity)(tangon);
    option = verify.createStyles;
    golfie = {};
    tangon = {};
    tangon['flex'] = offset;
    yankee = 8;
    offset = oscard[yankee];
    offset = romeon.bind(entity)(offset);
    offset = offset.colors;
    offset = offset.BG_BASE_SECONDARY;
    tangon['backgroundColor'] = offset;
    offset = oscard[yankee];
    offset = romeon.bind(entity)(offset);
    offset = offset.radii;
    offset = offset.md;
    tangon['borderRadius'] = offset;
    golfie['container'] = tangon;
    foxtra = 16;
    tangon = {'marginBottom': 50, 'marginTop': 16, 'flexDirection': 'column', 'gap': 20};
    golfie['body'] = tangon;
    tangon = {'width': '100%', 'height': 178};
    golfie['banner'] = tangon;
    tangon = 24;
    offset = {'flexDirection': 'column', 'gap': 24, 'alignItems': 'center'};
    golfie['textBody'] = offset;
    offset = {'flexDirection': 'row', 'alignItems': 'center', 'width': '90%', 'justifyContent': 'space-between', 'gap': 12, 'marginBottom': 8};
    golfie['description'] = offset;
    offset = {'display': 'flex', 'flexDirection': 'row', 'flexWrap': 'wrap', 'flex': 1};
    golfie['textContainer'] = offset;
    offset = {};
    kiloes = oscard[yankee];
    kiloes = romeon.bind(entity)(kiloes);
    kiloes = kiloes.colors;
    kiloes = kiloes.BACKGROUND_TERTIARY;
    offset['backgroundColor'] = kiloes;
    offset['padding'] = backup;
    backup = oscard[yankee];
    backup = romeon.bind(entity)(backup);
    backup = backup.radii;
    backup = backup.round;
    offset['borderRadius'] = backup;
    golfie['iconContainer'] = offset;
    offset = {};
    offset['paddingHorizontal'] = foxtra;
    golfie['buttonContainer'] = offset;
    offset = {};
    yankee = oscard[yankee];
    yankee = romeon.bind(entity)(yankee);
    yankee = yankee.radii;
    yankee = yankee.round;
    offset['borderRadius'] = yankee;
    golfie['button'] = offset;
    golfie = option.bind(verify)(golfie);
    var _closure1_slot12 = golfie;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/collectibles/native/CollectiblesMobileShopMarketingSheet.tsx';
    tangon = report.bind(oscard)(tangon);
    michal = function(argFoo) { // Original name: CollectiblesMobileShopMarketingSheet
        entity = argFoo;
        michal = entity.markAsDismissed;
        var _closure2_slot0 = michal;
        entity = _closure1_slot12;
        tangon = undefined;
        result = entity.bind(tangon)();
        kiloes = _closure1_slot1;
        source = _closure1_slot2;
        entity = 9;
        entity = source[entity];
        entity = kiloes.bind(tangon)(entity);
        entity = entity.bind(tangon)();
        entity = entity.bottom;
        var _closure2_slot1 = entity;
        update = _closure1_slot0;
        zuuluu = 10;
        zuuluu = source[zuuluu];
        oscard = update.bind(tangon)(zuuluu);
        report = oscard.useMobileShopFeaturedPageEnabled;
        zuuluu = _closure1_slot8;
        zuuluu = zuuluu.COLLECTIBLES_SHOP;
        zuuluu = report.bind(oscard)(zuuluu);
        var _closure2_slot2 = zuuluu;
        report = _closure1_slot4;
        oscard = report.useEffect;
        zuuluu = new Array(1);
        zuuluu[0] = michal;
        michal = function() {
            entity = function() {
                zuuluu = _closure2_slot0;
                entity = _closure1_slot9;
                michal = entity.USER_DISMISS;
                entity = undefined;
                entity = zuuluu.bind(entity)(michal);
                return entity;
            };
            return entity;
        };
        michal = oscard.bind(report)(michal, zuuluu);
        michal = report.useState;
        zuuluu = 1;
        golfie = michal.bind(report)(zuuluu);
        oscard = _closure1_slot3;
        michal = 2;
        michal = oscard.bind(tangon)(golfie, michal);
        oscard = 0;
        golfie = michal[oscard];
        var _closure2_slot3 = golfie;
        oscard = michal[zuuluu];
        var _closure2_slot4 = oscard;
        zuuluu = report.useCallback;
        michal = new Array(3);
        michal[0] = golfie;
        michal[1] = oscard;
        michal[2] = entity;
        entity = function(argFoo, argBar) {
            _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
                michal = argBar;
                zuuluu = _closure2_slot3;
                if(!(michal !== zuuluu)) { _fun00002_ip = 33; continue _fun00001 }
 14:
                zuuluu = _closure2_slot4;
                entity = _closure2_slot1;
                michal = michal + entity;
                entity = undefined;
                entity = zuuluu.bind(entity)(michal);
 33:
                entity = undefined;
                return entity;
            }
        };
        verify = zuuluu.bind(report)(entity, michal);
        zuuluu = _closure1_slot10;
        entity = 11;
        entity = source[entity];
        entity = update.bind(tangon)(entity);
        michal = entity.ThemeContextProvider;
        entity = {};
        report = 12;
        report = source[report];
        report = update.bind(tangon)(report);
        oscard = report.BottomSheet;
        report = {};
        option = function() { // Original name: onDismiss
            zuuluu = _closure2_slot0;
            entity = _closure1_slot9;
            michal = entity.USER_DISMISS;
            entity = undefined;
            entity = zuuluu.bind(entity)(michal);
            return entity;
        };
        report['onDismiss'] = option;
        report['contentHeight'] = golfie;
        golfie = true;
        report['scrollable'] = golfie;
        report['startExpanded'] = golfie;
        golfie = 13;
        golfie = source[golfie];
        golfie = update.bind(tangon)(golfie);
        option = golfie.BottomSheetScrollView;
        golfie = {};
        golfie['onContentSizeChange'] = verify;
        verify = false;
        golfie['scrollsToTop'] = verify;
        offset = result.container;
        verify = new Array(1);
        verify[0] = offset;
        golfie['style'] = verify;
        yankee = _closure1_slot11;
        offset = _closure1_slot6;
        verify = {};
        foxtra = result.body;
        verify['style'] = foxtra;
        foxtra = _closure1_slot5;
        romeon = {};
        backup = 'contain';
        romeon['resizeMode'] = backup;
        backup = 14;
        backup = source[backup];
        backup = kiloes.bind(tangon)(backup);
        romeon['source'] = backup;
        backup = result.banner;
        romeon['style'] = backup;
        foxtra = zuuluu.bind(tangon)(foxtra, romeon);
        romeon = new Array(3);
        romeon[0] = foxtra;
        foxtra = {};
        backup = result.textBody;
        foxtra['style'] = backup;
        sequen = 15;
        backup = source[sequen];
        backup = update.bind(tangon)(backup);
        echoed = backup.Text;
        backup = {'variant': 'heading-xl/bold', 'color': 'header-primary'};
        output = 16;
        ctrled = source[output];
        ctrled = update.bind(tangon)(ctrled);
        config = ctrled.intl;
        vacuum = config.string;
        ctrled = source[output];
        ctrled = update.bind(tangon)(ctrled);
        ctrled = ctrled.t;
        ctrled = ctrled.RUtg4u;
        ctrled = vacuum.bind(config)(ctrled);
        backup['children'] = ctrled;
        echoed = zuuluu.bind(tangon)(echoed, backup);
        backup = new Array(4);
        backup[0] = echoed;
        echoed = {};
        ctrled = result.description;
        echoed['style'] = ctrled;
        ctrled = {};
        vacuum = result.iconContainer;
        ctrled['style'] = vacuum;
        vacuum = 17;
        vacuum = source[vacuum];
        vacuum = update.bind(tangon)(vacuum);
        config = vacuum.ShopIcon;
        vacuum = {};
        record = 'md';
        vacuum['size'] = record;
        vacuum = zuuluu.bind(tangon)(config, vacuum);
        ctrled['children'] = vacuum;
        vacuum = zuuluu.bind(tangon)(offset, ctrled);
        ctrled = new Array(2);
        ctrled[0] = vacuum;
        vacuum = {};
        config = result.textContainer;
        vacuum['style'] = config;
        config = source[sequen];
        config = update.bind(tangon)(config);
        cntext = config.Text;
        config = {'variant': 'heading-sm/medium', 'color': 'header-secondary'};
        papara = source[output];
        papara = update.bind(tangon)(papara);
        status = papara.intl;
        target = status.string;
        papara = source[output];
        papara = update.bind(tangon)(papara);
        papara = papara.t;
        papara = papara.MQkmBQ;
        papara = target.bind(status)(papara);
        config['children'] = papara;
        config = zuuluu.bind(tangon)(cntext, config);
        vacuum['children'] = config;
        vacuum = zuuluu.bind(tangon)(offset, vacuum);
        ctrled[1] = vacuum;
        echoed['children'] = ctrled;
        echoed = yankee.bind(tangon)(offset, echoed);
        backup[1] = echoed;
        echoed = {};
        ctrled = result.description;
        echoed['style'] = ctrled;
        ctrled = {};
        vacuum = result.iconContainer;
        ctrled['style'] = vacuum;
        vacuum = 18;
        vacuum = source[vacuum];
        vacuum = update.bind(tangon)(vacuum);
        config = vacuum.SparklesIcon;
        vacuum = {};
        vacuum['size'] = record;
        vacuum = zuuluu.bind(tangon)(config, vacuum);
        ctrled['children'] = vacuum;
        vacuum = zuuluu.bind(tangon)(offset, ctrled);
        ctrled = new Array(2);
        ctrled[0] = vacuum;
        vacuum = {};
        config = result.textContainer;
        vacuum['style'] = config;
        config = source[sequen];
        config = update.bind(tangon)(config);
        cntext = config.Text;
        config = {'variant': 'heading-sm/medium', 'color': 'header-secondary'};
        papara = source[output];
        papara = update.bind(tangon)(papara);
        status = papara.intl;
        target = status.string;
        papara = source[output];
        papara = update.bind(tangon)(papara);
        papara = papara.t;
        papara = papara.Lh3QfX;
        papara = target.bind(status)(papara);
        config['children'] = papara;
        config = zuuluu.bind(tangon)(cntext, config);
        vacuum['children'] = config;
        vacuum = zuuluu.bind(tangon)(offset, vacuum);
        ctrled[1] = vacuum;
        echoed['children'] = ctrled;
        echoed = yankee.bind(tangon)(offset, echoed);
        backup[2] = echoed;
        echoed = {};
        ctrled = result.description;
        echoed['style'] = ctrled;
        ctrled = {};
        vacuum = result.iconContainer;
        ctrled['style'] = vacuum;
        vacuum = 19;
        vacuum = source[vacuum];
        vacuum = update.bind(tangon)(vacuum);
        config = vacuum.NitroWheelIcon;
        vacuum = {};
        vacuum['size'] = record;
        vacuum = zuuluu.bind(tangon)(config, vacuum);
        ctrled['children'] = vacuum;
        vacuum = zuuluu.bind(tangon)(offset, ctrled);
        ctrled = new Array(2);
        ctrled[0] = vacuum;
        vacuum = {};
        config = result.textContainer;
        vacuum['style'] = config;
        sequen = source[sequen];
        sequen = update.bind(tangon)(sequen);
        config = sequen.Text;
        sequen = {'variant': 'heading-sm/medium', 'color': 'header-secondary'};
        record = source[output];
        record = update.bind(tangon)(record);
        papara = record.intl;
        cntext = papara.string;
        record = source[output];
        record = update.bind(tangon)(record);
        record = record.t;
        record = record.gxEIl5;
        record = cntext.bind(papara)(record);
        sequen['children'] = record;
        sequen = zuuluu.bind(tangon)(config, sequen);
        vacuum['children'] = sequen;
        vacuum = zuuluu.bind(tangon)(offset, vacuum);
        ctrled[1] = vacuum;
        echoed['children'] = ctrled;
        echoed = yankee.bind(tangon)(offset, echoed);
        backup[3] = echoed;
        foxtra['children'] = backup;
        foxtra = yankee.bind(tangon)(offset, foxtra);
        romeon[1] = foxtra;
        foxtra = {};
        backup = result.buttonContainer;
        foxtra['style'] = backup;
        backup = 20;
        backup = source[backup];
        kiloes = kiloes.bind(tangon)(backup);
        backup = {};
        result = result.button;
        backup['style'] = result;
        result = source[output];
        result = update.bind(tangon)(result);
        echoed = result.intl;
        result = echoed.string;
        output = source[output];
        output = update.bind(tangon)(output);
        output = output.t;
        output = output.nHOGt7;
        output = result.bind(echoed)(output);
        backup['text'] = output;
        sizing = function() { // Original name: onPress
            _fun00003: for(var _fun00004_ip = 0; ; ) switch(_fun00004_ip) {
 0:
                tangon = _closure1_slot0;
                option = _closure1_slot2;
                entity = 21;
                zuuluu = option[entity];
                entity = undefined;
                oscard = tangon.bind(entity)(zuuluu);
                report = oscard.openCollectiblesShopMobile;
                tangon = {};
                golfie = _closure1_slot1;
                zuuluu = 22;
                verify = option[zuuluu];
                verify = golfie.bind(entity)(verify);
                offset = verify.COLLECTIBLES_MOBILE_SHOP_MARKETING_SHEET;
                verify = new Array(1);
                verify[0] = offset;
                tangon['analyticsLocations'] = verify;
                zuuluu = option[zuuluu];
                zuuluu = golfie.bind(entity)(zuuluu);
                zuuluu = zuuluu.COLLECTIBLES_MOBILE_SHOP_MARKETING_SHEET;
                tangon['analyticsSource'] = zuuluu;
                golfie = _closure2_slot2;
                option = _closure1_slot7;
                if(golfie) { _fun00004_ip = 110; continue _fun00003 }
 102:
                golfie = option.SHOP_ALL;
                _fun00004_ip = 116; continue _fun00003;
 110:
                golfie = option.FEATURED_PAGE;
 116:
                tangon['screen'] = golfie;
                tangon = report.bind(oscard)(tangon);
                report = _closure1_slot1;
                oscard = _closure1_slot2;
                tangon = 23;
                tangon = oscard[tangon];
                report = report.bind(entity)(tangon);
                tangon = report.hideActionSheet;
                tangon = tangon.bind(report)();
                zuuluu = _closure2_slot0;
                michal = _closure1_slot9;
                michal = michal.TAKE_ACTION;
                michal = zuuluu.bind(entity)(michal);
                return entity;
            }
        };
        backup['onPress'] = sizing;
        backup = zuuluu.bind(tangon)(kiloes, backup);
        foxtra['children'] = backup;
        foxtra = zuuluu.bind(tangon)(offset, foxtra);
        romeon[2] = foxtra;
        verify['children'] = romeon;
        verify = yankee.bind(tangon)(offset, verify);
        golfie['children'] = verify;
        golfie = zuuluu.bind(tangon)(option, golfie);
        report['children'] = golfie;
        report = zuuluu.bind(tangon)(oscard, report);
        entity['children'] = report;
        entity = zuuluu.bind(tangon)(michal, entity);
        return entity;
    };
    zuuluu['default'] = michal;
    return entity;
})();