// app/modules/collectibles/native/FeedBlock.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    report = argBar;
    yankee = argBaz;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    var _closure1_slot1 = yankee;
    var _closure1_slot2 = oscard;
    entity = global;
    option = entity.Object;
    golfie = option.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(option)(zuuluu, entity, tangon);
    entity = 0;
    golfie = oscard[entity];
    tangon = argCor;
    entity = undefined;
    tangon = tangon.bind(entity)(golfie);
    var _closure1_slot3 = tangon;
    tangon = 1;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    golfie = tangon.Image;
    var _closure1_slot4 = golfie;
    tangon = tangon.View;
    var _closure1_slot5 = tangon;
    tangon = 2;
    tangon = oscard[tangon];
    tangon = yankee.bind(entity)(tangon);
    var _closure1_slot6 = tangon;
    tangon = 3;
    tangon = oscard[tangon];
    tangon = yankee.bind(entity)(tangon);
    var _closure1_slot7 = tangon;
    tangon = 4;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.CollectiblesMobileShopScreen;
    var _closure1_slot8 = tangon;
    tangon = 5;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    golfie = tangon.jsx;
    var _closure1_slot9 = golfie;
    tangon = tangon.jsxs;
    var _closure1_slot10 = tangon;
    tangon = 6;
    tangon = oscard[tangon];
    option = report.bind(entity)(tangon);
    golfie = option.createStyles;
    tangon = {};
    verify = {'display': 'flex', 'flexDirection': 'column', 'height': '100%'};
    tangon['feedContainer'] = verify;
    verify = {'display': 'flex', 'flexDirection': 'row', 'justifyContent': 'space-between', 'alignItems': 'center'};
    offset = 7;
    romeon = oscard[offset];
    romeon = yankee.bind(entity)(romeon);
    romeon = romeon.spacing;
    romeon = romeon.PX_16;
    verify['padding'] = romeon;
    tangon['feedTitle'] = verify;
    verify = {'display': 'flex', 'gap': null, 'paddingTop': null, 'flexDirection': 'column', 'justifyContent': 'center', 'alignItems': 'center'};
    romeon = oscard[offset];
    romeon = yankee.bind(entity)(romeon);
    romeon = romeon.spacing;
    romeon = romeon.PX_16;
    verify['gap'] = romeon;
    offset = oscard[offset];
    offset = yankee.bind(entity)(offset);
    offset = offset.spacing;
    offset = offset.PX_16;
    verify['paddingTop'] = offset;
    tangon['feedFooter'] = verify;
    verify = {'width': '100%', 'resizeMode': 'cover'};
    tangon['feedFooterImage'] = verify;
    tangon = golfie.bind(option)(tangon);
    var _closure1_slot11 = tangon;
    tangon = 24;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/collectibles/native/FeedBlock.tsx';
    tangon = report.bind(oscard)(tangon);
    michal = function(argFoo) { // Original name: _default
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            michal = argFoo;
            michal = michal.feedBlock;
            var _closure2_slot0 = michal;
            zuuluu = _closure1_slot11;
            tangon = undefined;
            oscard = zuuluu.bind(tangon)();
            golfie = _closure1_slot1;
            romeon = _closure1_slot2;
            zuuluu = 8;
            zuuluu = romeon[zuuluu];
            zuuluu = golfie.bind(tangon)(zuuluu);
            zuuluu = zuuluu.bind(tangon)();
            golfie = global;
            option = golfie.Math;
            golfie = option.floor;
            verify = zuuluu.width;
            yankee = _closure1_slot0;
            zuuluu = 9;
            zuuluu = romeon[zuuluu];
            zuuluu = yankee.bind(tangon)(zuuluu);
            offset = zuuluu.COLLECTIBLES_SHOP_CARD_WIDTH;
            result = 10;
            zuuluu = romeon[result];
            zuuluu = yankee.bind(tangon)(zuuluu);
            zuuluu = zuuluu.SHOP_CARD_GAP;
            zuuluu = offset + zuuluu;
            zuuluu = verify / zuuluu;
            kiloes = golfie.bind(option)(zuuluu);
            zuuluu = 11;
            zuuluu = romeon[zuuluu];
            option = yankee.bind(tangon)(zuuluu);
            golfie = option.useMobileCanPurchaseNameplates;
            zuuluu = 'FeedBlock';
            offset = golfie.bind(option)(zuuluu);
            zuuluu = 12;
            zuuluu = romeon[zuuluu];
            golfie = yankee.bind(tangon)(zuuluu);
            zuuluu = golfie.useBadBundleFilter;
            zuuluu = zuuluu.bind(golfie)();
            golfie = 13;
            golfie = romeon[golfie];
            option = yankee.bind(tangon)(golfie);
            golfie = option.useAndroidUnsyncedFilter;
            golfie = golfie.bind(option)();
            option = 14;
            option = romeon[option];
            verify = yankee.bind(tangon)(option);
            option = verify.useNameplateFilter;
            verify = option.bind(verify)();
            option = 15;
            option = romeon[option];
            foxtra = yankee.bind(tangon)(option);
            romeon = foxtra.useStateFromStores;
            option = _closure1_slot6;
            yankee = new Array(1);
            yankee[0] = option;
            option = function() {
                tangon = _closure1_slot0;
                zuuluu = _closure1_slot2;
                michal = 16;
                zuuluu = zuuluu[michal];
                michal = undefined;
                zuuluu = tangon.bind(michal)(zuuluu);
                michal = zuuluu.isThemeDark;
                entity = _closure1_slot6;
                entity = entity.theme;
                entity = michal.bind(zuuluu)(entity);
                return entity;
            };
            romeon = romeon.bind(foxtra)(yankee, option);
            foxtra = _closure1_slot3;
            yankee = foxtra.useMemo;
            michal = michal.rankedSkuIds;
            option = new Array(1);
            option[0] = michal;
            michal = function() {
                michal = _closure2_slot0;
                report = michal.rankedSkuIds;
                tangon = report.slice;
                zuuluu = 0;
                michal = 36;
                tangon = tangon.bind(report)(zuuluu, michal);
                zuuluu = tangon.map;
                michal = function(argFoo) {
                    zuuluu = _closure1_slot7;
                    michal = zuuluu.getProduct;
                    entity = argFoo;
                    entity = michal.bind(zuuluu)(entity);
                    return entity;
                };
                zuuluu = zuuluu.bind(tangon)(michal);
                michal = zuuluu.filter;
                entity = function(argFoo) {
                    michal = null;
                    entity = argFoo;
                    entity = michal != entity;
                    return entity;
                };
                entity = michal.bind(zuuluu)(entity);
                return entity;
            };
            option = yankee.bind(foxtra)(michal, option);
            michal = option;
            if(offset) { _fun00002_ip = 308; continue _fun00001 }
 303:
            michal = verify.bind(tangon)(option);
 308:
            michal = golfie.bind(tangon)(michal);
            backup = zuuluu.bind(tangon)(michal);
            zuuluu = backup.length;
            michal = 0;
            if(!(michal !== zuuluu)) { _fun00002_ip = 921; continue _fun00001 }
 332:
            echoed = function() { // Original name: shopAll
                zuuluu = _closure1_slot0;
                option = _closure1_slot2;
                entity = 19;
                michal = option[entity];
                entity = undefined;
                tangon = zuuluu.bind(entity)(michal);
                zuuluu = tangon.openCollectiblesShopMobile;
                michal = {};
                golfie = _closure1_slot1;
                oscard = 20;
                verify = option[oscard];
                verify = golfie.bind(entity)(verify);
                offset = verify.COLLECTIBLES_MOBILE_SHOP_ALL_BUTTON;
                verify = new Array(1);
                verify[0] = offset;
                michal['analyticsLocations'] = verify;
                oscard = option[oscard];
                oscard = golfie.bind(entity)(oscard);
                oscard = oscard.COLLECTIBLES_MOBILE_SHOP_ALL_BUTTON;
                michal['analyticsSource'] = oscard;
                report = _closure1_slot8;
                report = report.SHOP_ALL;
                michal['screen'] = report;
                michal = zuuluu.bind(tangon)(michal);
                return entity;
            };
            zuuluu = _closure1_slot10;
            michal = _closure1_slot5;
            entity = {};
            golfie = oscard.feedContainer;
            entity['style'] = golfie;
            golfie = {};
            option = oscard.feedTitle;
            golfie['style'] = option;
            offset = _closure1_slot9;
            sequen = _closure1_slot0;
            option = _closure1_slot2;
            yankee = 17;
            verify = option[yankee];
            verify = sequen.bind(tangon)(verify);
            foxtra = verify.Text;
            verify = {'variant': 'heading-lg/semibold', 'children': 'Popular Picks'};
            foxtra = offset.bind(tangon)(foxtra, verify);
            verify = new Array(2);
            verify[0] = foxtra;
            foxtra = 21;
            sizing = option[foxtra];
            sizing = sequen.bind(tangon)(sizing);
            source = sizing.Button;
            update = {};
            update['onPress'] = echoed;
            ctrled = 18;
            sizing = option[ctrled];
            sizing = sequen.bind(tangon)(sizing);
            vacuum = sizing.intl;
            output = vacuum.string;
            sizing = option[ctrled];
            sizing = sequen.bind(tangon)(sizing);
            sizing = sizing.t;
            sizing = sizing.xFcotb;
            sizing = output.bind(vacuum)(sizing);
            update['text'] = sizing;
            output = 'primary';
            update['variant'] = output;
            sizing = 'md';
            update['size'] = sizing;
            update = offset.bind(tangon)(source, update);
            verify[1] = update;
            golfie['children'] = verify;
            verify = zuuluu.bind(tangon)(michal, golfie);
            golfie = new Array(3);
            golfie[0] = verify;
            verify = _closure1_slot1;
            option = option[result];
            verify = verify.bind(tangon)(option);
            option = {};
            option['products'] = backup;
            backup = 2;
            result = kiloes < backup;
            if(result) { _fun00002_ip = 582; continue _fun00001 }
 579:
            backup = kiloes;
 582:
            option['column'] = backup;
            option = offset.bind(tangon)(verify, option);
            golfie[1] = option;
            offset = _closure1_slot10;
            verify = _closure1_slot5;
            option = {};
            backup = oscard.feedFooter;
            option['style'] = backup;
            backup = _closure1_slot9;
            source = _closure1_slot0;
            result = _closure1_slot2;
            yankee = result[yankee];
            yankee = source.bind(tangon)(yankee);
            kiloes = yankee.Text;
            yankee = {};
            update = 'text-lg/bold';
            yankee['variant'] = update;
            update = result[ctrled];
            update = source.bind(tangon)(update);
            sequen = update.intl;
            vacuum = sequen.string;
            update = result[ctrled];
            update = source.bind(tangon)(update);
            update = update.t;
            update = update.Yr70c3;
            update = vacuum.bind(sequen)(update);
            yankee['children'] = update;
            kiloes = backup.bind(tangon)(kiloes, yankee);
            yankee = new Array(3);
            yankee[0] = kiloes;
            foxtra = result[foxtra];
            foxtra = source.bind(tangon)(foxtra);
            kiloes = foxtra.Button;
            foxtra = {};
            foxtra['onPress'] = echoed;
            echoed = result[ctrled];
            echoed = source.bind(tangon)(echoed);
            update = echoed.intl;
            echoed = update.string;
            result = result[ctrled];
            result = source.bind(tangon)(result);
            result = result.t;
            result = result.AfrvRE;
            result = echoed.bind(update)(result);
            foxtra['text'] = result;
            foxtra['variant'] = output;
            foxtra['size'] = sizing;
            foxtra = backup.bind(tangon)(kiloes, foxtra);
            yankee[1] = foxtra;
            foxtra = _closure1_slot4;
            kiloes = {};
            output = _closure1_slot0;
            result = _closure1_slot2;
            if(romeon) { _fun00002_ip = 856; continue _fun00001 }
 825:
            romeon = 23;
            romeon = result[romeon];
            romeon = output.bind(tangon)(romeon);
            kiloes['source'] = romeon;
            romeon = oscard.feedFooterImage;
            kiloes['style'] = romeon;
            romeon = kiloes;
            _fun00002_ip = 885; continue _fun00001;
 856:
            sizing = 22;
            sizing = result[sizing];
            sizing = output.bind(tangon)(sizing);
            kiloes['source'] = sizing;
            sizing = oscard.feedFooterImage;
            kiloes['style'] = sizing;
            romeon = kiloes;
 885:
            romeon = backup.bind(tangon)(foxtra, romeon);
            yankee[2] = romeon;
            option['children'] = yankee;
            option = offset.bind(tangon)(verify, option);
            golfie[2] = option;
            entity['children'] = golfie;
            entity = zuuluu.bind(tangon)(michal, entity);
            return entity;
 921:
            zuuluu = _closure1_slot9;
            michal = _closure1_slot5;
            entity = {};
            oscard = oscard.feedContainer;
            entity['style'] = oscard;
            offset = _closure1_slot0;
            yankee = _closure1_slot2;
            report = 17;
            report = yankee[report];
            report = offset.bind(tangon)(report);
            oscard = report.Text;
            report = {};
            golfie = 'text-md/normal';
            report['variant'] = golfie;
            golfie = 18;
            option = yankee[golfie];
            option = offset.bind(tangon)(option);
            verify = option.intl;
            option = verify.string;
            golfie = yankee[golfie];
            golfie = offset.bind(tangon)(golfie);
            golfie = golfie.t;
            golfie = golfie.LuhKs7;
            golfie = option.bind(verify)(golfie);
            report['children'] = golfie;
            report = zuuluu.bind(tangon)(oscard, report);
            entity['children'] = report;
            entity = zuuluu.bind(tangon)(michal, entity);
            return entity;
        }
    };
    zuuluu['default'] = michal;
    return entity;
})();