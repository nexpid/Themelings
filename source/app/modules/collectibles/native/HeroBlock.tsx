// app/modules/collectibles/native/HeroBlock.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    report = argBar;
    yankee = argBaz;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    var _closure1_slot1 = yankee;
    var _closure1_slot2 = oscard;
    entity = global;
    option = entity.Object;
    golfie = option.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(option)(zuuluu, entity, tangon);
    entity = 0;
    golfie = oscard[entity];
    tangon = argCor;
    entity = undefined;
    tangon = tangon.bind(entity)(golfie);
    tangon = 1;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    golfie = tangon.Image;
    var _closure1_slot3 = golfie;
    tangon = tangon.View;
    var _closure1_slot4 = tangon;
    tangon = 2;
    tangon = oscard[tangon];
    tangon = yankee.bind(entity)(tangon);
    var _closure1_slot5 = tangon;
    tangon = 3;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    golfie = tangon.UserSettingsSections;
    var _closure1_slot6 = golfie;
    tangon = tangon.VerticalGradient;
    var _closure1_slot7 = tangon;
    tangon = 4;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    golfie = tangon.jsx;
    var _closure1_slot8 = golfie;
    golfie = tangon.Fragment;
    var _closure1_slot9 = golfie;
    tangon = tangon.jsxs;
    var _closure1_slot10 = tangon;
    tangon = 5;
    tangon = oscard[tangon];
    option = report.bind(entity)(tangon);
    golfie = option.createStyles;
    tangon = {};
    verify = {'height': 275, 'width': '100%'};
    tangon['heroContainer'] = verify;
    verify = {'position': 'absolute', 'resizeMode': 'cover', 'height': '100%', 'width': '100%', 'zIndex': 1};
    tangon['heroBannerImage'] = verify;
    verify = {'position': 'absolute', 'bottom': 0, 'height': '50%', 'width': '100%', 'zIndex': 1};
    tangon['heroBannerGradient'] = verify;
    verify = {'display': 'flex', 'justifyContent': 'center', 'height': '100%', 'zIndex': 1};
    tangon['heroBannerContainer'] = verify;
    verify = {'padding': null, 'display': 'flex', 'flexDirection': 'row', 'alignItems': 'center', 'justifyContent': 'space-between', 'width': '100%'};
    offset = 6;
    romeon = oscard[offset];
    romeon = yankee.bind(entity)(romeon);
    romeon = romeon.spacing;
    romeon = romeon.PX_16;
    verify['padding'] = romeon;
    tangon['innerContainer'] = verify;
    verify = {'resizeMode': 'contain', 'width': '40%', 'aspectRatio': 2};
    tangon['heroLogo'] = verify;
    verify = {};
    romeon = oscard[offset];
    romeon = yankee.bind(entity)(romeon);
    romeon = romeon.colors;
    romeon = romeon.REDESIGN_BUTTON_SECONDARY_OVERLAY_BACKGROUND;
    verify['backgroundColor'] = romeon;
    romeon = oscard[offset];
    romeon = yankee.bind(entity)(romeon);
    romeon = romeon.spacing;
    romeon = romeon.PX_8;
    verify['padding'] = romeon;
    offset = oscard[offset];
    offset = yankee.bind(entity)(offset);
    offset = offset.radii;
    offset = offset.round;
    verify['borderRadius'] = offset;
    tangon['heroViewAllIcon'] = verify;
    verify = {'position': 'relative', 'bottom': '25%', 'display': 'flex', 'width': '100%'};
    tangon['heroProductsContainer'] = verify;
    tangon = golfie.bind(option)(tangon);
    var _closure1_slot11 = tangon;
    tangon = 23;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/collectibles/native/HeroBlock.tsx';
    tangon = report.bind(oscard)(tangon);
    michal = function(argFoo) { // Original name: _default
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            entity = argFoo;
            papara = entity.heroBlock;
            oscard = _closure1_slot0;
            golfie = _closure1_slot2;
            entity = 7;
            entity = golfie[entity];
            tangon = undefined;
            michal = oscard.bind(tangon)(entity);
            entity = michal.useNavigation;
            entity = entity.bind(michal)();
            var _closure2_slot0 = entity;
            entity = 8;
            entity = golfie[entity];
            michal = oscard.bind(tangon)(entity);
            entity = michal.useCollectiblesAnalyticsContext;
            entity = entity.bind(michal)();
            var _closure2_slot1 = entity;
            entity = _closure1_slot11;
            foxtra = entity.bind(tangon)();
            entity = 9;
            entity = golfie[entity];
            zuuluu = oscard.bind(tangon)(entity);
            michal = zuuluu.useToken;
            report = _closure1_slot1;
            update = 6;
            entity = golfie[update];
            entity = report.bind(tangon)(entity);
            entity = entity.colors;
            entity = entity.BACKGROUND_PRIMARY;
            target = michal.bind(zuuluu)(entity);
            entity = 10;
            michal = golfie[entity];
            zuuluu = oscard.bind(tangon)(michal);
            michal = zuuluu.hexToRgbaString;
            entity = golfie[entity];
            report = oscard.bind(tangon)(entity);
            entity = report.hexWithOpacity;
            kiloes = 0;
            entity = entity.bind(report)(target, kiloes);
            status = michal.bind(zuuluu)(entity);
            entity = 11;
            entity = golfie[entity];
            michal = oscard.bind(tangon)(entity);
            entity = michal.useMobileShopCardV2Enabled;
            zuuluu = 'HeroBlock';
            entity = entity.bind(michal)(zuuluu);
            var _closure2_slot2 = entity;
            entity = 12;
            entity = golfie[entity];
            michal = oscard.bind(tangon)(entity);
            entity = michal.useMobileCanPurchaseNameplates;
            entity = entity.bind(michal)(zuuluu);
            michal = 13;
            michal = golfie[michal];
            zuuluu = oscard.bind(tangon)(michal);
            michal = zuuluu.useBadBundleFilter;
            michal = michal.bind(zuuluu)();
            zuuluu = 14;
            zuuluu = golfie[zuuluu];
            report = oscard.bind(tangon)(zuuluu);
            zuuluu = report.useAndroidUnsyncedFilter;
            zuuluu = zuuluu.bind(report)();
            report = 15;
            report = golfie[report];
            oscard = oscard.bind(tangon)(report);
            report = oscard.useNameplateFilter;
            report = report.bind(oscard)();
            option = _closure1_slot5;
            golfie = option.getCategory;
            oscard = papara.categorySkuId;
            verify = golfie.bind(option)(oscard);
            var _closure2_slot3 = verify;
            if(!(tangon !== verify)) { _fun00002_ip = 1248; continue _fun00001 }
 334:
            cntext = null;
            oscard = cntext == verify;
            if(entity) { _fun00002_ip = 361; continue _fun00001 }
 343:
            entity = undefined;
            if(oscard) { _fun00002_ip = 354; continue _fun00001 }
 348:
            entity = verify.products;
 354:
            entity = report.bind(tangon)(entity);
            _fun00002_ip = 375; continue _fun00001;
 361:
            report = undefined;
            if(oscard) { _fun00002_ip = 372; continue _fun00001 }
 366:
            report = verify.products;
 372:
            entity = report;
 375:
            entity = zuuluu.bind(tangon)(entity);
            result = michal.bind(tangon)(entity);
            zuuluu = _closure1_slot8;
            michal = _closure1_slot4;
            entity = {};
            oscard = foxtra.heroContainer;
            report = new Array(1);
            report[0] = oscard;
            entity['style'] = report;
            report = tangon !== verify;
            if(!report) { _fun00002_ip = 1236; continue _fun00001 }
 423:
            option = _closure1_slot10;
            golfie = _closure1_slot9;
            oscard = {};
            output = _closure1_slot0;
            romeon = _closure1_slot2;
            offset = 16;
            offset = romeon[offset];
            offset = output.bind(tangon)(offset);
            backup = offset.PressableOpacity;
            offset = {'accessibilityRole': 'button', 'accessibilityLabel': null, 'activeOpacity': 0.8, 'androidRippleConfig': null, 'hitSlop': 8};
            ctrled = 17;
            yankee = romeon[ctrled];
            yankee = output.bind(tangon)(yankee);
            vacuum = yankee.intl;
            source = vacuum.formatToPlainString;
            yankee = romeon[ctrled];
            yankee = output.bind(tangon)(yankee);
            yankee = yankee.t;
            output = yankee.COLLECTIBLES_CATEGORY_BANNER_A11Y_LABEL;
            yankee = {};
            sequen = verify.name;
            yankee['category'] = sequen;
            yankee = source.bind(vacuum)(output, yankee);
            offset['accessibilityLabel'] = yankee;
            yankee = {};
            output = _closure1_slot1;
            romeon = romeon[update];
            romeon = output.bind(tangon)(romeon);
            romeon = romeon.radii;
            romeon = romeon.lg;
            yankee['radius'] = romeon;
            offset['androidRippleConfig'] = yankee;
            yankee = function() { // Original name: onPress
                oscard = _closure2_slot3;
                tangon = _closure2_slot0;
                zuuluu = tangon.push;
                entity = _closure1_slot6;
                michal = entity.COLLECTIBLES_SHOP_VIEW_ALL_CATEGORY_ITEMS;
                entity = {};
                entity['category'] = oscard;
                report = _closure2_slot1;
                entity['analyticsContext'] = report;
                entity = zuuluu.bind(tangon)(michal, entity);
                entity = undefined;
                return entity;
            };
            offset['onPress'] = yankee;
            romeon = papara.bannerAsset;
            output = cntext == romeon;
            yankee = undefined;
            if(output) { _fun00002_ip = 610; continue _fun00001 }
 604:
            yankee = romeon.static;
 610:
            yankee = cntext != yankee;
            if(!yankee) { _fun00002_ip = 792; continue _fun00001 }
 620:
            source = _closure1_slot10;
            output = _closure1_slot9;
            romeon = {};
            config = _closure1_slot8;
            sequen = _closure1_slot3;
            vacuum = {};
            record = foxtra.heroBannerImage;
            vacuum['style'] = record;
            record = {};
            sierra = papara.bannerAsset;
            limora = cntext == sierra;
            cntext = undefined;
            if(limora) { _fun00002_ip = 673; continue _fun00001 }
 667:
            cntext = sierra.static;
 673:
            record['uri'] = cntext;
            vacuum['source'] = record;
            sequen = config.bind(tangon)(sequen, vacuum);
            vacuum = new Array(2);
            vacuum[0] = sequen;
            record = _closure1_slot8;
            config = _closure1_slot1;
            cntext = _closure1_slot2;
            sequen = 18;
            sequen = cntext[sequen];
            config = config.bind(tangon)(sequen);
            sequen = {};
            cntext = foxtra.heroBannerGradient;
            sequen['style'] = cntext;
            cntext = new Array(2);
            cntext[0] = status;
            cntext[1] = target;
            sequen['colors'] = cntext;
            cntext = _closure1_slot7;
            target = cntext.START;
            sequen['start'] = target;
            cntext = cntext.END;
            sequen['end'] = cntext;
            sequen = record.bind(tangon)(config, sequen);
            vacuum[1] = sequen;
            romeon['children'] = vacuum;
            yankee = source.bind(tangon)(output, romeon);
 792:
            vacuum = new Array(2);
            vacuum[0] = yankee;
            romeon = _closure1_slot8;
            yankee = _closure1_slot4;
            sequen = {};
            output = foxtra.heroBannerContainer;
            sequen['style'] = output;
            record = _closure1_slot10;
            config = {};
            output = foxtra.innerContainer;
            config['style'] = output;
            source = _closure1_slot3;
            output = {};
            cntext = foxtra.heroLogo;
            output['style'] = cntext;
            cntext = {};
            papara = papara.logoUrl;
            cntext['uri'] = papara;
            output['source'] = cntext;
            output = romeon.bind(tangon)(source, output);
            cntext = new Array(2);
            cntext[0] = output;
            papara = {};
            output = foxtra.heroViewAllIcon;
            papara['style'] = output;
            source = _closure1_slot0;
            output = _closure1_slot2;
            target = 19;
            target = output[target];
            target = source.bind(tangon)(target);
            status = target.ChevronSmallRightIcon;
            target = {'size': 'sm', 'color': 'white'};
            target = romeon.bind(tangon)(status, target);
            papara['children'] = target;
            papara = romeon.bind(tangon)(yankee, papara);
            cntext[1] = papara;
            config['children'] = cntext;
            config = record.bind(tangon)(yankee, config);
            sequen['children'] = config;
            sequen = romeon.bind(tangon)(yankee, sequen);
            vacuum[1] = sequen;
            offset['children'] = vacuum;
            verify = verify.storeListingId;
            offset = option.bind(tangon)(backup, offset, verify);
            verify = new Array(2);
            verify[0] = offset;
            offset = {};
            foxtra = foxtra.heroProductsContainer;
            offset['style'] = foxtra;
            foxtra = 20;
            foxtra = output[foxtra];
            foxtra = source.bind(tangon)(foxtra);
            backup = foxtra.FlashList;
            foxtra = {};
            vacuum = true;
            foxtra['horizontal'] = vacuum;
            vacuum = output[ctrled];
            vacuum = source.bind(tangon)(vacuum);
            sequen = vacuum.intl;
            vacuum = sequen.string;
            ctrled = output[ctrled];
            ctrled = source.bind(tangon)(ctrled);
            ctrled = ctrled.t;
            ctrled = ctrled.COLLECTIBLES_SHOP;
            ctrled = vacuum.bind(sequen)(ctrled);
            foxtra['accessibilityLabel'] = ctrled;
            foxtra['data'] = result;
            result = function(argFoo) { // Original name: renderItem
                _fun00003: for(var _fun00004_ip = 0; ; ) switch(_fun00004_ip) {
 0:
                    michal = argFoo;
                    entity = michal.item;
                    option = michal.index;
                    report = _closure1_slot8;
                    zuuluu = _closure1_slot0;
                    tangon = _closure1_slot2;
                    michal = 8;
                    michal = tangon[michal];
                    tangon = undefined;
                    michal = zuuluu.bind(tangon)(michal);
                    zuuluu = michal.CollectiblesAnalyticsProvider;
                    michal = {};
                    oscard = {};
                    oscard['tilePosition'] = option;
                    michal['newValue'] = oscard;
                    oscard = _closure2_slot2;
                    verify = _closure1_slot8;
                    option = _closure1_slot1;
                    yankee = _closure1_slot2;
                    if(oscard) { _fun00004_ip = 126; continue _fun00003 }
 84:
                    oscard = 22;
                    oscard = yankee[oscard];
                    golfie = option.bind(tangon)(oscard);
                    oscard = {};
                    oscard['product'] = entity;
                    romeon = _closure2_slot3;
                    romeon = romeon.unpublishedAt;
                    oscard['unpublishedAt'] = romeon;
                    oscard = verify.bind(tangon)(golfie, oscard);
                    _fun00004_ip = 173; continue _fun00003;
 126:
                    golfie = 21;
                    golfie = yankee[golfie];
                    option = option.bind(tangon)(golfie);
                    golfie = {};
                    yankee = true;
                    golfie['solidBackground'] = yankee;
                    golfie['product'] = entity;
                    offset = _closure2_slot3;
                    offset = offset.unpublishedAt;
                    golfie['unpublishedAt'] = offset;
                    oscard = verify.bind(tangon)(option, golfie);
 173:
                    michal['children'] = oscard;
                    oscard = entity.items;
                    entity = 0;
                    oscard = oscard[entity];
                    entity = null;
                    golfie = entity == oscard;
                    entity = undefined;
                    if(golfie) { _fun00004_ip = 205; continue _fun00003 }
 200:
                    entity = oscard.id;
 205:
                    entity = report.bind(tangon)(zuuluu, michal, entity);
                    return entity;
                }
            };
            foxtra['renderItem'] = result;
            result = 22;
            result = output[result];
            result = source.bind(tangon)(result);
            result = result.COLLECTIBLES_SHOP_CARD_WIDTH;
            echoed = _closure1_slot1;
            output = output[update];
            output = echoed.bind(tangon)(output);
            output = output.spacing;
            output = output.PX_12;
            output = result + output;
            foxtra['estimatedItemSize'] = output;
            output = false;
            foxtra['showsHorizontalScrollIndicator'] = output;
            output = function() { // Original name: ListHeaderComponent
                tangon = _closure1_slot8;
                zuuluu = _closure1_slot4;
                michal = {};
                report = {};
                golfie = _closure1_slot1;
                oscard = _closure1_slot2;
                entity = 6;
                oscard = oscard[entity];
                entity = undefined;
                oscard = golfie.bind(entity)(oscard);
                oscard = oscard.spacing;
                oscard = oscard.PX_16;
                report['width'] = oscard;
                michal['style'] = report;
                entity = tangon.bind(entity)(zuuluu, michal);
                return entity;
            };
            foxtra['ListHeaderComponent'] = output;
            output = function() { // Original name: ListFooterComponent
                tangon = _closure1_slot8;
                zuuluu = _closure1_slot4;
                michal = {};
                report = {};
                golfie = _closure1_slot1;
                oscard = _closure1_slot2;
                entity = 6;
                oscard = oscard[entity];
                entity = undefined;
                oscard = golfie.bind(entity)(oscard);
                oscard = oscard.spacing;
                oscard = oscard.PX_16;
                report['width'] = oscard;
                michal['style'] = report;
                entity = tangon.bind(entity)(zuuluu, michal);
                return entity;
            };
            foxtra['ListFooterComponent'] = output;
            sizing = function() { // Original name: ItemSeparatorComponent
                tangon = _closure1_slot8;
                zuuluu = _closure1_slot4;
                michal = {};
                report = {};
                golfie = _closure1_slot1;
                oscard = _closure1_slot2;
                entity = 6;
                oscard = oscard[entity];
                entity = undefined;
                oscard = golfie.bind(entity)(oscard);
                oscard = oscard.spacing;
                oscard = oscard.PX_12;
                report['width'] = oscard;
                michal['style'] = report;
                entity = tangon.bind(entity)(zuuluu, michal);
                return entity;
            };
            foxtra['ItemSeparatorComponent'] = sizing;
            foxtra['initialScrollIndex'] = kiloes;
            foxtra = romeon.bind(tangon)(backup, foxtra);
            offset['children'] = foxtra;
            offset = romeon.bind(tangon)(yankee, offset);
            verify[1] = offset;
            oscard['children'] = verify;
            report = option.bind(tangon)(golfie, oscard);
 1236:
            entity['children'] = report;
            entity = zuuluu.bind(tangon)(michal, entity);
            return entity;
 1248:
            entity = null;
            return entity;
        }
    };
    zuuluu['default'] = michal;
    return entity;
})();