// app/modules/collectibles/native/ShopCategory.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    golfie = argBar;
    foxtra = argBaz;
    zuuluu = argFre;
    option = argPlu;
    var _closure1_slot0 = golfie;
    var _closure1_slot1 = foxtra;
    var _closure1_slot2 = option;
    entity = global;
    oscard = entity.Object;
    report = oscard.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = report.bind(oscard)(zuuluu, entity, tangon);
    entity = 0;
    report = option[entity];
    tangon = argCor;
    entity = undefined;
    tangon = tangon.bind(entity)(report);
    var _closure1_slot3 = tangon;
    tangon = 1;
    tangon = option[tangon];
    tangon = golfie.bind(entity)(tangon);
    report = tangon.Image;
    var _closure1_slot4 = report;
    tangon = tangon.View;
    var _closure1_slot5 = tangon;
    tangon = 2;
    tangon = option[tangon];
    tangon = foxtra.bind(entity)(tangon);
    var _closure1_slot6 = tangon;
    tangon = 3;
    tangon = option[tangon];
    tangon = golfie.bind(entity)(tangon);
    tangon = tangon.UserSettingsSections;
    var _closure1_slot7 = tangon;
    tangon = 4;
    tangon = option[tangon];
    tangon = golfie.bind(entity)(tangon);
    report = tangon.jsx;
    var _closure1_slot8 = report;
    report = tangon.jsxs;
    var _closure1_slot9 = report;
    tangon = tangon.Fragment;
    var _closure1_slot10 = tangon;
    tangon = 5;
    tangon = option[tangon];
    tangon = golfie.bind(entity)(tangon);
    report = tangon.COLLECTIBLES_SHOP_CARD_HEIGHT;
    tangon = 100;
    report = tangon + report;
    backup = 6;
    tangon = option[backup];
    offset = golfie.bind(entity)(tangon);
    verify = offset.createStyles;
    oscard = {};
    yankee = {};
    tangon = 24;
    yankee['marginBottom'] = tangon;
    oscard['categoryContainer'] = yankee;
    yankee = {};
    yankee['height'] = report;
    oscard['categoryContainerRegular'] = yankee;
    yankee = {};
    romeon = 310;
    yankee['height'] = romeon;
    oscard['categoryContainerCondensed'] = yankee;
    yankee = {'display': 'flex', 'flexDirection': 'row', 'justifyContent': 'flex-end', 'alignItems': 'center', 'marginBottom': 16, 'marginHorizontal': 16, 'borderRadius': null, 'overflow': 'hidden', 'borderWidth': 1, 'height': 84, 'padding': 20};
    romeon = 7;
    kiloes = option[romeon];
    kiloes = foxtra.bind(entity)(kiloes);
    kiloes = kiloes.radii;
    kiloes = kiloes.sm;
    yankee['borderRadius'] = kiloes;
    oscard['categoryHeader'] = yankee;
    yankee = {};
    kiloes = option[romeon];
    kiloes = foxtra.bind(entity)(kiloes);
    kiloes = kiloes.unsafe_rawColors;
    kiloes = kiloes.PRIMARY_660;
    yankee['borderColor'] = kiloes;
    oscard['categoryHeaderBorderDark'] = yankee;
    yankee = {};
    kiloes = option[romeon];
    kiloes = foxtra.bind(entity)(kiloes);
    kiloes = kiloes.colors;
    kiloes = kiloes.BACKGROUND_TERTIARY;
    yankee['borderColor'] = kiloes;
    oscard['categoryHeaderBorderLight'] = yankee;
    yankee = {'resizeMode': 'cover', 'top': 0, 'bottom': 0, 'left': 0, 'right': 0, 'position': 'absolute'};
    oscard['imageBackground'] = yankee;
    yankee = {};
    kiloes = option[romeon];
    kiloes = foxtra.bind(entity)(kiloes);
    kiloes = kiloes.colors;
    kiloes = kiloes.REDESIGN_BUTTON_SECONDARY_OVERLAY_BACKGROUND;
    yankee['backgroundColor'] = kiloes;
    yankee['padding'] = backup;
    romeon = option[romeon];
    romeon = foxtra.bind(entity)(romeon);
    romeon = romeon.radii;
    romeon = romeon.round;
    yankee['borderRadius'] = romeon;
    oscard['viewAllIcon'] = yankee;
    oscard = verify.bind(offset)(oscard);
    var _closure1_slot11 = oscard;
    oscard = function() { // Original name: Spacing
        tangon = _closure1_slot8;
        zuuluu = _closure1_slot5;
        michal = {};
        entity = {};
        report = 10;
        entity['width'] = report;
        michal['style'] = entity;
        entity = undefined;
        entity = tangon.bind(entity)(zuuluu, michal);
        return entity;
    };
    var _closure1_slot12 = oscard;
    oscard = function() { // Original name: HeaderAndFooterSpacing
        tangon = _closure1_slot8;
        zuuluu = _closure1_slot5;
        michal = {};
        entity = {};
        report = 16;
        entity['width'] = report;
        michal['style'] = entity;
        entity = undefined;
        entity = tangon.bind(entity)(zuuluu, michal);
        return entity;
    };
    var _closure1_slot13 = oscard;
    oscard = 22;
    oscard = option[oscard];
    option = golfie.bind(entity)(oscard);
    golfie = option.fileFinishedImporting;
    oscard = 'modules/collectibles/native/ShopCategory.tsx';
    oscard = golfie.bind(option)(oscard);
    zuuluu['CATEGORY_CONTAINER_HEIGHT'] = report;
    zuuluu['CATEGORY_CONTAINER_BOTTOM_MARGIN'] = tangon;
    michal = function(argFoo) {
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            entity = argFoo;
            oscard = entity.index;
            option = entity.item;
            var _closure2_slot0 = option;
            update = entity.isDarkTheme;
            tangon = undefined;
            var _closure2_slot4 = tangon;
            var _closure2_slot5 = tangon;
            entity = _closure1_slot11;
            output = entity.bind(tangon)();
            michal = _closure1_slot0;
            zuuluu = _closure1_slot2;
            entity = 8;
            entity = zuuluu[entity];
            report = michal.bind(tangon)(entity);
            entity = report.useNavigation;
            entity = entity.bind(report)();
            var _closure2_slot1 = entity;
            golfie = option.products;
            entity = option.unpublishedAt;
            var _closure2_slot2 = entity;
            entity = 9;
            entity = zuuluu[entity];
            report = michal.bind(tangon)(entity);
            entity = report.useBadBundleFilter;
            report = entity.bind(report)();
            kiloes = 10;
            entity = zuuluu[kiloes];
            verify = michal.bind(tangon)(entity);
            entity = verify.useAndroidUnsyncedFilter;
            entity = entity.bind(verify)();
            entity = entity.bind(tangon)(golfie);
            golfie = report.bind(tangon)(entity);
            entity = 11;
            entity = zuuluu[entity];
            report = michal.bind(tangon)(entity);
            entity = report.usePurchasedProductsSort;
            sizing = entity.bind(report)(golfie);
            var _closure2_slot3 = sizing;
            entity = 12;
            entity = zuuluu[entity];
            verify = michal.bind(tangon)(entity);
            golfie = verify.useStateFromStores;
            entity = _closure1_slot6;
            report = new Array(1);
            report[0] = entity;
            entity = function() {
                michal = _closure1_slot6;
                entity = michal.getWidth;
                entity = entity.bind(michal)();
                return entity;
            };
            golfie = golfie.bind(verify)(report, entity);
            entity = 13;
            entity = zuuluu[entity];
            report = michal.bind(tangon)(entity);
            zuuluu = report.getCollectiblesAssetURL;
            yankee = null;
            entity = yankee == option;
            michal = undefined;
            if(entity) { _fun00002_ip = 254; continue _fun00001 }
 248:
            michal = option.mobileBanner;
 254:
            if(!(yankee == michal)) { _fun00002_ip = 276; continue _fun00001 }
 258:
            verify = yankee == option;
            entity = undefined;
            if(verify) { _fun00002_ip = 273; continue _fun00001 }
 267:
            entity = option.banner;
 273:
            michal = entity;
 276:
            entity = {};
            entity['size'] = golfie;
            golfie = 'webp';
            entity['format'] = golfie;
            record = zuuluu.bind(report)(michal, entity);
            michal = _closure1_slot1;
            zuuluu = _closure1_slot2;
            entity = 14;
            entity = zuuluu[entity];
            michal = michal.bind(tangon)(entity);
            entity = {};
            report = 'ShopCategory';
            entity['location'] = report;
            entity = michal.bind(tangon)(entity);
            verify = entity.enabled;
            michal = _closure1_slot0;
            entity = 15;
            entity = zuuluu[entity];
            zuuluu = michal.bind(tangon)(entity);
            michal = zuuluu.useCollectiblesShopDeepLinkProps;
            entity = {};
            entity['products'] = sizing;
            entity = michal.bind(zuuluu)(entity);
            romeon = entity.productIndex;
            if(!verify) { _fun00002_ip = 395; continue _fun00001 }
 381:
            entity = 2;
            michal = oscard % entity;
            entity = 1;
            verify = michal === entity;
 395:
            _closure2_slot4 = verify;
            report = _closure1_slot3;
            zuuluu = report.useMemo;
            michal = new Array(2);
            michal[0] = verify;
            michal[1] = sizing;
            entity = function() {
                _fun00003: for(var _fun00004_ip = 0; ; ) switch(_fun00004_ip) {
 0:
                    entity = _closure2_slot4;
                    if(entity) { _fun00004_ip = 16; continue _fun00003 }
 10:
                    entity = new Array(0);
                    _fun00004_ip = 60; continue _fun00003;
 16:
                    report = _closure1_slot1;
                    tangon = _closure1_slot2;
                    zuuluu = 16;
                    tangon = tangon[zuuluu];
                    zuuluu = undefined;
                    report = report.bind(zuuluu)(tangon);
                    tangon = report.chunk;
                    zuuluu = _closure2_slot3;
                    michal = 2;
                    entity = tangon.bind(report)(zuuluu, michal);
 60:
                    return entity;
                }
            };
            result = zuuluu.bind(report)(entity, michal);
            michal = _closure1_slot0;
            report = _closure1_slot2;
            entity = 17;
            zuuluu = report[entity];
            golfie = michal.bind(tangon)(zuuluu);
            zuuluu = golfie.useCollectiblesAnalyticsContext;
            zuuluu = zuuluu.bind(golfie)();
            _closure2_slot5 = zuuluu;
            zuuluu = _closure1_slot8;
            entity = report[entity];
            entity = michal.bind(tangon)(entity);
            michal = entity.CollectiblesAnalyticsProvider;
            entity = {};
            report = {};
            report['categoryPosition'] = oscard;
            entity['newValue'] = report;
            golfie = _closure1_slot9;
            oscard = _closure1_slot5;
            report = {};
            echoed = output.categoryContainer;
            offset = new Array(2);
            offset[0] = echoed;
            if(verify) { _fun00002_ip = 535; continue _fun00001 }
 527:
            echoed = output.categoryContainerRegular;
            _fun00002_ip = 541; continue _fun00001;
 535:
            echoed = output.categoryContainerCondensed;
 541:
            offset[1] = echoed;
            report['style'] = offset;
            ctrled = _closure1_slot9;
            echoed = _closure1_slot0;
            source = _closure1_slot2;
            offset = 18;
            offset = source[offset];
            offset = echoed.bind(tangon)(offset);
            source = offset.PressableOpacity;
            offset = {'style': null, 'accessibilityRole': 'button', 'accessibilityLabel': null, 'activeOpacity': 0.8, 'androidRippleConfig': null, 'hitSlop': 8};
            vacuum = output.categoryHeader;
            echoed = new Array(2);
            echoed[0] = vacuum;
            if(update) { _fun00002_ip = 618; continue _fun00001 }
 610:
            update = output.categoryHeaderBorderLight;
            _fun00002_ip = 624; continue _fun00001;
 618:
            update = output.categoryHeaderBorderDark;
 624:
            echoed[1] = update;
            offset['style'] = echoed;
            vacuum = _closure1_slot0;
            config = _closure1_slot2;
            echoed = 19;
            update = config[echoed];
            update = vacuum.bind(tangon)(update);
            cntext = update.intl;
            sequen = cntext.formatToPlainString;
            update = config[echoed];
            update = vacuum.bind(tangon)(update);
            update = update.t;
            vacuum = update.hEsdAw;
            update = {};
            papara = option.name;
            update['category'] = papara;
            update = sequen.bind(cntext)(vacuum, update);
            offset['accessibilityLabel'] = update;
            update = {};
            sequen = _closure1_slot1;
            vacuum = 7;
            vacuum = config[vacuum];
            vacuum = sequen.bind(tangon)(vacuum);
            vacuum = vacuum.radii;
            vacuum = vacuum.lg;
            update['radius'] = vacuum;
            offset['androidRippleConfig'] = update;
            update = function() { // Original name: onPress
                oscard = _closure2_slot0;
                tangon = _closure2_slot1;
                zuuluu = tangon.push;
                entity = _closure1_slot7;
                michal = entity.COLLECTIBLES_SHOP_VIEW_ALL_CATEGORY_ITEMS;
                entity = {};
                entity['category'] = oscard;
                report = _closure2_slot5;
                entity['analyticsContext'] = report;
                entity = zuuluu.bind(tangon)(michal, entity);
                entity = undefined;
                return entity;
            };
            offset['onPress'] = update;
            yankee = yankee != record;
            if(!yankee) { _fun00002_ip = 804; continue _fun00001 }
 767:
            sequen = _closure1_slot8;
            vacuum = _closure1_slot4;
            update = {};
            config = {};
            config['uri'] = record;
            update['source'] = config;
            config = output.imageBackground;
            update['style'] = config;
            yankee = sequen.bind(tangon)(vacuum, update);
 804:
            vacuum = new Array(2);
            vacuum[0] = yankee;
            yankee = _closure1_slot8;
            config = _closure1_slot5;
            sequen = {};
            output = output.viewAllIcon;
            sequen['style'] = output;
            output = _closure1_slot0;
            update = _closure1_slot2;
            record = 20;
            record = update[record];
            record = output.bind(tangon)(record);
            cntext = record.ChevronSmallRightIcon;
            record = {'size': 'sm', 'color': 'white'};
            record = yankee.bind(tangon)(cntext, record);
            sequen['children'] = record;
            sequen = yankee.bind(tangon)(config, sequen);
            vacuum[1] = sequen;
            offset['children'] = vacuum;
            option = option.storeListingId;
            offset = ctrled.bind(tangon)(source, offset, option);
            option = new Array(2);
            option[0] = offset;
            offset = 21;
            offset = update[offset];
            offset = output.bind(tangon)(offset);
            offset = offset.FlashList;
            if(verify) { _fun00002_ip = 1089; continue _fun00001 }
 941:
            verify = {};
            output = true;
            verify['horizontal'] = output;
            output = _closure1_slot0;
            update = _closure1_slot2;
            source = update[echoed];
            source = output.bind(tangon)(source);
            vacuum = source.intl;
            ctrled = vacuum.string;
            source = update[echoed];
            source = output.bind(tangon)(source);
            source = source.t;
            source = source.pWG4zc;
            source = ctrled.bind(vacuum)(source);
            verify['accessibilityLabel'] = source;
            verify['data'] = sizing;
            sizing = function(argFoo) { // Original name: renderItem
                michal = argFoo;
                entity = michal.item;
                verify = michal.index;
                report = _closure1_slot8;
                zuuluu = _closure1_slot0;
                option = _closure1_slot2;
                michal = 17;
                michal = option[michal];
                tangon = undefined;
                michal = zuuluu.bind(tangon)(michal);
                zuuluu = michal.CollectiblesAnalyticsProvider;
                michal = {};
                golfie = {};
                golfie['tilePosition'] = verify;
                michal['newValue'] = golfie;
                golfie = _closure1_slot1;
                oscard = 5;
                oscard = option[oscard];
                golfie = golfie.bind(tangon)(oscard);
                oscard = {};
                oscard['product'] = entity;
                option = _closure2_slot2;
                oscard['unpublishedAt'] = option;
                oscard = report.bind(tangon)(golfie, oscard);
                michal['children'] = oscard;
                oscard = entity.items;
                entity = 0;
                entity = oscard[entity];
                entity = entity.id;
                entity = report.bind(tangon)(zuuluu, michal, entity);
                return entity;
            };
            verify['renderItem'] = sizing;
            sizing = 5;
            sizing = update[sizing];
            sizing = output.bind(tangon)(sizing);
            sizing = sizing.COLLECTIBLES_SHOP_CARD_WIDTH;
            sizing = sizing + kiloes;
            verify['estimatedItemSize'] = sizing;
            sizing = false;
            verify['showsHorizontalScrollIndicator'] = sizing;
            sizing = _closure1_slot13;
            verify['ListHeaderComponent'] = sizing;
            verify['ListFooterComponent'] = sizing;
            sizing = _closure1_slot12;
            verify['ItemSeparatorComponent'] = sizing;
            verify['initialScrollIndex'] = romeon;
            _fun00002_ip = 1221; continue _fun00001;
 1089:
            romeon = {};
            sizing = true;
            romeon['horizontal'] = sizing;
            sizing = _closure1_slot0;
            output = _closure1_slot2;
            update = output[echoed];
            update = sizing.bind(tangon)(update);
            source = update.intl;
            update = source.string;
            echoed = output[echoed];
            echoed = sizing.bind(tangon)(echoed);
            echoed = echoed.t;
            echoed = echoed.pWG4zc;
            echoed = update.bind(source)(echoed);
            romeon['accessibilityLabel'] = echoed;
            romeon['data'] = result;
            backup = function(argFoo) { // Original name: renderItem
                entity = argFoo;
                oscard = entity.item;
                tangon = _closure1_slot8;
                zuuluu = _closure1_slot10;
                michal = {};
                report = oscard.map;
                entity = function(argFoo, argBar) {
                    report = _closure1_slot8;
                    michal = _closure1_slot1;
                    zuuluu = _closure1_slot2;
                    entity = 5;
                    entity = zuuluu[entity];
                    tangon = undefined;
                    zuuluu = michal.bind(tangon)(entity);
                    michal = {};
                    entity = argFoo;
                    michal['product'] = entity;
                    entity = true;
                    michal['condensed'] = entity;
                    entity = argBar;
                    entity = report.bind(tangon)(zuuluu, michal, entity);
                    return entity;
                };
                entity = report.bind(oscard)(entity);
                michal['children'] = entity;
                entity = undefined;
                entity = tangon.bind(entity)(zuuluu, michal);
                return entity;
            };
            romeon['renderItem'] = backup;
            backup = 5;
            backup = output[backup];
            backup = sizing.bind(tangon)(backup);
            backup = backup.COLLECTIBLES_SHOP_CARD_WIDTH;
            backup = backup + kiloes;
            romeon['estimatedItemSize'] = backup;
            backup = false;
            romeon['showsHorizontalScrollIndicator'] = backup;
            foxtra = _closure1_slot12;
            romeon['ListHeaderComponent'] = foxtra;
            romeon['ItemSeparatorComponent'] = foxtra;
            verify = romeon;
 1221:
            verify = yankee.bind(tangon)(offset, verify);
            option[1] = verify;
            report['children'] = option;
            report = golfie.bind(tangon)(oscard, report);
            entity['children'] = report;
            entity = zuuluu.bind(tangon)(michal, entity);
            return entity;
        }
    };
    zuuluu['ShopCategory'] = michal;
    return entity;
})();