// app/modules/collectibles/native/ShopCategory.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    golfie = argBar;
    foxtra = argBaz;
    zuuluu = argFre;
    option = argPlu;
    var _closure1_slot0 = golfie;
    var _closure1_slot1 = foxtra;
    var _closure1_slot2 = option;
    entity = global;
    oscard = entity.Object;
    report = oscard.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = report.bind(oscard)(zuuluu, entity, tangon);
    entity = 0;
    report = option[entity];
    tangon = argCor;
    entity = undefined;
    tangon = tangon.bind(entity)(report);
    var _closure1_slot3 = tangon;
    tangon = 1;
    tangon = option[tangon];
    tangon = golfie.bind(entity)(tangon);
    report = tangon.Image;
    var _closure1_slot4 = report;
    tangon = tangon.View;
    var _closure1_slot5 = tangon;
    tangon = 2;
    tangon = option[tangon];
    tangon = golfie.bind(entity)(tangon);
    tangon = tangon.UserSettingsSections;
    var _closure1_slot6 = tangon;
    tangon = 3;
    tangon = option[tangon];
    tangon = golfie.bind(entity)(tangon);
    report = tangon.jsx;
    var _closure1_slot7 = report;
    tangon = tangon.jsxs;
    var _closure1_slot8 = tangon;
    tangon = 4;
    tangon = option[tangon];
    tangon = golfie.bind(entity)(tangon);
    report = tangon.COLLECTIBLES_SHOP_CARD_HEIGHT;
    tangon = 100;
    report = tangon + report;
    tangon = 5;
    tangon = option[tangon];
    offset = golfie.bind(entity)(tangon);
    verify = offset.createStyles;
    oscard = {};
    yankee = {};
    tangon = 24;
    yankee['marginBottom'] = tangon;
    yankee['height'] = report;
    oscard['categoryContainer'] = yankee;
    yankee = {'display': 'flex', 'flexDirection': 'row', 'justifyContent': 'flex-end', 'alignItems': 'center', 'marginBottom': 16, 'marginHorizontal': 16, 'borderRadius': null, 'overflow': 'hidden', 'borderWidth': 1, 'height': 84, 'padding': 20};
    romeon = 6;
    backup = option[romeon];
    backup = foxtra.bind(entity)(backup);
    backup = backup.radii;
    backup = backup.sm;
    yankee['borderRadius'] = backup;
    oscard['categoryHeader'] = yankee;
    yankee = {};
    backup = option[romeon];
    backup = foxtra.bind(entity)(backup);
    backup = backup.unsafe_rawColors;
    backup = backup.PRIMARY_660;
    yankee['borderColor'] = backup;
    oscard['categoryHeaderBorderDark'] = yankee;
    yankee = {};
    backup = option[romeon];
    backup = foxtra.bind(entity)(backup);
    backup = backup.colors;
    backup = backup.BACKGROUND_TERTIARY;
    yankee['borderColor'] = backup;
    oscard['categoryHeaderBorderLight'] = yankee;
    yankee = {'resizeMode': 'cover', 'top': 0, 'bottom': 0, 'left': 0, 'right': 0, 'position': 'absolute'};
    oscard['imageBackground'] = yankee;
    yankee = {};
    backup = option[romeon];
    backup = foxtra.bind(entity)(backup);
    backup = backup.colors;
    backup = backup.REDESIGN_BUTTON_SECONDARY_OVERLAY_BACKGROUND;
    yankee['backgroundColor'] = backup;
    yankee['padding'] = romeon;
    romeon = option[romeon];
    romeon = foxtra.bind(entity)(romeon);
    romeon = romeon.radii;
    romeon = romeon.round;
    yankee['borderRadius'] = romeon;
    oscard['viewAllIcon'] = yankee;
    oscard = verify.bind(offset)(oscard);
    var _closure1_slot9 = oscard;
    oscard = function() { // Original name: Spacing
        tangon = _closure1_slot7;
        zuuluu = _closure1_slot5;
        michal = {};
        entity = {};
        report = 10;
        entity['width'] = report;
        michal['style'] = entity;
        entity = undefined;
        entity = tangon.bind(entity)(zuuluu, michal);
        return entity;
    };
    var _closure1_slot10 = oscard;
    oscard = function() { // Original name: HeaderAndFooterSpacing
        tangon = _closure1_slot7;
        zuuluu = _closure1_slot5;
        michal = {};
        entity = {};
        report = 16;
        entity['width'] = report;
        michal['style'] = entity;
        entity = undefined;
        entity = tangon.bind(entity)(zuuluu, michal);
        return entity;
    };
    var _closure1_slot11 = oscard;
    oscard = 23;
    oscard = option[oscard];
    option = golfie.bind(entity)(oscard);
    golfie = option.fileFinishedImporting;
    oscard = 'modules/collectibles/native/ShopCategory.tsx';
    oscard = golfie.bind(option)(oscard);
    zuuluu['CATEGORY_CONTAINER_HEIGHT'] = report;
    zuuluu['CATEGORY_CONTAINER_BOTTOM_MARGIN'] = tangon;
    michal = function(argFoo) {
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            entity = argFoo;
            oscard = entity.index;
            option = entity.item;
            var _closure2_slot0 = option;
            echoed = entity.isDarkTheme;
            tangon = undefined;
            var _closure2_slot5 = tangon;
            var _closure2_slot6 = tangon;
            verify = _closure1_slot1;
            report = _closure1_slot2;
            entity = 7;
            entity = report[entity];
            entity = verify.bind(tangon)(entity);
            entity = entity.bind(tangon)();
            entity = entity.analyticsLocations;
            var _closure2_slot1 = entity;
            michal = _closure1_slot9;
            sizing = michal.bind(tangon)();
            zuuluu = _closure1_slot0;
            michal = 8;
            michal = report[michal];
            golfie = zuuluu.bind(tangon)(michal);
            michal = golfie.useNavigation;
            michal = michal.bind(golfie)();
            var _closure2_slot2 = michal;
            golfie = option.products;
            var _closure2_slot3 = golfie;
            michal = option.unpublishedAt;
            var _closure2_slot4 = michal;
            michal = 9;
            michal = report[michal];
            offset = zuuluu.bind(tangon)(michal);
            michal = offset.useBadBundleFilter;
            offset = michal.bind(offset)();
            kiloes = 10;
            michal = report[kiloes];
            yankee = zuuluu.bind(tangon)(michal);
            michal = yankee.useAndroidUnsyncedFilter;
            yankee = michal.bind(yankee)();
            michal = 11;
            michal = report[michal];
            romeon = zuuluu.bind(tangon)(michal);
            michal = romeon.useNameplateFilter;
            michal = michal.bind(romeon)();
            michal = michal.bind(tangon)(golfie);
            michal = yankee.bind(tangon)(michal);
            yankee = offset.bind(tangon)(michal);
            michal = 12;
            michal = report[michal];
            offset = zuuluu.bind(tangon)(michal);
            michal = offset.usePurchasedProductsSort;
            result = michal.bind(offset)(yankee);
            michal = 13;
            michal = report[michal];
            michal = verify.bind(tangon)(michal);
            michal = michal.bind(tangon)();
            offset = michal.width;
            michal = 14;
            michal = report[michal];
            verify = zuuluu.bind(tangon)(michal);
            report = verify.getCollectiblesAssetURL;
            yankee = null;
            michal = yankee == option;
            zuuluu = undefined;
            if(michal) { _fun00002_ip = 290; continue _fun00001 }
 284:
            zuuluu = option.mobileBanner;
 290:
            if(!(yankee == zuuluu)) { _fun00002_ip = 312; continue _fun00001 }
 294:
            romeon = yankee == option;
            michal = undefined;
            if(romeon) { _fun00002_ip = 309; continue _fun00001 }
 303:
            michal = option.banner;
 309:
            zuuluu = michal;
 312:
            michal = {};
            michal['size'] = offset;
            offset = 'webp';
            michal['format'] = offset;
            vacuum = report.bind(verify)(zuuluu, michal);
            offset = _closure1_slot0;
            output = _closure1_slot2;
            michal = 15;
            michal = output[michal];
            report = offset.bind(tangon)(michal);
            zuuluu = report.useCollectiblesShopDeepLinkProps;
            michal = {};
            michal['products'] = result;
            michal = zuuluu.bind(report)(michal);
            romeon = michal.productIndex;
            verify = michal.initialProductSkuId;
            _closure2_slot5 = verify;
            report = _closure1_slot3;
            zuuluu = report.useEffect;
            michal = new Array(3);
            michal[0] = verify;
            michal[1] = golfie;
            michal[2] = entity;
            entity = function() {
                _fun00003: for(var _fun00004_ip = 0; ; ) switch(_fun00004_ip) {
 0:
                    michal = _closure2_slot5;
                    entity = null;
                    michal = entity != michal;
                    report = null;
                    if(!michal) { _fun00004_ip = 41; continue _fun00003 }
 18:
                    oscard = _closure2_slot3;
                    zuuluu = oscard.find;
                    michal = function(argFoo) {
                        entity = argFoo;
                        michal = entity.skuId;
                        entity = _closure2_slot5;
                        entity = michal === entity;
                        return entity;
                    };
                    report = zuuluu.bind(oscard)(michal);
 41:
                    if(!(entity != report)) { _fun00004_ip = 123; continue _fun00003 }
 45:
                    golfie = _closure1_slot1;
                    oscard = _closure1_slot2;
                    michal = 16;
                    michal = oscard[michal];
                    zuuluu = undefined;
                    golfie = golfie.bind(zuuluu)(michal);
                    michal = golfie.hideActionSheet;
                    michal = michal.bind(golfie)();
                    michal = _closure1_slot0;
                    entity = 17;
                    entity = oscard[entity];
                    zuuluu = michal.bind(zuuluu)(entity);
                    michal = zuuluu.openProductDetailActionSheet;
                    entity = {};
                    entity['product'] = report;
                    tangon = _closure2_slot1;
                    entity['analyticsLocations'] = tangon;
                    entity = michal.bind(zuuluu)(entity);
 123:
                    entity = undefined;
                    return entity;
                }
            };
            entity = zuuluu.bind(report)(entity, michal);
            entity = 18;
            michal = output[entity];
            zuuluu = offset.bind(tangon)(michal);
            michal = zuuluu.useCollectiblesAnalyticsContext;
            michal = michal.bind(zuuluu)();
            _closure2_slot6 = michal;
            zuuluu = _closure1_slot7;
            entity = output[entity];
            entity = offset.bind(tangon)(entity);
            michal = entity.CollectiblesAnalyticsProvider;
            entity = {};
            report = {};
            report['categoryPosition'] = oscard;
            entity['newValue'] = report;
            golfie = _closure1_slot8;
            oscard = _closure1_slot5;
            report = {};
            verify = sizing.categoryContainer;
            report['style'] = verify;
            verify = 19;
            verify = output[verify];
            verify = offset.bind(tangon)(verify);
            offset = verify.PressableOpacity;
            verify = {'style': null, 'accessibilityRole': 'button', 'accessibilityLabel': null, 'activeOpacity': 0.8, 'androidRippleConfig': null, 'hitSlop': 8};
            update = sizing.categoryHeader;
            output = new Array(2);
            output[0] = update;
            if(echoed) { _fun00002_ip = 562; continue _fun00001 }
 554:
            echoed = sizing.categoryHeaderBorderLight;
            _fun00002_ip = 568; continue _fun00001;
 562:
            echoed = sizing.categoryHeaderBorderDark;
 568:
            output[1] = echoed;
            verify['style'] = output;
            update = _closure1_slot0;
            ctrled = _closure1_slot2;
            echoed = 20;
            output = ctrled[echoed];
            output = update.bind(tangon)(output);
            sequen = output.intl;
            source = sequen.formatToPlainString;
            output = ctrled[echoed];
            output = update.bind(tangon)(output);
            output = output.t;
            update = output.hEsdAw;
            output = {};
            config = option.name;
            output['category'] = config;
            output = source.bind(sequen)(update, output);
            verify['accessibilityLabel'] = output;
            output = {};
            source = _closure1_slot1;
            update = 6;
            update = ctrled[update];
            update = source.bind(tangon)(update);
            update = update.radii;
            update = update.lg;
            output['radius'] = update;
            verify['androidRippleConfig'] = output;
            output = function() { // Original name: onPress
                oscard = _closure2_slot0;
                tangon = _closure2_slot2;
                zuuluu = tangon.push;
                entity = _closure1_slot6;
                michal = entity.COLLECTIBLES_SHOP_VIEW_ALL_CATEGORY_ITEMS;
                entity = {};
                entity['category'] = oscard;
                report = _closure2_slot6;
                entity['analyticsContext'] = report;
                entity = zuuluu.bind(tangon)(michal, entity);
                entity = undefined;
                return entity;
            };
            verify['onPress'] = output;
            yankee = yankee != vacuum;
            if(!yankee) { _fun00002_ip = 748; continue _fun00001 }
 711:
            source = _closure1_slot7;
            update = _closure1_slot4;
            output = {};
            ctrled = {};
            ctrled['uri'] = vacuum;
            output['source'] = ctrled;
            ctrled = sizing.imageBackground;
            output['style'] = ctrled;
            yankee = source.bind(tangon)(update, output);
 748:
            update = new Array(2);
            update[0] = yankee;
            yankee = _closure1_slot7;
            ctrled = _closure1_slot5;
            source = {};
            sizing = sizing.viewAllIcon;
            source['style'] = sizing;
            sizing = _closure1_slot0;
            output = _closure1_slot2;
            vacuum = 21;
            vacuum = output[vacuum];
            vacuum = sizing.bind(tangon)(vacuum);
            sequen = vacuum.ChevronSmallRightIcon;
            vacuum = {'size': 'sm', 'color': 'white'};
            vacuum = yankee.bind(tangon)(sequen, vacuum);
            source['children'] = vacuum;
            source = yankee.bind(tangon)(ctrled, source);
            update[1] = source;
            verify['children'] = update;
            option = option.storeListingId;
            verify = golfie.bind(tangon)(offset, verify, option);
            option = new Array(2);
            option[0] = verify;
            verify = 22;
            verify = output[verify];
            verify = sizing.bind(tangon)(verify);
            offset = verify.FlashList;
            verify = {};
            update = true;
            verify['horizontal'] = update;
            update = output[echoed];
            update = sizing.bind(tangon)(update);
            source = update.intl;
            update = source.string;
            echoed = output[echoed];
            echoed = sizing.bind(tangon)(echoed);
            echoed = echoed.t;
            echoed = echoed.pWG4zc;
            echoed = update.bind(source)(echoed);
            verify['accessibilityLabel'] = echoed;
            verify['data'] = result;
            backup = function(argFoo) { // Original name: renderItem
                _fun00005: for(var _fun00006_ip = 0; ; ) switch(_fun00006_ip) {
 0:
                    michal = argFoo;
                    entity = michal.item;
                    verify = michal.index;
                    report = _closure1_slot7;
                    zuuluu = _closure1_slot0;
                    option = _closure1_slot2;
                    michal = 18;
                    michal = option[michal];
                    tangon = undefined;
                    michal = zuuluu.bind(tangon)(michal);
                    zuuluu = michal.CollectiblesAnalyticsProvider;
                    michal = {};
                    golfie = {};
                    golfie['tilePosition'] = verify;
                    michal['newValue'] = golfie;
                    golfie = _closure1_slot1;
                    oscard = 4;
                    oscard = option[oscard];
                    golfie = golfie.bind(tangon)(oscard);
                    oscard = {};
                    oscard['product'] = entity;
                    option = _closure2_slot4;
                    oscard['unpublishedAt'] = option;
                    oscard = report.bind(tangon)(golfie, oscard);
                    michal['children'] = oscard;
                    oscard = entity.items;
                    entity = 0;
                    oscard = oscard[entity];
                    entity = null;
                    golfie = entity == oscard;
                    entity = undefined;
                    if(golfie) { _fun00006_ip = 135; continue _fun00005 }
 130:
                    entity = oscard.id;
 135:
                    entity = report.bind(tangon)(zuuluu, michal, entity);
                    return entity;
                }
            };
            verify['renderItem'] = backup;
            backup = 4;
            backup = output[backup];
            backup = sizing.bind(tangon)(backup);
            backup = backup.COLLECTIBLES_SHOP_CARD_WIDTH;
            backup = backup + kiloes;
            verify['estimatedItemSize'] = backup;
            backup = false;
            verify['showsHorizontalScrollIndicator'] = backup;
            backup = _closure1_slot11;
            verify['ListHeaderComponent'] = backup;
            verify['ListFooterComponent'] = backup;
            foxtra = _closure1_slot10;
            verify['ItemSeparatorComponent'] = foxtra;
            verify['initialScrollIndex'] = romeon;
            verify = yankee.bind(tangon)(offset, verify);
            option[1] = verify;
            report['children'] = option;
            report = golfie.bind(tangon)(oscard, report);
            entity['children'] = report;
            entity = zuuluu.bind(tangon)(michal, entity);
            return entity;
        }
    };
    zuuluu['ShopCategory'] = michal;
    return entity;
})();