// app/modules/collectibles/native/SelectedUserField.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    report = argBar;
    romeon = argBaz;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    var _closure1_slot1 = romeon;
    var _closure1_slot2 = oscard;
    entity = global;
    option = entity.Object;
    golfie = option.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(option)(zuuluu, entity, tangon);
    entity = 0;
    golfie = oscard[entity];
    tangon = argCor;
    entity = undefined;
    tangon = tangon.bind(entity)(golfie);
    tangon = 1;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    golfie = tangon.Pressable;
    var _closure1_slot3 = golfie;
    tangon = tangon.View;
    var _closure1_slot4 = tangon;
    tangon = 2;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    golfie = tangon.jsx;
    var _closure1_slot5 = golfie;
    tangon = tangon.jsxs;
    var _closure1_slot6 = tangon;
    tangon = 3;
    tangon = oscard[tangon];
    option = report.bind(entity)(tangon);
    golfie = option.createStyles;
    tangon = {};
    verify = {'backgroundColor': null, 'flexDirection': 'row', 'borderRadius': null, 'minHeight': null, 'overflow': 'hidden', 'alignItems': 'center', 'display': 'flex'};
    yankee = 4;
    offset = oscard[yankee];
    offset = romeon.bind(entity)(offset);
    offset = offset.colors;
    offset = offset.INPUT_BACKGROUND;
    verify['backgroundColor'] = offset;
    offset = oscard[yankee];
    offset = romeon.bind(entity)(offset);
    offset = offset.radii;
    offset = offset.lg;
    verify['borderRadius'] = offset;
    offset = 5;
    offset = oscard[offset];
    offset = report.bind(entity)(offset);
    offset = offset.InputHeights;
    offset = offset.LG;
    verify['minHeight'] = offset;
    offset = oscard[yankee];
    offset = romeon.bind(entity)(offset);
    offset = offset.spacing;
    offset = offset.PX_16;
    verify['paddingHorizontal'] = offset;
    offset = 6;
    verify['paddingVertical'] = offset;
    foxtra = oscard[yankee];
    foxtra = romeon.bind(entity)(foxtra);
    foxtra = foxtra.spacing;
    foxtra = foxtra.PX_16;
    verify['marginHorizontal'] = foxtra;
    tangon['container'] = verify;
    verify = {};
    foxtra = oscard[yankee];
    foxtra = romeon.bind(entity)(foxtra);
    foxtra = foxtra.spacing;
    foxtra = foxtra.PX_8;
    verify['marginRight'] = foxtra;
    tangon['searchIcon'] = verify;
    verify = {'flexDirection': 'row', 'justifyContent': 'space-between', 'alignItems': 'center', 'flex': 1};
    tangon['selectedUserContainer'] = verify;
    verify = {'flexDirection': 'row', 'alignItems': 'center', 'backgroundColor': null, 'borderRadius': null, 'paddingVertical': 6, 'paddingHorizontal': 6};
    foxtra = oscard[yankee];
    foxtra = romeon.bind(entity)(foxtra);
    foxtra = foxtra.colors;
    foxtra = foxtra.BG_SURFACE_RAISED;
    verify['backgroundColor'] = foxtra;
    yankee = oscard[yankee];
    yankee = romeon.bind(entity)(yankee);
    yankee = yankee.radii;
    yankee = yankee.lg;
    verify['borderRadius'] = yankee;
    tangon['userPill'] = verify;
    verify = {};
    verify['marginLeft'] = offset;
    tangon['userPillText'] = verify;
    tangon = golfie.bind(option)(tangon);
    var _closure1_slot7 = tangon;
    tangon = 12;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/collectibles/native/SelectedUserField.tsx';
    tangon = report.bind(oscard)(tangon);
    michal = function(argFoo) { // Original name: SelectedUserField
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            entity = argFoo;
            ctrled = entity.selectedUser;
            report = entity.onPress;
            entity = entity.setSelectedUser;
            var _closure2_slot0 = entity;
            entity = _closure1_slot7;
            tangon = undefined;
            update = entity.bind(tangon)();
            zuuluu = _closure1_slot6;
            michal = _closure1_slot3;
            entity = {};
            oscard = update.container;
            entity['style'] = oscard;
            entity['onPress'] = report;
            golfie = _closure1_slot5;
            oscard = _closure1_slot0;
            option = _closure1_slot2;
            report = 6;
            report = option[report];
            report = oscard.bind(tangon)(report);
            oscard = report.MagnifyingGlassIcon;
            report = {'style': null, 'size': 'xs', 'color': 'interactive-normal'};
            option = update.searchIcon;
            report['style'] = option;
            sizing = 'xs';
            oscard = golfie.bind(tangon)(oscard, report);
            report = new Array(2);
            report[0] = oscard;
            oscard = null;
            if(!(oscard == ctrled)) { _fun00002_ip = 253; continue _fun00001 }
 142:
            option = _closure1_slot5;
            foxtra = _closure1_slot0;
            kiloes = _closure1_slot2;
            oscard = 8;
            oscard = kiloes[oscard];
            oscard = foxtra.bind(tangon)(oscard);
            golfie = oscard.Text;
            oscard = {};
            verify = 'text-sm/medium';
            oscard['variant'] = verify;
            verify = update.userPillText;
            oscard['style'] = verify;
            verify = 11;
            offset = kiloes[verify];
            offset = foxtra.bind(tangon)(offset);
            romeon = offset.intl;
            offset = romeon.string;
            verify = kiloes[verify];
            verify = foxtra.bind(tangon)(verify);
            verify = verify.t;
            verify = verify.R0vK0N;
            verify = offset.bind(romeon)(verify);
            oscard['children'] = verify;
            oscard = option.bind(tangon)(golfie, oscard);
            _fun00002_ip = 525; continue _fun00001;
 253:
            verify = _closure1_slot6;
            option = _closure1_slot4;
            golfie = {};
            offset = update.selectedUserContainer;
            golfie['style'] = offset;
            offset = {};
            romeon = update.userPill;
            offset['style'] = romeon;
            foxtra = _closure1_slot5;
            source = _closure1_slot1;
            output = _closure1_slot2;
            echoed = 7;
            romeon = output[echoed];
            result = source.bind(tangon)(romeon);
            romeon = {};
            romeon['user'] = ctrled;
            romeon['guildId'] = tangon;
            kiloes = _closure1_slot0;
            echoed = output[echoed];
            echoed = kiloes.bind(tangon)(echoed);
            echoed = echoed.AvatarSizes;
            echoed = echoed.XSMALL_20;
            romeon['size'] = echoed;
            result = foxtra.bind(tangon)(result, romeon);
            romeon = new Array(2);
            romeon[0] = result;
            result = 8;
            result = output[result];
            result = kiloes.bind(tangon)(result);
            echoed = result.Text;
            result = {};
            vacuum = 'text-md/medium';
            result['variant'] = vacuum;
            update = update.userPillText;
            result['style'] = update;
            update = 9;
            update = output[update];
            source = source.bind(tangon)(update);
            update = source.getName;
            update = update.bind(source)(ctrled);
            result['children'] = update;
            result = foxtra.bind(tangon)(echoed, result);
            romeon[1] = result;
            offset['children'] = romeon;
            romeon = verify.bind(tangon)(option, offset);
            offset = new Array(2);
            offset[0] = romeon;
            romeon = _closure1_slot3;
            yankee = {};
            backup = function() { // Original name: onPress
                michal = _closure2_slot0;
                entity = undefined;
                entity = michal.bind(entity)(entity);
                return entity;
            };
            yankee['onPress'] = backup;
            backup = 10;
            backup = output[backup];
            backup = kiloes.bind(tangon)(backup);
            kiloes = backup.CircleXIcon;
            backup = {};
            backup['size'] = sizing;
            backup = foxtra.bind(tangon)(kiloes, backup);
            yankee['children'] = backup;
            yankee = foxtra.bind(tangon)(romeon, yankee);
            offset[1] = yankee;
            golfie['children'] = offset;
            oscard = verify.bind(tangon)(option, golfie);
 525:
            report[1] = oscard;
            entity['children'] = report;
            entity = zuuluu.bind(tangon)(michal, entity);
            return entity;
        }
    };
    zuuluu['default'] = michal;
    return entity;
})();