// app/modules/collectibles/native/ShopProductPreviewActionSheet.tsx
export default (function(argFoo, argBar, argBaz, argCorge, _, argFred, argPlugh) {
    report = argBar;
    yankee = argBaz;
    zulu = argFred;
    oscar = argPlugh;
    var _closure1_slot0 = report;
    var _closure1_slot1 = yankee;
    var _closure1_slot2 = oscar;
    entity = global;
    options = entity.Object;
    golf = options.defineProperty;
    tango = {};
    entity = true;
    tango['value'] = entity;
    entity = '__esModule';
    entity = golf.bind(options)(zulu, entity, tango);
    entity = 0;
    tango = oscar[entity];
    entity = undefined;
    tango = yankee.bind(entity)(tango);
    var _closure1_slot3 = tango;
    offset = 1;
    golf = oscar[offset];
    tango = argCorge;
    tango = tango.bind(entity)(golf);
    var _closure1_slot4 = tango;
    tango = 2;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    golf = tango.Pressable;
    var _closure1_slot5 = golf;
    tango = tango.View;
    var _closure1_slot6 = tango;
    tango = 3;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.AnalyticEvents;
    var _closure1_slot7 = tango;
    tango = 4;
    golf = oscar[tango];
    golf = report.bind(entity)(golf);
    golf = golf.jsx;
    var _closure1_slot8 = golf;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.jsxs;
    var _closure1_slot9 = tango;
    tango = 5;
    tango = oscar[tango];
    options = report.bind(entity)(tango);
    golf = options.createStyles;
    tango = {};
    verify = {};
    verify['flex'] = offset;
    offset = 6;
    offset = oscar[offset];
    offset = yankee.bind(entity)(offset);
    offset = offset.colors;
    offset = offset.BG_BASE_SECONDARY;
    verify['backgroundColor'] = offset;
    tango['container'] = verify;
    verify = {'marginTop': 30, 'marginHorizontal': 16, 'marginBottom': 24};
    tango['preview'] = verify;
    verify = {'marginHorizontal': 16, 'marginBottom': 50, 'flexDirection': 'column', 'gap': 20};
    tango['body'] = verify;
    verify = {'flexDirection': 'column', 'gap': 6};
    tango['description'] = verify;
    tango = golf.bind(options)(tango);
    var _closure1_slot10 = tango;
    tango = 28;
    tango = oscar[tango];
    oscar = report.bind(entity)(tango);
    report = oscar.fileFinishedImporting;
    tango = 'modules/collectibles/native/ShopProductPreviewActionSheet.tsx';
    tango = report.bind(oscar)(tango);
    mike = function(argFoo) { // Original name: ShopProductPreviewActionSheet
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            entity = argFoo;
            control = entity.product;
            var _closure2_slot0 = control;
            mike = entity.analyticsLocations;
            tango = undefined;
            if(!(mike === tango)) { _fun00002_ip = 31; continue _fun00001 }
 27:
            mike = new Array(0);
 31:
            var _closure2_slot1 = mike;
            var _closure2_slot2 = tango;
            var _closure2_slot3 = tango;
            var _closure2_slot4 = tango;
            entity = _closure1_slot10;
            output = entity.bind(tango)();
            vacuum = _closure1_slot4;
            entity = vacuum.useRef;
            update = null;
            verify = entity.bind(vacuum)(update);
            entity = vacuum.useRef;
            romeo = entity.bind(vacuum)(update);
            yankee = _closure1_slot0;
            zulu = _closure1_slot2;
            entity = 10;
            entity = zulu[entity];
            report = yankee.bind(tango)(entity);
            entity = report.useProductPurchaseState;
            entity = entity.bind(report)(control);
            result = entity.isPurchased;
            foxtrot = _closure1_slot1;
            report = 11;
            entity = zulu[report];
            options = foxtrot.bind(tango)(entity);
            entity = new Array(1);
            golf = 0;
            whiskey = entity;
            lima = mike;
            sierra = 0;
            offset = arraySpread(whiskey, lima, sierra);
            oscar = 12;
            oscar = zulu[oscar];
            oscar = foxtrot.bind(tango)(oscar);
            oscar = oscar.COLLECTIBLES_SHOP_PROFILE_PREVIEW;
            entity[offset] = oscar;
            oscar = 1;
            offset = offset + oscar;
            entity = options.bind(tango)(entity);
            source = entity.analyticsLocations;
            options = vacuum.useState;
            entity = true;
            entity = options.bind(vacuum)(entity);
            foxtrot = _closure1_slot3;
            offset = 2;
            entity = foxtrot.bind(tango)(entity, offset);
            sizing = entity[golf];
            entity = entity[oscar];
            _closure2_slot2 = entity;
            options = 13;
            options = zulu[options];
            kilo = yankee.bind(tango)(options);
            options = kilo.usePreviewCollectibleProduct;
            options = options.bind(kilo)(control, sizing);
            kilo = {};
            kilo['product'] = control;
            kilo['analyticsLocations'] = source;
            kilo['setShouldReset'] = entity;
            options = function(argFoo) { // Original name: useHandlePreviewPress
                mike = argFoo;
                options = mike.product;
                var _closure3_slot0 = options;
                report = mike.analyticsLocations;
                var _closure3_slot1 = report;
                golf = mike.setShouldReset;
                var _closure3_slot2 = golf;
                oscar = _closure1_slot0;
                tango = _closure1_slot2;
                zulu = 7;
                tango = tango[zulu];
                zulu = undefined;
                tango = oscar.bind(zulu)(tango);
                zulu = tango.useCurrentUser;
                oscar = zulu.bind(tango)();
                var _closure3_slot3 = oscar;
                tango = _closure1_slot4;
                zulu = tango.useCallback;
                mike = new Array(4);
                mike[0] = options;
                mike[1] = golf;
                oscar = oscar.id;
                mike[2] = oscar;
                mike[3] = report;
                entity = function() {
                    zulu = _closure3_slot2;
                    entity = undefined;
                    mike = false;
                    mike = zulu.bind(entity)(mike);
                    zulu = _closure1_slot1;
                    report = _closure1_slot2;
                    mike = 8;
                    mike = report[mike];
                    zulu = zulu.bind(entity)(mike);
                    mike = {};
                    report = _closure3_slot3;
                    report = report.id;
                    mike['userId'] = report;
                    report = true;
                    mike['isPreviewingChanges'] = report;
                    tango = _closure3_slot1;
                    mike['sourceAnalyticsLocations'] = tango;
                    tango = function() { // Original name: onClose
                        zulu = _closure1_slot0;
                        mike = _closure1_slot2;
                        entity = 9;
                        mike = mike[entity];
                        entity = undefined;
                        zulu = zulu.bind(entity)(mike);
                        mike = zulu.openProductDetailActionSheet;
                        entity = {};
                        report = _closure3_slot0;
                        entity['product'] = report;
                        tango = _closure3_slot1;
                        entity['analyticsLocations'] = tango;
                        entity = mike.bind(zulu)(entity);
                        return entity;
                    };
                    mike['onClose'] = tango;
                    mike = zulu.bind(entity)(mike);
                    return entity;
                };
                entity = zulu.bind(tango)(entity, mike);
                return entity;
            };
            sequence = options.bind(tango)(kilo);
            options = 14;
            options = zulu[options];
            kilo = yankee.bind(tango)(options);
            options = kilo.isPremiumCollectiblesProduct;
            sizing = options.bind(kilo)(control);
            options = vacuum.useState;
            options = options.bind(vacuum)(oscar);
            options = foxtrot.bind(tango)(options, offset);
            config = options[golf];
            _closure2_slot3 = config;
            options = options[oscar];
            _closure2_slot4 = options;
            kilo = vacuum.useCallback;
            foxtrot = new Array(2);
            foxtrot[0] = config;
            foxtrot[1] = options;
            options = function(argFoo) {
                _fun00003: for(var _fun00004_ip = 0; ; ) switch(_fun00004_ip) {
 0:
                    entity = argFoo;
                    mike = entity.nativeEvent;
                    mike = mike.layout;
                    tango = mike.height;
                    zulu = _closure2_slot3;
                    if(!(tango !== zulu)) { _fun00004_ip = 57; continue _fun00003 }
 30:
                    zulu = _closure2_slot4;
                    entity = entity.nativeEvent;
                    entity = entity.layout;
                    mike = entity.height;
                    entity = undefined;
                    entity = zulu.bind(entity)(mike);
 57:
                    entity = undefined;
                    return entity;
                }
            };
            foxtrot = kilo.bind(vacuum)(options, foxtrot);
            context = control.summary;
            options = control.type;
            kilo = 15;
            zulu = zulu[kilo];
            zulu = yankee.bind(tango)(zulu);
            zulu = zulu.CollectiblesItemType;
            zulu = zulu.BUNDLE;
            if(!(options === zulu)) { _fun00002_ip = 535; continue _fun00001 }
 413:
            zulu = control.bundledProducts;
            if(!(update == zulu)) { _fun00002_ip = 429; continue _fun00001 }
 423:
            options = new Array(0);
            _fun00002_ip = 435; continue _fun00001;
 429:
            options = control.bundledProducts;
 435:
            zulu = _closure1_slot3;
            zulu = zulu.bind(tango)(options, offset);
            yankee = zulu[golf];
            offset = zulu[oscar];
            oscar = _closure1_slot0;
            vacuum = _closure1_slot2;
            zulu = 16;
            golf = vacuum[zulu];
            golf = oscar.bind(tango)(golf);
            options = golf.intl;
            golf = options.formatToPlainString;
            zulu = vacuum[zulu];
            zulu = oscar.bind(tango)(zulu);
            zulu = zulu.t;
            oscar = zulu.WQbNhI;
            zulu = {};
            yankee = yankee.name;
            zulu['decoName'] = yankee;
            offset = offset.name;
            zulu['pfxName'] = offset;
            context = golf.bind(options)(oscar, zulu);
 535:
            oscar = _closure1_slot4;
            golf = oscar.useEffect;
            zulu = new Array(2);
            zulu[0] = mike;
            mike = control.skuId;
            zulu[1] = mike;
            mike = function() {
                tango = _closure1_slot1;
                zulu = _closure1_slot2;
                entity = 17;
                zulu = zulu[entity];
                entity = undefined;
                report = tango.bind(entity)(zulu);
                tango = report.track;
                mike = _closure1_slot7;
                zulu = mike.OPEN_MODAL;
                mike = {};
                oscar = 'Collectibles Shop Details Modal';
                mike['type'] = oscar;
                golf = _closure2_slot1;
                mike['location_stack'] = golf;
                oscar = _closure2_slot0;
                oscar = oscar.skuId;
                mike['sku_id'] = oscar;
                mike = tango.bind(report)(zulu, mike);
                return entity;
            };
            mike = golf.bind(oscar)(mike, zulu);
            zulu = oscar.useCallback;
            mike = new Array(2);
            mike[0] = control;
            mike[1] = entity;
            entity = function() {
                _fun00005: for(var _fun00006_ip = 0; ; ) switch(_fun00006_ip) {
 0:
                    entity = _closure2_slot0;
                    tango = entity.type;
                    report = _closure1_slot0;
                    zulu = _closure1_slot2;
                    entity = 15;
                    zulu = zulu[entity];
                    entity = undefined;
                    zulu = report.bind(entity)(zulu);
                    zulu = zulu.CollectiblesItemType;
                    zulu = zulu.BUNDLE;
                    if(!(tango === zulu)) { _fun00006_ip = 64; continue _fun00005 }
 53:
                    zulu = _closure2_slot2;
                    mike = false;
                    mike = zulu.bind(entity)(mike);
 64:
                    return entity;
                }
            };
            vacuum = zulu.bind(oscar)(entity, mike);
            zulu = _closure1_slot8;
            record = _closure1_slot0;
            config = _closure1_slot2;
            entity = 18;
            entity = config[entity];
            entity = record.bind(tango)(entity);
            mike = entity.ThemeContextProvider;
            entity = {};
            report = config[report];
            report = record.bind(tango)(report);
            oscar = report.AnalyticsLocationProvider;
            report = {};
            report['value'] = source;
            golf = 19;
            golf = config[golf];
            golf = record.bind(tango)(golf);
            options = golf.BottomSheet;
            golf = {'scrollable': true, 'startExpanded': true};
            golf['ref'] = verify;
            yankee = _closure1_slot9;
            verify = 20;
            verify = config[verify];
            verify = record.bind(tango)(verify);
            offset = verify.BottomSheetScrollView;
            verify = {};
            verify['onLayout'] = foxtrot;
            foxtrot = false;
            verify['scrollsToTop'] = foxtrot;
            papa = output.container;
            foxtrot = new Array(1);
            foxtrot[0] = papa;
            verify['style'] = foxtrot;
            verify['ref'] = romeo;
            foxtrot = _closure1_slot5;
            romeo = {};
            romeo['onPress'] = sequence;
            sequence = output.preview;
            romeo['style'] = sequence;
            sequence = 21;
            sequence = config[sequence];
            target = record.bind(tango)(sequence);
            papa = target.match;
            sequence = control.type;
            status = papa.bind(target)(sequence);
            target = status.with;
            sequence = config[kilo];
            sequence = record.bind(tango)(sequence);
            sequence = sequence.CollectiblesItemType;
            papa = sequence.AVATAR_DECORATION;
            sequence = function() {
                tango = _closure1_slot8;
                mike = _closure1_slot1;
                zulu = _closure1_slot2;
                entity = 22;
                entity = zulu[entity];
                zulu = undefined;
                mike = mike.bind(zulu)(entity);
                entity = {};
                entity = tango.bind(zulu)(mike, entity);
                return entity;
            };
            status = target.bind(status)(papa, sequence);
            target = status.with;
            sequence = config[kilo];
            sequence = record.bind(tango)(sequence);
            sequence = sequence.CollectiblesItemType;
            papa = sequence.PROFILE_EFFECT;
            sequence = function() {
                tango = _closure1_slot8;
                mike = _closure1_slot1;
                zulu = _closure1_slot2;
                entity = 23;
                entity = zulu[entity];
                zulu = undefined;
                mike = mike.bind(zulu)(entity);
                entity = {};
                report = _closure2_slot0;
                entity['product'] = report;
                entity = tango.bind(zulu)(mike, entity);
                return entity;
            };
            target = target.bind(status)(papa, sequence);
            papa = target.with;
            kilo = config[kilo];
            kilo = record.bind(tango)(kilo);
            kilo = kilo.CollectiblesItemType;
            sequence = kilo.BUNDLE;
            kilo = function() {
                tango = _closure1_slot8;
                mike = _closure1_slot1;
                zulu = _closure1_slot2;
                entity = 23;
                entity = zulu[entity];
                zulu = undefined;
                mike = mike.bind(zulu)(entity);
                entity = {};
                report = _closure2_slot0;
                entity['product'] = report;
                entity = tango.bind(zulu)(mike, entity);
                return entity;
            };
            sequence = papa.bind(target)(sequence, kilo);
            kilo = sequence.otherwise;
            backup = function() {
                entity = undefined;
                return entity;
            };
            backup = kilo.bind(sequence)(backup);
            romeo['children'] = backup;
            foxtrot = zulu.bind(tango)(foxtrot, romeo);
            romeo = new Array(2);
            romeo[0] = foxtrot;
            backup = _closure1_slot6;
            foxtrot = {};
            kilo = output.body;
            foxtrot['style'] = kilo;
            kilo = {};
            output = output.description;
            kilo['style'] = output;
            output = 24;
            sequence = config[output];
            sequence = record.bind(tango)(sequence);
            papa = sequence.Text;
            sequence = {'variant': 'heading-xl/bold', 'color': 'header-primary'};
            target = control.name;
            sequence['children'] = target;
            papa = zulu.bind(tango)(papa, sequence);
            sequence = new Array(2);
            sequence[0] = papa;
            config = config[output];
            config = record.bind(tango)(config);
            record = config.Text;
            config = {'variant': 'text-md/medium', 'color': 'interactive-active'};
            config['children'] = context;
            config = zulu.bind(tango)(record, config);
            sequence[1] = config;
            kilo['children'] = sequence;
            sequence = yankee.bind(tango)(backup, kilo);
            kilo = new Array(3);
            kilo[0] = sequence;
            if(result) { _fun00002_ip = 1139; continue _fun00001 }
 1094:
            sizing = !sizing;
            if(!sizing) { _fun00002_ip = 1137; continue _fun00001 }
 1100:
            config = _closure1_slot8;
            sequence = _closure1_slot1;
            record = _closure1_slot2;
            result = 25;
            result = record[result];
            sequence = sequence.bind(tango)(result);
            result = {};
            result['product'] = control;
            sizing = config.bind(tango)(sequence, result);
 1137:
            _fun00002_ip = 1236; continue _fun00001;
 1139:
            sequence = _closure1_slot8;
            papa = _closure1_slot0;
            target = _closure1_slot2;
            output = target[output];
            output = papa.bind(tango)(output);
            result = output.Text;
            output = {'variant': 'text-md/semibold', 'color': 'interactive-active'};
            config = 16;
            record = target[config];
            record = papa.bind(tango)(record);
            context = record.intl;
            record = context.string;
            config = target[config];
            config = papa.bind(tango)(config);
            config = config.t;
            config = config./bUsx8;
            config = record.bind(context)(config);
            output['children'] = config;
            sizing = sequence.bind(tango)(result, output);
 1236:
            kilo[1] = sizing;
            result = _closure1_slot8;
            output = _closure1_slot0;
            sequence = _closure1_slot2;
            sizing = 26;
            sizing = sequence[sizing];
            sizing = output.bind(tango)(sizing);
            output = sizing.NativePaymentContextProvider;
            sizing = {};
            config = new Array(0);
            sizing['skuIDs'] = config;
            sizing['activeSubscription'] = update;
            update = _closure1_slot1;
            echo = 27;
            echo = sequence[echo];
            update = update.bind(tango)(echo);
            echo = {};
            echo['onBuy'] = vacuum;
            echo['product'] = control;
            echo['analyticsLocations'] = source;
            echo = result.bind(tango)(update, echo);
            sizing['children'] = echo;
            sizing = result.bind(tango)(output, sizing);
            kilo[2] = sizing;
            foxtrot['children'] = kilo;
            foxtrot = yankee.bind(tango)(backup, foxtrot);
            romeo[1] = foxtrot;
            verify['children'] = romeo;
            verify = yankee.bind(tango)(offset, verify);
            golf['children'] = verify;
            golf = zulu.bind(tango)(options, golf);
            report['children'] = golf;
            report = zulu.bind(tango)(oscar, report);
            entity['children'] = report;
            entity = zulu.bind(tango)(mike, entity);
            return entity;
        }
    };
    zulu['default'] = mike;
    return entity;
})();