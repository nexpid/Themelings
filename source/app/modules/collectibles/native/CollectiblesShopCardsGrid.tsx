// app/modules/collectibles/native/CollectiblesShopCardsGrid.tsx
export default (function(argFoo, argBar, argBaz, argCorge, _, argFred, argPlugh) {
    oscar = argBar;
    zulu = argFred;
    golf = argPlugh;
    var _closure1_slot0 = oscar;
    entity = argBaz;
    var _closure1_slot1 = entity;
    var _closure1_slot2 = golf;
    entity = function(argFoo) { // Original name: CollectibleShopCardsGridRow
        entity = argFoo;
        golf = entity.itemGroup;
        entity = entity.position;
        var _closure2_slot0 = entity;
        zulu = _closure1_slot1;
        offset = _closure1_slot2;
        mike = 5;
        mike = offset[mike];
        tango = undefined;
        mike = zulu.bind(tango)(mike);
        mike = mike.bind(tango)();
        zulu = global;
        oscar = zulu.Math;
        zulu = oscar.floor;
        options = mike.width;
        verify = _closure1_slot0;
        mike = 4;
        mike = offset[mike];
        mike = verify.bind(tango)(mike);
        verify = mike.COLLECTIBLES_SHOP_CARD_WIDTH;
        mike = _closure1_slot7;
        mike = verify + mike;
        mike = options / mike;
        zulu = zulu.bind(oscar)(mike);
        mike = _closure1_slot8;
        oscar = mike.bind(tango)(zulu);
        zulu = _closure1_slot6;
        mike = _closure1_slot4;
        entity = {};
        oscar = oscar.rowContainer;
        entity['style'] = oscar;
        oscar = golf.map;
        report = function(argFoo, argBar) {
            entity = argFoo;
            report = _closure1_slot6;
            zulu = _closure1_slot0;
            options = _closure1_slot2;
            mike = 6;
            mike = options[mike];
            tango = undefined;
            mike = zulu.bind(tango)(mike);
            zulu = mike.CollectiblesAnalyticsProvider;
            mike = {};
            golf = {};
            offset = _closure2_slot0;
            verify = argBar;
            verify = offset + verify;
            golf['tilePosition'] = verify;
            mike['newValue'] = golf;
            offset = _closure1_slot6;
            golf = _closure1_slot1;
            oscar = 4;
            oscar = options[oscar];
            verify = golf.bind(tango)(oscar);
            options = {};
            options['product'] = entity;
            golf = entity.items;
            oscar = 0;
            golf = golf[oscar];
            golf = golf.id;
            golf = offset.bind(tango)(verify, options, golf);
            mike['children'] = golf;
            entity = entity.items;
            entity = entity[oscar];
            entity = entity.id;
            entity = report.bind(tango)(zulu, mike, entity);
            return entity;
        };
        report = oscar.bind(golf)(report);
        entity['children'] = report;
        entity = zulu.bind(tango)(mike, entity);
        return entity;
    };
    var _closure1_slot9 = entity;
    entity = global;
    options = entity.Object;
    report = options.defineProperty;
    mike = {};
    entity = true;
    mike['value'] = entity;
    entity = '__esModule';
    entity = report.bind(options)(zulu, entity, mike);
    entity = 0;
    report = golf[entity];
    mike = argCorge;
    entity = undefined;
    mike = mike.bind(entity)(report);
    var _closure1_slot3 = mike;
    mike = 1;
    mike = golf[mike];
    mike = oscar.bind(entity)(mike);
    report = mike.View;
    var _closure1_slot4 = report;
    mike = mike.FlatList;
    var _closure1_slot5 = mike;
    mike = 2;
    mike = golf[mike];
    mike = oscar.bind(entity)(mike);
    mike = mike.jsx;
    var _closure1_slot6 = mike;
    mike = 16;
    var _closure1_slot7 = mike;
    report = 3;
    report = golf[report];
    verify = oscar.bind(entity)(report);
    options = verify.createStyles;
    report = function() {
        _fun99776: for(var _fun99776_ip = 0; ; ) switch(_fun99776_ip) {
 0:
            golf = arguments[0];
            options = undefined;
            if(!(golf === options)) { _fun99776_ip = 12; continue _fun99776 }
 9:
            golf = 2;
 12:
            entity = {};
            tango = 1;
            mike = {'flex': 1, 'alignItems': 'center'};
            entity['rootContainer'] = mike;
            mike = {};
            oscar = _closure1_slot0;
            verify = _closure1_slot2;
            report = 4;
            report = verify[report];
            report = oscar.bind(options)(report);
            report = report.COLLECTIBLES_SHOP_CARD_WIDTH;
            report = report * golf;
            oscar = _closure1_slot7;
            tango = golf - tango;
            tango = oscar * tango;
            tango = report + tango;
            mike['width'] = tango;
            tango = 'row';
            mike['flexDirection'] = tango;
            tango = _closure1_slot7;
            mike['gap'] = tango;
            zulu = _closure1_slot7;
            mike['paddingBottom'] = zulu;
            entity['rowContainer'] = mike;
            mike = {};
            zulu = '100%';
            mike['width'] = zulu;
            entity['cardGrid'] = mike;
            mike = {'width': '100%', 'alignItems': 'center'};
            entity['cardGridContentContainer'] = mike;
            return entity;
        }
    };
    report = options.bind(verify)(report);
    var _closure1_slot8 = report;
    report = 9;
    report = golf[report];
    golf = oscar.bind(entity)(report);
    oscar = golf.fileFinishedImporting;
    report = 'modules/collectibles/native/CollectiblesShopCardsGrid.tsx';
    report = oscar.bind(golf)(report);
    tango = function(argFoo) { // Original name: CollectiblesShopCardsGrid
        mike = argFoo;
        oscar = mike.products;
        var _closure2_slot0 = oscar;
        entity = mike.column;
        var _closure2_slot1 = entity;
        romeo = mike.onScroll;
        mike = _closure1_slot8;
        tango = undefined;
        backup = mike.bind(tango)();
        report = _closure1_slot3;
        zulu = report.useMemo;
        mike = new Array(2);
        mike[0] = oscar;
        mike[1] = entity;
        entity = function() {
            zulu = _closure1_slot1;
            mike = _closure1_slot2;
            entity = 7;
            mike = mike[entity];
            entity = undefined;
            tango = zulu.bind(entity)(mike);
            zulu = tango.chunk;
            mike = _closure2_slot0;
            entity = _closure2_slot1;
            entity = zulu.bind(tango)(mike, entity);
            return entity;
        };
        foxtrot = zulu.bind(report)(entity, mike);
        zulu = _closure1_slot6;
        mike = _closure1_slot4;
        entity = {};
        oscar = backup.rootContainer;
        report = new Array(1);
        report[0] = oscar;
        entity['style'] = report;
        golf = _closure1_slot6;
        oscar = _closure1_slot0;
        verify = _closure1_slot2;
        report = 8;
        report = verify[report];
        report = oscar.bind(tango)(report);
        oscar = report.NativePaymentContextProvider;
        report = {};
        verify = new Array(0);
        report['skuIDs'] = verify;
        verify = null;
        report['activeSubscription'] = verify;
        offset = _closure1_slot6;
        verify = _closure1_slot5;
        options = {};
        kilo = backup.cardGrid;
        options['style'] = kilo;
        backup = backup.cardGridContentContainer;
        options['contentContainerStyle'] = backup;
        options['data'] = foxtrot;
        foxtrot = function(argFoo) { // Original name: renderItem
            mike = argFoo;
            entity = mike.item;
            report = mike.index;
            tango = _closure1_slot6;
            zulu = _closure1_slot9;
            mike = {};
            mike['itemGroup'] = entity;
            entity = _closure2_slot1;
            entity = report * entity;
            mike['position'] = entity;
            entity = undefined;
            entity = tango.bind(entity)(zulu, mike);
            return entity;
        };
        options['renderItem'] = foxtrot;
        foxtrot = false;
        options['showsVerticalScrollIndicator'] = foxtrot;
        options['onScroll'] = romeo;
        yankee = function() { // Original name: ListHeaderComponent
            tango = _closure1_slot6;
            zulu = _closure1_slot4;
            mike = {};
            entity = {};
            report = 16;
            entity['height'] = report;
            mike['style'] = entity;
            entity = undefined;
            entity = tango.bind(entity)(zulu, mike);
            return entity;
        };
        options['ListHeaderComponent'] = yankee;
        options = offset.bind(tango)(verify, options);
        report['children'] = options;
        report = golf.bind(tango)(oscar, report);
        entity['children'] = report;
        entity = zulu.bind(tango)(mike, entity);
        return entity;
    };
    zulu['default'] = tango;
    zulu['SHOP_CARD_GAP'] = mike;
    return entity;
})();