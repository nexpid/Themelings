// app/modules/collectibles/native/CollectiblesShopCardsGrid.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    oscard = argBar;
    zuuluu = argFre;
    golfie = argPlu;
    var _closure1_slot0 = oscard;
    entity = argBaz;
    var _closure1_slot1 = entity;
    var _closure1_slot2 = golfie;
    entity = function(argFoo) { // Original name: CollectibleShopCardsGridRow
        entity = argFoo;
        golfie = entity.itemGroup;
        entity = entity.position;
        var _closure2_slot0 = entity;
        zuuluu = _closure1_slot1;
        offset = _closure1_slot2;
        michal = 5;
        michal = offset[michal];
        tangon = undefined;
        michal = zuuluu.bind(tangon)(michal);
        michal = michal.bind(tangon)();
        zuuluu = global;
        oscard = zuuluu.Math;
        zuuluu = oscard.floor;
        option = michal.width;
        verify = _closure1_slot0;
        michal = 4;
        michal = offset[michal];
        michal = verify.bind(tangon)(michal);
        verify = michal.COLLECTIBLES_SHOP_CARD_WIDTH;
        michal = _closure1_slot7;
        michal = verify + michal;
        michal = option / michal;
        zuuluu = zuuluu.bind(oscard)(michal);
        michal = _closure1_slot8;
        oscard = michal.bind(tangon)(zuuluu);
        zuuluu = _closure1_slot6;
        michal = _closure1_slot4;
        entity = {};
        oscard = oscard.rowContainer;
        entity['style'] = oscard;
        oscard = golfie.map;
        report = function(argFoo, argBar) {
            entity = argFoo;
            report = _closure1_slot6;
            zuuluu = _closure1_slot0;
            option = _closure1_slot2;
            michal = 6;
            michal = option[michal];
            tangon = undefined;
            michal = zuuluu.bind(tangon)(michal);
            zuuluu = michal.CollectiblesAnalyticsProvider;
            michal = {};
            golfie = {};
            offset = _closure2_slot0;
            verify = argBar;
            verify = offset + verify;
            golfie['tilePosition'] = verify;
            michal['newValue'] = golfie;
            offset = _closure1_slot6;
            golfie = _closure1_slot1;
            oscard = 4;
            oscard = option[oscard];
            verify = golfie.bind(tangon)(oscard);
            option = {};
            option['product'] = entity;
            golfie = entity.items;
            oscard = 0;
            golfie = golfie[oscard];
            golfie = golfie.id;
            golfie = offset.bind(tangon)(verify, option, golfie);
            michal['children'] = golfie;
            entity = entity.items;
            entity = entity[oscard];
            entity = entity.id;
            entity = report.bind(tangon)(zuuluu, michal, entity);
            return entity;
        };
        report = oscard.bind(golfie)(report);
        entity['children'] = report;
        entity = zuuluu.bind(tangon)(michal, entity);
        return entity;
    };
    var _closure1_slot9 = entity;
    entity = global;
    option = entity.Object;
    report = option.defineProperty;
    michal = {};
    entity = true;
    michal['value'] = entity;
    entity = '__esModule';
    entity = report.bind(option)(zuuluu, entity, michal);
    entity = 0;
    report = golfie[entity];
    michal = argCor;
    entity = undefined;
    michal = michal.bind(entity)(report);
    var _closure1_slot3 = michal;
    michal = 1;
    michal = golfie[michal];
    michal = oscard.bind(entity)(michal);
    report = michal.View;
    var _closure1_slot4 = report;
    michal = michal.FlatList;
    var _closure1_slot5 = michal;
    michal = 2;
    michal = golfie[michal];
    michal = oscard.bind(entity)(michal);
    michal = michal.jsx;
    var _closure1_slot6 = michal;
    michal = 16;
    var _closure1_slot7 = michal;
    report = 3;
    report = golfie[report];
    verify = oscard.bind(entity)(report);
    option = verify.createStyles;
    report = function() {
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            golfie = arguments[0];
            option = undefined;
            if(!(golfie === option)) { _fun00002_ip = 12; continue _fun00001 }
 9:
            golfie = 2;
 12:
            entity = {};
            tangon = 1;
            michal = {'flex': 1, 'alignItems': 'center'};
            entity['rootContainer'] = michal;
            michal = {};
            oscard = _closure1_slot0;
            verify = _closure1_slot2;
            report = 4;
            report = verify[report];
            report = oscard.bind(option)(report);
            report = report.COLLECTIBLES_SHOP_CARD_WIDTH;
            report = report * golfie;
            oscard = _closure1_slot7;
            tangon = golfie - tangon;
            tangon = oscard * tangon;
            tangon = report + tangon;
            michal['width'] = tangon;
            tangon = 'row';
            michal['flexDirection'] = tangon;
            tangon = _closure1_slot7;
            michal['gap'] = tangon;
            zuuluu = _closure1_slot7;
            michal['paddingBottom'] = zuuluu;
            entity['rowContainer'] = michal;
            michal = {};
            zuuluu = '100%';
            michal['width'] = zuuluu;
            entity['cardGrid'] = michal;
            michal = {'width': '100%', 'alignItems': 'center'};
            entity['cardGridContentContainer'] = michal;
            return entity;
        }
    };
    report = option.bind(verify)(report);
    var _closure1_slot8 = report;
    report = 9;
    report = golfie[report];
    golfie = oscard.bind(entity)(report);
    oscard = golfie.fileFinishedImporting;
    report = 'modules/collectibles/native/CollectiblesShopCardsGrid.tsx';
    report = oscard.bind(golfie)(report);
    tangon = function(argFoo) { // Original name: CollectiblesShopCardsGrid
        michal = argFoo;
        oscard = michal.products;
        var _closure2_slot0 = oscard;
        entity = michal.column;
        var _closure2_slot1 = entity;
        romeon = michal.onScroll;
        michal = _closure1_slot8;
        tangon = undefined;
        backup = michal.bind(tangon)();
        report = _closure1_slot3;
        zuuluu = report.useMemo;
        michal = new Array(2);
        michal[0] = oscard;
        michal[1] = entity;
        entity = function() {
            zuuluu = _closure1_slot1;
            michal = _closure1_slot2;
            entity = 7;
            michal = michal[entity];
            entity = undefined;
            tangon = zuuluu.bind(entity)(michal);
            zuuluu = tangon.chunk;
            michal = _closure2_slot0;
            entity = _closure2_slot1;
            entity = zuuluu.bind(tangon)(michal, entity);
            return entity;
        };
        foxtra = zuuluu.bind(report)(entity, michal);
        zuuluu = _closure1_slot6;
        michal = _closure1_slot4;
        entity = {};
        oscard = backup.rootContainer;
        report = new Array(1);
        report[0] = oscard;
        entity['style'] = report;
        golfie = _closure1_slot6;
        oscard = _closure1_slot0;
        verify = _closure1_slot2;
        report = 8;
        report = verify[report];
        report = oscard.bind(tangon)(report);
        oscard = report.NativePaymentContextProvider;
        report = {};
        verify = new Array(0);
        report['skuIDs'] = verify;
        verify = null;
        report['activeSubscription'] = verify;
        offset = _closure1_slot6;
        verify = _closure1_slot5;
        option = {};
        kiloes = backup.cardGrid;
        option['style'] = kiloes;
        backup = backup.cardGridContentContainer;
        option['contentContainerStyle'] = backup;
        option['data'] = foxtra;
        foxtra = function(argFoo) { // Original name: renderItem
            michal = argFoo;
            entity = michal.item;
            report = michal.index;
            tangon = _closure1_slot6;
            zuuluu = _closure1_slot9;
            michal = {};
            michal['itemGroup'] = entity;
            entity = _closure2_slot1;
            entity = report * entity;
            michal['position'] = entity;
            entity = undefined;
            entity = tangon.bind(entity)(zuuluu, michal);
            return entity;
        };
        option['renderItem'] = foxtra;
        foxtra = false;
        option['showsVerticalScrollIndicator'] = foxtra;
        option['onScroll'] = romeon;
        yankee = function() { // Original name: ListHeaderComponent
            tangon = _closure1_slot6;
            zuuluu = _closure1_slot4;
            michal = {};
            entity = {};
            report = 16;
            entity['height'] = report;
            michal['style'] = entity;
            entity = undefined;
            entity = tangon.bind(entity)(zuuluu, michal);
            return entity;
        };
        option['ListHeaderComponent'] = yankee;
        option = offset.bind(tangon)(verify, option);
        report['children'] = option;
        report = golfie.bind(tangon)(oscard, report);
        entity['children'] = report;
        entity = zuuluu.bind(tangon)(michal, entity);
        return entity;
    };
    zuuluu['default'] = tangon;
    zuuluu['SHOP_CARD_GAP'] = michal;
    return entity;
})();