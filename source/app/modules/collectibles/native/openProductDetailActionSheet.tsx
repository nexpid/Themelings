// app/modules/collectibles/native/openProductDetailActionSheet.tsx
export default (function(argFoo, argBar, argBaz, _, __, argFred, argPlugh) {
    report = argBar;
    golf = argBaz;
    zulu = argFred;
    oscar = argPlugh;
    var _closure1_slot0 = report;
    var _closure1_slot1 = golf;
    var _closure1_slot2 = oscar;
    entity = global;
    verify = entity.Object;
    options = verify.defineProperty;
    tango = {};
    entity = true;
    tango['value'] = entity;
    entity = '__esModule';
    entity = options.bind(verify)(zulu, entity, tango);
    entity = 0;
    tango = oscar[entity];
    entity = undefined;
    tango = golf.bind(entity)(tango);
    var _closure1_slot3 = tango;
    tango = 5;
    tango = oscar[tango];
    oscar = report.bind(entity)(tango);
    report = oscar.fileFinishedImporting;
    tango = 'modules/collectibles/native/openProductDetailActionSheet.tsx';
    tango = report.bind(oscar)(tango);
    mike = function(argFoo) { // Original name: openProductDetailActionSheet
        entity = argFoo;
        golf = entity.product;
        mike = entity.analyticsLocations;
        oscar = _closure1_slot3;
        zulu = golf.items;
        entity = undefined;
        report = 1;
        oscar = oscar.bind(entity)(zulu, report);
        zulu = 0;
        verify = oscar[zulu];
        options = _closure1_slot0;
        zulu = _closure1_slot2;
        report = zulu[report];
        oscar = options.bind(entity)(report);
        report = oscar.productDetailsOpened;
        report = report.bind(oscar)(verify);
        report = _closure1_slot1;
        tango = 2;
        tango = zulu[tango];
        oscar = report.bind(entity)(tango);
        report = oscar.openLazy;
        tango = 4;
        tango = zulu[tango];
        options = options.bind(entity)(tango);
        tango = 3;
        tango = zulu[tango];
        zulu = zulu.paths;
        tango = options.bind(entity)(tango, zulu);
        zulu = {};
        zulu['product'] = golf;
        zulu['analyticsLocations'] = mike;
        mike = 'Shop Product Preview';
        mike = report.bind(oscar)(tango, mike, zulu);
        return entity;
    };
    zulu['openProductDetailActionSheet'] = mike;
    return entity;
})();