// app/modules/collectibles/hooks/useFetchCollectiblesProductCategory.tsx
export default (function(argFoo, argBar, argBaz, _, __, argFre, argPlu) {
    report = argBar;
    golfie = argBaz;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    var _closure1_slot1 = golfie;
    var _closure1_slot2 = oscard;
    entity = global;
    verify = entity.Object;
    option = verify.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = option.bind(verify)(zuuluu, entity, tangon);
    entity = 0;
    tangon = oscard[entity];
    entity = undefined;
    tangon = golfie.bind(entity)(tangon);
    var _closure1_slot3 = tangon;
    tangon = 1;
    tangon = oscard[tangon];
    tangon = golfie.bind(entity)(tangon);
    var _closure1_slot4 = tangon;
    tangon = 4;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/collectibles/hooks/useFetchCollectiblesProductCategory.tsx';
    tangon = report.bind(oscard)(tangon);
    michal = function(argFoo) { // Original name: useFetchCollectiblesProductCategory
        entity = argFoo;
        var _closure2_slot0 = entity;
        oscard = _closure1_slot1;
        golfie = _closure1_slot2;
        tangon = 2;
        report = golfie[tangon];
        zuuluu = undefined;
        report = oscard.bind(zuuluu)(report);
        report = report.bind(zuuluu)();
        oscard = _closure1_slot0;
        report = 3;
        report = golfie[report];
        golfie = oscard.bind(zuuluu)(report);
        oscard = golfie.useStateFromStoresArray;
        option = _closure1_slot4;
        report = new Array(1);
        report[0] = option;
        michal = function() {
            tangon = _closure1_slot4;
            michal = tangon.isFetchingCategories;
            entity = new Array(2);
            entity[0] = michal;
            zuuluu = tangon.getCategoryForProduct;
            michal = _closure2_slot0;
            michal = zuuluu.bind(tangon)(michal);
            entity[1] = michal;
            return entity;
        };
        michal = oscard.bind(golfie)(report, michal);
        entity = _closure1_slot3;
        zuuluu = entity.bind(zuuluu)(michal, tangon);
        entity = {};
        michal = 0;
        michal = zuuluu[michal];
        entity['isFetching'] = michal;
        michal = 1;
        michal = zuuluu[michal];
        entity['category'] = michal;
        return entity;
    };
    zuuluu['useFetchCollectiblesProductCategory'] = michal;
    return entity;
})();