// app/modules/billing/native/BlockedPaymentsCountryDisplay.tsx
export default (function(_, argBar, argBaz, argCor, __, argFre, argPlu) {
    report = argBar;
    yankee = argBaz;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    var _closure1_slot1 = yankee;
    var _closure1_slot2 = oscard;
    entity = global;
    option = entity.Object;
    golfie = option.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(option)(zuuluu, entity, tangon);
    entity = 0;
    golfie = oscard[entity];
    tangon = argCor;
    entity = undefined;
    tangon = tangon.bind(entity)(golfie);
    tangon = 1;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    golfie = tangon.View;
    var _closure1_slot3 = golfie;
    tangon = tangon.Image;
    var _closure1_slot4 = tangon;
    tangon = 2;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.HelpdeskArticles;
    var _closure1_slot5 = tangon;
    tangon = 3;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    golfie = tangon.jsx;
    var _closure1_slot6 = golfie;
    tangon = tangon.jsxs;
    var _closure1_slot7 = tangon;
    tangon = 4;
    tangon = oscard[tangon];
    option = report.bind(entity)(tangon);
    golfie = option.createStyles;
    tangon = {};
    verify = {};
    offset = 'center';
    verify['alignItems'] = offset;
    tangon['container'] = verify;
    verify = {};
    offset = 42;
    verify['marginLeft'] = offset;
    offset = 5;
    romeon = oscard[offset];
    romeon = yankee.bind(entity)(romeon);
    romeon = romeon.colors;
    romeon = romeon.BACKGROUND_MODIFIER_ACCENT;
    verify['backgroundColor'] = romeon;
    tangon['divider'] = verify;
    verify = {'fontSize': 20, 'fontWeight': '700', 'color': null, 'marginBottom': 16};
    offset = oscard[offset];
    offset = yankee.bind(entity)(offset);
    offset = offset.colors;
    offset = offset.HEADER_SECONDARY;
    verify['color'] = offset;
    tangon['header'] = verify;
    verify = {'fontSize': 16, 'marginBottom': 16};
    tangon['information'] = verify;
    verify = {};
    offset = 38;
    verify['marginTop'] = offset;
    tangon['image'] = verify;
    tangon = golfie.bind(option)(tangon);
    var _closure1_slot8 = tangon;
    tangon = 13;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/billing/native/BlockedPaymentsCountryDisplay.tsx';
    tangon = report.bind(oscard)(tangon);
    michal = function() { // Original name: BlockedPaymentsCountryDisplay
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            entity = _closure1_slot8;
            tangon = undefined;
            verify = entity.bind(tangon)();
            echoed = _closure1_slot1;
            foxtra = _closure1_slot2;
            entity = 6;
            entity = foxtra[entity];
            entity = echoed.bind(tangon)(entity);
            romeon = entity.bind(tangon)();
            zuuluu = _closure1_slot7;
            michal = _closure1_slot3;
            entity = {};
            report = verify.container;
            entity['style'] = report;
            option = _closure1_slot6;
            yankee = _closure1_slot0;
            oscard = 7;
            report = foxtra[oscard];
            report = yankee.bind(tangon)(report);
            golfie = report.LegacyText;
            report = {};
            backup = verify.header;
            report['style'] = backup;
            backup = 8;
            kiloes = foxtra[backup];
            kiloes = yankee.bind(tangon)(kiloes);
            output = kiloes.intl;
            sizing = output.string;
            kiloes = foxtra[backup];
            kiloes = yankee.bind(tangon)(kiloes);
            kiloes = kiloes.t;
            kiloes = kiloes.vwMEHR;
            kiloes = sizing.bind(output)(kiloes);
            report['children'] = kiloes;
            golfie = option.bind(tangon)(golfie, report);
            report = new Array(3);
            report[0] = golfie;
            oscard = foxtra[oscard];
            oscard = yankee.bind(tangon)(oscard);
            golfie = oscard.LegacyText;
            oscard = {};
            kiloes = foxtra[backup];
            kiloes = yankee.bind(tangon)(kiloes);
            output = kiloes.intl;
            sizing = output.format;
            backup = foxtra[backup];
            backup = yankee.bind(tangon)(backup);
            backup = backup.t;
            kiloes = backup.IHxEJS;
            backup = {};
            result = 9;
            result = foxtra[result];
            update = echoed.bind(tangon)(result);
            echoed = update.getArticleURL;
            result = _closure1_slot5;
            result = result.BLOCKED_PAYMENTS;
            result = echoed.bind(update)(result);
            backup['helpdeskArticle'] = result;
            backup = sizing.bind(output)(kiloes, backup);
            oscard['children'] = backup;
            oscard = option.bind(tangon)(golfie, oscard);
            report[1] = oscard;
            golfie = _closure1_slot4;
            oscard = {};
            verify = verify.image;
            oscard['style'] = verify;
            verify = 10;
            verify = foxtra[verify];
            yankee = yankee.bind(tangon)(verify);
            verify = yankee.isThemeDark;
            verify = verify.bind(yankee)(romeon);
            yankee = _closure1_slot1;
            romeon = _closure1_slot2;
            if(verify) { _fun00002_ip = 342; continue _fun00001 }
 328:
            verify = 12;
            verify = romeon[verify];
            verify = yankee.bind(tangon)(verify);
            _fun00002_ip = 354; continue _fun00001;
 342:
            offset = 11;
            offset = romeon[offset];
            verify = yankee.bind(tangon)(offset);
 354:
            oscard['source'] = verify;
            oscard = option.bind(tangon)(golfie, oscard);
            report[2] = oscard;
            entity['children'] = report;
            entity = zuuluu.bind(tangon)(michal, entity);
            return entity;
        }
    };
    zuuluu['default'] = michal;
    return entity;
})();