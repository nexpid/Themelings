// app/modules/ato_alerts/native/components/LikelyAtoMoreTipsModalActionItems.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    report = argBar;
    golfie = argBaz;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    var _closure1_slot1 = golfie;
    var _closure1_slot2 = oscard;
    entity = global;
    verify = entity.Object;
    option = verify.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = option.bind(verify)(zuuluu, entity, tangon);
    entity = 0;
    option = oscard[entity];
    tangon = argCor;
    entity = undefined;
    tangon = tangon.bind(entity)(option);
    var _closure1_slot3 = tangon;
    tangon = 1;
    tangon = oscard[tangon];
    tangon = golfie.bind(entity)(tangon);
    var _closure1_slot4 = tangon;
    tangon = 2;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.jsx;
    var _closure1_slot5 = tangon;
    tangon = 9;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/ato_alerts/native/components/LikelyAtoMoreTipsModalActionItems.tsx';
    tangon = report.bind(oscard)(tangon);
    michal = function(argFoo) { // Original name: LikelyAtoMoreTipsModalActionItems
        entity = argFoo;
        zuuluu = entity.senderId;
        var _closure2_slot0 = zuuluu;
        golfie = entity.handleMutePressed;
        option = _closure1_slot0;
        verify = _closure1_slot2;
        tangon = 3;
        report = verify[tangon];
        tangon = undefined;
        yankee = option.bind(tangon)(report);
        offset = yankee.useStateFromStores;
        report = _closure1_slot4;
        oscard = new Array(1);
        oscard[0] = report;
        report = new Array(1);
        report[0] = zuuluu;
        zuuluu = function() {
            zuuluu = _closure1_slot4;
            michal = zuuluu.getUser;
            entity = _closure2_slot0;
            entity = michal.bind(zuuluu)(entity);
            return entity;
        };
        offset = offset.bind(yankee)(oscard, zuuluu, report);
        var _closure2_slot1 = offset;
        oscard = _closure1_slot3;
        report = oscard.useMemo;
        zuuluu = new Array(1);
        zuuluu[0] = offset;
        michal = function() {
            zuuluu = _closure1_slot1;
            michal = _closure1_slot2;
            entity = 4;
            michal = michal[entity];
            entity = undefined;
            zuuluu = zuuluu.bind(entity)(michal);
            michal = zuuluu.getName;
            entity = _closure2_slot1;
            entity = michal.bind(zuuluu)(entity);
            return entity;
        };
        kiloes = report.bind(oscard)(michal, zuuluu);
        zuuluu = _closure1_slot5;
        entity = 5;
        entity = verify[entity];
        entity = option.bind(tangon)(entity);
        michal = entity.TableRowGroup;
        entity = {};
        report = 6;
        report = verify[report];
        report = option.bind(tangon)(report);
        oscard = report.TableRow;
        report = {};
        offset = 7;
        yankee = verify[offset];
        yankee = option.bind(tangon)(yankee);
        backup = yankee.intl;
        foxtra = backup.formatToPlainString;
        yankee = verify[offset];
        yankee = option.bind(tangon)(yankee);
        yankee = yankee.t;
        romeon = yankee.F/ID+/;
        yankee = {};
        yankee['username'] = kiloes;
        yankee = foxtra.bind(backup)(romeon, yankee);
        report['label'] = yankee;
        yankee = verify[offset];
        yankee = option.bind(tangon)(yankee);
        romeon = yankee.intl;
        yankee = romeon.string;
        offset = verify[offset];
        offset = option.bind(tangon)(offset);
        offset = offset.t;
        offset = offset.w2ve0t;
        offset = yankee.bind(romeon)(offset);
        report['subLabel'] = offset;
        report['onPress'] = golfie;
        golfie = 8;
        golfie = verify[golfie];
        golfie = option.bind(tangon)(golfie);
        option = golfie.BellSlashIcon;
        golfie = {};
        golfie = zuuluu.bind(tangon)(option, golfie);
        report['icon'] = golfie;
        report = zuuluu.bind(tangon)(oscard, report);
        entity['children'] = report;
        entity = zuuluu.bind(tangon)(michal, entity);
        return entity;
    };
    zuuluu['default'] = michal;
    return entity;
})();