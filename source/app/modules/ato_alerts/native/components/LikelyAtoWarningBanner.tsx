// app/modules/ato_alerts/native/components/LikelyAtoWarningBanner.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    report = argBar;
    romeon = argBaz;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    var _closure1_slot1 = romeon;
    var _closure1_slot2 = oscard;
    michal = function(argFoo) { // Original name: LikelyAtoWarningBanner
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            entity = argFoo;
            yankee = entity.channelId;
            var _closure2_slot0 = yankee;
            offset = entity.warningId;
            var _closure2_slot1 = offset;
            verify = entity.senderId;
            var _closure2_slot2 = verify;
            entity = _closure1_slot14;
            report = undefined;
            entity = entity.bind(report)();
            var _closure2_slot3 = entity;
            michal = _closure1_slot0;
            zuuluu = _closure1_slot2;
            entity = 9;
            entity = zuuluu[entity];
            zuuluu = michal.bind(report)(entity);
            michal = zuuluu.useIsEligibleForLikelyAtoWarning;
            entity = {};
            tangon = _closure1_slot9;
            entity['location'] = tangon;
            michal = michal.bind(zuuluu)(entity);
            var _closure2_slot4 = michal;
            oscard = _closure1_slot3;
            tangon = oscard.useEffect;
            zuuluu = new Array(4);
            zuuluu[0] = yankee;
            zuuluu[1] = offset;
            zuuluu[2] = verify;
            zuuluu[3] = michal;
            entity = function() {
                _fun00003: for(var _fun00004_ip = 0; ; ) switch(_fun00004_ip) {
 0:
                    entity = _closure2_slot4;
                    if(!entity) { _fun00004_ip = 100; continue _fun00003 }
 10:
                    zuuluu = _closure1_slot0;
                    michal = _closure1_slot2;
                    entity = 10;
                    michal = michal[entity];
                    entity = undefined;
                    tangon = zuuluu.bind(entity)(michal);
                    zuuluu = tangon.trackViewedEvent;
                    entity = _closure1_slot8;
                    michal = entity.SAFETY_WARNING_VIEWED;
                    entity = {};
                    golfie = _closure2_slot0;
                    entity['channelId'] = golfie;
                    golfie = _closure2_slot1;
                    entity['warningId'] = golfie;
                    oscard = _closure2_slot2;
                    entity['senderId'] = oscard;
                    report = _closure1_slot4;
                    report = report.LIKELY_ATO;
                    entity['warningType'] = report;
                    entity = zuuluu.bind(tangon)(michal, entity);
 100:
                    entity = undefined;
                    return entity;
                }
            };
            entity = tangon.bind(oscard)(entity, zuuluu);
            oscard = _closure1_slot3;
            tangon = oscard.useCallback;
            zuuluu = new Array(2);
            zuuluu[0] = yankee;
            zuuluu[1] = offset;
            entity = function() {
                tangon = _closure1_slot0;
                report = _closure1_slot2;
                entity = 11;
                zuuluu = report[entity];
                entity = undefined;
                golfie = tangon.bind(entity)(zuuluu);
                oscard = golfie.dismissChannelSafetyWarnings;
                tangon = _closure2_slot0;
                option = _closure2_slot1;
                zuuluu = new Array(1);
                zuuluu[0] = option;
                zuuluu = oscard.bind(golfie)(tangon, zuuluu);
                tangon = _closure1_slot1;
                zuuluu = 12;
                zuuluu = report[zuuluu];
                tangon = tangon.bind(entity)(zuuluu);
                zuuluu = tangon.popWithKey;
                michal = _closure1_slot6;
                michal = zuuluu.bind(tangon)(michal);
                return entity;
            };
            oscard = tangon.bind(oscard)(entity, zuuluu);
            var _closure2_slot5 = oscard;
            romeon = _closure1_slot3;
            tangon = romeon.useCallback;
            zuuluu = new Array(4);
            zuuluu[0] = yankee;
            zuuluu[1] = verify;
            zuuluu[2] = offset;
            zuuluu[3] = oscard;
            entity = function(argFoo) {
                tangon = _closure1_slot0;
                report = _closure1_slot2;
                entity = 13;
                michal = report[entity];
                entity = undefined;
                verify = tangon.bind(entity)(michal);
                golfie = verify.handleMuteSettingPress;
                zuuluu = {};
                option = _closure2_slot0;
                zuuluu['channelId'] = option;
                offset = null;
                zuuluu['guildId'] = offset;
                offset = _closure1_slot10;
                offset = offset.ALWAYS;
                zuuluu['muteDurationSeconds'] = offset;
                zuuluu = golfie.bind(verify)(zuuluu);
                golfie = _closure1_slot1;
                zuuluu = 14;
                zuuluu = report[zuuluu];
                verify = golfie.bind(entity)(zuuluu);
                zuuluu = verify.showMuteSuccessToast;
                golfie = _closure2_slot2;
                zuuluu = zuuluu.bind(verify)(golfie, option);
                zuuluu = 10;
                zuuluu = report[zuuluu];
                report = tangon.bind(entity)(zuuluu);
                tangon = report.trackCtaEvent;
                zuuluu = {};
                zuuluu['channelId'] = option;
                option = _closure2_slot1;
                zuuluu['warningId'] = option;
                zuuluu['senderId'] = golfie;
                oscard = _closure1_slot4;
                oscard = oscard.LIKELY_ATO;
                zuuluu['warningType'] = oscard;
                oscard = argFoo;
                zuuluu['cta'] = oscard;
                zuuluu = tangon.bind(report)(zuuluu);
                michal = _closure2_slot5;
                michal = michal.bind(entity)();
                return entity;
            };
            entity = tangon.bind(romeon)(entity, zuuluu);
            var _closure2_slot6 = entity;
            entity = function() { // Original name: handleLearnMore
                option = _closure1_slot0;
                report = _closure1_slot2;
                golfie = 10;
                zuuluu = report[golfie];
                entity = undefined;
                oscard = option.bind(entity)(zuuluu);
                tangon = oscard.trackCtaEvent;
                zuuluu = {};
                offset = _closure2_slot0;
                zuuluu['channelId'] = offset;
                offset = _closure2_slot1;
                zuuluu['warningId'] = offset;
                verify = _closure2_slot2;
                zuuluu['senderId'] = verify;
                verify = _closure1_slot4;
                verify = verify.LIKELY_ATO;
                zuuluu['warningType'] = verify;
                golfie = report[golfie];
                golfie = option.bind(entity)(golfie);
                golfie = golfie.CtaEventTypes;
                golfie = golfie.USER_MODAL_LEARN_MORE;
                zuuluu['cta'] = golfie;
                zuuluu = tangon.bind(oscard)(zuuluu);
                tangon = _closure1_slot1;
                zuuluu = 15;
                zuuluu = report[zuuluu];
                tangon = tangon.bind(entity)(zuuluu);
                zuuluu = tangon.openURL;
                michal = _closure1_slot7;
                michal = zuuluu.bind(tangon)(michal);
                return entity;
            };
            var _closure2_slot7 = entity;
            entity = null;
            if(!michal) { _fun00002_ip = 575; continue _fun00001 }
 241:
            tangon = _closure1_slot11;
            zuuluu = _closure1_slot1;
            foxtra = _closure1_slot2;
            michal = 16;
            michal = foxtra[michal];
            zuuluu = zuuluu.bind(report)(michal);
            michal = {};
            michal['channelId'] = yankee;
            michal['warningId'] = offset;
            michal['senderId'] = verify;
            verify = _closure1_slot4;
            verify = verify.LIKELY_ATO;
            michal['warningType'] = verify;
            romeon = _closure1_slot0;
            verify = 17;
            golfie = foxtra[verify];
            golfie = romeon.bind(report)(golfie);
            yankee = golfie.intl;
            offset = yankee.string;
            golfie = foxtra[verify];
            golfie = romeon.bind(report)(golfie);
            golfie = golfie.t;
            golfie = golfie.R8UsiI;
            golfie = offset.bind(yankee)(golfie);
            michal['header'] = golfie;
            golfie = foxtra[verify];
            golfie = romeon.bind(report)(golfie);
            yankee = golfie.intl;
            offset = yankee.string;
            golfie = foxtra[verify];
            golfie = romeon.bind(report)(golfie);
            golfie = golfie.t;
            golfie = golfie.lI8nQk;
            golfie = offset.bind(yankee)(golfie);
            michal['description'] = golfie;
            michal['onDismiss'] = oscard;
            golfie = {};
            oscard = foxtra[verify];
            oscard = romeon.bind(report)(oscard);
            yankee = oscard.intl;
            offset = yankee.string;
            oscard = foxtra[verify];
            oscard = romeon.bind(report)(oscard);
            oscard = oscard.t;
            oscard = oscard.tC1pvL;
            oscard = offset.bind(yankee)(oscard);
            golfie['text'] = oscard;
            oscard = 'primary';
            golfie['variant'] = oscard;
            oscard = function() { // Original name: onpress
                foxtra = _closure1_slot1;
                golfie = _closure1_slot2;
                entity = 12;
                michal = golfie[entity];
                entity = undefined;
                romeon = foxtra.bind(entity)(michal);
                report = romeon.pushLazy;
                oscard = _closure1_slot0;
                michal = 19;
                michal = golfie[michal];
                tangon = oscard.bind(entity)(michal);
                michal = 18;
                zuuluu = golfie[michal];
                michal = golfie.paths;
                tangon = tangon.bind(entity)(zuuluu, michal);
                zuuluu = {};
                michal = _closure1_slot6;
                zuuluu['modalKey'] = michal;
                michal = _closure2_slot3;
                michal = michal.moreTipsHeader;
                zuuluu['headerStyle'] = michal;
                yankee = _closure2_slot0;
                zuuluu['channelId'] = yankee;
                offset = _closure2_slot1;
                zuuluu['warningId'] = offset;
                verify = _closure2_slot2;
                zuuluu['senderId'] = verify;
                kiloes = 17;
                michal = golfie[kiloes];
                michal = oscard.bind(entity)(michal);
                output = michal.intl;
                backup = output.string;
                michal = golfie[kiloes];
                michal = oscard.bind(entity)(michal);
                michal = michal.t;
                michal = michal./uid3t;
                michal = backup.bind(output)(michal);
                zuuluu['description'] = michal;
                michal = _closure1_slot5;
                output = michal.bind(entity)();
                backup = output.map;
                michal = function(argFoo, argBar) {
                    offset = argFoo;
                    verify = argBar;
                    tangon = _closure1_slot13;
                    zuuluu = _closure1_slot12;
                    michal = {};
                    foxtra = _closure1_slot11;
                    golfie = _closure1_slot0;
                    yankee = _closure1_slot2;
                    oscard = 20;
                    report = yankee[oscard];
                    entity = undefined;
                    report = golfie.bind(entity)(report);
                    romeon = report.Text;
                    report = {'variant': 'text-md/medium', 'color': 'header-primary'};
                    backup = offset.title;
                    report['children'] = backup;
                    romeon = foxtra.bind(entity)(romeon, report, verify);
                    report = new Array(2);
                    report[0] = romeon;
                    option = _closure1_slot11;
                    oscard = yankee[oscard];
                    oscard = golfie.bind(entity)(oscard);
                    golfie = oscard.Text;
                    oscard = {'variant': 'text-xs/medium', 'color': 'text-secondary'};
                    offset = offset.description;
                    oscard['children'] = offset;
                    oscard = option.bind(entity)(golfie, oscard, verify);
                    report[1] = oscard;
                    michal['children'] = report;
                    entity = tangon.bind(entity)(zuuluu, michal);
                    return entity;
                };
                michal = backup.bind(output)(michal);
                zuuluu['safetyTips'] = michal;
                backup = _closure1_slot11;
                michal = 21;
                michal = golfie[michal];
                foxtra = foxtra.bind(entity)(michal);
                michal = {};
                michal['senderId'] = verify;
                sizing = function() { // Original name: handleMutePressed
                    zuuluu = _closure2_slot6;
                    tangon = _closure1_slot0;
                    michal = _closure1_slot2;
                    entity = 10;
                    entity = michal[entity];
                    michal = undefined;
                    entity = tangon.bind(michal)(entity);
                    entity = entity.CtaEventTypes;
                    entity = entity.USER_MODAL_MUTE;
                    entity = zuuluu.bind(michal)(entity);
                    return entity;
                };
                michal['handleMutePressed'] = sizing;
                michal = backup.bind(entity)(foxtra, michal);
                zuuluu['actionItems'] = michal;
                backup = _closure1_slot11;
                michal = 22;
                michal = golfie[michal];
                michal = oscard.bind(entity)(michal);
                foxtra = michal.TextWithIOSLinkWorkaround;
                michal = {'variant': 'text-sm/normal', 'color': 'text-link'};
                sizing = golfie[kiloes];
                sizing = oscard.bind(entity)(sizing);
                result = sizing.intl;
                output = result.format;
                kiloes = golfie[kiloes];
                kiloes = oscard.bind(entity)(kiloes);
                kiloes = kiloes.t;
                sizing = kiloes.UkH129;
                kiloes = {};
                echoed = _closure2_slot7;
                kiloes['learnMoreLink'] = echoed;
                kiloes = output.bind(result)(sizing, kiloes);
                michal['children'] = kiloes;
                michal = backup.bind(entity)(foxtra, michal);
                zuuluu['learnMore'] = michal;
                michal = _closure1_slot6;
                michal = report.bind(romeon)(tangon, zuuluu, michal);
                report = 10;
                michal = golfie[report];
                tangon = oscard.bind(entity)(michal);
                zuuluu = tangon.trackCtaEvent;
                michal = {};
                michal['channelId'] = yankee;
                michal['warningId'] = offset;
                michal['senderId'] = verify;
                option = _closure1_slot4;
                option = option.LIKELY_ATO;
                michal['warningType'] = option;
                report = golfie[report];
                report = oscard.bind(entity)(report);
                report = report.CtaEventTypes;
                report = report.OPEN_MORE_TIPS;
                michal['cta'] = report;
                michal = zuuluu.bind(tangon)(michal);
                return entity;
            };
            golfie['onpress'] = oscard;
            oscard = new Array(2);
            oscard[0] = golfie;
            golfie = {};
            offset = foxtra[verify];
            offset = romeon.bind(report)(offset);
            yankee = offset.intl;
            offset = yankee.string;
            verify = foxtra[verify];
            verify = romeon.bind(report)(verify);
            verify = verify.t;
            verify = verify.ftIK2N;
            verify = offset.bind(yankee)(verify);
            golfie['text'] = verify;
            verify = 'secondary';
            golfie['variant'] = verify;
            option = function() { // Original name: onpress
                zuuluu = _closure2_slot6;
                tangon = _closure1_slot0;
                michal = _closure1_slot2;
                entity = 10;
                entity = michal[entity];
                michal = undefined;
                entity = tangon.bind(michal)(entity);
                entity = entity.CtaEventTypes;
                entity = entity.USER_BANNER_MUTE;
                entity = zuuluu.bind(michal)(entity);
                return entity;
            };
            golfie['onpress'] = option;
            oscard[1] = golfie;
            michal['buttons'] = oscard;
            entity = tangon.bind(report)(zuuluu, michal);
 575:
            return entity;
        }
    };
    entity = global;
    verify = entity.Object;
    option = verify.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = option.bind(verify)(zuuluu, entity, tangon);
    entity = 0;
    option = oscard[entity];
    tangon = argCor;
    entity = undefined;
    tangon = tangon.bind(entity)(option);
    var _closure1_slot3 = tangon;
    tangon = 1;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.SafetyWarningTypes;
    var _closure1_slot4 = tangon;
    tangon = 2;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    option = tangon.getLikelyAtoMoreTips;
    var _closure1_slot5 = option;
    option = tangon.LIKELY_ATO_MORE_TIPS_MODAL_KEY;
    var _closure1_slot6 = option;
    tangon = tangon.LEARN_MORE_HC_ARTICLE;
    var _closure1_slot7 = tangon;
    tangon = 3;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.AnalyticEvents;
    var _closure1_slot8 = tangon;
    tangon = 4;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.LOCATION_CONTEXT_MOBILE;
    var _closure1_slot9 = tangon;
    tangon = 5;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.MuteUntilSeconds;
    var _closure1_slot10 = tangon;
    tangon = 6;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    option = tangon.jsx;
    var _closure1_slot11 = option;
    option = tangon.Fragment;
    var _closure1_slot12 = option;
    tangon = tangon.jsxs;
    var _closure1_slot13 = tangon;
    tangon = 7;
    tangon = oscard[tangon];
    verify = report.bind(entity)(tangon);
    option = verify.createStyles;
    tangon = {};
    offset = {};
    yankee = 8;
    yankee = oscard[yankee];
    yankee = romeon.bind(entity)(yankee);
    yankee = yankee.colors;
    yankee = yankee.BG_BASE_SECONDARY;
    offset['backgroundColor'] = yankee;
    yankee = 'transparent';
    offset['shadowColor'] = yankee;
    tangon['moreTipsHeader'] = offset;
    tangon = option.bind(verify)(tangon);
    var _closure1_slot14 = tangon;
    tangon = 23;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/ato_alerts/native/components/LikelyAtoWarningBanner.tsx';
    tangon = report.bind(oscard)(tangon);
    zuuluu['default'] = michal;
    zuuluu['LikelyAtoWarningBanner'] = michal;
    return entity;
})();