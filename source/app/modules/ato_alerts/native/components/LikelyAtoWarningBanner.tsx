// app/modules/ato_alerts/native/components/LikelyAtoWarningBanner.tsx
export default (function(argFoo, argBar, argBaz, argCorge, _, argFred, argPlugh) {
    report = argBar;
    romeo = argBaz;
    zulu = argFred;
    oscar = argPlugh;
    var _closure1_slot0 = report;
    var _closure1_slot1 = romeo;
    var _closure1_slot2 = oscar;
    mike = function(argFoo) { // Original name: LikelyAtoWarningBanner
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            entity = argFoo;
            yankee = entity.channelId;
            var _closure2_slot0 = yankee;
            offset = entity.warningId;
            var _closure2_slot1 = offset;
            verify = entity.senderId;
            var _closure2_slot2 = verify;
            entity = _closure1_slot14;
            report = undefined;
            entity = entity.bind(report)();
            var _closure2_slot3 = entity;
            mike = _closure1_slot0;
            zulu = _closure1_slot2;
            entity = 9;
            entity = zulu[entity];
            zulu = mike.bind(report)(entity);
            mike = zulu.useIsEligibleForLikelyAtoWarning;
            entity = {};
            tango = _closure1_slot9;
            entity['location'] = tango;
            mike = mike.bind(zulu)(entity);
            var _closure2_slot4 = mike;
            oscar = _closure1_slot3;
            tango = oscar.useEffect;
            zulu = new Array(4);
            zulu[0] = yankee;
            zulu[1] = offset;
            zulu[2] = verify;
            zulu[3] = mike;
            entity = function() {
                _fun00003: for(var _fun00004_ip = 0; ; ) switch(_fun00004_ip) {
 0:
                    entity = _closure2_slot4;
                    if(!entity) { _fun00004_ip = 100; continue _fun00003 }
 10:
                    zulu = _closure1_slot0;
                    mike = _closure1_slot2;
                    entity = 10;
                    mike = mike[entity];
                    entity = undefined;
                    tango = zulu.bind(entity)(mike);
                    zulu = tango.trackViewedEvent;
                    entity = _closure1_slot8;
                    mike = entity.SAFETY_WARNING_VIEWED;
                    entity = {};
                    golf = _closure2_slot0;
                    entity['channelId'] = golf;
                    golf = _closure2_slot1;
                    entity['warningId'] = golf;
                    oscar = _closure2_slot2;
                    entity['senderId'] = oscar;
                    report = _closure1_slot4;
                    report = report.LIKELY_ATO;
                    entity['warningType'] = report;
                    entity = zulu.bind(tango)(mike, entity);
 100:
                    entity = undefined;
                    return entity;
                }
            };
            entity = tango.bind(oscar)(entity, zulu);
            oscar = _closure1_slot3;
            tango = oscar.useCallback;
            zulu = new Array(2);
            zulu[0] = yankee;
            zulu[1] = offset;
            entity = function() {
                tango = _closure1_slot0;
                report = _closure1_slot2;
                entity = 11;
                zulu = report[entity];
                entity = undefined;
                golf = tango.bind(entity)(zulu);
                oscar = golf.dismissChannelSafetyWarnings;
                tango = _closure2_slot0;
                options = _closure2_slot1;
                zulu = new Array(1);
                zulu[0] = options;
                zulu = oscar.bind(golf)(tango, zulu);
                tango = _closure1_slot1;
                zulu = 12;
                zulu = report[zulu];
                tango = tango.bind(entity)(zulu);
                zulu = tango.popWithKey;
                mike = _closure1_slot6;
                mike = zulu.bind(tango)(mike);
                return entity;
            };
            oscar = tango.bind(oscar)(entity, zulu);
            var _closure2_slot5 = oscar;
            romeo = _closure1_slot3;
            tango = romeo.useCallback;
            zulu = new Array(4);
            zulu[0] = yankee;
            zulu[1] = verify;
            zulu[2] = offset;
            zulu[3] = oscar;
            entity = function(argFoo) {
                tango = _closure1_slot0;
                report = _closure1_slot2;
                entity = 13;
                mike = report[entity];
                entity = undefined;
                verify = tango.bind(entity)(mike);
                golf = verify.handleMuteSettingPress;
                zulu = {};
                options = _closure2_slot0;
                zulu['channelId'] = options;
                offset = null;
                zulu['guildId'] = offset;
                offset = _closure1_slot10;
                offset = offset.ALWAYS;
                zulu['muteDurationSeconds'] = offset;
                zulu = golf.bind(verify)(zulu);
                golf = _closure1_slot1;
                zulu = 14;
                zulu = report[zulu];
                verify = golf.bind(entity)(zulu);
                zulu = verify.showMuteSuccessToast;
                golf = _closure2_slot2;
                zulu = zulu.bind(verify)(golf, options);
                zulu = 10;
                zulu = report[zulu];
                report = tango.bind(entity)(zulu);
                tango = report.trackCtaEvent;
                zulu = {};
                zulu['channelId'] = options;
                options = _closure2_slot1;
                zulu['warningId'] = options;
                zulu['senderId'] = golf;
                oscar = _closure1_slot4;
                oscar = oscar.LIKELY_ATO;
                zulu['warningType'] = oscar;
                oscar = argFoo;
                zulu['cta'] = oscar;
                zulu = tango.bind(report)(zulu);
                mike = _closure2_slot5;
                mike = mike.bind(entity)();
                return entity;
            };
            entity = tango.bind(romeo)(entity, zulu);
            var _closure2_slot6 = entity;
            entity = function() { // Original name: handleLearnMore
                options = _closure1_slot0;
                report = _closure1_slot2;
                golf = 10;
                zulu = report[golf];
                entity = undefined;
                oscar = options.bind(entity)(zulu);
                tango = oscar.trackCtaEvent;
                zulu = {};
                offset = _closure2_slot0;
                zulu['channelId'] = offset;
                offset = _closure2_slot1;
                zulu['warningId'] = offset;
                verify = _closure2_slot2;
                zulu['senderId'] = verify;
                verify = _closure1_slot4;
                verify = verify.LIKELY_ATO;
                zulu['warningType'] = verify;
                golf = report[golf];
                golf = options.bind(entity)(golf);
                golf = golf.CtaEventTypes;
                golf = golf.USER_MODAL_LEARN_MORE;
                zulu['cta'] = golf;
                zulu = tango.bind(oscar)(zulu);
                tango = _closure1_slot1;
                zulu = 15;
                zulu = report[zulu];
                tango = tango.bind(entity)(zulu);
                zulu = tango.openURL;
                mike = _closure1_slot7;
                mike = zulu.bind(tango)(mike);
                return entity;
            };
            var _closure2_slot7 = entity;
            entity = null;
            if(!mike) { _fun00002_ip = 575; continue _fun00001 }
 241:
            tango = _closure1_slot11;
            zulu = _closure1_slot1;
            foxtrot = _closure1_slot2;
            mike = 16;
            mike = foxtrot[mike];
            zulu = zulu.bind(report)(mike);
            mike = {};
            mike['channelId'] = yankee;
            mike['warningId'] = offset;
            mike['senderId'] = verify;
            verify = _closure1_slot4;
            verify = verify.LIKELY_ATO;
            mike['warningType'] = verify;
            romeo = _closure1_slot0;
            verify = 17;
            golf = foxtrot[verify];
            golf = romeo.bind(report)(golf);
            yankee = golf.intl;
            offset = yankee.string;
            golf = foxtrot[verify];
            golf = romeo.bind(report)(golf);
            golf = golf.t;
            golf = golf.R8UsiI;
            golf = offset.bind(yankee)(golf);
            mike['header'] = golf;
            golf = foxtrot[verify];
            golf = romeo.bind(report)(golf);
            yankee = golf.intl;
            offset = yankee.string;
            golf = foxtrot[verify];
            golf = romeo.bind(report)(golf);
            golf = golf.t;
            golf = golf.lI8nQk;
            golf = offset.bind(yankee)(golf);
            mike['description'] = golf;
            mike['onDismiss'] = oscar;
            golf = {};
            oscar = foxtrot[verify];
            oscar = romeo.bind(report)(oscar);
            yankee = oscar.intl;
            offset = yankee.string;
            oscar = foxtrot[verify];
            oscar = romeo.bind(report)(oscar);
            oscar = oscar.t;
            oscar = oscar.tC1pvL;
            oscar = offset.bind(yankee)(oscar);
            golf['text'] = oscar;
            oscar = 'primary';
            golf['variant'] = oscar;
            oscar = function() { // Original name: onpress
                foxtrot = _closure1_slot1;
                golf = _closure1_slot2;
                entity = 12;
                mike = golf[entity];
                entity = undefined;
                romeo = foxtrot.bind(entity)(mike);
                report = romeo.pushLazy;
                oscar = _closure1_slot0;
                mike = 19;
                mike = golf[mike];
                tango = oscar.bind(entity)(mike);
                mike = 18;
                zulu = golf[mike];
                mike = golf.paths;
                tango = tango.bind(entity)(zulu, mike);
                zulu = {};
                mike = _closure1_slot6;
                zulu['modalKey'] = mike;
                mike = _closure2_slot3;
                mike = mike.moreTipsHeader;
                zulu['headerStyle'] = mike;
                yankee = _closure2_slot0;
                zulu['channelId'] = yankee;
                offset = _closure2_slot1;
                zulu['warningId'] = offset;
                verify = _closure2_slot2;
                zulu['senderId'] = verify;
                kilo = 17;
                mike = golf[kilo];
                mike = oscar.bind(entity)(mike);
                output = mike.intl;
                backup = output.string;
                mike = golf[kilo];
                mike = oscar.bind(entity)(mike);
                mike = mike.t;
                mike = mike./uid3t;
                mike = backup.bind(output)(mike);
                zulu['description'] = mike;
                mike = _closure1_slot5;
                output = mike.bind(entity)();
                backup = output.map;
                mike = function(argFoo, argBar) {
                    offset = argFoo;
                    verify = argBar;
                    tango = _closure1_slot13;
                    zulu = _closure1_slot12;
                    mike = {};
                    foxtrot = _closure1_slot11;
                    golf = _closure1_slot0;
                    yankee = _closure1_slot2;
                    oscar = 20;
                    report = yankee[oscar];
                    entity = undefined;
                    report = golf.bind(entity)(report);
                    romeo = report.Text;
                    report = {'variant': 'text-md/medium', 'color': 'header-primary'};
                    backup = offset.title;
                    report['children'] = backup;
                    romeo = foxtrot.bind(entity)(romeo, report, verify);
                    report = new Array(2);
                    report[0] = romeo;
                    options = _closure1_slot11;
                    oscar = yankee[oscar];
                    oscar = golf.bind(entity)(oscar);
                    golf = oscar.Text;
                    oscar = {'variant': 'text-xs/medium', 'color': 'text-secondary'};
                    offset = offset.description;
                    oscar['children'] = offset;
                    oscar = options.bind(entity)(golf, oscar, verify);
                    report[1] = oscar;
                    mike['children'] = report;
                    entity = tango.bind(entity)(zulu, mike);
                    return entity;
                };
                mike = backup.bind(output)(mike);
                zulu['safetyTips'] = mike;
                backup = _closure1_slot11;
                mike = 21;
                mike = golf[mike];
                foxtrot = foxtrot.bind(entity)(mike);
                mike = {};
                mike['senderId'] = verify;
                sizing = function() { // Original name: handleMutePressed
                    zulu = _closure2_slot6;
                    tango = _closure1_slot0;
                    mike = _closure1_slot2;
                    entity = 10;
                    entity = mike[entity];
                    mike = undefined;
                    entity = tango.bind(mike)(entity);
                    entity = entity.CtaEventTypes;
                    entity = entity.USER_MODAL_MUTE;
                    entity = zulu.bind(mike)(entity);
                    return entity;
                };
                mike['handleMutePressed'] = sizing;
                mike = backup.bind(entity)(foxtrot, mike);
                zulu['actionItems'] = mike;
                backup = _closure1_slot11;
                mike = 22;
                mike = golf[mike];
                mike = oscar.bind(entity)(mike);
                foxtrot = mike.TextWithIOSLinkWorkaround;
                mike = {'variant': 'text-sm/normal', 'color': 'text-link'};
                sizing = golf[kilo];
                sizing = oscar.bind(entity)(sizing);
                result = sizing.intl;
                output = result.format;
                kilo = golf[kilo];
                kilo = oscar.bind(entity)(kilo);
                kilo = kilo.t;
                sizing = kilo.UkH129;
                kilo = {};
                echo = _closure2_slot7;
                kilo['learnMoreLink'] = echo;
                kilo = output.bind(result)(sizing, kilo);
                mike['children'] = kilo;
                mike = backup.bind(entity)(foxtrot, mike);
                zulu['learnMore'] = mike;
                mike = _closure1_slot6;
                mike = report.bind(romeo)(tango, zulu, mike);
                report = 10;
                mike = golf[report];
                tango = oscar.bind(entity)(mike);
                zulu = tango.trackCtaEvent;
                mike = {};
                mike['channelId'] = yankee;
                mike['warningId'] = offset;
                mike['senderId'] = verify;
                options = _closure1_slot4;
                options = options.LIKELY_ATO;
                mike['warningType'] = options;
                report = golf[report];
                report = oscar.bind(entity)(report);
                report = report.CtaEventTypes;
                report = report.OPEN_MORE_TIPS;
                mike['cta'] = report;
                mike = zulu.bind(tango)(mike);
                return entity;
            };
            golf['onpress'] = oscar;
            oscar = new Array(2);
            oscar[0] = golf;
            golf = {};
            offset = foxtrot[verify];
            offset = romeo.bind(report)(offset);
            yankee = offset.intl;
            offset = yankee.string;
            verify = foxtrot[verify];
            verify = romeo.bind(report)(verify);
            verify = verify.t;
            verify = verify.ftIK2N;
            verify = offset.bind(yankee)(verify);
            golf['text'] = verify;
            verify = 'secondary';
            golf['variant'] = verify;
            options = function() { // Original name: onpress
                zulu = _closure2_slot6;
                tango = _closure1_slot0;
                mike = _closure1_slot2;
                entity = 10;
                entity = mike[entity];
                mike = undefined;
                entity = tango.bind(mike)(entity);
                entity = entity.CtaEventTypes;
                entity = entity.USER_BANNER_MUTE;
                entity = zulu.bind(mike)(entity);
                return entity;
            };
            golf['onpress'] = options;
            oscar[1] = golf;
            mike['buttons'] = oscar;
            entity = tango.bind(report)(zulu, mike);
 575:
            return entity;
        }
    };
    entity = global;
    verify = entity.Object;
    options = verify.defineProperty;
    tango = {};
    entity = true;
    tango['value'] = entity;
    entity = '__esModule';
    entity = options.bind(verify)(zulu, entity, tango);
    entity = 0;
    options = oscar[entity];
    tango = argCorge;
    entity = undefined;
    tango = tango.bind(entity)(options);
    var _closure1_slot3 = tango;
    tango = 1;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.SafetyWarningTypes;
    var _closure1_slot4 = tango;
    tango = 2;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    options = tango.getLikelyAtoMoreTips;
    var _closure1_slot5 = options;
    options = tango.LIKELY_ATO_MORE_TIPS_MODAL_KEY;
    var _closure1_slot6 = options;
    tango = tango.LEARN_MORE_HC_ARTICLE;
    var _closure1_slot7 = tango;
    tango = 3;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.AnalyticEvents;
    var _closure1_slot8 = tango;
    tango = 4;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.LOCATION_CONTEXT_MOBILE;
    var _closure1_slot9 = tango;
    tango = 5;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.MuteUntilSeconds;
    var _closure1_slot10 = tango;
    tango = 6;
    options = oscar[tango];
    options = report.bind(entity)(options);
    options = options.jsx;
    var _closure1_slot11 = options;
    options = oscar[tango];
    options = report.bind(entity)(options);
    options = options.Fragment;
    var _closure1_slot12 = options;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.jsxs;
    var _closure1_slot13 = tango;
    tango = 7;
    tango = oscar[tango];
    verify = report.bind(entity)(tango);
    options = verify.createStyles;
    tango = {};
    offset = {};
    yankee = 8;
    yankee = oscar[yankee];
    yankee = romeo.bind(entity)(yankee);
    yankee = yankee.colors;
    yankee = yankee.BG_BASE_SECONDARY;
    offset['backgroundColor'] = yankee;
    yankee = 'transparent';
    offset['shadowColor'] = yankee;
    tango['moreTipsHeader'] = offset;
    tango = options.bind(verify)(tango);
    var _closure1_slot14 = tango;
    tango = 23;
    tango = oscar[tango];
    oscar = report.bind(entity)(tango);
    report = oscar.fileFinishedImporting;
    tango = 'modules/ato_alerts/native/components/LikelyAtoWarningBanner.tsx';
    tango = report.bind(oscar)(tango);
    zulu['default'] = mike;
    zulu['LikelyAtoWarningBanner'] = mike;
    return entity;
})();