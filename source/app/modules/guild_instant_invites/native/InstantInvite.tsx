// app/modules/guild_instant_invites/native/InstantInvite.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    report = argBar;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    entity = argBaz;
    var _closure1_slot1 = entity;
    var _closure1_slot2 = oscard;
    entity = global;
    option = entity.Object;
    golfie = option.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(option)(zuuluu, entity, tangon);
    entity = 0;
    golfie = oscard[entity];
    tangon = argCor;
    entity = undefined;
    golfie = tangon.bind(entity)(golfie);
    tangon = 1;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.View;
    var _closure1_slot3 = tangon;
    tangon = 2;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    option = tangon.jsx;
    var _closure1_slot4 = option;
    tangon = tangon.jsxs;
    var _closure1_slot5 = tangon;
    tangon = 3;
    tangon = oscard[tangon];
    verify = report.bind(entity)(tangon);
    option = verify.createStyles;
    tangon = {};
    offset = {'marginLeft': 4294967280, 'marginBottom': 4294967280, 'marginTop': 8, 'flex': 1};
    tangon['creatorWrapper'] = offset;
    tangon = option.bind(verify)(tangon);
    var _closure1_slot6 = tangon;
    tangon = golfie.memo;
    michal = function(argFoo) {
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            entity = argFoo;
            echoed = entity.invite;
            report = entity.onInviteRevoked;
            entity = _closure1_slot6;
            tangon = undefined;
            backup = entity.bind(tangon)();
            foxtra = echoed.uses;
            romeon = echoed.maxUses;
            golfie = _closure1_slot0;
            option = _closure1_slot2;
            entity = 4;
            entity = option[entity];
            zuuluu = golfie.bind(tangon)(entity);
            michal = zuuluu.useInviteActions;
            entity = {};
            entity['invite'] = echoed;
            entity['onInviteRevoked'] = report;
            result = michal.bind(zuuluu)(entity);
            zuuluu = _closure1_slot5;
            entity = 5;
            entity = option[entity];
            entity = golfie.bind(tangon)(entity);
            michal = entity.Card;
            entity = {};
            oscard = 6;
            report = option[oscard];
            report = golfie.bind(tangon)(report);
            offset = report.Stack;
            report = {'direction': 'horizontal', 'justify': 'space-between'};
            yankee = _closure1_slot4;
            kiloes = 7;
            kiloes = option[kiloes];
            kiloes = golfie.bind(tangon)(kiloes);
            sizing = kiloes.Text;
            kiloes = {'variant': 'text-lg/bold', 'tabularNumbers': true};
            output = echoed.code;
            kiloes['children'] = output;
            sizing = yankee.bind(tangon)(sizing, kiloes);
            kiloes = new Array(2);
            kiloes[0] = sizing;
            sizing = 8;
            sizing = option[sizing];
            sizing = golfie.bind(tangon)(sizing);
            output = sizing.ContextMenu;
            sizing = {};
            sizing['items'] = result;
            result = function(argFoo) { // Original name: children
                zuuluu = argFoo;
                oscard = zuuluu.ref;
                entity = null;
                michal = Object.create(entity);
                entity = 0;
                michal['ref'] = entity;
                backup = {};
                foxtra = zuuluu;
                romeon = michal;
                foxtra = copyDataProperties(backup, foxtra, romeon);
                tangon = _closure1_slot4;
                offset = _closure1_slot0;
                yankee = _closure1_slot2;
                entity = 9;
                entity = yankee[entity];
                zuuluu = undefined;
                entity = offset.bind(zuuluu)(entity);
                michal = entity.IconButton;
                entity = {'size': 'sm', 'variant': 'secondary'};
                option = _closure1_slot1;
                golfie = 10;
                golfie = yankee[golfie];
                golfie = option.bind(zuuluu)(golfie);
                golfie = golfie.more;
                entity['icon'] = golfie;
                golfie = 11;
                option = yankee[golfie];
                option = offset.bind(zuuluu)(option);
                verify = option.intl;
                option = verify.string;
                golfie = yankee[golfie];
                golfie = offset.bind(zuuluu)(golfie);
                golfie = golfie.t;
                golfie = golfie.DEoVWV;
                golfie = option.bind(verify)(golfie);
                entity['accessibilityLabel'] = golfie;
                entity['ref'] = oscard;
                backup = entity;
                report = copyDataProperties(backup, foxtra);
                entity = tangon.bind(zuuluu)(michal, entity);
                return entity;
            };
            sizing['children'] = result;
            sizing = yankee.bind(tangon)(output, sizing);
            kiloes[1] = sizing;
            report['children'] = kiloes;
            offset = zuuluu.bind(tangon)(offset, report);
            report = new Array(3);
            report[0] = offset;
            offset = 12;
            offset = option[offset];
            offset = golfie.bind(tangon)(offset);
            kiloes = offset.InstantInviteDetails;
            offset = {};
            offset['invite'] = echoed;
            offset = yankee.bind(tangon)(kiloes, offset);
            report[1] = offset;
            oscard = option[oscard];
            oscard = golfie.bind(tangon)(oscard);
            golfie = oscard.Stack;
            oscard = {'direction': 'horizontal', 'align': 'flex-end'};
            offset = _closure1_slot3;
            option = {};
            backup = backup.creatorWrapper;
            option['style'] = backup;
            kiloes = echoed.inviter;
            result = null;
            sizing = result == kiloes;
            backup = undefined;
            if(sizing) { _fun00002_ip = 365; continue _fun00001 }
 360:
            backup = kiloes.id;
 365:
            kiloes = result != backup;
            backup = null;
            if(!kiloes) { _fun00002_ip = 461; continue _fun00001 }
 374:
            output = _closure1_slot4;
            sizing = _closure1_slot1;
            update = _closure1_slot2;
            kiloes = 13;
            kiloes = update[kiloes];
            sizing = sizing.bind(tangon)(kiloes);
            kiloes = {'start': true, 'end': true};
            source = echoed.inviter;
            ctrled = result == source;
            update = undefined;
            if(ctrled) { _fun00002_ip = 428; continue _fun00001 }
 423:
            update = source.id;
 428:
            kiloes['userId'] = update;
            echoed = echoed.guild;
            update = result == echoed;
            result = undefined;
            if(update) { _fun00002_ip = 451; continue _fun00001 }
 446:
            result = echoed.id;
 451:
            kiloes['guildId'] = result;
            backup = output.bind(tangon)(sizing, kiloes);
 461:
            option['children'] = backup;
            offset = yankee.bind(tangon)(offset, option);
            option = new Array(2);
            option[0] = offset;
            yankee = _closure1_slot4;
            offset = _closure1_slot1;
            backup = _closure1_slot2;
            verify = 14;
            verify = backup[verify];
            offset = offset.bind(tangon)(verify);
            verify = {};
            verify['uses'] = foxtra;
            verify['maxUses'] = romeon;
            verify = yankee.bind(tangon)(offset, verify);
            option[1] = verify;
            oscard['children'] = option;
            oscard = zuuluu.bind(tangon)(golfie, oscard);
            report[2] = oscard;
            entity['children'] = report;
            entity = zuuluu.bind(tangon)(michal, entity);
            return entity;
        }
    };
    michal = tangon.bind(golfie)(michal);
    tangon = 15;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/guild_instant_invites/native/InstantInvite.tsx';
    tangon = report.bind(oscard)(tangon);
    zuuluu['default'] = michal;
    return entity;
})();