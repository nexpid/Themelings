// app/modules/screen/native/useFontScale.tsx
export default (function(argFoo, argBar, argBaz, _, __, argFre, argPlu) {
    report = argBar;
    zuuluu = argFre;
    oscard = argPlu;
    entity = global;
    option = entity.Object;
    golfie = option.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(option)(zuuluu, entity, tangon);
    entity = 0;
    tangon = oscard[entity];
    entity = undefined;
    tangon = report.bind(entity)(tangon);
    tangon = tangon.useFontScaleStore;
    var _closure1_slot0 = tangon;
    tangon = 1;
    golfie = oscard[tangon];
    tangon = argBaz;
    tangon = tangon.bind(entity)(golfie);
    var _closure1_slot1 = tangon;
    tangon = function(argFoo) { // Original name: FONT_SCALE_GETTER
        entity = argFoo;
        entity = entity.fontScale;
        return entity;
    };
    var _closure1_slot2 = tangon;
    tangon = 2;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/screen/native/useFontScale.tsx';
    tangon = report.bind(oscard)(tangon);
    tangon = function() { // Original name: getFontScale
        zuuluu = _closure1_slot1;
        michal = zuuluu.getState;
        michal = michal.bind(zuuluu)();
        michal = michal.fontScale;
        zuuluu = _closure1_slot0;
        entity = zuuluu.getState;
        entity = entity.bind(zuuluu)();
        entity = entity.fontScale;
        entity = michal * entity;
        return entity;
    };
    zuuluu['getFontScale'] = tangon;
    michal = function() { // Original name: useFontScale
        tangon = _closure1_slot1;
        zuuluu = _closure1_slot2;
        michal = undefined;
        michal = tangon.bind(michal)(zuuluu);
        zuuluu = _closure1_slot0;
        entity = zuuluu.getState;
        entity = entity.bind(zuuluu)();
        entity = entity.fontScale;
        entity = michal * entity;
        return entity;
    };
    zuuluu['useFontScale'] = michal;
    return entity;
})();