// app/modules/screen/native/useIsWindowSmall.tsx
export default (function(_, argBar, argBaz, __, ___, argFre, argPlu) {
    report = argBar;
    zuuluu = argFre;
    tangon = argPlu;
    var _closure1_slot0 = report;
    entity = argBaz;
    var _closure1_slot1 = entity;
    var _closure1_slot2 = tangon;
    entity = global;
    option = entity.Object;
    golfie = option.defineProperty;
    oscard = {};
    entity = true;
    oscard['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(option)(zuuluu, entity, oscard);
    entity = 1;
    tangon = tangon[entity];
    entity = undefined;
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/screen/native/useIsWindowSmall.tsx';
    tangon = report.bind(oscard)(tangon);
    tangon = function() { // Original name: getIsWindowSmall
        tangon = _closure1_slot0;
        report = _closure1_slot2;
        entity = 0;
        michal = report[entity];
        zuuluu = undefined;
        oscard = tangon.bind(zuuluu)(michal);
        michal = oscard.getWindowSizeClassifier;
        michal = michal.bind(oscard)();
        entity = report[entity];
        entity = tangon.bind(zuuluu)(entity);
        entity = entity.WindowSizeClassifier;
        entity = entity.SMALL;
        entity = michal <= entity;
        return entity;
    };
    zuuluu['default'] = tangon;
    michal = function() { // Original name: useIsWindowSmall
        oscard = _closure1_slot1;
        report = _closure1_slot2;
        entity = 0;
        michal = report[entity];
        tangon = undefined;
        michal = oscard.bind(tangon)(michal);
        michal = michal.bind(tangon)();
        zuuluu = _closure1_slot0;
        entity = report[entity];
        entity = zuuluu.bind(tangon)(entity);
        entity = entity.WindowSizeClassifier;
        entity = entity.SMALL;
        entity = michal <= entity;
        return entity;
    };
    zuuluu['useIsWindowSmall'] = michal;
    return entity;
})();