// app/modules/video_calls/native/ChannelCallUtils.tsx
export default (function(argFoo, argBar, argBaz, argCorge, _, argFred, argPlugh) {
    report = argBar;
    golf = argBaz;
    zulu = argFred;
    oscar = argPlugh;
    var _closure1_slot0 = report;
    var _closure1_slot1 = golf;
    var _closure1_slot2 = oscar;
    entity = global;
    verify = entity.Object;
    options = verify.defineProperty;
    tango = {};
    entity = true;
    tango['value'] = entity;
    entity = '__esModule';
    entity = options.bind(verify)(zulu, entity, tango);
    entity = 0;
    options = oscar[entity];
    tango = argCorge;
    entity = undefined;
    tango = tango.bind(entity)(options);
    tango = 1;
    tango = oscar[tango];
    tango = golf.bind(entity)(tango);
    var _closure1_slot3 = tango;
    tango = 2;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    golf = tango.UserSettingsSections;
    var _closure1_slot4 = golf;
    golf = tango.AnalyticsLocations;
    var _closure1_slot5 = golf;
    golf = tango.AnalyticsPages;
    var _closure1_slot6 = golf;
    golf = tango.InstantInviteSources;
    var _closure1_slot7 = golf;
    tango = tango.RPC_APPLICATION_LOGGING_CATEGORY;
    var _closure1_slot8 = tango;
    tango = 3;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.jsx;
    var _closure1_slot9 = tango;
    tango = 22;
    tango = oscar[tango];
    oscar = report.bind(entity)(tango);
    report = oscar.fileFinishedImporting;
    tango = 'modules/video_calls/native/ChannelCallUtils.tsx';
    tango = report.bind(oscar)(tango);
    tango = function() {
        entity = {};
        options = _closure1_slot0;
        report = _closure1_slot2;
        zulu = 4;
        oscar = report[zulu];
        tango = undefined;
        oscar = options.bind(tango)(oscar);
        golf = oscar.intl;
        oscar = golf.string;
        zulu = report[zulu];
        zulu = options.bind(tango)(zulu);
        zulu = zulu.t;
        zulu = zulu.NiTd0d;
        zulu = oscar.bind(golf)(zulu);
        entity['label'] = zulu;
        zulu = _closure1_slot1;
        mike = 5;
        mike = report[mike];
        mike = zulu.bind(tango)(mike);
        entity['icon'] = mike;
        mike = function() { // Original name: onPress
            report = _closure1_slot0;
            tango = _closure1_slot2;
            entity = 6;
            zulu = tango[entity];
            entity = undefined;
            oscar = report.bind(entity)(zulu);
            report = oscar.openUserSettings;
            zulu = {};
            golf = _closure1_slot4;
            golf = golf.VOICE;
            zulu['screen'] = golf;
            zulu = report.bind(oscar)(zulu);
            zulu = _closure1_slot1;
            mike = 7;
            mike = tango[mike];
            zulu = zulu.bind(entity)(mike);
            mike = zulu.hideActionSheet;
            mike = mike.bind(zulu)();
            return entity;
        };
        entity['onPress'] = mike;
        return entity;
    };
    zulu['voiceSettings'] = tango;
    tango = function(argFoo, argBar) {
        zulu = argBar;
        entity = argFoo;
        var _closure2_slot0 = entity;
        var _closure2_slot1 = zulu;
        entity = {};
        options = _closure1_slot0;
        verify = _closure1_slot2;
        tango = 4;
        report = verify[tango];
        golf = undefined;
        report = options.bind(golf)(report);
        oscar = report.intl;
        report = oscar.string;
        tango = verify[tango];
        tango = options.bind(golf)(tango);
        tango = tango.t;
        tango = tango.hoZYAA;
        tango = report.bind(oscar)(tango);
        entity['label'] = tango;
        zulu = !zulu;
        entity['switchValue'] = zulu;
        mike = function() { // Original name: onPress
            zulu = _closure1_slot1;
            mike = _closure1_slot2;
            entity = 8;
            mike = mike[entity];
            entity = undefined;
            report = zulu.bind(entity)(mike);
            tango = report.toggleVoiceParticipantsHidden;
            zulu = _closure2_slot0;
            zulu = zulu.id;
            mike = _closure2_slot1;
            mike = !mike;
            mike = tango.bind(report)(zulu, mike);
            return entity;
        };
        entity['onPress'] = mike;
        return entity;
    };
    zulu['videoParticipantsHidden'] = tango;
    tango = function(argFoo, argBar) { // Original name: openHideSelfStreamAndVideoConfirmDialog
        entity = argFoo;
        var _closure2_slot0 = entity;
        entity = argBar;
        var _closure2_slot1 = entity;
        zulu = _closure1_slot1;
        mike = _closure1_slot2;
        entity = 9;
        mike = mike[entity];
        entity = undefined;
        tango = zulu.bind(entity)(mike);
        zulu = tango.openLazy;
        mike = {};
        report = function() { // Original name: importer
            zulu = _closure1_slot0;
            entity = _closure1_slot2;
            mike = 11;
            mike = entity[mike];
            tango = undefined;
            zulu = zulu.bind(tango)(mike);
            mike = 10;
            mike = entity[mike];
            entity = entity.paths;
            zulu = zulu.bind(tango)(mike, entity);
            mike = zulu.then;
            entity = function(argFoo) {
                mike = argFoo;
                mike = mike.default;
                var _closure4_slot0 = mike;
                entity = function(argFoo) {
                    tango = _closure1_slot9;
                    zulu = _closure4_slot0;
                    mike = {};
                    golf = argFoo;
                    options = mike;
                    entity = copyDataProperties(options, golf);
                    oscar = _closure2_slot0;
                    report = 'type';
                    mike[report] = oscar;
                    report = _closure2_slot1;
                    entity = 'onConfirm';
                    mike[entity] = report;
                    entity = undefined;
                    entity = tango.bind(entity)(zulu, mike);
                    return entity;
                };
                return entity;
            };
            entity = mike.bind(zulu)(entity);
            return entity;
        };
        mike['importer'] = report;
        mike = zulu.bind(tango)(mike);
        return entity;
    };
    zulu['openHideSelfStreamAndVideoConfirmDialog'] = tango;
    tango = function(argFoo, argBar) {
        entity = argBar;
        var _closure2_slot0 = entity;
        entity = {};
        golf = _closure1_slot0;
        options = _closure1_slot2;
        zulu = 4;
        tango = options[zulu];
        oscar = undefined;
        tango = golf.bind(oscar)(tango);
        report = tango.intl;
        tango = report.string;
        zulu = options[zulu];
        zulu = golf.bind(oscar)(zulu);
        zulu = zulu.t;
        zulu = zulu.MH8ESU;
        zulu = tango.bind(report)(zulu);
        entity['label'] = zulu;
        zulu = argFoo;
        zulu = !zulu;
        entity['switchValue'] = zulu;
        mike = function() { // Original name: onPress
            mike = _closure2_slot0;
            entity = undefined;
            mike = mike.bind(entity)();
            return entity;
        };
        entity['onPress'] = mike;
        return entity;
    };
    zulu['selfVideoHidden'] = tango;
    tango = function(argFoo) {
        entity = argFoo;
        var _closure2_slot0 = entity;
        entity = {};
        verify = _closure1_slot0;
        oscar = _closure1_slot2;
        tango = 4;
        golf = oscar[tango];
        report = undefined;
        golf = verify.bind(report)(golf);
        options = golf.intl;
        golf = options.string;
        tango = oscar[tango];
        tango = verify.bind(report)(tango);
        tango = tango.t;
        tango = tango.KHGhHR;
        tango = golf.bind(options)(tango);
        entity['label'] = tango;
        tango = _closure1_slot1;
        zulu = 12;
        zulu = oscar[zulu];
        zulu = tango.bind(report)(zulu);
        entity['icon'] = zulu;
        mike = function() { // Original name: onPress
            _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
                zulu = _closure1_slot0;
                mike = _closure1_slot2;
                entity = 13;
                mike = mike[entity];
                entity = undefined;
                oscar = zulu.bind(entity)(mike);
                report = oscar.encodeStreamKey;
                zulu = _closure2_slot0;
                options = report.bind(oscar)(zulu);
                report = _closure1_slot3;
                zulu = report.getVideoStats;
                zulu = zulu.bind(report)(options);
                report = null;
                if(!(report == zulu)) { _fun00002_ip = 66; continue _fun00001 }
 64:
                zulu = {};
 66:
                golf = {};
                oscar = _closure1_slot3;
                report = oscar.getMediaSessionId;
                report = report.bind(oscar)(options);
                golf['media_session_id'] = report;
                report = oscar.getRtcConnectionId;
                report = report.bind(oscar)(options);
                golf['rtc_connection_id'] = report;
                report = oscar.getRegion;
                report = report.bind(oscar)(options);
                golf['stream_region'] = report;
                report = oscar.getMaxViewers;
                report = report.bind(oscar)(options);
                golf['max_viewers'] = report;
                romeo = golf;
                yankee = zulu;
                zulu = copyDataProperties(romeo, yankee);
                oscar = _closure1_slot1;
                zulu = _closure1_slot2;
                report = 7;
                report = zulu[report];
                oscar = oscar.bind(entity)(report);
                report = oscar.openLazy;
                options = _closure1_slot0;
                tango = 11;
                tango = zulu[tango];
                options = options.bind(entity)(tango);
                tango = 14;
                tango = zulu[tango];
                zulu = zulu.paths;
                tango = options.bind(entity)(tango, zulu);
                options = _closure2_slot0;
                verify = options.ownerId;
                mike = global;
                mike = mike.HermesInternal;
                zulu = mike.concat;
                mike = 'StreamReportProblem';
                zulu = zulu.bind(mike)(verify);
                mike = {};
                mike['stream'] = options;
                mike['analyticsData'] = golf;
                mike = report.bind(oscar)(tango, zulu, mike);
                return entity;
            }
        };
        entity['onPress'] = mike;
        return entity;
    };
    zulu['reportStreamIssue'] = tango;
    tango = function(argFoo, argBar, argBaz) {
        _fun00003: for(var _fun00004_ip = 0; ; ) switch(_fun00004_ip) {
 0:
            tango = argFoo;
            oscar = argBar;
            report = argBaz;
            var _closure2_slot0 = tango;
            var _closure2_slot1 = oscar;
            var _closure2_slot2 = report;
            mike = function() { // Original name: onPress
                zulu = _closure1_slot0;
                mike = _closure1_slot2;
                entity = 15;
                mike = mike[entity];
                entity = undefined;
                tango = zulu.bind(entity)(mike);
                zulu = tango.showInstantInviteActionSheet;
                mike = _closure2_slot0;
                entity = 'Voice Channel';
                entity = zulu.bind(tango)(mike, entity);
                return entity;
            };
            zulu = null;
            if(!(zulu == oscar)) { _fun00004_ip = 49; continue _fun00003 }
 36:
            if(!(zulu != report)) { _fun00004_ip = 56; continue _fun00003 }
 40:
            mike = function() { // Original name: onPress
                tango = _closure1_slot0;
                zulu = _closure1_slot2;
                mike = 15;
                zulu = zulu[mike];
                mike = undefined;
                report = tango.bind(mike)(zulu);
                tango = report.showInstantInviteActionSheet;
                zulu = _closure2_slot0;
                entity = _closure1_slot7;
                mike = entity.ACTIVITY_INVITE;
                entity = {};
                oscar = _closure2_slot2;
                entity['targetApplicationId'] = oscar;
                entity = tango.bind(report)(zulu, mike, entity);
                return entity;
            };
            _fun00004_ip = 56; continue _fun00003;
 49:
            mike = function() { // Original name: onPress
                tango = _closure1_slot0;
                zulu = _closure1_slot2;
                mike = 15;
                zulu = zulu[mike];
                mike = undefined;
                report = tango.bind(mike)(zulu);
                tango = report.showInstantInviteActionSheet;
                zulu = _closure2_slot0;
                entity = _closure1_slot5;
                mike = entity.STREAM;
                entity = {};
                oscar = _closure2_slot1;
                entity['stream'] = oscar;
                entity = tango.bind(report)(zulu, mike, entity);
                return entity;
            };
 56:
            zulu = tango.isPrivate;
            zulu = zulu.bind(tango)();
            if(!zulu) { _fun00004_ip = 76; continue _fun00003 }
 69:
            mike = function() { // Original name: onPress
                tango = _closure1_slot0;
                zulu = _closure1_slot2;
                mike = 16;
                zulu = zulu[mike];
                mike = undefined;
                tango = tango.bind(mike)(zulu);
                zulu = tango.navigateToNewGroupDM;
                mike = _closure2_slot0;
                mike = mike.id;
                entity = _closure1_slot6;
                entity = entity.CHANNEL_CALL;
                entity = zulu.bind(tango)(mike, entity);
                return entity;
            };
 76:
            entity = {};
            verify = _closure1_slot0;
            oscar = _closure1_slot2;
            tango = 4;
            golf = oscar[tango];
            report = undefined;
            golf = verify.bind(report)(golf);
            options = golf.intl;
            golf = options.string;
            tango = oscar[tango];
            tango = verify.bind(report)(tango);
            tango = tango.t;
            tango = tango.VINpSE;
            tango = golf.bind(options)(tango);
            entity['label'] = tango;
            tango = _closure1_slot1;
            zulu = 17;
            zulu = oscar[zulu];
            zulu = tango.bind(report)(zulu);
            entity['icon'] = zulu;
            entity['onPress'] = mike;
            return entity;
        }
    };
    zulu['invite'] = tango;
    tango = function(argFoo) {
        entity = argFoo;
        var _closure2_slot0 = entity;
        entity = {};
        verify = _closure1_slot0;
        oscar = _closure1_slot2;
        tango = 4;
        golf = oscar[tango];
        report = undefined;
        golf = verify.bind(report)(golf);
        options = golf.intl;
        golf = options.string;
        tango = oscar[tango];
        tango = verify.bind(report)(tango);
        tango = tango.t;
        tango = tango.X8bCMT;
        tango = golf.bind(options)(tango);
        entity['label'] = tango;
        tango = _closure1_slot1;
        zulu = 18;
        zulu = oscar[zulu];
        zulu = tango.bind(report)(zulu);
        entity['icon'] = zulu;
        mike = function() { // Original name: onPress
            mike = _closure2_slot0;
            entity = undefined;
            mike = mike.bind(entity)();
            zulu = _closure1_slot1;
            tango = _closure1_slot2;
            mike = 7;
            mike = tango[mike];
            zulu = zulu.bind(entity)(mike);
            mike = zulu.hideActionSheet;
            mike = mike.bind(zulu)();
            return entity;
        };
        entity['onPress'] = mike;
        return entity;
    };
    zulu['rtcDebugPanel'] = tango;
    mike = function() {
        entity = {};
        options = _closure1_slot0;
        report = _closure1_slot2;
        zulu = 4;
        oscar = report[zulu];
        tango = undefined;
        oscar = options.bind(tango)(oscar);
        golf = oscar.intl;
        oscar = golf.string;
        zulu = report[zulu];
        zulu = options.bind(tango)(zulu);
        zulu = zulu.t;
        zulu = zulu.iQzQs7;
        zulu = oscar.bind(golf)(zulu);
        entity['label'] = zulu;
        zulu = _closure1_slot1;
        mike = 18;
        mike = report[mike];
        mike = zulu.bind(tango)(mike);
        entity['icon'] = mike;
        mike = function() { // Original name: onPress
            _fun00005: for(var _fun00006_ip = 0; ; ) switch(_fun00006_ip) {
 0:
                zulu = _closure1_slot0;
                mike = _closure1_slot2;
                entity = 19;
                mike = mike[entity];
                entity = undefined;
                tango = zulu.bind(entity)(mike);
                zulu = tango.stringify;
                oscar = _closure1_slot8;
                mike = new Array(1);
                mike[0] = oscar;
                mike = zulu.bind(tango)(mike);
                zulu = '';
                if(!(zulu !== mike)) { _fun00006_ip = 102; continue _fun00005 }
 56:
                tango = _closure1_slot0;
                oscar = _closure1_slot2;
                zulu = 21;
                zulu = oscar[zulu];
                oscar = tango.bind(entity)(zulu);
                tango = oscar.showShareActionSheet;
                zulu = {};
                zulu['message'] = mike;
                mike = 'Activity Logs';
                mike = tango.bind(oscar)(zulu, mike);
                _fun00006_ip = 200; continue _fun00005;
 102:
                zulu = _closure1_slot1;
                verify = _closure1_slot2;
                mike = 20;
                mike = verify[mike];
                tango = zulu.bind(entity)(mike);
                zulu = tango.open;
                mike = {};
                oscar = 'EMBEDDED_ACTIVITIES_SHARE_EMPTY_LOGS_ERROR_MESSAGE';
                mike['key'] = oscar;
                options = _closure1_slot0;
                report = 4;
                oscar = verify[report];
                oscar = options.bind(entity)(oscar);
                golf = oscar.intl;
                oscar = golf.string;
                report = verify[report];
                report = options.bind(entity)(report);
                report = report.t;
                report = report.i+9VW1;
                report = oscar.bind(golf)(report);
                mike['content'] = report;
                mike = zulu.bind(tango)(mike);
 200:
                return entity;
            }
        };
        entity['onPress'] = mike;
        return entity;
    };
    zulu['shareActivityLogs'] = mike;
    return entity;
})();