// app/modules/video_calls/native/components/PictureInPicture.tsx
export default (function(argFoo, argBar, argBaz, argCorge, argGrault, argFred, argPlugh) {
    oscar = argBar;
    backup = argBaz;
    zulu = argFred;
    golf = argPlugh;
    var _closure1_slot0 = oscar;
    var _closure1_slot1 = backup;
    var _closure1_slot2 = golf;
    entity = global;
    options = entity.Object;
    report = options.defineProperty;
    mike = {};
    entity = true;
    mike['value'] = entity;
    entity = '__esModule';
    entity = report.bind(options)(zulu, entity, mike);
    entity = 0;
    mike = golf[entity];
    entity = undefined;
    mike = backup.bind(entity)(mike);
    var _closure1_slot3 = mike;
    mike = 1;
    report = golf[mike];
    mike = argCorge;
    options = mike.bind(entity)(report);
    var _closure1_slot4 = options;
    mike = 2;
    mike = golf[mike];
    mike = oscar.bind(entity)(mike);
    sizing = mike.StyleSheet;
    mike = mike.View;
    var _closure1_slot5 = mike;
    mike = 3;
    mike = golf[mike];
    mike = backup.bind(entity)(mike);
    var _closure1_slot6 = mike;
    mike = 4;
    mike = golf[mike];
    mike = backup.bind(entity)(mike);
    var _closure1_slot7 = mike;
    mike = 5;
    mike = golf[mike];
    mike = oscar.bind(entity)(mike);
    mike = mike.toggleFocus;
    var _closure1_slot8 = mike;
    mike = 6;
    mike = golf[mike];
    mike = oscar.bind(entity)(mike);
    verify = mike.PIP_GESTURE_ACTIVE_OFFSET;
    mike = 7;
    mike = golf[mike];
    mike = oscar.bind(entity)(mike);
    mike = mike.PictureInPicturePositions;
    var _closure1_slot9 = mike;
    report = 8;
    report = golf[report];
    report = oscar.bind(entity)(report);
    report = report.jsx;
    var _closure1_slot10 = report;
    report = 9;
    report = golf[report];
    yankee = oscar.bind(entity)(report);
    offset = yankee.createStyles;
    report = {};
    romeo = {};
    echo = sizing.absoluteFillObject;
    update = romeo;
    foxtrot = copyDataProperties(update, echo);
    kilo = 'baseline';
    foxtrot = 'alignItems';
    romeo[foxtrot] = kilo;
    report['pipOuterContainer'] = romeo;
    romeo = {};
    echo = sizing.absoluteFillObject;
    update = romeo;
    sizing = copyDataProperties(update, echo);
    romeo[foxtrot] = kilo;
    report['pipInnerContainer'] = romeo;
    romeo = 10;
    foxtrot = golf[romeo];
    kilo = oscar.bind(entity)(foxtrot);
    foxtrot = kilo.generateBoxShadowStyle;
    romeo = golf[romeo];
    romeo = oscar.bind(entity)(romeo);
    romeo = romeo.EIGHT_DP_ELEVATION_SHADOW_PARAMS;
    romeo = foxtrot.bind(kilo)(romeo);
    report['elevationShadow'] = romeo;
    romeo = {};
    foxtrot = 11;
    foxtrot = golf[foxtrot];
    foxtrot = backup.bind(entity)(foxtrot);
    foxtrot = foxtrot.colors;
    foxtrot = foxtrot.BLACK;
    romeo['backgroundColor'] = foxtrot;
    report['background'] = romeo;
    report = offset.bind(yankee)(report);
    var _closure1_slot11 = report;
    offset = {};
    report = 'function PictureInPictureTsx1(velocity){return{mass:0.2,damping:7.5,stiffness:100,restDisplacementThreshold:0.1,restSpeedThreshold:0.1,overshootClamping:true,velocity:velocity};}';
    offset['code'] = report;
    report = function(argFoo) { // Original name: t
        entity = {'mass': 0.2, 'damping': 7.5, 'stiffness': 100, 'restDisplacementThreshold': 0.1, 'restSpeedThreshold': 0.1, 'overshootClamping': true};
        mike = argFoo;
        entity['velocity'] = mike;
        return entity;
    };
    yankee = {};
    report['__closure'] = yankee;
    yankee = 14089987184261.0;
    report['__workletHash'] = yankee;
    report['__initData'] = offset;
    var _closure1_slot12 = report;
    mike = mike.TOP_LEFT;
    offset = -verify;
    report = new Array(2);
    report[0] = offset;
    report[1] = verify;
    var _closure1_slot13 = report;
    offset = -verify;
    report = new Array(2);
    report[0] = offset;
    report[1] = verify;
    var _closure1_slot14 = report;
    report = {};
    verify = 'function PictureInPictureTsx2(){const{containerOffsets,withSpring,keyboardHeight,getSpringAnimationConfig}=this.__closure;return{marginTop:containerOffsets.top,marginBottom:withSpring(Math.max(keyboardHeight,containerOffsets.bottom),getSpringAnimationConfig())};}';
    report['code'] = verify;
    var _closure1_slot15 = report;
    report = options.memo;
    tango = function(argFoo) {
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            entity = argFoo;
            backup = entity.children;
            oscar = entity.style;
            result = entity.containerOffsets;
            tango = undefined;
            if(!(result === tango)) { _fun00002_ip = 37; continue _fun00001 }
 27:
            result = {'top': 0, 'bottom': 0};
 37:
            var _closure2_slot0 = result;
            mike = entity.preferredPosition;
            if(!(mike === tango)) { _fun00002_ip = 64; continue _fun00001 }
 51:
            mike = _closure1_slot9;
            mike = mike.TOP_LEFT;
 64:
            sizing = entity.channel;
            var _closure2_slot1 = tango;
            var _closure2_slot2 = tango;
            var _closure2_slot3 = tango;
            entity = _closure1_slot11;
            kilo = entity.bind(tango)();
            mike = _closure1_slot0;
            zulu = _closure1_slot2;
            entity = 12;
            entity = zulu[entity];
            options = mike.bind(tango)(entity);
            report = options.useShouldForcePipOrientation;
            entity = {};
            entity['channel'] = sizing;
            verify = report.bind(options)(entity);
            entity = 13;
            report = zulu[entity];
            romeo = mike.bind(tango)(report);
            offset = romeo.useStateFromStoresObject;
            report = _closure1_slot7;
            options = new Array(1);
            options[0] = report;
            report = function() {
                entity = {};
                zulu = _closure1_slot7;
                mike = zulu.getWidth;
                mike = mike.bind(zulu)();
                entity['screenWidth'] = mike;
                mike = zulu.getHeight;
                mike = mike.bind(zulu)();
                entity['screenHeight'] = mike;
                return entity;
            };
            report = offset.bind(romeo)(options, report);
            output = report.screenWidth;
            foxtrot = report.screenHeight;
            options = _closure1_slot1;
            report = 14;
            report = zulu[report];
            options = options.bind(tango)(report);
            report = {};
            offset = sizing.id;
            report['channelId'] = offset;
            report['forcedOrientation'] = verify;
            romeo = options.bind(tango)(report);
            offset = _closure1_slot4;
            verify = offset.useState;
            options = {'x': 0, 'y': 0, 'width': null, 'height': null, 'pageX': 0, 'pageY': 0};
            report = 0;
            options['width'] = output;
            options['height'] = foxtrot;
            offset = verify.bind(offset)(options);
            verify = _closure1_slot3;
            options = 2;
            verify = verify.bind(tango)(offset, options);
            report = verify[report];
            options = 1;
            options = verify[options];
            _closure2_slot1 = options;
            entity = zulu[entity];
            offset = mike.bind(tango)(entity);
            verify = offset.useStateFromStores;
            entity = _closure1_slot6;
            options = new Array(1);
            options[0] = entity;
            entity = function() {
                entity = _closure1_slot6;
                entity = entity.keyboardHeight;
                return entity;
            };
            output = verify.bind(offset)(options, entity);
            _closure2_slot2 = output;
            verify = 15;
            entity = zulu[verify];
            offset = mike.bind(tango)(entity);
            options = offset.useAnimatedStyle;
            entity = function() { // Original name: b
                entity = {};
                zulu = _closure2_slot0;
                mike = zulu.top;
                entity['marginTop'] = mike;
                report = _closure1_slot0;
                oscar = _closure1_slot2;
                tango = 16;
                tango = oscar[tango];
                oscar = undefined;
                report = report.bind(oscar)(tango);
                tango = report.withSpring;
                options = global;
                verify = options.Math;
                options = verify.max;
                golf = _closure2_slot2;
                zulu = zulu.bottom;
                zulu = options.bind(verify)(golf, zulu);
                mike = _closure1_slot12;
                mike = mike.bind(oscar)();
                mike = tango.bind(report)(zulu, mike);
                entity['marginBottom'] = mike;
                return entity;
            };
            foxtrot = {};
            foxtrot['containerOffsets'] = result;
            result = 16;
            result = zulu[result];
            result = mike.bind(tango)(result);
            result = result.withSpring;
            foxtrot['withSpring'] = result;
            foxtrot['keyboardHeight'] = output;
            output = _closure1_slot12;
            foxtrot['getSpringAnimationConfig'] = output;
            entity['__closure'] = foxtrot;
            foxtrot = 10399289513521.0;
            entity['__workletHash'] = foxtrot;
            foxtrot = _closure1_slot15;
            entity['__initData'] = foxtrot;
            options = options.bind(offset)(entity);
            entity = 17;
            entity = zulu[entity];
            foxtrot = mike.bind(tango)(entity);
            offset = foxtrot.useIsViewingActivity;
            entity = {};
            sizing = sizing.id;
            entity['channelId'] = sizing;
            offset = offset.bind(foxtrot)(entity);
            entity = 18;
            entity = zulu[entity];
            zulu = mike.bind(tango)(entity);
            mike = zulu.useDraggablePip;
            entity = {};
            foxtrot = romeo.width;
            entity['width'] = foxtrot;
            romeo = romeo.height;
            entity['height'] = romeo;
            romeo = report.width;
            entity['containerWidth'] = romeo;
            report = report.height;
            entity['containerHeight'] = report;
            report = _closure1_slot13;
            entity['activeOffsetX'] = report;
            report = _closure1_slot14;
            entity['activeOffsetY'] = report;
            report = !offset;
            entity['snapToCorners'] = report;
            report = undefined;
            if(!offset) { _fun00002_ip = 563; continue _fun00001 }
 559:
            report = _closure1_slot8;
 563:
            entity['onPress'] = report;
            entity = mike.bind(zulu)(entity);
            romeo = entity.gesture;
            foxtrot = entity.draggableGridItemStyles;
            zulu = _closure1_slot4;
            mike = zulu.useRef;
            entity = null;
            sizing = mike.bind(zulu)(entity);
            _closure2_slot3 = sizing;
            zulu = _closure1_slot10;
            offset = _closure1_slot1;
            output = _closure1_slot2;
            entity = output[verify];
            entity = offset.bind(tango)(entity);
            mike = entity.View;
            entity = {};
            result = kilo.pipOuterContainer;
            report = new Array(3);
            report[0] = result;
            report[1] = options;
            report[2] = oscar;
            entity['style'] = report;
            options = 'box-none';
            entity['pointerEvents'] = options;
            oscar = _closure1_slot5;
            report = {};
            report['ref'] = sizing;
            sizing = kilo.pipInnerContainer;
            report['style'] = sizing;
            report['pointerEvents'] = options;
            golf = function() { // Original name: onLayout
                _fun00003: for(var _fun00004_ip = 0; ; ) switch(_fun00004_ip) {
 0:
                    mike = _closure2_slot3;
                    zulu = mike.current;
                    mike = null;
                    if(!(mike != zulu)) { _fun00004_ip = 47; continue _fun00003 }
 18:
                    entity = _closure2_slot3;
                    zulu = entity.current;
                    mike = zulu.measure;
                    entity = function(argFoo, argBar, argBaz, argCorge, argGrault, argFred) {
                        zulu = _closure2_slot1;
                        mike = {};
                        entity = argFoo;
                        mike['x'] = entity;
                        entity = argBar;
                        mike['y'] = entity;
                        entity = argBaz;
                        mike['width'] = entity;
                        entity = argCorge;
                        mike['height'] = entity;
                        entity = argGrault;
                        mike['pageX'] = entity;
                        entity = argFred;
                        mike['pageY'] = entity;
                        entity = undefined;
                        mike = zulu.bind(entity)(mike);
                        return entity;
                    };
                    entity = mike.bind(zulu)(entity);
 47:
                    entity = undefined;
                    return entity;
                }
            };
            report['onLayout'] = golf;
            sizing = _closure1_slot0;
            golf = 19;
            golf = output[golf];
            golf = sizing.bind(tango)(golf);
            options = golf.GestureDetector;
            golf = {};
            golf['gesture'] = romeo;
            verify = output[verify];
            verify = offset.bind(tango)(verify);
            offset = verify.View;
            verify = {};
            romeo = new Array(2);
            romeo[0] = foxtrot;
            foxtrot = 20;
            foxtrot = output[foxtrot];
            sizing = sizing.bind(tango)(foxtrot);
            foxtrot = sizing.isIOS;
            sizing = foxtrot.bind(sizing)();
            foxtrot = undefined;
            if(!sizing) { _fun00002_ip = 792; continue _fun00001 }
 786:
            foxtrot = kilo.elevationShadow;
 792:
            romeo[1] = foxtrot;
            verify['style'] = romeo;
            foxtrot = _closure1_slot10;
            romeo = _closure1_slot5;
            yankee = {};
            yankee['children'] = backup;
            yankee = foxtrot.bind(tango)(romeo, yankee);
            verify['children'] = yankee;
            verify = zulu.bind(tango)(offset, verify);
            golf['children'] = verify;
            golf = zulu.bind(tango)(options, golf);
            report['children'] = golf;
            report = zulu.bind(tango)(oscar, report);
            entity['children'] = report;
            entity = zulu.bind(tango)(mike, entity);
            return entity;
        }
    };
    tango = report.bind(options)(tango);
    report = 21;
    report = golf[report];
    golf = oscar.bind(entity)(report);
    oscar = golf.fileFinishedImporting;
    report = 'modules/video_calls/native/components/PictureInPicture.tsx';
    report = oscar.bind(golf)(report);
    zulu['default'] = tango;
    zulu['DEFAULT_PIP_POSITION'] = mike;
    return entity;
})();