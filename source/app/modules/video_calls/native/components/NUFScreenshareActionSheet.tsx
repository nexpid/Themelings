// app/modules/video_calls/native/components/NUFScreenshareActionSheet.tsx
export default (function(argFoo, argBar, argBaz, argCorge, _, argFred, argPlugh) {
    report = argBar;
    zulu = argFred;
    oscar = argPlugh;
    var _closure1_slot0 = report;
    entity = argBaz;
    var _closure1_slot1 = entity;
    var _closure1_slot2 = oscar;
    entity = global;
    options = entity.Object;
    golf = options.defineProperty;
    tango = {};
    entity = true;
    tango['value'] = entity;
    entity = '__esModule';
    entity = golf.bind(options)(zulu, entity, tango);
    entity = 0;
    golf = oscar[entity];
    tango = argCorge;
    entity = undefined;
    tango = tango.bind(entity)(golf);
    tango = 1;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    golf = tango.View;
    var _closure1_slot3 = golf;
    tango = tango.Image;
    var _closure1_slot4 = tango;
    tango = 2;
    golf = oscar[tango];
    golf = report.bind(entity)(golf);
    golf = golf.jsx;
    var _closure1_slot5 = golf;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.jsxs;
    var _closure1_slot6 = tango;
    tango = 3;
    tango = oscar[tango];
    options = report.bind(entity)(tango);
    golf = options.createStyles;
    tango = {};
    verify = {'alignItems': 'center', 'padding': 16, 'paddingTop': 24};
    tango['container'] = verify;
    verify = {'textAlign': 'center', 'marginTop': 16, 'marginBottom': 8};
    tango['title'] = verify;
    offset = 18;
    verify = {'lineHeight': 18, 'textAlign': 'center', 'marginBottom': 24};
    tango['description'] = verify;
    verify = {'padding': 4, 'marginTop': 8};
    tango['skipContainer'] = verify;
    verify = {};
    verify['lineHeight'] = offset;
    tango['skip'] = verify;
    tango = golf.bind(options)(tango);
    var _closure1_slot7 = tango;
    tango = 10;
    tango = oscar[tango];
    oscar = report.bind(entity)(tango);
    report = oscar.fileFinishedImporting;
    tango = 'modules/video_calls/native/components/NUFScreenshareActionSheet.tsx';
    tango = report.bind(oscar)(tango);
    mike = function(argFoo) { // Original name: _default
        entity = argFoo;
        kilo = entity.onScreensharePress;
        romeo = entity.onSkip;
        entity = _closure1_slot7;
        tango = undefined;
        backup = entity.bind(tango)();
        zulu = _closure1_slot5;
        sizing = _closure1_slot0;
        output = _closure1_slot2;
        entity = 4;
        entity = output[entity];
        entity = sizing.bind(tango)(entity);
        mike = entity.BottomSheet;
        entity = {};
        report = true;
        entity['startExpanded'] = report;
        golf = _closure1_slot6;
        oscar = _closure1_slot3;
        report = {};
        options = backup.container;
        report['style'] = options;
        verify = _closure1_slot4;
        options = {};
        echo = _closure1_slot1;
        offset = 5;
        offset = output[offset];
        offset = echo.bind(tango)(offset);
        options['source'] = offset;
        verify = zulu.bind(tango)(verify, options);
        options = new Array(5);
        options[0] = verify;
        yankee = 6;
        verify = output[yankee];
        verify = sizing.bind(tango)(verify);
        offset = verify.Text;
        verify = {'style': null, 'accessibilityRole': 'header', 'variant': 'heading-xl/extrabold', 'color': 'header-primary'};
        foxtrot = backup.title;
        verify['style'] = foxtrot;
        foxtrot = 7;
        result = output[foxtrot];
        result = sizing.bind(tango)(result);
        source = result.intl;
        update = source.string;
        result = output[foxtrot];
        result = sizing.bind(tango)(result);
        result = result.t;
        result = result.hZdQXl;
        result = update.bind(source)(result);
        verify['children'] = result;
        verify = zulu.bind(tango)(offset, verify);
        options[1] = verify;
        verify = output[yankee];
        verify = sizing.bind(tango)(verify);
        offset = verify.Text;
        verify = {'style': null, 'variant': 'text-sm/medium', 'color': 'header-secondary'};
        result = backup.description;
        verify['style'] = result;
        result = output[foxtrot];
        result = sizing.bind(tango)(result);
        source = result.intl;
        update = source.string;
        result = output[foxtrot];
        result = sizing.bind(tango)(result);
        result = result.t;
        result = result.PMitOD;
        result = update.bind(source)(result);
        verify['children'] = result;
        verify = zulu.bind(tango)(offset, verify);
        options[2] = verify;
        result = 8;
        verify = output[result];
        offset = echo.bind(tango)(verify);
        verify = {};
        update = output[foxtrot];
        update = sizing.bind(tango)(update);
        control = update.intl;
        source = control.string;
        update = output[foxtrot];
        update = sizing.bind(tango)(update);
        update = update.t;
        update = update.QQuxIS;
        update = source.bind(control)(update);
        verify['text'] = update;
        update = output[result];
        update = echo.bind(tango)(update);
        update = update.Sizes;
        update = update.MEDIUM;
        verify['size'] = update;
        result = output[result];
        result = echo.bind(tango)(result);
        result = result.Colors;
        result = result.BRAND;
        verify['color'] = result;
        verify['onPress'] = kilo;
        verify = zulu.bind(tango)(offset, verify);
        options[3] = verify;
        verify = 9;
        verify = output[verify];
        verify = sizing.bind(tango)(verify);
        offset = verify.PressableOpacity;
        verify = {};
        verify['onPress'] = romeo;
        romeo = backup.skipContainer;
        verify['style'] = romeo;
        romeo = 'button';
        verify['accessibilityRole'] = romeo;
        romeo = output[foxtrot];
        romeo = sizing.bind(tango)(romeo);
        result = romeo.intl;
        kilo = result.string;
        romeo = output[foxtrot];
        romeo = sizing.bind(tango)(romeo);
        romeo = romeo.t;
        romeo = romeo.PwrR2N;
        romeo = kilo.bind(result)(romeo);
        verify['accessibilityLabel'] = romeo;
        yankee = output[yankee];
        yankee = sizing.bind(tango)(yankee);
        romeo = yankee.Text;
        yankee = {'style': null, 'variant': 'text-sm/semibold', 'color': 'header-secondary'};
        backup = backup.skip;
        yankee['style'] = backup;
        backup = output[foxtrot];
        backup = sizing.bind(tango)(backup);
        kilo = backup.intl;
        backup = kilo.string;
        foxtrot = output[foxtrot];
        foxtrot = sizing.bind(tango)(foxtrot);
        foxtrot = foxtrot.t;
        foxtrot = foxtrot.PwrR2N;
        foxtrot = backup.bind(kilo)(foxtrot);
        yankee['children'] = foxtrot;
        yankee = zulu.bind(tango)(romeo, yankee);
        verify['children'] = yankee;
        verify = zulu.bind(tango)(offset, verify);
        options[4] = verify;
        report['children'] = options;
        report = golf.bind(tango)(oscar, report);
        entity['children'] = report;
        entity = zulu.bind(tango)(mike, entity);
        return entity;
    };
    zulu['default'] = mike;
    return entity;
})();