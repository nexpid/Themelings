// app/modules/video_calls/native/components/ScreenshareParticipant.tsx
export default (function(argFoo, argBar, argBaz, argCorge, _, argFred, argPlugh) {
    report = argBar;
    romeo = argBaz;
    zulu = argFred;
    oscar = argPlugh;
    var _closure1_slot0 = report;
    var _closure1_slot1 = romeo;
    var _closure1_slot2 = oscar;
    entity = global;
    options = entity.Object;
    golf = options.defineProperty;
    tango = {};
    entity = true;
    tango['value'] = entity;
    entity = '__esModule';
    entity = golf.bind(options)(zulu, entity, tango);
    entity = 0;
    golf = oscar[entity];
    tango = argCorge;
    entity = undefined;
    tango = tango.bind(entity)(golf);
    var _closure1_slot3 = tango;
    tango = 1;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    golf = tango.View;
    var _closure1_slot4 = golf;
    tango = tango.Image;
    var _closure1_slot5 = tango;
    tango = 2;
    golf = oscar[tango];
    golf = report.bind(entity)(golf);
    golf = golf.jsx;
    var _closure1_slot6 = golf;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.jsxs;
    var _closure1_slot7 = tango;
    tango = 3;
    tango = oscar[tango];
    verify = report.bind(entity)(tango);
    options = verify.createStyles;
    golf = {};
    tango = {'alignItems': 'center', 'justifyContent': 'center', 'flex': 1};
    yankee = 4;
    offset = oscar[yankee];
    offset = romeo.bind(entity)(offset);
    offset = offset.colors;
    offset = offset.BACKGROUND_PRIMARY;
    tango['backgroundColor'] = offset;
    golf['container'] = tango;
    offset = {};
    tango = 12;
    offset['marginBottom'] = tango;
    golf['image'] = offset;
    offset = {'textAlign': 'center', 'marginBottom': 8};
    golf['title'] = offset;
    offset = {'lineHeight': 18, 'textAlign': 'center', 'marginBottom': 16};
    golf['description'] = offset;
    offset = {'paddingHorizontal': 16, 'alignSelf': 'center', 'flexGrow': 0};
    yankee = oscar[yankee];
    yankee = romeo.bind(entity)(yankee);
    yankee = yankee.radii;
    yankee = yankee.round;
    offset['borderRadius'] = yankee;
    golf['button'] = offset;
    golf = options.bind(verify)(golf);
    var _closure1_slot8 = golf;
    tango = oscar[tango];
    oscar = report.bind(entity)(tango);
    report = oscar.fileFinishedImporting;
    tango = 'modules/video_calls/native/components/ScreenshareParticipant.tsx';
    tango = report.bind(oscar)(tango);
    mike = function(argFoo) { // Original name: _default
        zulu = argFoo;
        oscar = zulu.participant;
        var _closure2_slot0 = oscar;
        mike = zulu.onSingleTap;
        var _closure2_slot1 = mike;
        golf = zulu.onDoubleTap;
        var _closure2_slot2 = golf;
        offset = zulu.containerStyle;
        tango = _closure1_slot3;
        report = tango.useCallback;
        zulu = new Array(2);
        zulu[0] = mike;
        zulu[1] = oscar;
        mike = function() {
            _fun103662: for(var _fun103662_ip = 0; ; ) switch(_fun103662_ip) {
 0:
                zulu = _closure2_slot1;
                entity = null;
                zulu = entity == zulu;
                tango = undefined;
                entity = undefined;
                if(zulu) { _fun103662_ip = 33; continue _fun103662 }
 20:
                zulu = _closure2_slot1;
                mike = _closure2_slot0;
                entity = zulu.bind(tango)(mike);
 33:
                return entity;
            }
        };
        report = report.bind(tango)(mike, zulu);
        zulu = tango.useCallback;
        mike = new Array(2);
        mike[0] = golf;
        mike[1] = oscar;
        entity = function() {
            _fun103663: for(var _fun103663_ip = 0; ; ) switch(_fun103663_ip) {
 0:
                zulu = _closure2_slot2;
                entity = null;
                zulu = entity == zulu;
                tango = undefined;
                entity = undefined;
                if(zulu) { _fun103663_ip = 33; continue _fun103663 }
 20:
                zulu = _closure2_slot2;
                mike = _closure2_slot0;
                entity = zulu.bind(tango)(mike);
 33:
                return entity;
            }
        };
        zulu = zulu.bind(tango)(entity, mike);
        kilo = _closure1_slot1;
        foxtrot = _closure1_slot2;
        entity = 5;
        entity = foxtrot[entity];
        tango = undefined;
        mike = kilo.bind(tango)(entity);
        entity = {};
        entity['onSingleTapStart'] = report;
        entity['onDoubleTapStart'] = zulu;
        report = mike.bind(tango)(entity);
        entity = _closure1_slot8;
        sizing = entity.bind(tango)();
        zulu = _closure1_slot6;
        romeo = _closure1_slot0;
        entity = 6;
        entity = foxtrot[entity];
        entity = romeo.bind(tango)(entity);
        mike = entity.GestureDetector;
        entity = {};
        entity['gesture'] = report;
        golf = _closure1_slot7;
        oscar = _closure1_slot4;
        report = {};
        yankee = sizing.container;
        verify = new Array(2);
        verify[0] = yankee;
        verify[1] = offset;
        report['style'] = verify;
        verify = _closure1_slot5;
        options = {};
        offset = 7;
        offset = foxtrot[offset];
        offset = kilo.bind(tango)(offset);
        options['source'] = offset;
        offset = sizing.image;
        options['style'] = offset;
        verify = zulu.bind(tango)(verify, options);
        options = new Array(4);
        options[0] = verify;
        verify = 8;
        offset = foxtrot[verify];
        offset = romeo.bind(tango)(offset);
        backup = offset.Text;
        offset = {'style': null, 'accessibilityRole': 'header', 'variant': 'heading-lg/extrabold', 'color': 'header-primary'};
        yankee = sizing.title;
        offset['style'] = yankee;
        yankee = 9;
        output = foxtrot[yankee];
        output = romeo.bind(tango)(output);
        echo = output.intl;
        result = echo.string;
        output = foxtrot[yankee];
        output = romeo.bind(tango)(output);
        output = output.t;
        output = output.gMOwoq;
        output = result.bind(echo)(output);
        offset['children'] = output;
        offset = zulu.bind(tango)(backup, offset);
        options[1] = offset;
        verify = foxtrot[verify];
        verify = romeo.bind(tango)(verify);
        offset = verify.Text;
        verify = {'style': null, 'variant': 'text-sm/medium', 'color': 'interactive-normal'};
        backup = sizing.description;
        verify['style'] = backup;
        backup = foxtrot[yankee];
        backup = romeo.bind(tango)(backup);
        result = backup.intl;
        output = result.string;
        backup = foxtrot[yankee];
        backup = romeo.bind(tango)(backup);
        backup = backup.t;
        backup = backup.dKeLGh;
        backup = output.bind(result)(backup);
        verify['children'] = backup;
        verify = zulu.bind(tango)(offset, verify);
        options[2] = verify;
        backup = 10;
        verify = foxtrot[backup];
        offset = kilo.bind(tango)(verify);
        verify = {};
        sizing = sizing.button;
        verify['style'] = sizing;
        backup = foxtrot[backup];
        backup = kilo.bind(tango)(backup);
        backup = backup.Colors;
        backup = backup.PRIMARY;
        verify['color'] = backup;
        backup = foxtrot[yankee];
        backup = romeo.bind(tango)(backup);
        kilo = backup.intl;
        backup = kilo.string;
        yankee = foxtrot[yankee];
        yankee = romeo.bind(tango)(yankee);
        yankee = yankee.t;
        yankee = yankee.CpkXwc;
        yankee = backup.bind(kilo)(yankee);
        verify['text'] = yankee;
        yankee = 11;
        yankee = foxtrot[yankee];
        yankee = romeo.bind(tango)(yankee);
        yankee = yankee.stopScreenshare;
        verify['onPress'] = yankee;
        verify = zulu.bind(tango)(offset, verify);
        options[3] = verify;
        report['children'] = options;
        report = golf.bind(tango)(oscar, report);
        entity['children'] = report;
        entity = zulu.bind(tango)(mike, entity);
        return entity;
    };
    zulu['default'] = mike;
    return entity;
})();