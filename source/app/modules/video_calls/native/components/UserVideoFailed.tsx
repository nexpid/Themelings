// app/modules/video_calls/native/components/UserVideoFailed.tsx
export default (function(argFoo, argBar, argBaz, _, __, argFre, argPlu) {
    report = argBar;
    romeon = argBaz;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    var _closure1_slot1 = romeon;
    var _closure1_slot2 = oscard;
    entity = global;
    option = entity.Object;
    golfie = option.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(option)(zuuluu, entity, tangon);
    entity = 0;
    tangon = oscard[entity];
    entity = undefined;
    tangon = report.bind(entity)(tangon);
    tangon = tangon.View;
    var _closure1_slot3 = tangon;
    tangon = 1;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.VideoToggleState;
    var _closure1_slot4 = tangon;
    tangon = 2;
    golfie = oscard[tangon];
    golfie = report.bind(entity)(golfie);
    golfie = golfie.jsx;
    var _closure1_slot5 = golfie;
    golfie = oscard[tangon];
    golfie = report.bind(entity)(golfie);
    golfie = golfie.Fragment;
    var _closure1_slot6 = golfie;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.jsxs;
    var _closure1_slot7 = tangon;
    tangon = 3;
    tangon = oscard[tangon];
    option = report.bind(entity)(tangon);
    golfie = option.createStyles;
    tangon = {};
    verify = {'alignItems': 'center', 'justifyContent': 'center', 'backgroundColor': null, 'padding': 8};
    offset = 'center';
    yankee = 4;
    yankee = oscard[yankee];
    yankee = romeon.bind(entity)(yankee);
    yankee = yankee.unsafe_rawColors;
    yankee = yankee.PRIMARY_700;
    verify['backgroundColor'] = yankee;
    tangon['container'] = verify;
    verify = {'marginBottom': 8, 'width': '100%', 'resizeMode': 'contain'};
    tangon['placeholderImage'] = verify;
    verify = {};
    verify['textAlign'] = offset;
    tangon['placeholderText'] = verify;
    verify = {'marginTop': 16, 'alignSelf': 'center'};
    tangon['button'] = verify;
    tangon = golfie.bind(option)(tangon);
    var _closure1_slot8 = tangon;
    tangon = 14;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/video_calls/native/components/UserVideoFailed.tsx';
    tangon = report.bind(oscard)(tangon);
    michal = function(argFoo) { // Original name: UserVideoFailed
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            tangon = argFoo;
            entity = tangon.userId;
            var _closure2_slot0 = entity;
            oscard = tangon.style;
            zuuluu = tangon.avError;
            verify = tangon.removeRetryButton;
            golfie = tangon.removeSplashImage;
            michal = {'userId': 0, 'style': 0, 'avError': 0, 'removeRetryButton': 0, 'removeSplashImage': 0};
            sequen = null;
            config = michal;
            entity = silentSetPrototypeOf(config, sequen);
            config = {};
            sequen = tangon;
            vacuum = michal;
            sequen = copyDataProperties(config, sequen, vacuum);
            michal = _closure1_slot0;
            romeon = _closure1_slot2;
            entity = 5;
            entity = romeon[entity];
            tangon = undefined;
            yankee = michal.bind(tangon)(entity);
            report = yankee.useAVErrorExperiment;
            entity = {};
            backup = 'VideoEmptyState';
            entity['location'] = backup;
            entity = report.bind(yankee)(entity);
            report = entity.avErrorUIEnabled;
            entity = _closure1_slot8;
            yankee = entity.bind(tangon)();
            entity = 6;
            entity = romeon[entity];
            michal = michal.bind(tangon)(entity);
            entity = michal.getErrorInfo;
            entity = entity.bind(michal)(zuuluu);
            echoed = entity.errorCode;
            zuuluu = _closure1_slot7;
            michal = _closure1_slot3;
            entity = {};
            config = entity;
            option = copyDataProperties(config, sequen);
            romeon = yankee.container;
            option = new Array(2);
            option[0] = romeon;
            option[1] = oscard;
            oscard = 'style';
            entity[oscard] = option;
            option = _closure1_slot6;
            oscard = {};
            golfie = !golfie;
            if(!golfie) { _fun00002_ip = 266; continue _fun00001 }
 218:
            kiloes = _closure1_slot5;
            backup = _closure1_slot0;
            sizing = _closure1_slot2;
            romeon = 7;
            romeon = sizing[romeon];
            romeon = backup.bind(tangon)(romeon);
            backup = romeon.StreamFailed;
            romeon = {};
            sizing = yankee.placeholderImage;
            romeon['style'] = sizing;
            golfie = kiloes.bind(tangon)(backup, romeon);
 266:
            romeon = new Array(2);
            romeon[0] = golfie;
            sizing = _closure1_slot5;
            ctrled = _closure1_slot0;
            output = _closure1_slot2;
            golfie = 8;
            backup = output[golfie];
            backup = ctrled.bind(tangon)(backup);
            kiloes = backup.Text;
            backup = {'variant': 'text-md/semibold', 'color': 'text-primary'};
            result = 9;
            update = output[result];
            update = ctrled.bind(tangon)(update);
            source = update.intl;
            update = source.string;
            output = output[result];
            output = ctrled.bind(tangon)(output);
            output = output.t;
            output = output.z+mxvr;
            output = update.bind(source)(output);
            backup['children'] = output;
            backup = sizing.bind(tangon)(kiloes, backup);
            romeon[1] = backup;
            oscard['children'] = romeon;
            option = zuuluu.bind(tangon)(option, oscard);
            oscard = new Array(3);
            oscard[0] = option;
            if(!report) { _fun00002_ip = 503; continue _fun00001 }
 401:
            romeon = _closure1_slot5;
            kiloes = _closure1_slot0;
            backup = _closure1_slot2;
            golfie = backup[golfie];
            golfie = kiloes.bind(tangon)(golfie);
            option = golfie.Text;
            golfie = {'variant': 'text-sm/semibold', 'color': 'text-muted', 'selectable': true};
            sizing = backup[result];
            sizing = kiloes.bind(tangon)(sizing);
            output = sizing.intl;
            sizing = output.formatToPlainString;
            backup = backup[result];
            backup = kiloes.bind(tangon)(backup);
            backup = backup.t;
            kiloes = backup.ejOT9/;
            backup = {};
            backup['errorCode'] = echoed;
            backup = sizing.bind(output)(kiloes, backup);
            golfie['children'] = backup;
            report = romeon.bind(tangon)(option, golfie);
 503:
            oscard[1] = report;
            option = _closure1_slot5;
            golfie = _closure1_slot3;
            report = {};
            yankee = yankee.button;
            report['style'] = yankee;
            verify = !verify;
            if(!verify) { _fun00002_ip = 640; continue _fun00001 }
 533:
            romeon = _closure1_slot5;
            output = _closure1_slot0;
            backup = _closure1_slot2;
            offset = 10;
            offset = backup[offset];
            offset = output.bind(tangon)(offset);
            yankee = offset.Button;
            offset = {};
            kiloes = 'secondary';
            offset['variant'] = kiloes;
            kiloes = backup[result];
            kiloes = output.bind(tangon)(kiloes);
            sizing = kiloes.intl;
            kiloes = sizing.string;
            backup = backup[result];
            backup = output.bind(tangon)(backup);
            backup = backup.t;
            backup = backup.hxmQ/f;
            backup = kiloes.bind(sizing)(backup);
            offset['text'] = backup;
            foxtra = function() { // Original name: onPress
                zuuluu = _closure1_slot0;
                option = _closure1_slot2;
                entity = 11;
                michal = option[entity];
                entity = undefined;
                verify = zuuluu.bind(entity)(michal);
                oscard = verify.clearVideoStreamTimeout;
                michal = 12;
                report = option[michal];
                report = zuuluu.bind(entity)(report);
                report = report.MediaEngineContextTypes;
                report = report.DEFAULT;
                golfie = _closure2_slot0;
                report = oscard.bind(verify)(report, golfie);
                oscard = _closure1_slot1;
                report = 13;
                report = option[report];
                oscard = oscard.bind(entity)(report);
                report = oscard.setDisableLocalVideo;
                tangon = _closure1_slot4;
                romeon = tangon.DISABLED;
                michal = option[michal];
                michal = zuuluu.bind(entity)(michal);
                michal = michal.MediaEngineContextTypes;
                yankee = michal.DEFAULT;
                offset = false;
                backup = oscard;
                foxtra = golfie;
                michal = backup[report](foxtra, romeon, yankee, offset, verify);
                michal = global;
                tangon = michal.setTimeout;
                zuuluu = function() {
                    tangon = _closure1_slot1;
                    option = _closure1_slot2;
                    entity = 13;
                    zuuluu = option[entity];
                    entity = undefined;
                    golfie = tangon.bind(entity)(zuuluu);
                    oscard = golfie.setDisableLocalVideo;
                    report = _closure2_slot0;
                    zuuluu = _closure1_slot4;
                    yankee = zuuluu.MANUAL_ENABLED;
                    zuuluu = _closure1_slot0;
                    michal = 12;
                    michal = option[michal];
                    michal = zuuluu.bind(entity)(michal);
                    michal = michal.MediaEngineContextTypes;
                    offset = michal.DEFAULT;
                    verify = false;
                    foxtra = golfie;
                    romeon = report;
                    michal = foxtra[oscard](romeon, yankee, offset, verify, option);
                    return entity;
                };
                michal = 1000;
                michal = tangon.bind(entity)(zuuluu, michal);
                return entity;
            };
            offset['onPress'] = foxtra;
            verify = romeon.bind(tangon)(yankee, offset);
 640:
            report['children'] = verify;
            report = option.bind(tangon)(golfie, report);
            oscard[2] = report;
            report = 'children';
            entity[report] = oscard;
            entity = zuuluu.bind(tangon)(michal, entity);
            return entity;
        }
    };
    zuuluu['default'] = michal;
    return entity;
})();