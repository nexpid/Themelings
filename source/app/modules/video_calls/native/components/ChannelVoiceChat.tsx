// app/modules/video_calls/native/components/ChannelVoiceChat.tsx
export default (function(argFoo, argBar, argBaz, argCorge, _, argFred, argPlugh) {
    report = argBar;
    romeo = argBaz;
    zulu = argFred;
    oscar = argPlugh;
    var _closure1_slot0 = report;
    var _closure1_slot1 = romeo;
    var _closure1_slot2 = oscar;
    entity = global;
    options = entity.Object;
    golf = options.defineProperty;
    tango = {};
    entity = true;
    tango['value'] = entity;
    entity = '__esModule';
    entity = golf.bind(options)(zulu, entity, tango);
    entity = 0;
    golf = oscar[entity];
    tango = argCorge;
    entity = undefined;
    golf = tango.bind(entity)(golf);
    var _closure1_slot3 = golf;
    backup = 1;
    tango = oscar[backup];
    tango = report.bind(entity)(tango);
    tango = tango.View;
    var _closure1_slot4 = tango;
    tango = 2;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.useIsVoiceChatFocused;
    var _closure1_slot5 = tango;
    tango = 3;
    options = oscar[tango];
    options = report.bind(entity)(options);
    options = options.jsx;
    var _closure1_slot6 = options;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.jsxs;
    var _closure1_slot7 = tango;
    tango = 4;
    tango = oscar[tango];
    verify = report.bind(entity)(tango);
    options = verify.createStyles;
    tango = {};
    offset = {'flex': 1, 'backgroundColor': null, 'alignSelf': 'stretch'};
    yankee = 5;
    foxtrot = oscar[yankee];
    foxtrot = romeo.bind(entity)(foxtrot);
    foxtrot = foxtrot.colors;
    foxtrot = foxtrot.BACKGROUND_PRIMARY;
    offset['backgroundColor'] = foxtrot;
    foxtrot = 'stretch';
    tango['chat'] = offset;
    offset = {};
    offset['flex'] = backup;
    tango['flex'] = offset;
    offset = {};
    backup = 44;
    offset['height'] = backup;
    backup = oscar[yankee];
    backup = romeo.bind(entity)(backup);
    backup = backup.colors;
    backup = backup.BACKGROUND_MOBILE_SECONDARY;
    offset['backgroundColor'] = backup;
    tango['chatHeaderSpacer'] = offset;
    offset = {'flexDirection': 'row', 'alignSelf': 'stretch', 'height': 44, 'backgroundColor': null, 'alignItems': 'center', 'justifyContent': 'flex-start', 'position': 'absolute', 'left': 0, 'right': 0, 'paddingHorizontal': 16};
    backup = oscar[yankee];
    backup = romeo.bind(entity)(backup);
    backup = backup.colors;
    backup = backup.BACKGROUND_MOBILE_SECONDARY;
    offset['backgroundColor'] = backup;
    tango['chatHeader'] = offset;
    offset = {'width': 32, 'height': 32, 'alignItems': 'flex-start', 'justifyContent': 'center'};
    tango['chatHeaderBackIconContainer'] = offset;
    offset = {'alignSelf': 'stretch', 'flex': 1, 'justifyContent': 'center', 'marginStart': 16};
    tango['chatHeaderTitleContainer'] = offset;
    offset = {};
    offset['alignSelf'] = foxtrot;
    backup = oscar[yankee];
    backup = romeo.bind(entity)(backup);
    backup = backup.colors;
    backup = backup.BACKGROUND_MOBILE_SECONDARY;
    offset['backgroundColor'] = backup;
    tango['safeAreaTop'] = offset;
    offset = {};
    offset['alignSelf'] = foxtrot;
    yankee = oscar[yankee];
    yankee = romeo.bind(entity)(yankee);
    yankee = yankee.colors;
    yankee = yankee.BACKGROUND_PRIMARY;
    offset['backgroundColor'] = yankee;
    tango['safeAreaBottom'] = offset;
    tango = options.bind(verify)(tango);
    var _closure1_slot8 = tango;
    tango = golf.memo;
    mike = function(argFoo) {
        _fun86513: for(var _fun86513_ip = 0; ; ) switch(_fun86513_ip) {
 0:
            mike = argFoo;
            zulu = mike.channel;
            echo = zulu.id;
            var _closure2_slot0 = echo;
            update = zulu.guild_id;
            var _closure2_slot1 = update;
            report = mike.channel;
            result = mike.inModal;
            tango = undefined;
            if(!(result === tango)) { _fun86513_ip = 47; continue _fun86513 }
 45:
            result = false;
 47:
            mike = _closure1_slot8;
            output = mike.bind(tango)();
            mike = _closure1_slot5;
            sequence = mike.bind(tango)();
            oscar = _closure1_slot3;
            zulu = oscar.useEffect;
            mike = new Array(2);
            mike[0] = echo;
            mike[1] = update;
            entity = function() {
                zulu = _closure1_slot1;
                mike = _closure1_slot2;
                entity = 6;
                mike = mike[entity];
                entity = undefined;
                tango = zulu.bind(entity)(mike);
                zulu = tango.fetchMessages;
                mike = {};
                oscar = _closure2_slot1;
                mike['guildId'] = oscar;
                report = _closure2_slot0;
                mike['channelId'] = report;
                mike = zulu.bind(tango)(mike);
                return entity;
            };
            entity = zulu.bind(oscar)(entity, mike);
            mike = _closure1_slot1;
            zulu = _closure1_slot2;
            entity = 7;
            entity = zulu[entity];
            entity = mike.bind(tango)(entity);
            entity = entity.bind(tango)();
            sizing = entity.top;
            mike = _closure1_slot0;
            entity = 8;
            entity = zulu[entity];
            mike = mike.bind(tango)(entity);
            entity = mike.useVoiceChatNavigationContext;
            entity = entity.bind(mike)();
            verify = null;
            mike = verify == entity;
            control = undefined;
            if(mike) { _fun86513_ip = 172; continue _fun86513 }
 166:
            control = entity.openVoice;
 172:
            if(!(verify == control)) { _fun86513_ip = 202; continue _fun86513 }
 176:
            mike = _closure1_slot1;
            zulu = _closure1_slot2;
            entity = 9;
            entity = zulu[entity];
            entity = mike.bind(tango)(entity);
            control = entity.noop;
 202:
            mike = _closure1_slot0;
            zulu = _closure1_slot2;
            entity = 10;
            entity = zulu[entity];
            mike = mike.bind(tango)(entity);
            entity = mike.useIsConnectedToVoiceChannel;
            kilo = entity.bind(mike)(report);
            mike = _closure1_slot3;
            entity = mike.useRef;
            foxtrot = entity.bind(mike)(verify);
            mike = _closure1_slot1;
            entity = 11;
            entity = zulu[entity];
            entity = mike.bind(tango)(entity);
            vacuum = entity.bind(tango)();
            zulu = _closure1_slot7;
            mike = _closure1_slot4;
            entity = {};
            report = 'no-hide-descendants';
            if(!sequence) { _fun86513_ip = 292; continue _fun86513 }
 286:
            report = 'yes';
 292:
            entity['importantForAccessibility'] = report;
            report = !sequence;
            entity['accessibilityElementsHidden'] = report;
            report = output.chat;
            entity['style'] = report;
            golf = _closure1_slot6;
            oscar = _closure1_slot1;
            offset = _closure1_slot2;
            report = 12;
            report = offset[report];
            oscar = oscar.bind(tango)(report);
            source = true;
            report = {'absolute': true, 'tall': true};
            oscar = golf.bind(tango)(oscar, report);
            report = new Array(2);
            report[0] = oscar;
            options = _closure1_slot7;
            golf = _closure1_slot0;
            oscar = 13;
            oscar = offset[oscar];
            oscar = golf.bind(tango)(oscar);
            golf = oscar.ChannelContainer;
            oscar = {};
            oscar['guildId'] = update;
            oscar['channelId'] = echo;
            offset = null;
            if(result) { _fun86513_ip = 484; continue _fun86513 }
 406:
            romeo = _closure1_slot6;
            yankee = _closure1_slot1;
            config = _closure1_slot2;
            verify = 14;
            verify = config[verify];
            yankee = yankee.bind(tango)(verify);
            verify = {};
            sequence = !sequence;
            if(!sequence) { _fun86513_ip = 440; continue _fun86513 }
 438:
            sequence = undefined;
 440:
            verify['hidden'] = sequence;
            verify['animated'] = source;
            if(kilo) { _fun86513_ip = 467; continue _fun86513 }
 453:
            kilo = 'dark-content';
            source = 'dark';
            if(!(source === vacuum)) { _fun86513_ip = 473; continue _fun86513 }
 467:
            kilo = 'light-content';
 473:
            verify['barStyle'] = kilo;
            offset = romeo.bind(tango)(yankee, verify);
 484:
            verify = new Array(5);
            verify[0] = offset;
            romeo = _closure1_slot6;
            yankee = _closure1_slot4;
            offset = {};
            source = output.safeAreaTop;
            kilo = new Array(2);
            kilo[0] = source;
            source = {};
            source['height'] = sizing;
            vacuum = undefined;
            if(!result) { _fun86513_ip = 531; continue _fun86513 }
 527:
            vacuum = 'none';
 531:
            source['display'] = vacuum;
            kilo[1] = source;
            offset['style'] = kilo;
            offset = romeo.bind(tango)(yankee, offset);
            verify[1] = offset;
            romeo = _closure1_slot6;
            yankee = _closure1_slot4;
            offset = {};
            source = output.chatHeaderSpacer;
            kilo = new Array(2);
            kilo[0] = source;
            source = {};
            vacuum = undefined;
            if(!result) { _fun86513_ip = 588; continue _fun86513 }
 584:
            vacuum = 'none';
 588:
            source['display'] = vacuum;
            kilo[1] = source;
            offset['style'] = kilo;
            offset = romeo.bind(tango)(yankee, offset);
            verify[2] = offset;
            romeo = _closure1_slot6;
            yankee = _closure1_slot1;
            kilo = _closure1_slot2;
            offset = 15;
            offset = kilo[offset];
            yankee = yankee.bind(tango)(offset);
            offset = {};
            offset['guildId'] = update;
            offset['channelId'] = echo;
            offset['chatInputRef'] = foxtrot;
            foxtrot = 'voice-panel';
            offset['screenIndex'] = foxtrot;
            offset = romeo.bind(tango)(yankee, offset);
            verify[3] = offset;
            romeo = _closure1_slot7;
            yankee = _closure1_slot4;
            offset = {};
            kilo = output.chatHeader;
            foxtrot = new Array(2);
            foxtrot[0] = kilo;
            kilo = {};
            kilo['top'] = sizing;
            sizing = undefined;
            if(!result) { _fun86513_ip = 709; continue _fun86513 }
 705:
            sizing = 'none';
 709:
            kilo['display'] = sizing;
            foxtrot[1] = kilo;
            offset['style'] = foxtrot;
            sizing = _closure1_slot6;
            result = _closure1_slot0;
            source = _closure1_slot2;
            foxtrot = 16;
            foxtrot = source[foxtrot];
            foxtrot = result.bind(tango)(foxtrot);
            kilo = foxtrot.PressableOpacity;
            foxtrot = {};
            vacuum = 'button';
            foxtrot['accessibilityRole'] = vacuum;
            foxtrot['onPress'] = control;
            control = 17;
            vacuum = source[control];
            vacuum = result.bind(tango)(vacuum);
            sequence = vacuum.intl;
            vacuum = sequence.string;
            control = source[control];
            control = result.bind(tango)(control);
            control = control.t;
            control = control.13/7kZ;
            control = vacuum.bind(sequence)(control);
            foxtrot['accessibilityLabel'] = control;
            control = output.chatHeaderBackIconContainer;
            foxtrot['style'] = control;
            config = _closure1_slot1;
            sequence = 18;
            control = source[sequence];
            vacuum = config.bind(tango)(control);
            control = {};
            record = 19;
            record = source[record];
            record = config.bind(tango)(record);
            control['source'] = record;
            sequence = source[sequence];
            sequence = config.bind(tango)(sequence);
            sequence = sequence.Sizes;
            sequence = sequence.MEDIUM;
            control['size'] = sequence;
            control = sizing.bind(tango)(vacuum, control);
            foxtrot['children'] = control;
            kilo = sizing.bind(tango)(kilo, foxtrot);
            foxtrot = new Array(2);
            foxtrot[0] = kilo;
            kilo = _closure1_slot4;
            backup = {};
            output = output.chatHeaderTitleContainer;
            backup['style'] = output;
            output = 20;
            output = source[output];
            output = result.bind(tango)(output);
            result = output.ChannelTitle;
            output = {};
            output['guildId'] = update;
            output['channelId'] = echo;
            output = sizing.bind(tango)(result, output);
            backup['children'] = output;
            backup = sizing.bind(tango)(kilo, backup);
            foxtrot[1] = backup;
            offset['children'] = foxtrot;
            offset = romeo.bind(tango)(yankee, offset);
            verify[4] = offset;
            oscar['children'] = verify;
            oscar = options.bind(tango)(golf, oscar);
            report[1] = oscar;
            entity['children'] = report;
            entity = zulu.bind(tango)(mike, entity);
            return entity;
        }
    };
    mike = tango.bind(golf)(mike);
    tango = 21;
    tango = oscar[tango];
    oscar = report.bind(entity)(tango);
    report = oscar.fileFinishedImporting;
    tango = 'modules/video_calls/native/components/ChannelVoiceChat.tsx';
    tango = report.bind(oscar)(tango);
    zulu['default'] = mike;
    return entity;
})();