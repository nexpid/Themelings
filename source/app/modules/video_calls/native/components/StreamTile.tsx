// app/modules/video_calls/native/components/StreamTile.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    oscard = argBar;
    romeon = argBaz;
    zuuluu = argFre;
    golfie = argPlu;
    var _closure1_slot0 = oscard;
    var _closure1_slot1 = romeon;
    var _closure1_slot2 = golfie;
    entity = global;
    option = entity.Object;
    report = option.defineProperty;
    michal = {};
    entity = true;
    michal['value'] = entity;
    entity = '__esModule';
    entity = report.bind(option)(zuuluu, entity, michal);
    entity = 0;
    report = golfie[entity];
    michal = argCor;
    entity = undefined;
    verify = michal.bind(entity)(report);
    var _closure1_slot3 = verify;
    backup = 1;
    michal = golfie[backup];
    michal = oscard.bind(entity)(michal);
    report = michal.View;
    var _closure1_slot4 = report;
    foxtra = michal.StyleSheet;
    var _closure1_slot5 = foxtra;
    michal = 2;
    michal = golfie[michal];
    michal = romeon.bind(entity)(michal);
    var _closure1_slot6 = michal;
    michal = 3;
    michal = golfie[michal];
    michal = romeon.bind(entity)(michal);
    var _closure1_slot7 = michal;
    michal = 4;
    michal = golfie[michal];
    michal = oscard.bind(entity)(michal);
    michal = michal.ApplicationStreamStates;
    var _closure1_slot8 = michal;
    michal = 5;
    report = golfie[michal];
    report = oscard.bind(entity)(report);
    report = report.jsx;
    var _closure1_slot9 = report;
    report = golfie[michal];
    report = oscard.bind(entity)(report);
    report = report.jsxs;
    var _closure1_slot10 = report;
    michal = golfie[michal];
    michal = oscard.bind(entity)(michal);
    michal = michal.Fragment;
    var _closure1_slot11 = michal;
    michal = 6;
    michal = golfie[michal];
    option = oscard.bind(entity)(michal);
    report = option.createStyles;
    michal = {};
    offset = {'flex': 1, 'alignItems': 'center', 'justifyContent': 'center', 'overflow': 'hidden', 'width': '100%'};
    kiloes = 'center';
    yankee = 7;
    sizing = golfie[yankee];
    sizing = romeon.bind(entity)(sizing);
    sizing = sizing.colors;
    sizing = sizing.BLACK;
    offset['backgroundColor'] = sizing;
    michal['container'] = offset;
    offset = {};
    echoed = foxtra.absoluteFillObject;
    update = offset;
    foxtra = copyDataProperties(update, echoed);
    foxtra = 'flex';
    offset[foxtra] = backup;
    foxtra = 8;
    backup = 'padding';
    offset[backup] = foxtra;
    backup = 'alignItems';
    offset[backup] = kiloes;
    backup = 'justifyContent';
    offset[backup] = kiloes;
    backup = golfie[foxtra];
    output = oscard.bind(entity)(backup);
    sizing = output.hexWithOpacity;
    backup = golfie[yankee];
    backup = romeon.bind(entity)(backup);
    backup = backup.unsafe_rawColors;
    kiloes = backup.BLACK_500;
    backup = 0.7;
    kiloes = sizing.bind(output)(kiloes, backup);
    backup = 'backgroundColor';
    offset[backup] = kiloes;
    michal['screenMessageContainer'] = offset;
    offset = {};
    backup = 18;
    offset['lineHeight'] = backup;
    michal['screenMessageText'] = offset;
    offset = {'color': null, 'fontSize': 14, 'lineHeight': 18, 'textAlign': 'center'};
    backup = golfie[yankee];
    backup = romeon.bind(entity)(backup);
    backup = backup.unsafe_rawColors;
    backup = backup.PRIMARY_300;
    offset['color'] = backup;
    michal['screenMessageSubtext'] = offset;
    offset = {'position': 'absolute', 'bottom': 8, 'right': 8, 'backgroundColor': null, 'borderRadius': null, 'width': 24, 'height': 24, 'justifyContent': 'center', 'alignItems': 'center'};
    foxtra = golfie[foxtra];
    sizing = oscard.bind(entity)(foxtra);
    kiloes = sizing.hexWithOpacity;
    foxtra = golfie[yankee];
    foxtra = romeon.bind(entity)(foxtra);
    foxtra = foxtra.unsafe_rawColors;
    backup = foxtra.PRIMARY_700;
    foxtra = 0.5;
    foxtra = kiloes.bind(sizing)(backup, foxtra);
    offset['backgroundColor'] = foxtra;
    yankee = golfie[yankee];
    yankee = romeon.bind(entity)(yankee);
    yankee = yankee.radii;
    yankee = yankee.md;
    offset['borderRadius'] = yankee;
    michal['statusWrapper'] = offset;
    offset = {'position': 'absolute', 'right': 8, 'top': 8};
    michal['liveTag'] = offset;
    michal = report.bind(option)(michal);
    var _closure1_slot12 = michal;
    michal = function(argFoo) { // Original name: StreamTextOverlay
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            entity = argFoo;
            verify = entity.title;
            offset = entity.subtext;
            entity = _closure1_slot12;
            tangon = undefined;
            yankee = entity.bind(tangon)();
            zuuluu = _closure1_slot10;
            michal = _closure1_slot4;
            entity = {};
            report = yankee.screenMessageContainer;
            entity['style'] = report;
            option = _closure1_slot9;
            oscard = _closure1_slot0;
            romeon = _closure1_slot2;
            report = 9;
            report = romeon[report];
            report = oscard.bind(tangon)(report);
            oscard = report.Text;
            report = {'style': null, 'variant': 'text-md/semibold', 'color': 'always-white'};
            romeon = yankee.screenMessageText;
            report['style'] = romeon;
            report['children'] = verify;
            oscard = option.bind(tangon)(oscard, report);
            report = new Array(2);
            report[0] = oscard;
            oscard = null;
            option = oscard != offset;
            if(!option) { _fun00002_ip = 181; continue _fun00001 }
 129:
            verify = _closure1_slot9;
            option = _closure1_slot0;
            romeon = _closure1_slot2;
            golfie = 10;
            golfie = romeon[golfie];
            golfie = option.bind(tangon)(golfie);
            option = golfie.LegacyText;
            golfie = {};
            yankee = yankee.screenMessageSubtext;
            golfie['style'] = yankee;
            golfie['children'] = offset;
            oscard = verify.bind(tangon)(option, golfie);
 181:
            report[1] = oscard;
            entity['children'] = report;
            entity = zuuluu.bind(tangon)(michal, entity);
            return entity;
        }
    };
    var _closure1_slot13 = michal;
    option = verify.memo;
    report = function(argFoo) {
        _fun00003: for(var _fun00004_ip = 0; ; ) switch(_fun00004_ip) {
 0:
            entity = argFoo;
            michal = entity.participant;
            var _closure2_slot0 = michal;
            result = entity.streamId;
            foxtra = entity.user;
            echoed = entity.resizeMode;
            output = entity.gestureEnabled;
            verify = entity.removeEmptyStateButton;
            golfie = entity.removeEmptyStateImage;
            entity = _closure1_slot12;
            tangon = undefined;
            entity = entity.bind(tangon)();
            var _closure2_slot1 = entity;
            michal = _closure1_slot0;
            zuuluu = _closure1_slot2;
            entity = 11;
            entity = zuuluu[entity];
            oscard = michal.bind(tangon)(entity);
            zuuluu = oscard.useStateFromStores;
            entity = _closure1_slot6;
            michal = new Array(1);
            michal[0] = entity;
            entity = function() {
                zuuluu = _closure1_slot6;
                michal = zuuluu.getActiveStreamForStreamKey;
                entity = _closure2_slot0;
                entity = entity.id;
                entity = michal.bind(zuuluu)(entity);
                return entity;
            };
            offset = zuuluu.bind(oscard)(michal, entity);
            option = null;
            if(!(option == offset)) { _fun00004_ip = 123; continue _fun00003 }
 121:
            return option;
 123:
            michal = offset.state;
            entity = _closure1_slot8;
            entity = entity.FAILED;
            if(!(entity !== michal)) { _fun00004_ip = 732; continue _fun00003 }
 145:
            entity = _closure1_slot8;
            entity = entity.ENDED;
            if(!(entity !== michal)) { _fun00004_ip = 640; continue _fun00003 }
 162:
            entity = _closure1_slot8;
            entity = entity.RECONNECTING;
            if(!(entity !== michal)) { _fun00004_ip = 370; continue _fun00003 }
 179:
            entity = _closure1_slot8;
            entity = entity.PAUSED;
            option = null;
            if(!(entity === michal)) { _fun00004_ip = 445; continue _fun00003 }
 198:
            zuuluu = _closure1_slot9;
            michal = _closure1_slot13;
            entity = {};
            yankee = _closure1_slot0;
            source = _closure1_slot2;
            oscard = 13;
            romeon = source[oscard];
            romeon = yankee.bind(tangon)(romeon);
            kiloes = romeon.intl;
            backup = kiloes.string;
            romeon = source[oscard];
            romeon = yankee.bind(tangon)(romeon);
            romeon = romeon.t;
            romeon = romeon.5q17w8;
            romeon = backup.bind(kiloes)(romeon);
            entity['title'] = romeon;
            romeon = source[oscard];
            romeon = yankee.bind(tangon)(romeon);
            backup = romeon.intl;
            romeon = backup.formatToPlainString;
            oscard = source[oscard];
            oscard = yankee.bind(tangon)(oscard);
            oscard = oscard.t;
            yankee = oscard.meVVlZ;
            oscard = {};
            update = _closure1_slot1;
            kiloes = 14;
            kiloes = source[kiloes];
            ctrled = update.bind(tangon)(kiloes);
            source = ctrled.getName;
            update = offset.guildId;
            kiloes = offset.channelId;
            kiloes = source.bind(ctrled)(update, kiloes, foxtra);
            oscard['username'] = kiloes;
            oscard = romeon.bind(backup)(yankee, oscard);
            entity['subtext'] = oscard;
            option = zuuluu.bind(tangon)(michal, entity);
            _fun00004_ip = 445; continue _fun00003;
 370:
            zuuluu = _closure1_slot9;
            michal = _closure1_slot13;
            entity = {};
            backup = _closure1_slot0;
            kiloes = _closure1_slot2;
            oscard = 13;
            yankee = kiloes[oscard];
            yankee = backup.bind(tangon)(yankee);
            romeon = yankee.intl;
            yankee = romeon.string;
            oscard = kiloes[oscard];
            oscard = backup.bind(tangon)(oscard);
            oscard = oscard.t;
            oscard = oscard.pdFFKy;
            oscard = yankee.bind(romeon)(oscard);
            entity['title'] = oscard;
            option = zuuluu.bind(tangon)(michal, entity);
 445:
            kiloes = offset.ownerId;
            michal = _closure1_slot7;
            entity = michal.getId;
            backup = entity.bind(michal)();
            zuuluu = _closure1_slot10;
            michal = _closure1_slot11;
            entity = {};
            romeon = _closure1_slot9;
            yankee = _closure1_slot1;
            update = _closure1_slot2;
            oscard = 15;
            oscard = update[oscard];
            yankee = yankee.bind(tangon)(oscard);
            oscard = {};
            oscard['resizeMode'] = echoed;
            oscard['streamId'] = result;
            oscard['gestureEnabled'] = output;
            sizing = function() { // Original name: renderTag
                tangon = _closure1_slot9;
                michal = _closure1_slot1;
                zuuluu = _closure1_slot2;
                entity = 16;
                entity = zuuluu[entity];
                zuuluu = undefined;
                michal = michal.bind(zuuluu)(entity);
                entity = {};
                oscard = _closure2_slot1;
                oscard = oscard.liveTag;
                entity['style'] = oscard;
                report = _closure2_slot0;
                entity['participant'] = report;
                entity = tangon.bind(zuuluu)(michal, entity);
                return entity;
            };
            oscard['renderTag'] = sizing;
            if(!(kiloes !== backup)) { _fun00004_ip = 564; continue _fun00003 }
 530:
            kiloes = _closure1_slot0;
            sizing = _closure1_slot2;
            backup = 17;
            backup = sizing[backup];
            backup = kiloes.bind(tangon)(backup);
            backup = backup.VideoSpinnerContext;
            backup = backup.REMOTE_STREAM;
            _fun00004_ip = 596; continue _fun00003;
 564:
            sizing = _closure1_slot0;
            output = _closure1_slot2;
            kiloes = 17;
            kiloes = output[kiloes];
            kiloes = sizing.bind(tangon)(kiloes);
            kiloes = kiloes.VideoSpinnerContext;
            backup = kiloes.SELF_STREAM;
 596:
            oscard['videoSpinnerContext'] = backup;
            foxtra = foxtra.id;
            oscard['userId'] = foxtra;
            yankee = romeon.bind(tangon)(yankee, oscard);
            oscard = new Array(2);
            oscard[0] = yankee;
            oscard[1] = option;
            entity['children'] = oscard;
            entity = zuuluu.bind(tangon)(michal, entity);
            return entity;
 640:
            zuuluu = _closure1_slot9;
            michal = _closure1_slot1;
            yankee = _closure1_slot2;
            oscard = 12;
            entity = yankee[oscard];
            michal = michal.bind(tangon)(entity);
            entity = {};
            entity['stream'] = offset;
            entity['removeCloseButton'] = verify;
            entity['removeSplashImage'] = golfie;
            option = _closure1_slot0;
            oscard = yankee[oscard];
            oscard = option.bind(tangon)(oscard);
            oscard = oscard.VideoEmptyTypes;
            oscard = oscard.STREAM_ENDED;
            entity['type'] = oscard;
            oscard = _closure1_slot5;
            oscard = oscard.absoluteFill;
            entity['style'] = oscard;
            entity = zuuluu.bind(tangon)(michal, entity);
            return entity;
 732:
            zuuluu = _closure1_slot9;
            michal = _closure1_slot1;
            option = _closure1_slot2;
            oscard = 12;
            entity = option[oscard];
            michal = michal.bind(tangon)(entity);
            entity = {};
            entity['stream'] = offset;
            entity['removeCloseButton'] = verify;
            entity['removeSplashImage'] = golfie;
            golfie = _closure1_slot0;
            oscard = option[oscard];
            oscard = golfie.bind(tangon)(oscard);
            oscard = oscard.VideoEmptyTypes;
            oscard = oscard.STREAM_FAILED;
            entity['type'] = oscard;
            report = _closure1_slot5;
            report = report.absoluteFill;
            entity['style'] = report;
            entity = zuuluu.bind(tangon)(michal, entity);
            return entity;
        }
    };
    report = option.bind(verify)(report);
    var _closure1_slot14 = report;
    option = verify.memo;
    report = function(argFoo) {
        entity = argFoo;
        option = entity.onFullScreen;
        golfie = entity.style;
        entity = _closure1_slot12;
        tangon = undefined;
        oscard = entity.bind(tangon)();
        zuuluu = _closure1_slot9;
        michal = _closure1_slot0;
        verify = _closure1_slot2;
        entity = 20;
        entity = verify[entity];
        entity = michal.bind(tangon)(entity);
        michal = entity.PressableOpacity;
        entity = {};
        offset = 'button';
        entity['accessibilityRole'] = offset;
        entity['onPress'] = option;
        option = oscard.statusWrapper;
        oscard = new Array(2);
        oscard[0] = option;
        oscard[1] = golfie;
        entity['style'] = oscard;
        oscard = {'top': 4, 'left': 4, 'right': 4, 'bottom': 4};
        entity['hitSlop'] = oscard;
        option = _closure1_slot1;
        golfie = 21;
        report = verify[golfie];
        oscard = option.bind(tangon)(report);
        report = {};
        offset = 22;
        offset = verify[offset];
        offset = option.bind(tangon)(offset);
        report['source'] = offset;
        golfie = verify[golfie];
        golfie = option.bind(tangon)(golfie);
        golfie = golfie.Sizes;
        golfie = golfie.SMALL;
        report['size'] = golfie;
        golfie = 7;
        golfie = verify[golfie];
        golfie = option.bind(tangon)(golfie);
        golfie = golfie.unsafe_rawColors;
        golfie = golfie.WHITE_500;
        report['color'] = golfie;
        report = zuuluu.bind(tangon)(oscard, report);
        entity['children'] = report;
        entity = zuuluu.bind(tangon)(michal, entity);
        return entity;
    };
    report = option.bind(verify)(report);
    var _closure1_slot15 = report;
    report = 23;
    report = golfie[report];
    golfie = oscard.bind(entity)(report);
    oscard = golfie.fileFinishedImporting;
    report = 'modules/video_calls/native/components/StreamTile.tsx';
    report = oscard.bind(golfie)(report);
    tangon = function(argFoo) { // Original name: _default
        _fun00005: for(var _fun00006_ip = 0; ; ) switch(_fun00006_ip) {
 0:
            zuuluu = argFoo;
            result = zuuluu.participant;
            var _closure2_slot0 = result;
            michal = zuuluu.onSingleTap;
            var _closure2_slot1 = michal;
            golfie = zuuluu.onDoubleTap;
            var _closure2_slot2 = golfie;
            sizing = zuuluu.resizeMode;
            tangon = undefined;
            if(!(sizing === tangon)) { _fun00006_ip = 82; continue _fun00005 }
 47:
            oscard = _closure1_slot0;
            option = _closure1_slot2;
            report = 15;
            report = option[report];
            report = oscard.bind(tangon)(report);
            report = report.ResizeMode;
            sizing = report.CONTAIN;
 82:
            kiloes = zuuluu.gestureEnabled;
            romeon = zuuluu.removeEmptyStateButton;
            yankee = zuuluu.removeEmptyStateImage;
            backup = zuuluu.onFullScreen;
            foxtra = zuuluu.fullscreenIconStyle;
            verify = zuuluu.style;
            zuuluu = _closure1_slot12;
            option = zuuluu.bind(tangon)();
            oscard = _closure1_slot3;
            report = oscard.useCallback;
            zuuluu = new Array(2);
            zuuluu[0] = michal;
            zuuluu[1] = result;
            michal = function() {
                _fun00007: for(var _fun00008_ip = 0; ; ) switch(_fun00008_ip) {
 0:
                    zuuluu = _closure2_slot1;
                    entity = null;
                    zuuluu = entity == zuuluu;
                    tangon = undefined;
                    entity = undefined;
                    if(zuuluu) { _fun00008_ip = 33; continue _fun00007 }
 20:
                    zuuluu = _closure2_slot1;
                    michal = _closure2_slot0;
                    entity = zuuluu.bind(tangon)(michal);
 33:
                    return entity;
                }
            };
            report = report.bind(oscard)(michal, zuuluu);
            zuuluu = oscard.useCallback;
            michal = new Array(2);
            michal[0] = golfie;
            michal[1] = result;
            entity = function() {
                _fun00009: for(var _fun00010_ip = 0; ; ) switch(_fun00010_ip) {
 0:
                    zuuluu = _closure2_slot2;
                    entity = null;
                    zuuluu = entity == zuuluu;
                    tangon = undefined;
                    entity = undefined;
                    if(zuuluu) { _fun00010_ip = 33; continue _fun00009 }
 20:
                    zuuluu = _closure2_slot2;
                    michal = _closure2_slot0;
                    entity = zuuluu.bind(tangon)(michal);
 33:
                    return entity;
                }
            };
            zuuluu = zuuluu.bind(oscard)(entity, michal);
            michal = _closure1_slot1;
            oscard = _closure1_slot2;
            entity = 18;
            entity = oscard[entity];
            michal = michal.bind(tangon)(entity);
            entity = {};
            entity['onSingleTapStart'] = report;
            entity['onDoubleTapStart'] = zuuluu;
            report = michal.bind(tangon)(entity);
            echoed = result.streamId;
            output = result.user;
            zuuluu = _closure1_slot9;
            michal = _closure1_slot0;
            entity = 19;
            entity = oscard[entity];
            entity = michal.bind(tangon)(entity);
            michal = entity.GestureDetector;
            entity = {};
            entity['gesture'] = report;
            golfie = _closure1_slot10;
            oscard = _closure1_slot4;
            report = {};
            update = option.container;
            option = new Array(2);
            option[0] = update;
            option[1] = verify;
            report['style'] = option;
            verify = _closure1_slot14;
            option = {};
            option['streamId'] = echoed;
            option['participant'] = result;
            option['user'] = output;
            option['resizeMode'] = sizing;
            option['gestureEnabled'] = kiloes;
            option['removeEmptyStateButton'] = romeon;
            option['removeEmptyStateImage'] = yankee;
            verify = zuuluu.bind(tangon)(verify, option);
            option = new Array(2);
            option[0] = verify;
            verify = null;
            verify = verify != backup;
            if(!verify) { _fun00006_ip = 388; continue _fun00005 }
 363:
            romeon = _closure1_slot9;
            yankee = _closure1_slot15;
            offset = {};
            offset['onFullScreen'] = backup;
            offset['style'] = foxtra;
            verify = romeon.bind(tangon)(yankee, offset);
 388:
            option[1] = verify;
            report['children'] = option;
            report = golfie.bind(tangon)(oscard, report);
            entity['children'] = report;
            entity = zuuluu.bind(tangon)(michal, entity);
            return entity;
        }
    };
    zuuluu['default'] = tangon;
    zuuluu['StreamTextOverlay'] = michal;
    return entity;
})();