// app/modules/video_calls/native/components/FocusedControlsBottomControlsHeader.tsx
export default (function(argFoo, argBar, argBaz, argCorge, _, argFred, argPlugh) {
    oscar = argBar;
    foxtrot = argBaz;
    zulu = argFred;
    golf = argPlugh;
    var _closure1_slot0 = foxtrot;
    var _closure1_slot1 = golf;
    entity = global;
    options = entity.Object;
    report = options.defineProperty;
    tango = {};
    entity = true;
    tango['value'] = entity;
    entity = '__esModule';
    entity = report.bind(options)(zulu, entity, tango);
    entity = 0;
    report = golf[entity];
    tango = argCorge;
    entity = undefined;
    tango = tango.bind(entity)(report);
    tango = 1;
    tango = golf[tango];
    tango = oscar.bind(entity)(tango);
    tango = tango.View;
    var _closure1_slot2 = tango;
    tango = 2;
    tango = golf[tango];
    tango = oscar.bind(entity)(tango);
    backup = tango.Fonts;
    tango = 3;
    tango = golf[tango];
    tango = oscar.bind(entity)(tango);
    tango = tango.jsx;
    var _closure1_slot3 = tango;
    tango = 4;
    tango = golf[tango];
    verify = oscar.bind(entity)(tango);
    options = verify.createStyles;
    report = {};
    offset = {'height': 40, 'backgroundColor': null, 'borderTopLeftRadius': null, 'flexDirection': 'row', 'borderTopRightRadius': null, 'justifyContent': 'center', 'padding': 12, 'alignItems': 'center'};
    tango = 40;
    yankee = 5;
    romeo = golf[yankee];
    romeo = foxtrot.bind(entity)(romeo);
    romeo = romeo.unsafe_rawColors;
    romeo = romeo.PRIMARY_600;
    offset['backgroundColor'] = romeo;
    romeo = golf[yankee];
    romeo = foxtrot.bind(entity)(romeo);
    romeo = romeo.radii;
    romeo = romeo.sm;
    offset['borderTopLeftRadius'] = romeo;
    romeo = golf[yankee];
    romeo = foxtrot.bind(entity)(romeo);
    romeo = romeo.radii;
    romeo = romeo.sm;
    offset['borderTopRightRadius'] = romeo;
    romeo = 'center';
    report['root'] = offset;
    offset = {};
    kilo = 6;
    kilo = golf[kilo];
    kilo = foxtrot.bind(entity)(kilo);
    backup = backup.PRIMARY_MEDIUM;
    yankee = golf[yankee];
    yankee = foxtrot.bind(entity)(yankee);
    yankee = yankee.unsafe_rawColors;
    foxtrot = yankee.WHITE_500;
    yankee = 14;
    output = kilo.bind(entity)(backup, foxtrot, yankee);
    result = offset;
    yankee = copyDataProperties(result, output);
    yankee = 'textAlign';
    offset[yankee] = romeo;
    report['text'] = offset;
    report = options.bind(verify)(report);
    var _closure1_slot4 = report;
    report = 8;
    report = golf[report];
    golf = oscar.bind(entity)(report);
    oscar = golf.fileFinishedImporting;
    report = 'modules/video_calls/native/components/FocusedControlsBottomControlsHeader.tsx';
    report = oscar.bind(golf)(report);
    report = function(argFoo) { // Original name: FocusedControlsBottomControlsHeader
        entity = argFoo;
        report = entity.children;
        mike = _closure1_slot4;
        tango = undefined;
        oscar = mike.bind(tango)();
        zulu = _closure1_slot3;
        mike = _closure1_slot2;
        entity = {};
        oscar = oscar.root;
        entity['style'] = oscar;
        entity['children'] = report;
        entity = zulu.bind(tango)(mike, entity);
        return entity;
    };
    zulu['default'] = report;
    zulu['BOTTOM_CONTROLS_HEADER_HEIGHT'] = tango;
    mike = function(argFoo) { // Original name: FocusedControlsBottomControlsHeaderText
        entity = argFoo;
        report = entity.children;
        golf = entity.style;
        mike = _closure1_slot4;
        tango = undefined;
        oscar = mike.bind(tango)();
        zulu = _closure1_slot3;
        mike = _closure1_slot0;
        options = _closure1_slot1;
        entity = 7;
        entity = options[entity];
        mike = mike.bind(tango)(entity);
        entity = {};
        options = oscar.text;
        oscar = new Array(2);
        oscar[0] = options;
        oscar[1] = golf;
        entity['style'] = oscar;
        entity['children'] = report;
        entity = zulu.bind(tango)(mike, entity);
        return entity;
    };
    zulu['FocusedControlsBottomControlsHeaderText'] = mike;
    return entity;
})();