// app/modules/video_calls/native/components/ParticipantTitle.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    report = argBar;
    yankee = argBaz;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    var _closure1_slot1 = yankee;
    var _closure1_slot2 = oscard;
    entity = global;
    option = entity.Object;
    golfie = option.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(option)(zuuluu, entity, tangon);
    entity = 0;
    golfie = oscard[entity];
    tangon = argCor;
    entity = undefined;
    tangon = tangon.bind(entity)(golfie);
    tangon = 1;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.jsx;
    var _closure1_slot3 = tangon;
    tangon = 2;
    tangon = oscard[tangon];
    option = report.bind(entity)(tangon);
    golfie = option.createStyles;
    tangon = {};
    verify = {};
    offset = 14;
    verify['fontSize'] = offset;
    offset = 3;
    offset = oscard[offset];
    offset = yankee.bind(entity)(offset);
    offset = offset.colors;
    offset = offset.WHITE;
    verify['color'] = offset;
    tangon['usernameText'] = verify;
    tangon = golfie.bind(option)(tangon);
    var _closure1_slot4 = tangon;
    tangon = 6;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/video_calls/native/components/ParticipantTitle.tsx';
    tangon = report.bind(oscard)(tangon);
    michal = function(argFoo) { // Original name: ParticipantTitle
        entity = argFoo;
        golfie = entity.channel;
        oscard = entity.participant;
        offset = entity.style;
        entity = _closure1_slot4;
        tangon = undefined;
        option = entity.bind(tangon)();
        zuuluu = _closure1_slot3;
        michal = _closure1_slot0;
        verify = _closure1_slot2;
        entity = 4;
        entity = verify[entity];
        entity = michal.bind(tangon)(entity);
        michal = entity.LegacyText;
        entity = {};
        yankee = option.usernameText;
        option = new Array(2);
        option[0] = yankee;
        option[1] = offset;
        entity['style'] = option;
        option = 1;
        entity['numberOfLines'] = option;
        option = _closure1_slot1;
        report = 5;
        report = verify[report];
        report = option.bind(tangon)(report);
        report = report.bind(tangon)(golfie, oscard);
        entity['children'] = report;
        entity = zuuluu.bind(tangon)(michal, entity);
        return entity;
    };
    zuuluu['default'] = michal;
    return entity;
})();