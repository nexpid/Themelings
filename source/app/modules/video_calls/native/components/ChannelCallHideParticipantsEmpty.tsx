// app/modules/video_calls/native/components/ChannelCallHideParticipantsEmpty.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    report = argBar;
    yankee = argBaz;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    var _closure1_slot1 = yankee;
    var _closure1_slot2 = oscard;
    entity = global;
    option = entity.Object;
    golfie = option.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(option)(zuuluu, entity, tangon);
    entity = 0;
    golfie = oscard[entity];
    tangon = argCor;
    entity = undefined;
    tangon = tangon.bind(entity)(golfie);
    tangon = 1;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    golfie = tangon.View;
    var _closure1_slot3 = golfie;
    golfie = tangon.Image;
    var _closure1_slot4 = golfie;
    tangon = tangon.TouchableWithoutFeedback;
    var _closure1_slot5 = tangon;
    tangon = 2;
    tangon = oscard[tangon];
    tangon = yankee.bind(entity)(tangon);
    var _closure1_slot6 = tangon;
    tangon = 3;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.toggleFocus;
    var _closure1_slot7 = tangon;
    tangon = 4;
    golfie = oscard[tangon];
    golfie = report.bind(entity)(golfie);
    golfie = golfie.jsx;
    var _closure1_slot8 = golfie;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.jsxs;
    var _closure1_slot9 = tangon;
    tangon = 5;
    tangon = oscard[tangon];
    option = report.bind(entity)(tangon);
    golfie = option.createStyles;
    tangon = {};
    verify = {'flex': 1, 'justifyContent': 'center', 'alignItems': 'center'};
    tangon['container'] = verify;
    verify = {};
    offset = 16;
    verify['marginBottom'] = offset;
    tangon['image'] = verify;
    verify = {'width': 300, 'marginBottom': 16, 'lineHeight': 20, 'textAlign': 'center'};
    tangon['label'] = verify;
    verify = {'alignSelf': 'flex-start', 'borderRadius': null, 'paddingHorizontal': 16, 'backgroundColor': null, 'alignItems': 'center', 'justifyContent': 'center', 'height': 40};
    offset = 6;
    romeon = oscard[offset];
    romeon = yankee.bind(entity)(romeon);
    romeon = romeon.radii;
    romeon = romeon.round;
    verify['borderRadius'] = romeon;
    offset = oscard[offset];
    offset = yankee.bind(entity)(offset);
    offset = offset.unsafe_rawColors;
    offset = offset.PRIMARY_500;
    verify['backgroundColor'] = offset;
    tangon['button'] = verify;
    verify = {'lineHeight': 20, 'textAlign': 'center'};
    tangon['buttonLabel'] = verify;
    tangon = golfie.bind(option)(tangon);
    var _closure1_slot10 = tangon;
    tangon = 13;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/video_calls/native/components/ChannelCallHideParticipantsEmpty.tsx';
    tangon = report.bind(oscard)(tangon);
    michal = function(argFoo) { // Original name: _default
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            entity = argFoo;
            entity = entity.channel;
            var _closure2_slot0 = entity;
            entity = _closure1_slot10;
            report = undefined;
            sizing = entity.bind(report)();
            michal = _closure1_slot0;
            zuuluu = _closure1_slot2;
            entity = 7;
            entity = zuuluu[entity];
            tangon = michal.bind(report)(entity);
            zuuluu = tangon.useStateFromStores;
            entity = _closure1_slot6;
            michal = new Array(1);
            michal[0] = entity;
            entity = function() {
                michal = _closure1_slot6;
                entity = michal.getVoiceChannelId;
                michal = entity.bind(michal)();
                entity = null;
                entity = entity == michal;
                return entity;
            };
            michal = zuuluu.bind(tangon)(michal, entity);
            entity = null;
            if(michal) { _fun00002_ip = 528; continue _fun00001 }
 85:
            tangon = _closure1_slot8;
            zuuluu = _closure1_slot5;
            michal = {};
            oscard = 'none';
            michal['accessibilityRole'] = oscard;
            oscard = _closure1_slot7;
            michal['onPress'] = oscard;
            option = _closure1_slot9;
            golfie = _closure1_slot3;
            oscard = {};
            verify = sizing.container;
            oscard['style'] = verify;
            yankee = _closure1_slot4;
            verify = {};
            backup = _closure1_slot1;
            echoed = _closure1_slot2;
            foxtra = 8;
            foxtra = echoed[foxtra];
            foxtra = backup.bind(report)(foxtra);
            verify['source'] = foxtra;
            foxtra = sizing.image;
            verify['style'] = foxtra;
            yankee = tangon.bind(report)(yankee, verify);
            verify = new Array(3);
            verify[0] = yankee;
            result = _closure1_slot0;
            foxtra = 9;
            offset = echoed[foxtra];
            offset = result.bind(report)(offset);
            yankee = offset.Text;
            offset = {'style': null, 'variant': 'text-md/semibold', 'color': 'always-white'};
            backup = sizing.label;
            offset['style'] = backup;
            kiloes = 10;
            backup = echoed[kiloes];
            backup = result.bind(report)(backup);
            update = backup.intl;
            output = update.string;
            backup = echoed[kiloes];
            backup = result.bind(report)(backup);
            backup = backup.t;
            backup = backup.8eBJ7+;
            backup = output.bind(update)(backup);
            offset['children'] = backup;
            offset = tangon.bind(report)(yankee, offset);
            verify[1] = offset;
            offset = 11;
            offset = echoed[offset];
            offset = result.bind(report)(offset);
            yankee = offset.PressableOpacity;
            offset = {};
            backup = 'button';
            offset['accessibilityRole'] = backup;
            backup = echoed[kiloes];
            backup = result.bind(report)(backup);
            update = backup.intl;
            output = update.string;
            backup = echoed[kiloes];
            backup = result.bind(report)(backup);
            backup = backup.t;
            backup = backup.kLQySE;
            backup = output.bind(update)(backup);
            offset['accessibilityLabel'] = backup;
            romeon = function() { // Original name: onPress
                zuuluu = _closure1_slot1;
                michal = _closure1_slot2;
                entity = 12;
                michal = michal[entity];
                entity = undefined;
                report = zuuluu.bind(entity)(michal);
                tangon = report.toggleVoiceParticipantsHidden;
                michal = _closure2_slot0;
                zuuluu = michal.id;
                michal = false;
                michal = tangon.bind(report)(zuuluu, michal);
                return entity;
            };
            offset['onPress'] = romeon;
            romeon = {};
            backup = sizing.button;
            romeon['style'] = backup;
            foxtra = echoed[foxtra];
            foxtra = result.bind(report)(foxtra);
            backup = foxtra.Text;
            foxtra = {'style': null, 'variant': 'text-md/semibold', 'color': 'always-white'};
            sizing = sizing.buttonLabel;
            foxtra['style'] = sizing;
            sizing = echoed[kiloes];
            sizing = result.bind(report)(sizing);
            output = sizing.intl;
            sizing = output.string;
            kiloes = echoed[kiloes];
            kiloes = result.bind(report)(kiloes);
            kiloes = kiloes.t;
            kiloes = kiloes.kLQySE;
            kiloes = sizing.bind(output)(kiloes);
            foxtra['children'] = kiloes;
            foxtra = tangon.bind(report)(backup, foxtra);
            romeon['children'] = foxtra;
            romeon = tangon.bind(report)(golfie, romeon);
            offset['children'] = romeon;
            offset = tangon.bind(report)(yankee, offset);
            verify[2] = offset;
            oscard['children'] = verify;
            oscard = option.bind(report)(golfie, oscard);
            michal['children'] = oscard;
            entity = tangon.bind(report)(zuuluu, michal);
 528:
            return entity;
        }
    };
    zuuluu['default'] = michal;
    return entity;
})();