// app/modules/video_calls/native/components/ChannelCallHideParticipantsEmpty.tsx
export default (function(argFoo, argBar, argBaz, argCorge, _, argFred, argPlugh) {
    report = argBar;
    yankee = argBaz;
    zulu = argFred;
    oscar = argPlugh;
    var _closure1_slot0 = report;
    var _closure1_slot1 = yankee;
    var _closure1_slot2 = oscar;
    entity = global;
    options = entity.Object;
    golf = options.defineProperty;
    tango = {};
    entity = true;
    tango['value'] = entity;
    entity = '__esModule';
    entity = golf.bind(options)(zulu, entity, tango);
    entity = 0;
    golf = oscar[entity];
    tango = argCorge;
    entity = undefined;
    tango = tango.bind(entity)(golf);
    tango = 1;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    golf = tango.View;
    var _closure1_slot3 = golf;
    golf = tango.Image;
    var _closure1_slot4 = golf;
    tango = tango.TouchableWithoutFeedback;
    var _closure1_slot5 = tango;
    tango = 2;
    tango = oscar[tango];
    tango = yankee.bind(entity)(tango);
    var _closure1_slot6 = tango;
    tango = 3;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.toggleFocus;
    var _closure1_slot7 = tango;
    tango = 4;
    golf = oscar[tango];
    golf = report.bind(entity)(golf);
    golf = golf.jsx;
    var _closure1_slot8 = golf;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.jsxs;
    var _closure1_slot9 = tango;
    tango = 5;
    tango = oscar[tango];
    options = report.bind(entity)(tango);
    golf = options.createStyles;
    tango = {};
    verify = {'flex': 1, 'justifyContent': 'center', 'alignItems': 'center'};
    tango['container'] = verify;
    verify = {};
    offset = 16;
    verify['marginBottom'] = offset;
    tango['image'] = verify;
    verify = {'width': 300, 'marginBottom': 16, 'lineHeight': 20, 'textAlign': 'center'};
    tango['label'] = verify;
    verify = {'alignSelf': 'flex-start', 'borderRadius': null, 'paddingHorizontal': 16, 'backgroundColor': null, 'alignItems': 'center', 'justifyContent': 'center', 'height': 40};
    offset = 6;
    romeo = oscar[offset];
    romeo = yankee.bind(entity)(romeo);
    romeo = romeo.radii;
    romeo = romeo.round;
    verify['borderRadius'] = romeo;
    offset = oscar[offset];
    offset = yankee.bind(entity)(offset);
    offset = offset.unsafe_rawColors;
    offset = offset.PRIMARY_500;
    verify['backgroundColor'] = offset;
    tango['button'] = verify;
    verify = {'lineHeight': 20, 'textAlign': 'center'};
    tango['buttonLabel'] = verify;
    tango = golf.bind(options)(tango);
    var _closure1_slot10 = tango;
    tango = 13;
    tango = oscar[tango];
    oscar = report.bind(entity)(tango);
    report = oscar.fileFinishedImporting;
    tango = 'modules/video_calls/native/components/ChannelCallHideParticipantsEmpty.tsx';
    tango = report.bind(oscar)(tango);
    mike = function(argFoo) { // Original name: _default
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            entity = argFoo;
            entity = entity.channel;
            var _closure2_slot0 = entity;
            entity = _closure1_slot10;
            report = undefined;
            sizing = entity.bind(report)();
            mike = _closure1_slot0;
            zulu = _closure1_slot2;
            entity = 7;
            entity = zulu[entity];
            tango = mike.bind(report)(entity);
            zulu = tango.useStateFromStores;
            entity = _closure1_slot6;
            mike = new Array(1);
            mike[0] = entity;
            entity = function() {
                mike = _closure1_slot6;
                entity = mike.getVoiceChannelId;
                mike = entity.bind(mike)();
                entity = null;
                entity = entity == mike;
                return entity;
            };
            mike = zulu.bind(tango)(mike, entity);
            entity = null;
            if(mike) { _fun00002_ip = 528; continue _fun00001 }
 85:
            tango = _closure1_slot8;
            zulu = _closure1_slot5;
            mike = {};
            oscar = 'none';
            mike['accessibilityRole'] = oscar;
            oscar = _closure1_slot7;
            mike['onPress'] = oscar;
            options = _closure1_slot9;
            golf = _closure1_slot3;
            oscar = {};
            verify = sizing.container;
            oscar['style'] = verify;
            yankee = _closure1_slot4;
            verify = {};
            backup = _closure1_slot1;
            echo = _closure1_slot2;
            foxtrot = 8;
            foxtrot = echo[foxtrot];
            foxtrot = backup.bind(report)(foxtrot);
            verify['source'] = foxtrot;
            foxtrot = sizing.image;
            verify['style'] = foxtrot;
            yankee = tango.bind(report)(yankee, verify);
            verify = new Array(3);
            verify[0] = yankee;
            result = _closure1_slot0;
            foxtrot = 9;
            offset = echo[foxtrot];
            offset = result.bind(report)(offset);
            yankee = offset.Text;
            offset = {'style': null, 'variant': 'text-md/semibold', 'color': 'always-white'};
            backup = sizing.label;
            offset['style'] = backup;
            kilo = 10;
            backup = echo[kilo];
            backup = result.bind(report)(backup);
            update = backup.intl;
            output = update.string;
            backup = echo[kilo];
            backup = result.bind(report)(backup);
            backup = backup.t;
            backup = backup.8eBJ7+;
            backup = output.bind(update)(backup);
            offset['children'] = backup;
            offset = tango.bind(report)(yankee, offset);
            verify[1] = offset;
            offset = 11;
            offset = echo[offset];
            offset = result.bind(report)(offset);
            yankee = offset.PressableOpacity;
            offset = {};
            backup = 'button';
            offset['accessibilityRole'] = backup;
            backup = echo[kilo];
            backup = result.bind(report)(backup);
            update = backup.intl;
            output = update.string;
            backup = echo[kilo];
            backup = result.bind(report)(backup);
            backup = backup.t;
            backup = backup.kLQySE;
            backup = output.bind(update)(backup);
            offset['accessibilityLabel'] = backup;
            romeo = function() { // Original name: onPress
                zulu = _closure1_slot1;
                mike = _closure1_slot2;
                entity = 12;
                mike = mike[entity];
                entity = undefined;
                report = zulu.bind(entity)(mike);
                tango = report.toggleVoiceParticipantsHidden;
                mike = _closure2_slot0;
                zulu = mike.id;
                mike = false;
                mike = tango.bind(report)(zulu, mike);
                return entity;
            };
            offset['onPress'] = romeo;
            romeo = {};
            backup = sizing.button;
            romeo['style'] = backup;
            foxtrot = echo[foxtrot];
            foxtrot = result.bind(report)(foxtrot);
            backup = foxtrot.Text;
            foxtrot = {'style': null, 'variant': 'text-md/semibold', 'color': 'always-white'};
            sizing = sizing.buttonLabel;
            foxtrot['style'] = sizing;
            sizing = echo[kilo];
            sizing = result.bind(report)(sizing);
            output = sizing.intl;
            sizing = output.string;
            kilo = echo[kilo];
            kilo = result.bind(report)(kilo);
            kilo = kilo.t;
            kilo = kilo.kLQySE;
            kilo = sizing.bind(output)(kilo);
            foxtrot['children'] = kilo;
            foxtrot = tango.bind(report)(backup, foxtrot);
            romeo['children'] = foxtrot;
            romeo = tango.bind(report)(golf, romeo);
            offset['children'] = romeo;
            offset = tango.bind(report)(yankee, offset);
            verify[2] = offset;
            oscar['children'] = verify;
            oscar = options.bind(report)(golf, oscar);
            mike['children'] = oscar;
            entity = tango.bind(report)(zulu, mike);
 528:
            return entity;
        }
    };
    zulu['default'] = mike;
    return entity;
})();