// app/modules/video_calls/VoicePanelIconStatesExperimentV2.tsx
export default (function(argFoo, argBar, _, __, ___, argFre, argPlu) {
    oscard = argBar;
    zuuluu = argFre;
    golfie = argPlu;
    entity = global;
    option = entity.Object;
    report = option.defineProperty;
    michal = {};
    entity = true;
    michal['value'] = entity;
    entity = '__esModule';
    entity = report.bind(option)(zuuluu, entity, michal);
    entity = 0;
    michal = golfie[entity];
    entity = undefined;
    michal = oscard.bind(entity)(michal);
    report = michal.CommonTriggerPoints;
    michal = 1;
    michal = golfie[michal];
    verify = oscard.bind(entity)(michal);
    option = verify.createExperiment;
    michal = {'kind': 'user', 'id': '2025-02_voice_call_buttons_v2', 'label': 'Voice and Video buttons V2'};
    offset = {'squareButtonsEnabled': false, 'coloredIconsEnabled': false, 'simplifiedSettingsEnabled': false};
    michal['defaultConfig'] = offset;
    report = report.CONNECTION_OPEN;
    michal['commonTriggerPoint'] = report;
    report = {'id': 1, 'label': 'Grouped buttons with green active state'};
    offset = {'squareButtonsEnabled': true, 'coloredIconsEnabled': false, 'simplifiedSettingsEnabled': false};
    report['config'] = offset;
    offset = new Array(4);
    offset[0] = report;
    yankee = {'id': 2, 'label': 'Grouped green buttons with simplified settings'};
    report = 2;
    romeon = {'squareButtonsEnabled': true, 'coloredIconsEnabled': false, 'simplifiedSettingsEnabled': true};
    yankee['config'] = romeon;
    offset[1] = yankee;
    yankee = {'id': 3, 'label': 'Grouped tinted buttons'};
    romeon = {'squareButtonsEnabled': true, 'coloredIconsEnabled': true, 'simplifiedSettingsEnabled': false};
    yankee['config'] = romeon;
    offset[2] = yankee;
    yankee = {'id': 4, 'label': 'Grouped tinted buttons with simplified settings'};
    romeon = {'squareButtonsEnabled': true, 'coloredIconsEnabled': true, 'simplifiedSettingsEnabled': true};
    yankee['config'] = romeon;
    offset[3] = yankee;
    michal['treatments'] = offset;
    michal = option.bind(verify)(michal);
    var _closure1_slot0 = michal;
    report = golfie[report];
    golfie = oscard.bind(entity)(report);
    oscard = golfie.fileFinishedImporting;
    report = 'modules/video_calls/VoicePanelIconStatesExperimentV2.tsx';
    report = oscard.bind(golfie)(report);
    tangon = function(argFoo) { // Original name: useVoiceIconStatesExperimentV2
        tangon = _closure1_slot0;
        zuuluu = tangon.useExperiment;
        michal = {};
        entity = false;
        michal['autoTrackExposure'] = entity;
        entity = argFoo;
        entity = zuuluu.bind(tangon)(entity, michal);
        return entity;
    };
    zuuluu['default'] = tangon;
    zuuluu['VoiceIconStatesExperimentV2'] = michal;
    return entity;
})();