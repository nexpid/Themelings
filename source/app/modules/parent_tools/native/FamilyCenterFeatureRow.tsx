// app/modules/parent_tools/native/FamilyCenterFeatureRow.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    oscard = argBar;
    romeon = argBaz;
    zuuluu = argFre;
    golfie = argPlu;
    var _closure1_slot0 = oscard;
    var _closure1_slot1 = romeon;
    var _closure1_slot2 = golfie;
    michal = function(argFoo) { // Original name: FamilyCenterFeatureRow
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            entity = argFoo;
            backup = entity.icon;
            output = entity.header;
            yankee = entity.IconComponent;
            foxtra = entity.description;
            entity = _closure1_slot7;
            tangon = undefined;
            result = entity.bind(tangon)();
            zuuluu = _closure1_slot6;
            michal = _closure1_slot4;
            entity = {};
            report = result.container;
            entity['style'] = report;
            golfie = _closure1_slot5;
            oscard = _closure1_slot4;
            report = {};
            option = result.iconContainer;
            report['style'] = option;
            option = null;
            if(!(option == yankee)) { _fun00002_ip = 137; continue _fun00001 }
 82:
            offset = _closure1_slot5;
            verify = _closure1_slot1;
            kiloes = _closure1_slot2;
            option = 5;
            option = kiloes[option];
            verify = verify.bind(tangon)(option);
            option = {};
            kiloes = result.icon;
            option['style'] = kiloes;
            option['source'] = backup;
            backup = 'white';
            option['color'] = backup;
            option = offset.bind(tangon)(verify, option);
            _fun00002_ip = 157; continue _fun00001;
 137:
            offset = _closure1_slot5;
            verify = {};
            backup = 'white';
            verify['color'] = backup;
            option = offset.bind(tangon)(yankee, verify);
 157:
            report['children'] = option;
            oscard = golfie.bind(tangon)(oscard, report);
            report = new Array(2);
            report[0] = oscard;
            option = _closure1_slot6;
            golfie = _closure1_slot4;
            oscard = {};
            verify = result.textContainer;
            oscard['style'] = verify;
            sizing = _closure1_slot5;
            yankee = _closure1_slot0;
            backup = _closure1_slot2;
            offset = 6;
            verify = backup[offset];
            verify = yankee.bind(tangon)(verify);
            kiloes = verify.Text;
            verify = {'style': null, 'variant': 'text-sm/bold', 'color': 'header-primary'};
            result = result.header;
            verify['style'] = result;
            verify['children'] = output;
            kiloes = sizing.bind(tangon)(kiloes, verify);
            verify = new Array(2);
            verify[0] = kiloes;
            romeon = _closure1_slot5;
            offset = backup[offset];
            offset = yankee.bind(tangon)(offset);
            yankee = offset.Text;
            offset = {'variant': 'text-xs/medium', 'color': 'header-secondary'};
            offset['children'] = foxtra;
            offset = romeon.bind(tangon)(yankee, offset);
            verify[1] = offset;
            oscard['children'] = verify;
            oscard = option.bind(tangon)(golfie, oscard);
            report[1] = oscard;
            entity['children'] = report;
            entity = zuuluu.bind(tangon)(michal, entity);
            return entity;
        }
    };
    var _closure1_slot9 = michal;
    entity = global;
    verify = entity.Object;
    option = verify.defineProperty;
    report = {};
    entity = true;
    report['value'] = entity;
    entity = '__esModule';
    entity = option.bind(verify)(zuuluu, entity, report);
    entity = 0;
    option = golfie[entity];
    report = argCor;
    entity = undefined;
    report = report.bind(entity)(option);
    var _closure1_slot3 = report;
    backup = 1;
    report = golfie[backup];
    report = oscard.bind(entity)(report);
    report = report.View;
    var _closure1_slot4 = report;
    kiloes = 2;
    report = golfie[kiloes];
    report = oscard.bind(entity)(report);
    report = report.jsx;
    var _closure1_slot5 = report;
    report = golfie[kiloes];
    report = oscard.bind(entity)(report);
    report = report.jsxs;
    var _closure1_slot6 = report;
    report = 3;
    option = golfie[report];
    offset = oscard.bind(entity)(option);
    verify = offset.createStyles;
    option = {};
    foxtra = {'display': 'flex', 'flexDirection': 'row', 'alignItems': 'center'};
    yankee = 4;
    sizing = golfie[yankee];
    sizing = romeon.bind(entity)(sizing);
    sizing = sizing.spacing;
    sizing = sizing.PX_12;
    foxtra['padding'] = sizing;
    sizing = golfie[yankee];
    sizing = romeon.bind(entity)(sizing);
    sizing = sizing.spacing;
    sizing = sizing.PX_12;
    foxtra['marginBottom'] = sizing;
    sizing = golfie[yankee];
    sizing = romeon.bind(entity)(sizing);
    sizing = sizing.radii;
    sizing = sizing.sm;
    foxtra['borderRadius'] = sizing;
    sizing = golfie[yankee];
    sizing = romeon.bind(entity)(sizing);
    sizing = sizing.colors;
    sizing = sizing.BACKGROUND_PRIMARY;
    foxtra['backgroundColor'] = sizing;
    foxtra['elevation'] = kiloes;
    option['container'] = foxtra;
    foxtra = {'justifyContent': 'center', 'alignItems': 'center', 'width': 40, 'height': 40};
    kiloes = golfie[yankee];
    kiloes = romeon.bind(entity)(kiloes);
    kiloes = kiloes.radii;
    kiloes = kiloes.round;
    foxtra['borderRadius'] = kiloes;
    kiloes = golfie[yankee];
    kiloes = romeon.bind(entity)(kiloes);
    kiloes = kiloes.colors;
    kiloes = kiloes.BACKGROUND_ACCENT;
    foxtra['backgroundColor'] = kiloes;
    kiloes = golfie[yankee];
    kiloes = romeon.bind(entity)(kiloes);
    kiloes = kiloes.spacing;
    kiloes = kiloes.PX_12;
    foxtra['marginRight'] = kiloes;
    option['iconContainer'] = foxtra;
    foxtra = {};
    foxtra['flexShrink'] = backup;
    option['textContainer'] = foxtra;
    foxtra = {'width': 25, 'height': 25};
    option['icon'] = foxtra;
    foxtra = {};
    backup = golfie[yankee];
    backup = romeon.bind(entity)(backup);
    backup = backup.spacing;
    backup = backup.PX_4;
    foxtra['marginBottom'] = backup;
    option['header'] = foxtra;
    option = verify.bind(offset)(option);
    var _closure1_slot7 = option;
    report = golfie[report];
    verify = oscard.bind(entity)(report);
    option = verify.createStyles;
    report = {};
    offset = {};
    foxtra = 20;
    offset['marginTop'] = foxtra;
    foxtra = golfie[yankee];
    foxtra = romeon.bind(entity)(foxtra);
    foxtra = foxtra.radii;
    foxtra = foxtra.sm;
    offset['borderRadius'] = foxtra;
    report['container'] = offset;
    offset = {};
    foxtra = golfie[yankee];
    foxtra = romeon.bind(entity)(foxtra);
    foxtra = foxtra.spacing;
    foxtra = foxtra.PX_8;
    offset['marginBottom'] = foxtra;
    report['header'] = offset;
    offset = {};
    yankee = golfie[yankee];
    yankee = romeon.bind(entity)(yankee);
    yankee = yankee.spacing;
    yankee = yankee.PX_24;
    offset['marginBottom'] = yankee;
    report['tableGroup'] = offset;
    report = option.bind(verify)(report);
    var _closure1_slot8 = report;
    report = 19;
    report = golfie[report];
    golfie = oscard.bind(entity)(report);
    oscard = golfie.fileFinishedImporting;
    report = 'modules/parent_tools/native/FamilyCenterFeatureRow.tsx';
    report = oscard.bind(golfie)(report);
    tangon = function() { // Original name: FamilyCenterFeatureRows
        _fun00003: for(var _fun00004_ip = 0; ; ) switch(_fun00004_ip) {
 0:
            entity = _closure1_slot8;
            report = undefined;
            oscard = entity.bind(report)();
            zuuluu = _closure1_slot3;
            michal = zuuluu.useContext;
            option = _closure1_slot0;
            tangon = _closure1_slot2;
            entity = 7;
            entity = tangon[entity];
            entity = option.bind(report)(entity);
            entity = entity.RedesignCompatContext;
            entity = michal.bind(zuuluu)(entity);
            michal = 8;
            zuuluu = tangon[michal];
            foxtra = option.bind(report)(zuuluu);
            yankee = foxtra.useAgeSpecificText;
            romeon = 9;
            zuuluu = tangon[romeon];
            zuuluu = option.bind(report)(zuuluu);
            sizing = zuuluu.intl;
            golfie = sizing.string;
            offset = _closure1_slot1;
            kiloes = 10;
            zuuluu = tangon[kiloes];
            zuuluu = offset.bind(report)(zuuluu);
            zuuluu = zuuluu.5RZ8Tk;
            golfie = golfie.bind(sizing)(zuuluu);
            zuuluu = tangon[romeon];
            zuuluu = option.bind(report)(zuuluu);
            output = zuuluu.intl;
            sizing = output.string;
            zuuluu = tangon[kiloes];
            zuuluu = offset.bind(report)(zuuluu);
            zuuluu = zuuluu.bmhCnJ;
            zuuluu = sizing.bind(output)(zuuluu);
            yankee = yankee.bind(foxtra)(golfie, zuuluu);
            zuuluu = tangon[michal];
            sizing = option.bind(report)(zuuluu);
            foxtra = sizing.useAgeSpecificText;
            zuuluu = tangon[romeon];
            zuuluu = option.bind(report)(zuuluu);
            output = zuuluu.intl;
            golfie = output.string;
            zuuluu = tangon[kiloes];
            zuuluu = offset.bind(report)(zuuluu);
            zuuluu = zuuluu.XKnFFh;
            golfie = golfie.bind(output)(zuuluu);
            zuuluu = tangon[romeon];
            zuuluu = option.bind(report)(zuuluu);
            result = zuuluu.intl;
            output = result.string;
            zuuluu = tangon[kiloes];
            zuuluu = offset.bind(report)(zuuluu);
            zuuluu = zuuluu.68zfxM;
            zuuluu = output.bind(result)(zuuluu);
            golfie = foxtra.bind(sizing)(golfie, zuuluu);
            michal = tangon[michal];
            sizing = option.bind(report)(michal);
            foxtra = sizing.useAgeSpecificText;
            michal = tangon[romeon];
            michal = option.bind(report)(michal);
            output = michal.intl;
            zuuluu = output.string;
            michal = tangon[kiloes];
            michal = offset.bind(report)(michal);
            michal = michal.Rm/6a2;
            zuuluu = zuuluu.bind(output)(michal);
            michal = tangon[romeon];
            michal = option.bind(report)(michal);
            result = michal.intl;
            output = result.string;
            michal = tangon[kiloes];
            michal = offset.bind(report)(michal);
            michal = michal.1xPTwM;
            michal = output.bind(result)(michal);
            zuuluu = foxtra.bind(sizing)(zuuluu, michal);
            michal = {};
            foxtra = 11;
            foxtra = tangon[foxtra];
            foxtra = offset.bind(report)(foxtra);
            michal['icon'] = foxtra;
            foxtra = 12;
            foxtra = tangon[foxtra];
            foxtra = option.bind(report)(foxtra);
            foxtra = foxtra.ChatCheckIcon;
            michal['IconComponent'] = foxtra;
            foxtra = tangon[romeon];
            foxtra = option.bind(report)(foxtra);
            output = foxtra.intl;
            sizing = output.string;
            foxtra = tangon[kiloes];
            foxtra = offset.bind(report)(foxtra);
            foxtra = foxtra.001l3t;
            foxtra = sizing.bind(output)(foxtra);
            michal['header'] = foxtra;
            michal['description'] = yankee;
            yankee = new Array(3);
            yankee[0] = michal;
            michal = {};
            foxtra = 13;
            foxtra = tangon[foxtra];
            foxtra = offset.bind(report)(foxtra);
            michal['icon'] = foxtra;
            foxtra = 14;
            foxtra = tangon[foxtra];
            foxtra = option.bind(report)(foxtra);
            foxtra = foxtra.EyeIcon;
            michal['IconComponent'] = foxtra;
            foxtra = tangon[romeon];
            foxtra = option.bind(report)(foxtra);
            output = foxtra.intl;
            sizing = output.string;
            foxtra = tangon[kiloes];
            foxtra = offset.bind(report)(foxtra);
            foxtra = foxtra.yipAeH;
            foxtra = sizing.bind(output)(foxtra);
            michal['header'] = foxtra;
            michal['description'] = golfie;
            yankee[1] = michal;
            michal = {};
            golfie = 15;
            golfie = tangon[golfie];
            golfie = offset.bind(report)(golfie);
            michal['icon'] = golfie;
            golfie = 16;
            golfie = tangon[golfie];
            golfie = option.bind(report)(golfie);
            golfie = golfie.QrCodeIcon;
            michal['IconComponent'] = golfie;
            golfie = tangon[romeon];
            golfie = option.bind(report)(golfie);
            option = golfie.intl;
            golfie = option.string;
            tangon = tangon[kiloes];
            tangon = offset.bind(report)(tangon);
            tangon = tangon.hhOuMT;
            tangon = golfie.bind(option)(tangon);
            michal['header'] = tangon;
            michal['description'] = zuuluu;
            yankee[2] = michal;
            if(entity) { _fun00004_ip = 840; continue _fun00003 }
 670:
            zuuluu = _closure1_slot6;
            michal = _closure1_slot4;
            entity = {};
            tangon = oscard.container;
            entity['style'] = tangon;
            option = _closure1_slot5;
            sizing = _closure1_slot0;
            offset = _closure1_slot2;
            tangon = 6;
            tangon = offset[tangon];
            tangon = sizing.bind(report)(tangon);
            golfie = tangon.Text;
            tangon = {'style': null, 'variant': 'eyebrow', 'color': 'header-secondary'};
            foxtra = oscard.header;
            tangon['style'] = foxtra;
            foxtra = offset[romeon];
            foxtra = sizing.bind(report)(foxtra);
            sizing = foxtra.intl;
            foxtra = sizing.string;
            output = _closure1_slot1;
            offset = offset[kiloes];
            offset = output.bind(report)(offset);
            offset = offset.6JkHSk;
            offset = foxtra.bind(sizing)(offset);
            tangon['children'] = offset;
            golfie = option.bind(report)(golfie, tangon);
            tangon = new Array(2);
            tangon[0] = golfie;
            option = yankee.map;
            golfie = function(argFoo, argBar) {
                report = _closure1_slot5;
                tangon = _closure1_slot9;
                zuuluu = {};
                golfie = argFoo;
                option = zuuluu;
                entity = copyDataProperties(option, golfie);
                michal = undefined;
                entity = argBar;
                entity = report.bind(michal)(tangon, zuuluu, entity);
                return entity;
            };
            golfie = option.bind(yankee)(golfie);
            tangon[1] = golfie;
            entity['children'] = tangon;
            entity = zuuluu.bind(report)(michal, entity);
            _fun00004_ip = 976; continue _fun00003;
 840:
            tangon = _closure1_slot5;
            zuuluu = _closure1_slot4;
            michal = {};
            oscard = oscard.tableGroup;
            michal['style'] = oscard;
            option = _closure1_slot5;
            foxtra = _closure1_slot0;
            offset = _closure1_slot2;
            oscard = 17;
            oscard = offset[oscard];
            oscard = foxtra.bind(report)(oscard);
            golfie = oscard.TableRowGroup;
            oscard = {};
            romeon = offset[romeon];
            romeon = foxtra.bind(report)(romeon);
            foxtra = romeon.intl;
            romeon = foxtra.string;
            backup = _closure1_slot1;
            offset = offset[kiloes];
            offset = backup.bind(report)(offset);
            offset = offset.6JkHSk;
            offset = romeon.bind(foxtra)(offset);
            oscard['title'] = offset;
            offset = yankee.map;
            verify = function(argFoo) {
                entity = argFoo;
                report = entity.header;
                romeon = entity.description;
                offset = entity.icon;
                verify = entity.IconComponent;
                tangon = _closure1_slot5;
                golfie = _closure1_slot0;
                yankee = _closure1_slot2;
                oscard = 18;
                entity = yankee[oscard];
                zuuluu = undefined;
                entity = golfie.bind(zuuluu)(entity);
                michal = entity.TableRow;
                entity = {};
                entity['label'] = report;
                entity['subLabel'] = romeon;
                option = _closure1_slot5;
                oscard = yankee[oscard];
                oscard = golfie.bind(zuuluu)(oscard);
                oscard = oscard.TableRow;
                golfie = oscard.Icon;
                oscard = {};
                oscard['source'] = offset;
                oscard['IconComponent'] = verify;
                oscard = option.bind(zuuluu)(golfie, oscard);
                entity['icon'] = oscard;
                entity = tangon.bind(zuuluu)(michal, entity, report);
                return entity;
            };
            verify = offset.bind(yankee)(verify);
            oscard['children'] = verify;
            oscard = option.bind(report)(golfie, oscard);
            michal['children'] = oscard;
            entity = tangon.bind(report)(zuuluu, michal);
 976:
            return entity;
        }
    };
    zuuluu['default'] = tangon;
    zuuluu['FamilyCenterFeatureRow'] = michal;
    return entity;
})();