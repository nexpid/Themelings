// app/modules/parent_tools/native/FamilyCenterFeatureRow.tsx
export default (function(argFoo, argBar, argBaz, argCorge, _, argFred, argPlugh) {
    oscar = argBar;
    romeo = argBaz;
    zulu = argFred;
    golf = argPlugh;
    var _closure1_slot0 = oscar;
    var _closure1_slot1 = romeo;
    var _closure1_slot2 = golf;
    mike = function(argFoo) { // Original name: FamilyCenterFeatureRow
        _fun95325: for(var _fun95325_ip = 0; ; ) switch(_fun95325_ip) {
 0:
            entity = argFoo;
            backup = entity.icon;
            output = entity.header;
            yankee = entity.IconComponent;
            foxtrot = entity.description;
            entity = _closure1_slot7;
            tango = undefined;
            result = entity.bind(tango)();
            zulu = _closure1_slot6;
            mike = _closure1_slot4;
            entity = {};
            report = result.container;
            entity['style'] = report;
            golf = _closure1_slot5;
            oscar = _closure1_slot4;
            report = {};
            options = result.iconContainer;
            report['style'] = options;
            options = null;
            if(!(options == yankee)) { _fun95325_ip = 137; continue _fun95325 }
 82:
            offset = _closure1_slot5;
            verify = _closure1_slot1;
            kilo = _closure1_slot2;
            options = 5;
            options = kilo[options];
            verify = verify.bind(tango)(options);
            options = {};
            kilo = result.icon;
            options['style'] = kilo;
            options['source'] = backup;
            backup = 'white';
            options['color'] = backup;
            options = offset.bind(tango)(verify, options);
            _fun95325_ip = 157; continue _fun95325;
 137:
            offset = _closure1_slot5;
            verify = {};
            backup = 'white';
            verify['color'] = backup;
            options = offset.bind(tango)(yankee, verify);
 157:
            report['children'] = options;
            oscar = golf.bind(tango)(oscar, report);
            report = new Array(2);
            report[0] = oscar;
            options = _closure1_slot6;
            golf = _closure1_slot4;
            oscar = {};
            verify = result.textContainer;
            oscar['style'] = verify;
            sizing = _closure1_slot5;
            yankee = _closure1_slot0;
            backup = _closure1_slot2;
            offset = 6;
            verify = backup[offset];
            verify = yankee.bind(tango)(verify);
            kilo = verify.Text;
            verify = {'style': null, 'variant': 'text-sm/bold', 'color': 'header-primary'};
            result = result.header;
            verify['style'] = result;
            verify['children'] = output;
            kilo = sizing.bind(tango)(kilo, verify);
            verify = new Array(2);
            verify[0] = kilo;
            romeo = _closure1_slot5;
            offset = backup[offset];
            offset = yankee.bind(tango)(offset);
            yankee = offset.Text;
            offset = {'variant': 'text-xs/medium', 'color': 'header-secondary'};
            offset['children'] = foxtrot;
            offset = romeo.bind(tango)(yankee, offset);
            verify[1] = offset;
            oscar['children'] = verify;
            oscar = options.bind(tango)(golf, oscar);
            report[1] = oscar;
            entity['children'] = report;
            entity = zulu.bind(tango)(mike, entity);
            return entity;
        }
    };
    var _closure1_slot9 = mike;
    entity = global;
    verify = entity.Object;
    options = verify.defineProperty;
    report = {};
    entity = true;
    report['value'] = entity;
    entity = '__esModule';
    entity = options.bind(verify)(zulu, entity, report);
    entity = 0;
    options = golf[entity];
    report = argCorge;
    entity = undefined;
    report = report.bind(entity)(options);
    var _closure1_slot3 = report;
    backup = 1;
    report = golf[backup];
    report = oscar.bind(entity)(report);
    report = report.View;
    var _closure1_slot4 = report;
    kilo = 2;
    report = golf[kilo];
    report = oscar.bind(entity)(report);
    report = report.jsx;
    var _closure1_slot5 = report;
    report = golf[kilo];
    report = oscar.bind(entity)(report);
    report = report.jsxs;
    var _closure1_slot6 = report;
    report = 3;
    options = golf[report];
    offset = oscar.bind(entity)(options);
    verify = offset.createStyles;
    options = {};
    foxtrot = {'display': 'flex', 'flexDirection': 'row', 'alignItems': 'center'};
    yankee = 4;
    sizing = golf[yankee];
    sizing = romeo.bind(entity)(sizing);
    sizing = sizing.spacing;
    sizing = sizing.PX_12;
    foxtrot['padding'] = sizing;
    sizing = golf[yankee];
    sizing = romeo.bind(entity)(sizing);
    sizing = sizing.spacing;
    sizing = sizing.PX_12;
    foxtrot['marginBottom'] = sizing;
    sizing = golf[yankee];
    sizing = romeo.bind(entity)(sizing);
    sizing = sizing.radii;
    sizing = sizing.sm;
    foxtrot['borderRadius'] = sizing;
    sizing = golf[yankee];
    sizing = romeo.bind(entity)(sizing);
    sizing = sizing.colors;
    sizing = sizing.BACKGROUND_PRIMARY;
    foxtrot['backgroundColor'] = sizing;
    foxtrot['elevation'] = kilo;
    options['container'] = foxtrot;
    foxtrot = {'justifyContent': 'center', 'alignItems': 'center', 'width': 40, 'height': 40};
    kilo = golf[yankee];
    kilo = romeo.bind(entity)(kilo);
    kilo = kilo.radii;
    kilo = kilo.round;
    foxtrot['borderRadius'] = kilo;
    kilo = golf[yankee];
    kilo = romeo.bind(entity)(kilo);
    kilo = kilo.colors;
    kilo = kilo.BACKGROUND_ACCENT;
    foxtrot['backgroundColor'] = kilo;
    kilo = golf[yankee];
    kilo = romeo.bind(entity)(kilo);
    kilo = kilo.spacing;
    kilo = kilo.PX_12;
    foxtrot['marginRight'] = kilo;
    options['iconContainer'] = foxtrot;
    foxtrot = {};
    foxtrot['flexShrink'] = backup;
    options['textContainer'] = foxtrot;
    foxtrot = {'width': 25, 'height': 25};
    options['icon'] = foxtrot;
    foxtrot = {};
    backup = golf[yankee];
    backup = romeo.bind(entity)(backup);
    backup = backup.spacing;
    backup = backup.PX_4;
    foxtrot['marginBottom'] = backup;
    options['header'] = foxtrot;
    options = verify.bind(offset)(options);
    var _closure1_slot7 = options;
    report = golf[report];
    verify = oscar.bind(entity)(report);
    options = verify.createStyles;
    report = {};
    offset = {};
    foxtrot = 20;
    offset['marginTop'] = foxtrot;
    foxtrot = golf[yankee];
    foxtrot = romeo.bind(entity)(foxtrot);
    foxtrot = foxtrot.radii;
    foxtrot = foxtrot.sm;
    offset['borderRadius'] = foxtrot;
    report['container'] = offset;
    offset = {};
    foxtrot = golf[yankee];
    foxtrot = romeo.bind(entity)(foxtrot);
    foxtrot = foxtrot.spacing;
    foxtrot = foxtrot.PX_8;
    offset['marginBottom'] = foxtrot;
    report['header'] = offset;
    offset = {};
    yankee = golf[yankee];
    yankee = romeo.bind(entity)(yankee);
    yankee = yankee.spacing;
    yankee = yankee.PX_24;
    offset['marginBottom'] = yankee;
    report['tableGroup'] = offset;
    report = options.bind(verify)(report);
    var _closure1_slot8 = report;
    report = 18;
    report = golf[report];
    golf = oscar.bind(entity)(report);
    oscar = golf.fileFinishedImporting;
    report = 'modules/parent_tools/native/FamilyCenterFeatureRow.tsx';
    report = oscar.bind(golf)(report);
    tango = function() { // Original name: FamilyCenterFeatureRows
        _fun95326: for(var _fun95326_ip = 0; ; ) switch(_fun95326_ip) {
 0:
            entity = _closure1_slot8;
            report = undefined;
            golf = entity.bind(report)();
            zulu = _closure1_slot3;
            mike = zulu.useContext;
            romeo = _closure1_slot0;
            tango = _closure1_slot2;
            entity = 7;
            entity = tango[entity];
            entity = romeo.bind(report)(entity);
            entity = entity.RedesignCompatContext;
            entity = mike.bind(zulu)(entity);
            mike = 8;
            zulu = tango[mike];
            yankee = romeo.bind(report)(zulu);
            offset = yankee.useAgeSpecificText;
            kilo = 9;
            zulu = tango[kilo];
            zulu = romeo.bind(report)(zulu);
            foxtrot = zulu.intl;
            options = foxtrot.string;
            zulu = tango[kilo];
            zulu = romeo.bind(report)(zulu);
            zulu = zulu.t;
            zulu = zulu.5RZ8Tk;
            options = options.bind(foxtrot)(zulu);
            zulu = tango[kilo];
            zulu = romeo.bind(report)(zulu);
            backup = zulu.intl;
            foxtrot = backup.string;
            zulu = tango[kilo];
            zulu = romeo.bind(report)(zulu);
            zulu = zulu.t;
            zulu = zulu.bmhCnJ;
            zulu = foxtrot.bind(backup)(zulu);
            yankee = offset.bind(yankee)(options, zulu);
            zulu = tango[mike];
            foxtrot = romeo.bind(report)(zulu);
            offset = foxtrot.useAgeSpecificText;
            zulu = tango[kilo];
            zulu = romeo.bind(report)(zulu);
            backup = zulu.intl;
            options = backup.string;
            zulu = tango[kilo];
            zulu = romeo.bind(report)(zulu);
            zulu = zulu.t;
            zulu = zulu.XKnFFh;
            options = options.bind(backup)(zulu);
            zulu = tango[kilo];
            zulu = romeo.bind(report)(zulu);
            sizing = zulu.intl;
            backup = sizing.string;
            zulu = tango[kilo];
            zulu = romeo.bind(report)(zulu);
            zulu = zulu.t;
            zulu = zulu.68zfxM;
            zulu = backup.bind(sizing)(zulu);
            options = offset.bind(foxtrot)(options, zulu);
            mike = tango[mike];
            foxtrot = romeo.bind(report)(mike);
            offset = foxtrot.useAgeSpecificText;
            mike = tango[kilo];
            mike = romeo.bind(report)(mike);
            backup = mike.intl;
            zulu = backup.string;
            mike = tango[kilo];
            mike = romeo.bind(report)(mike);
            mike = mike.t;
            mike = mike.Rm/6a2;
            zulu = zulu.bind(backup)(mike);
            mike = tango[kilo];
            mike = romeo.bind(report)(mike);
            sizing = mike.intl;
            backup = sizing.string;
            mike = tango[kilo];
            mike = romeo.bind(report)(mike);
            mike = mike.t;
            mike = mike.1xPTwM;
            mike = backup.bind(sizing)(mike);
            zulu = offset.bind(foxtrot)(zulu, mike);
            mike = {};
            offset = _closure1_slot1;
            foxtrot = 10;
            foxtrot = tango[foxtrot];
            foxtrot = offset.bind(report)(foxtrot);
            mike['icon'] = foxtrot;
            foxtrot = 11;
            foxtrot = tango[foxtrot];
            foxtrot = romeo.bind(report)(foxtrot);
            foxtrot = foxtrot.ChatCheckIcon;
            mike['IconComponent'] = foxtrot;
            foxtrot = tango[kilo];
            foxtrot = romeo.bind(report)(foxtrot);
            sizing = foxtrot.intl;
            backup = sizing.string;
            foxtrot = tango[kilo];
            foxtrot = romeo.bind(report)(foxtrot);
            foxtrot = foxtrot.t;
            foxtrot = foxtrot.001l3t;
            foxtrot = backup.bind(sizing)(foxtrot);
            mike['header'] = foxtrot;
            mike['description'] = yankee;
            yankee = new Array(3);
            yankee[0] = mike;
            mike = {};
            foxtrot = 12;
            foxtrot = tango[foxtrot];
            foxtrot = offset.bind(report)(foxtrot);
            mike['icon'] = foxtrot;
            foxtrot = 13;
            foxtrot = tango[foxtrot];
            foxtrot = romeo.bind(report)(foxtrot);
            foxtrot = foxtrot.EyeIcon;
            mike['IconComponent'] = foxtrot;
            foxtrot = tango[kilo];
            foxtrot = romeo.bind(report)(foxtrot);
            sizing = foxtrot.intl;
            backup = sizing.string;
            foxtrot = tango[kilo];
            foxtrot = romeo.bind(report)(foxtrot);
            foxtrot = foxtrot.t;
            foxtrot = foxtrot.yipAeH;
            foxtrot = backup.bind(sizing)(foxtrot);
            mike['header'] = foxtrot;
            mike['description'] = options;
            yankee[1] = mike;
            mike = {};
            options = 14;
            options = tango[options];
            options = offset.bind(report)(options);
            mike['icon'] = options;
            options = 15;
            options = tango[options];
            options = romeo.bind(report)(options);
            options = options.QrCodeIcon;
            mike['IconComponent'] = options;
            options = tango[kilo];
            options = romeo.bind(report)(options);
            offset = options.intl;
            options = offset.string;
            tango = tango[kilo];
            tango = romeo.bind(report)(tango);
            tango = tango.t;
            tango = tango.hhOuMT;
            tango = options.bind(offset)(tango);
            mike['header'] = tango;
            mike['description'] = zulu;
            yankee[2] = mike;
            if(entity) { _fun95326_ip = 865; continue _fun95326 }
 694:
            zulu = _closure1_slot6;
            mike = _closure1_slot4;
            entity = {};
            tango = golf.container;
            entity['style'] = tango;
            offset = _closure1_slot5;
            sizing = _closure1_slot0;
            romeo = _closure1_slot2;
            tango = 6;
            tango = romeo[tango];
            tango = sizing.bind(report)(tango);
            options = tango.Text;
            tango = {'style': null, 'variant': 'eyebrow', 'color': 'header-secondary'};
            foxtrot = golf.header;
            tango['style'] = foxtrot;
            foxtrot = romeo[kilo];
            foxtrot = sizing.bind(report)(foxtrot);
            backup = foxtrot.intl;
            foxtrot = backup.string;
            romeo = romeo[kilo];
            romeo = sizing.bind(report)(romeo);
            romeo = romeo.t;
            romeo = romeo.6JkHSk;
            romeo = foxtrot.bind(backup)(romeo);
            tango['children'] = romeo;
            options = offset.bind(report)(options, tango);
            tango = new Array(2);
            tango[0] = options;
            offset = yankee.map;
            options = function(argFoo, argBar) {
                report = _closure1_slot5;
                tango = _closure1_slot9;
                zulu = {};
                golf = argFoo;
                options = zulu;
                entity = copyDataProperties(options, golf);
                mike = undefined;
                entity = argBar;
                entity = report.bind(mike)(tango, zulu, entity);
                return entity;
            };
            options = offset.bind(yankee)(options);
            tango[1] = options;
            entity['children'] = tango;
            entity = zulu.bind(report)(mike, entity);
            _fun95326_ip = 1002; continue _fun95326;
 865:
            tango = _closure1_slot5;
            zulu = _closure1_slot4;
            mike = {};
            golf = golf.tableGroup;
            mike['style'] = golf;
            options = _closure1_slot5;
            backup = _closure1_slot0;
            offset = _closure1_slot2;
            oscar = 16;
            oscar = offset[oscar];
            oscar = backup.bind(report)(oscar);
            golf = oscar.TableRowGroup;
            oscar = {};
            romeo = offset[kilo];
            romeo = backup.bind(report)(romeo);
            foxtrot = romeo.intl;
            romeo = foxtrot.string;
            offset = offset[kilo];
            offset = backup.bind(report)(offset);
            offset = offset.t;
            offset = offset.6JkHSk;
            offset = romeo.bind(foxtrot)(offset);
            oscar['title'] = offset;
            offset = yankee.map;
            verify = function(argFoo) {
                entity = argFoo;
                report = entity.header;
                romeo = entity.description;
                offset = entity.icon;
                verify = entity.IconComponent;
                tango = _closure1_slot5;
                golf = _closure1_slot0;
                yankee = _closure1_slot2;
                oscar = 17;
                entity = yankee[oscar];
                zulu = undefined;
                entity = golf.bind(zulu)(entity);
                mike = entity.TableRow;
                entity = {};
                entity['label'] = report;
                entity['subLabel'] = romeo;
                options = _closure1_slot5;
                oscar = yankee[oscar];
                oscar = golf.bind(zulu)(oscar);
                oscar = oscar.TableRow;
                golf = oscar.Icon;
                oscar = {};
                oscar['source'] = offset;
                oscar['IconComponent'] = verify;
                oscar = options.bind(zulu)(golf, oscar);
                entity['icon'] = oscar;
                entity = tango.bind(zulu)(mike, entity, report);
                return entity;
            };
            verify = offset.bind(yankee)(verify);
            oscar['children'] = verify;
            oscar = options.bind(report)(golf, oscar);
            mike['children'] = oscar;
            entity = tango.bind(report)(zulu, mike);
 1002:
            return entity;
        }
    };
    zulu['default'] = tango;
    zulu['FamilyCenterFeatureRow'] = mike;
    return entity;
})();