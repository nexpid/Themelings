// app/modules/parent_tools/native/FamilyCenterModalBase.tsx
export default (function(argFoo, argBar, argBaz, argCorge, _, argFred, argPlugh) {
    report = argBar;
    yankee = argBaz;
    zulu = argFred;
    oscar = argPlugh;
    var _closure1_slot0 = report;
    var _closure1_slot1 = yankee;
    var _closure1_slot2 = oscar;
    entity = global;
    options = entity.Object;
    golf = options.defineProperty;
    tango = {};
    entity = true;
    tango['value'] = entity;
    entity = '__esModule';
    entity = golf.bind(options)(zulu, entity, tango);
    entity = 0;
    golf = oscar[entity];
    tango = argCorge;
    entity = undefined;
    tango = tango.bind(entity)(golf);
    romeo = 1;
    tango = oscar[romeo];
    tango = report.bind(entity)(tango);
    golf = tango.View;
    var _closure1_slot3 = golf;
    tango = tango.ScrollView;
    var _closure1_slot4 = tango;
    tango = 2;
    golf = oscar[tango];
    golf = report.bind(entity)(golf);
    golf = golf.jsx;
    var _closure1_slot5 = golf;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.jsxs;
    var _closure1_slot6 = tango;
    tango = 3;
    tango = oscar[tango];
    options = report.bind(entity)(tango);
    golf = options.createStyles;
    tango = {};
    verify = {'display': 'flex', 'flexDirection': 'column', 'backgroundColor': null, 'height': '100%'};
    offset = 4;
    foxtrot = oscar[offset];
    foxtrot = yankee.bind(entity)(foxtrot);
    foxtrot = foxtrot.colors;
    foxtrot = foxtrot.BACKGROUND_PRIMARY;
    verify['backgroundColor'] = foxtrot;
    foxtrot = oscar[offset];
    foxtrot = yankee.bind(entity)(foxtrot);
    foxtrot = foxtrot.spacing;
    foxtrot = foxtrot.PX_24;
    verify['paddingTop'] = foxtrot;
    tango['root'] = verify;
    verify = {'marginRight': 8, 'alignSelf': 'flex-end'};
    tango['closeButton'] = verify;
    verify = {};
    verify['flexGrow'] = romeo;
    romeo = oscar[offset];
    romeo = yankee.bind(entity)(romeo);
    romeo = romeo.spacing;
    romeo = romeo.PX_16;
    verify['padding'] = romeo;
    tango['content'] = verify;
    verify = {'display': 'flex', 'flexDirection': 'column', 'height': '100%'};
    romeo = oscar[offset];
    romeo = yankee.bind(entity)(romeo);
    romeo = romeo.spacing;
    romeo = romeo.PX_24;
    verify['marginTop'] = romeo;
    tango['container'] = verify;
    verify = {'flexGrow': 0, 'flexShrink': 1};
    romeo = oscar[offset];
    romeo = yankee.bind(entity)(romeo);
    romeo = romeo.colors;
    romeo = romeo.BACKGROUND_MODIFIER_ACCENT;
    verify['backgroundColor'] = romeo;
    romeo = oscar[offset];
    romeo = yankee.bind(entity)(romeo);
    romeo = romeo.spacing;
    romeo = romeo.PX_24;
    verify['paddingVertical'] = romeo;
    offset = oscar[offset];
    offset = yankee.bind(entity)(offset);
    offset = offset.spacing;
    offset = offset.PX_16;
    verify['paddingHorizontal'] = offset;
    tango['footer'] = verify;
    tango = golf.bind(options)(tango);
    var _closure1_slot7 = tango;
    tango = 10;
    tango = oscar[tango];
    oscar = report.bind(entity)(tango);
    report = oscar.fileFinishedImporting;
    tango = 'modules/parent_tools/native/FamilyCenterModalBase.tsx';
    tango = report.bind(oscar)(tango);
    mike = function(argFoo) { // Original name: FamilyCenterModalBase
        _fun95164: for(var _fun95164_ip = 0; ; ) switch(_fun95164_ip) {
 0:
            entity = argFoo;
            romeo = entity.children;
            output = entity.footer;
            entity = _closure1_slot7;
            tango = undefined;
            sizing = entity.bind(tango)();
            zulu = _closure1_slot5;
            source = _closure1_slot0;
            foxtrot = _closure1_slot2;
            echo = 5;
            entity = foxtrot[echo];
            entity = source.bind(tango)(entity);
            mike = entity.SafeAreaPaddingView;
            entity = {};
            result = true;
            entity['top'] = result;
            golf = _closure1_slot6;
            oscar = _closure1_slot3;
            report = {};
            options = sizing.root;
            report['style'] = options;
            yankee = _closure1_slot1;
            options = 6;
            options = foxtrot[options];
            verify = yankee.bind(tango)(options);
            options = {};
            offset = 'button';
            options['accessibilityRole'] = offset;
            offset = 7;
            backup = foxtrot[offset];
            backup = source.bind(tango)(backup);
            update = backup.intl;
            backup = update.string;
            offset = foxtrot[offset];
            offset = source.bind(tango)(offset);
            offset = offset.t;
            offset = offset.cpT0Cg;
            offset = backup.bind(update)(offset);
            options['accessibilityLabel'] = offset;
            offset = 8;
            offset = foxtrot[offset];
            offset = yankee.bind(tango)(offset);
            options['source'] = offset;
            yankee = sizing.closeButton;
            offset = new Array(1);
            offset[0] = yankee;
            options['style'] = offset;
            offset = function() { // Original name: onPress
                zulu = _closure1_slot1;
                mike = _closure1_slot2;
                entity = 9;
                mike = mike[entity];
                entity = undefined;
                mike = zulu.bind(entity)(mike);
                entity = mike.pop;
                entity = entity.bind(mike)();
                return entity;
            };
            options['onPress'] = offset;
            verify = zulu.bind(tango)(verify, options);
            options = new Array(2);
            options[0] = verify;
            verify = {};
            offset = sizing.container;
            verify['style'] = offset;
            yankee = _closure1_slot4;
            offset = {};
            foxtrot = sizing.content;
            offset['style'] = foxtrot;
            offset['children'] = romeo;
            yankee = zulu.bind(tango)(yankee, offset);
            offset = new Array(2);
            offset[0] = yankee;
            yankee = null;
            if(!(tango !== output)) { _fun95164_ip = 342; continue _fun95164 }
 273:
            backup = _closure1_slot5;
            foxtrot = _closure1_slot3;
            romeo = {};
            sizing = sizing.footer;
            romeo['style'] = sizing;
            sizing = _closure1_slot0;
            kilo = _closure1_slot2;
            kilo = kilo[echo];
            kilo = sizing.bind(tango)(kilo);
            sizing = kilo.SafeAreaPaddingView;
            kilo = {};
            kilo['bottom'] = result;
            kilo['children'] = output;
            kilo = backup.bind(tango)(sizing, kilo);
            romeo['children'] = kilo;
            yankee = backup.bind(tango)(foxtrot, romeo);
 342:
            offset[1] = yankee;
            verify['children'] = offset;
            verify = golf.bind(tango)(oscar, verify);
            options[1] = verify;
            report['children'] = options;
            report = golf.bind(tango)(oscar, report);
            entity['children'] = report;
            entity = zulu.bind(tango)(mike, entity);
            return entity;
        }
    };
    zulu['default'] = mike;
    return entity;
})();