// app/modules/parent_tools/native/FamilyCenterModalBase.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    report = argBar;
    yankee = argBaz;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    var _closure1_slot1 = yankee;
    var _closure1_slot2 = oscard;
    entity = global;
    option = entity.Object;
    golfie = option.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(option)(zuuluu, entity, tangon);
    entity = 0;
    golfie = oscard[entity];
    tangon = argCor;
    entity = undefined;
    tangon = tangon.bind(entity)(golfie);
    romeon = 1;
    tangon = oscard[romeon];
    tangon = report.bind(entity)(tangon);
    golfie = tangon.View;
    var _closure1_slot3 = golfie;
    tangon = tangon.ScrollView;
    var _closure1_slot4 = tangon;
    tangon = 2;
    golfie = oscard[tangon];
    golfie = report.bind(entity)(golfie);
    golfie = golfie.jsx;
    var _closure1_slot5 = golfie;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.jsxs;
    var _closure1_slot6 = tangon;
    tangon = 3;
    tangon = oscard[tangon];
    option = report.bind(entity)(tangon);
    golfie = option.createStyles;
    tangon = {};
    verify = {'display': 'flex', 'flexDirection': 'column', 'backgroundColor': null, 'height': '100%'};
    offset = 4;
    foxtra = oscard[offset];
    foxtra = yankee.bind(entity)(foxtra);
    foxtra = foxtra.colors;
    foxtra = foxtra.BACKGROUND_PRIMARY;
    verify['backgroundColor'] = foxtra;
    foxtra = oscard[offset];
    foxtra = yankee.bind(entity)(foxtra);
    foxtra = foxtra.spacing;
    foxtra = foxtra.PX_24;
    verify['paddingTop'] = foxtra;
    tangon['root'] = verify;
    verify = {'marginRight': 8, 'alignSelf': 'flex-end'};
    tangon['closeButton'] = verify;
    verify = {};
    verify['flexGrow'] = romeon;
    romeon = oscard[offset];
    romeon = yankee.bind(entity)(romeon);
    romeon = romeon.spacing;
    romeon = romeon.PX_16;
    verify['padding'] = romeon;
    tangon['content'] = verify;
    verify = {'display': 'flex', 'flexDirection': 'column', 'height': '100%'};
    romeon = oscard[offset];
    romeon = yankee.bind(entity)(romeon);
    romeon = romeon.spacing;
    romeon = romeon.PX_24;
    verify['marginTop'] = romeon;
    tangon['container'] = verify;
    verify = {'flexGrow': 0, 'flexShrink': 1};
    romeon = oscard[offset];
    romeon = yankee.bind(entity)(romeon);
    romeon = romeon.colors;
    romeon = romeon.BACKGROUND_MODIFIER_ACCENT;
    verify['backgroundColor'] = romeon;
    romeon = oscard[offset];
    romeon = yankee.bind(entity)(romeon);
    romeon = romeon.spacing;
    romeon = romeon.PX_24;
    verify['paddingVertical'] = romeon;
    offset = oscard[offset];
    offset = yankee.bind(entity)(offset);
    offset = offset.spacing;
    offset = offset.PX_16;
    verify['paddingHorizontal'] = offset;
    tangon['footer'] = verify;
    tangon = golfie.bind(option)(tangon);
    var _closure1_slot7 = tangon;
    tangon = 10;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/parent_tools/native/FamilyCenterModalBase.tsx';
    tangon = report.bind(oscard)(tangon);
    michal = function(argFoo) { // Original name: FamilyCenterModalBase
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            entity = argFoo;
            romeon = entity.children;
            output = entity.footer;
            entity = _closure1_slot7;
            tangon = undefined;
            sizing = entity.bind(tangon)();
            zuuluu = _closure1_slot5;
            source = _closure1_slot0;
            foxtra = _closure1_slot2;
            echoed = 5;
            entity = foxtra[echoed];
            entity = source.bind(tangon)(entity);
            michal = entity.SafeAreaPaddingView;
            entity = {};
            result = true;
            entity['top'] = result;
            golfie = _closure1_slot6;
            oscard = _closure1_slot3;
            report = {};
            option = sizing.root;
            report['style'] = option;
            yankee = _closure1_slot1;
            option = 6;
            option = foxtra[option];
            verify = yankee.bind(tangon)(option);
            option = {};
            offset = 'button';
            option['accessibilityRole'] = offset;
            offset = 7;
            backup = foxtra[offset];
            backup = source.bind(tangon)(backup);
            update = backup.intl;
            backup = update.string;
            offset = foxtra[offset];
            offset = source.bind(tangon)(offset);
            offset = offset.t;
            offset = offset.cpT0Cg;
            offset = backup.bind(update)(offset);
            option['accessibilityLabel'] = offset;
            offset = 8;
            offset = foxtra[offset];
            offset = yankee.bind(tangon)(offset);
            option['source'] = offset;
            yankee = sizing.closeButton;
            offset = new Array(1);
            offset[0] = yankee;
            option['style'] = offset;
            offset = function() { // Original name: onPress
                zuuluu = _closure1_slot1;
                michal = _closure1_slot2;
                entity = 9;
                michal = michal[entity];
                entity = undefined;
                michal = zuuluu.bind(entity)(michal);
                entity = michal.pop;
                entity = entity.bind(michal)();
                return entity;
            };
            option['onPress'] = offset;
            verify = zuuluu.bind(tangon)(verify, option);
            option = new Array(2);
            option[0] = verify;
            verify = {};
            offset = sizing.container;
            verify['style'] = offset;
            yankee = _closure1_slot4;
            offset = {};
            foxtra = sizing.content;
            offset['style'] = foxtra;
            offset['children'] = romeon;
            yankee = zuuluu.bind(tangon)(yankee, offset);
            offset = new Array(2);
            offset[0] = yankee;
            yankee = null;
            if(!(tangon !== output)) { _fun00002_ip = 342; continue _fun00001 }
 273:
            backup = _closure1_slot5;
            foxtra = _closure1_slot3;
            romeon = {};
            sizing = sizing.footer;
            romeon['style'] = sizing;
            sizing = _closure1_slot0;
            kiloes = _closure1_slot2;
            kiloes = kiloes[echoed];
            kiloes = sizing.bind(tangon)(kiloes);
            sizing = kiloes.SafeAreaPaddingView;
            kiloes = {};
            kiloes['bottom'] = result;
            kiloes['children'] = output;
            kiloes = backup.bind(tangon)(sizing, kiloes);
            romeon['children'] = kiloes;
            yankee = backup.bind(tangon)(foxtra, romeon);
 342:
            offset[1] = yankee;
            verify['children'] = offset;
            verify = golfie.bind(tangon)(oscard, verify);
            option[1] = verify;
            report['children'] = option;
            report = golfie.bind(tangon)(oscard, report);
            entity['children'] = report;
            entity = zuuluu.bind(tangon)(michal, entity);
            return entity;
        }
    };
    zuuluu['default'] = michal;
    return entity;
})();