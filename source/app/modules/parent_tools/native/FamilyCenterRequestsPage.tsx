// app/modules/parent_tools/native/FamilyCenterRequestsPage.tsx
export default (function(_, argBar, argBaz, argCor, __, argFre, argPlu) {
    report = argBar;
    yankee = argBaz;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    var _closure1_slot1 = yankee;
    var _closure1_slot2 = oscard;
    entity = function() { // Original name: FamilyCenterMaxConnectionsBlurb
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            entity = _closure1_slot9;
            report = undefined;
            golfie = entity.bind(report)();
            michal = _closure1_slot0;
            tangon = _closure1_slot2;
            entity = 7;
            entity = tangon[entity];
            michal = michal.bind(report)(entity);
            entity = michal.useHasMaxConnections;
            michal = entity.bind(michal)();
            zuuluu = _closure1_slot1;
            entity = 8;
            entity = tangon[entity];
            entity = zuuluu.bind(report)(entity);
            entity = entity.bind(report)();
            if(entity) { _fun00002_ip = 72; continue _fun00001 }
 66:
            romeon = _closure1_slot5;
            _fun00002_ip = 76; continue _fun00001;
 72:
            romeon = _closure1_slot4;
 76:
            yankee = _closure1_slot0;
            foxtra = _closure1_slot2;
            entity = 9;
            entity = foxtra[entity];
            option = yankee.bind(report)(entity);
            tangon = option.useAgeSpecificText;
            offset = 10;
            entity = foxtra[offset];
            entity = yankee.bind(report)(entity);
            sizing = entity.intl;
            kiloes = sizing.formatToPlainString;
            verify = _closure1_slot1;
            entity = 11;
            zuuluu = foxtra[entity];
            zuuluu = verify.bind(report)(zuuluu);
            backup = zuuluu.1/PzIi;
            zuuluu = {};
            zuuluu['maxConnections'] = romeon;
            zuuluu = kiloes.bind(sizing)(backup, zuuluu);
            offset = foxtra[offset];
            offset = yankee.bind(report)(offset);
            yankee = offset.intl;
            offset = yankee.formatToPlainString;
            entity = foxtra[entity];
            entity = verify.bind(report)(entity);
            verify = entity.RcTgiI;
            entity = {};
            entity['maxConnections'] = romeon;
            entity = offset.bind(yankee)(verify, entity);
            verify = tangon.bind(option)(zuuluu, entity);
            entity = null;
            if(!michal) { _fun00002_ip = 303; continue _fun00001 }
 221:
            tangon = _closure1_slot7;
            zuuluu = _closure1_slot3;
            michal = {};
            golfie = golfie.container;
            michal['style'] = golfie;
            option = _closure1_slot7;
            golfie = _closure1_slot0;
            offset = _closure1_slot2;
            oscard = 12;
            oscard = offset[oscard];
            oscard = golfie.bind(report)(oscard);
            golfie = oscard.Text;
            oscard = {'variant': 'text-xxs/medium', 'color': 'text-muted'};
            oscard['children'] = verify;
            oscard = option.bind(report)(golfie, oscard);
            michal['children'] = oscard;
            entity = tangon.bind(report)(zuuluu, michal);
 303:
            return entity;
        }
    };
    var _closure1_slot13 = entity;
    entity = global;
    option = entity.Object;
    golfie = option.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(option)(zuuluu, entity, tangon);
    entity = 0;
    golfie = oscard[entity];
    tangon = argCor;
    entity = undefined;
    tangon = tangon.bind(entity)(golfie);
    backup = 1;
    tangon = oscard[backup];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.View;
    var _closure1_slot3 = tangon;
    tangon = 2;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    golfie = tangon.MAX_PARENT_TO_TEEN_ACTIVE_CONNECTIONS;
    var _closure1_slot4 = golfie;
    tangon = tangon.MAX_TEEN_TO_PARENT_ACTIVE_CONNECTIONS;
    var _closure1_slot5 = tangon;
    tangon = 3;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.THROUGHLINE_URL;
    var _closure1_slot6 = tangon;
    tangon = 4;
    golfie = oscard[tangon];
    golfie = report.bind(entity)(golfie);
    golfie = golfie.jsx;
    var _closure1_slot7 = golfie;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.jsxs;
    var _closure1_slot8 = tangon;
    tangon = 5;
    golfie = oscard[tangon];
    verify = report.bind(entity)(golfie);
    option = verify.createStyles;
    golfie = {};
    romeon = {};
    foxtra = 'flex';
    romeon['display'] = foxtra;
    offset = 6;
    kiloes = oscard[offset];
    kiloes = yankee.bind(entity)(kiloes);
    kiloes = kiloes.spacing;
    kiloes = kiloes.PX_12;
    romeon['paddingTop'] = kiloes;
    kiloes = oscard[offset];
    kiloes = yankee.bind(entity)(kiloes);
    kiloes = kiloes.spacing;
    kiloes = kiloes.PX_12;
    romeon['marginTop'] = kiloes;
    kiloes = oscard[offset];
    kiloes = yankee.bind(entity)(kiloes);
    kiloes = kiloes.colors;
    kiloes = kiloes.BACKGROUND_MODIFIER_ACCENT;
    romeon['borderTopColor'] = kiloes;
    romeon['borderTopWidth'] = backup;
    golfie['container'] = romeon;
    golfie = option.bind(verify)(golfie);
    var _closure1_slot9 = golfie;
    golfie = oscard[tangon];
    verify = report.bind(entity)(golfie);
    option = verify.createStyles;
    golfie = {};
    romeon = {};
    romeon['display'] = foxtra;
    foxtra = oscard[offset];
    foxtra = yankee.bind(entity)(foxtra);
    foxtra = foxtra.spacing;
    foxtra = foxtra.PX_16;
    romeon['marginTop'] = foxtra;
    golfie['container'] = romeon;
    romeon = {};
    foxtra = oscard[offset];
    foxtra = yankee.bind(entity)(foxtra);
    foxtra = foxtra.spacing;
    foxtra = foxtra.PX_4;
    romeon['marginBottom'] = foxtra;
    golfie['supportHeader'] = romeon;
    golfie = option.bind(verify)(golfie);
    var _closure1_slot10 = golfie;
    golfie = function() { // Original name: FamilyCenterHelpLineInfo
        _fun00003: for(var _fun00004_ip = 0; ; ) switch(_fun00004_ip) {
 0:
            michal = _closure1_slot10;
            report = undefined;
            foxtra = michal.bind(report)();
            zuuluu = _closure1_slot0;
            tangon = _closure1_slot2;
            michal = 13;
            oscard = tangon[michal];
            option = zuuluu.bind(report)(oscard);
            oscard = option.useShouldShowHelplineLink;
            option = oscard.bind(option)();
            michal = tangon[michal];
            oscard = zuuluu.bind(report)(michal);
            michal = oscard.useShouldShowThroughlineLink;
            oscard = michal.bind(oscard)();
            michal = 14;
            michal = tangon[michal];
            tangon = zuuluu.bind(report)(michal);
            zuuluu = tangon.match;
            michal = {};
            michal['helpline'] = option;
            michal['throughline'] = oscard;
            option = zuuluu.bind(tangon)(michal);
            oscard = option.with;
            tangon = {};
            michal = true;
            tangon['helpline'] = michal;
            zuuluu = function() {
                zuuluu = _closure1_slot0;
                oscard = _closure1_slot2;
                michal = 10;
                michal = oscard[michal];
                report = undefined;
                michal = zuuluu.bind(report)(michal);
                tangon = michal.intl;
                zuuluu = tangon.format;
                michal = _closure1_slot1;
                entity = 11;
                entity = oscard[entity];
                entity = michal.bind(report)(entity);
                michal = entity.KOwsf3;
                entity = {};
                report = 'https://support.discord.com/hc/articles/7925648993943-Crisis-Text-Line';
                entity['helpLink'] = report;
                entity = zuuluu.bind(tangon)(michal, entity);
                return entity;
            };
            oscard = oscard.bind(option)(tangon, zuuluu);
            tangon = oscard.with;
            zuuluu = {};
            zuuluu['throughline'] = michal;
            michal = function() {
                michal = _closure1_slot0;
                golfie = _closure1_slot2;
                entity = 10;
                entity = golfie[entity];
                oscard = undefined;
                entity = michal.bind(oscard)(entity);
                tangon = entity.intl;
                zuuluu = tangon.format;
                michal = _closure1_slot1;
                entity = 11;
                entity = golfie[entity];
                entity = michal.bind(oscard)(entity);
                michal = entity.6tsC8v;
                entity = {};
                report = _closure1_slot6;
                entity['helpLink'] = report;
                entity = zuuluu.bind(tangon)(michal, entity);
                return entity;
            };
            zuuluu = tangon.bind(oscard)(zuuluu, michal);
            michal = zuuluu.otherwise;
            entity = function() {
                entity = null;
                return entity;
            };
            offset = michal.bind(zuuluu)(entity);
            entity = null;
            if(!(entity !== offset)) { _fun00004_ip = 379; continue _fun00003 }
 180:
            tangon = _closure1_slot8;
            zuuluu = _closure1_slot3;
            michal = {};
            oscard = foxtra.container;
            michal['style'] = oscard;
            romeon = _closure1_slot7;
            option = _closure1_slot0;
            yankee = _closure1_slot2;
            oscard = 12;
            oscard = yankee[oscard];
            oscard = option.bind(report)(oscard);
            verify = oscard.Text;
            oscard = {};
            foxtra = foxtra.supportHeader;
            oscard['style'] = foxtra;
            foxtra = 'heading-sm/semibold';
            oscard['variant'] = foxtra;
            foxtra = 10;
            foxtra = yankee[foxtra];
            foxtra = option.bind(report)(foxtra);
            kiloes = foxtra.intl;
            backup = kiloes.string;
            sizing = _closure1_slot1;
            foxtra = 11;
            foxtra = yankee[foxtra];
            foxtra = sizing.bind(report)(foxtra);
            foxtra = foxtra.7/tVho;
            foxtra = backup.bind(kiloes)(foxtra);
            oscard['children'] = foxtra;
            verify = romeon.bind(report)(verify, oscard);
            oscard = new Array(2);
            oscard[0] = verify;
            verify = _closure1_slot7;
            golfie = 15;
            golfie = yankee[golfie];
            golfie = option.bind(report)(golfie);
            option = golfie.TextWithIOSLinkWorkaround;
            golfie = {'variant': 'text-xs/medium', 'color': 'text-muted'};
            golfie['children'] = offset;
            golfie = verify.bind(report)(option, golfie);
            oscard[1] = golfie;
            michal['children'] = oscard;
            entity = tangon.bind(report)(zuuluu, michal);
 379:
            return entity;
        }
    };
    var _closure1_slot11 = golfie;
    tangon = oscard[tangon];
    option = report.bind(entity)(tangon);
    golfie = option.createStyles;
    tangon = {};
    verify = {};
    offset = oscard[offset];
    offset = yankee.bind(entity)(offset);
    offset = offset.spacing;
    offset = offset.PX_16;
    verify['paddingHorizontal'] = offset;
    tangon['container'] = verify;
    tangon = golfie.bind(option)(tangon);
    var _closure1_slot12 = tangon;
    tangon = 19;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/parent_tools/native/FamilyCenterRequestsPage.tsx';
    tangon = report.bind(oscard)(tangon);
    michal = function() { // Original name: FamilyCenterRequestsPage
        entity = _closure1_slot12;
        tangon = undefined;
        report = entity.bind(tangon)();
        zuuluu = _closure1_slot8;
        michal = _closure1_slot3;
        entity = {};
        report = report.container;
        entity['style'] = report;
        verify = _closure1_slot7;
        option = _closure1_slot1;
        offset = _closure1_slot2;
        report = 16;
        report = offset[report];
        golfie = option.bind(tangon)(report);
        report = {};
        golfie = verify.bind(tangon)(golfie, report);
        report = new Array(5);
        report[0] = golfie;
        yankee = _closure1_slot7;
        golfie = 17;
        golfie = offset[golfie];
        verify = option.bind(tangon)(golfie);
        golfie = {};
        golfie = yankee.bind(tangon)(verify, golfie);
        report[1] = golfie;
        verify = _closure1_slot7;
        golfie = 18;
        golfie = offset[golfie];
        option = option.bind(tangon)(golfie);
        golfie = {};
        golfie = verify.bind(tangon)(option, golfie);
        report[2] = golfie;
        verify = _closure1_slot7;
        option = _closure1_slot13;
        golfie = {};
        golfie = verify.bind(tangon)(option, golfie);
        report[3] = golfie;
        option = _closure1_slot7;
        golfie = _closure1_slot11;
        oscard = {};
        oscard = option.bind(tangon)(golfie, oscard);
        report[4] = oscard;
        entity['children'] = report;
        entity = zuuluu.bind(tangon)(michal, entity);
        return entity;
    };
    zuuluu['default'] = michal;
    return entity;
})();