// app/modules/parent_tools/native/FamilyCenterRequestsPage.tsx
export default (function(_, argBar, argBaz, argCorge, __, argFred, argPlugh) {
    report = argBar;
    yankee = argBaz;
    zulu = argFred;
    oscar = argPlugh;
    var _closure1_slot0 = report;
    var _closure1_slot1 = yankee;
    var _closure1_slot2 = oscar;
    entity = function() { // Original name: FamilyCenterMaxConnectionsBlurb
        _fun95405: for(var _fun95405_ip = 0; ; ) switch(_fun95405_ip) {
 0:
            entity = _closure1_slot9;
            report = undefined;
            golf = entity.bind(report)();
            mike = _closure1_slot0;
            tango = _closure1_slot2;
            entity = 7;
            entity = tango[entity];
            mike = mike.bind(report)(entity);
            entity = mike.useHasMaxConnections;
            mike = entity.bind(mike)();
            zulu = _closure1_slot1;
            entity = 8;
            entity = tango[entity];
            entity = zulu.bind(report)(entity);
            entity = entity.bind(report)();
            if(entity) { _fun95405_ip = 72; continue _fun95405 }
 66:
            romeo = _closure1_slot5;
            _fun95405_ip = 76; continue _fun95405;
 72:
            romeo = _closure1_slot4;
 76:
            verify = _closure1_slot0;
            foxtrot = _closure1_slot2;
            entity = 9;
            entity = foxtrot[entity];
            options = verify.bind(report)(entity);
            tango = options.useAgeSpecificText;
            entity = 10;
            zulu = foxtrot[entity];
            zulu = verify.bind(report)(zulu);
            backup = zulu.intl;
            yankee = backup.formatToPlainString;
            zulu = foxtrot[entity];
            zulu = verify.bind(report)(zulu);
            zulu = zulu.t;
            offset = zulu.1/PzIi;
            zulu = {};
            zulu['maxConnections'] = romeo;
            zulu = yankee.bind(backup)(offset, zulu);
            offset = foxtrot[entity];
            offset = verify.bind(report)(offset);
            yankee = offset.intl;
            offset = yankee.formatToPlainString;
            entity = foxtrot[entity];
            entity = verify.bind(report)(entity);
            entity = entity.t;
            verify = entity.RcTgiI;
            entity = {};
            entity['maxConnections'] = romeo;
            entity = offset.bind(yankee)(verify, entity);
            verify = tango.bind(options)(zulu, entity);
            entity = null;
            if(!mike) { _fun95405_ip = 302; continue _fun95405 }
 220:
            tango = _closure1_slot7;
            zulu = _closure1_slot3;
            mike = {};
            golf = golf.container;
            mike['style'] = golf;
            options = _closure1_slot7;
            golf = _closure1_slot0;
            offset = _closure1_slot2;
            oscar = 11;
            oscar = offset[oscar];
            oscar = golf.bind(report)(oscar);
            golf = oscar.Text;
            oscar = {'variant': 'text-xxs/medium', 'color': 'text-muted'};
            oscar['children'] = verify;
            oscar = options.bind(report)(golf, oscar);
            mike['children'] = oscar;
            entity = tango.bind(report)(zulu, mike);
 302:
            return entity;
        }
    };
    var _closure1_slot13 = entity;
    entity = global;
    options = entity.Object;
    golf = options.defineProperty;
    tango = {};
    entity = true;
    tango['value'] = entity;
    entity = '__esModule';
    entity = golf.bind(options)(zulu, entity, tango);
    entity = 0;
    golf = oscar[entity];
    tango = argCorge;
    entity = undefined;
    tango = tango.bind(entity)(golf);
    backup = 1;
    tango = oscar[backup];
    tango = report.bind(entity)(tango);
    tango = tango.View;
    var _closure1_slot3 = tango;
    tango = 2;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    golf = tango.MAX_PARENT_TO_TEEN_ACTIVE_CONNECTIONS;
    var _closure1_slot4 = golf;
    tango = tango.MAX_TEEN_TO_PARENT_ACTIVE_CONNECTIONS;
    var _closure1_slot5 = tango;
    tango = 3;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.THROUGHLINE_URL;
    var _closure1_slot6 = tango;
    tango = 4;
    golf = oscar[tango];
    golf = report.bind(entity)(golf);
    golf = golf.jsx;
    var _closure1_slot7 = golf;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.jsxs;
    var _closure1_slot8 = tango;
    tango = 5;
    golf = oscar[tango];
    verify = report.bind(entity)(golf);
    options = verify.createStyles;
    golf = {};
    romeo = {};
    foxtrot = 'flex';
    romeo['display'] = foxtrot;
    offset = 6;
    kilo = oscar[offset];
    kilo = yankee.bind(entity)(kilo);
    kilo = kilo.spacing;
    kilo = kilo.PX_12;
    romeo['paddingTop'] = kilo;
    kilo = oscar[offset];
    kilo = yankee.bind(entity)(kilo);
    kilo = kilo.spacing;
    kilo = kilo.PX_12;
    romeo['marginTop'] = kilo;
    kilo = oscar[offset];
    kilo = yankee.bind(entity)(kilo);
    kilo = kilo.colors;
    kilo = kilo.BACKGROUND_MODIFIER_ACCENT;
    romeo['borderTopColor'] = kilo;
    romeo['borderTopWidth'] = backup;
    golf['container'] = romeo;
    golf = options.bind(verify)(golf);
    var _closure1_slot9 = golf;
    golf = oscar[tango];
    verify = report.bind(entity)(golf);
    options = verify.createStyles;
    golf = {};
    romeo = {};
    romeo['display'] = foxtrot;
    foxtrot = oscar[offset];
    foxtrot = yankee.bind(entity)(foxtrot);
    foxtrot = foxtrot.spacing;
    foxtrot = foxtrot.PX_16;
    romeo['marginTop'] = foxtrot;
    golf['container'] = romeo;
    romeo = {};
    foxtrot = oscar[offset];
    foxtrot = yankee.bind(entity)(foxtrot);
    foxtrot = foxtrot.spacing;
    foxtrot = foxtrot.PX_4;
    romeo['marginBottom'] = foxtrot;
    golf['supportHeader'] = romeo;
    golf = options.bind(verify)(golf);
    var _closure1_slot10 = golf;
    golf = function() { // Original name: FamilyCenterHelpLineInfo
        _fun95406: for(var _fun95406_ip = 0; ; ) switch(_fun95406_ip) {
 0:
            mike = _closure1_slot10;
            report = undefined;
            foxtrot = mike.bind(report)();
            zulu = _closure1_slot0;
            tango = _closure1_slot2;
            mike = 12;
            oscar = tango[mike];
            options = zulu.bind(report)(oscar);
            oscar = options.useShouldShowHelplineLink;
            options = oscar.bind(options)();
            mike = tango[mike];
            oscar = zulu.bind(report)(mike);
            mike = oscar.useShouldShowThroughlineLink;
            oscar = mike.bind(oscar)();
            mike = 13;
            mike = tango[mike];
            tango = zulu.bind(report)(mike);
            zulu = tango.match;
            mike = {};
            mike['helpline'] = options;
            mike['throughline'] = oscar;
            options = zulu.bind(tango)(mike);
            oscar = options.with;
            tango = {};
            mike = true;
            tango['helpline'] = mike;
            zulu = function() {
                report = _closure1_slot0;
                oscar = _closure1_slot2;
                entity = 10;
                zulu = oscar[entity];
                mike = undefined;
                zulu = report.bind(mike)(zulu);
                tango = zulu.intl;
                zulu = tango.format;
                entity = oscar[entity];
                entity = report.bind(mike)(entity);
                entity = entity.t;
                mike = entity.KOwsf3;
                entity = {};
                report = 'https://support.discord.com/hc/articles/7925648993943-Crisis-Text-Line';
                entity['helpLink'] = report;
                entity = zulu.bind(tango)(mike, entity);
                return entity;
            };
            oscar = oscar.bind(options)(tango, zulu);
            tango = oscar.with;
            zulu = {};
            zulu['throughline'] = mike;
            mike = function() {
                oscar = _closure1_slot0;
                golf = _closure1_slot2;
                entity = 10;
                zulu = golf[entity];
                mike = undefined;
                zulu = oscar.bind(mike)(zulu);
                tango = zulu.intl;
                zulu = tango.format;
                entity = golf[entity];
                entity = oscar.bind(mike)(entity);
                entity = entity.t;
                mike = entity.6tsC8v;
                entity = {};
                report = _closure1_slot6;
                entity['helpLink'] = report;
                entity = zulu.bind(tango)(mike, entity);
                return entity;
            };
            zulu = tango.bind(oscar)(zulu, mike);
            mike = zulu.otherwise;
            entity = function() {
                entity = null;
                return entity;
            };
            offset = mike.bind(zulu)(entity);
            entity = null;
            if(!(entity !== offset)) { _fun95406_ip = 375; continue _fun95406 }
 180:
            tango = _closure1_slot8;
            zulu = _closure1_slot3;
            mike = {};
            oscar = foxtrot.container;
            mike['style'] = oscar;
            romeo = _closure1_slot7;
            options = _closure1_slot0;
            yankee = _closure1_slot2;
            oscar = 11;
            oscar = yankee[oscar];
            oscar = options.bind(report)(oscar);
            verify = oscar.Text;
            oscar = {};
            foxtrot = foxtrot.supportHeader;
            oscar['style'] = foxtrot;
            foxtrot = 'heading-sm/semibold';
            oscar['variant'] = foxtrot;
            foxtrot = 10;
            backup = yankee[foxtrot];
            backup = options.bind(report)(backup);
            kilo = backup.intl;
            backup = kilo.string;
            foxtrot = yankee[foxtrot];
            foxtrot = options.bind(report)(foxtrot);
            foxtrot = foxtrot.t;
            foxtrot = foxtrot.7/tVho;
            foxtrot = backup.bind(kilo)(foxtrot);
            oscar['children'] = foxtrot;
            verify = romeo.bind(report)(verify, oscar);
            oscar = new Array(2);
            oscar[0] = verify;
            verify = _closure1_slot7;
            golf = 14;
            golf = yankee[golf];
            golf = options.bind(report)(golf);
            options = golf.TextWithIOSLinkWorkaround;
            golf = {'variant': 'text-xs/medium', 'color': 'text-muted'};
            golf['children'] = offset;
            golf = verify.bind(report)(options, golf);
            oscar[1] = golf;
            mike['children'] = oscar;
            entity = tango.bind(report)(zulu, mike);
 375:
            return entity;
        }
    };
    var _closure1_slot11 = golf;
    tango = oscar[tango];
    options = report.bind(entity)(tango);
    golf = options.createStyles;
    tango = {};
    verify = {};
    offset = oscar[offset];
    offset = yankee.bind(entity)(offset);
    offset = offset.spacing;
    offset = offset.PX_16;
    verify['paddingHorizontal'] = offset;
    tango['container'] = verify;
    tango = golf.bind(options)(tango);
    var _closure1_slot12 = tango;
    tango = 18;
    tango = oscar[tango];
    oscar = report.bind(entity)(tango);
    report = oscar.fileFinishedImporting;
    tango = 'modules/parent_tools/native/FamilyCenterRequestsPage.tsx';
    tango = report.bind(oscar)(tango);
    mike = function() { // Original name: FamilyCenterRequestsPage
        entity = _closure1_slot12;
        tango = undefined;
        report = entity.bind(tango)();
        zulu = _closure1_slot8;
        mike = _closure1_slot3;
        entity = {};
        report = report.container;
        entity['style'] = report;
        verify = _closure1_slot7;
        options = _closure1_slot1;
        offset = _closure1_slot2;
        report = 15;
        report = offset[report];
        golf = options.bind(tango)(report);
        report = {};
        golf = verify.bind(tango)(golf, report);
        report = new Array(5);
        report[0] = golf;
        yankee = _closure1_slot7;
        golf = 16;
        golf = offset[golf];
        verify = options.bind(tango)(golf);
        golf = {};
        golf = yankee.bind(tango)(verify, golf);
        report[1] = golf;
        verify = _closure1_slot7;
        golf = 17;
        golf = offset[golf];
        options = options.bind(tango)(golf);
        golf = {};
        golf = verify.bind(tango)(options, golf);
        report[2] = golf;
        verify = _closure1_slot7;
        options = _closure1_slot13;
        golf = {};
        golf = verify.bind(tango)(options, golf);
        report[3] = golf;
        options = _closure1_slot7;
        golf = _closure1_slot11;
        oscar = {};
        oscar = options.bind(tango)(golf, oscar);
        report[4] = oscar;
        entity['children'] = report;
        entity = zulu.bind(tango)(mike, entity);
        return entity;
    };
    zulu['default'] = mike;
    return entity;
})();