// app/modules/parent_tools/native/FamilyCenterUsernameHeader.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    report = argBar;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    entity = argBaz;
    var _closure1_slot1 = entity;
    var _closure1_slot2 = oscard;
    entity = global;
    option = entity.Object;
    golfie = option.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(option)(zuuluu, entity, tangon);
    entity = 0;
    golfie = oscard[entity];
    tangon = argCor;
    entity = undefined;
    tangon = tangon.bind(entity)(golfie);
    tangon = 1;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.View;
    var _closure1_slot3 = tangon;
    tangon = 2;
    golfie = oscard[tangon];
    golfie = report.bind(entity)(golfie);
    golfie = golfie.jsx;
    var _closure1_slot4 = golfie;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.jsxs;
    var _closure1_slot5 = tangon;
    tangon = 3;
    tangon = oscard[tangon];
    option = report.bind(entity)(tangon);
    golfie = option.createStyles;
    tangon = {};
    verify = {};
    offset = 'center';
    verify['justifyContent'] = offset;
    tangon['container'] = verify;
    tangon = golfie.bind(option)(tangon);
    var _closure1_slot6 = tangon;
    tangon = 6;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/parent_tools/native/FamilyCenterUsernameHeader.tsx';
    tangon = report.bind(oscard)(tangon);
    michal = function(argFoo) { // Original name: FamilyCenterUsernameHeader
        entity = argFoo;
        golfie = entity.user;
        entity = _closure1_slot6;
        tangon = undefined;
        oscard = entity.bind(tangon)();
        michal = _closure1_slot1;
        romeon = _closure1_slot2;
        entity = 4;
        zuuluu = romeon[entity];
        option = michal.bind(tangon)(zuuluu);
        zuuluu = option.useName;
        foxtra = zuuluu.bind(option)(golfie);
        entity = romeon[entity];
        zuuluu = michal.bind(tangon)(entity);
        michal = zuuluu.getUserTag;
        entity = {};
        option = 'never';
        entity['decoration'] = option;
        golfie = michal.bind(zuuluu)(golfie, entity);
        entity = global;
        entity = entity.HermesInternal;
        zuuluu = entity.concat;
        michal = ' (@';
        entity = ')';
        yankee = zuuluu.bind(michal)(golfie, entity);
        zuuluu = _closure1_slot4;
        michal = _closure1_slot3;
        entity = {};
        oscard = oscard.container;
        entity['style'] = oscard;
        golfie = _closure1_slot5;
        offset = _closure1_slot0;
        verify = 5;
        report = romeon[verify];
        report = offset.bind(tangon)(report);
        oscard = report.Text;
        report = {'variant': 'text-md/semibold', 'color': 'header-primary', 'lineClamp': 1};
        option = new Array(2);
        option[0] = foxtra;
        verify = romeon[verify];
        verify = offset.bind(tangon)(verify);
        offset = verify.Text;
        verify = {'variant': 'text-md/medium', 'color': 'text-muted', 'lineClamp': 1};
        verify['children'] = yankee;
        verify = zuuluu.bind(tangon)(offset, verify);
        option[1] = verify;
        report['children'] = option;
        report = golfie.bind(tangon)(oscard, report);
        entity['children'] = report;
        entity = zuuluu.bind(tangon)(michal, entity);
        return entity;
    };
    zuuluu['default'] = michal;
    return entity;
})();