// app/modules/parent_tools/native/FamilyCenterUsernameHeader.tsx
export default (function(argFoo, argBar, argBaz, argCorge, _, argFred, argPlugh) {
    report = argBar;
    zulu = argFred;
    oscar = argPlugh;
    var _closure1_slot0 = report;
    entity = argBaz;
    var _closure1_slot1 = entity;
    var _closure1_slot2 = oscar;
    entity = global;
    options = entity.Object;
    golf = options.defineProperty;
    tango = {};
    entity = true;
    tango['value'] = entity;
    entity = '__esModule';
    entity = golf.bind(options)(zulu, entity, tango);
    entity = 0;
    golf = oscar[entity];
    tango = argCorge;
    entity = undefined;
    tango = tango.bind(entity)(golf);
    tango = 1;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.View;
    var _closure1_slot3 = tango;
    tango = 2;
    golf = oscar[tango];
    golf = report.bind(entity)(golf);
    golf = golf.jsx;
    var _closure1_slot4 = golf;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.jsxs;
    var _closure1_slot5 = tango;
    tango = 3;
    tango = oscar[tango];
    options = report.bind(entity)(tango);
    golf = options.createStyles;
    tango = {};
    verify = {};
    offset = 'center';
    verify['justifyContent'] = offset;
    tango['container'] = verify;
    tango = golf.bind(options)(tango);
    var _closure1_slot6 = tango;
    tango = 6;
    tango = oscar[tango];
    oscar = report.bind(entity)(tango);
    report = oscar.fileFinishedImporting;
    tango = 'modules/parent_tools/native/FamilyCenterUsernameHeader.tsx';
    tango = report.bind(oscar)(tango);
    mike = function(argFoo) { // Original name: FamilyCenterUsernameHeader
        entity = argFoo;
        golf = entity.user;
        entity = _closure1_slot6;
        tango = undefined;
        oscar = entity.bind(tango)();
        mike = _closure1_slot1;
        romeo = _closure1_slot2;
        entity = 4;
        zulu = romeo[entity];
        options = mike.bind(tango)(zulu);
        zulu = options.useName;
        foxtrot = zulu.bind(options)(golf);
        entity = romeo[entity];
        zulu = mike.bind(tango)(entity);
        mike = zulu.getUserTag;
        entity = {};
        options = 'never';
        entity['decoration'] = options;
        golf = mike.bind(zulu)(golf, entity);
        entity = global;
        entity = entity.HermesInternal;
        zulu = entity.concat;
        mike = ' (@';
        entity = ')';
        yankee = zulu.bind(mike)(golf, entity);
        zulu = _closure1_slot4;
        mike = _closure1_slot3;
        entity = {};
        oscar = oscar.container;
        entity['style'] = oscar;
        golf = _closure1_slot5;
        offset = _closure1_slot0;
        verify = 5;
        report = romeo[verify];
        report = offset.bind(tango)(report);
        oscar = report.Text;
        report = {'variant': 'text-md/semibold', 'color': 'header-primary', 'lineClamp': 1};
        options = new Array(2);
        options[0] = foxtrot;
        verify = romeo[verify];
        verify = offset.bind(tango)(verify);
        offset = verify.Text;
        verify = {'variant': 'text-md/medium', 'color': 'text-muted', 'lineClamp': 1};
        verify['children'] = yankee;
        verify = zulu.bind(tango)(offset, verify);
        options[1] = verify;
        report['children'] = options;
        report = golf.bind(tango)(oscar, report);
        entity['children'] = report;
        entity = zulu.bind(tango)(mike, entity);
        return entity;
    };
    zulu['default'] = mike;
    return entity;
})();