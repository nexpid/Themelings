// app/modules/parent_tools/native/FamilyCenterAvatarPair.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    report = argBar;
    yankee = argBaz;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    var _closure1_slot1 = yankee;
    var _closure1_slot2 = oscard;
    entity = global;
    option = entity.Object;
    golfie = option.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(option)(zuuluu, entity, tangon);
    entity = 0;
    golfie = oscard[entity];
    tangon = argCor;
    entity = undefined;
    tangon = tangon.bind(entity)(golfie);
    tangon = 1;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.View;
    var _closure1_slot3 = tangon;
    tangon = 2;
    tangon = oscard[tangon];
    tangon = yankee.bind(entity)(tangon);
    var _closure1_slot4 = tangon;
    tangon = 3;
    golfie = oscard[tangon];
    golfie = report.bind(entity)(golfie);
    golfie = golfie.jsx;
    var _closure1_slot5 = golfie;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.jsxs;
    var _closure1_slot6 = tangon;
    tangon = 4;
    tangon = oscard[tangon];
    option = report.bind(entity)(tangon);
    golfie = option.createStyles;
    tangon = {};
    verify = {'backgroundColor': null, 'borderRadius': null, 'display': 'flex', 'flexDirection': 'row', 'justifyContent': 'space-between', 'alignItems': 'center', 'padding': 8};
    offset = 5;
    romeon = oscard[offset];
    romeon = yankee.bind(entity)(romeon);
    romeon = romeon.colors;
    romeon = romeon.BACKGROUND_SECONDARY;
    verify['backgroundColor'] = romeon;
    offset = oscard[offset];
    offset = yankee.bind(entity)(offset);
    offset = offset.radii;
    offset = offset.round;
    verify['borderRadius'] = offset;
    tangon['avatars'] = verify;
    verify = {'height': 24, 'width': 24, 'marginHorizontal': 16};
    tangon['icon'] = verify;
    tangon = golfie.bind(option)(tangon);
    var _closure1_slot7 = tangon;
    tangon = 9;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/parent_tools/native/FamilyCenterAvatarPair.tsx';
    tangon = report.bind(oscard)(tangon);
    michal = function(argFoo) { // Original name: FamilyCenterAvatarPair
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            entity = argFoo;
            offset = entity.otherUser;
            kiloes = entity.iconSrc;
            result = entity.iconStyles;
            entity = _closure1_slot7;
            report = undefined;
            output = entity.bind(report)();
            michal = _closure1_slot0;
            zuuluu = _closure1_slot2;
            entity = 6;
            entity = zuuluu[entity];
            tangon = michal.bind(report)(entity);
            zuuluu = tangon.useStateFromStores;
            entity = _closure1_slot4;
            michal = new Array(1);
            michal[0] = entity;
            entity = function() {
                michal = _closure1_slot4;
                entity = michal.getCurrentUser;
                entity = entity.bind(michal)();
                return entity;
            };
            backup = zuuluu.bind(tangon)(michal, entity);
            entity = null;
            if(!(report !== backup)) { _fun00002_ip = 361; continue _fun00001 }
 95:
            entity = null;
            if(!(report !== offset)) { _fun00002_ip = 361; continue _fun00001 }
 104:
            tangon = _closure1_slot6;
            zuuluu = _closure1_slot3;
            michal = {};
            oscard = output.avatars;
            michal['style'] = oscard;
            verify = _closure1_slot5;
            option = _closure1_slot1;
            foxtra = _closure1_slot2;
            yankee = 7;
            oscard = foxtra[yankee];
            golfie = option.bind(report)(oscard);
            oscard = {};
            romeon = _closure1_slot0;
            sizing = foxtra[yankee];
            sizing = romeon.bind(report)(sizing);
            sizing = sizing.AvatarSizes;
            sizing = sizing.LARGE_48;
            oscard['size'] = sizing;
            oscard['user'] = backup;
            oscard['guildId'] = report;
            backup = backup.avatarDecoration;
            oscard['avatarDecoration'] = backup;
            golfie = verify.bind(report)(golfie, oscard);
            oscard = new Array(3);
            oscard[0] = golfie;
            sizing = 8;
            golfie = foxtra[sizing];
            backup = option.bind(report)(golfie);
            golfie = {};
            echoed = output.icon;
            output = new Array(2);
            output[0] = echoed;
            output[1] = result;
            golfie['style'] = output;
            sizing = foxtra[sizing];
            sizing = option.bind(report)(sizing);
            sizing = sizing.Sizes;
            sizing = sizing.EXTRA_SMALL;
            golfie['size'] = sizing;
            golfie['source'] = kiloes;
            golfie = verify.bind(report)(backup, golfie);
            oscard[1] = golfie;
            golfie = foxtra[yankee];
            option = option.bind(report)(golfie);
            golfie = {};
            yankee = foxtra[yankee];
            yankee = romeon.bind(report)(yankee);
            yankee = yankee.AvatarSizes;
            yankee = yankee.LARGE_48;
            golfie['size'] = yankee;
            golfie['user'] = offset;
            golfie['guildId'] = report;
            offset = offset.avatarDecoration;
            golfie['avatarDecoration'] = offset;
            golfie = verify.bind(report)(option, golfie);
            oscard[2] = golfie;
            michal['children'] = oscard;
            entity = tangon.bind(report)(zuuluu, michal);
 361:
            return entity;
        }
    };
    zuuluu['default'] = michal;
    return entity;
})();