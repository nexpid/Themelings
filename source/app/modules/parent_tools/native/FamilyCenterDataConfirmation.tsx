// app/modules/parent_tools/native/FamilyCenterDataConfirmation.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    report = argBar;
    romeon = argBaz;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    var _closure1_slot1 = romeon;
    var _closure1_slot2 = oscard;
    entity = global;
    option = entity.Object;
    golfie = option.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(option)(zuuluu, entity, tangon);
    entity = 0;
    golfie = oscard[entity];
    tangon = argCor;
    entity = undefined;
    tangon = tangon.bind(entity)(golfie);
    var _closure1_slot3 = tangon;
    foxtra = 1;
    tangon = oscard[foxtra];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.View;
    var _closure1_slot4 = tangon;
    tangon = 2;
    golfie = oscard[tangon];
    golfie = report.bind(entity)(golfie);
    golfie = golfie.jsx;
    var _closure1_slot5 = golfie;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.jsxs;
    var _closure1_slot6 = tangon;
    tangon = 3;
    golfie = oscard[tangon];
    verify = report.bind(entity)(golfie);
    option = verify.createStyles;
    golfie = {};
    offset = {'display': 'flex', 'flexDirection': 'row', 'alignItems': 'center'};
    yankee = 4;
    backup = oscard[yankee];
    backup = romeon.bind(entity)(backup);
    backup = backup.spacing;
    backup = backup.PX_8;
    offset['marginBottom'] = backup;
    backup = oscard[yankee];
    backup = romeon.bind(entity)(backup);
    backup = backup.spacing;
    backup = backup.PX_12;
    offset['paddingVertical'] = backup;
    backup = oscard[yankee];
    backup = romeon.bind(entity)(backup);
    backup = backup.spacing;
    backup = backup.PX_12;
    offset['paddingHorizontal'] = backup;
    backup = oscard[yankee];
    backup = romeon.bind(entity)(backup);
    backup = backup.colors;
    backup = backup.BACKGROUND_SECONDARY;
    offset['backgroundColor'] = backup;
    backup = oscard[yankee];
    backup = romeon.bind(entity)(backup);
    backup = backup.radii;
    backup = backup.sm;
    offset['borderRadius'] = backup;
    golfie['row'] = offset;
    offset = {};
    backup = oscard[yankee];
    backup = romeon.bind(entity)(backup);
    backup = backup.colors;
    backup = backup.BACKGROUND_PRIMARY;
    offset['backgroundColor'] = backup;
    golfie['primary'] = offset;
    offset = {};
    offset['flexShrink'] = foxtra;
    golfie['content'] = offset;
    offset = {'display': 'flex', 'alignItems': 'center', 'justifyContent': 'center', 'width': 40, 'height': 40, 'backgroundColor': null, 'borderRadius': null, 'flexShrink': 0};
    foxtra = oscard[yankee];
    foxtra = romeon.bind(entity)(foxtra);
    foxtra = foxtra.colors;
    foxtra = foxtra.BACKGROUND_TERTIARY;
    offset['backgroundColor'] = foxtra;
    foxtra = oscard[yankee];
    foxtra = romeon.bind(entity)(foxtra);
    foxtra = foxtra.radii;
    foxtra = foxtra.round;
    offset['borderRadius'] = foxtra;
    foxtra = oscard[yankee];
    foxtra = romeon.bind(entity)(foxtra);
    foxtra = foxtra.spacing;
    foxtra = foxtra.PX_12;
    offset['marginRight'] = foxtra;
    golfie['iconContainer'] = offset;
    offset = {};
    foxtra = oscard[yankee];
    foxtra = romeon.bind(entity)(foxtra);
    foxtra = foxtra.colors;
    foxtra = foxtra.BACKGROUND_TERTIARY;
    offset['backgroundColor'] = foxtra;
    golfie['iconContainerAccent'] = offset;
    offset = {};
    foxtra = oscard[yankee];
    foxtra = romeon.bind(entity)(foxtra);
    foxtra = foxtra.spacing;
    foxtra = foxtra.PX_4;
    offset['marginBottom'] = foxtra;
    golfie['header'] = offset;
    offset = {};
    foxtra = oscard[yankee];
    foxtra = romeon.bind(entity)(foxtra);
    foxtra = foxtra.colors;
    foxtra = foxtra.TEXT_POSITIVE;
    offset['tintColor'] = foxtra;
    golfie['positive'] = offset;
    offset = {};
    yankee = oscard[yankee];
    yankee = romeon.bind(entity)(yankee);
    yankee = yankee.colors;
    yankee = yankee.STATUS_DANGER;
    offset['tintColor'] = yankee;
    golfie['negative'] = offset;
    golfie = option.bind(verify)(golfie);
    var _closure1_slot7 = golfie;
    golfie = function(argFoo) { // Original name: Row
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            entity = argFoo;
            sizing = entity.header;
            foxtra = entity.description;
            yankee = entity.IconComponent;
            romeon = entity.negative;
            michal = entity.source;
            entity = _closure1_slot7;
            tangon = undefined;
            output = entity.bind(tangon)();
            entity = 'activity-page';
            backup = entity === michal;
            zuuluu = _closure1_slot6;
            michal = _closure1_slot4;
            entity = {};
            oscard = output.row;
            report = new Array(2);
            report[0] = oscard;
            oscard = null;
            if(!backup) { _fun00002_ip = 88; continue _fun00001 }
 82:
            oscard = output.primary;
 88:
            report[1] = oscard;
            entity['style'] = report;
            golfie = _closure1_slot5;
            oscard = _closure1_slot4;
            report = {};
            kiloes = output.iconContainer;
            option = new Array(2);
            option[0] = kiloes;
            offset = null;
            if(!backup) { _fun00002_ip = 131; continue _fun00001 }
 125:
            offset = output.iconContainerAccent;
 131:
            option[1] = offset;
            report['style'] = option;
            offset = _closure1_slot5;
            option = {};
            kiloes = _closure1_slot1;
            result = _closure1_slot2;
            backup = 4;
            backup = result[backup];
            backup = kiloes.bind(tangon)(backup);
            backup = backup.colors;
            if(romeon) { _fun00002_ip = 181; continue _fun00001 }
 173:
            romeon = backup.STATUS_POSITIVE;
            _fun00002_ip = 187; continue _fun00001;
 181:
            romeon = backup.STATUS_DANGER;
 187:
            option['color'] = romeon;
            option = offset.bind(tangon)(yankee, option);
            report['children'] = option;
            oscard = golfie.bind(tangon)(oscard, report);
            report = new Array(2);
            report[0] = oscard;
            option = _closure1_slot6;
            golfie = _closure1_slot4;
            oscard = {};
            offset = output.content;
            oscard['style'] = offset;
            romeon = _closure1_slot5;
            yankee = _closure1_slot0;
            backup = _closure1_slot2;
            offset = 5;
            verify = backup[offset];
            verify = yankee.bind(tangon)(verify);
            kiloes = verify.Text;
            verify = {'style': null, 'variant': 'text-sm/bold', 'color': 'header-primary'};
            output = output.header;
            verify['style'] = output;
            verify['children'] = sizing;
            kiloes = romeon.bind(tangon)(kiloes, verify);
            verify = new Array(2);
            verify[0] = kiloes;
            offset = backup[offset];
            offset = yankee.bind(tangon)(offset);
            yankee = offset.Text;
            offset = {'variant': 'text-xs/medium', 'color': 'header-secondary'};
            offset['children'] = foxtra;
            offset = romeon.bind(tangon)(yankee, offset);
            verify[1] = offset;
            oscard['children'] = verify;
            oscard = option.bind(tangon)(golfie, oscard);
            report[1] = oscard;
            entity['children'] = report;
            entity = zuuluu.bind(tangon)(michal, entity);
            return entity;
        }
    };
    var _closure1_slot8 = golfie;
    tangon = oscard[tangon];
    option = report.bind(entity)(tangon);
    golfie = option.createStyles;
    tangon = {};
    verify = {};
    offset = 10;
    verify['marginBottom'] = offset;
    tangon['groupHeader'] = verify;
    verify = {};
    verify['marginTop'] = offset;
    tangon['excludedHeader'] = verify;
    tangon = golfie.bind(option)(tangon);
    var _closure1_slot9 = tangon;
    tangon = 21;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/parent_tools/native/FamilyCenterDataConfirmation.tsx';
    tangon = report.bind(oscard)(tangon);
    michal = function(argFoo) { // Original name: FamilyCenterDataConfirmation
        _fun00003: for(var _fun00004_ip = 0; ; ) switch(_fun00004_ip) {
 0:
            entity = argFoo;
            romeon = entity.source;
            entity = _closure1_slot9;
            report = undefined;
            sequen = entity.bind(report)();
            zuuluu = _closure1_slot3;
            michal = zuuluu.useContext;
            tangon = _closure1_slot0;
            oscard = _closure1_slot2;
            entity = 6;
            entity = oscard[entity];
            entity = tangon.bind(report)(entity);
            entity = entity.RedesignCompatContext;
            entity = michal.bind(zuuluu)(entity);
            ctrled = 'text-xxs/bold';
            michal = 'activity-page';
            if(!(michal === romeon)) { _fun00004_ip = 86; continue _fun00003 }
 80:
            ctrled = 'eyebrow';
 86:
            tangon = _closure1_slot0;
            zuuluu = _closure1_slot2;
            michal = 7;
            oscard = zuuluu[michal];
            yankee = tangon.bind(report)(oscard);
            verify = yankee.useAgeSpecificText;
            cntext = 8;
            oscard = zuuluu[cntext];
            oscard = tangon.bind(report)(oscard);
            backup = oscard.intl;
            option = backup.string;
            golfie = _closure1_slot1;
            record = 9;
            oscard = zuuluu[record];
            oscard = golfie.bind(report)(oscard);
            oscard = oscard.Sm8Gq6;
            option = option.bind(backup)(oscard);
            oscard = zuuluu[cntext];
            oscard = tangon.bind(report)(oscard);
            kiloes = oscard.intl;
            backup = kiloes.string;
            oscard = zuuluu[record];
            oscard = golfie.bind(report)(oscard);
            oscard = oscard.YU7aaW;
            oscard = backup.bind(kiloes)(oscard);
            result = verify.bind(yankee)(option, oscard);
            oscard = zuuluu[michal];
            yankee = tangon.bind(report)(oscard);
            verify = yankee.useAgeSpecificText;
            oscard = zuuluu[cntext];
            oscard = tangon.bind(report)(oscard);
            backup = oscard.intl;
            option = backup.string;
            oscard = zuuluu[record];
            oscard = golfie.bind(report)(oscard);
            oscard = oscard.TCzk/f;
            option = option.bind(backup)(oscard);
            oscard = zuuluu[cntext];
            oscard = tangon.bind(report)(oscard);
            kiloes = oscard.intl;
            backup = kiloes.string;
            oscard = zuuluu[record];
            oscard = golfie.bind(report)(oscard);
            oscard = oscard.2OqtJC;
            oscard = backup.bind(kiloes)(oscard);
            yankee = verify.bind(yankee)(option, oscard);
            oscard = zuuluu[michal];
            backup = tangon.bind(report)(oscard);
            verify = backup.useAgeSpecificText;
            oscard = zuuluu[cntext];
            oscard = tangon.bind(report)(oscard);
            kiloes = oscard.intl;
            option = kiloes.string;
            oscard = zuuluu[record];
            oscard = golfie.bind(report)(oscard);
            oscard = oscard.ASf7XF;
            option = option.bind(kiloes)(oscard);
            oscard = zuuluu[cntext];
            oscard = tangon.bind(report)(oscard);
            sizing = oscard.intl;
            kiloes = sizing.string;
            oscard = zuuluu[record];
            oscard = golfie.bind(report)(oscard);
            oscard = oscard.82y87e;
            oscard = kiloes.bind(sizing)(oscard);
            output = verify.bind(backup)(option, oscard);
            michal = zuuluu[michal];
            verify = tangon.bind(report)(michal);
            option = verify.useAgeSpecificText;
            michal = zuuluu[cntext];
            michal = tangon.bind(report)(michal);
            backup = michal.intl;
            oscard = backup.string;
            michal = zuuluu[record];
            michal = golfie.bind(report)(michal);
            michal = michal.0QDVFB;
            oscard = oscard.bind(backup)(michal);
            michal = zuuluu[cntext];
            michal = tangon.bind(report)(michal);
            kiloes = michal.intl;
            backup = kiloes.string;
            michal = zuuluu[record];
            michal = golfie.bind(report)(michal);
            michal = michal.1xBHHR;
            michal = backup.bind(kiloes)(michal);
            sizing = option.bind(verify)(oscard, michal);
            michal = {};
            oscard = zuuluu[cntext];
            oscard = tangon.bind(report)(oscard);
            verify = oscard.intl;
            option = verify.string;
            oscard = zuuluu[record];
            oscard = golfie.bind(report)(oscard);
            oscard = oscard./zMYZW;
            oscard = option.bind(verify)(oscard);
            michal['header'] = oscard;
            oscard = zuuluu[cntext];
            oscard = tangon.bind(report)(oscard);
            verify = oscard.intl;
            option = verify.string;
            oscard = zuuluu[record];
            oscard = golfie.bind(report)(oscard);
            oscard = oscard.DxFKkZ;
            oscard = option.bind(verify)(oscard);
            michal['description'] = oscard;
            sierra = 10;
            oscard = zuuluu[sierra];
            oscard = golfie.bind(report)(oscard);
            michal['icon'] = oscard;
            status = 11;
            oscard = zuuluu[status];
            oscard = tangon.bind(report)(oscard);
            oscard = oscard.UserPlusIcon;
            michal['IconComponent'] = oscard;
            michal['source'] = romeon;
            update = new Array(3);
            update[0] = michal;
            michal = {};
            oscard = zuuluu[cntext];
            oscard = tangon.bind(report)(oscard);
            verify = oscard.intl;
            option = verify.string;
            oscard = zuuluu[record];
            oscard = golfie.bind(report)(oscard);
            oscard = oscard.44NEx8;
            oscard = option.bind(verify)(oscard);
            michal['header'] = oscard;
            oscard = zuuluu[cntext];
            oscard = tangon.bind(report)(oscard);
            verify = oscard.intl;
            option = verify.string;
            oscard = zuuluu[record];
            oscard = golfie.bind(report)(oscard);
            oscard = oscard.WrY56O;
            oscard = option.bind(verify)(oscard);
            michal['description'] = oscard;
            target = 12;
            oscard = zuuluu[target];
            oscard = golfie.bind(report)(oscard);
            michal['icon'] = oscard;
            papara = 13;
            oscard = zuuluu[papara];
            oscard = tangon.bind(report)(oscard);
            oscard = oscard.ServerIcon;
            michal['IconComponent'] = oscard;
            michal['source'] = romeon;
            update[1] = michal;
            michal = {};
            oscard = zuuluu[cntext];
            oscard = tangon.bind(report)(oscard);
            verify = oscard.intl;
            option = verify.string;
            oscard = zuuluu[record];
            oscard = golfie.bind(report)(oscard);
            oscard = oscard.Z3G+8v;
            oscard = option.bind(verify)(oscard);
            michal['header'] = oscard;
            oscard = zuuluu[cntext];
            oscard = tangon.bind(report)(oscard);
            verify = oscard.intl;
            option = verify.string;
            oscard = zuuluu[record];
            oscard = golfie.bind(report)(oscard);
            oscard = oscard.KBgAra;
            oscard = option.bind(verify)(oscard);
            michal['description'] = oscard;
            config = 14;
            oscard = zuuluu[config];
            oscard = golfie.bind(report)(oscard);
            michal['icon'] = oscard;
            vacuum = 15;
            zuuluu = zuuluu[vacuum];
            zuuluu = tangon.bind(report)(zuuluu);
            zuuluu = zuuluu.GroupIcon;
            michal['IconComponent'] = zuuluu;
            michal['source'] = romeon;
            update[2] = michal;
            tangon = _closure1_slot6;
            if(entity) { _fun00004_ip = 1581; continue _fun00003 }
 938:
            michal = _closure1_slot4;
            entity = {};
            option = _closure1_slot5;
            backup = _closure1_slot0;
            kiloes = _closure1_slot2;
            oscard = 5;
            zuuluu = kiloes[oscard];
            zuuluu = backup.bind(report)(zuuluu);
            golfie = zuuluu.Text;
            zuuluu = {};
            verify = sequen.groupHeader;
            zuuluu['style'] = verify;
            zuuluu['variant'] = ctrled;
            source = 'header-secondary';
            zuuluu['color'] = source;
            zuuluu['children'] = result;
            golfie = option.bind(report)(golfie, zuuluu);
            zuuluu = new Array(6);
            zuuluu[0] = golfie;
            golfie = _closure1_slot8;
            verify = {};
            echoed = kiloes[cntext];
            echoed = backup.bind(report)(echoed);
            equals = echoed.intl;
            whisks = equals.string;
            echoed = _closure1_slot1;
            limora = kiloes[record];
            limora = echoed.bind(report)(limora);
            limora = limora./zMYZW;
            limora = whisks.bind(equals)(limora);
            verify['header'] = limora;
            limora = kiloes[cntext];
            limora = backup.bind(report)(limora);
            equals = limora.intl;
            whisks = equals.string;
            limora = kiloes[record];
            limora = echoed.bind(report)(limora);
            limora = limora.DxFKkZ;
            limora = whisks.bind(equals)(limora);
            verify['description'] = limora;
            sierra = kiloes[sierra];
            sierra = echoed.bind(report)(sierra);
            verify['icon'] = sierra;
            status = kiloes[status];
            status = backup.bind(report)(status);
            status = status.UserPlusIcon;
            verify['IconComponent'] = status;
            verify['source'] = romeon;
            verify = option.bind(report)(golfie, verify);
            zuuluu[1] = verify;
            verify = {};
            status = kiloes[cntext];
            status = backup.bind(report)(status);
            limora = status.intl;
            sierra = limora.string;
            status = kiloes[record];
            status = echoed.bind(report)(status);
            status = status.44NEx8;
            status = sierra.bind(limora)(status);
            verify['header'] = status;
            status = kiloes[cntext];
            status = backup.bind(report)(status);
            limora = status.intl;
            sierra = limora.string;
            status = kiloes[record];
            status = echoed.bind(report)(status);
            status = status.WrY56O;
            status = sierra.bind(limora)(status);
            verify['description'] = status;
            target = kiloes[target];
            target = echoed.bind(report)(target);
            verify['icon'] = target;
            papara = kiloes[papara];
            papara = backup.bind(report)(papara);
            papara = papara.ServerIcon;
            verify['IconComponent'] = papara;
            verify['source'] = romeon;
            verify = option.bind(report)(golfie, verify);
            zuuluu[2] = verify;
            verify = {};
            papara = kiloes[cntext];
            papara = backup.bind(report)(papara);
            status = papara.intl;
            target = status.string;
            papara = kiloes[record];
            papara = echoed.bind(report)(papara);
            papara = papara.Z3G+8v;
            papara = target.bind(status)(papara);
            verify['header'] = papara;
            cntext = kiloes[cntext];
            cntext = backup.bind(report)(cntext);
            papara = cntext.intl;
            cntext = papara.string;
            record = kiloes[record];
            record = echoed.bind(report)(record);
            record = record.KBgAra;
            record = cntext.bind(papara)(record);
            verify['description'] = record;
            config = kiloes[config];
            config = echoed.bind(report)(config);
            verify['icon'] = config;
            vacuum = kiloes[vacuum];
            vacuum = backup.bind(report)(vacuum);
            vacuum = vacuum.GroupIcon;
            verify['IconComponent'] = vacuum;
            verify['source'] = romeon;
            verify = option.bind(report)(golfie, verify);
            zuuluu[3] = verify;
            oscard = kiloes[oscard];
            oscard = backup.bind(report)(oscard);
            verify = oscard.Text;
            oscard = {};
            config = sequen.groupHeader;
            vacuum = new Array(2);
            vacuum[0] = config;
            sequen = sequen.excludedHeader;
            vacuum[1] = sequen;
            oscard['style'] = vacuum;
            oscard['variant'] = ctrled;
            oscard['color'] = source;
            oscard['children'] = yankee;
            oscard = option.bind(report)(verify, oscard);
            zuuluu[4] = oscard;
            oscard = {};
            oscard['header'] = output;
            oscard['description'] = sizing;
            verify = 19;
            verify = kiloes[verify];
            verify = echoed.bind(report)(verify);
            oscard['icon'] = verify;
            verify = 20;
            verify = kiloes[verify];
            verify = backup.bind(report)(verify);
            verify = verify.ForumLockIcon;
            oscard['IconComponent'] = verify;
            oscard['source'] = romeon;
            verify = true;
            oscard['negative'] = verify;
            oscard = option.bind(report)(golfie, oscard);
            zuuluu[5] = oscard;
            entity['children'] = zuuluu;
            entity = tangon.bind(report)(michal, entity);
            _fun00004_ip = 1813; continue _fun00003;
 1581:
            backup = _closure1_slot0;
            kiloes = _closure1_slot2;
            michal = 16;
            michal = kiloes[michal];
            michal = backup.bind(report)(michal);
            zuuluu = michal.Stack;
            michal = {};
            oscard = 24;
            michal['spacing'] = oscard;
            verify = _closure1_slot5;
            golfie = 17;
            oscard = kiloes[golfie];
            oscard = backup.bind(report)(oscard);
            option = oscard.TableRowGroup;
            oscard = {};
            oscard['title'] = result;
            echoed = update.map;
            result = function(argFoo) {
                entity = argFoo;
                report = entity.header;
                yankee = entity.description;
                verify = entity.icon;
                option = entity.IconComponent;
                tangon = _closure1_slot5;
                golfie = _closure1_slot0;
                offset = _closure1_slot2;
                oscard = 18;
                entity = offset[oscard];
                zuuluu = undefined;
                entity = golfie.bind(zuuluu)(entity);
                michal = entity.TableRow;
                entity = {};
                entity['label'] = report;
                entity['subLabel'] = yankee;
                oscard = offset[oscard];
                oscard = golfie.bind(zuuluu)(oscard);
                oscard = oscard.TableRow;
                golfie = oscard.Icon;
                oscard = {};
                offset = 'status-online';
                oscard['variant'] = offset;
                oscard['source'] = verify;
                oscard['IconComponent'] = option;
                oscard = tangon.bind(zuuluu)(golfie, oscard);
                entity['icon'] = oscard;
                entity = tangon.bind(zuuluu)(michal, entity, report);
                return entity;
            };
            result = echoed.bind(update)(result);
            oscard['children'] = result;
            option = verify.bind(report)(option, oscard);
            oscard = new Array(2);
            oscard[0] = option;
            golfie = kiloes[golfie];
            golfie = backup.bind(report)(golfie);
            option = golfie.TableRowGroup;
            golfie = {};
            golfie['title'] = yankee;
            yankee = {};
            yankee['header'] = output;
            yankee['description'] = sizing;
            sizing = _closure1_slot1;
            foxtra = 19;
            foxtra = kiloes[foxtra];
            foxtra = sizing.bind(report)(foxtra);
            yankee['icon'] = foxtra;
            foxtra = 20;
            foxtra = kiloes[foxtra];
            foxtra = backup.bind(report)(foxtra);
            foxtra = foxtra.ForumLockIcon;
            yankee['IconComponent'] = foxtra;
            yankee['source'] = romeon;
            romeon = true;
            yankee['negative'] = romeon;
            romeon = new Array(1);
            romeon[0] = yankee;
            yankee = romeon.map;
            offset = function(argFoo) {
                _fun00005: for(var _fun00006_ip = 0; ; ) switch(_fun00006_ip) {
 0:
                    entity = argFoo;
                    report = entity.header;
                    yankee = entity.description;
                    verify = entity.icon;
                    option = entity.IconComponent;
                    romeon = entity.negative;
                    tangon = _closure1_slot5;
                    golfie = _closure1_slot0;
                    offset = _closure1_slot2;
                    oscard = 18;
                    entity = offset[oscard];
                    zuuluu = undefined;
                    entity = golfie.bind(zuuluu)(entity);
                    michal = entity.TableRow;
                    entity = {};
                    entity['label'] = report;
                    entity['subLabel'] = yankee;
                    oscard = offset[oscard];
                    oscard = golfie.bind(zuuluu)(oscard);
                    oscard = oscard.TableRow;
                    golfie = oscard.Icon;
                    oscard = {};
                    offset = 'default';
                    yankee = true;
                    if(!(yankee === romeon)) { _fun00006_ip = 115; continue _fun00005 }
 109:
                    offset = 'status-dnd';
 115:
                    oscard['variant'] = offset;
                    oscard['source'] = verify;
                    oscard['IconComponent'] = option;
                    oscard = tangon.bind(zuuluu)(golfie, oscard);
                    entity['icon'] = oscard;
                    entity = tangon.bind(zuuluu)(michal, entity, report);
                    return entity;
                }
            };
            offset = yankee.bind(romeon)(offset);
            golfie['children'] = offset;
            golfie = verify.bind(report)(option, golfie);
            oscard[1] = golfie;
            michal['children'] = oscard;
            entity = tangon.bind(report)(zuuluu, michal);
 1813:
            return entity;
        }
    };
    zuuluu['default'] = michal;
    return entity;
})();