// app/modules/parent_tools/native/FamilyCenterPendingLinks.tsx
export default (function(argFoo, argBar, argBaz, argCorge, _, argFred, argPlugh) {
    report = argBar;
    yankee = argBaz;
    zulu = argFred;
    oscar = argPlugh;
    var _closure1_slot0 = report;
    var _closure1_slot1 = yankee;
    var _closure1_slot2 = oscar;
    entity = function(argFoo) { // Original name: FamilyCenterPendingLinkRow
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            entity = argFoo;
            oscar = entity.otherUser;
            var _closure2_slot0 = oscar;
            mike = _closure1_slot9;
            tango = undefined;
            yankee = mike.bind(tango)();
            zulu = _closure1_slot1;
            report = _closure1_slot2;
            mike = 10;
            mike = report[mike];
            mike = zulu.bind(tango)(mike);
            golf = mike.bind(tango)();
            zulu = _closure1_slot0;
            mike = 6;
            mike = report[mike];
            zulu = zulu.bind(tango)(mike);
            mike = zulu.useHasMaxConnections;
            offset = mike.bind(zulu)();
            if(!(tango !== oscar)) { _fun00002_ip = 903; continue _fun00001 }
 85:
            report = _closure1_slot5;
            zulu = _closure1_slot7;
            mike = {};
            if(golf) { _fun00002_ip = 620; continue _fun00001 }
 101:
            verify = _closure1_slot6;
            options = _closure1_slot7;
            golf = {};
            update = null;
            foxtrot = null;
            if(offset) { _fun00002_ip = 366; continue _fun00001 }
 121:
            kilo = _closure1_slot5;
            output = _closure1_slot0;
            source = _closure1_slot2;
            offset = 11;
            offset = source[offset];
            offset = output.bind(tango)(offset);
            backup = offset.PressableOpacity;
            offset = {};
            sizing = 'button';
            offset['accessibilityRole'] = sizing;
            sizing = 8;
            result = source[sizing];
            result = output.bind(tango)(result);
            echo = result.intl;
            result = echo.formatToPlainString;
            sizing = source[sizing];
            sizing = output.bind(tango)(sizing);
            sizing = sizing.t;
            output = sizing.jc1Ip6;
            sizing = {};
            control = update == oscar;
            source = undefined;
            if(control) { _fun00002_ip = 223; continue _fun00001 }
 214:
            control = oscar.toString;
            source = control.bind(oscar)();
 223:
            sizing['name'] = source;
            sizing = result.bind(echo)(output, sizing);
            offset['accessibilityLabel'] = sizing;
            sizing = function() { // Original name: onPress
                report = _closure1_slot1;
                mike = _closure1_slot2;
                entity = 12;
                tango = mike[entity];
                entity = undefined;
                report = report.bind(entity)(tango);
                tango = report.pushLazy;
                oscar = _closure1_slot0;
                zulu = 14;
                zulu = mike[zulu];
                oscar = oscar.bind(entity)(zulu);
                zulu = 13;
                zulu = mike[zulu];
                mike = mike.paths;
                zulu = oscar.bind(entity)(zulu, mike);
                mike = {};
                oscar = _closure2_slot0;
                mike['otherUser'] = oscar;
                mike = tango.bind(report)(zulu, mike);
                return entity;
            };
            offset['onPress'] = sizing;
            output = yankee.actionButton;
            sizing = new Array(2);
            sizing[0] = output;
            output = yankee.actionButtonFirst;
            sizing[1] = output;
            offset['style'] = sizing;
            result = _closure1_slot5;
            source = _closure1_slot1;
            control = _closure1_slot2;
            echo = 15;
            sizing = control[echo];
            output = source.bind(tango)(sizing);
            sizing = {};
            echo = control[echo];
            echo = source.bind(tango)(echo);
            echo = echo.Sizes;
            echo = echo.SMALL;
            sizing['size'] = echo;
            echo = true;
            sizing['disableColor'] = echo;
            echo = 16;
            echo = control[echo];
            echo = source.bind(tango)(echo);
            sizing['source'] = echo;
            sizing = result.bind(tango)(output, sizing);
            offset['children'] = sizing;
            foxtrot = kilo.bind(tango)(backup, offset);
 366:
            offset = new Array(2);
            offset[0] = foxtrot;
            kilo = _closure1_slot5;
            output = _closure1_slot0;
            source = _closure1_slot2;
            foxtrot = 11;
            foxtrot = source[foxtrot];
            foxtrot = output.bind(tango)(foxtrot);
            backup = foxtrot.PressableOpacity;
            foxtrot = {};
            sizing = 'button';
            foxtrot['accessibilityRole'] = sizing;
            sizing = 8;
            result = source[sizing];
            result = output.bind(tango)(result);
            echo = result.intl;
            result = echo.formatToPlainString;
            sizing = source[sizing];
            sizing = output.bind(tango)(sizing);
            sizing = sizing.t;
            output = sizing.4GtllJ;
            sizing = {};
            source = update == oscar;
            update = undefined;
            if(source) { _fun00002_ip = 476; continue _fun00001 }
 467:
            source = oscar.toString;
            update = source.bind(oscar)();
 476:
            sizing['name'] = update;
            sizing = result.bind(echo)(output, sizing);
            foxtrot['accessibilityLabel'] = sizing;
            sizing = function() { // Original name: onPress
                report = _closure1_slot1;
                mike = _closure1_slot2;
                entity = 12;
                tango = mike[entity];
                entity = undefined;
                report = report.bind(entity)(tango);
                tango = report.pushLazy;
                oscar = _closure1_slot0;
                zulu = 14;
                zulu = mike[zulu];
                oscar = oscar.bind(entity)(zulu);
                zulu = 17;
                zulu = mike[zulu];
                mike = mike.paths;
                zulu = oscar.bind(entity)(zulu, mike);
                mike = {};
                oscar = _closure2_slot0;
                mike['otherUser'] = oscar;
                mike = tango.bind(report)(zulu, mike);
                return entity;
            };
            foxtrot['onPress'] = sizing;
            sizing = yankee.actionButton;
            foxtrot['style'] = sizing;
            result = _closure1_slot5;
            update = _closure1_slot1;
            source = _closure1_slot2;
            echo = 15;
            sizing = source[echo];
            output = update.bind(tango)(sizing);
            sizing = {};
            echo = source[echo];
            echo = update.bind(tango)(echo);
            echo = echo.Sizes;
            echo = echo.SMALL;
            sizing['size'] = echo;
            echo = true;
            sizing['disableColor'] = echo;
            echo = 18;
            echo = source[echo];
            echo = update.bind(tango)(echo);
            sizing['source'] = echo;
            sizing = result.bind(tango)(output, sizing);
            foxtrot['children'] = sizing;
            foxtrot = kilo.bind(tango)(backup, foxtrot);
            offset[1] = foxtrot;
            golf['children'] = offset;
            golf = verify.bind(tango)(options, golf);
            _fun00002_ip = 849; continue _fun00001;
 620:
            offset = _closure1_slot5;
            backup = _closure1_slot0;
            output = _closure1_slot2;
            options = 11;
            options = output[options];
            options = backup.bind(tango)(options);
            verify = options.PressableOpacity;
            options = {};
            foxtrot = 'button';
            options['accessibilityRole'] = foxtrot;
            foxtrot = 8;
            kilo = output[foxtrot];
            kilo = backup.bind(tango)(kilo);
            sizing = kilo.intl;
            kilo = sizing.formatToPlainString;
            foxtrot = output[foxtrot];
            foxtrot = backup.bind(tango)(foxtrot);
            foxtrot = foxtrot.t;
            backup = foxtrot.oUpA6e;
            foxtrot = {};
            output = null;
            result = output == oscar;
            output = undefined;
            if(result) { _fun00002_ip = 724; continue _fun00001 }
 715:
            result = oscar.toString;
            output = result.bind(oscar)();
 724:
            foxtrot['name'] = output;
            foxtrot = kilo.bind(sizing)(backup, foxtrot);
            options['accessibilityLabel'] = foxtrot;
            romeo = function() { // Original name: onPress
                report = _closure1_slot1;
                mike = _closure1_slot2;
                entity = 12;
                tango = mike[entity];
                entity = undefined;
                report = report.bind(entity)(tango);
                tango = report.pushLazy;
                oscar = _closure1_slot0;
                zulu = 14;
                zulu = mike[zulu];
                oscar = oscar.bind(entity)(zulu);
                zulu = 19;
                zulu = mike[zulu];
                mike = mike.paths;
                zulu = oscar.bind(entity)(zulu, mike);
                mike = {};
                oscar = _closure2_slot0;
                mike['otherUser'] = oscar;
                mike = tango.bind(report)(zulu, mike);
                return entity;
            };
            options['onPress'] = romeo;
            yankee = yankee.actionButton;
            options['style'] = yankee;
            foxtrot = _closure1_slot5;
            kilo = _closure1_slot1;
            sizing = _closure1_slot2;
            backup = 15;
            yankee = sizing[backup];
            romeo = kilo.bind(tango)(yankee);
            yankee = {};
            backup = sizing[backup];
            backup = kilo.bind(tango)(backup);
            backup = backup.Sizes;
            backup = backup.SMALL;
            yankee['size'] = backup;
            backup = true;
            yankee['disableColor'] = backup;
            backup = 18;
            backup = sizing[backup];
            backup = kilo.bind(tango)(backup);
            yankee['source'] = backup;
            yankee = foxtrot.bind(tango)(romeo, yankee);
            options['children'] = yankee;
            golf = offset.bind(tango)(verify, options);
 849:
            mike['children'] = golf;
            report = report.bind(tango)(zulu, mike);
            zulu = _closure1_slot5;
            mike = _closure1_slot1;
            golf = _closure1_slot2;
            entity = 20;
            entity = golf[entity];
            mike = mike.bind(tango)(entity);
            entity = {};
            entity['otherUser'] = oscar;
            entity['actions'] = report;
            entity = zulu.bind(tango)(mike, entity);
            return entity;
 903:
            entity = null;
            return entity;
        }
    };
    var _closure1_slot10 = entity;
    entity = global;
    options = entity.Object;
    golf = options.defineProperty;
    tango = {};
    entity = true;
    tango['value'] = entity;
    entity = '__esModule';
    entity = golf.bind(options)(zulu, entity, tango);
    entity = 0;
    golf = oscar[entity];
    tango = argCorge;
    entity = undefined;
    tango = tango.bind(entity)(golf);
    tango = 1;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.View;
    var _closure1_slot3 = tango;
    tango = 2;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.UserLinkStatus;
    var _closure1_slot4 = tango;
    tango = 3;
    golf = oscar[tango];
    golf = report.bind(entity)(golf);
    golf = golf.jsx;
    var _closure1_slot5 = golf;
    golf = oscar[tango];
    golf = report.bind(entity)(golf);
    golf = golf.jsxs;
    var _closure1_slot6 = golf;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.Fragment;
    var _closure1_slot7 = tango;
    tango = 4;
    golf = oscar[tango];
    verify = report.bind(entity)(golf);
    options = verify.createStyles;
    golf = {};
    offset = {};
    romeo = 24;
    offset['marginTop'] = romeo;
    golf['container'] = offset;
    romeo = {'display': 'flex', 'justifyContent': 'center'};
    offset = 5;
    foxtrot = oscar[offset];
    foxtrot = yankee.bind(entity)(foxtrot);
    foxtrot = foxtrot.colors;
    foxtrot = foxtrot.BACKGROUND_PRIMARY;
    romeo['backgroundColor'] = foxtrot;
    foxtrot = oscar[offset];
    foxtrot = yankee.bind(entity)(foxtrot);
    foxtrot = foxtrot.radii;
    foxtrot = foxtrot.md;
    romeo['borderRadius'] = foxtrot;
    golf['content'] = romeo;
    romeo = {'padding': 20, 'alignSelf': 'center'};
    golf['empty'] = romeo;
    romeo = {};
    foxtrot = 10;
    romeo['marginBottom'] = foxtrot;
    golf['header'] = romeo;
    golf = options.bind(verify)(golf);
    var _closure1_slot8 = golf;
    tango = oscar[tango];
    options = report.bind(entity)(tango);
    golf = options.createStyles;
    tango = {};
    verify = {'backgroundColor': null, 'tintColor': null, 'borderRadius': null, 'alignItems': 'center', 'justifyContent': 'center', 'height': 32, 'width': 32};
    romeo = oscar[offset];
    romeo = yankee.bind(entity)(romeo);
    romeo = romeo.colors;
    romeo = romeo.BACKGROUND_SECONDARY;
    verify['backgroundColor'] = romeo;
    romeo = oscar[offset];
    romeo = yankee.bind(entity)(romeo);
    romeo = romeo.colors;
    romeo = romeo.INTERACTIVE_NORMAL;
    verify['tintColor'] = romeo;
    romeo = oscar[offset];
    romeo = yankee.bind(entity)(romeo);
    romeo = romeo.radii;
    romeo = romeo.round;
    verify['borderRadius'] = romeo;
    tango['actionButton'] = verify;
    verify = {};
    offset = oscar[offset];
    offset = yankee.bind(entity)(offset);
    offset = offset.spacing;
    offset = offset.PX_8;
    verify['marginRight'] = offset;
    tango['actionButtonFirst'] = verify;
    tango = golf.bind(options)(tango);
    var _closure1_slot9 = tango;
    tango = 21;
    tango = oscar[tango];
    oscar = report.bind(entity)(tango);
    report = oscar.fileFinishedImporting;
    tango = 'modules/parent_tools/native/FamilyCenterPendingLinks.tsx';
    tango = report.bind(oscar)(tango);
    mike = function() { // Original name: FamilyCenterPendingLinks
        _fun00003: for(var _fun00004_ip = 0; ; ) switch(_fun00004_ip) {
 0:
            entity = _closure1_slot8;
            report = undefined;
            verify = entity.bind(report)();
            oscar = _closure1_slot0;
            romeo = _closure1_slot2;
            entity = 6;
            entity = romeo[entity];
            zulu = oscar.bind(report)(entity);
            mike = zulu.useUserForLinkStatus;
            entity = _closure1_slot4;
            entity = entity.PENDING;
            yankee = mike.bind(zulu)(entity);
            entity = 7;
            entity = romeo[entity];
            tango = oscar.bind(report)(entity);
            zulu = tango.useAgeSpecificText;
            entity = 8;
            mike = romeo[entity];
            mike = oscar.bind(report)(mike);
            foxtrot = mike.intl;
            offset = foxtrot.formatToPlainString;
            mike = romeo[entity];
            mike = oscar.bind(report)(mike);
            mike = mike.t;
            options = mike.IkAgkJ;
            mike = {};
            backup = yankee.length;
            mike['count'] = backup;
            mike = offset.bind(foxtrot)(options, mike);
            options = romeo[entity];
            options = oscar.bind(report)(options);
            offset = options.intl;
            options = offset.formatToPlainString;
            entity = romeo[entity];
            entity = oscar.bind(report)(entity);
            entity = entity.t;
            oscar = entity.Q8XnAQ;
            entity = {};
            romeo = yankee.length;
            entity['count'] = romeo;
            entity = options.bind(offset)(oscar, entity);
            romeo = zulu.bind(tango)(mike, entity);
            zulu = yankee.length;
            mike = 0;
            entity = null;
            if(!(mike !== zulu)) { _fun00004_ip = 358; continue _fun00003 }
 209:
            tango = _closure1_slot6;
            zulu = _closure1_slot3;
            mike = {};
            oscar = verify.container;
            mike['style'] = oscar;
            offset = _closure1_slot5;
            options = _closure1_slot0;
            foxtrot = _closure1_slot2;
            oscar = 9;
            oscar = foxtrot[oscar];
            oscar = options.bind(report)(oscar);
            options = oscar.Text;
            oscar = {'style': null, 'variant': 'eyebrow', 'color': 'header-secondary'};
            foxtrot = verify.header;
            oscar['style'] = foxtrot;
            oscar['children'] = romeo;
            options = offset.bind(report)(options, oscar);
            oscar = new Array(2);
            oscar[0] = options;
            options = _closure1_slot5;
            golf = {};
            verify = verify.content;
            golf['style'] = verify;
            offset = yankee.map;
            verify = function(argFoo) {
                entity = argFoo;
                report = _closure1_slot5;
                tango = _closure1_slot10;
                zulu = {};
                zulu['otherUser'] = entity;
                oscar = entity.id;
                entity = global;
                entity = entity.HermesInternal;
                mike = entity.concat;
                entity = 'pending-';
                mike = mike.bind(entity)(oscar);
                entity = undefined;
                entity = report.bind(entity)(tango, zulu, mike);
                return entity;
            };
            verify = offset.bind(yankee)(verify);
            golf['children'] = verify;
            golf = options.bind(report)(zulu, golf);
            oscar[1] = golf;
            mike['children'] = oscar;
            entity = tango.bind(report)(zulu, mike);
 358:
            return entity;
        }
    };
    zulu['default'] = mike;
    return entity;
})();