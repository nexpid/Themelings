// app/modules/parent_tools/native/FamilyCenterPendingLinks.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    report = argBar;
    yankee = argBaz;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    var _closure1_slot1 = yankee;
    var _closure1_slot2 = oscard;
    entity = function(argFoo) { // Original name: FamilyCenterPendingLinkRow
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            entity = argFoo;
            oscard = entity.otherUser;
            var _closure2_slot0 = oscard;
            michal = _closure1_slot9;
            tangon = undefined;
            yankee = michal.bind(tangon)();
            zuuluu = _closure1_slot1;
            report = _closure1_slot2;
            michal = 10;
            michal = report[michal];
            michal = zuuluu.bind(tangon)(michal);
            golfie = michal.bind(tangon)();
            zuuluu = _closure1_slot0;
            michal = 6;
            michal = report[michal];
            zuuluu = zuuluu.bind(tangon)(michal);
            michal = zuuluu.useHasMaxConnections;
            offset = michal.bind(zuuluu)();
            if(!(tangon !== oscard)) { _fun00002_ip = 909; continue _fun00001 }
 85:
            report = _closure1_slot5;
            zuuluu = _closure1_slot7;
            michal = {};
            if(golfie) { _fun00002_ip = 624; continue _fun00001 }
 101:
            verify = _closure1_slot6;
            option = _closure1_slot7;
            golfie = {};
            update = null;
            foxtra = null;
            if(offset) { _fun00002_ip = 368; continue _fun00001 }
 121:
            kiloes = _closure1_slot5;
            output = _closure1_slot0;
            source = _closure1_slot2;
            offset = 11;
            offset = source[offset];
            offset = output.bind(tangon)(offset);
            backup = offset.PressableOpacity;
            offset = {};
            sizing = 'button';
            offset['accessibilityRole'] = sizing;
            sizing = 8;
            result = source[sizing];
            result = output.bind(tangon)(result);
            echoed = result.intl;
            result = echoed.formatToPlainString;
            sizing = source[sizing];
            sizing = output.bind(tangon)(sizing);
            sizing = sizing.t;
            output = sizing.jc1Ip6;
            sizing = {};
            ctrled = update == oscard;
            source = undefined;
            if(ctrled) { _fun00002_ip = 225; continue _fun00001 }
 216:
            ctrled = oscard.toString;
            source = ctrled.bind(oscard)();
 225:
            sizing['name'] = source;
            sizing = result.bind(echoed)(output, sizing);
            offset['accessibilityLabel'] = sizing;
            sizing = function() { // Original name: onPress
                report = _closure1_slot1;
                michal = _closure1_slot2;
                entity = 12;
                tangon = michal[entity];
                entity = undefined;
                report = report.bind(entity)(tangon);
                tangon = report.pushLazy;
                oscard = _closure1_slot0;
                zuuluu = 14;
                zuuluu = michal[zuuluu];
                oscard = oscard.bind(entity)(zuuluu);
                zuuluu = 13;
                zuuluu = michal[zuuluu];
                michal = michal.paths;
                zuuluu = oscard.bind(entity)(zuuluu, michal);
                michal = {};
                oscard = _closure2_slot0;
                michal['otherUser'] = oscard;
                michal = tangon.bind(report)(zuuluu, michal);
                return entity;
            };
            offset['onPress'] = sizing;
            output = yankee.actionButton;
            sizing = new Array(2);
            sizing[0] = output;
            output = yankee.actionButtonFirst;
            sizing[1] = output;
            offset['style'] = sizing;
            result = _closure1_slot5;
            source = _closure1_slot1;
            ctrled = _closure1_slot2;
            echoed = 15;
            sizing = ctrled[echoed];
            output = source.bind(tangon)(sizing);
            sizing = {};
            echoed = ctrled[echoed];
            echoed = source.bind(tangon)(echoed);
            echoed = echoed.Sizes;
            echoed = echoed.SMALL;
            sizing['size'] = echoed;
            echoed = true;
            sizing['disableColor'] = echoed;
            echoed = 16;
            echoed = ctrled[echoed];
            echoed = source.bind(tangon)(echoed);
            sizing['source'] = echoed;
            sizing = result.bind(tangon)(output, sizing);
            offset['children'] = sizing;
            foxtra = kiloes.bind(tangon)(backup, offset);
 368:
            offset = new Array(2);
            offset[0] = foxtra;
            kiloes = _closure1_slot5;
            output = _closure1_slot0;
            source = _closure1_slot2;
            foxtra = 11;
            foxtra = source[foxtra];
            foxtra = output.bind(tangon)(foxtra);
            backup = foxtra.PressableOpacity;
            foxtra = {};
            sizing = 'button';
            foxtra['accessibilityRole'] = sizing;
            sizing = 8;
            result = source[sizing];
            result = output.bind(tangon)(result);
            echoed = result.intl;
            result = echoed.formatToPlainString;
            sizing = source[sizing];
            sizing = output.bind(tangon)(sizing);
            sizing = sizing.t;
            output = sizing.4GtllJ;
            sizing = {};
            source = update == oscard;
            update = undefined;
            if(source) { _fun00002_ip = 480; continue _fun00001 }
 471:
            source = oscard.toString;
            update = source.bind(oscard)();
 480:
            sizing['name'] = update;
            sizing = result.bind(echoed)(output, sizing);
            foxtra['accessibilityLabel'] = sizing;
            sizing = function() { // Original name: onPress
                report = _closure1_slot1;
                michal = _closure1_slot2;
                entity = 12;
                tangon = michal[entity];
                entity = undefined;
                report = report.bind(entity)(tangon);
                tangon = report.pushLazy;
                oscard = _closure1_slot0;
                zuuluu = 14;
                zuuluu = michal[zuuluu];
                oscard = oscard.bind(entity)(zuuluu);
                zuuluu = 17;
                zuuluu = michal[zuuluu];
                michal = michal.paths;
                zuuluu = oscard.bind(entity)(zuuluu, michal);
                michal = {};
                oscard = _closure2_slot0;
                michal['otherUser'] = oscard;
                michal = tangon.bind(report)(zuuluu, michal);
                return entity;
            };
            foxtra['onPress'] = sizing;
            sizing = yankee.actionButton;
            foxtra['style'] = sizing;
            result = _closure1_slot5;
            update = _closure1_slot1;
            source = _closure1_slot2;
            echoed = 15;
            sizing = source[echoed];
            output = update.bind(tangon)(sizing);
            sizing = {};
            echoed = source[echoed];
            echoed = update.bind(tangon)(echoed);
            echoed = echoed.Sizes;
            echoed = echoed.SMALL;
            sizing['size'] = echoed;
            echoed = true;
            sizing['disableColor'] = echoed;
            echoed = 18;
            echoed = source[echoed];
            echoed = update.bind(tangon)(echoed);
            sizing['source'] = echoed;
            sizing = result.bind(tangon)(output, sizing);
            foxtra['children'] = sizing;
            foxtra = kiloes.bind(tangon)(backup, foxtra);
            offset[1] = foxtra;
            golfie['children'] = offset;
            golfie = verify.bind(tangon)(option, golfie);
            _fun00002_ip = 855; continue _fun00001;
 624:
            offset = _closure1_slot5;
            backup = _closure1_slot0;
            output = _closure1_slot2;
            option = 11;
            option = output[option];
            option = backup.bind(tangon)(option);
            verify = option.PressableOpacity;
            option = {};
            foxtra = 'button';
            option['accessibilityRole'] = foxtra;
            foxtra = 8;
            kiloes = output[foxtra];
            kiloes = backup.bind(tangon)(kiloes);
            sizing = kiloes.intl;
            kiloes = sizing.formatToPlainString;
            foxtra = output[foxtra];
            foxtra = backup.bind(tangon)(foxtra);
            foxtra = foxtra.t;
            backup = foxtra.oUpA6e;
            foxtra = {};
            output = null;
            result = output == oscard;
            output = undefined;
            if(result) { _fun00002_ip = 730; continue _fun00001 }
 721:
            result = oscard.toString;
            output = result.bind(oscard)();
 730:
            foxtra['name'] = output;
            foxtra = kiloes.bind(sizing)(backup, foxtra);
            option['accessibilityLabel'] = foxtra;
            romeon = function() { // Original name: onPress
                report = _closure1_slot1;
                michal = _closure1_slot2;
                entity = 12;
                tangon = michal[entity];
                entity = undefined;
                report = report.bind(entity)(tangon);
                tangon = report.pushLazy;
                oscard = _closure1_slot0;
                zuuluu = 14;
                zuuluu = michal[zuuluu];
                oscard = oscard.bind(entity)(zuuluu);
                zuuluu = 19;
                zuuluu = michal[zuuluu];
                michal = michal.paths;
                zuuluu = oscard.bind(entity)(zuuluu, michal);
                michal = {};
                oscard = _closure2_slot0;
                michal['otherUser'] = oscard;
                michal = tangon.bind(report)(zuuluu, michal);
                return entity;
            };
            option['onPress'] = romeon;
            yankee = yankee.actionButton;
            option['style'] = yankee;
            foxtra = _closure1_slot5;
            kiloes = _closure1_slot1;
            sizing = _closure1_slot2;
            backup = 15;
            yankee = sizing[backup];
            romeon = kiloes.bind(tangon)(yankee);
            yankee = {};
            backup = sizing[backup];
            backup = kiloes.bind(tangon)(backup);
            backup = backup.Sizes;
            backup = backup.SMALL;
            yankee['size'] = backup;
            backup = true;
            yankee['disableColor'] = backup;
            backup = 18;
            backup = sizing[backup];
            backup = kiloes.bind(tangon)(backup);
            yankee['source'] = backup;
            yankee = foxtra.bind(tangon)(romeon, yankee);
            option['children'] = yankee;
            golfie = offset.bind(tangon)(verify, option);
 855:
            michal['children'] = golfie;
            report = report.bind(tangon)(zuuluu, michal);
            zuuluu = _closure1_slot5;
            michal = _closure1_slot1;
            golfie = _closure1_slot2;
            entity = 20;
            entity = golfie[entity];
            michal = michal.bind(tangon)(entity);
            entity = {};
            entity['otherUser'] = oscard;
            entity['actions'] = report;
            entity = zuuluu.bind(tangon)(michal, entity);
            return entity;
 909:
            entity = null;
            return entity;
        }
    };
    var _closure1_slot10 = entity;
    entity = global;
    option = entity.Object;
    golfie = option.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(option)(zuuluu, entity, tangon);
    entity = 0;
    golfie = oscard[entity];
    tangon = argCor;
    entity = undefined;
    tangon = tangon.bind(entity)(golfie);
    tangon = 1;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.View;
    var _closure1_slot3 = tangon;
    tangon = 2;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.UserLinkStatus;
    var _closure1_slot4 = tangon;
    tangon = 3;
    golfie = oscard[tangon];
    golfie = report.bind(entity)(golfie);
    golfie = golfie.jsx;
    var _closure1_slot5 = golfie;
    golfie = oscard[tangon];
    golfie = report.bind(entity)(golfie);
    golfie = golfie.jsxs;
    var _closure1_slot6 = golfie;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.Fragment;
    var _closure1_slot7 = tangon;
    tangon = 4;
    golfie = oscard[tangon];
    verify = report.bind(entity)(golfie);
    option = verify.createStyles;
    golfie = {};
    offset = {};
    romeon = 24;
    offset['marginTop'] = romeon;
    golfie['container'] = offset;
    romeon = {'display': 'flex', 'justifyContent': 'center'};
    offset = 5;
    foxtra = oscard[offset];
    foxtra = yankee.bind(entity)(foxtra);
    foxtra = foxtra.colors;
    foxtra = foxtra.BACKGROUND_PRIMARY;
    romeon['backgroundColor'] = foxtra;
    foxtra = oscard[offset];
    foxtra = yankee.bind(entity)(foxtra);
    foxtra = foxtra.radii;
    foxtra = foxtra.md;
    romeon['borderRadius'] = foxtra;
    golfie['content'] = romeon;
    romeon = {'padding': 20, 'alignSelf': 'center'};
    golfie['empty'] = romeon;
    romeon = {};
    foxtra = 10;
    romeon['marginBottom'] = foxtra;
    golfie['header'] = romeon;
    golfie = option.bind(verify)(golfie);
    var _closure1_slot8 = golfie;
    tangon = oscard[tangon];
    option = report.bind(entity)(tangon);
    golfie = option.createStyles;
    tangon = {};
    verify = {'backgroundColor': null, 'tintColor': null, 'borderRadius': null, 'alignItems': 'center', 'justifyContent': 'center', 'height': 32, 'width': 32};
    romeon = oscard[offset];
    romeon = yankee.bind(entity)(romeon);
    romeon = romeon.colors;
    romeon = romeon.BACKGROUND_SECONDARY;
    verify['backgroundColor'] = romeon;
    romeon = oscard[offset];
    romeon = yankee.bind(entity)(romeon);
    romeon = romeon.colors;
    romeon = romeon.INTERACTIVE_NORMAL;
    verify['tintColor'] = romeon;
    romeon = oscard[offset];
    romeon = yankee.bind(entity)(romeon);
    romeon = romeon.radii;
    romeon = romeon.round;
    verify['borderRadius'] = romeon;
    tangon['actionButton'] = verify;
    verify = {};
    offset = oscard[offset];
    offset = yankee.bind(entity)(offset);
    offset = offset.spacing;
    offset = offset.PX_8;
    verify['marginRight'] = offset;
    tangon['actionButtonFirst'] = verify;
    tangon = golfie.bind(option)(tangon);
    var _closure1_slot9 = tangon;
    tangon = 21;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/parent_tools/native/FamilyCenterPendingLinks.tsx';
    tangon = report.bind(oscard)(tangon);
    michal = function() { // Original name: FamilyCenterPendingLinks
        _fun00003: for(var _fun00004_ip = 0; ; ) switch(_fun00004_ip) {
 0:
            entity = _closure1_slot8;
            report = undefined;
            verify = entity.bind(report)();
            oscard = _closure1_slot0;
            romeon = _closure1_slot2;
            entity = 6;
            entity = romeon[entity];
            zuuluu = oscard.bind(report)(entity);
            michal = zuuluu.useUserForLinkStatus;
            entity = _closure1_slot4;
            entity = entity.PENDING;
            yankee = michal.bind(zuuluu)(entity);
            entity = 7;
            entity = romeon[entity];
            tangon = oscard.bind(report)(entity);
            zuuluu = tangon.useAgeSpecificText;
            entity = 8;
            michal = romeon[entity];
            michal = oscard.bind(report)(michal);
            foxtra = michal.intl;
            offset = foxtra.formatToPlainString;
            michal = romeon[entity];
            michal = oscard.bind(report)(michal);
            michal = michal.t;
            option = michal.IkAgkJ;
            michal = {};
            backup = yankee.length;
            michal['count'] = backup;
            michal = offset.bind(foxtra)(option, michal);
            option = romeon[entity];
            option = oscard.bind(report)(option);
            offset = option.intl;
            option = offset.formatToPlainString;
            entity = romeon[entity];
            entity = oscard.bind(report)(entity);
            entity = entity.t;
            oscard = entity.Q8XnAQ;
            entity = {};
            romeon = yankee.length;
            entity['count'] = romeon;
            entity = option.bind(offset)(oscard, entity);
            romeon = zuuluu.bind(tangon)(michal, entity);
            zuuluu = yankee.length;
            michal = 0;
            entity = null;
            if(!(michal !== zuuluu)) { _fun00004_ip = 362; continue _fun00003 }
 213:
            tangon = _closure1_slot6;
            zuuluu = _closure1_slot3;
            michal = {};
            oscard = verify.container;
            michal['style'] = oscard;
            offset = _closure1_slot5;
            option = _closure1_slot0;
            foxtra = _closure1_slot2;
            oscard = 9;
            oscard = foxtra[oscard];
            oscard = option.bind(report)(oscard);
            option = oscard.Text;
            oscard = {'style': null, 'variant': 'eyebrow', 'color': 'header-secondary'};
            foxtra = verify.header;
            oscard['style'] = foxtra;
            oscard['children'] = romeon;
            option = offset.bind(report)(option, oscard);
            oscard = new Array(2);
            oscard[0] = option;
            option = _closure1_slot5;
            golfie = {};
            verify = verify.content;
            golfie['style'] = verify;
            offset = yankee.map;
            verify = function(argFoo) {
                entity = argFoo;
                report = _closure1_slot5;
                tangon = _closure1_slot10;
                zuuluu = {};
                zuuluu['otherUser'] = entity;
                oscard = entity.id;
                entity = global;
                entity = entity.HermesInternal;
                michal = entity.concat;
                entity = 'pending-';
                michal = michal.bind(entity)(oscard);
                entity = undefined;
                entity = report.bind(entity)(tangon, zuuluu, michal);
                return entity;
            };
            verify = offset.bind(yankee)(verify);
            golfie['children'] = verify;
            golfie = option.bind(report)(zuuluu, golfie);
            oscard[1] = golfie;
            michal['children'] = oscard;
            entity = tangon.bind(report)(zuuluu, michal);
 362:
            return entity;
        }
    };
    zuuluu['default'] = michal;
    return entity;
})();