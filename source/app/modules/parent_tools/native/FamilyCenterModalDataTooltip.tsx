// app/modules/parent_tools/native/FamilyCenterModalDataTooltip.tsx
export default (function(argFoo, argBar, argBaz, argCorge, _, argFred, argPlugh) {
    report = argBar;
    yankee = argBaz;
    zulu = argFred;
    oscar = argPlugh;
    var _closure1_slot0 = report;
    var _closure1_slot1 = yankee;
    var _closure1_slot2 = oscar;
    entity = global;
    options = entity.Object;
    golf = options.defineProperty;
    tango = {};
    entity = true;
    tango['value'] = entity;
    entity = '__esModule';
    entity = golf.bind(options)(zulu, entity, tango);
    entity = 0;
    golf = oscar[entity];
    tango = argCorge;
    entity = undefined;
    tango = tango.bind(entity)(golf);
    var _closure1_slot3 = tango;
    foxtrot = 1;
    tango = oscar[foxtrot];
    tango = report.bind(entity)(tango);
    golf = tango.View;
    var _closure1_slot4 = golf;
    tango = tango.Image;
    var _closure1_slot5 = tango;
    tango = 2;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    golf = tango.ACTION_TO_TEXT;
    var _closure1_slot6 = golf;
    golf = tango.TeenActionDisplayType;
    tango = 3;
    options = oscar[tango];
    options = report.bind(entity)(options);
    options = options.jsx;
    var _closure1_slot7 = options;
    options = oscar[tango];
    options = report.bind(entity)(options);
    options = options.jsxs;
    var _closure1_slot8 = options;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.Fragment;
    var _closure1_slot9 = tango;
    tango = {};
    verify = golf.USER_INTERACTION;
    options = 4;
    options = oscar[options];
    options = yankee.bind(entity)(options);
    tango[verify] = options;
    verify = golf.USER_CALLED;
    options = 5;
    options = oscar[options];
    options = yankee.bind(entity)(options);
    tango[verify] = options;
    verify = golf.USER_ADD;
    options = 6;
    options = oscar[options];
    options = yankee.bind(entity)(options);
    tango[verify] = options;
    verify = golf.GUILD_ADD;
    options = 7;
    options = oscar[options];
    options = yankee.bind(entity)(options);
    tango[verify] = options;
    options = golf.GUILD_INTERACTION;
    golf = 8;
    golf = oscar[golf];
    golf = yankee.bind(entity)(golf);
    tango[options] = golf;
    var _closure1_slot10 = tango;
    tango = 9;
    golf = oscar[tango];
    verify = report.bind(entity)(golf);
    options = verify.createStyles;
    golf = {};
    romeo = {'display': 'flex', 'flexDirection': 'row', 'width': '100%', 'alignItems': 'center'};
    offset = 10;
    backup = oscar[offset];
    backup = yankee.bind(entity)(backup);
    backup = backup.spacing;
    backup = backup.PX_8;
    romeo['marginBottom'] = backup;
    backup = oscar[offset];
    backup = yankee.bind(entity)(backup);
    backup = backup.spacing;
    backup = backup.PX_12;
    romeo['paddingVertical'] = backup;
    backup = oscar[offset];
    backup = yankee.bind(entity)(backup);
    backup = backup.spacing;
    backup = backup.PX_12;
    romeo['paddingHorizontal'] = backup;
    backup = oscar[offset];
    backup = yankee.bind(entity)(backup);
    backup = backup.colors;
    backup = backup.BACKGROUND_SECONDARY;
    romeo['backgroundColor'] = backup;
    backup = oscar[offset];
    backup = yankee.bind(entity)(backup);
    backup = backup.radii;
    backup = backup.sm;
    romeo['borderRadius'] = backup;
    golf['row'] = romeo;
    romeo = {};
    backup = oscar[offset];
    backup = yankee.bind(entity)(backup);
    backup = backup.colors;
    backup = backup.BACKGROUND_PRIMARY;
    romeo['backgroundColor'] = backup;
    golf['primary'] = romeo;
    romeo = {};
    romeo['flexShrink'] = foxtrot;
    golf['content'] = romeo;
    romeo = {'display': 'flex', 'alignItems': 'center', 'justifyContent': 'center', 'width': 40, 'height': 40, 'backgroundColor': null, 'borderRadius': null, 'flexShrink': 0};
    foxtrot = oscar[offset];
    foxtrot = yankee.bind(entity)(foxtrot);
    foxtrot = foxtrot.colors;
    foxtrot = foxtrot.BACKGROUND_TERTIARY;
    romeo['backgroundColor'] = foxtrot;
    foxtrot = oscar[offset];
    foxtrot = yankee.bind(entity)(foxtrot);
    foxtrot = foxtrot.radii;
    foxtrot = foxtrot.round;
    romeo['borderRadius'] = foxtrot;
    foxtrot = oscar[offset];
    foxtrot = yankee.bind(entity)(foxtrot);
    foxtrot = foxtrot.spacing;
    foxtrot = foxtrot.PX_12;
    romeo['marginRight'] = foxtrot;
    golf['iconContainer'] = romeo;
    romeo = {};
    foxtrot = oscar[offset];
    foxtrot = yankee.bind(entity)(foxtrot);
    foxtrot = foxtrot.colors;
    foxtrot = foxtrot.BACKGROUND_ACCENT;
    romeo['backgroundColor'] = foxtrot;
    golf['iconContainerAccent'] = romeo;
    romeo = {};
    foxtrot = oscar[offset];
    foxtrot = yankee.bind(entity)(foxtrot);
    foxtrot = foxtrot.spacing;
    foxtrot = foxtrot.PX_4;
    romeo['marginBottom'] = foxtrot;
    golf['header'] = romeo;
    romeo = {};
    foxtrot = oscar[offset];
    foxtrot = yankee.bind(entity)(foxtrot);
    foxtrot = foxtrot.colors;
    foxtrot = foxtrot.TEXT_BRAND;
    romeo['tintColor'] = foxtrot;
    golf['icon'] = romeo;
    golf = options.bind(verify)(golf);
    var _closure1_slot11 = golf;
    golf = function(argFoo) { // Original name: Row
        entity = argFoo;
        backup = entity.header;
        yankee = entity.description;
        verify = entity.icon;
        entity = _closure1_slot11;
        tango = undefined;
        kilo = entity.bind(tango)();
        zulu = _closure1_slot8;
        mike = _closure1_slot4;
        entity = {};
        report = kilo.row;
        entity['style'] = report;
        offset = _closure1_slot7;
        report = {};
        oscar = kilo.iconContainer;
        report['style'] = oscar;
        options = _closure1_slot1;
        romeo = _closure1_slot2;
        oscar = 11;
        oscar = romeo[oscar];
        options = options.bind(tango)(oscar);
        oscar = {};
        oscar['source'] = verify;
        verify = kilo.icon;
        oscar['style'] = verify;
        oscar = offset.bind(tango)(options, oscar);
        report['children'] = oscar;
        oscar = offset.bind(tango)(mike, report);
        report = new Array(2);
        report[0] = oscar;
        oscar = {};
        options = kilo.content;
        oscar['style'] = options;
        verify = _closure1_slot0;
        options = 12;
        golf = romeo[options];
        golf = verify.bind(tango)(golf);
        foxtrot = golf.Text;
        golf = {'style': null, 'variant': 'text-sm/bold', 'color': 'header-primary'};
        kilo = kilo.header;
        golf['style'] = kilo;
        golf['children'] = backup;
        foxtrot = offset.bind(tango)(foxtrot, golf);
        golf = new Array(2);
        golf[0] = foxtrot;
        options = romeo[options];
        options = verify.bind(tango)(options);
        verify = options.Text;
        options = {'variant': 'text-xs/medium', 'color': 'header-secondary'};
        options['children'] = yankee;
        options = offset.bind(tango)(verify, options);
        golf[1] = options;
        oscar['children'] = golf;
        oscar = zulu.bind(tango)(mike, oscar);
        report[1] = oscar;
        entity['children'] = report;
        entity = zulu.bind(tango)(mike, entity);
        return entity;
    };
    var _closure1_slot12 = golf;
    tango = oscar[tango];
    options = report.bind(entity)(tango);
    golf = options.createStyles;
    tango = {};
    verify = {'display': 'flex', 'alignItems': 'center'};
    romeo = oscar[offset];
    romeo = yankee.bind(entity)(romeo);
    romeo = romeo.spacing;
    romeo = romeo.PX_16;
    verify['paddingHorizontal'] = romeo;
    tango['container'] = verify;
    verify = {};
    romeo = oscar[offset];
    romeo = yankee.bind(entity)(romeo);
    romeo = romeo.spacing;
    romeo = romeo.PX_24;
    verify['marginTop'] = romeo;
    offset = oscar[offset];
    offset = yankee.bind(entity)(offset);
    offset = offset.spacing;
    offset = offset.PX_24;
    verify['marginBottom'] = offset;
    tango['groupHeader'] = verify;
    verify = {'maxWidth': 243, 'maxHeight': 150};
    tango['art'] = verify;
    verify = {};
    tango['button'] = verify;
    tango = golf.bind(options)(tango);
    var _closure1_slot13 = tango;
    tango = 21;
    tango = oscar[tango];
    oscar = report.bind(entity)(tango);
    report = oscar.fileFinishedImporting;
    tango = 'modules/parent_tools/native/FamilyCenterModalDataTooltip.tsx';
    tango = report.bind(oscar)(tango);
    mike = function() { // Original name: FamilyCenterModalDataTooltip
        entity = _closure1_slot13;
        tango = undefined;
        backup = entity.bind(tango)();
        var _closure2_slot0 = backup;
        romeo = _closure1_slot0;
        kilo = _closure1_slot2;
        entity = 13;
        entity = kilo[entity];
        report = romeo.bind(tango)(entity);
        zulu = report.useAgeSpecificText;
        entity = 14;
        mike = kilo[entity];
        mike = romeo.bind(tango)(mike);
        golf = mike.intl;
        oscar = golf.string;
        mike = kilo[entity];
        mike = romeo.bind(tango)(mike);
        mike = mike.t;
        mike = mike.q3IRam;
        mike = oscar.bind(golf)(mike);
        oscar = kilo[entity];
        oscar = romeo.bind(tango)(oscar);
        golf = oscar.intl;
        oscar = golf.string;
        entity = kilo[entity];
        entity = romeo.bind(tango)(entity);
        entity = entity.t;
        entity = entity.JNLpDQ;
        entity = oscar.bind(golf)(entity);
        foxtrot = zulu.bind(report)(mike, entity);
        output = _closure1_slot1;
        entity = 15;
        entity = kilo[entity];
        entity = output.bind(tango)(entity);
        entity = entity.bind(tango)();
        var _closure2_slot1 = entity;
        entity = global;
        zulu = entity.Array;
        mike = zulu.from;
        report = _closure1_slot6;
        entity = report.entries;
        entity = entity.bind(report)();
        yankee = mike.bind(zulu)(entity);
        entity = 16;
        entity = kilo[entity];
        zulu = romeo.bind(tango)(entity);
        mike = zulu.useIsEligibleForFamilyCenterVCJoin;
        entity = {};
        report = 'family_center_tooltip_modal_native';
        entity['location'] = report;
        entity = mike.bind(zulu)(entity);
        var _closure2_slot2 = entity;
        report = _closure1_slot3;
        zulu = report.useCallback;
        mike = new Array(1);
        mike[0] = backup;
        entity = function() {
            tango = _closure1_slot7;
            zulu = _closure1_slot9;
            mike = {};
            options = _closure1_slot1;
            verify = _closure1_slot2;
            offset = 17;
            report = verify[offset];
            entity = undefined;
            oscar = options.bind(entity)(report);
            report = {};
            yankee = _closure2_slot0;
            yankee = yankee.button;
            report['style'] = yankee;
            yankee = 10;
            yankee = verify[yankee];
            yankee = options.bind(entity)(yankee);
            yankee = yankee.radii;
            yankee = yankee.xs;
            report['cornerRadius'] = yankee;
            yankee = verify[offset];
            yankee = options.bind(entity)(yankee);
            yankee = yankee.Colors;
            yankee = yankee.BRAND;
            report['color'] = yankee;
            offset = verify[offset];
            offset = options.bind(entity)(offset);
            offset = offset.Sizes;
            offset = offset.MEDIUM;
            report['size'] = offset;
            romeo = _closure1_slot0;
            golf = 14;
            offset = verify[golf];
            offset = romeo.bind(entity)(offset);
            yankee = offset.intl;
            offset = yankee.string;
            golf = verify[golf];
            golf = romeo.bind(entity)(golf);
            golf = golf.t;
            golf = golf.NX+WJC;
            golf = offset.bind(yankee)(golf);
            report['text'] = golf;
            golf = 18;
            golf = verify[golf];
            golf = options.bind(entity)(golf);
            golf = golf.pop;
            report['onPress'] = golf;
            report = tango.bind(entity)(oscar, report);
            mike['children'] = report;
            entity = tango.bind(entity)(zulu, mike);
            return entity;
        };
        report = zulu.bind(report)(entity, mike);
        zulu = _closure1_slot7;
        entity = 19;
        entity = kilo[entity];
        mike = output.bind(tango)(entity);
        entity = {};
        report = report.bind(tango)();
        entity['footer'] = report;
        golf = _closure1_slot8;
        oscar = _closure1_slot4;
        report = {};
        offset = backup.container;
        report['style'] = offset;
        offset = _closure1_slot5;
        options = {};
        sizing = backup.art;
        options['style'] = sizing;
        sizing = 20;
        sizing = kilo[sizing];
        sizing = output.bind(tango)(sizing);
        options['source'] = sizing;
        offset = zulu.bind(tango)(offset, options);
        options = new Array(3);
        options[0] = offset;
        offset = 12;
        offset = kilo[offset];
        offset = romeo.bind(tango)(offset);
        romeo = offset.Text;
        offset = {'style': null, 'variant': 'text-lg/bold', 'color': 'header-primary'};
        backup = backup.groupHeader;
        offset['style'] = backup;
        offset['children'] = foxtrot;
        offset = zulu.bind(tango)(romeo, offset);
        options[1] = offset;
        offset = yankee.map;
        verify = function(argFoo) {
            _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
                zulu = argFoo;
                entity = zulu[Symbol.iterator];
                zulu = entity().next;
                oscar = zulu().value;
                mike = entity;
                report = undefined;
                mike = mike === report;
                tango = undefined;
                if(mike) { _fun00002_ip = 27; continue _fun00001 }
 24:
                tango = oscar;
 27:
                verify = undefined;
                if(mike) { _fun00002_ip = 57; continue _fun00001 }
 32:
                oscar = zulu().value;
                zulu = entity;
                zulu = zulu === report;
                verify = undefined;
                mike = zulu;
                if(zulu) { _fun00002_ip = 57; continue _fun00001 }
 51:
                verify = oscar;
                mike = zulu;
 57:
                if(mike) { _fun00002_ip = 63; continue _fun00001 }
 60:
                entity.return();
 63:
                zulu = _closure1_slot7;
                mike = _closure1_slot12;
                entity = {};
                oscar = _closure1_slot10;
                oscar = oscar[tango];
                entity['icon'] = oscar;
                oscar = verify.tooltipHeader;
                oscar = oscar.bind(verify)();
                entity['header'] = oscar;
                options = verify.tooltipDescription;
                oscar = _closure2_slot1;
                yankee = null;
                oscar = yankee != oscar;
                golf = undefined;
                if(!oscar) { _fun00002_ip = 130; continue _fun00001 }
 126:
                golf = _closure2_slot1;
 130:
                oscar = _closure2_slot2;
                yankee = yankee != oscar;
                oscar = undefined;
                if(!yankee) { _fun00002_ip = 147; continue _fun00001 }
 143:
                oscar = _closure2_slot2;
 147:
                oscar = options.bind(verify)(golf, oscar);
                entity['description'] = oscar;
                entity = zulu.bind(report)(mike, entity, tango);
                return entity;
            }
        };
        verify = offset.bind(yankee)(verify);
        options[2] = verify;
        report['children'] = options;
        report = golf.bind(tango)(oscar, report);
        entity['children'] = report;
        entity = zulu.bind(tango)(mike, entity);
        return entity;
    };
    zulu['default'] = mike;
    return entity;
})();