// app/modules/parent_tools/native/FamilyCenterModalAccept.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    report = argBar;
    yankee = argBaz;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    var _closure1_slot1 = yankee;
    var _closure1_slot2 = oscard;
    entity = global;
    option = entity.Object;
    golfie = option.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(option)(zuuluu, entity, tangon);
    entity = 0;
    golfie = oscard[entity];
    tangon = argCor;
    entity = undefined;
    tangon = tangon.bind(entity)(golfie);
    var _closure1_slot3 = tangon;
    tangon = 1;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.View;
    var _closure1_slot4 = tangon;
    tangon = 2;
    golfie = oscard[tangon];
    golfie = report.bind(entity)(golfie);
    golfie = golfie.jsx;
    var _closure1_slot5 = golfie;
    golfie = oscard[tangon];
    golfie = report.bind(entity)(golfie);
    golfie = golfie.Fragment;
    var _closure1_slot6 = golfie;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.jsxs;
    var _closure1_slot7 = tangon;
    tangon = 3;
    tangon = oscard[tangon];
    option = report.bind(entity)(tangon);
    golfie = option.createStyles;
    tangon = {};
    verify = {'display': 'flex', 'alignItems': 'center', 'justifyContent': 'center'};
    offset = 4;
    romeon = oscard[offset];
    romeon = yankee.bind(entity)(romeon);
    romeon = romeon.spacing;
    romeon = romeon.PX_16;
    verify['marginBottom'] = romeon;
    tangon['header'] = verify;
    verify = {};
    romeon = oscard[offset];
    romeon = yankee.bind(entity)(romeon);
    romeon = romeon.spacing;
    romeon = romeon.PX_16;
    verify['marginTop'] = romeon;
    romeon = oscard[offset];
    romeon = yankee.bind(entity)(romeon);
    romeon = romeon.spacing;
    romeon = romeon.PX_4;
    verify['marginBottom'] = romeon;
    tangon['headerText'] = verify;
    verify = {};
    romeon = oscard[offset];
    romeon = yankee.bind(entity)(romeon);
    romeon = romeon.spacing;
    romeon = romeon.PX_24;
    verify['paddingHorizontal'] = romeon;
    tangon['body'] = verify;
    verify = {};
    romeon = oscard[offset];
    romeon = yankee.bind(entity)(romeon);
    romeon = romeon.spacing;
    romeon = romeon.PX_4;
    verify['marginBottom'] = romeon;
    tangon['noticeHeader'] = verify;
    verify = {};
    romeon = oscard[offset];
    romeon = yankee.bind(entity)(romeon);
    romeon = romeon.spacing;
    romeon = romeon.PX_4;
    verify['marginBottom'] = romeon;
    tangon['button'] = verify;
    verify = {};
    foxtra = {};
    romeon = '45deg';
    foxtra['rotate'] = romeon;
    romeon = new Array(1);
    romeon[0] = foxtra;
    verify['transform'] = romeon;
    romeon = oscard[offset];
    romeon = yankee.bind(entity)(romeon);
    romeon = romeon.colors;
    romeon = romeon.INTERACTIVE_NORMAL;
    verify['tintColor'] = romeon;
    tangon['icon'] = verify;
    verify = {};
    offset = oscard[offset];
    offset = yankee.bind(entity)(offset);
    offset = offset.spacing;
    offset = offset.PX_12;
    verify['marginTop'] = offset;
    tangon['disclaimer'] = verify;
    tangon = golfie.bind(option)(tangon);
    var _closure1_slot8 = tangon;
    tangon = 16;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/parent_tools/native/FamilyCenterModalAccept.tsx';
    tangon = report.bind(oscard)(tangon);
    michal = function(argFoo) { // Original name: FamilyCenterModalAccept
        michal = argFoo;
        result = michal.otherUser;
        var _closure2_slot0 = result;
        michal = _closure1_slot8;
        tangon = undefined;
        sizing = michal.bind(tangon)();
        var _closure2_slot1 = sizing;
        report = _closure1_slot3;
        oscard = report.useCallback;
        zuuluu = function() {
            zuuluu = _closure1_slot1;
            michal = _closure1_slot2;
            entity = 5;
            michal = michal[entity];
            entity = undefined;
            zuuluu = zuuluu.bind(entity)(michal);
            michal = zuuluu.pop;
            michal = michal.bind(zuuluu)();
            return entity;
        };
        michal = new Array(0);
        verify = oscard.bind(report)(zuuluu, michal);
        oscard = report.useCallback;
        zuuluu = function() {
            golfie = _closure1_slot0;
            option = _closure1_slot2;
            entity = 6;
            michal = option[entity];
            entity = undefined;
            tangon = golfie.bind(entity)(michal);
            zuuluu = tangon.presentFailedToast;
            michal = 7;
            report = option[michal];
            report = golfie.bind(entity)(report);
            oscard = report.intl;
            report = oscard.string;
            michal = option[michal];
            michal = golfie.bind(entity)(michal);
            michal = michal.t;
            michal = michal.R0RpRU;
            michal = report.bind(oscard)(michal);
            michal = zuuluu.bind(tangon)(michal);
            return entity;
        };
        michal = new Array(0);
        golfie = oscard.bind(report)(zuuluu, michal);
        kiloes = _closure1_slot0;
        echoed = _closure1_slot2;
        michal = 8;
        michal = echoed[michal];
        oscard = kiloes.bind(tangon)(michal);
        zuuluu = oscard.useFamilyCenterActions;
        michal = {};
        michal['onSuccess'] = verify;
        michal['onError'] = golfie;
        zuuluu = zuuluu.bind(oscard)(michal);
        michal = zuuluu.acceptLinkRequest;
        var _closure2_slot2 = michal;
        oscard = zuuluu.isAcceptLoading;
        var _closure2_slot3 = oscard;
        golfie = report.useCallback;
        zuuluu = new Array(2);
        zuuluu[0] = michal;
        zuuluu[1] = result;
        michal = function() {
            zuuluu = _closure2_slot2;
            michal = _closure2_slot0;
            entity = undefined;
            michal = zuuluu.bind(entity)(michal);
            return entity;
        };
        golfie = golfie.bind(report)(michal, zuuluu);
        var _closure2_slot4 = golfie;
        zuuluu = report.useCallback;
        michal = new Array(3);
        michal[0] = golfie;
        michal[1] = oscard;
        michal[2] = sizing;
        entity = function() {
            tangon = _closure1_slot7;
            zuuluu = _closure1_slot6;
            michal = {};
            option = _closure1_slot5;
            offset = _closure1_slot1;
            yankee = _closure1_slot2;
            romeon = 9;
            report = yankee[romeon];
            entity = undefined;
            oscard = offset.bind(entity)(report);
            report = {};
            foxtra = _closure2_slot3;
            report['disabled'] = foxtra;
            report['loading'] = foxtra;
            kiloes = _closure2_slot1;
            foxtra = kiloes.button;
            report['style'] = foxtra;
            foxtra = 4;
            backup = yankee[foxtra];
            backup = offset.bind(entity)(backup);
            backup = backup.radii;
            backup = backup.xs;
            report['cornerRadius'] = backup;
            backup = yankee[romeon];
            backup = offset.bind(entity)(backup);
            backup = backup.Sizes;
            backup = backup.MEDIUM;
            report['size'] = backup;
            backup = _closure1_slot0;
            verify = 7;
            sizing = yankee[verify];
            sizing = backup.bind(entity)(sizing);
            result = sizing.intl;
            output = result.string;
            sizing = yankee[verify];
            sizing = backup.bind(entity)(sizing);
            sizing = sizing.t;
            sizing = sizing.wI/jo6;
            sizing = output.bind(result)(sizing);
            report['text'] = sizing;
            golfie = _closure2_slot4;
            report['onPress'] = golfie;
            oscard = option.bind(entity)(oscard, report);
            report = new Array(2);
            report[0] = oscard;
            oscard = yankee[romeon];
            golfie = offset.bind(entity)(oscard);
            oscard = {};
            kiloes = kiloes.button;
            oscard['style'] = kiloes;
            foxtra = yankee[foxtra];
            foxtra = offset.bind(entity)(foxtra);
            foxtra = foxtra.radii;
            foxtra = foxtra.xs;
            oscard['cornerRadius'] = foxtra;
            foxtra = yankee[romeon];
            foxtra = offset.bind(entity)(foxtra);
            foxtra = foxtra.Colors;
            foxtra = foxtra.TRANSPARENT;
            oscard['color'] = foxtra;
            romeon = yankee[romeon];
            romeon = offset.bind(entity)(romeon);
            romeon = romeon.Sizes;
            romeon = romeon.MEDIUM;
            oscard['size'] = romeon;
            romeon = yankee[verify];
            romeon = backup.bind(entity)(romeon);
            foxtra = romeon.intl;
            romeon = foxtra.string;
            verify = yankee[verify];
            verify = backup.bind(entity)(verify);
            verify = verify.t;
            verify = verify.ETE/oK;
            verify = romeon.bind(foxtra)(verify);
            oscard['text'] = verify;
            verify = 5;
            verify = yankee[verify];
            verify = offset.bind(entity)(verify);
            verify = verify.pop;
            oscard['onPress'] = verify;
            oscard = option.bind(entity)(golfie, oscard);
            report[1] = oscard;
            michal['children'] = report;
            entity = tangon.bind(entity)(zuuluu, michal);
            return entity;
        };
        report = zuuluu.bind(report)(entity, michal);
        zuuluu = _closure1_slot5;
        foxtra = _closure1_slot1;
        entity = 10;
        entity = echoed[entity];
        michal = foxtra.bind(tangon)(entity);
        entity = {};
        report = report.bind(tangon)();
        entity['footer'] = report;
        golfie = _closure1_slot7;
        oscard = _closure1_slot6;
        report = {};
        offset = _closure1_slot4;
        option = {};
        verify = sizing.header;
        option['style'] = verify;
        verify = 11;
        verify = echoed[verify];
        yankee = foxtra.bind(tangon)(verify);
        verify = {};
        verify['otherUser'] = result;
        romeon = 12;
        romeon = echoed[romeon];
        romeon = foxtra.bind(tangon)(romeon);
        verify['iconSrc'] = romeon;
        romeon = sizing.icon;
        verify['iconStyles'] = romeon;
        yankee = zuuluu.bind(tangon)(yankee, verify);
        verify = new Array(3);
        verify[0] = yankee;
        romeon = 13;
        yankee = echoed[romeon];
        yankee = kiloes.bind(tangon)(yankee);
        output = yankee.Text;
        yankee = {};
        backup = sizing.headerText;
        yankee['style'] = backup;
        backup = 'text-lg/bold';
        yankee['variant'] = backup;
        backup = 7;
        update = echoed[backup];
        update = kiloes.bind(tangon)(update);
        ctrled = update.intl;
        source = ctrled.string;
        update = echoed[backup];
        update = kiloes.bind(tangon)(update);
        update = update.t;
        update = update.rlNJwc;
        update = source.bind(ctrled)(update);
        yankee['children'] = update;
        yankee = zuuluu.bind(tangon)(output, yankee);
        verify[1] = yankee;
        yankee = 14;
        yankee = echoed[yankee];
        output = foxtra.bind(tangon)(yankee);
        yankee = {};
        yankee['user'] = result;
        yankee = zuuluu.bind(tangon)(output, yankee);
        verify[2] = yankee;
        option['children'] = verify;
        verify = golfie.bind(tangon)(offset, option);
        option = new Array(2);
        option[0] = verify;
        verify = {};
        yankee = sizing.body;
        verify['style'] = yankee;
        yankee = 15;
        yankee = echoed[yankee];
        foxtra = foxtra.bind(tangon)(yankee);
        yankee = {};
        output = 'accept-modal';
        yankee['source'] = output;
        foxtra = zuuluu.bind(tangon)(foxtra, yankee);
        yankee = new Array(2);
        yankee[0] = foxtra;
        romeon = echoed[romeon];
        romeon = kiloes.bind(tangon)(romeon);
        foxtra = romeon.Text;
        romeon = {'style': null, 'variant': 'text-xs/normal', 'color': 'text-normal'};
        sizing = sizing.disclaimer;
        romeon['style'] = sizing;
        sizing = echoed[backup];
        sizing = kiloes.bind(tangon)(sizing);
        output = sizing.intl;
        sizing = output.format;
        backup = echoed[backup];
        backup = kiloes.bind(tangon)(backup);
        backup = backup.t;
        kiloes = backup.snlFqa;
        backup = {};
        result = result.username;
        backup['username'] = result;
        backup = sizing.bind(output)(kiloes, backup);
        romeon['children'] = backup;
        romeon = zuuluu.bind(tangon)(foxtra, romeon);
        yankee[1] = romeon;
        verify['children'] = yankee;
        verify = golfie.bind(tangon)(offset, verify);
        option[1] = verify;
        report['children'] = option;
        report = golfie.bind(tangon)(oscard, report);
        entity['children'] = report;
        entity = zuuluu.bind(tangon)(michal, entity);
        return entity;
    };
    zuuluu['default'] = michal;
    return entity;
})();