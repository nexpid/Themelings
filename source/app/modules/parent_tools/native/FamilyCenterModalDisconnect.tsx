// app/modules/parent_tools/native/FamilyCenterModalDisconnect.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    report = argBar;
    yankee = argBaz;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    var _closure1_slot1 = yankee;
    var _closure1_slot2 = oscard;
    entity = global;
    option = entity.Object;
    golfie = option.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(option)(zuuluu, entity, tangon);
    entity = 0;
    tangon = oscard[entity];
    entity = undefined;
    tangon = yankee.bind(entity)(tangon);
    var _closure1_slot3 = tangon;
    tangon = 1;
    golfie = oscard[tangon];
    tangon = argCor;
    tangon = tangon.bind(entity)(golfie);
    var _closure1_slot4 = tangon;
    tangon = 2;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.View;
    var _closure1_slot5 = tangon;
    tangon = 3;
    golfie = oscard[tangon];
    golfie = report.bind(entity)(golfie);
    golfie = golfie.jsx;
    var _closure1_slot6 = golfie;
    golfie = oscard[tangon];
    golfie = report.bind(entity)(golfie);
    golfie = golfie.Fragment;
    var _closure1_slot7 = golfie;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.jsxs;
    var _closure1_slot8 = tangon;
    tangon = 4;
    tangon = oscard[tangon];
    option = report.bind(entity)(tangon);
    golfie = option.createStyles;
    tangon = {};
    verify = {'display': 'flex', 'alignItems': 'center', 'justifyContent': 'center'};
    offset = 5;
    romeon = oscard[offset];
    romeon = yankee.bind(entity)(romeon);
    romeon = romeon.spacing;
    romeon = romeon.PX_16;
    verify['marginBottom'] = romeon;
    tangon['header'] = verify;
    verify = {};
    romeon = oscard[offset];
    romeon = yankee.bind(entity)(romeon);
    romeon = romeon.spacing;
    romeon = romeon.PX_16;
    verify['marginTop'] = romeon;
    romeon = oscard[offset];
    romeon = yankee.bind(entity)(romeon);
    romeon = romeon.spacing;
    romeon = romeon.PX_4;
    verify['marginBottom'] = romeon;
    tangon['headerText'] = verify;
    verify = {};
    romeon = oscard[offset];
    romeon = yankee.bind(entity)(romeon);
    romeon = romeon.spacing;
    romeon = romeon.PX_24;
    verify['padding'] = romeon;
    romeon = oscard[offset];
    romeon = yankee.bind(entity)(romeon);
    romeon = romeon.radii;
    romeon = romeon.md;
    verify['borderRadius'] = romeon;
    romeon = oscard[offset];
    romeon = yankee.bind(entity)(romeon);
    romeon = romeon.colors;
    romeon = romeon.BACKGROUND_SECONDARY;
    verify['backgroundColor'] = romeon;
    tangon['body'] = verify;
    verify = {};
    romeon = oscard[offset];
    romeon = yankee.bind(entity)(romeon);
    romeon = romeon.spacing;
    romeon = romeon.PX_4;
    verify['marginBottom'] = romeon;
    tangon['noticeHeader'] = verify;
    verify = {};
    romeon = oscard[offset];
    romeon = yankee.bind(entity)(romeon);
    romeon = romeon.spacing;
    romeon = romeon.PX_4;
    verify['marginBottom'] = romeon;
    tangon['button'] = verify;
    verify = {};
    offset = oscard[offset];
    offset = yankee.bind(entity)(offset);
    offset = offset.colors;
    offset = offset.STATUS_DANGER;
    verify['tintColor'] = offset;
    tangon['icon'] = verify;
    tangon = golfie.bind(option)(tangon);
    var _closure1_slot9 = tangon;
    tangon = 21;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/parent_tools/native/FamilyCenterModalDisconnect.tsx';
    tangon = report.bind(oscard)(tangon);
    michal = function(argFoo) { // Original name: FamilyCenterModalDisconnect
        entity = argFoo;
        config = entity.otherUser;
        var _closure2_slot0 = config;
        entity = _closure1_slot9;
        tangon = undefined;
        sequen = entity.bind(tangon)();
        var _closure2_slot1 = sequen;
        report = _closure1_slot4;
        zuuluu = report.useCallback;
        michal = function() {
            zuuluu = _closure1_slot1;
            michal = _closure1_slot2;
            entity = 6;
            michal = michal[entity];
            entity = undefined;
            zuuluu = zuuluu.bind(entity)(michal);
            michal = zuuluu.pop;
            michal = michal.bind(zuuluu)();
            return entity;
        };
        entity = new Array(0);
        golfie = zuuluu.bind(report)(michal, entity);
        romeon = _closure1_slot1;
        backup = _closure1_slot2;
        entity = 7;
        entity = backup[entity];
        entity = romeon.bind(tangon)(entity);
        sierra = entity.bind(tangon)();
        michal = report.useState;
        entity = false;
        zuuluu = michal.bind(report)(entity);
        michal = _closure1_slot3;
        entity = 2;
        michal = michal.bind(tangon)(zuuluu, entity);
        entity = 0;
        foxtra = michal[entity];
        var _closure2_slot2 = foxtra;
        entity = 1;
        entity = michal[entity];
        var _closure2_slot3 = entity;
        zuuluu = report.useCallback;
        michal = function() {
            golfie = _closure1_slot0;
            option = _closure1_slot2;
            entity = 8;
            michal = option[entity];
            entity = undefined;
            tangon = golfie.bind(entity)(michal);
            zuuluu = tangon.presentFailedToast;
            michal = 9;
            report = option[michal];
            report = golfie.bind(entity)(report);
            oscard = report.intl;
            report = oscard.string;
            michal = option[michal];
            michal = golfie.bind(entity)(michal);
            michal = michal.t;
            michal = michal.R0RpRU;
            michal = report.bind(oscard)(michal);
            michal = zuuluu.bind(tangon)(michal);
            zuuluu = _closure2_slot3;
            michal = false;
            michal = zuuluu.bind(entity)(michal);
            return entity;
        };
        entity = new Array(0);
        oscard = zuuluu.bind(report)(michal, entity);
        kiloes = _closure1_slot0;
        entity = 10;
        entity = backup[entity];
        zuuluu = kiloes.bind(tangon)(entity);
        michal = zuuluu.useFamilyCenterActions;
        entity = {};
        entity['onSuccess'] = golfie;
        entity['onError'] = oscard;
        michal = michal.bind(zuuluu)(entity);
        entity = michal.disconnectLinkRequest;
        var _closure2_slot4 = entity;
        result = michal.isDisconnectLoading;
        var _closure2_slot5 = result;
        michal = 11;
        zuuluu = backup[michal];
        verify = kiloes.bind(tangon)(zuuluu);
        golfie = verify.useAgeSpecificText;
        vacuum = 9;
        zuuluu = backup[vacuum];
        zuuluu = kiloes.bind(tangon)(zuuluu);
        offset = zuuluu.intl;
        oscard = offset.string;
        source = 12;
        zuuluu = backup[source];
        zuuluu = romeon.bind(tangon)(zuuluu);
        zuuluu = zuuluu.VJaHUV;
        oscard = oscard.bind(offset)(zuuluu);
        zuuluu = backup[vacuum];
        zuuluu = kiloes.bind(tangon)(zuuluu);
        yankee = zuuluu.intl;
        offset = yankee.string;
        zuuluu = backup[source];
        zuuluu = romeon.bind(tangon)(zuuluu);
        zuuluu = zuuluu./MYCeX;
        zuuluu = offset.bind(yankee)(zuuluu);
        sizing = golfie.bind(verify)(oscard, zuuluu);
        michal = backup[michal];
        golfie = kiloes.bind(tangon)(michal);
        oscard = golfie.useAgeSpecificText;
        michal = backup[vacuum];
        michal = kiloes.bind(tangon)(michal);
        verify = michal.intl;
        zuuluu = verify.string;
        michal = backup[source];
        michal = romeon.bind(tangon)(michal);
        michal = michal.f1SUeX;
        zuuluu = zuuluu.bind(verify)(michal);
        michal = backup[vacuum];
        michal = kiloes.bind(tangon)(michal);
        offset = michal.intl;
        verify = offset.string;
        michal = backup[source];
        michal = romeon.bind(tangon)(michal);
        michal = michal.EvMGLS;
        michal = verify.bind(offset)(michal);
        ctrled = oscard.bind(golfie)(zuuluu, michal);
        zuuluu = report.useCallback;
        michal = new Array(2);
        michal[0] = entity;
        michal[1] = config;
        entity = function() {
            zuuluu = _closure2_slot4;
            michal = _closure2_slot0;
            entity = undefined;
            michal = zuuluu.bind(entity)(michal);
            return entity;
        };
        entity = zuuluu.bind(report)(entity, michal);
        var _closure2_slot6 = entity;
        zuuluu = report.useCallback;
        michal = new Array(4);
        michal[0] = foxtra;
        michal[1] = entity;
        michal[2] = result;
        michal[3] = sequen;
        entity = function() {
            _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
                tangon = _closure1_slot8;
                zuuluu = _closure1_slot7;
                michal = {};
                option = _closure1_slot6;
                golfie = _closure1_slot1;
                entity = _closure1_slot2;
                romeon = 13;
                report = entity[romeon];
                entity = undefined;
                golfie = golfie.bind(entity)(report);
                report = {};
                verify = _closure2_slot2;
                verify = !verify;
                if(verify) { _fun00002_ip = 58; continue _fun00001 }
 54:
                verify = _closure2_slot5;
 58:
                report['disabled'] = verify;
                verify = _closure2_slot5;
                report['loading'] = verify;
                kiloes = _closure2_slot1;
                verify = kiloes.button;
                report['style'] = verify;
                offset = _closure1_slot1;
                yankee = _closure1_slot2;
                foxtra = 5;
                verify = yankee[foxtra];
                verify = offset.bind(entity)(verify);
                verify = verify.radii;
                verify = verify.xs;
                report['cornerRadius'] = verify;
                verify = yankee[romeon];
                verify = offset.bind(entity)(verify);
                verify = verify.Colors;
                verify = verify.RED;
                report['color'] = verify;
                verify = yankee[romeon];
                verify = offset.bind(entity)(verify);
                verify = verify.Sizes;
                verify = verify.MEDIUM;
                report['size'] = verify;
                backup = _closure1_slot0;
                verify = 9;
                output = yankee[verify];
                output = backup.bind(entity)(output);
                echoed = output.intl;
                result = echoed.string;
                output = 12;
                output = yankee[output];
                output = offset.bind(entity)(output);
                output = output.c5L+sr;
                output = result.bind(echoed)(output);
                report['text'] = output;
                sizing = _closure2_slot6;
                report['onPress'] = sizing;
                golfie = option.bind(entity)(golfie, report);
                report = new Array(2);
                report[0] = golfie;
                option = _closure1_slot6;
                oscard = yankee[romeon];
                golfie = offset.bind(entity)(oscard);
                oscard = {};
                kiloes = kiloes.button;
                oscard['style'] = kiloes;
                foxtra = yankee[foxtra];
                foxtra = offset.bind(entity)(foxtra);
                foxtra = foxtra.radii;
                foxtra = foxtra.xs;
                oscard['cornerRadius'] = foxtra;
                foxtra = yankee[romeon];
                foxtra = offset.bind(entity)(foxtra);
                foxtra = foxtra.Colors;
                foxtra = foxtra.TRANSPARENT;
                oscard['color'] = foxtra;
                romeon = yankee[romeon];
                romeon = offset.bind(entity)(romeon);
                romeon = romeon.Sizes;
                romeon = romeon.MEDIUM;
                oscard['size'] = romeon;
                romeon = yankee[verify];
                romeon = backup.bind(entity)(romeon);
                foxtra = romeon.intl;
                romeon = foxtra.string;
                verify = yankee[verify];
                verify = backup.bind(entity)(verify);
                verify = verify.t;
                verify = verify.ETE/oK;
                verify = romeon.bind(foxtra)(verify);
                oscard['text'] = verify;
                verify = 6;
                verify = yankee[verify];
                verify = offset.bind(entity)(verify);
                verify = verify.pop;
                oscard['onPress'] = verify;
                oscard = option.bind(entity)(golfie, oscard);
                report[1] = oscard;
                michal['children'] = report;
                entity = tangon.bind(entity)(zuuluu, michal);
                return entity;
            }
        };
        report = zuuluu.bind(report)(entity, michal);
        zuuluu = _closure1_slot6;
        entity = 14;
        entity = backup[entity];
        michal = romeon.bind(tangon)(entity);
        entity = {};
        report = report.bind(tangon)();
        entity['footer'] = report;
        golfie = _closure1_slot8;
        oscard = _closure1_slot7;
        report = {};
        offset = _closure1_slot5;
        option = {};
        verify = sequen.header;
        option['style'] = verify;
        verify = 15;
        verify = backup[verify];
        yankee = romeon.bind(tangon)(verify);
        verify = {};
        verify['otherUser'] = config;
        echoed = 16;
        echoed = backup[echoed];
        echoed = romeon.bind(tangon)(echoed);
        verify['iconSrc'] = echoed;
        yankee = zuuluu.bind(tangon)(yankee, verify);
        verify = new Array(3);
        verify[0] = yankee;
        yankee = 17;
        echoed = backup[yankee];
        echoed = kiloes.bind(tangon)(echoed);
        update = echoed.Text;
        echoed = {};
        record = sequen.headerText;
        echoed['style'] = record;
        record = 'text-lg/bold';
        echoed['variant'] = record;
        record = backup[vacuum];
        record = kiloes.bind(tangon)(record);
        target = record.intl;
        papara = target.format;
        record = backup[source];
        record = romeon.bind(tangon)(record);
        cntext = record.NMSTb2;
        record = {};
        status = global;
        status = status.String;
        status = status.bind(tangon)(sierra);
        record['isAdult'] = status;
        record = papara.bind(target)(cntext, record);
        echoed['children'] = record;
        echoed = zuuluu.bind(tangon)(update, echoed);
        verify[1] = echoed;
        echoed = 18;
        echoed = backup[echoed];
        update = romeon.bind(tangon)(echoed);
        echoed = {};
        echoed['user'] = config;
        echoed = zuuluu.bind(tangon)(update, echoed);
        verify[2] = echoed;
        option['children'] = verify;
        verify = golfie.bind(tangon)(offset, option);
        option = new Array(3);
        option[0] = verify;
        verify = {};
        echoed = sequen.body;
        verify['style'] = echoed;
        echoed = backup[yankee];
        echoed = kiloes.bind(tangon)(echoed);
        update = echoed.Text;
        echoed = {'style': null, 'variant': 'eyebrow', 'color': 'header-primary'};
        sequen = sequen.noticeHeader;
        echoed['style'] = sequen;
        vacuum = backup[vacuum];
        vacuum = kiloes.bind(tangon)(vacuum);
        sequen = vacuum.intl;
        vacuum = sequen.string;
        source = backup[source];
        source = romeon.bind(tangon)(source);
        source = source.VKblNj;
        source = vacuum.bind(sequen)(source);
        echoed['children'] = source;
        update = zuuluu.bind(tangon)(update, echoed);
        echoed = new Array(2);
        echoed[0] = update;
        update = backup[yankee];
        update = kiloes.bind(tangon)(update);
        source = update.Text;
        update = {'variant': 'text-sm/normal', 'color': 'header-secondary'};
        update['children'] = ctrled;
        update = zuuluu.bind(tangon)(source, update);
        echoed[1] = update;
        verify['children'] = echoed;
        verify = golfie.bind(tangon)(offset, verify);
        option[1] = verify;
        verify = 19;
        verify = backup[verify];
        verify = kiloes.bind(tangon)(verify);
        offset = verify.FormRow;
        verify = {};
        verify['disabled'] = result;
        output = function() { // Original name: onPress
            zuuluu = _closure2_slot3;
            entity = undefined;
            michal = function(argFoo) {
                entity = argFoo;
                entity = !entity;
                return entity;
            };
            michal = zuuluu.bind(entity)(michal);
            return entity;
        };
        verify['onPress'] = output;
        yankee = backup[yankee];
        yankee = kiloes.bind(tangon)(yankee);
        kiloes = yankee.Text;
        yankee = {};
        output = 'text-xs/semibold';
        yankee['variant'] = output;
        yankee['children'] = sizing;
        yankee = zuuluu.bind(tangon)(kiloes, yankee);
        verify['label'] = yankee;
        yankee = 20;
        yankee = backup[yankee];
        romeon = romeon.bind(tangon)(yankee);
        yankee = {};
        yankee['selected'] = foxtra;
        yankee = zuuluu.bind(tangon)(romeon, yankee);
        verify['leading'] = yankee;
        verify = zuuluu.bind(tangon)(offset, verify);
        option[2] = verify;
        report['children'] = option;
        report = golfie.bind(tangon)(oscard, report);
        entity['children'] = report;
        entity = zuuluu.bind(tangon)(michal, entity);
        return entity;
    };
    zuuluu['default'] = michal;
    return entity;
})();