// app/modules/parent_tools/native/FamilyCenterModalDisconnect.tsx
export default (function(argFoo, argBar, argBaz, argCorge, _, argFred, argPlugh) {
    report = argBar;
    yankee = argBaz;
    zulu = argFred;
    oscar = argPlugh;
    var _closure1_slot0 = report;
    var _closure1_slot1 = yankee;
    var _closure1_slot2 = oscar;
    entity = global;
    options = entity.Object;
    golf = options.defineProperty;
    tango = {};
    entity = true;
    tango['value'] = entity;
    entity = '__esModule';
    entity = golf.bind(options)(zulu, entity, tango);
    entity = 0;
    tango = oscar[entity];
    entity = undefined;
    tango = yankee.bind(entity)(tango);
    var _closure1_slot3 = tango;
    tango = 1;
    golf = oscar[tango];
    tango = argCorge;
    tango = tango.bind(entity)(golf);
    var _closure1_slot4 = tango;
    tango = 2;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.View;
    var _closure1_slot5 = tango;
    tango = 3;
    golf = oscar[tango];
    golf = report.bind(entity)(golf);
    golf = golf.jsx;
    var _closure1_slot6 = golf;
    golf = oscar[tango];
    golf = report.bind(entity)(golf);
    golf = golf.Fragment;
    var _closure1_slot7 = golf;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.jsxs;
    var _closure1_slot8 = tango;
    tango = 4;
    tango = oscar[tango];
    options = report.bind(entity)(tango);
    golf = options.createStyles;
    tango = {};
    verify = {'display': 'flex', 'alignItems': 'center', 'justifyContent': 'center'};
    offset = 5;
    romeo = oscar[offset];
    romeo = yankee.bind(entity)(romeo);
    romeo = romeo.spacing;
    romeo = romeo.PX_16;
    verify['marginBottom'] = romeo;
    tango['header'] = verify;
    verify = {};
    romeo = oscar[offset];
    romeo = yankee.bind(entity)(romeo);
    romeo = romeo.spacing;
    romeo = romeo.PX_16;
    verify['marginTop'] = romeo;
    romeo = oscar[offset];
    romeo = yankee.bind(entity)(romeo);
    romeo = romeo.spacing;
    romeo = romeo.PX_4;
    verify['marginBottom'] = romeo;
    tango['headerText'] = verify;
    verify = {};
    romeo = oscar[offset];
    romeo = yankee.bind(entity)(romeo);
    romeo = romeo.spacing;
    romeo = romeo.PX_24;
    verify['padding'] = romeo;
    romeo = oscar[offset];
    romeo = yankee.bind(entity)(romeo);
    romeo = romeo.radii;
    romeo = romeo.md;
    verify['borderRadius'] = romeo;
    romeo = oscar[offset];
    romeo = yankee.bind(entity)(romeo);
    romeo = romeo.colors;
    romeo = romeo.BACKGROUND_SECONDARY;
    verify['backgroundColor'] = romeo;
    tango['body'] = verify;
    verify = {};
    romeo = oscar[offset];
    romeo = yankee.bind(entity)(romeo);
    romeo = romeo.spacing;
    romeo = romeo.PX_4;
    verify['marginBottom'] = romeo;
    tango['noticeHeader'] = verify;
    verify = {};
    romeo = oscar[offset];
    romeo = yankee.bind(entity)(romeo);
    romeo = romeo.spacing;
    romeo = romeo.PX_4;
    verify['marginBottom'] = romeo;
    tango['button'] = verify;
    verify = {};
    offset = oscar[offset];
    offset = yankee.bind(entity)(offset);
    offset = offset.colors;
    offset = offset.STATUS_DANGER;
    verify['tintColor'] = offset;
    tango['icon'] = verify;
    tango = golf.bind(options)(tango);
    var _closure1_slot9 = tango;
    tango = 20;
    tango = oscar[tango];
    oscar = report.bind(entity)(tango);
    report = oscar.fileFinishedImporting;
    tango = 'modules/parent_tools/native/FamilyCenterModalDisconnect.tsx';
    tango = report.bind(oscar)(tango);
    mike = function(argFoo) { // Original name: FamilyCenterModalDisconnect
        entity = argFoo;
        sequence = entity.otherUser;
        var _closure2_slot0 = sequence;
        entity = _closure1_slot9;
        tango = undefined;
        vacuum = entity.bind(tango)();
        var _closure2_slot1 = vacuum;
        report = _closure1_slot4;
        zulu = report.useCallback;
        mike = function() {
            zulu = _closure1_slot1;
            mike = _closure1_slot2;
            entity = 6;
            mike = mike[entity];
            entity = undefined;
            zulu = zulu.bind(entity)(mike);
            mike = zulu.pop;
            mike = mike.bind(zulu)();
            return entity;
        };
        entity = new Array(0);
        golf = zulu.bind(report)(mike, entity);
        romeo = _closure1_slot1;
        backup = _closure1_slot2;
        entity = 7;
        entity = backup[entity];
        entity = romeo.bind(tango)(entity);
        status = entity.bind(tango)();
        mike = report.useState;
        entity = false;
        zulu = mike.bind(report)(entity);
        mike = _closure1_slot3;
        entity = 2;
        mike = mike.bind(tango)(zulu, entity);
        entity = 0;
        foxtrot = mike[entity];
        var _closure2_slot2 = foxtrot;
        entity = 1;
        entity = mike[entity];
        var _closure2_slot3 = entity;
        zulu = report.useCallback;
        mike = function() {
            golf = _closure1_slot0;
            options = _closure1_slot2;
            entity = 8;
            mike = options[entity];
            entity = undefined;
            tango = golf.bind(entity)(mike);
            zulu = tango.presentFailedToast;
            mike = 9;
            report = options[mike];
            report = golf.bind(entity)(report);
            oscar = report.intl;
            report = oscar.string;
            mike = options[mike];
            mike = golf.bind(entity)(mike);
            mike = mike.t;
            mike = mike.R0RpRU;
            mike = report.bind(oscar)(mike);
            mike = zulu.bind(tango)(mike);
            zulu = _closure2_slot3;
            mike = false;
            mike = zulu.bind(entity)(mike);
            return entity;
        };
        entity = new Array(0);
        oscar = zulu.bind(report)(mike, entity);
        kilo = _closure1_slot0;
        entity = 10;
        entity = backup[entity];
        zulu = kilo.bind(tango)(entity);
        mike = zulu.useFamilyCenterActions;
        entity = {};
        entity['onSuccess'] = golf;
        entity['onError'] = oscar;
        mike = mike.bind(zulu)(entity);
        entity = mike.disconnectLinkRequest;
        var _closure2_slot4 = entity;
        result = mike.isDisconnectLoading;
        var _closure2_slot5 = result;
        mike = 11;
        zulu = backup[mike];
        verify = kilo.bind(tango)(zulu);
        golf = verify.useAgeSpecificText;
        source = 9;
        zulu = backup[source];
        zulu = kilo.bind(tango)(zulu);
        offset = zulu.intl;
        oscar = offset.string;
        zulu = backup[source];
        zulu = kilo.bind(tango)(zulu);
        zulu = zulu.t;
        zulu = zulu.VJaHUV;
        oscar = oscar.bind(offset)(zulu);
        zulu = backup[source];
        zulu = kilo.bind(tango)(zulu);
        yankee = zulu.intl;
        offset = yankee.string;
        zulu = backup[source];
        zulu = kilo.bind(tango)(zulu);
        zulu = zulu.t;
        zulu = zulu./MYCeX;
        zulu = offset.bind(yankee)(zulu);
        sizing = golf.bind(verify)(oscar, zulu);
        mike = backup[mike];
        golf = kilo.bind(tango)(mike);
        oscar = golf.useAgeSpecificText;
        mike = backup[source];
        mike = kilo.bind(tango)(mike);
        verify = mike.intl;
        zulu = verify.string;
        mike = backup[source];
        mike = kilo.bind(tango)(mike);
        mike = mike.t;
        mike = mike.f1SUeX;
        zulu = zulu.bind(verify)(mike);
        mike = backup[source];
        mike = kilo.bind(tango)(mike);
        offset = mike.intl;
        verify = offset.string;
        mike = backup[source];
        mike = kilo.bind(tango)(mike);
        mike = mike.t;
        mike = mike.EvMGLS;
        mike = verify.bind(offset)(mike);
        control = oscar.bind(golf)(zulu, mike);
        zulu = report.useCallback;
        mike = new Array(2);
        mike[0] = entity;
        mike[1] = sequence;
        entity = function() {
            zulu = _closure2_slot4;
            mike = _closure2_slot0;
            entity = undefined;
            mike = zulu.bind(entity)(mike);
            return entity;
        };
        entity = zulu.bind(report)(entity, mike);
        var _closure2_slot6 = entity;
        zulu = report.useCallback;
        mike = new Array(4);
        mike[0] = foxtrot;
        mike[1] = entity;
        mike[2] = result;
        mike[3] = vacuum;
        entity = function() {
            _fun95434: for(var _fun95434_ip = 0; ; ) switch(_fun95434_ip) {
 0:
                tango = _closure1_slot8;
                zulu = _closure1_slot7;
                mike = {};
                options = _closure1_slot6;
                golf = _closure1_slot1;
                entity = _closure1_slot2;
                romeo = 12;
                report = entity[romeo];
                entity = undefined;
                golf = golf.bind(entity)(report);
                report = {};
                verify = _closure2_slot2;
                verify = !verify;
                if(verify) { _fun95434_ip = 58; continue _fun95434 }
 54:
                verify = _closure2_slot5;
 58:
                report['disabled'] = verify;
                verify = _closure2_slot5;
                report['loading'] = verify;
                kilo = _closure2_slot1;
                verify = kilo.button;
                report['style'] = verify;
                offset = _closure1_slot1;
                yankee = _closure1_slot2;
                foxtrot = 5;
                verify = yankee[foxtrot];
                verify = offset.bind(entity)(verify);
                verify = verify.radii;
                verify = verify.xs;
                report['cornerRadius'] = verify;
                verify = yankee[romeo];
                verify = offset.bind(entity)(verify);
                verify = verify.Colors;
                verify = verify.RED;
                report['color'] = verify;
                verify = yankee[romeo];
                verify = offset.bind(entity)(verify);
                verify = verify.Sizes;
                verify = verify.MEDIUM;
                report['size'] = verify;
                backup = _closure1_slot0;
                verify = 9;
                output = yankee[verify];
                output = backup.bind(entity)(output);
                echo = output.intl;
                result = echo.string;
                output = yankee[verify];
                output = backup.bind(entity)(output);
                output = output.t;
                output = output.c5L+sr;
                output = result.bind(echo)(output);
                report['text'] = output;
                sizing = _closure2_slot6;
                report['onPress'] = sizing;
                golf = options.bind(entity)(golf, report);
                report = new Array(2);
                report[0] = golf;
                options = _closure1_slot6;
                oscar = yankee[romeo];
                golf = offset.bind(entity)(oscar);
                oscar = {};
                kilo = kilo.button;
                oscar['style'] = kilo;
                foxtrot = yankee[foxtrot];
                foxtrot = offset.bind(entity)(foxtrot);
                foxtrot = foxtrot.radii;
                foxtrot = foxtrot.xs;
                oscar['cornerRadius'] = foxtrot;
                foxtrot = yankee[romeo];
                foxtrot = offset.bind(entity)(foxtrot);
                foxtrot = foxtrot.Colors;
                foxtrot = foxtrot.TRANSPARENT;
                oscar['color'] = foxtrot;
                romeo = yankee[romeo];
                romeo = offset.bind(entity)(romeo);
                romeo = romeo.Sizes;
                romeo = romeo.MEDIUM;
                oscar['size'] = romeo;
                romeo = yankee[verify];
                romeo = backup.bind(entity)(romeo);
                foxtrot = romeo.intl;
                romeo = foxtrot.string;
                verify = yankee[verify];
                verify = backup.bind(entity)(verify);
                verify = verify.t;
                verify = verify.ETE/oK;
                verify = romeo.bind(foxtrot)(verify);
                oscar['text'] = verify;
                verify = 6;
                verify = yankee[verify];
                verify = offset.bind(entity)(verify);
                verify = verify.pop;
                oscar['onPress'] = verify;
                oscar = options.bind(entity)(golf, oscar);
                report[1] = oscar;
                mike['children'] = report;
                entity = tango.bind(entity)(zulu, mike);
                return entity;
            }
        };
        report = zulu.bind(report)(entity, mike);
        zulu = _closure1_slot6;
        entity = 13;
        entity = backup[entity];
        mike = romeo.bind(tango)(entity);
        entity = {};
        report = report.bind(tango)();
        entity['footer'] = report;
        golf = _closure1_slot8;
        oscar = _closure1_slot7;
        report = {};
        offset = _closure1_slot5;
        options = {};
        verify = vacuum.header;
        options['style'] = verify;
        verify = 14;
        verify = backup[verify];
        yankee = romeo.bind(tango)(verify);
        verify = {};
        verify['otherUser'] = sequence;
        echo = 15;
        echo = backup[echo];
        echo = romeo.bind(tango)(echo);
        verify['iconSrc'] = echo;
        yankee = zulu.bind(tango)(yankee, verify);
        verify = new Array(3);
        verify[0] = yankee;
        yankee = 16;
        echo = backup[yankee];
        echo = kilo.bind(tango)(echo);
        update = echo.Text;
        echo = {};
        config = vacuum.headerText;
        echo['style'] = config;
        config = 'text-lg/bold';
        echo['variant'] = config;
        config = backup[source];
        config = kilo.bind(tango)(config);
        papa = config.intl;
        context = papa.format;
        config = backup[source];
        config = kilo.bind(tango)(config);
        config = config.t;
        record = config.NMSTb2;
        config = {};
        target = global;
        target = target.String;
        target = target.bind(tango)(status);
        config['isAdult'] = target;
        config = context.bind(papa)(record, config);
        echo['children'] = config;
        echo = zulu.bind(tango)(update, echo);
        verify[1] = echo;
        echo = 17;
        echo = backup[echo];
        update = romeo.bind(tango)(echo);
        echo = {};
        echo['user'] = sequence;
        echo = zulu.bind(tango)(update, echo);
        verify[2] = echo;
        options['children'] = verify;
        verify = golf.bind(tango)(offset, options);
        options = new Array(3);
        options[0] = verify;
        verify = {};
        echo = vacuum.body;
        verify['style'] = echo;
        echo = backup[yankee];
        echo = kilo.bind(tango)(echo);
        update = echo.Text;
        echo = {'style': null, 'variant': 'eyebrow', 'color': 'header-primary'};
        vacuum = vacuum.noticeHeader;
        echo['style'] = vacuum;
        vacuum = backup[source];
        vacuum = kilo.bind(tango)(vacuum);
        sequence = vacuum.intl;
        vacuum = sequence.string;
        source = backup[source];
        source = kilo.bind(tango)(source);
        source = source.t;
        source = source.VKblNj;
        source = vacuum.bind(sequence)(source);
        echo['children'] = source;
        update = zulu.bind(tango)(update, echo);
        echo = new Array(2);
        echo[0] = update;
        update = backup[yankee];
        update = kilo.bind(tango)(update);
        source = update.Text;
        update = {'variant': 'text-sm/normal', 'color': 'header-secondary'};
        update['children'] = control;
        update = zulu.bind(tango)(source, update);
        echo[1] = update;
        verify['children'] = echo;
        verify = golf.bind(tango)(offset, verify);
        options[1] = verify;
        verify = 18;
        verify = backup[verify];
        verify = kilo.bind(tango)(verify);
        offset = verify.FormRow;
        verify = {};
        verify['disabled'] = result;
        output = function() { // Original name: onPress
            zulu = _closure2_slot3;
            entity = undefined;
            mike = function(argFoo) {
                entity = argFoo;
                entity = !entity;
                return entity;
            };
            mike = zulu.bind(entity)(mike);
            return entity;
        };
        verify['onPress'] = output;
        yankee = backup[yankee];
        yankee = kilo.bind(tango)(yankee);
        kilo = yankee.Text;
        yankee = {};
        output = 'text-xs/semibold';
        yankee['variant'] = output;
        yankee['children'] = sizing;
        yankee = zulu.bind(tango)(kilo, yankee);
        verify['label'] = yankee;
        yankee = 19;
        yankee = backup[yankee];
        romeo = romeo.bind(tango)(yankee);
        yankee = {};
        yankee['selected'] = foxtrot;
        yankee = zulu.bind(tango)(romeo, yankee);
        verify['leading'] = yankee;
        verify = zulu.bind(tango)(offset, verify);
        options[2] = verify;
        report['children'] = options;
        report = golf.bind(tango)(oscar, report);
        entity['children'] = report;
        entity = zulu.bind(tango)(mike, entity);
        return entity;
    };
    zulu['default'] = mike;
    return entity;
})();