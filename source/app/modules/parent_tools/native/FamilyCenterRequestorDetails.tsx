// app/modules/parent_tools/native/FamilyCenterRequestorDetails.tsx
export default (function(argFoo, argBar, argBaz, argCorge, _, argFred, argPlugh) {
    report = argBar;
    romeo = argBaz;
    zulu = argFred;
    oscar = argPlugh;
    var _closure1_slot0 = report;
    var _closure1_slot1 = romeo;
    var _closure1_slot2 = oscar;
    entity = global;
    options = entity.Object;
    golf = options.defineProperty;
    tango = {};
    entity = true;
    tango['value'] = entity;
    entity = '__esModule';
    entity = golf.bind(options)(zulu, entity, tango);
    entity = 0;
    golf = oscar[entity];
    tango = argCorge;
    entity = undefined;
    tango = tango.bind(entity)(golf);
    offset = 1;
    tango = oscar[offset];
    tango = report.bind(entity)(tango);
    tango = tango.View;
    var _closure1_slot3 = tango;
    foxtrot = 2;
    tango = oscar[foxtrot];
    tango = report.bind(entity)(tango);
    tango = tango.jsx;
    var _closure1_slot4 = tango;
    tango = oscar[foxtrot];
    tango = report.bind(entity)(tango);
    tango = tango.jsxs;
    var _closure1_slot5 = tango;
    tango = 3;
    tango = oscar[tango];
    options = report.bind(entity)(tango);
    golf = options.createStyles;
    tango = {};
    verify = {'display': 'flex', 'flexDirection': 'row', 'flexGrow': 1, 'flexShrink': 1};
    tango['container'] = verify;
    verify = {};
    yankee = 4;
    yankee = oscar[yankee];
    yankee = report.bind(entity)(yankee);
    backup = yankee.AVATAR_SIZE_MAP;
    yankee = 5;
    yankee = oscar[yankee];
    yankee = report.bind(entity)(yankee);
    yankee = yankee.AvatarSizes;
    yankee = yankee.NORMAL;
    yankee = backup[yankee];
    yankee = yankee / foxtrot;
    verify['borderRadius'] = yankee;
    yankee = 6;
    foxtrot = oscar[yankee];
    foxtrot = romeo.bind(entity)(foxtrot);
    foxtrot = foxtrot.colors;
    foxtrot = foxtrot.BACKGROUND_SECONDARY;
    verify['backgroundColor'] = foxtrot;
    tango['avatar'] = verify;
    verify = {};
    foxtrot = oscar[yankee];
    foxtrot = romeo.bind(entity)(foxtrot);
    foxtrot = foxtrot.spacing;
    foxtrot = foxtrot.PX_12;
    verify['paddingLeft'] = foxtrot;
    yankee = oscar[yankee];
    yankee = romeo.bind(entity)(yankee);
    yankee = yankee.spacing;
    yankee = yankee.PX_4;
    verify['paddingRight'] = yankee;
    verify['flexGrow'] = offset;
    verify['flexShrink'] = offset;
    tango['detailsContainer'] = verify;
    tango = golf.bind(options)(tango);
    var _closure1_slot6 = tango;
    tango = 10;
    tango = oscar[tango];
    oscar = report.bind(entity)(tango);
    report = oscar.fileFinishedImporting;
    tango = 'modules/parent_tools/native/FamilyCenterRequestorDetails.tsx';
    tango = report.bind(oscar)(tango);
    mike = function(argFoo) { // Original name: FamilyCenterRequestorDetails
        entity = argFoo;
        foxtrot = entity.otherUser;
        oscar = entity.status;
        entity = _closure1_slot6;
        tango = undefined;
        golf = entity.bind(tango)();
        verify = _closure1_slot0;
        romeo = _closure1_slot2;
        entity = 7;
        entity = romeo[entity];
        zulu = verify.bind(tango)(entity);
        mike = zulu.useLinkTimestampText;
        entity = foxtrot.id;
        yankee = mike.bind(zulu)(entity, oscar);
        zulu = _closure1_slot5;
        mike = _closure1_slot3;
        entity = {};
        oscar = golf.container;
        entity['style'] = oscar;
        offset = _closure1_slot4;
        options = _closure1_slot1;
        report = 5;
        report = romeo[report];
        oscar = options.bind(tango)(report);
        report = {};
        backup = golf.avatar;
        report['avatarStyle'] = backup;
        report['user'] = foxtrot;
        report['guildId'] = tango;
        backup = true;
        report['disablePlaceholder'] = backup;
        backup = foxtrot.avatarDecoration;
        report['avatarDecoration'] = backup;
        oscar = offset.bind(tango)(oscar, report);
        report = new Array(2);
        report[0] = oscar;
        oscar = {};
        golf = golf.detailsContainer;
        oscar['style'] = golf;
        golf = 8;
        golf = romeo[golf];
        options = options.bind(tango)(golf);
        golf = {};
        golf['user'] = foxtrot;
        options = offset.bind(tango)(options, golf);
        golf = new Array(2);
        golf[0] = options;
        options = 9;
        options = romeo[options];
        options = verify.bind(tango)(options);
        verify = options.Text;
        options = {'variant': 'text-xs/semibold', 'color': 'text-muted'};
        options['children'] = yankee;
        options = offset.bind(tango)(verify, options);
        golf[1] = options;
        oscar['children'] = golf;
        oscar = zulu.bind(tango)(mike, oscar);
        report[1] = oscar;
        entity['children'] = report;
        entity = zulu.bind(tango)(mike, entity);
        return entity;
    };
    zulu['default'] = mike;
    return entity;
})();