// app/modules/parent_tools/native/FamilyCenterRequestorDetails.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    report = argBar;
    romeon = argBaz;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    var _closure1_slot1 = romeon;
    var _closure1_slot2 = oscard;
    entity = global;
    option = entity.Object;
    golfie = option.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(option)(zuuluu, entity, tangon);
    entity = 0;
    golfie = oscard[entity];
    tangon = argCor;
    entity = undefined;
    tangon = tangon.bind(entity)(golfie);
    offset = 1;
    tangon = oscard[offset];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.View;
    var _closure1_slot3 = tangon;
    foxtra = 2;
    tangon = oscard[foxtra];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.jsx;
    var _closure1_slot4 = tangon;
    tangon = oscard[foxtra];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.jsxs;
    var _closure1_slot5 = tangon;
    tangon = 3;
    tangon = oscard[tangon];
    option = report.bind(entity)(tangon);
    golfie = option.createStyles;
    tangon = {};
    verify = {'display': 'flex', 'flexDirection': 'row', 'flexGrow': 1, 'flexShrink': 1};
    tangon['container'] = verify;
    verify = {};
    yankee = 4;
    yankee = oscard[yankee];
    yankee = report.bind(entity)(yankee);
    backup = yankee.AVATAR_SIZE_MAP;
    yankee = 5;
    yankee = oscard[yankee];
    yankee = report.bind(entity)(yankee);
    yankee = yankee.AvatarSizes;
    yankee = yankee.NORMAL;
    yankee = backup[yankee];
    yankee = yankee / foxtra;
    verify['borderRadius'] = yankee;
    yankee = 6;
    foxtra = oscard[yankee];
    foxtra = romeon.bind(entity)(foxtra);
    foxtra = foxtra.colors;
    foxtra = foxtra.BACKGROUND_SECONDARY;
    verify['backgroundColor'] = foxtra;
    tangon['avatar'] = verify;
    verify = {};
    foxtra = oscard[yankee];
    foxtra = romeon.bind(entity)(foxtra);
    foxtra = foxtra.spacing;
    foxtra = foxtra.PX_12;
    verify['paddingLeft'] = foxtra;
    yankee = oscard[yankee];
    yankee = romeon.bind(entity)(yankee);
    yankee = yankee.spacing;
    yankee = yankee.PX_4;
    verify['paddingRight'] = yankee;
    verify['flexGrow'] = offset;
    verify['flexShrink'] = offset;
    tangon['detailsContainer'] = verify;
    tangon = golfie.bind(option)(tangon);
    var _closure1_slot6 = tangon;
    tangon = 10;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/parent_tools/native/FamilyCenterRequestorDetails.tsx';
    tangon = report.bind(oscard)(tangon);
    michal = function(argFoo) { // Original name: FamilyCenterRequestorDetails
        entity = argFoo;
        foxtra = entity.otherUser;
        oscard = entity.status;
        entity = _closure1_slot6;
        tangon = undefined;
        golfie = entity.bind(tangon)();
        verify = _closure1_slot0;
        romeon = _closure1_slot2;
        entity = 7;
        entity = romeon[entity];
        zuuluu = verify.bind(tangon)(entity);
        michal = zuuluu.useLinkTimestampText;
        entity = foxtra.id;
        yankee = michal.bind(zuuluu)(entity, oscard);
        zuuluu = _closure1_slot5;
        michal = _closure1_slot3;
        entity = {};
        oscard = golfie.container;
        entity['style'] = oscard;
        offset = _closure1_slot4;
        option = _closure1_slot1;
        report = 5;
        report = romeon[report];
        oscard = option.bind(tangon)(report);
        report = {};
        backup = golfie.avatar;
        report['avatarStyle'] = backup;
        report['user'] = foxtra;
        report['guildId'] = tangon;
        backup = true;
        report['disablePlaceholder'] = backup;
        backup = foxtra.avatarDecoration;
        report['avatarDecoration'] = backup;
        oscard = offset.bind(tangon)(oscard, report);
        report = new Array(2);
        report[0] = oscard;
        oscard = {};
        golfie = golfie.detailsContainer;
        oscard['style'] = golfie;
        golfie = 8;
        golfie = romeon[golfie];
        option = option.bind(tangon)(golfie);
        golfie = {};
        golfie['user'] = foxtra;
        option = offset.bind(tangon)(option, golfie);
        golfie = new Array(2);
        golfie[0] = option;
        option = 9;
        option = romeon[option];
        option = verify.bind(tangon)(option);
        verify = option.Text;
        option = {'variant': 'text-xs/semibold', 'color': 'text-muted'};
        option['children'] = yankee;
        option = offset.bind(tangon)(verify, option);
        golfie[1] = option;
        oscard['children'] = golfie;
        oscard = zuuluu.bind(tangon)(michal, oscard);
        report[1] = oscard;
        entity['children'] = report;
        entity = zuuluu.bind(tangon)(michal, entity);
        return entity;
    };
    zuuluu['default'] = michal;
    return entity;
})();