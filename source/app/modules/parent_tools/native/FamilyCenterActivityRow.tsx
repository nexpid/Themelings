// app/modules/parent_tools/native/FamilyCenterActivityRow.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    report = argBar;
    romeon = argBaz;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    var _closure1_slot1 = romeon;
    var _closure1_slot2 = oscard;
    entity = function(argFoo) { // Original name: FamilyCenterActivityRowUser
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            michal = argFoo;
            michal = michal.action;
            var _closure2_slot0 = michal;
            zuuluu = _closure1_slot10;
            report = undefined;
            result = zuuluu.bind(report)();
            oscard = _closure1_slot6;
            tangon = oscard.get;
            zuuluu = michal.display_type;
            backup = tangon.bind(oscard)(zuuluu);
            tangon = _closure1_slot1;
            oscard = _closure1_slot2;
            zuuluu = 10;
            zuuluu = oscard[zuuluu];
            tangon = tangon.bind(report)(zuuluu);
            zuuluu = 'No text for action type';
            zuuluu = tangon.bind(report)(backup, zuuluu);
            tangon = _closure1_slot0;
            zuuluu = 11;
            zuuluu = oscard[zuuluu];
            oscard = tangon.bind(report)(zuuluu);
            tangon = oscard.useStateFromStores;
            golfie = _closure1_slot4;
            zuuluu = new Array(1);
            zuuluu[0] = golfie;
            entity = function() {
                zuuluu = _closure1_slot4;
                michal = zuuluu.getUser;
                entity = _closure2_slot0;
                entity = entity.entity_id;
                entity = michal.bind(zuuluu)(entity);
                return entity;
            };
            source = tangon.bind(oscard)(zuuluu, entity);
            entity = null;
            if(!(entity != source)) { _fun00002_ip = 543; continue _fun00001 }
 134:
            update = _closure1_slot1;
            output = _closure1_slot2;
            zuuluu = 12;
            zuuluu = output[zuuluu];
            tangon = update.bind(report)(zuuluu);
            zuuluu = tangon.extractTimestamp;
            michal = michal.event_id;
            echoed = zuuluu.bind(tangon)(michal);
            tangon = _closure1_slot9;
            zuuluu = _closure1_slot3;
            michal = {};
            oscard = result.container;
            michal['style'] = oscard;
            option = _closure1_slot8;
            golfie = _closure1_slot3;
            oscard = {};
            verify = result.avatarContainer;
            oscard['style'] = verify;
            yankee = _closure1_slot8;
            verify = 13;
            verify = output[verify];
            offset = update.bind(report)(verify);
            verify = {};
            foxtra = result.avatar;
            verify['avatarStyle'] = foxtra;
            verify['user'] = source;
            verify['guildId'] = report;
            foxtra = true;
            verify['disablePlaceholder'] = foxtra;
            foxtra = source.avatarDecoration;
            verify['avatarDecoration'] = foxtra;
            verify = yankee.bind(report)(offset, verify);
            oscard['children'] = verify;
            golfie = option.bind(report)(golfie, oscard);
            oscard = new Array(2);
            oscard[0] = golfie;
            verify = _closure1_slot9;
            option = _closure1_slot3;
            golfie = {};
            offset = result.textContainer;
            golfie['style'] = offset;
            kiloes = _closure1_slot8;
            sizing = _closure1_slot0;
            yankee = 14;
            offset = output[yankee];
            offset = sizing.bind(report)(offset);
            foxtra = offset.Text;
            offset = {'style': null, 'variant': 'text-md/semibold', 'color': 'interactive-active', 'ellipsizeMode': 'tail', 'lineClamp': 1};
            result = result.text;
            offset['style'] = result;
            result = 15;
            result = output[result];
            update = update.bind(report)(result);
            result = update.getName;
            result = result.bind(update)(source);
            offset['children'] = result;
            foxtra = kiloes.bind(report)(foxtra, offset);
            offset = new Array(2);
            offset[0] = foxtra;
            foxtra = _closure1_slot8;
            yankee = output[yankee];
            yankee = sizing.bind(report)(yankee);
            romeon = yankee.Text;
            yankee = {'variant': 'text-xs/medium', 'color': 'channels-default'};
            kiloes = 16;
            kiloes = output[kiloes];
            output = sizing.bind(report)(kiloes);
            sizing = output.formatUserActivityTimestamp;
            kiloes = global;
            kiloes = kiloes.Date;
            result = kiloes.prototype;
            result = Object.create(result, {constructor: {value: kiloes}});
            sequen = result;
            vacuum = echoed;
            kiloes = new sequen[kiloes](vacuum, ctrled);
            result = kiloes instanceof Object ? kiloes : result;
            kiloes = result.getTime;
            kiloes = kiloes.bind(result)();
            backup = backup.timestampFormatter;
            backup = sizing.bind(output)(kiloes, backup);
            yankee['children'] = backup;
            yankee = foxtra.bind(report)(romeon, yankee);
            offset[1] = yankee;
            golfie['children'] = offset;
            golfie = verify.bind(report)(option, golfie);
            oscard[1] = golfie;
            michal['children'] = oscard;
            michal = tangon.bind(report)(zuuluu, michal);
            return michal;
 543:
            return entity;
        }
    };
    var _closure1_slot12 = entity;
    entity = function(argFoo) { // Original name: FamilyCenterActivityRowGuild
        _fun00003: for(var _fun00004_ip = 0; ; ) switch(_fun00004_ip) {
 0:
            entity = argFoo;
            entity = entity.action;
            var _closure2_slot0 = entity;
            zuuluu = _closure1_slot11;
            tangon = undefined;
            sequen = zuuluu.bind(tangon)();
            oscard = _closure1_slot0;
            report = _closure1_slot2;
            zuuluu = 11;
            zuuluu = report[zuuluu];
            golfie = oscard.bind(tangon)(zuuluu);
            oscard = golfie.useStateFromStores;
            option = _closure1_slot5;
            zuuluu = new Array(1);
            zuuluu[0] = option;
            michal = function() {
                zuuluu = _closure1_slot5;
                michal = zuuluu.getGuild;
                entity = _closure2_slot0;
                entity = entity.entity_id;
                entity = michal.bind(zuuluu)(entity);
                return entity;
            };
            result = oscard.bind(golfie)(zuuluu, michal);
            zuuluu = _closure1_slot6;
            michal = zuuluu.get;
            entity = entity.display_type;
            zuuluu = michal.bind(zuuluu)(entity);
            michal = _closure1_slot1;
            entity = 10;
            entity = report[entity];
            michal = michal.bind(tangon)(entity);
            entity = 'No text for action type';
            entity = michal.bind(tangon)(zuuluu, entity);
            if(!(tangon !== result)) { _fun00004_ip = 705; continue _fun00003 }
 132:
            michal = result.hasFeature;
            entity = _closure1_slot7;
            entity = entity.VERIFIED;
            echoed = michal.bind(result)(entity);
            if(echoed) { _fun00004_ip = 177; continue _fun00003 }
 156:
            michal = result.hasFeature;
            entity = _closure1_slot7;
            entity = entity.PARTNERED;
            echoed = michal.bind(result)(entity);
 177:
            entity = result.toString;
            vacuum = entity.bind(result)();
            zuuluu = _closure1_slot9;
            michal = _closure1_slot3;
            entity = {};
            report = sequen.container;
            entity['style'] = report;
            golfie = _closure1_slot8;
            oscard = _closure1_slot1;
            offset = _closure1_slot2;
            option = 17;
            report = offset[option];
            oscard = oscard.bind(tangon)(report);
            report = {};
            verify = sequen.avatar;
            report['style'] = verify;
            verify = sequen.avatarText;
            report['textStyle'] = verify;
            report['guild'] = result;
            verify = _closure1_slot0;
            option = offset[option];
            option = verify.bind(tangon)(option);
            option = option.GuildIconSizes;
            option = option.NORMAL;
            report['size'] = option;
            ctrled = true;
            report['animate'] = ctrled;
            oscard = golfie.bind(tangon)(oscard, report);
            report = new Array(2);
            report[0] = oscard;
            option = _closure1_slot9;
            golfie = _closure1_slot3;
            oscard = {};
            verify = sequen.text;
            oscard['style'] = verify;
            backup = _closure1_slot8;
            foxtra = _closure1_slot3;
            verify = {};
            offset = sequen.headerContainer;
            verify['style'] = offset;
            output = _closure1_slot9;
            sizing = _closure1_slot3;
            kiloes = {};
            offset = sequen.headerAndIconContainer;
            kiloes['style'] = offset;
            yankee = null;
            if(!echoed) { _fun00004_ip = 446; continue _fun00003 }
 370:
            source = _closure1_slot8;
            record = _closure1_slot1;
            cntext = _closure1_slot2;
            config = 18;
            echoed = cntext[config];
            update = record.bind(tangon)(echoed);
            echoed = {};
            papara = sequen.badge;
            echoed['style'] = papara;
            echoed['guild'] = result;
            config = cntext[config];
            config = record.bind(tangon)(config);
            config = config.Sizes;
            config = config.SMALL;
            echoed['size'] = config;
            echoed['disableColor'] = ctrled;
            yankee = source.bind(tangon)(update, echoed);
 446:
            echoed = new Array(2);
            echoed[0] = yankee;
            ctrled = _closure1_slot8;
            source = _closure1_slot0;
            update = _closure1_slot2;
            yankee = 14;
            update = update[yankee];
            update = source.bind(tangon)(update);
            source = update.Text;
            update = {'style': null, 'variant': 'text-md/semibold', 'color': 'interactive-active', 'ellipsizeMode': 'tail', 'lineClamp': 1};
            sequen = sequen.header;
            update['style'] = sequen;
            update['children'] = vacuum;
            update = ctrled.bind(tangon)(source, update);
            echoed[1] = update;
            kiloes['children'] = echoed;
            kiloes = output.bind(tangon)(sizing, kiloes);
            verify['children'] = kiloes;
            foxtra = backup.bind(tangon)(foxtra, verify);
            verify = new Array(2);
            verify[0] = foxtra;
            foxtra = result.approximateMemberCount;
            offset = null;
            if(!(tangon !== foxtra)) { _fun00004_ip = 675; continue _fun00003 }
 562:
            foxtra = _closure1_slot8;
            kiloes = _closure1_slot0;
            echoed = _closure1_slot2;
            yankee = echoed[yankee];
            yankee = kiloes.bind(tangon)(yankee);
            romeon = yankee.Text;
            yankee = {'variant': 'text-xs/medium', 'color': 'channels-default'};
            backup = 19;
            sizing = echoed[backup];
            sizing = kiloes.bind(tangon)(sizing);
            output = sizing.intl;
            sizing = output.format;
            backup = echoed[backup];
            backup = kiloes.bind(tangon)(backup);
            backup = backup.t;
            kiloes = backup.5JmNgo;
            backup = {};
            result = result.approximateMemberCount;
            backup['members'] = result;
            backup = sizing.bind(output)(kiloes, backup);
            yankee['children'] = backup;
            offset = foxtra.bind(tangon)(romeon, yankee);
 675:
            verify[1] = offset;
            oscard['children'] = verify;
            oscard = option.bind(tangon)(golfie, oscard);
            report[1] = oscard;
            entity['children'] = report;
            entity = zuuluu.bind(tangon)(michal, entity);
            return entity;
 705:
            entity = null;
            return entity;
        }
    };
    var _closure1_slot13 = entity;
    entity = global;
    option = entity.Object;
    golfie = option.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(option)(zuuluu, entity, tangon);
    entity = 0;
    golfie = oscard[entity];
    tangon = argCor;
    entity = undefined;
    tangon = tangon.bind(entity)(golfie);
    tangon = 1;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.View;
    var _closure1_slot3 = tangon;
    kiloes = 2;
    tangon = oscard[kiloes];
    tangon = romeon.bind(entity)(tangon);
    var _closure1_slot4 = tangon;
    tangon = 3;
    tangon = oscard[tangon];
    tangon = romeon.bind(entity)(tangon);
    var _closure1_slot5 = tangon;
    offset = 4;
    tangon = oscard[offset];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.ACTION_TO_TEXT;
    var _closure1_slot6 = tangon;
    tangon = 5;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.GuildFeatures;
    var _closure1_slot7 = tangon;
    tangon = 6;
    golfie = oscard[tangon];
    golfie = report.bind(entity)(golfie);
    golfie = golfie.jsx;
    var _closure1_slot8 = golfie;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.jsxs;
    var _closure1_slot9 = tangon;
    tangon = 7;
    golfie = oscard[tangon];
    verify = report.bind(entity)(golfie);
    option = verify.createStyles;
    golfie = {};
    foxtra = {'display': 'flex', 'flexDirection': 'row', 'borderBottomColor': null, 'borderBottomWidth': 1, 'paddingVertical': 12};
    yankee = 8;
    backup = oscard[yankee];
    backup = romeon.bind(entity)(backup);
    backup = backup.colors;
    backup = backup.BACKGROUND_ACCENT;
    foxtra['borderBottomColor'] = backup;
    golfie['container'] = foxtra;
    foxtra = {};
    backup = 9;
    sizing = oscard[backup];
    sizing = report.bind(entity)(sizing);
    sizing = sizing.AVATAR_SIZE_MAP;
    backup = oscard[backup];
    backup = report.bind(entity)(backup);
    backup = backup.AvatarSizes;
    backup = backup.NORMAL;
    backup = sizing[backup];
    backup = backup / kiloes;
    foxtra['borderRadius'] = backup;
    backup = oscard[yankee];
    backup = romeon.bind(entity)(backup);
    backup = backup.colors;
    backup = backup.BACKGROUND_SECONDARY;
    foxtra['backgroundColor'] = backup;
    golfie['avatar'] = foxtra;
    foxtra = {'marginRight': 12, 'alignItems': 'flex-start'};
    golfie['avatarContainer'] = foxtra;
    foxtra = {'display': 'flex', 'flexDirection': 'column', 'flexShrink': 1};
    golfie['textContainer'] = foxtra;
    foxtra = {'display': 'flex', 'flexDirection': 'row', 'flexShrink': 1};
    golfie['text'] = foxtra;
    golfie = option.bind(verify)(golfie);
    var _closure1_slot10 = golfie;
    tangon = oscard[tangon];
    option = report.bind(entity)(tangon);
    golfie = option.createStyles;
    tangon = {};
    verify = {'display': 'flex', 'alignItems': 'center', 'flexDirection': 'row', 'borderBottomColor': null, 'borderBottomWidth': 1, 'paddingVertical': 12};
    foxtra = oscard[yankee];
    foxtra = romeon.bind(entity)(foxtra);
    foxtra = foxtra.colors;
    foxtra = foxtra.BACKGROUND_ACCENT;
    verify['borderBottomColor'] = foxtra;
    tangon['container'] = verify;
    verify = {'borderRadius': null, 'borderColor': null, 'height': 40, 'width': 40, 'margin': 0, 'backgroundColor': null, 'marginRight': 12};
    foxtra = oscard[yankee];
    foxtra = romeon.bind(entity)(foxtra);
    foxtra = foxtra.radii;
    foxtra = foxtra.lg;
    verify['borderRadius'] = foxtra;
    foxtra = oscard[yankee];
    foxtra = romeon.bind(entity)(foxtra);
    foxtra = foxtra.colors;
    foxtra = foxtra.BACKGROUND_PRIMARY;
    verify['borderColor'] = foxtra;
    foxtra = oscard[yankee];
    foxtra = romeon.bind(entity)(foxtra);
    foxtra = foxtra.colors;
    foxtra = foxtra.BACKGROUND_SECONDARY;
    verify['backgroundColor'] = foxtra;
    tangon['avatar'] = verify;
    verify = {};
    yankee = oscard[yankee];
    yankee = romeon.bind(entity)(yankee);
    yankee = yankee.colors;
    yankee = yankee.TEXT_NORMAL;
    verify['color'] = yankee;
    tangon['avatarText'] = verify;
    verify = {'display': 'flex', 'flexDirection': 'column', 'flexShrink': 1};
    tangon['text'] = verify;
    verify = {'display': 'flex', 'flexDirection': 'row'};
    tangon['headerContainer'] = verify;
    verify = {};
    verify['marginRight'] = offset;
    tangon['badge'] = verify;
    verify = {};
    offset = 16;
    verify['paddingRight'] = offset;
    tangon['header'] = verify;
    verify = {'display': 'flex', 'flexDirection': 'row', 'alignItems': 'center'};
    tangon['headerAndIconContainer'] = verify;
    tangon = golfie.bind(option)(tangon);
    var _closure1_slot11 = tangon;
    tangon = 20;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/parent_tools/native/FamilyCenterActivityRow.tsx';
    tangon = report.bind(oscard)(tangon);
    michal = function(argFoo) { // Original name: FamilyCenterActivityRow
        _fun00005: for(var _fun00006_ip = 0; ; ) switch(_fun00006_ip) {
 0:
            entity = argFoo;
            offset = entity.action;
            michal = _closure1_slot0;
            entity = _closure1_slot2;
            verify = 16;
            entity = entity[verify];
            report = undefined;
            michal = michal.bind(report)(entity);
            entity = michal.isUserAction;
            entity = entity.bind(michal)(offset);
            if(entity) { _fun00006_ip = 80; continue _fun00005 }
 47:
            michal = _closure1_slot0;
            entity = _closure1_slot2;
            entity = entity[verify];
            michal = michal.bind(report)(entity);
            entity = michal.isGuildAction;
            michal = entity.bind(michal)(offset);
            entity = null;
            if(!michal) { _fun00006_ip = 169; continue _fun00005 }
 80:
            tangon = _closure1_slot8;
            zuuluu = _closure1_slot3;
            michal = {};
            option = _closure1_slot0;
            oscard = _closure1_slot2;
            oscard = oscard[verify];
            option = option.bind(report)(oscard);
            oscard = option.isUserAction;
            oscard = oscard.bind(option)(offset);
            verify = _closure1_slot8;
            if(oscard) { _fun00006_ip = 143; continue _fun00005 }
 125:
            option = _closure1_slot13;
            oscard = {};
            oscard['action'] = offset;
            oscard = verify.bind(report)(option, oscard);
            _fun00006_ip = 159; continue _fun00005;
 143:
            option = _closure1_slot12;
            golfie = {};
            golfie['action'] = offset;
            oscard = verify.bind(report)(option, golfie);
 159:
            michal['children'] = oscard;
            entity = tangon.bind(report)(zuuluu, michal);
 169:
            return entity;
        }
    };
    zuuluu['default'] = michal;
    return entity;
})();