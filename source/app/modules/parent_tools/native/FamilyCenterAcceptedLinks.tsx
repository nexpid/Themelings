// app/modules/parent_tools/native/FamilyCenterAcceptedLinks.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    report = argBar;
    romeon = argBaz;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    var _closure1_slot1 = romeon;
    var _closure1_slot2 = oscard;
    entity = function(argFoo) { // Original name: FamilyCenterAcceptedLinkRow
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            entity = argFoo;
            result = entity.otherUser;
            var _closure2_slot0 = result;
            entity = _closure1_slot10;
            report = undefined;
            offset = entity.bind(report)();
            sizing = null;
            entity = null;
            if(!(report !== result)) { _fun00002_ip = 304; continue _fun00001 }
 39:
            tangon = _closure1_slot7;
            foxtra = _closure1_slot1;
            output = _closure1_slot2;
            michal = 13;
            michal = output[michal];
            zuuluu = foxtra.bind(report)(michal);
            michal = {};
            michal['otherUser'] = result;
            option = _closure1_slot7;
            backup = _closure1_slot0;
            oscard = 14;
            oscard = output[oscard];
            oscard = backup.bind(report)(oscard);
            golfie = oscard.PressableOpacity;
            oscard = {};
            romeon = 'button';
            oscard['accessibilityRole'] = romeon;
            romeon = 9;
            romeon = output[romeon];
            romeon = backup.bind(report)(romeon);
            kiloes = romeon.intl;
            backup = kiloes.formatToPlainString;
            romeon = 10;
            romeon = output[romeon];
            romeon = foxtra.bind(report)(romeon);
            foxtra = romeon.T7DUoa;
            romeon = {};
            output = sizing == result;
            sizing = undefined;
            if(output) { _fun00002_ip = 168; continue _fun00001 }
 159:
            output = result.toString;
            sizing = output.bind(result)();
 168:
            romeon['name'] = sizing;
            romeon = backup.bind(kiloes)(foxtra, romeon);
            oscard['accessibilityLabel'] = romeon;
            yankee = function() { // Original name: onPress
                report = _closure1_slot1;
                michal = _closure1_slot2;
                entity = 15;
                tangon = michal[entity];
                entity = undefined;
                report = report.bind(entity)(tangon);
                tangon = report.pushLazy;
                oscard = _closure1_slot0;
                zuuluu = 17;
                zuuluu = michal[zuuluu];
                oscard = oscard.bind(entity)(zuuluu);
                zuuluu = 16;
                zuuluu = michal[zuuluu];
                michal = michal.paths;
                zuuluu = oscard.bind(entity)(zuuluu, michal);
                michal = {};
                oscard = _closure2_slot0;
                michal['otherUser'] = oscard;
                michal = tangon.bind(report)(zuuluu, michal);
                return entity;
            };
            oscard['onPress'] = yankee;
            offset = offset.actionButton;
            oscard['style'] = offset;
            yankee = _closure1_slot7;
            foxtra = _closure1_slot1;
            backup = _closure1_slot2;
            romeon = 18;
            verify = backup[romeon];
            offset = foxtra.bind(report)(verify);
            verify = {};
            romeon = backup[romeon];
            romeon = foxtra.bind(report)(romeon);
            romeon = romeon.Sizes;
            romeon = romeon.SMALL;
            verify['size'] = romeon;
            romeon = true;
            verify['disableColor'] = romeon;
            romeon = 19;
            romeon = backup[romeon];
            romeon = foxtra.bind(report)(romeon);
            verify['source'] = romeon;
            verify = yankee.bind(report)(offset, verify);
            oscard['children'] = verify;
            oscard = option.bind(report)(golfie, oscard);
            michal['actions'] = oscard;
            entity = tangon.bind(report)(zuuluu, michal);
 304:
            return entity;
        }
    };
    var _closure1_slot11 = entity;
    entity = global;
    option = entity.Object;
    golfie = option.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(option)(zuuluu, entity, tangon);
    entity = 0;
    golfie = oscard[entity];
    tangon = argCor;
    entity = undefined;
    tangon = tangon.bind(entity)(golfie);
    tangon = 1;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.View;
    var _closure1_slot3 = tangon;
    tangon = 2;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    golfie = tangon.MAX_PARENT_TO_TEEN_ACTIVE_CONNECTIONS;
    var _closure1_slot4 = golfie;
    golfie = tangon.MAX_TEEN_TO_PARENT_ACTIVE_CONNECTIONS;
    var _closure1_slot5 = golfie;
    tangon = tangon.UserLinkStatus;
    var _closure1_slot6 = tangon;
    tangon = 3;
    golfie = oscard[tangon];
    golfie = report.bind(entity)(golfie);
    golfie = golfie.jsx;
    var _closure1_slot7 = golfie;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.jsxs;
    var _closure1_slot8 = tangon;
    golfie = 4;
    tangon = oscard[golfie];
    offset = report.bind(entity)(tangon);
    verify = offset.createStyles;
    option = {};
    tangon = {};
    yankee = 24;
    tangon['marginTop'] = yankee;
    option['container'] = tangon;
    tangon = {'display': 'flex', 'justifyContent': 'center'};
    yankee = 5;
    foxtra = oscard[yankee];
    foxtra = romeon.bind(entity)(foxtra);
    foxtra = foxtra.colors;
    foxtra = foxtra.BACKGROUND_PRIMARY;
    tangon['backgroundColor'] = foxtra;
    foxtra = oscard[yankee];
    foxtra = romeon.bind(entity)(foxtra);
    foxtra = foxtra.radii;
    foxtra = foxtra.md;
    tangon['borderRadius'] = foxtra;
    option['content'] = tangon;
    tangon = 20;
    foxtra = {'padding': 20, 'alignSelf': 'center'};
    option['empty'] = foxtra;
    foxtra = {};
    backup = 10;
    foxtra['marginBottom'] = backup;
    option['header'] = foxtra;
    option = verify.bind(offset)(option);
    var _closure1_slot9 = option;
    golfie = oscard[golfie];
    verify = report.bind(entity)(golfie);
    option = verify.createStyles;
    golfie = {};
    offset = {'backgroundColor': null, 'tintColor': null, 'borderRadius': null, 'alignItems': 'center', 'justifyContent': 'center', 'height': 32, 'width': 32};
    foxtra = oscard[yankee];
    foxtra = romeon.bind(entity)(foxtra);
    foxtra = foxtra.colors;
    foxtra = foxtra.BACKGROUND_SECONDARY;
    offset['backgroundColor'] = foxtra;
    foxtra = oscard[yankee];
    foxtra = romeon.bind(entity)(foxtra);
    foxtra = foxtra.colors;
    foxtra = foxtra.INTERACTIVE_NORMAL;
    offset['tintColor'] = foxtra;
    yankee = oscard[yankee];
    yankee = romeon.bind(entity)(yankee);
    yankee = yankee.radii;
    yankee = yankee.round;
    offset['borderRadius'] = yankee;
    golfie['actionButton'] = offset;
    golfie = option.bind(verify)(golfie);
    var _closure1_slot10 = golfie;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/parent_tools/native/FamilyCenterAcceptedLinks.tsx';
    tangon = report.bind(oscard)(tangon);
    michal = function() { // Original name: FamilyCenterAcceptedLinks
        _fun00003: for(var _fun00004_ip = 0; ; ) switch(_fun00004_ip) {
 0:
            entity = _closure1_slot9;
            tangon = undefined;
            romeon = entity.bind(tangon)();
            michal = _closure1_slot1;
            report = _closure1_slot2;
            entity = 6;
            entity = report[entity];
            entity = michal.bind(tangon)(entity);
            entity = entity.bind(tangon)();
            zuuluu = _closure1_slot0;
            michal = 7;
            michal = report[michal];
            report = zuuluu.bind(tangon)(michal);
            zuuluu = report.useUserForLinkStatus;
            michal = _closure1_slot6;
            michal = michal.ACTIVE;
            offset = zuuluu.bind(report)(michal);
            if(entity) { _fun00004_ip = 83; continue _fun00003 }
 77:
            entity = _closure1_slot5;
            _fun00004_ip = 87; continue _fun00003;
 83:
            entity = _closure1_slot4;
 87:
            yankee = {};
            michal = offset.length;
            yankee['count'] = michal;
            yankee['max'] = entity;
            oscard = _closure1_slot0;
            verify = _closure1_slot2;
            entity = 8;
            entity = verify[entity];
            report = oscard.bind(tangon)(entity);
            zuuluu = report.useAgeSpecificText;
            sizing = 9;
            entity = verify[sizing];
            entity = oscard.bind(tangon)(entity);
            golfie = entity.intl;
            michal = golfie.formatToPlainString;
            foxtra = _closure1_slot1;
            echoed = 10;
            entity = verify[echoed];
            entity = foxtra.bind(tangon)(entity);
            entity = entity.+tnO39;
            michal = michal.bind(golfie)(entity, yankee);
            entity = verify[sizing];
            entity = oscard.bind(tangon)(entity);
            option = entity.intl;
            golfie = option.formatToPlainString;
            entity = verify[echoed];
            entity = foxtra.bind(tangon)(entity);
            entity = entity.pu6/U1;
            entity = golfie.bind(option)(entity, yankee);
            option = zuuluu.bind(report)(michal, entity);
            zuuluu = _closure1_slot8;
            michal = _closure1_slot3;
            entity = {};
            report = romeon.container;
            entity['style'] = report;
            golfie = _closure1_slot7;
            report = 11;
            report = verify[report];
            report = oscard.bind(tangon)(report);
            oscard = report.Text;
            report = {'style': null, 'variant': 'eyebrow', 'color': 'header-secondary'};
            verify = romeon.header;
            report['style'] = verify;
            report['children'] = option;
            oscard = golfie.bind(tangon)(oscard, report);
            report = new Array(2);
            report[0] = oscard;
            golfie = _closure1_slot7;
            oscard = {};
            option = romeon.content;
            oscard['style'] = option;
            verify = offset.length;
            option = 0;
            if(!(option !== verify)) { _fun00004_ip = 358; continue _fun00003 }
 337:
            verify = offset.map;
            option = function(argFoo) {
                entity = argFoo;
                report = _closure1_slot7;
                tangon = _closure1_slot11;
                zuuluu = {};
                zuuluu['otherUser'] = entity;
                oscard = entity.id;
                entity = global;
                entity = entity.HermesInternal;
                michal = entity.concat;
                entity = 'accepted-';
                michal = michal.bind(entity)(oscard);
                entity = undefined;
                entity = report.bind(entity)(tangon, zuuluu, michal);
                return entity;
            };
            option = verify.bind(offset)(option);
            _fun00004_ip = 469; continue _fun00003;
 358:
            yankee = _closure1_slot7;
            offset = _closure1_slot3;
            verify = {};
            romeon = romeon.empty;
            verify['style'] = romeon;
            backup = _closure1_slot7;
            result = _closure1_slot1;
            kiloes = _closure1_slot2;
            romeon = 12;
            romeon = kiloes[romeon];
            foxtra = result.bind(tangon)(romeon);
            romeon = {};
            output = _closure1_slot0;
            sizing = kiloes[sizing];
            sizing = output.bind(tangon)(sizing);
            output = sizing.intl;
            sizing = output.string;
            kiloes = kiloes[echoed];
            kiloes = result.bind(tangon)(kiloes);
            kiloes = kiloes.C4ScLC;
            kiloes = sizing.bind(output)(kiloes);
            romeon['text'] = kiloes;
            romeon = backup.bind(tangon)(foxtra, romeon);
            verify['children'] = romeon;
            option = yankee.bind(tangon)(offset, verify);
 469:
            oscard['children'] = option;
            oscard = golfie.bind(tangon)(michal, oscard);
            report[1] = oscard;
            entity['children'] = report;
            entity = zuuluu.bind(tangon)(michal, entity);
            return entity;
        }
    };
    zuuluu['default'] = michal;
    return entity;
})();