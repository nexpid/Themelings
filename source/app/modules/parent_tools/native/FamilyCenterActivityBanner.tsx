// app/modules/parent_tools/native/FamilyCenterActivityBanner.tsx
export default (function(_, argBar, argBaz, argCor, __, argFre, argPlu) {
    report = argBar;
    foxtra = argBaz;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    var _closure1_slot1 = foxtra;
    var _closure1_slot2 = oscard;
    entity = function() { // Original name: FamilyCenterActivityBannerButton
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            entity = _closure1_slot8;
            report = undefined;
            option = entity.bind(report)();
            zuuluu = _closure1_slot0;
            tangon = _closure1_slot2;
            entity = 5;
            michal = tangon[entity];
            verify = zuuluu.bind(report)(michal);
            golfie = verify.useUserForLinkStatus;
            michal = _closure1_slot5;
            michal = michal.ACTIVE;
            michal = golfie.bind(verify)(michal);
            verify = _closure1_slot1;
            golfie = 6;
            golfie = tangon[golfie];
            golfie = verify.bind(report)(golfie);
            golfie = golfie.bind(report)();
            entity = tangon[entity];
            zuuluu = zuuluu.bind(report)(entity);
            entity = zuuluu.useHasMaxConnections;
            tangon = entity.bind(zuuluu)();
            entity = null;
            if(tangon) { _fun00002_ip = 195; continue _fun00001 }
 98:
            if(!golfie) { _fun00002_ip = 117; continue _fun00001 }
 101:
            tangon = michal.length;
            michal = 0;
            michal = tangon > michal;
            entity = null;
            if(michal) { _fun00002_ip = 195; continue _fun00001 }
 117:
            tangon = _closure1_slot6;
            zuuluu = _closure1_slot3;
            michal = {};
            option = option.container;
            michal['style'] = option;
            option = _closure1_slot6;
            verify = _closure1_slot0;
            offset = _closure1_slot2;
            oscard = 7;
            oscard = offset[oscard];
            oscard = verify.bind(report)(oscard);
            if(golfie) { _fun00002_ip = 171; continue _fun00001 }
 163:
            golfie = oscard.FamilyCenterTeenQRCodeButton;
            _fun00002_ip = 177; continue _fun00001;
 171:
            golfie = oscard.FamilyCenterParentQRCodeButton;
 177:
            oscard = {};
            oscard = option.bind(report)(golfie, oscard);
            michal['children'] = oscard;
            entity = tangon.bind(report)(zuuluu, michal);
 195:
            return entity;
        }
    };
    var _closure1_slot10 = entity;
    entity = global;
    option = entity.Object;
    golfie = option.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(option)(zuuluu, entity, tangon);
    entity = 0;
    golfie = oscard[entity];
    tangon = argCor;
    entity = undefined;
    tangon = tangon.bind(entity)(golfie);
    tangon = 1;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    golfie = tangon.View;
    var _closure1_slot3 = golfie;
    tangon = tangon.Image;
    var _closure1_slot4 = tangon;
    tangon = 2;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.UserLinkStatus;
    var _closure1_slot5 = tangon;
    tangon = 3;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    golfie = tangon.jsx;
    var _closure1_slot6 = golfie;
    tangon = tangon.jsxs;
    var _closure1_slot7 = tangon;
    golfie = 4;
    tangon = oscard[golfie];
    offset = report.bind(entity)(tangon);
    verify = offset.createStyles;
    option = {};
    tangon = {'display': 'flex', 'flexDirection': 'row'};
    option['container'] = tangon;
    yankee = {};
    tangon = 16;
    yankee['marginTop'] = tangon;
    option['parent'] = yankee;
    option = verify.bind(offset)(option);
    var _closure1_slot8 = option;
    golfie = oscard[golfie];
    verify = report.bind(entity)(golfie);
    option = verify.createStyles;
    golfie = {};
    offset = {'backgroundColor': null, 'marginTop': 16, 'padding': 24, 'alignItems': 'center', 'borderRadius': null, 'elevation': 2};
    romeon = 8;
    yankee = oscard[romeon];
    yankee = foxtra.bind(entity)(yankee);
    yankee = yankee.colors;
    yankee = yankee.BACKGROUND_PRIMARY;
    offset['backgroundColor'] = yankee;
    yankee = 'center';
    backup = oscard[romeon];
    backup = foxtra.bind(entity)(backup);
    backup = backup.radii;
    backup = backup.md;
    offset['borderRadius'] = backup;
    golfie['container'] = offset;
    offset = {'maxWidth': 243, 'maxHeight': 119};
    backup = oscard[romeon];
    backup = foxtra.bind(entity)(backup);
    backup = backup.spacing;
    backup = backup.PX_8;
    offset['marginBottom'] = backup;
    golfie['art'] = offset;
    offset = {};
    romeon = oscard[romeon];
    romeon = foxtra.bind(entity)(romeon);
    romeon = romeon.spacing;
    romeon = romeon.PX_8;
    offset['marginBottom'] = romeon;
    offset['textAlign'] = yankee;
    golfie['header'] = offset;
    offset = {};
    offset['textAlign'] = yankee;
    golfie['description'] = offset;
    golfie = option.bind(verify)(golfie);
    var _closure1_slot9 = golfie;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/parent_tools/native/FamilyCenterActivityBanner.tsx';
    tangon = report.bind(oscard)(tangon);
    michal = function() { // Original name: FamilyCenterActivityBanner
        _fun00003: for(var _fun00004_ip = 0; ; ) switch(_fun00004_ip) {
 0:
            foxtra = _closure1_slot1;
            oscard = _closure1_slot2;
            entity = 6;
            entity = oscard[entity];
            tangon = undefined;
            entity = foxtra.bind(tangon)(entity);
            offset = entity.bind(tangon)();
            entity = _closure1_slot9;
            romeon = entity.bind(tangon)();
            yankee = _closure1_slot0;
            entity = 5;
            entity = oscard[entity];
            michal = yankee.bind(tangon)(entity);
            entity = michal.useHasMaxConnections;
            option = entity.bind(michal)();
            michal = 9;
            entity = oscard[michal];
            kiloes = yankee.bind(tangon)(entity);
            backup = kiloes.useAgeSpecificText;
            verify = 10;
            entity = oscard[verify];
            entity = yankee.bind(tangon)(entity);
            sizing = entity.intl;
            report = sizing.string;
            entity = 11;
            zuuluu = oscard[entity];
            zuuluu = foxtra.bind(tangon)(zuuluu);
            zuuluu = zuuluu.T7GyW1;
            report = report.bind(sizing)(zuuluu);
            zuuluu = oscard[verify];
            zuuluu = yankee.bind(tangon)(zuuluu);
            output = zuuluu.intl;
            sizing = output.string;
            zuuluu = oscard[entity];
            zuuluu = foxtra.bind(tangon)(zuuluu);
            zuuluu = zuuluu.goKE2d;
            zuuluu = sizing.bind(output)(zuuluu);
            kiloes = backup.bind(kiloes)(report, zuuluu);
            michal = oscard[michal];
            report = yankee.bind(tangon)(michal);
            zuuluu = report.useAgeSpecificText;
            michal = oscard[verify];
            michal = yankee.bind(tangon)(michal);
            output = michal.intl;
            sizing = output.format;
            michal = oscard[entity];
            michal = foxtra.bind(tangon)(michal);
            backup = michal.MXjDSk;
            michal = {};
            result = 'https://support.discord.com/hc/articles/14155060633623';
            michal['articleLink'] = result;
            michal = sizing.bind(output)(backup, michal);
            verify = oscard[verify];
            verify = yankee.bind(tangon)(verify);
            yankee = verify.intl;
            verify = yankee.format;
            entity = oscard[entity];
            entity = foxtra.bind(tangon)(entity);
            oscard = entity.EMCf6u;
            entity = {};
            backup = 'https://support.discord.com/hc/articles/14155043715735';
            entity['articleLink'] = backup;
            entity = verify.bind(yankee)(oscard, entity);
            yankee = zuuluu.bind(report)(michal, entity);
            zuuluu = _closure1_slot7;
            michal = _closure1_slot3;
            entity = {};
            report = romeon.container;
            entity['style'] = report;
            verify = _closure1_slot6;
            oscard = _closure1_slot4;
            report = {};
            sizing = _closure1_slot2;
            if(offset) { _fun00004_ip = 351; continue _fun00003 }
 342:
            offset = 13;
            offset = sizing[offset];
            _fun00004_ip = 358; continue _fun00003;
 351:
            backup = 12;
            offset = sizing[backup];
 358:
            offset = foxtra.bind(tangon)(offset);
            report['source'] = offset;
            offset = romeon.art;
            report['style'] = offset;
            oscard = verify.bind(tangon)(oscard, report);
            report = new Array(4);
            report[0] = oscard;
            backup = _closure1_slot6;
            verify = _closure1_slot0;
            foxtra = _closure1_slot2;
            oscard = 14;
            oscard = foxtra[oscard];
            oscard = verify.bind(tangon)(oscard);
            offset = oscard.Text;
            oscard = {};
            sizing = romeon.header;
            oscard['style'] = sizing;
            sizing = 'heading-lg/semibold';
            oscard['variant'] = sizing;
            oscard['children'] = kiloes;
            oscard = backup.bind(tangon)(offset, oscard);
            report[1] = oscard;
            offset = _closure1_slot6;
            oscard = 15;
            oscard = foxtra[oscard];
            oscard = verify.bind(tangon)(oscard);
            verify = oscard.TextWithIOSLinkWorkaround;
            oscard = {'style': null, 'variant': 'text-sm/medium', 'color': 'text-muted'};
            romeon = romeon.description;
            oscard['style'] = romeon;
            oscard['children'] = yankee;
            oscard = offset.bind(tangon)(verify, oscard);
            report[2] = oscard;
            oscard = null;
            if(option) { _fun00004_ip = 537; continue _fun00003 }
 521:
            verify = _closure1_slot6;
            option = _closure1_slot10;
            golfie = {};
            oscard = verify.bind(tangon)(option, golfie);
 537:
            report[3] = oscard;
            entity['children'] = report;
            entity = zuuluu.bind(tangon)(michal, entity);
            return entity;
        }
    };
    zuuluu['default'] = michal;
    return entity;
})();