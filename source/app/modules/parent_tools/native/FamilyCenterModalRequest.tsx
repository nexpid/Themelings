// app/modules/parent_tools/native/FamilyCenterModalRequest.tsx
export default (function(argFoo, argBar, argBaz, argCorge, _, argFred, argPlugh) {
    verify = argBar;
    kilo = argBaz;
    zulu = argFred;
    offset = argPlugh;
    var _closure1_slot0 = verify;
    var _closure1_slot1 = kilo;
    var _closure1_slot2 = offset;
    report = function(argFoo) { // Original name: FamilyCenterModalRequestConfirm
        mike = argFoo;
        options = mike.userId;
        var _closure2_slot0 = options;
        mike = mike.linkCode;
        var _closure2_slot1 = mike;
        zulu = _closure1_slot14;
        tango = undefined;
        backup = zulu.bind(tango)();
        var _closure2_slot2 = backup;
        source = _closure1_slot0;
        kilo = _closure1_slot2;
        zulu = 7;
        zulu = kilo[zulu];
        report = source.bind(tango)(zulu);
        zulu = report.useNavigation;
        zulu = zulu.bind(report)();
        var _closure2_slot3 = zulu;
        verify = _closure1_slot3;
        golf = verify.useCallback;
        oscar = new Array(1);
        oscar[0] = zulu;
        report = function() {
            zulu = _closure2_slot3;
            mike = zulu.push;
            entity = _closure1_slot13;
            entity = entity.SENT;
            entity = mike.bind(zulu)(entity);
            entity = undefined;
            return entity;
        };
        verify = golf.bind(verify)(report, oscar);
        golf = _closure1_slot3;
        oscar = golf.useCallback;
        report = new Array(1);
        report[0] = zulu;
        zulu = function(argFoo) {
            tango = _closure1_slot0;
            zulu = _closure1_slot2;
            entity = 8;
            zulu = zulu[entity];
            entity = undefined;
            report = tango.bind(entity)(zulu);
            tango = report.getFailureCodeForAPIError;
            zulu = argFoo;
            oscar = tango.bind(report)(zulu);
            report = _closure2_slot3;
            tango = report.push;
            mike = _closure1_slot13;
            zulu = mike.ERROR;
            mike = {};
            mike['failureCode'] = oscar;
            mike = tango.bind(report)(zulu, mike);
            return entity;
        };
        golf = oscar.bind(golf)(zulu, report);
        zulu = 9;
        zulu = kilo[zulu];
        oscar = source.bind(tango)(zulu);
        report = oscar.useFamilyCenterActions;
        zulu = {};
        zulu['onSuccess'] = verify;
        zulu['onError'] = golf;
        zulu = report.bind(oscar)(zulu);
        verify = zulu.requestLink;
        var _closure2_slot4 = verify;
        oscar = zulu.isRequestingLink;
        var _closure2_slot5 = oscar;
        golf = _closure1_slot3;
        report = golf.useCallback;
        zulu = new Array(3);
        zulu[0] = verify;
        zulu[1] = options;
        zulu[2] = mike;
        mike = function() {
            tango = _closure2_slot4;
            zulu = _closure2_slot0;
            mike = _closure2_slot1;
            entity = undefined;
            mike = tango.bind(entity)(zulu, mike);
            return entity;
        };
        golf = report.bind(golf)(mike, zulu);
        var _closure2_slot6 = golf;
        report = _closure1_slot3;
        zulu = report.useCallback;
        mike = new Array(3);
        mike[0] = golf;
        mike[1] = oscar;
        mike[2] = backup;
        entity = function() {
            tango = _closure1_slot12;
            zulu = _closure1_slot11;
            mike = {};
            options = _closure1_slot10;
            offset = _closure1_slot1;
            yankee = _closure1_slot2;
            romeo = 10;
            report = yankee[romeo];
            entity = undefined;
            golf = offset.bind(entity)(report);
            report = {};
            verify = _closure2_slot5;
            report['disabled'] = verify;
            report['loading'] = verify;
            kilo = _closure2_slot2;
            verify = kilo.button;
            report['style'] = verify;
            foxtrot = 6;
            verify = yankee[foxtrot];
            verify = offset.bind(entity)(verify);
            verify = verify.radii;
            verify = verify.xs;
            report['cornerRadius'] = verify;
            verify = yankee[romeo];
            verify = offset.bind(entity)(verify);
            verify = verify.Sizes;
            verify = verify.MEDIUM;
            report['size'] = verify;
            backup = _closure1_slot0;
            verify = 11;
            output = yankee[verify];
            output = backup.bind(entity)(output);
            echo = output.intl;
            result = echo.string;
            output = yankee[verify];
            output = backup.bind(entity)(output);
            output = output.t;
            output = output.ISg34u;
            output = result.bind(echo)(output);
            report['text'] = output;
            sizing = _closure2_slot6;
            report['onPress'] = sizing;
            golf = options.bind(entity)(golf, report);
            report = new Array(2);
            report[0] = golf;
            options = _closure1_slot10;
            oscar = yankee[romeo];
            golf = offset.bind(entity)(oscar);
            oscar = {};
            kilo = kilo.button;
            oscar['style'] = kilo;
            foxtrot = yankee[foxtrot];
            foxtrot = offset.bind(entity)(foxtrot);
            foxtrot = foxtrot.radii;
            foxtrot = foxtrot.xs;
            oscar['cornerRadius'] = foxtrot;
            foxtrot = yankee[romeo];
            foxtrot = offset.bind(entity)(foxtrot);
            foxtrot = foxtrot.Colors;
            foxtrot = foxtrot.TRANSPARENT;
            oscar['color'] = foxtrot;
            romeo = yankee[romeo];
            romeo = offset.bind(entity)(romeo);
            romeo = romeo.Sizes;
            romeo = romeo.MEDIUM;
            oscar['size'] = romeo;
            romeo = yankee[verify];
            romeo = backup.bind(entity)(romeo);
            foxtrot = romeo.intl;
            romeo = foxtrot.string;
            verify = yankee[verify];
            verify = backup.bind(entity)(verify);
            verify = verify.t;
            verify = verify.ETE/oK;
            verify = romeo.bind(foxtrot)(verify);
            oscar['text'] = verify;
            verify = 12;
            verify = yankee[verify];
            verify = offset.bind(entity)(verify);
            verify = verify.pop;
            oscar['onPress'] = verify;
            oscar = options.bind(entity)(golf, oscar);
            report[1] = oscar;
            mike['children'] = report;
            entity = tango.bind(entity)(zulu, mike);
            return entity;
        };
        report = zulu.bind(report)(entity, mike);
        zulu = _closure1_slot10;
        foxtrot = _closure1_slot1;
        entity = 13;
        entity = kilo[entity];
        mike = foxtrot.bind(tango)(entity);
        entity = {};
        report = report.bind(tango)();
        entity['footer'] = report;
        golf = _closure1_slot12;
        oscar = _closure1_slot11;
        report = {};
        verify = _closure1_slot4;
        options = {};
        offset = backup.header;
        options['style'] = offset;
        sizing = _closure1_slot10;
        yankee = _closure1_slot5;
        offset = {};
        output = backup.art;
        offset['style'] = output;
        output = 14;
        output = kilo[output];
        output = foxtrot.bind(tango)(output);
        offset['source'] = output;
        yankee = sizing.bind(tango)(yankee, offset);
        offset = new Array(2);
        offset[0] = yankee;
        output = _closure1_slot10;
        yankee = 15;
        yankee = kilo[yankee];
        yankee = source.bind(tango)(yankee);
        sizing = yankee.Text;
        yankee = {};
        result = backup.headerText;
        yankee['style'] = result;
        result = 'text-lg/bold';
        yankee['variant'] = result;
        result = 11;
        echo = kilo[result];
        echo = source.bind(tango)(echo);
        update = echo.intl;
        echo = update.string;
        result = kilo[result];
        result = source.bind(tango)(result);
        result = result.t;
        result = result.GH11eH;
        result = echo.bind(update)(result);
        yankee['children'] = result;
        yankee = output.bind(tango)(sizing, yankee);
        offset[1] = yankee;
        options['children'] = offset;
        verify = golf.bind(tango)(verify, options);
        options = new Array(2);
        options[0] = verify;
        yankee = _closure1_slot10;
        offset = _closure1_slot4;
        verify = {};
        backup = backup.body;
        verify['style'] = backup;
        backup = _closure1_slot10;
        romeo = 16;
        romeo = kilo[romeo];
        foxtrot = foxtrot.bind(tango)(romeo);
        romeo = {};
        kilo = 'request-modal';
        romeo['source'] = kilo;
        romeo = backup.bind(tango)(foxtrot, romeo);
        verify['children'] = romeo;
        verify = yankee.bind(tango)(offset, verify);
        options[1] = verify;
        report['children'] = options;
        report = golf.bind(tango)(oscar, report);
        entity['children'] = report;
        entity = zulu.bind(tango)(mike, entity);
        return entity;
    };
    var _closure1_slot17 = report;
    tango = function() { // Original name: FamilyCenterModalRequestSuccess
        _fun95260: for(var _fun95260_ip = 0; ; ) switch(_fun95260_ip) {
 0:
            mike = _closure1_slot15;
            tango = undefined;
            backup = mike.bind(tango)();
            mike = _closure1_slot14;
            oscar = mike.bind(tango)();
            var _closure2_slot0 = oscar;
            golf = _closure1_slot0;
            options = _closure1_slot2;
            mike = 17;
            mike = options[mike];
            verify = golf.bind(tango)(mike);
            report = verify.useStateFromStores;
            mike = _closure1_slot6;
            zulu = new Array(1);
            zulu[0] = mike;
            mike = function() {
                mike = _closure1_slot6;
                entity = mike.getCurrentUser;
                entity = entity.bind(mike)();
                return entity;
            };
            output = report.bind(verify)(zulu, mike);
            mike = 18;
            zulu = options[mike];
            report = golf.bind(tango)(zulu);
            zulu = report.generateBoxShadowStyle;
            mike = options[mike];
            mike = golf.bind(tango)(mike);
            mike = mike.FOUR_DP_ELEVATION_SHADOW_PARAMS;
            foxtrot = zulu.bind(report)(mike);
            golf = _closure1_slot3;
            report = golf.useCallback;
            zulu = function() {
                zulu = _closure1_slot1;
                mike = _closure1_slot2;
                entity = 12;
                mike = mike[entity];
                entity = undefined;
                zulu = zulu.bind(entity)(mike);
                mike = zulu.pop;
                mike = mike.bind(zulu)();
                return entity;
            };
            mike = new Array(0);
            golf = report.bind(golf)(zulu, mike);
            var _closure2_slot1 = golf;
            report = _closure1_slot3;
            zulu = report.useCallback;
            mike = new Array(2);
            mike[0] = golf;
            mike[1] = oscar;
            entity = function() {
                tango = _closure1_slot10;
                options = _closure1_slot1;
                offset = _closure1_slot2;
                golf = 10;
                entity = offset[golf];
                zulu = undefined;
                mike = options.bind(zulu)(entity);
                entity = {};
                verify = _closure2_slot0;
                verify = verify.button;
                entity['style'] = verify;
                verify = 6;
                verify = offset[verify];
                verify = options.bind(zulu)(verify);
                verify = verify.radii;
                verify = verify.xs;
                entity['cornerRadius'] = verify;
                golf = offset[golf];
                golf = options.bind(zulu)(golf);
                golf = golf.Sizes;
                golf = golf.MEDIUM;
                entity['size'] = golf;
                verify = _closure1_slot0;
                oscar = 11;
                golf = offset[oscar];
                golf = verify.bind(zulu)(golf);
                options = golf.intl;
                golf = options.string;
                oscar = offset[oscar];
                oscar = verify.bind(zulu)(oscar);
                oscar = oscar.t;
                oscar = oscar.cpT0Cg;
                oscar = golf.bind(options)(oscar);
                entity['text'] = oscar;
                report = _closure2_slot1;
                entity['onPress'] = report;
                entity = tango.bind(zulu)(mike, entity);
                return entity;
            };
            report = zulu.bind(report)(entity, mike);
            sizing = null;
            if(!(sizing === output)) { _fun95260_ip = 215; continue _fun95260 }
 185:
            mike = _closure1_slot1;
            zulu = _closure1_slot2;
            entity = 12;
            entity = zulu[entity];
            mike = mike.bind(tango)(entity);
            entity = mike.pop;
            entity = entity.bind(mike)();
 215:
            zulu = _closure1_slot10;
            vacuum = _closure1_slot1;
            result = _closure1_slot2;
            entity = 13;
            entity = result[entity];
            mike = vacuum.bind(tango)(entity);
            entity = {};
            report = report.bind(tango)();
            entity['footer'] = report;
            golf = _closure1_slot12;
            oscar = _closure1_slot4;
            report = {};
            options = backup.container;
            report['style'] = options;
            yankee = _closure1_slot10;
            verify = _closure1_slot4;
            options = {};
            kilo = backup.ring;
            romeo = new Array(2);
            romeo[0] = kilo;
            romeo[1] = foxtrot;
            options['style'] = romeo;
            kilo = _closure1_slot10;
            foxtrot = _closure1_slot4;
            romeo = {};
            echo = backup.iconContainer;
            romeo['style'] = echo;
            source = _closure1_slot10;
            echo = 19;
            echo = result[echo];
            update = vacuum.bind(tango)(echo);
            echo = {};
            control = 20;
            control = result[control];
            control = vacuum.bind(tango)(control);
            echo['source'] = control;
            control = '#FFF';
            echo['color'] = control;
            echo = source.bind(tango)(update, echo);
            romeo['children'] = echo;
            romeo = kilo.bind(tango)(foxtrot, romeo);
            options['children'] = romeo;
            verify = yankee.bind(tango)(verify, options);
            options = new Array(3);
            options[0] = verify;
            echo = _closure1_slot10;
            foxtrot = _closure1_slot0;
            verify = 15;
            yankee = result[verify];
            yankee = foxtrot.bind(tango)(yankee);
            kilo = yankee.Text;
            yankee = {'variant': 'heading-lg/bold', 'color': 'header-primary'};
            romeo = backup.header;
            yankee['style'] = romeo;
            romeo = 11;
            update = result[romeo];
            update = foxtrot.bind(tango)(update);
            control = update.intl;
            source = control.string;
            update = result[romeo];
            update = foxtrot.bind(tango)(update);
            update = update.t;
            update = update.EpwfZm;
            update = source.bind(control)(update);
            yankee['children'] = update;
            yankee = echo.bind(tango)(kilo, yankee);
            options[1] = yankee;
            yankee = _closure1_slot10;
            verify = result[verify];
            verify = foxtrot.bind(tango)(verify);
            offset = verify.Text;
            verify = {'variant': 'text-sm/medium', 'color': 'text-muted'};
            backup = backup.description;
            verify['style'] = backup;
            backup = result[romeo];
            backup = foxtrot.bind(tango)(backup);
            kilo = backup.intl;
            backup = kilo.format;
            romeo = result[romeo];
            romeo = foxtrot.bind(tango)(romeo);
            romeo = romeo.t;
            foxtrot = romeo.dVtWIS;
            romeo = {};
            result = sizing == output;
            sizing = undefined;
            if(result) { _fun95260_ip = 597; continue _fun95260 }
 591:
            sizing = output.email;
 597:
            romeo['email'] = sizing;
            romeo = backup.bind(kilo)(foxtrot, romeo);
            verify['children'] = romeo;
            verify = yankee.bind(tango)(offset, verify);
            options[2] = verify;
            report['children'] = options;
            report = golf.bind(tango)(oscar, report);
            entity['children'] = report;
            entity = zulu.bind(tango)(mike, entity);
            return entity;
        }
    };
    var _closure1_slot18 = tango;
    mike = function(argFoo) { // Original name: FamilyCenterModalRequestError
        _fun95264: for(var _fun95264_ip = 0; ; ) switch(_fun95264_ip) {
 0:
            mike = argFoo;
            zulu = mike.failureCode;
            mike = _closure1_slot16;
            tango = undefined;
            foxtrot = mike.bind(tango)();
            mike = _closure1_slot14;
            romeo = mike.bind(tango)();
            var _closure2_slot0 = romeo;
            backup = _closure1_slot0;
            golf = _closure1_slot2;
            mike = 17;
            mike = golf[mike];
            options = backup.bind(tango)(mike);
            oscar = options.useStateFromStores;
            mike = _closure1_slot6;
            report = new Array(1);
            report[0] = mike;
            mike = function() {
                mike = _closure1_slot6;
                entity = mike.getCurrentUser;
                entity = entity.bind(mike)();
                return entity;
            };
            oscar = oscar.bind(options)(report, mike);
            mike = _closure1_slot1;
            report = 21;
            report = golf[report];
            report = mike.bind(tango)(report);
            options = report.bind(tango)();
            report = 18;
            verify = golf[report];
            offset = backup.bind(tango)(verify);
            verify = offset.generateBoxShadowStyle;
            report = golf[report];
            report = backup.bind(tango)(report);
            report = report.FOUR_DP_ELEVATION_SHADOW_PARAMS;
            kilo = verify.bind(offset)(report);
            backup = _closure1_slot3;
            offset = backup.useCallback;
            verify = function() {
                zulu = _closure1_slot1;
                mike = _closure1_slot2;
                entity = 12;
                mike = mike[entity];
                entity = undefined;
                zulu = zulu.bind(entity)(mike);
                mike = zulu.pop;
                mike = mike.bind(zulu)();
                return entity;
            };
            report = new Array(0);
            backup = offset.bind(backup)(verify, report);
            var _closure2_slot1 = backup;
            offset = _closure1_slot3;
            verify = offset.useCallback;
            report = new Array(2);
            report[0] = backup;
            report[1] = romeo;
            entity = function() {
                tango = _closure1_slot10;
                options = _closure1_slot1;
                offset = _closure1_slot2;
                golf = 10;
                entity = offset[golf];
                zulu = undefined;
                mike = options.bind(zulu)(entity);
                entity = {};
                verify = _closure2_slot0;
                verify = verify.button;
                entity['style'] = verify;
                verify = 6;
                verify = offset[verify];
                verify = options.bind(zulu)(verify);
                verify = verify.radii;
                verify = verify.xs;
                entity['cornerRadius'] = verify;
                golf = offset[golf];
                golf = options.bind(zulu)(golf);
                golf = golf.Sizes;
                golf = golf.MEDIUM;
                entity['size'] = golf;
                verify = _closure1_slot0;
                oscar = 11;
                golf = offset[oscar];
                golf = verify.bind(zulu)(golf);
                options = golf.intl;
                golf = options.string;
                oscar = offset[oscar];
                oscar = verify.bind(zulu)(oscar);
                oscar = oscar.t;
                oscar = oscar.cpT0Cg;
                oscar = golf.bind(options)(oscar);
                entity['text'] = oscar;
                report = _closure2_slot1;
                entity['onPress'] = report;
                entity = tango.bind(zulu)(mike, entity);
                return entity;
            };
            report = verify.bind(offset)(entity, report);
            entity = 22;
            entity = golf[entity];
            verify = mike.bind(tango)(entity);
            mike = null;
            golf = mike != oscar;
            entity = 'User must be logged in to see this modal.';
            entity = verify.bind(tango)(golf, entity);
            entity = _closure1_slot7;
            entity = entity[zulu];
            zulu = {};
            verify = mike != options;
            golf = undefined;
            if(!verify) { _fun95264_ip = 260; continue _fun95264 }
 257:
            golf = options;
 260:
            zulu['isAdult'] = golf;
            oscar = oscar.email;
            golf = mike != oscar;
            mike = undefined;
            if(!golf) { _fun95264_ip = 283; continue _fun95264 }
 280:
            mike = oscar;
 283:
            zulu['email'] = mike;
            mike = entity.header;
            result = mike.bind(entity)(zulu);
            mike = entity.description;
            romeo = mike.bind(entity)(zulu);
            echo = entity.icon;
            entity = _closure1_slot9;
            update = entity.CHECK;
            zulu = _closure1_slot10;
            mike = _closure1_slot1;
            oscar = _closure1_slot2;
            entity = 13;
            entity = oscar[entity];
            mike = mike.bind(tango)(entity);
            entity = {};
            report = report.bind(tango)();
            entity['footer'] = report;
            golf = _closure1_slot12;
            oscar = _closure1_slot4;
            report = {};
            options = foxtrot.container;
            report['style'] = options;
            offset = _closure1_slot10;
            verify = _closure1_slot4;
            options = {};
            sizing = foxtrot.ring;
            backup = new Array(2);
            backup[0] = sizing;
            backup[1] = kilo;
            options['style'] = backup;
            sizing = _closure1_slot10;
            kilo = _closure1_slot4;
            backup = {};
            source = foxtrot.iconContainer;
            output = new Array(2);
            output[0] = source;
            if(!(echo !== update)) { _fun95264_ip = 445; continue _fun95264 }
 437:
            update = foxtrot.negative;
            _fun95264_ip = 451; continue _fun95264;
 445:
            update = foxtrot.positive;
 451:
            output[1] = update;
            backup['style'] = output;
            output = _closure1_slot9;
            output = output.CHECK;
            if(!(echo !== output)) { _fun95264_ip = 533; continue _fun95264 }
 473:
            update = _closure1_slot10;
            control = _closure1_slot1;
            vacuum = _closure1_slot2;
            output = 19;
            output = vacuum[output];
            echo = control.bind(tango)(output);
            output = {};
            source = 23;
            source = vacuum[source];
            source = control.bind(tango)(source);
            output['source'] = source;
            source = '#FFF';
            output['color'] = source;
            output = update.bind(tango)(echo, output);
            _fun95264_ip = 591; continue _fun95264;
 533:
            source = _closure1_slot10;
            vacuum = _closure1_slot1;
            sequence = _closure1_slot2;
            echo = 19;
            echo = sequence[echo];
            update = vacuum.bind(tango)(echo);
            echo = {};
            control = 20;
            control = sequence[control];
            control = vacuum.bind(tango)(control);
            echo['source'] = control;
            control = '#FFF';
            echo['color'] = control;
            output = source.bind(tango)(update, echo);
 591:
            backup['children'] = output;
            backup = sizing.bind(tango)(kilo, backup);
            options['children'] = backup;
            verify = offset.bind(tango)(verify, options);
            options = new Array(3);
            options[0] = verify;
            output = _closure1_slot10;
            offset = _closure1_slot0;
            backup = _closure1_slot2;
            verify = 15;
            kilo = backup[verify];
            kilo = offset.bind(tango)(kilo);
            sizing = kilo.Text;
            kilo = {'variant': 'heading-lg/bold', 'color': 'header-primary'};
            echo = foxtrot.header;
            kilo['style'] = echo;
            kilo['children'] = result;
            kilo = output.bind(tango)(sizing, kilo);
            options[1] = kilo;
            yankee = _closure1_slot10;
            verify = backup[verify];
            verify = offset.bind(tango)(verify);
            offset = verify.Text;
            verify = {'variant': 'text-sm/medium', 'color': 'text-muted'};
            foxtrot = foxtrot.description;
            verify['style'] = foxtrot;
            verify['children'] = romeo;
            verify = yankee.bind(tango)(offset, verify);
            options[2] = verify;
            report['children'] = options;
            report = golf.bind(tango)(oscar, report);
            entity['children'] = report;
            entity = zulu.bind(tango)(mike, entity);
            return entity;
        }
    };
    var _closure1_slot19 = mike;
    oscar = global;
    romeo = oscar.Object;
    yankee = romeo.defineProperty;
    options = {};
    entity = true;
    options['value'] = entity;
    entity = '__esModule';
    entity = yankee.bind(romeo)(zulu, entity, options);
    entity = 0;
    yankee = offset[entity];
    options = argCorge;
    entity = undefined;
    options = options.bind(entity)(yankee);
    var _closure1_slot3 = options;
    options = 1;
    options = offset[options];
    options = verify.bind(entity)(options);
    yankee = options.View;
    var _closure1_slot4 = yankee;
    options = options.Image;
    var _closure1_slot5 = options;
    options = 2;
    options = offset[options];
    options = kilo.bind(entity)(options);
    var _closure1_slot6 = options;
    options = 3;
    options = offset[options];
    options = verify.bind(entity)(options);
    yankee = options.FAMILY_CENTER_LINK_REQUEST_ERROR_EXPERIENCES;
    var _closure1_slot7 = yankee;
    yankee = options.FamilyCenterFailureCode;
    var _closure1_slot8 = yankee;
    options = options.FamilyCenterIconType;
    var _closure1_slot9 = options;
    options = 4;
    yankee = offset[options];
    yankee = verify.bind(entity)(yankee);
    yankee = yankee.jsx;
    var _closure1_slot10 = yankee;
    yankee = offset[options];
    yankee = verify.bind(entity)(yankee);
    yankee = yankee.Fragment;
    var _closure1_slot11 = yankee;
    options = offset[options];
    options = verify.bind(entity)(options);
    options = options.jsxs;
    var _closure1_slot12 = options;
    yankee = oscar.Object;
    options = yankee.freeze;
    oscar = {'REQUEST': 'REQUESTS', 'SENT': 'SENT', 'ERROR': 'ERROR', 'TEEN_SCAN': 'TEEN_SCAN'};
    oscar = options.bind(yankee)(oscar);
    var _closure1_slot13 = oscar;
    options = 5;
    yankee = offset[options];
    foxtrot = verify.bind(entity)(yankee);
    romeo = foxtrot.createStyles;
    yankee = {};
    output = {'display': 'flex', 'alignItems': 'center', 'justifyContent': 'center'};
    sizing = 'center';
    backup = 6;
    result = offset[backup];
    result = kilo.bind(entity)(result);
    result = result.spacing;
    result = result.PX_16;
    output['marginBottom'] = result;
    yankee['header'] = output;
    output = {};
    result = offset[backup];
    result = kilo.bind(entity)(result);
    result = result.spacing;
    result = result.PX_16;
    output['marginTop'] = result;
    yankee['headerText'] = output;
    output = {};
    result = offset[backup];
    result = kilo.bind(entity)(result);
    result = result.spacing;
    result = result.PX_24;
    output['paddingHorizontal'] = result;
    yankee['body'] = output;
    output = {};
    result = offset[backup];
    result = kilo.bind(entity)(result);
    result = result.spacing;
    result = result.PX_4;
    output['marginBottom'] = result;
    yankee['noticeHeader'] = output;
    output = {};
    result = offset[backup];
    result = kilo.bind(entity)(result);
    result = result.spacing;
    result = result.PX_4;
    output['marginBottom'] = result;
    yankee['button'] = output;
    output = {};
    echo = {};
    result = '45deg';
    echo['rotate'] = result;
    result = new Array(1);
    result[0] = echo;
    output['transform'] = result;
    result = offset[backup];
    result = kilo.bind(entity)(result);
    result = result.colors;
    result = result.INTERACTIVE_NORMAL;
    output['tintColor'] = result;
    yankee['icon'] = output;
    output = {'display': 'flex', 'alignItems': 'center', 'justifyContent': 'center', 'flex': 1};
    yankee['spinner'] = output;
    output = {'width': 165, 'height': 119};
    yankee['art'] = output;
    yankee = romeo.bind(foxtrot)(yankee);
    var _closure1_slot14 = yankee;
    yankee = offset[options];
    foxtrot = verify.bind(entity)(yankee);
    romeo = foxtrot.createStyles;
    yankee = {};
    output = {'display': 'flex', 'alignItems': 'center'};
    yankee['container'] = output;
    output = {};
    result = offset[backup];
    result = kilo.bind(entity)(result);
    result = result.spacing;
    result = result.PX_8;
    output['marginBottom'] = result;
    yankee['header'] = output;
    output = {};
    output['textAlign'] = sizing;
    yankee['description'] = output;
    output = {'display': 'flex', 'justifyContent': 'center', 'alignItems': 'center', 'height': 64, 'width': 64};
    result = offset[backup];
    result = kilo.bind(entity)(result);
    result = result.radii;
    result = result.round;
    output['borderRadius'] = result;
    result = offset[backup];
    result = kilo.bind(entity)(result);
    result = result.colors;
    result = result.BACKGROUND_SECONDARY;
    output['backgroundColor'] = result;
    result = offset[backup];
    result = kilo.bind(entity)(result);
    result = result.spacing;
    result = result.PX_24;
    output['marginBottom'] = result;
    yankee['ring'] = output;
    output = {'display': 'flex', 'justifyContent': 'center', 'alignItems': 'center', 'height': 48, 'width': 48};
    result = offset[backup];
    result = kilo.bind(entity)(result);
    result = result.radii;
    result = result.round;
    output['borderRadius'] = result;
    result = offset[backup];
    result = kilo.bind(entity)(result);
    result = result.colors;
    result = result.STATUS_POSITIVE;
    output['backgroundColor'] = result;
    yankee['iconContainer'] = output;
    output = {'width': 24, 'height': 24};
    yankee['icon'] = output;
    yankee = romeo.bind(foxtrot)(yankee);
    var _closure1_slot15 = yankee;
    options = offset[options];
    romeo = verify.bind(entity)(options);
    yankee = romeo.createStyles;
    options = {};
    foxtrot = {'display': 'flex', 'alignItems': 'center'};
    options['container'] = foxtrot;
    foxtrot = {'marginBottom': 8, 'textAlign': 'center'};
    options['header'] = foxtrot;
    foxtrot = {};
    foxtrot['textAlign'] = sizing;
    options['description'] = foxtrot;
    foxtrot = {'display': 'flex', 'justifyContent': 'center', 'alignItems': 'center', 'height': 64, 'width': 64, 'borderRadius': null, 'backgroundColor': null, 'marginBottom': 24};
    sizing = offset[backup];
    sizing = kilo.bind(entity)(sizing);
    sizing = sizing.radii;
    sizing = sizing.round;
    foxtrot['borderRadius'] = sizing;
    sizing = offset[backup];
    sizing = kilo.bind(entity)(sizing);
    sizing = sizing.colors;
    sizing = sizing.BACKGROUND_SECONDARY;
    foxtrot['backgroundColor'] = sizing;
    options['ring'] = foxtrot;
    foxtrot = {'display': 'flex', 'justifyContent': 'center', 'alignItems': 'center', 'height': 48, 'width': 48};
    sizing = offset[backup];
    sizing = kilo.bind(entity)(sizing);
    sizing = sizing.radii;
    sizing = sizing.round;
    foxtrot['borderRadius'] = sizing;
    sizing = offset[backup];
    sizing = kilo.bind(entity)(sizing);
    sizing = sizing.colors;
    sizing = sizing.STATUS_POSITIVE;
    foxtrot['backgroundColor'] = sizing;
    options['iconContainer'] = foxtrot;
    foxtrot = {};
    sizing = offset[backup];
    sizing = kilo.bind(entity)(sizing);
    sizing = sizing.colors;
    sizing = sizing.STATUS_POSITIVE;
    foxtrot['backgroundColor'] = sizing;
    options['positive'] = foxtrot;
    foxtrot = {};
    backup = offset[backup];
    backup = kilo.bind(entity)(backup);
    backup = backup.colors;
    backup = backup.STATUS_DANGER;
    foxtrot['backgroundColor'] = backup;
    options['negative'] = foxtrot;
    foxtrot = {'width': 24, 'height': 24};
    options['icon'] = foxtrot;
    options = yankee.bind(romeo)(options);
    var _closure1_slot16 = options;
    options = 25;
    options = offset[options];
    offset = verify.bind(entity)(options);
    verify = offset.fileFinishedImporting;
    options = 'modules/parent_tools/native/FamilyCenterModalRequest.tsx';
    options = verify.bind(offset)(options);
    golf = function(argFoo) { // Original name: FamilyCenterRequestModal
        _fun95268: for(var _fun95268_ip = 0; ; ) switch(_fun95268_ip) {
 0:
            mike = argFoo;
            verify = mike.userId;
            var _closure2_slot0 = verify;
            offset = mike.linkCode;
            var _closure2_slot1 = offset;
            zulu = _closure1_slot1;
            options = _closure1_slot2;
            mike = 21;
            mike = options[mike];
            tango = undefined;
            mike = zulu.bind(tango)(mike);
            golf = mike.bind(tango)();
            oscar = _closure1_slot3;
            zulu = oscar.useMemo;
            mike = new Array(2);
            mike[0] = offset;
            mike[1] = verify;
            entity = function() {
                tango = _closure2_slot0;
                zulu = _closure2_slot1;
                mike = function(argFoo, argBar) { // Original name: getScreens
                    entity = argFoo;
                    var _closure4_slot0 = entity;
                    entity = argBar;
                    var _closure4_slot1 = entity;
                    entity = {};
                    zulu = _closure1_slot13;
                    report = zulu.REQUEST;
                    zulu = {'fullscreen': true, 'headerShown': false};
                    oscar = function() { // Original name: render
                        tango = _closure1_slot10;
                        zulu = _closure1_slot17;
                        mike = {};
                        report = _closure4_slot0;
                        mike['userId'] = report;
                        entity = _closure4_slot1;
                        mike['linkCode'] = entity;
                        entity = undefined;
                        entity = tango.bind(entity)(zulu, mike);
                        return entity;
                    };
                    zulu['render'] = oscar;
                    entity[report] = zulu;
                    zulu = _closure1_slot13;
                    report = zulu.SENT;
                    zulu = {'fullscreen': true, 'headerShown': false};
                    oscar = function() { // Original name: render
                        tango = _closure1_slot10;
                        zulu = _closure1_slot18;
                        mike = undefined;
                        entity = {};
                        entity = tango.bind(mike)(zulu, entity);
                        return entity;
                    };
                    zulu['render'] = oscar;
                    entity[report] = zulu;
                    zulu = _closure1_slot13;
                    report = zulu.ERROR;
                    zulu = {'fullscreen': true, 'headerShown': false};
                    oscar = function(argFoo) { // Original name: render
                        entity = argFoo;
                        entity = entity.failureCode;
                        tango = _closure1_slot10;
                        zulu = _closure1_slot19;
                        mike = {};
                        mike['failureCode'] = entity;
                        entity = undefined;
                        entity = tango.bind(entity)(zulu, mike);
                        return entity;
                    };
                    zulu['render'] = oscar;
                    entity[report] = zulu;
                    mike = _closure1_slot13;
                    zulu = mike.TEEN_SCAN;
                    mike = {'fullscreen': true, 'headerShown': false};
                    tango = function() { // Original name: render
                        tango = _closure1_slot10;
                        zulu = _closure1_slot19;
                        mike = {};
                        entity = _closure1_slot8;
                        entity = entity.INELIGIBLE_FOR_FAMILY_CENTER;
                        mike['failureCode'] = entity;
                        entity = undefined;
                        entity = tango.bind(entity)(zulu, mike);
                        return entity;
                    };
                    mike['render'] = tango;
                    entity[zulu] = mike;
                    return entity;
                };
                entity = undefined;
                entity = mike.bind(entity)(tango, zulu);
                return entity;
            };
            oscar = zulu.bind(oscar)(entity, mike);
            zulu = _closure1_slot10;
            mike = _closure1_slot0;
            entity = 24;
            entity = options[entity];
            entity = mike.bind(tango)(entity);
            mike = entity.Navigator;
            entity = {};
            options = _closure1_slot13;
            if(golf) { _fun95268_ip = 130; continue _fun95268 }
 122:
            golf = options.TEEN_SCAN;
            _fun95268_ip = 136; continue _fun95268;
 130:
            golf = options.REQUEST;
 136:
            entity['initialRouteName'] = golf;
            entity['screens'] = oscar;
            options = _closure1_slot0;
            verify = _closure1_slot2;
            report = 11;
            oscar = verify[report];
            oscar = options.bind(tango)(oscar);
            golf = oscar.intl;
            oscar = golf.string;
            report = verify[report];
            report = options.bind(tango)(report);
            report = report.t;
            report = report.13/7kZ;
            report = oscar.bind(golf)(report);
            entity['headerBackTitle'] = report;
            entity = zulu.bind(tango)(mike, entity);
            return entity;
        }
    };
    zulu['default'] = golf;
    zulu['FamilyCenterModalRequestSections'] = oscar;
    zulu['FamilyCenterModalRequestConfirm'] = report;
    zulu['FamilyCenterModalRequestSuccess'] = tango;
    zulu['FamilyCenterModalRequestError'] = mike;
    return entity;
})();