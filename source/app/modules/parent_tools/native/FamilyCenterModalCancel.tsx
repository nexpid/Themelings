// app/modules/parent_tools/native/FamilyCenterModalCancel.tsx
export default (function(argFoo, argBar, argBaz, argCorge, _, argFred, argPlugh) {
    report = argBar;
    yankee = argBaz;
    zulu = argFred;
    oscar = argPlugh;
    var _closure1_slot0 = report;
    var _closure1_slot1 = yankee;
    var _closure1_slot2 = oscar;
    entity = global;
    options = entity.Object;
    golf = options.defineProperty;
    tango = {};
    entity = true;
    tango['value'] = entity;
    entity = '__esModule';
    entity = golf.bind(options)(zulu, entity, tango);
    entity = 0;
    golf = oscar[entity];
    tango = argCorge;
    entity = undefined;
    tango = tango.bind(entity)(golf);
    var _closure1_slot3 = tango;
    tango = 1;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.View;
    var _closure1_slot4 = tango;
    tango = 2;
    golf = oscar[tango];
    golf = report.bind(entity)(golf);
    golf = golf.jsx;
    var _closure1_slot5 = golf;
    golf = oscar[tango];
    golf = report.bind(entity)(golf);
    golf = golf.Fragment;
    var _closure1_slot6 = golf;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.jsxs;
    var _closure1_slot7 = tango;
    tango = 3;
    tango = oscar[tango];
    options = report.bind(entity)(tango);
    golf = options.createStyles;
    tango = {};
    verify = {'display': 'flex', 'alignItems': 'center', 'justifyContent': 'center'};
    offset = 4;
    romeo = oscar[offset];
    romeo = yankee.bind(entity)(romeo);
    romeo = romeo.spacing;
    romeo = romeo.PX_16;
    verify['marginBottom'] = romeo;
    tango['header'] = verify;
    verify = {};
    romeo = oscar[offset];
    romeo = yankee.bind(entity)(romeo);
    romeo = romeo.spacing;
    romeo = romeo.PX_16;
    verify['marginTop'] = romeo;
    romeo = oscar[offset];
    romeo = yankee.bind(entity)(romeo);
    romeo = romeo.spacing;
    romeo = romeo.PX_4;
    verify['marginBottom'] = romeo;
    tango['headerText'] = verify;
    verify = {};
    romeo = oscar[offset];
    romeo = yankee.bind(entity)(romeo);
    romeo = romeo.spacing;
    romeo = romeo.PX_24;
    verify['padding'] = romeo;
    romeo = oscar[offset];
    romeo = yankee.bind(entity)(romeo);
    romeo = romeo.radii;
    romeo = romeo.md;
    verify['borderRadius'] = romeo;
    romeo = oscar[offset];
    romeo = yankee.bind(entity)(romeo);
    romeo = romeo.colors;
    romeo = romeo.BACKGROUND_SECONDARY;
    verify['backgroundColor'] = romeo;
    tango['body'] = verify;
    verify = {};
    romeo = oscar[offset];
    romeo = yankee.bind(entity)(romeo);
    romeo = romeo.spacing;
    romeo = romeo.PX_4;
    verify['marginBottom'] = romeo;
    tango['noticeHeader'] = verify;
    verify = {};
    romeo = oscar[offset];
    romeo = yankee.bind(entity)(romeo);
    romeo = romeo.spacing;
    romeo = romeo.PX_4;
    verify['marginBottom'] = romeo;
    tango['button'] = verify;
    verify = {};
    offset = oscar[offset];
    offset = yankee.bind(entity)(offset);
    offset = offset.colors;
    offset = offset.STATUS_DANGER;
    verify['tintColor'] = offset;
    tango['icon'] = verify;
    tango = golf.bind(options)(tango);
    var _closure1_slot8 = tango;
    tango = 17;
    tango = oscar[tango];
    oscar = report.bind(entity)(tango);
    report = oscar.fileFinishedImporting;
    tango = 'modules/parent_tools/native/FamilyCenterModalCancel.tsx';
    tango = report.bind(oscar)(tango);
    mike = function(argFoo) { // Original name: FamilyCenterModalDecline
        mike = argFoo;
        foxtrot = mike.otherUser;
        var _closure2_slot0 = foxtrot;
        mike = _closure1_slot8;
        tango = undefined;
        sizing = mike.bind(tango)();
        var _closure2_slot1 = sizing;
        romeo = _closure1_slot1;
        backup = _closure1_slot2;
        mike = 5;
        mike = backup[mike];
        mike = romeo.bind(tango)(mike);
        zulu = mike.bind(tango)();
        oscar = _closure1_slot3;
        options = oscar.useCallback;
        report = function() {
            zulu = _closure1_slot1;
            mike = _closure1_slot2;
            entity = 6;
            mike = mike[entity];
            entity = undefined;
            zulu = zulu.bind(entity)(mike);
            mike = zulu.pop;
            mike = mike.bind(zulu)();
            return entity;
        };
        mike = new Array(0);
        offset = options.bind(oscar)(report, mike);
        options = oscar.useCallback;
        report = function() {
            golf = _closure1_slot0;
            options = _closure1_slot2;
            entity = 7;
            mike = options[entity];
            entity = undefined;
            tango = golf.bind(entity)(mike);
            zulu = tango.presentFailedToast;
            mike = 8;
            report = options[mike];
            report = golf.bind(entity)(report);
            oscar = report.intl;
            report = oscar.string;
            mike = options[mike];
            mike = golf.bind(entity)(mike);
            mike = mike.t;
            mike = mike.R0RpRU;
            mike = report.bind(oscar)(mike);
            mike = zulu.bind(tango)(mike);
            return entity;
        };
        mike = new Array(0);
        verify = options.bind(oscar)(report, mike);
        echo = _closure1_slot0;
        mike = 9;
        mike = backup[mike];
        options = echo.bind(tango)(mike);
        report = options.useFamilyCenterActions;
        mike = {};
        mike['onSuccess'] = offset;
        mike['onError'] = verify;
        report = report.bind(options)(mike);
        mike = report.cancelLinkRequest;
        var _closure2_slot2 = mike;
        options = report.isCancelLoading;
        var _closure2_slot3 = options;
        verify = oscar.useCallback;
        report = new Array(2);
        report[0] = mike;
        report[1] = foxtrot;
        mike = function() {
            zulu = _closure2_slot2;
            mike = _closure2_slot0;
            entity = undefined;
            mike = zulu.bind(entity)(mike);
            return entity;
        };
        verify = verify.bind(oscar)(mike, report);
        var _closure2_slot4 = verify;
        report = oscar.useCallback;
        mike = new Array(3);
        mike[0] = verify;
        mike[1] = options;
        mike[2] = sizing;
        entity = function() {
            tango = _closure1_slot7;
            zulu = _closure1_slot6;
            mike = {};
            options = _closure1_slot5;
            offset = _closure1_slot1;
            yankee = _closure1_slot2;
            romeo = 10;
            report = yankee[romeo];
            entity = undefined;
            oscar = offset.bind(entity)(report);
            report = {};
            foxtrot = _closure2_slot3;
            report['disabled'] = foxtrot;
            report['loading'] = foxtrot;
            kilo = _closure2_slot1;
            foxtrot = kilo.button;
            report['style'] = foxtrot;
            foxtrot = 4;
            backup = yankee[foxtrot];
            backup = offset.bind(entity)(backup);
            backup = backup.radii;
            backup = backup.xs;
            report['cornerRadius'] = backup;
            backup = yankee[romeo];
            backup = offset.bind(entity)(backup);
            backup = backup.Sizes;
            backup = backup.MEDIUM;
            report['size'] = backup;
            backup = yankee[romeo];
            backup = offset.bind(entity)(backup);
            backup = backup.Colors;
            backup = backup.RED;
            report['color'] = backup;
            backup = _closure1_slot0;
            verify = 8;
            sizing = yankee[verify];
            sizing = backup.bind(entity)(sizing);
            result = sizing.intl;
            output = result.string;
            sizing = yankee[verify];
            sizing = backup.bind(entity)(sizing);
            sizing = sizing.t;
            sizing = sizing.mK40bm;
            sizing = output.bind(result)(sizing);
            report['text'] = sizing;
            golf = _closure2_slot4;
            report['onPress'] = golf;
            oscar = options.bind(entity)(oscar, report);
            report = new Array(2);
            report[0] = oscar;
            oscar = yankee[romeo];
            golf = offset.bind(entity)(oscar);
            oscar = {};
            kilo = kilo.button;
            oscar['style'] = kilo;
            foxtrot = yankee[foxtrot];
            foxtrot = offset.bind(entity)(foxtrot);
            foxtrot = foxtrot.radii;
            foxtrot = foxtrot.xs;
            oscar['cornerRadius'] = foxtrot;
            foxtrot = yankee[romeo];
            foxtrot = offset.bind(entity)(foxtrot);
            foxtrot = foxtrot.Colors;
            foxtrot = foxtrot.TRANSPARENT;
            oscar['color'] = foxtrot;
            romeo = yankee[romeo];
            romeo = offset.bind(entity)(romeo);
            romeo = romeo.Sizes;
            romeo = romeo.MEDIUM;
            oscar['size'] = romeo;
            romeo = yankee[verify];
            romeo = backup.bind(entity)(romeo);
            foxtrot = romeo.intl;
            romeo = foxtrot.string;
            verify = yankee[verify];
            verify = backup.bind(entity)(verify);
            verify = verify.t;
            verify = verify.czincX;
            verify = romeo.bind(foxtrot)(verify);
            oscar['text'] = verify;
            verify = 6;
            verify = yankee[verify];
            verify = offset.bind(entity)(verify);
            verify = verify.pop;
            oscar['onPress'] = verify;
            oscar = options.bind(entity)(golf, oscar);
            report[1] = oscar;
            mike['children'] = report;
            entity = tango.bind(entity)(zulu, mike);
            return entity;
        };
        report = report.bind(oscar)(entity, mike);
        entity = 11;
        entity = backup[entity];
        mike = romeo.bind(tango)(entity);
        entity = 'FamilyCenterCancelModal should only be rendered for parents.';
        entity = mike.bind(tango)(zulu, entity);
        zulu = _closure1_slot5;
        entity = 12;
        entity = backup[entity];
        mike = romeo.bind(tango)(entity);
        entity = {};
        report = report.bind(tango)();
        entity['footer'] = report;
        oscar = _closure1_slot6;
        report = {};
        verify = _closure1_slot7;
        options = _closure1_slot4;
        golf = {};
        offset = sizing.header;
        golf['style'] = offset;
        offset = 13;
        offset = backup[offset];
        yankee = romeo.bind(tango)(offset);
        offset = {};
        offset['otherUser'] = foxtrot;
        kilo = 14;
        kilo = backup[kilo];
        kilo = romeo.bind(tango)(kilo);
        offset['iconSrc'] = kilo;
        yankee = zulu.bind(tango)(yankee, offset);
        offset = new Array(3);
        offset[0] = yankee;
        yankee = 15;
        yankee = backup[yankee];
        yankee = echo.bind(tango)(yankee);
        kilo = yankee.Text;
        yankee = {};
        sizing = sizing.headerText;
        yankee['style'] = sizing;
        sizing = 'text-lg/bold';
        yankee['variant'] = sizing;
        sizing = 8;
        output = backup[sizing];
        output = echo.bind(tango)(output);
        result = output.intl;
        output = result.string;
        sizing = backup[sizing];
        sizing = echo.bind(tango)(sizing);
        sizing = sizing.t;
        sizing = sizing.HynllZ;
        sizing = output.bind(result)(sizing);
        yankee['children'] = sizing;
        yankee = zulu.bind(tango)(kilo, yankee);
        offset[1] = yankee;
        yankee = 16;
        yankee = backup[yankee];
        romeo = romeo.bind(tango)(yankee);
        yankee = {};
        yankee['user'] = foxtrot;
        yankee = zulu.bind(tango)(romeo, yankee);
        offset[2] = yankee;
        golf['children'] = offset;
        golf = verify.bind(tango)(options, golf);
        report['children'] = golf;
        report = zulu.bind(tango)(oscar, report);
        entity['children'] = report;
        entity = zulu.bind(tango)(mike, entity);
        return entity;
    };
    zulu['default'] = mike;
    return entity;
})();