// app/modules/parent_tools/native/FamilyCenterModalCancel.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    report = argBar;
    yankee = argBaz;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    var _closure1_slot1 = yankee;
    var _closure1_slot2 = oscard;
    entity = global;
    option = entity.Object;
    golfie = option.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(option)(zuuluu, entity, tangon);
    entity = 0;
    golfie = oscard[entity];
    tangon = argCor;
    entity = undefined;
    tangon = tangon.bind(entity)(golfie);
    var _closure1_slot3 = tangon;
    tangon = 1;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.View;
    var _closure1_slot4 = tangon;
    tangon = 2;
    golfie = oscard[tangon];
    golfie = report.bind(entity)(golfie);
    golfie = golfie.jsx;
    var _closure1_slot5 = golfie;
    golfie = oscard[tangon];
    golfie = report.bind(entity)(golfie);
    golfie = golfie.Fragment;
    var _closure1_slot6 = golfie;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.jsxs;
    var _closure1_slot7 = tangon;
    tangon = 3;
    tangon = oscard[tangon];
    option = report.bind(entity)(tangon);
    golfie = option.createStyles;
    tangon = {};
    verify = {'display': 'flex', 'alignItems': 'center', 'justifyContent': 'center'};
    offset = 4;
    romeon = oscard[offset];
    romeon = yankee.bind(entity)(romeon);
    romeon = romeon.spacing;
    romeon = romeon.PX_16;
    verify['marginBottom'] = romeon;
    tangon['header'] = verify;
    verify = {};
    romeon = oscard[offset];
    romeon = yankee.bind(entity)(romeon);
    romeon = romeon.spacing;
    romeon = romeon.PX_16;
    verify['marginTop'] = romeon;
    romeon = oscard[offset];
    romeon = yankee.bind(entity)(romeon);
    romeon = romeon.spacing;
    romeon = romeon.PX_4;
    verify['marginBottom'] = romeon;
    tangon['headerText'] = verify;
    verify = {};
    romeon = oscard[offset];
    romeon = yankee.bind(entity)(romeon);
    romeon = romeon.spacing;
    romeon = romeon.PX_24;
    verify['padding'] = romeon;
    romeon = oscard[offset];
    romeon = yankee.bind(entity)(romeon);
    romeon = romeon.radii;
    romeon = romeon.md;
    verify['borderRadius'] = romeon;
    romeon = oscard[offset];
    romeon = yankee.bind(entity)(romeon);
    romeon = romeon.colors;
    romeon = romeon.BACKGROUND_SECONDARY;
    verify['backgroundColor'] = romeon;
    tangon['body'] = verify;
    verify = {};
    romeon = oscard[offset];
    romeon = yankee.bind(entity)(romeon);
    romeon = romeon.spacing;
    romeon = romeon.PX_4;
    verify['marginBottom'] = romeon;
    tangon['noticeHeader'] = verify;
    verify = {};
    romeon = oscard[offset];
    romeon = yankee.bind(entity)(romeon);
    romeon = romeon.spacing;
    romeon = romeon.PX_4;
    verify['marginBottom'] = romeon;
    tangon['button'] = verify;
    verify = {};
    offset = oscard[offset];
    offset = yankee.bind(entity)(offset);
    offset = offset.colors;
    offset = offset.STATUS_DANGER;
    verify['tintColor'] = offset;
    tangon['icon'] = verify;
    tangon = golfie.bind(option)(tangon);
    var _closure1_slot8 = tangon;
    tangon = 17;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/parent_tools/native/FamilyCenterModalCancel.tsx';
    tangon = report.bind(oscard)(tangon);
    michal = function(argFoo) { // Original name: FamilyCenterModalDecline
        michal = argFoo;
        foxtra = michal.otherUser;
        var _closure2_slot0 = foxtra;
        michal = _closure1_slot8;
        tangon = undefined;
        sizing = michal.bind(tangon)();
        var _closure2_slot1 = sizing;
        romeon = _closure1_slot1;
        backup = _closure1_slot2;
        michal = 5;
        michal = backup[michal];
        michal = romeon.bind(tangon)(michal);
        zuuluu = michal.bind(tangon)();
        oscard = _closure1_slot3;
        option = oscard.useCallback;
        report = function() {
            zuuluu = _closure1_slot1;
            michal = _closure1_slot2;
            entity = 6;
            michal = michal[entity];
            entity = undefined;
            zuuluu = zuuluu.bind(entity)(michal);
            michal = zuuluu.pop;
            michal = michal.bind(zuuluu)();
            return entity;
        };
        michal = new Array(0);
        offset = option.bind(oscard)(report, michal);
        option = oscard.useCallback;
        report = function() {
            golfie = _closure1_slot0;
            option = _closure1_slot2;
            entity = 7;
            michal = option[entity];
            entity = undefined;
            tangon = golfie.bind(entity)(michal);
            zuuluu = tangon.presentFailedToast;
            michal = 8;
            report = option[michal];
            report = golfie.bind(entity)(report);
            oscard = report.intl;
            report = oscard.string;
            michal = option[michal];
            michal = golfie.bind(entity)(michal);
            michal = michal.t;
            michal = michal.R0RpRU;
            michal = report.bind(oscard)(michal);
            michal = zuuluu.bind(tangon)(michal);
            return entity;
        };
        michal = new Array(0);
        verify = option.bind(oscard)(report, michal);
        echoed = _closure1_slot0;
        michal = 9;
        michal = backup[michal];
        option = echoed.bind(tangon)(michal);
        report = option.useFamilyCenterActions;
        michal = {};
        michal['onSuccess'] = offset;
        michal['onError'] = verify;
        report = report.bind(option)(michal);
        michal = report.cancelLinkRequest;
        var _closure2_slot2 = michal;
        option = report.isCancelLoading;
        var _closure2_slot3 = option;
        verify = oscard.useCallback;
        report = new Array(2);
        report[0] = michal;
        report[1] = foxtra;
        michal = function() {
            zuuluu = _closure2_slot2;
            michal = _closure2_slot0;
            entity = undefined;
            michal = zuuluu.bind(entity)(michal);
            return entity;
        };
        verify = verify.bind(oscard)(michal, report);
        var _closure2_slot4 = verify;
        report = oscard.useCallback;
        michal = new Array(3);
        michal[0] = verify;
        michal[1] = option;
        michal[2] = sizing;
        entity = function() {
            tangon = _closure1_slot7;
            zuuluu = _closure1_slot6;
            michal = {};
            option = _closure1_slot5;
            offset = _closure1_slot1;
            yankee = _closure1_slot2;
            romeon = 10;
            report = yankee[romeon];
            entity = undefined;
            oscard = offset.bind(entity)(report);
            report = {};
            foxtra = _closure2_slot3;
            report['disabled'] = foxtra;
            report['loading'] = foxtra;
            kiloes = _closure2_slot1;
            foxtra = kiloes.button;
            report['style'] = foxtra;
            foxtra = 4;
            backup = yankee[foxtra];
            backup = offset.bind(entity)(backup);
            backup = backup.radii;
            backup = backup.xs;
            report['cornerRadius'] = backup;
            backup = yankee[romeon];
            backup = offset.bind(entity)(backup);
            backup = backup.Sizes;
            backup = backup.MEDIUM;
            report['size'] = backup;
            backup = yankee[romeon];
            backup = offset.bind(entity)(backup);
            backup = backup.Colors;
            backup = backup.RED;
            report['color'] = backup;
            backup = _closure1_slot0;
            verify = 8;
            sizing = yankee[verify];
            sizing = backup.bind(entity)(sizing);
            result = sizing.intl;
            output = result.string;
            sizing = yankee[verify];
            sizing = backup.bind(entity)(sizing);
            sizing = sizing.t;
            sizing = sizing.mK40bm;
            sizing = output.bind(result)(sizing);
            report['text'] = sizing;
            golfie = _closure2_slot4;
            report['onPress'] = golfie;
            oscard = option.bind(entity)(oscard, report);
            report = new Array(2);
            report[0] = oscard;
            oscard = yankee[romeon];
            golfie = offset.bind(entity)(oscard);
            oscard = {};
            kiloes = kiloes.button;
            oscard['style'] = kiloes;
            foxtra = yankee[foxtra];
            foxtra = offset.bind(entity)(foxtra);
            foxtra = foxtra.radii;
            foxtra = foxtra.xs;
            oscard['cornerRadius'] = foxtra;
            foxtra = yankee[romeon];
            foxtra = offset.bind(entity)(foxtra);
            foxtra = foxtra.Colors;
            foxtra = foxtra.TRANSPARENT;
            oscard['color'] = foxtra;
            romeon = yankee[romeon];
            romeon = offset.bind(entity)(romeon);
            romeon = romeon.Sizes;
            romeon = romeon.MEDIUM;
            oscard['size'] = romeon;
            romeon = yankee[verify];
            romeon = backup.bind(entity)(romeon);
            foxtra = romeon.intl;
            romeon = foxtra.string;
            verify = yankee[verify];
            verify = backup.bind(entity)(verify);
            verify = verify.t;
            verify = verify.czincX;
            verify = romeon.bind(foxtra)(verify);
            oscard['text'] = verify;
            verify = 6;
            verify = yankee[verify];
            verify = offset.bind(entity)(verify);
            verify = verify.pop;
            oscard['onPress'] = verify;
            oscard = option.bind(entity)(golfie, oscard);
            report[1] = oscard;
            michal['children'] = report;
            entity = tangon.bind(entity)(zuuluu, michal);
            return entity;
        };
        report = report.bind(oscard)(entity, michal);
        entity = 11;
        entity = backup[entity];
        michal = romeon.bind(tangon)(entity);
        entity = 'FamilyCenterCancelModal should only be rendered for parents.';
        entity = michal.bind(tangon)(zuuluu, entity);
        zuuluu = _closure1_slot5;
        entity = 12;
        entity = backup[entity];
        michal = romeon.bind(tangon)(entity);
        entity = {};
        report = report.bind(tangon)();
        entity['footer'] = report;
        oscard = _closure1_slot6;
        report = {};
        verify = _closure1_slot7;
        option = _closure1_slot4;
        golfie = {};
        offset = sizing.header;
        golfie['style'] = offset;
        offset = 13;
        offset = backup[offset];
        yankee = romeon.bind(tangon)(offset);
        offset = {};
        offset['otherUser'] = foxtra;
        kiloes = 14;
        kiloes = backup[kiloes];
        kiloes = romeon.bind(tangon)(kiloes);
        offset['iconSrc'] = kiloes;
        yankee = zuuluu.bind(tangon)(yankee, offset);
        offset = new Array(3);
        offset[0] = yankee;
        yankee = 15;
        yankee = backup[yankee];
        yankee = echoed.bind(tangon)(yankee);
        kiloes = yankee.Text;
        yankee = {};
        sizing = sizing.headerText;
        yankee['style'] = sizing;
        sizing = 'text-lg/bold';
        yankee['variant'] = sizing;
        sizing = 8;
        output = backup[sizing];
        output = echoed.bind(tangon)(output);
        result = output.intl;
        output = result.string;
        sizing = backup[sizing];
        sizing = echoed.bind(tangon)(sizing);
        sizing = sizing.t;
        sizing = sizing.HynllZ;
        sizing = output.bind(result)(sizing);
        yankee['children'] = sizing;
        yankee = zuuluu.bind(tangon)(kiloes, yankee);
        offset[1] = yankee;
        yankee = 16;
        yankee = backup[yankee];
        romeon = romeon.bind(tangon)(yankee);
        yankee = {};
        yankee['user'] = foxtra;
        yankee = zuuluu.bind(tangon)(romeon, yankee);
        offset[2] = yankee;
        golfie['children'] = offset;
        golfie = verify.bind(tangon)(option, golfie);
        report['children'] = golfie;
        report = zuuluu.bind(tangon)(oscard, report);
        entity['children'] = report;
        entity = zuuluu.bind(tangon)(michal, entity);
        return entity;
    };
    zuuluu['default'] = michal;
    return entity;
})();