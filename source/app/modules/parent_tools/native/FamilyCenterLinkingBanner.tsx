// app/modules/parent_tools/native/FamilyCenterLinkingBanner.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    report = argBar;
    romeon = argBaz;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    var _closure1_slot1 = romeon;
    var _closure1_slot2 = oscard;
    entity = function() { // Original name: FamilyCenterLinkingBannerParentContent
        entity = _closure1_slot8;
        tangon = undefined;
        report = entity.bind(tangon)();
        zuuluu = _closure1_slot6;
        michal = _closure1_slot3;
        entity = {};
        report = report.container;
        entity['style'] = report;
        option = _closure1_slot5;
        yankee = _closure1_slot12;
        report = {};
        golfie = 1;
        report['index'] = golfie;
        golfie = _closure1_slot0;
        verify = _closure1_slot2;
        romeon = 7;
        offset = verify[romeon];
        offset = golfie.bind(tangon)(offset);
        backup = offset.intl;
        foxtra = backup.string;
        offset = verify[romeon];
        offset = golfie.bind(tangon)(offset);
        offset = offset.t;
        offset = offset.7xxAnp;
        offset = foxtra.bind(backup)(offset);
        report['header'] = offset;
        offset = verify[romeon];
        offset = golfie.bind(tangon)(offset);
        backup = offset.intl;
        foxtra = backup.string;
        offset = verify[romeon];
        offset = golfie.bind(tangon)(offset);
        offset = offset.t;
        offset = offset.1M9So6;
        offset = foxtra.bind(backup)(offset);
        report['description'] = offset;
        option = option.bind(tangon)(yankee, report);
        report = new Array(4);
        report[0] = option;
        offset = _closure1_slot5;
        option = {};
        foxtra = 2;
        option['index'] = foxtra;
        foxtra = verify[romeon];
        foxtra = golfie.bind(tangon)(foxtra);
        kiloes = foxtra.intl;
        backup = kiloes.string;
        foxtra = verify[romeon];
        foxtra = golfie.bind(tangon)(foxtra);
        foxtra = foxtra.t;
        foxtra = foxtra.AXgx+f;
        foxtra = backup.bind(kiloes)(foxtra);
        option['header'] = foxtra;
        foxtra = verify[romeon];
        foxtra = golfie.bind(tangon)(foxtra);
        kiloes = foxtra.intl;
        backup = kiloes.string;
        foxtra = verify[romeon];
        foxtra = golfie.bind(tangon)(foxtra);
        foxtra = foxtra.t;
        foxtra = foxtra.GzMFnZ;
        foxtra = backup.bind(kiloes)(foxtra);
        option['description'] = foxtra;
        option = offset.bind(tangon)(yankee, option);
        report[1] = option;
        offset = _closure1_slot5;
        option = {};
        foxtra = 3;
        option['index'] = foxtra;
        foxtra = verify[romeon];
        foxtra = golfie.bind(tangon)(foxtra);
        kiloes = foxtra.intl;
        backup = kiloes.string;
        foxtra = verify[romeon];
        foxtra = golfie.bind(tangon)(foxtra);
        foxtra = foxtra.t;
        foxtra = foxtra.MZn1tL;
        foxtra = backup.bind(kiloes)(foxtra);
        option['header'] = foxtra;
        foxtra = verify[romeon];
        foxtra = golfie.bind(tangon)(foxtra);
        backup = foxtra.intl;
        foxtra = backup.string;
        romeon = verify[romeon];
        romeon = golfie.bind(tangon)(romeon);
        romeon = romeon.t;
        romeon = romeon.8rLBxM;
        romeon = foxtra.bind(backup)(romeon);
        option['description'] = romeon;
        romeon = true;
        option['isLast'] = romeon;
        option = offset.bind(tangon)(yankee, option);
        report[2] = option;
        option = _closure1_slot5;
        oscard = 11;
        oscard = verify[oscard];
        oscard = golfie.bind(tangon)(oscard);
        golfie = oscard.FamilyCenterParentQRCodeButton;
        oscard = {};
        oscard = option.bind(tangon)(golfie, oscard);
        report[3] = oscard;
        entity['children'] = report;
        entity = zuuluu.bind(tangon)(michal, entity);
        return entity;
    };
    var _closure1_slot10 = entity;
    entity = function() { // Original name: FamilyCenterLinkingBannerTeenContent
        tangon = _closure1_slot5;
        zuuluu = _closure1_slot3;
        michal = {};
        oscard = _closure1_slot0;
        report = _closure1_slot2;
        entity = 11;
        report = report[entity];
        entity = undefined;
        report = oscard.bind(entity)(report);
        oscard = report.FamilyCenterTeenQRCodeButton;
        report = {};
        report = tangon.bind(entity)(oscard, report);
        michal['children'] = report;
        entity = tangon.bind(entity)(zuuluu, michal);
        return entity;
    };
    var _closure1_slot11 = entity;
    entity = function(argFoo) { // Original name: FamilyCenterLinkingInstructionsRow
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            entity = argFoo;
            output = entity.header;
            foxtra = entity.description;
            sizing = entity.index;
            kiloes = entity.isLast;
            entity = _closure1_slot9;
            tangon = undefined;
            yankee = entity.bind(tangon)();
            zuuluu = _closure1_slot6;
            michal = _closure1_slot3;
            entity = {};
            report = yankee.row;
            entity['style'] = report;
            golfie = _closure1_slot5;
            oscard = _closure1_slot3;
            report = {};
            option = yankee.circle;
            report['style'] = option;
            offset = _closure1_slot5;
            verify = _closure1_slot0;
            option = _closure1_slot2;
            backup = 9;
            option = option[backup];
            option = verify.bind(tangon)(option);
            verify = option.Text;
            option = {'variant': 'heading-md/semibold', 'color': 'text-brand'};
            option['children'] = sizing;
            option = offset.bind(tangon)(verify, option);
            report['children'] = option;
            oscard = golfie.bind(tangon)(oscard, report);
            report = new Array(2);
            report[0] = oscard;
            option = _closure1_slot6;
            golfie = _closure1_slot3;
            oscard = {};
            offset = yankee.rowContent;
            verify = new Array(2);
            verify[0] = offset;
            offset = null;
            if(kiloes) { _fun00002_ip = 183; continue _fun00001 }
 177:
            offset = yankee.gap;
 183:
            verify[1] = offset;
            oscard['style'] = verify;
            sizing = _closure1_slot5;
            yankee = _closure1_slot0;
            offset = _closure1_slot2;
            verify = offset[backup];
            verify = yankee.bind(tangon)(verify);
            kiloes = verify.Text;
            verify = {};
            result = 'heading-sm/bold';
            verify['variant'] = result;
            verify['children'] = output;
            kiloes = sizing.bind(tangon)(kiloes, verify);
            verify = new Array(2);
            verify[0] = kiloes;
            romeon = _closure1_slot5;
            offset = offset[backup];
            offset = yankee.bind(tangon)(offset);
            yankee = offset.Text;
            offset = {'variant': 'text-sm/medium', 'color': 'text-muted'};
            offset['children'] = foxtra;
            offset = romeon.bind(tangon)(yankee, offset);
            verify[1] = offset;
            oscard['children'] = verify;
            oscard = option.bind(tangon)(golfie, oscard);
            report[1] = oscard;
            entity['children'] = report;
            entity = zuuluu.bind(tangon)(michal, entity);
            return entity;
        }
    };
    var _closure1_slot12 = entity;
    entity = global;
    option = entity.Object;
    golfie = option.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(option)(zuuluu, entity, tangon);
    entity = 0;
    golfie = oscard[entity];
    tangon = argCor;
    entity = undefined;
    tangon = tangon.bind(entity)(golfie);
    tangon = 1;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    golfie = tangon.View;
    var _closure1_slot3 = golfie;
    tangon = tangon.Image;
    var _closure1_slot4 = tangon;
    tangon = 2;
    golfie = oscard[tangon];
    golfie = report.bind(entity)(golfie);
    golfie = golfie.jsx;
    var _closure1_slot5 = golfie;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.jsxs;
    var _closure1_slot6 = tangon;
    tangon = 3;
    golfie = oscard[tangon];
    verify = report.bind(entity)(golfie);
    option = verify.createStyles;
    golfie = {};
    offset = {'backgroundColor': null, 'marginVertical': null, 'paddingTop': 0, 'alignItems': 'center', 'borderRadius': null, 'elevation': 2, 'overflow': 'hidden'};
    yankee = 4;
    foxtra = oscard[yankee];
    foxtra = romeon.bind(entity)(foxtra);
    foxtra = foxtra.colors;
    foxtra = foxtra.BACKGROUND_PRIMARY;
    offset['backgroundColor'] = foxtra;
    foxtra = oscard[yankee];
    foxtra = romeon.bind(entity)(foxtra);
    foxtra = foxtra.spacing;
    foxtra = foxtra.PX_16;
    offset['marginVertical'] = foxtra;
    foxtra = oscard[yankee];
    foxtra = romeon.bind(entity)(foxtra);
    foxtra = foxtra.radii;
    foxtra = foxtra.md;
    offset['borderRadius'] = foxtra;
    golfie['container'] = offset;
    offset = {};
    foxtra = oscard[yankee];
    foxtra = romeon.bind(entity)(foxtra);
    foxtra = foxtra.spacing;
    foxtra = foxtra.PX_16;
    offset['padding'] = foxtra;
    golfie['content'] = offset;
    offset = {'width': '100%', 'height': 175};
    foxtra = '100%';
    backup = oscard[yankee];
    backup = romeon.bind(entity)(backup);
    backup = backup.spacing;
    backup = backup.PX_12;
    offset['marginBottom'] = backup;
    golfie['art'] = offset;
    offset = {};
    backup = oscard[yankee];
    backup = romeon.bind(entity)(backup);
    backup = backup.spacing;
    backup = backup.PX_8;
    offset['marginBottom'] = backup;
    golfie['header'] = offset;
    golfie = option.bind(verify)(golfie);
    var _closure1_slot7 = golfie;
    golfie = oscard[tangon];
    verify = report.bind(entity)(golfie);
    option = verify.createStyles;
    golfie = {};
    offset = {};
    backup = oscard[yankee];
    backup = romeon.bind(entity)(backup);
    backup = backup.spacing;
    backup = backup.PX_8;
    offset['marginTop'] = backup;
    backup = oscard[yankee];
    backup = romeon.bind(entity)(backup);
    backup = backup.spacing;
    backup = backup.PX_16;
    offset['paddingHorizontal'] = backup;
    offset['width'] = foxtra;
    golfie['container'] = offset;
    golfie = option.bind(verify)(golfie);
    var _closure1_slot8 = golfie;
    tangon = oscard[tangon];
    verify = report.bind(entity)(tangon);
    option = verify.createStyles;
    golfie = {};
    tangon = {'display': 'flex', 'flexDirection': 'row', 'alignItems': 'flex-start'};
    golfie['row'] = tangon;
    offset = {};
    tangon = 12;
    offset['marginBottom'] = tangon;
    golfie['gap'] = offset;
    offset = {'display': 'flex', 'flexDirection': 'column', 'justifyContent': 'center', 'alignItems': 'center', 'overflow': 'hidden', 'width': 32, 'height': 32};
    foxtra = oscard[yankee];
    foxtra = romeon.bind(entity)(foxtra);
    foxtra = foxtra.radii;
    foxtra = foxtra.round;
    offset['borderRadius'] = foxtra;
    yankee = oscard[yankee];
    yankee = romeon.bind(entity)(yankee);
    yankee = yankee.colors;
    yankee = yankee.BACKGROUND_SECONDARY_ALT;
    offset['backgroundColor'] = yankee;
    golfie['circle'] = offset;
    offset = {'marginLeft': 12, 'flex': 1};
    golfie['rowContent'] = offset;
    golfie = option.bind(verify)(golfie);
    var _closure1_slot9 = golfie;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/parent_tools/native/FamilyCenterLinkingBanner.tsx';
    tangon = report.bind(oscard)(tangon);
    michal = function() { // Original name: FamilyCenterLinkingBanner
        _fun00003: for(var _fun00004_ip = 0; ; ) switch(_fun00004_ip) {
 0:
            entity = _closure1_slot7;
            tangon = undefined;
            result = entity.bind(tangon)();
            yankee = _closure1_slot1;
            sizing = _closure1_slot2;
            entity = 5;
            entity = sizing[entity];
            entity = yankee.bind(tangon)(entity);
            golfie = entity.bind(tangon)();
            foxtra = _closure1_slot0;
            michal = 6;
            entity = sizing[michal];
            verify = foxtra.bind(tangon)(entity);
            option = verify.useAgeSpecificText;
            entity = 7;
            zuuluu = sizing[entity];
            zuuluu = foxtra.bind(tangon)(zuuluu);
            offset = zuuluu.intl;
            report = offset.string;
            zuuluu = sizing[entity];
            zuuluu = foxtra.bind(tangon)(zuuluu);
            zuuluu = zuuluu.t;
            zuuluu = zuuluu.zUCWEB;
            report = report.bind(offset)(zuuluu);
            zuuluu = sizing[entity];
            zuuluu = foxtra.bind(tangon)(zuuluu);
            romeon = zuuluu.intl;
            offset = romeon.string;
            zuuluu = sizing[entity];
            zuuluu = foxtra.bind(tangon)(zuuluu);
            zuuluu = zuuluu.t;
            zuuluu = zuuluu.B0NPbm;
            zuuluu = offset.bind(romeon)(zuuluu);
            output = option.bind(verify)(report, zuuluu);
            michal = sizing[michal];
            report = foxtra.bind(tangon)(michal);
            zuuluu = report.useAgeSpecificText;
            michal = sizing[entity];
            michal = foxtra.bind(tangon)(michal);
            offset = michal.intl;
            verify = offset.format;
            michal = sizing[entity];
            michal = foxtra.bind(tangon)(michal);
            michal = michal.t;
            option = michal.yMnoDg;
            michal = {};
            romeon = 'https://support.discord.com/hc/articles/14155060633623';
            michal['link'] = romeon;
            michal = verify.bind(offset)(option, michal);
            option = sizing[entity];
            option = foxtra.bind(tangon)(option);
            verify = option.intl;
            option = verify.string;
            entity = sizing[entity];
            entity = foxtra.bind(tangon)(entity);
            entity = entity.t;
            entity = entity.JsAEDg;
            entity = option.bind(verify)(entity);
            kiloes = zuuluu.bind(report)(michal, entity);
            zuuluu = _closure1_slot6;
            michal = _closure1_slot3;
            entity = {};
            report = result.container;
            entity['style'] = report;
            verify = _closure1_slot5;
            option = _closure1_slot4;
            report = {};
            offset = 8;
            offset = sizing[offset];
            offset = yankee.bind(tangon)(offset);
            report['source'] = offset;
            offset = result.art;
            report['style'] = offset;
            offset = 'resize';
            report['resizeMethod'] = offset;
            option = verify.bind(tangon)(option, report);
            report = new Array(3);
            report[0] = option;
            offset = _closure1_slot6;
            verify = _closure1_slot3;
            option = {};
            yankee = result.content;
            option['style'] = yankee;
            backup = _closure1_slot5;
            yankee = 9;
            yankee = sizing[yankee];
            yankee = foxtra.bind(tangon)(yankee);
            romeon = yankee.Text;
            yankee = {};
            result = result.header;
            yankee['style'] = result;
            result = 'heading-lg/semibold';
            yankee['variant'] = result;
            yankee['children'] = output;
            romeon = backup.bind(tangon)(romeon, yankee);
            yankee = new Array(2);
            yankee[0] = romeon;
            backup = _closure1_slot5;
            romeon = 10;
            romeon = sizing[romeon];
            romeon = foxtra.bind(tangon)(romeon);
            foxtra = romeon.TextWithIOSLinkWorkaround;
            romeon = {'variant': 'text-sm/medium', 'color': 'text-muted'};
            romeon['children'] = kiloes;
            romeon = backup.bind(tangon)(foxtra, romeon);
            yankee[1] = romeon;
            option['children'] = yankee;
            option = offset.bind(tangon)(verify, option);
            report[1] = option;
            option = _closure1_slot5;
            if(golfie) { _fun00004_ip = 523; continue _fun00003 }
 517:
            golfie = _closure1_slot11;
            _fun00004_ip = 527; continue _fun00003;
 523:
            golfie = _closure1_slot10;
 527:
            oscard = {};
            oscard = option.bind(tangon)(golfie, oscard);
            report[2] = oscard;
            entity['children'] = report;
            entity = zuuluu.bind(tangon)(michal, entity);
            return entity;
        }
    };
    zuuluu['default'] = michal;
    return entity;
})();