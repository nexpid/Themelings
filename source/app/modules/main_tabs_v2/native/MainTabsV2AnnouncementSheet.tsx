// app/modules/main_tabs_v2/native/MainTabsV2AnnouncementSheet.tsx
export default (function(argFoo, argBar, argBaz, argCorge, _, argFred, argPlugh) {
    report = argBar;
    romeo = argBaz;
    zulu = argFred;
    oscar = argPlugh;
    var _closure1_slot0 = report;
    var _closure1_slot1 = romeo;
    var _closure1_slot2 = oscar;
    entity = function(argFoo) { // Original name: ListItemRow
        entity = argFoo;
        yankee = entity.image;
        verify = entity.text;
        entity = _closure1_slot11;
        tango = undefined;
        offset = entity.bind(tango)();
        zulu = _closure1_slot9;
        mike = _closure1_slot5;
        entity = {};
        report = offset.listItem;
        entity['style'] = report;
        options = _closure1_slot8;
        golf = _closure1_slot4;
        report = {};
        report['source'] = yankee;
        yankee = offset.listItemImage;
        report['style'] = yankee;
        golf = options.bind(tango)(golf, report);
        report = new Array(2);
        report[0] = golf;
        options = _closure1_slot8;
        golf = _closure1_slot0;
        yankee = _closure1_slot2;
        oscar = 7;
        oscar = yankee[oscar];
        oscar = golf.bind(tango)(oscar);
        golf = oscar.Text;
        oscar = {};
        yankee = 'text-sm/medium';
        oscar['variant'] = yankee;
        offset = offset.listItemText;
        oscar['style'] = offset;
        oscar['children'] = verify;
        oscar = options.bind(tango)(golf, oscar);
        report[1] = oscar;
        entity['children'] = report;
        entity = zulu.bind(tango)(mike, entity);
        return entity;
    };
    var _closure1_slot12 = entity;
    entity = global;
    options = entity.Object;
    golf = options.defineProperty;
    tango = {};
    entity = true;
    tango['value'] = entity;
    entity = '__esModule';
    entity = golf.bind(options)(zulu, entity, tango);
    entity = 0;
    golf = oscar[entity];
    tango = argCorge;
    entity = undefined;
    golf = tango.bind(entity)(golf);
    var _closure1_slot3 = golf;
    foxtrot = 1;
    tango = oscar[foxtrot];
    tango = report.bind(entity)(tango);
    options = tango.Image;
    var _closure1_slot4 = options;
    tango = tango.View;
    var _closure1_slot5 = tango;
    tango = 2;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.HelpdeskArticles;
    var _closure1_slot6 = tango;
    tango = 3;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.ContentDismissActionType;
    var _closure1_slot7 = tango;
    tango = 4;
    options = oscar[tango];
    options = report.bind(entity)(options);
    options = options.jsx;
    var _closure1_slot8 = options;
    options = oscar[tango];
    options = report.bind(entity)(options);
    options = options.jsxs;
    var _closure1_slot9 = options;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.Fragment;
    var _closure1_slot10 = tango;
    tango = 5;
    tango = oscar[tango];
    verify = report.bind(entity)(tango);
    options = verify.createStyles;
    tango = {};
    backup = 'center';
    offset = {'flex': 1, 'alignItems': 'center'};
    tango['container'] = offset;
    offset = {};
    yankee = 6;
    kilo = oscar[yankee];
    kilo = romeo.bind(entity)(kilo);
    kilo = kilo.colors;
    kilo = kilo.BG_BASE_PRIMARY;
    offset['backgroundColor'] = kilo;
    tango['header'] = offset;
    offset = {'marginVertical': 24, 'textAlign': 'center'};
    tango['title'] = offset;
    offset = {};
    offset['textAlign'] = backup;
    tango['body'] = offset;
    offset = {'paddingHorizontal': 8, 'width': '100%'};
    tango['listContainer'] = offset;
    backup = 16;
    offset = {'flexDirection': 'row', 'alignItems': 'center', 'marginBottom': 16};
    tango['listItem'] = offset;
    offset = {};
    offset['marginRight'] = backup;
    tango['listItemImage'] = offset;
    offset = {};
    offset['flexShrink'] = foxtrot;
    tango['listItemText'] = offset;
    offset = {'position': 'relative', 'bottom': 4294967276, 'width': '100%', 'height': 56};
    tango['gradient'] = offset;
    offset = {'height': 44, 'borderRadius': null, 'flexGrow': 0, 'marginHorizontal': 32, 'marginBottom': 8};
    foxtrot = oscar[yankee];
    foxtrot = romeo.bind(entity)(foxtrot);
    foxtrot = foxtrot.radii;
    foxtrot = foxtrot.xxl;
    offset['borderRadius'] = foxtrot;
    tango['button'] = offset;
    offset = {};
    foxtrot = oscar[yankee];
    foxtrot = romeo.bind(entity)(foxtrot);
    foxtrot = foxtrot.colors;
    foxtrot = foxtrot.BG_BASE_PRIMARY;
    offset['color'] = foxtrot;
    tango['gradientBackground'] = offset;
    offset = {};
    yankee = oscar[yankee];
    yankee = romeo.bind(entity)(yankee);
    yankee = yankee.colors;
    yankee = yankee.BG_BASE_PRIMARY;
    offset['backgroundColor'] = yankee;
    tango['buttonWrapper'] = offset;
    tango = options.bind(verify)(tango);
    var _closure1_slot11 = tango;
    tango = golf.memo;
    mike = function(argFoo) { // Original name: MainTabsV2AnnouncementSheet
        entity = argFoo;
        entity = entity.markAsDismissed;
        var _closure2_slot0 = entity;
        mike = _closure1_slot11;
        tango = undefined;
        result = mike.bind(tango)();
        report = _closure1_slot3;
        zulu = report.useCallback;
        mike = new Array(1);
        mike[0] = entity;
        entity = function() {
            tango = _closure2_slot0;
            entity = _closure1_slot7;
            zulu = entity.UNKNOWN;
            entity = undefined;
            zulu = tango.bind(entity)(zulu);
            zulu = _closure1_slot1;
            tango = _closure1_slot2;
            mike = 8;
            mike = tango[mike];
            zulu = zulu.bind(entity)(mike);
            mike = zulu.hideActionSheet;
            mike = mike.bind(zulu)();
            return entity;
        };
        control = zulu.bind(report)(entity, mike);
        var _closure2_slot1 = control;
        zulu = report.useEffect;
        mike = new Array(1);
        mike[0] = control;
        entity = function() {
            entity = function() {
                mike = _closure2_slot1;
                entity = undefined;
                entity = mike.bind(entity)();
                return entity;
            };
            return entity;
        };
        entity = zulu.bind(report)(entity, mike);
        vacuum = _closure1_slot1;
        source = _closure1_slot2;
        entity = 9;
        entity = source[entity];
        entity = vacuum.bind(tango)(entity);
        entity = entity.bind(tango)();
        yankee = entity.bottom;
        entity = result.gradientBackground;
        entity = entity.color;
        output = _closure1_slot0;
        mike = 10;
        mike = source[mike];
        report = output.bind(tango)(mike);
        zulu = report.hexWithOpacity;
        mike = 0;
        mike = zulu.bind(report)(entity, mike);
        romeo = new Array(2);
        romeo[0] = mike;
        romeo[1] = entity;
        zulu = _closure1_slot8;
        entity = 11;
        entity = source[entity];
        entity = output.bind(tango)(entity);
        mike = entity.BottomSheet;
        entity = {};
        backup = true;
        entity['startExpanded'] = backup;
        golf = _closure1_slot8;
        report = 12;
        report = source[report];
        report = output.bind(tango)(report);
        oscar = report.BottomSheetTitleHeader;
        report = {};
        options = '';
        report['title'] = options;
        options = result.header;
        report['titleContainerStyle'] = options;
        offset = _closure1_slot8;
        options = 13;
        options = source[options];
        options = output.bind(tango)(options);
        verify = options.ActionSheetCloseButton;
        options = {};
        options['onPress'] = control;
        options = offset.bind(tango)(verify, options);
        report['trailing'] = options;
        report = golf.bind(tango)(oscar, report);
        entity['header'] = report;
        golf = _closure1_slot9;
        oscar = _closure1_slot10;
        report = {};
        offset = _closure1_slot8;
        options = 14;
        options = source[options];
        verify = vacuum.bind(tango)(options);
        options = {};
        options['colors'] = romeo;
        romeo = result.gradient;
        options['style'] = romeo;
        romeo = [0, 0.6];
        options['locations'] = romeo;
        verify = offset.bind(tango)(verify, options);
        options = new Array(2);
        options[0] = verify;
        romeo = _closure1_slot8;
        verify = 15;
        verify = source[verify];
        verify = output.bind(tango)(verify);
        offset = verify.SafeAreaPaddingView;
        verify = {};
        verify['bottom'] = backup;
        backup = result.buttonWrapper;
        verify['style'] = backup;
        echo = _closure1_slot8;
        backup = 16;
        backup = source[backup];
        kilo = vacuum.bind(tango)(backup);
        backup = {};
        sizing = 17;
        sequence = source[sizing];
        sequence = output.bind(tango)(sequence);
        record = sequence.intl;
        config = record.string;
        sequence = source[sizing];
        sequence = output.bind(tango)(sequence);
        sequence = sequence.t;
        sequence = sequence.hBm+cX;
        sequence = config.bind(record)(sequence);
        backup['text'] = sequence;
        sequence = result.button;
        backup['style'] = sequence;
        backup['onPress'] = control;
        backup = echo.bind(tango)(kilo, backup);
        verify['children'] = backup;
        verify = romeo.bind(tango)(offset, verify);
        options[1] = verify;
        report['children'] = options;
        report = golf.bind(tango)(oscar, report);
        entity['footer'] = report;
        golf = _closure1_slot9;
        oscar = _closure1_slot5;
        report = {};
        verify = result.container;
        options = new Array(2);
        options[0] = verify;
        verify = {};
        offset = 36;
        yankee = yankee + offset;
        offset = 44;
        offset = yankee + offset;
        verify['paddingBottom'] = offset;
        options[1] = verify;
        report['style'] = options;
        offset = _closure1_slot8;
        verify = _closure1_slot4;
        options = {};
        yankee = 18;
        yankee = source[yankee];
        yankee = vacuum.bind(tango)(yankee);
        options['source'] = yankee;
        verify = offset.bind(tango)(verify, options);
        options = new Array(3);
        options[0] = verify;
        yankee = _closure1_slot8;
        verify = 7;
        verify = source[verify];
        verify = output.bind(tango)(verify);
        offset = verify.Text;
        verify = {};
        romeo = 'heading-xl/bold';
        verify['variant'] = romeo;
        romeo = result.title;
        verify['style'] = romeo;
        romeo = source[sizing];
        romeo = output.bind(tango)(romeo);
        kilo = romeo.intl;
        backup = kilo.string;
        romeo = source[sizing];
        romeo = output.bind(tango)(romeo);
        romeo = romeo.t;
        romeo = romeo.orML/v;
        romeo = backup.bind(kilo)(romeo);
        verify['children'] = romeo;
        verify = yankee.bind(tango)(offset, verify);
        options[1] = verify;
        yankee = _closure1_slot9;
        offset = _closure1_slot5;
        verify = {};
        romeo = result.listContainer;
        verify['style'] = romeo;
        backup = _closure1_slot8;
        echo = _closure1_slot12;
        romeo = {};
        kilo = 19;
        kilo = source[kilo];
        kilo = vacuum.bind(tango)(kilo);
        romeo['image'] = kilo;
        kilo = source[sizing];
        kilo = output.bind(tango)(kilo);
        sequence = kilo.intl;
        control = sequence.string;
        kilo = source[sizing];
        kilo = output.bind(tango)(kilo);
        kilo = kilo.t;
        kilo = kilo.kxNf2t;
        kilo = control.bind(sequence)(kilo);
        romeo['text'] = kilo;
        backup = backup.bind(tango)(echo, romeo);
        romeo = new Array(4);
        romeo[0] = backup;
        kilo = _closure1_slot8;
        backup = {};
        control = 20;
        control = source[control];
        control = vacuum.bind(tango)(control);
        backup['image'] = control;
        control = source[sizing];
        control = output.bind(tango)(control);
        config = control.intl;
        sequence = config.string;
        control = source[sizing];
        control = output.bind(tango)(control);
        control = control.t;
        control = control.g2/d+f;
        control = sequence.bind(config)(control);
        backup['text'] = control;
        backup = kilo.bind(tango)(echo, backup);
        romeo[1] = backup;
        kilo = _closure1_slot8;
        backup = {};
        control = 21;
        control = source[control];
        control = vacuum.bind(tango)(control);
        backup['image'] = control;
        control = source[sizing];
        control = output.bind(tango)(control);
        sequence = control.intl;
        vacuum = sequence.string;
        control = source[sizing];
        control = output.bind(tango)(control);
        control = control.t;
        control = control.R5uhUF;
        control = vacuum.bind(sequence)(control);
        backup['text'] = control;
        backup = kilo.bind(tango)(echo, backup);
        romeo[2] = backup;
        kilo = _closure1_slot8;
        foxtrot = 22;
        foxtrot = source[foxtrot];
        foxtrot = output.bind(tango)(foxtrot);
        backup = foxtrot.TextWithIOSLinkWorkaround;
        foxtrot = {};
        echo = 'text-md/normal';
        foxtrot['variant'] = echo;
        result = result.body;
        foxtrot['style'] = result;
        result = source[sizing];
        result = output.bind(tango)(result);
        echo = result.intl;
        result = echo.format;
        sizing = source[sizing];
        sizing = output.bind(tango)(sizing);
        sizing = sizing.t;
        output = sizing.608/Ag;
        sizing = {};
        update = function() { // Original name: onPress
            mike = _closure2_slot1;
            entity = undefined;
            mike = mike.bind(entity)();
            zulu = _closure1_slot1;
            report = _closure1_slot2;
            tango = 23;
            tango = report[tango];
            oscar = zulu.bind(entity)(tango);
            tango = oscar.getArticleURL;
            mike = _closure1_slot6;
            mike = mike.NEW_LAYOUT;
            tango = tango.bind(oscar)(mike);
            mike = 24;
            mike = report[mike];
            zulu = zulu.bind(entity)(mike);
            mike = zulu.openURL;
            mike = mike.bind(zulu)(tango);
            return entity;
        };
        sizing['onPress'] = update;
        sizing = result.bind(echo)(output, sizing);
        foxtrot['children'] = sizing;
        foxtrot = kilo.bind(tango)(backup, foxtrot);
        romeo[3] = foxtrot;
        verify['children'] = romeo;
        verify = yankee.bind(tango)(offset, verify);
        options[2] = verify;
        report['children'] = options;
        report = golf.bind(tango)(oscar, report);
        entity['children'] = report;
        entity = zulu.bind(tango)(mike, entity);
        return entity;
    };
    mike = tango.bind(golf)(mike);
    tango = 25;
    tango = oscar[tango];
    oscar = report.bind(entity)(tango);
    report = oscar.fileFinishedImporting;
    tango = 'modules/main_tabs_v2/native/MainTabsV2AnnouncementSheet.tsx';
    tango = report.bind(oscar)(tango);
    zulu['default'] = mike;
    return entity;
})();