// app/modules/main_tabs_v2/native/friends/screens/AddFriendScreen.tsx
export default (function(argFoo, argBar, argBaz, argCorge, _, argFred, argPlugh) {
    report = argBar;
    romeo = argBaz;
    zulu = argFred;
    oscar = argPlugh;
    var _closure1_slot0 = report;
    var _closure1_slot1 = romeo;
    var _closure1_slot2 = oscar;
    entity = global;
    options = entity.Object;
    golf = options.defineProperty;
    tango = {};
    entity = true;
    tango['value'] = entity;
    entity = '__esModule';
    entity = golf.bind(options)(zulu, entity, tango);
    offset = 0;
    tango = oscar[offset];
    entity = undefined;
    tango = romeo.bind(entity)(tango);
    var _closure1_slot3 = tango;
    tango = 1;
    golf = oscar[tango];
    tango = argCorge;
    tango = tango.bind(entity)(golf);
    var _closure1_slot4 = tango;
    tango = 2;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    golf = tango.Platform;
    golf = tango.View;
    var _closure1_slot5 = golf;
    tango = tango.ScrollView;
    var _closure1_slot6 = tango;
    tango = 3;
    tango = oscar[tango];
    tango = romeo.bind(entity)(tango);
    var _closure1_slot7 = tango;
    tango = 4;
    tango = oscar[tango];
    tango = romeo.bind(entity)(tango);
    var _closure1_slot8 = tango;
    tango = 5;
    tango = oscar[tango];
    tango = romeo.bind(entity)(tango);
    var _closure1_slot9 = tango;
    tango = 6;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    golf = tango.AnalyticEvents;
    var _closure1_slot10 = golf;
    tango = tango.GuildFeatures;
    var _closure1_slot11 = tango;
    tango = 7;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.ContactPermissions;
    var _closure1_slot12 = tango;
    foxtrot = 8;
    tango = oscar[foxtrot];
    tango = report.bind(entity)(tango);
    tango = tango.jsx;
    var _closure1_slot13 = tango;
    tango = oscar[foxtrot];
    tango = report.bind(entity)(tango);
    tango = tango.jsxs;
    var _closure1_slot14 = tango;
    tango = oscar[foxtrot];
    tango = report.bind(entity)(tango);
    tango = tango.Fragment;
    var _closure1_slot15 = tango;
    tango = 9;
    tango = oscar[tango];
    options = report.bind(entity)(tango);
    golf = options.createStyles;
    tango = {};
    yankee = 16;
    verify = {'marginTop': 32, 'marginHorizontal': 16, 'textAlign': 'center'};
    tango['headerText'] = verify;
    verify = {'marginVertical': 8, 'marginHorizontal': 16, 'textAlign': 'center'};
    tango['subheaderText'] = verify;
    verify = {};
    verify['marginTop'] = yankee;
    yankee = 10;
    backup = oscar[yankee];
    backup = romeo.bind(entity)(backup);
    backup = backup.colors;
    backup = backup.BG_BASE_SECONDARY;
    verify['backgroundColor'] = backup;
    tango['input'] = verify;
    verify = {'marginTop': 16, 'paddingHorizontal': 16};
    tango['otherOptionsContainer'] = verify;
    verify = {};
    verify['marginTop'] = foxtrot;
    tango['rowContainer'] = verify;
    verify = {};
    foxtrot = 20;
    verify['borderRadius'] = foxtrot;
    tango['hubIcon'] = verify;
    verify = {};
    yankee = oscar[yankee];
    yankee = romeo.bind(entity)(yankee);
    yankee = yankee.colors;
    yankee = yankee.BG_BASE_SECONDARY;
    verify['backgroundColor'] = yankee;
    tango['background'] = verify;
    verify = {};
    verify['marginHorizontal'] = offset;
    tango['shareButton'] = verify;
    tango = golf.bind(options)(tango);
    var _closure1_slot16 = tango;
    tango = 24;
    tango = oscar[tango];
    oscar = report.bind(entity)(tango);
    report = oscar.fileFinishedImporting;
    tango = 'modules/main_tabs_v2/native/friends/screens/AddFriendScreen.tsx';
    tango = report.bind(oscar)(tango);
    mike = function(argFoo) { // Original name: AddFriendScreen
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            entity = argFoo;
            oscar = entity.navigation;
            var _closure2_slot0 = oscar;
            entity = entity.route;
            entity = entity.params;
            romeo = entity.sourcePage;
            entity = _closure1_slot16;
            tango = undefined;
            update = entity.bind(tango)();
            var _closure2_slot1 = update;
            control = _closure1_slot0;
            vacuum = _closure1_slot2;
            mike = 11;
            entity = vacuum[mike];
            zulu = control.bind(tango)(entity);
            entity = zulu.useContactSyncAccount;
            entity = entity.bind(zulu)();
            var _closure2_slot2 = entity;
            report = _closure1_slot4;
            zulu = report.useState;
            mike = vacuum[mike];
            golf = control.bind(tango)(mike);
            mike = golf.isContactSyncEnabled;
            mike = mike.bind(golf)(entity);
            mike = !mike;
            golf = zulu.bind(report)(mike);
            zulu = _closure1_slot3;
            mike = 2;
            zulu = zulu.bind(tango)(golf, mike);
            mike = 0;
            output = zulu[mike];
            mike = 1;
            mike = zulu[mike];
            var _closure2_slot3 = mike;
            golf = report.useCallback;
            zulu = function() {
                _fun00003: for(var _fun00004_ip = 0; ; ) switch(_fun00004_ip) {
 0:
                    zulu = _closure1_slot9;
                    entity = zulu.getCurrentUser;
                    report = entity.bind(zulu)();
                    entity = null;
                    zulu = entity != report;
                    entity = undefined;
                    verify = undefined;
                    if(!zulu) { _fun00004_ip = 60; continue _fun00003 }
 29:
                    tango = _closure1_slot1;
                    oscar = _closure1_slot2;
                    zulu = 12;
                    zulu = oscar[zulu];
                    tango = tango.bind(entity)(zulu);
                    zulu = tango.getUserTag;
                    verify = zulu.bind(tango)(report);
 60:
                    report = _closure1_slot1;
                    tango = _closure1_slot2;
                    zulu = 13;
                    zulu = tango[zulu];
                    options = report.bind(entity)(zulu);
                    golf = options.track;
                    zulu = _closure1_slot10;
                    oscar = zulu.FRIEND_ADD_VIEWED;
                    report = 'Add Friend Modal';
                    zulu = {'friend_add_type': 'Invite', 'source_page': 'Add Friend Modal'};
                    zulu = golf.bind(options)(oscar, zulu);
                    zulu = _closure1_slot0;
                    mike = 14;
                    oscar = tango[mike];
                    oscar = zulu.bind(entity)(oscar);
                    options = oscar.intl;
                    golf = options.formatToPlainString;
                    mike = tango[mike];
                    mike = zulu.bind(entity)(mike);
                    mike = mike.t;
                    oscar = mike.6E9a1N;
                    mike = {};
                    offset = global;
                    yankee = offset.location;
                    foxtrot = yankee.protocol;
                    yankee = offset.window;
                    yankee = yankee.GLOBAL_ENV;
                    romeo = yankee.WEBAPP_ENDPOINT;
                    offset = offset.HermesInternal;
                    yankee = offset.concat;
                    offset = '';
                    offset = yankee.bind(offset)(foxtrot, romeo);
                    mike['url'] = offset;
                    mike['username'] = verify;
                    oscar = golf.bind(options)(oscar, mike);
                    mike = 15;
                    mike = tango[mike];
                    tango = zulu.bind(entity)(mike);
                    zulu = tango.showShareActionSheet;
                    mike = {};
                    mike['message'] = oscar;
                    mike = zulu.bind(tango)(mike, report);
                    return entity;
                }
            };
            mike = new Array(0);
            golf = golf.bind(report)(zulu, mike);
            var _closure2_slot4 = golf;
            zulu = report.useLayoutEffect;
            mike = new Array(3);
            mike[0] = golf;
            mike[1] = oscar;
            mike[2] = entity;
            entity = function() {
                tango = _closure2_slot0;
                zulu = tango.setOptions;
                entity = {};
                report = function(argFoo) { // Original name: headerRight
                    golf = _closure1_slot0;
                    options = _closure1_slot2;
                    entity = 16;
                    entity = options[entity];
                    zulu = undefined;
                    report = golf.bind(zulu)(entity);
                    tango = report.getRenderHeaderTextButton;
                    entity = 14;
                    mike = options[entity];
                    mike = golf.bind(zulu)(mike);
                    oscar = mike.intl;
                    mike = oscar.string;
                    entity = options[entity];
                    entity = golf.bind(zulu)(entity);
                    entity = entity.t;
                    entity = entity.RDE0SU;
                    mike = mike.bind(oscar)(entity);
                    entity = _closure2_slot4;
                    mike = tango.bind(report)(mike, entity);
                    entity = {};
                    verify = argFoo;
                    offset = entity;
                    tango = copyDataProperties(offset, verify);
                    entity = mike.bind(zulu)(entity);
                    return entity;
                };
                entity['headerRight'] = report;
                entity = zulu.bind(tango)(entity);
                tango = _closure1_slot0;
                zulu = _closure1_slot2;
                entity = 11;
                zulu = zulu[entity];
                entity = undefined;
                tango = tango.bind(entity)(zulu);
                zulu = tango.checkContactPermissions;
                tango = zulu.bind(tango)();
                zulu = tango.then;
                mike = function(argFoo) {
                    _fun00005: for(var _fun00006_ip = 0; ; ) switch(_fun00006_ip) {
 0:
                        tango = argFoo;
                        mike = _closure1_slot12;
                        zulu = mike.NOT_DETERMINED;
                        zulu = tango === zulu;
                        mike = mike.UNAUTHORIZED;
                        mike = tango === mike;
                        if(zulu) { _fun00006_ip = 36; continue _fun00005 }
 33:
                        zulu = mike;
 36:
                        if(zulu) { _fun00006_ip = 82; continue _fun00005 }
 39:
                        tango = _closure1_slot0;
                        mike = _closure1_slot2;
                        entity = 11;
                        mike = mike[entity];
                        entity = undefined;
                        tango = tango.bind(entity)(mike);
                        mike = tango.isContactSyncEnabled;
                        entity = _closure2_slot2;
                        entity = mike.bind(tango)(entity);
                        zulu = !entity;
 82:
                        mike = _closure2_slot3;
                        entity = undefined;
                        mike = mike.bind(entity)(zulu);
                        return entity;
                    }
                };
                mike = zulu.bind(tango)(mike);
                return entity;
            };
            entity = zulu.bind(report)(entity, mike);
            entity = global;
            zulu = entity.Object;
            mike = zulu.values;
            report = _closure1_slot8;
            entity = report.getGuilds;
            entity = entity.bind(report)();
            zulu = mike.bind(zulu)(entity);
            mike = zulu.filter;
            entity = function(argFoo) {
                zulu = argFoo;
                mike = zulu.hasFeature;
                entity = _closure1_slot11;
                entity = entity.HUB;
                entity = mike.bind(zulu)(entity);
                return entity;
            };
            kilo = mike.bind(zulu)(entity);
            zulu = _closure1_slot14;
            mike = _closure1_slot15;
            entity = {};
            sizing = _closure1_slot13;
            offset = _closure1_slot1;
            report = 18;
            report = vacuum[report];
            oscar = offset.bind(tango)(report);
            report = {};
            golf = true;
            report['absolute'] = golf;
            oscar = sizing.bind(tango)(oscar, report);
            report = new Array(2);
            report[0] = oscar;
            golf = _closure1_slot6;
            oscar = {};
            options = 'handled';
            oscar['keyboardShouldPersistTaps'] = options;
            options = update.background;
            oscar['style'] = options;
            yankee = 19;
            options = vacuum[yankee];
            options = control.bind(tango)(options);
            verify = options.Text;
            options = {'style': null, 'accessibilityRole': 'header', 'variant': 'heading-xl/extrabold', 'color': 'header-primary'};
            result = update.headerText;
            options['style'] = result;
            result = 14;
            echo = vacuum[result];
            echo = control.bind(tango)(echo);
            sequence = echo.intl;
            source = sequence.string;
            echo = vacuum[result];
            echo = control.bind(tango)(echo);
            echo = echo.t;
            echo = echo.GWMTSE;
            echo = source.bind(sequence)(echo);
            options['children'] = echo;
            verify = sizing.bind(tango)(verify, options);
            options = new Array(4);
            options[0] = verify;
            verify = vacuum[yankee];
            verify = control.bind(tango)(verify);
            echo = verify.Text;
            verify = {'style': null, 'variant': 'text-sm/medium', 'color': 'header-secondary'};
            source = update.subheaderText;
            verify['style'] = source;
            source = vacuum[result];
            source = control.bind(tango)(source);
            config = source.intl;
            sequence = config.string;
            source = vacuum[result];
            source = control.bind(tango)(source);
            source = source.t;
            source = source.Rn/sLi;
            source = sequence.bind(config)(source);
            verify['children'] = source;
            verify = sizing.bind(tango)(echo, verify);
            options[1] = verify;
            verify = 20;
            verify = vacuum[verify];
            offset = offset.bind(tango)(verify);
            verify = {};
            echo = update.input;
            verify['style'] = echo;
            echo = false;
            verify['autoFocusInput'] = echo;
            verify['sourcePage'] = romeo;
            verify = sizing.bind(tango)(offset, verify);
            options[2] = verify;
            offset = _closure1_slot5;
            verify = {};
            romeo = update.otherOptionsContainer;
            verify['style'] = romeo;
            yankee = vacuum[yankee];
            yankee = control.bind(tango)(yankee);
            romeo = yankee.Text;
            yankee = {'accessibilityRole': 'header', 'variant': 'eyebrow', 'color': 'header-secondary'};
            echo = vacuum[result];
            echo = control.bind(tango)(echo);
            source = echo.intl;
            echo = source.string;
            result = vacuum[result];
            result = control.bind(tango)(result);
            result = result.t;
            result = result.dukg0d;
            result = echo.bind(source)(result);
            yankee['children'] = result;
            romeo = sizing.bind(tango)(romeo, yankee);
            yankee = new Array(3);
            yankee[0] = romeo;
            sizing = null;
            if(!output) { _fun00002_ip = 754; continue _fun00001 }
 702:
            echo = _closure1_slot13;
            result = _closure1_slot1;
            source = _closure1_slot2;
            output = 21;
            output = source[output];
            result = result.bind(tango)(output);
            output = {};
            update = update.rowContainer;
            output['style'] = update;
            update = 'Add Friend Modal';
            output['location'] = update;
            sizing = echo.bind(tango)(result, output);
 754:
            yankee[1] = sizing;
            sizing = _closure1_slot0;
            output = _closure1_slot2;
            backup = 22;
            backup = output[backup];
            sizing = sizing.bind(tango)(backup);
            backup = sizing.backToSchoolEnabled;
            backup = backup.bind(sizing)();
            romeo = null;
            if(!backup) { _fun00002_ip = 810; continue _fun00001 }
 793:
            backup = kilo.map;
            foxtrot = function(argFoo) {
                entity = argFoo;
                var _closure3_slot0 = entity;
                report = _closure1_slot13;
                verify = _closure1_slot0;
                offset = _closure1_slot2;
                mike = 23;
                mike = offset[mike];
                tango = undefined;
                mike = verify.bind(tango)(mike);
                zulu = mike.FormCTA;
                mike = {};
                oscar = function() { // Original name: onPress
                    _fun00007: for(var _fun00008_ip = 0; ; ) switch(_fun00008_ip) {
 0:
                        entity = _closure3_slot0;
                        report = entity.id;
                        tango = _closure1_slot1;
                        zulu = _closure1_slot2;
                        entity = 13;
                        zulu = zulu[entity];
                        entity = undefined;
                        golf = tango.bind(entity)(zulu);
                        oscar = golf.track;
                        zulu = _closure1_slot10;
                        tango = zulu.ADD_FRIEND_OTHER_PLACES_HUB_CLICKED;
                        zulu = {};
                        zulu['guild_id'] = report;
                        zulu = oscar.bind(golf)(tango, zulu);
                        oscar = _closure2_slot0;
                        tango = oscar.getParent;
                        oscar = tango.bind(oscar)();
                        tango = null;
                        if(!(tango == oscar)) { _fun00008_ip = 91; continue _fun00007 }
 87:
                        oscar = _closure2_slot0;
 91:
                        zulu = oscar.goBack;
                        zulu = zulu.bind(oscar)();
                        oscar = _closure1_slot7;
                        zulu = oscar.getDefaultChannel;
                        zulu = zulu.bind(oscar)(report);
                        oscar = tango == zulu;
                        tango = undefined;
                        if(oscar) { _fun00008_ip = 130; continue _fun00007 }
 125:
                        tango = zulu.id;
 130:
                        zulu = _closure1_slot0;
                        oscar = _closure1_slot2;
                        mike = 17;
                        mike = oscar[mike];
                        zulu = zulu.bind(entity)(mike);
                        mike = zulu.transitionToGuild;
                        mike = mike.bind(zulu)(report, tango);
                        return entity;
                    }
                };
                mike['onPress'] = oscar;
                oscar = _closure2_slot1;
                golf = oscar.rowContainer;
                mike['style'] = golf;
                options = entity.getIconSource;
                golf = 128;
                golf = options.bind(entity)(golf);
                mike['iconSource'] = golf;
                oscar = oscar.hubIcon;
                mike['iconStyle'] = oscar;
                oscar = entity.name;
                mike['title'] = oscar;
                oscar = 14;
                golf = offset[oscar];
                golf = verify.bind(tango)(golf);
                options = golf.intl;
                golf = options.string;
                oscar = offset[oscar];
                oscar = verify.bind(tango)(oscar);
                oscar = oscar.t;
                oscar = oscar.P3mDzc;
                oscar = golf.bind(options)(oscar);
                mike['subtitle'] = oscar;
                entity = entity.id;
                entity = report.bind(tango)(zulu, mike, entity);
                return entity;
            };
            romeo = backup.bind(kilo)(foxtrot);
 810:
            yankee[2] = romeo;
            verify['children'] = yankee;
            verify = zulu.bind(tango)(offset, verify);
            options[3] = verify;
            oscar['children'] = options;
            oscar = zulu.bind(tango)(golf, oscar);
            report[1] = oscar;
            entity['children'] = report;
            entity = zulu.bind(tango)(mike, entity);
            return entity;
        }
    };
    zulu['default'] = mike;
    return entity;
})();