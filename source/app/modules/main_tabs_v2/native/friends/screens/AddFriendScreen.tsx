// app/modules/main_tabs_v2/native/friends/screens/AddFriendScreen.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    report = argBar;
    romeon = argBaz;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    var _closure1_slot1 = romeon;
    var _closure1_slot2 = oscard;
    entity = global;
    option = entity.Object;
    golfie = option.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(option)(zuuluu, entity, tangon);
    offset = 0;
    tangon = oscard[offset];
    entity = undefined;
    tangon = romeon.bind(entity)(tangon);
    var _closure1_slot3 = tangon;
    tangon = 1;
    golfie = oscard[tangon];
    tangon = argCor;
    tangon = tangon.bind(entity)(golfie);
    var _closure1_slot4 = tangon;
    tangon = 2;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    golfie = tangon.Platform;
    golfie = tangon.View;
    var _closure1_slot5 = golfie;
    tangon = tangon.ScrollView;
    var _closure1_slot6 = tangon;
    tangon = 3;
    tangon = oscard[tangon];
    tangon = romeon.bind(entity)(tangon);
    var _closure1_slot7 = tangon;
    tangon = 4;
    tangon = oscard[tangon];
    tangon = romeon.bind(entity)(tangon);
    var _closure1_slot8 = tangon;
    tangon = 5;
    tangon = oscard[tangon];
    tangon = romeon.bind(entity)(tangon);
    var _closure1_slot9 = tangon;
    tangon = 6;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    golfie = tangon.AnalyticEvents;
    var _closure1_slot10 = golfie;
    tangon = tangon.GuildFeatures;
    var _closure1_slot11 = tangon;
    tangon = 7;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.ContactPermissions;
    var _closure1_slot12 = tangon;
    foxtra = 8;
    tangon = oscard[foxtra];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.jsx;
    var _closure1_slot13 = tangon;
    tangon = oscard[foxtra];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.jsxs;
    var _closure1_slot14 = tangon;
    tangon = oscard[foxtra];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.Fragment;
    var _closure1_slot15 = tangon;
    tangon = 9;
    tangon = oscard[tangon];
    option = report.bind(entity)(tangon);
    golfie = option.createStyles;
    tangon = {};
    yankee = 16;
    verify = {'marginTop': 32, 'marginHorizontal': 16, 'textAlign': 'center'};
    tangon['headerText'] = verify;
    verify = {'marginVertical': 8, 'marginHorizontal': 16, 'textAlign': 'center'};
    tangon['subheaderText'] = verify;
    verify = {};
    verify['marginTop'] = yankee;
    yankee = 10;
    backup = oscard[yankee];
    backup = romeon.bind(entity)(backup);
    backup = backup.colors;
    backup = backup.BG_BASE_SECONDARY;
    verify['backgroundColor'] = backup;
    tangon['input'] = verify;
    verify = {'marginTop': 16, 'paddingHorizontal': 16};
    tangon['otherOptionsContainer'] = verify;
    verify = {};
    verify['marginTop'] = foxtra;
    tangon['rowContainer'] = verify;
    verify = {};
    foxtra = 20;
    verify['borderRadius'] = foxtra;
    tangon['hubIcon'] = verify;
    verify = {};
    yankee = oscard[yankee];
    yankee = romeon.bind(entity)(yankee);
    yankee = yankee.colors;
    yankee = yankee.BG_BASE_SECONDARY;
    verify['backgroundColor'] = yankee;
    tangon['background'] = verify;
    verify = {};
    verify['marginHorizontal'] = offset;
    tangon['shareButton'] = verify;
    tangon = golfie.bind(option)(tangon);
    var _closure1_slot16 = tangon;
    tangon = 24;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/main_tabs_v2/native/friends/screens/AddFriendScreen.tsx';
    tangon = report.bind(oscard)(tangon);
    michal = function(argFoo) { // Original name: AddFriendScreen
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            entity = argFoo;
            oscard = entity.navigation;
            var _closure2_slot0 = oscard;
            entity = entity.route;
            entity = entity.params;
            romeon = entity.sourcePage;
            entity = _closure1_slot16;
            tangon = undefined;
            update = entity.bind(tangon)();
            var _closure2_slot1 = update;
            ctrled = _closure1_slot0;
            vacuum = _closure1_slot2;
            michal = 11;
            entity = vacuum[michal];
            zuuluu = ctrled.bind(tangon)(entity);
            entity = zuuluu.useContactSyncAccount;
            entity = entity.bind(zuuluu)();
            var _closure2_slot2 = entity;
            report = _closure1_slot4;
            zuuluu = report.useState;
            michal = vacuum[michal];
            golfie = ctrled.bind(tangon)(michal);
            michal = golfie.isContactSyncEnabled;
            michal = michal.bind(golfie)(entity);
            michal = !michal;
            golfie = zuuluu.bind(report)(michal);
            zuuluu = _closure1_slot3;
            michal = 2;
            zuuluu = zuuluu.bind(tangon)(golfie, michal);
            michal = 0;
            output = zuuluu[michal];
            michal = 1;
            michal = zuuluu[michal];
            var _closure2_slot3 = michal;
            golfie = report.useCallback;
            zuuluu = function() {
                _fun00003: for(var _fun00004_ip = 0; ; ) switch(_fun00004_ip) {
 0:
                    zuuluu = _closure1_slot9;
                    entity = zuuluu.getCurrentUser;
                    report = entity.bind(zuuluu)();
                    entity = null;
                    zuuluu = entity != report;
                    entity = undefined;
                    verify = undefined;
                    if(!zuuluu) { _fun00004_ip = 60; continue _fun00003 }
 29:
                    tangon = _closure1_slot1;
                    oscard = _closure1_slot2;
                    zuuluu = 12;
                    zuuluu = oscard[zuuluu];
                    tangon = tangon.bind(entity)(zuuluu);
                    zuuluu = tangon.getUserTag;
                    verify = zuuluu.bind(tangon)(report);
 60:
                    report = _closure1_slot1;
                    tangon = _closure1_slot2;
                    zuuluu = 13;
                    zuuluu = tangon[zuuluu];
                    option = report.bind(entity)(zuuluu);
                    golfie = option.track;
                    zuuluu = _closure1_slot10;
                    oscard = zuuluu.FRIEND_ADD_VIEWED;
                    report = 'Add Friend Modal';
                    zuuluu = {'friend_add_type': 'Invite', 'source_page': 'Add Friend Modal'};
                    zuuluu = golfie.bind(option)(oscard, zuuluu);
                    zuuluu = _closure1_slot0;
                    michal = 14;
                    oscard = tangon[michal];
                    oscard = zuuluu.bind(entity)(oscard);
                    option = oscard.intl;
                    golfie = option.formatToPlainString;
                    michal = tangon[michal];
                    michal = zuuluu.bind(entity)(michal);
                    michal = michal.t;
                    oscard = michal.6E9a1N;
                    michal = {};
                    offset = global;
                    yankee = offset.location;
                    foxtra = yankee.protocol;
                    yankee = offset.window;
                    yankee = yankee.GLOBAL_ENV;
                    romeon = yankee.WEBAPP_ENDPOINT;
                    offset = offset.HermesInternal;
                    yankee = offset.concat;
                    offset = '';
                    offset = yankee.bind(offset)(foxtra, romeon);
                    michal['url'] = offset;
                    michal['username'] = verify;
                    oscard = golfie.bind(option)(oscard, michal);
                    michal = 15;
                    michal = tangon[michal];
                    tangon = zuuluu.bind(entity)(michal);
                    zuuluu = tangon.showShareActionSheet;
                    michal = {};
                    michal['message'] = oscard;
                    michal = zuuluu.bind(tangon)(michal, report);
                    return entity;
                }
            };
            michal = new Array(0);
            golfie = golfie.bind(report)(zuuluu, michal);
            var _closure2_slot4 = golfie;
            zuuluu = report.useLayoutEffect;
            michal = new Array(3);
            michal[0] = golfie;
            michal[1] = oscard;
            michal[2] = entity;
            entity = function() {
                tangon = _closure2_slot0;
                zuuluu = tangon.setOptions;
                entity = {};
                report = function(argFoo) { // Original name: headerRight
                    golfie = _closure1_slot0;
                    option = _closure1_slot2;
                    entity = 16;
                    entity = option[entity];
                    zuuluu = undefined;
                    report = golfie.bind(zuuluu)(entity);
                    tangon = report.getRenderHeaderTextButton;
                    entity = 14;
                    michal = option[entity];
                    michal = golfie.bind(zuuluu)(michal);
                    oscard = michal.intl;
                    michal = oscard.string;
                    entity = option[entity];
                    entity = golfie.bind(zuuluu)(entity);
                    entity = entity.t;
                    entity = entity.RDE0SU;
                    michal = michal.bind(oscard)(entity);
                    entity = _closure2_slot4;
                    michal = tangon.bind(report)(michal, entity);
                    entity = {};
                    verify = argFoo;
                    offset = entity;
                    tangon = copyDataProperties(offset, verify);
                    entity = michal.bind(zuuluu)(entity);
                    return entity;
                };
                entity['headerRight'] = report;
                entity = zuuluu.bind(tangon)(entity);
                tangon = _closure1_slot0;
                zuuluu = _closure1_slot2;
                entity = 11;
                zuuluu = zuuluu[entity];
                entity = undefined;
                tangon = tangon.bind(entity)(zuuluu);
                zuuluu = tangon.checkContactPermissions;
                tangon = zuuluu.bind(tangon)();
                zuuluu = tangon.then;
                michal = function(argFoo) {
                    _fun00005: for(var _fun00006_ip = 0; ; ) switch(_fun00006_ip) {
 0:
                        tangon = argFoo;
                        michal = _closure1_slot12;
                        zuuluu = michal.NOT_DETERMINED;
                        zuuluu = tangon === zuuluu;
                        michal = michal.UNAUTHORIZED;
                        michal = tangon === michal;
                        if(zuuluu) { _fun00006_ip = 36; continue _fun00005 }
 33:
                        zuuluu = michal;
 36:
                        if(zuuluu) { _fun00006_ip = 82; continue _fun00005 }
 39:
                        tangon = _closure1_slot0;
                        michal = _closure1_slot2;
                        entity = 11;
                        michal = michal[entity];
                        entity = undefined;
                        tangon = tangon.bind(entity)(michal);
                        michal = tangon.isContactSyncEnabled;
                        entity = _closure2_slot2;
                        entity = michal.bind(tangon)(entity);
                        zuuluu = !entity;
 82:
                        michal = _closure2_slot3;
                        entity = undefined;
                        michal = michal.bind(entity)(zuuluu);
                        return entity;
                    }
                };
                michal = zuuluu.bind(tangon)(michal);
                return entity;
            };
            entity = zuuluu.bind(report)(entity, michal);
            entity = global;
            zuuluu = entity.Object;
            michal = zuuluu.values;
            report = _closure1_slot8;
            entity = report.getGuilds;
            entity = entity.bind(report)();
            zuuluu = michal.bind(zuuluu)(entity);
            michal = zuuluu.filter;
            entity = function(argFoo) {
                zuuluu = argFoo;
                michal = zuuluu.hasFeature;
                entity = _closure1_slot11;
                entity = entity.HUB;
                entity = michal.bind(zuuluu)(entity);
                return entity;
            };
            kiloes = michal.bind(zuuluu)(entity);
            zuuluu = _closure1_slot14;
            michal = _closure1_slot15;
            entity = {};
            sizing = _closure1_slot13;
            offset = _closure1_slot1;
            report = 18;
            report = vacuum[report];
            oscard = offset.bind(tangon)(report);
            report = {};
            golfie = true;
            report['absolute'] = golfie;
            oscard = sizing.bind(tangon)(oscard, report);
            report = new Array(2);
            report[0] = oscard;
            golfie = _closure1_slot6;
            oscard = {};
            option = 'handled';
            oscard['keyboardShouldPersistTaps'] = option;
            option = update.background;
            oscard['style'] = option;
            yankee = 19;
            option = vacuum[yankee];
            option = ctrled.bind(tangon)(option);
            verify = option.Text;
            option = {'style': null, 'accessibilityRole': 'header', 'variant': 'heading-xl/extrabold', 'color': 'header-primary'};
            result = update.headerText;
            option['style'] = result;
            result = 14;
            echoed = vacuum[result];
            echoed = ctrled.bind(tangon)(echoed);
            sequen = echoed.intl;
            source = sequen.string;
            echoed = vacuum[result];
            echoed = ctrled.bind(tangon)(echoed);
            echoed = echoed.t;
            echoed = echoed.GWMTSE;
            echoed = source.bind(sequen)(echoed);
            option['children'] = echoed;
            verify = sizing.bind(tangon)(verify, option);
            option = new Array(4);
            option[0] = verify;
            verify = vacuum[yankee];
            verify = ctrled.bind(tangon)(verify);
            echoed = verify.Text;
            verify = {'style': null, 'variant': 'text-sm/medium', 'color': 'header-secondary'};
            source = update.subheaderText;
            verify['style'] = source;
            source = vacuum[result];
            source = ctrled.bind(tangon)(source);
            config = source.intl;
            sequen = config.string;
            source = vacuum[result];
            source = ctrled.bind(tangon)(source);
            source = source.t;
            source = source.Rn/sLi;
            source = sequen.bind(config)(source);
            verify['children'] = source;
            verify = sizing.bind(tangon)(echoed, verify);
            option[1] = verify;
            verify = 20;
            verify = vacuum[verify];
            offset = offset.bind(tangon)(verify);
            verify = {};
            echoed = update.input;
            verify['style'] = echoed;
            echoed = false;
            verify['autoFocusInput'] = echoed;
            verify['sourcePage'] = romeon;
            verify = sizing.bind(tangon)(offset, verify);
            option[2] = verify;
            offset = _closure1_slot5;
            verify = {};
            romeon = update.otherOptionsContainer;
            verify['style'] = romeon;
            yankee = vacuum[yankee];
            yankee = ctrled.bind(tangon)(yankee);
            romeon = yankee.Text;
            yankee = {'accessibilityRole': 'header', 'variant': 'eyebrow', 'color': 'header-secondary'};
            echoed = vacuum[result];
            echoed = ctrled.bind(tangon)(echoed);
            source = echoed.intl;
            echoed = source.string;
            result = vacuum[result];
            result = ctrled.bind(tangon)(result);
            result = result.t;
            result = result.dukg0d;
            result = echoed.bind(source)(result);
            yankee['children'] = result;
            romeon = sizing.bind(tangon)(romeon, yankee);
            yankee = new Array(3);
            yankee[0] = romeon;
            sizing = null;
            if(!output) { _fun00002_ip = 750; continue _fun00001 }
 698:
            echoed = _closure1_slot13;
            result = _closure1_slot1;
            source = _closure1_slot2;
            output = 21;
            output = source[output];
            result = result.bind(tangon)(output);
            output = {};
            update = update.rowContainer;
            output['style'] = update;
            update = 'Add Friend Modal';
            output['location'] = update;
            sizing = echoed.bind(tangon)(result, output);
 750:
            yankee[1] = sizing;
            sizing = _closure1_slot0;
            output = _closure1_slot2;
            backup = 22;
            backup = output[backup];
            sizing = sizing.bind(tangon)(backup);
            backup = sizing.backToSchoolEnabled;
            backup = backup.bind(sizing)();
            romeon = null;
            if(!backup) { _fun00002_ip = 806; continue _fun00001 }
 789:
            backup = kiloes.map;
            foxtra = function(argFoo) {
                entity = argFoo;
                var _closure3_slot0 = entity;
                report = _closure1_slot13;
                verify = _closure1_slot0;
                offset = _closure1_slot2;
                michal = 23;
                michal = offset[michal];
                tangon = undefined;
                michal = verify.bind(tangon)(michal);
                zuuluu = michal.FormCTA;
                michal = {};
                oscard = function() { // Original name: onPress
                    _fun00007: for(var _fun00008_ip = 0; ; ) switch(_fun00008_ip) {
 0:
                        entity = _closure3_slot0;
                        report = entity.id;
                        tangon = _closure1_slot1;
                        zuuluu = _closure1_slot2;
                        entity = 13;
                        zuuluu = zuuluu[entity];
                        entity = undefined;
                        golfie = tangon.bind(entity)(zuuluu);
                        oscard = golfie.track;
                        zuuluu = _closure1_slot10;
                        tangon = zuuluu.ADD_FRIEND_OTHER_PLACES_HUB_CLICKED;
                        zuuluu = {};
                        zuuluu['guild_id'] = report;
                        zuuluu = oscard.bind(golfie)(tangon, zuuluu);
                        oscard = _closure2_slot0;
                        tangon = oscard.getParent;
                        oscard = tangon.bind(oscard)();
                        tangon = null;
                        if(!(tangon == oscard)) { _fun00008_ip = 91; continue _fun00007 }
 87:
                        oscard = _closure2_slot0;
 91:
                        zuuluu = oscard.goBack;
                        zuuluu = zuuluu.bind(oscard)();
                        oscard = _closure1_slot7;
                        zuuluu = oscard.getDefaultChannel;
                        zuuluu = zuuluu.bind(oscard)(report);
                        oscard = tangon == zuuluu;
                        tangon = undefined;
                        if(oscard) { _fun00008_ip = 130; continue _fun00007 }
 125:
                        tangon = zuuluu.id;
 130:
                        zuuluu = _closure1_slot0;
                        oscard = _closure1_slot2;
                        michal = 17;
                        michal = oscard[michal];
                        zuuluu = zuuluu.bind(entity)(michal);
                        michal = zuuluu.transitionToGuild;
                        michal = michal.bind(zuuluu)(report, tangon);
                        return entity;
                    }
                };
                michal['onPress'] = oscard;
                oscard = _closure2_slot1;
                golfie = oscard.rowContainer;
                michal['style'] = golfie;
                option = entity.getIconSource;
                golfie = 128;
                golfie = option.bind(entity)(golfie);
                michal['iconSource'] = golfie;
                oscard = oscard.hubIcon;
                michal['iconStyle'] = oscard;
                oscard = entity.name;
                michal['title'] = oscard;
                oscard = 14;
                golfie = offset[oscard];
                golfie = verify.bind(tangon)(golfie);
                option = golfie.intl;
                golfie = option.string;
                oscard = offset[oscard];
                oscard = verify.bind(tangon)(oscard);
                oscard = oscard.t;
                oscard = oscard.P3mDzc;
                oscard = golfie.bind(option)(oscard);
                michal['subtitle'] = oscard;
                entity = entity.id;
                entity = report.bind(tangon)(zuuluu, michal, entity);
                return entity;
            };
            romeon = backup.bind(kiloes)(foxtra);
 806:
            yankee[2] = romeon;
            verify['children'] = yankee;
            verify = zuuluu.bind(tangon)(offset, verify);
            option[3] = verify;
            oscard['children'] = option;
            oscard = zuuluu.bind(tangon)(golfie, oscard);
            report[1] = oscard;
            entity['children'] = report;
            entity = zuuluu.bind(tangon)(michal, entity);
            return entity;
        }
    };
    zuuluu['default'] = michal;
    return entity;
})();