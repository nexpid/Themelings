// app/modules/main_tabs_v2/native/friends/screens/SuggestedFriendsScreen.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    report = argBar;
    romeon = argBaz;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    var _closure1_slot1 = romeon;
    var _closure1_slot2 = oscard;
    entity = global;
    option = entity.Object;
    golfie = option.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(option)(zuuluu, entity, tangon);
    entity = 0;
    golfie = oscard[entity];
    tangon = argCor;
    entity = undefined;
    tangon = tangon.bind(entity)(golfie);
    var _closure1_slot3 = tangon;
    offset = 1;
    tangon = oscard[offset];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.View;
    var _closure1_slot4 = tangon;
    tangon = 2;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    golfie = tangon.AnalyticEvents;
    var _closure1_slot5 = golfie;
    tangon = tangon.AnalyticsSections;
    var _closure1_slot6 = tangon;
    tangon = 3;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    golfie = tangon.jsx;
    var _closure1_slot7 = golfie;
    tangon = tangon.jsxs;
    var _closure1_slot8 = tangon;
    tangon = 4;
    tangon = oscard[tangon];
    option = report.bind(entity)(tangon);
    golfie = option.createStyles;
    tangon = {};
    verify = {};
    verify['flex'] = offset;
    yankee = 5;
    foxtra = oscard[yankee];
    foxtra = romeon.bind(entity)(foxtra);
    foxtra = foxtra.spacing;
    foxtra = foxtra.PX_32;
    verify['paddingTop'] = foxtra;
    tangon['emptyContainer'] = verify;
    verify = {};
    yankee = oscard[yankee];
    yankee = romeon.bind(entity)(yankee);
    yankee = yankee.spacing;
    yankee = yankee.PX_8;
    verify['paddingTop'] = yankee;
    verify['flex'] = offset;
    tangon['container'] = verify;
    tangon = golfie.bind(option)(tangon);
    var _closure1_slot9 = tangon;
    tangon = 16;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/main_tabs_v2/native/friends/screens/SuggestedFriendsScreen.tsx';
    tangon = report.bind(oscard)(tangon);
    michal = function() { // Original name: SuggestedFriendsScreen
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            entity = _closure1_slot9;
            tangon = undefined;
            sizing = entity.bind(tangon)();
            oscard = _closure1_slot1;
            golfie = _closure1_slot2;
            entity = 6;
            zuuluu = golfie[entity];
            report = oscard.bind(tangon)(zuuluu);
            zuuluu = 7;
            zuuluu = golfie[zuuluu];
            zuuluu = oscard.bind(tangon)(zuuluu);
            zuuluu = zuuluu.SUGGESTED_FRIENDS;
            zuuluu = report.bind(tangon)(zuuluu);
            report = zuuluu.analyticsLocations;
            var _closure2_slot0 = report;
            verify = _closure1_slot3;
            yankee = verify.useEffect;
            option = function() {
                zuuluu = _closure1_slot1;
                michal = _closure1_slot2;
                entity = 8;
                michal = michal[entity];
                entity = undefined;
                report = zuuluu.bind(entity)(michal);
                tangon = report.track;
                michal = _closure1_slot5;
                zuuluu = michal.FRIEND_ADD_VIEWED;
                michal = {};
                oscard = _closure1_slot6;
                oscard = oscard.FRIENDS_SUGGESTED_FRIENDS_MODAL;
                michal['friend_add_type'] = oscard;
                michal = tangon.bind(report)(zuuluu, michal);
                return entity;
            };
            zuuluu = new Array(0);
            zuuluu = yankee.bind(verify)(option, zuuluu);
            zuuluu = 9;
            zuuluu = golfie[zuuluu];
            zuuluu = oscard.bind(tangon)(zuuluu);
            option = zuuluu.bind(tangon)();
            foxtra = option.added;
            var _closure2_slot1 = foxtra;
            zuuluu = option.setAdded;
            var _closure2_slot2 = zuuluu;
            kiloes = option.friendSuggestions;
            var _closure2_slot3 = kiloes;
            romeon = verify.useCallback;
            yankee = new Array(1);
            yankee[0] = report;
            option = function(argFoo) {
                tangon = argFoo;
                zuuluu = _closure1_slot1;
                michal = _closure1_slot2;
                entity = 10;
                michal = michal[entity];
                entity = undefined;
                zuuluu = zuuluu.bind(entity)(michal);
                michal = {};
                report = tangon.id;
                michal['userId'] = report;
                michal['localUser'] = tangon;
                tangon = _closure2_slot0;
                michal['sourceAnalyticsLocations'] = tangon;
                michal = zuuluu.bind(entity)(michal);
                return entity;
            };
            romeon = romeon.bind(verify)(option, yankee);
            var _closure2_slot4 = romeon;
            yankee = verify.useCallback;
            option = new Array(4);
            option[0] = foxtra;
            option[1] = kiloes;
            option[2] = romeon;
            option[3] = zuuluu;
            zuuluu = function(argFoo, argBar) {
                _fun00003: for(var _fun00004_ip = 0; ; ) switch(_fun00004_ip) {
 0:
                    tangon = argBar;
                    var _closure3_slot0 = tangon;
                    zuuluu = _closure2_slot3;
                    zuuluu = zuuluu[tangon];
                    var _closure3_slot1 = zuuluu;
                    oscard = null;
                    option = oscard == zuuluu;
                    report = undefined;
                    if(option) { _fun00004_ip = 41; continue _fun00003 }
 35:
                    report = zuuluu.mutualFriendsCount;
 41:
                    report = oscard != report;
                    if(!report) { _fun00004_ip = 69; continue _fun00003 }
 48:
                    oscard = oscard == zuuluu;
                    golfie = undefined;
                    if(oscard) { _fun00004_ip = 63; continue _fun00003 }
 57:
                    golfie = zuuluu.mutualFriendsCount;
 63:
                    oscard = 0;
                    report = golfie > oscard;
 69:
                    entity = _closure2_slot3;
                    oscard = entity.length;
                    entity = 1;
                    entity = oscard - entity;
                    entity = tangon === entity;
                    var _closure3_slot2 = entity;
                    entity = {};
                    tangon = 'custom';
                    entity['type'] = tangon;
                    tangon = 'contactSuggestionNoMutualCount';
                    if(!report) { _fun00004_ip = 118; continue _fun00003 }
 112:
                    tangon = 'contactSuggestionMutualCount';
 118:
                    entity['itemType'] = tangon;
                    zuuluu = zuuluu.user;
                    zuuluu = zuuluu.id;
                    entity['key'] = zuuluu;
                    michal = function() { // Original name: component
                        tangon = _closure1_slot7;
                        michal = _closure1_slot0;
                        zuuluu = _closure1_slot2;
                        entity = 11;
                        entity = zuuluu[entity];
                        zuuluu = undefined;
                        entity = michal.bind(zuuluu)(entity);
                        michal = entity.ContactSuggestionRow;
                        entity = {};
                        offset = _closure2_slot1;
                        verify = offset.includes;
                        option = _closure3_slot1;
                        verify = verify.bind(offset)(option);
                        entity['added'] = verify;
                        entity['suggestedFriend'] = option;
                        verify = _closure3_slot0;
                        option = 0;
                        option = option === verify;
                        entity['start'] = option;
                        golfie = _closure3_slot2;
                        entity['end'] = golfie;
                        oscard = _closure2_slot4;
                        entity['onPress'] = oscard;
                        oscard = function() { // Original name: onAddSuggestion
                            zuuluu = _closure2_slot2;
                            michal = undefined;
                            entity = function(argFoo) {
                                entity = new Array(1);
                                report = argFoo;
                                tangon = 0;
                                oscard = entity;
                                zuuluu = arraySpread(oscard, report, tangon);
                                michal = _closure3_slot1;
                                entity[zuuluu] = michal;
                                michal = 1;
                                michal = zuuluu + michal;
                                return entity;
                            };
                            entity = zuuluu.bind(michal)(entity);
                            return entity;
                        };
                        entity['onAddSuggestion'] = oscard;
                        report = _closure1_slot6;
                        report = report.FRIENDS_SUGGESTED_FRIENDS_MODAL;
                        entity['location'] = report;
                        entity = tangon.bind(zuuluu)(michal, entity);
                        return entity;
                    };
                    entity['component'] = michal;
                    return entity;
                }
            };
            backup = yankee.bind(verify)(zuuluu, option);
            option = verify.useCallback;
            zuuluu = function() {
                entity = undefined;
                return entity;
            };
            michal = new Array(0);
            foxtra = option.bind(verify)(zuuluu, michal);
            zuuluu = _closure1_slot8;
            michal = _closure1_slot0;
            entity = golfie[entity];
            entity = michal.bind(tangon)(entity);
            michal = entity.AnalyticsLocationProvider;
            entity = {};
            entity['value'] = report;
            option = _closure1_slot7;
            report = 12;
            report = golfie[report];
            oscard = oscard.bind(tangon)(report);
            report = {};
            result = true;
            report['absolute'] = result;
            oscard = option.bind(tangon)(oscard, report);
            report = new Array(2);
            report[0] = oscard;
            golfie = _closure1_slot4;
            oscard = {};
            verify = sizing.container;
            oscard['style'] = verify;
            yankee = kiloes.length;
            verify = 0;
            if(!(verify === yankee)) { _fun00002_ip = 449; continue _fun00001 }
 327:
            romeon = _closure1_slot7;
            yankee = _closure1_slot4;
            verify = {};
            sizing = sizing.emptyContainer;
            verify['style'] = sizing;
            output = _closure1_slot1;
            vacuum = _closure1_slot2;
            sizing = 14;
            sizing = vacuum[sizing];
            output = output.bind(tangon)(sizing);
            sizing = {};
            ctrled = _closure1_slot0;
            echoed = 15;
            update = vacuum[echoed];
            update = ctrled.bind(tangon)(update);
            source = update.intl;
            update = source.string;
            echoed = vacuum[echoed];
            echoed = ctrled.bind(tangon)(echoed);
            echoed = echoed.t;
            echoed = echoed.pxFW8f;
            echoed = update.bind(source)(echoed);
            sizing['title'] = echoed;
            sizing['disableBackgroundOverlay'] = result;
            sizing = romeon.bind(tangon)(output, sizing);
            verify['children'] = sizing;
            verify = romeon.bind(tangon)(yankee, verify);
            _fun00002_ip = 515; continue _fun00001;
 449:
            romeon = _closure1_slot7;
            yankee = _closure1_slot0;
            sizing = _closure1_slot2;
            offset = 13;
            offset = sizing[offset];
            offset = yankee.bind(tangon)(offset);
            yankee = offset.UsersFastList;
            offset = {};
            sizing = kiloes.length;
            kiloes = new Array(1);
            kiloes[0] = sizing;
            offset['sections'] = kiloes;
            offset['getItemProps'] = backup;
            offset['getSectionProps'] = foxtra;
            verify = romeon.bind(tangon)(yankee, offset);
 515:
            oscard['children'] = verify;
            oscard = option.bind(tangon)(golfie, oscard);
            report[1] = oscard;
            entity['children'] = report;
            entity = zuuluu.bind(tangon)(michal, entity);
            return entity;
        }
    };
    zuuluu['default'] = michal;
    return entity;
})();