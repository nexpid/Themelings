// app/modules/main_tabs_v2/native/friends/screens/UsernameSearchScreen.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    report = argBar;
    yankee = argBaz;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    var _closure1_slot1 = yankee;
    var _closure1_slot2 = oscard;
    entity = global;
    option = entity.Object;
    golfie = option.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(option)(zuuluu, entity, tangon);
    entity = 0;
    golfie = oscard[entity];
    tangon = argCor;
    entity = undefined;
    tangon = tangon.bind(entity)(golfie);
    var _closure1_slot3 = tangon;
    romeon = 1;
    tangon = oscard[romeon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.ScrollView;
    var _closure1_slot4 = tangon;
    tangon = 2;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    golfie = tangon.AnalyticEvents;
    var _closure1_slot5 = golfie;
    tangon = tangon.AnalyticsSections;
    var _closure1_slot6 = tangon;
    tangon = 3;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    golfie = tangon.jsx;
    var _closure1_slot7 = golfie;
    golfie = tangon.jsxs;
    var _closure1_slot8 = golfie;
    tangon = tangon.Fragment;
    var _closure1_slot9 = tangon;
    tangon = 4;
    tangon = oscard[tangon];
    option = report.bind(entity)(tangon);
    golfie = option.createStyles;
    tangon = {};
    verify = {'flex': 1, 'backgroundColor': null, 'paddingTop': 36};
    offset = 5;
    foxtra = oscard[offset];
    foxtra = yankee.bind(entity)(foxtra);
    foxtra = foxtra.colors;
    foxtra = foxtra.BG_BASE_SECONDARY;
    verify['backgroundColor'] = foxtra;
    tangon['content'] = verify;
    verify = {};
    verify['flexGrow'] = romeon;
    romeon = oscard[offset];
    romeon = yankee.bind(entity)(romeon);
    romeon = romeon.colors;
    romeon = romeon.BG_BASE_SECONDARY;
    verify['backgroundColor'] = romeon;
    romeon = oscard[offset];
    romeon = yankee.bind(entity)(romeon);
    romeon = romeon.spacing;
    romeon = romeon.PX_16;
    verify['paddingHorizontal'] = romeon;
    tangon['container'] = verify;
    verify = {'marginTop': null, 'backgroundColor': 'transparent', 'paddingHorizontal': 0};
    romeon = oscard[offset];
    romeon = yankee.bind(entity)(romeon);
    romeon = romeon.spacing;
    romeon = romeon.PX_32;
    verify['marginTop'] = romeon;
    tangon['inputContainer'] = verify;
    verify = {};
    romeon = 'center';
    verify['textAlign'] = romeon;
    offset = oscard[offset];
    offset = yankee.bind(entity)(offset);
    offset = offset.spacing;
    offset = offset.PX_16;
    verify['marginTop'] = offset;
    tangon['titleText'] = verify;
    verify = {};
    offset = 'none';
    verify['textTransform'] = offset;
    tangon['headerText'] = verify;
    tangon = golfie.bind(option)(tangon);
    var _closure1_slot10 = tangon;
    tangon = 14;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/main_tabs_v2/native/friends/screens/UsernameSearchScreen.tsx';
    tangon = report.bind(oscard)(tangon);
    michal = function(argFoo) { // Original name: UsernameSearchScreen
        michal = argFoo;
        oscard = michal.navigation;
        var _closure2_slot0 = oscard;
        michal = _closure1_slot10;
        tangon = undefined;
        kiloes = michal.bind(tangon)();
        report = _closure1_slot3;
        golfie = report.useEffect;
        zuuluu = function() {
            zuuluu = _closure1_slot1;
            michal = _closure1_slot2;
            entity = 6;
            michal = michal[entity];
            entity = undefined;
            report = zuuluu.bind(entity)(michal);
            tangon = report.track;
            michal = _closure1_slot5;
            zuuluu = michal.FRIEND_ADD_VIEWED;
            michal = {};
            oscard = _closure1_slot6;
            oscard = oscard.FRIENDS_ADD_BY_USERNAME_MODAL;
            michal['friend_add_type'] = oscard;
            michal = tangon.bind(report)(zuuluu, michal);
            return entity;
        };
        michal = new Array(0);
        michal = golfie.bind(report)(zuuluu, michal);
        foxtra = _closure1_slot1;
        update = _closure1_slot2;
        michal = 7;
        michal = update[michal];
        michal = foxtra.bind(tangon)(michal);
        michal = michal.bind(tangon)();
        sizing = michal.insets;
        zuuluu = report.useRef;
        michal = null;
        backup = zuuluu.bind(report)(michal);
        var _closure2_slot1 = backup;
        zuuluu = report.useEffect;
        michal = new Array(1);
        michal[0] = oscard;
        entity = function() {
            tangon = _closure2_slot0;
            zuuluu = tangon.addListener;
            michal = 'transitionEnd';
            entity = function(argFoo) {
                _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
                    entity = argFoo;
                    entity = entity.data;
                    entity = entity.closing;
                    if(entity) { _fun00002_ip = 45; continue _fun00001 }
 17:
                    entity = _closure2_slot1;
                    michal = entity.current;
                    entity = null;
                    if(!(entity != michal)) { _fun00002_ip = 45; continue _fun00001 }
 35:
                    entity = michal.focus;
                    entity = entity.bind(michal)();
 45:
                    entity = undefined;
                    return entity;
                }
            };
            entity = zuuluu.bind(tangon)(michal, entity);
            return entity;
        };
        entity = zuuluu.bind(report)(entity, michal);
        echoed = _closure1_slot0;
        entity = 8;
        entity = update[entity];
        michal = echoed.bind(tangon)(entity);
        entity = michal.useClientThemesOverride;
        yankee = entity.bind(michal)();
        zuuluu = _closure1_slot8;
        michal = _closure1_slot9;
        entity = {};
        option = _closure1_slot7;
        report = 9;
        report = update[report];
        oscard = foxtra.bind(tangon)(report);
        report = {};
        golfie = true;
        report['absolute'] = golfie;
        oscard = option.bind(tangon)(oscard, report);
        report = new Array(2);
        report[0] = oscard;
        oscard = 10;
        oscard = update[oscard];
        golfie = foxtra.bind(tangon)(oscard);
        oscard = {};
        romeon = kiloes.content;
        offset = new Array(2);
        offset[0] = romeon;
        offset[1] = yankee;
        oscard['style'] = offset;
        offset = _closure1_slot4;
        verify = {'alwaysBounceVertical': false, 'keyboardShouldPersistTaps': 'handled'};
        output = false;
        romeon = kiloes.container;
        yankee = new Array(2);
        yankee[0] = romeon;
        romeon = {};
        result = sizing.bottom;
        sizing = 5;
        sizing = update[sizing];
        sizing = foxtra.bind(tangon)(sizing);
        sizing = sizing.spacing;
        sizing = sizing.PX_16;
        sizing = result + sizing;
        romeon['paddingBottom'] = sizing;
        yankee[1] = romeon;
        verify['contentContainerStyle'] = yankee;
        yankee = 11;
        yankee = update[yankee];
        yankee = echoed.bind(tangon)(yankee);
        romeon = yankee.Text;
        yankee = {'style': null, 'variant': 'heading-xl/bold', 'color': 'header-primary', 'accessibilityRole': 'header'};
        sizing = kiloes.titleText;
        yankee['style'] = sizing;
        sizing = 12;
        result = update[sizing];
        result = echoed.bind(tangon)(result);
        ctrled = result.intl;
        source = ctrled.string;
        result = update[sizing];
        result = echoed.bind(tangon)(result);
        result = result.t;
        result = result.QzVsOj;
        result = source.bind(ctrled)(result);
        yankee['children'] = result;
        romeon = option.bind(tangon)(romeon, yankee);
        yankee = new Array(2);
        yankee[0] = romeon;
        romeon = 13;
        romeon = update[romeon];
        foxtra = foxtra.bind(tangon)(romeon);
        romeon = {};
        result = kiloes.inputContainer;
        romeon['style'] = result;
        romeon['autoFocusInput'] = output;
        output = update[sizing];
        output = echoed.bind(tangon)(output);
        result = output.intl;
        output = result.string;
        sizing = update[sizing];
        sizing = echoed.bind(tangon)(sizing);
        sizing = sizing.t;
        sizing = sizing.YEOwDA;
        sizing = output.bind(result)(sizing);
        romeon['headerText'] = sizing;
        kiloes = kiloes.headerText;
        romeon['headerTextStyle'] = kiloes;
        romeon['ref'] = backup;
        romeon = option.bind(tangon)(foxtra, romeon);
        yankee[1] = romeon;
        verify['children'] = yankee;
        verify = zuuluu.bind(tangon)(offset, verify);
        oscard['children'] = verify;
        oscard = option.bind(tangon)(golfie, oscard);
        report[1] = oscard;
        entity['children'] = report;
        entity = zuuluu.bind(tangon)(michal, entity);
        return entity;
    };
    zuuluu['default'] = michal;
    return entity;
})();