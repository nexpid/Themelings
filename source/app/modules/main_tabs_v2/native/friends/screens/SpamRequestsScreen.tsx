// app/modules/main_tabs_v2/native/friends/screens/SpamRequestsScreen.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    report = argBar;
    golfie = argBaz;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    var _closure1_slot1 = golfie;
    var _closure1_slot2 = oscard;
    entity = global;
    verify = entity.Object;
    option = verify.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = option.bind(verify)(zuuluu, entity, tangon);
    entity = 0;
    option = oscard[entity];
    tangon = argCor;
    entity = undefined;
    tangon = tangon.bind(entity)(option);
    var _closure1_slot3 = tangon;
    tangon = 1;
    tangon = oscard[tangon];
    tangon = golfie.bind(entity)(tangon);
    var _closure1_slot4 = tangon;
    tangon = 2;
    tangon = oscard[tangon];
    tangon = golfie.bind(entity)(tangon);
    var _closure1_slot5 = tangon;
    tangon = 3;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.UserRowModes;
    var _closure1_slot6 = tangon;
    tangon = 4;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.RelationshipTypes;
    var _closure1_slot7 = tangon;
    tangon = 5;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.jsx;
    var _closure1_slot8 = tangon;
    tangon = 14;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/main_tabs_v2/native/friends/screens/SpamRequestsScreen.tsx';
    tangon = report.bind(oscard)(tangon);
    michal = function(argFoo) { // Original name: SpamRequestsScreen
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            entity = argFoo;
            zuuluu = entity.navigation;
            yankee = _closure1_slot1;
            verify = _closure1_slot2;
            tangon = 6;
            report = verify[tangon];
            tangon = undefined;
            oscard = yankee.bind(tangon)(report);
            report = 7;
            report = verify[report];
            report = yankee.bind(tangon)(report);
            report = report.FRIEND_REQUESTS;
            report = oscard.bind(tangon)(report);
            oscard = report.analyticsLocations;
            var _closure2_slot0 = oscard;
            option = _closure1_slot0;
            golfie = 8;
            report = verify[golfie];
            foxtra = option.bind(tangon)(report);
            romeon = foxtra.useStateFromStores;
            report = _closure1_slot4;
            offset = new Array(1);
            offset[0] = report;
            report = function() {
                michal = _closure1_slot4;
                entity = michal.getRelationships;
                entity = entity.bind(michal)();
                return entity;
            };
            romeon = romeon.bind(foxtra)(offset, report);
            report = 9;
            report = verify[report];
            offset = option.bind(tangon)(report);
            report = offset.getPendingRelationshipIds;
            report = report.bind(offset)(romeon);
            report = report.spamIds;
            var _closure2_slot1 = report;
            offset = 10;
            offset = verify[offset];
            yankee = yankee.bind(tangon)(offset);
            offset = {};
            romeon = 11;
            romeon = verify[romeon];
            romeon = option.bind(tangon)(romeon);
            romeon = romeon.ImpressionNames;
            romeon = romeon.FRIEND_REQUESTS_SPAM_INBOX;
            offset['name'] = romeon;
            offset = yankee.bind(tangon)(offset);
            golfie = verify[golfie];
            offset = option.bind(tangon)(golfie);
            verify = offset.useStateFromStores;
            golfie = _closure1_slot5;
            option = new Array(1);
            option[0] = golfie;
            golfie = new Array(1);
            golfie[0] = report;
            report = function() {
                tangon = _closure2_slot1;
                zuuluu = tangon.map;
                michal = function(argFoo) {
                    zuuluu = _closure1_slot5;
                    michal = zuuluu.getUser;
                    entity = argFoo;
                    entity = michal.bind(zuuluu)(entity);
                    return entity;
                };
                zuuluu = zuuluu.bind(tangon)(michal);
                michal = zuuluu.filter;
                entity = function(argFoo) {
                    michal = null;
                    entity = argFoo;
                    entity = michal != entity;
                    return entity;
                };
                entity = michal.bind(zuuluu)(entity);
                return entity;
            };
            report = verify.bind(offset)(option, report, golfie);
            var _closure2_slot2 = report;
            verify = _closure1_slot3;
            option = verify.useCallback;
            golfie = new Array(1);
            golfie[0] = oscard;
            oscard = function(argFoo) {
                tangon = argFoo;
                zuuluu = _closure1_slot1;
                michal = _closure1_slot2;
                entity = 12;
                michal = michal[entity];
                entity = undefined;
                zuuluu = zuuluu.bind(entity)(michal);
                michal = {};
                report = tangon.id;
                michal['userId'] = report;
                michal['localUser'] = tangon;
                tangon = _closure2_slot0;
                michal['sourceAnalyticsLocations'] = tangon;
                michal = zuuluu.bind(entity)(michal);
                return entity;
            };
            offset = option.bind(verify)(oscard, golfie);
            var _closure2_slot3 = offset;
            option = verify.useCallback;
            golfie = function() {
                entity = undefined;
                return entity;
            };
            oscard = new Array(0);
            oscard = option.bind(verify)(golfie, oscard);
            option = verify.useCallback;
            golfie = new Array(2);
            golfie[0] = offset;
            golfie[1] = report;
            michal = function(argFoo) {
                tangon = argFoo;
                entity = {};
                michal = 'user';
                entity['type'] = michal;
                michal = {};
                zuuluu = _closure1_slot7;
                zuuluu = zuuluu.PENDING_INCOMING;
                michal['type'] = zuuluu;
                zuuluu = _closure2_slot2;
                golfie = zuuluu[tangon];
                michal['user'] = golfie;
                oscard = _closure2_slot3;
                michal['onPress'] = oscard;
                report = _closure1_slot6;
                report = report.ACTIONS;
                michal['mode'] = report;
                report = 0;
                report = report === tangon;
                michal['start'] = report;
                report = zuuluu.length;
                zuuluu = 1;
                zuuluu = report - zuuluu;
                zuuluu = tangon === zuuluu;
                michal['end'] = zuuluu;
                entity['props'] = michal;
                return entity;
            };
            golfie = option.bind(verify)(michal, golfie);
            option = report.length;
            michal = 0;
            if(!(michal === option)) { _fun00002_ip = 356; continue _fun00001 }
 344:
            michal = zuuluu.goBack;
            michal = michal.bind(zuuluu)();
            return tangon;
 356:
            zuuluu = _closure1_slot8;
            michal = _closure1_slot0;
            option = _closure1_slot2;
            entity = 13;
            entity = option[entity];
            entity = michal.bind(tangon)(entity);
            michal = entity.UsersFastList;
            entity = {};
            entity['getItemProps'] = golfie;
            entity['getSectionProps'] = oscard;
            oscard = report.length;
            report = new Array(1);
            report[0] = oscard;
            entity['sections'] = report;
            entity = zuuluu.bind(tangon)(michal, entity);
            return entity;
        }
    };
    zuuluu['default'] = michal;
    return entity;
})();