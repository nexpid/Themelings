// app/modules/main_tabs_v2/native/friends/screens/FriendsScreen.tsx
export default (function(argFoo, argBar, argBaz, argCorge, _, argFred, argPlugh) {
    report = argBar;
    yankee = argBaz;
    zulu = argFred;
    oscar = argPlugh;
    var _closure1_slot0 = report;
    var _closure1_slot1 = yankee;
    var _closure1_slot2 = oscar;
    entity = global;
    options = entity.Object;
    golf = options.defineProperty;
    tango = {};
    entity = true;
    tango['value'] = entity;
    entity = '__esModule';
    entity = golf.bind(options)(zulu, entity, tango);
    entity = 0;
    golf = oscar[entity];
    tango = argCorge;
    entity = undefined;
    tango = tango.bind(entity)(golf);
    var _closure1_slot3 = tango;
    romeo = 1;
    tango = oscar[romeo];
    tango = report.bind(entity)(tango);
    tango = tango.View;
    var _closure1_slot4 = tango;
    tango = 2;
    tango = oscar[tango];
    tango = yankee.bind(entity)(tango);
    var _closure1_slot5 = tango;
    tango = 3;
    tango = oscar[tango];
    tango = yankee.bind(entity)(tango);
    var _closure1_slot6 = tango;
    tango = 4;
    golf = oscar[tango];
    golf = report.bind(entity)(golf);
    golf = golf.jsx;
    var _closure1_slot7 = golf;
    golf = oscar[tango];
    golf = report.bind(entity)(golf);
    golf = golf.Fragment;
    var _closure1_slot8 = golf;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.jsxs;
    var _closure1_slot9 = tango;
    tango = 5;
    tango = oscar[tango];
    options = report.bind(entity)(tango);
    golf = options.createStyles;
    tango = {};
    verify = {};
    offset = 6;
    foxtrot = oscar[offset];
    foxtrot = yankee.bind(entity)(foxtrot);
    foxtrot = foxtrot.spacing;
    foxtrot = foxtrot.PX_8;
    verify['paddingTop'] = foxtrot;
    verify['flex'] = romeo;
    tango['container'] = verify;
    verify = {};
    romeo = oscar[offset];
    romeo = yankee.bind(entity)(romeo);
    romeo = romeo.spacing;
    romeo = romeo.PX_16;
    verify['marginHorizontal'] = romeo;
    romeo = oscar[offset];
    romeo = yankee.bind(entity)(romeo);
    romeo = romeo.radii;
    romeo = romeo.lg;
    verify['borderRadius'] = romeo;
    romeo = 'hidden';
    verify['overflow'] = romeo;
    tango['requestsButtonContainer'] = verify;
    verify = {'justifyContent': 'center', 'flexGrow': 1};
    tango['emptyContainer'] = verify;
    verify = {'flexDirection': 'row', 'marginBottom': null, 'width': '100%'};
    offset = oscar[offset];
    offset = yankee.bind(entity)(offset);
    offset = offset.spacing;
    offset = offset.PX_16;
    verify['marginBottom'] = offset;
    tango['buttonContainer'] = verify;
    tango = golf.bind(options)(tango);
    var _closure1_slot10 = tango;
    tango = 24;
    tango = oscar[tango];
    oscar = report.bind(entity)(tango);
    report = oscar.fileFinishedImporting;
    tango = 'modules/main_tabs_v2/native/friends/screens/FriendsScreen.tsx';
    tango = report.bind(oscar)(tango);
    mike = function() { // Original name: FriendsScreen
        mike = _closure1_slot0;
        romeo = _closure1_slot2;
        entity = 7;
        entity = romeo[entity];
        tango = undefined;
        report = mike.bind(tango)(entity);
        entity = report.useNavigation;
        echo = entity.bind(report)();
        var _closure2_slot0 = echo;
        entity = _closure1_slot10;
        output = entity.bind(tango)();
        var _closure2_slot1 = output;
        oscar = _closure1_slot1;
        entity = 8;
        report = romeo[entity];
        options = oscar.bind(tango)(report);
        report = 9;
        report = romeo[report];
        report = oscar.bind(tango)(report);
        report = report.FRIENDS_LIST;
        report = options.bind(tango)(report);
        report = report.analyticsLocations;
        var _closure2_slot2 = report;
        options = 10;
        options = romeo[options];
        offset = mike.bind(tango)(options);
        verify = offset.useIsFriendTiersUIEnabled;
        options = {};
        yankee = 'FriendsScreen';
        options['location'] = yankee;
        options = verify.bind(offset)(options);
        verify = 11;
        verify = romeo[verify];
        verify = oscar.bind(tango)(verify);
        verify = verify.bind(tango)();
        source = verify.bottom;
        var _closure2_slot3 = source;
        verify = 12;
        verify = romeo[verify];
        foxtrot = mike.bind(tango)(verify);
        yankee = foxtrot.useStateFromStoresObject;
        verify = _closure1_slot6;
        offset = new Array(2);
        offset[0] = verify;
        verify = _closure1_slot5;
        offset[1] = verify;
        verify = function() {
            entity = {};
            report = _closure1_slot0;
            golf = _closure1_slot2;
            mike = 13;
            zulu = golf[mike];
            tango = undefined;
            offset = report.bind(tango)(zulu);
            verify = offset.getIncomingFriendRequestCount;
            zulu = _closure1_slot6;
            options = new Array(2);
            options[0] = zulu;
            oscar = _closure1_slot5;
            options[1] = oscar;
            options = verify.bind(offset)(options);
            entity['incoming'] = options;
            mike = golf[mike];
            report = report.bind(tango)(mike);
            tango = report.getOutgoingFriendRequestCount;
            mike = new Array(2);
            mike[0] = zulu;
            mike[1] = oscar;
            mike = tango.bind(report)(mike);
            entity['outgoing'] = mike;
            mike = zulu.getSpamCount;
            mike = mike.bind(zulu)();
            entity['spam'] = mike;
            mike = zulu.getPendingIgnoredCount;
            mike = mike.bind(zulu)();
            entity['pendingIgnored'] = mike;
            return entity;
        };
        verify = yankee.bind(foxtrot)(offset, verify);
        update = verify.incoming;
        var _closure2_slot4 = update;
        result = verify.outgoing;
        var _closure2_slot5 = result;
        sizing = verify.spam;
        var _closure2_slot6 = sizing;
        verify = verify.pendingIgnored;
        var _closure2_slot7 = verify;
        kilo = _closure1_slot3;
        foxtrot = kilo.useCallback;
        yankee = new Array(1);
        yankee[0] = report;
        offset = function(argFoo) {
            tango = argFoo;
            oscar = _closure1_slot0;
            report = _closure1_slot2;
            entity = 14;
            zulu = report[entity];
            entity = undefined;
            oscar = oscar.bind(entity)(zulu);
            zulu = oscar.dismissGlobalKeyboard;
            zulu = zulu.bind(oscar)();
            zulu = _closure1_slot1;
            mike = 15;
            mike = report[mike];
            zulu = zulu.bind(entity)(mike);
            mike = {};
            report = tango.id;
            mike['userId'] = report;
            mike['localUser'] = tango;
            tango = _closure2_slot2;
            mike['sourceAnalyticsLocations'] = tango;
            mike = zulu.bind(entity)(mike);
            return entity;
        };
        yankee = foxtrot.bind(kilo)(offset, yankee);
        backup = kilo.useCallback;
        foxtrot = new Array(1);
        foxtrot[0] = echo;
        offset = function(argFoo) {
            tango = _closure2_slot0;
            zulu = tango.navigate;
            mike = {};
            entity = 'new-message';
            mike['screen'] = entity;
            entity = {};
            report = argFoo;
            report = report.id;
            entity['defaultSelectedUserId'] = report;
            mike['params'] = entity;
            entity = 'friends';
            entity = zulu.bind(tango)(entity, mike);
            entity = undefined;
            return entity;
        };
        offset = backup.bind(kilo)(offset, foxtrot);
        control = kilo.useEffect;
        backup = function() {
            zulu = _closure1_slot1;
            mike = _closure1_slot2;
            entity = 16;
            mike = mike[entity];
            entity = undefined;
            zulu = zulu.bind(entity)(mike);
            mike = {};
            tango = null;
            mike['tab_opened'] = tango;
            mike = zulu.bind(entity)(mike);
            return entity;
        };
        foxtrot = new Array(0);
        foxtrot = control.bind(kilo)(backup, foxtrot);
        backup = kilo.useMemo;
        foxtrot = new Array(5);
        foxtrot[0] = update;
        foxtrot[1] = echo;
        foxtrot[2] = result;
        foxtrot[3] = sizing;
        foxtrot[4] = verify;
        verify = function() {
            _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
                entity = new Array(0);
                zulu = _closure2_slot4;
                mike = _closure2_slot6;
                zulu = zulu + mike;
                mike = _closure2_slot7;
                verify = zulu + mike;
                tango = 0;
                mike = verify > tango;
                if(mike) { _fun00002_ip = 44; continue _fun00001 }
 36:
                zulu = _closure2_slot5;
                mike = zulu > tango;
 44:
                if(!mike) { _fun00002_ip = 257; continue _fun00001 }
 50:
                zulu = entity.push;
                mike = {};
                oscar = _closure1_slot1;
                yankee = _closure1_slot2;
                report = 17;
                report = yankee[report];
                offset = undefined;
                report = oscar.bind(offset)(report);
                mike['icon'] = report;
                report = _closure1_slot0;
                tango = 18;
                tango = yankee[tango];
                tango = report.bind(offset)(tango);
                tango = tango.SendMessageIcon;
                mike['IconComponent'] = tango;
                tango = 'default';
                mike['iconVariant'] = tango;
                tango = 19;
                oscar = yankee[tango];
                oscar = report.bind(offset)(oscar);
                romeo = oscar.intl;
                golf = romeo.string;
                oscar = yankee[tango];
                oscar = report.bind(offset)(oscar);
                oscar = oscar.t;
                oscar = oscar.fyA119;
                oscar = golf.bind(romeo)(oscar);
                mike['label'] = oscar;
                oscar = yankee[tango];
                oscar = report.bind(offset)(oscar);
                golf = oscar.intl;
                oscar = golf.formatToPlainString;
                tango = yankee[tango];
                tango = report.bind(offset)(tango);
                tango = tango.t;
                report = tango.1IEaw8;
                tango = {};
                tango['incoming'] = verify;
                options = _closure2_slot5;
                tango['outgoing'] = options;
                tango = oscar.bind(golf)(report, tango);
                mike['subLabel'] = tango;
                tango = function() { // Original name: onPress
                    tango = _closure2_slot0;
                    zulu = tango.navigate;
                    mike = {};
                    entity = 'requests';
                    mike['screen'] = entity;
                    entity = 'friends';
                    entity = zulu.bind(tango)(entity, mike);
                    return entity;
                };
                mike['onPress'] = tango;
                mike = zulu.bind(entity)(mike);
 257:
                return entity;
            }
        };
        verify = backup.bind(kilo)(verify, foxtrot);
        backup = kilo.useMemo;
        foxtrot = new Array(6);
        foxtrot[0] = source;
        foxtrot[1] = update;
        foxtrot[2] = echo;
        foxtrot[3] = result;
        foxtrot[4] = output;
        foxtrot[5] = sizing;
        golf = function() {
            _fun00003: for(var _fun00004_ip = 0; ; ) switch(_fun00004_ip) {
 0:
                tango = _closure1_slot7;
                zulu = _closure1_slot8;
                mike = {};
                golf = _closure1_slot9;
                oscar = _closure1_slot4;
                report = {};
                entity = _closure2_slot1;
                entity = entity.container;
                report['style'] = entity;
                options = _closure2_slot4;
                entity = _closure2_slot5;
                options = options + entity;
                entity = _closure2_slot6;
                options = options + entity;
                sizing = 0;
                entity = null;
                if(!(options > sizing)) { _fun00004_ip = 459; continue _fun00003 }
 72:
                yankee = _closure1_slot7;
                offset = _closure1_slot4;
                verify = {};
                options = _closure2_slot1;
                options = options.requestsButtonContainer;
                verify['style'] = options;
                update = _closure1_slot0;
                kilo = _closure1_slot2;
                output = 20;
                romeo = kilo[output];
                options = undefined;
                romeo = update.bind(options)(romeo);
                foxtrot = romeo.TableRow;
                romeo = {'start': true, 'end': true};
                result = kilo[output];
                result = update.bind(options)(result);
                result = result.TableRow;
                control = result.Icon;
                result = {};
                sequence = _closure1_slot1;
                vacuum = 17;
                vacuum = kilo[vacuum];
                vacuum = sequence.bind(options)(vacuum);
                result['source'] = vacuum;
                result = yankee.bind(options)(control, result);
                romeo['icon'] = result;
                output = kilo[output];
                output = update.bind(options)(output);
                output = output.TableRow;
                result = output.Arrow;
                output = {};
                output = yankee.bind(options)(result, output);
                romeo['trailing'] = output;
                control = 19;
                output = kilo[control];
                output = update.bind(options)(output);
                result = output.intl;
                output = result.string;
                kilo = kilo[control];
                kilo = update.bind(options)(kilo);
                kilo = kilo.t;
                kilo = kilo.fyA119;
                kilo = output.bind(result)(kilo);
                romeo['label'] = kilo;
                output = _closure2_slot4;
                kilo = _closure2_slot5;
                kilo = output + kilo;
                if(!(!(kilo > sizing))) { _fun00004_ip = 354; continue _fun00003 }
 288:
                sizing = _closure1_slot0;
                kilo = _closure1_slot2;
                output = kilo[control];
                output = sizing.bind(options)(output);
                result = output.intl;
                output = result.formatToPlainString;
                kilo = kilo[control];
                kilo = sizing.bind(options)(kilo);
                kilo = kilo.t;
                sizing = kilo.e6BtLi;
                kilo = {};
                update = _closure2_slot6;
                kilo['spam'] = update;
                kilo = output.bind(result)(sizing, kilo);
                _fun00004_ip = 427; continue _fun00003;
 354:
                output = _closure1_slot0;
                sizing = _closure1_slot2;
                result = sizing[control];
                result = output.bind(options)(result);
                update = result.intl;
                result = update.formatToPlainString;
                sizing = sizing[control];
                sizing = output.bind(options)(sizing);
                sizing = sizing.t;
                output = sizing.1IEaw8;
                sizing = {};
                control = _closure2_slot4;
                sizing['incoming'] = control;
                control = _closure2_slot5;
                sizing['outgoing'] = control;
                kilo = result.bind(update)(output, sizing);
 427:
                romeo['subLabel'] = kilo;
                kilo = function() { // Original name: onPress
                    _fun00005: for(var _fun00006_ip = 0; ; ) switch(_fun00006_ip) {
 0:
                        zulu = _closure2_slot4;
                        mike = _closure2_slot5;
                        zulu = zulu + mike;
                        mike = 0;
                        if(!(!(zulu > mike))) { _fun00006_ip = 56; continue _fun00005 }
 21:
                        report = _closure2_slot0;
                        tango = report.navigate;
                        zulu = {};
                        mike = 'spam-requests';
                        zulu['screen'] = mike;
                        mike = 'friends';
                        mike = tango.bind(report)(mike, zulu);
                        _fun00006_ip = 87; continue _fun00005;
 56:
                        tango = _closure2_slot0;
                        zulu = tango.navigate;
                        mike = {};
                        entity = 'requests';
                        mike['screen'] = entity;
                        entity = 'friends';
                        entity = zulu.bind(tango)(entity, mike);
 87:
                        entity = undefined;
                        return entity;
                    }
                };
                romeo['onPress'] = kilo;
                romeo = yankee.bind(options)(foxtrot, romeo);
                verify['children'] = romeo;
                entity = yankee.bind(options)(offset, verify);
 459:
                options = new Array(2);
                options[0] = entity;
                yankee = _closure1_slot7;
                offset = _closure1_slot1;
                sequence = _closure1_slot2;
                entity = 21;
                verify = sequence[entity];
                entity = undefined;
                offset = offset.bind(entity)(verify);
                verify = {};
                vacuum = _closure1_slot0;
                update = 19;
                romeo = sequence[update];
                romeo = vacuum.bind(entity)(romeo);
                kilo = romeo.intl;
                foxtrot = kilo.string;
                romeo = sequence[update];
                romeo = vacuum.bind(entity)(romeo);
                romeo = romeo.t;
                romeo = romeo.oi+B4u;
                romeo = foxtrot.bind(kilo)(romeo);
                verify['title'] = romeo;
                result = true;
                verify['fullHeight'] = result;
                sizing = _closure2_slot1;
                romeo = sizing.emptyContainer;
                verify['containerStyle'] = romeo;
                foxtrot = _closure1_slot8;
                romeo = {};
                kilo = _closure1_slot4;
                backup = {};
                output = sizing.buttonContainer;
                sizing = new Array(2);
                sizing[0] = output;
                output = {};
                source = _closure2_slot3;
                output['paddingBottom'] = source;
                sizing[1] = output;
                backup['style'] = sizing;
                sizing = 22;
                sizing = sequence[sizing];
                sizing = vacuum.bind(entity)(sizing);
                output = sizing.Button;
                sizing = {};
                source = sequence[update];
                source = vacuum.bind(entity)(source);
                control = source.intl;
                source = control.string;
                update = sequence[update];
                update = vacuum.bind(entity)(update);
                update = update.t;
                update = update.zIJnAw;
                update = source.bind(control)(update);
                sizing['text'] = update;
                update = 'lg';
                sizing['size'] = update;
                echo = function() { // Original name: onPress
                    tango = _closure2_slot0;
                    zulu = tango.navigate;
                    mike = {};
                    entity = 'add-friends';
                    mike['screen'] = entity;
                    entity = {};
                    report = 'Friends Screen';
                    entity['sourcePage'] = report;
                    mike['params'] = entity;
                    entity = 'friends';
                    entity = zulu.bind(tango)(entity, mike);
                    return entity;
                };
                sizing['onPress'] = echo;
                sizing['grow'] = result;
                sizing = yankee.bind(entity)(output, sizing);
                backup['children'] = sizing;
                backup = yankee.bind(entity)(kilo, backup);
                romeo['children'] = backup;
                romeo = yankee.bind(entity)(foxtrot, romeo);
                verify['children'] = romeo;
                verify = yankee.bind(entity)(offset, verify);
                options[1] = verify;
                report['children'] = options;
                report = golf.bind(entity)(oscar, report);
                mike['children'] = report;
                entity = tango.bind(entity)(zulu, mike);
                return entity;
            }
        };
        golf = backup.bind(kilo)(golf, foxtrot);
        zulu = _closure1_slot7;
        entity = romeo[entity];
        entity = mike.bind(tango)(entity);
        mike = entity.AnalyticsLocationProvider;
        entity = {};
        entity['value'] = report;
        report = 23;
        report = romeo[report];
        oscar = oscar.bind(tango)(report);
        report = {};
        report['onSelectUser'] = yankee;
        report['handleMessage'] = offset;
        report['actions'] = verify;
        verify = false;
        report['withAffinitySuggestions'] = verify;
        report['withGameFriends'] = options;
        report['defaultNoResultsFound'] = golf;
        golf = true;
        report['hideSearchOnDefaultNoResults'] = golf;
        report = zulu.bind(tango)(oscar, report);
        entity['children'] = report;
        entity = zulu.bind(tango)(mike, entity);
        return entity;
    };
    zulu['default'] = mike;
    return entity;
})();