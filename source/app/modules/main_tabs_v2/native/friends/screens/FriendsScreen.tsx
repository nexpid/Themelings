// app/modules/main_tabs_v2/native/friends/screens/FriendsScreen.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    report = argBar;
    yankee = argBaz;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    var _closure1_slot1 = yankee;
    var _closure1_slot2 = oscard;
    entity = global;
    option = entity.Object;
    golfie = option.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(option)(zuuluu, entity, tangon);
    entity = 0;
    golfie = oscard[entity];
    tangon = argCor;
    entity = undefined;
    tangon = tangon.bind(entity)(golfie);
    var _closure1_slot3 = tangon;
    romeon = 1;
    tangon = oscard[romeon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.View;
    var _closure1_slot4 = tangon;
    tangon = 2;
    tangon = oscard[tangon];
    tangon = yankee.bind(entity)(tangon);
    var _closure1_slot5 = tangon;
    tangon = 3;
    tangon = oscard[tangon];
    tangon = yankee.bind(entity)(tangon);
    var _closure1_slot6 = tangon;
    tangon = 4;
    golfie = oscard[tangon];
    golfie = report.bind(entity)(golfie);
    golfie = golfie.jsx;
    var _closure1_slot7 = golfie;
    golfie = oscard[tangon];
    golfie = report.bind(entity)(golfie);
    golfie = golfie.Fragment;
    var _closure1_slot8 = golfie;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.jsxs;
    var _closure1_slot9 = tangon;
    tangon = 5;
    tangon = oscard[tangon];
    option = report.bind(entity)(tangon);
    golfie = option.createStyles;
    tangon = {};
    verify = {};
    offset = 6;
    foxtra = oscard[offset];
    foxtra = yankee.bind(entity)(foxtra);
    foxtra = foxtra.spacing;
    foxtra = foxtra.PX_8;
    verify['paddingTop'] = foxtra;
    verify['flex'] = romeon;
    tangon['container'] = verify;
    verify = {};
    romeon = oscard[offset];
    romeon = yankee.bind(entity)(romeon);
    romeon = romeon.spacing;
    romeon = romeon.PX_16;
    verify['marginHorizontal'] = romeon;
    romeon = oscard[offset];
    romeon = yankee.bind(entity)(romeon);
    romeon = romeon.radii;
    romeon = romeon.lg;
    verify['borderRadius'] = romeon;
    romeon = 'hidden';
    verify['overflow'] = romeon;
    tangon['requestsButtonContainer'] = verify;
    verify = {'justifyContent': 'center', 'flexGrow': 1};
    tangon['emptyContainer'] = verify;
    verify = {'flexDirection': 'row', 'marginBottom': null, 'width': '100%'};
    offset = oscard[offset];
    offset = yankee.bind(entity)(offset);
    offset = offset.spacing;
    offset = offset.PX_16;
    verify['marginBottom'] = offset;
    tangon['buttonContainer'] = verify;
    tangon = golfie.bind(option)(tangon);
    var _closure1_slot10 = tangon;
    tangon = 24;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/main_tabs_v2/native/friends/screens/FriendsScreen.tsx';
    tangon = report.bind(oscard)(tangon);
    michal = function() { // Original name: FriendsScreen
        michal = _closure1_slot0;
        romeon = _closure1_slot2;
        entity = 7;
        entity = romeon[entity];
        tangon = undefined;
        report = michal.bind(tangon)(entity);
        entity = report.useNavigation;
        echoed = entity.bind(report)();
        var _closure2_slot0 = echoed;
        entity = _closure1_slot10;
        output = entity.bind(tangon)();
        var _closure2_slot1 = output;
        oscard = _closure1_slot1;
        entity = 8;
        report = romeon[entity];
        option = oscard.bind(tangon)(report);
        report = 9;
        report = romeon[report];
        report = oscard.bind(tangon)(report);
        report = report.FRIENDS_LIST;
        report = option.bind(tangon)(report);
        report = report.analyticsLocations;
        var _closure2_slot2 = report;
        option = 10;
        option = romeon[option];
        offset = michal.bind(tangon)(option);
        verify = offset.useIsFriendTiersUIEnabled;
        option = {};
        yankee = 'FriendsScreen';
        option['location'] = yankee;
        option = verify.bind(offset)(option);
        verify = 11;
        verify = romeon[verify];
        verify = oscard.bind(tangon)(verify);
        verify = verify.bind(tangon)();
        source = verify.bottom;
        var _closure2_slot3 = source;
        verify = 12;
        verify = romeon[verify];
        foxtra = michal.bind(tangon)(verify);
        yankee = foxtra.useStateFromStoresObject;
        verify = _closure1_slot6;
        offset = new Array(2);
        offset[0] = verify;
        verify = _closure1_slot5;
        offset[1] = verify;
        verify = function() {
            entity = {};
            report = _closure1_slot0;
            golfie = _closure1_slot2;
            michal = 13;
            zuuluu = golfie[michal];
            tangon = undefined;
            offset = report.bind(tangon)(zuuluu);
            verify = offset.getIncomingFriendRequestCount;
            zuuluu = _closure1_slot6;
            option = new Array(2);
            option[0] = zuuluu;
            oscard = _closure1_slot5;
            option[1] = oscard;
            option = verify.bind(offset)(option);
            entity['incoming'] = option;
            michal = golfie[michal];
            report = report.bind(tangon)(michal);
            tangon = report.getOutgoingFriendRequestCount;
            michal = new Array(2);
            michal[0] = zuuluu;
            michal[1] = oscard;
            michal = tangon.bind(report)(michal);
            entity['outgoing'] = michal;
            michal = zuuluu.getSpamCount;
            michal = michal.bind(zuuluu)();
            entity['spam'] = michal;
            michal = zuuluu.getPendingIgnoredCount;
            michal = michal.bind(zuuluu)();
            entity['pendingIgnored'] = michal;
            return entity;
        };
        verify = yankee.bind(foxtra)(offset, verify);
        update = verify.incoming;
        var _closure2_slot4 = update;
        result = verify.outgoing;
        var _closure2_slot5 = result;
        sizing = verify.spam;
        var _closure2_slot6 = sizing;
        verify = verify.pendingIgnored;
        var _closure2_slot7 = verify;
        kiloes = _closure1_slot3;
        foxtra = kiloes.useCallback;
        yankee = new Array(1);
        yankee[0] = report;
        offset = function(argFoo) {
            tangon = argFoo;
            oscard = _closure1_slot0;
            report = _closure1_slot2;
            entity = 14;
            zuuluu = report[entity];
            entity = undefined;
            oscard = oscard.bind(entity)(zuuluu);
            zuuluu = oscard.dismissGlobalKeyboard;
            zuuluu = zuuluu.bind(oscard)();
            zuuluu = _closure1_slot1;
            michal = 15;
            michal = report[michal];
            zuuluu = zuuluu.bind(entity)(michal);
            michal = {};
            report = tangon.id;
            michal['userId'] = report;
            michal['localUser'] = tangon;
            tangon = _closure2_slot2;
            michal['sourceAnalyticsLocations'] = tangon;
            michal = zuuluu.bind(entity)(michal);
            return entity;
        };
        yankee = foxtra.bind(kiloes)(offset, yankee);
        backup = kiloes.useCallback;
        foxtra = new Array(1);
        foxtra[0] = echoed;
        offset = function(argFoo) {
            tangon = _closure2_slot0;
            zuuluu = tangon.navigate;
            michal = {};
            entity = 'new-message';
            michal['screen'] = entity;
            entity = {};
            report = argFoo;
            report = report.id;
            entity['defaultSelectedUserId'] = report;
            michal['params'] = entity;
            entity = 'friends';
            entity = zuuluu.bind(tangon)(entity, michal);
            entity = undefined;
            return entity;
        };
        offset = backup.bind(kiloes)(offset, foxtra);
        ctrled = kiloes.useEffect;
        backup = function() {
            zuuluu = _closure1_slot1;
            michal = _closure1_slot2;
            entity = 16;
            michal = michal[entity];
            entity = undefined;
            zuuluu = zuuluu.bind(entity)(michal);
            michal = {};
            tangon = null;
            michal['tab_opened'] = tangon;
            michal = zuuluu.bind(entity)(michal);
            return entity;
        };
        foxtra = new Array(0);
        foxtra = ctrled.bind(kiloes)(backup, foxtra);
        backup = kiloes.useMemo;
        foxtra = new Array(5);
        foxtra[0] = update;
        foxtra[1] = echoed;
        foxtra[2] = result;
        foxtra[3] = sizing;
        foxtra[4] = verify;
        verify = function() {
            _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
                entity = new Array(0);
                zuuluu = _closure2_slot4;
                michal = _closure2_slot6;
                zuuluu = zuuluu + michal;
                michal = _closure2_slot7;
                verify = zuuluu + michal;
                tangon = 0;
                michal = verify > tangon;
                if(michal) { _fun00002_ip = 44; continue _fun00001 }
 36:
                zuuluu = _closure2_slot5;
                michal = zuuluu > tangon;
 44:
                if(!michal) { _fun00002_ip = 257; continue _fun00001 }
 50:
                zuuluu = entity.push;
                michal = {};
                oscard = _closure1_slot1;
                yankee = _closure1_slot2;
                report = 17;
                report = yankee[report];
                offset = undefined;
                report = oscard.bind(offset)(report);
                michal['icon'] = report;
                report = _closure1_slot0;
                tangon = 18;
                tangon = yankee[tangon];
                tangon = report.bind(offset)(tangon);
                tangon = tangon.SendMessageIcon;
                michal['IconComponent'] = tangon;
                tangon = 'default';
                michal['iconVariant'] = tangon;
                tangon = 19;
                oscard = yankee[tangon];
                oscard = report.bind(offset)(oscard);
                romeon = oscard.intl;
                golfie = romeon.string;
                oscard = yankee[tangon];
                oscard = report.bind(offset)(oscard);
                oscard = oscard.t;
                oscard = oscard.fyA119;
                oscard = golfie.bind(romeon)(oscard);
                michal['label'] = oscard;
                oscard = yankee[tangon];
                oscard = report.bind(offset)(oscard);
                golfie = oscard.intl;
                oscard = golfie.formatToPlainString;
                tangon = yankee[tangon];
                tangon = report.bind(offset)(tangon);
                tangon = tangon.t;
                report = tangon.1IEaw8;
                tangon = {};
                tangon['incoming'] = verify;
                option = _closure2_slot5;
                tangon['outgoing'] = option;
                tangon = oscard.bind(golfie)(report, tangon);
                michal['subLabel'] = tangon;
                tangon = function() { // Original name: onPress
                    tangon = _closure2_slot0;
                    zuuluu = tangon.navigate;
                    michal = {};
                    entity = 'requests';
                    michal['screen'] = entity;
                    entity = 'friends';
                    entity = zuuluu.bind(tangon)(entity, michal);
                    return entity;
                };
                michal['onPress'] = tangon;
                michal = zuuluu.bind(entity)(michal);
 257:
                return entity;
            }
        };
        verify = backup.bind(kiloes)(verify, foxtra);
        backup = kiloes.useMemo;
        foxtra = new Array(6);
        foxtra[0] = source;
        foxtra[1] = update;
        foxtra[2] = echoed;
        foxtra[3] = result;
        foxtra[4] = output;
        foxtra[5] = sizing;
        golfie = function() {
            _fun00003: for(var _fun00004_ip = 0; ; ) switch(_fun00004_ip) {
 0:
                tangon = _closure1_slot7;
                zuuluu = _closure1_slot8;
                michal = {};
                golfie = _closure1_slot9;
                oscard = _closure1_slot4;
                report = {};
                entity = _closure2_slot1;
                entity = entity.container;
                report['style'] = entity;
                option = _closure2_slot4;
                entity = _closure2_slot5;
                option = option + entity;
                entity = _closure2_slot6;
                option = option + entity;
                sizing = 0;
                entity = null;
                if(!(option > sizing)) { _fun00004_ip = 461; continue _fun00003 }
 72:
                yankee = _closure1_slot7;
                offset = _closure1_slot4;
                verify = {};
                option = _closure2_slot1;
                option = option.requestsButtonContainer;
                verify['style'] = option;
                update = _closure1_slot0;
                kiloes = _closure1_slot2;
                output = 20;
                romeon = kiloes[output];
                option = undefined;
                romeon = update.bind(option)(romeon);
                foxtra = romeon.TableRow;
                romeon = {'start': true, 'end': true};
                result = kiloes[output];
                result = update.bind(option)(result);
                result = result.TableRow;
                ctrled = result.Icon;
                result = {};
                sequen = _closure1_slot1;
                vacuum = 17;
                vacuum = kiloes[vacuum];
                vacuum = sequen.bind(option)(vacuum);
                result['source'] = vacuum;
                result = yankee.bind(option)(ctrled, result);
                romeon['icon'] = result;
                output = kiloes[output];
                output = update.bind(option)(output);
                output = output.TableRow;
                result = output.Arrow;
                output = {};
                output = yankee.bind(option)(result, output);
                romeon['trailing'] = output;
                ctrled = 19;
                output = kiloes[ctrled];
                output = update.bind(option)(output);
                result = output.intl;
                output = result.string;
                kiloes = kiloes[ctrled];
                kiloes = update.bind(option)(kiloes);
                kiloes = kiloes.t;
                kiloes = kiloes.fyA119;
                kiloes = output.bind(result)(kiloes);
                romeon['label'] = kiloes;
                output = _closure2_slot4;
                kiloes = _closure2_slot5;
                kiloes = output + kiloes;
                if(!(!(kiloes > sizing))) { _fun00004_ip = 356; continue _fun00003 }
 288:
                sizing = _closure1_slot0;
                kiloes = _closure1_slot2;
                output = kiloes[ctrled];
                output = sizing.bind(option)(output);
                result = output.intl;
                output = result.formatToPlainString;
                kiloes = kiloes[ctrled];
                kiloes = sizing.bind(option)(kiloes);
                kiloes = kiloes.t;
                sizing = kiloes.e6BtLi;
                kiloes = {};
                update = _closure2_slot6;
                kiloes['spam'] = update;
                kiloes = output.bind(result)(sizing, kiloes);
                _fun00004_ip = 429; continue _fun00003;
 356:
                output = _closure1_slot0;
                sizing = _closure1_slot2;
                result = sizing[ctrled];
                result = output.bind(option)(result);
                update = result.intl;
                result = update.formatToPlainString;
                sizing = sizing[ctrled];
                sizing = output.bind(option)(sizing);
                sizing = sizing.t;
                output = sizing.1IEaw8;
                sizing = {};
                ctrled = _closure2_slot4;
                sizing['incoming'] = ctrled;
                ctrled = _closure2_slot5;
                sizing['outgoing'] = ctrled;
                kiloes = result.bind(update)(output, sizing);
 429:
                romeon['subLabel'] = kiloes;
                kiloes = function() { // Original name: onPress
                    _fun00005: for(var _fun00006_ip = 0; ; ) switch(_fun00006_ip) {
 0:
                        zuuluu = _closure2_slot4;
                        michal = _closure2_slot5;
                        zuuluu = zuuluu + michal;
                        michal = 0;
                        if(!(!(zuuluu > michal))) { _fun00006_ip = 56; continue _fun00005 }
 21:
                        report = _closure2_slot0;
                        tangon = report.navigate;
                        zuuluu = {};
                        michal = 'spam-requests';
                        zuuluu['screen'] = michal;
                        michal = 'friends';
                        michal = tangon.bind(report)(michal, zuuluu);
                        _fun00006_ip = 87; continue _fun00005;
 56:
                        tangon = _closure2_slot0;
                        zuuluu = tangon.navigate;
                        michal = {};
                        entity = 'requests';
                        michal['screen'] = entity;
                        entity = 'friends';
                        entity = zuuluu.bind(tangon)(entity, michal);
 87:
                        entity = undefined;
                        return entity;
                    }
                };
                romeon['onPress'] = kiloes;
                romeon = yankee.bind(option)(foxtra, romeon);
                verify['children'] = romeon;
                entity = yankee.bind(option)(offset, verify);
 461:
                option = new Array(2);
                option[0] = entity;
                yankee = _closure1_slot7;
                offset = _closure1_slot1;
                sequen = _closure1_slot2;
                entity = 21;
                verify = sequen[entity];
                entity = undefined;
                offset = offset.bind(entity)(verify);
                verify = {};
                vacuum = _closure1_slot0;
                update = 19;
                romeon = sequen[update];
                romeon = vacuum.bind(entity)(romeon);
                kiloes = romeon.intl;
                foxtra = kiloes.string;
                romeon = sequen[update];
                romeon = vacuum.bind(entity)(romeon);
                romeon = romeon.t;
                romeon = romeon.oi+B4u;
                romeon = foxtra.bind(kiloes)(romeon);
                verify['title'] = romeon;
                result = true;
                verify['fullHeight'] = result;
                sizing = _closure2_slot1;
                romeon = sizing.emptyContainer;
                verify['containerStyle'] = romeon;
                foxtra = _closure1_slot8;
                romeon = {};
                kiloes = _closure1_slot4;
                backup = {};
                output = sizing.buttonContainer;
                sizing = new Array(2);
                sizing[0] = output;
                output = {};
                source = _closure2_slot3;
                output['paddingBottom'] = source;
                sizing[1] = output;
                backup['style'] = sizing;
                sizing = 22;
                sizing = sequen[sizing];
                sizing = vacuum.bind(entity)(sizing);
                output = sizing.Button;
                sizing = {};
                source = sequen[update];
                source = vacuum.bind(entity)(source);
                ctrled = source.intl;
                source = ctrled.string;
                update = sequen[update];
                update = vacuum.bind(entity)(update);
                update = update.t;
                update = update.zIJnAw;
                update = source.bind(ctrled)(update);
                sizing['text'] = update;
                update = 'lg';
                sizing['size'] = update;
                echoed = function() { // Original name: onPress
                    tangon = _closure2_slot0;
                    zuuluu = tangon.navigate;
                    michal = {};
                    entity = 'add-friends';
                    michal['screen'] = entity;
                    entity = {};
                    report = 'Friends Screen';
                    entity['sourcePage'] = report;
                    michal['params'] = entity;
                    entity = 'friends';
                    entity = zuuluu.bind(tangon)(entity, michal);
                    return entity;
                };
                sizing['onPress'] = echoed;
                sizing['grow'] = result;
                sizing = yankee.bind(entity)(output, sizing);
                backup['children'] = sizing;
                backup = yankee.bind(entity)(kiloes, backup);
                romeon['children'] = backup;
                romeon = yankee.bind(entity)(foxtra, romeon);
                verify['children'] = romeon;
                verify = yankee.bind(entity)(offset, verify);
                option[1] = verify;
                report['children'] = option;
                report = golfie.bind(entity)(oscard, report);
                michal['children'] = report;
                entity = tangon.bind(entity)(zuuluu, michal);
                return entity;
            }
        };
        golfie = backup.bind(kiloes)(golfie, foxtra);
        zuuluu = _closure1_slot7;
        entity = romeon[entity];
        entity = michal.bind(tangon)(entity);
        michal = entity.AnalyticsLocationProvider;
        entity = {};
        entity['value'] = report;
        report = 23;
        report = romeon[report];
        oscard = oscard.bind(tangon)(report);
        report = {};
        report['onSelectUser'] = yankee;
        report['handleMessage'] = offset;
        report['actions'] = verify;
        verify = false;
        report['withAffinitySuggestions'] = verify;
        report['withGameFriends'] = option;
        report['defaultNoResultsFound'] = golfie;
        golfie = true;
        report['hideSearchOnDefaultNoResults'] = golfie;
        report = zuuluu.bind(tangon)(oscard, report);
        entity['children'] = report;
        entity = zuuluu.bind(tangon)(michal, entity);
        return entity;
    };
    zuuluu['default'] = michal;
    return entity;
})();