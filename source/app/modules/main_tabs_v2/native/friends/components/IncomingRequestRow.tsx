// app/modules/main_tabs_v2/native/friends/components/IncomingRequestRow.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    report = argBar;
    golfie = argBaz;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    var _closure1_slot1 = golfie;
    var _closure1_slot2 = oscard;
    entity = global;
    verify = entity.Object;
    option = verify.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = option.bind(verify)(zuuluu, entity, tangon);
    entity = 0;
    option = oscard[entity];
    tangon = argCor;
    entity = undefined;
    tangon = tangon.bind(entity)(option);
    var _closure1_slot3 = tangon;
    tangon = 1;
    tangon = oscard[tangon];
    tangon = golfie.bind(entity)(tangon);
    var _closure1_slot4 = tangon;
    tangon = 2;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.UserRowModes;
    var _closure1_slot5 = tangon;
    tangon = 3;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.RelationshipTypes;
    var _closure1_slot6 = tangon;
    tangon = 4;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.jsx;
    var _closure1_slot7 = tangon;
    tangon = {};
    golfie = 'accept';
    tangon['ACCEPT'] = golfie;
    golfie = 'decline';
    tangon['DECLINE'] = golfie;
    golfie = 'wave';
    tangon['WAVE'] = golfie;
    var _closure1_slot8 = tangon;
    tangon = 13;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/main_tabs_v2/native/friends/components/IncomingRequestRow.tsx';
    tangon = report.bind(oscard)(tangon);
    michal = function(argFoo) { // Original name: IncomingRequestRow
        report = argFoo;
        yankee = report.user;
        var _closure2_slot0 = yankee;
        michal = report.accepted;
        var _closure2_slot1 = michal;
        verify = report.onAcceptIncomingRequest;
        var _closure2_slot2 = verify;
        option = report.onDeclinedIncomingRequest;
        var _closure2_slot3 = option;
        tangon = {'user': 0, 'accepted': 0, 'onAcceptIncomingRequest': 0, 'onDeclinedIncomingRequest': 0};
        source = null;
        ctrled = tangon;
        zuuluu = silentSetPrototypeOf(ctrled, source);
        ctrled = {};
        source = report;
        update = tangon;
        kiloes = copyDataProperties(ctrled, source, update);
        oscard = _closure1_slot0;
        romeon = _closure1_slot2;
        zuuluu = 5;
        zuuluu = romeon[zuuluu];
        tangon = undefined;
        offset = oscard.bind(tangon)(zuuluu);
        golfie = offset.useSharedValue;
        zuuluu = false;
        offset = golfie.bind(offset)(zuuluu);
        var _closure2_slot4 = offset;
        zuuluu = 6;
        zuuluu = romeon[zuuluu];
        backup = oscard.bind(tangon)(zuuluu);
        foxtra = backup.useStateFromStores;
        zuuluu = _closure1_slot4;
        golfie = new Array(1);
        golfie[0] = zuuluu;
        zuuluu = function() {
            entity = _closure1_slot4;
            entity = entity.useReducedMotion;
            return entity;
        };
        golfie = foxtra.bind(backup)(golfie, zuuluu);
        foxtra = _closure1_slot3;
        sizing = foxtra.useEffect;
        backup = new Array(2);
        backup[0] = michal;
        backup[1] = offset;
        zuuluu = function() {
            zuuluu = _closure2_slot4;
            michal = zuuluu.set;
            entity = _closure2_slot1;
            entity = michal.bind(zuuluu)(entity);
            entity = undefined;
            return entity;
        };
        zuuluu = sizing.bind(foxtra)(zuuluu, backup);
        backup = foxtra.useMemo;
        zuuluu = new Array(2);
        zuuluu[0] = michal;
        zuuluu[1] = yankee;
        michal = function() {
            _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
                entity = _closure2_slot1;
                zuuluu = {};
                michal = _closure1_slot8;
                if(entity) { _fun00002_ip = 232; continue _fun00001 }
 22:
                entity = michal.ACCEPT;
                zuuluu['name'] = entity;
                oscard = _closure1_slot0;
                kiloes = _closure1_slot2;
                report = 7;
                entity = kiloes[report];
                backup = undefined;
                entity = oscard.bind(backup)(entity);
                offset = entity.intl;
                verify = offset.formatToPlainString;
                entity = kiloes[report];
                entity = oscard.bind(backup)(entity);
                entity = entity.t;
                tangon = entity.6p0yBg;
                entity = {};
                romeon = _closure1_slot1;
                yankee = 8;
                foxtra = kiloes[yankee];
                output = romeon.bind(backup)(foxtra);
                sizing = output.getName;
                foxtra = _closure2_slot0;
                sizing = sizing.bind(output)(foxtra);
                entity['name'] = sizing;
                entity = verify.bind(offset)(tangon, entity);
                zuuluu['label'] = entity;
                entity = new Array(2);
                entity[0] = zuuluu;
                tangon = {};
                verify = michal.DECLINE;
                tangon['name'] = verify;
                verify = kiloes[report];
                verify = oscard.bind(backup)(verify);
                offset = verify.intl;
                verify = offset.formatToPlainString;
                report = kiloes[report];
                report = oscard.bind(backup)(report);
                report = report.t;
                oscard = report.C9Xe6+;
                report = {};
                yankee = kiloes[yankee];
                romeon = romeon.bind(backup)(yankee);
                yankee = romeon.getName;
                yankee = yankee.bind(romeon)(foxtra);
                report['name'] = yankee;
                report = verify.bind(offset)(oscard, report);
                tangon['label'] = report;
                entity[1] = tangon;
                _fun00002_ip = 352; continue _fun00001;
 232:
                michal = michal.WAVE;
                zuuluu['name'] = michal;
                tangon = _closure1_slot0;
                yankee = _closure1_slot2;
                michal = 7;
                report = yankee[michal];
                offset = undefined;
                report = tangon.bind(offset)(report);
                oscard = report.intl;
                report = oscard.formatToPlainString;
                michal = yankee[michal];
                michal = tangon.bind(offset)(michal);
                michal = michal.t;
                tangon = michal.m0zYbW;
                michal = {};
                verify = _closure1_slot1;
                option = 8;
                option = yankee[option];
                verify = verify.bind(offset)(option);
                option = verify.getName;
                golfie = _closure2_slot0;
                golfie = option.bind(verify)(golfie);
                michal['username'] = golfie;
                michal = report.bind(oscard)(tangon, michal);
                zuuluu['label'] = michal;
                michal = new Array(1);
                michal[0] = zuuluu;
                entity = michal;
 352:
                return entity;
            }
        };
        backup = backup.bind(foxtra)(michal, zuuluu);
        zuuluu = foxtra.useCallback;
        michal = new Array(4);
        michal[0] = verify;
        michal[1] = option;
        michal[2] = offset;
        michal[3] = yankee;
        entity = function(argFoo) {
            _fun00003: for(var _fun00004_ip = 0; ; ) switch(_fun00004_ip) {
 0:
                entity = argFoo;
                entity = entity.nativeEvent;
                zuuluu = entity.actionName;
                michal = _closure1_slot8;
                michal = michal.ACCEPT;
                if(!(michal !== zuuluu)) { _fun00004_ip = 174; continue _fun00003 }
 34:
                michal = _closure1_slot8;
                michal = michal.DECLINE;
                if(!(michal !== zuuluu)) { _fun00004_ip = 123; continue _fun00003 }
 48:
                michal = _closure1_slot8;
                michal = michal.WAVE;
                if(!(michal !== zuuluu)) { _fun00004_ip = 66; continue _fun00003 }
 62:
                michal = undefined;
                return michal;
 66:
                tangon = _closure1_slot0;
                zuuluu = _closure1_slot2;
                michal = 9;
                zuuluu = zuuluu[michal];
                michal = undefined;
                oscard = tangon.bind(michal)(zuuluu);
                report = oscard.sendWave;
                michal = _closure2_slot0;
                tangon = michal.id;
                zuuluu = true;
                michal = 'Incoming Friend Request';
                michal = report.bind(oscard)(tangon, zuuluu, michal);
                return michal;
 123:
                michal = _closure2_slot3;
                tangon = _closure2_slot0;
                report = undefined;
                michal = michal.bind(report)(tangon);
                zuuluu = _closure1_slot0;
                oscard = _closure1_slot2;
                michal = 9;
                michal = oscard[michal];
                zuuluu = zuuluu.bind(report)(michal);
                michal = zuuluu.dismissIncomingRequest;
                michal = michal.bind(zuuluu)(tangon);
                return michal;
 174:
                report = _closure2_slot4;
                tangon = report.set;
                michal = true;
                michal = tangon.bind(report)(michal);
                michal = _closure2_slot2;
                zuuluu = _closure2_slot0;
                tangon = undefined;
                michal = michal.bind(tangon)(zuuluu);
                michal = _closure1_slot0;
                report = _closure1_slot2;
                entity = 9;
                entity = report[entity];
                michal = michal.bind(tangon)(entity);
                entity = michal.acceptIncomingRequest;
                entity = entity.bind(michal)(zuuluu);
                return entity;
            }
        };
        foxtra = zuuluu.bind(foxtra)(entity, michal);
        michal = _closure1_slot1;
        entity = 8;
        entity = romeon[entity];
        zuuluu = michal.bind(tangon)(entity);
        entity = zuuluu.getUserTag;
        result = entity.bind(zuuluu)(yankee);
        zuuluu = _closure1_slot7;
        entity = 10;
        entity = romeon[entity];
        michal = michal.bind(tangon)(entity);
        entity = {};
        ctrled = entity;
        source = kiloes;
        kiloes = copyDataProperties(ctrled, source);
        kiloes = 'user';
        entity[kiloes] = yankee;
        kiloes = _closure1_slot6;
        sizing = kiloes.PENDING_INCOMING;
        kiloes = 'type';
        entity[kiloes] = sizing;
        report = _closure1_slot5;
        kiloes = report.ACTIONS;
        report = 'mode';
        entity[report] = kiloes;
        report = 'accessibilityActions';
        entity[report] = backup;
        backup = 7;
        report = romeon[backup];
        report = oscard.bind(tangon)(report);
        output = report.intl;
        sizing = output.formatToPlainString;
        report = romeon[backup];
        report = oscard.bind(tangon)(report);
        report = report.t;
        kiloes = report.u6lp4+;
        report = {};
        report['name'] = result;
        kiloes = sizing.bind(output)(kiloes, report);
        report = 'accessibilityLabel';
        entity[report] = kiloes;
        report = 'onAccessibilityAction';
        entity[report] = foxtra;
        report = 11;
        report = romeon[report];
        report = oscard.bind(tangon)(report);
        foxtra = report.ActionStatusSubLabel;
        report = {};
        report['actioned'] = offset;
        report['label'] = result;
        kiloes = romeon[backup];
        kiloes = oscard.bind(tangon)(kiloes);
        output = kiloes.intl;
        sizing = output.string;
        kiloes = romeon[backup];
        kiloes = oscard.bind(tangon)(kiloes);
        kiloes = kiloes.t;
        kiloes = kiloes.0E614e;
        kiloes = sizing.bind(output)(kiloes);
        report['actionStatus'] = kiloes;
        kiloes = romeon[backup];
        kiloes = oscard.bind(tangon)(kiloes);
        output = kiloes.intl;
        sizing = output.formatToPlainString;
        backup = romeon[backup];
        backup = oscard.bind(tangon)(backup);
        backup = backup.t;
        kiloes = backup.cRwkp6;
        backup = {};
        backup['name'] = result;
        backup = sizing.bind(output)(kiloes, backup);
        report['actionStatusAccessibilityLabel'] = backup;
        backup = !golfie;
        report['animate'] = backup;
        foxtra = zuuluu.bind(tangon)(foxtra, report);
        report = 'subLabel';
        entity[report] = foxtra;
        report = 12;
        report = romeon[report];
        report = oscard.bind(tangon)(report);
        oscard = report.IncomingRequestRowActions;
        report = {};
        report['user'] = yankee;
        report['pressed'] = offset;
        report['onAcceptIncomingRequest'] = verify;
        report['onDeclinedIncomingRequest'] = option;
        golfie = !golfie;
        report['animate'] = golfie;
        oscard = zuuluu.bind(tangon)(oscard, report);
        report = 'trailing';
        entity[report] = oscard;
        entity = zuuluu.bind(tangon)(michal, entity);
        return entity;
    };
    zuuluu['IncomingRequestRow'] = michal;
    return entity;
})();