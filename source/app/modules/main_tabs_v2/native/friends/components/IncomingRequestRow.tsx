// app/modules/main_tabs_v2/native/friends/components/IncomingRequestRow.tsx
export default (function(argFoo, argBar, argBaz, argCorge, _, argFred, argPlugh) {
    report = argBar;
    golf = argBaz;
    zulu = argFred;
    oscar = argPlugh;
    var _closure1_slot0 = report;
    var _closure1_slot1 = golf;
    var _closure1_slot2 = oscar;
    entity = global;
    verify = entity.Object;
    options = verify.defineProperty;
    tango = {};
    entity = true;
    tango['value'] = entity;
    entity = '__esModule';
    entity = options.bind(verify)(zulu, entity, tango);
    entity = 0;
    options = oscar[entity];
    tango = argCorge;
    entity = undefined;
    tango = tango.bind(entity)(options);
    var _closure1_slot3 = tango;
    tango = 1;
    tango = oscar[tango];
    tango = golf.bind(entity)(tango);
    var _closure1_slot4 = tango;
    tango = 2;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.UserRowModes;
    var _closure1_slot5 = tango;
    tango = 3;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.RelationshipTypes;
    var _closure1_slot6 = tango;
    tango = 4;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.jsx;
    var _closure1_slot7 = tango;
    tango = {};
    golf = 'accept';
    tango['ACCEPT'] = golf;
    golf = 'decline';
    tango['DECLINE'] = golf;
    golf = 'wave';
    tango['WAVE'] = golf;
    var _closure1_slot8 = tango;
    tango = 13;
    tango = oscar[tango];
    oscar = report.bind(entity)(tango);
    report = oscar.fileFinishedImporting;
    tango = 'modules/main_tabs_v2/native/friends/components/IncomingRequestRow.tsx';
    tango = report.bind(oscar)(tango);
    mike = function(argFoo) { // Original name: IncomingRequestRow
        report = argFoo;
        yankee = report.user;
        var _closure2_slot0 = yankee;
        mike = report.accepted;
        var _closure2_slot1 = mike;
        verify = report.onAcceptIncomingRequest;
        var _closure2_slot2 = verify;
        options = report.onDeclinedIncomingRequest;
        var _closure2_slot3 = options;
        tango = {'user': 0, 'accepted': 0, 'onAcceptIncomingRequest': 0, 'onDeclinedIncomingRequest': 0};
        source = null;
        control = tango;
        zulu = silentSetPrototypeOf(control, source);
        control = {};
        source = report;
        update = tango;
        kilo = copyDataProperties(control, source, update);
        oscar = _closure1_slot0;
        romeo = _closure1_slot2;
        zulu = 5;
        zulu = romeo[zulu];
        tango = undefined;
        offset = oscar.bind(tango)(zulu);
        golf = offset.useSharedValue;
        zulu = false;
        offset = golf.bind(offset)(zulu);
        var _closure2_slot4 = offset;
        zulu = 6;
        zulu = romeo[zulu];
        backup = oscar.bind(tango)(zulu);
        foxtrot = backup.useStateFromStores;
        zulu = _closure1_slot4;
        golf = new Array(1);
        golf[0] = zulu;
        zulu = function() {
            entity = _closure1_slot4;
            entity = entity.useReducedMotion;
            return entity;
        };
        golf = foxtrot.bind(backup)(golf, zulu);
        foxtrot = _closure1_slot3;
        sizing = foxtrot.useEffect;
        backup = new Array(2);
        backup[0] = mike;
        backup[1] = offset;
        zulu = function() {
            zulu = _closure2_slot4;
            mike = zulu.set;
            entity = _closure2_slot1;
            entity = mike.bind(zulu)(entity);
            entity = undefined;
            return entity;
        };
        zulu = sizing.bind(foxtrot)(zulu, backup);
        backup = foxtrot.useMemo;
        zulu = new Array(2);
        zulu[0] = mike;
        zulu[1] = yankee;
        mike = function() {
            _fun119576: for(var _fun119576_ip = 0; ; ) switch(_fun119576_ip) {
 0:
                entity = _closure2_slot1;
                zulu = {};
                mike = _closure1_slot8;
                if(entity) { _fun119576_ip = 232; continue _fun119576 }
 22:
                entity = mike.ACCEPT;
                zulu['name'] = entity;
                oscar = _closure1_slot0;
                kilo = _closure1_slot2;
                report = 7;
                entity = kilo[report];
                backup = undefined;
                entity = oscar.bind(backup)(entity);
                offset = entity.intl;
                verify = offset.formatToPlainString;
                entity = kilo[report];
                entity = oscar.bind(backup)(entity);
                entity = entity.t;
                tango = entity.6p0yBg;
                entity = {};
                romeo = _closure1_slot1;
                yankee = 8;
                foxtrot = kilo[yankee];
                output = romeo.bind(backup)(foxtrot);
                sizing = output.getName;
                foxtrot = _closure2_slot0;
                sizing = sizing.bind(output)(foxtrot);
                entity['name'] = sizing;
                entity = verify.bind(offset)(tango, entity);
                zulu['label'] = entity;
                entity = new Array(2);
                entity[0] = zulu;
                tango = {};
                verify = mike.DECLINE;
                tango['name'] = verify;
                verify = kilo[report];
                verify = oscar.bind(backup)(verify);
                offset = verify.intl;
                verify = offset.formatToPlainString;
                report = kilo[report];
                report = oscar.bind(backup)(report);
                report = report.t;
                oscar = report.C9Xe6+;
                report = {};
                yankee = kilo[yankee];
                romeo = romeo.bind(backup)(yankee);
                yankee = romeo.getName;
                yankee = yankee.bind(romeo)(foxtrot);
                report['name'] = yankee;
                report = verify.bind(offset)(oscar, report);
                tango['label'] = report;
                entity[1] = tango;
                _fun119576_ip = 352; continue _fun119576;
 232:
                mike = mike.WAVE;
                zulu['name'] = mike;
                tango = _closure1_slot0;
                yankee = _closure1_slot2;
                mike = 7;
                report = yankee[mike];
                offset = undefined;
                report = tango.bind(offset)(report);
                oscar = report.intl;
                report = oscar.formatToPlainString;
                mike = yankee[mike];
                mike = tango.bind(offset)(mike);
                mike = mike.t;
                tango = mike.m0zYbW;
                mike = {};
                verify = _closure1_slot1;
                options = 8;
                options = yankee[options];
                verify = verify.bind(offset)(options);
                options = verify.getName;
                golf = _closure2_slot0;
                golf = options.bind(verify)(golf);
                mike['username'] = golf;
                mike = report.bind(oscar)(tango, mike);
                zulu['label'] = mike;
                mike = new Array(1);
                mike[0] = zulu;
                entity = mike;
 352:
                return entity;
            }
        };
        backup = backup.bind(foxtrot)(mike, zulu);
        zulu = foxtrot.useCallback;
        mike = new Array(4);
        mike[0] = verify;
        mike[1] = options;
        mike[2] = offset;
        mike[3] = yankee;
        entity = function(argFoo) {
            _fun119577: for(var _fun119577_ip = 0; ; ) switch(_fun119577_ip) {
 0:
                entity = argFoo;
                entity = entity.nativeEvent;
                zulu = entity.actionName;
                mike = _closure1_slot8;
                mike = mike.ACCEPT;
                if(!(mike !== zulu)) { _fun119577_ip = 174; continue _fun119577 }
 34:
                mike = _closure1_slot8;
                mike = mike.DECLINE;
                if(!(mike !== zulu)) { _fun119577_ip = 123; continue _fun119577 }
 48:
                mike = _closure1_slot8;
                mike = mike.WAVE;
                if(!(mike !== zulu)) { _fun119577_ip = 66; continue _fun119577 }
 62:
                mike = undefined;
                return mike;
 66:
                tango = _closure1_slot0;
                zulu = _closure1_slot2;
                mike = 9;
                zulu = zulu[mike];
                mike = undefined;
                oscar = tango.bind(mike)(zulu);
                report = oscar.sendWave;
                mike = _closure2_slot0;
                tango = mike.id;
                zulu = true;
                mike = 'Incoming Friend Request';
                mike = report.bind(oscar)(tango, zulu, mike);
                return mike;
 123:
                mike = _closure2_slot3;
                tango = _closure2_slot0;
                report = undefined;
                mike = mike.bind(report)(tango);
                zulu = _closure1_slot0;
                oscar = _closure1_slot2;
                mike = 9;
                mike = oscar[mike];
                zulu = zulu.bind(report)(mike);
                mike = zulu.dismissIncomingRequest;
                mike = mike.bind(zulu)(tango);
                return mike;
 174:
                report = _closure2_slot4;
                tango = report.set;
                mike = true;
                mike = tango.bind(report)(mike);
                mike = _closure2_slot2;
                zulu = _closure2_slot0;
                tango = undefined;
                mike = mike.bind(tango)(zulu);
                mike = _closure1_slot0;
                report = _closure1_slot2;
                entity = 9;
                entity = report[entity];
                mike = mike.bind(tango)(entity);
                entity = mike.acceptIncomingRequest;
                entity = entity.bind(mike)(zulu);
                return entity;
            }
        };
        foxtrot = zulu.bind(foxtrot)(entity, mike);
        mike = _closure1_slot1;
        entity = 8;
        entity = romeo[entity];
        zulu = mike.bind(tango)(entity);
        entity = zulu.getUserTag;
        result = entity.bind(zulu)(yankee);
        zulu = _closure1_slot7;
        entity = 10;
        entity = romeo[entity];
        mike = mike.bind(tango)(entity);
        entity = {};
        control = entity;
        source = kilo;
        kilo = copyDataProperties(control, source);
        kilo = 'user';
        entity[kilo] = yankee;
        kilo = _closure1_slot6;
        sizing = kilo.PENDING_INCOMING;
        kilo = 'type';
        entity[kilo] = sizing;
        report = _closure1_slot5;
        kilo = report.ACTIONS;
        report = 'mode';
        entity[report] = kilo;
        report = 'accessibilityActions';
        entity[report] = backup;
        backup = 7;
        report = romeo[backup];
        report = oscar.bind(tango)(report);
        output = report.intl;
        sizing = output.formatToPlainString;
        report = romeo[backup];
        report = oscar.bind(tango)(report);
        report = report.t;
        kilo = report.u6lp4+;
        report = {};
        report['name'] = result;
        kilo = sizing.bind(output)(kilo, report);
        report = 'accessibilityLabel';
        entity[report] = kilo;
        report = 'onAccessibilityAction';
        entity[report] = foxtrot;
        report = 11;
        report = romeo[report];
        report = oscar.bind(tango)(report);
        foxtrot = report.ActionStatusSubLabel;
        report = {};
        report['actioned'] = offset;
        report['label'] = result;
        kilo = romeo[backup];
        kilo = oscar.bind(tango)(kilo);
        output = kilo.intl;
        sizing = output.string;
        kilo = romeo[backup];
        kilo = oscar.bind(tango)(kilo);
        kilo = kilo.t;
        kilo = kilo.0E614e;
        kilo = sizing.bind(output)(kilo);
        report['actionStatus'] = kilo;
        kilo = romeo[backup];
        kilo = oscar.bind(tango)(kilo);
        output = kilo.intl;
        sizing = output.formatToPlainString;
        backup = romeo[backup];
        backup = oscar.bind(tango)(backup);
        backup = backup.t;
        kilo = backup.cRwkp6;
        backup = {};
        backup['name'] = result;
        backup = sizing.bind(output)(kilo, backup);
        report['actionStatusAccessibilityLabel'] = backup;
        backup = !golf;
        report['animate'] = backup;
        foxtrot = zulu.bind(tango)(foxtrot, report);
        report = 'subLabel';
        entity[report] = foxtrot;
        report = 12;
        report = romeo[report];
        report = oscar.bind(tango)(report);
        oscar = report.IncomingRequestRowActions;
        report = {};
        report['user'] = yankee;
        report['pressed'] = offset;
        report['onAcceptIncomingRequest'] = verify;
        report['onDeclinedIncomingRequest'] = options;
        golf = !golf;
        report['animate'] = golf;
        oscar = zulu.bind(tango)(oscar, report);
        report = 'trailing';
        entity[report] = oscar;
        entity = zulu.bind(tango)(mike, entity);
        return entity;
    };
    zulu['IncomingRequestRow'] = mike;
    return entity;
})();