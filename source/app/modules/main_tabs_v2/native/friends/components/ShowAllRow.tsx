// app/modules/main_tabs_v2/native/friends/components/ShowAllRow.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    report = argBar;
    yankee = argBaz;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    var _closure1_slot1 = yankee;
    var _closure1_slot2 = oscard;
    entity = global;
    option = entity.Object;
    golfie = option.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(option)(zuuluu, entity, tangon);
    entity = 0;
    golfie = oscard[entity];
    tangon = argCor;
    entity = undefined;
    tangon = tangon.bind(entity)(golfie);
    tangon = 1;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.View;
    var _closure1_slot3 = tangon;
    tangon = 2;
    golfie = oscard[tangon];
    golfie = report.bind(entity)(golfie);
    golfie = golfie.jsx;
    var _closure1_slot4 = golfie;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.jsxs;
    var _closure1_slot5 = tangon;
    tangon = 3;
    tangon = oscard[tangon];
    option = report.bind(entity)(tangon);
    golfie = option.createStyles;
    tangon = {};
    verify = {'flexDirection': 'row', 'alignItems': 'center'};
    tangon['labelContainer'] = verify;
    verify = {};
    offset = 4;
    offset = oscard[offset];
    offset = yankee.bind(entity)(offset);
    offset = offset.spacing;
    offset = offset.PX_12;
    verify['marginLeft'] = offset;
    tangon['showAllText'] = verify;
    tangon = golfie.bind(option)(tangon);
    var _closure1_slot6 = tangon;
    tangon = 11;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/main_tabs_v2/native/friends/components/ShowAllRow.tsx';
    tangon = report.bind(oscard)(tangon);
    michal = function(argFoo) { // Original name: ShowAllRow
        entity = argFoo;
        output = entity.users;
        verify = entity.onPress;
        result = entity.count;
        entity = _closure1_slot6;
        tangon = undefined;
        backup = entity.bind(tangon)();
        zuuluu = _closure1_slot4;
        oscard = _closure1_slot0;
        golfie = _closure1_slot2;
        report = 5;
        entity = golfie[report];
        entity = oscard.bind(tangon)(entity);
        michal = entity.TableRow;
        entity = {};
        entity['onPress'] = verify;
        verify = true;
        entity['end'] = verify;
        offset = _closure1_slot5;
        verify = _closure1_slot3;
        option = {};
        yankee = backup.labelContainer;
        option['style'] = yankee;
        yankee = 6;
        yankee = golfie[yankee];
        yankee = oscard.bind(tangon)(yankee);
        romeon = yankee.AvatarDuoPile;
        yankee = {};
        foxtra = 7;
        foxtra = golfie[foxtra];
        foxtra = oscard.bind(tangon)(foxtra);
        foxtra = foxtra.AvatarSizes;
        foxtra = foxtra.XSMALL_20;
        yankee['size'] = foxtra;
        foxtra = '';
        yankee['aria-label'] = foxtra;
        sizing = output.slice;
        kiloes = 0;
        foxtra = 2;
        sizing = sizing.bind(output)(kiloes, foxtra);
        kiloes = sizing.map;
        foxtra = function(argFoo, argBar) {
            romeon = argFoo;
            report = _closure1_slot4;
            zuuluu = _closure1_slot1;
            golfie = _closure1_slot2;
            michal = 8;
            michal = golfie[michal];
            tangon = undefined;
            zuuluu = zuuluu.bind(tangon)(michal);
            michal = {};
            yankee = romeon.getAvatarSource;
            oscard = _closure1_slot0;
            entity = 7;
            option = golfie[entity];
            option = oscard.bind(tangon)(option);
            verify = option.AVATAR_SIZE_MAP;
            option = golfie[entity];
            option = oscard.bind(tangon)(option);
            option = option.AvatarSizes;
            option = option.XSMALL;
            offset = verify[option];
            verify = null;
            option = false;
            option = yankee.bind(romeon)(verify, option, offset);
            michal['source'] = option;
            entity = golfie[entity];
            entity = oscard.bind(tangon)(entity);
            entity = entity.AvatarSizes;
            entity = entity.XSMALL_20;
            michal['size'] = entity;
            entity = argBar;
            entity = report.bind(tangon)(zuuluu, michal, entity);
            return entity;
        };
        foxtra = kiloes.bind(sizing)(foxtra);
        yankee['children'] = foxtra;
        romeon = zuuluu.bind(tangon)(romeon, yankee);
        yankee = new Array(2);
        yankee[0] = romeon;
        romeon = 9;
        romeon = golfie[romeon];
        romeon = oscard.bind(tangon)(romeon);
        foxtra = romeon.Text;
        romeon = {'style': null, 'variant': 'text-md/semibold', 'color': 'text-brand'};
        backup = backup.showAllText;
        romeon['style'] = backup;
        backup = 10;
        kiloes = golfie[backup];
        kiloes = oscard.bind(tangon)(kiloes);
        output = kiloes.intl;
        sizing = output.format;
        backup = golfie[backup];
        backup = oscard.bind(tangon)(backup);
        backup = backup.t;
        kiloes = backup.Nrzztb;
        backup = {};
        backup['count'] = result;
        backup = sizing.bind(output)(kiloes, backup);
        romeon['children'] = backup;
        romeon = zuuluu.bind(tangon)(foxtra, romeon);
        yankee[1] = romeon;
        option['children'] = yankee;
        option = offset.bind(tangon)(verify, option);
        entity['label'] = option;
        report = golfie[report];
        report = oscard.bind(tangon)(report);
        report = report.TableRow;
        oscard = report.Arrow;
        report = {};
        report = zuuluu.bind(tangon)(oscard, report);
        entity['trailing'] = report;
        entity = zuuluu.bind(tangon)(michal, entity);
        return entity;
    };
    zuuluu['default'] = michal;
    return entity;
})();