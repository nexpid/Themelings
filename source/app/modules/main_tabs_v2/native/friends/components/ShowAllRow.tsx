// app/modules/main_tabs_v2/native/friends/components/ShowAllRow.tsx
export default (function(argFoo, argBar, argBaz, argCorge, _, argFred, argPlugh) {
    report = argBar;
    yankee = argBaz;
    zulu = argFred;
    oscar = argPlugh;
    var _closure1_slot0 = report;
    var _closure1_slot1 = yankee;
    var _closure1_slot2 = oscar;
    entity = global;
    options = entity.Object;
    golf = options.defineProperty;
    tango = {};
    entity = true;
    tango['value'] = entity;
    entity = '__esModule';
    entity = golf.bind(options)(zulu, entity, tango);
    entity = 0;
    golf = oscar[entity];
    tango = argCorge;
    entity = undefined;
    tango = tango.bind(entity)(golf);
    tango = 1;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.View;
    var _closure1_slot3 = tango;
    tango = 2;
    golf = oscar[tango];
    golf = report.bind(entity)(golf);
    golf = golf.jsx;
    var _closure1_slot4 = golf;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.jsxs;
    var _closure1_slot5 = tango;
    tango = 3;
    tango = oscar[tango];
    options = report.bind(entity)(tango);
    golf = options.createStyles;
    tango = {};
    verify = {'flexDirection': 'row', 'alignItems': 'center'};
    tango['labelContainer'] = verify;
    verify = {};
    offset = 4;
    offset = oscar[offset];
    offset = yankee.bind(entity)(offset);
    offset = offset.spacing;
    offset = offset.PX_12;
    verify['marginLeft'] = offset;
    tango['showAllText'] = verify;
    tango = golf.bind(options)(tango);
    var _closure1_slot6 = tango;
    tango = 11;
    tango = oscar[tango];
    oscar = report.bind(entity)(tango);
    report = oscar.fileFinishedImporting;
    tango = 'modules/main_tabs_v2/native/friends/components/ShowAllRow.tsx';
    tango = report.bind(oscar)(tango);
    mike = function(argFoo) { // Original name: ShowAllRow
        entity = argFoo;
        output = entity.users;
        verify = entity.onPress;
        result = entity.count;
        entity = _closure1_slot6;
        tango = undefined;
        backup = entity.bind(tango)();
        zulu = _closure1_slot4;
        oscar = _closure1_slot0;
        golf = _closure1_slot2;
        report = 5;
        entity = golf[report];
        entity = oscar.bind(tango)(entity);
        mike = entity.TableRow;
        entity = {};
        entity['onPress'] = verify;
        verify = true;
        entity['end'] = verify;
        offset = _closure1_slot5;
        verify = _closure1_slot3;
        options = {};
        yankee = backup.labelContainer;
        options['style'] = yankee;
        yankee = 6;
        yankee = golf[yankee];
        yankee = oscar.bind(tango)(yankee);
        romeo = yankee.AvatarDuoPile;
        yankee = {};
        foxtrot = 7;
        foxtrot = golf[foxtrot];
        foxtrot = oscar.bind(tango)(foxtrot);
        foxtrot = foxtrot.AvatarSizes;
        foxtrot = foxtrot.XSMALL_20;
        yankee['size'] = foxtrot;
        foxtrot = '';
        yankee['aria-label'] = foxtrot;
        sizing = output.slice;
        kilo = 0;
        foxtrot = 2;
        sizing = sizing.bind(output)(kilo, foxtrot);
        kilo = sizing.map;
        foxtrot = function(argFoo, argBar) {
            romeo = argFoo;
            report = _closure1_slot4;
            zulu = _closure1_slot1;
            golf = _closure1_slot2;
            mike = 8;
            mike = golf[mike];
            tango = undefined;
            zulu = zulu.bind(tango)(mike);
            mike = {};
            yankee = romeo.getAvatarSource;
            oscar = _closure1_slot0;
            entity = 7;
            options = golf[entity];
            options = oscar.bind(tango)(options);
            verify = options.AVATAR_SIZE_MAP;
            options = golf[entity];
            options = oscar.bind(tango)(options);
            options = options.AvatarSizes;
            options = options.XSMALL;
            offset = verify[options];
            verify = null;
            options = false;
            options = yankee.bind(romeo)(verify, options, offset);
            mike['source'] = options;
            entity = golf[entity];
            entity = oscar.bind(tango)(entity);
            entity = entity.AvatarSizes;
            entity = entity.XSMALL_20;
            mike['size'] = entity;
            entity = argBar;
            entity = report.bind(tango)(zulu, mike, entity);
            return entity;
        };
        foxtrot = kilo.bind(sizing)(foxtrot);
        yankee['children'] = foxtrot;
        romeo = zulu.bind(tango)(romeo, yankee);
        yankee = new Array(2);
        yankee[0] = romeo;
        romeo = 9;
        romeo = golf[romeo];
        romeo = oscar.bind(tango)(romeo);
        foxtrot = romeo.Text;
        romeo = {'style': null, 'variant': 'text-md/semibold', 'color': 'text-brand'};
        backup = backup.showAllText;
        romeo['style'] = backup;
        backup = 10;
        kilo = golf[backup];
        kilo = oscar.bind(tango)(kilo);
        output = kilo.intl;
        sizing = output.format;
        backup = golf[backup];
        backup = oscar.bind(tango)(backup);
        backup = backup.t;
        kilo = backup.Nrzztb;
        backup = {};
        backup['count'] = result;
        backup = sizing.bind(output)(kilo, backup);
        romeo['children'] = backup;
        romeo = zulu.bind(tango)(foxtrot, romeo);
        yankee[1] = romeo;
        options['children'] = yankee;
        options = offset.bind(tango)(verify, options);
        entity['label'] = options;
        report = golf[report];
        report = oscar.bind(tango)(report);
        report = report.TableRow;
        oscar = report.Arrow;
        report = {};
        report = zulu.bind(tango)(oscar, report);
        entity['trailing'] = report;
        entity = zulu.bind(tango)(mike, entity);
        return entity;
    };
    zulu['default'] = mike;
    return entity;
})();