// app/modules/main_tabs_v2/native/friends/components/AddFriendsContactSyncEmptyState.tsx
export default (function(_, argBar, argBaz, argCor, __, argFre, argPlu) {
    report = argBar;
    yankee = argBaz;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    var _closure1_slot1 = yankee;
    var _closure1_slot2 = oscard;
    entity = global;
    option = entity.Object;
    golfie = option.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(option)(zuuluu, entity, tangon);
    entity = 0;
    golfie = oscard[entity];
    tangon = argCor;
    entity = undefined;
    tangon = tangon.bind(entity)(golfie);
    tangon = 1;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    golfie = tangon.View;
    var _closure1_slot3 = golfie;
    tangon = tangon.Image;
    var _closure1_slot4 = tangon;
    tangon = 2;
    golfie = oscard[tangon];
    golfie = report.bind(entity)(golfie);
    golfie = golfie.jsx;
    var _closure1_slot5 = golfie;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.jsxs;
    var _closure1_slot6 = tangon;
    tangon = 3;
    tangon = oscard[tangon];
    option = report.bind(entity)(tangon);
    golfie = option.createStyles;
    tangon = {};
    verify = {};
    foxtra = 'center';
    verify['alignItems'] = foxtra;
    offset = 4;
    romeon = oscard[offset];
    romeon = yankee.bind(entity)(romeon);
    romeon = romeon.spacing;
    romeon = romeon.PX_24;
    verify['marginTop'] = romeon;
    romeon = oscard[offset];
    romeon = yankee.bind(entity)(romeon);
    romeon = romeon.spacing;
    romeon = romeon.PX_16;
    verify['marginHorizontal'] = romeon;
    romeon = oscard[offset];
    romeon = yankee.bind(entity)(romeon);
    romeon = romeon.spacing;
    romeon = romeon.PX_12;
    verify['paddingBottom'] = romeon;
    romeon = oscard[offset];
    romeon = yankee.bind(entity)(romeon);
    romeon = romeon.colors;
    romeon = romeon.CARD_PRIMARY_BG;
    verify['backgroundColor'] = romeon;
    romeon = oscard[offset];
    romeon = yankee.bind(entity)(romeon);
    romeon = romeon.radii;
    romeon = romeon.lg;
    verify['borderRadius'] = romeon;
    tangon['content'] = verify;
    verify = {'height': 135, 'width': 216};
    romeon = oscard[offset];
    romeon = yankee.bind(entity)(romeon);
    romeon = romeon.spacing;
    romeon = romeon.PX_24;
    verify['marginTop'] = romeon;
    romeon = oscard[offset];
    romeon = yankee.bind(entity)(romeon);
    romeon = romeon.spacing;
    romeon = romeon.PX_16;
    verify['marginBottom'] = romeon;
    tangon['headerImage'] = verify;
    verify = {'marginBottom': null, 'width': '100%', 'textAlign': 'center'};
    romeon = oscard[offset];
    romeon = yankee.bind(entity)(romeon);
    romeon = romeon.spacing;
    romeon = romeon.PX_8;
    verify['marginBottom'] = romeon;
    romeon = '100%';
    tangon['title'] = verify;
    verify = {};
    backup = oscard[offset];
    backup = yankee.bind(entity)(backup);
    backup = backup.spacing;
    backup = backup.PX_24;
    verify['marginBottom'] = backup;
    backup = oscard[offset];
    backup = yankee.bind(entity)(backup);
    backup = backup.spacing;
    backup = backup.PX_48;
    verify['paddingHorizontal'] = backup;
    verify['width'] = romeon;
    verify['alignContent'] = foxtra;
    tangon['subtitle'] = verify;
    verify = {};
    verify['textAlign'] = foxtra;
    tangon['subtitleText'] = verify;
    verify = {};
    verify['width'] = romeon;
    romeon = oscard[offset];
    romeon = yankee.bind(entity)(romeon);
    romeon = romeon.spacing;
    romeon = romeon.PX_4;
    verify['paddingBottom'] = romeon;
    offset = oscard[offset];
    offset = yankee.bind(entity)(offset);
    offset = offset.spacing;
    offset = offset.PX_12;
    verify['paddingHorizontal'] = offset;
    tangon['trailing'] = verify;
    tangon = golfie.bind(option)(tangon);
    var _closure1_slot7 = tangon;
    tangon = 12;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/main_tabs_v2/native/friends/components/AddFriendsContactSyncEmptyState.tsx';
    tangon = report.bind(oscard)(tangon);
    michal = function() { // Original name: AddFriendsContactSyncEmptyState
        entity = _closure1_slot7;
        tangon = undefined;
        option = entity.bind(tangon)();
        zuuluu = _closure1_slot6;
        michal = _closure1_slot3;
        entity = {};
        report = option.content;
        entity['style'] = report;
        golfie = _closure1_slot5;
        verify = _closure1_slot4;
        report = {};
        offset = 'contain';
        report['resizeMode'] = offset;
        offset = option.headerImage;
        report['style'] = offset;
        yankee = _closure1_slot1;
        backup = _closure1_slot2;
        offset = 5;
        offset = backup[offset];
        offset = yankee.bind(tangon)(offset);
        report['source'] = offset;
        verify = golfie.bind(tangon)(verify, report);
        report = new Array(4);
        report[0] = verify;
        foxtra = _closure1_slot0;
        oscard = 6;
        oscard = backup[oscard];
        oscard = foxtra.bind(tangon)(oscard);
        verify = oscard.Text;
        oscard = {'style': null, 'variant': 'heading-lg/bold', 'color': 'header-primary'};
        offset = option.title;
        oscard['style'] = offset;
        offset = 7;
        yankee = backup[offset];
        yankee = foxtra.bind(tangon)(yankee);
        kiloes = yankee.intl;
        romeon = kiloes.string;
        yankee = backup[offset];
        yankee = foxtra.bind(tangon)(yankee);
        yankee = yankee.t;
        yankee = yankee./G+ncn;
        yankee = romeon.bind(kiloes)(yankee);
        oscard['children'] = yankee;
        oscard = golfie.bind(tangon)(verify, oscard);
        report[1] = oscard;
        oscard = {};
        verify = option.subtitle;
        oscard['style'] = verify;
        verify = 8;
        verify = backup[verify];
        verify = foxtra.bind(tangon)(verify);
        yankee = verify.TextWithIOSLinkWorkaround;
        verify = {};
        romeon = option.subtitleText;
        verify['style'] = romeon;
        romeon = 'text-sm/medium';
        verify['variant'] = romeon;
        romeon = backup[offset];
        romeon = foxtra.bind(tangon)(romeon);
        output = romeon.intl;
        sizing = output.format;
        romeon = backup[offset];
        romeon = foxtra.bind(tangon)(romeon);
        romeon = romeon.t;
        kiloes = romeon.OXdOPT;
        romeon = {};
        result = 9;
        result = backup[result];
        result = foxtra.bind(tangon)(result);
        result = result.handleOpenLearnMoreLink;
        romeon['learnMoreHook'] = result;
        romeon = sizing.bind(output)(kiloes, romeon);
        verify['children'] = romeon;
        verify = golfie.bind(tangon)(yankee, verify);
        oscard['children'] = verify;
        oscard = golfie.bind(tangon)(michal, oscard);
        report[2] = oscard;
        oscard = {};
        option = option.trailing;
        oscard['style'] = option;
        option = 10;
        option = backup[option];
        option = foxtra.bind(tangon)(option);
        verify = option.Button;
        option = {'variant': 'primary', 'size': 'lg'};
        yankee = backup[offset];
        yankee = foxtra.bind(tangon)(yankee);
        romeon = yankee.intl;
        yankee = romeon.string;
        offset = backup[offset];
        offset = foxtra.bind(tangon)(offset);
        offset = offset.t;
        offset = offset.QUXSpq;
        offset = yankee.bind(romeon)(offset);
        option['text'] = offset;
        offset = function() { // Original name: onPress
            zuuluu = _closure1_slot0;
            michal = _closure1_slot2;
            entity = 11;
            michal = michal[entity];
            entity = undefined;
            report = zuuluu.bind(entity)(michal);
            tangon = report.openContactSyncModal;
            zuuluu = {};
            michal = 'Add Friends Contact Sync Empty State';
            michal = tangon.bind(report)(zuuluu, michal);
            return entity;
        };
        option['onPress'] = offset;
        option = golfie.bind(tangon)(verify, option);
        oscard['children'] = option;
        oscard = golfie.bind(tangon)(michal, oscard);
        report[3] = oscard;
        entity['children'] = report;
        entity = zuuluu.bind(tangon)(michal, entity);
        return entity;
    };
    zuuluu['default'] = michal;
    return entity;
})();