// app/modules/main_tabs_v2/native/friends/components/AddFriendsContactSyncEmptyState.tsx
export default (function(_, argBar, argBaz, argCorge, __, argFred, argPlugh) {
    report = argBar;
    yankee = argBaz;
    zulu = argFred;
    oscar = argPlugh;
    var _closure1_slot0 = report;
    var _closure1_slot1 = yankee;
    var _closure1_slot2 = oscar;
    entity = global;
    options = entity.Object;
    golf = options.defineProperty;
    tango = {};
    entity = true;
    tango['value'] = entity;
    entity = '__esModule';
    entity = golf.bind(options)(zulu, entity, tango);
    entity = 0;
    golf = oscar[entity];
    tango = argCorge;
    entity = undefined;
    tango = tango.bind(entity)(golf);
    tango = 1;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    golf = tango.View;
    var _closure1_slot3 = golf;
    tango = tango.Image;
    var _closure1_slot4 = tango;
    tango = 2;
    golf = oscar[tango];
    golf = report.bind(entity)(golf);
    golf = golf.jsx;
    var _closure1_slot5 = golf;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.jsxs;
    var _closure1_slot6 = tango;
    tango = 3;
    tango = oscar[tango];
    options = report.bind(entity)(tango);
    golf = options.createStyles;
    tango = {};
    verify = {};
    foxtrot = 'center';
    verify['alignItems'] = foxtrot;
    offset = 4;
    romeo = oscar[offset];
    romeo = yankee.bind(entity)(romeo);
    romeo = romeo.spacing;
    romeo = romeo.PX_24;
    verify['marginTop'] = romeo;
    romeo = oscar[offset];
    romeo = yankee.bind(entity)(romeo);
    romeo = romeo.spacing;
    romeo = romeo.PX_16;
    verify['marginHorizontal'] = romeo;
    romeo = oscar[offset];
    romeo = yankee.bind(entity)(romeo);
    romeo = romeo.spacing;
    romeo = romeo.PX_12;
    verify['paddingBottom'] = romeo;
    romeo = oscar[offset];
    romeo = yankee.bind(entity)(romeo);
    romeo = romeo.colors;
    romeo = romeo.CARD_PRIMARY_BG;
    verify['backgroundColor'] = romeo;
    romeo = oscar[offset];
    romeo = yankee.bind(entity)(romeo);
    romeo = romeo.radii;
    romeo = romeo.lg;
    verify['borderRadius'] = romeo;
    tango['content'] = verify;
    verify = {'height': 135, 'width': 216};
    romeo = oscar[offset];
    romeo = yankee.bind(entity)(romeo);
    romeo = romeo.spacing;
    romeo = romeo.PX_24;
    verify['marginTop'] = romeo;
    romeo = oscar[offset];
    romeo = yankee.bind(entity)(romeo);
    romeo = romeo.spacing;
    romeo = romeo.PX_16;
    verify['marginBottom'] = romeo;
    tango['headerImage'] = verify;
    verify = {'marginBottom': null, 'width': '100%', 'textAlign': 'center'};
    romeo = oscar[offset];
    romeo = yankee.bind(entity)(romeo);
    romeo = romeo.spacing;
    romeo = romeo.PX_8;
    verify['marginBottom'] = romeo;
    romeo = '100%';
    tango['title'] = verify;
    verify = {};
    backup = oscar[offset];
    backup = yankee.bind(entity)(backup);
    backup = backup.spacing;
    backup = backup.PX_24;
    verify['marginBottom'] = backup;
    backup = oscar[offset];
    backup = yankee.bind(entity)(backup);
    backup = backup.spacing;
    backup = backup.PX_48;
    verify['paddingHorizontal'] = backup;
    verify['width'] = romeo;
    verify['alignContent'] = foxtrot;
    tango['subtitle'] = verify;
    verify = {};
    verify['textAlign'] = foxtrot;
    tango['subtitleText'] = verify;
    verify = {};
    verify['width'] = romeo;
    romeo = oscar[offset];
    romeo = yankee.bind(entity)(romeo);
    romeo = romeo.spacing;
    romeo = romeo.PX_4;
    verify['paddingBottom'] = romeo;
    offset = oscar[offset];
    offset = yankee.bind(entity)(offset);
    offset = offset.spacing;
    offset = offset.PX_12;
    verify['paddingHorizontal'] = offset;
    tango['trailing'] = verify;
    tango = golf.bind(options)(tango);
    var _closure1_slot7 = tango;
    tango = 12;
    tango = oscar[tango];
    oscar = report.bind(entity)(tango);
    report = oscar.fileFinishedImporting;
    tango = 'modules/main_tabs_v2/native/friends/components/AddFriendsContactSyncEmptyState.tsx';
    tango = report.bind(oscar)(tango);
    mike = function() { // Original name: AddFriendsContactSyncEmptyState
        entity = _closure1_slot7;
        tango = undefined;
        options = entity.bind(tango)();
        zulu = _closure1_slot6;
        mike = _closure1_slot3;
        entity = {};
        report = options.content;
        entity['style'] = report;
        golf = _closure1_slot5;
        verify = _closure1_slot4;
        report = {};
        offset = 'contain';
        report['resizeMode'] = offset;
        offset = options.headerImage;
        report['style'] = offset;
        yankee = _closure1_slot1;
        backup = _closure1_slot2;
        offset = 5;
        offset = backup[offset];
        offset = yankee.bind(tango)(offset);
        report['source'] = offset;
        verify = golf.bind(tango)(verify, report);
        report = new Array(4);
        report[0] = verify;
        foxtrot = _closure1_slot0;
        oscar = 6;
        oscar = backup[oscar];
        oscar = foxtrot.bind(tango)(oscar);
        verify = oscar.Text;
        oscar = {'style': null, 'variant': 'heading-lg/bold', 'color': 'header-primary'};
        offset = options.title;
        oscar['style'] = offset;
        offset = 7;
        yankee = backup[offset];
        yankee = foxtrot.bind(tango)(yankee);
        kilo = yankee.intl;
        romeo = kilo.string;
        yankee = backup[offset];
        yankee = foxtrot.bind(tango)(yankee);
        yankee = yankee.t;
        yankee = yankee./G+ncn;
        yankee = romeo.bind(kilo)(yankee);
        oscar['children'] = yankee;
        oscar = golf.bind(tango)(verify, oscar);
        report[1] = oscar;
        oscar = {};
        verify = options.subtitle;
        oscar['style'] = verify;
        verify = 8;
        verify = backup[verify];
        verify = foxtrot.bind(tango)(verify);
        yankee = verify.TextWithIOSLinkWorkaround;
        verify = {};
        romeo = options.subtitleText;
        verify['style'] = romeo;
        romeo = 'text-sm/medium';
        verify['variant'] = romeo;
        romeo = backup[offset];
        romeo = foxtrot.bind(tango)(romeo);
        output = romeo.intl;
        sizing = output.format;
        romeo = backup[offset];
        romeo = foxtrot.bind(tango)(romeo);
        romeo = romeo.t;
        kilo = romeo.OXdOPT;
        romeo = {};
        result = 9;
        result = backup[result];
        result = foxtrot.bind(tango)(result);
        result = result.handleOpenLearnMoreLink;
        romeo['learnMoreHook'] = result;
        romeo = sizing.bind(output)(kilo, romeo);
        verify['children'] = romeo;
        verify = golf.bind(tango)(yankee, verify);
        oscar['children'] = verify;
        oscar = golf.bind(tango)(mike, oscar);
        report[2] = oscar;
        oscar = {};
        options = options.trailing;
        oscar['style'] = options;
        options = 10;
        options = backup[options];
        options = foxtrot.bind(tango)(options);
        verify = options.Button;
        options = {'variant': 'primary', 'size': 'lg'};
        yankee = backup[offset];
        yankee = foxtrot.bind(tango)(yankee);
        romeo = yankee.intl;
        yankee = romeo.string;
        offset = backup[offset];
        offset = foxtrot.bind(tango)(offset);
        offset = offset.t;
        offset = offset.QUXSpq;
        offset = yankee.bind(romeo)(offset);
        options['text'] = offset;
        offset = function() { // Original name: onPress
            zulu = _closure1_slot0;
            mike = _closure1_slot2;
            entity = 11;
            mike = mike[entity];
            entity = undefined;
            report = zulu.bind(entity)(mike);
            tango = report.openContactSyncModal;
            zulu = {};
            mike = 'Add Friends Contact Sync Empty State';
            mike = tango.bind(report)(zulu, mike);
            return entity;
        };
        options['onPress'] = offset;
        options = golf.bind(tango)(verify, options);
        oscar['children'] = options;
        oscar = golf.bind(tango)(mike, oscar);
        report[3] = oscar;
        entity['children'] = report;
        entity = zulu.bind(tango)(mike, entity);
        return entity;
    };
    zulu['default'] = mike;
    return entity;
})();