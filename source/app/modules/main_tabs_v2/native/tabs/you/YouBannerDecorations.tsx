// app/modules/main_tabs_v2/native/tabs/you/YouBannerDecorations.tsx
export default (function(argFoo, argBar, argBaz, argCorge, _, argFred, argPlugh) {
    report = argBar;
    romeo = argBaz;
    zulu = argFred;
    oscar = argPlugh;
    var _closure1_slot0 = report;
    var _closure1_slot1 = romeo;
    var _closure1_slot2 = oscar;
    entity = global;
    options = entity.Object;
    golf = options.defineProperty;
    tango = {};
    entity = true;
    tango['value'] = entity;
    entity = '__esModule';
    entity = golf.bind(options)(zulu, entity, tango);
    entity = 0;
    golf = oscar[entity];
    tango = argCorge;
    entity = undefined;
    golf = tango.bind(entity)(golf);
    var _closure1_slot3 = golf;
    tango = 1;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    options = tango.View;
    var _closure1_slot4 = options;
    options = tango.ActivityIndicator;
    var _closure1_slot5 = options;
    yankee = tango.StyleSheet;
    tango = 2;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.ContentDismissActionType;
    var _closure1_slot6 = tango;
    tango = 3;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.PREMIUM_TIER_2_TRIAL_FOR_EVERYONE_TRIAL_ID;
    var _closure1_slot7 = tango;
    tango = 4;
    options = oscar[tango];
    options = report.bind(entity)(options);
    options = options.jsx;
    var _closure1_slot8 = options;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.jsxs;
    var _closure1_slot9 = tango;
    tango = 5;
    tango = oscar[tango];
    verify = report.bind(entity)(tango);
    options = verify.createStyles;
    tango = {};
    offset = {};
    kilo = yankee.absoluteFillObject;
    sizing = offset;
    yankee = copyDataProperties(sizing, kilo);
    foxtrot = 10;
    yankee = 'zIndex';
    offset[yankee] = foxtrot;
    tango['container'] = offset;
    offset = {'position': 'absolute', 'flexDirection': 'row', 'alignItems': 'center', 'top': 4294967292, 'right': 0};
    tango['buttons'] = offset;
    offset = {'height': 32, 'width': 32, 'alignItems': 'center', 'justifyContent': 'center'};
    yankee = 6;
    foxtrot = oscar[yankee];
    foxtrot = romeo.bind(entity)(foxtrot);
    foxtrot = foxtrot.radii;
    foxtrot = foxtrot.lg;
    offset['borderRadius'] = foxtrot;
    foxtrot = oscar[yankee];
    foxtrot = romeo.bind(entity)(foxtrot);
    foxtrot = foxtrot.colors;
    foxtrot = foxtrot.REDESIGN_BUTTON_SECONDARY_OVERLAY_BACKGROUND;
    offset['backgroundColor'] = foxtrot;
    tango['button'] = offset;
    offset = {'minHeight': 32, 'minWidth': 72, 'paddingHorizontal': 8, 'overflow': 'hidden'};
    tango['nitroButton'] = offset;
    offset = {'height': '100%', 'alignItems': 'center', 'justifyContent': 'center'};
    tango['loading'] = offset;
    offset = {};
    foxtrot = oscar[yankee];
    foxtrot = romeo.bind(entity)(foxtrot);
    foxtrot = foxtrot.colors;
    foxtrot = foxtrot.WHITE;
    offset['color'] = foxtrot;
    tango['icon'] = offset;
    offset = {'marginVertical': 8, 'marginHorizontal': 4};
    tango['nitroPressable'] = offset;
    offset = {'marginVertical': 8, 'marginLeft': 4, 'marginRight': 16};
    tango['settingsPressable'] = offset;
    offset = {'position': 'absolute', 'height': 9, 'width': 9, 'backgroundColor': null, 'borderRadius': null, 'right': 2, 'bottom': 0};
    foxtrot = oscar[yankee];
    foxtrot = romeo.bind(entity)(foxtrot);
    foxtrot = foxtrot.unsafe_rawColors;
    foxtrot = foxtrot.RED_400;
    offset['backgroundColor'] = foxtrot;
    yankee = oscar[yankee];
    yankee = romeo.bind(entity)(yankee);
    yankee = yankee.radii;
    yankee = yankee.lg;
    offset['borderRadius'] = yankee;
    tango['dot'] = offset;
    tango = options.bind(verify)(tango);
    var _closure1_slot10 = tango;
    tango = golf.memo;
    mike = function(argFoo) {
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            entity = argFoo;
            oscar = entity.isLoading;
            zulu = entity.navigateToSettings;
            var _closure2_slot0 = zulu;
            mike = entity.navigateToPremium;
            var _closure2_slot1 = mike;
            vacuum = entity.navigateToShop;
            record = entity.shopButtonRef;
            sizing = entity.settingsButtonRef;
            context = entity.paddingTop;
            tango = undefined;
            if(!(context === tango)) { _fun00002_ip = 63; continue _fun00001 }
 61:
            context = 0;
 63:
            var _closure2_slot2 = tango;
            var _closure2_slot3 = tango;
            var _closure2_slot4 = tango;
            var _closure2_slot5 = tango;
            entity = _closure1_slot10;
            result = entity.bind(tango)();
            _closure2_slot2 = result;
            report = _closure1_slot0;
            golf = _closure1_slot2;
            entity = 9;
            options = golf[entity];
            verify = report.bind(tango)(options);
            options = verify.useHasPremiumSubscriptionToDisplay;
            romeo = options.bind(verify)();
            options = 7;
            options = golf[options];
            verify = report.bind(tango)(options);
            options = verify.useUnseenOutboundPromotions;
            options = options.bind(verify)();
            verify = options.length;
            options = 0;
            output = verify > options;
            foxtrot = 8;
            options = golf[foxtrot];
            verify = report.bind(tango)(options);
            options = verify.useIsEligibleForPomelo;
            options = options.bind(verify)();
            entity = golf[entity];
            verify = report.bind(tango)(entity);
            entity = verify.useHasTier2Premium;
            verify = entity.bind(verify)();
            entity = 10;
            entity = golf[entity];
            backup = report.bind(tango)(entity);
            yankee = backup.useIsDismissibleContentDismissed;
            offset = 11;
            entity = golf[offset];
            entity = report.bind(tango)(entity);
            entity = entity.DismissibleContent;
            entity = entity.MOBILE_NITRO_HOME_SETTINGS_BADGE;
            entity = yankee.bind(backup)(entity);
            entity = !entity;
            if(!entity) { _fun00002_ip = 254; continue _fun00001 }
 251:
            entity = verify;
 254:
            if(output) { _fun00002_ip = 260; continue _fun00001 }
 257:
            output = options;
 260:
            if(output) { _fun00002_ip = 266; continue _fun00001 }
 263:
            output = entity;
 266:
            _closure2_slot3 = output;
            config = new Array(0);
            entity = 12;
            entity = golf[entity];
            options = report.bind(tango)(entity);
            golf = options.useCollectibleDecoEligible;
            report = {};
            entity = 'YouBannerDecorations';
            report['location'] = entity;
            golf = golf.bind(options)(report);
            report = true;
            if(!(report === golf)) { _fun00002_ip = 354; continue _fun00001 }
 315:
            golf = config.push;
            options = _closure1_slot0;
            report = _closure1_slot2;
            report = report[offset];
            report = options.bind(tango)(report);
            report = report.DismissibleContent;
            report = report.Q1_2025_MARKETING_MOMENT_PROMO_SHEET;
            report = golf.bind(config)(report);
 354:
            golf = _closure1_slot0;
            options = _closure1_slot2;
            report = 13;
            report = options[report];
            options = golf.bind(tango)(report);
            golf = options.useTrialOffer;
            report = _closure1_slot7;
            golf = golf.bind(options)(report);
            report = null;
            if(!(report != golf)) { _fun00002_ip = 434; continue _fun00001 }
 395:
            options = config.push;
            verify = _closure1_slot0;
            golf = _closure1_slot2;
            golf = golf[offset];
            golf = verify.bind(tango)(golf);
            golf = golf.DismissibleContent;
            golf = golf.TRIAL_FOR_ALL_MOBILE_SETTINGS_NOTICE;
            golf = options.bind(config)(golf);
 434:
            golf = _closure1_slot3;
            verify = golf.useCallback;
            options = new Array(2);
            options[0] = output;
            options[1] = zulu;
            zulu = function() {
                zulu = _closure1_slot0;
                mike = _closure1_slot2;
                entity = 14;
                mike = mike[entity];
                entity = undefined;
                report = zulu.bind(entity)(mike);
                tango = report.trackYouTabSettingsIconPress;
                zulu = {};
                oscar = _closure2_slot3;
                zulu['isBadged'] = oscar;
                zulu = tango.bind(report)(zulu);
                mike = _closure2_slot0;
                mike = mike.bind(entity)();
                return entity;
            };
            backup = verify.bind(golf)(zulu, options);
            options = golf.useCallback;
            zulu = new Array(1);
            zulu[0] = mike;
            mike = function(argFoo) {
                entity = _closure1_slot6;
                tango = entity.TAKE_ACTION;
                zulu = argFoo;
                entity = undefined;
                zulu = zulu.bind(entity)(tango);
                zulu = _closure1_slot0;
                tango = _closure1_slot2;
                mike = 14;
                mike = tango[mike];
                zulu = zulu.bind(entity)(mike);
                mike = zulu.trackYouTabNitroIconPress;
                mike = mike.bind(zulu)();
                mike = _closure2_slot1;
                mike = mike.bind(entity)();
                return entity;
            };
            mike = options.bind(golf)(mike, zulu);
            _closure2_slot4 = mike;
            mike = _closure1_slot1;
            zulu = _closure1_slot2;
            options = 15;
            options = zulu[options];
            offset = mike.bind(tango)(options);
            verify = offset.getCurrentConfig;
            options = {};
            options['location'] = entity;
            entity = {};
            yankee = false;
            entity['autoTrackExposure'] = yankee;
            entity = verify.bind(offset)(options, entity);
            yankee = entity.enabled;
            entity = golf.useRef;
            source = entity.bind(golf)(report);
            entity = 16;
            entity = zulu[entity];
            entity = mike.bind(tango)(entity);
            entity = entity.bind(tango)(source);
            _closure2_slot5 = entity;
            report = golf.useCallback;
            mike = new Array(1);
            mike[0] = entity;
            entity = function() {
                _fun00003: for(var _fun00004_ip = 0; ; ) switch(_fun00004_ip) {
 0:
                    tango = _closure2_slot5;
                    entity = _closure1_slot6;
                    mike = entity.TAKE_ACTION;
                    entity = undefined;
                    mike = tango.bind(entity)(mike);
                    tango = _closure1_slot1;
                    report = _closure1_slot2;
                    mike = 17;
                    mike = report[mike];
                    mike = tango.bind(entity)(mike);
                    tango = mike.bind(entity)();
                    report = _closure1_slot1;
                    mike = _closure1_slot2;
                    if(tango) { _fun00004_ip = 109; continue _fun00003 }
 62:
                    tango = 18;
                    tango = mike[tango];
                    oscar = report.bind(entity)(tango);
                    golf = _closure1_slot0;
                    tango = 19;
                    tango = mike[tango];
                    tango = golf.bind(entity)(tango);
                    tango = tango.EntitlementFeatureNames;
                    tango = tango.SAVED_MESSAGES;
                    tango = oscar.bind(entity)(tango);
                    _fun00004_ip = 190; continue _fun00003;
 109:
                    tango = 20;
                    tango = mike[tango];
                    golf = report.bind(entity)(tango);
                    oscar = golf.pushLazy;
                    tango = _closure1_slot0;
                    zulu = 22;
                    zulu = mike[zulu];
                    tango = tango.bind(entity)(zulu);
                    zulu = 21;
                    zulu = mike[zulu];
                    mike = mike.paths;
                    yankee = tango.bind(entity)(zulu, mike);
                    tango = {};
                    mike = 'modal';
                    tango['presentation'] = mike;
                    offset = {};
                    verify = 'for-later-modal';
                    romeo = golf;
                    options = tango;
                    mike = romeo[oscar](yankee, offset, verify, options, golf);
 190:
                    return entity;
                }
            };
            update = report.bind(golf)(entity, mike);
            mike = _closure1_slot0;
            entity = 23;
            entity = zulu[entity];
            zulu = mike.bind(tango)(entity);
            mike = zulu.useIsNotificationsTabMerged;
            entity = {};
            report = 'ICYMIHeader';
            entity['location'] = report;
            entity = mike.bind(zulu)(entity);
            offset = entity.enabled;
            zulu = _closure1_slot9;
            mike = _closure1_slot4;
            entity = {};
            golf = result.container;
            report = new Array(2);
            report[0] = golf;
            golf = {};
            golf['paddingTop'] = context;
            report[1] = golf;
            entity['style'] = report;
            verify = 'box-none';
            entity['pointerEvents'] = verify;
            if(!oscar) { _fun00002_ip = 753; continue _fun00001 }
 703:
            options = _closure1_slot8;
            golf = _closure1_slot4;
            report = {};
            echo = result.loading;
            report['style'] = echo;
            control = _closure1_slot5;
            echo = {};
            papa = 'large';
            echo['size'] = papa;
            echo = options.bind(tango)(control, echo);
            report['children'] = echo;
            oscar = options.bind(tango)(golf, report);
 753:
            report = new Array(2);
            report[0] = oscar;
            options = _closure1_slot9;
            golf = _closure1_slot4;
            oscar = {};
            control = result.buttons;
            echo = new Array(2);
            echo[0] = control;
            control = {};
            control['paddingTop'] = context;
            echo[1] = control;
            oscar['style'] = echo;
            oscar['pointerEvents'] = verify;
            control = _closure1_slot8;
            echo = _closure1_slot1;
            context = _closure1_slot2;
            verify = 24;
            verify = context[verify];
            echo = echo.bind(tango)(verify);
            verify = {};
            verify['shopButtonRef'] = record;
            verify['navigateToShop'] = vacuum;
            echo = control.bind(tango)(echo, verify);
            verify = new Array(4);
            verify[0] = echo;
            romeo = !romeo;
            if(!romeo) { _fun00002_ip = 909; continue _fun00001 }
 861:
            vacuum = _closure1_slot8;
            control = _closure1_slot1;
            record = _closure1_slot2;
            echo = 25;
            echo = record[echo];
            control = control.bind(tango)(echo);
            echo = {};
            echo['contentTypes'] = config;
            sequence = function(argFoo) { // Original name: children
                _fun00005: for(var _fun00006_ip = 0; ; ) switch(_fun00006_ip) {
 0:
                    entity = argFoo;
                    yankee = entity.visibleContent;
                    entity = entity.markAsDismissed;
                    var _closure3_slot0 = entity;
                    tango = _closure1_slot8;
                    verify = _closure1_slot0;
                    backup = _closure1_slot2;
                    entity = 26;
                    entity = backup[entity];
                    zulu = undefined;
                    entity = verify.bind(zulu)(entity);
                    mike = entity.PressableScale;
                    entity = {};
                    oscar = _closure2_slot2;
                    oscar = oscar.nitroPressable;
                    entity['style'] = oscar;
                    oscar = 'button';
                    entity['accessibilityRole'] = oscar;
                    oscar = 27;
                    golf = backup[oscar];
                    golf = verify.bind(zulu)(golf);
                    options = golf.intl;
                    golf = options.string;
                    oscar = backup[oscar];
                    oscar = verify.bind(zulu)(oscar);
                    oscar = oscar.t;
                    oscar = oscar.Ipxkoq;
                    oscar = golf.bind(options)(oscar);
                    entity['accessibilityLabel'] = oscar;
                    report = function() { // Original name: onPress
                        zulu = _closure2_slot4;
                        mike = _closure3_slot0;
                        entity = undefined;
                        entity = zulu.bind(entity)(mike);
                        return entity;
                    };
                    entity['onPress'] = report;
                    report = 8;
                    entity['hitSlop'] = report;
                    golf = _closure1_slot9;
                    oscar = _closure1_slot4;
                    report = {};
                    options = {};
                    verify = _closure2_slot2;
                    romeo = verify.button;
                    verify = new Array(2);
                    verify[0] = romeo;
                    romeo = _closure2_slot2;
                    romeo = romeo.nitroButton;
                    verify[1] = romeo;
                    options['style'] = verify;
                    romeo = _closure1_slot1;
                    verify = 28;
                    verify = backup[verify];
                    romeo = romeo.bind(zulu)(verify);
                    verify = {};
                    backup = _closure2_slot2;
                    backup = backup.icon;
                    backup = backup.color;
                    verify['color'] = backup;
                    verify = tango.bind(zulu)(romeo, verify);
                    options['children'] = verify;
                    verify = tango.bind(zulu)(oscar, options);
                    options = new Array(2);
                    options[0] = verify;
                    verify = null;
                    verify = verify !== yankee;
                    if(!verify) { _fun00006_ip = 300; continue _fun00005 }
 270:
                    romeo = _closure1_slot8;
                    yankee = _closure1_slot4;
                    offset = {};
                    foxtrot = _closure2_slot2;
                    foxtrot = foxtrot.dot;
                    offset['style'] = foxtrot;
                    verify = romeo.bind(zulu)(yankee, offset);
 300:
                    options[1] = verify;
                    report['children'] = options;
                    report = golf.bind(zulu)(oscar, report);
                    entity['children'] = report;
                    entity = tango.bind(zulu)(mike, entity);
                    return entity;
                }
            };
            echo['children'] = sequence;
            romeo = vacuum.bind(tango)(control, echo);
 909:
            verify[1] = romeo;
            if(!offset) { _fun00002_ip = 919; continue _fun00001 }
 916:
            offset = yankee;
 919:
            if(!offset) { _fun00002_ip = 1123; continue _fun00001 }
 925:
            echo = _closure1_slot8;
            vacuum = _closure1_slot0;
            sequence = _closure1_slot2;
            yankee = 26;
            yankee = sequence[yankee];
            yankee = vacuum.bind(tango)(yankee);
            romeo = yankee.PressableScale;
            yankee = {};
            yankee['ref'] = source;
            source = result.nitroPressable;
            yankee['style'] = source;
            source = 'button';
            yankee['accessibilityRole'] = source;
            source = 27;
            control = sequence[source];
            control = vacuum.bind(tango)(control);
            config = control.intl;
            control = config.string;
            source = sequence[source];
            source = vacuum.bind(tango)(source);
            source = source.t;
            source = source.2pAkDA;
            source = control.bind(config)(source);
            yankee['accessibilityLabel'] = source;
            yankee['onPress'] = update;
            yankee['hitSlop'] = foxtrot;
            source = _closure1_slot4;
            update = {};
            control = result.button;
            update['style'] = control;
            control = 29;
            control = sequence[control];
            control = vacuum.bind(tango)(control);
            vacuum = control.BookmarkIcon;
            control = {};
            sequence = result.icon;
            sequence = sequence.color;
            control['color'] = sequence;
            sequence = 'sm';
            control['size'] = sequence;
            control = echo.bind(tango)(vacuum, control);
            update['children'] = control;
            update = echo.bind(tango)(source, update);
            yankee['children'] = update;
            offset = echo.bind(tango)(romeo, yankee);
 1123:
            verify[2] = offset;
            romeo = _closure1_slot8;
            control = _closure1_slot0;
            echo = _closure1_slot2;
            offset = 26;
            offset = echo[offset];
            offset = control.bind(tango)(offset);
            yankee = offset.PressableScale;
            offset = {};
            offset['ref'] = sizing;
            sizing = result.settingsPressable;
            offset['style'] = sizing;
            sizing = 'button';
            offset['accessibilityRole'] = sizing;
            sizing = 27;
            update = echo[sizing];
            update = control.bind(tango)(update);
            source = update.intl;
            update = source.string;
            sizing = echo[sizing];
            sizing = control.bind(tango)(sizing);
            sizing = sizing.t;
            sizing = sizing.3D5yo6;
            sizing = update.bind(source)(sizing);
            offset['accessibilityLabel'] = sizing;
            offset['onPress'] = backup;
            offset['hitSlop'] = foxtrot;
            backup = _closure1_slot4;
            foxtrot = {};
            sizing = result.button;
            foxtrot['style'] = sizing;
            sizing = _closure1_slot1;
            kilo = 30;
            kilo = echo[kilo];
            sizing = sizing.bind(tango)(kilo);
            kilo = {};
            result = result.icon;
            result = result.color;
            kilo['color'] = result;
            kilo['isBadged'] = output;
            kilo = romeo.bind(tango)(sizing, kilo);
            foxtrot['children'] = kilo;
            foxtrot = romeo.bind(tango)(backup, foxtrot);
            offset['children'] = foxtrot;
            offset = romeo.bind(tango)(yankee, offset);
            verify[3] = offset;
            oscar['children'] = verify;
            oscar = options.bind(tango)(golf, oscar);
            report[1] = oscar;
            entity['children'] = report;
            entity = zulu.bind(tango)(mike, entity);
            return entity;
        }
    };
    mike = tango.bind(golf)(mike);
    tango = 31;
    tango = oscar[tango];
    oscar = report.bind(entity)(tango);
    report = oscar.fileFinishedImporting;
    tango = 'modules/main_tabs_v2/native/tabs/you/YouBannerDecorations.tsx';
    tango = report.bind(oscar)(tango);
    zulu['default'] = mike;
    return entity;
})();