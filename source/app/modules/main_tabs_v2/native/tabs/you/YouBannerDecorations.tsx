// app/modules/main_tabs_v2/native/tabs/you/YouBannerDecorations.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    report = argBar;
    romeon = argBaz;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    var _closure1_slot1 = romeon;
    var _closure1_slot2 = oscard;
    entity = global;
    option = entity.Object;
    golfie = option.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(option)(zuuluu, entity, tangon);
    entity = 0;
    golfie = oscard[entity];
    tangon = argCor;
    entity = undefined;
    golfie = tangon.bind(entity)(golfie);
    var _closure1_slot3 = golfie;
    tangon = 1;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    option = tangon.View;
    var _closure1_slot4 = option;
    option = tangon.ActivityIndicator;
    var _closure1_slot5 = option;
    yankee = tangon.StyleSheet;
    tangon = 2;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.ContentDismissActionType;
    var _closure1_slot6 = tangon;
    tangon = 3;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.PREMIUM_TIER_2_TRIAL_FOR_EVERYONE_TRIAL_ID;
    var _closure1_slot7 = tangon;
    tangon = 4;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    option = tangon.jsx;
    var _closure1_slot8 = option;
    tangon = tangon.jsxs;
    var _closure1_slot9 = tangon;
    tangon = 5;
    tangon = oscard[tangon];
    verify = report.bind(entity)(tangon);
    option = verify.createStyles;
    tangon = {};
    offset = {};
    kiloes = yankee.absoluteFillObject;
    sizing = offset;
    yankee = copyDataProperties(sizing, kiloes);
    foxtra = 10;
    yankee = 'zIndex';
    offset[yankee] = foxtra;
    tangon['container'] = offset;
    offset = {'position': 'absolute', 'flexDirection': 'row', 'alignItems': 'center', 'top': 4294967292, 'right': 0};
    tangon['buttons'] = offset;
    offset = {'height': 32, 'width': 32, 'alignItems': 'center', 'justifyContent': 'center'};
    yankee = 6;
    foxtra = oscard[yankee];
    foxtra = romeon.bind(entity)(foxtra);
    foxtra = foxtra.radii;
    foxtra = foxtra.lg;
    offset['borderRadius'] = foxtra;
    foxtra = oscard[yankee];
    foxtra = romeon.bind(entity)(foxtra);
    foxtra = foxtra.colors;
    foxtra = foxtra.REDESIGN_BUTTON_SECONDARY_OVERLAY_BACKGROUND;
    offset['backgroundColor'] = foxtra;
    tangon['button'] = offset;
    offset = {'minHeight': 32, 'minWidth': 72, 'paddingHorizontal': 8, 'overflow': 'hidden'};
    tangon['nitroButton'] = offset;
    offset = {'height': '100%', 'alignItems': 'center', 'justifyContent': 'center'};
    tangon['loading'] = offset;
    offset = {};
    foxtra = oscard[yankee];
    foxtra = romeon.bind(entity)(foxtra);
    foxtra = foxtra.colors;
    foxtra = foxtra.WHITE;
    offset['color'] = foxtra;
    tangon['icon'] = offset;
    offset = {'marginVertical': 8, 'marginHorizontal': 4};
    tangon['nitroPressable'] = offset;
    offset = {'marginVertical': 8, 'marginLeft': 4, 'marginRight': 16};
    tangon['settingsPressable'] = offset;
    offset = {'position': 'absolute', 'height': 9, 'width': 9, 'backgroundColor': null, 'borderRadius': null, 'right': 2, 'bottom': 0};
    foxtra = oscard[yankee];
    foxtra = romeon.bind(entity)(foxtra);
    foxtra = foxtra.unsafe_rawColors;
    foxtra = foxtra.RED_400;
    offset['backgroundColor'] = foxtra;
    yankee = oscard[yankee];
    yankee = romeon.bind(entity)(yankee);
    yankee = yankee.radii;
    yankee = yankee.lg;
    offset['borderRadius'] = yankee;
    tangon['dot'] = offset;
    tangon = option.bind(verify)(tangon);
    var _closure1_slot10 = tangon;
    tangon = golfie.memo;
    michal = function(argFoo) {
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            zuuluu = argFoo;
            oscard = zuuluu.isLoading;
            michal = zuuluu.navigateToSettings;
            var _closure2_slot0 = michal;
            entity = zuuluu.navigateToPremium;
            var _closure2_slot1 = entity;
            vacuum = zuuluu.navigateToShop;
            record = zuuluu.shopButtonRef;
            sizing = zuuluu.settingsButtonRef;
            cntext = zuuluu.paddingTop;
            tangon = undefined;
            if(!(cntext === tangon)) { _fun00002_ip = 63; continue _fun00001 }
 61:
            cntext = 0;
 63:
            var _closure2_slot2 = tangon;
            var _closure2_slot3 = tangon;
            var _closure2_slot4 = tangon;
            var _closure2_slot5 = tangon;
            zuuluu = _closure1_slot10;
            result = zuuluu.bind(tangon)();
            _closure2_slot2 = result;
            report = _closure1_slot0;
            golfie = _closure1_slot2;
            zuuluu = 9;
            option = golfie[zuuluu];
            verify = report.bind(tangon)(option);
            option = verify.useHasPremiumSubscriptionToDisplay;
            romeon = option.bind(verify)();
            option = 7;
            option = golfie[option];
            verify = report.bind(tangon)(option);
            option = verify.useUnseenOutboundPromotions;
            option = option.bind(verify)();
            verify = option.length;
            option = 0;
            output = verify > option;
            foxtra = 8;
            option = golfie[foxtra];
            verify = report.bind(tangon)(option);
            option = verify.useIsEligibleForPomelo;
            option = option.bind(verify)();
            zuuluu = golfie[zuuluu];
            verify = report.bind(tangon)(zuuluu);
            zuuluu = verify.useHasTier2Premium;
            offset = zuuluu.bind(verify)();
            zuuluu = 10;
            zuuluu = golfie[zuuluu];
            backup = report.bind(tangon)(zuuluu);
            yankee = backup.UNSAFE_useIsDismissibleContentDismissed;
            verify = 11;
            zuuluu = golfie[verify];
            zuuluu = report.bind(tangon)(zuuluu);
            zuuluu = zuuluu.DismissibleContent;
            zuuluu = zuuluu.MOBILE_NITRO_HOME_SETTINGS_BADGE;
            zuuluu = yankee.bind(backup)(zuuluu);
            zuuluu = !zuuluu;
            if(!zuuluu) { _fun00002_ip = 254; continue _fun00001 }
 251:
            zuuluu = offset;
 254:
            if(output) { _fun00002_ip = 260; continue _fun00001 }
 257:
            output = option;
 260:
            if(output) { _fun00002_ip = 266; continue _fun00001 }
 263:
            output = zuuluu;
 266:
            _closure2_slot3 = output;
            config = new Array(0);
            zuuluu = 12;
            zuuluu = golfie[zuuluu];
            golfie = report.bind(tangon)(zuuluu);
            report = golfie.useTrialOffer;
            zuuluu = _closure1_slot7;
            zuuluu = report.bind(golfie)(zuuluu);
            report = null;
            if(!(report != zuuluu)) { _fun00002_ip = 346; continue _fun00001 }
 307:
            golfie = config.push;
            option = _closure1_slot0;
            zuuluu = _closure1_slot2;
            zuuluu = zuuluu[verify];
            zuuluu = option.bind(tangon)(zuuluu);
            zuuluu = zuuluu.DismissibleContent;
            zuuluu = zuuluu.TRIAL_FOR_ALL_MOBILE_SETTINGS_NOTICE;
            zuuluu = golfie.bind(config)(zuuluu);
 346:
            golfie = _closure1_slot3;
            option = golfie.useCallback;
            zuuluu = new Array(2);
            zuuluu[0] = output;
            zuuluu[1] = michal;
            michal = function() {
                zuuluu = _closure1_slot0;
                michal = _closure1_slot2;
                entity = 13;
                michal = michal[entity];
                entity = undefined;
                report = zuuluu.bind(entity)(michal);
                tangon = report.trackYouTabSettingsIconPress;
                zuuluu = {};
                oscard = _closure2_slot3;
                zuuluu['isBadged'] = oscard;
                zuuluu = tangon.bind(report)(zuuluu);
                michal = _closure2_slot0;
                michal = michal.bind(entity)();
                return entity;
            };
            backup = option.bind(golfie)(michal, zuuluu);
            zuuluu = golfie.useCallback;
            michal = new Array(1);
            michal[0] = entity;
            entity = function(argFoo) {
                entity = _closure1_slot6;
                tangon = entity.TAKE_ACTION;
                zuuluu = argFoo;
                entity = undefined;
                zuuluu = zuuluu.bind(entity)(tangon);
                zuuluu = _closure1_slot0;
                tangon = _closure1_slot2;
                michal = 13;
                michal = tangon[michal];
                zuuluu = zuuluu.bind(entity)(michal);
                michal = zuuluu.trackYouTabNitroIconPress;
                michal = michal.bind(zuuluu)();
                michal = _closure2_slot1;
                michal = michal.bind(entity)();
                return entity;
            };
            entity = zuuluu.bind(golfie)(entity, michal);
            _closure2_slot4 = entity;
            michal = _closure1_slot1;
            zuuluu = _closure1_slot2;
            entity = 14;
            entity = zuuluu[entity];
            offset = michal.bind(tangon)(entity);
            verify = offset.getCurrentConfig;
            option = {};
            entity = 'YouBannerDecorations';
            option['location'] = entity;
            entity = {};
            yankee = false;
            entity['autoTrackExposure'] = yankee;
            entity = verify.bind(offset)(option, entity);
            yankee = entity.enabled;
            entity = golfie.useRef;
            source = entity.bind(golfie)(report);
            entity = 15;
            entity = zuuluu[entity];
            entity = michal.bind(tangon)(entity);
            entity = entity.bind(tangon)(source);
            _closure2_slot5 = entity;
            report = golfie.useCallback;
            michal = new Array(1);
            michal[0] = entity;
            entity = function() {
                _fun00003: for(var _fun00004_ip = 0; ; ) switch(_fun00004_ip) {
 0:
                    tangon = _closure2_slot5;
                    entity = _closure1_slot6;
                    michal = entity.TAKE_ACTION;
                    entity = undefined;
                    michal = tangon.bind(entity)(michal);
                    tangon = _closure1_slot1;
                    report = _closure1_slot2;
                    michal = 16;
                    michal = report[michal];
                    michal = tangon.bind(entity)(michal);
                    tangon = michal.bind(entity)();
                    report = _closure1_slot1;
                    michal = _closure1_slot2;
                    if(tangon) { _fun00004_ip = 109; continue _fun00003 }
 62:
                    tangon = 17;
                    tangon = michal[tangon];
                    oscard = report.bind(entity)(tangon);
                    golfie = _closure1_slot0;
                    tangon = 18;
                    tangon = michal[tangon];
                    tangon = golfie.bind(entity)(tangon);
                    tangon = tangon.EntitlementFeatureNames;
                    tangon = tangon.SAVED_MESSAGES;
                    tangon = oscard.bind(entity)(tangon);
                    _fun00004_ip = 190; continue _fun00003;
 109:
                    tangon = 19;
                    tangon = michal[tangon];
                    golfie = report.bind(entity)(tangon);
                    oscard = golfie.pushLazy;
                    tangon = _closure1_slot0;
                    zuuluu = 21;
                    zuuluu = michal[zuuluu];
                    tangon = tangon.bind(entity)(zuuluu);
                    zuuluu = 20;
                    zuuluu = michal[zuuluu];
                    michal = michal.paths;
                    yankee = tangon.bind(entity)(zuuluu, michal);
                    tangon = {};
                    michal = 'modal';
                    tangon['presentation'] = michal;
                    offset = {};
                    verify = 'for-later-modal';
                    romeon = golfie;
                    option = tangon;
                    michal = romeon[oscard](yankee, offset, verify, option, golfie);
 190:
                    return entity;
                }
            };
            update = report.bind(golfie)(entity, michal);
            michal = _closure1_slot0;
            entity = 22;
            entity = zuuluu[entity];
            zuuluu = michal.bind(tangon)(entity);
            michal = zuuluu.useIsNotificationsTabMerged;
            entity = {};
            report = 'ICYMIHeader';
            entity['location'] = report;
            entity = michal.bind(zuuluu)(entity);
            offset = entity.enabled;
            zuuluu = _closure1_slot9;
            michal = _closure1_slot4;
            entity = {};
            golfie = result.container;
            report = new Array(2);
            report[0] = golfie;
            golfie = {};
            golfie['paddingTop'] = cntext;
            report[1] = golfie;
            entity['style'] = report;
            verify = 'box-none';
            entity['pointerEvents'] = verify;
            if(!oscard) { _fun00002_ip = 671; continue _fun00001 }
 621:
            option = _closure1_slot8;
            golfie = _closure1_slot4;
            report = {};
            echoed = result.loading;
            report['style'] = echoed;
            ctrled = _closure1_slot5;
            echoed = {};
            papara = 'large';
            echoed['size'] = papara;
            echoed = option.bind(tangon)(ctrled, echoed);
            report['children'] = echoed;
            oscard = option.bind(tangon)(golfie, report);
 671:
            report = new Array(2);
            report[0] = oscard;
            option = _closure1_slot9;
            golfie = _closure1_slot4;
            oscard = {};
            ctrled = result.buttons;
            echoed = new Array(2);
            echoed[0] = ctrled;
            ctrled = {};
            ctrled['paddingTop'] = cntext;
            echoed[1] = ctrled;
            oscard['style'] = echoed;
            oscard['pointerEvents'] = verify;
            ctrled = _closure1_slot8;
            echoed = _closure1_slot1;
            cntext = _closure1_slot2;
            verify = 23;
            verify = cntext[verify];
            echoed = echoed.bind(tangon)(verify);
            verify = {};
            verify['shopButtonRef'] = record;
            verify['navigateToShop'] = vacuum;
            echoed = ctrled.bind(tangon)(echoed, verify);
            verify = new Array(4);
            verify[0] = echoed;
            romeon = !romeon;
            if(!romeon) { _fun00002_ip = 827; continue _fun00001 }
 779:
            vacuum = _closure1_slot8;
            ctrled = _closure1_slot1;
            record = _closure1_slot2;
            echoed = 24;
            echoed = record[echoed];
            ctrled = ctrled.bind(tangon)(echoed);
            echoed = {};
            echoed['contentTypes'] = config;
            sequen = function(argFoo) { // Original name: children
                _fun00005: for(var _fun00006_ip = 0; ; ) switch(_fun00006_ip) {
 0:
                    entity = argFoo;
                    yankee = entity.visibleContent;
                    entity = entity.markAsDismissed;
                    var _closure3_slot0 = entity;
                    tangon = _closure1_slot8;
                    verify = _closure1_slot0;
                    backup = _closure1_slot2;
                    entity = 25;
                    entity = backup[entity];
                    zuuluu = undefined;
                    entity = verify.bind(zuuluu)(entity);
                    michal = entity.PressableScale;
                    entity = {};
                    oscard = _closure2_slot2;
                    oscard = oscard.nitroPressable;
                    entity['style'] = oscard;
                    oscard = 'button';
                    entity['accessibilityRole'] = oscard;
                    oscard = 26;
                    golfie = backup[oscard];
                    golfie = verify.bind(zuuluu)(golfie);
                    option = golfie.intl;
                    golfie = option.string;
                    oscard = backup[oscard];
                    oscard = verify.bind(zuuluu)(oscard);
                    oscard = oscard.t;
                    oscard = oscard.Ipxkoq;
                    oscard = golfie.bind(option)(oscard);
                    entity['accessibilityLabel'] = oscard;
                    report = function() { // Original name: onPress
                        zuuluu = _closure2_slot4;
                        michal = _closure3_slot0;
                        entity = undefined;
                        entity = zuuluu.bind(entity)(michal);
                        return entity;
                    };
                    entity['onPress'] = report;
                    report = 8;
                    entity['hitSlop'] = report;
                    golfie = _closure1_slot9;
                    oscard = _closure1_slot4;
                    report = {};
                    option = {};
                    verify = _closure2_slot2;
                    romeon = verify.button;
                    verify = new Array(2);
                    verify[0] = romeon;
                    romeon = _closure2_slot2;
                    romeon = romeon.nitroButton;
                    verify[1] = romeon;
                    option['style'] = verify;
                    romeon = _closure1_slot1;
                    verify = 27;
                    verify = backup[verify];
                    romeon = romeon.bind(zuuluu)(verify);
                    verify = {};
                    backup = _closure2_slot2;
                    backup = backup.icon;
                    backup = backup.color;
                    verify['color'] = backup;
                    verify = tangon.bind(zuuluu)(romeon, verify);
                    option['children'] = verify;
                    verify = tangon.bind(zuuluu)(oscard, option);
                    option = new Array(2);
                    option[0] = verify;
                    verify = null;
                    verify = verify !== yankee;
                    if(!verify) { _fun00006_ip = 300; continue _fun00005 }
 270:
                    romeon = _closure1_slot8;
                    yankee = _closure1_slot4;
                    offset = {};
                    foxtra = _closure2_slot2;
                    foxtra = foxtra.dot;
                    offset['style'] = foxtra;
                    verify = romeon.bind(zuuluu)(yankee, offset);
 300:
                    option[1] = verify;
                    report['children'] = option;
                    report = golfie.bind(zuuluu)(oscard, report);
                    entity['children'] = report;
                    entity = tangon.bind(zuuluu)(michal, entity);
                    return entity;
                }
            };
            echoed['children'] = sequen;
            romeon = vacuum.bind(tangon)(ctrled, echoed);
 827:
            verify[1] = romeon;
            if(!offset) { _fun00002_ip = 837; continue _fun00001 }
 834:
            offset = yankee;
 837:
            if(!offset) { _fun00002_ip = 1041; continue _fun00001 }
 843:
            echoed = _closure1_slot8;
            vacuum = _closure1_slot0;
            sequen = _closure1_slot2;
            yankee = 25;
            yankee = sequen[yankee];
            yankee = vacuum.bind(tangon)(yankee);
            romeon = yankee.PressableScale;
            yankee = {};
            yankee['ref'] = source;
            source = result.nitroPressable;
            yankee['style'] = source;
            source = 'button';
            yankee['accessibilityRole'] = source;
            source = 26;
            ctrled = sequen[source];
            ctrled = vacuum.bind(tangon)(ctrled);
            config = ctrled.intl;
            ctrled = config.string;
            source = sequen[source];
            source = vacuum.bind(tangon)(source);
            source = source.t;
            source = source.2pAkDA;
            source = ctrled.bind(config)(source);
            yankee['accessibilityLabel'] = source;
            yankee['onPress'] = update;
            yankee['hitSlop'] = foxtra;
            source = _closure1_slot4;
            update = {};
            ctrled = result.button;
            update['style'] = ctrled;
            ctrled = 28;
            ctrled = sequen[ctrled];
            ctrled = vacuum.bind(tangon)(ctrled);
            vacuum = ctrled.BookmarkIcon;
            ctrled = {};
            sequen = result.icon;
            sequen = sequen.color;
            ctrled['color'] = sequen;
            sequen = 'sm';
            ctrled['size'] = sequen;
            ctrled = echoed.bind(tangon)(vacuum, ctrled);
            update['children'] = ctrled;
            update = echoed.bind(tangon)(source, update);
            yankee['children'] = update;
            offset = echoed.bind(tangon)(romeon, yankee);
 1041:
            verify[2] = offset;
            romeon = _closure1_slot8;
            ctrled = _closure1_slot0;
            echoed = _closure1_slot2;
            offset = 25;
            offset = echoed[offset];
            offset = ctrled.bind(tangon)(offset);
            yankee = offset.PressableScale;
            offset = {};
            offset['ref'] = sizing;
            sizing = result.settingsPressable;
            offset['style'] = sizing;
            sizing = 'button';
            offset['accessibilityRole'] = sizing;
            sizing = 26;
            update = echoed[sizing];
            update = ctrled.bind(tangon)(update);
            source = update.intl;
            update = source.string;
            sizing = echoed[sizing];
            sizing = ctrled.bind(tangon)(sizing);
            sizing = sizing.t;
            sizing = sizing.3D5yo6;
            sizing = update.bind(source)(sizing);
            offset['accessibilityLabel'] = sizing;
            offset['onPress'] = backup;
            offset['hitSlop'] = foxtra;
            backup = _closure1_slot4;
            foxtra = {};
            sizing = result.button;
            foxtra['style'] = sizing;
            sizing = _closure1_slot1;
            kiloes = 29;
            kiloes = echoed[kiloes];
            sizing = sizing.bind(tangon)(kiloes);
            kiloes = {};
            result = result.icon;
            result = result.color;
            kiloes['color'] = result;
            kiloes['isBadged'] = output;
            kiloes = romeon.bind(tangon)(sizing, kiloes);
            foxtra['children'] = kiloes;
            foxtra = romeon.bind(tangon)(backup, foxtra);
            offset['children'] = foxtra;
            offset = romeon.bind(tangon)(yankee, offset);
            verify[3] = offset;
            oscard['children'] = verify;
            oscard = option.bind(tangon)(golfie, oscard);
            report[1] = oscard;
            entity['children'] = report;
            entity = zuuluu.bind(tangon)(michal, entity);
            return entity;
        }
    };
    michal = tangon.bind(golfie)(michal);
    tangon = 30;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/main_tabs_v2/native/tabs/you/YouBannerDecorations.tsx';
    tangon = report.bind(oscard)(tangon);
    zuuluu['default'] = michal;
    return entity;
})();