// app/modules/main_tabs_v2/native/tabs/you/FocusModeOptionsActionSheet.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    report = argBar;
    offset = argBaz;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    var _closure1_slot1 = oscard;
    entity = global;
    option = entity.Object;
    golfie = option.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(option)(zuuluu, entity, tangon);
    entity = 0;
    golfie = oscard[entity];
    tangon = argCor;
    entity = undefined;
    tangon = tangon.bind(entity)(golfie);
    tangon = 1;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    golfie = tangon.jsx;
    var _closure1_slot2 = golfie;
    tangon = tangon.jsxs;
    var _closure1_slot3 = tangon;
    tangon = {};
    verify = 2;
    golfie = oscard[verify];
    golfie = offset.bind(entity)(golfie);
    golfie = golfie.Millis;
    option = golfie.MINUTE;
    golfie = 30;
    golfie = golfie * option;
    tangon['duration'] = golfie;
    golfie = function() { // Original name: label
        report = _closure1_slot0;
        oscard = _closure1_slot1;
        entity = 3;
        michal = oscard[entity];
        tangon = undefined;
        michal = report.bind(tangon)(michal);
        zuuluu = michal.intl;
        michal = zuuluu.string;
        entity = oscard[entity];
        entity = report.bind(tangon)(entity);
        entity = entity.t;
        entity = entity.RxJGbG;
        entity = michal.bind(zuuluu)(entity);
        return entity;
    };
    tangon['label'] = golfie;
    golfie = new Array(6);
    golfie[0] = tangon;
    tangon = {};
    option = oscard[verify];
    option = offset.bind(entity)(option);
    option = option.Millis;
    option = option.HOUR;
    tangon['duration'] = option;
    option = function() { // Original name: label
        report = _closure1_slot0;
        oscard = _closure1_slot1;
        entity = 3;
        michal = oscard[entity];
        tangon = undefined;
        michal = report.bind(tangon)(michal);
        zuuluu = michal.intl;
        michal = zuuluu.string;
        entity = oscard[entity];
        entity = report.bind(tangon)(entity);
        entity = entity.t;
        entity = entity.UMWBZm;
        entity = michal.bind(zuuluu)(entity);
        return entity;
    };
    tangon['label'] = option;
    golfie[1] = tangon;
    tangon = {};
    option = oscard[verify];
    option = offset.bind(entity)(option);
    option = option.Millis;
    yankee = option.HOUR;
    option = 3;
    option = option * yankee;
    tangon['duration'] = option;
    option = function() { // Original name: label
        report = _closure1_slot0;
        oscard = _closure1_slot1;
        entity = 3;
        michal = oscard[entity];
        tangon = undefined;
        michal = report.bind(tangon)(michal);
        zuuluu = michal.intl;
        michal = zuuluu.string;
        entity = oscard[entity];
        entity = report.bind(tangon)(entity);
        entity = entity.t;
        entity = entity.QmYWtr;
        entity = michal.bind(zuuluu)(entity);
        return entity;
    };
    tangon['label'] = option;
    golfie[2] = tangon;
    option = {};
    tangon = oscard[verify];
    tangon = offset.bind(entity)(tangon);
    tangon = tangon.Millis;
    yankee = tangon.HOUR;
    tangon = 8;
    yankee = tangon * yankee;
    option['duration'] = yankee;
    yankee = function() { // Original name: label
        report = _closure1_slot0;
        oscard = _closure1_slot1;
        entity = 3;
        michal = oscard[entity];
        tangon = undefined;
        michal = report.bind(tangon)(michal);
        zuuluu = michal.intl;
        michal = zuuluu.string;
        entity = oscard[entity];
        entity = report.bind(tangon)(entity);
        entity = entity.t;
        entity = entity.EpAXPD;
        entity = michal.bind(zuuluu)(entity);
        return entity;
    };
    option['label'] = yankee;
    golfie[3] = option;
    option = {};
    verify = oscard[verify];
    verify = offset.bind(entity)(verify);
    verify = verify.Millis;
    verify = verify.DAY;
    option['duration'] = verify;
    verify = function() { // Original name: label
        report = _closure1_slot0;
        oscard = _closure1_slot1;
        entity = 3;
        michal = oscard[entity];
        tangon = undefined;
        michal = report.bind(tangon)(michal);
        zuuluu = michal.intl;
        michal = zuuluu.string;
        entity = oscard[entity];
        entity = report.bind(tangon)(entity);
        entity = entity.t;
        entity = entity.755t4u;
        entity = michal.bind(zuuluu)(entity);
        return entity;
    };
    option['label'] = verify;
    golfie[4] = option;
    option = {};
    option['duration'] = entity;
    verify = function() { // Original name: label
        report = _closure1_slot0;
        oscard = _closure1_slot1;
        entity = 3;
        michal = oscard[entity];
        tangon = undefined;
        michal = report.bind(tangon)(michal);
        zuuluu = michal.intl;
        michal = zuuluu.string;
        entity = oscard[entity];
        entity = report.bind(tangon)(entity);
        entity = entity.t;
        entity = entity.46dqJS;
        entity = michal.bind(zuuluu)(entity);
        return entity;
    };
    option['label'] = verify;
    golfie[5] = option;
    var _closure1_slot4 = golfie;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/main_tabs_v2/native/tabs/you/FocusModeOptionsActionSheet.tsx';
    tangon = report.bind(oscard)(tangon);
    michal = function(argFoo) { // Original name: FocusModeOptionsActionSheet
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            entity = argFoo;
            entity = entity.onSelect;
            var _closure2_slot0 = entity;
            backup = _closure1_slot0;
            yankee = _closure1_slot1;
            entity = 4;
            entity = yankee[entity];
            tangon = undefined;
            michal = backup.bind(tangon)(entity);
            entity = michal.useFocusModeEnabled;
            option = entity.bind(michal)();
            zuuluu = _closure1_slot2;
            entity = 5;
            entity = yankee[entity];
            entity = backup.bind(tangon)(entity);
            michal = entity.ActionSheet;
            entity = {};
            golfie = _closure1_slot3;
            report = 6;
            report = yankee[report];
            report = backup.bind(tangon)(report);
            oscard = report.TableRowGroup;
            report = {};
            result = 3;
            romeon = yankee[result];
            romeon = backup.bind(tangon)(romeon);
            foxtra = romeon.intl;
            romeon = foxtra.string;
            yankee = yankee[result];
            yankee = backup.bind(tangon)(yankee);
            yankee = yankee.t;
            yankee = yankee.sNX1Ex;
            yankee = romeon.bind(foxtra)(yankee);
            report['title'] = yankee;
            kiloes = null;
            yankee = null;
            if(!option) { _fun00002_ip = 360; continue _fun00001 }
 161:
            foxtra = _closure1_slot2;
            output = _closure1_slot0;
            backup = _closure1_slot1;
            option = 7;
            option = backup[option];
            option = output.bind(tangon)(option);
            romeon = option.TableRow;
            option = {};
            sizing = backup[result];
            sizing = output.bind(tangon)(sizing);
            update = sizing.intl;
            echoed = update.string;
            sizing = backup[result];
            sizing = output.bind(tangon)(sizing);
            sizing = sizing.t;
            sizing = sizing.rk35Gh;
            sizing = echoed.bind(update)(sizing);
            option['accessibilityLabel'] = sizing;
            sizing = backup[result];
            sizing = output.bind(tangon)(sizing);
            update = sizing.intl;
            echoed = update.string;
            sizing = backup[result];
            sizing = output.bind(tangon)(sizing);
            sizing = sizing.t;
            sizing = sizing.rk35Gh;
            sizing = echoed.bind(update)(sizing);
            option['accessibilityHint'] = sizing;
            sizing = function() { // Original name: onPress
                zuuluu = _closure2_slot0;
                entity = undefined;
                michal = false;
                michal = zuuluu.bind(entity)(michal, entity);
                return entity;
            };
            option['onPress'] = sizing;
            option['trailing'] = kiloes;
            kiloes = backup[result];
            kiloes = output.bind(tangon)(kiloes);
            sizing = kiloes.intl;
            kiloes = sizing.string;
            backup = backup[result];
            backup = output.bind(tangon)(backup);
            backup = backup.t;
            backup = backup.rk35Gh;
            backup = kiloes.bind(sizing)(backup);
            option['label'] = backup;
            yankee = foxtra.bind(tangon)(romeon, option);
 360:
            option = new Array(2);
            option[0] = yankee;
            yankee = _closure1_slot4;
            offset = yankee.map;
            verify = function(argFoo) {
                entity = argFoo;
                golfie = entity.duration;
                var _closure3_slot0 = golfie;
                entity = entity.label;
                report = _closure1_slot2;
                zuuluu = _closure1_slot0;
                tangon = _closure1_slot1;
                michal = 7;
                michal = tangon[michal];
                tangon = undefined;
                michal = zuuluu.bind(tangon)(michal);
                zuuluu = michal.TableRow;
                michal = {};
                option = entity.bind(tangon)();
                michal['accessibilityLabel'] = option;
                option = entity.bind(tangon)();
                michal['accessibilityHint'] = option;
                oscard = function() { // Original name: onPress
                    tangon = _closure2_slot0;
                    zuuluu = _closure3_slot0;
                    entity = undefined;
                    michal = true;
                    michal = tangon.bind(entity)(michal, zuuluu);
                    return entity;
                };
                michal['onPress'] = oscard;
                oscard = null;
                michal['trailing'] = oscard;
                entity = entity.bind(tangon)();
                michal['label'] = entity;
                entity = global;
                entity = entity.HermesInternal;
                oscard = entity.concat;
                entity = '';
                entity = oscard.bind(entity)(golfie);
                entity = report.bind(tangon)(zuuluu, michal, entity);
                return entity;
            };
            verify = offset.bind(yankee)(verify);
            option[1] = verify;
            report['children'] = option;
            report = golfie.bind(tangon)(oscard, report);
            entity['children'] = report;
            entity = zuuluu.bind(tangon)(michal, entity);
            return entity;
        }
    };
    zuuluu['default'] = michal;
    return entity;
})();