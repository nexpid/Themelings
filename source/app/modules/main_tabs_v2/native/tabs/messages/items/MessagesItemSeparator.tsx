// app/modules/main_tabs_v2/native/tabs/messages/items/MessagesItemSeparator.tsx
export default (function(_, argBar, argBaz, argCorge, __, argFred, argPlugh) {
    oscar = argBar;
    backup = argBaz;
    zulu = argFred;
    golf = argPlugh;
    entity = global;
    options = entity.Object;
    report = options.defineProperty;
    mike = {};
    entity = true;
    mike['value'] = entity;
    entity = '__esModule';
    entity = report.bind(options)(zulu, entity, mike);
    entity = 0;
    report = golf[entity];
    mike = argCorge;
    entity = undefined;
    options = mike.bind(entity)(report);
    mike = 1;
    mike = golf[mike];
    mike = oscar.bind(entity)(mike);
    romeo = mike.StyleSheet;
    mike = mike.View;
    var _closure1_slot0 = mike;
    mike = 2;
    mike = golf[mike];
    mike = oscar.bind(entity)(mike);
    mike = mike.jsx;
    var _closure1_slot1 = mike;
    foxtrot = 3;
    mike = golf[foxtrot];
    mike = backup.bind(entity)(mike);
    mike = mike.spacing;
    mike = mike.PX_12;
    report = 4;
    report = golf[report];
    offset = oscar.bind(entity)(report);
    verify = offset.createStyles;
    report = {};
    yankee = {};
    yankee['height'] = mike;
    report['container'] = yankee;
    yankee = {};
    foxtrot = golf[foxtrot];
    foxtrot = backup.bind(entity)(foxtrot);
    foxtrot = foxtrot.colors;
    foxtrot = foxtrot.BORDER_SUBTLE;
    yankee['backgroundColor'] = foxtrot;
    foxtrot = romeo.hairlineWidth;
    yankee['height'] = foxtrot;
    output = romeo.absoluteFillObject;
    result = yankee;
    romeo = copyDataProperties(result, output);
    romeo = 'top';
    yankee[romeo] = entity;
    report['separator'] = yankee;
    report = verify.bind(offset)(report);
    var _closure1_slot2 = report;
    report = options.memo;
    tango = function() { // Original name: MessagesItemSeperator
        mike = _closure1_slot2;
        tango = undefined;
        oscar = mike.bind(tango)();
        zulu = _closure1_slot1;
        mike = _closure1_slot0;
        entity = {};
        report = oscar.container;
        entity['style'] = report;
        report = {};
        oscar = oscar.separator;
        report['style'] = oscar;
        report = zulu.bind(tango)(mike, report);
        entity['children'] = report;
        entity = zulu.bind(tango)(mike, entity);
        return entity;
    };
    tango = report.bind(options)(tango);
    report = 5;
    report = golf[report];
    golf = oscar.bind(entity)(report);
    oscar = golf.fileFinishedImporting;
    report = 'modules/main_tabs_v2/native/tabs/messages/items/MessagesItemSeparator.tsx';
    report = oscar.bind(golf)(report);
    zulu['default'] = tango;
    zulu['MESSAGES_ITEM_SEPERATOR_HEIGHT'] = mike;
    return entity;
})();