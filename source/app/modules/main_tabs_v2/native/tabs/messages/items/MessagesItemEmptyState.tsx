// app/modules/main_tabs_v2/native/tabs/messages/items/MessagesItemEmptyState.tsx
export default (function(_, argBar, argBaz, argCorge, __, argFred, argPlugh) {
    oscar = argBar;
    foxtrot = argBaz;
    zulu = argFred;
    golf = argPlugh;
    var _closure1_slot0 = oscar;
    var _closure1_slot1 = foxtrot;
    var _closure1_slot2 = golf;
    entity = global;
    options = entity.Object;
    report = options.defineProperty;
    mike = {};
    entity = true;
    mike['value'] = entity;
    entity = '__esModule';
    entity = report.bind(options)(zulu, entity, mike);
    entity = 0;
    report = golf[entity];
    mike = argCorge;
    entity = undefined;
    options = mike.bind(entity)(report);
    var _closure1_slot3 = options;
    mike = 1;
    mike = golf[mike];
    mike = oscar.bind(entity)(mike);
    report = mike.Image;
    var _closure1_slot4 = report;
    mike = mike.View;
    var _closure1_slot5 = mike;
    mike = 2;
    report = golf[mike];
    report = oscar.bind(entity)(report);
    report = report.jsx;
    var _closure1_slot6 = report;
    mike = golf[mike];
    mike = oscar.bind(entity)(mike);
    mike = mike.jsxs;
    var _closure1_slot7 = mike;
    mike = 3;
    mike = golf[mike];
    offset = oscar.bind(entity)(mike);
    verify = offset.createStyles;
    report = {};
    yankee = {'padding': null, 'flex': 1, 'height': 325};
    romeo = 4;
    mike = golf[romeo];
    mike = foxtrot.bind(entity)(mike);
    mike = mike.spacing;
    mike = mike.PX_16;
    yankee['padding'] = mike;
    mike = 325;
    report['container'] = yankee;
    yankee = {'marginBottom': null, 'flexShrink': 1, 'flexGrow': 1};
    backup = golf[romeo];
    backup = foxtrot.bind(entity)(backup);
    backup = backup.spacing;
    backup = backup.PX_16;
    yankee['marginBottom'] = backup;
    report['containerImage'] = yankee;
    yankee = {'height': '100%', 'width': '100%'};
    report['image'] = yankee;
    yankee = {};
    backup = golf[romeo];
    backup = foxtrot.bind(entity)(backup);
    backup = backup.spacing;
    backup = backup.PX_16;
    yankee['marginBottom'] = backup;
    romeo = golf[romeo];
    romeo = foxtrot.bind(entity)(romeo);
    romeo = romeo.spacing;
    romeo = romeo.PX_8;
    yankee['marginTop'] = romeo;
    romeo = 'center';
    yankee['textAlign'] = romeo;
    report['body'] = yankee;
    yankee = {};
    yankee['textAlign'] = romeo;
    report['title'] = yankee;
    report = verify.bind(offset)(report);
    var _closure1_slot8 = report;
    report = options.memo;
    tango = function() { // Original name: MessagesItemEmptyState
        entity = _closure1_slot8;
        tango = undefined;
        yankee = entity.bind(tango)();
        report = _closure1_slot3;
        zulu = report.useCallback;
        mike = function() {
            _fun115386: for(var _fun115386_ip = 0; ; ) switch(_fun115386_ip) {
 0:
                zulu = _closure1_slot0;
                mike = _closure1_slot2;
                entity = 5;
                mike = mike[entity];
                entity = undefined;
                zulu = zulu.bind(entity)(mike);
                mike = zulu.getRootNavigationRef;
                zulu = mike.bind(zulu)();
                tango = null;
                mike = tango == zulu;
                report = zulu;
                if(mike) { _fun115386_ip = 59; continue _fun115386 }
 47:
                zulu = zulu.current;
                mike = tango == zulu;
                report = zulu;
 59:
                if(mike) { _fun115386_ip = 110; continue _fun115386 }
 62:
                tango = report.navigate;
                zulu = {};
                mike = 'add-friends';
                zulu['screen'] = mike;
                mike = {'sourcePage': 'Messages Empty State', 'presentation': 'card'};
                zulu['params'] = mike;
                mike = 'friends';
                mike = tango.bind(report)(mike, zulu);
 110:
                return entity;
            }
        };
        entity = new Array(0);
        verify = zulu.bind(report)(mike, entity);
        zulu = _closure1_slot7;
        mike = _closure1_slot5;
        entity = {};
        report = yankee.container;
        entity['style'] = report;
        report = false;
        entity['collapsable'] = report;
        options = _closure1_slot6;
        report = {};
        golf = yankee.containerImage;
        report['style'] = golf;
        offset = _closure1_slot4;
        golf = {};
        romeo = 'contain';
        golf['resizeMode'] = romeo;
        foxtrot = _closure1_slot1;
        backup = _closure1_slot2;
        romeo = 6;
        romeo = backup[romeo];
        romeo = foxtrot.bind(tango)(romeo);
        golf['source'] = romeo;
        romeo = yankee.image;
        golf['style'] = romeo;
        golf = options.bind(tango)(offset, golf);
        report['children'] = golf;
        golf = options.bind(tango)(mike, report);
        report = new Array(4);
        report[0] = golf;
        foxtrot = _closure1_slot0;
        oscar = 7;
        golf = backup[oscar];
        golf = foxtrot.bind(tango)(golf);
        romeo = golf.Text;
        golf = {'color': 'header-primary', 'variant': 'heading-lg/bold', 'style': null, 'maxFontSizeMultiplier': 2};
        offset = yankee.title;
        golf['style'] = offset;
        offset = 8;
        kilo = backup[offset];
        kilo = foxtrot.bind(tango)(kilo);
        output = kilo.intl;
        sizing = output.string;
        kilo = backup[offset];
        kilo = foxtrot.bind(tango)(kilo);
        kilo = kilo.t;
        kilo = kilo.8JZof3;
        kilo = sizing.bind(output)(kilo);
        golf['children'] = kilo;
        golf = options.bind(tango)(romeo, golf);
        report[1] = golf;
        oscar = backup[oscar];
        oscar = foxtrot.bind(tango)(oscar);
        golf = oscar.Text;
        oscar = {'color': 'header-secondary', 'variant': 'text-md/medium', 'style': null, 'maxFontSizeMultiplier': 2};
        yankee = yankee.body;
        oscar['style'] = yankee;
        yankee = backup[offset];
        yankee = foxtrot.bind(tango)(yankee);
        kilo = yankee.intl;
        romeo = kilo.string;
        yankee = backup[offset];
        yankee = foxtrot.bind(tango)(yankee);
        yankee = yankee.t;
        yankee = yankee.qm+H7+;
        yankee = romeo.bind(kilo)(yankee);
        oscar['children'] = yankee;
        oscar = options.bind(tango)(golf, oscar);
        report[2] = oscar;
        oscar = 9;
        oscar = backup[oscar];
        oscar = foxtrot.bind(tango)(oscar);
        golf = oscar.Button;
        oscar = {};
        yankee = backup[offset];
        yankee = foxtrot.bind(tango)(yankee);
        romeo = yankee.intl;
        yankee = romeo.string;
        offset = backup[offset];
        offset = foxtrot.bind(tango)(offset);
        offset = offset.t;
        offset = offset.zIJnAw;
        offset = yankee.bind(romeo)(offset);
        oscar['text'] = offset;
        oscar['onPress'] = verify;
        verify = 'lg';
        oscar['size'] = verify;
        oscar = options.bind(tango)(golf, oscar);
        report[3] = oscar;
        entity['children'] = report;
        entity = zulu.bind(tango)(mike, entity);
        return entity;
    };
    tango = report.bind(options)(tango);
    report = 10;
    report = golf[report];
    golf = oscar.bind(entity)(report);
    oscar = golf.fileFinishedImporting;
    report = 'modules/main_tabs_v2/native/tabs/messages/items/MessagesItemEmptyState.tsx';
    report = oscar.bind(golf)(report);
    zulu['default'] = tango;
    zulu['MESSAGES_ITEM_EMPTY_STATE_HEIGHT'] = mike;
    return entity;
})();