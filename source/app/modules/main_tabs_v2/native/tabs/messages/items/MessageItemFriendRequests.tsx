// app/modules/main_tabs_v2/native/tabs/messages/items/MessageItemFriendRequests.tsx
export default (function(argFoo, argBar, argBaz, argCorge, _, argFred, argPlugh) {
    report = argBar;
    romeo = argBaz;
    zulu = argFred;
    oscar = argPlugh;
    var _closure1_slot0 = report;
    var _closure1_slot1 = romeo;
    var _closure1_slot2 = oscar;
    entity = function() { // Original name: IncomingRequestsRowSeparator
        entity = _closure1_slot10;
        tango = undefined;
        options = entity.bind(tango)();
        zulu = _closure1_slot8;
        mike = _closure1_slot4;
        entity = {};
        oscar = options.separatorContainer;
        entity['style'] = oscar;
        golf = _closure1_slot8;
        oscar = _closure1_slot4;
        report = {};
        options = options.separator;
        report['style'] = options;
        report = golf.bind(tango)(oscar, report);
        entity['children'] = report;
        entity = zulu.bind(tango)(mike, entity);
        return entity;
    };
    var _closure1_slot11 = entity;
    entity = global;
    options = entity.Object;
    golf = options.defineProperty;
    tango = {};
    entity = true;
    tango['value'] = entity;
    entity = '__esModule';
    entity = golf.bind(options)(zulu, entity, tango);
    entity = 0;
    golf = oscar[entity];
    tango = argCorge;
    entity = undefined;
    tango = tango.bind(entity)(golf);
    var _closure1_slot3 = tango;
    foxtrot = 1;
    tango = oscar[foxtrot];
    tango = report.bind(entity)(tango);
    golf = tango.View;
    var _closure1_slot4 = golf;
    offset = tango.StyleSheet;
    tango = 2;
    tango = oscar[tango];
    tango = romeo.bind(entity)(tango);
    var _closure1_slot5 = tango;
    tango = 3;
    tango = oscar[tango];
    tango = romeo.bind(entity)(tango);
    var _closure1_slot6 = tango;
    tango = 4;
    tango = oscar[tango];
    tango = romeo.bind(entity)(tango);
    var _closure1_slot7 = tango;
    tango = 5;
    golf = oscar[tango];
    golf = report.bind(entity)(golf);
    golf = golf.jsx;
    var _closure1_slot8 = golf;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.jsxs;
    var _closure1_slot9 = tango;
    tango = 6;
    tango = oscar[tango];
    options = report.bind(entity)(tango);
    golf = options.createStyles;
    tango = {};
    verify = {};
    yankee = 7;
    backup = oscar[yankee];
    backup = romeo.bind(entity)(backup);
    backup = backup.spacing;
    backup = backup.PX_4;
    verify['marginRight'] = backup;
    backup = oscar[yankee];
    backup = romeo.bind(entity)(backup);
    backup = backup.spacing;
    backup = backup.PX_8;
    verify['marginLeft'] = backup;
    backup = oscar[yankee];
    backup = romeo.bind(entity)(backup);
    backup = backup.spacing;
    backup = backup.PX_8;
    verify['paddingHorizontal'] = backup;
    backup = oscar[yankee];
    backup = romeo.bind(entity)(backup);
    backup = backup.radii;
    backup = backup.md;
    verify['borderRadius'] = backup;
    backup = 'center';
    verify['justifyContent'] = backup;
    kilo = 'row';
    verify['flexDirection'] = kilo;
    verify['alignItems'] = backup;
    tango['pressable'] = verify;
    verify = {};
    backup = oscar[yankee];
    backup = romeo.bind(entity)(backup);
    backup = backup.colors;
    backup = backup.BACKGROUND_MODIFIER_ACTIVE;
    verify['backgroundColor'] = backup;
    tango['rowActive'] = verify;
    verify = {};
    backup = oscar[yankee];
    backup = romeo.bind(entity)(backup);
    backup = backup.spacing;
    backup = backup.PX_8;
    verify['marginHorizontal'] = backup;
    verify['flexGrow'] = foxtrot;
    tango['info'] = verify;
    verify = {};
    foxtrot = oscar[yankee];
    foxtrot = romeo.bind(entity)(foxtrot);
    foxtrot = foxtrot.spacing;
    foxtrot = foxtrot.PX_4;
    verify['marginHorizontal'] = foxtrot;
    tango['icon'] = verify;
    verify = {};
    foxtrot = oscar[yankee];
    foxtrot = romeo.bind(entity)(foxtrot);
    foxtrot = foxtrot.colors;
    foxtrot = foxtrot.REDESIGN_BUTTON_TERTIARY_TEXT;
    verify['backgroundColor'] = foxtrot;
    tango['chevronIcon'] = verify;
    verify = {'height': null, 'flex': 1, 'justifyContent': 'center'};
    foxtrot = 8;
    foxtrot = oscar[foxtrot];
    foxtrot = report.bind(entity)(foxtrot);
    foxtrot = foxtrot.MESSAGES_ITEM_SEPERATOR_HEIGHT;
    verify['height'] = foxtrot;
    tango['separatorContainer'] = verify;
    verify = {};
    yankee = oscar[yankee];
    yankee = romeo.bind(entity)(yankee);
    yankee = yankee.colors;
    yankee = yankee.BORDER_SUBTLE;
    verify['backgroundColor'] = yankee;
    offset = offset.hairlineWidth;
    verify['height'] = offset;
    tango['separator'] = verify;
    tango = golf.bind(options)(tango);
    var _closure1_slot10 = tango;
    tango = 21;
    tango = oscar[tango];
    oscar = report.bind(entity)(tango);
    report = oscar.fileFinishedImporting;
    tango = 'modules/main_tabs_v2/native/tabs/messages/items/MessageItemFriendRequests.tsx';
    tango = report.bind(oscar)(tango);
    mike = function(argFoo) { // Original name: MessagesItemIncomingRequestsRow
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            mike = argFoo;
            kilo = mike.height;
            mike = _closure1_slot10;
            tango = undefined;
            foxtrot = mike.bind(tango)();
            offset = _closure1_slot0;
            romeo = _closure1_slot2;
            mike = 9;
            mike = romeo[mike];
            report = offset.bind(tango)(mike);
            zulu = report.useIsFriendTiersUIEnabled;
            mike = {};
            golf = 'MessagesItemIncomingRequestsRow';
            mike['location'] = golf;
            mike = zulu.bind(report)(mike);
            var _closure2_slot0 = mike;
            zulu = 10;
            zulu = romeo[zulu];
            options = offset.bind(tango)(zulu);
            golf = options.useStateFromStoresArray;
            zulu = _closure1_slot6;
            report = new Array(3);
            report[0] = zulu;
            zulu = _closure1_slot5;
            report[1] = zulu;
            zulu = _closure1_slot7;
            report[2] = zulu;
            zulu = new Array(1);
            zulu[0] = mike;
            mike = function() {
                _fun00003: for(var _fun00004_ip = 0; ; ) switch(_fun00004_ip) {
 0:
                    tango = _closure1_slot6;
                    zulu = tango.getRelationships;
                    report = zulu.bind(tango)();
                    tango = _closure1_slot0;
                    zulu = _closure1_slot2;
                    options = 11;
                    zulu = zulu[options];
                    golf = undefined;
                    tango = tango.bind(golf)(zulu);
                    zulu = tango.getPendingRelationshipIds;
                    zulu = zulu.bind(tango)(report);
                    oscar = zulu.pendingIncomingIds;
                    tango = _closure1_slot5;
                    zulu = tango.getGameRelationships;
                    report = zulu.bind(tango)();
                    zulu = _closure2_slot0;
                    if(zulu) { _fun00004_ip = 88; continue _fun00003 }
 82:
                    tango = new Array(0);
                    _fun00004_ip = 116; continue _fun00003;
 88:
                    zulu = _closure1_slot0;
                    entity = _closure1_slot2;
                    entity = entity[options];
                    zulu = zulu.bind(golf)(entity);
                    entity = zulu.getPendingGameRelationshipUserIds;
                    tango = entity.bind(zulu)(report);
 116:
                    entity = new Array(0);
                    var _closure3_slot0 = entity;
                    zulu = global;
                    zulu = zulu.Set;
                    report = zulu.prototype;
                    report = Object.create(report, {constructor: {value: zulu}});
                    offset = report;
                    zulu = new offset[zulu](verify);
                    zulu = zulu instanceof Object ? zulu : report;
                    var _closure3_slot1 = zulu;
                    zulu = function(argFoo) { // Original name: maybeAddToUsers
                        _fun00005: for(var _fun00006_ip = 0; ; ) switch(_fun00006_ip) {
 0:
                            zulu = argFoo;
                            mike = _closure1_slot7;
                            entity = mike.getUser;
                            report = entity.bind(mike)(zulu);
                            entity = null;
                            entity = entity == report;
                            if(entity) { _fun00006_ip = 47; continue _fun00005 }
 30:
                            tango = _closure3_slot1;
                            mike = tango.has;
                            entity = mike.bind(tango)(zulu);
 47:
                            if(entity) { _fun00006_ip = 81; continue _fun00005 }
 50:
                            tango = _closure3_slot0;
                            mike = tango.push;
                            mike = mike.bind(tango)(report);
                            mike = _closure3_slot1;
                            entity = mike.add;
                            entity = entity.bind(mike)(zulu);
 81:
                            entity = undefined;
                            return entity;
                        }
                    };
                    var _closure3_slot2 = zulu;
                    report = oscar.forEach;
                    zulu = function(argFoo) {
                        zulu = _closure3_slot2;
                        mike = undefined;
                        entity = argFoo;
                        entity = zulu.bind(mike)(entity);
                        return entity;
                    };
                    zulu = report.bind(oscar)(zulu);
                    zulu = tango.forEach;
                    mike = function(argFoo) {
                        zulu = _closure3_slot2;
                        mike = undefined;
                        entity = argFoo;
                        entity = zulu.bind(mike)(entity);
                        return entity;
                    };
                    mike = zulu.bind(tango)(mike);
                    return entity;
                }
            };
            golf = golf.bind(options)(report, mike, zulu);
            var _closure2_slot1 = golf;
            report = _closure1_slot3;
            options = report.useCallback;
            zulu = function() {
                _fun00007: for(var _fun00008_ip = 0; ; ) switch(_fun00008_ip) {
 0:
                    zulu = _closure1_slot0;
                    mike = _closure1_slot2;
                    entity = 12;
                    mike = mike[entity];
                    entity = undefined;
                    zulu = zulu.bind(entity)(mike);
                    mike = zulu.getRootNavigationRef;
                    zulu = mike.bind(zulu)();
                    tango = null;
                    mike = tango == zulu;
                    report = zulu;
                    if(mike) { _fun00008_ip = 59; continue _fun00007 }
 47:
                    zulu = zulu.current;
                    mike = tango == zulu;
                    report = zulu;
 59:
                    if(mike) { _fun00008_ip = 105; continue _fun00007 }
 62:
                    tango = report.navigate;
                    zulu = {};
                    mike = 'requests';
                    zulu['screen'] = mike;
                    mike = {};
                    oscar = 'modal';
                    mike['presentation'] = oscar;
                    zulu['params'] = mike;
                    mike = 'friends';
                    mike = tango.bind(report)(mike, zulu);
 105:
                    return entity;
                }
            };
            mike = new Array(0);
            verify = options.bind(report)(zulu, mike);
            zulu = report.useMemo;
            mike = new Array(1);
            mike[0] = golf;
            entity = function() {
                _fun00009: for(var _fun00010_ip = 0; ; ) switch(_fun00010_ip) {
 0:
                    entity = _closure2_slot1;
                    mike = entity.length;
                    entity = '';
                    offset = 0;
                    if(!(offset !== mike)) { _fun00010_ip = 423; continue _fun00009 }
 25:
                    mike = _closure2_slot1;
                    mike = mike.length;
                    romeo = 1;
                    if(!(romeo !== mike)) { _fun00010_ip = 318; continue _fun00009 }
 44:
                    mike = _closure2_slot1;
                    zulu = mike.length;
                    mike = 2;
                    if(!(mike !== zulu)) { _fun00010_ip = 180; continue _fun00009 }
 60:
                    zulu = _closure1_slot0;
                    yankee = _closure1_slot2;
                    mike = 13;
                    tango = yankee[mike];
                    verify = undefined;
                    tango = zulu.bind(verify)(tango);
                    report = tango.intl;
                    tango = report.format;
                    mike = yankee[mike];
                    mike = zulu.bind(verify)(mike);
                    mike = mike.t;
                    zulu = mike.bepRxM;
                    mike = {};
                    options = _closure1_slot1;
                    oscar = 14;
                    oscar = yankee[oscar];
                    yankee = options.bind(verify)(oscar);
                    verify = yankee.getName;
                    oscar = _closure2_slot1;
                    options = oscar[offset];
                    options = verify.bind(yankee)(options);
                    mike['username'] = options;
                    oscar = oscar.length;
                    oscar = oscar - romeo;
                    mike['count'] = oscar;
                    mike = tango.bind(report)(zulu, mike);
                    _fun00010_ip = 316; continue _fun00009;
 180:
                    tango = _closure1_slot0;
                    backup = _closure1_slot2;
                    zulu = 13;
                    report = backup[zulu];
                    foxtrot = undefined;
                    report = tango.bind(foxtrot)(report);
                    oscar = report.intl;
                    report = oscar.format;
                    zulu = backup[zulu];
                    zulu = tango.bind(foxtrot)(zulu);
                    zulu = zulu.t;
                    tango = zulu.Qjf94+;
                    zulu = {};
                    yankee = _closure1_slot1;
                    verify = 14;
                    options = backup[verify];
                    output = yankee.bind(foxtrot)(options);
                    sizing = output.getName;
                    options = _closure2_slot1;
                    kilo = options[offset];
                    kilo = sizing.bind(output)(kilo);
                    zulu['username1'] = kilo;
                    verify = backup[verify];
                    yankee = yankee.bind(foxtrot)(verify);
                    verify = yankee.getName;
                    options = options[romeo];
                    options = verify.bind(yankee)(options);
                    zulu['username2'] = options;
                    mike = report.bind(oscar)(tango, zulu);
 316:
                    _fun00010_ip = 420; continue _fun00009;
 318:
                    tango = _closure1_slot0;
                    romeo = _closure1_slot2;
                    zulu = 13;
                    report = romeo[zulu];
                    yankee = undefined;
                    report = tango.bind(yankee)(report);
                    oscar = report.intl;
                    report = oscar.format;
                    zulu = romeo[zulu];
                    zulu = tango.bind(yankee)(zulu);
                    zulu = zulu.t;
                    tango = zulu.oWPCFB;
                    zulu = {};
                    verify = _closure1_slot1;
                    options = 14;
                    options = romeo[options];
                    verify = verify.bind(yankee)(options);
                    options = verify.getName;
                    golf = _closure2_slot1;
                    golf = golf[offset];
                    golf = options.bind(verify)(golf);
                    zulu['username'] = golf;
                    mike = report.bind(oscar)(tango, zulu);
 420:
                    entity = mike;
 423:
                    return entity;
                }
            };
            source = zulu.bind(report)(entity, mike);
            entity = 15;
            entity = romeo[entity];
            zulu = offset.bind(tango)(entity);
            mike = zulu.useNumFriendRequestsForBadging;
            entity = 'Message Guild Item';
            output = mike.bind(zulu)(entity);
            zulu = _closure1_slot9;
            mike = _closure1_slot4;
            entity = {};
            report = {};
            report['height'] = kilo;
            entity['style'] = report;
            report = false;
            entity['collapsable'] = report;
            options = _closure1_slot8;
            golf = _closure1_slot11;
            report = {};
            golf = options.bind(tango)(golf, report);
            report = new Array(3);
            report[0] = golf;
            golf = 16;
            golf = romeo[golf];
            golf = offset.bind(tango)(golf);
            options = golf.PressableHighlight;
            golf = {};
            golf['onPress'] = verify;
            verify = foxtrot.rowActive;
            verify = verify.backgroundColor;
            golf['underlayColor'] = verify;
            yankee = foxtrot.pressable;
            verify = new Array(2);
            verify[0] = yankee;
            yankee = {};
            backup = 8;
            backup = romeo[backup];
            backup = offset.bind(tango)(backup);
            sizing = backup.MESSAGES_ITEM_SEPERATOR_HEIGHT;
            backup = 2;
            backup = backup * sizing;
            backup = kilo - backup;
            yankee['height'] = backup;
            verify[1] = yankee;
            golf['style'] = verify;
            yankee = _closure1_slot8;
            verify = 17;
            verify = romeo[verify];
            verify = offset.bind(tango)(verify);
            offset = verify.FriendsIcon;
            verify = {};
            romeo = 'md';
            verify['size'] = romeo;
            romeo = 0;
            backup = output > romeo;
            romeo = 'interactive-muted';
            if(!backup) { _fun00002_ip = 424; continue _fun00001 }
 418:
            romeo = 'interactive-active';
 424:
            verify['color'] = romeo;
            romeo = foxtrot.icon;
            verify['style'] = romeo;
            offset = yankee.bind(tango)(offset, verify);
            verify = new Array(4);
            verify[0] = offset;
            backup = _closure1_slot9;
            romeo = _closure1_slot4;
            offset = {};
            yankee = foxtrot.info;
            offset['style'] = yankee;
            update = _closure1_slot8;
            yankee = _closure1_slot0;
            sizing = _closure1_slot2;
            result = 18;
            kilo = sizing[result];
            kilo = yankee.bind(tango)(kilo);
            echo = kilo.Text;
            kilo = {'variant': 'text-md/semibold', 'color': 'header-primary'};
            control = 13;
            vacuum = sizing[control];
            vacuum = yankee.bind(tango)(vacuum);
            sequence = vacuum.intl;
            vacuum = sequence.string;
            control = sizing[control];
            control = yankee.bind(tango)(control);
            control = control.t;
            control = control.jdr4sL;
            control = vacuum.bind(sequence)(control);
            kilo['children'] = control;
            echo = update.bind(tango)(echo, kilo);
            kilo = new Array(2);
            kilo[0] = echo;
            update = _closure1_slot8;
            result = sizing[result];
            result = yankee.bind(tango)(result);
            echo = result.Text;
            result = {'variant': 'text-sm/normal', 'color': 'header-secondary'};
            result['children'] = source;
            result = update.bind(tango)(echo, result);
            kilo[1] = result;
            offset['children'] = kilo;
            offset = backup.bind(tango)(romeo, offset);
            verify[1] = offset;
            backup = _closure1_slot8;
            kilo = _closure1_slot1;
            offset = 19;
            offset = sizing[offset];
            romeo = kilo.bind(tango)(offset);
            offset = {};
            offset['value'] = output;
            offset = backup.bind(tango)(romeo, offset);
            verify[2] = offset;
            romeo = _closure1_slot8;
            offset = 20;
            offset = sizing[offset];
            offset = yankee.bind(tango)(offset);
            yankee = offset.ChevronLargeRightIcon;
            offset = {};
            foxtrot = foxtrot.chevronIcon;
            foxtrot = foxtrot.backgroundColor;
            offset['color'] = foxtrot;
            foxtrot = {};
            backup = 7;
            backup = sizing[backup];
            backup = kilo.bind(tango)(backup);
            backup = backup.spacing;
            backup = backup.PX_8;
            foxtrot['marginLeft'] = backup;
            offset['style'] = foxtrot;
            foxtrot = 'sm';
            offset['size'] = foxtrot;
            offset = romeo.bind(tango)(yankee, offset);
            verify[3] = offset;
            golf['children'] = verify;
            golf = zulu.bind(tango)(options, golf);
            report[1] = golf;
            options = _closure1_slot8;
            golf = _closure1_slot11;
            oscar = {};
            oscar = options.bind(tango)(golf, oscar);
            report[2] = oscar;
            entity['children'] = report;
            entity = zulu.bind(tango)(mike, entity);
            return entity;
        }
    };
    zulu['default'] = mike;
    return entity;
})();