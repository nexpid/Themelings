// app/modules/main_tabs_v2/native/tabs/messages/items/MessageItemFriendRequests.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    report = argBar;
    romeon = argBaz;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    var _closure1_slot1 = romeon;
    var _closure1_slot2 = oscard;
    entity = function() { // Original name: IncomingRequestsRowSeparator
        entity = _closure1_slot11;
        tangon = undefined;
        option = entity.bind(tangon)();
        zuuluu = _closure1_slot9;
        michal = _closure1_slot4;
        entity = {};
        oscard = option.separatorContainer;
        entity['style'] = oscard;
        golfie = _closure1_slot9;
        oscard = _closure1_slot4;
        report = {};
        option = option.separator;
        report['style'] = option;
        report = golfie.bind(tangon)(oscard, report);
        entity['children'] = report;
        entity = zuuluu.bind(tangon)(michal, entity);
        return entity;
    };
    var _closure1_slot12 = entity;
    entity = global;
    option = entity.Object;
    golfie = option.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(option)(zuuluu, entity, tangon);
    entity = 0;
    golfie = oscard[entity];
    tangon = argCor;
    entity = undefined;
    tangon = tangon.bind(entity)(golfie);
    var _closure1_slot3 = tangon;
    tangon = 1;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    golfie = tangon.View;
    var _closure1_slot4 = golfie;
    offset = tangon.StyleSheet;
    tangon = 2;
    tangon = oscard[tangon];
    tangon = romeon.bind(entity)(tangon);
    var _closure1_slot5 = tangon;
    tangon = 3;
    tangon = oscard[tangon];
    tangon = romeon.bind(entity)(tangon);
    var _closure1_slot6 = tangon;
    tangon = 4;
    tangon = oscard[tangon];
    tangon = romeon.bind(entity)(tangon);
    var _closure1_slot7 = tangon;
    tangon = 5;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.RelationshipTypes;
    var _closure1_slot8 = tangon;
    tangon = 6;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    golfie = tangon.jsx;
    var _closure1_slot9 = golfie;
    tangon = tangon.jsxs;
    var _closure1_slot10 = tangon;
    tangon = 7;
    tangon = oscard[tangon];
    option = report.bind(entity)(tangon);
    golfie = option.createStyles;
    tangon = {};
    verify = {};
    yankee = 8;
    foxtra = oscard[yankee];
    foxtra = romeon.bind(entity)(foxtra);
    foxtra = foxtra.spacing;
    foxtra = foxtra.PX_4;
    verify['marginRight'] = foxtra;
    foxtra = oscard[yankee];
    foxtra = romeon.bind(entity)(foxtra);
    foxtra = foxtra.spacing;
    foxtra = foxtra.PX_8;
    verify['marginLeft'] = foxtra;
    foxtra = oscard[yankee];
    foxtra = romeon.bind(entity)(foxtra);
    foxtra = foxtra.spacing;
    foxtra = foxtra.PX_8;
    verify['paddingHorizontal'] = foxtra;
    foxtra = oscard[yankee];
    foxtra = romeon.bind(entity)(foxtra);
    foxtra = foxtra.radii;
    foxtra = foxtra.md;
    verify['borderRadius'] = foxtra;
    foxtra = 'center';
    verify['justifyContent'] = foxtra;
    backup = 'row';
    verify['flexDirection'] = backup;
    verify['alignItems'] = foxtra;
    tangon['pressable'] = verify;
    verify = {};
    foxtra = oscard[yankee];
    foxtra = romeon.bind(entity)(foxtra);
    foxtra = foxtra.colors;
    foxtra = foxtra.BACKGROUND_MODIFIER_ACTIVE;
    verify['backgroundColor'] = foxtra;
    tangon['rowActive'] = verify;
    verify = {'marginHorizontal': null, 'flexGrow': 1, 'flexShrink': 1};
    foxtra = oscard[yankee];
    foxtra = romeon.bind(entity)(foxtra);
    foxtra = foxtra.spacing;
    foxtra = foxtra.PX_8;
    verify['marginHorizontal'] = foxtra;
    tangon['info'] = verify;
    verify = {};
    foxtra = oscard[yankee];
    foxtra = romeon.bind(entity)(foxtra);
    foxtra = foxtra.spacing;
    foxtra = foxtra.PX_4;
    verify['marginHorizontal'] = foxtra;
    tangon['icon'] = verify;
    verify = {};
    foxtra = oscard[yankee];
    foxtra = romeon.bind(entity)(foxtra);
    foxtra = foxtra.colors;
    foxtra = foxtra.REDESIGN_BUTTON_TERTIARY_TEXT;
    verify['backgroundColor'] = foxtra;
    tangon['chevronIcon'] = verify;
    verify = {'height': null, 'flex': 1, 'justifyContent': 'center'};
    foxtra = 9;
    foxtra = oscard[foxtra];
    foxtra = report.bind(entity)(foxtra);
    foxtra = foxtra.MESSAGES_ITEM_SEPERATOR_HEIGHT;
    verify['height'] = foxtra;
    tangon['separatorContainer'] = verify;
    verify = {};
    yankee = oscard[yankee];
    yankee = romeon.bind(entity)(yankee);
    yankee = yankee.colors;
    yankee = yankee.BORDER_SUBTLE;
    verify['backgroundColor'] = yankee;
    offset = offset.hairlineWidth;
    verify['height'] = offset;
    tangon['separator'] = verify;
    tangon = golfie.bind(option)(tangon);
    var _closure1_slot11 = tangon;
    tangon = 22;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/main_tabs_v2/native/tabs/messages/items/MessageItemFriendRequests.tsx';
    tangon = report.bind(oscard)(tangon);
    michal = function(argFoo) { // Original name: MessagesItemIncomingRequestsRow
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            michal = argFoo;
            kiloes = michal.height;
            michal = _closure1_slot11;
            tangon = undefined;
            foxtra = michal.bind(tangon)();
            offset = _closure1_slot0;
            romeon = _closure1_slot2;
            michal = 10;
            michal = romeon[michal];
            report = offset.bind(tangon)(michal);
            zuuluu = report.useIsFriendTiersUIEnabled;
            michal = {};
            golfie = 'MessagesItemIncomingRequestsRow';
            michal['location'] = golfie;
            michal = zuuluu.bind(report)(michal);
            var _closure2_slot0 = michal;
            zuuluu = 11;
            zuuluu = romeon[zuuluu];
            option = offset.bind(tangon)(zuuluu);
            golfie = option.useStateFromStoresArray;
            zuuluu = _closure1_slot6;
            report = new Array(3);
            report[0] = zuuluu;
            zuuluu = _closure1_slot5;
            report[1] = zuuluu;
            zuuluu = _closure1_slot7;
            report[2] = zuuluu;
            zuuluu = new Array(1);
            zuuluu[0] = michal;
            michal = function() {
                _fun00003: for(var _fun00004_ip = 0; ; ) switch(_fun00004_ip) {
 0:
                    tangon = _closure1_slot6;
                    zuuluu = tangon.getRelationships;
                    report = zuuluu.bind(tangon)();
                    oscard = _closure1_slot0;
                    tangon = _closure1_slot2;
                    zuuluu = 12;
                    tangon = tangon[zuuluu];
                    zuuluu = undefined;
                    tangon = oscard.bind(zuuluu)(tangon);
                    zuuluu = tangon.getPendingRelationshipIds;
                    zuuluu = zuuluu.bind(tangon)(report);
                    oscard = zuuluu.pendingIncomingIds;
                    tangon = _closure1_slot5;
                    zuuluu = tangon.getGameRelationshipsByType;
                    entity = _closure1_slot8;
                    entity = entity.PENDING_INCOMING;
                    tangon = zuuluu.bind(tangon)(entity);
                    entity = new Array(0);
                    var _closure3_slot0 = entity;
                    zuuluu = global;
                    zuuluu = zuuluu.Set;
                    report = zuuluu.prototype;
                    report = Object.create(report, {constructor: {value: zuuluu}});
                    option = report;
                    zuuluu = new option[zuuluu](golfie);
                    zuuluu = zuuluu instanceof Object ? zuuluu : report;
                    var _closure3_slot1 = zuuluu;
                    zuuluu = function(argFoo) { // Original name: maybeAddToUsers
                        _fun00005: for(var _fun00006_ip = 0; ; ) switch(_fun00006_ip) {
 0:
                            zuuluu = argFoo;
                            michal = _closure1_slot7;
                            entity = michal.getUser;
                            report = entity.bind(michal)(zuuluu);
                            entity = null;
                            entity = entity == report;
                            if(entity) { _fun00006_ip = 47; continue _fun00005 }
 30:
                            tangon = _closure3_slot1;
                            michal = tangon.has;
                            entity = michal.bind(tangon)(zuuluu);
 47:
                            if(entity) { _fun00006_ip = 81; continue _fun00005 }
 50:
                            tangon = _closure3_slot0;
                            michal = tangon.push;
                            michal = michal.bind(tangon)(report);
                            michal = _closure3_slot1;
                            entity = michal.add;
                            entity = entity.bind(michal)(zuuluu);
 81:
                            entity = undefined;
                            return entity;
                        }
                    };
                    var _closure3_slot2 = zuuluu;
                    report = oscard.forEach;
                    zuuluu = function(argFoo) {
                        zuuluu = _closure3_slot2;
                        entity = undefined;
                        michal = argFoo;
                        michal = zuuluu.bind(entity)(michal);
                        return entity;
                    };
                    zuuluu = report.bind(oscard)(zuuluu);
                    zuuluu = _closure2_slot0;
                    if(!zuuluu) { _fun00004_ip = 178; continue _fun00003 }
 161:
                    zuuluu = tangon.forEach;
                    michal = function(argFoo) {
                        entity = argFoo;
                        zuuluu = entity.id;
                        michal = _closure3_slot2;
                        entity = undefined;
                        michal = michal.bind(entity)(zuuluu);
                        return entity;
                    };
                    michal = zuuluu.bind(tangon)(michal);
 178:
                    return entity;
                }
            };
            golfie = golfie.bind(option)(report, michal, zuuluu);
            var _closure2_slot1 = golfie;
            report = _closure1_slot3;
            option = report.useCallback;
            zuuluu = function() {
                _fun00007: for(var _fun00008_ip = 0; ; ) switch(_fun00008_ip) {
 0:
                    zuuluu = _closure1_slot0;
                    michal = _closure1_slot2;
                    entity = 13;
                    michal = michal[entity];
                    entity = undefined;
                    zuuluu = zuuluu.bind(entity)(michal);
                    michal = zuuluu.getRootNavigationRef;
                    zuuluu = michal.bind(zuuluu)();
                    tangon = null;
                    michal = tangon == zuuluu;
                    report = zuuluu;
                    if(michal) { _fun00008_ip = 59; continue _fun00007 }
 47:
                    zuuluu = zuuluu.current;
                    michal = tangon == zuuluu;
                    report = zuuluu;
 59:
                    if(michal) { _fun00008_ip = 105; continue _fun00007 }
 62:
                    tangon = report.navigate;
                    zuuluu = {};
                    michal = 'requests';
                    zuuluu['screen'] = michal;
                    michal = {};
                    oscard = 'modal';
                    michal['presentation'] = oscard;
                    zuuluu['params'] = michal;
                    michal = 'friends';
                    michal = tangon.bind(report)(michal, zuuluu);
 105:
                    return entity;
                }
            };
            michal = new Array(0);
            verify = option.bind(report)(zuuluu, michal);
            zuuluu = report.useMemo;
            michal = new Array(1);
            michal[0] = golfie;
            entity = function() {
                _fun00009: for(var _fun00010_ip = 0; ; ) switch(_fun00010_ip) {
 0:
                    entity = _closure2_slot1;
                    michal = entity.length;
                    entity = '';
                    offset = 0;
                    if(!(offset !== michal)) { _fun00010_ip = 432; continue _fun00009 }
 25:
                    michal = _closure2_slot1;
                    michal = michal.length;
                    romeon = 1;
                    if(!(romeon !== michal)) { _fun00010_ip = 325; continue _fun00009 }
 44:
                    michal = _closure2_slot1;
                    zuuluu = michal.length;
                    michal = 2;
                    if(!(michal !== zuuluu)) { _fun00010_ip = 185; continue _fun00009 }
 63:
                    zuuluu = _closure1_slot0;
                    yankee = _closure1_slot2;
                    michal = 14;
                    tangon = yankee[michal];
                    verify = undefined;
                    tangon = zuuluu.bind(verify)(tangon);
                    report = tangon.intl;
                    tangon = report.format;
                    michal = yankee[michal];
                    michal = zuuluu.bind(verify)(michal);
                    michal = michal.t;
                    zuuluu = michal.bepRxM;
                    michal = {};
                    option = _closure1_slot1;
                    oscard = 15;
                    oscard = yankee[oscard];
                    yankee = option.bind(verify)(oscard);
                    verify = yankee.getName;
                    oscard = _closure2_slot1;
                    option = oscard[offset];
                    option = verify.bind(yankee)(option);
                    michal['username'] = option;
                    oscard = oscard.length;
                    oscard = oscard - romeon;
                    michal['count'] = oscard;
                    michal = tangon.bind(report)(zuuluu, michal);
                    _fun00010_ip = 323; continue _fun00009;
 185:
                    tangon = _closure1_slot0;
                    backup = _closure1_slot2;
                    zuuluu = 14;
                    report = backup[zuuluu];
                    foxtra = undefined;
                    report = tangon.bind(foxtra)(report);
                    oscard = report.intl;
                    report = oscard.format;
                    zuuluu = backup[zuuluu];
                    zuuluu = tangon.bind(foxtra)(zuuluu);
                    zuuluu = zuuluu.t;
                    tangon = zuuluu.Qjf94+;
                    zuuluu = {};
                    yankee = _closure1_slot1;
                    verify = 15;
                    option = backup[verify];
                    output = yankee.bind(foxtra)(option);
                    sizing = output.getName;
                    option = _closure2_slot1;
                    kiloes = option[offset];
                    kiloes = sizing.bind(output)(kiloes);
                    zuuluu['username1'] = kiloes;
                    verify = backup[verify];
                    yankee = yankee.bind(foxtra)(verify);
                    verify = yankee.getName;
                    option = option[romeon];
                    option = verify.bind(yankee)(option);
                    zuuluu['username2'] = option;
                    michal = report.bind(oscard)(tangon, zuuluu);
 323:
                    _fun00010_ip = 429; continue _fun00009;
 325:
                    tangon = _closure1_slot0;
                    romeon = _closure1_slot2;
                    zuuluu = 14;
                    report = romeon[zuuluu];
                    yankee = undefined;
                    report = tangon.bind(yankee)(report);
                    oscard = report.intl;
                    report = oscard.format;
                    zuuluu = romeon[zuuluu];
                    zuuluu = tangon.bind(yankee)(zuuluu);
                    zuuluu = zuuluu.t;
                    tangon = zuuluu.oWPCFB;
                    zuuluu = {};
                    verify = _closure1_slot1;
                    option = 15;
                    option = romeon[option];
                    verify = verify.bind(yankee)(option);
                    option = verify.getName;
                    golfie = _closure2_slot1;
                    golfie = golfie[offset];
                    golfie = option.bind(verify)(golfie);
                    zuuluu['username'] = golfie;
                    michal = report.bind(oscard)(tangon, zuuluu);
 429:
                    entity = michal;
 432:
                    return entity;
                }
            };
            source = zuuluu.bind(report)(entity, michal);
            entity = 16;
            entity = romeon[entity];
            zuuluu = offset.bind(tangon)(entity);
            michal = zuuluu.useNumFriendRequestsForBadging;
            entity = 'Message Guild Item';
            output = michal.bind(zuuluu)(entity);
            zuuluu = _closure1_slot10;
            michal = _closure1_slot4;
            entity = {};
            report = {};
            report['height'] = kiloes;
            entity['style'] = report;
            report = false;
            entity['collapsable'] = report;
            option = _closure1_slot9;
            golfie = _closure1_slot12;
            report = {};
            golfie = option.bind(tangon)(golfie, report);
            report = new Array(3);
            report[0] = golfie;
            golfie = 17;
            golfie = romeon[golfie];
            golfie = offset.bind(tangon)(golfie);
            option = golfie.PressableHighlight;
            golfie = {};
            golfie['onPress'] = verify;
            verify = foxtra.rowActive;
            verify = verify.backgroundColor;
            golfie['underlayColor'] = verify;
            yankee = foxtra.pressable;
            verify = new Array(2);
            verify[0] = yankee;
            yankee = {};
            backup = 9;
            backup = romeon[backup];
            backup = offset.bind(tangon)(backup);
            sizing = backup.MESSAGES_ITEM_SEPERATOR_HEIGHT;
            backup = 2;
            backup = backup * sizing;
            backup = kiloes - backup;
            yankee['height'] = backup;
            verify[1] = yankee;
            golfie['style'] = verify;
            yankee = _closure1_slot9;
            verify = 18;
            verify = romeon[verify];
            verify = offset.bind(tangon)(verify);
            offset = verify.FriendsIcon;
            verify = {};
            romeon = 'md';
            verify['size'] = romeon;
            romeon = 0;
            backup = output > romeon;
            romeon = 'interactive-muted';
            if(!backup) { _fun00002_ip = 424; continue _fun00001 }
 418:
            romeon = 'interactive-active';
 424:
            verify['color'] = romeon;
            romeon = foxtra.icon;
            verify['style'] = romeon;
            offset = yankee.bind(tangon)(offset, verify);
            verify = new Array(4);
            verify[0] = offset;
            backup = _closure1_slot10;
            romeon = _closure1_slot4;
            offset = {};
            yankee = foxtra.info;
            offset['style'] = yankee;
            update = _closure1_slot9;
            yankee = _closure1_slot0;
            sizing = _closure1_slot2;
            result = 19;
            kiloes = sizing[result];
            kiloes = yankee.bind(tangon)(kiloes);
            echoed = kiloes.Text;
            kiloes = {'variant': 'text-md/semibold', 'color': 'header-primary'};
            ctrled = 14;
            vacuum = sizing[ctrled];
            vacuum = yankee.bind(tangon)(vacuum);
            sequen = vacuum.intl;
            vacuum = sequen.string;
            ctrled = sizing[ctrled];
            ctrled = yankee.bind(tangon)(ctrled);
            ctrled = ctrled.t;
            ctrled = ctrled.jdr4sL;
            ctrled = vacuum.bind(sequen)(ctrled);
            kiloes['children'] = ctrled;
            echoed = update.bind(tangon)(echoed, kiloes);
            kiloes = new Array(2);
            kiloes[0] = echoed;
            update = _closure1_slot9;
            result = sizing[result];
            result = yankee.bind(tangon)(result);
            echoed = result.Text;
            result = {'variant': 'text-sm/normal', 'color': 'header-secondary', 'lineClamp': 1};
            result['children'] = source;
            result = update.bind(tangon)(echoed, result);
            kiloes[1] = result;
            offset['children'] = kiloes;
            offset = backup.bind(tangon)(romeon, offset);
            verify[1] = offset;
            backup = _closure1_slot9;
            kiloes = _closure1_slot1;
            offset = 20;
            offset = sizing[offset];
            romeon = kiloes.bind(tangon)(offset);
            offset = {};
            offset['value'] = output;
            offset = backup.bind(tangon)(romeon, offset);
            verify[2] = offset;
            romeon = _closure1_slot9;
            offset = 21;
            offset = sizing[offset];
            offset = yankee.bind(tangon)(offset);
            yankee = offset.ChevronLargeRightIcon;
            offset = {};
            foxtra = foxtra.chevronIcon;
            foxtra = foxtra.backgroundColor;
            offset['color'] = foxtra;
            foxtra = {};
            backup = 8;
            backup = sizing[backup];
            backup = kiloes.bind(tangon)(backup);
            backup = backup.spacing;
            backup = backup.PX_8;
            foxtra['marginLeft'] = backup;
            offset['style'] = foxtra;
            foxtra = 'sm';
            offset['size'] = foxtra;
            offset = romeon.bind(tangon)(yankee, offset);
            verify[3] = offset;
            golfie['children'] = verify;
            golfie = zuuluu.bind(tangon)(option, golfie);
            report[1] = golfie;
            option = _closure1_slot9;
            golfie = _closure1_slot12;
            oscard = {};
            oscard = option.bind(tangon)(golfie, oscard);
            report[2] = oscard;
            entity['children'] = report;
            entity = zuuluu.bind(tangon)(michal, entity);
            return entity;
        }
    };
    zuuluu['default'] = michal;
    return entity;
})();