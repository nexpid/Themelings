// app/modules/main_tabs_v2/native/tabs/messages/items/MessagesItemSuggestedFriend.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    oscard = argBar;
    foxtra = argBaz;
    zuuluu = argFre;
    golfie = argPlu;
    var _closure1_slot0 = oscard;
    var _closure1_slot1 = foxtra;
    var _closure1_slot2 = golfie;
    entity = global;
    option = entity.Object;
    report = option.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = report.bind(option)(zuuluu, entity, tangon);
    entity = 0;
    tangon = golfie[entity];
    entity = undefined;
    tangon = foxtra.bind(entity)(tangon);
    var _closure1_slot3 = tangon;
    tangon = 1;
    report = golfie[tangon];
    tangon = argCor;
    option = tangon.bind(entity)(report);
    var _closure1_slot4 = option;
    tangon = 2;
    tangon = golfie[tangon];
    tangon = oscard.bind(entity)(tangon);
    tangon = tangon.View;
    var _closure1_slot5 = tangon;
    tangon = 3;
    tangon = golfie[tangon];
    tangon = foxtra.bind(entity)(tangon);
    var _closure1_slot6 = tangon;
    tangon = 4;
    tangon = golfie[tangon];
    tangon = oscard.bind(entity)(tangon);
    report = tangon.AnalyticEvents;
    var _closure1_slot7 = report;
    tangon = tangon.RelationshipTypes;
    var _closure1_slot8 = tangon;
    tangon = 5;
    report = golfie[tangon];
    report = oscard.bind(entity)(report);
    report = report.jsx;
    var _closure1_slot9 = report;
    report = golfie[tangon];
    report = oscard.bind(entity)(report);
    report = report.jsxs;
    var _closure1_slot10 = report;
    tangon = golfie[tangon];
    tangon = oscard.bind(entity)(tangon);
    tangon = tangon.Fragment;
    var _closure1_slot11 = tangon;
    tangon = 6;
    tangon = golfie[tangon];
    verify = oscard.bind(entity)(tangon);
    report = verify.createStyles;
    tangon = {};
    offset = {};
    yankee = 7;
    romeon = golfie[yankee];
    romeon = foxtra.bind(entity)(romeon);
    romeon = romeon.spacing;
    romeon = romeon.PX_8;
    offset['paddingHorizontal'] = romeon;
    tangon['container'] = offset;
    offset = {'borderRadius': null, 'flexDirection': 'row', 'alignItems': 'center'};
    romeon = golfie[yankee];
    romeon = foxtra.bind(entity)(romeon);
    romeon = romeon.radii;
    romeon = romeon.md;
    offset['borderRadius'] = romeon;
    romeon = golfie[yankee];
    romeon = foxtra.bind(entity)(romeon);
    romeon = romeon.spacing;
    romeon = romeon.PX_8;
    offset['padding'] = romeon;
    tangon['pressable'] = offset;
    offset = {};
    romeon = golfie[yankee];
    romeon = foxtra.bind(entity)(romeon);
    romeon = romeon.colors;
    romeon = romeon.BACKGROUND_MODIFIER_ACTIVE;
    offset['backgroundColor'] = romeon;
    tangon['rowActive'] = offset;
    offset = {'marginRight': null, 'flexDirection': 'column', 'alignSelf': 'center', 'overflow': 'hidden', 'flexGrow': 1, 'flexShrink': 1};
    romeon = golfie[yankee];
    romeon = foxtra.bind(entity)(romeon);
    romeon = romeon.spacing;
    romeon = romeon.PX_8;
    offset['marginRight'] = romeon;
    tangon['textContainer'] = offset;
    offset = {};
    romeon = golfie[yankee];
    romeon = foxtra.bind(entity)(romeon);
    romeon = romeon.spacing;
    romeon = romeon.PX_8;
    offset['marginRight'] = romeon;
    tangon['avatar'] = offset;
    offset = {};
    romeon = 0.8;
    offset['opacity'] = romeon;
    tangon['subtitle'] = offset;
    offset = {};
    romeon = golfie[yankee];
    romeon = foxtra.bind(entity)(romeon);
    romeon = romeon.colors;
    romeon = romeon.REDESIGN_BUTTON_SECONDARY_BACKGROUND;
    offset['backgroundColor'] = romeon;
    romeon = golfie[yankee];
    romeon = foxtra.bind(entity)(romeon);
    romeon = romeon.radii;
    romeon = romeon.lg;
    offset['borderRadius'] = romeon;
    romeon = 12;
    offset['paddingHorizontal'] = romeon;
    offset['paddingVertical'] = yankee;
    tangon['button'] = offset;
    tangon = report.bind(verify)(tangon);
    var _closure1_slot12 = tangon;
    report = option.memo;
    tangon = function(argFoo) { // Original name: MessagesItemSuggestedFriend
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            zuuluu = argFoo;
            michal = zuuluu.height;
            var _closure2_slot0 = michal;
            oscard = zuuluu.onAddFriendSuggestions;
            var _closure2_slot1 = oscard;
            backup = zuuluu.suggestedFriend;
            var _closure2_slot2 = backup;
            zuuluu = _closure1_slot12;
            tangon = undefined;
            foxtra = zuuluu.bind(tangon)();
            var _closure2_slot3 = foxtra;
            report = _closure1_slot4;
            golfie = report.useMemo;
            zuuluu = new Array(2);
            zuuluu[0] = foxtra;
            zuuluu[1] = michal;
            michal = function() {
                michal = _closure2_slot3;
                tangon = michal.container;
                entity = new Array(3);
                entity[0] = tangon;
                michal = michal.pressable;
                entity[1] = michal;
                michal = {};
                zuuluu = _closure2_slot0;
                michal['height'] = zuuluu;
                entity[2] = michal;
                return entity;
            };
            yankee = golfie.bind(report)(michal, zuuluu);
            golfie = report.useCallback;
            zuuluu = new Array(1);
            zuuluu[0] = backup;
            michal = function() {
                tangon = _closure1_slot0;
                michal = _closure1_slot2;
                entity = 10;
                zuuluu = michal[entity];
                entity = undefined;
                tangon = tangon.bind(entity)(zuuluu);
                zuuluu = 9;
                zuuluu = michal[zuuluu];
                michal = michal.paths;
                tangon = tangon.bind(entity)(zuuluu, michal);
                zuuluu = tangon.then;
                michal = function(argFoo) {
                    entity = argFoo;
                    zuuluu = entity.default;
                    michal = {};
                    entity = _closure2_slot2;
                    tangon = entity.user;
                    tangon = tangon.id;
                    michal['userId'] = tangon;
                    entity = entity.user;
                    michal['localUser'] = entity;
                    entity = 'Messages Tab User Profile';
                    michal['location'] = entity;
                    entity = undefined;
                    entity = zuuluu.bind(entity)(michal);
                    return entity;
                };
                michal = zuuluu.bind(tangon)(michal);
                return entity;
            };
            option = golfie.bind(report)(michal, zuuluu);
            zuuluu = report.useState;
            michal = false;
            report = zuuluu.bind(report)(michal);
            zuuluu = _closure1_slot3;
            michal = 2;
            zuuluu = zuuluu.bind(tangon)(report, michal);
            michal = 0;
            verify = zuuluu[michal];
            michal = 1;
            michal = zuuluu[michal];
            var _closure2_slot4 = michal;
            zuuluu = _closure1_slot0;
            report = _closure1_slot2;
            michal = 11;
            michal = report[michal];
            golfie = zuuluu.bind(tangon)(michal);
            report = golfie.useStateFromStores;
            michal = _closure1_slot6;
            zuuluu = new Array(1);
            zuuluu[0] = michal;
            michal = function() {
                tangon = _closure1_slot6;
                zuuluu = tangon.getRelationshipType;
                michal = _closure2_slot2;
                michal = michal.user;
                michal = michal.id;
                michal = zuuluu.bind(tangon)(michal);
                entity = _closure1_slot8;
                entity = entity.PENDING_OUTGOING;
                entity = michal === entity;
                return entity;
            };
            michal = report.bind(golfie)(zuuluu, michal);
            if(verify) { _fun00002_ip = 209; continue _fun00001 }
 206:
            verify = michal;
 209:
            report = _closure1_slot4;
            golfie = report.useMemo;
            zuuluu = new Array(1);
            zuuluu[0] = backup;
            michal = function() {
                _fun00003: for(var _fun00004_ip = 0; ; ) switch(_fun00004_ip) {
 0:
                    michal = _closure2_slot2;
                    michal = michal.mutualFriendsCount;
                    zuuluu = null;
                    if(!(zuuluu != michal)) { _fun00004_ip = 35; continue _fun00003 }
 19:
                    michal = _closure2_slot2;
                    tangon = michal.mutualFriendsCount;
                    michal = 0;
                    if(!(!(tangon > michal))) { _fun00004_ip = 82; continue _fun00003 }
 35:
                    report = _closure1_slot1;
                    tangon = _closure1_slot2;
                    michal = 13;
                    tangon = tangon[michal];
                    michal = undefined;
                    report = report.bind(michal)(tangon);
                    tangon = report.getName;
                    michal = _closure2_slot2;
                    michal = michal.user;
                    oscard = tangon.bind(report)(michal);
                    _fun00004_ip = 159; continue _fun00003;
 82:
                    option = _closure1_slot0;
                    verify = _closure1_slot2;
                    michal = 12;
                    report = verify[michal];
                    tangon = undefined;
                    report = option.bind(tangon)(report);
                    golfie = report.intl;
                    report = golfie.formatToPlainString;
                    michal = verify[michal];
                    michal = option.bind(tangon)(michal);
                    michal = michal.t;
                    tangon = michal.z7y34e;
                    michal = {};
                    option = _closure2_slot2;
                    option = option.mutualFriendsCount;
                    michal['count'] = option;
                    oscard = report.bind(golfie)(tangon, michal);
 159:
                    michal = _closure2_slot2;
                    michal = michal.friendSuggestionName;
                    if(!(zuuluu != michal)) { _fun00004_ip = 194; continue _fun00003 }
 173:
                    michal = _closure2_slot2;
                    michal = michal.friendSuggestionName;
                    tangon = michal.length;
                    michal = 0;
                    if(!(!(tangon > michal))) { _fun00004_ip = 241; continue _fun00003 }
 194:
                    report = _closure1_slot1;
                    tangon = _closure1_slot2;
                    michal = 13;
                    tangon = tangon[michal];
                    michal = undefined;
                    report = report.bind(michal)(tangon);
                    tangon = report.getName;
                    michal = _closure2_slot2;
                    michal = michal.user;
                    michal = tangon.bind(report)(michal);
                    _fun00004_ip = 251; continue _fun00003;
 241:
                    tangon = _closure2_slot2;
                    michal = tangon.friendSuggestionName;
 251:
                    golfie = _closure1_slot0;
                    report = _closure1_slot2;
                    tangon = 14;
                    report = report[tangon];
                    tangon = undefined;
                    report = golfie.bind(tangon)(report);
                    tangon = report.getSuggestedContactNameForSuggestion;
                    entity = _closure2_slot2;
                    option = tangon.bind(report)(michal, entity);
                    entity = {};
                    zuuluu = zuuluu != option;
                    report = '';
                    tangon = report;
                    if(!zuuluu) { _fun00004_ip = 332; continue _fun00003 }
 308:
                    zuuluu = global;
                    zuuluu = zuuluu.HermesInternal;
                    golfie = zuuluu.concat;
                    zuuluu = ' · ';
                    tangon = golfie.bind(zuuluu)(option);
 332:
                    zuuluu = global;
                    zuuluu = zuuluu.HermesInternal;
                    zuuluu = zuuluu.concat;
                    zuuluu = zuuluu.bind(report)(oscard, tangon);
                    entity['userStatusLabel'] = zuuluu;
                    entity['suggestionName'] = michal;
                    return entity;
                }
            };
            michal = golfie.bind(report)(michal, zuuluu);
            result = michal.userStatusLabel;
            update = michal.suggestionName;
            zuuluu = report.useCallback;
            michal = new Array(2);
            michal[0] = backup;
            michal[1] = oscard;
            entity = function() {
                option = _closure2_slot2;
                verify = option.user;
                oscard = _closure1_slot0;
                golfie = _closure1_slot2;
                entity = 15;
                report = golfie[entity];
                entity = undefined;
                oscard = oscard.bind(entity)(report);
                report = oscard.addContactSuggestion;
                report = report.bind(oscard)(verify);
                oscard = _closure1_slot1;
                report = 16;
                report = golfie[report];
                golfie = oscard.bind(entity)(report);
                oscard = golfie.track;
                tangon = _closure1_slot7;
                report = tangon.FRIEND_SUGGESTION_ADDED;
                tangon = {};
                verify = verify.id;
                tangon['suggested_user_id'] = verify;
                option = option.source;
                tangon['suggestion_source'] = option;
                option = 'Messages Tab';
                tangon['location'] = option;
                tangon = oscard.bind(golfie)(report, tangon);
                tangon = _closure2_slot1;
                report = function(argFoo) {
                    entity = new Array(1);
                    report = argFoo;
                    tangon = 0;
                    oscard = entity;
                    zuuluu = arraySpread(oscard, report, tangon);
                    michal = _closure2_slot2;
                    entity[zuuluu] = michal;
                    michal = 1;
                    michal = zuuluu + michal;
                    return entity;
                };
                report = tangon.bind(entity)(report);
                zuuluu = function(argFoo) {
                    zuuluu = argFoo;
                    michal = zuuluu.filter;
                    entity = function(argFoo) {
                        entity = argFoo;
                        entity = entity.user;
                        michal = entity.id;
                        entity = _closure2_slot2;
                        entity = entity.user;
                        entity = entity.id;
                        entity = michal !== entity;
                        return entity;
                    };
                    entity = michal.bind(zuuluu)(entity);
                    return entity;
                };
                zuuluu = tangon.bind(entity)(zuuluu);
                zuuluu = _closure2_slot4;
                michal = true;
                michal = zuuluu.bind(entity)(michal);
                return entity;
            };
            kiloes = zuuluu.bind(report)(entity, michal);
            zuuluu = _closure1_slot9;
            michal = _closure1_slot11;
            entity = {};
            golfie = _closure1_slot10;
            output = _closure1_slot0;
            sizing = _closure1_slot2;
            report = 17;
            report = sizing[report];
            report = output.bind(tangon)(report);
            oscard = report.PressableHighlight;
            report = {};
            romeon = 'button';
            report['accessibilityRole'] = romeon;
            report['style'] = yankee;
            report['onPress'] = option;
            yankee = _closure1_slot1;
            romeon = 18;
            option = sizing[romeon];
            yankee = yankee.bind(tangon)(option);
            option = {};
            echoed = foxtra.avatar;
            option['style'] = echoed;
            backup = backup.user;
            option['user'] = backup;
            option['guildId'] = tangon;
            romeon = sizing[romeon];
            romeon = output.bind(tangon)(romeon);
            romeon = romeon.AvatarSizes;
            romeon = romeon.REFRESH_MEDIUM_32;
            option['size'] = romeon;
            yankee = zuuluu.bind(tangon)(yankee, option);
            option = new Array(3);
            option[0] = yankee;
            romeon = _closure1_slot5;
            yankee = {};
            foxtra = foxtra.textContainer;
            yankee['style'] = foxtra;
            backup = 8;
            foxtra = sizing[backup];
            foxtra = output.bind(tangon)(foxtra);
            echoed = foxtra.Text;
            foxtra = {'lineClamp': 1, 'variant': 'redesign/channel-title/semibold', 'maxFontSizeMultiplier': 2, 'color': 'text-normal'};
            foxtra['children'] = update;
            echoed = zuuluu.bind(tangon)(echoed, foxtra);
            foxtra = new Array(2);
            foxtra[0] = echoed;
            sizing = sizing[backup];
            sizing = output.bind(tangon)(sizing);
            output = sizing.Text;
            sizing = {'variant': 'text-xs/medium', 'color': 'text-normal', 'lineClamp': 1, 'maxFontSizeMultiplier': 2};
            if(!verify) { _fun00002_ip = 570; continue _fun00001 }
 515:
            ctrled = _closure1_slot0;
            vacuum = _closure1_slot2;
            echoed = 12;
            update = vacuum[echoed];
            update = ctrled.bind(tangon)(update);
            source = update.intl;
            update = source.string;
            echoed = vacuum[echoed];
            echoed = ctrled.bind(tangon)(echoed);
            echoed = echoed.t;
            echoed = echoed.Kzyxm5;
            result = update.bind(source)(echoed);
 570:
            sizing['children'] = result;
            sizing = zuuluu.bind(tangon)(output, sizing);
            foxtra[1] = sizing;
            yankee['children'] = foxtra;
            yankee = golfie.bind(tangon)(romeon, yankee);
            option[1] = yankee;
            romeon = _closure1_slot9;
            yankee = _closure1_slot0;
            foxtra = _closure1_slot2;
            if(verify) { _fun00002_ip = 704; continue _fun00001 }
 613:
            verify = 19;
            verify = foxtra[verify];
            verify = yankee.bind(tangon)(verify);
            offset = verify.Button;
            verify = {'variant': 'secondary', 'size': 'sm'};
            sizing = 12;
            output = foxtra[sizing];
            output = yankee.bind(tangon)(output);
            result = output.intl;
            output = result.string;
            sizing = foxtra[sizing];
            sizing = yankee.bind(tangon)(sizing);
            sizing = sizing.t;
            sizing = sizing.OYkgVl;
            sizing = output.bind(result)(sizing);
            verify['text'] = sizing;
            verify['onPress'] = kiloes;
            verify = romeon.bind(tangon)(offset, verify);
            _fun00002_ip = 741; continue _fun00001;
 704:
            offset = 20;
            offset = foxtra[offset];
            offset = yankee.bind(tangon)(offset);
            yankee = offset.SendMessageIcon;
            offset = {};
            foxtra = {};
            foxtra['marginHorizontal'] = backup;
            offset['style'] = foxtra;
            verify = romeon.bind(tangon)(yankee, offset);
 741:
            option[2] = verify;
            report['children'] = option;
            report = golfie.bind(tangon)(oscard, report);
            entity['children'] = report;
            entity = zuuluu.bind(tangon)(michal, entity);
            return entity;
        }
    };
    tangon = report.bind(option)(tangon);
    report = 21;
    report = golfie[report];
    golfie = oscard.bind(entity)(report);
    oscard = golfie.fileFinishedImporting;
    report = 'modules/main_tabs_v2/native/tabs/messages/items/MessagesItemSuggestedFriend.tsx';
    report = oscard.bind(golfie)(report);
    zuuluu['default'] = tangon;
    michal = function(argFoo) { // Original name: getMessagesItemSuggestedFriendHeight
        oscard = argFoo;
        golfie = _closure1_slot0;
        report = _closure1_slot2;
        michal = 8;
        zuuluu = report[michal];
        tangon = undefined;
        zuuluu = golfie.bind(tangon)(zuuluu);
        zuuluu = zuuluu.TextStyleSheet;
        zuuluu = zuuluu.redesign/channel-title/semibold;
        zuuluu = zuuluu.lineHeight;
        zuuluu = zuuluu * oscard;
        michal = report[michal];
        michal = golfie.bind(tangon)(michal);
        michal = michal.TextStyleSheet;
        michal = michal.text-xs/medium;
        michal = michal.lineHeight;
        michal = michal * oscard;
        michal = zuuluu + michal;
        zuuluu = _closure1_slot1;
        entity = 7;
        entity = report[entity];
        entity = zuuluu.bind(tangon)(entity);
        entity = entity.spacing;
        entity = entity.PX_16;
        entity = michal + entity;
        return entity;
    };
    zuuluu['getMessagesItemSuggestedFriendHeight'] = michal;
    return entity;
})();