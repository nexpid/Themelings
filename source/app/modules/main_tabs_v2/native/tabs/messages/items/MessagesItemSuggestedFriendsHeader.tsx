// app/modules/main_tabs_v2/native/tabs/messages/items/MessagesItemSuggestedFriendsHeader.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    oscard = argBar;
    foxtra = argBaz;
    zuuluu = argFre;
    golfie = argPlu;
    var _closure1_slot0 = oscard;
    var _closure1_slot1 = foxtra;
    var _closure1_slot2 = golfie;
    entity = global;
    option = entity.Object;
    report = option.defineProperty;
    michal = {};
    entity = true;
    michal['value'] = entity;
    entity = '__esModule';
    entity = report.bind(option)(zuuluu, entity, michal);
    entity = 0;
    report = golfie[entity];
    michal = argCor;
    entity = undefined;
    option = michal.bind(entity)(report);
    var _closure1_slot3 = option;
    michal = 1;
    michal = golfie[michal];
    michal = oscard.bind(entity)(michal);
    backup = michal.StyleSheet;
    michal = michal.View;
    var _closure1_slot4 = michal;
    michal = 2;
    report = golfie[michal];
    report = oscard.bind(entity)(report);
    report = report.jsx;
    var _closure1_slot5 = report;
    report = golfie[michal];
    report = oscard.bind(entity)(report);
    report = report.Fragment;
    var _closure1_slot6 = report;
    michal = golfie[michal];
    michal = oscard.bind(entity)(michal);
    michal = michal.jsxs;
    var _closure1_slot7 = michal;
    michal = 3;
    michal = golfie[michal];
    michal = oscard.bind(entity)(michal);
    michal = michal.TextStyleSheet;
    michal = michal.text-md/semibold;
    report = michal.lineHeight;
    romeon = 4;
    michal = golfie[romeon];
    michal = foxtra.bind(entity)(michal);
    michal = michal.spacing;
    michal = michal.PX_24;
    michal = report + michal;
    report = 5;
    report = golfie[report];
    offset = oscard.bind(entity)(report);
    verify = offset.createStyles;
    report = {};
    yankee = {'height': null, 'justifyContent': 'center', 'overflow': 'hidden'};
    yankee['height'] = michal;
    report['headerContainer'] = yankee;
    yankee = {};
    output = backup.absoluteFillObject;
    result = yankee;
    backup = copyDataProperties(result, output);
    backup = golfie[romeon];
    backup = foxtra.bind(entity)(backup);
    backup = backup.colors;
    kiloes = backup.PANEL_BG;
    backup = 'backgroundColor';
    yankee[backup] = kiloes;
    report['stickyOverlay'] = yankee;
    yankee = {};
    romeon = golfie[romeon];
    romeon = foxtra.bind(entity)(romeon);
    romeon = romeon.spacing;
    romeon = romeon.PX_16;
    yankee['marginHorizontal'] = romeon;
    report['headerText'] = yankee;
    report = verify.bind(offset)(report);
    var _closure1_slot8 = report;
    report = {};
    verify = 'function MessagesItemSuggestedFriendsHeaderTsx1(){const{stickyAt,scrollPosition}=this.__closure;return stickyAt!=null&&scrollPosition.get()>=stickyAt;}';
    report['code'] = verify;
    var _closure1_slot9 = report;
    report = option.memo;
    tangon = function(argFoo) { // Original name: MessagesItemSuggestedFriendsHeader
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            michal = argFoo;
            foxtra = michal.stickyAt;
            var _closure2_slot0 = foxtra;
            romeon = michal.scrollPosition;
            var _closure2_slot1 = romeon;
            offset = michal.stickyLeft;
            var _closure2_slot2 = offset;
            option = michal.stickyTop;
            var _closure2_slot3 = option;
            michal = _closure1_slot8;
            tangon = undefined;
            verify = michal.bind(tangon)();
            zuuluu = _closure1_slot0;
            golfie = _closure1_slot2;
            michal = 6;
            michal = golfie[michal];
            report = zuuluu.bind(tangon)(michal);
            zuuluu = report.useDerivedValue;
            michal = function() { // Original name: x
                _fun00003: for(var _fun00004_ip = 0; ; ) switch(_fun00004_ip) {
 0:
                    zuuluu = _closure2_slot0;
                    entity = null;
                    entity = entity != zuuluu;
                    if(!entity) { _fun00004_ip = 37; continue _fun00003 }
 16:
                    tangon = _closure2_slot1;
                    zuuluu = tangon.get;
                    zuuluu = zuuluu.bind(tangon)();
                    michal = _closure2_slot0;
                    entity = zuuluu >= michal;
 37:
                    return entity;
                }
            };
            yankee = {};
            yankee['stickyAt'] = foxtra;
            yankee['scrollPosition'] = romeon;
            michal['__closure'] = yankee;
            yankee = 895751186732.0;
            michal['__workletHash'] = yankee;
            yankee = _closure1_slot9;
            michal['__initData'] = yankee;
            zuuluu = zuuluu.bind(report)(michal);
            report = _closure1_slot1;
            michal = 7;
            michal = golfie[michal];
            michal = report.bind(tangon)(michal);
            report = michal.bind(tangon)(zuuluu);
            golfie = _closure1_slot3;
            zuuluu = golfie.useMemo;
            michal = new Array(2);
            michal[0] = offset;
            michal[1] = option;
            entity = function() {
                entity = {};
                zuuluu = _closure2_slot2;
                zuuluu = -zuuluu;
                entity['left'] = zuuluu;
                michal = _closure2_slot3;
                michal = -michal;
                entity['top'] = michal;
                return entity;
            };
            foxtra = zuuluu.bind(golfie)(entity, michal);
            zuuluu = _closure1_slot7;
            michal = _closure1_slot4;
            entity = {};
            golfie = verify.headerContainer;
            entity['style'] = golfie;
            golfie = null;
            if(!report) { _fun00002_ip = 324; continue _fun00001 }
 220:
            offset = _closure1_slot7;
            option = _closure1_slot6;
            report = {};
            backup = _closure1_slot5;
            romeon = _closure1_slot1;
            kiloes = _closure1_slot2;
            yankee = 8;
            yankee = kiloes[yankee];
            romeon = romeon.bind(tangon)(yankee);
            yankee = {'absolute': true, 'wide': true, 'componentStyles': null, 'tall': true, 'mix': true};
            yankee['componentStyles'] = foxtra;
            romeon = backup.bind(tangon)(romeon, yankee);
            yankee = new Array(2);
            yankee[0] = romeon;
            foxtra = _closure1_slot4;
            romeon = {};
            kiloes = verify.stickyOverlay;
            romeon['style'] = kiloes;
            romeon = backup.bind(tangon)(foxtra, romeon);
            yankee[1] = romeon;
            report['children'] = yankee;
            golfie = offset.bind(tangon)(option, report);
 324:
            report = new Array(2);
            report[0] = golfie;
            option = _closure1_slot5;
            romeon = _closure1_slot0;
            foxtra = _closure1_slot2;
            oscard = 3;
            oscard = foxtra[oscard];
            oscard = romeon.bind(tangon)(oscard);
            golfie = oscard.Text;
            oscard = {'style': null, 'maxFontSizeMultiplier': 2, 'lineClamp': 1, 'accessibilityRole': 'header', 'variant': 'text-md/semibold', 'color': 'header-secondary'};
            verify = verify.headerText;
            oscard['style'] = verify;
            verify = 9;
            offset = foxtra[verify];
            offset = romeon.bind(tangon)(offset);
            yankee = offset.intl;
            offset = yankee.string;
            verify = foxtra[verify];
            verify = romeon.bind(tangon)(verify);
            verify = verify.t;
            verify = verify.1uAmCw;
            verify = offset.bind(yankee)(verify);
            oscard['children'] = verify;
            oscard = option.bind(tangon)(golfie, oscard);
            report[1] = oscard;
            entity['children'] = report;
            entity = zuuluu.bind(tangon)(michal, entity);
            return entity;
        }
    };
    tangon = report.bind(option)(tangon);
    report = 10;
    report = golfie[report];
    golfie = oscard.bind(entity)(report);
    oscard = golfie.fileFinishedImporting;
    report = 'modules/main_tabs_v2/native/tabs/messages/items/MessagesItemSuggestedFriendsHeader.tsx';
    report = oscard.bind(golfie)(report);
    zuuluu['default'] = tangon;
    zuuluu['MESSAGES_ITEM_SUGGESTED_FRIENDS_HEADER_HEIGHT'] = michal;
    return entity;
})();