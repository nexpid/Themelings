// app/modules/main_tabs_v2/native/tabs/messages/useMessagesTabBadge.tsx
export default (function(_, argBar, argBaz, __, ___, argFred, argPlugh) {
    report = argBar;
    golf = argBaz;
    zulu = argFred;
    oscar = argPlugh;
    var _closure1_slot0 = report;
    var _closure1_slot1 = oscar;
    entity = global;
    verify = entity.Object;
    options = verify.defineProperty;
    tango = {};
    entity = true;
    tango['value'] = entity;
    entity = '__esModule';
    entity = options.bind(verify)(zulu, entity, tango);
    entity = 0;
    tango = oscar[entity];
    entity = undefined;
    tango = golf.bind(entity)(tango);
    var _closure1_slot2 = tango;
    tango = 1;
    tango = oscar[tango];
    tango = golf.bind(entity)(tango);
    var _closure1_slot3 = tango;
    tango = 3;
    tango = oscar[tango];
    oscar = report.bind(entity)(tango);
    report = oscar.fileFinishedImporting;
    tango = 'modules/main_tabs_v2/native/tabs/messages/useMessagesTabBadge.tsx';
    tango = report.bind(oscar)(tango);
    mike = function() { // Original name: useMessagesTabBadge
        entity = {};
        oscar = _closure1_slot0;
        golf = _closure1_slot1;
        tango = 2;
        options = golf[tango];
        report = undefined;
        yankee = oscar.bind(report)(options);
        offset = yankee.useStateFromStores;
        options = _closure1_slot3;
        verify = new Array(1);
        verify[0] = options;
        options = function() {
            mike = _closure1_slot3;
            entity = mike.getPrivateChannelMentionCount;
            entity = entity.bind(mike)();
            return entity;
        };
        options = offset.bind(yankee)(verify, options);
        entity['value'] = options;
        tango = golf[tango];
        report = oscar.bind(report)(tango);
        tango = report.useStateFromStores;
        oscar = _closure1_slot2;
        zulu = new Array(1);
        zulu[0] = oscar;
        mike = function() {
            mike = _closure1_slot2;
            entity = mike.getMessageRequestsCount;
            mike = entity.bind(mike)();
            entity = 0;
            entity = mike > entity;
            return entity;
        };
        mike = tango.bind(report)(zulu, mike);
        entity['showDot'] = mike;
        return entity;
    };
    zulu['default'] = mike;
    return entity;
})();