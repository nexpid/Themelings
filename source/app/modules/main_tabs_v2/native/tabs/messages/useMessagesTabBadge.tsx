// app/modules/main_tabs_v2/native/tabs/messages/useMessagesTabBadge.tsx
export default (function(_, argBar, argBaz, __, ___, argFre, argPlu) {
    report = argBar;
    golfie = argBaz;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    var _closure1_slot1 = oscard;
    entity = global;
    verify = entity.Object;
    option = verify.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = option.bind(verify)(zuuluu, entity, tangon);
    entity = 0;
    tangon = oscard[entity];
    entity = undefined;
    tangon = golfie.bind(entity)(tangon);
    var _closure1_slot2 = tangon;
    tangon = 1;
    tangon = oscard[tangon];
    tangon = golfie.bind(entity)(tangon);
    var _closure1_slot3 = tangon;
    tangon = 3;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/main_tabs_v2/native/tabs/messages/useMessagesTabBadge.tsx';
    tangon = report.bind(oscard)(tangon);
    michal = function() { // Original name: useMessagesTabBadge
        entity = {};
        oscard = _closure1_slot0;
        golfie = _closure1_slot1;
        tangon = 2;
        option = golfie[tangon];
        report = undefined;
        yankee = oscard.bind(report)(option);
        offset = yankee.useStateFromStores;
        option = _closure1_slot3;
        verify = new Array(1);
        verify[0] = option;
        option = function() {
            michal = _closure1_slot3;
            entity = michal.getPrivateChannelMentionCount;
            entity = entity.bind(michal)();
            return entity;
        };
        option = offset.bind(yankee)(verify, option);
        entity['value'] = option;
        tangon = golfie[tangon];
        report = oscard.bind(report)(tangon);
        tangon = report.useStateFromStores;
        oscard = _closure1_slot2;
        zuuluu = new Array(1);
        zuuluu[0] = oscard;
        michal = function() {
            michal = _closure1_slot2;
            entity = michal.getMessageRequestsCount;
            michal = entity.bind(michal)();
            entity = 0;
            entity = michal > entity;
            return entity;
        };
        michal = tangon.bind(report)(zuuluu, michal);
        entity['showDot'] = michal;
        return entity;
    };
    zuuluu['default'] = michal;
    return entity;
})();