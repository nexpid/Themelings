// app/modules/main_tabs_v2/native/tabs/messages/MessagesHeader.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    oscard = argBar;
    foxtra = argBaz;
    zuuluu = argFre;
    golfie = argPlu;
    var _closure1_slot0 = oscard;
    var _closure1_slot1 = foxtra;
    var _closure1_slot2 = golfie;
    entity = global;
    option = entity.Object;
    report = option.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = report.bind(option)(zuuluu, entity, tangon);
    entity = 0;
    report = golfie[entity];
    tangon = argCor;
    entity = undefined;
    option = tangon.bind(entity)(report);
    var _closure1_slot3 = option;
    romeon = 1;
    tangon = golfie[romeon];
    tangon = oscard.bind(entity)(tangon);
    backup = tangon.StyleSheet;
    tangon = tangon.View;
    var _closure1_slot4 = tangon;
    tangon = 2;
    tangon = golfie[tangon];
    tangon = oscard.bind(entity)(tangon);
    tangon = tangon.SearchTypes;
    var _closure1_slot5 = tangon;
    tangon = 3;
    tangon = golfie[tangon];
    tangon = oscard.bind(entity)(tangon);
    report = tangon.jsx;
    var _closure1_slot6 = report;
    tangon = tangon.jsxs;
    var _closure1_slot7 = tangon;
    yankee = 4;
    tangon = golfie[yankee];
    tangon = foxtra.bind(entity)(tangon);
    tangon = tangon.spacing;
    sizing = tangon.PX_16;
    var _closure1_slot8 = sizing;
    tangon = golfie[yankee];
    tangon = foxtra.bind(entity)(tangon);
    tangon = tangon.spacing;
    kiloes = tangon.PX_8;
    var _closure1_slot9 = kiloes;
    tangon = 7;
    tangon = golfie[tangon];
    verify = oscard.bind(entity)(tangon);
    report = verify.createStyles;
    tangon = {};
    offset = {};
    output = 'relative';
    offset['position'] = output;
    offset['padding'] = sizing;
    tangon['headerPanel'] = offset;
    offset = {};
    offset['paddingBottom'] = kiloes;
    tangon['headerPanelTitle'] = offset;
    offset = {};
    kiloes = 6;
    kiloes = golfie[kiloes];
    kiloes = oscard.bind(entity)(kiloes);
    kiloes = kiloes.SMALL_BUTTON_HEIGHT;
    offset['height'] = kiloes;
    kiloes = golfie[yankee];
    kiloes = foxtra.bind(entity)(kiloes);
    kiloes = kiloes.spacing;
    kiloes = kiloes.PX_8;
    offset['gap'] = kiloes;
    kiloes = 'row';
    offset['flexDirection'] = kiloes;
    kiloes = 'center';
    offset['alignItems'] = kiloes;
    tangon['headerPanelButtons'] = offset;
    offset = {};
    echoed = backup.absoluteFillObject;
    update = offset;
    backup = copyDataProperties(update, echoed);
    yankee = golfie[yankee];
    yankee = foxtra.bind(entity)(yankee);
    yankee = yankee.colors;
    foxtra = yankee.BACKGROUND_MODIFIER_ACCENT;
    yankee = 'backgroundColor';
    offset[yankee] = foxtra;
    yankee = 'top';
    offset[yankee] = entity;
    yankee = 'height';
    offset[yankee] = romeon;
    tangon['headerBorder'] = offset;
    tangon = report.bind(verify)(tangon);
    var _closure1_slot10 = tangon;
    tangon = {};
    report = 'function MessagesHeaderTsx1(){const{withSpring,scrollPosition}=this.__closure;return{opacity:withSpring(scrollPosition.get()>0?1:0)};}';
    tangon['code'] = report;
    var _closure1_slot11 = tangon;
    report = option.memo;
    tangon = function(argFoo) { // Original name: MessagesHeader
        zuuluu = argFoo;
        michal = zuuluu.height;
        var _closure2_slot0 = michal;
        foxtra = zuuluu.scrollPosition;
        var _closure2_slot1 = foxtra;
        zuuluu = _closure1_slot10;
        tangon = undefined;
        verify = zuuluu.bind(tangon)();
        var _closure2_slot2 = verify;
        option = _closure1_slot3;
        report = option.useMemo;
        zuuluu = new Array(2);
        zuuluu[0] = verify;
        zuuluu[1] = michal;
        michal = function() {
            entity = _closure2_slot2;
            michal = entity.headerPanel;
            entity = new Array(2);
            entity[0] = michal;
            michal = {};
            zuuluu = _closure2_slot0;
            michal['height'] = zuuluu;
            entity[1] = michal;
            return entity;
        };
        report = report.bind(option)(michal, zuuluu);
        echoed = _closure1_slot0;
        yankee = _closure1_slot2;
        oscard = 8;
        michal = yankee[oscard];
        offset = echoed.bind(tangon)(michal);
        zuuluu = offset.useAnimatedStyle;
        michal = function() { // Original name: c
            _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
                entity = {};
                tangon = _closure1_slot0;
                zuuluu = _closure1_slot2;
                michal = 9;
                zuuluu = zuuluu[michal];
                michal = undefined;
                tangon = tangon.bind(michal)(zuuluu);
                zuuluu = tangon.withSpring;
                report = _closure2_slot1;
                michal = report.get;
                report = michal.bind(report)();
                michal = 0;
                report = report > michal;
                if(!report) { _fun00002_ip = 60; continue _fun00001 }
 57:
                michal = 1;
 60:
                michal = zuuluu.bind(tangon)(michal);
                entity['opacity'] = michal;
                return entity;
            }
        };
        romeon = {};
        backup = 9;
        backup = yankee[backup];
        backup = echoed.bind(tangon)(backup);
        backup = backup.withSpring;
        romeon['withSpring'] = backup;
        romeon['scrollPosition'] = foxtra;
        michal['__closure'] = romeon;
        romeon = 17233409273245.0;
        michal['__workletHash'] = romeon;
        romeon = _closure1_slot11;
        michal['__initData'] = romeon;
        offset = zuuluu.bind(offset)(michal);
        romeon = option.useCallback;
        zuuluu = function() {
            _fun00003: for(var _fun00004_ip = 0; ; ) switch(_fun00004_ip) {
 0:
                zuuluu = _closure1_slot0;
                michal = _closure1_slot2;
                entity = 10;
                michal = michal[entity];
                entity = undefined;
                zuuluu = zuuluu.bind(entity)(michal);
                michal = zuuluu.getRootNavigationRef;
                tangon = michal.bind(zuuluu)();
                michal = null;
                if(!(michal != tangon)) { _fun00004_ip = 58; continue _fun00003 }
 41:
                zuuluu = tangon.navigate;
                michal = 'message-requests';
                michal = zuuluu.bind(tangon)(michal);
 58:
                return entity;
            }
        };
        michal = new Array(0);
        result = romeon.bind(option)(zuuluu, michal);
        romeon = option.useCallback;
        zuuluu = function() {
            _fun00005: for(var _fun00006_ip = 0; ; ) switch(_fun00006_ip) {
 0:
                zuuluu = _closure1_slot0;
                michal = _closure1_slot2;
                entity = 10;
                michal = michal[entity];
                entity = undefined;
                zuuluu = zuuluu.bind(entity)(michal);
                michal = zuuluu.getRootNavigationRef;
                report = michal.bind(zuuluu)();
                michal = null;
                if(!(michal != report)) { _fun00006_ip = 89; continue _fun00005 }
 41:
                tangon = report.navigate;
                zuuluu = {};
                michal = 'add-friends';
                zuuluu['screen'] = michal;
                michal = {'sourcePage': 'Messages Tab', 'presentation': 'card'};
                zuuluu['params'] = michal;
                michal = 'friends';
                michal = tangon.bind(report)(michal, zuuluu);
 89:
                return entity;
            }
        };
        michal = new Array(0);
        output = romeon.bind(option)(zuuluu, michal);
        zuuluu = option.useCallback;
        michal = function() {
            _fun00007: for(var _fun00008_ip = 0; ; ) switch(_fun00008_ip) {
 0:
                tangon = _closure1_slot0;
                zuuluu = _closure1_slot2;
                entity = 10;
                zuuluu = zuuluu[entity];
                entity = undefined;
                tangon = tangon.bind(entity)(zuuluu);
                zuuluu = tangon.getRootNavigationRef;
                oscard = zuuluu.bind(tangon)();
                zuuluu = null;
                if(!(zuuluu != oscard)) { _fun00008_ip = 99; continue _fun00007 }
 41:
                tangon = _closure1_slot0;
                report = _closure1_slot2;
                zuuluu = 11;
                zuuluu = report[zuuluu];
                report = tangon.bind(entity)(zuuluu);
                tangon = report.navigateToSearch;
                zuuluu = {};
                michal = _closure1_slot5;
                michal = michal.DMS;
                zuuluu['type'] = michal;
                michal = {};
                golfie = true;
                michal['prefetch'] = golfie;
                michal = tangon.bind(report)(oscard, zuuluu, michal);
 99:
                return entity;
            }
        };
        entity = new Array(0);
        kiloes = zuuluu.bind(option)(michal, entity);
        zuuluu = _closure1_slot7;
        michal = _closure1_slot4;
        entity = {};
        entity['style'] = report;
        option = _closure1_slot6;
        report = 5;
        report = yankee[report];
        report = echoed.bind(tangon)(report);
        romeon = report.Text;
        report = {'style': null, 'color': 'header-primary', 'variant': 'redesign/heading-18/bold', 'maxFontSizeMultiplier': 1.75, 'accessibilityRole': 'header'};
        foxtra = verify.headerPanelTitle;
        report['style'] = foxtra;
        sizing = 12;
        foxtra = yankee[sizing];
        foxtra = echoed.bind(tangon)(foxtra);
        update = foxtra.intl;
        backup = update.string;
        foxtra = yankee[sizing];
        foxtra = echoed.bind(tangon)(foxtra);
        foxtra = foxtra.t;
        foxtra = foxtra.OIgYlZ;
        foxtra = backup.bind(update)(foxtra);
        report['children'] = foxtra;
        romeon = option.bind(tangon)(romeon, report);
        report = new Array(3);
        report[0] = romeon;
        romeon = {};
        foxtra = verify.headerPanelButtons;
        romeon['style'] = foxtra;
        foxtra = 13;
        foxtra = yankee[foxtra];
        foxtra = echoed.bind(tangon)(foxtra);
        backup = foxtra.IconButton;
        foxtra = {'onPress': null, 'variant': 'secondary', 'size': 'sm'};
        foxtra['onPress'] = kiloes;
        source = 'sm';
        kiloes = 14;
        kiloes = yankee[kiloes];
        kiloes = echoed.bind(tangon)(kiloes);
        update = kiloes.MagnifyingGlassIcon;
        kiloes = {};
        kiloes['size'] = source;
        kiloes = option.bind(tangon)(update, kiloes);
        foxtra['icon'] = kiloes;
        kiloes = yankee[sizing];
        kiloes = echoed.bind(tangon)(kiloes);
        ctrled = kiloes.intl;
        update = ctrled.string;
        kiloes = yankee[sizing];
        kiloes = echoed.bind(tangon)(kiloes);
        kiloes = kiloes.t;
        kiloes = kiloes.5h0QOD;
        kiloes = update.bind(ctrled)(kiloes);
        foxtra['accessibilityLabel'] = kiloes;
        backup = option.bind(tangon)(backup, foxtra);
        foxtra = new Array(3);
        foxtra[0] = backup;
        golfie = _closure1_slot1;
        backup = 15;
        backup = yankee[backup];
        kiloes = golfie.bind(tangon)(backup);
        backup = {'noMargin': true, 'onPress': null, 'alternateVariant': true};
        backup['onPress'] = result;
        backup = option.bind(tangon)(kiloes, backup);
        foxtra[1] = backup;
        backup = 16;
        backup = yankee[backup];
        backup = echoed.bind(tangon)(backup);
        kiloes = backup.Button;
        backup = {'variant': 'secondary', 'grow': true, 'size': 'sm', 'icon': null, 'onPress': null, 'maxFontSizeMultiplier': 1};
        result = 17;
        result = yankee[result];
        result = echoed.bind(tangon)(result);
        update = result.UserPlusIcon;
        result = {};
        result['size'] = source;
        result = option.bind(tangon)(update, result);
        backup['icon'] = result;
        backup['onPress'] = output;
        output = yankee[sizing];
        output = echoed.bind(tangon)(output);
        result = output.intl;
        output = result.string;
        sizing = yankee[sizing];
        sizing = echoed.bind(tangon)(sizing);
        sizing = sizing.t;
        sizing = sizing.zIJnAw;
        sizing = output.bind(result)(sizing);
        backup['text'] = sizing;
        backup = option.bind(tangon)(kiloes, backup);
        foxtra[2] = backup;
        romeon['children'] = foxtra;
        romeon = zuuluu.bind(tangon)(michal, romeon);
        report[1] = romeon;
        oscard = yankee[oscard];
        oscard = golfie.bind(tangon)(oscard);
        golfie = oscard.View;
        oscard = {};
        yankee = verify.headerBorder;
        verify = new Array(2);
        verify[0] = yankee;
        verify[1] = offset;
        oscard['style'] = verify;
        oscard = option.bind(tangon)(golfie, oscard);
        report[2] = oscard;
        entity['children'] = report;
        entity = zuuluu.bind(tangon)(michal, entity);
        return entity;
    };
    tangon = report.bind(option)(tangon);
    report = 18;
    report = golfie[report];
    golfie = oscard.bind(entity)(report);
    oscard = golfie.fileFinishedImporting;
    report = 'modules/main_tabs_v2/native/tabs/messages/MessagesHeader.tsx';
    report = oscard.bind(golfie)(report);
    zuuluu['default'] = tangon;
    michal = function(argFoo) { // Original name: getMessagesHeaderHeight
        entity = global;
        tangon = entity.Math;
        zuuluu = tangon.min;
        michal = argFoo;
        entity = 1.75;
        zuuluu = zuuluu.bind(tangon)(michal, entity);
        report = _closure1_slot0;
        oscard = _closure1_slot2;
        michal = 5;
        michal = oscard[michal];
        tangon = undefined;
        michal = report.bind(tangon)(michal);
        michal = michal.TextStyleSheet;
        michal = michal.redesign/heading-18/bold;
        michal = michal.lineHeight;
        zuuluu = michal * zuuluu;
        michal = _closure1_slot9;
        zuuluu = zuuluu + michal;
        michal = 6;
        michal = oscard[michal];
        michal = report.bind(tangon)(michal);
        michal = michal.SMALL_BUTTON_HEIGHT;
        michal = zuuluu + michal;
        zuuluu = _closure1_slot8;
        entity = 2;
        entity = entity * zuuluu;
        entity = michal + entity;
        return entity;
    };
    zuuluu['getMessagesHeaderHeight'] = michal;
    return entity;
})();