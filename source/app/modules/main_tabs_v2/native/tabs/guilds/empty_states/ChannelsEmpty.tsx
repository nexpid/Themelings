// app/modules/main_tabs_v2/native/tabs/guilds/empty_states/ChannelsEmpty.tsx
export default (function(argFoo, argBar, argBaz, argCorge, _, argFred, argPlugh) {
    report = argBar;
    romeo = argBaz;
    zulu = argFred;
    oscar = argPlugh;
    var _closure1_slot0 = report;
    var _closure1_slot1 = romeo;
    var _closure1_slot2 = oscar;
    entity = global;
    options = entity.Object;
    golf = options.defineProperty;
    tango = {};
    entity = true;
    tango['value'] = entity;
    entity = '__esModule';
    entity = golf.bind(options)(zulu, entity, tango);
    entity = 0;
    golf = oscar[entity];
    tango = argCorge;
    entity = undefined;
    golf = tango.bind(entity)(golf);
    var _closure1_slot3 = golf;
    tango = 1;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    options = tango.View;
    var _closure1_slot4 = options;
    tango = tango.Image;
    var _closure1_slot5 = tango;
    tango = 2;
    tango = oscar[tango];
    tango = romeo.bind(entity)(tango);
    var _closure1_slot6 = tango;
    tango = 3;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.Permissions;
    var _closure1_slot7 = tango;
    tango = 4;
    options = oscar[tango];
    options = report.bind(entity)(options);
    options = options.jsx;
    var _closure1_slot8 = options;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.jsxs;
    var _closure1_slot9 = tango;
    tango = 5;
    tango = oscar[tango];
    verify = report.bind(entity)(tango);
    options = verify.createStyles;
    tango = {};
    offset = {'flex': 1, 'paddingTop': 12};
    tango['wrapper'] = offset;
    backup = 16;
    offset = {'flex': 0, 'marginHorizontal': 16};
    tango['rowButton'] = offset;
    yankee = 'center';
    offset = {'flex': 1, 'justifyContent': 'center', 'alignItems': 'center', 'paddingHorizontal': 48};
    tango['content'] = offset;
    offset = {};
    foxtrot = 6;
    foxtrot = oscar[foxtrot];
    foxtrot = report.bind(entity)(foxtrot);
    foxtrot = foxtrot.TextStyleSheet;
    output = foxtrot.heading-md/bold;
    result = offset;
    foxtrot = copyDataProperties(result, output);
    kilo = 18;
    foxtrot = 'fontSize';
    offset[foxtrot] = kilo;
    foxtrot = 'marginTop';
    offset[foxtrot] = backup;
    backup = 8;
    foxtrot = 'marginBottom';
    offset[foxtrot] = backup;
    tango['headerText'] = offset;
    offset = {};
    offset['textAlign'] = yankee;
    tango['text'] = offset;
    offset = {'borderRadius': null, 'height': 44, 'paddingHorizontal': 20, 'marginTop': 24};
    yankee = 7;
    yankee = oscar[yankee];
    yankee = romeo.bind(entity)(yankee);
    yankee = yankee.radii;
    yankee = yankee.xl;
    offset['borderRadius'] = yankee;
    tango['button'] = offset;
    offset = {'marginHorizontal': 12, 'marginBottom': 12};
    tango['personalizeButtonWrapper'] = offset;
    tango = options.bind(verify)(tango);
    var _closure1_slot10 = tango;
    tango = golf.memo;
    mike = function(argFoo) { // Original name: ChannelsEmpty
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            mike = argFoo;
            mike = mike.guild;
            var _closure2_slot0 = mike;
            zulu = _closure1_slot10;
            tango = undefined;
            control = zulu.bind(tango)();
            report = _closure1_slot0;
            oscar = _closure1_slot2;
            zulu = 8;
            zulu = oscar[zulu];
            options = report.bind(tango)(zulu);
            golf = options.useStateFromStoresObject;
            zulu = _closure1_slot6;
            oscar = new Array(1);
            oscar[0] = zulu;
            report = new Array(1);
            report[0] = mike;
            zulu = function() {
                entity = {};
                report = _closure1_slot6;
                oscar = report.can;
                mike = _closure1_slot7;
                zulu = mike.MANAGE_GUILD;
                tango = _closure2_slot0;
                zulu = oscar.bind(report)(zulu, tango);
                entity['canCustomizeGuild'] = zulu;
                zulu = report.can;
                mike = mike.MANAGE_CHANNELS;
                mike = zulu.bind(report)(mike, tango);
                entity['canCreateChannel'] = mike;
                return entity;
            };
            zulu = golf.bind(options)(oscar, zulu, report);
            oscar = zulu.canCustomizeGuild;
            offset = zulu.canCreateChannel;
            report = _closure1_slot3;
            options = report.useCallback;
            zulu = mike.id;
            golf = new Array(1);
            golf[0] = zulu;
            zulu = function() {
                zulu = _closure1_slot1;
                mike = _closure1_slot2;
                entity = 9;
                mike = mike[entity];
                entity = undefined;
                tango = zulu.bind(entity)(mike);
                zulu = tango.open;
                mike = _closure2_slot0;
                mike = mike.id;
                mike = zulu.bind(tango)(mike);
                return entity;
            };
            romeo = options.bind(report)(zulu, golf);
            zulu = report.useCallback;
            golf = mike.id;
            mike = new Array(1);
            mike[0] = golf;
            entity = function() {
                zulu = _closure1_slot1;
                mike = _closure1_slot2;
                entity = 10;
                mike = mike[entity];
                entity = undefined;
                report = zulu.bind(entity)(mike);
                tango = report.open;
                mike = _closure2_slot0;
                options = mike.id;
                offset = report;
                verify = null;
                golf = null;
                oscar = null;
                mike = offset[tango](verify, options, golf, oscar, report);
                return entity;
            };
            sizing = zulu.bind(report)(entity, mike);
            zulu = _closure1_slot9;
            mike = _closure1_slot4;
            entity = {};
            report = control.wrapper;
            entity['style'] = report;
            if(!oscar) { _fun00002_ip = 361; continue _fun00001 }
 191:
            options = _closure1_slot8;
            golf = _closure1_slot4;
            report = {};
            verify = control.personalizeButtonWrapper;
            report['style'] = verify;
            output = _closure1_slot0;
            echo = _closure1_slot2;
            verify = 11;
            verify = echo[verify];
            verify = output.bind(tango)(verify);
            yankee = verify.RowButton;
            verify = {};
            update = _closure1_slot1;
            foxtrot = 12;
            foxtrot = echo[foxtrot];
            backup = update.bind(tango)(foxtrot);
            foxtrot = {};
            kilo = 13;
            kilo = echo[kilo];
            kilo = update.bind(tango)(kilo);
            foxtrot['source'] = kilo;
            kilo = true;
            foxtrot['disableColor'] = kilo;
            foxtrot = options.bind(tango)(backup, foxtrot);
            verify['icon'] = foxtrot;
            foxtrot = 14;
            backup = echo[foxtrot];
            backup = output.bind(tango)(backup);
            kilo = backup.intl;
            backup = kilo.string;
            foxtrot = echo[foxtrot];
            foxtrot = output.bind(tango)(foxtrot);
            foxtrot = foxtrot.t;
            foxtrot = foxtrot.Yhi9/P;
            foxtrot = backup.bind(kilo)(foxtrot);
            verify['label'] = foxtrot;
            verify['onPress'] = romeo;
            verify = options.bind(tango)(yankee, verify);
            report['children'] = verify;
            oscar = options.bind(tango)(golf, report);
 361:
            report = new Array(2);
            report[0] = oscar;
            options = _closure1_slot9;
            golf = _closure1_slot4;
            oscar = {};
            verify = control.content;
            oscar['style'] = verify;
            foxtrot = _closure1_slot8;
            yankee = _closure1_slot5;
            verify = {};
            kilo = _closure1_slot1;
            backup = _closure1_slot2;
            romeo = 15;
            romeo = backup[romeo];
            romeo = kilo.bind(tango)(romeo);
            verify['source'] = romeo;
            yankee = foxtrot.bind(tango)(yankee, verify);
            verify = new Array(4);
            verify[0] = yankee;
            echo = _closure1_slot0;
            yankee = 6;
            romeo = backup[yankee];
            romeo = echo.bind(tango)(romeo);
            kilo = romeo.Text;
            romeo = {'color': 'header-primary', 'variant': 'heading-md/bold'};
            update = control.text;
            output = new Array(2);
            output[0] = update;
            update = control.headerText;
            output[1] = update;
            romeo['style'] = output;
            source = 14;
            output = backup[source];
            output = echo.bind(tango)(output);
            vacuum = output.intl;
            update = vacuum.string;
            output = backup[source];
            output = echo.bind(tango)(output);
            output = output.t;
            output = output.o4s29v;
            output = update.bind(vacuum)(output);
            romeo['children'] = output;
            romeo = foxtrot.bind(tango)(kilo, romeo);
            verify[1] = romeo;
            yankee = backup[yankee];
            yankee = echo.bind(tango)(yankee);
            romeo = yankee.Text;
            yankee = {'color': 'header-secondary', 'variant': 'text-md/medium'};
            kilo = control.text;
            yankee['style'] = kilo;
            kilo = backup[source];
            kilo = echo.bind(tango)(kilo);
            output = kilo.intl;
            kilo = output.string;
            backup = backup[source];
            backup = echo.bind(tango)(backup);
            backup = backup.t;
            backup = backup.iypvFh;
            backup = kilo.bind(output)(backup);
            yankee['children'] = backup;
            yankee = foxtrot.bind(tango)(romeo, yankee);
            verify[2] = yankee;
            if(!offset) { _fun00002_ip = 812; continue _fun00001 }
 664:
            foxtrot = _closure1_slot8;
            romeo = _closure1_slot4;
            yankee = {};
            update = _closure1_slot1;
            output = _closure1_slot2;
            echo = 16;
            backup = output[echo];
            kilo = update.bind(tango)(backup);
            backup = {};
            vacuum = true;
            backup['shrink'] = vacuum;
            control = control.button;
            backup['style'] = control;
            echo = output[echo];
            echo = update.bind(tango)(echo);
            echo = echo.Sizes;
            echo = echo.MEDIUM;
            backup['size'] = echo;
            update = _closure1_slot0;
            result = output[source];
            result = update.bind(tango)(result);
            echo = result.intl;
            result = echo.string;
            output = output[source];
            output = update.bind(tango)(output);
            output = output.t;
            output = output.63PyJS;
            output = result.bind(echo)(output);
            backup['text'] = output;
            backup['onPress'] = sizing;
            backup = foxtrot.bind(tango)(kilo, backup);
            yankee['children'] = backup;
            offset = foxtrot.bind(tango)(romeo, yankee);
 812:
            verify[3] = offset;
            oscar['children'] = verify;
            oscar = options.bind(tango)(golf, oscar);
            report[1] = oscar;
            entity['children'] = report;
            entity = zulu.bind(tango)(mike, entity);
            return entity;
        }
    };
    mike = tango.bind(golf)(mike);
    tango = 17;
    tango = oscar[tango];
    oscar = report.bind(entity)(tango);
    report = oscar.fileFinishedImporting;
    tango = 'modules/main_tabs_v2/native/tabs/guilds/empty_states/ChannelsEmpty.tsx';
    tango = report.bind(oscar)(tango);
    zulu['default'] = mike;
    return entity;
})();