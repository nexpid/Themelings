// app/modules/main_tabs_v2/native/tabs/guilds/empty_states/GuildsEmpty.tsx
export default (function(argFoo, argBar, argBaz, argCorge, _, argFred, argPlugh) {
    oscar = argBar;
    kilo = argBaz;
    zulu = argFred;
    golf = argPlugh;
    var _closure1_slot0 = oscar;
    var _closure1_slot1 = kilo;
    var _closure1_slot2 = golf;
    entity = function() { // Original name: handleJoinGuild
        zulu = _closure1_slot1;
        mike = _closure1_slot2;
        entity = 11;
        mike = mike[entity];
        entity = undefined;
        zulu = zulu.bind(entity)(mike);
        mike = zulu.openGuildJoinServerScreen;
        mike = mike.bind(zulu)();
        return entity;
    };
    var _closure1_slot15 = entity;
    entity = function() { // Original name: handleCreateGuild
        zulu = _closure1_slot1;
        mike = _closure1_slot2;
        entity = 11;
        mike = mike[entity];
        entity = undefined;
        zulu = zulu.bind(entity)(mike);
        mike = zulu.openCreateGuildModal;
        mike = mike.bind(zulu)();
        return entity;
    };
    var _closure1_slot16 = entity;
    mike = function(argFoo) { // Original name: GuildsEmptyContent
        _fun116196: for(var _fun116196_ip = 0; ; ) switch(_fun116196_ip) {
 0:
            mike = argFoo;
            oscar = mike.contentContainerStyle;
            zulu = _closure1_slot4;
            mike = zulu.useState;
            yankee = 0;
            report = mike.bind(zulu)(yankee);
            zulu = _closure1_slot3;
            tango = undefined;
            mike = 2;
            zulu = zulu.bind(tango)(report, mike);
            offset = zulu[yankee];
            mike = 1;
            mike = zulu[mike];
            var _closure2_slot0 = mike;
            mike = _closure1_slot14;
            romeo = mike.bind(tango)();
            report = _closure1_slot4;
            zulu = report.useCallback;
            mike = function(argFoo) {
                _fun116197: for(var _fun116197_ip = 0; ; ) switch(_fun116197_ip) {
 0:
                    entity = argFoo;
                    entity = entity.nativeEvent;
                    entity = entity.layout;
                    zulu = entity.height;
                    entity = _closure1_slot11;
                    entity = entity.keyboardOpen;
                    if(entity) { _fun116197_ip = 49; continue _fun116197 }
 35:
                    mike = _closure2_slot0;
                    entity = undefined;
                    entity = mike.bind(entity)(zulu);
 49:
                    entity = undefined;
                    return entity;
                }
            };
            entity = new Array(0);
            options = zulu.bind(report)(mike, entity);
            zulu = _closure1_slot12;
            mike = _closure1_slot7;
            entity = {'alwaysBounceVertical': false, 'bounces': false};
            report = romeo.scrollView;
            entity['style'] = report;
            golf = romeo.scrollViewContentContainer;
            report = new Array(2);
            report[0] = golf;
            report[1] = oscar;
            entity['contentContainerStyle'] = report;
            golf = _closure1_slot13;
            oscar = _closure1_slot6;
            report = {};
            report['onLayout'] = options;
            verify = undefined;
            if(!(yankee !== offset)) { _fun116196_ip = 217; continue _fun116196 }
 170:
            foxtrot = _closure1_slot0;
            backup = _closure1_slot2;
            options = 12;
            options = backup[options];
            foxtrot = foxtrot.bind(tango)(options);
            options = foxtrot.isAndroid;
            options = options.bind(foxtrot)();
            verify = undefined;
            if(!options) { _fun116196_ip = 217; continue _fun116196 }
 204:
            options = {};
            options['flex'] = yankee;
            options['height'] = offset;
            verify = options;
 217:
            options = new Array(1);
            options[0] = verify;
            report['style'] = options;
            offset = _closure1_slot13;
            verify = _closure1_slot6;
            options = {};
            yankee = romeo.content;
            options['style'] = yankee;
            backup = _closure1_slot12;
            foxtrot = _closure1_slot6;
            yankee = {};
            kilo = romeo.illustrationWrapper;
            yankee['style'] = kilo;
            result = _closure1_slot12;
            output = _closure1_slot5;
            kilo = {};
            update = _closure1_slot1;
            source = _closure1_slot2;
            echo = 13;
            echo = source[echo];
            echo = update.bind(tango)(echo);
            kilo['source'] = echo;
            echo = romeo.illustration;
            kilo['style'] = echo;
            kilo = result.bind(tango)(output, kilo);
            yankee['children'] = kilo;
            foxtrot = backup.bind(tango)(foxtrot, yankee);
            yankee = new Array(2);
            yankee[0] = foxtrot;
            kilo = _closure1_slot13;
            backup = _closure1_slot6;
            foxtrot = {};
            output = romeo.textWrapper;
            foxtrot['style'] = output;
            vacuum = _closure1_slot12;
            update = _closure1_slot0;
            echo = 10;
            output = source[echo];
            output = update.bind(tango)(output);
            control = output.Text;
            result = {'color': 'header-primary', 'variant': 'heading-md/bold'};
            sequence = romeo.text;
            output = new Array(2);
            output[0] = sequence;
            sequence = romeo.headerText;
            output[1] = sequence;
            result['style'] = output;
            output = 14;
            sequence = source[output];
            sequence = update.bind(tango)(sequence);
            record = sequence.intl;
            config = record.string;
            sequence = source[output];
            sequence = update.bind(tango)(sequence);
            sequence = sequence.t;
            sequence = sequence.Y7Ml/P;
            sequence = config.bind(record)(sequence);
            result['children'] = sequence;
            control = vacuum.bind(tango)(control, result);
            result = new Array(2);
            result[0] = control;
            vacuum = _closure1_slot12;
            echo = source[echo];
            echo = update.bind(tango)(echo);
            control = echo.Text;
            echo = {'color': 'header-secondary', 'variant': 'text-md/medium'};
            sequence = romeo.text;
            echo['style'] = sequence;
            sequence = source[output];
            sequence = update.bind(tango)(sequence);
            record = sequence.intl;
            config = record.string;
            sequence = source[output];
            sequence = update.bind(tango)(sequence);
            sequence = sequence.t;
            sequence = sequence.kuyE4u;
            sequence = config.bind(record)(sequence);
            echo['children'] = sequence;
            echo = vacuum.bind(tango)(control, echo);
            result[1] = echo;
            foxtrot['children'] = result;
            foxtrot = kilo.bind(tango)(backup, foxtrot);
            yankee[1] = foxtrot;
            options['children'] = yankee;
            verify = offset.bind(tango)(verify, options);
            options = new Array(2);
            options[0] = verify;
            yankee = _closure1_slot13;
            verify = 15;
            verify = source[verify];
            verify = update.bind(tango)(verify);
            offset = verify.Stack;
            verify = {};
            romeo = romeo.buttonContainer;
            verify['style'] = romeo;
            romeo = 12;
            verify['spacing'] = romeo;
            kilo = _closure1_slot12;
            foxtrot = 16;
            romeo = source[foxtrot];
            romeo = update.bind(tango)(romeo);
            backup = romeo.Button;
            romeo = {};
            result = 'lg';
            romeo['size'] = result;
            result = source[output];
            result = update.bind(tango)(result);
            control = result.intl;
            echo = control.string;
            result = source[output];
            result = update.bind(tango)(result);
            result = result.t;
            result = result.riOUtL;
            result = echo.bind(control)(result);
            romeo['text'] = result;
            result = _closure1_slot15;
            romeo['onPress'] = result;
            backup = kilo.bind(tango)(backup, romeo);
            romeo = new Array(2);
            romeo[0] = backup;
            kilo = _closure1_slot12;
            foxtrot = source[foxtrot];
            foxtrot = update.bind(tango)(foxtrot);
            backup = foxtrot.Button;
            foxtrot = {'size': 'lg', 'variant': 'secondary'};
            result = source[output];
            result = update.bind(tango)(result);
            echo = result.intl;
            result = echo.string;
            output = source[output];
            output = update.bind(tango)(output);
            output = output.t;
            output = output.BetvT0;
            output = result.bind(echo)(output);
            foxtrot['text'] = output;
            sizing = _closure1_slot16;
            foxtrot['onPress'] = sizing;
            foxtrot = kilo.bind(tango)(backup, foxtrot);
            romeo[1] = foxtrot;
            verify['children'] = romeo;
            verify = yankee.bind(tango)(offset, verify);
            options[1] = verify;
            report['children'] = options;
            report = golf.bind(tango)(oscar, report);
            entity['children'] = report;
            entity = zulu.bind(tango)(mike, entity);
            return entity;
        }
    };
    var _closure1_slot17 = mike;
    entity = global;
    verify = entity.Object;
    options = verify.defineProperty;
    report = {};
    entity = true;
    report['value'] = entity;
    entity = '__esModule';
    entity = options.bind(verify)(zulu, entity, report);
    entity = 0;
    report = golf[entity];
    entity = undefined;
    report = kilo.bind(entity)(report);
    var _closure1_slot3 = report;
    report = 1;
    options = golf[report];
    report = argCorge;
    options = report.bind(entity)(options);
    var _closure1_slot4 = options;
    report = 2;
    report = golf[report];
    report = oscar.bind(entity)(report);
    verify = report.Image;
    var _closure1_slot5 = verify;
    verify = report.View;
    var _closure1_slot6 = verify;
    report = report.ScrollView;
    var _closure1_slot7 = report;
    report = 3;
    report = golf[report];
    report = kilo.bind(entity)(report);
    var _closure1_slot8 = report;
    report = 4;
    report = golf[report];
    report = kilo.bind(entity)(report);
    var _closure1_slot9 = report;
    report = 5;
    report = golf[report];
    report = kilo.bind(entity)(report);
    var _closure1_slot10 = report;
    report = 6;
    report = golf[report];
    report = kilo.bind(entity)(report);
    var _closure1_slot11 = report;
    report = 7;
    verify = golf[report];
    verify = oscar.bind(entity)(verify);
    verify = verify.jsx;
    var _closure1_slot12 = verify;
    report = golf[report];
    report = oscar.bind(entity)(report);
    report = report.jsxs;
    var _closure1_slot13 = report;
    backup = 8;
    report = golf[backup];
    offset = oscar.bind(entity)(report);
    verify = offset.createStyles;
    report = {};
    yankee = {};
    foxtrot = 9;
    romeo = golf[foxtrot];
    romeo = kilo.bind(entity)(romeo);
    romeo = romeo.radii;
    romeo = romeo.xxl;
    yankee['borderTopLeftRadius'] = romeo;
    romeo = golf[foxtrot];
    romeo = kilo.bind(entity)(romeo);
    romeo = romeo.radii;
    romeo = romeo.sm;
    yankee['borderTopRightRadius'] = romeo;
    report['scrollView'] = yankee;
    yankee = {'zIndex': 100, 'width': '100%', 'backgroundColor': null, 'flex': 1};
    romeo = golf[foxtrot];
    romeo = kilo.bind(entity)(romeo);
    romeo = romeo.colors;
    romeo = romeo.BG_BASE_PRIMARY;
    yankee['backgroundColor'] = romeo;
    report['header'] = yankee;
    romeo = 'center';
    yankee = {'height': 56, 'marginLeft': 16, 'marginRight': 8, 'flexDirection': 'row', 'alignItems': 'center'};
    report['headerTitle'] = yankee;
    yankee = {'flexGrow': 2, 'justifyContent': 'center'};
    sizing = golf[foxtrot];
    sizing = kilo.bind(entity)(sizing);
    sizing = sizing.colors;
    sizing = sizing.BG_BASE_PRIMARY;
    yankee['backgroundColor'] = sizing;
    report['scrollViewContentContainer'] = yankee;
    yankee = {'flex': 1, 'flexDirection': 'row', 'alignItems': 'center'};
    report['headerInner'] = yankee;
    yankee = {'flexGrow': 2, 'paddingHorizontal': null, 'alignItems': 'center', 'justifyContent': 'center'};
    sizing = golf[foxtrot];
    sizing = kilo.bind(entity)(sizing);
    sizing = sizing.spacing;
    sizing = sizing.PX_16;
    yankee['paddingHorizontal'] = sizing;
    report['content'] = yankee;
    yankee = {'width': '100%', 'paddingHorizontal': 36};
    report['illustrationWrapper'] = yankee;
    yankee = {'resizeMode': 'contain', 'alignSelf': 'center'};
    sizing = golf[foxtrot];
    sizing = kilo.bind(entity)(sizing);
    sizing = sizing.spacing;
    sizing = sizing.PX_24;
    yankee['marginBottom'] = sizing;
    report['illustration'] = yankee;
    yankee = {};
    sizing = golf[foxtrot];
    sizing = kilo.bind(entity)(sizing);
    sizing = sizing.spacing;
    sizing = sizing.PX_16;
    yankee['paddingBottom'] = sizing;
    sizing = golf[foxtrot];
    sizing = kilo.bind(entity)(sizing);
    sizing = sizing.spacing;
    sizing = sizing.PX_16;
    yankee['paddingHorizontal'] = sizing;
    sizing = golf[foxtrot];
    sizing = kilo.bind(entity)(sizing);
    sizing = sizing.colors;
    sizing = sizing.BG_BASE_PRIMARY;
    yankee['backgroundColor'] = sizing;
    report['buttonContainer'] = yankee;
    yankee = {};
    sizing = golf[foxtrot];
    sizing = kilo.bind(entity)(sizing);
    sizing = sizing.spacing;
    sizing = sizing.PX_16;
    yankee['marginHorizontal'] = sizing;
    foxtrot = golf[foxtrot];
    foxtrot = kilo.bind(entity)(foxtrot);
    foxtrot = foxtrot.spacing;
    foxtrot = foxtrot.PX_24;
    yankee['marginVertical'] = foxtrot;
    report['textWrapper'] = yankee;
    yankee = {};
    foxtrot = 10;
    foxtrot = golf[foxtrot];
    foxtrot = oscar.bind(entity)(foxtrot);
    foxtrot = foxtrot.TextStyleSheet;
    result = foxtrot.heading-md/bold;
    echo = yankee;
    foxtrot = copyDataProperties(echo, result);
    kilo = 18;
    foxtrot = 'fontSize';
    yankee[foxtrot] = kilo;
    foxtrot = 'marginBottom';
    yankee[foxtrot] = backup;
    report['headerText'] = yankee;
    yankee = {};
    yankee['textAlign'] = romeo;
    report['text'] = yankee;
    report = verify.bind(offset)(report);
    var _closure1_slot14 = report;
    report = options.memo;
    tango = function(argFoo) { // Original name: GuildsEmpty
        _fun116198: for(var _fun116198_ip = 0; ; ) switch(_fun116198_ip) {
 0:
            entity = argFoo;
            tango = entity.selectedGuildId;
            options = entity.style;
            report = undefined;
            var _closure2_slot1 = report;
            entity = _closure1_slot14;
            foxtrot = entity.bind(report)();
            mike = _closure1_slot1;
            oscar = _closure1_slot2;
            entity = 17;
            entity = oscar[entity];
            entity = mike.bind(report)(entity);
            offset = entity.bind(report)();
            var _closure2_slot0 = offset;
            mike = _closure1_slot0;
            entity = 18;
            entity = oscar[entity];
            verify = mike.bind(report)(entity);
            oscar = verify.useStateFromStores;
            entity = _closure1_slot8;
            mike = new Array(1);
            mike[0] = entity;
            entity = function() {
                mike = _closure1_slot8;
                entity = mike.getSessionId;
                mike = entity.bind(mike)();
                entity = null;
                entity = entity != mike;
                return entity;
            };
            mike = oscar.bind(verify)(mike, entity);
            yankee = null;
            if(!mike) { _fun116198_ip = 115; continue _fun116198 }
 112:
            yankee = tango;
 115:
            _closure2_slot1 = yankee;
            oscar = _closure1_slot1;
            backup = _closure1_slot2;
            tango = 19;
            tango = backup[tango];
            oscar = oscar.bind(report)(tango);
            tango = {};
            romeo = _closure1_slot0;
            verify = 20;
            kilo = backup[verify];
            kilo = romeo.bind(report)(kilo);
            kilo = kilo.ImpressionTypes;
            kilo = kilo.VIEW;
            tango['type'] = kilo;
            verify = backup[verify];
            verify = romeo.bind(report)(verify);
            verify = verify.ImpressionNames;
            verify = verify.GUILDS_EMPTY_NUX;
            tango['name'] = verify;
            tango = oscar.bind(report)(tango);
            verify = _closure1_slot4;
            oscar = verify.useEffect;
            tango = new Array(2);
            tango[0] = yankee;
            tango[1] = offset;
            zulu = function() {
                _fun116200: for(var _fun116200_ip = 0; ; ) switch(_fun116200_ip) {
 0:
                    zulu = _closure2_slot1;
                    report = null;
                    if(!(report != zulu)) { _fun116200_ip = 243; continue _fun116200 }
 18:
                    zulu = _closure2_slot0;
                    if(!(report != zulu)) { _fun116200_ip = 243; continue _fun116200 }
 29:
                    golf = _closure1_slot9;
                    oscar = golf.getGuild;
                    tango = _closure2_slot1;
                    tango = oscar.bind(golf)(tango);
                    if(!(report == tango)) { _fun116200_ip = 82; continue _fun116200 }
 54:
                    options = _closure1_slot9;
                    golf = options.getGuild;
                    verify = _closure1_slot10;
                    oscar = verify.getGuildId;
                    oscar = oscar.bind(verify)();
                    tango = golf.bind(options)(oscar);
 82:
                    if(!(report == tango)) { _fun116200_ip = 114; continue _fun116200 }
 86:
                    options = _closure1_slot9;
                    golf = options.getGuild;
                    verify = _closure1_slot10;
                    oscar = verify.getLastSelectedGuildId;
                    oscar = oscar.bind(verify)();
                    tango = golf.bind(options)(oscar);
 114:
                    if(!(report == tango)) { _fun116200_ip = 152; continue _fun116200 }
 118:
                    options = _closure1_slot9;
                    oscar = options.getGuilds;
                    golf = oscar.bind(options)();
                    oscar = options.getGuildIds;
                    options = oscar.bind(options)();
                    oscar = 0;
                    oscar = options[oscar];
                    tango = golf[oscar];
 152:
                    if(!(report != tango)) { _fun116200_ip = 243; continue _fun116200 }
 156:
                    golf = _closure1_slot0;
                    oscar = _closure1_slot2;
                    report = 21;
                    report = oscar[report];
                    oscar = undefined;
                    options = golf.bind(oscar)(report);
                    golf = options.getInitialGuildState;
                    report = tango.id;
                    tango = false;
                    report = golf.bind(options)(report, oscar, tango);
                    tango = _closure1_slot3;
                    zulu = 2;
                    tango = tango.bind(oscar)(report, zulu);
                    zulu = 1;
                    zulu = tango[zulu];
                    var _closure3_slot0 = zulu;
                    zulu = _closure2_slot0;
                    mike = zulu.dispatch;
                    entity = function() {
                        zulu = _closure1_slot0;
                        mike = _closure1_slot2;
                        entity = 22;
                        mike = mike[entity];
                        entity = undefined;
                        entity = zulu.bind(entity)(mike);
                        zulu = entity.CommonActions;
                        mike = zulu.reset;
                        entity = _closure3_slot0;
                        entity = mike.bind(zulu)(entity);
                        return entity;
                    };
                    entity = mike.bind(zulu)(entity);
 243:
                    entity = undefined;
                    return entity;
                }
            };
            zulu = oscar.bind(verify)(zulu, tango);
            entity = null;
            if(!mike) { _fun116198_ip = 474; continue _fun116198 }
 245:
            tango = _closure1_slot13;
            zulu = _closure1_slot6;
            mike = {};
            verify = foxtrot.header;
            oscar = new Array(2);
            oscar[0] = verify;
            oscar[1] = options;
            mike['style'] = oscar;
            verify = _closure1_slot12;
            options = _closure1_slot6;
            oscar = {};
            offset = foxtrot.headerTitle;
            oscar['style'] = offset;
            romeo = _closure1_slot12;
            yankee = _closure1_slot6;
            offset = {};
            foxtrot = foxtrot.headerInner;
            offset['style'] = foxtrot;
            kilo = _closure1_slot12;
            echo = _closure1_slot0;
            update = _closure1_slot2;
            foxtrot = 10;
            foxtrot = update[foxtrot];
            foxtrot = echo.bind(report)(foxtrot);
            backup = foxtrot.Text;
            foxtrot = {'color': 'header-primary', 'variant': 'heading-lg/bold', 'maxFontSizeMultiplier': 1.75, 'accessibilityRole': 'header'};
            sizing = 14;
            output = update[sizing];
            output = echo.bind(report)(output);
            result = output.intl;
            output = result.string;
            sizing = update[sizing];
            sizing = echo.bind(report)(sizing);
            sizing = sizing.t;
            sizing = sizing.7hB4kp;
            sizing = output.bind(result)(sizing);
            foxtrot['children'] = sizing;
            foxtrot = kilo.bind(report)(backup, foxtrot);
            offset['children'] = foxtrot;
            offset = romeo.bind(report)(yankee, offset);
            oscar['children'] = offset;
            options = verify.bind(report)(options, oscar);
            oscar = new Array(2);
            oscar[0] = options;
            verify = _closure1_slot12;
            options = _closure1_slot17;
            golf = {};
            golf = verify.bind(report)(options, golf);
            oscar[1] = golf;
            mike['children'] = oscar;
            entity = tango.bind(report)(zulu, mike);
 474:
            return entity;
        }
    };
    tango = report.bind(options)(tango);
    report = 23;
    report = golf[report];
    golf = oscar.bind(entity)(report);
    oscar = golf.fileFinishedImporting;
    report = 'modules/main_tabs_v2/native/tabs/guilds/empty_states/GuildsEmpty.tsx';
    report = oscar.bind(golf)(report);
    zulu['default'] = tango;
    zulu['GuildsEmptyContent'] = mike;
    return entity;
})();