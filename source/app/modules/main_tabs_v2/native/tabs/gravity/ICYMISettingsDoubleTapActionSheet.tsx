// app/modules/main_tabs_v2/native/tabs/gravity/ICYMISettingsDoubleTapActionSheet.tsx
export default (function(argFoo, argBar, argBaz, _, __, argFre, argPlu) {
    report = argBar;
    golfie = argBaz;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    var _closure1_slot1 = golfie;
    var _closure1_slot2 = oscard;
    entity = global;
    verify = entity.Object;
    option = verify.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = option.bind(verify)(zuuluu, entity, tangon);
    entity = 0;
    tangon = oscard[entity];
    entity = undefined;
    tangon = golfie.bind(entity)(tangon);
    var _closure1_slot3 = tangon;
    tangon = 1;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    golfie = tangon.jsx;
    var _closure1_slot4 = golfie;
    tangon = tangon.jsxs;
    var _closure1_slot5 = tangon;
    tangon = 9;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/main_tabs_v2/native/tabs/gravity/ICYMISettingsDoubleTapActionSheet.tsx';
    tangon = report.bind(oscard)(tangon);
    michal = function() { // Original name: ICYMISettingsDoubleTapActionSheet
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            backup = _closure1_slot0;
            yankee = _closure1_slot2;
            entity = 2;
            entity = yankee[entity];
            tangon = undefined;
            report = backup.bind(tangon)(entity);
            zuuluu = report.useStateFromStoresObject;
            entity = _closure1_slot3;
            michal = new Array(1);
            michal[0] = entity;
            entity = function() {
                michal = _closure1_slot3;
                entity = michal.getState;
                entity = entity.bind(michal)();
                return entity;
            };
            offset = zuuluu.bind(report)(michal, entity);
            var _closure2_slot0 = offset;
            zuuluu = _closure1_slot4;
            entity = 3;
            entity = yankee[entity];
            entity = backup.bind(tangon)(entity);
            michal = entity.ActionSheet;
            entity = {'showGradient': true, 'startExpanded': true};
            golfie = _closure1_slot5;
            report = 4;
            report = yankee[report];
            report = backup.bind(tangon)(report);
            oscard = report.TableRadioGroup;
            report = {};
            kiloes = 5;
            romeon = yankee[kiloes];
            romeon = backup.bind(tangon)(romeon);
            sizing = romeon.intl;
            foxtra = sizing.string;
            romeon = yankee[kiloes];
            romeon = backup.bind(tangon)(romeon);
            romeon = romeon.t;
            romeon = romeon.tAo5Aw;
            romeon = foxtra.bind(sizing)(romeon);
            report['title'] = romeon;
            romeon = yankee[kiloes];
            romeon = backup.bind(tangon)(romeon);
            foxtra = romeon.intl;
            romeon = foxtra.string;
            yankee = yankee[kiloes];
            yankee = backup.bind(tangon)(yankee);
            yankee = yankee.t;
            yankee = yankee.tAo5Aw;
            yankee = romeon.bind(foxtra)(yankee);
            report['accessibilityLabel'] = yankee;
            offset = offset.doubleTapBehavior;
            yankee = null;
            if(!(yankee == offset)) { _fun00002_ip = 265; continue _fun00001 }
 233:
            romeon = _closure1_slot0;
            foxtra = _closure1_slot2;
            yankee = 6;
            yankee = foxtra[yankee];
            yankee = romeon.bind(tangon)(yankee);
            yankee = yankee.GravityICYMIDoubleTapBehavior;
            offset = yankee.DEFAULT;
 265:
            report['defaultValue'] = offset;
            verify = function(argFoo) { // Original name: onChange
                zuuluu = _closure1_slot1;
                michal = _closure1_slot2;
                entity = 7;
                michal = michal[entity];
                entity = undefined;
                zuuluu = zuuluu.bind(entity)(michal);
                michal = zuuluu.setFilters;
                entity = {};
                oscard = _closure2_slot0;
                golfie = entity;
                tangon = copyDataProperties(golfie, oscard);
                report = argFoo;
                tangon = 'doubleTapBehavior';
                entity[tangon] = report;
                entity = michal.bind(zuuluu)(entity);
                return entity;
            };
            report['onChange'] = verify;
            verify = false;
            report['hasIcons'] = verify;
            yankee = _closure1_slot4;
            foxtra = _closure1_slot0;
            backup = _closure1_slot2;
            verify = 8;
            option = backup[verify];
            option = foxtra.bind(tangon)(option);
            offset = option.TableRadioRow;
            option = {};
            romeon = backup[kiloes];
            romeon = foxtra.bind(tangon)(romeon);
            output = romeon.intl;
            sizing = output.string;
            romeon = backup[kiloes];
            romeon = foxtra.bind(tangon)(romeon);
            romeon = romeon.t;
            romeon = romeon.7mmwn5;
            romeon = sizing.bind(output)(romeon);
            option['label'] = romeon;
            romeon = 6;
            sizing = backup[romeon];
            sizing = foxtra.bind(tangon)(sizing);
            sizing = sizing.GravityICYMIDoubleTapBehavior;
            sizing = sizing.DEFAULT;
            option['value'] = sizing;
            offset = yankee.bind(tangon)(offset, option);
            option = new Array(3);
            option[0] = offset;
            offset = backup[verify];
            offset = foxtra.bind(tangon)(offset);
            sizing = offset.TableRadioRow;
            offset = {};
            output = backup[kiloes];
            output = foxtra.bind(tangon)(output);
            echoed = output.intl;
            result = echoed.string;
            output = backup[kiloes];
            output = foxtra.bind(tangon)(output);
            output = output.t;
            output = output.+dHWt7;
            output = result.bind(echoed)(output);
            offset['label'] = output;
            output = backup[romeon];
            output = foxtra.bind(tangon)(output);
            output = output.GravityICYMIDoubleTapBehavior;
            output = output.NOTIFICATIONS;
            offset['value'] = output;
            offset = yankee.bind(tangon)(sizing, offset);
            option[1] = offset;
            verify = backup[verify];
            verify = foxtra.bind(tangon)(verify);
            offset = verify.TableRadioRow;
            verify = {};
            sizing = backup[kiloes];
            sizing = foxtra.bind(tangon)(sizing);
            output = sizing.intl;
            sizing = output.string;
            kiloes = backup[kiloes];
            kiloes = foxtra.bind(tangon)(kiloes);
            kiloes = kiloes.t;
            kiloes = kiloes.HLHJcH;
            kiloes = sizing.bind(output)(kiloes);
            verify['label'] = kiloes;
            romeon = backup[romeon];
            romeon = foxtra.bind(tangon)(romeon);
            romeon = romeon.GravityICYMIDoubleTapBehavior;
            romeon = romeon.BOOKMARKS;
            verify['value'] = romeon;
            verify = yankee.bind(tangon)(offset, verify);
            option[2] = verify;
            report['children'] = option;
            report = golfie.bind(tangon)(oscard, report);
            entity['children'] = report;
            entity = zuuluu.bind(tangon)(michal, entity);
            return entity;
        }
    };
    zuuluu['default'] = michal;
    return entity;
})();