// app/modules/main_tabs_v2/native/tabs/gravity/ICYMISettingsDoubleTapActionSheet.tsx
export default (function(argFoo, argBar, argBaz, _, __, argFred, argPlugh) {
    report = argBar;
    golf = argBaz;
    zulu = argFred;
    oscar = argPlugh;
    var _closure1_slot0 = report;
    var _closure1_slot1 = golf;
    var _closure1_slot2 = oscar;
    entity = global;
    verify = entity.Object;
    options = verify.defineProperty;
    tango = {};
    entity = true;
    tango['value'] = entity;
    entity = '__esModule';
    entity = options.bind(verify)(zulu, entity, tango);
    entity = 0;
    tango = oscar[entity];
    entity = undefined;
    tango = golf.bind(entity)(tango);
    var _closure1_slot3 = tango;
    tango = 1;
    golf = oscar[tango];
    golf = report.bind(entity)(golf);
    golf = golf.jsx;
    var _closure1_slot4 = golf;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.jsxs;
    var _closure1_slot5 = tango;
    tango = 9;
    tango = oscar[tango];
    oscar = report.bind(entity)(tango);
    report = oscar.fileFinishedImporting;
    tango = 'modules/main_tabs_v2/native/tabs/gravity/ICYMISettingsDoubleTapActionSheet.tsx';
    tango = report.bind(oscar)(tango);
    mike = function() { // Original name: ICYMISettingsDoubleTapActionSheet
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            backup = _closure1_slot0;
            yankee = _closure1_slot2;
            entity = 2;
            entity = yankee[entity];
            tango = undefined;
            report = backup.bind(tango)(entity);
            zulu = report.useStateFromStoresObject;
            entity = _closure1_slot3;
            mike = new Array(1);
            mike[0] = entity;
            entity = function() {
                mike = _closure1_slot3;
                entity = mike.getState;
                entity = entity.bind(mike)();
                return entity;
            };
            offset = zulu.bind(report)(mike, entity);
            var _closure2_slot0 = offset;
            zulu = _closure1_slot4;
            entity = 3;
            entity = yankee[entity];
            entity = backup.bind(tango)(entity);
            mike = entity.ActionSheet;
            entity = {'showGradient': true, 'startExpanded': true};
            golf = _closure1_slot5;
            report = 4;
            report = yankee[report];
            report = backup.bind(tango)(report);
            oscar = report.TableRadioGroup;
            report = {};
            kilo = 5;
            romeo = yankee[kilo];
            romeo = backup.bind(tango)(romeo);
            sizing = romeo.intl;
            foxtrot = sizing.string;
            romeo = yankee[kilo];
            romeo = backup.bind(tango)(romeo);
            romeo = romeo.t;
            romeo = romeo.tAo5Aw;
            romeo = foxtrot.bind(sizing)(romeo);
            report['title'] = romeo;
            romeo = yankee[kilo];
            romeo = backup.bind(tango)(romeo);
            foxtrot = romeo.intl;
            romeo = foxtrot.string;
            yankee = yankee[kilo];
            yankee = backup.bind(tango)(yankee);
            yankee = yankee.t;
            yankee = yankee.tAo5Aw;
            yankee = romeo.bind(foxtrot)(yankee);
            report['accessibilityLabel'] = yankee;
            offset = offset.doubleTapBehavior;
            yankee = null;
            if(!(yankee == offset)) { _fun00002_ip = 261; continue _fun00001 }
 229:
            romeo = _closure1_slot0;
            foxtrot = _closure1_slot2;
            yankee = 6;
            yankee = foxtrot[yankee];
            yankee = romeo.bind(tango)(yankee);
            yankee = yankee.GravityICYMIDoubleTapBehavior;
            offset = yankee.DEFAULT;
 261:
            report['value'] = offset;
            verify = function(argFoo) { // Original name: onChange
                zulu = _closure1_slot1;
                mike = _closure1_slot2;
                entity = 7;
                mike = mike[entity];
                entity = undefined;
                zulu = zulu.bind(entity)(mike);
                mike = zulu.setFilters;
                entity = {};
                oscar = _closure2_slot0;
                golf = entity;
                tango = copyDataProperties(golf, oscar);
                report = argFoo;
                tango = 'doubleTapBehavior';
                entity[tango] = report;
                entity = mike.bind(zulu)(entity);
                return entity;
            };
            report['onChange'] = verify;
            verify = false;
            report['hasIcons'] = verify;
            yankee = _closure1_slot4;
            foxtrot = _closure1_slot0;
            backup = _closure1_slot2;
            verify = 8;
            options = backup[verify];
            options = foxtrot.bind(tango)(options);
            offset = options.TableRadioRow;
            options = {};
            romeo = backup[kilo];
            romeo = foxtrot.bind(tango)(romeo);
            output = romeo.intl;
            sizing = output.string;
            romeo = backup[kilo];
            romeo = foxtrot.bind(tango)(romeo);
            romeo = romeo.t;
            romeo = romeo.7mmwn5;
            romeo = sizing.bind(output)(romeo);
            options['label'] = romeo;
            romeo = 6;
            sizing = backup[romeo];
            sizing = foxtrot.bind(tango)(sizing);
            sizing = sizing.GravityICYMIDoubleTapBehavior;
            sizing = sizing.DEFAULT;
            options['value'] = sizing;
            offset = yankee.bind(tango)(offset, options);
            options = new Array(3);
            options[0] = offset;
            offset = backup[verify];
            offset = foxtrot.bind(tango)(offset);
            sizing = offset.TableRadioRow;
            offset = {};
            output = backup[kilo];
            output = foxtrot.bind(tango)(output);
            echo = output.intl;
            result = echo.string;
            output = backup[kilo];
            output = foxtrot.bind(tango)(output);
            output = output.t;
            output = output.+dHWt7;
            output = result.bind(echo)(output);
            offset['label'] = output;
            output = backup[romeo];
            output = foxtrot.bind(tango)(output);
            output = output.GravityICYMIDoubleTapBehavior;
            output = output.NOTIFICATIONS;
            offset['value'] = output;
            offset = yankee.bind(tango)(sizing, offset);
            options[1] = offset;
            verify = backup[verify];
            verify = foxtrot.bind(tango)(verify);
            offset = verify.TableRadioRow;
            verify = {};
            sizing = backup[kilo];
            sizing = foxtrot.bind(tango)(sizing);
            output = sizing.intl;
            sizing = output.string;
            kilo = backup[kilo];
            kilo = foxtrot.bind(tango)(kilo);
            kilo = kilo.t;
            kilo = kilo.HLHJcH;
            kilo = sizing.bind(output)(kilo);
            verify['label'] = kilo;
            romeo = backup[romeo];
            romeo = foxtrot.bind(tango)(romeo);
            romeo = romeo.GravityICYMIDoubleTapBehavior;
            romeo = romeo.BOOKMARKS;
            verify['value'] = romeo;
            verify = yankee.bind(tango)(offset, verify);
            options[2] = verify;
            report['children'] = options;
            report = golf.bind(tango)(oscar, report);
            entity['children'] = report;
            entity = zulu.bind(tango)(mike, entity);
            return entity;
        }
    };
    zulu['default'] = mike;
    return entity;
})();