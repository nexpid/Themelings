// app/modules/main_tabs_v2/native/tabs/gravity/CaughtUpRow.tsx
export default (function(argFoo, argBar, argBaz, argCorge, _, argFred, argPlugh) {
    report = argBar;
    romeo = argBaz;
    zulu = argFred;
    oscar = argPlugh;
    var _closure1_slot0 = report;
    var _closure1_slot1 = romeo;
    var _closure1_slot2 = oscar;
    entity = global;
    options = entity.Object;
    golf = options.defineProperty;
    tango = {};
    entity = true;
    tango['value'] = entity;
    entity = '__esModule';
    entity = golf.bind(options)(zulu, entity, tango);
    entity = 0;
    tango = oscar[entity];
    entity = undefined;
    tango = romeo.bind(entity)(tango);
    var _closure1_slot3 = tango;
    foxtrot = 1;
    tango = oscar[foxtrot];
    tango = romeo.bind(entity)(tango);
    var _closure1_slot4 = tango;
    tango = 2;
    golf = oscar[tango];
    tango = argCorge;
    tango = tango.bind(entity)(golf);
    var _closure1_slot5 = tango;
    tango = 3;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.View;
    var _closure1_slot6 = tango;
    tango = 4;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    offset = tango.ICYMI_MARGIN;
    tango = 5;
    golf = oscar[tango];
    golf = report.bind(entity)(golf);
    golf = golf.jsx;
    var _closure1_slot7 = golf;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.jsxs;
    var _closure1_slot8 = tango;
    tango = 6;
    tango = oscar[tango];
    options = romeo.bind(entity)(tango);
    golf = options.createAnimatedComponent;
    tango = 7;
    tango = oscar[tango];
    tango = report.bind(entity)(tango);
    tango = tango.Text;
    tango = golf.bind(options)(tango);
    var _closure1_slot9 = tango;
    tango = 8;
    tango = oscar[tango];
    options = report.bind(entity)(tango);
    golf = options.createStyles;
    tango = {};
    verify = {'flex': 1, 'display': 'flex', 'alignItems': 'center', 'justifyContent': 'center'};
    yankee = 9;
    backup = oscar[yankee];
    backup = romeo.bind(entity)(backup);
    backup = backup.spacing;
    backup = backup.PX_32;
    verify['marginVertical'] = backup;
    tango['container'] = verify;
    verify = {};
    verify['marginHorizontal'] = offset;
    backup = oscar[yankee];
    backup = romeo.bind(entity)(backup);
    backup = backup.spacing;
    backup = backup.PX_24;
    verify['marginBottom'] = backup;
    tango['textContainer'] = verify;
    verify = {};
    verify['flex'] = foxtrot;
    foxtrot = oscar[yankee];
    foxtrot = romeo.bind(entity)(foxtrot);
    foxtrot = foxtrot.spacing;
    foxtrot = foxtrot.PX_24;
    verify['marginBottom'] = foxtrot;
    tango['recommendedGuildsContainer'] = verify;
    verify = {'display': 'flex', 'alignItems': 'center', 'justifyContent': 'center'};
    foxtrot = oscar[yankee];
    foxtrot = romeo.bind(entity)(foxtrot);
    foxtrot = foxtrot.spacing;
    foxtrot = foxtrot.PX_24;
    verify['marginBottom'] = foxtrot;
    tango['iconWrapper'] = verify;
    verify = {'height': 40, 'width': 40};
    tango['icon'] = verify;
    verify = {'alignSelf': 'center', 'marginBottom': null, 'textAlign': 'center'};
    foxtrot = oscar[yankee];
    foxtrot = romeo.bind(entity)(foxtrot);
    foxtrot = foxtrot.spacing;
    foxtrot = foxtrot.PX_8;
    verify['marginBottom'] = foxtrot;
    tango['headerText'] = verify;
    verify = {'alignSelf': 'center', 'textAlign': 'center'};
    tango['subtitleText'] = verify;
    verify = {'flex': 1, 'width': '100%'};
    yankee = oscar[yankee];
    yankee = romeo.bind(entity)(yankee);
    yankee = yankee.spacing;
    yankee = yankee.PX_12;
    verify['gap'] = yankee;
    verify['paddingHorizontal'] = offset;
    tango['buttonContainer'] = verify;
    verify = {'position': 'absolute', 'top': 0, 'left': 0, 'right': 0, 'height': 150};
    tango['gradient'] = verify;
    tango = golf.bind(options)(tango);
    var _closure1_slot10 = tango;
    tango = {};
    golf = 'function CaughtUpRowTsx1(){const{visibleSharedValue,withTiming,Easing}=this.__closure;return{transform:[{translateY:visibleSharedValue.get()?withTiming(0,{duration:250,easing:Easing.bezier(0.5,1.8,0.5,1)}):-80}],opacity:visibleSharedValue.get()?withTiming(1,{duration:100,easing:Easing.out(Easing.bezierFn(0.33,1,0.68,1))}):0};}';
    tango['code'] = golf;
    var _closure1_slot11 = tango;
    tango = {};
    golf = 'function CaughtUpRowTsx2(){const{visibleSharedValue,withDelay,withSequence,withTiming,Easing}=this.__closure;return{transform:[{translateY:visibleSharedValue.get()?withDelay(80,withSequence(withTiming(8,{duration:100,easing:Easing.inOut(Easing.ease)}),withTiming(0,{duration:300,easing:Easing.out(Easing.ease)}))):0}]};}';
    tango['code'] = golf;
    var _closure1_slot12 = tango;
    tango = {};
    golf = 'function CaughtUpRowTsx3(){const{visibleSharedValue,withDelay,withSequence,withTiming,Easing}=this.__closure;return{transform:[{translateY:visibleSharedValue.get()?withDelay(115,withSequence(withTiming(8,{duration:150,easing:Easing.inOut(Easing.ease)}),withTiming(0,{duration:300,easing:Easing.out(Easing.ease)}))):0}]};}';
    tango['code'] = golf;
    var _closure1_slot13 = tango;
    tango = 22;
    tango = oscar[tango];
    oscar = report.bind(entity)(tango);
    report = oscar.fileFinishedImporting;
    tango = 'modules/main_tabs_v2/native/tabs/gravity/CaughtUpRow.tsx';
    tango = report.bind(oscar)(tango);
    mike = function(argFoo) { // Original name: ExploreServersRow
        mike = argFoo;
        mike = mike.visible;
        var _closure2_slot0 = mike;
        zulu = _closure1_slot10;
        tango = undefined;
        verify = zulu.bind(tango)();
        offset = _closure1_slot0;
        backup = _closure1_slot2;
        golf = 6;
        zulu = backup[golf];
        oscar = offset.bind(tango)(zulu);
        report = oscar.useSharedValue;
        zulu = false;
        options = report.bind(oscar)(zulu);
        var _closure2_slot1 = options;
        oscar = _closure1_slot5;
        yankee = oscar.useEffect;
        report = new Array(2);
        report[0] = mike;
        report[1] = options;
        mike = function() {
            _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
                entity = _closure2_slot0;
                if(!entity) { _fun00002_ip = 31; continue _fun00001 }
 10:
                tango = _closure2_slot1;
                zulu = tango.get;
                zulu = zulu.bind(tango)();
                mike = _closure2_slot0;
                entity = zulu !== mike;
 31:
                if(!entity) { _fun00002_ip = 65; continue _fun00001 }
 34:
                entity = global;
                tango = entity.setTimeout;
                zulu = undefined;
                mike = function() {
                    zulu = _closure2_slot1;
                    mike = zulu.set;
                    entity = true;
                    entity = mike.bind(zulu)(entity);
                    entity = undefined;
                    return entity;
                };
                entity = 500;
                entity = tango.bind(zulu)(mike, entity);
 65:
                entity = undefined;
                return entity;
            }
        };
        mike = yankee.bind(oscar)(mike, report);
        mike = oscar.useState;
        report = mike.bind(oscar)(zulu);
        zulu = _closure1_slot4;
        mike = 2;
        zulu = zulu.bind(tango)(report, mike);
        romeo = 0;
        update = zulu[romeo];
        mike = 1;
        mike = zulu[mike];
        var _closure2_slot2 = mike;
        report = oscar.useCallback;
        zulu = _closure1_slot3;
        mike = function* () {
            entity = function* () { // Original name: ?anon_0_
                _fun00003: for(var _fun00004_ip = 0; ; ) switch(_fun00004_ip) {
 0:
                    StartGenerator();
                    ResumeGenerator(result_out_reg=0, return_bool_out_reg=1);
                    if(mike) { _fun00004_ip = 138; continue _fun00003 }
 10:
                    tango = _closure2_slot2;
                    zulu = undefined;
                    mike = true;
                    mike = tango.bind(zulu)(mike);
                    tango = _closure1_slot0;
                    report = _closure1_slot2;
                    mike = 10;
                    mike = report[mike];
                    options = tango.bind(zulu)(mike);
                    golf = options.trackItemInteraction;
                    oscar = 'caught_up';
                    mike = 'press_explore';
                    mike = golf.bind(options)(oscar, oscar, mike);
                    mike = 11;
                    mike = report[mike];
                    tango = tango.bind(zulu)(mike);
                    mike = tango.maybeFetchGuildDiscoveryCategories;
                    mike = mike.bind(tango)();
                    SaveGenerator(address=100);
 98:
                    return mike;
 100:
                    ResumeGenerator(result_out_reg=1, return_bool_out_reg=3);
                    if(tango) { _fun00004_ip = 135; continue _fun00003 }
 106:
                    tango = global;
                    oscar = tango.setTimeout;
                    report = function() {
                        zulu = _closure1_slot0;
                        mike = _closure1_slot2;
                        entity = 12;
                        mike = mike[entity];
                        entity = undefined;
                        tango = zulu.bind(entity)(mike);
                        zulu = tango.pushICYMIInfoModal;
                        mike = {'extendedOnboarding': true, 'skipIntro': true};
                        mike = zulu.bind(tango)(mike);
                        mike = global;
                        tango = mike.setTimeout;
                        zulu = function() {
                            zulu = _closure2_slot2;
                            entity = undefined;
                            mike = false;
                            mike = zulu.bind(entity)(mike);
                            return entity;
                        };
                        mike = 500;
                        mike = tango.bind(entity)(zulu, mike);
                        return entity;
                    };
                    tango = 100;
                    tango = oscar.bind(zulu)(report, tango);
                    return zulu;
 135:
                    return mike;
 138:
                    return entity;
                }
            };
            return entity;
        };
        zulu = zulu.bind(tango)(mike);
        mike = new Array(0);
        source = report.bind(oscar)(zulu, mike);
        report = oscar.useCallback;
        zulu = function() {
            _fun00005: for(var _fun00006_ip = 0; ; ) switch(_fun00006_ip) {
 0:
                zulu = _closure1_slot0;
                tango = _closure1_slot2;
                entity = 10;
                mike = tango[entity];
                entity = undefined;
                golf = zulu.bind(entity)(mike);
                oscar = golf.trackItemInteraction;
                report = 'caught_up';
                mike = 'press_home';
                mike = oscar.bind(golf)(report, report, mike);
                mike = 13;
                mike = tango[mike];
                zulu = zulu.bind(entity)(mike);
                mike = zulu.getRootNavigationRef;
                report = mike.bind(zulu)();
                mike = null;
                if(!(mike != report)) { _fun00006_ip = 105; continue _fun00005 }
 78:
                tango = report.navigate;
                zulu = {};
                mike = 'guilds';
                zulu['screen'] = mike;
                mike = 'tabs';
                mike = tango.bind(report)(mike, zulu);
 105:
                return entity;
            }
        };
        mike = new Array(0);
        result = report.bind(oscar)(zulu, mike);
        mike = backup[golf];
        report = offset.bind(tango)(mike);
        zulu = report.useAnimatedStyle;
        mike = function() { // Original name: f
            _fun00007: for(var _fun00008_ip = 0; ; ) switch(_fun00008_ip) {
 0:
                entity = {};
                tango = {};
                report = _closure2_slot1;
                zulu = report.get;
                report = zulu.bind(report)();
                zulu = -80;
                if(!report) { _fun00008_ip = 141; continue _fun00007 }
 29:
                offset = _closure1_slot0;
                yankee = _closure1_slot2;
                report = 14;
                report = yankee[report];
                verify = undefined;
                options = offset.bind(verify)(report);
                golf = options.withTiming;
                oscar = {};
                report = 250;
                oscar['duration'] = report;
                report = 6;
                report = yankee[report];
                report = offset.bind(verify)(report);
                romeo = report.Easing;
                yankee = romeo.bezier;
                offset = 0.5;
                kilo = 1.8;
                foxtrot = 1;
                output = romeo;
                sizing = offset;
                backup = offset;
                report = output[yankee](sizing, kilo, backup, foxtrot, romeo);
                oscar['easing'] = report;
                report = 0;
                zulu = golf.bind(options)(report, oscar);
 141:
                tango['translateY'] = zulu;
                zulu = new Array(1);
                zulu[0] = tango;
                entity['transform'] = zulu;
                zulu = _closure2_slot1;
                mike = zulu.get;
                zulu = mike.bind(zulu)();
                mike = 0;
                if(!zulu) { _fun00008_ip = 315; continue _fun00007 }
 179:
                offset = _closure1_slot0;
                yankee = _closure1_slot2;
                zulu = 14;
                zulu = yankee[zulu];
                golf = undefined;
                oscar = offset.bind(golf)(zulu);
                report = oscar.withTiming;
                tango = {};
                zulu = 100;
                tango['duration'] = zulu;
                zulu = 6;
                options = yankee[zulu];
                options = offset.bind(golf)(options);
                verify = options.Easing;
                options = verify.out;
                zulu = yankee[zulu];
                zulu = offset.bind(golf)(zulu);
                romeo = zulu.Easing;
                yankee = romeo.bezierFn;
                sizing = 0.33;
                zulu = 1;
                backup = 0.68;
                output = romeo;
                kilo = zulu;
                foxtrot = zulu;
                golf = output[yankee](sizing, kilo, backup, foxtrot, romeo);
                golf = options.bind(verify)(golf);
                tango['easing'] = golf;
                mike = report.bind(oscar)(zulu, tango);
 315:
                entity['opacity'] = mike;
                return entity;
            }
        };
        yankee = {};
        yankee['visibleSharedValue'] = options;
        oscar = 14;
        foxtrot = backup[oscar];
        foxtrot = offset.bind(tango)(foxtrot);
        foxtrot = foxtrot.withTiming;
        yankee['withTiming'] = foxtrot;
        foxtrot = backup[golf];
        foxtrot = offset.bind(tango)(foxtrot);
        foxtrot = foxtrot.Easing;
        yankee['Easing'] = foxtrot;
        mike['__closure'] = yankee;
        yankee = 6575188656069.0;
        mike['__workletHash'] = yankee;
        yankee = _closure1_slot11;
        mike['__initData'] = yankee;
        vacuum = zulu.bind(report)(mike);
        mike = backup[golf];
        report = offset.bind(tango)(mike);
        zulu = report.useAnimatedStyle;
        mike = function() { // Original name: b
            _fun00009: for(var _fun00010_ip = 0; ; ) switch(_fun00010_ip) {
 0:
                entity = {};
                zulu = {};
                tango = _closure2_slot1;
                mike = tango.get;
                tango = mike.bind(tango)();
                romeo = 0;
                mike = 0;
                if(!tango) { _fun00010_ip = 262; continue _fun00009 }
 30:
                output = _closure1_slot0;
                result = _closure1_slot2;
                foxtrot = 6;
                tango = result[foxtrot];
                sizing = undefined;
                golf = output.bind(sizing)(tango);
                oscar = golf.withDelay;
                tango = result[foxtrot];
                verify = output.bind(sizing)(tango);
                options = verify.withSequence;
                tango = 14;
                report = result[tango];
                backup = output.bind(sizing)(report);
                yankee = backup.withTiming;
                offset = {};
                report = 100;
                offset['duration'] = report;
                report = result[foxtrot];
                report = output.bind(sizing)(report);
                echo = report.Easing;
                kilo = echo.inOut;
                report = result[foxtrot];
                report = output.bind(sizing)(report);
                report = report.Easing;
                report = report.ease;
                report = kilo.bind(echo)(report);
                offset['easing'] = report;
                report = 8;
                report = yankee.bind(backup)(report, offset);
                tango = result[tango];
                yankee = output.bind(sizing)(tango);
                offset = yankee.withTiming;
                tango = {};
                backup = 300;
                tango['duration'] = backup;
                backup = result[foxtrot];
                backup = output.bind(sizing)(backup);
                kilo = backup.Easing;
                backup = kilo.out;
                foxtrot = result[foxtrot];
                foxtrot = output.bind(sizing)(foxtrot);
                foxtrot = foxtrot.Easing;
                foxtrot = foxtrot.ease;
                foxtrot = backup.bind(kilo)(foxtrot);
                tango['easing'] = foxtrot;
                tango = offset.bind(yankee)(romeo, tango);
                report = options.bind(verify)(report, tango);
                tango = 80;
                mike = oscar.bind(golf)(tango, report);
 262:
                zulu['translateY'] = mike;
                mike = new Array(1);
                mike[0] = zulu;
                entity['transform'] = mike;
                return entity;
            }
        };
        yankee = {};
        yankee['visibleSharedValue'] = options;
        foxtrot = backup[golf];
        foxtrot = offset.bind(tango)(foxtrot);
        foxtrot = foxtrot.withDelay;
        yankee['withDelay'] = foxtrot;
        foxtrot = backup[golf];
        foxtrot = offset.bind(tango)(foxtrot);
        foxtrot = foxtrot.withSequence;
        yankee['withSequence'] = foxtrot;
        foxtrot = backup[oscar];
        foxtrot = offset.bind(tango)(foxtrot);
        foxtrot = foxtrot.withTiming;
        yankee['withTiming'] = foxtrot;
        foxtrot = backup[golf];
        foxtrot = offset.bind(tango)(foxtrot);
        foxtrot = foxtrot.Easing;
        yankee['Easing'] = foxtrot;
        mike['__closure'] = yankee;
        yankee = 469742746264.0;
        mike['__workletHash'] = yankee;
        yankee = _closure1_slot12;
        mike['__initData'] = yankee;
        echo = zulu.bind(report)(mike);
        mike = backup[golf];
        zulu = offset.bind(tango)(mike);
        mike = zulu.useAnimatedStyle;
        entity = function() { // Original name: x
            _fun00011: for(var _fun00012_ip = 0; ; ) switch(_fun00012_ip) {
 0:
                entity = {};
                zulu = {};
                tango = _closure2_slot1;
                mike = tango.get;
                tango = mike.bind(tango)();
                romeo = 0;
                mike = 0;
                if(!tango) { _fun00012_ip = 262; continue _fun00011 }
 30:
                output = _closure1_slot0;
                result = _closure1_slot2;
                foxtrot = 6;
                tango = result[foxtrot];
                sizing = undefined;
                golf = output.bind(sizing)(tango);
                oscar = golf.withDelay;
                tango = result[foxtrot];
                verify = output.bind(sizing)(tango);
                options = verify.withSequence;
                tango = 14;
                report = result[tango];
                backup = output.bind(sizing)(report);
                yankee = backup.withTiming;
                offset = {};
                report = 150;
                offset['duration'] = report;
                report = result[foxtrot];
                report = output.bind(sizing)(report);
                echo = report.Easing;
                kilo = echo.inOut;
                report = result[foxtrot];
                report = output.bind(sizing)(report);
                report = report.Easing;
                report = report.ease;
                report = kilo.bind(echo)(report);
                offset['easing'] = report;
                report = 8;
                report = yankee.bind(backup)(report, offset);
                tango = result[tango];
                yankee = output.bind(sizing)(tango);
                offset = yankee.withTiming;
                tango = {};
                backup = 300;
                tango['duration'] = backup;
                backup = result[foxtrot];
                backup = output.bind(sizing)(backup);
                kilo = backup.Easing;
                backup = kilo.out;
                foxtrot = result[foxtrot];
                foxtrot = output.bind(sizing)(foxtrot);
                foxtrot = foxtrot.Easing;
                foxtrot = foxtrot.ease;
                foxtrot = backup.bind(kilo)(foxtrot);
                tango['easing'] = foxtrot;
                tango = offset.bind(yankee)(romeo, tango);
                report = options.bind(verify)(report, tango);
                tango = 115;
                mike = oscar.bind(golf)(tango, report);
 262:
                zulu['translateY'] = mike;
                mike = new Array(1);
                mike[0] = zulu;
                entity['transform'] = mike;
                return entity;
            }
        };
        report = {};
        report['visibleSharedValue'] = options;
        options = backup[golf];
        options = offset.bind(tango)(options);
        options = options.withDelay;
        report['withDelay'] = options;
        options = backup[golf];
        options = offset.bind(tango)(options);
        options = options.withSequence;
        report['withSequence'] = options;
        oscar = backup[oscar];
        oscar = offset.bind(tango)(oscar);
        oscar = oscar.withTiming;
        report['withTiming'] = oscar;
        oscar = backup[golf];
        oscar = offset.bind(tango)(oscar);
        oscar = oscar.Easing;
        report['Easing'] = oscar;
        entity['__closure'] = report;
        report = 14933607481025.0;
        entity['__workletHash'] = report;
        report = _closure1_slot13;
        entity['__initData'] = report;
        control = mike.bind(zulu)(entity);
        entity = 15;
        entity = backup[entity];
        zulu = offset.bind(tango)(entity);
        mike = zulu.useToken;
        foxtrot = _closure1_slot1;
        entity = 9;
        entity = backup[entity];
        entity = foxtrot.bind(tango)(entity);
        entity = entity.colors;
        entity = entity.BG_BRAND;
        yankee = mike.bind(zulu)(entity);
        zulu = _closure1_slot8;
        mike = _closure1_slot6;
        entity = {};
        report = {};
        oscar = verify.container;
        report['style'] = oscar;
        oscar = {};
        options = verify.textContainer;
        oscar['style'] = options;
        options = _closure1_slot7;
        golf = backup[golf];
        golf = foxtrot.bind(tango)(golf);
        sizing = golf.View;
        golf = {};
        sequence = verify.iconWrapper;
        output = new Array(2);
        output[0] = sequence;
        output[1] = vacuum;
        golf['style'] = output;
        output = 16;
        output = backup[output];
        output = offset.bind(tango)(output);
        vacuum = output.FlashIcon;
        output = {'size': 'custom', 'style': null, 'color': 'bg-brand'};
        sequence = verify.icon;
        output['style'] = sequence;
        output = options.bind(tango)(vacuum, output);
        golf['children'] = output;
        sizing = options.bind(tango)(sizing, golf);
        golf = new Array(3);
        golf[0] = sizing;
        sizing = _closure1_slot9;
        kilo = {'variant': 'heading-lg/semibold', 'color': 'header-primary'};
        vacuum = verify.headerText;
        output = new Array(2);
        output[0] = vacuum;
        output[1] = echo;
        kilo['style'] = output;
        echo = 17;
        output = backup[echo];
        output = offset.bind(tango)(output);
        sequence = output.intl;
        vacuum = sequence.string;
        output = backup[echo];
        output = offset.bind(tango)(output);
        output = output.t;
        output = output.xjxffn;
        output = vacuum.bind(sequence)(output);
        kilo['children'] = output;
        kilo = options.bind(tango)(sizing, kilo);
        golf[1] = kilo;
        kilo = {'variant': 'text-md/normal', 'color': 'header-secondary'};
        vacuum = verify.subtitleText;
        output = new Array(2);
        output[0] = vacuum;
        output[1] = control;
        kilo['style'] = output;
        output = backup[echo];
        output = offset.bind(tango)(output);
        vacuum = output.intl;
        control = vacuum.string;
        output = backup[echo];
        output = offset.bind(tango)(output);
        output = output.t;
        output = output.sAApb2;
        output = control.bind(vacuum)(output);
        kilo['children'] = output;
        kilo = options.bind(tango)(sizing, kilo);
        golf[2] = kilo;
        oscar['children'] = golf;
        golf = zulu.bind(tango)(mike, oscar);
        oscar = new Array(2);
        oscar[0] = golf;
        golf = {};
        kilo = verify.buttonContainer;
        golf['style'] = kilo;
        sizing = 18;
        kilo = backup[sizing];
        kilo = offset.bind(tango)(kilo);
        output = kilo.Button;
        kilo = {'size': 'md', 'text': null, 'grow': true, 'variant': 'primary'};
        control = backup[echo];
        control = offset.bind(tango)(control);
        sequence = control.intl;
        vacuum = sequence.string;
        control = backup[echo];
        control = offset.bind(tango)(control);
        control = control.t;
        control = control.lNJYV1;
        control = vacuum.bind(sequence)(control);
        kilo['text'] = control;
        kilo['onPress'] = source;
        kilo['loading'] = update;
        output = options.bind(tango)(output, kilo);
        kilo = new Array(2);
        kilo[0] = output;
        sizing = backup[sizing];
        sizing = offset.bind(tango)(sizing);
        output = sizing.Button;
        sizing = {'size': 'md', 'text': null, 'grow': true, 'variant': 'secondary'};
        update = backup[echo];
        update = offset.bind(tango)(update);
        source = update.intl;
        update = source.string;
        echo = backup[echo];
        echo = offset.bind(tango)(echo);
        echo = echo.t;
        echo = echo.AGrUbm;
        echo = update.bind(source)(echo);
        sizing['text'] = echo;
        sizing['onPress'] = result;
        sizing = options.bind(tango)(output, sizing);
        kilo[1] = sizing;
        golf['children'] = kilo;
        golf = zulu.bind(tango)(mike, golf);
        oscar[1] = golf;
        report['children'] = oscar;
        oscar = zulu.bind(tango)(mike, report);
        report = new Array(3);
        report[0] = oscar;
        oscar = 10;
        oscar = backup[oscar];
        oscar = offset.bind(tango)(oscar);
        golf = oscar.Separator;
        oscar = {};
        oscar = options.bind(tango)(golf, oscar);
        report[1] = oscar;
        oscar = 19;
        oscar = backup[oscar];
        golf = foxtrot.bind(tango)(oscar);
        oscar = {};
        verify = verify.gradient;
        oscar['style'] = verify;
        verify = 20;
        kilo = backup[verify];
        kilo = offset.bind(tango)(kilo);
        kilo = kilo.VerticalGradient;
        kilo = kilo.START;
        oscar['start'] = kilo;
        verify = backup[verify];
        verify = offset.bind(tango)(verify);
        verify = verify.VerticalGradient;
        verify = verify.END;
        oscar['end'] = verify;
        offset = 21;
        verify = backup[offset];
        verify = foxtrot.bind(tango)(verify);
        sizing = verify.bind(tango)(yankee);
        kilo = sizing.alpha;
        verify = 0.2;
        kilo = kilo.bind(sizing)(verify);
        verify = kilo.hex;
        kilo = verify.bind(kilo)();
        verify = new Array(2);
        verify[0] = kilo;
        offset = backup[offset];
        offset = foxtrot.bind(tango)(offset);
        yankee = offset.bind(tango)(yankee);
        offset = yankee.alpha;
        yankee = offset.bind(yankee)(romeo);
        offset = yankee.hex;
        offset = offset.bind(yankee)();
        verify[1] = offset;
        oscar['colors'] = verify;
        verify = 'none';
        oscar['pointerEvents'] = verify;
        oscar = options.bind(tango)(golf, oscar);
        report[2] = oscar;
        entity['children'] = report;
        entity = zulu.bind(tango)(mike, entity);
        return entity;
    };
    zulu['default'] = mike;
    return entity;
})();