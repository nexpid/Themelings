// app/modules/main_tabs_v2/native/tabs/gravity/info_modal/ICYMIInfoScreen.tsx
export default (function(argFoo, argBar, argBaz, argCor, _, argFre, argPlu) {
    report = argBar;
    romeon = argBaz;
    zuuluu = argFre;
    oscard = argPlu;
    var _closure1_slot0 = report;
    var _closure1_slot1 = romeon;
    var _closure1_slot2 = oscard;
    entity = global;
    option = entity.Object;
    golfie = option.defineProperty;
    tangon = {};
    entity = true;
    tangon['value'] = entity;
    entity = '__esModule';
    entity = golfie.bind(option)(zuuluu, entity, tangon);
    entity = 0;
    tangon = oscard[entity];
    entity = undefined;
    tangon = romeon.bind(entity)(tangon);
    var _closure1_slot3 = tangon;
    backup = 1;
    tangon = oscard[backup];
    tangon = romeon.bind(entity)(tangon);
    var _closure1_slot4 = tangon;
    tangon = 2;
    golfie = oscard[tangon];
    tangon = argCor;
    tangon = tangon.bind(entity)(golfie);
    var _closure1_slot5 = tangon;
    tangon = 3;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    golfie = tangon.View;
    var _closure1_slot6 = golfie;
    tangon = tangon.ScrollView;
    var _closure1_slot7 = tangon;
    tangon = 4;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.AnalyticEvents;
    var _closure1_slot8 = tangon;
    tangon = 5;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.ThemeTypes;
    var _closure1_slot9 = tangon;
    tangon = 6;
    golfie = oscard[tangon];
    golfie = report.bind(entity)(golfie);
    golfie = golfie.jsx;
    var _closure1_slot10 = golfie;
    golfie = oscard[tangon];
    golfie = report.bind(entity)(golfie);
    golfie = golfie.jsxs;
    var _closure1_slot11 = golfie;
    tangon = oscard[tangon];
    tangon = report.bind(entity)(tangon);
    tangon = tangon.Fragment;
    var _closure1_slot12 = tangon;
    tangon = 7;
    tangon = oscard[tangon];
    verify = report.bind(entity)(tangon);
    option = verify.createStyles;
    golfie = {};
    tangon = {'backgroundColor': null, 'position': 'relative', 'flex': 1};
    yankee = 8;
    offset = oscard[yankee];
    offset = romeon.bind(entity)(offset);
    offset = offset.colors;
    offset = offset.BG_BASE_SECONDARY;
    tangon['backgroundColor'] = offset;
    golfie['container'] = tangon;
    tangon = {'position': 'absolute', 'justifyContent': 'center', 'left': 12, 'width': 24, 'height': null, 'zIndex': 2};
    foxtra = 12;
    offset = 9;
    offset = oscard[offset];
    offset = report.bind(entity)(offset);
    offset = offset.NAV_BAR_HEIGHT;
    tangon['height'] = offset;
    golfie['closeIcon'] = tangon;
    tangon = {};
    offset = oscard[yankee];
    offset = romeon.bind(entity)(offset);
    offset = offset.colors;
    offset = offset.HEADER_PRIMARY;
    tangon['backgroundColor'] = offset;
    golfie['closeIconColor'] = tangon;
    tangon = {'position': 'absolute', 'top': 0, 'left': 0, 'width': '100%', 'aspectRatio': 1.2515923566878981, 'overflow': 'visible'};
    golfie['bgImage'] = tangon;
    tangon = {'position': 'absolute', 'top': 16, 'width': 361, 'height': 240};
    golfie['headerImg'] = tangon;
    tangon = 32;
    offset = {'marginBottom': 32, 'marginTop': 132};
    golfie['flashIcon'] = offset;
    offset = {'flex': 1, 'paddingHorizontal': 16, 'paddingTop': 16};
    golfie['subContainer'] = offset;
    offset = {'alignItems': 'center', 'paddingHorizontal': 12};
    golfie['header'] = offset;
    offset = {'textAlign': 'center', 'marginTop': 8};
    golfie['headerText'] = offset;
    offset = {'gap': 16, 'padding': 16, 'backgroundColor': null, 'borderRadius': null, 'marginTop': 40};
    kiloes = oscard[yankee];
    kiloes = romeon.bind(entity)(kiloes);
    kiloes = kiloes.colors;
    kiloes = kiloes.CARD_PRIMARY_BG;
    offset['backgroundColor'] = kiloes;
    kiloes = oscard[yankee];
    kiloes = romeon.bind(entity)(kiloes);
    kiloes = kiloes.radii;
    kiloes = kiloes.lg;
    offset['borderRadius'] = kiloes;
    golfie['body'] = offset;
    offset = {'height': 1, 'backgroundColor': null, 'marginLeft': 48};
    kiloes = oscard[yankee];
    kiloes = romeon.bind(entity)(kiloes);
    kiloes = kiloes.colors;
    kiloes = kiloes.BORDER_SUBTLE;
    offset['backgroundColor'] = kiloes;
    golfie['divider'] = offset;
    offset = {'display': 'flex', 'flexDirection': 'row', 'alignItems': 'center', 'overflow': 'hidden', 'gap': 16};
    golfie['infoRow'] = offset;
    offset = {};
    offset['padding'] = yankee;
    kiloes = oscard[yankee];
    kiloes = romeon.bind(entity)(kiloes);
    kiloes = kiloes.colors;
    kiloes = kiloes.REDESIGN_BUTTON_TERTIARY_BACKGROUND;
    offset['backgroundColor'] = kiloes;
    kiloes = oscard[yankee];
    kiloes = romeon.bind(entity)(kiloes);
    kiloes = kiloes.radii;
    kiloes = kiloes.round;
    offset['borderRadius'] = kiloes;
    golfie['infoIcon'] = offset;
    offset = {};
    offset['flexShrink'] = backup;
    golfie['infoText'] = offset;
    offset = {};
    offset['margin'] = foxtra;
    golfie['hint'] = offset;
    offset = {'position': 'absolute', 'bottom': 0};
    foxtra = oscard[yankee];
    foxtra = romeon.bind(entity)(foxtra);
    foxtra = foxtra.spacing;
    foxtra = foxtra.PX_24;
    offset['left'] = foxtra;
    foxtra = oscard[yankee];
    foxtra = romeon.bind(entity)(foxtra);
    foxtra = foxtra.spacing;
    foxtra = foxtra.PX_24;
    offset['right'] = foxtra;
    yankee = oscard[yankee];
    yankee = romeon.bind(entity)(yankee);
    yankee = yankee.spacing;
    yankee = yankee.PX_8;
    offset['paddingBottom'] = yankee;
    golfie['footer'] = offset;
    golfie = option.bind(verify)(golfie);
    var _closure1_slot13 = golfie;
    tangon = oscard[tangon];
    oscard = report.bind(entity)(tangon);
    report = oscard.fileFinishedImporting;
    tangon = 'modules/main_tabs_v2/native/tabs/gravity/info_modal/ICYMIInfoScreen.tsx';
    tangon = report.bind(oscard)(tangon);
    michal = function(argFoo) { // Original name: ICYMIInfoScreen
        _fun00001: for(var _fun00002_ip = 0; ; ) switch(_fun00002_ip) {
 0:
            entity = argFoo;
            romeon = entity.extendedOnboarding;
            var _closure2_slot0 = romeon;
            tangon = undefined;
            var _closure2_slot2 = tangon;
            entity = _closure1_slot13;
            sizing = entity.bind(tangon)();
            kiloes = _closure1_slot1;
            option = _closure1_slot2;
            entity = 10;
            entity = option[entity];
            entity = kiloes.bind(tangon)(entity);
            entity = entity.bind(tangon)();
            record = entity.top;
            verify = entity.bottom;
            entity = 11;
            entity = option[entity];
            entity = kiloes.bind(tangon)(entity);
            sequen = entity.bind(tangon)();
            update = _closure1_slot0;
            entity = 12;
            entity = option[entity];
            michal = update.bind(tangon)(entity);
            entity = michal.useNavigation;
            entity = entity.bind(michal)();
            var _closure2_slot1 = entity;
            zuuluu = _closure1_slot5;
            oscard = zuuluu.useCallback;
            report = _closure1_slot4;
            michal = function* () {
                entity = function* () { // Original name: ?anon_0_
                    _fun00003: for(var _fun00004_ip = 0; ; ) switch(_fun00004_ip) {
 0:
                        StartGenerator();
                        ResumeGenerator(result_out_reg=0, return_bool_out_reg=1);
                        if(michal) { _fun00004_ip = 183; continue _fun00003 }
 10:
                        report = _closure2_slot0;
                        golfie = _closure1_slot1;
                        tangon = _closure1_slot2;
                        if(report) { _fun00004_ip = 57; continue _fun00003 }
 31:
                        report = 15;
                        oscard = tangon[report];
                        report = undefined;
                        oscard = golfie.bind(report)(oscard);
                        report = oscard.pop;
                        report = report.bind(oscard)();
                        _fun00004_ip = 175; continue _fun00003;
 57:
                        report = 13;
                        report = tangon[report];
                        oscard = undefined;
                        verify = golfie.bind(oscard)(report);
                        option = verify.track;
                        report = _closure1_slot8;
                        golfie = report.ICYMI_ONBOARDING_SCREEN_SKIPPED;
                        report = {};
                        offset = 'overview';
                        report['location'] = offset;
                        report = option.bind(verify)(golfie, report);
                        report = _closure2_slot2;
                        zuuluu = true;
                        zuuluu = report.bind(oscard)(zuuluu);
                        zuuluu = _closure1_slot0;
                        michal = 14;
                        michal = tangon[michal];
                        zuuluu = zuuluu.bind(oscard)(michal);
                        michal = zuuluu.maybeFetchGuildDiscoveryCategories;
                        michal = michal.bind(zuuluu)();
                        SaveGenerator(address=143);
 141:
                        return michal;
 143:
                        ResumeGenerator(result_out_reg=1, return_bool_out_reg=2);
                        if(zuuluu) { _fun00004_ip = 180; continue _fun00003 }
 149:
                        zuuluu = global;
                        report = zuuluu.setTimeout;
                        tangon = function() {
                            zuuluu = _closure2_slot1;
                            michal = zuuluu.navigate;
                            entity = 'topics_cloud';
                            entity = michal.bind(zuuluu)(entity);
                            entity = global;
                            tangon = entity.setTimeout;
                            entity = undefined;
                            zuuluu = function() {
                                zuuluu = _closure2_slot2;
                                michal = undefined;
                                entity = false;
                                entity = zuuluu.bind(michal)(entity);
                                return entity;
                            };
                            michal = 500;
                            michal = tangon.bind(entity)(zuuluu, michal);
                            return entity;
                        };
                        zuuluu = 100;
                        zuuluu = report.bind(oscard)(tangon, zuuluu);
 175:
                        zuuluu = undefined;
                        return zuuluu;
 180:
                        return michal;
 183:
                        return entity;
                    }
                };
                return entity;
            };
            report = report.bind(tangon)(michal);
            michal = new Array(2);
            michal[0] = romeon;
            michal[1] = entity;
            yankee = oscard.bind(zuuluu)(report, michal);
            report = zuuluu.useLayoutEffect;
            michal = new Array(1);
            michal[0] = entity;
            entity = function() {
                zuuluu = _closure2_slot1;
                michal = zuuluu.setOptions;
                entity = {};
                tangon = function() { // Original name: header
                    entity = null;
                    return entity;
                };
                entity['header'] = tangon;
                entity = michal.bind(zuuluu)(entity);
                entity = undefined;
                return entity;
            };
            entity = report.bind(zuuluu)(entity, michal);
            michal = zuuluu.useState;
            entity = false;
            zuuluu = michal.bind(zuuluu)(entity);
            michal = _closure1_slot3;
            entity = 2;
            michal = michal.bind(tangon)(zuuluu, entity);
            entity = 0;
            backup = michal[entity];
            entity = 1;
            entity = michal[entity];
            _closure2_slot2 = entity;
            zuuluu = _closure1_slot11;
            michal = _closure1_slot12;
            entity = {};
            ctrled = _closure1_slot10;
            source = _closure1_slot6;
            report = {};
            golfie = {};
            golfie['marginTop'] = record;
            oscard = new Array(2);
            oscard[0] = golfie;
            golfie = sizing.closeIcon;
            oscard[1] = golfie;
            report['style'] = oscard;
            oscard = 16;
            oscard = option[oscard];
            oscard = update.bind(tangon)(oscard);
            golfie = oscard.HeaderIconButton;
            oscard = {};
            offset = 17;
            offset = option[offset];
            offset = kiloes.bind(tangon)(offset);
            oscard['source'] = offset;
            offset = function() { // Original name: onPress
                zuuluu = _closure1_slot1;
                michal = _closure1_slot2;
                entity = 15;
                michal = michal[entity];
                entity = undefined;
                michal = zuuluu.bind(entity)(michal);
                entity = michal.pop;
                entity = entity.bind(michal)();
                return entity;
            };
            oscard['onPress'] = offset;
            output = 18;
            offset = option[output];
            offset = update.bind(tangon)(offset);
            echoed = offset.intl;
            result = echoed.string;
            offset = option[output];
            offset = update.bind(tangon)(offset);
            offset = offset.t;
            offset = offset.cpT0Cg;
            offset = result.bind(echoed)(offset);
            oscard['accessibilityLabel'] = offset;
            offset = sizing.closeIconColor;
            offset = offset.backgroundColor;
            oscard['color'] = offset;
            oscard = ctrled.bind(tangon)(golfie, oscard);
            report['children'] = oscard;
            oscard = ctrled.bind(tangon)(source, report);
            report = new Array(3);
            report[0] = oscard;
            result = _closure1_slot7;
            oscard = {};
            offset = sizing.container;
            golfie = new Array(2);
            golfie[0] = offset;
            offset = {};
            offset['marginBottom'] = verify;
            golfie[1] = offset;
            oscard['style'] = golfie;
            offset = 19;
            golfie = option[offset];
            echoed = kiloes.bind(tangon)(golfie);
            golfie = {};
            update = 20;
            update = option[update];
            update = kiloes.bind(tangon)(update);
            golfie['source'] = update;
            update = sizing.bgImage;
            golfie['style'] = update;
            golfie = ctrled.bind(tangon)(echoed, golfie);
            echoed = new Array(2);
            echoed[0] = golfie;
            update = {};
            vacuum = sizing.subContainer;
            golfie = new Array(2);
            golfie[0] = vacuum;
            vacuum = {};
            config = 8;
            config = option[config];
            config = kiloes.bind(tangon)(config);
            config = config.spacing;
            config = config.PX_12;
            config = record + config;
            vacuum['marginTop'] = config;
            golfie[1] = vacuum;
            update['style'] = golfie;
            golfie = {};
            vacuum = sizing.header;
            golfie['style'] = vacuum;
            option = option[offset];
            kiloes = kiloes.bind(tangon)(option);
            option = {};
            vacuum = _closure1_slot9;
            vacuum = vacuum.LIGHT;
            if(!(sequen !== vacuum)) { _fun00002_ip = 611; continue _fun00001 }
 589:
            sequen = _closure1_slot1;
            config = _closure1_slot2;
            vacuum = 22;
            vacuum = config[vacuum];
            vacuum = sequen.bind(tangon)(vacuum);
            _fun00002_ip = 631; continue _fun00001;
 611:
            config = _closure1_slot1;
            record = _closure1_slot2;
            sequen = 21;
            sequen = record[sequen];
            vacuum = config.bind(tangon)(sequen);
 631:
            option['source'] = vacuum;
            vacuum = sizing.headerImg;
            option['style'] = vacuum;
            option = ctrled.bind(tangon)(kiloes, option);
            ctrled = new Array(4);
            ctrled[0] = option;
            option = _closure1_slot10;
            config = _closure1_slot1;
            kiloes = _closure1_slot2;
            offset = kiloes[offset];
            vacuum = config.bind(tangon)(offset);
            offset = {};
            sequen = _closure1_slot9;
            sequen = sequen.LIGHT;
            sequen = 23;
            sequen = kiloes[sequen];
            sequen = config.bind(tangon)(sequen);
            offset['source'] = sequen;
            sequen = sizing.flashIcon;
            offset['style'] = sequen;
            offset = option.bind(tangon)(vacuum, offset);
            ctrled[1] = offset;
            offset = _closure1_slot0;
            record = 24;
            vacuum = kiloes[record];
            vacuum = offset.bind(tangon)(vacuum);
            sequen = vacuum.Text;
            vacuum = {'variant': 'heading-xl/bold', 'color': 'header-primary'};
            config = kiloes[output];
            config = offset.bind(tangon)(config);
            papara = config.intl;
            cntext = papara.string;
            config = kiloes[output];
            config = offset.bind(tangon)(config);
            config = config.t;
            config = config.jnXV/f;
            config = cntext.bind(papara)(config);
            vacuum['children'] = config;
            vacuum = option.bind(tangon)(sequen, vacuum);
            ctrled[2] = vacuum;
            vacuum = kiloes[record];
            vacuum = offset.bind(tangon)(vacuum);
            sequen = vacuum.Text;
            vacuum = {'variant': 'text-md/normal', 'color': 'header-secondary'};
            config = sizing.headerText;
            vacuum['style'] = config;
            config = kiloes[output];
            config = offset.bind(tangon)(config);
            papara = config.intl;
            cntext = papara.string;
            config = kiloes[output];
            config = offset.bind(tangon)(config);
            config = config.t;
            config = config.9SjvoK;
            config = cntext.bind(papara)(config);
            vacuum['children'] = config;
            vacuum = option.bind(tangon)(sequen, vacuum);
            ctrled[3] = vacuum;
            golfie['children'] = ctrled;
            golfie = zuuluu.bind(tangon)(source, golfie);
            ctrled = new Array(2);
            ctrled[0] = golfie;
            sequen = _closure1_slot11;
            golfie = _closure1_slot6;
            vacuum = {};
            config = {};
            cntext = sizing.body;
            config['style'] = cntext;
            cntext = {};
            papara = sizing.infoRow;
            cntext['style'] = papara;
            papara = {};
            target = sizing.infoIcon;
            papara['style'] = target;
            target = 25;
            target = kiloes[target];
            target = offset.bind(tangon)(target);
            status = target.ServerIcon;
            target = {'size': 'sm', 'color': 'interactive-active'};
            target = option.bind(tangon)(status, target);
            papara['children'] = target;
            target = option.bind(tangon)(golfie, papara);
            papara = new Array(2);
            papara[0] = target;
            target = kiloes[record];
            target = offset.bind(tangon)(target);
            status = target.Text;
            target = {'variant': 'text-md/medium', 'color': 'header-primary'};
            sierra = sizing.infoText;
            target['style'] = sierra;
            sierra = kiloes[output];
            sierra = offset.bind(tangon)(sierra);
            equals = sierra.intl;
            whisks = equals.string;
            sierra = kiloes[output];
            sierra = offset.bind(tangon)(sierra);
            sierra = sierra.t;
            sierra = sierra.knxfqa;
            sierra = whisks.bind(equals)(sierra);
            target['children'] = sierra;
            target = option.bind(tangon)(status, target);
            papara[1] = target;
            cntext['children'] = papara;
            papara = sequen.bind(tangon)(golfie, cntext);
            cntext = new Array(5);
            cntext[0] = papara;
            papara = {};
            target = sizing.divider;
            papara['style'] = target;
            papara = option.bind(tangon)(golfie, papara);
            cntext[1] = papara;
            papara = {};
            target = sizing.infoRow;
            papara['style'] = target;
            target = {};
            status = sizing.infoIcon;
            target['style'] = status;
            status = 26;
            status = kiloes[status];
            status = offset.bind(tangon)(status);
            sierra = status.NewUserIcon;
            status = {'size': 'sm', 'color': 'interactive-active'};
            status = option.bind(tangon)(sierra, status);
            target['children'] = status;
            status = option.bind(tangon)(golfie, target);
            target = new Array(2);
            target[0] = status;
            status = kiloes[record];
            status = offset.bind(tangon)(status);
            sierra = status.Text;
            status = {'variant': 'text-md/medium', 'color': 'header-primary'};
            whisks = sizing.infoText;
            status['style'] = whisks;
            whisks = kiloes[output];
            whisks = offset.bind(tangon)(whisks);
            quebec = whisks.intl;
            equals = quebec.string;
            whisks = kiloes[output];
            whisks = offset.bind(tangon)(whisks);
            whisks = whisks.t;
            whisks = whisks.BnUXZm;
            whisks = equals.bind(quebec)(whisks);
            status['children'] = whisks;
            status = option.bind(tangon)(sierra, status);
            target[1] = status;
            papara['children'] = target;
            papara = sequen.bind(tangon)(golfie, papara);
            cntext[2] = papara;
            papara = {};
            target = sizing.divider;
            papara['style'] = target;
            papara = option.bind(tangon)(golfie, papara);
            cntext[3] = papara;
            papara = {};
            target = sizing.infoRow;
            papara['style'] = target;
            target = {};
            status = sizing.infoIcon;
            target['style'] = status;
            status = 27;
            status = kiloes[status];
            status = offset.bind(tangon)(status);
            sierra = status.CircleCheckIcon;
            status = {'size': 'sm', 'color': 'interactive-active'};
            status = option.bind(tangon)(sierra, status);
            target['children'] = status;
            status = option.bind(tangon)(golfie, target);
            target = new Array(2);
            target[0] = status;
            status = kiloes[record];
            status = offset.bind(tangon)(status);
            sierra = status.Text;
            status = {'variant': 'text-md/medium', 'color': 'header-primary'};
            whisks = sizing.infoText;
            status['style'] = whisks;
            whisks = kiloes[output];
            whisks = offset.bind(tangon)(whisks);
            quebec = whisks.intl;
            equals = quebec.string;
            whisks = kiloes[output];
            whisks = offset.bind(tangon)(whisks);
            whisks = whisks.t;
            whisks = whisks.itb1rq;
            whisks = equals.bind(quebec)(whisks);
            status['children'] = whisks;
            status = option.bind(tangon)(sierra, status);
            target[1] = status;
            papara['children'] = target;
            papara = sequen.bind(tangon)(golfie, papara);
            cntext[4] = papara;
            config['children'] = cntext;
            cntext = sequen.bind(tangon)(golfie, config);
            config = new Array(2);
            config[0] = cntext;
            record = kiloes[record];
            record = offset.bind(tangon)(record);
            cntext = record.Text;
            record = {'variant': 'text-xs/medium', 'color': 'text-muted'};
            papara = sizing.hint;
            record['style'] = papara;
            papara = kiloes[output];
            papara = offset.bind(tangon)(papara);
            sierra = papara.intl;
            status = sierra.format;
            papara = kiloes[output];
            papara = offset.bind(tangon)(papara);
            papara = papara.t;
            target = papara.jVS/hY;
            papara = {};
            limora = function(argFoo, argBar) { // Original name: feedbackHook
                report = _closure1_slot10;
                michal = _closure1_slot0;
                zuuluu = _closure1_slot2;
                entity = 24;
                entity = zuuluu[entity];
                tangon = undefined;
                entity = michal.bind(tangon)(entity);
                zuuluu = entity.Text;
                michal = {'variant': 'text-xs/medium', 'color': 'text-link'};
                entity = function() { // Original name: onPress
                    tangon = _closure1_slot1;
                    entity = _closure1_slot2;
                    zuuluu = 28;
                    zuuluu = entity[zuuluu];
                    oscard = undefined;
                    report = tangon.bind(oscard)(zuuluu);
                    tangon = report.openLazy;
                    zuuluu = _closure1_slot0;
                    michal = 30;
                    michal = entity[michal];
                    zuuluu = zuuluu.bind(oscard)(michal);
                    michal = 29;
                    michal = entity[michal];
                    entity = entity.paths;
                    zuuluu = zuuluu.bind(oscard)(michal, entity);
                    michal = 'ICYMIFeedbackSheet';
                    entity = {};
                    entity = tangon.bind(report)(zuuluu, michal, entity);
                    return entity;
                };
                michal['onPress'] = entity;
                entity = argFoo;
                michal['children'] = entity;
                entity = argBar;
                entity = report.bind(tangon)(zuuluu, michal, entity);
                return entity;
            };
            papara['feedbackHook'] = limora;
            papara = status.bind(sierra)(target, papara);
            record['children'] = papara;
            record = option.bind(tangon)(cntext, record);
            config[1] = record;
            vacuum['children'] = config;
            vacuum = sequen.bind(tangon)(golfie, vacuum);
            ctrled[1] = vacuum;
            update['children'] = ctrled;
            update = zuuluu.bind(tangon)(source, update);
            echoed[1] = update;
            oscard['children'] = echoed;
            oscard = zuuluu.bind(tangon)(result, oscard);
            report[1] = oscard;
            oscard = {};
            result = {};
            result['marginBottom'] = verify;
            verify = new Array(2);
            verify[0] = result;
            sizing = sizing.footer;
            verify[1] = sizing;
            oscard['style'] = verify;
            verify = 31;
            verify = kiloes[verify];
            verify = offset.bind(tangon)(verify);
            offset = verify.Button;
            verify = {};
            kiloes = 'lg';
            verify['size'] = kiloes;
            verify['loading'] = backup;
            sizing = _closure1_slot0;
            foxtra = _closure1_slot2;
            backup = foxtra[output];
            backup = sizing.bind(tangon)(backup);
            kiloes = backup.intl;
            backup = kiloes.string;
            foxtra = foxtra[output];
            foxtra = sizing.bind(tangon)(foxtra);
            foxtra = foxtra.t;
            if(romeon) { _fun00002_ip = 1865; continue _fun00001 }
 1852:
            romeon = foxtra.+IrDzM;
            romeon = backup.bind(kiloes)(romeon);
            _fun00002_ip = 1876; continue _fun00001;
 1865:
            foxtra = foxtra.LhlgY2;
            romeon = backup.bind(kiloes)(foxtra);
 1876:
            verify['text'] = romeon;
            verify['onPress'] = yankee;
            verify = option.bind(tangon)(offset, verify);
            oscard['children'] = verify;
            oscard = option.bind(tangon)(golfie, oscard);
            report[2] = oscard;
            entity['children'] = report;
            entity = zuuluu.bind(tangon)(michal, entity);
            return entity;
        }
    };
    zuuluu['default'] = michal;
    return entity;
})();